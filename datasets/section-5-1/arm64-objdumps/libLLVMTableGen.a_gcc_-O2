In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMTableGen.a_gcc_-O2:

Error.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvmL12PrintMessageENS_8ArrayRefINS_5SMLocEEENS_9SourceMgr8DiagKindERKNS_5TwineE>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	stp	x21, x22, [sp, #48]
  10:	mov	x22, x0
  14:	mov	x21, x1
  18:	cbnz	w2, 30 <_ZN4llvmL12PrintMessageENS_8ArrayRefINS_5SMLocEEENS_9SourceMgr8DiagKindERKNS_5TwineE+0x30>
  1c:	adrp	x0, 0 <_ZN4llvmL12PrintMessageENS_8ArrayRefINS_5SMLocEEENS_9SourceMgr8DiagKindERKNS_5TwineE>
  20:	ldr	x0, [x0]
  24:	ldr	w1, [x0]
  28:	add	w1, w1, #0x1
  2c:	str	w1, [x0]
  30:	cbnz	x21, 6c <_ZN4llvmL12PrintMessageENS_8ArrayRefINS_5SMLocEEENS_9SourceMgr8DiagKindERKNS_5TwineE+0x6c>
  34:	adrp	x0, 8 <_ZN4llvmL12PrintMessageENS_8ArrayRefINS_5SMLocEEENS_9SourceMgr8DiagKindERKNS_5TwineE+0x8>
  38:	mov	w1, #0x1                   	// #1
  3c:	strb	w1, [sp]
  40:	mov	x6, #0x0                   	// #0
  44:	ldr	x0, [x0]
  48:	mov	x7, #0x0                   	// #0
  4c:	mov	x4, #0x0                   	// #0
  50:	mov	x5, #0x0                   	// #0
  54:	mov	x1, #0x0                   	// #0
  58:	bl	0 <_ZNK4llvm9SourceMgr12PrintMessageENS_5SMLocENS0_8DiagKindERKNS_5TwineENS_8ArrayRefINS_7SMRangeEEENS6_INS_7SMFixItEEEb>
  5c:	ldp	x29, x30, [sp, #16]
  60:	ldp	x21, x22, [sp, #48]
  64:	add	sp, sp, #0x80
  68:	ret
  6c:	stp	x19, x20, [sp, #32]
  70:	adrp	x20, 8 <_ZN4llvmL12PrintMessageENS_8ArrayRefINS_5SMLocEEENS_9SourceMgr8DiagKindERKNS_5TwineE+0x8>
  74:	mov	w0, #0x1                   	// #1
  78:	ldr	x1, [x22]
  7c:	strb	w0, [sp]
  80:	ldr	x20, [x20]
  84:	mov	x6, #0x0                   	// #0
  88:	mov	x7, #0x0                   	// #0
  8c:	mov	x4, #0x0                   	// #0
  90:	mov	x0, x20
  94:	mov	x5, #0x0                   	// #0
  98:	bl	0 <_ZNK4llvm9SourceMgr12PrintMessageENS_5SMLocENS0_8DiagKindERKNS_5TwineENS_8ArrayRefINS_7SMRangeEEENS6_INS_7SMFixItEEEb>
  9c:	cmp	x21, #0x1
  a0:	b.ls	124 <_ZN4llvmL12PrintMessageENS_8ArrayRefINS_5SMLocEEENS_9SourceMgr8DiagKindERKNS_5TwineE+0x124>  // b.plast
  a4:	mov	w19, #0x1                   	// #1
  a8:	stp	x23, x24, [sp, #64]
  ac:	adrp	x23, 0 <_ZN4llvmL12PrintMessageENS_8ArrayRefINS_5SMLocEEENS_9SourceMgr8DiagKindERKNS_5TwineE>
  b0:	add	x23, x23, #0x0
  b4:	stp	x25, x26, [sp, #80]
  b8:	mov	w25, w19
  bc:	add	x26, sp, #0x68
  c0:	mov	x2, #0x1                   	// #1
  c4:	mov	w24, #0x103                 	// #259
  c8:	ldr	x1, [x22, x2, lsl #3]
  cc:	strb	w25, [sp]
  d0:	add	w19, w19, #0x1
  d4:	mov	w2, #0x3                   	// #3
  d8:	mov	x3, x26
  dc:	mov	x0, x20
  e0:	mov	x6, #0x0                   	// #0
  e4:	mov	x7, #0x0                   	// #0
  e8:	mov	x4, #0x0                   	// #0
  ec:	mov	x5, #0x0                   	// #0
  f0:	stp	x23, xzr, [sp, #104]
  f4:	strh	w24, [sp, #120]
  f8:	bl	0 <_ZNK4llvm9SourceMgr12PrintMessageENS_5SMLocENS0_8DiagKindERKNS_5TwineENS_8ArrayRefINS_7SMRangeEEENS6_INS_7SMFixItEEEb>
  fc:	cmp	x21, w19, uxtw
 100:	mov	w2, w19
 104:	b.hi	c8 <_ZN4llvmL12PrintMessageENS_8ArrayRefINS_5SMLocEEENS_9SourceMgr8DiagKindERKNS_5TwineE+0xc8>  // b.pmore
 108:	ldp	x29, x30, [sp, #16]
 10c:	ldp	x19, x20, [sp, #32]
 110:	ldp	x21, x22, [sp, #48]
 114:	ldp	x23, x24, [sp, #64]
 118:	ldp	x25, x26, [sp, #80]
 11c:	add	sp, sp, #0x80
 120:	ret
 124:	ldp	x19, x20, [sp, #32]
 128:	b	5c <_ZN4llvmL12PrintMessageENS_8ArrayRefINS_5SMLocEEENS_9SourceMgr8DiagKindERKNS_5TwineE+0x5c>
 12c:	nop

0000000000000130 <_ZN4llvm9PrintNoteERKNS_5TwineE>:
 130:	stp	x29, x30, [sp, #-32]!
 134:	mov	x29, sp
 138:	stp	x19, x20, [sp, #16]
 13c:	mov	x20, x0
 140:	bl	0 <_ZN4llvm9WithColor4noteEv>
 144:	mov	x19, x0
 148:	mov	x0, x20
 14c:	mov	x1, x19
 150:	bl	0 <_ZNK4llvm5Twine5printERNS_11raw_ostreamE>
 154:	ldp	x1, x0, [x19, #16]
 158:	cmp	x1, x0
 15c:	b.eq	180 <_ZN4llvm9PrintNoteERKNS_5TwineE+0x50>  // b.none
 160:	mov	w1, #0xa                   	// #10
 164:	strb	w1, [x0]
 168:	ldr	x0, [x19, #24]
 16c:	add	x0, x0, #0x1
 170:	str	x0, [x19, #24]
 174:	ldp	x19, x20, [sp, #16]
 178:	ldp	x29, x30, [sp], #32
 17c:	ret
 180:	mov	x0, x19
 184:	adrp	x1, 0 <_ZN4llvmL12PrintMessageENS_8ArrayRefINS_5SMLocEEENS_9SourceMgr8DiagKindERKNS_5TwineE>
 188:	ldp	x19, x20, [sp, #16]
 18c:	add	x1, x1, #0x0
 190:	ldp	x29, x30, [sp], #32
 194:	mov	x2, #0x1                   	// #1
 198:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 19c:	nop

00000000000001a0 <_ZN4llvm9PrintNoteENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>:
 1a0:	mov	x3, x2
 1a4:	mov	w2, #0x3                   	// #3
 1a8:	b	0 <_ZN4llvmL12PrintMessageENS_8ArrayRefINS_5SMLocEEENS_9SourceMgr8DiagKindERKNS_5TwineE>
 1ac:	nop

00000000000001b0 <_ZN4llvm12PrintWarningENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>:
 1b0:	mov	x3, x2
 1b4:	mov	w2, #0x1                   	// #1
 1b8:	b	0 <_ZN4llvmL12PrintMessageENS_8ArrayRefINS_5SMLocEEENS_9SourceMgr8DiagKindERKNS_5TwineE>
 1bc:	nop

00000000000001c0 <_ZN4llvm12PrintWarningEPKcRKNS_5TwineE>:
 1c0:	sub	sp, sp, #0x20
 1c4:	adrp	x3, 8 <_ZN4llvmL12PrintMessageENS_8ArrayRefINS_5SMLocEEENS_9SourceMgr8DiagKindERKNS_5TwineE+0x8>
 1c8:	mov	x2, x0
 1cc:	mov	w0, #0x1                   	// #1
 1d0:	mov	x6, #0x0                   	// #0
 1d4:	mov	x7, #0x0                   	// #0
 1d8:	stp	x29, x30, [sp, #16]
 1dc:	add	x29, sp, #0x10
 1e0:	mov	x4, #0x0                   	// #0
 1e4:	mov	x5, #0x0                   	// #0
 1e8:	strb	w0, [sp]
 1ec:	ldr	x0, [x3]
 1f0:	mov	x3, x1
 1f4:	mov	x1, x2
 1f8:	mov	w2, #0x1                   	// #1
 1fc:	bl	0 <_ZNK4llvm9SourceMgr12PrintMessageENS_5SMLocENS0_8DiagKindERKNS_5TwineENS_8ArrayRefINS_7SMRangeEEENS6_INS_7SMFixItEEEb>
 200:	ldp	x29, x30, [sp, #16]
 204:	add	sp, sp, #0x20
 208:	ret
 20c:	nop

0000000000000210 <_ZN4llvm12PrintWarningERKNS_5TwineE>:
 210:	stp	x29, x30, [sp, #-32]!
 214:	mov	x29, sp
 218:	stp	x19, x20, [sp, #16]
 21c:	mov	x20, x0
 220:	bl	0 <_ZN4llvm9WithColor7warningEv>
 224:	mov	x19, x0
 228:	mov	x0, x20
 22c:	mov	x1, x19
 230:	bl	0 <_ZNK4llvm5Twine5printERNS_11raw_ostreamE>
 234:	ldp	x1, x0, [x19, #16]
 238:	cmp	x1, x0
 23c:	b.eq	260 <_ZN4llvm12PrintWarningERKNS_5TwineE+0x50>  // b.none
 240:	mov	w1, #0xa                   	// #10
 244:	strb	w1, [x0]
 248:	ldr	x0, [x19, #24]
 24c:	add	x0, x0, #0x1
 250:	str	x0, [x19, #24]
 254:	ldp	x19, x20, [sp, #16]
 258:	ldp	x29, x30, [sp], #32
 25c:	ret
 260:	mov	x0, x19
 264:	adrp	x1, 0 <_ZN4llvmL12PrintMessageENS_8ArrayRefINS_5SMLocEEENS_9SourceMgr8DiagKindERKNS_5TwineE>
 268:	ldp	x19, x20, [sp, #16]
 26c:	add	x1, x1, #0x0
 270:	ldp	x29, x30, [sp], #32
 274:	mov	x2, #0x1                   	// #1
 278:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 27c:	nop

0000000000000280 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>:
 280:	mov	x3, x2
 284:	mov	w2, #0x0                   	// #0
 288:	b	0 <_ZN4llvmL12PrintMessageENS_8ArrayRefINS_5SMLocEEENS_9SourceMgr8DiagKindERKNS_5TwineE>
 28c:	nop

0000000000000290 <_ZN4llvm10PrintErrorEPKcRKNS_5TwineE>:
 290:	sub	sp, sp, #0x20
 294:	adrp	x3, 8 <_ZN4llvmL12PrintMessageENS_8ArrayRefINS_5SMLocEEENS_9SourceMgr8DiagKindERKNS_5TwineE+0x8>
 298:	mov	x2, x0
 29c:	mov	w0, #0x1                   	// #1
 2a0:	mov	x6, #0x0                   	// #0
 2a4:	mov	x7, #0x0                   	// #0
 2a8:	stp	x29, x30, [sp, #16]
 2ac:	add	x29, sp, #0x10
 2b0:	mov	x4, #0x0                   	// #0
 2b4:	mov	x5, #0x0                   	// #0
 2b8:	strb	w0, [sp]
 2bc:	ldr	x0, [x3]
 2c0:	mov	x3, x1
 2c4:	mov	x1, x2
 2c8:	mov	w2, #0x0                   	// #0
 2cc:	bl	0 <_ZNK4llvm9SourceMgr12PrintMessageENS_5SMLocENS0_8DiagKindERKNS_5TwineENS_8ArrayRefINS_7SMRangeEEENS6_INS_7SMFixItEEEb>
 2d0:	ldp	x29, x30, [sp, #16]
 2d4:	add	sp, sp, #0x20
 2d8:	ret
 2dc:	nop

00000000000002e0 <_ZN4llvm10PrintErrorERKNS_5TwineE>:
 2e0:	stp	x29, x30, [sp, #-32]!
 2e4:	mov	x29, sp
 2e8:	stp	x19, x20, [sp, #16]
 2ec:	mov	x20, x0
 2f0:	bl	0 <_ZN4llvm9WithColor5errorEv>
 2f4:	mov	x19, x0
 2f8:	mov	x0, x20
 2fc:	mov	x1, x19
 300:	bl	0 <_ZNK4llvm5Twine5printERNS_11raw_ostreamE>
 304:	ldp	x1, x0, [x19, #16]
 308:	cmp	x1, x0
 30c:	b.eq	330 <_ZN4llvm10PrintErrorERKNS_5TwineE+0x50>  // b.none
 310:	mov	w1, #0xa                   	// #10
 314:	strb	w1, [x0]
 318:	ldr	x0, [x19, #24]
 31c:	add	x0, x0, #0x1
 320:	str	x0, [x19, #24]
 324:	ldp	x19, x20, [sp, #16]
 328:	ldp	x29, x30, [sp], #32
 32c:	ret
 330:	mov	x0, x19
 334:	adrp	x1, 0 <_ZN4llvmL12PrintMessageENS_8ArrayRefINS_5SMLocEEENS_9SourceMgr8DiagKindERKNS_5TwineE>
 338:	ldp	x19, x20, [sp, #16]
 33c:	add	x1, x1, #0x0
 340:	ldp	x29, x30, [sp], #32
 344:	mov	x2, #0x1                   	// #1
 348:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 34c:	nop

0000000000000350 <_ZN4llvm15PrintFatalErrorERKNS_5TwineE>:
 350:	stp	x29, x30, [sp, #-16]!
 354:	mov	x29, sp
 358:	bl	2e0 <_ZN4llvm10PrintErrorERKNS_5TwineE>
 35c:	bl	0 <_ZN4llvm3sys20RunInterruptHandlersEv>
 360:	mov	w0, #0x1                   	// #1
 364:	bl	0 <exit>

0000000000000368 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>:
 368:	stp	x29, x30, [sp, #-16]!
 36c:	mov	x29, sp
 370:	bl	280 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
 374:	bl	0 <_ZN4llvm3sys20RunInterruptHandlersEv>
 378:	mov	w0, #0x1                   	// #1
 37c:	bl	0 <exit>

Disassembly of section .text._ZN4llvm9SourceMgrD2Ev:

0000000000000000 <_ZN4llvm9SourceMgrD1Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	ldr	x20, [x0, #24]
  14:	str	x21, [sp, #32]
  18:	ldr	x21, [x0, #32]
  1c:	cmp	x20, x21
  20:	b.eq	4c <_ZN4llvm9SourceMgrD1Ev+0x4c>  // b.none
  24:	nop
  28:	mov	x1, x20
  2c:	add	x20, x20, #0x20
  30:	ldr	x0, [x1], #16
  34:	cmp	x0, x1
  38:	b.eq	40 <_ZN4llvm9SourceMgrD1Ev+0x40>  // b.none
  3c:	bl	0 <_ZdlPv>
  40:	cmp	x21, x20
  44:	b.ne	28 <_ZN4llvm9SourceMgrD1Ev+0x28>  // b.any
  48:	ldr	x21, [x19, #24]
  4c:	cbz	x21, 58 <_ZN4llvm9SourceMgrD1Ev+0x58>
  50:	mov	x0, x21
  54:	bl	0 <_ZdlPv>
  58:	ldp	x20, x21, [x19]
  5c:	cmp	x20, x21
  60:	b.eq	80 <_ZN4llvm9SourceMgrD1Ev+0x80>  // b.none
  64:	nop
  68:	mov	x0, x20
  6c:	add	x20, x20, #0x18
  70:	bl	0 <_ZN4llvm9SourceMgr9SrcBufferD1Ev>
  74:	cmp	x21, x20
  78:	b.ne	68 <_ZN4llvm9SourceMgrD1Ev+0x68>  // b.any
  7c:	ldr	x21, [x19]
  80:	cbz	x21, 98 <_ZN4llvm9SourceMgrD1Ev+0x98>
  84:	mov	x0, x21
  88:	ldp	x19, x20, [sp, #16]
  8c:	ldr	x21, [sp, #32]
  90:	ldp	x29, x30, [sp], #48
  94:	b	0 <_ZdlPv>
  98:	ldp	x19, x20, [sp, #16]
  9c:	ldr	x21, [sp, #32]
  a0:	ldp	x29, x30, [sp], #48
  a4:	ret

Disassembly of section .text.startup:

0000000000000000 <_GLOBAL__sub_I_Error.cpp>:
   0:	adrp	x1, 8 <_GLOBAL__sub_I_Error.cpp+0x8>
   4:	adrp	x2, 0 <__dso_handle>
   8:	adrp	x0, 0 <_GLOBAL__sub_I_Error.cpp>
   c:	add	x2, x2, #0x0
  10:	ldr	x1, [x1]
  14:	add	x0, x0, #0x0
  18:	stp	xzr, xzr, [x1]
  1c:	stp	xzr, xzr, [x1, #16]
  20:	stp	xzr, xzr, [x1, #32]
  24:	stp	xzr, xzr, [x1, #48]
  28:	b	0 <__cxa_atexit>

JSONBackend.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>:
       0:	cbz	x0, 3c <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0+0x3c>
       4:	stp	x29, x30, [sp, #-32]!
       8:	mov	x1, x0
       c:	mov	x29, sp
      10:	str	x19, [sp, #16]
      14:	mov	x19, x0
      18:	ldr	x0, [x1], #16
      1c:	cmp	x0, x1
      20:	b.eq	28 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0+0x28>  // b.none
      24:	bl	0 <_ZdlPv>
      28:	mov	x0, x19
      2c:	mov	x1, #0x20                  	// #32
      30:	ldr	x19, [sp, #16]
      34:	ldp	x29, x30, [sp], #32
      38:	b	0 <_ZdlPvm>
      3c:	ret

0000000000000040 <_ZN4llvm13isa_impl_wrapINS_10StringInitEPKNS_4InitES4_E4doitERKS4_.isra.0.part.0>:
      40:	stp	x29, x30, [sp, #-16]!
      44:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
      48:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
      4c:	mov	x29, sp
      50:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
      54:	add	x3, x3, #0x0
      58:	add	x1, x1, #0x0
      5c:	add	x0, x0, #0x0
      60:	mov	w2, #0x69                  	// #105
      64:	bl	0 <__assert_fail>

0000000000000068 <_ZN4llvm3isaINS_7BitInitEPKNS_4InitEEEbRKT0_.isra.0.part.0>:
      68:	stp	x29, x30, [sp, #-16]!
      6c:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
      70:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
      74:	mov	x29, sp
      78:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
      7c:	add	x3, x3, #0x0
      80:	add	x1, x1, #0x0
      84:	add	x0, x0, #0x0
      88:	mov	w2, #0x69                  	// #105
      8c:	bl	0 <__assert_fail>

0000000000000090 <_ZN4llvm3isaINS_8BitsInitEPKNS_4InitEEEbRKT0_.isra.0.part.0>:
      90:	stp	x29, x30, [sp, #-16]!
      94:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
      98:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
      9c:	mov	x29, sp
      a0:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
      a4:	add	x3, x3, #0x0
      a8:	add	x1, x1, #0x0
      ac:	add	x0, x0, #0x0
      b0:	mov	w2, #0x69                  	// #105
      b4:	bl	0 <__assert_fail>

00000000000000b8 <_ZN4llvm3isaINS_7IntInitEPKNS_4InitEEEbRKT0_.isra.0.part.0>:
      b8:	stp	x29, x30, [sp, #-16]!
      bc:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
      c0:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
      c4:	mov	x29, sp
      c8:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
      cc:	add	x3, x3, #0x0
      d0:	add	x1, x1, #0x0
      d4:	add	x0, x0, #0x0
      d8:	mov	w2, #0x69                  	// #105
      dc:	bl	0 <__assert_fail>

00000000000000e0 <_ZN4llvm3isaINS_8CodeInitEPKNS_4InitEEEbRKT0_.isra.0.part.0>:
      e0:	stp	x29, x30, [sp, #-16]!
      e4:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
      e8:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
      ec:	mov	x29, sp
      f0:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
      f4:	add	x3, x3, #0x0
      f8:	add	x1, x1, #0x0
      fc:	add	x0, x0, #0x0
     100:	mov	w2, #0x69                  	// #105
     104:	bl	0 <__assert_fail>

0000000000000108 <_ZN4llvm3isaINS_8ListInitEPKNS_4InitEEEbRKT0_.isra.0.part.0>:
     108:	stp	x29, x30, [sp, #-16]!
     10c:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     110:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     114:	mov	x29, sp
     118:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     11c:	add	x3, x3, #0x0
     120:	add	x1, x1, #0x0
     124:	add	x0, x0, #0x0
     128:	mov	w2, #0x69                  	// #105
     12c:	bl	0 <__assert_fail>

0000000000000130 <_ZN4llvm3isaINS_7DefInitEPKNS_4InitEEEbRKT0_.isra.0.part.0>:
     130:	stp	x29, x30, [sp, #-16]!
     134:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     138:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     13c:	mov	x29, sp
     140:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     144:	add	x3, x3, #0x0
     148:	add	x1, x1, #0x0
     14c:	add	x0, x0, #0x0
     150:	mov	w2, #0x69                  	// #105
     154:	bl	0 <__assert_fail>

0000000000000158 <_ZN4llvm13isa_impl_wrapINS_7VarInitEPKNS_4InitES4_E4doitERKS4_.isra.0.part.0>:
     158:	stp	x29, x30, [sp, #-16]!
     15c:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     160:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     164:	mov	x29, sp
     168:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     16c:	add	x3, x3, #0x0
     170:	add	x1, x1, #0x0
     174:	add	x0, x0, #0x0
     178:	mov	w2, #0x69                  	// #105
     17c:	bl	0 <__assert_fail>

0000000000000180 <_ZN4llvm3isaINS_10VarBitInitEPKNS_4InitEEEbRKT0_.isra.0.part.0>:
     180:	stp	x29, x30, [sp, #-16]!
     184:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     188:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     18c:	mov	x29, sp
     190:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     194:	add	x3, x3, #0x0
     198:	add	x1, x1, #0x0
     19c:	add	x0, x0, #0x0
     1a0:	mov	w2, #0x69                  	// #105
     1a4:	bl	0 <__assert_fail>

00000000000001a8 <_ZN4llvm3isaINS_7DagInitEPKNS_4InitEEEbRKT0_.isra.0.part.0>:
     1a8:	stp	x29, x30, [sp, #-16]!
     1ac:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     1b0:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     1b4:	mov	x29, sp
     1b8:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     1bc:	add	x3, x3, #0x0
     1c0:	add	x1, x1, #0x0
     1c4:	add	x0, x0, #0x0
     1c8:	mov	w2, #0x69                  	// #105
     1cc:	bl	0 <__assert_fail>

00000000000001d0 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE>:
     1d0:	stp	x29, x30, [sp, #-288]!
     1d4:	mov	x29, sp
     1d8:	stp	x25, x26, [sp, #64]
     1dc:	mov	x26, x8
     1e0:	stp	x27, x28, [sp, #80]
     1e4:	mov	x28, x1
     1e8:	ldrb	w1, [x1, #8]
     1ec:	cmp	w1, #0x18
     1f0:	b.ne	20c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x3c>  // b.any
     1f4:	strb	wzr, [x8]
     1f8:	mov	x0, x26
     1fc:	ldp	x25, x26, [sp, #64]
     200:	ldp	x27, x28, [sp, #80]
     204:	ldp	x29, x30, [sp], #288
     208:	ret
     20c:	cmp	w1, #0x2
     210:	b.eq	3c4 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x1f4>  // b.none
     214:	mov	x27, x0
     218:	cmp	w1, #0x3
     21c:	b.eq	3ec <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x21c>  // b.none
     220:	cmp	w1, #0x8
     224:	b.eq	4bc <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x2ec>  // b.none
     228:	cmp	w1, #0x12
     22c:	b.eq	4d0 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x300>  // b.none
     230:	cmp	w1, #0x4
     234:	b.eq	51c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x34c>  // b.none
     238:	stp	x19, x20, [sp, #16]
     23c:	cmp	w1, #0x9
     240:	stp	x21, x22, [sp, #32]
     244:	b.eq	52c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x35c>  // b.none
     248:	add	x22, sp, #0xa0
     24c:	add	x21, sp, #0xb8
     250:	mov	x0, x22
     254:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     258:	add	x1, x1, #0x0
     25c:	stp	x23, x24, [sp, #48]
     260:	add	x20, sp, #0xd8
     264:	stp	xzr, xzr, [sp, #184]
     268:	add	x19, sp, #0xf8
     26c:	str	xzr, [sp, #200]
     270:	str	wzr, [sp, #208]
     274:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     278:	mov	x1, x22
     27c:	mov	x0, x21
     280:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     284:	mov	x23, x0
     288:	ldr	x1, [x28]
     28c:	mov	x8, x20
     290:	mov	x0, x28
     294:	ldr	x1, [x1, #40]
     298:	blr	x1
     29c:	mov	x1, x20
     2a0:	mov	x0, x19
     2a4:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     2a8:	mov	x0, x23
     2ac:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     2b0:	mov	x1, x19
     2b4:	mov	x0, x23
     2b8:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     2bc:	mov	x0, x19
     2c0:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     2c4:	ldr	x0, [sp, #216]
     2c8:	add	x1, x20, #0x10
     2cc:	cmp	x0, x1
     2d0:	b.eq	2d8 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x108>  // b.none
     2d4:	bl	0 <_ZdlPv>
     2d8:	ldr	x0, [sp, #160]
     2dc:	cbz	x0, 2e4 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x114>
     2e0:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     2e4:	ldrb	w0, [x28, #8]
     2e8:	cmp	w0, #0x6
     2ec:	b.eq	ad8 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x908>  // b.none
     2f0:	cmp	w0, #0x13
     2f4:	b.eq	a48 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x878>  // b.none
     2f8:	cmp	w0, #0x15
     2fc:	b.eq	944 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x774>  // b.none
     300:	cmp	w0, #0x5
     304:	b.eq	5e0 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x410>  // b.none
     308:	ldr	x1, [x28]
     30c:	mov	x0, x28
     310:	ldr	x1, [x1, #32]
     314:	blr	x1
     318:	tst	w0, #0xff
     31c:	b.ne	5c0 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x3f0>  // b.any
     320:	mov	x0, x20
     324:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     328:	add	x1, x1, #0x0
     32c:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     330:	mov	x1, x20
     334:	mov	x0, x21
     338:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     33c:	mov	x20, x0
     340:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     344:	mov	x0, x19
     348:	add	x1, x1, #0x0
     34c:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     350:	mov	x0, x20
     354:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     358:	mov	x1, x19
     35c:	mov	x0, x20
     360:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     364:	mov	x0, x19
     368:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     36c:	ldr	x0, [sp, #216]
     370:	cbz	x0, 378 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x1a8>
     374:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     378:	ldp	x0, x4, [sp, #184]
     37c:	mov	w6, #0x6                   	// #6
     380:	ldr	w1, [sp, #208]
     384:	mov	x5, #0x1                   	// #1
     388:	str	wzr, [sp, #208]
     38c:	ldr	x2, [sp, #200]
     390:	str	xzr, [sp, #200]
     394:	add	x0, x0, #0x1
     398:	stp	x0, xzr, [sp, #184]
     39c:	strb	w6, [x26]
     3a0:	stp	x5, x4, [x26, #8]
     3a4:	str	x2, [x26, #24]
     3a8:	str	w1, [x26, #32]
     3ac:	mov	x0, x21
     3b0:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     3b4:	ldp	x19, x20, [sp, #16]
     3b8:	ldp	x21, x22, [sp, #32]
     3bc:	ldp	x23, x24, [sp, #48]
     3c0:	b	1f8 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x28>
     3c4:	ldrb	w0, [x28, #24]
     3c8:	mov	w1, #0x3                   	// #3
     3cc:	strb	w1, [x8]
     3d0:	and	x0, x0, #0xff
     3d4:	str	x0, [x8, #8]
     3d8:	mov	x0, x26
     3dc:	ldp	x25, x26, [sp, #64]
     3e0:	ldp	x27, x28, [sp, #80]
     3e4:	ldp	x29, x30, [sp], #288
     3e8:	ret
     3ec:	stp	x21, x22, [sp, #32]
     3f0:	ldr	w21, [x28, #32]
     3f4:	stp	xzr, xzr, [sp, #216]
     3f8:	str	xzr, [sp, #232]
     3fc:	cbz	w21, 4ac <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x2dc>
     400:	stp	x19, x20, [sp, #16]
     404:	mov	w0, w21
     408:	mov	x19, #0x0                   	// #0
     40c:	stp	x23, x24, [sp, #48]
     410:	add	x20, sp, #0xf8
     414:	add	x23, x28, #0x28
     418:	add	x22, sp, #0xd8
     41c:	cmp	w0, w19
     420:	b.ls	460 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x290>  // b.plast
     424:	ldr	x1, [x23, x19, lsl #3]
     428:	mov	x8, x20
     42c:	mov	x0, x27
     430:	add	x19, x19, #0x1
     434:	bl	1d0 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE>
     438:	mov	x1, x20
     43c:	mov	x0, x22
     440:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     444:	mov	x0, x20
     448:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     44c:	cmp	w21, w19
     450:	b.ls	480 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x2b0>  // b.plast
     454:	ldr	w0, [x28, #32]
     458:	cmp	w0, w19
     45c:	b.hi	424 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x254>  // b.pmore
     460:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     464:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     468:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     46c:	add	x3, x3, #0x0
     470:	add	x1, x1, #0x0
     474:	add	x0, x0, #0x0
     478:	mov	w2, #0x22e                 	// #558
     47c:	bl	0 <__assert_fail>
     480:	ldp	x19, x20, [sp, #16]
     484:	ldp	x23, x24, [sp, #48]
     488:	ldp	x5, x4, [sp, #216]
     48c:	ldr	x2, [sp, #232]
     490:	mov	x0, x26
     494:	mov	w1, #0x7                   	// #7
     498:	ldp	x21, x22, [sp, #32]
     49c:	strb	w1, [x0], #8
     4a0:	str	x5, [x26, #8]
     4a4:	stp	x4, x2, [x0, #8]
     4a8:	b	1f8 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x28>
     4ac:	mov	x2, #0x0                   	// #0
     4b0:	mov	x5, #0x0                   	// #0
     4b4:	mov	x4, #0x0                   	// #0
     4b8:	b	490 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x2c0>
     4bc:	ldr	x0, [x28, #24]
     4c0:	mov	w1, #0x3                   	// #3
     4c4:	strb	w1, [x8]
     4c8:	str	x0, [x8, #8]
     4cc:	b	1f8 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x28>
     4d0:	ldp	x0, x1, [x28, #24]
     4d4:	mov	w2, #0x4                   	// #4
     4d8:	strb	w2, [x8]
     4dc:	mov	x2, #0x0                   	// #0
     4e0:	stp	x0, x1, [x8, #8]
     4e4:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
     4e8:	tst	w0, #0xff
     4ec:	b.ne	1f8 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x28>  // b.any
     4f0:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     4f4:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     4f8:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     4fc:	add	x3, x3, #0x0
     500:	add	x1, x1, #0x0
     504:	add	x0, x0, #0x0
     508:	mov	w2, #0x144                 	// #324
     50c:	stp	x19, x20, [sp, #16]
     510:	stp	x21, x22, [sp, #32]
     514:	stp	x23, x24, [sp, #48]
     518:	bl	0 <__assert_fail>
     51c:	ldp	x1, x2, [x28, #24]
     520:	mov	x0, x8
     524:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     528:	b	1f8 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x28>
     52c:	ldr	w19, [x28, #32]
     530:	mov	x0, #0x28                  	// #40
     534:	add	x20, sp, #0xd8
     538:	add	x22, x28, x0
     53c:	add	x21, sp, #0xf8
     540:	stp	xzr, xzr, [sp, #216]
     544:	add	x19, x0, w19, uxtw #3
     548:	add	x19, x28, x19
     54c:	str	xzr, [sp, #232]
     550:	cmp	x22, x19
     554:	b.eq	580 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x3b0>  // b.none
     558:	ldr	x1, [x22], #8
     55c:	mov	x8, x21
     560:	mov	x0, x27
     564:	bl	1d0 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE>
     568:	mov	x1, x21
     56c:	mov	x0, x20
     570:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     574:	mov	x0, x21
     578:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     57c:	b	550 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x380>
     580:	mov	x1, x26
     584:	mov	w4, #0x7                   	// #7
     588:	ldr	x2, [sp, #216]
     58c:	mov	x0, x20
     590:	strb	w4, [x1], #8
     594:	str	x2, [x26, #8]
     598:	ldr	x2, [sp, #224]
     59c:	str	x2, [x1, #8]
     5a0:	ldr	x2, [sp, #232]
     5a4:	str	x2, [x1, #16]
     5a8:	stp	xzr, xzr, [sp, #216]
     5ac:	str	xzr, [sp, #232]
     5b0:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     5b4:	ldp	x19, x20, [sp, #16]
     5b8:	ldp	x21, x22, [sp, #32]
     5bc:	b	1f8 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x28>
     5c0:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     5c4:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     5c8:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     5cc:	add	x3, x3, #0x0
     5d0:	add	x1, x1, #0x0
     5d4:	add	x0, x0, #0x0
     5d8:	mov	w2, #0x75                  	// #117
     5dc:	bl	0 <__assert_fail>
     5e0:	mov	x0, x20
     5e4:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     5e8:	add	x1, x1, #0x0
     5ec:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     5f0:	mov	x1, x20
     5f4:	mov	x0, x21
     5f8:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     5fc:	mov	x23, x0
     600:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     604:	add	x1, x1, #0x0
     608:	mov	x0, x19
     60c:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     610:	mov	x0, x23
     614:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     618:	mov	x1, x19
     61c:	mov	x0, x23
     620:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     624:	mov	x0, x19
     628:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     62c:	ldr	x0, [sp, #216]
     630:	cbz	x0, 638 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x468>
     634:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     638:	mov	x0, x20
     63c:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     640:	add	x1, x1, #0x0
     644:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     648:	mov	x1, x20
     64c:	mov	x0, x21
     650:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     654:	mov	x23, x0
     658:	ldr	x1, [x28, #32]
     65c:	mov	x8, x19
     660:	mov	x0, x27
     664:	bl	1d0 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE>
     668:	mov	x0, x23
     66c:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     670:	mov	x1, x19
     674:	mov	x0, x23
     678:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     67c:	mov	x0, x19
     680:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     684:	ldr	x0, [sp, #216]
     688:	cbz	x0, 690 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x4c0>
     68c:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     690:	ldr	x24, [x28, #40]
     694:	cbz	x24, 714 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x544>
     698:	mov	x0, x22
     69c:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     6a0:	add	x1, x1, #0x0
     6a4:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     6a8:	mov	x1, x22
     6ac:	mov	x0, x21
     6b0:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     6b4:	mov	x23, x0
     6b8:	ldr	x1, [x24]
     6bc:	mov	x8, x20
     6c0:	mov	x0, x24
     6c4:	ldr	x1, [x1, #48]
     6c8:	blr	x1
     6cc:	mov	x1, x20
     6d0:	mov	x0, x19
     6d4:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     6d8:	mov	x0, x23
     6dc:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     6e0:	mov	x1, x19
     6e4:	mov	x0, x23
     6e8:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     6ec:	mov	x0, x19
     6f0:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     6f4:	ldr	x0, [sp, #216]
     6f8:	add	x1, x20, #0x10
     6fc:	cmp	x0, x1
     700:	b.eq	708 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x538>  // b.none
     704:	bl	0 <_ZdlPv>
     708:	ldr	x0, [sp, #160]
     70c:	cbz	x0, 714 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x544>
     710:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     714:	ldr	w0, [x28, #48]
     718:	add	x25, sp, #0x88
     71c:	str	w0, [sp, #120]
     720:	add	x0, x28, #0x38
     724:	mov	x23, #0x0                   	// #0
     728:	mov	x24, #0x38                  	// #56
     72c:	str	x0, [sp, #96]
     730:	add	x0, x20, #0x10
     734:	str	x0, [sp, #104]
     738:	stp	xzr, xzr, [sp, #136]
     73c:	str	xzr, [sp, #152]
     740:	ldr	w0, [sp, #120]
     744:	cmp	w23, w0
     748:	b.cs	8a0 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x6d0>  // b.hs, b.nlast
     74c:	ldr	w0, [x28, #48]
     750:	stp	xzr, xzr, [sp, #160]
     754:	cmp	w23, w0
     758:	str	xzr, [sp, #176]
     75c:	b.cs	880 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x6b0>  // b.hs, b.nlast
     760:	ldr	x0, [sp, #96]
     764:	lsl	x5, x23, #3
     768:	mov	x8, x19
     76c:	str	x5, [sp, #112]
     770:	str	w23, [sp, #124]
     774:	ldr	x1, [x0, x23, lsl #3]
     778:	mov	x0, x27
     77c:	bl	1d0 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE>
     780:	mov	x1, x19
     784:	mov	x0, x22
     788:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     78c:	mov	x0, x19
     790:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     794:	ldr	w0, [x28, #52]
     798:	ldr	w6, [sp, #124]
     79c:	ldr	x5, [sp, #112]
     7a0:	cmp	w6, w0
     7a4:	b.cs	860 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x690>  // b.hs, b.nlast
     7a8:	ldr	w0, [x28, #48]
     7ac:	add	x5, x28, x5
     7b0:	add	x0, x24, w0, uxtw #3
     7b4:	ldr	x0, [x5, x0]
     7b8:	cbz	x0, 844 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x674>
     7bc:	ldr	x1, [x0]
     7c0:	mov	x8, x20
     7c4:	ldr	x1, [x1, #48]
     7c8:	blr	x1
     7cc:	mov	x1, x20
     7d0:	mov	x0, x19
     7d4:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     7d8:	mov	x1, x19
     7dc:	mov	x0, x22
     7e0:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     7e4:	mov	x0, x19
     7e8:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     7ec:	ldr	x1, [sp, #104]
     7f0:	ldr	x0, [sp, #216]
     7f4:	cmp	x0, x1
     7f8:	b.eq	800 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x630>  // b.none
     7fc:	bl	0 <_ZdlPv>
     800:	ldp	x7, x6, [sp, #160]
     804:	mov	w2, #0x7                   	// #7
     808:	ldr	x5, [sp, #176]
     80c:	mov	x1, x19
     810:	mov	x0, x25
     814:	stp	xzr, xzr, [sp, #160]
     818:	add	x23, x23, #0x1
     81c:	str	xzr, [sp, #176]
     820:	strb	w2, [sp, #248]
     824:	stp	x7, x6, [sp, #256]
     828:	str	x5, [sp, #272]
     82c:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     830:	mov	x0, x19
     834:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     838:	mov	x0, x22
     83c:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     840:	b	740 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x570>
     844:	mov	x1, x19
     848:	mov	x0, x22
     84c:	strb	wzr, [sp, #248]
     850:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     854:	mov	x0, x19
     858:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     85c:	b	800 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x630>
     860:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     864:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     868:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     86c:	add	x3, x3, #0x0
     870:	add	x1, x1, #0x0
     874:	add	x0, x0, #0x0
     878:	mov	w2, #0x545                 	// #1349
     87c:	bl	0 <__assert_fail>
     880:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     884:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     888:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     88c:	add	x3, x3, #0x0
     890:	add	x1, x1, #0x0
     894:	add	x0, x0, #0x0
     898:	mov	w2, #0x540                 	// #1344
     89c:	bl	0 <__assert_fail>
     8a0:	mov	x0, x20
     8a4:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     8a8:	add	x1, x1, #0x0
     8ac:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     8b0:	mov	x1, x20
     8b4:	mov	x0, x21
     8b8:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     8bc:	mov	x20, x0
     8c0:	ldp	x4, x2, [sp, #136]
     8c4:	mov	w5, #0x7                   	// #7
     8c8:	ldr	x1, [sp, #152]
     8cc:	stp	xzr, xzr, [sp, #136]
     8d0:	str	xzr, [sp, #152]
     8d4:	strb	w5, [sp, #248]
     8d8:	stp	x4, x2, [sp, #256]
     8dc:	str	x1, [sp, #272]
     8e0:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     8e4:	mov	x1, x19
     8e8:	mov	x0, x20
     8ec:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     8f0:	mov	x0, x19
     8f4:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     8f8:	ldr	x0, [sp, #216]
     8fc:	cbz	x0, 904 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x734>
     900:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     904:	ldp	x1, x5, [sp, #184]
     908:	mov	w2, #0x6                   	// #6
     90c:	strb	w2, [x26]
     910:	mov	x0, #0x1                   	// #1
     914:	ldr	w2, [sp, #208]
     918:	ldr	x4, [sp, #200]
     91c:	stp	x0, x5, [x26, #8]
     920:	add	x1, x1, x0
     924:	str	x4, [x26, #24]
     928:	add	x0, sp, #0x88
     92c:	str	w2, [x26, #32]
     930:	stp	x1, xzr, [sp, #184]
     934:	str	xzr, [sp, #200]
     938:	str	wzr, [sp, #208]
     93c:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     940:	b	3ac <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x1dc>
     944:	ldr	x23, [x28, #24]
     948:	cbz	x23, a44 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x874>
     94c:	ldrb	w0, [x23, #8]
     950:	cmp	w0, #0x13
     954:	b.ne	308 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x138>  // b.any
     958:	mov	x0, x20
     95c:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     960:	add	x1, x1, #0x0
     964:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     968:	mov	x1, x20
     96c:	mov	x0, x21
     970:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     974:	mov	x22, x0
     978:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     97c:	add	x1, x1, #0x0
     980:	mov	x0, x19
     984:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     988:	mov	x0, x22
     98c:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     990:	mov	x1, x19
     994:	mov	x0, x22
     998:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     99c:	mov	x0, x19
     9a0:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     9a4:	ldr	x0, [sp, #216]
     9a8:	cbz	x0, 9b0 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x7e0>
     9ac:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     9b0:	mov	x0, x20
     9b4:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     9b8:	add	x1, x1, #0x0
     9bc:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     9c0:	mov	x1, x20
     9c4:	mov	x0, x21
     9c8:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     9cc:	mov	x22, x0
     9d0:	mov	x0, x23
     9d4:	bl	0 <_ZNK4llvm7VarInit7getNameEv>
     9d8:	mov	x2, x1
     9dc:	mov	x1, x0
     9e0:	mov	x0, x19
     9e4:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     9e8:	mov	x0, x22
     9ec:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     9f0:	mov	x1, x19
     9f4:	mov	x0, x22
     9f8:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     9fc:	mov	x0, x19
     a00:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     a04:	ldr	x0, [sp, #216]
     a08:	cbz	x0, a10 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x840>
     a0c:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     a10:	mov	x0, x20
     a14:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     a18:	add	x1, x1, #0x0
     a1c:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     a20:	mov	x1, x20
     a24:	mov	x0, x21
     a28:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     a2c:	mov	x20, x0
     a30:	ldr	w1, [x28, #32]
     a34:	mov	w2, #0x3                   	// #3
     a38:	strb	w2, [sp, #248]
     a3c:	str	x1, [sp, #256]
     a40:	b	354 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x184>
     a44:	bl	158 <_ZN4llvm13isa_impl_wrapINS_7VarInitEPKNS_4InitES4_E4doitERKS4_.isra.0.part.0>
     a48:	mov	x0, x20
     a4c:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     a50:	add	x1, x1, #0x0
     a54:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     a58:	mov	x1, x20
     a5c:	mov	x0, x21
     a60:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     a64:	adrp	x23, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     a68:	add	x1, x23, #0x0
     a6c:	mov	x22, x0
     a70:	mov	x0, x19
     a74:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     a78:	mov	x0, x22
     a7c:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     a80:	mov	x1, x19
     a84:	mov	x0, x22
     a88:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     a8c:	mov	x0, x19
     a90:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     a94:	ldr	x0, [sp, #216]
     a98:	cbz	x0, aa0 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x8d0>
     a9c:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     aa0:	add	x1, x23, #0x0
     aa4:	mov	x0, x20
     aa8:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     aac:	mov	x1, x20
     ab0:	mov	x0, x21
     ab4:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     ab8:	mov	x20, x0
     abc:	mov	x0, x28
     ac0:	bl	0 <_ZNK4llvm7VarInit7getNameEv>
     ac4:	mov	x2, x1
     ac8:	mov	x1, x0
     acc:	mov	x0, x19
     ad0:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     ad4:	b	350 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x180>
     ad8:	mov	x0, x20
     adc:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     ae0:	add	x1, x1, #0x0
     ae4:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     ae8:	mov	x1, x20
     aec:	mov	x0, x21
     af0:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     af4:	adrp	x23, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     af8:	add	x1, x23, #0x0
     afc:	mov	x22, x0
     b00:	mov	x0, x19
     b04:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     b08:	mov	x0, x22
     b0c:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     b10:	mov	x1, x19
     b14:	mov	x0, x22
     b18:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     b1c:	mov	x0, x19
     b20:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     b24:	ldr	x0, [sp, #216]
     b28:	cbz	x0, b30 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x960>
     b2c:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     b30:	mov	x0, x20
     b34:	add	x1, x23, #0x0
     b38:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     b3c:	mov	x1, x20
     b40:	mov	x0, x21
     b44:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     b48:	mov	x20, x0
     b4c:	ldr	x1, [x28, #24]
     b50:	ldr	x2, [x1]
     b54:	cbz	x2, b74 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x9a4>
     b58:	ldrb	w0, [x2, #8]
     b5c:	cmp	w0, #0x12
     b60:	b.ne	b78 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x9a8>  // b.any
     b64:	ldp	x1, x2, [x2, #24]
     b68:	mov	x0, x19
     b6c:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     b70:	b	350 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x180>
     b74:	bl	40 <_ZN4llvm13isa_impl_wrapINS_10StringInitEPKNS_4InitES4_E4doitERKS4_.isra.0.part.0>
     b78:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     b7c:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     b80:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     b84:	add	x3, x3, #0x0
     b88:	add	x1, x1, #0x0
     b8c:	add	x0, x0, #0x0
     b90:	mov	w2, #0x108                 	// #264
     b94:	bl	0 <__assert_fail>

0000000000000b98 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE>:
     b98:	sub	sp, sp, #0x3c0
     b9c:	mov	x3, #0x16                  	// #22
     ba0:	adrp	x2, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     ba4:	add	x2, x2, #0x0
     ba8:	stp	x29, x30, [sp]
     bac:	mov	x29, sp
     bb0:	stp	xzr, x2, [sp, #224]
     bb4:	mov	x2, x1
     bb8:	str	x3, [sp, #240]
     bbc:	str	x0, [sp, #152]
     bc0:	ldp	x0, x1, [sp, #232]
     bc4:	stp	x19, x20, [sp, #16]
     bc8:	stp	x21, x22, [sp, #32]
     bcc:	stp	x23, x24, [sp, #48]
     bd0:	stp	x25, x26, [sp, #64]
     bd4:	stp	x27, x28, [sp, #80]
     bd8:	str	x2, [sp, #144]
     bdc:	mov	x2, #0x0                   	// #0
     be0:	stp	xzr, xzr, [sp, #344]
     be4:	str	xzr, [sp, #360]
     be8:	str	wzr, [sp, #368]
     bec:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
     bf0:	tst	w0, #0xff
     bf4:	b.eq	1ccc <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1134>  // b.none
     bf8:	add	x1, sp, #0xe0
     bfc:	add	x0, sp, #0x158
     c00:	str	x0, [sp, #168]
     c04:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     c08:	mov	w2, #0x3                   	// #3
     c0c:	mov	x1, #0x1                   	// #1
     c10:	mov	x19, x0
     c14:	add	x23, sp, #0x320
     c18:	strb	w2, [sp, #800]
     c1c:	str	x1, [sp, #808]
     c20:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     c24:	mov	x1, x23
     c28:	mov	x0, x19
     c2c:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     c30:	mov	x0, x23
     c34:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     c38:	ldr	x19, [sp, #224]
     c3c:	cbz	x19, c60 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xc8>
     c40:	mov	x1, x19
     c44:	ldr	x0, [x1], #16
     c48:	cmp	x0, x1
     c4c:	b.eq	c54 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xbc>  // b.none
     c50:	bl	0 <_ZdlPv>
     c54:	mov	x0, x19
     c58:	mov	x1, #0x20                  	// #32
     c5c:	bl	0 <_ZdlPvm>
     c60:	ldr	x0, [sp, #152]
     c64:	add	x24, sp, #0x2f8
     c68:	str	x24, [sp, #776]
     c6c:	add	x1, sp, #0x2f0
     c70:	str	x24, [sp, #784]
     c74:	ldr	x0, [x0]
     c78:	str	x1, [sp, #112]
     c7c:	str	wzr, [sp, #760]
     c80:	add	x1, x0, #0x8
     c84:	str	x1, [sp, #104]
     c88:	ldr	x21, [x0, #24]
     c8c:	str	xzr, [sp, #768]
     c90:	str	xzr, [sp, #792]
     c94:	cmp	x21, x1
     c98:	b.eq	dc8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x230>  // b.none
     c9c:	add	x0, sp, #0x2a0
     ca0:	adrp	x26, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     ca4:	str	x0, [sp, #120]
     ca8:	add	x0, x26, #0x0
     cac:	str	x0, [sp, #136]
     cb0:	add	x0, sp, #0x2c8
     cb4:	str	x0, [sp, #128]
     cb8:	ldr	x0, [x21, #64]
     cbc:	mov	x8, x23
     cc0:	mov	x19, x24
     cc4:	ldr	x0, [x0]
     cc8:	ldr	x1, [x0]
     ccc:	ldr	x1, [x1, #48]
     cd0:	blr	x1
     cd4:	ldr	x28, [sp, #768]
     cd8:	cbz	x28, d7c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1e4>
     cdc:	ldr	x26, [sp, #800]
     ce0:	mov	x20, #0x7fffffff            	// #2147483647
     ce4:	ldr	x27, [sp, #808]
     ce8:	mov	x22, #0xffffffff80000000    	// #-2147483648
     cec:	nop
     cf0:	ldr	x25, [x28, #40]
     cf4:	cmp	x25, x27
     cf8:	csel	x2, x25, x27, ls  // ls = plast
     cfc:	cbz	x2, d10 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x178>
     d00:	ldr	x0, [x28, #32]
     d04:	mov	x1, x26
     d08:	bl	0 <memcmp>
     d0c:	cbnz	w0, d24 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x18c>
     d10:	sub	x0, x25, x27
     d14:	cmp	x0, x20
     d18:	b.gt	d28 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x190>
     d1c:	cmp	x0, x22
     d20:	b.lt	103c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x4a4>  // b.tstop
     d24:	tbnz	w0, #31, 103c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x4a4>
     d28:	mov	x19, x28
     d2c:	ldr	x28, [x28, #16]
     d30:	cbnz	x28, cf0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x158>
     d34:	cmp	x19, x24
     d38:	b.eq	d7c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1e4>  // b.none
     d3c:	ldr	x20, [x19, #40]
     d40:	cmp	x27, x20
     d44:	csel	x2, x27, x20, ls  // ls = plast
     d48:	cbz	x2, d5c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1c4>
     d4c:	ldr	x1, [x19, #32]
     d50:	mov	x0, x26
     d54:	bl	0 <memcmp>
     d58:	cbnz	w0, d78 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1e0>
     d5c:	sub	x0, x27, x20
     d60:	mov	x1, #0x7fffffff            	// #2147483647
     d64:	cmp	x0, x1
     d68:	b.gt	d94 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1fc>
     d6c:	mov	x1, #0xffffffff80000000    	// #-2147483648
     d70:	cmp	x0, x1
     d74:	b.lt	d7c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1e4>  // b.tstop
     d78:	tbz	w0, #31, d94 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1fc>
     d7c:	ldp	x0, x4, [sp, #112]
     d80:	mov	x1, x19
     d84:	ldp	x3, x2, [sp, #128]
     d88:	str	x23, [sp, #712]
     d8c:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     d90:	ldr	x26, [sp, #800]
     d94:	add	x0, x23, #0x10
     d98:	cmp	x26, x0
     d9c:	b.eq	da8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x210>  // b.none
     da0:	mov	x0, x26
     da4:	bl	0 <_ZdlPv>
     da8:	mov	x0, x21
     dac:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     db0:	mov	x21, x0
     db4:	ldr	x0, [sp, #104]
     db8:	cmp	x0, x21
     dbc:	b.ne	cb8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x120>  // b.any
     dc0:	ldr	x0, [sp, #152]
     dc4:	ldr	x0, [x0]
     dc8:	add	x1, x0, #0x38
     dcc:	ldr	x0, [x0, #72]
     dd0:	add	x2, sp, #0x178
     dd4:	str	x0, [sp, #104]
     dd8:	str	x2, [sp, #176]
     ddc:	cmp	x0, x1
     de0:	str	x1, [sp, #192]
     de4:	b.eq	182c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xc94>  // b.none
     de8:	add	x28, sp, #0x1b8
     dec:	add	x20, sp, #0x268
     df0:	add	x0, sp, #0x258
     df4:	add	x1, x28, #0x10
     df8:	str	x1, [sp, #160]
     dfc:	str	x0, [sp, #184]
     e00:	ldr	x19, [sp, #104]
     e04:	add	x24, sp, #0x1f8
     e08:	ldr	x8, [sp, #176]
     e0c:	ldr	x0, [x19, #64]
     e10:	ldr	x0, [x0]
     e14:	ldr	x1, [x0]
     e18:	ldr	x1, [x1, #48]
     e1c:	blr	x1
     e20:	stp	xzr, xzr, [sp, #248]
     e24:	mov	w1, #0x18                  	// #24
     e28:	ldr	x19, [x19, #64]
     e2c:	str	xzr, [sp, #264]
     e30:	stp	xzr, xzr, [sp, #408]
     e34:	ldr	w22, [x19, #80]
     e38:	ldr	x0, [x19, #72]
     e3c:	str	xzr, [sp, #424]
     e40:	str	wzr, [sp, #432]
     e44:	mov	x21, x0
     e48:	umaddl	x22, w22, w1, x0
     e4c:	cmp	x22, x0
     e50:	b.eq	e9c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x304>  // b.none
     e54:	ldr	x25, [sp, #152]
     e58:	ldr	x26, [sp, #184]
     e5c:	ldr	x1, [x19, #56]
     e60:	ldr	w3, [x19, #64]
     e64:	ldr	x0, [x21]
     e68:	add	x3, x1, x3, lsl #3
     e6c:	cmp	x1, x3
     e70:	b.ne	e84 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x2ec>  // b.any
     e74:	b	1048 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x4b0>
     e78:	add	x1, x1, #0x8
     e7c:	cmp	x3, x1
     e80:	b.eq	1048 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x4b0>  // b.none
     e84:	ldr	x2, [x1]
     e88:	cmp	x0, x2
     e8c:	b.ne	e78 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x2e0>  // b.any
     e90:	add	x21, x21, #0x18
     e94:	cmp	x22, x21
     e98:	b.ne	e5c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x2c4>  // b.any
     e9c:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     ea0:	add	x0, x0, #0x0
     ea4:	stp	xzr, x0, [sp, #272]
     ea8:	add	x0, sp, #0x200
     eac:	mov	x21, #0x7                   	// #7
     eb0:	str	x21, [sp, #288]
     eb4:	mov	x2, #0x0                   	// #0
     eb8:	ldp	x0, x1, [x0, #-232]
     ebc:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
     ec0:	tst	w0, #0xff
     ec4:	b.eq	1ccc <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1134>  // b.none
     ec8:	add	x25, sp, #0x198
     ecc:	add	x1, sp, #0x110
     ed0:	mov	x0, x25
     ed4:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     ed8:	ldp	x3, x2, [sp, #248]
     edc:	stp	xzr, xzr, [sp, #248]
     ee0:	ldr	x1, [sp, #264]
     ee4:	str	xzr, [sp, #264]
     ee8:	strb	w21, [sp, #800]
     eec:	mov	x21, x0
     ef0:	str	x3, [sp, #808]
     ef4:	str	x2, [sp, #816]
     ef8:	str	x1, [sp, #824]
     efc:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     f00:	mov	x1, x23
     f04:	mov	x0, x21
     f08:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     f0c:	mov	x0, x23
     f10:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     f14:	ldr	x21, [sp, #272]
     f18:	cbz	x21, f3c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x3a4>
     f1c:	mov	x1, x21
     f20:	ldr	x0, [x1], #16
     f24:	cmp	x0, x1
     f28:	b.eq	f30 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x398>  // b.none
     f2c:	bl	0 <_ZdlPv>
     f30:	mov	x0, x21
     f34:	mov	x1, #0x20                  	// #32
     f38:	bl	0 <_ZdlPvm>
     f3c:	ldr	w2, [x19, #96]
     f40:	mov	w1, #0x18                  	// #24
     f44:	ldr	x0, [x19, #88]
     f48:	stp	xzr, xzr, [sp, #296]
     f4c:	add	x26, sp, #0x1f8
     f50:	mov	x24, x0
     f54:	str	xzr, [sp, #312]
     f58:	umaddl	x0, w2, w1, x0
     f5c:	str	x0, [sp, #120]
     f60:	cmp	x0, x24
     f64:	b.eq	1250 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x6b8>  // b.none
     f68:	add	x22, sp, #0x2a0
     f6c:	add	x21, x26, #0x10
     f70:	add	x0, x22, #0x18
     f74:	str	x0, [sp, #128]
     f78:	mov	x0, x20
     f7c:	add	x27, sp, #0x128
     f80:	mov	x20, x19
     f84:	mov	x19, x24
     f88:	mov	x24, x0
     f8c:	b	fe0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x448>
     f90:	ldr	x1, [sp, #520]
     f94:	str	x0, [sp, #680]
     f98:	str	x1, [sp, #696]
     f9c:	ldr	x2, [sp, #512]
     fa0:	mov	x1, x22
     fa4:	mov	x0, x27
     fa8:	stp	x21, xzr, [sp, #504]
     fac:	strb	wzr, [sp, #520]
     fb0:	str	x2, [sp, #688]
     fb4:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     fb8:	mov	x0, x22
     fbc:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     fc0:	ldr	x0, [sp, #504]
     fc4:	cmp	x0, x21
     fc8:	b.eq	fd0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x438>  // b.none
     fcc:	bl	0 <_ZdlPv>
     fd0:	ldr	x0, [sp, #120]
     fd4:	add	x19, x19, #0x18
     fd8:	cmp	x0, x19
     fdc:	b.eq	1248 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x6b0>  // b.none
     fe0:	ldr	x0, [x19]
     fe4:	mov	x8, x26
     fe8:	ldr	x0, [x0]
     fec:	ldr	x1, [x0]
     ff0:	ldr	x1, [x1, #48]
     ff4:	blr	x1
     ff8:	mov	w0, #0x5                   	// #5
     ffc:	strb	w0, [sp, #672]
    1000:	ldp	x0, x1, [sp, #504]
    1004:	mov	x2, #0x0                   	// #0
    1008:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    100c:	tst	w0, #0xff
    1010:	b.eq	1c8c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x10f4>  // b.none
    1014:	ldr	x1, [sp, #128]
    1018:	str	x1, [sp, #680]
    101c:	ldr	x0, [sp, #504]
    1020:	cmp	x0, x21
    1024:	b.ne	f90 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x3f8>  // b.any
    1028:	add	x0, sp, #0x280
    102c:	add	x2, sp, #0x280
    1030:	ldp	x0, x1, [x0, #-120]
    1034:	stp	x0, x1, [x2, #56]
    1038:	b	f9c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x404>
    103c:	ldr	x28, [x28, #24]
    1040:	cbnz	x28, cf0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x158>
    1044:	b	d34 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x19c>
    1048:	ldr	x1, [x0]
    104c:	mov	x8, x28
    1050:	ldr	x1, [x1, #48]
    1054:	blr	x1
    1058:	ldr	x0, [x21, #8]
    105c:	tst	w0, #0x4
    1060:	b.ne	117c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x5e4>  // b.any
    1064:	ldp	x1, x2, [sp, #440]
    1068:	mov	w3, #0x0                   	// #0
    106c:	mov	x0, x26
    1070:	str	x20, [sp, #600]
    1074:	add	x2, x1, x2
    1078:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    107c:	mov	x0, #0x20                  	// #32
    1080:	bl	0 <_Znwm>
    1084:	mov	x3, x0
    1088:	add	x1, x0, #0x10
    108c:	ldr	x0, [sp, #600]
    1090:	str	x1, [x3]
    1094:	cmp	x0, x20
    1098:	b.eq	1224 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x68c>  // b.none
    109c:	ldr	x1, [sp, #616]
    10a0:	str	x0, [x3]
    10a4:	str	x1, [x3, #16]
    10a8:	ldr	x1, [sp, #608]
    10ac:	str	x1, [x3, #8]
    10b0:	mov	x2, #0x0                   	// #0
    10b4:	stp	x3, xzr, [sp, #504]
    10b8:	str	xzr, [sp, #520]
    10bc:	str	x20, [sp, #600]
    10c0:	str	xzr, [sp, #608]
    10c4:	strb	wzr, [sp, #616]
    10c8:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    10cc:	tst	w0, #0xff
    10d0:	b.eq	1cac <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1114>  // b.none
    10d4:	ldr	x2, [sp, #504]
    10d8:	mov	x1, x24
    10dc:	add	x0, sp, #0x198
    10e0:	ldp	x3, x2, [x2]
    10e4:	str	x3, [sp, #512]
    10e8:	str	x2, [sp, #520]
    10ec:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
    10f0:	mov	x27, x0
    10f4:	ldr	x1, [x21, #16]
    10f8:	mov	x8, x23
    10fc:	mov	x0, x25
    1100:	bl	1d0 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE>
    1104:	mov	x0, x27
    1108:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    110c:	mov	x1, x23
    1110:	mov	x0, x27
    1114:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    1118:	mov	x0, x23
    111c:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1120:	ldr	x27, [sp, #504]
    1124:	cbz	x27, 1148 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x5b0>
    1128:	mov	x2, x27
    112c:	ldr	x0, [x2], #16
    1130:	cmp	x0, x2
    1134:	b.eq	113c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x5a4>  // b.none
    1138:	bl	0 <_ZdlPv>
    113c:	mov	x0, x27
    1140:	mov	x1, #0x20                  	// #32
    1144:	bl	0 <_ZdlPvm>
    1148:	ldr	x0, [sp, #600]
    114c:	cmp	x0, x20
    1150:	b.eq	1158 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x5c0>  // b.none
    1154:	bl	0 <_ZdlPv>
    1158:	ldr	x1, [sp, #160]
    115c:	ldr	x0, [sp, #440]
    1160:	cmp	x0, x1
    1164:	b.eq	e90 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x2f8>  // b.none
    1168:	add	x21, x21, #0x18
    116c:	bl	0 <_ZdlPv>
    1170:	cmp	x22, x21
    1174:	b.ne	e5c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x2c4>  // b.any
    1178:	b	e9c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x304>
    117c:	ldp	x1, x2, [sp, #440]
    1180:	add	x27, sp, #0x1d8
    1184:	add	x5, x27, #0x10
    1188:	mov	x0, x27
    118c:	mov	w3, #0x0                   	// #0
    1190:	str	x5, [sp, #120]
    1194:	str	x5, [sp, #472]
    1198:	add	x2, x1, x2
    119c:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    11a0:	ldp	x0, x1, [sp, #472]
    11a4:	mov	w3, #0x5                   	// #5
    11a8:	mov	x2, #0x0                   	// #0
    11ac:	strb	w3, [sp, #632]
    11b0:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    11b4:	tst	w0, #0xff
    11b8:	ldr	x5, [sp, #120]
    11bc:	b.eq	1c8c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x10f4>  // b.none
    11c0:	add	x1, sp, #0x278
    11c4:	ldr	x0, [sp, #472]
    11c8:	add	x2, x1, #0x18
    11cc:	str	x2, [sp, #640]
    11d0:	cmp	x0, x5
    11d4:	b.eq	1238 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x6a0>  // b.none
    11d8:	ldr	x2, [sp, #488]
    11dc:	str	x0, [sp, #640]
    11e0:	str	x2, [sp, #656]
    11e4:	ldr	x2, [sp, #480]
    11e8:	add	x27, x27, #0x10
    11ec:	add	x0, sp, #0xf8
    11f0:	str	x1, [sp, #120]
    11f4:	stp	x27, xzr, [sp, #472]
    11f8:	strb	wzr, [sp, #488]
    11fc:	str	x2, [sp, #648]
    1200:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1204:	ldr	x1, [sp, #120]
    1208:	mov	x0, x1
    120c:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1210:	ldr	x0, [sp, #472]
    1214:	cmp	x0, x27
    1218:	b.eq	1064 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x4cc>  // b.none
    121c:	bl	0 <_ZdlPv>
    1220:	b	1064 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x4cc>
    1224:	add	x0, sp, #0x280
    1228:	ldp	x4, x5, [x0, #-24]
    122c:	mov	x0, x1
    1230:	stp	x4, x5, [x3, #16]
    1234:	b	10a8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x510>
    1238:	add	x0, sp, #0x280
    123c:	ldp	x2, x3, [x0, #-152]
    1240:	stp	x2, x3, [x0, #16]
    1244:	b	11e4 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x64c>
    1248:	mov	x19, x20
    124c:	mov	x20, x24
    1250:	mov	x1, #0xd                   	// #13
    1254:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1258:	add	x0, x0, #0x0
    125c:	stp	xzr, x0, [sp, #440]
    1260:	mov	x2, #0x0                   	// #0
    1264:	str	x1, [sp, #456]
    1268:	ldp	x0, x1, [sp, #448]
    126c:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    1270:	tst	w0, #0xff
    1274:	b.eq	1ccc <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1134>  // b.none
    1278:	mov	x1, x28
    127c:	mov	x0, x25
    1280:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
    1284:	mov	x21, x0
    1288:	ldp	x3, x2, [sp, #296]
    128c:	mov	w4, #0x7                   	// #7
    1290:	ldr	x1, [sp, #312]
    1294:	stp	xzr, xzr, [sp, #296]
    1298:	str	xzr, [sp, #312]
    129c:	strb	w4, [sp, #800]
    12a0:	str	x3, [sp, #808]
    12a4:	str	x2, [sp, #816]
    12a8:	str	x1, [sp, #824]
    12ac:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    12b0:	mov	x1, x23
    12b4:	mov	x0, x21
    12b8:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    12bc:	mov	x0, x23
    12c0:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    12c4:	ldr	x21, [sp, #440]
    12c8:	cbz	x21, 12ec <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x754>
    12cc:	mov	x1, x21
    12d0:	ldr	x0, [x1], #16
    12d4:	cmp	x0, x1
    12d8:	b.eq	12e0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x748>  // b.none
    12dc:	bl	0 <_ZdlPv>
    12e0:	mov	x0, x21
    12e4:	mov	x1, #0x20                  	// #32
    12e8:	bl	0 <_ZdlPvm>
    12ec:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    12f0:	add	x0, x0, #0x0
    12f4:	stp	xzr, x0, [sp, #320]
    12f8:	add	x0, sp, #0x200
    12fc:	mov	x22, #0x5                   	// #5
    1300:	str	x22, [sp, #336]
    1304:	mov	x2, #0x0                   	// #0
    1308:	ldp	x0, x1, [x0, #-184]
    130c:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    1310:	tst	w0, #0xff
    1314:	b.eq	1ccc <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1134>  // b.none
    1318:	add	x1, sp, #0x140
    131c:	mov	x0, x25
    1320:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
    1324:	add	x21, sp, #0x218
    1328:	ldp	x1, x2, [sp, #376]
    132c:	mov	w3, #0x0                   	// #0
    1330:	mov	x26, x0
    1334:	add	x24, x21, #0x10
    1338:	mov	x0, x21
    133c:	str	x24, [sp, #536]
    1340:	add	x2, x1, x2
    1344:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1348:	ldr	x0, [sp, #536]
    134c:	mov	x2, #0x0                   	// #0
    1350:	ldr	x1, [sp, #544]
    1354:	strb	w22, [sp, #712]
    1358:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    135c:	tst	w0, #0xff
    1360:	b.eq	1c8c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x10f4>  // b.none
    1364:	add	x22, sp, #0x2c8
    1368:	ldr	x0, [sp, #536]
    136c:	add	x1, x22, #0x18
    1370:	str	x1, [sp, #720]
    1374:	cmp	x0, x24
    1378:	b.eq	1cec <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1154>  // b.none
    137c:	ldr	x1, [sp, #552]
    1380:	str	x0, [sp, #720]
    1384:	str	x1, [sp, #736]
    1388:	ldr	x1, [sp, #544]
    138c:	add	x24, x21, #0x10
    1390:	mov	x0, x26
    1394:	str	x24, [sp, #536]
    1398:	str	xzr, [sp, #544]
    139c:	strb	wzr, [sp, #552]
    13a0:	str	x1, [sp, #728]
    13a4:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    13a8:	mov	x1, x22
    13ac:	mov	x0, x26
    13b0:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    13b4:	mov	x0, x22
    13b8:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    13bc:	ldr	x0, [sp, #536]
    13c0:	cmp	x0, x24
    13c4:	b.eq	13cc <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x834>  // b.none
    13c8:	bl	0 <_ZdlPv>
    13cc:	ldr	x24, [sp, #320]
    13d0:	cbz	x24, 13f4 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x85c>
    13d4:	mov	x1, x24
    13d8:	ldr	x0, [x1], #16
    13dc:	cmp	x0, x1
    13e0:	b.eq	13e8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x850>  // b.none
    13e4:	bl	0 <_ZdlPv>
    13e8:	mov	x0, x24
    13ec:	mov	x1, #0x20                  	// #32
    13f0:	bl	0 <_ZdlPvm>
    13f4:	mov	x1, #0xa                   	// #10
    13f8:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    13fc:	add	x0, x0, #0x0
    1400:	stp	xzr, x0, [sp, #472]
    1404:	mov	x2, #0x0                   	// #0
    1408:	str	x1, [sp, #488]
    140c:	ldp	x0, x1, [sp, #480]
    1410:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    1414:	tst	w0, #0xff
    1418:	b.eq	1ccc <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1134>  // b.none
    141c:	add	x1, sp, #0x1d8
    1420:	mov	x0, x25
    1424:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
    1428:	mov	x24, x0
    142c:	ldrb	w1, [x19, #124]
    1430:	mov	w2, #0x1                   	// #1
    1434:	strb	w2, [sp, #800]
    1438:	strb	w1, [sp, #808]
    143c:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1440:	mov	x1, x23
    1444:	mov	x0, x24
    1448:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    144c:	mov	x0, x23
    1450:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1454:	ldr	x24, [sp, #472]
    1458:	cbz	x24, 147c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x8e4>
    145c:	mov	x1, x24
    1460:	ldr	x0, [x1], #16
    1464:	cmp	x0, x1
    1468:	b.eq	1470 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x8d8>  // b.none
    146c:	bl	0 <_ZdlPv>
    1470:	mov	x0, x24
    1474:	mov	x1, #0x20                  	// #32
    1478:	bl	0 <_ZdlPvm>
    147c:	ldp	x1, x2, [sp, #376]
    1480:	mov	w3, #0x0                   	// #0
    1484:	add	x24, x22, #0x10
    1488:	mov	x0, x22
    148c:	str	x24, [sp, #712]
    1490:	add	x2, x1, x2
    1494:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1498:	mov	x0, #0x20                  	// #32
    149c:	bl	0 <_Znwm>
    14a0:	mov	x3, x0
    14a4:	add	x1, x0, #0x10
    14a8:	ldr	x0, [sp, #712]
    14ac:	str	x1, [x3]
    14b0:	cmp	x0, x24
    14b4:	b.eq	1d30 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1198>  // b.none
    14b8:	ldr	x1, [sp, #728]
    14bc:	str	x0, [x3]
    14c0:	str	x1, [x3, #16]
    14c4:	add	x5, sp, #0x220
    14c8:	add	x4, x22, #0x10
    14cc:	ldr	x1, [sp, #720]
    14d0:	str	x3, [sp, #536]
    14d4:	strb	wzr, [sp, #728]
    14d8:	mov	x2, #0x0                   	// #0
    14dc:	stp	xzr, xzr, [x5]
    14e0:	str	x1, [x3, #8]
    14e4:	stp	x4, xzr, [x5, #168]
    14e8:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    14ec:	tst	w0, #0xff
    14f0:	b.eq	1cac <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1114>  // b.none
    14f4:	ldr	x2, [sp, #536]
    14f8:	mov	x1, x21
    14fc:	ldr	x0, [sp, #168]
    1500:	ldp	x3, x2, [x2]
    1504:	str	x3, [sp, #544]
    1508:	str	x2, [sp, #552]
    150c:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
    1510:	mov	x21, x0
    1514:	ldp	x1, x4, [sp, #408]
    1518:	mov	w5, #0x6                   	// #6
    151c:	ldr	w2, [sp, #432]
    1520:	ldr	x3, [sp, #424]
    1524:	str	xzr, [sp, #424]
    1528:	str	wzr, [sp, #432]
    152c:	add	x1, x1, #0x1
    1530:	stp	x1, xzr, [sp, #408]
    1534:	mov	x1, #0x1                   	// #1
    1538:	strb	w5, [sp, #800]
    153c:	str	x1, [sp, #808]
    1540:	str	x4, [sp, #816]
    1544:	str	x3, [sp, #824]
    1548:	str	w2, [sp, #832]
    154c:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1550:	mov	x1, x23
    1554:	mov	x0, x21
    1558:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    155c:	mov	x0, x23
    1560:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1564:	ldr	x21, [sp, #536]
    1568:	cbz	x21, 158c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x9f4>
    156c:	mov	x1, x21
    1570:	ldr	x0, [x1], #16
    1574:	cmp	x0, x1
    1578:	b.eq	1580 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x9e8>  // b.none
    157c:	bl	0 <_ZdlPv>
    1580:	mov	x0, x21
    1584:	mov	x1, #0x20                  	// #32
    1588:	bl	0 <_ZdlPvm>
    158c:	ldr	x0, [sp, #712]
    1590:	add	x1, x22, #0x10
    1594:	cmp	x0, x1
    1598:	b.eq	15a0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xa08>  // b.none
    159c:	bl	0 <_ZdlPv>
    15a0:	ldr	w1, [x19, #96]
    15a4:	mov	w0, #0x18                  	// #24
    15a8:	ldr	x21, [x19, #88]
    15ac:	umaddl	x0, w1, w0, x21
    15b0:	str	x0, [sp, #200]
    15b4:	cmp	x0, x21
    15b8:	b.eq	1784 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xbec>  // b.none
    15bc:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    15c0:	add	x0, x0, #0x0
    15c4:	stp	x0, x28, [sp, #208]
    15c8:	add	x1, sp, #0x238
    15cc:	mov	x24, #0x7fffffff            	// #2147483647
    15d0:	ldr	x0, [sp, #112]
    15d4:	stp	x21, x1, [sp, #120]
    15d8:	add	x0, x0, #0x8
    15dc:	str	x0, [sp, #136]
    15e0:	ldp	x0, x8, [sp, #120]
    15e4:	ldr	x0, [x0]
    15e8:	ldr	x0, [x0]
    15ec:	ldr	x1, [x0]
    15f0:	ldr	x1, [x1, #48]
    15f4:	blr	x1
    15f8:	ldr	x28, [sp, #768]
    15fc:	ldr	x19, [sp, #136]
    1600:	cbz	x28, 169c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xb04>
    1604:	ldr	x26, [sp, #568]
    1608:	mov	x21, #0xffffffff80000000    	// #-2147483648
    160c:	ldr	x27, [sp, #576]
    1610:	ldr	x25, [x28, #40]
    1614:	cmp	x25, x27
    1618:	csel	x2, x25, x27, ls  // ls = plast
    161c:	cbz	x2, 1630 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xa98>
    1620:	ldr	x0, [x28, #32]
    1624:	mov	x1, x26
    1628:	bl	0 <memcmp>
    162c:	cbnz	w0, 1644 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xaac>
    1630:	sub	x0, x25, x27
    1634:	cmp	x0, x24
    1638:	b.gt	1648 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xab0>
    163c:	cmp	x0, x21
    1640:	b.lt	1d00 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1168>  // b.tstop
    1644:	tbnz	w0, #31, 1d00 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1168>
    1648:	mov	x19, x28
    164c:	ldr	x28, [x28, #16]
    1650:	cbnz	x28, 1610 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xa78>
    1654:	ldr	x0, [sp, #136]
    1658:	cmp	x19, x0
    165c:	b.eq	169c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xb04>  // b.none
    1660:	ldr	x21, [x19, #40]
    1664:	cmp	x27, x21
    1668:	csel	x2, x27, x21, ls  // ls = plast
    166c:	cbz	x2, 1680 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xae8>
    1670:	ldr	x1, [x19, #32]
    1674:	mov	x0, x26
    1678:	bl	0 <memcmp>
    167c:	cbnz	w0, 1698 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xb00>
    1680:	sub	x0, x27, x21
    1684:	cmp	x0, x24
    1688:	b.gt	16c0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xb28>
    168c:	mov	x1, #0xffffffff80000000    	// #-2147483648
    1690:	cmp	x0, x1
    1694:	b.lt	169c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xb04>  // b.tstop
    1698:	tbz	w0, #31, 16c0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xb28>
    169c:	ldr	x0, [sp, #112]
    16a0:	mov	x1, x19
    16a4:	ldr	x5, [sp, #128]
    16a8:	mov	x4, x22
    16ac:	ldr	x2, [sp, #208]
    16b0:	mov	x3, x23
    16b4:	str	x5, [sp, #800]
    16b8:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    16bc:	mov	x19, x0
    16c0:	ldp	x1, x2, [sp, #376]
    16c4:	mov	w3, #0x0                   	// #0
    16c8:	ldr	x0, [sp, #184]
    16cc:	str	x20, [sp, #600]
    16d0:	add	x2, x1, x2
    16d4:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    16d8:	ldr	x0, [sp, #600]
    16dc:	mov	w3, #0x5                   	// #5
    16e0:	ldr	x1, [sp, #608]
    16e4:	mov	x2, #0x0                   	// #0
    16e8:	strb	w3, [sp, #800]
    16ec:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    16f0:	tst	w0, #0xff
    16f4:	b.eq	1c8c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x10f4>  // b.none
    16f8:	ldr	x0, [sp, #600]
    16fc:	add	x1, x23, #0x18
    1700:	str	x1, [sp, #808]
    1704:	cmp	x0, x20
    1708:	b.eq	1d08 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1170>  // b.none
    170c:	ldr	x1, [sp, #616]
    1710:	str	x0, [sp, #808]
    1714:	str	x1, [sp, #824]
    1718:	ldr	x2, [sp, #608]
    171c:	mov	x1, x23
    1720:	add	x0, x19, #0x40
    1724:	str	x20, [sp, #600]
    1728:	str	xzr, [sp, #608]
    172c:	strb	wzr, [sp, #616]
    1730:	str	x2, [sp, #816]
    1734:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1738:	mov	x0, x23
    173c:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1740:	ldr	x0, [sp, #600]
    1744:	cmp	x0, x20
    1748:	b.eq	1750 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xbb8>  // b.none
    174c:	bl	0 <_ZdlPv>
    1750:	ldr	x1, [sp, #128]
    1754:	ldr	x0, [sp, #568]
    1758:	add	x1, x1, #0x10
    175c:	cmp	x0, x1
    1760:	b.eq	1768 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xbd0>  // b.none
    1764:	bl	0 <_ZdlPv>
    1768:	ldr	x0, [sp, #120]
    176c:	ldr	x1, [sp, #200]
    1770:	add	x0, x0, #0x18
    1774:	str	x0, [sp, #120]
    1778:	cmp	x1, x0
    177c:	b.ne	15e0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xa48>  // b.any
    1780:	ldr	x28, [sp, #216]
    1784:	ldp	x21, x19, [sp, #296]
    1788:	cmp	x21, x19
    178c:	b.eq	17a8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xc10>  // b.none
    1790:	mov	x0, x21
    1794:	add	x21, x21, #0x28
    1798:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    179c:	cmp	x19, x21
    17a0:	b.ne	1790 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xbf8>  // b.any
    17a4:	ldr	x19, [sp, #296]
    17a8:	cbz	x19, 17b4 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xc1c>
    17ac:	mov	x0, x19
    17b0:	bl	0 <_ZdlPv>
    17b4:	ldp	x21, x19, [sp, #248]
    17b8:	cmp	x21, x19
    17bc:	b.eq	17d8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xc40>  // b.none
    17c0:	mov	x0, x21
    17c4:	add	x21, x21, #0x28
    17c8:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    17cc:	cmp	x19, x21
    17d0:	b.ne	17c0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xc28>  // b.any
    17d4:	ldr	x19, [sp, #248]
    17d8:	cbz	x19, 17e4 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xc4c>
    17dc:	mov	x0, x19
    17e0:	bl	0 <_ZdlPv>
    17e4:	ldr	w0, [sp, #432]
    17e8:	cbnz	w0, 1d44 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x11ac>
    17ec:	ldr	x21, [sp, #416]
    17f0:	mov	x1, #0x0                   	// #0
    17f4:	mov	x0, x21
    17f8:	bl	0 <_ZdlPvm>
    17fc:	ldr	x0, [sp, #176]
    1800:	add	x1, x0, #0x10
    1804:	ldr	x0, [sp, #376]
    1808:	cmp	x0, x1
    180c:	b.eq	1814 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xc7c>  // b.none
    1810:	bl	0 <_ZdlPv>
    1814:	ldr	x0, [sp, #104]
    1818:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    181c:	str	x0, [sp, #104]
    1820:	ldr	x1, [sp, #192]
    1824:	cmp	x1, x0
    1828:	b.ne	e00 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x268>  // b.any
    182c:	ldr	x0, [sp, #112]
    1830:	str	xzr, [sp, #632]
    1834:	ldr	x20, [sp, #776]
    1838:	str	xzr, [sp, #640]
    183c:	str	xzr, [sp, #648]
    1840:	add	x0, x0, #0x8
    1844:	str	wzr, [sp, #656]
    1848:	cmp	x20, x0
    184c:	b.eq	1aa8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xf10>  // b.none
    1850:	mov	x28, #0xcccd                	// #52429
    1854:	add	x25, sp, #0x2a0
    1858:	movk	x28, #0xcccc, lsl #16
    185c:	add	x24, x25, #0x10
    1860:	movk	x28, #0xcccc, lsl #32
    1864:	movk	x28, #0xccc, lsl #48
    1868:	add	x0, x23, #0x10
    186c:	mov	w3, #0x0                   	// #0
    1870:	ldr	x2, [x20, #40]
    1874:	str	x0, [sp, #800]
    1878:	mov	x0, x23
    187c:	mov	x21, #0x0                   	// #0
    1880:	ldr	x1, [x20, #32]
    1884:	add	x2, x1, x2
    1888:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    188c:	ldp	x26, x19, [x20, #64]
    1890:	mov	x1, #0xcccccccccccccccc    	// #-3689348814741910324
    1894:	movk	x1, #0xcccd
    1898:	str	xzr, [sp, #832]
    189c:	str	xzr, [sp, #840]
    18a0:	str	xzr, [sp, #848]
    18a4:	sub	x22, x19, x26
    18a8:	asr	x0, x22, #3
    18ac:	mul	x0, x0, x1
    18b0:	cbz	x0, 18d4 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xd3c>
    18b4:	mov	x1, #0x3333333333333333    	// #3689348814741910323
    18b8:	movk	x1, #0x333, lsl #48
    18bc:	cmp	x0, x1
    18c0:	b.hi	1e64 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x12cc>  // b.pmore
    18c4:	mov	x0, x22
    18c8:	bl	0 <_Znwm>
    18cc:	ldp	x26, x19, [x20, #64]
    18d0:	mov	x21, x0
    18d4:	add	x22, x21, x22
    18d8:	str	x21, [sp, #832]
    18dc:	str	x21, [sp, #840]
    18e0:	cmp	x19, x26
    18e4:	str	x22, [sp, #848]
    18e8:	b.eq	1930 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xd98>  // b.none
    18ec:	mov	x22, x26
    18f0:	mov	x27, x21
    18f4:	mov	x1, x22
    18f8:	mov	x0, x27
    18fc:	add	x22, x22, #0x28
    1900:	bl	0 <_ZN4llvm4json5Value8copyFromERKS1_>
    1904:	cmp	x19, x22
    1908:	add	x27, x27, #0x28
    190c:	b.ne	18f4 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xd5c>  // b.any
    1910:	sub	x0, x19, #0x28
    1914:	sub	x0, x0, x26
    1918:	lsr	x0, x0, #3
    191c:	mul	x0, x0, x28
    1920:	and	x0, x0, #0x1fffffffffffffff
    1924:	add	x0, x0, #0x1
    1928:	add	x0, x0, x0, lsl #2
    192c:	add	x21, x21, x0, lsl #3
    1930:	ldr	x1, [sp, #800]
    1934:	mov	w3, #0x0                   	// #0
    1938:	ldr	x2, [sp, #808]
    193c:	mov	x0, x25
    1940:	str	x24, [sp, #672]
    1944:	add	x2, x1, x2
    1948:	str	x21, [sp, #840]
    194c:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1950:	mov	x0, #0x20                  	// #32
    1954:	bl	0 <_Znwm>
    1958:	mov	x3, x0
    195c:	add	x1, x0, #0x10
    1960:	ldr	x0, [sp, #672]
    1964:	str	x1, [x3]
    1968:	cmp	x0, x24
    196c:	b.eq	1d1c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1184>  // b.none
    1970:	ldr	x1, [sp, #688]
    1974:	str	x0, [x3]
    1978:	str	x1, [x3, #16]
    197c:	add	x4, sp, #0x240
    1980:	str	x3, [sp, #568]
    1984:	ldr	x1, [sp, #680]
    1988:	strb	wzr, [sp, #688]
    198c:	stp	xzr, xzr, [x4]
    1990:	mov	x2, #0x0                   	// #0
    1994:	str	x1, [x3, #8]
    1998:	stp	x24, xzr, [x4, #96]
    199c:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    19a0:	tst	w0, #0xff
    19a4:	b.eq	1cac <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1114>  // b.none
    19a8:	ldr	x2, [sp, #568]
    19ac:	add	x1, sp, #0x238
    19b0:	add	x0, sp, #0x278
    19b4:	add	x19, sp, #0x2c8
    19b8:	ldp	x3, x2, [x2]
    19bc:	str	x3, [sp, #576]
    19c0:	str	x2, [sp, #584]
    19c4:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
    19c8:	mov	x21, x0
    19cc:	ldr	x3, [sp, #832]
    19d0:	mov	w1, #0x7                   	// #7
    19d4:	str	x3, [sp, #720]
    19d8:	add	x3, sp, #0x2d8
    19dc:	strb	w1, [sp, #712]
    19e0:	ldr	x2, [sp, #840]
    19e4:	ldr	x1, [sp, #848]
    19e8:	stp	x2, x1, [x3]
    19ec:	stp	xzr, xzr, [x3, #104]
    19f0:	str	xzr, [sp, #848]
    19f4:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    19f8:	mov	x1, x19
    19fc:	mov	x0, x21
    1a00:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    1a04:	mov	x0, x19
    1a08:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1a0c:	ldr	x19, [sp, #568]
    1a10:	cbz	x19, 1a34 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xe9c>
    1a14:	mov	x1, x19
    1a18:	ldr	x0, [x1], #16
    1a1c:	cmp	x0, x1
    1a20:	b.eq	1a28 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xe90>  // b.none
    1a24:	bl	0 <_ZdlPv>
    1a28:	mov	x0, x19
    1a2c:	mov	x1, #0x20                  	// #32
    1a30:	bl	0 <_ZdlPvm>
    1a34:	ldr	x0, [sp, #672]
    1a38:	cmp	x0, x24
    1a3c:	b.eq	1a44 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xeac>  // b.none
    1a40:	bl	0 <_ZdlPv>
    1a44:	ldr	x19, [sp, #832]
    1a48:	ldr	x21, [sp, #840]
    1a4c:	cmp	x19, x21
    1a50:	b.eq	1a6c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xed4>  // b.none
    1a54:	mov	x0, x19
    1a58:	add	x19, x19, #0x28
    1a5c:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1a60:	cmp	x21, x19
    1a64:	b.ne	1a54 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xebc>  // b.any
    1a68:	ldr	x21, [sp, #832]
    1a6c:	cbz	x21, 1a78 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xee0>
    1a70:	mov	x0, x21
    1a74:	bl	0 <_ZdlPv>
    1a78:	ldr	x0, [sp, #800]
    1a7c:	add	x1, x23, #0x10
    1a80:	cmp	x0, x1
    1a84:	b.eq	1a8c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xef4>  // b.none
    1a88:	bl	0 <_ZdlPv>
    1a8c:	mov	x0, x20
    1a90:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
    1a94:	ldr	x1, [sp, #112]
    1a98:	mov	x20, x0
    1a9c:	add	x1, x1, #0x8
    1aa0:	cmp	x0, x1
    1aa4:	b.ne	1868 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xcd0>  // b.any
    1aa8:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1aac:	add	x0, x0, #0x0
    1ab0:	stp	xzr, x0, [sp, #504]
    1ab4:	add	x0, sp, #0x200
    1ab8:	mov	x1, #0xb                   	// #11
    1abc:	str	x1, [sp, #520]
    1ac0:	mov	x2, #0x0                   	// #0
    1ac4:	ldp	x0, x1, [x0]
    1ac8:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    1acc:	tst	w0, #0xff
    1ad0:	b.eq	1ccc <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1134>  // b.none
    1ad4:	ldr	x0, [sp, #168]
    1ad8:	add	x1, sp, #0x1f8
    1adc:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
    1ae0:	mov	x19, x0
    1ae4:	ldr	x1, [sp, #632]
    1ae8:	mov	w6, #0x6                   	// #6
    1aec:	ldr	w2, [sp, #656]
    1af0:	mov	x5, #0x1                   	// #1
    1af4:	ldr	x4, [sp, #640]
    1af8:	add	x1, x1, #0x1
    1afc:	ldr	x3, [sp, #648]
    1b00:	str	x1, [sp, #632]
    1b04:	str	xzr, [sp, #640]
    1b08:	str	xzr, [sp, #648]
    1b0c:	str	wzr, [sp, #656]
    1b10:	strb	w6, [sp, #800]
    1b14:	str	x5, [sp, #808]
    1b18:	str	x4, [sp, #816]
    1b1c:	str	x3, [sp, #824]
    1b20:	str	w2, [sp, #832]
    1b24:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1b28:	mov	x1, x23
    1b2c:	mov	x0, x19
    1b30:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    1b34:	mov	x0, x23
    1b38:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1b3c:	ldr	x19, [sp, #504]
    1b40:	cbz	x19, 1b64 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xfcc>
    1b44:	mov	x1, x19
    1b48:	ldr	x0, [x1], #16
    1b4c:	cmp	x0, x1
    1b50:	b.eq	1b58 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xfc0>  // b.none
    1b54:	bl	0 <_ZdlPv>
    1b58:	mov	x0, x19
    1b5c:	mov	x1, #0x20                  	// #32
    1b60:	bl	0 <_ZdlPvm>
    1b64:	ldp	x2, x6, [sp, #344]
    1b68:	mov	x3, #0x1                   	// #1
    1b6c:	ldr	w4, [sp, #368]
    1b70:	mov	w8, #0x6                   	// #6
    1b74:	ldr	x5, [sp, #360]
    1b78:	mov	x7, #0x1                   	// #1
    1b7c:	movk	x3, #0x10, lsl #32
    1b80:	add	x19, sp, #0x2c8
    1b84:	add	x2, x2, #0x1
    1b88:	stp	x2, xzr, [sp, #344]
    1b8c:	mov	x0, x23
    1b90:	ldr	x2, [sp, #144]
    1b94:	mov	x1, x19
    1b98:	add	x20, x23, #0x10
    1b9c:	str	xzr, [sp, #360]
    1ba0:	str	wzr, [sp, #368]
    1ba4:	strb	w8, [sp, #712]
    1ba8:	str	x7, [sp, #720]
    1bac:	str	x6, [sp, #728]
    1bb0:	str	x5, [sp, #736]
    1bb4:	str	w4, [sp, #744]
    1bb8:	str	x20, [sp, #800]
    1bbc:	str	x3, [sp, #808]
    1bc0:	str	wzr, [sp, #816]
    1bc4:	strb	wzr, [sp, #820]
    1bc8:	str	x2, [sp, #944]
    1bcc:	str	xzr, [sp, #952]
    1bd0:	bl	0 <_ZN4llvm4json7OStream5valueERKNS0_5ValueE>
    1bd4:	ldr	w0, [sp, #808]
    1bd8:	cmp	w0, #0x1
    1bdc:	b.ne	1e44 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x12ac>  // b.any
    1be0:	ldr	x0, [sp, #800]
    1be4:	ldr	w1, [x0]
    1be8:	cbnz	w1, 1e24 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x128c>
    1bec:	ldrb	w1, [x0, #4]
    1bf0:	cbz	w1, 1e68 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x12d0>
    1bf4:	cmp	x0, x20
    1bf8:	b.eq	1c00 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1068>  // b.none
    1bfc:	bl	0 <free>
    1c00:	ldr	x0, [sp, #144]
    1c04:	ldp	x1, x0, [x0, #16]
    1c08:	cmp	x1, x0
    1c0c:	b.eq	1e0c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1274>  // b.none
    1c10:	mov	w1, #0xa                   	// #10
    1c14:	strb	w1, [x0]
    1c18:	ldr	x1, [sp, #144]
    1c1c:	ldr	x0, [x1, #24]
    1c20:	add	x0, x0, #0x1
    1c24:	str	x0, [x1, #24]
    1c28:	mov	x0, x19
    1c2c:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1c30:	ldr	w0, [sp, #656]
    1c34:	cbnz	w0, 1f40 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x13a8>
    1c38:	ldr	x20, [sp, #640]
    1c3c:	mov	x1, #0x0                   	// #0
    1c40:	mov	x0, x20
    1c44:	bl	0 <_ZdlPvm>
    1c48:	ldr	x0, [sp, #112]
    1c4c:	ldr	x1, [sp, #768]
    1c50:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1c54:	ldr	w0, [sp, #368]
    1c58:	cbnz	w0, 1e88 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x12f0>
    1c5c:	ldr	x20, [sp, #352]
    1c60:	mov	x1, #0x0                   	// #0
    1c64:	mov	x0, x20
    1c68:	bl	0 <_ZdlPvm>
    1c6c:	ldp	x29, x30, [sp]
    1c70:	ldp	x19, x20, [sp, #16]
    1c74:	ldp	x21, x22, [sp, #32]
    1c78:	ldp	x23, x24, [sp, #48]
    1c7c:	ldp	x25, x26, [sp, #64]
    1c80:	ldp	x27, x28, [sp, #80]
    1c84:	add	sp, sp, #0x3c0
    1c88:	ret
    1c8c:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1c90:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1c94:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1c98:	add	x3, x3, #0x0
    1c9c:	add	x1, x1, #0x0
    1ca0:	add	x0, x0, #0x0
    1ca4:	mov	w2, #0x138                 	// #312
    1ca8:	bl	0 <__assert_fail>
    1cac:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1cb0:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1cb4:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1cb8:	add	x3, x3, #0x0
    1cbc:	add	x1, x1, #0x0
    1cc0:	add	x0, x0, #0x0
    1cc4:	mov	w2, #0x1f1                 	// #497
    1cc8:	bl	0 <__assert_fail>
    1ccc:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1cd0:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1cd4:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1cd8:	add	x3, x3, #0x0
    1cdc:	add	x1, x1, #0x0
    1ce0:	add	x0, x0, #0x0
    1ce4:	mov	w2, #0x1f8                 	// #504
    1ce8:	bl	0 <__assert_fail>
    1cec:	add	x0, sp, #0x280
    1cf0:	add	x2, sp, #0x280
    1cf4:	ldp	x0, x1, [x0, #-88]
    1cf8:	stp	x0, x1, [x2, #96]
    1cfc:	b	1388 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x7f0>
    1d00:	ldr	x28, [x28, #24]
    1d04:	b	1650 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xab8>
    1d08:	add	x0, sp, #0x280
    1d0c:	add	x2, sp, #0x280
    1d10:	ldp	x0, x1, [x0, #-24]
    1d14:	stp	x0, x1, [x2, #184]
    1d18:	b	1718 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xb80>
    1d1c:	add	x0, sp, #0x280
    1d20:	ldp	x4, x5, [x0, #48]
    1d24:	mov	x0, x1
    1d28:	stp	x4, x5, [x3, #16]
    1d2c:	b	197c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xde4>
    1d30:	add	x0, sp, #0x280
    1d34:	ldp	x4, x5, [x0, #88]
    1d38:	mov	x0, x1
    1d3c:	stp	x4, x5, [x3, #16]
    1d40:	b	14c4 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x92c>
    1d44:	mov	x0, #0xffffffffffffffff    	// #-1
    1d48:	str	x0, [sp, #544]
    1d4c:	add	x0, sp, #0x200
    1d50:	str	xzr, [sp, #552]
    1d54:	mov	x2, #0x0                   	// #0
    1d58:	ldp	x0, x1, [x0, #32]
    1d5c:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    1d60:	tst	w0, #0xff
    1d64:	b.eq	1ccc <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1134>  // b.none
    1d68:	mov	x0, #0xfffffffffffffffe    	// #-2
    1d6c:	str	x0, [sp, #576]
    1d70:	add	x0, sp, #0x200
    1d74:	str	xzr, [sp, #584]
    1d78:	mov	x2, #0x0                   	// #0
    1d7c:	ldp	x0, x1, [x0, #64]
    1d80:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    1d84:	tst	w0, #0xff
    1d88:	b.eq	1ccc <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1134>  // b.none
    1d8c:	ldr	w1, [sp, #432]
    1d90:	ldr	x19, [sp, #416]
    1d94:	lsl	x1, x1, #6
    1d98:	add	x21, x19, x1
    1d9c:	cmp	x19, x21
    1da0:	b.ne	1ddc <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1244>  // b.any
    1da4:	b	17f4 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xc5c>
    1da8:	ldr	x22, [x19]
    1dac:	cbz	x22, 1dd0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1238>
    1db0:	mov	x1, x22
    1db4:	ldr	x0, [x1], #16
    1db8:	cmp	x0, x1
    1dbc:	b.eq	1dc4 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x122c>  // b.none
    1dc0:	bl	0 <_ZdlPv>
    1dc4:	mov	x0, x22
    1dc8:	mov	x1, #0x20                  	// #32
    1dcc:	bl	0 <_ZdlPvm>
    1dd0:	add	x19, x19, #0x40
    1dd4:	cmp	x21, x19
    1dd8:	b.eq	1dfc <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1264>  // b.none
    1ddc:	ldr	x0, [x19, #8]
    1de0:	cmn	x0, #0x1
    1de4:	b.eq	1da8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1210>  // b.none
    1de8:	cmn	x0, #0x2
    1dec:	b.eq	1da8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1210>  // b.none
    1df0:	add	x0, x19, #0x18
    1df4:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1df8:	b	1da8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1210>
    1dfc:	ldr	w1, [sp, #432]
    1e00:	ldr	x21, [sp, #416]
    1e04:	lsl	x1, x1, #6
    1e08:	b	17f4 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xc5c>
    1e0c:	ldr	x0, [sp, #144]
    1e10:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1e14:	mov	x2, #0x1                   	// #1
    1e18:	add	x1, x1, #0x0
    1e1c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1e20:	b	1c28 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1090>
    1e24:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1e28:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1e2c:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1e30:	add	x3, x3, #0x0
    1e34:	add	x1, x1, #0x0
    1e38:	add	x0, x0, #0x0
    1e3c:	mov	w2, #0x2fe                 	// #766
    1e40:	bl	0 <__assert_fail>
    1e44:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1e48:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1e4c:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1e50:	add	x3, x3, #0x0
    1e54:	add	x1, x1, #0x0
    1e58:	add	x0, x0, #0x0
    1e5c:	mov	w2, #0x2fd                 	// #765
    1e60:	bl	0 <__assert_fail>
    1e64:	bl	0 <_ZSt17__throw_bad_allocv>
    1e68:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1e6c:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1e70:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1e74:	add	x3, x3, #0x0
    1e78:	add	x1, x1, #0x0
    1e7c:	add	x0, x0, #0x0
    1e80:	mov	w2, #0x2ff                 	// #767
    1e84:	bl	0 <__assert_fail>
    1e88:	mov	x0, #0xffffffffffffffff    	// #-1
    1e8c:	str	x0, [sp, #720]
    1e90:	add	x0, sp, #0x280
    1e94:	str	xzr, [sp, #728]
    1e98:	mov	x2, #0x0                   	// #0
    1e9c:	ldp	x0, x1, [x0, #80]
    1ea0:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    1ea4:	tst	w0, #0xff
    1ea8:	b.eq	1ccc <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1134>  // b.none
    1eac:	mov	x0, #0xfffffffffffffffe    	// #-2
    1eb0:	str	x0, [sp, #808]
    1eb4:	add	x0, sp, #0x280
    1eb8:	str	xzr, [sp, #816]
    1ebc:	mov	x2, #0x0                   	// #0
    1ec0:	ldp	x0, x1, [x0, #168]
    1ec4:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    1ec8:	tst	w0, #0xff
    1ecc:	b.eq	1ccc <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1134>  // b.none
    1ed0:	ldr	w1, [sp, #368]
    1ed4:	ldr	x19, [sp, #352]
    1ed8:	lsl	x1, x1, #6
    1edc:	add	x20, x19, x1
    1ee0:	cmp	x19, x20
    1ee4:	b.ne	1f20 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1388>  // b.any
    1ee8:	b	1c64 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x10cc>
    1eec:	ldr	x21, [x19]
    1ef0:	cbz	x21, 1f14 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x137c>
    1ef4:	mov	x1, x21
    1ef8:	ldr	x0, [x1], #16
    1efc:	cmp	x0, x1
    1f00:	b.eq	1f08 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1370>  // b.none
    1f04:	bl	0 <_ZdlPv>
    1f08:	mov	x0, x21
    1f0c:	mov	x1, #0x20                  	// #32
    1f10:	bl	0 <_ZdlPvm>
    1f14:	add	x19, x19, #0x40
    1f18:	cmp	x20, x19
    1f1c:	b.eq	1ff8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1460>  // b.none
    1f20:	ldr	x0, [x19, #8]
    1f24:	cmn	x0, #0x1
    1f28:	b.eq	1eec <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1354>  // b.none
    1f2c:	cmn	x0, #0x2
    1f30:	b.eq	1eec <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1354>  // b.none
    1f34:	add	x0, x19, #0x18
    1f38:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1f3c:	b	1eec <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1354>
    1f40:	mov	x0, #0xffffffffffffffff    	// #-1
    1f44:	str	x0, [sp, #608]
    1f48:	add	x0, sp, #0x200
    1f4c:	str	xzr, [sp, #616]
    1f50:	mov	x2, #0x0                   	// #0
    1f54:	ldp	x0, x1, [x0, #96]
    1f58:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    1f5c:	tst	w0, #0xff
    1f60:	b.eq	1ccc <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1134>  // b.none
    1f64:	mov	x0, #0xfffffffffffffffe    	// #-2
    1f68:	str	x0, [sp, #680]
    1f6c:	add	x0, sp, #0x280
    1f70:	str	xzr, [sp, #688]
    1f74:	mov	x2, #0x0                   	// #0
    1f78:	ldp	x0, x1, [x0, #40]
    1f7c:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    1f80:	tst	w0, #0xff
    1f84:	b.eq	1ccc <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1134>  // b.none
    1f88:	ldr	w1, [sp, #656]
    1f8c:	ldr	x19, [sp, #640]
    1f90:	lsl	x1, x1, #6
    1f94:	add	x20, x19, x1
    1f98:	cmp	x19, x20
    1f9c:	b.ne	1fd8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1440>  // b.any
    1fa0:	b	1c40 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x10a8>
    1fa4:	ldr	x21, [x19]
    1fa8:	cbz	x21, 1fcc <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1434>
    1fac:	mov	x1, x21
    1fb0:	ldr	x0, [x1], #16
    1fb4:	cmp	x0, x1
    1fb8:	b.eq	1fc0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1428>  // b.none
    1fbc:	bl	0 <_ZdlPv>
    1fc0:	mov	x0, x21
    1fc4:	mov	x1, #0x20                  	// #32
    1fc8:	bl	0 <_ZdlPvm>
    1fcc:	add	x19, x19, #0x40
    1fd0:	cmp	x20, x19
    1fd4:	b.eq	2008 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1470>  // b.none
    1fd8:	ldr	x0, [x19, #8]
    1fdc:	cmn	x0, #0x1
    1fe0:	b.eq	1fa4 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x140c>  // b.none
    1fe4:	cmn	x0, #0x2
    1fe8:	b.eq	1fa4 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x140c>  // b.none
    1fec:	add	x0, x19, #0x18
    1ff0:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1ff4:	b	1fa4 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x140c>
    1ff8:	ldr	w1, [sp, #368]
    1ffc:	ldr	x20, [sp, #352]
    2000:	lsl	x1, x1, #6
    2004:	b	1c64 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x10cc>
    2008:	ldr	w1, [sp, #656]
    200c:	ldr	x20, [sp, #640]
    2010:	lsl	x1, x1, #6
    2014:	b	1c40 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x10a8>

0000000000002018 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>:
    2018:	stp	x29, x30, [sp, #-32]!
    201c:	mov	x2, x0
    2020:	mov	x29, sp
    2024:	add	x0, sp, #0x18
    2028:	str	x2, [sp, #24]
    202c:	bl	b98 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE>
    2030:	ldp	x29, x30, [sp], #32
    2034:	ret

Disassembly of section .text._ZN4llvm4json5ValueC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:

0000000000000000 <_ZN4llvm4json5ValueC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x2, #0x0                   	// #0
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x1
  14:	mov	w1, #0x5                   	// #5
  18:	mov	x20, x0
  1c:	strb	w1, [x0]
  20:	ldp	x0, x1, [x19]
  24:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
  28:	tst	w0, #0xff
  2c:	b.eq	94 <_ZN4llvm4json5ValueC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x94>  // b.none
  30:	mov	x0, x19
  34:	add	x1, x20, #0x18
  38:	str	x1, [x20, #8]
  3c:	ldr	x1, [x0], #16
  40:	cmp	x1, x0
  44:	b.eq	70 <_ZN4llvm4json5ValueC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x70>  // b.none
  48:	str	x1, [x20, #8]
  4c:	ldr	x1, [x19, #8]
  50:	stp	x0, xzr, [x19]
  54:	ldr	x2, [x19, #16]
  58:	str	x1, [x20, #16]
  5c:	strb	wzr, [x19, #16]
  60:	str	x2, [x20, #24]
  64:	ldp	x19, x20, [sp, #16]
  68:	ldp	x29, x30, [sp], #32
  6c:	ret
  70:	ldr	x1, [x19, #8]
  74:	stp	x0, xzr, [x19]
  78:	ldp	x2, x3, [x19, #16]
  7c:	str	x1, [x20, #16]
  80:	strb	wzr, [x19, #16]
  84:	stp	x2, x3, [x20, #24]
  88:	ldp	x19, x20, [sp, #16]
  8c:	ldp	x29, x30, [sp], #32
  90:	ret
  94:	adrp	x3, 0 <_ZN4llvm4json5ValueC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
  98:	adrp	x1, 0 <_ZN4llvm4json5ValueC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
  9c:	adrp	x0, 0 <_ZN4llvm4json5ValueC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
  a0:	add	x3, x3, #0x0
  a4:	add	x1, x1, #0x0
  a8:	add	x0, x0, #0x0
  ac:	mov	w2, #0x138                 	// #312
  b0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm4json5ValueC2ENS_9StringRefE:

0000000000000000 <_ZN4llvm4json5ValueC1ENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x3, x0
   8:	mov	x0, x1
   c:	mov	x29, sp
  10:	mov	x1, x2
  14:	mov	w2, #0x4                   	// #4
  18:	strb	w2, [x3]
  1c:	mov	x2, #0x0                   	// #0
  20:	stp	x0, x1, [x3, #8]
  24:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
  28:	tst	w0, #0xff
  2c:	b.eq	38 <_ZN4llvm4json5ValueC1ENS_9StringRefE+0x38>  // b.none
  30:	ldp	x29, x30, [sp], #16
  34:	ret
  38:	adrp	x3, 0 <_ZN4llvm4json5ValueC1ENS_9StringRefE>
  3c:	adrp	x1, 0 <_ZN4llvm4json5ValueC1ENS_9StringRefE>
  40:	adrp	x0, 0 <_ZN4llvm4json5ValueC1ENS_9StringRefE>
  44:	add	x3, x3, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x0, x0, #0x0
  50:	mov	w2, #0x144                 	// #324
  54:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm4json5ValueC2EPKc:

0000000000000000 <_ZN4llvm4json5ValueC1EPKc>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x1
  10:	mov	x20, x0
  14:	mov	x1, #0x0                   	// #0
  18:	cbz	x19, 28 <_ZN4llvm4json5ValueC1EPKc+0x28>
  1c:	mov	x0, x19
  20:	bl	0 <strlen>
  24:	mov	x1, x0
  28:	mov	w0, #0x4                   	// #4
  2c:	strb	w0, [x20]
  30:	stp	x19, x1, [x20, #8]
  34:	mov	x0, x19
  38:	mov	x2, #0x0                   	// #0
  3c:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
  40:	tst	w0, #0xff
  44:	b.eq	54 <_ZN4llvm4json5ValueC1EPKc+0x54>  // b.none
  48:	ldp	x19, x20, [sp, #16]
  4c:	ldp	x29, x30, [sp], #32
  50:	ret
  54:	adrp	x3, 0 <_ZN4llvm4json5ValueC1EPKc>
  58:	adrp	x1, 0 <_ZN4llvm4json5ValueC1EPKc>
  5c:	adrp	x0, 0 <_ZN4llvm4json5ValueC1EPKc>
  60:	add	x3, x3, #0x0
  64:	add	x1, x1, #0x0
  68:	add	x0, x0, #0x0
  6c:	mov	w2, #0x144                 	// #324
  70:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm4json9ObjectKeyC2EPKc:

0000000000000000 <_ZN4llvm4json9ObjectKeyC1EPKc>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	mov	x0, #0x0                   	// #0
  18:	cbz	x1, 24 <_ZN4llvm4json9ObjectKeyC1EPKc+0x24>
  1c:	mov	x0, x1
  20:	bl	0 <strlen>
  24:	stp	xzr, x20, [x19]
  28:	mov	x2, #0x0                   	// #0
  2c:	str	x0, [x19, #16]
  30:	ldp	x0, x1, [x19, #8]
  34:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
  38:	tst	w0, #0xff
  3c:	b.eq	4c <_ZN4llvm4json9ObjectKeyC1EPKc+0x4c>  // b.none
  40:	ldp	x19, x20, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	adrp	x3, 0 <_ZN4llvm4json9ObjectKeyC1EPKc>
  50:	adrp	x1, 0 <_ZN4llvm4json9ObjectKeyC1EPKc>
  54:	adrp	x0, 0 <_ZN4llvm4json9ObjectKeyC1EPKc>
  58:	add	x3, x3, #0x0
  5c:	add	x1, x1, #0x0
  60:	add	x0, x0, #0x0
  64:	mov	w2, #0x1f8                 	// #504
  68:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapINS_4json9ObjectKeyENS1_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS2_S3_EEED2Ev:

0000000000000000 <_ZN4llvm8DenseMapINS_4json9ObjectKeyENS1_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS2_S3_EEED1Ev>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	ldr	w0, [x0, #24]
  14:	stp	x21, x22, [sp, #32]
  18:	cbnz	w0, 38 <_ZN4llvm8DenseMapINS_4json9ObjectKeyENS1_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS2_S3_EEED1Ev+0x38>
  1c:	ldr	x22, [x20, #8]
  20:	mov	x1, #0x0                   	// #0
  24:	mov	x0, x22
  28:	ldp	x19, x20, [sp, #16]
  2c:	ldp	x21, x22, [sp, #32]
  30:	ldp	x29, x30, [sp], #96
  34:	b	0 <_ZdlPvm>
  38:	mov	x0, #0xffffffffffffffff    	// #-1
  3c:	stp	x0, xzr, [sp, #56]
  40:	mov	x2, #0x0                   	// #0
  44:	ldp	x0, x1, [sp, #56]
  48:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
  4c:	tst	w0, #0xff
  50:	b.eq	fc <_ZN4llvm8DenseMapINS_4json9ObjectKeyENS1_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS2_S3_EEED1Ev+0xfc>  // b.none
  54:	mov	x0, #0xfffffffffffffffe    	// #-2
  58:	stp	x0, xzr, [sp, #80]
  5c:	mov	x2, #0x0                   	// #0
  60:	ldp	x0, x1, [sp, #80]
  64:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
  68:	tst	w0, #0xff
  6c:	b.eq	fc <_ZN4llvm8DenseMapINS_4json9ObjectKeyENS1_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS2_S3_EEED1Ev+0xfc>  // b.none
  70:	ldr	w1, [x20, #24]
  74:	ldr	x19, [x20, #8]
  78:	lsl	x1, x1, #6
  7c:	add	x22, x19, x1
  80:	cmp	x19, x22
  84:	b.eq	24 <_ZN4llvm8DenseMapINS_4json9ObjectKeyENS1_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS2_S3_EEED1Ev+0x24>  // b.none
  88:	ldr	x0, [x19, #8]
  8c:	cmn	x0, #0x1
  90:	b.ne	e8 <_ZN4llvm8DenseMapINS_4json9ObjectKeyENS1_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS2_S3_EEED1Ev+0xe8>  // b.any
  94:	ldr	x21, [x19]
  98:	cbz	x21, bc <_ZN4llvm8DenseMapINS_4json9ObjectKeyENS1_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS2_S3_EEED1Ev+0xbc>
  9c:	mov	x1, x21
  a0:	ldr	x0, [x1], #16
  a4:	cmp	x0, x1
  a8:	b.eq	b0 <_ZN4llvm8DenseMapINS_4json9ObjectKeyENS1_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS2_S3_EEED1Ev+0xb0>  // b.none
  ac:	bl	0 <_ZdlPv>
  b0:	mov	x0, x21
  b4:	mov	x1, #0x20                  	// #32
  b8:	bl	0 <_ZdlPvm>
  bc:	add	x19, x19, #0x40
  c0:	cmp	x22, x19
  c4:	b.ne	88 <_ZN4llvm8DenseMapINS_4json9ObjectKeyENS1_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS2_S3_EEED1Ev+0x88>  // b.any
  c8:	ldr	x22, [x20, #8]
  cc:	ldr	w1, [x20, #24]
  d0:	mov	x0, x22
  d4:	ldp	x19, x20, [sp, #16]
  d8:	lsl	x1, x1, #6
  dc:	ldp	x21, x22, [sp, #32]
  e0:	ldp	x29, x30, [sp], #96
  e4:	b	0 <_ZdlPvm>
  e8:	cmn	x0, #0x2
  ec:	b.eq	94 <_ZN4llvm8DenseMapINS_4json9ObjectKeyENS1_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS2_S3_EEED1Ev+0x94>  // b.none
  f0:	add	x0, x19, #0x18
  f4:	bl	0 <_ZN4llvm4json5Value7destroyEv>
  f8:	b	94 <_ZN4llvm8DenseMapINS_4json9ObjectKeyENS1_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS2_S3_EEED1Ev+0x94>
  fc:	adrp	x3, 0 <_ZN4llvm8DenseMapINS_4json9ObjectKeyENS1_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS2_S3_EEED1Ev>
 100:	adrp	x1, 0 <_ZN4llvm8DenseMapINS_4json9ObjectKeyENS1_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS2_S3_EEED1Ev>
 104:	adrp	x0, 0 <_ZN4llvm8DenseMapINS_4json9ObjectKeyENS1_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS2_S3_EEED1Ev>
 108:	add	x3, x3, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x0, x0, #0x0
 114:	mov	w2, #0x1f8                 	// #504
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIN4llvm4json5ValueESaIS2_EED2Ev:

0000000000000000 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EED1Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	ldp	x19, x20, [x0]
  10:	cmp	x19, x20
  14:	b.eq	3c <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EED1Ev+0x3c>  // b.none
  18:	str	x21, [sp, #32]
  1c:	mov	x21, x0
  20:	mov	x0, x19
  24:	add	x19, x19, #0x28
  28:	bl	0 <_ZN4llvm4json5Value7destroyEv>
  2c:	cmp	x20, x19
  30:	b.ne	20 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EED1Ev+0x20>  // b.any
  34:	ldr	x20, [x21]
  38:	ldr	x21, [sp, #32]
  3c:	cbz	x20, 50 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EED1Ev+0x50>
  40:	mov	x0, x20
  44:	ldp	x19, x20, [sp, #16]
  48:	ldp	x29, x30, [sp], #48
  4c:	b	0 <_ZdlPv>
  50:	ldp	x19, x20, [sp, #16]
  54:	ldp	x29, x30, [sp], #48
  58:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E>:
   0:	cbz	x1, 98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x98>
   4:	stp	x29, x30, [sp, #-64]!
   8:	mov	x29, sp
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x21, x1
  14:	str	x23, [sp, #48]
  18:	mov	x23, x0
  1c:	stp	x19, x20, [sp, #16]
  20:	mov	x0, x23
  24:	ldr	x1, [x21, #24]
  28:	mov	x20, x21
  2c:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E>
  30:	ldp	x19, x22, [x21, #64]
  34:	ldr	x21, [x21, #16]
  38:	cmp	x19, x22
  3c:	b.eq	58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x58>  // b.none
  40:	mov	x0, x19
  44:	add	x19, x19, #0x28
  48:	bl	0 <_ZN4llvm4json5Value7destroyEv>
  4c:	cmp	x22, x19
  50:	b.ne	40 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x40>  // b.any
  54:	ldr	x22, [x20, #64]
  58:	cbz	x22, 64 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x64>
  5c:	mov	x0, x22
  60:	bl	0 <_ZdlPv>
  64:	ldr	x0, [x20, #32]
  68:	add	x1, x20, #0x30
  6c:	cmp	x0, x1
  70:	b.eq	78 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x78>  // b.none
  74:	bl	0 <_ZdlPv>
  78:	mov	x0, x20
  7c:	bl	0 <_ZdlPv>
  80:	cbnz	x21, 20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x20>
  84:	ldp	x19, x20, [sp, #16]
  88:	ldp	x21, x22, [sp, #32]
  8c:	ldr	x23, [sp, #48]
  90:	ldp	x29, x30, [sp], #64
  94:	ret
  98:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x3, #0xcccccccccccccccc    	// #-3689348814741910324
   8:	movk	x3, #0xcccd
   c:	mov	x29, sp
  10:	stp	x21, x22, [sp, #32]
  14:	stp	x23, x24, [sp, #48]
  18:	mov	x24, x0
  1c:	ldp	x23, x22, [x0]
  20:	stp	x19, x20, [sp, #16]
  24:	mov	x20, x1
  28:	stp	x25, x26, [sp, #64]
  2c:	mov	x1, #0x3333333333333333    	// #3689348814741910323
  30:	movk	x1, #0x333, lsl #48
  34:	str	x27, [sp, #80]
  38:	sub	x0, x22, x23
  3c:	asr	x0, x0, #3
  40:	mul	x0, x0, x3
  44:	cmp	x0, x1
  48:	b.eq	1c4 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1c4>  // b.none
  4c:	mov	x19, x2
  50:	sub	x21, x20, x23
  54:	cbz	x0, 1a8 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1a8>
  58:	cmp	x0, x0, lsl #1
  5c:	mov	x26, #0x7ffffffffffffff8    	// #9223372036854775800
  60:	lsl	x0, x0, #1
  64:	b.ls	194 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x194>  // b.plast
  68:	mov	x0, x26
  6c:	bl	0 <_Znwm>
  70:	mov	x25, x0
  74:	add	x26, x0, x26
  78:	add	x27, x0, #0x28
  7c:	mov	x1, x19
  80:	add	x0, x25, x21
  84:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
  88:	cmp	x20, x23
  8c:	b.eq	e4 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xe4>  // b.none
  90:	mov	x21, x25
  94:	mov	x19, x23
  98:	mov	x1, x19
  9c:	mov	x0, x21
  a0:	add	x19, x19, #0x28
  a4:	bl	0 <_ZN4llvm4json5Value8copyFromERKS1_>
  a8:	cmp	x20, x19
  ac:	add	x21, x21, #0x28
  b0:	b.ne	98 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x98>  // b.any
  b4:	sub	x27, x20, #0x28
  b8:	mov	x0, #0xcccd                	// #52429
  bc:	sub	x27, x27, x23
  c0:	movk	x0, #0xcccc, lsl #16
  c4:	movk	x0, #0xcccc, lsl #32
  c8:	lsr	x27, x27, #3
  cc:	movk	x0, #0xccc, lsl #48
  d0:	mul	x27, x27, x0
  d4:	and	x27, x27, #0x1fffffffffffffff
  d8:	add	x27, x27, #0x2
  dc:	add	x27, x27, x27, lsl #2
  e0:	add	x27, x25, x27, lsl #3
  e4:	cmp	x20, x22
  e8:	mov	x19, x20
  ec:	mov	x21, x27
  f0:	b.eq	144 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x144>  // b.none
  f4:	nop
  f8:	mov	x1, x19
  fc:	mov	x0, x21
 100:	add	x19, x19, #0x28
 104:	bl	0 <_ZN4llvm4json5Value8copyFromERKS1_>
 108:	cmp	x19, x22
 10c:	add	x21, x21, #0x28
 110:	b.ne	f8 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xf8>  // b.any
 114:	sub	x0, x22, x20
 118:	mov	x1, #0xcccd                	// #52429
 11c:	sub	x0, x0, #0x28
 120:	movk	x1, #0xcccc, lsl #16
 124:	movk	x1, #0xcccc, lsl #32
 128:	lsr	x0, x0, #3
 12c:	movk	x1, #0xccc, lsl #48
 130:	mul	x0, x0, x1
 134:	and	x0, x0, #0x1fffffffffffffff
 138:	add	x0, x0, #0x1
 13c:	add	x0, x0, x0, lsl #2
 140:	add	x27, x27, x0, lsl #3
 144:	cmp	x23, x22
 148:	mov	x19, x23
 14c:	b.eq	164 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x164>  // b.none
 150:	mov	x0, x19
 154:	add	x19, x19, #0x28
 158:	bl	0 <_ZN4llvm4json5Value7destroyEv>
 15c:	cmp	x19, x22
 160:	b.ne	150 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x150>  // b.any
 164:	cbz	x23, 170 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x170>
 168:	mov	x0, x23
 16c:	bl	0 <_ZdlPv>
 170:	ldp	x19, x20, [sp, #16]
 174:	ldp	x21, x22, [sp, #32]
 178:	stp	x25, x27, [x24]
 17c:	str	x26, [x24, #16]
 180:	ldp	x23, x24, [sp, #48]
 184:	ldp	x25, x26, [sp, #64]
 188:	ldr	x27, [sp, #80]
 18c:	ldp	x29, x30, [sp], #96
 190:	ret
 194:	cbnz	x0, 1b0 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1b0>
 198:	mov	x27, #0x28                  	// #40
 19c:	mov	x26, #0x0                   	// #0
 1a0:	mov	x25, #0x0                   	// #0
 1a4:	b	7c <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x7c>
 1a8:	mov	x26, #0x28                  	// #40
 1ac:	b	68 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x68>
 1b0:	cmp	x0, x1
 1b4:	mov	x26, #0x28                  	// #40
 1b8:	csel	x0, x0, x1, ls  // ls = plast
 1bc:	mul	x26, x0, x26
 1c0:	b	68 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x68>
 1c4:	adrp	x0, 0 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 1c8:	add	x0, x0, #0x0
 1cc:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorIN4llvm4json5ValueESaIS2_EE12emplace_backIJS2_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE12emplace_backIJS2_EEEvDpOT_>:
   0:	ldp	x3, x4, [x0, #8]
   4:	cmp	x3, x4
   8:	b.eq	3c <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE12emplace_backIJS2_EEEvDpOT_+0x3c>  // b.none
   c:	stp	x29, x30, [sp, #-32]!
  10:	mov	x29, sp
  14:	str	x19, [sp, #16]
  18:	mov	x19, x0
  1c:	mov	x0, x3
  20:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
  24:	ldr	x0, [x19, #8]
  28:	add	x0, x0, #0x28
  2c:	str	x0, [x19, #8]
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	ret
  3c:	mov	x2, x1
  40:	mov	x1, x3
  44:	b	0 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE12emplace_backIJS2_EEEvDpOT_>

Disassembly of section .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag:

0000000000000000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	cmp	x2, #0x0
   8:	ccmp	x1, #0x0, #0x0, ne  // ne = any
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	str	x21, [sp, #32]
  18:	b.eq	c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0xc8>  // b.none
  1c:	sub	x19, x2, x1
  20:	str	x19, [sp, #56]
  24:	mov	x21, x1
  28:	mov	x20, x0
  2c:	cmp	x19, #0xf
  30:	b.hi	84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x84>  // b.pmore
  34:	cmp	x19, #0x1
  38:	ldr	x0, [x0]
  3c:	b.ne	68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x68>  // b.any
  40:	ldrb	w1, [x1]
  44:	strb	w1, [x0]
  48:	ldr	x0, [x20]
  4c:	ldr	x19, [sp, #56]
  50:	str	x19, [x20, #8]
  54:	strb	wzr, [x0, x19]
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldr	x21, [sp, #32]
  60:	ldp	x29, x30, [sp], #64
  64:	ret
  68:	cbnz	x19, 9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x9c>
  6c:	str	x19, [x20, #8]
  70:	strb	wzr, [x0, x19]
  74:	ldp	x19, x20, [sp, #16]
  78:	ldr	x21, [sp, #32]
  7c:	ldp	x29, x30, [sp], #64
  80:	ret
  84:	add	x1, sp, #0x38
  88:	mov	x2, #0x0                   	// #0
  8c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  90:	str	x0, [x20]
  94:	ldr	x1, [sp, #56]
  98:	str	x1, [x20, #16]
  9c:	mov	x2, x19
  a0:	mov	x1, x21
  a4:	bl	0 <memcpy>
  a8:	ldr	x0, [x20]
  ac:	ldr	x19, [sp, #56]
  b0:	str	x19, [x20, #8]
  b4:	strb	wzr, [x0, x19]
  b8:	ldp	x19, x20, [sp, #16]
  bc:	ldr	x21, [sp, #32]
  c0:	ldp	x29, x30, [sp], #64
  c4:	ret
  c8:	adrp	x0, 0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>
  cc:	add	x0, x0, #0x0
  d0:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	ldr	x19, [x0, #16]
  10:	stp	x21, x22, [sp, #32]
  14:	stp	x23, x24, [sp, #48]
  18:	mov	x23, x1
  1c:	stp	x25, x26, [sp, #64]
  20:	mov	x25, x0
  24:	stp	x27, x28, [sp, #80]
  28:	cbz	x19, fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0xfc>
  2c:	ldp	x28, x21, [x1]
  30:	mov	x22, #0x7fffffff            	// #2147483647
  34:	mov	x24, #0xffffffff80000000    	// #-2147483648
  38:	ldp	x27, x20, [x19, #32]
  3c:	mov	x0, x28
  40:	cmp	x21, x20
  44:	csel	x26, x21, x20, ls  // ls = plast
  48:	cbz	x26, 5c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x5c>
  4c:	mov	x2, x26
  50:	mov	x1, x27
  54:	bl	0 <memcmp>
  58:	cbnz	w0, 74 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x74>
  5c:	sub	x1, x21, x20
  60:	mov	w0, w1
  64:	cmp	x1, x22
  68:	b.gt	8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x8c>
  6c:	cmp	x1, x24
  70:	b.lt	78 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x78>  // b.tstop
  74:	tbz	w0, #31, 8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x8c>
  78:	ldr	x3, [x19, #16]
  7c:	mov	w0, #0x1                   	// #1
  80:	cbz	x3, 98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x98>
  84:	mov	x19, x3
  88:	b	38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x38>
  8c:	ldr	x3, [x19, #24]
  90:	mov	w0, #0x0                   	// #0
  94:	cbnz	x3, 84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x84>
  98:	mov	x22, x19
  9c:	cbnz	w0, 100 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x100>
  a0:	cbz	x26, b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0xb8>
  a4:	mov	x2, x26
  a8:	mov	x1, x28
  ac:	mov	x0, x27
  b0:	bl	0 <memcmp>
  b4:	cbnz	w0, d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0xd4>
  b8:	sub	x0, x20, x21
  bc:	mov	x1, #0x7fffffff            	// #2147483647
  c0:	cmp	x0, x1
  c4:	b.gt	d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0xd8>
  c8:	mov	x1, #0xffffffff80000000    	// #-2147483648
  cc:	cmp	x0, x1
  d0:	b.lt	130 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x130>  // b.tstop
  d4:	tbnz	w0, #31, 130 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x130>
  d8:	mov	x0, x19
  dc:	mov	x1, #0x0                   	// #0
  e0:	ldp	x19, x20, [sp, #16]
  e4:	ldp	x21, x22, [sp, #32]
  e8:	ldp	x23, x24, [sp, #48]
  ec:	ldp	x25, x26, [sp, #64]
  f0:	ldp	x27, x28, [sp, #80]
  f4:	ldp	x29, x30, [sp], #96
  f8:	ret
  fc:	add	x19, x0, #0x8
 100:	ldr	x0, [x25, #24]
 104:	cmp	x19, x0
 108:	b.eq	154 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x154>  // b.none
 10c:	mov	x0, x19
 110:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 114:	ldp	x28, x21, [x23]
 118:	mov	x22, x19
 11c:	ldp	x27, x20, [x0, #32]
 120:	mov	x19, x0
 124:	cmp	x21, x20
 128:	csel	x26, x21, x20, ls  // ls = plast
 12c:	b	a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0xa0>
 130:	mov	x1, x22
 134:	mov	x0, #0x0                   	// #0
 138:	ldp	x19, x20, [sp, #16]
 13c:	ldp	x21, x22, [sp, #32]
 140:	ldp	x23, x24, [sp, #48]
 144:	ldp	x25, x26, [sp, #64]
 148:	ldp	x27, x28, [sp, #80]
 14c:	ldp	x29, x30, [sp], #96
 150:	ret
 154:	mov	x1, x19
 158:	mov	x0, #0x0                   	// #0
 15c:	ldp	x19, x20, [sp, #16]
 160:	ldp	x21, x22, [sp, #32]
 164:	ldp	x23, x24, [sp, #48]
 168:	ldp	x25, x26, [sp, #64]
 16c:	ldp	x27, x28, [sp, #80]
 170:	ldp	x29, x30, [sp], #96
 174:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	add	x3, x0, #0x8
   8:	cmp	x1, x3
   c:	mov	x29, sp
  10:	stp	x23, x24, [sp, #48]
  14:	mov	x23, x0
  18:	mov	x24, x2
  1c:	b.eq	170 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x170>  // b.none
  20:	stp	x19, x20, [sp, #16]
  24:	mov	x19, x1
  28:	stp	x21, x22, [sp, #32]
  2c:	stp	x25, x26, [sp, #64]
  30:	ldp	x25, x20, [x2]
  34:	ldp	x26, x21, [x1, #32]
  38:	cmp	x20, x21
  3c:	csel	x22, x20, x21, ls  // ls = plast
  40:	cbz	x22, d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0xd8>
  44:	mov	x2, x22
  48:	mov	x1, x26
  4c:	mov	x0, x25
  50:	bl	0 <memcmp>
  54:	cmp	w0, #0x0
  58:	cbnz	w0, ec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0xec>
  5c:	sub	x0, x20, x21
  60:	mov	x1, #0x7fffffff            	// #2147483647
  64:	cmp	x0, x1
  68:	b.gt	80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x80>
  6c:	mov	x1, #0xffffffff80000000    	// #-2147483648
  70:	cmp	x0, x1
  74:	b.lt	f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0xf0>  // b.tstop
  78:	tbnz	w0, #31, f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0xf0>
  7c:	cbz	x22, 98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x98>
  80:	mov	x1, x25
  84:	mov	x2, x22
  88:	mov	x0, x26
  8c:	bl	0 <memcmp>
  90:	mov	w1, w0
  94:	cbnz	w0, b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0xb4>
  98:	sub	x1, x21, x20
  9c:	mov	x0, #0x7fffffff            	// #2147483647
  a0:	cmp	x1, x0
  a4:	b.gt	b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0xb8>
  a8:	mov	x0, #0xffffffff80000000    	// #-2147483648
  ac:	cmp	x1, x0
  b0:	b.lt	1f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1f0>  // b.tstop
  b4:	tbnz	w1, #31, 1f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1f0>
  b8:	ldp	x25, x26, [sp, #64]
  bc:	mov	x0, x19
  c0:	mov	x1, #0x0                   	// #0
  c4:	ldp	x19, x20, [sp, #16]
  c8:	ldp	x21, x22, [sp, #32]
  cc:	ldp	x23, x24, [sp, #48]
  d0:	ldp	x29, x30, [sp], #80
  d4:	ret
  d8:	sub	x0, x20, x21
  dc:	mov	x1, #0x7fffffff            	// #2147483647
  e0:	cmp	x0, x1
  e4:	b.le	6c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x6c>
  e8:	b	98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x98>
  ec:	b.ge	80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x80>  // b.tcont
  f0:	ldr	x0, [x23, #24]
  f4:	cmp	x0, x19
  f8:	mov	x0, x19
  fc:	b.eq	280 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x280>  // b.none
 100:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 104:	mov	x21, x0
 108:	ldr	x22, [x0, #40]
 10c:	cmp	x20, x22
 110:	csel	x2, x20, x22, ls  // ls = plast
 114:	cbz	x2, 128 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x128>
 118:	ldr	x0, [x0, #32]
 11c:	mov	x1, x25
 120:	bl	0 <memcmp>
 124:	cbnz	w0, 144 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x144>
 128:	sub	x0, x22, x20
 12c:	mov	x1, #0x7fffffff            	// #2147483647
 130:	cmp	x0, x1
 134:	b.gt	260 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x260>
 138:	mov	x1, #0xffffffff80000000    	// #-2147483648
 13c:	cmp	x0, x1
 140:	b.lt	148 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x148>  // b.tstop
 144:	tbz	w0, #31, 260 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x260>
 148:	ldr	x1, [x21, #24]
 14c:	ldp	x23, x24, [sp, #48]
 150:	cmp	x1, #0x0
 154:	csel	x1, x21, x19, eq  // eq = none
 158:	csel	x0, x19, xzr, ne  // ne = any
 15c:	ldp	x19, x20, [sp, #16]
 160:	ldp	x21, x22, [sp, #32]
 164:	ldp	x25, x26, [sp, #64]
 168:	ldp	x29, x30, [sp], #80
 16c:	ret
 170:	ldr	x0, [x0, #40]
 174:	cbz	x0, 1dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1dc>
 178:	stp	x19, x20, [sp, #16]
 17c:	ldr	x19, [x23, #32]
 180:	stp	x21, x22, [sp, #32]
 184:	ldr	x20, [x2, #8]
 188:	ldr	x21, [x19, #40]
 18c:	cmp	x21, x20
 190:	csel	x2, x21, x20, ls  // ls = plast
 194:	cbz	x2, 1a8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1a8>
 198:	ldr	x1, [x24]
 19c:	ldr	x0, [x19, #32]
 1a0:	bl	0 <memcmp>
 1a4:	cbnz	w0, 1c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1c4>
 1a8:	sub	x0, x21, x20
 1ac:	mov	x1, #0x7fffffff            	// #2147483647
 1b0:	cmp	x0, x1
 1b4:	b.gt	1d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1d4>
 1b8:	mov	x1, #0xffffffff80000000    	// #-2147483648
 1bc:	cmp	x0, x1
 1c0:	b.lt	1c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1c8>  // b.tstop
 1c4:	tbz	w0, #31, 1d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1d4>
 1c8:	mov	x1, x19
 1cc:	mov	x0, #0x0                   	// #0
 1d0:	b	c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0xc4>
 1d4:	ldp	x19, x20, [sp, #16]
 1d8:	ldp	x21, x22, [sp, #32]
 1dc:	mov	x1, x24
 1e0:	mov	x0, x23
 1e4:	ldp	x23, x24, [sp, #48]
 1e8:	ldp	x29, x30, [sp], #80
 1ec:	b	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_>
 1f0:	ldr	x0, [x23, #32]
 1f4:	cmp	x0, x19
 1f8:	b.eq	28c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x28c>  // b.none
 1fc:	mov	x0, x19
 200:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
 204:	ldr	x22, [x0, #40]
 208:	mov	x21, x0
 20c:	cmp	x20, x22
 210:	csel	x2, x20, x22, ls  // ls = plast
 214:	cbz	x2, 228 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x228>
 218:	ldr	x1, [x21, #32]
 21c:	mov	x0, x25
 220:	bl	0 <memcmp>
 224:	cbnz	w0, 244 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x244>
 228:	sub	x0, x20, x22
 22c:	mov	x1, #0x7fffffff            	// #2147483647
 230:	cmp	x0, x1
 234:	b.gt	260 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x260>
 238:	mov	x1, #0xffffffff80000000    	// #-2147483648
 23c:	cmp	x0, x1
 240:	b.lt	248 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x248>  // b.tstop
 244:	tbz	w0, #31, 260 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x260>
 248:	ldr	x1, [x19, #24]
 24c:	ldp	x25, x26, [sp, #64]
 250:	cmp	x1, #0x0
 254:	csel	x0, x21, xzr, ne  // ne = any
 258:	csel	x1, x21, x19, ne  // ne = any
 25c:	b	c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0xc4>
 260:	mov	x1, x24
 264:	mov	x0, x23
 268:	ldp	x19, x20, [sp, #16]
 26c:	ldp	x21, x22, [sp, #32]
 270:	ldp	x23, x24, [sp, #48]
 274:	ldp	x25, x26, [sp, #64]
 278:	ldp	x29, x30, [sp], #80
 27c:	b	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_>
 280:	mov	x1, x19
 284:	ldp	x25, x26, [sp, #64]
 288:	b	c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0xc4>
 28c:	mov	x1, x19
 290:	mov	x0, #0x0                   	// #0
 294:	ldp	x25, x26, [sp, #64]
 298:	b	c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0xc4>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	mov	x22, x3
  10:	mov	x21, x1
  14:	stp	x19, x20, [sp, #16]
  18:	mov	x20, x0
  1c:	mov	x0, #0x58                  	// #88
  20:	stp	x23, x24, [sp, #48]
  24:	bl	0 <_Znwm>
  28:	add	x24, x0, #0x30
  2c:	ldr	x2, [x22]
  30:	str	x24, [x0, #32]
  34:	mov	x19, x0
  38:	add	x22, x0, #0x40
  3c:	add	x23, x0, #0x20
  40:	mov	w3, #0x0                   	// #0
  44:	ldp	x1, x2, [x2]
  48:	mov	x0, x23
  4c:	add	x2, x1, x2
  50:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_>
  54:	str	xzr, [x19, #64]
  58:	mov	x2, x23
  5c:	stp	xzr, xzr, [x22, #8]
  60:	mov	x1, x21
  64:	mov	x0, x20
  68:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_>
  6c:	mov	x23, x0
  70:	cbz	x1, 114 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x114>
  74:	mov	x21, x1
  78:	add	x3, x20, #0x8
  7c:	mov	w0, #0x1                   	// #1
  80:	cbz	x23, b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0xb4>
  84:	mov	x2, x21
  88:	mov	x1, x19
  8c:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  90:	ldr	x1, [x20, #40]
  94:	mov	x0, x19
  98:	ldp	x21, x22, [sp, #32]
  9c:	add	x1, x1, #0x1
  a0:	str	x1, [x20, #40]
  a4:	ldp	x19, x20, [sp, #16]
  a8:	ldp	x23, x24, [sp, #48]
  ac:	ldp	x29, x30, [sp], #80
  b0:	ret
  b4:	cmp	x1, x3
  b8:	b.eq	84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x84>  // b.none
  bc:	ldr	x23, [x19, #40]
  c0:	ldr	x22, [x1, #40]
  c4:	cmp	x23, x22
  c8:	csel	x2, x23, x22, ls  // ls = plast
  cc:	cbz	x2, e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0xe8>
  d0:	ldr	x0, [x19, #32]
  d4:	str	x3, [sp, #72]
  d8:	ldr	x1, [x1, #32]
  dc:	bl	0 <memcmp>
  e0:	ldr	x3, [sp, #72]
  e4:	cbnz	w0, 10c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x10c>
  e8:	sub	x1, x23, x22
  ec:	mov	x2, #0x7fffffff            	// #2147483647
  f0:	mov	w0, #0x0                   	// #0
  f4:	cmp	x1, x2
  f8:	b.gt	84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x84>
  fc:	mov	x0, #0xffffffff80000000    	// #-2147483648
 100:	cmp	x1, x0
 104:	b.lt	17c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x17c>  // b.tstop
 108:	mov	w0, w1
 10c:	lsr	w0, w0, #31
 110:	b	84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x84>
 114:	ldr	x21, [x22, #8]
 118:	ldr	x20, [x19, #64]
 11c:	cmp	x20, x21
 120:	b.eq	140 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x140>  // b.none
 124:	nop
 128:	mov	x0, x20
 12c:	add	x20, x20, #0x28
 130:	bl	0 <_ZN4llvm4json5Value7destroyEv>
 134:	cmp	x21, x20
 138:	b.ne	128 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x128>  // b.any
 13c:	ldr	x21, [x19, #64]
 140:	cbz	x21, 14c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x14c>
 144:	mov	x0, x21
 148:	bl	0 <_ZdlPv>
 14c:	ldr	x0, [x19, #32]
 150:	cmp	x24, x0
 154:	b.eq	15c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x15c>  // b.none
 158:	bl	0 <_ZdlPv>
 15c:	mov	x0, x19
 160:	bl	0 <_ZdlPv>
 164:	mov	x0, x23
 168:	ldp	x19, x20, [sp, #16]
 16c:	ldp	x21, x22, [sp, #32]
 170:	ldp	x23, x24, [sp, #48]
 174:	ldp	x29, x30, [sp], #80
 178:	ret
 17c:	mov	w0, #0x1                   	// #1
 180:	b	84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x84>

Main.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZL11reportErrorPKcN4llvm5TwineE>:
       0:	stp	x29, x30, [sp, #-48]!
       4:	mov	x29, sp
       8:	stp	x19, x20, [sp, #16]
       c:	mov	x20, x1
      10:	stp	x21, x22, [sp, #32]
      14:	mov	x21, x0
      18:	bl	0 <_ZN4llvm4errsEv>
      1c:	mov	x19, x0
      20:	cbz	x21, cc <_ZL11reportErrorPKcN4llvm5TwineE+0xcc>
      24:	mov	x0, x21
      28:	bl	0 <strlen>
      2c:	mov	x22, x0
      30:	ldp	x3, x0, [x19, #16]
      34:	sub	x3, x3, x0
      38:	cmp	x22, x3
      3c:	b.hi	b8 <_ZL11reportErrorPKcN4llvm5TwineE+0xb8>  // b.pmore
      40:	cbz	x22, d4 <_ZL11reportErrorPKcN4llvm5TwineE+0xd4>
      44:	mov	x1, x21
      48:	mov	x2, x22
      4c:	bl	0 <memcpy>
      50:	ldp	x3, x1, [x19, #16]
      54:	add	x0, x1, x22
      58:	str	x0, [x19, #24]
      5c:	sub	x3, x3, x0
      60:	cmp	x3, #0x1
      64:	b.hi	dc <_ZL11reportErrorPKcN4llvm5TwineE+0xdc>  // b.pmore
      68:	mov	x0, x19
      6c:	adrp	x1, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
      70:	mov	x2, #0x2                   	// #2
      74:	add	x1, x1, #0x0
      78:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
      7c:	mov	x19, x0
      80:	mov	x1, x19
      84:	mov	x0, x20
      88:	bl	0 <_ZNK4llvm5Twine5printERNS_11raw_ostreamE>
      8c:	bl	0 <_ZN4llvm4errsEv>
      90:	ldr	x2, [x0, #8]
      94:	ldr	x1, [x0, #24]
      98:	cmp	x1, x2
      9c:	b.eq	a4 <_ZL11reportErrorPKcN4llvm5TwineE+0xa4>  // b.none
      a0:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
      a4:	mov	w0, #0x1                   	// #1
      a8:	ldp	x19, x20, [sp, #16]
      ac:	ldp	x21, x22, [sp, #32]
      b0:	ldp	x29, x30, [sp], #48
      b4:	ret
      b8:	mov	x0, x19
      bc:	mov	x2, x22
      c0:	mov	x1, x21
      c4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
      c8:	mov	x19, x0
      cc:	ldp	x3, x0, [x19, #16]
      d0:	sub	x3, x3, x0
      d4:	cmp	x3, #0x1
      d8:	b.ls	68 <_ZL11reportErrorPKcN4llvm5TwineE+0x68>  // b.plast
      dc:	mov	w1, #0x203a                	// #8250
      e0:	strh	w1, [x0]
      e4:	ldr	x0, [x19, #24]
      e8:	add	x0, x0, #0x2
      ec:	str	x0, [x19, #24]
      f0:	b	80 <_ZL11reportErrorPKcN4llvm5TwineE+0x80>
      f4:	nop

00000000000000f8 <_ZNKSt14default_deleteIN4llvm15TGLocalVarScopeEEclEPS1_.isra.0>:
      f8:	cbz	x0, 138 <_ZNKSt14default_deleteIN4llvm15TGLocalVarScopeEEclEPS1_.isra.0+0x40>
      fc:	stp	x29, x30, [sp, #-32]!
     100:	mov	x29, sp
     104:	str	x19, [sp, #16]
     108:	mov	x19, x0
     10c:	ldr	x0, [x0, #48]
     110:	cbz	x0, 118 <_ZNKSt14default_deleteIN4llvm15TGLocalVarScopeEEclEPS1_.isra.0+0x20>
     114:	bl	f8 <_ZNKSt14default_deleteIN4llvm15TGLocalVarScopeEEclEPS1_.isra.0>
     118:	ldr	x1, [x19, #16]
     11c:	mov	x0, x19
     120:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     124:	mov	x0, x19
     128:	mov	x1, #0x38                  	// #56
     12c:	ldr	x19, [sp, #16]
     130:	ldp	x29, x30, [sp], #32
     134:	b	0 <_ZdlPvm>
     138:	ret
     13c:	nop

0000000000000140 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>:
     140:	sub	sp, sp, #0x5a0
     144:	add	x9, sp, #0x3a0
     148:	add	x10, sp, #0x3d0
     14c:	stp	x29, x30, [sp]
     150:	mov	x29, sp
     154:	stp	x19, x20, [sp, #16]
     158:	add	x20, sp, #0x390
     15c:	add	x3, x20, #0x8
     160:	add	x2, x20, #0x38
     164:	stp	x21, x22, [sp, #32]
     168:	mov	x22, x0
     16c:	stp	x23, x24, [sp, #48]
     170:	add	x0, x20, #0x60
     174:	add	x19, sp, #0x440
     178:	stp	x25, x26, [sp, #64]
     17c:	add	x23, sp, #0xc8
     180:	stp	x27, x28, [sp, #80]
     184:	mov	x27, x1
     188:	mov	w1, #0x6                   	// #6
     18c:	stp	xzr, x3, [x9]
     190:	adrp	x28, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
     194:	add	x21, x28, #0x0
     198:	stp	xzr, x2, [x10]
     19c:	add	x21, x21, #0x288
     1a0:	stp	x3, xzr, [x9, #16]
     1a4:	stp	x2, xzr, [x10, #16]
     1a8:	str	wzr, [sp, #920]
     1ac:	str	wzr, [sp, #968]
     1b0:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
     1b4:	adrp	x3, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
     1b8:	add	x4, x20, #0x80
     1bc:	add	x11, sp, #0x418
     1c0:	mov	w5, #0x104                 	// #260
     1c4:	ldr	x3, [x3]
     1c8:	mov	x0, x19
     1cc:	mov	x8, x23
     1d0:	mov	w2, #0x1                   	// #1
     1d4:	add	x3, x3, #0x10
     1d8:	mov	x1, #0xffffffffffffffff    	// #-1
     1dc:	stp	xzr, x4, [x11]
     1e0:	stp	x4, xzr, [x11, #16]
     1e4:	str	x3, [sp, #1008]
     1e8:	str	wzr, [sp, #1040]
     1ec:	str	wzr, [sp, #1080]
     1f0:	str	x21, [sp, #1088]
     1f4:	str	xzr, [sp, #1096]
     1f8:	strh	w5, [sp, #1104]
     1fc:	bl	0 <_ZN4llvm12MemoryBuffer14getFileOrSTDINERKNS_5TwineElb>
     200:	ldrb	w0, [sp, #216]
     204:	tbz	w0, #0, 484 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x344>
     208:	ldr	w26, [sp, #200]
     20c:	cbz	w26, f2c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xdec>
     210:	add	x25, sp, #0xe0
     214:	mov	x1, x21
     218:	mov	x8, x25
     21c:	adrp	x0, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
     220:	add	x0, x0, #0x0
     224:	ldr	x21, [sp, #208]
     228:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     22c:	ldr	x1, [sp, #232]
     230:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
     234:	sub	x0, x0, x1
     238:	cmp	x0, #0x2
     23c:	b.ls	1140 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1000>  // b.plast
     240:	adrp	x1, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
     244:	add	x1, x1, #0x0
     248:	mov	x2, #0x3                   	// #3
     24c:	mov	x0, x25
     250:	add	x24, sp, #0x100
     254:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
     258:	mov	x1, x0
     25c:	add	x2, x24, #0x10
     260:	str	x2, [sp, #256]
     264:	ldr	x2, [x1], #16
     268:	cmp	x2, x1
     26c:	b.eq	eb8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xd78>  // b.none
     270:	ldr	x3, [x0, #16]
     274:	str	x2, [sp, #256]
     278:	str	x3, [sp, #272]
     27c:	strb	wzr, [x0, #16]
     280:	add	x27, sp, #0x120
     284:	ldr	x2, [x0, #8]
     288:	str	x2, [sp, #264]
     28c:	ldr	x2, [x21]
     290:	mov	x8, x27
     294:	ldr	x2, [x2, #32]
     298:	stp	x1, xzr, [x0]
     29c:	mov	w1, w26
     2a0:	mov	x0, x21
     2a4:	blr	x2
     2a8:	ldp	x3, x4, [sp, #256]
     2ac:	add	x0, x24, #0x10
     2b0:	ldp	x1, x2, [sp, #288]
     2b4:	mov	x6, #0xf                   	// #15
     2b8:	cmp	x3, x0
     2bc:	ldr	x0, [sp, #272]
     2c0:	add	x5, x4, x2
     2c4:	csel	x0, x0, x6, ne  // ne = any
     2c8:	cmp	x5, x0
     2cc:	b.ls	2e8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1a8>  // b.plast
     2d0:	ldr	x0, [sp, #304]
     2d4:	add	x7, x27, #0x10
     2d8:	cmp	x1, x7
     2dc:	csel	x0, x0, x6, ne  // ne = any
     2e0:	cmp	x5, x0
     2e4:	b.ls	ea4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xd64>  // b.plast
     2e8:	mov	x0, x24
     2ec:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
     2f0:	mov	x1, x0
     2f4:	add	x26, sp, #0x140
     2f8:	add	x2, x26, #0x10
     2fc:	str	x2, [sp, #320]
     300:	ldr	x2, [x1], #16
     304:	cmp	x2, x1
     308:	b.eq	ed4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xd94>  // b.none
     30c:	ldr	x3, [x0, #16]
     310:	str	x2, [sp, #320]
     314:	str	x3, [sp, #336]
     318:	ldr	x2, [x0, #8]
     31c:	str	x2, [sp, #328]
     320:	stp	x1, xzr, [x0]
     324:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
     328:	ldr	x1, [sp, #328]
     32c:	strb	wzr, [x0, #16]
     330:	cmp	x1, x2
     334:	b.eq	1140 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1000>  // b.none
     338:	mov	x2, #0x1                   	// #1
     33c:	mov	x0, x26
     340:	adrp	x1, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
     344:	add	x1, x1, #0x0
     348:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
     34c:	mov	x1, x0
     350:	add	x2, x19, #0x10
     354:	str	x2, [sp, #1088]
     358:	ldr	x2, [x0], #16
     35c:	cmp	x2, x0
     360:	b.eq	ec4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xd84>  // b.none
     364:	str	x2, [sp, #1088]
     368:	ldr	x2, [x1, #16]
     36c:	str	x2, [sp, #1104]
     370:	ldr	x2, [x1, #8]
     374:	str	x2, [sp, #1096]
     378:	mov	w2, #0x104                 	// #260
     37c:	stp	x0, xzr, [x1]
     380:	mov	x0, x22
     384:	strb	wzr, [x1, #16]
     388:	add	x1, sp, #0x80
     38c:	strh	w2, [sp, #816]
     390:	add	x2, sp, #0x420
     394:	str	x19, [sp, #800]
     398:	add	x19, x19, #0x10
     39c:	str	xzr, [sp, #808]
     3a0:	ldp	x2, x3, [x2, #-256]
     3a4:	stp	x2, x3, [sp, #128]
     3a8:	ldr	x2, [sp, #816]
     3ac:	str	x2, [sp, #144]
     3b0:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     3b4:	mov	w21, w0
     3b8:	ldr	x1, [sp, #1088]
     3bc:	cmp	x1, x19
     3c0:	b.eq	3cc <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x28c>  // b.none
     3c4:	mov	x0, x1
     3c8:	bl	0 <_ZdlPv>
     3cc:	ldr	x0, [sp, #320]
     3d0:	add	x26, x26, #0x10
     3d4:	cmp	x0, x26
     3d8:	b.eq	3e0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x2a0>  // b.none
     3dc:	bl	0 <_ZdlPv>
     3e0:	ldr	x0, [sp, #288]
     3e4:	add	x27, x27, #0x10
     3e8:	cmp	x0, x27
     3ec:	b.eq	3f4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x2b4>  // b.none
     3f0:	bl	0 <_ZdlPv>
     3f4:	ldr	x0, [sp, #256]
     3f8:	add	x24, x24, #0x10
     3fc:	cmp	x0, x24
     400:	b.eq	408 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x2c8>  // b.none
     404:	bl	0 <_ZdlPv>
     408:	ldr	x0, [sp, #224]
     40c:	add	x25, x25, #0x10
     410:	cmp	x0, x25
     414:	b.eq	41c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x2dc>  // b.none
     418:	bl	0 <_ZdlPv>
     41c:	mov	x0, x23
     420:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     424:	ldr	x1, [sp, #1048]
     428:	add	x0, x20, #0x78
     42c:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     430:	adrp	x1, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
     434:	add	x0, x20, #0x60
     438:	ldr	x1, [x1]
     43c:	add	x1, x1, #0x10
     440:	str	x1, [sp, #1008]
     444:	bl	0 <_ZN4llvm14FoldingSetBaseD2Ev>
     448:	ldr	x1, [sp, #976]
     44c:	add	x0, x20, #0x30
     450:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     454:	ldr	x1, [sp, #928]
     458:	mov	x0, x20
     45c:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     460:	mov	w0, w21
     464:	ldp	x29, x30, [sp]
     468:	ldp	x19, x20, [sp, #16]
     46c:	ldp	x21, x22, [sp, #32]
     470:	ldp	x23, x24, [sp, #48]
     474:	ldp	x25, x26, [sp, #64]
     478:	ldp	x27, x28, [sp, #80]
     47c:	add	sp, sp, #0x5a0
     480:	ret
     484:	adrp	x21, 0 <_ZN4llvm6SrcMgrE>
     488:	str	xzr, [sp, #1096]
     48c:	ldr	x0, [sp, #200]
     490:	str	x0, [sp, #1088]
     494:	ldr	x24, [x21]
     498:	str	xzr, [sp, #200]
     49c:	str	xzr, [sp, #1104]
     4a0:	ldr	x0, [x24, #8]
     4a4:	ldr	x1, [x24, #16]
     4a8:	cmp	x0, x1
     4ac:	b.eq	9cc <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x88c>  // b.none
     4b0:	mov	x1, x19
     4b4:	bl	0 <_ZN4llvm9SourceMgr9SrcBufferC1EOS1_>
     4b8:	ldr	x0, [x24, #8]
     4bc:	add	x0, x0, #0x18
     4c0:	str	x0, [x24, #8]
     4c4:	mov	x0, x19
     4c8:	bl	0 <_ZN4llvm9SourceMgr9SrcBufferD1Ev>
     4cc:	ldr	x21, [x21]
     4d0:	add	x25, x28, #0x0
     4d4:	add	x1, x25, #0x388
     4d8:	add	x0, x21, #0x18
     4dc:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     4e0:	ldr	x2, [x25, #1128]
     4e4:	mov	x1, x21
     4e8:	ldr	x3, [x25, #1136]
     4ec:	mov	x0, x19
     4f0:	sub	x3, x3, x2
     4f4:	asr	x3, x3, #5
     4f8:	bl	0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     4fc:	add	x7, sp, #0x530
     500:	add	x8, sp, #0x550
     504:	str	xzr, [sp, #1288]
     508:	add	x1, x19, #0xe8
     50c:	str	xzr, [sp, #1296]
     510:	add	x3, x19, #0x138
     514:	str	xzr, [sp, #1304]
     518:	mov	x2, #0x200000000           	// #8589934592
     51c:	str	wzr, [sp, #1320]
     520:	mov	x0, x19
     524:	stp	xzr, x1, [x7]
     528:	stp	x1, xzr, [x7, #16]
     52c:	stp	xzr, xzr, [x8]
     530:	stp	xzr, x3, [x8, #16]
     534:	str	x2, [sp, #1392]
     538:	str	xzr, [sp, #1416]
     53c:	str	xzr, [sp, #1424]
     540:	str	x20, [sp, #1432]
     544:	bl	0 <_ZN4llvm8TGParser9ParseFileEv>
     548:	tst	w0, #0xff
     54c:	b.ne	9e0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x8a0>  // b.any
     550:	adrp	x2, 0 <_ZTVN4llvm18raw_string_ostreamE>
     554:	add	x24, sp, #0x160
     558:	add	x6, sp, #0x280
     55c:	add	x3, x24, #0x10
     560:	ldr	x2, [x2]
     564:	add	x26, sp, #0x280
     568:	mov	x0, x26
     56c:	mov	x1, x20
     570:	add	x2, x2, #0x10
     574:	mov	w21, #0x1                   	// #1
     578:	stp	x2, xzr, [x6]
     57c:	stp	xzr, xzr, [x6, #16]
     580:	stp	x3, xzr, [sp, #352]
     584:	strb	wzr, [sp, #368]
     588:	str	w21, [sp, #672]
     58c:	str	x24, [sp, #680]
     590:	blr	x27
     594:	tst	w0, #0xff
     598:	b.ne	6a8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x568>  // b.any
     59c:	ldr	x0, [x25, #400]
     5a0:	add	x21, x25, #0x100
     5a4:	cbnz	x0, 9e8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x8a8>
     5a8:	add	x0, x28, #0x0
     5ac:	add	x25, sp, #0x2b0
     5b0:	ldrb	w1, [x0, #1352]
     5b4:	cbz	w1, 628 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x4e8>
     5b8:	add	x4, x0, #0x88
     5bc:	mov	w5, #0x104                 	// #260
     5c0:	add	x0, sp, #0x320
     5c4:	mov	x8, x25
     5c8:	mov	w3, #0x0                   	// #0
     5cc:	mov	w2, #0x1                   	// #1
     5d0:	mov	x1, #0xffffffffffffffff    	// #-1
     5d4:	str	x4, [sp, #800]
     5d8:	str	xzr, [sp, #808]
     5dc:	strh	w5, [sp, #816]
     5e0:	bl	0 <_ZN4llvm12MemoryBuffer7getFileERKNS_5TwineElbb>
     5e4:	ldrb	w0, [sp, #704]
     5e8:	tbnz	w0, #0, 620 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x4e0>
     5ec:	ldr	x0, [sp, #688]
     5f0:	ldr	x1, [sp, #648]
     5f4:	ldp	x27, x21, [x0, #8]
     5f8:	ldr	x2, [sp, #664]
     5fc:	cmp	x2, x1
     600:	sub	x21, x21, x27
     604:	b.eq	610 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x4d0>  // b.none
     608:	mov	x0, x26
     60c:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     610:	ldr	x0, [sp, #680]
     614:	ldr	x1, [x0, #8]
     618:	cmp	x1, x21
     61c:	b.eq	fa4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xe64>  // b.none
     620:	mov	x0, x25
     624:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     628:	add	x27, x28, #0x0
     62c:	str	wzr, [sp, #168]
     630:	bl	0 <_ZNSt3_V215system_categoryEv>
     634:	mov	x5, x0
     638:	add	x3, sp, #0xa8
     63c:	mov	x0, x25
     640:	ldp	x1, x2, [x27, #136]
     644:	mov	w4, #0x0                   	// #0
     648:	str	x5, [sp, #176]
     64c:	bl	0 <_ZN4llvm14ToolOutputFileC1ENS_9StringRefERSt10error_codeNS_3sys2fs9OpenFlagsE>
     650:	ldr	w21, [sp, #168]
     654:	cbnz	w21, c74 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xb34>
     658:	ldr	x0, [sp, #648]
     65c:	ldr	x1, [sp, #664]
     660:	cmp	x1, x0
     664:	b.eq	670 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x530>  // b.none
     668:	mov	x0, x26
     66c:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     670:	ldr	x2, [sp, #680]
     674:	add	x0, x25, #0x28
     678:	ldp	x1, x2, [x2]
     67c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     680:	adrp	x0, 0 <_ZN4llvm13ErrorsPrintedE>
     684:	ldr	x0, [x0]
     688:	ldr	w0, [x0]
     68c:	cbnz	w0, ee0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xda0>
     690:	mov	w0, #0x1                   	// #1
     694:	strb	w0, [sp, #720]
     698:	add	x0, x25, #0x28
     69c:	bl	0 <_ZN4llvm14raw_fd_ostreamD1Ev>
     6a0:	mov	x0, x25
     6a4:	bl	0 <_ZN4llvm14ToolOutputFile16CleanupInstallerD1Ev>
     6a8:	mov	x0, x26
     6ac:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
     6b0:	ldr	x0, [sp, #352]
     6b4:	add	x24, x24, #0x10
     6b8:	cmp	x0, x24
     6bc:	b.eq	6c4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x584>  // b.none
     6c0:	bl	0 <_ZdlPv>
     6c4:	ldr	x22, [sp, #1424]
     6c8:	cbz	x22, 770 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x630>
     6cc:	ldr	x24, [x22, #48]
     6d0:	cbz	x24, 758 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x618>
     6d4:	ldr	x25, [x24, #48]
     6d8:	cbz	x25, 740 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x600>
     6dc:	ldr	x26, [x25, #48]
     6e0:	cbz	x26, 728 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x5e8>
     6e4:	ldr	x27, [x26, #48]
     6e8:	cbz	x27, 710 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x5d0>
     6ec:	ldr	x0, [x27, #48]
     6f0:	cbz	x0, 6f8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x5b8>
     6f4:	bl	f8 <_ZNKSt14default_deleteIN4llvm15TGLocalVarScopeEEclEPS1_.isra.0>
     6f8:	ldr	x1, [x27, #16]
     6fc:	mov	x0, x27
     700:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     704:	mov	x0, x27
     708:	mov	x1, #0x38                  	// #56
     70c:	bl	0 <_ZdlPvm>
     710:	ldr	x1, [x26, #16]
     714:	mov	x0, x26
     718:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     71c:	mov	x0, x26
     720:	mov	x1, #0x38                  	// #56
     724:	bl	0 <_ZdlPvm>
     728:	ldr	x1, [x25, #16]
     72c:	mov	x0, x25
     730:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     734:	mov	x0, x25
     738:	mov	x1, #0x38                  	// #56
     73c:	bl	0 <_ZdlPvm>
     740:	ldr	x1, [x24, #16]
     744:	mov	x0, x24
     748:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     74c:	mov	x0, x24
     750:	mov	x1, #0x38                  	// #56
     754:	bl	0 <_ZdlPvm>
     758:	ldr	x1, [x22, #16]
     75c:	mov	x0, x22
     760:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     764:	mov	x0, x22
     768:	mov	x1, #0x38                  	// #56
     76c:	bl	0 <_ZdlPvm>
     770:	ldr	x0, [sp, #1384]
     774:	add	x1, x19, #0x138
     778:	cmp	x0, x1
     77c:	b.eq	784 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x644>  // b.none
     780:	bl	0 <free>
     784:	ldr	x27, [sp, #1360]
     788:	ldr	x28, [sp, #1368]
     78c:	cmp	x27, x28
     790:	b.eq	878 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x738>  // b.none
     794:	nop
     798:	ldr	x25, [x27]
     79c:	cbz	x25, 868 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x728>
     7a0:	ldp	x24, x26, [x25, #24]
     7a4:	cmp	x24, x26
     7a8:	b.eq	850 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x710>  // b.none
     7ac:	nop
     7b0:	ldr	x22, [x24, #8]
     7b4:	cbz	x22, 7cc <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x68c>
     7b8:	add	x0, x22, #0x18
     7bc:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     7c0:	mov	x0, x22
     7c4:	mov	x1, #0x30                  	// #48
     7c8:	bl	0 <_ZdlPvm>
     7cc:	ldr	x22, [x24]
     7d0:	cbz	x22, 840 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x700>
     7d4:	ldr	x0, [x22, #88]
     7d8:	add	x1, x22, #0x68
     7dc:	add	x2, x22, #0x58
     7e0:	cmp	x0, x1
     7e4:	b.eq	7f4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x6b4>  // b.none
     7e8:	str	x2, [sp, #96]
     7ec:	bl	0 <free>
     7f0:	ldr	x2, [sp, #96]
     7f4:	add	x1, x22, #0x48
     7f8:	ldr	x0, [x22, #72]
     7fc:	cmp	x2, x0
     800:	b.eq	810 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x6d0>  // b.none
     804:	str	x1, [sp, #96]
     808:	bl	0 <free>
     80c:	ldr	x1, [sp, #96]
     810:	ldr	x0, [x22, #56]
     814:	cmp	x1, x0
     818:	b.eq	820 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x6e0>  // b.none
     81c:	bl	0 <free>
     820:	ldr	x0, [x22, #8]
     824:	add	x1, x22, #0x18
     828:	cmp	x0, x1
     82c:	b.eq	834 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x6f4>  // b.none
     830:	bl	0 <free>
     834:	mov	x0, x22
     838:	mov	x1, #0x80                  	// #128
     83c:	bl	0 <_ZdlPvm>
     840:	add	x24, x24, #0x10
     844:	cmp	x26, x24
     848:	b.ne	7b0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x670>  // b.any
     84c:	ldr	x26, [x25, #24]
     850:	cbz	x26, 85c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x71c>
     854:	mov	x0, x26
     858:	bl	0 <_ZdlPv>
     85c:	mov	x0, x25
     860:	mov	x1, #0x30                  	// #48
     864:	bl	0 <_ZdlPvm>
     868:	add	x27, x27, #0x8
     86c:	cmp	x28, x27
     870:	b.ne	798 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x658>  // b.any
     874:	ldr	x28, [sp, #1360]
     878:	cbz	x28, 884 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x744>
     87c:	mov	x0, x28
     880:	bl	0 <_ZdlPv>
     884:	ldr	x1, [sp, #1328]
     888:	add	x0, x19, #0xe0
     88c:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     890:	ldr	x24, [sp, #1288]
     894:	ldr	x26, [sp, #1296]
     898:	cmp	x24, x26
     89c:	b.eq	900 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x7c0>  // b.none
     8a0:	mov	w27, #0x30                  	// #48
     8a4:	nop
     8a8:	ldr	w22, [x24, #8]
     8ac:	ldr	x25, [x24]
     8b0:	umaddl	x22, w22, w27, x25
     8b4:	cmp	x25, x22
     8b8:	b.eq	8dc <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x79c>  // b.none
     8bc:	nop
     8c0:	ldur	x0, [x22, #-40]
     8c4:	sub	x22, x22, #0x30
     8c8:	cbz	x0, 8d0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x790>
     8cc:	bl	0 <_ZdlPv>
     8d0:	cmp	x25, x22
     8d4:	b.ne	8c0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x780>  // b.any
     8d8:	ldr	x22, [x24]
     8dc:	add	x0, x24, #0x10
     8e0:	cmp	x22, x0
     8e4:	b.eq	8f0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x7b0>  // b.none
     8e8:	mov	x0, x22
     8ec:	bl	0 <free>
     8f0:	add	x24, x24, #0xd0
     8f4:	cmp	x26, x24
     8f8:	b.ne	8a8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x768>  // b.any
     8fc:	ldr	x26, [sp, #1288]
     900:	cbz	x26, 90c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x7cc>
     904:	mov	x0, x26
     908:	bl	0 <_ZdlPv>
     90c:	ldr	x22, [sp, #1264]
     910:	ldr	x25, [sp, #1272]
     914:	cmp	x22, x25
     918:	b.eq	950 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x810>  // b.none
     91c:	nop
     920:	ldr	x24, [x22]
     924:	cbz	x24, 940 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x800>
     928:	ldr	x0, [x24]
     92c:	cbz	x0, 934 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x7f4>
     930:	bl	0 <_ZdlPv>
     934:	mov	x0, x24
     938:	mov	x1, #0x18                  	// #24
     93c:	bl	0 <_ZdlPvm>
     940:	add	x22, x22, #0x8
     944:	cmp	x25, x22
     948:	b.ne	920 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x7e0>  // b.any
     94c:	ldr	x25, [sp, #1264]
     950:	cbz	x25, 95c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x81c>
     954:	mov	x0, x25
     958:	bl	0 <_ZdlPv>
     95c:	ldr	w0, [sp, #1244]
     960:	ldr	x1, [sp, #1232]
     964:	cbz	w0, 9a4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x864>
     968:	ldr	w24, [sp, #1240]
     96c:	cbz	w24, 9a4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x864>
     970:	sub	w24, w24, #0x1
     974:	mov	x22, #0x0                   	// #0
     978:	add	x24, x24, #0x1
     97c:	lsl	x24, x24, #3
     980:	ldr	x0, [x1, x22]
     984:	cmp	x0, #0x0
     988:	ccmn	x0, #0x8, #0x4, ne  // ne = any
     98c:	b.eq	998 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x858>  // b.none
     990:	bl	0 <free>
     994:	ldr	x1, [sp, #1232]
     998:	add	x22, x22, #0x8
     99c:	cmp	x22, x24
     9a0:	b.ne	980 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x840>  // b.any
     9a4:	mov	x0, x1
     9a8:	bl	0 <free>
     9ac:	ldr	x1, [sp, #1200]
     9b0:	add	x0, x19, #0x60
     9b4:	add	x19, x19, #0x40
     9b8:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     9bc:	ldr	x0, [sp, #1136]
     9c0:	cmp	x0, x19
     9c4:	b.ne	418 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x2d8>  // b.any
     9c8:	b	41c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x2dc>
     9cc:	mov	x1, x0
     9d0:	mov	x2, x19
     9d4:	mov	x0, x24
     9d8:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     9dc:	b	4c4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x384>
     9e0:	mov	w21, #0x1                   	// #1
     9e4:	b	6c4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x584>
     9e8:	adrp	x1, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
     9ec:	add	x0, x25, #0x88
     9f0:	add	x1, x1, #0x0
     9f4:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>
     9f8:	cbz	w0, f4c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xe0c>
     9fc:	str	wzr, [sp, #184]
     a00:	bl	0 <_ZNSt3_V215system_categoryEv>
     a04:	ldp	x1, x2, [x21, #136]
     a08:	mov	x5, x0
     a0c:	add	x27, sp, #0x320
     a10:	add	x3, sp, #0xb8
     a14:	mov	x0, x27
     a18:	mov	w4, #0x0                   	// #0
     a1c:	str	x5, [sp, #192]
     a20:	bl	0 <_ZN4llvm14ToolOutputFileC1ENS_9StringRefERSt10error_codeNS_3sys2fs9OpenFlagsE>
     a24:	ldr	w0, [sp, #184]
     a28:	cbz	w0, fcc <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xe8c>
     a2c:	add	x21, sp, #0x220
     a30:	add	x1, x25, #0x188
     a34:	mov	x8, x21
     a38:	adrp	x0, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
     a3c:	add	x0, x0, #0x0
     a40:	str	x21, [sp, #120]
     a44:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     a48:	ldr	x1, [sp, #552]
     a4c:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
     a50:	cmp	x1, x0
     a54:	b.eq	1140 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1000>  // b.none
     a58:	mov	x2, #0x1                   	// #1
     a5c:	mov	x0, x21
     a60:	adrp	x1, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
     a64:	add	x1, x1, #0x0
     a68:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
     a6c:	mov	x2, x0
     a70:	mov	x3, x2
     a74:	add	x0, sp, #0x240
     a78:	str	x0, [sp, #96]
     a7c:	add	x0, sp, #0x250
     a80:	str	x0, [sp, #576]
     a84:	ldr	x0, [x3], #16
     a88:	cmp	x0, x3
     a8c:	b.eq	110c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xfcc>  // b.none
     a90:	ldr	x1, [x2, #16]
     a94:	str	x0, [sp, #576]
     a98:	str	x1, [sp, #592]
     a9c:	ldr	x0, [sp, #192]
     aa0:	strb	wzr, [x2, #16]
     aa4:	ldr	x4, [x2, #8]
     aa8:	str	x4, [sp, #584]
     aac:	ldr	x4, [x0]
     ab0:	add	x21, sp, #0x200
     ab4:	ldr	w1, [sp, #184]
     ab8:	mov	x8, x21
     abc:	stp	x3, xzr, [x2]
     ac0:	ldr	x2, [x4, #32]
     ac4:	str	x21, [sp, #112]
     ac8:	blr	x2
     acc:	add	x5, sp, #0x200
     ad0:	mov	x6, #0xf                   	// #15
     ad4:	ldr	x0, [sp, #96]
     ad8:	ldp	x3, x4, [x5, #64]
     adc:	add	x0, x0, #0x10
     ae0:	ldp	x1, x2, [x5]
     ae4:	cmp	x3, x0
     ae8:	ldr	x0, [sp, #592]
     aec:	add	x5, x4, x2
     af0:	csel	x0, x0, x6, ne  // ne = any
     af4:	cmp	x5, x0
     af8:	b.ls	b14 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x9d4>  // b.plast
     afc:	ldr	x0, [sp, #528]
     b00:	add	x7, x21, #0x10
     b04:	cmp	x1, x7
     b08:	csel	x0, x0, x6, ne  // ne = any
     b0c:	cmp	x5, x0
     b10:	b.ls	112c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xfec>  // b.plast
     b14:	ldr	x0, [sp, #96]
     b18:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
     b1c:	add	x1, sp, #0x260
     b20:	mov	x2, x1
     b24:	mov	x1, x0
     b28:	str	x2, [sp, #104]
     b2c:	add	x2, x2, #0x10
     b30:	str	x2, [sp, #608]
     b34:	ldr	x2, [x1], #16
     b38:	cmp	x2, x1
     b3c:	b.eq	10fc <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xfbc>  // b.none
     b40:	str	x2, [sp, #608]
     b44:	ldr	x2, [x0, #16]
     b48:	str	x2, [sp, #624]
     b4c:	ldr	x2, [x0, #8]
     b50:	str	x2, [sp, #616]
     b54:	stp	x1, xzr, [x0]
     b58:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
     b5c:	strb	wzr, [x0, #16]
     b60:	ldr	x0, [sp, #616]
     b64:	cmp	x0, x2
     b68:	b.eq	1140 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1000>  // b.none
     b6c:	ldr	x0, [sp, #104]
     b70:	adrp	x1, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
     b74:	add	x1, x1, #0x0
     b78:	mov	x2, #0x1                   	// #1
     b7c:	add	x25, sp, #0x2b0
     b80:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
     b84:	mov	x1, x0
     b88:	add	x2, x25, #0x10
     b8c:	str	x2, [sp, #688]
     b90:	ldr	x2, [x1], #16
     b94:	cmp	x2, x1
     b98:	b.eq	111c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xfdc>  // b.none
     b9c:	str	x2, [sp, #688]
     ba0:	ldr	x2, [x0, #16]
     ba4:	str	x2, [sp, #704]
     ba8:	ldr	x2, [x0, #8]
     bac:	str	x2, [sp, #696]
     bb0:	stp	x1, xzr, [x0]
     bb4:	mov	w2, #0x104                 	// #260
     bb8:	add	x1, sp, #0x80
     bbc:	strb	wzr, [x0, #16]
     bc0:	mov	x0, x22
     bc4:	stp	x25, xzr, [sp, #480]
     bc8:	add	x25, x25, #0x10
     bcc:	strh	w2, [sp, #496]
     bd0:	ldp	x2, x3, [sp, #480]
     bd4:	stp	x2, x3, [sp, #128]
     bd8:	ldr	x2, [sp, #496]
     bdc:	str	x2, [sp, #144]
     be0:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     be4:	mov	w21, w0
     be8:	ldr	x1, [sp, #688]
     bec:	cmp	x1, x25
     bf0:	b.eq	bfc <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xabc>  // b.none
     bf4:	mov	x0, x1
     bf8:	bl	0 <_ZdlPv>
     bfc:	ldr	x1, [sp, #104]
     c00:	ldr	x0, [sp, #608]
     c04:	add	x1, x1, #0x10
     c08:	cmp	x0, x1
     c0c:	b.eq	c14 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xad4>  // b.none
     c10:	bl	0 <_ZdlPv>
     c14:	ldr	x1, [sp, #112]
     c18:	ldr	x0, [sp, #512]
     c1c:	add	x1, x1, #0x10
     c20:	cmp	x0, x1
     c24:	b.eq	c2c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xaec>  // b.none
     c28:	bl	0 <_ZdlPv>
     c2c:	ldr	x1, [sp, #96]
     c30:	ldr	x0, [sp, #576]
     c34:	add	x1, x1, #0x10
     c38:	cmp	x0, x1
     c3c:	b.eq	c44 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xb04>  // b.none
     c40:	bl	0 <_ZdlPv>
     c44:	ldr	x1, [sp, #120]
     c48:	ldr	x0, [sp, #544]
     c4c:	add	x1, x1, #0x10
     c50:	cmp	x0, x1
     c54:	b.eq	c5c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xb1c>  // b.none
     c58:	bl	0 <_ZdlPv>
     c5c:	add	x0, x27, #0x28
     c60:	bl	0 <_ZN4llvm14raw_fd_ostreamD1Ev>
     c64:	mov	x0, x27
     c68:	bl	0 <_ZN4llvm14ToolOutputFile16CleanupInstallerD1Ev>
     c6c:	cbnz	w21, 6a8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x568>
     c70:	b	5a8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x468>
     c74:	add	x28, sp, #0x180
     c78:	add	x1, x27, #0x88
     c7c:	mov	x8, x28
     c80:	adrp	x0, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
     c84:	add	x0, x0, #0x0
     c88:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     c8c:	ldr	x1, [sp, #392]
     c90:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
     c94:	cmp	x1, x0
     c98:	b.eq	1140 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1000>  // b.none
     c9c:	mov	x2, #0x1                   	// #1
     ca0:	mov	x0, x28
     ca4:	adrp	x1, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
     ca8:	add	x1, x1, #0x0
     cac:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
     cb0:	mov	x2, x0
     cb4:	mov	x3, x2
     cb8:	add	x0, sp, #0x1a0
     cbc:	str	x0, [sp, #96]
     cc0:	add	x0, sp, #0x1b0
     cc4:	str	x0, [sp, #416]
     cc8:	ldr	x0, [x3], #16
     ccc:	cmp	x0, x3
     cd0:	b.eq	10b4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xf74>  // b.none
     cd4:	ldr	x1, [x2, #16]
     cd8:	str	x0, [sp, #416]
     cdc:	str	x1, [sp, #432]
     ce0:	ldr	x0, [sp, #176]
     ce4:	strb	wzr, [x2, #16]
     ce8:	ldr	x4, [x2, #8]
     cec:	str	x4, [sp, #424]
     cf0:	ldr	x4, [x0]
     cf4:	add	x21, sp, #0x1c0
     cf8:	ldr	w1, [sp, #168]
     cfc:	mov	x8, x21
     d00:	stp	x3, xzr, [x2]
     d04:	ldr	x2, [x4, #32]
     d08:	str	x21, [sp, #112]
     d0c:	blr	x2
     d10:	ldp	x3, x4, [sp, #416]
     d14:	mov	x6, #0xf                   	// #15
     d18:	ldr	x0, [sp, #96]
     d1c:	ldp	x1, x2, [sp, #448]
     d20:	add	x0, x0, #0x10
     d24:	cmp	x3, x0
     d28:	ldr	x0, [sp, #432]
     d2c:	add	x5, x4, x2
     d30:	csel	x0, x0, x6, ne  // ne = any
     d34:	cmp	x5, x0
     d38:	b.ls	d54 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xc14>  // b.plast
     d3c:	ldr	x0, [sp, #464]
     d40:	add	x7, x21, #0x10
     d44:	cmp	x1, x7
     d48:	csel	x0, x0, x6, ne  // ne = any
     d4c:	cmp	x5, x0
     d50:	b.ls	f90 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xe50>  // b.plast
     d54:	ldr	x0, [sp, #96]
     d58:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
     d5c:	add	x1, sp, #0x1e0
     d60:	mov	x2, x1
     d64:	mov	x1, x0
     d68:	str	x2, [sp, #104]
     d6c:	add	x2, x2, #0x10
     d70:	str	x2, [sp, #480]
     d74:	ldr	x2, [x1], #16
     d78:	cmp	x2, x1
     d7c:	b.eq	10a8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xf68>  // b.none
     d80:	str	x2, [sp, #480]
     d84:	ldr	x2, [x0, #16]
     d88:	str	x2, [sp, #496]
     d8c:	ldr	x2, [x0, #8]
     d90:	str	x2, [sp, #488]
     d94:	stp	x1, xzr, [x0]
     d98:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
     d9c:	strb	wzr, [x0, #16]
     da0:	ldr	x0, [sp, #488]
     da4:	cmp	x0, x2
     da8:	b.eq	1140 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1000>  // b.none
     dac:	ldr	x0, [sp, #104]
     db0:	mov	x2, #0x1                   	// #1
     db4:	add	x27, sp, #0x320
     db8:	adrp	x1, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
     dbc:	add	x1, x1, #0x0
     dc0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
     dc4:	mov	x1, x0
     dc8:	add	x2, x27, #0x10
     dcc:	str	x2, [sp, #800]
     dd0:	ldr	x2, [x0], #16
     dd4:	cmp	x2, x0
     dd8:	b.eq	10c0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xf80>  // b.none
     ddc:	str	x2, [sp, #800]
     de0:	ldr	x2, [x1, #16]
     de4:	str	x2, [sp, #816]
     de8:	ldr	x2, [x1, #8]
     dec:	str	x2, [sp, #808]
     df0:	mov	w2, #0x104                 	// #260
     df4:	stp	x0, xzr, [x1]
     df8:	mov	x0, x22
     dfc:	strb	wzr, [x1, #16]
     e00:	add	x1, sp, #0x80
     e04:	strh	w2, [sp, #624]
     e08:	add	x2, sp, #0x220
     e0c:	str	x27, [sp, #608]
     e10:	add	x27, x27, #0x10
     e14:	str	xzr, [sp, #616]
     e18:	ldp	x2, x3, [x2, #64]
     e1c:	stp	x2, x3, [sp, #128]
     e20:	ldr	x2, [sp, #624]
     e24:	str	x2, [sp, #144]
     e28:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     e2c:	mov	w21, w0
     e30:	ldr	x1, [sp, #800]
     e34:	cmp	x1, x27
     e38:	b.eq	e44 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xd04>  // b.none
     e3c:	mov	x0, x1
     e40:	bl	0 <_ZdlPv>
     e44:	ldr	x1, [sp, #104]
     e48:	ldr	x0, [sp, #480]
     e4c:	add	x1, x1, #0x10
     e50:	cmp	x0, x1
     e54:	b.eq	e5c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xd1c>  // b.none
     e58:	bl	0 <_ZdlPv>
     e5c:	ldr	x1, [sp, #112]
     e60:	ldr	x0, [sp, #448]
     e64:	add	x1, x1, #0x10
     e68:	cmp	x0, x1
     e6c:	b.eq	e74 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xd34>  // b.none
     e70:	bl	0 <_ZdlPv>
     e74:	ldr	x1, [sp, #96]
     e78:	ldr	x0, [sp, #416]
     e7c:	add	x1, x1, #0x10
     e80:	cmp	x0, x1
     e84:	b.eq	e8c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xd4c>  // b.none
     e88:	bl	0 <_ZdlPv>
     e8c:	ldr	x0, [sp, #384]
     e90:	add	x28, x28, #0x10
     e94:	cmp	x0, x28
     e98:	b.eq	698 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x558>  // b.none
     e9c:	bl	0 <_ZdlPv>
     ea0:	b	698 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x558>
     ea4:	mov	x0, x27
     ea8:	mov	x2, #0x0                   	// #0
     eac:	mov	x1, #0x0                   	// #0
     eb0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
     eb4:	b	2f0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1b0>
     eb8:	ldp	x2, x3, [x0, #16]
     ebc:	stp	x2, x3, [sp, #272]
     ec0:	b	27c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x13c>
     ec4:	add	x4, sp, #0x420
     ec8:	ldp	x2, x3, [x1, #16]
     ecc:	stp	x2, x3, [x4, #48]
     ed0:	b	370 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x230>
     ed4:	ldp	x2, x3, [x0, #16]
     ed8:	stp	x2, x3, [sp, #336]
     edc:	b	318 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1d8>
     ee0:	str	xzr, [sp, #608]
     ee4:	adrp	x1, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
     ee8:	str	w0, [sp, #608]
     eec:	add	x0, x1, #0x0
     ef0:	mov	w1, #0x309                 	// #777
     ef4:	str	x0, [sp, #808]
     ef8:	strh	w1, [sp, #816]
     efc:	add	x1, sp, #0x420
     f00:	ldr	x0, [sp, #608]
     f04:	str	x0, [sp, #800]
     f08:	ldr	x2, [sp, #816]
     f0c:	mov	x0, x22
     f10:	ldp	x4, x5, [x1, #-256]
     f14:	add	x1, sp, #0x80
     f18:	stp	x4, x5, [sp, #128]
     f1c:	str	x2, [sp, #144]
     f20:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     f24:	mov	w21, w0
     f28:	b	698 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x558>
     f2c:	adrp	x3, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
     f30:	adrp	x1, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
     f34:	adrp	x0, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
     f38:	add	x3, x3, #0x0
     f3c:	add	x1, x1, #0x0
     f40:	add	x0, x0, #0x0
     f44:	mov	w2, #0xf3                  	// #243
     f48:	bl	0 <__assert_fail>
     f4c:	mov	w2, #0x103                 	// #259
     f50:	strh	w2, [sp, #816]
     f54:	add	x2, sp, #0x420
     f58:	adrp	x0, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
     f5c:	add	x0, x0, #0x0
     f60:	str	x0, [sp, #800]
     f64:	str	xzr, [sp, #808]
     f68:	add	x1, sp, #0x80
     f6c:	mov	x0, x22
     f70:	ldp	x2, x3, [x2, #-256]
     f74:	stp	x2, x3, [sp, #128]
     f78:	ldr	x2, [sp, #816]
     f7c:	str	x2, [sp, #144]
     f80:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     f84:	mov	w21, w0
     f88:	cbnz	w21, 6a8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x568>
     f8c:	b	5a8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x468>
     f90:	ldr	x0, [sp, #112]
     f94:	mov	x2, #0x0                   	// #0
     f98:	mov	x1, #0x0                   	// #0
     f9c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
     fa0:	b	d5c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xc1c>
     fa4:	cbz	x21, fbc <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xe7c>
     fa8:	ldr	x1, [x0]
     fac:	mov	x2, x21
     fb0:	mov	x0, x27
     fb4:	bl	0 <memcmp>
     fb8:	cbnz	w0, 620 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x4e0>
     fbc:	mov	x0, x25
     fc0:	mov	w21, #0x0                   	// #0
     fc4:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     fc8:	b	6a8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x568>
     fcc:	ldp	x1, x2, [x25, #136]
     fd0:	add	x0, x27, #0x28
     fd4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     fd8:	mov	x1, x0
     fdc:	ldp	x3, x2, [x0, #16]
     fe0:	cmp	x3, x2
     fe4:	b.eq	10d0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xf90>  // b.none
     fe8:	mov	w0, #0x3a                  	// #58
     fec:	strb	w0, [x2]
     ff0:	ldr	x0, [x1, #24]
     ff4:	add	x0, x0, #0x1
     ff8:	str	x0, [x1, #24]
     ffc:	ldr	x25, [sp, #1208]
    1000:	add	x0, x27, #0x28
    1004:	str	x0, [sp, #96]
    1008:	add	x21, x19, #0x68
    100c:	cmp	x25, x21
    1010:	b.ne	1048 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xf08>  // b.any
    1014:	b	1068 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xf28>
    1018:	ldr	x0, [sp, #96]
    101c:	add	x2, x1, #0x1
    1020:	str	x2, [sp, #864]
    1024:	mov	w2, #0x20                  	// #32
    1028:	strb	w2, [x1]
    102c:	ldp	x1, x2, [x25, #32]
    1030:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1034:	mov	x0, x25
    1038:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    103c:	mov	x25, x0
    1040:	cmp	x0, x21
    1044:	b.eq	1068 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xf28>  // b.none
    1048:	ldr	x0, [sp, #856]
    104c:	ldr	x1, [sp, #864]
    1050:	cmp	x1, x0
    1054:	b.cc	1018 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xed8>  // b.lo, b.ul, b.last
    1058:	ldr	x0, [sp, #96]
    105c:	mov	w1, #0x20                  	// #32
    1060:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    1064:	b	102c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xeec>
    1068:	ldr	x1, [sp, #856]
    106c:	ldr	x0, [sp, #864]
    1070:	cmp	x1, x0
    1074:	b.eq	10e4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xfa4>  // b.none
    1078:	mov	w1, #0xa                   	// #10
    107c:	strb	w1, [x0]
    1080:	ldr	x0, [sp, #864]
    1084:	add	x0, x0, #0x1
    1088:	str	x0, [sp, #864]
    108c:	mov	w1, #0x1                   	// #1
    1090:	add	x0, x27, #0x28
    1094:	strb	w1, [sp, #832]
    1098:	bl	0 <_ZN4llvm14raw_fd_ostreamD1Ev>
    109c:	mov	x0, x27
    10a0:	bl	0 <_ZN4llvm14ToolOutputFile16CleanupInstallerD1Ev>
    10a4:	b	5a8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x468>
    10a8:	ldp	x2, x3, [x0, #16]
    10ac:	stp	x2, x3, [sp, #496]
    10b0:	b	d8c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xc4c>
    10b4:	ldp	x0, x1, [x2, #16]
    10b8:	stp	x0, x1, [sp, #432]
    10bc:	b	ce0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xba0>
    10c0:	add	x4, sp, #0x420
    10c4:	ldp	x2, x3, [x1, #16]
    10c8:	stp	x2, x3, [x4, #-240]
    10cc:	b	de8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xca8>
    10d0:	adrp	x1, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
    10d4:	mov	x2, #0x1                   	// #1
    10d8:	add	x1, x1, #0x0
    10dc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    10e0:	b	ffc <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xebc>
    10e4:	add	x0, x27, #0x28
    10e8:	adrp	x1, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
    10ec:	mov	x2, #0x1                   	// #1
    10f0:	add	x1, x1, #0x0
    10f4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    10f8:	b	108c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xf4c>
    10fc:	add	x4, sp, #0x220
    1100:	ldp	x2, x3, [x0, #16]
    1104:	stp	x2, x3, [x4, #80]
    1108:	b	b4c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xa0c>
    110c:	add	x4, sp, #0x220
    1110:	ldp	x0, x1, [x2, #16]
    1114:	stp	x0, x1, [x4, #48]
    1118:	b	a9c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x95c>
    111c:	add	x4, sp, #0x220
    1120:	ldp	x2, x3, [x0, #16]
    1124:	stp	x2, x3, [x4, #160]
    1128:	b	ba8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xa68>
    112c:	ldr	x0, [sp, #112]
    1130:	mov	x2, #0x0                   	// #0
    1134:	mov	x1, #0x0                   	// #0
    1138:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    113c:	b	b1c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x9dc>
    1140:	adrp	x0, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
    1144:	add	x0, x0, #0x0
    1148:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt17_Function_handlerIFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN4llvm2cl3optIS5_Lb0ENSA_6parserIS5_EEE8CallbackMUlS7_E_EE9_M_invokeERKSt9_Any_dataS7_:

0000000000000000 <_ZNSt17_Function_handlerIFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN4llvm2cl3optIS5_Lb0ENSA_6parserIS5_EEE8CallbackMUlS7_E_EE9_M_invokeERKSt9_Any_dataS7_>:
   0:	ret

Disassembly of section .text._ZNSt14_Function_base13_Base_managerIN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS2_6parserIS9_EEE8CallbackMUlRKS9_E_EE10_M_managerERSt9_Any_dataRKSH_St18_Manager_operation:

0000000000000000 <_ZNSt14_Function_base13_Base_managerIN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS2_6parserIS9_EEE8CallbackMUlRKS9_E_EE10_M_managerERSt9_Any_dataRKSH_St18_Manager_operation>:
   0:	cmp	w2, #0x1
   4:	b.eq	10 <_ZNSt14_Function_base13_Base_managerIN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS2_6parserIS9_EEE8CallbackMUlRKS9_E_EE10_M_managerERSt9_Any_dataRKSH_St18_Manager_operation+0x10>  // b.none
   8:	mov	w0, #0x0                   	// #0
   c:	ret
  10:	str	x1, [x0]
  14:	mov	w0, #0x0                   	// #0
  18:	ret

Disassembly of section .text._ZNSt17_Function_handlerIFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN4llvm2cl4listIS5_bNSA_6parserIS5_EEE8CallbackMUlS7_E_EE9_M_invokeERKSt9_Any_dataS7_:

0000000000000000 <_ZNSt17_Function_handlerIFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN4llvm2cl4listIS5_bNSA_6parserIS5_EEE8CallbackMUlS7_E_EE9_M_invokeERKSt9_Any_dataS7_>:
   0:	ret

Disassembly of section .text._ZNSt14_Function_base13_Base_managerIN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS2_6parserIS9_EEE8CallbackMUlRKS9_E_EE10_M_managerERSt9_Any_dataRKSH_St18_Manager_operation:

0000000000000000 <_ZNSt14_Function_base13_Base_managerIN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS2_6parserIS9_EEE8CallbackMUlRKS9_E_EE10_M_managerERSt9_Any_dataRKSH_St18_Manager_operation>:
   0:	cmp	w2, #0x1
   4:	b.eq	10 <_ZNSt14_Function_base13_Base_managerIN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS2_6parserIS9_EEE8CallbackMUlRKS9_E_EE10_M_managerERSt9_Any_dataRKSH_St18_Manager_operation+0x10>  // b.none
   8:	mov	w0, #0x0                   	// #0
   c:	ret
  10:	str	x1, [x0]
  14:	mov	w0, #0x0                   	// #0
  18:	ret

Disassembly of section .text._ZNSt17_Function_handlerIFvRKbEN4llvm2cl3optIbLb0ENS4_6parserIbEEE8CallbackMUlS1_E_EE9_M_invokeERKSt9_Any_dataS1_:

0000000000000000 <_ZNSt17_Function_handlerIFvRKbEN4llvm2cl3optIbLb0ENS4_6parserIbEEE8CallbackMUlS1_E_EE9_M_invokeERKSt9_Any_dataS1_>:
   0:	ret

Disassembly of section .text._ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIbLb0ENS2_6parserIbEEE8CallbackMUlRKbE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation:

0000000000000000 <_ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIbLb0ENS2_6parserIbEEE8CallbackMUlRKbE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation>:
   0:	cmp	w2, #0x1
   4:	b.eq	10 <_ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIbLb0ENS2_6parserIbEEE8CallbackMUlRKbE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation+0x10>  // b.none
   8:	mov	w0, #0x0                   	// #0
   c:	ret
  10:	str	x1, [x0]
  14:	mov	w0, #0x0                   	// #0
  18:	ret

Disassembly of section .text._ZNK4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE27getValueExpectedFlagDefaultEv:

0000000000000000 <_ZNK4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE27getValueExpectedFlagDefaultEv>:
   0:	mov	w0, #0x2                   	// #2
   4:	ret

Disassembly of section .text._ZNK4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16printOptionValueEmb:

0000000000000000 <_ZNK4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16printOptionValueEmb>:
   0:	ret

Disassembly of section .text._ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE19getExtraOptionNamesERNS_15SmallVectorImplINS_9StringRefEEE:

0000000000000000 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE19getExtraOptionNamesERNS_15SmallVectorImplINS_9StringRefEEE>:
   0:	ret

Disassembly of section .text._ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE:

0000000000000000 <_ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE>:
   0:	mov	x2, x0
   4:	ldrb	w0, [x1, #9]
   8:	cbz	w0, 24 <_ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE+0x24>
   c:	ldrb	w0, [x2, #9]
  10:	cbz	w0, 24 <_ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE+0x24>
  14:	ldrb	w0, [x1, #8]
  18:	ldrb	w2, [x2, #8]
  1c:	cmp	w2, w0
  20:	cset	w0, ne  // ne = any
  24:	ret

Disassembly of section .text._ZNK4llvm10FoldingSetINS_11RecordRecTyEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_11RecordRecTyEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	mov	x0, x1
   4:	mov	x1, x2
   8:	cmp	x0, #0x0
   c:	sub	x2, x0, #0x18
  10:	csel	x0, x2, x0, ne  // ne = any
  14:	b	0 <_ZNK4llvm11RecordRecTy7ProfileERNS_16FoldingSetNodeIDE>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_11RecordRecTyEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_11RecordRecTyEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x2
  18:	str	x19, [sp, #16]
  1c:	mov	x19, x2
  20:	bl	0 <_ZNK4llvm11RecordRecTy7ProfileERNS_16FoldingSetNodeIDE>
  24:	mov	x0, x19
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_11RecordRecTyEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_11RecordRecTyEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x4
  18:	stp	x19, x20, [sp, #16]
  1c:	mov	x19, x4
  20:	mov	x20, x2
  24:	bl	0 <_ZNK4llvm11RecordRecTy7ProfileERNS_16FoldingSetNodeIDE>
  28:	mov	x1, x20
  2c:	mov	x0, x19
  30:	ldp	x19, x20, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE15printOptionInfoEm:

0000000000000000 <_ZNK4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE15printOptionInfoEm>:
   0:	mov	x2, x1
   4:	mov	x1, x0
   8:	add	x0, x0, #0xb8
   c:	b	0 <_ZNK4llvm2cl17basic_parser_impl15printOptionInfoERKNS0_6OptionEm>

Disassembly of section .text._ZNK4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE14getOptionWidthEv:

0000000000000000 <_ZNK4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE14getOptionWidthEv>:
   0:	mov	x1, x0
   4:	add	x0, x0, #0xb8
   8:	b	0 <_ZNK4llvm2cl17basic_parser_impl14getOptionWidthERKNS0_6OptionE>

Disassembly of section .text._ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE10setDefaultEv:

0000000000000000 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE10setDefaultEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	ldr	x0, [x0, #160]
  14:	stp	x21, x22, [sp, #32]
  18:	ldr	x1, [x19, #168]
  1c:	cmp	x0, x1
  20:	b.eq	28 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE10setDefaultEv+0x28>  // b.none
  24:	str	x0, [x19, #168]
  28:	ldp	x21, x22, [x19, #136]
  2c:	cmp	x21, x22
  30:	b.eq	5c <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE10setDefaultEv+0x5c>  // b.none
  34:	mov	x20, x21
  38:	mov	x1, x20
  3c:	add	x20, x20, #0x20
  40:	ldr	x0, [x1], #16
  44:	cmp	x0, x1
  48:	b.eq	50 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE10setDefaultEv+0x50>  // b.none
  4c:	bl	0 <_ZdlPv>
  50:	cmp	x22, x20
  54:	b.ne	38 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE10setDefaultEv+0x38>  // b.any
  58:	str	x21, [x19, #144]
  5c:	ldp	x19, x20, [sp, #16]
  60:	ldp	x21, x22, [sp, #32]
  64:	ldp	x29, x30, [sp], #48
  68:	ret

Disassembly of section .text._ZNK4llvm2cl15OptionValueCopyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7compareERKNS0_18GenericOptionValueE:

0000000000000000 <_ZNK4llvm2cl15OptionValueCopyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7compareERKNS0_18GenericOptionValueE>:
   0:	mov	x3, x0
   4:	ldrb	w0, [x1, #40]
   8:	cbz	w0, 24 <_ZNK4llvm2cl15OptionValueCopyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7compareERKNS0_18GenericOptionValueE+0x24>
   c:	ldrb	w0, [x3, #40]
  10:	cbz	w0, 24 <_ZNK4llvm2cl15OptionValueCopyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7compareERKNS0_18GenericOptionValueE+0x24>
  14:	ldr	x4, [x1, #16]
  18:	ldr	x2, [x3, #16]
  1c:	cmp	x2, x4
  20:	b.eq	28 <_ZNK4llvm2cl15OptionValueCopyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7compareERKNS0_18GenericOptionValueE+0x28>  // b.none
  24:	ret
  28:	mov	w0, #0x0                   	// #0
  2c:	cbz	x2, 24 <_ZNK4llvm2cl15OptionValueCopyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7compareERKNS0_18GenericOptionValueE+0x24>
  30:	stp	x29, x30, [sp, #-16]!
  34:	mov	x29, sp
  38:	ldr	x1, [x1, #8]
  3c:	ldr	x0, [x3, #8]
  40:	bl	0 <memcmp>
  44:	cmp	w0, #0x0
  48:	cset	w0, ne  // ne = any
  4c:	ldp	x29, x30, [sp], #16
  50:	ret

Disassembly of section .text._ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED2Ev:

0000000000000000 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x2, 0 <_ZTVN4llvm2cl3optIbLb0ENS0_6parserIbEEEE>
   8:	mov	x1, x0
   c:	mov	x29, sp
  10:	ldr	x2, [x2]
  14:	str	x19, [sp, #16]
  18:	mov	x19, x0
  1c:	add	x2, x2, #0x10
  20:	str	x2, [x1], #168
  24:	ldr	x3, [x1, #16]
  28:	cbz	x3, 38 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED1Ev+0x38>
  2c:	mov	x0, x1
  30:	mov	w2, #0x3                   	// #3
  34:	blr	x3
  38:	ldp	x1, x0, [x19, #96]
  3c:	cmp	x1, x0
  40:	b.eq	48 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED1Ev+0x48>  // b.none
  44:	bl	0 <free>
  48:	ldr	x0, [x19, #64]
  4c:	add	x19, x19, #0x50
  50:	cmp	x0, x19
  54:	b.eq	64 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED1Ev+0x64>  // b.none
  58:	ldr	x19, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	b	0 <free>
  64:	ldr	x19, [sp, #16]
  68:	ldp	x29, x30, [sp], #32
  6c:	ret

Disassembly of section .text._ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED2Ev:

0000000000000000 <_ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x2, 0 <_ZTVN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEEE>
   8:	mov	x1, x0
   c:	mov	x29, sp
  10:	ldr	x2, [x2]
  14:	str	x19, [sp, #16]
  18:	mov	x19, x0
  1c:	add	x2, x2, #0x10
  20:	str	x2, [x1], #224
  24:	ldr	x3, [x1, #16]
  28:	cbz	x3, 38 <_ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED1Ev+0x38>
  2c:	mov	x0, x1
  30:	mov	w2, #0x3                   	// #3
  34:	blr	x3
  38:	adrp	x1, 0 <_ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED1Ev>
  3c:	add	x2, x19, #0xc0
  40:	ldr	x0, [x19, #176]
  44:	ldr	x1, [x1]
  48:	cmp	x0, x2
  4c:	add	x1, x1, #0x10
  50:	str	x1, [x19, #168]
  54:	b.eq	5c <_ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED1Ev+0x5c>  // b.none
  58:	bl	0 <_ZdlPv>
  5c:	ldr	x0, [x19, #136]
  60:	add	x1, x19, #0x98
  64:	cmp	x0, x1
  68:	b.eq	70 <_ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED1Ev+0x70>  // b.none
  6c:	bl	0 <_ZdlPv>
  70:	ldp	x1, x0, [x19, #96]
  74:	cmp	x1, x0
  78:	b.eq	80 <_ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED1Ev+0x80>  // b.none
  7c:	bl	0 <free>
  80:	ldr	x0, [x19, #64]
  84:	add	x19, x19, #0x50
  88:	cmp	x0, x19
  8c:	b.eq	9c <_ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED1Ev+0x9c>  // b.none
  90:	ldr	x19, [sp, #16]
  94:	ldp	x29, x30, [sp], #32
  98:	b	0 <free>
  9c:	ldr	x19, [sp, #16]
  a0:	ldp	x29, x30, [sp], #32
  a4:	ret

Disassembly of section .text._ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED2Ev:

0000000000000000 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED1Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	adrp	x2, 0 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED1Ev>
   8:	mov	x1, x0
   c:	mov	x29, sp
  10:	ldr	x2, [x2]
  14:	stp	x19, x20, [sp, #16]
  18:	mov	x19, x0
  1c:	str	x21, [sp, #32]
  20:	add	x2, x2, #0x10
  24:	str	x2, [x1], #192
  28:	ldr	x3, [x1, #16]
  2c:	cbz	x3, 3c <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED1Ev+0x3c>
  30:	mov	x0, x1
  34:	mov	w2, #0x3                   	// #3
  38:	blr	x3
  3c:	ldr	x0, [x19, #160]
  40:	cbz	x0, 48 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED1Ev+0x48>
  44:	bl	0 <_ZdlPv>
  48:	ldp	x20, x21, [x19, #136]
  4c:	cmp	x20, x21
  50:	b.eq	7c <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED1Ev+0x7c>  // b.none
  54:	nop
  58:	mov	x1, x20
  5c:	add	x20, x20, #0x20
  60:	ldr	x0, [x1], #16
  64:	cmp	x0, x1
  68:	b.eq	70 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED1Ev+0x70>  // b.none
  6c:	bl	0 <_ZdlPv>
  70:	cmp	x21, x20
  74:	b.ne	58 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED1Ev+0x58>  // b.any
  78:	ldr	x21, [x19, #136]
  7c:	cbz	x21, 88 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED1Ev+0x88>
  80:	mov	x0, x21
  84:	bl	0 <_ZdlPv>
  88:	ldp	x1, x0, [x19, #96]
  8c:	cmp	x1, x0
  90:	b.eq	98 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED1Ev+0x98>  // b.none
  94:	bl	0 <free>
  98:	ldr	x0, [x19, #64]
  9c:	add	x19, x19, #0x50
  a0:	cmp	x0, x19
  a4:	b.eq	b8 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED1Ev+0xb8>  // b.none
  a8:	ldp	x19, x20, [sp, #16]
  ac:	ldr	x21, [sp, #32]
  b0:	ldp	x29, x30, [sp], #48
  b4:	b	0 <free>
  b8:	ldp	x19, x20, [sp, #16]
  bc:	ldr	x21, [sp, #32]
  c0:	ldp	x29, x30, [sp], #48
  c4:	ret

Disassembly of section .text._ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev:

0000000000000000 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	adrp	x2, 0 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev>
   8:	mov	x1, x0
   c:	mov	x29, sp
  10:	ldr	x2, [x2]
  14:	stp	x19, x20, [sp, #16]
  18:	mov	x19, x0
  1c:	str	x21, [sp, #32]
  20:	add	x2, x2, #0x10
  24:	str	x2, [x1], #192
  28:	ldr	x3, [x1, #16]
  2c:	cbz	x3, 3c <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev+0x3c>
  30:	mov	x0, x1
  34:	mov	w2, #0x3                   	// #3
  38:	blr	x3
  3c:	ldr	x0, [x19, #160]
  40:	cbz	x0, 48 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev+0x48>
  44:	bl	0 <_ZdlPv>
  48:	ldp	x20, x21, [x19, #136]
  4c:	cmp	x20, x21
  50:	b.eq	7c <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev+0x7c>  // b.none
  54:	nop
  58:	mov	x1, x20
  5c:	add	x20, x20, #0x20
  60:	ldr	x0, [x1], #16
  64:	cmp	x0, x1
  68:	b.eq	70 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev+0x70>  // b.none
  6c:	bl	0 <_ZdlPv>
  70:	cmp	x21, x20
  74:	b.ne	58 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev+0x58>  // b.any
  78:	ldr	x21, [x19, #136]
  7c:	cbz	x21, 88 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev+0x88>
  80:	mov	x0, x21
  84:	bl	0 <_ZdlPv>
  88:	ldp	x1, x0, [x19, #96]
  8c:	cmp	x1, x0
  90:	b.eq	98 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev+0x98>  // b.none
  94:	bl	0 <free>
  98:	ldr	x0, [x19, #64]
  9c:	add	x1, x19, #0x50
  a0:	cmp	x0, x1
  a4:	b.eq	ac <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev+0xac>  // b.none
  a8:	bl	0 <free>
  ac:	mov	x0, x19
  b0:	mov	x1, #0xe0                  	// #224
  b4:	ldp	x19, x20, [sp, #16]
  b8:	ldr	x21, [sp, #32]
  bc:	ldp	x29, x30, [sp], #48
  c0:	b	0 <_ZdlPvm>

Disassembly of section .text._ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED2Ev:

0000000000000000 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	ldp	x19, x21, [x0]
  14:	cmp	x19, x21
  18:	b.eq	bc <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev+0xbc>  // b.none
  1c:	mov	x22, x0
  20:	stp	x23, x24, [sp, #48]
  24:	nop
  28:	ldr	x20, [x19, #8]
  2c:	cbz	x20, 44 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev+0x44>
  30:	add	x0, x20, #0x18
  34:	bl	0 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev>
  38:	mov	x0, x20
  3c:	mov	x1, #0x30                  	// #48
  40:	bl	0 <_ZdlPvm>
  44:	ldr	x20, [x19]
  48:	cbz	x20, a8 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev+0xa8>
  4c:	ldr	x0, [x20, #88]
  50:	add	x1, x20, #0x68
  54:	add	x24, x20, #0x58
  58:	cmp	x0, x1
  5c:	b.eq	64 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev+0x64>  // b.none
  60:	bl	0 <free>
  64:	ldr	x0, [x20, #72]
  68:	add	x23, x20, #0x48
  6c:	cmp	x24, x0
  70:	b.eq	78 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev+0x78>  // b.none
  74:	bl	0 <free>
  78:	ldr	x0, [x20, #56]
  7c:	cmp	x23, x0
  80:	b.eq	88 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev+0x88>  // b.none
  84:	bl	0 <free>
  88:	ldr	x0, [x20, #8]
  8c:	add	x1, x20, #0x18
  90:	cmp	x0, x1
  94:	b.eq	9c <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev+0x9c>  // b.none
  98:	bl	0 <free>
  9c:	mov	x0, x20
  a0:	mov	x1, #0x80                  	// #128
  a4:	bl	0 <_ZdlPvm>
  a8:	add	x19, x19, #0x10
  ac:	cmp	x21, x19
  b0:	b.ne	28 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev+0x28>  // b.any
  b4:	ldp	x23, x24, [sp, #48]
  b8:	ldr	x21, [x22]
  bc:	cbz	x21, d4 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev+0xd4>
  c0:	mov	x0, x21
  c4:	ldp	x19, x20, [sp, #16]
  c8:	ldp	x21, x22, [sp, #32]
  cc:	ldp	x29, x30, [sp], #64
  d0:	b	0 <_ZdlPv>
  d4:	ldp	x19, x20, [sp, #16]
  d8:	ldp	x21, x22, [sp, #32]
  dc:	ldp	x29, x30, [sp], #64
  e0:	ret

Disassembly of section .text._ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEEC2IJA2_cNS0_4descENS0_10value_descENS0_15FormattingFlagsEEEEDpRKT_:

0000000000000000 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEEC1IJA2_cNS0_4descENS0_10value_descENS0_15FormattingFlagsEEEEDpRKT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	adrp	x9, 0 <_ZN4llvm2cl15GeneralCategoryE>
   8:	mov	x15, #0x1                   	// #1
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x19, x0
  18:	adrp	x0, 0 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEEC1IJA2_cNS0_4descENS0_10value_descENS0_15FormattingFlagsEEEEDpRKT_>
  1c:	stp	x21, x22, [sp, #32]
  20:	mov	x6, x19
  24:	add	x13, x19, #0x80
  28:	str	x23, [sp, #48]
  2c:	mov	x14, #0x100000001           	// #4294967297
  30:	ldr	x0, [x0]
  34:	add	x7, x19, #0x50
  38:	ldr	x5, [x19, #8]
  3c:	stp	xzr, xzr, [x19, #24]
  40:	add	x0, x0, #0x10
  44:	and	x5, x5, #0x80000000
  48:	stp	xzr, xzr, [x19, #40]
  4c:	orr	x5, x5, #0x10000
  50:	ldr	x9, [x9]
  54:	stp	x5, xzr, [x19, #8]
  58:	adrp	x5, 0 <_ZTVN4llvm2cl6parserINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
  5c:	stp	xzr, x7, [x19, #56]
  60:	adrp	x8, 0 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEEC1IJA2_cNS0_4descENS0_10value_descENS0_15FormattingFlagsEEEEDpRKT_>
  64:	adrp	x7, 0 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEEC1IJA2_cNS0_4descENS0_10value_descENS0_15FormattingFlagsEEEEDpRKT_>
  68:	stp	x14, x9, [x19, #72]
  6c:	mov	x23, x4
  70:	mov	x20, x3
  74:	stp	xzr, x13, [x19, #88]
  78:	mov	x21, x2
  7c:	mov	x22, x1
  80:	stp	x13, x15, [x19, #104]
  84:	str	wzr, [x19, #120]
  88:	stp	xzr, xzr, [x19, #136]
  8c:	str	xzr, [x19, #152]
  90:	ldr	x5, [x5]
  94:	str	x0, [x6], #160
  98:	str	xzr, [x19, #160]
  9c:	mov	x0, x1
  a0:	stp	xzr, xzr, [x6, #8]
  a4:	add	x5, x5, #0x10
  a8:	ldr	x7, [x7]
  ac:	str	x5, [x19, #184]
  b0:	ldr	x8, [x8]
  b4:	stp	x8, x7, [x19, #208]
  b8:	bl	0 <strlen>
  bc:	mov	x2, x0
  c0:	mov	x1, x22
  c4:	mov	x0, x19
  c8:	bl	0 <_ZN4llvm2cl6Option9setArgStrENS_9StringRefE>
  cc:	ldr	w2, [x23]
  d0:	mov	x0, x19
  d4:	ldrh	w1, [x19, #10]
  d8:	bfi	w1, w2, #7, #2
  dc:	ldp	x3, x2, [x21]
  e0:	stp	x3, x2, [x19, #32]
  e4:	ldp	x3, x2, [x20]
  e8:	strh	w1, [x19, #10]
  ec:	ldp	x21, x22, [sp, #32]
  f0:	ldr	x23, [sp, #48]
  f4:	stp	x3, x2, [x19, #48]
  f8:	ldp	x19, x20, [sp, #16]
  fc:	ldp	x29, x30, [sp], #64
 100:	b	0 <_ZN4llvm2cl6Option11addArgumentEv>

Disassembly of section .text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_:

0000000000000000 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x8
  10:	stp	x21, x22, [sp, #32]
  14:	mov	x21, x1
  18:	mov	x22, x0
  1c:	bl	0 <strlen>
  20:	strb	wzr, [x19, #16]
  24:	add	x1, x19, #0x10
  28:	stp	x1, xzr, [x19]
  2c:	mov	x20, x0
  30:	ldr	x1, [x21, #8]
  34:	mov	x0, x19
  38:	add	x1, x20, x1
  3c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
  40:	ldr	x0, [x19, #8]
  44:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
  48:	sub	x1, x1, x0
  4c:	cmp	x20, x1
  50:	b.hi	84 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_+0x84>  // b.pmore
  54:	mov	x2, x20
  58:	mov	x1, x22
  5c:	mov	x0, x19
  60:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
  64:	ldp	x1, x2, [x21]
  68:	mov	x0, x19
  6c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
  70:	mov	x0, x19
  74:	ldp	x19, x20, [sp, #16]
  78:	ldp	x21, x22, [sp, #32]
  7c:	ldp	x29, x30, [sp], #48
  80:	ret
  84:	adrp	x0, 0 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
  88:	add	x0, x0, #0x0
  8c:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm7ErrorOrISt10unique_ptrINS_12MemoryBufferESt14default_deleteIS2_EEED2Ev:

0000000000000000 <_ZN4llvm7ErrorOrISt10unique_ptrINS_12MemoryBufferESt14default_deleteIS2_EEED1Ev>:
   0:	ldrb	w1, [x0, #16]
   4:	tbnz	w1, #0, 20 <_ZN4llvm7ErrorOrISt10unique_ptrINS_12MemoryBufferESt14default_deleteIS2_EEED1Ev+0x20>
   8:	ldr	x0, [x0]
   c:	cbz	x0, 20 <_ZN4llvm7ErrorOrISt10unique_ptrINS_12MemoryBufferESt14default_deleteIS2_EEED1Ev+0x20>
  10:	ldr	x1, [x0]
  14:	ldr	x1, [x1, #8]
  18:	mov	x16, x1
  1c:	br	x16
  20:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E>:
   0:	cbz	x1, 60 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x60>
   4:	stp	x29, x30, [sp, #-48]!
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x1
  14:	str	x21, [sp, #32]
  18:	mov	x21, x0
  1c:	ldr	x1, [x19, #24]
  20:	mov	x20, x19
  24:	mov	x0, x21
  28:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E>
  2c:	ldr	x0, [x20, #32]
  30:	add	x1, x19, #0x30
  34:	ldr	x19, [x19, #16]
  38:	cmp	x0, x1
  3c:	b.eq	44 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x44>  // b.none
  40:	bl	0 <_ZdlPv>
  44:	mov	x0, x20
  48:	bl	0 <_ZdlPv>
  4c:	cbnz	x19, 1c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x1c>
  50:	ldp	x19, x20, [sp, #16]
  54:	ldr	x21, [sp, #32]
  58:	ldp	x29, x30, [sp], #48
  5c:	ret
  60:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E>:
   0:	cbz	x1, 60 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x60>
   4:	stp	x29, x30, [sp, #-48]!
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x1
  14:	str	x21, [sp, #32]
  18:	mov	x21, x0
  1c:	ldr	x1, [x19, #24]
  20:	mov	x20, x19
  24:	mov	x0, x21
  28:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E>
  2c:	ldr	x0, [x20, #32]
  30:	add	x1, x19, #0x30
  34:	ldr	x19, [x19, #16]
  38:	cmp	x0, x1
  3c:	b.eq	44 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x44>  // b.none
  40:	bl	0 <_ZdlPv>
  44:	mov	x0, x20
  48:	bl	0 <_ZdlPv>
  4c:	cbnz	x19, 1c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x1c>
  50:	ldp	x19, x20, [sp, #16]
  54:	ldr	x21, [sp, #32]
  58:	ldp	x29, x30, [sp], #48
  5c:	ret
  60:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E>:
   0:	cbz	x1, 184 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x184>
   4:	stp	x29, x30, [sp, #-96]!
   8:	mov	x29, sp
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x21, x1
  14:	stp	x25, x26, [sp, #64]
  18:	mov	x25, x0
  1c:	stp	x19, x20, [sp, #16]
  20:	stp	x23, x24, [sp, #48]
  24:	mov	x23, x21
  28:	ldr	x1, [x21, #24]
  2c:	mov	x0, x25
  30:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E>
  34:	ldr	x22, [x23, #64]
  38:	ldr	x21, [x21, #16]
  3c:	cbz	x22, 14c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x14c>
  40:	ldp	x20, x24, [x22, #128]
  44:	cmp	x20, x24
  48:	b.eq	e4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0xe4>  // b.none
  4c:	str	x27, [sp, #80]
  50:	ldr	x19, [x20, #8]
  54:	cbz	x19, 6c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x6c>
  58:	add	x0, x19, #0x18
  5c:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E>
  60:	mov	x0, x19
  64:	mov	x1, #0x30                  	// #48
  68:	bl	0 <_ZdlPvm>
  6c:	ldr	x19, [x20]
  70:	cbz	x19, d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0xd0>
  74:	ldr	x0, [x19, #88]
  78:	add	x1, x19, #0x68
  7c:	add	x27, x19, #0x58
  80:	cmp	x0, x1
  84:	b.eq	8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x8c>  // b.none
  88:	bl	0 <free>
  8c:	ldr	x0, [x19, #72]
  90:	add	x26, x19, #0x48
  94:	cmp	x27, x0
  98:	b.eq	a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0xa0>  // b.none
  9c:	bl	0 <free>
  a0:	ldr	x0, [x19, #56]
  a4:	cmp	x26, x0
  a8:	b.eq	b0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0xb0>  // b.none
  ac:	bl	0 <free>
  b0:	ldr	x0, [x19, #8]
  b4:	add	x1, x19, #0x18
  b8:	cmp	x0, x1
  bc:	b.eq	c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0xc4>  // b.none
  c0:	bl	0 <free>
  c4:	mov	x0, x19
  c8:	mov	x1, #0x80                  	// #128
  cc:	bl	0 <_ZdlPvm>
  d0:	add	x20, x20, #0x10
  d4:	cmp	x24, x20
  d8:	b.ne	50 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x50>  // b.any
  dc:	ldr	x27, [sp, #80]
  e0:	ldr	x24, [x22, #128]
  e4:	cbz	x24, f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0xf0>
  e8:	mov	x0, x24
  ec:	bl	0 <_ZdlPv>
  f0:	ldr	x0, [x22, #88]
  f4:	add	x1, x22, #0x68
  f8:	add	x20, x22, #0x58
  fc:	cmp	x0, x1
 100:	b.eq	108 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x108>  // b.none
 104:	bl	0 <free>
 108:	ldr	x0, [x22, #72]
 10c:	add	x19, x22, #0x48
 110:	cmp	x20, x0
 114:	b.eq	11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x11c>  // b.none
 118:	bl	0 <free>
 11c:	ldr	x0, [x22, #56]
 120:	cmp	x19, x0
 124:	b.eq	12c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x12c>  // b.none
 128:	bl	0 <free>
 12c:	ldr	x0, [x22, #8]
 130:	add	x1, x22, #0x18
 134:	cmp	x0, x1
 138:	b.eq	140 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x140>  // b.none
 13c:	bl	0 <free>
 140:	mov	x0, x22
 144:	mov	x1, #0x98                  	// #152
 148:	bl	0 <_ZdlPvm>
 14c:	ldr	x0, [x23, #32]
 150:	add	x1, x23, #0x30
 154:	cmp	x0, x1
 158:	b.eq	160 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x160>  // b.none
 15c:	bl	0 <_ZdlPv>
 160:	mov	x0, x23
 164:	bl	0 <_ZdlPv>
 168:	cbnz	x21, 24 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x24>
 16c:	ldp	x19, x20, [sp, #16]
 170:	ldp	x21, x22, [sp, #32]
 174:	ldp	x23, x24, [sp, #48]
 178:	ldp	x25, x26, [sp, #64]
 17c:	ldp	x29, x30, [sp], #96
 180:	ret
 184:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E>:
   0:	cbz	x1, cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0xcc>
   4:	stp	x29, x30, [sp, #-64]!
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x1
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x22, x0
  1c:	stp	x23, x24, [sp, #48]
  20:	mov	x20, x19
  24:	ldr	x1, [x19, #24]
  28:	mov	x0, x22
  2c:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E>
  30:	ldr	x21, [x20, #64]
  34:	ldr	x19, [x19, #16]
  38:	cbz	x21, 98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x98>
  3c:	ldr	x0, [x21, #88]
  40:	add	x1, x21, #0x68
  44:	add	x24, x21, #0x58
  48:	cmp	x0, x1
  4c:	b.eq	54 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x54>  // b.none
  50:	bl	0 <free>
  54:	ldr	x0, [x21, #72]
  58:	add	x23, x21, #0x48
  5c:	cmp	x24, x0
  60:	b.eq	68 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x68>  // b.none
  64:	bl	0 <free>
  68:	ldr	x0, [x21, #56]
  6c:	cmp	x23, x0
  70:	b.eq	78 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x78>  // b.none
  74:	bl	0 <free>
  78:	ldr	x0, [x21, #8]
  7c:	add	x1, x21, #0x18
  80:	cmp	x0, x1
  84:	b.eq	8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x8c>  // b.none
  88:	bl	0 <free>
  8c:	mov	x0, x21
  90:	mov	x1, #0x80                  	// #128
  94:	bl	0 <_ZdlPvm>
  98:	ldr	x0, [x20, #32]
  9c:	add	x1, x20, #0x30
  a0:	cmp	x0, x1
  a4:	b.eq	ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0xac>  // b.none
  a8:	bl	0 <_ZdlPv>
  ac:	mov	x0, x20
  b0:	bl	0 <_ZdlPv>
  b4:	cbnz	x19, 20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x20>
  b8:	ldp	x19, x20, [sp, #16]
  bc:	ldp	x21, x22, [sp, #32]
  c0:	ldp	x23, x24, [sp, #48]
  c4:	ldp	x29, x30, [sp], #64
  c8:	ret
  cc:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   8:	movk	x3, #0xaaab
   c:	mov	x29, sp
  10:	stp	x21, x22, [sp, #32]
  14:	stp	x23, x24, [sp, #48]
  18:	mov	x24, x0
  1c:	ldp	x23, x22, [x0]
  20:	stp	x19, x20, [sp, #16]
  24:	mov	x20, x1
  28:	stp	x25, x26, [sp, #64]
  2c:	mov	x1, #0x5555555555555555    	// #6148914691236517205
  30:	movk	x1, #0x555, lsl #48
  34:	str	x27, [sp, #80]
  38:	sub	x0, x22, x23
  3c:	asr	x0, x0, #3
  40:	mul	x0, x0, x3
  44:	cmp	x0, x1
  48:	b.eq	1c4 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1c4>  // b.none
  4c:	mov	x19, x2
  50:	sub	x21, x20, x23
  54:	cbz	x0, 1a8 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1a8>
  58:	cmp	x0, x0, lsl #1
  5c:	mov	x26, #0x7ffffffffffffff8    	// #9223372036854775800
  60:	lsl	x0, x0, #1
  64:	b.ls	194 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x194>  // b.plast
  68:	mov	x0, x26
  6c:	bl	0 <_Znwm>
  70:	mov	x25, x0
  74:	add	x26, x0, x26
  78:	add	x27, x0, #0x18
  7c:	mov	x1, x19
  80:	add	x0, x25, x21
  84:	bl	0 <_ZN4llvm9SourceMgr9SrcBufferC1EOS1_>
  88:	cmp	x20, x23
  8c:	b.eq	e4 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xe4>  // b.none
  90:	mov	x19, x23
  94:	mov	x21, x25
  98:	mov	x1, x19
  9c:	mov	x0, x21
  a0:	add	x19, x19, #0x18
  a4:	bl	0 <_ZN4llvm9SourceMgr9SrcBufferC1EOS1_>
  a8:	cmp	x20, x19
  ac:	add	x21, x21, #0x18
  b0:	b.ne	98 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x98>  // b.any
  b4:	sub	x27, x20, #0x18
  b8:	mov	x0, #0xaaab                	// #43691
  bc:	sub	x27, x27, x23
  c0:	movk	x0, #0xaaaa, lsl #16
  c4:	movk	x0, #0xaaaa, lsl #32
  c8:	lsr	x27, x27, #3
  cc:	movk	x0, #0xaaa, lsl #48
  d0:	mul	x27, x27, x0
  d4:	and	x27, x27, #0x1fffffffffffffff
  d8:	add	x27, x27, #0x2
  dc:	add	x27, x27, x27, lsl #1
  e0:	add	x27, x25, x27, lsl #3
  e4:	cmp	x20, x22
  e8:	mov	x19, x20
  ec:	mov	x21, x27
  f0:	b.eq	144 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x144>  // b.none
  f4:	nop
  f8:	mov	x1, x19
  fc:	mov	x0, x21
 100:	add	x19, x19, #0x18
 104:	bl	0 <_ZN4llvm9SourceMgr9SrcBufferC1EOS1_>
 108:	cmp	x22, x19
 10c:	add	x21, x21, #0x18
 110:	b.ne	f8 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xf8>  // b.any
 114:	sub	x0, x22, x20
 118:	mov	x1, #0xaaab                	// #43691
 11c:	sub	x0, x0, #0x18
 120:	movk	x1, #0xaaaa, lsl #16
 124:	movk	x1, #0xaaaa, lsl #32
 128:	lsr	x0, x0, #3
 12c:	movk	x1, #0xaaa, lsl #48
 130:	mul	x0, x0, x1
 134:	and	x0, x0, #0x1fffffffffffffff
 138:	add	x0, x0, #0x1
 13c:	add	x0, x0, x0, lsl #1
 140:	add	x27, x27, x0, lsl #3
 144:	cmp	x23, x22
 148:	mov	x19, x23
 14c:	b.eq	164 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x164>  // b.none
 150:	mov	x0, x19
 154:	add	x19, x19, #0x18
 158:	bl	0 <_ZN4llvm9SourceMgr9SrcBufferD1Ev>
 15c:	cmp	x19, x22
 160:	b.ne	150 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x150>  // b.any
 164:	cbz	x23, 170 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x170>
 168:	mov	x0, x23
 16c:	bl	0 <_ZdlPv>
 170:	ldp	x19, x20, [sp, #16]
 174:	ldp	x21, x22, [sp, #32]
 178:	stp	x25, x27, [x24]
 17c:	str	x26, [x24, #16]
 180:	ldp	x23, x24, [sp, #48]
 184:	ldp	x25, x26, [sp, #64]
 188:	ldr	x27, [sp, #80]
 18c:	ldp	x29, x30, [sp], #96
 190:	ret
 194:	cbnz	x0, 1b0 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1b0>
 198:	mov	x27, #0x18                  	// #24
 19c:	mov	x26, #0x0                   	// #0
 1a0:	mov	x25, #0x0                   	// #0
 1a4:	b	7c <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x7c>
 1a8:	mov	x26, #0x18                  	// #24
 1ac:	b	68 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x68>
 1b0:	cmp	x0, x1
 1b4:	mov	x26, #0x18                  	// #24
 1b8:	csel	x0, x0, x1, ls  // ls = plast
 1bc:	mul	x26, x0, x26
 1c0:	b	68 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x68>
 1c4:	adrp	x0, 0 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 1c8:	add	x0, x0, #0x0
 1cc:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag:

0000000000000000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	cmp	x2, #0x0
   8:	ccmp	x1, #0x0, #0x0, ne  // ne = any
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	str	x21, [sp, #32]
  18:	b.eq	c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xc8>  // b.none
  1c:	sub	x19, x2, x1
  20:	str	x19, [sp, #56]
  24:	mov	x21, x1
  28:	mov	x20, x0
  2c:	cmp	x19, #0xf
  30:	b.hi	84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x84>  // b.pmore
  34:	cmp	x19, #0x1
  38:	ldr	x0, [x0]
  3c:	b.ne	68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x68>  // b.any
  40:	ldrb	w1, [x1]
  44:	strb	w1, [x0]
  48:	ldr	x0, [x20]
  4c:	ldr	x19, [sp, #56]
  50:	str	x19, [x20, #8]
  54:	strb	wzr, [x0, x19]
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldr	x21, [sp, #32]
  60:	ldp	x29, x30, [sp], #64
  64:	ret
  68:	cbnz	x19, 9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x9c>
  6c:	str	x19, [x20, #8]
  70:	strb	wzr, [x0, x19]
  74:	ldp	x19, x20, [sp, #16]
  78:	ldr	x21, [sp, #32]
  7c:	ldp	x29, x30, [sp], #64
  80:	ret
  84:	add	x1, sp, #0x38
  88:	mov	x2, #0x0                   	// #0
  8c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  90:	str	x0, [x20]
  94:	ldr	x1, [sp, #56]
  98:	str	x1, [x20, #16]
  9c:	mov	x2, x19
  a0:	mov	x1, x21
  a4:	bl	0 <memcpy>
  a8:	ldr	x0, [x20]
  ac:	ldr	x19, [sp, #56]
  b0:	str	x19, [x20, #8]
  b4:	strb	wzr, [x0, x19]
  b8:	ldp	x19, x20, [sp, #16]
  bc:	ldr	x21, [sp, #32]
  c0:	ldp	x29, x30, [sp], #64
  c4:	ret
  c8:	adrp	x0, 0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
  cc:	add	x0, x0, #0x0
  d0:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag:

0000000000000000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	cmp	x2, #0x0
   8:	ccmp	x1, #0x0, #0x0, ne  // ne = any
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	str	x21, [sp, #32]
  18:	b.eq	c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0xc8>  // b.none
  1c:	sub	x19, x2, x1
  20:	str	x19, [sp, #56]
  24:	mov	x21, x1
  28:	mov	x20, x0
  2c:	cmp	x19, #0xf
  30:	b.hi	84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x84>  // b.pmore
  34:	cmp	x19, #0x1
  38:	ldr	x0, [x0]
  3c:	b.ne	68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x68>  // b.any
  40:	ldrb	w1, [x1]
  44:	strb	w1, [x0]
  48:	ldr	x0, [x20]
  4c:	ldr	x19, [sp, #56]
  50:	str	x19, [x20, #8]
  54:	strb	wzr, [x0, x19]
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldr	x21, [sp, #32]
  60:	ldp	x29, x30, [sp], #64
  64:	ret
  68:	cbnz	x19, 9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x9c>
  6c:	str	x19, [x20, #8]
  70:	strb	wzr, [x0, x19]
  74:	ldp	x19, x20, [sp, #16]
  78:	ldr	x21, [sp, #32]
  7c:	ldp	x29, x30, [sp], #64
  80:	ret
  84:	add	x1, sp, #0x38
  88:	mov	x2, #0x0                   	// #0
  8c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  90:	str	x0, [x20]
  94:	ldr	x1, [sp, #56]
  98:	str	x1, [x20, #16]
  9c:	mov	x2, x19
  a0:	mov	x1, x21
  a4:	bl	0 <memcpy>
  a8:	ldr	x0, [x20]
  ac:	ldr	x19, [sp, #56]
  b0:	str	x19, [x20, #8]
  b4:	strb	wzr, [x0, x19]
  b8:	ldp	x19, x20, [sp, #16]
  bc:	ldr	x21, [sp, #32]
  c0:	ldp	x29, x30, [sp], #64
  c4:	ret
  c8:	adrp	x0, 0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>
  cc:	add	x0, x0, #0x0
  d0:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_:

0000000000000000 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	cmp	x1, x0
   8:	mov	x29, sp
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x22, x0
  14:	b.eq	e4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0xe4>  // b.none
  18:	stp	x19, x20, [sp, #16]
  1c:	stp	x25, x26, [sp, #64]
  20:	ldp	x19, x25, [x1]
  24:	stp	x23, x24, [sp, #48]
  28:	ldr	x20, [x0]
  2c:	ldr	x0, [x0, #16]
  30:	sub	x23, x25, x19
  34:	str	x27, [sp, #80]
  38:	mov	x27, x1
  3c:	sub	x0, x0, x20
  40:	asr	x24, x23, #5
  44:	asr	x0, x0, #5
  48:	cmp	x0, x23, asr #5
  4c:	b.cc	f4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0xf4>  // b.lo, b.ul, b.last
  50:	ldr	x21, [x22, #8]
  54:	sub	x1, x21, x20
  58:	cmp	x24, x1, asr #5
  5c:	asr	x26, x1, #5
  60:	b.hi	1a0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x1a0>  // b.pmore
  64:	cmp	x23, #0x0
  68:	b.le	a0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0xa0>
  6c:	mov	x21, x20
  70:	mov	x1, x19
  74:	mov	x0, x21
  78:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
  7c:	add	x19, x19, #0x20
  80:	add	x21, x21, #0x20
  84:	subs	x24, x24, #0x1
  88:	b.ne	70 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x70>  // b.any
  8c:	cmp	x23, #0x0
  90:	mov	x0, #0x20                  	// #32
  94:	csel	x0, x23, x0, gt
  98:	ldr	x21, [x22, #8]
  9c:	add	x20, x20, x0
  a0:	cmp	x21, x20
  a4:	b.eq	c8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0xc8>  // b.none
  a8:	mov	x1, x20
  ac:	ldr	x0, [x1], #16
  b0:	cmp	x0, x1
  b4:	b.eq	bc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0xbc>  // b.none
  b8:	bl	0 <_ZdlPv>
  bc:	add	x20, x20, #0x20
  c0:	cmp	x21, x20
  c4:	b.ne	a8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0xa8>  // b.any
  c8:	ldr	x20, [x22]
  cc:	add	x23, x20, x23
  d0:	ldp	x19, x20, [sp, #16]
  d4:	ldp	x25, x26, [sp, #64]
  d8:	ldr	x27, [sp, #80]
  dc:	str	x23, [x22, #8]
  e0:	ldp	x23, x24, [sp, #48]
  e4:	mov	x0, x22
  e8:	ldp	x21, x22, [sp, #32]
  ec:	ldp	x29, x30, [sp], #96
  f0:	ret
  f4:	cbz	x24, 110 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x110>
  f8:	mov	x0, #0x3ffffffffffffff     	// #288230376151711743
  fc:	cmp	x24, x0
 100:	b.hi	218 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x218>  // b.pmore
 104:	mov	x0, x23
 108:	bl	0 <_Znwm>
 10c:	mov	x24, x0
 110:	mov	x21, x24
 114:	cmp	x19, x25
 118:	b.eq	150 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x150>  // b.none
 11c:	nop
 120:	add	x0, x21, #0x10
 124:	add	x19, x19, #0x20
 128:	ldur	x2, [x19, #-24]
 12c:	str	x0, [x21]
 130:	mov	w3, #0x0                   	// #0
 134:	mov	x0, x21
 138:	ldur	x1, [x19, #-32]
 13c:	add	x21, x21, #0x20
 140:	add	x2, x1, x2
 144:	bl	0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_>
 148:	cmp	x25, x19
 14c:	b.ne	120 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x120>  // b.any
 150:	ldp	x19, x20, [x22]
 154:	cmp	x19, x20
 158:	b.eq	184 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x184>  // b.none
 15c:	nop
 160:	mov	x1, x19
 164:	ldr	x0, [x1], #16
 168:	cmp	x0, x1
 16c:	b.eq	174 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x174>  // b.none
 170:	bl	0 <_ZdlPv>
 174:	add	x19, x19, #0x20
 178:	cmp	x20, x19
 17c:	b.ne	160 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x160>  // b.any
 180:	ldr	x20, [x22]
 184:	cbz	x20, 190 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x190>
 188:	mov	x0, x20
 18c:	bl	0 <_ZdlPv>
 190:	add	x23, x24, x23
 194:	str	x24, [x22]
 198:	str	x23, [x22, #16]
 19c:	b	d0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0xd0>
 1a0:	cmp	x1, #0x0
 1a4:	b.le	1d0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x1d0>
 1a8:	mov	x1, x19
 1ac:	mov	x0, x20
 1b0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
 1b4:	add	x19, x19, #0x20
 1b8:	add	x20, x20, #0x20
 1bc:	subs	x26, x26, #0x1
 1c0:	b.ne	1a8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x1a8>  // b.any
 1c4:	ldp	x20, x21, [x22]
 1c8:	ldp	x19, x25, [x27]
 1cc:	sub	x1, x21, x20
 1d0:	add	x19, x19, x1
 1d4:	cmp	x19, x25
 1d8:	b.eq	cc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0xcc>  // b.none
 1dc:	nop
 1e0:	add	x0, x21, #0x10
 1e4:	add	x19, x19, #0x20
 1e8:	ldur	x2, [x19, #-24]
 1ec:	str	x0, [x21]
 1f0:	mov	w3, #0x0                   	// #0
 1f4:	mov	x0, x21
 1f8:	ldur	x1, [x19, #-32]
 1fc:	add	x21, x21, #0x20
 200:	add	x2, x1, x2
 204:	bl	0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_>
 208:	cmp	x25, x19
 20c:	b.ne	1e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x1e0>  // b.any
 210:	ldr	x20, [x22]
 214:	b	cc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0xcc>
 218:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED0Ev:

0000000000000000 <_ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x2, 0 <_ZTVN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEEE>
   8:	mov	x1, x0
   c:	mov	x29, sp
  10:	ldr	x2, [x2]
  14:	str	x19, [sp, #16]
  18:	mov	x19, x0
  1c:	add	x2, x2, #0x10
  20:	str	x2, [x1], #224
  24:	ldr	x3, [x1, #16]
  28:	cbz	x3, 38 <_ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED0Ev+0x38>
  2c:	mov	x0, x1
  30:	mov	w2, #0x3                   	// #3
  34:	blr	x3
  38:	adrp	x1, 0 <_ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED0Ev>
  3c:	add	x2, x19, #0xc0
  40:	ldr	x0, [x19, #176]
  44:	ldr	x1, [x1]
  48:	cmp	x0, x2
  4c:	add	x1, x1, #0x10
  50:	str	x1, [x19, #168]
  54:	b.eq	5c <_ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED0Ev+0x5c>  // b.none
  58:	bl	0 <_ZdlPv>
  5c:	ldr	x0, [x19, #136]
  60:	add	x1, x19, #0x98
  64:	cmp	x0, x1
  68:	b.eq	70 <_ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED0Ev+0x70>  // b.none
  6c:	bl	0 <_ZdlPv>
  70:	ldp	x1, x0, [x19, #96]
  74:	cmp	x1, x0
  78:	b.eq	80 <_ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED0Ev+0x80>  // b.none
  7c:	bl	0 <free>
  80:	ldr	x0, [x19, #64]
  84:	add	x1, x19, #0x50
  88:	cmp	x0, x1
  8c:	b.eq	94 <_ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED0Ev+0x94>  // b.none
  90:	bl	0 <free>
  94:	mov	x0, x19
  98:	mov	x1, #0x100                 	// #256
  9c:	ldr	x19, [sp, #16]
  a0:	ldp	x29, x30, [sp], #32
  a4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED0Ev:

0000000000000000 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x2, 0 <_ZTVN4llvm2cl3optIbLb0ENS0_6parserIbEEEE>
   8:	mov	x1, x0
   c:	mov	x29, sp
  10:	ldr	x2, [x2]
  14:	str	x19, [sp, #16]
  18:	mov	x19, x0
  1c:	add	x2, x2, #0x10
  20:	str	x2, [x1], #168
  24:	ldr	x3, [x1, #16]
  28:	cbz	x3, 38 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED0Ev+0x38>
  2c:	mov	x0, x1
  30:	mov	w2, #0x3                   	// #3
  34:	blr	x3
  38:	ldp	x1, x0, [x19, #96]
  3c:	cmp	x1, x0
  40:	b.eq	48 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED0Ev+0x48>  // b.none
  44:	bl	0 <free>
  48:	ldr	x0, [x19, #64]
  4c:	add	x1, x19, #0x50
  50:	cmp	x0, x1
  54:	b.eq	5c <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED0Ev+0x5c>  // b.none
  58:	bl	0 <free>
  5c:	mov	x0, x19
  60:	mov	x1, #0xc8                  	// #200
  64:	ldr	x19, [sp, #16]
  68:	ldp	x29, x30, [sp], #32
  6c:	b	0 <_ZdlPvm>

Disassembly of section .text._ZNSt6vectorIjSaIjEE17_M_realloc_insertIJRKjEEEvN9__gnu_cxx17__normal_iteratorIPjS1_EEDpOT_:

0000000000000000 <_ZNSt6vectorIjSaIjEE17_M_realloc_insertIJRKjEEEvN9__gnu_cxx17__normal_iteratorIPjS1_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x3, #0x1fffffffffffffff    	// #2305843009213693951
   8:	mov	x29, sp
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	mov	x23, x1
  18:	ldp	x24, x21, [x0]
  1c:	stp	x19, x20, [sp, #16]
  20:	stp	x25, x26, [sp, #64]
  24:	str	x27, [sp, #80]
  28:	sub	x1, x21, x24
  2c:	cmp	x3, x1, asr #2
  30:	b.eq	10c <_ZNSt6vectorIjSaIjEE17_M_realloc_insertIJRKjEEEvN9__gnu_cxx17__normal_iteratorIPjS1_EEDpOT_+0x10c>  // b.none
  34:	mov	x19, x0
  38:	mov	x22, x2
  3c:	asr	x0, x1, #2
  40:	sub	x26, x23, x24
  44:	cbz	x0, 104 <_ZNSt6vectorIjSaIjEE17_M_realloc_insertIJRKjEEEvN9__gnu_cxx17__normal_iteratorIPjS1_EEDpOT_+0x104>
  48:	cmp	x0, x0, lsl #1
  4c:	mov	x25, #0x7ffffffffffffffc    	// #9223372036854775804
  50:	lsl	x0, x0, #1
  54:	b.ls	dc <_ZNSt6vectorIjSaIjEE17_M_realloc_insertIJRKjEEEvN9__gnu_cxx17__normal_iteratorIPjS1_EEDpOT_+0xdc>  // b.plast
  58:	mov	x0, x25
  5c:	bl	0 <_Znwm>
  60:	mov	x20, x0
  64:	add	x25, x0, x25
  68:	ldr	w0, [x22]
  6c:	add	x22, x26, #0x4
  70:	str	w0, [x20, x26]
  74:	sub	x21, x21, x23
  78:	add	x22, x20, x22
  7c:	cmp	x26, #0x0
  80:	add	x27, x22, x21
  84:	b.gt	b8 <_ZNSt6vectorIjSaIjEE17_M_realloc_insertIJRKjEEEvN9__gnu_cxx17__normal_iteratorIPjS1_EEDpOT_+0xb8>
  88:	cmp	x21, #0x0
  8c:	b.gt	ec <_ZNSt6vectorIjSaIjEE17_M_realloc_insertIJRKjEEEvN9__gnu_cxx17__normal_iteratorIPjS1_EEDpOT_+0xec>
  90:	cbnz	x24, d0 <_ZNSt6vectorIjSaIjEE17_M_realloc_insertIJRKjEEEvN9__gnu_cxx17__normal_iteratorIPjS1_EEDpOT_+0xd0>
  94:	ldp	x21, x22, [sp, #32]
  98:	ldp	x23, x24, [sp, #48]
  9c:	stp	x20, x27, [x19]
  a0:	str	x25, [x19, #16]
  a4:	ldp	x19, x20, [sp, #16]
  a8:	ldp	x25, x26, [sp, #64]
  ac:	ldr	x27, [sp, #80]
  b0:	ldp	x29, x30, [sp], #96
  b4:	ret
  b8:	mov	x2, x26
  bc:	mov	x1, x24
  c0:	mov	x0, x20
  c4:	bl	0 <memmove>
  c8:	cmp	x21, #0x0
  cc:	b.gt	ec <_ZNSt6vectorIjSaIjEE17_M_realloc_insertIJRKjEEEvN9__gnu_cxx17__normal_iteratorIPjS1_EEDpOT_+0xec>
  d0:	mov	x0, x24
  d4:	bl	0 <_ZdlPv>
  d8:	b	94 <_ZNSt6vectorIjSaIjEE17_M_realloc_insertIJRKjEEEvN9__gnu_cxx17__normal_iteratorIPjS1_EEDpOT_+0x94>
  dc:	cbnz	x0, 118 <_ZNSt6vectorIjSaIjEE17_M_realloc_insertIJRKjEEEvN9__gnu_cxx17__normal_iteratorIPjS1_EEDpOT_+0x118>
  e0:	mov	x25, #0x0                   	// #0
  e4:	mov	x20, #0x0                   	// #0
  e8:	b	68 <_ZNSt6vectorIjSaIjEE17_M_realloc_insertIJRKjEEEvN9__gnu_cxx17__normal_iteratorIPjS1_EEDpOT_+0x68>
  ec:	mov	x2, x21
  f0:	mov	x1, x23
  f4:	mov	x0, x22
  f8:	bl	0 <memcpy>
  fc:	cbz	x24, 94 <_ZNSt6vectorIjSaIjEE17_M_realloc_insertIJRKjEEEvN9__gnu_cxx17__normal_iteratorIPjS1_EEDpOT_+0x94>
 100:	b	d0 <_ZNSt6vectorIjSaIjEE17_M_realloc_insertIJRKjEEEvN9__gnu_cxx17__normal_iteratorIPjS1_EEDpOT_+0xd0>
 104:	mov	x25, #0x4                   	// #4
 108:	b	58 <_ZNSt6vectorIjSaIjEE17_M_realloc_insertIJRKjEEEvN9__gnu_cxx17__normal_iteratorIPjS1_EEDpOT_+0x58>
 10c:	adrp	x0, 0 <_ZNSt6vectorIjSaIjEE17_M_realloc_insertIJRKjEEEvN9__gnu_cxx17__normal_iteratorIPjS1_EEDpOT_>
 110:	add	x0, x0, #0x0
 114:	bl	0 <_ZSt20__throw_length_errorPKc>
 118:	cmp	x0, x3
 11c:	csel	x0, x0, x3, ls  // ls = plast
 120:	lsl	x25, x0, #2
 124:	b	58 <_ZNSt6vectorIjSaIjEE17_M_realloc_insertIJRKjEEEvN9__gnu_cxx17__normal_iteratorIPjS1_EEDpOT_+0x58>

Disassembly of section .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:

0000000000000000 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x4, #0x3ffffffffffffff     	// #288230376151711743
   8:	mov	x29, sp
   c:	stp	x23, x24, [sp, #48]
  10:	ldp	x23, x24, [x0]
  14:	stp	x19, x20, [sp, #16]
  18:	mov	x20, x1
  1c:	stp	x21, x22, [sp, #32]
  20:	stp	x25, x26, [sp, #64]
  24:	sub	x1, x24, x23
  28:	str	x27, [sp, #80]
  2c:	cmp	x4, x1, asr #5
  30:	b.eq	1d8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1d8>  // b.none
  34:	mov	x22, x0
  38:	mov	x26, x2
  3c:	asr	x0, x1, #5
  40:	sub	x27, x20, x23
  44:	cbz	x0, 1c0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1c0>
  48:	cmp	x0, x0, lsl #1
  4c:	mov	x19, #0x7fffffffffffffe0    	// #9223372036854775776
  50:	lsl	x0, x0, #1
  54:	b.ls	1ac <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1ac>  // b.plast
  58:	mov	x0, x19
  5c:	bl	0 <_Znwm>
  60:	mov	x21, x0
  64:	add	x19, x0, x19
  68:	add	x25, x0, #0x20
  6c:	ldp	x1, x2, [x26]
  70:	add	x0, x21, x27
  74:	add	x4, x0, #0x10
  78:	str	x4, [x21, x27]
  7c:	mov	w3, #0x0                   	// #0
  80:	add	x2, x1, x2
  84:	bl	0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
  88:	cmp	x20, x23
  8c:	b.eq	104 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x104>  // b.none
  90:	mov	x2, x21
  94:	mov	x4, x23
  98:	b	c0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xc0>
  9c:	str	x6, [x2]
  a0:	add	x4, x4, #0x20
  a4:	add	x2, x2, #0x20
  a8:	ldur	x0, [x4, #-16]
  ac:	stur	x0, [x2, #-16]
  b0:	ldur	x1, [x4, #-24]
  b4:	stur	x1, [x2, #-24]
  b8:	cmp	x20, x4
  bc:	b.eq	f8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xf8>  // b.none
  c0:	mov	x5, x4
  c4:	add	x1, x2, #0x10
  c8:	str	x1, [x2]
  cc:	ldr	x6, [x5], #16
  d0:	cmp	x6, x5
  d4:	b.ne	9c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x9c>  // b.any
  d8:	ldp	x0, x1, [x4, #16]
  dc:	stp	x0, x1, [x2, #16]
  e0:	add	x4, x4, #0x20
  e4:	ldur	x1, [x4, #-24]
  e8:	str	x1, [x2, #8]
  ec:	cmp	x20, x4
  f0:	add	x2, x2, #0x20
  f4:	b.ne	c0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xc0>  // b.any
  f8:	sub	x25, x20, x23
  fc:	add	x25, x25, #0x20
 100:	add	x25, x21, x25
 104:	cmp	x20, x24
 108:	b.eq	17c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x17c>  // b.none
 10c:	mov	x3, x20
 110:	mov	x2, x25
 114:	b	13c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x13c>
 118:	ldr	x1, [x3, #16]
 11c:	str	x1, [x2, #16]
 120:	ldr	x1, [x3, #8]
 124:	str	x5, [x2]
 128:	str	x1, [x2, #8]
 12c:	add	x3, x3, #0x20
 130:	cmp	x3, x24
 134:	add	x2, x2, #0x20
 138:	b.eq	174 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x174>  // b.none
 13c:	mov	x4, x3
 140:	add	x1, x2, #0x10
 144:	str	x1, [x2]
 148:	ldr	x5, [x4], #16
 14c:	cmp	x5, x4
 150:	b.ne	118 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x118>  // b.any
 154:	ldp	x0, x1, [x3, #16]
 158:	stp	x0, x1, [x2, #16]
 15c:	add	x3, x3, #0x20
 160:	ldur	x1, [x3, #-24]
 164:	str	x1, [x2, #8]
 168:	cmp	x3, x24
 16c:	add	x2, x2, #0x20
 170:	b.ne	13c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x13c>  // b.any
 174:	sub	x3, x3, x20
 178:	add	x25, x25, x3
 17c:	cbz	x23, 188 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x188>
 180:	mov	x0, x23
 184:	bl	0 <_ZdlPv>
 188:	ldp	x23, x24, [sp, #48]
 18c:	ldr	x27, [sp, #80]
 190:	stp	x21, x25, [x22]
 194:	str	x19, [x22, #16]
 198:	ldp	x19, x20, [sp, #16]
 19c:	ldp	x21, x22, [sp, #32]
 1a0:	ldp	x25, x26, [sp, #64]
 1a4:	ldp	x29, x30, [sp], #96
 1a8:	ret
 1ac:	cbnz	x0, 1c8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1c8>
 1b0:	mov	x25, #0x20                  	// #32
 1b4:	mov	x19, #0x0                   	// #0
 1b8:	mov	x21, #0x0                   	// #0
 1bc:	b	6c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x6c>
 1c0:	mov	x19, #0x20                  	// #32
 1c4:	b	58 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x58>
 1c8:	cmp	x0, x4
 1cc:	csel	x0, x0, x4, ls  // ls = plast
 1d0:	lsl	x19, x0, #5
 1d4:	b	58 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x58>
 1d8:	adrp	x0, 0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
 1dc:	add	x0, x0, #0x0
 1e0:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_:

0000000000000000 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_>:
   0:	stp	x29, x30, [sp, #-144]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	add	x21, sp, #0x50
  10:	add	x22, x21, #0x10
  14:	stp	x19, x20, [sp, #16]
  18:	mov	x19, x0
  1c:	str	w1, [sp, #76]
  20:	stp	x22, xzr, [sp, #80]
  24:	strb	wzr, [sp, #96]
  28:	cbz	x4, 154 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x154>
  2c:	add	x20, sp, #0x70
  30:	mov	x1, x4
  34:	add	x2, x4, x5
  38:	mov	x0, x20
  3c:	mov	w3, #0x0                   	// #0
  40:	str	x23, [sp, #48]
  44:	add	x23, x20, #0x10
  48:	str	x23, [sp, #112]
  4c:	bl	0 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_>
  50:	ldr	x0, [sp, #80]
  54:	ldr	x1, [sp, #112]
  58:	mov	x2, x0
  5c:	cmp	x1, x23
  60:	b.eq	1a4 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x1a4>  // b.none
  64:	cmp	x0, x22
  68:	ldp	x3, x0, [sp, #120]
  6c:	stp	x1, x3, [sp, #80]
  70:	b.eq	140 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x140>  // b.none
  74:	ldr	x1, [sp, #96]
  78:	str	x0, [sp, #96]
  7c:	cbz	x2, 144 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x144>
  80:	ldr	x23, [sp, #48]
  84:	str	x2, [sp, #112]
  88:	str	x1, [sp, #128]
  8c:	str	xzr, [sp, #120]
  90:	add	x20, x20, #0x10
  94:	strb	wzr, [x2]
  98:	ldr	x0, [sp, #112]
  9c:	cmp	x0, x20
  a0:	b.eq	a8 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0xa8>  // b.none
  a4:	bl	0 <_ZdlPv>
  a8:	add	x20, x19, #0x88
  ac:	ldp	x0, x1, [x20, #8]
  b0:	cmp	x0, x1
  b4:	b.eq	17c <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x17c>  // b.none
  b8:	add	x1, x0, #0x10
  bc:	mov	w3, #0x0                   	// #0
  c0:	ldr	x2, [sp, #88]
  c4:	str	x1, [x0]
  c8:	ldr	x1, [sp, #80]
  cc:	add	x2, x1, x2
  d0:	bl	0 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_>
  d4:	ldr	x0, [x20, #8]
  d8:	add	x0, x0, #0x20
  dc:	str	x0, [x20, #8]
  e0:	add	x0, x19, #0xa0
  e4:	ldr	w2, [sp, #76]
  e8:	strh	w2, [x19, #12]
  ec:	ldp	x1, x3, [x0, #8]
  f0:	cmp	x1, x3
  f4:	b.eq	190 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x190>  // b.none
  f8:	str	w2, [x1], #4
  fc:	str	x1, [x0, #8]
 100:	ldr	x0, [x19, #208]
 104:	cbz	x0, 19c <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x19c>
 108:	ldr	x2, [x19, #216]
 10c:	add	x0, x19, #0xc0
 110:	mov	x1, x21
 114:	add	x21, x21, #0x10
 118:	blr	x2
 11c:	ldr	x0, [sp, #80]
 120:	cmp	x0, x21
 124:	b.eq	12c <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x12c>  // b.none
 128:	bl	0 <_ZdlPv>
 12c:	mov	w0, #0x0                   	// #0
 130:	ldp	x19, x20, [sp, #16]
 134:	ldp	x21, x22, [sp, #32]
 138:	ldp	x29, x30, [sp], #144
 13c:	ret
 140:	str	x0, [sp, #96]
 144:	add	x2, x20, #0x10
 148:	str	x2, [sp, #112]
 14c:	ldr	x23, [sp, #48]
 150:	b	8c <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x8c>
 154:	add	x20, sp, #0x70
 158:	mov	x0, x22
 15c:	add	x1, x20, #0x10
 160:	mov	x2, #0x0                   	// #0
 164:	str	x1, [sp, #112]
 168:	strb	wzr, [sp, #128]
 16c:	str	x2, [sp, #88]
 170:	strb	wzr, [x0, x2]
 174:	ldr	x2, [sp, #112]
 178:	b	8c <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x8c>
 17c:	mov	x1, x0
 180:	mov	x2, x21
 184:	mov	x0, x20
 188:	bl	0 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_>
 18c:	b	e0 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0xe0>
 190:	add	x2, sp, #0x4c
 194:	bl	0 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_>
 198:	b	100 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x100>
 19c:	str	x23, [sp, #48]
 1a0:	bl	0 <_ZSt25__throw_bad_function_callv>
 1a4:	ldr	x2, [sp, #120]
 1a8:	cbnz	x2, 1b4 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x1b4>
 1ac:	ldr	x23, [sp, #48]
 1b0:	b	16c <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x16c>
 1b4:	cmp	x2, #0x1
 1b8:	b.eq	1d0 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x1d0>  // b.none
 1bc:	bl	0 <memcpy>
 1c0:	ldr	x23, [sp, #48]
 1c4:	ldr	x0, [sp, #80]
 1c8:	ldr	x2, [sp, #120]
 1cc:	b	16c <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x16c>
 1d0:	ldrb	w1, [sp, #128]
 1d4:	strb	w1, [x0]
 1d8:	ldr	x23, [sp, #48]
 1dc:	ldr	x0, [sp, #80]
 1e0:	ldr	x2, [sp, #120]
 1e4:	b	16c <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x16c>

Disassembly of section .text.startup:

0000000000000000 <_GLOBAL__sub_I_Main.cpp>:
   0:	stp	x29, x30, [sp, #-176]!
   4:	mov	w5, #0x1                   	// #1
   8:	mov	x2, #0x1                   	// #1
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	adrp	x20, 0 <_GLOBAL__sub_I_Main.cpp>
  18:	add	x19, sp, #0x90
  1c:	stp	x27, x28, [sp, #80]
  20:	add	x28, x20, #0x0
  24:	adrp	x27, 0 <_GLOBAL__sub_I_Main.cpp>
  28:	stp	x21, x22, [sp, #32]
  2c:	adrp	x22, 0 <_ZTVN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEEE>
  30:	add	x10, x28, #0x50
  34:	stp	x23, x24, [sp, #48]
  38:	adrp	x23, 0 <_ZTVN4llvm2cl6parserINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
  3c:	adrp	x24, 0 <_ZTVN4llvm2cl11OptionValueINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
  40:	stp	x25, x26, [sp, #64]
  44:	adrp	x25, 0 <_ZN4llvm2cl15GeneralCategoryE>
  48:	adrp	x26, 0 <_GLOBAL__sub_I_Main.cpp>
  4c:	ldr	x1, [x22]
  50:	stp	xzr, xzr, [x28, #24]
  54:	add	x6, x28, #0x80
  58:	ldr	x3, [x23]
  5c:	add	x1, x1, #0x10
  60:	ldr	x0, [x28, #8]
  64:	add	x3, x3, #0x10
  68:	ldr	x4, [x24]
  6c:	and	x0, x0, #0x80000000
  70:	ldr	x25, [x25]
  74:	str	x1, [x20]
  78:	stp	x0, xzr, [x28, #8]
  7c:	add	x9, x28, #0x98
  80:	add	x8, x28, #0xc0
  84:	stp	xzr, xzr, [x28, #40]
  88:	add	x4, x4, #0x10
  8c:	mov	x0, x28
  90:	stp	xzr, x10, [x28, #56]
  94:	adrp	x1, 0 <_GLOBAL__sub_I_Main.cpp>
  98:	add	x1, x1, #0x0
  9c:	stp	w2, w5, [x28, #72]
  a0:	add	x21, x19, #0x10
  a4:	stp	x25, xzr, [x28, #80]
  a8:	ldr	x7, [x26]
  ac:	stp	x6, x6, [x28, #96]
  b0:	str	x3, [x28, #216]
  b4:	ldr	x3, [x27]
  b8:	str	x2, [x28, #112]
  bc:	str	wzr, [x28, #120]
  c0:	stp	x9, xzr, [x28, #136]
  c4:	strb	wzr, [x28, #152]
  c8:	stp	x4, x8, [x28, #168]
  cc:	str	xzr, [x28, #184]
  d0:	strb	wzr, [x28, #192]
  d4:	strb	wzr, [x28, #208]
  d8:	str	x3, [x28, #240]
  dc:	str	x7, [x28, #248]
  e0:	bl	0 <_ZN4llvm2cl6Option9setArgStrENS_9StringRefE>
  e4:	str	x21, [sp, #144]
  e8:	adrp	x0, 30 <_GLOBAL__sub_I_Main.cpp+0x30>
  ec:	add	x2, x0, #0x0
  f0:	adrp	x0, 0 <_GLOBAL__sub_I_Main.cpp>
  f4:	add	x6, x0, #0x0
  f8:	mov	x7, #0xf                   	// #15
  fc:	mov	x4, #0x8                   	// #8
 100:	adrp	x1, 0 <_GLOBAL__sub_I_Main.cpp>
 104:	add	x1, x1, #0x0
 108:	stp	x1, x7, [x28, #32]
 10c:	mov	w3, #0x0                   	// #0
 110:	mov	x0, x19
 114:	stp	x6, x4, [x28, #48]
 118:	adrp	x1, 0 <_GLOBAL__sub_I_Main.cpp>
 11c:	add	x1, x1, #0x0
 120:	bl	0 <_GLOBAL__sub_I_Main.cpp>
 124:	mov	x1, x19
 128:	add	x0, x28, #0x88
 12c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
 130:	mov	w5, #0x1                   	// #1
 134:	strb	w5, [x28, #208]
 138:	add	x0, x28, #0xb0
 13c:	mov	x1, x19
 140:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
 144:	ldr	x0, [sp, #144]
 148:	cmp	x0, x21
 14c:	b.eq	154 <_GLOBAL__sub_I_Main.cpp+0x154>  // b.none
 150:	bl	0 <_ZdlPv>
 154:	add	x5, x20, #0x0
 158:	add	x21, x5, #0x100
 15c:	mov	x28, x5
 160:	mov	x0, x5
 164:	bl	0 <_ZN4llvm2cl6Option11addArgumentEv>
 168:	adrp	x0, 0 <__dso_handle>
 16c:	mov	x1, x28
 170:	add	x2, x0, #0x0
 174:	adrp	x0, 0 <_GLOBAL__sub_I_Main.cpp>
 178:	add	x0, x0, #0x0
 17c:	bl	0 <__cxa_atexit>
 180:	ldr	x0, [x24]
 184:	add	x8, x28, #0x150
 188:	ldr	x2, [x21, #8]
 18c:	add	x7, x28, #0x198
 190:	ldr	x3, [x22]
 194:	add	x0, x0, #0x10
 198:	ldr	x1, [x23]
 19c:	and	x2, x2, #0x80000000
 1a0:	ldr	x6, [x26]
 1a4:	add	x3, x3, #0x10
 1a8:	add	x1, x1, #0x10
 1ac:	stp	x2, xzr, [x21, #8]
 1b0:	mov	x2, #0x1                   	// #1
 1b4:	stp	xzr, xzr, [x21, #24]
 1b8:	stp	xzr, xzr, [x21, #40]
 1bc:	stp	xzr, x8, [x21, #56]
 1c0:	add	x8, x28, #0x1c0
 1c4:	stp	x25, xzr, [x21, #80]
 1c8:	str	x2, [x21, #112]
 1cc:	str	wzr, [x21, #120]
 1d0:	stp	x7, xzr, [x21, #136]
 1d4:	mov	w7, #0x1                   	// #1
 1d8:	stp	w2, w7, [x21, #72]
 1dc:	strb	wzr, [x21, #152]
 1e0:	str	x0, [x21, #168]
 1e4:	add	x0, x28, #0x180
 1e8:	stp	x0, x0, [x21, #96]
 1ec:	mov	x0, x21
 1f0:	str	x8, [x21, #176]
 1f4:	str	xzr, [x21, #184]
 1f8:	strb	wzr, [x21, #192]
 1fc:	strb	wzr, [x21, #208]
 200:	str	x1, [x21, #216]
 204:	adrp	x1, 0 <_GLOBAL__sub_I_Main.cpp>
 208:	str	x6, [x21, #248]
 20c:	add	x6, x19, #0x10
 210:	str	x3, [x28, #256]
 214:	add	x1, x1, #0x0
 218:	str	x6, [sp, #96]
 21c:	ldr	x3, [x27]
 220:	str	x3, [x21, #240]
 224:	bl	0 <_ZN4llvm2cl6Option9setArgStrENS_9StringRefE>
 228:	adrp	x0, 0 <_GLOBAL__sub_I_Main.cpp>
 22c:	add	x0, x0, #0x0
 230:	str	x0, [x21, #48]
 234:	adrp	x0, 0 <_GLOBAL__sub_I_Main.cpp>
 238:	add	x0, x0, #0x0
 23c:	str	x0, [x21, #32]
 240:	ldr	x6, [sp, #96]
 244:	mov	x0, #0x13                  	// #19
 248:	adrp	x2, 0 <_GLOBAL__sub_I_Main.cpp>
 24c:	add	x2, x2, #0x0
 250:	str	x0, [x21, #40]
 254:	mov	x0, #0x8                   	// #8
 258:	str	x0, [x21, #56]
 25c:	mov	w3, #0x0                   	// #0
 260:	mov	x1, x2
 264:	mov	x0, x19
 268:	str	x6, [sp, #144]
 26c:	bl	0 <_GLOBAL__sub_I_Main.cpp>
 270:	mov	x1, x19
 274:	add	x0, x28, #0x188
 278:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
 27c:	mov	w7, #0x1                   	// #1
 280:	strb	w7, [x21, #208]
 284:	add	x0, x28, #0x1b0
 288:	mov	x1, x19
 28c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
 290:	ldr	x4, [sp, #96]
 294:	ldr	x0, [sp, #144]
 298:	cmp	x0, x4
 29c:	b.eq	2a4 <_GLOBAL__sub_I_Main.cpp+0x2a4>  // b.none
 2a0:	bl	0 <_ZdlPv>
 2a4:	add	x5, x20, #0x0
 2a8:	add	x1, x5, #0x100
 2ac:	add	x4, x5, #0x200
 2b0:	mov	x28, x5
 2b4:	mov	x0, x1
 2b8:	stp	x1, x4, [sp, #96]
 2bc:	bl	0 <_ZN4llvm2cl6Option11addArgumentEv>
 2c0:	ldr	x1, [sp, #96]
 2c4:	adrp	x0, 0 <__dso_handle>
 2c8:	add	x2, x0, #0x0
 2cc:	adrp	x0, 0 <_GLOBAL__sub_I_Main.cpp>
 2d0:	add	x0, x0, #0x0
 2d4:	bl	0 <__cxa_atexit>
 2d8:	ldr	x4, [sp, #104]
 2dc:	mov	x1, #0x81800000            	// #2172649472
 2e0:	ldr	x24, [x24]
 2e4:	mov	w7, #0x1                   	// #1
 2e8:	ldr	x0, [x4, #8]
 2ec:	add	x6, x28, #0x280
 2f0:	ldr	x23, [x23]
 2f4:	and	x0, x0, x1
 2f8:	ldr	x22, [x22]
 2fc:	lsr	w9, w0, #16
 300:	ldr	x26, [x26]
 304:	bfi	w9, w7, #7, #2
 308:	ldr	x27, [x27]
 30c:	add	x12, x28, #0x298
 310:	add	x11, x28, #0x2c0
 314:	add	x3, x28, #0x250
 318:	add	x24, x24, #0x10
 31c:	add	x23, x23, #0x10
 320:	adrp	x8, 0 <_GLOBAL__sub_I_Main.cpp>
 324:	add	x8, x8, #0x0
 328:	stp	x0, xzr, [x4, #8]
 32c:	mov	x0, #0x1                   	// #1
 330:	mov	x10, #0xc                   	// #12
 334:	str	xzr, [x4, #24]
 338:	add	x22, x22, #0x10
 33c:	stp	xzr, xzr, [x4, #48]
 340:	adrp	x1, 30 <_GLOBAL__sub_I_Main.cpp+0x30>
 344:	add	x2, x1, #0x0
 348:	str	x3, [x4, #64]
 34c:	mov	w3, #0x0                   	// #0
 350:	str	w0, [x4, #72]
 354:	adrp	x1, 0 <_GLOBAL__sub_I_Main.cpp>
 358:	str	w7, [x4, #76]
 35c:	add	x1, x1, #0x0
 360:	stp	x25, xzr, [x4, #80]
 364:	stp	x6, x6, [x4, #96]
 368:	add	x6, x19, #0x10
 36c:	str	x0, [x4, #112]
 370:	mov	x0, x19
 374:	str	wzr, [x4, #120]
 378:	stp	x12, xzr, [x4, #136]
 37c:	strb	wzr, [x4, #152]
 380:	stp	x24, x11, [x4, #168]
 384:	str	xzr, [x4, #184]
 388:	strb	wzr, [x4, #192]
 38c:	strb	wzr, [x4, #208]
 390:	str	x23, [x4, #216]
 394:	stp	x27, x26, [x4, #240]
 398:	str	x22, [x28, #512]
 39c:	mov	x22, x6
 3a0:	strh	w9, [x4, #10]
 3a4:	stp	x8, x10, [x4, #32]
 3a8:	str	x4, [sp, #96]
 3ac:	str	x6, [sp, #144]
 3b0:	bl	0 <_GLOBAL__sub_I_Main.cpp>
 3b4:	mov	x1, x19
 3b8:	add	x0, x28, #0x288
 3bc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
 3c0:	ldr	x4, [sp, #96]
 3c4:	mov	w7, #0x1                   	// #1
 3c8:	add	x0, x28, #0x2b0
 3cc:	mov	x1, x19
 3d0:	strb	w7, [x4, #208]
 3d4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
 3d8:	ldr	x0, [sp, #144]
 3dc:	cmp	x0, x22
 3e0:	b.eq	3e8 <_GLOBAL__sub_I_Main.cpp+0x3e8>  // b.none
 3e4:	bl	0 <_ZdlPv>
 3e8:	add	x20, x20, #0x0
 3ec:	adrp	x0, 0 <__dso_handle>
 3f0:	add	x22, x20, #0x200
 3f4:	add	x21, x0, #0x0
 3f8:	mov	x0, x22
 3fc:	bl	0 <_ZN4llvm2cl6Option11addArgumentEv>
 400:	mov	x1, x22
 404:	mov	x2, x21
 408:	adrp	x0, 0 <_GLOBAL__sub_I_Main.cpp>
 40c:	add	x0, x0, #0x0
 410:	bl	0 <__cxa_atexit>
 414:	add	x27, sp, #0x7c
 418:	adrp	x6, 0 <_GLOBAL__sub_I_Main.cpp>
 41c:	adrp	x5, 0 <_GLOBAL__sub_I_Main.cpp>
 420:	add	x6, x6, #0x0
 424:	add	x5, x5, #0x0
 428:	mov	x9, #0x1a                  	// #26
 42c:	mov	x8, #0x9                   	// #9
 430:	mov	w7, #0x2                   	// #2
 434:	add	x26, sp, #0x80
 438:	mov	x4, x27
 43c:	mov	x3, x19
 440:	add	x0, x20, #0x300
 444:	mov	x2, x26
 448:	adrp	x1, 0 <_GLOBAL__sub_I_Main.cpp>
 44c:	add	x1, x1, #0x0
 450:	str	x0, [sp, #96]
 454:	adrp	x24, 0 <_GLOBAL__sub_I_Main.cpp>
 458:	str	w7, [sp, #124]
 45c:	add	x24, x24, #0x0
 460:	stp	x6, x9, [sp, #128]
 464:	add	x28, x20, #0x3e0
 468:	mov	x23, #0x1f                  	// #31
 46c:	stp	x5, x8, [sp, #144]
 470:	bl	0 <_GLOBAL__sub_I_Main.cpp>
 474:	mov	x2, x21
 478:	ldr	x0, [sp, #96]
 47c:	add	x22, x20, #0x4c0
 480:	mov	x1, x0
 484:	mov	x0, x24
 488:	bl	0 <__cxa_atexit>
 48c:	adrp	x6, 0 <_GLOBAL__sub_I_Main.cpp>
 490:	adrp	x5, 0 <_GLOBAL__sub_I_Main.cpp>
 494:	add	x6, x6, #0x0
 498:	add	x5, x5, #0x0
 49c:	mov	x4, x27
 4a0:	mov	x3, x19
 4a4:	mov	x8, #0xa                   	// #10
 4a8:	mov	w7, #0x2                   	// #2
 4ac:	mov	x2, x26
 4b0:	mov	x0, x28
 4b4:	adrp	x1, 0 <_GLOBAL__sub_I_Main.cpp>
 4b8:	add	x1, x1, #0x0
 4bc:	str	w7, [sp, #124]
 4c0:	stp	x6, x23, [sp, #128]
 4c4:	stp	x5, x8, [sp, #144]
 4c8:	bl	0 <_GLOBAL__sub_I_Main.cpp>
 4cc:	mov	x2, x21
 4d0:	mov	x1, x28
 4d4:	mov	x0, x24
 4d8:	bl	0 <__cxa_atexit>
 4dc:	stp	xzr, xzr, [x22, #24]
 4e0:	adrp	x3, 0 <_ZTVN4llvm2cl3optIbLb0ENS0_6parserIbEEEE>
 4e4:	adrp	x5, 0 <_GLOBAL__sub_I_Main.cpp>
 4e8:	adrp	x4, 0 <_ZTVN4llvm2cl6parserIbEE>
 4ec:	ldr	x3, [x3]
 4f0:	adrp	x6, 0 <_GLOBAL__sub_I_Main.cpp>
 4f4:	ldr	x5, [x5]
 4f8:	adrp	x7, 0 <_GLOBAL__sub_I_Main.cpp>
 4fc:	ldr	x4, [x4]
 500:	add	x13, x20, #0x510
 504:	ldr	x8, [x22, #8]
 508:	add	x10, x20, #0x540
 50c:	ldr	x6, [x6]
 510:	mov	x2, #0x10                  	// #16
 514:	ldr	x7, [x7]
 518:	add	x3, x3, x2
 51c:	add	x5, x5, x2
 520:	add	x4, x4, x2
 524:	and	x8, x8, #0x80000000
 528:	mov	x9, #0x1                   	// #1
 52c:	mov	w12, #0x1                   	// #1
 530:	mov	w11, #0x100                 	// #256
 534:	stp	x8, xzr, [x22, #8]
 538:	mov	x0, x22
 53c:	adrp	x1, 0 <_GLOBAL__sub_I_Main.cpp>
 540:	stp	xzr, xzr, [x22, #40]
 544:	add	x1, x1, #0x0
 548:	stp	xzr, x13, [x22, #56]
 54c:	stp	w9, w12, [x22, #72]
 550:	stp	x25, xzr, [x22, #80]
 554:	stp	x10, x10, [x22, #96]
 558:	str	x9, [x22, #112]
 55c:	str	wzr, [x22, #120]
 560:	strb	wzr, [x22, #136]
 564:	str	x5, [x22, #144]
 568:	strh	w11, [x22, #152]
 56c:	str	x4, [x22, #160]
 570:	stp	x7, x6, [x22, #184]
 574:	str	x3, [x20, #1216]
 578:	bl	0 <_ZN4llvm2cl6Option9setArgStrENS_9StringRefE>
 57c:	adrp	x1, 0 <_GLOBAL__sub_I_Main.cpp>
 580:	add	x1, x1, #0x0
 584:	stp	x1, x23, [x22, #32]
 588:	mov	x0, x22
 58c:	bl	0 <_ZN4llvm2cl6Option11addArgumentEv>
 590:	mov	x1, x22
 594:	mov	x2, x21
 598:	adrp	x0, 0 <_GLOBAL__sub_I_Main.cpp>
 59c:	add	x0, x0, #0x0
 5a0:	bl	0 <__cxa_atexit>
 5a4:	ldp	x19, x20, [sp, #16]
 5a8:	ldp	x21, x22, [sp, #32]
 5ac:	ldp	x23, x24, [sp, #48]
 5b0:	ldp	x25, x26, [sp, #64]
 5b4:	ldp	x27, x28, [sp, #80]
 5b8:	ldp	x29, x30, [sp], #176
 5bc:	ret

Record.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm5RecTy7typeIsAEPKS0_>:
       0:	cmp	x1, x0
       4:	cset	w0, eq  // eq = none
       8:	ret
       c:	nop

0000000000000010 <_ZNK4llvm8IntRecTy19typeIsConvertibleToEPKNS_5RecTyE>:
      10:	ldr	w0, [x1, #8]
      14:	cmp	w0, #0x1
      18:	ccmp	w0, #0x3, #0x4, hi  // hi = pmore
      1c:	cset	w0, eq  // eq = none
      20:	ret
      24:	nop

0000000000000028 <_ZNK4llvm9CodeRecTy19typeIsConvertibleToEPKNS_5RecTyE>:
      28:	ldr	w0, [x1, #8]
      2c:	sub	w0, w0, #0x2
      30:	tst	w0, #0xfffffffd
      34:	cset	w0, eq  // eq = none
      38:	ret
      3c:	nop

0000000000000040 <_ZNK4llvm11StringRecTy19typeIsConvertibleToEPKNS_5RecTyE>:
      40:	ldr	w0, [x1, #8]
      44:	sub	w0, w0, #0x2
      48:	tst	w0, #0xfffffffd
      4c:	cset	w0, eq  // eq = none
      50:	ret
      54:	nop

0000000000000058 <_ZN4llvm4Init6anchorEv>:
      58:	ret
      5c:	nop

0000000000000060 <_ZNK4llvm9UnsetInit20convertInitializerToEPNS_5RecTyE>:
      60:	ret
      64:	nop

0000000000000068 <_ZNK4llvm8ListInit10isConcreteEv>:
      68:	stp	x29, x30, [sp, #-32]!
      6c:	mov	x1, #0x28                  	// #40
      70:	mov	x29, sp
      74:	stp	x19, x20, [sp, #16]
      78:	add	x19, x0, x1
      7c:	ldr	w20, [x0, #32]
      80:	add	x20, x1, w20, uxtw #3
      84:	add	x20, x0, x20
      88:	b	a8 <_ZNK4llvm8ListInit10isConcreteEv+0x40>
      8c:	ldr	x0, [x19]
      90:	add	x19, x19, #0x8
      94:	ldr	x1, [x0]
      98:	ldr	x1, [x1, #32]
      9c:	blr	x1
      a0:	ands	w0, w0, #0xff
      a4:	b.eq	b4 <_ZNK4llvm8ListInit10isConcreteEv+0x4c>  // b.none
      a8:	cmp	x20, x19
      ac:	b.ne	8c <_ZNK4llvm8ListInit10isConcreteEv+0x24>  // b.any
      b0:	mov	w0, #0x1                   	// #1
      b4:	ldp	x19, x20, [sp, #16]
      b8:	ldp	x29, x30, [sp], #32
      bc:	ret

00000000000000c0 <_ZNK4llvm7VarInit17resolveReferencesERNS_8ResolverE>:
      c0:	stp	x29, x30, [sp, #-32]!
      c4:	mov	x29, sp
      c8:	ldr	x2, [x1]
      cc:	ldr	x2, [x2, #16]
      d0:	str	x19, [sp, #16]
      d4:	mov	x19, x0
      d8:	mov	x0, x1
      dc:	ldr	x1, [x19, #24]
      e0:	blr	x2
      e4:	cmp	x0, #0x0
      e8:	csel	x0, x0, x19, ne  // ne = any
      ec:	ldr	x19, [sp, #16]
      f0:	ldp	x29, x30, [sp], #32
      f4:	ret

00000000000000f8 <_ZNK4llvm10VarBitInit17resolveReferencesERNS_8ResolverE>:
      f8:	stp	x29, x30, [sp, #-32]!
      fc:	mov	x29, sp
     100:	str	x19, [sp, #16]
     104:	mov	x19, x0
     108:	ldr	x0, [x0, #24]
     10c:	ldr	x2, [x0]
     110:	ldr	x2, [x2, #96]
     114:	blr	x2
     118:	ldr	x2, [x19, #24]
     11c:	cmp	x2, x0
     120:	b.eq	140 <_ZNK4llvm10VarBitInit17resolveReferencesERNS_8ResolverE+0x48>  // b.none
     124:	ldr	x2, [x0]
     128:	ldr	w1, [x19, #32]
     12c:	ldr	x19, [sp, #16]
     130:	ldp	x29, x30, [sp], #32
     134:	ldr	x2, [x2, #104]
     138:	mov	x16, x2
     13c:	br	x16
     140:	mov	x0, x19
     144:	ldr	x19, [sp, #16]
     148:	ldp	x29, x30, [sp], #32
     14c:	ret

0000000000000150 <_ZNK4llvm7DefInit12getFieldTypeEPNS_10StringInitE>:
     150:	ldr	x2, [x0, #24]
     154:	mov	w4, #0x18                  	// #24
     158:	ldr	w3, [x2, #80]
     15c:	ldr	x0, [x2, #72]
     160:	umaddl	x3, w3, w4, x0
     164:	cmp	x0, x3
     168:	b.ne	17c <_ZNK4llvm7DefInit12getFieldTypeEPNS_10StringInitE+0x2c>  // b.any
     16c:	b	194 <_ZNK4llvm7DefInit12getFieldTypeEPNS_10StringInitE+0x44>
     170:	add	x0, x0, #0x18
     174:	cmp	x3, x0
     178:	b.eq	194 <_ZNK4llvm7DefInit12getFieldTypeEPNS_10StringInitE+0x44>  // b.none
     17c:	ldr	x2, [x0]
     180:	cmp	x1, x2
     184:	b.ne	170 <_ZNK4llvm7DefInit12getFieldTypeEPNS_10StringInitE+0x20>  // b.any
     188:	ldr	x0, [x0, #8]
     18c:	and	x0, x0, #0xfffffffffffffff8
     190:	ret
     194:	mov	x0, #0x0                   	// #0
     198:	ret
     19c:	nop

00000000000001a0 <_ZN4llvm23TrackUnresolvedResolver7resolveEPNS_4InitE>:
     1a0:	stp	x29, x30, [sp, #-80]!
     1a4:	mov	x29, sp
     1a8:	stp	x19, x20, [sp, #16]
     1ac:	mov	x19, x0
     1b0:	ldr	x0, [x0, #24]
     1b4:	cbz	x0, 220 <_ZN4llvm23TrackUnresolvedResolver7resolveEPNS_4InitE+0x80>
     1b8:	ldr	x2, [x0]
     1bc:	ldr	x2, [x2, #16]
     1c0:	blr	x2
     1c4:	mov	x20, x0
     1c8:	cbz	x0, 220 <_ZN4llvm23TrackUnresolvedResolver7resolveEPNS_4InitE+0x80>
     1cc:	ldrb	w1, [x19, #32]
     1d0:	cbnz	w1, 22c <_ZN4llvm23TrackUnresolvedResolver7resolveEPNS_4InitE+0x8c>
     1d4:	adrp	x2, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     1d8:	add	x1, sp, #0x28
     1dc:	ldr	x3, [x0]
     1e0:	strb	wzr, [sp, #56]
     1e4:	ldr	x2, [x2]
     1e8:	str	xzr, [sp, #64]
     1ec:	ldr	x3, [x3, #96]
     1f0:	add	x2, x2, #0x10
     1f4:	stp	x2, xzr, [sp, #40]
     1f8:	strb	wzr, [sp, #72]
     1fc:	blr	x3
     200:	ldrb	w0, [x19, #32]
     204:	ldrb	w1, [sp, #72]
     208:	orr	w0, w0, w1
     20c:	strb	w0, [x19, #32]
     210:	mov	x0, x20
     214:	ldp	x19, x20, [sp, #16]
     218:	ldp	x29, x30, [sp], #80
     21c:	ret
     220:	mov	w0, #0x1                   	// #1
     224:	mov	x20, #0x0                   	// #0
     228:	strb	w0, [x19, #32]
     22c:	mov	x0, x20
     230:	ldp	x19, x20, [sp, #16]
     234:	ldp	x29, x30, [sp], #80
     238:	ret
     23c:	nop

0000000000000240 <_ZN4llvm20HasReferenceResolver7resolveEPNS_4InitE>:
     240:	ldr	x2, [x0, #24]
     244:	cmp	x2, x1
     248:	b.eq	254 <_ZN4llvm20HasReferenceResolver7resolveEPNS_4InitE+0x14>  // b.none
     24c:	mov	x0, #0x0                   	// #0
     250:	ret
     254:	mov	w1, #0x1                   	// #1
     258:	strb	w1, [x0, #32]
     25c:	mov	x0, #0x0                   	// #0
     260:	ret
     264:	nop

0000000000000268 <_ZL15ProfileBitsInitRN4llvm16FoldingSetNodeIDENS_8ArrayRefIPNS_4InitEEE>:
     268:	stp	x29, x30, [sp, #-48]!
     26c:	mov	x29, sp
     270:	stp	x19, x20, [sp, #16]
     274:	mov	x19, x1
     278:	mov	x20, x0
     27c:	mov	x1, x2
     280:	str	x21, [sp, #32]
     284:	add	x21, x19, x2, lsl #3
     288:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
     28c:	cmp	x21, x19
     290:	b.eq	2ac <_ZL15ProfileBitsInitRN4llvm16FoldingSetNodeIDENS_8ArrayRefIPNS_4InitEEE+0x44>  // b.none
     294:	nop
     298:	ldr	x1, [x19], #8
     29c:	mov	x0, x20
     2a0:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
     2a4:	cmp	x21, x19
     2a8:	b.ne	298 <_ZL15ProfileBitsInitRN4llvm16FoldingSetNodeIDENS_8ArrayRefIPNS_4InitEEE+0x30>  // b.any
     2ac:	ldp	x19, x20, [sp, #16]
     2b0:	ldr	x21, [sp, #32]
     2b4:	ldp	x29, x30, [sp], #48
     2b8:	ret
     2bc:	nop

00000000000002c0 <_ZL15ProfileListInitRN4llvm16FoldingSetNodeIDENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>:
     2c0:	stp	x29, x30, [sp, #-48]!
     2c4:	mov	x29, sp
     2c8:	stp	x19, x20, [sp, #16]
     2cc:	mov	x19, x1
     2d0:	mov	x20, x0
     2d4:	mov	x1, x2
     2d8:	stp	x21, x22, [sp, #32]
     2dc:	mov	x22, x3
     2e0:	add	x21, x19, x2, lsl #3
     2e4:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
     2e8:	mov	x1, x22
     2ec:	mov	x0, x20
     2f0:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
     2f4:	cmp	x21, x19
     2f8:	b.eq	314 <_ZL15ProfileListInitRN4llvm16FoldingSetNodeIDENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x54>  // b.none
     2fc:	nop
     300:	ldr	x1, [x19], #8
     304:	mov	x0, x20
     308:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
     30c:	cmp	x21, x19
     310:	b.ne	300 <_ZL15ProfileListInitRN4llvm16FoldingSetNodeIDENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x40>  // b.any
     314:	ldp	x19, x20, [sp, #16]
     318:	ldp	x21, x22, [sp, #32]
     31c:	ldp	x29, x30, [sp], #48
     320:	ret
     324:	nop

0000000000000328 <_ZL17ProfileVarDefInitRN4llvm16FoldingSetNodeIDEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE>:
     328:	stp	x29, x30, [sp, #-48]!
     32c:	mov	x29, sp
     330:	stp	x19, x20, [sp, #16]
     334:	mov	x19, x2
     338:	mov	x20, x0
     33c:	stp	x21, x22, [sp, #32]
     340:	add	x21, x2, x3, lsl #3
     344:	mov	x22, x1
     348:	mov	x1, x3
     34c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
     350:	mov	x1, x22
     354:	mov	x0, x20
     358:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
     35c:	cmp	x21, x19
     360:	b.eq	37c <_ZL17ProfileVarDefInitRN4llvm16FoldingSetNodeIDEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE+0x54>  // b.none
     364:	nop
     368:	ldr	x1, [x19], #8
     36c:	mov	x0, x20
     370:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
     374:	cmp	x21, x19
     378:	b.ne	368 <_ZL17ProfileVarDefInitRN4llvm16FoldingSetNodeIDEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE+0x40>  // b.any
     37c:	ldp	x19, x20, [sp, #16]
     380:	ldp	x21, x22, [sp, #32]
     384:	ldp	x29, x30, [sp], #48
     388:	ret
     38c:	nop

0000000000000390 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE>:
     390:	stp	x29, x30, [sp, #-64]!
     394:	mov	x29, sp
     398:	stp	x19, x20, [sp, #16]
     39c:	mov	x20, x3
     3a0:	mov	x19, x5
     3a4:	stp	x21, x22, [sp, #32]
     3a8:	mov	x22, x6
     3ac:	mov	x21, x0
     3b0:	stp	x23, x24, [sp, #48]
     3b4:	mov	x24, x2
     3b8:	add	x23, x3, x4, lsl #3
     3bc:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
     3c0:	add	x22, x19, x22, lsl #3
     3c4:	mov	x1, x24
     3c8:	mov	x0, x21
     3cc:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
     3d0:	cmp	x20, x23
     3d4:	b.eq	400 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE+0x70>  // b.none
     3d8:	cmp	x19, x22
     3dc:	b.eq	41c <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE+0x8c>  // b.none
     3e0:	ldr	x1, [x20], #8
     3e4:	mov	x0, x21
     3e8:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
     3ec:	ldr	x1, [x19], #8
     3f0:	mov	x0, x21
     3f4:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
     3f8:	cmp	x20, x23
     3fc:	b.ne	3d8 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE+0x48>  // b.any
     400:	cmp	x22, x19
     404:	b.ne	43c <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE+0xac>  // b.any
     408:	ldp	x19, x20, [sp, #16]
     40c:	ldp	x21, x22, [sp, #32]
     410:	ldp	x23, x24, [sp, #48]
     414:	ldp	x29, x30, [sp], #64
     418:	ret
     41c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     420:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     424:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     428:	add	x3, x3, #0x0
     42c:	add	x1, x1, #0x0
     430:	add	x0, x0, #0x0
     434:	mov	w2, #0x782                 	// #1922
     438:	bl	0 <__assert_fail>
     43c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     440:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     444:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     448:	add	x3, x3, #0x0
     44c:	add	x1, x1, #0x0
     450:	add	x0, x0, #0x0
     454:	mov	w2, #0x786                 	// #1926
     458:	bl	0 <__assert_fail>
     45c:	nop

0000000000000460 <_ZL18ProfileRecordRecTyRN4llvm16FoldingSetNodeIDENS_8ArrayRefIPNS_6RecordEEE>:
     460:	stp	x29, x30, [sp, #-48]!
     464:	mov	x29, sp
     468:	stp	x19, x20, [sp, #16]
     46c:	mov	x19, x1
     470:	mov	x20, x0
     474:	mov	x1, x2
     478:	str	x21, [sp, #32]
     47c:	add	x21, x19, x2, lsl #3
     480:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
     484:	cmp	x21, x19
     488:	b.eq	4a4 <_ZL18ProfileRecordRecTyRN4llvm16FoldingSetNodeIDENS_8ArrayRefIPNS_6RecordEEE+0x44>  // b.none
     48c:	nop
     490:	ldr	x1, [x19], #8
     494:	mov	x0, x20
     498:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
     49c:	cmp	x21, x19
     4a0:	b.ne	490 <_ZL18ProfileRecordRecTyRN4llvm16FoldingSetNodeIDENS_8ArrayRefIPNS_6RecordEEE+0x30>  // b.any
     4a4:	ldp	x19, x20, [sp, #16]
     4a8:	ldr	x21, [sp, #32]
     4ac:	ldp	x29, x30, [sp], #48
     4b0:	ret
     4b4:	nop

00000000000004b8 <_ZNK4llvm5RecTy19typeIsConvertibleToEPKS0_>:
     4b8:	cbz	x1, 4d0 <_ZNK4llvm5RecTy19typeIsConvertibleToEPKS0_+0x18>
     4bc:	ldr	w2, [x0, #8]
     4c0:	ldr	w0, [x1, #8]
     4c4:	cmp	w2, w0
     4c8:	cset	w0, eq  // eq = none
     4cc:	ret
     4d0:	stp	x29, x30, [sp, #-16]!
     4d4:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     4d8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     4dc:	mov	x29, sp
     4e0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     4e4:	add	x3, x3, #0x0
     4e8:	add	x1, x1, #0x0
     4ec:	add	x0, x0, #0x0
     4f0:	mov	w2, #0x46                  	// #70
     4f4:	bl	0 <__assert_fail>

00000000000004f8 <_ZL17ProfileCondOpInitRN4llvm16FoldingSetNodeIDENS_8ArrayRefIPNS_4InitEEES5_PKNS_5RecTyE>:
     4f8:	stp	x29, x30, [sp, #-64]!
     4fc:	cmp	x2, x4
     500:	mov	x29, sp
     504:	stp	x19, x20, [sp, #16]
     508:	stp	x21, x22, [sp, #32]
     50c:	str	x23, [sp, #48]
     510:	b.ne	580 <_ZL17ProfileCondOpInitRN4llvm16FoldingSetNodeIDENS_8ArrayRefIPNS_4InitEEES5_PKNS_5RecTyE+0x88>  // b.any
     514:	mov	x19, x2
     518:	mov	x22, x1
     51c:	mov	x23, x3
     520:	mov	x1, x5
     524:	mov	x20, x0
     528:	add	x19, x22, x19, lsl #3
     52c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
     530:	cmp	x22, x19
     534:	b.eq	56c <_ZL17ProfileCondOpInitRN4llvm16FoldingSetNodeIDENS_8ArrayRefIPNS_4InitEEES5_PKNS_5RecTyE+0x74>  // b.none
     538:	sub	x21, x19, x22
     53c:	mov	x19, #0x0                   	// #0
     540:	sub	x21, x21, #0x8
     544:	nop
     548:	ldr	x1, [x22, x19]
     54c:	mov	x0, x20
     550:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
     554:	ldr	x1, [x23, x19]
     558:	mov	x0, x20
     55c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
     560:	cmp	x21, x19
     564:	add	x19, x19, #0x8
     568:	b.ne	548 <_ZL17ProfileCondOpInitRN4llvm16FoldingSetNodeIDENS_8ArrayRefIPNS_4InitEEES5_PKNS_5RecTyE+0x50>  // b.any
     56c:	ldp	x19, x20, [sp, #16]
     570:	ldp	x21, x22, [sp, #32]
     574:	ldr	x23, [sp, #48]
     578:	ldp	x29, x30, [sp], #64
     57c:	ret
     580:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     584:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     588:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     58c:	add	x3, x3, #0x0
     590:	add	x1, x1, #0x0
     594:	add	x0, x0, #0x0
     598:	mov	w2, #0x6fa                 	// #1786
     59c:	bl	0 <__assert_fail>

00000000000005a0 <_ZNK4llvm10CondOpInit10isCompleteEv.part.0>:
     5a0:	stp	x29, x30, [sp, #-32]!
     5a4:	mov	x29, sp
     5a8:	stp	x19, x20, [sp, #16]
     5ac:	ldr	w20, [x0, #32]
     5b0:	lsl	x20, x20, #3
     5b4:	add	x19, x20, #0x30
     5b8:	add	x19, x0, x19
     5bc:	add	x20, x19, x20
     5c0:	cmp	x19, x20
     5c4:	b.ne	5d4 <_ZNK4llvm10CondOpInit10isCompleteEv.part.0+0x34>  // b.any
     5c8:	b	5fc <_ZNK4llvm10CondOpInit10isCompleteEv.part.0+0x5c>
     5cc:	cmp	x20, x19
     5d0:	b.eq	5fc <_ZNK4llvm10CondOpInit10isCompleteEv.part.0+0x5c>  // b.none
     5d4:	ldr	x0, [x19]
     5d8:	add	x19, x19, #0x8
     5dc:	ldr	x1, [x0]
     5e0:	ldr	x1, [x1, #32]
     5e4:	blr	x1
     5e8:	ands	w0, w0, #0xff
     5ec:	b.ne	5cc <_ZNK4llvm10CondOpInit10isCompleteEv.part.0+0x2c>  // b.any
     5f0:	ldp	x19, x20, [sp, #16]
     5f4:	ldp	x29, x30, [sp], #32
     5f8:	ret
     5fc:	mov	w0, #0x1                   	// #1
     600:	ldp	x19, x20, [sp, #16]
     604:	ldp	x29, x30, [sp], #32
     608:	ret
     60c:	nop

0000000000000610 <_ZNK4llvm10CondOpInit10isConcreteEv>:
     610:	stp	x29, x30, [sp, #-48]!
     614:	mov	x29, sp
     618:	stp	x19, x20, [sp, #16]
     61c:	add	x19, x0, #0x30
     620:	ldr	w20, [x0, #32]
     624:	str	x21, [sp, #32]
     628:	mov	x21, x0
     62c:	add	x20, x19, x20, lsl #3
     630:	b	650 <_ZNK4llvm10CondOpInit10isConcreteEv+0x40>
     634:	ldr	x0, [x19]
     638:	add	x19, x19, #0x8
     63c:	ldr	x1, [x0]
     640:	ldr	x1, [x1, #32]
     644:	blr	x1
     648:	tst	w0, #0xff
     64c:	b.eq	66c <_ZNK4llvm10CondOpInit10isConcreteEv+0x5c>  // b.none
     650:	cmp	x20, x19
     654:	b.ne	634 <_ZNK4llvm10CondOpInit10isConcreteEv+0x24>  // b.any
     658:	mov	x0, x21
     65c:	ldp	x19, x20, [sp, #16]
     660:	ldr	x21, [sp, #32]
     664:	ldp	x29, x30, [sp], #48
     668:	b	5a0 <_ZNK4llvm10CondOpInit10isCompleteEv.part.0>
     66c:	mov	w0, #0x0                   	// #0
     670:	ldp	x19, x20, [sp, #16]
     674:	ldr	x21, [sp, #32]
     678:	ldp	x29, x30, [sp], #48
     67c:	ret

0000000000000680 <_ZNK4llvm10CondOpInit10isCompleteEv>:
     680:	stp	x29, x30, [sp, #-48]!
     684:	mov	x29, sp
     688:	stp	x19, x20, [sp, #16]
     68c:	add	x19, x0, #0x30
     690:	ldr	w20, [x0, #32]
     694:	str	x21, [sp, #32]
     698:	mov	x21, x0
     69c:	add	x20, x19, x20, lsl #3
     6a0:	b	6c0 <_ZNK4llvm10CondOpInit10isCompleteEv+0x40>
     6a4:	ldr	x0, [x19]
     6a8:	add	x19, x19, #0x8
     6ac:	ldr	x1, [x0]
     6b0:	ldr	x1, [x1, #24]
     6b4:	blr	x1
     6b8:	tst	w0, #0xff
     6bc:	b.eq	6dc <_ZNK4llvm10CondOpInit10isCompleteEv+0x5c>  // b.none
     6c0:	cmp	x20, x19
     6c4:	b.ne	6a4 <_ZNK4llvm10CondOpInit10isCompleteEv+0x24>  // b.any
     6c8:	mov	x0, x21
     6cc:	ldp	x19, x20, [sp, #16]
     6d0:	ldr	x21, [sp, #32]
     6d4:	ldp	x29, x30, [sp], #48
     6d8:	b	5a0 <_ZNK4llvm10CondOpInit10isCompleteEv.part.0>
     6dc:	mov	w0, #0x0                   	// #0
     6e0:	ldp	x19, x20, [sp, #16]
     6e4:	ldr	x21, [sp, #32]
     6e8:	ldp	x29, x30, [sp], #48
     6ec:	ret

00000000000006f0 <_ZNK4llvm7DagInit10isConcreteEv>:
     6f0:	stp	x29, x30, [sp, #-48]!
     6f4:	mov	x29, sp
     6f8:	stp	x19, x20, [sp, #16]
     6fc:	mov	x19, x0
     700:	ldr	x0, [x0, #32]
     704:	ldr	x1, [x0]
     708:	ldr	x1, [x1, #32]
     70c:	str	x21, [sp, #32]
     710:	blr	x1
     714:	ands	w21, w0, #0xff
     718:	b.eq	75c <_ZNK4llvm7DagInit10isConcreteEv+0x6c>  // b.none
     71c:	ldr	w20, [x19, #48]
     720:	add	x0, x19, #0x38
     724:	mov	x19, x0
     728:	add	x20, x0, x20, lsl #3
     72c:	cmp	x0, x20
     730:	b.ne	740 <_ZNK4llvm7DagInit10isConcreteEv+0x50>  // b.any
     734:	b	760 <_ZNK4llvm7DagInit10isConcreteEv+0x70>
     738:	cmp	x20, x19
     73c:	b.eq	760 <_ZNK4llvm7DagInit10isConcreteEv+0x70>  // b.none
     740:	ldr	x0, [x19]
     744:	add	x19, x19, #0x8
     748:	ldr	x1, [x0]
     74c:	ldr	x1, [x1, #32]
     750:	blr	x1
     754:	tst	w0, #0xff
     758:	b.ne	738 <_ZNK4llvm7DagInit10isConcreteEv+0x48>  // b.any
     75c:	mov	w21, #0x0                   	// #0
     760:	mov	w0, w21
     764:	ldp	x19, x20, [sp, #16]
     768:	ldr	x21, [sp, #32]
     76c:	ldp	x29, x30, [sp], #48
     770:	ret
     774:	nop

0000000000000778 <_ZN4llvm13isa_impl_wrapINS_9BitsRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>:
     778:	stp	x29, x30, [sp, #-16]!
     77c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     780:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     784:	mov	x29, sp
     788:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     78c:	add	x3, x3, #0x0
     790:	add	x1, x1, #0x0
     794:	add	x0, x0, #0x0
     798:	mov	w2, #0x69                  	// #105
     79c:	bl	0 <__assert_fail>

00000000000007a0 <_ZN4llvm13isa_impl_wrapINS_9ListRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>:
     7a0:	stp	x29, x30, [sp, #-16]!
     7a4:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     7a8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     7ac:	mov	x29, sp
     7b0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     7b4:	add	x3, x3, #0x0
     7b8:	add	x1, x1, #0x0
     7bc:	add	x0, x0, #0x0
     7c0:	mov	w2, #0x69                  	// #105
     7c4:	bl	0 <__assert_fail>

00000000000007c8 <_ZNK4llvm9ListRecTy7typeIsAEPKNS_5RecTyE>:
     7c8:	cbz	x1, 7f8 <_ZNK4llvm9ListRecTy7typeIsAEPKNS_5RecTyE+0x30>
     7cc:	ldr	w2, [x1, #8]
     7d0:	cmp	w2, #0x5
     7d4:	b.eq	7e0 <_ZNK4llvm9ListRecTy7typeIsAEPKNS_5RecTyE+0x18>  // b.none
     7d8:	mov	w0, #0x0                   	// #0
     7dc:	ret
     7e0:	ldr	x0, [x0, #24]
     7e4:	ldr	x1, [x1, #24]
     7e8:	ldr	x2, [x0]
     7ec:	ldr	x2, [x2, #32]
     7f0:	mov	x16, x2
     7f4:	br	x16
     7f8:	stp	x29, x30, [sp, #-16]!
     7fc:	mov	x29, sp
     800:	bl	7a0 <_ZN4llvm13isa_impl_wrapINS_9ListRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>
     804:	nop

0000000000000808 <_ZN4llvm3isaINS_9UnsetInitEPNS_4InitEEEbRKT0_.isra.0.part.0>:
     808:	stp	x29, x30, [sp, #-16]!
     80c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     810:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     814:	mov	x29, sp
     818:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     81c:	add	x3, x3, #0x0
     820:	add	x1, x1, #0x0
     824:	add	x0, x0, #0x0
     828:	mov	w2, #0x69                  	// #105
     82c:	bl	0 <__assert_fail>

0000000000000830 <_ZNK4llvm8BitRecTy19typeIsConvertibleToEPKNS_5RecTyE>:
     830:	stp	x29, x30, [sp, #-32]!
     834:	mov	x29, sp
     838:	str	x19, [sp, #16]
     83c:	mov	x19, x1
     840:	bl	4b8 <_ZNK4llvm5RecTy19typeIsConvertibleToEPKS0_>
     844:	ands	w0, w0, #0xff
     848:	b.ne	860 <_ZNK4llvm8BitRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x30>  // b.any
     84c:	ldr	w1, [x19, #8]
     850:	cmp	w1, #0x3
     854:	b.eq	86c <_ZNK4llvm8BitRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x3c>  // b.none
     858:	cmp	w1, #0x1
     85c:	b.eq	87c <_ZNK4llvm8BitRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x4c>  // b.none
     860:	ldr	x19, [sp, #16]
     864:	ldp	x29, x30, [sp], #32
     868:	ret
     86c:	mov	w0, #0x1                   	// #1
     870:	ldr	x19, [sp, #16]
     874:	ldp	x29, x30, [sp], #32
     878:	ret
     87c:	ldr	w0, [x19, #24]
     880:	ldr	x19, [sp, #16]
     884:	cmp	w0, #0x1
     888:	cset	w0, eq  // eq = none
     88c:	ldp	x29, x30, [sp], #32
     890:	ret
     894:	nop

0000000000000898 <_ZN4llvm3isaINS_8BitRecTyEPNS_5RecTyEEEbRKT0_.isra.0.part.0>:
     898:	stp	x29, x30, [sp, #-16]!
     89c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     8a0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     8a4:	mov	x29, sp
     8a8:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     8ac:	add	x3, x3, #0x0
     8b0:	add	x1, x1, #0x0
     8b4:	add	x0, x0, #0x0
     8b8:	mov	w2, #0x69                  	// #105
     8bc:	bl	0 <__assert_fail>

00000000000008c0 <_ZN4llvm3isaINS_11StringRecTyEPNS_5RecTyEEEbRKT0_.isra.0.part.0>:
     8c0:	stp	x29, x30, [sp, #-16]!
     8c4:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     8c8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     8cc:	mov	x29, sp
     8d0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     8d4:	add	x3, x3, #0x0
     8d8:	add	x1, x1, #0x0
     8dc:	add	x0, x0, #0x0
     8e0:	mov	w2, #0x69                  	// #105
     8e4:	bl	0 <__assert_fail>

00000000000008e8 <_ZN4llvm13isa_impl_wrapINS_11RecordRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>:
     8e8:	stp	x29, x30, [sp, #-16]!
     8ec:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     8f0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     8f4:	mov	x29, sp
     8f8:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     8fc:	add	x3, x3, #0x0
     900:	add	x1, x1, #0x0
     904:	add	x0, x0, #0x0
     908:	mov	w2, #0x69                  	// #105
     90c:	bl	0 <__assert_fail>

0000000000000910 <_ZN4llvm3isaINS_10StringInitEPNS_4InitEEEbRKT0_.isra.0.part.0>:
     910:	stp	x29, x30, [sp, #-16]!
     914:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     918:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     91c:	mov	x29, sp
     920:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     924:	add	x3, x3, #0x0
     928:	add	x1, x1, #0x0
     92c:	add	x0, x0, #0x0
     930:	mov	w2, #0x69                  	// #105
     934:	bl	0 <__assert_fail>

0000000000000938 <_ZN4llvm3isaINS_7DefInitEPNS_4InitEEEbRKT0_.isra.0.part.0>:
     938:	stp	x29, x30, [sp, #-16]!
     93c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     940:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     944:	mov	x29, sp
     948:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     94c:	add	x3, x3, #0x0
     950:	add	x1, x1, #0x0
     954:	add	x0, x0, #0x0
     958:	mov	w2, #0x69                  	// #105
     95c:	bl	0 <__assert_fail>

0000000000000960 <_ZN4llvm3isaINS_8BitsInitEPNS_4InitEEEbRKT0_.isra.0.part.0>:
     960:	stp	x29, x30, [sp, #-16]!
     964:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     968:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     96c:	mov	x29, sp
     970:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     974:	add	x3, x3, #0x0
     978:	add	x1, x1, #0x0
     97c:	add	x0, x0, #0x0
     980:	mov	w2, #0x69                  	// #105
     984:	bl	0 <__assert_fail>

0000000000000988 <_ZN4llvm3isaINS_7BitInitEPNS_4InitEEEbRKT0_.isra.0.part.0>:
     988:	stp	x29, x30, [sp, #-16]!
     98c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     990:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     994:	mov	x29, sp
     998:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     99c:	add	x3, x3, #0x0
     9a0:	add	x1, x1, #0x0
     9a4:	add	x0, x0, #0x0
     9a8:	mov	w2, #0x69                  	// #105
     9ac:	bl	0 <__assert_fail>

00000000000009b0 <_ZN4llvm3isaINS_7IntInitEPNS_4InitEEEbRKT0_.isra.0.part.0>:
     9b0:	stp	x29, x30, [sp, #-16]!
     9b4:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     9b8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     9bc:	mov	x29, sp
     9c0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     9c4:	add	x3, x3, #0x0
     9c8:	add	x1, x1, #0x0
     9cc:	add	x0, x0, #0x0
     9d0:	mov	w2, #0x69                  	// #105
     9d4:	bl	0 <__assert_fail>

00000000000009d8 <_ZN4llvm3isaINS_8ListInitEPNS_4InitEEEbRKT0_.isra.0.part.0>:
     9d8:	stp	x29, x30, [sp, #-16]!
     9dc:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     9e0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     9e4:	mov	x29, sp
     9e8:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     9ec:	add	x3, x3, #0x0
     9f0:	add	x1, x1, #0x0
     9f4:	add	x0, x0, #0x0
     9f8:	mov	w2, #0x69                  	// #105
     9fc:	bl	0 <__assert_fail>

0000000000000a00 <_ZN4llvm3isaINS_7DagInitEPNS_4InitEEEbRKT0_.isra.0.part.0>:
     a00:	stp	x29, x30, [sp, #-16]!
     a04:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     a08:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     a0c:	mov	x29, sp
     a10:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     a14:	add	x3, x3, #0x0
     a18:	add	x1, x1, #0x0
     a1c:	add	x0, x0, #0x0
     a20:	mov	w2, #0x69                  	// #105
     a24:	bl	0 <__assert_fail>

0000000000000a28 <_ZN4llvm3isaINS_8ListInitEPNS_9TypedInitEEEbRKT0_.isra.0.part.0>:
     a28:	stp	x29, x30, [sp, #-16]!
     a2c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     a30:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     a34:	mov	x29, sp
     a38:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     a3c:	add	x3, x3, #0x0
     a40:	add	x1, x1, #0x0
     a44:	add	x0, x0, #0x0
     a48:	mov	w2, #0x69                  	// #105
     a4c:	bl	0 <__assert_fail>

0000000000000a50 <_ZN4llvm3isaINS_7VarInitEPNS_4InitEEEbRKT0_.isra.0.part.0>:
     a50:	stp	x29, x30, [sp, #-16]!
     a54:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     a58:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     a5c:	mov	x29, sp
     a60:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     a64:	add	x3, x3, #0x0
     a68:	add	x1, x1, #0x0
     a6c:	add	x0, x0, #0x0
     a70:	mov	w2, #0x69                  	// #105
     a74:	bl	0 <__assert_fail>

0000000000000a78 <_ZN4llvm3isaINS_8CodeInitEPNS_4InitEEEbRKT0_.isra.0.part.0>:
     a78:	stp	x29, x30, [sp, #-16]!
     a7c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     a80:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     a84:	mov	x29, sp
     a88:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     a8c:	add	x3, x3, #0x0
     a90:	add	x1, x1, #0x0
     a94:	add	x0, x0, #0x0
     a98:	mov	w2, #0x69                  	// #105
     a9c:	bl	0 <__assert_fail>

0000000000000aa0 <_ZNK4llvm9ListRecTy19typeIsConvertibleToEPKNS_5RecTyE>:
     aa0:	cbz	x1, ad0 <_ZNK4llvm9ListRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x30>
     aa4:	ldr	w2, [x1, #8]
     aa8:	cmp	w2, #0x5
     aac:	b.eq	ab8 <_ZNK4llvm9ListRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x18>  // b.none
     ab0:	mov	w0, #0x0                   	// #0
     ab4:	ret
     ab8:	ldr	x0, [x0, #24]
     abc:	ldr	x1, [x1, #24]
     ac0:	ldr	x2, [x0]
     ac4:	ldr	x2, [x2, #24]
     ac8:	mov	x16, x2
     acc:	br	x16
     ad0:	stp	x29, x30, [sp, #-16]!
     ad4:	mov	x29, sp
     ad8:	bl	7a0 <_ZN4llvm13isa_impl_wrapINS_9ListRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>
     adc:	nop

0000000000000ae0 <_ZNK4llvm9BitsRecTy7typeIsAEPKNS_5RecTyE>:
     ae0:	cbz	x1, b0c <_ZNK4llvm9BitsRecTy7typeIsAEPKNS_5RecTyE+0x2c>
     ae4:	ldr	w3, [x1, #8]
     ae8:	mov	w2, #0x0                   	// #0
     aec:	cmp	w3, #0x1
     af0:	b.ne	b04 <_ZNK4llvm9BitsRecTy7typeIsAEPKNS_5RecTyE+0x24>  // b.any
     af4:	ldr	w0, [x0, #24]
     af8:	ldr	w1, [x1, #24]
     afc:	cmp	w1, w0
     b00:	cset	w2, eq  // eq = none
     b04:	mov	w0, w2
     b08:	ret
     b0c:	stp	x29, x30, [sp, #-16]!
     b10:	mov	x29, sp
     b14:	bl	778 <_ZN4llvm13isa_impl_wrapINS_9BitsRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>

0000000000000b18 <_ZNK4llvm9BitsRecTy19typeIsConvertibleToEPKNS_5RecTyE>:
     b18:	stp	x29, x30, [sp, #-32]!
     b1c:	mov	x29, sp
     b20:	stp	x19, x20, [sp, #16]
     b24:	mov	x20, x0
     b28:	mov	x19, x1
     b2c:	bl	4b8 <_ZNK4llvm5RecTy19typeIsConvertibleToEPKS0_>
     b30:	tst	w0, #0xff
     b34:	b.ne	b6c <_ZNK4llvm9BitsRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x54>  // b.any
     b38:	ldr	w0, [x19, #8]
     b3c:	cbz	w0, b54 <_ZNK4llvm9BitsRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x3c>
     b40:	cmp	w0, #0x3
     b44:	cset	w0, eq  // eq = none
     b48:	ldp	x19, x20, [sp, #16]
     b4c:	ldp	x29, x30, [sp], #32
     b50:	ret
     b54:	ldr	w0, [x20, #24]
     b58:	ldp	x19, x20, [sp, #16]
     b5c:	cmp	w0, #0x1
     b60:	cset	w0, eq  // eq = none
     b64:	ldp	x29, x30, [sp], #32
     b68:	ret
     b6c:	cbz	x19, b98 <_ZNK4llvm9BitsRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x80>
     b70:	ldr	w0, [x19, #8]
     b74:	cmp	w0, #0x1
     b78:	b.ne	b9c <_ZNK4llvm9BitsRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x84>  // b.any
     b7c:	ldr	w0, [x20, #24]
     b80:	ldr	w1, [x19, #24]
     b84:	ldp	x19, x20, [sp, #16]
     b88:	cmp	w1, w0
     b8c:	cset	w0, eq  // eq = none
     b90:	ldp	x29, x30, [sp], #32
     b94:	ret
     b98:	bl	778 <_ZN4llvm13isa_impl_wrapINS_9BitsRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>
     b9c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     ba0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     ba4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     ba8:	add	x3, x3, #0x0
     bac:	add	x1, x1, #0x0
     bb0:	add	x0, x0, #0x0
     bb4:	mov	w2, #0x108                 	// #264
     bb8:	bl	0 <__assert_fail>
     bbc:	nop

0000000000000bc0 <_ZNK4llvm8BitsInit10isConcreteEv>:
     bc0:	stp	x29, x30, [sp, #-48]!
     bc4:	mov	x29, sp
     bc8:	stp	x21, x22, [sp, #32]
     bcc:	ldr	w21, [x0, #32]
     bd0:	cbz	w21, c30 <_ZNK4llvm8BitsInit10isConcreteEv+0x70>
     bd4:	mov	w1, w21
     bd8:	add	x22, x0, #0x28
     bdc:	stp	x19, x20, [sp, #16]
     be0:	mov	x20, x0
     be4:	mov	x19, #0x0                   	// #0
     be8:	b	bfc <_ZNK4llvm8BitsInit10isConcreteEv+0x3c>
     bec:	add	x19, x19, #0x1
     bf0:	cmp	w21, w19
     bf4:	b.eq	c2c <_ZNK4llvm8BitsInit10isConcreteEv+0x6c>  // b.none
     bf8:	ldr	w1, [x20, #32]
     bfc:	cmp	w1, w19
     c00:	b.ls	c40 <_ZNK4llvm8BitsInit10isConcreteEv+0x80>  // b.plast
     c04:	ldr	x0, [x22, x19, lsl #3]
     c08:	ldr	x1, [x0]
     c0c:	ldr	x1, [x1, #32]
     c10:	blr	x1
     c14:	ands	w0, w0, #0xff
     c18:	b.ne	bec <_ZNK4llvm8BitsInit10isConcreteEv+0x2c>  // b.any
     c1c:	ldp	x19, x20, [sp, #16]
     c20:	ldp	x21, x22, [sp, #32]
     c24:	ldp	x29, x30, [sp], #48
     c28:	ret
     c2c:	ldp	x19, x20, [sp, #16]
     c30:	mov	w0, #0x1                   	// #1
     c34:	ldp	x21, x22, [sp, #32]
     c38:	ldp	x29, x30, [sp], #48
     c3c:	ret
     c40:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     c44:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     c48:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     c4c:	add	x3, x3, #0x0
     c50:	add	x1, x1, #0x0
     c54:	add	x0, x0, #0x0
     c58:	mov	w2, #0x22e                 	// #558
     c5c:	bl	0 <__assert_fail>

0000000000000c60 <_ZNK4llvm7DefInit20convertInitializerToEPNS_5RecTyE>:
     c60:	stp	x29, x30, [sp, #-32]!
     c64:	mov	x29, sp
     c68:	str	x19, [sp, #16]
     c6c:	cbz	x1, cb8 <_ZNK4llvm7DefInit20convertInitializerToEPNS_5RecTyE+0x58>
     c70:	mov	x19, x0
     c74:	ldr	w0, [x1, #8]
     c78:	cmp	w0, #0x7
     c7c:	b.eq	c90 <_ZNK4llvm7DefInit20convertInitializerToEPNS_5RecTyE+0x30>  // b.none
     c80:	mov	x0, #0x0                   	// #0
     c84:	ldr	x19, [sp, #16]
     c88:	ldp	x29, x30, [sp], #32
     c8c:	ret
     c90:	ldr	x0, [x19, #16]
     c94:	ldr	x2, [x0]
     c98:	ldr	x2, [x2, #24]
     c9c:	blr	x2
     ca0:	tst	w0, #0xff
     ca4:	b.eq	c80 <_ZNK4llvm7DefInit20convertInitializerToEPNS_5RecTyE+0x20>  // b.none
     ca8:	mov	x0, x19
     cac:	ldr	x19, [sp, #16]
     cb0:	ldp	x29, x30, [sp], #32
     cb4:	ret
     cb8:	bl	8e8 <_ZN4llvm13isa_impl_wrapINS_11RecordRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>
     cbc:	nop

0000000000000cc0 <_ZNK4llvm9TypedInit12getFieldTypeEPNS_10StringInitE>:
     cc0:	ldr	x2, [x0, #16]
     cc4:	cbz	x2, d4c <_ZNK4llvm9TypedInit12getFieldTypeEPNS_10StringInitE+0x8c>
     cc8:	ldr	w3, [x2, #8]
     ccc:	mov	x0, #0x0                   	// #0
     cd0:	cmp	w3, #0x7
     cd4:	b.eq	cdc <_ZNK4llvm9TypedInit12getFieldTypeEPNS_10StringInitE+0x1c>  // b.none
     cd8:	ret
     cdc:	ldr	w5, [x2, #32]
     ce0:	add	x4, x2, #0x28
     ce4:	add	x5, x4, x5, lsl #3
     ce8:	cmp	x5, x4
     cec:	b.eq	cd8 <_ZNK4llvm9TypedInit12getFieldTypeEPNS_10StringInitE+0x18>  // b.none
     cf0:	mov	w6, #0x18                  	// #24
     cf4:	nop
     cf8:	ldr	x2, [x4]
     cfc:	ldr	w3, [x2, #80]
     d00:	ldr	x0, [x2, #72]
     d04:	umaddl	x3, w3, w6, x0
     d08:	cmp	x0, x3
     d0c:	b.ne	d20 <_ZNK4llvm9TypedInit12getFieldTypeEPNS_10StringInitE+0x60>  // b.any
     d10:	b	d38 <_ZNK4llvm9TypedInit12getFieldTypeEPNS_10StringInitE+0x78>
     d14:	add	x0, x0, #0x18
     d18:	cmp	x3, x0
     d1c:	b.eq	d38 <_ZNK4llvm9TypedInit12getFieldTypeEPNS_10StringInitE+0x78>  // b.none
     d20:	ldr	x2, [x0]
     d24:	cmp	x1, x2
     d28:	b.ne	d14 <_ZNK4llvm9TypedInit12getFieldTypeEPNS_10StringInitE+0x54>  // b.any
     d2c:	ldr	x0, [x0, #8]
     d30:	and	x0, x0, #0xfffffffffffffff8
     d34:	ret
     d38:	add	x4, x4, #0x8
     d3c:	cmp	x5, x4
     d40:	b.ne	cf8 <_ZNK4llvm9TypedInit12getFieldTypeEPNS_10StringInitE+0x38>  // b.any
     d44:	mov	x0, #0x0                   	// #0
     d48:	ret
     d4c:	stp	x29, x30, [sp, #-16]!
     d50:	mov	x29, sp
     d54:	bl	8e8 <_ZN4llvm13isa_impl_wrapINS_11RecordRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>

0000000000000d58 <_ZZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEEENKUlS3_S3_E_clES3_S3_.isra.0>:
     d58:	stp	x29, x30, [sp, #-128]!
     d5c:	mov	x29, sp
     d60:	ldr	x0, [x0]
     d64:	stp	x19, x20, [sp, #16]
     d68:	mov	x19, x1
     d6c:	stp	x21, x22, [sp, #32]
     d70:	add	x21, sp, #0x60
     d74:	mov	x8, x21
     d78:	ldr	x1, [x0]
     d7c:	stp	x23, x24, [sp, #48]
     d80:	add	x22, sp, #0x40
     d84:	ldr	x1, [x1, #48]
     d88:	blr	x1
     d8c:	ldr	x0, [x19]
     d90:	mov	x8, x22
     d94:	ldr	x1, [x0]
     d98:	ldr	x1, [x1, #48]
     d9c:	blr	x1
     da0:	ldp	x24, x20, [sp, #64]
     da4:	ldp	x23, x19, [sp, #96]
     da8:	cmp	x19, x20
     dac:	csel	x2, x19, x20, ls  // ls = plast
     db0:	cbz	x2, dc4 <_ZZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEEENKUlS3_S3_E_clES3_S3_.isra.0+0x6c>
     db4:	mov	x1, x24
     db8:	mov	x0, x23
     dbc:	bl	0 <memcmp>
     dc0:	cbnz	w0, e2c <_ZZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEEENKUlS3_S3_E_clES3_S3_.isra.0+0xd4>
     dc4:	sub	x19, x19, x20
     dc8:	mov	x0, #0x7fffffff            	// #2147483647
     dcc:	mov	w20, #0x0                   	// #0
     dd0:	cmp	x19, x0
     dd4:	b.gt	de8 <_ZZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEEENKUlS3_S3_E_clES3_S3_.isra.0+0x90>
     dd8:	mov	x0, #0xffffffff80000000    	// #-2147483648
     ddc:	cmp	x19, x0
     de0:	b.lt	e34 <_ZZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEEENKUlS3_S3_E_clES3_S3_.isra.0+0xdc>  // b.tstop
     de4:	lsr	w20, w19, #31
     de8:	add	x22, x22, #0x10
     dec:	cmp	x24, x22
     df0:	b.eq	e00 <_ZZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEEENKUlS3_S3_E_clES3_S3_.isra.0+0xa8>  // b.none
     df4:	mov	x0, x24
     df8:	bl	0 <_ZdlPv>
     dfc:	ldr	x23, [sp, #96]
     e00:	add	x21, x21, #0x10
     e04:	cmp	x23, x21
     e08:	b.eq	e14 <_ZZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEEENKUlS3_S3_E_clES3_S3_.isra.0+0xbc>  // b.none
     e0c:	mov	x0, x23
     e10:	bl	0 <_ZdlPv>
     e14:	mov	w0, w20
     e18:	ldp	x19, x20, [sp, #16]
     e1c:	ldp	x21, x22, [sp, #32]
     e20:	ldp	x23, x24, [sp, #48]
     e24:	ldp	x29, x30, [sp], #128
     e28:	ret
     e2c:	lsr	w20, w0, #31
     e30:	b	de8 <_ZZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEEENKUlS3_S3_E_clES3_S3_.isra.0+0x90>
     e34:	mov	w20, #0x1                   	// #1
     e38:	b	de8 <_ZZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEEENKUlS3_S3_E_clES3_S3_.isra.0+0x90>
     e3c:	nop

0000000000000e40 <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_.isra.0>:
     e40:	stp	x29, x30, [sp, #-176]!
     e44:	mov	x29, sp
     e48:	stp	x21, x22, [sp, #32]
     e4c:	add	x22, sp, #0x70
     e50:	ldr	x21, [x0]
     e54:	stp	x19, x20, [sp, #16]
     e58:	add	x20, sp, #0x90
     e5c:	stp	x23, x24, [sp, #48]
     e60:	add	x24, x22, #0x10
     e64:	stp	x27, x28, [sp, #80]
     e68:	mov	x28, x0
     e6c:	stp	x25, x26, [sp, #64]
     e70:	mov	x8, x20
     e74:	ldr	x0, [x21]
     e78:	str	x28, [sp, #104]
     e7c:	ldur	x19, [x28, #-8]
     e80:	sub	x28, x28, #0x8
     e84:	ldr	x1, [x0]
     e88:	ldr	x1, [x1, #48]
     e8c:	blr	x1
     e90:	ldr	x0, [x19]
     e94:	mov	x8, x22
     e98:	ldr	x1, [x0]
     e9c:	ldr	x1, [x1, #48]
     ea0:	blr	x1
     ea4:	ldp	x25, x23, [sp, #112]
     ea8:	ldp	x26, x19, [sp, #144]
     eac:	mov	x1, x25
     eb0:	cmp	x19, x23
     eb4:	csel	x2, x19, x23, ls  // ls = plast
     eb8:	cbz	x2, ecc <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_.isra.0+0x8c>
     ebc:	mov	x0, x26
     ec0:	bl	0 <memcmp>
     ec4:	mov	w27, w0
     ec8:	cbnz	w0, eec <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_.isra.0+0xac>
     ecc:	sub	x19, x19, x23
     ed0:	mov	x0, #0x7fffffff            	// #2147483647
     ed4:	mov	w27, #0x7fffffff            	// #2147483647
     ed8:	cmp	x19, x0
     edc:	b.gt	eec <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_.isra.0+0xac>
     ee0:	mov	x0, #0xffffffff80000000    	// #-2147483648
     ee4:	cmp	x19, x0
     ee8:	csel	w27, w19, w0, ge  // ge = tcont
     eec:	mov	x0, x25
     ef0:	cmp	x25, x24
     ef4:	b.eq	f00 <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_.isra.0+0xc0>  // b.none
     ef8:	bl	0 <_ZdlPv>
     efc:	ldr	x26, [sp, #144]
     f00:	add	x0, x20, #0x10
     f04:	cmp	x26, x0
     f08:	b.eq	f14 <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_.isra.0+0xd4>  // b.none
     f0c:	mov	x0, x26
     f10:	bl	0 <_ZdlPv>
     f14:	tbz	w27, #31, f24 <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_.isra.0+0xe4>
     f18:	ldr	x0, [x28]
     f1c:	str	x0, [x28, #8]
     f20:	b	e70 <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_.isra.0+0x30>
     f24:	ldr	x0, [sp, #104]
     f28:	ldp	x19, x20, [sp, #16]
     f2c:	ldp	x23, x24, [sp, #48]
     f30:	ldp	x25, x26, [sp, #64]
     f34:	ldp	x27, x28, [sp, #80]
     f38:	str	x21, [x0]
     f3c:	ldp	x21, x22, [sp, #32]
     f40:	ldp	x29, x30, [sp], #176
     f44:	ret

0000000000000f48 <_ZNK4llvm9ListRecTy11getAsStringB5cxx11Ev>:
     f48:	stp	x29, x30, [sp, #-112]!
     f4c:	mov	x29, sp
     f50:	ldr	x0, [x0, #24]
     f54:	stp	x19, x20, [sp, #16]
     f58:	add	x20, sp, #0x30
     f5c:	mov	x19, x8
     f60:	mov	x8, x20
     f64:	ldr	x1, [x0]
     f68:	ldr	x1, [x1, #16]
     f6c:	str	x21, [sp, #32]
     f70:	add	x21, sp, #0x50
     f74:	blr	x1
     f78:	mov	x2, #0x0                   	// #0
     f7c:	mov	x1, #0x0                   	// #0
     f80:	mov	x0, x20
     f84:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     f88:	mov	x4, #0x5                   	// #5
     f8c:	add	x3, x3, #0x0
     f90:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
     f94:	add	x1, x21, #0x10
     f98:	str	x1, [sp, #80]
     f9c:	mov	x1, x0
     fa0:	ldr	x2, [x1], #16
     fa4:	cmp	x2, x1
     fa8:	b.eq	1060 <_ZNK4llvm9ListRecTy11getAsStringB5cxx11Ev+0x118>  // b.none
     fac:	ldr	x3, [x0, #16]
     fb0:	str	x2, [sp, #80]
     fb4:	str	x3, [sp, #96]
     fb8:	ldr	x2, [x0, #8]
     fbc:	str	x2, [sp, #88]
     fc0:	stp	x1, xzr, [x0]
     fc4:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
     fc8:	ldr	x1, [sp, #88]
     fcc:	strb	wzr, [x0, #16]
     fd0:	cmp	x1, x2
     fd4:	b.eq	1078 <_ZNK4llvm9ListRecTy11getAsStringB5cxx11Ev+0x130>  // b.none
     fd8:	mov	x2, #0x1                   	// #1
     fdc:	mov	x0, x21
     fe0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     fe4:	add	x1, x1, #0x0
     fe8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
     fec:	mov	x1, x0
     ff0:	add	x2, x19, #0x10
     ff4:	str	x2, [x19]
     ff8:	ldr	x2, [x0], #16
     ffc:	cmp	x2, x0
    1000:	b.eq	106c <_ZNK4llvm9ListRecTy11getAsStringB5cxx11Ev+0x124>  // b.none
    1004:	ldr	x3, [x1, #16]
    1008:	str	x2, [x19]
    100c:	str	x3, [x19, #16]
    1010:	str	x0, [x1]
    1014:	add	x21, x21, #0x10
    1018:	ldr	x0, [x1, #8]
    101c:	str	x0, [x19, #8]
    1020:	ldr	x0, [sp, #80]
    1024:	str	xzr, [x1, #8]
    1028:	strb	wzr, [x1, #16]
    102c:	cmp	x0, x21
    1030:	b.eq	1038 <_ZNK4llvm9ListRecTy11getAsStringB5cxx11Ev+0xf0>  // b.none
    1034:	bl	0 <_ZdlPv>
    1038:	ldr	x0, [sp, #48]
    103c:	add	x20, x20, #0x10
    1040:	cmp	x0, x20
    1044:	b.eq	104c <_ZNK4llvm9ListRecTy11getAsStringB5cxx11Ev+0x104>  // b.none
    1048:	bl	0 <_ZdlPv>
    104c:	mov	x0, x19
    1050:	ldp	x19, x20, [sp, #16]
    1054:	ldr	x21, [sp, #32]
    1058:	ldp	x29, x30, [sp], #112
    105c:	ret
    1060:	ldp	x2, x3, [x0, #16]
    1064:	stp	x2, x3, [sp, #96]
    1068:	b	fb8 <_ZNK4llvm9ListRecTy11getAsStringB5cxx11Ev+0x70>
    106c:	ldp	x2, x3, [x1, #16]
    1070:	stp	x2, x3, [x19, #16]
    1074:	b	1010 <_ZNK4llvm9ListRecTy11getAsStringB5cxx11Ev+0xc8>
    1078:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    107c:	add	x0, x0, #0x0
    1080:	bl	0 <_ZSt20__throw_length_errorPKc>
    1084:	nop

0000000000001088 <_ZSt16__insertion_sortIPPN4llvm6RecordEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_.isra.0>:
    1088:	cmp	x0, x1
    108c:	b.eq	11cc <_ZSt16__insertion_sortIPPN4llvm6RecordEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_.isra.0+0x144>  // b.none
    1090:	stp	x29, x30, [sp, #-176]!
    1094:	mov	x29, sp
    1098:	stp	x19, x20, [sp, #16]
    109c:	add	x19, x0, #0x8
    10a0:	cmp	x1, x19
    10a4:	stp	x21, x22, [sp, #32]
    10a8:	mov	x21, x0
    10ac:	stp	x23, x24, [sp, #48]
    10b0:	mov	x23, x1
    10b4:	b.eq	11ac <_ZSt16__insertion_sortIPPN4llvm6RecordEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_.isra.0+0x124>  // b.none
    10b8:	add	x24, sp, #0x70
    10bc:	add	x22, sp, #0x90
    10c0:	add	x0, x24, #0x10
    10c4:	stp	x25, x26, [sp, #64]
    10c8:	stp	x27, x28, [sp, #80]
    10cc:	str	x0, [sp, #104]
    10d0:	ldr	x0, [x19]
    10d4:	mov	x8, x22
    10d8:	ldr	x20, [x21]
    10dc:	ldr	x0, [x0]
    10e0:	ldr	x1, [x0]
    10e4:	ldr	x1, [x1, #48]
    10e8:	blr	x1
    10ec:	ldr	x0, [x20]
    10f0:	mov	x8, x24
    10f4:	ldr	x1, [x0]
    10f8:	ldr	x1, [x1, #48]
    10fc:	blr	x1
    1100:	ldp	x26, x25, [sp, #112]
    1104:	ldp	x27, x20, [sp, #144]
    1108:	cmp	x20, x25
    110c:	csel	x2, x20, x25, ls  // ls = plast
    1110:	cbz	x2, 1128 <_ZSt16__insertion_sortIPPN4llvm6RecordEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_.isra.0+0xa0>
    1114:	mov	x1, x26
    1118:	mov	x0, x27
    111c:	bl	0 <memcmp>
    1120:	mov	w28, w0
    1124:	cbnz	w0, 1148 <_ZSt16__insertion_sortIPPN4llvm6RecordEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_.isra.0+0xc0>
    1128:	sub	x20, x20, x25
    112c:	mov	x0, #0x7fffffff            	// #2147483647
    1130:	mov	w28, #0x7fffffff            	// #2147483647
    1134:	cmp	x20, x0
    1138:	b.gt	1148 <_ZSt16__insertion_sortIPPN4llvm6RecordEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_.isra.0+0xc0>
    113c:	mov	x0, #0xffffffff80000000    	// #-2147483648
    1140:	cmp	x20, x0
    1144:	csel	w28, w20, w0, ge  // ge = tcont
    1148:	ldr	x0, [sp, #104]
    114c:	cmp	x26, x0
    1150:	b.eq	1160 <_ZSt16__insertion_sortIPPN4llvm6RecordEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_.isra.0+0xd8>  // b.none
    1154:	mov	x0, x26
    1158:	bl	0 <_ZdlPv>
    115c:	ldr	x27, [sp, #144]
    1160:	add	x0, x22, #0x10
    1164:	cmp	x27, x0
    1168:	b.eq	1174 <_ZSt16__insertion_sortIPPN4llvm6RecordEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_.isra.0+0xec>  // b.none
    116c:	mov	x0, x27
    1170:	bl	0 <_ZdlPv>
    1174:	tbz	w28, #31, 11c0 <_ZSt16__insertion_sortIPPN4llvm6RecordEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_.isra.0+0x138>
    1178:	cmp	x21, x19
    117c:	ldr	x20, [x19]
    1180:	b.eq	1194 <_ZSt16__insertion_sortIPPN4llvm6RecordEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_.isra.0+0x10c>  // b.none
    1184:	sub	x2, x19, x21
    1188:	mov	x1, x21
    118c:	add	x0, x21, #0x8
    1190:	bl	0 <memmove>
    1194:	str	x20, [x21]
    1198:	add	x19, x19, #0x8
    119c:	cmp	x19, x23
    11a0:	b.ne	10d0 <_ZSt16__insertion_sortIPPN4llvm6RecordEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_.isra.0+0x48>  // b.any
    11a4:	ldp	x25, x26, [sp, #64]
    11a8:	ldp	x27, x28, [sp, #80]
    11ac:	ldp	x19, x20, [sp, #16]
    11b0:	ldp	x21, x22, [sp, #32]
    11b4:	ldp	x23, x24, [sp, #48]
    11b8:	ldp	x29, x30, [sp], #176
    11bc:	ret
    11c0:	mov	x0, x19
    11c4:	bl	e40 <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_.isra.0>
    11c8:	b	1198 <_ZSt16__insertion_sortIPPN4llvm6RecordEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_.isra.0+0x110>
    11cc:	ret

00000000000011d0 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0>:
    11d0:	stp	x29, x30, [sp, #-224]!
    11d4:	mov	x29, sp
    11d8:	stp	x25, x26, [sp, #64]
    11dc:	sub	x26, x2, #0x1
    11e0:	mov	x25, x3
    11e4:	add	x26, x26, x26, lsr #63
    11e8:	stp	x19, x20, [sp, #16]
    11ec:	mov	x20, x0
    11f0:	and	x0, x2, #0x1
    11f4:	stp	x21, x22, [sp, #32]
    11f8:	cmp	x1, x26, asr #1
    11fc:	stp	x23, x24, [sp, #48]
    1200:	stp	x27, x28, [sp, #80]
    1204:	str	x1, [sp, #120]
    1208:	stp	x0, x2, [sp, #144]
    120c:	asr	x0, x26, #1
    1210:	str	x0, [sp, #128]
    1214:	b.ge	144c <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0x27c>  // b.tcont
    1218:	add	x23, sp, #0xa0
    121c:	mov	x22, x1
    1220:	add	x21, sp, #0xc0
    1224:	add	x0, x23, #0x10
    1228:	str	x0, [sp, #136]
    122c:	nop
    1230:	add	x19, x22, #0x1
    1234:	mov	x8, x21
    1238:	lsl	x0, x19, #4
    123c:	lsl	x19, x19, #1
    1240:	add	x24, x20, x0
    1244:	ldr	x0, [x20, x0]
    1248:	ldur	x26, [x24, #-8]
    124c:	ldr	x0, [x0]
    1250:	ldr	x2, [x0]
    1254:	ldr	x2, [x2, #48]
    1258:	blr	x2
    125c:	ldr	x0, [x26]
    1260:	mov	x8, x23
    1264:	ldr	x1, [x0]
    1268:	ldr	x1, [x1, #48]
    126c:	blr	x1
    1270:	ldp	x26, x6, [sp, #160]
    1274:	ldp	x27, x3, [sp, #192]
    1278:	cmp	x3, x6
    127c:	csel	x2, x3, x6, ls  // ls = plast
    1280:	cbz	x2, 12a0 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0xd0>
    1284:	mov	x1, x26
    1288:	mov	x0, x27
    128c:	stp	x3, x6, [sp, #104]
    1290:	bl	0 <memcmp>
    1294:	mov	w28, w0
    1298:	ldp	x3, x6, [sp, #104]
    129c:	cbnz	w0, 12c0 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0xf0>
    12a0:	sub	x3, x3, x6
    12a4:	mov	x0, #0x7fffffff            	// #2147483647
    12a8:	mov	w28, #0x7fffffff            	// #2147483647
    12ac:	cmp	x3, x0
    12b0:	b.gt	12c0 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0xf0>
    12b4:	mov	x0, #0xffffffff80000000    	// #-2147483648
    12b8:	cmp	x3, x0
    12bc:	csel	w28, w3, w0, ge  // ge = tcont
    12c0:	ldr	x0, [sp, #136]
    12c4:	cmp	x26, x0
    12c8:	b.eq	12d8 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0x108>  // b.none
    12cc:	mov	x0, x26
    12d0:	bl	0 <_ZdlPv>
    12d4:	ldr	x27, [sp, #192]
    12d8:	add	x0, x21, #0x10
    12dc:	cmp	x27, x0
    12e0:	b.eq	12ec <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0x11c>  // b.none
    12e4:	mov	x0, x27
    12e8:	bl	0 <_ZdlPv>
    12ec:	tbz	w28, #31, 12f8 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0x128>
    12f0:	sub	x19, x19, #0x1
    12f4:	add	x24, x20, x19, lsl #3
    12f8:	ldr	x0, [x24]
    12fc:	str	x0, [x20, x22, lsl #3]
    1300:	ldr	x0, [sp, #128]
    1304:	cmp	x19, x0
    1308:	b.ge	1314 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0x144>  // b.tcont
    130c:	mov	x22, x19
    1310:	b	1230 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0x60>
    1314:	ldr	x0, [sp, #144]
    1318:	cbz	x0, 1460 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0x290>
    131c:	sub	x3, x19, #0x1
    1320:	ldr	x0, [sp, #120]
    1324:	add	x3, x3, x3, lsr #63
    1328:	cmp	x19, x0
    132c:	asr	x28, x3, #1
    1330:	b.le	142c <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0x25c>
    1334:	add	x23, sp, #0xa0
    1338:	add	x21, sp, #0xc0
    133c:	add	x0, x23, #0x10
    1340:	str	x0, [sp, #128]
    1344:	b	1370 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0x1a0>
    1348:	ldr	x1, [sp, #120]
    134c:	sub	x0, x28, #0x1
    1350:	cmp	x1, x28
    1354:	add	x0, x0, x0, lsr #63
    1358:	ldr	x1, [x20, x22]
    135c:	str	x1, [x20, x19, lsl #3]
    1360:	asr	x3, x0, #1
    1364:	mov	x19, x28
    1368:	b.ge	1494 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0x2c4>  // b.tcont
    136c:	mov	x28, x3
    1370:	ldr	x0, [x20, x28, lsl #3]
    1374:	lsl	x22, x28, #3
    1378:	add	x1, x20, x22
    137c:	str	x1, [sp, #136]
    1380:	mov	x8, x21
    1384:	ldr	x0, [x0]
    1388:	ldr	x1, [x0]
    138c:	ldr	x1, [x1, #48]
    1390:	blr	x1
    1394:	ldr	x0, [x25]
    1398:	mov	x8, x23
    139c:	ldr	x1, [x0]
    13a0:	ldr	x1, [x1, #48]
    13a4:	blr	x1
    13a8:	ldp	x26, x6, [sp, #160]
    13ac:	ldp	x24, x4, [sp, #192]
    13b0:	cmp	x4, x6
    13b4:	csel	x2, x4, x6, ls  // ls = plast
    13b8:	cbz	x2, 13d8 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0x208>
    13bc:	mov	x1, x26
    13c0:	mov	x0, x24
    13c4:	stp	x4, x6, [sp, #104]
    13c8:	bl	0 <memcmp>
    13cc:	mov	w27, w0
    13d0:	ldp	x4, x6, [sp, #104]
    13d4:	cbnz	w0, 13f8 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0x228>
    13d8:	sub	x4, x4, x6
    13dc:	mov	x0, #0x7fffffff            	// #2147483647
    13e0:	mov	w27, #0x7fffffff            	// #2147483647
    13e4:	cmp	x4, x0
    13e8:	b.gt	13f8 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0x228>
    13ec:	mov	x0, #0xffffffff80000000    	// #-2147483648
    13f0:	cmp	x4, x0
    13f4:	csel	w27, w4, w0, ge  // ge = tcont
    13f8:	ldr	x0, [sp, #128]
    13fc:	cmp	x26, x0
    1400:	b.eq	1410 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0x240>  // b.none
    1404:	mov	x0, x26
    1408:	bl	0 <_ZdlPv>
    140c:	ldr	x24, [sp, #192]
    1410:	add	x0, x21, #0x10
    1414:	cmp	x24, x0
    1418:	b.eq	1424 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0x254>  // b.none
    141c:	mov	x0, x24
    1420:	bl	0 <_ZdlPv>
    1424:	add	x24, x20, x19, lsl #3
    1428:	tbnz	w27, #31, 1348 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0x178>
    142c:	ldp	x19, x20, [sp, #16]
    1430:	ldp	x21, x22, [sp, #32]
    1434:	ldp	x27, x28, [sp, #80]
    1438:	str	x25, [x24]
    143c:	ldp	x23, x24, [sp, #48]
    1440:	ldp	x25, x26, [sp, #64]
    1444:	ldp	x29, x30, [sp], #224
    1448:	ret
    144c:	ldr	x0, [sp, #120]
    1450:	add	x24, x20, x0, lsl #3
    1454:	ldr	x0, [sp, #144]
    1458:	cbnz	x0, 142c <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0x25c>
    145c:	ldr	x19, [sp, #120]
    1460:	ldr	x0, [sp, #152]
    1464:	sub	x2, x0, #0x2
    1468:	add	x2, x2, x2, lsr #63
    146c:	cmp	x19, x2, asr #1
    1470:	b.ne	131c <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0x14c>  // b.any
    1474:	add	x19, x19, #0x1
    1478:	add	x0, x20, x19, lsl #4
    147c:	lsl	x19, x19, #1
    1480:	sub	x19, x19, #0x1
    1484:	ldur	x0, [x0, #-8]
    1488:	str	x0, [x24]
    148c:	add	x24, x20, x19, lsl #3
    1490:	b	131c <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0x14c>
    1494:	ldr	x24, [sp, #136]
    1498:	ldp	x19, x20, [sp, #16]
    149c:	ldp	x21, x22, [sp, #32]
    14a0:	ldp	x27, x28, [sp, #80]
    14a4:	str	x25, [x24]
    14a8:	ldp	x23, x24, [sp, #48]
    14ac:	ldp	x25, x26, [sp, #64]
    14b0:	ldp	x29, x30, [sp], #224
    14b4:	ret

00000000000014b8 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_>:
    14b8:	stp	x29, x30, [sp, #-208]!
    14bc:	mov	x29, sp
    14c0:	stp	x19, x20, [sp, #16]
    14c4:	mov	x19, x0
    14c8:	sub	x0, x1, x0
    14cc:	strb	w3, [sp, #135]
    14d0:	cmp	x0, #0x80
    14d4:	b.le	1984 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x4cc>
    14d8:	stp	x21, x22, [sp, #32]
    14dc:	stp	x23, x24, [sp, #48]
    14e0:	mov	x24, x1
    14e4:	stp	x25, x26, [sp, #64]
    14e8:	mov	x26, x2
    14ec:	cbz	x2, 1a04 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x54c>
    14f0:	add	x25, sp, #0x90
    14f4:	add	x22, sp, #0xb0
    14f8:	stp	x27, x28, [sp, #80]
    14fc:	add	x27, x25, #0x10
    1500:	add	x1, x19, #0x8
    1504:	str	x1, [sp, #136]
    1508:	ldr	x1, [x19, #8]
    150c:	asr	x20, x0, #4
    1510:	mov	x8, x22
    1514:	sub	x26, x26, #0x1
    1518:	ldr	x0, [x1]
    151c:	ldr	x21, [x19, x20, lsl #3]
    1520:	ldr	x1, [x0]
    1524:	ldr	x1, [x1, #48]
    1528:	blr	x1
    152c:	ldr	x0, [x21]
    1530:	mov	x8, x25
    1534:	ldr	x1, [x0]
    1538:	ldr	x1, [x1, #48]
    153c:	blr	x1
    1540:	ldp	x1, x4, [sp, #144]
    1544:	ldp	x3, x21, [sp, #176]
    1548:	cmp	x21, x4
    154c:	csel	x2, x21, x4, ls  // ls = plast
    1550:	cbz	x2, 1574 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0xbc>
    1554:	mov	x0, x3
    1558:	stp	x3, x1, [sp, #96]
    155c:	str	x4, [sp, #112]
    1560:	bl	0 <memcmp>
    1564:	mov	w23, w0
    1568:	ldp	x3, x1, [sp, #96]
    156c:	ldr	x4, [sp, #112]
    1570:	cbnz	w0, 1594 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0xdc>
    1574:	sub	x21, x21, x4
    1578:	mov	x0, #0x7fffffff            	// #2147483647
    157c:	mov	w23, #0x7fffffff            	// #2147483647
    1580:	cmp	x21, x0
    1584:	b.gt	1594 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0xdc>
    1588:	mov	x0, #0xffffffff80000000    	// #-2147483648
    158c:	cmp	x21, x0
    1590:	csel	w23, w21, w0, ge  // ge = tcont
    1594:	cmp	x1, x27
    1598:	b.eq	15a8 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0xf0>  // b.none
    159c:	mov	x0, x1
    15a0:	bl	0 <_ZdlPv>
    15a4:	ldr	x3, [sp, #176]
    15a8:	add	x0, x22, #0x10
    15ac:	cmp	x3, x0
    15b0:	b.eq	15bc <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x104>  // b.none
    15b4:	mov	x0, x3
    15b8:	bl	0 <_ZdlPv>
    15bc:	tbz	w23, #31, 1854 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x39c>
    15c0:	ldr	x0, [x19, x20, lsl #3]
    15c4:	mov	x8, x22
    15c8:	ldur	x21, [x24, #-8]
    15cc:	ldr	x0, [x0]
    15d0:	ldr	x1, [x0]
    15d4:	ldr	x1, [x1, #48]
    15d8:	blr	x1
    15dc:	ldr	x0, [x21]
    15e0:	mov	x8, x25
    15e4:	ldr	x1, [x0]
    15e8:	ldr	x1, [x1, #48]
    15ec:	blr	x1
    15f0:	ldp	x1, x4, [sp, #144]
    15f4:	ldp	x3, x21, [sp, #176]
    15f8:	cmp	x21, x4
    15fc:	csel	x2, x21, x4, ls  // ls = plast
    1600:	cbz	x2, 1624 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x16c>
    1604:	mov	x0, x3
    1608:	stp	x3, x1, [sp, #96]
    160c:	str	x4, [sp, #112]
    1610:	bl	0 <memcmp>
    1614:	mov	w23, w0
    1618:	ldp	x3, x1, [sp, #96]
    161c:	ldr	x4, [sp, #112]
    1620:	cbnz	w0, 1644 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x18c>
    1624:	sub	x21, x21, x4
    1628:	mov	x0, #0x7fffffff            	// #2147483647
    162c:	mov	w23, #0x7fffffff            	// #2147483647
    1630:	cmp	x21, x0
    1634:	b.gt	1644 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x18c>
    1638:	mov	x0, #0xffffffff80000000    	// #-2147483648
    163c:	cmp	x21, x0
    1640:	csel	w23, w21, w0, ge  // ge = tcont
    1644:	cmp	x1, x27
    1648:	b.eq	1658 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x1a0>  // b.none
    164c:	mov	x0, x1
    1650:	bl	0 <_ZdlPv>
    1654:	ldr	x3, [sp, #176]
    1658:	add	x0, x22, #0x10
    165c:	cmp	x3, x0
    1660:	b.eq	166c <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x1b4>  // b.none
    1664:	mov	x0, x3
    1668:	bl	0 <_ZdlPv>
    166c:	tbz	w23, #31, 1990 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x4d8>
    1670:	ldr	x1, [x19, x20, lsl #3]
    1674:	ldr	x0, [x19]
    1678:	str	x1, [x19]
    167c:	str	x0, [x19, x20, lsl #3]
    1680:	ldp	x1, x0, [x19]
    1684:	mov	x21, x24
    1688:	ldr	x20, [sp, #136]
    168c:	nop
    1690:	str	x1, [sp, #96]
    1694:	ldr	x0, [x0]
    1698:	mov	x8, x22
    169c:	mov	x23, x20
    16a0:	ldr	x2, [x0]
    16a4:	ldr	x2, [x2, #48]
    16a8:	blr	x2
    16ac:	ldr	x1, [sp, #96]
    16b0:	mov	x8, x25
    16b4:	ldr	x0, [x1]
    16b8:	ldr	x1, [x0]
    16bc:	ldr	x1, [x1, #48]
    16c0:	blr	x1
    16c4:	ldp	x1, x5, [sp, #144]
    16c8:	ldp	x4, x3, [sp, #176]
    16cc:	cmp	x3, x5
    16d0:	csel	x2, x3, x5, ls  // ls = plast
    16d4:	cbz	x2, 16f8 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x240>
    16d8:	mov	x0, x4
    16dc:	stp	x4, x1, [sp, #96]
    16e0:	stp	x3, x5, [sp, #112]
    16e4:	bl	0 <memcmp>
    16e8:	mov	w28, w0
    16ec:	ldp	x4, x1, [sp, #96]
    16f0:	ldp	x3, x5, [sp, #112]
    16f4:	cbnz	w0, 1718 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x260>
    16f8:	sub	x3, x3, x5
    16fc:	mov	x0, #0x7fffffff            	// #2147483647
    1700:	mov	w28, #0x7fffffff            	// #2147483647
    1704:	cmp	x3, x0
    1708:	b.gt	1718 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x260>
    170c:	mov	x0, #0xffffffff80000000    	// #-2147483648
    1710:	cmp	x3, x0
    1714:	csel	w28, w3, w0, ge  // ge = tcont
    1718:	cmp	x1, x27
    171c:	b.eq	172c <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x274>  // b.none
    1720:	mov	x0, x1
    1724:	bl	0 <_ZdlPv>
    1728:	ldr	x4, [sp, #176]
    172c:	add	x0, x22, #0x10
    1730:	cmp	x4, x0
    1734:	b.eq	1740 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x288>  // b.none
    1738:	mov	x0, x4
    173c:	bl	0 <_ZdlPv>
    1740:	tbz	w28, #31, 1754 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x29c>
    1744:	ldr	x0, [x20, #8]!
    1748:	ldr	x1, [x19]
    174c:	b	1690 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x1d8>
    1750:	tbz	w28, #31, 180c <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x354>
    1754:	ldr	x0, [x19]
    1758:	mov	x8, x22
    175c:	ldur	x28, [x21, #-8]
    1760:	sub	x21, x21, #0x8
    1764:	ldr	x0, [x0]
    1768:	ldr	x2, [x0]
    176c:	ldr	x2, [x2, #48]
    1770:	blr	x2
    1774:	ldr	x0, [x28]
    1778:	mov	x8, x25
    177c:	ldr	x1, [x0]
    1780:	ldr	x1, [x1, #48]
    1784:	blr	x1
    1788:	ldp	x5, x6, [sp, #144]
    178c:	ldp	x4, x3, [sp, #176]
    1790:	mov	x1, x5
    1794:	cmp	x3, x6
    1798:	csel	x2, x3, x6, ls  // ls = plast
    179c:	cbz	x2, 17c0 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x308>
    17a0:	mov	x0, x4
    17a4:	stp	x4, x3, [sp, #96]
    17a8:	stp	x6, x5, [sp, #112]
    17ac:	bl	0 <memcmp>
    17b0:	mov	w28, w0
    17b4:	ldp	x4, x3, [sp, #96]
    17b8:	ldp	x6, x5, [sp, #112]
    17bc:	cbnz	w0, 17e0 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x328>
    17c0:	sub	x3, x3, x6
    17c4:	mov	x0, #0x7fffffff            	// #2147483647
    17c8:	mov	w28, #0x7fffffff            	// #2147483647
    17cc:	cmp	x3, x0
    17d0:	b.gt	17e0 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x328>
    17d4:	mov	x0, #0xffffffff80000000    	// #-2147483648
    17d8:	cmp	x3, x0
    17dc:	csel	w28, w3, w0, ge  // ge = tcont
    17e0:	mov	x0, x5
    17e4:	cmp	x5, x27
    17e8:	b.eq	17f4 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x33c>  // b.none
    17ec:	bl	0 <_ZdlPv>
    17f0:	ldr	x4, [sp, #176]
    17f4:	add	x0, x22, #0x10
    17f8:	cmp	x4, x0
    17fc:	b.eq	1750 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x298>  // b.none
    1800:	mov	x0, x4
    1804:	bl	0 <_ZdlPv>
    1808:	tbnz	w28, #31, 1754 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x29c>
    180c:	cmp	x20, x21
    1810:	b.cs	1828 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x370>  // b.hs, b.nlast
    1814:	ldr	x1, [x21]
    1818:	ldr	x0, [x20]
    181c:	str	x1, [x20]
    1820:	str	x0, [x21]
    1824:	b	1744 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x28c>
    1828:	ldrb	w3, [sp, #135]
    182c:	mov	x0, x20
    1830:	mov	x1, x24
    1834:	mov	x2, x26
    1838:	bl	14b8 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_>
    183c:	sub	x0, x20, x19
    1840:	cmp	x0, #0x80
    1844:	b.le	19e8 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x530>
    1848:	cbz	x26, 1910 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x458>
    184c:	mov	x24, x20
    1850:	b	1508 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x50>
    1854:	ldr	x0, [x19, #8]
    1858:	mov	x8, x22
    185c:	ldur	x21, [x24, #-8]
    1860:	ldr	x0, [x0]
    1864:	ldr	x1, [x0]
    1868:	ldr	x1, [x1, #48]
    186c:	blr	x1
    1870:	ldr	x0, [x21]
    1874:	mov	x8, x25
    1878:	ldr	x1, [x0]
    187c:	ldr	x1, [x1, #48]
    1880:	blr	x1
    1884:	ldp	x1, x4, [sp, #144]
    1888:	ldp	x3, x21, [sp, #176]
    188c:	cmp	x21, x4
    1890:	csel	x2, x21, x4, ls  // ls = plast
    1894:	cbz	x2, 18b8 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x400>
    1898:	mov	x0, x3
    189c:	stp	x3, x1, [sp, #96]
    18a0:	str	x4, [sp, #112]
    18a4:	bl	0 <memcmp>
    18a8:	mov	w23, w0
    18ac:	ldp	x3, x1, [sp, #96]
    18b0:	ldr	x4, [sp, #112]
    18b4:	cbnz	w0, 18d8 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x420>
    18b8:	sub	x21, x21, x4
    18bc:	mov	x0, #0x7fffffff            	// #2147483647
    18c0:	mov	w23, #0x7fffffff            	// #2147483647
    18c4:	cmp	x21, x0
    18c8:	b.gt	18d8 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x420>
    18cc:	mov	x0, #0xffffffff80000000    	// #-2147483648
    18d0:	cmp	x21, x0
    18d4:	csel	w23, w21, w0, ge  // ge = tcont
    18d8:	cmp	x1, x27
    18dc:	b.eq	18ec <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x434>  // b.none
    18e0:	mov	x0, x1
    18e4:	bl	0 <_ZdlPv>
    18e8:	ldr	x3, [sp, #176]
    18ec:	add	x0, x22, #0x10
    18f0:	cmp	x3, x0
    18f4:	b.eq	1900 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x448>  // b.none
    18f8:	mov	x0, x3
    18fc:	bl	0 <_ZdlPv>
    1900:	tbz	w23, #31, 19bc <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x504>
    1904:	ldp	x0, x1, [x19]
    1908:	stp	x1, x0, [x19]
    190c:	b	1684 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x1cc>
    1910:	ldp	x27, x28, [sp, #80]
    1914:	asr	x20, x0, #3
    1918:	sub	x21, x20, #0x2
    191c:	mov	x0, x19
    1920:	mov	x2, x20
    1924:	asr	x21, x21, #1
    1928:	mov	x1, x21
    192c:	ldr	x3, [x19, x21, lsl #3]
    1930:	bl	11d0 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0>
    1934:	sub	x21, x21, #0x1
    1938:	mov	x2, x20
    193c:	mov	x1, x21
    1940:	mov	x0, x19
    1944:	ldr	x3, [x19, x21, lsl #3]
    1948:	bl	11d0 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0>
    194c:	cbnz	x21, 1934 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x47c>
    1950:	ldr	x3, [x23, #-8]!
    1954:	mov	x1, #0x0                   	// #0
    1958:	ldr	x0, [x19]
    195c:	sub	x20, x23, x19
    1960:	str	x0, [x23]
    1964:	mov	x0, x19
    1968:	asr	x2, x20, #3
    196c:	bl	11d0 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0>
    1970:	cmp	x20, #0x8
    1974:	b.gt	1950 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x498>
    1978:	ldp	x21, x22, [sp, #32]
    197c:	ldp	x23, x24, [sp, #48]
    1980:	ldp	x25, x26, [sp, #64]
    1984:	ldp	x19, x20, [sp, #16]
    1988:	ldp	x29, x30, [sp], #208
    198c:	ret
    1990:	ldur	x1, [x24, #-8]
    1994:	ldr	x0, [x19, #8]
    1998:	bl	d58 <_ZZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEEENKUlS3_S3_E_clES3_S3_.isra.0>
    199c:	tst	w0, #0xff
    19a0:	b.eq	1904 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x44c>  // b.none
    19a4:	ldur	x1, [x24, #-8]
    19a8:	ldr	x0, [x19]
    19ac:	str	x1, [x19]
    19b0:	stur	x0, [x24, #-8]
    19b4:	ldp	x1, x0, [x19]
    19b8:	b	1684 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x1cc>
    19bc:	ldur	x1, [x24, #-8]
    19c0:	ldr	x0, [x19, x20, lsl #3]
    19c4:	bl	d58 <_ZZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEEENKUlS3_S3_E_clES3_S3_.isra.0>
    19c8:	tst	w0, #0xff
    19cc:	b.eq	1670 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x1b8>  // b.none
    19d0:	ldur	x1, [x24, #-8]
    19d4:	ldr	x0, [x19]
    19d8:	str	x1, [x19]
    19dc:	stur	x0, [x24, #-8]
    19e0:	ldp	x1, x0, [x19]
    19e4:	b	1684 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x1cc>
    19e8:	ldp	x19, x20, [sp, #16]
    19ec:	ldp	x21, x22, [sp, #32]
    19f0:	ldp	x23, x24, [sp, #48]
    19f4:	ldp	x25, x26, [sp, #64]
    19f8:	ldp	x27, x28, [sp, #80]
    19fc:	ldp	x29, x30, [sp], #208
    1a00:	ret
    1a04:	mov	x23, x1
    1a08:	b	1914 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x45c>
    1a0c:	nop

0000000000001a10 <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev>:
    1a10:	stp	x29, x30, [sp, #-256]!
    1a14:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    1a18:	add	x1, x1, #0x0
    1a1c:	mov	x29, sp
    1a20:	stp	x19, x20, [sp, #16]
    1a24:	mov	x20, x0
    1a28:	mov	w2, #0x103                 	// #259
    1a2c:	ldr	x0, [x0, #32]
    1a30:	stp	x1, xzr, [sp, #72]
    1a34:	add	x19, sp, #0xc0
    1a38:	stp	x21, x22, [sp, #32]
    1a3c:	mov	x21, x8
    1a40:	mov	x8, x19
    1a44:	ldr	x1, [x0]
    1a48:	str	x23, [sp, #48]
    1a4c:	strh	w2, [sp, #88]
    1a50:	ldr	x1, [x1, #16]
    1a54:	blr	x1
    1a58:	ldrb	w1, [sp, #88]
    1a5c:	cbz	w1, 1aec <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0xdc>
    1a60:	cmp	w1, #0x1
    1a64:	b.eq	1c18 <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x208>  // b.none
    1a68:	ldrb	w0, [sp, #89]
    1a6c:	cmp	w0, #0x1
    1a70:	b.eq	1c30 <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x220>  // b.none
    1a74:	add	x3, sp, #0x48
    1a78:	mov	w1, #0x2                   	// #2
    1a7c:	mov	w2, #0x4                   	// #4
    1a80:	add	x22, sp, #0x60
    1a84:	mov	x0, x22
    1a88:	stp	x3, x19, [sp, #96]
    1a8c:	strb	w1, [sp, #112]
    1a90:	strb	w2, [sp, #113]
    1a94:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    1a98:	mov	w1, #0x2                   	// #2
    1a9c:	tst	w0, #0xff
    1aa0:	b.eq	1acc <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0xbc>  // b.none
    1aa4:	adrp	x2, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    1aa8:	add	x2, x2, #0x0
    1aac:	mov	w3, #0x3                   	// #3
    1ab0:	add	x0, sp, #0x78
    1ab4:	stp	x22, x2, [sp, #120]
    1ab8:	strb	w1, [sp, #136]
    1abc:	strb	w3, [sp, #137]
    1ac0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    1ac4:	tst	w0, #0xff
    1ac8:	b.ne	1b00 <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0xf0>  // b.any
    1acc:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    1ad0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    1ad4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    1ad8:	add	x3, x3, #0x0
    1adc:	add	x1, x1, #0x0
    1ae0:	add	x0, x0, #0x0
    1ae4:	mov	w2, #0xb8                  	// #184
    1ae8:	bl	0 <__assert_fail>
    1aec:	mov	w0, #0x100                 	// #256
    1af0:	stp	xzr, xzr, [sp, #96]
    1af4:	strh	w0, [sp, #112]
    1af8:	stp	xzr, xzr, [sp, #120]
    1afc:	strh	w0, [sp, #136]
    1b00:	ldr	x0, [x20, #40]
    1b04:	add	x20, sp, #0xe0
    1b08:	mov	x8, x20
    1b0c:	ldr	x1, [x0]
    1b10:	ldr	x1, [x1, #40]
    1b14:	blr	x1
    1b18:	ldrb	w22, [sp, #136]
    1b1c:	cbnz	w22, 1b84 <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x174>
    1b20:	add	x23, sp, #0xa8
    1b24:	mov	w0, #0x100                 	// #256
    1b28:	stp	xzr, xzr, [sp, #144]
    1b2c:	strh	w0, [sp, #160]
    1b30:	stp	xzr, xzr, [sp, #168]
    1b34:	strh	w0, [sp, #184]
    1b38:	mov	x0, x23
    1b3c:	mov	x8, x21
    1b40:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
    1b44:	add	x20, x20, #0x10
    1b48:	ldr	x0, [sp, #224]
    1b4c:	cmp	x0, x20
    1b50:	b.eq	1b58 <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x148>  // b.none
    1b54:	bl	0 <_ZdlPv>
    1b58:	ldr	x0, [sp, #192]
    1b5c:	add	x19, x19, #0x10
    1b60:	cmp	x0, x19
    1b64:	b.eq	1b6c <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x15c>  // b.none
    1b68:	bl	0 <_ZdlPv>
    1b6c:	mov	x0, x21
    1b70:	ldp	x19, x20, [sp, #16]
    1b74:	ldp	x21, x22, [sp, #32]
    1b78:	ldr	x23, [sp, #48]
    1b7c:	ldp	x29, x30, [sp], #256
    1b80:	ret
    1b84:	cmp	w22, #0x1
    1b88:	b.eq	1c04 <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x1f4>  // b.none
    1b8c:	ldrb	w0, [sp, #137]
    1b90:	cmp	w0, #0x1
    1b94:	b.eq	1c38 <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x228>  // b.none
    1b98:	add	x2, sp, #0x78
    1b9c:	mov	w22, #0x2                   	// #2
    1ba0:	mov	w1, #0x4                   	// #4
    1ba4:	add	x0, sp, #0x90
    1ba8:	stp	x2, x20, [sp, #144]
    1bac:	strb	w22, [sp, #160]
    1bb0:	strb	w1, [sp, #161]
    1bb4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    1bb8:	tst	w0, #0xff
    1bbc:	b.eq	1acc <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0xbc>  // b.none
    1bc0:	ldrb	w0, [sp, #161]
    1bc4:	cmp	w0, #0x1
    1bc8:	b.eq	1c40 <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x230>  // b.none
    1bcc:	add	x3, sp, #0x90
    1bd0:	mov	w22, #0x2                   	// #2
    1bd4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    1bd8:	add	x1, x1, #0x0
    1bdc:	mov	w2, #0x3                   	// #3
    1be0:	add	x23, sp, #0xa8
    1be4:	mov	x0, x23
    1be8:	stp	x3, x1, [sp, #168]
    1bec:	strb	w22, [sp, #184]
    1bf0:	strb	w2, [sp, #185]
    1bf4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    1bf8:	tst	w0, #0xff
    1bfc:	b.ne	1b38 <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x128>  // b.any
    1c00:	b	1acc <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0xbc>
    1c04:	mov	w0, #0x104                 	// #260
    1c08:	mov	w22, #0x4                   	// #4
    1c0c:	stp	x20, xzr, [sp, #144]
    1c10:	strh	w0, [sp, #160]
    1c14:	b	1bc0 <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x1b0>
    1c18:	mov	w0, #0x104                 	// #260
    1c1c:	mov	x22, x19
    1c20:	mov	w1, #0x4                   	// #4
    1c24:	stp	x19, xzr, [sp, #96]
    1c28:	strh	w0, [sp, #112]
    1c2c:	b	1aa4 <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x94>
    1c30:	ldr	x3, [sp, #72]
    1c34:	b	1a7c <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x6c>
    1c38:	ldr	x2, [sp, #120]
    1c3c:	b	1ba0 <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x190>
    1c40:	ldr	x3, [sp, #144]
    1c44:	b	1bd4 <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x1c4>

0000000000001c48 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev>:
    1c48:	sub	sp, sp, #0x360
    1c4c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    1c50:	add	x5, sp, #0xc8
    1c54:	add	x1, x1, #0x0
    1c58:	stp	x29, x30, [sp]
    1c5c:	mov	x29, sp
    1c60:	stp	x19, x20, [sp, #16]
    1c64:	mov	x20, x0
    1c68:	mov	x0, x5
    1c6c:	stp	x21, x22, [sp, #32]
    1c70:	add	x22, sp, #0x2c0
    1c74:	add	x21, sp, #0xf8
    1c78:	stp	x23, x24, [sp, #48]
    1c7c:	mov	x24, x8
    1c80:	add	x23, sp, #0x2e0
    1c84:	stp	x25, x26, [sp, #64]
    1c88:	add	x26, sp, #0xe0
    1c8c:	add	x19, sp, #0x158
    1c90:	stp	x27, x28, [sp, #80]
    1c94:	add	x28, sp, #0x188
    1c98:	add	x25, sp, #0x300
    1c9c:	str	x5, [sp, #144]
    1ca0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    1ca4:	ldr	x0, [x20, #32]
    1ca8:	add	x10, sp, #0x1d0
    1cac:	add	x11, sp, #0x1a0
    1cb0:	add	x2, sp, #0x170
    1cb4:	add	x12, sp, #0x140
    1cb8:	add	x4, sp, #0x128
    1cbc:	ldr	x1, [x0]
    1cc0:	add	x3, sp, #0x110
    1cc4:	stp	x4, x2, [sp, #112]
    1cc8:	mov	x8, x22
    1ccc:	add	x27, sp, #0x1b8
    1cd0:	ldr	x1, [x1, #40]
    1cd4:	stp	x12, x3, [sp, #128]
    1cd8:	stp	x10, x11, [sp, #176]
    1cdc:	blr	x1
    1ce0:	str	x26, [sp, #96]
    1ce4:	add	x7, sp, #0x1e8
    1ce8:	mov	x0, x26
    1cec:	mov	x1, x22
    1cf0:	str	x7, [sp, #168]
    1cf4:	add	x26, sp, #0x320
    1cf8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    1cfc:	str	x21, [sp, #104]
    1d00:	ldr	x5, [sp, #144]
    1d04:	mov	x8, x21
    1d08:	ldr	x0, [sp, #96]
    1d0c:	adrp	x21, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    1d10:	add	x21, x21, #0x0
    1d14:	mov	x1, x0
    1d18:	mov	x0, x5
    1d1c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    1d20:	ldr	x3, [sp, #136]
    1d24:	mov	x1, x21
    1d28:	str	x3, [sp, #96]
    1d2c:	mov	x0, x3
    1d30:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    1d34:	ldp	x0, x8, [sp, #96]
    1d38:	add	x9, sp, #0x200
    1d3c:	ldr	x4, [sp, #112]
    1d40:	str	x9, [sp, #160]
    1d44:	mov	x1, x0
    1d48:	mov	x0, x8
    1d4c:	mov	x8, x4
    1d50:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    1d54:	ldr	x0, [x20, #40]
    1d58:	add	x3, sp, #0x248
    1d5c:	add	x6, sp, #0x230
    1d60:	add	x5, sp, #0x218
    1d64:	stp	x3, x6, [sp, #136]
    1d68:	mov	x8, x23
    1d6c:	ldr	x1, [x0]
    1d70:	str	x5, [sp, #152]
    1d74:	ldr	x1, [x1, #40]
    1d78:	blr	x1
    1d7c:	ldr	x12, [sp, #128]
    1d80:	mov	x1, x23
    1d84:	str	x12, [sp, #96]
    1d88:	mov	x0, x12
    1d8c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    1d90:	str	x19, [sp, #104]
    1d94:	ldr	x4, [sp, #112]
    1d98:	mov	x8, x19
    1d9c:	ldr	x0, [sp, #96]
    1da0:	add	x19, sp, #0x340
    1da4:	mov	x1, x0
    1da8:	mov	x0, x4
    1dac:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    1db0:	ldr	x2, [sp, #120]
    1db4:	mov	x1, x21
    1db8:	str	x2, [sp, #96]
    1dbc:	mov	x0, x2
    1dc0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    1dc4:	str	x28, [sp, #112]
    1dc8:	ldp	x0, x8, [sp, #96]
    1dcc:	mov	x1, x0
    1dd0:	mov	x0, x8
    1dd4:	mov	x8, x28
    1dd8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    1ddc:	ldr	x0, [x20, #48]
    1de0:	add	x2, sp, #0x290
    1de4:	add	x4, sp, #0x260
    1de8:	stp	x2, x4, [sp, #120]
    1dec:	mov	x8, x25
    1df0:	ldr	x1, [x0]
    1df4:	add	x28, sp, #0x278
    1df8:	ldr	x1, [x1, #48]
    1dfc:	blr	x1
    1e00:	ldr	x11, [sp, #184]
    1e04:	mov	x1, x25
    1e08:	str	x11, [sp, #96]
    1e0c:	mov	x0, x11
    1e10:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    1e14:	str	x27, [sp, #104]
    1e18:	ldr	x12, [sp, #112]
    1e1c:	mov	x8, x27
    1e20:	ldr	x0, [sp, #96]
    1e24:	add	x27, sp, #0x2a8
    1e28:	mov	x1, x0
    1e2c:	mov	x0, x12
    1e30:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    1e34:	ldr	x10, [sp, #176]
    1e38:	mov	x1, x21
    1e3c:	str	x10, [sp, #96]
    1e40:	mov	x0, x10
    1e44:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    1e48:	ldp	x0, x8, [sp, #96]
    1e4c:	ldr	x7, [sp, #168]
    1e50:	str	x7, [sp, #112]
    1e54:	mov	x1, x0
    1e58:	mov	x0, x8
    1e5c:	mov	x8, x7
    1e60:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    1e64:	ldr	x0, [x20, #56]
    1e68:	mov	x8, x26
    1e6c:	ldr	x1, [x0]
    1e70:	ldr	x1, [x1, #48]
    1e74:	blr	x1
    1e78:	ldr	x9, [sp, #160]
    1e7c:	mov	x1, x26
    1e80:	str	x9, [sp, #104]
    1e84:	mov	x0, x9
    1e88:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    1e8c:	ldp	x0, x7, [sp, #104]
    1e90:	ldr	x5, [sp, #152]
    1e94:	str	x5, [sp, #96]
    1e98:	mov	x8, x5
    1e9c:	mov	x1, x0
    1ea0:	mov	x0, x7
    1ea4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    1ea8:	ldr	x6, [sp, #144]
    1eac:	mov	x1, x21
    1eb0:	mov	x0, x6
    1eb4:	mov	x21, x6
    1eb8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    1ebc:	ldr	x3, [sp, #136]
    1ec0:	mov	x1, x21
    1ec4:	ldr	x8, [sp, #96]
    1ec8:	mov	x21, x3
    1ecc:	mov	x0, x8
    1ed0:	mov	x8, x3
    1ed4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    1ed8:	ldr	x0, [x20, #64]
    1edc:	mov	x8, x19
    1ee0:	ldr	x1, [x0]
    1ee4:	ldr	x1, [x1, #40]
    1ee8:	blr	x1
    1eec:	ldr	x4, [sp, #128]
    1ef0:	mov	x1, x19
    1ef4:	add	x19, x19, #0x10
    1ef8:	mov	x20, x4
    1efc:	mov	x0, x4
    1f00:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    1f04:	mov	x8, x28
    1f08:	mov	x0, x21
    1f0c:	mov	x1, x20
    1f10:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    1f14:	ldr	x2, [sp, #120]
    1f18:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    1f1c:	add	x1, x1, #0x0
    1f20:	mov	x21, x2
    1f24:	mov	x0, x2
    1f28:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    1f2c:	mov	x1, x21
    1f30:	mov	x0, x28
    1f34:	mov	x8, x27
    1f38:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    1f3c:	mov	x0, x27
    1f40:	mov	x8, x24
    1f44:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
    1f48:	ldr	x0, [sp, #832]
    1f4c:	cmp	x0, x19
    1f50:	b.eq	1f58 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x310>  // b.none
    1f54:	bl	0 <_ZdlPv>
    1f58:	ldr	x0, [sp, #800]
    1f5c:	add	x26, x26, #0x10
    1f60:	cmp	x0, x26
    1f64:	b.eq	1f6c <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x324>  // b.none
    1f68:	bl	0 <_ZdlPv>
    1f6c:	ldr	x0, [sp, #768]
    1f70:	add	x25, x25, #0x10
    1f74:	cmp	x0, x25
    1f78:	b.eq	1f80 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x338>  // b.none
    1f7c:	bl	0 <_ZdlPv>
    1f80:	ldr	x0, [sp, #736]
    1f84:	add	x23, x23, #0x10
    1f88:	cmp	x0, x23
    1f8c:	b.eq	1f94 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x34c>  // b.none
    1f90:	bl	0 <_ZdlPv>
    1f94:	ldr	x0, [sp, #704]
    1f98:	add	x22, x22, #0x10
    1f9c:	cmp	x0, x22
    1fa0:	b.eq	1fa8 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x360>  // b.none
    1fa4:	bl	0 <_ZdlPv>
    1fa8:	mov	x0, x24
    1fac:	ldp	x29, x30, [sp]
    1fb0:	ldp	x19, x20, [sp, #16]
    1fb4:	ldp	x21, x22, [sp, #32]
    1fb8:	ldp	x23, x24, [sp, #48]
    1fbc:	ldp	x25, x26, [sp, #64]
    1fc0:	ldp	x27, x28, [sp, #80]
    1fc4:	add	sp, sp, #0x360
    1fc8:	ret
    1fcc:	nop

0000000000001fd0 <_ZNK4llvm5RecTy4dumpEv>:
    1fd0:	stp	x29, x30, [sp, #-80]!
    1fd4:	mov	x29, sp
    1fd8:	stp	x19, x20, [sp, #16]
    1fdc:	mov	x20, x0
    1fe0:	add	x19, sp, #0x30
    1fe4:	str	x21, [sp, #32]
    1fe8:	bl	0 <_ZN4llvm4errsEv>
    1fec:	ldr	x1, [x20]
    1ff0:	mov	x8, x19
    1ff4:	mov	x21, x0
    1ff8:	mov	x0, x20
    1ffc:	add	x19, x19, #0x10
    2000:	ldr	x1, [x1, #16]
    2004:	blr	x1
    2008:	ldp	x1, x2, [sp, #48]
    200c:	mov	x0, x21
    2010:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2014:	ldr	x0, [sp, #48]
    2018:	cmp	x0, x19
    201c:	b.eq	2024 <_ZNK4llvm5RecTy4dumpEv+0x54>  // b.none
    2020:	bl	0 <_ZdlPv>
    2024:	ldp	x19, x20, [sp, #16]
    2028:	ldr	x21, [sp, #32]
    202c:	ldp	x29, x30, [sp], #80
    2030:	ret
    2034:	nop

0000000000002038 <_ZNK4llvm11RecordRecTy7ProfileERNS_16FoldingSetNodeIDE>:
    2038:	mov	x2, x0
    203c:	mov	x0, x1
    2040:	add	x1, x2, #0x28
    2044:	ldr	w2, [x2, #32]
    2048:	b	460 <_ZL18ProfileRecordRecTyRN4llvm16FoldingSetNodeIDENS_8ArrayRefIPNS_6RecordEEE>
    204c:	nop

0000000000002050 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE>:
    2050:	ldr	w2, [x0, #32]
    2054:	add	x3, x0, #0x28
    2058:	lsl	x2, x2, #3
    205c:	add	x7, x3, x2
    2060:	cmp	xzr, x2, asr #5
    2064:	asr	x4, x2, #3
    2068:	asr	x2, x2, #5
    206c:	b.eq	21b0 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x160>  // b.none
    2070:	add	x2, x0, x2, lsl #5
    2074:	mov	w5, #0x18                  	// #24
    2078:	add	x2, x2, #0x28
    207c:	ldr	x4, [x3]
    2080:	cmp	x1, x4
    2084:	b.eq	20b8 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x68>  // b.none
    2088:	ldr	x0, [x4, #88]
    208c:	ldr	w4, [x4, #96]
    2090:	umaddl	x4, w4, w5, x0
    2094:	cmp	x0, x4
    2098:	b.ne	20a8 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x58>  // b.any
    209c:	b	20c4 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x74>
    20a0:	cmp	x4, x0
    20a4:	b.eq	20c4 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x74>  // b.none
    20a8:	ldr	x6, [x0]
    20ac:	add	x0, x0, #0x18
    20b0:	cmp	x1, x6
    20b4:	b.ne	20a0 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x50>  // b.any
    20b8:	cmp	x7, x3
    20bc:	cset	w0, ne  // ne = any
    20c0:	ret
    20c4:	ldr	x4, [x3, #8]
    20c8:	add	x8, x3, #0x8
    20cc:	cmp	x1, x4
    20d0:	b.eq	2104 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0xb4>  // b.none
    20d4:	ldr	w6, [x4, #96]
    20d8:	ldr	x0, [x4, #88]
    20dc:	umaddl	x6, w6, w5, x0
    20e0:	cmp	x0, x6
    20e4:	b.ne	20f4 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0xa4>  // b.any
    20e8:	b	2110 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0xc0>
    20ec:	cmp	x6, x0
    20f0:	b.eq	2110 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0xc0>  // b.none
    20f4:	ldr	x4, [x0]
    20f8:	add	x0, x0, #0x18
    20fc:	cmp	x1, x4
    2100:	b.ne	20ec <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x9c>  // b.any
    2104:	cmp	x7, x8
    2108:	cset	w0, ne  // ne = any
    210c:	ret
    2110:	ldr	x4, [x3, #16]
    2114:	add	x8, x3, #0x10
    2118:	cmp	x1, x4
    211c:	b.eq	2104 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0xb4>  // b.none
    2120:	ldr	w6, [x4, #96]
    2124:	ldr	x0, [x4, #88]
    2128:	umaddl	x6, w6, w5, x0
    212c:	cmp	x0, x6
    2130:	b.ne	2140 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0xf0>  // b.any
    2134:	b	2154 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x104>
    2138:	cmp	x6, x0
    213c:	b.eq	2154 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x104>  // b.none
    2140:	ldr	x4, [x0]
    2144:	add	x0, x0, #0x18
    2148:	cmp	x1, x4
    214c:	b.ne	2138 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0xe8>  // b.any
    2150:	b	2104 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0xb4>
    2154:	ldr	x4, [x3, #24]
    2158:	add	x8, x3, #0x18
    215c:	cmp	x1, x4
    2160:	b.eq	2104 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0xb4>  // b.none
    2164:	ldr	w6, [x4, #96]
    2168:	ldr	x0, [x4, #88]
    216c:	umaddl	x6, w6, w5, x0
    2170:	cmp	x0, x6
    2174:	b.ne	2184 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x134>  // b.any
    2178:	b	2198 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x148>
    217c:	cmp	x6, x0
    2180:	b.eq	2198 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x148>  // b.none
    2184:	ldr	x4, [x0]
    2188:	add	x0, x0, #0x18
    218c:	cmp	x1, x4
    2190:	b.ne	217c <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x12c>  // b.any
    2194:	b	2104 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0xb4>
    2198:	add	x3, x3, #0x20
    219c:	cmp	x3, x2
    21a0:	b.ne	207c <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x2c>  // b.any
    21a4:	sub	x4, x7, x3
    21a8:	asr	x4, x4, #3
    21ac:	nop
    21b0:	cmp	x4, #0x2
    21b4:	b.eq	221c <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1cc>  // b.none
    21b8:	cmp	x4, #0x3
    21bc:	b.eq	2260 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x210>  // b.none
    21c0:	cmp	x4, #0x1
    21c4:	b.eq	21d4 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x184>  // b.none
    21c8:	mov	w0, #0x0                   	// #0
    21cc:	ret
    21d0:	add	x3, x3, #0x8
    21d4:	ldr	x2, [x3]
    21d8:	cmp	x1, x2
    21dc:	b.eq	20b8 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x68>  // b.none
    21e0:	ldr	w4, [x2, #96]
    21e4:	mov	w5, #0x18                  	// #24
    21e8:	ldr	x0, [x2, #88]
    21ec:	umaddl	x4, w4, w5, x0
    21f0:	cmp	x0, x4
    21f4:	b.ne	2204 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1b4>  // b.any
    21f8:	b	21c8 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x178>
    21fc:	cmp	x4, x0
    2200:	b.eq	21c8 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x178>  // b.none
    2204:	ldr	x2, [x0]
    2208:	add	x0, x0, #0x18
    220c:	cmp	x1, x2
    2210:	b.ne	21fc <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1ac>  // b.any
    2214:	b	20b8 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x68>
    2218:	add	x3, x3, #0x8
    221c:	ldr	x2, [x3]
    2220:	cmp	x1, x2
    2224:	b.eq	20b8 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x68>  // b.none
    2228:	ldr	w4, [x2, #96]
    222c:	mov	w5, #0x18                  	// #24
    2230:	ldr	x0, [x2, #88]
    2234:	umaddl	x4, w4, w5, x0
    2238:	cmp	x0, x4
    223c:	b.ne	224c <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1fc>  // b.any
    2240:	b	21d0 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x180>
    2244:	cmp	x4, x0
    2248:	b.eq	21d0 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x180>  // b.none
    224c:	ldr	x2, [x0]
    2250:	add	x0, x0, #0x18
    2254:	cmp	x1, x2
    2258:	b.ne	2244 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1f4>  // b.any
    225c:	b	20b8 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x68>
    2260:	ldr	x2, [x3]
    2264:	cmp	x1, x2
    2268:	b.eq	20b8 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x68>  // b.none
    226c:	ldr	w4, [x2, #96]
    2270:	mov	w5, #0x18                  	// #24
    2274:	ldr	x0, [x2, #88]
    2278:	umaddl	x4, w4, w5, x0
    227c:	cmp	x0, x4
    2280:	b.ne	2290 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x240>  // b.any
    2284:	b	2218 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1c8>
    2288:	cmp	x4, x0
    228c:	b.eq	2218 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1c8>  // b.none
    2290:	ldr	x2, [x0]
    2294:	add	x0, x0, #0x18
    2298:	cmp	x1, x2
    229c:	b.ne	2288 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x238>  // b.any
    22a0:	b	20b8 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x68>
    22a4:	nop

00000000000022a8 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE>:
    22a8:	cmp	x0, x1
    22ac:	b.eq	2384 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0xdc>  // b.none
    22b0:	stp	x29, x30, [sp, #-48]!
    22b4:	mov	x29, sp
    22b8:	stp	x19, x20, [sp, #16]
    22bc:	cbz	x1, 2440 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x198>
    22c0:	ldr	w2, [x1, #8]
    22c4:	mov	x20, x0
    22c8:	mov	w0, #0x0                   	// #0
    22cc:	cmp	w2, #0x7
    22d0:	b.eq	22e0 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x38>  // b.none
    22d4:	ldp	x19, x20, [sp, #16]
    22d8:	ldp	x29, x30, [sp], #48
    22dc:	ret
    22e0:	ldr	w0, [x1, #32]
    22e4:	add	x19, x1, #0x28
    22e8:	stp	x21, x22, [sp, #32]
    22ec:	lsl	x0, x0, #3
    22f0:	add	x22, x19, x0
    22f4:	cmp	xzr, x0, asr #5
    22f8:	asr	x2, x0, #3
    22fc:	asr	x0, x0, #5
    2300:	b.eq	2394 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0xec>  // b.none
    2304:	add	x0, x1, x0, lsl #5
    2308:	add	x21, x0, #0x28
    230c:	b	2358 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0xb0>
    2310:	ldr	x1, [x19, #8]
    2314:	mov	x0, x20
    2318:	bl	2050 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE>
    231c:	tst	w0, #0xff
    2320:	b.eq	23b8 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x110>  // b.none
    2324:	ldr	x1, [x19, #16]
    2328:	mov	x0, x20
    232c:	bl	2050 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE>
    2330:	tst	w0, #0xff
    2334:	b.eq	23cc <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x124>  // b.none
    2338:	ldr	x1, [x19, #24]
    233c:	mov	x0, x20
    2340:	bl	2050 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE>
    2344:	tst	w0, #0xff
    2348:	b.eq	23e0 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x138>  // b.none
    234c:	add	x19, x19, #0x20
    2350:	cmp	x21, x19
    2354:	b.eq	238c <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0xe4>  // b.none
    2358:	ldr	x1, [x19]
    235c:	mov	x0, x20
    2360:	bl	2050 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE>
    2364:	tst	w0, #0xff
    2368:	b.ne	2310 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x68>  // b.any
    236c:	cmp	x22, x19
    2370:	cset	w0, eq  // eq = none
    2374:	ldp	x19, x20, [sp, #16]
    2378:	ldp	x21, x22, [sp, #32]
    237c:	ldp	x29, x30, [sp], #48
    2380:	ret
    2384:	mov	w0, #0x1                   	// #1
    2388:	ret
    238c:	sub	x2, x22, x19
    2390:	asr	x2, x2, #3
    2394:	cmp	x2, #0x2
    2398:	b.eq	240c <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x164>  // b.none
    239c:	cmp	x2, #0x3
    23a0:	b.eq	23f4 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x14c>  // b.none
    23a4:	cmp	x2, #0x1
    23a8:	b.eq	2424 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x17c>  // b.none
    23ac:	mov	w0, #0x1                   	// #1
    23b0:	ldp	x21, x22, [sp, #32]
    23b4:	b	22d4 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x2c>
    23b8:	add	x19, x19, #0x8
    23bc:	cmp	x22, x19
    23c0:	cset	w0, eq  // eq = none
    23c4:	ldp	x21, x22, [sp, #32]
    23c8:	b	22d4 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x2c>
    23cc:	add	x19, x19, #0x10
    23d0:	cmp	x22, x19
    23d4:	cset	w0, eq  // eq = none
    23d8:	ldp	x21, x22, [sp, #32]
    23dc:	b	22d4 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x2c>
    23e0:	add	x19, x19, #0x18
    23e4:	cmp	x22, x19
    23e8:	cset	w0, eq  // eq = none
    23ec:	ldp	x21, x22, [sp, #32]
    23f0:	b	22d4 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x2c>
    23f4:	ldr	x1, [x19]
    23f8:	mov	x0, x20
    23fc:	bl	2050 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE>
    2400:	tst	w0, #0xff
    2404:	b.eq	236c <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0xc4>  // b.none
    2408:	add	x19, x19, #0x8
    240c:	ldr	x1, [x19]
    2410:	mov	x0, x20
    2414:	bl	2050 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE>
    2418:	tst	w0, #0xff
    241c:	b.eq	236c <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0xc4>  // b.none
    2420:	add	x19, x19, #0x8
    2424:	ldr	x1, [x19]
    2428:	mov	x0, x20
    242c:	bl	2050 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE>
    2430:	ands	w0, w0, #0xff
    2434:	b.eq	236c <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0xc4>  // b.none
    2438:	ldp	x21, x22, [sp, #32]
    243c:	b	22d4 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x2c>
    2440:	stp	x21, x22, [sp, #32]
    2444:	bl	8e8 <_ZN4llvm13isa_impl_wrapINS_11RecordRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>

0000000000002448 <_ZNK4llvm11RecordRecTy7typeIsAEPKNS_5RecTyE>:
    2448:	b	22a8 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE>
    244c:	nop

0000000000002450 <_ZNK4llvm4Init4dumpEv>:
    2450:	stp	x29, x30, [sp, #-80]!
    2454:	mov	x29, sp
    2458:	stp	x19, x20, [sp, #16]
    245c:	mov	x20, x0
    2460:	add	x19, sp, #0x30
    2464:	str	x21, [sp, #32]
    2468:	bl	0 <_ZN4llvm4errsEv>
    246c:	ldr	x1, [x20]
    2470:	mov	x8, x19
    2474:	mov	x21, x0
    2478:	mov	x0, x20
    247c:	add	x19, x19, #0x10
    2480:	ldr	x1, [x1, #40]
    2484:	blr	x1
    2488:	ldp	x1, x2, [sp, #48]
    248c:	mov	x0, x21
    2490:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2494:	ldr	x0, [sp, #48]
    2498:	cmp	x0, x19
    249c:	b.eq	24a4 <_ZNK4llvm4Init4dumpEv+0x54>  // b.none
    24a0:	bl	0 <_ZdlPv>
    24a4:	ldp	x19, x20, [sp, #16]
    24a8:	ldr	x21, [sp, #32]
    24ac:	ldp	x29, x30, [sp], #80
    24b0:	ret
    24b4:	nop

00000000000024b8 <_ZN4llvm9UnsetInit3getEv>:
    24b8:	stp	x29, x30, [sp, #-48]!
    24bc:	mov	x29, sp
    24c0:	stp	x19, x20, [sp, #16]
    24c4:	adrp	x19, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    24c8:	add	x20, x19, #0x0
    24cc:	ldarb	w0, [x20]
    24d0:	tbz	w0, #0, 24e8 <_ZN4llvm9UnsetInit3getEv+0x30>
    24d4:	add	x0, x19, #0x0
    24d8:	add	x0, x0, #0x8
    24dc:	ldp	x19, x20, [sp, #16]
    24e0:	ldp	x29, x30, [sp], #48
    24e4:	ret
    24e8:	mov	x0, x20
    24ec:	bl	0 <__cxa_guard_acquire>
    24f0:	cbz	w0, 24d4 <_ZN4llvm9UnsetInit3getEv+0x1c>
    24f4:	adrp	x2, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    24f8:	mov	w1, #0x18                  	// #24
    24fc:	mov	x0, x20
    2500:	strh	w1, [x20, #16]
    2504:	ldr	x2, [x2]
    2508:	str	x21, [sp, #32]
    250c:	add	x21, x20, #0x8
    2510:	add	x2, x2, #0x10
    2514:	str	x2, [x20, #8]
    2518:	bl	0 <__cxa_guard_release>
    251c:	mov	x1, x21
    2520:	adrp	x2, 0 <__dso_handle>
    2524:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    2528:	add	x2, x2, #0x0
    252c:	add	x0, x0, #0x0
    2530:	bl	0 <__cxa_atexit>
    2534:	add	x0, x19, #0x0
    2538:	add	x0, x0, #0x8
    253c:	ldp	x19, x20, [sp, #16]
    2540:	ldr	x21, [sp, #32]
    2544:	ldp	x29, x30, [sp], #48
    2548:	ret
    254c:	nop

0000000000002550 <_ZN4llvm7BitInit3getEb>:
    2550:	stp	x29, x30, [sp, #-64]!
    2554:	mov	x29, sp
    2558:	stp	x19, x20, [sp, #16]
    255c:	adrp	x19, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    2560:	stp	x21, x22, [sp, #32]
    2564:	add	x21, x19, #0x0
    2568:	and	w22, w0, #0xff
    256c:	add	x20, x21, #0x58
    2570:	ldarb	w0, [x20]
    2574:	tbz	w0, #0, 25ac <_ZN4llvm7BitInit3getEb+0x5c>
    2578:	add	x21, x19, #0x0
    257c:	add	x20, x21, #0x60
    2580:	ldarb	w0, [x20]
    2584:	tbz	w0, #0, 2620 <_ZN4llvm7BitInit3getEb+0xd0>
    2588:	add	x19, x19, #0x0
    258c:	cmp	w22, #0x0
    2590:	add	x0, x19, #0x38
    2594:	add	x19, x19, #0x18
    2598:	csel	x0, x19, x0, ne  // ne = any
    259c:	ldp	x19, x20, [sp, #16]
    25a0:	ldp	x21, x22, [sp, #32]
    25a4:	ldp	x29, x30, [sp], #64
    25a8:	ret
    25ac:	mov	x0, x20
    25b0:	bl	0 <__cxa_guard_acquire>
    25b4:	cbz	w0, 2578 <_ZN4llvm7BitInit3getEb+0x28>
    25b8:	adrp	x2, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    25bc:	adrp	x1, 410 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE+0x80>
    25c0:	mov	w4, #0x2                   	// #2
    25c4:	mov	w3, #0x1                   	// #1
    25c8:	ldr	x2, [x2]
    25cc:	mov	x0, x20
    25d0:	ldr	x1, [x1]
    25d4:	add	x2, x2, #0x10
    25d8:	str	x2, [x21, #24]
    25dc:	strh	w4, [x21, #32]
    25e0:	str	x1, [x21, #40]
    25e4:	strb	w3, [x21, #48]
    25e8:	str	x23, [sp, #48]
    25ec:	bl	0 <__cxa_guard_release>
    25f0:	add	x23, x21, #0x18
    25f4:	add	x21, x19, #0x0
    25f8:	mov	x1, x23
    25fc:	add	x20, x21, #0x60
    2600:	adrp	x2, 0 <__dso_handle>
    2604:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    2608:	add	x2, x2, #0x0
    260c:	add	x0, x0, #0x0
    2610:	bl	0 <__cxa_atexit>
    2614:	ldr	x23, [sp, #48]
    2618:	ldarb	w0, [x20]
    261c:	tbnz	w0, #0, 2588 <_ZN4llvm7BitInit3getEb+0x38>
    2620:	mov	x0, x20
    2624:	bl	0 <__cxa_guard_acquire>
    2628:	cbz	w0, 2588 <_ZN4llvm7BitInit3getEb+0x38>
    262c:	adrp	x2, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    2630:	adrp	x1, 410 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE+0x80>
    2634:	mov	w3, #0x2                   	// #2
    2638:	mov	x0, x20
    263c:	ldr	x2, [x2]
    2640:	str	x23, [sp, #48]
    2644:	ldr	x1, [x1]
    2648:	add	x2, x2, #0x10
    264c:	add	x23, x21, #0x38
    2650:	str	x2, [x21, #56]
    2654:	strh	w3, [x21, #64]
    2658:	str	x1, [x21, #72]
    265c:	strb	wzr, [x21, #80]
    2660:	bl	0 <__cxa_guard_release>
    2664:	mov	x1, x23
    2668:	adrp	x2, 0 <__dso_handle>
    266c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    2670:	add	x2, x2, #0x0
    2674:	add	x0, x0, #0x0
    2678:	bl	0 <__cxa_atexit>
    267c:	ldr	x23, [sp, #48]
    2680:	b	2588 <_ZN4llvm7BitInit3getEb+0x38>
    2684:	nop

0000000000002688 <_ZNK4llvm8BitsInit7ProfileERNS_16FoldingSetNodeIDE>:
    2688:	mov	x2, x0
    268c:	mov	x0, x1
    2690:	add	x1, x2, #0x28
    2694:	ldr	w2, [x2, #32]
    2698:	b	268 <_ZL15ProfileBitsInitRN4llvm16FoldingSetNodeIDENS_8ArrayRefIPNS_4InitEEE>
    269c:	nop

00000000000026a0 <_ZNK4llvm8ListInit7ProfileERNS_16FoldingSetNodeIDE>:
    26a0:	mov	x4, x0
    26a4:	stp	x29, x30, [sp, #-16]!
    26a8:	mov	x0, x1
    26ac:	mov	x29, sp
    26b0:	ldr	x1, [x4, #16]
    26b4:	cbz	x1, 26d8 <_ZNK4llvm8ListInit7ProfileERNS_16FoldingSetNodeIDE+0x38>
    26b8:	ldr	w2, [x1, #8]
    26bc:	cmp	w2, #0x5
    26c0:	b.ne	26dc <_ZNK4llvm8ListInit7ProfileERNS_16FoldingSetNodeIDE+0x3c>  // b.any
    26c4:	ldp	x29, x30, [sp], #16
    26c8:	ldr	w2, [x4, #32]
    26cc:	ldr	x3, [x1, #24]
    26d0:	add	x1, x4, #0x28
    26d4:	b	2c0 <_ZL15ProfileListInitRN4llvm16FoldingSetNodeIDENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    26d8:	bl	7a0 <_ZN4llvm13isa_impl_wrapINS_9ListRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>
    26dc:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    26e0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    26e4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    26e8:	add	x3, x3, #0x0
    26ec:	add	x1, x1, #0x0
    26f0:	add	x0, x0, #0x0
    26f4:	mov	w2, #0x108                 	// #264
    26f8:	bl	0 <__assert_fail>
    26fc:	nop

0000000000002700 <_ZNK4llvm8ListInit18getElementAsRecordEj>:
    2700:	stp	x29, x30, [sp, #-64]!
    2704:	mov	x29, sp
    2708:	ldr	w2, [x0, #32]
    270c:	cmp	w2, w1
    2710:	b.ls	2758 <_ZNK4llvm8ListInit18getElementAsRecordEj+0x58>  // b.plast
    2714:	add	x1, x0, w1, uxtw #3
    2718:	ldr	x0, [x1, #40]
    271c:	cbz	x0, 277c <_ZNK4llvm8ListInit18getElementAsRecordEj+0x7c>
    2720:	ldrb	w1, [x0, #8]
    2724:	cmp	w1, #0x6
    2728:	b.eq	274c <_ZNK4llvm8ListInit18getElementAsRecordEj+0x4c>  // b.none
    272c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    2730:	add	x1, x1, #0x0
    2734:	str	x19, [sp, #16]
    2738:	add	x19, sp, #0x28
    273c:	mov	x0, x19
    2740:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    2744:	mov	x0, x19
    2748:	bl	0 <_ZN4llvm15PrintFatalErrorERKNS_5TwineE>
    274c:	ldr	x0, [x0, #24]
    2750:	ldp	x29, x30, [sp], #64
    2754:	ret
    2758:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    275c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    2760:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    2764:	add	x3, x3, #0x0
    2768:	add	x1, x1, #0x0
    276c:	add	x0, x0, #0x0
    2770:	mov	w2, #0x27e                 	// #638
    2774:	str	x19, [sp, #16]
    2778:	bl	0 <__assert_fail>
    277c:	str	x19, [sp, #16]
    2780:	bl	938 <_ZN4llvm3isaINS_7DefInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    2784:	nop

0000000000002788 <_ZNK4llvm8UnOpInit7ProfileERNS_16FoldingSetNodeIDE>:
    2788:	stp	x29, x30, [sp, #-48]!
    278c:	mov	x2, x0
    2790:	mov	x0, x1
    2794:	mov	x29, sp
    2798:	stp	x19, x20, [sp, #16]
    279c:	mov	x19, x1
    27a0:	ldr	x20, [x2, #16]
    27a4:	str	x21, [sp, #32]
    27a8:	ldr	x21, [x2, #32]
    27ac:	ldrb	w1, [x2, #9]
    27b0:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEj>
    27b4:	mov	x1, x21
    27b8:	mov	x0, x19
    27bc:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    27c0:	mov	x1, x20
    27c4:	mov	x0, x19
    27c8:	ldp	x19, x20, [sp, #16]
    27cc:	ldr	x21, [sp, #32]
    27d0:	ldp	x29, x30, [sp], #48
    27d4:	b	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>

00000000000027d8 <_ZNK4llvm9BinOpInit7ProfileERNS_16FoldingSetNodeIDE>:
    27d8:	stp	x29, x30, [sp, #-48]!
    27dc:	mov	x2, x0
    27e0:	mov	x0, x1
    27e4:	mov	x29, sp
    27e8:	stp	x19, x20, [sp, #16]
    27ec:	mov	x19, x1
    27f0:	stp	x21, x22, [sp, #32]
    27f4:	ldp	x22, x21, [x2, #32]
    27f8:	ldrb	w1, [x2, #9]
    27fc:	ldr	x20, [x2, #16]
    2800:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEj>
    2804:	mov	x1, x22
    2808:	mov	x0, x19
    280c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    2810:	mov	x1, x21
    2814:	mov	x0, x19
    2818:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    281c:	mov	x1, x20
    2820:	mov	x0, x19
    2824:	ldp	x19, x20, [sp, #16]
    2828:	ldp	x21, x22, [sp, #32]
    282c:	ldp	x29, x30, [sp], #48
    2830:	b	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    2834:	nop

0000000000002838 <_ZNK4llvm10TernOpInit7ProfileERNS_16FoldingSetNodeIDE>:
    2838:	stp	x29, x30, [sp, #-64]!
    283c:	mov	x2, x0
    2840:	mov	x0, x1
    2844:	mov	x29, sp
    2848:	stp	x19, x20, [sp, #16]
    284c:	mov	x19, x1
    2850:	stp	x21, x22, [sp, #32]
    2854:	ldr	x20, [x2, #16]
    2858:	ldp	x22, x21, [x2, #40]
    285c:	str	x23, [sp, #48]
    2860:	ldr	x23, [x2, #32]
    2864:	ldrb	w1, [x2, #9]
    2868:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEj>
    286c:	mov	x1, x23
    2870:	mov	x0, x19
    2874:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    2878:	mov	x1, x22
    287c:	mov	x0, x19
    2880:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    2884:	mov	x1, x21
    2888:	mov	x0, x19
    288c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    2890:	mov	x1, x20
    2894:	mov	x0, x19
    2898:	ldp	x19, x20, [sp, #16]
    289c:	ldp	x21, x22, [sp, #32]
    28a0:	ldr	x23, [sp, #48]
    28a4:	ldp	x29, x30, [sp], #64
    28a8:	b	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    28ac:	nop

00000000000028b0 <_ZNK4llvm10FoldOpInit7ProfileERNS_16FoldingSetNodeIDE>:
    28b0:	stp	x29, x30, [sp, #-64]!
    28b4:	mov	x2, x0
    28b8:	mov	x0, x1
    28bc:	mov	x29, sp
    28c0:	stp	x19, x20, [sp, #16]
    28c4:	mov	x19, x1
    28c8:	stp	x23, x24, [sp, #48]
    28cc:	ldp	x1, x24, [x2, #48]
    28d0:	stp	x21, x22, [sp, #32]
    28d4:	ldp	x23, x22, [x2, #32]
    28d8:	ldr	x20, [x2, #16]
    28dc:	ldr	x21, [x2, #64]
    28e0:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    28e4:	mov	x1, x24
    28e8:	mov	x0, x19
    28ec:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    28f0:	mov	x1, x23
    28f4:	mov	x0, x19
    28f8:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    28fc:	mov	x1, x22
    2900:	mov	x0, x19
    2904:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    2908:	mov	x1, x21
    290c:	mov	x0, x19
    2910:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    2914:	mov	x1, x20
    2918:	mov	x0, x19
    291c:	ldp	x19, x20, [sp, #16]
    2920:	ldp	x21, x22, [sp, #32]
    2924:	ldp	x23, x24, [sp, #48]
    2928:	ldp	x29, x30, [sp], #64
    292c:	b	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>

0000000000002930 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE>:
    2930:	stp	x29, x30, [sp, #-208]!
    2934:	mov	x29, sp
    2938:	stp	x23, x24, [sp, #48]
    293c:	ldr	x23, [x0, #40]
    2940:	stp	x19, x20, [sp, #16]
    2944:	stp	x21, x22, [sp, #32]
    2948:	cbz	x23, 3028 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x6f8>
    294c:	mov	x21, x0
    2950:	ldrb	w0, [x23, #8]
    2954:	mov	x19, x21
    2958:	cmp	w0, #0x9
    295c:	b.eq	2978 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x48>  // b.none
    2960:	mov	x0, x19
    2964:	ldp	x19, x20, [sp, #16]
    2968:	ldp	x21, x22, [sp, #32]
    296c:	ldp	x23, x24, [sp, #48]
    2970:	ldp	x29, x30, [sp], #208
    2974:	ret
    2978:	ldr	w0, [x23, #32]
    297c:	mov	x24, x1
    2980:	mov	x1, #0x28                  	// #40
    2984:	add	x20, x23, x1
    2988:	ldr	x19, [x21, #32]
    298c:	add	x0, x1, w0, uxtw #3
    2990:	add	x23, x23, x0
    2994:	cmp	x23, x20
    2998:	b.eq	2960 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x30>  // b.none
    299c:	stp	x25, x26, [sp, #64]
    29a0:	adrp	x26, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    29a4:	mov	w22, #0x18                  	// #24
    29a8:	ldr	x25, [x26]
    29ac:	stp	x27, x28, [sp, #80]
    29b0:	add	x27, sp, #0x98
    29b4:	add	x0, x25, #0x10
    29b8:	str	x0, [sp, #104]
    29bc:	nop
    29c0:	ldr	x3, [sp, #104]
    29c4:	mov	x2, #0x1                   	// #1
    29c8:	mov	w1, #0x40                  	// #64
    29cc:	mov	x0, #0x600                 	// #1536
    29d0:	ldr	x28, [x20]
    29d4:	stp	x3, x24, [sp, #152]
    29d8:	strb	wzr, [sp, #168]
    29dc:	stp	x2, xzr, [sp, #176]
    29e0:	str	xzr, [sp, #192]
    29e4:	str	w1, [sp, #200]
    29e8:	ldr	x25, [x21, #48]
    29ec:	bl	0 <_Znwm>
    29f0:	ldr	w5, [sp, #200]
    29f4:	mov	x2, x0
    29f8:	stp	x2, xzr, [sp, #184]
    29fc:	sub	w0, w5, #0x1
    2a00:	tst	w5, w0
    2a04:	b.ne	3034 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x704>  // b.any
    2a08:	umull	x1, w5, w22
    2a0c:	mov	x3, x2
    2a10:	mov	x4, #0xfffffffffffffff8    	// #-8
    2a14:	add	x8, x2, x1
    2a18:	cmp	x2, x8
    2a1c:	b.eq	2a2c <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0xfc>  // b.none
    2a20:	str	x4, [x3], #24
    2a24:	cmp	x8, x3
    2a28:	b.ne	2a20 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0xf0>  // b.any
    2a2c:	cbz	w5, 2b18 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x1e8>
    2a30:	cmn	x25, #0x10
    2a34:	ccmn	x25, #0x8, #0x4, ne  // ne = any
    2a38:	b.eq	2fcc <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x69c>  // b.none
    2a3c:	lsr	w3, w25, #9
    2a40:	mov	w10, #0x1                   	// #1
    2a44:	eor	w3, w3, w25, lsr #4
    2a48:	mov	x9, #0x0                   	// #0
    2a4c:	and	w3, w3, w0
    2a50:	umull	x7, w3, w22
    2a54:	add	x4, x2, x7
    2a58:	ldr	x7, [x2, x7]
    2a5c:	cmp	x25, x7
    2a60:	b.ne	2f24 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x5f4>  // b.any
    2a64:	mov	w3, #0x1                   	// #1
    2a68:	str	w3, [sp, #192]
    2a6c:	nop
    2a70:	mov	w3, #0xffffffff            	// #-1
    2a74:	str	w3, [sp, #196]
    2a78:	ldr	x3, [x21, #56]
    2a7c:	stp	x25, x19, [x4]
    2a80:	strb	wzr, [x4, #16]
    2a84:	cmn	x3, #0x10
    2a88:	ccmn	x3, #0x8, #0x4, ne  // ne = any
    2a8c:	b.eq	2fcc <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x69c>  // b.none
    2a90:	lsr	w19, w3, #9
    2a94:	eor	w19, w19, w3, lsr #4
    2a98:	and	w7, w0, w19
    2a9c:	umull	x6, w7, w22
    2aa0:	add	x4, x2, x6
    2aa4:	ldr	x25, [x2, x6]
    2aa8:	cmp	x3, x25
    2aac:	b.ne	2b38 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x208>  // b.any
    2ab0:	ldr	x0, [x21, #64]
    2ab4:	strb	wzr, [x4, #16]
    2ab8:	mov	x1, x27
    2abc:	add	x20, x20, #0x8
    2ac0:	ldr	x2, [x0]
    2ac4:	ldr	x2, [x2, #96]
    2ac8:	str	x28, [x4, #8]
    2acc:	blr	x2
    2ad0:	mov	x19, x0
    2ad4:	ldr	w1, [sp, #200]
    2ad8:	ldr	x2, [x26]
    2adc:	ldr	x0, [sp, #184]
    2ae0:	umull	x1, w1, w22
    2ae4:	add	x2, x2, #0x10
    2ae8:	str	x2, [sp, #152]
    2aec:	bl	0 <_ZdlPvm>
    2af0:	cmp	x23, x20
    2af4:	b.ne	29c0 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x90>  // b.any
    2af8:	mov	x0, x19
    2afc:	ldp	x19, x20, [sp, #16]
    2b00:	ldp	x21, x22, [sp, #32]
    2b04:	ldp	x23, x24, [sp, #48]
    2b08:	ldp	x25, x26, [sp, #64]
    2b0c:	ldp	x27, x28, [sp, #80]
    2b10:	ldp	x29, x30, [sp], #208
    2b14:	ret
    2b18:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    2b1c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    2b20:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    2b24:	add	x3, x3, #0x0
    2b28:	add	x1, x1, #0x0
    2b2c:	add	x0, x0, #0x0
    2b30:	mov	w2, #0x22f                 	// #559
    2b34:	bl	0 <__assert_fail>
    2b38:	mov	w9, #0x1                   	// #1
    2b3c:	mov	x10, #0x0                   	// #0
    2b40:	cmn	x25, #0x8
    2b44:	b.ne	2eec <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x5bc>  // b.any
    2b48:	ldr	x9, [sp, #176]
    2b4c:	lsl	w7, w5, #1
    2b50:	cmp	x10, #0x0
    2b54:	add	x9, x9, #0x1
    2b58:	str	x9, [sp, #176]
    2b5c:	add	w9, w7, w5
    2b60:	csel	x4, x4, x10, eq  // eq = none
    2b64:	cmp	w9, #0x8
    2b68:	b.ls	2bac <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x27c>  // b.plast
    2b6c:	ldr	w9, [sp, #196]
    2b70:	sub	w7, w5, #0x2
    2b74:	sub	w7, w7, w9
    2b78:	cmp	w7, w5, lsr #3
    2b7c:	b.ls	2cdc <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x3ac>  // b.plast
    2b80:	ldr	x1, [x4]
    2b84:	mov	w0, #0x2                   	// #2
    2b88:	str	w0, [sp, #192]
    2b8c:	cmn	x1, #0x8
    2b90:	b.eq	2ba0 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x270>  // b.none
    2b94:	ldr	w0, [sp, #196]
    2b98:	sub	w0, w0, #0x1
    2b9c:	str	w0, [sp, #196]
    2ba0:	stp	x3, xzr, [x4]
    2ba4:	strb	wzr, [x4, #16]
    2ba8:	b	2ab0 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x180>
    2bac:	sub	w0, w7, #0x1
    2bb0:	mov	w4, #0x40                  	// #64
    2bb4:	stp	x3, x2, [sp, #112]
    2bb8:	orr	x0, x0, x0, lsr #1
    2bbc:	stp	x1, x8, [sp, #128]
    2bc0:	orr	x0, x0, x0, lsr #2
    2bc4:	orr	x0, x0, x0, lsr #4
    2bc8:	orr	x0, x0, x0, lsr #8
    2bcc:	orr	x0, x0, x0, lsr #16
    2bd0:	add	x0, x0, #0x1
    2bd4:	cmp	w0, w4
    2bd8:	csel	w0, w0, w4, cs  // cs = hs, nlast
    2bdc:	str	w0, [sp, #200]
    2be0:	umull	x0, w0, w22
    2be4:	bl	0 <_Znwm>
    2be8:	stp	x0, xzr, [sp, #184]
    2bec:	ldr	w9, [sp, #200]
    2bf0:	sub	w10, w9, #0x1
    2bf4:	tst	w9, w10
    2bf8:	b.ne	3034 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x704>  // b.any
    2bfc:	umaddl	x5, w9, w22, x0
    2c00:	mov	x6, x25
    2c04:	mov	x4, x0
    2c08:	cmp	x0, x5
    2c0c:	ldp	x3, x2, [sp, #112]
    2c10:	ldp	x1, x8, [sp, #128]
    2c14:	b.eq	2c24 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x2f4>  // b.none
    2c18:	str	x6, [x4], #24
    2c1c:	cmp	x5, x4
    2c20:	b.ne	2c18 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x2e8>  // b.any
    2c24:	cmp	x2, x8
    2c28:	mov	x6, x2
    2c2c:	b.ne	2c40 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x310>  // b.any
    2c30:	b	2c94 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x364>
    2c34:	add	x6, x6, #0x18
    2c38:	cmp	x8, x6
    2c3c:	b.eq	2c94 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x364>  // b.none
    2c40:	ldr	x7, [x6]
    2c44:	cmn	x7, #0x8
    2c48:	ccmn	x7, #0x10, #0x4, ne  // ne = any
    2c4c:	b.eq	2c34 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x304>  // b.none
    2c50:	cbz	w9, 3054 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x724>
    2c54:	lsr	w4, w7, #9
    2c58:	eor	w4, w4, w7, lsr #4
    2c5c:	and	w4, w4, w10
    2c60:	umull	x5, w4, w22
    2c64:	add	x11, x0, x5
    2c68:	ldr	x5, [x0, x5]
    2c6c:	cmp	x5, x7
    2c70:	b.ne	2e64 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x534>  // b.any
    2c74:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    2c78:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    2c7c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    2c80:	add	x3, x3, #0x0
    2c84:	add	x1, x1, #0x0
    2c88:	add	x0, x0, #0x0
    2c8c:	mov	w2, #0x17a                 	// #378
    2c90:	bl	0 <__assert_fail>
    2c94:	mov	x0, x2
    2c98:	str	x3, [sp, #112]
    2c9c:	bl	0 <_ZdlPvm>
    2ca0:	ldr	w0, [sp, #200]
    2ca4:	ldr	x3, [sp, #112]
    2ca8:	cbz	w0, 2b18 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x1e8>
    2cac:	sub	w1, w0, #0x1
    2cb0:	ldr	w0, [sp, #192]
    2cb4:	and	w19, w19, w1
    2cb8:	ldr	x2, [sp, #184]
    2cbc:	add	w0, w0, #0x1
    2cc0:	umull	x5, w19, w22
    2cc4:	add	x4, x2, x5
    2cc8:	ldr	x5, [x2, x5]
    2ccc:	cmp	x3, x5
    2cd0:	b.ne	2e98 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x568>  // b.any
    2cd4:	str	w0, [sp, #192]
    2cd8:	b	2b94 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x264>
    2cdc:	mov	w4, w0
    2ce0:	lsr	w0, w0, #1
    2ce4:	orr	x0, x0, x4
    2ce8:	mov	w4, #0x40                  	// #64
    2cec:	stp	x3, x2, [sp, #112]
    2cf0:	orr	x0, x0, x0, lsr #2
    2cf4:	stp	x1, x8, [sp, #128]
    2cf8:	orr	x0, x0, x0, lsr #4
    2cfc:	orr	x0, x0, x0, lsr #8
    2d00:	orr	x0, x0, x0, lsr #16
    2d04:	add	x0, x0, #0x1
    2d08:	cmp	w0, w4
    2d0c:	csel	w0, w0, w4, cs  // cs = hs, nlast
    2d10:	str	w0, [sp, #200]
    2d14:	umull	x0, w0, w22
    2d18:	bl	0 <_Znwm>
    2d1c:	stp	x0, xzr, [sp, #184]
    2d20:	ldr	w9, [sp, #200]
    2d24:	sub	w10, w9, #0x1
    2d28:	tst	w9, w10
    2d2c:	b.ne	3034 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x704>  // b.any
    2d30:	umaddl	x5, w9, w22, x0
    2d34:	mov	x6, x25
    2d38:	mov	x4, x0
    2d3c:	cmp	x0, x5
    2d40:	ldp	x3, x2, [sp, #112]
    2d44:	ldp	x1, x8, [sp, #128]
    2d48:	b.eq	2d5c <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x42c>  // b.none
    2d4c:	nop
    2d50:	str	x6, [x4], #24
    2d54:	cmp	x5, x4
    2d58:	b.ne	2d50 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x420>  // b.any
    2d5c:	cmp	x2, x8
    2d60:	mov	x6, x2
    2d64:	b.ne	2d78 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x448>  // b.any
    2d68:	b	2de0 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x4b0>
    2d6c:	add	x6, x6, #0x18
    2d70:	cmp	x8, x6
    2d74:	b.eq	2de0 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x4b0>  // b.none
    2d78:	ldr	x7, [x6]
    2d7c:	cmn	x7, #0x8
    2d80:	ccmn	x7, #0x10, #0x4, ne  // ne = any
    2d84:	b.eq	2d6c <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x43c>  // b.none
    2d88:	cbz	w9, 3054 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x724>
    2d8c:	lsr	w4, w7, #9
    2d90:	eor	w4, w4, w7, lsr #4
    2d94:	and	w4, w4, w10
    2d98:	umull	x5, w4, w22
    2d9c:	add	x11, x0, x5
    2da0:	ldr	x5, [x0, x5]
    2da4:	cmp	x7, x5
    2da8:	b.eq	2c74 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x344>  // b.none
    2dac:	mov	w13, #0x1                   	// #1
    2db0:	mov	x12, #0x0                   	// #0
    2db4:	cmn	x5, #0x8
    2db8:	b.ne	2f8c <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x65c>  // b.any
    2dbc:	ldr	w4, [sp, #192]
    2dc0:	cmp	x12, #0x0
    2dc4:	csel	x12, x12, x11, ne  // ne = any
    2dc8:	add	w4, w4, #0x1
    2dcc:	str	w4, [sp, #192]
    2dd0:	ldp	x4, x5, [x6, #8]
    2dd4:	str	x7, [x12]
    2dd8:	stp	x4, x5, [x12, #8]
    2ddc:	b	2d6c <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x43c>
    2de0:	mov	x0, x2
    2de4:	str	x3, [sp, #112]
    2de8:	bl	0 <_ZdlPvm>
    2dec:	ldr	w0, [sp, #200]
    2df0:	ldr	x3, [sp, #112]
    2df4:	cbz	w0, 2b18 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x1e8>
    2df8:	sub	w1, w0, #0x1
    2dfc:	ldr	w0, [sp, #192]
    2e00:	and	w19, w19, w1
    2e04:	ldr	x2, [sp, #184]
    2e08:	add	w0, w0, #0x1
    2e0c:	umull	x5, w19, w22
    2e10:	add	x4, x2, x5
    2e14:	ldr	x5, [x2, x5]
    2e18:	cmp	x3, x5
    2e1c:	b.eq	2cd4 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x3a4>  // b.none
    2e20:	mov	w7, #0x1                   	// #1
    2e24:	mov	x6, #0x0                   	// #0
    2e28:	cmn	x5, #0x8
    2e2c:	b.eq	2ea8 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x578>  // b.none
    2e30:	add	w19, w7, w19
    2e34:	cmp	x6, #0x0
    2e38:	and	w19, w1, w19
    2e3c:	ccmn	x5, #0x10, #0x0, eq  // eq = none
    2e40:	csel	x6, x6, x4, ne  // ne = any
    2e44:	add	w7, w7, #0x1
    2e48:	umull	x5, w19, w22
    2e4c:	add	x4, x2, x5
    2e50:	ldr	x5, [x2, x5]
    2e54:	cmp	x3, x5
    2e58:	b.ne	2e28 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x4f8>  // b.any
    2e5c:	str	w0, [sp, #192]
    2e60:	b	2b94 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x264>
    2e64:	mov	w13, #0x1                   	// #1
    2e68:	mov	x12, #0x0                   	// #0
    2e6c:	cmn	x5, #0x8
    2e70:	b.ne	2f4c <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x61c>  // b.any
    2e74:	ldr	w4, [sp, #192]
    2e78:	cmp	x12, #0x0
    2e7c:	csel	x12, x12, x11, ne  // ne = any
    2e80:	add	w4, w4, #0x1
    2e84:	str	w4, [sp, #192]
    2e88:	ldp	x4, x5, [x6, #8]
    2e8c:	str	x7, [x12]
    2e90:	stp	x4, x5, [x12, #8]
    2e94:	b	2c34 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x304>
    2e98:	mov	w7, #0x1                   	// #1
    2e9c:	mov	x6, #0x0                   	// #0
    2ea0:	cmn	x5, #0x8
    2ea4:	b.ne	2eb8 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x588>  // b.any
    2ea8:	cbz	x6, 2f84 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x654>
    2eac:	mov	x4, x6
    2eb0:	ldr	x1, [x6]
    2eb4:	b	2b88 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x258>
    2eb8:	add	w19, w7, w19
    2ebc:	cmp	x6, #0x0
    2ec0:	and	w19, w1, w19
    2ec4:	ccmn	x5, #0x10, #0x0, eq  // eq = none
    2ec8:	csel	x6, x6, x4, ne  // ne = any
    2ecc:	add	w7, w7, #0x1
    2ed0:	umull	x5, w19, w22
    2ed4:	add	x4, x2, x5
    2ed8:	ldr	x5, [x2, x5]
    2edc:	cmp	x3, x5
    2ee0:	b.ne	2ea0 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x570>  // b.any
    2ee4:	str	w0, [sp, #192]
    2ee8:	b	2b94 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x264>
    2eec:	add	w7, w9, w7
    2ef0:	cmp	x10, #0x0
    2ef4:	and	w7, w0, w7
    2ef8:	ccmn	x25, #0x10, #0x0, eq  // eq = none
    2efc:	csel	x10, x10, x4, ne  // ne = any
    2f00:	add	w9, w9, #0x1
    2f04:	umull	x6, w7, w22
    2f08:	add	x4, x2, x6
    2f0c:	ldr	x25, [x2, x6]
    2f10:	cmp	x3, x25
    2f14:	b.eq	2ab0 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x180>  // b.none
    2f18:	b	2b40 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x210>
    2f1c:	mov	x9, x4
    2f20:	mov	x4, x11
    2f24:	cmn	x7, #0x8
    2f28:	b.ne	2fec <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x6bc>  // b.any
    2f2c:	cbz	x9, 2fc4 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x694>
    2f30:	ldr	x7, [x9]
    2f34:	mov	x4, x9
    2f38:	mov	w3, #0x1                   	// #1
    2f3c:	str	w3, [sp, #192]
    2f40:	cmn	x7, #0x8
    2f44:	b.ne	2a70 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x140>  // b.any
    2f48:	b	2a78 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x148>
    2f4c:	add	w4, w4, w13
    2f50:	cmp	x12, #0x0
    2f54:	and	w4, w10, w4
    2f58:	ccmn	x5, #0x10, #0x0, eq  // eq = none
    2f5c:	csel	x11, x11, x12, eq  // eq = none
    2f60:	add	w13, w13, #0x1
    2f64:	umull	x5, w4, w22
    2f68:	add	x14, x0, x5
    2f6c:	ldr	x5, [x0, x5]
    2f70:	cmp	x7, x5
    2f74:	b.eq	2c74 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x344>  // b.none
    2f78:	mov	x12, x11
    2f7c:	mov	x11, x14
    2f80:	b	2e6c <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x53c>
    2f84:	ldr	x1, [x4]
    2f88:	b	2b88 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x258>
    2f8c:	add	w4, w4, w13
    2f90:	cmp	x12, #0x0
    2f94:	and	w4, w10, w4
    2f98:	ccmn	x5, #0x10, #0x0, eq  // eq = none
    2f9c:	csel	x11, x11, x12, eq  // eq = none
    2fa0:	add	w13, w13, #0x1
    2fa4:	umull	x5, w4, w22
    2fa8:	add	x14, x0, x5
    2fac:	ldr	x5, [x0, x5]
    2fb0:	cmp	x7, x5
    2fb4:	b.eq	2c74 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x344>  // b.none
    2fb8:	mov	x12, x11
    2fbc:	mov	x11, x14
    2fc0:	b	2db4 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x484>
    2fc4:	ldr	x7, [x4]
    2fc8:	b	2f38 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x608>
    2fcc:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    2fd0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    2fd4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    2fd8:	add	x3, x3, #0x0
    2fdc:	add	x1, x1, #0x0
    2fe0:	add	x0, x0, #0x0
    2fe4:	mov	w2, #0x250                 	// #592
    2fe8:	bl	0 <__assert_fail>
    2fec:	add	w3, w3, w10
    2ff0:	cmp	x9, #0x0
    2ff4:	and	w3, w3, w0
    2ff8:	ccmn	x7, #0x10, #0x0, eq  // eq = none
    2ffc:	csel	x4, x4, x9, eq  // eq = none
    3000:	add	w10, w10, #0x1
    3004:	umull	x7, w3, w22
    3008:	add	x11, x2, x7
    300c:	ldr	x7, [x2, x7]
    3010:	cmp	x25, x7
    3014:	b.ne	2f1c <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x5ec>  // b.any
    3018:	mov	w3, #0x1                   	// #1
    301c:	mov	x4, x11
    3020:	str	w3, [sp, #192]
    3024:	b	2a70 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x140>
    3028:	stp	x25, x26, [sp, #64]
    302c:	stp	x27, x28, [sp, #80]
    3030:	bl	9d8 <_ZN4llvm3isaINS_8ListInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    3034:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3038:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    303c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3040:	add	x3, x3, #0x0
    3044:	add	x1, x1, #0x0
    3048:	add	x0, x0, #0x0
    304c:	mov	w2, #0x15b                 	// #347
    3050:	bl	0 <__assert_fail>
    3054:	mov	x0, #0x0                   	// #0
    3058:	str	x7, [x0]
    305c:	brk	#0x3e8

0000000000003060 <_ZNK4llvm9IsAOpInit7ProfileERNS_16FoldingSetNodeIDE>:
    3060:	stp	x29, x30, [sp, #-32]!
    3064:	mov	x2, x0
    3068:	mov	x0, x1
    306c:	mov	x29, sp
    3070:	stp	x19, x20, [sp, #16]
    3074:	mov	x19, x1
    3078:	ldp	x1, x20, [x2, #32]
    307c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    3080:	mov	x1, x20
    3084:	mov	x0, x19
    3088:	ldp	x19, x20, [sp, #16]
    308c:	ldp	x29, x30, [sp], #32
    3090:	b	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    3094:	nop

0000000000003098 <_ZNK4llvm7VarInit7getNameEv>:
    3098:	stp	x29, x30, [sp, #-16]!
    309c:	mov	x29, sp
    30a0:	ldr	x1, [x0, #24]
    30a4:	cbz	x1, 30c0 <_ZNK4llvm7VarInit7getNameEv+0x28>
    30a8:	ldrb	w0, [x1, #8]
    30ac:	cmp	w0, #0x12
    30b0:	b.ne	30c4 <_ZNK4llvm7VarInit7getNameEv+0x2c>  // b.any
    30b4:	ldp	x29, x30, [sp], #16
    30b8:	ldp	x0, x1, [x1, #24]
    30bc:	ret
    30c0:	bl	910 <_ZN4llvm3isaINS_10StringInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    30c4:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    30c8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    30cc:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    30d0:	add	x3, x3, #0x0
    30d4:	add	x1, x1, #0x0
    30d8:	add	x0, x0, #0x0
    30dc:	mov	w2, #0x108                 	// #264
    30e0:	bl	0 <__assert_fail>
    30e4:	nop

00000000000030e8 <_ZNK4llvm10VarDefInit7ProfileERNS_16FoldingSetNodeIDE>:
    30e8:	mov	x4, x0
    30ec:	mov	x0, x1
    30f0:	add	x2, x4, #0x38
    30f4:	ldr	w3, [x4, #48]
    30f8:	ldr	x1, [x4, #32]
    30fc:	b	328 <_ZL17ProfileVarDefInitRN4llvm16FoldingSetNodeIDEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE>

0000000000003100 <_ZNK4llvm10CondOpInit7ProfileERNS_16FoldingSetNodeIDE>:
    3100:	mov	x2, x0
    3104:	mov	x6, #0x30                  	// #48
    3108:	mov	x0, x1
    310c:	add	x1, x2, x6
    3110:	ldr	w3, [x2, #32]
    3114:	ldr	x5, [x2, #40]
    3118:	mov	w4, w3
    311c:	add	x3, x6, w3, uxtw #3
    3120:	add	x3, x2, x3
    3124:	mov	x2, x4
    3128:	b	4f8 <_ZL17ProfileCondOpInitRN4llvm16FoldingSetNodeIDENS_8ArrayRefIPNS_4InitEEES5_PKNS_5RecTyE>
    312c:	nop

0000000000003130 <_ZNK4llvm7DagInit7ProfileERNS_16FoldingSetNodeIDE>:
    3130:	mov	x7, x0
    3134:	mov	x0, x1
    3138:	mov	x8, #0x38                  	// #56
    313c:	add	x3, x7, x8
    3140:	ldp	x1, x2, [x7, #32]
    3144:	ldp	w5, w6, [x7, #48]
    3148:	mov	w4, w5
    314c:	add	x5, x8, w5, uxtw #3
    3150:	add	x5, x7, x5
    3154:	b	390 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE>

0000000000003158 <_ZNK4llvm7DagInit16getOperatorAsDefENS_8ArrayRefINS_5SMLocEEE>:
    3158:	stp	x29, x30, [sp, #-80]!
    315c:	mov	x29, sp
    3160:	ldr	x0, [x0, #32]
    3164:	stp	x19, x20, [sp, #16]
    3168:	cbz	x0, 31bc <_ZNK4llvm7DagInit16getOperatorAsDefENS_8ArrayRefINS_5SMLocEEE+0x64>
    316c:	mov	x20, x1
    3170:	ldrb	w1, [x0, #8]
    3174:	cmp	w1, #0x6
    3178:	b.eq	31ac <_ZNK4llvm7DagInit16getOperatorAsDefENS_8ArrayRefINS_5SMLocEEE+0x54>  // b.none
    317c:	mov	x19, x2
    3180:	add	x2, sp, #0x38
    3184:	mov	x0, x2
    3188:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    318c:	add	x1, x1, #0x0
    3190:	str	x21, [sp, #32]
    3194:	mov	x21, x2
    3198:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    319c:	mov	x2, x21
    31a0:	mov	x0, x20
    31a4:	mov	x1, x19
    31a8:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    31ac:	ldp	x19, x20, [sp, #16]
    31b0:	ldr	x0, [x0, #24]
    31b4:	ldp	x29, x30, [sp], #80
    31b8:	ret
    31bc:	str	x21, [sp, #32]
    31c0:	bl	938 <_ZN4llvm3isaINS_7DefInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    31c4:	nop

00000000000031c8 <_ZNK4llvm9RecordVal7getNameEv>:
    31c8:	stp	x29, x30, [sp, #-16]!
    31cc:	mov	x29, sp
    31d0:	ldr	x1, [x0]
    31d4:	cbz	x1, 31f0 <_ZNK4llvm9RecordVal7getNameEv+0x28>
    31d8:	ldrb	w0, [x1, #8]
    31dc:	cmp	w0, #0x12
    31e0:	b.ne	31f4 <_ZNK4llvm9RecordVal7getNameEv+0x2c>  // b.any
    31e4:	ldp	x29, x30, [sp], #16
    31e8:	ldp	x0, x1, [x1, #24]
    31ec:	ret
    31f0:	bl	910 <_ZN4llvm3isaINS_10StringInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    31f4:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    31f8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    31fc:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3200:	add	x3, x3, #0x0
    3204:	add	x1, x1, #0x0
    3208:	add	x0, x0, #0x0
    320c:	mov	w2, #0x108                 	// #264
    3210:	bl	0 <__assert_fail>
    3214:	nop

0000000000003218 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb>:
    3218:	stp	x29, x30, [sp, #-96]!
    321c:	mov	x29, sp
    3220:	stp	x21, x22, [sp, #32]
    3224:	mov	x21, x0
    3228:	and	w22, w2, #0xff
    322c:	ldr	x0, [x0, #8]
    3230:	stp	x19, x20, [sp, #16]
    3234:	mov	x19, x1
    3238:	str	x23, [sp, #48]
    323c:	tst	w0, #0x4
    3240:	b.ne	337c <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x164>  // b.any
    3244:	and	x0, x0, #0xfffffffffffffff8
    3248:	add	x20, sp, #0x40
    324c:	mov	x8, x20
    3250:	ldr	x1, [x0]
    3254:	ldr	x1, [x1, #16]
    3258:	blr	x1
    325c:	ldp	x1, x2, [sp, #64]
    3260:	mov	x0, x19
    3264:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3268:	ldr	x0, [sp, #64]
    326c:	add	x1, x20, #0x10
    3270:	cmp	x0, x1
    3274:	b.eq	327c <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x64>  // b.none
    3278:	bl	0 <_ZdlPv>
    327c:	ldp	x1, x0, [x19, #16]
    3280:	cmp	x1, x0
    3284:	b.eq	3360 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x148>  // b.none
    3288:	mov	w1, #0x20                  	// #32
    328c:	strb	w1, [x0]
    3290:	mov	x23, x19
    3294:	ldr	x0, [x19, #24]
    3298:	add	x0, x0, #0x1
    329c:	str	x0, [x19, #24]
    32a0:	ldr	x0, [x21]
    32a4:	mov	x8, x20
    32a8:	ldr	x1, [x0]
    32ac:	ldr	x1, [x1, #48]
    32b0:	blr	x1
    32b4:	ldp	x1, x2, [sp, #64]
    32b8:	mov	x0, x23
    32bc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    32c0:	ldr	x0, [sp, #64]
    32c4:	add	x1, x20, #0x10
    32c8:	cmp	x0, x1
    32cc:	b.eq	32d4 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0xbc>  // b.none
    32d0:	bl	0 <_ZdlPv>
    32d4:	ldr	x0, [x21, #16]
    32d8:	cbz	x0, 3348 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x130>
    32dc:	ldp	x0, x1, [x19, #16]
    32e0:	sub	x0, x0, x1
    32e4:	cmp	x0, #0x2
    32e8:	b.ls	33e0 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x1c8>  // b.plast
    32ec:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    32f0:	add	x0, x0, #0x0
    32f4:	mov	x23, x19
    32f8:	ldrh	w2, [x0]
    32fc:	ldrb	w0, [x0, #2]
    3300:	strh	w2, [x1]
    3304:	strb	w0, [x1, #2]
    3308:	ldr	x0, [x19, #24]
    330c:	add	x0, x0, #0x3
    3310:	str	x0, [x19, #24]
    3314:	ldr	x0, [x21, #16]
    3318:	mov	x8, x20
    331c:	add	x20, x20, #0x10
    3320:	ldr	x1, [x0]
    3324:	ldr	x1, [x1, #40]
    3328:	blr	x1
    332c:	ldp	x1, x2, [sp, #64]
    3330:	mov	x0, x23
    3334:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3338:	ldr	x0, [sp, #64]
    333c:	cmp	x0, x20
    3340:	b.eq	3348 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x130>  // b.none
    3344:	bl	0 <_ZdlPv>
    3348:	cbnz	w22, 33b8 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x1a0>
    334c:	ldp	x19, x20, [sp, #16]
    3350:	ldp	x21, x22, [sp, #32]
    3354:	ldr	x23, [sp, #48]
    3358:	ldp	x29, x30, [sp], #96
    335c:	ret
    3360:	mov	x0, x19
    3364:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3368:	mov	x2, #0x1                   	// #1
    336c:	add	x1, x1, #0x0
    3370:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3374:	mov	x23, x0
    3378:	b	32a0 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x88>
    337c:	ldp	x0, x1, [x1, #16]
    3380:	sub	x0, x0, x1
    3384:	cmp	x0, #0x5
    3388:	b.ls	3424 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x20c>  // b.plast
    338c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3390:	add	x0, x0, #0x0
    3394:	ldr	w2, [x0]
    3398:	ldrh	w0, [x0, #4]
    339c:	str	w2, [x1]
    33a0:	strh	w0, [x1, #4]
    33a4:	ldr	x0, [x19, #24]
    33a8:	add	x0, x0, #0x6
    33ac:	str	x0, [x19, #24]
    33b0:	ldr	x0, [x21, #8]
    33b4:	b	3244 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x2c>
    33b8:	ldp	x0, x1, [x19, #16]
    33bc:	sub	x0, x0, x1
    33c0:	cmp	x0, #0x1
    33c4:	b.ls	33fc <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x1e4>  // b.plast
    33c8:	mov	w0, #0xa3b                 	// #2619
    33cc:	strh	w0, [x1]
    33d0:	ldr	x0, [x19, #24]
    33d4:	add	x0, x0, #0x2
    33d8:	str	x0, [x19, #24]
    33dc:	b	334c <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x134>
    33e0:	mov	x0, x19
    33e4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    33e8:	mov	x2, #0x3                   	// #3
    33ec:	add	x1, x1, #0x0
    33f0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    33f4:	mov	x23, x0
    33f8:	b	3314 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0xfc>
    33fc:	mov	x0, x19
    3400:	mov	x2, #0x2                   	// #2
    3404:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3408:	add	x1, x1, #0x0
    340c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3410:	ldp	x19, x20, [sp, #16]
    3414:	ldp	x21, x22, [sp, #32]
    3418:	ldr	x23, [sp, #48]
    341c:	ldp	x29, x30, [sp], #96
    3420:	ret
    3424:	mov	x0, x19
    3428:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    342c:	mov	x2, #0x6                   	// #6
    3430:	add	x1, x1, #0x0
    3434:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3438:	ldr	x0, [x21, #8]
    343c:	b	3244 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x2c>

0000000000003440 <_ZNK4llvm9RecordVal4dumpEv>:
    3440:	stp	x29, x30, [sp, #-32]!
    3444:	mov	x29, sp
    3448:	str	x19, [sp, #16]
    344c:	mov	x19, x0
    3450:	bl	0 <_ZN4llvm4errsEv>
    3454:	ldp	x2, x3, [x0, #16]
    3458:	sub	x2, x2, x3
    345c:	cmp	x2, #0x1
    3460:	b.ls	3490 <_ZNK4llvm9RecordVal4dumpEv+0x50>  // b.plast
    3464:	mov	x1, x0
    3468:	mov	w0, #0x2020                	// #8224
    346c:	strh	w0, [x3]
    3470:	mov	w2, #0x1                   	// #1
    3474:	ldr	x0, [x1, #24]
    3478:	add	x0, x0, #0x2
    347c:	str	x0, [x1, #24]
    3480:	mov	x0, x19
    3484:	ldr	x19, [sp, #16]
    3488:	ldp	x29, x30, [sp], #32
    348c:	b	3218 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb>
    3490:	mov	x2, #0x2                   	// #2
    3494:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3498:	add	x1, x1, #0x0
    349c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    34a0:	mov	x1, x0
    34a4:	mov	x0, x19
    34a8:	ldr	x19, [sp, #16]
    34ac:	mov	w2, #0x1                   	// #1
    34b0:	ldp	x29, x30, [sp], #32
    34b4:	b	3218 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb>

00000000000034b8 <_ZN4llvm6Record9checkNameEv>:
    34b8:	stp	x29, x30, [sp, #-240]!
    34bc:	mov	x29, sp
    34c0:	stp	x19, x20, [sp, #16]
    34c4:	mov	x19, x0
    34c8:	ldr	x0, [x0]
    34cc:	cbz	x0, 3530 <_ZN4llvm6Record9checkNameEv+0x78>
    34d0:	ldrb	w1, [x0, #8]
    34d4:	sub	w1, w1, #0x1
    34d8:	and	w1, w1, #0xff
    34dc:	cmp	w1, #0x16
    34e0:	b.ls	3510 <_ZN4llvm6Record9checkNameEv+0x58>  // b.plast
    34e4:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    34e8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    34ec:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    34f0:	add	x3, x3, #0x0
    34f4:	add	x1, x1, #0x0
    34f8:	add	x0, x0, #0x0
    34fc:	mov	w2, #0x108                 	// #264
    3500:	stp	x21, x22, [sp, #32]
    3504:	stp	x23, x24, [sp, #48]
    3508:	stp	x25, x26, [sp, #64]
    350c:	bl	0 <__assert_fail>
    3510:	ldr	x0, [x0, #16]
    3514:	cbz	x0, 35f8 <_ZN4llvm6Record9checkNameEv+0x140>
    3518:	ldr	w0, [x0, #8]
    351c:	cmp	w0, #0x4
    3520:	b.ne	355c <_ZN4llvm6Record9checkNameEv+0xa4>  // b.any
    3524:	ldp	x19, x20, [sp, #16]
    3528:	ldp	x29, x30, [sp], #240
    352c:	ret
    3530:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3534:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3538:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    353c:	add	x3, x3, #0x0
    3540:	add	x1, x1, #0x0
    3544:	add	x0, x0, #0x0
    3548:	mov	w2, #0x69                  	// #105
    354c:	stp	x21, x22, [sp, #32]
    3550:	stp	x23, x24, [sp, #48]
    3554:	stp	x25, x26, [sp, #64]
    3558:	bl	0 <__assert_fail>
    355c:	stp	x21, x22, [sp, #32]
    3560:	add	x22, sp, #0x88
    3564:	mov	x0, x22
    3568:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    356c:	add	x1, x1, #0x0
    3570:	stp	x23, x24, [sp, #48]
    3574:	add	x23, sp, #0xa0
    3578:	ldr	w24, [x19, #16]
    357c:	stp	x25, x26, [sp, #64]
    3580:	add	x26, sp, #0xd0
    3584:	add	x20, sp, #0x70
    3588:	ldr	x25, [x19, #8]
    358c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3590:	ldr	x0, [x19]
    3594:	mov	x8, x26
    3598:	add	x21, sp, #0xb8
    359c:	add	x19, sp, #0x58
    35a0:	ldr	x2, [x0]
    35a4:	ldr	x2, [x2, #40]
    35a8:	blr	x2
    35ac:	mov	x1, x26
    35b0:	mov	x0, x23
    35b4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    35b8:	mov	x8, x20
    35bc:	mov	x1, x23
    35c0:	mov	x0, x22
    35c4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    35c8:	mov	x0, x21
    35cc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    35d0:	add	x1, x1, #0x0
    35d4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    35d8:	mov	x8, x19
    35dc:	mov	x1, x21
    35e0:	mov	x0, x20
    35e4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    35e8:	mov	x2, x19
    35ec:	mov	x0, x25
    35f0:	mov	x1, x24
    35f4:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    35f8:	stp	x21, x22, [sp, #32]
    35fc:	stp	x23, x24, [sp, #48]
    3600:	stp	x25, x26, [sp, #64]
    3604:	bl	8c0 <_ZN4llvm3isaINS_11StringRecTyEPNS_5RecTyEEEbRKT0_.isra.0.part.0>

0000000000003608 <_ZN4llvm6Record7setNameEPNS_4InitE>:
    3608:	str	x1, [x0]
    360c:	b	34b8 <_ZN4llvm6Record9checkNameEv>

0000000000003610 <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE>:
    3610:	stp	x29, x30, [sp, #-64]!
    3614:	mov	x29, sp
    3618:	stp	x19, x20, [sp, #16]
    361c:	ldr	w19, [x0, #96]
    3620:	stp	x23, x24, [sp, #48]
    3624:	ldr	x23, [x0, #88]
    3628:	cbz	x19, 369c <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE+0x8c>
    362c:	mov	x20, x1
    3630:	add	x24, x1, #0x10
    3634:	stp	x21, x22, [sp, #32]
    3638:	add	x0, x19, x19, lsl #1
    363c:	add	x0, x23, x0, lsl #3
    3640:	ldur	x21, [x0, #-24]
    3644:	ldr	w2, [x21, #96]
    3648:	add	x2, x2, #0x1
    364c:	cmp	x2, x19
    3650:	b.hi	36c8 <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE+0xb8>  // b.pmore
    3654:	subs	x22, x19, x2
    3658:	cmp	x19, x2
    365c:	mov	x19, x22
    3660:	b.cc	3708 <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE+0xf8>  // b.lo, b.ul, b.last
    3664:	ldp	w0, w2, [x20, #8]
    3668:	cmp	w0, w2
    366c:	b.cs	36ac <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE+0x9c>  // b.hs, b.nlast
    3670:	ldr	x2, [x20]
    3674:	str	x21, [x2, w0, uxtw #3]
    3678:	ldp	w0, w3, [x20, #8]
    367c:	mov	w2, w0
    3680:	add	x2, x2, #0x1
    3684:	cmp	x2, x3
    3688:	b.hi	36e8 <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE+0xd8>  // b.pmore
    368c:	add	w0, w0, #0x1
    3690:	str	w0, [x20, #8]
    3694:	cbnz	x22, 3638 <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE+0x28>
    3698:	ldp	x21, x22, [sp, #32]
    369c:	ldp	x19, x20, [sp, #16]
    36a0:	ldp	x23, x24, [sp, #48]
    36a4:	ldp	x29, x30, [sp], #64
    36a8:	ret
    36ac:	mov	x0, x20
    36b0:	mov	x1, x24
    36b4:	mov	x3, #0x8                   	// #8
    36b8:	mov	x2, #0x0                   	// #0
    36bc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    36c0:	ldr	w0, [x20, #8]
    36c4:	b	3670 <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE+0x60>
    36c8:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    36cc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    36d0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    36d4:	add	x3, x3, #0x0
    36d8:	add	x1, x1, #0x0
    36dc:	add	x0, x0, #0x0
    36e0:	mov	w2, #0xcc                  	// #204
    36e4:	bl	0 <__assert_fail>
    36e8:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    36ec:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    36f0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    36f4:	add	x3, x3, #0x0
    36f8:	add	x1, x1, #0x0
    36fc:	add	x0, x0, #0x0
    3700:	mov	w2, #0x43                  	// #67
    3704:	bl	0 <__assert_fail>
    3708:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    370c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3710:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3714:	add	x3, x3, #0x0
    3718:	add	x1, x1, #0x0
    371c:	add	x0, x0, #0x0
    3720:	mov	w2, #0xbd                  	// #189
    3724:	bl	0 <__assert_fail>

0000000000003728 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE>:
    3728:	stp	x29, x30, [sp, #-128]!
    372c:	mov	x29, sp
    3730:	stp	x25, x26, [sp, #64]
    3734:	mov	x25, x0
    3738:	mov	x26, x1
    373c:	ldr	x0, [x1]
    3740:	stp	x19, x20, [sp, #16]
    3744:	stp	x21, x22, [sp, #32]
    3748:	add	x21, sp, #0x60
    374c:	mov	x8, x21
    3750:	ldr	x1, [x0]
    3754:	ldr	x1, [x1, #48]
    3758:	blr	x1
    375c:	ldp	x1, x2, [sp, #96]
    3760:	mov	x0, x25
    3764:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3768:	ldr	x0, [sp, #96]
    376c:	add	x1, x21, #0x10
    3770:	cmp	x0, x1
    3774:	b.eq	377c <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x54>  // b.none
    3778:	bl	0 <_ZdlPv>
    377c:	ldr	w19, [x26, #64]
    3780:	ldp	x0, x1, [x25, #16]
    3784:	cbnz	x19, 3940 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x218>
    3788:	sub	x0, x0, x1
    378c:	cmp	x0, #0x1
    3790:	b.ls	3b90 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x468>  // b.plast
    3794:	mov	w0, #0x7b20                	// #31520
    3798:	strh	w0, [x1]
    379c:	ldr	x0, [x25, #24]
    37a0:	add	x0, x0, #0x2
    37a4:	str	x0, [x25, #24]
    37a8:	ldr	w20, [x26, #96]
    37ac:	ldr	x1, [x25, #16]
    37b0:	cbnz	w20, 3abc <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x394>
    37b4:	cmp	x1, x0
    37b8:	b.eq	3a78 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x350>  // b.none
    37bc:	mov	w1, #0xa                   	// #10
    37c0:	strb	w1, [x0]
    37c4:	ldr	x4, [x25, #24]
    37c8:	add	x4, x4, #0x1
    37cc:	str	x4, [x25, #24]
    37d0:	ldr	w22, [x26, #80]
    37d4:	mov	w0, #0x18                  	// #24
    37d8:	ldr	x19, [x26, #72]
    37dc:	umaddl	x22, w22, w0, x19
    37e0:	cmp	x22, x19
    37e4:	b.eq	3868 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x140>  // b.none
    37e8:	adrp	x20, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    37ec:	mov	w21, #0x2020                	// #8224
    37f0:	add	x20, x20, #0x0
    37f4:	b	3804 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0xdc>
    37f8:	add	x19, x19, #0x18
    37fc:	cmp	x22, x19
    3800:	b.eq	38a4 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x17c>  // b.none
    3804:	ldr	x0, [x19, #8]
    3808:	tst	w0, #0x4
    380c:	b.eq	37f8 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0xd0>  // b.none
    3810:	ldr	x2, [x26, #56]
    3814:	ldr	w1, [x26, #64]
    3818:	ldr	x3, [x19]
    381c:	add	x1, x2, x1, lsl #3
    3820:	cmp	x2, x1
    3824:	b.eq	3840 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x118>  // b.none
    3828:	ldr	x0, [x2]
    382c:	cmp	x3, x0
    3830:	b.eq	37f8 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0xd0>  // b.none
    3834:	add	x2, x2, #0x8
    3838:	cmp	x1, x2
    383c:	b.ne	3828 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x100>  // b.any
    3840:	ldr	x0, [x25, #16]
    3844:	sub	x0, x0, x4
    3848:	cmp	x0, #0x1
    384c:	b.ls	3a50 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x328>  // b.plast
    3850:	strh	w21, [x4]
    3854:	mov	x1, x25
    3858:	ldr	x0, [x25, #24]
    385c:	add	x0, x0, #0x2
    3860:	str	x0, [x25, #24]
    3864:	b	3a64 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x33c>
    3868:	ldr	x0, [x25, #16]
    386c:	sub	x0, x0, x4
    3870:	cmp	x0, #0x1
    3874:	b.ls	3a94 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x36c>  // b.plast
    3878:	mov	w0, #0xa7d                 	// #2685
    387c:	strh	w0, [x4]
    3880:	mov	x0, x25
    3884:	ldr	x1, [x25, #24]
    3888:	ldp	x19, x20, [sp, #16]
    388c:	add	x1, x1, #0x2
    3890:	str	x1, [x25, #24]
    3894:	ldp	x21, x22, [sp, #32]
    3898:	ldp	x25, x26, [sp, #64]
    389c:	ldp	x29, x30, [sp], #128
    38a0:	ret
    38a4:	ldr	w22, [x26, #80]
    38a8:	mov	w0, #0x18                  	// #24
    38ac:	ldr	x19, [x26, #72]
    38b0:	umaddl	x22, w22, w0, x19
    38b4:	cmp	x19, x22
    38b8:	b.eq	3868 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x140>  // b.none
    38bc:	adrp	x20, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    38c0:	mov	w21, #0x2020                	// #8224
    38c4:	add	x20, x20, #0x0
    38c8:	b	38d8 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x1b0>
    38cc:	add	x19, x19, #0x18
    38d0:	cmp	x22, x19
    38d4:	b.eq	3868 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x140>  // b.none
    38d8:	ldr	x0, [x19, #8]
    38dc:	tst	w0, #0x4
    38e0:	b.ne	38cc <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x1a4>  // b.any
    38e4:	ldr	x2, [x26, #56]
    38e8:	ldr	w1, [x26, #64]
    38ec:	ldr	x3, [x19]
    38f0:	add	x1, x2, x1, lsl #3
    38f4:	cmp	x2, x1
    38f8:	b.eq	3918 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x1f0>  // b.none
    38fc:	nop
    3900:	ldr	x0, [x2]
    3904:	cmp	x3, x0
    3908:	b.eq	38cc <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x1a4>  // b.none
    390c:	add	x2, x2, #0x8
    3910:	cmp	x1, x2
    3914:	b.ne	3900 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x1d8>  // b.any
    3918:	ldr	x0, [x25, #16]
    391c:	sub	x0, x0, x4
    3920:	cmp	x0, #0x1
    3924:	b.ls	3a28 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x300>  // b.plast
    3928:	strh	w21, [x4]
    392c:	mov	x1, x25
    3930:	ldr	x0, [x25, #24]
    3934:	add	x0, x0, #0x2
    3938:	str	x0, [x25, #24]
    393c:	b	3a3c <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x314>
    3940:	stp	x23, x24, [sp, #48]
    3944:	cmp	x0, x1
    3948:	ldr	x20, [x26, #56]
    394c:	str	x27, [sp, #80]
    3950:	b.eq	3bb8 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x490>  // b.none
    3954:	mov	w0, #0x3c                  	// #60
    3958:	strb	w0, [x1]
    395c:	ldr	x0, [x25, #24]
    3960:	add	x0, x0, #0x1
    3964:	str	x0, [x25, #24]
    3968:	ldr	w3, [x26, #80]
    396c:	mov	x27, x20
    3970:	ldr	x0, [x26, #72]
    3974:	add	x19, x20, x19, lsl #3
    3978:	mov	w20, #0x18                  	// #24
    397c:	adrp	x22, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3980:	mov	w23, #0x202c                	// #8236
    3984:	add	x22, x22, #0x0
    3988:	umaddl	x3, w3, w20, x0
    398c:	ldr	x24, [x27], #8
    3990:	cmp	x0, x3
    3994:	b.ne	39a8 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x280>  // b.any
    3998:	b	3a08 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x2e0>
    399c:	add	x0, x0, #0x18
    39a0:	cmp	x3, x0
    39a4:	b.eq	3a08 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x2e0>  // b.none
    39a8:	ldr	x2, [x0]
    39ac:	cmp	x2, x24
    39b0:	b.ne	399c <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x274>  // b.any
    39b4:	mov	x1, x25
    39b8:	mov	w2, #0x0                   	// #0
    39bc:	bl	3218 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb>
    39c0:	cmp	x19, x27
    39c4:	b.eq	3be8 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x4c0>  // b.none
    39c8:	ldp	x0, x1, [x25, #16]
    39cc:	ldr	x24, [x27]
    39d0:	sub	x0, x0, x1
    39d4:	cmp	x0, #0x1
    39d8:	b.ls	3bd0 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x4a8>  // b.plast
    39dc:	strh	w23, [x1]
    39e0:	add	x27, x27, #0x8
    39e4:	ldr	x0, [x25, #24]
    39e8:	add	x0, x0, #0x2
    39ec:	str	x0, [x25, #24]
    39f0:	ldr	w3, [x26, #80]
    39f4:	ldr	x0, [x26, #72]
    39f8:	umaddl	x3, w3, w20, x0
    39fc:	cmp	x0, x3
    3a00:	b.ne	39a8 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x280>  // b.any
    3a04:	nop
    3a08:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3a0c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3a10:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3a14:	add	x3, x3, #0x0
    3a18:	add	x1, x1, #0x0
    3a1c:	add	x0, x0, #0x0
    3a20:	mov	w2, #0x87c                 	// #2172
    3a24:	bl	0 <__assert_fail>
    3a28:	mov	x1, x20
    3a2c:	mov	x0, x25
    3a30:	mov	x2, #0x2                   	// #2
    3a34:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3a38:	mov	x1, x0
    3a3c:	mov	x0, x19
    3a40:	mov	w2, #0x1                   	// #1
    3a44:	bl	3218 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb>
    3a48:	ldr	x4, [x25, #24]
    3a4c:	b	38cc <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x1a4>
    3a50:	mov	x1, x20
    3a54:	mov	x0, x25
    3a58:	mov	x2, #0x2                   	// #2
    3a5c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3a60:	mov	x1, x0
    3a64:	mov	x0, x19
    3a68:	mov	w2, #0x1                   	// #1
    3a6c:	bl	3218 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb>
    3a70:	ldr	x4, [x25, #24]
    3a74:	b	37f8 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0xd0>
    3a78:	mov	x0, x25
    3a7c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3a80:	mov	x2, #0x1                   	// #1
    3a84:	add	x1, x1, #0x0
    3a88:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3a8c:	ldr	x4, [x25, #24]
    3a90:	b	37d0 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0xa8>
    3a94:	mov	x0, x25
    3a98:	mov	x2, #0x2                   	// #2
    3a9c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3aa0:	add	x1, x1, #0x0
    3aa4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3aa8:	ldp	x19, x20, [sp, #16]
    3aac:	ldp	x21, x22, [sp, #32]
    3ab0:	ldp	x25, x26, [sp, #64]
    3ab4:	ldp	x29, x30, [sp], #128
    3ab8:	ret
    3abc:	stp	x23, x24, [sp, #48]
    3ac0:	sub	x1, x1, x0
    3ac4:	cmp	x1, #0x2
    3ac8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3acc:	ldr	x23, [x26, #88]
    3ad0:	b.ls	3c38 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x510>  // b.plast
    3ad4:	add	x1, x1, #0x0
    3ad8:	ldrh	w2, [x1]
    3adc:	ldrb	w1, [x1, #2]
    3ae0:	strh	w2, [x0]
    3ae4:	strb	w1, [x0, #2]
    3ae8:	ldr	x0, [x25, #24]
    3aec:	add	x0, x0, #0x3
    3af0:	str	x0, [x25, #24]
    3af4:	mov	w1, #0x18                  	// #24
    3af8:	mov	x19, x23
    3afc:	adrp	x22, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3b00:	add	x22, x22, #0x0
    3b04:	umaddl	x20, w20, w1, x23
    3b08:	mov	w23, #0x20                  	// #32
    3b0c:	b	3b6c <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x444>
    3b10:	strb	w23, [x0]
    3b14:	mov	x24, x25
    3b18:	ldr	x0, [x25, #24]
    3b1c:	add	x0, x0, #0x1
    3b20:	str	x0, [x25, #24]
    3b24:	ldr	x0, [x19]
    3b28:	mov	x8, x21
    3b2c:	ldr	x0, [x0]
    3b30:	ldr	x1, [x0]
    3b34:	ldr	x1, [x1, #48]
    3b38:	blr	x1
    3b3c:	ldp	x1, x2, [sp, #96]
    3b40:	mov	x0, x24
    3b44:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3b48:	ldr	x0, [sp, #96]
    3b4c:	add	x1, x21, #0x10
    3b50:	cmp	x0, x1
    3b54:	b.eq	3b5c <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x434>  // b.none
    3b58:	bl	0 <_ZdlPv>
    3b5c:	add	x19, x19, #0x18
    3b60:	cmp	x20, x19
    3b64:	ldr	x0, [x25, #24]
    3b68:	b.eq	3bac <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x484>  // b.none
    3b6c:	ldr	x1, [x25, #16]
    3b70:	cmp	x1, x0
    3b74:	b.ne	3b10 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x3e8>  // b.any
    3b78:	mov	x1, x22
    3b7c:	mov	x0, x25
    3b80:	mov	x2, #0x1                   	// #1
    3b84:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3b88:	mov	x24, x0
    3b8c:	b	3b24 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x3fc>
    3b90:	mov	x0, x25
    3b94:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3b98:	mov	x2, #0x2                   	// #2
    3b9c:	add	x1, x1, #0x0
    3ba0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3ba4:	ldr	x0, [x25, #24]
    3ba8:	b	37a8 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x80>
    3bac:	ldr	x1, [x25, #16]
    3bb0:	ldp	x23, x24, [sp, #48]
    3bb4:	b	37b4 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x8c>
    3bb8:	mov	x0, x25
    3bbc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3bc0:	mov	x2, #0x1                   	// #1
    3bc4:	add	x1, x1, #0x0
    3bc8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3bcc:	b	3968 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x240>
    3bd0:	mov	x1, x22
    3bd4:	mov	x0, x25
    3bd8:	mov	x2, #0x2                   	// #2
    3bdc:	add	x27, x27, #0x8
    3be0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3be4:	b	39f0 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x2c8>
    3be8:	ldp	x1, x0, [x25, #16]
    3bec:	cmp	x1, x0
    3bf0:	b.eq	3c1c <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x4f4>  // b.none
    3bf4:	mov	w1, #0x3e                  	// #62
    3bf8:	strb	w1, [x0]
    3bfc:	ldr	x1, [x25, #24]
    3c00:	add	x1, x1, #0x1
    3c04:	str	x1, [x25, #24]
    3c08:	ldr	x0, [x25, #16]
    3c0c:	ldp	x23, x24, [sp, #48]
    3c10:	sub	x0, x0, x1
    3c14:	ldr	x27, [sp, #80]
    3c18:	b	378c <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x64>
    3c1c:	mov	x0, x25
    3c20:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3c24:	mov	x2, #0x1                   	// #1
    3c28:	add	x1, x1, #0x0
    3c2c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3c30:	ldr	x1, [x25, #24]
    3c34:	b	3c08 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x4e0>
    3c38:	add	x1, x1, #0x0
    3c3c:	mov	x0, x25
    3c40:	mov	x2, #0x3                   	// #3
    3c44:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3c48:	ldr	x0, [x25, #24]
    3c4c:	b	3af4 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x3cc>

0000000000003c50 <_ZNK4llvm6Record4dumpEv>:
    3c50:	stp	x29, x30, [sp, #-32]!
    3c54:	mov	x29, sp
    3c58:	str	x19, [sp, #16]
    3c5c:	mov	x19, x0
    3c60:	bl	0 <_ZN4llvm4errsEv>
    3c64:	mov	x1, x19
    3c68:	ldr	x19, [sp, #16]
    3c6c:	ldp	x29, x30, [sp], #32
    3c70:	b	3728 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE>
    3c74:	nop

0000000000003c78 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE>:
    3c78:	stp	x29, x30, [sp, #-64]!
    3c7c:	mov	x29, sp
    3c80:	stp	x21, x22, [sp, #32]
    3c84:	mov	x21, x1
    3c88:	ldp	x1, x2, [x0, #16]
    3c8c:	stp	x19, x20, [sp, #16]
    3c90:	mov	x19, x0
    3c94:	str	x23, [sp, #48]
    3c98:	sub	x1, x1, x2
    3c9c:	cmp	x1, #0x27
    3ca0:	b.ls	3e48 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0x1d0>  // b.plast
    3ca4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3ca8:	add	x0, x0, #0x0
    3cac:	ldp	x4, x5, [x0]
    3cb0:	stp	x4, x5, [x2]
    3cb4:	ldp	x4, x5, [x0, #16]
    3cb8:	stp	x4, x5, [x2, #16]
    3cbc:	ldr	x0, [x0, #32]
    3cc0:	str	x0, [x2, #32]
    3cc4:	ldr	x1, [x19, #24]
    3cc8:	add	x1, x1, #0x28
    3ccc:	str	x1, [x19, #24]
    3cd0:	ldr	x20, [x21, #24]
    3cd4:	add	x22, x21, #0x8
    3cd8:	cmp	x20, x22
    3cdc:	b.eq	3d68 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0xf0>  // b.none
    3ce0:	adrp	x23, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3ce4:	add	x23, x23, #0x0
    3ce8:	b	3d28 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0xb0>
    3cec:	ldrh	w2, [x23, #4]
    3cf0:	ldr	w3, [x23]
    3cf4:	str	w3, [x1]
    3cf8:	strh	w2, [x1, #4]
    3cfc:	ldr	x1, [x19, #24]
    3d00:	add	x1, x1, #0x6
    3d04:	str	x1, [x19, #24]
    3d08:	ldr	x1, [x20, #64]
    3d0c:	bl	3728 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE>
    3d10:	mov	x0, x20
    3d14:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    3d18:	mov	x20, x0
    3d1c:	cmp	x0, x22
    3d20:	ldr	x1, [x19, #24]
    3d24:	b.eq	3d68 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0xf0>  // b.none
    3d28:	ldr	x2, [x19, #16]
    3d2c:	mov	x0, x19
    3d30:	sub	x2, x2, x1
    3d34:	cmp	x2, #0x5
    3d38:	b.hi	3cec <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0x74>  // b.pmore
    3d3c:	mov	x2, #0x6                   	// #6
    3d40:	mov	x1, x23
    3d44:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3d48:	ldr	x1, [x20, #64]
    3d4c:	bl	3728 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE>
    3d50:	mov	x0, x20
    3d54:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    3d58:	mov	x20, x0
    3d5c:	cmp	x0, x22
    3d60:	ldr	x1, [x19, #24]
    3d64:	b.ne	3d28 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0xb0>  // b.any
    3d68:	ldr	x0, [x19, #16]
    3d6c:	sub	x0, x0, x1
    3d70:	cmp	x0, #0x24
    3d74:	b.ls	3e60 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0x1e8>  // b.plast
    3d78:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3d7c:	add	x0, x0, #0x0
    3d80:	ldp	x2, x3, [x0, #16]
    3d84:	stp	x2, x3, [x1, #16]
    3d88:	ldp	x2, x3, [x0]
    3d8c:	stp	x2, x3, [x1]
    3d90:	ldur	x0, [x0, #29]
    3d94:	stur	x0, [x1, #29]
    3d98:	ldr	x0, [x19, #24]
    3d9c:	add	x0, x0, #0x25
    3da0:	str	x0, [x19, #24]
    3da4:	ldr	x20, [x21, #72]
    3da8:	add	x21, x21, #0x38
    3dac:	cmp	x21, x20
    3db0:	b.eq	3e30 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0x1b8>  // b.none
    3db4:	mov	w23, #0x6564                	// #25956
    3db8:	adrp	x22, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3dbc:	movk	w23, #0x2066, lsl #16
    3dc0:	add	x22, x22, #0x0
    3dc4:	b	3df4 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0x17c>
    3dc8:	str	w23, [x2]
    3dcc:	ldr	x1, [x19, #24]
    3dd0:	add	x1, x1, #0x4
    3dd4:	str	x1, [x19, #24]
    3dd8:	ldr	x1, [x20, #64]
    3ddc:	bl	3728 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE>
    3de0:	mov	x0, x20
    3de4:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    3de8:	mov	x20, x0
    3dec:	cmp	x21, x0
    3df0:	b.eq	3e30 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0x1b8>  // b.none
    3df4:	ldp	x1, x2, [x19, #16]
    3df8:	mov	x0, x19
    3dfc:	sub	x1, x1, x2
    3e00:	cmp	x1, #0x3
    3e04:	b.hi	3dc8 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0x150>  // b.pmore
    3e08:	mov	x2, #0x4                   	// #4
    3e0c:	mov	x1, x22
    3e10:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3e14:	ldr	x1, [x20, #64]
    3e18:	bl	3728 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE>
    3e1c:	mov	x0, x20
    3e20:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    3e24:	mov	x20, x0
    3e28:	cmp	x21, x0
    3e2c:	b.ne	3df4 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0x17c>  // b.any
    3e30:	mov	x0, x19
    3e34:	ldp	x19, x20, [sp, #16]
    3e38:	ldp	x21, x22, [sp, #32]
    3e3c:	ldr	x23, [sp, #48]
    3e40:	ldp	x29, x30, [sp], #64
    3e44:	ret
    3e48:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3e4c:	mov	x2, #0x28                  	// #40
    3e50:	add	x1, x1, #0x0
    3e54:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3e58:	ldr	x1, [x19, #24]
    3e5c:	b	3cd0 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0x58>
    3e60:	mov	x0, x19
    3e64:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3e68:	mov	x2, #0x25                  	// #37
    3e6c:	add	x1, x1, #0x0
    3e70:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3e74:	b	3da4 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0x12c>

0000000000003e78 <_ZNK4llvm12RecordKeeper4dumpEv>:
    3e78:	stp	x29, x30, [sp, #-32]!
    3e7c:	mov	x29, sp
    3e80:	str	x19, [sp, #16]
    3e84:	mov	x19, x0
    3e88:	bl	0 <_ZN4llvm4errsEv>
    3e8c:	mov	x1, x19
    3e90:	ldr	x19, [sp, #16]
    3e94:	ldp	x29, x30, [sp], #32
    3e98:	b	3c78 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE>
    3e9c:	nop

0000000000003ea0 <_ZN4llvm10FoldOpInit3getEPNS_4InitES2_S2_S2_S2_PNS_5RecTyE>:
    3ea0:	stp	x29, x30, [sp, #-256]!
    3ea4:	mov	x29, sp
    3ea8:	stp	x19, x20, [sp, #16]
    3eac:	adrp	x19, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3eb0:	stp	x27, x28, [sp, #80]
    3eb4:	add	x27, x19, #0x0
    3eb8:	add	x20, x27, #0x68
    3ebc:	stp	x21, x22, [sp, #32]
    3ec0:	mov	x22, x3
    3ec4:	mov	x21, x4
    3ec8:	stp	x23, x24, [sp, #48]
    3ecc:	mov	x24, x1
    3ed0:	mov	x23, x2
    3ed4:	stp	x25, x26, [sp, #64]
    3ed8:	mov	x25, x0
    3edc:	mov	x26, x5
    3ee0:	ldarb	w0, [x20]
    3ee4:	tbz	w0, #0, 3f98 <_ZN4llvm10FoldOpInit3getEPNS_4InitES2_S2_S2_S2_PNS_5RecTyE+0xf8>
    3ee8:	add	x20, x19, #0x0
    3eec:	add	x19, sp, #0x70
    3ef0:	add	x3, x19, #0x10
    3ef4:	mov	x2, #0x2000000000          	// #137438953472
    3ef8:	mov	x0, x19
    3efc:	mov	x1, x23
    3f00:	stp	x3, x2, [sp, #112]
    3f04:	add	x27, x20, #0x70
    3f08:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    3f0c:	mov	x1, x22
    3f10:	mov	x0, x19
    3f14:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    3f18:	mov	x1, x25
    3f1c:	mov	x0, x19
    3f20:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    3f24:	mov	x1, x24
    3f28:	mov	x0, x19
    3f2c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    3f30:	mov	x1, x21
    3f34:	mov	x0, x19
    3f38:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    3f3c:	mov	x1, x26
    3f40:	mov	x0, x19
    3f44:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    3f48:	str	xzr, [sp, #104]
    3f4c:	mov	x0, x27
    3f50:	mov	x1, x19
    3f54:	add	x2, sp, #0x68
    3f58:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
    3f5c:	cbz	x0, 3fe8 <_ZN4llvm10FoldOpInit3getEPNS_4InitES2_S2_S2_S2_PNS_5RecTyE+0x148>
    3f60:	sub	x20, x0, #0x18
    3f64:	ldr	x0, [sp, #112]
    3f68:	add	x19, x19, #0x10
    3f6c:	cmp	x0, x19
    3f70:	b.eq	3f78 <_ZN4llvm10FoldOpInit3getEPNS_4InitES2_S2_S2_S2_PNS_5RecTyE+0xd8>  // b.none
    3f74:	bl	0 <free>
    3f78:	mov	x0, x20
    3f7c:	ldp	x19, x20, [sp, #16]
    3f80:	ldp	x21, x22, [sp, #32]
    3f84:	ldp	x23, x24, [sp, #48]
    3f88:	ldp	x25, x26, [sp, #64]
    3f8c:	ldp	x27, x28, [sp, #80]
    3f90:	ldp	x29, x30, [sp], #256
    3f94:	ret
    3f98:	mov	x0, x20
    3f9c:	bl	0 <__cxa_guard_acquire>
    3fa0:	cbz	w0, 3ee8 <_ZN4llvm10FoldOpInit3getEPNS_4InitES2_S2_S2_S2_PNS_5RecTyE+0x48>
    3fa4:	add	x28, x27, #0x70
    3fa8:	mov	w1, #0x6                   	// #6
    3fac:	mov	x0, x28
    3fb0:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
    3fb4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3fb8:	mov	x0, x20
    3fbc:	ldr	x1, [x1]
    3fc0:	add	x1, x1, #0x10
    3fc4:	str	x1, [x27, #112]
    3fc8:	bl	0 <__cxa_guard_release>
    3fcc:	mov	x1, x28
    3fd0:	adrp	x2, 0 <__dso_handle>
    3fd4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3fd8:	add	x2, x2, #0x0
    3fdc:	add	x0, x0, #0x0
    3fe0:	bl	0 <__cxa_atexit>
    3fe4:	b	3ee8 <_ZN4llvm10FoldOpInit3getEPNS_4InitES2_S2_S2_S2_PNS_5RecTyE+0x48>
    3fe8:	add	x0, x20, #0x88
    3fec:	mov	w2, #0x4                   	// #4
    3ff0:	mov	x1, #0x48                  	// #72
    3ff4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3ff8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3ffc:	mov	x20, x0
    4000:	ldr	x2, [sp, #104]
    4004:	mov	w3, #0x10                  	// #16
    4008:	ldr	x1, [x1]
    400c:	strh	w3, [x20, #8]
    4010:	stp	x26, xzr, [x20, #16]
    4014:	mov	x0, x27
    4018:	add	x1, x1, #0x10
    401c:	str	x1, [x20]
    4020:	add	x1, x20, #0x18
    4024:	stp	x25, x24, [x20, #32]
    4028:	stp	x23, x22, [x20, #48]
    402c:	str	x21, [x20, #64]
    4030:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
    4034:	b	3f64 <_ZN4llvm10FoldOpInit3getEPNS_4InitES2_S2_S2_S2_PNS_5RecTyE+0xc4>

0000000000004038 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE>:
    4038:	stp	x29, x30, [sp, #-272]!
    403c:	mov	x29, sp
    4040:	stp	x19, x20, [sp, #16]
    4044:	stp	x21, x22, [sp, #32]
    4048:	cbz	x1, 41c4 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x18c>
    404c:	mov	x22, x0
    4050:	add	x20, sp, #0x50
    4054:	mov	x0, x1
    4058:	mov	x3, #0x400000000           	// #17179869184
    405c:	add	x1, x20, #0x10
    4060:	stp	x1, x3, [sp, #80]
    4064:	lsl	x19, x0, #3
    4068:	ldr	x2, [x22]
    406c:	ldr	x21, [x2, #104]
    4070:	str	x23, [sp, #48]
    4074:	sbfx	x23, x0, #0, #61
    4078:	cmp	x23, #0x4
    407c:	b.hi	41a0 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x168>  // b.pmore
    4080:	mov	x0, x1
    4084:	cbz	x19, 420c <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x1d4>
    4088:	mov	x2, x19
    408c:	mov	x1, x22
    4090:	bl	0 <memcpy>
    4094:	ldr	w2, [sp, #88]
    4098:	ldr	w0, [sp, #92]
    409c:	add	x2, x23, x2
    40a0:	cmp	x2, x0
    40a4:	b.hi	43e4 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x3ac>  // b.pmore
    40a8:	ldr	x22, [sp, #80]
    40ac:	lsl	x19, x2, #3
    40b0:	str	w2, [sp, #88]
    40b4:	add	x23, x22, x19
    40b8:	cmp	x23, x22
    40bc:	b.eq	4120 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0xe8>  // b.none
    40c0:	asr	x0, x19, #3
    40c4:	mov	w2, #0x3f                  	// #63
    40c8:	clz	x0, x0
    40cc:	mov	x1, x23
    40d0:	sub	w2, w2, w0
    40d4:	mov	w3, #0x0                   	// #0
    40d8:	mov	x0, x22
    40dc:	sbfiz	x2, x2, #1, #32
    40e0:	bl	14b8 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_>
    40e4:	cmp	x19, #0x80
    40e8:	b.ls	421c <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x1e4>  // b.plast
    40ec:	add	x19, x22, #0x80
    40f0:	mov	x0, x22
    40f4:	mov	x1, x19
    40f8:	bl	1088 <_ZSt16__insertion_sortIPPN4llvm6RecordEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_.isra.0>
    40fc:	cmp	x23, x19
    4100:	b.eq	4118 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0xe0>  // b.none
    4104:	mov	x0, x19
    4108:	add	x19, x19, #0x8
    410c:	bl	e40 <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_.isra.0>
    4110:	cmp	x23, x19
    4114:	b.ne	4104 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0xcc>  // b.any
    4118:	ldr	w2, [sp, #88]
    411c:	ldr	x22, [sp, #80]
    4120:	add	x19, sp, #0x80
    4124:	add	x4, x19, #0x10
    4128:	mov	x3, #0x2000000000          	// #137438953472
    412c:	mov	x1, x22
    4130:	mov	w2, w2
    4134:	mov	x0, x19
    4138:	add	x21, x21, #0x60
    413c:	stp	x4, x3, [sp, #128]
    4140:	bl	460 <_ZL18ProfileRecordRecTyRN4llvm16FoldingSetNodeIDENS_8ArrayRefIPNS_6RecordEEE>
    4144:	mov	x1, x19
    4148:	mov	x0, x21
    414c:	add	x2, sp, #0x48
    4150:	str	xzr, [sp, #72]
    4154:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
    4158:	cbz	x0, 428c <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x254>
    415c:	sub	x22, x0, #0x18
    4160:	ldr	x0, [sp, #128]
    4164:	add	x19, x19, #0x10
    4168:	cmp	x0, x19
    416c:	b.eq	4174 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x13c>  // b.none
    4170:	bl	0 <free>
    4174:	ldr	x0, [sp, #80]
    4178:	add	x20, x20, #0x10
    417c:	cmp	x0, x20
    4180:	b.eq	41f4 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x1bc>  // b.none
    4184:	bl	0 <free>
    4188:	ldr	x23, [sp, #48]
    418c:	mov	x0, x22
    4190:	ldp	x19, x20, [sp, #16]
    4194:	ldp	x21, x22, [sp, #32]
    4198:	ldp	x29, x30, [sp], #272
    419c:	ret
    41a0:	mov	x2, x23
    41a4:	mov	x0, x20
    41a8:	mov	x3, #0x8                   	// #8
    41ac:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    41b0:	ldr	w2, [sp, #88]
    41b4:	cbz	x19, 4098 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x60>
    41b8:	ldr	x0, [sp, #80]
    41bc:	add	x0, x0, x2, lsl #3
    41c0:	b	4088 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x50>
    41c4:	adrp	x19, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    41c8:	add	x20, x19, #0x0
    41cc:	add	x21, x20, #0x118
    41d0:	ldarb	w0, [x21]
    41d4:	tbz	w0, #0, 4234 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x1fc>
    41d8:	add	x19, x19, #0x0
    41dc:	add	x22, x19, #0xf0
    41e0:	mov	x0, x22
    41e4:	ldp	x19, x20, [sp, #16]
    41e8:	ldp	x21, x22, [sp, #32]
    41ec:	ldp	x29, x30, [sp], #272
    41f0:	ret
    41f4:	mov	x0, x22
    41f8:	ldp	x19, x20, [sp, #16]
    41fc:	ldp	x21, x22, [sp, #32]
    4200:	ldr	x23, [sp, #48]
    4204:	ldp	x29, x30, [sp], #272
    4208:	ret
    420c:	mov	w2, w23
    4210:	mov	x22, x1
    4214:	str	w23, [sp, #88]
    4218:	b	4120 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0xe8>
    421c:	mov	x0, x22
    4220:	mov	x1, x23
    4224:	bl	1088 <_ZSt16__insertion_sortIPPN4llvm6RecordEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_.isra.0>
    4228:	ldr	w2, [sp, #88]
    422c:	ldr	x22, [sp, #80]
    4230:	b	4120 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0xe8>
    4234:	mov	x0, x21
    4238:	bl	0 <__cxa_guard_acquire>
    423c:	cbz	w0, 41d8 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x1a0>
    4240:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4244:	mov	w2, #0x7                   	// #7
    4248:	str	w2, [x20, #248]
    424c:	add	x19, x20, #0xf0
    4250:	ldr	x1, [x1]
    4254:	stp	xzr, xzr, [x20, #256]
    4258:	mov	x0, x21
    425c:	add	x1, x1, #0x10
    4260:	str	x1, [x20, #240]
    4264:	str	wzr, [x20, #272]
    4268:	mov	x22, x19
    426c:	bl	0 <__cxa_guard_release>
    4270:	mov	x1, x19
    4274:	adrp	x2, 0 <__dso_handle>
    4278:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    427c:	add	x2, x2, #0x0
    4280:	add	x0, x0, #0x0
    4284:	bl	0 <__cxa_atexit>
    4288:	b	418c <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x154>
    428c:	ldr	w1, [sp, #88]
    4290:	mov	w8, w1
    4294:	cbz	w1, 4358 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x320>
    4298:	ldr	x7, [sp, #80]
    429c:	mov	x6, #0x0                   	// #0
    42a0:	mov	w10, #0x18                  	// #24
    42a4:	mov	w9, w6
    42a8:	mov	x5, #0x0                   	// #0
    42ac:	nop
    42b0:	cmp	w9, w5
    42b4:	b.eq	4320 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x2e8>  // b.none
    42b8:	cmp	x6, x8
    42bc:	b.cs	43c4 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x38c>  // b.hs, b.nlast
    42c0:	cmp	x8, x5
    42c4:	ldr	x2, [x7, x6, lsl #3]
    42c8:	b.ls	43c4 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x38c>  // b.plast
    42cc:	ldr	w3, [x2, #96]
    42d0:	ldr	x0, [x2, #88]
    42d4:	ldr	x4, [x7, x5, lsl #3]
    42d8:	umaddl	x3, w3, w10, x0
    42dc:	cmp	x0, x3
    42e0:	b.ne	42f4 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x2bc>  // b.any
    42e4:	b	4320 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x2e8>
    42e8:	add	x0, x0, #0x18
    42ec:	cmp	x3, x0
    42f0:	b.eq	4320 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x2e8>  // b.none
    42f4:	ldr	x2, [x0]
    42f8:	cmp	x4, x2
    42fc:	b.ne	42e8 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x2b0>  // b.any
    4300:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4304:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4308:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    430c:	add	x3, x3, #0x0
    4310:	add	x1, x1, #0x0
    4314:	add	x0, x0, #0x0
    4318:	mov	w2, #0xb7                  	// #183
    431c:	bl	0 <__assert_fail>
    4320:	add	x5, x5, #0x1
    4324:	cmp	w1, w5
    4328:	b.hi	42b0 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x278>  // b.pmore
    432c:	ldr	x0, [x7]
    4330:	cmp	x6, x8
    4334:	ldr	x2, [x0, #104]
    4338:	b.cs	43c4 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x38c>  // b.hs, b.nlast
    433c:	ldr	x0, [x7, x6, lsl #3]
    4340:	ldr	x0, [x0, #104]
    4344:	cmp	x2, x0
    4348:	b.ne	4404 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x3cc>  // b.any
    434c:	add	x6, x6, #0x1
    4350:	cmp	w1, w6
    4354:	b.hi	42a4 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x26c>  // b.pmore
    4358:	mov	x2, #0x28                  	// #40
    435c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4360:	add	x0, x0, #0x0
    4364:	add	x1, x2, w1, uxtw #3
    4368:	add	x0, x0, #0x88
    436c:	mov	w2, #0x3                   	// #3
    4370:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4374:	mov	x22, x0
    4378:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    437c:	ldr	w3, [sp, #88]
    4380:	mov	w2, #0x7                   	// #7
    4384:	ldr	x0, [x1]
    4388:	str	w2, [x22, #8]
    438c:	stp	xzr, xzr, [x22, #16]
    4390:	ubfiz	x2, x3, #3, #32
    4394:	add	x0, x0, #0x10
    4398:	str	x0, [x22]
    439c:	str	w3, [x22, #32]
    43a0:	cbz	x2, 43b0 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x378>
    43a4:	ldr	x1, [sp, #80]
    43a8:	add	x0, x22, #0x28
    43ac:	bl	0 <memmove>
    43b0:	ldr	x2, [sp, #72]
    43b4:	mov	x0, x21
    43b8:	add	x1, x22, #0x18
    43bc:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
    43c0:	b	4160 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x128>
    43c4:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    43c8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    43cc:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    43d0:	add	x3, x3, #0x0
    43d4:	add	x1, x1, #0x0
    43d8:	add	x0, x0, #0x0
    43dc:	mov	w2, #0x95                  	// #149
    43e0:	bl	0 <__assert_fail>
    43e4:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    43e8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    43ec:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    43f0:	add	x3, x3, #0x0
    43f4:	add	x1, x1, #0x0
    43f8:	add	x0, x0, #0x0
    43fc:	mov	w2, #0x43                  	// #67
    4400:	bl	0 <__assert_fail>
    4404:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4408:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    440c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4410:	add	x3, x3, #0x0
    4414:	add	x1, x1, #0x0
    4418:	add	x0, x0, #0x0
    441c:	mov	w2, #0xb9                  	// #185
    4420:	bl	0 <__assert_fail>
    4424:	nop

0000000000004428 <_ZN4llvm6Record7getTypeEv>:
    4428:	stp	x29, x30, [sp, #-80]!
    442c:	mov	x2, #0x400000000           	// #17179869184
    4430:	mov	x29, sp
    4434:	add	x1, sp, #0x20
    4438:	stp	x19, x20, [sp, #16]
    443c:	add	x20, x1, #0x10
    4440:	stp	x20, x2, [sp, #32]
    4444:	bl	3610 <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE>
    4448:	ldr	w1, [sp, #40]
    444c:	ldr	x0, [sp, #32]
    4450:	bl	4038 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE>
    4454:	mov	x19, x0
    4458:	ldr	x1, [sp, #32]
    445c:	cmp	x1, x20
    4460:	b.eq	446c <_ZN4llvm6Record7getTypeEv+0x44>  // b.none
    4464:	mov	x0, x1
    4468:	bl	0 <free>
    446c:	mov	x0, x19
    4470:	ldp	x19, x20, [sp, #16]
    4474:	ldp	x29, x30, [sp], #80
    4478:	ret
    447c:	nop

0000000000004480 <_ZN4llvm7DefInitC1EPNS_6RecordE>:
    4480:	stp	x29, x30, [sp, #-32]!
    4484:	mov	x29, sp
    4488:	stp	x19, x20, [sp, #16]
    448c:	mov	x19, x0
    4490:	mov	x20, x1
    4494:	mov	x0, x1
    4498:	bl	4428 <_ZN4llvm6Record7getTypeEv>
    449c:	adrp	x2, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    44a0:	mov	w1, #0x6                   	// #6
    44a4:	strh	w1, [x19, #8]
    44a8:	ldr	x2, [x2]
    44ac:	stp	x0, x20, [x19, #16]
    44b0:	add	x2, x2, #0x10
    44b4:	str	x2, [x19]
    44b8:	ldp	x19, x20, [sp, #16]
    44bc:	ldp	x29, x30, [sp], #32
    44c0:	ret
    44c4:	nop

00000000000044c8 <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE>:
    44c8:	stp	x29, x30, [sp, #-240]!
    44cc:	mov	x29, sp
    44d0:	stp	x19, x20, [sp, #16]
    44d4:	stp	x23, x24, [sp, #48]
    44d8:	adrp	x24, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    44dc:	add	x20, x24, #0x0
    44e0:	mov	x23, x1
    44e4:	add	x19, x20, #0x120
    44e8:	stp	x21, x22, [sp, #32]
    44ec:	mov	x22, x0
    44f0:	mov	x21, x2
    44f4:	ldarb	w0, [x19]
    44f8:	tbz	w0, #0, 456c <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE+0xa4>
    44fc:	add	x20, sp, #0x60
    4500:	mov	x4, #0x2000000000          	// #137438953472
    4504:	add	x5, x20, #0x10
    4508:	mov	x3, x21
    450c:	mov	x0, x20
    4510:	mov	x2, x23
    4514:	mov	x1, x22
    4518:	add	x19, x24, #0x0
    451c:	stp	x5, x4, [sp, #96]
    4520:	bl	328 <_ZL17ProfileVarDefInitRN4llvm16FoldingSetNodeIDEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE>
    4524:	mov	x1, x20
    4528:	add	x0, x19, #0x128
    452c:	add	x2, sp, #0x50
    4530:	str	xzr, [sp, #80]
    4534:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
    4538:	cbz	x0, 45c4 <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE+0xfc>
    453c:	sub	x19, x0, #0x18
    4540:	ldr	x0, [sp, #96]
    4544:	add	x20, x20, #0x10
    4548:	cmp	x0, x20
    454c:	b.eq	4554 <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE+0x8c>  // b.none
    4550:	bl	0 <free>
    4554:	mov	x0, x19
    4558:	ldp	x19, x20, [sp, #16]
    455c:	ldp	x21, x22, [sp, #32]
    4560:	ldp	x23, x24, [sp, #48]
    4564:	ldp	x29, x30, [sp], #240
    4568:	ret
    456c:	mov	x0, x19
    4570:	bl	0 <__cxa_guard_acquire>
    4574:	cbz	w0, 44fc <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE+0x34>
    4578:	str	x25, [sp, #64]
    457c:	add	x25, x20, #0x128
    4580:	mov	x0, x25
    4584:	mov	w1, #0x6                   	// #6
    4588:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
    458c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4590:	mov	x0, x19
    4594:	ldr	x1, [x1]
    4598:	add	x1, x1, #0x10
    459c:	str	x1, [x20, #296]
    45a0:	bl	0 <__cxa_guard_release>
    45a4:	mov	x1, x25
    45a8:	adrp	x2, 0 <__dso_handle>
    45ac:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    45b0:	add	x2, x2, #0x0
    45b4:	add	x0, x0, #0x0
    45b8:	bl	0 <__cxa_atexit>
    45bc:	ldr	x25, [sp, #64]
    45c0:	b	44fc <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE+0x34>
    45c4:	mov	w2, #0x3                   	// #3
    45c8:	str	x25, [sp, #64]
    45cc:	lsl	x25, x21, #3
    45d0:	add	x0, x19, #0x88
    45d4:	add	x1, x25, #0x38
    45d8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    45dc:	mov	x1, #0x1                   	// #1
    45e0:	mov	x19, x0
    45e4:	add	x0, sp, #0x58
    45e8:	str	x22, [sp, #88]
    45ec:	bl	4038 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE>
    45f0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    45f4:	mov	w3, #0x16                  	// #22
    45f8:	ldr	x2, [sp, #88]
    45fc:	strh	w3, [x19, #8]
    4600:	ldr	x1, [x1]
    4604:	stp	x0, xzr, [x19, #16]
    4608:	add	x1, x1, #0x10
    460c:	str	x1, [x19]
    4610:	stp	x2, xzr, [x19, #32]
    4614:	str	w21, [x19, #48]
    4618:	cbz	x25, 462c <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE+0x164>
    461c:	mov	x2, x25
    4620:	mov	x1, x23
    4624:	add	x0, x19, #0x38
    4628:	bl	0 <memcpy>
    462c:	ldr	x2, [sp, #80]
    4630:	add	x0, x24, #0x0
    4634:	add	x0, x0, #0x128
    4638:	add	x1, x19, #0x18
    463c:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
    4640:	ldr	x25, [sp, #64]
    4644:	b	4540 <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE+0x78>

0000000000004648 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE>:
    4648:	stp	x29, x30, [sp, #-256]!
    464c:	cmp	x1, x3
    4650:	mov	x29, sp
    4654:	stp	x19, x20, [sp, #16]
    4658:	stp	x21, x22, [sp, #32]
    465c:	stp	x23, x24, [sp, #48]
    4660:	stp	x25, x26, [sp, #64]
    4664:	b.ne	47f8 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0x1b0>  // b.any
    4668:	adrp	x24, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    466c:	add	x20, x24, #0x0
    4670:	mov	x21, x1
    4674:	mov	x22, x3
    4678:	mov	x25, x0
    467c:	mov	x23, x2
    4680:	mov	x26, x4
    4684:	add	x19, x20, #0x140
    4688:	ldarb	w0, [x19]
    468c:	tbz	w0, #0, 470c <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0xc4>
    4690:	add	x20, sp, #0x70
    4694:	mov	x6, #0x2000000000          	// #137438953472
    4698:	add	x7, x20, #0x10
    469c:	mov	x5, x26
    46a0:	mov	x3, x23
    46a4:	mov	x4, x22
    46a8:	mov	x0, x20
    46ac:	mov	x1, x25
    46b0:	mov	x2, x21
    46b4:	add	x19, x24, #0x0
    46b8:	stp	x7, x6, [sp, #112]
    46bc:	bl	4f8 <_ZL17ProfileCondOpInitRN4llvm16FoldingSetNodeIDENS_8ArrayRefIPNS_4InitEEES5_PKNS_5RecTyE>
    46c0:	mov	x1, x20
    46c4:	add	x0, x19, #0x148
    46c8:	add	x2, sp, #0x68
    46cc:	str	xzr, [sp, #104]
    46d0:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
    46d4:	cbz	x0, 4764 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0x11c>
    46d8:	sub	x19, x0, #0x18
    46dc:	ldr	x0, [sp, #112]
    46e0:	add	x20, x20, #0x10
    46e4:	cmp	x0, x20
    46e8:	b.eq	46f0 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0xa8>  // b.none
    46ec:	bl	0 <free>
    46f0:	mov	x0, x19
    46f4:	ldp	x19, x20, [sp, #16]
    46f8:	ldp	x21, x22, [sp, #32]
    46fc:	ldp	x23, x24, [sp, #48]
    4700:	ldp	x25, x26, [sp, #64]
    4704:	ldp	x29, x30, [sp], #256
    4708:	ret
    470c:	mov	x0, x19
    4710:	bl	0 <__cxa_guard_acquire>
    4714:	cbz	w0, 4690 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0x48>
    4718:	str	x27, [sp, #80]
    471c:	add	x27, x20, #0x148
    4720:	mov	x0, x27
    4724:	mov	w1, #0x6                   	// #6
    4728:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
    472c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4730:	mov	x0, x19
    4734:	ldr	x1, [x1]
    4738:	add	x1, x1, #0x10
    473c:	str	x1, [x20, #328]
    4740:	bl	0 <__cxa_guard_release>
    4744:	mov	x1, x27
    4748:	adrp	x2, 0 <__dso_handle>
    474c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4750:	add	x2, x2, #0x0
    4754:	add	x0, x0, #0x0
    4758:	bl	0 <__cxa_atexit>
    475c:	ldr	x27, [sp, #80]
    4760:	b	4690 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0x48>
    4764:	lsl	x1, x21, #4
    4768:	add	x0, x19, #0x88
    476c:	add	x1, x1, #0x30
    4770:	mov	w2, #0x3                   	// #3
    4774:	str	x27, [sp, #80]
    4778:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    477c:	mov	x19, x0
    4780:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4784:	mov	w1, #0xf                   	// #15
    4788:	cmp	xzr, x21, lsl #3
    478c:	ldr	x0, [x0]
    4790:	strh	w1, [x19, #8]
    4794:	stp	x26, xzr, [x19, #16]
    4798:	lsl	x27, x21, #3
    479c:	add	x0, x0, #0x10
    47a0:	str	x0, [x19]
    47a4:	str	w21, [x19, #32]
    47a8:	str	x26, [x19, #40]
    47ac:	b.eq	47c0 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0x178>  // b.none
    47b0:	mov	x1, x25
    47b4:	mov	x2, x27
    47b8:	add	x0, x19, #0x30
    47bc:	bl	0 <memcpy>
    47c0:	cmp	xzr, x22, lsl #3
    47c4:	lsl	x2, x22, #3
    47c8:	b.eq	47dc <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0x194>  // b.none
    47cc:	add	x0, x27, #0x30
    47d0:	mov	x1, x23
    47d4:	add	x0, x19, x0
    47d8:	bl	0 <memcpy>
    47dc:	ldr	x2, [sp, #104]
    47e0:	add	x0, x24, #0x0
    47e4:	add	x0, x0, #0x148
    47e8:	add	x1, x19, #0x18
    47ec:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
    47f0:	ldr	x27, [sp, #80]
    47f4:	b	46dc <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0x94>
    47f8:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    47fc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4800:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4804:	add	x3, x3, #0x0
    4808:	add	x1, x1, #0x0
    480c:	add	x0, x0, #0x0
    4810:	mov	w2, #0x710                 	// #1808
    4814:	str	x27, [sp, #80]
    4818:	bl	0 <__assert_fail>
    481c:	nop

0000000000004820 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE>:
    4820:	stp	x29, x30, [sp, #-256]!
    4824:	mov	x29, sp
    4828:	stp	x19, x20, [sp, #16]
    482c:	stp	x25, x26, [sp, #64]
    4830:	adrp	x25, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4834:	add	x20, x25, #0x0
    4838:	mov	x26, x5
    483c:	add	x19, x20, #0x160
    4840:	stp	x21, x22, [sp, #32]
    4844:	mov	x22, x0
    4848:	mov	x21, x1
    484c:	stp	x23, x24, [sp, #48]
    4850:	mov	x24, x2
    4854:	mov	x23, x4
    4858:	stp	x27, x28, [sp, #80]
    485c:	mov	x27, x3
    4860:	ldarb	w0, [x19]
    4864:	tbz	w0, #0, 48ec <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE+0xcc>
    4868:	add	x20, sp, #0x70
    486c:	mov	x7, #0x2000000000          	// #137438953472
    4870:	add	x8, x20, #0x10
    4874:	mov	x5, x23
    4878:	mov	x6, x26
    487c:	mov	x3, x24
    4880:	mov	x4, x27
    4884:	mov	x0, x20
    4888:	mov	x2, x21
    488c:	mov	x1, x22
    4890:	add	x19, x25, #0x0
    4894:	stp	x8, x7, [sp, #112]
    4898:	bl	390 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE>
    489c:	mov	x1, x20
    48a0:	add	x0, x19, #0x168
    48a4:	add	x2, sp, #0x68
    48a8:	str	xzr, [sp, #104]
    48ac:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
    48b0:	cbz	x0, 493c <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE+0x11c>
    48b4:	sub	x19, x0, #0x18
    48b8:	ldr	x0, [sp, #112]
    48bc:	add	x20, x20, #0x10
    48c0:	cmp	x0, x20
    48c4:	b.eq	48cc <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE+0xac>  // b.none
    48c8:	bl	0 <free>
    48cc:	mov	x0, x19
    48d0:	ldp	x19, x20, [sp, #16]
    48d4:	ldp	x21, x22, [sp, #32]
    48d8:	ldp	x23, x24, [sp, #48]
    48dc:	ldp	x25, x26, [sp, #64]
    48e0:	ldp	x27, x28, [sp, #80]
    48e4:	ldp	x29, x30, [sp], #256
    48e8:	ret
    48ec:	mov	x0, x19
    48f0:	bl	0 <__cxa_guard_acquire>
    48f4:	cbz	w0, 4868 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE+0x48>
    48f8:	add	x28, x20, #0x168
    48fc:	mov	w1, #0x6                   	// #6
    4900:	mov	x0, x28
    4904:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
    4908:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    490c:	mov	x0, x19
    4910:	ldr	x1, [x1]
    4914:	add	x1, x1, #0x10
    4918:	str	x1, [x20, #360]
    491c:	bl	0 <__cxa_guard_release>
    4920:	mov	x1, x28
    4924:	adrp	x2, 0 <__dso_handle>
    4928:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    492c:	add	x2, x2, #0x0
    4930:	add	x0, x0, #0x0
    4934:	bl	0 <__cxa_atexit>
    4938:	b	4868 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE+0x48>
    493c:	add	x1, x27, x26
    4940:	mov	w2, #0x3                   	// #3
    4944:	add	x0, x19, #0x88
    4948:	lsl	x1, x1, x2
    494c:	add	x1, x1, #0x38
    4950:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4954:	mov	x19, x0
    4958:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    495c:	adrp	x1, 3b0 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE+0x20>
    4960:	mov	w2, #0x5                   	// #5
    4964:	cmp	xzr, x27, lsl #3
    4968:	ldr	x0, [x0]
    496c:	strh	w2, [x19, #8]
    4970:	ldr	x1, [x1]
    4974:	add	x0, x0, #0x10
    4978:	str	x0, [x19]
    497c:	lsl	x2, x27, #3
    4980:	stp	x1, xzr, [x19, #16]
    4984:	stp	x22, x21, [x19, #32]
    4988:	stp	w27, w26, [x19, #48]
    498c:	b.eq	499c <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE+0x17c>  // b.none
    4990:	mov	x1, x24
    4994:	add	x0, x19, #0x38
    4998:	bl	0 <memcpy>
    499c:	cmp	xzr, x26, lsl #3
    49a0:	lsl	x2, x26, #3
    49a4:	b.eq	49bc <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE+0x19c>  // b.none
    49a8:	ubfiz	x0, x27, #3, #32
    49ac:	mov	x1, x23
    49b0:	add	x0, x0, #0x38
    49b4:	add	x0, x19, x0
    49b8:	bl	0 <memcpy>
    49bc:	ldr	x2, [sp, #104]
    49c0:	add	x0, x25, #0x0
    49c4:	add	x0, x0, #0x168
    49c8:	add	x1, x19, #0x18
    49cc:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
    49d0:	b	48b8 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE+0x98>
    49d4:	nop

00000000000049d8 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE>:
    49d8:	stp	x29, x30, [sp, #-240]!
    49dc:	mov	x4, #0x800000000           	// #34359738368
    49e0:	mov	x29, sp
    49e4:	stp	x21, x22, [sp, #32]
    49e8:	add	x21, sp, #0x50
    49ec:	add	x22, sp, #0xa0
    49f0:	stp	x19, x20, [sp, #16]
    49f4:	mov	x19, x2
    49f8:	add	x20, x22, #0x10
    49fc:	add	x2, x21, #0x10
    4a00:	stp	x23, x24, [sp, #48]
    4a04:	mov	x23, x0
    4a08:	stp	x25, x26, [sp, #64]
    4a0c:	add	x26, x19, x3, lsl #4
    4a10:	cmp	x26, x19
    4a14:	stp	x2, x4, [sp, #80]
    4a18:	mov	x24, x1
    4a1c:	stp	x20, x4, [sp, #160]
    4a20:	b.eq	4b4c <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0x174>  // b.none
    4a24:	mov	x25, x2
    4a28:	mov	w3, #0x0                   	// #0
    4a2c:	nop
    4a30:	ldr	x0, [x19]
    4a34:	str	x0, [x2, w3, uxtw #3]
    4a38:	ldp	w2, w1, [sp, #88]
    4a3c:	mov	w0, w2
    4a40:	add	x0, x0, #0x1
    4a44:	cmp	x0, x1
    4a48:	b.hi	4b5c <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0x184>  // b.pmore
    4a4c:	ldp	w0, w1, [sp, #168]
    4a50:	add	w2, w2, #0x1
    4a54:	str	w2, [sp, #88]
    4a58:	cmp	w0, w1
    4a5c:	b.cs	4b30 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0x158>  // b.hs, b.nlast
    4a60:	ldr	x1, [sp, #160]
    4a64:	ldr	x2, [x19, #8]
    4a68:	str	x2, [x1, w0, uxtw #3]
    4a6c:	ldp	w5, w1, [sp, #168]
    4a70:	mov	w0, w5
    4a74:	add	x0, x0, #0x1
    4a78:	cmp	x0, x1
    4a7c:	b.hi	4b5c <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0x184>  // b.pmore
    4a80:	add	w5, w5, #0x1
    4a84:	str	w5, [sp, #168]
    4a88:	add	x19, x19, #0x10
    4a8c:	ldr	w3, [sp, #88]
    4a90:	cmp	x19, x26
    4a94:	b.eq	4acc <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0xf4>  // b.none
    4a98:	ldr	w0, [sp, #92]
    4a9c:	cmp	w0, w3
    4aa0:	b.ls	4aac <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0xd4>  // b.plast
    4aa4:	ldr	x2, [sp, #80]
    4aa8:	b	4a30 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0x58>
    4aac:	mov	x3, #0x8                   	// #8
    4ab0:	mov	x2, #0x0                   	// #0
    4ab4:	mov	x1, x25
    4ab8:	mov	x0, x21
    4abc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4ac0:	ldr	w3, [sp, #88]
    4ac4:	ldr	x2, [sp, #80]
    4ac8:	b	4a30 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0x58>
    4acc:	ldr	x2, [sp, #80]
    4ad0:	mov	w3, w3
    4ad4:	ldr	x4, [sp, #160]
    4ad8:	mov	x1, x24
    4adc:	mov	x0, x23
    4ae0:	bl	4820 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE>
    4ae4:	ldr	x1, [sp, #160]
    4ae8:	add	x22, x22, #0x10
    4aec:	mov	x19, x0
    4af0:	cmp	x1, x22
    4af4:	b.eq	4b00 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0x128>  // b.none
    4af8:	mov	x0, x1
    4afc:	bl	0 <free>
    4b00:	ldr	x0, [sp, #80]
    4b04:	add	x21, x21, #0x10
    4b08:	cmp	x0, x21
    4b0c:	b.eq	4b14 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0x13c>  // b.none
    4b10:	bl	0 <free>
    4b14:	mov	x0, x19
    4b18:	ldp	x19, x20, [sp, #16]
    4b1c:	ldp	x21, x22, [sp, #32]
    4b20:	ldp	x23, x24, [sp, #48]
    4b24:	ldp	x25, x26, [sp, #64]
    4b28:	ldp	x29, x30, [sp], #240
    4b2c:	ret
    4b30:	mov	x0, x22
    4b34:	mov	x1, x20
    4b38:	mov	x3, #0x8                   	// #8
    4b3c:	mov	x2, #0x0                   	// #0
    4b40:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4b44:	ldr	w0, [sp, #168]
    4b48:	b	4a60 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0x88>
    4b4c:	mov	x4, x20
    4b50:	mov	x3, #0x0                   	// #0
    4b54:	mov	x5, #0x0                   	// #0
    4b58:	b	4ad8 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0x100>
    4b5c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4b60:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4b64:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4b68:	add	x3, x3, #0x0
    4b6c:	add	x1, x1, #0x0
    4b70:	add	x0, x0, #0x0
    4b74:	mov	w2, #0x43                  	// #67
    4b78:	bl	0 <__assert_fail>
    4b7c:	nop

0000000000004b80 <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE>:
    4b80:	stp	x29, x30, [sp, #-176]!
    4b84:	mov	x2, #0x800000000           	// #34359738368
    4b88:	mov	x29, sp
    4b8c:	stp	x23, x24, [sp, #48]
    4b90:	mov	x23, x0
    4b94:	add	x24, sp, #0x60
    4b98:	add	x0, x24, #0x10
    4b9c:	stp	x19, x20, [sp, #16]
    4ba0:	stp	x21, x22, [sp, #32]
    4ba4:	mov	x22, x1
    4ba8:	stp	x25, x26, [sp, #64]
    4bac:	stp	x0, x2, [sp, #96]
    4bb0:	ldr	w2, [x23, #48]
    4bb4:	cmp	w2, #0x8
    4bb8:	mov	w2, w2
    4bbc:	b.hi	4ce0 <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE+0x160>  // b.pmore
    4bc0:	add	x26, x23, #0x38
    4bc4:	add	x21, x26, x2, lsl #3
    4bc8:	cmp	x21, x26
    4bcc:	b.eq	4d04 <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE+0x184>  // b.none
    4bd0:	add	x25, x24, #0x10
    4bd4:	mov	w20, #0x0                   	// #0
    4bd8:	str	x27, [sp, #80]
    4bdc:	nop
    4be0:	ldr	x27, [x26]
    4be4:	mov	x1, x22
    4be8:	mov	x0, x27
    4bec:	ldr	x2, [x27]
    4bf0:	ldr	x2, [x2, #96]
    4bf4:	blr	x2
    4bf8:	mov	x19, x0
    4bfc:	ldp	w1, w0, [sp, #104]
    4c00:	cmp	w1, w0
    4c04:	b.cs	4cc4 <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE+0x144>  // b.hs, b.nlast
    4c08:	ldr	x0, [sp, #96]
    4c0c:	str	x19, [x0, w1, uxtw #3]
    4c10:	ldp	w2, w1, [sp, #104]
    4c14:	mov	w0, w2
    4c18:	add	x0, x0, #0x1
    4c1c:	cmp	x0, x1
    4c20:	b.hi	4d0c <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE+0x18c>  // b.pmore
    4c24:	cmp	x19, x27
    4c28:	add	w2, w2, #0x1
    4c2c:	str	w2, [sp, #104]
    4c30:	cset	w0, ne  // ne = any
    4c34:	add	x26, x26, #0x8
    4c38:	orr	w20, w20, w0
    4c3c:	cmp	x21, x26
    4c40:	b.ne	4be0 <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE+0x60>  // b.any
    4c44:	ldr	x27, [sp, #80]
    4c48:	mov	x1, x22
    4c4c:	ldr	x0, [x23, #32]
    4c50:	mov	x19, x23
    4c54:	ldr	x2, [x0]
    4c58:	ldr	x2, [x2, #96]
    4c5c:	blr	x2
    4c60:	ldr	x1, [x23, #32]
    4c64:	cmp	w20, #0x0
    4c68:	ccmp	x1, x0, #0x0, eq  // eq = none
    4c6c:	b.eq	4c94 <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE+0x114>  // b.none
    4c70:	ldp	w4, w5, [x23, #48]
    4c74:	mov	x6, #0x38                  	// #56
    4c78:	ldr	w3, [sp, #104]
    4c7c:	ldr	x1, [x23, #40]
    4c80:	add	x4, x6, w4, uxtw #3
    4c84:	ldr	x2, [sp, #96]
    4c88:	add	x4, x23, x4
    4c8c:	bl	4820 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE>
    4c90:	mov	x19, x0
    4c94:	ldr	x0, [sp, #96]
    4c98:	add	x24, x24, #0x10
    4c9c:	cmp	x0, x24
    4ca0:	b.eq	4ca8 <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE+0x128>  // b.none
    4ca4:	bl	0 <free>
    4ca8:	mov	x0, x19
    4cac:	ldp	x19, x20, [sp, #16]
    4cb0:	ldp	x21, x22, [sp, #32]
    4cb4:	ldp	x23, x24, [sp, #48]
    4cb8:	ldp	x25, x26, [sp, #64]
    4cbc:	ldp	x29, x30, [sp], #176
    4cc0:	ret
    4cc4:	mov	x1, x25
    4cc8:	mov	x0, x24
    4ccc:	mov	x3, #0x8                   	// #8
    4cd0:	mov	x2, #0x0                   	// #0
    4cd4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4cd8:	ldr	w1, [sp, #104]
    4cdc:	b	4c08 <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE+0x88>
    4ce0:	mov	x1, x0
    4ce4:	mov	x3, #0x8                   	// #8
    4ce8:	mov	x0, x24
    4cec:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4cf0:	ldr	w2, [x23, #48]
    4cf4:	add	x26, x23, #0x38
    4cf8:	add	x21, x26, x2, lsl #3
    4cfc:	cmp	x21, x26
    4d00:	b.ne	4bd0 <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE+0x50>  // b.any
    4d04:	mov	w20, #0x0                   	// #0
    4d08:	b	4c48 <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE+0xc8>
    4d0c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4d10:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4d14:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4d18:	add	x3, x3, #0x0
    4d1c:	add	x1, x1, #0x0
    4d20:	add	x0, x0, #0x0
    4d24:	mov	w2, #0x43                  	// #67
    4d28:	bl	0 <__assert_fail>
    4d2c:	nop

0000000000004d30 <_ZN4llvm6Record10getDefInitEv>:
    4d30:	stp	x29, x30, [sp, #-32]!
    4d34:	mov	x29, sp
    4d38:	stp	x19, x20, [sp, #16]
    4d3c:	ldr	x20, [x0, #112]
    4d40:	cbz	x20, 4d54 <_ZN4llvm6Record10getDefInitEv+0x24>
    4d44:	mov	x0, x20
    4d48:	ldp	x19, x20, [sp, #16]
    4d4c:	ldp	x29, x30, [sp], #32
    4d50:	ret
    4d54:	mov	x19, x0
    4d58:	mov	w2, #0x4                   	// #4
    4d5c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4d60:	add	x0, x0, #0x0
    4d64:	mov	x1, #0x20                  	// #32
    4d68:	add	x0, x0, #0x88
    4d6c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4d70:	mov	x20, x0
    4d74:	mov	x1, x19
    4d78:	bl	4480 <_ZN4llvm7DefInitC1EPNS_6RecordE>
    4d7c:	str	x20, [x19, #112]
    4d80:	mov	x0, x20
    4d84:	ldp	x19, x20, [sp, #16]
    4d88:	ldp	x29, x30, [sp], #32
    4d8c:	ret

0000000000004d90 <_ZN4llvm7DefInit3getEPNS_6RecordE>:
    4d90:	b	4d30 <_ZN4llvm6Record10getDefInitEv>
    4d94:	nop

0000000000004d98 <_ZN4llvm5RecTy9getListTyEv>:
    4d98:	stp	x29, x30, [sp, #-32]!
    4d9c:	mov	x29, sp
    4da0:	str	x19, [sp, #16]
    4da4:	mov	x19, x0
    4da8:	ldr	x0, [x0, #16]
    4dac:	cbz	x0, 4dbc <_ZN4llvm5RecTy9getListTyEv+0x24>
    4db0:	ldr	x19, [sp, #16]
    4db4:	ldp	x29, x30, [sp], #32
    4db8:	ret
    4dbc:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4dc0:	add	x0, x0, #0x0
    4dc4:	mov	w2, #0x4                   	// #4
    4dc8:	mov	x1, #0x20                  	// #32
    4dcc:	add	x0, x0, #0x88
    4dd0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4dd4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4dd8:	mov	w2, #0x5                   	// #5
    4ddc:	str	w2, [x0, #8]
    4de0:	ldr	x1, [x1]
    4de4:	stp	xzr, x19, [x0, #16]
    4de8:	add	x1, x1, #0x10
    4dec:	str	x1, [x0]
    4df0:	str	x0, [x19, #16]
    4df4:	ldr	x19, [sp, #16]
    4df8:	ldp	x29, x30, [sp], #32
    4dfc:	ret

0000000000004e00 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_>:
    4e00:	stp	x29, x30, [sp, #-160]!
    4e04:	cmp	x0, x1
    4e08:	mov	x29, sp
    4e0c:	stp	x19, x20, [sp, #16]
    4e10:	mov	x19, x1
    4e14:	b.eq	4fe8 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x1e8>  // b.none
    4e18:	mov	x20, x0
    4e1c:	cbz	x0, 50b0 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x2b0>
    4e20:	ldr	w0, [x0, #8]
    4e24:	cmp	w0, #0x7
    4e28:	b.eq	4e74 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x74>  // b.none
    4e2c:	ldr	x2, [x20]
    4e30:	mov	x1, x19
    4e34:	mov	x0, x20
    4e38:	ldr	x2, [x2, #24]
    4e3c:	blr	x2
    4e40:	tst	w0, #0xff
    4e44:	b.ne	4fe8 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x1e8>  // b.any
    4e48:	ldr	x2, [x19]
    4e4c:	mov	x1, x20
    4e50:	mov	x0, x19
    4e54:	ldr	x2, [x2, #24]
    4e58:	blr	x2
    4e5c:	tst	w0, #0xff
    4e60:	b.eq	4ffc <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x1fc>  // b.none
    4e64:	mov	x0, x20
    4e68:	ldp	x19, x20, [sp, #16]
    4e6c:	ldp	x29, x30, [sp], #160
    4e70:	ret
    4e74:	cbz	x1, 50b0 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x2b0>
    4e78:	ldr	w0, [x1, #8]
    4e7c:	cmp	w0, #0x7
    4e80:	b.ne	4e2c <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x2c>  // b.any
    4e84:	ldr	w2, [x20, #32]
    4e88:	mov	x1, #0x400000000           	// #17179869184
    4e8c:	stp	x21, x22, [sp, #32]
    4e90:	add	x22, sp, #0x40
    4e94:	add	x21, sp, #0x70
    4e98:	add	x0, x22, #0x10
    4e9c:	add	x3, x21, #0x10
    4ea0:	stp	x23, x24, [sp, #48]
    4ea4:	cmp	x2, #0x4
    4ea8:	lsl	x24, x2, #3
    4eac:	stp	x0, x1, [sp, #64]
    4eb0:	mov	x23, x2
    4eb4:	mov	x0, x3
    4eb8:	stp	x3, x1, [sp, #112]
    4ebc:	mov	x2, #0x0                   	// #0
    4ec0:	b.hi	506c <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x26c>  // b.pmore
    4ec4:	add	x3, x24, #0x28
    4ec8:	add	x1, x20, #0x28
    4ecc:	add	x20, x20, x3
    4ed0:	cmp	x1, x20
    4ed4:	b.eq	4ee4 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0xe4>  // b.none
    4ed8:	mov	x2, x24
    4edc:	bl	0 <memcpy>
    4ee0:	ldr	w2, [sp, #120]
    4ee4:	ldr	w3, [sp, #124]
    4ee8:	add	x2, x2, x23
    4eec:	cmp	x2, x3
    4ef0:	b.hi	5090 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x290>  // b.pmore
    4ef4:	str	w2, [sp, #120]
    4ef8:	mov	w0, w2
    4efc:	add	x23, x22, #0x10
    4f00:	mov	x20, #0xfffffffffffffff8    	// #-8
    4f04:	cbnz	x2, 4f48 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x148>
    4f08:	b	4f94 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x194>
    4f0c:	ldp	w0, w1, [sp, #72]
    4f10:	cmp	w0, w1
    4f14:	b.cs	5050 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x250>  // b.hs, b.nlast
    4f18:	ldr	x1, [sp, #64]
    4f1c:	str	x24, [x1, w0, uxtw #3]
    4f20:	ldp	w0, w2, [sp, #72]
    4f24:	mov	w1, w0
    4f28:	add	x1, x1, #0x1
    4f2c:	cmp	x1, x2
    4f30:	b.hi	5090 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x290>  // b.pmore
    4f34:	add	w0, w0, #0x1
    4f38:	str	w0, [sp, #72]
    4f3c:	ldr	w0, [sp, #120]
    4f40:	cbz	w0, 4f94 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x194>
    4f44:	ldr	w3, [sp, #124]
    4f48:	ldr	x4, [sp, #112]
    4f4c:	add	x1, x20, w0, uxtw #3
    4f50:	mov	w2, w0
    4f54:	sub	x2, x2, #0x1
    4f58:	cmp	x2, x3
    4f5c:	ldr	x24, [x4, x1]
    4f60:	b.hi	5090 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x290>  // b.pmore
    4f64:	sub	w2, w0, #0x1
    4f68:	mov	x1, x24
    4f6c:	mov	x0, x19
    4f70:	str	w2, [sp, #120]
    4f74:	bl	2050 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE>
    4f78:	tst	w0, #0xff
    4f7c:	b.ne	4f0c <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x10c>  // b.any
    4f80:	mov	x0, x24
    4f84:	mov	x1, x21
    4f88:	bl	3610 <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE>
    4f8c:	ldr	w0, [sp, #120]
    4f90:	cbnz	w0, 4f44 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x144>
    4f94:	ldr	w1, [sp, #72]
    4f98:	add	x21, x21, #0x10
    4f9c:	ldr	x0, [sp, #64]
    4fa0:	bl	4038 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE>
    4fa4:	mov	x20, x0
    4fa8:	ldr	x1, [sp, #112]
    4fac:	cmp	x1, x21
    4fb0:	b.eq	4fbc <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x1bc>  // b.none
    4fb4:	mov	x0, x1
    4fb8:	bl	0 <free>
    4fbc:	ldr	x0, [sp, #64]
    4fc0:	add	x22, x22, #0x10
    4fc4:	cmp	x0, x22
    4fc8:	b.eq	5044 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x244>  // b.none
    4fcc:	bl	0 <free>
    4fd0:	mov	x0, x20
    4fd4:	ldp	x19, x20, [sp, #16]
    4fd8:	ldp	x21, x22, [sp, #32]
    4fdc:	ldp	x23, x24, [sp, #48]
    4fe0:	ldp	x29, x30, [sp], #160
    4fe4:	ret
    4fe8:	mov	x20, x19
    4fec:	mov	x0, x20
    4ff0:	ldp	x19, x20, [sp, #16]
    4ff4:	ldp	x29, x30, [sp], #160
    4ff8:	ret
    4ffc:	ldr	w0, [x20, #8]
    5000:	cmp	w0, #0x5
    5004:	b.eq	501c <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x21c>  // b.none
    5008:	mov	x20, #0x0                   	// #0
    500c:	mov	x0, x20
    5010:	ldp	x19, x20, [sp, #16]
    5014:	ldp	x29, x30, [sp], #160
    5018:	ret
    501c:	ldr	w0, [x19, #8]
    5020:	cmp	w0, #0x5
    5024:	b.ne	5008 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x208>  // b.any
    5028:	ldr	x1, [x19, #24]
    502c:	ldr	x0, [x20, #24]
    5030:	bl	4e00 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_>
    5034:	cbz	x0, 5008 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x208>
    5038:	bl	4d98 <_ZN4llvm5RecTy9getListTyEv>
    503c:	mov	x20, x0
    5040:	b	4e64 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x64>
    5044:	ldp	x21, x22, [sp, #32]
    5048:	ldp	x23, x24, [sp, #48]
    504c:	b	4e64 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x64>
    5050:	mov	x0, x22
    5054:	mov	x1, x23
    5058:	mov	x3, #0x8                   	// #8
    505c:	mov	x2, #0x0                   	// #0
    5060:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    5064:	ldr	w0, [sp, #72]
    5068:	b	4f18 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x118>
    506c:	mov	x1, x3
    5070:	mov	x2, x23
    5074:	mov	x0, x21
    5078:	mov	x3, #0x8                   	// #8
    507c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    5080:	ldr	x0, [sp, #112]
    5084:	ldr	w2, [sp, #120]
    5088:	add	x0, x0, x2, lsl #3
    508c:	b	4ec4 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0xc4>
    5090:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5094:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5098:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    509c:	add	x3, x3, #0x0
    50a0:	add	x1, x1, #0x0
    50a4:	add	x0, x0, #0x0
    50a8:	mov	w2, #0x43                  	// #67
    50ac:	bl	0 <__assert_fail>
    50b0:	stp	x21, x22, [sp, #32]
    50b4:	stp	x23, x24, [sp, #48]
    50b8:	bl	8e8 <_ZN4llvm13isa_impl_wrapINS_11RecordRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>
    50bc:	nop

00000000000050c0 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>:
    50c0:	stp	x29, x30, [sp, #-240]!
    50c4:	mov	x29, sp
    50c8:	stp	x19, x20, [sp, #16]
    50cc:	stp	x23, x24, [sp, #48]
    50d0:	adrp	x24, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    50d4:	add	x20, x24, #0x0
    50d8:	mov	x23, x0
    50dc:	add	x19, x20, #0x180
    50e0:	stp	x21, x22, [sp, #32]
    50e4:	mov	x21, x1
    50e8:	mov	x22, x2
    50ec:	ldarb	w0, [x19]
    50f0:	tbz	w0, #0, 5164 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0xa4>
    50f4:	add	x20, sp, #0x60
    50f8:	mov	x4, #0x2000000000          	// #137438953472
    50fc:	add	x5, x20, #0x10
    5100:	mov	x3, x22
    5104:	mov	x0, x20
    5108:	mov	x1, x23
    510c:	mov	x2, x21
    5110:	stp	x5, x4, [sp, #96]
    5114:	bl	2c0 <_ZL15ProfileListInitRN4llvm16FoldingSetNodeIDENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    5118:	add	x0, x24, #0x0
    511c:	mov	x1, x20
    5120:	add	x0, x0, #0x188
    5124:	add	x2, sp, #0x58
    5128:	str	xzr, [sp, #88]
    512c:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
    5130:	cbz	x0, 51bc <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0xfc>
    5134:	sub	x19, x0, #0x18
    5138:	ldr	x0, [sp, #96]
    513c:	add	x20, x20, #0x10
    5140:	cmp	x0, x20
    5144:	b.eq	514c <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x8c>  // b.none
    5148:	bl	0 <free>
    514c:	mov	x0, x19
    5150:	ldp	x19, x20, [sp, #16]
    5154:	ldp	x21, x22, [sp, #32]
    5158:	ldp	x23, x24, [sp, #48]
    515c:	ldp	x29, x30, [sp], #240
    5160:	ret
    5164:	mov	x0, x19
    5168:	bl	0 <__cxa_guard_acquire>
    516c:	cbz	w0, 50f4 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x34>
    5170:	str	x25, [sp, #64]
    5174:	add	x25, x20, #0x188
    5178:	mov	x0, x25
    517c:	mov	w1, #0x6                   	// #6
    5180:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
    5184:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5188:	mov	x0, x19
    518c:	ldr	x1, [x1]
    5190:	add	x1, x1, #0x10
    5194:	str	x1, [x20, #392]
    5198:	bl	0 <__cxa_guard_release>
    519c:	mov	x1, x25
    51a0:	adrp	x2, 0 <__dso_handle>
    51a4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    51a8:	add	x2, x2, #0x0
    51ac:	add	x0, x0, #0x0
    51b0:	bl	0 <__cxa_atexit>
    51b4:	ldr	x25, [sp, #64]
    51b8:	b	50f4 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x34>
    51bc:	str	x25, [sp, #64]
    51c0:	cbz	x21, 51e0 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x120>
    51c4:	ldr	x1, [x23]
    51c8:	cbz	x1, 5290 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x1d0>
    51cc:	ldrb	w0, [x1, #8]
    51d0:	sub	w0, w0, #0x1
    51d4:	and	w0, w0, #0xff
    51d8:	cmp	w0, #0x16
    51dc:	b.ls	5254 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x194>  // b.plast
    51e0:	lsl	x25, x21, #3
    51e4:	mov	w2, #0x3                   	// #3
    51e8:	add	x1, x25, #0x28
    51ec:	add	x0, x24, #0x0
    51f0:	add	x0, x0, #0x88
    51f4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    51f8:	mov	x19, x0
    51fc:	mov	x0, x22
    5200:	bl	4d98 <_ZN4llvm5RecTy9getListTyEv>
    5204:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5208:	mov	w2, #0x9                   	// #9
    520c:	strh	w2, [x19, #8]
    5210:	ldr	x1, [x1]
    5214:	stp	x0, xzr, [x19, #16]
    5218:	add	x1, x1, #0x10
    521c:	str	x1, [x19]
    5220:	str	w21, [x19, #32]
    5224:	cbz	x25, 5238 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x178>
    5228:	mov	x2, x25
    522c:	mov	x1, x23
    5230:	add	x0, x19, #0x28
    5234:	bl	0 <memcpy>
    5238:	ldr	x2, [sp, #88]
    523c:	add	x0, x24, #0x0
    5240:	add	x0, x0, #0x188
    5244:	add	x1, x19, #0x18
    5248:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
    524c:	ldr	x25, [sp, #64]
    5250:	b	5138 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x78>
    5254:	ldr	x0, [x1, #16]
    5258:	mov	x1, x22
    525c:	ldr	x2, [x0]
    5260:	ldr	x2, [x2, #24]
    5264:	blr	x2
    5268:	tst	w0, #0xff
    526c:	b.ne	51e0 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x120>  // b.any
    5270:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5274:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5278:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    527c:	add	x3, x3, #0x0
    5280:	add	x1, x1, #0x0
    5284:	add	x0, x0, #0x0
    5288:	mov	w2, #0x244                 	// #580
    528c:	bl	0 <__assert_fail>
    5290:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5294:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5298:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    529c:	add	x3, x3, #0x0
    52a0:	add	x1, x1, #0x0
    52a4:	add	x0, x0, #0x0
    52a8:	mov	w2, #0x69                  	// #105
    52ac:	bl	0 <__assert_fail>

00000000000052b0 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE>:
    52b0:	stp	x29, x30, [sp, #-176]!
    52b4:	mov	x29, sp
    52b8:	stp	x23, x24, [sp, #48]
    52bc:	mov	x23, x0
    52c0:	ldr	x0, [x0, #16]
    52c4:	stp	x19, x20, [sp, #16]
    52c8:	mov	x19, x23
    52cc:	cmp	x1, x0
    52d0:	b.eq	52ec <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x3c>  // b.none
    52d4:	mov	x20, x1
    52d8:	cbz	x1, 5474 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x1c4>
    52dc:	ldr	w0, [x1, #8]
    52e0:	mov	x19, #0x0                   	// #0
    52e4:	cmp	w0, #0x5
    52e8:	b.eq	5300 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x50>  // b.none
    52ec:	mov	x0, x19
    52f0:	ldp	x19, x20, [sp, #16]
    52f4:	ldp	x23, x24, [sp, #48]
    52f8:	ldp	x29, x30, [sp], #176
    52fc:	ret
    5300:	stp	x25, x26, [sp, #64]
    5304:	add	x25, sp, #0x60
    5308:	ldr	w2, [x23, #32]
    530c:	add	x1, x25, #0x10
    5310:	mov	x0, #0x800000000           	// #34359738368
    5314:	stp	x21, x22, [sp, #32]
    5318:	cmp	x2, #0x8
    531c:	stp	x27, x28, [sp, #80]
    5320:	add	x27, x23, #0x28
    5324:	stp	x1, x0, [sp, #96]
    5328:	b.hi	5434 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x184>  // b.pmore
    532c:	add	x21, x27, x2, lsl #3
    5330:	cmp	x27, x21
    5334:	ldr	x22, [x20, #24]
    5338:	b.eq	5448 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x198>  // b.none
    533c:	add	x26, x25, #0x10
    5340:	mov	w20, #0x0                   	// #0
    5344:	mov	w24, #0x1                   	// #1
    5348:	b	5384 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0xd4>
    534c:	ldr	x1, [sp, #96]
    5350:	str	x19, [x1, w0, uxtw #3]
    5354:	ldp	w2, w0, [sp, #104]
    5358:	mov	w1, w2
    535c:	add	x1, x1, #0x1
    5360:	cmp	x1, x0
    5364:	b.hi	5454 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x1a4>  // b.pmore
    5368:	add	w2, w2, #0x1
    536c:	str	w2, [sp, #104]
    5370:	cmp	x28, x19
    5374:	add	x27, x27, #0x8
    5378:	csel	w20, w20, w24, eq  // eq = none
    537c:	cmp	x21, x27
    5380:	b.eq	53cc <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x11c>  // b.none
    5384:	ldr	x28, [x27]
    5388:	mov	x1, x22
    538c:	mov	x0, x28
    5390:	ldr	x2, [x28]
    5394:	ldr	x2, [x2, #64]
    5398:	blr	x2
    539c:	mov	x19, x0
    53a0:	cbz	x0, 53e0 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x130>
    53a4:	ldp	w0, w1, [sp, #104]
    53a8:	cmp	w0, w1
    53ac:	b.cc	534c <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x9c>  // b.lo, b.ul, b.last
    53b0:	mov	x0, x25
    53b4:	mov	x1, x26
    53b8:	mov	x3, #0x8                   	// #8
    53bc:	mov	x2, #0x0                   	// #0
    53c0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    53c4:	ldr	w0, [sp, #104]
    53c8:	b	534c <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x9c>
    53cc:	ldr	x0, [sp, #96]
    53d0:	cbz	w20, 544c <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x19c>
    53d4:	mov	x2, x22
    53d8:	bl	50c0 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    53dc:	mov	x19, x0
    53e0:	ldr	x0, [sp, #96]
    53e4:	add	x25, x25, #0x10
    53e8:	cmp	x0, x25
    53ec:	b.eq	5414 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x164>  // b.none
    53f0:	bl	0 <free>
    53f4:	mov	x0, x19
    53f8:	ldp	x19, x20, [sp, #16]
    53fc:	ldp	x21, x22, [sp, #32]
    5400:	ldp	x23, x24, [sp, #48]
    5404:	ldp	x25, x26, [sp, #64]
    5408:	ldp	x27, x28, [sp, #80]
    540c:	ldp	x29, x30, [sp], #176
    5410:	ret
    5414:	mov	x0, x19
    5418:	ldp	x19, x20, [sp, #16]
    541c:	ldp	x21, x22, [sp, #32]
    5420:	ldp	x23, x24, [sp, #48]
    5424:	ldp	x25, x26, [sp, #64]
    5428:	ldp	x27, x28, [sp, #80]
    542c:	ldp	x29, x30, [sp], #176
    5430:	ret
    5434:	mov	x0, x25
    5438:	mov	x3, #0x8                   	// #8
    543c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    5440:	ldr	w2, [x23, #32]
    5444:	b	532c <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x7c>
    5448:	ldr	x0, [sp, #96]
    544c:	mov	x19, x23
    5450:	b	53e4 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x134>
    5454:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5458:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    545c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5460:	add	x3, x3, #0x0
    5464:	add	x1, x1, #0x0
    5468:	add	x0, x0, #0x0
    546c:	mov	w2, #0x43                  	// #67
    5470:	bl	0 <__assert_fail>
    5474:	stp	x21, x22, [sp, #32]
    5478:	stp	x25, x26, [sp, #64]
    547c:	stp	x27, x28, [sp, #80]
    5480:	bl	7a0 <_ZN4llvm13isa_impl_wrapINS_9ListRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>
    5484:	nop

0000000000005488 <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE>:
    5488:	stp	x29, x30, [sp, #-160]!
    548c:	mov	x4, #0x800000000           	// #34359738368
    5490:	cmp	x2, #0x8
    5494:	mov	x29, sp
    5498:	stp	x23, x24, [sp, #48]
    549c:	add	x24, sp, #0x50
    54a0:	add	x3, x24, #0x10
    54a4:	stp	x19, x20, [sp, #16]
    54a8:	mov	x20, x0
    54ac:	mov	x19, x1
    54b0:	stp	x21, x22, [sp, #32]
    54b4:	mov	x22, x2
    54b8:	stp	x3, x4, [sp, #80]
    54bc:	b.hi	55b0 <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0x128>  // b.pmore
    54c0:	add	x22, x19, x22, lsl #2
    54c4:	cmp	x22, x19
    54c8:	b.eq	55c4 <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0x13c>  // b.none
    54cc:	mov	x23, #0x28                  	// #40
    54d0:	str	x25, [sp, #64]
    54d4:	add	x25, x24, #0x10
    54d8:	b	550c <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0x84>
    54dc:	ldr	x0, [sp, #80]
    54e0:	str	x21, [x0, w3, uxtw #3]
    54e4:	ldp	w2, w0, [sp, #88]
    54e8:	mov	w3, w2
    54ec:	add	x3, x3, #0x1
    54f0:	cmp	x3, x0
    54f4:	b.hi	55cc <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0x144>  // b.pmore
    54f8:	add	w2, w2, #0x1
    54fc:	str	w2, [sp, #88]
    5500:	add	x19, x19, #0x4
    5504:	cmp	x22, x19
    5508:	b.eq	5580 <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0xf8>  // b.none
    550c:	ldr	w2, [x19]
    5510:	ldr	w0, [x20, #32]
    5514:	cmp	w2, w0
    5518:	b.cs	554c <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0xc4>  // b.hs, b.nlast
    551c:	ldp	w3, w0, [sp, #88]
    5520:	add	x2, x23, w2, uxtw #3
    5524:	cmp	w3, w0
    5528:	ldr	x21, [x20, x2]
    552c:	b.cc	54dc <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0x54>  // b.lo, b.ul, b.last
    5530:	mov	x3, #0x8                   	// #8
    5534:	mov	x1, x25
    5538:	mov	x0, x24
    553c:	mov	x2, #0x0                   	// #0
    5540:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    5544:	ldr	w3, [sp, #88]
    5548:	b	54dc <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0x54>
    554c:	ldr	x25, [sp, #64]
    5550:	mov	x19, #0x0                   	// #0
    5554:	ldr	x0, [sp, #80]
    5558:	add	x24, x24, #0x10
    555c:	cmp	x0, x24
    5560:	b.eq	5568 <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0xe0>  // b.none
    5564:	bl	0 <free>
    5568:	mov	x0, x19
    556c:	ldp	x19, x20, [sp, #16]
    5570:	ldp	x21, x22, [sp, #32]
    5574:	ldp	x23, x24, [sp, #48]
    5578:	ldp	x29, x30, [sp], #160
    557c:	ret
    5580:	ldr	x25, [sp, #64]
    5584:	mov	w1, w2
    5588:	ldr	x3, [x20, #16]
    558c:	ldr	x0, [sp, #80]
    5590:	cbz	x3, 55ec <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0x164>
    5594:	ldr	w2, [x3, #8]
    5598:	cmp	w2, #0x5
    559c:	b.ne	55f4 <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0x16c>  // b.any
    55a0:	ldr	x2, [x3, #24]
    55a4:	bl	50c0 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    55a8:	mov	x19, x0
    55ac:	b	5554 <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0xcc>
    55b0:	mov	x1, x3
    55b4:	mov	x0, x24
    55b8:	mov	x3, #0x8                   	// #8
    55bc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    55c0:	b	54c0 <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0x38>
    55c4:	ldr	w2, [sp, #88]
    55c8:	b	5584 <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0xfc>
    55cc:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    55d0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    55d4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    55d8:	add	x3, x3, #0x0
    55dc:	add	x1, x1, #0x0
    55e0:	add	x0, x0, #0x0
    55e4:	mov	w2, #0x43                  	// #67
    55e8:	bl	0 <__assert_fail>
    55ec:	str	x25, [sp, #64]
    55f0:	bl	7a0 <_ZN4llvm13isa_impl_wrapINS_9ListRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>
    55f4:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    55f8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    55fc:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5600:	add	x3, x3, #0x0
    5604:	add	x1, x1, #0x0
    5608:	add	x0, x0, #0x0
    560c:	mov	w2, #0x108                 	// #264
    5610:	str	x25, [sp, #64]
    5614:	bl	0 <__assert_fail>

0000000000005618 <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE>:
    5618:	stp	x29, x30, [sp, #-176]!
    561c:	mov	x2, #0x800000000           	// #34359738368
    5620:	mov	x29, sp
    5624:	stp	x23, x24, [sp, #48]
    5628:	mov	x23, x0
    562c:	add	x24, sp, #0x60
    5630:	add	x0, x24, #0x10
    5634:	stp	x19, x20, [sp, #16]
    5638:	stp	x21, x22, [sp, #32]
    563c:	mov	x22, x1
    5640:	stp	x0, x2, [sp, #96]
    5644:	ldr	w2, [x23, #32]
    5648:	cmp	w2, #0x8
    564c:	mov	w2, w2
    5650:	b.hi	5730 <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0x118>  // b.pmore
    5654:	add	x20, x23, #0x28
    5658:	add	x21, x20, x2, lsl #3
    565c:	cmp	x21, x20
    5660:	b.eq	5754 <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0x13c>  // b.none
    5664:	stp	x25, x26, [sp, #64]
    5668:	add	x25, x24, #0x10
    566c:	str	x27, [sp, #80]
    5670:	mov	w27, #0x0                   	// #0
    5674:	nop
    5678:	ldr	x26, [x20]
    567c:	mov	x1, x22
    5680:	mov	x0, x26
    5684:	ldr	x2, [x26]
    5688:	ldr	x2, [x2, #96]
    568c:	blr	x2
    5690:	cmp	x0, x26
    5694:	mov	x19, x0
    5698:	cset	w2, ne  // ne = any
    569c:	ldp	w0, w1, [sp, #104]
    56a0:	orr	w27, w27, w2
    56a4:	cmp	w0, w1
    56a8:	b.cs	5714 <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0xfc>  // b.hs, b.nlast
    56ac:	ldr	x1, [sp, #96]
    56b0:	str	x19, [x1, w0, uxtw #3]
    56b4:	ldp	w2, w0, [sp, #104]
    56b8:	mov	w1, w2
    56bc:	add	x1, x1, #0x1
    56c0:	cmp	x1, x0
    56c4:	b.hi	578c <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0x174>  // b.pmore
    56c8:	add	w2, w2, #0x1
    56cc:	str	w2, [sp, #104]
    56d0:	add	x20, x20, #0x8
    56d4:	cmp	x21, x20
    56d8:	b.ne	5678 <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0x60>  // b.any
    56dc:	ldr	x0, [sp, #96]
    56e0:	cbnz	w27, 575c <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0x144>
    56e4:	ldp	x25, x26, [sp, #64]
    56e8:	ldr	x27, [sp, #80]
    56ec:	add	x24, x24, #0x10
    56f0:	cmp	x0, x24
    56f4:	b.eq	56fc <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0xe4>  // b.none
    56f8:	bl	0 <free>
    56fc:	mov	x0, x23
    5700:	ldp	x19, x20, [sp, #16]
    5704:	ldp	x21, x22, [sp, #32]
    5708:	ldp	x23, x24, [sp, #48]
    570c:	ldp	x29, x30, [sp], #176
    5710:	ret
    5714:	mov	x0, x24
    5718:	mov	x1, x25
    571c:	mov	x3, #0x8                   	// #8
    5720:	mov	x2, #0x0                   	// #0
    5724:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    5728:	ldr	w0, [sp, #104]
    572c:	b	56ac <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0x94>
    5730:	mov	x1, x0
    5734:	mov	x3, #0x8                   	// #8
    5738:	mov	x0, x24
    573c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    5740:	ldr	w2, [x23, #32]
    5744:	add	x20, x23, #0x28
    5748:	add	x21, x20, x2, lsl #3
    574c:	cmp	x21, x20
    5750:	b.ne	5664 <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0x4c>  // b.any
    5754:	ldr	x0, [sp, #96]
    5758:	b	56ec <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0xd4>
    575c:	ldr	x2, [x23, #16]
    5760:	cbz	x2, 57ac <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0x194>
    5764:	ldr	w3, [x2, #8]
    5768:	cmp	w3, #0x5
    576c:	b.ne	57b0 <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0x198>  // b.any
    5770:	ldr	x2, [x2, #24]
    5774:	bl	50c0 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    5778:	mov	x23, x0
    577c:	ldp	x25, x26, [sp, #64]
    5780:	ldr	x27, [sp, #80]
    5784:	ldr	x0, [sp, #96]
    5788:	b	56ec <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0xd4>
    578c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5790:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5794:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5798:	add	x3, x3, #0x0
    579c:	add	x1, x1, #0x0
    57a0:	add	x0, x0, #0x0
    57a4:	mov	w2, #0x43                  	// #67
    57a8:	bl	0 <__assert_fail>
    57ac:	bl	7a0 <_ZN4llvm13isa_impl_wrapINS_9ListRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>
    57b0:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    57b4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    57b8:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    57bc:	add	x3, x3, #0x0
    57c0:	add	x1, x1, #0x0
    57c4:	add	x0, x0, #0x0
    57c8:	mov	w2, #0x108                 	// #264
    57cc:	bl	0 <__assert_fail>

00000000000057d0 <_ZN4llvm9BitsRecTy3getEj>:
    57d0:	stp	x29, x30, [sp, #-64]!
    57d4:	mov	x29, sp
    57d8:	stp	x19, x20, [sp, #16]
    57dc:	adrp	x20, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    57e0:	mov	w19, w0
    57e4:	stp	x21, x22, [sp, #32]
    57e8:	add	x22, x20, #0x0
    57ec:	add	x21, x22, #0x1a0
    57f0:	str	x23, [sp, #48]
    57f4:	ldarb	w0, [x21]
    57f8:	tbz	w0, #0, 583c <_ZN4llvm9BitsRecTy3getEj+0x6c>
    57fc:	add	x23, x20, #0x0
    5800:	mov	w22, w19
    5804:	add	x0, x23, #0x1a8
    5808:	ldr	x3, [x0, #8]
    580c:	ldr	x21, [x23, #424]
    5810:	sub	x2, x3, x21
    5814:	asr	x1, x2, #3
    5818:	cmp	x22, x2, asr #3
    581c:	b.cs	5878 <_ZN4llvm9BitsRecTy3getEj+0xa8>  // b.hs, b.nlast
    5820:	ldr	x0, [x21, x22, lsl #3]
    5824:	cbz	x0, 589c <_ZN4llvm9BitsRecTy3getEj+0xcc>
    5828:	ldp	x19, x20, [sp, #16]
    582c:	ldp	x21, x22, [sp, #32]
    5830:	ldr	x23, [sp, #48]
    5834:	ldp	x29, x30, [sp], #64
    5838:	ret
    583c:	mov	x0, x21
    5840:	bl	0 <__cxa_guard_acquire>
    5844:	cbz	w0, 57fc <_ZN4llvm9BitsRecTy3getEj+0x2c>
    5848:	stp	xzr, xzr, [x22, #424]
    584c:	mov	x0, x21
    5850:	add	x23, x22, #0x1a8
    5854:	str	xzr, [x22, #440]
    5858:	bl	0 <__cxa_guard_release>
    585c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5860:	mov	x1, x23
    5864:	adrp	x2, 0 <__dso_handle>
    5868:	add	x2, x2, #0x0
    586c:	ldr	x0, [x0]
    5870:	bl	0 <__cxa_atexit>
    5874:	b	57fc <_ZN4llvm9BitsRecTy3getEj+0x2c>
    5878:	add	w2, w19, #0x1
    587c:	cmp	x2, x1
    5880:	b.hi	58e8 <_ZN4llvm9BitsRecTy3getEj+0x118>  // b.pmore
    5884:	b.cs	5820 <_ZN4llvm9BitsRecTy3getEj+0x50>  // b.hs, b.nlast
    5888:	add	x2, x21, x2, lsl #3
    588c:	cmp	x3, x2
    5890:	b.eq	5820 <_ZN4llvm9BitsRecTy3getEj+0x50>  // b.none
    5894:	str	x2, [x0, #8]
    5898:	b	5820 <_ZN4llvm9BitsRecTy3getEj+0x50>
    589c:	add	x0, x20, #0x0
    58a0:	mov	w2, #0x4                   	// #4
    58a4:	mov	x1, #0x20                  	// #32
    58a8:	add	x0, x0, #0x88
    58ac:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    58b0:	str	xzr, [x0, #16]
    58b4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    58b8:	mov	w2, #0x1                   	// #1
    58bc:	str	w2, [x0, #8]
    58c0:	ldr	x1, [x1]
    58c4:	str	w19, [x0, #24]
    58c8:	ldp	x19, x20, [sp, #16]
    58cc:	add	x1, x1, #0x10
    58d0:	str	x1, [x0]
    58d4:	str	x0, [x21, x22, lsl #3]
    58d8:	ldp	x21, x22, [sp, #32]
    58dc:	ldr	x23, [sp, #48]
    58e0:	ldp	x29, x30, [sp], #64
    58e4:	ret
    58e8:	sub	x1, x2, x1
    58ec:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    58f0:	ldr	x21, [x23, #424]
    58f4:	b	5820 <_ZN4llvm9BitsRecTy3getEj+0x50>

00000000000058f8 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>:
    58f8:	stp	x29, x30, [sp, #-224]!
    58fc:	mov	x29, sp
    5900:	stp	x19, x20, [sp, #16]
    5904:	stp	x23, x24, [sp, #48]
    5908:	adrp	x23, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    590c:	add	x20, x23, #0x0
    5910:	add	x19, x20, #0x1c0
    5914:	stp	x21, x22, [sp, #32]
    5918:	mov	x22, x0
    591c:	mov	x21, x1
    5920:	ldarb	w0, [x19]
    5924:	tbz	w0, #0, 5994 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE+0x9c>
    5928:	add	x20, sp, #0x50
    592c:	mov	x3, #0x2000000000          	// #137438953472
    5930:	add	x4, x20, #0x10
    5934:	mov	x0, x20
    5938:	mov	x1, x22
    593c:	mov	x2, x21
    5940:	add	x19, x23, #0x0
    5944:	stp	x4, x3, [sp, #80]
    5948:	bl	268 <_ZL15ProfileBitsInitRN4llvm16FoldingSetNodeIDENS_8ArrayRefIPNS_4InitEEE>
    594c:	mov	x1, x20
    5950:	add	x0, x19, #0x1c8
    5954:	add	x2, sp, #0x48
    5958:	str	xzr, [sp, #72]
    595c:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
    5960:	cbz	x0, 59e4 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE+0xec>
    5964:	sub	x19, x0, #0x18
    5968:	ldr	x0, [sp, #80]
    596c:	add	x20, x20, #0x10
    5970:	cmp	x0, x20
    5974:	b.eq	597c <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE+0x84>  // b.none
    5978:	bl	0 <free>
    597c:	mov	x0, x19
    5980:	ldp	x19, x20, [sp, #16]
    5984:	ldp	x21, x22, [sp, #32]
    5988:	ldp	x23, x24, [sp, #48]
    598c:	ldp	x29, x30, [sp], #224
    5990:	ret
    5994:	mov	x0, x19
    5998:	bl	0 <__cxa_guard_acquire>
    599c:	cbz	w0, 5928 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE+0x30>
    59a0:	add	x24, x20, #0x1c8
    59a4:	mov	w1, #0x6                   	// #6
    59a8:	mov	x0, x24
    59ac:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
    59b0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    59b4:	mov	x0, x19
    59b8:	ldr	x1, [x1]
    59bc:	add	x1, x1, #0x10
    59c0:	str	x1, [x20, #456]
    59c4:	bl	0 <__cxa_guard_release>
    59c8:	mov	x1, x24
    59cc:	adrp	x2, 0 <__dso_handle>
    59d0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    59d4:	add	x2, x2, #0x0
    59d8:	add	x0, x0, #0x0
    59dc:	bl	0 <__cxa_atexit>
    59e0:	b	5928 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE+0x30>
    59e4:	lsl	x24, x21, #3
    59e8:	mov	w2, #0x3                   	// #3
    59ec:	add	x1, x24, #0x28
    59f0:	add	x0, x19, #0x88
    59f4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    59f8:	mov	x19, x0
    59fc:	mov	w0, w21
    5a00:	bl	57d0 <_ZN4llvm9BitsRecTy3getEj>
    5a04:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5a08:	mov	w2, #0x3                   	// #3
    5a0c:	strh	w2, [x19, #8]
    5a10:	ldr	x1, [x1]
    5a14:	stp	x0, xzr, [x19, #16]
    5a18:	add	x1, x1, #0x10
    5a1c:	str	x1, [x19]
    5a20:	str	w21, [x19, #32]
    5a24:	cbz	x24, 5a38 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE+0x140>
    5a28:	mov	x2, x24
    5a2c:	mov	x1, x22
    5a30:	add	x0, x19, #0x28
    5a34:	bl	0 <memcpy>
    5a38:	ldr	x2, [sp, #72]
    5a3c:	add	x0, x23, #0x0
    5a40:	add	x0, x0, #0x1c8
    5a44:	add	x1, x19, #0x18
    5a48:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
    5a4c:	b	5968 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE+0x70>

0000000000005a50 <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE>:
    5a50:	stp	x29, x30, [sp, #-192]!
    5a54:	mov	x4, #0x1000000000          	// #68719476736
    5a58:	cmp	x2, #0x10
    5a5c:	mov	x29, sp
    5a60:	stp	x21, x22, [sp, #32]
    5a64:	add	x22, sp, #0x30
    5a68:	add	x3, x22, #0x10
    5a6c:	stp	x19, x20, [sp, #16]
    5a70:	mov	x21, x1
    5a74:	mov	x19, x2
    5a78:	stp	x3, x4, [sp, #48]
    5a7c:	mov	x20, x0
    5a80:	b.hi	5b3c <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xec>  // b.pmore
    5a84:	str	w19, [sp, #56]
    5a88:	add	x1, x3, x2, lsl #3
    5a8c:	mov	w0, w19
    5a90:	mov	x2, x3
    5a94:	cmp	x1, x3
    5a98:	b.eq	5aac <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x5c>  // b.none
    5a9c:	nop
    5aa0:	str	xzr, [x2], #8
    5aa4:	cmp	x1, x2
    5aa8:	b.ne	5aa0 <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x50>  // b.any
    5aac:	cbz	w0, 5b28 <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xd8>
    5ab0:	ldr	w1, [x20, #32]
    5ab4:	sub	w0, w0, #0x1
    5ab8:	mov	x3, #0x0                   	// #0
    5abc:	mov	x5, #0x28                  	// #40
    5ac0:	b	5af0 <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xa0>
    5ac4:	cmp	x19, x3
    5ac8:	b.eq	5b8c <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x13c>  // b.none
    5acc:	add	x4, x5, w4, uxtw #3
    5ad0:	cmp	x3, x0
    5ad4:	ldr	x2, [sp, #48]
    5ad8:	ldr	x4, [x20, x4]
    5adc:	str	x4, [x2, x3, lsl #3]
    5ae0:	b.eq	5b28 <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xd8>  // b.none
    5ae4:	add	x3, x3, #0x1
    5ae8:	cmp	x19, x3
    5aec:	b.eq	5b6c <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x11c>  // b.none
    5af0:	ldr	w4, [x21, x3, lsl #2]
    5af4:	cmp	w4, w1
    5af8:	b.cc	5ac4 <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x74>  // b.lo, b.ul, b.last
    5afc:	mov	x19, #0x0                   	// #0
    5b00:	ldr	x0, [sp, #48]
    5b04:	add	x22, x22, #0x10
    5b08:	cmp	x0, x22
    5b0c:	b.eq	5b14 <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xc4>  // b.none
    5b10:	bl	0 <free>
    5b14:	mov	x0, x19
    5b18:	ldp	x19, x20, [sp, #16]
    5b1c:	ldp	x21, x22, [sp, #32]
    5b20:	ldp	x29, x30, [sp], #192
    5b24:	ret
    5b28:	ldr	x0, [sp, #48]
    5b2c:	mov	x1, x19
    5b30:	bl	58f8 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
    5b34:	mov	x19, x0
    5b38:	b	5b00 <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xb0>
    5b3c:	mov	x1, x3
    5b40:	mov	x0, x22
    5b44:	mov	x3, #0x8                   	// #8
    5b48:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    5b4c:	ldr	w0, [sp, #60]
    5b50:	cmp	x19, x0
    5b54:	b.hi	5bac <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x15c>  // b.pmore
    5b58:	ldr	x2, [sp, #48]
    5b5c:	mov	w0, w19
    5b60:	str	w19, [sp, #56]
    5b64:	add	x1, x2, x19, lsl #3
    5b68:	b	5aa0 <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x50>
    5b6c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5b70:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5b74:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5b78:	add	x3, x3, #0x0
    5b7c:	add	x1, x1, #0x0
    5b80:	add	x0, x0, #0x0
    5b84:	mov	w2, #0xfa                  	// #250
    5b88:	bl	0 <__assert_fail>
    5b8c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5b90:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5b94:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5b98:	add	x3, x3, #0x0
    5b9c:	add	x1, x1, #0x0
    5ba0:	add	x0, x0, #0x0
    5ba4:	mov	w2, #0x95                  	// #149
    5ba8:	bl	0 <__assert_fail>
    5bac:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5bb0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5bb4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5bb8:	add	x3, x3, #0x0
    5bbc:	add	x1, x1, #0x0
    5bc0:	add	x0, x0, #0x0
    5bc4:	mov	w2, #0x43                  	// #67
    5bc8:	bl	0 <__assert_fail>
    5bcc:	nop

0000000000005bd0 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE>:
    5bd0:	stp	x29, x30, [sp, #-256]!
    5bd4:	mov	x29, sp
    5bd8:	stp	x23, x24, [sp, #48]
    5bdc:	mov	x24, x0
    5be0:	add	x2, sp, #0x70
    5be4:	add	x0, sp, #0x80
    5be8:	stp	x19, x20, [sp, #16]
    5bec:	ldr	w20, [x24, #32]
    5bf0:	stp	x21, x22, [sp, #32]
    5bf4:	mov	x22, x1
    5bf8:	cmp	w20, #0x10
    5bfc:	stp	x25, x26, [sp, #64]
    5c00:	mov	x1, x0
    5c04:	mov	w25, w20
    5c08:	stp	x27, x28, [sp, #80]
    5c0c:	mov	w19, w20
    5c10:	stp	x2, x0, [sp, #104]
    5c14:	mov	x2, #0x1000000000          	// #68719476736
    5c18:	str	x2, [sp, #120]
    5c1c:	b.hi	5d98 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x1c8>  // b.pmore
    5c20:	str	w20, [sp, #120]
    5c24:	add	x0, x1, x19, lsl #3
    5c28:	cmp	x1, x0
    5c2c:	b.eq	5c3c <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x6c>  // b.none
    5c30:	str	xzr, [x1], #8
    5c34:	cmp	x0, x1
    5c38:	b.ne	5c30 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x60>  // b.any
    5c3c:	cbz	w25, 5dc0 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x1f0>
    5c40:	mov	w0, w25
    5c44:	add	x1, x24, #0x28
    5c48:	mov	x28, #0x0                   	// #0
    5c4c:	mov	x27, #0x0                   	// #0
    5c50:	mov	x23, #0x0                   	// #0
    5c54:	mov	w20, #0x0                   	// #0
    5c58:	str	x1, [sp, #96]
    5c5c:	nop
    5c60:	cmp	w0, w28
    5c64:	b.ls	5e18 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x248>  // b.plast
    5c68:	ldr	x0, [sp, #96]
    5c6c:	lsl	x21, x28, #3
    5c70:	ldr	x26, [x0, x28, lsl #3]
    5c74:	cbz	x26, 5e08 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x238>
    5c78:	ldrb	w0, [x26, #8]
    5c7c:	cmp	w0, #0x15
    5c80:	b.eq	5d08 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x138>  // b.none
    5c84:	ldr	x4, [x26]
    5c88:	mov	x1, x22
    5c8c:	mov	x0, x26
    5c90:	ldr	x4, [x4, #96]
    5c94:	blr	x4
    5c98:	ldr	x4, [x0]
    5c9c:	mov	w1, #0x0                   	// #0
    5ca0:	ldr	x4, [x4, #104]
    5ca4:	blr	x4
    5ca8:	mov	x19, x0
    5cac:	cbz	x19, 5de8 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x218>
    5cb0:	ldrb	w0, [x19, #8]
    5cb4:	cmp	w0, #0x18
    5cb8:	b.ne	5cd4 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x104>  // b.any
    5cbc:	ldr	x1, [x22]
    5cc0:	mov	x0, x22
    5cc4:	ldr	x1, [x1, #24]
    5cc8:	blr	x1
    5ccc:	tst	w0, #0xff
    5cd0:	csel	x19, x19, x26, eq  // eq = none
    5cd4:	ldr	w1, [sp, #120]
    5cd8:	cmp	x28, x1
    5cdc:	b.cs	5dc8 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x1f8>  // b.hs, b.nlast
    5ce0:	ldr	x0, [sp, #112]
    5ce4:	cmp	x19, x26
    5ce8:	cset	w2, ne  // ne = any
    5cec:	add	x28, x28, #0x1
    5cf0:	orr	w20, w20, w2
    5cf4:	cmp	w25, w28
    5cf8:	str	x19, [x0, x21]
    5cfc:	b.eq	5d50 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x180>  // b.none
    5d00:	ldr	w0, [x24, #32]
    5d04:	b	5c60 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x90>
    5d08:	ldr	x19, [x26, #24]
    5d0c:	cmp	x19, x23
    5d10:	b.eq	5d2c <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x15c>  // b.none
    5d14:	ldr	x3, [x19]
    5d18:	mov	x1, x22
    5d1c:	mov	x0, x19
    5d20:	ldr	x3, [x3, #96]
    5d24:	blr	x3
    5d28:	mov	x27, x0
    5d2c:	cbz	x27, 5e38 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x268>
    5d30:	ldr	x4, [x27]
    5d34:	mov	x0, x27
    5d38:	ldr	w1, [x26, #32]
    5d3c:	mov	x23, x19
    5d40:	ldr	x4, [x4, #104]
    5d44:	blr	x4
    5d48:	mov	x19, x0
    5d4c:	b	5cac <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0xdc>
    5d50:	ldr	x0, [sp, #112]
    5d54:	cbz	w20, 5d64 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x194>
    5d58:	bl	58f8 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
    5d5c:	mov	x24, x0
    5d60:	ldr	x0, [sp, #112]
    5d64:	ldr	x1, [sp, #104]
    5d68:	add	x27, x1, #0x10
    5d6c:	cmp	x0, x27
    5d70:	b.eq	5d78 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x1a8>  // b.none
    5d74:	bl	0 <free>
    5d78:	mov	x0, x24
    5d7c:	ldp	x19, x20, [sp, #16]
    5d80:	ldp	x21, x22, [sp, #32]
    5d84:	ldp	x23, x24, [sp, #48]
    5d88:	ldp	x25, x26, [sp, #64]
    5d8c:	ldp	x27, x28, [sp, #80]
    5d90:	ldp	x29, x30, [sp], #256
    5d94:	ret
    5d98:	ldr	x0, [sp, #104]
    5d9c:	mov	x2, x19
    5da0:	mov	x3, #0x8                   	// #8
    5da4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    5da8:	ldr	w0, [sp, #124]
    5dac:	cmp	x19, x0
    5db0:	b.hi	5e58 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x288>  // b.pmore
    5db4:	ldr	w25, [x24, #32]
    5db8:	ldr	x1, [sp, #112]
    5dbc:	b	5c20 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x50>
    5dc0:	ldr	x0, [sp, #112]
    5dc4:	b	5d64 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x194>
    5dc8:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5dcc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5dd0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5dd4:	add	x3, x3, #0x0
    5dd8:	add	x1, x1, #0x0
    5ddc:	add	x0, x0, #0x0
    5de0:	mov	w2, #0x95                  	// #149
    5de4:	bl	0 <__assert_fail>
    5de8:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5dec:	add	x3, x3, #0x0
    5df0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5df4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5df8:	add	x1, x1, #0x0
    5dfc:	add	x0, x0, #0x0
    5e00:	mov	w2, #0x69                  	// #105
    5e04:	bl	0 <__assert_fail>
    5e08:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5e0c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5e10:	add	x3, x3, #0x0
    5e14:	b	5df4 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x224>
    5e18:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5e1c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5e20:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5e24:	add	x3, x3, #0x0
    5e28:	add	x1, x1, #0x0
    5e2c:	add	x0, x0, #0x0
    5e30:	mov	w2, #0x22e                 	// #558
    5e34:	bl	0 <__assert_fail>
    5e38:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5e3c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5e40:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5e44:	add	x3, x3, #0x0
    5e48:	add	x1, x1, #0x0
    5e4c:	add	x0, x0, #0x0
    5e50:	mov	w2, #0x1b9                 	// #441
    5e54:	bl	0 <__assert_fail>
    5e58:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5e5c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5e60:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5e64:	add	x3, x3, #0x0
    5e68:	add	x1, x1, #0x0
    5e6c:	add	x0, x0, #0x0
    5e70:	mov	w2, #0x43                  	// #67
    5e74:	bl	0 <__assert_fail>

0000000000005e78 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE>:
    5e78:	stp	x29, x30, [sp, #-224]!
    5e7c:	mov	x29, sp
    5e80:	stp	x19, x20, [sp, #16]
    5e84:	cbz	x1, 6040 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x1c8>
    5e88:	mov	x20, x1
    5e8c:	ldr	w1, [x1, #8]
    5e90:	cmp	w1, #0x3
    5e94:	b.eq	5eb4 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x3c>  // b.none
    5e98:	cbnz	w1, 5ec8 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x50>
    5e9c:	ldr	x0, [x0, #24]
    5ea0:	mov	x19, #0x0                   	// #0
    5ea4:	cmp	x0, #0x1
    5ea8:	b.hi	5eb8 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x40>  // b.pmore
    5eac:	and	w0, w0, #0x1
    5eb0:	bl	2550 <_ZN4llvm7BitInit3getEb>
    5eb4:	mov	x19, x0
    5eb8:	mov	x0, x19
    5ebc:	ldp	x19, x20, [sp, #16]
    5ec0:	ldp	x29, x30, [sp], #224
    5ec4:	ret
    5ec8:	cmp	w1, #0x1
    5ecc:	mov	x19, #0x0                   	// #0
    5ed0:	b.ne	5eb8 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x40>  // b.any
    5ed4:	stp	x21, x22, [sp, #32]
    5ed8:	ldr	w22, [x20, #24]
    5edc:	stp	x23, x24, [sp, #48]
    5ee0:	cmp	w22, #0x3f
    5ee4:	ldr	x23, [x0, #24]
    5ee8:	b.ls	5fc4 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x14c>  // b.plast
    5eec:	stp	x25, x26, [sp, #64]
    5ef0:	add	x25, sp, #0x50
    5ef4:	add	x1, x25, #0x10
    5ef8:	mov	x0, #0x1000000000          	// #68719476736
    5efc:	stp	x1, x0, [sp, #80]
    5f00:	mov	w21, w22
    5f04:	cmp	x21, #0x10
    5f08:	mov	x26, x21
    5f0c:	mov	w2, w22
    5f10:	b.hi	5ff8 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x180>  // b.pmore
    5f14:	str	w22, [sp, #88]
    5f18:	add	x0, x1, x21, lsl #3
    5f1c:	cmp	x1, x0
    5f20:	b.eq	5f34 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0xbc>  // b.none
    5f24:	nop
    5f28:	str	xzr, [x1], #8
    5f2c:	cmp	x0, x1
    5f30:	b.ne	5f28 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0xb0>  // b.any
    5f34:	mov	w19, #0x0                   	// #0
    5f38:	mov	x24, #0x1                   	// #1
    5f3c:	cbnz	w2, 5f48 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0xd0>
    5f40:	b	5f8c <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x114>
    5f44:	ldr	w21, [sp, #88]
    5f48:	cmp	w19, #0x3f
    5f4c:	mov	w0, #0x0                   	// #0
    5f50:	b.hi	5f60 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0xe8>  // b.pmore
    5f54:	lsl	x0, x24, x19
    5f58:	tst	x0, x23
    5f5c:	cset	w0, ne  // ne = any
    5f60:	cmp	x21, w19, uxtw
    5f64:	mov	w21, w19
    5f68:	b.ls	6020 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x1a8>  // b.plast
    5f6c:	ldr	x22, [sp, #80]
    5f70:	bl	2550 <_ZN4llvm7BitInit3getEb>
    5f74:	ldr	w1, [x20, #24]
    5f78:	add	w19, w19, #0x1
    5f7c:	str	x0, [x22, x21, lsl #3]
    5f80:	cmp	w1, w19
    5f84:	b.ne	5f44 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0xcc>  // b.any
    5f88:	ldr	w26, [sp, #88]
    5f8c:	ldr	x0, [sp, #80]
    5f90:	mov	x1, x26
    5f94:	add	x25, x25, #0x10
    5f98:	bl	58f8 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
    5f9c:	mov	x19, x0
    5fa0:	ldr	x1, [sp, #80]
    5fa4:	cmp	x1, x25
    5fa8:	b.eq	5fe8 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x170>  // b.none
    5fac:	mov	x0, x1
    5fb0:	bl	0 <free>
    5fb4:	ldp	x21, x22, [sp, #32]
    5fb8:	ldp	x23, x24, [sp, #48]
    5fbc:	ldp	x25, x26, [sp, #64]
    5fc0:	b	5eb8 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x40>
    5fc4:	asr	x0, x23, x22
    5fc8:	cbz	x0, 5eec <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x74>
    5fcc:	sub	w0, w22, #0x1
    5fd0:	asr	x0, x23, x0
    5fd4:	cmn	x0, #0x1
    5fd8:	b.eq	5eec <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x74>  // b.none
    5fdc:	ldp	x21, x22, [sp, #32]
    5fe0:	ldp	x23, x24, [sp, #48]
    5fe4:	b	5eb8 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x40>
    5fe8:	ldp	x21, x22, [sp, #32]
    5fec:	ldp	x23, x24, [sp, #48]
    5ff0:	ldp	x25, x26, [sp, #64]
    5ff4:	b	5eb8 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x40>
    5ff8:	mov	x0, x25
    5ffc:	mov	x2, x21
    6000:	mov	x3, #0x8                   	// #8
    6004:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6008:	ldr	w0, [sp, #92]
    600c:	cmp	x21, x0
    6010:	b.hi	606c <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x1f4>  // b.pmore
    6014:	ldr	w2, [x20, #24]
    6018:	ldr	x1, [sp, #80]
    601c:	b	5f14 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x9c>
    6020:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6024:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6028:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    602c:	add	x3, x3, #0x0
    6030:	add	x1, x1, #0x0
    6034:	add	x0, x0, #0x0
    6038:	mov	w2, #0x95                  	// #149
    603c:	bl	0 <__assert_fail>
    6040:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6044:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6048:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    604c:	add	x3, x3, #0x0
    6050:	add	x1, x1, #0x0
    6054:	add	x0, x0, #0x0
    6058:	mov	w2, #0x69                  	// #105
    605c:	stp	x21, x22, [sp, #32]
    6060:	stp	x23, x24, [sp, #48]
    6064:	stp	x25, x26, [sp, #64]
    6068:	bl	0 <__assert_fail>
    606c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6070:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6074:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6078:	add	x3, x3, #0x0
    607c:	add	x1, x1, #0x0
    6080:	add	x0, x0, #0x0
    6084:	mov	w2, #0x43                  	// #67
    6088:	bl	0 <__assert_fail>
    608c:	nop

0000000000006090 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE>:
    6090:	stp	x29, x30, [sp, #-224]!
    6094:	mov	x4, #0x1000000000          	// #68719476736
    6098:	cmp	x2, #0x10
    609c:	mov	x29, sp
    60a0:	stp	x23, x24, [sp, #48]
    60a4:	add	x23, sp, #0x50
    60a8:	add	x3, x23, #0x10
    60ac:	stp	x19, x20, [sp, #16]
    60b0:	mov	x20, x2
    60b4:	stp	x21, x22, [sp, #32]
    60b8:	mov	x22, x1
    60bc:	str	x25, [sp, #64]
    60c0:	mov	x25, x0
    60c4:	stp	x3, x4, [sp, #80]
    60c8:	b.hi	6194 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x104>  // b.pmore
    60cc:	str	w20, [sp, #88]
    60d0:	add	x0, x3, x2, lsl #3
    60d4:	mov	w21, w20
    60d8:	mov	x2, x3
    60dc:	cmp	x0, x3
    60e0:	b.eq	60f4 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x64>  // b.none
    60e4:	nop
    60e8:	str	xzr, [x2], #8
    60ec:	cmp	x2, x0
    60f0:	b.ne	60e8 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x58>  // b.any
    60f4:	cbz	w21, 6180 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xf0>
    60f8:	sub	w21, w21, #0x1
    60fc:	mov	x19, #0x0                   	// #0
    6100:	b	613c <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xac>
    6104:	ldr	x0, [x25, #24]
    6108:	ldr	w4, [sp, #88]
    610c:	asr	x0, x0, x3
    6110:	cmp	x4, x19
    6114:	and	w0, w0, #0x1
    6118:	b.ls	61c4 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x134>  // b.plast
    611c:	ldr	x24, [sp, #80]
    6120:	bl	2550 <_ZN4llvm7BitInit3getEb>
    6124:	cmp	x21, x19
    6128:	str	x0, [x24, x19, lsl #3]
    612c:	b.eq	617c <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xec>  // b.none
    6130:	add	x19, x19, #0x1
    6134:	cmp	x20, x19
    6138:	b.eq	61e4 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x154>  // b.none
    613c:	ldr	w3, [x22, x19, lsl #2]
    6140:	cmp	w3, #0x3f
    6144:	b.ls	6104 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x74>  // b.plast
    6148:	mov	x19, #0x0                   	// #0
    614c:	ldr	x0, [sp, #80]
    6150:	add	x23, x23, #0x10
    6154:	cmp	x0, x23
    6158:	b.eq	6160 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xd0>  // b.none
    615c:	bl	0 <free>
    6160:	mov	x0, x19
    6164:	ldp	x19, x20, [sp, #16]
    6168:	ldp	x21, x22, [sp, #32]
    616c:	ldp	x23, x24, [sp, #48]
    6170:	ldr	x25, [sp, #64]
    6174:	ldp	x29, x30, [sp], #224
    6178:	ret
    617c:	ldr	w21, [sp, #88]
    6180:	ldr	x0, [sp, #80]
    6184:	mov	w1, w21
    6188:	bl	58f8 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
    618c:	mov	x19, x0
    6190:	b	614c <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xbc>
    6194:	mov	x1, x3
    6198:	mov	x0, x23
    619c:	mov	x3, #0x8                   	// #8
    61a0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    61a4:	ldr	w0, [sp, #92]
    61a8:	cmp	x20, x0
    61ac:	b.hi	6204 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x174>  // b.pmore
    61b0:	ldr	x2, [sp, #80]
    61b4:	mov	w21, w20
    61b8:	str	w20, [sp, #88]
    61bc:	add	x0, x2, x20, lsl #3
    61c0:	b	60e8 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x58>
    61c4:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    61c8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    61cc:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    61d0:	add	x3, x3, #0x0
    61d4:	add	x1, x1, #0x0
    61d8:	add	x0, x0, #0x0
    61dc:	mov	w2, #0x95                  	// #149
    61e0:	bl	0 <__assert_fail>
    61e4:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    61e8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    61ec:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    61f0:	add	x3, x3, #0x0
    61f4:	add	x1, x1, #0x0
    61f8:	add	x0, x0, #0x0
    61fc:	mov	w2, #0xfa                  	// #250
    6200:	bl	0 <__assert_fail>
    6204:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6208:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    620c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6210:	add	x3, x3, #0x0
    6214:	add	x1, x1, #0x0
    6218:	add	x0, x0, #0x0
    621c:	mov	w2, #0x43                  	// #67
    6220:	bl	0 <__assert_fail>
    6224:	nop

0000000000006228 <_ZNK4llvm9TypedInit20convertInitializerToEPNS_5RecTyE>:
    6228:	stp	x29, x30, [sp, #-48]!
    622c:	mov	x29, sp
    6230:	stp	x19, x20, [sp, #16]
    6234:	mov	x19, x0
    6238:	ldr	x0, [x0, #16]
    623c:	cmp	x0, x1
    6240:	b.eq	628c <_ZNK4llvm9TypedInit20convertInitializerToEPNS_5RecTyE+0x64>  // b.none
    6244:	ldr	x2, [x0]
    6248:	mov	x20, x1
    624c:	ldr	x2, [x2, #32]
    6250:	blr	x2
    6254:	tst	w0, #0xff
    6258:	b.ne	628c <_ZNK4llvm9TypedInit20convertInitializerToEPNS_5RecTyE+0x64>  // b.any
    625c:	ldr	x0, [x19, #16]
    6260:	cbz	x0, 62d0 <_ZNK4llvm9TypedInit20convertInitializerToEPNS_5RecTyE+0xa8>
    6264:	ldr	w0, [x0, #8]
    6268:	cbnz	w0, 629c <_ZNK4llvm9TypedInit20convertInitializerToEPNS_5RecTyE+0x74>
    626c:	cbz	x20, 62cc <_ZNK4llvm9TypedInit20convertInitializerToEPNS_5RecTyE+0xa4>
    6270:	ldr	w1, [x20, #8]
    6274:	mov	x0, #0x0                   	// #0
    6278:	cmp	w1, #0x1
    627c:	b.eq	62ac <_ZNK4llvm9TypedInit20convertInitializerToEPNS_5RecTyE+0x84>  // b.none
    6280:	ldp	x19, x20, [sp, #16]
    6284:	ldp	x29, x30, [sp], #48
    6288:	ret
    628c:	mov	x0, x19
    6290:	ldp	x19, x20, [sp, #16]
    6294:	ldp	x29, x30, [sp], #48
    6298:	ret
    629c:	mov	x0, #0x0                   	// #0
    62a0:	ldp	x19, x20, [sp, #16]
    62a4:	ldp	x29, x30, [sp], #48
    62a8:	ret
    62ac:	ldr	w1, [x20, #24]
    62b0:	cmp	w1, #0x1
    62b4:	b.ne	6280 <_ZNK4llvm9TypedInit20convertInitializerToEPNS_5RecTyE+0x58>  // b.any
    62b8:	add	x0, sp, #0x28
    62bc:	mov	x1, #0x1                   	// #1
    62c0:	str	x19, [sp, #40]
    62c4:	bl	58f8 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
    62c8:	b	6280 <_ZNK4llvm9TypedInit20convertInitializerToEPNS_5RecTyE+0x58>
    62cc:	bl	778 <_ZN4llvm13isa_impl_wrapINS_9BitsRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>
    62d0:	bl	898 <_ZN4llvm3isaINS_8BitRecTyEPNS_5RecTyEEEbRKT0_.isra.0.part.0>
    62d4:	nop

00000000000062d8 <_ZN4llvm9RecordVal8setValueEPNS_4InitE>:
    62d8:	sub	sp, sp, #0x250
    62dc:	stp	x29, x30, [sp]
    62e0:	mov	x29, sp
    62e4:	stp	x23, x24, [sp, #48]
    62e8:	mov	x24, x0
    62ec:	cbz	x1, 6454 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x17c>
    62f0:	ldr	x2, [x1]
    62f4:	mov	x0, x1
    62f8:	ldr	x1, [x24, #8]
    62fc:	ldr	x2, [x2, #56]
    6300:	and	x1, x1, #0xfffffffffffffff8
    6304:	blr	x2
    6308:	str	x0, [x24, #16]
    630c:	cbz	x0, 6348 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x70>
    6310:	ldrb	w1, [x0, #8]
    6314:	stp	x19, x20, [sp, #16]
    6318:	sub	w1, w1, #0x1
    631c:	ldr	x19, [x24, #8]
    6320:	and	w1, w1, #0xff
    6324:	cmp	w1, #0x16
    6328:	and	x19, x19, #0xfffffffffffffff8
    632c:	b.ls	642c <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x154>  // b.plast
    6330:	cbz	x19, 64d8 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x200>
    6334:	ldr	w1, [x19, #8]
    6338:	ldr	x0, [x24, #16]
    633c:	cmp	w1, #0x1
    6340:	b.eq	6360 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x88>  // b.none
    6344:	ldp	x19, x20, [sp, #16]
    6348:	cmp	x0, #0x0
    634c:	cset	w0, eq  // eq = none
    6350:	ldp	x29, x30, [sp]
    6354:	ldp	x23, x24, [sp, #48]
    6358:	add	sp, sp, #0x250
    635c:	ret
    6360:	cbz	x0, 64d0 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x1f8>
    6364:	ldrb	w1, [x0, #8]
    6368:	cmp	w1, #0x3
    636c:	b.eq	6344 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x6c>  // b.none
    6370:	stp	x21, x22, [sp, #32]
    6374:	add	x22, sp, #0x40
    6378:	ldr	w21, [x19, #24]
    637c:	add	x1, x22, #0x10
    6380:	mov	x0, #0x4000000000          	// #274877906944
    6384:	stp	x1, x0, [sp, #64]
    6388:	cmp	w21, #0x40
    638c:	mov	w2, w21
    6390:	b.hi	6494 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x1bc>  // b.pmore
    6394:	cbz	w21, 64a8 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x1d0>
    6398:	add	x23, x22, #0x10
    639c:	mov	w19, #0x0                   	// #0
    63a0:	ldr	x0, [x24, #16]
    63a4:	mov	w1, w19
    63a8:	ldr	x2, [x0]
    63ac:	ldr	x2, [x2, #104]
    63b0:	blr	x2
    63b4:	mov	x20, x0
    63b8:	ldp	w1, w0, [sp, #72]
    63bc:	cmp	w1, w0
    63c0:	b.cs	646c <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x194>  // b.hs, b.nlast
    63c4:	ldr	x0, [sp, #64]
    63c8:	str	x20, [x0, w1, uxtw #3]
    63cc:	ldp	w1, w0, [sp, #72]
    63d0:	mov	w2, w1
    63d4:	add	x2, x2, #0x1
    63d8:	cmp	x2, x0
    63dc:	b.hi	64b0 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x1d8>  // b.pmore
    63e0:	add	w1, w1, #0x1
    63e4:	str	w1, [sp, #72]
    63e8:	add	w19, w19, #0x1
    63ec:	cmp	w19, w21
    63f0:	b.ne	63a0 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0xc8>  // b.any
    63f4:	ldr	x0, [sp, #64]
    63f8:	mov	w1, w1
    63fc:	add	x22, x22, #0x10
    6400:	bl	58f8 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
    6404:	str	x0, [x24, #16]
    6408:	ldr	x1, [sp, #64]
    640c:	cmp	x1, x22
    6410:	b.eq	6488 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x1b0>  // b.none
    6414:	mov	x0, x1
    6418:	bl	0 <free>
    641c:	ldr	x0, [x24, #16]
    6420:	ldp	x19, x20, [sp, #16]
    6424:	ldp	x21, x22, [sp, #32]
    6428:	b	6348 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x70>
    642c:	ldr	x0, [x0, #16]
    6430:	mov	x1, x19
    6434:	ldr	x2, [x0]
    6438:	ldr	x2, [x2, #32]
    643c:	blr	x2
    6440:	tst	w0, #0xff
    6444:	b.eq	64e0 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x208>  // b.none
    6448:	ldr	x19, [x24, #8]
    644c:	and	x19, x19, #0xfffffffffffffff8
    6450:	b	6330 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x58>
    6454:	str	xzr, [x24, #16]
    6458:	mov	w0, #0x0                   	// #0
    645c:	ldp	x29, x30, [sp]
    6460:	ldp	x23, x24, [sp, #48]
    6464:	add	sp, sp, #0x250
    6468:	ret
    646c:	mov	x1, x23
    6470:	mov	x0, x22
    6474:	mov	x3, #0x8                   	// #8
    6478:	mov	x2, #0x0                   	// #0
    647c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6480:	ldr	w1, [sp, #72]
    6484:	b	63c4 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0xec>
    6488:	ldp	x19, x20, [sp, #16]
    648c:	ldp	x21, x22, [sp, #32]
    6490:	b	6348 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x70>
    6494:	mov	x0, x22
    6498:	mov	x3, #0x8                   	// #8
    649c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    64a0:	ldr	w21, [x19, #24]
    64a4:	b	6394 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0xbc>
    64a8:	ldr	w1, [sp, #72]
    64ac:	b	63f4 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x11c>
    64b0:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    64b4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    64b8:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    64bc:	add	x3, x3, #0x0
    64c0:	add	x1, x1, #0x0
    64c4:	add	x0, x0, #0x0
    64c8:	mov	w2, #0x43                  	// #67
    64cc:	bl	0 <__assert_fail>
    64d0:	stp	x21, x22, [sp, #32]
    64d4:	bl	960 <_ZN4llvm3isaINS_8BitsInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    64d8:	stp	x21, x22, [sp, #32]
    64dc:	bl	778 <_ZN4llvm13isa_impl_wrapINS_9BitsRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>
    64e0:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    64e4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    64e8:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    64ec:	add	x3, x3, #0x0
    64f0:	add	x1, x1, #0x0
    64f4:	add	x0, x0, #0x0
    64f8:	mov	w2, #0x7f4                 	// #2036
    64fc:	stp	x21, x22, [sp, #32]
    6500:	bl	0 <__assert_fail>
    6504:	nop

0000000000006508 <_ZN4llvm9RecordValC1EPNS_4InitEPNS_5RecTyEb>:
    6508:	stp	x29, x30, [sp, #-32]!
    650c:	tst	x2, #0x7
    6510:	mov	x29, sp
    6514:	str	x19, [sp, #16]
    6518:	stp	x1, xzr, [x0]
    651c:	b.ne	655c <_ZN4llvm9RecordValC1EPNS_4InitEPNS_5RecTyEb+0x54>  // b.any
    6520:	and	w3, w3, #0xff
    6524:	and	x2, x2, #0xfffffffffffffffb
    6528:	mov	x19, x0
    652c:	ubfiz	x3, x3, #2, #8
    6530:	orr	x2, x2, x3
    6534:	str	x2, [x0, #8]
    6538:	bl	24b8 <_ZN4llvm9UnsetInit3getEv>
    653c:	mov	x1, x0
    6540:	mov	x0, x19
    6544:	bl	62d8 <_ZN4llvm9RecordVal8setValueEPNS_4InitE>
    6548:	ldr	x0, [x19, #16]
    654c:	cbz	x0, 657c <_ZN4llvm9RecordValC1EPNS_4InitEPNS_5RecTyEb+0x74>
    6550:	ldr	x19, [sp, #16]
    6554:	ldp	x29, x30, [sp], #32
    6558:	ret
    655c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6560:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6564:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6568:	add	x3, x3, #0x0
    656c:	add	x1, x1, #0x0
    6570:	add	x0, x0, #0x0
    6574:	mov	w2, #0xb2                  	// #178
    6578:	bl	0 <__assert_fail>
    657c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6580:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6584:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6588:	add	x3, x3, #0x0
    658c:	add	x1, x1, #0x0
    6590:	add	x0, x0, #0x0
    6594:	mov	w2, #0x7e9                 	// #2025
    6598:	bl	0 <__assert_fail>
    659c:	nop

00000000000065a0 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE>:
    65a0:	sub	sp, sp, #0x2d0
    65a4:	mov	w3, #0x18                  	// #24
    65a8:	stp	x29, x30, [sp]
    65ac:	mov	x29, sp
    65b0:	stp	x19, x20, [sp, #16]
    65b4:	mov	x20, x0
    65b8:	stp	x21, x22, [sp, #32]
    65bc:	ldr	w21, [x0, #80]
    65c0:	ldr	x19, [x0, #72]
    65c4:	stp	x23, x24, [sp, #48]
    65c8:	mov	x23, x1
    65cc:	umaddl	x21, w21, w3, x19
    65d0:	cmp	x21, x19
    65d4:	b.eq	6628 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x88>  // b.none
    65d8:	mov	x22, x2
    65dc:	stp	x25, x26, [sp, #64]
    65e0:	cmp	x22, x19
    65e4:	b.eq	6618 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x78>  // b.none
    65e8:	ldr	x0, [x19, #16]
    65ec:	cbz	x0, 6618 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x78>
    65f0:	ldr	x2, [x0]
    65f4:	mov	x1, x23
    65f8:	ldr	x2, [x2, #96]
    65fc:	blr	x2
    6600:	mov	x25, x0
    6604:	mov	x1, x25
    6608:	mov	x0, x19
    660c:	bl	62d8 <_ZN4llvm9RecordVal8setValueEPNS_4InitE>
    6610:	tst	w0, #0xff
    6614:	b.ne	666c <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0xcc>  // b.any
    6618:	add	x19, x19, #0x18
    661c:	cmp	x21, x19
    6620:	b.ne	65e0 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x40>  // b.any
    6624:	ldp	x25, x26, [sp, #64]
    6628:	mov	x1, x23
    662c:	ldr	x19, [x20]
    6630:	mov	x0, x19
    6634:	ldr	x2, [x19]
    6638:	ldr	x2, [x2, #96]
    663c:	blr	x2
    6640:	mov	x1, x0
    6644:	cmp	x0, x19
    6648:	b.eq	6654 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0xb4>  // b.none
    664c:	mov	x0, x20
    6650:	bl	3608 <_ZN4llvm6Record7setNameEPNS_4InitE>
    6654:	ldp	x29, x30, [sp]
    6658:	ldp	x19, x20, [sp, #16]
    665c:	ldp	x21, x22, [sp, #32]
    6660:	ldp	x23, x24, [sp, #48]
    6664:	add	sp, sp, #0x2d0
    6668:	ret
    666c:	stp	x27, x28, [sp, #80]
    6670:	add	x28, sp, #0x250
    6674:	add	x0, x28, #0x10
    6678:	str	x0, [sp, #592]
    667c:	str	xzr, [sp, #600]
    6680:	strb	wzr, [sp, #608]
    6684:	cbz	x25, 6974 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x3d4>
    6688:	ldrb	w0, [x25, #8]
    668c:	sub	w0, w0, #0x1
    6690:	and	w0, w0, #0xff
    6694:	cmp	w0, #0x16
    6698:	b.ls	68b0 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x310>  // b.plast
    669c:	add	x22, sp, #0x290
    66a0:	add	x24, sp, #0x270
    66a4:	add	x21, sp, #0x2b0
    66a8:	add	x26, sp, #0x1f0
    66ac:	add	x27, sp, #0x208
    66b0:	add	x23, sp, #0x220
    66b4:	add	x0, sp, #0x238
    66b8:	str	x0, [sp, #96]
    66bc:	ldr	w6, [x20, #16]
    66c0:	add	x2, sp, #0xb8
    66c4:	ldr	x7, [x20, #8]
    66c8:	add	x4, sp, #0xd0
    66cc:	mov	x0, x2
    66d0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    66d4:	add	x1, x1, #0x0
    66d8:	stp	x4, x2, [sp, #104]
    66dc:	add	x20, sp, #0xe8
    66e0:	stp	x7, x6, [sp, #160]
    66e4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    66e8:	mov	x1, x28
    66ec:	ldr	x4, [sp, #104]
    66f0:	mov	x28, x4
    66f4:	mov	x0, x4
    66f8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    66fc:	ldr	x2, [sp, #112]
    6700:	mov	x8, x20
    6704:	mov	x1, x28
    6708:	add	x28, sp, #0x100
    670c:	mov	x0, x2
    6710:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6714:	add	x11, sp, #0x118
    6718:	mov	x0, x28
    671c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6720:	add	x1, x1, #0x0
    6724:	str	x11, [sp, #104]
    6728:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    672c:	ldr	x11, [sp, #104]
    6730:	mov	x1, x28
    6734:	mov	x0, x20
    6738:	str	x11, [sp, #152]
    673c:	mov	x8, x11
    6740:	add	x28, sp, #0x1a8
    6744:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6748:	add	x20, sp, #0x1d8
    674c:	ldr	x0, [x19]
    6750:	add	x2, sp, #0x1c0
    6754:	add	x5, sp, #0x190
    6758:	add	x4, sp, #0x178
    675c:	add	x10, sp, #0x160
    6760:	add	x9, sp, #0x148
    6764:	ldr	x1, [x0]
    6768:	add	x12, sp, #0x130
    676c:	stp	x12, x2, [sp, #104]
    6770:	mov	x8, x24
    6774:	ldr	x1, [x1, #48]
    6778:	stp	x5, x4, [sp, #120]
    677c:	stp	x10, x9, [sp, #136]
    6780:	blr	x1
    6784:	ldr	x12, [sp, #104]
    6788:	mov	x1, x24
    678c:	mov	x0, x12
    6790:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6794:	ldp	x9, x11, [sp, #144]
    6798:	ldr	x0, [sp, #104]
    679c:	mov	x1, x0
    67a0:	mov	x24, x9
    67a4:	mov	x8, x9
    67a8:	mov	x0, x11
    67ac:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    67b0:	ldr	x10, [sp, #136]
    67b4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    67b8:	add	x1, x1, #0x0
    67bc:	str	x10, [sp, #104]
    67c0:	mov	x0, x10
    67c4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    67c8:	ldr	x4, [sp, #128]
    67cc:	ldr	x0, [sp, #104]
    67d0:	mov	x8, x4
    67d4:	mov	x1, x0
    67d8:	mov	x0, x24
    67dc:	mov	x24, x4
    67e0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    67e4:	ldr	x0, [x19, #8]
    67e8:	mov	x8, x22
    67ec:	and	x0, x0, #0xfffffffffffffff8
    67f0:	ldr	x1, [x0]
    67f4:	ldr	x1, [x1, #16]
    67f8:	blr	x1
    67fc:	ldr	x5, [sp, #120]
    6800:	mov	x1, x22
    6804:	mov	x0, x5
    6808:	mov	x22, x5
    680c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6810:	mov	x8, x28
    6814:	mov	x1, x22
    6818:	mov	x0, x24
    681c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6820:	ldr	x2, [sp, #112]
    6824:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6828:	add	x1, x1, #0x0
    682c:	mov	x22, x2
    6830:	mov	x0, x2
    6834:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6838:	mov	x1, x22
    683c:	mov	x0, x28
    6840:	mov	x8, x20
    6844:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6848:	ldr	x1, [x25]
    684c:	mov	x8, x21
    6850:	mov	x0, x25
    6854:	ldr	x1, [x1, #48]
    6858:	blr	x1
    685c:	mov	x1, x21
    6860:	mov	x0, x26
    6864:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6868:	mov	x8, x27
    686c:	mov	x1, x26
    6870:	mov	x0, x20
    6874:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6878:	mov	x0, x23
    687c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6880:	add	x1, x1, #0x0
    6884:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6888:	ldr	x19, [sp, #96]
    688c:	mov	x1, x23
    6890:	mov	x0, x27
    6894:	mov	x8, x19
    6898:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    689c:	ldp	x7, x6, [sp, #160]
    68a0:	mov	x2, x19
    68a4:	mov	x0, x7
    68a8:	mov	x1, x6
    68ac:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    68b0:	add	x26, sp, #0x1f0
    68b4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    68b8:	mov	x0, x26
    68bc:	add	x1, x1, #0x0
    68c0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    68c4:	add	x22, sp, #0x290
    68c8:	ldr	x0, [x25, #16]
    68cc:	add	x1, sp, #0x238
    68d0:	str	x1, [sp, #96]
    68d4:	mov	x8, x22
    68d8:	add	x27, sp, #0x208
    68dc:	add	x23, sp, #0x220
    68e0:	ldr	x1, [x0]
    68e4:	add	x24, sp, #0x270
    68e8:	add	x21, sp, #0x2b0
    68ec:	ldr	x1, [x1, #16]
    68f0:	blr	x1
    68f4:	mov	x1, x22
    68f8:	mov	x0, x27
    68fc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6900:	mov	x8, x23
    6904:	mov	x1, x27
    6908:	mov	x0, x26
    690c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6910:	ldr	x0, [sp, #96]
    6914:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6918:	add	x1, x1, #0x0
    691c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6920:	ldr	x1, [sp, #96]
    6924:	mov	x0, x23
    6928:	mov	x8, x24
    692c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6930:	mov	x8, x21
    6934:	mov	x0, x24
    6938:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
    693c:	mov	x1, x21
    6940:	mov	x0, x28
    6944:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
    6948:	ldr	x0, [sp, #688]
    694c:	add	x1, x21, #0x10
    6950:	cmp	x0, x1
    6954:	b.eq	695c <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x3bc>  // b.none
    6958:	bl	0 <_ZdlPv>
    695c:	ldr	x0, [sp, #656]
    6960:	add	x1, x22, #0x10
    6964:	cmp	x0, x1
    6968:	b.eq	66bc <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x11c>  // b.none
    696c:	bl	0 <_ZdlPv>
    6970:	b	66bc <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x11c>
    6974:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6978:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    697c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6980:	add	x3, x3, #0x0
    6984:	add	x1, x1, #0x0
    6988:	add	x0, x0, #0x0
    698c:	mov	w2, #0x69                  	// #105
    6990:	bl	0 <__assert_fail>
    6994:	nop

0000000000006998 <_ZN4llvm6Record17resolveReferencesEv>:
    6998:	stp	x29, x30, [sp, #-144]!
    699c:	mov	x3, #0x400000000           	// #17179869184
    69a0:	mov	w4, #0x1                   	// #1
    69a4:	mov	x29, sp
    69a8:	stp	x19, x20, [sp, #16]
    69ac:	adrp	x19, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    69b0:	add	x1, sp, #0x28
    69b4:	ldr	x19, [x19]
    69b8:	add	x20, x1, #0x48
    69bc:	mov	x2, #0x0                   	// #0
    69c0:	strb	w4, [sp, #56]
    69c4:	add	x19, x19, #0x10
    69c8:	stp	x19, x0, [sp, #40]
    69cc:	stp	xzr, xzr, [sp, #64]
    69d0:	str	xzr, [sp, #80]
    69d4:	str	wzr, [sp, #88]
    69d8:	stp	x20, x3, [sp, #96]
    69dc:	bl	65a0 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE>
    69e0:	ldr	x0, [sp, #96]
    69e4:	str	x19, [sp, #40]
    69e8:	cmp	x0, x20
    69ec:	b.eq	69f4 <_ZN4llvm6Record17resolveReferencesEv+0x5c>  // b.none
    69f0:	bl	0 <free>
    69f4:	ldr	x0, [sp, #72]
    69f8:	ldr	w1, [sp, #88]
    69fc:	lsl	x1, x1, #4
    6a00:	bl	0 <_ZdlPvm>
    6a04:	ldp	x19, x20, [sp, #16]
    6a08:	ldp	x29, x30, [sp], #144
    6a0c:	ret

0000000000006a10 <_ZN4llvm6Record19resolveReferencesToEPKNS_9RecordValE>:
    6a10:	stp	x29, x30, [sp, #-48]!
    6a14:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6a18:	mov	x2, x1
    6a1c:	mov	x29, sp
    6a20:	ldr	x3, [x3]
    6a24:	add	x1, sp, #0x10
    6a28:	strb	wzr, [sp, #32]
    6a2c:	add	x3, x3, #0x10
    6a30:	stp	x3, x0, [sp, #16]
    6a34:	str	x2, [sp, #40]
    6a38:	bl	65a0 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE>
    6a3c:	ldp	x29, x30, [sp], #48
    6a40:	ret
    6a44:	nop

0000000000006a48 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE>:
    6a48:	stp	x29, x30, [sp, #-240]!
    6a4c:	mov	x29, sp
    6a50:	stp	x19, x20, [sp, #16]
    6a54:	adrp	x19, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6a58:	stp	x23, x24, [sp, #48]
    6a5c:	add	x24, x19, #0x0
    6a60:	and	w23, w0, #0xff
    6a64:	add	x20, x24, #0x1e0
    6a68:	stp	x21, x22, [sp, #32]
    6a6c:	mov	x21, x1
    6a70:	mov	x22, x2
    6a74:	ldarb	w0, [x20]
    6a78:	tbz	w0, #0, 6b00 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE+0xb8>
    6a7c:	add	x20, x19, #0x0
    6a80:	add	x19, sp, #0x60
    6a84:	add	x3, x19, #0x10
    6a88:	mov	x2, #0x2000000000          	// #137438953472
    6a8c:	mov	x0, x19
    6a90:	mov	w1, w23
    6a94:	stp	x3, x2, [sp, #96]
    6a98:	add	x24, x20, #0x1e8
    6a9c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEj>
    6aa0:	mov	x1, x21
    6aa4:	mov	x0, x19
    6aa8:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    6aac:	mov	x1, x22
    6ab0:	mov	x0, x19
    6ab4:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    6ab8:	str	xzr, [sp, #88]
    6abc:	mov	x0, x24
    6ac0:	mov	x1, x19
    6ac4:	add	x2, sp, #0x58
    6ac8:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
    6acc:	cbz	x0, 6b58 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE+0x110>
    6ad0:	sub	x20, x0, #0x18
    6ad4:	ldr	x0, [sp, #96]
    6ad8:	add	x19, x19, #0x10
    6adc:	cmp	x0, x19
    6ae0:	b.eq	6ae8 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE+0xa0>  // b.none
    6ae4:	bl	0 <free>
    6ae8:	mov	x0, x20
    6aec:	ldp	x19, x20, [sp, #16]
    6af0:	ldp	x21, x22, [sp, #32]
    6af4:	ldp	x23, x24, [sp, #48]
    6af8:	ldp	x29, x30, [sp], #240
    6afc:	ret
    6b00:	mov	x0, x20
    6b04:	bl	0 <__cxa_guard_acquire>
    6b08:	cbz	w0, 6a7c <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE+0x34>
    6b0c:	str	x25, [sp, #64]
    6b10:	add	x25, x24, #0x1e8
    6b14:	mov	x0, x25
    6b18:	mov	w1, #0x6                   	// #6
    6b1c:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
    6b20:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6b24:	mov	x0, x20
    6b28:	ldr	x1, [x1]
    6b2c:	add	x1, x1, #0x10
    6b30:	str	x1, [x24, #488]
    6b34:	bl	0 <__cxa_guard_release>
    6b38:	mov	x1, x25
    6b3c:	adrp	x2, 0 <__dso_handle>
    6b40:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6b44:	add	x2, x2, #0x0
    6b48:	add	x0, x0, #0x0
    6b4c:	bl	0 <__cxa_atexit>
    6b50:	ldr	x25, [sp, #64]
    6b54:	b	6a7c <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE+0x34>
    6b58:	add	x0, x20, #0x88
    6b5c:	mov	w2, #0x4                   	// #4
    6b60:	mov	x1, #0x28                  	// #40
    6b64:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6b68:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6b6c:	mov	x20, x0
    6b70:	ldr	x2, [sp, #88]
    6b74:	mov	w3, #0xd                   	// #13
    6b78:	ldr	x1, [x1]
    6b7c:	strb	w3, [x20, #8]
    6b80:	strb	w23, [x20, #9]
    6b84:	mov	x0, x24
    6b88:	add	x1, x1, #0x10
    6b8c:	str	x1, [x20]
    6b90:	stp	x22, xzr, [x20, #16]
    6b94:	add	x1, x20, #0x18
    6b98:	str	x21, [x20, #32]
    6b9c:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
    6ba0:	b	6ad4 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE+0x8c>
    6ba4:	nop

0000000000006ba8 <_ZN4llvm9IsAOpInit3getEPNS_5RecTyEPNS_4InitE>:
    6ba8:	stp	x29, x30, [sp, #-224]!
    6bac:	mov	x29, sp
    6bb0:	stp	x19, x20, [sp, #16]
    6bb4:	adrp	x19, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6bb8:	stp	x23, x24, [sp, #48]
    6bbc:	add	x23, x19, #0x0
    6bc0:	add	x20, x23, #0x200
    6bc4:	stp	x21, x22, [sp, #32]
    6bc8:	mov	x22, x0
    6bcc:	mov	x21, x1
    6bd0:	ldarb	w0, [x20]
    6bd4:	tbz	w0, #0, 6c50 <_ZN4llvm9IsAOpInit3getEPNS_5RecTyEPNS_4InitE+0xa8>
    6bd8:	add	x20, sp, #0x50
    6bdc:	mov	x2, #0x2000000000          	// #137438953472
    6be0:	add	x3, x20, #0x10
    6be4:	mov	x0, x20
    6be8:	mov	x1, x22
    6bec:	add	x19, x19, #0x0
    6bf0:	stp	x3, x2, [sp, #80]
    6bf4:	add	x23, x19, #0x208
    6bf8:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    6bfc:	mov	x1, x21
    6c00:	mov	x0, x20
    6c04:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    6c08:	str	xzr, [sp, #72]
    6c0c:	mov	x0, x23
    6c10:	mov	x1, x20
    6c14:	add	x2, sp, #0x48
    6c18:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
    6c1c:	cbz	x0, 6ca0 <_ZN4llvm9IsAOpInit3getEPNS_5RecTyEPNS_4InitE+0xf8>
    6c20:	sub	x19, x0, #0x18
    6c24:	ldr	x0, [sp, #80]
    6c28:	add	x20, x20, #0x10
    6c2c:	cmp	x0, x20
    6c30:	b.eq	6c38 <_ZN4llvm9IsAOpInit3getEPNS_5RecTyEPNS_4InitE+0x90>  // b.none
    6c34:	bl	0 <free>
    6c38:	mov	x0, x19
    6c3c:	ldp	x19, x20, [sp, #16]
    6c40:	ldp	x21, x22, [sp, #32]
    6c44:	ldp	x23, x24, [sp, #48]
    6c48:	ldp	x29, x30, [sp], #224
    6c4c:	ret
    6c50:	mov	x0, x20
    6c54:	bl	0 <__cxa_guard_acquire>
    6c58:	cbz	w0, 6bd8 <_ZN4llvm9IsAOpInit3getEPNS_5RecTyEPNS_4InitE+0x30>
    6c5c:	add	x24, x23, #0x208
    6c60:	mov	w1, #0x6                   	// #6
    6c64:	mov	x0, x24
    6c68:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
    6c6c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6c70:	mov	x0, x20
    6c74:	ldr	x1, [x1]
    6c78:	add	x1, x1, #0x10
    6c7c:	str	x1, [x23, #520]
    6c80:	bl	0 <__cxa_guard_release>
    6c84:	mov	x1, x24
    6c88:	adrp	x2, 0 <__dso_handle>
    6c8c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6c90:	add	x2, x2, #0x0
    6c94:	add	x0, x0, #0x0
    6c98:	bl	0 <__cxa_atexit>
    6c9c:	b	6bd8 <_ZN4llvm9IsAOpInit3getEPNS_5RecTyEPNS_4InitE+0x30>
    6ca0:	add	x0, x19, #0x88
    6ca4:	mov	w2, #0x4                   	// #4
    6ca8:	mov	x1, #0x30                  	// #48
    6cac:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6cb0:	mov	x19, x0
    6cb4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6cb8:	adrp	x1, 3e0 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE+0x50>
    6cbc:	mov	w3, #0x11                  	// #17
    6cc0:	ldr	x0, [x0]
    6cc4:	strh	w3, [x19, #8]
    6cc8:	ldr	x2, [sp, #72]
    6ccc:	add	x0, x0, #0x10
    6cd0:	ldr	x1, [x1]
    6cd4:	str	x0, [x19]
    6cd8:	stp	x1, xzr, [x19, #16]
    6cdc:	mov	x0, x23
    6ce0:	add	x1, x19, #0x18
    6ce4:	stp	x22, x21, [x19, #32]
    6ce8:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
    6cec:	b	6c24 <_ZN4llvm9IsAOpInit3getEPNS_5RecTyEPNS_4InitE+0x7c>

0000000000006cf0 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE>:
    6cf0:	stp	x29, x30, [sp, #-240]!
    6cf4:	mov	x29, sp
    6cf8:	stp	x19, x20, [sp, #16]
    6cfc:	adrp	x19, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6d00:	stp	x25, x26, [sp, #64]
    6d04:	add	x25, x19, #0x0
    6d08:	add	x20, x25, #0x220
    6d0c:	stp	x21, x22, [sp, #32]
    6d10:	mov	x22, x1
    6d14:	mov	x21, x2
    6d18:	stp	x23, x24, [sp, #48]
    6d1c:	mov	x23, x3
    6d20:	and	w24, w0, #0xff
    6d24:	ldarb	w0, [x20]
    6d28:	tbz	w0, #0, 6dc0 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE+0xd0>
    6d2c:	add	x20, x19, #0x0
    6d30:	add	x19, sp, #0x60
    6d34:	add	x3, x19, #0x10
    6d38:	mov	x2, #0x2000000000          	// #137438953472
    6d3c:	mov	x0, x19
    6d40:	mov	w1, w24
    6d44:	stp	x3, x2, [sp, #96]
    6d48:	add	x25, x20, #0x228
    6d4c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEj>
    6d50:	mov	x1, x22
    6d54:	mov	x0, x19
    6d58:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    6d5c:	mov	x1, x21
    6d60:	mov	x0, x19
    6d64:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    6d68:	mov	x1, x23
    6d6c:	mov	x0, x19
    6d70:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    6d74:	str	xzr, [sp, #88]
    6d78:	mov	x0, x25
    6d7c:	mov	x1, x19
    6d80:	add	x2, sp, #0x58
    6d84:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
    6d88:	cbz	x0, 6e10 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE+0x120>
    6d8c:	sub	x20, x0, #0x18
    6d90:	ldr	x0, [sp, #96]
    6d94:	add	x19, x19, #0x10
    6d98:	cmp	x0, x19
    6d9c:	b.eq	6da4 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE+0xb4>  // b.none
    6da0:	bl	0 <free>
    6da4:	mov	x0, x20
    6da8:	ldp	x19, x20, [sp, #16]
    6dac:	ldp	x21, x22, [sp, #32]
    6db0:	ldp	x23, x24, [sp, #48]
    6db4:	ldp	x25, x26, [sp, #64]
    6db8:	ldp	x29, x30, [sp], #240
    6dbc:	ret
    6dc0:	mov	x0, x20
    6dc4:	bl	0 <__cxa_guard_acquire>
    6dc8:	cbz	w0, 6d2c <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE+0x3c>
    6dcc:	add	x26, x25, #0x228
    6dd0:	mov	w1, #0x6                   	// #6
    6dd4:	mov	x0, x26
    6dd8:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
    6ddc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6de0:	mov	x0, x20
    6de4:	ldr	x1, [x1]
    6de8:	add	x1, x1, #0x10
    6dec:	str	x1, [x25, #552]
    6df0:	bl	0 <__cxa_guard_release>
    6df4:	mov	x1, x26
    6df8:	adrp	x2, 0 <__dso_handle>
    6dfc:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6e00:	add	x2, x2, #0x0
    6e04:	add	x0, x0, #0x0
    6e08:	bl	0 <__cxa_atexit>
    6e0c:	b	6d2c <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE+0x3c>
    6e10:	add	x0, x20, #0x88
    6e14:	mov	w2, #0x4                   	// #4
    6e18:	mov	x1, #0x30                  	// #48
    6e1c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6e20:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6e24:	mov	x20, x0
    6e28:	ldr	x2, [sp, #88]
    6e2c:	mov	w3, #0xb                   	// #11
    6e30:	ldr	x1, [x1]
    6e34:	strb	w3, [x20, #8]
    6e38:	strb	w24, [x20, #9]
    6e3c:	mov	x0, x25
    6e40:	add	x1, x1, #0x10
    6e44:	str	x1, [x20]
    6e48:	stp	x23, xzr, [x20, #16]
    6e4c:	add	x1, x20, #0x18
    6e50:	stp	x22, x21, [x20, #32]
    6e54:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
    6e58:	b	6d90 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE+0xa0>
    6e5c:	nop

0000000000006e60 <_ZN4llvm9BinOpInit12getListSplatEPNS_9TypedInitEPNS_4InitE>:
    6e60:	mov	x3, x0
    6e64:	mov	x2, x1
    6e68:	mov	x1, x0
    6e6c:	mov	w0, #0x8                   	// #8
    6e70:	ldr	x3, [x3, #16]
    6e74:	b	6cf0 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE>

0000000000006e78 <_ZN4llvm9BinOpInit13getListConcatEPNS_9TypedInitEPNS_4InitE>:
    6e78:	stp	x29, x30, [sp, #-144]!
    6e7c:	mov	x29, sp
    6e80:	ldr	x3, [x0, #16]
    6e84:	stp	x19, x20, [sp, #16]
    6e88:	cbz	x3, 6fa8 <_ZN4llvm9BinOpInit13getListConcatEPNS_9TypedInitEPNS_4InitE+0x130>
    6e8c:	mov	x19, x0
    6e90:	ldr	w0, [x3, #8]
    6e94:	cmp	w0, #0x5
    6e98:	b.ne	6fb4 <_ZN4llvm9BinOpInit13getListConcatEPNS_9TypedInitEPNS_4InitE+0x13c>  // b.any
    6e9c:	ldrb	w0, [x19, #8]
    6ea0:	mov	x20, x1
    6ea4:	cmp	w0, #0x9
    6ea8:	b.eq	6ed0 <_ZN4llvm9BinOpInit13getListConcatEPNS_9TypedInitEPNS_4InitE+0x58>  // b.none
    6eac:	mov	x2, x20
    6eb0:	mov	x1, x19
    6eb4:	mov	w0, #0x7                   	// #7
    6eb8:	bl	6cf0 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE>
    6ebc:	mov	x19, x0
    6ec0:	mov	x0, x19
    6ec4:	ldp	x19, x20, [sp, #16]
    6ec8:	ldp	x29, x30, [sp], #144
    6ecc:	ret
    6ed0:	cbz	x1, 6fdc <_ZN4llvm9BinOpInit13getListConcatEPNS_9TypedInitEPNS_4InitE+0x164>
    6ed4:	ldrb	w0, [x1, #8]
    6ed8:	cmp	w0, #0x9
    6edc:	b.ne	6eac <_ZN4llvm9BinOpInit13getListConcatEPNS_9TypedInitEPNS_4InitE+0x34>  // b.any
    6ee0:	ldr	w3, [x19, #32]
    6ee4:	mov	x4, #0x800000000           	// #34359738368
    6ee8:	str	x23, [sp, #48]
    6eec:	mov	x23, #0x28                  	// #40
    6ef0:	stp	x21, x22, [sp, #32]
    6ef4:	add	x21, sp, #0x40
    6ef8:	add	x22, sp, #0x50
    6efc:	add	x3, x23, w3, uxtw #3
    6f00:	mov	x1, x22
    6f04:	add	x3, x19, x3
    6f08:	add	x2, x19, x23
    6f0c:	mov	x0, x21
    6f10:	stp	x22, x4, [sp, #64]
    6f14:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6f18:	ldr	w3, [x20, #32]
    6f1c:	add	x2, x20, x23
    6f20:	ldr	w4, [sp, #72]
    6f24:	mov	x0, x21
    6f28:	ldr	x1, [sp, #64]
    6f2c:	add	x3, x23, w3, uxtw #3
    6f30:	add	x3, x20, x3
    6f34:	add	x1, x1, x4, lsl #3
    6f38:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6f3c:	ldr	x2, [x19, #16]
    6f40:	ldr	w1, [sp, #72]
    6f44:	ldr	x0, [sp, #64]
    6f48:	cbz	x2, 6fb0 <_ZN4llvm9BinOpInit13getListConcatEPNS_9TypedInitEPNS_4InitE+0x138>
    6f4c:	ldr	w3, [x2, #8]
    6f50:	cmp	w3, #0x5
    6f54:	b.ne	6fe8 <_ZN4llvm9BinOpInit13getListConcatEPNS_9TypedInitEPNS_4InitE+0x170>  // b.any
    6f58:	ldr	x2, [x2, #24]
    6f5c:	bl	50c0 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    6f60:	mov	x19, x0
    6f64:	ldr	x1, [sp, #64]
    6f68:	cmp	x1, x22
    6f6c:	b.eq	6f90 <_ZN4llvm9BinOpInit13getListConcatEPNS_9TypedInitEPNS_4InitE+0x118>  // b.none
    6f70:	mov	x0, x1
    6f74:	bl	0 <free>
    6f78:	mov	x0, x19
    6f7c:	ldp	x19, x20, [sp, #16]
    6f80:	ldp	x21, x22, [sp, #32]
    6f84:	ldr	x23, [sp, #48]
    6f88:	ldp	x29, x30, [sp], #144
    6f8c:	ret
    6f90:	mov	x0, x19
    6f94:	ldp	x19, x20, [sp, #16]
    6f98:	ldp	x21, x22, [sp, #32]
    6f9c:	ldr	x23, [sp, #48]
    6fa0:	ldp	x29, x30, [sp], #144
    6fa4:	ret
    6fa8:	stp	x21, x22, [sp, #32]
    6fac:	str	x23, [sp, #48]
    6fb0:	bl	7a0 <_ZN4llvm13isa_impl_wrapINS_9ListRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>
    6fb4:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6fb8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6fbc:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6fc0:	add	x3, x3, #0x0
    6fc4:	add	x1, x1, #0x0
    6fc8:	add	x0, x0, #0x0
    6fcc:	mov	w2, #0x375                 	// #885
    6fd0:	stp	x21, x22, [sp, #32]
    6fd4:	str	x23, [sp, #48]
    6fd8:	bl	0 <__assert_fail>
    6fdc:	stp	x21, x22, [sp, #32]
    6fe0:	str	x23, [sp, #48]
    6fe4:	bl	9d8 <_ZN4llvm3isaINS_8ListInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    6fe8:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6fec:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6ff0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6ff4:	add	x3, x3, #0x0
    6ff8:	add	x1, x1, #0x0
    6ffc:	add	x0, x0, #0x0
    7000:	mov	w2, #0x108                 	// #264
    7004:	bl	0 <__assert_fail>

0000000000007008 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE>:
    7008:	stp	x29, x30, [sp, #-256]!
    700c:	mov	x29, sp
    7010:	stp	x19, x20, [sp, #16]
    7014:	adrp	x19, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7018:	stp	x25, x26, [sp, #64]
    701c:	add	x26, x19, #0x0
    7020:	and	w25, w0, #0xff
    7024:	add	x20, x26, #0x240
    7028:	stp	x21, x22, [sp, #32]
    702c:	mov	x22, x2
    7030:	mov	x21, x3
    7034:	stp	x23, x24, [sp, #48]
    7038:	mov	x23, x1
    703c:	mov	x24, x4
    7040:	ldarb	w0, [x20]
    7044:	tbz	w0, #0, 70e8 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE+0xe0>
    7048:	add	x20, x19, #0x0
    704c:	add	x19, sp, #0x70
    7050:	add	x3, x19, #0x10
    7054:	mov	x2, #0x2000000000          	// #137438953472
    7058:	mov	x0, x19
    705c:	mov	w1, w25
    7060:	stp	x3, x2, [sp, #112]
    7064:	add	x26, x20, #0x248
    7068:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEj>
    706c:	mov	x1, x23
    7070:	mov	x0, x19
    7074:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    7078:	mov	x1, x22
    707c:	mov	x0, x19
    7080:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    7084:	mov	x1, x21
    7088:	mov	x0, x19
    708c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    7090:	mov	x1, x24
    7094:	mov	x0, x19
    7098:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    709c:	str	xzr, [sp, #104]
    70a0:	mov	x0, x26
    70a4:	mov	x1, x19
    70a8:	add	x2, sp, #0x68
    70ac:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
    70b0:	cbz	x0, 7140 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE+0x138>
    70b4:	sub	x20, x0, #0x18
    70b8:	ldr	x0, [sp, #112]
    70bc:	add	x19, x19, #0x10
    70c0:	cmp	x0, x19
    70c4:	b.eq	70cc <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE+0xc4>  // b.none
    70c8:	bl	0 <free>
    70cc:	mov	x0, x20
    70d0:	ldp	x19, x20, [sp, #16]
    70d4:	ldp	x21, x22, [sp, #32]
    70d8:	ldp	x23, x24, [sp, #48]
    70dc:	ldp	x25, x26, [sp, #64]
    70e0:	ldp	x29, x30, [sp], #256
    70e4:	ret
    70e8:	mov	x0, x20
    70ec:	bl	0 <__cxa_guard_acquire>
    70f0:	cbz	w0, 7048 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE+0x40>
    70f4:	str	x27, [sp, #80]
    70f8:	add	x27, x26, #0x248
    70fc:	mov	x0, x27
    7100:	mov	w1, #0x6                   	// #6
    7104:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
    7108:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    710c:	mov	x0, x20
    7110:	ldr	x1, [x1]
    7114:	add	x1, x1, #0x10
    7118:	str	x1, [x26, #584]
    711c:	bl	0 <__cxa_guard_release>
    7120:	mov	x1, x27
    7124:	adrp	x2, 0 <__dso_handle>
    7128:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    712c:	add	x2, x2, #0x0
    7130:	add	x0, x0, #0x0
    7134:	bl	0 <__cxa_atexit>
    7138:	ldr	x27, [sp, #80]
    713c:	b	7048 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE+0x40>
    7140:	add	x0, x20, #0x88
    7144:	mov	w2, #0x4                   	// #4
    7148:	mov	x1, #0x38                  	// #56
    714c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7150:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7154:	mov	x20, x0
    7158:	ldr	x2, [sp, #104]
    715c:	mov	w3, #0xc                   	// #12
    7160:	ldr	x1, [x1]
    7164:	strb	w3, [x20, #8]
    7168:	strb	w25, [x20, #9]
    716c:	mov	x0, x26
    7170:	add	x1, x1, #0x10
    7174:	str	x1, [x20]
    7178:	stp	x24, xzr, [x20, #16]
    717c:	add	x1, x20, #0x18
    7180:	stp	x23, x22, [x20, #32]
    7184:	str	x21, [x20, #48]
    7188:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
    718c:	b	70b8 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE+0xb0>

0000000000007190 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE>:
    7190:	stp	x29, x30, [sp, #-176]!
    7194:	mov	x29, sp
    7198:	stp	x19, x20, [sp, #16]
    719c:	ldr	x19, [x0, #16]
    71a0:	stp	x21, x22, [sp, #32]
    71a4:	stp	x23, x24, [sp, #48]
    71a8:	stp	x25, x26, [sp, #64]
    71ac:	stp	x1, x2, [sp, #80]
    71b0:	ldr	x23, [sp, #88]
    71b4:	cbz	x19, 7240 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0xb0>
    71b8:	add	x25, x0, #0x8
    71bc:	mov	x20, x0
    71c0:	mov	x21, x8
    71c4:	mov	x26, x1
    71c8:	mov	x24, x25
    71cc:	nop
    71d0:	ldp	x0, x22, [x19, #32]
    71d4:	cmp	x23, x22
    71d8:	b.cc	7288 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0xf8>  // b.lo, b.ul, b.last
    71dc:	cbz	x22, 71f0 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x60>
    71e0:	mov	x2, x22
    71e4:	mov	x1, x26
    71e8:	bl	0 <memcmp>
    71ec:	cbnz	w0, 729c <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x10c>
    71f0:	cmp	x23, x22
    71f4:	b.eq	72a0 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x110>  // b.none
    71f8:	cmp	x23, x22
    71fc:	b.ls	72a0 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x110>  // b.plast
    7200:	ldr	x19, [x19, #24]
    7204:	cbnz	x19, 71d0 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x40>
    7208:	cmp	x25, x24
    720c:	b.eq	7240 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0xb0>  // b.none
    7210:	ldp	x1, x19, [x24, #32]
    7214:	cmp	x23, x19
    7218:	b.hi	72b0 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x120>  // b.pmore
    721c:	cbz	x23, 7230 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0xa0>
    7220:	mov	x0, x26
    7224:	mov	x2, x23
    7228:	bl	0 <memcmp>
    722c:	cbnz	w0, 72c4 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x134>
    7230:	cmp	x23, x19
    7234:	b.eq	72c8 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x138>  // b.none
    7238:	cmp	x23, x19
    723c:	b.cs	72c8 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x138>  // b.hs, b.nlast
    7240:	add	x2, sp, #0x50
    7244:	add	x21, sp, #0x68
    7248:	mov	x0, x21
    724c:	add	x20, sp, #0x80
    7250:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7254:	add	x1, x1, #0x0
    7258:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    725c:	add	x19, sp, #0x98
    7260:	mov	x0, x20
    7264:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7268:	add	x1, x1, #0x0
    726c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7270:	mov	x1, x20
    7274:	mov	x8, x19
    7278:	mov	x0, x21
    727c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7280:	mov	x0, x19
    7284:	bl	0 <_ZN4llvm15PrintFatalErrorERKNS_5TwineE>
    7288:	cbz	x23, 72a0 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x110>
    728c:	mov	x2, x23
    7290:	mov	x1, x26
    7294:	bl	0 <memcmp>
    7298:	cbz	w0, 71f8 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x68>
    729c:	tbnz	w0, #31, 7200 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x70>
    72a0:	mov	x24, x19
    72a4:	ldr	x19, [x19, #16]
    72a8:	cbnz	x19, 71d0 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x40>
    72ac:	b	7208 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x78>
    72b0:	cbz	x19, 72c8 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x138>
    72b4:	mov	x0, x26
    72b8:	mov	x2, x19
    72bc:	bl	0 <memcmp>
    72c0:	cbz	w0, 7238 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0xa8>
    72c4:	tbnz	w0, #31, 7240 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0xb0>
    72c8:	ldr	x19, [x24, #64]
    72cc:	cbz	x19, 7240 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0xb0>
    72d0:	ldr	x24, [x20, #72]
    72d4:	stp	xzr, xzr, [x21]
    72d8:	add	x20, x20, #0x38
    72dc:	str	xzr, [x21, #16]
    72e0:	cmp	x20, x24
    72e4:	b.eq	7348 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x1b8>  // b.none
    72e8:	add	x23, sp, #0x98
    72ec:	mov	w22, #0x18                  	// #24
    72f0:	ldr	x4, [x24, #64]
    72f4:	ldr	w3, [x4, #96]
    72f8:	ldr	x1, [x4, #88]
    72fc:	umaddl	x3, w3, w22, x1
    7300:	cmp	x1, x3
    7304:	b.ne	7318 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x188>  // b.any
    7308:	b	7334 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x1a4>
    730c:	add	x1, x1, #0x18
    7310:	cmp	x3, x1
    7314:	b.eq	7334 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x1a4>  // b.none
    7318:	ldr	x2, [x1]
    731c:	cmp	x19, x2
    7320:	b.ne	730c <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x17c>  // b.any
    7324:	mov	x1, x23
    7328:	mov	x0, x21
    732c:	str	x4, [sp, #152]
    7330:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7334:	mov	x0, x24
    7338:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    733c:	mov	x24, x0
    7340:	cmp	x20, x0
    7344:	b.ne	72f0 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x160>  // b.any
    7348:	mov	x0, x21
    734c:	ldp	x19, x20, [sp, #16]
    7350:	ldp	x21, x22, [sp, #32]
    7354:	ldp	x23, x24, [sp, #48]
    7358:	ldp	x25, x26, [sp, #64]
    735c:	ldp	x29, x30, [sp], #176
    7360:	ret
    7364:	nop

0000000000007368 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev>:
    7368:	stp	x29, x30, [sp, #-160]!
    736c:	mov	x29, sp
    7370:	stp	x21, x22, [sp, #32]
    7374:	mov	x21, x8
    7378:	str	x27, [sp, #80]
    737c:	mov	x27, x0
    7380:	ldr	w0, [x0, #32]
    7384:	cmp	w0, #0x1
    7388:	b.ne	73b4 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x4c>  // b.any
    738c:	ldr	x0, [x27, #40]
    7390:	ldr	x0, [x0]
    7394:	ldr	x1, [x0]
    7398:	ldr	x1, [x1, #48]
    739c:	blr	x1
    73a0:	mov	x0, x21
    73a4:	ldp	x21, x22, [sp, #32]
    73a8:	ldr	x27, [sp, #80]
    73ac:	ldp	x29, x30, [sp], #160
    73b0:	ret
    73b4:	stp	x19, x20, [sp, #16]
    73b8:	add	x19, sp, #0x60
    73bc:	add	x4, x19, #0x10
    73c0:	mov	x0, x19
    73c4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    73c8:	adrp	x2, 2540 <_ZN4llvm9UnsetInit3getEv+0x88>
    73cc:	add	x1, x1, #0x0
    73d0:	add	x2, x2, #0x0
    73d4:	mov	w3, #0x0                   	// #0
    73d8:	str	x4, [sp, #96]
    73dc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    73e0:	ldr	w22, [x27, #32]
    73e4:	add	x0, x27, #0x28
    73e8:	add	x22, x0, x22, lsl #3
    73ec:	cmp	x22, x0
    73f0:	b.eq	74f0 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x188>  // b.none
    73f4:	add	x20, x27, #0x30
    73f8:	stp	x23, x24, [sp, #48]
    73fc:	add	x23, sp, #0x80
    7400:	ldr	x27, [x27, #40]
    7404:	add	x24, x23, #0x10
    7408:	stp	x25, x26, [sp, #64]
    740c:	adrp	x26, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7410:	add	x26, x26, #0x0
    7414:	mov	x25, #0x3fffffffffffffff    	// #4611686018427387903
    7418:	ldr	x0, [x27]
    741c:	mov	x8, x23
    7420:	ldr	x1, [x0]
    7424:	ldr	x1, [x1, #48]
    7428:	blr	x1
    742c:	ldp	x1, x2, [sp, #128]
    7430:	mov	x0, x19
    7434:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    7438:	ldr	x0, [sp, #128]
    743c:	cmp	x0, x24
    7440:	b.eq	7448 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0xe0>  // b.none
    7444:	bl	0 <_ZdlPv>
    7448:	cmp	x20, x22
    744c:	ldr	x0, [sp, #104]
    7450:	b.eq	7478 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x110>  // b.none
    7454:	sub	x0, x25, x0
    7458:	cmp	x0, #0x1
    745c:	b.ls	7500 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x198>  // b.plast
    7460:	mov	x1, x26
    7464:	mov	x0, x19
    7468:	mov	x2, #0x2                   	// #2
    746c:	ldr	x27, [x20], #8
    7470:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    7474:	b	7418 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0xb0>
    7478:	ldp	x23, x24, [sp, #48]
    747c:	ldp	x25, x26, [sp, #64]
    7480:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
    7484:	cmp	x0, x1
    7488:	b.eq	74f8 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x190>  // b.none
    748c:	mov	x0, x19
    7490:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7494:	mov	x2, #0x1                   	// #1
    7498:	add	x1, x1, #0x0
    749c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    74a0:	add	x19, x19, #0x10
    74a4:	ldr	x1, [sp, #96]
    74a8:	add	x0, x21, #0x10
    74ac:	str	x0, [x21]
    74b0:	cmp	x1, x19
    74b4:	b.eq	74e4 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x17c>  // b.none
    74b8:	ldr	x0, [sp, #112]
    74bc:	str	x1, [x21]
    74c0:	str	x0, [x21, #16]
    74c4:	ldr	x0, [sp, #104]
    74c8:	ldp	x19, x20, [sp, #16]
    74cc:	str	x0, [x21, #8]
    74d0:	mov	x0, x21
    74d4:	ldp	x21, x22, [sp, #32]
    74d8:	ldr	x27, [sp, #80]
    74dc:	ldp	x29, x30, [sp], #160
    74e0:	ret
    74e4:	ldp	x0, x1, [sp, #112]
    74e8:	stp	x0, x1, [x21, #16]
    74ec:	b	74c4 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x15c>
    74f0:	ldr	x0, [sp, #104]
    74f4:	b	7480 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x118>
    74f8:	stp	x23, x24, [sp, #48]
    74fc:	stp	x25, x26, [sp, #64]
    7500:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7504:	add	x0, x0, #0x0
    7508:	bl	0 <_ZSt20__throw_length_errorPKc>
    750c:	nop

0000000000007510 <_ZNK4llvm7DefInit11getAsStringB5cxx11Ev>:
    7510:	stp	x29, x30, [sp, #-32]!
    7514:	mov	x29, sp
    7518:	ldr	x0, [x0, #24]
    751c:	ldr	x0, [x0]
    7520:	str	x19, [sp, #16]
    7524:	cbz	x0, 75a4 <_ZNK4llvm7DefInit11getAsStringB5cxx11Ev+0x94>
    7528:	ldrb	w1, [x0, #8]
    752c:	cmp	w1, #0x12
    7530:	b.ne	7584 <_ZNK4llvm7DefInit11getAsStringB5cxx11Ev+0x74>  // b.any
    7534:	ldr	x1, [x0, #24]
    7538:	mov	x19, x8
    753c:	add	x3, x8, #0x10
    7540:	cbz	x1, 756c <_ZNK4llvm7DefInit11getAsStringB5cxx11Ev+0x5c>
    7544:	ldr	x2, [x0, #32]
    7548:	str	x3, [x8]
    754c:	mov	x0, x8
    7550:	mov	w3, #0x0                   	// #0
    7554:	add	x2, x1, x2
    7558:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    755c:	mov	x0, x19
    7560:	ldr	x19, [sp, #16]
    7564:	ldp	x29, x30, [sp], #32
    7568:	ret
    756c:	stp	x3, xzr, [x8]
    7570:	mov	x0, x19
    7574:	strb	wzr, [x8, #16]
    7578:	ldr	x19, [sp, #16]
    757c:	ldp	x29, x30, [sp], #32
    7580:	ret
    7584:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7588:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    758c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7590:	add	x3, x3, #0x0
    7594:	add	x1, x1, #0x0
    7598:	add	x0, x0, #0x0
    759c:	mov	w2, #0x108                 	// #264
    75a0:	bl	0 <__assert_fail>
    75a4:	bl	910 <_ZN4llvm3isaINS_10StringInitEPNS_4InitEEEbRKT0_.isra.0.part.0>

00000000000075a8 <_ZNK4llvm8DagRecTy11getAsStringB5cxx11Ev>:
    75a8:	stp	x29, x30, [sp, #-32]!
    75ac:	add	x4, x8, #0x10
    75b0:	mov	x0, x8
    75b4:	mov	x29, sp
    75b8:	str	x19, [sp, #16]
    75bc:	mov	w3, #0x0                   	// #0
    75c0:	str	x4, [x8]
    75c4:	mov	x19, x8
    75c8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    75cc:	adrp	x2, 2550 <_ZN4llvm7BitInit3getEb>
    75d0:	add	x1, x1, #0x0
    75d4:	add	x2, x2, #0x0
    75d8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    75dc:	mov	x0, x19
    75e0:	ldr	x19, [sp, #16]
    75e4:	ldp	x29, x30, [sp], #32
    75e8:	ret
    75ec:	nop

00000000000075f0 <_ZNK4llvm11StringRecTy11getAsStringB5cxx11Ev>:
    75f0:	stp	x29, x30, [sp, #-32]!
    75f4:	add	x4, x8, #0x10
    75f8:	mov	x0, x8
    75fc:	mov	x29, sp
    7600:	str	x19, [sp, #16]
    7604:	mov	w3, #0x0                   	// #0
    7608:	str	x4, [x8]
    760c:	mov	x19, x8
    7610:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7614:	adrp	x2, 2558 <_ZN4llvm7BitInit3getEb+0x8>
    7618:	add	x1, x1, #0x0
    761c:	add	x2, x2, #0x0
    7620:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7624:	mov	x0, x19
    7628:	ldr	x19, [sp, #16]
    762c:	ldp	x29, x30, [sp], #32
    7630:	ret
    7634:	nop

0000000000007638 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0>:
    7638:	stp	x29, x30, [sp, #-272]!
    763c:	mov	w2, #0x103                 	// #259
    7640:	mov	x29, sp
    7644:	stp	x19, x20, [sp, #16]
    7648:	mov	x19, x0
    764c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7650:	add	x0, x0, #0x0
    7654:	stp	x0, xzr, [sp, #88]
    7658:	ldr	x0, [x19, #32]
    765c:	stp	x21, x22, [sp, #32]
    7660:	ldr	w21, [x1, #16]
    7664:	ldr	x22, [x1, #8]
    7668:	str	x23, [sp, #48]
    766c:	ldr	x3, [x0]
    7670:	strh	w2, [sp, #104]
    7674:	adrp	x2, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7678:	add	x2, x2, #0x0
    767c:	ldr	x1, [x3, #48]
    7680:	cmp	x1, x2
    7684:	b.ne	7864 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x22c>  // b.any
    7688:	ldr	x1, [x0, #24]
    768c:	cbz	x1, 7744 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x10c>
    7690:	add	x20, sp, #0xf0
    7694:	mov	w3, #0x0                   	// #0
    7698:	add	x4, x20, #0x10
    769c:	str	x4, [sp, #240]
    76a0:	ldr	x2, [x0, #32]
    76a4:	mov	x0, x20
    76a8:	add	x2, x1, x2
    76ac:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    76b0:	ldrb	w1, [sp, #104]
    76b4:	cbz	w1, 7758 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x120>
    76b8:	cmp	w1, #0x1
    76bc:	b.eq	784c <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x214>  // b.none
    76c0:	ldrb	w0, [sp, #105]
    76c4:	cmp	w0, #0x1
    76c8:	b.eq	7874 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x23c>  // b.none
    76cc:	add	x3, sp, #0x58
    76d0:	mov	w1, #0x2                   	// #2
    76d4:	mov	w2, #0x4                   	// #4
    76d8:	add	x23, sp, #0x70
    76dc:	mov	x0, x23
    76e0:	stp	x3, x20, [sp, #112]
    76e4:	strb	w1, [sp, #128]
    76e8:	strb	w2, [sp, #129]
    76ec:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    76f0:	mov	w1, #0x2                   	// #2
    76f4:	tst	w0, #0xff
    76f8:	b.eq	7724 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0xec>  // b.none
    76fc:	adrp	x2, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7700:	add	x2, x2, #0x0
    7704:	mov	w3, #0x3                   	// #3
    7708:	add	x0, sp, #0x88
    770c:	stp	x23, x2, [sp, #136]
    7710:	strb	w1, [sp, #152]
    7714:	strb	w3, [sp, #153]
    7718:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    771c:	tst	w0, #0xff
    7720:	b.ne	776c <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x134>  // b.any
    7724:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7728:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    772c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7730:	add	x3, x3, #0x0
    7734:	add	x1, x1, #0x0
    7738:	add	x0, x0, #0x0
    773c:	mov	w2, #0xb8                  	// #184
    7740:	bl	0 <__assert_fail>
    7744:	add	x20, sp, #0xf0
    7748:	strb	wzr, [sp, #256]
    774c:	add	x0, x20, #0x10
    7750:	stp	x0, xzr, [sp, #240]
    7754:	b	76b0 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x78>
    7758:	mov	w0, #0x100                 	// #256
    775c:	stp	xzr, xzr, [sp, #112]
    7760:	strh	w0, [sp, #128]
    7764:	stp	xzr, xzr, [sp, #136]
    7768:	strh	w0, [sp, #152]
    776c:	ldr	x0, [x19, #24]
    7770:	add	x20, sp, #0xd0
    7774:	mov	x8, x20
    7778:	ldr	x1, [x0]
    777c:	ldr	x1, [x1, #40]
    7780:	blr	x1
    7784:	ldrb	w19, [sp, #152]
    7788:	cbz	w19, 7814 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x1dc>
    778c:	cmp	w19, #0x1
    7790:	b.eq	7838 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x200>  // b.none
    7794:	ldrb	w0, [sp, #153]
    7798:	cmp	w0, #0x1
    779c:	b.eq	787c <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x244>  // b.none
    77a0:	add	x2, sp, #0x88
    77a4:	mov	w19, #0x2                   	// #2
    77a8:	mov	w1, #0x4                   	// #4
    77ac:	add	x0, sp, #0xa0
    77b0:	stp	x2, x20, [sp, #160]
    77b4:	strb	w19, [sp, #176]
    77b8:	strb	w1, [sp, #177]
    77bc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    77c0:	tst	w0, #0xff
    77c4:	b.eq	7724 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0xec>  // b.none
    77c8:	ldrb	w0, [sp, #177]
    77cc:	cmp	w0, #0x1
    77d0:	b.eq	7884 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x24c>  // b.none
    77d4:	add	x4, sp, #0xa0
    77d8:	mov	w19, #0x2                   	// #2
    77dc:	add	x2, sp, #0xb8
    77e0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    77e4:	add	x1, x1, #0x0
    77e8:	mov	w3, #0x3                   	// #3
    77ec:	mov	x0, x2
    77f0:	str	x2, [sp, #72]
    77f4:	stp	x4, x1, [sp, #184]
    77f8:	strb	w19, [sp, #200]
    77fc:	strb	w3, [sp, #201]
    7800:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7804:	tst	w0, #0xff
    7808:	ldr	x2, [sp, #72]
    780c:	b.ne	782c <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x1f4>  // b.any
    7810:	b	7724 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0xec>
    7814:	add	x2, sp, #0xb8
    7818:	mov	w0, #0x100                 	// #256
    781c:	stp	xzr, xzr, [sp, #160]
    7820:	strh	w0, [sp, #176]
    7824:	stp	xzr, xzr, [sp, #184]
    7828:	strh	w0, [sp, #200]
    782c:	mov	x0, x22
    7830:	mov	x1, x21
    7834:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    7838:	mov	w0, #0x104                 	// #260
    783c:	mov	w19, #0x4                   	// #4
    7840:	stp	x20, xzr, [sp, #160]
    7844:	strh	w0, [sp, #176]
    7848:	b	77c8 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x190>
    784c:	mov	w0, #0x104                 	// #260
    7850:	mov	x23, x20
    7854:	mov	w1, #0x4                   	// #4
    7858:	stp	x20, xzr, [sp, #112]
    785c:	strh	w0, [sp, #128]
    7860:	b	76fc <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0xc4>
    7864:	add	x20, sp, #0xf0
    7868:	mov	x8, x20
    786c:	blr	x1
    7870:	b	76b0 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x78>
    7874:	ldr	x3, [sp, #88]
    7878:	b	76d4 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x9c>
    787c:	ldr	x2, [sp, #136]
    7880:	b	77a8 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x170>
    7884:	ldr	x4, [sp, #160]
    7888:	b	77dc <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x1a4>
    788c:	nop

0000000000007890 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE>:
    7890:	stp	x29, x30, [sp, #-32]!
    7894:	mov	x29, sp
    7898:	ldr	x3, [x0, #24]
    789c:	stp	x19, x20, [sp, #16]
    78a0:	cbz	x3, 7938 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE+0xa8>
    78a4:	ldrb	w4, [x3, #8]
    78a8:	mov	x19, x0
    78ac:	cmp	w4, #0x6
    78b0:	b.eq	78c8 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE+0x38>  // b.none
    78b4:	mov	x20, x19
    78b8:	mov	x0, x20
    78bc:	ldp	x19, x20, [sp, #16]
    78c0:	ldp	x29, x30, [sp], #32
    78c4:	ret
    78c8:	ldr	x4, [x3, #24]
    78cc:	cmp	x1, x4
    78d0:	b.eq	793c <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE+0xac>  // b.none
    78d4:	ldr	w3, [x4, #80]
    78d8:	mov	w0, #0x18                  	// #24
    78dc:	ldr	x1, [x4, #72]
    78e0:	ldr	x4, [x19, #32]
    78e4:	umaddl	x3, w3, w0, x1
    78e8:	cmp	x1, x3
    78ec:	b.ne	7900 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE+0x70>  // b.any
    78f0:	b	7940 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE+0xb0>
    78f4:	add	x1, x1, #0x18
    78f8:	cmp	x3, x1
    78fc:	b.eq	7940 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE+0xb0>  // b.none
    7900:	ldr	x2, [x1]
    7904:	cmp	x4, x2
    7908:	b.ne	78f4 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE+0x64>  // b.any
    790c:	ldr	x20, [x1, #16]
    7910:	mov	x0, x20
    7914:	ldr	x1, [x20]
    7918:	ldr	x1, [x1, #24]
    791c:	blr	x1
    7920:	tst	w0, #0xff
    7924:	b.eq	78b4 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE+0x24>  // b.none
    7928:	mov	x0, x20
    792c:	ldp	x19, x20, [sp, #16]
    7930:	ldp	x29, x30, [sp], #32
    7934:	ret
    7938:	bl	938 <_ZN4llvm3isaINS_7DefInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    793c:	bl	7638 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0>
    7940:	mov	x0, #0x0                   	// #0
    7944:	ldr	x0, [x0, #16]
    7948:	brk	#0x3e8
    794c:	nop

0000000000007950 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev>:
    7950:	stp	x29, x30, [sp, #-192]!
    7954:	mov	x29, sp
    7958:	stp	x19, x20, [sp, #16]
    795c:	mov	x20, x0
    7960:	mov	x19, x8
    7964:	ldr	x0, [x0, #24]
    7968:	stp	x21, x22, [sp, #32]
    796c:	add	x21, sp, #0x40
    7970:	stp	x23, x24, [sp, #48]
    7974:	mov	x8, x21
    7978:	ldr	x1, [x0]
    797c:	ldr	x1, [x1, #40]
    7980:	blr	x1
    7984:	ldr	x1, [sp, #72]
    7988:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    798c:	cmp	x1, x0
    7990:	b.eq	7bb8 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x268>  // b.none
    7994:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7998:	add	x1, x1, #0x0
    799c:	mov	x2, #0x1                   	// #1
    79a0:	mov	x0, x21
    79a4:	add	x22, sp, #0x60
    79a8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    79ac:	mov	x1, x0
    79b0:	add	x2, x22, #0x10
    79b4:	str	x2, [sp, #96]
    79b8:	ldr	x2, [x1], #16
    79bc:	cmp	x2, x1
    79c0:	b.eq	7b8c <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x23c>  // b.none
    79c4:	ldr	x3, [x0, #16]
    79c8:	str	x2, [sp, #96]
    79cc:	str	x3, [sp, #112]
    79d0:	strb	wzr, [x0, #16]
    79d4:	ldr	x2, [x0, #8]
    79d8:	str	x2, [sp, #104]
    79dc:	ldr	w3, [x20, #32]
    79e0:	add	x20, sp, #0xa0
    79e4:	stp	x1, xzr, [x0]
    79e8:	cbnz	x3, 7b4c <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x1fc>
    79ec:	add	x1, x20, #0x14
    79f0:	mov	w0, #0x30                  	// #48
    79f4:	strb	w0, [sp, #180]
    79f8:	add	x23, sp, #0x80
    79fc:	add	x2, x20, #0x15
    7a00:	mov	x0, x23
    7a04:	mov	w3, #0x0                   	// #0
    7a08:	add	x24, x23, #0x10
    7a0c:	str	x24, [sp, #128]
    7a10:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7a14:	ldp	x3, x4, [sp, #96]
    7a18:	add	x0, x22, #0x10
    7a1c:	ldp	x1, x2, [sp, #128]
    7a20:	mov	x6, #0xf                   	// #15
    7a24:	cmp	x3, x0
    7a28:	ldr	x0, [sp, #112]
    7a2c:	add	x5, x4, x2
    7a30:	csel	x0, x0, x6, ne  // ne = any
    7a34:	cmp	x5, x0
    7a38:	b.ls	7a50 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x100>  // b.plast
    7a3c:	ldr	x0, [sp, #144]
    7a40:	cmp	x1, x24
    7a44:	csel	x0, x0, x6, ne  // ne = any
    7a48:	cmp	x5, x0
    7a4c:	b.ls	7ba4 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x254>  // b.plast
    7a50:	mov	x0, x22
    7a54:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    7a58:	mov	x1, x0
    7a5c:	add	x2, x20, #0x10
    7a60:	str	x2, [sp, #160]
    7a64:	ldr	x2, [x1], #16
    7a68:	cmp	x2, x1
    7a6c:	b.eq	7b80 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x230>  // b.none
    7a70:	str	x2, [sp, #160]
    7a74:	ldr	x2, [x0, #16]
    7a78:	str	x2, [sp, #176]
    7a7c:	ldr	x2, [x0, #8]
    7a80:	str	x2, [sp, #168]
    7a84:	stp	x1, xzr, [x0]
    7a88:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
    7a8c:	strb	wzr, [x0, #16]
    7a90:	ldr	x0, [sp, #168]
    7a94:	cmp	x0, x2
    7a98:	b.eq	7bb8 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x268>  // b.none
    7a9c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7aa0:	add	x1, x1, #0x0
    7aa4:	mov	x2, #0x1                   	// #1
    7aa8:	mov	x0, x20
    7aac:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    7ab0:	mov	x1, x0
    7ab4:	add	x2, x19, #0x10
    7ab8:	str	x2, [x19]
    7abc:	ldr	x2, [x1], #16
    7ac0:	cmp	x2, x1
    7ac4:	b.eq	7b98 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x248>  // b.none
    7ac8:	ldr	x3, [x0, #16]
    7acc:	str	x2, [x19]
    7ad0:	str	x3, [x19, #16]
    7ad4:	ldr	x2, [x0, #8]
    7ad8:	str	x2, [x19, #8]
    7adc:	stp	x1, xzr, [x0]
    7ae0:	add	x20, x20, #0x10
    7ae4:	strb	wzr, [x0, #16]
    7ae8:	ldr	x0, [sp, #160]
    7aec:	cmp	x0, x20
    7af0:	b.eq	7af8 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x1a8>  // b.none
    7af4:	bl	0 <_ZdlPv>
    7af8:	ldr	x0, [sp, #128]
    7afc:	add	x23, x23, #0x10
    7b00:	cmp	x0, x23
    7b04:	b.eq	7b0c <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x1bc>  // b.none
    7b08:	bl	0 <_ZdlPv>
    7b0c:	ldr	x0, [sp, #96]
    7b10:	add	x22, x22, #0x10
    7b14:	cmp	x0, x22
    7b18:	b.eq	7b20 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x1d0>  // b.none
    7b1c:	bl	0 <_ZdlPv>
    7b20:	ldr	x0, [sp, #64]
    7b24:	add	x21, x21, #0x10
    7b28:	cmp	x0, x21
    7b2c:	b.eq	7b34 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x1e4>  // b.none
    7b30:	bl	0 <_ZdlPv>
    7b34:	mov	x0, x19
    7b38:	ldp	x19, x20, [sp, #16]
    7b3c:	ldp	x21, x22, [sp, #32]
    7b40:	ldp	x23, x24, [sp, #48]
    7b44:	ldp	x29, x30, [sp], #192
    7b48:	ret
    7b4c:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
    7b50:	add	x1, x20, #0x15
    7b54:	movk	x4, #0xcccd
    7b58:	umulh	x2, x3, x4
    7b5c:	cmp	x3, #0x9
    7b60:	lsr	x2, x2, #3
    7b64:	add	x0, x2, x2, lsl #2
    7b68:	sub	x0, x3, x0, lsl #1
    7b6c:	mov	x3, x2
    7b70:	add	w0, w0, #0x30
    7b74:	strb	w0, [x1, #-1]!
    7b78:	b.hi	7b58 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x208>  // b.pmore
    7b7c:	b	79f8 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0xa8>
    7b80:	ldp	x2, x3, [x0, #16]
    7b84:	stp	x2, x3, [sp, #176]
    7b88:	b	7a7c <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x12c>
    7b8c:	ldp	x2, x3, [x0, #16]
    7b90:	stp	x2, x3, [sp, #112]
    7b94:	b	79d0 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x80>
    7b98:	ldp	x2, x3, [x0, #16]
    7b9c:	stp	x2, x3, [x19, #16]
    7ba0:	b	7ad4 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x184>
    7ba4:	mov	x0, x23
    7ba8:	mov	x2, #0x0                   	// #0
    7bac:	mov	x1, #0x0                   	// #0
    7bb0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    7bb4:	b	7a58 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x108>
    7bb8:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7bbc:	add	x0, x0, #0x0
    7bc0:	bl	0 <_ZSt20__throw_length_errorPKc>
    7bc4:	nop

0000000000007bc8 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>:
    7bc8:	stp	x29, x30, [sp, #-192]!
    7bcc:	mov	x29, sp
    7bd0:	stp	x21, x22, [sp, #32]
    7bd4:	mov	x21, x0
    7bd8:	add	x22, sp, #0xa0
    7bdc:	ldr	x0, [x0, #32]
    7be0:	stp	x19, x20, [sp, #16]
    7be4:	stp	x23, x24, [sp, #48]
    7be8:	add	x23, sp, #0x60
    7bec:	ldr	x1, [x0]
    7bf0:	stp	x25, x26, [sp, #64]
    7bf4:	mov	x25, x8
    7bf8:	mov	x8, x22
    7bfc:	ldr	x1, [x1, #40]
    7c00:	blr	x1
    7c04:	mov	x2, #0x0                   	// #0
    7c08:	mov	x1, #0x0                   	// #0
    7c0c:	mov	x0, x22
    7c10:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7c14:	mov	x4, #0x1                   	// #1
    7c18:	add	x3, x3, #0x0
    7c1c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    7c20:	add	x1, x23, #0x10
    7c24:	str	x1, [sp, #96]
    7c28:	mov	x1, x0
    7c2c:	ldr	x2, [x1], #16
    7c30:	cmp	x2, x1
    7c34:	b.eq	811c <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x554>  // b.none
    7c38:	ldr	x3, [x0, #16]
    7c3c:	str	x2, [sp, #96]
    7c40:	str	x3, [sp, #112]
    7c44:	ldr	x2, [x0, #8]
    7c48:	str	x2, [sp, #104]
    7c4c:	stp	x1, xzr, [x0]
    7c50:	add	x1, x22, #0x10
    7c54:	strb	wzr, [x0, #16]
    7c58:	ldr	x0, [sp, #160]
    7c5c:	cmp	x0, x1
    7c60:	b.eq	7c68 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0xa0>  // b.none
    7c64:	bl	0 <_ZdlPv>
    7c68:	ldr	x0, [x21, #40]
    7c6c:	cbz	x0, 7d34 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x16c>
    7c70:	ldr	x2, [x0]
    7c74:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7c78:	add	x1, x1, #0x0
    7c7c:	ldr	x2, [x2, #48]
    7c80:	cmp	x2, x1
    7c84:	b.ne	8150 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x588>  // b.any
    7c88:	ldr	x1, [x0, #24]
    7c8c:	cbz	x1, 80e0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x518>
    7c90:	add	x19, sp, #0x80
    7c94:	mov	w3, #0x0                   	// #0
    7c98:	add	x4, x19, #0x10
    7c9c:	ldr	x2, [x0, #32]
    7ca0:	mov	x0, x19
    7ca4:	str	x4, [sp, #128]
    7ca8:	add	x2, x1, x2
    7cac:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7cb0:	mov	x2, #0x0                   	// #0
    7cb4:	mov	x1, #0x0                   	// #0
    7cb8:	mov	x0, x19
    7cbc:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7cc0:	mov	x4, #0x1                   	// #1
    7cc4:	add	x3, x3, #0x0
    7cc8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    7ccc:	mov	x1, x0
    7cd0:	add	x2, x22, #0x10
    7cd4:	str	x2, [sp, #160]
    7cd8:	ldr	x2, [x0], #16
    7cdc:	cmp	x2, x0
    7ce0:	b.eq	8128 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x560>  // b.none
    7ce4:	str	x2, [sp, #160]
    7ce8:	ldr	x2, [x1, #16]
    7cec:	str	x2, [sp, #176]
    7cf0:	ldr	x2, [x1, #8]
    7cf4:	str	x2, [sp, #168]
    7cf8:	stp	x0, xzr, [x1]
    7cfc:	mov	x0, x23
    7d00:	strb	wzr, [x1, #16]
    7d04:	ldp	x1, x2, [sp, #160]
    7d08:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    7d0c:	ldr	x0, [sp, #160]
    7d10:	add	x1, x22, #0x10
    7d14:	cmp	x0, x1
    7d18:	b.eq	7d20 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x158>  // b.none
    7d1c:	bl	0 <_ZdlPv>
    7d20:	ldr	x0, [sp, #128]
    7d24:	add	x19, x19, #0x10
    7d28:	cmp	x0, x19
    7d2c:	b.eq	7d34 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x16c>  // b.none
    7d30:	bl	0 <_ZdlPv>
    7d34:	ldr	w0, [x21, #48]
    7d38:	cbz	w0, 8070 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x4a8>
    7d3c:	ldr	x0, [x21, #56]
    7d40:	add	x19, sp, #0x80
    7d44:	mov	x8, x19
    7d48:	ldr	x1, [x0]
    7d4c:	ldr	x1, [x1, #40]
    7d50:	blr	x1
    7d54:	mov	x2, #0x0                   	// #0
    7d58:	mov	x1, #0x0                   	// #0
    7d5c:	mov	x0, x19
    7d60:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7d64:	mov	x4, #0x1                   	// #1
    7d68:	add	x3, x3, #0x0
    7d6c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    7d70:	mov	x1, x0
    7d74:	add	x2, x22, #0x10
    7d78:	str	x2, [sp, #160]
    7d7c:	ldr	x2, [x0], #16
    7d80:	cmp	x2, x0
    7d84:	b.eq	8134 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x56c>  // b.none
    7d88:	str	x2, [sp, #160]
    7d8c:	ldr	x2, [x1, #16]
    7d90:	str	x2, [sp, #176]
    7d94:	ldr	x2, [x1, #8]
    7d98:	str	x2, [sp, #168]
    7d9c:	stp	x0, xzr, [x1]
    7da0:	mov	x0, x23
    7da4:	strb	wzr, [x1, #16]
    7da8:	ldp	x1, x2, [sp, #160]
    7dac:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    7db0:	ldr	x0, [sp, #160]
    7db4:	add	x1, x22, #0x10
    7db8:	cmp	x0, x1
    7dbc:	b.eq	7dc4 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x1fc>  // b.none
    7dc0:	bl	0 <_ZdlPv>
    7dc4:	ldr	x0, [sp, #128]
    7dc8:	add	x1, x19, #0x10
    7dcc:	cmp	x0, x1
    7dd0:	b.eq	7dd8 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x210>  // b.none
    7dd4:	bl	0 <_ZdlPv>
    7dd8:	ldr	w0, [x21, #52]
    7ddc:	cbz	w0, 8178 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x5b0>
    7de0:	ldr	w26, [x21, #48]
    7de4:	add	x0, x21, w26, uxtw #3
    7de8:	ldr	x0, [x0, #56]
    7dec:	cbz	x0, 7eb4 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x2ec>
    7df0:	ldr	x2, [x0]
    7df4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7df8:	add	x1, x1, #0x0
    7dfc:	ldr	x2, [x2, #48]
    7e00:	cmp	x2, x1
    7e04:	b.ne	816c <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x5a4>  // b.any
    7e08:	ldr	x1, [x0, #24]
    7e0c:	cbz	x1, 8140 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x578>
    7e10:	add	x4, x19, #0x10
    7e14:	mov	w3, #0x0                   	// #0
    7e18:	ldr	x2, [x0, #32]
    7e1c:	mov	x0, x19
    7e20:	str	x4, [sp, #128]
    7e24:	add	x2, x1, x2
    7e28:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7e2c:	mov	x2, #0x0                   	// #0
    7e30:	mov	x1, #0x0                   	// #0
    7e34:	mov	x0, x19
    7e38:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7e3c:	mov	x4, #0x2                   	// #2
    7e40:	add	x3, x3, #0x0
    7e44:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    7e48:	mov	x1, x0
    7e4c:	add	x2, x22, #0x10
    7e50:	str	x2, [sp, #160]
    7e54:	ldr	x2, [x0], #16
    7e58:	cmp	x2, x0
    7e5c:	b.eq	8160 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x598>  // b.none
    7e60:	str	x2, [sp, #160]
    7e64:	ldr	x2, [x1, #16]
    7e68:	str	x2, [sp, #176]
    7e6c:	ldr	x2, [x1, #8]
    7e70:	str	x2, [sp, #168]
    7e74:	stp	x0, xzr, [x1]
    7e78:	mov	x0, x23
    7e7c:	strb	wzr, [x1, #16]
    7e80:	ldp	x1, x2, [sp, #160]
    7e84:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    7e88:	ldr	x0, [sp, #160]
    7e8c:	add	x1, x22, #0x10
    7e90:	cmp	x0, x1
    7e94:	b.eq	7e9c <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x2d4>  // b.none
    7e98:	bl	0 <_ZdlPv>
    7e9c:	ldr	x0, [sp, #128]
    7ea0:	add	x1, x19, #0x10
    7ea4:	cmp	x0, x1
    7ea8:	b.eq	7eb0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x2e8>  // b.none
    7eac:	bl	0 <_ZdlPv>
    7eb0:	ldr	w26, [x21, #48]
    7eb4:	cmp	w26, #0x1
    7eb8:	b.eq	8070 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x4a8>  // b.none
    7ebc:	mov	w0, w26
    7ec0:	mov	w20, #0x1                   	// #1
    7ec4:	stp	x27, x28, [sp, #80]
    7ec8:	adrp	x27, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7ecc:	adrp	x28, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7ed0:	add	x27, x27, #0x0
    7ed4:	add	x28, x28, #0x0
    7ed8:	b	8010 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x448>
    7edc:	str	x2, [sp, #160]
    7ee0:	ldr	x2, [x1, #16]
    7ee4:	str	x2, [sp, #176]
    7ee8:	ldr	x2, [x1, #8]
    7eec:	str	x2, [sp, #168]
    7ef0:	stp	x0, xzr, [x1]
    7ef4:	mov	x0, x23
    7ef8:	strb	wzr, [x1, #16]
    7efc:	ldp	x1, x2, [sp, #160]
    7f00:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    7f04:	ldr	x0, [sp, #160]
    7f08:	add	x1, x22, #0x10
    7f0c:	cmp	x0, x1
    7f10:	b.eq	7f18 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x350>  // b.none
    7f14:	bl	0 <_ZdlPv>
    7f18:	ldr	x0, [sp, #128]
    7f1c:	add	x1, x19, #0x10
    7f20:	cmp	x0, x1
    7f24:	b.eq	7f2c <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x364>  // b.none
    7f28:	bl	0 <_ZdlPv>
    7f2c:	ldr	w0, [x21, #52]
    7f30:	cmp	w20, w0
    7f34:	b.cs	817c <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x5b4>  // b.hs, b.nlast
    7f38:	ldr	w0, [x21, #48]
    7f3c:	add	x24, x24, w0, uxtw #3
    7f40:	ldr	x0, [x24, #56]
    7f44:	cbz	x0, 8000 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x438>
    7f48:	ldr	x1, [x0]
    7f4c:	ldr	x1, [x1, #48]
    7f50:	cmp	x1, x28
    7f54:	b.ne	8110 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x548>  // b.any
    7f58:	ldr	x1, [x0, #24]
    7f5c:	cbz	x1, 80f4 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x52c>
    7f60:	add	x4, x19, #0x10
    7f64:	mov	w3, #0x0                   	// #0
    7f68:	ldr	x2, [x0, #32]
    7f6c:	mov	x0, x19
    7f70:	str	x4, [sp, #128]
    7f74:	add	x2, x1, x2
    7f78:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7f7c:	mov	x2, #0x0                   	// #0
    7f80:	mov	x1, #0x0                   	// #0
    7f84:	mov	x0, x19
    7f88:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7f8c:	mov	x4, #0x2                   	// #2
    7f90:	add	x3, x3, #0x0
    7f94:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    7f98:	mov	x1, x0
    7f9c:	add	x2, x22, #0x10
    7fa0:	str	x2, [sp, #160]
    7fa4:	ldr	x2, [x0], #16
    7fa8:	cmp	x2, x0
    7fac:	b.eq	8104 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x53c>  // b.none
    7fb0:	str	x2, [sp, #160]
    7fb4:	ldr	x2, [x1, #16]
    7fb8:	str	x2, [sp, #176]
    7fbc:	ldr	x2, [x1, #8]
    7fc0:	str	x2, [sp, #168]
    7fc4:	stp	x0, xzr, [x1]
    7fc8:	mov	x0, x23
    7fcc:	strb	wzr, [x1, #16]
    7fd0:	ldp	x1, x2, [sp, #160]
    7fd4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    7fd8:	ldr	x0, [sp, #160]
    7fdc:	add	x1, x22, #0x10
    7fe0:	cmp	x0, x1
    7fe4:	b.eq	7fec <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x424>  // b.none
    7fe8:	bl	0 <_ZdlPv>
    7fec:	ldr	x0, [sp, #128]
    7ff0:	add	x1, x19, #0x10
    7ff4:	cmp	x0, x1
    7ff8:	b.eq	8000 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x438>  // b.none
    7ffc:	bl	0 <_ZdlPv>
    8000:	add	w20, w20, #0x1
    8004:	cmp	w20, w26
    8008:	b.eq	806c <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x4a4>  // b.none
    800c:	ldr	w0, [x21, #48]
    8010:	cmp	w0, w20
    8014:	b.ls	819c <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x5d4>  // b.plast
    8018:	add	x24, x21, w20, uxtw #3
    801c:	mov	x8, x19
    8020:	ldr	x0, [x24, #56]
    8024:	ldr	x1, [x0]
    8028:	ldr	x1, [x1, #40]
    802c:	blr	x1
    8030:	mov	x2, #0x0                   	// #0
    8034:	mov	x1, #0x0                   	// #0
    8038:	mov	x3, x27
    803c:	mov	x0, x19
    8040:	mov	x4, #0x2                   	// #2
    8044:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    8048:	add	x2, x22, #0x10
    804c:	str	x2, [sp, #160]
    8050:	mov	x1, x0
    8054:	ldr	x2, [x0], #16
    8058:	cmp	x2, x0
    805c:	b.ne	7edc <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x314>  // b.any
    8060:	ldp	x2, x3, [x1, #16]
    8064:	stp	x2, x3, [sp, #176]
    8068:	b	7ee8 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x320>
    806c:	ldp	x27, x28, [sp, #80]
    8070:	add	x0, x25, #0x10
    8074:	ldp	x1, x2, [sp, #96]
    8078:	str	x0, [x25]
    807c:	mov	w3, #0x0                   	// #0
    8080:	mov	x0, x25
    8084:	add	x2, x1, x2
    8088:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    808c:	ldr	x1, [x25, #8]
    8090:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    8094:	cmp	x1, x0
    8098:	b.eq	81bc <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x5f4>  // b.none
    809c:	mov	x0, x25
    80a0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    80a4:	mov	x2, #0x1                   	// #1
    80a8:	add	x1, x1, #0x0
    80ac:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    80b0:	add	x23, x23, #0x10
    80b4:	ldr	x0, [sp, #96]
    80b8:	cmp	x0, x23
    80bc:	b.eq	80c4 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x4fc>  // b.none
    80c0:	bl	0 <_ZdlPv>
    80c4:	mov	x0, x25
    80c8:	ldp	x19, x20, [sp, #16]
    80cc:	ldp	x21, x22, [sp, #32]
    80d0:	ldp	x23, x24, [sp, #48]
    80d4:	ldp	x25, x26, [sp, #64]
    80d8:	ldp	x29, x30, [sp], #192
    80dc:	ret
    80e0:	add	x19, sp, #0x80
    80e4:	strb	wzr, [sp, #144]
    80e8:	add	x0, x19, #0x10
    80ec:	stp	x0, xzr, [sp, #128]
    80f0:	b	7cb0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0xe8>
    80f4:	add	x0, x19, #0x10
    80f8:	stp	x0, xzr, [sp, #128]
    80fc:	strb	wzr, [sp, #144]
    8100:	b	7f7c <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x3b4>
    8104:	ldp	x2, x3, [x1, #16]
    8108:	stp	x2, x3, [sp, #176]
    810c:	b	7fbc <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x3f4>
    8110:	mov	x8, x19
    8114:	blr	x1
    8118:	b	7f7c <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x3b4>
    811c:	ldp	x2, x3, [x0, #16]
    8120:	stp	x2, x3, [sp, #112]
    8124:	b	7c44 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x7c>
    8128:	ldp	x2, x3, [x1, #16]
    812c:	stp	x2, x3, [sp, #176]
    8130:	b	7cf0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x128>
    8134:	ldp	x2, x3, [x1, #16]
    8138:	stp	x2, x3, [sp, #176]
    813c:	b	7d94 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x1cc>
    8140:	add	x0, x19, #0x10
    8144:	stp	x0, xzr, [sp, #128]
    8148:	strb	wzr, [sp, #144]
    814c:	b	7e2c <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x264>
    8150:	add	x19, sp, #0x80
    8154:	mov	x8, x19
    8158:	blr	x2
    815c:	b	7cb0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0xe8>
    8160:	ldp	x2, x3, [x1, #16]
    8164:	stp	x2, x3, [sp, #176]
    8168:	b	7e6c <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x2a4>
    816c:	mov	x8, x19
    8170:	blr	x2
    8174:	b	7e2c <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x264>
    8178:	stp	x27, x28, [sp, #80]
    817c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8180:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8184:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8188:	add	x3, x3, #0x0
    818c:	add	x1, x1, #0x0
    8190:	add	x0, x0, #0x0
    8194:	mov	w2, #0x545                 	// #1349
    8198:	bl	0 <__assert_fail>
    819c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    81a0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    81a4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    81a8:	add	x3, x3, #0x0
    81ac:	add	x1, x1, #0x0
    81b0:	add	x0, x0, #0x0
    81b4:	mov	w2, #0x540                 	// #1344
    81b8:	bl	0 <__assert_fail>
    81bc:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    81c0:	add	x0, x0, #0x0
    81c4:	stp	x27, x28, [sp, #80]
    81c8:	bl	0 <_ZSt20__throw_length_errorPKc>
    81cc:	nop

00000000000081d0 <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev>:
    81d0:	stp	x29, x30, [sp, #-160]!
    81d4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    81d8:	adrp	x2, 26a0 <_ZNK4llvm8ListInit7ProfileERNS_16FoldingSetNodeIDE>
    81dc:	mov	x29, sp
    81e0:	stp	x19, x20, [sp, #16]
    81e4:	add	x20, sp, #0x60
    81e8:	add	x4, x20, #0x10
    81ec:	str	x27, [sp, #80]
    81f0:	mov	x27, x0
    81f4:	add	x1, x1, #0x0
    81f8:	mov	x0, x20
    81fc:	add	x2, x2, #0x0
    8200:	mov	w3, #0x0                   	// #0
    8204:	stp	x21, x22, [sp, #32]
    8208:	stp	x23, x24, [sp, #48]
    820c:	mov	x24, x8
    8210:	str	x4, [sp, #96]
    8214:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8218:	ldr	w21, [x27, #32]
    821c:	mov	x0, #0x28                  	// #40
    8220:	add	x19, x27, x0
    8224:	add	x21, x0, w21, uxtw #3
    8228:	add	x21, x27, x21
    822c:	cmp	x21, x19
    8230:	b.eq	8334 <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0x164>  // b.none
    8234:	add	x23, sp, #0x80
    8238:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    823c:	adrp	x22, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8240:	add	x1, x1, #0x0
    8244:	add	x22, x22, #0x0
    8248:	mov	x2, #0x0                   	// #0
    824c:	stp	x25, x26, [sp, #64]
    8250:	add	x25, x23, #0x10
    8254:	mov	x26, #0x3fffffffffffffff    	// #4611686018427387903
    8258:	ldr	x27, [x27, #40]
    825c:	b	8278 <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0xa8>
    8260:	sub	x2, x26, x2
    8264:	mov	x1, x22
    8268:	cmp	x2, #0x1
    826c:	mov	x2, #0x2                   	// #2
    8270:	ldr	x27, [x19]
    8274:	b.ls	8340 <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0x170>  // b.plast
    8278:	mov	x0, x20
    827c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    8280:	ldr	x1, [x27]
    8284:	mov	x0, x27
    8288:	mov	x8, x23
    828c:	ldr	x1, [x1, #40]
    8290:	blr	x1
    8294:	ldp	x1, x2, [sp, #128]
    8298:	mov	x0, x20
    829c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    82a0:	ldr	x0, [sp, #128]
    82a4:	cmp	x0, x25
    82a8:	b.eq	82b0 <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0xe0>  // b.none
    82ac:	bl	0 <_ZdlPv>
    82b0:	add	x19, x19, #0x8
    82b4:	cmp	x19, x21
    82b8:	ldr	x2, [sp, #104]
    82bc:	b.ne	8260 <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0x90>  // b.any
    82c0:	ldp	x25, x26, [sp, #64]
    82c4:	add	x0, x24, #0x10
    82c8:	ldr	x1, [sp, #96]
    82cc:	str	x0, [x24]
    82d0:	mov	w3, #0x0                   	// #0
    82d4:	mov	x0, x24
    82d8:	add	x2, x1, x2
    82dc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    82e0:	ldr	x1, [x24, #8]
    82e4:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    82e8:	cmp	x1, x0
    82ec:	b.eq	833c <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0x16c>  // b.none
    82f0:	mov	x0, x24
    82f4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    82f8:	mov	x2, #0x1                   	// #1
    82fc:	add	x1, x1, #0x0
    8300:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    8304:	add	x20, x20, #0x10
    8308:	ldr	x0, [sp, #96]
    830c:	cmp	x0, x20
    8310:	b.eq	8318 <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0x148>  // b.none
    8314:	bl	0 <_ZdlPv>
    8318:	mov	x0, x24
    831c:	ldp	x19, x20, [sp, #16]
    8320:	ldp	x21, x22, [sp, #32]
    8324:	ldp	x23, x24, [sp, #48]
    8328:	ldr	x27, [sp, #80]
    832c:	ldp	x29, x30, [sp], #160
    8330:	ret
    8334:	ldr	x2, [sp, #104]
    8338:	b	82c4 <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0xf4>
    833c:	stp	x25, x26, [sp, #64]
    8340:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8344:	add	x0, x0, #0x0
    8348:	bl	0 <_ZSt20__throw_length_errorPKc>
    834c:	nop

0000000000008350 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev>:
    8350:	stp	x29, x30, [sp, #-160]!
    8354:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8358:	adrp	x2, 26b0 <_ZNK4llvm8ListInit7ProfileERNS_16FoldingSetNodeIDE+0x10>
    835c:	mov	x29, sp
    8360:	stp	x21, x22, [sp, #32]
    8364:	add	x21, sp, #0x60
    8368:	add	x4, x21, #0x10
    836c:	stp	x19, x20, [sp, #16]
    8370:	mov	x20, x0
    8374:	add	x1, x1, #0x0
    8378:	mov	x0, x21
    837c:	add	x2, x2, #0x0
    8380:	mov	w3, #0x0                   	// #0
    8384:	stp	x23, x24, [sp, #48]
    8388:	mov	x23, x8
    838c:	str	x4, [sp, #96]
    8390:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8394:	ldr	w22, [x20, #32]
    8398:	cbz	w22, 8470 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x120>
    839c:	stp	x25, x26, [sp, #64]
    83a0:	add	x25, sp, #0x80
    83a4:	sub	w19, w22, #0x1
    83a8:	mov	w0, w22
    83ac:	add	x26, x25, #0x10
    83b0:	str	x27, [sp, #80]
    83b4:	adrp	x27, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    83b8:	add	x27, x27, #0x0
    83bc:	mov	x24, #0x28                  	// #40
    83c0:	cmp	w19, w0
    83c4:	b.cs	84e0 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x190>  // b.hs, b.nlast
    83c8:	add	x0, x24, w19, uxtw #3
    83cc:	ldr	x0, [x20, x0]
    83d0:	cbz	x0, 8440 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0xf0>
    83d4:	ldr	x1, [x0]
    83d8:	mov	x8, x25
    83dc:	ldr	x1, [x1, #40]
    83e0:	blr	x1
    83e4:	ldp	x1, x2, [sp, #128]
    83e8:	mov	x0, x21
    83ec:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    83f0:	ldr	x0, [sp, #128]
    83f4:	cmp	x0, x26
    83f8:	b.eq	8400 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0xb0>  // b.none
    83fc:	bl	0 <_ZdlPv>
    8400:	cbz	w19, 8468 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x118>
    8404:	cmp	w22, w19
    8408:	b.eq	8434 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0xe4>  // b.none
    840c:	ldr	x1, [sp, #104]
    8410:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    8414:	sub	x0, x0, x1
    8418:	cmp	x0, #0x1
    841c:	b.ls	8508 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x1b8>  // b.plast
    8420:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8424:	mov	x0, x21
    8428:	add	x1, x1, #0x0
    842c:	mov	x2, #0x2                   	// #2
    8430:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    8434:	ldr	w0, [x20, #32]
    8438:	sub	w19, w19, #0x1
    843c:	b	83c0 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x70>
    8440:	ldr	x1, [sp, #104]
    8444:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    8448:	cmp	x1, x0
    844c:	b.eq	8508 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x1b8>  // b.none
    8450:	mov	x1, x27
    8454:	mov	x0, x21
    8458:	mov	x2, #0x1                   	// #1
    845c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    8460:	cbnz	w19, 8404 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0xb4>
    8464:	nop
    8468:	ldp	x25, x26, [sp, #64]
    846c:	ldr	x27, [sp, #80]
    8470:	add	x0, x23, #0x10
    8474:	ldp	x1, x2, [sp, #96]
    8478:	str	x0, [x23]
    847c:	mov	w3, #0x0                   	// #0
    8480:	mov	x0, x23
    8484:	add	x2, x1, x2
    8488:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    848c:	ldr	x1, [x23, #8]
    8490:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    8494:	sub	x0, x0, x1
    8498:	cmp	x0, #0x1
    849c:	b.ls	8500 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x1b0>  // b.plast
    84a0:	mov	x0, x23
    84a4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    84a8:	mov	x2, #0x2                   	// #2
    84ac:	add	x1, x1, #0x0
    84b0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    84b4:	add	x21, x21, #0x10
    84b8:	ldr	x0, [sp, #96]
    84bc:	cmp	x0, x21
    84c0:	b.eq	84c8 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x178>  // b.none
    84c4:	bl	0 <_ZdlPv>
    84c8:	mov	x0, x23
    84cc:	ldp	x19, x20, [sp, #16]
    84d0:	ldp	x21, x22, [sp, #32]
    84d4:	ldp	x23, x24, [sp, #48]
    84d8:	ldp	x29, x30, [sp], #160
    84dc:	ret
    84e0:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    84e4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    84e8:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    84ec:	add	x3, x3, #0x0
    84f0:	add	x1, x1, #0x0
    84f4:	add	x0, x0, #0x0
    84f8:	mov	w2, #0x22e                 	// #558
    84fc:	bl	0 <__assert_fail>
    8500:	stp	x25, x26, [sp, #64]
    8504:	str	x27, [sp, #80]
    8508:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    850c:	add	x0, x0, #0x0
    8510:	bl	0 <_ZSt20__throw_length_errorPKc>
    8514:	nop

0000000000008518 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev>:
    8518:	stp	x29, x30, [sp, #-160]!
    851c:	mov	x29, sp
    8520:	str	x27, [sp, #80]
    8524:	mov	x27, x0
    8528:	ldr	x0, [x0, #32]
    852c:	stp	x19, x20, [sp, #16]
    8530:	add	x20, sp, #0x60
    8534:	stp	x21, x22, [sp, #32]
    8538:	add	x22, sp, #0x80
    853c:	ldr	x0, [x0]
    8540:	stp	x23, x24, [sp, #48]
    8544:	mov	x24, x8
    8548:	mov	x8, x22
    854c:	ldr	x1, [x0]
    8550:	ldr	x1, [x1, #48]
    8554:	blr	x1
    8558:	ldp	x1, x2, [sp, #128]
    855c:	add	x4, x20, #0x10
    8560:	mov	x0, x20
    8564:	mov	w3, #0x0                   	// #0
    8568:	str	x4, [sp, #96]
    856c:	add	x2, x1, x2
    8570:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8574:	ldr	x1, [sp, #104]
    8578:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    857c:	cmp	x1, x0
    8580:	b.eq	86c4 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x1ac>  // b.none
    8584:	mov	x0, x20
    8588:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    858c:	mov	x2, #0x1                   	// #1
    8590:	add	x1, x1, #0x0
    8594:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    8598:	ldr	x0, [sp, #128]
    859c:	add	x1, x22, #0x10
    85a0:	cmp	x0, x1
    85a4:	b.eq	85ac <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x94>  // b.none
    85a8:	bl	0 <_ZdlPv>
    85ac:	ldr	w21, [x27, #48]
    85b0:	add	x0, x27, #0x38
    85b4:	add	x21, x0, x21, lsl #3
    85b8:	cmp	x21, x0
    85bc:	b.eq	86bc <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x1a4>  // b.none
    85c0:	add	x19, x27, #0x40
    85c4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    85c8:	adrp	x23, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    85cc:	add	x1, x1, #0x0
    85d0:	add	x23, x23, #0x0
    85d4:	mov	x2, #0x0                   	// #0
    85d8:	stp	x25, x26, [sp, #64]
    85dc:	add	x25, x22, #0x10
    85e0:	mov	x26, #0x3fffffffffffffff    	// #4611686018427387903
    85e4:	ldr	x27, [x27, #56]
    85e8:	b	8604 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0xec>
    85ec:	sub	x0, x26, x2
    85f0:	mov	x1, x23
    85f4:	cmp	x0, #0x1
    85f8:	mov	x2, #0x2                   	// #2
    85fc:	ldr	x27, [x19], #8
    8600:	b.ls	86c8 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x1b0>  // b.plast
    8604:	mov	x0, x20
    8608:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    860c:	ldr	x1, [x27]
    8610:	mov	x0, x27
    8614:	mov	x8, x22
    8618:	ldr	x1, [x1, #40]
    861c:	blr	x1
    8620:	ldp	x1, x2, [sp, #128]
    8624:	mov	x0, x20
    8628:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    862c:	ldr	x0, [sp, #128]
    8630:	cmp	x0, x25
    8634:	b.eq	863c <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x124>  // b.none
    8638:	bl	0 <_ZdlPv>
    863c:	cmp	x21, x19
    8640:	ldr	x2, [sp, #104]
    8644:	b.ne	85ec <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0xd4>  // b.any
    8648:	ldp	x25, x26, [sp, #64]
    864c:	add	x0, x24, #0x10
    8650:	ldr	x1, [sp, #96]
    8654:	str	x0, [x24]
    8658:	mov	w3, #0x0                   	// #0
    865c:	mov	x0, x24
    8660:	add	x2, x1, x2
    8664:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8668:	ldr	x1, [x24, #8]
    866c:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    8670:	cmp	x1, x0
    8674:	b.eq	86c4 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x1ac>  // b.none
    8678:	mov	x0, x24
    867c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8680:	mov	x2, #0x1                   	// #1
    8684:	add	x1, x1, #0x0
    8688:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    868c:	add	x20, x20, #0x10
    8690:	ldr	x0, [sp, #96]
    8694:	cmp	x0, x20
    8698:	b.eq	86a0 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x188>  // b.none
    869c:	bl	0 <_ZdlPv>
    86a0:	mov	x0, x24
    86a4:	ldp	x19, x20, [sp, #16]
    86a8:	ldp	x21, x22, [sp, #32]
    86ac:	ldp	x23, x24, [sp, #48]
    86b0:	ldr	x27, [sp, #80]
    86b4:	ldp	x29, x30, [sp], #160
    86b8:	ret
    86bc:	ldr	x2, [sp, #104]
    86c0:	b	864c <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x134>
    86c4:	stp	x25, x26, [sp, #64]
    86c8:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    86cc:	add	x0, x0, #0x0
    86d0:	bl	0 <_ZSt20__throw_length_errorPKc>
    86d4:	nop

00000000000086d8 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev>:
    86d8:	stp	x29, x30, [sp, #-192]!
    86dc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    86e0:	adrp	x2, 26c8 <_ZNK4llvm8ListInit7ProfileERNS_16FoldingSetNodeIDE+0x28>
    86e4:	mov	x29, sp
    86e8:	stp	x21, x22, [sp, #32]
    86ec:	add	x21, sp, #0x60
    86f0:	add	x4, x21, #0x10
    86f4:	stp	x19, x20, [sp, #16]
    86f8:	mov	x20, x0
    86fc:	add	x1, x1, #0x0
    8700:	mov	x0, x21
    8704:	add	x2, x2, #0x0
    8708:	mov	w3, #0x0                   	// #0
    870c:	str	x27, [sp, #80]
    8710:	mov	x27, x8
    8714:	str	x4, [sp, #96]
    8718:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    871c:	ldr	w0, [x20, #32]
    8720:	cbz	w0, 8888 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x1b0>
    8724:	stp	x25, x26, [sp, #64]
    8728:	add	x26, sp, #0xa0
    872c:	adrp	x25, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8730:	add	x22, sp, #0x80
    8734:	add	x25, x25, #0x0
    8738:	mov	w19, #0x0                   	// #0
    873c:	stp	x23, x24, [sp, #48]
    8740:	add	x23, x26, #0x10
    8744:	mov	x24, #0x30                  	// #48
    8748:	b	8824 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x14c>
    874c:	str	x2, [sp, #160]
    8750:	ldr	x2, [x1, #16]
    8754:	str	x2, [sp, #176]
    8758:	ldr	x2, [x1, #8]
    875c:	str	x2, [sp, #168]
    8760:	stp	x0, xzr, [x1]
    8764:	mov	x0, x21
    8768:	strb	wzr, [x1, #16]
    876c:	ldp	x1, x2, [sp, #160]
    8770:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    8774:	ldr	x0, [sp, #160]
    8778:	cmp	x0, x23
    877c:	b.eq	8784 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0xac>  // b.none
    8780:	bl	0 <_ZdlPv>
    8784:	ldr	x0, [sp, #128]
    8788:	add	x1, x22, #0x10
    878c:	cmp	x0, x1
    8790:	b.eq	8798 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0xc0>  // b.none
    8794:	bl	0 <_ZdlPv>
    8798:	ldr	w0, [x20, #32]
    879c:	cmp	w19, w0
    87a0:	b.cs	8908 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x230>  // b.hs, b.nlast
    87a4:	add	w0, w19, w0
    87a8:	mov	x8, x26
    87ac:	add	x0, x24, w0, uxtw #3
    87b0:	ldr	x0, [x20, x0]
    87b4:	ldr	x1, [x0]
    87b8:	ldr	x1, [x1, #40]
    87bc:	blr	x1
    87c0:	ldp	x1, x2, [sp, #160]
    87c4:	mov	x0, x21
    87c8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    87cc:	ldr	x0, [sp, #160]
    87d0:	cmp	x0, x23
    87d4:	b.eq	87dc <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x104>  // b.none
    87d8:	bl	0 <_ZdlPv>
    87dc:	ldr	w0, [x20, #32]
    87e0:	sub	w1, w0, #0x1
    87e4:	cmp	w1, w19
    87e8:	b.eq	8818 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x140>  // b.none
    87ec:	ldr	x1, [sp, #104]
    87f0:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    87f4:	sub	x0, x0, x1
    87f8:	cmp	x0, #0x1
    87fc:	b.ls	88fc <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x224>  // b.plast
    8800:	mov	x0, x21
    8804:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8808:	mov	x2, #0x2                   	// #2
    880c:	add	x1, x1, #0x0
    8810:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    8814:	ldr	w0, [x20, #32]
    8818:	add	w19, w19, #0x1
    881c:	cmp	w19, w0
    8820:	b.cs	8880 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x1a8>  // b.hs, b.nlast
    8824:	add	x0, x24, w19, uxtw #3
    8828:	mov	x8, x22
    882c:	ldr	x0, [x20, x0]
    8830:	ldr	x1, [x0]
    8834:	ldr	x1, [x1, #40]
    8838:	blr	x1
    883c:	ldr	x1, [sp, #136]
    8840:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    8844:	sub	x0, x0, x1
    8848:	cmp	x0, #0x1
    884c:	b.ls	88fc <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x224>  // b.plast
    8850:	mov	x1, x25
    8854:	mov	x2, #0x2                   	// #2
    8858:	mov	x0, x22
    885c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    8860:	str	x23, [sp, #160]
    8864:	mov	x1, x0
    8868:	ldr	x2, [x0], #16
    886c:	cmp	x2, x0
    8870:	b.ne	874c <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x74>  // b.any
    8874:	ldp	x2, x3, [x1, #16]
    8878:	stp	x2, x3, [sp, #176]
    887c:	b	8758 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x80>
    8880:	ldp	x23, x24, [sp, #48]
    8884:	ldp	x25, x26, [sp, #64]
    8888:	add	x0, x27, #0x10
    888c:	ldp	x1, x2, [sp, #96]
    8890:	str	x0, [x27]
    8894:	mov	w3, #0x0                   	// #0
    8898:	mov	x0, x27
    889c:	add	x2, x1, x2
    88a0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    88a4:	ldr	x1, [x27, #8]
    88a8:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    88ac:	cmp	x1, x0
    88b0:	b.eq	88f4 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x21c>  // b.none
    88b4:	mov	x0, x27
    88b8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    88bc:	mov	x2, #0x1                   	// #1
    88c0:	add	x1, x1, #0x0
    88c4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    88c8:	add	x21, x21, #0x10
    88cc:	ldr	x0, [sp, #96]
    88d0:	cmp	x0, x21
    88d4:	b.eq	88dc <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x204>  // b.none
    88d8:	bl	0 <_ZdlPv>
    88dc:	mov	x0, x27
    88e0:	ldp	x19, x20, [sp, #16]
    88e4:	ldp	x21, x22, [sp, #32]
    88e8:	ldr	x27, [sp, #80]
    88ec:	ldp	x29, x30, [sp], #192
    88f0:	ret
    88f4:	stp	x23, x24, [sp, #48]
    88f8:	stp	x25, x26, [sp, #64]
    88fc:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8900:	add	x0, x0, #0x0
    8904:	bl	0 <_ZSt20__throw_length_errorPKc>
    8908:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    890c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8910:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8914:	add	x3, x3, #0x0
    8918:	add	x1, x1, #0x0
    891c:	add	x0, x0, #0x0
    8920:	mov	w2, #0x3bf                 	// #959
    8924:	bl	0 <__assert_fail>

0000000000008928 <_ZNK4llvm10CondOpInit4FoldEPNS_6RecordE>:
    8928:	stp	x29, x30, [sp, #-192]!
    892c:	mov	x29, sp
    8930:	stp	x19, x20, [sp, #16]
    8934:	mov	x19, x0
    8938:	ldr	w0, [x0, #32]
    893c:	stp	x21, x22, [sp, #32]
    8940:	mov	x21, x1
    8944:	stp	x23, x24, [sp, #48]
    8948:	cbz	w0, 89c0 <_ZNK4llvm10CondOpInit4FoldEPNS_6RecordE+0x98>
    894c:	adrp	x22, 3e0 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE+0x50>
    8950:	mov	w20, #0x0                   	// #0
    8954:	mov	x23, #0x30                  	// #48
    8958:	ldr	x22, [x22]
    895c:	add	x3, x23, w20, uxtw #3
    8960:	add	w2, w20, w0
    8964:	mov	x1, x22
    8968:	ldr	x0, [x19, x3]
    896c:	add	x2, x23, w2, uxtw #3
    8970:	ldr	x3, [x0]
    8974:	ldr	x24, [x19, x2]
    8978:	ldr	x2, [x3, #64]
    897c:	blr	x2
    8980:	cbz	x0, 8990 <_ZNK4llvm10CondOpInit4FoldEPNS_6RecordE+0x68>
    8984:	ldrb	w1, [x0, #8]
    8988:	cmp	w1, #0x8
    898c:	b.eq	89a8 <_ZNK4llvm10CondOpInit4FoldEPNS_6RecordE+0x80>  // b.none
    8990:	mov	x0, x19
    8994:	ldp	x19, x20, [sp, #16]
    8998:	ldp	x21, x22, [sp, #32]
    899c:	ldp	x23, x24, [sp, #48]
    89a0:	ldp	x29, x30, [sp], #192
    89a4:	ret
    89a8:	ldr	x0, [x0, #24]
    89ac:	cbnz	x0, 8a48 <_ZNK4llvm10CondOpInit4FoldEPNS_6RecordE+0x120>
    89b0:	ldr	w0, [x19, #32]
    89b4:	add	w20, w20, #0x1
    89b8:	cmp	w0, w20
    89bc:	b.hi	895c <_ZNK4llvm10CondOpInit4FoldEPNS_6RecordE+0x34>  // b.pmore
    89c0:	ldp	x0, x24, [x21]
    89c4:	add	x22, sp, #0x58
    89c8:	ldr	w23, [x21, #16]
    89cc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    89d0:	mov	x1, x0
    89d4:	add	x4, sp, #0x48
    89d8:	adrp	x2, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    89dc:	add	x2, x2, #0x0
    89e0:	stp	x4, x2, [sp, #88]
    89e4:	mov	w3, #0x305                 	// #773
    89e8:	ldp	x4, x1, [x1, #24]
    89ec:	mov	x0, x22
    89f0:	stp	x4, x1, [sp, #72]
    89f4:	strh	w3, [sp, #104]
    89f8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    89fc:	tst	w0, #0xff
    8a00:	b.eq	8a60 <_ZNK4llvm10CondOpInit4FoldEPNS_6RecordE+0x138>  // b.none
    8a04:	add	x21, sp, #0xa0
    8a08:	mov	x0, x19
    8a0c:	mov	x8, x21
    8a10:	add	x20, sp, #0x70
    8a14:	bl	86d8 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev>
    8a18:	add	x19, sp, #0x88
    8a1c:	mov	x1, x21
    8a20:	mov	x0, x20
    8a24:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8a28:	mov	x8, x19
    8a2c:	mov	x1, x20
    8a30:	mov	x0, x22
    8a34:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8a38:	mov	x2, x19
    8a3c:	mov	x0, x24
    8a40:	mov	x1, x23
    8a44:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    8a48:	ldr	x2, [x24]
    8a4c:	mov	x0, x24
    8a50:	ldr	x1, [x19, #40]
    8a54:	ldr	x2, [x2, #64]
    8a58:	blr	x2
    8a5c:	b	8994 <_ZNK4llvm10CondOpInit4FoldEPNS_6RecordE+0x6c>
    8a60:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8a64:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8a68:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8a6c:	add	x3, x3, #0x0
    8a70:	add	x1, x1, #0x0
    8a74:	add	x0, x0, #0x0
    8a78:	mov	w2, #0x171                 	// #369
    8a7c:	bl	0 <__assert_fail>

0000000000008a80 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE>:
    8a80:	stp	x29, x30, [sp, #-192]!
    8a84:	mov	x2, #0x400000000           	// #17179869184
    8a88:	mov	x29, sp
    8a8c:	stp	x21, x22, [sp, #32]
    8a90:	mov	x22, x0
    8a94:	mov	x21, x1
    8a98:	stp	x25, x26, [sp, #64]
    8a9c:	add	x26, x0, #0x30
    8aa0:	ldr	w0, [x0, #32]
    8aa4:	stp	x23, x24, [sp, #48]
    8aa8:	add	x23, sp, #0x60
    8aac:	add	x24, x23, #0x10
    8ab0:	lsl	x1, x0, #3
    8ab4:	stp	x19, x20, [sp, #16]
    8ab8:	add	x25, x26, x1
    8abc:	stp	x27, x28, [sp, #80]
    8ac0:	cmp	x26, x25
    8ac4:	stp	x24, x2, [sp, #96]
    8ac8:	b.eq	8c78 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x1f8>  // b.none
    8acc:	mov	w20, #0x0                   	// #0
    8ad0:	ldr	x27, [x26]
    8ad4:	mov	x1, x21
    8ad8:	mov	x0, x27
    8adc:	ldr	x2, [x27]
    8ae0:	ldr	x2, [x2, #96]
    8ae4:	blr	x2
    8ae8:	mov	x19, x0
    8aec:	ldp	w1, w0, [sp, #104]
    8af0:	cmp	w1, w0
    8af4:	b.cs	8c40 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x1c0>  // b.hs, b.nlast
    8af8:	ldr	x0, [sp, #96]
    8afc:	str	x19, [x0, w1, uxtw #3]
    8b00:	ldp	w2, w1, [sp, #104]
    8b04:	mov	w0, w2
    8b08:	add	x0, x0, #0x1
    8b0c:	cmp	x0, x1
    8b10:	b.hi	8ca0 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x220>  // b.pmore
    8b14:	cmp	x19, x27
    8b18:	add	w2, w2, #0x1
    8b1c:	str	w2, [sp, #104]
    8b20:	cset	w0, ne  // ne = any
    8b24:	add	x26, x26, #0x8
    8b28:	orr	w20, w20, w0
    8b2c:	cmp	x25, x26
    8b30:	b.ne	8ad0 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x50>  // b.any
    8b34:	ldr	w24, [x22, #32]
    8b38:	add	x25, sp, #0x90
    8b3c:	add	x0, x25, #0x10
    8b40:	mov	x1, #0x400000000           	// #17179869184
    8b44:	stp	x0, x1, [sp, #144]
    8b48:	lsl	x24, x24, #3
    8b4c:	add	x27, x24, #0x30
    8b50:	add	x27, x22, x27
    8b54:	add	x24, x27, x24
    8b58:	cmp	x24, x27
    8b5c:	b.eq	8bd0 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x150>  // b.none
    8b60:	add	x26, x25, #0x10
    8b64:	nop
    8b68:	ldr	x28, [x27]
    8b6c:	mov	x1, x21
    8b70:	mov	x0, x28
    8b74:	ldr	x2, [x28]
    8b78:	ldr	x2, [x2, #96]
    8b7c:	blr	x2
    8b80:	mov	x19, x0
    8b84:	ldp	w1, w0, [sp, #152]
    8b88:	cmp	w1, w0
    8b8c:	b.cs	8c5c <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x1dc>  // b.hs, b.nlast
    8b90:	ldr	x0, [sp, #144]
    8b94:	str	x19, [x0, w1, uxtw #3]
    8b98:	ldp	w0, w2, [sp, #152]
    8b9c:	mov	w1, w0
    8ba0:	add	x1, x1, #0x1
    8ba4:	cmp	x1, x2
    8ba8:	b.hi	8ca0 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x220>  // b.pmore
    8bac:	cmp	x19, x28
    8bb0:	add	w0, w0, #0x1
    8bb4:	str	w0, [sp, #152]
    8bb8:	add	x27, x27, #0x8
    8bbc:	cset	w0, ne  // ne = any
    8bc0:	cmp	x24, x27
    8bc4:	orr	w20, w20, w0
    8bc8:	b.ne	8b68 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0xe8>  // b.any
    8bcc:	ldr	x0, [sp, #144]
    8bd0:	cbz	w20, 8bfc <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x17c>
    8bd4:	mov	x2, x0
    8bd8:	ldr	w1, [sp, #104]
    8bdc:	ldr	w3, [sp, #152]
    8be0:	ldr	x4, [x22, #40]
    8be4:	ldr	x0, [sp, #96]
    8be8:	bl	4648 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE>
    8bec:	ldr	x1, [x21, #8]
    8bf0:	bl	8928 <_ZNK4llvm10CondOpInit4FoldEPNS_6RecordE>
    8bf4:	mov	x22, x0
    8bf8:	ldr	x0, [sp, #144]
    8bfc:	add	x25, x25, #0x10
    8c00:	cmp	x0, x25
    8c04:	b.eq	8c0c <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x18c>  // b.none
    8c08:	bl	0 <free>
    8c0c:	ldr	x0, [sp, #96]
    8c10:	add	x23, x23, #0x10
    8c14:	cmp	x0, x23
    8c18:	b.eq	8c20 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x1a0>  // b.none
    8c1c:	bl	0 <free>
    8c20:	mov	x0, x22
    8c24:	ldp	x19, x20, [sp, #16]
    8c28:	ldp	x21, x22, [sp, #32]
    8c2c:	ldp	x23, x24, [sp, #48]
    8c30:	ldp	x25, x26, [sp, #64]
    8c34:	ldp	x27, x28, [sp, #80]
    8c38:	ldp	x29, x30, [sp], #192
    8c3c:	ret
    8c40:	mov	x1, x24
    8c44:	mov	x0, x23
    8c48:	mov	x3, #0x8                   	// #8
    8c4c:	mov	x2, #0x0                   	// #0
    8c50:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    8c54:	ldr	w1, [sp, #104]
    8c58:	b	8af8 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x78>
    8c5c:	mov	x1, x26
    8c60:	mov	x0, x25
    8c64:	mov	x3, #0x8                   	// #8
    8c68:	mov	x2, #0x0                   	// #0
    8c6c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    8c70:	ldr	w1, [sp, #152]
    8c74:	b	8b90 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x110>
    8c78:	add	x27, x1, #0x30
    8c7c:	add	x25, sp, #0x90
    8c80:	add	x27, x22, x27
    8c84:	add	x0, x25, #0x10
    8c88:	stp	x0, x2, [sp, #144]
    8c8c:	add	x24, x27, x1
    8c90:	cmp	x24, x27
    8c94:	b.eq	8bfc <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x17c>  // b.none
    8c98:	mov	w20, #0x0                   	// #0
    8c9c:	b	8b60 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0xe0>
    8ca0:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8ca4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8ca8:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8cac:	add	x3, x3, #0x0
    8cb0:	add	x1, x1, #0x0
    8cb4:	add	x0, x0, #0x0
    8cb8:	mov	w2, #0x43                  	// #67
    8cbc:	bl	0 <__assert_fail>

0000000000008cc0 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev>:
    8cc0:	stp	x29, x30, [sp, #-112]!
    8cc4:	mov	x29, sp
    8cc8:	ldr	w0, [x0, #24]
    8ccc:	stp	x19, x20, [sp, #16]
    8cd0:	mov	x19, x8
    8cd4:	add	x20, sp, #0x50
    8cd8:	str	x21, [sp, #32]
    8cdc:	cbnz	x0, 8dec <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x12c>
    8ce0:	add	x1, x20, #0x14
    8ce4:	mov	w0, #0x30                  	// #48
    8ce8:	strb	w0, [sp, #100]
    8cec:	add	x21, sp, #0x30
    8cf0:	add	x2, x20, #0x15
    8cf4:	add	x4, x21, #0x10
    8cf8:	mov	x0, x21
    8cfc:	mov	w3, #0x0                   	// #0
    8d00:	str	x4, [sp, #48]
    8d04:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8d08:	mov	x1, #0x0                   	// #0
    8d0c:	mov	x2, #0x0                   	// #0
    8d10:	mov	x0, x21
    8d14:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8d18:	mov	x4, #0x5                   	// #5
    8d1c:	add	x3, x3, #0x0
    8d20:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    8d24:	mov	x1, x0
    8d28:	add	x2, x20, #0x10
    8d2c:	str	x2, [sp, #80]
    8d30:	ldr	x2, [x1], #16
    8d34:	cmp	x2, x1
    8d38:	b.eq	8e20 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x160>  // b.none
    8d3c:	str	x2, [sp, #80]
    8d40:	ldr	x2, [x0, #16]
    8d44:	str	x2, [sp, #96]
    8d48:	ldr	x2, [x0, #8]
    8d4c:	str	x2, [sp, #88]
    8d50:	stp	x1, xzr, [x0]
    8d54:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
    8d58:	strb	wzr, [x0, #16]
    8d5c:	ldr	x0, [sp, #88]
    8d60:	cmp	x0, x2
    8d64:	b.eq	8e38 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x178>  // b.none
    8d68:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8d6c:	add	x1, x1, #0x0
    8d70:	mov	x2, #0x1                   	// #1
    8d74:	mov	x0, x20
    8d78:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    8d7c:	mov	x1, x0
    8d80:	add	x2, x19, #0x10
    8d84:	str	x2, [x19]
    8d88:	ldr	x2, [x1], #16
    8d8c:	cmp	x2, x1
    8d90:	b.eq	8e2c <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x16c>  // b.none
    8d94:	ldr	x3, [x0, #16]
    8d98:	str	x2, [x19]
    8d9c:	str	x3, [x19, #16]
    8da0:	ldr	x2, [x0, #8]
    8da4:	str	x2, [x19, #8]
    8da8:	stp	x1, xzr, [x0]
    8dac:	add	x20, x20, #0x10
    8db0:	strb	wzr, [x0, #16]
    8db4:	ldr	x0, [sp, #80]
    8db8:	cmp	x0, x20
    8dbc:	b.eq	8dc4 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x104>  // b.none
    8dc0:	bl	0 <_ZdlPv>
    8dc4:	ldr	x0, [sp, #48]
    8dc8:	add	x21, x21, #0x10
    8dcc:	cmp	x0, x21
    8dd0:	b.eq	8dd8 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x118>  // b.none
    8dd4:	bl	0 <_ZdlPv>
    8dd8:	mov	x0, x19
    8ddc:	ldp	x19, x20, [sp, #16]
    8de0:	ldr	x21, [sp, #32]
    8de4:	ldp	x29, x30, [sp], #112
    8de8:	ret
    8dec:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
    8df0:	add	x1, x20, #0x15
    8df4:	movk	x4, #0xcccd
    8df8:	umulh	x3, x0, x4
    8dfc:	cmp	x0, #0x9
    8e00:	lsr	x3, x3, #3
    8e04:	add	x2, x3, x3, lsl #2
    8e08:	sub	x2, x0, x2, lsl #1
    8e0c:	mov	x0, x3
    8e10:	add	w2, w2, #0x30
    8e14:	strb	w2, [x1, #-1]!
    8e18:	b.hi	8df8 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x138>  // b.pmore
    8e1c:	b	8cec <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x2c>
    8e20:	ldp	x2, x3, [x0, #16]
    8e24:	stp	x2, x3, [sp, #96]
    8e28:	b	8d48 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x88>
    8e2c:	ldp	x2, x3, [x0, #16]
    8e30:	stp	x2, x3, [x19, #16]
    8e34:	b	8da0 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0xe0>
    8e38:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8e3c:	add	x0, x0, #0x0
    8e40:	bl	0 <_ZSt20__throw_length_errorPKc>
    8e44:	nop

0000000000008e48 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev>:
    8e48:	stp	x29, x30, [sp, #-256]!
    8e4c:	mov	x29, sp
    8e50:	stp	x19, x20, [sp, #16]
    8e54:	mov	x19, x8
    8e58:	stp	x21, x22, [sp, #32]
    8e5c:	add	x21, sp, #0x40
    8e60:	add	x2, x21, #0x10
    8e64:	stp	x23, x24, [sp, #48]
    8e68:	mov	x24, x0
    8e6c:	ldrb	w1, [x0, #9]
    8e70:	stp	x2, xzr, [sp, #64]
    8e74:	cmp	w1, #0x3
    8e78:	strb	wzr, [sp, #80]
    8e7c:	b.eq	9224 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x3dc>  // b.none
    8e80:	b.hi	9190 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x348>  // b.pmore
    8e84:	cmp	w1, #0x1
    8e88:	b.eq	9240 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x3f8>  // b.none
    8e8c:	cmp	w1, #0x2
    8e90:	b.ne	9040 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x1f8>  // b.any
    8e94:	mov	x0, x21
    8e98:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8e9c:	add	x1, x1, #0x0
    8ea0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>
    8ea4:	ldp	x1, x2, [sp, #64]
    8ea8:	add	x2, x1, x2
    8eac:	nop
    8eb0:	add	x20, sp, #0xa0
    8eb4:	mov	w3, #0x0                   	// #0
    8eb8:	mov	x0, x20
    8ebc:	add	x22, x20, #0x10
    8ec0:	str	x22, [sp, #160]
    8ec4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8ec8:	ldr	x1, [sp, #168]
    8ecc:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    8ed0:	cmp	x1, x0
    8ed4:	b.eq	92c4 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x47c>  // b.none
    8ed8:	mov	x2, #0x1                   	// #1
    8edc:	mov	x0, x20
    8ee0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8ee4:	add	x1, x1, #0x0
    8ee8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    8eec:	add	x23, sp, #0xc0
    8ef0:	ldr	x0, [x24, #32]
    8ef4:	mov	x8, x23
    8ef8:	ldr	x1, [x0]
    8efc:	ldr	x1, [x1, #40]
    8f00:	blr	x1
    8f04:	ldp	x3, x4, [sp, #160]
    8f08:	mov	x6, #0xf                   	// #15
    8f0c:	ldp	x1, x2, [sp, #192]
    8f10:	ldr	x0, [sp, #176]
    8f14:	cmp	x3, x22
    8f18:	csel	x0, x0, x6, ne  // ne = any
    8f1c:	add	x5, x4, x2
    8f20:	cmp	x5, x0
    8f24:	b.ls	8f40 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0xf8>  // b.plast
    8f28:	ldr	x0, [sp, #208]
    8f2c:	add	x7, x23, #0x10
    8f30:	cmp	x1, x7
    8f34:	csel	x0, x0, x6, ne  // ne = any
    8f38:	cmp	x5, x0
    8f3c:	b.ls	91bc <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x374>  // b.plast
    8f40:	mov	x0, x20
    8f44:	add	x22, sp, #0xe0
    8f48:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    8f4c:	mov	x1, x0
    8f50:	add	x2, x22, #0x10
    8f54:	str	x2, [sp, #224]
    8f58:	ldr	x2, [x1], #16
    8f5c:	cmp	x2, x1
    8f60:	b.eq	91e8 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x3a0>  // b.none
    8f64:	str	x2, [sp, #224]
    8f68:	ldr	x2, [x0, #16]
    8f6c:	str	x2, [sp, #240]
    8f70:	ldr	x2, [x0, #8]
    8f74:	str	x2, [sp, #232]
    8f78:	stp	x1, xzr, [x0]
    8f7c:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
    8f80:	strb	wzr, [x0, #16]
    8f84:	ldr	x0, [sp, #232]
    8f88:	cmp	x0, x2
    8f8c:	b.eq	92c4 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x47c>  // b.none
    8f90:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8f94:	add	x1, x1, #0x0
    8f98:	mov	x2, #0x1                   	// #1
    8f9c:	mov	x0, x22
    8fa0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    8fa4:	mov	x1, x0
    8fa8:	add	x2, x19, #0x10
    8fac:	str	x2, [x19]
    8fb0:	ldr	x2, [x1], #16
    8fb4:	cmp	x2, x1
    8fb8:	b.eq	91fc <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x3b4>  // b.none
    8fbc:	ldr	x3, [x0, #16]
    8fc0:	str	x2, [x19]
    8fc4:	str	x3, [x19, #16]
    8fc8:	ldr	x2, [x0, #8]
    8fcc:	str	x2, [x19, #8]
    8fd0:	stp	x1, xzr, [x0]
    8fd4:	add	x22, x22, #0x10
    8fd8:	strb	wzr, [x0, #16]
    8fdc:	ldr	x0, [sp, #224]
    8fe0:	cmp	x0, x22
    8fe4:	b.eq	8fec <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x1a4>  // b.none
    8fe8:	bl	0 <_ZdlPv>
    8fec:	ldr	x0, [sp, #192]
    8ff0:	add	x23, x23, #0x10
    8ff4:	cmp	x0, x23
    8ff8:	b.eq	9000 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x1b8>  // b.none
    8ffc:	bl	0 <_ZdlPv>
    9000:	ldr	x0, [sp, #160]
    9004:	add	x20, x20, #0x10
    9008:	cmp	x0, x20
    900c:	b.eq	9014 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x1cc>  // b.none
    9010:	bl	0 <_ZdlPv>
    9014:	ldr	x0, [sp, #64]
    9018:	add	x21, x21, #0x10
    901c:	cmp	x0, x21
    9020:	b.eq	9028 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x1e0>  // b.none
    9024:	bl	0 <_ZdlPv>
    9028:	mov	x0, x19
    902c:	ldp	x19, x20, [sp, #16]
    9030:	ldp	x21, x22, [sp, #32]
    9034:	ldp	x23, x24, [sp, #48]
    9038:	ldp	x29, x30, [sp], #256
    903c:	ret
    9040:	cbnz	w1, 91f4 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x3ac>
    9044:	ldr	x0, [x0, #16]
    9048:	add	x20, sp, #0x60
    904c:	mov	x8, x20
    9050:	add	x23, sp, #0x80
    9054:	ldr	x1, [x0]
    9058:	ldr	x1, [x1, #16]
    905c:	blr	x1
    9060:	mov	x2, #0x0                   	// #0
    9064:	mov	x1, #0x0                   	// #0
    9068:	mov	x0, x20
    906c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9070:	mov	x4, #0x6                   	// #6
    9074:	add	x3, x3, #0x0
    9078:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    907c:	add	x1, x23, #0x10
    9080:	str	x1, [sp, #128]
    9084:	mov	x1, x0
    9088:	ldr	x2, [x1], #16
    908c:	cmp	x2, x1
    9090:	b.eq	925c <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x414>  // b.none
    9094:	ldr	x3, [x0, #16]
    9098:	str	x2, [sp, #128]
    909c:	str	x3, [sp, #144]
    90a0:	ldr	x2, [x0, #8]
    90a4:	str	x2, [sp, #136]
    90a8:	stp	x1, xzr, [x0]
    90ac:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
    90b0:	ldr	x1, [sp, #136]
    90b4:	strb	wzr, [x0, #16]
    90b8:	cmp	x1, x2
    90bc:	b.eq	92c4 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x47c>  // b.none
    90c0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    90c4:	add	x1, x1, #0x0
    90c8:	mov	x2, #0x1                   	// #1
    90cc:	mov	x0, x23
    90d0:	add	x22, sp, #0xe0
    90d4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    90d8:	mov	x1, x0
    90dc:	add	x2, x22, #0x10
    90e0:	str	x2, [sp, #224]
    90e4:	ldr	x2, [x1], #16
    90e8:	cmp	x2, x1
    90ec:	b.eq	9294 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x44c>  // b.none
    90f0:	str	x2, [sp, #224]
    90f4:	ldr	x2, [x0, #16]
    90f8:	str	x2, [sp, #240]
    90fc:	ldr	x2, [x0, #8]
    9100:	str	x2, [sp, #232]
    9104:	stp	x1, xzr, [x0]
    9108:	add	x2, x22, #0x10
    910c:	strb	wzr, [x0, #16]
    9110:	ldr	x0, [sp, #64]
    9114:	ldr	x1, [sp, #224]
    9118:	cmp	x1, x2
    911c:	b.eq	9268 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x420>  // b.none
    9120:	add	x2, x21, #0x10
    9124:	cmp	x0, x2
    9128:	ldp	x3, x2, [sp, #232]
    912c:	stp	x1, x3, [sp, #64]
    9130:	b.eq	92a0 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x458>  // b.none
    9134:	ldr	x1, [sp, #80]
    9138:	str	x2, [sp, #80]
    913c:	cbz	x0, 92a4 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x45c>
    9140:	str	x0, [sp, #224]
    9144:	str	x1, [sp, #240]
    9148:	str	xzr, [sp, #232]
    914c:	add	x22, x22, #0x10
    9150:	strb	wzr, [x0]
    9154:	ldr	x0, [sp, #224]
    9158:	cmp	x0, x22
    915c:	b.eq	9164 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x31c>  // b.none
    9160:	bl	0 <_ZdlPv>
    9164:	ldr	x0, [sp, #128]
    9168:	add	x23, x23, #0x10
    916c:	cmp	x0, x23
    9170:	b.eq	9178 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x330>  // b.none
    9174:	bl	0 <_ZdlPv>
    9178:	ldr	x0, [sp, #96]
    917c:	add	x20, x20, #0x10
    9180:	cmp	x0, x20
    9184:	b.eq	91b0 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x368>  // b.none
    9188:	bl	0 <_ZdlPv>
    918c:	b	91b0 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x368>
    9190:	cmp	w1, #0x4
    9194:	b.eq	9208 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x3c0>  // b.none
    9198:	cmp	w1, #0x5
    919c:	b.ne	91f4 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x3ac>  // b.any
    91a0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    91a4:	mov	x0, x21
    91a8:	add	x1, x1, #0x0
    91ac:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>
    91b0:	ldp	x1, x2, [sp, #64]
    91b4:	add	x2, x1, x2
    91b8:	b	8eb0 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x68>
    91bc:	mov	x1, #0x0                   	// #0
    91c0:	mov	x2, #0x0                   	// #0
    91c4:	mov	x0, x23
    91c8:	add	x22, sp, #0xe0
    91cc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    91d0:	mov	x1, x0
    91d4:	add	x2, x22, #0x10
    91d8:	str	x2, [sp, #224]
    91dc:	ldr	x2, [x1], #16
    91e0:	cmp	x2, x1
    91e4:	b.ne	8f64 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x11c>  // b.any
    91e8:	ldp	x2, x3, [x0, #16]
    91ec:	stp	x2, x3, [sp, #240]
    91f0:	b	8f70 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x128>
    91f4:	mov	x1, x2
    91f8:	b	8eb0 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x68>
    91fc:	ldp	x2, x3, [x0, #16]
    9200:	stp	x2, x3, [x19, #16]
    9204:	b	8fc8 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x180>
    9208:	mov	x0, x21
    920c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9210:	add	x1, x1, #0x0
    9214:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>
    9218:	ldp	x1, x2, [sp, #64]
    921c:	add	x2, x1, x2
    9220:	b	8eb0 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x68>
    9224:	mov	x0, x21
    9228:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    922c:	add	x1, x1, #0x0
    9230:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>
    9234:	ldp	x1, x2, [sp, #64]
    9238:	add	x2, x1, x2
    923c:	b	8eb0 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x68>
    9240:	mov	x0, x21
    9244:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9248:	add	x1, x1, #0x0
    924c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>
    9250:	ldp	x1, x2, [sp, #64]
    9254:	add	x2, x1, x2
    9258:	b	8eb0 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x68>
    925c:	ldp	x2, x3, [x0, #16]
    9260:	stp	x2, x3, [sp, #144]
    9264:	b	90a0 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x258>
    9268:	ldr	x2, [sp, #232]
    926c:	cbz	x2, 9284 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x43c>
    9270:	cmp	x2, #0x1
    9274:	b.eq	92b0 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x468>  // b.none
    9278:	bl	0 <memcpy>
    927c:	ldr	x0, [sp, #64]
    9280:	ldr	x2, [sp, #232]
    9284:	str	x2, [sp, #72]
    9288:	strb	wzr, [x0, x2]
    928c:	ldr	x0, [sp, #224]
    9290:	b	9148 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x300>
    9294:	ldp	x2, x3, [x0, #16]
    9298:	stp	x2, x3, [sp, #240]
    929c:	b	90fc <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x2b4>
    92a0:	str	x2, [sp, #80]
    92a4:	add	x0, x22, #0x10
    92a8:	str	x0, [sp, #224]
    92ac:	b	9148 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x300>
    92b0:	ldrb	w1, [sp, #240]
    92b4:	strb	w1, [x0]
    92b8:	ldr	x0, [sp, #64]
    92bc:	ldr	x2, [sp, #232]
    92c0:	b	9284 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x43c>
    92c4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    92c8:	add	x0, x0, #0x0
    92cc:	bl	0 <_ZSt20__throw_length_errorPKc>

00000000000092d0 <_ZNK4llvm7IntInit11getAsStringB5cxx11Ev>:
    92d0:	stp	x29, x30, [sp, #-64]!
    92d4:	mov	x29, sp
    92d8:	ldr	x3, [x0, #24]
    92dc:	str	x19, [sp, #16]
    92e0:	add	x2, sp, #0x28
    92e4:	mov	x19, x8
    92e8:	cmp	x3, #0x0
    92ec:	b.lt	9360 <_ZNK4llvm7IntInit11getAsStringB5cxx11Ev+0x90>  // b.tstop
    92f0:	b.ne	9328 <_ZNK4llvm7IntInit11getAsStringB5cxx11Ev+0x58>  // b.any
    92f4:	add	x1, x2, #0x14
    92f8:	mov	w0, #0x30                  	// #48
    92fc:	strb	w0, [sp, #60]
    9300:	add	x0, x19, #0x10
    9304:	str	x0, [x19]
    9308:	add	x2, x2, #0x15
    930c:	mov	x0, x19
    9310:	mov	w3, #0x0                   	// #0
    9314:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9318:	mov	x0, x19
    931c:	ldr	x19, [sp, #16]
    9320:	ldp	x29, x30, [sp], #64
    9324:	ret
    9328:	mov	x5, #0xcccccccccccccccc    	// #-3689348814741910324
    932c:	add	x1, x2, #0x15
    9330:	movk	x5, #0xcccd
    9334:	nop
    9338:	umulh	x4, x3, x5
    933c:	cmp	x3, #0x9
    9340:	lsr	x4, x4, #3
    9344:	add	x0, x4, x4, lsl #2
    9348:	sub	x0, x3, x0, lsl #1
    934c:	mov	x3, x4
    9350:	add	w0, w0, #0x30
    9354:	strb	w0, [x1, #-1]!
    9358:	b.hi	9338 <_ZNK4llvm7IntInit11getAsStringB5cxx11Ev+0x68>  // b.pmore
    935c:	b	9300 <_ZNK4llvm7IntInit11getAsStringB5cxx11Ev+0x30>
    9360:	mov	x6, #0xcccccccccccccccc    	// #-3689348814741910324
    9364:	neg	x3, x3
    9368:	add	x5, x2, #0x15
    936c:	movk	x6, #0xcccd
    9370:	umulh	x4, x3, x6
    9374:	mov	x1, x5
    9378:	cmp	x3, #0x9
    937c:	lsr	x4, x4, #3
    9380:	add	x0, x4, x4, lsl #2
    9384:	sub	x0, x3, x0, lsl #1
    9388:	mov	x3, x4
    938c:	add	w0, w0, #0x30
    9390:	strb	w0, [x5, #-1]!
    9394:	b.hi	9370 <_ZNK4llvm7IntInit11getAsStringB5cxx11Ev+0xa0>  // b.pmore
    9398:	add	x0, x19, #0x10
    939c:	mov	w4, #0x2d                  	// #45
    93a0:	sturb	w4, [x5, #-1]
    93a4:	add	x2, x2, #0x15
    93a8:	str	x0, [x19]
    93ac:	sub	x1, x1, #0x2
    93b0:	mov	x0, x19
    93b4:	mov	w3, #0x0                   	// #0
    93b8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    93bc:	mov	x0, x19
    93c0:	ldr	x19, [sp, #16]
    93c4:	ldp	x29, x30, [sp], #64
    93c8:	ret
    93cc:	nop

00000000000093d0 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev>:
    93d0:	stp	x29, x30, [sp, #-192]!
    93d4:	mov	x29, sp
    93d8:	stp	x19, x20, [sp, #16]
    93dc:	mov	x20, x0
    93e0:	mov	x19, x8
    93e4:	ldr	x0, [x0, #24]
    93e8:	stp	x21, x22, [sp, #32]
    93ec:	add	x21, sp, #0x40
    93f0:	stp	x23, x24, [sp, #48]
    93f4:	mov	x8, x21
    93f8:	ldr	x1, [x0]
    93fc:	ldr	x1, [x1, #40]
    9400:	blr	x1
    9404:	ldr	x1, [sp, #72]
    9408:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    940c:	cmp	x1, x0
    9410:	b.eq	9638 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x268>  // b.none
    9414:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9418:	add	x1, x1, #0x0
    941c:	mov	x2, #0x1                   	// #1
    9420:	mov	x0, x21
    9424:	add	x22, sp, #0x60
    9428:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    942c:	mov	x1, x0
    9430:	add	x2, x22, #0x10
    9434:	str	x2, [sp, #96]
    9438:	ldr	x2, [x1], #16
    943c:	cmp	x2, x1
    9440:	b.eq	960c <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x23c>  // b.none
    9444:	ldr	x3, [x0, #16]
    9448:	str	x2, [sp, #96]
    944c:	str	x3, [sp, #112]
    9450:	strb	wzr, [x0, #16]
    9454:	ldr	x2, [x0, #8]
    9458:	str	x2, [sp, #104]
    945c:	ldr	w3, [x20, #32]
    9460:	add	x20, sp, #0xa0
    9464:	stp	x1, xzr, [x0]
    9468:	cbnz	x3, 95cc <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x1fc>
    946c:	add	x1, x20, #0x14
    9470:	mov	w0, #0x30                  	// #48
    9474:	strb	w0, [sp, #180]
    9478:	add	x23, sp, #0x80
    947c:	add	x2, x20, #0x15
    9480:	mov	x0, x23
    9484:	mov	w3, #0x0                   	// #0
    9488:	add	x24, x23, #0x10
    948c:	str	x24, [sp, #128]
    9490:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9494:	ldp	x3, x4, [sp, #96]
    9498:	add	x0, x22, #0x10
    949c:	ldp	x1, x2, [sp, #128]
    94a0:	mov	x6, #0xf                   	// #15
    94a4:	cmp	x3, x0
    94a8:	ldr	x0, [sp, #112]
    94ac:	add	x5, x4, x2
    94b0:	csel	x0, x0, x6, ne  // ne = any
    94b4:	cmp	x5, x0
    94b8:	b.ls	94d0 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x100>  // b.plast
    94bc:	ldr	x0, [sp, #144]
    94c0:	cmp	x1, x24
    94c4:	csel	x0, x0, x6, ne  // ne = any
    94c8:	cmp	x5, x0
    94cc:	b.ls	9624 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x254>  // b.plast
    94d0:	mov	x0, x22
    94d4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    94d8:	mov	x1, x0
    94dc:	add	x2, x20, #0x10
    94e0:	str	x2, [sp, #160]
    94e4:	ldr	x2, [x1], #16
    94e8:	cmp	x2, x1
    94ec:	b.eq	9600 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x230>  // b.none
    94f0:	str	x2, [sp, #160]
    94f4:	ldr	x2, [x0, #16]
    94f8:	str	x2, [sp, #176]
    94fc:	ldr	x2, [x0, #8]
    9500:	str	x2, [sp, #168]
    9504:	stp	x1, xzr, [x0]
    9508:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
    950c:	strb	wzr, [x0, #16]
    9510:	ldr	x0, [sp, #168]
    9514:	cmp	x0, x2
    9518:	b.eq	9638 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x268>  // b.none
    951c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9520:	add	x1, x1, #0x0
    9524:	mov	x2, #0x1                   	// #1
    9528:	mov	x0, x20
    952c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    9530:	mov	x1, x0
    9534:	add	x2, x19, #0x10
    9538:	str	x2, [x19]
    953c:	ldr	x2, [x1], #16
    9540:	cmp	x2, x1
    9544:	b.eq	9618 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x248>  // b.none
    9548:	ldr	x3, [x0, #16]
    954c:	str	x2, [x19]
    9550:	str	x3, [x19, #16]
    9554:	ldr	x2, [x0, #8]
    9558:	str	x2, [x19, #8]
    955c:	stp	x1, xzr, [x0]
    9560:	add	x20, x20, #0x10
    9564:	strb	wzr, [x0, #16]
    9568:	ldr	x0, [sp, #160]
    956c:	cmp	x0, x20
    9570:	b.eq	9578 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x1a8>  // b.none
    9574:	bl	0 <_ZdlPv>
    9578:	ldr	x0, [sp, #128]
    957c:	add	x23, x23, #0x10
    9580:	cmp	x0, x23
    9584:	b.eq	958c <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x1bc>  // b.none
    9588:	bl	0 <_ZdlPv>
    958c:	ldr	x0, [sp, #96]
    9590:	add	x22, x22, #0x10
    9594:	cmp	x0, x22
    9598:	b.eq	95a0 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x1d0>  // b.none
    959c:	bl	0 <_ZdlPv>
    95a0:	ldr	x0, [sp, #64]
    95a4:	add	x21, x21, #0x10
    95a8:	cmp	x0, x21
    95ac:	b.eq	95b4 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x1e4>  // b.none
    95b0:	bl	0 <_ZdlPv>
    95b4:	mov	x0, x19
    95b8:	ldp	x19, x20, [sp, #16]
    95bc:	ldp	x21, x22, [sp, #32]
    95c0:	ldp	x23, x24, [sp, #48]
    95c4:	ldp	x29, x30, [sp], #192
    95c8:	ret
    95cc:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
    95d0:	add	x1, x20, #0x15
    95d4:	movk	x4, #0xcccd
    95d8:	umulh	x2, x3, x4
    95dc:	cmp	x3, #0x9
    95e0:	lsr	x2, x2, #3
    95e4:	add	x0, x2, x2, lsl #2
    95e8:	sub	x0, x3, x0, lsl #1
    95ec:	mov	x3, x2
    95f0:	add	w0, w0, #0x30
    95f4:	strb	w0, [x1, #-1]!
    95f8:	b.hi	95d8 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x208>  // b.pmore
    95fc:	b	9478 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0xa8>
    9600:	ldp	x2, x3, [x0, #16]
    9604:	stp	x2, x3, [sp, #176]
    9608:	b	94fc <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x12c>
    960c:	ldp	x2, x3, [x0, #16]
    9610:	stp	x2, x3, [sp, #112]
    9614:	b	9450 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x80>
    9618:	ldp	x2, x3, [x0, #16]
    961c:	stp	x2, x3, [x19, #16]
    9620:	b	9554 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x184>
    9624:	mov	x0, x23
    9628:	mov	x2, #0x0                   	// #0
    962c:	mov	x1, #0x0                   	// #0
    9630:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    9634:	b	94d8 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x108>
    9638:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    963c:	add	x0, x0, #0x0
    9640:	bl	0 <_ZSt20__throw_length_errorPKc>
    9644:	nop

0000000000009648 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev>:
    9648:	stp	x29, x30, [sp, #-432]!
    964c:	mov	x29, sp
    9650:	stp	x19, x20, [sp, #16]
    9654:	add	x1, sp, #0x70
    9658:	add	x2, sp, #0x80
    965c:	stp	x21, x22, [sp, #32]
    9660:	mov	x21, x0
    9664:	mov	x19, x8
    9668:	stp	x23, x24, [sp, #48]
    966c:	stp	x25, x26, [sp, #64]
    9670:	stp	x27, x28, [sp, #80]
    9674:	ldrb	w0, [x0, #9]
    9678:	stp	x1, x2, [sp, #104]
    967c:	cmp	w0, #0x2
    9680:	str	xzr, [sp, #120]
    9684:	strb	wzr, [sp, #128]
    9688:	b.eq	9a5c <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x414>  // b.none
    968c:	b.hi	9704 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0xbc>  // b.pmore
    9690:	cbz	w0, 9a48 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x400>
    9694:	ldr	x0, [sp, #104]
    9698:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    969c:	add	x1, x1, #0x0
    96a0:	add	x20, sp, #0x90
    96a4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>
    96a8:	ldp	x1, x2, [sp, #112]
    96ac:	add	x4, x20, #0x10
    96b0:	mov	x0, x20
    96b4:	mov	w3, #0x0                   	// #0
    96b8:	str	x4, [sp, #144]
    96bc:	add	x2, x1, x2
    96c0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    96c4:	ldr	x1, [sp, #152]
    96c8:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    96cc:	cmp	x1, x0
    96d0:	b.eq	9a3c <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x3f4>  // b.none
    96d4:	mov	x0, x20
    96d8:	mov	x2, #0x1                   	// #1
    96dc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    96e0:	add	x1, x1, #0x0
    96e4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    96e8:	add	x22, sp, #0xb0
    96ec:	ldr	x0, [x21, #32]
    96f0:	mov	x8, x22
    96f4:	ldr	x1, [x0]
    96f8:	ldr	x1, [x1, #48]
    96fc:	blr	x1
    9700:	b	9778 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x130>
    9704:	cmp	w0, #0x3
    9708:	b.ne	9a10 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x3c8>  // b.any
    970c:	ldr	x0, [sp, #104]
    9710:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9714:	add	x1, x1, #0x0
    9718:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>
    971c:	ldp	x1, x2, [sp, #112]
    9720:	add	x20, sp, #0x90
    9724:	add	x4, x20, #0x10
    9728:	mov	x0, x20
    972c:	mov	w3, #0x0                   	// #0
    9730:	str	x4, [sp, #144]
    9734:	add	x2, x1, x2
    9738:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    973c:	ldr	x1, [sp, #152]
    9740:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    9744:	cmp	x1, x0
    9748:	b.eq	9a3c <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x3f4>  // b.none
    974c:	mov	x0, x20
    9750:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9754:	mov	x2, #0x1                   	// #1
    9758:	add	x1, x1, #0x0
    975c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    9760:	add	x22, sp, #0xb0
    9764:	ldr	x0, [x21, #32]
    9768:	mov	x8, x22
    976c:	ldr	x1, [x0]
    9770:	ldr	x1, [x1, #40]
    9774:	blr	x1
    9778:	add	x23, sp, #0xd0
    977c:	mov	x1, x22
    9780:	mov	x0, x20
    9784:	mov	x8, x23
    9788:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    978c:	ldr	x1, [sp, #216]
    9790:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    9794:	sub	x0, x0, x1
    9798:	cmp	x0, #0x1
    979c:	b.ls	9a3c <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x3f4>  // b.plast
    97a0:	mov	x2, #0x2                   	// #2
    97a4:	mov	x0, x23
    97a8:	add	x24, sp, #0xf0
    97ac:	adrp	x27, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    97b0:	add	x1, x27, #0x0
    97b4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    97b8:	mov	x2, x0
    97bc:	mov	x1, x0
    97c0:	add	x0, x24, #0x10
    97c4:	str	x0, [sp, #240]
    97c8:	ldr	x0, [x2], #16
    97cc:	cmp	x0, x2
    97d0:	b.eq	99ec <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x3a4>  // b.none
    97d4:	ldr	x3, [x1, #16]
    97d8:	str	x0, [sp, #240]
    97dc:	str	x3, [sp, #256]
    97e0:	strb	wzr, [x1, #16]
    97e4:	add	x25, sp, #0x110
    97e8:	ldr	x0, [x1, #8]
    97ec:	str	x0, [sp, #248]
    97f0:	ldr	x0, [x21, #40]
    97f4:	stp	x2, xzr, [x1]
    97f8:	mov	x8, x25
    97fc:	add	x26, sp, #0x130
    9800:	ldr	x1, [x0]
    9804:	ldr	x1, [x1, #40]
    9808:	blr	x1
    980c:	mov	x1, x25
    9810:	mov	x0, x24
    9814:	mov	x8, x26
    9818:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    981c:	ldr	x1, [sp, #312]
    9820:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    9824:	sub	x0, x0, x1
    9828:	cmp	x0, #0x1
    982c:	b.ls	9a3c <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x3f4>  // b.plast
    9830:	add	x1, x27, #0x0
    9834:	mov	x2, #0x2                   	// #2
    9838:	mov	x0, x26
    983c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    9840:	mov	x1, x0
    9844:	add	x27, sp, #0x150
    9848:	mov	x2, x1
    984c:	add	x0, x27, #0x10
    9850:	str	x0, [sp, #336]
    9854:	ldr	x0, [x2], #16
    9858:	cmp	x0, x2
    985c:	b.eq	99f8 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x3b0>  // b.none
    9860:	ldr	x3, [x1, #16]
    9864:	str	x0, [sp, #336]
    9868:	str	x3, [sp, #352]
    986c:	strb	wzr, [x1, #16]
    9870:	add	x28, sp, #0x170
    9874:	ldr	x0, [x1, #8]
    9878:	str	x0, [sp, #344]
    987c:	ldr	x0, [x21, #48]
    9880:	stp	x2, xzr, [x1]
    9884:	mov	x8, x28
    9888:	add	x21, sp, #0x190
    988c:	ldr	x1, [x0]
    9890:	ldr	x1, [x1, #40]
    9894:	blr	x1
    9898:	mov	x1, x28
    989c:	mov	x0, x27
    98a0:	mov	x8, x21
    98a4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    98a8:	ldr	x1, [sp, #408]
    98ac:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    98b0:	cmp	x1, x0
    98b4:	b.eq	9a3c <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x3f4>  // b.none
    98b8:	mov	x2, #0x1                   	// #1
    98bc:	mov	x0, x21
    98c0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    98c4:	add	x1, x1, #0x0
    98c8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    98cc:	mov	x1, x0
    98d0:	add	x2, x19, #0x10
    98d4:	str	x2, [x19]
    98d8:	ldr	x2, [x0], #16
    98dc:	cmp	x2, x0
    98e0:	b.eq	9a04 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x3bc>  // b.none
    98e4:	ldr	x3, [x1, #16]
    98e8:	str	x2, [x19]
    98ec:	str	x3, [x19, #16]
    98f0:	str	x0, [x1]
    98f4:	add	x21, x21, #0x10
    98f8:	ldr	x0, [x1, #8]
    98fc:	str	x0, [x19, #8]
    9900:	ldr	x0, [sp, #400]
    9904:	str	xzr, [x1, #8]
    9908:	strb	wzr, [x1, #16]
    990c:	cmp	x0, x21
    9910:	b.eq	9918 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x2d0>  // b.none
    9914:	bl	0 <_ZdlPv>
    9918:	ldr	x0, [sp, #368]
    991c:	add	x28, x28, #0x10
    9920:	cmp	x0, x28
    9924:	b.eq	992c <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x2e4>  // b.none
    9928:	bl	0 <_ZdlPv>
    992c:	ldr	x0, [sp, #336]
    9930:	add	x27, x27, #0x10
    9934:	cmp	x0, x27
    9938:	b.eq	9940 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x2f8>  // b.none
    993c:	bl	0 <_ZdlPv>
    9940:	ldr	x0, [sp, #304]
    9944:	add	x26, x26, #0x10
    9948:	cmp	x0, x26
    994c:	b.eq	9954 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x30c>  // b.none
    9950:	bl	0 <_ZdlPv>
    9954:	ldr	x0, [sp, #272]
    9958:	add	x25, x25, #0x10
    995c:	cmp	x0, x25
    9960:	b.eq	9968 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x320>  // b.none
    9964:	bl	0 <_ZdlPv>
    9968:	ldr	x0, [sp, #240]
    996c:	add	x24, x24, #0x10
    9970:	cmp	x0, x24
    9974:	b.eq	997c <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x334>  // b.none
    9978:	bl	0 <_ZdlPv>
    997c:	ldr	x0, [sp, #208]
    9980:	add	x23, x23, #0x10
    9984:	cmp	x0, x23
    9988:	b.eq	9990 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x348>  // b.none
    998c:	bl	0 <_ZdlPv>
    9990:	ldr	x0, [sp, #176]
    9994:	add	x22, x22, #0x10
    9998:	cmp	x0, x22
    999c:	b.eq	99a4 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x35c>  // b.none
    99a0:	bl	0 <_ZdlPv>
    99a4:	ldr	x0, [sp, #144]
    99a8:	add	x20, x20, #0x10
    99ac:	cmp	x0, x20
    99b0:	b.eq	99b8 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x370>  // b.none
    99b4:	bl	0 <_ZdlPv>
    99b8:	ldp	x1, x0, [sp, #104]
    99bc:	add	x1, x1, #0x10
    99c0:	cmp	x0, x1
    99c4:	b.eq	99cc <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x384>  // b.none
    99c8:	bl	0 <_ZdlPv>
    99cc:	mov	x0, x19
    99d0:	ldp	x19, x20, [sp, #16]
    99d4:	ldp	x21, x22, [sp, #32]
    99d8:	ldp	x23, x24, [sp, #48]
    99dc:	ldp	x25, x26, [sp, #64]
    99e0:	ldp	x27, x28, [sp, #80]
    99e4:	ldp	x29, x30, [sp], #432
    99e8:	ret
    99ec:	ldp	x4, x5, [x1, #16]
    99f0:	stp	x4, x5, [sp, #256]
    99f4:	b	97e0 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x198>
    99f8:	ldp	x4, x5, [x1, #16]
    99fc:	stp	x4, x5, [sp, #352]
    9a00:	b	986c <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x224>
    9a04:	ldp	x2, x3, [x1, #16]
    9a08:	stp	x2, x3, [x19, #16]
    9a0c:	b	98f0 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x2a8>
    9a10:	add	x20, sp, #0x90
    9a14:	mov	x1, x2
    9a18:	add	x4, x20, #0x10
    9a1c:	mov	x0, x20
    9a20:	mov	w3, #0x0                   	// #0
    9a24:	str	x4, [sp, #144]
    9a28:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9a2c:	ldr	x1, [sp, #152]
    9a30:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    9a34:	cmp	x1, x0
    9a38:	b.ne	974c <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x104>  // b.any
    9a3c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9a40:	add	x0, x0, #0x0
    9a44:	bl	0 <_ZSt20__throw_length_errorPKc>
    9a48:	ldr	x0, [sp, #104]
    9a4c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9a50:	add	x1, x1, #0x0
    9a54:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>
    9a58:	b	971c <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0xd4>
    9a5c:	ldr	x0, [sp, #104]
    9a60:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9a64:	add	x1, x1, #0x0
    9a68:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>
    9a6c:	b	971c <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0xd4>

0000000000009a70 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev>:
    9a70:	stp	x29, x30, [sp, #-304]!
    9a74:	mov	x29, sp
    9a78:	stp	x25, x26, [sp, #64]
    9a7c:	mov	x26, x0
    9a80:	stp	x19, x20, [sp, #16]
    9a84:	mov	x19, x8
    9a88:	stp	x21, x22, [sp, #32]
    9a8c:	stp	x23, x24, [sp, #48]
    9a90:	add	x23, sp, #0x50
    9a94:	add	x0, x23, #0x10
    9a98:	ldrb	w1, [x26, #9]
    9a9c:	stp	x0, xzr, [sp, #80]
    9aa0:	cmp	w1, #0x11
    9aa4:	strb	wzr, [sp, #96]
    9aa8:	b.ls	9cb0 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x240>  // b.plast
    9aac:	mov	x2, x0
    9ab0:	mov	x1, x0
    9ab4:	nop
    9ab8:	add	x20, sp, #0x70
    9abc:	mov	w3, #0x0                   	// #0
    9ac0:	add	x4, x20, #0x10
    9ac4:	mov	x0, x20
    9ac8:	str	x4, [sp, #112]
    9acc:	mov	x24, #0x3fffffffffffffff    	// #4611686018427387903
    9ad0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9ad4:	ldr	x0, [sp, #120]
    9ad8:	cmp	x0, x24
    9adc:	b.eq	9ed8 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x468>  // b.none
    9ae0:	mov	x2, #0x1                   	// #1
    9ae4:	mov	x0, x20
    9ae8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9aec:	add	x1, x1, #0x0
    9af0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    9af4:	add	x21, sp, #0x90
    9af8:	ldr	x0, [x26, #32]
    9afc:	mov	x8, x21
    9b00:	add	x22, sp, #0xb0
    9b04:	ldr	x1, [x0]
    9b08:	ldr	x1, [x1, #40]
    9b0c:	blr	x1
    9b10:	mov	x0, x20
    9b14:	mov	x1, x21
    9b18:	mov	x8, x22
    9b1c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9b20:	ldr	x0, [sp, #184]
    9b24:	sub	x24, x24, x0
    9b28:	cmp	x24, #0x1
    9b2c:	b.ls	9ed8 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x468>  // b.plast
    9b30:	mov	x2, #0x2                   	// #2
    9b34:	mov	x0, x22
    9b38:	add	x24, sp, #0xd0
    9b3c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9b40:	add	x1, x1, #0x0
    9b44:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    9b48:	mov	x2, x0
    9b4c:	mov	x1, x0
    9b50:	add	x0, x24, #0x10
    9b54:	str	x0, [sp, #208]
    9b58:	ldr	x0, [x2], #16
    9b5c:	cmp	x0, x2
    9b60:	b.eq	9cc8 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x258>  // b.none
    9b64:	ldr	x3, [x1, #16]
    9b68:	str	x0, [sp, #208]
    9b6c:	str	x3, [sp, #224]
    9b70:	strb	wzr, [x1, #16]
    9b74:	add	x25, sp, #0xf0
    9b78:	ldr	x0, [x1, #8]
    9b7c:	str	x0, [sp, #216]
    9b80:	ldr	x0, [x26, #40]
    9b84:	stp	x2, xzr, [x1]
    9b88:	mov	x8, x25
    9b8c:	add	x26, sp, #0x110
    9b90:	ldr	x1, [x0]
    9b94:	ldr	x1, [x1, #40]
    9b98:	blr	x1
    9b9c:	mov	x1, x25
    9ba0:	mov	x0, x24
    9ba4:	mov	x8, x26
    9ba8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9bac:	ldr	x1, [sp, #280]
    9bb0:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    9bb4:	cmp	x1, x0
    9bb8:	b.eq	9ed8 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x468>  // b.none
    9bbc:	mov	x2, #0x1                   	// #1
    9bc0:	mov	x0, x26
    9bc4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9bc8:	add	x1, x1, #0x0
    9bcc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    9bd0:	mov	x1, x0
    9bd4:	add	x2, x19, #0x10
    9bd8:	str	x2, [x19]
    9bdc:	ldr	x2, [x0], #16
    9be0:	cmp	x2, x0
    9be4:	b.eq	9cd4 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x264>  // b.none
    9be8:	ldr	x3, [x1, #16]
    9bec:	str	x2, [x19]
    9bf0:	str	x3, [x19, #16]
    9bf4:	str	x0, [x1]
    9bf8:	add	x26, x26, #0x10
    9bfc:	ldr	x0, [x1, #8]
    9c00:	str	x0, [x19, #8]
    9c04:	ldr	x0, [sp, #272]
    9c08:	str	xzr, [x1, #8]
    9c0c:	strb	wzr, [x1, #16]
    9c10:	cmp	x0, x26
    9c14:	b.eq	9c1c <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x1ac>  // b.none
    9c18:	bl	0 <_ZdlPv>
    9c1c:	ldr	x0, [sp, #240]
    9c20:	add	x25, x25, #0x10
    9c24:	cmp	x0, x25
    9c28:	b.eq	9c30 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x1c0>  // b.none
    9c2c:	bl	0 <_ZdlPv>
    9c30:	ldr	x0, [sp, #208]
    9c34:	add	x24, x24, #0x10
    9c38:	cmp	x0, x24
    9c3c:	b.eq	9c44 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x1d4>  // b.none
    9c40:	bl	0 <_ZdlPv>
    9c44:	ldr	x0, [sp, #176]
    9c48:	add	x22, x22, #0x10
    9c4c:	cmp	x0, x22
    9c50:	b.eq	9c58 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x1e8>  // b.none
    9c54:	bl	0 <_ZdlPv>
    9c58:	ldr	x0, [sp, #144]
    9c5c:	add	x21, x21, #0x10
    9c60:	cmp	x0, x21
    9c64:	b.eq	9c6c <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x1fc>  // b.none
    9c68:	bl	0 <_ZdlPv>
    9c6c:	ldr	x0, [sp, #112]
    9c70:	add	x20, x20, #0x10
    9c74:	cmp	x0, x20
    9c78:	b.eq	9c80 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x210>  // b.none
    9c7c:	bl	0 <_ZdlPv>
    9c80:	ldr	x0, [sp, #80]
    9c84:	add	x23, x23, #0x10
    9c88:	cmp	x0, x23
    9c8c:	b.eq	9c94 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x224>  // b.none
    9c90:	bl	0 <_ZdlPv>
    9c94:	mov	x0, x19
    9c98:	ldp	x19, x20, [sp, #16]
    9c9c:	ldp	x21, x22, [sp, #32]
    9ca0:	ldp	x23, x24, [sp, #48]
    9ca4:	ldp	x25, x26, [sp, #64]
    9ca8:	ldp	x29, x30, [sp], #304
    9cac:	ret
    9cb0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9cb4:	add	x0, x0, #0x0
    9cb8:	ldrh	w0, [x0, w1, uxtw #1]
    9cbc:	adr	x1, 9cc8 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x258>
    9cc0:	add	x0, x1, w0, sxth #2
    9cc4:	br	x0
    9cc8:	ldp	x4, x5, [x1, #16]
    9ccc:	stp	x4, x5, [sp, #224]
    9cd0:	b	9b70 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x100>
    9cd4:	ldp	x2, x3, [x1, #16]
    9cd8:	stp	x2, x3, [x19, #16]
    9cdc:	b	9bf4 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x184>
    9ce0:	mov	x0, x23
    9ce4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9ce8:	add	x1, x1, #0x0
    9cec:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>
    9cf0:	ldp	x1, x0, [sp, #80]
    9cf4:	add	x2, x1, x0
    9cf8:	b	9ab8 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x48>
    9cfc:	mov	x0, x23
    9d00:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9d04:	add	x1, x1, #0x0
    9d08:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>
    9d0c:	ldp	x1, x0, [sp, #80]
    9d10:	add	x2, x1, x0
    9d14:	b	9ab8 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x48>
    9d18:	mov	x0, x23
    9d1c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9d20:	add	x1, x1, #0x0
    9d24:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>
    9d28:	ldp	x1, x0, [sp, #80]
    9d2c:	add	x2, x1, x0
    9d30:	b	9ab8 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x48>
    9d34:	mov	x0, x23
    9d38:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9d3c:	add	x1, x1, #0x0
    9d40:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>
    9d44:	ldp	x1, x0, [sp, #80]
    9d48:	add	x2, x1, x0
    9d4c:	b	9ab8 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x48>
    9d50:	mov	x0, x23
    9d54:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9d58:	add	x1, x1, #0x0
    9d5c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>
    9d60:	ldp	x1, x0, [sp, #80]
    9d64:	add	x2, x1, x0
    9d68:	b	9ab8 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x48>
    9d6c:	mov	x0, x23
    9d70:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9d74:	add	x1, x1, #0x0
    9d78:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>
    9d7c:	ldp	x1, x0, [sp, #80]
    9d80:	add	x2, x1, x0
    9d84:	b	9ab8 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x48>
    9d88:	mov	x0, x23
    9d8c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9d90:	add	x1, x1, #0x0
    9d94:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>
    9d98:	ldp	x1, x0, [sp, #80]
    9d9c:	add	x2, x1, x0
    9da0:	b	9ab8 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x48>
    9da4:	mov	x0, x23
    9da8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9dac:	add	x1, x1, #0x0
    9db0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>
    9db4:	ldp	x1, x0, [sp, #80]
    9db8:	add	x2, x1, x0
    9dbc:	b	9ab8 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x48>
    9dc0:	mov	x0, x23
    9dc4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9dc8:	add	x1, x1, #0x0
    9dcc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>
    9dd0:	ldp	x1, x0, [sp, #80]
    9dd4:	add	x2, x1, x0
    9dd8:	b	9ab8 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x48>
    9ddc:	mov	x0, x23
    9de0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9de4:	add	x1, x1, #0x0
    9de8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>
    9dec:	ldp	x1, x0, [sp, #80]
    9df0:	add	x2, x1, x0
    9df4:	b	9ab8 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x48>
    9df8:	mov	x0, x23
    9dfc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9e00:	add	x1, x1, #0x0
    9e04:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>
    9e08:	ldp	x1, x0, [sp, #80]
    9e0c:	add	x2, x1, x0
    9e10:	b	9ab8 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x48>
    9e14:	mov	x0, x23
    9e18:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9e1c:	add	x1, x1, #0x0
    9e20:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>
    9e24:	ldp	x1, x0, [sp, #80]
    9e28:	add	x2, x1, x0
    9e2c:	b	9ab8 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x48>
    9e30:	mov	x0, x23
    9e34:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9e38:	add	x1, x1, #0x0
    9e3c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>
    9e40:	ldp	x1, x0, [sp, #80]
    9e44:	add	x2, x1, x0
    9e48:	b	9ab8 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x48>
    9e4c:	mov	x0, x23
    9e50:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9e54:	add	x1, x1, #0x0
    9e58:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>
    9e5c:	ldp	x1, x0, [sp, #80]
    9e60:	add	x2, x1, x0
    9e64:	b	9ab8 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x48>
    9e68:	mov	x0, x23
    9e6c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9e70:	add	x1, x1, #0x0
    9e74:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>
    9e78:	ldp	x1, x0, [sp, #80]
    9e7c:	add	x2, x1, x0
    9e80:	b	9ab8 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x48>
    9e84:	mov	x0, x23
    9e88:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9e8c:	add	x1, x1, #0x0
    9e90:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>
    9e94:	ldp	x1, x0, [sp, #80]
    9e98:	add	x2, x1, x0
    9e9c:	b	9ab8 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x48>
    9ea0:	mov	x0, x23
    9ea4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9ea8:	add	x1, x1, #0x0
    9eac:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>
    9eb0:	ldp	x1, x0, [sp, #80]
    9eb4:	add	x2, x1, x0
    9eb8:	b	9ab8 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x48>
    9ebc:	mov	x0, x23
    9ec0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9ec4:	add	x1, x1, #0x0
    9ec8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>
    9ecc:	ldp	x1, x0, [sp, #80]
    9ed0:	add	x2, x1, x0
    9ed4:	b	9ab8 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x48>
    9ed8:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9edc:	add	x0, x0, #0x0
    9ee0:	bl	0 <_ZSt20__throw_length_errorPKc>
    9ee4:	nop

0000000000009ee8 <_ZN4llvm7IntInit3getEl>:
    9ee8:	stp	x29, x30, [sp, #-64]!
    9eec:	mov	x29, sp
    9ef0:	stp	x19, x20, [sp, #16]
    9ef4:	mov	x20, x0
    9ef8:	stp	x21, x22, [sp, #32]
    9efc:	adrp	x21, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9f00:	add	x19, x21, #0x0
    9f04:	add	x22, x19, #0x290
    9f08:	ldarb	w0, [x22]
    9f0c:	tbz	w0, #0, a034 <_ZN4llvm7IntInit3getEl+0x14c>
    9f10:	add	x19, x21, #0x0
    9f14:	add	x19, x19, #0x268
    9f18:	ldr	x1, [x19, #8]
    9f1c:	cbz	x1, 9f6c <_ZN4llvm7IntInit3getEl+0x84>
    9f20:	ldr	x0, [x1, #32]
    9f24:	cmp	x0, x20
    9f28:	b.lt	a028 <_ZN4llvm7IntInit3getEl+0x140>  // b.tstop
    9f2c:	mov	x19, x1
    9f30:	ldr	x1, [x1, #16]
    9f34:	cbnz	x1, 9f20 <_ZN4llvm7IntInit3getEl+0x38>
    9f38:	add	x0, x21, #0x0
    9f3c:	add	x0, x0, #0x268
    9f40:	cmp	x19, x0
    9f44:	b.eq	9f6c <_ZN4llvm7IntInit3getEl+0x84>  // b.none
    9f48:	ldr	x0, [x19, #32]
    9f4c:	cmp	x0, x20
    9f50:	b.gt	9f6c <_ZN4llvm7IntInit3getEl+0x84>
    9f54:	ldr	x0, [x19, #40]
    9f58:	cbz	x0, 9fdc <_ZN4llvm7IntInit3getEl+0xf4>
    9f5c:	ldp	x19, x20, [sp, #16]
    9f60:	ldp	x21, x22, [sp, #32]
    9f64:	ldp	x29, x30, [sp], #64
    9f68:	ret
    9f6c:	mov	x0, #0x30                  	// #48
    9f70:	bl	0 <_Znwm>
    9f74:	mov	x1, x19
    9f78:	mov	x19, x0
    9f7c:	add	x2, x0, #0x20
    9f80:	add	x22, x21, #0x0
    9f84:	add	x0, x22, #0x260
    9f88:	stp	x20, xzr, [x19, #32]
    9f8c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9f90:	mov	x3, x0
    9f94:	mov	x2, x1
    9f98:	cbz	x1, a080 <_ZN4llvm7IntInit3getEl+0x198>
    9f9c:	add	x22, x22, #0x268
    9fa0:	cmp	x1, x22
    9fa4:	cset	w0, eq  // eq = none
    9fa8:	cmp	x3, #0x0
    9fac:	csinc	w0, w0, wzr, eq  // eq = none
    9fb0:	cbz	w0, a090 <_ZN4llvm7IntInit3getEl+0x1a8>
    9fb4:	add	x3, x21, #0x0
    9fb8:	mov	x1, x19
    9fbc:	add	x22, x3, #0x260
    9fc0:	add	x3, x3, #0x268
    9fc4:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
    9fc8:	ldr	x0, [x22, #40]
    9fcc:	add	x0, x0, #0x1
    9fd0:	str	x0, [x22, #40]
    9fd4:	ldr	x0, [x19, #40]
    9fd8:	cbnz	x0, 9f5c <_ZN4llvm7IntInit3getEl+0x74>
    9fdc:	add	x0, x21, #0x0
    9fe0:	mov	w2, #0x4                   	// #4
    9fe4:	mov	x1, #0x20                  	// #32
    9fe8:	add	x0, x0, #0x88
    9fec:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9ff0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9ff4:	adrp	x2, 3e0 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE+0x50>
    9ff8:	mov	w3, #0x8                   	// #8
    9ffc:	strh	w3, [x0, #8]
    a000:	ldr	x1, [x1]
    a004:	ldr	x2, [x2]
    a008:	add	x1, x1, #0x10
    a00c:	str	x1, [x0]
    a010:	stp	x2, x20, [x0, #16]
    a014:	str	x0, [x19, #40]
    a018:	ldp	x19, x20, [sp, #16]
    a01c:	ldp	x21, x22, [sp, #32]
    a020:	ldp	x29, x30, [sp], #64
    a024:	ret
    a028:	ldr	x1, [x1, #24]
    a02c:	cbnz	x1, 9f20 <_ZN4llvm7IntInit3getEl+0x38>
    a030:	b	9f38 <_ZN4llvm7IntInit3getEl+0x50>
    a034:	mov	x0, x22
    a038:	bl	0 <__cxa_guard_acquire>
    a03c:	cbz	w0, 9f10 <_ZN4llvm7IntInit3getEl+0x28>
    a040:	str	x23, [sp, #48]
    a044:	add	x23, x19, #0x260
    a048:	add	x19, x19, #0x268
    a04c:	mov	x0, x22
    a050:	str	wzr, [x23, #8]
    a054:	stp	xzr, x19, [x23, #16]
    a058:	stp	x19, xzr, [x23, #32]
    a05c:	bl	0 <__cxa_guard_release>
    a060:	mov	x1, x23
    a064:	adrp	x2, 0 <__dso_handle>
    a068:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a06c:	add	x2, x2, #0x0
    a070:	add	x0, x0, #0x0
    a074:	bl	0 <__cxa_atexit>
    a078:	ldr	x23, [sp, #48]
    a07c:	b	9f10 <_ZN4llvm7IntInit3getEl+0x28>
    a080:	mov	x0, x19
    a084:	mov	x19, x3
    a088:	bl	0 <_ZdlPv>
    a08c:	b	9f54 <_ZN4llvm7IntInit3getEl+0x6c>
    a090:	ldr	x0, [x1, #32]
    a094:	ldr	x1, [x19, #32]
    a098:	cmp	x1, x0
    a09c:	cset	w0, lt  // lt = tstop
    a0a0:	b	9fb4 <_ZN4llvm7IntInit3getEl+0xcc>
    a0a4:	nop

000000000000a0a8 <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE>:
    a0a8:	stp	x29, x30, [sp, #-16]!
    a0ac:	mov	x29, sp
    a0b0:	cbz	x1, a16c <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE+0xc4>
    a0b4:	mov	x2, x0
    a0b8:	ldr	w0, [x1, #8]
    a0bc:	cbnz	w0, a0dc <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE+0x34>
    a0c0:	ldr	w1, [x2, #32]
    a0c4:	mov	x0, #0x0                   	// #0
    a0c8:	cmp	w1, #0x1
    a0cc:	b.ne	a0d4 <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE+0x2c>  // b.any
    a0d0:	ldr	x0, [x2, #40]
    a0d4:	ldp	x29, x30, [sp], #16
    a0d8:	ret
    a0dc:	cmp	w0, #0x1
    a0e0:	b.eq	a148 <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE+0xa0>  // b.none
    a0e4:	cmp	w0, #0x3
    a0e8:	b.ne	a13c <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE+0x94>  // b.any
    a0ec:	ldr	w6, [x2, #32]
    a0f0:	cbz	w6, a160 <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE+0xb8>
    a0f4:	add	x2, x2, #0x28
    a0f8:	sub	w7, w6, #0x1
    a0fc:	mov	x1, #0x0                   	// #0
    a100:	mov	x0, #0x0                   	// #0
    a104:	b	a128 <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE+0x80>
    a108:	ldrb	w3, [x3, #24]
    a10c:	cmp	x7, x1
    a110:	lsl	x3, x3, x1
    a114:	orr	x0, x0, x3
    a118:	b.eq	a164 <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE+0xbc>  // b.none
    a11c:	add	x1, x1, #0x1
    a120:	cmp	w6, w1
    a124:	b.ls	a190 <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE+0xe8>  // b.plast
    a128:	ldr	x3, [x2, x1, lsl #3]
    a12c:	cbz	x3, a170 <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE+0xc8>
    a130:	ldrb	w4, [x3, #8]
    a134:	cmp	w4, #0x2
    a138:	b.eq	a108 <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE+0x60>  // b.none
    a13c:	mov	x0, #0x0                   	// #0
    a140:	ldp	x29, x30, [sp], #16
    a144:	ret
    a148:	ldr	w0, [x2, #32]
    a14c:	ldr	w1, [x1, #24]
    a150:	ldp	x29, x30, [sp], #16
    a154:	cmp	w1, w0
    a158:	csel	x0, x2, xzr, eq  // eq = none
    a15c:	ret
    a160:	mov	x0, #0x0                   	// #0
    a164:	ldp	x29, x30, [sp], #16
    a168:	b	9ee8 <_ZN4llvm7IntInit3getEl>
    a16c:	bl	898 <_ZN4llvm3isaINS_8BitRecTyEPNS_5RecTyEEEbRKT0_.isra.0.part.0>
    a170:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a174:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a178:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a17c:	add	x3, x3, #0x0
    a180:	add	x1, x1, #0x0
    a184:	add	x0, x0, #0x0
    a188:	mov	w2, #0x69                  	// #105
    a18c:	bl	0 <__assert_fail>
    a190:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a194:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a198:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a19c:	add	x3, x3, #0x0
    a1a0:	add	x1, x1, #0x0
    a1a4:	add	x0, x0, #0x0
    a1a8:	mov	w2, #0x22e                 	// #558
    a1ac:	bl	0 <__assert_fail>

000000000000a1b0 <_ZNK4llvm9IsAOpInit4FoldEv>:
    a1b0:	stp	x29, x30, [sp, #-32]!
    a1b4:	mov	x29, sp
    a1b8:	stp	x19, x20, [sp, #16]
    a1bc:	ldr	x20, [x0, #40]
    a1c0:	cbz	x20, a268 <_ZNK4llvm9IsAOpInit4FoldEv+0xb8>
    a1c4:	ldrb	w1, [x20, #8]
    a1c8:	mov	x19, x0
    a1cc:	sub	w1, w1, #0x1
    a1d0:	and	w1, w1, #0xff
    a1d4:	cmp	w1, #0x16
    a1d8:	b.ls	a1ec <_ZNK4llvm9IsAOpInit4FoldEv+0x3c>  // b.plast
    a1dc:	mov	x0, x19
    a1e0:	ldp	x19, x20, [sp, #16]
    a1e4:	ldp	x29, x30, [sp], #32
    a1e8:	ret
    a1ec:	ldr	x1, [x0, #32]
    a1f0:	ldr	x0, [x20, #16]
    a1f4:	ldr	x2, [x0]
    a1f8:	ldr	x2, [x2, #24]
    a1fc:	blr	x2
    a200:	tst	w0, #0xff
    a204:	b.ne	a258 <_ZNK4llvm9IsAOpInit4FoldEv+0xa8>  // b.any
    a208:	ldr	x0, [x19, #32]
    a20c:	cbz	x0, a288 <_ZNK4llvm9IsAOpInit4FoldEv+0xd8>
    a210:	ldr	w1, [x0, #8]
    a214:	cmp	w1, #0x7
    a218:	b.ne	a248 <_ZNK4llvm9IsAOpInit4FoldEv+0x98>  // b.any
    a21c:	ldr	x2, [x0]
    a220:	ldr	x1, [x20, #16]
    a224:	ldr	x2, [x2, #24]
    a228:	blr	x2
    a22c:	tst	w0, #0xff
    a230:	b.eq	a248 <_ZNK4llvm9IsAOpInit4FoldEv+0x98>  // b.none
    a234:	ldr	x0, [x19, #40]
    a238:	cbz	x0, a28c <_ZNK4llvm9IsAOpInit4FoldEv+0xdc>
    a23c:	ldrb	w0, [x0, #8]
    a240:	cmp	w0, #0x6
    a244:	b.ne	a1dc <_ZNK4llvm9IsAOpInit4FoldEv+0x2c>  // b.any
    a248:	ldp	x19, x20, [sp, #16]
    a24c:	mov	x0, #0x0                   	// #0
    a250:	ldp	x29, x30, [sp], #32
    a254:	b	9ee8 <_ZN4llvm7IntInit3getEl>
    a258:	ldp	x19, x20, [sp, #16]
    a25c:	mov	x0, #0x1                   	// #1
    a260:	ldp	x29, x30, [sp], #32
    a264:	b	9ee8 <_ZN4llvm7IntInit3getEl>
    a268:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a26c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a270:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a274:	add	x3, x3, #0x0
    a278:	add	x1, x1, #0x0
    a27c:	add	x0, x0, #0x0
    a280:	mov	w2, #0x69                  	// #105
    a284:	bl	0 <__assert_fail>
    a288:	bl	8e8 <_ZN4llvm13isa_impl_wrapINS_11RecordRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>
    a28c:	bl	938 <_ZN4llvm3isaINS_7DefInitEPNS_4InitEEEbRKT0_.isra.0.part.0>

000000000000a290 <_ZNK4llvm9IsAOpInit17resolveReferencesERNS_8ResolverE>:
    a290:	stp	x29, x30, [sp, #-32]!
    a294:	mov	x29, sp
    a298:	str	x19, [sp, #16]
    a29c:	mov	x19, x0
    a2a0:	ldr	x0, [x0, #40]
    a2a4:	ldr	x2, [x0]
    a2a8:	ldr	x2, [x2, #96]
    a2ac:	blr	x2
    a2b0:	ldr	x2, [x19, #40]
    a2b4:	cmp	x2, x0
    a2b8:	b.eq	a2d4 <_ZNK4llvm9IsAOpInit17resolveReferencesERNS_8ResolverE+0x44>  // b.none
    a2bc:	mov	x1, x0
    a2c0:	ldr	x0, [x19, #32]
    a2c4:	bl	6ba8 <_ZN4llvm9IsAOpInit3getEPNS_5RecTyEPNS_4InitE>
    a2c8:	ldr	x19, [sp, #16]
    a2cc:	ldp	x29, x30, [sp], #32
    a2d0:	b	a1b0 <_ZNK4llvm9IsAOpInit4FoldEv>
    a2d4:	mov	x0, x19
    a2d8:	ldr	x19, [sp, #16]
    a2dc:	ldp	x29, x30, [sp], #32
    a2e0:	ret
    a2e4:	nop

000000000000a2e8 <_ZNK4llvm7BitInit20convertInitializerToEPNS_5RecTyE>:
    a2e8:	stp	x29, x30, [sp, #-32]!
    a2ec:	mov	x29, sp
    a2f0:	cbz	x1, a35c <_ZNK4llvm7BitInit20convertInitializerToEPNS_5RecTyE+0x74>
    a2f4:	mov	x2, x0
    a2f8:	ldr	w0, [x1, #8]
    a2fc:	cbz	w0, a350 <_ZNK4llvm7BitInit20convertInitializerToEPNS_5RecTyE+0x68>
    a300:	cmp	w0, #0x3
    a304:	b.eq	a31c <_ZNK4llvm7BitInit20convertInitializerToEPNS_5RecTyE+0x34>  // b.none
    a308:	cmp	w0, #0x1
    a30c:	mov	x0, #0x0                   	// #0
    a310:	b.eq	a32c <_ZNK4llvm7BitInit20convertInitializerToEPNS_5RecTyE+0x44>  // b.none
    a314:	ldp	x29, x30, [sp], #32
    a318:	ret
    a31c:	ldrb	w0, [x2, #24]
    a320:	bl	9ee8 <_ZN4llvm7IntInit3getEl>
    a324:	ldp	x29, x30, [sp], #32
    a328:	ret
    a32c:	ldr	w1, [x1, #24]
    a330:	cmp	w1, #0x1
    a334:	b.ne	a314 <_ZNK4llvm7BitInit20convertInitializerToEPNS_5RecTyE+0x2c>  // b.any
    a338:	add	x0, sp, #0x18
    a33c:	mov	x1, #0x1                   	// #1
    a340:	str	x2, [sp, #24]
    a344:	bl	58f8 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
    a348:	ldp	x29, x30, [sp], #32
    a34c:	ret
    a350:	mov	x0, x2
    a354:	ldp	x29, x30, [sp], #32
    a358:	ret
    a35c:	bl	898 <_ZN4llvm3isaINS_8BitRecTyEPNS_5RecTyEEEbRKT0_.isra.0.part.0>

000000000000a360 <_ZN4llvm10StringInit3getENS_9StringRefE>:
    a360:	stp	x29, x30, [sp, #-96]!
    a364:	mov	x29, sp
    a368:	stp	x21, x22, [sp, #32]
    a36c:	adrp	x22, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a370:	add	x21, x22, #0x0
    a374:	stp	x19, x20, [sp, #16]
    a378:	mov	x19, x1
    a37c:	add	x20, x21, #0x298
    a380:	stp	x23, x24, [sp, #48]
    a384:	mov	x23, x0
    a388:	stp	x25, x26, [sp, #64]
    a38c:	ldarb	w0, [x20]
    a390:	tbz	w0, #0, a4ec <_ZN4llvm10StringInit3getENS_9StringRefE+0x18c>
    a394:	add	x21, x22, #0x0
    a398:	mov	x1, x23
    a39c:	add	x25, x21, #0x2a0
    a3a0:	mov	x2, x19
    a3a4:	mov	x0, x25
    a3a8:	bl	0 <_ZN4llvm13StringMapImpl15LookupBucketForENS_9StringRefE>
    a3ac:	ldr	x24, [x21, #672]
    a3b0:	mov	w26, w0
    a3b4:	mov	x20, x26
    a3b8:	ldr	x0, [x24, x26, lsl #3]
    a3bc:	add	x1, x24, w26, uxtw #3
    a3c0:	cbz	x0, a454 <_ZN4llvm10StringInit3getENS_9StringRefE+0xf4>
    a3c4:	cmn	x0, #0x8
    a3c8:	b.eq	a448 <_ZN4llvm10StringInit3getENS_9StringRefE+0xe8>  // b.none
    a3cc:	add	x0, sp, #0x58
    a3d0:	mov	w2, #0x0                   	// #0
    a3d4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a3d8:	ldr	x0, [sp, #88]
    a3dc:	ldr	x19, [x0]
    a3e0:	ldr	x0, [x19, #8]
    a3e4:	cbnz	x0, a4d4 <_ZN4llvm10StringInit3getENS_9StringRefE+0x174>
    a3e8:	mov	x20, x19
    a3ec:	add	x0, x22, #0x0
    a3f0:	mov	w2, #0x4                   	// #4
    a3f4:	mov	x1, #0x28                  	// #40
    a3f8:	add	x0, x0, #0x88
    a3fc:	ldr	x21, [x20], #16
    a400:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a404:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a408:	adrp	x2, 3c8 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE+0x38>
    a40c:	mov	w3, #0x12                  	// #18
    a410:	strh	w3, [x0, #8]
    a414:	ldr	x1, [x1]
    a418:	str	x21, [x0, #32]
    a41c:	ldr	x2, [x2]
    a420:	add	x1, x1, #0x10
    a424:	str	x1, [x0]
    a428:	stp	x2, x20, [x0, #16]
    a42c:	str	x0, [x19, #8]
    a430:	ldp	x19, x20, [sp, #16]
    a434:	ldp	x21, x22, [sp, #32]
    a438:	ldp	x23, x24, [sp, #48]
    a43c:	ldp	x25, x26, [sp, #64]
    a440:	ldp	x29, x30, [sp], #96
    a444:	ret
    a448:	ldr	w0, [x25, #16]
    a44c:	sub	w0, w0, #0x1
    a450:	str	w0, [x25, #16]
    a454:	add	x0, x22, #0x0
    a458:	add	x1, x19, #0x11
    a45c:	mov	w2, #0x3                   	// #3
    a460:	ldr	x0, [x0, #696]
    a464:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a468:	stp	x19, xzr, [x0]
    a46c:	mov	x21, x0
    a470:	add	x3, x0, #0x10
    a474:	cbnz	x19, a534 <_ZN4llvm10StringInit3getENS_9StringRefE+0x1d4>
    a478:	add	x23, x22, #0x0
    a47c:	strb	wzr, [x3, x19]
    a480:	add	x0, x23, #0x2a0
    a484:	str	x21, [x24, x26, lsl #3]
    a488:	ldr	w3, [x0, #16]
    a48c:	ldp	w2, w1, [x0, #8]
    a490:	add	w1, w1, #0x1
    a494:	str	w1, [x0, #12]
    a498:	add	w1, w1, w3
    a49c:	cmp	w1, w2
    a4a0:	b.hi	a54c <_ZN4llvm10StringInit3getENS_9StringRefE+0x1ec>  // b.pmore
    a4a4:	mov	w1, w20
    a4a8:	bl	0 <_ZN4llvm13StringMapImpl11RehashTableEj>
    a4ac:	ldr	x1, [x23, #672]
    a4b0:	mov	w3, w0
    a4b4:	mov	w2, #0x0                   	// #0
    a4b8:	add	x0, sp, #0x58
    a4bc:	add	x1, x1, w3, uxtw #3
    a4c0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a4c4:	ldr	x0, [sp, #88]
    a4c8:	ldr	x19, [x0]
    a4cc:	ldr	x0, [x19, #8]
    a4d0:	cbz	x0, a3e8 <_ZN4llvm10StringInit3getENS_9StringRefE+0x88>
    a4d4:	ldp	x19, x20, [sp, #16]
    a4d8:	ldp	x21, x22, [sp, #32]
    a4dc:	ldp	x23, x24, [sp, #48]
    a4e0:	ldp	x25, x26, [sp, #64]
    a4e4:	ldp	x29, x30, [sp], #96
    a4e8:	ret
    a4ec:	mov	x0, x20
    a4f0:	bl	0 <__cxa_guard_acquire>
    a4f4:	cbz	w0, a394 <_ZN4llvm10StringInit3getENS_9StringRefE+0x34>
    a4f8:	add	x3, x21, #0x2a0
    a4fc:	add	x1, x21, #0x88
    a500:	mov	x2, #0x1000000000          	// #68719476736
    a504:	mov	x0, x20
    a508:	add	x24, x21, #0x2a0
    a50c:	stp	xzr, xzr, [x3]
    a510:	stp	x2, x1, [x3, #16]
    a514:	bl	0 <__cxa_guard_release>
    a518:	mov	x1, x24
    a51c:	adrp	x2, 0 <__dso_handle>
    a520:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a524:	add	x2, x2, #0x0
    a528:	add	x0, x0, #0x0
    a52c:	bl	0 <__cxa_atexit>
    a530:	b	a394 <_ZN4llvm10StringInit3getENS_9StringRefE+0x34>
    a534:	mov	x0, x3
    a538:	mov	x1, x23
    a53c:	mov	x2, x19
    a540:	bl	0 <memcpy>
    a544:	mov	x3, x0
    a548:	b	a478 <_ZN4llvm10StringInit3getENS_9StringRefE+0x118>
    a54c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a550:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a554:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a558:	add	x3, x3, #0x0
    a55c:	add	x1, x1, #0x0
    a560:	add	x0, x0, #0x0
    a564:	mov	w2, #0x1bb                 	// #443
    a568:	bl	0 <__assert_fail>
    a56c:	nop

000000000000a570 <_ZNK4llvm8CodeInit20convertInitializerToEPNS_5RecTyE>:
    a570:	cbz	x1, a5a4 <_ZNK4llvm8CodeInit20convertInitializerToEPNS_5RecTyE+0x34>
    a574:	mov	x2, x0
    a578:	ldr	w0, [x1, #8]
    a57c:	cmp	w0, #0x2
    a580:	b.eq	a59c <_ZNK4llvm8CodeInit20convertInitializerToEPNS_5RecTyE+0x2c>  // b.none
    a584:	cmp	w0, #0x4
    a588:	mov	x0, #0x0                   	// #0
    a58c:	b.eq	a594 <_ZNK4llvm8CodeInit20convertInitializerToEPNS_5RecTyE+0x24>  // b.none
    a590:	ret
    a594:	ldp	x0, x1, [x2, #24]
    a598:	b	a360 <_ZN4llvm10StringInit3getENS_9StringRefE>
    a59c:	mov	x0, x2
    a5a0:	ret
    a5a4:	stp	x29, x30, [sp, #-16]!
    a5a8:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a5ac:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a5b0:	mov	x29, sp
    a5b4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a5b8:	add	x3, x3, #0x0
    a5bc:	add	x1, x1, #0x0
    a5c0:	add	x0, x0, #0x0
    a5c4:	mov	w2, #0x69                  	// #105
    a5c8:	bl	0 <__assert_fail>
    a5cc:	nop

000000000000a5d0 <_ZL17ConcatStringInitsPKN4llvm10StringInitES2_>:
    a5d0:	stp	x29, x30, [sp, #-144]!
    a5d4:	mov	x3, #0x5000000000          	// #343597383680
    a5d8:	mov	x29, sp
    a5dc:	stp	x19, x20, [sp, #16]
    a5e0:	ldp	x19, x20, [x0, #24]
    a5e4:	stp	x21, x22, [sp, #32]
    a5e8:	add	x21, sp, #0x30
    a5ec:	add	x2, x21, #0x10
    a5f0:	stp	x2, x3, [sp, #48]
    a5f4:	mov	x22, x1
    a5f8:	cmp	x20, #0x50
    a5fc:	b.hi	a6d0 <_ZL17ConcatStringInitsPKN4llvm10StringInitES2_+0x100>  // b.pmore
    a600:	mov	x1, #0x50                  	// #80
    a604:	cbnz	x20, a690 <_ZL17ConcatStringInitsPKN4llvm10StringInitES2_+0xc0>
    a608:	ldr	x19, [x22, #32]
    a60c:	str	w20, [sp, #56]
    a610:	sub	x1, x1, x20
    a614:	mov	w0, w20
    a618:	cmp	x19, x1
    a61c:	ldr	x22, [x22, #24]
    a620:	b.hi	a6f4 <_ZL17ConcatStringInitsPKN4llvm10StringInitES2_+0x124>  // b.pmore
    a624:	mov	w0, w0
    a628:	cbz	x19, a644 <_ZL17ConcatStringInitsPKN4llvm10StringInitES2_+0x74>
    a62c:	ldr	x3, [sp, #48]
    a630:	mov	x1, x22
    a634:	mov	x2, x19
    a638:	add	x0, x3, x0
    a63c:	bl	0 <memcpy>
    a640:	ldr	w0, [sp, #56]
    a644:	ldr	w2, [sp, #60]
    a648:	add	x1, x19, x0
    a64c:	cmp	x1, x2
    a650:	b.hi	a6b0 <_ZL17ConcatStringInitsPKN4llvm10StringInitES2_+0xe0>  // b.pmore
    a654:	ldr	x0, [sp, #48]
    a658:	str	w1, [sp, #56]
    a65c:	add	x21, x21, #0x10
    a660:	bl	a360 <_ZN4llvm10StringInit3getENS_9StringRefE>
    a664:	mov	x19, x0
    a668:	ldr	x1, [sp, #48]
    a66c:	cmp	x1, x21
    a670:	b.eq	a67c <_ZL17ConcatStringInitsPKN4llvm10StringInitES2_+0xac>  // b.none
    a674:	mov	x0, x1
    a678:	bl	0 <free>
    a67c:	mov	x0, x19
    a680:	ldp	x19, x20, [sp, #16]
    a684:	ldp	x21, x22, [sp, #32]
    a688:	ldp	x29, x30, [sp], #144
    a68c:	ret
    a690:	mov	x0, x2
    a694:	mov	x1, x19
    a698:	mov	x2, x20
    a69c:	bl	0 <memcpy>
    a6a0:	ldp	w0, w1, [sp, #56]
    a6a4:	add	x20, x20, x0
    a6a8:	cmp	x20, x1
    a6ac:	b.ls	a608 <_ZL17ConcatStringInitsPKN4llvm10StringInitES2_+0x38>  // b.plast
    a6b0:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a6b4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a6b8:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a6bc:	add	x3, x3, #0x0
    a6c0:	add	x1, x1, #0x0
    a6c4:	add	x0, x0, #0x0
    a6c8:	mov	w2, #0x43                  	// #67
    a6cc:	bl	0 <__assert_fail>
    a6d0:	mov	x1, x2
    a6d4:	mov	x0, x21
    a6d8:	mov	x2, x20
    a6dc:	mov	x3, #0x1                   	// #1
    a6e0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    a6e4:	ldr	x0, [sp, #48]
    a6e8:	ldr	w2, [sp, #56]
    a6ec:	add	x0, x0, x2
    a6f0:	b	a694 <_ZL17ConcatStringInitsPKN4llvm10StringInitES2_+0xc4>
    a6f4:	mov	x0, x21
    a6f8:	add	x2, x19, x20
    a6fc:	add	x1, x21, #0x10
    a700:	mov	x3, #0x1                   	// #1
    a704:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    a708:	ldr	w0, [sp, #56]
    a70c:	b	a624 <_ZL17ConcatStringInitsPKN4llvm10StringInitES2_+0x54>

000000000000a710 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>:
    a710:	cbz	x0, a750 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_+0x40>
    a714:	ldrb	w3, [x0, #8]
    a718:	mov	x4, x0
    a71c:	mov	x2, x1
    a720:	cmp	w3, #0x12
    a724:	b.eq	a73c <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_+0x2c>  // b.none
    a728:	adrp	x3, 3c8 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE+0x38>
    a72c:	mov	x1, x4
    a730:	mov	w0, #0x9                   	// #9
    a734:	ldr	x3, [x3]
    a738:	b	6cf0 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE>
    a73c:	cbz	x1, a750 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_+0x40>
    a740:	ldrb	w3, [x1, #8]
    a744:	cmp	w3, #0x12
    a748:	b.ne	a728 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_+0x18>  // b.any
    a74c:	b	a5d0 <_ZL17ConcatStringInitsPKN4llvm10StringInitES2_>
    a750:	stp	x29, x30, [sp, #-16]!
    a754:	mov	x29, sp
    a758:	bl	910 <_ZN4llvm3isaINS_10StringInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    a75c:	nop

000000000000a760 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE>:
    a760:	sub	sp, sp, #0x290
    a764:	stp	x29, x30, [sp]
    a768:	mov	x29, sp
    a76c:	stp	x19, x20, [sp, #16]
    a770:	mov	x19, x0
    a774:	ldrb	w0, [x0, #9]
    a778:	cmp	w0, #0x9
    a77c:	b.eq	aa14 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x2b4>  // b.none
    a780:	b.hi	a7cc <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x6c>  // b.pmore
    a784:	cmp	w0, #0x7
    a788:	b.eq	a9f4 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x294>  // b.none
    a78c:	cmp	w0, #0x8
    a790:	b.ne	a804 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xa4>  // b.any
    a794:	ldr	x20, [x19, #32]
    a798:	cbz	x20, ab58 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x3f8>
    a79c:	ldrb	w0, [x20, #8]
    a7a0:	sub	w0, w0, #0x1
    a7a4:	and	w0, w0, #0xff
    a7a8:	cmp	w0, #0x16
    a7ac:	ldr	x0, [x19, #40]
    a7b0:	b.ls	b018 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x8b8>  // b.plast
    a7b4:	cbz	x0, b2ec <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xb8c>
    a7b8:	mov	x0, x19
    a7bc:	ldp	x29, x30, [sp]
    a7c0:	ldp	x19, x20, [sp, #16]
    a7c4:	add	sp, sp, #0x290
    a7c8:	ret
    a7cc:	cmp	w0, #0x10
    a7d0:	b.hi	a884 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x124>  // b.pmore
    a7d4:	cmp	w0, #0xa
    a7d8:	b.ne	a8c4 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x164>  // b.any
    a7dc:	ldr	x20, [x19, #32]
    a7e0:	cbz	x20, a7f8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x98>
    a7e4:	ldrb	w0, [x20, #8]
    a7e8:	cmp	w0, #0x5
    a7ec:	b.eq	adb8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x658>  // b.none
    a7f0:	ldr	x0, [x19, #40]
    a7f4:	cbnz	x0, a7b8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x58>
    a7f8:	stp	x23, x24, [sp, #48]
    a7fc:	stp	x27, x28, [sp, #80]
    a800:	b	ab4c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x3ec>
    a804:	cmp	w0, #0x7
    a808:	b.eq	a7b8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x58>  // b.none
    a80c:	ldr	x0, [x19, #32]
    a810:	stp	x21, x22, [sp, #32]
    a814:	adrp	x21, 3e0 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE+0x50>
    a818:	ldr	x2, [x0]
    a81c:	ldr	x1, [x21]
    a820:	ldr	x2, [x2, #64]
    a824:	blr	x2
    a828:	mov	x20, x0
    a82c:	cbz	x0, a848 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xe8>
    a830:	ldrb	w1, [x0, #8]
    a834:	mov	x20, #0x0                   	// #0
    a838:	cmp	w1, #0x8
    a83c:	b.ne	a848 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xe8>  // b.any
    a840:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a844:	mov	x20, x0
    a848:	ldr	x0, [x19, #40]
    a84c:	ldr	x1, [x21]
    a850:	ldr	x2, [x0]
    a854:	ldr	x2, [x2, #64]
    a858:	blr	x2
    a85c:	cbz	x0, a86c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x10c>
    a860:	ldrb	w1, [x0, #8]
    a864:	cmp	w1, #0x8
    a868:	b.eq	a990 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x230>  // b.none
    a86c:	mov	x0, x19
    a870:	ldp	x29, x30, [sp]
    a874:	ldp	x19, x20, [sp, #16]
    a878:	ldp	x21, x22, [sp, #32]
    a87c:	add	sp, sp, #0x290
    a880:	ret
    a884:	cmp	w0, #0x11
    a888:	b.ne	a7b8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x58>  // b.any
    a88c:	stp	x27, x28, [sp, #80]
    a890:	ldr	x28, [x19, #32]
    a894:	cbz	x28, ab48 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x3e8>
    a898:	ldrb	w0, [x28, #8]
    a89c:	cmp	w0, #0x5
    a8a0:	b.eq	ab88 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x428>  // b.none
    a8a4:	ldr	x0, [x19, #40]
    a8a8:	cbz	x0, b2d0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xb70>
    a8ac:	ldp	x27, x28, [sp, #80]
    a8b0:	mov	x0, x19
    a8b4:	ldp	x29, x30, [sp]
    a8b8:	ldp	x19, x20, [sp, #16]
    a8bc:	add	sp, sp, #0x290
    a8c0:	ret
    a8c4:	ldr	x0, [x19, #32]
    a8c8:	stp	x21, x22, [sp, #32]
    a8cc:	adrp	x21, 3e0 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE+0x50>
    a8d0:	ldr	x2, [x0]
    a8d4:	ldr	x1, [x21]
    a8d8:	ldr	x2, [x2, #64]
    a8dc:	blr	x2
    a8e0:	mov	x20, x0
    a8e4:	cbz	x0, a8f8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x198>
    a8e8:	ldrb	w1, [x0, #8]
    a8ec:	mov	x20, #0x0                   	// #0
    a8f0:	cmp	w1, #0x8
    a8f4:	b.eq	ab04 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x3a4>  // b.none
    a8f8:	ldr	x0, [x19, #40]
    a8fc:	ldr	x1, [x21]
    a900:	ldr	x2, [x0]
    a904:	ldr	x2, [x2, #64]
    a908:	blr	x2
    a90c:	cbz	x0, b0dc <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x97c>
    a910:	ldrb	w1, [x0, #8]
    a914:	ldrb	w21, [x19, #9]
    a918:	cmp	w1, #0x8
    a91c:	b.eq	aa48 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x2e8>  // b.none
    a920:	sub	w0, w21, #0xb
    a924:	and	w0, w0, #0xff
    a928:	cmp	w0, #0x1
    a92c:	b.hi	a86c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x10c>  // b.pmore
    a930:	ldr	x0, [x19, #32]
    a934:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a938:	mov	x20, x0
    a93c:	ldr	x0, [x19, #40]
    a940:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a944:	cmp	x20, #0x0
    a948:	cset	w1, ne  // ne = any
    a94c:	cmp	x0, #0x0
    a950:	csel	w1, w1, wzr, ne  // ne = any
    a954:	cbz	w1, a86c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x10c>
    a958:	ldr	x3, [x0, #32]
    a95c:	ldr	x2, [x20, #32]
    a960:	cmp	x2, x3
    a964:	b.eq	b158 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x9f8>  // b.none
    a968:	mov	w1, #0x0                   	// #0
    a96c:	eor	w0, w1, #0x1
    a970:	cmp	w21, #0xb
    a974:	and	w0, w0, #0xff
    a978:	csel	w0, w0, w1, ne  // ne = any
    a97c:	nop
    a980:	bl	2550 <_ZN4llvm7BitInit3getEb>
    a984:	mov	x19, x0
    a988:	ldp	x21, x22, [sp, #32]
    a98c:	b	a7b8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x58>
    a990:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a994:	cmp	x20, #0x0
    a998:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    a99c:	b.eq	a86c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x10c>  // b.none
    a9a0:	ldrb	w1, [x19, #9]
    a9a4:	ldr	x2, [x0, #24]
    a9a8:	cmp	w1, #0x3
    a9ac:	ldr	x3, [x20, #24]
    a9b0:	b.eq	b140 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x9e0>  // b.none
    a9b4:	b.hi	a9dc <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x27c>  // b.pmore
    a9b8:	cmp	w1, #0x1
    a9bc:	b.eq	ab38 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x3d8>  // b.none
    a9c0:	cmp	w1, #0x2
    a9c4:	and	x0, x3, x2
    a9c8:	b.ne	aad8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x378>  // b.any
    a9cc:	bl	9ee8 <_ZN4llvm7IntInit3getEl>
    a9d0:	mov	x19, x0
    a9d4:	ldp	x21, x22, [sp, #32]
    a9d8:	b	a7b8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x58>
    a9dc:	cmp	w1, #0x5
    a9e0:	b.eq	ab40 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x3e0>  // b.none
    a9e4:	cmp	w1, #0x6
    a9e8:	b.ne	aac8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x368>  // b.any
    a9ec:	lsr	x0, x3, x2
    a9f0:	b	a9cc <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x26c>
    a9f4:	ldr	x20, [x19, #32]
    a9f8:	cbz	x20, b1e8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xa88>
    a9fc:	ldrb	w1, [x20, #8]
    aa00:	ldr	x0, [x19, #40]
    aa04:	cmp	w1, #0x9
    aa08:	b.eq	ad04 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x5a4>  // b.none
    aa0c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    aa10:	b	a7b8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x58>
    aa14:	ldr	x0, [x19, #32]
    aa18:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    aa1c:	mov	x20, x0
    aa20:	ldr	x0, [x19, #40]
    aa24:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    aa28:	cmp	x20, #0x0
    aa2c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    aa30:	b.eq	a7b8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x58>  // b.none
    aa34:	mov	x1, x0
    aa38:	mov	x0, x20
    aa3c:	bl	a5d0 <_ZL17ConcatStringInitsPKN4llvm10StringInitES2_>
    aa40:	mov	x19, x0
    aa44:	b	a7b8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x58>
    aa48:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    aa4c:	cmp	x20, #0x0
    aa50:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    aa54:	b.eq	a920 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x1c0>  // b.none
    aa58:	cmp	w21, #0xe
    aa5c:	b.eq	b12c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x9cc>  // b.none
    aa60:	b.hi	aa88 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x328>  // b.pmore
    aa64:	cmp	w21, #0xc
    aa68:	b.eq	ab24 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x3c4>  // b.none
    aa6c:	cmp	w21, #0xd
    aa70:	b.ne	aaac <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x34c>  // b.any
    aa74:	ldr	x0, [x0, #24]
    aa78:	ldr	x1, [x20, #24]
    aa7c:	cmp	x1, x0
    aa80:	cset	w0, le
    aa84:	b	a980 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x220>
    aa88:	cmp	w21, #0xf
    aa8c:	b.eq	ab10 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x3b0>  // b.none
    aa90:	cmp	w21, #0x10
    aa94:	b.ne	b300 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xba0>  // b.any
    aa98:	ldr	x0, [x0, #24]
    aa9c:	ldr	x1, [x20, #24]
    aaa0:	cmp	x1, x0
    aaa4:	cset	w0, gt
    aaa8:	b	a980 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x220>
    aaac:	cmp	w21, #0xb
    aab0:	b.ne	b300 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xba0>  // b.any
    aab4:	ldr	x0, [x0, #24]
    aab8:	ldr	x1, [x20, #24]
    aabc:	cmp	x1, x0
    aac0:	cset	w0, eq  // eq = none
    aac4:	b	a980 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x220>
    aac8:	cmp	w1, #0x4
    aacc:	b.ne	aae0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x380>  // b.any
    aad0:	lsl	x0, x3, x2
    aad4:	b	a9cc <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x26c>
    aad8:	add	x0, x3, x2
    aadc:	cbz	w1, a9cc <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x26c>
    aae0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    aae4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    aae8:	add	x1, x1, #0x0
    aaec:	add	x0, x0, #0x0
    aaf0:	mov	w2, #0x404                 	// #1028
    aaf4:	stp	x23, x24, [sp, #48]
    aaf8:	stp	x25, x26, [sp, #64]
    aafc:	stp	x27, x28, [sp, #80]
    ab00:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    ab04:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ab08:	mov	x20, x0
    ab0c:	b	a8f8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x198>
    ab10:	ldr	x0, [x0, #24]
    ab14:	ldr	x1, [x20, #24]
    ab18:	cmp	x1, x0
    ab1c:	cset	w0, ge  // ge = tcont
    ab20:	b	a980 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x220>
    ab24:	ldr	x0, [x0, #24]
    ab28:	ldr	x1, [x20, #24]
    ab2c:	cmp	x1, x0
    ab30:	cset	w0, ne  // ne = any
    ab34:	b	a980 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x220>
    ab38:	mul	x0, x3, x2
    ab3c:	b	a9cc <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x26c>
    ab40:	asr	x0, x3, x2
    ab44:	b	a9cc <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x26c>
    ab48:	stp	x23, x24, [sp, #48]
    ab4c:	stp	x21, x22, [sp, #32]
    ab50:	stp	x25, x26, [sp, #64]
    ab54:	bl	a00 <_ZN4llvm3isaINS_7DagInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    ab58:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ab5c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ab60:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ab64:	add	x3, x3, #0x0
    ab68:	add	x1, x1, #0x0
    ab6c:	add	x0, x0, #0x0
    ab70:	mov	w2, #0x69                  	// #105
    ab74:	stp	x21, x22, [sp, #32]
    ab78:	stp	x23, x24, [sp, #48]
    ab7c:	stp	x25, x26, [sp, #64]
    ab80:	stp	x27, x28, [sp, #80]
    ab84:	bl	0 <__assert_fail>
    ab88:	stp	x23, x24, [sp, #48]
    ab8c:	ldr	x24, [x19, #40]
    ab90:	stp	x21, x22, [sp, #32]
    ab94:	stp	x25, x26, [sp, #64]
    ab98:	cbz	x24, b2dc <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xb7c>
    ab9c:	ldrb	w0, [x24, #8]
    aba0:	cmp	w0, #0x6
    aba4:	b.eq	abbc <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x45c>  // b.none
    aba8:	ldp	x21, x22, [sp, #32]
    abac:	ldp	x23, x24, [sp, #48]
    abb0:	ldp	x25, x26, [sp, #64]
    abb4:	ldp	x27, x28, [sp, #80]
    abb8:	b	a8b0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x150>
    abbc:	mov	x0, #0x800000000           	// #34359738368
    abc0:	str	x0, [sp, #504]
    abc4:	str	x0, [sp, #584]
    abc8:	add	x20, sp, #0x1f0
    abcc:	add	x23, sp, #0x240
    abd0:	add	x2, x20, #0x10
    abd4:	ldr	w19, [x28, #48]
    abd8:	add	x26, x23, #0x10
    abdc:	str	x2, [sp, #496]
    abe0:	str	x26, [sp, #576]
    abe4:	cbz	w19, b148 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x9e8>
    abe8:	mov	w0, w19
    abec:	add	x25, x28, #0x38
    abf0:	add	x22, sp, #0x1a0
    abf4:	mov	x27, #0x0                   	// #0
    abf8:	mov	x21, #0x38                  	// #56
    abfc:	b	ac04 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x4a4>
    ac00:	ldr	w0, [x28, #48]
    ac04:	cmp	w27, w0
    ac08:	b.cs	b1c8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xa68>  // b.hs, b.nlast
    ac0c:	ldr	x2, [x25, x27, lsl #3]
    ac10:	mov	x1, x22
    ac14:	mov	x0, x20
    ac18:	str	x2, [sp, #416]
    ac1c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ac20:	ldr	w0, [x28, #52]
    ac24:	lsl	x1, x27, #3
    ac28:	cmp	w27, w0
    ac2c:	b.cs	b1a8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xa48>  // b.hs, b.nlast
    ac30:	ldr	w0, [x28, #48]
    ac34:	add	x1, x28, x1
    ac38:	ldr	w2, [sp, #584]
    ac3c:	ldr	w3, [sp, #588]
    ac40:	add	x0, x21, w0, uxtw #3
    ac44:	cmp	w2, w3
    ac48:	ldr	x4, [x1, x0]
    ac4c:	b.cs	ace0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x580>  // b.hs, b.nlast
    ac50:	ldr	x0, [sp, #576]
    ac54:	str	x4, [x0, w2, uxtw #3]
    ac58:	ldr	w5, [sp, #584]
    ac5c:	ldr	w1, [sp, #588]
    ac60:	mov	w0, w5
    ac64:	add	x0, x0, #0x1
    ac68:	cmp	x0, x1
    ac6c:	b.hi	b188 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xa28>  // b.pmore
    ac70:	add	w5, w5, #0x1
    ac74:	str	w5, [sp, #584]
    ac78:	add	x27, x27, #0x1
    ac7c:	cmp	w19, w27
    ac80:	b.ne	ac00 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x4a0>  // b.any
    ac84:	ldr	w3, [sp, #504]
    ac88:	ldr	x2, [sp, #496]
    ac8c:	ldr	x4, [sp, #576]
    ac90:	mov	x1, #0x0                   	// #0
    ac94:	mov	x0, x24
    ac98:	bl	4820 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE>
    ac9c:	ldr	x1, [sp, #576]
    aca0:	add	x23, x23, #0x10
    aca4:	mov	x19, x0
    aca8:	cmp	x1, x23
    acac:	b.eq	acb8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x558>  // b.none
    acb0:	mov	x0, x1
    acb4:	bl	0 <free>
    acb8:	ldr	x0, [sp, #496]
    acbc:	add	x20, x20, #0x10
    acc0:	cmp	x0, x20
    acc4:	b.eq	aba8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x448>  // b.none
    acc8:	bl	0 <free>
    accc:	ldp	x21, x22, [sp, #32]
    acd0:	ldp	x23, x24, [sp, #48]
    acd4:	ldp	x25, x26, [sp, #64]
    acd8:	ldp	x27, x28, [sp, #80]
    acdc:	b	a7b8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x58>
    ace0:	mov	x2, #0x0                   	// #0
    ace4:	mov	x1, x26
    ace8:	mov	x0, x23
    acec:	mov	x3, #0x8                   	// #8
    acf0:	str	x4, [sp, #96]
    acf4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    acf8:	ldr	w2, [sp, #584]
    acfc:	ldr	x4, [sp, #96]
    ad00:	b	ac50 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x4f0>
    ad04:	stp	x21, x22, [sp, #32]
    ad08:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ad0c:	mov	x21, x0
    ad10:	cbz	x0, a86c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x10c>
    ad14:	mov	x0, #0x800000000           	// #34359738368
    ad18:	str	x0, [sp, #584]
    ad1c:	add	x19, sp, #0x240
    ad20:	stp	x23, x24, [sp, #48]
    ad24:	ldr	w3, [x20, #32]
    ad28:	mov	x23, #0x28                  	// #40
    ad2c:	add	x22, x19, #0x10
    ad30:	mov	x1, x22
    ad34:	add	x2, x20, x23
    ad38:	add	x3, x23, w3, uxtw #3
    ad3c:	mov	x0, x19
    ad40:	add	x3, x20, x3
    ad44:	str	x22, [sp, #576]
    ad48:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ad4c:	ldr	w3, [x21, #32]
    ad50:	add	x2, x21, x23
    ad54:	ldr	w4, [sp, #584]
    ad58:	mov	x0, x19
    ad5c:	ldr	x1, [sp, #576]
    ad60:	add	x3, x23, w3, uxtw #3
    ad64:	add	x3, x21, x3
    ad68:	add	x1, x1, x4, lsl #3
    ad6c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ad70:	ldr	x2, [x20, #16]
    ad74:	ldr	w1, [sp, #584]
    ad78:	ldr	x0, [sp, #576]
    ad7c:	cbz	x2, b34c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xbec>
    ad80:	ldr	w3, [x2, #8]
    ad84:	cmp	w3, #0x5
    ad88:	b.ne	b324 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xbc4>  // b.any
    ad8c:	ldr	x2, [x2, #24]
    ad90:	bl	50c0 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    ad94:	mov	x19, x0
    ad98:	ldr	x1, [sp, #576]
    ad9c:	cmp	x1, x22
    ada0:	b.eq	ae18 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x6b8>  // b.none
    ada4:	mov	x0, x1
    ada8:	bl	0 <free>
    adac:	ldp	x21, x22, [sp, #32]
    adb0:	ldp	x23, x24, [sp, #48]
    adb4:	b	a7b8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x58>
    adb8:	stp	x23, x24, [sp, #48]
    adbc:	ldr	x23, [x19, #40]
    adc0:	cbz	x23, a7fc <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x9c>
    adc4:	ldrb	w0, [x23, #8]
    adc8:	cmp	w0, #0x5
    adcc:	b.eq	add8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x678>  // b.none
    add0:	ldp	x23, x24, [sp, #48]
    add4:	b	a7b8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x58>
    add8:	stp	x21, x22, [sp, #32]
    addc:	ldr	x21, [x20, #32]
    ade0:	mov	x0, x21
    ade4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ade8:	ldr	x22, [x23, #32]
    adec:	mov	x24, x0
    adf0:	str	x24, [sp, #96]
    adf4:	mov	x0, x22
    adf8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    adfc:	cbz	x24, b108 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x9a8>
    ae00:	cbnz	x0, ae24 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x6c4>
    ae04:	cbz	x22, b2e0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xb80>
    ae08:	ldrb	w0, [x22, #8]
    ae0c:	cmp	w0, #0x18
    ae10:	b.eq	affc <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x89c>  // b.none
    ae14:	nop
    ae18:	ldp	x21, x22, [sp, #32]
    ae1c:	ldp	x23, x24, [sp, #48]
    ae20:	b	a7b8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x58>
    ae24:	ldr	x1, [sp, #96]
    ae28:	stp	x25, x26, [sp, #64]
    ae2c:	ldr	x0, [x0, #24]
    ae30:	stp	x27, x28, [sp, #80]
    ae34:	ldr	x1, [x1, #24]
    ae38:	cmp	x1, x0
    ae3c:	b.ne	b1fc <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xa9c>  // b.any
    ae40:	mov	x0, #0x800000000           	// #34359738368
    ae44:	str	x0, [sp, #264]
    ae48:	str	x0, [sp, #344]
    ae4c:	add	x21, sp, #0x100
    ae50:	add	x24, sp, #0x150
    ae54:	add	x0, x21, #0x10
    ae58:	ldr	w22, [x20, #48]
    ae5c:	add	x28, x24, #0x10
    ae60:	str	x0, [sp, #256]
    ae64:	str	x28, [sp, #336]
    ae68:	cbz	w22, af08 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x7a8>
    ae6c:	mov	w0, w22
    ae70:	add	x27, x20, #0x38
    ae74:	add	x26, sp, #0x240
    ae78:	mov	x19, #0x0                   	// #0
    ae7c:	mov	x25, #0x38                  	// #56
    ae80:	b	ae88 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x728>
    ae84:	ldr	w0, [x20, #48]
    ae88:	cmp	w19, w0
    ae8c:	b.cs	b1c8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xa68>  // b.hs, b.nlast
    ae90:	ldr	x2, [x27, x19, lsl #3]
    ae94:	mov	x1, x26
    ae98:	mov	x0, x21
    ae9c:	str	x2, [sp, #576]
    aea0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    aea4:	ldr	w0, [x20, #52]
    aea8:	lsl	x1, x19, #3
    aeac:	cmp	w19, w0
    aeb0:	b.cs	b1a8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xa48>  // b.hs, b.nlast
    aeb4:	ldr	w0, [x20, #48]
    aeb8:	add	x1, x20, x1
    aebc:	ldr	w2, [sp, #344]
    aec0:	ldr	w3, [sp, #348]
    aec4:	add	x0, x25, w0, uxtw #3
    aec8:	cmp	w2, w3
    aecc:	ldr	x5, [x1, x0]
    aed0:	b.cs	b09c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x93c>  // b.hs, b.nlast
    aed4:	ldr	x0, [sp, #336]
    aed8:	str	x5, [x0, w2, uxtw #3]
    aedc:	ldr	w0, [sp, #344]
    aee0:	ldr	w2, [sp, #348]
    aee4:	mov	w1, w0
    aee8:	add	x1, x1, #0x1
    aeec:	cmp	x1, x2
    aef0:	b.hi	b188 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xa28>  // b.pmore
    aef4:	add	w0, w0, #0x1
    aef8:	str	w0, [sp, #344]
    aefc:	add	x19, x19, #0x1
    af00:	cmp	w22, w19
    af04:	b.ne	ae84 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x724>  // b.any
    af08:	ldr	w20, [x23, #48]
    af0c:	cbz	w20, b174 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xa14>
    af10:	mov	w0, w20
    af14:	add	x26, x23, #0x38
    af18:	add	x25, sp, #0x240
    af1c:	add	x27, x24, #0x10
    af20:	mov	x19, #0x0                   	// #0
    af24:	mov	x22, #0x38                  	// #56
    af28:	b	af30 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x7d0>
    af2c:	ldr	w0, [x23, #48]
    af30:	cmp	w19, w0
    af34:	b.cs	b1c8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xa68>  // b.hs, b.nlast
    af38:	ldr	x2, [x26, x19, lsl #3]
    af3c:	mov	x1, x25
    af40:	mov	x0, x21
    af44:	str	x2, [sp, #576]
    af48:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    af4c:	ldr	w0, [x23, #52]
    af50:	lsl	x1, x19, #3
    af54:	cmp	w0, w19
    af58:	b.ls	b1a8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xa48>  // b.plast
    af5c:	ldr	w0, [x23, #48]
    af60:	add	x1, x23, x1
    af64:	ldr	w2, [sp, #344]
    af68:	ldr	w3, [sp, #348]
    af6c:	add	x0, x22, w0, uxtw #3
    af70:	cmp	w2, w3
    af74:	ldr	x28, [x1, x0]
    af78:	b.cs	b0c0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x960>  // b.hs, b.nlast
    af7c:	ldr	x0, [sp, #336]
    af80:	str	x28, [x0, w2, uxtw #3]
    af84:	ldr	w5, [sp, #344]
    af88:	ldr	w1, [sp, #348]
    af8c:	mov	w0, w5
    af90:	add	x0, x0, #0x1
    af94:	cmp	x0, x1
    af98:	b.hi	b188 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xa28>  // b.pmore
    af9c:	add	w5, w5, #0x1
    afa0:	str	w5, [sp, #344]
    afa4:	add	x19, x19, #0x1
    afa8:	cmp	w20, w19
    afac:	b.ne	af2c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x7cc>  // b.any
    afb0:	ldr	w3, [sp, #264]
    afb4:	mov	x1, #0x0                   	// #0
    afb8:	ldr	x0, [sp, #96]
    afbc:	mov	w5, w5
    afc0:	ldr	x2, [sp, #256]
    afc4:	add	x24, x24, #0x10
    afc8:	ldr	x4, [sp, #336]
    afcc:	bl	4820 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE>
    afd0:	mov	x19, x0
    afd4:	ldr	x1, [sp, #336]
    afd8:	cmp	x1, x24
    afdc:	b.eq	afe8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x888>  // b.none
    afe0:	mov	x0, x1
    afe4:	bl	0 <free>
    afe8:	ldr	x0, [sp, #256]
    afec:	add	x21, x21, #0x10
    aff0:	cmp	x0, x21
    aff4:	b.ne	acc8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x568>  // b.any
    aff8:	b	aba8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x448>
    affc:	ldr	x0, [sp, #96]
    b000:	stp	x25, x26, [sp, #64]
    b004:	stp	x27, x28, [sp, #80]
    b008:	cbnz	x0, ae40 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x6e0>
    b00c:	bl	24b8 <_ZN4llvm9UnsetInit3getEv>
    b010:	str	x0, [sp, #96]
    b014:	b	ae40 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x6e0>
    b018:	cbz	x0, b2ec <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xb8c>
    b01c:	ldrb	w1, [x0, #8]
    b020:	stp	x21, x22, [sp, #32]
    b024:	cmp	w1, #0x8
    b028:	b.ne	a86c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x10c>  // b.any
    b02c:	add	x21, sp, #0x1a0
    b030:	mov	x2, #0x800000000           	// #34359738368
    b034:	ldr	x19, [x0, #24]
    b038:	add	x1, x21, #0x10
    b03c:	stp	x1, x2, [sp, #416]
    b040:	mov	x0, x1
    b044:	cmp	x19, #0x8
    b048:	b.hi	b0e4 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x984>  // b.pmore
    b04c:	str	w19, [sp, #424]
    b050:	add	x3, x0, w19, uxtw #3
    b054:	and	x1, x19, #0xffffffff
    b058:	cmp	x3, x0
    b05c:	b.eq	b070 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x910>  // b.none
    b060:	str	x20, [x0], #8
    b064:	cmp	x3, x0
    b068:	b.ne	b060 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x900>  // b.any
    b06c:	ldr	x0, [sp, #416]
    b070:	add	x21, x21, #0x10
    b074:	ldr	x2, [x20, #16]
    b078:	bl	50c0 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    b07c:	mov	x19, x0
    b080:	ldr	x1, [sp, #416]
    b084:	cmp	x1, x21
    b088:	b.eq	a86c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x10c>  // b.none
    b08c:	mov	x0, x1
    b090:	bl	0 <free>
    b094:	ldp	x21, x22, [sp, #32]
    b098:	b	a7b8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x58>
    b09c:	mov	x2, #0x0                   	// #0
    b0a0:	mov	x1, x28
    b0a4:	mov	x0, x24
    b0a8:	mov	x3, #0x8                   	// #8
    b0ac:	str	x5, [sp, #104]
    b0b0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b0b4:	ldr	w2, [sp, #344]
    b0b8:	ldr	x5, [sp, #104]
    b0bc:	b	aed4 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x774>
    b0c0:	mov	x2, #0x0                   	// #0
    b0c4:	mov	x1, x27
    b0c8:	mov	x0, x24
    b0cc:	mov	x3, #0x8                   	// #8
    b0d0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b0d4:	ldr	w2, [sp, #344]
    b0d8:	b	af7c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x81c>
    b0dc:	ldrb	w21, [x19, #9]
    b0e0:	b	a920 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x1c0>
    b0e4:	mov	x0, x21
    b0e8:	mov	x2, x19
    b0ec:	mov	x3, #0x8                   	// #8
    b0f0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b0f4:	ldr	w0, [sp, #428]
    b0f8:	cmp	x19, x0
    b0fc:	b.hi	b17c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xa1c>  // b.pmore
    b100:	ldr	x0, [sp, #416]
    b104:	b	b04c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x8ec>
    b108:	cbz	x21, b2e0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xb80>
    b10c:	ldrb	w1, [x21, #8]
    b110:	cmp	w1, #0x18
    b114:	b.ne	ae18 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x6b8>  // b.any
    b118:	cbz	x0, ae04 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x6a4>
    b11c:	stp	x25, x26, [sp, #64]
    b120:	stp	x27, x28, [sp, #80]
    b124:	str	x0, [sp, #96]
    b128:	b	ae40 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x6e0>
    b12c:	ldr	x0, [x0, #24]
    b130:	ldr	x1, [x20, #24]
    b134:	cmp	x1, x0
    b138:	cset	w0, lt  // lt = tstop
    b13c:	b	a980 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x220>
    b140:	orr	x0, x3, x2
    b144:	b	a9cc <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x26c>
    b148:	mov	x4, x26
    b14c:	mov	x3, #0x0                   	// #0
    b150:	mov	x5, #0x0                   	// #0
    b154:	b	ac90 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x530>
    b158:	cbz	x2, a96c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x20c>
    b15c:	ldr	x1, [x0, #24]
    b160:	ldr	x0, [x20, #24]
    b164:	bl	0 <memcmp>
    b168:	cmp	w0, #0x0
    b16c:	cset	w1, eq  // eq = none
    b170:	b	a96c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x20c>
    b174:	ldr	w5, [sp, #344]
    b178:	b	afb0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x850>
    b17c:	stp	x23, x24, [sp, #48]
    b180:	stp	x25, x26, [sp, #64]
    b184:	stp	x27, x28, [sp, #80]
    b188:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b18c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b190:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b194:	add	x3, x3, #0x0
    b198:	add	x1, x1, #0x0
    b19c:	add	x0, x0, #0x0
    b1a0:	mov	w2, #0x43                  	// #67
    b1a4:	bl	0 <__assert_fail>
    b1a8:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b1ac:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b1b0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b1b4:	add	x3, x3, #0x0
    b1b8:	add	x1, x1, #0x0
    b1bc:	add	x0, x0, #0x0
    b1c0:	mov	w2, #0x545                 	// #1349
    b1c4:	bl	0 <__assert_fail>
    b1c8:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b1cc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b1d0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b1d4:	add	x3, x3, #0x0
    b1d8:	add	x1, x1, #0x0
    b1dc:	add	x0, x0, #0x0
    b1e0:	mov	w2, #0x540                 	// #1344
    b1e4:	bl	0 <__assert_fail>
    b1e8:	stp	x21, x22, [sp, #32]
    b1ec:	stp	x23, x24, [sp, #48]
    b1f0:	stp	x25, x26, [sp, #64]
    b1f4:	stp	x27, x28, [sp, #80]
    b1f8:	bl	9d8 <_ZN4llvm3isaINS_8ListInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    b1fc:	add	x19, sp, #0x70
    b200:	add	x22, sp, #0x1f0
    b204:	mov	x0, x19
    b208:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b20c:	add	x1, x1, #0x0
    b210:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b214:	mov	x8, x22
    b218:	mov	x0, x20
    b21c:	add	x21, sp, #0x88
    b220:	add	x20, sp, #0xa0
    b224:	bl	7bc8 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    b228:	mov	x1, x22
    b22c:	mov	x0, x21
    b230:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b234:	add	x22, sp, #0xe8
    b238:	mov	x8, x20
    b23c:	mov	x1, x21
    b240:	mov	x0, x19
    b244:	add	x21, sp, #0xb8
    b248:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b24c:	add	x19, sp, #0xd0
    b250:	mov	x0, x21
    b254:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b258:	add	x1, x1, #0x0
    b25c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b260:	mov	x1, x21
    b264:	mov	x0, x20
    b268:	mov	x8, x19
    b26c:	add	x21, sp, #0x240
    b270:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b274:	add	x20, sp, #0x100
    b278:	mov	x8, x21
    b27c:	mov	x0, x23
    b280:	bl	7bc8 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    b284:	mov	x1, x21
    b288:	mov	x0, x22
    b28c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b290:	add	x21, sp, #0x150
    b294:	mov	x8, x20
    b298:	mov	x0, x19
    b29c:	mov	x1, x22
    b2a0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b2a4:	mov	x0, x21
    b2a8:	add	x19, sp, #0x1a0
    b2ac:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b2b0:	add	x1, x1, #0x0
    b2b4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b2b8:	mov	x1, x21
    b2bc:	mov	x8, x19
    b2c0:	mov	x0, x20
    b2c4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b2c8:	mov	x0, x19
    b2cc:	bl	0 <_ZN4llvm15PrintFatalErrorERKNS_5TwineE>
    b2d0:	stp	x21, x22, [sp, #32]
    b2d4:	stp	x23, x24, [sp, #48]
    b2d8:	stp	x25, x26, [sp, #64]
    b2dc:	bl	938 <_ZN4llvm3isaINS_7DefInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    b2e0:	stp	x25, x26, [sp, #64]
    b2e4:	stp	x27, x28, [sp, #80]
    b2e8:	bl	808 <_ZN4llvm3isaINS_9UnsetInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    b2ec:	stp	x21, x22, [sp, #32]
    b2f0:	stp	x23, x24, [sp, #48]
    b2f4:	stp	x25, x26, [sp, #64]
    b2f8:	stp	x27, x28, [sp, #80]
    b2fc:	bl	9b0 <_ZN4llvm3isaINS_7IntInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    b300:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b304:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b308:	add	x1, x1, #0x0
    b30c:	add	x0, x0, #0x0
    b310:	mov	w2, #0x3d5                 	// #981
    b314:	stp	x23, x24, [sp, #48]
    b318:	stp	x25, x26, [sp, #64]
    b31c:	stp	x27, x28, [sp, #80]
    b320:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    b324:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b328:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b32c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b330:	add	x3, x3, #0x0
    b334:	add	x1, x1, #0x0
    b338:	add	x0, x0, #0x0
    b33c:	mov	w2, #0x108                 	// #264
    b340:	stp	x25, x26, [sp, #64]
    b344:	stp	x27, x28, [sp, #80]
    b348:	bl	0 <__assert_fail>
    b34c:	stp	x25, x26, [sp, #64]
    b350:	stp	x27, x28, [sp, #80]
    b354:	bl	7a0 <_ZN4llvm13isa_impl_wrapINS_9ListRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>

000000000000b358 <_ZNK4llvm9BinOpInit17resolveReferencesERNS_8ResolverE>:
    b358:	stp	x29, x30, [sp, #-48]!
    b35c:	mov	x29, sp
    b360:	stp	x19, x20, [sp, #16]
    b364:	mov	x19, x0
    b368:	mov	x20, x1
    b36c:	ldr	x0, [x0, #32]
    b370:	ldr	x2, [x0]
    b374:	ldr	x2, [x2, #96]
    b378:	str	x21, [sp, #32]
    b37c:	blr	x2
    b380:	mov	x21, x0
    b384:	ldr	x2, [x19, #40]
    b388:	mov	x1, x20
    b38c:	mov	x0, x2
    b390:	ldr	x2, [x2]
    b394:	ldr	x2, [x2, #96]
    b398:	blr	x2
    b39c:	mov	x2, x0
    b3a0:	ldr	x1, [x19, #32]
    b3a4:	cmp	x1, x21
    b3a8:	b.eq	b3d0 <_ZNK4llvm9BinOpInit17resolveReferencesERNS_8ResolverE+0x78>  // b.none
    b3ac:	ldrb	w0, [x19, #9]
    b3b0:	mov	x1, x21
    b3b4:	ldr	x3, [x19, #16]
    b3b8:	bl	6cf0 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE>
    b3bc:	ldr	x1, [x20, #8]
    b3c0:	ldp	x19, x20, [sp, #16]
    b3c4:	ldr	x21, [sp, #32]
    b3c8:	ldp	x29, x30, [sp], #48
    b3cc:	b	a760 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE>
    b3d0:	ldr	x0, [x19, #40]
    b3d4:	cmp	x0, x2
    b3d8:	b.ne	b3ac <_ZNK4llvm9BinOpInit17resolveReferencesERNS_8ResolverE+0x54>  // b.any
    b3dc:	mov	x0, x19
    b3e0:	ldp	x19, x20, [sp, #16]
    b3e4:	ldr	x21, [sp, #32]
    b3e8:	ldp	x29, x30, [sp], #48
    b3ec:	ret

000000000000b3f0 <_ZNK4llvm6Record13getValueAsIntENS_9StringRefE>:
    b3f0:	stp	x29, x30, [sp, #-464]!
    b3f4:	mov	x29, sp
    b3f8:	stp	x19, x20, [sp, #16]
    b3fc:	mov	x20, x0
    b400:	mov	x0, x1
    b404:	stp	x21, x22, [sp, #32]
    b408:	stp	x23, x24, [sp, #48]
    b40c:	stp	x25, x26, [sp, #64]
    b410:	stp	x27, x28, [sp, #80]
    b414:	stp	x1, x2, [sp, #128]
    b418:	mov	x1, x2
    b41c:	bl	a360 <_ZN4llvm10StringInit3getENS_9StringRefE>
    b420:	ldr	w1, [x20, #80]
    b424:	mov	w2, #0x18                  	// #24
    b428:	ldr	x19, [x20, #72]
    b42c:	umaddl	x1, w1, w2, x19
    b430:	cmp	x19, x1
    b434:	b.ne	b448 <_ZNK4llvm6Record13getValueAsIntENS_9StringRefE+0x58>  // b.any
    b438:	b	b5c8 <_ZNK4llvm6Record13getValueAsIntENS_9StringRefE+0x1d8>
    b43c:	add	x19, x19, #0x18
    b440:	cmp	x1, x19
    b444:	b.eq	b5c8 <_ZNK4llvm6Record13getValueAsIntENS_9StringRefE+0x1d8>  // b.none
    b448:	ldr	x2, [x19]
    b44c:	cmp	x0, x2
    b450:	b.ne	b43c <_ZNK4llvm6Record13getValueAsIntENS_9StringRefE+0x4c>  // b.any
    b454:	ldr	x0, [x19, #16]
    b458:	cbz	x0, b5c8 <_ZNK4llvm6Record13getValueAsIntENS_9StringRefE+0x1d8>
    b45c:	ldrb	w1, [x0, #8]
    b460:	cmp	w1, #0x8
    b464:	b.eq	b5a8 <_ZNK4llvm6Record13getValueAsIntENS_9StringRefE+0x1b8>  // b.none
    b468:	ldr	x3, [x20, #8]
    b46c:	add	x4, sp, #0xa8
    b470:	mov	x0, x4
    b474:	ldr	w28, [x20, #16]
    b478:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b47c:	add	x1, x1, #0x0
    b480:	stp	x3, x4, [sp, #112]
    b484:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b488:	add	x2, sp, #0xf0
    b48c:	ldr	x0, [x20]
    b490:	str	x2, [sp, #104]
    b494:	add	x21, sp, #0xc0
    b498:	add	x27, sp, #0xd8
    b49c:	add	x26, sp, #0x108
    b4a0:	add	x20, sp, #0x120
    b4a4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b4a8:	mov	x5, x0
    b4ac:	add	x1, sp, #0x98
    b4b0:	mov	x0, x21
    b4b4:	str	x0, [sp, #96]
    b4b8:	add	x24, sp, #0x138
    b4bc:	ldp	x6, x5, [x5, #24]
    b4c0:	stp	x6, x5, [sp, #152]
    b4c4:	add	x25, sp, #0x150
    b4c8:	add	x21, sp, #0x168
    b4cc:	add	x23, sp, #0x1b0
    b4d0:	add	x22, sp, #0x180
    b4d4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b4d8:	ldr	x4, [sp, #120]
    b4dc:	mov	x8, x27
    b4e0:	ldr	x0, [sp, #96]
    b4e4:	mov	x1, x0
    b4e8:	mov	x0, x4
    b4ec:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b4f0:	ldr	x2, [sp, #104]
    b4f4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b4f8:	add	x1, x1, #0x0
    b4fc:	str	x2, [sp, #96]
    b500:	mov	x0, x2
    b504:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b508:	ldr	x0, [sp, #96]
    b50c:	mov	x8, x26
    b510:	mov	x1, x0
    b514:	mov	x0, x27
    b518:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b51c:	mov	x0, x20
    b520:	add	x1, sp, #0x80
    b524:	str	x0, [sp, #96]
    b528:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b52c:	ldr	x0, [sp, #96]
    b530:	mov	x8, x24
    b534:	add	x20, sp, #0x198
    b538:	mov	x1, x0
    b53c:	mov	x0, x26
    b540:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b544:	mov	x0, x25
    b548:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b54c:	add	x1, x1, #0x0
    b550:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b554:	mov	x1, x25
    b558:	mov	x0, x24
    b55c:	mov	x8, x21
    b560:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b564:	ldr	x0, [x19, #16]
    b568:	mov	x8, x23
    b56c:	ldr	x1, [x0]
    b570:	ldr	x1, [x1, #40]
    b574:	blr	x1
    b578:	mov	x1, x23
    b57c:	mov	x0, x22
    b580:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b584:	mov	x1, x22
    b588:	mov	x0, x21
    b58c:	mov	x8, x20
    b590:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b594:	ldr	x3, [sp, #112]
    b598:	mov	x2, x20
    b59c:	mov	x1, x28
    b5a0:	mov	x0, x3
    b5a4:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    b5a8:	ldp	x19, x20, [sp, #16]
    b5ac:	ldr	x0, [x0, #24]
    b5b0:	ldp	x21, x22, [sp, #32]
    b5b4:	ldp	x23, x24, [sp, #48]
    b5b8:	ldp	x25, x26, [sp, #64]
    b5bc:	ldp	x27, x28, [sp, #80]
    b5c0:	ldp	x29, x30, [sp], #464
    b5c4:	ret
    b5c8:	ldp	x0, x25, [x20]
    b5cc:	add	x21, sp, #0x120
    b5d0:	ldr	w24, [x20, #16]
    b5d4:	add	x23, sp, #0x138
    b5d8:	add	x19, sp, #0x150
    b5dc:	add	x22, sp, #0x168
    b5e0:	add	x20, sp, #0x180
    b5e4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b5e8:	mov	x3, x0
    b5ec:	add	x2, sp, #0x108
    b5f0:	mov	x0, x21
    b5f4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b5f8:	add	x1, x1, #0x0
    b5fc:	ldp	x4, x3, [x3, #24]
    b600:	stp	x4, x3, [sp, #264]
    b604:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b608:	mov	x0, x23
    b60c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b610:	add	x1, x1, #0x0
    b614:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b618:	mov	x8, x19
    b61c:	mov	x0, x21
    b620:	mov	x1, x23
    b624:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b628:	mov	x0, x22
    b62c:	add	x1, sp, #0x80
    b630:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b634:	add	x21, sp, #0x198
    b638:	mov	x8, x20
    b63c:	mov	x0, x19
    b640:	mov	x1, x22
    b644:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b648:	mov	x0, x21
    b64c:	add	x19, sp, #0x1b0
    b650:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b654:	add	x1, x1, #0x0
    b658:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b65c:	mov	x8, x19
    b660:	mov	x1, x21
    b664:	mov	x0, x20
    b668:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b66c:	mov	x2, x19
    b670:	mov	x0, x25
    b674:	mov	x1, x24
    b678:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    b67c:	nop

000000000000b680 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv>:
    b680:	stp	x29, x30, [sp, #-112]!
    b684:	mov	x29, sp
    b688:	ldr	w1, [x0, #168]
    b68c:	stp	x19, x20, [sp, #16]
    b690:	add	w2, w1, #0x1
    b694:	str	x21, [sp, #32]
    b698:	str	w2, [x0, #168]
    b69c:	cbnz	w1, b768 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv+0xe8>
    b6a0:	add	x20, sp, #0x50
    b6a4:	mov	w0, #0x30                  	// #48
    b6a8:	add	x1, x20, #0x14
    b6ac:	strb	w0, [sp, #100]
    b6b0:	add	x19, sp, #0x30
    b6b4:	add	x2, x20, #0x15
    b6b8:	add	x4, x19, #0x10
    b6bc:	mov	x0, x19
    b6c0:	mov	w3, #0x0                   	// #0
    b6c4:	str	x4, [sp, #48]
    b6c8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b6cc:	mov	x1, #0x0                   	// #0
    b6d0:	mov	x2, #0x0                   	// #0
    b6d4:	mov	x0, x19
    b6d8:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b6dc:	mov	x4, #0xa                   	// #10
    b6e0:	add	x3, x3, #0x0
    b6e4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    b6e8:	mov	x1, x0
    b6ec:	add	x2, x20, #0x10
    b6f0:	str	x2, [sp, #80]
    b6f4:	ldr	x2, [x1], #16
    b6f8:	cmp	x2, x1
    b6fc:	b.eq	b7a8 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv+0x128>  // b.none
    b700:	str	x2, [sp, #80]
    b704:	ldr	x2, [x0, #16]
    b708:	str	x2, [sp, #96]
    b70c:	ldr	x2, [x0, #8]
    b710:	str	x2, [sp, #88]
    b714:	stp	x1, xzr, [x0]
    b718:	add	x20, x20, #0x10
    b71c:	strb	wzr, [x0, #16]
    b720:	ldp	x0, x1, [sp, #80]
    b724:	bl	a360 <_ZN4llvm10StringInit3getENS_9StringRefE>
    b728:	mov	x21, x0
    b72c:	ldr	x1, [sp, #80]
    b730:	cmp	x1, x20
    b734:	b.eq	b740 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv+0xc0>  // b.none
    b738:	mov	x0, x1
    b73c:	bl	0 <_ZdlPv>
    b740:	ldr	x0, [sp, #48]
    b744:	add	x19, x19, #0x10
    b748:	cmp	x0, x19
    b74c:	b.eq	b754 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv+0xd4>  // b.none
    b750:	bl	0 <_ZdlPv>
    b754:	mov	x0, x21
    b758:	ldp	x19, x20, [sp, #16]
    b75c:	ldr	x21, [sp, #32]
    b760:	ldp	x29, x30, [sp], #112
    b764:	ret
    b768:	add	x20, sp, #0x50
    b76c:	mov	w3, w1
    b770:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
    b774:	add	x1, x20, #0x15
    b778:	movk	x4, #0xcccd
    b77c:	nop
    b780:	umulh	x2, x3, x4
    b784:	cmp	x3, #0x9
    b788:	lsr	x2, x2, #3
    b78c:	add	x0, x2, x2, lsl #2
    b790:	sub	x0, x3, x0, lsl #1
    b794:	mov	x3, x2
    b798:	add	w0, w0, #0x30
    b79c:	strb	w0, [x1, #-1]!
    b7a0:	b.hi	b780 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv+0x100>  // b.pmore
    b7a4:	b	b6b0 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv+0x30>
    b7a8:	ldp	x2, x3, [x0, #16]
    b7ac:	stp	x2, x3, [sp, #96]
    b7b0:	b	b70c <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv+0x8c>
    b7b4:	nop

000000000000b7b8 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb>:
    b7b8:	sub	sp, sp, #0x250
    b7bc:	stp	x29, x30, [sp]
    b7c0:	mov	x29, sp
    b7c4:	stp	x19, x20, [sp, #16]
    b7c8:	mov	x19, x0
    b7cc:	stp	x23, x24, [sp, #48]
    b7d0:	ldrb	w3, [x0, #9]
    b7d4:	cmp	w3, #0x3
    b7d8:	b.eq	b904 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x14c>  // b.none
    b7dc:	mov	x24, x1
    b7e0:	b.hi	b840 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x88>  // b.pmore
    b7e4:	cmp	w3, #0x1
    b7e8:	b.eq	b95c <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x1a4>  // b.none
    b7ec:	cmp	w3, #0x2
    b7f0:	b.ne	b89c <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0xe4>  // b.any
    b7f4:	ldr	x0, [x0, #32]
    b7f8:	cbz	x0, b998 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x1e0>
    b7fc:	ldrb	w1, [x0, #8]
    b800:	cmp	w1, #0x9
    b804:	b.ne	b8e8 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x130>  // b.any
    b808:	ldr	w1, [x0, #32]
    b80c:	cbz	w1, bdcc <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x614>
    b810:	ldr	x2, [x0, #16]
    b814:	mov	w1, w1
    b818:	sub	x1, x1, #0x1
    b81c:	add	x0, x0, #0x30
    b820:	cbz	x2, bd88 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x5d0>
    b824:	ldr	w3, [x2, #8]
    b828:	cmp	w3, #0x5
    b82c:	b.ne	bd5c <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x5a4>  // b.any
    b830:	ldr	x2, [x2, #24]
    b834:	bl	50c0 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    b838:	mov	x20, x0
    b83c:	b	b8ec <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x134>
    b840:	cmp	w3, #0x4
    b844:	b.eq	b928 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x170>  // b.none
    b848:	cmp	w3, #0x5
    b84c:	b.ne	b8e8 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x130>  // b.any
    b850:	ldr	x0, [x0, #32]
    b854:	cbz	x0, b9a8 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x1f0>
    b858:	ldrb	w1, [x0, #8]
    b85c:	cmp	w1, #0x5
    b860:	b.ne	b8e8 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x130>  // b.any
    b864:	mov	x1, #0x0                   	// #0
    b868:	mov	x2, #0x0                   	// #0
    b86c:	bl	3158 <_ZNK4llvm7DagInit16getOperatorAsDefENS_8ArrayRefINS_5SMLocEEE>
    b870:	bl	4d90 <_ZN4llvm7DefInit3getEPNS_6RecordE>
    b874:	mov	x20, x0
    b878:	ldr	x0, [x0, #16]
    b87c:	ldr	x1, [x19, #16]
    b880:	ldr	x2, [x0]
    b884:	ldr	x2, [x2, #32]
    b888:	blr	x2
    b88c:	tst	w0, #0xff
    b890:	b.ne	b8ec <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x134>  // b.any
    b894:	stp	x21, x22, [sp, #32]
    b898:	b	babc <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x304>
    b89c:	cbnz	w3, b8e8 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x130>
    b8a0:	stp	x21, x22, [sp, #32]
    b8a4:	ldr	x21, [x0, #16]
    b8a8:	cbz	x21, b9b8 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x200>
    b8ac:	ldr	w0, [x21, #8]
    b8b0:	ldr	x22, [x19, #32]
    b8b4:	cmp	w0, #0x4
    b8b8:	b.eq	b9c4 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x20c>  // b.none
    b8bc:	cmp	w0, #0x7
    b8c0:	b.eq	ba2c <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x274>  // b.none
    b8c4:	ldr	x2, [x22]
    b8c8:	mov	x1, x21
    b8cc:	mov	x0, x22
    b8d0:	ldr	x2, [x2, #64]
    b8d4:	blr	x2
    b8d8:	mov	x20, x0
    b8dc:	ldp	x21, x22, [sp, #32]
    b8e0:	cbnz	x0, b8ec <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x134>
    b8e4:	nop
    b8e8:	mov	x20, x19
    b8ec:	mov	x0, x20
    b8f0:	ldp	x29, x30, [sp]
    b8f4:	ldp	x19, x20, [sp, #16]
    b8f8:	ldp	x23, x24, [sp, #48]
    b8fc:	add	sp, sp, #0x250
    b900:	ret
    b904:	ldr	x0, [x0, #32]
    b908:	cbz	x0, b998 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x1e0>
    b90c:	ldrb	w1, [x0, #8]
    b910:	cmp	w1, #0x9
    b914:	b.ne	b8e8 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x130>  // b.any
    b918:	ldr	w0, [x0, #32]
    b91c:	bl	9ee8 <_ZN4llvm7IntInit3getEl>
    b920:	mov	x20, x0
    b924:	b	b8ec <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x134>
    b928:	ldr	x0, [x0, #32]
    b92c:	cbz	x0, b998 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x1e0>
    b930:	ldrb	w1, [x0, #8]
    b934:	cmp	w1, #0x9
    b938:	b.eq	b980 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x1c8>  // b.none
    b93c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b940:	cbz	x0, b8e8 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x130>
    b944:	ldr	x0, [x0, #32]
    b948:	cmp	x0, #0x0
    b94c:	cset	x0, eq  // eq = none
    b950:	bl	9ee8 <_ZN4llvm7IntInit3getEl>
    b954:	mov	x20, x0
    b958:	b	b8ec <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x134>
    b95c:	ldr	x0, [x0, #32]
    b960:	cbz	x0, b998 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x1e0>
    b964:	ldrb	w1, [x0, #8]
    b968:	cmp	w1, #0x9
    b96c:	b.ne	b8e8 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x130>  // b.any
    b970:	ldr	w1, [x0, #32]
    b974:	cbz	w1, bdf8 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x640>
    b978:	ldr	x20, [x0, #40]
    b97c:	b	b8ec <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x134>
    b980:	ldr	w0, [x0, #32]
    b984:	cmp	w0, #0x0
    b988:	cset	x0, eq  // eq = none
    b98c:	bl	9ee8 <_ZN4llvm7IntInit3getEl>
    b990:	mov	x20, x0
    b994:	b	b8ec <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x134>
    b998:	stp	x21, x22, [sp, #32]
    b99c:	stp	x25, x26, [sp, #64]
    b9a0:	stp	x27, x28, [sp, #80]
    b9a4:	bl	9d8 <_ZN4llvm3isaINS_8ListInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    b9a8:	stp	x21, x22, [sp, #32]
    b9ac:	stp	x25, x26, [sp, #64]
    b9b0:	stp	x27, x28, [sp, #80]
    b9b4:	bl	a00 <_ZN4llvm3isaINS_7DagInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    b9b8:	stp	x25, x26, [sp, #64]
    b9bc:	stp	x27, x28, [sp, #80]
    b9c0:	bl	8c0 <_ZN4llvm3isaINS_11StringRecTyEPNS_5RecTyEEEbRKT0_.isra.0.part.0>
    b9c4:	mov	x0, x22
    b9c8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b9cc:	mov	x20, x0
    b9d0:	cbz	x0, b9dc <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x224>
    b9d4:	ldp	x21, x22, [sp, #32]
    b9d8:	b	b8ec <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x134>
    b9dc:	mov	x0, x22
    b9e0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b9e4:	cbz	x0, bd08 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x550>
    b9e8:	ldr	x1, [x0]
    b9ec:	add	x19, sp, #0x230
    b9f0:	mov	x8, x19
    b9f4:	add	x19, x19, #0x10
    b9f8:	ldr	x1, [x1, #40]
    b9fc:	blr	x1
    ba00:	ldr	x0, [sp, #560]
    ba04:	ldr	x1, [sp, #568]
    ba08:	bl	a360 <_ZN4llvm10StringInit3getENS_9StringRefE>
    ba0c:	mov	x20, x0
    ba10:	ldr	x1, [sp, #560]
    ba14:	cmp	x1, x19
    ba18:	b.eq	b9d4 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x21c>  // b.none
    ba1c:	mov	x0, x1
    ba20:	bl	0 <_ZdlPv>
    ba24:	ldp	x21, x22, [sp, #32]
    ba28:	b	b8ec <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x134>
    ba2c:	and	w20, w2, #0xff
    ba30:	mov	x0, x22
    ba34:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ba38:	mov	x23, x0
    ba3c:	cbz	x0, b8c4 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x10c>
    ba40:	cmp	x24, #0x0
    ba44:	eor	w0, w20, #0x1
    ba48:	cset	w1, eq  // eq = none
    ba4c:	tst	w1, w0
    ba50:	b.ne	bc6c <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x4b4>  // b.any
    ba54:	cbz	x24, bda4 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x5ec>
    ba58:	ldr	x0, [x24]
    ba5c:	cmp	x23, x0
    ba60:	b.eq	bc74 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x4bc>  // b.none
    ba64:	ldp	x3, x2, [x23, #24]
    ba68:	add	x22, sp, #0x230
    ba6c:	ldr	x21, [x24, #104]
    ba70:	mov	x1, x22
    ba74:	str	x3, [sp, #560]
    ba78:	add	x0, x21, #0x30
    ba7c:	add	x21, x21, #0x38
    ba80:	str	x2, [sp, #568]
    ba84:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ba88:	cmp	x0, x21
    ba8c:	b.eq	bc80 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x4c8>  // b.none
    ba90:	ldr	x0, [x0, #64]
    ba94:	cbz	x0, bc80 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x4c8>
    ba98:	bl	4d90 <_ZN4llvm7DefInit3getEPNS_6RecordE>
    ba9c:	mov	x20, x0
    baa0:	ldr	x0, [x0, #16]
    baa4:	ldr	x1, [x19, #16]
    baa8:	ldr	x2, [x0]
    baac:	ldr	x2, [x2, #32]
    bab0:	blr	x2
    bab4:	tst	w0, #0xff
    bab8:	b.ne	b9d4 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x21c>  // b.any
    babc:	ldr	w3, [x24, #16]
    bac0:	add	x10, sp, #0xb8
    bac4:	ldr	x4, [x24, #8]
    bac8:	mov	x0, x10
    bacc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bad0:	add	x1, x1, #0x0
    bad4:	stp	x25, x26, [sp, #64]
    bad8:	add	x21, sp, #0x1f0
    badc:	add	x24, sp, #0x178
    bae0:	stp	x27, x28, [sp, #80]
    bae4:	add	x27, sp, #0x148
    bae8:	add	x28, sp, #0x160
    baec:	stp	x4, x3, [sp, #152]
    baf0:	add	x26, sp, #0x230
    baf4:	add	x25, sp, #0x190
    baf8:	str	x10, [sp, #168]
    bafc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bb00:	ldr	x0, [x19, #16]
    bb04:	add	x5, sp, #0x130
    bb08:	add	x6, sp, #0x210
    bb0c:	add	x2, sp, #0x118
    bb10:	add	x9, sp, #0x100
    bb14:	mov	x1, x21
    bb18:	ldr	x11, [x0]
    bb1c:	add	x7, sp, #0xe8
    bb20:	mov	x8, x21
    bb24:	add	x21, sp, #0xd0
    bb28:	add	x22, sp, #0x1a8
    bb2c:	add	x23, sp, #0x1c0
    bb30:	ldr	x11, [x11, #16]
    bb34:	stp	x1, x7, [sp, #104]
    bb38:	stp	x5, x6, [sp, #120]
    bb3c:	stp	x2, x9, [sp, #136]
    bb40:	blr	x11
    bb44:	ldr	x1, [sp, #104]
    bb48:	mov	x0, x21
    bb4c:	str	x0, [sp, #104]
    bb50:	add	x21, sp, #0x1d8
    bb54:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bb58:	ldp	x0, x7, [sp, #104]
    bb5c:	ldr	x10, [sp, #168]
    bb60:	mov	x8, x7
    bb64:	mov	x1, x0
    bb68:	mov	x0, x10
    bb6c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bb70:	ldr	x9, [sp, #144]
    bb74:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bb78:	add	x1, x1, #0x0
    bb7c:	str	x9, [sp, #104]
    bb80:	mov	x0, x9
    bb84:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bb88:	ldp	x0, x8, [sp, #104]
    bb8c:	ldr	x2, [sp, #136]
    bb90:	str	x2, [sp, #112]
    bb94:	mov	x1, x0
    bb98:	mov	x0, x8
    bb9c:	mov	x8, x2
    bba0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bba4:	ldr	x0, [x20, #16]
    bba8:	ldr	x6, [sp, #128]
    bbac:	ldr	x1, [x0]
    bbb0:	mov	x20, x6
    bbb4:	mov	x8, x6
    bbb8:	ldr	x1, [x1, #16]
    bbbc:	blr	x1
    bbc0:	ldr	x5, [sp, #120]
    bbc4:	mov	x1, x20
    bbc8:	str	x5, [sp, #104]
    bbcc:	mov	x0, x5
    bbd0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bbd4:	ldp	x0, x2, [sp, #104]
    bbd8:	mov	x8, x27
    bbdc:	mov	x1, x0
    bbe0:	mov	x0, x2
    bbe4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bbe8:	mov	x0, x28
    bbec:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bbf0:	add	x1, x1, #0x0
    bbf4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bbf8:	mov	x1, x28
    bbfc:	mov	x0, x27
    bc00:	mov	x8, x24
    bc04:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bc08:	ldr	x1, [x19]
    bc0c:	mov	x8, x26
    bc10:	mov	x0, x19
    bc14:	ldr	x1, [x1, #40]
    bc18:	blr	x1
    bc1c:	mov	x1, x26
    bc20:	mov	x0, x25
    bc24:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bc28:	mov	x8, x22
    bc2c:	mov	x1, x25
    bc30:	mov	x0, x24
    bc34:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bc38:	mov	x0, x23
    bc3c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bc40:	add	x1, x1, #0x0
    bc44:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bc48:	mov	x1, x23
    bc4c:	mov	x0, x22
    bc50:	mov	x8, x21
    bc54:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bc58:	ldp	x4, x3, [sp, #152]
    bc5c:	mov	x2, x21
    bc60:	mov	x0, x4
    bc64:	mov	x1, x3
    bc68:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    bc6c:	ldp	x21, x22, [sp, #32]
    bc70:	b	b8e8 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x130>
    bc74:	cbz	w20, bc6c <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x4b4>
    bc78:	mov	x0, x24
    bc7c:	b	ba98 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x2e0>
    bc80:	cbz	w20, bc6c <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x4b4>
    bc84:	add	x20, sp, #0x1c0
    bc88:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bc8c:	mov	x0, x20
    bc90:	add	x1, x1, #0x0
    bc94:	stp	x25, x26, [sp, #64]
    bc98:	add	x21, sp, #0x1d8
    bc9c:	ldr	w25, [x24, #16]
    bca0:	stp	x27, x28, [sp, #80]
    bca4:	add	x19, sp, #0x1f0
    bca8:	ldr	x24, [x24, #8]
    bcac:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bcb0:	ldp	x3, x2, [x23, #24]
    bcb4:	mov	x0, x21
    bcb8:	add	x1, sp, #0x1a8
    bcbc:	stp	x3, x2, [sp, #424]
    bcc0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bcc4:	mov	x8, x19
    bcc8:	mov	x0, x20
    bccc:	mov	x1, x21
    bcd0:	add	x20, sp, #0x210
    bcd4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bcd8:	mov	x0, x20
    bcdc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bce0:	add	x1, x1, #0x0
    bce4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bce8:	mov	x8, x22
    bcec:	mov	x1, x20
    bcf0:	mov	x0, x19
    bcf4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bcf8:	mov	x2, x22
    bcfc:	mov	x0, x24
    bd00:	mov	x1, x25
    bd04:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    bd08:	cbz	x22, bd98 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x5e0>
    bd0c:	ldrb	w0, [x22, #8]
    bd10:	cmp	w0, #0x8
    bd14:	b.ne	b8c4 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x10c>  // b.any
    bd18:	ldr	x1, [x22]
    bd1c:	add	x19, sp, #0x230
    bd20:	mov	x8, x19
    bd24:	mov	x0, x22
    bd28:	add	x19, x19, #0x10
    bd2c:	ldr	x1, [x1, #40]
    bd30:	blr	x1
    bd34:	ldr	x0, [sp, #560]
    bd38:	ldr	x1, [sp, #568]
    bd3c:	bl	a360 <_ZN4llvm10StringInit3getENS_9StringRefE>
    bd40:	mov	x20, x0
    bd44:	ldr	x0, [sp, #560]
    bd48:	cmp	x0, x19
    bd4c:	b.eq	b9d4 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x21c>  // b.none
    bd50:	bl	0 <_ZdlPv>
    bd54:	ldp	x21, x22, [sp, #32]
    bd58:	b	b8ec <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x134>
    bd5c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bd60:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bd64:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bd68:	add	x3, x3, #0x0
    bd6c:	add	x1, x1, #0x0
    bd70:	add	x0, x0, #0x0
    bd74:	mov	w2, #0x108                 	// #264
    bd78:	stp	x21, x22, [sp, #32]
    bd7c:	stp	x25, x26, [sp, #64]
    bd80:	stp	x27, x28, [sp, #80]
    bd84:	bl	0 <__assert_fail>
    bd88:	stp	x21, x22, [sp, #32]
    bd8c:	stp	x25, x26, [sp, #64]
    bd90:	stp	x27, x28, [sp, #80]
    bd94:	bl	7a0 <_ZN4llvm13isa_impl_wrapINS_9ListRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>
    bd98:	stp	x25, x26, [sp, #64]
    bd9c:	stp	x27, x28, [sp, #80]
    bda0:	bl	9b0 <_ZN4llvm3isaINS_7IntInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    bda4:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bda8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bdac:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bdb0:	add	x3, x3, #0x0
    bdb4:	add	x1, x1, #0x0
    bdb8:	add	x0, x0, #0x0
    bdbc:	mov	w2, #0x2d8                 	// #728
    bdc0:	stp	x25, x26, [sp, #64]
    bdc4:	stp	x27, x28, [sp, #80]
    bdc8:	bl	0 <__assert_fail>
    bdcc:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bdd0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bdd4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bdd8:	add	x3, x3, #0x0
    bddc:	add	x1, x1, #0x0
    bde0:	add	x0, x0, #0x0
    bde4:	mov	w2, #0x305                 	// #773
    bde8:	stp	x21, x22, [sp, #32]
    bdec:	stp	x25, x26, [sp, #64]
    bdf0:	stp	x27, x28, [sp, #80]
    bdf4:	bl	0 <__assert_fail>
    bdf8:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bdfc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    be00:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    be04:	add	x3, x3, #0x0
    be08:	add	x1, x1, #0x0
    be0c:	add	x0, x0, #0x0
    be10:	mov	w2, #0x2fe                 	// #766
    be14:	stp	x21, x22, [sp, #32]
    be18:	stp	x25, x26, [sp, #64]
    be1c:	stp	x27, x28, [sp, #80]
    be20:	bl	0 <__assert_fail>
    be24:	nop

000000000000be28 <_ZNK4llvm8UnOpInit17resolveReferencesERNS_8ResolverE>:
    be28:	stp	x29, x30, [sp, #-32]!
    be2c:	mov	x29, sp
    be30:	stp	x19, x20, [sp, #16]
    be34:	mov	x19, x0
    be38:	mov	x20, x1
    be3c:	ldr	x0, [x0, #32]
    be40:	ldr	x2, [x0]
    be44:	ldr	x2, [x2, #96]
    be48:	blr	x2
    be4c:	mov	x1, x0
    be50:	ldr	x2, [x19, #32]
    be54:	cmp	x2, x0
    be58:	b.eq	be7c <_ZNK4llvm8UnOpInit17resolveReferencesERNS_8ResolverE+0x54>  // b.none
    be5c:	ldrb	w0, [x19, #9]
    be60:	ldr	x2, [x19, #16]
    be64:	bl	6a48 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE>
    be68:	ldrb	w2, [x20, #16]
    be6c:	ldr	x1, [x20, #8]
    be70:	ldp	x19, x20, [sp, #16]
    be74:	ldp	x29, x30, [sp], #32
    be78:	b	b7b8 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb>
    be7c:	ldrb	w0, [x20, #16]
    be80:	cbz	w0, be8c <_ZNK4llvm8UnOpInit17resolveReferencesERNS_8ResolverE+0x64>
    be84:	ldrb	w0, [x19, #9]
    be88:	cbz	w0, be60 <_ZNK4llvm8UnOpInit17resolveReferencesERNS_8ResolverE+0x38>
    be8c:	mov	x0, x19
    be90:	ldp	x19, x20, [sp, #16]
    be94:	ldp	x29, x30, [sp], #32
    be98:	ret
    be9c:	nop

000000000000bea0 <_ZNK4llvm9TypedInit9getCastToEPNS_5RecTyE>:
    bea0:	stp	x29, x30, [sp, #-48]!
    bea4:	mov	x29, sp
    bea8:	stp	x19, x20, [sp, #16]
    beac:	mov	x19, x0
    beb0:	ldr	x0, [x0, #16]
    beb4:	str	x21, [sp, #32]
    beb8:	cmp	x1, x0
    bebc:	b.eq	bf60 <_ZNK4llvm9TypedInit9getCastToEPNS_5RecTyE+0xc0>  // b.none
    bec0:	ldr	x2, [x0]
    bec4:	mov	x20, x1
    bec8:	ldr	x2, [x2, #32]
    becc:	blr	x2
    bed0:	tst	w0, #0xff
    bed4:	b.ne	bf60 <_ZNK4llvm9TypedInit9getCastToEPNS_5RecTyE+0xc0>  // b.any
    bed8:	ldr	x2, [x19]
    bedc:	mov	x1, x20
    bee0:	mov	x0, x19
    bee4:	ldr	x2, [x2, #64]
    bee8:	blr	x2
    beec:	mov	x21, x0
    bef0:	cbz	x0, bf1c <_ZNK4llvm9TypedInit9getCastToEPNS_5RecTyE+0x7c>
    bef4:	ldrb	w0, [x0, #8]
    bef8:	sub	w0, w0, #0x1
    befc:	and	w0, w0, #0xff
    bf00:	cmp	w0, #0x16
    bf04:	b.ls	bf78 <_ZNK4llvm9TypedInit9getCastToEPNS_5RecTyE+0xd8>  // b.plast
    bf08:	mov	x0, x21
    bf0c:	ldp	x19, x20, [sp, #16]
    bf10:	ldr	x21, [sp, #32]
    bf14:	ldp	x29, x30, [sp], #48
    bf18:	ret
    bf1c:	ldr	x0, [x19, #16]
    bf20:	mov	x1, x20
    bf24:	ldr	x2, [x0]
    bf28:	ldr	x2, [x2, #24]
    bf2c:	blr	x2
    bf30:	tst	w0, #0xff
    bf34:	b.eq	bf08 <_ZNK4llvm9TypedInit9getCastToEPNS_5RecTyE+0x68>  // b.none
    bf38:	mov	x2, x20
    bf3c:	mov	x1, x19
    bf40:	mov	w0, #0x0                   	// #0
    bf44:	bl	6a48 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE>
    bf48:	ldp	x19, x20, [sp, #16]
    bf4c:	mov	w2, #0x0                   	// #0
    bf50:	ldr	x21, [sp, #32]
    bf54:	mov	x1, #0x0                   	// #0
    bf58:	ldp	x29, x30, [sp], #48
    bf5c:	b	b7b8 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb>
    bf60:	mov	x21, x19
    bf64:	mov	x0, x21
    bf68:	ldp	x19, x20, [sp, #16]
    bf6c:	ldr	x21, [sp, #32]
    bf70:	ldp	x29, x30, [sp], #48
    bf74:	ret
    bf78:	ldr	x0, [x21, #16]
    bf7c:	mov	x1, x20
    bf80:	ldr	x2, [x0]
    bf84:	ldr	x2, [x2, #32]
    bf88:	blr	x2
    bf8c:	tst	w0, #0xff
    bf90:	b.ne	bf08 <_ZNK4llvm9TypedInit9getCastToEPNS_5RecTyE+0x68>  // b.any
    bf94:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bf98:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bf9c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bfa0:	add	x3, x3, #0x0
    bfa4:	add	x1, x1, #0x0
    bfa8:	add	x0, x0, #0x0
    bfac:	mov	w2, #0x5c2                 	// #1474
    bfb0:	bl	0 <__assert_fail>
    bfb4:	nop

000000000000bfb8 <_ZNK4llvm6Record12getValueInitENS_9StringRefE>:
    bfb8:	stp	x29, x30, [sp, #-288]!
    bfbc:	mov	x29, sp
    bfc0:	stp	x19, x20, [sp, #16]
    bfc4:	mov	x19, x0
    bfc8:	mov	x0, x1
    bfcc:	stp	x1, x2, [sp, #80]
    bfd0:	mov	x1, x2
    bfd4:	bl	a360 <_ZN4llvm10StringInit3getENS_9StringRefE>
    bfd8:	ldr	w2, [x19, #80]
    bfdc:	mov	w3, #0x18                  	// #24
    bfe0:	ldr	x1, [x19, #72]
    bfe4:	umaddl	x2, w2, w3, x1
    bfe8:	cmp	x1, x2
    bfec:	b.ne	c000 <_ZNK4llvm6Record12getValueInitENS_9StringRefE+0x48>  // b.any
    bff0:	b	c020 <_ZNK4llvm6Record12getValueInitENS_9StringRefE+0x68>
    bff4:	add	x1, x1, #0x18
    bff8:	cmp	x2, x1
    bffc:	b.eq	c020 <_ZNK4llvm6Record12getValueInitENS_9StringRefE+0x68>  // b.none
    c000:	ldr	x3, [x1]
    c004:	cmp	x0, x3
    c008:	b.ne	bff4 <_ZNK4llvm6Record12getValueInitENS_9StringRefE+0x3c>  // b.any
    c00c:	ldr	x0, [x1, #16]
    c010:	cbz	x0, c020 <_ZNK4llvm6Record12getValueInitENS_9StringRefE+0x68>
    c014:	ldp	x19, x20, [sp, #16]
    c018:	ldp	x29, x30, [sp], #288
    c01c:	ret
    c020:	stp	x23, x24, [sp, #48]
    c024:	add	x20, sp, #0xd8
    c028:	ldr	w23, [x19, #16]
    c02c:	ldp	x0, x24, [x19]
    c030:	stp	x21, x22, [sp, #32]
    c034:	add	x22, sp, #0x78
    c038:	str	x25, [sp, #64]
    c03c:	add	x25, sp, #0x90
    c040:	add	x21, sp, #0xa8
    c044:	add	x19, sp, #0xc0
    c048:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c04c:	mov	x3, x0
    c050:	add	x2, sp, #0x68
    c054:	mov	x0, x22
    c058:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c05c:	add	x1, x1, #0x0
    c060:	ldp	x4, x3, [x3, #24]
    c064:	stp	x4, x3, [sp, #104]
    c068:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c06c:	mov	x0, x25
    c070:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c074:	add	x1, x1, #0x0
    c078:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c07c:	mov	x8, x21
    c080:	mov	x0, x22
    c084:	mov	x1, x25
    c088:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c08c:	mov	x0, x19
    c090:	add	x1, sp, #0x50
    c094:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c098:	mov	x22, x19
    c09c:	mov	x8, x20
    c0a0:	add	x19, sp, #0xf0
    c0a4:	mov	x0, x21
    c0a8:	mov	x1, x22
    c0ac:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c0b0:	mov	x21, x19
    c0b4:	mov	x0, x19
    c0b8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c0bc:	add	x19, sp, #0x108
    c0c0:	add	x1, x1, #0x0
    c0c4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c0c8:	mov	x8, x19
    c0cc:	mov	x1, x21
    c0d0:	mov	x0, x20
    c0d4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c0d8:	mov	x2, x19
    c0dc:	mov	x0, x24
    c0e0:	mov	x1, x23
    c0e4:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>

000000000000c0e8 <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE>:
    c0e8:	stp	x29, x30, [sp, #-304]!
    c0ec:	mov	x29, sp
    c0f0:	stp	x19, x20, [sp, #16]
    c0f4:	mov	x19, x0
    c0f8:	mov	x0, x1
    c0fc:	stp	x21, x22, [sp, #32]
    c100:	stp	x23, x24, [sp, #48]
    c104:	str	x25, [sp, #64]
    c108:	stp	x1, x2, [sp, #96]
    c10c:	mov	x1, x2
    c110:	bl	a360 <_ZN4llvm10StringInit3getENS_9StringRefE>
    c114:	ldr	w2, [x19, #80]
    c118:	mov	w3, #0x18                  	// #24
    c11c:	ldr	x1, [x19, #72]
    c120:	umaddl	x2, w2, w3, x1
    c124:	cmp	x1, x2
    c128:	b.ne	c13c <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE+0x54>  // b.any
    c12c:	b	c230 <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE+0x148>
    c130:	add	x1, x1, #0x18
    c134:	cmp	x2, x1
    c138:	b.eq	c230 <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE+0x148>  // b.none
    c13c:	ldr	x3, [x1]
    c140:	cmp	x0, x3
    c144:	b.ne	c130 <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE+0x48>  // b.any
    c148:	ldr	x0, [x1, #16]
    c14c:	cbz	x0, c230 <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE+0x148>
    c150:	ldrb	w1, [x0, #8]
    c154:	cmp	w1, #0x9
    c158:	b.eq	c218 <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE+0x130>  // b.none
    c15c:	ldp	x0, x25, [x19]
    c160:	add	x22, sp, #0x88
    c164:	ldr	w24, [x19, #16]
    c168:	add	x23, sp, #0xa0
    c16c:	add	x21, sp, #0xb8
    c170:	add	x19, sp, #0xd0
    c174:	add	x20, sp, #0xe8
    c178:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c17c:	mov	x3, x0
    c180:	add	x2, sp, #0x78
    c184:	mov	x0, x22
    c188:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c18c:	add	x1, x1, #0x0
    c190:	ldp	x4, x3, [x3, #24]
    c194:	stp	x4, x3, [sp, #120]
    c198:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c19c:	mov	x0, x23
    c1a0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c1a4:	add	x1, x1, #0x0
    c1a8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c1ac:	mov	x8, x21
    c1b0:	mov	x0, x22
    c1b4:	mov	x1, x23
    c1b8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c1bc:	mov	x0, x19
    c1c0:	add	x1, sp, #0x60
    c1c4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c1c8:	mov	x22, x19
    c1cc:	mov	x8, x20
    c1d0:	add	x19, sp, #0x100
    c1d4:	mov	x0, x21
    c1d8:	mov	x1, x22
    c1dc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c1e0:	mov	x21, x19
    c1e4:	mov	x0, x19
    c1e8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c1ec:	add	x19, sp, #0x118
    c1f0:	add	x1, x1, #0x0
    c1f4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c1f8:	mov	x8, x19
    c1fc:	mov	x1, x21
    c200:	mov	x0, x20
    c204:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c208:	mov	x2, x19
    c20c:	mov	x0, x25
    c210:	mov	x1, x24
    c214:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    c218:	ldp	x19, x20, [sp, #16]
    c21c:	ldp	x21, x22, [sp, #32]
    c220:	ldp	x23, x24, [sp, #48]
    c224:	ldr	x25, [sp, #64]
    c228:	ldp	x29, x30, [sp], #304
    c22c:	ret
    c230:	ldp	x0, x25, [x19]
    c234:	add	x20, sp, #0x88
    c238:	ldr	w24, [x19, #16]
    c23c:	add	x23, sp, #0xa0
    c240:	add	x21, sp, #0xb8
    c244:	add	x22, sp, #0xd0
    c248:	add	x19, sp, #0xe8
    c24c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c250:	mov	x3, x0
    c254:	add	x2, sp, #0x78
    c258:	mov	x0, x20
    c25c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c260:	add	x1, x1, #0x0
    c264:	ldp	x4, x3, [x3, #24]
    c268:	stp	x4, x3, [sp, #120]
    c26c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c270:	mov	x0, x23
    c274:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c278:	add	x1, x1, #0x0
    c27c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c280:	mov	x8, x21
    c284:	mov	x0, x20
    c288:	mov	x1, x23
    c28c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c290:	mov	x0, x22
    c294:	add	x1, sp, #0x60
    c298:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c29c:	add	x20, sp, #0x100
    c2a0:	mov	x8, x19
    c2a4:	mov	x1, x22
    c2a8:	mov	x0, x21
    c2ac:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c2b0:	mov	x0, x20
    c2b4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c2b8:	add	x1, x1, #0x0
    c2bc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c2c0:	add	x0, sp, #0x118
    c2c4:	mov	x1, x20
    c2c8:	mov	x8, x0
    c2cc:	str	x0, [sp, #88]
    c2d0:	mov	x0, x19
    c2d4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c2d8:	ldr	x2, [sp, #88]
    c2dc:	mov	x0, x25
    c2e0:	mov	x1, x24
    c2e4:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>

000000000000c2e8 <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE>:
    c2e8:	stp	x29, x30, [sp, #-288]!
    c2ec:	mov	x29, sp
    c2f0:	stp	x19, x20, [sp, #16]
    c2f4:	mov	x20, x8
    c2f8:	stp	x21, x22, [sp, #32]
    c2fc:	stp	x23, x24, [sp, #48]
    c300:	mov	x23, x0
    c304:	stp	x1, x2, [sp, #80]
    c308:	bl	c0e8 <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE>
    c30c:	ldr	w21, [x0, #32]
    c310:	add	x19, x0, #0x28
    c314:	stp	xzr, xzr, [x20]
    c318:	str	xzr, [x20, #16]
    c31c:	add	x21, x19, x21, lsl #3
    c320:	cmp	x21, x19
    c324:	b.eq	c424 <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE+0x13c>  // b.none
    c328:	add	x22, sp, #0x108
    c32c:	nop
    c330:	ldr	x2, [x19]
    c334:	cbz	x2, c43c <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE+0x154>
    c338:	ldrb	w3, [x2, #8]
    c33c:	cmp	w3, #0x6
    c340:	b.eq	c404 <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE+0x11c>  // b.none
    c344:	ldr	x0, [x23]
    c348:	add	x21, sp, #0x78
    c34c:	ldr	w24, [x23, #16]
    c350:	add	x20, sp, #0x90
    c354:	str	x25, [sp, #64]
    c358:	add	x19, sp, #0xa8
    c35c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c360:	mov	x3, x0
    c364:	add	x2, sp, #0x68
    c368:	mov	x0, x21
    c36c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c370:	add	x1, x1, #0x0
    c374:	ldp	x4, x3, [x3, #24]
    c378:	stp	x4, x3, [sp, #104]
    c37c:	add	x22, sp, #0xc0
    c380:	ldr	x25, [x23, #8]
    c384:	mov	x23, x20
    c388:	add	x20, sp, #0xd8
    c38c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c390:	mov	x0, x23
    c394:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c398:	add	x1, x1, #0x0
    c39c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c3a0:	mov	x8, x19
    c3a4:	mov	x0, x21
    c3a8:	mov	x1, x23
    c3ac:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c3b0:	mov	x0, x22
    c3b4:	add	x1, sp, #0x50
    c3b8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c3bc:	add	x21, sp, #0xf0
    c3c0:	mov	x8, x20
    c3c4:	mov	x0, x19
    c3c8:	mov	x1, x22
    c3cc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c3d0:	mov	x0, x21
    c3d4:	add	x19, sp, #0x108
    c3d8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c3dc:	add	x1, x1, #0x0
    c3e0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c3e4:	mov	x8, x19
    c3e8:	mov	x1, x21
    c3ec:	mov	x0, x20
    c3f0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c3f4:	mov	x2, x19
    c3f8:	mov	x0, x25
    c3fc:	mov	x1, x24
    c400:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    c404:	ldr	x2, [x2, #24]
    c408:	add	x19, x19, #0x8
    c40c:	mov	x1, x22
    c410:	mov	x0, x20
    c414:	str	x2, [sp, #264]
    c418:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c41c:	cmp	x21, x19
    c420:	b.ne	c330 <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE+0x48>  // b.any
    c424:	mov	x0, x20
    c428:	ldp	x19, x20, [sp, #16]
    c42c:	ldp	x21, x22, [sp, #32]
    c430:	ldp	x23, x24, [sp, #48]
    c434:	ldp	x29, x30, [sp], #288
    c438:	ret
    c43c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c440:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c444:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c448:	add	x3, x3, #0x0
    c44c:	add	x1, x1, #0x0
    c450:	add	x0, x0, #0x0
    c454:	mov	w2, #0x69                  	// #105
    c458:	str	x25, [sp, #64]
    c45c:	bl	0 <__assert_fail>

000000000000c460 <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE>:
    c460:	stp	x29, x30, [sp, #-464]!
    c464:	mov	x29, sp
    c468:	stp	x21, x22, [sp, #32]
    c46c:	mov	x21, x8
    c470:	mov	x22, x0
    c474:	stp	x19, x20, [sp, #16]
    c478:	stp	x23, x24, [sp, #48]
    c47c:	stp	x1, x2, [sp, #128]
    c480:	bl	c0e8 <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE>
    c484:	ldr	w23, [x0, #32]
    c488:	add	x20, x0, #0x28
    c48c:	stp	xzr, xzr, [x21]
    c490:	str	xzr, [x21, #16]
    c494:	add	x23, x20, x23, lsl #3
    c498:	cmp	x23, x20
    c49c:	b.eq	c618 <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE+0x1b8>  // b.none
    c4a0:	add	x24, sp, #0x1b0
    c4a4:	stp	x25, x26, [sp, #64]
    c4a8:	stp	x27, x28, [sp, #80]
    c4ac:	nop
    c4b0:	ldr	x19, [x20]
    c4b4:	cbz	x19, c640 <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE+0x1e0>
    c4b8:	ldrb	w0, [x19, #8]
    c4bc:	cmp	w0, #0x8
    c4c0:	b.eq	c5e8 <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE+0x188>  // b.none
    c4c4:	ldr	w3, [x22, #16]
    c4c8:	add	x27, sp, #0xa8
    c4cc:	ldr	x4, [x22, #8]
    c4d0:	mov	x0, x27
    c4d4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c4d8:	add	x1, x1, #0x0
    c4dc:	stp	x4, x3, [sp, #112]
    c4e0:	add	x28, sp, #0xc0
    c4e4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c4e8:	ldr	x0, [x22]
    c4ec:	add	x25, sp, #0xd8
    c4f0:	add	x26, sp, #0xf0
    c4f4:	add	x23, sp, #0x108
    c4f8:	add	x24, sp, #0x120
    c4fc:	add	x21, sp, #0x138
    c500:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c504:	mov	x2, x0
    c508:	add	x1, sp, #0x98
    c50c:	mov	x0, x28
    c510:	add	x22, sp, #0x150
    c514:	add	x20, sp, #0x168
    c518:	ldp	x5, x2, [x2, #24]
    c51c:	stp	x5, x2, [sp, #152]
    c520:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c524:	mov	x8, x25
    c528:	mov	x1, x28
    c52c:	mov	x0, x27
    c530:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c534:	mov	x0, x26
    c538:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c53c:	add	x1, x1, #0x0
    c540:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c544:	mov	x8, x23
    c548:	mov	x1, x26
    c54c:	mov	x0, x25
    c550:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c554:	mov	x0, x24
    c558:	add	x1, sp, #0x80
    c55c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c560:	mov	x8, x21
    c564:	mov	x1, x24
    c568:	mov	x0, x23
    c56c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c570:	mov	x0, x22
    c574:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c578:	add	x1, x1, #0x0
    c57c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c580:	mov	x1, x22
    c584:	mov	x0, x21
    c588:	mov	x8, x20
    c58c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c590:	ldr	x1, [x19]
    c594:	add	x0, sp, #0x1b0
    c598:	str	x0, [sp, #96]
    c59c:	mov	x8, x0
    c5a0:	mov	x0, x19
    c5a4:	ldr	x1, [x1, #40]
    c5a8:	blr	x1
    c5ac:	ldr	x1, [sp, #96]
    c5b0:	add	x0, sp, #0x180
    c5b4:	str	x0, [sp, #96]
    c5b8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c5bc:	ldr	x1, [sp, #96]
    c5c0:	add	x0, sp, #0x198
    c5c4:	mov	x8, x0
    c5c8:	str	x0, [sp, #104]
    c5cc:	mov	x0, x20
    c5d0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c5d4:	ldp	x2, x4, [sp, #104]
    c5d8:	ldr	x3, [sp, #120]
    c5dc:	mov	x1, x3
    c5e0:	mov	x0, x4
    c5e4:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    c5e8:	ldp	x1, x0, [x21, #8]
    c5ec:	ldr	x3, [x19, #24]
    c5f0:	str	x3, [sp, #432]
    c5f4:	cmp	x1, x0
    c5f8:	b.eq	c630 <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE+0x1d0>  // b.none
    c5fc:	str	x3, [x1], #8
    c600:	str	x1, [x21, #8]
    c604:	add	x20, x20, #0x8
    c608:	cmp	x23, x20
    c60c:	b.ne	c4b0 <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE+0x50>  // b.any
    c610:	ldp	x25, x26, [sp, #64]
    c614:	ldp	x27, x28, [sp, #80]
    c618:	mov	x0, x21
    c61c:	ldp	x19, x20, [sp, #16]
    c620:	ldp	x21, x22, [sp, #32]
    c624:	ldp	x23, x24, [sp, #48]
    c628:	ldp	x29, x30, [sp], #464
    c62c:	ret
    c630:	mov	x2, x24
    c634:	mov	x0, x21
    c638:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c63c:	b	c604 <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE+0x1a4>
    c640:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c644:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c648:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c64c:	add	x3, x3, #0x0
    c650:	add	x1, x1, #0x0
    c654:	add	x0, x0, #0x0
    c658:	mov	w2, #0x69                  	// #105
    c65c:	bl	0 <__assert_fail>

000000000000c660 <_ZNK4llvm6Record23getValueAsListOfStringsENS_9StringRefE>:
    c660:	stp	x29, x30, [sp, #-464]!
    c664:	mov	x29, sp
    c668:	stp	x21, x22, [sp, #32]
    c66c:	mov	x21, x8
    c670:	mov	x22, x0
    c674:	stp	x19, x20, [sp, #16]
    c678:	stp	x23, x24, [sp, #48]
    c67c:	stp	x1, x2, [sp, #128]
    c680:	bl	c0e8 <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE>
    c684:	ldr	w23, [x0, #32]
    c688:	add	x20, x0, #0x28
    c68c:	stp	xzr, xzr, [x21]
    c690:	str	xzr, [x21, #16]
    c694:	add	x23, x20, x23, lsl #3
    c698:	cmp	x23, x20
    c69c:	b.eq	c824 <_ZNK4llvm6Record23getValueAsListOfStringsENS_9StringRefE+0x1c4>  // b.none
    c6a0:	add	x24, sp, #0x1b0
    c6a4:	stp	x25, x26, [sp, #64]
    c6a8:	stp	x27, x28, [sp, #80]
    c6ac:	nop
    c6b0:	ldr	x19, [x20]
    c6b4:	cbz	x19, c84c <_ZNK4llvm6Record23getValueAsListOfStringsENS_9StringRefE+0x1ec>
    c6b8:	ldrb	w0, [x19, #8]
    c6bc:	cmp	w0, #0x12
    c6c0:	b.eq	c7f0 <_ZNK4llvm6Record23getValueAsListOfStringsENS_9StringRefE+0x190>  // b.none
    c6c4:	ldr	w3, [x22, #16]
    c6c8:	add	x2, sp, #0xa8
    c6cc:	ldr	x4, [x22, #8]
    c6d0:	mov	x0, x2
    c6d4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c6d8:	add	x1, x1, #0x0
    c6dc:	stp	x4, x3, [sp, #104]
    c6e0:	add	x21, sp, #0xc0
    c6e4:	add	x20, sp, #0xd8
    c6e8:	str	x2, [sp, #120]
    c6ec:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c6f0:	ldr	x0, [x22]
    c6f4:	add	x28, sp, #0xf0
    c6f8:	add	x26, sp, #0x108
    c6fc:	add	x27, sp, #0x120
    c700:	add	x24, sp, #0x138
    c704:	add	x25, sp, #0x150
    c708:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c70c:	mov	x5, x0
    c710:	add	x1, sp, #0x98
    c714:	mov	x0, x21
    c718:	str	x0, [sp, #96]
    c71c:	add	x21, sp, #0x168
    c720:	ldp	x6, x5, [x5, #24]
    c724:	stp	x6, x5, [sp, #152]
    c728:	add	x23, sp, #0x1b0
    c72c:	add	x22, sp, #0x180
    c730:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c734:	ldr	x2, [sp, #120]
    c738:	mov	x8, x20
    c73c:	ldr	x0, [sp, #96]
    c740:	mov	x1, x0
    c744:	mov	x0, x2
    c748:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c74c:	mov	x0, x28
    c750:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c754:	add	x1, x1, #0x0
    c758:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c75c:	mov	x8, x26
    c760:	mov	x0, x20
    c764:	mov	x1, x28
    c768:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c76c:	mov	x0, x27
    c770:	add	x1, sp, #0x80
    c774:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c778:	add	x20, sp, #0x198
    c77c:	mov	x8, x24
    c780:	mov	x1, x27
    c784:	mov	x0, x26
    c788:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c78c:	mov	x0, x25
    c790:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c794:	add	x1, x1, #0x0
    c798:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c79c:	mov	x1, x25
    c7a0:	mov	x0, x24
    c7a4:	mov	x8, x21
    c7a8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c7ac:	ldr	x1, [x19]
    c7b0:	mov	x8, x23
    c7b4:	mov	x0, x19
    c7b8:	ldr	x1, [x1, #40]
    c7bc:	blr	x1
    c7c0:	mov	x1, x23
    c7c4:	mov	x0, x22
    c7c8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c7cc:	mov	x1, x22
    c7d0:	mov	x0, x21
    c7d4:	mov	x8, x20
    c7d8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c7dc:	ldp	x4, x3, [sp, #104]
    c7e0:	mov	x2, x20
    c7e4:	mov	x0, x4
    c7e8:	mov	x1, x3
    c7ec:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    c7f0:	ldp	x1, x0, [x21, #8]
    c7f4:	ldp	x4, x3, [x19, #24]
    c7f8:	stp	x4, x3, [sp, #432]
    c7fc:	cmp	x1, x0
    c800:	b.eq	c83c <_ZNK4llvm6Record23getValueAsListOfStringsENS_9StringRefE+0x1dc>  // b.none
    c804:	stp	x4, x3, [x1]
    c808:	add	x0, x1, #0x10
    c80c:	str	x0, [x21, #8]
    c810:	add	x20, x20, #0x8
    c814:	cmp	x23, x20
    c818:	b.ne	c6b0 <_ZNK4llvm6Record23getValueAsListOfStringsENS_9StringRefE+0x50>  // b.any
    c81c:	ldp	x25, x26, [sp, #64]
    c820:	ldp	x27, x28, [sp, #80]
    c824:	mov	x0, x21
    c828:	ldp	x19, x20, [sp, #16]
    c82c:	ldp	x21, x22, [sp, #32]
    c830:	ldp	x23, x24, [sp, #48]
    c834:	ldp	x29, x30, [sp], #464
    c838:	ret
    c83c:	mov	x2, x24
    c840:	mov	x0, x21
    c844:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c848:	b	c810 <_ZNK4llvm6Record23getValueAsListOfStringsENS_9StringRefE+0x1b0>
    c84c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c850:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c854:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c858:	add	x3, x3, #0x0
    c85c:	add	x1, x1, #0x0
    c860:	add	x0, x0, #0x0
    c864:	mov	w2, #0x69                  	// #105
    c868:	bl	0 <__assert_fail>
    c86c:	nop

000000000000c870 <_ZNK4llvm6Record18getValueAsBitsInitENS_9StringRefE>:
    c870:	stp	x29, x30, [sp, #-320]!
    c874:	mov	x29, sp
    c878:	stp	x19, x20, [sp, #16]
    c87c:	mov	x19, x0
    c880:	stp	x21, x22, [sp, #32]
    c884:	stp	x23, x24, [sp, #48]
    c888:	str	x25, [sp, #64]
    c88c:	str	x0, [sp, #88]
    c890:	mov	x0, x1
    c894:	stp	x1, x2, [sp, #96]
    c898:	stp	x1, x2, [sp, #112]
    c89c:	mov	x1, x2
    c8a0:	bl	a360 <_ZN4llvm10StringInit3getENS_9StringRefE>
    c8a4:	ldr	w1, [x19, #80]
    c8a8:	mov	w3, #0x18                  	// #24
    c8ac:	str	x0, [sp, #88]
    c8b0:	ldr	x0, [x19, #72]
    c8b4:	ldr	x2, [sp, #88]
    c8b8:	umaddl	x1, w1, w3, x0
    c8bc:	cmp	x0, x1
    c8c0:	b.ne	c8d4 <_ZNK4llvm6Record18getValueAsBitsInitENS_9StringRefE+0x64>  // b.any
    c8c4:	b	c9c8 <_ZNK4llvm6Record18getValueAsBitsInitENS_9StringRefE+0x158>
    c8c8:	add	x0, x0, #0x18
    c8cc:	cmp	x1, x0
    c8d0:	b.eq	c9c8 <_ZNK4llvm6Record18getValueAsBitsInitENS_9StringRefE+0x158>  // b.none
    c8d4:	ldr	x3, [x0]
    c8d8:	cmp	x2, x3
    c8dc:	b.ne	c8c8 <_ZNK4llvm6Record18getValueAsBitsInitENS_9StringRefE+0x58>  // b.any
    c8e0:	ldr	x0, [x0, #16]
    c8e4:	cbz	x0, c9c8 <_ZNK4llvm6Record18getValueAsBitsInitENS_9StringRefE+0x158>
    c8e8:	ldrb	w1, [x0, #8]
    c8ec:	cmp	w1, #0x3
    c8f0:	b.eq	c9b0 <_ZNK4llvm6Record18getValueAsBitsInitENS_9StringRefE+0x140>  // b.none
    c8f4:	ldp	x0, x25, [x19]
    c8f8:	add	x22, sp, #0x98
    c8fc:	ldr	w24, [x19, #16]
    c900:	add	x23, sp, #0xb0
    c904:	add	x21, sp, #0xc8
    c908:	add	x19, sp, #0xe0
    c90c:	add	x20, sp, #0xf8
    c910:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c914:	str	x0, [sp, #88]
    c918:	ldp	x4, x3, [x0, #24]
    c91c:	add	x2, sp, #0x88
    c920:	mov	x0, x22
    c924:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c928:	add	x1, x1, #0x0
    c92c:	stp	x4, x3, [sp, #136]
    c930:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c934:	mov	x0, x23
    c938:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c93c:	add	x1, x1, #0x0
    c940:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c944:	mov	x8, x21
    c948:	mov	x0, x22
    c94c:	mov	x1, x23
    c950:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c954:	mov	x0, x19
    c958:	mov	x22, x19
    c95c:	add	x1, sp, #0x70
    c960:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c964:	add	x19, sp, #0x110
    c968:	mov	x0, x21
    c96c:	mov	x1, x22
    c970:	mov	x8, x20
    c974:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c978:	mov	x21, x19
    c97c:	mov	x0, x19
    c980:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c984:	add	x19, sp, #0x128
    c988:	add	x1, x1, #0x0
    c98c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c990:	mov	x8, x19
    c994:	mov	x1, x21
    c998:	mov	x0, x20
    c99c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c9a0:	mov	x2, x19
    c9a4:	mov	x0, x25
    c9a8:	mov	x1, x24
    c9ac:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    c9b0:	ldp	x19, x20, [sp, #16]
    c9b4:	ldp	x21, x22, [sp, #32]
    c9b8:	ldp	x23, x24, [sp, #48]
    c9bc:	ldr	x25, [sp, #64]
    c9c0:	ldp	x29, x30, [sp], #320
    c9c4:	ret
    c9c8:	ldp	x0, x25, [x19]
    c9cc:	add	x21, sp, #0x98
    c9d0:	ldr	w24, [x19, #16]
    c9d4:	add	x23, sp, #0xb0
    c9d8:	add	x19, sp, #0xc8
    c9dc:	add	x22, sp, #0xe0
    c9e0:	add	x20, sp, #0xf8
    c9e4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c9e8:	str	x0, [sp, #88]
    c9ec:	ldp	x4, x3, [x0, #24]
    c9f0:	add	x2, sp, #0x88
    c9f4:	mov	x0, x21
    c9f8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c9fc:	add	x1, x1, #0x0
    ca00:	stp	x4, x3, [sp, #136]
    ca04:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ca08:	mov	x0, x23
    ca0c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ca10:	add	x1, x1, #0x0
    ca14:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ca18:	mov	x8, x19
    ca1c:	mov	x0, x21
    ca20:	mov	x1, x23
    ca24:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ca28:	mov	x0, x22
    ca2c:	add	x1, sp, #0x70
    ca30:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ca34:	add	x21, sp, #0x110
    ca38:	mov	x0, x19
    ca3c:	mov	x1, x22
    ca40:	mov	x8, x20
    ca44:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ca48:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ca4c:	mov	x0, x21
    ca50:	add	x19, sp, #0x128
    ca54:	add	x1, x1, #0x0
    ca58:	b	c98c <_ZNK4llvm6Record18getValueAsBitsInitENS_9StringRefE+0x11c>
    ca5c:	nop

000000000000ca60 <_ZNK4llvm6Record13getValueAsDagENS_9StringRefE>:
    ca60:	stp	x29, x30, [sp, #-288]!
    ca64:	mov	x29, sp
    ca68:	stp	x19, x20, [sp, #16]
    ca6c:	mov	x19, x0
    ca70:	mov	x0, x1
    ca74:	stp	x21, x22, [sp, #32]
    ca78:	stp	x23, x24, [sp, #48]
    ca7c:	str	x25, [sp, #64]
    ca80:	stp	x1, x2, [sp, #80]
    ca84:	mov	x1, x2
    ca88:	bl	a360 <_ZN4llvm10StringInit3getENS_9StringRefE>
    ca8c:	ldr	w2, [x19, #80]
    ca90:	mov	w3, #0x18                  	// #24
    ca94:	ldr	x1, [x19, #72]
    ca98:	umaddl	x2, w2, w3, x1
    ca9c:	cmp	x1, x2
    caa0:	b.ne	cab4 <_ZNK4llvm6Record13getValueAsDagENS_9StringRefE+0x54>  // b.any
    caa4:	b	cba8 <_ZNK4llvm6Record13getValueAsDagENS_9StringRefE+0x148>
    caa8:	add	x1, x1, #0x18
    caac:	cmp	x2, x1
    cab0:	b.eq	cba8 <_ZNK4llvm6Record13getValueAsDagENS_9StringRefE+0x148>  // b.none
    cab4:	ldr	x3, [x1]
    cab8:	cmp	x0, x3
    cabc:	b.ne	caa8 <_ZNK4llvm6Record13getValueAsDagENS_9StringRefE+0x48>  // b.any
    cac0:	ldr	x0, [x1, #16]
    cac4:	cbz	x0, cba8 <_ZNK4llvm6Record13getValueAsDagENS_9StringRefE+0x148>
    cac8:	ldrb	w1, [x0, #8]
    cacc:	cmp	w1, #0x5
    cad0:	b.eq	cb90 <_ZNK4llvm6Record13getValueAsDagENS_9StringRefE+0x130>  // b.none
    cad4:	ldp	x0, x25, [x19]
    cad8:	add	x22, sp, #0x78
    cadc:	ldr	w24, [x19, #16]
    cae0:	add	x23, sp, #0x90
    cae4:	add	x21, sp, #0xa8
    cae8:	add	x19, sp, #0xc0
    caec:	add	x20, sp, #0xd8
    caf0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    caf4:	mov	x3, x0
    caf8:	add	x2, sp, #0x68
    cafc:	mov	x0, x22
    cb00:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cb04:	add	x1, x1, #0x0
    cb08:	ldp	x4, x3, [x3, #24]
    cb0c:	stp	x4, x3, [sp, #104]
    cb10:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cb14:	mov	x0, x23
    cb18:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cb1c:	add	x1, x1, #0x0
    cb20:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cb24:	mov	x8, x21
    cb28:	mov	x0, x22
    cb2c:	mov	x1, x23
    cb30:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cb34:	mov	x0, x19
    cb38:	mov	x22, x19
    cb3c:	add	x1, sp, #0x50
    cb40:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cb44:	add	x19, sp, #0xf0
    cb48:	mov	x0, x21
    cb4c:	mov	x1, x22
    cb50:	mov	x8, x20
    cb54:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cb58:	mov	x21, x19
    cb5c:	mov	x0, x19
    cb60:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cb64:	add	x19, sp, #0x108
    cb68:	add	x1, x1, #0x0
    cb6c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cb70:	mov	x8, x19
    cb74:	mov	x1, x21
    cb78:	mov	x0, x20
    cb7c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cb80:	mov	x2, x19
    cb84:	mov	x0, x25
    cb88:	mov	x1, x24
    cb8c:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    cb90:	ldp	x19, x20, [sp, #16]
    cb94:	ldp	x21, x22, [sp, #32]
    cb98:	ldp	x23, x24, [sp, #48]
    cb9c:	ldr	x25, [sp, #64]
    cba0:	ldp	x29, x30, [sp], #288
    cba4:	ret
    cba8:	ldp	x0, x25, [x19]
    cbac:	add	x21, sp, #0x78
    cbb0:	ldr	w24, [x19, #16]
    cbb4:	add	x23, sp, #0x90
    cbb8:	add	x19, sp, #0xa8
    cbbc:	add	x22, sp, #0xc0
    cbc0:	add	x20, sp, #0xd8
    cbc4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cbc8:	mov	x3, x0
    cbcc:	add	x2, sp, #0x68
    cbd0:	mov	x0, x21
    cbd4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cbd8:	add	x1, x1, #0x0
    cbdc:	ldp	x4, x3, [x3, #24]
    cbe0:	stp	x4, x3, [sp, #104]
    cbe4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cbe8:	mov	x0, x23
    cbec:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cbf0:	add	x1, x1, #0x0
    cbf4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cbf8:	mov	x8, x19
    cbfc:	mov	x0, x21
    cc00:	mov	x1, x23
    cc04:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cc08:	mov	x0, x22
    cc0c:	add	x1, sp, #0x50
    cc10:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cc14:	add	x21, sp, #0xf0
    cc18:	mov	x0, x19
    cc1c:	mov	x1, x22
    cc20:	mov	x8, x20
    cc24:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cc28:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cc2c:	mov	x0, x21
    cc30:	add	x19, sp, #0x108
    cc34:	add	x1, x1, #0x0
    cc38:	b	cb6c <_ZNK4llvm6Record13getValueAsDagENS_9StringRefE+0x10c>
    cc3c:	nop

000000000000cc40 <_ZNK4llvm6Record13getValueAsDefENS_9StringRefE>:
    cc40:	stp	x29, x30, [sp, #-304]!
    cc44:	mov	x29, sp
    cc48:	stp	x19, x20, [sp, #16]
    cc4c:	mov	x19, x0
    cc50:	mov	x0, x1
    cc54:	stp	x21, x22, [sp, #32]
    cc58:	stp	x23, x24, [sp, #48]
    cc5c:	str	x25, [sp, #64]
    cc60:	stp	x1, x2, [sp, #96]
    cc64:	mov	x1, x2
    cc68:	bl	a360 <_ZN4llvm10StringInit3getENS_9StringRefE>
    cc6c:	ldr	w2, [x19, #80]
    cc70:	mov	w3, #0x18                  	// #24
    cc74:	ldr	x1, [x19, #72]
    cc78:	umaddl	x2, w2, w3, x1
    cc7c:	cmp	x1, x2
    cc80:	b.ne	cc94 <_ZNK4llvm6Record13getValueAsDefENS_9StringRefE+0x54>  // b.any
    cc84:	b	cd8c <_ZNK4llvm6Record13getValueAsDefENS_9StringRefE+0x14c>
    cc88:	add	x1, x1, #0x18
    cc8c:	cmp	x2, x1
    cc90:	b.eq	cd8c <_ZNK4llvm6Record13getValueAsDefENS_9StringRefE+0x14c>  // b.none
    cc94:	ldr	x3, [x1]
    cc98:	cmp	x0, x3
    cc9c:	b.ne	cc88 <_ZNK4llvm6Record13getValueAsDefENS_9StringRefE+0x48>  // b.any
    cca0:	ldr	x0, [x1, #16]
    cca4:	cbz	x0, cd8c <_ZNK4llvm6Record13getValueAsDefENS_9StringRefE+0x14c>
    cca8:	ldrb	w1, [x0, #8]
    ccac:	cmp	w1, #0x6
    ccb0:	b.eq	cd70 <_ZNK4llvm6Record13getValueAsDefENS_9StringRefE+0x130>  // b.none
    ccb4:	ldp	x0, x25, [x19]
    ccb8:	add	x22, sp, #0x88
    ccbc:	ldr	w24, [x19, #16]
    ccc0:	add	x23, sp, #0xa0
    ccc4:	add	x21, sp, #0xb8
    ccc8:	add	x19, sp, #0xd0
    cccc:	add	x20, sp, #0xe8
    ccd0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ccd4:	str	x0, [sp, #88]
    ccd8:	ldp	x4, x3, [x0, #24]
    ccdc:	add	x2, sp, #0x78
    cce0:	mov	x0, x22
    cce4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cce8:	add	x1, x1, #0x0
    ccec:	stp	x4, x3, [sp, #120]
    ccf0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ccf4:	mov	x0, x23
    ccf8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ccfc:	add	x1, x1, #0x0
    cd00:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cd04:	mov	x8, x21
    cd08:	mov	x0, x22
    cd0c:	mov	x1, x23
    cd10:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cd14:	mov	x0, x19
    cd18:	mov	x22, x19
    cd1c:	add	x1, sp, #0x60
    cd20:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cd24:	add	x19, sp, #0x100
    cd28:	mov	x0, x21
    cd2c:	mov	x1, x22
    cd30:	mov	x8, x20
    cd34:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cd38:	mov	x21, x19
    cd3c:	mov	x0, x19
    cd40:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cd44:	add	x19, sp, #0x118
    cd48:	add	x1, x1, #0x0
    cd4c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cd50:	mov	x8, x19
    cd54:	mov	x1, x21
    cd58:	mov	x0, x20
    cd5c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cd60:	mov	x2, x19
    cd64:	mov	x0, x25
    cd68:	mov	x1, x24
    cd6c:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    cd70:	ldp	x19, x20, [sp, #16]
    cd74:	ldr	x0, [x0, #24]
    cd78:	ldp	x21, x22, [sp, #32]
    cd7c:	ldp	x23, x24, [sp, #48]
    cd80:	ldr	x25, [sp, #64]
    cd84:	ldp	x29, x30, [sp], #304
    cd88:	ret
    cd8c:	ldp	x0, x25, [x19]
    cd90:	add	x21, sp, #0x88
    cd94:	ldr	w24, [x19, #16]
    cd98:	add	x23, sp, #0xa0
    cd9c:	add	x19, sp, #0xb8
    cda0:	add	x22, sp, #0xd0
    cda4:	add	x20, sp, #0xe8
    cda8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cdac:	str	x0, [sp, #88]
    cdb0:	ldp	x4, x3, [x0, #24]
    cdb4:	add	x2, sp, #0x78
    cdb8:	mov	x0, x21
    cdbc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cdc0:	add	x1, x1, #0x0
    cdc4:	stp	x4, x3, [sp, #120]
    cdc8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cdcc:	mov	x0, x23
    cdd0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cdd4:	add	x1, x1, #0x0
    cdd8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cddc:	mov	x8, x19
    cde0:	mov	x0, x21
    cde4:	mov	x1, x23
    cde8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cdec:	mov	x0, x22
    cdf0:	add	x1, sp, #0x60
    cdf4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cdf8:	add	x21, sp, #0x100
    cdfc:	mov	x0, x19
    ce00:	mov	x1, x22
    ce04:	mov	x8, x20
    ce08:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ce0c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ce10:	mov	x0, x21
    ce14:	add	x19, sp, #0x118
    ce18:	add	x1, x1, #0x0
    ce1c:	b	cd4c <_ZNK4llvm6Record13getValueAsDefENS_9StringRefE+0x10c>

000000000000ce20 <_ZNK4llvm6Record13getValueAsBitENS_9StringRefE>:
    ce20:	stp	x29, x30, [sp, #-304]!
    ce24:	mov	x29, sp
    ce28:	stp	x19, x20, [sp, #16]
    ce2c:	mov	x19, x0
    ce30:	mov	x0, x1
    ce34:	stp	x21, x22, [sp, #32]
    ce38:	stp	x23, x24, [sp, #48]
    ce3c:	str	x25, [sp, #64]
    ce40:	stp	x1, x2, [sp, #96]
    ce44:	mov	x1, x2
    ce48:	bl	a360 <_ZN4llvm10StringInit3getENS_9StringRefE>
    ce4c:	ldr	w2, [x19, #80]
    ce50:	mov	w3, #0x18                  	// #24
    ce54:	ldr	x1, [x19, #72]
    ce58:	umaddl	x2, w2, w3, x1
    ce5c:	cmp	x1, x2
    ce60:	b.ne	ce74 <_ZNK4llvm6Record13getValueAsBitENS_9StringRefE+0x54>  // b.any
    ce64:	b	cf6c <_ZNK4llvm6Record13getValueAsBitENS_9StringRefE+0x14c>
    ce68:	add	x1, x1, #0x18
    ce6c:	cmp	x2, x1
    ce70:	b.eq	cf6c <_ZNK4llvm6Record13getValueAsBitENS_9StringRefE+0x14c>  // b.none
    ce74:	ldr	x3, [x1]
    ce78:	cmp	x0, x3
    ce7c:	b.ne	ce68 <_ZNK4llvm6Record13getValueAsBitENS_9StringRefE+0x48>  // b.any
    ce80:	ldr	x0, [x1, #16]
    ce84:	cbz	x0, cf6c <_ZNK4llvm6Record13getValueAsBitENS_9StringRefE+0x14c>
    ce88:	ldrb	w1, [x0, #8]
    ce8c:	cmp	w1, #0x2
    ce90:	b.eq	cf50 <_ZNK4llvm6Record13getValueAsBitENS_9StringRefE+0x130>  // b.none
    ce94:	ldp	x0, x25, [x19]
    ce98:	add	x22, sp, #0x88
    ce9c:	ldr	w24, [x19, #16]
    cea0:	add	x23, sp, #0xa0
    cea4:	add	x21, sp, #0xb8
    cea8:	add	x19, sp, #0xd0
    ceac:	add	x20, sp, #0xe8
    ceb0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ceb4:	str	x0, [sp, #88]
    ceb8:	ldp	x4, x3, [x0, #24]
    cebc:	add	x2, sp, #0x78
    cec0:	mov	x0, x22
    cec4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cec8:	add	x1, x1, #0x0
    cecc:	stp	x4, x3, [sp, #120]
    ced0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ced4:	mov	x0, x23
    ced8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cedc:	add	x1, x1, #0x0
    cee0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cee4:	mov	x8, x21
    cee8:	mov	x0, x22
    ceec:	mov	x1, x23
    cef0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cef4:	mov	x0, x19
    cef8:	mov	x22, x19
    cefc:	add	x1, sp, #0x60
    cf00:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cf04:	add	x19, sp, #0x100
    cf08:	mov	x0, x21
    cf0c:	mov	x1, x22
    cf10:	mov	x8, x20
    cf14:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cf18:	mov	x21, x19
    cf1c:	mov	x0, x19
    cf20:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cf24:	add	x19, sp, #0x118
    cf28:	add	x1, x1, #0x0
    cf2c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cf30:	mov	x8, x19
    cf34:	mov	x1, x21
    cf38:	mov	x0, x20
    cf3c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cf40:	mov	x2, x19
    cf44:	mov	x0, x25
    cf48:	mov	x1, x24
    cf4c:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    cf50:	ldrb	w0, [x0, #24]
    cf54:	ldp	x19, x20, [sp, #16]
    cf58:	ldp	x21, x22, [sp, #32]
    cf5c:	ldp	x23, x24, [sp, #48]
    cf60:	ldr	x25, [sp, #64]
    cf64:	ldp	x29, x30, [sp], #304
    cf68:	ret
    cf6c:	ldp	x0, x25, [x19]
    cf70:	add	x21, sp, #0x88
    cf74:	ldr	w24, [x19, #16]
    cf78:	add	x23, sp, #0xa0
    cf7c:	add	x19, sp, #0xb8
    cf80:	add	x22, sp, #0xd0
    cf84:	add	x20, sp, #0xe8
    cf88:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cf8c:	mov	x3, x0
    cf90:	add	x2, sp, #0x78
    cf94:	mov	x0, x21
    cf98:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cf9c:	add	x1, x1, #0x0
    cfa0:	ldp	x4, x3, [x3, #24]
    cfa4:	stp	x4, x3, [sp, #120]
    cfa8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cfac:	mov	x0, x23
    cfb0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cfb4:	add	x1, x1, #0x0
    cfb8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cfbc:	mov	x8, x19
    cfc0:	mov	x0, x21
    cfc4:	mov	x1, x23
    cfc8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cfcc:	mov	x0, x22
    cfd0:	add	x1, sp, #0x60
    cfd4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cfd8:	add	x21, sp, #0x100
    cfdc:	mov	x0, x19
    cfe0:	mov	x1, x22
    cfe4:	mov	x8, x20
    cfe8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cfec:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cff0:	mov	x0, x21
    cff4:	add	x19, sp, #0x118
    cff8:	add	x1, x1, #0x0
    cffc:	b	cf2c <_ZNK4llvm6Record13getValueAsBitENS_9StringRefE+0x10c>

000000000000d000 <_ZNK4llvm6Record21getValueAsOptionalDefENS_9StringRefE>:
    d000:	stp	x29, x30, [sp, #-288]!
    d004:	mov	x29, sp
    d008:	stp	x19, x20, [sp, #16]
    d00c:	mov	x19, x0
    d010:	mov	x0, x1
    d014:	stp	x21, x22, [sp, #32]
    d018:	stp	x23, x24, [sp, #48]
    d01c:	str	x25, [sp, #64]
    d020:	stp	x1, x2, [sp, #80]
    d024:	mov	x1, x2
    d028:	bl	a360 <_ZN4llvm10StringInit3getENS_9StringRefE>
    d02c:	ldr	w2, [x19, #80]
    d030:	mov	w3, #0x18                  	// #24
    d034:	ldr	x1, [x19, #72]
    d038:	umaddl	x2, w2, w3, x1
    d03c:	cmp	x1, x2
    d040:	b.ne	d054 <_ZNK4llvm6Record21getValueAsOptionalDefENS_9StringRefE+0x54>  // b.any
    d044:	b	d0b4 <_ZNK4llvm6Record21getValueAsOptionalDefENS_9StringRefE+0xb4>
    d048:	add	x1, x1, #0x18
    d04c:	cmp	x2, x1
    d050:	b.eq	d0b4 <_ZNK4llvm6Record21getValueAsOptionalDefENS_9StringRefE+0xb4>  // b.none
    d054:	ldr	x3, [x1]
    d058:	cmp	x0, x3
    d05c:	b.ne	d048 <_ZNK4llvm6Record21getValueAsOptionalDefENS_9StringRefE+0x48>  // b.any
    d060:	ldr	x0, [x1, #16]
    d064:	cbz	x0, d0b4 <_ZNK4llvm6Record21getValueAsOptionalDefENS_9StringRefE+0xb4>
    d068:	ldrb	w1, [x0, #8]
    d06c:	cmp	w1, #0x6
    d070:	b.eq	d098 <_ZNK4llvm6Record21getValueAsOptionalDefENS_9StringRefE+0x98>  // b.none
    d074:	cmp	w1, #0x18
    d078:	mov	x0, #0x0                   	// #0
    d07c:	b.ne	d168 <_ZNK4llvm6Record21getValueAsOptionalDefENS_9StringRefE+0x168>  // b.any
    d080:	ldp	x19, x20, [sp, #16]
    d084:	ldp	x21, x22, [sp, #32]
    d088:	ldp	x23, x24, [sp, #48]
    d08c:	ldr	x25, [sp, #64]
    d090:	ldp	x29, x30, [sp], #288
    d094:	ret
    d098:	ldp	x19, x20, [sp, #16]
    d09c:	ldr	x0, [x0, #24]
    d0a0:	ldp	x21, x22, [sp, #32]
    d0a4:	ldp	x23, x24, [sp, #48]
    d0a8:	ldr	x25, [sp, #64]
    d0ac:	ldp	x29, x30, [sp], #288
    d0b0:	ret
    d0b4:	ldp	x0, x25, [x19]
    d0b8:	add	x21, sp, #0x78
    d0bc:	ldr	w24, [x19, #16]
    d0c0:	add	x23, sp, #0x90
    d0c4:	add	x19, sp, #0xa8
    d0c8:	add	x22, sp, #0xc0
    d0cc:	add	x20, sp, #0xd8
    d0d0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d0d4:	mov	x3, x0
    d0d8:	add	x2, sp, #0x68
    d0dc:	mov	x0, x21
    d0e0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d0e4:	add	x1, x1, #0x0
    d0e8:	ldp	x4, x3, [x3, #24]
    d0ec:	stp	x4, x3, [sp, #104]
    d0f0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d0f4:	mov	x0, x23
    d0f8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d0fc:	add	x1, x1, #0x0
    d100:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d104:	mov	x8, x19
    d108:	mov	x0, x21
    d10c:	mov	x1, x23
    d110:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d114:	mov	x0, x22
    d118:	add	x1, sp, #0x50
    d11c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d120:	add	x21, sp, #0xf0
    d124:	mov	x0, x19
    d128:	mov	x1, x22
    d12c:	mov	x8, x20
    d130:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d134:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d138:	mov	x0, x21
    d13c:	add	x19, sp, #0x108
    d140:	add	x1, x1, #0x0
    d144:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d148:	mov	x8, x19
    d14c:	mov	x1, x21
    d150:	mov	x0, x20
    d154:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d158:	mov	x2, x19
    d15c:	mov	x0, x25
    d160:	mov	x1, x24
    d164:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    d168:	ldp	x0, x25, [x19]
    d16c:	add	x22, sp, #0x78
    d170:	ldr	w24, [x19, #16]
    d174:	add	x23, sp, #0x90
    d178:	add	x21, sp, #0xa8
    d17c:	add	x19, sp, #0xc0
    d180:	add	x20, sp, #0xd8
    d184:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d188:	mov	x3, x0
    d18c:	add	x2, sp, #0x68
    d190:	mov	x0, x22
    d194:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d198:	add	x1, x1, #0x0
    d19c:	ldp	x4, x3, [x3, #24]
    d1a0:	stp	x4, x3, [sp, #104]
    d1a4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d1a8:	mov	x0, x23
    d1ac:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d1b0:	add	x1, x1, #0x0
    d1b4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d1b8:	mov	x8, x21
    d1bc:	mov	x0, x22
    d1c0:	mov	x1, x23
    d1c4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d1c8:	mov	x0, x19
    d1cc:	mov	x22, x19
    d1d0:	add	x1, sp, #0x50
    d1d4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d1d8:	add	x19, sp, #0xf0
    d1dc:	mov	x0, x21
    d1e0:	mov	x1, x22
    d1e4:	mov	x8, x20
    d1e8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d1ec:	mov	x21, x19
    d1f0:	mov	x0, x19
    d1f4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d1f8:	add	x19, sp, #0x108
    d1fc:	add	x1, x1, #0x0
    d200:	b	d144 <_ZNK4llvm6Record21getValueAsOptionalDefENS_9StringRefE+0x144>
    d204:	nop

000000000000d208 <_ZNK4llvm6Record16getValueAsStringENS_9StringRefE>:
    d208:	stp	x29, x30, [sp, #-320]!
    d20c:	mov	x29, sp
    d210:	stp	x19, x20, [sp, #16]
    d214:	mov	x19, x0
    d218:	stp	x21, x22, [sp, #32]
    d21c:	stp	x23, x24, [sp, #48]
    d220:	str	x25, [sp, #64]
    d224:	str	x0, [sp, #88]
    d228:	mov	x0, x1
    d22c:	stp	x1, x2, [sp, #96]
    d230:	stp	x1, x2, [sp, #112]
    d234:	mov	x1, x2
    d238:	bl	a360 <_ZN4llvm10StringInit3getENS_9StringRefE>
    d23c:	ldr	w1, [x19, #80]
    d240:	mov	w3, #0x18                  	// #24
    d244:	str	x0, [sp, #88]
    d248:	ldr	x0, [x19, #72]
    d24c:	ldr	x2, [sp, #88]
    d250:	umaddl	x1, w1, w3, x0
    d254:	cmp	x0, x1
    d258:	b.ne	d26c <_ZNK4llvm6Record16getValueAsStringENS_9StringRefE+0x64>  // b.any
    d25c:	b	d36c <_ZNK4llvm6Record16getValueAsStringENS_9StringRefE+0x164>
    d260:	add	x0, x0, #0x18
    d264:	cmp	x1, x0
    d268:	b.eq	d36c <_ZNK4llvm6Record16getValueAsStringENS_9StringRefE+0x164>  // b.none
    d26c:	ldr	x3, [x0]
    d270:	cmp	x2, x3
    d274:	b.ne	d260 <_ZNK4llvm6Record16getValueAsStringENS_9StringRefE+0x58>  // b.any
    d278:	ldr	x1, [x0, #16]
    d27c:	cbz	x1, d36c <_ZNK4llvm6Record16getValueAsStringENS_9StringRefE+0x164>
    d280:	ldrb	w0, [x1, #8]
    d284:	cmp	w0, #0x12
    d288:	b.eq	d350 <_ZNK4llvm6Record16getValueAsStringENS_9StringRefE+0x148>  // b.none
    d28c:	cmp	w0, #0x4
    d290:	b.eq	d350 <_ZNK4llvm6Record16getValueAsStringENS_9StringRefE+0x148>  // b.none
    d294:	ldp	x0, x25, [x19]
    d298:	add	x22, sp, #0x98
    d29c:	ldr	w24, [x19, #16]
    d2a0:	add	x23, sp, #0xb0
    d2a4:	add	x21, sp, #0xc8
    d2a8:	add	x19, sp, #0xe0
    d2ac:	add	x20, sp, #0xf8
    d2b0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d2b4:	str	x0, [sp, #88]
    d2b8:	ldp	x4, x3, [x0, #24]
    d2bc:	add	x2, sp, #0x88
    d2c0:	mov	x0, x22
    d2c4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d2c8:	add	x1, x1, #0x0
    d2cc:	stp	x4, x3, [sp, #136]
    d2d0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d2d4:	mov	x0, x23
    d2d8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d2dc:	add	x1, x1, #0x0
    d2e0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d2e4:	mov	x8, x21
    d2e8:	mov	x0, x22
    d2ec:	mov	x1, x23
    d2f0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d2f4:	mov	x0, x19
    d2f8:	add	x1, sp, #0x70
    d2fc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d300:	mov	x22, x19
    d304:	mov	x8, x20
    d308:	add	x19, sp, #0x110
    d30c:	mov	x0, x21
    d310:	mov	x1, x22
    d314:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d318:	mov	x21, x19
    d31c:	mov	x0, x19
    d320:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d324:	add	x19, sp, #0x128
    d328:	add	x1, x1, #0x0
    d32c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d330:	mov	x8, x19
    d334:	mov	x1, x21
    d338:	mov	x0, x20
    d33c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d340:	mov	x2, x19
    d344:	mov	x0, x25
    d348:	mov	x1, x24
    d34c:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    d350:	ldp	x19, x20, [sp, #16]
    d354:	ldp	x0, x1, [x1, #24]
    d358:	ldp	x21, x22, [sp, #32]
    d35c:	ldp	x23, x24, [sp, #48]
    d360:	ldr	x25, [sp, #64]
    d364:	ldp	x29, x30, [sp], #320
    d368:	ret
    d36c:	ldp	x0, x23, [x19]
    d370:	add	x21, sp, #0x98
    d374:	ldr	w25, [x19, #16]
    d378:	add	x24, sp, #0xb0
    d37c:	add	x19, sp, #0xc8
    d380:	add	x22, sp, #0xe0
    d384:	add	x20, sp, #0xf8
    d388:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d38c:	str	x0, [sp, #88]
    d390:	ldp	x4, x3, [x0, #24]
    d394:	add	x2, sp, #0x88
    d398:	mov	x0, x21
    d39c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d3a0:	add	x1, x1, #0x0
    d3a4:	stp	x4, x3, [sp, #136]
    d3a8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d3ac:	mov	x0, x24
    d3b0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d3b4:	add	x1, x1, #0x0
    d3b8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d3bc:	mov	x8, x19
    d3c0:	mov	x0, x21
    d3c4:	mov	x1, x24
    d3c8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d3cc:	mov	x0, x22
    d3d0:	add	x1, sp, #0x70
    d3d4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d3d8:	add	x21, sp, #0x110
    d3dc:	mov	x8, x20
    d3e0:	mov	x0, x19
    d3e4:	mov	x1, x22
    d3e8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d3ec:	mov	x0, x21
    d3f0:	add	x19, sp, #0x128
    d3f4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d3f8:	add	x1, x1, #0x0
    d3fc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d400:	mov	x8, x19
    d404:	mov	x1, x21
    d408:	mov	x0, x20
    d40c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d410:	mov	x2, x19
    d414:	mov	x0, x23
    d418:	mov	x1, x25
    d41c:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>

000000000000d420 <_ZNK4llvm6Record20getValueAsBitOrUnsetENS_9StringRefERb>:
    d420:	stp	x29, x30, [sp, #-352]!
    d424:	mov	x29, sp
    d428:	stp	x19, x20, [sp, #16]
    d42c:	mov	x19, x0
    d430:	mov	x20, x3
    d434:	mov	x0, x1
    d438:	stp	x21, x22, [sp, #32]
    d43c:	stp	x23, x24, [sp, #48]
    d440:	str	x25, [sp, #64]
    d444:	stp	x1, x2, [sp, #80]
    d448:	str	x3, [sp, #104]
    d44c:	stp	x1, x2, [sp, #112]
    d450:	mov	x1, x2
    d454:	bl	a360 <_ZN4llvm10StringInit3getENS_9StringRefE>
    d458:	ldr	w1, [x19, #80]
    d45c:	mov	w3, #0x18                  	// #24
    d460:	str	x0, [sp, #80]
    d464:	ldr	x0, [x19, #72]
    d468:	ldr	x2, [sp, #80]
    d46c:	umaddl	x1, w1, w3, x0
    d470:	cmp	x0, x1
    d474:	b.ne	d488 <_ZNK4llvm6Record20getValueAsBitOrUnsetENS_9StringRefERb+0x68>  // b.any
    d478:	b	d5b0 <_ZNK4llvm6Record20getValueAsBitOrUnsetENS_9StringRefERb+0x190>
    d47c:	add	x0, x0, #0x18
    d480:	cmp	x1, x0
    d484:	b.eq	d5b0 <_ZNK4llvm6Record20getValueAsBitOrUnsetENS_9StringRefERb+0x190>  // b.none
    d488:	ldr	x3, [x0]
    d48c:	cmp	x2, x3
    d490:	b.ne	d47c <_ZNK4llvm6Record20getValueAsBitOrUnsetENS_9StringRefERb+0x5c>  // b.any
    d494:	ldr	x0, [x0, #16]
    d498:	cbz	x0, d5b0 <_ZNK4llvm6Record20getValueAsBitOrUnsetENS_9StringRefERb+0x190>
    d49c:	ldrb	w1, [x0, #8]
    d4a0:	cmp	w1, #0x18
    d4a4:	b.eq	d58c <_ZNK4llvm6Record20getValueAsBitOrUnsetENS_9StringRefERb+0x16c>  // b.none
    d4a8:	strb	wzr, [x20]
    d4ac:	cmp	w1, #0x2
    d4b0:	b.eq	d570 <_ZNK4llvm6Record20getValueAsBitOrUnsetENS_9StringRefERb+0x150>  // b.none
    d4b4:	ldp	x0, x25, [x19]
    d4b8:	add	x22, sp, #0xb0
    d4bc:	ldr	w24, [x19, #16]
    d4c0:	add	x23, sp, #0xc8
    d4c4:	add	x21, sp, #0xe0
    d4c8:	add	x19, sp, #0xf8
    d4cc:	add	x20, sp, #0x110
    d4d0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d4d4:	str	x0, [sp, #80]
    d4d8:	ldp	x4, x3, [x0, #24]
    d4dc:	add	x2, sp, #0x98
    d4e0:	mov	x0, x22
    d4e4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d4e8:	add	x1, x1, #0x0
    d4ec:	stp	x4, x3, [sp, #152]
    d4f0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d4f4:	mov	x0, x23
    d4f8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d4fc:	add	x1, x1, #0x0
    d500:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d504:	mov	x8, x21
    d508:	mov	x0, x22
    d50c:	mov	x1, x23
    d510:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d514:	mov	x0, x19
    d518:	add	x1, sp, #0x70
    d51c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d520:	mov	x22, x19
    d524:	mov	x8, x20
    d528:	add	x19, sp, #0x128
    d52c:	mov	x0, x21
    d530:	mov	x1, x22
    d534:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d538:	mov	x21, x19
    d53c:	mov	x0, x19
    d540:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d544:	add	x19, sp, #0x140
    d548:	add	x1, x1, #0x0
    d54c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d550:	mov	x8, x19
    d554:	mov	x1, x21
    d558:	mov	x0, x20
    d55c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d560:	mov	x2, x19
    d564:	mov	x0, x25
    d568:	mov	x1, x24
    d56c:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    d570:	ldrb	w0, [x0, #24]
    d574:	ldp	x19, x20, [sp, #16]
    d578:	ldp	x21, x22, [sp, #32]
    d57c:	ldp	x23, x24, [sp, #48]
    d580:	ldr	x25, [sp, #64]
    d584:	ldp	x29, x30, [sp], #352
    d588:	ret
    d58c:	mov	w1, #0x1                   	// #1
    d590:	strb	w1, [x20]
    d594:	mov	w0, #0x0                   	// #0
    d598:	ldp	x19, x20, [sp, #16]
    d59c:	ldp	x21, x22, [sp, #32]
    d5a0:	ldp	x23, x24, [sp, #48]
    d5a4:	ldr	x25, [sp, #64]
    d5a8:	ldp	x29, x30, [sp], #352
    d5ac:	ret
    d5b0:	ldp	x0, x23, [x19]
    d5b4:	add	x20, sp, #0x98
    d5b8:	add	x21, sp, #0xb0
    d5bc:	ldr	w22, [x19, #16]
    d5c0:	add	x24, sp, #0xc8
    d5c4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d5c8:	str	x0, [sp, #80]
    d5cc:	ldp	x4, x3, [x0, #24]
    d5d0:	add	x2, sp, #0x88
    d5d4:	mov	x0, x20
    d5d8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d5dc:	add	x1, x1, #0x0
    d5e0:	stp	x4, x3, [sp, #136]
    d5e4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d5e8:	mov	x0, x21
    d5ec:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d5f0:	add	x1, x1, #0x0
    d5f4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d5f8:	mov	x1, x21
    d5fc:	mov	x0, x20
    d600:	mov	x8, x24
    d604:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d608:	ldr	x1, [sp, #112]
    d60c:	cbz	x1, d68c <_ZNK4llvm6Record20getValueAsBitOrUnsetENS_9StringRefERb+0x26c>
    d610:	add	x4, sp, #0x150
    d614:	add	x19, sp, #0x140
    d618:	ldr	x2, [sp, #120]
    d61c:	mov	x0, x19
    d620:	mov	w3, #0x0                   	// #0
    d624:	str	x4, [sp, #320]
    d628:	add	x2, x1, x2
    d62c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d630:	add	x0, sp, #0xe0
    d634:	mov	x1, x19
    d638:	add	x20, sp, #0xf8
    d63c:	mov	x19, x0
    d640:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d644:	add	x21, sp, #0x110
    d648:	mov	x8, x20
    d64c:	mov	x1, x19
    d650:	mov	x0, x24
    d654:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d658:	mov	x0, x21
    d65c:	add	x19, sp, #0x128
    d660:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d664:	add	x1, x1, #0x0
    d668:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d66c:	mov	x8, x19
    d670:	mov	x1, x21
    d674:	mov	x0, x20
    d678:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d67c:	mov	x2, x19
    d680:	mov	x0, x23
    d684:	mov	x1, x22
    d688:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    d68c:	add	x19, sp, #0x140
    d690:	strb	wzr, [sp, #336]
    d694:	add	x0, x19, #0x10
    d698:	stp	x0, xzr, [sp, #320]
    d69c:	b	d630 <_ZNK4llvm6Record20getValueAsBitOrUnsetENS_9StringRefERb+0x210>

000000000000d6a0 <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE>:
    d6a0:	stp	x29, x30, [sp, #-112]!
    d6a4:	mov	x29, sp
    d6a8:	stp	x23, x24, [sp, #48]
    d6ac:	adrp	x24, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d6b0:	add	x23, x24, #0x0
    d6b4:	stp	x19, x20, [sp, #16]
    d6b8:	mov	x19, x1
    d6bc:	mov	x20, x2
    d6c0:	stp	x21, x22, [sp, #32]
    d6c4:	mov	x21, x0
    d6c8:	add	x22, x23, #0x2c0
    d6cc:	ldarb	w0, [x22]
    d6d0:	tbz	w0, #0, d8a8 <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE+0x208>
    d6d4:	add	x1, x24, #0x0
    d6d8:	add	x0, x1, #0x2e8
    d6dc:	add	x1, x1, #0x304
    d6e0:	ldarb	w1, [x1]
    d6e4:	tst	w1, #0xff
    d6e8:	b.eq	d8a0 <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE+0x200>  // b.none
    d6ec:	add	x22, x24, #0x0
    d6f0:	add	x0, x22, #0x300
    d6f4:	ldxr	w1, [x0]
    d6f8:	add	w1, w1, #0x1
    d6fc:	stxr	w2, w1, [x0]
    d700:	cbnz	w2, d6f4 <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE+0x54>
    d704:	cbnz	x19, d760 <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE+0xc0>
    d708:	add	x0, x22, #0x88
    d70c:	mov	w2, #0x4                   	// #4
    d710:	mov	x1, #0x30                  	// #48
    d714:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d718:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d71c:	adrp	x3, 3f8 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE+0x68>
    d720:	ldr	x4, [x20]
    d724:	mov	w5, #0x4                   	// #4
    d728:	ldr	x1, [x1]
    d72c:	adrp	x2, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d730:	ldr	x3, [x3]
    d734:	add	x1, x1, #0x10
    d738:	add	x2, x2, #0x0
    d73c:	str	x1, [x0]
    d740:	strh	w5, [x0, #8]
    d744:	stp	x3, x2, [x0, #16]
    d748:	stp	xzr, x4, [x0, #32]
    d74c:	ldp	x19, x20, [sp, #16]
    d750:	ldp	x21, x22, [sp, #32]
    d754:	ldp	x23, x24, [sp, #48]
    d758:	ldp	x29, x30, [sp], #112
    d75c:	ret
    d760:	stp	x25, x26, [sp, #64]
    d764:	add	x25, x22, #0x2c8
    d768:	mov	x1, x21
    d76c:	mov	x0, x25
    d770:	mov	x2, x19
    d774:	stp	x27, x28, [sp, #80]
    d778:	bl	0 <_ZN4llvm13StringMapImpl15LookupBucketForENS_9StringRefE>
    d77c:	mov	w28, w0
    d780:	ldr	x26, [x22, #712]
    d784:	mov	x23, x28
    d788:	ldr	x0, [x26, x28, lsl #3]
    d78c:	add	x1, x26, w28, uxtw #3
    d790:	cbz	x0, d81c <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE+0x17c>
    d794:	cmn	x0, #0x8
    d798:	b.eq	d810 <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE+0x170>  // b.none
    d79c:	add	x0, sp, #0x68
    d7a0:	mov	w2, #0x0                   	// #0
    d7a4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d7a8:	ldr	x1, [sp, #104]
    d7ac:	add	x0, x24, #0x0
    d7b0:	ldr	x19, [x1]
    d7b4:	mov	w2, #0x4                   	// #4
    d7b8:	mov	x1, #0x30                  	// #48
    d7bc:	add	x0, x0, #0x88
    d7c0:	ldr	x21, [x19], #8
    d7c4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d7c8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d7cc:	adrp	x2, 3f8 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE+0x68>
    d7d0:	mov	w4, #0x4                   	// #4
    d7d4:	strh	w4, [x0, #8]
    d7d8:	ldr	x1, [x1]
    d7dc:	ldr	x2, [x2]
    d7e0:	add	x1, x1, #0x10
    d7e4:	ldr	x3, [x20]
    d7e8:	ldp	x25, x26, [sp, #64]
    d7ec:	ldp	x27, x28, [sp, #80]
    d7f0:	str	x1, [x0]
    d7f4:	stp	x2, x19, [x0, #16]
    d7f8:	stp	x21, x3, [x0, #32]
    d7fc:	ldp	x19, x20, [sp, #16]
    d800:	ldp	x21, x22, [sp, #32]
    d804:	ldp	x23, x24, [sp, #48]
    d808:	ldp	x29, x30, [sp], #112
    d80c:	ret
    d810:	ldr	w0, [x25, #16]
    d814:	sub	w0, w0, #0x1
    d818:	str	w0, [x25, #16]
    d81c:	add	x25, x24, #0x0
    d820:	add	x1, x19, #0x9
    d824:	mov	w2, #0x3                   	// #3
    d828:	add	x22, x25, #0x2c8
    d82c:	ldr	x0, [x22, #24]
    d830:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d834:	mov	x3, x0
    d838:	mov	x27, x0
    d83c:	mov	x1, x21
    d840:	mov	x2, x19
    d844:	str	x19, [x3], #8
    d848:	mov	x0, x3
    d84c:	bl	0 <memcpy>
    d850:	ldp	w1, w2, [x22, #12]
    d854:	strb	wzr, [x0, x19]
    d858:	str	x27, [x26, x28, lsl #3]
    d85c:	add	w0, w1, #0x1
    d860:	ldr	w1, [x22, #8]
    d864:	str	w0, [x22, #12]
    d868:	add	w0, w0, w2
    d86c:	cmp	w0, w1
    d870:	b.hi	d8f8 <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE+0x258>  // b.pmore
    d874:	mov	w1, w23
    d878:	mov	x0, x22
    d87c:	bl	0 <_ZN4llvm13StringMapImpl11RehashTableEj>
    d880:	mov	w3, w0
    d884:	ldr	x1, [x25, #712]
    d888:	add	x0, sp, #0x68
    d88c:	mov	w2, #0x0                   	// #0
    d890:	add	x1, x1, w3, uxtw #3
    d894:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d898:	ldr	x1, [sp, #104]
    d89c:	b	d7ac <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE+0x10c>
    d8a0:	bl	0 <_ZN4llvm17TrackingStatistic17RegisterStatisticEv>
    d8a4:	b	d6ec <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE+0x4c>
    d8a8:	mov	x0, x22
    d8ac:	bl	0 <__cxa_guard_acquire>
    d8b0:	cbz	w0, d6d4 <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE+0x34>
    d8b4:	add	x3, x23, #0x2c8
    d8b8:	add	x1, x23, #0x88
    d8bc:	stp	x25, x26, [sp, #64]
    d8c0:	mov	x2, #0x800000000           	// #34359738368
    d8c4:	add	x25, x23, #0x2c8
    d8c8:	stp	xzr, xzr, [x3]
    d8cc:	mov	x0, x22
    d8d0:	stp	x2, x1, [x3, #16]
    d8d4:	bl	0 <__cxa_guard_release>
    d8d8:	mov	x1, x25
    d8dc:	adrp	x2, 0 <__dso_handle>
    d8e0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d8e4:	add	x2, x2, #0x0
    d8e8:	add	x0, x0, #0x0
    d8ec:	bl	0 <__cxa_atexit>
    d8f0:	ldp	x25, x26, [sp, #64]
    d8f4:	b	d6d4 <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE+0x34>
    d8f8:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d8fc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d900:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d904:	add	x3, x3, #0x0
    d908:	add	x1, x1, #0x0
    d90c:	add	x0, x0, #0x0
    d910:	mov	w2, #0x1bb                 	// #443
    d914:	bl	0 <__assert_fail>

000000000000d918 <_ZNK4llvm10StringInit20convertInitializerToEPNS_5RecTyE>:
    d918:	stp	x29, x30, [sp, #-32]!
    d91c:	mov	x29, sp
    d920:	cbz	x1, d96c <_ZNK4llvm10StringInit20convertInitializerToEPNS_5RecTyE+0x54>
    d924:	mov	x3, x0
    d928:	ldr	w0, [x1, #8]
    d92c:	cmp	w0, #0x4
    d930:	b.eq	d960 <_ZNK4llvm10StringInit20convertInitializerToEPNS_5RecTyE+0x48>  // b.none
    d934:	cmp	w0, #0x2
    d938:	mov	x0, #0x0                   	// #0
    d93c:	b.eq	d948 <_ZNK4llvm10StringInit20convertInitializerToEPNS_5RecTyE+0x30>  // b.none
    d940:	ldp	x29, x30, [sp], #32
    d944:	ret
    d948:	ldp	x0, x1, [x3, #24]
    d94c:	add	x2, sp, #0x18
    d950:	str	xzr, [sp, #24]
    d954:	bl	d6a0 <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE>
    d958:	ldp	x29, x30, [sp], #32
    d95c:	ret
    d960:	mov	x0, x3
    d964:	ldp	x29, x30, [sp], #32
    d968:	ret
    d96c:	bl	8c0 <_ZN4llvm3isaINS_11StringRecTyEPNS_5RecTyEEEbRKT0_.isra.0.part.0>

000000000000d970 <_ZN4llvm11MapResolver7resolveEPNS_4InitE>:
    d970:	stp	x29, x30, [sp, #-80]!
    d974:	mov	x29, sp
    d978:	ldr	w3, [x0, #48]
    d97c:	stp	x19, x20, [sp, #16]
    d980:	str	x1, [sp, #56]
    d984:	ldr	x20, [x0, #32]
    d988:	cbz	w3, da98 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x128>
    d98c:	stp	x21, x22, [sp, #32]
    d990:	cmn	x1, #0x10
    d994:	ccmn	x1, #0x8, #0x4, ne  // ne = any
    d998:	b.eq	dbe4 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x274>  // b.none
    d99c:	lsr	w2, w1, #9
    d9a0:	sub	w6, w3, #0x1
    d9a4:	eor	w2, w2, w1, lsr #4
    d9a8:	mov	w5, #0x18                  	// #24
    d9ac:	and	w2, w2, w6
    d9b0:	mov	x19, x0
    d9b4:	umull	x0, w2, w5
    d9b8:	add	x4, x20, x0
    d9bc:	ldr	x0, [x20, x0]
    d9c0:	cmp	x1, x0
    d9c4:	b.ne	dab0 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x140>  // b.any
    d9c8:	mov	w21, #0x18                  	// #24
    d9cc:	add	x22, x19, #0x18
    d9d0:	umaddl	x3, w3, w21, x20
    d9d4:	cmp	x4, x3
    d9d8:	b.eq	dc34 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x2c4>  // b.none
    d9dc:	ldrb	w0, [x4, #16]
    d9e0:	ldr	x20, [x4, #8]
    d9e4:	cbnz	w0, da84 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x114>
    d9e8:	ldr	w0, [x19, #40]
    d9ec:	cmp	w0, #0x1
    d9f0:	b.ls	da84 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x114>  // b.plast
    d9f4:	ldr	x3, [x20]
    d9f8:	mov	x5, #0xfffffffffffffff0    	// #-16
    d9fc:	ldr	w2, [x19, #44]
    da00:	sub	w1, w0, #0x1
    da04:	mov	x0, x20
    da08:	ldr	x3, [x3, #96]
    da0c:	add	w2, w2, #0x1
    da10:	str	x5, [x4]
    da14:	stp	w1, w2, [x19, #40]
    da18:	mov	x1, x19
    da1c:	blr	x3
    da20:	mov	x20, x0
    da24:	ldr	w4, [x19, #48]
    da28:	cbz	w4, dac8 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x158>
    da2c:	ldr	x1, [sp, #56]
    da30:	cmn	x1, #0x8
    da34:	ccmn	x1, #0x10, #0x4, ne  // ne = any
    da38:	b.eq	dc04 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x294>  // b.none
    da3c:	lsr	w0, w1, #9
    da40:	sub	w6, w4, #0x1
    da44:	eor	w0, w0, w1, lsr #4
    da48:	and	w0, w0, w6
    da4c:	ldr	x3, [x19, #32]
    da50:	umull	x5, w0, w21
    da54:	add	x2, x3, x5
    da58:	ldr	x5, [x3, x5]
    da5c:	cmp	x5, x1
    da60:	b.ne	db34 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x1c4>  // b.any
    da64:	mov	w0, #0x1                   	// #1
    da68:	strb	w0, [x2, #16]
    da6c:	ldp	x21, x22, [sp, #32]
    da70:	str	x20, [x2, #8]
    da74:	mov	x0, x20
    da78:	ldp	x19, x20, [sp, #16]
    da7c:	ldp	x29, x30, [sp], #80
    da80:	ret
    da84:	ldp	x21, x22, [sp, #32]
    da88:	mov	x0, x20
    da8c:	ldp	x19, x20, [sp, #16]
    da90:	ldp	x29, x30, [sp], #80
    da94:	ret
    da98:	cbz	x20, da88 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x118>
    da9c:	mov	x20, #0x0                   	// #0
    daa0:	mov	x0, x20
    daa4:	ldp	x19, x20, [sp, #16]
    daa8:	ldp	x29, x30, [sp], #80
    daac:	ret
    dab0:	mov	w4, #0x1                   	// #1
    dab4:	cmn	x0, #0x8
    dab8:	b.ne	db8c <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x21c>  // b.any
    dabc:	mov	x20, #0x0                   	// #0
    dac0:	ldp	x21, x22, [sp, #32]
    dac4:	b	daa0 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x130>
    dac8:	ldr	x0, [x19, #24]
    dacc:	mov	w6, #0x0                   	// #0
    dad0:	add	x0, x0, #0x1
    dad4:	str	x0, [x19, #24]
    dad8:	mov	w1, w6
    dadc:	mov	x0, x22
    dae0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dae4:	add	x2, sp, #0x48
    dae8:	mov	x0, x22
    daec:	add	x1, sp, #0x38
    daf0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    daf4:	ldr	x2, [sp, #72]
    daf8:	cbz	x2, dc14 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x2a4>
    dafc:	ldr	w3, [x19, #40]
    db00:	ldr	x1, [sp, #56]
    db04:	nop
    db08:	add	w0, w3, #0x1
    db0c:	ldr	x4, [x2]
    db10:	str	w0, [x19, #40]
    db14:	cmn	x4, #0x8
    db18:	b.eq	db28 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x1b8>  // b.none
    db1c:	ldr	w0, [x19, #44]
    db20:	sub	w0, w0, #0x1
    db24:	str	w0, [x19, #44]
    db28:	stp	x1, xzr, [x2]
    db2c:	strb	wzr, [x2, #16]
    db30:	b	da64 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0xf4>
    db34:	mov	w8, #0x1                   	// #1
    db38:	mov	x7, #0x0                   	// #0
    db3c:	cmn	x5, #0x8
    db40:	b.ne	dbb4 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x244>  // b.any
    db44:	ldr	x0, [x19, #24]
    db48:	lsl	w6, w4, #1
    db4c:	ldr	w3, [x19, #40]
    db50:	cmp	x7, #0x0
    db54:	add	x0, x0, #0x1
    db58:	str	x0, [x19, #24]
    db5c:	add	w5, w3, #0x1
    db60:	add	w0, w6, w4
    db64:	csel	x2, x2, x7, eq  // eq = none
    db68:	cmp	w0, w5, lsl #2
    db6c:	b.ls	dad8 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x168>  // b.plast
    db70:	ldr	w0, [x19, #44]
    db74:	sub	w0, w4, w0
    db78:	sub	w0, w0, w5
    db7c:	cmp	w0, w4, lsr #3
    db80:	b.hi	db08 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x198>  // b.pmore
    db84:	mov	w1, w4
    db88:	b	dadc <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x16c>
    db8c:	add	w2, w2, w4
    db90:	add	w7, w4, #0x1
    db94:	and	w2, w6, w2
    db98:	umull	x0, w2, w5
    db9c:	add	x4, x20, x0
    dba0:	ldr	x0, [x20, x0]
    dba4:	cmp	x1, x0
    dba8:	b.eq	d9c8 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x58>  // b.none
    dbac:	mov	w4, w7
    dbb0:	b	dab4 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x144>
    dbb4:	add	w0, w0, w8
    dbb8:	cmp	x7, #0x0
    dbbc:	and	w0, w6, w0
    dbc0:	ccmn	x5, #0x10, #0x0, eq  // eq = none
    dbc4:	csel	x7, x7, x2, ne  // ne = any
    dbc8:	add	w8, w8, #0x1
    dbcc:	umull	x5, w0, w21
    dbd0:	add	x2, x3, x5
    dbd4:	ldr	x5, [x3, x5]
    dbd8:	cmp	x1, x5
    dbdc:	b.eq	da64 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0xf4>  // b.none
    dbe0:	b	db3c <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x1cc>
    dbe4:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dbe8:	add	x3, x3, #0x0
    dbec:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dbf0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dbf4:	add	x1, x1, #0x0
    dbf8:	add	x0, x0, #0x0
    dbfc:	mov	w2, #0x250                 	// #592
    dc00:	bl	0 <__assert_fail>
    dc04:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dc08:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dc0c:	add	x3, x3, #0x0
    dc10:	b	dbf0 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x280>
    dc14:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dc18:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dc1c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dc20:	add	x3, x3, #0x0
    dc24:	add	x1, x1, #0x0
    dc28:	add	x0, x0, #0x0
    dc2c:	mov	w2, #0x22f                 	// #559
    dc30:	bl	0 <__assert_fail>
    dc34:	mov	x20, #0x0                   	// #0
    dc38:	ldp	x21, x22, [sp, #32]
    dc3c:	b	da88 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x118>

000000000000dc40 <_ZL12ForeachApplyPN4llvm4InitES1_S1_PNS_6RecordE>:
    dc40:	stp	x29, x30, [sp, #-128]!
    dc44:	mov	x29, sp
    dc48:	stp	x19, x20, [sp, #16]
    dc4c:	adrp	x19, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dc50:	mov	x20, x2
    dc54:	ldr	x4, [x19]
    dc58:	stp	x23, x24, [sp, #48]
    dc5c:	add	x24, sp, #0x48
    dc60:	add	x2, x4, #0x10
    dc64:	mov	x23, x0
    dc68:	add	x0, x24, #0x18
    dc6c:	stp	x21, x22, [sp, #32]
    dc70:	mov	x21, x1
    dc74:	mov	x22, #0x1                   	// #1
    dc78:	mov	w1, #0x0                   	// #0
    dc7c:	stp	x2, x3, [sp, #72]
    dc80:	strb	wzr, [sp, #88]
    dc84:	stp	x22, xzr, [sp, #96]
    dc88:	str	xzr, [sp, #112]
    dc8c:	str	wzr, [sp, #120]
    dc90:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dc94:	ldr	w1, [sp, #120]
    dc98:	cbz	w1, dd44 <_ZL12ForeachApplyPN4llvm4InitES1_S1_PNS_6RecordE+0x104>
    dc9c:	cmn	x23, #0x10
    dca0:	ccmn	x23, #0x8, #0x4, ne  // ne = any
    dca4:	b.eq	ddcc <_ZL12ForeachApplyPN4llvm4InitES1_S1_PNS_6RecordE+0x18c>  // b.none
    dca8:	lsr	w0, w23, #9
    dcac:	sub	w1, w1, #0x1
    dcb0:	eor	w0, w0, w23, lsr #4
    dcb4:	mov	w5, #0x18                  	// #24
    dcb8:	and	w0, w0, w1
    dcbc:	ldr	x3, [sp, #104]
    dcc0:	umull	x4, w0, w5
    dcc4:	add	x2, x3, x4
    dcc8:	ldr	x4, [x3, x4]
    dccc:	cmp	x23, x4
    dcd0:	b.ne	dd64 <_ZL12ForeachApplyPN4llvm4InitES1_S1_PNS_6RecordE+0x124>  // b.any
    dcd4:	ldr	w0, [sp, #112]
    dcd8:	add	w0, w0, #0x1
    dcdc:	str	w0, [sp, #112]
    dce0:	ldr	w0, [sp, #116]
    dce4:	sub	w0, w0, #0x1
    dce8:	str	w0, [sp, #116]
    dcec:	ldr	x3, [x20]
    dcf0:	stp	x23, x21, [x2]
    dcf4:	mov	x1, x24
    dcf8:	strb	wzr, [x2, #16]
    dcfc:	mov	x0, x20
    dd00:	ldr	x2, [x3, #96]
    dd04:	blr	x2
    dd08:	mov	x20, x0
    dd0c:	ldr	w2, [sp, #120]
    dd10:	mov	w1, #0x18                  	// #24
    dd14:	ldr	x0, [sp, #104]
    dd18:	ldr	x19, [x19]
    dd1c:	umull	x1, w2, w1
    dd20:	add	x19, x19, #0x10
    dd24:	str	x19, [sp, #72]
    dd28:	bl	0 <_ZdlPvm>
    dd2c:	mov	x0, x20
    dd30:	ldp	x19, x20, [sp, #16]
    dd34:	ldp	x21, x22, [sp, #32]
    dd38:	ldp	x23, x24, [sp, #48]
    dd3c:	ldp	x29, x30, [sp], #128
    dd40:	ret
    dd44:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dd48:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dd4c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dd50:	add	x3, x3, #0x0
    dd54:	add	x1, x1, #0x0
    dd58:	add	x0, x0, #0x0
    dd5c:	mov	w2, #0x22f                 	// #559
    dd60:	bl	0 <__assert_fail>
    dd64:	mov	x6, #0x0                   	// #0
    dd68:	cmn	x4, #0x8
    dd6c:	b.ne	dd9c <_ZL12ForeachApplyPN4llvm4InitES1_S1_PNS_6RecordE+0x15c>  // b.any
    dd70:	cbz	x6, dd94 <_ZL12ForeachApplyPN4llvm4InitES1_S1_PNS_6RecordE+0x154>
    dd74:	ldr	x1, [x6]
    dd78:	mov	x2, x6
    dd7c:	ldr	w0, [sp, #112]
    dd80:	cmn	x1, #0x8
    dd84:	add	w0, w0, #0x1
    dd88:	str	w0, [sp, #112]
    dd8c:	b.ne	dce0 <_ZL12ForeachApplyPN4llvm4InitES1_S1_PNS_6RecordE+0xa0>  // b.any
    dd90:	b	dcec <_ZL12ForeachApplyPN4llvm4InitES1_S1_PNS_6RecordE+0xac>
    dd94:	ldr	x1, [x2]
    dd98:	b	dd7c <_ZL12ForeachApplyPN4llvm4InitES1_S1_PNS_6RecordE+0x13c>
    dd9c:	add	w0, w22, w0
    dda0:	cmp	x6, #0x0
    dda4:	and	w0, w1, w0
    dda8:	ccmn	x4, #0x10, #0x0, eq  // eq = none
    ddac:	csel	x6, x6, x2, ne  // ne = any
    ddb0:	add	w22, w22, #0x1
    ddb4:	umull	x4, w0, w5
    ddb8:	add	x2, x3, x4
    ddbc:	ldr	x4, [x3, x4]
    ddc0:	cmp	x23, x4
    ddc4:	b.eq	dcd4 <_ZL12ForeachApplyPN4llvm4InitES1_S1_PNS_6RecordE+0x94>  // b.none
    ddc8:	b	dd68 <_ZL12ForeachApplyPN4llvm4InitES1_S1_PNS_6RecordE+0x128>
    ddcc:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ddd0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ddd4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ddd8:	add	x3, x3, #0x0
    dddc:	add	x1, x1, #0x0
    dde0:	add	x0, x0, #0x0
    dde4:	mov	w2, #0x250                 	// #592
    dde8:	bl	0 <__assert_fail>
    ddec:	nop

000000000000ddf0 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE>:
    ddf0:	stp	x29, x30, [sp, #-272]!
    ddf4:	mov	x29, sp
    ddf8:	stp	x27, x28, [sp, #80]
    ddfc:	mov	x27, x1
    de00:	ldr	x1, [x1, #32]
    de04:	stp	x19, x20, [sp, #16]
    de08:	mov	x20, x2
    de0c:	mov	x19, x0
    de10:	stp	x21, x22, [sp, #32]
    de14:	mov	x21, x3
    de18:	add	x22, sp, #0x80
    de1c:	str	x22, [sp, #104]
    de20:	bl	dc40 <_ZL12ForeachApplyPN4llvm4InitES1_S1_PNS_6RecordE>
    de24:	str	x0, [sp, #112]
    de28:	ldr	x1, [x27, #32]
    de2c:	add	x2, x22, #0x10
    de30:	ldr	w3, [x27, #48]
    de34:	cmp	x0, x1
    de38:	mov	x0, #0x800000000           	// #34359738368
    de3c:	str	x2, [sp, #128]
    de40:	str	x0, [sp, #136]
    de44:	cbz	w3, df88 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x198>
    de48:	stp	x23, x24, [sp, #48]
    de4c:	cset	w23, ne  // ne = any
    de50:	mov	w28, #0x0                   	// #0
    de54:	mov	x24, #0x38                  	// #56
    de58:	stp	x25, x26, [sp, #64]
    de5c:	mov	w25, #0x1                   	// #1
    de60:	add	x0, x27, w28, uxtw #3
    de64:	ldr	w1, [x27, #52]
    de68:	cmp	w28, w1
    de6c:	ldr	x22, [x0, #56]
    de70:	b.cs	dfbc <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x1cc>  // b.hs, b.nlast
    de74:	add	x3, x24, w3, uxtw #3
    de78:	ldr	x26, [x0, x3]
    de7c:	cbz	x22, dfdc <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x1ec>
    de80:	ldrb	w0, [x22, #8]
    de84:	mov	x3, x21
    de88:	mov	x2, x20
    de8c:	mov	x1, x22
    de90:	cmp	w0, #0x5
    de94:	mov	x0, x19
    de98:	b.eq	df34 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x144>  // b.none
    de9c:	bl	dc40 <_ZL12ForeachApplyPN4llvm4InitES1_S1_PNS_6RecordE>
    dea0:	mov	x2, x0
    dea4:	ldp	w4, w1, [sp, #136]
    dea8:	cmp	w4, w1
    deac:	b.cs	df48 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x158>  // b.hs, b.nlast
    deb0:	ldr	x3, [sp, #128]
    deb4:	ubfiz	x0, x4, #4, #32
    deb8:	mov	w5, w4
    debc:	add	x8, x3, x0
    dec0:	add	x5, x5, #0x1
    dec4:	str	x2, [x3, x0]
    dec8:	cmp	x5, w1, uxtw
    decc:	str	x26, [x8, #8]
    ded0:	b.hi	df9c <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x1ac>  // b.pmore
    ded4:	ldr	w3, [x27, #48]
    ded8:	add	w4, w4, #0x1
    dedc:	str	w4, [sp, #136]
    dee0:	cmp	x2, x22
    dee4:	add	w28, w28, #0x1
    dee8:	csel	w23, w23, w25, eq  // eq = none
    deec:	cmp	w28, w3
    def0:	b.cc	de60 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x70>  // b.lo, b.ul, b.last
    def4:	ldr	x2, [sp, #128]
    def8:	cbnz	w23, df64 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x174>
    defc:	ldp	x23, x24, [sp, #48]
    df00:	ldp	x25, x26, [sp, #64]
    df04:	ldr	x0, [sp, #104]
    df08:	add	x22, x0, #0x10
    df0c:	cmp	x2, x22
    df10:	b.eq	df1c <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x12c>  // b.none
    df14:	mov	x0, x2
    df18:	bl	0 <free>
    df1c:	mov	x0, x27
    df20:	ldp	x19, x20, [sp, #16]
    df24:	ldp	x21, x22, [sp, #32]
    df28:	ldp	x27, x28, [sp, #80]
    df2c:	ldp	x29, x30, [sp], #272
    df30:	ret
    df34:	bl	ddf0 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE>
    df38:	mov	x2, x0
    df3c:	ldp	w4, w1, [sp, #136]
    df40:	cmp	w4, w1
    df44:	b.cc	deb0 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0xc0>  // b.lo, b.ul, b.last
    df48:	ldr	x0, [sp, #104]
    df4c:	mov	x1, #0x0                   	// #0
    df50:	str	x2, [sp, #120]
    df54:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    df58:	ldp	w4, w1, [sp, #136]
    df5c:	ldr	x2, [sp, #120]
    df60:	b	deb0 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0xc0>
    df64:	ldp	x23, x24, [sp, #48]
    df68:	mov	w3, w4
    df6c:	ldp	x25, x26, [sp, #64]
    df70:	mov	x1, #0x0                   	// #0
    df74:	ldr	x0, [sp, #112]
    df78:	bl	49d8 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE>
    df7c:	mov	x27, x0
    df80:	ldr	x2, [sp, #128]
    df84:	b	df04 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x114>
    df88:	ldr	x0, [sp, #112]
    df8c:	cmp	x0, x1
    df90:	b.eq	df1c <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x12c>  // b.none
    df94:	mov	x3, #0x0                   	// #0
    df98:	b	df70 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x180>
    df9c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dfa0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dfa4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dfa8:	add	x3, x3, #0x0
    dfac:	add	x1, x1, #0x0
    dfb0:	add	x0, x0, #0x0
    dfb4:	mov	w2, #0x43                  	// #67
    dfb8:	bl	0 <__assert_fail>
    dfbc:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dfc0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dfc4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dfc8:	add	x3, x3, #0x0
    dfcc:	add	x1, x1, #0x0
    dfd0:	add	x0, x0, #0x0
    dfd4:	mov	w2, #0x545                 	// #1349
    dfd8:	bl	0 <__assert_fail>
    dfdc:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dfe0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dfe4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dfe8:	add	x3, x3, #0x0
    dfec:	add	x1, x1, #0x0
    dff0:	add	x0, x0, #0x0
    dff4:	mov	w2, #0x69                  	// #105
    dff8:	bl	0 <__assert_fail>
    dffc:	nop

000000000000e000 <_ZN4llvm10VarDefInit11instantiateEv>:
    e000:	stp	x29, x30, [sp, #-272]!
    e004:	mov	x29, sp
    e008:	stp	x27, x28, [sp, #80]
    e00c:	mov	x28, x0
    e010:	ldr	x0, [x0, #40]
    e014:	cbz	x0, e024 <_ZN4llvm10VarDefInit11instantiateEv+0x24>
    e018:	ldp	x27, x28, [sp, #80]
    e01c:	ldp	x29, x30, [sp], #272
    e020:	ret
    e024:	ldr	x0, [x28, #32]
    e028:	stp	x21, x22, [sp, #32]
    e02c:	stp	x19, x20, [sp, #16]
    e030:	ldr	x22, [x0, #104]
    e034:	stp	x23, x24, [sp, #48]
    e038:	mov	x0, x22
    e03c:	stp	x25, x26, [sp, #64]
    e040:	bl	b680 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv>
    e044:	ldr	x1, [x28, #32]
    e048:	mov	x20, x0
    e04c:	mov	x0, #0x80                  	// #128
    e050:	ldr	w19, [x1, #16]
    e054:	ldr	x21, [x1, #8]
    e058:	bl	0 <_Znwm>
    e05c:	mov	x27, x0
    e060:	str	x20, [x0], #24
    e064:	mov	x1, #0x400000000           	// #17179869184
    e068:	mov	w23, w19
    e06c:	ubfiz	x19, x19, #3, #32
    e070:	stp	x0, x1, [x27, #8]
    e074:	cmp	x19, #0x20
    e078:	b.hi	e658 <_ZN4llvm10VarDefInit11instantiateEv+0x658>  // b.pmore
    e07c:	cbnz	x19, e678 <_ZN4llvm10VarDefInit11instantiateEv+0x678>
    e080:	ldr	w0, [x27, #20]
    e084:	add	x1, x19, x23
    e088:	cmp	x1, x0
    e08c:	b.hi	ebb8 <_ZN4llvm10VarDefInit11instantiateEv+0xbb8>  // b.pmore
    e090:	adrp	x2, 3a8 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE+0x18>
    e094:	str	w1, [x27, #16]
    e098:	add	x5, x27, #0x68
    e09c:	mov	w3, #0x1                   	// #1
    e0a0:	ldr	x2, [x2]
    e0a4:	mov	x0, x27
    e0a8:	add	x19, x27, #0x48
    e0ac:	add	x20, x27, #0x58
    e0b0:	stp	x19, xzr, [x27, #56]
    e0b4:	mov	w23, #0x18                  	// #24
    e0b8:	ldr	w1, [x2]
    e0bc:	stp	x20, xzr, [x27, #72]
    e0c0:	add	w4, w1, #0x1
    e0c4:	str	w4, [x2]
    e0c8:	stp	x5, xzr, [x27, #88]
    e0cc:	stp	x22, xzr, [x27, #104]
    e0d0:	str	x5, [sp, #104]
    e0d4:	str	w1, [x27, #120]
    e0d8:	strh	w3, [x27, #124]
    e0dc:	bl	34b8 <_ZN4llvm6Record9checkNameEv>
    e0e0:	ldr	x0, [x28, #32]
    e0e4:	ldr	w25, [x0, #80]
    e0e8:	ldr	x21, [x0, #72]
    e0ec:	umaddl	x25, w25, w23, x21
    e0f0:	cmp	x21, x25
    e0f4:	b.eq	e198 <_ZN4llvm10VarDefInit11instantiateEv+0x198>  // b.none
    e0f8:	ldr	w4, [x27, #80]
    e0fc:	nop
    e100:	ldr	x2, [x27, #72]
    e104:	ldr	x1, [x21]
    e108:	umaddl	x3, w4, w23, x2
    e10c:	cmp	x2, x3
    e110:	b.ne	e124 <_ZN4llvm10VarDefInit11instantiateEv+0x124>  // b.any
    e114:	b	e150 <_ZN4llvm10VarDefInit11instantiateEv+0x150>
    e118:	add	x2, x2, #0x18
    e11c:	cmp	x3, x2
    e120:	b.eq	e150 <_ZN4llvm10VarDefInit11instantiateEv+0x150>  // b.none
    e124:	ldr	x0, [x2]
    e128:	cmp	x1, x0
    e12c:	b.ne	e118 <_ZN4llvm10VarDefInit11instantiateEv+0x118>  // b.any
    e130:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e134:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e138:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e13c:	add	x3, x3, #0x0
    e140:	add	x1, x1, #0x0
    e144:	add	x0, x0, #0x0
    e148:	mov	w2, #0x60a                 	// #1546
    e14c:	bl	0 <__assert_fail>
    e150:	ldr	w0, [x27, #84]
    e154:	cmp	w0, w4
    e158:	b.ls	e5ac <_ZN4llvm10VarDefInit11instantiateEv+0x5ac>  // b.plast
    e15c:	ldp	x0, x1, [x21]
    e160:	stp	x0, x1, [x3]
    e164:	ldr	x0, [x21, #16]
    e168:	str	x0, [x3, #16]
    e16c:	ldp	w4, w1, [x27, #80]
    e170:	mov	w0, w4
    e174:	add	x0, x0, #0x1
    e178:	cmp	x0, x1
    e17c:	b.hi	ebb8 <_ZN4llvm10VarDefInit11instantiateEv+0xbb8>  // b.pmore
    e180:	add	w4, w4, #0x1
    e184:	str	w4, [x27, #80]
    e188:	add	x21, x21, #0x18
    e18c:	cmp	x25, x21
    e190:	b.ne	e100 <_ZN4llvm10VarDefInit11instantiateEv+0x100>  // b.any
    e194:	ldr	x0, [x28, #32]
    e198:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e19c:	ldr	w19, [x0, #64]
    e1a0:	ldr	x1, [x1]
    e1a4:	strb	wzr, [sp, #232]
    e1a8:	stp	xzr, xzr, [sp, #240]
    e1ac:	mov	w20, w19
    e1b0:	add	x1, x1, #0x10
    e1b4:	stp	x1, x27, [sp, #216]
    e1b8:	str	xzr, [sp, #256]
    e1bc:	str	wzr, [sp, #264]
    e1c0:	ldr	x8, [x0, #56]
    e1c4:	cbz	w19, e2fc <_ZN4llvm10VarDefInit11instantiateEv+0x2fc>
    e1c8:	add	x0, sp, #0xc0
    e1cc:	mov	x24, x8
    e1d0:	add	x23, sp, #0xf0
    e1d4:	mov	x26, #0x0                   	// #0
    e1d8:	mov	w25, #0x18                  	// #24
    e1dc:	str	x0, [sp, #112]
    e1e0:	add	x0, sp, #0xb8
    e1e4:	str	x0, [sp, #120]
    e1e8:	ldr	w0, [x28, #48]
    e1ec:	cmp	w0, w26
    e1f0:	b.ls	e3b4 <_ZN4llvm10VarDefInit11instantiateEv+0x3b4>  // b.plast
    e1f4:	cmp	x20, x26
    e1f8:	b.ls	eb98 <_ZN4llvm10VarDefInit11instantiateEv+0xb98>  // b.plast
    e1fc:	ldr	w1, [sp, #264]
    e200:	add	x0, x28, #0x38
    e204:	ldr	x21, [x24]
    e208:	ldr	x5, [x0, x26, lsl #3]
    e20c:	cbz	w1, e5d0 <_ZN4llvm10VarDefInit11instantiateEv+0x5d0>
    e210:	cmn	x21, #0x8
    e214:	ccmn	x21, #0x10, #0x4, ne  // ne = any
    e218:	b.eq	eb78 <_ZN4llvm10VarDefInit11instantiateEv+0xb78>  // b.none
    e21c:	lsr	w6, w21, #4
    e220:	lsr	w11, w21, #9
    e224:	eor	w10, w6, w11
    e228:	sub	w13, w1, #0x1
    e22c:	and	w12, w10, w13
    e230:	ldr	x3, [sp, #248]
    e234:	umull	x4, w12, w25
    e238:	add	x0, x3, x4
    e23c:	ldr	x4, [x3, x4]
    e240:	cmp	x21, x4
    e244:	b.ne	e4e4 <_ZN4llvm10VarDefInit11instantiateEv+0x4e4>  // b.any
    e248:	ldr	w4, [x27, #80]
    e24c:	str	x5, [x0, #8]
    e250:	mov	w6, w4
    e254:	strb	wzr, [x0, #16]
    e258:	ldr	x10, [x24]
    e25c:	cbz	w4, ea10 <_ZN4llvm10VarDefInit11instantiateEv+0xa10>
    e260:	sub	w1, w4, #0x1
    e264:	ldr	x2, [x27, #72]
    e268:	umull	x1, w1, w25
    e26c:	add	x5, x2, #0x18
    e270:	mov	x0, x2
    e274:	add	x5, x5, x1
    e278:	add	x1, x1, x2
    e27c:	b	e294 <_ZN4llvm10VarDefInit11instantiateEv+0x294>
    e280:	cmp	x1, x0
    e284:	b.eq	ea10 <_ZN4llvm10VarDefInit11instantiateEv+0xa10>  // b.none
    e288:	add	x0, x0, #0x18
    e28c:	cmp	x5, x0
    e290:	b.eq	e9f0 <_ZN4llvm10VarDefInit11instantiateEv+0x9f0>  // b.none
    e294:	ldr	x3, [x0]
    e298:	cmp	x10, x3
    e29c:	b.ne	e280 <_ZN4llvm10VarDefInit11instantiateEv+0x280>  // b.any
    e2a0:	cmp	x2, x0
    e2a4:	b.hi	ebf8 <_ZN4llvm10VarDefInit11instantiateEv+0xbf8>  // b.pmore
    e2a8:	add	x1, x6, x6, lsl #1
    e2ac:	add	x2, x2, x1, lsl #3
    e2b0:	cmp	x0, x2
    e2b4:	b.cs	ebd8 <_ZN4llvm10VarDefInit11instantiateEv+0xbd8>  // b.hs, b.nlast
    e2b8:	add	x1, x0, #0x18
    e2bc:	cmp	x2, x1
    e2c0:	b.eq	e2d4 <_ZN4llvm10VarDefInit11instantiateEv+0x2d4>  // b.none
    e2c4:	sub	x2, x2, x1
    e2c8:	bl	0 <memmove>
    e2cc:	ldr	w4, [x27, #80]
    e2d0:	mov	w6, w4
    e2d4:	ldr	w0, [x27, #84]
    e2d8:	sub	x6, x6, #0x1
    e2dc:	cmp	x6, x0
    e2e0:	b.hi	ebb8 <_ZN4llvm10VarDefInit11instantiateEv+0xbb8>  // b.pmore
    e2e4:	sub	w4, w4, #0x1
    e2e8:	str	w4, [x27, #80]
    e2ec:	add	x26, x26, #0x1
    e2f0:	add	x24, x24, #0x8
    e2f4:	cmp	w19, w26
    e2f8:	b.ne	e1e8 <_ZN4llvm10VarDefInit11instantiateEv+0x1e8>  // b.any
    e2fc:	add	x1, sp, #0xd8
    e300:	mov	x0, x27
    e304:	mov	x2, #0x0                   	// #0
    e308:	bl	65a0 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE>
    e30c:	ldr	x19, [x28, #32]
    e310:	mov	w11, #0x18                  	// #24
    e314:	ldr	w12, [x19, #96]
    e318:	ldr	x4, [x19, #88]
    e31c:	umaddl	x26, w12, w11, x4
    e320:	cmp	x26, x4
    e324:	b.eq	e484 <_ZN4llvm10VarDefInit11instantiateEv+0x484>  // b.none
    e328:	mov	w21, #0xffffffe8            	// #-24
    e32c:	mov	x20, x4
    e330:	mov	w23, w11
    e334:	adrp	x19, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e338:	movk	x21, #0x17, lsl #32
    e33c:	add	x0, x19, #0x0
    e340:	str	x0, [sp, #120]
    e344:	nop
    e348:	ldr	x0, [x27, #112]
    e34c:	ldp	x24, x10, [x20]
    e350:	ldr	x9, [x20, #16]
    e354:	cbnz	x0, ec18 <_ZN4llvm10VarDefInit11instantiateEv+0xc18>
    e358:	ldr	w3, [x27, #96]
    e35c:	ldr	x5, [x27, #88]
    e360:	mov	w6, w3
    e364:	umull	x13, w3, w23
    e368:	add	x25, x5, x13
    e36c:	cmp	x5, x25
    e370:	b.eq	e448 <_ZN4llvm10VarDefInit11instantiateEv+0x448>  // b.none
    e374:	mov	x1, x5
    e378:	b	e388 <_ZN4llvm10VarDefInit11instantiateEv+0x388>
    e37c:	add	x1, x1, #0x18
    e380:	cmp	x25, x1
    e384:	b.eq	e448 <_ZN4llvm10VarDefInit11instantiateEv+0x448>  // b.none
    e388:	ldr	x0, [x1]
    e38c:	cmp	x24, x0
    e390:	b.ne	e37c <_ZN4llvm10VarDefInit11instantiateEv+0x37c>  // b.any
    e394:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e398:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e39c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e3a0:	add	x3, x3, #0x0
    e3a4:	add	x1, x1, #0x0
    e3a8:	add	x0, x0, #0x0
    e3ac:	mov	w2, #0x630                 	// #1584
    e3b0:	bl	0 <__assert_fail>
    e3b4:	cmp	x20, x26
    e3b8:	b.ls	eb98 <_ZN4llvm10VarDefInit11instantiateEv+0xb98>  // b.plast
    e3bc:	ldr	w5, [x27, #80]
    e3c0:	ldr	x2, [x27, #72]
    e3c4:	mov	w4, w5
    e3c8:	mov	w6, w5
    e3cc:	ldr	x3, [x24]
    e3d0:	umaddl	x1, w5, w25, x2
    e3d4:	cmp	x2, x1
    e3d8:	b.ne	e3ec <_ZN4llvm10VarDefInit11instantiateEv+0x3ec>  // b.any
    e3dc:	b	ed2c <_ZN4llvm10VarDefInit11instantiateEv+0xd2c>
    e3e0:	add	x2, x2, #0x18
    e3e4:	cmp	x1, x2
    e3e8:	b.eq	ed2c <_ZN4llvm10VarDefInit11instantiateEv+0xd2c>  // b.none
    e3ec:	ldr	x0, [x2]
    e3f0:	cmp	x3, x0
    e3f4:	b.ne	e3e0 <_ZN4llvm10VarDefInit11instantiateEv+0x3e0>  // b.any
    e3f8:	ldr	w1, [sp, #264]
    e3fc:	str	x3, [sp, #184]
    e400:	ldr	x21, [x2, #16]
    e404:	ldr	x12, [sp, #248]
    e408:	cbz	w1, e8fc <_ZN4llvm10VarDefInit11instantiateEv+0x8fc>
    e40c:	cmn	x3, #0x10
    e410:	ccmn	x3, #0x8, #0x4, ne  // ne = any
    e414:	b.eq	eb78 <_ZN4llvm10VarDefInit11instantiateEv+0xb78>  // b.none
    e418:	lsr	w0, w3, #9
    e41c:	sub	w13, w1, #0x1
    e420:	eor	w0, w0, w3, lsr #4
    e424:	and	w0, w0, w13
    e428:	umull	x11, w0, w25
    e42c:	add	x2, x12, x11
    e430:	ldr	x11, [x12, x11]
    e434:	cmp	x3, x11
    e438:	b.ne	e874 <_ZN4llvm10VarDefInit11instantiateEv+0x874>  // b.any
    e43c:	str	x21, [x2, #8]
    e440:	strb	wzr, [x2, #16]
    e444:	b	e258 <_ZN4llvm10VarDefInit11instantiateEv+0x258>
    e448:	ldr	w0, [x27, #100]
    e44c:	cmp	w3, w0
    e450:	mov	w19, w0
    e454:	b.cs	e798 <_ZN4llvm10VarDefInit11instantiateEv+0x798>  // b.hs, b.nlast
    e458:	stp	x24, x10, [x25]
    e45c:	add	x6, x6, #0x1
    e460:	cmp	x19, x6
    e464:	str	x9, [x25, #16]
    e468:	b.cc	ebb8 <_ZN4llvm10VarDefInit11instantiateEv+0xbb8>  // b.lo, b.ul, b.last
    e46c:	add	w3, w3, #0x1
    e470:	str	w3, [x27, #96]
    e474:	add	x20, x20, #0x18
    e478:	cmp	x26, x20
    e47c:	b.ne	e348 <_ZN4llvm10VarDefInit11instantiateEv+0x348>  // b.any
    e480:	ldr	x19, [x28, #32]
    e484:	ldr	w0, [x19, #16]
    e488:	ldr	x2, [x19, #8]
    e48c:	cbz	w0, ed0c <_ZN4llvm10VarDefInit11instantiateEv+0xd0c>
    e490:	ldr	x1, [x27, #112]
    e494:	add	x0, x2, w0, uxtw #3
    e498:	ldur	x5, [x0, #-8]
    e49c:	cbnz	x1, ec18 <_ZN4llvm10VarDefInit11instantiateEv+0xc18>
    e4a0:	ldr	w26, [x27, #96]
    e4a4:	mov	w3, #0x18                  	// #24
    e4a8:	ldr	x4, [x27, #88]
    e4ac:	mov	w6, w26
    e4b0:	umull	x3, w26, w3
    e4b4:	add	x20, x4, x3
    e4b8:	cmp	x4, x20
    e4bc:	b.eq	e68c <_ZN4llvm10VarDefInit11instantiateEv+0x68c>  // b.none
    e4c0:	mov	x0, x4
    e4c4:	b	e4d4 <_ZN4llvm10VarDefInit11instantiateEv+0x4d4>
    e4c8:	add	x0, x0, #0x18
    e4cc:	cmp	x20, x0
    e4d0:	b.eq	e68c <_ZN4llvm10VarDefInit11instantiateEv+0x68c>  // b.none
    e4d4:	ldr	x1, [x0]
    e4d8:	cmp	x1, x19
    e4dc:	b.ne	e4c8 <_ZN4llvm10VarDefInit11instantiateEv+0x4c8>  // b.any
    e4e0:	b	e394 <_ZN4llvm10VarDefInit11instantiateEv+0x394>
    e4e4:	mov	x14, #0x0                   	// #0
    e4e8:	mov	w15, #0x1                   	// #1
    e4ec:	cmn	x4, #0x8
    e4f0:	b.ne	ea28 <_ZN4llvm10VarDefInit11instantiateEv+0xa28>  // b.any
    e4f4:	ldr	x3, [sp, #240]
    e4f8:	lsl	w12, w1, #1
    e4fc:	ldr	w4, [sp, #256]
    e500:	cmp	x14, #0x0
    e504:	add	x3, x3, #0x1
    e508:	str	x3, [sp, #240]
    e50c:	add	w4, w4, #0x1
    e510:	add	w3, w12, w1
    e514:	csel	x0, x0, x14, eq  // eq = none
    e518:	cmp	w3, w4, lsl #2
    e51c:	b.ls	ec38 <_ZN4llvm10VarDefInit11instantiateEv+0xc38>  // b.plast
    e520:	ldr	w3, [sp, #260]
    e524:	sub	w3, w1, w3
    e528:	sub	w3, w3, w4
    e52c:	cmp	w3, w1, lsr #3
    e530:	b.ls	e55c <_ZN4llvm10VarDefInit11instantiateEv+0x55c>  // b.plast
    e534:	ldr	x1, [x0]
    e538:	str	w4, [sp, #256]
    e53c:	cmn	x1, #0x8
    e540:	b.eq	e550 <_ZN4llvm10VarDefInit11instantiateEv+0x550>  // b.none
    e544:	ldr	w1, [sp, #260]
    e548:	sub	w1, w1, #0x1
    e54c:	str	w1, [sp, #260]
    e550:	stp	x21, xzr, [x0]
    e554:	strb	wzr, [x0, #16]
    e558:	b	e248 <_ZN4llvm10VarDefInit11instantiateEv+0x248>
    e55c:	mov	x0, x23
    e560:	str	x5, [sp, #128]
    e564:	str	w10, [sp, #136]
    e568:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e56c:	ldr	w0, [sp, #264]
    e570:	cbz	w0, ec64 <_ZN4llvm10VarDefInit11instantiateEv+0xc64>
    e574:	ldr	w10, [sp, #136]
    e578:	sub	w1, w0, #0x1
    e57c:	ldr	x3, [sp, #248]
    e580:	and	w10, w10, w1
    e584:	ldr	w4, [sp, #256]
    e588:	ldr	x5, [sp, #128]
    e58c:	umull	x6, w10, w25
    e590:	add	w4, w4, #0x1
    e594:	add	x0, x3, x6
    e598:	ldr	x6, [x3, x6]
    e59c:	cmp	x21, x6
    e5a0:	b.ne	e97c <_ZN4llvm10VarDefInit11instantiateEv+0x97c>  // b.any
    e5a4:	str	w4, [sp, #256]
    e5a8:	b	e544 <_ZN4llvm10VarDefInit11instantiateEv+0x544>
    e5ac:	mov	x0, x19
    e5b0:	mov	x3, #0x18                  	// #24
    e5b4:	mov	x1, x20
    e5b8:	mov	x2, #0x0                   	// #0
    e5bc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    e5c0:	ldr	w3, [x27, #80]
    e5c4:	ldr	x0, [x27, #72]
    e5c8:	umaddl	x3, w3, w23, x0
    e5cc:	b	e15c <_ZN4llvm10VarDefInit11instantiateEv+0x15c>
    e5d0:	ldr	x3, [sp, #240]
    e5d4:	mov	x0, x23
    e5d8:	mov	w1, #0x0                   	// #0
    e5dc:	str	x5, [sp, #128]
    e5e0:	add	x3, x3, #0x1
    e5e4:	str	x3, [sp, #240]
    e5e8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e5ec:	ldr	w0, [sp, #264]
    e5f0:	ldr	x5, [sp, #128]
    e5f4:	cbz	w0, ec64 <_ZN4llvm10VarDefInit11instantiateEv+0xc64>
    e5f8:	cmn	x21, #0x10
    e5fc:	ccmn	x21, #0x8, #0x4, ne  // ne = any
    e600:	b.eq	eb78 <_ZN4llvm10VarDefInit11instantiateEv+0xb78>  // b.none
    e604:	lsr	w6, w21, #4
    e608:	lsr	w11, w21, #9
    e60c:	sub	w10, w0, #0x1
    e610:	eor	w3, w6, w11
    e614:	and	w3, w3, w10
    e618:	ldr	w4, [sp, #256]
    e61c:	ldr	x6, [sp, #248]
    e620:	add	w4, w4, #0x1
    e624:	umull	x1, w3, w25
    e628:	add	x0, x6, x1
    e62c:	ldr	x1, [x6, x1]
    e630:	cmp	x21, x1
    e634:	b.eq	e538 <_ZN4llvm10VarDefInit11instantiateEv+0x538>  // b.none
    e638:	mov	x11, #0x0                   	// #0
    e63c:	mov	w12, #0x1                   	// #1
    e640:	cmn	x1, #0x8
    e644:	b.ne	e9c0 <_ZN4llvm10VarDefInit11instantiateEv+0x9c0>  // b.any
    e648:	cbz	x11, e534 <_ZN4llvm10VarDefInit11instantiateEv+0x534>
    e64c:	mov	x0, x11
    e650:	ldr	x1, [x11]
    e654:	b	e538 <_ZN4llvm10VarDefInit11instantiateEv+0x538>
    e658:	mov	x1, x0
    e65c:	mov	x3, #0x8                   	// #8
    e660:	mov	x2, x23
    e664:	add	x0, x27, x3
    e668:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    e66c:	ldr	x1, [x27, #8]
    e670:	ldr	w0, [x27, #16]
    e674:	add	x0, x1, x0, lsl #3
    e678:	mov	x2, x19
    e67c:	mov	x1, x21
    e680:	bl	0 <memcpy>
    e684:	ldr	w19, [x27, #16]
    e688:	b	e080 <_ZN4llvm10VarDefInit11instantiateEv+0x80>
    e68c:	ldr	w25, [x27, #100]
    e690:	cmp	w26, w25
    e694:	mov	w25, w25
    e698:	b.cs	ea58 <_ZN4llvm10VarDefInit11instantiateEv+0xa58>  // b.hs, b.nlast
    e69c:	stp	x19, x5, [x20]
    e6a0:	add	x6, x6, #0x1
    e6a4:	cmp	x6, x25
    e6a8:	str	x5, [x20, #16]
    e6ac:	b.hi	ebb8 <_ZN4llvm10VarDefInit11instantiateEv+0xbb8>  // b.pmore
    e6b0:	mov	x0, x27
    e6b4:	add	w26, w26, #0x1
    e6b8:	str	w26, [x27, #96]
    e6bc:	bl	6998 <_ZN4llvm6Record17resolveReferencesEv>
    e6c0:	ldr	x0, [x27]
    e6c4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e6c8:	mov	x2, x0
    e6cc:	add	x1, sp, #0xc0
    e6d0:	add	x0, x22, #0x30
    e6d4:	ldp	x3, x2, [x2, #24]
    e6d8:	stp	x3, x2, [sp, #192]
    e6dc:	str	x27, [sp, #208]
    e6e0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e6e4:	and	w20, w1, #0xff
    e6e8:	ldr	x19, [sp, #208]
    e6ec:	cbz	x19, e74c <_ZN4llvm10VarDefInit11instantiateEv+0x74c>
    e6f0:	ldr	x0, [x19, #88]
    e6f4:	add	x1, x19, #0x68
    e6f8:	add	x23, x19, #0x58
    e6fc:	cmp	x0, x1
    e700:	b.eq	e708 <_ZN4llvm10VarDefInit11instantiateEv+0x708>  // b.none
    e704:	bl	0 <free>
    e708:	ldr	x0, [x19, #72]
    e70c:	add	x22, x19, #0x48
    e710:	cmp	x23, x0
    e714:	b.eq	e71c <_ZN4llvm10VarDefInit11instantiateEv+0x71c>  // b.none
    e718:	bl	0 <free>
    e71c:	ldr	x0, [x19, #56]
    e720:	cmp	x22, x0
    e724:	b.eq	e72c <_ZN4llvm10VarDefInit11instantiateEv+0x72c>  // b.none
    e728:	bl	0 <free>
    e72c:	ldr	x0, [x19, #8]
    e730:	add	x1, x19, #0x18
    e734:	cmp	x0, x1
    e738:	b.eq	e740 <_ZN4llvm10VarDefInit11instantiateEv+0x740>  // b.none
    e73c:	bl	0 <free>
    e740:	mov	x0, x19
    e744:	mov	x1, #0x80                  	// #128
    e748:	bl	0 <_ZdlPvm>
    e74c:	cbz	w20, ecb4 <_ZN4llvm10VarDefInit11instantiateEv+0xcb4>
    e750:	mov	x0, x27
    e754:	bl	4d90 <_ZN4llvm7DefInit3getEPNS_6RecordE>
    e758:	ldr	w2, [sp, #264]
    e75c:	mov	w1, #0x18                  	// #24
    e760:	str	x0, [x28, #40]
    e764:	ldr	x0, [sp, #248]
    e768:	umull	x1, w2, w1
    e76c:	adrp	x2, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e770:	ldr	x2, [x2]
    e774:	add	x2, x2, #0x10
    e778:	str	x2, [sp, #216]
    e77c:	bl	0 <_ZdlPvm>
    e780:	ldp	x19, x20, [sp, #16]
    e784:	ldp	x21, x22, [sp, #32]
    e788:	ldr	x0, [x28, #40]
    e78c:	ldp	x23, x24, [sp, #48]
    e790:	ldp	x25, x26, [sp, #64]
    e794:	b	e018 <_ZN4llvm10VarDefInit11instantiateEv+0x18>
    e798:	add	x0, x19, #0x2
    e79c:	orr	x0, x0, x0, lsr #1
    e7a0:	orr	x0, x0, x0, lsr #2
    e7a4:	orr	x0, x0, x0, lsr #4
    e7a8:	orr	x0, x0, x0, lsr #8
    e7ac:	orr	x0, x0, x0, lsr #16
    e7b0:	orr	x0, x0, x0, lsr #32
    e7b4:	add	x19, x0, #0x1
    e7b8:	str	x19, [sp, #192]
    e7bc:	mov	x0, #0xffffffff            	// #4294967295
    e7c0:	cmp	x19, x0
    e7c4:	b.hi	e938 <_ZN4llvm10VarDefInit11instantiateEv+0x938>  // b.pmore
    e7c8:	add	x0, x19, x19, lsl #1
    e7cc:	str	w19, [sp, #112]
    e7d0:	stp	x13, x5, [sp, #128]
    e7d4:	lsl	x0, x0, #3
    e7d8:	str	w3, [sp, #144]
    e7dc:	stp	x6, x9, [sp, #152]
    e7e0:	str	x10, [sp, #168]
    e7e4:	bl	0 <malloc>
    e7e8:	ldr	w3, [sp, #144]
    e7ec:	mov	x15, x0
    e7f0:	ldp	x13, x5, [sp, #128]
    e7f4:	ldp	x6, x9, [sp, #152]
    e7f8:	ldr	x10, [sp, #168]
    e7fc:	cbz	x0, ec84 <_ZN4llvm10VarDefInit11instantiateEv+0xc84>
    e800:	cmp	x25, x5
    e804:	mov	x7, x5
    e808:	mov	x8, x15
    e80c:	b.eq	e830 <_ZN4llvm10VarDefInit11instantiateEv+0x830>  // b.none
    e810:	ldp	x0, x1, [x7]
    e814:	stp	x0, x1, [x8]
    e818:	add	x7, x7, #0x18
    e81c:	ldur	x0, [x7, #-8]
    e820:	str	x0, [x8, #16]
    e824:	cmp	x25, x7
    e828:	add	x8, x8, #0x18
    e82c:	b.ne	e810 <_ZN4llvm10VarDefInit11instantiateEv+0x810>  // b.any
    e830:	ldr	x0, [sp, #104]
    e834:	cmp	x0, x5
    e838:	b.eq	e860 <_ZN4llvm10VarDefInit11instantiateEv+0x860>  // b.none
    e83c:	mov	x0, x5
    e840:	stp	x15, x9, [sp, #128]
    e844:	str	x10, [sp, #144]
    e848:	bl	0 <free>
    e84c:	ldr	w3, [x27, #96]
    e850:	ldp	x15, x9, [sp, #128]
    e854:	mov	w6, w3
    e858:	ldr	x10, [sp, #144]
    e85c:	umull	x13, w3, w23
    e860:	ldr	w0, [sp, #112]
    e864:	add	x25, x15, x13
    e868:	str	x15, [x27, #88]
    e86c:	str	w0, [x27, #100]
    e870:	b	e458 <_ZN4llvm10VarDefInit11instantiateEv+0x458>
    e874:	mov	x14, #0x0                   	// #0
    e878:	mov	w15, #0x1                   	// #1
    e87c:	cmn	x11, #0x8
    e880:	b.ne	eb1c <_ZN4llvm10VarDefInit11instantiateEv+0xb1c>  // b.any
    e884:	ldr	x0, [sp, #240]
    e888:	lsl	w6, w1, #1
    e88c:	ldr	w3, [sp, #256]
    e890:	cmp	x14, #0x0
    e894:	add	x0, x0, #0x1
    e898:	str	x0, [sp, #240]
    e89c:	add	w4, w3, #0x1
    e8a0:	add	w0, w6, w1
    e8a4:	csel	x2, x2, x14, eq  // eq = none
    e8a8:	cmp	w0, w4, lsl #2
    e8ac:	b.ls	e90c <_ZN4llvm10VarDefInit11instantiateEv+0x90c>  // b.plast
    e8b0:	ldr	w0, [sp, #260]
    e8b4:	sub	w0, w1, w0
    e8b8:	sub	w0, w0, w4
    e8bc:	cmp	w0, w1, lsr #3
    e8c0:	b.ls	e910 <_ZN4llvm10VarDefInit11instantiateEv+0x910>  // b.plast
    e8c4:	ldr	x1, [x2]
    e8c8:	add	w0, w3, #0x1
    e8cc:	str	w0, [sp, #256]
    e8d0:	cmn	x1, #0x8
    e8d4:	b.eq	e8e4 <_ZN4llvm10VarDefInit11instantiateEv+0x8e4>  // b.none
    e8d8:	ldr	w0, [sp, #260]
    e8dc:	sub	w0, w0, #0x1
    e8e0:	str	w0, [sp, #260]
    e8e4:	mov	w6, w5
    e8e8:	strb	wzr, [x2, #16]
    e8ec:	ldr	x0, [sp, #184]
    e8f0:	mov	x4, x6
    e8f4:	stp	x0, xzr, [x2]
    e8f8:	b	e43c <_ZN4llvm10VarDefInit11instantiateEv+0x43c>
    e8fc:	ldr	x0, [sp, #240]
    e900:	mov	w6, #0x0                   	// #0
    e904:	add	x0, x0, #0x1
    e908:	str	x0, [sp, #240]
    e90c:	mov	w1, w6
    e910:	mov	x0, x23
    e914:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e918:	ldp	x2, x1, [sp, #112]
    e91c:	mov	x0, x23
    e920:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e924:	ldr	x2, [sp, #192]
    e928:	cbz	x2, ec64 <_ZN4llvm10VarDefInit11instantiateEv+0xc64>
    e92c:	ldr	w5, [x27, #80]
    e930:	ldr	w3, [sp, #256]
    e934:	b	e8c4 <_ZN4llvm10VarDefInit11instantiateEv+0x8c4>
    e938:	mov	x0, x21
    e93c:	str	x9, [sp, #112]
    e940:	stp	x13, x5, [sp, #128]
    e944:	mov	x19, #0xffffffff            	// #4294967295
    e948:	str	w3, [sp, #144]
    e94c:	stp	x6, x10, [sp, #152]
    e950:	bl	0 <malloc>
    e954:	mov	x15, x0
    e958:	mov	w0, #0xffffffff            	// #-1
    e95c:	ldr	x9, [sp, #112]
    e960:	str	w0, [sp, #112]
    e964:	ldr	x10, [sp, #160]
    e968:	cbz	x15, ec84 <_ZN4llvm10VarDefInit11instantiateEv+0xc84>
    e96c:	ldr	w3, [sp, #144]
    e970:	ldp	x13, x5, [sp, #128]
    e974:	ldr	x6, [sp, #152]
    e978:	b	e800 <_ZN4llvm10VarDefInit11instantiateEv+0x800>
    e97c:	mov	x11, #0x0                   	// #0
    e980:	mov	w12, #0x1                   	// #1
    e984:	cmn	x6, #0x8
    e988:	b.eq	e648 <_ZN4llvm10VarDefInit11instantiateEv+0x648>  // b.none
    e98c:	add	w10, w12, w10
    e990:	cmp	x11, #0x0
    e994:	and	w10, w1, w10
    e998:	ccmn	x6, #0x10, #0x0, eq  // eq = none
    e99c:	csel	x11, x11, x0, ne  // ne = any
    e9a0:	add	w12, w12, #0x1
    e9a4:	umull	x6, w10, w25
    e9a8:	add	x0, x3, x6
    e9ac:	ldr	x6, [x3, x6]
    e9b0:	cmp	x21, x6
    e9b4:	b.ne	e984 <_ZN4llvm10VarDefInit11instantiateEv+0x984>  // b.any
    e9b8:	str	w4, [sp, #256]
    e9bc:	b	e544 <_ZN4llvm10VarDefInit11instantiateEv+0x544>
    e9c0:	add	w3, w3, w12
    e9c4:	cmp	x11, #0x0
    e9c8:	and	w3, w10, w3
    e9cc:	ccmn	x1, #0x10, #0x0, eq  // eq = none
    e9d0:	csel	x11, x11, x0, ne  // ne = any
    e9d4:	add	w12, w12, #0x1
    e9d8:	umull	x1, w3, w25
    e9dc:	add	x0, x6, x1
    e9e0:	ldr	x1, [x6, x1]
    e9e4:	cmp	x21, x1
    e9e8:	b.eq	e538 <_ZN4llvm10VarDefInit11instantiateEv+0x538>  // b.none
    e9ec:	b	e640 <_ZN4llvm10VarDefInit11instantiateEv+0x640>
    e9f0:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e9f4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e9f8:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e9fc:	add	x3, x3, #0x0
    ea00:	add	x1, x1, #0x0
    ea04:	add	x0, x0, #0x0
    ea08:	mov	w2, #0x95                  	// #149
    ea0c:	bl	0 <__assert_fail>
    ea10:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ea14:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ea18:	add	x1, x1, #0x0
    ea1c:	add	x0, x0, #0x0
    ea20:	mov	w2, #0x614                 	// #1556
    ea24:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    ea28:	add	w12, w12, w15
    ea2c:	cmp	x14, #0x0
    ea30:	and	w12, w13, w12
    ea34:	ccmn	x4, #0x10, #0x0, eq  // eq = none
    ea38:	csel	x14, x14, x0, ne  // ne = any
    ea3c:	add	w15, w15, #0x1
    ea40:	umull	x4, w12, w25
    ea44:	add	x0, x3, x4
    ea48:	ldr	x4, [x3, x4]
    ea4c:	cmp	x21, x4
    ea50:	b.eq	e248 <_ZN4llvm10VarDefInit11instantiateEv+0x248>  // b.none
    ea54:	b	e4ec <_ZN4llvm10VarDefInit11instantiateEv+0x4ec>
    ea58:	add	x0, x25, #0x2
    ea5c:	stp	x5, x4, [sp, #112]
    ea60:	mov	x23, #0xffffffff            	// #4294967295
    ea64:	orr	x0, x0, x0, lsr #1
    ea68:	stp	x6, x3, [sp, #128]
    ea6c:	orr	x0, x0, x0, lsr #2
    ea70:	orr	x0, x0, x0, lsr #4
    ea74:	orr	x0, x0, x0, lsr #8
    ea78:	orr	x0, x0, x0, lsr #16
    ea7c:	orr	x0, x0, x0, lsr #32
    ea80:	add	x25, x0, #0x1
    ea84:	str	x25, [sp, #192]
    ea88:	cmp	x25, x23
    ea8c:	b.hi	eb4c <_ZN4llvm10VarDefInit11instantiateEv+0xb4c>  // b.pmore
    ea90:	add	x0, x25, x25, lsl #1
    ea94:	mov	w23, w25
    ea98:	lsl	x0, x0, #3
    ea9c:	bl	0 <malloc>
    eaa0:	mov	x8, x0
    eaa4:	ldp	x5, x4, [sp, #112]
    eaa8:	ldp	x6, x3, [sp, #128]
    eaac:	cbz	x0, ecd4 <_ZN4llvm10VarDefInit11instantiateEv+0xcd4>
    eab0:	cmp	x20, x4
    eab4:	mov	x2, x4
    eab8:	mov	x7, x8
    eabc:	b.eq	eae0 <_ZN4llvm10VarDefInit11instantiateEv+0xae0>  // b.none
    eac0:	ldp	x0, x1, [x2]
    eac4:	stp	x0, x1, [x7]
    eac8:	add	x2, x2, #0x18
    eacc:	ldur	x0, [x2, #-8]
    ead0:	str	x0, [x7, #16]
    ead4:	cmp	x20, x2
    ead8:	add	x7, x7, #0x18
    eadc:	b.ne	eac0 <_ZN4llvm10VarDefInit11instantiateEv+0xac0>  // b.any
    eae0:	ldr	x0, [sp, #104]
    eae4:	cmp	x0, x4
    eae8:	b.eq	eb0c <_ZN4llvm10VarDefInit11instantiateEv+0xb0c>  // b.none
    eaec:	mov	x0, x4
    eaf0:	stp	x5, x8, [sp, #104]
    eaf4:	bl	0 <free>
    eaf8:	ldr	w26, [x27, #96]
    eafc:	mov	w3, #0x18                  	// #24
    eb00:	ldp	x5, x8, [sp, #104]
    eb04:	mov	w6, w26
    eb08:	umull	x3, w26, w3
    eb0c:	add	x20, x8, x3
    eb10:	str	x8, [x27, #88]
    eb14:	str	w23, [x27, #100]
    eb18:	b	e69c <_ZN4llvm10VarDefInit11instantiateEv+0x69c>
    eb1c:	add	w0, w0, w15
    eb20:	cmp	x14, #0x0
    eb24:	and	w0, w13, w0
    eb28:	ccmn	x11, #0x10, #0x0, eq  // eq = none
    eb2c:	csel	x14, x14, x2, ne  // ne = any
    eb30:	add	w15, w15, #0x1
    eb34:	umull	x11, w0, w25
    eb38:	add	x2, x12, x11
    eb3c:	ldr	x11, [x12, x11]
    eb40:	cmp	x3, x11
    eb44:	b.eq	e43c <_ZN4llvm10VarDefInit11instantiateEv+0x43c>  // b.none
    eb48:	b	e87c <_ZN4llvm10VarDefInit11instantiateEv+0x87c>
    eb4c:	mov	w0, #0xffffffe8            	// #-24
    eb50:	mov	x25, x23
    eb54:	movk	x0, #0x17, lsl #32
    eb58:	bl	0 <malloc>
    eb5c:	mov	w23, #0xffffffff            	// #-1
    eb60:	mov	x8, x0
    eb64:	ldr	x5, [sp, #112]
    eb68:	cbz	x0, ecd4 <_ZN4llvm10VarDefInit11instantiateEv+0xcd4>
    eb6c:	ldp	x4, x6, [sp, #120]
    eb70:	ldr	x3, [sp, #136]
    eb74:	b	eab0 <_ZN4llvm10VarDefInit11instantiateEv+0xab0>
    eb78:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    eb7c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    eb80:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    eb84:	add	x3, x3, #0x0
    eb88:	add	x1, x1, #0x0
    eb8c:	add	x0, x0, #0x0
    eb90:	mov	w2, #0x250                 	// #592
    eb94:	bl	0 <__assert_fail>
    eb98:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    eb9c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    eba0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    eba4:	add	x3, x3, #0x0
    eba8:	add	x1, x1, #0x0
    ebac:	add	x0, x0, #0x0
    ebb0:	mov	w2, #0xfa                  	// #250
    ebb4:	bl	0 <__assert_fail>
    ebb8:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ebbc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ebc0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ebc4:	add	x3, x3, #0x0
    ebc8:	add	x1, x1, #0x0
    ebcc:	add	x0, x0, #0x0
    ebd0:	mov	w2, #0x43                  	// #67
    ebd4:	bl	0 <__assert_fail>
    ebd8:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ebdc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ebe0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ebe4:	add	x3, x3, #0x0
    ebe8:	add	x1, x1, #0x0
    ebec:	add	x0, x0, #0x0
    ebf0:	mov	w2, #0x1b7                 	// #439
    ebf4:	bl	0 <__assert_fail>
    ebf8:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ebfc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ec00:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ec04:	add	x3, x3, #0x0
    ec08:	add	x1, x1, #0x0
    ec0c:	add	x0, x0, #0x0
    ec10:	mov	w2, #0x1b6                 	// #438
    ec14:	bl	0 <__assert_fail>
    ec18:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ec1c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ec20:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ec24:	add	x3, x3, #0x0
    ec28:	add	x1, x1, #0x0
    ec2c:	add	x0, x0, #0x0
    ec30:	mov	w2, #0x62f                 	// #1583
    ec34:	bl	0 <__assert_fail>
    ec38:	mov	x0, x23
    ec3c:	mov	w1, w12
    ec40:	str	x5, [sp, #128]
    ec44:	str	w6, [sp, #136]
    ec48:	str	w11, [sp, #144]
    ec4c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ec50:	ldr	w0, [sp, #264]
    ec54:	ldr	w6, [sp, #136]
    ec58:	ldr	w11, [sp, #144]
    ec5c:	ldr	x5, [sp, #128]
    ec60:	cbnz	w0, e60c <_ZN4llvm10VarDefInit11instantiateEv+0x60c>
    ec64:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ec68:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ec6c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ec70:	add	x3, x3, #0x0
    ec74:	add	x1, x1, #0x0
    ec78:	add	x0, x0, #0x0
    ec7c:	mov	w2, #0x22f                 	// #559
    ec80:	bl	0 <__assert_fail>
    ec84:	ldr	x0, [sp, #120]
    ec88:	mov	w1, #0x1                   	// #1
    ec8c:	stp	x9, x10, [sp, #128]
    ec90:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    ec94:	ldr	w3, [x27, #96]
    ec98:	mov	x15, #0x0                   	// #0
    ec9c:	ldr	x5, [x27, #88]
    eca0:	mov	w6, w3
    eca4:	ldp	x9, x10, [sp, #128]
    eca8:	umull	x13, w3, w23
    ecac:	add	x25, x5, x13
    ecb0:	b	e800 <_ZN4llvm10VarDefInit11instantiateEv+0x800>
    ecb4:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ecb8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ecbc:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ecc0:	add	x3, x3, #0x0
    ecc4:	add	x1, x1, #0x0
    ecc8:	add	x0, x0, #0x0
    eccc:	mov	w2, #0x6c7                 	// #1735
    ecd0:	bl	0 <__assert_fail>
    ecd4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ecd8:	mov	w1, #0x1                   	// #1
    ecdc:	add	x0, x0, #0x0
    ece0:	str	x5, [sp, #112]
    ece4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    ece8:	ldr	w26, [x27, #96]
    ecec:	mov	w3, #0x18                  	// #24
    ecf0:	mov	x8, #0x0                   	// #0
    ecf4:	ldr	x4, [x27, #88]
    ecf8:	mov	w6, w26
    ecfc:	umull	x3, w26, w3
    ed00:	ldr	x5, [sp, #112]
    ed04:	add	x20, x4, x3
    ed08:	b	eab0 <_ZN4llvm10VarDefInit11instantiateEv+0xab0>
    ed0c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ed10:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ed14:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ed18:	add	x3, x3, #0x0
    ed1c:	add	x1, x1, #0x0
    ed20:	add	x0, x0, #0x0
    ed24:	mov	w2, #0xa8                  	// #168
    ed28:	bl	0 <__assert_fail>
    ed2c:	mov	x0, #0x0                   	// #0
    ed30:	ldr	x0, [x0, #16]
    ed34:	brk	#0x3e8

000000000000ed38 <_ZNK4llvm10VarDefInit4FoldEv>:
    ed38:	stp	x29, x30, [sp, #-96]!
    ed3c:	mov	x29, sp
    ed40:	stp	x21, x22, [sp, #32]
    ed44:	mov	x21, x0
    ed48:	ldr	x0, [x0, #40]
    ed4c:	cbz	x0, ed5c <_ZNK4llvm10VarDefInit4FoldEv+0x24>
    ed50:	ldp	x21, x22, [sp, #32]
    ed54:	ldp	x29, x30, [sp], #96
    ed58:	ret
    ed5c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ed60:	stp	x19, x20, [sp, #16]
    ed64:	ldr	w20, [x21, #48]
    ed68:	ldr	x0, [x0]
    ed6c:	add	x19, x21, #0x38
    ed70:	strb	wzr, [sp, #72]
    ed74:	add	x20, x19, x20, lsl #3
    ed78:	add	x0, x0, #0x10
    ed7c:	stp	x0, xzr, [sp, #56]
    ed80:	add	x22, sp, #0x38
    ed84:	str	xzr, [sp, #80]
    ed88:	cmp	x20, x19
    ed8c:	strb	wzr, [sp, #88]
    ed90:	b.eq	edd0 <_ZNK4llvm10VarDefInit4FoldEv+0x98>  // b.none
    ed94:	nop
    ed98:	ldr	x0, [x19], #8
    ed9c:	mov	x1, x22
    eda0:	ldr	x2, [x0]
    eda4:	ldr	x2, [x2, #96]
    eda8:	blr	x2
    edac:	cmp	x20, x19
    edb0:	b.ne	ed98 <_ZNK4llvm10VarDefInit4FoldEv+0x60>  // b.any
    edb4:	ldrb	w0, [sp, #88]
    edb8:	cbz	w0, edd0 <_ZNK4llvm10VarDefInit4FoldEv+0x98>
    edbc:	mov	x0, x21
    edc0:	ldp	x19, x20, [sp, #16]
    edc4:	ldp	x21, x22, [sp, #32]
    edc8:	ldp	x29, x30, [sp], #96
    edcc:	ret
    edd0:	mov	x0, x21
    edd4:	bl	e000 <_ZN4llvm10VarDefInit11instantiateEv>
    edd8:	ldp	x19, x20, [sp, #16]
    eddc:	ldp	x21, x22, [sp, #32]
    ede0:	ldp	x29, x30, [sp], #96
    ede4:	ret

000000000000ede8 <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE>:
    ede8:	stp	x29, x30, [sp, #-224]!
    edec:	adrp	x2, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    edf0:	mov	x3, x1
    edf4:	mov	x29, sp
    edf8:	ldr	x2, [x2]
    edfc:	stp	x21, x22, [sp, #32]
    ee00:	mov	x22, x0
    ee04:	add	x2, x2, #0x10
    ee08:	stp	x23, x24, [sp, #48]
    ee0c:	add	x24, sp, #0x90
    ee10:	ldr	x4, [x3, #8]
    ee14:	add	x1, x24, #0x10
    ee18:	mov	x0, #0x800000000           	// #34359738368
    ee1c:	stp	x19, x20, [sp, #16]
    ee20:	stp	x2, x4, [sp, #104]
    ee24:	ldr	w2, [x22, #48]
    ee28:	strb	wzr, [sp, #120]
    ee2c:	str	x3, [sp, #128]
    ee30:	cmp	w2, #0x8
    ee34:	strb	wzr, [sp, #136]
    ee38:	mov	w2, w2
    ee3c:	stp	x1, x0, [sp, #144]
    ee40:	b.hi	ef24 <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0x13c>  // b.pmore
    ee44:	add	x20, x22, #0x38
    ee48:	add	x21, x20, x2, lsl #3
    ee4c:	cmp	x21, x20
    ee50:	b.eq	ef44 <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0x15c>  // b.none
    ee54:	add	x23, sp, #0x68
    ee58:	stp	x25, x26, [sp, #64]
    ee5c:	add	x25, x24, #0x10
    ee60:	str	x27, [sp, #80]
    ee64:	mov	w27, #0x0                   	// #0
    ee68:	ldr	x26, [x20]
    ee6c:	mov	x1, x23
    ee70:	mov	x0, x26
    ee74:	ldr	x2, [x26]
    ee78:	ldr	x2, [x2, #96]
    ee7c:	blr	x2
    ee80:	mov	x19, x0
    ee84:	ldp	w1, w0, [sp, #152]
    ee88:	cmp	w1, w0
    ee8c:	b.cs	ef08 <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0x120>  // b.hs, b.nlast
    ee90:	ldr	x0, [sp, #144]
    ee94:	str	x19, [x0, w1, uxtw #3]
    ee98:	ldp	w1, w0, [sp, #152]
    ee9c:	mov	w2, w1
    eea0:	add	x2, x2, #0x1
    eea4:	cmp	x2, x0
    eea8:	b.hi	ef88 <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0x1a0>  // b.pmore
    eeac:	cmp	x19, x26
    eeb0:	add	w1, w1, #0x1
    eeb4:	str	w1, [sp, #152]
    eeb8:	cset	w0, ne  // ne = any
    eebc:	add	x20, x20, #0x8
    eec0:	orr	w27, w27, w0
    eec4:	cmp	x21, x20
    eec8:	b.ne	ee68 <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0x80>  // b.any
    eecc:	ldr	x1, [sp, #144]
    eed0:	cbnz	w27, ef4c <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0x164>
    eed4:	ldp	x25, x26, [sp, #64]
    eed8:	ldr	x27, [sp, #80]
    eedc:	add	x24, x24, #0x10
    eee0:	cmp	x1, x24
    eee4:	b.eq	eef0 <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0x108>  // b.none
    eee8:	mov	x0, x1
    eeec:	bl	0 <free>
    eef0:	mov	x0, x22
    eef4:	ldp	x19, x20, [sp, #16]
    eef8:	ldp	x21, x22, [sp, #32]
    eefc:	ldp	x23, x24, [sp, #48]
    ef00:	ldp	x29, x30, [sp], #224
    ef04:	ret
    ef08:	mov	x1, x25
    ef0c:	mov	x0, x24
    ef10:	mov	x3, #0x8                   	// #8
    ef14:	mov	x2, #0x0                   	// #0
    ef18:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    ef1c:	ldr	w1, [sp, #152]
    ef20:	b	ee90 <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0xa8>
    ef24:	mov	x0, x24
    ef28:	mov	x3, #0x8                   	// #8
    ef2c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    ef30:	add	x20, x22, #0x38
    ef34:	ldr	w2, [x22, #48]
    ef38:	add	x21, x20, x2, lsl #3
    ef3c:	cmp	x21, x20
    ef40:	b.ne	ee54 <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0x6c>  // b.any
    ef44:	ldr	x1, [sp, #144]
    ef48:	b	eedc <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0xf4>
    ef4c:	ldr	x0, [x22, #32]
    ef50:	bl	44c8 <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE>
    ef54:	mov	x22, x0
    ef58:	ldrb	w1, [sp, #136]
    ef5c:	cbz	w1, ef70 <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0x188>
    ef60:	ldp	x25, x26, [sp, #64]
    ef64:	ldr	x27, [sp, #80]
    ef68:	ldr	x1, [sp, #144]
    ef6c:	b	eedc <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0xf4>
    ef70:	bl	e000 <_ZN4llvm10VarDefInit11instantiateEv>
    ef74:	mov	x22, x0
    ef78:	ldp	x25, x26, [sp, #64]
    ef7c:	ldr	x27, [sp, #80]
    ef80:	ldr	x1, [sp, #144]
    ef84:	b	eedc <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0xf4>
    ef88:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ef8c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ef90:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ef94:	add	x3, x3, #0x0
    ef98:	add	x1, x1, #0x0
    ef9c:	add	x0, x0, #0x0
    efa0:	mov	w2, #0x43                  	// #67
    efa4:	bl	0 <__assert_fail>

000000000000efa8 <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE>:
    efa8:	stp	x29, x30, [sp, #-176]!
    efac:	mov	x29, sp
    efb0:	stp	x19, x20, [sp, #16]
    efb4:	mov	x19, x0
    efb8:	mov	x20, x1
    efbc:	ldr	x0, [x0, #32]
    efc0:	stp	x21, x22, [sp, #32]
    efc4:	adrp	x21, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    efc8:	stp	x23, x24, [sp, #48]
    efcc:	add	x24, sp, #0x68
    efd0:	ldr	x2, [x0]
    efd4:	stp	x25, x26, [sp, #64]
    efd8:	add	x25, sp, #0x70
    efdc:	add	x26, x25, #0x20
    efe0:	ldr	x2, [x2, #96]
    efe4:	blr	x2
    efe8:	mov	x22, x0
    efec:	ldr	x2, [x19, #40]
    eff0:	mov	x1, x20
    eff4:	mov	x0, x2
    eff8:	ldr	x2, [x2]
    effc:	ldr	x2, [x2, #96]
    f000:	blr	x2
    f004:	mov	x23, x0
    f008:	ldr	x2, [x21]
    f00c:	mov	x3, #0x1                   	// #1
    f010:	ldrb	w4, [x20, #16]
    f014:	mov	x0, x26
    f018:	ldr	x5, [x20, #8]
    f01c:	add	x2, x2, #0x10
    f020:	ldr	x6, [x19, #48]
    f024:	mov	w1, #0x0                   	// #0
    f028:	str	x6, [sp, #96]
    f02c:	stp	x2, x5, [sp, #112]
    f030:	strb	w4, [sp, #128]
    f034:	stp	x20, x3, [sp, #136]
    f038:	stp	xzr, xzr, [sp, #152]
    f03c:	str	wzr, [sp, #168]
    f040:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f044:	mov	x0, x26
    f048:	mov	x2, x24
    f04c:	add	x1, sp, #0x60
    f050:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f054:	ldr	x0, [sp, #104]
    f058:	cbz	x0, f280 <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x2d8>
    f05c:	ldr	w3, [sp, #160]
    f060:	ldr	x1, [x0]
    f064:	mov	w9, w3
    f068:	add	w3, w3, #0x1
    f06c:	str	w3, [sp, #160]
    f070:	cmn	x1, #0x8
    f074:	b.eq	f084 <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0xdc>  // b.none
    f078:	ldr	w1, [sp, #164]
    f07c:	sub	w1, w1, #0x1
    f080:	str	w1, [sp, #164]
    f084:	ldr	x1, [sp, #96]
    f088:	ldr	w4, [sp, #168]
    f08c:	str	x1, [x0]
    f090:	ldr	x0, [x19, #56]
    f094:	str	x0, [sp, #88]
    f098:	cbz	w4, f218 <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x270>
    f09c:	cmn	x0, #0x8
    f0a0:	ccmn	x0, #0x10, #0x4, ne  // ne = any
    f0a4:	b.eq	f260 <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x2b8>  // b.none
    f0a8:	lsr	w2, w0, #9
    f0ac:	sub	w8, w4, #0x1
    f0b0:	eor	w2, w2, w0, lsr #4
    f0b4:	mov	w10, #0x1                   	// #1
    f0b8:	ldr	x6, [sp, #152]
    f0bc:	and	w7, w2, w8
    f0c0:	mov	x2, x7
    f0c4:	ubfiz	x1, x7, #3, #28
    f0c8:	add	x5, x6, x1
    f0cc:	ldr	x1, [x6, x7, lsl #3]
    f0d0:	mov	x7, #0x0                   	// #0
    f0d4:	cmp	x0, x1
    f0d8:	b.ne	f1a8 <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x200>  // b.any
    f0dc:	ldr	x0, [x19, #64]
    f0e0:	mov	x1, x25
    f0e4:	ldr	x2, [x0]
    f0e8:	ldr	x2, [x2, #96]
    f0ec:	blr	x2
    f0f0:	mov	x4, x0
    f0f4:	ldr	x1, [x19, #32]
    f0f8:	cmp	x1, x22
    f0fc:	b.eq	f158 <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x1b0>  // b.none
    f100:	ldp	x2, x3, [x19, #48]
    f104:	mov	x1, x23
    f108:	ldr	x5, [x19, #16]
    f10c:	mov	x0, x22
    f110:	bl	3ea0 <_ZN4llvm10FoldOpInit3getEPNS_4InitES2_S2_S2_S2_PNS_5RecTyE>
    f114:	ldr	x1, [x20, #8]
    f118:	bl	2930 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE>
    f11c:	mov	x19, x0
    f120:	ldr	x0, [sp, #152]
    f124:	ldr	w1, [sp, #168]
    f128:	ldr	x21, [x21]
    f12c:	lsl	x1, x1, #3
    f130:	add	x21, x21, #0x10
    f134:	str	x21, [sp, #112]
    f138:	bl	0 <_ZdlPvm>
    f13c:	mov	x0, x19
    f140:	ldp	x19, x20, [sp, #16]
    f144:	ldp	x21, x22, [sp, #32]
    f148:	ldp	x23, x24, [sp, #48]
    f14c:	ldp	x25, x26, [sp, #64]
    f150:	ldp	x29, x30, [sp], #176
    f154:	ret
    f158:	ldr	x0, [x19, #40]
    f15c:	cmp	x0, x23
    f160:	b.ne	f100 <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x158>  // b.any
    f164:	ldr	x0, [x19, #64]
    f168:	cmp	x0, x4
    f16c:	b.ne	f100 <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x158>  // b.any
    f170:	b	f120 <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x178>
    f174:	add	w2, w10, w2
    f178:	cmp	x7, #0x0
    f17c:	and	w11, w8, w2
    f180:	ccmn	x1, #0x10, #0x0, eq  // eq = none
    f184:	csel	x5, x5, x7, eq  // eq = none
    f188:	add	w10, w10, #0x1
    f18c:	and	w2, w8, w2
    f190:	add	x12, x6, x11, lsl #3
    f194:	ldr	x1, [x6, x11, lsl #3]
    f198:	cmp	x0, x1
    f19c:	b.eq	f0dc <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x134>  // b.none
    f1a0:	mov	x7, x5
    f1a4:	mov	x5, x12
    f1a8:	cmn	x1, #0x8
    f1ac:	b.ne	f174 <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x1cc>  // b.any
    f1b0:	ldr	x0, [sp, #144]
    f1b4:	add	w2, w9, #0x2
    f1b8:	lsl	w1, w4, #1
    f1bc:	cmp	x7, #0x0
    f1c0:	add	x0, x0, #0x1
    f1c4:	str	x0, [sp, #144]
    f1c8:	add	w0, w1, w4
    f1cc:	csel	x7, x7, x5, ne  // ne = any
    f1d0:	cmp	w0, w2, lsl #2
    f1d4:	b.ls	f228 <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x280>  // b.plast
    f1d8:	ldr	w0, [sp, #164]
    f1dc:	sub	w0, w4, w0
    f1e0:	sub	w0, w0, w2
    f1e4:	cmp	w0, w4, lsr #3
    f1e8:	b.ls	f254 <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x2ac>  // b.plast
    f1ec:	ldr	x0, [x7]
    f1f0:	add	w3, w3, #0x1
    f1f4:	str	w3, [sp, #160]
    f1f8:	cmn	x0, #0x8
    f1fc:	b.eq	f20c <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x264>  // b.none
    f200:	ldr	w0, [sp, #164]
    f204:	sub	w0, w0, #0x1
    f208:	str	w0, [sp, #164]
    f20c:	ldr	x0, [sp, #88]
    f210:	str	x0, [x7]
    f214:	b	f0dc <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x134>
    f218:	ldr	x0, [sp, #144]
    f21c:	mov	w1, #0x0                   	// #0
    f220:	add	x0, x0, #0x1
    f224:	str	x0, [sp, #144]
    f228:	add	x26, x25, #0x20
    f22c:	mov	x0, x26
    f230:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f234:	mov	x2, x24
    f238:	mov	x0, x26
    f23c:	add	x1, sp, #0x58
    f240:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f244:	ldr	x7, [sp, #104]
    f248:	cbz	x7, f280 <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x2d8>
    f24c:	ldr	w3, [sp, #160]
    f250:	b	f1ec <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x244>
    f254:	add	x26, x25, #0x20
    f258:	mov	w1, w4
    f25c:	b	f22c <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x284>
    f260:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f264:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f268:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f26c:	add	x3, x3, #0x0
    f270:	add	x1, x1, #0x0
    f274:	add	x0, x0, #0x0
    f278:	mov	w2, #0x250                 	// #592
    f27c:	bl	0 <__assert_fail>
    f280:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f284:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f288:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f28c:	add	x3, x3, #0x0
    f290:	add	x1, x1, #0x0
    f294:	add	x0, x0, #0x0
    f298:	mov	w2, #0x22f                 	// #559
    f29c:	bl	0 <__assert_fail>

000000000000f2a0 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE>:
    f2a0:	stp	x29, x30, [sp, #-96]!
    f2a4:	mov	x29, sp
    f2a8:	stp	x21, x22, [sp, #32]
    f2ac:	adrp	x21, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f2b0:	stp	x23, x24, [sp, #48]
    f2b4:	add	x23, x21, #0x0
    f2b8:	add	x22, x23, #0x308
    f2bc:	stp	x19, x20, [sp, #16]
    f2c0:	mov	x20, x0
    f2c4:	mov	x19, x1
    f2c8:	ldarb	w0, [x22]
    f2cc:	tbz	w0, #0, f398 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0xf8>
    f2d0:	add	x0, x21, #0x0
    f2d4:	stp	x19, x20, [sp, #80]
    f2d8:	ldr	w3, [x0, #808]
    f2dc:	cbz	w3, f3e8 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0x148>
    f2e0:	cmn	x19, #0x8
    f2e4:	b.eq	f440 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0x1a0>  // b.none
    f2e8:	cmn	x19, #0x10
    f2ec:	ccmn	x20, #0x10, #0x0, eq  // eq = none
    f2f0:	b.eq	f448 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0x1a8>  // b.none
    f2f4:	lsr	w2, w20, #9
    f2f8:	lsr	w0, w19, #9
    f2fc:	eor	w0, w0, w19, lsr #4
    f300:	add	x1, x21, #0x0
    f304:	eor	w2, w2, w20, lsr #4
    f308:	sub	w6, w3, #0x1
    f30c:	orr	x0, x2, x0, lsl #32
    f310:	mov	w7, #0x1                   	// #1
    f314:	sub	x0, x0, #0x1
    f318:	mov	x22, #0x0                   	// #0
    f31c:	sub	x2, x0, x2, lsl #32
    f320:	mov	w5, #0x18                  	// #24
    f324:	ldr	x1, [x1, #792]
    f328:	eor	x2, x2, x2, lsr #22
    f32c:	sub	x0, x2, #0x1
    f330:	sub	x2, x0, x2, lsl #13
    f334:	eor	x2, x2, x2, lsr #8
    f338:	add	x2, x2, x2, lsl #3
    f33c:	eor	x2, x2, x2, lsr #15
    f340:	sub	x0, x2, #0x1
    f344:	sub	x2, x0, x2, lsl #27
    f348:	eor	x2, x2, x2, lsr #31
    f34c:	and	w2, w6, w2
    f350:	umull	x0, w2, w5
    f354:	add	x4, x1, x0
    f358:	ldr	x0, [x1, x0]
    f35c:	cmp	x19, x0
    f360:	b.eq	f468 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0x1c8>  // b.none
    f364:	cmn	x0, #0x8
    f368:	b.eq	f490 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0x1f0>  // b.none
    f36c:	cmn	x0, #0x10
    f370:	b.ne	f388 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0xe8>  // b.any
    f374:	ldr	x0, [x4, #8]
    f378:	cmp	x22, #0x0
    f37c:	ccmn	x0, #0x10, #0x0, eq  // eq = none
    f380:	csel	x22, x22, x4, ne  // ne = any
    f384:	nop
    f388:	add	w2, w2, w7
    f38c:	add	w7, w7, #0x1
    f390:	and	w2, w6, w2
    f394:	b	f350 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0xb0>
    f398:	mov	x0, x22
    f39c:	bl	0 <__cxa_guard_acquire>
    f3a0:	cbz	w0, f2d0 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0x30>
    f3a4:	str	xzr, [x23, #784]
    f3a8:	mov	x0, x22
    f3ac:	str	xzr, [x23, #792]
    f3b0:	add	x24, x23, #0x310
    f3b4:	str	xzr, [x23, #800]
    f3b8:	str	wzr, [x23, #808]
    f3bc:	bl	0 <__cxa_guard_release>
    f3c0:	mov	x1, x24
    f3c4:	adrp	x2, 0 <__dso_handle>
    f3c8:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f3cc:	add	x2, x2, #0x0
    f3d0:	add	x0, x0, #0x0
    f3d4:	bl	0 <__cxa_atexit>
    f3d8:	add	x0, x21, #0x0
    f3dc:	stp	x19, x20, [sp, #80]
    f3e0:	ldr	w3, [x0, #808]
    f3e4:	cbnz	w3, f2e0 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0x40>
    f3e8:	ldr	x2, [x0, #784]
    f3ec:	mov	w1, #0x0                   	// #0
    f3f0:	add	x2, x2, #0x1
    f3f4:	str	x2, [x0, #784]
    f3f8:	add	x22, x21, #0x0
    f3fc:	add	x22, x22, #0x310
    f400:	mov	x0, x22
    f404:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f408:	mov	x0, x22
    f40c:	add	x2, sp, #0x48
    f410:	add	x1, sp, #0x50
    f414:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f418:	ldr	x22, [sp, #72]
    f41c:	cbnz	x22, f4e4 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0x244>
    f420:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f424:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f428:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f42c:	add	x3, x3, #0x0
    f430:	add	x1, x1, #0x0
    f434:	add	x0, x0, #0x0
    f438:	mov	w2, #0x22f                 	// #559
    f43c:	bl	0 <__assert_fail>
    f440:	cmn	x20, #0x8
    f444:	b.ne	f2f4 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0x54>  // b.any
    f448:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f44c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f450:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f454:	add	x3, x3, #0x0
    f458:	add	x1, x1, #0x0
    f45c:	add	x0, x0, #0x0
    f460:	mov	w2, #0x250                 	// #592
    f464:	bl	0 <__assert_fail>
    f468:	ldr	x8, [x4, #8]
    f46c:	cmp	x20, x8
    f470:	b.ne	f364 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0xc4>  // b.any
    f474:	ldr	x0, [x4, #16]
    f478:	cbz	x0, f598 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0x2f8>
    f47c:	ldp	x19, x20, [sp, #16]
    f480:	ldp	x21, x22, [sp, #32]
    f484:	ldp	x23, x24, [sp, #48]
    f488:	ldp	x29, x30, [sp], #96
    f48c:	ret
    f490:	ldr	x0, [x4, #8]
    f494:	cmn	x0, #0x8
    f498:	b.ne	f388 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0xe8>  // b.any
    f49c:	add	x2, x21, #0x0
    f4a0:	cmp	x22, #0x0
    f4a4:	csel	x22, x22, x4, ne  // ne = any
    f4a8:	lsl	w1, w3, #1
    f4ac:	add	w5, w1, w3
    f4b0:	add	x23, x2, #0x310
    f4b4:	ldr	x4, [x2, #784]
    f4b8:	ldr	w0, [x23, #16]
    f4bc:	add	x4, x4, #0x1
    f4c0:	str	x4, [x2, #784]
    f4c4:	add	w0, w0, #0x1
    f4c8:	cmp	w5, w0, lsl #2
    f4cc:	b.ls	f3f8 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0x158>  // b.plast
    f4d0:	ldr	w1, [x23, #20]
    f4d4:	sub	w1, w3, w1
    f4d8:	sub	w1, w1, w0
    f4dc:	cmp	w1, w3, lsr #3
    f4e0:	b.ls	f574 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0x2d4>  // b.plast
    f4e4:	add	x0, x21, #0x0
    f4e8:	ldr	x2, [x22]
    f4ec:	ldr	w1, [x0, #800]
    f4f0:	cmn	x2, #0x8
    f4f4:	add	w1, w1, #0x1
    f4f8:	str	w1, [x0, #800]
    f4fc:	b.eq	f564 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0x2c4>  // b.none
    f500:	add	x0, x21, #0x0
    f504:	ldr	w1, [x0, #804]
    f508:	sub	w1, w1, #0x1
    f50c:	str	w1, [x0, #804]
    f510:	ldp	x1, x0, [sp, #80]
    f514:	stp	x1, x0, [x22]
    f518:	str	xzr, [x22, #16]
    f51c:	add	x0, x21, #0x0
    f520:	mov	w2, #0x4                   	// #4
    f524:	mov	x1, #0x20                  	// #32
    f528:	add	x0, x0, #0x88
    f52c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f530:	stp	x19, x20, [x0, #16]
    f534:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f538:	mov	w2, #0x13                  	// #19
    f53c:	strh	w2, [x0, #8]
    f540:	ldr	x1, [x1]
    f544:	ldp	x19, x20, [sp, #16]
    f548:	add	x1, x1, #0x10
    f54c:	str	x1, [x0]
    f550:	str	x0, [x22, #16]
    f554:	ldp	x21, x22, [sp, #32]
    f558:	ldp	x23, x24, [sp, #48]
    f55c:	ldp	x29, x30, [sp], #96
    f560:	ret
    f564:	ldr	x0, [x22, #8]
    f568:	cmn	x0, #0x8
    f56c:	b.ne	f500 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0x260>  // b.any
    f570:	b	f510 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0x270>
    f574:	mov	w1, w3
    f578:	mov	x0, x23
    f57c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f580:	mov	x0, x23
    f584:	add	x2, sp, #0x48
    f588:	add	x1, sp, #0x50
    f58c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f590:	ldr	x22, [sp, #72]
    f594:	b	f41c <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0x17c>
    f598:	mov	x22, x4
    f59c:	b	f51c <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0x27c>

000000000000f5a0 <_ZN4llvm7VarInit3getENS_9StringRefEPNS_5RecTyE>:
    f5a0:	stp	x29, x30, [sp, #-32]!
    f5a4:	mov	x29, sp
    f5a8:	str	x19, [sp, #16]
    f5ac:	mov	x19, x2
    f5b0:	bl	a360 <_ZN4llvm10StringInit3getENS_9StringRefE>
    f5b4:	mov	x1, x19
    f5b8:	ldr	x19, [sp, #16]
    f5bc:	ldp	x29, x30, [sp], #32
    f5c0:	b	f2a0 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE>
    f5c4:	nop

000000000000f5c8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE>:
    f5c8:	stp	x29, x30, [sp, #-352]!
    f5cc:	mov	x29, sp
    f5d0:	stp	x19, x20, [sp, #16]
    f5d4:	mov	x19, x0
    f5d8:	stp	x21, x22, [sp, #32]
    f5dc:	ldrb	w0, [x0, #9]
    f5e0:	cmp	w0, #0x2
    f5e4:	b.eq	f938 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x370>  // b.none
    f5e8:	b.hi	f720 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x158>  // b.pmore
    f5ec:	cbz	w0, f788 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x1c0>
    f5f0:	mov	x22, x1
    f5f4:	stp	x25, x26, [sp, #64]
    f5f8:	ldp	x25, x1, [x19, #32]
    f5fc:	ldr	x26, [x19, #48]
    f600:	cbz	x1, fc2c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x664>
    f604:	ldrb	w0, [x1, #8]
    f608:	cmp	w0, #0x5
    f60c:	b.eq	f98c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x3c4>  // b.none
    f610:	mov	x0, x1
    f614:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f618:	cbz	x0, f984 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x3bc>
    f61c:	stp	x27, x28, [sp, #80]
    f620:	add	x21, sp, #0x80
    f624:	ldr	w27, [x0, #32]
    f628:	add	x1, x21, #0x10
    f62c:	mov	x2, #0x800000000           	// #34359738368
    f630:	stp	x23, x24, [sp, #48]
    f634:	add	x28, x0, #0x28
    f638:	lsl	x27, x27, #3
    f63c:	stp	x1, x2, [sp, #128]
    f640:	add	x20, x27, #0x28
    f644:	add	x20, x0, x20
    f648:	cmp	x27, #0x40
    f64c:	mov	x0, x1
    f650:	asr	x23, x27, #3
    f654:	mov	x1, #0x0                   	// #0
    f658:	ldr	x24, [x19, #16]
    f65c:	b.hi	fdec <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x824>  // b.pmore
    f660:	cmp	x28, x20
    f664:	b.eq	f678 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xb0>  // b.none
    f668:	mov	x1, x28
    f66c:	mov	x2, x27
    f670:	bl	0 <memcpy>
    f674:	ldr	w1, [sp, #136]
    f678:	ldr	w0, [sp, #140]
    f67c:	add	x23, x23, x1
    f680:	cmp	x23, x0
    f684:	b.hi	ff24 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x95c>  // b.pmore
    f688:	ldr	x20, [sp, #128]
    f68c:	str	w23, [sp, #136]
    f690:	mov	w1, w23
    f694:	add	x23, x20, x23, lsl #3
    f698:	cmp	x20, x23
    f69c:	b.eq	f6d8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x110>  // b.none
    f6a0:	ldr	x1, [x20]
    f6a4:	mov	x3, x22
    f6a8:	mov	x2, x26
    f6ac:	mov	x0, x25
    f6b0:	bl	dc40 <_ZL12ForeachApplyPN4llvm4InitES1_S1_PNS_6RecordE>
    f6b4:	ldr	x1, [x20]
    f6b8:	cmp	x0, x1
    f6bc:	b.eq	f6c4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xfc>  // b.none
    f6c0:	str	x0, [x20]
    f6c4:	add	x20, x20, #0x8
    f6c8:	cmp	x23, x20
    f6cc:	b.ne	f6a0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xd8>  // b.any
    f6d0:	ldr	w1, [sp, #136]
    f6d4:	ldr	x23, [sp, #128]
    f6d8:	mov	w1, w1
    f6dc:	cbz	x24, ffa4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x9dc>
    f6e0:	ldr	w0, [x24, #8]
    f6e4:	cmp	w0, #0x5
    f6e8:	b.ne	ff84 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x9bc>  // b.any
    f6ec:	ldr	x2, [x24, #24]
    f6f0:	mov	x0, x23
    f6f4:	bl	50c0 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    f6f8:	ldr	x2, [sp, #128]
    f6fc:	add	x1, x21, #0x10
    f700:	mov	x21, x0
    f704:	cmp	x2, x1
    f708:	b.eq	fdcc <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x804>  // b.none
    f70c:	mov	x0, x2
    f710:	bl	0 <free>
    f714:	ldp	x23, x24, [sp, #48]
    f718:	ldp	x27, x28, [sp, #80]
    f71c:	b	f9a0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x3d8>
    f720:	cmp	w0, #0x3
    f724:	b.ne	f770 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x1a8>  // b.any
    f728:	stp	x27, x28, [sp, #80]
    f72c:	ldr	x27, [x19, #40]
    f730:	cbz	x27, fc20 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x658>
    f734:	ldr	x28, [x19, #48]
    f738:	ldrb	w1, [x27, #8]
    f73c:	cmp	w1, #0x9
    f740:	csel	x27, x27, xzr, eq  // eq = none
    f744:	cbz	x28, fc20 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x658>
    f748:	cmp	w1, #0x18
    f74c:	ldrb	w2, [x28, #8]
    f750:	cset	w0, eq  // eq = none
    f754:	cmp	x27, #0x0
    f758:	csinc	w0, w0, wzr, eq  // eq = none
    f75c:	cmp	w2, #0x9
    f760:	b.eq	f9bc <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x3f4>  // b.none
    f764:	cmp	w2, #0x18
    f768:	b.eq	fba4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x5dc>  // b.none
    f76c:	ldp	x27, x28, [sp, #80]
    f770:	mov	x21, x19
    f774:	mov	x0, x21
    f778:	ldp	x19, x20, [sp, #16]
    f77c:	ldp	x21, x22, [sp, #32]
    f780:	ldp	x29, x30, [sp], #352
    f784:	ret
    f788:	ldr	x20, [x19, #32]
    f78c:	stp	x23, x24, [sp, #48]
    f790:	cbz	x20, ff48 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x980>
    f794:	ldrb	w1, [x20, #8]
    f798:	cmp	w1, #0x6
    f79c:	b.eq	f970 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x3a8>  // b.none
    f7a0:	cmp	w1, #0x13
    f7a4:	mov	x0, #0x0                   	// #0
    f7a8:	mov	x22, #0x0                   	// #0
    f7ac:	b.ne	fac8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x500>  // b.any
    f7b0:	ldr	x24, [x19, #40]
    f7b4:	cbz	x24, ff48 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x980>
    f7b8:	ldrb	w1, [x24, #8]
    f7bc:	stp	x25, x26, [sp, #64]
    f7c0:	cmp	w1, #0x6
    f7c4:	b.eq	fadc <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x514>  // b.none
    f7c8:	cmp	w1, #0x13
    f7cc:	mov	x26, #0x0                   	// #0
    f7d0:	mov	x23, #0x0                   	// #0
    f7d4:	b.ne	faec <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x524>  // b.any
    f7d8:	ldr	x25, [x19, #48]
    f7dc:	cbz	x25, ff4c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x984>
    f7e0:	ldrb	w1, [x25, #8]
    f7e4:	cmp	w1, #0x6
    f7e8:	b.eq	fb00 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x538>  // b.none
    f7ec:	cmp	w1, #0x13
    f7f0:	b.ne	fc64 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x69c>  // b.any
    f7f4:	cmp	x24, #0x0
    f7f8:	cset	w22, ne  // ne = any
    f7fc:	cmp	x20, #0x0
    f800:	csel	w22, w22, wzr, ne  // ne = any
    f804:	cbz	w22, f980 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x3b8>
    f808:	mov	x0, x25
    f80c:	add	x23, sp, #0x60
    f810:	bl	3098 <_ZNK4llvm7VarInit7getNameEv>
    f814:	mov	x2, x1
    f818:	mov	x1, x0
    f81c:	cbz	x0, fc10 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x648>
    f820:	add	x4, x23, #0x10
    f824:	add	x2, x0, x2
    f828:	mov	w3, #0x0                   	// #0
    f82c:	mov	x0, x23
    f830:	str	x4, [sp, #96]
    f834:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f838:	ldr	x1, [x20]
    f83c:	adrp	x26, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f840:	add	x0, x26, #0x0
    f844:	ldr	x1, [x1, #40]
    f848:	cmp	x1, x0
    f84c:	b.ne	feb8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x8f0>  // b.any
    f850:	mov	x0, x20
    f854:	add	x21, sp, #0x80
    f858:	bl	3098 <_ZNK4llvm7VarInit7getNameEv>
    f85c:	mov	x2, x1
    f860:	mov	x1, x0
    f864:	cbz	x0, fe24 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x85c>
    f868:	add	x4, x21, #0x10
    f86c:	add	x2, x0, x2
    f870:	mov	w3, #0x0                   	// #0
    f874:	mov	x0, x21
    f878:	str	x4, [sp, #128]
    f87c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f880:	ldr	x0, [x25]
    f884:	add	x26, x26, #0x0
    f888:	ldr	x1, [x0, #40]
    f88c:	cmp	x1, x26
    f890:	b.ne	fea0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x8d8>  // b.any
    f894:	mov	x0, x25
    f898:	add	x20, sp, #0xd0
    f89c:	bl	3098 <_ZNK4llvm7VarInit7getNameEv>
    f8a0:	mov	x2, x1
    f8a4:	mov	x1, x0
    f8a8:	cbz	x0, fe10 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x848>
    f8ac:	add	x4, x20, #0x10
    f8b0:	add	x2, x0, x2
    f8b4:	mov	w3, #0x0                   	// #0
    f8b8:	mov	x0, x20
    f8bc:	str	x4, [sp, #208]
    f8c0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f8c4:	ldp	x25, x2, [sp, #208]
    f8c8:	ldr	x0, [sp, #136]
    f8cc:	cmp	x0, x2
    f8d0:	b.eq	fe34 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x86c>  // b.none
    f8d4:	mov	w22, #0x0                   	// #0
    f8d8:	add	x0, x20, #0x10
    f8dc:	cmp	x25, x0
    f8e0:	b.eq	f8ec <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x324>  // b.none
    f8e4:	mov	x0, x25
    f8e8:	bl	0 <_ZdlPv>
    f8ec:	ldr	x0, [sp, #128]
    f8f0:	add	x21, x21, #0x10
    f8f4:	cmp	x0, x21
    f8f8:	b.eq	f900 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x338>  // b.none
    f8fc:	bl	0 <_ZdlPv>
    f900:	cbnz	w22, fe50 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x888>
    f904:	ldp	x0, x1, [sp, #96]
    f908:	add	x23, x23, #0x10
    f90c:	ldr	x2, [x19, #16]
    f910:	bl	f5a0 <_ZN4llvm7VarInit3getENS_9StringRefEPNS_5RecTyE>
    f914:	mov	x21, x0
    f918:	ldr	x1, [sp, #96]
    f91c:	cmp	x1, x23
    f920:	b.eq	fda8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x7e0>  // b.none
    f924:	mov	x0, x1
    f928:	bl	0 <_ZdlPv>
    f92c:	ldp	x23, x24, [sp, #48]
    f930:	ldp	x25, x26, [sp, #64]
    f934:	b	f774 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x1ac>
    f938:	ldr	x0, [x19, #32]
    f93c:	adrp	x1, 3e0 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE+0x50>
    f940:	ldr	x1, [x1]
    f944:	ldr	x2, [x0]
    f948:	ldr	x2, [x2, #64]
    f94c:	blr	x2
    f950:	cbz	x0, f770 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x1a8>
    f954:	ldrb	w1, [x0, #8]
    f958:	cmp	w1, #0x8
    f95c:	b.ne	f770 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x1a8>  // b.any
    f960:	ldr	x0, [x0, #24]
    f964:	cbz	x0, fc08 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x640>
    f968:	ldr	x21, [x19, #40]
    f96c:	b	f774 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x1ac>
    f970:	mov	x0, x20
    f974:	mov	x22, #0x0                   	// #0
    f978:	mov	x20, #0x0                   	// #0
    f97c:	b	f7b0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x1e8>
    f980:	ldp	x23, x24, [sp, #48]
    f984:	ldp	x25, x26, [sp, #64]
    f988:	b	f770 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x1a8>
    f98c:	mov	x3, x22
    f990:	mov	x2, x26
    f994:	mov	x0, x25
    f998:	bl	ddf0 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE>
    f99c:	mov	x21, x0
    f9a0:	ldp	x25, x26, [sp, #64]
    f9a4:	cbz	x21, f770 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x1a8>
    f9a8:	mov	x0, x21
    f9ac:	ldp	x19, x20, [sp, #16]
    f9b0:	ldp	x21, x22, [sp, #32]
    f9b4:	ldp	x29, x30, [sp], #352
    f9b8:	ret
    f9bc:	cbz	w0, f76c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x1a4>
    f9c0:	cbz	x27, fbd0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x608>
    f9c4:	ldr	w1, [x27, #32]
    f9c8:	ldr	w0, [x28, #32]
    f9cc:	cmp	w1, w0
    f9d0:	b.ne	f76c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x1a4>  // b.any
    f9d4:	add	x20, sp, #0xd0
    f9d8:	mov	x0, #0x800000000           	// #34359738368
    f9dc:	add	x1, x20, #0x10
    f9e0:	stp	x1, x0, [sp, #208]
    f9e4:	ldr	w21, [x27, #32]
    f9e8:	cbz	w21, fedc <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x914>
    f9ec:	add	x22, x28, #0x28
    f9f0:	stp	x23, x24, [sp, #48]
    f9f4:	add	x23, x27, #0x28
    f9f8:	mov	x24, #0x0                   	// #0
    f9fc:	stp	x25, x26, [sp, #64]
    fa00:	cbz	x27, fc38 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x670>
    fa04:	ldr	w0, [x27, #32]
    fa08:	cmp	w0, w24
    fa0c:	b.ls	fee4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x91c>  // b.plast
    fa10:	ldr	x26, [x23, x24, lsl #3]
    fa14:	cbz	x28, fc44 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x67c>
    fa18:	ldr	w0, [x28, #32]
    fa1c:	cmp	w0, w24
    fa20:	b.ls	fee4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x91c>  // b.plast
    fa24:	ldr	x25, [x22, x24, lsl #3]
    fa28:	cbz	x25, ff44 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x97c>
    fa2c:	ldrb	w1, [x25, #8]
    fa30:	cmp	w1, #0x12
    fa34:	b.eq	fa44 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x47c>  // b.none
    fa38:	cmp	w1, #0x18
    fa3c:	b.ne	fdbc <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x7f4>  // b.any
    fa40:	mov	x25, #0x0                   	// #0
    fa44:	ldp	w3, w4, [sp, #216]
    fa48:	cmp	w3, w4
    fa4c:	b.cs	fc50 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x688>  // b.hs, b.nlast
    fa50:	ldr	x5, [sp, #208]
    fa54:	ubfiz	x2, x3, #4, #32
    fa58:	mov	w1, w3
    fa5c:	add	x0, x5, x2
    fa60:	add	x1, x1, #0x1
    fa64:	str	x26, [x5, x2]
    fa68:	cmp	x1, w4, uxtw
    fa6c:	str	x25, [x0, #8]
    fa70:	b.hi	ff24 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x95c>  // b.pmore
    fa74:	add	w3, w3, #0x1
    fa78:	str	w3, [sp, #216]
    fa7c:	cbz	w3, ff04 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x93c>
    fa80:	add	x24, x24, #0x1
    fa84:	cmp	w21, w24
    fa88:	b.ne	fa00 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x438>  // b.any
    fa8c:	ldp	x23, x24, [sp, #48]
    fa90:	ldp	x25, x26, [sp, #64]
    fa94:	mov	w3, w3
    fa98:	ldr	x0, [x19, #32]
    fa9c:	mov	x1, #0x0                   	// #0
    faa0:	ldr	x2, [sp, #208]
    faa4:	bl	49d8 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE>
    faa8:	mov	x21, x0
    faac:	ldr	x0, [sp, #208]
    fab0:	add	x20, x20, #0x10
    fab4:	cmp	x0, x20
    fab8:	b.eq	fdb4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x7ec>  // b.none
    fabc:	bl	0 <free>
    fac0:	ldp	x27, x28, [sp, #80]
    fac4:	b	f774 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x1ac>
    fac8:	cmp	w1, #0x12
    facc:	b.ne	ff7c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x9b4>  // b.any
    fad0:	mov	x22, x20
    fad4:	mov	x20, #0x0                   	// #0
    fad8:	b	f7b0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x1e8>
    fadc:	mov	x26, x24
    fae0:	mov	x23, #0x0                   	// #0
    fae4:	mov	x24, #0x0                   	// #0
    fae8:	b	f7d8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x210>
    faec:	cmp	w1, #0x12
    faf0:	b.ne	ff74 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x9ac>  // b.any
    faf4:	mov	x23, x24
    faf8:	mov	x24, #0x0                   	// #0
    fafc:	b	f7d8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x210>
    fb00:	cmp	x0, #0x0
    fb04:	cset	w22, ne  // ne = any
    fb08:	cmp	x26, #0x0
    fb0c:	csel	w22, w22, wzr, ne  // ne = any
    fb10:	cbz	w22, f980 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x3b8>
    fb14:	ldr	x1, [x0]
    fb18:	add	x21, sp, #0x80
    fb1c:	mov	x8, x21
    fb20:	add	x20, sp, #0xd0
    fb24:	ldr	x23, [x25, #24]
    fb28:	ldr	x1, [x1, #40]
    fb2c:	blr	x1
    fb30:	ldr	x1, [x25]
    fb34:	mov	x0, x25
    fb38:	mov	x8, x20
    fb3c:	ldr	x1, [x1, #40]
    fb40:	blr	x1
    fb44:	ldr	x2, [sp, #136]
    fb48:	ldr	x0, [sp, #216]
    fb4c:	cmp	x2, x0
    fb50:	b.eq	fbe8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x620>  // b.none
    fb54:	ldr	x19, [sp, #208]
    fb58:	mov	w22, #0x0                   	// #0
    fb5c:	add	x20, x20, #0x10
    fb60:	cmp	x19, x20
    fb64:	b.eq	fb70 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x5a8>  // b.none
    fb68:	mov	x0, x19
    fb6c:	bl	0 <_ZdlPv>
    fb70:	ldr	x0, [sp, #128]
    fb74:	add	x21, x21, #0x10
    fb78:	cmp	x0, x21
    fb7c:	b.eq	fb84 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x5bc>  // b.none
    fb80:	bl	0 <_ZdlPv>
    fb84:	cbz	w22, fb8c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x5c4>
    fb88:	ldr	x23, [x26, #24]
    fb8c:	mov	x0, x23
    fb90:	bl	4d90 <_ZN4llvm7DefInit3getEPNS_6RecordE>
    fb94:	mov	x21, x0
    fb98:	ldp	x23, x24, [sp, #48]
    fb9c:	ldp	x25, x26, [sp, #64]
    fba0:	b	f774 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x1ac>
    fba4:	cmp	w1, #0x18
    fba8:	b.eq	f76c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x1a4>  // b.none
    fbac:	cbz	w0, f76c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x1a4>
    fbb0:	add	x20, sp, #0xd0
    fbb4:	mov	x0, #0x800000000           	// #34359738368
    fbb8:	add	x1, x20, #0x10
    fbbc:	stp	x1, x0, [sp, #208]
    fbc0:	mov	x28, #0x0                   	// #0
    fbc4:	cbnz	x27, f9e4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x41c>
    fbc8:	ldr	w21, [x28, #32]
    fbcc:	b	f9e8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x420>
    fbd0:	add	x20, sp, #0xd0
    fbd4:	mov	x0, #0x800000000           	// #34359738368
    fbd8:	add	x1, x20, #0x10
    fbdc:	stp	x1, x0, [sp, #208]
    fbe0:	ldr	w21, [x28, #32]
    fbe4:	b	f9e8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x420>
    fbe8:	ldr	x19, [sp, #208]
    fbec:	cbz	x2, fb5c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x594>
    fbf0:	ldr	x0, [sp, #128]
    fbf4:	mov	x1, x19
    fbf8:	bl	0 <memcmp>
    fbfc:	cmp	w0, #0x0
    fc00:	cset	w22, eq  // eq = none
    fc04:	b	fb5c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x594>
    fc08:	ldr	x21, [x19, #48]
    fc0c:	b	f774 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x1ac>
    fc10:	add	x0, x23, #0x10
    fc14:	stp	x0, xzr, [sp, #96]
    fc18:	strb	wzr, [sp, #112]
    fc1c:	b	f838 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x270>
    fc20:	stp	x23, x24, [sp, #48]
    fc24:	stp	x25, x26, [sp, #64]
    fc28:	bl	9d8 <_ZN4llvm3isaINS_8ListInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    fc2c:	stp	x23, x24, [sp, #48]
    fc30:	stp	x27, x28, [sp, #80]
    fc34:	bl	a00 <_ZN4llvm3isaINS_7DagInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    fc38:	bl	24b8 <_ZN4llvm9UnsetInit3getEv>
    fc3c:	mov	x26, x0
    fc40:	cbnz	x28, fa18 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x450>
    fc44:	bl	24b8 <_ZN4llvm9UnsetInit3getEv>
    fc48:	mov	x25, x0
    fc4c:	b	fa28 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x460>
    fc50:	mov	x0, x20
    fc54:	mov	x1, #0x0                   	// #0
    fc58:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    fc5c:	ldp	w3, w4, [sp, #216]
    fc60:	b	fa50 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x488>
    fc64:	cmp	w1, #0x12
    fc68:	b.ne	f980 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x3b8>  // b.any
    fc6c:	cmp	x22, #0x0
    fc70:	ccmp	x23, #0x0, #0x4, ne  // ne = any
    fc74:	b.eq	f980 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x3b8>  // b.none
    fc78:	ldr	x1, [x25, #24]
    fc7c:	cbz	x1, fdd8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x810>
    fc80:	add	x21, sp, #0x80
    fc84:	mov	w3, #0x0                   	// #0
    fc88:	add	x4, x21, #0x10
    fc8c:	mov	x0, x21
    fc90:	ldr	x2, [x25, #32]
    fc94:	str	x4, [sp, #128]
    fc98:	add	x2, x1, x2
    fc9c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    fca0:	add	x20, sp, #0xd0
    fca4:	mov	x19, #0x0                   	// #0
    fca8:	add	x24, x20, #0x10
    fcac:	b	fd5c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x794>
    fcb0:	ldr	x2, [x22, #32]
    fcb4:	mov	w3, #0x0                   	// #0
    fcb8:	mov	x0, x20
    fcbc:	str	x24, [sp, #208]
    fcc0:	add	x2, x1, x2
    fcc4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    fcc8:	ldp	x1, x3, [sp, #208]
    fccc:	mov	x2, x19
    fcd0:	mov	x0, x21
    fcd4:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcmm>
    fcd8:	ldr	x1, [sp, #208]
    fcdc:	mov	x19, x0
    fce0:	cmp	x1, x24
    fce4:	b.eq	fcf0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x728>  // b.none
    fce8:	mov	x0, x1
    fcec:	bl	0 <_ZdlPv>
    fcf0:	cmn	x19, #0x1
    fcf4:	b.eq	fd8c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x7c4>  // b.none
    fcf8:	ldr	x1, [x23, #24]
    fcfc:	ldr	x25, [x22, #32]
    fd00:	cbz	x1, fd78 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x7b0>
    fd04:	ldr	x2, [x23, #32]
    fd08:	mov	w3, #0x0                   	// #0
    fd0c:	mov	x0, x20
    fd10:	str	x24, [sp, #208]
    fd14:	add	x2, x1, x2
    fd18:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    fd1c:	ldp	x3, x4, [sp, #208]
    fd20:	ldr	x2, [sp, #136]
    fd24:	cmp	x19, x2
    fd28:	b.hi	ff54 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x98c>  // b.pmore
    fd2c:	sub	x2, x2, x19
    fd30:	mov	x1, x19
    fd34:	cmp	x2, x25
    fd38:	mov	x0, x21
    fd3c:	csel	x2, x2, x25, ls  // ls = plast
    fd40:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    fd44:	ldr	x0, [sp, #208]
    fd48:	cmp	x0, x24
    fd4c:	b.eq	fd54 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x78c>  // b.none
    fd50:	bl	0 <_ZdlPv>
    fd54:	ldr	x0, [x23, #32]
    fd58:	add	x19, x19, x0
    fd5c:	ldr	x1, [x22, #24]
    fd60:	cbnz	x1, fcb0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x6e8>
    fd64:	mov	x1, x24
    fd68:	mov	x3, #0x0                   	// #0
    fd6c:	stp	x24, xzr, [sp, #208]
    fd70:	strb	wzr, [sp, #224]
    fd74:	b	fccc <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x704>
    fd78:	mov	x3, x24
    fd7c:	mov	x4, #0x0                   	// #0
    fd80:	stp	x24, xzr, [sp, #208]
    fd84:	strb	wzr, [sp, #224]
    fd88:	b	fd20 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x758>
    fd8c:	ldp	x0, x1, [sp, #128]
    fd90:	bl	a360 <_ZN4llvm10StringInit3getENS_9StringRefE>
    fd94:	ldr	x1, [sp, #128]
    fd98:	add	x2, x21, #0x10
    fd9c:	mov	x21, x0
    fda0:	cmp	x1, x2
    fda4:	b.ne	f924 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x35c>  // b.any
    fda8:	ldp	x23, x24, [sp, #48]
    fdac:	ldp	x25, x26, [sp, #64]
    fdb0:	b	f774 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x1ac>
    fdb4:	ldp	x27, x28, [sp, #80]
    fdb8:	b	f774 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x1ac>
    fdbc:	mov	x21, x19
    fdc0:	ldp	x23, x24, [sp, #48]
    fdc4:	ldp	x25, x26, [sp, #64]
    fdc8:	b	faac <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x4e4>
    fdcc:	ldp	x23, x24, [sp, #48]
    fdd0:	ldp	x27, x28, [sp, #80]
    fdd4:	b	f9a0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x3d8>
    fdd8:	add	x21, sp, #0x80
    fddc:	strb	wzr, [sp, #144]
    fde0:	add	x0, x21, #0x10
    fde4:	stp	x0, xzr, [sp, #128]
    fde8:	b	fca0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x6d8>
    fdec:	mov	x1, x0
    fdf0:	mov	x2, x23
    fdf4:	mov	x0, x21
    fdf8:	mov	x3, #0x8                   	// #8
    fdfc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    fe00:	ldr	x0, [sp, #128]
    fe04:	ldr	w1, [sp, #136]
    fe08:	add	x0, x0, x1, lsl #3
    fe0c:	b	f660 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x98>
    fe10:	add	x25, x20, #0x10
    fe14:	mov	x2, #0x0                   	// #0
    fe18:	stp	x25, xzr, [sp, #208]
    fe1c:	strb	wzr, [sp, #224]
    fe20:	b	f8c8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x300>
    fe24:	add	x0, x21, #0x10
    fe28:	stp	x0, xzr, [sp, #128]
    fe2c:	strb	wzr, [sp, #144]
    fe30:	b	f880 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x2b8>
    fe34:	cbz	x2, f8d8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x310>
    fe38:	ldr	x0, [sp, #128]
    fe3c:	mov	x1, x25
    fe40:	bl	0 <memcmp>
    fe44:	cmp	w0, #0x0
    fe48:	cset	w22, eq  // eq = none
    fe4c:	b	f8d8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x310>
    fe50:	mov	x0, x24
    fe54:	bl	3098 <_ZNK4llvm7VarInit7getNameEv>
    fe58:	mov	x2, x1
    fe5c:	mov	x1, x0
    fe60:	cbz	x0, fecc <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x904>
    fe64:	add	x4, x20, #0x10
    fe68:	add	x2, x0, x2
    fe6c:	mov	w3, #0x0                   	// #0
    fe70:	mov	x0, x20
    fe74:	str	x4, [sp, #208]
    fe78:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    fe7c:	mov	x1, x20
    fe80:	mov	x0, x23
    fe84:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
    fe88:	add	x20, x20, #0x10
    fe8c:	ldr	x0, [sp, #208]
    fe90:	cmp	x0, x20
    fe94:	b.eq	f904 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x33c>  // b.none
    fe98:	bl	0 <_ZdlPv>
    fe9c:	b	f904 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x33c>
    fea0:	add	x20, sp, #0xd0
    fea4:	mov	x0, x25
    fea8:	mov	x8, x20
    feac:	blr	x1
    feb0:	ldp	x25, x2, [sp, #208]
    feb4:	b	f8c8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x300>
    feb8:	add	x21, sp, #0x80
    febc:	mov	x0, x20
    fec0:	mov	x8, x21
    fec4:	blr	x1
    fec8:	b	f880 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x2b8>
    fecc:	add	x0, x20, #0x10
    fed0:	stp	x0, xzr, [sp, #208]
    fed4:	strb	wzr, [sp, #224]
    fed8:	b	fe7c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x8b4>
    fedc:	ldr	w3, [sp, #216]
    fee0:	b	fa94 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x4cc>
    fee4:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    fee8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    feec:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    fef0:	add	x3, x3, #0x0
    fef4:	add	x1, x1, #0x0
    fef8:	add	x0, x0, #0x0
    fefc:	mov	w2, #0x2af                 	// #687
    ff00:	bl	0 <__assert_fail>
    ff04:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ff08:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ff0c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ff10:	add	x3, x3, #0x0
    ff14:	add	x1, x1, #0x0
    ff18:	add	x0, x0, #0x0
    ff1c:	mov	w2, #0xa7                  	// #167
    ff20:	bl	0 <__assert_fail>
    ff24:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ff28:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ff2c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ff30:	add	x3, x3, #0x0
    ff34:	add	x1, x1, #0x0
    ff38:	add	x0, x0, #0x0
    ff3c:	mov	w2, #0x43                  	// #67
    ff40:	bl	0 <__assert_fail>
    ff44:	bl	910 <_ZN4llvm3isaINS_10StringInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    ff48:	stp	x25, x26, [sp, #64]
    ff4c:	stp	x27, x28, [sp, #80]
    ff50:	bl	938 <_ZN4llvm3isaINS_7DefInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    ff54:	mov	x3, x2
    ff58:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ff5c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ff60:	mov	x2, x19
    ff64:	add	x1, x1, #0x0
    ff68:	add	x0, x0, #0x0
    ff6c:	stp	x27, x28, [sp, #80]
    ff70:	bl	0 <_ZSt24__throw_out_of_range_fmtPKcz>
    ff74:	mov	x24, #0x0                   	// #0
    ff78:	b	f7d8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x210>
    ff7c:	mov	x20, #0x0                   	// #0
    ff80:	b	f7b0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x1e8>
    ff84:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ff88:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ff8c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ff90:	add	x3, x3, #0x0
    ff94:	add	x1, x1, #0x0
    ff98:	add	x0, x0, #0x0
    ff9c:	mov	w2, #0x108                 	// #264
    ffa0:	bl	0 <__assert_fail>
    ffa4:	bl	7a0 <_ZN4llvm13isa_impl_wrapINS_9ListRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>

000000000000ffa8 <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE>:
    ffa8:	stp	x29, x30, [sp, #-208]!
    ffac:	mov	x29, sp
    ffb0:	stp	x19, x20, [sp, #16]
    ffb4:	mov	x19, x0
    ffb8:	mov	x20, x1
    ffbc:	ldr	x0, [x0, #32]
    ffc0:	stp	x21, x22, [sp, #32]
    ffc4:	ldr	x2, [x0]
    ffc8:	ldr	x2, [x2, #96]
    ffcc:	blr	x2
    ffd0:	mov	x21, x0
    ffd4:	ldrb	w1, [x19, #9]
    ffd8:	cmp	w1, #0x2
    ffdc:	b.eq	10074 <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0xcc>  // b.none
    ffe0:	ldr	x0, [x19, #40]
    ffe4:	mov	x1, x20
    ffe8:	ldr	x2, [x0]
    ffec:	ldr	x2, [x2, #96]
    fff0:	blr	x2
    fff4:	mov	x22, x0
    fff8:	ldrb	w1, [x19, #9]
    fffc:	cmp	w1, #0x1
   10000:	b.eq	100c4 <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x11c>  // b.none
   10004:	ldr	x0, [x19, #48]
   10008:	mov	x1, x20
   1000c:	ldr	x2, [x0]
   10010:	ldr	x2, [x2, #96]
   10014:	blr	x2
   10018:	mov	x3, x0
   1001c:	ldr	x0, [x19, #32]
   10020:	cmp	x0, x21
   10024:	b.eq	10054 <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0xac>  // b.none
   10028:	ldrb	w0, [x19, #9]
   1002c:	mov	x1, x21
   10030:	ldr	x4, [x19, #16]
   10034:	mov	x2, x22
   10038:	bl	7008 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE>
   1003c:	ldr	x1, [x20, #8]
   10040:	bl	f5c8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE>
   10044:	ldp	x19, x20, [sp, #16]
   10048:	ldp	x21, x22, [sp, #32]
   1004c:	ldp	x29, x30, [sp], #208
   10050:	ret
   10054:	ldr	x0, [x19, #40]
   10058:	cmp	x0, x22
   1005c:	b.ne	10028 <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x80>  // b.any
   10060:	ldr	x1, [x19, #48]
   10064:	mov	x0, x19
   10068:	cmp	x1, x3
   1006c:	b.ne	10028 <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x80>  // b.any
   10070:	b	10044 <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x9c>
   10074:	ldr	x1, [x19, #32]
   10078:	cmp	x1, x0
   1007c:	b.eq	ffe0 <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x38>  // b.none
   10080:	ldr	x2, [x0]
   10084:	adrp	x1, 3e0 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE+0x50>
   10088:	ldr	x1, [x1]
   1008c:	ldr	x2, [x2, #64]
   10090:	blr	x2
   10094:	cbz	x0, ffe0 <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x38>
   10098:	ldrb	w1, [x0, #8]
   1009c:	cmp	w1, #0x8
   100a0:	b.ne	ffe0 <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x38>  // b.any
   100a4:	ldr	x0, [x0, #24]
   100a8:	cbz	x0, 10148 <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x1a0>
   100ac:	ldr	x0, [x19, #40]
   100b0:	mov	x1, x20
   100b4:	ldr	x2, [x0]
   100b8:	ldr	x2, [x2, #96]
   100bc:	blr	x2
   100c0:	b	10044 <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x9c>
   100c4:	stp	x23, x24, [sp, #48]
   100c8:	adrp	x23, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   100cc:	ldrb	w3, [x20, #16]
   100d0:	ldr	x4, [x20, #8]
   100d4:	add	x8, sp, #0x68
   100d8:	ldr	x23, [x23]
   100dc:	add	x0, sp, #0xb0
   100e0:	add	x2, sp, #0x58
   100e4:	add	x1, sp, #0x60
   100e8:	add	x23, x23, #0x10
   100ec:	str	x21, [sp, #96]
   100f0:	stp	x23, x4, [sp, #144]
   100f4:	add	x24, sp, #0x90
   100f8:	strb	w3, [sp, #160]
   100fc:	stp	x20, xzr, [sp, #168]
   10100:	stp	xzr, xzr, [sp, #184]
   10104:	str	wzr, [sp, #200]
   10108:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   1010c:	ldr	x0, [x19, #48]
   10110:	mov	x1, x24
   10114:	ldr	x2, [x0]
   10118:	ldr	x2, [x2, #96]
   1011c:	blr	x2
   10120:	mov	x3, x0
   10124:	ldr	x0, [sp, #184]
   10128:	str	x3, [sp, #72]
   1012c:	ldr	w1, [sp, #200]
   10130:	str	x23, [sp, #144]
   10134:	lsl	x1, x1, #3
   10138:	bl	0 <_ZdlPvm>
   1013c:	ldp	x23, x24, [sp, #48]
   10140:	ldr	x3, [sp, #72]
   10144:	b	1001c <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x74>
   10148:	ldr	x0, [x19, #48]
   1014c:	mov	x1, x20
   10150:	ldr	x2, [x0]
   10154:	ldr	x2, [x2, #96]
   10158:	blr	x2
   1015c:	b	10044 <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x9c>

0000000000010160 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj>:
   10160:	stp	x29, x30, [sp, #-96]!
   10164:	mov	x29, sp
   10168:	stp	x21, x22, [sp, #32]
   1016c:	adrp	x21, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10170:	stp	x23, x24, [sp, #48]
   10174:	add	x23, x21, #0x0
   10178:	add	x22, x23, #0x330
   1017c:	stp	x19, x20, [sp, #16]
   10180:	mov	x19, x0
   10184:	mov	w20, w1
   10188:	ldarb	w0, [x22]
   1018c:	tbz	w0, #0, 10258 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0xf8>
   10190:	add	x0, x21, #0x0
   10194:	str	x19, [sp, #80]
   10198:	str	w20, [sp, #88]
   1019c:	ldr	w3, [x0, #848]
   101a0:	cbz	w3, 102b0 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x150>
   101a4:	cmn	x19, #0x8
   101a8:	b.eq	10308 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x1a8>  // b.none
   101ac:	cmn	x19, #0x10
   101b0:	ccmn	w20, #0x2, #0x0, eq  // eq = none
   101b4:	b.eq	10310 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x1b0>  // b.none
   101b8:	mov	w2, #0x25                  	// #37
   101bc:	lsr	w0, w19, #9
   101c0:	eor	w0, w0, w19, lsr #4
   101c4:	add	x1, x21, #0x0
   101c8:	mul	w2, w20, w2
   101cc:	sub	w5, w3, #0x1
   101d0:	mov	w7, #0x1                   	// #1
   101d4:	mov	x22, #0x0                   	// #0
   101d8:	ldr	x1, [x1, #832]
   101dc:	orr	x0, x2, x0, lsl #32
   101e0:	sub	x0, x0, #0x1
   101e4:	mov	w6, #0x18                  	// #24
   101e8:	sub	x2, x0, x2, lsl #32
   101ec:	eor	x2, x2, x2, lsr #22
   101f0:	sub	x0, x2, #0x1
   101f4:	sub	x2, x0, x2, lsl #13
   101f8:	eor	x2, x2, x2, lsr #8
   101fc:	add	x2, x2, x2, lsl #3
   10200:	eor	x2, x2, x2, lsr #15
   10204:	sub	x0, x2, #0x1
   10208:	sub	x2, x0, x2, lsl #27
   1020c:	eor	x2, x2, x2, lsr #31
   10210:	and	w2, w5, w2
   10214:	umull	x0, w2, w6
   10218:	add	x4, x1, x0
   1021c:	ldr	x0, [x1, x0]
   10220:	cmp	x19, x0
   10224:	b.eq	10330 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x1d0>  // b.none
   10228:	cmn	x0, #0x8
   1022c:	b.eq	10358 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x1f8>  // b.none
   10230:	cmn	x0, #0x10
   10234:	b.ne	10248 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0xe8>  // b.any
   10238:	ldr	w0, [x4, #8]
   1023c:	cmp	x22, #0x0
   10240:	ccmn	w0, #0x2, #0x0, eq  // eq = none
   10244:	csel	x22, x22, x4, ne  // ne = any
   10248:	add	w2, w2, w7
   1024c:	add	w7, w7, #0x1
   10250:	and	w2, w5, w2
   10254:	b	10214 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0xb4>
   10258:	mov	x0, x22
   1025c:	bl	0 <__cxa_guard_acquire>
   10260:	cbz	w0, 10190 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x30>
   10264:	str	xzr, [x23, #824]
   10268:	mov	x0, x22
   1026c:	str	xzr, [x23, #832]
   10270:	add	x24, x23, #0x338
   10274:	str	xzr, [x23, #840]
   10278:	str	wzr, [x23, #848]
   1027c:	bl	0 <__cxa_guard_release>
   10280:	mov	x1, x24
   10284:	adrp	x2, 0 <__dso_handle>
   10288:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   1028c:	add	x2, x2, #0x0
   10290:	add	x0, x0, #0x0
   10294:	bl	0 <__cxa_atexit>
   10298:	add	x0, x21, #0x0
   1029c:	str	x19, [sp, #80]
   102a0:	str	w20, [sp, #88]
   102a4:	ldr	w3, [x0, #848]
   102a8:	cbnz	w3, 101a4 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x44>
   102ac:	nop
   102b0:	ldr	x2, [x0, #824]
   102b4:	mov	w1, #0x0                   	// #0
   102b8:	add	x2, x2, #0x1
   102bc:	str	x2, [x0, #824]
   102c0:	add	x22, x21, #0x0
   102c4:	add	x22, x22, #0x338
   102c8:	mov	x0, x22
   102cc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   102d0:	mov	x0, x22
   102d4:	add	x2, sp, #0x48
   102d8:	add	x1, sp, #0x50
   102dc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   102e0:	ldr	x22, [sp, #72]
   102e4:	cbnz	x22, 103ac <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x24c>
   102e8:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   102ec:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   102f0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   102f4:	add	x3, x3, #0x0
   102f8:	add	x1, x1, #0x0
   102fc:	add	x0, x0, #0x0
   10300:	mov	w2, #0x22f                 	// #559
   10304:	bl	0 <__assert_fail>
   10308:	cmn	w20, #0x1
   1030c:	b.ne	101b8 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x58>  // b.any
   10310:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10314:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10318:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   1031c:	add	x3, x3, #0x0
   10320:	add	x1, x1, #0x0
   10324:	add	x0, x0, #0x0
   10328:	mov	w2, #0x250                 	// #592
   1032c:	bl	0 <__assert_fail>
   10330:	ldr	w8, [x4, #8]
   10334:	cmp	w20, w8
   10338:	b.ne	10228 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0xc8>  // b.any
   1033c:	ldr	x0, [x4, #16]
   10340:	cbz	x0, 104ac <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x34c>
   10344:	ldp	x19, x20, [sp, #16]
   10348:	ldp	x21, x22, [sp, #32]
   1034c:	ldp	x23, x24, [sp, #48]
   10350:	ldp	x29, x30, [sp], #96
   10354:	ret
   10358:	ldr	w0, [x4, #8]
   1035c:	cmn	w0, #0x1
   10360:	b.ne	10248 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0xe8>  // b.any
   10364:	add	x2, x21, #0x0
   10368:	cmp	x22, #0x0
   1036c:	csel	x22, x22, x4, ne  // ne = any
   10370:	lsl	w1, w3, #1
   10374:	add	w5, w1, w3
   10378:	add	x23, x2, #0x338
   1037c:	ldr	x4, [x2, #824]
   10380:	ldr	w0, [x23, #16]
   10384:	add	x4, x4, #0x1
   10388:	str	x4, [x2, #824]
   1038c:	add	w0, w0, #0x1
   10390:	cmp	w5, w0, lsl #2
   10394:	b.ls	102c0 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x160>  // b.plast
   10398:	ldr	w1, [x23, #20]
   1039c:	sub	w1, w3, w1
   103a0:	sub	w1, w1, w0
   103a4:	cmp	w1, w3, lsr #3
   103a8:	b.ls	10468 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x308>  // b.plast
   103ac:	add	x0, x21, #0x0
   103b0:	ldr	x2, [x22]
   103b4:	ldr	w1, [x0, #840]
   103b8:	cmn	x2, #0x8
   103bc:	add	w1, w1, #0x1
   103c0:	str	w1, [x0, #840]
   103c4:	b.eq	10458 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x2f8>  // b.none
   103c8:	add	x0, x21, #0x0
   103cc:	ldr	w1, [x0, #844]
   103d0:	sub	w1, w1, #0x1
   103d4:	str	w1, [x0, #844]
   103d8:	ldr	w0, [sp, #88]
   103dc:	ldr	x1, [sp, #80]
   103e0:	str	x1, [x22]
   103e4:	str	w0, [x22, #8]
   103e8:	str	xzr, [x22, #16]
   103ec:	add	x0, x21, #0x0
   103f0:	mov	w2, #0x4                   	// #4
   103f4:	mov	x1, #0x28                  	// #40
   103f8:	add	x0, x0, #0x88
   103fc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10400:	str	w20, [x0, #32]
   10404:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10408:	mov	w3, #0x15                  	// #21
   1040c:	adrp	x2, 410 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE+0x80>
   10410:	strh	w3, [x0, #8]
   10414:	ldr	x1, [x1]
   10418:	ldr	x3, [x19, #16]
   1041c:	add	x1, x1, #0x10
   10420:	ldr	x2, [x2]
   10424:	str	x1, [x0]
   10428:	stp	x2, x19, [x0, #16]
   1042c:	cbz	x3, 1048c <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x32c>
   10430:	ldr	w1, [x3, #8]
   10434:	cmp	w1, #0x3
   10438:	b.eq	10450 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x2f0>  // b.none
   1043c:	cmp	w1, #0x1
   10440:	b.ne	1048c <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x32c>  // b.any
   10444:	ldr	w1, [x3, #24]
   10448:	cmp	w20, w1
   1044c:	b.cs	1048c <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x32c>  // b.hs, b.nlast
   10450:	str	x0, [x22, #16]
   10454:	b	10344 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x1e4>
   10458:	ldr	w0, [x22, #8]
   1045c:	cmn	w0, #0x1
   10460:	b.ne	103c8 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x268>  // b.any
   10464:	b	103d8 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x278>
   10468:	mov	w1, w3
   1046c:	mov	x0, x23
   10470:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10474:	mov	x0, x23
   10478:	add	x2, sp, #0x48
   1047c:	add	x1, sp, #0x50
   10480:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10484:	ldr	x22, [sp, #72]
   10488:	b	102e4 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x184>
   1048c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10490:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10494:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10498:	add	x3, x3, #0x0
   1049c:	add	x1, x1, #0x0
   104a0:	add	x0, x0, #0x0
   104a4:	mov	w2, #0x457                 	// #1111
   104a8:	bl	0 <__assert_fail>
   104ac:	mov	x22, x4
   104b0:	b	103ec <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x28c>
   104b4:	nop

00000000000104b8 <_ZNK4llvm6OpInit6getBitEj>:
   104b8:	adrp	x2, 410 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE+0x80>
   104bc:	ldr	x3, [x0, #16]
   104c0:	ldr	x2, [x2]
   104c4:	cmp	x3, x2
   104c8:	b.eq	104d0 <_ZNK4llvm6OpInit6getBitEj+0x18>  // b.none
   104cc:	b	10160 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj>
   104d0:	ret
   104d4:	nop

00000000000104d8 <_ZNK4llvm10FoldOpInit6getBitEj>:
   104d8:	b	10160 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj>
   104dc:	nop

00000000000104e0 <_ZNK4llvm9IsAOpInit6getBitEj>:
   104e0:	b	10160 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj>
   104e4:	nop

00000000000104e8 <_ZNK4llvm7VarInit6getBitEj>:
   104e8:	adrp	x2, 410 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE+0x80>
   104ec:	ldr	x3, [x0, #16]
   104f0:	ldr	x2, [x2]
   104f4:	cmp	x3, x2
   104f8:	b.eq	10500 <_ZNK4llvm7VarInit6getBitEj+0x18>  // b.none
   104fc:	b	10160 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj>
   10500:	ret
   10504:	nop

0000000000010508 <_ZNK4llvm18VarListElementInit6getBitEj>:
   10508:	adrp	x2, 410 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE+0x80>
   1050c:	ldr	x3, [x0, #16]
   10510:	ldr	x2, [x2]
   10514:	cmp	x3, x2
   10518:	b.eq	10520 <_ZNK4llvm18VarListElementInit6getBitEj+0x18>  // b.none
   1051c:	b	10160 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj>
   10520:	ret
   10524:	nop

0000000000010528 <_ZNK4llvm9FieldInit6getBitEj>:
   10528:	adrp	x2, 410 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE+0x80>
   1052c:	ldr	x3, [x0, #16]
   10530:	ldr	x2, [x2]
   10534:	cmp	x3, x2
   10538:	b.eq	10540 <_ZNK4llvm9FieldInit6getBitEj+0x18>  // b.none
   1053c:	b	10160 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj>
   10540:	ret
   10544:	nop

0000000000010548 <_ZNK4llvm10CondOpInit6getBitEj>:
   10548:	b	10160 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj>
   1054c:	nop

0000000000010550 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE>:
   10550:	stp	x29, x30, [sp, #-224]!
   10554:	mov	x29, sp
   10558:	ldr	x3, [x0, #16]
   1055c:	cbz	x3, 106d8 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x188>
   10560:	stp	x21, x22, [sp, #32]
   10564:	mov	x21, x0
   10568:	ldr	w0, [x3, #8]
   1056c:	mov	x22, #0x0                   	// #0
   10570:	cmp	w0, #0x1
   10574:	b.eq	10588 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x38>  // b.none
   10578:	mov	x0, x22
   1057c:	ldp	x21, x22, [sp, #32]
   10580:	ldp	x29, x30, [sp], #224
   10584:	ret
   10588:	stp	x23, x24, [sp, #48]
   1058c:	add	x23, sp, #0x50
   10590:	mov	x0, #0x1000000000          	// #68719476736
   10594:	stp	x19, x20, [sp, #16]
   10598:	mov	x19, x1
   1059c:	add	x1, x23, #0x10
   105a0:	stp	x1, x0, [sp, #80]
   105a4:	mov	x20, x2
   105a8:	ldr	w22, [x3, #24]
   105ac:	cmp	x2, #0x10
   105b0:	b.hi	106a0 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x150>  // b.pmore
   105b4:	add	x20, x19, x20, lsl #2
   105b8:	cmp	x20, x19
   105bc:	b.eq	106b0 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x160>  // b.none
   105c0:	add	x24, x23, #0x10
   105c4:	str	x25, [sp, #64]
   105c8:	b	105fc <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xac>
   105cc:	ldr	x0, [sp, #80]
   105d0:	str	x25, [x0, w1, uxtw #3]
   105d4:	ldp	w1, w0, [sp, #88]
   105d8:	mov	w2, w1
   105dc:	add	x2, x2, #0x1
   105e0:	cmp	x2, x0
   105e4:	b.hi	106b8 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x168>  // b.pmore
   105e8:	add	w1, w1, #0x1
   105ec:	str	w1, [sp, #88]
   105f0:	add	x19, x19, #0x4
   105f4:	cmp	x20, x19
   105f8:	b.eq	10688 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x138>  // b.none
   105fc:	ldr	w1, [x19]
   10600:	cmp	w1, w22
   10604:	b.cs	1063c <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xec>  // b.hs, b.nlast
   10608:	mov	x0, x21
   1060c:	bl	10160 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj>
   10610:	mov	x25, x0
   10614:	ldp	w1, w0, [sp, #88]
   10618:	cmp	w1, w0
   1061c:	b.cc	105cc <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x7c>  // b.lo, b.ul, b.last
   10620:	mov	x1, x24
   10624:	mov	x0, x23
   10628:	mov	x3, #0x8                   	// #8
   1062c:	mov	x2, #0x0                   	// #0
   10630:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10634:	ldr	w1, [sp, #88]
   10638:	b	105cc <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x7c>
   1063c:	ldr	x25, [sp, #64]
   10640:	mov	x22, #0x0                   	// #0
   10644:	ldr	x0, [sp, #80]
   10648:	add	x23, x23, #0x10
   1064c:	cmp	x0, x23
   10650:	b.eq	10670 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x120>  // b.none
   10654:	bl	0 <free>
   10658:	mov	x0, x22
   1065c:	ldp	x19, x20, [sp, #16]
   10660:	ldp	x21, x22, [sp, #32]
   10664:	ldp	x23, x24, [sp, #48]
   10668:	ldp	x29, x30, [sp], #224
   1066c:	ret
   10670:	mov	x0, x22
   10674:	ldp	x19, x20, [sp, #16]
   10678:	ldp	x21, x22, [sp, #32]
   1067c:	ldp	x23, x24, [sp, #48]
   10680:	ldp	x29, x30, [sp], #224
   10684:	ret
   10688:	ldr	x25, [sp, #64]
   1068c:	mov	w1, w1
   10690:	ldr	x0, [sp, #80]
   10694:	bl	58f8 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
   10698:	mov	x22, x0
   1069c:	b	10644 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xf4>
   106a0:	mov	x0, x23
   106a4:	mov	x3, #0x8                   	// #8
   106a8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   106ac:	b	105b4 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x64>
   106b0:	ldr	w1, [sp, #88]
   106b4:	b	1068c <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x13c>
   106b8:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   106bc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   106c0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   106c4:	add	x3, x3, #0x0
   106c8:	add	x1, x1, #0x0
   106cc:	add	x0, x0, #0x0
   106d0:	mov	w2, #0x43                  	// #67
   106d4:	bl	0 <__assert_fail>
   106d8:	stp	x19, x20, [sp, #16]
   106dc:	stp	x21, x22, [sp, #32]
   106e0:	stp	x23, x24, [sp, #48]
   106e4:	str	x25, [sp, #64]
   106e8:	bl	778 <_ZN4llvm13isa_impl_wrapINS_9BitsRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>
   106ec:	nop

00000000000106f0 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj>:
   106f0:	stp	x29, x30, [sp, #-96]!
   106f4:	mov	x29, sp
   106f8:	stp	x21, x22, [sp, #32]
   106fc:	adrp	x21, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10700:	stp	x23, x24, [sp, #48]
   10704:	add	x23, x21, #0x0
   10708:	add	x22, x23, #0x358
   1070c:	stp	x19, x20, [sp, #16]
   10710:	mov	x19, x0
   10714:	mov	w20, w1
   10718:	ldarb	w0, [x22]
   1071c:	tbz	w0, #0, 107e8 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0xf8>
   10720:	add	x0, x21, #0x0
   10724:	str	x19, [sp, #80]
   10728:	str	w20, [sp, #88]
   1072c:	ldr	w3, [x0, #888]
   10730:	cbz	w3, 10840 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x150>
   10734:	cmn	x19, #0x8
   10738:	b.eq	10898 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x1a8>  // b.none
   1073c:	cmn	x19, #0x10
   10740:	ccmn	w20, #0x2, #0x0, eq  // eq = none
   10744:	b.eq	108a0 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x1b0>  // b.none
   10748:	mov	w2, #0x25                  	// #37
   1074c:	lsr	w0, w19, #9
   10750:	eor	w0, w0, w19, lsr #4
   10754:	add	x1, x21, #0x0
   10758:	mul	w2, w20, w2
   1075c:	sub	w5, w3, #0x1
   10760:	mov	w7, #0x1                   	// #1
   10764:	mov	x22, #0x0                   	// #0
   10768:	ldr	x1, [x1, #872]
   1076c:	orr	x0, x2, x0, lsl #32
   10770:	sub	x0, x0, #0x1
   10774:	mov	w6, #0x18                  	// #24
   10778:	sub	x2, x0, x2, lsl #32
   1077c:	eor	x2, x2, x2, lsr #22
   10780:	sub	x0, x2, #0x1
   10784:	sub	x2, x0, x2, lsl #13
   10788:	eor	x2, x2, x2, lsr #8
   1078c:	add	x2, x2, x2, lsl #3
   10790:	eor	x2, x2, x2, lsr #15
   10794:	sub	x0, x2, #0x1
   10798:	sub	x2, x0, x2, lsl #27
   1079c:	eor	x2, x2, x2, lsr #31
   107a0:	and	w2, w5, w2
   107a4:	umull	x0, w2, w6
   107a8:	add	x4, x1, x0
   107ac:	ldr	x0, [x1, x0]
   107b0:	cmp	x19, x0
   107b4:	b.eq	108c0 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x1d0>  // b.none
   107b8:	cmn	x0, #0x8
   107bc:	b.eq	108e8 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x1f8>  // b.none
   107c0:	cmn	x0, #0x10
   107c4:	b.ne	107d8 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0xe8>  // b.any
   107c8:	ldr	w0, [x4, #8]
   107cc:	cmp	x22, #0x0
   107d0:	ccmn	w0, #0x2, #0x0, eq  // eq = none
   107d4:	csel	x22, x22, x4, ne  // ne = any
   107d8:	add	w2, w2, w7
   107dc:	add	w7, w7, #0x1
   107e0:	and	w2, w5, w2
   107e4:	b	107a4 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0xb4>
   107e8:	mov	x0, x22
   107ec:	bl	0 <__cxa_guard_acquire>
   107f0:	cbz	w0, 10720 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x30>
   107f4:	str	xzr, [x23, #864]
   107f8:	mov	x0, x22
   107fc:	str	xzr, [x23, #872]
   10800:	add	x24, x23, #0x360
   10804:	str	xzr, [x23, #880]
   10808:	str	wzr, [x23, #888]
   1080c:	bl	0 <__cxa_guard_release>
   10810:	mov	x1, x24
   10814:	adrp	x2, 0 <__dso_handle>
   10818:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   1081c:	add	x2, x2, #0x0
   10820:	add	x0, x0, #0x0
   10824:	bl	0 <__cxa_atexit>
   10828:	add	x0, x21, #0x0
   1082c:	str	x19, [sp, #80]
   10830:	str	w20, [sp, #88]
   10834:	ldr	w3, [x0, #888]
   10838:	cbnz	w3, 10734 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x44>
   1083c:	nop
   10840:	ldr	x2, [x0, #864]
   10844:	mov	w1, #0x0                   	// #0
   10848:	add	x2, x2, #0x1
   1084c:	str	x2, [x0, #864]
   10850:	add	x22, x21, #0x0
   10854:	add	x22, x22, #0x360
   10858:	mov	x0, x22
   1085c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10860:	mov	x0, x22
   10864:	add	x2, sp, #0x48
   10868:	add	x1, sp, #0x50
   1086c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10870:	ldr	x22, [sp, #72]
   10874:	cbnz	x22, 1093c <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x24c>
   10878:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   1087c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10880:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10884:	add	x3, x3, #0x0
   10888:	add	x1, x1, #0x0
   1088c:	add	x0, x0, #0x0
   10890:	mov	w2, #0x22f                 	// #559
   10894:	bl	0 <__assert_fail>
   10898:	cmn	w20, #0x1
   1089c:	b.ne	10748 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x58>  // b.any
   108a0:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   108a4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   108a8:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   108ac:	add	x3, x3, #0x0
   108b0:	add	x1, x1, #0x0
   108b4:	add	x0, x0, #0x0
   108b8:	mov	w2, #0x250                 	// #592
   108bc:	bl	0 <__assert_fail>
   108c0:	ldr	w8, [x4, #8]
   108c4:	cmp	w20, w8
   108c8:	b.ne	107b8 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0xc8>  // b.any
   108cc:	ldr	x0, [x4, #16]
   108d0:	cbz	x0, 10a04 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x314>
   108d4:	ldp	x19, x20, [sp, #16]
   108d8:	ldp	x21, x22, [sp, #32]
   108dc:	ldp	x23, x24, [sp, #48]
   108e0:	ldp	x29, x30, [sp], #96
   108e4:	ret
   108e8:	ldr	w0, [x4, #8]
   108ec:	cmn	w0, #0x1
   108f0:	b.ne	107d8 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0xe8>  // b.any
   108f4:	add	x2, x21, #0x0
   108f8:	cmp	x22, #0x0
   108fc:	csel	x22, x22, x4, ne  // ne = any
   10900:	lsl	w1, w3, #1
   10904:	add	w5, w1, w3
   10908:	add	x23, x2, #0x360
   1090c:	ldr	x4, [x2, #864]
   10910:	ldr	w0, [x23, #16]
   10914:	add	x4, x4, #0x1
   10918:	str	x4, [x2, #864]
   1091c:	add	w0, w0, #0x1
   10920:	cmp	w5, w0, lsl #2
   10924:	b.ls	10850 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x160>  // b.plast
   10928:	ldr	w1, [x23, #20]
   1092c:	sub	w1, w3, w1
   10930:	sub	w1, w1, w0
   10934:	cmp	w1, w3, lsr #3
   10938:	b.ls	109e0 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x2f0>  // b.plast
   1093c:	add	x0, x21, #0x0
   10940:	ldr	x2, [x22]
   10944:	ldr	w1, [x0, #880]
   10948:	cmn	x2, #0x8
   1094c:	add	w1, w1, #0x1
   10950:	str	w1, [x0, #880]
   10954:	b.eq	109d0 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x2e0>  // b.none
   10958:	add	x0, x21, #0x0
   1095c:	ldr	w1, [x0, #884]
   10960:	sub	w1, w1, #0x1
   10964:	str	w1, [x0, #884]
   10968:	ldr	w0, [sp, #88]
   1096c:	ldr	x1, [sp, #80]
   10970:	str	x1, [x22]
   10974:	str	w0, [x22, #8]
   10978:	str	xzr, [x22, #16]
   1097c:	add	x0, x21, #0x0
   10980:	mov	x1, #0x28                  	// #40
   10984:	add	x0, x0, #0x88
   10988:	mov	w2, #0x4                   	// #4
   1098c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10990:	ldr	x1, [x19, #16]
   10994:	cbz	x1, 10a2c <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x33c>
   10998:	ldr	w2, [x1, #8]
   1099c:	cmp	w2, #0x5
   109a0:	b.ne	10a0c <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x31c>  // b.any
   109a4:	adrp	x2, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   109a8:	mov	w4, #0x14                  	// #20
   109ac:	ldr	x3, [x1, #24]
   109b0:	strh	w4, [x0, #8]
   109b4:	ldr	x1, [x2]
   109b8:	stp	x3, x19, [x0, #16]
   109bc:	add	x1, x1, #0x10
   109c0:	str	x1, [x0]
   109c4:	str	w20, [x0, #32]
   109c8:	str	x0, [x22, #16]
   109cc:	b	108d4 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x1e4>
   109d0:	ldr	w0, [x22, #8]
   109d4:	cmn	w0, #0x1
   109d8:	b.ne	10958 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x268>  // b.any
   109dc:	b	10968 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x278>
   109e0:	mov	w1, w3
   109e4:	mov	x0, x23
   109e8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   109ec:	mov	x0, x23
   109f0:	add	x2, sp, #0x48
   109f4:	add	x1, sp, #0x50
   109f8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   109fc:	ldr	x22, [sp, #72]
   10a00:	b	10874 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x184>
   10a04:	mov	x22, x4
   10a08:	b	1097c <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x28c>
   10a0c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10a10:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10a14:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10a18:	add	x3, x3, #0x0
   10a1c:	add	x1, x1, #0x0
   10a20:	add	x0, x0, #0x0
   10a24:	mov	w2, #0x108                 	// #264
   10a28:	bl	0 <__assert_fail>
   10a2c:	bl	7a0 <_ZN4llvm13isa_impl_wrapINS_9ListRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>

0000000000010a30 <_ZNK4llvm18VarListElementInit17resolveReferencesERNS_8ResolverE>:
   10a30:	stp	x29, x30, [sp, #-32]!
   10a34:	mov	x29, sp
   10a38:	str	x19, [sp, #16]
   10a3c:	mov	x19, x0
   10a40:	ldr	x0, [x0, #24]
   10a44:	ldr	x2, [x0]
   10a48:	ldr	x2, [x2, #96]
   10a4c:	blr	x2
   10a50:	cbz	x0, 10ac4 <_ZNK4llvm18VarListElementInit17resolveReferencesERNS_8ResolverE+0x94>
   10a54:	ldrb	w1, [x0, #8]
   10a58:	mov	x2, x0
   10a5c:	cmp	w1, #0x9
   10a60:	b.eq	10a8c <_ZNK4llvm18VarListElementInit17resolveReferencesERNS_8ResolverE+0x5c>  // b.none
   10a64:	sub	w1, w1, #0x1
   10a68:	mov	x0, x19
   10a6c:	ldr	x3, [x19, #24]
   10a70:	and	w1, w1, #0xff
   10a74:	cmp	w1, #0x16
   10a78:	ccmp	x3, x2, #0x4, ls  // ls = plast
   10a7c:	b.ne	10ab0 <_ZNK4llvm18VarListElementInit17resolveReferencesERNS_8ResolverE+0x80>  // b.any
   10a80:	ldr	x19, [sp, #16]
   10a84:	ldp	x29, x30, [sp], #32
   10a88:	ret
   10a8c:	ldr	w3, [x0, #32]
   10a90:	ldr	w0, [x19, #32]
   10a94:	cmp	w3, w0
   10a98:	b.ls	10a64 <_ZNK4llvm18VarListElementInit17resolveReferencesERNS_8ResolverE+0x34>  // b.plast
   10a9c:	add	x0, x2, w0, uxtw #3
   10aa0:	ldr	x19, [sp, #16]
   10aa4:	ldp	x29, x30, [sp], #32
   10aa8:	ldr	x0, [x0, #40]
   10aac:	ret
   10ab0:	ldr	w1, [x19, #32]
   10ab4:	mov	x0, x2
   10ab8:	ldr	x19, [sp, #16]
   10abc:	ldp	x29, x30, [sp], #32
   10ac0:	b	106f0 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj>
   10ac4:	bl	9d8 <_ZN4llvm3isaINS_8ListInitEPNS_4InitEEEbRKT0_.isra.0.part.0>

0000000000010ac8 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE>:
   10ac8:	stp	x29, x30, [sp, #-160]!
   10acc:	mov	x29, sp
   10ad0:	stp	x23, x24, [sp, #48]
   10ad4:	ldr	x23, [x0, #16]
   10ad8:	stp	x19, x20, [sp, #16]
   10adc:	cbz	x23, 10c68 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0x1a0>
   10ae0:	mov	x19, x1
   10ae4:	ldr	w1, [x23, #8]
   10ae8:	mov	x24, #0x0                   	// #0
   10aec:	cmp	w1, #0x5
   10af0:	b.eq	10b08 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0x40>  // b.none
   10af4:	mov	x0, x24
   10af8:	ldp	x19, x20, [sp, #16]
   10afc:	ldp	x23, x24, [sp, #48]
   10b00:	ldp	x29, x30, [sp], #160
   10b04:	ret
   10b08:	mov	x20, x2
   10b0c:	cmp	x2, #0x1
   10b10:	b.eq	10c20 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0x158>  // b.none
   10b14:	stp	x21, x22, [sp, #32]
   10b18:	add	x22, sp, #0x50
   10b1c:	mov	x21, x0
   10b20:	add	x1, x22, #0x10
   10b24:	mov	x0, #0x800000000           	// #34359738368
   10b28:	stp	x1, x0, [sp, #80]
   10b2c:	cmp	x2, #0x8
   10b30:	b.hi	10c10 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0x148>  // b.pmore
   10b34:	add	x20, x19, x20, lsl #2
   10b38:	cmp	x19, x20
   10b3c:	b.eq	10c40 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0x178>  // b.none
   10b40:	add	x24, x22, #0x10
   10b44:	str	x25, [sp, #64]
   10b48:	ldr	w1, [x19]
   10b4c:	mov	x0, x21
   10b50:	bl	106f0 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj>
   10b54:	mov	x25, x0
   10b58:	ldp	w1, w0, [sp, #88]
   10b5c:	cmp	w1, w0
   10b60:	b.cs	10bdc <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0x114>  // b.hs, b.nlast
   10b64:	ldr	x0, [sp, #80]
   10b68:	str	x25, [x0, w1, uxtw #3]
   10b6c:	ldp	w1, w0, [sp, #88]
   10b70:	mov	w2, w1
   10b74:	add	x2, x2, #0x1
   10b78:	cmp	x2, x0
   10b7c:	b.hi	10c48 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0x180>  // b.pmore
   10b80:	add	w1, w1, #0x1
   10b84:	str	w1, [sp, #88]
   10b88:	add	x19, x19, #0x4
   10b8c:	cmp	x20, x19
   10b90:	b.ne	10b48 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0x80>  // b.any
   10b94:	ldr	x25, [sp, #64]
   10b98:	mov	w1, w1
   10b9c:	ldr	x2, [x23, #24]
   10ba0:	add	x22, x22, #0x10
   10ba4:	ldr	x0, [sp, #80]
   10ba8:	bl	50c0 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
   10bac:	mov	x24, x0
   10bb0:	ldr	x1, [sp, #80]
   10bb4:	cmp	x1, x22
   10bb8:	b.eq	10bf8 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0x130>  // b.none
   10bbc:	mov	x0, x1
   10bc0:	bl	0 <free>
   10bc4:	mov	x0, x24
   10bc8:	ldp	x19, x20, [sp, #16]
   10bcc:	ldp	x21, x22, [sp, #32]
   10bd0:	ldp	x23, x24, [sp, #48]
   10bd4:	ldp	x29, x30, [sp], #160
   10bd8:	ret
   10bdc:	mov	x1, x24
   10be0:	mov	x0, x22
   10be4:	mov	x3, #0x8                   	// #8
   10be8:	mov	x2, #0x0                   	// #0
   10bec:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10bf0:	ldr	w1, [sp, #88]
   10bf4:	b	10b64 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0x9c>
   10bf8:	mov	x0, x24
   10bfc:	ldp	x19, x20, [sp, #16]
   10c00:	ldp	x21, x22, [sp, #32]
   10c04:	ldp	x23, x24, [sp, #48]
   10c08:	ldp	x29, x30, [sp], #160
   10c0c:	ret
   10c10:	mov	x0, x22
   10c14:	mov	x3, #0x8                   	// #8
   10c18:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10c1c:	b	10b34 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0x6c>
   10c20:	ldr	w1, [x19]
   10c24:	bl	106f0 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj>
   10c28:	mov	x24, x0
   10c2c:	mov	x0, x24
   10c30:	ldp	x19, x20, [sp, #16]
   10c34:	ldp	x23, x24, [sp, #48]
   10c38:	ldp	x29, x30, [sp], #160
   10c3c:	ret
   10c40:	ldr	w1, [sp, #88]
   10c44:	b	10b98 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0xd0>
   10c48:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10c4c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10c50:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10c54:	add	x3, x3, #0x0
   10c58:	add	x1, x1, #0x0
   10c5c:	add	x0, x0, #0x0
   10c60:	mov	w2, #0x43                  	// #67
   10c64:	bl	0 <__assert_fail>
   10c68:	stp	x21, x22, [sp, #32]
   10c6c:	str	x25, [sp, #64]
   10c70:	bl	7a0 <_ZN4llvm13isa_impl_wrapINS_9ListRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>
   10c74:	nop

0000000000010c78 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE>:
   10c78:	stp	x29, x30, [sp, #-144]!
   10c7c:	mov	x29, sp
   10c80:	stp	x21, x22, [sp, #32]
   10c84:	adrp	x21, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10c88:	stp	x23, x24, [sp, #48]
   10c8c:	add	x23, x21, #0x0
   10c90:	add	x22, x23, #0x380
   10c94:	stp	x19, x20, [sp, #16]
   10c98:	mov	x19, x0
   10c9c:	mov	x20, x1
   10ca0:	ldarb	w0, [x22]
   10ca4:	tbz	w0, #0, 10d70 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0xf8>
   10ca8:	add	x0, x21, #0x0
   10cac:	stp	x19, x20, [sp, #64]
   10cb0:	ldr	w3, [x0, #928]
   10cb4:	cbz	w3, 10dc0 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x148>
   10cb8:	cmn	x19, #0x8
   10cbc:	b.eq	10e18 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x1a0>  // b.none
   10cc0:	cmn	x19, #0x10
   10cc4:	ccmn	x20, #0x10, #0x0, eq  // eq = none
   10cc8:	b.eq	10e20 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x1a8>  // b.none
   10ccc:	lsr	w2, w20, #9
   10cd0:	lsr	w0, w19, #9
   10cd4:	eor	w0, w0, w19, lsr #4
   10cd8:	add	x1, x21, #0x0
   10cdc:	eor	w2, w2, w20, lsr #4
   10ce0:	sub	w8, w3, #0x1
   10ce4:	orr	x0, x2, x0, lsl #32
   10ce8:	mov	w6, #0x1                   	// #1
   10cec:	sub	x0, x0, #0x1
   10cf0:	mov	x23, #0x0                   	// #0
   10cf4:	sub	x2, x0, x2, lsl #32
   10cf8:	mov	w5, #0x18                  	// #24
   10cfc:	ldr	x1, [x1, #912]
   10d00:	eor	x2, x2, x2, lsr #22
   10d04:	sub	x0, x2, #0x1
   10d08:	sub	x2, x0, x2, lsl #13
   10d0c:	eor	x2, x2, x2, lsr #8
   10d10:	add	x2, x2, x2, lsl #3
   10d14:	eor	x2, x2, x2, lsr #15
   10d18:	sub	x0, x2, #0x1
   10d1c:	sub	x2, x0, x2, lsl #27
   10d20:	eor	x2, x2, x2, lsr #31
   10d24:	and	w2, w8, w2
   10d28:	umull	x0, w2, w5
   10d2c:	add	x4, x1, x0
   10d30:	ldr	x0, [x1, x0]
   10d34:	cmp	x19, x0
   10d38:	b.eq	10e40 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x1c8>  // b.none
   10d3c:	cmn	x0, #0x8
   10d40:	b.eq	10e6c <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x1f4>  // b.none
   10d44:	cmn	x0, #0x10
   10d48:	b.ne	10d60 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0xe8>  // b.any
   10d4c:	ldr	x0, [x4, #8]
   10d50:	cmp	x23, #0x0
   10d54:	ccmn	x0, #0x10, #0x0, eq  // eq = none
   10d58:	csel	x23, x23, x4, ne  // ne = any
   10d5c:	nop
   10d60:	add	w2, w2, w6
   10d64:	add	w6, w6, #0x1
   10d68:	and	w2, w8, w2
   10d6c:	b	10d28 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0xb0>
   10d70:	mov	x0, x22
   10d74:	bl	0 <__cxa_guard_acquire>
   10d78:	cbz	w0, 10ca8 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x30>
   10d7c:	str	xzr, [x23, #904]
   10d80:	mov	x0, x22
   10d84:	str	xzr, [x23, #912]
   10d88:	add	x24, x23, #0x388
   10d8c:	str	xzr, [x23, #920]
   10d90:	str	wzr, [x23, #928]
   10d94:	bl	0 <__cxa_guard_release>
   10d98:	mov	x1, x24
   10d9c:	adrp	x2, 0 <__dso_handle>
   10da0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10da4:	add	x2, x2, #0x0
   10da8:	add	x0, x0, #0x0
   10dac:	bl	0 <__cxa_atexit>
   10db0:	add	x0, x21, #0x0
   10db4:	stp	x19, x20, [sp, #64]
   10db8:	ldr	w3, [x0, #928]
   10dbc:	cbnz	w3, 10cb8 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x40>
   10dc0:	ldr	x2, [x0, #904]
   10dc4:	mov	w1, #0x0                   	// #0
   10dc8:	add	x2, x2, #0x1
   10dcc:	str	x2, [x0, #904]
   10dd0:	add	x22, x21, #0x0
   10dd4:	add	x22, x22, #0x388
   10dd8:	mov	x0, x22
   10ddc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10de0:	mov	x0, x22
   10de4:	add	x2, sp, #0x70
   10de8:	add	x1, sp, #0x40
   10dec:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10df0:	ldr	x23, [sp, #112]
   10df4:	cbnz	x23, 10ec0 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x248>
   10df8:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10dfc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10e00:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10e04:	add	x3, x3, #0x0
   10e08:	add	x1, x1, #0x0
   10e0c:	add	x0, x0, #0x0
   10e10:	mov	w2, #0x22f                 	// #559
   10e14:	bl	0 <__assert_fail>
   10e18:	cmn	x20, #0x8
   10e1c:	b.ne	10ccc <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x54>  // b.any
   10e20:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10e24:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10e28:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10e2c:	add	x3, x3, #0x0
   10e30:	add	x1, x1, #0x0
   10e34:	add	x0, x0, #0x0
   10e38:	mov	w2, #0x250                 	// #592
   10e3c:	bl	0 <__assert_fail>
   10e40:	ldr	x7, [x4, #8]
   10e44:	cmp	x20, x7
   10e48:	b.ne	10d3c <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0xc4>  // b.any
   10e4c:	ldr	x22, [x4, #16]
   10e50:	cbz	x22, 10f68 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x2f0>
   10e54:	mov	x0, x22
   10e58:	ldp	x19, x20, [sp, #16]
   10e5c:	ldp	x21, x22, [sp, #32]
   10e60:	ldp	x23, x24, [sp, #48]
   10e64:	ldp	x29, x30, [sp], #144
   10e68:	ret
   10e6c:	ldr	x0, [x4, #8]
   10e70:	cmn	x0, #0x8
   10e74:	b.ne	10d60 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0xe8>  // b.any
   10e78:	add	x2, x21, #0x0
   10e7c:	cmp	x23, #0x0
   10e80:	csel	x23, x23, x4, ne  // ne = any
   10e84:	lsl	w1, w3, #1
   10e88:	add	w5, w1, w3
   10e8c:	add	x22, x2, #0x388
   10e90:	ldr	x4, [x2, #904]
   10e94:	ldr	w0, [x22, #16]
   10e98:	add	x4, x4, #0x1
   10e9c:	str	x4, [x2, #904]
   10ea0:	add	w0, w0, #0x1
   10ea4:	cmp	w5, w0, lsl #2
   10ea8:	b.ls	10dd0 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x158>  // b.plast
   10eac:	ldr	w1, [x22, #20]
   10eb0:	sub	w1, w3, w1
   10eb4:	sub	w1, w1, w0
   10eb8:	cmp	w1, w3, lsr #3
   10ebc:	b.ls	10f60 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x2e8>  // b.plast
   10ec0:	add	x0, x21, #0x0
   10ec4:	ldr	x2, [x23]
   10ec8:	ldr	w1, [x0, #920]
   10ecc:	cmn	x2, #0x8
   10ed0:	add	w1, w1, #0x1
   10ed4:	str	w1, [x0, #920]
   10ed8:	b.eq	10f50 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x2d8>  // b.none
   10edc:	add	x0, x21, #0x0
   10ee0:	ldr	w1, [x0, #924]
   10ee4:	sub	w1, w1, #0x1
   10ee8:	str	w1, [x0, #924]
   10eec:	ldp	x1, x0, [sp, #64]
   10ef0:	stp	x1, x0, [x23]
   10ef4:	str	xzr, [x23, #16]
   10ef8:	add	x0, x21, #0x0
   10efc:	mov	w2, #0x4                   	// #4
   10f00:	mov	x1, #0x28                  	// #40
   10f04:	add	x0, x0, #0x88
   10f08:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10f0c:	mov	x22, x0
   10f10:	ldr	x2, [x19]
   10f14:	mov	x1, x20
   10f18:	mov	x0, x19
   10f1c:	ldr	x2, [x2, #88]
   10f20:	blr	x2
   10f24:	stp	x0, x19, [x22, #16]
   10f28:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10f2c:	mov	w2, #0x7                   	// #7
   10f30:	strh	w2, [x22, #8]
   10f34:	ldr	x1, [x1]
   10f38:	str	x20, [x22, #32]
   10f3c:	add	x1, x1, #0x10
   10f40:	str	x1, [x22]
   10f44:	cbz	x0, 10f70 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x2f8>
   10f48:	str	x22, [x23, #16]
   10f4c:	b	10e54 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x1dc>
   10f50:	ldr	x0, [x23, #8]
   10f54:	cmn	x0, #0x8
   10f58:	b.ne	10edc <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x264>  // b.any
   10f5c:	b	10eec <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x274>
   10f60:	mov	w1, w3
   10f64:	b	10dd8 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x160>
   10f68:	mov	x23, x4
   10f6c:	b	10ef8 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x280>
   10f70:	bl	0 <_ZN4llvm4errsEv>
   10f74:	add	x20, sp, #0x50
   10f78:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10f7c:	add	x1, x1, #0x0
   10f80:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10f84:	mov	x21, x0
   10f88:	ldr	x1, [x22, #24]
   10f8c:	mov	x8, x20
   10f90:	add	x19, sp, #0x70
   10f94:	mov	x0, x1
   10f98:	ldr	x1, [x1]
   10f9c:	ldr	x1, [x1, #40]
   10fa0:	blr	x1
   10fa4:	ldp	x1, x2, [sp, #80]
   10fa8:	mov	x0, x21
   10fac:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   10fb0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10fb4:	add	x1, x1, #0x0
   10fb8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10fbc:	mov	x21, x0
   10fc0:	ldr	x1, [x22, #32]
   10fc4:	mov	x8, x19
   10fc8:	add	x19, x19, #0x10
   10fcc:	mov	x0, x1
   10fd0:	ldr	x1, [x1]
   10fd4:	ldr	x1, [x1, #40]
   10fd8:	blr	x1
   10fdc:	ldp	x1, x2, [sp, #112]
   10fe0:	mov	x0, x21
   10fe4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   10fe8:	ldr	x0, [sp, #112]
   10fec:	cmp	x0, x19
   10ff0:	b.eq	10ff8 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x380>  // b.none
   10ff4:	bl	0 <_ZdlPv>
   10ff8:	mov	x0, x21
   10ffc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   11000:	add	x1, x1, #0x0
   11004:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   11008:	ldr	x0, [sp, #80]
   1100c:	add	x20, x20, #0x10
   11010:	cmp	x0, x20
   11014:	b.eq	1101c <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x3a4>  // b.none
   11018:	bl	0 <_ZdlPv>
   1101c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   11020:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   11024:	add	x1, x1, #0x0
   11028:	add	x0, x0, #0x0
   1102c:	mov	w2, #0x4f7                 	// #1271
   11030:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   11034:	nop

0000000000011038 <_ZNK4llvm9FieldInit17resolveReferencesERNS_8ResolverE>:
   11038:	stp	x29, x30, [sp, #-32]!
   1103c:	mov	x29, sp
   11040:	stp	x19, x20, [sp, #16]
   11044:	mov	x19, x0
   11048:	mov	x20, x1
   1104c:	ldr	x0, [x0, #24]
   11050:	ldr	x2, [x0]
   11054:	ldr	x2, [x2, #96]
   11058:	blr	x2
   1105c:	ldr	x1, [x19, #24]
   11060:	cmp	x1, x0
   11064:	b.eq	11080 <_ZNK4llvm9FieldInit17resolveReferencesERNS_8ResolverE+0x48>  // b.none
   11068:	ldr	x1, [x19, #32]
   1106c:	bl	10c78 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE>
   11070:	ldr	x1, [x20, #8]
   11074:	ldp	x19, x20, [sp, #16]
   11078:	ldp	x29, x30, [sp], #32
   1107c:	b	7890 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE>
   11080:	mov	x0, x19
   11084:	ldp	x19, x20, [sp, #16]
   11088:	ldp	x29, x30, [sp], #32
   1108c:	ret

0000000000011090 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE>:
   11090:	stp	x29, x30, [sp, #-80]!
   11094:	mov	x29, sp
   11098:	ldr	w5, [x0, #48]
   1109c:	stp	x19, x20, [sp, #16]
   110a0:	mov	x20, x0
   110a4:	str	x1, [sp, #56]
   110a8:	ldr	x6, [x0, #32]
   110ac:	cbz	w5, 11108 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x78>
   110b0:	cmn	x1, #0x10
   110b4:	ccmn	x1, #0x8, #0x4, ne  // ne = any
   110b8:	b.eq	11374 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x2e4>  // b.none
   110bc:	lsr	w2, w1, #9
   110c0:	sub	w4, w5, #0x1
   110c4:	eor	w2, w2, w1, lsr #4
   110c8:	and	w2, w2, w4
   110cc:	lsl	w0, w2, #4
   110d0:	add	x3, x6, x0
   110d4:	ldr	x0, [x6, x0]
   110d8:	cmp	x1, x0
   110dc:	b.ne	110f8 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x68>  // b.any
   110e0:	ldr	x19, [x3, #8]
   110e4:	cbz	x19, 11108 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x78>
   110e8:	mov	x0, x19
   110ec:	ldp	x19, x20, [sp, #16]
   110f0:	ldp	x29, x30, [sp], #80
   110f4:	ret
   110f8:	mov	w3, #0x1                   	// #1
   110fc:	cmn	x0, #0x8
   11100:	b.ne	1130c <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x27c>  // b.any
   11104:	nop
   11108:	ldr	x2, [x20, #56]
   1110c:	ldr	w4, [x20, #64]
   11110:	add	x4, x2, x4, lsl #3
   11114:	cmp	x2, x4
   11118:	b.ne	1112c <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x9c>  // b.any
   1111c:	b	1114c <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0xbc>
   11120:	add	x2, x2, #0x8
   11124:	cmp	x4, x2
   11128:	b.eq	1114c <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0xbc>  // b.none
   1112c:	ldr	x3, [x2]
   11130:	cmp	x1, x3
   11134:	b.ne	11120 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x90>  // b.any
   11138:	mov	x19, #0x0                   	// #0
   1113c:	mov	x0, x19
   11140:	ldp	x19, x20, [sp, #16]
   11144:	ldp	x29, x30, [sp], #80
   11148:	ret
   1114c:	ldr	x0, [x20, #8]
   11150:	mov	w3, #0x18                  	// #24
   11154:	ldr	w4, [x0, #80]
   11158:	ldr	x2, [x0, #72]
   1115c:	str	x21, [sp, #32]
   11160:	umaddl	x4, w4, w3, x2
   11164:	cmp	x2, x4
   11168:	b.ne	1117c <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0xec>  // b.any
   1116c:	b	11284 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x1f4>
   11170:	add	x2, x2, #0x18
   11174:	cmp	x4, x2
   11178:	b.eq	11284 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x1f4>  // b.none
   1117c:	ldr	x3, [x2]
   11180:	cmp	x1, x3
   11184:	b.ne	11170 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0xe0>  // b.any
   11188:	ldr	x21, [x2, #16]
   1118c:	cbz	x21, 113e8 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x358>
   11190:	ldrb	w0, [x21, #8]
   11194:	mov	x19, #0x0                   	// #0
   11198:	cmp	w0, #0x18
   1119c:	b.ne	111f4 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x164>  // b.any
   111a0:	add	x21, x20, #0x18
   111a4:	cbz	w5, 11244 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x1b4>
   111a8:	ldr	x1, [sp, #56]
   111ac:	cmn	x1, #0x8
   111b0:	ccmn	x1, #0x10, #0x4, ne  // ne = any
   111b4:	b.eq	113b8 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x328>  // b.none
   111b8:	lsr	w2, w1, #9
   111bc:	sub	w7, w5, #0x1
   111c0:	eor	w2, w2, w1, lsr #4
   111c4:	and	w2, w2, w7
   111c8:	lsl	w4, w2, #4
   111cc:	add	x3, x6, x4
   111d0:	ldr	x4, [x6, x4]
   111d4:	cmp	x1, x4
   111d8:	b.ne	1128c <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x1fc>  // b.any
   111dc:	ldr	x21, [sp, #32]
   111e0:	str	x19, [x3, #8]
   111e4:	mov	x0, x19
   111e8:	ldp	x19, x20, [sp, #16]
   111ec:	ldp	x29, x30, [sp], #80
   111f0:	ret
   111f4:	add	x1, sp, #0x38
   111f8:	add	x0, x20, #0x38
   111fc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   11200:	ldr	x2, [x21]
   11204:	mov	x1, x20
   11208:	mov	x0, x21
   1120c:	ldr	x2, [x2, #96]
   11210:	blr	x2
   11214:	mov	x19, x0
   11218:	ldp	w1, w2, [x20, #64]
   1121c:	mov	w0, w1
   11220:	sub	x0, x0, #0x1
   11224:	cmp	x0, x2
   11228:	b.hi	113c8 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x338>  // b.pmore
   1122c:	ldr	w5, [x20, #48]
   11230:	sub	w1, w1, #0x1
   11234:	str	w1, [x20, #64]
   11238:	add	x21, x20, #0x18
   1123c:	ldr	x6, [x20, #32]
   11240:	cbnz	w5, 111a8 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x118>
   11244:	ldr	x0, [x20, #24]
   11248:	mov	w6, #0x0                   	// #0
   1124c:	add	x0, x0, #0x1
   11250:	str	x0, [x20, #24]
   11254:	mov	w1, w6
   11258:	mov	x0, x21
   1125c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   11260:	mov	x0, x21
   11264:	add	x2, sp, #0x48
   11268:	add	x1, sp, #0x38
   1126c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   11270:	ldr	x3, [sp, #72]
   11274:	cbz	x3, 11398 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x308>
   11278:	ldr	w4, [x20, #40]
   1127c:	ldr	x1, [sp, #56]
   11280:	b	112dc <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x24c>
   11284:	mov	x19, #0x0                   	// #0
   11288:	b	111a0 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x110>
   1128c:	mov	w8, #0x1                   	// #1
   11290:	mov	x0, #0x0                   	// #0
   11294:	cmn	x4, #0x8
   11298:	b.ne	11340 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x2b0>  // b.any
   1129c:	ldr	x2, [x20, #24]
   112a0:	lsl	w6, w5, #1
   112a4:	ldr	w4, [x20, #40]
   112a8:	cmp	x0, #0x0
   112ac:	add	x2, x2, #0x1
   112b0:	str	x2, [x20, #24]
   112b4:	add	w2, w4, #0x1
   112b8:	add	w7, w6, w5
   112bc:	csel	x3, x3, x0, eq  // eq = none
   112c0:	cmp	w7, w2, lsl #2
   112c4:	b.ls	11254 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x1c4>  // b.plast
   112c8:	ldr	w0, [x20, #44]
   112cc:	add	w2, w2, w0
   112d0:	sub	w2, w5, w2
   112d4:	cmp	w2, w5, lsr #3
   112d8:	b.ls	11338 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x2a8>  // b.plast
   112dc:	ldr	x2, [x3]
   112e0:	add	w0, w4, #0x1
   112e4:	str	w0, [x20, #40]
   112e8:	cmn	x2, #0x8
   112ec:	b.eq	112fc <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x26c>  // b.none
   112f0:	ldr	w0, [x20, #44]
   112f4:	sub	w0, w0, #0x1
   112f8:	str	w0, [x20, #44]
   112fc:	stp	x1, xzr, [x3]
   11300:	ldr	x21, [sp, #32]
   11304:	str	x19, [x3, #8]
   11308:	b	111e4 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x154>
   1130c:	add	w2, w3, w2
   11310:	add	w7, w3, #0x1
   11314:	and	w0, w4, w2
   11318:	and	w2, w4, w2
   1131c:	lsl	x0, x0, #4
   11320:	add	x3, x6, x0
   11324:	ldr	x0, [x6, x0]
   11328:	cmp	x1, x0
   1132c:	b.eq	110e0 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x50>  // b.none
   11330:	mov	w3, w7
   11334:	b	110fc <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x6c>
   11338:	mov	w1, w5
   1133c:	b	11258 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x1c8>
   11340:	add	w2, w2, w8
   11344:	cmp	x0, #0x0
   11348:	and	w9, w7, w2
   1134c:	ccmn	x4, #0x10, #0x0, eq  // eq = none
   11350:	csel	x0, x0, x3, ne  // ne = any
   11354:	add	w8, w8, #0x1
   11358:	lsl	x4, x9, #4
   1135c:	and	w2, w7, w2
   11360:	add	x3, x6, x4
   11364:	ldr	x4, [x6, x4]
   11368:	cmp	x1, x4
   1136c:	b.eq	111dc <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x14c>  // b.none
   11370:	b	11294 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x204>
   11374:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   11378:	add	x3, x3, #0x0
   1137c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   11380:	str	x21, [sp, #32]
   11384:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   11388:	add	x1, x1, #0x0
   1138c:	add	x0, x0, #0x0
   11390:	mov	w2, #0x250                 	// #592
   11394:	bl	0 <__assert_fail>
   11398:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   1139c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   113a0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   113a4:	add	x3, x3, #0x0
   113a8:	add	x1, x1, #0x0
   113ac:	add	x0, x0, #0x0
   113b0:	mov	w2, #0x22f                 	// #559
   113b4:	bl	0 <__assert_fail>
   113b8:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   113bc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   113c0:	add	x3, x3, #0x0
   113c4:	b	11384 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x2f4>
   113c8:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   113cc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   113d0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   113d4:	add	x3, x3, #0x0
   113d8:	add	x1, x1, #0x0
   113dc:	add	x0, x0, #0x0
   113e0:	mov	w2, #0x43                  	// #67
   113e4:	bl	0 <__assert_fail>
   113e8:	bl	808 <_ZN4llvm3isaINS_9UnsetInitEPNS_4InitEEEbRKT0_.isra.0.part.0>

Disassembly of section .text._ZNK4llvm4Init10isCompleteEv:

0000000000000000 <_ZNK4llvm4Init10isCompleteEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm4Init10isConcreteEv:

0000000000000000 <_ZNK4llvm4Init10isConcreteEv>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm4Init19getAsUnquotedStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm4Init19getAsUnquotedStringB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	ldr	x1, [x0]
   c:	ldr	x1, [x1, #40]
  10:	str	x19, [sp, #16]
  14:	mov	x19, x8
  18:	blr	x1
  1c:	mov	x0, x19
  20:	ldr	x19, [sp, #16]
  24:	ldp	x29, x30, [sp], #32
  28:	ret

Disassembly of section .text._ZNK4llvm4Init26convertInitializerBitRangeENS_8ArrayRefIjEE:

0000000000000000 <_ZNK4llvm4Init26convertInitializerBitRangeENS_8ArrayRefIjEE>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm4Init20convertInitListSliceENS_8ArrayRefIjEE:

0000000000000000 <_ZNK4llvm4Init20convertInitListSliceENS_8ArrayRefIjEE>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm4Init12getFieldTypeEPNS_10StringInitE:

0000000000000000 <_ZNK4llvm4Init12getFieldTypeEPNS_10StringInitE>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm4Init17resolveReferencesERNS_8ResolverE:

0000000000000000 <_ZNK4llvm4Init17resolveReferencesERNS_8ResolverE>:
   0:	ret

Disassembly of section .text._ZNK4llvm9UnsetInit6getBitEj:

0000000000000000 <_ZNK4llvm9UnsetInit6getBitEj>:
   0:	ret

Disassembly of section .text._ZNK4llvm9UnsetInit10isCompleteEv:

0000000000000000 <_ZNK4llvm9UnsetInit10isCompleteEv>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm9UnsetInit10isConcreteEv:

0000000000000000 <_ZNK4llvm9UnsetInit10isConcreteEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm7BitInit10isConcreteEv:

0000000000000000 <_ZNK4llvm7BitInit10isConcreteEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm7IntInit10isConcreteEv:

0000000000000000 <_ZNK4llvm7IntInit10isConcreteEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm10StringInit10isConcreteEv:

0000000000000000 <_ZNK4llvm10StringInit10isConcreteEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm8CodeInit10isConcreteEv:

0000000000000000 <_ZNK4llvm8CodeInit10isConcreteEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm8UnOpInit14getNumOperandsEv:

0000000000000000 <_ZNK4llvm8UnOpInit14getNumOperandsEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm9BinOpInit14getNumOperandsEv:

0000000000000000 <_ZNK4llvm9BinOpInit14getNumOperandsEv>:
   0:	mov	w0, #0x2                   	// #2
   4:	ret

Disassembly of section .text._ZNK4llvm10TernOpInit14getNumOperandsEv:

0000000000000000 <_ZNK4llvm10TernOpInit14getNumOperandsEv>:
   0:	mov	w0, #0x3                   	// #3
   4:	ret

Disassembly of section .text._ZNK4llvm10FoldOpInit10isCompleteEv:

0000000000000000 <_ZNK4llvm10FoldOpInit10isCompleteEv>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm9IsAOpInit10isCompleteEv:

0000000000000000 <_ZNK4llvm9IsAOpInit10isCompleteEv>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm7DefInit10isConcreteEv:

0000000000000000 <_ZNK4llvm7DefInit10isConcreteEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm8Resolver13keepUnsetBitsEv:

0000000000000000 <_ZNK4llvm8Resolver13keepUnsetBitsEv>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm14RecordResolver13keepUnsetBitsEv:

0000000000000000 <_ZNK4llvm14RecordResolver13keepUnsetBitsEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZN4llvm17RecordValResolver7resolveEPNS_4InitE:

0000000000000000 <_ZN4llvm17RecordValResolver7resolveEPNS_4InitE>:
   0:	ldr	x0, [x0, #24]
   4:	ldr	x2, [x0]
   8:	cmp	x2, x1
   c:	b.ne	18 <_ZN4llvm17RecordValResolver7resolveEPNS_4InitE+0x18>  // b.any
  10:	ldr	x0, [x0, #16]
  14:	ret
  18:	mov	x0, #0x0                   	// #0
  1c:	ret

Disassembly of section .text._ZN4llvm20HasReferenceResolverD2Ev:

0000000000000000 <_ZN4llvm20HasReferenceResolverD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm23TrackUnresolvedResolverD2Ev:

0000000000000000 <_ZN4llvm23TrackUnresolvedResolverD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm7DagInitD2Ev:

0000000000000000 <_ZN4llvm7DagInitD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm10CondOpInitD2Ev:

0000000000000000 <_ZN4llvm10CondOpInitD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm9FieldInitD2Ev:

0000000000000000 <_ZN4llvm9FieldInitD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm10VarDefInitD2Ev:

0000000000000000 <_ZN4llvm10VarDefInitD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm7DefInitD2Ev:

0000000000000000 <_ZN4llvm7DefInitD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm18VarListElementInitD2Ev:

0000000000000000 <_ZN4llvm18VarListElementInitD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm10VarBitInitD2Ev:

0000000000000000 <_ZN4llvm10VarBitInitD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm7VarInitD2Ev:

0000000000000000 <_ZN4llvm7VarInitD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm9IsAOpInitD2Ev:

0000000000000000 <_ZN4llvm9IsAOpInitD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm10FoldOpInitD2Ev:

0000000000000000 <_ZN4llvm10FoldOpInitD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm10TernOpInitD2Ev:

0000000000000000 <_ZN4llvm10TernOpInitD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm9BinOpInitD2Ev:

0000000000000000 <_ZN4llvm9BinOpInitD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm8UnOpInitD2Ev:

0000000000000000 <_ZN4llvm8UnOpInitD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm8ListInitD2Ev:

0000000000000000 <_ZN4llvm8ListInitD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm8CodeInitD2Ev:

0000000000000000 <_ZN4llvm8CodeInitD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm10StringInitD2Ev:

0000000000000000 <_ZN4llvm10StringInitD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm7IntInitD2Ev:

0000000000000000 <_ZN4llvm7IntInitD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm8BitsInitD2Ev:

0000000000000000 <_ZN4llvm8BitsInitD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm7BitInitD2Ev:

0000000000000000 <_ZN4llvm7BitInitD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm9UnsetInitD2Ev:

0000000000000000 <_ZN4llvm9UnsetInitD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm11RecordRecTyD2Ev:

0000000000000000 <_ZN4llvm11RecordRecTyD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm8DagRecTyD2Ev:

0000000000000000 <_ZN4llvm8DagRecTyD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm9ListRecTyD2Ev:

0000000000000000 <_ZN4llvm9ListRecTyD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm11StringRecTyD2Ev:

0000000000000000 <_ZN4llvm11StringRecTyD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm9CodeRecTyD2Ev:

0000000000000000 <_ZN4llvm9CodeRecTyD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm8IntRecTyD2Ev:

0000000000000000 <_ZN4llvm8IntRecTyD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm9BitsRecTyD2Ev:

0000000000000000 <_ZN4llvm9BitsRecTyD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm8BitRecTyD2Ev:

0000000000000000 <_ZN4llvm8BitRecTyD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm17RecordValResolverD2Ev:

0000000000000000 <_ZN4llvm17RecordValResolverD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm11RecordRecTyD0Ev:

0000000000000000 <_ZN4llvm11RecordRecTyD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm8BitsInitD0Ev:

0000000000000000 <_ZN4llvm8BitsInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm8ListInitD0Ev:

0000000000000000 <_ZN4llvm8ListInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm10VarDefInitD0Ev:

0000000000000000 <_ZN4llvm10VarDefInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EED2Ev:

0000000000000000 <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EED1Ev>:
   0:	ldr	x0, [x0]
   4:	cbz	x0, c <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EED1Ev+0xc>
   8:	b	0 <_ZdlPv>
   c:	ret

Disassembly of section .text._ZNK4llvm10VarBitInit6getBitEj:

0000000000000000 <_ZNK4llvm10VarBitInit6getBitEj>:
   0:	cbnz	w1, 8 <_ZNK4llvm10VarBitInit6getBitEj+0x8>
   4:	ret
   8:	stp	x29, x30, [sp, #-16]!
   c:	adrp	x3, 0 <_ZNK4llvm10VarBitInit6getBitEj>
  10:	adrp	x1, 0 <_ZNK4llvm10VarBitInit6getBitEj>
  14:	mov	x29, sp
  18:	adrp	x0, 0 <_ZNK4llvm10VarBitInit6getBitEj>
  1c:	add	x3, x3, #0x0
  20:	add	x1, x1, #0x0
  24:	add	x0, x0, #0x0
  28:	mov	w2, #0x46f                 	// #1135
  2c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm7BitInit6getBitEj:

0000000000000000 <_ZNK4llvm7BitInit6getBitEj>:
   0:	cbnz	w1, 8 <_ZNK4llvm7BitInit6getBitEj+0x8>
   4:	ret
   8:	stp	x29, x30, [sp, #-16]!
   c:	adrp	x3, 0 <_ZNK4llvm7BitInit6getBitEj>
  10:	adrp	x1, 0 <_ZNK4llvm7BitInit6getBitEj>
  14:	mov	x29, sp
  18:	adrp	x0, 0 <_ZNK4llvm7BitInit6getBitEj>
  1c:	add	x3, x3, #0x0
  20:	add	x1, x1, #0x0
  24:	add	x0, x0, #0x0
  28:	mov	w2, #0x1f7                 	// #503
  2c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8UnOpInit10getOperandEj:

0000000000000000 <_ZNK4llvm8UnOpInit10getOperandEj>:
   0:	cbnz	w1, c <_ZNK4llvm8UnOpInit10getOperandEj+0xc>
   4:	ldr	x0, [x0, #32]
   8:	ret
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZNK4llvm8UnOpInit10getOperandEj>
  14:	adrp	x1, 0 <_ZNK4llvm8UnOpInit10getOperandEj>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZNK4llvm8UnOpInit10getOperandEj>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x310                 	// #784
  30:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8BitsInit6getBitEj:

0000000000000000 <_ZNK4llvm8BitsInit6getBitEj>:
   0:	ldr	w2, [x0, #32]
   4:	cmp	w2, w1
   8:	b.ls	18 <_ZNK4llvm8BitsInit6getBitEj+0x18>  // b.plast
   c:	add	x1, x0, w1, uxtw #3
  10:	ldr	x0, [x1, #40]
  14:	ret
  18:	stp	x29, x30, [sp, #-16]!
  1c:	adrp	x3, 0 <_ZNK4llvm8BitsInit6getBitEj>
  20:	adrp	x1, 0 <_ZNK4llvm8BitsInit6getBitEj>
  24:	mov	x29, sp
  28:	adrp	x0, 0 <_ZNK4llvm8BitsInit6getBitEj>
  2c:	add	x3, x3, #0x0
  30:	add	x1, x1, #0x0
  34:	add	x0, x0, #0x0
  38:	mov	w2, #0x22e                 	// #558
  3c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9StringSetIRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEED2Ev:

0000000000000000 <_ZN4llvm9StringSetIRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEED1Ev>:
   0:	ldr	x0, [x0]
   4:	b	0 <free>

Disassembly of section .text._ZN4llvm9StringMapIPNS_10StringInitERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEED2Ev:

0000000000000000 <_ZN4llvm9StringMapIPNS_10StringInitERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEED1Ev>:
   0:	ldr	x0, [x0]
   4:	b	0 <free>

Disassembly of section .text._ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED2Ev:

0000000000000000 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED1Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	ldr	w20, [x0, #24]
  10:	ldr	x19, [x0, #16]
  14:	str	x21, [sp, #32]
  18:	mov	x21, x0
  1c:	add	x20, x19, x20, lsl #3
  20:	cmp	x19, x20
  24:	b.eq	38 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED1Ev+0x38>  // b.none
  28:	ldr	x0, [x19], #8
  2c:	bl	0 <free>
  30:	cmp	x20, x19
  34:	b.ne	28 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED1Ev+0x28>  // b.any
  38:	ldr	x19, [x21, #64]
  3c:	ldr	w20, [x21, #72]
  40:	add	x20, x19, x20, lsl #4
  44:	cmp	x19, x20
  48:	b.eq	64 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED1Ev+0x64>  // b.none
  4c:	nop
  50:	ldr	x0, [x19], #16
  54:	bl	0 <free>
  58:	cmp	x20, x19
  5c:	b.ne	50 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED1Ev+0x50>  // b.any
  60:	ldr	x20, [x21, #64]
  64:	add	x0, x21, #0x50
  68:	cmp	x20, x0
  6c:	b.eq	78 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED1Ev+0x78>  // b.none
  70:	mov	x0, x20
  74:	bl	0 <free>
  78:	ldr	x0, [x21, #16]
  7c:	add	x21, x21, #0x20
  80:	cmp	x0, x21
  84:	b.eq	98 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED1Ev+0x98>  // b.none
  88:	ldp	x19, x20, [sp, #16]
  8c:	ldr	x21, [sp, #32]
  90:	ldp	x29, x30, [sp], #48
  94:	b	0 <free>
  98:	ldp	x19, x20, [sp, #16]
  9c:	ldr	x21, [sp, #32]
  a0:	ldp	x29, x30, [sp], #48
  a4:	ret

Disassembly of section .text._ZN4llvm8DagRecTyD0Ev:

0000000000000000 <_ZN4llvm8DagRecTyD0Ev>:
   0:	mov	x1, #0x18                  	// #24
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm9ListRecTyD0Ev:

0000000000000000 <_ZN4llvm9ListRecTyD0Ev>:
   0:	mov	x1, #0x20                  	// #32
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm11StringRecTyD0Ev:

0000000000000000 <_ZN4llvm11StringRecTyD0Ev>:
   0:	mov	x1, #0x18                  	// #24
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm9CodeRecTyD0Ev:

0000000000000000 <_ZN4llvm9CodeRecTyD0Ev>:
   0:	mov	x1, #0x18                  	// #24
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm8IntRecTyD0Ev:

0000000000000000 <_ZN4llvm8IntRecTyD0Ev>:
   0:	mov	x1, #0x18                  	// #24
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm9BitsRecTyD0Ev:

0000000000000000 <_ZN4llvm9BitsRecTyD0Ev>:
   0:	mov	x1, #0x20                  	// #32
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm8BitRecTyD0Ev:

0000000000000000 <_ZN4llvm8BitRecTyD0Ev>:
   0:	mov	x1, #0x18                  	// #24
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm9UnsetInitD0Ev:

0000000000000000 <_ZN4llvm9UnsetInitD0Ev>:
   0:	mov	x1, #0x10                  	// #16
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm7BitInitD0Ev:

0000000000000000 <_ZN4llvm7BitInitD0Ev>:
   0:	mov	x1, #0x20                  	// #32
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm7DagInitD0Ev:

0000000000000000 <_ZN4llvm7DagInitD0Ev>:
   0:	mov	x1, #0x38                  	// #56
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm10CondOpInitD0Ev:

0000000000000000 <_ZN4llvm10CondOpInitD0Ev>:
   0:	mov	x1, #0x30                  	// #48
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm9FieldInitD0Ev:

0000000000000000 <_ZN4llvm9FieldInitD0Ev>:
   0:	mov	x1, #0x28                  	// #40
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm7DefInitD0Ev:

0000000000000000 <_ZN4llvm7DefInitD0Ev>:
   0:	mov	x1, #0x20                  	// #32
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm18VarListElementInitD0Ev:

0000000000000000 <_ZN4llvm18VarListElementInitD0Ev>:
   0:	mov	x1, #0x28                  	// #40
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm10VarBitInitD0Ev:

0000000000000000 <_ZN4llvm10VarBitInitD0Ev>:
   0:	mov	x1, #0x28                  	// #40
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm7VarInitD0Ev:

0000000000000000 <_ZN4llvm7VarInitD0Ev>:
   0:	mov	x1, #0x20                  	// #32
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm9IsAOpInitD0Ev:

0000000000000000 <_ZN4llvm9IsAOpInitD0Ev>:
   0:	mov	x1, #0x30                  	// #48
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm10FoldOpInitD0Ev:

0000000000000000 <_ZN4llvm10FoldOpInitD0Ev>:
   0:	mov	x1, #0x48                  	// #72
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm8CodeInitD0Ev:

0000000000000000 <_ZN4llvm8CodeInitD0Ev>:
   0:	mov	x1, #0x30                  	// #48
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm10StringInitD0Ev:

0000000000000000 <_ZN4llvm10StringInitD0Ev>:
   0:	mov	x1, #0x28                  	// #40
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm7IntInitD0Ev:

0000000000000000 <_ZN4llvm7IntInitD0Ev>:
   0:	mov	x1, #0x20                  	// #32
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm10TernOpInitD0Ev:

0000000000000000 <_ZN4llvm10TernOpInitD0Ev>:
   0:	mov	x1, #0x38                  	// #56
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm9BinOpInitD0Ev:

0000000000000000 <_ZN4llvm9BinOpInitD0Ev>:
   0:	mov	x1, #0x30                  	// #48
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm8UnOpInitD0Ev:

0000000000000000 <_ZN4llvm8UnOpInitD0Ev>:
   0:	mov	x1, #0x28                  	// #40
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm23TrackUnresolvedResolverD0Ev:

0000000000000000 <_ZN4llvm23TrackUnresolvedResolverD0Ev>:
   0:	mov	x1, #0x28                  	// #40
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm17RecordValResolverD0Ev:

0000000000000000 <_ZN4llvm17RecordValResolverD0Ev>:
   0:	mov	x1, #0x20                  	// #32
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm20HasReferenceResolverD0Ev:

0000000000000000 <_ZN4llvm20HasReferenceResolverD0Ev>:
   0:	mov	x1, #0x28                  	// #40
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm11MapResolverD2Ev:

0000000000000000 <_ZN4llvm11MapResolverD1Ev>:
   0:	adrp	x2, 0 <_ZN4llvm11MapResolverD1Ev>
   4:	mov	w1, #0x18                  	// #24
   8:	ldr	x2, [x2]
   c:	add	x2, x2, #0x10
  10:	str	x2, [x0], #24
  14:	ldr	w2, [x0, #24]
  18:	ldr	x0, [x0, #8]
  1c:	umull	x1, w2, w1
  20:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm11MapResolverD0Ev:

0000000000000000 <_ZN4llvm11MapResolverD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x2, 0 <_ZN4llvm11MapResolverD0Ev>
   8:	mov	w1, #0x18                  	// #24
   c:	mov	x29, sp
  10:	ldr	x2, [x2]
  14:	str	x19, [sp, #16]
  18:	mov	x19, x0
  1c:	add	x2, x2, #0x10
  20:	str	x2, [x0], #24
  24:	ldr	w2, [x0, #24]
  28:	ldr	x0, [x0, #8]
  2c:	umull	x1, w2, w1
  30:	bl	0 <_ZdlPvm>
  34:	mov	x0, x19
  38:	mov	x1, #0x38                  	// #56
  3c:	ldr	x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm14RecordResolverD2Ev:

0000000000000000 <_ZN4llvm14RecordResolverD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN4llvm14RecordResolverD1Ev>
   8:	add	x2, x0, #0x48
   c:	mov	x29, sp
  10:	ldr	x1, [x1]
  14:	str	x19, [sp, #16]
  18:	mov	x19, x0
  1c:	ldr	x0, [x0, #56]
  20:	add	x1, x1, #0x10
  24:	str	x1, [x19]
  28:	cmp	x0, x2
  2c:	b.eq	34 <_ZN4llvm14RecordResolverD1Ev+0x34>  // b.none
  30:	bl	0 <free>
  34:	ldr	w1, [x19, #48]
  38:	ldr	x0, [x19, #32]
  3c:	ldr	x19, [sp, #16]
  40:	lsl	x1, x1, #4
  44:	ldp	x29, x30, [sp], #32
  48:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm14ShadowResolverD2Ev:

0000000000000000 <_ZN4llvm14ShadowResolverD1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm14ShadowResolverD1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0], #32
  10:	ldr	w1, [x0, #24]
  14:	ldr	x0, [x0, #8]
  18:	lsl	x1, x1, #3
  1c:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm14ShadowResolverD0Ev:

0000000000000000 <_ZN4llvm14ShadowResolverD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN4llvm14ShadowResolverD0Ev>
   8:	mov	x2, x0
   c:	mov	x29, sp
  10:	ldr	x1, [x1]
  14:	str	x19, [sp, #16]
  18:	mov	x19, x0
  1c:	add	x1, x1, #0x10
  20:	str	x1, [x2], #32
  24:	ldr	x0, [x2, #8]
  28:	ldr	w1, [x2, #24]
  2c:	lsl	x1, x1, #3
  30:	bl	0 <_ZdlPvm>
  34:	mov	x0, x19
  38:	mov	x1, #0x40                  	// #64
  3c:	ldr	x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEED2Ev:

0000000000000000 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEED1Ev>:
   0:	ldr	w2, [x0, #24]
   4:	mov	w1, #0x18                  	// #24
   8:	ldr	x0, [x0, #8]
   c:	umull	x1, w2, w1
  10:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEED2Ev:

0000000000000000 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEED1Ev>:
   0:	ldr	w2, [x0, #24]
   4:	mov	w1, #0x18                  	// #24
   8:	ldr	x0, [x0, #8]
   c:	umull	x1, w2, w1
  10:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEED2Ev:

0000000000000000 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEED1Ev>:
   0:	ldr	w2, [x0, #24]
   4:	mov	w1, #0x18                  	// #24
   8:	ldr	x0, [x0, #8]
   c:	umull	x1, w2, w1
  10:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEED2Ev:

0000000000000000 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEED1Ev>:
   0:	ldr	w2, [x0, #24]
   4:	mov	w1, #0x18                  	// #24
   8:	ldr	x0, [x0, #8]
   c:	umull	x1, w2, w1
  10:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm10FoldingSetINS_8BitsInitEED2Ev:

0000000000000000 <_ZN4llvm10FoldingSetINS_8BitsInitEED1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm10FoldingSetINS_8BitsInitEED1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0]
  10:	b	0 <_ZN4llvm14FoldingSetBaseD2Ev>

Disassembly of section .text._ZN4llvm10FoldingSetINS_8ListInitEED2Ev:

0000000000000000 <_ZN4llvm10FoldingSetINS_8ListInitEED1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm10FoldingSetINS_8ListInitEED1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0]
  10:	b	0 <_ZN4llvm14FoldingSetBaseD2Ev>

Disassembly of section .text._ZN4llvm10FoldingSetINS_8UnOpInitEED2Ev:

0000000000000000 <_ZN4llvm10FoldingSetINS_8UnOpInitEED1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm10FoldingSetINS_8UnOpInitEED1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0]
  10:	b	0 <_ZN4llvm14FoldingSetBaseD2Ev>

Disassembly of section .text._ZN4llvm10FoldingSetINS_9BinOpInitEED2Ev:

0000000000000000 <_ZN4llvm10FoldingSetINS_9BinOpInitEED1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm10FoldingSetINS_9BinOpInitEED1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0]
  10:	b	0 <_ZN4llvm14FoldingSetBaseD2Ev>

Disassembly of section .text._ZN4llvm10FoldingSetINS_10TernOpInitEED2Ev:

0000000000000000 <_ZN4llvm10FoldingSetINS_10TernOpInitEED1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm10FoldingSetINS_10TernOpInitEED1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0]
  10:	b	0 <_ZN4llvm14FoldingSetBaseD2Ev>

Disassembly of section .text._ZN4llvm10FoldingSetINS_10FoldOpInitEED2Ev:

0000000000000000 <_ZN4llvm10FoldingSetINS_10FoldOpInitEED1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm10FoldingSetINS_10FoldOpInitEED1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0]
  10:	b	0 <_ZN4llvm14FoldingSetBaseD2Ev>

Disassembly of section .text._ZN4llvm10FoldingSetINS_9IsAOpInitEED2Ev:

0000000000000000 <_ZN4llvm10FoldingSetINS_9IsAOpInitEED1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm10FoldingSetINS_9IsAOpInitEED1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0]
  10:	b	0 <_ZN4llvm14FoldingSetBaseD2Ev>

Disassembly of section .text._ZN4llvm10FoldingSetINS_10VarDefInitEED2Ev:

0000000000000000 <_ZN4llvm10FoldingSetINS_10VarDefInitEED1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm10FoldingSetINS_10VarDefInitEED1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0]
  10:	b	0 <_ZN4llvm14FoldingSetBaseD2Ev>

Disassembly of section .text._ZN4llvm10FoldingSetINS_10CondOpInitEED2Ev:

0000000000000000 <_ZN4llvm10FoldingSetINS_10CondOpInitEED1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm10FoldingSetINS_10CondOpInitEED1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0]
  10:	b	0 <_ZN4llvm14FoldingSetBaseD2Ev>

Disassembly of section .text._ZN4llvm10FoldingSetINS_7DagInitEED2Ev:

0000000000000000 <_ZN4llvm10FoldingSetINS_7DagInitEED1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm10FoldingSetINS_7DagInitEED1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0]
  10:	b	0 <_ZN4llvm14FoldingSetBaseD2Ev>

Disassembly of section .text._ZNK4llvm7DagInit6getBitEj:

0000000000000000 <_ZNK4llvm7DagInit6getBitEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	adrp	x1, 0 <_ZNK4llvm7DagInit6getBitEj>
   8:	adrp	x0, 0 <_ZNK4llvm7DagInit6getBitEj>
   c:	mov	x29, sp
  10:	add	x1, x1, #0x0
  14:	add	x0, x0, #0x0
  18:	mov	w2, #0x56b                 	// #1387
  1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZNK4llvm10VarDefInit6getBitEj:

0000000000000000 <_ZNK4llvm10VarDefInit6getBitEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	adrp	x1, 0 <_ZNK4llvm10VarDefInit6getBitEj>
   8:	adrp	x0, 0 <_ZNK4llvm10VarDefInit6getBitEj>
   c:	mov	x29, sp
  10:	add	x1, x1, #0x0
  14:	add	x0, x0, #0x0
  18:	mov	w2, #0x4e7                 	// #1255
  1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZNK4llvm7DefInit6getBitEj:

0000000000000000 <_ZNK4llvm7DefInit6getBitEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	adrp	x1, 0 <_ZNK4llvm7DefInit6getBitEj>
   8:	adrp	x0, 0 <_ZNK4llvm7DefInit6getBitEj>
   c:	mov	x29, sp
  10:	add	x1, x1, #0x0
  14:	add	x0, x0, #0x0
  18:	mov	w2, #0x4b3                 	// #1203
  1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZNK4llvm8ListInit6getBitEj:

0000000000000000 <_ZNK4llvm8ListInit6getBitEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	adrp	x1, 0 <_ZNK4llvm8ListInit6getBitEj>
   8:	adrp	x0, 0 <_ZNK4llvm8ListInit6getBitEj>
   c:	mov	x29, sp
  10:	add	x1, x1, #0x0
  14:	add	x0, x0, #0x0
  18:	mov	w2, #0x2d1                 	// #721
  1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZNK4llvm8CodeInit6getBitEj:

0000000000000000 <_ZNK4llvm8CodeInit6getBitEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	adrp	x1, 0 <_ZNK4llvm8CodeInit6getBitEj>
   8:	adrp	x0, 0 <_ZNK4llvm8CodeInit6getBitEj>
   c:	mov	x29, sp
  10:	add	x1, x1, #0x0
  14:	add	x0, x0, #0x0
  18:	mov	w2, #0x28f                 	// #655
  1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZNK4llvm10StringInit6getBitEj:

0000000000000000 <_ZNK4llvm10StringInit6getBitEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	adrp	x1, 0 <_ZNK4llvm10StringInit6getBitEj>
   8:	adrp	x0, 0 <_ZNK4llvm10StringInit6getBitEj>
   c:	mov	x29, sp
  10:	add	x1, x1, #0x0
  14:	add	x0, x0, #0x0
  18:	mov	w2, #0x26c                 	// #620
  1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZNK4llvm9BinOpInit10getOperandEj:

0000000000000000 <_ZNK4llvm9BinOpInit10getOperandEj>:
   0:	cbz	w1, 14 <_ZNK4llvm9BinOpInit10getOperandEj+0x14>
   4:	cmp	w1, #0x1
   8:	b.ne	1c <_ZNK4llvm9BinOpInit10getOperandEj+0x1c>  // b.any
   c:	ldr	x0, [x0, #40]
  10:	ret
  14:	ldr	x0, [x0, #32]
  18:	ret
  1c:	stp	x29, x30, [sp, #-16]!
  20:	adrp	x1, 0 <_ZNK4llvm9BinOpInit10getOperandEj>
  24:	adrp	x0, 0 <_ZNK4llvm9BinOpInit10getOperandEj>
  28:	mov	x29, sp
  2c:	add	x1, x1, #0x0
  30:	add	x0, x0, #0x0
  34:	mov	w2, #0x347                 	// #839
  38:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZNK4llvm10TernOpInit10getOperandEj:

0000000000000000 <_ZNK4llvm10TernOpInit10getOperandEj>:
   0:	cmp	w1, #0x1
   4:	b.eq	34 <_ZNK4llvm10TernOpInit10getOperandEj+0x34>  // b.none
   8:	cmp	w1, #0x2
   c:	b.eq	44 <_ZNK4llvm10TernOpInit10getOperandEj+0x44>  // b.none
  10:	cbz	w1, 3c <_ZNK4llvm10TernOpInit10getOperandEj+0x3c>
  14:	stp	x29, x30, [sp, #-16]!
  18:	adrp	x1, 0 <_ZNK4llvm10TernOpInit10getOperandEj>
  1c:	adrp	x0, 0 <_ZNK4llvm10TernOpInit10getOperandEj>
  20:	mov	x29, sp
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x37f                 	// #895
  30:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  34:	ldr	x0, [x0, #40]
  38:	ret
  3c:	ldr	x0, [x0, #32]
  40:	ret
  44:	ldr	x0, [x0, #48]
  48:	ret

Disassembly of section .text._ZNK4llvm10TernOpInit10isCompleteEv:

0000000000000000 <_ZNK4llvm10TernOpInit10isCompleteEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	ldr	x0, [x0, #32]
  14:	ldr	x1, [x0]
  18:	ldr	x1, [x1, #24]
  1c:	blr	x1
  20:	tst	w0, #0xff
  24:	b.eq	5c <_ZNK4llvm10TernOpInit10isCompleteEv+0x5c>  // b.none
  28:	ldr	x0, [x19, #40]
  2c:	ldr	x1, [x0]
  30:	ldr	x1, [x1, #24]
  34:	blr	x1
  38:	tst	w0, #0xff
  3c:	b.eq	5c <_ZNK4llvm10TernOpInit10isCompleteEv+0x5c>  // b.none
  40:	ldr	x0, [x19, #48]
  44:	ldr	x19, [sp, #16]
  48:	ldr	x1, [x0]
  4c:	ldp	x29, x30, [sp], #32
  50:	ldr	x1, [x1, #24]
  54:	mov	x16, x1
  58:	br	x16
  5c:	mov	w0, #0x0                   	// #0
  60:	ldr	x19, [sp, #16]
  64:	ldp	x29, x30, [sp], #32
  68:	ret

Disassembly of section .text._ZN4llvm14ShadowResolver7resolveEPNS_4InitE:

0000000000000000 <_ZN4llvm14ShadowResolver7resolveEPNS_4InitE>:
   0:	ldr	w3, [x0, #56]
   4:	cbz	w3, 4c <_ZN4llvm14ShadowResolver7resolveEPNS_4InitE+0x4c>
   8:	cmn	x1, #0x10
   c:	ccmn	x1, #0x8, #0x4, ne  // ne = any
  10:	b.eq	80 <_ZN4llvm14ShadowResolver7resolveEPNS_4InitE+0x80>  // b.none
  14:	lsr	w2, w1, #9
  18:	sub	w3, w3, #0x1
  1c:	eor	w2, w2, w1, lsr #4
  20:	ldr	x5, [x0, #40]
  24:	and	w4, w2, w3
  28:	mov	x2, x4
  2c:	ldr	x4, [x5, x4, lsl #3]
  30:	cmp	x1, x4
  34:	b.ne	40 <_ZN4llvm14ShadowResolver7resolveEPNS_4InitE+0x40>  // b.any
  38:	mov	x0, #0x0                   	// #0
  3c:	ret
  40:	mov	w6, #0x1                   	// #1
  44:	cmn	x4, #0x8
  48:	b.ne	60 <_ZN4llvm14ShadowResolver7resolveEPNS_4InitE+0x60>  // b.any
  4c:	ldr	x0, [x0, #24]
  50:	ldr	x2, [x0]
  54:	ldr	x2, [x2, #16]
  58:	mov	x16, x2
  5c:	br	x16
  60:	add	w2, w2, w6
  64:	add	w6, w6, #0x1
  68:	and	w4, w3, w2
  6c:	and	w2, w3, w2
  70:	ldr	x4, [x5, x4, lsl #3]
  74:	cmp	x1, x4
  78:	b.eq	38 <_ZN4llvm14ShadowResolver7resolveEPNS_4InitE+0x38>  // b.none
  7c:	b	44 <_ZN4llvm14ShadowResolver7resolveEPNS_4InitE+0x44>
  80:	stp	x29, x30, [sp, #-16]!
  84:	adrp	x3, 0 <_ZN4llvm14ShadowResolver7resolveEPNS_4InitE>
  88:	adrp	x1, 0 <_ZN4llvm14ShadowResolver7resolveEPNS_4InitE>
  8c:	mov	x29, sp
  90:	adrp	x0, 0 <_ZN4llvm14ShadowResolver7resolveEPNS_4InitE>
  94:	add	x3, x3, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x0, x0, #0x0
  a0:	mov	w2, #0x250                 	// #592
  a4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm14RecordResolverD0Ev:

0000000000000000 <_ZN4llvm14RecordResolverD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN4llvm14RecordResolverD0Ev>
   8:	add	x2, x0, #0x48
   c:	mov	x29, sp
  10:	ldr	x1, [x1]
  14:	str	x19, [sp, #16]
  18:	mov	x19, x0
  1c:	ldr	x0, [x0, #56]
  20:	add	x1, x1, #0x10
  24:	str	x1, [x19]
  28:	cmp	x0, x2
  2c:	b.eq	34 <_ZN4llvm14RecordResolverD0Ev+0x34>  // b.none
  30:	bl	0 <free>
  34:	ldr	x0, [x19, #32]
  38:	ldr	w1, [x19, #48]
  3c:	lsl	x1, x1, #4
  40:	bl	0 <_ZdlPvm>
  44:	mov	x0, x19
  48:	mov	x1, #0x68                  	// #104
  4c:	ldr	x19, [sp, #16]
  50:	ldp	x29, x30, [sp], #32
  54:	b	0 <_ZdlPvm>

Disassembly of section .text._ZNK4llvm8BitsInit10isCompleteEv:

0000000000000000 <_ZNK4llvm8BitsInit10isCompleteEv>:
   0:	ldr	w1, [x0, #32]
   4:	cbz	w1, 80 <_ZNK4llvm8BitsInit10isCompleteEv+0x80>
   8:	stp	x29, x30, [sp, #-48]!
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x20, x0
  18:	mov	w19, #0x0                   	// #0
  1c:	str	x21, [sp, #32]
  20:	mov	x21, #0x28                  	// #40
  24:	b	38 <_ZNK4llvm8BitsInit10isCompleteEv+0x38>
  28:	ldr	w1, [x20, #32]
  2c:	add	w19, w19, #0x1
  30:	cmp	w19, w1
  34:	b.eq	6c <_ZNK4llvm8BitsInit10isCompleteEv+0x6c>  // b.none
  38:	cmp	w19, w1
  3c:	b.cs	88 <_ZNK4llvm8BitsInit10isCompleteEv+0x88>  // b.hs, b.nlast
  40:	add	x0, x21, w19, uxtw #3
  44:	ldr	x0, [x20, x0]
  48:	ldr	x1, [x0]
  4c:	ldr	x1, [x1, #24]
  50:	blr	x1
  54:	ands	w0, w0, #0xff
  58:	b.ne	28 <_ZNK4llvm8BitsInit10isCompleteEv+0x28>  // b.any
  5c:	ldp	x19, x20, [sp, #16]
  60:	ldr	x21, [sp, #32]
  64:	ldp	x29, x30, [sp], #48
  68:	ret
  6c:	mov	w0, #0x1                   	// #1
  70:	ldp	x19, x20, [sp, #16]
  74:	ldr	x21, [sp, #32]
  78:	ldp	x29, x30, [sp], #48
  7c:	ret
  80:	mov	w0, #0x1                   	// #1
  84:	ret
  88:	adrp	x3, 0 <_ZNK4llvm8BitsInit10isCompleteEv>
  8c:	adrp	x1, 0 <_ZNK4llvm8BitsInit10isCompleteEv>
  90:	adrp	x0, 0 <_ZNK4llvm8BitsInit10isCompleteEv>
  94:	add	x3, x3, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x0, x0, #0x0
  a0:	mov	w2, #0x22e                 	// #558
  a4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm5Twine7isValidEv:

0000000000000000 <_ZNK4llvm5Twine7isValidEv>:
   0:	ldrb	w2, [x0, #16]
   4:	mov	x1, x0
   8:	ldrb	w3, [x0, #17]
   c:	cmp	w2, #0x1
  10:	b.hi	20 <_ZNK4llvm5Twine7isValidEv+0x20>  // b.pmore
  14:	cmp	w3, #0x1
  18:	cset	w0, eq  // eq = none
  1c:	ret
  20:	mov	w0, #0x0                   	// #0
  24:	cbz	w3, 1c <_ZNK4llvm5Twine7isValidEv+0x1c>
  28:	cmp	w2, #0x2
  2c:	b.ne	48 <_ZNK4llvm5Twine7isValidEv+0x48>  // b.any
  30:	ldr	x2, [x1]
  34:	ldrb	w4, [x2, #16]
  38:	cbz	w4, 1c <_ZNK4llvm5Twine7isValidEv+0x1c>
  3c:	ldrb	w2, [x2, #17]
  40:	cmp	w2, #0x1
  44:	b.eq	1c <_ZNK4llvm5Twine7isValidEv+0x1c>  // b.none
  48:	cmp	w3, #0x2
  4c:	b.ne	70 <_ZNK4llvm5Twine7isValidEv+0x70>  // b.any
  50:	ldr	x1, [x1, #8]
  54:	mov	w0, #0x0                   	// #0
  58:	ldrb	w2, [x1, #16]
  5c:	cbz	w2, 1c <_ZNK4llvm5Twine7isValidEv+0x1c>
  60:	ldrb	w0, [x1, #17]
  64:	cmp	w0, #0x1
  68:	cset	w0, ne  // ne = any
  6c:	ret
  70:	mov	w0, #0x1                   	// #1
  74:	ret

Disassembly of section .text._ZN4llvm5TwineC2EPKc:

0000000000000000 <_ZN4llvm5TwineC1EPKc>:
   0:	ldrb	w2, [x1]
   4:	mov	w3, #0x101                 	// #257
   8:	stp	xzr, xzr, [x0]
   c:	strh	w3, [x0, #16]
  10:	cbz	w2, 20 <_ZN4llvm5TwineC1EPKc+0x20>
  14:	mov	w2, #0x3                   	// #3
  18:	str	x1, [x0]
  1c:	strb	w2, [x0, #16]
  20:	ret

Disassembly of section .text._ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:

0000000000000000 <_ZN4llvm5TwineC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
   0:	mov	w2, #0x104                 	// #260
   4:	stp	x1, xzr, [x0]
   8:	strh	w2, [x0, #16]
   c:	ret

Disassembly of section .text._ZN4llvm5TwineC2ERKNS_9StringRefE:

0000000000000000 <_ZN4llvm5TwineC1ERKNS_9StringRefE>:
   0:	mov	w2, #0x105                 	// #261
   4:	stp	x1, xzr, [x0]
   8:	strh	w2, [x0, #16]
   c:	ret

Disassembly of section .text._ZN4llvm5TwineC2EPKcRKNS_9StringRefE:

0000000000000000 <_ZN4llvm5TwineC1EPKcRKNS_9StringRefE>:
   0:	mov	w3, #0x503                 	// #1283
   4:	stp	x1, x2, [x0]
   8:	strh	w3, [x0, #16]
   c:	ret

Disassembly of section .text._ZNK4llvm5Twine6concatERKS0_:

0000000000000000 <_ZNK4llvm5Twine6concatERKS0_>:
   0:	ldrb	w2, [x0, #16]
   4:	cbz	w2, 10 <_ZNK4llvm5Twine6concatERKS0_+0x10>
   8:	ldrb	w3, [x1, #16]
   c:	cbnz	w3, 20 <_ZNK4llvm5Twine6concatERKS0_+0x20>
  10:	mov	w0, #0x100                 	// #256
  14:	stp	xzr, xzr, [x8]
  18:	strh	w0, [x8, #16]
  1c:	ret
  20:	cmp	w2, #0x1
  24:	b.eq	7c <_ZNK4llvm5Twine6concatERKS0_+0x7c>  // b.none
  28:	cmp	w3, #0x1
  2c:	b.eq	90 <_ZNK4llvm5Twine6concatERKS0_+0x90>  // b.none
  30:	stp	x29, x30, [sp, #-16]!
  34:	mov	x29, sp
  38:	ldrb	w4, [x0, #17]
  3c:	cmp	w4, #0x1
  40:	b.eq	a4 <_ZNK4llvm5Twine6concatERKS0_+0xa4>  // b.none
  44:	mov	w2, #0x2                   	// #2
  48:	ldrb	w4, [x1, #17]
  4c:	cmp	w4, #0x1
  50:	b.eq	ac <_ZNK4llvm5Twine6concatERKS0_+0xac>  // b.none
  54:	mov	w3, #0x2                   	// #2
  58:	stp	x0, x1, [x8]
  5c:	mov	x0, x8
  60:	strb	w2, [x8, #16]
  64:	strb	w3, [x8, #17]
  68:	bl	0 <_ZNK4llvm5Twine6concatERKS0_>
  6c:	tst	w0, #0xff
  70:	b.eq	b4 <_ZNK4llvm5Twine6concatERKS0_+0xb4>  // b.none
  74:	ldp	x29, x30, [sp], #16
  78:	ret
  7c:	ldp	x2, x3, [x1]
  80:	stp	x2, x3, [x8]
  84:	ldr	x0, [x1, #16]
  88:	str	x0, [x8, #16]
  8c:	ret
  90:	ldp	x2, x3, [x0]
  94:	stp	x2, x3, [x8]
  98:	ldr	x0, [x0, #16]
  9c:	str	x0, [x8, #16]
  a0:	ret
  a4:	ldr	x0, [x0]
  a8:	b	48 <_ZNK4llvm5Twine6concatERKS0_+0x48>
  ac:	ldr	x1, [x1]
  b0:	b	58 <_ZNK4llvm5Twine6concatERKS0_+0x58>
  b4:	adrp	x3, 0 <_ZNK4llvm5Twine6concatERKS0_>
  b8:	adrp	x1, 0 <_ZNK4llvm5Twine6concatERKS0_>
  bc:	adrp	x0, 0 <_ZNK4llvm5Twine6concatERKS0_>
  c0:	add	x3, x3, #0x0
  c4:	add	x1, x1, #0x0
  c8:	add	x0, x0, #0x0
  cc:	mov	w2, #0xb8                  	// #184
  d0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	cbz	x1, 58 <_ZN4llvm11raw_ostreamlsEPKc+0x58>
  14:	mov	x20, x1
  18:	mov	x0, x1
  1c:	str	x21, [sp, #32]
  20:	bl	0 <strlen>
  24:	mov	x21, x0
  28:	ldp	x1, x0, [x19, #16]
  2c:	sub	x1, x1, x0
  30:	cmp	x21, x1
  34:	b.hi	68 <_ZN4llvm11raw_ostreamlsEPKc+0x68>  // b.pmore
  38:	cbz	x21, 84 <_ZN4llvm11raw_ostreamlsEPKc+0x84>
  3c:	mov	x2, x21
  40:	mov	x1, x20
  44:	bl	0 <memcpy>
  48:	ldr	x0, [x19, #24]
  4c:	add	x0, x0, x21
  50:	ldr	x21, [sp, #32]
  54:	str	x0, [x19, #24]
  58:	mov	x0, x19
  5c:	ldp	x19, x20, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	ret
  68:	mov	x2, x21
  6c:	mov	x1, x20
  70:	mov	x0, x19
  74:	ldp	x19, x20, [sp, #16]
  78:	ldr	x21, [sp, #32]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  84:	mov	x0, x19
  88:	ldp	x19, x20, [sp, #16]
  8c:	ldr	x21, [sp, #32]
  90:	ldp	x29, x30, [sp], #48
  94:	ret

Disassembly of section .text._ZNK4llvm7IntInit6getBitEj:

0000000000000000 <_ZNK4llvm7IntInit6getBitEj>:
   0:	ldr	x0, [x0, #24]
   4:	lsr	x0, x0, x1
   8:	and	w0, w0, #0x1
   c:	b	2550 <_ZN4llvm7BitInit3getEb>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_8BitsInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_8BitsInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	mov	x0, x1
   4:	mov	x1, x2
   8:	cmp	x0, #0x0
   c:	sub	x2, x0, #0x18
  10:	csel	x0, x2, x0, ne  // ne = any
  14:	b	2688 <_ZNK4llvm8BitsInit7ProfileERNS_16FoldingSetNodeIDE>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_8BitsInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_8BitsInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x4
  18:	stp	x19, x20, [sp, #16]
  1c:	mov	x19, x4
  20:	mov	x20, x2
  24:	bl	2688 <_ZNK4llvm8BitsInit7ProfileERNS_16FoldingSetNodeIDE>
  28:	mov	x1, x20
  2c:	mov	x0, x19
  30:	ldp	x19, x20, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_8BitsInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_8BitsInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x2
  18:	str	x19, [sp, #16]
  1c:	mov	x19, x2
  20:	bl	2688 <_ZNK4llvm8BitsInit7ProfileERNS_16FoldingSetNodeIDE>
  24:	mov	x0, x19
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_8ListInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_8ListInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	mov	x0, x1
   4:	mov	x1, x2
   8:	cmp	x0, #0x0
   c:	sub	x2, x0, #0x18
  10:	csel	x0, x2, x0, ne  // ne = any
  14:	b	26a0 <_ZNK4llvm8ListInit7ProfileERNS_16FoldingSetNodeIDE>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_8ListInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_8ListInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x4
  18:	stp	x19, x20, [sp, #16]
  1c:	mov	x19, x4
  20:	mov	x20, x2
  24:	bl	26a0 <_ZNK4llvm8ListInit7ProfileERNS_16FoldingSetNodeIDE>
  28:	mov	x1, x20
  2c:	mov	x0, x19
  30:	ldp	x19, x20, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_8ListInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_8ListInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x2
  18:	str	x19, [sp, #16]
  1c:	mov	x19, x2
  20:	bl	26a0 <_ZNK4llvm8ListInit7ProfileERNS_16FoldingSetNodeIDE>
  24:	mov	x0, x19
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_8UnOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_8UnOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	mov	x0, x1
   4:	mov	x1, x2
   8:	cmp	x0, #0x0
   c:	sub	x2, x0, #0x18
  10:	csel	x0, x2, x0, ne  // ne = any
  14:	b	2788 <_ZNK4llvm8UnOpInit7ProfileERNS_16FoldingSetNodeIDE>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_8UnOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_8UnOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x4
  18:	stp	x19, x20, [sp, #16]
  1c:	mov	x19, x4
  20:	mov	x20, x2
  24:	bl	2788 <_ZNK4llvm8UnOpInit7ProfileERNS_16FoldingSetNodeIDE>
  28:	mov	x1, x20
  2c:	mov	x0, x19
  30:	ldp	x19, x20, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_8UnOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_8UnOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x2
  18:	str	x19, [sp, #16]
  1c:	mov	x19, x2
  20:	bl	2788 <_ZNK4llvm8UnOpInit7ProfileERNS_16FoldingSetNodeIDE>
  24:	mov	x0, x19
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_9BinOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_9BinOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	mov	x0, x1
   4:	mov	x1, x2
   8:	cmp	x0, #0x0
   c:	sub	x2, x0, #0x18
  10:	csel	x0, x2, x0, ne  // ne = any
  14:	b	27d8 <_ZNK4llvm9BinOpInit7ProfileERNS_16FoldingSetNodeIDE>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_9BinOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_9BinOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x4
  18:	stp	x19, x20, [sp, #16]
  1c:	mov	x19, x4
  20:	mov	x20, x2
  24:	bl	27d8 <_ZNK4llvm9BinOpInit7ProfileERNS_16FoldingSetNodeIDE>
  28:	mov	x1, x20
  2c:	mov	x0, x19
  30:	ldp	x19, x20, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_9BinOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_9BinOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x2
  18:	str	x19, [sp, #16]
  1c:	mov	x19, x2
  20:	bl	27d8 <_ZNK4llvm9BinOpInit7ProfileERNS_16FoldingSetNodeIDE>
  24:	mov	x0, x19
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10TernOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10TernOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	mov	x0, x1
   4:	mov	x1, x2
   8:	cmp	x0, #0x0
   c:	sub	x2, x0, #0x18
  10:	csel	x0, x2, x0, ne  // ne = any
  14:	b	2838 <_ZNK4llvm10TernOpInit7ProfileERNS_16FoldingSetNodeIDE>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10TernOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10TernOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x4
  18:	stp	x19, x20, [sp, #16]
  1c:	mov	x19, x4
  20:	mov	x20, x2
  24:	bl	2838 <_ZNK4llvm10TernOpInit7ProfileERNS_16FoldingSetNodeIDE>
  28:	mov	x1, x20
  2c:	mov	x0, x19
  30:	ldp	x19, x20, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10TernOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10TernOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x2
  18:	str	x19, [sp, #16]
  1c:	mov	x19, x2
  20:	bl	2838 <_ZNK4llvm10TernOpInit7ProfileERNS_16FoldingSetNodeIDE>
  24:	mov	x0, x19
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10FoldOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10FoldOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	mov	x0, x1
   4:	mov	x1, x2
   8:	cmp	x0, #0x0
   c:	sub	x2, x0, #0x18
  10:	csel	x0, x2, x0, ne  // ne = any
  14:	b	28b0 <_ZNK4llvm10FoldOpInit7ProfileERNS_16FoldingSetNodeIDE>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10FoldOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10FoldOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x4
  18:	stp	x19, x20, [sp, #16]
  1c:	mov	x19, x4
  20:	mov	x20, x2
  24:	bl	28b0 <_ZNK4llvm10FoldOpInit7ProfileERNS_16FoldingSetNodeIDE>
  28:	mov	x1, x20
  2c:	mov	x0, x19
  30:	ldp	x19, x20, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10FoldOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10FoldOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x2
  18:	str	x19, [sp, #16]
  1c:	mov	x19, x2
  20:	bl	28b0 <_ZNK4llvm10FoldOpInit7ProfileERNS_16FoldingSetNodeIDE>
  24:	mov	x0, x19
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_9IsAOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_9IsAOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	mov	x0, x1
   4:	mov	x1, x2
   8:	cmp	x0, #0x0
   c:	sub	x2, x0, #0x18
  10:	csel	x0, x2, x0, ne  // ne = any
  14:	b	3060 <_ZNK4llvm9IsAOpInit7ProfileERNS_16FoldingSetNodeIDE>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_9IsAOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_9IsAOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x4
  18:	stp	x19, x20, [sp, #16]
  1c:	mov	x19, x4
  20:	mov	x20, x2
  24:	bl	3060 <_ZNK4llvm9IsAOpInit7ProfileERNS_16FoldingSetNodeIDE>
  28:	mov	x1, x20
  2c:	mov	x0, x19
  30:	ldp	x19, x20, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_9IsAOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_9IsAOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x2
  18:	str	x19, [sp, #16]
  1c:	mov	x19, x2
  20:	bl	3060 <_ZNK4llvm9IsAOpInit7ProfileERNS_16FoldingSetNodeIDE>
  24:	mov	x0, x19
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10VarDefInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10VarDefInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	mov	x0, x1
   4:	mov	x1, x2
   8:	cmp	x0, #0x0
   c:	sub	x2, x0, #0x18
  10:	csel	x0, x2, x0, ne  // ne = any
  14:	b	30e8 <_ZNK4llvm10VarDefInit7ProfileERNS_16FoldingSetNodeIDE>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10VarDefInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10VarDefInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x4
  18:	stp	x19, x20, [sp, #16]
  1c:	mov	x19, x4
  20:	mov	x20, x2
  24:	bl	30e8 <_ZNK4llvm10VarDefInit7ProfileERNS_16FoldingSetNodeIDE>
  28:	mov	x1, x20
  2c:	mov	x0, x19
  30:	ldp	x19, x20, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10VarDefInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10VarDefInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x2
  18:	str	x19, [sp, #16]
  1c:	mov	x19, x2
  20:	bl	30e8 <_ZNK4llvm10VarDefInit7ProfileERNS_16FoldingSetNodeIDE>
  24:	mov	x0, x19
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10CondOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10CondOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	mov	x0, x1
   4:	mov	x1, x2
   8:	cmp	x0, #0x0
   c:	sub	x2, x0, #0x18
  10:	csel	x0, x2, x0, ne  // ne = any
  14:	b	3100 <_ZNK4llvm10CondOpInit7ProfileERNS_16FoldingSetNodeIDE>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10CondOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10CondOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x4
  18:	stp	x19, x20, [sp, #16]
  1c:	mov	x19, x4
  20:	mov	x20, x2
  24:	bl	3100 <_ZNK4llvm10CondOpInit7ProfileERNS_16FoldingSetNodeIDE>
  28:	mov	x1, x20
  2c:	mov	x0, x19
  30:	ldp	x19, x20, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10CondOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10CondOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x2
  18:	str	x19, [sp, #16]
  1c:	mov	x19, x2
  20:	bl	3100 <_ZNK4llvm10CondOpInit7ProfileERNS_16FoldingSetNodeIDE>
  24:	mov	x0, x19
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_7DagInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_7DagInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	mov	x0, x1
   4:	mov	x1, x2
   8:	cmp	x0, #0x0
   c:	sub	x2, x0, #0x18
  10:	csel	x0, x2, x0, ne  // ne = any
  14:	b	3130 <_ZNK4llvm7DagInit7ProfileERNS_16FoldingSetNodeIDE>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_7DagInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_7DagInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x4
  18:	stp	x19, x20, [sp, #16]
  1c:	mov	x19, x4
  20:	mov	x20, x2
  24:	bl	3130 <_ZNK4llvm7DagInit7ProfileERNS_16FoldingSetNodeIDE>
  28:	mov	x1, x20
  2c:	mov	x0, x19
  30:	ldp	x19, x20, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_7DagInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_7DagInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x2
  18:	str	x19, [sp, #16]
  1c:	mov	x19, x2
  20:	bl	3130 <_ZNK4llvm7DagInit7ProfileERNS_16FoldingSetNodeIDE>
  24:	mov	x0, x19
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_:

0000000000000000 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_>:
   0:	mov	x5, x1
   4:	mov	x1, x0
   8:	stp	x29, x30, [sp, #-32]!
   c:	mov	x29, sp
  10:	ldr	x4, [x0, #8]
  14:	ldr	x2, [x5, #8]
  18:	ldr	x3, [x1], #16
  1c:	str	x19, [sp, #16]
  20:	add	x6, x4, x2
  24:	mov	x19, x8
  28:	cmp	x3, x1
  2c:	b.eq	f8 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0xf8>  // b.none
  30:	ldr	x1, [x0, #16]
  34:	cmp	x6, x1
  38:	ldr	x1, [x5]
  3c:	b.ls	58 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x58>  // b.plast
  40:	add	x7, x5, #0x10
  44:	cmp	x1, x7
  48:	b.eq	100 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x100>  // b.none
  4c:	ldr	x7, [x5, #16]
  50:	cmp	x6, x7
  54:	b.ls	a4 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0xa4>  // b.plast
  58:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
  5c:	mov	x1, x0
  60:	mov	x2, x1
  64:	add	x0, x19, #0x10
  68:	str	x0, [x19]
  6c:	ldr	x0, [x2], #16
  70:	cmp	x0, x2
  74:	b.eq	d0 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0xd0>  // b.none
  78:	str	x0, [x19]
  7c:	ldr	x0, [x1, #8]
  80:	str	x0, [x19, #8]
  84:	ldr	x3, [x1, #16]
  88:	str	x3, [x19, #16]
  8c:	stp	x2, xzr, [x1]
  90:	mov	x0, x19
  94:	strb	wzr, [x1, #16]
  98:	ldr	x19, [sp, #16]
  9c:	ldp	x29, x30, [sp], #32
  a0:	ret
  a4:	mov	x1, #0x0                   	// #0
  a8:	mov	x2, #0x0                   	// #0
  ac:	mov	x0, x5
  b0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
  b4:	mov	x1, x0
  b8:	add	x0, x19, #0x10
  bc:	mov	x2, x1
  c0:	str	x0, [x19]
  c4:	ldr	x0, [x2], #16
  c8:	cmp	x0, x2
  cc:	b.ne	78 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x78>  // b.any
  d0:	ldr	x0, [x1, #8]
  d4:	str	x0, [x19, #8]
  d8:	ldp	x4, x5, [x1, #16]
  dc:	stp	x4, x5, [x19, #16]
  e0:	mov	x0, x19
  e4:	stp	x2, xzr, [x1]
  e8:	strb	wzr, [x1, #16]
  ec:	ldr	x19, [sp, #16]
  f0:	ldp	x29, x30, [sp], #32
  f4:	ret
  f8:	mov	x1, #0xf                   	// #15
  fc:	b	34 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x34>
 100:	mov	x7, #0xf                   	// #15
 104:	b	50 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x50>

Disassembly of section .text._ZN4llvm4castINS_10StringInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm4castINS_10StringInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x0, 20 <_ZN4llvm4castINS_10StringInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x20>
   c:	ldrb	w1, [x0, #8]
  10:	cmp	w1, #0x12
  14:	b.ne	24 <_ZN4llvm4castINS_10StringInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x24>  // b.any
  18:	ldp	x29, x30, [sp], #16
  1c:	ret
  20:	bl	0 <_ZN4llvm4castINS_10StringInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  24:	adrp	x3, 0 <_ZN4llvm4castINS_10StringInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  28:	adrp	x1, 0 <_ZN4llvm4castINS_10StringInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  2c:	adrp	x0, 0 <_ZN4llvm4castINS_10StringInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  30:	add	x3, x3, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x0, x0, #0x0
  3c:	mov	w2, #0x108                 	// #264
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPNS_4InitELb1EE9push_backERKS2_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPNS_4InitELb1EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	mov	x19, x0
  14:	ldp	w1, w2, [x0, #8]
  18:	cmp	w1, w2
  1c:	b.cs	54 <_ZN4llvm23SmallVectorTemplateBaseIPNS_4InitELb1EE9push_backERKS2_+0x54>  // b.hs, b.nlast
  20:	ldr	x0, [x19]
  24:	ldr	x2, [x20]
  28:	str	x2, [x0, w1, uxtw #3]
  2c:	ldp	w0, w2, [x19, #8]
  30:	mov	w1, w0
  34:	add	x1, x1, #0x1
  38:	cmp	x1, x2
  3c:	b.hi	6c <_ZN4llvm23SmallVectorTemplateBaseIPNS_4InitELb1EE9push_backERKS2_+0x6c>  // b.pmore
  40:	add	w0, w0, #0x1
  44:	str	w0, [x19, #8]
  48:	ldp	x19, x20, [sp, #16]
  4c:	ldp	x29, x30, [sp], #32
  50:	ret
  54:	add	x1, x0, #0x10
  58:	mov	x3, #0x8                   	// #8
  5c:	mov	x2, #0x0                   	// #0
  60:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  64:	ldr	w1, [x19, #8]
  68:	b	20 <_ZN4llvm23SmallVectorTemplateBaseIPNS_4InitELb1EE9push_backERKS2_+0x20>
  6c:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_4InitELb1EE9push_backERKS2_>
  70:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_4InitELb1EE9push_backERKS2_>
  74:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_4InitELb1EE9push_backERKS2_>
  78:	add	x3, x3, #0x0
  7c:	add	x1, x1, #0x0
  80:	add	x0, x0, #0x0
  84:	mov	w2, #0x43                  	// #67
  88:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8dyn_castINS_10StringInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm8dyn_castINS_10StringInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	cbz	x0, 14 <_ZN4llvm8dyn_castINS_10StringInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x14>
   4:	ldrb	w1, [x0, #8]
   8:	cmp	w1, #0x12
   c:	csel	x0, x0, xzr, eq  // eq = none
  10:	ret
  14:	stp	x29, x30, [sp, #-16]!
  18:	mov	x29, sp
  1c:	bl	0 <_ZN4llvm8dyn_castINS_10StringInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>

Disassembly of section .text._ZN4llvm8dyn_castINS_7DefInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm8dyn_castINS_7DefInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	cbz	x0, 14 <_ZN4llvm8dyn_castINS_7DefInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x14>
   4:	ldrb	w1, [x0, #8]
   8:	cmp	w1, #0x6
   c:	csel	x0, x0, xzr, eq  // eq = none
  10:	ret
  14:	stp	x29, x30, [sp, #-16]!
  18:	mov	x29, sp
  1c:	bl	0 <_ZN4llvm8dyn_castINS_7DefInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>

Disassembly of section .text._ZN4llvm8dyn_castINS_8ListInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm8dyn_castINS_8ListInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	cbz	x0, 14 <_ZN4llvm8dyn_castINS_8ListInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x14>
   4:	ldrb	w1, [x0, #8]
   8:	cmp	w1, #0x9
   c:	csel	x0, x0, xzr, eq  // eq = none
  10:	ret
  14:	stp	x29, x30, [sp, #-16]!
  18:	mov	x29, sp
  1c:	bl	0 <_ZN4llvm8dyn_castINS_8ListInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>

Disassembly of section .text._ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_:

0000000000000000 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x23, x24, [sp, #48]
   c:	mov	x23, x3
  10:	ldr	w3, [x0, #8]
  14:	stp	x19, x20, [sp, #16]
  18:	mov	x19, x1
  1c:	mov	x20, x2
  20:	ldr	x1, [x0]
  24:	lsl	x4, x3, #3
  28:	stp	x21, x22, [sp, #32]
  2c:	add	x24, x1, x4
  30:	stp	x25, x26, [sp, #64]
  34:	cmp	x19, x24
  38:	mov	x26, x0
  3c:	sub	x25, x19, x1
  40:	b.eq	1dc <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x1dc>  // b.none
  44:	stp	x27, x28, [sp, #80]
  48:	cmp	x19, x1
  4c:	b.cc	2d8 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x2d8>  // b.lo, b.ul, b.last
  50:	cmp	x19, x24
  54:	b.hi	2b8 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x2b8>  // b.pmore
  58:	sub	x27, x23, x2
  5c:	ldr	w5, [x0, #12]
  60:	asr	x22, x27, #3
  64:	add	x2, x22, x3
  68:	cmp	x2, x5
  6c:	b.hi	120 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x120>  // b.pmore
  70:	sub	x2, x4, x25
  74:	cmp	x22, x2, asr #3
  78:	asr	x21, x2, #3
  7c:	b.ls	150 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x150>  // b.plast
  80:	add	x22, x22, x3
  84:	cmp	x22, x5
  88:	b.hi	298 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x298>  // b.pmore
  8c:	str	w22, [x26, #8]
  90:	cmp	x24, x19
  94:	b.eq	a8 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0xa8>  // b.none
  98:	add	x22, x1, x22, lsl #3
  9c:	mov	x1, x19
  a0:	sub	x0, x22, x2
  a4:	bl	0 <memcpy>
  a8:	cbz	x21, c8 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0xc8>
  ac:	mov	x0, #0x0                   	// #0
  b0:	ldr	x1, [x20, x0, lsl #3]
  b4:	str	x1, [x19, x0, lsl #3]
  b8:	add	x0, x0, #0x1
  bc:	cmp	x21, x0
  c0:	b.ne	b0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0xb0>  // b.any
  c4:	add	x20, x20, x21, lsl #3
  c8:	cmp	x23, x20
  cc:	b.eq	100 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x100>  // b.none
  d0:	sub	x2, x23, x20
  d4:	mov	x1, x20
  d8:	mov	x0, x24
  dc:	bl	0 <memcpy>
  e0:	ldp	x27, x28, [sp, #80]
  e4:	mov	x0, x19
  e8:	ldp	x19, x20, [sp, #16]
  ec:	ldp	x21, x22, [sp, #32]
  f0:	ldp	x23, x24, [sp, #48]
  f4:	ldp	x25, x26, [sp, #64]
  f8:	ldp	x29, x30, [sp], #112
  fc:	ret
 100:	mov	x0, x19
 104:	ldp	x19, x20, [sp, #16]
 108:	ldp	x21, x22, [sp, #32]
 10c:	ldp	x23, x24, [sp, #48]
 110:	ldp	x25, x26, [sp, #64]
 114:	ldp	x27, x28, [sp, #80]
 118:	ldp	x29, x30, [sp], #112
 11c:	ret
 120:	add	x1, x0, #0x10
 124:	mov	x3, #0x8                   	// #8
 128:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 12c:	ldp	w3, w5, [x26, #8]
 130:	ldr	x1, [x26]
 134:	lsl	x4, x3, #3
 138:	sub	x2, x4, x25
 13c:	add	x24, x1, x4
 140:	add	x19, x1, x25
 144:	cmp	x22, x2, asr #3
 148:	asr	x21, x2, #3
 14c:	b.hi	80 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x80>  // b.pmore
 150:	sub	x6, x4, x27
 154:	sub	x5, x5, x3
 158:	sub	x22, x4, x6
 15c:	add	x21, x1, x6
 160:	mov	x0, x24
 164:	cmp	x5, x22, asr #3
 168:	asr	x28, x22, #3
 16c:	b.cc	268 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x268>  // b.lo, b.ul, b.last
 170:	cmp	x21, x24
 174:	b.eq	190 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x190>  // b.none
 178:	mov	x2, x22
 17c:	mov	x1, x21
 180:	str	x6, [sp, #104]
 184:	bl	0 <memmove>
 188:	ldr	w3, [x26, #8]
 18c:	ldr	x6, [sp, #104]
 190:	add	x3, x28, x3
 194:	ldr	w0, [x26, #12]
 198:	cmp	x3, x0
 19c:	b.hi	298 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x298>  // b.pmore
 1a0:	str	w3, [x26, #8]
 1a4:	cmp	x21, x19
 1a8:	b.eq	1bc <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x1bc>  // b.none
 1ac:	sub	x2, x6, x25
 1b0:	mov	x1, x19
 1b4:	sub	x0, x24, x2
 1b8:	bl	0 <memmove>
 1bc:	cmp	x20, x23
 1c0:	b.eq	100 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x100>  // b.none
 1c4:	mov	x2, x27
 1c8:	mov	x1, x20
 1cc:	mov	x0, x19
 1d0:	bl	0 <memmove>
 1d4:	ldp	x27, x28, [sp, #80]
 1d8:	b	e4 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0xe4>
 1dc:	ldr	w1, [x0, #12]
 1e0:	sub	x21, x23, x2
 1e4:	sub	x1, x1, x3
 1e8:	asr	x19, x21, #3
 1ec:	cmp	x1, x21, asr #3
 1f0:	b.cc	248 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x248>  // b.lo, b.ul, b.last
 1f4:	cmp	x20, x23
 1f8:	b.eq	210 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x210>  // b.none
 1fc:	mov	x2, x21
 200:	mov	x1, x20
 204:	mov	x0, x24
 208:	bl	0 <memcpy>
 20c:	ldr	w3, [x26, #8]
 210:	ldr	w0, [x26, #12]
 214:	add	x3, x19, x3
 218:	cmp	x3, x0
 21c:	b.hi	294 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x294>  // b.pmore
 220:	ldr	x19, [x26]
 224:	str	w3, [x26, #8]
 228:	ldp	x21, x22, [sp, #32]
 22c:	add	x19, x19, x25
 230:	mov	x0, x19
 234:	ldp	x19, x20, [sp, #16]
 238:	ldp	x23, x24, [sp, #48]
 23c:	ldp	x25, x26, [sp, #64]
 240:	ldp	x29, x30, [sp], #112
 244:	ret
 248:	add	x2, x3, x19
 24c:	add	x1, x0, #0x10
 250:	mov	x3, #0x8                   	// #8
 254:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 258:	ldr	x24, [x26]
 25c:	ldr	w3, [x26, #8]
 260:	add	x24, x24, x3, lsl #3
 264:	b	1f4 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x1f4>
 268:	add	x2, x28, x3
 26c:	mov	x0, x26
 270:	mov	x3, #0x8                   	// #8
 274:	add	x1, x26, #0x10
 278:	str	x6, [sp, #104]
 27c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 280:	ldr	x0, [x26]
 284:	ldr	w3, [x26, #8]
 288:	ldr	x6, [sp, #104]
 28c:	add	x0, x0, x3, lsl #3
 290:	b	170 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x170>
 294:	stp	x27, x28, [sp, #80]
 298:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_>
 29c:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_>
 2a0:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_>
 2a4:	add	x3, x3, #0x0
 2a8:	add	x1, x1, #0x0
 2ac:	add	x0, x0, #0x0
 2b0:	mov	w2, #0x43                  	// #67
 2b4:	bl	0 <__assert_fail>
 2b8:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_>
 2bc:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_>
 2c0:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_>
 2c4:	add	x3, x3, #0x0
 2c8:	add	x1, x1, #0x0
 2cc:	add	x0, x0, #0x0
 2d0:	mov	w2, #0x24f                 	// #591
 2d4:	bl	0 <__assert_fail>
 2d8:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_>
 2dc:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_>
 2e0:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_>
 2e4:	add	x3, x3, #0x0
 2e8:	add	x1, x1, #0x0
 2ec:	add	x0, x0, #0x0
 2f0:	mov	w2, #0x24e                 	// #590
 2f4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_:

0000000000000000 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	ldr	x19, [x0, #16]
  10:	stp	x21, x22, [sp, #32]
  14:	stp	x23, x24, [sp, #48]
  18:	add	x23, x0, #0x8
  1c:	mov	x21, x23
  20:	cbz	x19, 98 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x98>
  24:	ldp	x24, x20, [x1]
  28:	ldp	x0, x22, [x19, #32]
  2c:	cmp	x22, x20
  30:	b.hi	b0 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0xb0>  // b.pmore
  34:	cbz	x22, 48 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x48>
  38:	mov	x2, x22
  3c:	mov	x1, x24
  40:	bl	0 <memcmp>
  44:	cbnz	w0, c4 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0xc4>
  48:	cmp	x22, x20
  4c:	b.eq	c8 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0xc8>  // b.none
  50:	cmp	x22, x20
  54:	b.cs	c8 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0xc8>  // b.hs, b.nlast
  58:	ldr	x19, [x19, #24]
  5c:	cbnz	x19, 28 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x28>
  60:	cmp	x23, x21
  64:	b.eq	98 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x98>  // b.none
  68:	ldp	x1, x19, [x21, #32]
  6c:	cmp	x19, x20
  70:	b.cc	d8 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0xd8>  // b.lo, b.ul, b.last
  74:	cbz	x20, 88 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x88>
  78:	mov	x0, x24
  7c:	mov	x2, x20
  80:	bl	0 <memcmp>
  84:	cbnz	w0, ec <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0xec>
  88:	cmp	x19, x20
  8c:	b.eq	98 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x98>  // b.none
  90:	cmp	x19, x20
  94:	csel	x21, x21, x23, ls  // ls = plast
  98:	mov	x0, x21
  9c:	ldp	x19, x20, [sp, #16]
  a0:	ldp	x21, x22, [sp, #32]
  a4:	ldp	x23, x24, [sp, #48]
  a8:	ldp	x29, x30, [sp], #64
  ac:	ret
  b0:	cbz	x20, c8 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0xc8>
  b4:	mov	x2, x20
  b8:	mov	x1, x24
  bc:	bl	0 <memcmp>
  c0:	cbz	w0, 50 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x50>
  c4:	tbnz	w0, #31, 58 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x58>
  c8:	mov	x21, x19
  cc:	ldr	x19, [x19, #16]
  d0:	cbnz	x19, 28 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x28>
  d4:	b	60 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x60>
  d8:	cbz	x19, 98 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x98>
  dc:	mov	x0, x24
  e0:	mov	x2, x19
  e4:	bl	0 <memcmp>
  e8:	cbz	w0, 90 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x90>
  ec:	cmp	w0, #0x0
  f0:	csel	x21, x21, x23, ge  // ge = tcont
  f4:	mov	x0, x21
  f8:	ldp	x19, x20, [sp, #16]
  fc:	ldp	x21, x22, [sp, #32]
 100:	ldp	x23, x24, [sp, #48]
 104:	ldp	x29, x30, [sp], #64
 108:	ret

Disassembly of section .text._ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EE17_M_default_appendEm:

0000000000000000 <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EE17_M_default_appendEm>:
   0:	cbz	x1, 74 <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EE17_M_default_appendEm+0x74>
   4:	stp	x29, x30, [sp, #-80]!
   8:	mov	x3, #0xfffffffffffffff     	// #1152921504606846975
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x19, x1
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	x21, x0
  20:	ldp	x1, x0, [x0]
  24:	stp	x23, x24, [sp, #48]
  28:	ldr	x2, [x21, #16]
  2c:	sub	x22, x0, x1
  30:	sub	x1, x2, x0
  34:	asr	x23, x22, #3
  38:	cmp	x19, x1, asr #3
  3c:	sub	x2, x3, x23
  40:	b.hi	78 <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EE17_M_default_appendEm+0x78>  // b.pmore
  44:	mov	x2, #0x0                   	// #0
  48:	str	xzr, [x0, x2, lsl #3]
  4c:	add	x2, x2, #0x1
  50:	cmp	x19, x2
  54:	b.ne	48 <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EE17_M_default_appendEm+0x48>  // b.any
  58:	add	x19, x0, x19, lsl #3
  5c:	str	x19, [x21, #8]
  60:	ldp	x19, x20, [sp, #16]
  64:	ldp	x21, x22, [sp, #32]
  68:	ldp	x23, x24, [sp, #48]
  6c:	ldp	x29, x30, [sp], #80
  70:	ret
  74:	ret
  78:	str	x25, [sp, #64]
  7c:	cmp	x2, x19
  80:	b.cc	118 <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EE17_M_default_appendEm+0x118>  // b.lo, b.ul, b.last
  84:	cmp	x23, x19
  88:	mov	x20, #0x0                   	// #0
  8c:	csel	x24, x23, x19, cs  // cs = hs, nlast
  90:	add	x24, x23, x24
  94:	cmp	x24, x3
  98:	csel	x24, x24, x3, ls  // ls = plast
  9c:	lsl	x24, x24, #3
  a0:	mov	x0, x24
  a4:	bl	0 <_Znwm>
  a8:	mov	x25, x0
  ac:	add	x1, x0, x22
  b0:	str	xzr, [x1, x20, lsl #3]
  b4:	add	x20, x20, #0x1
  b8:	cmp	x19, x20
  bc:	b.ne	b0 <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EE17_M_default_appendEm+0xb0>  // b.any
  c0:	ldp	x19, x2, [x21]
  c4:	sub	x2, x2, x19
  c8:	cmp	x2, #0x0
  cc:	b.gt	100 <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EE17_M_default_appendEm+0x100>
  d0:	cbnz	x19, 10c <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EE17_M_default_appendEm+0x10c>
  d4:	add	x20, x23, x20
  d8:	add	x24, x25, x24
  dc:	str	x24, [x21, #16]
  e0:	add	x20, x25, x20, lsl #3
  e4:	stp	x25, x20, [x21]
  e8:	ldp	x19, x20, [sp, #16]
  ec:	ldp	x21, x22, [sp, #32]
  f0:	ldp	x23, x24, [sp, #48]
  f4:	ldr	x25, [sp, #64]
  f8:	ldp	x29, x30, [sp], #80
  fc:	ret
 100:	mov	x1, x19
 104:	mov	x0, x25
 108:	bl	0 <memmove>
 10c:	mov	x0, x19
 110:	bl	0 <_ZdlPv>
 114:	b	d4 <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EE17_M_default_appendEm+0xd4>
 118:	adrp	x0, 0 <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EE17_M_default_appendEm>
 11c:	add	x0, x0, #0x0
 120:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE:

0000000000000000 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	ldr	x3, [x0]
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x20, x0
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x21, x1
  1c:	stp	x25, x26, [sp, #64]
  20:	mov	x26, #0x1                   	// #1
  24:	lsl	x2, x26, x2
  28:	ldr	x1, [x0, #80]
  2c:	stp	x23, x24, [sp, #48]
  30:	sub	x23, x2, #0x1
  34:	neg	x22, x2
  38:	add	x0, x3, x23
  3c:	and	x0, x0, x22
  40:	add	x1, x1, x21
  44:	str	x1, [x20, #80]
  48:	sub	x0, x0, x3
  4c:	adds	x2, x21, x0
  50:	b.cs	294 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x294>  // b.hs, b.nlast
  54:	ldr	x1, [x20, #8]
  58:	sub	x1, x1, x3
  5c:	cmp	x2, x1
  60:	b.ls	198 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x198>  // b.plast
  64:	add	x25, x21, x23
  68:	cmp	x25, #0x1, lsl #12
  6c:	b.ls	fc <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0xfc>  // b.plast
  70:	mov	x0, x25
  74:	stp	x27, x28, [sp, #80]
  78:	bl	0 <malloc>
  7c:	mov	x19, x0
  80:	cbz	x0, 324 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x324>
  84:	ldp	w24, w0, [x20, #72]
  88:	cmp	w24, w0
  8c:	mov	w26, w0
  90:	b.cs	1d8 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x1d8>  // b.hs, b.nlast
  94:	ldr	x28, [x20, #64]
  98:	mov	w2, w24
  9c:	ubfiz	x4, x24, #4, #32
  a0:	add	x0, x28, x4
  a4:	str	x19, [x28, x4]
  a8:	add	x2, x2, #0x1
  ac:	cmp	x2, x26
  b0:	str	x25, [x0, #8]
  b4:	b.hi	2e0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x2e0>  // b.pmore
  b8:	add	w24, w24, #0x1
  bc:	str	w24, [x20, #72]
  c0:	adds	x3, x19, x23
  c4:	b.cs	2bc <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x2bc>  // b.hs, b.nlast
  c8:	and	x3, x22, x3
  cc:	add	x19, x19, x25
  d0:	add	x21, x21, x3
  d4:	mov	x0, x3
  d8:	cmp	x21, x19
  dc:	b.hi	338 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x338>  // b.pmore
  e0:	ldp	x19, x20, [sp, #16]
  e4:	ldp	x21, x22, [sp, #32]
  e8:	ldp	x23, x24, [sp, #48]
  ec:	ldp	x25, x26, [sp, #64]
  f0:	ldp	x27, x28, [sp, #80]
  f4:	ldp	x29, x30, [sp], #112
  f8:	ret
  fc:	ldr	w25, [x20, #24]
 100:	mov	x1, #0x40000000000         	// #4398046511104
 104:	mov	x24, #0x1000                	// #4096
 108:	lsr	w0, w25, #7
 10c:	cmp	w0, #0x1e
 110:	lsl	x24, x24, x0
 114:	csel	x24, x24, x1, cc  // cc = lo, ul, last
 118:	mov	x0, x24
 11c:	bl	0 <malloc>
 120:	mov	x19, x0
 124:	cbz	x0, 358 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x358>
 128:	ldr	w0, [x20, #28]
 12c:	cmp	w25, w0
 130:	b.cs	1bc <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x1bc>  // b.hs, b.nlast
 134:	ldr	x0, [x20, #16]
 138:	str	x19, [x0, w25, uxtw #3]
 13c:	ldp	w0, w2, [x20, #24]
 140:	mov	w1, w0
 144:	add	x1, x1, #0x1
 148:	cmp	x1, x2
 14c:	b.hi	2dc <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x2dc>  // b.pmore
 150:	add	w0, w0, #0x1
 154:	add	x24, x19, x24
 158:	stp	x19, x24, [x20]
 15c:	adds	x3, x23, x19
 160:	str	w0, [x20, #24]
 164:	b.cs	2b8 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x2b8>  // b.hs, b.nlast
 168:	and	x3, x22, x3
 16c:	add	x21, x21, x3
 170:	cmp	x24, x21
 174:	b.cc	300 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x300>  // b.lo, b.ul, b.last
 178:	str	x21, [x20]
 17c:	mov	x0, x3
 180:	ldp	x19, x20, [sp, #16]
 184:	ldp	x21, x22, [sp, #32]
 188:	ldp	x23, x24, [sp, #48]
 18c:	ldp	x25, x26, [sp, #64]
 190:	ldp	x29, x30, [sp], #112
 194:	ret
 198:	add	x0, x3, x0
 19c:	add	x21, x0, x21
 1a0:	str	x21, [x20]
 1a4:	ldp	x19, x20, [sp, #16]
 1a8:	ldp	x21, x22, [sp, #32]
 1ac:	ldp	x23, x24, [sp, #48]
 1b0:	ldp	x25, x26, [sp, #64]
 1b4:	ldp	x29, x30, [sp], #112
 1b8:	ret
 1bc:	add	x1, x20, #0x20
 1c0:	add	x0, x20, #0x10
 1c4:	mov	x3, #0x8                   	// #8
 1c8:	mov	x2, #0x0                   	// #0
 1cc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 1d0:	ldr	w25, [x20, #24]
 1d4:	b	134 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x134>
 1d8:	add	x1, x26, #0x2
 1dc:	mov	x0, #0xffffffff            	// #4294967295
 1e0:	orr	x1, x1, x1, lsr #1
 1e4:	orr	x1, x1, x1, lsr #2
 1e8:	orr	x1, x1, x1, lsr #4
 1ec:	orr	x1, x1, x1, lsr #8
 1f0:	orr	x1, x1, x1, lsr #16
 1f4:	orr	x1, x1, x1, lsr #32
 1f8:	add	x1, x1, #0x1
 1fc:	cmp	x1, x0
 200:	b.hi	280 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x280>  // b.pmore
 204:	lsl	x0, x1, #4
 208:	mov	w27, w1
 20c:	mov	x26, x1
 210:	str	x1, [sp, #104]
 214:	bl	0 <malloc>
 218:	mov	x28, x0
 21c:	cbz	x0, 370 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x370>
 220:	ldr	x0, [x20, #64]
 224:	ubfiz	x4, x24, #4, #32
 228:	mov	w2, w24
 22c:	mov	x3, x28
 230:	add	x7, x0, x4
 234:	mov	x1, x0
 238:	cmp	x0, x7
 23c:	b.eq	258 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x258>  // b.none
 240:	ldp	x6, x5, [x1]
 244:	stp	x6, x5, [x3]
 248:	add	x1, x1, #0x10
 24c:	cmp	x7, x1
 250:	add	x3, x3, #0x10
 254:	b.ne	240 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x240>  // b.any
 258:	add	x1, x20, #0x50
 25c:	cmp	x0, x1
 260:	b.eq	274 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x274>  // b.none
 264:	bl	0 <free>
 268:	ldr	w24, [x20, #72]
 26c:	mov	w2, w24
 270:	ubfiz	x4, x24, #4, #32
 274:	str	x28, [x20, #64]
 278:	str	w27, [x20, #76]
 27c:	b	a0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0xa0>
 280:	mov	x26, x0
 284:	mov	x1, x0
 288:	mov	w27, #0xffffffff            	// #-1
 28c:	mov	x0, #0xffffffff0           	// #68719476720
 290:	b	210 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x210>
 294:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 298:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 29c:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 2a0:	add	x3, x3, #0x0
 2a4:	add	x1, x1, #0x0
 2a8:	add	x0, x0, #0x0
 2ac:	mov	w2, #0xdc                  	// #220
 2b0:	stp	x27, x28, [sp, #80]
 2b4:	bl	0 <__assert_fail>
 2b8:	stp	x27, x28, [sp, #80]
 2bc:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 2c0:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 2c4:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 2c8:	add	x3, x3, #0x0
 2cc:	add	x1, x1, #0x0
 2d0:	add	x0, x0, #0x0
 2d4:	mov	w2, #0xba                  	// #186
 2d8:	bl	0 <__assert_fail>
 2dc:	stp	x27, x28, [sp, #80]
 2e0:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 2e4:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 2e8:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 2ec:	add	x3, x3, #0x0
 2f0:	add	x1, x1, #0x0
 2f4:	add	x0, x0, #0x0
 2f8:	mov	w2, #0x43                  	// #67
 2fc:	bl	0 <__assert_fail>
 300:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 304:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 308:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 30c:	add	x3, x3, #0x0
 310:	add	x1, x1, #0x0
 314:	add	x0, x0, #0x0
 318:	mov	w2, #0x105                 	// #261
 31c:	stp	x27, x28, [sp, #80]
 320:	bl	0 <__assert_fail>
 324:	mov	w1, w26
 328:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 32c:	add	x0, x0, #0x0
 330:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 334:	b	84 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x84>
 338:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 33c:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 340:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 344:	add	x3, x3, #0x0
 348:	add	x1, x1, #0x0
 34c:	add	x0, x0, #0x0
 350:	mov	w2, #0xfb                  	// #251
 354:	bl	0 <__assert_fail>
 358:	mov	w1, w26
 35c:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 360:	add	x0, x0, #0x0
 364:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 368:	ldr	w25, [x20, #24]
 36c:	b	128 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x128>
 370:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 374:	mov	w1, #0x1                   	// #1
 378:	add	x0, x0, #0x0
 37c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 380:	ldr	w24, [x20, #72]
 384:	b	220 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x220>

Disassembly of section .text._ZNK4llvm8UnOpInit5cloneENS_8ArrayRefIPNS_4InitEEE:

0000000000000000 <_ZNK4llvm8UnOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>:
   0:	cmp	x2, #0x1
   4:	b.ne	1c <_ZNK4llvm8UnOpInit5cloneENS_8ArrayRefIPNS_4InitEEE+0x1c>  // b.any
   8:	mov	x3, x0
   c:	ldrb	w0, [x0, #9]
  10:	ldr	x1, [x1]
  14:	ldr	x2, [x3, #16]
  18:	b	6a48 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE>
  1c:	stp	x29, x30, [sp, #-16]!
  20:	adrp	x3, 0 <_ZNK4llvm8UnOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>
  24:	adrp	x1, 0 <_ZNK4llvm8UnOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>
  28:	mov	x29, sp
  2c:	adrp	x0, 0 <_ZNK4llvm8UnOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>
  30:	add	x3, x3, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x0, x0, #0x0
  3c:	mov	w2, #0x308                 	// #776
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9BinOpInit5cloneENS_8ArrayRefIPNS_4InitEEE:

0000000000000000 <_ZNK4llvm9BinOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>:
   0:	cmp	x2, #0x2
   4:	b.ne	1c <_ZNK4llvm9BinOpInit5cloneENS_8ArrayRefIPNS_4InitEEE+0x1c>  // b.any
   8:	mov	x3, x0
   c:	ldrb	w0, [x0, #9]
  10:	ldp	x1, x2, [x1]
  14:	ldr	x3, [x3, #16]
  18:	b	6cf0 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE>
  1c:	stp	x29, x30, [sp, #-16]!
  20:	adrp	x3, 0 <_ZNK4llvm9BinOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>
  24:	adrp	x1, 0 <_ZNK4llvm9BinOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>
  28:	mov	x29, sp
  2c:	adrp	x0, 0 <_ZNK4llvm9BinOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>
  30:	add	x3, x3, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x0, x0, #0x0
  3c:	mov	w2, #0x33f                 	// #831
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10TernOpInit5cloneENS_8ArrayRefIPNS_4InitEEE:

0000000000000000 <_ZNK4llvm10TernOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>:
   0:	cmp	x2, #0x3
   4:	b.ne	24 <_ZNK4llvm10TernOpInit5cloneENS_8ArrayRefIPNS_4InitEEE+0x24>  // b.any
   8:	mov	x4, x0
   c:	mov	x3, x1
  10:	ldp	x1, x2, [x1]
  14:	ldrb	w0, [x0, #9]
  18:	ldr	x3, [x3, #16]
  1c:	ldr	x4, [x4, #16]
  20:	b	7008 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE>
  24:	stp	x29, x30, [sp, #-16]!
  28:	adrp	x3, 0 <_ZNK4llvm10TernOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>
  2c:	adrp	x1, 0 <_ZNK4llvm10TernOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>
  30:	mov	x29, sp
  34:	adrp	x0, 0 <_ZNK4llvm10TernOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>
  38:	add	x3, x3, #0x0
  3c:	add	x1, x1, #0x0
  40:	add	x0, x0, #0x0
  44:	mov	w2, #0x376                 	// #886
  48:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E:

0000000000000000 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E>:
   0:	cbz	x1, 40 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x40>
   4:	stp	x29, x30, [sp, #-32]!
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x20, x0
  14:	mov	x19, x1
  18:	ldr	x1, [x19, #24]
  1c:	mov	x0, x20
  20:	bl	0 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E>
  24:	mov	x0, x19
  28:	ldr	x19, [x19, #16]
  2c:	bl	0 <_ZdlPv>
  30:	cbnz	x19, 18 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x18>
  34:	ldp	x19, x20, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret
  40:	ret

Disassembly of section .text._ZNSt3mapIlPN4llvm7IntInitESt4lessIlESaISt4pairIKlS2_EEED2Ev:

0000000000000000 <_ZNSt3mapIlPN4llvm7IntInitESt4lessIlESaISt4pairIKlS2_EEED1Ev>:
   0:	ldr	x1, [x0, #16]
   4:	b	0 <_ZNSt3mapIlPN4llvm7IntInitESt4lessIlESaISt4pairIKlS2_EEED1Ev>

Disassembly of section .text._ZN4llvm4castINS_7IntInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm4castINS_7IntInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x0, 20 <_ZN4llvm4castINS_7IntInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x20>
   c:	ldrb	w1, [x0, #8]
  10:	cmp	w1, #0x8
  14:	b.ne	24 <_ZN4llvm4castINS_7IntInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x24>  // b.any
  18:	ldp	x29, x30, [sp], #16
  1c:	ret
  20:	bl	0 <_ZN4llvm4castINS_7IntInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  24:	adrp	x3, 0 <_ZN4llvm4castINS_7IntInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  28:	adrp	x1, 0 <_ZN4llvm4castINS_7IntInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  2c:	adrp	x0, 0 <_ZN4llvm4castINS_7IntInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  30:	add	x3, x3, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x0, x0, #0x0
  3c:	mov	w2, #0x108                 	// #264
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	str	x21, [sp, #32]
  18:	mov	x0, #0xffffffff            	// #4294967295
  1c:	str	x1, [sp, #56]
  20:	cmp	x1, x0
  24:	b.hi	108 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0x108>  // b.pmore
  28:	ldr	w2, [x19, #12]
  2c:	mov	x3, #0xffffffff            	// #4294967295
  30:	str	x3, [sp, #72]
  34:	add	x2, x2, #0x2
  38:	orr	x2, x2, x2, lsr #1
  3c:	orr	x2, x2, x2, lsr #2
  40:	orr	x2, x2, x2, lsr #4
  44:	orr	x2, x2, x2, lsr #8
  48:	orr	x1, x2, x2, lsr #16
  4c:	orr	x2, x1, x2, lsr #32
  50:	add	x2, x2, #0x1
  54:	cmp	x2, x20
  58:	csel	x1, x2, x20, cs  // cs = hs, nlast
  5c:	cmp	x1, x3
  60:	b.hi	d8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0xd8>  // b.pmore
  64:	mov	w21, w1
  68:	lsl	x0, x1, #4
  6c:	str	x1, [sp, #64]
  70:	bl	0 <malloc>
  74:	mov	x20, x0
  78:	cbz	x0, f0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0xf0>
  7c:	ldr	x0, [x19]
  80:	mov	x2, x20
  84:	ldr	w5, [x19, #8]
  88:	mov	x1, x0
  8c:	add	x5, x0, x5, lsl #4
  90:	cmp	x0, x5
  94:	b.eq	b0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0xb0>  // b.none
  98:	ldp	x4, x3, [x1]
  9c:	stp	x4, x3, [x2]
  a0:	add	x1, x1, #0x10
  a4:	cmp	x5, x1
  a8:	add	x2, x2, #0x10
  ac:	b.ne	98 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0x98>  // b.any
  b0:	add	x1, x19, #0x10
  b4:	cmp	x0, x1
  b8:	b.eq	c0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0xc0>  // b.none
  bc:	bl	0 <free>
  c0:	str	x20, [x19]
  c4:	str	w21, [x19, #12]
  c8:	ldp	x19, x20, [sp, #16]
  cc:	ldr	x21, [sp, #32]
  d0:	ldp	x29, x30, [sp], #80
  d4:	ret
  d8:	mov	x0, #0xffffffff0           	// #68719476720
  dc:	mov	w21, #0xffffffff            	// #-1
  e0:	str	x3, [sp, #64]
  e4:	bl	0 <malloc>
  e8:	mov	x20, x0
  ec:	cbnz	x0, 7c <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0x7c>
  f0:	mov	x20, #0x0                   	// #0
  f4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm>
  f8:	mov	w1, #0x1                   	// #1
  fc:	add	x0, x0, #0x0
 100:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 104:	b	7c <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0x7c>
 108:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm>
 10c:	mov	w1, #0x1                   	// #1
 110:	add	x0, x0, #0x0
 114:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 118:	b	28 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0x28>

Disassembly of section .text._ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x3, #0x7ffffffffffffff     	// #576460752303423487
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x1
  14:	stp	x23, x24, [sp, #48]
  18:	ldp	x24, x20, [x0]
  1c:	stp	x21, x22, [sp, #32]
  20:	stp	x25, x26, [sp, #64]
  24:	str	x27, [sp, #80]
  28:	sub	x1, x20, x24
  2c:	cmp	x3, x1, asr #4
  30:	b.eq	148 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x148>  // b.none
  34:	mov	x23, x0
  38:	mov	x25, x2
  3c:	asr	x0, x1, #4
  40:	sub	x27, x19, x24
  44:	cbz	x0, 130 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x130>
  48:	cmp	x0, x0, lsl #1
  4c:	mov	x26, #0x7ffffffffffffff0    	// #9223372036854775792
  50:	lsl	x0, x0, #1
  54:	b.ls	11c <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x11c>  // b.plast
  58:	mov	x0, x26
  5c:	bl	0 <_Znwm>
  60:	mov	x22, x0
  64:	add	x26, x0, x26
  68:	add	x21, x0, #0x10
  6c:	add	x0, x22, x27
  70:	cmp	x19, x24
  74:	ldr	x1, [x25]
  78:	str	x1, [x22, x27]
  7c:	ldr	x1, [x25, #8]
  80:	str	x1, [x0, #8]
  84:	b.eq	b4 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xb4>  // b.none
  88:	mov	x3, x22
  8c:	mov	x2, x24
  90:	ldp	x4, x1, [x2]
  94:	stp	x4, x1, [x3]
  98:	add	x2, x2, #0x10
  9c:	cmp	x19, x2
  a0:	add	x3, x3, #0x10
  a4:	b.ne	90 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x90>  // b.any
  a8:	sub	x21, x19, x24
  ac:	add	x21, x21, #0x10
  b0:	add	x21, x22, x21
  b4:	cmp	x19, x20
  b8:	b.eq	ec <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xec>  // b.none
  bc:	mov	x2, x19
  c0:	mov	x3, x21
  c4:	nop
  c8:	ldr	x1, [x2, #8]
  cc:	str	x1, [x3, #8]
  d0:	ldr	x1, [x2], #16
  d4:	str	x1, [x3]
  d8:	add	x3, x3, #0x10
  dc:	cmp	x2, x20
  e0:	b.ne	c8 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xc8>  // b.any
  e4:	sub	x2, x2, x19
  e8:	add	x21, x21, x2
  ec:	cbz	x24, f8 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf8>
  f0:	mov	x0, x24
  f4:	bl	0 <_ZdlPv>
  f8:	ldp	x19, x20, [sp, #16]
  fc:	ldr	x27, [sp, #80]
 100:	stp	x22, x21, [x23]
 104:	str	x26, [x23, #16]
 108:	ldp	x21, x22, [sp, #32]
 10c:	ldp	x23, x24, [sp, #48]
 110:	ldp	x25, x26, [sp, #64]
 114:	ldp	x29, x30, [sp], #96
 118:	ret
 11c:	cbnz	x0, 138 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x138>
 120:	mov	x21, #0x10                  	// #16
 124:	mov	x26, #0x0                   	// #0
 128:	mov	x22, #0x0                   	// #0
 12c:	b	6c <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x6c>
 130:	mov	x26, #0x10                  	// #16
 134:	b	58 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x58>
 138:	cmp	x0, x3
 13c:	csel	x0, x0, x3, ls  // ls = plast
 140:	lsl	x26, x0, #4
 144:	b	58 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x58>
 148:	adrp	x0, 0 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 14c:	add	x0, x0, #0x0
 150:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorIPN4llvm6RecordESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x3, #0xfffffffffffffff     	// #1152921504606846975
   8:	mov	x29, sp
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	mov	x23, x1
  18:	ldp	x24, x21, [x0]
  1c:	stp	x19, x20, [sp, #16]
  20:	stp	x25, x26, [sp, #64]
  24:	str	x27, [sp, #80]
  28:	sub	x1, x21, x24
  2c:	cmp	x3, x1, asr #3
  30:	b.eq	10c <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x10c>  // b.none
  34:	mov	x19, x0
  38:	mov	x22, x2
  3c:	asr	x0, x1, #3
  40:	sub	x26, x23, x24
  44:	cbz	x0, 104 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x104>
  48:	cmp	x0, x0, lsl #1
  4c:	mov	x25, #0x7ffffffffffffff8    	// #9223372036854775800
  50:	lsl	x0, x0, #1
  54:	b.ls	dc <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xdc>  // b.plast
  58:	mov	x0, x25
  5c:	bl	0 <_Znwm>
  60:	mov	x20, x0
  64:	add	x25, x0, x25
  68:	ldr	x0, [x22]
  6c:	add	x22, x26, #0x8
  70:	str	x0, [x20, x26]
  74:	sub	x21, x21, x23
  78:	add	x22, x20, x22
  7c:	cmp	x26, #0x0
  80:	add	x27, x22, x21
  84:	b.gt	b8 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xb8>
  88:	cmp	x21, #0x0
  8c:	b.gt	ec <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xec>
  90:	cbnz	x24, d0 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xd0>
  94:	ldp	x21, x22, [sp, #32]
  98:	ldp	x23, x24, [sp, #48]
  9c:	stp	x20, x27, [x19]
  a0:	str	x25, [x19, #16]
  a4:	ldp	x19, x20, [sp, #16]
  a8:	ldp	x25, x26, [sp, #64]
  ac:	ldr	x27, [sp, #80]
  b0:	ldp	x29, x30, [sp], #96
  b4:	ret
  b8:	mov	x2, x26
  bc:	mov	x1, x24
  c0:	mov	x0, x20
  c4:	bl	0 <memmove>
  c8:	cmp	x21, #0x0
  cc:	b.gt	ec <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xec>
  d0:	mov	x0, x24
  d4:	bl	0 <_ZdlPv>
  d8:	b	94 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x94>
  dc:	cbnz	x0, 118 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x118>
  e0:	mov	x25, #0x0                   	// #0
  e4:	mov	x20, #0x0                   	// #0
  e8:	b	68 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x68>
  ec:	mov	x2, x21
  f0:	mov	x1, x23
  f4:	mov	x0, x22
  f8:	bl	0 <memcpy>
  fc:	cbz	x24, 94 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x94>
 100:	b	d0 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xd0>
 104:	mov	x25, #0x8                   	// #8
 108:	b	58 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x58>
 10c:	adrp	x0, 0 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 110:	add	x0, x0, #0x0
 114:	bl	0 <_ZSt20__throw_length_errorPKc>
 118:	cmp	x0, x3
 11c:	csel	x0, x0, x3, ls  // ls = plast
 120:	lsl	x25, x0, #3
 124:	b	58 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x58>

Disassembly of section .text._ZNSt6vectorIPN4llvm6RecordESaIS2_EE12emplace_backIJS2_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE12emplace_backIJS2_EEEvDpOT_>:
   0:	ldp	x3, x2, [x0, #8]
   4:	mov	x4, x0
   8:	cmp	x3, x2
   c:	b.eq	20 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE12emplace_backIJS2_EEEvDpOT_+0x20>  // b.none
  10:	ldr	x0, [x1]
  14:	str	x0, [x3], #8
  18:	str	x3, [x4, #8]
  1c:	ret
  20:	mov	x2, x1
  24:	mov	x1, x3
  28:	b	0 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE12emplace_backIJS2_EEEvDpOT_>

Disassembly of section .text._ZNSt6vectorIlSaIlEE17_M_realloc_insertIJlEEEvN9__gnu_cxx17__normal_iteratorIPlS1_EEDpOT_:

0000000000000000 <_ZNSt6vectorIlSaIlEE17_M_realloc_insertIJlEEEvN9__gnu_cxx17__normal_iteratorIPlS1_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x3, #0xfffffffffffffff     	// #1152921504606846975
   8:	mov	x29, sp
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	mov	x23, x1
  18:	ldp	x24, x21, [x0]
  1c:	stp	x19, x20, [sp, #16]
  20:	stp	x25, x26, [sp, #64]
  24:	str	x27, [sp, #80]
  28:	sub	x1, x21, x24
  2c:	cmp	x3, x1, asr #3
  30:	b.eq	10c <_ZNSt6vectorIlSaIlEE17_M_realloc_insertIJlEEEvN9__gnu_cxx17__normal_iteratorIPlS1_EEDpOT_+0x10c>  // b.none
  34:	mov	x19, x0
  38:	mov	x22, x2
  3c:	asr	x0, x1, #3
  40:	sub	x26, x23, x24
  44:	cbz	x0, 104 <_ZNSt6vectorIlSaIlEE17_M_realloc_insertIJlEEEvN9__gnu_cxx17__normal_iteratorIPlS1_EEDpOT_+0x104>
  48:	cmp	x0, x0, lsl #1
  4c:	mov	x25, #0x7ffffffffffffff8    	// #9223372036854775800
  50:	lsl	x0, x0, #1
  54:	b.ls	dc <_ZNSt6vectorIlSaIlEE17_M_realloc_insertIJlEEEvN9__gnu_cxx17__normal_iteratorIPlS1_EEDpOT_+0xdc>  // b.plast
  58:	mov	x0, x25
  5c:	bl	0 <_Znwm>
  60:	mov	x20, x0
  64:	add	x25, x0, x25
  68:	ldr	x0, [x22]
  6c:	add	x22, x26, #0x8
  70:	str	x0, [x20, x26]
  74:	sub	x21, x21, x23
  78:	add	x22, x20, x22
  7c:	cmp	x26, #0x0
  80:	add	x27, x22, x21
  84:	b.gt	b8 <_ZNSt6vectorIlSaIlEE17_M_realloc_insertIJlEEEvN9__gnu_cxx17__normal_iteratorIPlS1_EEDpOT_+0xb8>
  88:	cmp	x21, #0x0
  8c:	b.gt	ec <_ZNSt6vectorIlSaIlEE17_M_realloc_insertIJlEEEvN9__gnu_cxx17__normal_iteratorIPlS1_EEDpOT_+0xec>
  90:	cbnz	x24, d0 <_ZNSt6vectorIlSaIlEE17_M_realloc_insertIJlEEEvN9__gnu_cxx17__normal_iteratorIPlS1_EEDpOT_+0xd0>
  94:	ldp	x21, x22, [sp, #32]
  98:	ldp	x23, x24, [sp, #48]
  9c:	stp	x20, x27, [x19]
  a0:	str	x25, [x19, #16]
  a4:	ldp	x19, x20, [sp, #16]
  a8:	ldp	x25, x26, [sp, #64]
  ac:	ldr	x27, [sp, #80]
  b0:	ldp	x29, x30, [sp], #96
  b4:	ret
  b8:	mov	x2, x26
  bc:	mov	x1, x24
  c0:	mov	x0, x20
  c4:	bl	0 <memmove>
  c8:	cmp	x21, #0x0
  cc:	b.gt	ec <_ZNSt6vectorIlSaIlEE17_M_realloc_insertIJlEEEvN9__gnu_cxx17__normal_iteratorIPlS1_EEDpOT_+0xec>
  d0:	mov	x0, x24
  d4:	bl	0 <_ZdlPv>
  d8:	b	94 <_ZNSt6vectorIlSaIlEE17_M_realloc_insertIJlEEEvN9__gnu_cxx17__normal_iteratorIPlS1_EEDpOT_+0x94>
  dc:	cbnz	x0, 118 <_ZNSt6vectorIlSaIlEE17_M_realloc_insertIJlEEEvN9__gnu_cxx17__normal_iteratorIPlS1_EEDpOT_+0x118>
  e0:	mov	x25, #0x0                   	// #0
  e4:	mov	x20, #0x0                   	// #0
  e8:	b	68 <_ZNSt6vectorIlSaIlEE17_M_realloc_insertIJlEEEvN9__gnu_cxx17__normal_iteratorIPlS1_EEDpOT_+0x68>
  ec:	mov	x2, x21
  f0:	mov	x1, x23
  f4:	mov	x0, x22
  f8:	bl	0 <memcpy>
  fc:	cbz	x24, 94 <_ZNSt6vectorIlSaIlEE17_M_realloc_insertIJlEEEvN9__gnu_cxx17__normal_iteratorIPlS1_EEDpOT_+0x94>
 100:	b	d0 <_ZNSt6vectorIlSaIlEE17_M_realloc_insertIJlEEEvN9__gnu_cxx17__normal_iteratorIPlS1_EEDpOT_+0xd0>
 104:	mov	x25, #0x8                   	// #8
 108:	b	58 <_ZNSt6vectorIlSaIlEE17_M_realloc_insertIJlEEEvN9__gnu_cxx17__normal_iteratorIPlS1_EEDpOT_+0x58>
 10c:	adrp	x0, 0 <_ZNSt6vectorIlSaIlEE17_M_realloc_insertIJlEEEvN9__gnu_cxx17__normal_iteratorIPlS1_EEDpOT_>
 110:	add	x0, x0, #0x0
 114:	bl	0 <_ZSt20__throw_length_errorPKc>
 118:	cmp	x0, x3
 11c:	csel	x0, x0, x3, ls  // ls = plast
 120:	lsl	x25, x0, #3
 124:	b	58 <_ZNSt6vectorIlSaIlEE17_M_realloc_insertIJlEEEvN9__gnu_cxx17__normal_iteratorIPlS1_EEDpOT_+0x58>

Disassembly of section .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag:

0000000000000000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	cmp	x2, #0x0
   8:	ccmp	x1, #0x0, #0x0, ne  // ne = any
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	str	x21, [sp, #32]
  18:	b.eq	c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xc8>  // b.none
  1c:	sub	x19, x2, x1
  20:	str	x19, [sp, #56]
  24:	mov	x21, x1
  28:	mov	x20, x0
  2c:	cmp	x19, #0xf
  30:	b.hi	84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x84>  // b.pmore
  34:	cmp	x19, #0x1
  38:	ldr	x0, [x0]
  3c:	b.ne	68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x68>  // b.any
  40:	ldrb	w1, [x1]
  44:	strb	w1, [x0]
  48:	ldr	x0, [x20]
  4c:	ldr	x19, [sp, #56]
  50:	str	x19, [x20, #8]
  54:	strb	wzr, [x0, x19]
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldr	x21, [sp, #32]
  60:	ldp	x29, x30, [sp], #64
  64:	ret
  68:	cbnz	x19, 9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x9c>
  6c:	str	x19, [x20, #8]
  70:	strb	wzr, [x0, x19]
  74:	ldp	x19, x20, [sp, #16]
  78:	ldr	x21, [sp, #32]
  7c:	ldp	x29, x30, [sp], #64
  80:	ret
  84:	add	x1, sp, #0x38
  88:	mov	x2, #0x0                   	// #0
  8c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  90:	str	x0, [x20]
  94:	ldr	x1, [sp, #56]
  98:	str	x1, [x20, #16]
  9c:	mov	x2, x19
  a0:	mov	x1, x21
  a4:	bl	0 <memcpy>
  a8:	ldr	x0, [x20]
  ac:	ldr	x19, [sp, #56]
  b0:	str	x19, [x20, #8]
  b4:	strb	wzr, [x0, x19]
  b8:	ldp	x19, x20, [sp, #16]
  bc:	ldr	x21, [sp, #32]
  c0:	ldp	x29, x30, [sp], #64
  c4:	ret
  c8:	adrp	x0, 0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
  cc:	add	x0, x0, #0x0
  d0:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNK4llvm8CodeInit19getAsUnquotedStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm8CodeInit19getAsUnquotedStringB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	add	x3, x8, #0x10
   8:	mov	x29, sp
   c:	ldr	x1, [x0, #24]
  10:	str	x19, [sp, #16]
  14:	mov	x19, x8
  18:	cbz	x1, 44 <_ZNK4llvm8CodeInit19getAsUnquotedStringB5cxx11Ev+0x44>
  1c:	ldr	x2, [x0, #32]
  20:	str	x3, [x8]
  24:	mov	x0, x8
  28:	mov	w3, #0x0                   	// #0
  2c:	add	x2, x1, x2
  30:	bl	0 <_ZNK4llvm8CodeInit19getAsUnquotedStringB5cxx11Ev>
  34:	mov	x0, x19
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret
  44:	stp	x3, xzr, [x8]
  48:	mov	x0, x19
  4c:	strb	wzr, [x8, #16]
  50:	ldr	x19, [sp, #16]
  54:	ldp	x29, x30, [sp], #32
  58:	ret

Disassembly of section .text._ZNK4llvm10StringInit19getAsUnquotedStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm10StringInit19getAsUnquotedStringB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	add	x3, x8, #0x10
   8:	mov	x29, sp
   c:	ldr	x1, [x0, #24]
  10:	str	x19, [sp, #16]
  14:	mov	x19, x8
  18:	cbz	x1, 44 <_ZNK4llvm10StringInit19getAsUnquotedStringB5cxx11Ev+0x44>
  1c:	ldr	x2, [x0, #32]
  20:	str	x3, [x8]
  24:	mov	x0, x8
  28:	mov	w3, #0x0                   	// #0
  2c:	add	x2, x1, x2
  30:	bl	0 <_ZNK4llvm10StringInit19getAsUnquotedStringB5cxx11Ev>
  34:	mov	x0, x19
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret
  44:	stp	x3, xzr, [x8]
  48:	mov	x0, x19
  4c:	strb	wzr, [x8, #16]
  50:	ldr	x19, [sp, #16]
  54:	ldp	x29, x30, [sp], #32
  58:	ret

Disassembly of section .text._ZNK4llvm9FieldInit11getAsStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-144]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	mov	x21, x0
  10:	add	x22, sp, #0x30
  14:	ldr	x0, [x0, #24]
  18:	stp	x19, x20, [sp, #16]
  1c:	mov	x19, x8
  20:	mov	x8, x22
  24:	ldr	x1, [x0]
  28:	ldr	x1, [x1, #40]
  2c:	blr	x1
  30:	ldr	x1, [sp, #56]
  34:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
  38:	cmp	x1, x0
  3c:	b.eq	1e8 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x1e8>  // b.none
  40:	adrp	x1, 0 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev>
  44:	add	x1, x1, #0x0
  48:	mov	x2, #0x1                   	// #1
  4c:	mov	x0, x22
  50:	add	x20, sp, #0x50
  54:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
  58:	mov	x1, x0
  5c:	add	x2, x20, #0x10
  60:	str	x2, [sp, #80]
  64:	ldr	x2, [x1], #16
  68:	cmp	x2, x1
  6c:	b.eq	1dc <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x1dc>  // b.none
  70:	ldr	x3, [x0, #16]
  74:	str	x2, [sp, #80]
  78:	str	x3, [sp, #96]
  7c:	strb	wzr, [x0, #16]
  80:	ldr	x2, [x0, #8]
  84:	str	x2, [sp, #88]
  88:	ldr	x2, [x21, #32]
  8c:	stp	x1, xzr, [x0]
  90:	ldr	x1, [x2, #24]
  94:	cbz	x1, 1c4 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x1c4>
  98:	add	x21, sp, #0x70
  9c:	mov	w3, #0x0                   	// #0
  a0:	add	x4, x21, #0x10
  a4:	mov	x0, x21
  a8:	ldr	x2, [x2, #32]
  ac:	str	x4, [sp, #112]
  b0:	add	x2, x1, x2
  b4:	bl	0 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev>
  b8:	ldp	x1, x2, [sp, #112]
  bc:	add	x0, x20, #0x10
  c0:	ldp	x3, x4, [sp, #80]
  c4:	mov	x6, #0xf                   	// #15
  c8:	cmp	x3, x0
  cc:	add	x5, x4, x2
  d0:	ldr	x0, [sp, #96]
  d4:	csel	x0, x0, x6, ne  // ne = any
  d8:	cmp	x5, x0
  dc:	b.ls	f8 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0xf8>  // b.plast
  e0:	ldr	x0, [sp, #128]
  e4:	add	x7, x21, #0x10
  e8:	cmp	x1, x7
  ec:	csel	x0, x0, x6, ne  // ne = any
  f0:	cmp	x5, x0
  f4:	b.ls	18c <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x18c>  // b.plast
  f8:	mov	x0, x20
  fc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 100:	mov	x1, x0
 104:	add	x2, x19, #0x10
 108:	mov	x0, x1
 10c:	str	x2, [x19]
 110:	ldr	x2, [x0], #16
 114:	cmp	x2, x0
 118:	b.eq	1b8 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x1b8>  // b.none
 11c:	ldr	x3, [x1, #16]
 120:	str	x2, [x19]
 124:	str	x3, [x19, #16]
 128:	str	x0, [x1]
 12c:	add	x21, x21, #0x10
 130:	ldr	x0, [x1, #8]
 134:	str	x0, [x19, #8]
 138:	ldr	x0, [sp, #112]
 13c:	str	xzr, [x1, #8]
 140:	strb	wzr, [x1, #16]
 144:	cmp	x0, x21
 148:	b.eq	150 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x150>  // b.none
 14c:	bl	0 <_ZdlPv>
 150:	ldr	x0, [sp, #80]
 154:	add	x20, x20, #0x10
 158:	cmp	x0, x20
 15c:	b.eq	164 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x164>  // b.none
 160:	bl	0 <_ZdlPv>
 164:	ldr	x0, [sp, #48]
 168:	add	x22, x22, #0x10
 16c:	cmp	x0, x22
 170:	b.eq	178 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x178>  // b.none
 174:	bl	0 <_ZdlPv>
 178:	mov	x0, x19
 17c:	ldp	x19, x20, [sp, #16]
 180:	ldp	x21, x22, [sp, #32]
 184:	ldp	x29, x30, [sp], #144
 188:	ret
 18c:	mov	x1, #0x0                   	// #0
 190:	mov	x2, #0x0                   	// #0
 194:	mov	x0, x21
 198:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
 19c:	mov	x1, x0
 1a0:	add	x2, x19, #0x10
 1a4:	mov	x0, x1
 1a8:	str	x2, [x19]
 1ac:	ldr	x2, [x0], #16
 1b0:	cmp	x2, x0
 1b4:	b.ne	11c <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x11c>  // b.any
 1b8:	ldp	x2, x3, [x1, #16]
 1bc:	stp	x2, x3, [x19, #16]
 1c0:	b	128 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x128>
 1c4:	add	x21, sp, #0x70
 1c8:	mov	x2, #0x0                   	// #0
 1cc:	add	x1, x21, #0x10
 1d0:	stp	x1, xzr, [sp, #112]
 1d4:	strb	wzr, [sp, #128]
 1d8:	b	bc <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0xbc>
 1dc:	ldp	x2, x3, [x0, #16]
 1e0:	stp	x2, x3, [sp, #96]
 1e4:	b	7c <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x7c>
 1e8:	adrp	x0, 0 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev>
 1ec:	add	x0, x0, #0x0
 1f0:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNK4llvm8CodeInit11getAsStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	ldr	x1, [x0, #24]
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x8
  14:	str	x21, [sp, #32]
  18:	cbz	x1, 12c <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0x12c>
  1c:	add	x20, sp, #0x30
  20:	mov	w3, #0x0                   	// #0
  24:	add	x4, x20, #0x10
  28:	str	x4, [sp, #48]
  2c:	ldr	x2, [x0, #32]
  30:	mov	x0, x20
  34:	add	x2, x1, x2
  38:	bl	0 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev>
  3c:	mov	x1, #0x0                   	// #0
  40:	mov	x2, #0x0                   	// #0
  44:	mov	x0, x20
  48:	add	x21, sp, #0x50
  4c:	adrp	x3, 0 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev>
  50:	mov	x4, #0x2                   	// #2
  54:	add	x3, x3, #0x0
  58:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
  5c:	mov	x1, x0
  60:	add	x2, x21, #0x10
  64:	str	x2, [sp, #80]
  68:	ldr	x2, [x1], #16
  6c:	cmp	x2, x1
  70:	b.eq	140 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0x140>  // b.none
  74:	ldr	x3, [x0, #16]
  78:	str	x2, [sp, #80]
  7c:	str	x3, [sp, #96]
  80:	ldr	x2, [x0, #8]
  84:	str	x2, [sp, #88]
  88:	stp	x1, xzr, [x0]
  8c:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
  90:	ldr	x1, [sp, #88]
  94:	strb	wzr, [x0, #16]
  98:	sub	x0, x2, x1
  9c:	cmp	x0, #0x1
  a0:	b.ls	158 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0x158>  // b.plast
  a4:	mov	x2, #0x2                   	// #2
  a8:	mov	x0, x21
  ac:	adrp	x1, 0 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev>
  b0:	add	x1, x1, #0x0
  b4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
  b8:	mov	x1, x0
  bc:	add	x2, x19, #0x10
  c0:	str	x2, [x19]
  c4:	ldr	x2, [x0], #16
  c8:	cmp	x2, x0
  cc:	b.eq	14c <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0x14c>  // b.none
  d0:	ldr	x3, [x1, #16]
  d4:	str	x2, [x19]
  d8:	str	x3, [x19, #16]
  dc:	str	x0, [x1]
  e0:	add	x21, x21, #0x10
  e4:	ldr	x0, [x1, #8]
  e8:	str	x0, [x19, #8]
  ec:	ldr	x0, [sp, #80]
  f0:	str	xzr, [x1, #8]
  f4:	strb	wzr, [x1, #16]
  f8:	cmp	x0, x21
  fc:	b.eq	104 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0x104>  // b.none
 100:	bl	0 <_ZdlPv>
 104:	ldr	x0, [sp, #48]
 108:	add	x20, x20, #0x10
 10c:	cmp	x0, x20
 110:	b.eq	118 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0x118>  // b.none
 114:	bl	0 <_ZdlPv>
 118:	mov	x0, x19
 11c:	ldp	x19, x20, [sp, #16]
 120:	ldr	x21, [sp, #32]
 124:	ldp	x29, x30, [sp], #112
 128:	ret
 12c:	add	x20, sp, #0x30
 130:	strb	wzr, [sp, #64]
 134:	add	x0, x20, #0x10
 138:	stp	x0, xzr, [sp, #48]
 13c:	b	3c <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0x3c>
 140:	ldp	x2, x3, [x0, #16]
 144:	stp	x2, x3, [sp, #96]
 148:	b	80 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0x80>
 14c:	ldp	x2, x3, [x1, #16]
 150:	stp	x2, x3, [x19, #16]
 154:	b	dc <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0xdc>
 158:	adrp	x0, 0 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev>
 15c:	add	x0, x0, #0x0
 160:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNK4llvm10StringInit11getAsStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	ldr	x1, [x0, #24]
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x8
  14:	stp	x21, x22, [sp, #32]
  18:	cbz	x1, 124 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0x124>
  1c:	add	x20, sp, #0x30
  20:	mov	w3, #0x0                   	// #0
  24:	add	x4, x20, #0x10
  28:	str	x4, [sp, #48]
  2c:	ldr	x2, [x0, #32]
  30:	mov	x0, x20
  34:	add	x2, x1, x2
  38:	bl	0 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev>
  3c:	mov	x1, #0x0                   	// #0
  40:	mov	x2, #0x0                   	// #0
  44:	mov	x0, x20
  48:	add	x21, sp, #0x50
  4c:	adrp	x22, 0 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev>
  50:	mov	x4, #0x1                   	// #1
  54:	add	x3, x22, #0x0
  58:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
  5c:	mov	x1, x0
  60:	add	x2, x21, #0x10
  64:	str	x2, [sp, #80]
  68:	ldr	x2, [x1], #16
  6c:	cmp	x2, x1
  70:	b.eq	138 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0x138>  // b.none
  74:	ldr	x3, [x0, #16]
  78:	str	x2, [sp, #80]
  7c:	str	x3, [sp, #96]
  80:	ldr	x2, [x0, #8]
  84:	str	x2, [sp, #88]
  88:	stp	x1, xzr, [x0]
  8c:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
  90:	ldr	x1, [sp, #88]
  94:	strb	wzr, [x0, #16]
  98:	cmp	x1, x2
  9c:	b.eq	150 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0x150>  // b.none
  a0:	add	x1, x22, #0x0
  a4:	mov	x2, #0x1                   	// #1
  a8:	mov	x0, x21
  ac:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
  b0:	add	x2, x19, #0x10
  b4:	str	x2, [x19]
  b8:	mov	x1, x0
  bc:	ldr	x2, [x0], #16
  c0:	cmp	x2, x0
  c4:	b.eq	144 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0x144>  // b.none
  c8:	ldr	x3, [x1, #16]
  cc:	str	x2, [x19]
  d0:	str	x3, [x19, #16]
  d4:	str	x0, [x1]
  d8:	add	x21, x21, #0x10
  dc:	ldr	x0, [x1, #8]
  e0:	str	x0, [x19, #8]
  e4:	ldr	x0, [sp, #80]
  e8:	str	xzr, [x1, #8]
  ec:	strb	wzr, [x1, #16]
  f0:	cmp	x0, x21
  f4:	b.eq	fc <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0xfc>  // b.none
  f8:	bl	0 <_ZdlPv>
  fc:	ldr	x0, [sp, #48]
 100:	add	x20, x20, #0x10
 104:	cmp	x0, x20
 108:	b.eq	110 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0x110>  // b.none
 10c:	bl	0 <_ZdlPv>
 110:	mov	x0, x19
 114:	ldp	x19, x20, [sp, #16]
 118:	ldp	x21, x22, [sp, #32]
 11c:	ldp	x29, x30, [sp], #112
 120:	ret
 124:	add	x20, sp, #0x30
 128:	strb	wzr, [sp, #64]
 12c:	add	x0, x20, #0x10
 130:	stp	x0, xzr, [sp, #48]
 134:	b	3c <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0x3c>
 138:	ldp	x2, x3, [x0, #16]
 13c:	stp	x2, x3, [sp, #96]
 140:	b	80 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0x80>
 144:	ldp	x2, x3, [x1, #16]
 148:	stp	x2, x3, [x19, #16]
 14c:	b	d4 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0xd4>
 150:	adrp	x0, 0 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev>
 154:	add	x0, x0, #0x0
 158:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNK4llvm7VarInit11getAsStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm7VarInit11getAsStringB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x8
  10:	bl	3098 <_ZNK4llvm7VarInit7getNameEv>
  14:	mov	x2, x1
  18:	mov	x1, x0
  1c:	add	x0, x19, #0x10
  20:	str	x0, [x19]
  24:	cbz	x1, 48 <_ZNK4llvm7VarInit11getAsStringB5cxx11Ev+0x48>
  28:	mov	x0, x19
  2c:	add	x2, x1, x2
  30:	mov	w3, #0x0                   	// #0
  34:	bl	0 <_ZNK4llvm7VarInit11getAsStringB5cxx11Ev>
  38:	mov	x0, x19
  3c:	ldr	x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	ret
  48:	str	xzr, [x19, #8]
  4c:	mov	x0, x19
  50:	strb	wzr, [x19, #16]
  54:	ldr	x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	mov	x22, x1
  10:	mov	x21, x0
  14:	mov	x0, #0x48                  	// #72
  18:	stp	x19, x20, [sp, #16]
  1c:	stp	x23, x24, [sp, #48]
  20:	stp	x25, x26, [sp, #64]
  24:	stp	x27, x28, [sp, #80]
  28:	bl	0 <_Znwm>
  2c:	mov	x19, x0
  30:	ldr	x1, [x22]
  34:	cbz	x1, 23c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x23c>
  38:	ldr	x2, [x22, #8]
  3c:	add	x25, x0, #0x30
  40:	mov	w3, #0x0                   	// #0
  44:	add	x0, x0, #0x20
  48:	add	x2, x1, x2
  4c:	str	x25, [x19, #32]
  50:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_>
  54:	add	x24, x21, #0x8
  58:	ldr	x20, [x21, #16]
  5c:	ldr	x23, [x22, #16]
  60:	str	xzr, [x22, #16]
  64:	str	x23, [x19, #64]
  68:	cbz	x20, 260 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x260>
  6c:	ldp	x26, x28, [x19, #32]
  70:	mov	x22, #0xffffffff80000000    	// #-2147483648
  74:	nop
  78:	ldp	x1, x27, [x20, #32]
  7c:	mov	x0, x26
  80:	cmp	x28, x27
  84:	csel	x2, x28, x27, ls  // ls = plast
  88:	cbz	x2, 9c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x9c>
  8c:	stp	x1, x2, [sp, #96]
  90:	bl	0 <memcmp>
  94:	ldp	x1, x2, [sp, #96]
  98:	cbnz	w0, b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xb8>
  9c:	sub	x3, x28, x27
  a0:	mov	x4, #0x7fffffff            	// #2147483647
  a4:	mov	w0, w3
  a8:	cmp	x3, x4
  ac:	b.gt	d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xd0>
  b0:	cmp	x3, x22
  b4:	b.lt	bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xbc>  // b.tstop
  b8:	tbz	w0, #31, d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xd0>
  bc:	ldr	x0, [x20, #16]
  c0:	mov	w3, #0x1                   	// #1
  c4:	cbz	x0, dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xdc>
  c8:	mov	x20, x0
  cc:	b	78 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x78>
  d0:	ldr	x0, [x20, #24]
  d4:	mov	w3, #0x0                   	// #0
  d8:	cbnz	x0, c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xc8>
  dc:	mov	x22, x20
  e0:	cbnz	w3, 210 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x210>
  e4:	cbz	x2, f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xf8>
  e8:	mov	x0, x1
  ec:	mov	x1, x26
  f0:	bl	0 <memcmp>
  f4:	cbnz	w0, 114 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x114>
  f8:	sub	x0, x27, x28
  fc:	mov	x1, #0x7fffffff            	// #2147483647
 100:	cmp	x0, x1
 104:	b.gt	118 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x118>
 108:	mov	x1, #0xffffffff80000000    	// #-2147483648
 10c:	cmp	x0, x1
 110:	b.lt	1b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x1b8>  // b.tstop
 114:	tbnz	w0, #31, 1b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x1b8>
 118:	cbz	x23, 17c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x17c>
 11c:	ldr	x0, [x23, #88]
 120:	add	x1, x23, #0x68
 124:	add	x22, x23, #0x58
 128:	cmp	x0, x1
 12c:	b.eq	134 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x134>  // b.none
 130:	bl	0 <free>
 134:	ldr	x0, [x23, #72]
 138:	add	x21, x23, #0x48
 13c:	cmp	x22, x0
 140:	b.eq	148 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x148>  // b.none
 144:	bl	0 <free>
 148:	ldr	x0, [x23, #56]
 14c:	cmp	x21, x0
 150:	b.eq	158 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x158>  // b.none
 154:	bl	0 <free>
 158:	ldr	x0, [x23, #8]
 15c:	add	x1, x23, #0x18
 160:	cmp	x0, x1
 164:	b.eq	16c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x16c>  // b.none
 168:	bl	0 <free>
 16c:	mov	x0, x23
 170:	mov	x1, #0x80                  	// #128
 174:	bl	0 <_ZdlPvm>
 178:	ldr	x26, [x19, #32]
 17c:	cmp	x26, x25
 180:	b.eq	18c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x18c>  // b.none
 184:	mov	x0, x26
 188:	bl	0 <_ZdlPv>
 18c:	mov	x0, x19
 190:	bl	0 <_ZdlPv>
 194:	mov	x0, x20
 198:	mov	x1, #0x0                   	// #0
 19c:	ldp	x19, x20, [sp, #16]
 1a0:	ldp	x21, x22, [sp, #32]
 1a4:	ldp	x23, x24, [sp, #48]
 1a8:	ldp	x25, x26, [sp, #64]
 1ac:	ldp	x27, x28, [sp, #80]
 1b0:	ldp	x29, x30, [sp], #112
 1b4:	ret
 1b8:	cbz	x22, 2cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x2cc>
 1bc:	cmp	x24, x22
 1c0:	mov	w0, #0x1                   	// #1
 1c4:	b.ne	278 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x278>  // b.any
 1c8:	mov	x3, x24
 1cc:	mov	x2, x22
 1d0:	mov	x1, x19
 1d4:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
 1d8:	ldr	x2, [x21, #40]
 1dc:	mov	x3, #0x1                   	// #1
 1e0:	mov	x1, #0x0                   	// #0
 1e4:	mov	x0, x19
 1e8:	add	x2, x2, x3
 1ec:	str	x2, [x21, #40]
 1f0:	bfxil	x1, x3, #0, #8
 1f4:	ldp	x19, x20, [sp, #16]
 1f8:	ldp	x21, x22, [sp, #32]
 1fc:	ldp	x23, x24, [sp, #48]
 200:	ldp	x25, x26, [sp, #64]
 204:	ldp	x27, x28, [sp, #80]
 208:	ldp	x29, x30, [sp], #112
 20c:	ret
 210:	ldr	x0, [x21, #24]
 214:	cmp	x0, x20
 218:	b.eq	2c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x2c4>  // b.none
 21c:	mov	x0, x20
 220:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 224:	ldp	x1, x27, [x0, #32]
 228:	mov	x22, x20
 22c:	mov	x20, x0
 230:	cmp	x27, x28
 234:	csel	x2, x27, x28, ls  // ls = plast
 238:	b	e4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xe4>
 23c:	ldr	x20, [x21, #16]
 240:	add	x25, x0, #0x30
 244:	stp	x25, xzr, [x0, #32]
 248:	add	x24, x21, #0x8
 24c:	strb	wzr, [x0, #48]
 250:	ldr	x23, [x22, #16]
 254:	str	xzr, [x22, #16]
 258:	str	x23, [x19, #64]
 25c:	cbnz	x20, 6c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x6c>
 260:	ldr	x0, [x21, #24]
 264:	mov	x22, x24
 268:	cmp	x24, x0
 26c:	b.ne	2d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x2d8>  // b.any
 270:	mov	w0, #0x1                   	// #1
 274:	b	1c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x1c8>
 278:	ldr	x20, [x22, #40]
 27c:	cmp	x28, x20
 280:	csel	x2, x28, x20, ls  // ls = plast
 284:	cbz	x2, 298 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x298>
 288:	ldr	x1, [x22, #32]
 28c:	mov	x0, x26
 290:	bl	0 <memcmp>
 294:	cbnz	w0, 2bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x2bc>
 298:	sub	x28, x28, x20
 29c:	mov	x1, #0x7fffffff            	// #2147483647
 2a0:	mov	w0, #0x0                   	// #0
 2a4:	cmp	x28, x1
 2a8:	b.gt	1c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x1c8>
 2ac:	mov	x0, #0xffffffff80000000    	// #-2147483648
 2b0:	cmp	x28, x0
 2b4:	b.lt	270 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x270>  // b.tstop
 2b8:	mov	w0, w28
 2bc:	lsr	w0, w0, #31
 2c0:	b	1c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x1c8>
 2c4:	mov	x22, x20
 2c8:	b	1bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x1bc>
 2cc:	mov	x20, #0x0                   	// #0
 2d0:	cbnz	x23, 11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x11c>
 2d4:	b	17c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x17c>
 2d8:	mov	x20, x24
 2dc:	ldp	x26, x28, [x19, #32]
 2e0:	b	21c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x21c>

Disassembly of section .text._ZNK4llvm8BitRecTy11getAsStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm8BitRecTy11getAsStringB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	add	x4, x8, #0x10
   8:	mov	x0, x8
   c:	mov	x29, sp
  10:	str	x19, [sp, #16]
  14:	mov	w3, #0x0                   	// #0
  18:	str	x4, [x8]
  1c:	mov	x19, x8
  20:	adrp	x1, 0 <_ZNK4llvm8BitRecTy11getAsStringB5cxx11Ev>
  24:	adrp	x2, 0 <_ZNK4llvm8BitRecTy11getAsStringB5cxx11Ev>
  28:	add	x1, x1, #0x0
  2c:	add	x2, x2, #0x0
  30:	bl	0 <_ZNK4llvm8BitRecTy11getAsStringB5cxx11Ev>
  34:	mov	x0, x19
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

Disassembly of section .text._ZNK4llvm9CodeRecTy11getAsStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm9CodeRecTy11getAsStringB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	add	x4, x8, #0x10
   8:	mov	x0, x8
   c:	mov	x29, sp
  10:	str	x19, [sp, #16]
  14:	mov	w3, #0x0                   	// #0
  18:	str	x4, [x8]
  1c:	mov	x19, x8
  20:	adrp	x1, 0 <_ZNK4llvm9CodeRecTy11getAsStringB5cxx11Ev>
  24:	adrp	x2, 0 <_ZNK4llvm9CodeRecTy11getAsStringB5cxx11Ev>
  28:	add	x1, x1, #0x0
  2c:	add	x2, x2, #0x0
  30:	bl	0 <_ZNK4llvm9CodeRecTy11getAsStringB5cxx11Ev>
  34:	mov	x0, x19
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

Disassembly of section .text._ZNK4llvm8IntRecTy11getAsStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm8IntRecTy11getAsStringB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	add	x4, x8, #0x10
   8:	mov	x0, x8
   c:	mov	x29, sp
  10:	str	x19, [sp, #16]
  14:	mov	w3, #0x0                   	// #0
  18:	str	x4, [x8]
  1c:	mov	x19, x8
  20:	adrp	x1, 0 <_ZNK4llvm8IntRecTy11getAsStringB5cxx11Ev>
  24:	adrp	x2, 0 <_ZNK4llvm8IntRecTy11getAsStringB5cxx11Ev>
  28:	add	x1, x1, #0x0
  2c:	add	x2, x2, #0x0
  30:	bl	0 <_ZNK4llvm8IntRecTy11getAsStringB5cxx11Ev>
  34:	mov	x0, x19
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

Disassembly of section .text._ZNK4llvm9UnsetInit11getAsStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm9UnsetInit11getAsStringB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	add	x4, x8, #0x10
   8:	mov	x0, x8
   c:	mov	x29, sp
  10:	str	x19, [sp, #16]
  14:	mov	w3, #0x0                   	// #0
  18:	str	x4, [x8]
  1c:	mov	x19, x8
  20:	adrp	x1, 0 <_ZNK4llvm9UnsetInit11getAsStringB5cxx11Ev>
  24:	adrp	x2, 0 <_ZNK4llvm9UnsetInit11getAsStringB5cxx11Ev>
  28:	add	x1, x1, #0x0
  2c:	add	x2, x2, #0x0
  30:	bl	0 <_ZNK4llvm9UnsetInit11getAsStringB5cxx11Ev>
  34:	mov	x0, x19
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

Disassembly of section .text._ZNK4llvm7BitInit11getAsStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm7BitInit11getAsStringB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	add	x3, x8, #0x10
   8:	adrp	x2, 0 <_ZNK4llvm7BitInit11getAsStringB5cxx11Ev>
   c:	mov	x29, sp
  10:	ldrb	w0, [x0, #24]
  14:	add	x2, x2, #0x0
  18:	str	x19, [sp, #16]
  1c:	adrp	x1, 0 <_ZNK4llvm7BitInit11getAsStringB5cxx11Ev>
  20:	cmp	w0, #0x0
  24:	add	x1, x1, #0x0
  28:	str	x3, [x8]
  2c:	csel	x1, x1, x2, ne  // ne = any
  30:	mov	x19, x8
  34:	mov	x0, x8
  38:	add	x2, x1, #0x1
  3c:	mov	w3, #0x0                   	// #0
  40:	bl	0 <_ZNK4llvm7BitInit11getAsStringB5cxx11Ev>
  44:	mov	x0, x19
  48:	ldr	x19, [sp, #16]
  4c:	ldp	x29, x30, [sp], #32
  50:	ret

Disassembly of section .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag:

0000000000000000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	cmp	x2, #0x0
   8:	ccmp	x1, #0x0, #0x0, ne  // ne = any
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	str	x21, [sp, #32]
  18:	b.eq	c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0xc8>  // b.none
  1c:	sub	x19, x2, x1
  20:	str	x19, [sp, #56]
  24:	mov	x21, x1
  28:	mov	x20, x0
  2c:	cmp	x19, #0xf
  30:	b.hi	84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x84>  // b.pmore
  34:	cmp	x19, #0x1
  38:	ldr	x0, [x0]
  3c:	b.ne	68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x68>  // b.any
  40:	ldrb	w1, [x1]
  44:	strb	w1, [x0]
  48:	ldr	x0, [x20]
  4c:	ldr	x19, [sp, #56]
  50:	str	x19, [x20, #8]
  54:	strb	wzr, [x0, x19]
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldr	x21, [sp, #32]
  60:	ldp	x29, x30, [sp], #64
  64:	ret
  68:	cbnz	x19, 9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x9c>
  6c:	str	x19, [x20, #8]
  70:	strb	wzr, [x0, x19]
  74:	ldp	x19, x20, [sp, #16]
  78:	ldr	x21, [sp, #32]
  7c:	ldp	x29, x30, [sp], #64
  80:	ret
  84:	add	x1, sp, #0x38
  88:	mov	x2, #0x0                   	// #0
  8c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  90:	str	x0, [x20]
  94:	ldr	x1, [sp, #56]
  98:	str	x1, [x20, #16]
  9c:	mov	x2, x19
  a0:	mov	x1, x21
  a4:	bl	0 <memcpy>
  a8:	ldr	x0, [x20]
  ac:	ldr	x19, [sp, #56]
  b0:	str	x19, [x20, #8]
  b4:	strb	wzr, [x0, x19]
  b8:	ldp	x19, x20, [sp, #16]
  bc:	ldr	x21, [sp, #32]
  c0:	ldp	x29, x30, [sp], #64
  c4:	ret
  c8:	adrp	x0, 0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>
  cc:	add	x0, x0, #0x0
  d0:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E15LookupBucketForIS3_EEbRKT_RPKSA_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E15LookupBucketForIS3_EEbRKT_RPKSA_>:
   0:	ldr	w4, [x0, #24]
   4:	cbz	w4, 58 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E15LookupBucketForIS3_EEbRKT_RPKSA_+0x58>
   8:	ldr	x5, [x1]
   c:	mov	x3, x0
  10:	cmn	x5, #0x8
  14:	cset	w0, ne  // ne = any
  18:	cmn	x5, #0x10
  1c:	csel	w0, w0, wzr, ne  // ne = any
  20:	cbz	w0, b8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E15LookupBucketForIS3_EEbRKT_RPKSA_+0xb8>
  24:	lsr	w1, w5, #4
  28:	sub	w4, w4, #0x1
  2c:	eor	w1, w1, w5, lsr #9
  30:	mov	w7, #0x18                  	// #24
  34:	and	w1, w1, w4
  38:	ldr	x3, [x3, #8]
  3c:	umull	x6, w1, w7
  40:	add	x8, x3, x6
  44:	ldr	x6, [x3, x6]
  48:	cmp	x5, x6
  4c:	b.ne	64 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E15LookupBucketForIS3_EEbRKT_RPKSA_+0x64>  // b.any
  50:	str	x8, [x2]
  54:	ret
  58:	mov	w0, #0x0                   	// #0
  5c:	str	xzr, [x2]
  60:	ret
  64:	mov	w10, #0x1                   	// #1
  68:	mov	x9, #0x0                   	// #0
  6c:	cmn	x6, #0x8
  70:	b.ne	88 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E15LookupBucketForIS3_EEbRKT_RPKSA_+0x88>  // b.any
  74:	cmp	x9, #0x0
  78:	mov	w0, #0x0                   	// #0
  7c:	csel	x9, x9, x8, ne  // ne = any
  80:	str	x9, [x2]
  84:	ret
  88:	add	w1, w10, w1
  8c:	cmp	x9, #0x0
  90:	and	w1, w4, w1
  94:	ccmn	x6, #0x10, #0x0, eq  // eq = none
  98:	csel	x9, x9, x8, ne  // ne = any
  9c:	add	w10, w10, #0x1
  a0:	umull	x6, w1, w7
  a4:	add	x8, x3, x6
  a8:	ldr	x6, [x3, x6]
  ac:	cmp	x5, x6
  b0:	b.eq	50 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E15LookupBucketForIS3_EEbRKT_RPKSA_+0x50>  // b.none
  b4:	b	6c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E15LookupBucketForIS3_EEbRKT_RPKSA_+0x6c>
  b8:	stp	x29, x30, [sp, #-16]!
  bc:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E15LookupBucketForIS3_EEbRKT_RPKSA_>
  c0:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E15LookupBucketForIS3_EEbRKT_RPKSA_>
  c4:	mov	x29, sp
  c8:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E15LookupBucketForIS3_EEbRKT_RPKSA_>
  cc:	add	x3, x3, #0x0
  d0:	add	x1, x1, #0x0
  d4:	add	x0, x0, #0x0
  d8:	mov	w2, #0x250                 	// #592
  dc:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E15LookupBucketForIS3_EEbRKT_RPKS9_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E15LookupBucketForIS3_EEbRKT_RPKS9_>:
   0:	ldr	w4, [x0, #24]
   4:	cbz	w4, 58 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E15LookupBucketForIS3_EEbRKT_RPKS9_+0x58>
   8:	ldr	x5, [x1]
   c:	mov	x3, x0
  10:	cmn	x5, #0x8
  14:	cset	w0, ne  // ne = any
  18:	cmn	x5, #0x10
  1c:	csel	w0, w0, wzr, ne  // ne = any
  20:	cbz	w0, b8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E15LookupBucketForIS3_EEbRKT_RPKS9_+0xb8>
  24:	lsr	w1, w5, #4
  28:	sub	w4, w4, #0x1
  2c:	eor	w1, w1, w5, lsr #9
  30:	ldr	x6, [x3, #8]
  34:	and	w7, w1, w4
  38:	mov	x1, x7
  3c:	ubfiz	x3, x7, #3, #28
  40:	ldr	x7, [x6, x7, lsl #3]
  44:	add	x3, x6, x3
  48:	cmp	x5, x7
  4c:	b.ne	64 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E15LookupBucketForIS3_EEbRKT_RPKS9_+0x64>  // b.any
  50:	str	x3, [x2]
  54:	ret
  58:	mov	w0, #0x0                   	// #0
  5c:	str	xzr, [x2]
  60:	ret
  64:	mov	w9, #0x1                   	// #1
  68:	mov	x8, #0x0                   	// #0
  6c:	cmn	x7, #0x8
  70:	b.ne	88 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E15LookupBucketForIS3_EEbRKT_RPKS9_+0x88>  // b.any
  74:	cmp	x8, #0x0
  78:	mov	w0, #0x0                   	// #0
  7c:	csel	x8, x8, x3, ne  // ne = any
  80:	str	x8, [x2]
  84:	ret
  88:	add	w1, w9, w1
  8c:	cmp	x8, #0x0
  90:	and	w10, w4, w1
  94:	ccmn	x7, #0x10, #0x0, eq  // eq = none
  98:	csel	x8, x8, x3, ne  // ne = any
  9c:	add	w9, w9, #0x1
  a0:	and	w1, w4, w1
  a4:	add	x3, x6, x10, lsl #3
  a8:	ldr	x7, [x6, x10, lsl #3]
  ac:	cmp	x5, x7
  b0:	b.eq	50 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E15LookupBucketForIS3_EEbRKT_RPKS9_+0x50>  // b.none
  b4:	b	6c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E15LookupBucketForIS3_EEbRKT_RPKS9_+0x6c>
  b8:	stp	x29, x30, [sp, #-16]!
  bc:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E15LookupBucketForIS3_EEbRKT_RPKS9_>
  c0:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E15LookupBucketForIS3_EEbRKT_RPKS9_>
  c4:	mov	x29, sp
  c8:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E15LookupBucketForIS3_EEbRKT_RPKS9_>
  cc:	add	x3, x3, #0x0
  d0:	add	x1, x1, #0x0
  d4:	add	x0, x0, #0x0
  d8:	mov	w2, #0x250                 	// #592
  dc:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE24_M_get_insert_unique_posERS1_:

0000000000000000 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE24_M_get_insert_unique_posERS1_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	ldr	x19, [x0, #16]
  14:	cbz	x19, 78 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE24_M_get_insert_unique_posERS1_+0x78>
  18:	ldr	x5, [x1]
  1c:	mov	w4, #0x1                   	// #1
  20:	ldr	x3, [x19, #32]
  24:	cmp	x5, x3
  28:	b.ge	4c <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE24_M_get_insert_unique_posERS1_+0x4c>  // b.tcont
  2c:	nop
  30:	ldr	x2, [x19, #16]
  34:	cbz	x2, 58 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE24_M_get_insert_unique_posERS1_+0x58>
  38:	mov	x19, x2
  3c:	mov	w4, #0x1                   	// #1
  40:	ldr	x3, [x19, #32]
  44:	cmp	x5, x3
  48:	b.lt	30 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE24_M_get_insert_unique_posERS1_+0x30>  // b.tstop
  4c:	ldr	x2, [x19, #24]
  50:	mov	w4, #0x0                   	// #0
  54:	cbnz	x2, 38 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE24_M_get_insert_unique_posERS1_+0x38>
  58:	mov	x1, x19
  5c:	cbnz	w4, 7c <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE24_M_get_insert_unique_posERS1_+0x7c>
  60:	cmp	x5, x3
  64:	csel	x0, x19, xzr, le
  68:	csel	x1, x1, xzr, gt
  6c:	ldp	x19, x20, [sp, #16]
  70:	ldp	x29, x30, [sp], #32
  74:	ret
  78:	add	x19, x0, #0x8
  7c:	ldr	x0, [x0, #24]
  80:	cmp	x0, x19
  84:	b.eq	a4 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE24_M_get_insert_unique_posERS1_+0xa4>  // b.none
  88:	mov	x0, x19
  8c:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  90:	mov	x1, x19
  94:	mov	x19, x0
  98:	ldr	x5, [x20]
  9c:	ldr	x3, [x0, #32]
  a0:	b	60 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE24_M_get_insert_unique_posERS1_+0x60>
  a4:	mov	x1, x19
  a8:	mov	x0, #0x0                   	// #0
  ac:	ldp	x19, x20, [sp, #16]
  b0:	ldp	x29, x30, [sp], #32
  b4:	ret

Disassembly of section .text._ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_:

0000000000000000 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	add	x0, x0, #0x8
  14:	stp	x21, x22, [sp, #32]
  18:	cmp	x1, x0
  1c:	mov	x21, x2
  20:	b.eq	bc <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0xbc>  // b.none
  24:	ldr	x22, [x2]
  28:	mov	x19, x1
  2c:	ldr	x0, [x1, #32]
  30:	cmp	x22, x0
  34:	b.ge	80 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x80>  // b.tcont
  38:	ldr	x0, [x20, #24]
  3c:	mov	x1, x0
  40:	cmp	x0, x19
  44:	b.eq	70 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x70>  // b.none
  48:	mov	x0, x19
  4c:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  50:	mov	x3, x0
  54:	ldr	x0, [x0, #32]
  58:	cmp	x22, x0
  5c:	b.le	d8 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0xd8>
  60:	ldr	x1, [x3, #24]
  64:	cmp	x1, #0x0
  68:	csel	x0, x19, xzr, ne  // ne = any
  6c:	csel	x1, x3, x19, eq  // eq = none
  70:	ldp	x19, x20, [sp, #16]
  74:	ldp	x21, x22, [sp, #32]
  78:	ldp	x29, x30, [sp], #48
  7c:	ret
  80:	b.le	f0 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0xf0>
  84:	ldr	x0, [x20, #32]
  88:	cmp	x0, x1
  8c:	b.eq	120 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x120>  // b.none
  90:	mov	x0, x1
  94:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
  98:	mov	x3, x0
  9c:	ldr	x0, [x0, #32]
  a0:	cmp	x22, x0
  a4:	b.ge	d8 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0xd8>  // b.tcont
  a8:	ldr	x1, [x19, #24]
  ac:	cmp	x1, #0x0
  b0:	csel	x0, x3, xzr, ne  // ne = any
  b4:	csel	x1, x3, x19, ne  // ne = any
  b8:	b	70 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x70>
  bc:	ldr	x0, [x20, #40]
  c0:	cbz	x0, d8 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0xd8>
  c4:	ldr	x19, [x20, #32]
  c8:	ldr	x0, [x2]
  cc:	ldr	x1, [x19, #32]
  d0:	cmp	x1, x0
  d4:	b.lt	108 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x108>  // b.tstop
  d8:	mov	x1, x21
  dc:	mov	x0, x20
  e0:	ldp	x19, x20, [sp, #16]
  e4:	ldp	x21, x22, [sp, #32]
  e8:	ldp	x29, x30, [sp], #48
  ec:	b	0 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_>
  f0:	mov	x0, x1
  f4:	mov	x1, #0x0                   	// #0
  f8:	ldp	x19, x20, [sp, #16]
  fc:	ldp	x21, x22, [sp, #32]
 100:	ldp	x29, x30, [sp], #48
 104:	ret
 108:	mov	x1, x19
 10c:	mov	x0, #0x0                   	// #0
 110:	ldp	x19, x20, [sp, #16]
 114:	ldp	x21, x22, [sp, #32]
 118:	ldp	x29, x30, [sp], #48
 11c:	ret
 120:	mov	x1, x0
 124:	mov	x0, #0x0                   	// #0
 128:	b	70 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x70>

Disassembly of section .text._ZN4llvm17StringMapIterBaseINS_17StringMapIteratorIPNS_10StringInitEEENS_14StringMapEntryIS3_EEEC2EPPNS_18StringMapEntryBaseEb:

0000000000000000 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorIPNS_10StringInitEEENS_14StringMapEntryIS3_EEEC1EPPNS_18StringMapEntryBaseEb>:
   0:	str	x1, [x0]
   4:	tst	w2, #0xff
   8:	b.ne	38 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorIPNS_10StringInitEEENS_14StringMapEntryIS3_EEEC1EPPNS_18StringMapEntryBaseEb+0x38>  // b.any
   c:	ldr	x2, [x1]
  10:	cmp	x2, #0x0
  14:	ccmn	x2, #0x8, #0x4, ne  // ne = any
  18:	b.ne	38 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorIPNS_10StringInitEEENS_14StringMapEntryIS3_EEEC1EPPNS_18StringMapEntryBaseEb+0x38>  // b.any
  1c:	add	x1, x1, #0x8
  20:	mov	x3, x1
  24:	ldr	x2, [x1], #8
  28:	cmp	x2, #0x0
  2c:	ccmn	x2, #0x8, #0x4, ne  // ne = any
  30:	b.eq	20 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorIPNS_10StringInitEEENS_14StringMapEntryIS3_EEEC1EPPNS_18StringMapEntryBaseEb+0x20>  // b.none
  34:	str	x3, [x0]
  38:	ret

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_>:
   0:	mov	x4, x0
   4:	ldr	w0, [x0, #24]
   8:	cbz	w0, c0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xc0>
   c:	ldp	x6, x7, [x1]
  10:	cmn	x6, #0x8
  14:	b.eq	c8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xc8>  // b.none
  18:	cmn	x6, #0x10
  1c:	b.eq	f8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xf8>  // b.none
  20:	lsr	w1, w7, #9
  24:	lsr	w3, w6, #9
  28:	eor	w3, w3, w6, lsr #4
  2c:	sub	w5, w0, #0x1
  30:	eor	w1, w1, w7, lsr #4
  34:	mov	w10, #0x1                   	// #1
  38:	orr	x3, x1, x3, lsl #32
  3c:	mov	x9, #0x0                   	// #0
  40:	sub	x3, x3, #0x1
  44:	mov	w8, #0x18                  	// #24
  48:	sub	x0, x3, x1, lsl #32
  4c:	ldr	x3, [x4, #8]
  50:	eor	x0, x0, x0, lsr #22
  54:	sub	x1, x0, #0x1
  58:	sub	x0, x1, x0, lsl #13
  5c:	eor	x0, x0, x0, lsr #8
  60:	add	x0, x0, x0, lsl #3
  64:	eor	x0, x0, x0, lsr #15
  68:	sub	x1, x0, #0x1
  6c:	sub	x0, x1, x0, lsl #27
  70:	eor	x0, x0, x0, lsr #31
  74:	and	w0, w5, w0
  78:	umull	x1, w0, w8
  7c:	add	x4, x3, x1
  80:	ldr	x1, [x3, x1]
  84:	cmp	x6, x1
  88:	b.eq	104 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x104>  // b.none
  8c:	cmn	x1, #0x8
  90:	b.eq	11c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x11c>  // b.none
  94:	cmn	x1, #0x10
  98:	b.ne	b0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xb0>  // b.any
  9c:	ldr	x1, [x4, #8]
  a0:	cmp	x9, #0x0
  a4:	ccmn	x1, #0x10, #0x0, eq  // eq = none
  a8:	csel	x9, x9, x4, ne  // ne = any
  ac:	nop
  b0:	add	w0, w0, w10
  b4:	add	w10, w10, #0x1
  b8:	and	w0, w5, w0
  bc:	b	78 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x78>
  c0:	str	xzr, [x2]
  c4:	ret
  c8:	cmn	x7, #0x8
  cc:	b.ne	20 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x20>  // b.any
  d0:	stp	x29, x30, [sp, #-16]!
  d4:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_>
  d8:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_>
  dc:	mov	x29, sp
  e0:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_>
  e4:	add	x3, x3, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x0, x0, #0x0
  f0:	mov	w2, #0x250                 	// #592
  f4:	bl	0 <__assert_fail>
  f8:	cmn	x7, #0x10
  fc:	b.ne	20 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x20>  // b.any
 100:	b	d0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xd0>
 104:	ldr	x11, [x4, #8]
 108:	cmp	x11, x7
 10c:	b.ne	8c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x8c>  // b.any
 110:	mov	w0, #0x1                   	// #1
 114:	str	x4, [x2]
 118:	ret
 11c:	ldr	x1, [x4, #8]
 120:	cmn	x1, #0x8
 124:	b.ne	b0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xb0>  // b.any
 128:	cmp	x9, #0x0
 12c:	mov	w0, #0x0                   	// #0
 130:	csel	x9, x9, x4, ne  // ne = any
 134:	str	x9, [x2]
 138:	ret

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_>:
   0:	ldr	w4, [x0, #24]
   4:	cbz	w4, c0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0xc0>
   8:	ldr	x5, [x1]
   c:	ldr	w6, [x1, #8]
  10:	cmn	x5, #0x8
  14:	b.eq	cc <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0xcc>  // b.none
  18:	cmn	x5, #0x10
  1c:	b.eq	fc <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0xfc>  // b.none
  20:	mov	w1, #0x25                  	// #37
  24:	lsr	w3, w5, #9
  28:	eor	w3, w3, w5, lsr #4
  2c:	sub	w4, w4, #0x1
  30:	mul	w1, w6, w1
  34:	mov	w10, #0x1                   	// #1
  38:	ldr	x7, [x0, #8]
  3c:	mov	x9, #0x0                   	// #0
  40:	orr	x0, x1, x3, lsl #32
  44:	mov	w3, #0x18                  	// #24
  48:	sub	x0, x0, #0x1
  4c:	sub	x0, x0, x1, lsl #32
  50:	eor	x0, x0, x0, lsr #22
  54:	sub	x1, x0, #0x1
  58:	sub	x0, x1, x0, lsl #13
  5c:	eor	x0, x0, x0, lsr #8
  60:	add	x0, x0, x0, lsl #3
  64:	eor	x0, x0, x0, lsr #15
  68:	sub	x1, x0, #0x1
  6c:	sub	x0, x1, x0, lsl #27
  70:	eor	x0, x0, x0, lsr #31
  74:	and	w0, w4, w0
  78:	umull	x1, w0, w3
  7c:	add	x8, x7, x1
  80:	ldr	x1, [x7, x1]
  84:	cmp	x5, x1
  88:	b.eq	108 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x108>  // b.none
  8c:	cmn	x1, #0x8
  90:	b.eq	120 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x120>  // b.none
  94:	cmn	x1, #0x10
  98:	b.ne	b0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0xb0>  // b.any
  9c:	ldr	w1, [x8, #8]
  a0:	cmp	x9, #0x0
  a4:	ccmn	w1, #0x2, #0x0, eq  // eq = none
  a8:	csel	x9, x9, x8, ne  // ne = any
  ac:	nop
  b0:	add	w0, w0, w10
  b4:	add	w10, w10, #0x1
  b8:	and	w0, w4, w0
  bc:	b	78 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x78>
  c0:	mov	w0, #0x0                   	// #0
  c4:	str	xzr, [x2]
  c8:	ret
  cc:	cmn	w6, #0x1
  d0:	b.ne	20 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x20>  // b.any
  d4:	stp	x29, x30, [sp, #-16]!
  d8:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_>
  dc:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_>
  e0:	mov	x29, sp
  e4:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_>
  e8:	add	x3, x3, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x0, x0, #0x0
  f4:	mov	w2, #0x250                 	// #592
  f8:	bl	0 <__assert_fail>
  fc:	cmn	w6, #0x2
 100:	b.ne	20 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x20>  // b.any
 104:	b	d4 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0xd4>
 108:	ldr	w11, [x8, #8]
 10c:	cmp	w11, w6
 110:	b.ne	8c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x8c>  // b.any
 114:	mov	w0, #0x1                   	// #1
 118:	str	x8, [x2]
 11c:	ret
 120:	ldr	w1, [x8, #8]
 124:	cmn	w1, #0x1
 128:	b.ne	b0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0xb0>  // b.any
 12c:	cmp	x9, #0x0
 130:	mov	w0, #0x0                   	// #0
 134:	csel	x9, x9, x8, ne  // ne = any
 138:	str	x9, [x2]
 13c:	ret

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_>:
   0:	ldr	w4, [x0, #24]
   4:	cbz	w4, c0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0xc0>
   8:	ldr	x5, [x1]
   c:	ldr	w6, [x1, #8]
  10:	cmn	x5, #0x8
  14:	b.eq	cc <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0xcc>  // b.none
  18:	cmn	x5, #0x10
  1c:	b.eq	fc <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0xfc>  // b.none
  20:	mov	w1, #0x25                  	// #37
  24:	lsr	w3, w5, #9
  28:	eor	w3, w3, w5, lsr #4
  2c:	sub	w4, w4, #0x1
  30:	mul	w1, w6, w1
  34:	mov	w10, #0x1                   	// #1
  38:	ldr	x7, [x0, #8]
  3c:	mov	x9, #0x0                   	// #0
  40:	orr	x0, x1, x3, lsl #32
  44:	mov	w3, #0x18                  	// #24
  48:	sub	x0, x0, #0x1
  4c:	sub	x0, x0, x1, lsl #32
  50:	eor	x0, x0, x0, lsr #22
  54:	sub	x1, x0, #0x1
  58:	sub	x0, x1, x0, lsl #13
  5c:	eor	x0, x0, x0, lsr #8
  60:	add	x0, x0, x0, lsl #3
  64:	eor	x0, x0, x0, lsr #15
  68:	sub	x1, x0, #0x1
  6c:	sub	x0, x1, x0, lsl #27
  70:	eor	x0, x0, x0, lsr #31
  74:	and	w0, w4, w0
  78:	umull	x1, w0, w3
  7c:	add	x8, x7, x1
  80:	ldr	x1, [x7, x1]
  84:	cmp	x5, x1
  88:	b.eq	108 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x108>  // b.none
  8c:	cmn	x1, #0x8
  90:	b.eq	120 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x120>  // b.none
  94:	cmn	x1, #0x10
  98:	b.ne	b0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0xb0>  // b.any
  9c:	ldr	w1, [x8, #8]
  a0:	cmp	x9, #0x0
  a4:	ccmn	w1, #0x2, #0x0, eq  // eq = none
  a8:	csel	x9, x9, x8, ne  // ne = any
  ac:	nop
  b0:	add	w0, w0, w10
  b4:	add	w10, w10, #0x1
  b8:	and	w0, w4, w0
  bc:	b	78 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x78>
  c0:	mov	w0, #0x0                   	// #0
  c4:	str	xzr, [x2]
  c8:	ret
  cc:	cmn	w6, #0x1
  d0:	b.ne	20 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x20>  // b.any
  d4:	stp	x29, x30, [sp, #-16]!
  d8:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_>
  dc:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_>
  e0:	mov	x29, sp
  e4:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_>
  e8:	add	x3, x3, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x0, x0, #0x0
  f4:	mov	w2, #0x250                 	// #592
  f8:	bl	0 <__assert_fail>
  fc:	cmn	w6, #0x2
 100:	b.ne	20 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x20>  // b.any
 104:	b	d4 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0xd4>
 108:	ldr	w11, [x8, #8]
 10c:	cmp	w11, w6
 110:	b.ne	8c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x8c>  // b.any
 114:	mov	w0, #0x1                   	// #1
 118:	str	x8, [x2]
 11c:	ret
 120:	ldr	w1, [x8, #8]
 124:	cmn	w1, #0x1
 128:	b.ne	b0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0xb0>  // b.any
 12c:	cmp	x9, #0x0
 130:	mov	w0, #0x0                   	// #0
 134:	csel	x9, x9, x8, ne  // ne = any
 138:	str	x9, [x2]
 13c:	ret

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_>:
   0:	mov	x4, x0
   4:	ldr	w0, [x0, #24]
   8:	cbz	w0, c0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xc0>
   c:	ldp	x6, x7, [x1]
  10:	cmn	x6, #0x8
  14:	b.eq	c8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xc8>  // b.none
  18:	cmn	x6, #0x10
  1c:	b.eq	f8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xf8>  // b.none
  20:	lsr	w1, w7, #9
  24:	lsr	w3, w6, #9
  28:	eor	w3, w3, w6, lsr #4
  2c:	sub	w5, w0, #0x1
  30:	eor	w1, w1, w7, lsr #4
  34:	mov	w10, #0x1                   	// #1
  38:	orr	x3, x1, x3, lsl #32
  3c:	mov	x9, #0x0                   	// #0
  40:	sub	x3, x3, #0x1
  44:	mov	w8, #0x18                  	// #24
  48:	sub	x0, x3, x1, lsl #32
  4c:	ldr	x3, [x4, #8]
  50:	eor	x0, x0, x0, lsr #22
  54:	sub	x1, x0, #0x1
  58:	sub	x0, x1, x0, lsl #13
  5c:	eor	x0, x0, x0, lsr #8
  60:	add	x0, x0, x0, lsl #3
  64:	eor	x0, x0, x0, lsr #15
  68:	sub	x1, x0, #0x1
  6c:	sub	x0, x1, x0, lsl #27
  70:	eor	x0, x0, x0, lsr #31
  74:	and	w0, w5, w0
  78:	umull	x1, w0, w8
  7c:	add	x4, x3, x1
  80:	ldr	x1, [x3, x1]
  84:	cmp	x6, x1
  88:	b.eq	104 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x104>  // b.none
  8c:	cmn	x1, #0x8
  90:	b.eq	11c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x11c>  // b.none
  94:	cmn	x1, #0x10
  98:	b.ne	b0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xb0>  // b.any
  9c:	ldr	x1, [x4, #8]
  a0:	cmp	x9, #0x0
  a4:	ccmn	x1, #0x10, #0x0, eq  // eq = none
  a8:	csel	x9, x9, x4, ne  // ne = any
  ac:	nop
  b0:	add	w0, w0, w10
  b4:	add	w10, w10, #0x1
  b8:	and	w0, w5, w0
  bc:	b	78 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x78>
  c0:	str	xzr, [x2]
  c4:	ret
  c8:	cmn	x7, #0x8
  cc:	b.ne	20 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x20>  // b.any
  d0:	stp	x29, x30, [sp, #-16]!
  d4:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_>
  d8:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_>
  dc:	mov	x29, sp
  e0:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_>
  e4:	add	x3, x3, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x0, x0, #0x0
  f0:	mov	w2, #0x250                 	// #592
  f4:	bl	0 <__assert_fail>
  f8:	cmn	x7, #0x10
  fc:	b.ne	20 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x20>  // b.any
 100:	b	d0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xd0>
 104:	ldr	x11, [x4, #8]
 108:	cmp	x11, x7
 10c:	b.ne	8c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x8c>  // b.any
 110:	mov	w0, #0x1                   	// #1
 114:	str	x4, [x2]
 118:	ret
 11c:	ldr	x1, [x4, #8]
 120:	cmn	x1, #0x8
 124:	b.ne	b0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xb0>  // b.any
 128:	cmp	x9, #0x0
 12c:	mov	w0, #0x0                   	// #0
 130:	csel	x9, x9, x4, ne  // ne = any
 134:	str	x9, [x2]
 138:	ret

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_>:
   0:	ldr	w4, [x0, #24]
   4:	cbz	w4, 54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x54>
   8:	ldr	x5, [x1]
   c:	mov	x3, x0
  10:	cmn	x5, #0x8
  14:	cset	w0, ne  // ne = any
  18:	cmn	x5, #0x10
  1c:	csel	w0, w0, wzr, ne  // ne = any
  20:	cbz	w0, b8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0xb8>
  24:	lsr	w1, w5, #4
  28:	sub	w4, w4, #0x1
  2c:	eor	w1, w1, w5, lsr #9
  30:	and	w1, w1, w4
  34:	ldr	x3, [x3, #8]
  38:	lsl	w6, w1, #4
  3c:	add	x7, x3, x6
  40:	ldr	x6, [x3, x6]
  44:	cmp	x5, x6
  48:	b.ne	60 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x60>  // b.any
  4c:	str	x7, [x2]
  50:	ret
  54:	mov	w0, #0x0                   	// #0
  58:	str	xzr, [x2]
  5c:	ret
  60:	mov	w9, #0x1                   	// #1
  64:	mov	x8, #0x0                   	// #0
  68:	cmn	x6, #0x8
  6c:	b.ne	84 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x84>  // b.any
  70:	cmp	x8, #0x0
  74:	mov	w0, #0x0                   	// #0
  78:	csel	x8, x8, x7, ne  // ne = any
  7c:	str	x8, [x2]
  80:	ret
  84:	add	w1, w9, w1
  88:	cmp	x8, #0x0
  8c:	and	w10, w4, w1
  90:	ccmn	x6, #0x10, #0x0, eq  // eq = none
  94:	csel	x8, x8, x7, ne  // ne = any
  98:	add	w9, w9, #0x1
  9c:	lsl	x6, x10, #4
  a0:	and	w1, w4, w1
  a4:	add	x7, x3, x6
  a8:	ldr	x6, [x3, x6]
  ac:	cmp	x5, x6
  b0:	b.eq	4c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x4c>  // b.none
  b4:	b	68 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x68>
  b8:	stp	x29, x30, [sp, #-16]!
  bc:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_>
  c0:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_>
  c4:	mov	x29, sp
  c8:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_>
  cc:	add	x3, x3, #0x0
  d0:	add	x1, x1, #0x0
  d4:	add	x0, x0, #0x0
  d8:	mov	w2, #0x250                 	// #592
  dc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17StringMapIterBaseINS_17StringMapIteratorINS_8NoneTypeEEENS_14StringMapEntryIS2_EEEC2EPPNS_18StringMapEntryBaseEb:

0000000000000000 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorINS_8NoneTypeEEENS_14StringMapEntryIS2_EEEC1EPPNS_18StringMapEntryBaseEb>:
   0:	str	x1, [x0]
   4:	tst	w2, #0xff
   8:	b.ne	38 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorINS_8NoneTypeEEENS_14StringMapEntryIS2_EEEC1EPPNS_18StringMapEntryBaseEb+0x38>  // b.any
   c:	ldr	x2, [x1]
  10:	cmp	x2, #0x0
  14:	ccmn	x2, #0x8, #0x4, ne  // ne = any
  18:	b.ne	38 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorINS_8NoneTypeEEENS_14StringMapEntryIS2_EEEC1EPPNS_18StringMapEntryBaseEb+0x38>  // b.any
  1c:	add	x1, x1, #0x8
  20:	mov	x3, x1
  24:	ldr	x2, [x1], #8
  28:	cmp	x2, #0x0
  2c:	ccmn	x2, #0x8, #0x4, ne  // ne = any
  30:	b.eq	20 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorINS_8NoneTypeEEENS_14StringMapEntryIS2_EEEC1EPPNS_18StringMapEntryBaseEb+0x20>  // b.none
  34:	str	x3, [x0]
  38:	ret

Disassembly of section .text._ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>:
   0:	sub	w1, w1, #0x1
   4:	stp	x29, x30, [sp, #-48]!
   8:	mov	w3, #0x40                  	// #64
   c:	orr	x2, x1, x1, lsr #1
  10:	mov	x29, sp
  14:	orr	x2, x2, x2, lsr #2
  18:	stp	x19, x20, [sp, #16]
  1c:	mov	w20, #0x18                  	// #24
  20:	orr	x2, x2, x2, lsr #4
  24:	stp	x21, x22, [sp, #32]
  28:	mov	x19, x0
  2c:	orr	x2, x2, x2, lsr #8
  30:	ldr	w21, [x0, #24]
  34:	ldr	x22, [x0, #8]
  38:	orr	x2, x2, x2, lsr #16
  3c:	add	x2, x2, #0x1
  40:	cmp	w2, w3
  44:	csel	w2, w2, w3, cs  // cs = hs, nlast
  48:	str	w2, [x0, #24]
  4c:	umull	x0, w2, w20
  50:	bl	0 <_Znwm>
  54:	str	x0, [x19, #8]
  58:	ldr	w5, [x19, #24]
  5c:	sub	w6, w5, #0x1
  60:	and	w2, w5, w6
  64:	cbz	x22, 158 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x158>
  68:	umull	x1, w21, w20
  6c:	str	xzr, [x19, #16]
  70:	add	x8, x22, x1
  74:	cbnz	w2, 1c4 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x1c4>
  78:	umaddl	x20, w5, w20, x0
  7c:	mov	x2, x0
  80:	mov	x3, #0xfffffffffffffff8    	// #-8
  84:	cmp	x0, x20
  88:	b.eq	9c <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x9c>  // b.none
  8c:	nop
  90:	str	x3, [x2], #24
  94:	cmp	x20, x2
  98:	b.ne	90 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x90>  // b.any
  9c:	cmp	x8, x22
  a0:	mov	x4, x22
  a4:	mov	w10, #0x18                  	// #24
  a8:	b.ne	bc <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0xbc>  // b.any
  ac:	b	110 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x110>
  b0:	add	x4, x4, #0x18
  b4:	cmp	x8, x4
  b8:	b.eq	110 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x110>  // b.none
  bc:	ldr	x2, [x4]
  c0:	cmn	x2, #0x10
  c4:	ccmn	x2, #0x8, #0x4, ne  // ne = any
  c8:	b.eq	b0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0xb0>  // b.none
  cc:	cbz	w5, 1e4 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x1e4>
  d0:	lsr	w3, w2, #9
  d4:	eor	w3, w3, w2, lsr #4
  d8:	and	w3, w3, w6
  dc:	umull	x7, w3, w10
  e0:	add	x11, x0, x7
  e4:	ldr	x7, [x0, x7]
  e8:	cmp	x2, x7
  ec:	b.ne	124 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x124>  // b.any
  f0:	adrp	x3, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>
  f4:	adrp	x1, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>
  f8:	adrp	x0, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>
  fc:	add	x3, x3, #0x0
 100:	add	x1, x1, #0x0
 104:	add	x0, x0, #0x0
 108:	mov	w2, #0x17a                 	// #378
 10c:	bl	0 <__assert_fail>
 110:	mov	x0, x22
 114:	ldp	x19, x20, [sp, #16]
 118:	ldp	x21, x22, [sp, #32]
 11c:	ldp	x29, x30, [sp], #48
 120:	b	0 <_ZdlPvm>
 124:	mov	w12, #0x1                   	// #1
 128:	mov	x9, #0x0                   	// #0
 12c:	cmn	x7, #0x8
 130:	b.ne	18c <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x18c>  // b.any
 134:	cmp	x9, #0x0
 138:	ldr	w7, [x19, #16]
 13c:	csel	x9, x9, x11, ne  // ne = any
 140:	add	w7, w7, #0x1
 144:	str	x2, [x9]
 148:	ldp	x2, x3, [x4, #8]
 14c:	stp	x2, x3, [x9, #8]
 150:	str	w7, [x19, #16]
 154:	b	b0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0xb0>
 158:	str	xzr, [x19, #16]
 15c:	cbnz	w2, 1c4 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x1c4>
 160:	umaddl	x20, w5, w20, x0
 164:	mov	x1, #0xfffffffffffffff8    	// #-8
 168:	cmp	x0, x20
 16c:	b.eq	17c <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x17c>  // b.none
 170:	str	x1, [x0], #24
 174:	cmp	x20, x0
 178:	b.ne	170 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x170>  // b.any
 17c:	ldp	x19, x20, [sp, #16]
 180:	ldp	x21, x22, [sp, #32]
 184:	ldp	x29, x30, [sp], #48
 188:	ret
 18c:	add	w3, w12, w3
 190:	cmp	x9, #0x0
 194:	and	w3, w6, w3
 198:	ccmn	x7, #0x10, #0x0, eq  // eq = none
 19c:	csel	x11, x11, x9, eq  // eq = none
 1a0:	add	w12, w12, #0x1
 1a4:	umull	x7, w3, w10
 1a8:	add	x13, x0, x7
 1ac:	ldr	x7, [x0, x7]
 1b0:	cmp	x2, x7
 1b4:	b.eq	f0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0xf0>  // b.none
 1b8:	mov	x9, x11
 1bc:	mov	x11, x13
 1c0:	b	12c <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x12c>
 1c4:	adrp	x3, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>
 1c8:	adrp	x1, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>
 1cc:	adrp	x0, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>
 1d0:	add	x3, x3, #0x0
 1d4:	add	x1, x1, #0x0
 1d8:	add	x0, x0, #0x0
 1dc:	mov	w2, #0x15b                 	// #347
 1e0:	bl	0 <__assert_fail>
 1e4:	mov	x0, #0x0                   	// #0
 1e8:	str	x2, [x0]
 1ec:	brk	#0x3e8

Disassembly of section .text._ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>:
   0:	sub	w1, w1, #0x1
   4:	stp	x29, x30, [sp, #-48]!
   8:	orr	x2, x1, x1, lsr #1
   c:	mov	x29, sp
  10:	orr	x2, x2, x2, lsr #2
  14:	stp	x19, x20, [sp, #16]
  18:	mov	x19, x0
  1c:	orr	x2, x2, x2, lsr #4
  20:	mov	w0, #0x40                  	// #64
  24:	orr	x2, x2, x2, lsr #8
  28:	ldr	w20, [x19, #24]
  2c:	str	x21, [sp, #32]
  30:	orr	x2, x2, x2, lsr #16
  34:	add	x2, x2, #0x1
  38:	cmp	w2, w0
  3c:	csel	w0, w2, w0, cs  // cs = hs, nlast
  40:	str	w0, [x19, #24]
  44:	ldr	x21, [x19, #8]
  48:	ubfiz	x0, x0, #3, #32
  4c:	bl	0 <_Znwm>
  50:	stp	x0, xzr, [x19, #8]
  54:	ldr	w3, [x19, #24]
  58:	sub	w7, w3, #0x1
  5c:	and	w2, w7, w3
  60:	cbz	x21, 148 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x148>
  64:	ubfiz	x1, x20, #3, #32
  68:	add	x8, x21, x1
  6c:	cbnz	w2, 1b4 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x1b4>
  70:	add	x4, x0, w3, uxtw #3
  74:	mov	x2, x0
  78:	cmp	x0, x4
  7c:	mov	x5, #0xfffffffffffffff8    	// #-8
  80:	b.eq	94 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x94>  // b.none
  84:	nop
  88:	str	x5, [x2], #8
  8c:	cmp	x4, x2
  90:	b.ne	88 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x88>  // b.any
  94:	cmp	x8, x21
  98:	mov	x5, x21
  9c:	b.ne	b0 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0xb0>  // b.any
  a0:	b	108 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x108>
  a4:	add	x5, x5, #0x8
  a8:	cmp	x8, x5
  ac:	b.eq	108 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x108>  // b.none
  b0:	ldr	x4, [x5]
  b4:	cmn	x4, #0x10
  b8:	ccmn	x4, #0x8, #0x4, ne  // ne = any
  bc:	b.eq	a4 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0xa4>  // b.none
  c0:	cbz	w3, 1d4 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x1d4>
  c4:	lsr	w2, w4, #9
  c8:	eor	w2, w2, w4, lsr #4
  cc:	and	w9, w2, w7
  d0:	mov	x2, x9
  d4:	ubfiz	x6, x9, #3, #28
  d8:	ldr	x9, [x0, x9, lsl #3]
  dc:	add	x6, x0, x6
  e0:	cmp	x4, x9
  e4:	b.ne	11c <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x11c>  // b.any
  e8:	adrp	x3, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
  ec:	adrp	x1, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
  f0:	adrp	x0, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
  f4:	add	x3, x3, #0x0
  f8:	add	x1, x1, #0x0
  fc:	add	x0, x0, #0x0
 100:	mov	w2, #0x17a                 	// #378
 104:	bl	0 <__assert_fail>
 108:	mov	x0, x21
 10c:	ldp	x19, x20, [sp, #16]
 110:	ldr	x21, [sp, #32]
 114:	ldp	x29, x30, [sp], #48
 118:	b	0 <_ZdlPvm>
 11c:	mov	w11, #0x1                   	// #1
 120:	mov	x10, #0x0                   	// #0
 124:	cmn	x9, #0x8
 128:	b.ne	17c <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x17c>  // b.any
 12c:	cmp	x10, #0x0
 130:	ldr	w2, [x19, #16]
 134:	csel	x10, x10, x6, ne  // ne = any
 138:	add	w2, w2, #0x1
 13c:	str	x4, [x10]
 140:	str	w2, [x19, #16]
 144:	b	a4 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0xa4>
 148:	cbnz	w2, 1b4 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x1b4>
 14c:	add	x3, x0, w3, uxtw #3
 150:	mov	x1, #0xfffffffffffffff8    	// #-8
 154:	cmp	x0, x3
 158:	b.eq	16c <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x16c>  // b.none
 15c:	nop
 160:	str	x1, [x0], #8
 164:	cmp	x3, x0
 168:	b.ne	160 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x160>  // b.any
 16c:	ldp	x19, x20, [sp, #16]
 170:	ldr	x21, [sp, #32]
 174:	ldp	x29, x30, [sp], #48
 178:	ret
 17c:	add	w2, w11, w2
 180:	cmp	x10, #0x0
 184:	and	w12, w7, w2
 188:	ccmn	x9, #0x10, #0x0, eq  // eq = none
 18c:	csel	x6, x6, x10, eq  // eq = none
 190:	add	w11, w11, #0x1
 194:	and	w2, w7, w2
 198:	add	x13, x0, x12, lsl #3
 19c:	ldr	x9, [x0, x12, lsl #3]
 1a0:	cmp	x4, x9
 1a4:	b.eq	e8 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0xe8>  // b.none
 1a8:	mov	x10, x6
 1ac:	mov	x6, x13
 1b0:	b	124 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x124>
 1b4:	adrp	x3, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 1b8:	adrp	x1, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 1bc:	adrp	x0, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 1c0:	add	x3, x3, #0x0
 1c4:	add	x1, x1, #0x0
 1c8:	add	x0, x0, #0x0
 1cc:	mov	w2, #0x15b                 	// #347
 1d0:	bl	0 <__assert_fail>
 1d4:	mov	x0, #0x0                   	// #0
 1d8:	str	x4, [x0]
 1dc:	brk	#0x3e8

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	ldr	w2, [x0, #24]
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	mov	x20, x8
  18:	str	x21, [sp, #32]
  1c:	mov	x21, x1
  20:	cbz	w2, 158 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0x158>
  24:	ldr	x3, [x1]
  28:	cmn	x3, #0x10
  2c:	ccmn	x3, #0x8, #0x4, ne  // ne = any
  30:	b.eq	19c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0x19c>  // b.none
  34:	lsr	w0, w3, #9
  38:	sub	w7, w2, #0x1
  3c:	eor	w0, w0, w3, lsr #4
  40:	ldr	x4, [x19, #8]
  44:	and	w1, w0, w7
  48:	mov	x0, x1
  4c:	ubfiz	x5, x1, #3, #28
  50:	ldr	x1, [x4, x1, lsl #3]
  54:	add	x5, x4, x5
  58:	cmp	x3, x1
  5c:	b.ne	84 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0x84>  // b.any
  60:	ldr	x0, [x19]
  64:	add	x2, x4, w2, uxtw #3
  68:	stp	x19, x0, [x20]
  6c:	stp	x5, x2, [x20, #16]
  70:	strb	wzr, [x20, #32]
  74:	ldp	x19, x20, [sp, #16]
  78:	ldr	x21, [sp, #32]
  7c:	ldp	x29, x30, [sp], #64
  80:	ret
  84:	mov	w8, #0x1                   	// #1
  88:	mov	x6, #0x0                   	// #0
  8c:	cmn	x1, #0x8
  90:	b.ne	16c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0x16c>  // b.any
  94:	ldr	x0, [x19]
  98:	lsl	w1, w2, #1
  9c:	ldr	w7, [x19, #16]
  a0:	cmp	x6, #0x0
  a4:	add	x0, x0, #0x1
  a8:	str	x0, [x19]
  ac:	add	w8, w7, #0x1
  b0:	add	w0, w1, w2
  b4:	csel	x6, x6, x5, ne  // ne = any
  b8:	cmp	w0, w8, lsl #2
  bc:	b.ls	128 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0x128>  // b.plast
  c0:	ldr	w0, [x19, #20]
  c4:	sub	w0, w2, w0
  c8:	sub	w0, w0, w8
  cc:	cmp	w0, w2, lsr #3
  d0:	b.ls	124 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0x124>  // b.plast
  d4:	ldr	x1, [x6]
  d8:	add	w0, w7, #0x1
  dc:	str	w0, [x19, #16]
  e0:	cmn	x1, #0x8
  e4:	b.eq	f4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0xf4>  // b.none
  e8:	ldr	w0, [x19, #20]
  ec:	sub	w0, w0, #0x1
  f0:	str	w0, [x19, #20]
  f4:	ldr	w2, [x19, #24]
  f8:	mov	w0, #0x1                   	// #1
  fc:	ldr	x1, [x19]
 100:	stp	x19, x1, [x20]
 104:	add	x2, x4, x2, lsl #3
 108:	str	x3, [x6]
 10c:	stp	x6, x2, [x20, #16]
 110:	strb	w0, [x20, #32]
 114:	ldp	x19, x20, [sp, #16]
 118:	ldr	x21, [sp, #32]
 11c:	ldp	x29, x30, [sp], #64
 120:	ret
 124:	mov	w1, w2
 128:	mov	x0, x19
 12c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_>
 130:	add	x2, sp, #0x38
 134:	mov	x1, x21
 138:	mov	x0, x19
 13c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_>
 140:	ldr	x6, [sp, #56]
 144:	cbz	x6, 1bc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0x1bc>
 148:	ldr	w7, [x19, #16]
 14c:	ldr	x3, [x21]
 150:	ldr	x4, [x19, #8]
 154:	b	d4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0xd4>
 158:	ldr	x0, [x0]
 15c:	mov	w1, #0x0                   	// #0
 160:	add	x0, x0, #0x1
 164:	str	x0, [x19]
 168:	b	128 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0x128>
 16c:	add	w0, w0, w8
 170:	cmp	x6, #0x0
 174:	and	w9, w7, w0
 178:	ccmn	x1, #0x10, #0x0, eq  // eq = none
 17c:	csel	x6, x6, x5, ne  // ne = any
 180:	add	w8, w8, #0x1
 184:	and	w0, w7, w0
 188:	add	x5, x4, x9, lsl #3
 18c:	ldr	x1, [x4, x9, lsl #3]
 190:	cmp	x3, x1
 194:	b.eq	60 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0x60>  // b.none
 198:	b	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0x8c>
 19c:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_>
 1a0:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_>
 1a4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_>
 1a8:	add	x3, x3, #0x0
 1ac:	add	x1, x1, #0x0
 1b0:	add	x0, x0, #0x0
 1b4:	mov	w2, #0x250                 	// #592
 1b8:	bl	0 <__assert_fail>
 1bc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_>
 1c0:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_>
 1c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_>
 1c8:	add	x3, x3, #0x0
 1cc:	add	x1, x1, #0x0
 1d0:	add	x0, x0, #0x0
 1d4:	mov	w2, #0x22f                 	// #559
 1d8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>:
   0:	sub	w1, w1, #0x1
   4:	stp	x29, x30, [sp, #-48]!
   8:	mov	w3, #0x40                  	// #64
   c:	orr	x2, x1, x1, lsr #1
  10:	mov	x29, sp
  14:	orr	x2, x2, x2, lsr #2
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	w22, #0x18                  	// #24
  20:	orr	x2, x2, x2, lsr #4
  24:	stp	x19, x20, [sp, #16]
  28:	ldr	w21, [x0, #24]
  2c:	orr	x2, x2, x2, lsr #8
  30:	mov	x19, x0
  34:	ldr	x20, [x0, #8]
  38:	orr	x2, x2, x2, lsr #16
  3c:	add	x2, x2, #0x1
  40:	cmp	w2, w3
  44:	csel	w2, w2, w3, cs  // cs = hs, nlast
  48:	str	w2, [x0, #24]
  4c:	umull	x0, w2, w22
  50:	bl	0 <_Znwm>
  54:	str	x0, [x19, #8]
  58:	ldr	w6, [x19, #24]
  5c:	sub	w7, w6, #0x1
  60:	and	w2, w6, w7
  64:	cbz	x20, 20c <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x20c>
  68:	umull	x1, w21, w22
  6c:	str	xzr, [x19, #16]
  70:	add	x8, x20, x1
  74:	cbnz	w2, 248 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x248>
  78:	umaddl	x22, w6, w22, x0
  7c:	mov	x2, x0
  80:	mov	x3, #0xfffffffffffffff8    	// #-8
  84:	cmp	x0, x22
  88:	b.eq	a0 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0xa0>  // b.none
  8c:	nop
  90:	stp	x3, x3, [x2]
  94:	add	x2, x2, #0x18
  98:	cmp	x22, x2
  9c:	b.ne	90 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x90>  // b.any
  a0:	cmp	x8, x20
  a4:	mov	x4, x20
  a8:	mov	w10, #0x18                  	// #24
  ac:	b.eq	19c <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x19c>  // b.none
  b0:	ldr	x9, [x4]
  b4:	cmn	x9, #0x8
  b8:	b.eq	150 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x150>  // b.none
  bc:	cmn	x9, #0x10
  c0:	b.eq	1b0 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x1b0>  // b.none
  c4:	cbz	w6, 160 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x160>
  c8:	ldr	x5, [x4, #8]
  cc:	lsr	w2, w5, #9
  d0:	lsr	w3, w9, #9
  d4:	mov	w11, #0x1                   	// #1
  d8:	eor	w3, w3, w9, lsr #4
  dc:	eor	w2, w2, w5, lsr #4
  e0:	mov	x12, #0x0                   	// #0
  e4:	orr	x3, x2, x3, lsl #32
  e8:	sub	x3, x3, #0x1
  ec:	sub	x2, x3, x2, lsl #32
  f0:	eor	x2, x2, x2, lsr #22
  f4:	sub	x3, x2, #0x1
  f8:	sub	x2, x3, x2, lsl #13
  fc:	eor	x2, x2, x2, lsr #8
 100:	add	x2, x2, x2, lsl #3
 104:	eor	x2, x2, x2, lsr #15
 108:	sub	x3, x2, #0x1
 10c:	sub	x2, x3, x2, lsl #27
 110:	eor	x2, x2, x2, lsr #31
 114:	and	w2, w7, w2
 118:	umull	x3, w2, w10
 11c:	add	x13, x0, x3
 120:	ldr	x3, [x0, x3]
 124:	cmp	x9, x3
 128:	b.eq	1c4 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x1c4>  // b.none
 12c:	cmn	x3, #0x8
 130:	b.eq	1f0 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x1f0>  // b.none
 134:	cmn	x3, #0x10
 138:	b.ne	1fc <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x1fc>  // b.any
 13c:	ldr	x3, [x13, #8]
 140:	cmp	x12, #0x0
 144:	ccmn	x3, #0x10, #0x0, eq  // eq = none
 148:	csel	x12, x12, x13, ne  // ne = any
 14c:	b	1fc <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x1fc>
 150:	ldr	x5, [x4, #8]
 154:	cmn	x5, #0x8
 158:	b.eq	190 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x190>  // b.none
 15c:	cbnz	w6, cc <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0xcc>
 160:	mov	x0, #0x0                   	// #0
 164:	str	x9, [x0]
 168:	brk	#0x3e8
 16c:	cmp	x12, #0x0
 170:	ldr	w2, [x19, #16]
 174:	csel	x12, x12, x13, ne  // ne = any
 178:	ldr	x3, [x4, #16]
 17c:	add	w2, w2, #0x1
 180:	stp	x9, x5, [x12]
 184:	str	x3, [x12, #16]
 188:	str	w2, [x19, #16]
 18c:	nop
 190:	add	x4, x4, #0x18
 194:	cmp	x8, x4
 198:	b.ne	b0 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0xb0>  // b.any
 19c:	mov	x0, x20
 1a0:	ldp	x19, x20, [sp, #16]
 1a4:	ldp	x21, x22, [sp, #32]
 1a8:	ldp	x29, x30, [sp], #48
 1ac:	b	0 <_ZdlPvm>
 1b0:	ldr	x5, [x4, #8]
 1b4:	cmn	x5, #0x10
 1b8:	b.eq	190 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x190>  // b.none
 1bc:	cbnz	w6, cc <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0xcc>
 1c0:	b	160 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x160>
 1c4:	ldr	x14, [x13, #8]
 1c8:	cmp	x14, x5
 1cc:	b.ne	12c <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x12c>  // b.any
 1d0:	adrp	x3, 0 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
 1d4:	adrp	x1, 0 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
 1d8:	adrp	x0, 0 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
 1dc:	add	x3, x3, #0x0
 1e0:	add	x1, x1, #0x0
 1e4:	add	x0, x0, #0x0
 1e8:	mov	w2, #0x17a                 	// #378
 1ec:	bl	0 <__assert_fail>
 1f0:	ldr	x3, [x13, #8]
 1f4:	cmn	x3, #0x8
 1f8:	b.eq	16c <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x16c>  // b.none
 1fc:	add	w2, w2, w11
 200:	add	w11, w11, #0x1
 204:	and	w2, w2, w7
 208:	b	118 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x118>
 20c:	str	xzr, [x19, #16]
 210:	cbnz	w2, 248 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x248>
 214:	umaddl	x22, w6, w22, x0
 218:	mov	x1, #0xfffffffffffffff8    	// #-8
 21c:	cmp	x0, x22
 220:	b.eq	238 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x238>  // b.none
 224:	nop
 228:	stp	x1, x1, [x0]
 22c:	add	x0, x0, #0x18
 230:	cmp	x22, x0
 234:	b.ne	228 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x228>  // b.any
 238:	ldp	x19, x20, [sp, #16]
 23c:	ldp	x21, x22, [sp, #32]
 240:	ldp	x29, x30, [sp], #48
 244:	ret
 248:	adrp	x3, 0 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
 24c:	adrp	x1, 0 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
 250:	adrp	x0, 0 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
 254:	add	x3, x3, #0x0
 258:	add	x1, x1, #0x0
 25c:	add	x0, x0, #0x0
 260:	mov	w2, #0x15b                 	// #347
 264:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>:
   0:	sub	w1, w1, #0x1
   4:	stp	x29, x30, [sp, #-48]!
   8:	mov	w3, #0x40                  	// #64
   c:	orr	x2, x1, x1, lsr #1
  10:	mov	x29, sp
  14:	orr	x2, x2, x2, lsr #2
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	w22, #0x18                  	// #24
  20:	orr	x2, x2, x2, lsr #4
  24:	stp	x19, x20, [sp, #16]
  28:	ldr	w21, [x0, #24]
  2c:	orr	x2, x2, x2, lsr #8
  30:	mov	x19, x0
  34:	ldr	x20, [x0, #8]
  38:	orr	x2, x2, x2, lsr #16
  3c:	add	x2, x2, #0x1
  40:	cmp	w2, w3
  44:	csel	w2, w2, w3, cs  // cs = hs, nlast
  48:	str	w2, [x0, #24]
  4c:	umull	x0, w2, w22
  50:	bl	0 <_Znwm>
  54:	str	x0, [x19, #8]
  58:	ldr	w2, [x19, #24]
  5c:	sub	w1, w2, #0x1
  60:	and	w3, w1, w2
  64:	cbz	x20, 214 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x214>
  68:	umull	x1, w21, w22
  6c:	str	xzr, [x19, #16]
  70:	add	x8, x20, x1
  74:	cbnz	w3, 254 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x254>
  78:	umaddl	x2, w2, w22, x0
  7c:	mov	x3, x0
  80:	mov	x5, #0xfffffffffffffff8    	// #-8
  84:	mov	w4, #0xffffffff            	// #-1
  88:	cmp	x0, x2
  8c:	b.eq	a4 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0xa4>  // b.none
  90:	str	x5, [x3]
  94:	add	x3, x3, #0x18
  98:	stur	w4, [x3, #-16]
  9c:	cmp	x2, x3
  a0:	b.ne	90 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x90>  // b.any
  a4:	cmp	x8, x20
  a8:	mov	x5, x20
  ac:	mov	w10, #0x25                  	// #37
  b0:	mov	w9, #0x18                  	// #24
  b4:	b.eq	1a0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x1a0>  // b.none
  b8:	ldr	x7, [x5]
  bc:	cmn	x7, #0x8
  c0:	b.eq	168 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x168>  // b.none
  c4:	cmn	x7, #0x10
  c8:	b.eq	188 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x188>  // b.none
  cc:	ldr	w4, [x19, #24]
  d0:	cbz	w4, 17c <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x17c>
  d4:	ldr	w6, [x5, #8]
  d8:	mul	w2, w6, w10
  dc:	lsr	w3, w7, #9
  e0:	eor	w3, w3, w7, lsr #4
  e4:	sub	w4, w4, #0x1
  e8:	mov	w12, #0x1                   	// #1
  ec:	mov	x11, #0x0                   	// #0
  f0:	orr	x3, x2, x3, lsl #32
  f4:	sub	x3, x3, #0x1
  f8:	sub	x2, x3, x2, lsl #32
  fc:	eor	x2, x2, x2, lsr #22
 100:	sub	x3, x2, #0x1
 104:	sub	x2, x3, x2, lsl #13
 108:	eor	x2, x2, x2, lsr #8
 10c:	add	x2, x2, x2, lsl #3
 110:	eor	x2, x2, x2, lsr #15
 114:	sub	x3, x2, #0x1
 118:	sub	x2, x3, x2, lsl #27
 11c:	eor	x2, x2, x2, lsr #31
 120:	and	w2, w4, w2
 124:	umull	x3, w2, w9
 128:	add	x13, x0, x3
 12c:	ldr	x3, [x0, x3]
 130:	cmp	x7, x3
 134:	b.eq	1b4 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x1b4>  // b.none
 138:	cmn	x3, #0x8
 13c:	b.eq	1e0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x1e0>  // b.none
 140:	cmn	x3, #0x10
 144:	b.ne	158 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x158>  // b.any
 148:	ldr	w3, [x13, #8]
 14c:	cmp	x11, #0x0
 150:	ccmn	w3, #0x2, #0x0, eq  // eq = none
 154:	csel	x11, x11, x13, ne  // ne = any
 158:	add	w2, w2, w12
 15c:	add	w12, w12, #0x1
 160:	and	w2, w4, w2
 164:	b	124 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x124>
 168:	ldr	w6, [x5, #8]
 16c:	cmn	w6, #0x1
 170:	b.eq	194 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x194>  // b.none
 174:	ldr	w4, [x19, #24]
 178:	cbnz	w4, d8 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0xd8>
 17c:	mov	x0, #0x0                   	// #0
 180:	str	x7, [x0]
 184:	brk	#0x3e8
 188:	ldr	w6, [x5, #8]
 18c:	cmn	w6, #0x2
 190:	b.ne	174 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x174>  // b.any
 194:	add	x5, x5, #0x18
 198:	cmp	x8, x5
 19c:	b.ne	b8 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0xb8>  // b.any
 1a0:	mov	x0, x20
 1a4:	ldp	x19, x20, [sp, #16]
 1a8:	ldp	x21, x22, [sp, #32]
 1ac:	ldp	x29, x30, [sp], #48
 1b0:	b	0 <_ZdlPvm>
 1b4:	ldr	w14, [x13, #8]
 1b8:	cmp	w14, w6
 1bc:	b.ne	138 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x138>  // b.any
 1c0:	adrp	x3, 0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
 1c4:	adrp	x1, 0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
 1c8:	adrp	x0, 0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
 1cc:	add	x3, x3, #0x0
 1d0:	add	x1, x1, #0x0
 1d4:	add	x0, x0, #0x0
 1d8:	mov	w2, #0x17a                 	// #378
 1dc:	bl	0 <__assert_fail>
 1e0:	ldr	w3, [x13, #8]
 1e4:	cmn	w3, #0x1
 1e8:	b.ne	158 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x158>  // b.any
 1ec:	cmp	x11, #0x0
 1f0:	csel	x11, x11, x13, ne  // ne = any
 1f4:	ldr	x3, [x5, #16]
 1f8:	str	w6, [x11, #8]
 1fc:	str	x7, [x11]
 200:	ldr	w2, [x19, #16]
 204:	str	x3, [x11, #16]
 208:	add	w2, w2, #0x1
 20c:	str	w2, [x19, #16]
 210:	b	194 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x194>
 214:	str	xzr, [x19, #16]
 218:	cbnz	w3, 254 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x254>
 21c:	umaddl	x2, w2, w22, x0
 220:	mov	x3, #0xfffffffffffffff8    	// #-8
 224:	mov	w1, #0xffffffff            	// #-1
 228:	cmp	x0, x2
 22c:	b.eq	244 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x244>  // b.none
 230:	str	x3, [x0]
 234:	add	x0, x0, #0x18
 238:	stur	w1, [x0, #-16]
 23c:	cmp	x2, x0
 240:	b.ne	230 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x230>  // b.any
 244:	ldp	x19, x20, [sp, #16]
 248:	ldp	x21, x22, [sp, #32]
 24c:	ldp	x29, x30, [sp], #48
 250:	ret
 254:	adrp	x3, 0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
 258:	adrp	x1, 0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
 25c:	adrp	x0, 0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
 260:	add	x3, x3, #0x0
 264:	add	x1, x1, #0x0
 268:	add	x0, x0, #0x0
 26c:	mov	w2, #0x15b                 	// #347
 270:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>:
   0:	sub	w1, w1, #0x1
   4:	stp	x29, x30, [sp, #-48]!
   8:	mov	w3, #0x40                  	// #64
   c:	orr	x2, x1, x1, lsr #1
  10:	mov	x29, sp
  14:	orr	x2, x2, x2, lsr #2
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	w22, #0x18                  	// #24
  20:	orr	x2, x2, x2, lsr #4
  24:	stp	x19, x20, [sp, #16]
  28:	ldr	w21, [x0, #24]
  2c:	orr	x2, x2, x2, lsr #8
  30:	mov	x19, x0
  34:	ldr	x20, [x0, #8]
  38:	orr	x2, x2, x2, lsr #16
  3c:	add	x2, x2, #0x1
  40:	cmp	w2, w3
  44:	csel	w2, w2, w3, cs  // cs = hs, nlast
  48:	str	w2, [x0, #24]
  4c:	umull	x0, w2, w22
  50:	bl	0 <_Znwm>
  54:	str	x0, [x19, #8]
  58:	ldr	w2, [x19, #24]
  5c:	sub	w1, w2, #0x1
  60:	and	w3, w1, w2
  64:	cbz	x20, 214 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x214>
  68:	umull	x1, w21, w22
  6c:	str	xzr, [x19, #16]
  70:	add	x8, x20, x1
  74:	cbnz	w3, 254 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x254>
  78:	umaddl	x2, w2, w22, x0
  7c:	mov	x3, x0
  80:	mov	x5, #0xfffffffffffffff8    	// #-8
  84:	mov	w4, #0xffffffff            	// #-1
  88:	cmp	x0, x2
  8c:	b.eq	a4 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0xa4>  // b.none
  90:	str	x5, [x3]
  94:	add	x3, x3, #0x18
  98:	stur	w4, [x3, #-16]
  9c:	cmp	x2, x3
  a0:	b.ne	90 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x90>  // b.any
  a4:	cmp	x8, x20
  a8:	mov	x5, x20
  ac:	mov	w10, #0x25                  	// #37
  b0:	mov	w9, #0x18                  	// #24
  b4:	b.eq	1a0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x1a0>  // b.none
  b8:	ldr	x7, [x5]
  bc:	cmn	x7, #0x8
  c0:	b.eq	168 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x168>  // b.none
  c4:	cmn	x7, #0x10
  c8:	b.eq	188 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x188>  // b.none
  cc:	ldr	w4, [x19, #24]
  d0:	cbz	w4, 17c <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x17c>
  d4:	ldr	w6, [x5, #8]
  d8:	mul	w2, w6, w10
  dc:	lsr	w3, w7, #9
  e0:	eor	w3, w3, w7, lsr #4
  e4:	sub	w4, w4, #0x1
  e8:	mov	w12, #0x1                   	// #1
  ec:	mov	x11, #0x0                   	// #0
  f0:	orr	x3, x2, x3, lsl #32
  f4:	sub	x3, x3, #0x1
  f8:	sub	x2, x3, x2, lsl #32
  fc:	eor	x2, x2, x2, lsr #22
 100:	sub	x3, x2, #0x1
 104:	sub	x2, x3, x2, lsl #13
 108:	eor	x2, x2, x2, lsr #8
 10c:	add	x2, x2, x2, lsl #3
 110:	eor	x2, x2, x2, lsr #15
 114:	sub	x3, x2, #0x1
 118:	sub	x2, x3, x2, lsl #27
 11c:	eor	x2, x2, x2, lsr #31
 120:	and	w2, w4, w2
 124:	umull	x3, w2, w9
 128:	add	x13, x0, x3
 12c:	ldr	x3, [x0, x3]
 130:	cmp	x7, x3
 134:	b.eq	1b4 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x1b4>  // b.none
 138:	cmn	x3, #0x8
 13c:	b.eq	1e0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x1e0>  // b.none
 140:	cmn	x3, #0x10
 144:	b.ne	158 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x158>  // b.any
 148:	ldr	w3, [x13, #8]
 14c:	cmp	x11, #0x0
 150:	ccmn	w3, #0x2, #0x0, eq  // eq = none
 154:	csel	x11, x11, x13, ne  // ne = any
 158:	add	w2, w2, w12
 15c:	add	w12, w12, #0x1
 160:	and	w2, w4, w2
 164:	b	124 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x124>
 168:	ldr	w6, [x5, #8]
 16c:	cmn	w6, #0x1
 170:	b.eq	194 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x194>  // b.none
 174:	ldr	w4, [x19, #24]
 178:	cbnz	w4, d8 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0xd8>
 17c:	mov	x0, #0x0                   	// #0
 180:	str	x7, [x0]
 184:	brk	#0x3e8
 188:	ldr	w6, [x5, #8]
 18c:	cmn	w6, #0x2
 190:	b.ne	174 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x174>  // b.any
 194:	add	x5, x5, #0x18
 198:	cmp	x8, x5
 19c:	b.ne	b8 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0xb8>  // b.any
 1a0:	mov	x0, x20
 1a4:	ldp	x19, x20, [sp, #16]
 1a8:	ldp	x21, x22, [sp, #32]
 1ac:	ldp	x29, x30, [sp], #48
 1b0:	b	0 <_ZdlPvm>
 1b4:	ldr	w14, [x13, #8]
 1b8:	cmp	w14, w6
 1bc:	b.ne	138 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x138>  // b.any
 1c0:	adrp	x3, 0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
 1c4:	adrp	x1, 0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
 1c8:	adrp	x0, 0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
 1cc:	add	x3, x3, #0x0
 1d0:	add	x1, x1, #0x0
 1d4:	add	x0, x0, #0x0
 1d8:	mov	w2, #0x17a                 	// #378
 1dc:	bl	0 <__assert_fail>
 1e0:	ldr	w3, [x13, #8]
 1e4:	cmn	w3, #0x1
 1e8:	b.ne	158 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x158>  // b.any
 1ec:	cmp	x11, #0x0
 1f0:	csel	x11, x11, x13, ne  // ne = any
 1f4:	ldr	x3, [x5, #16]
 1f8:	str	w6, [x11, #8]
 1fc:	str	x7, [x11]
 200:	ldr	w2, [x19, #16]
 204:	str	x3, [x11, #16]
 208:	add	w2, w2, #0x1
 20c:	str	w2, [x19, #16]
 210:	b	194 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x194>
 214:	str	xzr, [x19, #16]
 218:	cbnz	w3, 254 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x254>
 21c:	umaddl	x2, w2, w22, x0
 220:	mov	x3, #0xfffffffffffffff8    	// #-8
 224:	mov	w1, #0xffffffff            	// #-1
 228:	cmp	x0, x2
 22c:	b.eq	244 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x244>  // b.none
 230:	str	x3, [x0]
 234:	add	x0, x0, #0x18
 238:	stur	w1, [x0, #-16]
 23c:	cmp	x2, x0
 240:	b.ne	230 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x230>  // b.any
 244:	ldp	x19, x20, [sp, #16]
 248:	ldp	x21, x22, [sp, #32]
 24c:	ldp	x29, x30, [sp], #48
 250:	ret
 254:	adrp	x3, 0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
 258:	adrp	x1, 0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
 25c:	adrp	x0, 0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
 260:	add	x3, x3, #0x0
 264:	add	x1, x1, #0x0
 268:	add	x0, x0, #0x0
 26c:	mov	w2, #0x15b                 	// #347
 270:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>:
   0:	sub	w1, w1, #0x1
   4:	stp	x29, x30, [sp, #-48]!
   8:	mov	w3, #0x40                  	// #64
   c:	orr	x2, x1, x1, lsr #1
  10:	mov	x29, sp
  14:	orr	x2, x2, x2, lsr #2
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	w22, #0x18                  	// #24
  20:	orr	x2, x2, x2, lsr #4
  24:	stp	x19, x20, [sp, #16]
  28:	ldr	w21, [x0, #24]
  2c:	orr	x2, x2, x2, lsr #8
  30:	mov	x19, x0
  34:	ldr	x20, [x0, #8]
  38:	orr	x2, x2, x2, lsr #16
  3c:	add	x2, x2, #0x1
  40:	cmp	w2, w3
  44:	csel	w2, w2, w3, cs  // cs = hs, nlast
  48:	str	w2, [x0, #24]
  4c:	umull	x0, w2, w22
  50:	bl	0 <_Znwm>
  54:	str	x0, [x19, #8]
  58:	ldr	w6, [x19, #24]
  5c:	sub	w7, w6, #0x1
  60:	and	w2, w6, w7
  64:	cbz	x20, 20c <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x20c>
  68:	umull	x1, w21, w22
  6c:	str	xzr, [x19, #16]
  70:	add	x8, x20, x1
  74:	cbnz	w2, 248 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x248>
  78:	umaddl	x22, w6, w22, x0
  7c:	mov	x2, x0
  80:	mov	x3, #0xfffffffffffffff8    	// #-8
  84:	cmp	x0, x22
  88:	b.eq	a0 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0xa0>  // b.none
  8c:	nop
  90:	stp	x3, x3, [x2]
  94:	add	x2, x2, #0x18
  98:	cmp	x22, x2
  9c:	b.ne	90 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x90>  // b.any
  a0:	cmp	x8, x20
  a4:	mov	x4, x20
  a8:	mov	w10, #0x18                  	// #24
  ac:	b.eq	19c <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x19c>  // b.none
  b0:	ldr	x9, [x4]
  b4:	cmn	x9, #0x8
  b8:	b.eq	150 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x150>  // b.none
  bc:	cmn	x9, #0x10
  c0:	b.eq	1b0 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x1b0>  // b.none
  c4:	cbz	w6, 160 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x160>
  c8:	ldr	x5, [x4, #8]
  cc:	lsr	w2, w5, #9
  d0:	lsr	w3, w9, #9
  d4:	mov	w11, #0x1                   	// #1
  d8:	eor	w3, w3, w9, lsr #4
  dc:	eor	w2, w2, w5, lsr #4
  e0:	mov	x12, #0x0                   	// #0
  e4:	orr	x3, x2, x3, lsl #32
  e8:	sub	x3, x3, #0x1
  ec:	sub	x2, x3, x2, lsl #32
  f0:	eor	x2, x2, x2, lsr #22
  f4:	sub	x3, x2, #0x1
  f8:	sub	x2, x3, x2, lsl #13
  fc:	eor	x2, x2, x2, lsr #8
 100:	add	x2, x2, x2, lsl #3
 104:	eor	x2, x2, x2, lsr #15
 108:	sub	x3, x2, #0x1
 10c:	sub	x2, x3, x2, lsl #27
 110:	eor	x2, x2, x2, lsr #31
 114:	and	w2, w7, w2
 118:	umull	x3, w2, w10
 11c:	add	x13, x0, x3
 120:	ldr	x3, [x0, x3]
 124:	cmp	x9, x3
 128:	b.eq	1c4 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x1c4>  // b.none
 12c:	cmn	x3, #0x8
 130:	b.eq	1f0 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x1f0>  // b.none
 134:	cmn	x3, #0x10
 138:	b.ne	1fc <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x1fc>  // b.any
 13c:	ldr	x3, [x13, #8]
 140:	cmp	x12, #0x0
 144:	ccmn	x3, #0x10, #0x0, eq  // eq = none
 148:	csel	x12, x12, x13, ne  // ne = any
 14c:	b	1fc <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x1fc>
 150:	ldr	x5, [x4, #8]
 154:	cmn	x5, #0x8
 158:	b.eq	190 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x190>  // b.none
 15c:	cbnz	w6, cc <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0xcc>
 160:	mov	x0, #0x0                   	// #0
 164:	str	x9, [x0]
 168:	brk	#0x3e8
 16c:	cmp	x12, #0x0
 170:	ldr	w2, [x19, #16]
 174:	csel	x12, x12, x13, ne  // ne = any
 178:	ldr	x3, [x4, #16]
 17c:	add	w2, w2, #0x1
 180:	stp	x9, x5, [x12]
 184:	str	x3, [x12, #16]
 188:	str	w2, [x19, #16]
 18c:	nop
 190:	add	x4, x4, #0x18
 194:	cmp	x8, x4
 198:	b.ne	b0 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0xb0>  // b.any
 19c:	mov	x0, x20
 1a0:	ldp	x19, x20, [sp, #16]
 1a4:	ldp	x21, x22, [sp, #32]
 1a8:	ldp	x29, x30, [sp], #48
 1ac:	b	0 <_ZdlPvm>
 1b0:	ldr	x5, [x4, #8]
 1b4:	cmn	x5, #0x10
 1b8:	b.eq	190 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x190>  // b.none
 1bc:	cbnz	w6, cc <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0xcc>
 1c0:	b	160 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x160>
 1c4:	ldr	x14, [x13, #8]
 1c8:	cmp	x14, x5
 1cc:	b.ne	12c <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x12c>  // b.any
 1d0:	adrp	x3, 0 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
 1d4:	adrp	x1, 0 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
 1d8:	adrp	x0, 0 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
 1dc:	add	x3, x3, #0x0
 1e0:	add	x1, x1, #0x0
 1e4:	add	x0, x0, #0x0
 1e8:	mov	w2, #0x17a                 	// #378
 1ec:	bl	0 <__assert_fail>
 1f0:	ldr	x3, [x13, #8]
 1f4:	cmn	x3, #0x8
 1f8:	b.eq	16c <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x16c>  // b.none
 1fc:	add	w2, w2, w11
 200:	add	w11, w11, #0x1
 204:	and	w2, w2, w7
 208:	b	118 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x118>
 20c:	str	xzr, [x19, #16]
 210:	cbnz	w2, 248 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x248>
 214:	umaddl	x22, w6, w22, x0
 218:	mov	x1, #0xfffffffffffffff8    	// #-8
 21c:	cmp	x0, x22
 220:	b.eq	238 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x238>  // b.none
 224:	nop
 228:	stp	x1, x1, [x0]
 22c:	add	x0, x0, #0x18
 230:	cmp	x22, x0
 234:	b.ne	228 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x228>  // b.any
 238:	ldp	x19, x20, [sp, #16]
 23c:	ldp	x21, x22, [sp, #32]
 240:	ldp	x29, x30, [sp], #48
 244:	ret
 248:	adrp	x3, 0 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
 24c:	adrp	x1, 0 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
 250:	adrp	x0, 0 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
 254:	add	x3, x3, #0x0
 258:	add	x1, x1, #0x0
 25c:	add	x0, x0, #0x0
 260:	mov	w2, #0x15b                 	// #347
 264:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj>:
   0:	sub	w1, w1, #0x1
   4:	stp	x29, x30, [sp, #-48]!
   8:	orr	x2, x1, x1, lsr #1
   c:	mov	x29, sp
  10:	orr	x2, x2, x2, lsr #2
  14:	stp	x19, x20, [sp, #16]
  18:	mov	x19, x0
  1c:	orr	x2, x2, x2, lsr #4
  20:	mov	w0, #0x40                  	// #64
  24:	orr	x2, x2, x2, lsr #8
  28:	ldr	w20, [x19, #24]
  2c:	str	x21, [sp, #32]
  30:	orr	x2, x2, x2, lsr #16
  34:	add	x2, x2, #0x1
  38:	cmp	w2, w0
  3c:	csel	w0, w2, w0, cs  // cs = hs, nlast
  40:	str	w0, [x19, #24]
  44:	ldr	x21, [x19, #8]
  48:	ubfiz	x0, x0, #4, #32
  4c:	bl	0 <_Znwm>
  50:	stp	x0, xzr, [x19, #8]
  54:	ldr	w2, [x19, #24]
  58:	sub	w6, w2, #0x1
  5c:	and	w3, w2, w6
  60:	cbz	x21, 14c <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0x14c>
  64:	ubfiz	x1, x20, #4, #32
  68:	add	x8, x21, x1
  6c:	cbnz	w3, 1c0 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0x1c0>
  70:	ubfiz	x3, x2, #4, #32
  74:	mov	x4, x0
  78:	add	x3, x0, x3
  7c:	mov	x5, #0xfffffffffffffff8    	// #-8
  80:	cmp	x0, x3
  84:	b.eq	94 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0x94>  // b.none
  88:	str	x5, [x4], #16
  8c:	cmp	x3, x4
  90:	b.ne	88 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0x88>  // b.any
  94:	cmp	x8, x21
  98:	mov	x5, x21
  9c:	b.ne	b0 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0xb0>  // b.any
  a0:	b	104 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0x104>
  a4:	add	x5, x5, #0x10
  a8:	cmp	x8, x5
  ac:	b.eq	104 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0x104>  // b.none
  b0:	ldr	x3, [x5]
  b4:	cmn	x3, #0x10
  b8:	ccmn	x3, #0x8, #0x4, ne  // ne = any
  bc:	b.eq	a4 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0xa4>  // b.none
  c0:	cbz	w2, 1e0 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0x1e0>
  c4:	lsr	w4, w3, #9
  c8:	eor	w4, w4, w3, lsr #4
  cc:	and	w4, w4, w6
  d0:	lsl	w7, w4, #4
  d4:	add	x10, x0, x7
  d8:	ldr	x7, [x0, x7]
  dc:	cmp	x3, x7
  e0:	b.ne	118 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0x118>  // b.any
  e4:	adrp	x3, 0 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj>
  e8:	adrp	x1, 0 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj>
  ec:	adrp	x0, 0 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj>
  f0:	add	x3, x3, #0x0
  f4:	add	x1, x1, #0x0
  f8:	add	x0, x0, #0x0
  fc:	mov	w2, #0x17a                 	// #378
 100:	bl	0 <__assert_fail>
 104:	mov	x0, x21
 108:	ldp	x19, x20, [sp, #16]
 10c:	ldr	x21, [sp, #32]
 110:	ldp	x29, x30, [sp], #48
 114:	b	0 <_ZdlPvm>
 118:	mov	w11, #0x1                   	// #1
 11c:	mov	x9, #0x0                   	// #0
 120:	cmn	x7, #0x8
 124:	b.ne	184 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0x184>  // b.any
 128:	cmp	x9, #0x0
 12c:	ldr	w4, [x19, #16]
 130:	csel	x9, x9, x10, ne  // ne = any
 134:	add	w4, w4, #0x1
 138:	str	x3, [x9]
 13c:	ldr	x3, [x5, #8]
 140:	str	x3, [x9, #8]
 144:	str	w4, [x19, #16]
 148:	b	a4 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0xa4>
 14c:	cbnz	w3, 1c0 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0x1c0>
 150:	ubfiz	x2, x2, #4, #32
 154:	mov	x1, #0xfffffffffffffff8    	// #-8
 158:	add	x2, x0, x2
 15c:	cmp	x0, x2
 160:	b.eq	174 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0x174>  // b.none
 164:	nop
 168:	str	x1, [x0], #16
 16c:	cmp	x2, x0
 170:	b.ne	168 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0x168>  // b.any
 174:	ldp	x19, x20, [sp, #16]
 178:	ldr	x21, [sp, #32]
 17c:	ldp	x29, x30, [sp], #48
 180:	ret
 184:	add	w4, w11, w4
 188:	cmp	x9, #0x0
 18c:	and	w12, w6, w4
 190:	ccmn	x7, #0x10, #0x0, eq  // eq = none
 194:	csel	x10, x10, x9, eq  // eq = none
 198:	add	w11, w11, #0x1
 19c:	lsl	x7, x12, #4
 1a0:	and	w4, w6, w4
 1a4:	add	x12, x0, x7
 1a8:	ldr	x7, [x0, x7]
 1ac:	cmp	x3, x7
 1b0:	b.eq	e4 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0xe4>  // b.none
 1b4:	mov	x9, x10
 1b8:	mov	x10, x12
 1bc:	b	120 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0x120>
 1c0:	adrp	x3, 0 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj>
 1c4:	adrp	x1, 0 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj>
 1c8:	adrp	x0, 0 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj>
 1cc:	add	x3, x3, #0x0
 1d0:	add	x1, x1, #0x0
 1d4:	add	x0, x0, #0x0
 1d8:	mov	w2, #0x15b                 	// #347
 1dc:	bl	0 <__assert_fail>
 1e0:	mov	x0, #0x0                   	// #0
 1e4:	str	x3, [x0]
 1e8:	brk	#0x3e8

Disassembly of section .text.startup:

0000000000000000 <_GLOBAL__sub_I_Record.cpp>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x5, #0x400000000           	// #17179869184
   8:	mov	x3, #0x1                   	// #1
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	adrp	x20, 0 <_GLOBAL__sub_I_Record.cpp>
  18:	add	x20, x20, #0x0
  1c:	add	x1, x20, #0x88
  20:	add	x4, x20, #0xd8
  24:	add	x6, x20, #0xa8
  28:	adrp	x19, 0 <__dso_handle>
  2c:	str	x5, [x1, #24]
  30:	add	x19, x19, #0x0
  34:	stp	xzr, x6, [x1, #8]
  38:	mov	x2, x19
  3c:	adrp	x0, 0 <_GLOBAL__sub_I_Record.cpp>
  40:	stp	x4, xzr, [x1, #64]
  44:	add	x0, x0, #0x0
  48:	stp	xzr, x3, [x1, #80]
  4c:	str	xzr, [x20, #136]
  50:	bl	0 <__cxa_atexit>
  54:	adrp	x1, 410 <_ZN4llvm8BitRecTy6SharedE>
  58:	adrp	x3, 0 <_GLOBAL__sub_I_Record.cpp>
  5c:	adrp	x5, 0 <_GLOBAL__sub_I_Record.cpp>
  60:	adrp	x7, 0 <_GLOBAL__sub_I_Record.cpp>
  64:	ldr	x1, [x1]
  68:	add	x5, x5, #0x0
  6c:	ldr	x3, [x3]
  70:	add	x7, x7, #0x0
  74:	adrp	x6, 0 <_GLOBAL__sub_I_Record.cpp>
  78:	add	x6, x6, #0x0
  7c:	add	x3, x3, #0x10
  80:	str	x3, [x1]
  84:	str	wzr, [x1, #8]
  88:	mov	x2, x19
  8c:	str	xzr, [x1, #16]
  90:	adrp	x0, 0 <_GLOBAL__sub_I_Record.cpp>
  94:	add	x0, x0, #0x0
  98:	str	x5, [x20, #744]
  9c:	str	x7, [x20, #752]
  a0:	str	x6, [x20, #760]
  a4:	str	wzr, [x20, #768]
  a8:	strb	wzr, [x20, #772]
  ac:	bl	0 <__cxa_atexit>
  b0:	adrp	x1, 3f8 <_ZN4llvm9CodeRecTy6SharedE>
  b4:	adrp	x3, 0 <_GLOBAL__sub_I_Record.cpp>
  b8:	mov	w4, #0x2                   	// #2
  bc:	mov	x2, x19
  c0:	ldr	x1, [x1]
  c4:	adrp	x0, 0 <_GLOBAL__sub_I_Record.cpp>
  c8:	ldr	x3, [x3]
  cc:	add	x0, x0, #0x0
  d0:	str	w4, [x1, #8]
  d4:	add	x3, x3, #0x10
  d8:	str	x3, [x1]
  dc:	str	xzr, [x1, #16]
  e0:	bl	0 <__cxa_atexit>
  e4:	adrp	x1, 3e0 <_ZN4llvm8IntRecTy6SharedE>
  e8:	adrp	x3, 0 <_GLOBAL__sub_I_Record.cpp>
  ec:	mov	w4, #0x3                   	// #3
  f0:	mov	x2, x19
  f4:	ldr	x1, [x1]
  f8:	adrp	x0, 0 <_GLOBAL__sub_I_Record.cpp>
  fc:	ldr	x3, [x3]
 100:	add	x0, x0, #0x0
 104:	str	w4, [x1, #8]
 108:	add	x3, x3, #0x10
 10c:	str	x3, [x1]
 110:	str	xzr, [x1, #16]
 114:	bl	0 <__cxa_atexit>
 118:	adrp	x1, 3c8 <_ZN4llvm11StringRecTy6SharedE>
 11c:	adrp	x3, 0 <_GLOBAL__sub_I_Record.cpp>
 120:	mov	w4, #0x4                   	// #4
 124:	mov	x2, x19
 128:	ldr	x1, [x1]
 12c:	adrp	x0, 0 <_GLOBAL__sub_I_Record.cpp>
 130:	ldr	x3, [x3]
 134:	add	x0, x0, #0x0
 138:	str	w4, [x1, #8]
 13c:	add	x3, x3, #0x10
 140:	str	x3, [x1]
 144:	str	xzr, [x1, #16]
 148:	bl	0 <__cxa_atexit>
 14c:	adrp	x1, 3b0 <_ZN4llvm8DagRecTy6SharedE>
 150:	adrp	x3, 0 <_GLOBAL__sub_I_Record.cpp>
 154:	mov	x2, x19
 158:	mov	w4, #0x6                   	// #6
 15c:	ldr	x1, [x1]
 160:	adrp	x0, 0 <_GLOBAL__sub_I_Record.cpp>
 164:	ldr	x3, [x3]
 168:	add	x0, x0, #0x0
 16c:	ldp	x19, x20, [sp, #16]
 170:	add	x3, x3, #0x10
 174:	str	x3, [x1]
 178:	str	w4, [x1, #8]
 17c:	str	xzr, [x1, #16]
 180:	ldp	x29, x30, [sp], #32
 184:	b	0 <__cxa_atexit>

SetTheory.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm9SetTheory8Expander6anchorEv>:
       0:	ret
       4:	nop

0000000000000008 <_ZN12_GLOBAL__N_15AddOpD1Ev>:
       8:	ret
       c:	nop

0000000000000010 <_ZN12_GLOBAL__N_15SubOpD1Ev>:
      10:	ret
      14:	nop

0000000000000018 <_ZN12_GLOBAL__N_15AndOpD1Ev>:
      18:	ret
      1c:	nop

0000000000000020 <_ZN12_GLOBAL__N_15ShlOpD1Ev>:
      20:	ret
      24:	nop

0000000000000028 <_ZN12_GLOBAL__N_17TruncOpD1Ev>:
      28:	ret
      2c:	nop

0000000000000030 <_ZN12_GLOBAL__N_15RotOpD1Ev>:
      30:	ret
      34:	nop

0000000000000038 <_ZN12_GLOBAL__N_110DecimateOpD1Ev>:
      38:	ret
      3c:	nop

0000000000000040 <_ZN12_GLOBAL__N_112InterleaveOpD1Ev>:
      40:	ret
      44:	nop

0000000000000048 <_ZN12_GLOBAL__N_110SequenceOpD1Ev>:
      48:	ret
      4c:	nop

0000000000000050 <_ZN12_GLOBAL__N_113FieldExpanderD1Ev>:
      50:	ret
      54:	nop

0000000000000058 <_ZN12_GLOBAL__N_15AddOpD0Ev>:
      58:	mov	x1, #0x8                   	// #8
      5c:	b	0 <_ZdlPvm>

0000000000000060 <_ZN12_GLOBAL__N_15SubOpD0Ev>:
      60:	mov	x1, #0x8                   	// #8
      64:	b	0 <_ZdlPvm>

0000000000000068 <_ZN12_GLOBAL__N_15AndOpD0Ev>:
      68:	mov	x1, #0x8                   	// #8
      6c:	b	0 <_ZdlPvm>

0000000000000070 <_ZN12_GLOBAL__N_15ShlOpD0Ev>:
      70:	mov	x1, #0x8                   	// #8
      74:	b	0 <_ZdlPvm>

0000000000000078 <_ZN12_GLOBAL__N_17TruncOpD0Ev>:
      78:	mov	x1, #0x8                   	// #8
      7c:	b	0 <_ZdlPvm>

0000000000000080 <_ZN12_GLOBAL__N_15RotOpD0Ev>:
      80:	mov	x1, #0x10                  	// #16
      84:	b	0 <_ZdlPvm>

0000000000000088 <_ZN12_GLOBAL__N_110DecimateOpD0Ev>:
      88:	mov	x1, #0x8                   	// #8
      8c:	b	0 <_ZdlPvm>

0000000000000090 <_ZN12_GLOBAL__N_112InterleaveOpD0Ev>:
      90:	mov	x1, #0x8                   	// #8
      94:	b	0 <_ZdlPvm>

0000000000000098 <_ZN12_GLOBAL__N_110SequenceOpD0Ev>:
      98:	mov	x1, #0x8                   	// #8
      9c:	b	0 <_ZdlPvm>

00000000000000a0 <_ZN12_GLOBAL__N_113FieldExpanderD0Ev>:
      a0:	mov	x1, #0x18                  	// #24
      a4:	b	0 <_ZdlPvm>

00000000000000a8 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE15allocateBucketsEj.isra.0.part.0>:
      a8:	stp	x29, x30, [sp, #-16]!
      ac:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
      b0:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
      b4:	mov	x29, sp
      b8:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
      bc:	add	x3, x3, #0x0
      c0:	add	x1, x1, #0x0
      c4:	add	x0, x0, #0x0
      c8:	mov	w2, #0x47d                 	// #1149
      cc:	bl	0 <__assert_fail>

00000000000000d0 <_ZN4llvm3isaINS_10StringInitEPNS_4InitEEEbRKT0_.isra.0.part.0>:
      d0:	stp	x29, x30, [sp, #-16]!
      d4:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
      d8:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
      dc:	mov	x29, sp
      e0:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
      e4:	add	x3, x3, #0x0
      e8:	add	x1, x1, #0x0
      ec:	add	x0, x0, #0x0
      f0:	mov	w2, #0x69                  	// #105
      f4:	bl	0 <__assert_fail>

00000000000000f8 <_ZN4llvm3isaINS_7IntInitEPNS_4InitEEEbRKT0_.isra.0.part.0>:
      f8:	stp	x29, x30, [sp, #-16]!
      fc:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     100:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     104:	mov	x29, sp
     108:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     10c:	add	x3, x3, #0x0
     110:	add	x1, x1, #0x0
     114:	add	x0, x0, #0x0
     118:	mov	w2, #0x69                  	// #105
     11c:	bl	0 <__assert_fail>

0000000000000120 <_ZN4llvm3isaINS_7DefInitEPNS_4InitEEEbRKT0_.isra.0.part.0>:
     120:	stp	x29, x30, [sp, #-16]!
     124:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     128:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     12c:	mov	x29, sp
     130:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     134:	add	x3, x3, #0x0
     138:	add	x1, x1, #0x0
     13c:	add	x0, x0, #0x0
     140:	mov	w2, #0x69                  	// #105
     144:	bl	0 <__assert_fail>

0000000000000148 <_ZN4llvm3isaINS_8ListInitEPNS_4InitEEEbRKT0_.isra.0.part.0>:
     148:	stp	x29, x30, [sp, #-16]!
     14c:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     150:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     154:	mov	x29, sp
     158:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     15c:	add	x3, x3, #0x0
     160:	add	x1, x1, #0x0
     164:	add	x0, x0, #0x0
     168:	mov	w2, #0x69                  	// #105
     16c:	bl	0 <__assert_fail>

0000000000000170 <_ZN4llvm3isaINS_7DagInitEPNS_4InitEEEbRKT0_.isra.0.part.0>:
     170:	stp	x29, x30, [sp, #-16]!
     174:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     178:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     17c:	mov	x29, sp
     180:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     184:	add	x3, x3, #0x0
     188:	add	x1, x1, #0x0
     18c:	add	x0, x0, #0x0
     190:	mov	w2, #0x69                  	// #105
     194:	bl	0 <__assert_fail>

0000000000000198 <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE>:
     198:	stp	x29, x30, [sp, #-112]!
     19c:	mov	x29, sp
     1a0:	stp	x21, x22, [sp, #32]
     1a4:	mov	x21, x0
     1a8:	add	x22, x0, #0x30
     1ac:	mov	x0, x22
     1b0:	stp	x19, x20, [sp, #16]
     1b4:	mov	x19, x2
     1b8:	stp	x23, x24, [sp, #48]
     1bc:	mov	x24, x3
     1c0:	stp	x25, x26, [sp, #64]
     1c4:	mov	x25, x1
     1c8:	stp	x27, x28, [sp, #80]
     1cc:	bl	0 <_ZN4llvm13StringMapImpl15LookupBucketForENS_9StringRefE>
     1d0:	mov	w27, w0
     1d4:	ldr	x26, [x21, #48]
     1d8:	mov	x20, x27
     1dc:	ldr	x0, [x26, x27, lsl #3]
     1e0:	add	x1, x26, w27, uxtw #3
     1e4:	cbz	x0, 210 <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE+0x78>
     1e8:	cmn	x0, #0x8
     1ec:	b.eq	204 <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE+0x6c>  // b.none
     1f0:	add	x0, sp, #0x68
     1f4:	mov	w2, #0x0                   	// #0
     1f8:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     1fc:	ldr	x0, [sp, #104]
     200:	b	27c <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE+0xe4>
     204:	ldr	w0, [x22, #16]
     208:	sub	w0, w0, #0x1
     20c:	str	w0, [x22, #16]
     210:	add	x28, x19, #0x11
     214:	mov	x0, x28
     218:	bl	0 <malloc>
     21c:	mov	x23, x0
     220:	cbz	x0, 310 <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE+0x178>
     224:	stp	x19, xzr, [x0]
     228:	add	x3, x0, #0x10
     22c:	cbnz	x19, 2d8 <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE+0x140>
     230:	ldp	w1, w0, [x22, #8]
     234:	strb	wzr, [x3, x19]
     238:	ldr	w2, [x22, #16]
     23c:	str	x23, [x26, x27, lsl #3]
     240:	add	w0, w0, #0x1
     244:	str	w0, [x22, #12]
     248:	add	w0, w0, w2
     24c:	cmp	w0, w1
     250:	b.hi	2f0 <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE+0x158>  // b.pmore
     254:	mov	w1, w20
     258:	mov	x0, x22
     25c:	bl	0 <_ZN4llvm13StringMapImpl11RehashTableEj>
     260:	mov	w3, w0
     264:	ldr	x1, [x21, #48]
     268:	add	x0, sp, #0x68
     26c:	mov	w2, #0x0                   	// #0
     270:	add	x1, x1, w3, uxtw #3
     274:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     278:	ldr	x0, [sp, #104]
     27c:	ldr	x1, [x0]
     280:	ldr	x2, [x24]
     284:	str	xzr, [x24]
     288:	ldr	x0, [x1, #8]
     28c:	str	x2, [x1, #8]
     290:	cbz	x0, 2a0 <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE+0x108>
     294:	ldr	x1, [x0]
     298:	ldr	x1, [x1, #16]
     29c:	blr	x1
     2a0:	ldp	x19, x20, [sp, #16]
     2a4:	ldp	x21, x22, [sp, #32]
     2a8:	ldp	x23, x24, [sp, #48]
     2ac:	ldp	x25, x26, [sp, #64]
     2b0:	ldp	x27, x28, [sp, #80]
     2b4:	ldp	x29, x30, [sp], #112
     2b8:	ret
     2bc:	mov	x0, #0x1                   	// #1
     2c0:	bl	0 <malloc>
     2c4:	mov	x23, x0
     2c8:	cbz	x0, 314 <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE+0x17c>
     2cc:	add	x3, x23, #0x10
     2d0:	mov	x0, #0xffffffffffffffef    	// #-17
     2d4:	stp	x0, xzr, [x23]
     2d8:	mov	x0, x3
     2dc:	mov	x1, x25
     2e0:	mov	x2, x19
     2e4:	bl	0 <memcpy>
     2e8:	mov	x3, x0
     2ec:	b	230 <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE+0x98>
     2f0:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     2f4:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     2f8:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     2fc:	add	x3, x3, #0x0
     300:	add	x1, x1, #0x0
     304:	add	x0, x0, #0x0
     308:	mov	w2, #0x1bb                 	// #443
     30c:	bl	0 <__assert_fail>
     310:	cbz	x28, 2bc <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE+0x124>
     314:	mov	w1, #0x1                   	// #1
     318:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     31c:	add	x0, x0, #0x0
     320:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
     324:	brk	#0x3e8

0000000000000328 <_ZN4llvm9SetTheoryC1Ev>:
     328:	stp	x29, x30, [sp, #-64]!
     32c:	add	x2, x0, #0x8
     330:	mov	x1, #0x1000000000          	// #68719476736
     334:	mov	x29, sp
     338:	stp	x19, x20, [sp, #16]
     33c:	mov	x19, x0
     340:	mov	x0, #0x8                   	// #8
     344:	stp	x21, x22, [sp, #32]
     348:	adrp	x20, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     34c:	add	x21, sp, #0x38
     350:	str	wzr, [x19, #8]
     354:	adrp	x22, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     358:	str	xzr, [x19, #16]
     35c:	add	x22, x22, #0x0
     360:	stp	x2, x2, [x2, #16]
     364:	str	xzr, [x2, #32]
     368:	stp	xzr, xzr, [x19, #48]
     36c:	str	x1, [x19, #64]
     370:	stp	xzr, xzr, [x19, #80]
     374:	str	x1, [x19, #96]
     378:	bl	0 <_Znwm>
     37c:	mov	x4, x0
     380:	add	x5, x20, #0x0
     384:	mov	x0, x19
     388:	add	x5, x5, #0x10
     38c:	mov	x1, x22
     390:	str	x5, [x4]
     394:	mov	x3, x21
     398:	mov	x2, #0x3                   	// #3
     39c:	str	x4, [sp, #56]
     3a0:	bl	198 <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE>
     3a4:	ldr	x0, [sp, #56]
     3a8:	cbz	x0, 3b8 <_ZN4llvm9SetTheoryC1Ev+0x90>
     3ac:	ldr	x1, [x0]
     3b0:	ldr	x1, [x1, #16]
     3b4:	blr	x1
     3b8:	mov	x0, #0x8                   	// #8
     3bc:	bl	0 <_Znwm>
     3c0:	mov	x5, x0
     3c4:	add	x4, x20, #0x0
     3c8:	add	x4, x4, #0x40
     3cc:	adrp	x22, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     3d0:	add	x22, x22, #0x0
     3d4:	mov	x0, x19
     3d8:	str	x4, [x5]
     3dc:	mov	x1, x22
     3e0:	mov	x3, x21
     3e4:	mov	x2, #0x3                   	// #3
     3e8:	str	x5, [sp, #56]
     3ec:	bl	198 <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE>
     3f0:	ldr	x0, [sp, #56]
     3f4:	cbz	x0, 404 <_ZN4llvm9SetTheoryC1Ev+0xdc>
     3f8:	ldr	x1, [x0]
     3fc:	ldr	x1, [x1, #16]
     400:	blr	x1
     404:	mov	x0, #0x8                   	// #8
     408:	bl	0 <_Znwm>
     40c:	mov	x5, x0
     410:	add	x4, x20, #0x0
     414:	add	x4, x4, #0x70
     418:	adrp	x22, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     41c:	add	x22, x22, #0x0
     420:	mov	x0, x19
     424:	str	x4, [x5]
     428:	mov	x1, x22
     42c:	mov	x3, x21
     430:	mov	x2, #0x3                   	// #3
     434:	str	x5, [sp, #56]
     438:	bl	198 <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE>
     43c:	ldr	x0, [sp, #56]
     440:	cbz	x0, 450 <_ZN4llvm9SetTheoryC1Ev+0x128>
     444:	ldr	x1, [x0]
     448:	ldr	x1, [x1, #16]
     44c:	blr	x1
     450:	mov	x0, #0x8                   	// #8
     454:	bl	0 <_Znwm>
     458:	mov	x5, x0
     45c:	add	x4, x20, #0x0
     460:	add	x4, x4, #0xa0
     464:	adrp	x22, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     468:	add	x22, x22, #0x0
     46c:	mov	x0, x19
     470:	str	x4, [x5]
     474:	mov	x1, x22
     478:	mov	x3, x21
     47c:	mov	x2, #0x3                   	// #3
     480:	str	x5, [sp, #56]
     484:	bl	198 <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE>
     488:	ldr	x0, [sp, #56]
     48c:	cbz	x0, 49c <_ZN4llvm9SetTheoryC1Ev+0x174>
     490:	ldr	x1, [x0]
     494:	ldr	x1, [x1, #16]
     498:	blr	x1
     49c:	mov	x0, #0x8                   	// #8
     4a0:	bl	0 <_Znwm>
     4a4:	mov	x5, x0
     4a8:	add	x4, x20, #0x0
     4ac:	add	x4, x4, #0xd8
     4b0:	adrp	x22, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     4b4:	add	x22, x22, #0x0
     4b8:	mov	x0, x19
     4bc:	str	x4, [x5]
     4c0:	mov	x1, x22
     4c4:	mov	x3, x21
     4c8:	mov	x2, #0x5                   	// #5
     4cc:	str	x5, [sp, #56]
     4d0:	bl	198 <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE>
     4d4:	ldr	x0, [sp, #56]
     4d8:	cbz	x0, 4e8 <_ZN4llvm9SetTheoryC1Ev+0x1c0>
     4dc:	ldr	x1, [x0]
     4e0:	ldr	x1, [x1, #16]
     4e4:	blr	x1
     4e8:	mov	x0, #0x10                  	// #16
     4ec:	bl	0 <_Znwm>
     4f0:	mov	x4, x0
     4f4:	add	x5, x20, #0x0
     4f8:	add	x5, x5, #0x110
     4fc:	adrp	x22, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     500:	add	x22, x22, #0x0
     504:	mov	x0, x19
     508:	str	x5, [x4]
     50c:	mov	x1, x22
     510:	strb	wzr, [x4, #8]
     514:	mov	x3, x21
     518:	mov	x2, #0x4                   	// #4
     51c:	str	x4, [sp, #56]
     520:	bl	198 <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE>
     524:	ldr	x0, [sp, #56]
     528:	cbz	x0, 538 <_ZN4llvm9SetTheoryC1Ev+0x210>
     52c:	ldr	x1, [x0]
     530:	ldr	x1, [x1, #16]
     534:	blr	x1
     538:	mov	x0, #0x10                  	// #16
     53c:	bl	0 <_Znwm>
     540:	mov	x4, x0
     544:	add	x5, x20, #0x0
     548:	add	x5, x5, #0x110
     54c:	mov	w6, #0x1                   	// #1
     550:	adrp	x22, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     554:	add	x22, x22, #0x0
     558:	str	x5, [x4]
     55c:	mov	x0, x19
     560:	strb	w6, [x4, #8]
     564:	mov	x1, x22
     568:	mov	x3, x21
     56c:	mov	x2, #0x4                   	// #4
     570:	str	x4, [sp, #56]
     574:	bl	198 <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE>
     578:	ldr	x0, [sp, #56]
     57c:	cbz	x0, 58c <_ZN4llvm9SetTheoryC1Ev+0x264>
     580:	ldr	x1, [x0]
     584:	ldr	x1, [x1, #16]
     588:	blr	x1
     58c:	mov	x0, #0x8                   	// #8
     590:	bl	0 <_Znwm>
     594:	mov	x5, x0
     598:	add	x4, x20, #0x0
     59c:	add	x4, x4, #0x148
     5a0:	adrp	x22, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     5a4:	add	x22, x22, #0x0
     5a8:	mov	x0, x19
     5ac:	str	x4, [x5]
     5b0:	mov	x1, x22
     5b4:	mov	x3, x21
     5b8:	mov	x2, #0x8                   	// #8
     5bc:	str	x5, [sp, #56]
     5c0:	bl	198 <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE>
     5c4:	ldr	x0, [sp, #56]
     5c8:	cbz	x0, 5d8 <_ZN4llvm9SetTheoryC1Ev+0x2b0>
     5cc:	ldr	x1, [x0]
     5d0:	ldr	x1, [x1, #16]
     5d4:	blr	x1
     5d8:	mov	x0, #0x8                   	// #8
     5dc:	bl	0 <_Znwm>
     5e0:	mov	x5, x0
     5e4:	add	x4, x20, #0x0
     5e8:	add	x4, x4, #0x180
     5ec:	adrp	x22, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     5f0:	add	x22, x22, #0x0
     5f4:	mov	x0, x19
     5f8:	str	x4, [x5]
     5fc:	mov	x1, x22
     600:	mov	x3, x21
     604:	mov	x2, #0xa                   	// #10
     608:	str	x5, [sp, #56]
     60c:	bl	198 <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE>
     610:	ldr	x0, [sp, #56]
     614:	cbz	x0, 624 <_ZN4llvm9SetTheoryC1Ev+0x2fc>
     618:	ldr	x1, [x0]
     61c:	ldr	x1, [x1, #16]
     620:	blr	x1
     624:	mov	x0, #0x8                   	// #8
     628:	bl	0 <_Znwm>
     62c:	mov	x4, x0
     630:	add	x20, x20, #0x0
     634:	add	x20, x20, #0x1b0
     638:	adrp	x22, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     63c:	add	x22, x22, #0x0
     640:	mov	x0, x19
     644:	str	x20, [x4]
     648:	mov	x1, x22
     64c:	mov	x3, x21
     650:	mov	x2, #0x8                   	// #8
     654:	str	x4, [sp, #56]
     658:	bl	198 <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE>
     65c:	ldr	x0, [sp, #56]
     660:	cbz	x0, 670 <_ZN4llvm9SetTheoryC1Ev+0x348>
     664:	ldr	x1, [x0]
     668:	ldr	x1, [x1, #16]
     66c:	blr	x1
     670:	ldp	x19, x20, [sp, #16]
     674:	ldp	x21, x22, [sp, #32]
     678:	ldp	x29, x30, [sp], #64
     67c:	ret

0000000000000680 <_ZN4llvm9SetTheory11addExpanderENS_9StringRefESt10unique_ptrINS0_8ExpanderESt14default_deleteIS3_EE>:
     680:	stp	x29, x30, [sp, #-112]!
     684:	mov	x29, sp
     688:	stp	x21, x22, [sp, #32]
     68c:	mov	x21, x0
     690:	add	x22, x0, #0x50
     694:	mov	x0, x22
     698:	stp	x19, x20, [sp, #16]
     69c:	mov	x19, x2
     6a0:	stp	x23, x24, [sp, #48]
     6a4:	mov	x24, x3
     6a8:	stp	x25, x26, [sp, #64]
     6ac:	mov	x25, x1
     6b0:	stp	x27, x28, [sp, #80]
     6b4:	bl	0 <_ZN4llvm13StringMapImpl15LookupBucketForENS_9StringRefE>
     6b8:	mov	w27, w0
     6bc:	ldr	x26, [x21, #80]
     6c0:	mov	x20, x27
     6c4:	ldr	x0, [x26, x27, lsl #3]
     6c8:	add	x1, x26, w27, uxtw #3
     6cc:	cbz	x0, 6f8 <_ZN4llvm9SetTheory11addExpanderENS_9StringRefESt10unique_ptrINS0_8ExpanderESt14default_deleteIS3_EE+0x78>
     6d0:	cmn	x0, #0x8
     6d4:	b.eq	6ec <_ZN4llvm9SetTheory11addExpanderENS_9StringRefESt10unique_ptrINS0_8ExpanderESt14default_deleteIS3_EE+0x6c>  // b.none
     6d8:	add	x0, sp, #0x68
     6dc:	mov	w2, #0x0                   	// #0
     6e0:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     6e4:	ldr	x0, [sp, #104]
     6e8:	b	764 <_ZN4llvm9SetTheory11addExpanderENS_9StringRefESt10unique_ptrINS0_8ExpanderESt14default_deleteIS3_EE+0xe4>
     6ec:	ldr	w0, [x22, #16]
     6f0:	sub	w0, w0, #0x1
     6f4:	str	w0, [x22, #16]
     6f8:	add	x28, x19, #0x11
     6fc:	mov	x0, x28
     700:	bl	0 <malloc>
     704:	mov	x23, x0
     708:	cbz	x0, 7f8 <_ZN4llvm9SetTheory11addExpanderENS_9StringRefESt10unique_ptrINS0_8ExpanderESt14default_deleteIS3_EE+0x178>
     70c:	stp	x19, xzr, [x0]
     710:	add	x3, x0, #0x10
     714:	cbnz	x19, 7c0 <_ZN4llvm9SetTheory11addExpanderENS_9StringRefESt10unique_ptrINS0_8ExpanderESt14default_deleteIS3_EE+0x140>
     718:	ldp	w1, w0, [x22, #8]
     71c:	strb	wzr, [x3, x19]
     720:	ldr	w2, [x22, #16]
     724:	str	x23, [x26, x27, lsl #3]
     728:	add	w0, w0, #0x1
     72c:	str	w0, [x22, #12]
     730:	add	w0, w0, w2
     734:	cmp	w0, w1
     738:	b.hi	7d8 <_ZN4llvm9SetTheory11addExpanderENS_9StringRefESt10unique_ptrINS0_8ExpanderESt14default_deleteIS3_EE+0x158>  // b.pmore
     73c:	mov	w1, w20
     740:	mov	x0, x22
     744:	bl	0 <_ZN4llvm13StringMapImpl11RehashTableEj>
     748:	mov	w3, w0
     74c:	ldr	x1, [x21, #80]
     750:	add	x0, sp, #0x68
     754:	mov	w2, #0x0                   	// #0
     758:	add	x1, x1, w3, uxtw #3
     75c:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     760:	ldr	x0, [sp, #104]
     764:	ldr	x1, [x0]
     768:	ldr	x2, [x24]
     76c:	str	xzr, [x24]
     770:	ldr	x0, [x1, #8]
     774:	str	x2, [x1, #8]
     778:	cbz	x0, 788 <_ZN4llvm9SetTheory11addExpanderENS_9StringRefESt10unique_ptrINS0_8ExpanderESt14default_deleteIS3_EE+0x108>
     77c:	ldr	x1, [x0]
     780:	ldr	x1, [x1, #16]
     784:	blr	x1
     788:	ldp	x19, x20, [sp, #16]
     78c:	ldp	x21, x22, [sp, #32]
     790:	ldp	x23, x24, [sp, #48]
     794:	ldp	x25, x26, [sp, #64]
     798:	ldp	x27, x28, [sp, #80]
     79c:	ldp	x29, x30, [sp], #112
     7a0:	ret
     7a4:	mov	x0, #0x1                   	// #1
     7a8:	bl	0 <malloc>
     7ac:	mov	x23, x0
     7b0:	cbz	x0, 7fc <_ZN4llvm9SetTheory11addExpanderENS_9StringRefESt10unique_ptrINS0_8ExpanderESt14default_deleteIS3_EE+0x17c>
     7b4:	add	x3, x23, #0x10
     7b8:	mov	x0, #0xffffffffffffffef    	// #-17
     7bc:	stp	x0, xzr, [x23]
     7c0:	mov	x0, x3
     7c4:	mov	x1, x25
     7c8:	mov	x2, x19
     7cc:	bl	0 <memcpy>
     7d0:	mov	x3, x0
     7d4:	b	718 <_ZN4llvm9SetTheory11addExpanderENS_9StringRefESt10unique_ptrINS0_8ExpanderESt14default_deleteIS3_EE+0x98>
     7d8:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     7dc:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     7e0:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     7e4:	add	x3, x3, #0x0
     7e8:	add	x1, x1, #0x0
     7ec:	add	x0, x0, #0x0
     7f0:	mov	w2, #0x1bb                 	// #443
     7f4:	bl	0 <__assert_fail>
     7f8:	cbz	x28, 7a4 <_ZN4llvm9SetTheory11addExpanderENS_9StringRefESt10unique_ptrINS0_8ExpanderESt14default_deleteIS3_EE+0x124>
     7fc:	mov	w1, #0x1                   	// #1
     800:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     804:	add	x0, x0, #0x0
     808:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
     80c:	brk	#0x3e8

0000000000000810 <_ZN4llvm9SetTheory16addFieldExpanderENS_9StringRefES1_>:
     810:	stp	x29, x30, [sp, #-80]!
     814:	mov	x29, sp
     818:	stp	x19, x20, [sp, #16]
     81c:	mov	x20, x3
     820:	mov	x19, x4
     824:	stp	x21, x22, [sp, #32]
     828:	mov	x21, x0
     82c:	mov	x22, x2
     830:	mov	x0, #0x18                  	// #24
     834:	str	x23, [sp, #48]
     838:	mov	x23, x1
     83c:	bl	0 <_Znwm>
     840:	mov	x5, x0
     844:	adrp	x6, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     848:	add	x6, x6, #0x0
     84c:	mov	x0, x21
     850:	add	x6, x6, #0x1e0
     854:	mov	x1, x23
     858:	stp	x6, x20, [x5]
     85c:	mov	x2, x22
     860:	add	x3, sp, #0x48
     864:	str	x19, [x5, #16]
     868:	str	x5, [sp, #72]
     86c:	bl	680 <_ZN4llvm9SetTheory11addExpanderENS_9StringRefESt10unique_ptrINS0_8ExpanderESt14default_deleteIS3_EE>
     870:	ldr	x0, [sp, #72]
     874:	cbz	x0, 884 <_ZN4llvm9SetTheory16addFieldExpanderENS_9StringRefES1_+0x74>
     878:	ldr	x1, [x0]
     87c:	ldr	x1, [x1, #16]
     880:	blr	x1
     884:	ldp	x19, x20, [sp, #16]
     888:	ldp	x21, x22, [sp, #32]
     88c:	ldr	x23, [sp, #48]
     890:	ldp	x29, x30, [sp], #80
     894:	ret

0000000000000898 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE>:
     898:	stp	x29, x30, [sp, #-80]!
     89c:	mov	x29, sp
     8a0:	stp	x19, x20, [sp, #16]
     8a4:	ldr	w20, [x3, #152]
     8a8:	ldrb	w0, [x0, #8]
     8ac:	cmp	w0, #0x0
     8b0:	cneg	x4, x4, ne  // ne = any
     8b4:	cbz	w20, b68 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x2d0>
     8b8:	stp	x21, x22, [sp, #32]
     8bc:	mov	x19, x5
     8c0:	mov	w20, w20
     8c4:	stp	x23, x24, [sp, #48]
     8c8:	mov	x24, x3
     8cc:	stp	x25, x26, [sp, #64]
     8d0:	tbnz	x4, #63, b74 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x2dc>
     8d4:	udiv	x25, x4, x20
     8d8:	msub	x4, x25, x20, x4
     8dc:	ldr	x21, [x24, #144]
     8e0:	lsl	x25, x4, #3
     8e4:	add	x23, x21, x25
     8e8:	add	x20, x21, x20, lsl #3
     8ec:	cmp	x23, x20
     8f0:	b.eq	a28 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x190>  // b.none
     8f4:	add	x22, x19, #0xa0
     8f8:	add	x21, x19, #0x90
     8fc:	add	x26, x19, #0x10
     900:	b	950 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xb8>
     904:	mov	x4, x26
     908:	mov	w1, #0x10                  	// #16
     90c:	ldr	x3, [x23]
     910:	cmn	x3, #0x10
     914:	ccmn	x3, #0x8, #0x4, ne  // ne = any
     918:	b.eq	eec <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x654>  // b.none
     91c:	lsr	w0, w3, #9
     920:	sub	w1, w1, #0x1
     924:	eor	w0, w0, w3, lsr #4
     928:	and	w6, w0, w1
     92c:	mov	x0, x6
     930:	ubfiz	x2, x6, #3, #28
     934:	ldr	x6, [x4, x6, lsl #3]
     938:	add	x5, x4, x2
     93c:	cmp	x3, x6
     940:	b.ne	b88 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x2f0>  // b.any
     944:	add	x23, x23, #0x8
     948:	cmp	x20, x23
     94c:	b.eq	a20 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x188>  // b.none
     950:	ldrb	w0, [x19, #8]
     954:	and	w7, w0, #0x1
     958:	tbnz	w0, #0, 904 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x6c>
     95c:	ldr	w1, [x19, #24]
     960:	ldr	x4, [x19, #16]
     964:	cbnz	w1, 90c <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x74>
     968:	ldr	w0, [x19, #8]
     96c:	mov	x2, #0x0                   	// #0
     970:	ldr	x3, [x19]
     974:	lsr	w5, w0, #1
     978:	add	w5, w5, #0x1
     97c:	add	x3, x3, #0x1
     980:	str	x3, [x19]
     984:	add	w3, w1, w1, lsl #1
     988:	cmp	w3, w5, lsl #2
     98c:	b.ls	bcc <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x334>  // b.plast
     990:	ldr	w3, [x19, #12]
     994:	sub	w3, w1, w3
     998:	sub	w5, w3, w5
     99c:	cmp	w5, w1, lsr #3
     9a0:	b.ls	d00 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x468>  // b.plast
     9a4:	cbz	x2, dec <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x554>
     9a8:	lsr	w1, w0, #1
     9ac:	adds	w1, w1, #0x1
     9b0:	b.mi	f2c <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x694>  // b.first
     9b4:	bfi	w0, w1, #1, #31
     9b8:	str	w0, [x19, #8]
     9bc:	ldr	x0, [x2]
     9c0:	cmn	x0, #0x8
     9c4:	b.eq	9d4 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x13c>  // b.none
     9c8:	ldr	w0, [x19, #12]
     9cc:	sub	w0, w0, #0x1
     9d0:	str	w0, [x19, #12]
     9d4:	ldr	x0, [x23]
     9d8:	ldr	w1, [x19, #156]
     9dc:	str	x0, [x2]
     9e0:	ldr	w0, [x19, #152]
     9e4:	cmp	w0, w1
     9e8:	b.cs	cc8 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x430>  // b.hs, b.nlast
     9ec:	ldr	x1, [x19, #144]
     9f0:	ldr	x2, [x23]
     9f4:	str	x2, [x1, w0, uxtw #3]
     9f8:	ldp	w0, w2, [x19, #152]
     9fc:	mov	w1, w0
     a00:	add	x1, x1, #0x1
     a04:	cmp	x1, x2
     a08:	b.hi	f0c <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x674>  // b.pmore
     a0c:	add	w0, w0, #0x1
     a10:	str	w0, [x19, #152]
     a14:	add	x23, x23, #0x8
     a18:	cmp	x20, x23
     a1c:	b.ne	950 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xb8>  // b.any
     a20:	ldr	x21, [x24, #144]
     a24:	add	x20, x21, x25
     a28:	cmp	x21, x20
     a2c:	b.eq	b5c <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x2c4>  // b.none
     a30:	add	x23, x19, #0xa0
     a34:	add	x22, x19, #0x90
     a38:	add	x24, x19, #0x10
     a3c:	b	a8c <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x1f4>
     a40:	mov	x4, x24
     a44:	mov	w1, #0x10                  	// #16
     a48:	ldr	x3, [x21]
     a4c:	cmn	x3, #0x10
     a50:	ccmn	x3, #0x8, #0x4, ne  // ne = any
     a54:	b.eq	eec <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x654>  // b.none
     a58:	lsr	w0, w3, #9
     a5c:	sub	w1, w1, #0x1
     a60:	eor	w0, w0, w3, lsr #4
     a64:	and	w6, w0, w1
     a68:	mov	x0, x6
     a6c:	ubfiz	x2, x6, #3, #28
     a70:	ldr	x6, [x4, x6, lsl #3]
     a74:	add	x5, x4, x2
     a78:	cmp	x6, x3
     a7c:	b.ne	c28 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x390>  // b.any
     a80:	add	x21, x21, #0x8
     a84:	cmp	x21, x20
     a88:	b.eq	b5c <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x2c4>  // b.none
     a8c:	ldrb	w0, [x19, #8]
     a90:	and	w7, w0, #0x1
     a94:	tbnz	w0, #0, a40 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x1a8>
     a98:	ldr	w1, [x19, #24]
     a9c:	ldr	x4, [x19, #16]
     aa0:	cbnz	w1, a48 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x1b0>
     aa4:	ldr	w0, [x19, #8]
     aa8:	mov	x2, #0x0                   	// #0
     aac:	ldr	x4, [x19]
     ab0:	lsr	w3, w0, #1
     ab4:	add	w3, w3, #0x1
     ab8:	add	x4, x4, #0x1
     abc:	str	x4, [x19]
     ac0:	add	w4, w1, w1, lsl #1
     ac4:	cmp	w4, w3, lsl #2
     ac8:	b.ls	c6c <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x3d4>  // b.plast
     acc:	ldr	w4, [x19, #12]
     ad0:	sub	w4, w1, w4
     ad4:	sub	w3, w4, w3
     ad8:	cmp	w3, w1, lsr #3
     adc:	b.ls	d70 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x4d8>  // b.plast
     ae0:	cbz	x2, dec <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x554>
     ae4:	lsr	w1, w0, #1
     ae8:	adds	w1, w1, #0x1
     aec:	b.mi	f2c <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x694>  // b.first
     af0:	bfi	w0, w1, #1, #31
     af4:	str	w0, [x19, #8]
     af8:	ldr	x0, [x2]
     afc:	cmn	x0, #0x8
     b00:	b.eq	b10 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x278>  // b.none
     b04:	ldr	w0, [x19, #12]
     b08:	sub	w0, w0, #0x1
     b0c:	str	w0, [x19, #12]
     b10:	ldr	x0, [x21]
     b14:	ldr	w1, [x19, #156]
     b18:	str	x0, [x2]
     b1c:	ldr	w0, [x19, #152]
     b20:	cmp	w0, w1
     b24:	b.cs	ce4 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x44c>  // b.hs, b.nlast
     b28:	ldr	x1, [x19, #144]
     b2c:	ldr	x2, [x21]
     b30:	str	x2, [x1, w0, uxtw #3]
     b34:	ldp	w0, w2, [x19, #152]
     b38:	mov	w1, w0
     b3c:	add	x1, x1, #0x1
     b40:	cmp	x1, x2
     b44:	b.hi	f0c <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x674>  // b.pmore
     b48:	add	w0, w0, #0x1
     b4c:	str	w0, [x19, #152]
     b50:	add	x21, x21, #0x8
     b54:	cmp	x21, x20
     b58:	b.ne	a8c <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x1f4>  // b.any
     b5c:	ldp	x21, x22, [sp, #32]
     b60:	ldp	x23, x24, [sp, #48]
     b64:	ldp	x25, x26, [sp, #64]
     b68:	ldp	x19, x20, [sp, #16]
     b6c:	ldp	x29, x30, [sp], #80
     b70:	ret
     b74:	neg	x4, x4
     b78:	udiv	x25, x4, x20
     b7c:	msub	x4, x25, x20, x4
     b80:	sub	x4, x20, x4
     b84:	b	8dc <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x44>
     b88:	mov	w8, #0x1                   	// #1
     b8c:	mov	x2, #0x0                   	// #0
     b90:	cmn	x6, #0x8
     b94:	b.ne	e7c <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x5e4>  // b.any
     b98:	ldr	x1, [x19]
     b9c:	cmp	x2, #0x0
     ba0:	ldr	w0, [x19, #8]
     ba4:	csel	x2, x2, x5, ne  // ne = any
     ba8:	add	x1, x1, #0x1
     bac:	str	x1, [x19]
     bb0:	lsr	w5, w0, #1
     bb4:	add	w5, w5, #0x1
     bb8:	cbz	w7, 101c <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x784>
     bbc:	mov	w3, #0x30                  	// #48
     bc0:	mov	w1, #0x10                  	// #16
     bc4:	cmp	w3, w5, lsl #2
     bc8:	b.hi	990 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xf8>  // b.pmore
     bcc:	mov	x0, x19
     bd0:	lsl	w1, w1, #1
     bd4:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     bd8:	ldrb	w0, [x19, #8]
     bdc:	tbz	w0, #0, e0c <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x574>
     be0:	mov	x4, x26
     be4:	mov	w2, #0x10                  	// #16
     be8:	ldr	x1, [x23]
     bec:	cmn	x1, #0x8
     bf0:	ccmn	x1, #0x10, #0x4, ne  // ne = any
     bf4:	b.eq	eec <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x654>  // b.none
     bf8:	lsr	w0, w1, #9
     bfc:	sub	w3, w2, #0x1
     c00:	eor	w0, w0, w1, lsr #4
     c04:	and	w5, w0, w3
     c08:	mov	x0, x5
     c0c:	ubfiz	x2, x5, #3, #28
     c10:	ldr	x5, [x4, x5, lsl #3]
     c14:	add	x2, x4, x2
     c18:	cmp	x5, x1
     c1c:	b.ne	e3c <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x5a4>  // b.any
     c20:	ldr	w0, [x19, #8]
     c24:	b	9a8 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x110>
     c28:	mov	w8, #0x1                   	// #1
     c2c:	mov	x2, #0x0                   	// #0
     c30:	cmn	x6, #0x8
     c34:	b.ne	eb4 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x61c>  // b.any
     c38:	ldr	x1, [x19]
     c3c:	cmp	x2, #0x0
     c40:	ldr	w0, [x19, #8]
     c44:	csel	x2, x2, x5, ne  // ne = any
     c48:	add	x1, x1, #0x1
     c4c:	str	x1, [x19]
     c50:	lsr	w3, w0, #1
     c54:	add	w3, w3, #0x1
     c58:	cbz	w7, 1024 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x78c>
     c5c:	mov	w4, #0x30                  	// #48
     c60:	mov	w1, #0x10                  	// #16
     c64:	cmp	w4, w3, lsl #2
     c68:	b.hi	acc <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x234>  // b.pmore
     c6c:	mov	x0, x19
     c70:	lsl	w1, w1, #1
     c74:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     c78:	ldrb	w0, [x19, #8]
     c7c:	tbz	w0, #0, e1c <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x584>
     c80:	mov	x4, x24
     c84:	mov	w2, #0x10                  	// #16
     c88:	ldr	x1, [x21]
     c8c:	cmn	x1, #0x10
     c90:	ccmn	x1, #0x8, #0x4, ne  // ne = any
     c94:	b.eq	eec <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x654>  // b.none
     c98:	lsr	w0, w1, #9
     c9c:	sub	w3, w2, #0x1
     ca0:	eor	w0, w0, w1, lsr #4
     ca4:	and	w5, w0, w3
     ca8:	mov	x0, x5
     cac:	ubfiz	x2, x5, #3, #28
     cb0:	ldr	x5, [x4, x5, lsl #3]
     cb4:	add	x2, x4, x2
     cb8:	cmp	x5, x1
     cbc:	b.ne	e5c <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x5c4>  // b.any
     cc0:	ldr	w0, [x19, #8]
     cc4:	b	ae4 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x24c>
     cc8:	mov	x0, x21
     ccc:	mov	x1, x22
     cd0:	mov	x3, #0x8                   	// #8
     cd4:	mov	x2, #0x0                   	// #0
     cd8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     cdc:	ldr	w0, [x19, #152]
     ce0:	b	9ec <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x154>
     ce4:	mov	x0, x22
     ce8:	mov	x1, x23
     cec:	mov	x3, #0x8                   	// #8
     cf0:	mov	x2, #0x0                   	// #0
     cf4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     cf8:	ldr	w0, [x19, #152]
     cfc:	b	b28 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x290>
     d00:	mov	x0, x19
     d04:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     d08:	ldrb	w0, [x19, #8]
     d0c:	tbz	w0, #0, de0 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x548>
     d10:	mov	x4, x26
     d14:	mov	w2, #0x10                  	// #16
     d18:	ldr	x1, [x23]
     d1c:	cmn	x1, #0x10
     d20:	ccmn	x1, #0x8, #0x4, ne  // ne = any
     d24:	b.eq	eec <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x654>  // b.none
     d28:	lsr	w0, w1, #9
     d2c:	sub	w3, w2, #0x1
     d30:	eor	w0, w0, w1, lsr #4
     d34:	and	w5, w0, w3
     d38:	mov	x0, x5
     d3c:	ubfiz	x2, x5, #3, #28
     d40:	ldr	x5, [x4, x5, lsl #3]
     d44:	add	x2, x4, x2
     d48:	cmp	x1, x5
     d4c:	b.eq	c20 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x388>  // b.none
     d50:	mov	w7, #0x1                   	// #1
     d54:	mov	x6, #0x0                   	// #0
     d58:	cmn	x5, #0x8
     d5c:	b.ne	fb4 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x71c>  // b.any
     d60:	ldr	w0, [x19, #8]
     d64:	cbz	x6, 9a8 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x110>
     d68:	mov	x2, x6
     d6c:	b	9a8 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x110>
     d70:	mov	x0, x19
     d74:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     d78:	ldrb	w0, [x19, #8]
     d7c:	tbz	w0, #0, e2c <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x594>
     d80:	mov	x4, x24
     d84:	mov	w2, #0x10                  	// #16
     d88:	ldr	x1, [x21]
     d8c:	cmn	x1, #0x10
     d90:	ccmn	x1, #0x8, #0x4, ne  // ne = any
     d94:	b.eq	eec <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x654>  // b.none
     d98:	lsr	w0, w1, #9
     d9c:	sub	w3, w2, #0x1
     da0:	eor	w0, w0, w1, lsr #4
     da4:	and	w5, w0, w3
     da8:	mov	x0, x5
     dac:	ubfiz	x2, x5, #3, #28
     db0:	ldr	x5, [x4, x5, lsl #3]
     db4:	add	x2, x4, x2
     db8:	cmp	x1, x5
     dbc:	b.eq	cc0 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x428>  // b.none
     dc0:	mov	w7, #0x1                   	// #1
     dc4:	mov	x6, #0x0                   	// #0
     dc8:	cmn	x5, #0x8
     dcc:	b.ne	fe8 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x750>  // b.any
     dd0:	ldr	w0, [x19, #8]
     dd4:	cbz	x6, ae4 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x24c>
     dd8:	mov	x2, x6
     ddc:	b	ae4 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x24c>
     de0:	ldr	w2, [x19, #24]
     de4:	ldr	x4, [x19, #16]
     de8:	cbnz	w2, d18 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x480>
     dec:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     df0:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     df4:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     df8:	add	x3, x3, #0x0
     dfc:	add	x1, x1, #0x0
     e00:	add	x0, x0, #0x0
     e04:	mov	w2, #0x22f                 	// #559
     e08:	bl	0 <__assert_fail>
     e0c:	ldr	w2, [x19, #24]
     e10:	ldr	x4, [x19, #16]
     e14:	cbnz	w2, be8 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x350>
     e18:	b	dec <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x554>
     e1c:	ldr	w2, [x19, #24]
     e20:	ldr	x4, [x19, #16]
     e24:	cbnz	w2, c88 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x3f0>
     e28:	b	dec <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x554>
     e2c:	ldr	w2, [x19, #24]
     e30:	ldr	x4, [x19, #16]
     e34:	cbnz	w2, d88 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x4f0>
     e38:	b	dec <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x554>
     e3c:	mov	w7, #0x1                   	// #1
     e40:	mov	x6, #0x0                   	// #0
     e44:	cmn	x5, #0x8
     e48:	b.ne	f4c <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x6b4>  // b.any
     e4c:	cbz	x6, c20 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x388>
     e50:	ldr	w0, [x19, #8]
     e54:	mov	x2, x6
     e58:	b	9a8 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x110>
     e5c:	mov	w7, #0x1                   	// #1
     e60:	mov	x6, #0x0                   	// #0
     e64:	cmn	x5, #0x8
     e68:	b.ne	f80 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x6e8>  // b.any
     e6c:	cbz	x6, cc0 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x428>
     e70:	ldr	w0, [x19, #8]
     e74:	mov	x2, x6
     e78:	b	ae4 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x24c>
     e7c:	add	w0, w0, w8
     e80:	cmp	x2, #0x0
     e84:	and	w9, w1, w0
     e88:	ccmn	x6, #0x10, #0x0, eq  // eq = none
     e8c:	csel	x5, x5, x2, eq  // eq = none
     e90:	add	w8, w8, #0x1
     e94:	and	w0, w1, w0
     e98:	add	x10, x4, x9, lsl #3
     e9c:	ldr	x6, [x4, x9, lsl #3]
     ea0:	cmp	x3, x6
     ea4:	b.eq	944 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xac>  // b.none
     ea8:	mov	x2, x5
     eac:	mov	x5, x10
     eb0:	b	b90 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x2f8>
     eb4:	add	w0, w0, w8
     eb8:	cmp	x2, #0x0
     ebc:	and	w9, w1, w0
     ec0:	ccmn	x6, #0x10, #0x0, eq  // eq = none
     ec4:	csel	x5, x5, x2, eq  // eq = none
     ec8:	add	w8, w8, #0x1
     ecc:	and	w0, w1, w0
     ed0:	add	x10, x4, x9, lsl #3
     ed4:	ldr	x6, [x4, x9, lsl #3]
     ed8:	cmp	x3, x6
     edc:	b.eq	a80 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x1e8>  // b.none
     ee0:	mov	x2, x5
     ee4:	mov	x5, x10
     ee8:	b	c30 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x398>
     eec:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     ef0:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     ef4:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     ef8:	add	x3, x3, #0x0
     efc:	add	x1, x1, #0x0
     f00:	add	x0, x0, #0x0
     f04:	mov	w2, #0x250                 	// #592
     f08:	bl	0 <__assert_fail>
     f0c:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     f10:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     f14:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     f18:	add	x3, x3, #0x0
     f1c:	add	x1, x1, #0x0
     f20:	add	x0, x0, #0x0
     f24:	mov	w2, #0x43                  	// #67
     f28:	bl	0 <__assert_fail>
     f2c:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     f30:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     f34:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     f38:	add	x3, x3, #0x0
     f3c:	add	x1, x1, #0x0
     f40:	add	x0, x0, #0x0
     f44:	mov	w2, #0x441                 	// #1089
     f48:	bl	0 <__assert_fail>
     f4c:	add	w0, w0, w7
     f50:	cmp	x6, #0x0
     f54:	and	w8, w3, w0
     f58:	ccmn	x5, #0x10, #0x0, eq  // eq = none
     f5c:	csel	x6, x6, x2, ne  // ne = any
     f60:	add	w7, w7, #0x1
     f64:	and	w0, w3, w0
     f68:	add	x2, x4, x8, lsl #3
     f6c:	ldr	x5, [x4, x8, lsl #3]
     f70:	cmp	x1, x5
     f74:	b.ne	e44 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x5ac>  // b.any
     f78:	ldr	w0, [x19, #8]
     f7c:	b	9a8 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x110>
     f80:	add	w0, w7, w0
     f84:	cmp	x6, #0x0
     f88:	and	w8, w3, w0
     f8c:	ccmn	x5, #0x10, #0x0, eq  // eq = none
     f90:	csel	x6, x6, x2, ne  // ne = any
     f94:	add	w7, w7, #0x1
     f98:	and	w0, w3, w0
     f9c:	add	x2, x4, x8, lsl #3
     fa0:	ldr	x5, [x4, x8, lsl #3]
     fa4:	cmp	x1, x5
     fa8:	b.ne	e64 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x5cc>  // b.any
     fac:	ldr	w0, [x19, #8]
     fb0:	b	ae4 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x24c>
     fb4:	add	w0, w7, w0
     fb8:	cmp	x6, #0x0
     fbc:	and	w8, w3, w0
     fc0:	ccmn	x5, #0x10, #0x0, eq  // eq = none
     fc4:	csel	x6, x6, x2, ne  // ne = any
     fc8:	add	w7, w7, #0x1
     fcc:	and	w0, w3, w0
     fd0:	add	x2, x4, x8, lsl #3
     fd4:	ldr	x5, [x4, x8, lsl #3]
     fd8:	cmp	x1, x5
     fdc:	b.ne	d58 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x4c0>  // b.any
     fe0:	ldr	w0, [x19, #8]
     fe4:	b	9a8 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x110>
     fe8:	add	w0, w0, w7
     fec:	cmp	x6, #0x0
     ff0:	and	w8, w3, w0
     ff4:	ccmn	x5, #0x10, #0x0, eq  // eq = none
     ff8:	csel	x6, x6, x2, ne  // ne = any
     ffc:	add	w7, w7, #0x1
    1000:	and	w0, w3, w0
    1004:	add	x2, x4, x8, lsl #3
    1008:	ldr	x5, [x4, x8, lsl #3]
    100c:	cmp	x1, x5
    1010:	b.ne	dc8 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x530>  // b.any
    1014:	ldr	w0, [x19, #8]
    1018:	b	ae4 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x24c>
    101c:	ldr	w1, [x19, #24]
    1020:	b	984 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xec>
    1024:	ldr	w1, [x19, #24]
    1028:	b	ac0 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x228>
    102c:	nop

0000000000001030 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE>:
    1030:	stp	x29, x30, [sp, #-176]!
    1034:	mov	x29, sp
    1038:	stp	x19, x20, [sp, #16]
    103c:	stp	x21, x22, [sp, #32]
    1040:	cbz	x1, 18a4 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x874>
    1044:	mov	x22, x1
    1048:	ldrb	w1, [x1, #8]
    104c:	mov	x19, x2
    1050:	cmp	w1, #0x6
    1054:	b.eq	10cc <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x9c>  // b.none
    1058:	stp	x23, x24, [sp, #48]
    105c:	mov	x20, x0
    1060:	mov	x23, x3
    1064:	mov	x24, x4
    1068:	cmp	w1, #0x9
    106c:	b.eq	13dc <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x3ac>  // b.none
    1070:	str	x25, [sp, #64]
    1074:	cmp	w1, #0x5
    1078:	b.eq	1428 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x3f8>  // b.none
    107c:	ldr	x1, [x22]
    1080:	add	x21, sp, #0x70
    1084:	mov	x0, x22
    1088:	mov	x8, x21
    108c:	add	x20, sp, #0x90
    1090:	add	x19, sp, #0x58
    1094:	ldr	x1, [x1, #40]
    1098:	blr	x1
    109c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    10a0:	mov	x8, x20
    10a4:	mov	x1, x21
    10a8:	add	x0, x0, #0x0
    10ac:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    10b0:	mov	x1, x20
    10b4:	mov	x0, x19
    10b8:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    10bc:	mov	x2, x19
    10c0:	mov	x0, x23
    10c4:	mov	x1, x24
    10c8:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    10cc:	ldr	x1, [x22, #24]
    10d0:	bl	1a88 <_ZN4llvm9SetTheory6expandEPNS_6RecordE>
    10d4:	mov	x20, x0
    10d8:	cbz	x0, 122c <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x1fc>
    10dc:	stp	x23, x24, [sp, #48]
    10e0:	add	x21, x19, #0xa0
    10e4:	add	x24, x19, #0x10
    10e8:	ldp	x22, x23, [x0]
    10ec:	add	x20, x19, #0x90
    10f0:	cmp	x22, x23
    10f4:	b.ne	1148 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x118>  // b.any
    10f8:	b	1218 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x1e8>
    10fc:	mov	x3, x24
    1100:	mov	w1, #0x10                  	// #16
    1104:	ldr	x2, [x22]
    1108:	cmn	x2, #0x8
    110c:	ccmn	x2, #0x10, #0x4, ne  // ne = any
    1110:	b.eq	17b8 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x788>  // b.none
    1114:	lsr	w0, w2, #9
    1118:	sub	w1, w1, #0x1
    111c:	eor	w0, w0, w2, lsr #4
    1120:	and	w5, w0, w1
    1124:	mov	x0, x5
    1128:	ubfiz	x4, x5, #3, #28
    112c:	ldr	x5, [x3, x5, lsl #3]
    1130:	add	x4, x3, x4
    1134:	cmp	x2, x5
    1138:	b.ne	133c <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x30c>  // b.any
    113c:	add	x22, x22, #0x8
    1140:	cmp	x23, x22
    1144:	b.eq	1218 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x1e8>  // b.none
    1148:	ldrb	w0, [x19, #8]
    114c:	and	w7, w0, #0x1
    1150:	tbnz	w0, #0, 10fc <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0xcc>
    1154:	ldr	w1, [x19, #24]
    1158:	ldr	x3, [x19, #16]
    115c:	cbnz	w1, 1104 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0xd4>
    1160:	ldr	w2, [x19, #8]
    1164:	mov	x6, #0x0                   	// #0
    1168:	ldr	x4, [x19]
    116c:	lsr	w0, w2, #1
    1170:	add	w3, w0, #0x1
    1174:	add	x0, x4, #0x1
    1178:	str	x0, [x19]
    117c:	add	w0, w1, w1, lsl #1
    1180:	cmp	w0, w3, lsl #2
    1184:	b.ls	1380 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x350>  // b.plast
    1188:	ldr	w0, [x19, #12]
    118c:	sub	w0, w1, w0
    1190:	sub	w0, w0, w3
    1194:	cmp	w0, w1, lsr #3
    1198:	b.ls	153c <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x50c>  // b.plast
    119c:	cbz	x6, 15b8 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x588>
    11a0:	lsr	w0, w2, #1
    11a4:	adds	w0, w0, #0x1
    11a8:	b.mi	18b4 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x884>  // b.first
    11ac:	bfi	w2, w0, #1, #31
    11b0:	str	w2, [x19, #8]
    11b4:	ldr	x0, [x6]
    11b8:	cmn	x0, #0x8
    11bc:	b.eq	11cc <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x19c>  // b.none
    11c0:	ldr	w0, [x19, #12]
    11c4:	sub	w0, w0, #0x1
    11c8:	str	w0, [x19, #12]
    11cc:	ldr	x0, [x22]
    11d0:	ldr	w1, [x19, #156]
    11d4:	str	x0, [x6]
    11d8:	ldr	w0, [x19, #152]
    11dc:	cmp	w0, w1
    11e0:	b.cs	1520 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x4f0>  // b.hs, b.nlast
    11e4:	ldr	x1, [x19, #144]
    11e8:	ldr	x2, [x22]
    11ec:	str	x2, [x1, w0, uxtw #3]
    11f0:	ldp	w0, w2, [x19, #152]
    11f4:	mov	w1, w0
    11f8:	add	x1, x1, #0x1
    11fc:	cmp	x1, x2
    1200:	b.hi	1880 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x850>  // b.pmore
    1204:	add	w0, w0, #0x1
    1208:	str	w0, [x19, #152]
    120c:	add	x22, x22, #0x8
    1210:	cmp	x23, x22
    1214:	b.ne	1148 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x118>  // b.any
    1218:	ldp	x23, x24, [sp, #48]
    121c:	ldp	x19, x20, [sp, #16]
    1220:	ldp	x21, x22, [sp, #32]
    1224:	ldp	x29, x30, [sp], #176
    1228:	ret
    122c:	ldrb	w0, [x19, #8]
    1230:	ldr	x21, [x22, #24]
    1234:	and	w6, w0, #0x1
    1238:	tbnz	w0, #0, 141c <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x3ec>
    123c:	ldr	w1, [x19, #24]
    1240:	ldr	x2, [x19, #16]
    1244:	cbz	w1, 160c <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x5dc>
    1248:	cmn	x21, #0x10
    124c:	ccmn	x21, #0x8, #0x4, ne  // ne = any
    1250:	b.eq	17b4 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x784>  // b.none
    1254:	lsr	w0, w21, #9
    1258:	sub	w1, w1, #0x1
    125c:	eor	w0, w0, w21, lsr #4
    1260:	and	w4, w0, w1
    1264:	mov	x0, x4
    1268:	ubfiz	x3, x4, #3, #28
    126c:	ldr	x4, [x2, x4, lsl #3]
    1270:	add	x3, x2, x3
    1274:	cmp	x21, x4
    1278:	b.eq	121c <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x1ec>  // b.none
    127c:	mov	x5, #0x0                   	// #0
    1280:	mov	w7, #0x1                   	// #1
    1284:	cmn	x4, #0x8
    1288:	b.ne	17dc <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x7ac>  // b.any
    128c:	ldr	x0, [x19]
    1290:	cmp	x5, #0x0
    1294:	ldr	w2, [x19, #8]
    1298:	csel	x5, x5, x3, ne  // ne = any
    129c:	add	x0, x0, #0x1
    12a0:	str	x0, [x19]
    12a4:	lsr	w0, w2, #1
    12a8:	add	w3, w0, #0x1
    12ac:	cbz	w6, 1970 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x940>
    12b0:	mov	w0, #0x30                  	// #48
    12b4:	mov	w1, #0x10                  	// #16
    12b8:	cmp	w0, w3, lsl #2
    12bc:	b.ls	168c <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x65c>  // b.plast
    12c0:	ldr	w0, [x19, #12]
    12c4:	sub	w0, w1, w0
    12c8:	sub	w0, w0, w3
    12cc:	cmp	w0, w1, lsr #3
    12d0:	b.ls	171c <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x6ec>  // b.plast
    12d4:	cbz	x5, 1798 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x768>
    12d8:	lsr	w0, w2, #1
    12dc:	adds	w0, w0, #0x1
    12e0:	b.mi	18b0 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x880>  // b.first
    12e4:	bfi	w2, w0, #1, #31
    12e8:	str	w2, [x19, #8]
    12ec:	ldr	x0, [x5]
    12f0:	cmn	x0, #0x8
    12f4:	b.eq	1304 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x2d4>  // b.none
    12f8:	ldr	w0, [x19, #12]
    12fc:	sub	w0, w0, #0x1
    1300:	str	w0, [x19, #12]
    1304:	ldp	w0, w1, [x19, #152]
    1308:	str	x21, [x5]
    130c:	cmp	w0, w1
    1310:	b.cs	1700 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x6d0>  // b.hs, b.nlast
    1314:	ldr	x1, [x19, #144]
    1318:	str	x21, [x1, w0, uxtw #3]
    131c:	ldp	w0, w2, [x19, #152]
    1320:	mov	w1, w0
    1324:	add	x1, x1, #0x1
    1328:	cmp	x1, x2
    132c:	b.hi	187c <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x84c>  // b.pmore
    1330:	add	w0, w0, #0x1
    1334:	str	w0, [x19, #152]
    1338:	b	121c <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x1ec>
    133c:	mov	w8, #0x1                   	// #1
    1340:	mov	x6, #0x0                   	// #0
    1344:	cmn	x5, #0x8
    1348:	b.ne	1654 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x624>  // b.any
    134c:	ldr	x0, [x19]
    1350:	cmp	x6, #0x0
    1354:	ldr	w2, [x19, #8]
    1358:	csel	x6, x6, x4, ne  // ne = any
    135c:	add	x0, x0, #0x1
    1360:	str	x0, [x19]
    1364:	lsr	w0, w2, #1
    1368:	add	w3, w0, #0x1
    136c:	cbz	w7, 1968 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x938>
    1370:	mov	w0, #0x30                  	// #48
    1374:	mov	w1, #0x10                  	// #16
    1378:	cmp	w0, w3, lsl #2
    137c:	b.hi	1188 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x158>  // b.pmore
    1380:	mov	x0, x19
    1384:	lsl	w1, w1, #1
    1388:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    138c:	ldrb	w0, [x19, #8]
    1390:	tbz	w0, #0, 15ac <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x57c>
    1394:	mov	x3, x24
    1398:	mov	w2, #0x10                  	// #16
    139c:	ldr	x1, [x22]
    13a0:	cmn	x1, #0x8
    13a4:	ccmn	x1, #0x10, #0x4, ne  // ne = any
    13a8:	b.eq	17b8 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x788>  // b.none
    13ac:	lsr	w0, w1, #9
    13b0:	sub	w2, w2, #0x1
    13b4:	eor	w0, w0, w1, lsr #4
    13b8:	and	w4, w0, w2
    13bc:	mov	x0, x4
    13c0:	ubfiz	x6, x4, #3, #28
    13c4:	ldr	x4, [x3, x4, lsl #3]
    13c8:	add	x6, x3, x6
    13cc:	cmp	x1, x4
    13d0:	b.ne	15ec <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x5bc>  // b.any
    13d4:	ldr	w2, [x19, #8]
    13d8:	b	11a0 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x170>
    13dc:	ldr	w1, [x22, #32]
    13e0:	mov	x0, #0x28                  	// #40
    13e4:	add	x21, x22, x0
    13e8:	add	x1, x0, w1, uxtw #3
    13ec:	add	x22, x22, x1
    13f0:	cmp	x21, x22
    13f4:	b.eq	1218 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x1e8>  // b.none
    13f8:	ldr	x1, [x21], #8
    13fc:	mov	x3, x23
    1400:	mov	x4, x24
    1404:	mov	x2, x19
    1408:	mov	x0, x20
    140c:	bl	1030 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE>
    1410:	cmp	x22, x21
    1414:	b.ne	13f8 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x3c8>  // b.any
    1418:	b	1218 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x1e8>
    141c:	add	x2, x19, #0x10
    1420:	mov	w1, #0x10                  	// #16
    1424:	b	1248 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x218>
    1428:	ldr	x0, [x22, #32]
    142c:	cbz	x0, 18ac <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x87c>
    1430:	ldrb	w1, [x0, #8]
    1434:	cmp	w1, #0x6
    1438:	b.eq	1470 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x440>  // b.none
    143c:	ldr	x1, [x22]
    1440:	add	x21, sp, #0x70
    1444:	mov	x8, x21
    1448:	mov	x0, x22
    144c:	add	x20, sp, #0x90
    1450:	add	x19, sp, #0x58
    1454:	ldr	x1, [x1, #40]
    1458:	blr	x1
    145c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1460:	mov	x8, x20
    1464:	mov	x1, x21
    1468:	add	x0, x0, #0x0
    146c:	b	10ac <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x7c>
    1470:	ldr	x0, [x0, #24]
    1474:	ldr	x2, [x0]
    1478:	cbz	x2, 18d8 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x8a8>
    147c:	ldrb	w0, [x2, #8]
    1480:	cmp	w0, #0x12
    1484:	b.ne	1910 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x8e0>  // b.any
    1488:	ldp	x1, x2, [x2, #24]
    148c:	add	x0, x20, #0x30
    1490:	bl	0 <_ZNK4llvm13StringMapImpl7FindKeyENS_9StringRefE>
    1494:	mov	w1, w0
    1498:	cmn	w0, #0x1
    149c:	b.eq	1630 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x600>  // b.none
    14a0:	ldr	x3, [x20, #48]
    14a4:	add	x21, sp, #0x90
    14a8:	mov	x0, x21
    14ac:	mov	w2, #0x1                   	// #1
    14b0:	add	x1, x3, w1, sxtw #3
    14b4:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    14b8:	ldr	x25, [sp, #144]
    14bc:	mov	x0, x21
    14c0:	ldr	w3, [x20, #56]
    14c4:	mov	w2, #0x1                   	// #1
    14c8:	ldr	x1, [x20, #48]
    14cc:	add	x1, x1, x3, lsl #3
    14d0:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    14d4:	ldr	x0, [sp, #144]
    14d8:	cmp	x0, x25
    14dc:	b.eq	1930 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x900>  // b.none
    14e0:	ldr	x0, [x25]
    14e4:	mov	x4, x23
    14e8:	mov	x5, x24
    14ec:	mov	x3, x19
    14f0:	mov	x2, x22
    14f4:	mov	x1, x20
    14f8:	ldr	x0, [x0, #8]
    14fc:	ldr	x6, [x0]
    1500:	ldr	x6, [x6, #24]
    1504:	blr	x6
    1508:	ldp	x19, x20, [sp, #16]
    150c:	ldp	x21, x22, [sp, #32]
    1510:	ldp	x23, x24, [sp, #48]
    1514:	ldr	x25, [sp, #64]
    1518:	ldp	x29, x30, [sp], #176
    151c:	ret
    1520:	mov	x0, x20
    1524:	mov	x1, x21
    1528:	mov	x3, #0x8                   	// #8
    152c:	mov	x2, #0x0                   	// #0
    1530:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1534:	ldr	w0, [x19, #152]
    1538:	b	11e4 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x1b4>
    153c:	mov	x0, x19
    1540:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1544:	ldrb	w0, [x19, #8]
    1548:	tbz	w0, #0, 15dc <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x5ac>
    154c:	mov	x3, x24
    1550:	mov	w2, #0x10                  	// #16
    1554:	ldr	x1, [x22]
    1558:	cmn	x1, #0x10
    155c:	ccmn	x1, #0x8, #0x4, ne  // ne = any
    1560:	b.eq	17b8 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x788>  // b.none
    1564:	lsr	w0, w1, #9
    1568:	sub	w2, w2, #0x1
    156c:	eor	w0, w0, w1, lsr #4
    1570:	and	w4, w0, w2
    1574:	mov	x0, x4
    1578:	ubfiz	x6, x4, #3, #28
    157c:	ldr	x4, [x3, x4, lsl #3]
    1580:	add	x6, x3, x6
    1584:	cmp	x1, x4
    1588:	b.eq	13d4 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x3a4>  // b.none
    158c:	mov	w7, #0x1                   	// #1
    1590:	mov	x5, #0x0                   	// #0
    1594:	cmn	x4, #0x8
    1598:	b.ne	1848 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x818>  // b.any
    159c:	ldr	w2, [x19, #8]
    15a0:	cbz	x5, 11a0 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x170>
    15a4:	mov	x6, x5
    15a8:	b	11a0 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x170>
    15ac:	ldr	w2, [x19, #24]
    15b0:	ldr	x3, [x19, #16]
    15b4:	cbnz	w2, 139c <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x36c>
    15b8:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    15bc:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    15c0:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    15c4:	add	x3, x3, #0x0
    15c8:	add	x1, x1, #0x0
    15cc:	add	x0, x0, #0x0
    15d0:	mov	w2, #0x22f                 	// #559
    15d4:	str	x25, [sp, #64]
    15d8:	bl	0 <__assert_fail>
    15dc:	ldr	w2, [x19, #24]
    15e0:	ldr	x3, [x19, #16]
    15e4:	cbnz	w2, 1554 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x524>
    15e8:	b	15b8 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x588>
    15ec:	mov	w7, #0x1                   	// #1
    15f0:	mov	x5, #0x0                   	// #0
    15f4:	cmn	x4, #0x8
    15f8:	b.ne	1814 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x7e4>  // b.any
    15fc:	cbz	x5, 13d4 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x3a4>
    1600:	ldr	w2, [x19, #8]
    1604:	mov	x6, x5
    1608:	b	11a0 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x170>
    160c:	ldr	w2, [x19, #8]
    1610:	mov	x5, #0x0                   	// #0
    1614:	ldr	x4, [x19]
    1618:	lsr	w0, w2, #1
    161c:	add	w3, w0, #0x1
    1620:	add	x0, x4, #0x1
    1624:	str	x0, [x19]
    1628:	add	w0, w1, w1, lsl #1
    162c:	b	12b8 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x288>
    1630:	ldr	w3, [x20, #56]
    1634:	add	x21, sp, #0x90
    1638:	ldr	x1, [x20, #48]
    163c:	mov	x0, x21
    1640:	mov	w2, #0x1                   	// #1
    1644:	add	x1, x1, x3, lsl #3
    1648:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    164c:	ldr	x25, [sp, #144]
    1650:	b	14bc <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x48c>
    1654:	add	w0, w8, w0
    1658:	cmp	x6, #0x0
    165c:	and	w9, w1, w0
    1660:	ccmn	x5, #0x10, #0x0, eq  // eq = none
    1664:	csel	x4, x4, x6, eq  // eq = none
    1668:	add	w8, w8, #0x1
    166c:	and	w0, w1, w0
    1670:	add	x10, x3, x9, lsl #3
    1674:	ldr	x5, [x3, x9, lsl #3]
    1678:	cmp	x2, x5
    167c:	b.eq	113c <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x10c>  // b.none
    1680:	mov	x6, x4
    1684:	mov	x4, x10
    1688:	b	1344 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x314>
    168c:	mov	x0, x19
    1690:	lsl	w1, w1, #1
    1694:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1698:	ldrb	w0, [x19, #8]
    169c:	tbz	w0, #0, 178c <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x75c>
    16a0:	add	x2, x19, #0x10
    16a4:	mov	w1, #0x10                  	// #16
    16a8:	cmn	x21, #0x10
    16ac:	ccmn	x21, #0x8, #0x4, ne  // ne = any
    16b0:	b.eq	17b4 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x784>  // b.none
    16b4:	lsr	w0, w21, #9
    16b8:	sub	w1, w1, #0x1
    16bc:	eor	w0, w0, w21, lsr #4
    16c0:	and	w3, w0, w1
    16c4:	mov	x0, x3
    16c8:	ubfiz	x5, x3, #3, #28
    16cc:	ldr	x3, [x2, x3, lsl #3]
    16d0:	add	x5, x2, x5
    16d4:	cmp	x21, x3
    16d8:	b.ne	16e4 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x6b4>  // b.any
    16dc:	ldr	w2, [x19, #8]
    16e0:	b	12d8 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x2a8>
    16e4:	mov	w4, #0x1                   	// #1
    16e8:	cmn	x3, #0x8
    16ec:	b.ne	18dc <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x8ac>  // b.any
    16f0:	cbz	x20, 16dc <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x6ac>
    16f4:	ldr	w2, [x19, #8]
    16f8:	mov	x5, x20
    16fc:	b	12d8 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x2a8>
    1700:	add	x0, x19, #0x90
    1704:	add	x1, x19, #0xa0
    1708:	mov	x3, #0x8                   	// #8
    170c:	mov	x2, #0x0                   	// #0
    1710:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1714:	ldr	w0, [x19, #152]
    1718:	b	1314 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x2e4>
    171c:	mov	x0, x19
    1720:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1724:	ldrb	w0, [x19, #8]
    1728:	tbz	w0, #0, 17a0 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x770>
    172c:	add	x2, x19, #0x10
    1730:	mov	w1, #0x10                  	// #16
    1734:	cmn	x21, #0x10
    1738:	ccmn	x21, #0x8, #0x4, ne  // ne = any
    173c:	b.eq	17b4 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x784>  // b.none
    1740:	lsr	w0, w21, #9
    1744:	sub	w1, w1, #0x1
    1748:	eor	w0, w0, w21, lsr #4
    174c:	and	w3, w0, w1
    1750:	mov	x0, x3
    1754:	ubfiz	x5, x3, #3, #28
    1758:	ldr	x3, [x2, x3, lsl #3]
    175c:	add	x5, x2, x5
    1760:	cmp	x21, x3
    1764:	b.eq	16dc <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x6ac>  // b.none
    1768:	mov	x6, x5
    176c:	mov	w4, #0x1                   	// #1
    1770:	mov	x5, #0x0                   	// #0
    1774:	cmn	x3, #0x8
    1778:	b.ne	197c <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x94c>  // b.any
    177c:	cbnz	x5, 16dc <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x6ac>
    1780:	ldr	w2, [x19, #8]
    1784:	mov	x5, x6
    1788:	b	12d8 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x2a8>
    178c:	ldr	w1, [x19, #24]
    1790:	ldr	x2, [x19, #16]
    1794:	cbnz	w1, 16a8 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x678>
    1798:	stp	x23, x24, [sp, #48]
    179c:	b	15b8 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x588>
    17a0:	ldr	w1, [x19, #24]
    17a4:	ldr	x2, [x19, #16]
    17a8:	cbnz	w1, 1734 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x704>
    17ac:	stp	x23, x24, [sp, #48]
    17b0:	b	15b8 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x588>
    17b4:	stp	x23, x24, [sp, #48]
    17b8:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    17bc:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    17c0:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    17c4:	add	x3, x3, #0x0
    17c8:	add	x1, x1, #0x0
    17cc:	add	x0, x0, #0x0
    17d0:	mov	w2, #0x250                 	// #592
    17d4:	str	x25, [sp, #64]
    17d8:	bl	0 <__assert_fail>
    17dc:	add	w0, w0, w7
    17e0:	cmp	x5, #0x0
    17e4:	and	w8, w1, w0
    17e8:	ccmn	x4, #0x10, #0x0, eq  // eq = none
    17ec:	csel	x3, x3, x5, eq  // eq = none
    17f0:	add	w7, w7, #0x1
    17f4:	and	w0, w1, w0
    17f8:	add	x9, x2, x8, lsl #3
    17fc:	ldr	x4, [x2, x8, lsl #3]
    1800:	cmp	x21, x4
    1804:	b.eq	121c <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x1ec>  // b.none
    1808:	mov	x5, x3
    180c:	mov	x3, x9
    1810:	b	1284 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x254>
    1814:	add	w0, w0, w7
    1818:	cmp	x5, #0x0
    181c:	and	w8, w2, w0
    1820:	ccmn	x4, #0x10, #0x0, eq  // eq = none
    1824:	csel	x5, x5, x6, ne  // ne = any
    1828:	add	w7, w7, #0x1
    182c:	and	w0, w2, w0
    1830:	add	x6, x3, x8, lsl #3
    1834:	ldr	x4, [x3, x8, lsl #3]
    1838:	cmp	x1, x4
    183c:	b.ne	15f4 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x5c4>  // b.any
    1840:	ldr	w2, [x19, #8]
    1844:	b	11a0 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x170>
    1848:	add	w0, w7, w0
    184c:	cmp	x5, #0x0
    1850:	and	w8, w2, w0
    1854:	ccmn	x4, #0x10, #0x0, eq  // eq = none
    1858:	csel	x5, x5, x6, ne  // ne = any
    185c:	add	w7, w7, #0x1
    1860:	and	w0, w2, w0
    1864:	add	x6, x3, x8, lsl #3
    1868:	ldr	x4, [x3, x8, lsl #3]
    186c:	cmp	x1, x4
    1870:	b.ne	1594 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x564>  // b.any
    1874:	ldr	w2, [x19, #8]
    1878:	b	11a0 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x170>
    187c:	stp	x23, x24, [sp, #48]
    1880:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1884:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1888:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    188c:	add	x3, x3, #0x0
    1890:	add	x1, x1, #0x0
    1894:	add	x0, x0, #0x0
    1898:	mov	w2, #0x43                  	// #67
    189c:	str	x25, [sp, #64]
    18a0:	bl	0 <__assert_fail>
    18a4:	stp	x23, x24, [sp, #48]
    18a8:	str	x25, [sp, #64]
    18ac:	bl	120 <_ZN4llvm3isaINS_7DefInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    18b0:	stp	x23, x24, [sp, #48]
    18b4:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    18b8:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    18bc:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    18c0:	add	x3, x3, #0x0
    18c4:	add	x1, x1, #0x0
    18c8:	add	x0, x0, #0x0
    18cc:	mov	w2, #0x441                 	// #1089
    18d0:	str	x25, [sp, #64]
    18d4:	bl	0 <__assert_fail>
    18d8:	bl	d0 <_ZN4llvm3isaINS_10StringInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    18dc:	add	w0, w0, w4
    18e0:	cmp	x20, #0x0
    18e4:	and	w6, w1, w0
    18e8:	ccmn	x3, #0x10, #0x0, eq  // eq = none
    18ec:	csel	x20, x20, x5, ne  // ne = any
    18f0:	add	w4, w4, #0x1
    18f4:	and	w0, w1, w0
    18f8:	add	x5, x2, x6, lsl #3
    18fc:	ldr	x3, [x2, x6, lsl #3]
    1900:	cmp	x21, x3
    1904:	b.ne	16e8 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x6b8>  // b.any
    1908:	ldr	w2, [x19, #8]
    190c:	b	12d8 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x2a8>
    1910:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1914:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1918:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    191c:	add	x3, x3, #0x0
    1920:	add	x1, x1, #0x0
    1924:	add	x0, x0, #0x0
    1928:	mov	w2, #0x108                 	// #264
    192c:	bl	0 <__assert_fail>
    1930:	ldr	x1, [x22]
    1934:	add	x20, sp, #0x70
    1938:	mov	x0, x22
    193c:	mov	x8, x20
    1940:	add	x19, sp, #0x58
    1944:	ldr	x1, [x1, #40]
    1948:	blr	x1
    194c:	mov	x1, x20
    1950:	mov	x8, x21
    1954:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1958:	add	x0, x0, #0x0
    195c:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1960:	mov	x1, x21
    1964:	b	10b4 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x84>
    1968:	ldr	w1, [x19, #24]
    196c:	b	117c <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x14c>
    1970:	ldr	w1, [x19, #24]
    1974:	add	w0, w1, w1, lsl #1
    1978:	b	12b8 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x288>
    197c:	add	w0, w4, w0
    1980:	cmp	x5, #0x0
    1984:	and	w7, w1, w0
    1988:	ccmn	x3, #0x10, #0x0, eq  // eq = none
    198c:	csel	x5, x5, x6, ne  // ne = any
    1990:	add	w4, w4, #0x1
    1994:	and	w0, w1, w0
    1998:	add	x6, x2, x7, lsl #3
    199c:	ldr	x3, [x2, x7, lsl #3]
    19a0:	cmp	x21, x3
    19a4:	b.ne	1774 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x744>  // b.any
    19a8:	ldr	w2, [x19, #8]
    19ac:	mov	x5, x6
    19b0:	b	12d8 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x2a8>
    19b4:	nop

00000000000019b8 <_ZN12_GLOBAL__N_15AddOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE>:
    19b8:	stp	x29, x30, [sp, #-64]!
    19bc:	mov	x7, #0x38                  	// #56
    19c0:	mov	x29, sp
    19c4:	ldr	w6, [x2, #48]
    19c8:	stp	x19, x20, [sp, #16]
    19cc:	add	x19, x2, x7
    19d0:	add	x6, x7, w6, uxtw #3
    19d4:	add	x20, x2, x6
    19d8:	cmp	x20, x19
    19dc:	b.eq	1a20 <_ZN12_GLOBAL__N_15AddOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x68>  // b.none
    19e0:	stp	x21, x22, [sp, #32]
    19e4:	mov	x22, x4
    19e8:	mov	x21, x5
    19ec:	stp	x23, x24, [sp, #48]
    19f0:	mov	x24, x1
    19f4:	mov	x23, x3
    19f8:	ldr	x1, [x19], #8
    19fc:	mov	x3, x22
    1a00:	mov	x4, x21
    1a04:	mov	x2, x23
    1a08:	mov	x0, x24
    1a0c:	bl	1030 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE>
    1a10:	cmp	x19, x20
    1a14:	b.ne	19f8 <_ZN12_GLOBAL__N_15AddOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x40>  // b.any
    1a18:	ldp	x21, x22, [sp, #32]
    1a1c:	ldp	x23, x24, [sp, #48]
    1a20:	ldp	x19, x20, [sp, #16]
    1a24:	ldp	x29, x30, [sp], #64
    1a28:	ret
    1a2c:	nop

0000000000001a30 <_ZN12_GLOBAL__N_113FieldExpander6expandERN4llvm9SetTheoryEPNS1_6RecordERNS1_14SmallSetVectorIS5_Lj16EEE>:
    1a30:	stp	x29, x30, [sp, #-48]!
    1a34:	mov	x29, sp
    1a38:	ldp	x4, x5, [x0, #8]
    1a3c:	stp	x19, x20, [sp, #16]
    1a40:	mov	x19, x2
    1a44:	mov	x20, x1
    1a48:	mov	x0, x2
    1a4c:	str	x21, [sp, #32]
    1a50:	mov	x21, x3
    1a54:	mov	x1, x4
    1a58:	mov	x2, x5
    1a5c:	bl	0 <_ZNK4llvm6Record12getValueInitENS_9StringRefE>
    1a60:	mov	x1, x0
    1a64:	ldr	w4, [x19, #16]
    1a68:	mov	x2, x21
    1a6c:	mov	x0, x20
    1a70:	ldr	x3, [x19, #8]
    1a74:	ldp	x19, x20, [sp, #16]
    1a78:	ldr	x21, [sp, #32]
    1a7c:	ldp	x29, x30, [sp], #48
    1a80:	b	1030 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE>
    1a84:	nop

0000000000001a88 <_ZN4llvm9SetTheory6expandEPNS_6RecordE>:
    1a88:	stp	x29, x30, [sp, #-368]!
    1a8c:	mov	x29, sp
    1a90:	ldr	x2, [x0, #16]
    1a94:	stp	x19, x20, [sp, #16]
    1a98:	mov	x20, x1
    1a9c:	stp	x21, x22, [sp, #32]
    1aa0:	mov	x21, x0
    1aa4:	stp	x23, x24, [sp, #48]
    1aa8:	add	x23, x0, #0x8
    1aac:	cbz	x2, 1ae8 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x60>
    1ab0:	mov	x0, x23
    1ab4:	nop
    1ab8:	ldr	x3, [x2, #32]
    1abc:	cmp	x3, x20
    1ac0:	b.cc	1d30 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x2a8>  // b.lo, b.ul, b.last
    1ac4:	mov	x0, x2
    1ac8:	ldr	x2, [x2, #16]
    1acc:	cbnz	x2, 1ab8 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x30>
    1ad0:	cmp	x23, x0
    1ad4:	b.eq	1ae8 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x60>  // b.none
    1ad8:	ldr	x1, [x0, #32]
    1adc:	add	x19, x0, #0x28
    1ae0:	cmp	x1, x20
    1ae4:	b.ls	1d18 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x290>  // b.plast
    1ae8:	ldr	w22, [x20, #96]
    1aec:	mov	w1, #0x18                  	// #24
    1af0:	ldr	x0, [x20, #88]
    1af4:	stp	x25, x26, [sp, #64]
    1af8:	add	x24, sp, #0x50
    1afc:	add	x25, x21, #0x50
    1b00:	mov	x19, x0
    1b04:	umaddl	x22, w22, w1, x0
    1b08:	cmp	x22, x0
    1b0c:	b.ne	1b20 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x98>  // b.any
    1b10:	b	1d5c <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x2d4>
    1b14:	add	x19, x19, #0x18
    1b18:	cmp	x22, x19
    1b1c:	b.eq	1d5c <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x2d4>  // b.none
    1b20:	ldr	x1, [x19]
    1b24:	ldr	x2, [x1]
    1b28:	cbz	x2, 1dd4 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x34c>
    1b2c:	ldrb	w1, [x2, #8]
    1b30:	cmp	w1, #0x12
    1b34:	b.ne	1b14 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x8c>  // b.any
    1b38:	ldp	x1, x2, [x2, #24]
    1b3c:	mov	x0, x25
    1b40:	bl	0 <_ZNK4llvm13StringMapImpl7FindKeyENS_9StringRefE>
    1b44:	mov	w1, w0
    1b48:	cmn	w0, #0x1
    1b4c:	b.eq	1d3c <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x2b4>  // b.none
    1b50:	ldr	x3, [x25]
    1b54:	mov	x0, x24
    1b58:	mov	w2, #0x1                   	// #1
    1b5c:	add	x1, x3, w1, sxtw #3
    1b60:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1b64:	ldr	x26, [sp, #80]
    1b68:	mov	x0, x24
    1b6c:	ldr	w3, [x21, #88]
    1b70:	mov	w2, #0x1                   	// #1
    1b74:	ldr	x1, [x21, #80]
    1b78:	add	x1, x1, x3, lsl #3
    1b7c:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1b80:	ldr	x0, [sp, #80]
    1b84:	cmp	x26, x0
    1b88:	b.eq	1b14 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x8c>  // b.none
    1b8c:	ldr	x0, [x21, #16]
    1b90:	mov	x19, x23
    1b94:	cbz	x0, 1bc8 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x140>
    1b98:	ldr	x1, [x0, #32]
    1b9c:	cmp	x1, x20
    1ba0:	b.cc	1d7c <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x2f4>  // b.lo, b.ul, b.last
    1ba4:	mov	x19, x0
    1ba8:	ldr	x0, [x0, #16]
    1bac:	cbnz	x0, 1b98 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x110>
    1bb0:	cmp	x23, x19
    1bb4:	b.eq	1bc8 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x140>  // b.none
    1bb8:	ldr	x0, [x19, #32]
    1bbc:	add	x22, x19, #0x28
    1bc0:	cmp	x0, x20
    1bc4:	b.ls	1c28 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x1a0>  // b.plast
    1bc8:	mov	x0, #0x40                  	// #64
    1bcc:	bl	0 <_Znwm>
    1bd0:	mov	x1, x19
    1bd4:	mov	x19, x0
    1bd8:	add	x22, x0, #0x28
    1bdc:	add	x2, x0, #0x20
    1be0:	mov	x0, x21
    1be4:	stp	x20, xzr, [x19, #32]
    1be8:	stp	xzr, xzr, [x22, #8]
    1bec:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1bf0:	mov	x25, x0
    1bf4:	mov	x2, x1
    1bf8:	cbz	x1, 1da4 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x31c>
    1bfc:	cmp	x23, x1
    1c00:	cset	w0, eq  // eq = none
    1c04:	cmp	x25, #0x0
    1c08:	csinc	w0, w0, wzr, eq  // eq = none
    1c0c:	cbz	w0, 1dc0 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x338>
    1c10:	mov	x3, x23
    1c14:	mov	x1, x19
    1c18:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
    1c1c:	ldr	x0, [x21, #40]
    1c20:	add	x0, x0, #0x1
    1c24:	str	x0, [x21, #40]
    1c28:	mov	x0, #0x1                   	// #1
    1c2c:	stp	xzr, x0, [sp, #80]
    1c30:	mov	x19, x22
    1c34:	cbnz	x0, 1d84 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x2fc>
    1c38:	ldr	w1, [sp, #104]
    1c3c:	sub	w0, w1, #0x1
    1c40:	tst	w0, w1
    1c44:	b.ne	1e14 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x38c>  // b.any
    1c48:	ldr	x0, [sp, #96]
    1c4c:	add	x1, x0, w1, uxtw #3
    1c50:	cmp	x0, x1
    1c54:	b.eq	1c6c <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x1e4>  // b.none
    1c58:	mov	x2, #0xfffffffffffffff8    	// #-8
    1c5c:	nop
    1c60:	str	x2, [x0], #8
    1c64:	cmp	x0, x1
    1c68:	b.ne	1c60 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x1d8>  // b.any
    1c6c:	add	x0, x24, #0xa0
    1c70:	str	x0, [sp, #224]
    1c74:	mov	x0, #0x1000000000          	// #68719476736
    1c78:	str	x0, [sp, #232]
    1c7c:	ldr	x0, [x26]
    1c80:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1c84:	add	x1, x1, #0x0
    1c88:	ldr	x0, [x0, #8]
    1c8c:	ldr	x2, [x0]
    1c90:	ldr	x4, [x2, #24]
    1c94:	cmp	x4, x1
    1c98:	b.ne	1d90 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x308>  // b.any
    1c9c:	ldp	x2, x3, [x0, #8]
    1ca0:	mov	x0, x20
    1ca4:	mov	x1, x2
    1ca8:	mov	x2, x3
    1cac:	bl	0 <_ZNK4llvm6Record12getValueInitENS_9StringRefE>
    1cb0:	mov	x1, x0
    1cb4:	ldr	w4, [x20, #16]
    1cb8:	mov	x0, x21
    1cbc:	ldr	x3, [x20, #8]
    1cc0:	mov	x2, x24
    1cc4:	bl	1030 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE>
    1cc8:	ldr	x1, [sp, #224]
    1ccc:	mov	x0, x22
    1cd0:	ldr	w2, [sp, #232]
    1cd4:	mov	w3, #0x0                   	// #0
    1cd8:	add	x24, x24, #0xa0
    1cdc:	add	x2, x1, x2, lsl #3
    1ce0:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1ce4:	ldr	x0, [sp, #224]
    1ce8:	cmp	x0, x24
    1cec:	b.eq	1cf4 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x26c>  // b.none
    1cf0:	bl	0 <free>
    1cf4:	ldrb	w0, [sp, #88]
    1cf8:	tbnz	w0, #0, 1d14 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x28c>
    1cfc:	ldr	x0, [sp, #96]
    1d00:	ldr	w1, [sp, #104]
    1d04:	lsl	x1, x1, #3
    1d08:	bl	0 <_ZdlPvm>
    1d0c:	ldrb	w0, [sp, #88]
    1d10:	tbnz	w0, #0, 1df4 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x36c>
    1d14:	ldp	x25, x26, [sp, #64]
    1d18:	mov	x0, x19
    1d1c:	ldp	x19, x20, [sp, #16]
    1d20:	ldp	x21, x22, [sp, #32]
    1d24:	ldp	x23, x24, [sp, #48]
    1d28:	ldp	x29, x30, [sp], #368
    1d2c:	ret
    1d30:	ldr	x2, [x2, #24]
    1d34:	cbnz	x2, 1ab8 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x30>
    1d38:	b	1ad0 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x48>
    1d3c:	ldr	w3, [x21, #88]
    1d40:	mov	x0, x24
    1d44:	ldr	x1, [x21, #80]
    1d48:	mov	w2, #0x1                   	// #1
    1d4c:	add	x1, x1, x3, lsl #3
    1d50:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1d54:	ldr	x26, [sp, #80]
    1d58:	b	1b68 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0xe0>
    1d5c:	mov	x19, #0x0                   	// #0
    1d60:	mov	x0, x19
    1d64:	ldp	x19, x20, [sp, #16]
    1d68:	ldp	x21, x22, [sp, #32]
    1d6c:	ldp	x23, x24, [sp, #48]
    1d70:	ldp	x25, x26, [sp, #64]
    1d74:	ldp	x29, x30, [sp], #368
    1d78:	ret
    1d7c:	ldr	x0, [x0, #24]
    1d80:	b	1bac <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x124>
    1d84:	add	x1, x24, #0x90
    1d88:	add	x0, x24, #0x10
    1d8c:	b	1c58 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x1d0>
    1d90:	mov	x2, x20
    1d94:	mov	x1, x21
    1d98:	mov	x3, x24
    1d9c:	blr	x4
    1da0:	b	1cc8 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x240>
    1da4:	ldr	x0, [x19, #40]
    1da8:	cbz	x0, 1db0 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x328>
    1dac:	bl	0 <_ZdlPv>
    1db0:	add	x22, x25, #0x28
    1db4:	mov	x0, x19
    1db8:	bl	0 <_ZdlPv>
    1dbc:	b	1c28 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x1a0>
    1dc0:	ldr	x0, [x1, #32]
    1dc4:	ldr	x1, [x19, #32]
    1dc8:	cmp	x1, x0
    1dcc:	cset	w0, cc  // cc = lo, ul, last
    1dd0:	b	1c10 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x188>
    1dd4:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1dd8:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1ddc:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1de0:	add	x3, x3, #0x0
    1de4:	add	x1, x1, #0x0
    1de8:	add	x0, x0, #0x0
    1dec:	mov	w2, #0x69                  	// #105
    1df0:	bl	0 <__assert_fail>
    1df4:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1df8:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1dfc:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1e00:	add	x3, x3, #0x0
    1e04:	add	x1, x1, #0x0
    1e08:	add	x0, x0, #0x0
    1e0c:	mov	w2, #0x45b                 	// #1115
    1e10:	bl	0 <__assert_fail>
    1e14:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1e18:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1e1c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1e20:	add	x3, x3, #0x0
    1e24:	add	x1, x1, #0x0
    1e28:	add	x0, x0, #0x0
    1e2c:	mov	w2, #0x15b                 	// #347
    1e30:	bl	0 <__assert_fail>
    1e34:	nop

0000000000001e38 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE>:
    1e38:	sub	sp, sp, #0x740
    1e3c:	stp	x29, x30, [sp]
    1e40:	mov	x29, sp
    1e44:	stp	x19, x20, [sp, #16]
    1e48:	mov	x20, x2
    1e4c:	add	x19, sp, #0x190
    1e50:	mov	x0, x19
    1e54:	mov	x2, #0x120                 	// #288
    1e58:	stp	x21, x22, [sp, #32]
    1e5c:	mov	x21, x1
    1e60:	mov	x22, x3
    1e64:	mov	w1, #0x0                   	// #0
    1e68:	stp	x23, x24, [sp, #48]
    1e6c:	mov	x23, x4
    1e70:	mov	x24, x5
    1e74:	stp	x25, x26, [sp, #64]
    1e78:	ldr	w26, [x20, #48]
    1e7c:	stp	x27, x28, [sp, #80]
    1e80:	bl	0 <memset>
    1e84:	mov	x0, #0x1                   	// #1
    1e88:	str	x0, [sp, #408]
    1e8c:	mov	w25, w26
    1e90:	cbnz	x0, 2bb8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xd80>
    1e94:	ldr	w2, [sp, #424]
    1e98:	sub	w0, w2, #0x1
    1e9c:	tst	w0, w2
    1ea0:	b.ne	2d30 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xef8>  // b.any
    1ea4:	ldr	x0, [sp, #416]
    1ea8:	add	x2, x0, w2, uxtw #3
    1eac:	cmp	x0, x2
    1eb0:	b.eq	1ec4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x8c>  // b.none
    1eb4:	mov	x3, #0xfffffffffffffff8    	// #-8
    1eb8:	str	x3, [x0], #8
    1ebc:	cmp	x0, x2
    1ec0:	b.ne	1eb8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x80>  // b.any
    1ec4:	add	x0, sp, #0x2b0
    1ec8:	add	x3, sp, #0x2c0
    1ecc:	add	x2, x19, #0xa0
    1ed0:	mov	x1, #0x1000000000          	// #68719476736
    1ed4:	str	x0, [sp, #128]
    1ed8:	mov	x0, #0x400000000           	// #17179869184
    1edc:	str	x2, [sp, #544]
    1ee0:	mov	x27, x3
    1ee4:	str	x1, [sp, #552]
    1ee8:	cmp	x25, #0x4
    1eec:	str	x3, [sp, #688]
    1ef0:	str	x0, [sp, #696]
    1ef4:	b.hi	2b98 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xd60>  // b.pmore
    1ef8:	mov	w0, #0x120                 	// #288
    1efc:	str	w26, [sp, #696]
    1f00:	umaddl	x26, w26, w0, x27
    1f04:	cmp	x26, x27
    1f08:	b.eq	2060 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x228>  // b.none
    1f0c:	add	x0, x19, #0x10
    1f10:	mov	w25, #0x1                   	// #1
    1f14:	mov	x28, #0xfffffffffffffff8    	// #-8
    1f18:	str	x0, [sp, #104]
    1f1c:	nop
    1f20:	str	xzr, [x27]
    1f24:	stp	w25, wzr, [x27, #8]
    1f28:	cbnz	w25, 2854 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xa1c>
    1f2c:	ldr	w1, [x27, #24]
    1f30:	sub	w0, w1, #0x1
    1f34:	tst	w0, w1
    1f38:	b.ne	2d30 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xef8>  // b.any
    1f3c:	ldr	x0, [x27, #16]
    1f40:	ubfiz	x1, x1, #3, #32
    1f44:	add	x2, x0, x1
    1f48:	cmp	x2, x0
    1f4c:	b.eq	1f70 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x138>  // b.none
    1f50:	str	x28, [x0], #8
    1f54:	cmp	x0, x2
    1f58:	b.ne	1f50 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x118>  // b.any
    1f5c:	ldrb	w0, [x27, #8]
    1f60:	tbnz	w0, #0, 1f7c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x144>
    1f64:	ldr	w1, [x27, #24]
    1f68:	ldr	x0, [x27, #16]
    1f6c:	lsl	x1, x1, #3
    1f70:	bl	0 <_ZdlPvm>
    1f74:	ldrb	w0, [x27, #8]
    1f78:	tbnz	w0, #0, 2b64 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xd2c>
    1f7c:	ldrb	w0, [x27, #8]
    1f80:	orr	w0, w0, #0x1
    1f84:	strb	w0, [x27, #8]
    1f88:	ldrb	w1, [sp, #408]
    1f8c:	tbnz	w1, #0, 1fd0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x198>
    1f90:	ldr	w1, [sp, #424]
    1f94:	cmp	w1, #0x10
    1f98:	b.ls	1fd0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x198>  // b.plast
    1f9c:	and	w0, w0, #0xfffffffe
    1fa0:	strb	w0, [x27, #8]
    1fa4:	ldrb	w0, [sp, #408]
    1fa8:	tbnz	w0, #0, 2ea0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1068>
    1fac:	ldr	w1, [sp, #424]
    1fb0:	cmp	w1, #0x10
    1fb4:	b.ls	2ea0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1068>  // b.plast
    1fb8:	ubfiz	x0, x1, #3, #32
    1fbc:	str	w1, [sp, #112]
    1fc0:	bl	0 <_Znwm>
    1fc4:	str	x0, [x27, #16]
    1fc8:	ldr	w1, [sp, #112]
    1fcc:	str	w1, [x27, #24]
    1fd0:	cmp	x27, x19
    1fd4:	b.eq	2e80 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1048>  // b.none
    1fd8:	ldrb	w1, [x27, #8]
    1fdc:	ldrb	w0, [sp, #408]
    1fe0:	and	w0, w0, #0x1
    1fe4:	tbnz	w1, #0, 2860 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xa28>
    1fe8:	ldr	w2, [x27, #24]
    1fec:	mov	w1, #0x10                  	// #16
    1ff0:	cbnz	w0, 1ff8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1c0>
    1ff4:	ldr	w1, [sp, #424]
    1ff8:	cmp	w1, w2
    1ffc:	b.ne	2e60 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1028>  // b.any
    2000:	ldr	w0, [sp, #408]
    2004:	ldr	w1, [x27, #8]
    2008:	lsr	w0, w0, #1
    200c:	bfi	w1, w0, #1, #31
    2010:	str	w1, [x27, #8]
    2014:	ldrb	w0, [x27, #8]
    2018:	ldr	w1, [sp, #412]
    201c:	str	w1, [x27, #12]
    2020:	tbz	w0, #0, 2808 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x9d0>
    2024:	ldrb	w1, [sp, #408]
    2028:	add	x0, x27, #0x10
    202c:	tbnz	w1, #0, 2a84 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xc4c>
    2030:	ldr	x1, [sp, #416]
    2034:	mov	x2, #0x80                  	// #128
    2038:	bl	0 <memcpy>
    203c:	mov	w1, #0x10                  	// #16
    2040:	stp	wzr, w1, [x27, #152]
    2044:	add	x0, x27, #0xa0
    2048:	str	x0, [x27, #144]
    204c:	ldr	w0, [sp, #552]
    2050:	cbnz	w0, 2844 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xa0c>
    2054:	add	x27, x27, #0x120
    2058:	cmp	x26, x27
    205c:	b.ne	1f20 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xe8>  // b.any
    2060:	ldr	x0, [sp, #544]
    2064:	add	x19, x19, #0xa0
    2068:	cmp	x0, x19
    206c:	b.eq	2074 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x23c>  // b.none
    2070:	bl	0 <free>
    2074:	ldrb	w0, [sp, #408]
    2078:	tbz	w0, #0, 2b4c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xd14>
    207c:	ldr	w26, [x20, #48]
    2080:	cbz	w26, 2d50 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xf18>
    2084:	add	x1, x20, #0x38
    2088:	mov	w0, w26
    208c:	mov	x27, #0x0                   	// #0
    2090:	mov	x28, #0x0                   	// #0
    2094:	mov	w25, #0x0                   	// #0
    2098:	str	x1, [sp, #104]
    209c:	b	20a4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x26c>
    20a0:	ldr	w0, [x20, #48]
    20a4:	cmp	w0, w28
    20a8:	b.ls	2d88 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xf50>  // b.plast
    20ac:	ldr	x1, [sp, #104]
    20b0:	ldr	w0, [sp, #696]
    20b4:	cmp	w0, w28
    20b8:	ldr	x1, [x1, x28, lsl #3]
    20bc:	b.ls	2c34 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xdfc>  // b.plast
    20c0:	ldr	x2, [sp, #688]
    20c4:	mov	x3, x23
    20c8:	mov	x4, x24
    20cc:	mov	x0, x21
    20d0:	add	x2, x2, x27
    20d4:	bl	1030 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE>
    20d8:	ldr	w2, [sp, #696]
    20dc:	cmp	w2, w28
    20e0:	b.ls	2c34 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xdfc>  // b.plast
    20e4:	ldr	x19, [sp, #688]
    20e8:	add	x28, x28, #0x1
    20ec:	add	x0, x19, x27
    20f0:	add	x27, x27, #0x120
    20f4:	ldr	w0, [x0, #152]
    20f8:	cmp	w25, w0
    20fc:	csel	w25, w25, w0, cs  // cs = hs, nlast
    2100:	cmp	w26, w28
    2104:	b.ne	20a0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x268>  // b.any
    2108:	mov	w9, w2
    210c:	cbz	w25, 23b0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x578>
    2110:	mov	w2, w2
    2114:	add	x28, x22, #0x10
    2118:	add	x4, sp, #0x110
    211c:	mov	x24, #0x0                   	// #0
    2120:	ldr	w26, [x20, #48]
    2124:	cbz	w26, 2b84 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xd4c>
    2128:	lsl	x27, x24, #3
    212c:	mov	x23, #0x0                   	// #0
    2130:	mov	x21, #0x0                   	// #0
    2134:	b	2188 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x350>
    2138:	mov	x3, x28
    213c:	mov	w19, #0x10                  	// #16
    2140:	ldr	x1, [x5, x27]
    2144:	cmn	x1, #0x8
    2148:	ccmn	x1, #0x10, #0x4, ne  // ne = any
    214c:	b.eq	2cd0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xe98>  // b.none
    2150:	lsr	w0, w1, #9
    2154:	sub	w19, w19, #0x1
    2158:	eor	w0, w0, w1, lsr #4
    215c:	and	w8, w0, w19
    2160:	mov	x0, x8
    2164:	ubfiz	x7, x8, #3, #28
    2168:	ldr	x8, [x3, x8, lsl #3]
    216c:	add	x7, x3, x7
    2170:	cmp	x1, x8
    2174:	b.ne	22c8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x490>  // b.any
    2178:	add	x21, x21, #0x1
    217c:	add	x23, x23, #0x120
    2180:	cmp	w26, w21
    2184:	b.eq	23a0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x568>  // b.none
    2188:	cmp	x2, x21
    218c:	mov	x9, x2
    2190:	b.ls	2c34 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xdfc>  // b.plast
    2194:	ldr	x19, [sp, #688]
    2198:	add	x0, x19, x23
    219c:	ldr	w1, [x0, #152]
    21a0:	cmp	w1, w24
    21a4:	b.ls	2178 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x340>  // b.plast
    21a8:	cmp	x24, w1, uxtw
    21ac:	b.cs	2cf0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xeb8>  // b.hs, b.nlast
    21b0:	ldrb	w1, [x22, #8]
    21b4:	ldr	x5, [x0, #144]
    21b8:	and	w10, w1, #0x1
    21bc:	tbnz	w1, #0, 2138 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x300>
    21c0:	ldr	w19, [x22, #24]
    21c4:	ldr	x3, [x22, #16]
    21c8:	cbnz	w19, 2140 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x308>
    21cc:	ldr	x0, [x22]
    21d0:	add	x0, x0, #0x1
    21d4:	str	x0, [x22]
    21d8:	ldrb	w0, [x22, #8]
    21dc:	ldr	x8, [x22, #16]
    21e0:	orr	w0, w0, #0x1
    21e4:	strb	w0, [x22, #8]
    21e8:	ldr	x0, [x22, #8]
    21ec:	ubfiz	x1, x19, #3, #32
    21f0:	add	x11, x8, x1
    21f4:	and	x0, x0, #0x1
    21f8:	str	x0, [x22, #8]
    21fc:	cbnz	x0, 2afc <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xcc4>
    2200:	ldr	w2, [x22, #24]
    2204:	sub	w0, w2, #0x1
    2208:	tst	w0, w2
    220c:	b.ne	2d30 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xef8>  // b.any
    2210:	ldr	x0, [x22, #16]
    2214:	ubfiz	x2, x2, #3, #32
    2218:	add	x2, x0, x2
    221c:	mov	x3, #0xfffffffffffffff8    	// #-8
    2220:	cmp	x0, x2
    2224:	b.eq	2234 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3fc>  // b.none
    2228:	str	x3, [x0], #8
    222c:	cmp	x2, x0
    2230:	b.ne	2228 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3f0>  // b.any
    2234:	cmp	x8, x11
    2238:	mov	x0, x8
    223c:	b.ne	2250 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x418>  // b.any
    2240:	b	286c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xa34>
    2244:	add	x0, x0, #0x8
    2248:	cmp	x11, x0
    224c:	b.eq	286c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xa34>  // b.none
    2250:	ldr	x2, [x0]
    2254:	cmn	x2, #0x8
    2258:	ccmn	x2, #0x10, #0x4, ne  // ne = any
    225c:	b.eq	2244 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x40c>  // b.none
    2260:	ldrb	w3, [x22, #8]
    2264:	tbz	w3, #0, 22b4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x47c>
    2268:	mov	x10, x28
    226c:	mov	w7, #0xf                   	// #15
    2270:	lsr	w3, w2, #9
    2274:	eor	w3, w3, w2, lsr #4
    2278:	and	w12, w3, w7
    227c:	mov	x3, x12
    2280:	ubfiz	x9, x12, #3, #28
    2284:	ldr	x12, [x10, x12, lsl #3]
    2288:	add	x9, x10, x9
    228c:	cmp	x2, x12
    2290:	b.ne	2a90 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xc58>  // b.any
    2294:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2298:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    229c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    22a0:	add	x3, x3, #0x0
    22a4:	add	x1, x1, #0x0
    22a8:	add	x0, x0, #0x0
    22ac:	mov	w2, #0x17a                 	// #378
    22b0:	bl	0 <__assert_fail>
    22b4:	ldr	w7, [x22, #24]
    22b8:	ldr	x10, [x22, #16]
    22bc:	cbz	w7, 2ec0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1088>
    22c0:	sub	w7, w7, #0x1
    22c4:	b	2270 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x438>
    22c8:	mov	w12, #0x1                   	// #1
    22cc:	mov	x11, #0x0                   	// #0
    22d0:	cmn	x8, #0x8
    22d4:	b.ne	2b08 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xcd0>  // b.any
    22d8:	ldr	w0, [x22, #8]
    22dc:	cmp	x11, #0x0
    22e0:	ldr	x1, [x22]
    22e4:	csel	x11, x11, x7, ne  // ne = any
    22e8:	lsr	w0, w0, #1
    22ec:	add	w0, w0, #0x1
    22f0:	add	x1, x1, #0x1
    22f4:	str	x1, [x22]
    22f8:	lsl	w3, w0, #2
    22fc:	cbz	w10, 2600 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x7c8>
    2300:	cmp	w3, #0x2f
    2304:	b.hi	291c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xae4>  // b.pmore
    2308:	ldr	w2, [x22, #12]
    230c:	mov	w1, #0x10                  	// #16
    2310:	add	w2, w0, w2
    2314:	sub	w1, w1, w2
    2318:	cmp	w1, #0x2
    231c:	b.ls	243c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x604>  // b.plast
    2320:	tbnz	w0, #31, 2d10 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xed8>
    2324:	ldr	w1, [x22, #8]
    2328:	bfi	w1, w0, #1, #31
    232c:	str	w1, [x22, #8]
    2330:	ldr	x0, [x11]
    2334:	cmn	x0, #0x8
    2338:	b.eq	2348 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x510>  // b.none
    233c:	ldr	w0, [x22, #12]
    2340:	sub	w0, w0, #0x1
    2344:	str	w0, [x22, #12]
    2348:	ldr	x0, [x5, x27]
    234c:	ldr	w1, [x22, #156]
    2350:	str	x0, [x11]
    2354:	ldr	w0, [x22, #152]
    2358:	cmp	w0, w1
    235c:	b.cs	27e4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x9ac>  // b.hs, b.nlast
    2360:	ldr	x1, [x22, #144]
    2364:	ldr	x2, [x5, x27]
    2368:	str	x2, [x1, w0, uxtw #3]
    236c:	ldp	w0, w2, [x22, #152]
    2370:	mov	w1, w0
    2374:	add	x1, x1, #0x1
    2378:	cmp	x1, x2
    237c:	b.hi	2dc8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xf90>  // b.pmore
    2380:	ldr	w2, [sp, #696]
    2384:	add	w0, w0, #0x1
    2388:	str	w0, [x22, #152]
    238c:	add	x21, x21, #0x1
    2390:	mov	x9, x2
    2394:	add	x23, x23, #0x120
    2398:	cmp	w26, w21
    239c:	b.ne	2188 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x350>  // b.any
    23a0:	add	x24, x24, #0x1
    23a4:	cmp	w25, w24
    23a8:	b.ne	2120 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x2e8>  // b.any
    23ac:	ldr	x19, [sp, #688]
    23b0:	add	x20, x9, x9, lsl #3
    23b4:	add	x20, x19, x20, lsl #5
    23b8:	cmp	x19, x20
    23bc:	b.eq	2404 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5cc>  // b.none
    23c0:	ldur	x0, [x20, #-144]
    23c4:	sub	x20, x20, #0x120
    23c8:	add	x1, x20, #0xa0
    23cc:	cmp	x0, x1
    23d0:	b.eq	23d8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5a0>  // b.none
    23d4:	bl	0 <free>
    23d8:	ldrb	w0, [x20, #8]
    23dc:	tbnz	w0, #0, 23f8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5c0>
    23e0:	ldr	x0, [x20, #16]
    23e4:	ldr	w1, [x20, #24]
    23e8:	lsl	x1, x1, #3
    23ec:	bl	0 <_ZdlPvm>
    23f0:	ldrb	w0, [x20, #8]
    23f4:	tbnz	w0, #0, 2b64 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xd2c>
    23f8:	cmp	x19, x20
    23fc:	b.ne	23c0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x588>  // b.any
    2400:	ldr	x20, [sp, #688]
    2404:	ldr	x0, [sp, #128]
    2408:	add	x22, x0, #0x10
    240c:	cmp	x20, x22
    2410:	b.eq	241c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5e4>  // b.none
    2414:	mov	x0, x20
    2418:	bl	0 <free>
    241c:	ldp	x29, x30, [sp]
    2420:	ldp	x19, x20, [sp, #16]
    2424:	ldp	x21, x22, [sp, #32]
    2428:	ldp	x23, x24, [sp, #48]
    242c:	ldp	x25, x26, [sp, #64]
    2430:	ldp	x27, x28, [sp, #80]
    2434:	add	sp, sp, #0x740
    2438:	ret
    243c:	add	x2, x22, #0x90
    2440:	mov	x0, x28
    2444:	mov	x3, x4
    2448:	ldr	x1, [x0]
    244c:	cmn	x1, #0x10
    2450:	ccmn	x1, #0x8, #0x4, ne  // ne = any
    2454:	b.eq	2468 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x630>  // b.none
    2458:	sub	x7, x3, x4
    245c:	cmp	x7, #0x7f
    2460:	b.hi	2da8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xf70>  // b.pmore
    2464:	str	x1, [x3], #8
    2468:	add	x0, x0, #0x8
    246c:	cmp	x2, x0
    2470:	b.ne	2448 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x610>  // b.any
    2474:	ldr	x7, [x22, #8]
    2478:	and	x7, x7, #0x1
    247c:	str	x7, [x22, #8]
    2480:	and	w0, w7, #0xff
    2484:	cbnz	w7, 2b40 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xd08>
    2488:	ldr	w1, [x22, #24]
    248c:	sub	w2, w1, #0x1
    2490:	tst	w2, w1
    2494:	b.ne	2d30 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xef8>  // b.any
    2498:	ubfiz	x2, x1, #3, #32
    249c:	ldr	x1, [x22, #16]
    24a0:	add	x2, x1, x2
    24a4:	cmp	x1, x2
    24a8:	mov	x8, #0xfffffffffffffff8    	// #-8
    24ac:	b.eq	24c8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x690>  // b.none
    24b0:	str	x8, [x1], #8
    24b4:	cmp	x2, x1
    24b8:	b.ne	24b0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x678>  // b.any
    24bc:	ldrb	w0, [x22, #8]
    24c0:	and	w7, w0, #0x1
    24c4:	mov	w0, w7
    24c8:	cmp	x3, x4
    24cc:	b.eq	2570 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x738>  // b.none
    24d0:	mov	x1, x4
    24d4:	b	24e4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x6ac>
    24d8:	add	x1, x1, #0x8
    24dc:	cmp	x3, x1
    24e0:	b.eq	2570 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x738>  // b.none
    24e4:	ldr	x2, [x1]
    24e8:	and	w0, w7, #0xff
    24ec:	cmn	x2, #0x8
    24f0:	ccmn	x2, #0x10, #0x4, ne  // ne = any
    24f4:	b.eq	24d8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x6a0>  // b.none
    24f8:	cbz	w0, 27d0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x998>
    24fc:	mov	x8, x28
    2500:	mov	w7, #0xf                   	// #15
    2504:	lsr	w0, w2, #9
    2508:	eor	w0, w0, w2, lsr #4
    250c:	and	w10, w0, w7
    2510:	mov	x0, x10
    2514:	ubfiz	x9, x10, #3, #28
    2518:	ldr	x10, [x8, x10, lsl #3]
    251c:	add	x9, x8, x9
    2520:	cmp	x10, x2
    2524:	b.eq	2294 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x45c>  // b.none
    2528:	mov	w12, #0x1                   	// #1
    252c:	mov	x11, #0x0                   	// #0
    2530:	cmn	x10, #0x8
    2534:	b.ne	2c54 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xe1c>  // b.any
    2538:	cmp	x11, #0x0
    253c:	csel	x11, x11, x9, ne  // ne = any
    2540:	str	x2, [x11]
    2544:	ldr	w0, [x22, #8]
    2548:	lsr	w2, w0, #1
    254c:	adds	w2, w2, #0x1
    2550:	b.mi	2d10 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xed8>  // b.first
    2554:	bfi	w0, w2, #1, #31
    2558:	str	w0, [x22, #8]
    255c:	and	w7, w0, #0x1
    2560:	add	x1, x1, #0x8
    2564:	mov	w0, w7
    2568:	cmp	x3, x1
    256c:	b.ne	24e4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x6ac>  // b.any
    2570:	cbz	w0, 2790 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x958>
    2574:	mov	x7, x28
    2578:	mov	w0, #0x10                  	// #16
    257c:	ldr	x2, [x5, x27]
    2580:	cmn	x2, #0x8
    2584:	ccmn	x2, #0x10, #0x4, ne  // ne = any
    2588:	b.eq	2cd0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xe98>  // b.none
    258c:	lsr	w1, w2, #9
    2590:	sub	w3, w0, #0x1
    2594:	eor	w1, w1, w2, lsr #4
    2598:	ldr	w0, [x22, #8]
    259c:	and	w8, w1, w3
    25a0:	mov	x1, x8
    25a4:	ubfiz	x11, x8, #3, #28
    25a8:	lsr	w0, w0, #1
    25ac:	ldr	x8, [x7, x8, lsl #3]
    25b0:	add	x11, x7, x11
    25b4:	add	w0, w0, #0x1
    25b8:	cmp	x2, x8
    25bc:	b.eq	2320 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x4e8>  // b.none
    25c0:	mov	w10, #0x1                   	// #1
    25c4:	mov	x9, #0x0                   	// #0
    25c8:	cmn	x8, #0x8
    25cc:	b.eq	28e4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xaac>  // b.none
    25d0:	add	w1, w10, w1
    25d4:	cmp	x9, #0x0
    25d8:	and	w12, w3, w1
    25dc:	ccmn	x8, #0x10, #0x0, eq  // eq = none
    25e0:	csel	x9, x9, x11, ne  // ne = any
    25e4:	add	w10, w10, #0x1
    25e8:	and	w1, w3, w1
    25ec:	add	x11, x7, x12, lsl #3
    25f0:	ldr	x8, [x7, x12, lsl #3]
    25f4:	cmp	x2, x8
    25f8:	b.eq	2320 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x4e8>  // b.none
    25fc:	b	25c8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x790>
    2600:	ldr	w19, [x22, #24]
    2604:	lsl	w1, w19, #1
    2608:	add	w2, w1, w19
    260c:	cmp	w3, w2
    2610:	b.cs	2de8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xfb0>  // b.hs, b.nlast
    2614:	ldr	w1, [x22, #12]
    2618:	add	w1, w0, w1
    261c:	sub	w1, w19, w1
    2620:	cmp	w1, w19, lsr #3
    2624:	b.hi	2320 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x4e8>  // b.pmore
    2628:	cmp	w19, #0x10
    262c:	b.ls	2ac8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xc90>  // b.plast
    2630:	sub	w0, w19, #0x1
    2634:	orr	x0, x0, x0, lsr #1
    2638:	orr	x0, x0, x0, lsr #2
    263c:	orr	x0, x0, x0, lsr #4
    2640:	orr	x0, x0, x0, lsr #8
    2644:	orr	x0, x0, x0, lsr #16
    2648:	add	x0, x0, #0x1
    264c:	cmp	w0, #0x40
    2650:	mov	w1, w0
    2654:	b.hi	2c8c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xe54>  // b.pmore
    2658:	ldr	x8, [x22, #16]
    265c:	mov	x0, #0x200                 	// #512
    2660:	mov	w1, #0x40                  	// #64
    2664:	str	w1, [sp, #104]
    2668:	stp	x8, x5, [sp, #112]
    266c:	str	x4, [sp, #136]
    2670:	bl	0 <_Znwm>
    2674:	ldp	x8, x5, [sp, #112]
    2678:	str	x0, [x22, #16]
    267c:	ldr	x0, [x22, #8]
    2680:	ldr	w1, [sp, #104]
    2684:	and	x0, x0, #0x1
    2688:	str	x0, [x22, #8]
    268c:	str	w1, [x22, #24]
    2690:	ubfiz	x1, x19, #3, #32
    2694:	add	x11, x8, x1
    2698:	ldr	x4, [sp, #136]
    269c:	cbnz	x0, 2af0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xcb8>
    26a0:	ldr	w2, [x22, #24]
    26a4:	sub	w0, w2, #0x1
    26a8:	tst	w0, w2
    26ac:	b.ne	2d30 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xef8>  // b.any
    26b0:	ldr	x0, [x22, #16]
    26b4:	ubfiz	x2, x2, #3, #32
    26b8:	add	x2, x0, x2
    26bc:	mov	x3, #0xfffffffffffffff8    	// #-8
    26c0:	cmp	x0, x2
    26c4:	b.eq	26d4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x89c>  // b.none
    26c8:	str	x3, [x0], #8
    26cc:	cmp	x2, x0
    26d0:	b.ne	26c8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x890>  // b.any
    26d4:	cmp	x11, x8
    26d8:	mov	x0, x8
    26dc:	b.ne	26f0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x8b8>  // b.any
    26e0:	b	2774 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x93c>
    26e4:	add	x0, x0, #0x8
    26e8:	cmp	x11, x0
    26ec:	b.eq	2774 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x93c>  // b.none
    26f0:	ldr	x2, [x0]
    26f4:	cmn	x2, #0x8
    26f8:	ccmn	x2, #0x10, #0x4, ne  // ne = any
    26fc:	b.eq	26e4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x8ac>  // b.none
    2700:	ldrb	w3, [x22, #8]
    2704:	tbz	w3, #0, 27bc <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x984>
    2708:	mov	x10, x28
    270c:	mov	w9, #0xf                   	// #15
    2710:	lsr	w3, w2, #9
    2714:	eor	w3, w3, w2, lsr #4
    2718:	and	w12, w3, w9
    271c:	mov	x3, x12
    2720:	ubfiz	x7, x12, #3, #28
    2724:	ldr	x12, [x10, x12, lsl #3]
    2728:	add	x7, x10, x7
    272c:	cmp	x12, x2
    2730:	b.eq	2294 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x45c>  // b.none
    2734:	mov	w14, #0x1                   	// #1
    2738:	mov	x13, #0x0                   	// #0
    273c:	cmn	x12, #0x8
    2740:	b.ne	2c98 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xe60>  // b.any
    2744:	cmp	x13, #0x0
    2748:	csel	x13, x13, x7, ne  // ne = any
    274c:	str	x2, [x13]
    2750:	ldr	w2, [x22, #8]
    2754:	lsr	w3, w2, #1
    2758:	adds	w3, w3, #0x1
    275c:	b.mi	2d10 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xed8>  // b.first
    2760:	bfi	w2, w3, #1, #31
    2764:	str	w2, [x22, #8]
    2768:	add	x0, x0, #0x8
    276c:	cmp	x11, x0
    2770:	b.ne	26f0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x8b8>  // b.any
    2774:	mov	x0, x8
    2778:	stp	x5, x4, [sp, #104]
    277c:	bl	0 <_ZdlPvm>
    2780:	ldrb	w0, [x22, #8]
    2784:	ldp	x5, x4, [sp, #104]
    2788:	and	w0, w0, #0x1
    278c:	cbnz	w0, 2574 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x73c>
    2790:	ldr	w0, [x22, #24]
    2794:	ldr	x7, [x22, #16]
    2798:	cbnz	w0, 257c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x744>
    279c:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    27a0:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    27a4:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    27a8:	add	x3, x3, #0x0
    27ac:	add	x1, x1, #0x0
    27b0:	add	x0, x0, #0x0
    27b4:	mov	w2, #0x22f                 	// #559
    27b8:	bl	0 <__assert_fail>
    27bc:	ldr	w9, [x22, #24]
    27c0:	ldr	x10, [x22, #16]
    27c4:	cbz	w9, 2ec0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1088>
    27c8:	sub	w9, w9, #0x1
    27cc:	b	2710 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x8d8>
    27d0:	ldr	w7, [x22, #24]
    27d4:	ldr	x8, [x22, #16]
    27d8:	cbz	w7, 2ec0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1088>
    27dc:	sub	w7, w7, #0x1
    27e0:	b	2504 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x6cc>
    27e4:	add	x0, x22, #0x90
    27e8:	add	x1, x22, #0xa0
    27ec:	mov	x3, #0x8                   	// #8
    27f0:	mov	x2, #0x0                   	// #0
    27f4:	stp	x5, x4, [sp, #104]
    27f8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    27fc:	ldr	w0, [x22, #152]
    2800:	ldp	x5, x4, [sp, #104]
    2804:	b	2360 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x528>
    2808:	ldrb	w0, [sp, #408]
    280c:	ldr	x1, [sp, #416]
    2810:	tst	x0, #0x1
    2814:	ldr	w2, [x27, #24]
    2818:	ldr	x0, [sp, #104]
    281c:	lsl	x2, x2, #3
    2820:	csel	x1, x0, x1, ne  // ne = any
    2824:	ldr	x0, [x27, #16]
    2828:	bl	0 <memcpy>
    282c:	mov	w1, #0x10                  	// #16
    2830:	stp	wzr, w1, [x27, #152]
    2834:	add	x0, x27, #0xa0
    2838:	str	x0, [x27, #144]
    283c:	ldr	w0, [sp, #552]
    2840:	cbz	w0, 2054 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x21c>
    2844:	add	x1, x19, #0x90
    2848:	add	x0, x27, #0x90
    284c:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2850:	b	2054 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x21c>
    2854:	add	x0, x27, #0x10
    2858:	add	x2, x27, #0x90
    285c:	b	1f50 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x118>
    2860:	mov	w2, #0x10                  	// #16
    2864:	cbz	w0, 1ff4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1bc>
    2868:	b	2000 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1c8>
    286c:	mov	x0, x8
    2870:	stp	x5, x4, [sp, #104]
    2874:	bl	0 <_ZdlPvm>
    2878:	ldp	x5, x4, [sp, #104]
    287c:	ldrb	w1, [x22, #8]
    2880:	and	w1, w1, #0x1
    2884:	cbz	w1, 28f0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xab8>
    2888:	mov	x7, x28
    288c:	mov	w0, #0x10                  	// #16
    2890:	ldr	x2, [x5, x27]
    2894:	cmn	x2, #0x8
    2898:	ccmn	x2, #0x10, #0x4, ne  // ne = any
    289c:	b.eq	2cd0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xe98>  // b.none
    28a0:	lsr	w1, w2, #9
    28a4:	sub	w3, w0, #0x1
    28a8:	eor	w1, w1, w2, lsr #4
    28ac:	ldr	w0, [x22, #8]
    28b0:	and	w8, w1, w3
    28b4:	mov	x1, x8
    28b8:	ubfiz	x11, x8, #3, #28
    28bc:	lsr	w0, w0, #1
    28c0:	ldr	x8, [x7, x8, lsl #3]
    28c4:	add	x11, x7, x11
    28c8:	add	w0, w0, #0x1
    28cc:	cmp	x2, x8
    28d0:	b.eq	2320 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x4e8>  // b.none
    28d4:	mov	w10, #0x1                   	// #1
    28d8:	mov	x9, #0x0                   	// #0
    28dc:	cmn	x8, #0x8
    28e0:	b.ne	2d58 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xf20>  // b.any
    28e4:	cmp	x9, #0x0
    28e8:	csel	x11, x11, x9, eq  // eq = none
    28ec:	b	2320 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x4e8>
    28f0:	ldr	w0, [x22, #24]
    28f4:	ldr	x7, [x22, #16]
    28f8:	cbnz	w0, 2890 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xa58>
    28fc:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2900:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2904:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2908:	add	x3, x3, #0x0
    290c:	add	x1, x1, #0x0
    2910:	add	x0, x0, #0x0
    2914:	mov	w2, #0x22f                 	// #559
    2918:	bl	0 <__assert_fail>
    291c:	add	x7, sp, #0x90
    2920:	add	x2, x22, #0x90
    2924:	mov	x19, x7
    2928:	mov	x0, x28
    292c:	nop
    2930:	ldr	x1, [x0]
    2934:	cmn	x1, #0x10
    2938:	ccmn	x1, #0x8, #0x4, ne  // ne = any
    293c:	b.eq	2950 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xb18>  // b.none
    2940:	sub	x3, x19, x7
    2944:	cmp	x3, #0x7f
    2948:	b.hi	2da8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xf70>  // b.pmore
    294c:	str	x1, [x19], #8
    2950:	add	x0, x0, #0x8
    2954:	cmp	x0, x2
    2958:	b.ne	2930 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xaf8>  // b.any
    295c:	ldrb	w1, [x22, #8]
    2960:	mov	x0, #0x200                 	// #512
    2964:	stp	x5, x7, [sp, #104]
    2968:	and	w1, w1, #0xfffffffe
    296c:	strb	w1, [x22, #8]
    2970:	str	x4, [sp, #120]
    2974:	bl	0 <_Znwm>
    2978:	ldr	x3, [x22, #8]
    297c:	mov	w1, #0x40                  	// #64
    2980:	str	w1, [x22, #24]
    2984:	mov	x2, #0x200                 	// #512
    2988:	and	x3, x3, #0x1
    298c:	stp	x3, x0, [x22, #8]
    2990:	and	w1, w3, #0xff
    2994:	ldp	x5, x7, [sp, #104]
    2998:	ldr	x4, [sp, #120]
    299c:	cbz	w3, 29a8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xb70>
    29a0:	mov	x0, x28
    29a4:	mov	x2, #0x80                  	// #128
    29a8:	add	x2, x0, x2
    29ac:	mov	x8, #0xfffffffffffffff8    	// #-8
    29b0:	cmp	x0, x2
    29b4:	b.eq	29d0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xb98>  // b.none
    29b8:	str	x8, [x0], #8
    29bc:	cmp	x2, x0
    29c0:	b.ne	29b8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xb80>  // b.any
    29c4:	ldrb	w1, [x22, #8]
    29c8:	and	w3, w1, #0x1
    29cc:	mov	w1, w3
    29d0:	cmp	x19, x7
    29d4:	b.eq	2884 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xa4c>  // b.none
    29d8:	mov	x0, x7
    29dc:	b	29ec <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xbb4>
    29e0:	add	x0, x0, #0x8
    29e4:	cmp	x19, x0
    29e8:	b.eq	2884 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xa4c>  // b.none
    29ec:	ldr	x2, [x0]
    29f0:	and	w1, w3, #0xff
    29f4:	cmn	x2, #0x10
    29f8:	ccmn	x2, #0x8, #0x4, ne  // ne = any
    29fc:	b.eq	29e0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xba8>  // b.none
    2a00:	cbz	w1, 2a70 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xc38>
    2a04:	mov	x7, x28
    2a08:	mov	w3, #0xf                   	// #15
    2a0c:	lsr	w1, w2, #9
    2a10:	eor	w1, w1, w2, lsr #4
    2a14:	and	w9, w1, w3
    2a18:	mov	x1, x9
    2a1c:	ubfiz	x8, x9, #3, #28
    2a20:	ldr	x9, [x7, x9, lsl #3]
    2a24:	add	x8, x7, x8
    2a28:	cmp	x9, x2
    2a2c:	b.eq	2294 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x45c>  // b.none
    2a30:	mov	w11, #0x1                   	// #1
    2a34:	mov	x10, #0x0                   	// #0
    2a38:	cmn	x9, #0x8
    2a3c:	b.ne	2bfc <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xdc4>  // b.any
    2a40:	cmp	x10, #0x0
    2a44:	csel	x10, x10, x8, ne  // ne = any
    2a48:	str	x2, [x10]
    2a4c:	ldr	w1, [x22, #8]
    2a50:	lsr	w2, w1, #1
    2a54:	adds	w2, w2, #0x1
    2a58:	b.mi	2d10 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xed8>  // b.first
    2a5c:	bfi	w1, w2, #1, #31
    2a60:	str	w1, [x22, #8]
    2a64:	and	w3, w1, #0x1
    2a68:	mov	w1, w3
    2a6c:	b	29e0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xba8>
    2a70:	ldr	w3, [x22, #24]
    2a74:	ldr	x7, [x22, #16]
    2a78:	cbz	w3, 2ec0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1088>
    2a7c:	sub	w3, w3, #0x1
    2a80:	b	2a0c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xbd4>
    2a84:	mov	x2, #0x80                  	// #128
    2a88:	ldr	x1, [sp, #104]
    2a8c:	b	2038 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x200>
    2a90:	mov	w14, #0x1                   	// #1
    2a94:	mov	x13, #0x0                   	// #0
    2a98:	cmn	x12, #0x8
    2a9c:	b.ne	2bc4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xd8c>  // b.any
    2aa0:	cmp	x13, #0x0
    2aa4:	csel	x13, x13, x9, ne  // ne = any
    2aa8:	str	x2, [x13]
    2aac:	ldr	w2, [x22, #8]
    2ab0:	lsr	w3, w2, #1
    2ab4:	adds	w3, w3, #0x1
    2ab8:	b.mi	2d10 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xed8>  // b.first
    2abc:	bfi	w2, w3, #1, #31
    2ac0:	str	w2, [x22, #8]
    2ac4:	b	2244 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x40c>
    2ac8:	ldrb	w0, [x22, #8]
    2acc:	ubfiz	x1, x19, #3, #32
    2ad0:	ldr	x8, [x22, #16]
    2ad4:	orr	w0, w0, #0x1
    2ad8:	strb	w0, [x22, #8]
    2adc:	add	x11, x8, x1
    2ae0:	ldr	x0, [x22, #8]
    2ae4:	and	x0, x0, #0x1
    2ae8:	str	x0, [x22, #8]
    2aec:	cbz	x0, 26a0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x868>
    2af0:	add	x0, x22, #0x10
    2af4:	mov	x2, #0x80                  	// #128
    2af8:	b	26b8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x880>
    2afc:	add	x0, x22, #0x10
    2b00:	mov	x2, #0x80                  	// #128
    2b04:	b	2218 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3e0>
    2b08:	add	w0, w0, w12
    2b0c:	cmp	x11, #0x0
    2b10:	and	w13, w19, w0
    2b14:	ccmn	x8, #0x10, #0x0, eq  // eq = none
    2b18:	csel	x7, x7, x11, eq  // eq = none
    2b1c:	add	w12, w12, #0x1
    2b20:	and	w0, w19, w0
    2b24:	add	x14, x3, x13, lsl #3
    2b28:	ldr	x8, [x3, x13, lsl #3]
    2b2c:	cmp	x1, x8
    2b30:	b.eq	2178 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x340>  // b.none
    2b34:	mov	x11, x7
    2b38:	mov	x7, x14
    2b3c:	b	22d0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x498>
    2b40:	mov	x1, x28
    2b44:	mov	x2, #0x80                  	// #128
    2b48:	b	24a0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x668>
    2b4c:	ldr	x0, [sp, #416]
    2b50:	ldr	w1, [sp, #424]
    2b54:	lsl	x1, x1, #3
    2b58:	bl	0 <_ZdlPvm>
    2b5c:	ldrb	w0, [sp, #408]
    2b60:	tbz	w0, #0, 207c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x244>
    2b64:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2b68:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2b6c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2b70:	add	x3, x3, #0x0
    2b74:	add	x1, x1, #0x0
    2b78:	add	x0, x0, #0x0
    2b7c:	mov	w2, #0x45b                 	// #1115
    2b80:	bl	0 <__assert_fail>
    2b84:	add	x24, x24, #0x1
    2b88:	mov	x9, x2
    2b8c:	cmp	w25, w24
    2b90:	b.ne	2120 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x2e8>  // b.any
    2b94:	b	23ac <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x574>
    2b98:	ldr	x0, [sp, #128]
    2b9c:	mov	x1, x25
    2ba0:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2ba4:	ldr	w0, [sp, #700]
    2ba8:	cmp	x25, x0
    2bac:	b.hi	2dc8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xf90>  // b.pmore
    2bb0:	ldr	x27, [sp, #688]
    2bb4:	b	1ef8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xc0>
    2bb8:	add	x2, x19, #0x90
    2bbc:	add	x0, x19, #0x10
    2bc0:	b	1eb4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x7c>
    2bc4:	add	w3, w3, w14
    2bc8:	cmp	x13, #0x0
    2bcc:	and	w15, w3, w7
    2bd0:	ccmn	x12, #0x10, #0x0, eq  // eq = none
    2bd4:	csel	x9, x9, x13, eq  // eq = none
    2bd8:	add	w14, w14, #0x1
    2bdc:	and	w3, w3, w7
    2be0:	add	x16, x10, x15, lsl #3
    2be4:	ldr	x12, [x10, x15, lsl #3]
    2be8:	cmp	x2, x12
    2bec:	b.eq	2294 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x45c>  // b.none
    2bf0:	mov	x13, x9
    2bf4:	mov	x9, x16
    2bf8:	b	2a98 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xc60>
    2bfc:	add	w1, w11, w1
    2c00:	cmp	x10, #0x0
    2c04:	and	w12, w1, w3
    2c08:	ccmn	x9, #0x10, #0x0, eq  // eq = none
    2c0c:	csel	x8, x8, x10, eq  // eq = none
    2c10:	add	w11, w11, #0x1
    2c14:	and	w1, w1, w3
    2c18:	add	x13, x7, x12, lsl #3
    2c1c:	ldr	x9, [x7, x12, lsl #3]
    2c20:	cmp	x2, x9
    2c24:	b.eq	2294 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x45c>  // b.none
    2c28:	mov	x10, x8
    2c2c:	mov	x8, x13
    2c30:	b	2a38 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xc00>
    2c34:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2c38:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2c3c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2c40:	add	x3, x3, #0x0
    2c44:	add	x1, x1, #0x0
    2c48:	add	x0, x0, #0x0
    2c4c:	mov	w2, #0x95                  	// #149
    2c50:	bl	0 <__assert_fail>
    2c54:	add	w0, w0, w12
    2c58:	cmp	x11, #0x0
    2c5c:	and	w13, w7, w0
    2c60:	ccmn	x10, #0x10, #0x0, eq  // eq = none
    2c64:	csel	x9, x9, x11, eq  // eq = none
    2c68:	add	w12, w12, #0x1
    2c6c:	and	w0, w7, w0
    2c70:	add	x14, x8, x13, lsl #3
    2c74:	ldr	x10, [x8, x13, lsl #3]
    2c78:	cmp	x2, x10
    2c7c:	b.eq	2294 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x45c>  // b.none
    2c80:	mov	x11, x9
    2c84:	mov	x9, x14
    2c88:	b	2530 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x6f8>
    2c8c:	ubfiz	x0, x0, #3, #32
    2c90:	ldr	x8, [x22, #16]
    2c94:	b	2664 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x82c>
    2c98:	add	w3, w14, w3
    2c9c:	cmp	x13, #0x0
    2ca0:	and	w15, w9, w3
    2ca4:	ccmn	x12, #0x10, #0x0, eq  // eq = none
    2ca8:	csel	x7, x7, x13, eq  // eq = none
    2cac:	add	w14, w14, #0x1
    2cb0:	and	w3, w9, w3
    2cb4:	add	x16, x10, x15, lsl #3
    2cb8:	ldr	x12, [x10, x15, lsl #3]
    2cbc:	cmp	x2, x12
    2cc0:	b.eq	2294 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x45c>  // b.none
    2cc4:	mov	x13, x7
    2cc8:	mov	x7, x16
    2ccc:	b	273c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x904>
    2cd0:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2cd4:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2cd8:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2cdc:	add	x3, x3, #0x0
    2ce0:	add	x1, x1, #0x0
    2ce4:	add	x0, x0, #0x0
    2ce8:	mov	w2, #0x250                 	// #592
    2cec:	bl	0 <__assert_fail>
    2cf0:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2cf4:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2cf8:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2cfc:	add	x3, x3, #0x0
    2d00:	add	x1, x1, #0x0
    2d04:	add	x0, x0, #0x0
    2d08:	mov	w2, #0x87                  	// #135
    2d0c:	bl	0 <__assert_fail>
    2d10:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2d14:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2d18:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2d1c:	add	x3, x3, #0x0
    2d20:	add	x1, x1, #0x0
    2d24:	add	x0, x0, #0x0
    2d28:	mov	w2, #0x441                 	// #1089
    2d2c:	bl	0 <__assert_fail>
    2d30:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2d34:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2d38:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2d3c:	add	x3, x3, #0x0
    2d40:	add	x1, x1, #0x0
    2d44:	add	x0, x0, #0x0
    2d48:	mov	w2, #0x15b                 	// #347
    2d4c:	bl	0 <__assert_fail>
    2d50:	ldr	w9, [sp, #696]
    2d54:	b	23ac <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x574>
    2d58:	add	w1, w1, w10
    2d5c:	cmp	x9, #0x0
    2d60:	and	w12, w3, w1
    2d64:	ccmn	x8, #0x10, #0x0, eq  // eq = none
    2d68:	csel	x9, x9, x11, ne  // ne = any
    2d6c:	add	w10, w10, #0x1
    2d70:	and	w1, w3, w1
    2d74:	add	x11, x7, x12, lsl #3
    2d78:	ldr	x8, [x7, x12, lsl #3]
    2d7c:	cmp	x2, x8
    2d80:	b.eq	2320 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x4e8>  // b.none
    2d84:	b	28dc <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xaa4>
    2d88:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2d8c:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2d90:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2d94:	add	x3, x3, #0x0
    2d98:	add	x1, x1, #0x0
    2d9c:	add	x0, x0, #0x0
    2da0:	mov	w2, #0x540                 	// #1344
    2da4:	bl	0 <__assert_fail>
    2da8:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2dac:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2db0:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2db4:	add	x3, x3, #0x0
    2db8:	add	x1, x1, #0x0
    2dbc:	add	x0, x0, #0x0
    2dc0:	mov	w2, #0x401                 	// #1025
    2dc4:	bl	0 <__assert_fail>
    2dc8:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2dcc:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2dd0:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2dd4:	add	x3, x3, #0x0
    2dd8:	add	x1, x1, #0x0
    2ddc:	add	x0, x0, #0x0
    2de0:	mov	w2, #0x43                  	// #67
    2de4:	bl	0 <__assert_fail>
    2de8:	cmp	w1, #0x10
    2dec:	b.ls	21d8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3a0>  // b.plast
    2df0:	sub	w0, w1, #0x1
    2df4:	orr	x0, x0, x0, lsr #1
    2df8:	orr	x0, x0, x0, lsr #2
    2dfc:	orr	x0, x0, x0, lsr #4
    2e00:	orr	x0, x0, x0, lsr #8
    2e04:	orr	x0, x0, x0, lsr #16
    2e08:	add	x0, x0, #0x1
    2e0c:	cmp	w0, #0x40
    2e10:	mov	w1, w0
    2e14:	b.ls	2e50 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1018>  // b.plast
    2e18:	ldr	x8, [x22, #16]
    2e1c:	ubfiz	x0, x0, #3, #32
    2e20:	str	x8, [sp, #104]
    2e24:	str	w1, [sp, #112]
    2e28:	str	x5, [sp, #120]
    2e2c:	str	x4, [sp, #136]
    2e30:	bl	0 <_Znwm>
    2e34:	ldr	w1, [sp, #112]
    2e38:	str	x0, [x22, #16]
    2e3c:	str	w1, [x22, #24]
    2e40:	ldr	x8, [sp, #104]
    2e44:	ldr	x5, [sp, #120]
    2e48:	ldr	x4, [sp, #136]
    2e4c:	b	21e8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3b0>
    2e50:	mov	x0, #0x200                 	// #512
    2e54:	mov	w1, #0x40                  	// #64
    2e58:	ldr	x8, [x22, #16]
    2e5c:	b	2e20 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xfe8>
    2e60:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2e64:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2e68:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2e6c:	add	x3, x3, #0x0
    2e70:	add	x1, x1, #0x0
    2e74:	add	x0, x0, #0x0
    2e78:	mov	w2, #0x18a                 	// #394
    2e7c:	bl	0 <__assert_fail>
    2e80:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2e84:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2e88:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2e8c:	add	x3, x3, #0x0
    2e90:	add	x1, x1, #0x0
    2e94:	add	x0, x0, #0x0
    2e98:	mov	w2, #0x189                 	// #393
    2e9c:	bl	0 <__assert_fail>
    2ea0:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2ea4:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2ea8:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2eac:	add	x3, x3, #0x0
    2eb0:	add	x1, x1, #0x0
    2eb4:	add	x0, x0, #0x0
    2eb8:	mov	w2, #0x47d                 	// #1149
    2ebc:	bl	0 <__assert_fail>
    2ec0:	mov	x0, #0x0                   	// #0
    2ec4:	str	x2, [x0]
    2ec8:	brk	#0x3e8
    2ecc:	nop

0000000000002ed0 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE>:
    2ed0:	sub	sp, sp, #0x2c0
    2ed4:	stp	x29, x30, [sp]
    2ed8:	mov	x29, sp
    2edc:	ldr	w0, [x2, #48]
    2ee0:	stp	x19, x20, [sp, #16]
    2ee4:	cmp	w0, #0x1
    2ee8:	stp	x21, x22, [sp, #32]
    2eec:	stp	x23, x24, [sp, #48]
    2ef0:	mov	x24, x4
    2ef4:	stp	x25, x26, [sp, #64]
    2ef8:	mov	x25, x5
    2efc:	str	x27, [sp, #80]
    2f00:	mov	x27, x2
    2f04:	b.ls	3544 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x674>  // b.plast
    2f08:	mov	x0, #0x1                   	// #1
    2f0c:	stp	xzr, x0, [sp, #128]
    2f10:	mov	x26, x1
    2f14:	mov	x21, x3
    2f18:	cbnz	x0, 32b8 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3e8>
    2f1c:	ldr	w0, [sp, #152]
    2f20:	sub	w1, w0, #0x1
    2f24:	tst	w1, w0
    2f28:	b.ne	33ec <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x51c>  // b.any
    2f2c:	ldr	x6, [sp, #144]
    2f30:	add	x20, sp, #0x80
    2f34:	add	x0, x6, w0, uxtw #3
    2f38:	cmp	x6, x0
    2f3c:	b.eq	2f54 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x84>  // b.none
    2f40:	mov	x1, #0xfffffffffffffff8    	// #-8
    2f44:	nop
    2f48:	str	x1, [x6], #8
    2f4c:	cmp	x6, x0
    2f50:	b.ne	2f48 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x78>  // b.any
    2f54:	add	x2, x20, #0xa0
    2f58:	mov	x1, #0x1000000000          	// #68719476736
    2f5c:	mov	x0, #0x1                   	// #1
    2f60:	stp	x2, x1, [sp, #272]
    2f64:	stp	xzr, x0, [sp, #416]
    2f68:	cbnz	x0, 32a8 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3d8>
    2f6c:	ldr	w0, [sp, #440]
    2f70:	sub	w1, w0, #0x1
    2f74:	tst	w1, w0
    2f78:	b.ne	33ec <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x51c>  // b.any
    2f7c:	ldr	x6, [sp, #432]
    2f80:	add	x22, sp, #0x1a0
    2f84:	add	x0, x6, w0, uxtw #3
    2f88:	cmp	x6, x0
    2f8c:	b.eq	2fa4 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xd4>  // b.none
    2f90:	mov	x1, #0xfffffffffffffff8    	// #-8
    2f94:	nop
    2f98:	str	x1, [x6], #8
    2f9c:	cmp	x6, x0
    2fa0:	b.ne	2f98 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xc8>  // b.any
    2fa4:	ldr	x1, [x27, #56]
    2fa8:	add	x6, x22, #0xa0
    2fac:	mov	x5, #0x1000000000          	// #68719476736
    2fb0:	mov	x0, x26
    2fb4:	mov	x3, x24
    2fb8:	mov	x4, x25
    2fbc:	mov	x2, x20
    2fc0:	str	x6, [sp, #560]
    2fc4:	str	x5, [sp, #568]
    2fc8:	bl	1030 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE>
    2fcc:	ldr	w23, [x27, #48]
    2fd0:	mov	x0, #0x38                  	// #56
    2fd4:	add	x19, x27, #0x40
    2fd8:	add	x23, x0, w23, uxtw #3
    2fdc:	add	x23, x27, x23
    2fe0:	cmp	x19, x23
    2fe4:	b.eq	3008 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x138>  // b.none
    2fe8:	ldr	x1, [x19], #8
    2fec:	mov	x3, x24
    2ff0:	mov	x4, x25
    2ff4:	mov	x2, x22
    2ff8:	mov	x0, x26
    2ffc:	bl	1030 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE>
    3000:	cmp	x19, x23
    3004:	b.ne	2fe8 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x118>  // b.any
    3008:	ldr	x19, [sp, #272]
    300c:	ldr	w23, [sp, #280]
    3010:	add	x23, x19, x23, lsl #3
    3014:	cmp	x23, x19
    3018:	b.eq	31d0 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x300>  // b.none
    301c:	add	x26, x21, #0xa0
    3020:	add	x25, x21, #0x90
    3024:	add	x24, x21, #0x10
    3028:	b	306c <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x19c>
    302c:	add	x3, x22, #0x10
    3030:	mov	w1, #0x10                  	// #16
    3034:	cmn	x2, #0x8
    3038:	ccmn	x2, #0x10, #0x4, ne  // ne = any
    303c:	b.eq	3464 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x594>  // b.none
    3040:	lsr	w0, w2, #9
    3044:	sub	w1, w1, #0x1
    3048:	eor	w0, w0, w2, lsr #4
    304c:	and	w4, w0, w1
    3050:	mov	x0, x4
    3054:	ldr	x4, [x3, x4, lsl #3]
    3058:	cmp	x2, x4
    305c:	b.ne	3228 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x358>  // b.any
    3060:	add	x19, x19, #0x8
    3064:	cmp	x19, x23
    3068:	b.eq	31d0 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x300>  // b.none
    306c:	ldrb	w0, [sp, #424]
    3070:	ldr	x2, [x19]
    3074:	tbnz	w0, #0, 302c <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x15c>
    3078:	ldr	w1, [sp, #440]
    307c:	ldr	x3, [sp, #432]
    3080:	cbnz	w1, 3034 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x164>
    3084:	ldrb	w0, [x21, #8]
    3088:	and	w7, w0, #0x1
    308c:	tbz	w0, #0, 310c <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x23c>
    3090:	mov	x3, x24
    3094:	mov	w1, #0x10                  	// #16
    3098:	cmn	x2, #0x8
    309c:	ccmn	x2, #0x10, #0x4, ne  // ne = any
    30a0:	b.eq	3484 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5b4>  // b.none
    30a4:	lsr	w0, w2, #9
    30a8:	sub	w1, w1, #0x1
    30ac:	eor	w0, w0, w2, lsr #4
    30b0:	and	w5, w0, w1
    30b4:	mov	x0, x5
    30b8:	ubfiz	x4, x5, #3, #28
    30bc:	ldr	x5, [x3, x5, lsl #3]
    30c0:	add	x4, x3, x4
    30c4:	cmp	x2, x5
    30c8:	b.eq	3060 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x190>  // b.none
    30cc:	mov	w8, #0x1                   	// #1
    30d0:	mov	x6, #0x0                   	// #0
    30d4:	cmn	x5, #0x8
    30d8:	b.ne	340c <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x53c>  // b.any
    30dc:	ldr	x1, [x21]
    30e0:	cmp	x6, #0x0
    30e4:	ldr	w0, [x21, #8]
    30e8:	csel	x6, x6, x4, ne  // ne = any
    30ec:	add	x1, x1, #0x1
    30f0:	str	x1, [x21]
    30f4:	lsr	w2, w0, #1
    30f8:	add	w3, w2, #0x1
    30fc:	cbz	w7, 34fc <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x62c>
    3100:	mov	w2, #0x30                  	// #48
    3104:	mov	w1, #0x10                  	// #16
    3108:	b	3138 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x268>
    310c:	ldr	w1, [x21, #24]
    3110:	ldr	x3, [x21, #16]
    3114:	cbnz	w1, 3098 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1c8>
    3118:	ldr	w0, [x21, #8]
    311c:	mov	x6, #0x0                   	// #0
    3120:	ldr	x4, [x21]
    3124:	lsr	w2, w0, #1
    3128:	add	w3, w2, #0x1
    312c:	add	x2, x4, #0x1
    3130:	str	x2, [x21]
    3134:	add	w2, w1, w1, lsl #1
    3138:	cmp	w2, w3, lsl #2
    313c:	b.ls	32c8 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3f8>  // b.plast
    3140:	ldr	w2, [x21, #12]
    3144:	sub	w2, w1, w2
    3148:	sub	w2, w2, w3
    314c:	cmp	w2, w1, lsr #3
    3150:	b.ls	336c <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x49c>  // b.plast
    3154:	cbz	x6, 3330 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x460>
    3158:	lsr	w1, w0, #1
    315c:	adds	w1, w1, #0x1
    3160:	b.mi	3524 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x654>  // b.first
    3164:	bfi	w0, w1, #1, #31
    3168:	str	w0, [x21, #8]
    316c:	ldr	x0, [x6]
    3170:	cmn	x0, #0x8
    3174:	b.eq	3184 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x2b4>  // b.none
    3178:	ldr	w0, [x21, #12]
    317c:	sub	w0, w0, #0x1
    3180:	str	w0, [x21, #12]
    3184:	ldr	x0, [x19]
    3188:	ldr	w1, [x21, #156]
    318c:	str	x0, [x6]
    3190:	ldr	w0, [x21, #152]
    3194:	cmp	w0, w1
    3198:	b.cs	3350 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x480>  // b.hs, b.nlast
    319c:	ldr	x1, [x21, #144]
    31a0:	ldr	x2, [x19]
    31a4:	str	x2, [x1, w0, uxtw #3]
    31a8:	ldp	w0, w2, [x21, #152]
    31ac:	mov	w1, w0
    31b0:	add	x1, x1, #0x1
    31b4:	cmp	x1, x2
    31b8:	b.hi	3504 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x634>  // b.pmore
    31bc:	add	w0, w0, #0x1
    31c0:	str	w0, [x21, #152]
    31c4:	add	x19, x19, #0x8
    31c8:	cmp	x19, x23
    31cc:	b.ne	306c <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x19c>  // b.any
    31d0:	ldr	x0, [sp, #560]
    31d4:	add	x22, x22, #0xa0
    31d8:	cmp	x0, x22
    31dc:	b.eq	31e4 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x314>  // b.none
    31e0:	bl	0 <free>
    31e4:	ldrb	w0, [sp, #424]
    31e8:	tbz	w0, #0, 328c <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3bc>
    31ec:	ldr	x0, [sp, #272]
    31f0:	add	x20, x20, #0xa0
    31f4:	cmp	x0, x20
    31f8:	b.eq	3200 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x330>  // b.none
    31fc:	bl	0 <free>
    3200:	ldrb	w0, [sp, #136]
    3204:	tbz	w0, #0, 3254 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x384>
    3208:	ldp	x29, x30, [sp]
    320c:	ldp	x19, x20, [sp, #16]
    3210:	ldp	x21, x22, [sp, #32]
    3214:	ldp	x23, x24, [sp, #48]
    3218:	ldp	x25, x26, [sp, #64]
    321c:	ldr	x27, [sp, #80]
    3220:	add	sp, sp, #0x2c0
    3224:	ret
    3228:	mov	w5, #0x1                   	// #1
    322c:	cmn	x4, #0x8
    3230:	b.eq	3084 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1b4>  // b.none
    3234:	add	w0, w0, w5
    3238:	add	w5, w5, #0x1
    323c:	and	w4, w1, w0
    3240:	and	w0, w1, w0
    3244:	ldr	x4, [x3, x4, lsl #3]
    3248:	cmp	x2, x4
    324c:	b.eq	3060 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x190>  // b.none
    3250:	b	322c <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x35c>
    3254:	ldr	x0, [sp, #144]
    3258:	ldr	w1, [sp, #152]
    325c:	lsl	x1, x1, #3
    3260:	bl	0 <_ZdlPvm>
    3264:	ldrb	w0, [sp, #136]
    3268:	tbz	w0, #0, 3208 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x338>
    326c:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3270:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3274:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3278:	add	x3, x3, #0x0
    327c:	add	x1, x1, #0x0
    3280:	add	x0, x0, #0x0
    3284:	mov	w2, #0x45b                 	// #1115
    3288:	bl	0 <__assert_fail>
    328c:	ldr	x0, [sp, #432]
    3290:	ldr	w1, [sp, #440]
    3294:	lsl	x1, x1, #3
    3298:	bl	0 <_ZdlPvm>
    329c:	ldrb	w0, [sp, #424]
    32a0:	tbz	w0, #0, 31ec <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x31c>
    32a4:	b	326c <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x39c>
    32a8:	add	x22, sp, #0x1a0
    32ac:	add	x0, x22, #0x90
    32b0:	add	x6, x22, #0x10
    32b4:	b	2f90 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xc0>
    32b8:	add	x20, sp, #0x80
    32bc:	add	x0, x20, #0x90
    32c0:	add	x6, x20, #0x10
    32c4:	b	2f40 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x70>
    32c8:	mov	x0, x21
    32cc:	lsl	w1, w1, #1
    32d0:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    32d4:	ldrb	w0, [x21, #8]
    32d8:	tbz	w0, #0, 3324 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x454>
    32dc:	mov	x3, x24
    32e0:	mov	w2, #0x10                  	// #16
    32e4:	ldr	x1, [x19]
    32e8:	cmn	x1, #0x10
    32ec:	ccmn	x1, #0x8, #0x4, ne  // ne = any
    32f0:	b.eq	3484 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5b4>  // b.none
    32f4:	lsr	w0, w1, #9
    32f8:	sub	w2, w2, #0x1
    32fc:	eor	w0, w0, w1, lsr #4
    3300:	and	w4, w0, w2
    3304:	mov	x0, x4
    3308:	ubfiz	x6, x4, #3, #28
    330c:	ldr	x4, [x3, x4, lsl #3]
    3310:	add	x6, x3, x6
    3314:	cmp	x4, x1
    3318:	b.ne	3444 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x574>  // b.any
    331c:	ldr	w0, [x21, #8]
    3320:	b	3158 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x288>
    3324:	ldr	w2, [x21, #24]
    3328:	ldr	x3, [x21, #16]
    332c:	cbnz	w2, 32e4 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x414>
    3330:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3334:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3338:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    333c:	add	x3, x3, #0x0
    3340:	add	x1, x1, #0x0
    3344:	add	x0, x0, #0x0
    3348:	mov	w2, #0x22f                 	// #559
    334c:	bl	0 <__assert_fail>
    3350:	mov	x0, x25
    3354:	mov	x1, x26
    3358:	mov	x3, #0x8                   	// #8
    335c:	mov	x2, #0x0                   	// #0
    3360:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3364:	ldr	w0, [x21, #152]
    3368:	b	319c <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x2cc>
    336c:	mov	x0, x21
    3370:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3374:	ldrb	w0, [x21, #8]
    3378:	tbz	w0, #0, 33dc <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x50c>
    337c:	mov	x3, x24
    3380:	mov	w2, #0x10                  	// #16
    3384:	ldr	x1, [x19]
    3388:	cmn	x1, #0x10
    338c:	ccmn	x1, #0x8, #0x4, ne  // ne = any
    3390:	b.eq	3484 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5b4>  // b.none
    3394:	lsr	w0, w1, #9
    3398:	sub	w2, w2, #0x1
    339c:	eor	w0, w0, w1, lsr #4
    33a0:	and	w4, w0, w2
    33a4:	mov	x0, x4
    33a8:	ubfiz	x6, x4, #3, #28
    33ac:	ldr	x4, [x3, x4, lsl #3]
    33b0:	add	x6, x3, x6
    33b4:	cmp	x4, x1
    33b8:	b.eq	331c <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x44c>  // b.none
    33bc:	mov	w7, #0x1                   	// #1
    33c0:	mov	x5, #0x0                   	// #0
    33c4:	cmn	x4, #0x8
    33c8:	b.ne	3494 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5c4>  // b.any
    33cc:	ldr	w0, [x21, #8]
    33d0:	cbz	x5, 3158 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x288>
    33d4:	mov	x6, x5
    33d8:	b	3158 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x288>
    33dc:	ldr	w2, [x21, #24]
    33e0:	ldr	x3, [x21, #16]
    33e4:	cbnz	w2, 3384 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x4b4>
    33e8:	b	3330 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x460>
    33ec:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    33f0:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    33f4:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    33f8:	add	x3, x3, #0x0
    33fc:	add	x1, x1, #0x0
    3400:	add	x0, x0, #0x0
    3404:	mov	w2, #0x15b                 	// #347
    3408:	bl	0 <__assert_fail>
    340c:	add	w0, w0, w8
    3410:	cmp	x6, #0x0
    3414:	and	w9, w1, w0
    3418:	ccmn	x5, #0x10, #0x0, eq  // eq = none
    341c:	csel	x4, x4, x6, eq  // eq = none
    3420:	add	w8, w8, #0x1
    3424:	and	w0, w1, w0
    3428:	add	x10, x3, x9, lsl #3
    342c:	ldr	x5, [x3, x9, lsl #3]
    3430:	cmp	x2, x5
    3434:	b.eq	3060 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x190>  // b.none
    3438:	mov	x6, x4
    343c:	mov	x4, x10
    3440:	b	30d4 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x204>
    3444:	mov	w7, #0x1                   	// #1
    3448:	mov	x5, #0x0                   	// #0
    344c:	cmn	x4, #0x8
    3450:	b.ne	34c8 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5f8>  // b.any
    3454:	cbz	x5, 331c <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x44c>
    3458:	ldr	w0, [x21, #8]
    345c:	mov	x6, x5
    3460:	b	3158 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x288>
    3464:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3468:	add	x3, x3, #0x0
    346c:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3470:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3474:	add	x1, x1, #0x0
    3478:	add	x0, x0, #0x0
    347c:	mov	w2, #0x250                 	// #592
    3480:	bl	0 <__assert_fail>
    3484:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3488:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    348c:	add	x3, x3, #0x0
    3490:	b	3470 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5a0>
    3494:	add	w0, w0, w7
    3498:	cmp	x5, #0x0
    349c:	and	w8, w2, w0
    34a0:	ccmn	x4, #0x10, #0x0, eq  // eq = none
    34a4:	csel	x5, x5, x6, ne  // ne = any
    34a8:	add	w7, w7, #0x1
    34ac:	and	w0, w2, w0
    34b0:	add	x6, x3, x8, lsl #3
    34b4:	ldr	x4, [x3, x8, lsl #3]
    34b8:	cmp	x1, x4
    34bc:	b.ne	33c4 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x4f4>  // b.any
    34c0:	ldr	w0, [x21, #8]
    34c4:	b	3158 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x288>
    34c8:	add	w0, w7, w0
    34cc:	cmp	x5, #0x0
    34d0:	and	w8, w2, w0
    34d4:	ccmn	x4, #0x10, #0x0, eq  // eq = none
    34d8:	csel	x5, x5, x6, ne  // ne = any
    34dc:	add	w7, w7, #0x1
    34e0:	and	w0, w2, w0
    34e4:	add	x6, x3, x8, lsl #3
    34e8:	ldr	x4, [x3, x8, lsl #3]
    34ec:	cmp	x1, x4
    34f0:	b.ne	344c <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x57c>  // b.any
    34f4:	ldr	w0, [x21, #8]
    34f8:	b	3158 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x288>
    34fc:	ldr	w1, [x21, #24]
    3500:	b	3134 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x264>
    3504:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3508:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    350c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3510:	add	x3, x3, #0x0
    3514:	add	x1, x1, #0x0
    3518:	add	x0, x0, #0x0
    351c:	mov	w2, #0x43                  	// #67
    3520:	bl	0 <__assert_fail>
    3524:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3528:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    352c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3530:	add	x3, x3, #0x0
    3534:	add	x1, x1, #0x0
    3538:	add	x0, x0, #0x0
    353c:	mov	w2, #0x441                 	// #1089
    3540:	bl	0 <__assert_fail>
    3544:	add	x21, sp, #0x80
    3548:	mov	x0, x2
    354c:	mov	x8, x21
    3550:	add	x20, sp, #0x1a0
    3554:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    3558:	add	x19, sp, #0x68
    355c:	mov	x8, x20
    3560:	mov	x1, x21
    3564:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3568:	add	x0, x0, #0x0
    356c:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3570:	mov	x1, x20
    3574:	mov	x0, x19
    3578:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    357c:	mov	x2, x19
    3580:	mov	x0, x24
    3584:	mov	x1, x25
    3588:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    358c:	nop

0000000000003590 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE>:
    3590:	sub	sp, sp, #0x2b0
    3594:	stp	x29, x30, [sp]
    3598:	mov	x29, sp
    359c:	stp	x19, x20, [sp, #16]
    35a0:	mov	x19, x2
    35a4:	ldr	w2, [x2, #48]
    35a8:	stp	x21, x22, [sp, #32]
    35ac:	cmp	w2, #0x2
    35b0:	stp	x23, x24, [sp, #48]
    35b4:	mov	x23, x4
    35b8:	mov	x24, x5
    35bc:	str	x25, [sp, #64]
    35c0:	b.ne	3bc0 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x630>  // b.any
    35c4:	mov	x2, #0x1                   	// #1
    35c8:	stp	xzr, x2, [sp, #112]
    35cc:	mov	x25, x1
    35d0:	mov	x20, x3
    35d4:	cbnz	x2, 396c <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3dc>
    35d8:	ldr	w7, [sp, #136]
    35dc:	sub	w0, w7, #0x1
    35e0:	tst	w0, w7
    35e4:	b.ne	3aa0 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x510>  // b.any
    35e8:	ldr	x6, [sp, #128]
    35ec:	add	x21, sp, #0x70
    35f0:	add	x7, x6, w7, uxtw #3
    35f4:	cmp	x6, x7
    35f8:	b.eq	360c <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x7c>  // b.none
    35fc:	mov	x8, #0xfffffffffffffff8    	// #-8
    3600:	str	x8, [x6], #8
    3604:	cmp	x6, x7
    3608:	b.ne	3600 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x70>  // b.any
    360c:	add	x4, x21, #0xa0
    3610:	mov	x3, #0x1000000000          	// #68719476736
    3614:	mov	x2, #0x1                   	// #1
    3618:	stp	x4, x3, [sp, #256]
    361c:	stp	xzr, x2, [sp, #400]
    3620:	cbnz	x2, 395c <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3cc>
    3624:	ldr	w7, [sp, #424]
    3628:	sub	w0, w7, #0x1
    362c:	tst	w0, w7
    3630:	b.ne	3aa0 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x510>  // b.any
    3634:	ldr	x6, [sp, #416]
    3638:	add	x22, sp, #0x190
    363c:	add	x7, x6, w7, uxtw #3
    3640:	cmp	x6, x7
    3644:	b.eq	365c <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xcc>  // b.none
    3648:	mov	x8, #0xfffffffffffffff8    	// #-8
    364c:	nop
    3650:	str	x8, [x6], #8
    3654:	cmp	x6, x7
    3658:	b.ne	3650 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xc0>  // b.any
    365c:	ldr	x1, [x19, #56]
    3660:	add	x6, x22, #0xa0
    3664:	mov	x5, #0x1000000000          	// #68719476736
    3668:	mov	x3, x23
    366c:	mov	x4, x24
    3670:	mov	x2, x21
    3674:	mov	x0, x25
    3678:	str	x6, [sp, #544]
    367c:	str	x5, [sp, #552]
    3680:	bl	1030 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE>
    3684:	ldr	x1, [x19, #64]
    3688:	mov	x3, x23
    368c:	mov	x4, x24
    3690:	mov	x2, x22
    3694:	mov	x0, x25
    3698:	bl	1030 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE>
    369c:	ldr	w23, [sp, #264]
    36a0:	ldr	x19, [sp, #256]
    36a4:	add	x23, x19, x23, lsl #3
    36a8:	cmp	x23, x19
    36ac:	b.eq	3758 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1c8>  // b.none
    36b0:	add	x25, x20, #0xa0
    36b4:	add	x24, x20, #0x90
    36b8:	b	3738 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1a8>
    36bc:	add	x3, x22, #0x10
    36c0:	mov	w1, #0x10                  	// #16
    36c4:	ldr	x2, [x19]
    36c8:	cmn	x2, #0x8
    36cc:	ccmn	x2, #0x10, #0x4, ne  // ne = any
    36d0:	b.eq	3ae0 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x550>  // b.none
    36d4:	lsr	w0, w2, #9
    36d8:	sub	w1, w1, #0x1
    36dc:	eor	w0, w0, w2, lsr #4
    36e0:	and	w4, w0, w1
    36e4:	mov	x5, x4
    36e8:	ldr	x4, [x3, x4, lsl #3]
    36ec:	cmp	x2, x4
    36f0:	b.ne	37c0 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x230>  // b.any
    36f4:	ldrb	w1, [x20, #8]
    36f8:	and	w5, w1, #0x1
    36fc:	tbz	w1, #0, 37ac <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x21c>
    3700:	add	x3, x20, #0x10
    3704:	mov	w1, #0xf                   	// #15
    3708:	and	w6, w1, w0
    370c:	mov	w8, #0x1                   	// #1
    3710:	mov	x0, x6
    3714:	mov	x7, #0x0                   	// #0
    3718:	ubfiz	x4, x6, #3, #28
    371c:	ldr	x6, [x3, x6, lsl #3]
    3720:	add	x4, x3, x4
    3724:	cmp	x2, x6
    3728:	b.ne	38d0 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x340>  // b.any
    372c:	add	x19, x19, #0x8
    3730:	cmp	x19, x23
    3734:	b.eq	3758 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1c8>  // b.none
    3738:	ldrb	w0, [sp, #408]
    373c:	tbnz	w0, #0, 36bc <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x12c>
    3740:	ldr	w1, [sp, #424]
    3744:	ldr	x3, [sp, #416]
    3748:	cbnz	w1, 36c4 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x134>
    374c:	add	x19, x19, #0x8
    3750:	cmp	x19, x23
    3754:	b.ne	3738 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1a8>  // b.any
    3758:	ldr	x0, [sp, #544]
    375c:	add	x22, x22, #0xa0
    3760:	cmp	x0, x22
    3764:	b.eq	376c <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1dc>  // b.none
    3768:	bl	0 <free>
    376c:	ldrb	w0, [sp, #408]
    3770:	tbz	w0, #0, 3940 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3b0>
    3774:	ldr	x0, [sp, #256]
    3778:	add	x21, x21, #0xa0
    377c:	cmp	x0, x21
    3780:	b.eq	3788 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1f8>  // b.none
    3784:	bl	0 <free>
    3788:	ldrb	w0, [sp, #120]
    378c:	tbz	w0, #0, 3908 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x378>
    3790:	ldp	x29, x30, [sp]
    3794:	ldp	x19, x20, [sp, #16]
    3798:	ldp	x21, x22, [sp, #32]
    379c:	ldp	x23, x24, [sp, #48]
    37a0:	ldr	x25, [sp, #64]
    37a4:	add	sp, sp, #0x2b0
    37a8:	ret
    37ac:	ldr	w1, [x20, #24]
    37b0:	ldr	x3, [x20, #16]
    37b4:	cbz	w1, 37ec <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x25c>
    37b8:	sub	w1, w1, #0x1
    37bc:	b	3708 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x178>
    37c0:	mov	w6, #0x1                   	// #1
    37c4:	cmn	x4, #0x8
    37c8:	b.eq	372c <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x19c>  // b.none
    37cc:	add	w5, w5, w6
    37d0:	add	w6, w6, #0x1
    37d4:	and	w4, w1, w5
    37d8:	and	w5, w1, w5
    37dc:	ldr	x4, [x3, x4, lsl #3]
    37e0:	cmp	x2, x4
    37e4:	b.eq	36f4 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x164>  // b.none
    37e8:	b	37c4 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x234>
    37ec:	ldr	w0, [x20, #8]
    37f0:	mov	x7, #0x0                   	// #0
    37f4:	ldr	x4, [x20]
    37f8:	lsr	w2, w0, #1
    37fc:	add	w3, w2, #0x1
    3800:	add	x2, x4, #0x1
    3804:	str	x2, [x20]
    3808:	add	w2, w1, w1, lsl #1
    380c:	cmp	w2, w3, lsl #2
    3810:	b.ls	3998 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x408>  // b.plast
    3814:	ldr	w2, [x20, #12]
    3818:	sub	w2, w1, w2
    381c:	sub	w2, w2, w3
    3820:	cmp	w2, w1, lsr #3
    3824:	b.ls	3a20 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x490>  // b.plast
    3828:	cbz	x7, 3a00 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x470>
    382c:	lsr	w1, w0, #1
    3830:	adds	w1, w1, #0x1
    3834:	b.mi	3ba0 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x610>  // b.first
    3838:	bfi	w0, w1, #1, #31
    383c:	str	w0, [x20, #8]
    3840:	ldr	x0, [x7]
    3844:	cmn	x0, #0x8
    3848:	b.eq	3858 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x2c8>  // b.none
    384c:	ldr	w0, [x20, #12]
    3850:	sub	w0, w0, #0x1
    3854:	str	w0, [x20, #12]
    3858:	ldr	x0, [x19]
    385c:	ldr	w1, [x20, #156]
    3860:	str	x0, [x7]
    3864:	ldr	w0, [x20, #152]
    3868:	cmp	w0, w1
    386c:	b.cs	397c <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3ec>  // b.hs, b.nlast
    3870:	ldr	x1, [x20, #144]
    3874:	ldr	x2, [x19]
    3878:	str	x2, [x1, w0, uxtw #3]
    387c:	ldp	w0, w2, [x20, #152]
    3880:	mov	w1, w0
    3884:	add	x1, x1, #0x1
    3888:	cmp	x1, x2
    388c:	b.hi	3b80 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5f0>  // b.pmore
    3890:	add	w0, w0, #0x1
    3894:	str	w0, [x20, #152]
    3898:	b	372c <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x19c>
    389c:	add	w0, w8, w0
    38a0:	cmp	x7, #0x0
    38a4:	and	w9, w1, w0
    38a8:	ccmn	x6, #0x10, #0x0, eq  // eq = none
    38ac:	csel	x4, x4, x7, eq  // eq = none
    38b0:	add	w8, w8, #0x1
    38b4:	and	w0, w1, w0
    38b8:	add	x10, x3, x9, lsl #3
    38bc:	ldr	x6, [x3, x9, lsl #3]
    38c0:	cmp	x2, x6
    38c4:	b.eq	372c <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x19c>  // b.none
    38c8:	mov	x7, x4
    38cc:	mov	x4, x10
    38d0:	cmn	x6, #0x8
    38d4:	b.ne	389c <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x30c>  // b.any
    38d8:	ldr	x1, [x20]
    38dc:	cmp	x7, #0x0
    38e0:	ldr	w0, [x20, #8]
    38e4:	csel	x7, x7, x4, ne  // ne = any
    38e8:	add	x1, x1, #0x1
    38ec:	str	x1, [x20]
    38f0:	lsr	w2, w0, #1
    38f4:	add	w3, w2, #0x1
    38f8:	cbz	w5, 3b78 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5e8>
    38fc:	mov	w2, #0x30                  	// #48
    3900:	mov	w1, #0x10                  	// #16
    3904:	b	380c <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x27c>
    3908:	ldr	x0, [sp, #128]
    390c:	ldr	w1, [sp, #136]
    3910:	lsl	x1, x1, #3
    3914:	bl	0 <_ZdlPvm>
    3918:	ldrb	w0, [sp, #120]
    391c:	tbz	w0, #0, 3790 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x200>
    3920:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3924:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3928:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    392c:	add	x3, x3, #0x0
    3930:	add	x1, x1, #0x0
    3934:	add	x0, x0, #0x0
    3938:	mov	w2, #0x45b                 	// #1115
    393c:	bl	0 <__assert_fail>
    3940:	ldr	x0, [sp, #416]
    3944:	ldr	w1, [sp, #424]
    3948:	lsl	x1, x1, #3
    394c:	bl	0 <_ZdlPvm>
    3950:	ldrb	w0, [sp, #408]
    3954:	tbz	w0, #0, 3774 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1e4>
    3958:	b	3920 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x390>
    395c:	add	x22, sp, #0x190
    3960:	add	x7, x22, #0x90
    3964:	add	x6, x22, #0x10
    3968:	b	3648 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xb8>
    396c:	add	x21, sp, #0x70
    3970:	add	x7, x21, #0x90
    3974:	add	x6, x21, #0x10
    3978:	b	35fc <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x6c>
    397c:	mov	x0, x24
    3980:	mov	x1, x25
    3984:	mov	x3, #0x8                   	// #8
    3988:	mov	x2, #0x0                   	// #0
    398c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3990:	ldr	w0, [x20, #152]
    3994:	b	3870 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x2e0>
    3998:	mov	x0, x20
    399c:	lsl	w1, w1, #1
    39a0:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    39a4:	ldrb	w0, [x20, #8]
    39a8:	tbz	w0, #0, 39f4 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x464>
    39ac:	add	x3, x20, #0x10
    39b0:	mov	w2, #0x10                  	// #16
    39b4:	ldr	x1, [x19]
    39b8:	cmn	x1, #0x10
    39bc:	ccmn	x1, #0x8, #0x4, ne  // ne = any
    39c0:	b.eq	3b68 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5d8>  // b.none
    39c4:	lsr	w0, w1, #9
    39c8:	sub	w2, w2, #0x1
    39cc:	eor	w0, w0, w1, lsr #4
    39d0:	and	w4, w0, w2
    39d4:	mov	x0, x4
    39d8:	ubfiz	x7, x4, #3, #28
    39dc:	ldr	x4, [x3, x4, lsl #3]
    39e0:	add	x7, x3, x7
    39e4:	cmp	x4, x1
    39e8:	b.ne	3ac0 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x530>  // b.any
    39ec:	ldr	w0, [x20, #8]
    39f0:	b	382c <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x29c>
    39f4:	ldr	w2, [x20, #24]
    39f8:	ldr	x3, [x20, #16]
    39fc:	cbnz	w2, 39b4 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x424>
    3a00:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3a04:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3a08:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3a0c:	add	x3, x3, #0x0
    3a10:	add	x1, x1, #0x0
    3a14:	add	x0, x0, #0x0
    3a18:	mov	w2, #0x22f                 	// #559
    3a1c:	bl	0 <__assert_fail>
    3a20:	mov	x0, x20
    3a24:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3a28:	ldrb	w0, [x20, #8]
    3a2c:	tbz	w0, #0, 3a90 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x500>
    3a30:	add	x3, x20, #0x10
    3a34:	mov	w2, #0x10                  	// #16
    3a38:	ldr	x1, [x19]
    3a3c:	cmn	x1, #0x10
    3a40:	ccmn	x1, #0x8, #0x4, ne  // ne = any
    3a44:	b.eq	3b68 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5d8>  // b.none
    3a48:	lsr	w0, w1, #9
    3a4c:	sub	w2, w2, #0x1
    3a50:	eor	w0, w0, w1, lsr #4
    3a54:	and	w4, w0, w2
    3a58:	mov	x0, x4
    3a5c:	ubfiz	x7, x4, #3, #28
    3a60:	ldr	x4, [x3, x4, lsl #3]
    3a64:	add	x7, x3, x7
    3a68:	cmp	x1, x4
    3a6c:	b.eq	39ec <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x45c>  // b.none
    3a70:	mov	w6, #0x1                   	// #1
    3a74:	mov	x5, #0x0                   	// #0
    3a78:	cmn	x4, #0x8
    3a7c:	b.ne	3b00 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x570>  // b.any
    3a80:	ldr	w0, [x20, #8]
    3a84:	cbz	x5, 382c <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x29c>
    3a88:	mov	x7, x5
    3a8c:	b	382c <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x29c>
    3a90:	ldr	w2, [x20, #24]
    3a94:	ldr	x3, [x20, #16]
    3a98:	cbnz	w2, 3a38 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x4a8>
    3a9c:	b	3a00 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x470>
    3aa0:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3aa4:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3aa8:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3aac:	add	x3, x3, #0x0
    3ab0:	add	x1, x1, #0x0
    3ab4:	add	x0, x0, #0x0
    3ab8:	mov	w2, #0x15b                 	// #347
    3abc:	bl	0 <__assert_fail>
    3ac0:	mov	w6, #0x1                   	// #1
    3ac4:	mov	x5, #0x0                   	// #0
    3ac8:	cmn	x4, #0x8
    3acc:	b.ne	3b34 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5a4>  // b.any
    3ad0:	cbz	x5, 39ec <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x45c>
    3ad4:	ldr	w0, [x20, #8]
    3ad8:	mov	x7, x5
    3adc:	b	382c <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x29c>
    3ae0:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3ae4:	add	x3, x3, #0x0
    3ae8:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3aec:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3af0:	add	x1, x1, #0x0
    3af4:	add	x0, x0, #0x0
    3af8:	mov	w2, #0x250                 	// #592
    3afc:	bl	0 <__assert_fail>
    3b00:	add	w0, w0, w6
    3b04:	cmp	x5, #0x0
    3b08:	and	w8, w2, w0
    3b0c:	ccmn	x4, #0x10, #0x0, eq  // eq = none
    3b10:	csel	x5, x5, x7, ne  // ne = any
    3b14:	add	w6, w6, #0x1
    3b18:	and	w0, w2, w0
    3b1c:	add	x7, x3, x8, lsl #3
    3b20:	ldr	x4, [x3, x8, lsl #3]
    3b24:	cmp	x1, x4
    3b28:	b.ne	3a78 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x4e8>  // b.any
    3b2c:	ldr	w0, [x20, #8]
    3b30:	b	382c <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x29c>
    3b34:	add	w0, w6, w0
    3b38:	cmp	x5, #0x0
    3b3c:	and	w8, w2, w0
    3b40:	ccmn	x4, #0x10, #0x0, eq  // eq = none
    3b44:	csel	x5, x5, x7, ne  // ne = any
    3b48:	add	w6, w6, #0x1
    3b4c:	and	w0, w2, w0
    3b50:	add	x7, x3, x8, lsl #3
    3b54:	ldr	x4, [x3, x8, lsl #3]
    3b58:	cmp	x1, x4
    3b5c:	b.ne	3ac8 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x538>  // b.any
    3b60:	ldr	w0, [x20, #8]
    3b64:	b	382c <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x29c>
    3b68:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3b6c:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3b70:	add	x3, x3, #0x0
    3b74:	b	3aec <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x55c>
    3b78:	ldr	w1, [x20, #24]
    3b7c:	b	3808 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x278>
    3b80:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3b84:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3b88:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3b8c:	add	x3, x3, #0x0
    3b90:	add	x1, x1, #0x0
    3b94:	add	x0, x0, #0x0
    3b98:	mov	w2, #0x43                  	// #67
    3b9c:	bl	0 <__assert_fail>
    3ba0:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3ba4:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3ba8:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3bac:	add	x3, x3, #0x0
    3bb0:	add	x1, x1, #0x0
    3bb4:	add	x0, x0, #0x0
    3bb8:	mov	w2, #0x441                 	// #1089
    3bbc:	bl	0 <__assert_fail>
    3bc0:	add	x21, sp, #0x70
    3bc4:	mov	x0, x19
    3bc8:	mov	x8, x21
    3bcc:	add	x20, sp, #0x190
    3bd0:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    3bd4:	add	x19, sp, #0x58
    3bd8:	mov	x8, x20
    3bdc:	mov	x1, x21
    3be0:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3be4:	add	x0, x0, #0x0
    3be8:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3bec:	mov	x1, x20
    3bf0:	mov	x0, x19
    3bf4:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3bf8:	mov	x2, x19
    3bfc:	mov	x0, x23
    3c00:	mov	x1, x24
    3c04:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>

0000000000003c08 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE>:
    3c08:	stp	x29, x30, [sp, #-176]!
    3c0c:	mov	x29, sp
    3c10:	tbnz	x4, #63, 3fdc <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x3d4>
    3c14:	stp	x23, x24, [sp, #48]
    3c18:	ldr	w23, [x3, #152]
    3c1c:	cmp	x23, w4, uxtw
    3c20:	b.hi	3c30 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x28>  // b.pmore
    3c24:	ldp	x23, x24, [sp, #48]
    3c28:	ldp	x29, x30, [sp], #176
    3c2c:	ret
    3c30:	ldr	x0, [x3, #144]
    3c34:	stp	x19, x20, [sp, #16]
    3c38:	add	x23, x0, x23, lsl #3
    3c3c:	add	x20, x0, x4, lsl #3
    3c40:	cmp	x20, x23
    3c44:	b.eq	3f4c <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x344>  // b.none
    3c48:	mov	x19, x5
    3c4c:	add	x24, x5, #0x10
    3c50:	stp	x21, x22, [sp, #32]
    3c54:	add	x22, x5, #0xa0
    3c58:	add	x21, x5, #0x90
    3c5c:	b	3cac <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xa4>
    3c60:	mov	x4, x24
    3c64:	mov	w1, #0x10                  	// #16
    3c68:	ldr	x2, [x20]
    3c6c:	cmn	x2, #0x10
    3c70:	ccmn	x2, #0x8, #0x4, ne  // ne = any
    3c74:	b.eq	3f54 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x34c>  // b.none
    3c78:	lsr	w0, w2, #9
    3c7c:	sub	w1, w1, #0x1
    3c80:	eor	w0, w0, w2, lsr #4
    3c84:	and	w6, w0, w1
    3c88:	mov	x0, x6
    3c8c:	ubfiz	x3, x6, #3, #28
    3c90:	ldr	x6, [x4, x6, lsl #3]
    3c94:	add	x5, x4, x3
    3c98:	cmp	x2, x6
    3c9c:	b.ne	3d90 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x188>  // b.any
    3ca0:	add	x20, x20, #0x8
    3ca4:	cmp	x23, x20
    3ca8:	b.eq	3d7c <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x174>  // b.none
    3cac:	ldrb	w0, [x19, #8]
    3cb0:	and	w7, w0, #0x1
    3cb4:	tbnz	w0, #0, 3c60 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x58>
    3cb8:	ldr	w1, [x19, #24]
    3cbc:	ldr	x4, [x19, #16]
    3cc0:	cbnz	w1, 3c68 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x60>
    3cc4:	ldr	w0, [x19, #8]
    3cc8:	mov	x3, #0x0                   	// #0
    3ccc:	ldr	x5, [x19]
    3cd0:	lsr	w2, w0, #1
    3cd4:	add	w4, w2, #0x1
    3cd8:	add	x2, x5, #0x1
    3cdc:	str	x2, [x19]
    3ce0:	add	w2, w1, w1, lsl #1
    3ce4:	cmp	w2, w4, lsl #2
    3ce8:	b.ls	3dd0 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x1c8>  // b.plast
    3cec:	ldr	w2, [x19, #12]
    3cf0:	sub	w2, w1, w2
    3cf4:	sub	w2, w2, w4
    3cf8:	cmp	w2, w1, lsr #3
    3cfc:	b.ls	3e74 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x26c>  // b.plast
    3d00:	cbz	x3, 3e38 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x230>
    3d04:	lsr	w1, w0, #1
    3d08:	adds	w1, w1, #0x1
    3d0c:	b.mi	4038 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x430>  // b.first
    3d10:	bfi	w0, w1, #1, #31
    3d14:	str	w0, [x19, #8]
    3d18:	ldr	x0, [x3]
    3d1c:	cmn	x0, #0x8
    3d20:	b.eq	3d30 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x128>  // b.none
    3d24:	ldr	w0, [x19, #12]
    3d28:	sub	w0, w0, #0x1
    3d2c:	str	w0, [x19, #12]
    3d30:	ldr	x0, [x20]
    3d34:	ldr	w1, [x19, #156]
    3d38:	str	x0, [x3]
    3d3c:	ldr	w0, [x19, #152]
    3d40:	cmp	w0, w1
    3d44:	b.cs	3e58 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x250>  // b.hs, b.nlast
    3d48:	ldr	x1, [x19, #144]
    3d4c:	ldr	x2, [x20]
    3d50:	str	x2, [x1, w0, uxtw #3]
    3d54:	ldp	w0, w2, [x19, #152]
    3d58:	mov	w1, w0
    3d5c:	add	x1, x1, #0x1
    3d60:	cmp	x1, x2
    3d64:	b.hi	4058 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x450>  // b.pmore
    3d68:	add	w0, w0, #0x1
    3d6c:	str	w0, [x19, #152]
    3d70:	add	x20, x20, #0x8
    3d74:	cmp	x23, x20
    3d78:	b.ne	3cac <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xa4>  // b.any
    3d7c:	ldp	x19, x20, [sp, #16]
    3d80:	ldp	x21, x22, [sp, #32]
    3d84:	ldp	x23, x24, [sp, #48]
    3d88:	ldp	x29, x30, [sp], #176
    3d8c:	ret
    3d90:	mov	w8, #0x1                   	// #1
    3d94:	mov	x3, #0x0                   	// #0
    3d98:	cmn	x6, #0x8
    3d9c:	b.ne	3ef4 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x2ec>  // b.any
    3da0:	ldr	x1, [x19]
    3da4:	cmp	x3, #0x0
    3da8:	ldr	w0, [x19, #8]
    3dac:	csel	x3, x3, x5, ne  // ne = any
    3db0:	add	x1, x1, #0x1
    3db4:	str	x1, [x19]
    3db8:	lsr	w2, w0, #1
    3dbc:	add	w4, w2, #0x1
    3dc0:	cbz	w7, 4078 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x470>
    3dc4:	mov	w2, #0x30                  	// #48
    3dc8:	mov	w1, #0x10                  	// #16
    3dcc:	b	3ce4 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xdc>
    3dd0:	mov	x0, x19
    3dd4:	lsl	w1, w1, #1
    3dd8:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3ddc:	ldrb	w0, [x19, #8]
    3de0:	tbz	w0, #0, 3e2c <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x224>
    3de4:	mov	x4, x24
    3de8:	mov	w2, #0x10                  	// #16
    3dec:	ldr	x1, [x20]
    3df0:	cmn	x1, #0x8
    3df4:	ccmn	x1, #0x10, #0x4, ne  // ne = any
    3df8:	b.eq	3f54 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x34c>  // b.none
    3dfc:	lsr	w0, w1, #9
    3e00:	sub	w2, w2, #0x1
    3e04:	eor	w0, w0, w1, lsr #4
    3e08:	and	w5, w0, w2
    3e0c:	mov	x0, x5
    3e10:	ubfiz	x3, x5, #3, #28
    3e14:	ldr	x5, [x4, x5, lsl #3]
    3e18:	add	x3, x4, x3
    3e1c:	cmp	x5, x1
    3e20:	b.ne	3f2c <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x324>  // b.any
    3e24:	ldr	w0, [x19, #8]
    3e28:	b	3d04 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xfc>
    3e2c:	ldr	w2, [x19, #24]
    3e30:	ldr	x4, [x19, #16]
    3e34:	cbnz	w2, 3dec <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x1e4>
    3e38:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3e3c:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3e40:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3e44:	add	x3, x3, #0x0
    3e48:	add	x1, x1, #0x0
    3e4c:	add	x0, x0, #0x0
    3e50:	mov	w2, #0x22f                 	// #559
    3e54:	bl	0 <__assert_fail>
    3e58:	mov	x0, x21
    3e5c:	mov	x1, x22
    3e60:	mov	x3, #0x8                   	// #8
    3e64:	mov	x2, #0x0                   	// #0
    3e68:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3e6c:	ldr	w0, [x19, #152]
    3e70:	b	3d48 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x140>
    3e74:	mov	x0, x19
    3e78:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3e7c:	ldrb	w0, [x19, #8]
    3e80:	tbz	w0, #0, 3ee4 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x2dc>
    3e84:	mov	x4, x24
    3e88:	mov	w2, #0x10                  	// #16
    3e8c:	ldr	x1, [x20]
    3e90:	cmn	x1, #0x8
    3e94:	ccmn	x1, #0x10, #0x4, ne  // ne = any
    3e98:	b.eq	3f54 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x34c>  // b.none
    3e9c:	lsr	w0, w1, #9
    3ea0:	sub	w2, w2, #0x1
    3ea4:	eor	w0, w0, w1, lsr #4
    3ea8:	and	w5, w0, w2
    3eac:	mov	x0, x5
    3eb0:	ubfiz	x3, x5, #3, #28
    3eb4:	ldr	x5, [x4, x5, lsl #3]
    3eb8:	add	x3, x4, x3
    3ebc:	cmp	x5, x1
    3ec0:	b.eq	3e24 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x21c>  // b.none
    3ec4:	mov	w7, #0x1                   	// #1
    3ec8:	mov	x6, #0x0                   	// #0
    3ecc:	cmn	x5, #0x8
    3ed0:	b.ne	3fa8 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x3a0>  // b.any
    3ed4:	ldr	w0, [x19, #8]
    3ed8:	cbz	x6, 3d04 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xfc>
    3edc:	mov	x3, x6
    3ee0:	b	3d04 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xfc>
    3ee4:	ldr	w2, [x19, #24]
    3ee8:	ldr	x4, [x19, #16]
    3eec:	cbnz	w2, 3e8c <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x284>
    3ef0:	b	3e38 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x230>
    3ef4:	add	w0, w8, w0
    3ef8:	cmp	x3, #0x0
    3efc:	and	w9, w1, w0
    3f00:	ccmn	x6, #0x10, #0x0, eq  // eq = none
    3f04:	csel	x5, x5, x3, eq  // eq = none
    3f08:	add	w8, w8, #0x1
    3f0c:	and	w0, w1, w0
    3f10:	add	x10, x4, x9, lsl #3
    3f14:	ldr	x6, [x4, x9, lsl #3]
    3f18:	cmp	x2, x6
    3f1c:	b.eq	3ca0 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x98>  // b.none
    3f20:	mov	x3, x5
    3f24:	mov	x5, x10
    3f28:	b	3d98 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x190>
    3f2c:	mov	w7, #0x1                   	// #1
    3f30:	mov	x6, #0x0                   	// #0
    3f34:	cmn	x5, #0x8
    3f38:	b.ne	3f74 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x36c>  // b.any
    3f3c:	cbz	x6, 3e24 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x21c>
    3f40:	ldr	w0, [x19, #8]
    3f44:	mov	x3, x6
    3f48:	b	3d04 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xfc>
    3f4c:	ldp	x19, x20, [sp, #16]
    3f50:	b	3c24 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x1c>
    3f54:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3f58:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3f5c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3f60:	add	x3, x3, #0x0
    3f64:	add	x1, x1, #0x0
    3f68:	add	x0, x0, #0x0
    3f6c:	mov	w2, #0x250                 	// #592
    3f70:	bl	0 <__assert_fail>
    3f74:	add	w0, w0, w7
    3f78:	cmp	x6, #0x0
    3f7c:	and	w8, w2, w0
    3f80:	ccmn	x5, #0x10, #0x0, eq  // eq = none
    3f84:	csel	x6, x6, x3, ne  // ne = any
    3f88:	add	w7, w7, #0x1
    3f8c:	and	w0, w2, w0
    3f90:	add	x3, x4, x8, lsl #3
    3f94:	ldr	x5, [x4, x8, lsl #3]
    3f98:	cmp	x1, x5
    3f9c:	b.ne	3f34 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x32c>  // b.any
    3fa0:	ldr	w0, [x19, #8]
    3fa4:	b	3d04 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xfc>
    3fa8:	add	w0, w7, w0
    3fac:	cmp	x6, #0x0
    3fb0:	and	w8, w2, w0
    3fb4:	ccmn	x5, #0x10, #0x0, eq  // eq = none
    3fb8:	csel	x6, x6, x3, ne  // ne = any
    3fbc:	add	w7, w7, #0x1
    3fc0:	and	w0, w2, w0
    3fc4:	add	x3, x4, x8, lsl #3
    3fc8:	ldr	x5, [x4, x8, lsl #3]
    3fcc:	cmp	x1, x5
    3fd0:	b.ne	3ecc <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x2c4>  // b.any
    3fd4:	ldr	w0, [x19, #8]
    3fd8:	b	3d04 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xfc>
    3fdc:	stp	x21, x22, [sp, #32]
    3fe0:	add	x21, sp, #0x70
    3fe4:	mov	x0, x2
    3fe8:	mov	x8, x21
    3fec:	stp	x19, x20, [sp, #16]
    3ff0:	add	x20, sp, #0x90
    3ff4:	stp	x23, x24, [sp, #48]
    3ff8:	add	x19, sp, #0x58
    3ffc:	stp	x6, x7, [sp, #64]
    4000:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    4004:	mov	x8, x20
    4008:	mov	x1, x21
    400c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4010:	add	x0, x0, #0x0
    4014:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4018:	mov	x1, x20
    401c:	mov	x0, x19
    4020:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4024:	ldp	x6, x7, [sp, #64]
    4028:	mov	x2, x19
    402c:	mov	x0, x6
    4030:	mov	x1, x7
    4034:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    4038:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    403c:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4040:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4044:	add	x3, x3, #0x0
    4048:	add	x1, x1, #0x0
    404c:	add	x0, x0, #0x0
    4050:	mov	w2, #0x441                 	// #1089
    4054:	bl	0 <__assert_fail>
    4058:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    405c:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4060:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4064:	add	x3, x3, #0x0
    4068:	add	x1, x1, #0x0
    406c:	add	x0, x0, #0x0
    4070:	mov	w2, #0x43                  	// #67
    4074:	bl	0 <__assert_fail>
    4078:	ldr	w1, [x19, #24]
    407c:	b	3ce0 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xd8>

0000000000004080 <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE>:
    4080:	stp	x29, x30, [sp, #-464]!
    4084:	mov	x29, sp
    4088:	stp	x19, x20, [sp, #16]
    408c:	mov	x19, x2
    4090:	ldr	w2, [x2, #48]
    4094:	stp	x21, x22, [sp, #32]
    4098:	mov	x20, x5
    409c:	mov	x21, x4
    40a0:	stp	x23, x24, [sp, #48]
    40a4:	cmp	w2, #0x2
    40a8:	stp	x25, x26, [sp, #64]
    40ac:	b.ne	4240 <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1c0>  // b.any
    40b0:	mov	x2, #0x1                   	// #1
    40b4:	stp	xzr, x2, [sp, #176]
    40b8:	mov	x25, x0
    40bc:	mov	x23, x1
    40c0:	mov	x24, x3
    40c4:	cbnz	x2, 4210 <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x190>
    40c8:	ldr	w9, [sp, #200]
    40cc:	sub	w0, w9, #0x1
    40d0:	tst	w0, w9
    40d4:	b.ne	4220 <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1a0>  // b.any
    40d8:	ldr	x8, [sp, #192]
    40dc:	add	x22, sp, #0xb0
    40e0:	add	x9, x8, w9, uxtw #3
    40e4:	cmp	x8, x9
    40e8:	b.eq	40fc <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x7c>  // b.none
    40ec:	mov	x0, #0xfffffffffffffff8    	// #-8
    40f0:	str	x0, [x8], #8
    40f4:	cmp	x8, x9
    40f8:	b.ne	40f0 <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x70>  // b.any
    40fc:	ldr	x1, [x19, #56]
    4100:	mov	x5, #0x1000000000          	// #68719476736
    4104:	mov	x2, x22
    4108:	add	x26, x22, #0xa0
    410c:	mov	x3, x21
    4110:	mov	x4, x20
    4114:	mov	x0, x23
    4118:	stp	x26, x5, [sp, #320]
    411c:	bl	1030 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE>
    4120:	ldr	x2, [x19, #64]
    4124:	cbz	x2, 426c <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1ec>
    4128:	ldrb	w0, [x2, #8]
    412c:	cmp	w0, #0x8
    4130:	b.eq	417c <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xfc>  // b.none
    4134:	add	x23, sp, #0x70
    4138:	mov	x0, x19
    413c:	mov	x8, x23
    4140:	add	x22, sp, #0x90
    4144:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    4148:	add	x19, sp, #0x58
    414c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4150:	mov	x8, x22
    4154:	mov	x1, x23
    4158:	add	x0, x0, #0x0
    415c:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4160:	mov	x1, x22
    4164:	mov	x0, x19
    4168:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    416c:	mov	x2, x19
    4170:	mov	x0, x21
    4174:	mov	x1, x20
    4178:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    417c:	ldr	x0, [x25]
    4180:	mov	x6, x21
    4184:	ldr	x4, [x2, #24]
    4188:	mov	x7, x20
    418c:	ldr	x8, [x0, #32]
    4190:	mov	x5, x24
    4194:	mov	x0, x25
    4198:	mov	x3, x22
    419c:	mov	x1, x23
    41a0:	mov	x2, x19
    41a4:	blr	x8
    41a8:	ldr	x0, [sp, #320]
    41ac:	cmp	x0, x26
    41b0:	b.eq	41b8 <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x138>  // b.none
    41b4:	bl	0 <free>
    41b8:	ldrb	w0, [sp, #184]
    41bc:	tbz	w0, #0, 41d8 <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x158>
    41c0:	ldp	x19, x20, [sp, #16]
    41c4:	ldp	x21, x22, [sp, #32]
    41c8:	ldp	x23, x24, [sp, #48]
    41cc:	ldp	x25, x26, [sp, #64]
    41d0:	ldp	x29, x30, [sp], #464
    41d4:	ret
    41d8:	ldr	x0, [sp, #192]
    41dc:	ldr	w1, [sp, #200]
    41e0:	lsl	x1, x1, #3
    41e4:	bl	0 <_ZdlPvm>
    41e8:	ldrb	w0, [sp, #184]
    41ec:	tbz	w0, #0, 41c0 <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x140>
    41f0:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    41f4:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    41f8:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    41fc:	add	x3, x3, #0x0
    4200:	add	x1, x1, #0x0
    4204:	add	x0, x0, #0x0
    4208:	mov	w2, #0x45b                 	// #1115
    420c:	bl	0 <__assert_fail>
    4210:	add	x22, sp, #0xb0
    4214:	add	x9, x22, #0x90
    4218:	add	x8, x22, #0x10
    421c:	b	40ec <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x6c>
    4220:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4224:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4228:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    422c:	add	x3, x3, #0x0
    4230:	add	x1, x1, #0x0
    4234:	add	x0, x0, #0x0
    4238:	mov	w2, #0x15b                 	// #347
    423c:	bl	0 <__assert_fail>
    4240:	add	x23, sp, #0x90
    4244:	mov	x0, x19
    4248:	mov	x8, x23
    424c:	add	x22, sp, #0xb0
    4250:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    4254:	add	x19, sp, #0x70
    4258:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    425c:	mov	x8, x22
    4260:	mov	x1, x23
    4264:	add	x0, x0, #0x0
    4268:	b	415c <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xdc>
    426c:	bl	f8 <_ZN4llvm3isaINS_7IntInitEPNS_4InitEEEbRKT0_.isra.0.part.0>

0000000000004270 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE>:
    4270:	stp	x29, x30, [sp, #-176]!
    4274:	mov	x29, sp
    4278:	stp	x19, x20, [sp, #16]
    427c:	stp	x21, x22, [sp, #32]
    4280:	stp	x23, x24, [sp, #48]
    4284:	tbnz	x4, #63, 4674 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x404>
    4288:	ldr	w23, [x3, #152]
    428c:	mov	x19, x5
    4290:	ldr	x20, [x3, #144]
    4294:	add	x22, x5, #0xa0
    4298:	cmp	x23, w4, uxtw
    429c:	add	x21, x5, #0x90
    42a0:	csel	x23, x23, x4, cc  // cc = lo, ul, last
    42a4:	add	x24, x5, #0x10
    42a8:	add	x23, x20, x23, lsl #3
    42ac:	cmp	x23, x20
    42b0:	b.ne	4304 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x94>  // b.any
    42b4:	b	43d4 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x164>
    42b8:	mov	x4, x24
    42bc:	mov	w1, #0x10                  	// #16
    42c0:	ldr	x3, [x20]
    42c4:	cmn	x3, #0x10
    42c8:	ccmn	x3, #0x8, #0x4, ne  // ne = any
    42cc:	b.eq	45ac <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x33c>  // b.none
    42d0:	lsr	w0, w3, #9
    42d4:	sub	w1, w1, #0x1
    42d8:	eor	w0, w0, w3, lsr #4
    42dc:	and	w6, w0, w1
    42e0:	mov	x0, x6
    42e4:	ubfiz	x2, x6, #3, #28
    42e8:	ldr	x6, [x4, x6, lsl #3]
    42ec:	add	x5, x4, x2
    42f0:	cmp	x3, x6
    42f4:	b.ne	43e8 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x178>  // b.any
    42f8:	add	x20, x20, #0x8
    42fc:	cmp	x23, x20
    4300:	b.eq	43d4 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x164>  // b.none
    4304:	ldrb	w0, [x19, #8]
    4308:	and	w7, w0, #0x1
    430c:	tbnz	w0, #0, 42b8 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x48>
    4310:	ldr	w1, [x19, #24]
    4314:	ldr	x4, [x19, #16]
    4318:	cbnz	w1, 42c0 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x50>
    431c:	ldr	w0, [x19, #8]
    4320:	mov	x2, #0x0                   	// #0
    4324:	ldr	x4, [x19]
    4328:	lsr	w3, w0, #1
    432c:	add	w3, w3, #0x1
    4330:	add	x4, x4, #0x1
    4334:	str	x4, [x19]
    4338:	add	w4, w1, w1, lsl #1
    433c:	cmp	w4, w3, lsl #2
    4340:	b.ls	442c <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x1bc>  // b.plast
    4344:	ldr	w4, [x19, #12]
    4348:	sub	w4, w1, w4
    434c:	sub	w3, w4, w3
    4350:	cmp	w3, w1, lsr #3
    4354:	b.ls	44a8 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x238>  // b.plast
    4358:	cbz	x2, 4534 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x2c4>
    435c:	lsr	w1, w0, #1
    4360:	adds	w1, w1, #0x1
    4364:	b.mi	4634 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x3c4>  // b.first
    4368:	bfi	w0, w1, #1, #31
    436c:	str	w0, [x19, #8]
    4370:	ldr	x0, [x2]
    4374:	cmn	x0, #0x8
    4378:	b.eq	4388 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x118>  // b.none
    437c:	ldr	w0, [x19, #12]
    4380:	sub	w0, w0, #0x1
    4384:	str	w0, [x19, #12]
    4388:	ldr	x0, [x20]
    438c:	ldr	w1, [x19, #156]
    4390:	str	x0, [x2]
    4394:	ldr	w0, [x19, #152]
    4398:	cmp	w0, w1
    439c:	b.cs	448c <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x21c>  // b.hs, b.nlast
    43a0:	ldr	x1, [x19, #144]
    43a4:	ldr	x2, [x20]
    43a8:	str	x2, [x1, w0, uxtw #3]
    43ac:	ldp	w0, w2, [x19, #152]
    43b0:	mov	w1, w0
    43b4:	add	x1, x1, #0x1
    43b8:	cmp	x1, x2
    43bc:	b.hi	4654 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x3e4>  // b.pmore
    43c0:	add	w0, w0, #0x1
    43c4:	str	w0, [x19, #152]
    43c8:	add	x20, x20, #0x8
    43cc:	cmp	x23, x20
    43d0:	b.ne	4304 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x94>  // b.any
    43d4:	ldp	x19, x20, [sp, #16]
    43d8:	ldp	x21, x22, [sp, #32]
    43dc:	ldp	x23, x24, [sp, #48]
    43e0:	ldp	x29, x30, [sp], #176
    43e4:	ret
    43e8:	mov	w8, #0x1                   	// #1
    43ec:	mov	x2, #0x0                   	// #0
    43f0:	cmn	x6, #0x8
    43f4:	b.ne	4554 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x2e4>  // b.any
    43f8:	ldr	x1, [x19]
    43fc:	cmp	x2, #0x0
    4400:	ldr	w0, [x19, #8]
    4404:	csel	x2, x2, x5, ne  // ne = any
    4408:	add	x1, x1, #0x1
    440c:	str	x1, [x19]
    4410:	lsr	w3, w0, #1
    4414:	add	w3, w3, #0x1
    4418:	cbz	w7, 46c4 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x454>
    441c:	mov	w4, #0x30                  	// #48
    4420:	mov	w1, #0x10                  	// #16
    4424:	cmp	w4, w3, lsl #2
    4428:	b.hi	4344 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xd4>  // b.pmore
    442c:	mov	x0, x19
    4430:	lsl	w1, w1, #1
    4434:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4438:	ldrb	w0, [x19, #8]
    443c:	tbnz	w0, #0, 451c <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x2ac>
    4440:	ldr	w2, [x19, #24]
    4444:	ldr	x4, [x19, #16]
    4448:	cbz	w2, 4534 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x2c4>
    444c:	ldr	x1, [x20]
    4450:	cmn	x1, #0x8
    4454:	ccmn	x1, #0x10, #0x4, ne  // ne = any
    4458:	b.eq	45ac <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x33c>  // b.none
    445c:	lsr	w0, w1, #9
    4460:	sub	w3, w2, #0x1
    4464:	eor	w0, w0, w1, lsr #4
    4468:	and	w5, w0, w3
    446c:	mov	x0, x5
    4470:	ubfiz	x2, x5, #3, #28
    4474:	ldr	x5, [x4, x5, lsl #3]
    4478:	add	x2, x4, x2
    447c:	cmp	x5, x1
    4480:	b.ne	458c <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x31c>  // b.any
    4484:	ldr	w0, [x19, #8]
    4488:	b	435c <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xec>
    448c:	mov	x0, x21
    4490:	mov	x1, x22
    4494:	mov	x3, #0x8                   	// #8
    4498:	mov	x2, #0x0                   	// #0
    449c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    44a0:	ldr	w0, [x19, #152]
    44a4:	b	43a0 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x130>
    44a8:	mov	x0, x19
    44ac:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    44b0:	ldrb	w0, [x19, #8]
    44b4:	tbnz	w0, #0, 4528 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x2b8>
    44b8:	ldr	w2, [x19, #24]
    44bc:	ldr	x4, [x19, #16]
    44c0:	cbz	w2, 4534 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x2c4>
    44c4:	ldr	x1, [x20]
    44c8:	cmn	x1, #0x8
    44cc:	ccmn	x1, #0x10, #0x4, ne  // ne = any
    44d0:	b.eq	45ac <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x33c>  // b.none
    44d4:	lsr	w0, w1, #9
    44d8:	sub	w3, w2, #0x1
    44dc:	eor	w0, w0, w1, lsr #4
    44e0:	and	w5, w0, w3
    44e4:	mov	x0, x5
    44e8:	ubfiz	x2, x5, #3, #28
    44ec:	ldr	x5, [x4, x5, lsl #3]
    44f0:	add	x2, x4, x2
    44f4:	cmp	x5, x1
    44f8:	b.eq	4484 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x214>  // b.none
    44fc:	mov	w7, #0x1                   	// #1
    4500:	mov	x6, #0x0                   	// #0
    4504:	cmn	x5, #0x8
    4508:	b.ne	4600 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x390>  // b.any
    450c:	ldr	w0, [x19, #8]
    4510:	cbz	x6, 435c <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xec>
    4514:	mov	x2, x6
    4518:	b	435c <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xec>
    451c:	mov	x4, x24
    4520:	mov	w2, #0x10                  	// #16
    4524:	b	444c <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x1dc>
    4528:	mov	x4, x24
    452c:	mov	w2, #0x10                  	// #16
    4530:	b	44c4 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x254>
    4534:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4538:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    453c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4540:	add	x3, x3, #0x0
    4544:	add	x1, x1, #0x0
    4548:	add	x0, x0, #0x0
    454c:	mov	w2, #0x22f                 	// #559
    4550:	bl	0 <__assert_fail>
    4554:	add	w0, w8, w0
    4558:	cmp	x2, #0x0
    455c:	and	w9, w1, w0
    4560:	ccmn	x6, #0x10, #0x0, eq  // eq = none
    4564:	csel	x5, x5, x2, eq  // eq = none
    4568:	add	w8, w8, #0x1
    456c:	and	w0, w1, w0
    4570:	add	x10, x4, x9, lsl #3
    4574:	ldr	x6, [x4, x9, lsl #3]
    4578:	cmp	x3, x6
    457c:	b.eq	42f8 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x88>  // b.none
    4580:	mov	x2, x5
    4584:	mov	x5, x10
    4588:	b	43f0 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x180>
    458c:	mov	w7, #0x1                   	// #1
    4590:	mov	x6, #0x0                   	// #0
    4594:	cmn	x5, #0x8
    4598:	b.ne	45cc <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x35c>  // b.any
    459c:	cbz	x6, 4484 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x214>
    45a0:	ldr	w0, [x19, #8]
    45a4:	mov	x2, x6
    45a8:	b	435c <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xec>
    45ac:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    45b0:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    45b4:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    45b8:	add	x3, x3, #0x0
    45bc:	add	x1, x1, #0x0
    45c0:	add	x0, x0, #0x0
    45c4:	mov	w2, #0x250                 	// #592
    45c8:	bl	0 <__assert_fail>
    45cc:	add	w0, w0, w7
    45d0:	cmp	x6, #0x0
    45d4:	and	w8, w3, w0
    45d8:	ccmn	x5, #0x10, #0x0, eq  // eq = none
    45dc:	csel	x6, x6, x2, ne  // ne = any
    45e0:	add	w7, w7, #0x1
    45e4:	and	w0, w3, w0
    45e8:	add	x2, x4, x8, lsl #3
    45ec:	ldr	x5, [x4, x8, lsl #3]
    45f0:	cmp	x1, x5
    45f4:	b.ne	4594 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x324>  // b.any
    45f8:	ldr	w0, [x19, #8]
    45fc:	b	435c <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xec>
    4600:	add	w0, w7, w0
    4604:	cmp	x6, #0x0
    4608:	and	w8, w3, w0
    460c:	ccmn	x5, #0x10, #0x0, eq  // eq = none
    4610:	csel	x6, x6, x2, ne  // ne = any
    4614:	add	w7, w7, #0x1
    4618:	and	w0, w3, w0
    461c:	add	x2, x4, x8, lsl #3
    4620:	ldr	x5, [x4, x8, lsl #3]
    4624:	cmp	x1, x5
    4628:	b.ne	4504 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x294>  // b.any
    462c:	ldr	w0, [x19, #8]
    4630:	b	435c <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xec>
    4634:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4638:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    463c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4640:	add	x3, x3, #0x0
    4644:	add	x1, x1, #0x0
    4648:	add	x0, x0, #0x0
    464c:	mov	w2, #0x441                 	// #1089
    4650:	bl	0 <__assert_fail>
    4654:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4658:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    465c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4660:	add	x3, x3, #0x0
    4664:	add	x1, x1, #0x0
    4668:	add	x0, x0, #0x0
    466c:	mov	w2, #0x43                  	// #67
    4670:	bl	0 <__assert_fail>
    4674:	add	x21, sp, #0x70
    4678:	mov	x0, x2
    467c:	mov	x8, x21
    4680:	add	x20, sp, #0x90
    4684:	stp	x6, x7, [sp, #64]
    4688:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    468c:	mov	x8, x20
    4690:	add	x19, sp, #0x58
    4694:	mov	x1, x21
    4698:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    469c:	add	x0, x0, #0x0
    46a0:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    46a4:	mov	x1, x20
    46a8:	mov	x0, x19
    46ac:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    46b0:	ldp	x6, x7, [sp, #64]
    46b4:	mov	x2, x19
    46b8:	mov	x0, x6
    46bc:	mov	x1, x7
    46c0:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    46c4:	ldr	w1, [x19, #24]
    46c8:	b	4338 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xc8>
    46cc:	nop

00000000000046d0 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE>:
    46d0:	stp	x29, x30, [sp, #-208]!
    46d4:	cmp	x4, #0x0
    46d8:	mov	x29, sp
    46dc:	stp	x19, x20, [sp, #16]
    46e0:	stp	x21, x22, [sp, #32]
    46e4:	stp	x23, x24, [sp, #48]
    46e8:	stp	x25, x26, [sp, #64]
    46ec:	str	x27, [sp, #80]
    46f0:	stp	x2, x3, [sp, #96]
    46f4:	b.le	4b28 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x458>
    46f8:	mov	x19, x5
    46fc:	add	x22, x5, #0x90
    4700:	add	x21, x5, #0xa0
    4704:	add	x27, x5, #0x10
    4708:	ldr	w5, [x3, #152]
    470c:	mov	x25, x4
    4710:	mov	x26, x3
    4714:	mov	w23, #0x0                   	// #0
    4718:	mov	x0, #0x0                   	// #0
    471c:	cbnz	w5, 4780 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xb0>
    4720:	b	4864 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x194>
    4724:	mov	x3, x27
    4728:	mov	w1, #0x10                  	// #16
    472c:	ldr	x2, [x24, x20]
    4730:	cmn	x2, #0x10
    4734:	ccmn	x2, #0x8, #0x4, ne  // ne = any
    4738:	b.eq	4a40 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x370>  // b.none
    473c:	lsr	w0, w2, #9
    4740:	sub	w1, w1, #0x1
    4744:	eor	w0, w0, w2, lsr #4
    4748:	and	w4, w0, w1
    474c:	mov	x0, x4
    4750:	ubfiz	x6, x4, #3, #28
    4754:	ldr	x4, [x3, x4, lsl #3]
    4758:	add	x6, x3, x6
    475c:	cmp	x4, x2
    4760:	b.ne	4880 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x1b0>  // b.any
    4764:	add	w0, w23, w25
    4768:	mov	w1, w5
    476c:	mov	x23, x0
    4770:	cmp	w5, w0
    4774:	b.ls	4864 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x194>  // b.plast
    4778:	cmp	x0, x1
    477c:	b.cs	4a60 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x390>  // b.hs, b.nlast
    4780:	ldrb	w1, [x19, #8]
    4784:	lsl	x20, x0, #3
    4788:	ldr	x24, [x26, #144]
    478c:	and	w8, w1, #0x1
    4790:	tbnz	w1, #0, 4724 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x54>
    4794:	ldr	w1, [x19, #24]
    4798:	ldr	x3, [x19, #16]
    479c:	cbnz	w1, 472c <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x5c>
    47a0:	ldr	w0, [x19, #8]
    47a4:	mov	x7, #0x0                   	// #0
    47a8:	ldr	x4, [x19]
    47ac:	lsr	w2, w0, #1
    47b0:	add	w3, w2, #0x1
    47b4:	add	x2, x4, #0x1
    47b8:	str	x2, [x19]
    47bc:	add	w2, w1, w1, lsl #1
    47c0:	cmp	w2, w3, lsl #2
    47c4:	b.ls	48c4 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x1f4>  // b.plast
    47c8:	ldr	w2, [x19, #12]
    47cc:	sub	w2, w1, w2
    47d0:	sub	w2, w2, w3
    47d4:	cmp	w2, w1, lsr #3
    47d8:	b.ls	494c <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x27c>  // b.plast
    47dc:	cbz	x7, 49c8 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x2f8>
    47e0:	lsr	w1, w0, #1
    47e4:	adds	w1, w1, #0x1
    47e8:	b.mi	4ae8 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x418>  // b.first
    47ec:	bfi	w0, w1, #1, #31
    47f0:	str	w0, [x19, #8]
    47f4:	ldr	x0, [x7]
    47f8:	cmn	x0, #0x8
    47fc:	b.eq	480c <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x13c>  // b.none
    4800:	ldr	w0, [x19, #12]
    4804:	sub	w0, w0, #0x1
    4808:	str	w0, [x19, #12]
    480c:	ldr	x0, [x24, x20]
    4810:	ldr	w1, [x19, #156]
    4814:	str	x0, [x7]
    4818:	ldr	w0, [x19, #152]
    481c:	cmp	w0, w1
    4820:	b.cs	4924 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x254>  // b.hs, b.nlast
    4824:	ldr	x1, [x19, #144]
    4828:	ldr	x2, [x24, x20]
    482c:	str	x2, [x1, w0, uxtw #3]
    4830:	ldp	w0, w2, [x19, #152]
    4834:	mov	w1, w0
    4838:	add	x1, x1, #0x1
    483c:	cmp	x1, x2
    4840:	b.hi	4b08 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x438>  // b.pmore
    4844:	add	w0, w0, #0x1
    4848:	str	w0, [x19, #152]
    484c:	add	w0, w23, w25
    4850:	ldr	w5, [x26, #152]
    4854:	mov	x23, x0
    4858:	mov	w1, w5
    485c:	cmp	w5, w0
    4860:	b.hi	4778 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xa8>  // b.pmore
    4864:	ldp	x19, x20, [sp, #16]
    4868:	ldp	x21, x22, [sp, #32]
    486c:	ldp	x23, x24, [sp, #48]
    4870:	ldp	x25, x26, [sp, #64]
    4874:	ldr	x27, [sp, #80]
    4878:	ldp	x29, x30, [sp], #208
    487c:	ret
    4880:	mov	w9, #0x1                   	// #1
    4884:	mov	x7, #0x0                   	// #0
    4888:	cmn	x4, #0x8
    488c:	b.ne	49e8 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x318>  // b.any
    4890:	ldr	x1, [x19]
    4894:	cmp	x7, #0x0
    4898:	ldr	w0, [x19, #8]
    489c:	csel	x7, x7, x6, ne  // ne = any
    48a0:	add	x1, x1, #0x1
    48a4:	str	x1, [x19]
    48a8:	lsr	w2, w0, #1
    48ac:	add	w3, w2, #0x1
    48b0:	cbz	w8, 4b78 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x4a8>
    48b4:	mov	w2, #0x30                  	// #48
    48b8:	mov	w1, #0x10                  	// #16
    48bc:	cmp	w2, w3, lsl #2
    48c0:	b.hi	47c8 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xf8>  // b.pmore
    48c4:	mov	x0, x19
    48c8:	lsl	w1, w1, #1
    48cc:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    48d0:	ldrb	w0, [x19, #8]
    48d4:	tbnz	w0, #0, 4940 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x270>
    48d8:	ldr	w2, [x19, #24]
    48dc:	ldr	x3, [x19, #16]
    48e0:	cbz	w2, 49c8 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x2f8>
    48e4:	ldr	x1, [x24, x20]
    48e8:	cmn	x1, #0x8
    48ec:	ccmn	x1, #0x10, #0x4, ne  // ne = any
    48f0:	b.eq	4a40 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x370>  // b.none
    48f4:	lsr	w0, w1, #9
    48f8:	sub	w2, w2, #0x1
    48fc:	eor	w0, w0, w1, lsr #4
    4900:	and	w4, w0, w2
    4904:	mov	x0, x4
    4908:	ubfiz	x7, x4, #3, #28
    490c:	ldr	x4, [x3, x4, lsl #3]
    4910:	add	x7, x3, x7
    4914:	cmp	x1, x4
    4918:	b.ne	4a20 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x350>  // b.any
    491c:	ldr	w0, [x19, #8]
    4920:	b	47e0 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x110>
    4924:	mov	x0, x22
    4928:	mov	x1, x21
    492c:	mov	x3, #0x8                   	// #8
    4930:	mov	x2, #0x0                   	// #0
    4934:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4938:	ldr	w0, [x19, #152]
    493c:	b	4824 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x154>
    4940:	mov	x3, x27
    4944:	mov	w2, #0x10                  	// #16
    4948:	b	48e4 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x214>
    494c:	mov	x0, x19
    4950:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4954:	ldrb	w0, [x19, #8]
    4958:	tbz	w0, #0, 49bc <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x2ec>
    495c:	mov	x3, x27
    4960:	mov	w2, #0x10                  	// #16
    4964:	ldr	x1, [x24, x20]
    4968:	cmn	x1, #0x8
    496c:	ccmn	x1, #0x10, #0x4, ne  // ne = any
    4970:	b.eq	4a40 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x370>  // b.none
    4974:	lsr	w0, w1, #9
    4978:	sub	w2, w2, #0x1
    497c:	eor	w0, w0, w1, lsr #4
    4980:	and	w4, w0, w2
    4984:	mov	x0, x4
    4988:	ubfiz	x7, x4, #3, #28
    498c:	ldr	x4, [x3, x4, lsl #3]
    4990:	add	x7, x3, x7
    4994:	cmp	x1, x4
    4998:	b.eq	491c <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x24c>  // b.none
    499c:	mov	w6, #0x1                   	// #1
    49a0:	mov	x5, #0x0                   	// #0
    49a4:	cmn	x4, #0x8
    49a8:	b.ne	4ab4 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x3e4>  // b.any
    49ac:	ldr	w0, [x19, #8]
    49b0:	cbz	x5, 47e0 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x110>
    49b4:	mov	x7, x5
    49b8:	b	47e0 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x110>
    49bc:	ldr	w2, [x19, #24]
    49c0:	ldr	x3, [x19, #16]
    49c4:	cbnz	w2, 4964 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x294>
    49c8:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    49cc:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    49d0:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    49d4:	add	x3, x3, #0x0
    49d8:	add	x1, x1, #0x0
    49dc:	add	x0, x0, #0x0
    49e0:	mov	w2, #0x22f                 	// #559
    49e4:	bl	0 <__assert_fail>
    49e8:	add	w0, w0, w9
    49ec:	cmp	x7, #0x0
    49f0:	and	w10, w1, w0
    49f4:	ccmn	x4, #0x10, #0x0, eq  // eq = none
    49f8:	csel	x6, x6, x7, eq  // eq = none
    49fc:	add	w9, w9, #0x1
    4a00:	and	w0, w1, w0
    4a04:	add	x11, x3, x10, lsl #3
    4a08:	ldr	x4, [x3, x10, lsl #3]
    4a0c:	cmp	x2, x4
    4a10:	b.eq	4764 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x94>  // b.none
    4a14:	mov	x7, x6
    4a18:	mov	x6, x11
    4a1c:	b	4888 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x1b8>
    4a20:	mov	w6, #0x1                   	// #1
    4a24:	mov	x5, #0x0                   	// #0
    4a28:	cmn	x4, #0x8
    4a2c:	b.ne	4a80 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x3b0>  // b.any
    4a30:	cbz	x5, 491c <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x24c>
    4a34:	ldr	w0, [x19, #8]
    4a38:	mov	x7, x5
    4a3c:	b	47e0 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x110>
    4a40:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4a44:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4a48:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4a4c:	add	x3, x3, #0x0
    4a50:	add	x1, x1, #0x0
    4a54:	add	x0, x0, #0x0
    4a58:	mov	w2, #0x250                 	// #592
    4a5c:	bl	0 <__assert_fail>
    4a60:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4a64:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4a68:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4a6c:	add	x3, x3, #0x0
    4a70:	add	x1, x1, #0x0
    4a74:	add	x0, x0, #0x0
    4a78:	mov	w2, #0x87                  	// #135
    4a7c:	bl	0 <__assert_fail>
    4a80:	add	w0, w6, w0
    4a84:	cmp	x5, #0x0
    4a88:	and	w8, w2, w0
    4a8c:	ccmn	x4, #0x10, #0x0, eq  // eq = none
    4a90:	csel	x5, x5, x7, ne  // ne = any
    4a94:	add	w6, w6, #0x1
    4a98:	and	w0, w2, w0
    4a9c:	add	x7, x3, x8, lsl #3
    4aa0:	ldr	x4, [x3, x8, lsl #3]
    4aa4:	cmp	x1, x4
    4aa8:	b.ne	4a28 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x358>  // b.any
    4aac:	ldr	w0, [x19, #8]
    4ab0:	b	47e0 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x110>
    4ab4:	add	w0, w0, w6
    4ab8:	cmp	x5, #0x0
    4abc:	and	w8, w2, w0
    4ac0:	ccmn	x4, #0x10, #0x0, eq  // eq = none
    4ac4:	csel	x5, x5, x7, ne  // ne = any
    4ac8:	add	w6, w6, #0x1
    4acc:	and	w0, w2, w0
    4ad0:	add	x7, x3, x8, lsl #3
    4ad4:	ldr	x4, [x3, x8, lsl #3]
    4ad8:	cmp	x1, x4
    4adc:	b.ne	49a4 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x2d4>  // b.any
    4ae0:	ldr	w0, [x19, #8]
    4ae4:	b	47e0 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x110>
    4ae8:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4aec:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4af0:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4af4:	add	x3, x3, #0x0
    4af8:	add	x1, x1, #0x0
    4afc:	add	x0, x0, #0x0
    4b00:	mov	w2, #0x441                 	// #1089
    4b04:	bl	0 <__assert_fail>
    4b08:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4b0c:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4b10:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4b14:	add	x3, x3, #0x0
    4b18:	add	x1, x1, #0x0
    4b1c:	add	x0, x0, #0x0
    4b20:	mov	w2, #0x43                  	// #67
    4b24:	bl	0 <__assert_fail>
    4b28:	add	x21, sp, #0x90
    4b2c:	mov	x0, x2
    4b30:	mov	x8, x21
    4b34:	add	x20, sp, #0xb0
    4b38:	stp	x6, x7, [sp, #96]
    4b3c:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    4b40:	mov	x8, x20
    4b44:	add	x19, sp, #0x78
    4b48:	mov	x1, x21
    4b4c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4b50:	add	x0, x0, #0x0
    4b54:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4b58:	mov	x1, x20
    4b5c:	mov	x0, x19
    4b60:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4b64:	ldp	x6, x7, [sp, #96]
    4b68:	mov	x2, x19
    4b6c:	mov	x0, x6
    4b70:	mov	x1, x7
    4b74:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    4b78:	ldr	w1, [x19, #24]
    4b7c:	b	47bc <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xec>

0000000000004b80 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE>:
    4b80:	stp	x29, x30, [sp, #-480]!
    4b84:	mov	x29, sp
    4b88:	ldr	w0, [x2, #48]
    4b8c:	str	x1, [sp, #120]
    4b90:	str	x2, [sp, #176]
    4b94:	cmp	x0, #0x4
    4b98:	stp	x4, x5, [sp, #192]
    4b9c:	b.hi	59f4 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xe74>  // b.pmore
    4ba0:	mov	w0, #0x1                   	// #1
    4ba4:	stp	x23, x24, [sp, #48]
    4ba8:	mov	x24, x3
    4bac:	str	w0, [sp, #108]
    4bb0:	b.eq	5600 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xa80>  // b.none
    4bb4:	ldr	x0, [sp, #176]
    4bb8:	str	xzr, [sp, #248]
    4bbc:	strb	wzr, [sp, #256]
    4bc0:	ldr	x1, [x0, #56]
    4bc4:	add	x0, sp, #0xf0
    4bc8:	str	x0, [sp, #184]
    4bcc:	add	x0, sp, #0x100
    4bd0:	str	x0, [sp, #240]
    4bd4:	cbz	x1, 5a34 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xeb4>
    4bd8:	ldrb	w2, [x1, #8]
    4bdc:	stp	x19, x20, [sp, #16]
    4be0:	cmp	w2, #0x12
    4be4:	stp	x21, x22, [sp, #32]
    4be8:	b.eq	4c38 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xb8>  // b.none
    4bec:	ldr	x0, [sp, #176]
    4bf0:	add	x21, sp, #0x190
    4bf4:	mov	x8, x21
    4bf8:	add	x20, sp, #0x1b0
    4bfc:	stp	x25, x26, [sp, #64]
    4c00:	add	x19, sp, #0x170
    4c04:	stp	x27, x28, [sp, #80]
    4c08:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    4c0c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4c10:	mov	x8, x20
    4c14:	mov	x1, x21
    4c18:	add	x0, x0, #0x0
    4c1c:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4c20:	mov	x1, x20
    4c24:	mov	x0, x19
    4c28:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4c2c:	ldp	x0, x1, [sp, #192]
    4c30:	mov	x2, x19
    4c34:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    4c38:	ldr	x21, [x1, #24]
    4c3c:	add	x20, sp, #0x1b0
    4c40:	cbz	x21, 4cc4 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x144>
    4c44:	ldr	x19, [x1, #32]
    4c48:	add	x0, x20, #0x10
    4c4c:	str	x19, [sp, #400]
    4c50:	str	x0, [sp, #432]
    4c54:	cmp	x19, #0xf
    4c58:	b.hi	566c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xaec>  // b.pmore
    4c5c:	cmp	x19, #0x1
    4c60:	b.ne	5660 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xae0>  // b.any
    4c64:	ldrb	w2, [x21]
    4c68:	mov	x1, x0
    4c6c:	strb	w2, [sp, #448]
    4c70:	str	x19, [sp, #440]
    4c74:	add	x3, x20, #0x10
    4c78:	strb	wzr, [x1, x19]
    4c7c:	ldr	x0, [sp, #240]
    4c80:	ldr	x1, [sp, #432]
    4c84:	mov	x2, x0
    4c88:	cmp	x1, x3
    4c8c:	b.eq	593c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xdbc>  // b.none
    4c90:	ldr	x0, [sp, #184]
    4c94:	ldr	x3, [sp, #440]
    4c98:	stp	x1, x3, [sp, #240]
    4c9c:	add	x0, x0, #0x10
    4ca0:	cmp	x2, x0
    4ca4:	ldr	x0, [sp, #448]
    4ca8:	b.eq	56c0 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xb40>  // b.none
    4cac:	ldr	x1, [sp, #256]
    4cb0:	str	x0, [sp, #256]
    4cb4:	cbz	x2, 56c4 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xb44>
    4cb8:	str	x2, [sp, #432]
    4cbc:	str	x1, [sp, #448]
    4cc0:	b	4ce0 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x160>
    4cc4:	add	x1, x20, #0x10
    4cc8:	mov	x2, #0x0                   	// #0
    4ccc:	str	x1, [sp, #432]
    4cd0:	strb	wzr, [sp, #448]
    4cd4:	str	x2, [sp, #248]
    4cd8:	strb	wzr, [x0, x2]
    4cdc:	ldr	x2, [sp, #432]
    4ce0:	str	xzr, [sp, #440]
    4ce4:	strb	wzr, [x2]
    4ce8:	add	x1, x20, #0x10
    4cec:	ldr	x0, [sp, #432]
    4cf0:	cmp	x0, x1
    4cf4:	b.eq	4cfc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x17c>  // b.none
    4cf8:	bl	0 <_ZdlPv>
    4cfc:	ldr	x0, [sp, #176]
    4d00:	ldr	x0, [x0, #64]
    4d04:	cbz	x0, 5930 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xdb0>
    4d08:	ldrb	w1, [x0, #8]
    4d0c:	cmp	w1, #0x8
    4d10:	b.eq	4d44 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1c4>  // b.none
    4d14:	ldr	x0, [sp, #176]
    4d18:	add	x19, sp, #0x190
    4d1c:	mov	x8, x19
    4d20:	stp	x25, x26, [sp, #64]
    4d24:	stp	x27, x28, [sp, #80]
    4d28:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    4d2c:	mov	x1, x19
    4d30:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4d34:	mov	x8, x20
    4d38:	add	x19, sp, #0x170
    4d3c:	add	x0, x0, #0x0
    4d40:	b	4c1c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x9c>
    4d44:	ldr	x19, [x0, #24]
    4d48:	mov	x1, #0x3fffffff            	// #1073741823
    4d4c:	cmp	x19, x1
    4d50:	b.hi	5984 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xe04>  // b.pmore
    4d54:	ldr	x0, [sp, #176]
    4d58:	ldr	x0, [x0, #72]
    4d5c:	cbz	x0, 5930 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xdb0>
    4d60:	ldrb	w2, [x0, #8]
    4d64:	cmp	w2, #0x8
    4d68:	b.eq	4d9c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x21c>  // b.none
    4d6c:	ldr	x0, [sp, #176]
    4d70:	add	x19, sp, #0x190
    4d74:	mov	x8, x19
    4d78:	stp	x25, x26, [sp, #64]
    4d7c:	stp	x27, x28, [sp, #80]
    4d80:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    4d84:	mov	x1, x19
    4d88:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4d8c:	mov	x8, x20
    4d90:	add	x19, sp, #0x170
    4d94:	add	x0, x0, #0x0
    4d98:	b	4c1c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x9c>
    4d9c:	ldr	x21, [x0, #24]
    4da0:	cmp	x21, x1
    4da4:	b.hi	59a8 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xe28>  // b.pmore
    4da8:	ldr	x0, [sp, #176]
    4dac:	ldr	x0, [x0, #32]
    4db0:	cbz	x0, 59c0 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xe40>
    4db4:	ldrb	w1, [x0, #8]
    4db8:	cmp	w1, #0x6
    4dbc:	b.ne	59cc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xe4c>  // b.any
    4dc0:	ldr	x0, [x0, #24]
    4dc4:	cmp	x19, x21
    4dc8:	ldr	w1, [sp, #108]
    4dcc:	ldr	x0, [x0, #104]
    4dd0:	lsr	w2, w1, #31
    4dd4:	str	x0, [sp, #112]
    4dd8:	str	w2, [sp, #160]
    4ddc:	b.le	55ec <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xa6c>
    4de0:	cmp	w1, #0x0
    4de4:	neg	w0, w1
    4de8:	b.lt	528c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x70c>  // b.tstop
    4dec:	str	w0, [sp, #108]
    4df0:	cset	w0, gt
    4df4:	str	w0, [sp, #160]
    4df8:	str	wzr, [sp, #164]
    4dfc:	ldr	w0, [sp, #160]
    4e00:	cmp	w0, #0x0
    4e04:	ccmp	x19, x21, #0x0, ne  // ne = any
    4e08:	b.lt	528c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x70c>  // b.tstop
    4e0c:	adrp	x1, 0 <_ZTVN4llvm18raw_string_ostreamE>
    4e10:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4e14:	ldr	x3, [sp, #112]
    4e18:	add	x22, sp, #0x120
    4e1c:	ldr	x1, [x1]
    4e20:	stp	x25, x26, [sp, #64]
    4e24:	mov	x26, x24
    4e28:	ldr	x0, [x0]
    4e2c:	add	x1, x1, #0x10
    4e30:	add	x2, sp, #0x110
    4e34:	add	x3, x3, #0x38
    4e38:	add	x0, x0, #0x10
    4e3c:	stp	x1, x0, [sp, #136]
    4e40:	add	x1, sp, #0x190
    4e44:	stp	x27, x28, [sp, #80]
    4e48:	str	x3, [sp, #96]
    4e4c:	str	x1, [sp, #128]
    4e50:	add	x1, x24, #0x10
    4e54:	str	x2, [sp, #152]
    4e58:	str	x1, [sp, #168]
    4e5c:	nop
    4e60:	mov	w2, #0x1                   	// #1
    4e64:	str	w2, [sp, #464]
    4e68:	ldr	x4, [sp, #144]
    4e6c:	mov	x0, x20
    4e70:	ldr	x3, [sp, #240]
    4e74:	stp	x4, x3, [sp, #400]
    4e78:	ldr	x1, [sp, #128]
    4e7c:	stp	x22, xzr, [sp, #272]
    4e80:	ldr	x3, [sp, #136]
    4e84:	strb	wzr, [sp, #288]
    4e88:	ldr	x2, [sp, #152]
    4e8c:	str	w19, [sp, #416]
    4e90:	str	x3, [sp, #432]
    4e94:	stp	xzr, xzr, [sp, #440]
    4e98:	str	xzr, [sp, #456]
    4e9c:	str	x2, [sp, #472]
    4ea0:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
    4ea4:	ldr	x0, [sp, #440]
    4ea8:	ldr	x1, [sp, #456]
    4eac:	cmp	x1, x0
    4eb0:	b.eq	4ebc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x33c>  // b.none
    4eb4:	mov	x0, x20
    4eb8:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
    4ebc:	ldr	x1, [sp, #112]
    4ec0:	ldr	x0, [sp, #472]
    4ec4:	ldr	x24, [x1, #64]
    4ec8:	ldp	x25, x27, [x0]
    4ecc:	cbz	x24, 4f4c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3cc>
    4ed0:	ldr	x28, [sp, #96]
    4ed4:	nop
    4ed8:	ldp	x0, x23, [x24, #32]
    4edc:	cmp	x27, x23
    4ee0:	b.cc	50b0 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x530>  // b.lo, b.ul, b.last
    4ee4:	cbz	x23, 4ef8 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x378>
    4ee8:	mov	x2, x23
    4eec:	mov	x1, x25
    4ef0:	bl	0 <memcmp>
    4ef4:	cbnz	w0, 50c4 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x544>
    4ef8:	cmp	x27, x23
    4efc:	b.eq	50c8 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x548>  // b.none
    4f00:	cmp	x27, x23
    4f04:	b.ls	50c8 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x548>  // b.plast
    4f08:	ldr	x24, [x24, #24]
    4f0c:	cbnz	x24, 4ed8 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x358>
    4f10:	ldr	x0, [sp, #96]
    4f14:	cmp	x28, x0
    4f18:	b.eq	4f4c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3cc>  // b.none
    4f1c:	ldp	x1, x24, [x28, #32]
    4f20:	cmp	x27, x24
    4f24:	b.hi	50d8 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x558>  // b.pmore
    4f28:	cbz	x27, 4f3c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3bc>
    4f2c:	mov	x0, x25
    4f30:	mov	x2, x27
    4f34:	bl	0 <memcmp>
    4f38:	cbnz	w0, 50ec <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x56c>
    4f3c:	cmp	x27, x24
    4f40:	b.eq	50f0 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x570>  // b.none
    4f44:	cmp	x27, x24
    4f48:	b.cs	50f0 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x570>  // b.hs, b.nlast
    4f4c:	add	x19, sp, #0x130
    4f50:	strb	wzr, [sp, #320]
    4f54:	add	x2, x19, #0x10
    4f58:	mov	x0, x19
    4f5c:	ldr	x1, [sp, #280]
    4f60:	stp	x2, xzr, [sp, #304]
    4f64:	mov	x20, #0x3fffffffffffffff    	// #4611686018427387903
    4f68:	add	x1, x1, #0xe
    4f6c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
    4f70:	ldr	x0, [sp, #312]
    4f74:	sub	x0, x20, x0
    4f78:	cmp	x0, #0xd
    4f7c:	b.ls	5a48 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xec8>  // b.plast
    4f80:	mov	x2, #0xe                   	// #14
    4f84:	mov	x0, x19
    4f88:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4f8c:	add	x1, x1, #0x0
    4f90:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    4f94:	ldp	x1, x2, [sp, #272]
    4f98:	mov	x0, x19
    4f9c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    4fa0:	ldr	x0, [sp, #312]
    4fa4:	sub	x20, x20, x0
    4fa8:	cmp	x20, #0x2
    4fac:	b.ls	5a48 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xec8>  // b.plast
    4fb0:	mov	x0, x19
    4fb4:	mov	x2, #0x3                   	// #3
    4fb8:	add	x19, sp, #0x150
    4fbc:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4fc0:	add	x1, x1, #0x0
    4fc4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    4fc8:	add	x2, x19, #0x10
    4fcc:	str	x2, [sp, #336]
    4fd0:	mov	x1, x0
    4fd4:	ldr	x2, [x0], #16
    4fd8:	cmp	x2, x0
    4fdc:	b.eq	5890 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xd10>  // b.none
    4fe0:	ldr	x3, [x1, #16]
    4fe4:	str	x2, [sp, #336]
    4fe8:	str	x3, [sp, #352]
    4fec:	ldr	x2, [x1, #8]
    4ff0:	str	x2, [sp, #344]
    4ff4:	stp	x0, xzr, [x1]
    4ff8:	add	x20, sp, #0x170
    4ffc:	mov	x8, x20
    5000:	ldr	x0, [sp, #176]
    5004:	strb	wzr, [x1, #16]
    5008:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    500c:	ldp	x3, x4, [sp, #336]
    5010:	add	x0, x19, #0x10
    5014:	ldp	x1, x2, [sp, #368]
    5018:	mov	x6, #0xf                   	// #15
    501c:	cmp	x3, x0
    5020:	ldr	x0, [sp, #352]
    5024:	add	x5, x4, x2
    5028:	csel	x0, x0, x6, ne  // ne = any
    502c:	cmp	x5, x0
    5030:	b.ls	504c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x4cc>  // b.plast
    5034:	ldr	x0, [sp, #384]
    5038:	add	x7, x20, #0x10
    503c:	cmp	x1, x7
    5040:	csel	x0, x0, x6, ne  // ne = any
    5044:	cmp	x5, x0
    5048:	b.ls	5910 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xd90>  // b.plast
    504c:	mov	x0, x19
    5050:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    5054:	mov	x2, x0
    5058:	ldr	x1, [sp, #128]
    505c:	mov	x0, x2
    5060:	add	x1, x1, #0x10
    5064:	str	x1, [sp, #400]
    5068:	ldr	x1, [x0], #16
    506c:	cmp	x1, x0
    5070:	b.eq	589c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xd1c>  // b.none
    5074:	str	x1, [sp, #400]
    5078:	ldr	x1, [x2, #16]
    507c:	str	x1, [sp, #416]
    5080:	ldr	x1, [x2, #8]
    5084:	str	x1, [sp, #408]
    5088:	stp	x0, xzr, [x2]
    508c:	mov	w3, #0x104                 	// #260
    5090:	ldr	x4, [sp, #128]
    5094:	strb	wzr, [x2, #16]
    5098:	ldr	x0, [sp, #192]
    509c:	add	x2, sp, #0xd8
    50a0:	ldr	x1, [sp, #200]
    50a4:	stp	x4, xzr, [sp, #216]
    50a8:	strh	w3, [sp, #232]
    50ac:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    50b0:	cbz	x27, 50c8 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x548>
    50b4:	mov	x2, x27
    50b8:	mov	x1, x25
    50bc:	bl	0 <memcmp>
    50c0:	cbz	w0, 4f00 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x380>
    50c4:	tbnz	w0, #31, 4f08 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x388>
    50c8:	mov	x28, x24
    50cc:	ldr	x24, [x24, #16]
    50d0:	cbnz	x24, 4ed8 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x358>
    50d4:	b	4f10 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x390>
    50d8:	cbz	x24, 50f0 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x570>
    50dc:	mov	x0, x25
    50e0:	mov	x2, x24
    50e4:	bl	0 <memcmp>
    50e8:	cbz	w0, 4f44 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3c4>
    50ec:	tbnz	w0, #31, 4f4c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3cc>
    50f0:	ldr	x24, [x28, #64]
    50f4:	cbz	x24, 4f4c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3cc>
    50f8:	ldr	x0, [sp, #120]
    50fc:	mov	x1, x24
    5100:	bl	1a88 <_ZN4llvm9SetTheory6expandEPNS_6RecordE>
    5104:	mov	x28, x0
    5108:	cbz	x0, 5358 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x7d8>
    510c:	ldp	x27, x25, [x0]
    5110:	add	x24, x26, #0xa0
    5114:	add	x28, x26, #0x90
    5118:	cmp	x27, x25
    511c:	b.eq	5244 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x6c4>  // b.none
    5120:	ldr	x23, [sp, #168]
    5124:	b	5174 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5f4>
    5128:	mov	x4, x23
    512c:	mov	w1, #0x10                  	// #16
    5130:	ldr	x3, [x27]
    5134:	cmn	x3, #0x10
    5138:	ccmn	x3, #0x8, #0x4, ne  // ne = any
    513c:	b.eq	5790 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xc10>  // b.none
    5140:	lsr	w0, w3, #9
    5144:	sub	w1, w1, #0x1
    5148:	eor	w0, w0, w3, lsr #4
    514c:	and	w6, w0, w1
    5150:	mov	x0, x6
    5154:	ubfiz	x2, x6, #3, #28
    5158:	ldr	x6, [x4, x6, lsl #3]
    515c:	add	x5, x4, x2
    5160:	cmp	x3, x6
    5164:	b.ne	52b8 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x738>  // b.any
    5168:	add	x27, x27, #0x8
    516c:	cmp	x25, x27
    5170:	b.eq	5244 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x6c4>  // b.none
    5174:	ldrb	w0, [x26, #8]
    5178:	and	w7, w0, #0x1
    517c:	tbnz	w0, #0, 5128 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5a8>
    5180:	ldr	w1, [x26, #24]
    5184:	ldr	x4, [x26, #16]
    5188:	cbnz	w1, 5130 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5b0>
    518c:	ldr	w0, [x26, #8]
    5190:	mov	x2, #0x0                   	// #0
    5194:	ldr	x5, [x26]
    5198:	lsr	w3, w0, #1
    519c:	add	w4, w3, #0x1
    51a0:	add	x3, x5, #0x1
    51a4:	str	x3, [x26]
    51a8:	add	w3, w1, w1, lsl #1
    51ac:	cmp	w3, w4, lsl #2
    51b0:	b.ls	52fc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x77c>  // b.plast
    51b4:	ldr	w3, [x26, #12]
    51b8:	sub	w3, w1, w3
    51bc:	sub	w3, w3, w4
    51c0:	cmp	w3, w1, lsr #3
    51c4:	b.ls	5508 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x988>  // b.plast
    51c8:	cbz	x2, 5584 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xa04>
    51cc:	lsr	w1, w0, #1
    51d0:	adds	w1, w1, #0x1
    51d4:	b.mi	5870 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xcf0>  // b.first
    51d8:	bfi	w0, w1, #1, #31
    51dc:	str	w0, [x26, #8]
    51e0:	ldr	x0, [x2]
    51e4:	cmn	x0, #0x8
    51e8:	b.eq	51f8 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x678>  // b.none
    51ec:	ldr	w0, [x26, #12]
    51f0:	sub	w0, w0, #0x1
    51f4:	str	w0, [x26, #12]
    51f8:	ldr	x0, [x27]
    51fc:	ldr	w1, [x26, #156]
    5200:	str	x0, [x2]
    5204:	ldr	w0, [x26, #152]
    5208:	cmp	w0, w1
    520c:	b.cs	54ec <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x96c>  // b.hs, b.nlast
    5210:	ldr	x1, [x26, #144]
    5214:	ldr	x2, [x27]
    5218:	str	x2, [x1, w0, uxtw #3]
    521c:	ldp	w0, w2, [x26, #152]
    5220:	mov	w1, w0
    5224:	add	x1, x1, #0x1
    5228:	cmp	x1, x2
    522c:	b.hi	5850 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xcd0>  // b.pmore
    5230:	add	w0, w0, #0x1
    5234:	str	w0, [x26, #152]
    5238:	add	x27, x27, #0x8
    523c:	cmp	x25, x27
    5240:	b.ne	5174 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5f4>  // b.any
    5244:	mov	x0, x20
    5248:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
    524c:	ldr	w1, [sp, #108]
    5250:	ldr	x0, [sp, #272]
    5254:	add	x19, x19, w1, sxtw
    5258:	cmp	x0, x22
    525c:	b.eq	5264 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x6e4>  // b.none
    5260:	bl	0 <_ZdlPv>
    5264:	ldr	w0, [sp, #164]
    5268:	cmp	w0, #0x0
    526c:	ccmp	x19, x21, #0x4, ne  // ne = any
    5270:	b.gt	5284 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x704>
    5274:	ldr	w0, [sp, #160]
    5278:	cmp	w0, #0x0
    527c:	ccmp	x19, x21, #0x0, ne  // ne = any
    5280:	b.ge	4e60 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x2e0>  // b.tcont
    5284:	ldp	x25, x26, [sp, #64]
    5288:	ldp	x27, x28, [sp, #80]
    528c:	ldr	x1, [sp, #184]
    5290:	ldr	x0, [sp, #240]
    5294:	add	x1, x1, #0x10
    5298:	cmp	x0, x1
    529c:	b.eq	52a4 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x724>  // b.none
    52a0:	bl	0 <_ZdlPv>
    52a4:	ldp	x19, x20, [sp, #16]
    52a8:	ldp	x21, x22, [sp, #32]
    52ac:	ldp	x23, x24, [sp, #48]
    52b0:	ldp	x29, x30, [sp], #480
    52b4:	ret
    52b8:	mov	x2, #0x0                   	// #0
    52bc:	mov	w8, #0x1                   	// #1
    52c0:	cmn	x6, #0x8
    52c4:	b.ne	55b4 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xa34>  // b.any
    52c8:	ldr	x1, [x26]
    52cc:	cmp	x2, #0x0
    52d0:	ldr	w0, [x26, #8]
    52d4:	csel	x2, x2, x5, ne  // ne = any
    52d8:	add	x1, x1, #0x1
    52dc:	str	x1, [x26]
    52e0:	lsr	w3, w0, #1
    52e4:	add	w4, w3, #0x1
    52e8:	cbz	w7, 5970 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xdf0>
    52ec:	mov	w3, #0x30                  	// #48
    52f0:	mov	w1, #0x10                  	// #16
    52f4:	cmp	w3, w4, lsl #2
    52f8:	b.hi	51b4 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x634>  // b.pmore
    52fc:	mov	x0, x26
    5300:	lsl	w1, w1, #1
    5304:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    5308:	ldrb	w0, [x26, #8]
    530c:	tbz	w0, #0, 5578 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x9f8>
    5310:	mov	x4, x23
    5314:	mov	w2, #0x10                  	// #16
    5318:	ldr	x1, [x27]
    531c:	cmn	x1, #0x10
    5320:	ccmn	x1, #0x8, #0x4, ne  // ne = any
    5324:	b.eq	5790 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xc10>  // b.none
    5328:	lsr	w0, w1, #9
    532c:	sub	w3, w2, #0x1
    5330:	eor	w0, w0, w1, lsr #4
    5334:	and	w5, w0, w3
    5338:	mov	x0, x5
    533c:	ubfiz	x2, x5, #3, #28
    5340:	ldr	x5, [x4, x5, lsl #3]
    5344:	add	x2, x4, x2
    5348:	cmp	x1, x5
    534c:	b.ne	56a0 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xb20>  // b.any
    5350:	ldr	w0, [x26, #8]
    5354:	b	51cc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x64c>
    5358:	ldrb	w0, [x26, #8]
    535c:	and	w7, w0, #0x1
    5360:	tbz	w0, #0, 5460 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x8e0>
    5364:	ldr	x2, [sp, #168]
    5368:	mov	w1, #0x10                  	// #16
    536c:	cmn	x24, #0x8
    5370:	ccmn	x24, #0x10, #0x4, ne  // ne = any
    5374:	b.eq	5790 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xc10>  // b.none
    5378:	lsr	w0, w24, #9
    537c:	sub	w1, w1, #0x1
    5380:	eor	w0, w0, w24, lsr #4
    5384:	and	w5, w0, w1
    5388:	mov	x0, x5
    538c:	ubfiz	x3, x5, #3, #28
    5390:	ldr	x5, [x2, x5, lsl #3]
    5394:	add	x3, x2, x3
    5398:	cmp	x24, x5
    539c:	b.eq	5244 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x6c4>  // b.none
    53a0:	mov	x6, #0x0                   	// #0
    53a4:	mov	w8, #0x1                   	// #1
    53a8:	cmn	x5, #0x8
    53ac:	b.ne	57b0 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xc30>  // b.any
    53b0:	ldr	x1, [x26]
    53b4:	cmp	x6, #0x0
    53b8:	ldr	w0, [x26, #8]
    53bc:	csel	x6, x6, x3, ne  // ne = any
    53c0:	add	x1, x1, #0x1
    53c4:	str	x1, [x26]
    53c8:	lsr	w2, w0, #1
    53cc:	add	w3, w2, #0x1
    53d0:	cbz	w7, 5978 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xdf8>
    53d4:	mov	w2, #0x30                  	// #48
    53d8:	mov	w1, #0x10                  	// #16
    53dc:	cmp	w2, w3, lsl #2
    53e0:	b.ls	5494 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x914>  // b.plast
    53e4:	ldr	w2, [x26, #12]
    53e8:	sub	w2, w1, w2
    53ec:	sub	w2, w2, w3
    53f0:	cmp	w2, w1, lsr #3
    53f4:	b.ls	56ec <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xb6c>  // b.plast
    53f8:	cbz	x6, 5584 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xa04>
    53fc:	lsr	w1, w0, #1
    5400:	adds	w1, w1, #0x1
    5404:	b.mi	5870 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xcf0>  // b.first
    5408:	bfi	w0, w1, #1, #31
    540c:	str	w0, [x26, #8]
    5410:	ldr	x0, [x6]
    5414:	cmn	x0, #0x8
    5418:	b.eq	5428 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x8a8>  // b.none
    541c:	ldr	w0, [x26, #12]
    5420:	sub	w0, w0, #0x1
    5424:	str	w0, [x26, #12]
    5428:	ldp	w0, w1, [x26, #152]
    542c:	str	x24, [x6]
    5430:	cmp	w0, w1
    5434:	b.cs	56d0 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xb50>  // b.hs, b.nlast
    5438:	ldr	x1, [x26, #144]
    543c:	str	x24, [x1, w0, uxtw #3]
    5440:	ldp	w0, w2, [x26, #152]
    5444:	mov	w1, w0
    5448:	add	x1, x1, #0x1
    544c:	cmp	x1, x2
    5450:	b.hi	5850 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xcd0>  // b.pmore
    5454:	add	w0, w0, #0x1
    5458:	str	w0, [x26, #152]
    545c:	b	5244 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x6c4>
    5460:	ldr	w1, [x26, #24]
    5464:	ldr	x2, [x26, #16]
    5468:	cbnz	w1, 536c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x7ec>
    546c:	ldr	w0, [x26, #8]
    5470:	mov	x6, #0x0                   	// #0
    5474:	ldr	x5, [x26]
    5478:	lsr	w2, w0, #1
    547c:	add	w3, w2, #0x1
    5480:	add	x2, x5, #0x1
    5484:	str	x2, [x26]
    5488:	add	w2, w1, w1, lsl #1
    548c:	cmp	w2, w3, lsl #2
    5490:	b.hi	53e4 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x864>  // b.pmore
    5494:	mov	x0, x26
    5498:	lsl	w1, w1, #1
    549c:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    54a0:	ldrb	w0, [x26, #8]
    54a4:	tbz	w0, #0, 5754 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xbd4>
    54a8:	ldr	x2, [sp, #168]
    54ac:	mov	w1, #0x10                  	// #16
    54b0:	cmn	x24, #0x8
    54b4:	ccmn	x24, #0x10, #0x4, ne  // ne = any
    54b8:	b.eq	5790 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xc10>  // b.none
    54bc:	lsr	w0, w24, #9
    54c0:	sub	w1, w1, #0x1
    54c4:	eor	w0, w0, w24, lsr #4
    54c8:	and	w3, w0, w1
    54cc:	mov	x0, x3
    54d0:	ubfiz	x6, x3, #3, #28
    54d4:	ldr	x3, [x2, x3, lsl #3]
    54d8:	add	x6, x2, x6
    54dc:	cmp	x24, x3
    54e0:	b.ne	5774 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xbf4>  // b.any
    54e4:	ldr	w0, [x26, #8]
    54e8:	b	53fc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x87c>
    54ec:	mov	x0, x28
    54f0:	mov	x1, x24
    54f4:	mov	x3, #0x8                   	// #8
    54f8:	mov	x2, #0x0                   	// #0
    54fc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    5500:	ldr	w0, [x26, #152]
    5504:	b	5210 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x690>
    5508:	mov	x0, x26
    550c:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    5510:	ldrb	w0, [x26, #8]
    5514:	tbz	w0, #0, 55a4 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xa24>
    5518:	mov	x4, x23
    551c:	mov	w2, #0x10                  	// #16
    5520:	ldr	x1, [x27]
    5524:	cmn	x1, #0x8
    5528:	ccmn	x1, #0x10, #0x4, ne  // ne = any
    552c:	b.eq	5790 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xc10>  // b.none
    5530:	lsr	w0, w1, #9
    5534:	sub	w3, w2, #0x1
    5538:	eor	w0, w0, w1, lsr #4
    553c:	and	w5, w0, w3
    5540:	mov	x0, x5
    5544:	ubfiz	x2, x5, #3, #28
    5548:	ldr	x5, [x4, x5, lsl #3]
    554c:	add	x2, x4, x2
    5550:	cmp	x1, x5
    5554:	b.eq	5350 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x7d0>  // b.none
    5558:	mov	x6, #0x0                   	// #0
    555c:	mov	w7, #0x1                   	// #1
    5560:	cmn	x5, #0x8
    5564:	b.ne	581c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xc9c>  // b.any
    5568:	ldr	w0, [x26, #8]
    556c:	cbz	x6, 51cc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x64c>
    5570:	mov	x2, x6
    5574:	b	51cc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x64c>
    5578:	ldr	w2, [x26, #24]
    557c:	ldr	x4, [x26, #16]
    5580:	cbnz	w2, 5318 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x798>
    5584:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    5588:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    558c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    5590:	add	x3, x3, #0x0
    5594:	add	x1, x1, #0x0
    5598:	add	x0, x0, #0x0
    559c:	mov	w2, #0x22f                 	// #559
    55a0:	bl	0 <__assert_fail>
    55a4:	ldr	w2, [x26, #24]
    55a8:	ldr	x4, [x26, #16]
    55ac:	cbnz	w2, 5520 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x9a0>
    55b0:	b	5584 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xa04>
    55b4:	add	w0, w0, w8
    55b8:	cmp	x2, #0x0
    55bc:	and	w9, w1, w0
    55c0:	ccmn	x6, #0x10, #0x0, eq  // eq = none
    55c4:	csel	x5, x5, x2, eq  // eq = none
    55c8:	add	w8, w8, #0x1
    55cc:	and	w0, w1, w0
    55d0:	add	x10, x4, x9, lsl #3
    55d4:	ldr	x6, [x4, x9, lsl #3]
    55d8:	cmp	x3, x6
    55dc:	b.eq	5168 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5e8>  // b.none
    55e0:	mov	x2, x5
    55e4:	mov	x5, x10
    55e8:	b	52c0 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x740>
    55ec:	ldr	w0, [sp, #108]
    55f0:	cmp	w0, #0x0
    55f4:	cset	w0, gt
    55f8:	str	w0, [sp, #164]
    55fc:	b	4dfc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x27c>
    5600:	ldr	x0, [sp, #176]
    5604:	ldr	x0, [x0, #80]
    5608:	cbz	x0, 5928 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xda8>
    560c:	ldrb	w1, [x0, #8]
    5610:	cmp	w1, #0x8
    5614:	b.eq	5654 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xad4>  // b.none
    5618:	ldr	x0, [sp, #176]
    561c:	stp	x21, x22, [sp, #32]
    5620:	add	x21, sp, #0x190
    5624:	mov	x8, x21
    5628:	stp	x19, x20, [sp, #16]
    562c:	add	x20, sp, #0x1b0
    5630:	stp	x25, x26, [sp, #64]
    5634:	add	x19, sp, #0x170
    5638:	stp	x27, x28, [sp, #80]
    563c:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    5640:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    5644:	mov	x8, x20
    5648:	mov	x1, x21
    564c:	add	x0, x0, #0x0
    5650:	b	4c1c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x9c>
    5654:	ldr	w0, [x0, #24]
    5658:	str	w0, [sp, #108]
    565c:	b	4bb4 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x34>
    5660:	mov	x1, x0
    5664:	cbz	x19, 4c70 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xf0>
    5668:	b	5688 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xb08>
    566c:	add	x1, sp, #0x190
    5670:	mov	x0, x20
    5674:	mov	x2, #0x0                   	// #0
    5678:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    567c:	ldr	x1, [sp, #400]
    5680:	str	x0, [sp, #432]
    5684:	str	x1, [sp, #448]
    5688:	mov	x2, x19
    568c:	mov	x1, x21
    5690:	bl	0 <memcpy>
    5694:	ldr	x19, [sp, #400]
    5698:	ldr	x1, [sp, #432]
    569c:	b	4c70 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xf0>
    56a0:	mov	x6, #0x0                   	// #0
    56a4:	mov	w7, #0x1                   	// #1
    56a8:	cmn	x5, #0x8
    56ac:	b.ne	57e8 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xc68>  // b.any
    56b0:	cbz	x6, 5350 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x7d0>
    56b4:	ldr	w0, [x26, #8]
    56b8:	mov	x2, x6
    56bc:	b	51cc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x64c>
    56c0:	str	x0, [sp, #256]
    56c4:	add	x2, x20, #0x10
    56c8:	str	x2, [sp, #432]
    56cc:	b	4ce0 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x160>
    56d0:	add	x0, x26, #0x90
    56d4:	add	x1, x26, #0xa0
    56d8:	mov	x3, #0x8                   	// #8
    56dc:	mov	x2, #0x0                   	// #0
    56e0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    56e4:	ldr	w0, [x26, #152]
    56e8:	b	5438 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x8b8>
    56ec:	mov	x0, x26
    56f0:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    56f4:	ldrb	w0, [x26, #8]
    56f8:	tbz	w0, #0, 5764 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xbe4>
    56fc:	ldr	x2, [sp, #168]
    5700:	mov	w1, #0x10                  	// #16
    5704:	cmn	x24, #0x8
    5708:	ccmn	x24, #0x10, #0x4, ne  // ne = any
    570c:	b.eq	5790 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xc10>  // b.none
    5710:	lsr	w0, w24, #9
    5714:	sub	w1, w1, #0x1
    5718:	eor	w0, w0, w24, lsr #4
    571c:	and	w3, w0, w1
    5720:	mov	x0, x3
    5724:	ubfiz	x6, x3, #3, #28
    5728:	ldr	x3, [x2, x3, lsl #3]
    572c:	add	x6, x2, x6
    5730:	cmp	x24, x3
    5734:	b.eq	54e4 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x964>  // b.none
    5738:	mov	w5, #0x1                   	// #1
    573c:	cmn	x3, #0x8
    5740:	b.ne	58dc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xd5c>  // b.any
    5744:	ldr	w0, [x26, #8]
    5748:	cbz	x28, 53fc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x87c>
    574c:	mov	x6, x28
    5750:	b	53fc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x87c>
    5754:	ldr	w1, [x26, #24]
    5758:	ldr	x2, [x26, #16]
    575c:	cbnz	w1, 54b0 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x930>
    5760:	b	5584 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xa04>
    5764:	ldr	w1, [x26, #24]
    5768:	ldr	x2, [x26, #16]
    576c:	cbnz	w1, 5704 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xb84>
    5770:	b	5584 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xa04>
    5774:	mov	w5, #0x1                   	// #1
    5778:	cmn	x3, #0x8
    577c:	b.ne	58a8 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xd28>  // b.any
    5780:	cbz	x28, 54e4 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x964>
    5784:	ldr	w0, [x26, #8]
    5788:	mov	x6, x28
    578c:	b	53fc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x87c>
    5790:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    5794:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    5798:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    579c:	add	x3, x3, #0x0
    57a0:	add	x1, x1, #0x0
    57a4:	add	x0, x0, #0x0
    57a8:	mov	w2, #0x250                 	// #592
    57ac:	bl	0 <__assert_fail>
    57b0:	add	w0, w8, w0
    57b4:	cmp	x6, #0x0
    57b8:	and	w4, w1, w0
    57bc:	ccmn	x5, #0x10, #0x0, eq  // eq = none
    57c0:	csel	x3, x3, x6, eq  // eq = none
    57c4:	add	w8, w8, #0x1
    57c8:	and	w0, w1, w0
    57cc:	add	x9, x2, x4, lsl #3
    57d0:	ldr	x5, [x2, x4, lsl #3]
    57d4:	cmp	x24, x5
    57d8:	b.eq	5244 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x6c4>  // b.none
    57dc:	mov	x6, x3
    57e0:	mov	x3, x9
    57e4:	b	53a8 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x828>
    57e8:	add	w0, w0, w7
    57ec:	cmp	x6, #0x0
    57f0:	and	w8, w3, w0
    57f4:	ccmn	x5, #0x10, #0x0, eq  // eq = none
    57f8:	csel	x6, x6, x2, ne  // ne = any
    57fc:	add	w7, w7, #0x1
    5800:	and	w0, w3, w0
    5804:	add	x2, x4, x8, lsl #3
    5808:	ldr	x5, [x4, x8, lsl #3]
    580c:	cmp	x1, x5
    5810:	b.ne	56a8 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xb28>  // b.any
    5814:	ldr	w0, [x26, #8]
    5818:	b	51cc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x64c>
    581c:	add	w0, w7, w0
    5820:	cmp	x6, #0x0
    5824:	and	w8, w3, w0
    5828:	ccmn	x5, #0x10, #0x0, eq  // eq = none
    582c:	csel	x6, x6, x2, ne  // ne = any
    5830:	add	w7, w7, #0x1
    5834:	and	w0, w3, w0
    5838:	add	x2, x4, x8, lsl #3
    583c:	ldr	x5, [x4, x8, lsl #3]
    5840:	cmp	x1, x5
    5844:	b.ne	5560 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x9e0>  // b.any
    5848:	ldr	w0, [x26, #8]
    584c:	b	51cc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x64c>
    5850:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    5854:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    5858:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    585c:	add	x3, x3, #0x0
    5860:	add	x1, x1, #0x0
    5864:	add	x0, x0, #0x0
    5868:	mov	w2, #0x43                  	// #67
    586c:	bl	0 <__assert_fail>
    5870:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    5874:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    5878:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    587c:	add	x3, x3, #0x0
    5880:	add	x1, x1, #0x0
    5884:	add	x0, x0, #0x0
    5888:	mov	w2, #0x441                 	// #1089
    588c:	bl	0 <__assert_fail>
    5890:	ldp	x2, x3, [x1, #16]
    5894:	stp	x2, x3, [sp, #352]
    5898:	b	4fec <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x46c>
    589c:	ldp	x4, x5, [x2, #16]
    58a0:	stp	x4, x5, [sp, #416]
    58a4:	b	5080 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x500>
    58a8:	add	w0, w5, w0
    58ac:	cmp	x28, #0x0
    58b0:	and	w4, w1, w0
    58b4:	ccmn	x3, #0x10, #0x0, eq  // eq = none
    58b8:	csel	x28, x28, x6, ne  // ne = any
    58bc:	add	w5, w5, #0x1
    58c0:	and	w0, w1, w0
    58c4:	add	x6, x2, x4, lsl #3
    58c8:	ldr	x3, [x2, x4, lsl #3]
    58cc:	cmp	x24, x3
    58d0:	b.ne	5778 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xbf8>  // b.any
    58d4:	ldr	w0, [x26, #8]
    58d8:	b	53fc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x87c>
    58dc:	add	w0, w0, w5
    58e0:	cmp	x28, #0x0
    58e4:	and	w4, w1, w0
    58e8:	ccmn	x3, #0x10, #0x0, eq  // eq = none
    58ec:	csel	x28, x28, x6, ne  // ne = any
    58f0:	add	w5, w5, #0x1
    58f4:	and	w0, w1, w0
    58f8:	add	x6, x2, x4, lsl #3
    58fc:	ldr	x3, [x2, x4, lsl #3]
    5900:	cmp	x24, x3
    5904:	b.ne	573c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xbbc>  // b.any
    5908:	ldr	w0, [x26, #8]
    590c:	b	53fc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x87c>
    5910:	mov	x2, #0x0                   	// #0
    5914:	mov	x0, x20
    5918:	mov	x1, #0x0                   	// #0
    591c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    5920:	mov	x2, x0
    5924:	b	5058 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x4d8>
    5928:	stp	x19, x20, [sp, #16]
    592c:	stp	x21, x22, [sp, #32]
    5930:	stp	x25, x26, [sp, #64]
    5934:	stp	x27, x28, [sp, #80]
    5938:	bl	f8 <_ZN4llvm3isaINS_7IntInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    593c:	ldr	x2, [sp, #440]
    5940:	cbz	x2, 4cd4 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x154>
    5944:	cmp	x2, #0x1
    5948:	b.eq	595c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xddc>  // b.none
    594c:	bl	0 <memcpy>
    5950:	ldr	x0, [sp, #240]
    5954:	ldr	x2, [sp, #440]
    5958:	b	4cd4 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x154>
    595c:	ldrb	w1, [sp, #448]
    5960:	strb	w1, [x0]
    5964:	ldr	x0, [sp, #240]
    5968:	ldr	x2, [sp, #440]
    596c:	b	4cd4 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x154>
    5970:	ldr	w1, [x26, #24]
    5974:	b	51a8 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x628>
    5978:	ldr	w1, [x26, #24]
    597c:	add	w2, w1, w1, lsl #1
    5980:	b	548c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x90c>
    5984:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    5988:	mov	x0, x20
    598c:	add	x1, x1, #0x0
    5990:	stp	x25, x26, [sp, #64]
    5994:	stp	x27, x28, [sp, #80]
    5998:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    599c:	ldp	x0, x1, [sp, #192]
    59a0:	mov	x2, x20
    59a4:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    59a8:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    59ac:	mov	x0, x20
    59b0:	add	x1, x1, #0x0
    59b4:	stp	x25, x26, [sp, #64]
    59b8:	stp	x27, x28, [sp, #80]
    59bc:	b	5998 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xe18>
    59c0:	stp	x25, x26, [sp, #64]
    59c4:	stp	x27, x28, [sp, #80]
    59c8:	bl	120 <_ZN4llvm3isaINS_7DefInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    59cc:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    59d0:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    59d4:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    59d8:	add	x3, x3, #0x0
    59dc:	add	x1, x1, #0x0
    59e0:	add	x0, x0, #0x0
    59e4:	mov	w2, #0x108                 	// #264
    59e8:	stp	x25, x26, [sp, #64]
    59ec:	stp	x27, x28, [sp, #80]
    59f0:	bl	0 <__assert_fail>
    59f4:	stp	x21, x22, [sp, #32]
    59f8:	add	x21, sp, #0x190
    59fc:	mov	x0, x2
    5a00:	mov	x8, x21
    5a04:	stp	x19, x20, [sp, #16]
    5a08:	add	x20, sp, #0x1b0
    5a0c:	stp	x23, x24, [sp, #48]
    5a10:	add	x19, sp, #0x170
    5a14:	stp	x25, x26, [sp, #64]
    5a18:	stp	x27, x28, [sp, #80]
    5a1c:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    5a20:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    5a24:	mov	x8, x20
    5a28:	mov	x1, x21
    5a2c:	add	x0, x0, #0x0
    5a30:	b	4c1c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x9c>
    5a34:	stp	x19, x20, [sp, #16]
    5a38:	stp	x21, x22, [sp, #32]
    5a3c:	stp	x25, x26, [sp, #64]
    5a40:	stp	x27, x28, [sp, #80]
    5a44:	bl	d0 <_ZN4llvm3isaINS_10StringInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    5a48:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    5a4c:	add	x0, x0, #0x0
    5a50:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNK4llvm13format_objectIJjEE7snprintEPcj:

0000000000000000 <_ZNK4llvm13format_objectIJjEE7snprintEPcj>:
   0:	mov	x3, x0
   4:	mov	x0, x1
   8:	mov	w1, w2
   c:	ldr	x2, [x3, #8]
  10:	ldr	w3, [x3, #16]
  14:	b	0 <snprintf>

Disassembly of section .text._ZN4llvm5TwineC2EPKc:

0000000000000000 <_ZN4llvm5TwineC1EPKc>:
   0:	ldrb	w2, [x1]
   4:	mov	w3, #0x101                 	// #257
   8:	stp	xzr, xzr, [x0]
   c:	strh	w3, [x0, #16]
  10:	cbz	w2, 20 <_ZN4llvm5TwineC1EPKc+0x20>
  14:	mov	w2, #0x3                   	// #3
  18:	str	x1, [x0]
  1c:	strb	w2, [x0, #16]
  20:	ret

Disassembly of section .text._ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:

0000000000000000 <_ZN4llvm5TwineC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
   0:	mov	w2, #0x104                 	// #260
   4:	stp	x1, xzr, [x0]
   8:	strh	w2, [x0, #16]
   c:	ret

Disassembly of section .text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_:

0000000000000000 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x8
  10:	mov	x20, x1
  14:	str	x21, [sp, #32]
  18:	mov	x21, x0
  1c:	bl	0 <strlen>
  20:	mov	x4, x0
  24:	mov	x2, #0x0                   	// #0
  28:	mov	x1, #0x0                   	// #0
  2c:	mov	x3, x21
  30:	mov	x0, x20
  34:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
  38:	mov	x1, x0
  3c:	add	x2, x19, #0x10
  40:	str	x2, [x19]
  44:	mov	x2, x0
  48:	ldr	x0, [x2], #16
  4c:	cmp	x0, x2
  50:	b.eq	84 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_+0x84>  // b.none
  54:	ldr	x3, [x1, #16]
  58:	str	x0, [x19]
  5c:	str	x3, [x19, #16]
  60:	ldr	x0, [x1, #8]
  64:	str	x0, [x19, #8]
  68:	stp	x2, xzr, [x1]
  6c:	mov	x0, x19
  70:	strb	wzr, [x1, #16]
  74:	ldp	x19, x20, [sp, #16]
  78:	ldr	x21, [sp, #32]
  7c:	ldp	x29, x30, [sp], #48
  80:	ret
  84:	ldp	x4, x5, [x1, #16]
  88:	stp	x4, x5, [x19, #16]
  8c:	b	60 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_+0x60>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-128]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x1
  10:	stp	x21, x22, [sp, #32]
  14:	stp	x23, x24, [sp, #48]
  18:	mov	x23, x0
  1c:	mov	x0, #0xffffffff            	// #4294967295
  20:	str	x1, [sp, #104]
  24:	cmp	x1, x0
  28:	b.hi	398 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x398>  // b.pmore
  2c:	ldr	w0, [x23, #12]
  30:	mov	x20, #0xffffffff            	// #4294967295
  34:	str	x20, [sp, #120]
  38:	add	x0, x0, #0x2
  3c:	orr	x0, x0, x0, lsr #1
  40:	orr	x0, x0, x0, lsr #2
  44:	orr	x0, x0, x0, lsr #4
  48:	orr	x0, x0, x0, lsr #8
  4c:	orr	x22, x0, x0, lsr #16
  50:	orr	x22, x22, x0, lsr #32
  54:	add	x22, x22, #0x1
  58:	cmp	x22, x19
  5c:	csel	x22, x22, x19, cs  // cs = hs, nlast
  60:	cmp	x22, x20
  64:	b.hi	364 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x364>  // b.pmore
  68:	add	x0, x22, x22, lsl #3
  6c:	str	x22, [sp, #112]
  70:	lsl	x0, x0, #5
  74:	bl	0 <malloc>
  78:	mov	x24, x0
  7c:	cbz	x0, 380 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x380>
  80:	ldr	w21, [x23, #8]
  84:	mov	w0, #0x120                 	// #288
  88:	ldr	x20, [x23]
  8c:	umaddl	x21, w21, w0, x20
  90:	cmp	x20, x21
  94:	b.eq	1ec <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x1ec>  // b.none
  98:	mov	x19, x24
  9c:	stp	x25, x26, [sp, #64]
  a0:	mov	w25, #0x1                   	// #1
  a4:	mov	x26, #0xfffffffffffffff8    	// #-8
  a8:	stp	x27, x28, [sp, #80]
  ac:	mov	w27, #0x10                  	// #16
  b0:	str	xzr, [x19]
  b4:	stp	w25, wzr, [x19, #8]
  b8:	cbnz	w25, 2d0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x2d0>
  bc:	ldr	w1, [x19, #24]
  c0:	sub	w0, w1, #0x1
  c4:	tst	w0, w1
  c8:	b.ne	420 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x420>  // b.any
  cc:	ldr	x0, [x19, #16]
  d0:	ubfiz	x1, x1, #3, #32
  d4:	add	x1, x0, x1
  d8:	cmp	x0, x1
  dc:	b.eq	2e4 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x2e4>  // b.none
  e0:	str	x26, [x0], #8
  e4:	cmp	x1, x0
  e8:	b.ne	e0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0xe0>  // b.any
  ec:	ldr	w1, [x19, #8]
  f0:	lsr	w1, w1, #1
  f4:	ldr	w0, [x20, #8]
  f8:	mov	w2, w0
  fc:	lsr	w0, w0, #1
 100:	bfi	w2, w1, #1, #31
 104:	str	w2, [x20, #8]
 108:	ldp	w1, w2, [x19, #8]
 10c:	bfi	w1, w0, #1, #31
 110:	str	w1, [x19, #8]
 114:	ldr	w0, [x20, #12]
 118:	str	w0, [x19, #12]
 11c:	str	w2, [x20, #12]
 120:	ldrb	w0, [x19, #8]
 124:	tbnz	w0, #0, 21c <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x21c>
 128:	ldrb	w0, [x20, #8]
 12c:	tbnz	w0, #0, 324 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x324>
 130:	ldr	x1, [x20, #16]
 134:	ldr	x0, [x19, #16]
 138:	str	x1, [x19, #16]
 13c:	str	x0, [x20, #16]
 140:	ldrb	w0, [x19, #8]
 144:	tbnz	w0, #0, 400 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x400>
 148:	ldrb	w0, [x20, #8]
 14c:	tbnz	w0, #0, 400 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x400>
 150:	ldr	w1, [x20, #24]
 154:	ldr	w0, [x19, #24]
 158:	str	w1, [x19, #24]
 15c:	str	w0, [x20, #24]
 160:	stp	wzr, w27, [x19, #152]
 164:	add	x0, x19, #0xa0
 168:	str	x0, [x19, #144]
 16c:	ldr	w28, [x20, #152]
 170:	cbnz	w28, 294 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x294>
 174:	add	x20, x20, #0x120
 178:	add	x19, x19, #0x120
 17c:	cmp	x21, x20
 180:	b.ne	b0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0xb0>  // b.any
 184:	ldr	w21, [x23, #8]
 188:	mov	w0, #0x120                 	// #288
 18c:	ldr	x19, [x23]
 190:	umaddl	x21, w21, w0, x19
 194:	cmp	x19, x21
 198:	b.eq	460 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x460>  // b.none
 19c:	nop
 1a0:	ldur	x0, [x21, #-144]
 1a4:	sub	x21, x21, #0x120
 1a8:	add	x1, x21, #0xa0
 1ac:	cmp	x0, x1
 1b0:	b.eq	1b8 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x1b8>  // b.none
 1b4:	bl	0 <free>
 1b8:	ldrb	w0, [x21, #8]
 1bc:	tbnz	w0, #0, 1d8 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x1d8>
 1c0:	ldr	x0, [x21, #16]
 1c4:	ldr	w1, [x21, #24]
 1c8:	lsl	x1, x1, #3
 1cc:	bl	0 <_ZdlPvm>
 1d0:	ldrb	w0, [x21, #8]
 1d4:	tbnz	w0, #0, 400 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x400>
 1d8:	cmp	x21, x19
 1dc:	b.ne	1a0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x1a0>  // b.any
 1e0:	ldp	x25, x26, [sp, #64]
 1e4:	ldp	x27, x28, [sp, #80]
 1e8:	ldr	x21, [x23]
 1ec:	add	x0, x23, #0x10
 1f0:	cmp	x21, x0
 1f4:	b.eq	200 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x200>  // b.none
 1f8:	mov	x0, x21
 1fc:	bl	0 <free>
 200:	ldp	x19, x20, [sp, #16]
 204:	str	x24, [x23]
 208:	str	w22, [x23, #12]
 20c:	ldp	x21, x22, [sp, #32]
 210:	ldp	x23, x24, [sp, #48]
 214:	ldp	x29, x30, [sp], #128
 218:	ret
 21c:	ldrb	w0, [x20, #8]
 220:	and	w2, w0, #0x1
 224:	tbnz	w0, #0, 2ec <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x2ec>
 228:	mov	x2, x19
 22c:	mov	x1, x20
 230:	ldrb	w3, [x1, #8]
 234:	mov	x0, #0x10                  	// #16
 238:	ldr	w4, [x1, #24]
 23c:	ldr	x5, [x1, #16]
 240:	orr	w3, w3, #0x1
 244:	strb	w3, [x1, #8]
 248:	ldrb	w3, [x1, #8]
 24c:	tbz	w3, #0, 3e0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x3e0>
 250:	ldrb	w3, [x2, #8]
 254:	tbz	w3, #0, 3e0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x3e0>
 258:	ldr	x3, [x2, x0]
 25c:	str	x3, [x1, x0]
 260:	add	x0, x0, #0x8
 264:	cmp	x0, #0x90
 268:	b.ne	248 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x248>  // b.any
 26c:	ldrb	w0, [x2, #8]
 270:	str	x5, [x2, #16]
 274:	and	w0, w0, #0xfffffffe
 278:	strb	w0, [x2, #8]
 27c:	str	w4, [x2, #24]
 280:	add	x0, x19, #0xa0
 284:	stp	wzr, w27, [x19, #152]
 288:	str	x0, [x19, #144]
 28c:	ldr	w28, [x20, #152]
 290:	cbz	w28, 174 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x174>
 294:	add	x3, x19, #0x90
 298:	add	x1, x20, #0x90
 29c:	cmp	x3, x1
 2a0:	b.eq	174 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x174>  // b.none
 2a4:	ldr	x2, [x20, #144]
 2a8:	add	x1, x20, #0xa0
 2ac:	cmp	x2, x1
 2b0:	b.eq	330 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x330>  // b.none
 2b4:	str	w28, [x19, #152]
 2b8:	str	x2, [x19, #144]
 2bc:	ldr	w0, [x20, #156]
 2c0:	str	w0, [x19, #156]
 2c4:	str	x1, [x20, #144]
 2c8:	stp	wzr, wzr, [x20, #152]
 2cc:	b	174 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x174>
 2d0:	add	x0, x19, #0x10
 2d4:	mov	x1, #0x80                  	// #128
 2d8:	add	x1, x0, x1
 2dc:	cmp	x0, x1
 2e0:	b.ne	e0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0xe0>  // b.any
 2e4:	mov	w1, #0x0                   	// #0
 2e8:	b	f4 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0xf4>
 2ec:	mov	x1, #0x10                  	// #16
 2f0:	cbz	w2, 3e0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x3e0>
 2f4:	ldr	x2, [x20, x1]
 2f8:	cmp	x1, #0x88
 2fc:	ldr	x0, [x19, x1]
 300:	str	x2, [x19, x1]
 304:	str	x0, [x20, x1]
 308:	b.eq	160 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x160>  // b.none
 30c:	ldrb	w0, [x19, #8]
 310:	add	x1, x1, #0x8
 314:	tbz	w0, #0, 3e0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x3e0>
 318:	ldrb	w0, [x20, #8]
 31c:	and	w2, w0, #0x1
 320:	b	2f0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x2f0>
 324:	mov	x2, x20
 328:	mov	x1, x19
 32c:	b	230 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x230>
 330:	cmp	w28, #0x10
 334:	mov	w4, w28
 338:	ubfiz	x2, x28, #3, #32
 33c:	b.hi	3ac <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x3ac>  // b.pmore
 340:	str	x4, [sp, #96]
 344:	bl	0 <memcpy>
 348:	ldr	x4, [sp, #96]
 34c:	ldr	w0, [x19, #156]
 350:	cmp	x4, x0
 354:	b.hi	440 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x440>  // b.pmore
 358:	str	w28, [x19, #152]
 35c:	str	wzr, [x20, #152]
 360:	b	174 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x174>
 364:	mov	w0, #0xfffffee0            	// #-288
 368:	mov	x22, x20
 36c:	movk	x0, #0x11f, lsl #32
 370:	str	x20, [sp, #112]
 374:	bl	0 <malloc>
 378:	mov	x24, x0
 37c:	cbnz	x0, 80 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x80>
 380:	mov	x24, #0x0                   	// #0
 384:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 388:	mov	w1, #0x1                   	// #1
 38c:	add	x0, x0, #0x0
 390:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 394:	b	80 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x80>
 398:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 39c:	mov	w1, #0x1                   	// #1
 3a0:	add	x0, x0, #0x0
 3a4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 3a8:	b	2c <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x2c>
 3ac:	mov	x1, x0
 3b0:	mov	x2, x4
 3b4:	mov	x0, x3
 3b8:	mov	x3, #0x8                   	// #8
 3bc:	str	x4, [sp, #96]
 3c0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 3c4:	ldr	w3, [x20, #152]
 3c8:	ldr	x4, [sp, #96]
 3cc:	lsl	x2, x3, #3
 3d0:	ldr	x0, [x19, #144]
 3d4:	ldr	x1, [x20, #144]
 3d8:	cbz	x3, 34c <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x34c>
 3dc:	b	340 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x340>
 3e0:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 3e4:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 3e8:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 3ec:	add	x3, x3, #0x0
 3f0:	add	x1, x1, #0x0
 3f4:	add	x0, x0, #0x0
 3f8:	mov	w2, #0x44e                 	// #1102
 3fc:	bl	0 <__assert_fail>
 400:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 404:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 408:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 40c:	add	x3, x3, #0x0
 410:	add	x1, x1, #0x0
 414:	add	x0, x0, #0x0
 418:	mov	w2, #0x45b                 	// #1115
 41c:	bl	0 <__assert_fail>
 420:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 424:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 428:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 42c:	add	x3, x3, #0x0
 430:	add	x1, x1, #0x0
 434:	add	x0, x0, #0x0
 438:	mov	w2, #0x15b                 	// #347
 43c:	bl	0 <__assert_fail>
 440:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 444:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 448:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 44c:	add	x3, x3, #0x0
 450:	add	x1, x1, #0x0
 454:	add	x0, x0, #0x0
 458:	mov	w2, #0x43                  	// #67
 45c:	bl	0 <__assert_fail>
 460:	ldp	x25, x26, [sp, #64]
 464:	ldp	x27, x28, [sp, #80]
 468:	b	1ec <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x1ec>

Disassembly of section .text._ZN4llvm17StringMapIterBaseINS_17StringMapIteratorISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS4_EEEENS_14StringMapEntryIS7_EEEC2EPPNS_18StringMapEntryBaseEb:

0000000000000000 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS4_EEEENS_14StringMapEntryIS7_EEEC1EPPNS_18StringMapEntryBaseEb>:
   0:	str	x1, [x0]
   4:	tst	w2, #0xff
   8:	b.ne	38 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS4_EEEENS_14StringMapEntryIS7_EEEC1EPPNS_18StringMapEntryBaseEb+0x38>  // b.any
   c:	ldr	x2, [x1]
  10:	cmp	x2, #0x0
  14:	ccmn	x2, #0x8, #0x4, ne  // ne = any
  18:	b.ne	38 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS4_EEEENS_14StringMapEntryIS7_EEEC1EPPNS_18StringMapEntryBaseEb+0x38>  // b.any
  1c:	add	x1, x1, #0x8
  20:	mov	x3, x1
  24:	ldr	x2, [x1], #8
  28:	cmp	x2, #0x0
  2c:	ccmn	x2, #0x8, #0x4, ne  // ne = any
  30:	b.eq	20 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS4_EEEENS_14StringMapEntryIS7_EEEC1EPPNS_18StringMapEntryBaseEb+0x20>  // b.none
  34:	str	x3, [x0]
  38:	ret

Disassembly of section .text._ZN4llvm17StringMapIterBaseINS_17StringMapIteratorISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS4_EEEENS_14StringMapEntryIS7_EEEC2EPPNS_18StringMapEntryBaseEb:

0000000000000000 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS4_EEEENS_14StringMapEntryIS7_EEEC1EPPNS_18StringMapEntryBaseEb>:
   0:	str	x1, [x0]
   4:	tst	w2, #0xff
   8:	b.ne	38 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS4_EEEENS_14StringMapEntryIS7_EEEC1EPPNS_18StringMapEntryBaseEb+0x38>  // b.any
   c:	ldr	x2, [x1]
  10:	cmp	x2, #0x0
  14:	ccmn	x2, #0x8, #0x4, ne  // ne = any
  18:	b.ne	38 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS4_EEEENS_14StringMapEntryIS7_EEEC1EPPNS_18StringMapEntryBaseEb+0x38>  // b.any
  1c:	add	x1, x1, #0x8
  20:	mov	x3, x1
  24:	ldr	x2, [x1], #8
  28:	cmp	x2, #0x0
  2c:	ccmn	x2, #0x8, #0x4, ne  // ne = any
  30:	b.eq	20 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS4_EEEENS_14StringMapEntryIS7_EEEC1EPPNS_18StringMapEntryBaseEb+0x20>  // b.none
  34:	str	x3, [x0]
  38:	ret

Disassembly of section .text._ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag:

0000000000000000 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	sub	x20, x2, x1
  14:	stp	x23, x24, [sp, #48]
  18:	asr	x3, x20, #3
  1c:	ldr	x23, [x0]
  20:	stp	x21, x22, [sp, #32]
  24:	mov	x21, x2
  28:	ldr	x0, [x0, #16]
  2c:	mov	x22, x1
  30:	sub	x0, x0, x23
  34:	asr	x0, x0, #3
  38:	cmp	x0, x20, asr #3
  3c:	b.cs	a8 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xa8>  // b.hs, b.nlast
  40:	mov	x0, #0xfffffffffffffff     	// #1152921504606846975
  44:	cmp	x3, x0
  48:	b.hi	144 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x144>  // b.pmore
  4c:	mov	x24, #0x0                   	// #0
  50:	cbz	x3, 64 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x64>
  54:	mov	x0, x20
  58:	bl	0 <_Znwm>
  5c:	ldr	x23, [x19]
  60:	mov	x24, x0
  64:	cmp	x22, x21
  68:	b.eq	7c <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x7c>  // b.none
  6c:	mov	x1, x22
  70:	mov	x2, x20
  74:	mov	x0, x24
  78:	bl	0 <memcpy>
  7c:	cbz	x23, 88 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x88>
  80:	mov	x0, x23
  84:	bl	0 <_ZdlPv>
  88:	add	x20, x24, x20
  8c:	stp	x24, x20, [x19]
  90:	str	x20, [x19, #16]
  94:	ldp	x19, x20, [sp, #16]
  98:	ldp	x21, x22, [sp, #32]
  9c:	ldp	x23, x24, [sp, #48]
  a0:	ldp	x29, x30, [sp], #64
  a4:	ret
  a8:	ldr	x4, [x19, #8]
  ac:	sub	x2, x4, x23
  b0:	cmp	x3, x2, asr #3
  b4:	b.hi	f4 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xf4>  // b.pmore
  b8:	cmp	x1, x21
  bc:	b.eq	d0 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xd0>  // b.none
  c0:	mov	x2, x20
  c4:	mov	x0, x23
  c8:	bl	0 <memmove>
  cc:	ldr	x4, [x19, #8]
  d0:	add	x20, x23, x20
  d4:	cmp	x20, x4
  d8:	b.eq	94 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x94>  // b.none
  dc:	str	x20, [x19, #8]
  e0:	ldp	x19, x20, [sp, #16]
  e4:	ldp	x21, x22, [sp, #32]
  e8:	ldp	x23, x24, [sp, #48]
  ec:	ldp	x29, x30, [sp], #64
  f0:	ret
  f4:	add	x20, x1, x2
  f8:	cmp	x1, x20
  fc:	b.eq	10c <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x10c>  // b.none
 100:	mov	x0, x23
 104:	bl	0 <memmove>
 108:	ldr	x4, [x19, #8]
 10c:	subs	x21, x21, x20
 110:	b.eq	128 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x128>  // b.none
 114:	mov	x0, x4
 118:	mov	x1, x20
 11c:	mov	x2, x21
 120:	bl	0 <memmove>
 124:	mov	x4, x0
 128:	add	x21, x4, x21
 12c:	str	x21, [x19, #8]
 130:	ldp	x19, x20, [sp, #16]
 134:	ldp	x21, x22, [sp, #32]
 138:	ldp	x23, x24, [sp, #48]
 13c:	ldp	x29, x30, [sp], #64
 140:	ret
 144:	adrp	x0, 0 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag>
 148:	add	x0, x0, #0x0
 14c:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE24_M_get_insert_unique_posERS4_:

0000000000000000 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE24_M_get_insert_unique_posERS4_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	ldr	x19, [x0, #16]
  14:	cbz	x19, 78 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE24_M_get_insert_unique_posERS4_+0x78>
  18:	ldr	x5, [x1]
  1c:	mov	w4, #0x1                   	// #1
  20:	ldr	x3, [x19, #32]
  24:	cmp	x3, x5
  28:	b.ls	4c <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE24_M_get_insert_unique_posERS4_+0x4c>  // b.plast
  2c:	nop
  30:	ldr	x2, [x19, #16]
  34:	cbz	x2, 58 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE24_M_get_insert_unique_posERS4_+0x58>
  38:	mov	x19, x2
  3c:	mov	w4, #0x1                   	// #1
  40:	ldr	x3, [x19, #32]
  44:	cmp	x3, x5
  48:	b.hi	30 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE24_M_get_insert_unique_posERS4_+0x30>  // b.pmore
  4c:	ldr	x2, [x19, #24]
  50:	mov	w4, #0x0                   	// #0
  54:	cbnz	x2, 38 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE24_M_get_insert_unique_posERS4_+0x38>
  58:	mov	x1, x19
  5c:	cbnz	w4, 7c <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE24_M_get_insert_unique_posERS4_+0x7c>
  60:	cmp	x5, x3
  64:	csel	x0, x19, xzr, ls  // ls = plast
  68:	csel	x1, x1, xzr, hi  // hi = pmore
  6c:	ldp	x19, x20, [sp, #16]
  70:	ldp	x29, x30, [sp], #32
  74:	ret
  78:	add	x19, x0, #0x8
  7c:	ldr	x0, [x0, #24]
  80:	cmp	x0, x19
  84:	b.eq	a4 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE24_M_get_insert_unique_posERS4_+0xa4>  // b.none
  88:	mov	x0, x19
  8c:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  90:	mov	x1, x19
  94:	mov	x19, x0
  98:	ldr	x5, [x20]
  9c:	ldr	x3, [x0, #32]
  a0:	b	60 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE24_M_get_insert_unique_posERS4_+0x60>
  a4:	mov	x1, x19
  a8:	mov	x0, #0x0                   	// #0
  ac:	ldp	x19, x20, [sp, #16]
  b0:	ldp	x29, x30, [sp], #32
  b4:	ret

Disassembly of section .text._ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_:

0000000000000000 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	add	x0, x0, #0x8
  14:	stp	x21, x22, [sp, #32]
  18:	cmp	x1, x0
  1c:	mov	x21, x2
  20:	b.eq	bc <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0xbc>  // b.none
  24:	ldr	x22, [x2]
  28:	mov	x19, x1
  2c:	ldr	x0, [x1, #32]
  30:	cmp	x0, x22
  34:	b.ls	80 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x80>  // b.plast
  38:	ldr	x0, [x20, #24]
  3c:	mov	x1, x0
  40:	cmp	x0, x19
  44:	b.eq	70 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x70>  // b.none
  48:	mov	x0, x19
  4c:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  50:	mov	x3, x0
  54:	ldr	x0, [x0, #32]
  58:	cmp	x0, x22
  5c:	b.cs	d8 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0xd8>  // b.hs, b.nlast
  60:	ldr	x1, [x3, #24]
  64:	cmp	x1, #0x0
  68:	csel	x0, x19, xzr, ne  // ne = any
  6c:	csel	x1, x3, x19, eq  // eq = none
  70:	ldp	x19, x20, [sp, #16]
  74:	ldp	x21, x22, [sp, #32]
  78:	ldp	x29, x30, [sp], #48
  7c:	ret
  80:	b.cs	f0 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0xf0>  // b.hs, b.nlast
  84:	ldr	x0, [x20, #32]
  88:	cmp	x0, x1
  8c:	b.eq	120 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x120>  // b.none
  90:	mov	x0, x1
  94:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
  98:	mov	x3, x0
  9c:	ldr	x0, [x0, #32]
  a0:	cmp	x0, x22
  a4:	b.ls	d8 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0xd8>  // b.plast
  a8:	ldr	x1, [x19, #24]
  ac:	cmp	x1, #0x0
  b0:	csel	x0, x3, xzr, ne  // ne = any
  b4:	csel	x1, x3, x19, ne  // ne = any
  b8:	b	70 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x70>
  bc:	ldr	x0, [x20, #40]
  c0:	cbz	x0, d8 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0xd8>
  c4:	ldr	x19, [x20, #32]
  c8:	ldr	x1, [x2]
  cc:	ldr	x0, [x19, #32]
  d0:	cmp	x1, x0
  d4:	b.hi	108 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x108>  // b.pmore
  d8:	mov	x1, x21
  dc:	mov	x0, x20
  e0:	ldp	x19, x20, [sp, #16]
  e4:	ldp	x21, x22, [sp, #32]
  e8:	ldp	x29, x30, [sp], #48
  ec:	b	0 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_>
  f0:	mov	x0, x1
  f4:	mov	x1, #0x0                   	// #0
  f8:	ldp	x19, x20, [sp, #16]
  fc:	ldp	x21, x22, [sp, #32]
 100:	ldp	x29, x30, [sp], #48
 104:	ret
 108:	mov	x1, x19
 10c:	mov	x0, #0x0                   	// #0
 110:	ldp	x19, x20, [sp, #16]
 114:	ldp	x21, x22, [sp, #32]
 118:	ldp	x29, x30, [sp], #48
 11c:	ret
 120:	mov	x1, x0
 124:	mov	x0, #0x0                   	// #0
 128:	b	70 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x70>

Disassembly of section .text._ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj:

0000000000000000 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-192]!
   4:	cmp	w1, #0x10
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	stp	x21, x22, [sp, #32]
  18:	mov	w22, w1
  1c:	str	x23, [sp, #48]
  20:	ldrb	w0, [x0, #8]
  24:	and	w2, w0, #0x1
  28:	b.ls	98 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x98>  // b.plast
  2c:	sub	w0, w1, #0x1
  30:	orr	x0, x0, x0, lsr #1
  34:	orr	x0, x0, x0, lsr #2
  38:	orr	x0, x0, x0, lsr #4
  3c:	orr	x0, x0, x0, lsr #8
  40:	orr	x0, x0, x0, lsr #16
  44:	add	x0, x0, #0x1
  48:	cmp	w0, #0x40
  4c:	mov	w22, w0
  50:	b.hi	358 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x358>  // b.pmore
  54:	cbnz	w2, 374 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x374>
  58:	ldr	w21, [x19, #24]
  5c:	mov	x0, #0x200                 	// #512
  60:	ldr	x20, [x19, #16]
  64:	mov	w22, #0x40                  	// #64
  68:	bl	0 <_Znwm>
  6c:	str	x0, [x19, #16]
  70:	ldr	x0, [x19, #8]
  74:	str	w22, [x19, #24]
  78:	ubfiz	x1, x21, #3, #32
  7c:	and	x0, x0, #0x1
  80:	str	x0, [x19, #8]
  84:	add	x7, x20, x1
  88:	cbz	x0, c4 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0xc4>
  8c:	add	x0, x19, #0x10
  90:	mov	x2, #0x80                  	// #128
  94:	b	dc <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0xdc>
  98:	cbnz	w2, 180 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x180>
  9c:	orr	w0, w0, #0x1
  a0:	strb	w0, [x19, #8]
  a4:	ldr	w21, [x19, #24]
  a8:	ldr	x0, [x19, #8]
  ac:	ldr	x20, [x19, #16]
  b0:	and	x0, x0, #0x1
  b4:	str	x0, [x19, #8]
  b8:	ubfiz	x1, x21, #3, #32
  bc:	add	x7, x20, x1
  c0:	cbnz	x0, 8c <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x8c>
  c4:	ldr	w2, [x19, #24]
  c8:	sub	w0, w2, #0x1
  cc:	tst	w0, w2
  d0:	b.ne	440 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x440>  // b.any
  d4:	ldr	x0, [x19, #16]
  d8:	ubfiz	x2, x2, #3, #32
  dc:	add	x2, x0, x2
  e0:	mov	x3, #0xfffffffffffffff8    	// #-8
  e4:	cmp	x0, x2
  e8:	b.eq	fc <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0xfc>  // b.none
  ec:	nop
  f0:	str	x3, [x0], #8
  f4:	cmp	x2, x0
  f8:	b.ne	f0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0xf0>  // b.any
  fc:	cmp	x7, x20
 100:	mov	x2, x20
 104:	add	x9, x19, #0x10
 108:	b.ne	11c <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x11c>  // b.any
 10c:	b	308 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x308>
 110:	add	x2, x2, #0x8
 114:	cmp	x7, x2
 118:	b.eq	308 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x308>  // b.none
 11c:	ldr	x0, [x2]
 120:	cmn	x0, #0x8
 124:	ccmn	x0, #0x10, #0x4, ne  // ne = any
 128:	b.eq	110 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x110>  // b.none
 12c:	ldrb	w3, [x19, #8]
 130:	tbz	w3, #0, 2e0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x2e0>
 134:	mov	x5, x9
 138:	mov	w4, #0xf                   	// #15
 13c:	lsr	w3, w0, #9
 140:	eor	w3, w3, w0, lsr #4
 144:	and	w8, w3, w4
 148:	mov	x3, x8
 14c:	ubfiz	x6, x8, #3, #28
 150:	ldr	x8, [x5, x8, lsl #3]
 154:	add	x6, x5, x6
 158:	cmp	x8, x0
 15c:	b.ne	320 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x320>  // b.any
 160:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 164:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 168:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 16c:	add	x3, x3, #0x0
 170:	add	x1, x1, #0x0
 174:	add	x0, x0, #0x0
 178:	mov	w2, #0x17a                 	// #378
 17c:	bl	0 <__assert_fail>
 180:	add	x23, x19, #0x10
 184:	add	x1, x19, #0x90
 188:	add	x20, sp, #0x40
 18c:	mov	x0, x23
 190:	mov	x21, x20
 194:	nop
 198:	ldr	x2, [x0]
 19c:	cmn	x2, #0x8
 1a0:	ccmn	x2, #0x10, #0x4, ne  // ne = any
 1a4:	b.eq	1b8 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x1b8>  // b.none
 1a8:	sub	x3, x21, x20
 1ac:	cmp	x3, #0x7f
 1b0:	b.hi	420 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x420>  // b.pmore
 1b4:	str	x2, [x21], #8
 1b8:	add	x0, x0, #0x8
 1bc:	cmp	x0, x1
 1c0:	b.ne	198 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x198>  // b.any
 1c4:	cmp	w22, #0x10
 1c8:	b.ls	1e8 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x1e8>  // b.plast
 1cc:	ldrb	w1, [x19, #8]
 1d0:	ubfiz	x0, x22, #3, #32
 1d4:	and	w1, w1, #0xfffffffe
 1d8:	strb	w1, [x19, #8]
 1dc:	bl	0 <_Znwm>
 1e0:	str	x0, [x19, #16]
 1e4:	str	w22, [x19, #24]
 1e8:	ldr	x0, [x19, #8]
 1ec:	and	x0, x0, #0x1
 1f0:	str	x0, [x19, #8]
 1f4:	cbnz	x0, 384 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x384>
 1f8:	ldr	w0, [x19, #24]
 1fc:	sub	w1, w0, #0x1
 200:	tst	w1, w0
 204:	b.ne	440 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x440>  // b.any
 208:	ubfiz	x1, x0, #3, #32
 20c:	ldr	x0, [x19, #16]
 210:	add	x1, x0, x1
 214:	cmp	x0, x1
 218:	mov	x2, #0xfffffffffffffff8    	// #-8
 21c:	b.eq	22c <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x22c>  // b.none
 220:	str	x2, [x0], #8
 224:	cmp	x1, x0
 228:	b.ne	220 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x220>  // b.any
 22c:	mov	x0, x20
 230:	cmp	x21, x20
 234:	b.ne	248 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x248>  // b.any
 238:	b	2cc <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x2cc>
 23c:	add	x0, x0, #0x8
 240:	cmp	x21, x0
 244:	b.eq	2cc <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x2cc>  // b.none
 248:	ldr	x1, [x0]
 24c:	cmn	x1, #0x8
 250:	ccmn	x1, #0x10, #0x4, ne  // ne = any
 254:	b.eq	23c <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x23c>  // b.none
 258:	ldrb	w2, [x19, #8]
 25c:	tbz	w2, #0, 2f4 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x2f4>
 260:	mov	x4, x23
 264:	mov	w3, #0xf                   	// #15
 268:	lsr	w2, w1, #9
 26c:	eor	w2, w2, w1, lsr #4
 270:	and	w6, w2, w3
 274:	mov	x2, x6
 278:	ubfiz	x5, x6, #3, #28
 27c:	ldr	x6, [x4, x6, lsl #3]
 280:	add	x5, x4, x5
 284:	cmp	x1, x6
 288:	b.eq	160 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x160>  // b.none
 28c:	mov	w8, #0x1                   	// #1
 290:	mov	x7, #0x0                   	// #0
 294:	cmn	x6, #0x8
 298:	b.ne	3c8 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x3c8>  // b.any
 29c:	cmp	x7, #0x0
 2a0:	csel	x7, x7, x5, ne  // ne = any
 2a4:	str	x1, [x7]
 2a8:	ldr	w1, [x19, #8]
 2ac:	lsr	w2, w1, #1
 2b0:	adds	w2, w2, #0x1
 2b4:	b.mi	400 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x400>  // b.first
 2b8:	bfi	w1, w2, #1, #31
 2bc:	str	w1, [x19, #8]
 2c0:	add	x0, x0, #0x8
 2c4:	cmp	x21, x0
 2c8:	b.ne	248 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x248>  // b.any
 2cc:	ldp	x19, x20, [sp, #16]
 2d0:	ldp	x21, x22, [sp, #32]
 2d4:	ldr	x23, [sp, #48]
 2d8:	ldp	x29, x30, [sp], #192
 2dc:	ret
 2e0:	ldr	w3, [x19, #24]
 2e4:	ldr	x5, [x19, #16]
 2e8:	cbz	w3, 460 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x460>
 2ec:	sub	w4, w3, #0x1
 2f0:	b	13c <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x13c>
 2f4:	ldr	w2, [x19, #24]
 2f8:	ldr	x4, [x19, #16]
 2fc:	cbz	w2, 46c <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x46c>
 300:	sub	w3, w2, #0x1
 304:	b	268 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x268>
 308:	mov	x0, x20
 30c:	ldp	x19, x20, [sp, #16]
 310:	ldp	x21, x22, [sp, #32]
 314:	ldr	x23, [sp, #48]
 318:	ldp	x29, x30, [sp], #192
 31c:	b	0 <_ZdlPvm>
 320:	mov	w11, #0x1                   	// #1
 324:	mov	x10, #0x0                   	// #0
 328:	cmn	x8, #0x8
 32c:	b.ne	390 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x390>  // b.any
 330:	cmp	x10, #0x0
 334:	csel	x10, x10, x6, ne  // ne = any
 338:	str	x0, [x10]
 33c:	ldr	w0, [x19, #8]
 340:	lsr	w3, w0, #1
 344:	adds	w3, w3, #0x1
 348:	b.mi	400 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x400>  // b.first
 34c:	bfi	w0, w3, #1, #31
 350:	str	w0, [x19, #8]
 354:	b	110 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x110>
 358:	add	x23, x19, #0x10
 35c:	add	x1, x19, #0x90
 360:	cbnz	w2, 188 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x188>
 364:	ldr	w21, [x19, #24]
 368:	ubfiz	x0, x0, #3, #32
 36c:	ldr	x20, [x19, #16]
 370:	b	68 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x68>
 374:	add	x23, x19, #0x10
 378:	add	x1, x19, #0x90
 37c:	mov	w22, #0x40                  	// #64
 380:	b	188 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x188>
 384:	mov	x0, x23
 388:	mov	x1, #0x80                  	// #128
 38c:	b	210 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x210>
 390:	add	w3, w11, w3
 394:	cmp	x10, #0x0
 398:	and	w12, w3, w4
 39c:	ccmn	x8, #0x10, #0x0, eq  // eq = none
 3a0:	csel	x6, x6, x10, eq  // eq = none
 3a4:	add	w11, w11, #0x1
 3a8:	and	w3, w3, w4
 3ac:	add	x13, x5, x12, lsl #3
 3b0:	ldr	x8, [x5, x12, lsl #3]
 3b4:	cmp	x0, x8
 3b8:	b.eq	160 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x160>  // b.none
 3bc:	mov	x10, x6
 3c0:	mov	x6, x13
 3c4:	b	328 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x328>
 3c8:	add	w2, w8, w2
 3cc:	cmp	x7, #0x0
 3d0:	and	w9, w2, w3
 3d4:	ccmn	x6, #0x10, #0x0, eq  // eq = none
 3d8:	csel	x5, x5, x7, eq  // eq = none
 3dc:	add	w8, w8, #0x1
 3e0:	and	w2, w2, w3
 3e4:	add	x10, x4, x9, lsl #3
 3e8:	ldr	x6, [x4, x9, lsl #3]
 3ec:	cmp	x1, x6
 3f0:	b.eq	160 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x160>  // b.none
 3f4:	mov	x7, x5
 3f8:	mov	x5, x10
 3fc:	b	294 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x294>
 400:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 404:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 408:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 40c:	add	x3, x3, #0x0
 410:	add	x1, x1, #0x0
 414:	add	x0, x0, #0x0
 418:	mov	w2, #0x441                 	// #1089
 41c:	bl	0 <__assert_fail>
 420:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 424:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 428:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 42c:	add	x3, x3, #0x0
 430:	add	x1, x1, #0x0
 434:	add	x0, x0, #0x0
 438:	mov	w2, #0x401                 	// #1025
 43c:	bl	0 <__assert_fail>
 440:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 444:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 448:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 44c:	add	x3, x3, #0x0
 450:	add	x1, x1, #0x0
 454:	add	x0, x0, #0x0
 458:	mov	w2, #0x15b                 	// #347
 45c:	bl	0 <__assert_fail>
 460:	mov	x1, #0x0                   	// #0
 464:	str	x0, [x1]
 468:	brk	#0x3e8
 46c:	mov	x0, #0x0                   	// #0
 470:	str	x1, [x0]
 474:	brk	#0x3e8

Disassembly of section .text._ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_:

0000000000000000 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	b.eq	5c <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0x5c>  // b.none
  18:	ldr	w2, [x0, #8]
  1c:	mov	x20, x1
  20:	stp	x21, x22, [sp, #32]
  24:	ldr	w21, [x1, #8]
  28:	mov	w22, w21
  2c:	cmp	x2, w21, uxtw
  30:	b.cc	6c <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0x6c>  // b.lo, b.ul, b.last
  34:	cbz	x22, 54 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0x54>
  38:	ldr	x0, [x0]
  3c:	lsl	x2, x22, #3
  40:	ldr	x1, [x1]
  44:	bl	0 <memmove>
  48:	ldr	w0, [x19, #12]
  4c:	cmp	x22, x0
  50:	b.hi	12c <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0x12c>  // b.pmore
  54:	str	w21, [x19, #8]
  58:	ldp	x21, x22, [sp, #32]
  5c:	mov	x0, x19
  60:	ldp	x19, x20, [sp, #16]
  64:	ldp	x29, x30, [sp], #64
  68:	ret
  6c:	ldr	w1, [x0, #12]
  70:	str	x23, [sp, #48]
  74:	cmp	x22, x1
  78:	b.hi	104 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0x104>  // b.pmore
  7c:	lsl	x23, x2, #3
  80:	ldr	x0, [x0]
  84:	ldr	x3, [x20]
  88:	cbnz	x2, d4 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0xd4>
  8c:	lsl	x2, x22, #3
  90:	add	x1, x3, x23
  94:	add	x3, x3, x2
  98:	cmp	x1, x3
  9c:	b.eq	b8 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0xb8>  // b.none
  a0:	sub	x2, x2, x23
  a4:	add	x0, x0, x23
  a8:	bl	0 <memcpy>
  ac:	ldr	w0, [x19, #12]
  b0:	cmp	x22, x0
  b4:	b.hi	130 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0x130>  // b.pmore
  b8:	ldr	x23, [sp, #48]
  bc:	str	w21, [x19, #8]
  c0:	mov	x0, x19
  c4:	ldp	x19, x20, [sp, #16]
  c8:	ldp	x21, x22, [sp, #32]
  cc:	ldp	x29, x30, [sp], #64
  d0:	ret
  d4:	mov	x1, x3
  d8:	mov	x2, x23
  dc:	bl	0 <memmove>
  e0:	ldr	w2, [x20, #8]
  e4:	ldr	x0, [x19]
  e8:	ldr	x1, [x20]
  ec:	lsl	x2, x2, #3
  f0:	add	x3, x1, x2
  f4:	add	x1, x1, x23
  f8:	cmp	x1, x3
  fc:	b.ne	a0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0xa0>  // b.any
 100:	b	ac <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0xac>
 104:	str	wzr, [x0, #8]
 108:	add	x1, x0, #0x10
 10c:	mov	x2, x22
 110:	mov	x3, #0x8                   	// #8
 114:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 118:	mov	x23, #0x0                   	// #0
 11c:	ldr	w2, [x20, #8]
 120:	ldr	x0, [x19]
 124:	ldr	x1, [x20]
 128:	b	ec <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0xec>
 12c:	str	x23, [sp, #48]
 130:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_>
 134:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_>
 138:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_>
 13c:	add	x3, x3, #0x0
 140:	add	x1, x1, #0x0
 144:	add	x0, x0, #0x0
 148:	mov	w2, #0x43                  	// #67
 14c:	bl	0 <__assert_fail>

StringMatcher.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>:
       0:	stp	x29, x30, [sp, #-272]!
       4:	mov	x29, sp
       8:	stp	x25, x26, [sp, #64]
       c:	mov	x25, x1
      10:	stp	x19, x20, [sp, #16]
      14:	mov	x19, x0
      18:	ldr	x0, [x1]
      1c:	and	w1, w4, #0xff
      20:	str	w1, [sp, #104]
      24:	ldr	x1, [x25, #8]
      28:	stp	x21, x22, [sp, #32]
      2c:	stp	x23, x24, [sp, #48]
      30:	cmp	x1, x0
      34:	stp	x27, x28, [sp, #80]
      38:	str	w2, [sp, #112]
      3c:	str	w3, [sp, #124]
      40:	b.eq	f60 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xf60>  // b.none
      44:	ldr	w0, [sp, #124]
      48:	add	x23, sp, #0xa0
      4c:	add	x3, x23, #0x10
      50:	mov	w2, #0x20                  	// #32
      54:	add	w1, w0, #0x2
      58:	mov	x0, x23
      5c:	str	x3, [sp, #160]
      60:	lsl	w1, w1, #1
      64:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc>
      68:	ldr	x2, [x25]
      6c:	ldr	w1, [sp, #112]
      70:	ldr	x4, [x2]
      74:	mov	w27, w1
      78:	ldr	x0, [x4, #8]
      7c:	cmp	x0, w1, uxtw
      80:	ldr	x0, [x25, #8]
      84:	b.eq	89c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x89c>  // b.none
      88:	add	x20, sp, #0xe0
      8c:	sub	x0, x0, x2
      90:	add	x3, x20, #0x8
      94:	str	wzr, [sp, #232]
      98:	stp	xzr, x3, [sp, #240]
      9c:	asr	x0, x0, #3
      a0:	stp	x3, xzr, [sp, #256]
      a4:	cbz	w0, 1dc <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x1dc>
      a8:	sub	w26, w0, #0x1
      ac:	mov	x24, x3
      b0:	add	x26, x26, #0x1
      b4:	mov	x22, #0x0                   	// #0
      b8:	mov	x0, #0x0                   	// #0
      bc:	lsl	x26, x26, #3
      c0:	ldr	x21, [x4]
      c4:	cbz	x0, 13c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x13c>
      c8:	ldrb	w1, [x21, x27]
      cc:	mov	x28, x24
      d0:	ldrb	w6, [x0, #32]
      d4:	cmp	w6, w1
      d8:	b.cc	4f8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x4f8>  // b.lo, b.ul, b.last
      dc:	mov	x28, x0
      e0:	ldr	x0, [x0, #16]
      e4:	cbnz	x0, d0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xd0>
      e8:	cmp	x28, x24
      ec:	b.eq	140 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x140>  // b.none
      f0:	ldrb	w0, [x28, #32]
      f4:	cmp	w0, w1
      f8:	b.hi	140 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x140>  // b.pmore
      fc:	add	x21, x28, #0x28
     100:	add	x2, x2, x22
     104:	ldp	x1, x0, [x21, #8]
     108:	cmp	x1, x0
     10c:	b.eq	1bc <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x1bc>  // b.none
     110:	ldr	x0, [x2]
     114:	str	x0, [x1], #8
     118:	add	x22, x22, #0x8
     11c:	str	x1, [x21, #8]
     120:	cmp	x26, x22
     124:	b.eq	1d0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x1d0>  // b.none
     128:	ldr	x2, [x25]
     12c:	ldr	x0, [sp, #240]
     130:	ldr	x4, [x2, x22]
     134:	ldr	x21, [x4]
     138:	cbnz	x0, c8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xc8>
     13c:	mov	x28, x24
     140:	mov	x0, #0x40                  	// #64
     144:	bl	0 <_Znwm>
     148:	mov	x1, x28
     14c:	mov	x28, x0
     150:	ldrb	w6, [x21, x27]
     154:	add	x21, x0, #0x28
     158:	add	x2, x0, #0x20
     15c:	mov	x0, x20
     160:	strb	w6, [x28, #32]
     164:	str	xzr, [x28, #40]
     168:	stp	xzr, xzr, [x21, #8]
     16c:	bl	0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     170:	mov	x6, x0
     174:	mov	x2, x1
     178:	cbz	x1, 504 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x504>
     17c:	cmp	x1, x24
     180:	cset	w0, eq  // eq = none
     184:	cmp	x6, #0x0
     188:	csinc	w0, w0, wzr, eq  // eq = none
     18c:	cbz	w0, 888 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x888>
     190:	mov	x1, x28
     194:	mov	x3, x24
     198:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
     19c:	ldr	x0, [sp, #264]
     1a0:	add	x0, x0, #0x1
     1a4:	str	x0, [sp, #264]
     1a8:	ldp	x1, x0, [x21, #8]
     1ac:	ldr	x2, [x25]
     1b0:	add	x2, x2, x22
     1b4:	cmp	x1, x0
     1b8:	b.ne	110 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x110>  // b.any
     1bc:	mov	x0, x21
     1c0:	add	x22, x22, #0x8
     1c4:	bl	0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     1c8:	cmp	x26, x22
     1cc:	b.ne	128 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x128>  // b.any
     1d0:	ldr	x0, [sp, #264]
     1d4:	cmp	x0, #0x1
     1d8:	b.eq	528 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x528>  // b.none
     1dc:	ldp	x1, x2, [sp, #160]
     1e0:	ldr	x0, [x19, #24]
     1e4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     1e8:	mov	x25, x0
     1ec:	ldp	x1, x2, [x0, #16]
     1f0:	sub	x1, x1, x2
     1f4:	cmp	x1, #0x7
     1f8:	b.ls	ce8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xce8>  // b.plast
     1fc:	mov	x0, #0x7773                	// #30579
     200:	movk	x0, #0x7469, lsl #16
     204:	movk	x0, #0x6863, lsl #32
     208:	movk	x0, #0x2820, lsl #48
     20c:	str	x0, [x2]
     210:	ldr	x0, [x25, #24]
     214:	add	x0, x0, #0x8
     218:	str	x0, [x25, #24]
     21c:	ldp	x1, x26, [x19]
     220:	ldr	x3, [x25, #16]
     224:	sub	x2, x3, x0
     228:	cmp	x2, x26
     22c:	b.cc	c80 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xc80>  // b.lo, b.ul, b.last
     230:	cbnz	x26, af4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xaf4>
     234:	cmp	x3, x0
     238:	b.eq	c9c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xc9c>  // b.none
     23c:	mov	w1, #0x5b                  	// #91
     240:	strb	w1, [x0]
     244:	mov	x1, x27
     248:	ldr	x0, [x25, #24]
     24c:	add	x0, x0, #0x1
     250:	str	x0, [x25, #24]
     254:	mov	x0, x25
     258:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     25c:	mov	x1, x0
     260:	ldp	x2, x3, [x0, #16]
     264:	sub	x2, x2, x3
     268:	cmp	x2, #0x4
     26c:	b.ls	cd4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xcd4>  // b.plast
     270:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     274:	add	x0, x0, #0x0
     278:	ldr	w2, [x0]
     27c:	ldrb	w0, [x0, #4]
     280:	str	w2, [x3]
     284:	strb	w0, [x3, #4]
     288:	ldr	x0, [x1, #24]
     28c:	add	x0, x0, #0x5
     290:	str	x0, [x1, #24]
     294:	ldp	x1, x2, [sp, #160]
     298:	ldr	x0, [x19, #24]
     29c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     2a0:	mov	x1, x0
     2a4:	ldp	x2, x3, [x0, #16]
     2a8:	sub	x2, x2, x3
     2ac:	cmp	x2, #0xf
     2b0:	b.ls	c6c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xc6c>  // b.plast
     2b4:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     2b8:	add	x0, x0, #0x0
     2bc:	ldp	x4, x5, [x0]
     2c0:	stp	x4, x5, [x3]
     2c4:	ldr	x0, [x1, #24]
     2c8:	add	x0, x0, #0x10
     2cc:	str	x0, [x1, #24]
     2d0:	ldr	x27, [sp, #248]
     2d4:	add	x0, x20, #0x8
     2d8:	cmp	x27, x0
     2dc:	b.eq	480 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x480>  // b.none
     2e0:	ldr	w0, [sp, #112]
     2e4:	adrp	x26, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     2e8:	adrp	x25, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     2ec:	add	x26, x26, #0x0
     2f0:	add	w21, w0, #0x1
     2f4:	ldr	w0, [sp, #124]
     2f8:	add	x25, x25, #0x0
     2fc:	adrp	x28, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     300:	add	w22, w0, #0x1
     304:	adrp	x24, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     308:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     30c:	add	x0, x0, #0x0
     310:	str	x0, [sp, #112]
     314:	ldp	x1, x2, [sp, #160]
     318:	ldr	x0, [x19, #24]
     31c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     320:	mov	x2, x0
     324:	ldp	x1, x3, [x0, #16]
     328:	sub	x1, x1, x3
     32c:	cmp	x1, #0x5
     330:	b.ls	870 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x870>  // b.plast
     334:	ldrh	w0, [x26, #4]
     338:	ldr	w1, [x26]
     33c:	str	w1, [x3]
     340:	strh	w0, [x3, #4]
     344:	ldr	x0, [x2, #24]
     348:	add	x0, x0, #0x6
     34c:	str	x0, [x2, #24]
     350:	ldr	x3, [x2, #16]
     354:	ldrb	w1, [x27, #32]
     358:	cmp	x3, x0
     35c:	b.ls	860 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x860>  // b.plast
     360:	add	x3, x0, #0x1
     364:	str	x3, [x2, #24]
     368:	strb	w1, [x0]
     36c:	ldp	x0, x1, [x2, #16]
     370:	sub	x0, x0, x1
     374:	cmp	x0, #0x6
     378:	b.ls	848 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x848>  // b.plast
     37c:	ldr	w0, [x25]
     380:	str	w0, [x1]
     384:	ldur	w0, [x25, #3]
     388:	stur	w0, [x1, #3]
     38c:	ldr	x0, [x2, #24]
     390:	add	x0, x0, #0x7
     394:	str	x0, [x2, #24]
     398:	ldp	x3, x1, [x27, #40]
     39c:	mov	x0, x2
     3a0:	sub	x1, x1, x3
     3a4:	asr	x1, x1, #3
     3a8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     3ac:	ldp	x2, x3, [x0, #16]
     3b0:	mov	x1, x0
     3b4:	sub	x2, x2, x3
     3b8:	cmp	x2, #0x6
     3bc:	b.ls	838 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x838>  // b.plast
     3c0:	add	x0, x28, #0x0
     3c4:	ldr	w2, [x0]
     3c8:	ldur	w0, [x0, #3]
     3cc:	str	w2, [x3]
     3d0:	stur	w0, [x3, #3]
     3d4:	ldr	x0, [x1, #24]
     3d8:	add	x0, x0, #0x7
     3dc:	str	x0, [x1, #24]
     3e0:	ldp	x3, x2, [x27, #40]
     3e4:	ldr	x0, [x19, #24]
     3e8:	sub	x2, x2, x3
     3ec:	cmp	x2, #0x8
     3f0:	ldr	x1, [x0, #16]
     3f4:	ldr	x2, [x0, #24]
     3f8:	b.eq	41c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x41c>  // b.none
     3fc:	cmp	x2, x1
     400:	b.cs	acc <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xacc>  // b.hs, b.nlast
     404:	add	x1, x2, #0x1
     408:	str	x1, [x0, #24]
     40c:	mov	w0, #0x73                  	// #115
     410:	strb	w0, [x2]
     414:	ldr	x0, [x19, #24]
     418:	ldp	x1, x2, [x0, #16]
     41c:	sub	x1, x1, x2
     420:	cmp	x1, #0xa
     424:	b.ls	828 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x828>  // b.plast
     428:	add	x1, x24, #0x0
     42c:	ldr	x3, [x1]
     430:	str	x3, [x2]
     434:	ldur	w1, [x1, #7]
     438:	stur	w1, [x2, #7]
     43c:	ldr	x1, [x0, #24]
     440:	add	x1, x1, #0xb
     444:	str	x1, [x0, #24]
     448:	ldrb	w4, [sp, #104]
     44c:	mov	w3, w22
     450:	mov	w2, w21
     454:	add	x1, x27, #0x28
     458:	mov	x0, x19
     45c:	bl	0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     460:	tst	w0, #0xff
     464:	b.ne	7e4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x7e4>  // b.any
     468:	mov	x0, x27
     46c:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
     470:	add	x1, x20, #0x8
     474:	mov	x27, x0
     478:	cmp	x0, x1
     47c:	b.ne	314 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x314>  // b.any
     480:	ldp	x1, x2, [sp, #160]
     484:	ldr	x0, [x19, #24]
     488:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     48c:	mov	x1, x0
     490:	ldp	x2, x3, [x0, #16]
     494:	sub	x2, x2, x3
     498:	cmp	x2, #0x1
     49c:	b.ls	c58 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xc58>  // b.plast
     4a0:	mov	w0, #0xa7d                 	// #2685
     4a4:	strh	w0, [x3]
     4a8:	ldr	x0, [x1, #24]
     4ac:	add	x0, x0, #0x2
     4b0:	str	x0, [x1, #24]
     4b4:	mov	w19, #0x1                   	// #1
     4b8:	ldr	x1, [sp, #240]
     4bc:	mov	x0, x20
     4c0:	bl	0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     4c4:	ldr	x0, [sp, #160]
     4c8:	add	x23, x23, #0x10
     4cc:	cmp	x0, x23
     4d0:	b.eq	4d8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x4d8>  // b.none
     4d4:	bl	0 <_ZdlPv>
     4d8:	mov	w0, w19
     4dc:	ldp	x19, x20, [sp, #16]
     4e0:	ldp	x21, x22, [sp, #32]
     4e4:	ldp	x23, x24, [sp, #48]
     4e8:	ldp	x25, x26, [sp, #64]
     4ec:	ldp	x27, x28, [sp, #80]
     4f0:	ldp	x29, x30, [sp], #272
     4f4:	ret
     4f8:	ldr	x0, [x0, #24]
     4fc:	cbnz	x0, d0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xd0>
     500:	b	e8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xe8>
     504:	ldr	x0, [x28, #40]
     508:	cbz	x0, 518 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x518>
     50c:	str	x6, [sp, #128]
     510:	bl	0 <_ZdlPv>
     514:	ldr	x6, [sp, #128]
     518:	add	x21, x6, #0x28
     51c:	mov	x0, x28
     520:	bl	0 <_ZdlPv>
     524:	b	1a8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x1a8>
     528:	ldp	x6, x0, [x25]
     52c:	cmp	x6, x0
     530:	b.eq	fcc <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xfcc>  // b.none
     534:	ldr	x3, [x6]
     538:	ldr	x1, [x3, #8]
     53c:	mov	w8, w1
     540:	cbz	w1, f58 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xf58>
     544:	sub	x0, x0, x6
     548:	mov	x2, #0x0                   	// #0
     54c:	ldr	x7, [x3]
     550:	asr	x0, x0, #3
     554:	sub	w3, w0, #0x1
     558:	mov	w5, w0
     55c:	add	x3, x6, w3, uxtw #3
     560:	ldrb	w4, [x7, x2]
     564:	mov	w28, w2
     568:	cbz	w5, ae0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xae0>
     56c:	mov	x0, x6
     570:	cmp	x3, x0
     574:	b.eq	ae0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xae0>  // b.none
     578:	ldr	x1, [x0, #8]!
     57c:	ldr	x1, [x1]
     580:	ldrb	w1, [x1, x2]
     584:	cmp	w4, w1
     588:	b.eq	570 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x570>  // b.none
     58c:	ldr	w0, [sp, #112]
     590:	ldp	x1, x2, [sp, #160]
     594:	sub	w26, w28, w0
     598:	cmp	w26, #0x1
     59c:	ldr	x0, [x19, #24]
     5a0:	b.eq	b0c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xb0c>  // b.none
     5a4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     5a8:	mov	x3, x0
     5ac:	ldp	x1, x2, [x0, #16]
     5b0:	sub	x1, x1, x2
     5b4:	cmp	x1, #0xa
     5b8:	b.ls	e8c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xe8c>  // b.plast
     5bc:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     5c0:	add	x0, x0, #0x0
     5c4:	ldr	x1, [x0]
     5c8:	str	x1, [x2]
     5cc:	ldur	w0, [x0, #7]
     5d0:	stur	w0, [x2, #7]
     5d4:	ldr	x0, [x3, #24]
     5d8:	add	x0, x0, #0xb
     5dc:	str	x0, [x3, #24]
     5e0:	ldp	x1, x2, [x19]
     5e4:	ldr	x4, [x3, #16]
     5e8:	sub	x4, x4, x0
     5ec:	cmp	x4, x2
     5f0:	b.cc	e74 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xe74>  // b.lo, b.ul, b.last
     5f4:	cbnz	x2, ea8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xea8>
     5f8:	cmp	x4, #0x7
     5fc:	b.ls	e58 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xe58>  // b.plast
     600:	mov	x1, #0x642e                	// #25646
     604:	movk	x1, #0x7461, lsl #16
     608:	movk	x1, #0x2861, lsl #32
     60c:	movk	x1, #0x2b29, lsl #48
     610:	str	x1, [x0]
     614:	ldr	x0, [x3, #24]
     618:	add	x0, x0, #0x8
     61c:	str	x0, [x3, #24]
     620:	mov	x1, x27
     624:	mov	x0, x3
     628:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     62c:	mov	x4, x0
     630:	ldp	x1, x2, [x0, #16]
     634:	sub	x1, x1, x2
     638:	cmp	x1, #0x2
     63c:	b.ls	e40 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xe40>  // b.plast
     640:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     644:	add	x0, x0, #0x0
     648:	ldrh	w1, [x0]
     64c:	ldrb	w0, [x0, #2]
     650:	strh	w1, [x2]
     654:	strb	w0, [x2, #2]
     658:	ldr	x0, [x4, #24]
     65c:	add	x0, x0, #0x3
     660:	str	x0, [x4, #24]
     664:	ldr	x0, [x25]
     668:	mov	w5, w26
     66c:	ldr	x1, [x0]
     670:	ldr	x3, [x1, #8]
     674:	cmp	x27, x3
     678:	b.hi	fa4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xfa4>  // b.pmore
     67c:	add	x26, sp, #0xc0
     680:	ldr	x3, [x1, #8]
     684:	add	x0, x26, #0x10
     688:	str	x0, [sp, #192]
     68c:	cmp	x27, x3
     690:	ldr	x1, [x1]
     694:	b.hi	f8c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xf8c>  // b.pmore
     698:	sub	x3, x3, x27
     69c:	add	x6, x1, x27
     6a0:	cmp	x3, x5
     6a4:	csel	x27, x3, x5, ls  // ls = plast
     6a8:	cmn	x6, x27
     6ac:	ccmp	x6, #0x0, #0x0, ne  // ne = any
     6b0:	b.eq	f80 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xf80>  // b.none
     6b4:	str	x27, [sp, #152]
     6b8:	cmp	x27, #0xf
     6bc:	b.hi	e10 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xe10>  // b.pmore
     6c0:	cmp	x27, #0x1
     6c4:	b.ne	db0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xdb0>  // b.any
     6c8:	ldr	w2, [sp, #112]
     6cc:	ldrb	w2, [x1, w2, uxtw]
     6d0:	mov	x1, x0
     6d4:	strb	w2, [sp, #208]
     6d8:	str	x27, [sp, #200]
     6dc:	mov	x0, x4
     6e0:	strb	wzr, [x1, x27]
     6e4:	str	x5, [sp, #112]
     6e8:	ldp	x1, x2, [sp, #192]
     6ec:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     6f0:	mov	x2, x0
     6f4:	ldp	x1, x3, [x0, #16]
     6f8:	ldr	x5, [sp, #112]
     6fc:	sub	x1, x1, x3
     700:	cmp	x1, #0x2
     704:	b.ls	de0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xde0>  // b.plast
     708:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     70c:	add	x0, x0, #0x0
     710:	ldrh	w1, [x0]
     714:	ldrb	w0, [x0, #2]
     718:	strh	w1, [x3]
     71c:	strb	w0, [x3, #2]
     720:	ldr	x0, [x2, #24]
     724:	add	x0, x0, #0x3
     728:	str	x0, [x2, #24]
     72c:	mov	x1, x5
     730:	mov	x0, x2
     734:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     738:	mov	x1, x0
     73c:	ldp	x2, x3, [x0, #16]
     740:	sub	x2, x2, x3
     744:	cmp	x2, #0x7
     748:	b.ls	dfc <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xdfc>  // b.plast
     74c:	mov	x0, #0x2029                	// #8233
     750:	movk	x0, #0x3d21, lsl #16
     754:	movk	x0, #0x3020, lsl #32
     758:	movk	x0, #0xa29, lsl #48
     75c:	str	x0, [x3]
     760:	ldr	x0, [x1, #24]
     764:	add	x0, x0, #0x8
     768:	str	x0, [x1, #24]
     76c:	ldr	x0, [sp, #192]
     770:	add	x26, x26, #0x10
     774:	cmp	x0, x26
     778:	b.eq	780 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x780>  // b.none
     77c:	bl	0 <_ZdlPv>
     780:	ldp	x1, x2, [sp, #160]
     784:	ldr	x0, [x19, #24]
     788:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     78c:	mov	x1, x0
     790:	ldp	x2, x3, [x0, #16]
     794:	sub	x2, x2, x3
     798:	cmp	x2, #0x8
     79c:	b.ls	d80 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xd80>  // b.plast
     7a0:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     7a4:	add	x0, x0, #0x0
     7a8:	ldr	x2, [x0]
     7ac:	str	x2, [x3]
     7b0:	ldrb	w0, [x0, #8]
     7b4:	strb	w0, [x3, #8]
     7b8:	ldr	x0, [x1, #24]
     7bc:	add	x0, x0, #0x9
     7c0:	str	x0, [x1, #24]
     7c4:	ldrb	w4, [sp, #104]
     7c8:	mov	x0, x19
     7cc:	ldr	w3, [sp, #124]
     7d0:	mov	w2, w28
     7d4:	mov	x1, x25
     7d8:	bl	0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     7dc:	and	w19, w0, #0xff
     7e0:	b	4b8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x4b8>
     7e4:	ldp	x1, x2, [sp, #160]
     7e8:	ldr	x0, [x19, #24]
     7ec:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     7f0:	mov	x1, x0
     7f4:	ldp	x2, x3, [x0, #16]
     7f8:	sub	x2, x2, x3
     7fc:	cmp	x2, #0x8
     800:	b.ls	c48 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xc48>  // b.plast
     804:	ldr	x2, [sp, #112]
     808:	ldr	x0, [x2]
     80c:	str	x0, [x3]
     810:	ldrb	w0, [x2, #8]
     814:	strb	w0, [x3, #8]
     818:	ldr	x0, [x1, #24]
     81c:	add	x0, x0, #0x9
     820:	str	x0, [x1, #24]
     824:	b	468 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x468>
     828:	add	x1, x24, #0x0
     82c:	mov	x2, #0xb                   	// #11
     830:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     834:	b	448 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x448>
     838:	add	x1, x28, #0x0
     83c:	mov	x2, #0x7                   	// #7
     840:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     844:	b	3e0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x3e0>
     848:	mov	x0, x2
     84c:	mov	x2, #0x7                   	// #7
     850:	mov	x1, x25
     854:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     858:	mov	x2, x0
     85c:	b	398 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x398>
     860:	mov	x0, x2
     864:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     868:	mov	x2, x0
     86c:	b	36c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x36c>
     870:	mov	x2, #0x6                   	// #6
     874:	mov	x1, x26
     878:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     87c:	mov	x2, x0
     880:	ldr	x0, [x0, #24]
     884:	b	350 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x350>
     888:	ldrb	w0, [x2, #32]
     88c:	ldrb	w1, [x28, #32]
     890:	cmp	w1, w0
     894:	cset	w0, cc  // cc = lo, ul, last
     898:	b	190 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x190>
     89c:	ldr	w1, [sp, #104]
     8a0:	sub	x2, x0, x2
     8a4:	cmp	w1, #0x0
     8a8:	asr	x2, x2, #3
     8ac:	ccmp	x2, #0x1, #0x0, eq  // eq = none
     8b0:	b.hi	fbc <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xfbc>  // b.pmore
     8b4:	ldp	x5, x4, [x4, #32]
     8b8:	mov	w6, #0xa                   	// #10
     8bc:	add	x26, sp, #0xc0
     8c0:	add	x20, sp, #0xe0
     8c4:	mov	x1, x26
     8c8:	mov	x0, x20
     8cc:	mov	x3, #0x0                   	// #0
     8d0:	mov	x2, #0x1                   	// #1
     8d4:	strb	w6, [sp, #192]
     8d8:	stp	x5, x4, [sp, #224]
     8dc:	bl	0 <_ZNK4llvm9StringRef4findES0_m>
     8e0:	cmn	x0, #0x1
     8e4:	b.eq	d04 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xd04>  // b.none
     8e8:	mov	x24, #0x0                   	// #0
     8ec:	ldr	x27, [sp, #232]
     8f0:	cbnz	x0, c18 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xc18>
     8f4:	ldp	x1, x2, [sp, #160]
     8f8:	add	x21, x0, #0x1
     8fc:	ldr	x0, [x19, #24]
     900:	cmp	x21, x27
     904:	csel	x21, x21, x27, ls  // ls = plast
     908:	ldr	x28, [sp, #224]
     90c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     910:	ldp	x1, x2, [x0, #16]
     914:	sub	x27, x27, x21
     918:	mov	x22, x0
     91c:	add	x21, x28, x21
     920:	sub	x1, x1, x2
     924:	cmp	x24, x1
     928:	b.hi	d30 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xd30>  // b.pmore
     92c:	cbnz	x24, c24 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xc24>
     930:	cmp	x1, #0x5
     934:	b.ls	d50 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xd50>  // b.plast
     938:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     93c:	add	x0, x0, #0x0
     940:	ldr	w1, [x0]
     944:	ldrh	w0, [x0, #4]
     948:	str	w1, [x2]
     94c:	strh	w0, [x2, #4]
     950:	ldr	x0, [x22, #24]
     954:	add	x0, x0, #0x6
     958:	str	x0, [x22, #24]
     95c:	ldr	x1, [x25]
     960:	mov	x0, x22
     964:	ldr	x2, [x1]
     968:	ldp	x1, x2, [x2]
     96c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     970:	mov	x1, x0
     974:	ldp	x2, x3, [x0, #16]
     978:	sub	x2, x2, x3
     97c:	cmp	x2, #0x1
     980:	b.ls	d6c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xd6c>  // b.plast
     984:	mov	w0, #0xa22                 	// #2594
     988:	strh	w0, [x3]
     98c:	ldr	x0, [x1, #24]
     990:	add	x0, x0, #0x2
     994:	str	x0, [x1, #24]
     998:	adrp	x24, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     99c:	add	x0, x24, #0x0
     9a0:	str	x0, [sp, #104]
     9a4:	mov	w22, #0xa                   	// #10
     9a8:	stp	x21, x27, [sp, #224]
     9ac:	cbnz	x27, a24 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xa24>
     9b0:	b	aa4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xaa4>
     9b4:	mov	x28, #0x0                   	// #0
     9b8:	ldr	x27, [sp, #232]
     9bc:	cbz	x0, 9c8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x9c8>
     9c0:	cmp	x0, x27
     9c4:	csel	x28, x0, x27, ls  // ls = plast
     9c8:	ldp	x1, x2, [sp, #160]
     9cc:	add	x21, x0, #0x1
     9d0:	ldr	x0, [x19, #24]
     9d4:	cmp	x21, x27
     9d8:	csel	x21, x21, x27, ls  // ls = plast
     9dc:	ldr	x24, [sp, #224]
     9e0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     9e4:	ldp	x1, x2, [x0, #16]
     9e8:	sub	x27, x27, x21
     9ec:	mov	x25, x0
     9f0:	add	x21, x24, x21
     9f4:	sub	x4, x1, x2
     9f8:	cmp	x4, x28
     9fc:	b.cc	a70 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xa70>  // b.lo, b.ul, b.last
     a00:	cbnz	x28, aac <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xaac>
     a04:	cmp	x2, x1
     a08:	b.eq	a8c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xa8c>  // b.none
     a0c:	strb	w22, [x2]
     a10:	ldr	x0, [x25, #24]
     a14:	add	x0, x0, #0x1
     a18:	str	x0, [x25, #24]
     a1c:	stp	x21, x27, [sp, #224]
     a20:	cbz	x27, aa4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xaa4>
     a24:	mov	x1, x26
     a28:	mov	x0, x20
     a2c:	mov	x3, #0x0                   	// #0
     a30:	mov	x2, #0x1                   	// #1
     a34:	strb	w22, [sp, #192]
     a38:	bl	0 <_ZNK4llvm9StringRef4findES0_m>
     a3c:	cmn	x0, #0x1
     a40:	b.ne	9b4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x9b4>  // b.any
     a44:	ldp	x1, x2, [sp, #160]
     a48:	mov	x27, #0x0                   	// #0
     a4c:	ldr	x0, [x19, #24]
     a50:	mov	x21, #0x0                   	// #0
     a54:	ldp	x24, x28, [sp, #224]
     a58:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     a5c:	mov	x25, x0
     a60:	ldp	x1, x2, [x0, #16]
     a64:	sub	x4, x1, x2
     a68:	cmp	x4, x28
     a6c:	b.cs	a00 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xa00>  // b.hs, b.nlast
     a70:	mov	x2, x28
     a74:	mov	x1, x24
     a78:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     a7c:	mov	x25, x0
     a80:	ldp	x1, x2, [x0, #16]
     a84:	cmp	x2, x1
     a88:	b.ne	a0c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xa0c>  // b.any
     a8c:	ldr	x1, [sp, #104]
     a90:	mov	x0, x25
     a94:	mov	x2, #0x1                   	// #1
     a98:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     a9c:	stp	x21, x27, [sp, #224]
     aa0:	cbnz	x27, a24 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xa24>
     aa4:	mov	w19, #0x0                   	// #0
     aa8:	b	4c4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x4c4>
     aac:	mov	x1, x24
     ab0:	mov	x0, x2
     ab4:	mov	x2, x28
     ab8:	bl	0 <memcpy>
     abc:	ldp	x1, x2, [x25, #16]
     ac0:	add	x2, x2, x28
     ac4:	str	x2, [x25, #24]
     ac8:	b	a04 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xa04>
     acc:	mov	w1, #0x73                  	// #115
     ad0:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     ad4:	ldr	x0, [x19, #24]
     ad8:	ldp	x1, x2, [x0, #16]
     adc:	b	41c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x41c>
     ae0:	add	x2, x2, #0x1
     ae4:	add	w28, w28, #0x1
     ae8:	cmp	w8, w2
     aec:	b.ne	560 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x560>  // b.any
     af0:	b	58c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x58c>
     af4:	mov	x2, x26
     af8:	bl	0 <memcpy>
     afc:	ldp	x3, x0, [x25, #16]
     b00:	add	x0, x0, x26
     b04:	str	x0, [x25, #24]
     b08:	b	234 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x234>
     b0c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     b10:	mov	x26, x0
     b14:	ldp	x1, x2, [x0, #16]
     b18:	sub	x1, x1, x2
     b1c:	cmp	x1, #0x3
     b20:	b.ls	ec8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xec8>  // b.plast
     b24:	mov	w0, #0x6669                	// #26217
     b28:	movk	w0, #0x2820, lsl #16
     b2c:	str	w0, [x2]
     b30:	ldr	x0, [x26, #24]
     b34:	add	x0, x0, #0x4
     b38:	str	x0, [x26, #24]
     b3c:	ldp	x1, x2, [x19]
     b40:	ldr	x3, [x26, #16]
     b44:	sub	x4, x3, x0
     b48:	cmp	x4, x2
     b4c:	b.cc	ee4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xee4>  // b.lo, b.ul, b.last
     b50:	cbnz	x2, d94 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xd94>
     b54:	cmp	x3, x0
     b58:	b.eq	f3c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xf3c>  // b.none
     b5c:	mov	w1, #0x5b                  	// #91
     b60:	strb	w1, [x0]
     b64:	ldr	x0, [x26, #24]
     b68:	add	x0, x0, #0x1
     b6c:	str	x0, [x26, #24]
     b70:	mov	x1, x27
     b74:	mov	x0, x26
     b78:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     b7c:	mov	x2, x0
     b80:	ldp	x1, x3, [x0, #16]
     b84:	sub	x1, x1, x3
     b88:	cmp	x1, #0x5
     b8c:	b.ls	f20 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xf20>  // b.plast
     b90:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     b94:	add	x0, x0, #0x0
     b98:	ldr	w1, [x0]
     b9c:	ldrh	w0, [x0, #4]
     ba0:	str	w1, [x3]
     ba4:	strh	w0, [x3, #4]
     ba8:	ldr	x0, [x2, #24]
     bac:	add	x0, x0, #0x6
     bb0:	str	x0, [x2, #24]
     bb4:	ldr	x1, [x25]
     bb8:	ldr	x3, [x2, #16]
     bbc:	ldr	x1, [x1]
     bc0:	cmp	x3, x0
     bc4:	ldr	w3, [sp, #112]
     bc8:	ldr	x1, [x1]
     bcc:	ldrb	w1, [x1, w3, uxtw]
     bd0:	b.ls	f10 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xf10>  // b.plast
     bd4:	add	x3, x0, #0x1
     bd8:	str	x3, [x2, #24]
     bdc:	strb	w1, [x0]
     be0:	ldp	x0, x1, [x2, #16]
     be4:	sub	x0, x0, x1
     be8:	cmp	x0, #0x2
     bec:	b.ls	ef8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xef8>  // b.plast
     bf0:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     bf4:	add	x0, x0, #0x0
     bf8:	ldrh	w3, [x0]
     bfc:	ldrb	w0, [x0, #2]
     c00:	strh	w3, [x1]
     c04:	strb	w0, [x1, #2]
     c08:	ldr	x0, [x2, #24]
     c0c:	add	x0, x0, #0x3
     c10:	str	x0, [x2, #24]
     c14:	b	780 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x780>
     c18:	cmp	x0, x27
     c1c:	csel	x24, x0, x27, ls  // ls = plast
     c20:	b	8f4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x8f4>
     c24:	mov	x1, x28
     c28:	mov	x0, x2
     c2c:	mov	x2, x24
     c30:	bl	0 <memcpy>
     c34:	ldp	x1, x2, [x22, #16]
     c38:	add	x2, x2, x24
     c3c:	str	x2, [x22, #24]
     c40:	sub	x1, x1, x2
     c44:	b	930 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x930>
     c48:	ldr	x1, [sp, #112]
     c4c:	mov	x2, #0x9                   	// #9
     c50:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     c54:	b	468 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x468>
     c58:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     c5c:	mov	x2, #0x2                   	// #2
     c60:	add	x1, x1, #0x0
     c64:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     c68:	b	4b4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x4b4>
     c6c:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     c70:	mov	x2, #0x10                  	// #16
     c74:	add	x1, x1, #0x0
     c78:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     c7c:	b	2d0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x2d0>
     c80:	mov	x0, x25
     c84:	mov	x2, x26
     c88:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     c8c:	mov	x25, x0
     c90:	ldp	x3, x0, [x0, #16]
     c94:	cmp	x3, x0
     c98:	b.ne	23c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x23c>  // b.any
     c9c:	mov	x2, #0x1                   	// #1
     ca0:	mov	x0, x25
     ca4:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     ca8:	add	x1, x1, #0x0
     cac:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     cb0:	mov	x25, x0
     cb4:	mov	x1, x27
     cb8:	mov	x0, x25
     cbc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     cc0:	mov	x1, x0
     cc4:	ldp	x2, x3, [x0, #16]
     cc8:	sub	x2, x2, x3
     ccc:	cmp	x2, #0x4
     cd0:	b.hi	270 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x270>  // b.pmore
     cd4:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     cd8:	mov	x2, #0x5                   	// #5
     cdc:	add	x1, x1, #0x0
     ce0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     ce4:	b	294 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x294>
     ce8:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     cec:	mov	x2, #0x8                   	// #8
     cf0:	add	x1, x1, #0x0
     cf4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     cf8:	mov	x25, x0
     cfc:	ldr	x0, [x0, #24]
     d00:	b	21c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x21c>
     d04:	ldp	x1, x2, [sp, #160]
     d08:	mov	x27, #0x0                   	// #0
     d0c:	ldr	x0, [x19, #24]
     d10:	mov	x21, #0x0                   	// #0
     d14:	ldp	x28, x24, [sp, #224]
     d18:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     d1c:	mov	x22, x0
     d20:	ldp	x1, x2, [x0, #16]
     d24:	sub	x1, x1, x2
     d28:	cmp	x24, x1
     d2c:	b.ls	92c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x92c>  // b.plast
     d30:	mov	x2, x24
     d34:	mov	x1, x28
     d38:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     d3c:	mov	x22, x0
     d40:	ldp	x1, x2, [x0, #16]
     d44:	sub	x1, x1, x2
     d48:	cmp	x1, #0x5
     d4c:	b.hi	938 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x938>  // b.pmore
     d50:	mov	x0, x22
     d54:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     d58:	mov	x2, #0x6                   	// #6
     d5c:	add	x1, x1, #0x0
     d60:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     d64:	mov	x22, x0
     d68:	b	95c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x95c>
     d6c:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     d70:	mov	x2, #0x2                   	// #2
     d74:	add	x1, x1, #0x0
     d78:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     d7c:	b	998 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x998>
     d80:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     d84:	mov	x2, #0x9                   	// #9
     d88:	add	x1, x1, #0x0
     d8c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     d90:	b	7c4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x7c4>
     d94:	str	x2, [sp, #128]
     d98:	bl	0 <memcpy>
     d9c:	ldp	x3, x0, [x26, #16]
     da0:	ldr	x2, [sp, #128]
     da4:	add	x0, x0, x2
     da8:	str	x0, [x26, #24]
     dac:	b	b54 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xb54>
     db0:	mov	x1, x0
     db4:	cbz	x27, 6d8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x6d8>
     db8:	mov	x2, x27
     dbc:	mov	x1, x6
     dc0:	str	x5, [sp, #112]
     dc4:	str	x4, [sp, #128]
     dc8:	bl	0 <memcpy>
     dcc:	ldr	x5, [sp, #112]
     dd0:	ldr	x4, [sp, #128]
     dd4:	ldr	x27, [sp, #152]
     dd8:	ldr	x1, [sp, #192]
     ddc:	b	6d8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x6d8>
     de0:	mov	x2, #0x3                   	// #3
     de4:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     de8:	add	x1, x1, #0x0
     dec:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     df0:	mov	x2, x0
     df4:	ldr	x5, [sp, #112]
     df8:	b	72c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x72c>
     dfc:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     e00:	mov	x2, #0x8                   	// #8
     e04:	add	x1, x1, #0x0
     e08:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     e0c:	b	76c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x76c>
     e10:	add	x1, sp, #0x98
     e14:	mov	x0, x26
     e18:	mov	x2, #0x0                   	// #0
     e1c:	str	x5, [sp, #112]
     e20:	stp	x4, x6, [sp, #128]
     e24:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     e28:	ldr	x1, [sp, #152]
     e2c:	str	x0, [sp, #192]
     e30:	str	x1, [sp, #208]
     e34:	ldr	x5, [sp, #112]
     e38:	ldp	x4, x6, [sp, #128]
     e3c:	b	db8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xdb8>
     e40:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     e44:	mov	x2, #0x3                   	// #3
     e48:	add	x1, x1, #0x0
     e4c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     e50:	mov	x4, x0
     e54:	b	664 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x664>
     e58:	mov	x0, x3
     e5c:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     e60:	mov	x2, #0x8                   	// #8
     e64:	add	x1, x1, #0x0
     e68:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     e6c:	mov	x3, x0
     e70:	b	620 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x620>
     e74:	mov	x0, x3
     e78:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     e7c:	mov	x3, x0
     e80:	ldp	x4, x0, [x0, #16]
     e84:	sub	x4, x4, x0
     e88:	b	5f8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x5f8>
     e8c:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     e90:	mov	x2, #0xb                   	// #11
     e94:	add	x1, x1, #0x0
     e98:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     e9c:	mov	x3, x0
     ea0:	ldr	x0, [x0, #24]
     ea4:	b	5e0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x5e0>
     ea8:	stp	x2, x3, [sp, #128]
     eac:	bl	0 <memcpy>
     eb0:	ldp	x2, x3, [sp, #128]
     eb4:	ldp	x4, x0, [x3, #16]
     eb8:	add	x0, x0, x2
     ebc:	str	x0, [x3, #24]
     ec0:	sub	x4, x4, x0
     ec4:	b	5f8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x5f8>
     ec8:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     ecc:	mov	x2, #0x4                   	// #4
     ed0:	add	x1, x1, #0x0
     ed4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     ed8:	mov	x26, x0
     edc:	ldr	x0, [x0, #24]
     ee0:	b	b3c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xb3c>
     ee4:	mov	x0, x26
     ee8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     eec:	mov	x26, x0
     ef0:	ldp	x3, x0, [x0, #16]
     ef4:	b	b54 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xb54>
     ef8:	mov	x0, x2
     efc:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     f00:	mov	x2, #0x3                   	// #3
     f04:	add	x1, x1, #0x0
     f08:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     f0c:	b	780 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x780>
     f10:	mov	x0, x2
     f14:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     f18:	mov	x2, x0
     f1c:	b	be0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xbe0>
     f20:	mov	x2, #0x6                   	// #6
     f24:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     f28:	add	x1, x1, #0x0
     f2c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     f30:	mov	x2, x0
     f34:	ldr	x0, [x0, #24]
     f38:	b	bb4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xbb4>
     f3c:	mov	x0, x26
     f40:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     f44:	mov	x2, #0x1                   	// #1
     f48:	add	x1, x1, #0x0
     f4c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     f50:	mov	x26, x0
     f54:	b	b70 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xb70>
     f58:	mov	w28, #0x0                   	// #0
     f5c:	b	58c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x58c>
     f60:	adrp	x3, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     f64:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     f68:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     f6c:	add	x3, x3, #0x0
     f70:	add	x1, x1, #0x0
     f74:	add	x0, x0, #0x0
     f78:	mov	w2, #0x33                  	// #51
     f7c:	bl	0 <__assert_fail>
     f80:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     f84:	add	x0, x0, #0x0
     f88:	bl	0 <_ZSt19__throw_logic_errorPKc>
     f8c:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     f90:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     f94:	mov	x2, x27
     f98:	add	x1, x1, #0x0
     f9c:	add	x0, x0, #0x0
     fa0:	bl	0 <_ZSt24__throw_out_of_range_fmtPKcz>
     fa4:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     fa8:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     fac:	mov	x2, x27
     fb0:	add	x1, x1, #0x0
     fb4:	add	x0, x0, #0x0
     fb8:	bl	0 <_ZSt24__throw_out_of_range_fmtPKcz>
     fbc:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     fc0:	mov	w1, #0x1                   	// #1
     fc4:	add	x0, x0, #0x0
     fc8:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
     fcc:	adrp	x3, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     fd0:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     fd4:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     fd8:	add	x3, x3, #0x0
     fdc:	add	x1, x1, #0x0
     fe0:	add	x0, x0, #0x0
     fe4:	mov	w2, #0x1e                  	// #30
     fe8:	bl	0 <__assert_fail>
     fec:	nop

0000000000000ff0 <_ZNK4llvm13StringMatcher4EmitEjb>:
     ff0:	stp	x29, x30, [sp, #-176]!
     ff4:	mov	x29, sp
     ff8:	stp	x19, x20, [sp, #16]
     ffc:	mov	x19, x0
    1000:	ldr	x0, [x0, #16]
    1004:	stp	x21, x22, [sp, #32]
    1008:	mov	w22, w1
    100c:	ldp	x1, x0, [x0]
    1010:	cmp	x0, x1
    1014:	b.eq	1544 <_ZNK4llvm13StringMatcher4EmitEjb+0x554>  // b.none
    1018:	add	x20, sp, #0x80
    101c:	sub	x0, x0, x1
    1020:	add	x3, x20, #0x8
    1024:	stp	x23, x24, [sp, #48]
    1028:	asr	x0, x0, #6
    102c:	stp	x25, x26, [sp, #64]
    1030:	and	w23, w2, #0xff
    1034:	stp	x27, x28, [sp, #80]
    1038:	str	wzr, [sp, #136]
    103c:	stp	xzr, x3, [sp, #144]
    1040:	stp	x3, xzr, [sp, #160]
    1044:	cbz	w0, 11f8 <_ZNK4llvm13StringMatcher4EmitEjb+0x208>
    1048:	sub	w24, w0, #0x1
    104c:	mov	x25, x3
    1050:	add	x24, x24, #0x1
    1054:	mov	x28, #0x0                   	// #0
    1058:	mov	x0, #0x0                   	// #0
    105c:	lsl	x2, x24, #6
    1060:	str	x2, [sp, #104]
    1064:	nop
    1068:	add	x27, x1, x28
    106c:	mov	x26, x25
    1070:	ldr	x21, [x27, #8]
    1074:	mov	w4, w21
    1078:	cbz	x0, 10b0 <_ZNK4llvm13StringMatcher4EmitEjb+0xc0>
    107c:	nop
    1080:	ldr	w2, [x0, #32]
    1084:	cmp	w4, w2
    1088:	b.hi	1154 <_ZNK4llvm13StringMatcher4EmitEjb+0x164>  // b.pmore
    108c:	mov	x26, x0
    1090:	ldr	x0, [x0, #16]
    1094:	cbnz	x0, 1080 <_ZNK4llvm13StringMatcher4EmitEjb+0x90>
    1098:	cmp	x26, x25
    109c:	b.eq	10b0 <_ZNK4llvm13StringMatcher4EmitEjb+0xc0>  // b.none
    10a0:	ldr	w0, [x26, #32]
    10a4:	add	x24, x26, #0x28
    10a8:	cmp	w21, w0
    10ac:	b.cs	1120 <_ZNK4llvm13StringMatcher4EmitEjb+0x130>  // b.hs, b.nlast
    10b0:	mov	x0, #0x40                  	// #64
    10b4:	bl	0 <_Znwm>
    10b8:	mov	x1, x26
    10bc:	mov	x26, x0
    10c0:	add	x24, x0, #0x28
    10c4:	add	x2, x0, #0x20
    10c8:	mov	x0, x20
    10cc:	str	w21, [x26, #32]
    10d0:	str	xzr, [x26, #40]
    10d4:	stp	xzr, xzr, [x24, #8]
    10d8:	bl	0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    10dc:	mov	x21, x0
    10e0:	mov	x2, x1
    10e4:	cbz	x1, 1160 <_ZNK4llvm13StringMatcher4EmitEjb+0x170>
    10e8:	cmp	x0, #0x0
    10ec:	cset	w0, ne  // ne = any
    10f0:	cmp	x1, x25
    10f4:	csinc	w0, w0, wzr, ne  // ne = any
    10f8:	cbz	w0, 15ec <_ZNK4llvm13StringMatcher4EmitEjb+0x5fc>
    10fc:	mov	x3, x25
    1100:	mov	x1, x26
    1104:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
    1108:	ldr	x0, [sp, #168]
    110c:	add	x0, x0, #0x1
    1110:	str	x0, [sp, #168]
    1114:	ldr	x0, [x19, #16]
    1118:	ldr	x1, [x0]
    111c:	add	x27, x1, x28
    1120:	ldp	x2, x0, [x24, #8]
    1124:	cmp	x2, x0
    1128:	b.eq	1180 <_ZNK4llvm13StringMatcher4EmitEjb+0x190>  // b.none
    112c:	str	x27, [x2], #8
    1130:	add	x28, x28, #0x40
    1134:	ldr	x0, [sp, #104]
    1138:	str	x2, [x24, #8]
    113c:	cmp	x28, x0
    1140:	b.eq	11f8 <_ZNK4llvm13StringMatcher4EmitEjb+0x208>  // b.none
    1144:	ldr	x1, [x19, #16]
    1148:	ldr	x0, [sp, #144]
    114c:	ldr	x1, [x1]
    1150:	b	1068 <_ZNK4llvm13StringMatcher4EmitEjb+0x78>
    1154:	ldr	x0, [x0, #24]
    1158:	cbnz	x0, 1080 <_ZNK4llvm13StringMatcher4EmitEjb+0x90>
    115c:	b	1098 <_ZNK4llvm13StringMatcher4EmitEjb+0xa8>
    1160:	ldr	x0, [x26, #40]
    1164:	cbz	x0, 116c <_ZNK4llvm13StringMatcher4EmitEjb+0x17c>
    1168:	bl	0 <_ZdlPv>
    116c:	mov	x0, x26
    1170:	add	x24, x21, #0x28
    1174:	mov	x26, x21
    1178:	bl	0 <_ZdlPv>
    117c:	b	1114 <_ZNK4llvm13StringMatcher4EmitEjb+0x124>
    1180:	ldr	x1, [x26, #40]
    1184:	mov	x0, #0xfffffffffffffff     	// #1152921504606846975
    1188:	sub	x21, x2, x1
    118c:	cmp	x0, x21, asr #3
    1190:	asr	x0, x21, #3
    1194:	b.eq	16f4 <_ZNK4llvm13StringMatcher4EmitEjb+0x704>  // b.none
    1198:	cbz	x0, 1610 <_ZNK4llvm13StringMatcher4EmitEjb+0x620>
    119c:	cmp	x0, x0, lsl #1
    11a0:	mov	x5, #0x7ffffffffffffff8    	// #9223372036854775800
    11a4:	lsl	x0, x0, #1
    11a8:	b.ls	1600 <_ZNK4llvm13StringMatcher4EmitEjb+0x610>  // b.plast
    11ac:	mov	x0, x5
    11b0:	stp	x5, x1, [sp, #112]
    11b4:	bl	0 <_Znwm>
    11b8:	ldp	x5, x1, [sp, #112]
    11bc:	mov	x26, x0
    11c0:	add	x5, x0, x5
    11c4:	str	x27, [x26, x21]
    11c8:	add	x27, x21, #0x8
    11cc:	cmp	x21, #0x0
    11d0:	add	x27, x26, x27
    11d4:	b.gt	15c4 <_ZNK4llvm13StringMatcher4EmitEjb+0x5d4>
    11d8:	cbnz	x1, 15d8 <_ZNK4llvm13StringMatcher4EmitEjb+0x5e8>
    11dc:	ldr	x0, [sp, #104]
    11e0:	stp	x26, x27, [x24]
    11e4:	add	x28, x28, #0x40
    11e8:	str	x5, [x24, #16]
    11ec:	cmp	x28, x0
    11f0:	b.ne	1144 <_ZNK4llvm13StringMatcher4EmitEjb+0x154>  // b.any
    11f4:	nop
    11f8:	add	w21, w22, #0x1
    11fc:	ldr	x0, [x19, #24]
    1200:	lsl	w21, w21, #1
    1204:	mov	w1, w21
    1208:	bl	0 <_ZN4llvm11raw_ostream6indentEj>
    120c:	mov	x24, x0
    1210:	ldp	x1, x2, [x0, #16]
    1214:	sub	x1, x1, x2
    1218:	cmp	x1, #0x7
    121c:	b.ls	1618 <_ZNK4llvm13StringMatcher4EmitEjb+0x628>  // b.plast
    1220:	mov	x0, #0x7773                	// #30579
    1224:	movk	x0, #0x7469, lsl #16
    1228:	movk	x0, #0x6863, lsl #32
    122c:	movk	x0, #0x2820, lsl #48
    1230:	str	x0, [x2]
    1234:	ldp	x1, x25, [x19]
    1238:	ldr	x0, [x24, #24]
    123c:	ldr	x3, [x24, #16]
    1240:	add	x0, x0, #0x8
    1244:	str	x0, [x24, #24]
    1248:	sub	x3, x3, x0
    124c:	cmp	x25, x3
    1250:	b.hi	1644 <_ZNK4llvm13StringMatcher4EmitEjb+0x654>  // b.pmore
    1254:	cbnz	x25, 16d8 <_ZNK4llvm13StringMatcher4EmitEjb+0x6e8>
    1258:	cmp	x3, #0xa
    125c:	b.ls	1664 <_ZNK4llvm13StringMatcher4EmitEjb+0x674>  // b.plast
    1260:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    1264:	add	x1, x1, #0x0
    1268:	ldr	x2, [x1]
    126c:	str	x2, [x0]
    1270:	ldur	w1, [x1, #7]
    1274:	stur	w1, [x0, #7]
    1278:	mov	w1, w21
    127c:	ldr	x0, [x24, #24]
    1280:	add	x0, x0, #0xb
    1284:	str	x0, [x24, #24]
    1288:	ldr	x0, [x19, #24]
    128c:	bl	0 <_ZN4llvm11raw_ostream6indentEj>
    1290:	mov	x1, x0
    1294:	ldp	x2, x3, [x0, #16]
    1298:	sub	x2, x2, x3
    129c:	cmp	x2, #0xf
    12a0:	b.ls	1698 <_ZNK4llvm13StringMatcher4EmitEjb+0x6a8>  // b.plast
    12a4:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    12a8:	add	x0, x0, #0x0
    12ac:	ldp	x4, x5, [x0]
    12b0:	stp	x4, x5, [x3]
    12b4:	ldr	x0, [x1, #24]
    12b8:	add	x0, x0, #0x10
    12bc:	str	x0, [x1, #24]
    12c0:	ldr	x25, [sp, #152]
    12c4:	add	x0, x20, #0x8
    12c8:	cmp	x25, x0
    12cc:	b.eq	14f8 <_ZNK4llvm13StringMatcher4EmitEjb+0x508>  // b.none
    12d0:	adrp	x24, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    12d4:	adrp	x27, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    12d8:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    12dc:	add	x24, x24, #0x0
    12e0:	add	x0, x0, #0x0
    12e4:	add	x27, x27, #0x0
    12e8:	add	w28, w21, #0x2
    12ec:	adrp	x26, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    12f0:	str	x0, [sp, #104]
    12f4:	b	1380 <_ZNK4llvm13StringMatcher4EmitEjb+0x390>
    12f8:	cmp	x2, x0
    12fc:	b.ne	1598 <_ZNK4llvm13StringMatcher4EmitEjb+0x5a8>  // b.any
    1300:	mov	x0, x1
    1304:	mov	x2, #0x1                   	// #1
    1308:	mov	x1, x27
    130c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1310:	mov	x1, x0
    1314:	ldp	x0, x2, [x0, #16]
    1318:	sub	x0, x0, x2
    131c:	cmp	x0, #0xa
    1320:	b.ls	1468 <_ZNK4llvm13StringMatcher4EmitEjb+0x478>  // b.plast
    1324:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    1328:	add	x0, x0, #0x0
    132c:	mov	w4, w23
    1330:	ldr	x3, [x0]
    1334:	str	x3, [x2]
    1338:	ldur	w0, [x0, #7]
    133c:	mov	w3, w22
    1340:	stur	w0, [x2, #7]
    1344:	mov	w2, #0x0                   	// #0
    1348:	ldr	x0, [x1, #24]
    134c:	add	x0, x0, #0xb
    1350:	str	x0, [x1, #24]
    1354:	add	x1, x25, #0x28
    1358:	mov	x0, x19
    135c:	bl	0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    1360:	tst	w0, #0xff
    1364:	b.ne	149c <_ZNK4llvm13StringMatcher4EmitEjb+0x4ac>  // b.any
    1368:	mov	x0, x25
    136c:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
    1370:	add	x1, x20, #0x8
    1374:	mov	x25, x0
    1378:	cmp	x0, x1
    137c:	b.eq	14f8 <_ZNK4llvm13StringMatcher4EmitEjb+0x508>  // b.none
    1380:	ldr	x0, [x19, #24]
    1384:	mov	w1, w21
    1388:	bl	0 <_ZN4llvm11raw_ostream6indentEj>
    138c:	mov	x2, x0
    1390:	ldp	x1, x3, [x0, #16]
    1394:	sub	x1, x1, x3
    1398:	cmp	x1, #0x4
    139c:	b.ls	1584 <_ZNK4llvm13StringMatcher4EmitEjb+0x594>  // b.plast
    13a0:	ldrb	w0, [x24, #4]
    13a4:	ldr	w1, [x24]
    13a8:	str	w1, [x3]
    13ac:	strb	w0, [x3, #4]
    13b0:	ldr	x0, [x2, #24]
    13b4:	add	x0, x0, #0x5
    13b8:	str	x0, [x2, #24]
    13bc:	ldr	w1, [x25, #32]
    13c0:	mov	x0, x2
    13c4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    13c8:	mov	x2, x0
    13cc:	ldp	x1, x3, [x0, #16]
    13d0:	sub	x1, x1, x3
    13d4:	cmp	x1, #0x5
    13d8:	b.ls	1570 <_ZNK4llvm13StringMatcher4EmitEjb+0x580>  // b.plast
    13dc:	add	x0, x26, #0x0
    13e0:	ldr	w1, [x0]
    13e4:	ldrh	w0, [x0, #4]
    13e8:	str	w1, [x3]
    13ec:	strh	w0, [x3, #4]
    13f0:	ldr	x0, [x2, #24]
    13f4:	add	x0, x0, #0x6
    13f8:	str	x0, [x2, #24]
    13fc:	ldp	x3, x1, [x25, #40]
    1400:	mov	x0, x2
    1404:	sub	x1, x1, x3
    1408:	asr	x1, x1, #3
    140c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1410:	ldp	x2, x3, [x0, #16]
    1414:	mov	x1, x0
    1418:	sub	x2, x2, x3
    141c:	cmp	x2, #0x6
    1420:	b.ls	1554 <_ZNK4llvm13StringMatcher4EmitEjb+0x564>  // b.plast
    1424:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    1428:	add	x0, x0, #0x0
    142c:	ldr	w2, [x0]
    1430:	ldur	w0, [x0, #3]
    1434:	str	w2, [x3]
    1438:	stur	w0, [x3, #3]
    143c:	ldr	x2, [x1, #24]
    1440:	add	x2, x2, #0x7
    1444:	str	x2, [x1, #24]
    1448:	ldp	x4, x3, [x25, #40]
    144c:	ldr	x0, [x1, #16]
    1450:	sub	x3, x3, x4
    1454:	cmp	x3, #0x8
    1458:	b.ne	12f8 <_ZNK4llvm13StringMatcher4EmitEjb+0x308>  // b.any
    145c:	sub	x0, x0, x2
    1460:	cmp	x0, #0xa
    1464:	b.hi	1324 <_ZNK4llvm13StringMatcher4EmitEjb+0x334>  // b.pmore
    1468:	mov	x0, x1
    146c:	mov	x2, #0xb                   	// #11
    1470:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    1474:	add	x1, x1, #0x0
    1478:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    147c:	mov	w4, w23
    1480:	mov	w3, w22
    1484:	add	x1, x25, #0x28
    1488:	mov	x0, x19
    148c:	mov	w2, #0x0                   	// #0
    1490:	bl	0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    1494:	tst	w0, #0xff
    1498:	b.eq	1368 <_ZNK4llvm13StringMatcher4EmitEjb+0x378>  // b.none
    149c:	ldr	x0, [x19, #24]
    14a0:	mov	w1, w28
    14a4:	bl	0 <_ZN4llvm11raw_ostream6indentEj>
    14a8:	mov	x1, x0
    14ac:	ldp	x2, x3, [x0, #16]
    14b0:	sub	x2, x2, x3
    14b4:	cmp	x2, #0x6
    14b8:	b.ls	15b4 <_ZNK4llvm13StringMatcher4EmitEjb+0x5c4>  // b.plast
    14bc:	ldr	x2, [sp, #104]
    14c0:	ldr	w0, [x2]
    14c4:	str	w0, [x3]
    14c8:	ldur	w0, [x2, #3]
    14cc:	stur	w0, [x3, #3]
    14d0:	ldr	x0, [x1, #24]
    14d4:	add	x0, x0, #0x7
    14d8:	str	x0, [x1, #24]
    14dc:	mov	x0, x25
    14e0:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
    14e4:	mov	x25, x0
    14e8:	add	x1, x20, #0x8
    14ec:	cmp	x0, x1
    14f0:	b.ne	1380 <_ZNK4llvm13StringMatcher4EmitEjb+0x390>  // b.any
    14f4:	nop
    14f8:	ldr	x0, [x19, #24]
    14fc:	mov	w1, w21
    1500:	bl	0 <_ZN4llvm11raw_ostream6indentEj>
    1504:	mov	x1, x0
    1508:	ldp	x2, x3, [x0, #16]
    150c:	sub	x2, x2, x3
    1510:	cmp	x2, #0x1
    1514:	b.ls	16ac <_ZNK4llvm13StringMatcher4EmitEjb+0x6bc>  // b.plast
    1518:	mov	w0, #0xa7d                 	// #2685
    151c:	strh	w0, [x3]
    1520:	ldr	x0, [x1, #24]
    1524:	add	x0, x0, #0x2
    1528:	str	x0, [x1, #24]
    152c:	ldr	x1, [sp, #144]
    1530:	mov	x0, x20
    1534:	bl	0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    1538:	ldp	x23, x24, [sp, #48]
    153c:	ldp	x25, x26, [sp, #64]
    1540:	ldp	x27, x28, [sp, #80]
    1544:	ldp	x19, x20, [sp, #16]
    1548:	ldp	x21, x22, [sp, #32]
    154c:	ldp	x29, x30, [sp], #176
    1550:	ret
    1554:	mov	x2, #0x7                   	// #7
    1558:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    155c:	add	x1, x1, #0x0
    1560:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1564:	mov	x1, x0
    1568:	ldr	x2, [x0, #24]
    156c:	b	1448 <_ZNK4llvm13StringMatcher4EmitEjb+0x458>
    1570:	mov	x2, #0x6                   	// #6
    1574:	add	x1, x26, #0x0
    1578:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    157c:	mov	x2, x0
    1580:	b	13fc <_ZNK4llvm13StringMatcher4EmitEjb+0x40c>
    1584:	mov	x2, #0x5                   	// #5
    1588:	mov	x1, x24
    158c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1590:	mov	x2, x0
    1594:	b	13bc <_ZNK4llvm13StringMatcher4EmitEjb+0x3cc>
    1598:	mov	w0, #0x73                  	// #115
    159c:	strb	w0, [x2]
    15a0:	ldp	x0, x2, [x1, #16]
    15a4:	add	x2, x2, #0x1
    15a8:	str	x2, [x1, #24]
    15ac:	sub	x0, x0, x2
    15b0:	b	1460 <_ZNK4llvm13StringMatcher4EmitEjb+0x470>
    15b4:	ldr	x1, [sp, #104]
    15b8:	mov	x2, #0x7                   	// #7
    15bc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    15c0:	b	1368 <_ZNK4llvm13StringMatcher4EmitEjb+0x378>
    15c4:	mov	x2, x21
    15c8:	mov	x0, x26
    15cc:	stp	x1, x5, [sp, #112]
    15d0:	bl	0 <memmove>
    15d4:	ldp	x1, x5, [sp, #112]
    15d8:	mov	x0, x1
    15dc:	str	x5, [sp, #112]
    15e0:	bl	0 <_ZdlPv>
    15e4:	ldr	x5, [sp, #112]
    15e8:	b	11dc <_ZNK4llvm13StringMatcher4EmitEjb+0x1ec>
    15ec:	ldr	w0, [x1, #32]
    15f0:	ldr	w1, [x26, #32]
    15f4:	cmp	w1, w0
    15f8:	cset	w0, cc  // cc = lo, ul, last
    15fc:	b	10fc <_ZNK4llvm13StringMatcher4EmitEjb+0x10c>
    1600:	cbnz	x0, 1700 <_ZNK4llvm13StringMatcher4EmitEjb+0x710>
    1604:	mov	x5, #0x0                   	// #0
    1608:	mov	x26, #0x0                   	// #0
    160c:	b	11c4 <_ZNK4llvm13StringMatcher4EmitEjb+0x1d4>
    1610:	mov	x5, #0x8                   	// #8
    1614:	b	11ac <_ZNK4llvm13StringMatcher4EmitEjb+0x1bc>
    1618:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    161c:	mov	x2, #0x8                   	// #8
    1620:	add	x1, x1, #0x0
    1624:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1628:	mov	x24, x0
    162c:	ldp	x1, x25, [x19]
    1630:	ldr	x3, [x24, #16]
    1634:	ldr	x0, [x0, #24]
    1638:	sub	x3, x3, x0
    163c:	cmp	x25, x3
    1640:	b.ls	1254 <_ZNK4llvm13StringMatcher4EmitEjb+0x264>  // b.plast
    1644:	mov	x0, x24
    1648:	mov	x2, x25
    164c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1650:	mov	x24, x0
    1654:	ldp	x3, x0, [x0, #16]
    1658:	sub	x3, x3, x0
    165c:	cmp	x3, #0xa
    1660:	b.hi	1260 <_ZNK4llvm13StringMatcher4EmitEjb+0x270>  // b.pmore
    1664:	mov	x2, #0xb                   	// #11
    1668:	mov	x0, x24
    166c:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    1670:	add	x1, x1, #0x0
    1674:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1678:	ldr	x0, [x19, #24]
    167c:	mov	w1, w21
    1680:	bl	0 <_ZN4llvm11raw_ostream6indentEj>
    1684:	mov	x1, x0
    1688:	ldp	x2, x3, [x0, #16]
    168c:	sub	x2, x2, x3
    1690:	cmp	x2, #0xf
    1694:	b.hi	12a4 <_ZNK4llvm13StringMatcher4EmitEjb+0x2b4>  // b.pmore
    1698:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    169c:	mov	x2, #0x10                  	// #16
    16a0:	add	x1, x1, #0x0
    16a4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    16a8:	b	12c0 <_ZNK4llvm13StringMatcher4EmitEjb+0x2d0>
    16ac:	mov	x2, #0x2                   	// #2
    16b0:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    16b4:	add	x1, x1, #0x0
    16b8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    16bc:	ldr	x1, [sp, #144]
    16c0:	mov	x0, x20
    16c4:	bl	0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    16c8:	ldp	x23, x24, [sp, #48]
    16cc:	ldp	x25, x26, [sp, #64]
    16d0:	ldp	x27, x28, [sp, #80]
    16d4:	b	1544 <_ZNK4llvm13StringMatcher4EmitEjb+0x554>
    16d8:	mov	x2, x25
    16dc:	bl	0 <memcpy>
    16e0:	ldp	x3, x0, [x24, #16]
    16e4:	add	x0, x0, x25
    16e8:	str	x0, [x24, #24]
    16ec:	sub	x3, x3, x0
    16f0:	b	1258 <_ZNK4llvm13StringMatcher4EmitEjb+0x268>
    16f4:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    16f8:	add	x0, x0, #0x0
    16fc:	bl	0 <_ZSt20__throw_length_errorPKc>
    1700:	mov	x2, #0xfffffffffffffff     	// #1152921504606846975
    1704:	cmp	x0, x2
    1708:	csel	x0, x0, x2, ls  // ls = plast
    170c:	lsl	x5, x0, #3
    1710:	b	11ac <_ZNK4llvm13StringMatcher4EmitEjb+0x1bc>

Disassembly of section .text._ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E:

0000000000000000 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E>:
   0:	cbz	x1, 58 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x58>
   4:	stp	x29, x30, [sp, #-48]!
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x1
  14:	str	x21, [sp, #32]
  18:	mov	x21, x0
  1c:	ldr	x1, [x19, #24]
  20:	mov	x20, x19
  24:	mov	x0, x21
  28:	bl	0 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E>
  2c:	ldr	x0, [x20, #40]
  30:	ldr	x19, [x19, #16]
  34:	cbz	x0, 3c <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x3c>
  38:	bl	0 <_ZdlPv>
  3c:	mov	x0, x20
  40:	bl	0 <_ZdlPv>
  44:	cbnz	x19, 1c <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x1c>
  48:	ldp	x19, x20, [sp, #16]
  4c:	ldr	x21, [sp, #32]
  50:	ldp	x29, x30, [sp], #48
  54:	ret
  58:	ret

Disassembly of section .text._ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_:

0000000000000000 <_ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x3, #0xfffffffffffffff     	// #1152921504606846975
   8:	mov	x29, sp
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	mov	x23, x1
  18:	ldp	x24, x21, [x0]
  1c:	stp	x19, x20, [sp, #16]
  20:	stp	x25, x26, [sp, #64]
  24:	str	x27, [sp, #80]
  28:	sub	x1, x21, x24
  2c:	cmp	x3, x1, asr #3
  30:	b.eq	10c <_ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_+0x10c>  // b.none
  34:	mov	x19, x0
  38:	mov	x22, x2
  3c:	asr	x0, x1, #3
  40:	sub	x26, x23, x24
  44:	cbz	x0, 104 <_ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_+0x104>
  48:	cmp	x0, x0, lsl #1
  4c:	mov	x25, #0x7ffffffffffffff8    	// #9223372036854775800
  50:	lsl	x0, x0, #1
  54:	b.ls	dc <_ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_+0xdc>  // b.plast
  58:	mov	x0, x25
  5c:	bl	0 <_Znwm>
  60:	mov	x20, x0
  64:	add	x25, x0, x25
  68:	ldr	x0, [x22]
  6c:	add	x22, x26, #0x8
  70:	str	x0, [x20, x26]
  74:	sub	x21, x21, x23
  78:	add	x22, x20, x22
  7c:	cmp	x26, #0x0
  80:	add	x27, x22, x21
  84:	b.gt	b8 <_ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_+0xb8>
  88:	cmp	x21, #0x0
  8c:	b.gt	ec <_ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_+0xec>
  90:	cbnz	x24, d0 <_ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_+0xd0>
  94:	ldp	x21, x22, [sp, #32]
  98:	ldp	x23, x24, [sp, #48]
  9c:	stp	x20, x27, [x19]
  a0:	str	x25, [x19, #16]
  a4:	ldp	x19, x20, [sp, #16]
  a8:	ldp	x25, x26, [sp, #64]
  ac:	ldr	x27, [sp, #80]
  b0:	ldp	x29, x30, [sp], #96
  b4:	ret
  b8:	mov	x2, x26
  bc:	mov	x1, x24
  c0:	mov	x0, x20
  c4:	bl	0 <memmove>
  c8:	cmp	x21, #0x0
  cc:	b.gt	ec <_ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_+0xec>
  d0:	mov	x0, x24
  d4:	bl	0 <_ZdlPv>
  d8:	b	94 <_ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_+0x94>
  dc:	cbnz	x0, 118 <_ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_+0x118>
  e0:	mov	x25, #0x0                   	// #0
  e4:	mov	x20, #0x0                   	// #0
  e8:	b	68 <_ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_+0x68>
  ec:	mov	x2, x21
  f0:	mov	x1, x23
  f4:	mov	x0, x22
  f8:	bl	0 <memcpy>
  fc:	cbz	x24, 94 <_ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_+0x94>
 100:	b	d0 <_ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_+0xd0>
 104:	mov	x25, #0x8                   	// #8
 108:	b	58 <_ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_+0x58>
 10c:	adrp	x0, 0 <_ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_>
 110:	add	x0, x0, #0x0
 114:	bl	0 <_ZSt20__throw_length_errorPKc>
 118:	cmp	x0, x3
 11c:	csel	x0, x0, x3, ls  // ls = plast
 120:	lsl	x25, x0, #3
 124:	b	58 <_ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_+0x58>

Disassembly of section .text._ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E:

0000000000000000 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E>:
   0:	cbz	x1, 58 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x58>
   4:	stp	x29, x30, [sp, #-48]!
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x1
  14:	str	x21, [sp, #32]
  18:	mov	x21, x0
  1c:	ldr	x1, [x19, #24]
  20:	mov	x20, x19
  24:	mov	x0, x21
  28:	bl	0 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E>
  2c:	ldr	x0, [x20, #40]
  30:	ldr	x19, [x19, #16]
  34:	cbz	x0, 3c <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x3c>
  38:	bl	0 <_ZdlPv>
  3c:	mov	x0, x20
  40:	bl	0 <_ZdlPv>
  44:	cbnz	x19, 1c <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x1c>
  48:	ldp	x19, x20, [sp, #16]
  4c:	ldr	x21, [sp, #32]
  50:	ldp	x29, x30, [sp], #48
  54:	ret
  58:	ret

Disassembly of section .text._ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE24_M_get_insert_unique_posERS1_:

0000000000000000 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE24_M_get_insert_unique_posERS1_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	ldr	x19, [x0, #16]
  14:	cbz	x19, 78 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE24_M_get_insert_unique_posERS1_+0x78>
  18:	ldrb	w5, [x1]
  1c:	mov	w4, #0x1                   	// #1
  20:	ldrb	w3, [x19, #32]
  24:	cmp	w5, w3
  28:	b.cs	4c <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE24_M_get_insert_unique_posERS1_+0x4c>  // b.hs, b.nlast
  2c:	nop
  30:	ldr	x2, [x19, #16]
  34:	cbz	x2, 58 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE24_M_get_insert_unique_posERS1_+0x58>
  38:	mov	x19, x2
  3c:	mov	w4, #0x1                   	// #1
  40:	ldrb	w3, [x19, #32]
  44:	cmp	w5, w3
  48:	b.cc	30 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE24_M_get_insert_unique_posERS1_+0x30>  // b.lo, b.ul, b.last
  4c:	ldr	x2, [x19, #24]
  50:	mov	w4, #0x0                   	// #0
  54:	cbnz	x2, 38 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE24_M_get_insert_unique_posERS1_+0x38>
  58:	mov	x1, x19
  5c:	cbnz	w4, 7c <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE24_M_get_insert_unique_posERS1_+0x7c>
  60:	cmp	w5, w3
  64:	csel	x0, x19, xzr, ls  // ls = plast
  68:	csel	x1, x1, xzr, hi  // hi = pmore
  6c:	ldp	x19, x20, [sp, #16]
  70:	ldp	x29, x30, [sp], #32
  74:	ret
  78:	add	x19, x0, #0x8
  7c:	ldr	x0, [x0, #24]
  80:	cmp	x0, x19
  84:	b.eq	a4 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE24_M_get_insert_unique_posERS1_+0xa4>  // b.none
  88:	mov	x0, x19
  8c:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  90:	mov	x1, x19
  94:	ldrb	w5, [x20]
  98:	ldrb	w3, [x0, #32]
  9c:	mov	x19, x0
  a0:	b	60 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE24_M_get_insert_unique_posERS1_+0x60>
  a4:	mov	x1, x19
  a8:	mov	x0, #0x0                   	// #0
  ac:	ldp	x19, x20, [sp, #16]
  b0:	ldp	x29, x30, [sp], #32
  b4:	ret

Disassembly of section .text._ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_:

0000000000000000 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	add	x0, x0, #0x8
  14:	stp	x21, x22, [sp, #32]
  18:	cmp	x1, x0
  1c:	mov	x21, x2
  20:	b.eq	bc <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0xbc>  // b.none
  24:	ldrb	w22, [x2]
  28:	mov	x19, x1
  2c:	ldrb	w0, [x1, #32]
  30:	cmp	w22, w0
  34:	b.cs	80 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x80>  // b.hs, b.nlast
  38:	ldr	x0, [x20, #24]
  3c:	mov	x1, x0
  40:	cmp	x0, x19
  44:	b.eq	70 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x70>  // b.none
  48:	mov	x0, x19
  4c:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  50:	mov	x3, x0
  54:	ldrb	w0, [x0, #32]
  58:	cmp	w0, w22
  5c:	b.cs	d8 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0xd8>  // b.hs, b.nlast
  60:	ldr	x1, [x3, #24]
  64:	cmp	x1, #0x0
  68:	csel	x0, x19, xzr, ne  // ne = any
  6c:	csel	x1, x3, x19, eq  // eq = none
  70:	ldp	x19, x20, [sp, #16]
  74:	ldp	x21, x22, [sp, #32]
  78:	ldp	x29, x30, [sp], #48
  7c:	ret
  80:	b.ls	f0 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0xf0>  // b.plast
  84:	ldr	x0, [x20, #32]
  88:	cmp	x0, x1
  8c:	b.eq	120 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x120>  // b.none
  90:	mov	x0, x1
  94:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
  98:	mov	x3, x0
  9c:	ldrb	w0, [x0, #32]
  a0:	cmp	w0, w22
  a4:	b.ls	d8 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0xd8>  // b.plast
  a8:	ldr	x1, [x19, #24]
  ac:	cmp	x1, #0x0
  b0:	csel	x0, x3, xzr, ne  // ne = any
  b4:	csel	x1, x3, x19, ne  // ne = any
  b8:	b	70 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x70>
  bc:	ldr	x0, [x20, #40]
  c0:	cbz	x0, d8 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0xd8>
  c4:	ldr	x19, [x20, #32]
  c8:	ldrb	w0, [x2]
  cc:	ldrb	w1, [x19, #32]
  d0:	cmp	w1, w0
  d4:	b.cc	108 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x108>  // b.lo, b.ul, b.last
  d8:	mov	x1, x21
  dc:	mov	x0, x20
  e0:	ldp	x19, x20, [sp, #16]
  e4:	ldp	x21, x22, [sp, #32]
  e8:	ldp	x29, x30, [sp], #48
  ec:	b	0 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_>
  f0:	mov	x0, x1
  f4:	mov	x1, #0x0                   	// #0
  f8:	ldp	x19, x20, [sp, #16]
  fc:	ldp	x21, x22, [sp, #32]
 100:	ldp	x29, x30, [sp], #48
 104:	ret
 108:	mov	x1, x19
 10c:	mov	x0, #0x0                   	// #0
 110:	ldp	x19, x20, [sp, #16]
 114:	ldp	x21, x22, [sp, #32]
 118:	ldp	x29, x30, [sp], #48
 11c:	ret
 120:	mov	x1, x0
 124:	mov	x0, #0x0                   	// #0
 128:	b	70 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x70>

Disassembly of section .text._ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE24_M_get_insert_unique_posERS1_:

0000000000000000 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE24_M_get_insert_unique_posERS1_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	ldr	x19, [x0, #16]
  14:	cbz	x19, 78 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE24_M_get_insert_unique_posERS1_+0x78>
  18:	ldr	w5, [x1]
  1c:	mov	w4, #0x1                   	// #1
  20:	ldr	w3, [x19, #32]
  24:	cmp	w5, w3
  28:	b.cs	4c <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE24_M_get_insert_unique_posERS1_+0x4c>  // b.hs, b.nlast
  2c:	nop
  30:	ldr	x2, [x19, #16]
  34:	cbz	x2, 58 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE24_M_get_insert_unique_posERS1_+0x58>
  38:	mov	x19, x2
  3c:	mov	w4, #0x1                   	// #1
  40:	ldr	w3, [x19, #32]
  44:	cmp	w5, w3
  48:	b.cc	30 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE24_M_get_insert_unique_posERS1_+0x30>  // b.lo, b.ul, b.last
  4c:	ldr	x2, [x19, #24]
  50:	mov	w4, #0x0                   	// #0
  54:	cbnz	x2, 38 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE24_M_get_insert_unique_posERS1_+0x38>
  58:	mov	x1, x19
  5c:	cbnz	w4, 7c <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE24_M_get_insert_unique_posERS1_+0x7c>
  60:	cmp	w5, w3
  64:	csel	x0, x19, xzr, ls  // ls = plast
  68:	csel	x1, x1, xzr, hi  // hi = pmore
  6c:	ldp	x19, x20, [sp, #16]
  70:	ldp	x29, x30, [sp], #32
  74:	ret
  78:	add	x19, x0, #0x8
  7c:	ldr	x0, [x0, #24]
  80:	cmp	x0, x19
  84:	b.eq	a4 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE24_M_get_insert_unique_posERS1_+0xa4>  // b.none
  88:	mov	x0, x19
  8c:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  90:	mov	x1, x19
  94:	ldr	w3, [x0, #32]
  98:	ldr	w5, [x20]
  9c:	mov	x19, x0
  a0:	b	60 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE24_M_get_insert_unique_posERS1_+0x60>
  a4:	mov	x1, x19
  a8:	mov	x0, #0x0                   	// #0
  ac:	ldp	x19, x20, [sp, #16]
  b0:	ldp	x29, x30, [sp], #32
  b4:	ret

Disassembly of section .text._ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_:

0000000000000000 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	add	x0, x0, #0x8
  14:	stp	x21, x22, [sp, #32]
  18:	cmp	x1, x0
  1c:	mov	x21, x2
  20:	b.eq	bc <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0xbc>  // b.none
  24:	ldr	w0, [x1, #32]
  28:	mov	x19, x1
  2c:	ldr	w22, [x2]
  30:	cmp	w22, w0
  34:	b.cs	80 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x80>  // b.hs, b.nlast
  38:	ldr	x0, [x20, #24]
  3c:	mov	x1, x0
  40:	cmp	x0, x19
  44:	b.eq	70 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x70>  // b.none
  48:	mov	x0, x19
  4c:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  50:	mov	x3, x0
  54:	ldr	w0, [x0, #32]
  58:	cmp	w22, w0
  5c:	b.ls	d8 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0xd8>  // b.plast
  60:	ldr	x1, [x3, #24]
  64:	cmp	x1, #0x0
  68:	csel	x0, x19, xzr, ne  // ne = any
  6c:	csel	x1, x3, x19, eq  // eq = none
  70:	ldp	x19, x20, [sp, #16]
  74:	ldp	x21, x22, [sp, #32]
  78:	ldp	x29, x30, [sp], #48
  7c:	ret
  80:	b.ls	f0 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0xf0>  // b.plast
  84:	ldr	x0, [x20, #32]
  88:	cmp	x0, x1
  8c:	b.eq	120 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x120>  // b.none
  90:	mov	x0, x1
  94:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
  98:	mov	x3, x0
  9c:	ldr	w0, [x0, #32]
  a0:	cmp	w22, w0
  a4:	b.cs	d8 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0xd8>  // b.hs, b.nlast
  a8:	ldr	x1, [x19, #24]
  ac:	cmp	x1, #0x0
  b0:	csel	x0, x3, xzr, ne  // ne = any
  b4:	csel	x1, x3, x19, ne  // ne = any
  b8:	b	70 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x70>
  bc:	ldr	x0, [x20, #40]
  c0:	cbz	x0, d8 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0xd8>
  c4:	ldr	x19, [x20, #32]
  c8:	ldr	w0, [x2]
  cc:	ldr	w1, [x19, #32]
  d0:	cmp	w1, w0
  d4:	b.cc	108 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x108>  // b.lo, b.ul, b.last
  d8:	mov	x1, x21
  dc:	mov	x0, x20
  e0:	ldp	x19, x20, [sp, #16]
  e4:	ldp	x21, x22, [sp, #32]
  e8:	ldp	x29, x30, [sp], #48
  ec:	b	0 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_>
  f0:	mov	x0, x1
  f4:	mov	x1, #0x0                   	// #0
  f8:	ldp	x19, x20, [sp, #16]
  fc:	ldp	x21, x22, [sp, #32]
 100:	ldp	x29, x30, [sp], #48
 104:	ret
 108:	mov	x1, x19
 10c:	mov	x0, #0x0                   	// #0
 110:	ldp	x19, x20, [sp, #16]
 114:	ldp	x21, x22, [sp, #32]
 118:	ldp	x29, x30, [sp], #48
 11c:	ret
 120:	mov	x1, x0
 124:	mov	x0, #0x0                   	// #0
 128:	b	70 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x70>

TableGenBackend.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-128]!
   4:	mov	x29, sp
   8:	stp	x23, x24, [sp, #48]
   c:	mov	x24, x1
  10:	mov	x23, x3
  14:	ldr	x1, [x0]
  18:	stp	x19, x20, [sp, #16]
  1c:	mov	x19, x0
  20:	stp	x21, x22, [sp, #32]
  24:	mov	x22, x4
  28:	and	w21, w2, #0xff
  2c:	ldr	x1, [x1, #72]
  30:	stp	x25, x26, [sp, #64]
  34:	add	x26, sp, #0x60
  38:	str	x27, [sp, #80]
  3c:	blr	x1
  40:	mov	x27, x0
  44:	ldr	x1, [x19, #8]
  48:	mov	x0, x24
  4c:	ldr	x20, [x19, #24]
  50:	mov	x8, x26
  54:	sub	x25, x20, x1
  58:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
  5c:	ldr	x0, [sp, #104]
  60:	add	x0, x22, x0
  64:	cmp	x0, #0x50
  68:	b.hi	1b8 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0x1b8>  // b.pmore
  6c:	ldr	x0, [sp, #96]
  70:	add	x26, x26, #0x10
  74:	cmp	x0, x26
  78:	b.eq	80 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0x80>  // b.none
  7c:	bl	0 <_ZdlPv>
  80:	mov	x0, x24
  84:	mov	x1, x19
  88:	bl	0 <_ZNK4llvm5Twine5printERNS_11raw_ostreamE>
  8c:	mov	x24, #0x50                  	// #80
  90:	ldr	x1, [x19]
  94:	mov	x0, x19
  98:	sub	x24, x24, x22
  9c:	ldr	x1, [x1, #72]
  a0:	blr	x1
  a4:	sub	x2, x0, x27
  a8:	ldr	x1, [x19, #8]
  ac:	ldr	x0, [x19, #24]
  b0:	sub	x20, x0, x1
  b4:	sub	x20, x20, x25
  b8:	add	x20, x20, x2
  bc:	cmp	x20, x24
  c0:	b.cc	e4 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0xe4>  // b.lo, b.ul, b.last
  c4:	b	10c <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0x10c>
  c8:	add	x1, x0, #0x1
  cc:	str	x1, [x19, #24]
  d0:	strb	w21, [x0]
  d4:	add	x20, x20, #0x1
  d8:	cmp	x24, x20
  dc:	ldr	x0, [x19, #24]
  e0:	b.eq	10c <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0x10c>  // b.none
  e4:	ldr	x1, [x19, #16]
  e8:	cmp	x1, x0
  ec:	b.hi	c8 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0xc8>  // b.pmore
  f0:	mov	w1, w21
  f4:	mov	x0, x19
  f8:	add	x20, x20, #0x1
  fc:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 100:	cmp	x24, x20
 104:	ldr	x0, [x19, #24]
 108:	b.ne	e4 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0xe4>  // b.any
 10c:	ldr	x1, [x19, #16]
 110:	sub	x2, x1, x0
 114:	cmp	x22, x2
 118:	b.hi	19c <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0x19c>  // b.pmore
 11c:	cbnz	x22, 154 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0x154>
 120:	cmp	x0, x1
 124:	b.cs	174 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0x174>  // b.hs, b.nlast
 128:	add	x1, x0, #0x1
 12c:	str	x1, [x19, #24]
 130:	mov	w1, #0xa                   	// #10
 134:	strb	w1, [x0]
 138:	ldp	x19, x20, [sp, #16]
 13c:	ldp	x21, x22, [sp, #32]
 140:	ldp	x23, x24, [sp, #48]
 144:	ldp	x25, x26, [sp, #64]
 148:	ldr	x27, [sp, #80]
 14c:	ldp	x29, x30, [sp], #128
 150:	ret
 154:	mov	x1, x23
 158:	mov	x2, x22
 15c:	bl	0 <memcpy>
 160:	ldp	x1, x0, [x19, #16]
 164:	add	x0, x0, x22
 168:	str	x0, [x19, #24]
 16c:	cmp	x0, x1
 170:	b.cc	128 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0x128>  // b.lo, b.ul, b.last
 174:	mov	x0, x19
 178:	mov	w1, #0xa                   	// #10
 17c:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 180:	ldp	x19, x20, [sp, #16]
 184:	ldp	x21, x22, [sp, #32]
 188:	ldp	x23, x24, [sp, #48]
 18c:	ldp	x25, x26, [sp, #64]
 190:	ldr	x27, [sp, #80]
 194:	ldp	x29, x30, [sp], #128
 198:	ret
 19c:	mov	x1, x23
 1a0:	mov	x0, x19
 1a4:	mov	x2, x22
 1a8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 1ac:	mov	x19, x0
 1b0:	ldp	x1, x0, [x0, #16]
 1b4:	b	120 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0x120>
 1b8:	adrp	x3, 0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 1bc:	adrp	x1, 0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 1c0:	adrp	x0, 0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 1c4:	add	x3, x3, #0x0
 1c8:	add	x1, x1, #0x0
 1cc:	add	x0, x0, #0x0
 1d0:	mov	w2, #0x18                  	// #24
 1d4:	bl	0 <__assert_fail>

00000000000001d8 <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE>:
 1d8:	stp	x29, x30, [sp, #-160]!
 1dc:	adrp	x5, 0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 1e0:	add	x5, x5, #0x0
 1e4:	mov	x29, sp
 1e8:	mov	w6, #0x103                 	// #259
 1ec:	mov	x4, #0xf                   	// #15
 1f0:	stp	x25, x26, [sp, #64]
 1f4:	add	x25, sp, #0x88
 1f8:	adrp	x3, 0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 1fc:	add	x3, x3, #0x0
 200:	stp	x19, x20, [sp, #16]
 204:	mov	x20, x1
 208:	mov	x1, x25
 20c:	stp	x21, x22, [sp, #32]
 210:	mov	x22, x0
 214:	mov	x0, x2
 218:	stp	x23, x24, [sp, #48]
 21c:	add	x21, sp, #0x68
 220:	stp	x27, x28, [sp, #80]
 224:	mov	x28, x2
 228:	mov	w2, #0x2d                  	// #45
 22c:	stp	x5, xzr, [sp, #136]
 230:	adrp	x27, 0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 234:	add	x27, x27, #0x0
 238:	strh	w6, [sp, #152]
 23c:	bl	0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 240:	adrp	x5, 0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 244:	add	x5, x5, #0x0
 248:	mov	w6, #0x105                 	// #261
 24c:	mov	x0, x28
 250:	mov	x4, #0x3                   	// #3
 254:	mov	x3, x27
 258:	mov	x1, x25
 25c:	mov	w2, #0x20                  	// #32
 260:	stp	x5, x4, [sp, #104]
 264:	stp	x21, xzr, [sp, #136]
 268:	strh	w6, [sp, #152]
 26c:	bl	0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 270:	ldr	x26, [sp, #112]
 274:	add	x0, x26, #0x3
 278:	cmp	x0, #0x4f
 27c:	b.hi	3ec <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE+0x214>  // b.pmore
 280:	mov	x26, #0x50                  	// #80
 284:	add	x24, sp, #0x78
 288:	sub	x26, x26, x0
 28c:	mov	x19, #0x0                   	// #0
 290:	mov	w23, #0x505                 	// #1285
 294:	nop
 298:	sub	x5, x20, x19
 29c:	mov	x3, x27
 2a0:	cmp	x5, x26
 2a4:	mov	x0, x28
 2a8:	csel	x5, x5, x26, ls  // ls = plast
 2ac:	cmp	x19, x20
 2b0:	csel	x1, x19, x20, ls  // ls = plast
 2b4:	add	x19, x19, x5
 2b8:	sub	x6, x20, x1
 2bc:	add	x7, x22, x1
 2c0:	cmp	x6, x5
 2c4:	mov	x1, x25
 2c8:	csel	x5, x6, x5, ls  // ls = plast
 2cc:	mov	x4, #0x3                   	// #3
 2d0:	mov	w2, #0x20                  	// #32
 2d4:	stp	x7, x5, [sp, #120]
 2d8:	stp	x21, x24, [sp, #136]
 2dc:	strh	w23, [sp, #152]
 2e0:	bl	0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 2e4:	cmp	x19, x20
 2e8:	b.cc	298 <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE+0xc0>  // b.lo, b.ul, b.last
 2ec:	mov	x3, x27
 2f0:	mov	x1, x25
 2f4:	mov	x0, x28
 2f8:	mov	w19, #0x105                 	// #261
 2fc:	mov	x4, #0x3                   	// #3
 300:	mov	w2, #0x20                  	// #32
 304:	stp	x21, xzr, [sp, #136]
 308:	strh	w19, [sp, #152]
 30c:	bl	0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 310:	adrp	x5, 0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 314:	add	x5, x5, #0x0
 318:	mov	w6, #0x305                 	// #773
 31c:	mov	x3, x27
 320:	mov	x1, x25
 324:	mov	x0, x28
 328:	mov	x4, #0x3                   	// #3
 32c:	mov	w2, #0x20                  	// #32
 330:	stp	x21, x5, [sp, #136]
 334:	strh	w6, [sp, #152]
 338:	bl	0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 33c:	mov	x3, x27
 340:	mov	x1, x25
 344:	mov	x0, x28
 348:	mov	x4, #0x3                   	// #3
 34c:	mov	w2, #0x20                  	// #32
 350:	stp	x21, xzr, [sp, #136]
 354:	strh	w19, [sp, #152]
 358:	bl	0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 35c:	adrp	x5, 0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 360:	add	x5, x5, #0x0
 364:	mov	w6, #0x103                 	// #259
 368:	mov	x1, x25
 36c:	mov	x0, x28
 370:	adrp	x3, 0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 374:	mov	x4, #0x5                   	// #5
 378:	add	x3, x3, #0x0
 37c:	mov	w2, #0x2d                  	// #45
 380:	stp	x5, xzr, [sp, #136]
 384:	strh	w6, [sp, #152]
 388:	bl	0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 38c:	ldp	x1, x0, [x28, #16]
 390:	cmp	x0, x1
 394:	b.cs	3c4 <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE+0x1ec>  // b.hs, b.nlast
 398:	add	x1, x0, #0x1
 39c:	str	x1, [x28, #24]
 3a0:	mov	w1, #0xa                   	// #10
 3a4:	strb	w1, [x0]
 3a8:	ldp	x19, x20, [sp, #16]
 3ac:	ldp	x21, x22, [sp, #32]
 3b0:	ldp	x23, x24, [sp, #48]
 3b4:	ldp	x25, x26, [sp, #64]
 3b8:	ldp	x27, x28, [sp, #80]
 3bc:	ldp	x29, x30, [sp], #160
 3c0:	ret
 3c4:	mov	x0, x28
 3c8:	mov	w1, #0xa                   	// #10
 3cc:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 3d0:	ldp	x19, x20, [sp, #16]
 3d4:	ldp	x21, x22, [sp, #32]
 3d8:	ldp	x23, x24, [sp, #48]
 3dc:	ldp	x25, x26, [sp, #64]
 3e0:	ldp	x27, x28, [sp, #80]
 3e4:	ldp	x29, x30, [sp], #160
 3e8:	ret
 3ec:	adrp	x3, 0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 3f0:	adrp	x1, 0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 3f4:	adrp	x0, 0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 3f8:	add	x3, x3, #0x0
 3fc:	add	x1, x1, #0x0
 400:	add	x0, x0, #0x0
 404:	mov	w2, #0x27                  	// #39
 408:	bl	0 <__assert_fail>

TGLexer.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm7TGLexer6getLocEv>:
       0:	ldr	x0, [x0, #32]
       4:	ret

0000000000000008 <_ZN4llvm7TGLexer11ReturnErrorENS_5SMLocERKNS_5TwineE>:
       8:	stp	x29, x30, [sp, #-48]!
       c:	mov	x29, sp
      10:	add	x0, sp, #0x28
      14:	str	x19, [sp, #16]
      18:	mov	x19, #0x1                   	// #1
      1c:	str	x1, [sp, #40]
      20:	mov	x1, x19
      24:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
      28:	mov	w0, w19
      2c:	ldr	x19, [sp, #16]
      30:	ldp	x29, x30, [sp], #48
      34:	ret

0000000000000038 <_ZN4llvm7TGLexer11ReturnErrorEPKcRKNS_5TwineE>:
      38:	b	8 <_ZN4llvm7TGLexer11ReturnErrorENS_5SMLocERKNS_5TwineE>
      3c:	nop

0000000000000040 <_ZN4llvm7TGLexer11getNextCharEv>:
      40:	mov	x1, x0
      44:	ldr	x3, [x0, #8]
      48:	add	x0, x3, #0x1
      4c:	str	x0, [x1, #8]
      50:	ldrb	w2, [x3]
      54:	cmp	w2, #0xa
      58:	b.eq	90 <_ZN4llvm7TGLexer11getNextCharEv+0x50>  // b.none
      5c:	cmp	w2, #0xd
      60:	b.eq	90 <_ZN4llvm7TGLexer11getNextCharEv+0x50>  // b.none
      64:	mov	w0, w2
      68:	cbz	w2, 70 <_ZN4llvm7TGLexer11getNextCharEv+0x30>
      6c:	ret
      70:	ldp	x2, x4, [x1, #16]
      74:	mov	w0, #0x0                   	// #0
      78:	add	x2, x2, x4
      7c:	cmp	x3, x2
      80:	b.ne	6c <_ZN4llvm7TGLexer11getNextCharEv+0x2c>  // b.any
      84:	mov	w0, #0xffffffff            	// #-1
      88:	str	x3, [x1, #8]
      8c:	ret
      90:	ldrb	w4, [x3, #1]
      94:	mov	w0, #0xa                   	// #10
      98:	cmp	w4, w0
      9c:	ccmp	w4, #0xd, #0x4, ne  // ne = any
      a0:	ccmp	w4, w2, #0x4, eq  // eq = none
      a4:	b.eq	6c <_ZN4llvm7TGLexer11getNextCharEv+0x2c>  // b.none
      a8:	add	x3, x3, #0x2
      ac:	str	x3, [x1, #8]
      b0:	ret
      b4:	nop

00000000000000b8 <_ZNK4llvm7TGLexer12peekNextCharEi>:
      b8:	ldr	x0, [x0, #8]
      bc:	ldrb	w0, [x0, w1, sxtw]
      c0:	ret
      c4:	nop

00000000000000c8 <_ZN4llvm7TGLexer9LexStringEv>:
      c8:	stp	x29, x30, [sp, #-128]!
      cc:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
      d0:	mov	x4, #0x0                   	// #0
      d4:	mov	x29, sp
      d8:	stp	x19, x20, [sp, #16]
      dc:	mov	x19, x0
      e0:	add	x3, x3, #0x0
      e4:	stp	x21, x22, [sp, #32]
      e8:	add	x21, x0, #0x30
      ec:	mov	x0, x21
      f0:	ldr	x2, [x19, #56]
      f4:	mov	x1, #0x0                   	// #0
      f8:	ldr	x20, [x19, #8]
      fc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
     100:	ldr	x2, [x19, #8]
     104:	ldrb	w0, [x2]
     108:	cmp	w0, #0x22
     10c:	b.eq	190 <_ZN4llvm7TGLexer9LexStringEv+0xc8>  // b.none
     110:	stp	x23, x24, [sp, #48]
     114:	add	x24, x19, #0x40
     118:	stp	x25, x26, [sp, #64]
     11c:	mov	w26, #0x9                   	// #9
     120:	str	x27, [sp, #80]
     124:	mov	w27, #0xa                   	// #10
     128:	cbnz	w0, 1a0 <_ZN4llvm7TGLexer9LexStringEv+0xd8>
     12c:	ldp	x0, x1, [x19, #16]
     130:	add	x0, x0, x1
     134:	cmp	x2, x0
     138:	b.eq	35c <_ZN4llvm7TGLexer9LexStringEv+0x294>  // b.none
     13c:	add	x1, x2, #0x1
     140:	ldp	x0, x23, [x19, #48]
     144:	str	x1, [x19, #8]
     148:	ldrb	w25, [x2]
     14c:	cmp	x0, x24
     150:	add	x22, x23, #0x1
     154:	b.eq	204 <_ZN4llvm7TGLexer9LexStringEv+0x13c>  // b.none
     158:	ldr	x1, [x21, #16]
     15c:	cmp	x22, x1
     160:	b.hi	210 <_ZN4llvm7TGLexer9LexStringEv+0x148>  // b.pmore
     164:	strb	w25, [x0, x23]
     168:	str	x22, [x19, #56]
     16c:	ldr	x0, [x19, #48]
     170:	strb	wzr, [x0, x22]
     174:	ldr	x2, [x19, #8]
     178:	ldrb	w0, [x2]
     17c:	cmp	w0, #0x22
     180:	b.ne	128 <_ZN4llvm7TGLexer9LexStringEv+0x60>  // b.any
     184:	ldp	x23, x24, [sp, #48]
     188:	ldp	x25, x26, [sp, #64]
     18c:	ldr	x27, [sp, #80]
     190:	add	x2, x2, #0x1
     194:	mov	w0, #0x49                  	// #73
     198:	str	x2, [x19, #8]
     19c:	b	2bc <_ZN4llvm7TGLexer9LexStringEv+0x1f4>
     1a0:	cmp	w0, #0xa
     1a4:	ccmp	w0, #0xd, #0x4, ne  // ne = any
     1a8:	b.eq	37c <_ZN4llvm7TGLexer9LexStringEv+0x2b4>  // b.none
     1ac:	cmp	w0, #0x5c
     1b0:	add	x1, x2, #0x1
     1b4:	b.ne	140 <_ZN4llvm7TGLexer9LexStringEv+0x78>  // b.any
     1b8:	str	x1, [x19, #8]
     1bc:	ldrb	w0, [x2, #1]
     1c0:	cmp	w0, #0x27
     1c4:	b.eq	1e8 <_ZN4llvm7TGLexer9LexStringEv+0x120>  // b.none
     1c8:	b.hi	230 <_ZN4llvm7TGLexer9LexStringEv+0x168>  // b.pmore
     1cc:	cmp	w0, #0xa
     1d0:	b.eq	2d8 <_ZN4llvm7TGLexer9LexStringEv+0x210>  // b.none
     1d4:	b.ls	27c <_ZN4llvm7TGLexer9LexStringEv+0x1b4>  // b.plast
     1d8:	cmp	w0, #0xd
     1dc:	b.eq	2d8 <_ZN4llvm7TGLexer9LexStringEv+0x210>  // b.none
     1e0:	cmp	w0, #0x22
     1e4:	b.ne	290 <_ZN4llvm7TGLexer9LexStringEv+0x1c8>  // b.any
     1e8:	ldp	x0, x23, [x19, #48]
     1ec:	add	x1, x2, #0x2
     1f0:	str	x1, [x19, #8]
     1f4:	ldrb	w25, [x2, #1]
     1f8:	cmp	x0, x24
     1fc:	add	x22, x23, #0x1
     200:	b.ne	158 <_ZN4llvm7TGLexer9LexStringEv+0x90>  // b.any
     204:	mov	x1, #0xf                   	// #15
     208:	cmp	x22, x1
     20c:	b.ls	164 <_ZN4llvm7TGLexer9LexStringEv+0x9c>  // b.plast
     210:	mov	x0, x21
     214:	mov	x1, x23
     218:	mov	x4, #0x1                   	// #1
     21c:	mov	x3, #0x0                   	// #0
     220:	mov	x2, #0x0                   	// #0
     224:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>
     228:	ldr	x0, [x19, #48]
     22c:	b	164 <_ZN4llvm7TGLexer9LexStringEv+0x9c>
     230:	cmp	w0, #0x6e
     234:	b.eq	2ec <_ZN4llvm7TGLexer9LexStringEv+0x224>  // b.none
     238:	cmp	w0, #0x74
     23c:	b.ne	2cc <_ZN4llvm7TGLexer9LexStringEv+0x204>  // b.any
     240:	ldp	x0, x23, [x19, #48]
     244:	cmp	x0, x24
     248:	add	x22, x23, #0x1
     24c:	b.eq	354 <_ZN4llvm7TGLexer9LexStringEv+0x28c>  // b.none
     250:	ldr	x1, [x21, #16]
     254:	cmp	x22, x1
     258:	b.hi	334 <_ZN4llvm7TGLexer9LexStringEv+0x26c>  // b.pmore
     25c:	strb	w26, [x0, x23]
     260:	ldr	x0, [x19, #48]
     264:	str	x22, [x19, #56]
     268:	strb	wzr, [x0, x22]
     26c:	ldr	x2, [x19, #8]
     270:	add	x2, x2, #0x1
     274:	str	x2, [x19, #8]
     278:	b	178 <_ZN4llvm7TGLexer9LexStringEv+0xb0>
     27c:	cbnz	w0, 290 <_ZN4llvm7TGLexer9LexStringEv+0x1c8>
     280:	ldp	x0, x2, [x19, #16]
     284:	add	x0, x0, x2
     288:	cmp	x1, x0
     28c:	b.eq	35c <_ZN4llvm7TGLexer9LexStringEv+0x294>  // b.none
     290:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
     294:	mov	x0, x19
     298:	add	x3, x3, #0x0
     29c:	mov	w4, #0x103                 	// #259
     2a0:	add	x2, sp, #0x68
     2a4:	stp	x3, xzr, [sp, #104]
     2a8:	strh	w4, [sp, #120]
     2ac:	bl	38 <_ZN4llvm7TGLexer11ReturnErrorEPKcRKNS_5TwineE>
     2b0:	ldp	x23, x24, [sp, #48]
     2b4:	ldp	x25, x26, [sp, #64]
     2b8:	ldr	x27, [sp, #80]
     2bc:	ldp	x19, x20, [sp, #16]
     2c0:	ldp	x21, x22, [sp, #32]
     2c4:	ldp	x29, x30, [sp], #128
     2c8:	ret
     2cc:	cmp	w0, #0x5c
     2d0:	b.ne	290 <_ZN4llvm7TGLexer9LexStringEv+0x1c8>  // b.any
     2d4:	b	1e8 <_ZN4llvm7TGLexer9LexStringEv+0x120>
     2d8:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
     2dc:	mov	x0, x19
     2e0:	add	x3, x3, #0x0
     2e4:	mov	w4, #0x103                 	// #259
     2e8:	b	2a0 <_ZN4llvm7TGLexer9LexStringEv+0x1d8>
     2ec:	ldp	x0, x23, [x19, #48]
     2f0:	cmp	x0, x24
     2f4:	add	x22, x23, #0x1
     2f8:	b.eq	374 <_ZN4llvm7TGLexer9LexStringEv+0x2ac>  // b.none
     2fc:	ldr	x1, [x21, #16]
     300:	cmp	x22, x1
     304:	b.hi	310 <_ZN4llvm7TGLexer9LexStringEv+0x248>  // b.pmore
     308:	strb	w27, [x0, x23]
     30c:	b	260 <_ZN4llvm7TGLexer9LexStringEv+0x198>
     310:	mov	x0, x21
     314:	mov	x1, x23
     318:	mov	x4, #0x1                   	// #1
     31c:	mov	x3, #0x0                   	// #0
     320:	mov	x2, #0x0                   	// #0
     324:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>
     328:	ldr	x0, [x19, #48]
     32c:	strb	w27, [x0, x23]
     330:	b	260 <_ZN4llvm7TGLexer9LexStringEv+0x198>
     334:	mov	x0, x21
     338:	mov	x1, x23
     33c:	mov	x4, #0x1                   	// #1
     340:	mov	x3, #0x0                   	// #0
     344:	mov	x2, #0x0                   	// #0
     348:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>
     34c:	ldr	x0, [x19, #48]
     350:	b	25c <_ZN4llvm7TGLexer9LexStringEv+0x194>
     354:	mov	x1, #0xf                   	// #15
     358:	b	254 <_ZN4llvm7TGLexer9LexStringEv+0x18c>
     35c:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
     360:	mov	x1, x20
     364:	mov	x0, x19
     368:	add	x3, x3, #0x0
     36c:	mov	w4, #0x103                 	// #259
     370:	b	2a0 <_ZN4llvm7TGLexer9LexStringEv+0x1d8>
     374:	mov	x1, #0xf                   	// #15
     378:	b	300 <_ZN4llvm7TGLexer9LexStringEv+0x238>
     37c:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
     380:	mov	x1, x20
     384:	mov	x0, x19
     388:	add	x3, x3, #0x0
     38c:	mov	w4, #0x103                 	// #259
     390:	b	2a0 <_ZN4llvm7TGLexer9LexStringEv+0x1d8>
     394:	nop

0000000000000398 <_ZN4llvm7TGLexer10LexVarNameEv>:
     398:	stp	x29, x30, [sp, #-80]!
     39c:	mov	x29, sp
     3a0:	stp	x21, x22, [sp, #32]
     3a4:	mov	x21, x0
     3a8:	ldr	x22, [x0, #8]
     3ac:	stp	x19, x20, [sp, #16]
     3b0:	ldrb	w19, [x22]
     3b4:	mov	w0, w19
     3b8:	bl	0 <isalpha>
     3bc:	cmp	w19, #0x5f
     3c0:	ccmp	w0, #0x0, #0x0, ne  // ne = any
     3c4:	b.eq	428 <_ZN4llvm7TGLexer10LexVarNameEv+0x90>  // b.none
     3c8:	add	x20, x22, #0x1
     3cc:	str	x20, [x21, #8]
     3d0:	b	3dc <_ZN4llvm7TGLexer10LexVarNameEv+0x44>
     3d4:	add	x20, x20, #0x1
     3d8:	str	x20, [x21, #8]
     3dc:	ldrb	w19, [x20]
     3e0:	mov	w0, w19
     3e4:	bl	0 <isalpha>
     3e8:	sub	w1, w19, #0x30
     3ec:	cmp	w19, #0x5f
     3f0:	cbnz	w0, 3d4 <_ZN4llvm7TGLexer10LexVarNameEv+0x3c>
     3f4:	ccmp	w1, #0x9, #0x0, ne  // ne = any
     3f8:	b.ls	3d4 <_ZN4llvm7TGLexer10LexVarNameEv+0x3c>  // b.plast
     3fc:	ldr	x2, [x21, #56]
     400:	sub	x4, x20, x22
     404:	mov	x3, x22
     408:	add	x0, x21, #0x30
     40c:	mov	x1, #0x0                   	// #0
     410:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
     414:	mov	w0, #0x4a                  	// #74
     418:	ldp	x19, x20, [sp, #16]
     41c:	ldp	x21, x22, [sp, #32]
     420:	ldp	x29, x30, [sp], #80
     424:	ret
     428:	ldr	x1, [x21, #32]
     42c:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
     430:	add	x3, x3, #0x0
     434:	mov	w4, #0x103                 	// #259
     438:	add	x2, sp, #0x38
     43c:	mov	x0, x21
     440:	stp	x3, xzr, [sp, #56]
     444:	strh	w4, [sp, #72]
     448:	bl	38 <_ZN4llvm7TGLexer11ReturnErrorEPKcRKNS_5TwineE>
     44c:	ldp	x19, x20, [sp, #16]
     450:	ldp	x21, x22, [sp, #32]
     454:	ldp	x29, x30, [sp], #80
     458:	ret
     45c:	nop

0000000000000460 <_ZN4llvm7TGLexer15SkipBCPLCommentEv>:
     460:	ldr	x1, [x0, #8]
     464:	add	x1, x1, #0x1
     468:	str	x1, [x0, #8]
     46c:	ldrb	w2, [x1]
     470:	cmp	w2, #0xa
     474:	b.eq	494 <_ZN4llvm7TGLexer15SkipBCPLCommentEv+0x34>  // b.none
     478:	cmp	w2, #0xd
     47c:	b.eq	494 <_ZN4llvm7TGLexer15SkipBCPLCommentEv+0x34>  // b.none
     480:	cbnz	w2, 464 <_ZN4llvm7TGLexer15SkipBCPLCommentEv+0x4>
     484:	ldp	x2, x3, [x0, #16]
     488:	add	x2, x2, x3
     48c:	cmp	x1, x2
     490:	b.ne	464 <_ZN4llvm7TGLexer15SkipBCPLCommentEv+0x4>  // b.any
     494:	ret

0000000000000498 <_ZN4llvm7TGLexer12SkipCCommentEv>:
     498:	stp	x29, x30, [sp, #-64]!
     49c:	mov	x29, sp
     4a0:	stp	x19, x20, [sp, #16]
     4a4:	mov	x19, x0
     4a8:	mov	w20, #0x1                   	// #1
     4ac:	ldr	x0, [x0, #8]
     4b0:	add	x0, x0, #0x1
     4b4:	str	x0, [x19, #8]
     4b8:	mov	x0, x19
     4bc:	bl	40 <_ZN4llvm7TGLexer11getNextCharEv>
     4c0:	cmp	w0, #0x2a
     4c4:	b.eq	538 <_ZN4llvm7TGLexer12SkipCCommentEv+0xa0>  // b.none
     4c8:	cmp	w0, #0x2f
     4cc:	b.eq	508 <_ZN4llvm7TGLexer12SkipCCommentEv+0x70>  // b.none
     4d0:	cmn	w0, #0x1
     4d4:	b.ne	4b8 <_ZN4llvm7TGLexer12SkipCCommentEv+0x20>  // b.any
     4d8:	ldr	x0, [x19, #32]
     4dc:	adrp	x2, 0 <_ZNK4llvm7TGLexer6getLocEv>
     4e0:	add	x2, x2, #0x0
     4e4:	mov	w3, #0x103                 	// #259
     4e8:	add	x1, sp, #0x28
     4ec:	stp	x2, xzr, [sp, #40]
     4f0:	strh	w3, [sp, #56]
     4f4:	bl	0 <_ZN4llvm10PrintErrorEPKcRKNS_5TwineE>
     4f8:	mov	w0, #0x1                   	// #1
     4fc:	ldp	x19, x20, [sp, #16]
     500:	ldp	x29, x30, [sp], #64
     504:	ret
     508:	ldr	x0, [x19, #8]
     50c:	ldrb	w1, [x0]
     510:	cmp	w1, #0x2a
     514:	b.ne	4b8 <_ZN4llvm7TGLexer12SkipCCommentEv+0x20>  // b.any
     518:	add	x0, x0, #0x1
     51c:	str	x0, [x19, #8]
     520:	add	w20, w20, #0x1
     524:	mov	x0, x19
     528:	bl	40 <_ZN4llvm7TGLexer11getNextCharEv>
     52c:	cmp	w0, #0x2a
     530:	b.ne	4c8 <_ZN4llvm7TGLexer12SkipCCommentEv+0x30>  // b.any
     534:	nop
     538:	ldr	x0, [x19, #8]
     53c:	ldrb	w1, [x0]
     540:	cmp	w1, #0x2f
     544:	b.ne	4b8 <_ZN4llvm7TGLexer12SkipCCommentEv+0x20>  // b.any
     548:	add	x0, x0, #0x1
     54c:	str	x0, [x19, #8]
     550:	subs	w20, w20, #0x1
     554:	b.ne	4b8 <_ZN4llvm7TGLexer12SkipCCommentEv+0x20>  // b.any
     558:	mov	w0, #0x0                   	// #0
     55c:	b	4fc <_ZN4llvm7TGLexer12SkipCCommentEv+0x64>

0000000000000560 <_ZN4llvm7TGLexer9LexNumberEv>:
     560:	stp	x29, x30, [sp, #-80]!
     564:	mov	x29, sp
     568:	ldr	x1, [x0, #8]
     56c:	stp	x19, x20, [sp, #16]
     570:	mov	x20, x0
     574:	ldurb	w2, [x1, #-1]
     578:	ldrb	w0, [x1]
     57c:	cmp	w2, #0x30
     580:	b.eq	5cc <_ZN4llvm7TGLexer9LexNumberEv+0x6c>  // b.none
     584:	sub	w0, w0, #0x30
     588:	cmp	w0, #0x9
     58c:	b.ls	5e8 <_ZN4llvm7TGLexer9LexNumberEv+0x88>  // b.plast
     590:	cmp	w2, #0x2d
     594:	b.eq	6f0 <_ZN4llvm7TGLexer9LexNumberEv+0x190>  // b.none
     598:	cmp	w2, #0x2b
     59c:	mov	w0, #0x3                   	// #3
     5a0:	b.eq	5c0 <_ZN4llvm7TGLexer9LexNumberEv+0x60>  // b.none
     5a4:	ldr	x0, [x20, #32]
     5a8:	mov	x1, #0x0                   	// #0
     5ac:	mov	w2, #0xa                   	// #10
     5b0:	bl	0 <strtoll>
     5b4:	mov	x1, x0
     5b8:	mov	w0, #0x46                  	// #70
     5bc:	str	x1, [x20, #80]
     5c0:	ldp	x19, x20, [sp, #16]
     5c4:	ldp	x29, x30, [sp], #80
     5c8:	ret
     5cc:	cmp	w0, #0x78
     5d0:	b.eq	680 <_ZN4llvm7TGLexer9LexNumberEv+0x120>  // b.none
     5d4:	cmp	w0, #0x62
     5d8:	b.eq	60c <_ZN4llvm7TGLexer9LexNumberEv+0xac>  // b.none
     5dc:	sub	w0, w0, #0x30
     5e0:	cmp	w0, #0x9
     5e4:	b.hi	5a4 <_ZN4llvm7TGLexer9LexNumberEv+0x44>  // b.pmore
     5e8:	add	x1, x1, #0x1
     5ec:	nop
     5f0:	str	x1, [x20, #8]
     5f4:	add	x1, x1, #0x1
     5f8:	ldurb	w2, [x1, #-1]
     5fc:	sub	w2, w2, #0x30
     600:	cmp	w2, #0x9
     604:	b.ls	5f0 <_ZN4llvm7TGLexer9LexNumberEv+0x90>  // b.plast
     608:	b	5a4 <_ZN4llvm7TGLexer9LexNumberEv+0x44>
     60c:	add	x0, x1, #0x1
     610:	str	x0, [x20, #8]
     614:	ldrb	w2, [x1, #1]
     618:	sub	w2, w2, #0x30
     61c:	and	w2, w2, #0xff
     620:	cmp	w2, #0x1
     624:	b.hi	780 <_ZN4llvm7TGLexer9LexNumberEv+0x220>  // b.pmore
     628:	add	x1, x1, #0x2
     62c:	nop
     630:	mov	x3, x1
     634:	str	x1, [x20, #8]
     638:	add	x1, x1, #0x1
     63c:	ldrb	w2, [x3]
     640:	sub	w2, w2, #0x30
     644:	and	w2, w2, #0xff
     648:	cmp	w2, #0x1
     64c:	b.ls	630 <_ZN4llvm7TGLexer9LexNumberEv+0xd0>  // b.plast
     650:	cmp	x0, x3
     654:	b.ne	764 <_ZN4llvm7TGLexer9LexNumberEv+0x204>  // b.any
     658:	sub	x1, x3, #0x2
     65c:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
     660:	add	x3, x3, #0x0
     664:	mov	w4, #0x103                 	// #259
     668:	mov	x0, x20
     66c:	add	x2, sp, #0x38
     670:	stp	x3, xzr, [sp, #56]
     674:	strh	w4, [sp, #72]
     678:	bl	38 <_ZN4llvm7TGLexer11ReturnErrorEPKcRKNS_5TwineE>
     67c:	b	5c0 <_ZN4llvm7TGLexer9LexNumberEv+0x60>
     680:	add	x19, x1, #0x1
     684:	stp	x21, x22, [sp, #32]
     688:	mov	x21, x19
     68c:	str	x19, [x20, #8]
     690:	b	698 <_ZN4llvm7TGLexer9LexNumberEv+0x138>
     694:	str	x21, [x20, #8]
     698:	mov	x22, x21
     69c:	ldrb	w0, [x21], #1
     6a0:	bl	0 <isxdigit>
     6a4:	cbnz	w0, 694 <_ZN4llvm7TGLexer9LexNumberEv+0x134>
     6a8:	cmp	x19, x22
     6ac:	b.eq	6f8 <_ZN4llvm7TGLexer9LexNumberEv+0x198>  // b.none
     6b0:	bl	0 <__errno_location>
     6b4:	mov	x21, x0
     6b8:	mov	w2, #0x10                  	// #16
     6bc:	mov	x0, x19
     6c0:	mov	x1, #0x0                   	// #0
     6c4:	str	wzr, [x21]
     6c8:	bl	0 <strtoll>
     6cc:	str	x0, [x20, #80]
     6d0:	ldr	w0, [x21]
     6d4:	cmp	w0, #0x16
     6d8:	b.eq	6f8 <_ZN4llvm7TGLexer9LexNumberEv+0x198>  // b.none
     6dc:	cmp	w0, #0x22
     6e0:	b.eq	724 <_ZN4llvm7TGLexer9LexNumberEv+0x1c4>  // b.none
     6e4:	mov	w0, #0x46                  	// #70
     6e8:	ldp	x21, x22, [sp, #32]
     6ec:	b	5c0 <_ZN4llvm7TGLexer9LexNumberEv+0x60>
     6f0:	mov	w0, #0x2                   	// #2
     6f4:	b	5c0 <_ZN4llvm7TGLexer9LexNumberEv+0x60>
     6f8:	ldr	x1, [x20, #32]
     6fc:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
     700:	add	x3, x3, #0x0
     704:	mov	w4, #0x103                 	// #259
     708:	mov	x0, x20
     70c:	add	x2, sp, #0x38
     710:	stp	x3, xzr, [sp, #56]
     714:	strh	w4, [sp, #72]
     718:	bl	38 <_ZN4llvm7TGLexer11ReturnErrorEPKcRKNS_5TwineE>
     71c:	ldp	x21, x22, [sp, #32]
     720:	b	5c0 <_ZN4llvm7TGLexer9LexNumberEv+0x60>
     724:	str	wzr, [x21]
     728:	mov	x0, x19
     72c:	mov	w2, #0x10                  	// #16
     730:	mov	x1, #0x0                   	// #0
     734:	bl	0 <strtoull>
     738:	str	x0, [x20, #80]
     73c:	ldr	w0, [x21]
     740:	cmp	w0, #0x16
     744:	b.eq	6f8 <_ZN4llvm7TGLexer9LexNumberEv+0x198>  // b.none
     748:	cmp	w0, #0x22
     74c:	b.ne	6e4 <_ZN4llvm7TGLexer9LexNumberEv+0x184>  // b.any
     750:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
     754:	mov	w4, #0x103                 	// #259
     758:	add	x3, x3, #0x0
     75c:	ldr	x1, [x20, #32]
     760:	b	708 <_ZN4llvm7TGLexer9LexNumberEv+0x1a8>
     764:	mov	x1, #0x0                   	// #0
     768:	mov	w2, #0x2                   	// #2
     76c:	bl	0 <strtoll>
     770:	mov	x1, x0
     774:	mov	w0, #0x47                  	// #71
     778:	str	x1, [x20, #80]
     77c:	b	5c0 <_ZN4llvm7TGLexer9LexNumberEv+0x60>
     780:	mov	x3, x0
     784:	b	658 <_ZN4llvm7TGLexer9LexNumberEv+0xf8>

0000000000000788 <_ZN4llvm7TGLexer10LexBracketEv>:
     788:	stp	x29, x30, [sp, #-80]!
     78c:	mov	x29, sp
     790:	stp	x19, x20, [sp, #16]
     794:	mov	x19, x0
     798:	ldr	x20, [x0, #8]
     79c:	ldrb	w0, [x20]
     7a0:	cmp	w0, #0x7b
     7a4:	b.ne	850 <_ZN4llvm7TGLexer10LexBracketEv+0xc8>  // b.any
     7a8:	str	x21, [sp, #32]
     7ac:	add	x21, x20, #0x1
     7b0:	str	x21, [x19, #8]
     7b4:	nop
     7b8:	mov	x0, x19
     7bc:	bl	40 <_ZN4llvm7TGLexer11getNextCharEv>
     7c0:	cmn	w0, #0x1
     7c4:	b.eq	81c <_ZN4llvm7TGLexer10LexBracketEv+0x94>  // b.none
     7c8:	cmp	w0, #0x7d
     7cc:	b.ne	7b8 <_ZN4llvm7TGLexer10LexBracketEv+0x30>  // b.any
     7d0:	mov	x0, x19
     7d4:	bl	40 <_ZN4llvm7TGLexer11getNextCharEv>
     7d8:	cmn	w0, #0x1
     7dc:	b.eq	81c <_ZN4llvm7TGLexer10LexBracketEv+0x94>  // b.none
     7e0:	cmp	w0, #0x5d
     7e4:	b.ne	7b8 <_ZN4llvm7TGLexer10LexBracketEv+0x30>  // b.any
     7e8:	ldr	x4, [x19, #8]
     7ec:	mov	x3, x21
     7f0:	ldr	x2, [x19, #56]
     7f4:	sub	x4, x4, #0x2
     7f8:	sub	x4, x4, x21
     7fc:	add	x0, x19, #0x30
     800:	mov	x1, #0x0                   	// #0
     804:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
     808:	mov	w0, #0x4b                  	// #75
     80c:	ldp	x19, x20, [sp, #16]
     810:	ldr	x21, [sp, #32]
     814:	ldp	x29, x30, [sp], #80
     818:	ret
     81c:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
     820:	add	x3, x3, #0x0
     824:	mov	w4, #0x103                 	// #259
     828:	sub	x1, x20, #0x1
     82c:	add	x2, sp, #0x38
     830:	mov	x0, x19
     834:	stp	x3, xzr, [sp, #56]
     838:	strh	w4, [sp, #72]
     83c:	bl	38 <_ZN4llvm7TGLexer11ReturnErrorEPKcRKNS_5TwineE>
     840:	ldp	x19, x20, [sp, #16]
     844:	ldr	x21, [sp, #32]
     848:	ldp	x29, x30, [sp], #80
     84c:	ret
     850:	mov	w0, #0x4                   	// #4
     854:	ldp	x19, x20, [sp, #16]
     858:	ldp	x29, x30, [sp], #80
     85c:	ret

0000000000000860 <_ZN4llvm7TGLexer10LexExclaimEv>:
     860:	stp	x29, x30, [sp, #-80]!
     864:	mov	x29, sp
     868:	stp	x21, x22, [sp, #32]
     86c:	ldr	x22, [x0, #8]
     870:	stp	x19, x20, [sp, #16]
     874:	mov	x20, x0
     878:	add	x19, x22, #0x1
     87c:	ldrb	w0, [x22]
     880:	bl	0 <isalpha>
     884:	cbz	w0, 8d0 <_ZN4llvm7TGLexer10LexExclaimEv+0x70>
     888:	str	x19, [x20, #8]
     88c:	mov	x21, x19
     890:	ldrb	w0, [x19], #1
     894:	bl	0 <isalpha>
     898:	cbnz	w0, 888 <_ZN4llvm7TGLexer10LexExclaimEv+0x28>
     89c:	sub	x21, x21, x22
     8a0:	cmp	x21, #0x2
     8a4:	b.eq	904 <_ZN4llvm7TGLexer10LexExclaimEv+0xa4>  // b.none
     8a8:	cmp	x21, #0x4
     8ac:	b.ne	a48 <_ZN4llvm7TGLexer10LexExclaimEv+0x1e8>  // b.any
     8b0:	ldr	w0, [x22]
     8b4:	mov	w1, #0x6f63                	// #28515
     8b8:	movk	w1, #0x646e, lsl #16
     8bc:	cmp	w0, w1
     8c0:	b.ne	948 <_ZN4llvm7TGLexer10LexExclaimEv+0xe8>  // b.any
     8c4:	mov	w0, #0x3b                  	// #59
     8c8:	str	w0, [sp, #72]
     8cc:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     8d0:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
     8d4:	sub	x1, x22, #0x1
     8d8:	mov	x0, x20
     8dc:	add	x3, x3, #0x0
     8e0:	mov	w4, #0x103                 	// #259
     8e4:	add	x2, sp, #0x38
     8e8:	stp	x3, xzr, [sp, #56]
     8ec:	strh	w4, [sp, #72]
     8f0:	bl	38 <_ZN4llvm7TGLexer11ReturnErrorEPKcRKNS_5TwineE>
     8f4:	ldp	x19, x20, [sp, #16]
     8f8:	ldp	x21, x22, [sp, #32]
     8fc:	ldp	x29, x30, [sp], #80
     900:	ret
     904:	ldrh	w0, [x22]
     908:	mov	w1, #0x7165                	// #29029
     90c:	cmp	w0, w1
     910:	b.ne	980 <_ZN4llvm7TGLexer10LexExclaimEv+0x120>  // b.any
     914:	mov	w0, #0x3c                  	// #60
     918:	str	w0, [sp, #72]
     91c:	nop
     920:	ldr	w0, [sp, #72]
     924:	cmp	w0, #0x1
     928:	b.ne	8f4 <_ZN4llvm7TGLexer10LexExclaimEv+0x94>  // b.any
     92c:	nop
     930:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
     934:	sub	x1, x22, #0x1
     938:	mov	x0, x20
     93c:	add	x3, x3, #0x0
     940:	mov	w4, #0x103                 	// #259
     944:	b	8e4 <_ZN4llvm7TGLexer10LexExclaimEv+0x84>
     948:	mov	w1, #0x6568                	// #25960
     94c:	movk	w1, #0x6461, lsl #16
     950:	cmp	w0, w1
     954:	b.ne	964 <_ZN4llvm7TGLexer10LexExclaimEv+0x104>  // b.any
     958:	mov	w0, #0x36                  	// #54
     95c:	str	w0, [sp, #72]
     960:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     964:	mov	w1, #0x6174                	// #24948
     968:	movk	w1, #0x6c69, lsl #16
     96c:	cmp	w0, w1
     970:	b.ne	a10 <_ZN4llvm7TGLexer10LexExclaimEv+0x1b0>  // b.any
     974:	mov	w0, #0x37                  	// #55
     978:	str	w0, [sp, #72]
     97c:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     980:	mov	w1, #0x656e                	// #25966
     984:	cmp	w0, w1
     988:	b.ne	998 <_ZN4llvm7TGLexer10LexExclaimEv+0x138>  // b.any
     98c:	mov	w0, #0x3f                  	// #63
     990:	str	w0, [sp, #72]
     994:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     998:	mov	w1, #0x656c                	// #25964
     99c:	cmp	w0, w1
     9a0:	b.ne	9b0 <_ZN4llvm7TGLexer10LexExclaimEv+0x150>  // b.any
     9a4:	mov	w0, #0x40                  	// #64
     9a8:	str	w0, [sp, #72]
     9ac:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     9b0:	mov	w1, #0x746c                	// #29804
     9b4:	cmp	w0, w1
     9b8:	b.ne	9c8 <_ZN4llvm7TGLexer10LexExclaimEv+0x168>  // b.any
     9bc:	mov	w0, #0x41                  	// #65
     9c0:	str	w0, [sp, #72]
     9c4:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     9c8:	mov	w1, #0x6567                	// #25959
     9cc:	cmp	w0, w1
     9d0:	b.ne	9e0 <_ZN4llvm7TGLexer10LexExclaimEv+0x180>  // b.any
     9d4:	mov	w0, #0x42                  	// #66
     9d8:	str	w0, [sp, #72]
     9dc:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     9e0:	mov	w1, #0x7467                	// #29799
     9e4:	cmp	w0, w1
     9e8:	b.eq	a04 <_ZN4llvm7TGLexer10LexExclaimEv+0x1a4>  // b.none
     9ec:	mov	w1, #0x6669                	// #26217
     9f0:	cmp	w0, w1
     9f4:	b.ne	af0 <_ZN4llvm7TGLexer10LexExclaimEv+0x290>  // b.any
     9f8:	mov	w0, #0x3a                  	// #58
     9fc:	str	w0, [sp, #72]
     a00:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     a04:	mov	w0, #0x43                  	// #67
     a08:	str	w0, [sp, #72]
     a0c:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     a10:	mov	w1, #0x6973                	// #26995
     a14:	movk	w1, #0x657a, lsl #16
     a18:	cmp	w0, w1
     a1c:	b.eq	a3c <_ZN4llvm7TGLexer10LexExclaimEv+0x1dc>  // b.none
     a20:	mov	w1, #0x6163                	// #24931
     a24:	movk	w1, #0x7473, lsl #16
     a28:	cmp	w0, w1
     a2c:	b.ne	930 <_ZN4llvm7TGLexer10LexExclaimEv+0xd0>  // b.any
     a30:	mov	w0, #0x32                  	// #50
     a34:	str	w0, [sp, #72]
     a38:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     a3c:	mov	w0, #0x38                  	// #56
     a40:	str	w0, [sp, #72]
     a44:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     a48:	cmp	x21, #0x3
     a4c:	b.ne	ae4 <_ZN4llvm7TGLexer10LexExclaimEv+0x284>  // b.any
     a50:	ldrh	w0, [x22]
     a54:	mov	w1, #0x7369                	// #29545
     a58:	cmp	w0, w1
     a5c:	b.eq	cb8 <_ZN4llvm7TGLexer10LexExclaimEv+0x458>  // b.none
     a60:	mov	w1, #0x6f63                	// #28515
     a64:	cmp	w0, w1
     a68:	b.eq	cd0 <_ZN4llvm7TGLexer10LexExclaimEv+0x470>  // b.none
     a6c:	mov	w1, #0x6164                	// #24932
     a70:	cmp	w0, w1
     a74:	b.eq	d00 <_ZN4llvm7TGLexer10LexExclaimEv+0x4a0>  // b.none
     a78:	mov	w1, #0x6461                	// #25697
     a7c:	cmp	w0, w1
     a80:	b.eq	ce8 <_ZN4llvm7TGLexer10LexExclaimEv+0x488>  // b.none
     a84:	mov	w1, #0x756d                	// #30061
     a88:	cmp	w0, w1
     a8c:	b.eq	d18 <_ZN4llvm7TGLexer10LexExclaimEv+0x4b8>  // b.none
     a90:	mov	w1, #0x6e61                	// #28257
     a94:	cmp	w0, w1
     a98:	b.eq	d48 <_ZN4llvm7TGLexer10LexExclaimEv+0x4e8>  // b.none
     a9c:	mov	w1, #0x6873                	// #26739
     aa0:	cmp	w0, w1
     aa4:	b.eq	d60 <_ZN4llvm7TGLexer10LexExclaimEv+0x500>  // b.none
     aa8:	mov	w1, #0x7273                	// #29299
     aac:	cmp	w0, w1
     ab0:	b.ne	930 <_ZN4llvm7TGLexer10LexExclaimEv+0xd0>  // b.any
     ab4:	ldrb	w1, [x22, #2]
     ab8:	cmp	w1, #0x61
     abc:	b.eq	d78 <_ZN4llvm7TGLexer10LexExclaimEv+0x518>  // b.none
     ac0:	mov	w1, #0x7273                	// #29299
     ac4:	cmp	w0, w1
     ac8:	b.ne	930 <_ZN4llvm7TGLexer10LexExclaimEv+0xd0>  // b.any
     acc:	ldrb	w0, [x22, #2]
     ad0:	cmp	w0, #0x6c
     ad4:	b.ne	930 <_ZN4llvm7TGLexer10LexExclaimEv+0xd0>  // b.any
     ad8:	mov	w0, #0x2d                  	// #45
     adc:	str	w0, [sp, #72]
     ae0:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     ae4:	cmp	x21, #0x2
     ae8:	b.ne	b48 <_ZN4llvm7TGLexer10LexExclaimEv+0x2e8>  // b.any
     aec:	ldrh	w0, [x22]
     af0:	mov	w1, #0x726f                	// #29295
     af4:	cmp	w0, w1
     af8:	b.eq	b3c <_ZN4llvm7TGLexer10LexExclaimEv+0x2dc>  // b.none
     afc:	cmp	x21, #0x5
     b00:	b.ne	930 <_ZN4llvm7TGLexer10LexExclaimEv+0xd0>  // b.any
     b04:	ldr	w0, [x22]
     b08:	mov	w1, #0x6573                	// #25971
     b0c:	movk	w1, #0x6f74, lsl #16
     b10:	cmp	w0, w1
     b14:	b.eq	ca4 <_ZN4llvm7TGLexer10LexExclaimEv+0x444>  // b.none
     b18:	mov	w1, #0x6567                	// #25959
     b1c:	movk	w1, #0x6f74, lsl #16
     b20:	cmp	w0, w1
     b24:	b.ne	930 <_ZN4llvm7TGLexer10LexExclaimEv+0xd0>  // b.any
     b28:	ldrb	w0, [x22, #4]
     b2c:	cmp	w0, #0x70
     b30:	b.ne	930 <_ZN4llvm7TGLexer10LexExclaimEv+0xd0>  // b.any
     b34:	mov	w0, #0x45                  	// #69
     b38:	b	8f4 <_ZN4llvm7TGLexer10LexExclaimEv+0x94>
     b3c:	mov	w0, #0x2b                  	// #43
     b40:	str	w0, [sp, #72]
     b44:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     b48:	cmp	x21, #0x5
     b4c:	b.eq	c28 <_ZN4llvm7TGLexer10LexExclaimEv+0x3c8>  // b.none
     b50:	cmp	x21, #0x7
     b54:	b.ne	b94 <_ZN4llvm7TGLexer10LexExclaimEv+0x334>  // b.any
     b58:	ldr	w1, [x22]
     b5c:	mov	w0, #0x6f66                	// #28518
     b60:	movk	w0, #0x6572, lsl #16
     b64:	cmp	w1, w0
     b68:	b.ne	930 <_ZN4llvm7TGLexer10LexExclaimEv+0xd0>  // b.any
     b6c:	ldrh	w1, [x22, #4]
     b70:	mov	w0, #0x6361                	// #25441
     b74:	cmp	w1, w0
     b78:	b.ne	930 <_ZN4llvm7TGLexer10LexExclaimEv+0xd0>  // b.any
     b7c:	ldrb	w0, [x22, #6]
     b80:	cmp	w0, #0x68
     b84:	b.ne	930 <_ZN4llvm7TGLexer10LexExclaimEv+0xd0>  // b.any
     b88:	mov	w0, #0x34                  	// #52
     b8c:	str	w0, [sp, #72]
     b90:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     b94:	cmp	x21, #0xa
     b98:	b.eq	bf0 <_ZN4llvm7TGLexer10LexExclaimEv+0x390>  // b.none
     b9c:	cmp	x21, #0x9
     ba0:	b.ne	afc <_ZN4llvm7TGLexer10LexExclaimEv+0x29c>  // b.any
     ba4:	mov	x1, #0x696c                	// #26988
     ba8:	ldr	x0, [x22]
     bac:	movk	x1, #0x7473, lsl #16
     bb0:	movk	x1, #0x7073, lsl #32
     bb4:	movk	x1, #0x616c, lsl #48
     bb8:	cmp	x0, x1
     bbc:	b.eq	c8c <_ZN4llvm7TGLexer10LexExclaimEv+0x42c>  // b.none
     bc0:	mov	x1, #0x7473                	// #29811
     bc4:	movk	x1, #0x6372, lsl #16
     bc8:	movk	x1, #0x6e6f, lsl #32
     bcc:	movk	x1, #0x6163, lsl #48
     bd0:	cmp	x0, x1
     bd4:	b.ne	930 <_ZN4llvm7TGLexer10LexExclaimEv+0xd0>  // b.any
     bd8:	ldrb	w0, [x22, #8]
     bdc:	cmp	w0, #0x74
     be0:	b.ne	930 <_ZN4llvm7TGLexer10LexExclaimEv+0xd0>  // b.any
     be4:	mov	w0, #0x31                  	// #49
     be8:	str	w0, [sp, #72]
     bec:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     bf0:	mov	x0, #0x696c                	// #26988
     bf4:	ldr	x1, [x22]
     bf8:	movk	x0, #0x7473, lsl #16
     bfc:	movk	x0, #0x6f63, lsl #32
     c00:	movk	x0, #0x636e, lsl #48
     c04:	cmp	x1, x0
     c08:	b.ne	930 <_ZN4llvm7TGLexer10LexExclaimEv+0xd0>  // b.any
     c0c:	ldrh	w1, [x22, #8]
     c10:	mov	w0, #0x7461                	// #29793
     c14:	cmp	w1, w0
     c18:	b.ne	930 <_ZN4llvm7TGLexer10LexExclaimEv+0xd0>  // b.any
     c1c:	mov	w0, #0x2f                  	// #47
     c20:	str	w0, [sp, #72]
     c24:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     c28:	ldr	w0, [x22]
     c2c:	mov	w1, #0x6d65                	// #28005
     c30:	movk	w1, #0x7470, lsl #16
     c34:	cmp	w0, w1
     c38:	b.eq	c74 <_ZN4llvm7TGLexer10LexExclaimEv+0x414>  // b.none
     c3c:	mov	w1, #0x7573                	// #30067
     c40:	movk	w1, #0x7362, lsl #16
     c44:	cmp	w0, w1
     c48:	b.eq	d30 <_ZN4llvm7TGLexer10LexExclaimEv+0x4d0>  // b.none
     c4c:	mov	w1, #0x6f66                	// #28518
     c50:	movk	w1, #0x646c, lsl #16
     c54:	cmp	w0, w1
     c58:	b.ne	b04 <_ZN4llvm7TGLexer10LexExclaimEv+0x2a4>  // b.any
     c5c:	ldrb	w0, [x22, #4]
     c60:	cmp	w0, #0x6c
     c64:	b.ne	b04 <_ZN4llvm7TGLexer10LexExclaimEv+0x2a4>  // b.any
     c68:	mov	w0, #0x35                  	// #53
     c6c:	str	w0, [sp, #72]
     c70:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     c74:	ldrb	w1, [x22, #4]
     c78:	cmp	w1, #0x79
     c7c:	b.ne	c3c <_ZN4llvm7TGLexer10LexExclaimEv+0x3dc>  // b.any
     c80:	mov	w0, #0x39                  	// #57
     c84:	str	w0, [sp, #72]
     c88:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     c8c:	ldrb	w1, [x22, #8]
     c90:	cmp	w1, #0x74
     c94:	b.ne	bc0 <_ZN4llvm7TGLexer10LexExclaimEv+0x360>  // b.any
     c98:	mov	w0, #0x30                  	// #48
     c9c:	str	w0, [sp, #72]
     ca0:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     ca4:	ldrb	w1, [x22, #4]
     ca8:	cmp	w1, #0x70
     cac:	b.ne	b18 <_ZN4llvm7TGLexer10LexExclaimEv+0x2b8>  // b.any
     cb0:	mov	w0, #0x44                  	// #68
     cb4:	b	8f4 <_ZN4llvm7TGLexer10LexExclaimEv+0x94>
     cb8:	ldrb	w1, [x22, #2]
     cbc:	cmp	w1, #0x61
     cc0:	b.ne	a60 <_ZN4llvm7TGLexer10LexExclaimEv+0x200>  // b.any
     cc4:	mov	w0, #0x3d                  	// #61
     cc8:	str	w0, [sp, #72]
     ccc:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     cd0:	ldrb	w1, [x22, #2]
     cd4:	cmp	w1, #0x6e
     cd8:	b.ne	a6c <_ZN4llvm7TGLexer10LexExclaimEv+0x20c>  // b.any
     cdc:	mov	w0, #0x27                  	// #39
     ce0:	str	w0, [sp, #72]
     ce4:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     ce8:	ldrb	w1, [x22, #2]
     cec:	cmp	w1, #0x64
     cf0:	b.ne	a84 <_ZN4llvm7TGLexer10LexExclaimEv+0x224>  // b.any
     cf4:	mov	w0, #0x28                  	// #40
     cf8:	str	w0, [sp, #72]
     cfc:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     d00:	ldrb	w1, [x22, #2]
     d04:	cmp	w1, #0x67
     d08:	b.ne	a78 <_ZN4llvm7TGLexer10LexExclaimEv+0x218>  // b.any
     d0c:	mov	w0, #0x3e                  	// #62
     d10:	str	w0, [sp, #72]
     d14:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     d18:	ldrb	w1, [x22, #2]
     d1c:	cmp	w1, #0x6c
     d20:	b.ne	a90 <_ZN4llvm7TGLexer10LexExclaimEv+0x230>  // b.any
     d24:	mov	w0, #0x29                  	// #41
     d28:	str	w0, [sp, #72]
     d2c:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     d30:	ldrb	w1, [x22, #4]
     d34:	cmp	w1, #0x74
     d38:	b.ne	c4c <_ZN4llvm7TGLexer10LexExclaimEv+0x3ec>  // b.any
     d3c:	mov	w0, #0x33                  	// #51
     d40:	str	w0, [sp, #72]
     d44:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     d48:	ldrb	w1, [x22, #2]
     d4c:	cmp	w1, #0x64
     d50:	b.ne	a9c <_ZN4llvm7TGLexer10LexExclaimEv+0x23c>  // b.any
     d54:	mov	w0, #0x2a                  	// #42
     d58:	str	w0, [sp, #72]
     d5c:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     d60:	ldrb	w1, [x22, #2]
     d64:	cmp	w1, #0x6c
     d68:	b.ne	aa8 <_ZN4llvm7TGLexer10LexExclaimEv+0x248>  // b.any
     d6c:	mov	w0, #0x2e                  	// #46
     d70:	str	w0, [sp, #72]
     d74:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     d78:	mov	w0, #0x2c                  	// #44
     d7c:	str	w0, [sp, #72]
     d80:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     d84:	nop

0000000000000d88 <_ZNK4llvm7TGLexer15prepIsDirectiveEv>:
     d88:	stp	x29, x30, [sp, #-64]!
     d8c:	mov	x1, #0x5                   	// #5
     d90:	mov	x29, sp
     d94:	stp	x21, x22, [sp, #32]
     d98:	adrp	x22, 0 <_ZNK4llvm7TGLexer6getLocEv>
     d9c:	add	x22, x22, #0x0
     da0:	adrp	x21, 0 <_ZNK4llvm7TGLexer6getLocEv>
     da4:	add	x21, x21, #0x0
     da8:	stp	x23, x24, [sp, #48]
     dac:	mov	x24, x0
     db0:	add	x23, x22, #0x50
     db4:	stp	x19, x20, [sp, #16]
     db8:	mov	w19, #0x0                   	// #0
     dbc:	ldr	x0, [x24, #8]
     dc0:	ldrb	w20, [x0]
     dc4:	b	df0 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x68>
     dc8:	ldrb	w2, [x21, w19, uxtw]
     dcc:	add	w19, w19, #0x1
     dd0:	mov	w1, w19
     dd4:	cmp	w2, w20
     dd8:	b.ne	e24 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x9c>  // b.any
     ddc:	bl	b8 <_ZNK4llvm7TGLexer12peekNextCharEi>
     de0:	mov	w20, w0
     de4:	mov	x0, x21
     de8:	bl	0 <strlen>
     dec:	mov	x1, x0
     df0:	mov	x0, x24
     df4:	cmp	x1, w19, uxtw
     df8:	b.hi	dc8 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x40>  // b.pmore
     dfc:	cmp	w20, #0x20
     e00:	sub	w0, w20, #0x9
     e04:	ldr	w21, [x22]
     e08:	ccmp	w0, #0x1, #0x0, ne  // ne = any
     e0c:	b.ls	e48 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0xc0>  // b.plast
     e10:	cmp	w20, #0xd
     e14:	ccmn	w20, #0x1, #0x4, ne  // ne = any
     e18:	b.eq	e48 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0xc0>  // b.none
     e1c:	cmp	w20, #0x2f
     e20:	b.eq	e60 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0xd8>  // b.none
     e24:	add	x22, x22, #0x10
     e28:	cmp	x22, x23
     e2c:	b.eq	e44 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0xbc>  // b.none
     e30:	ldr	x21, [x22, #8]
     e34:	mov	x0, x21
     e38:	bl	0 <strlen>
     e3c:	mov	x1, x0
     e40:	b	db8 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x30>
     e44:	mov	w21, #0x1                   	// #1
     e48:	mov	w0, w21
     e4c:	ldp	x19, x20, [sp, #16]
     e50:	ldp	x21, x22, [sp, #32]
     e54:	ldp	x23, x24, [sp, #48]
     e58:	ldp	x29, x30, [sp], #64
     e5c:	ret
     e60:	add	w1, w19, #0x1
     e64:	mov	x0, x24
     e68:	bl	b8 <_ZNK4llvm7TGLexer12peekNextCharEi>
     e6c:	cmp	w0, #0x2a
     e70:	ccmp	w0, w20, #0x4, ne  // ne = any
     e74:	b.ne	e24 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x9c>  // b.any
     e78:	b	e48 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0xc0>
     e7c:	nop

0000000000000e80 <_ZN4llvm7TGLexer28prepEatPreprocessorDirectiveENS_5tgtok7TokKindE>:
     e80:	mov	x2, x0
     e84:	cmp	w1, #0x4c
     e88:	ldr	x0, [x0, #8]
     e8c:	str	x0, [x2, #32]
     e90:	b.eq	ed8 <_ZN4llvm7TGLexer28prepEatPreprocessorDirectiveENS_5tgtok7TokKindE+0x58>  // b.none
     e94:	cmp	w1, #0x4d
     e98:	b.eq	eec <_ZN4llvm7TGLexer28prepEatPreprocessorDirectiveENS_5tgtok7TokKindE+0x6c>  // b.none
     e9c:	cmp	w1, #0x4e
     ea0:	b.eq	ef4 <_ZN4llvm7TGLexer28prepEatPreprocessorDirectiveENS_5tgtok7TokKindE+0x74>  // b.none
     ea4:	cmp	w1, #0x4f
     ea8:	b.eq	ed8 <_ZN4llvm7TGLexer28prepEatPreprocessorDirectiveENS_5tgtok7TokKindE+0x58>  // b.none
     eac:	cmp	w1, #0x50
     eb0:	b.eq	eec <_ZN4llvm7TGLexer28prepEatPreprocessorDirectiveENS_5tgtok7TokKindE+0x6c>  // b.none
     eb4:	stp	x29, x30, [sp, #-48]!
     eb8:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
     ebc:	add	x1, x1, #0x0
     ec0:	mov	w2, #0x103                 	// #259
     ec4:	mov	x29, sp
     ec8:	add	x0, sp, #0x18
     ecc:	stp	x1, xzr, [sp, #24]
     ed0:	strh	w2, [sp, #40]
     ed4:	bl	0 <_ZN4llvm15PrintFatalErrorERKNS_5TwineE>
     ed8:	mov	x1, #0x5                   	// #5
     edc:	add	x1, x0, x1
     ee0:	mov	w0, #0x1                   	// #1
     ee4:	str	x1, [x2, #8]
     ee8:	ret
     eec:	mov	x1, #0x6                   	// #6
     ef0:	b	edc <_ZN4llvm7TGLexer28prepEatPreprocessorDirectiveENS_5tgtok7TokKindE+0x5c>
     ef4:	mov	x1, #0x4                   	// #4
     ef8:	b	edc <_ZN4llvm7TGLexer28prepEatPreprocessorDirectiveENS_5tgtok7TokKindE+0x5c>
     efc:	nop

0000000000000f00 <_ZN4llvm7TGLexer16prepLexMacroNameEv>:
     f00:	stp	x29, x30, [sp, #-48]!
     f04:	mov	x29, sp
     f08:	stp	x21, x22, [sp, #32]
     f0c:	mov	x21, x0
     f10:	ldr	x22, [x0, #8]
     f14:	ldrb	w0, [x22]
     f18:	cmp	w0, #0x20
     f1c:	ccmp	w0, #0x9, #0x4, ne  // ne = any
     f20:	b.ne	f40 <_ZN4llvm7TGLexer16prepLexMacroNameEv+0x40>  // b.any
     f24:	add	x1, x22, #0x1
     f28:	str	x1, [x21, #8]
     f2c:	mov	x22, x1
     f30:	ldrb	w2, [x1], #1
     f34:	cmp	w2, #0x20
     f38:	ccmp	w2, #0x9, #0x4, ne  // ne = any
     f3c:	b.eq	f28 <_ZN4llvm7TGLexer16prepLexMacroNameEv+0x28>  // b.none
     f40:	str	x22, [x21, #32]
     f44:	ldrb	w0, [x22]
     f48:	cmp	w0, #0x5f
     f4c:	b.eq	f58 <_ZN4llvm7TGLexer16prepLexMacroNameEv+0x58>  // b.none
     f50:	bl	0 <isalpha>
     f54:	cbz	w0, fa4 <_ZN4llvm7TGLexer16prepLexMacroNameEv+0xa4>
     f58:	stp	x19, x20, [sp, #16]
     f5c:	ldr	x19, [x21, #8]
     f60:	b	f6c <_ZN4llvm7TGLexer16prepLexMacroNameEv+0x6c>
     f64:	add	x19, x19, #0x1
     f68:	str	x19, [x21, #8]
     f6c:	ldrb	w20, [x19]
     f70:	mov	w0, w20
     f74:	bl	0 <isalpha>
     f78:	sub	w1, w20, #0x30
     f7c:	cmp	w20, #0x5f
     f80:	cbnz	w0, f64 <_ZN4llvm7TGLexer16prepLexMacroNameEv+0x64>
     f84:	ccmp	w1, #0x9, #0x0, ne  // ne = any
     f88:	b.ls	f64 <_ZN4llvm7TGLexer16prepLexMacroNameEv+0x64>  // b.plast
     f8c:	sub	x1, x19, x22
     f90:	mov	x0, x22
     f94:	ldp	x19, x20, [sp, #16]
     f98:	ldp	x21, x22, [sp, #32]
     f9c:	ldp	x29, x30, [sp], #48
     fa0:	ret
     fa4:	mov	x1, #0x0                   	// #0
     fa8:	adrp	x0, 0 <_ZNK4llvm7TGLexer6getLocEv>
     fac:	add	x0, x0, #0x0
     fb0:	ldp	x21, x22, [sp, #32]
     fb4:	ldp	x29, x30, [sp], #48
     fb8:	ret
     fbc:	nop

0000000000000fc0 <_ZN4llvm7TGLexer17prepSkipLineBeginEv>:
     fc0:	stp	x29, x30, [sp, #-32]!
     fc4:	mov	x29, sp
     fc8:	ldp	x3, x2, [x0, #16]
     fcc:	str	x19, [sp, #16]
     fd0:	mov	x19, x0
     fd4:	ldr	x0, [x0, #8]
     fd8:	add	x1, x3, x2
     fdc:	cmp	x0, x1
     fe0:	b.eq	101c <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0x5c>  // b.none
     fe4:	ldrb	w1, [x0]
     fe8:	cmp	w1, #0x2f
     fec:	b.eq	1040 <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0x80>  // b.none
     ff0:	b.hi	101c <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0x5c>  // b.pmore
     ff4:	cmp	w1, #0xd
     ff8:	b.eq	1008 <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0x48>  // b.none
     ffc:	b.ls	102c <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0x6c>  // b.plast
    1000:	cmp	w1, #0x20
    1004:	b.ne	101c <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0x5c>  // b.any
    1008:	add	x0, x0, #0x1
    100c:	str	x0, [x19, #8]
    1010:	add	x1, x3, x2
    1014:	cmp	x0, x1
    1018:	b.ne	fe4 <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0x24>  // b.any
    101c:	mov	w0, #0x1                   	// #1
    1020:	ldr	x19, [sp, #16]
    1024:	ldp	x29, x30, [sp], #32
    1028:	ret
    102c:	sub	w1, w1, #0x9
    1030:	and	w1, w1, #0xff
    1034:	cmp	w1, #0x1
    1038:	b.ls	1008 <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0x48>  // b.plast
    103c:	b	101c <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0x5c>
    1040:	mov	x0, x19
    1044:	mov	w1, #0x1                   	// #1
    1048:	bl	b8 <_ZNK4llvm7TGLexer12peekNextCharEi>
    104c:	cmp	w0, #0x2a
    1050:	b.ne	101c <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0x5c>  // b.any
    1054:	ldr	x1, [x19, #8]
    1058:	str	x1, [x19, #32]
    105c:	mov	x0, x19
    1060:	add	x1, x1, #0x1
    1064:	str	x1, [x19, #8]
    1068:	bl	498 <_ZN4llvm7TGLexer12SkipCCommentEv>
    106c:	tst	w0, #0xff
    1070:	b.eq	1084 <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0xc4>  // b.none
    1074:	mov	w0, #0x0                   	// #0
    1078:	ldr	x19, [sp, #16]
    107c:	ldp	x29, x30, [sp], #32
    1080:	ret
    1084:	ldp	x0, x3, [x19, #8]
    1088:	ldr	x2, [x19, #24]
    108c:	b	1010 <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0x50>

0000000000001090 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv>:
    1090:	stp	x29, x30, [sp, #-64]!
    1094:	mov	x29, sp
    1098:	ldr	x3, [x0, #16]
    109c:	str	x19, [sp, #16]
    10a0:	mov	x19, x0
    10a4:	ldr	x0, [x0, #24]
    10a8:	ldr	x2, [x19, #8]
    10ac:	add	x1, x3, x0
    10b0:	cmp	x2, x1
    10b4:	b.eq	1108 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x78>  // b.none
    10b8:	ldrb	w1, [x2]
    10bc:	cmp	w1, #0x20
    10c0:	b.eq	10f4 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x64>  // b.none
    10c4:	b.hi	1118 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x88>  // b.pmore
    10c8:	cmp	w1, #0xa
    10cc:	b.eq	1108 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x78>  // b.none
    10d0:	cmp	w1, #0xd
    10d4:	b.eq	1108 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x78>  // b.none
    10d8:	cmp	w1, #0x9
    10dc:	b.eq	10f4 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x64>  // b.none
    10e0:	str	x2, [x19, #32]
    10e4:	mov	w0, #0x0                   	// #0
    10e8:	ldr	x19, [sp, #16]
    10ec:	ldp	x29, x30, [sp], #64
    10f0:	ret
    10f4:	add	x2, x2, #0x1
    10f8:	str	x2, [x19, #8]
    10fc:	add	x1, x3, x0
    1100:	cmp	x2, x1
    1104:	b.ne	10b8 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x28>  // b.any
    1108:	mov	w0, #0x1                   	// #1
    110c:	ldr	x19, [sp, #16]
    1110:	ldp	x29, x30, [sp], #64
    1114:	ret
    1118:	cmp	w1, #0x2f
    111c:	b.ne	10e0 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x50>  // b.any
    1120:	mov	x0, x19
    1124:	mov	w1, #0x1                   	// #1
    1128:	bl	b8 <_ZNK4llvm7TGLexer12peekNextCharEi>
    112c:	cmp	w0, #0x2f
    1130:	b.eq	1178 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0xe8>  // b.none
    1134:	cmp	w0, #0x2a
    1138:	ldr	x0, [x19, #8]
    113c:	b.ne	1198 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x108>  // b.any
    1140:	add	x1, x0, #0x1
    1144:	str	x1, [x19, #8]
    1148:	str	x0, [x19, #32]
    114c:	mov	x0, x19
    1150:	bl	498 <_ZN4llvm7TGLexer12SkipCCommentEv>
    1154:	tst	w0, #0xff
    1158:	b.eq	116c <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0xdc>  // b.none
    115c:	mov	w0, #0x0                   	// #0
    1160:	ldr	x19, [sp, #16]
    1164:	ldp	x29, x30, [sp], #64
    1168:	ret
    116c:	ldp	x2, x3, [x19, #8]
    1170:	ldr	x0, [x19, #24]
    1174:	b	10fc <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x6c>
    1178:	ldr	x1, [x19, #8]
    117c:	mov	x0, x19
    1180:	add	x1, x1, #0x1
    1184:	str	x1, [x19, #8]
    1188:	bl	460 <_ZN4llvm7TGLexer15SkipBCPLCommentEv>
    118c:	ldp	x2, x3, [x19, #8]
    1190:	ldr	x0, [x19, #24]
    1194:	b	10fc <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x6c>
    1198:	adrp	x2, 0 <_ZNK4llvm7TGLexer6getLocEv>
    119c:	add	x2, x2, #0x0
    11a0:	mov	w3, #0x103                 	// #259
    11a4:	str	x0, [x19, #32]
    11a8:	add	x1, sp, #0x28
    11ac:	stp	x2, xzr, [sp, #40]
    11b0:	strh	w3, [sp, #56]
    11b4:	bl	0 <_ZN4llvm10PrintErrorEPKcRKNS_5TwineE>
    11b8:	mov	w0, #0x0                   	// #0
    11bc:	b	110c <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x7c>

00000000000011c0 <_ZN4llvm7TGLexer17prepSkipToLineEndEv>:
    11c0:	ldr	x1, [x0, #8]
    11c4:	ldrb	w2, [x1]
    11c8:	cmp	w2, #0xa
    11cc:	ccmp	w2, #0xd, #0x4, ne  // ne = any
    11d0:	b.eq	1200 <_ZN4llvm7TGLexer17prepSkipToLineEndEv+0x40>  // b.none
    11d4:	ldp	x3, x2, [x0, #16]
    11d8:	add	x3, x3, x2
    11dc:	b	11f4 <_ZN4llvm7TGLexer17prepSkipToLineEndEv+0x34>
    11e0:	str	x1, [x0, #8]
    11e4:	ldrb	w2, [x1]
    11e8:	cmp	w2, #0xa
    11ec:	ccmp	w2, #0xd, #0x4, ne  // ne = any
    11f0:	b.eq	1200 <_ZN4llvm7TGLexer17prepSkipToLineEndEv+0x40>  // b.none
    11f4:	cmp	x3, x1
    11f8:	add	x1, x1, #0x1
    11fc:	b.ne	11e0 <_ZN4llvm7TGLexer17prepSkipToLineEndEv+0x20>  // b.any
    1200:	ret
    1204:	nop

0000000000001208 <_ZN4llvm7TGLexer23prepIsProcessingEnabledEv>:
    1208:	ldr	x0, [x0, #184]
    120c:	ldur	x0, [x0, #-8]
    1210:	ldp	x2, x1, [x0]
    1214:	cmp	x1, x2
    1218:	b.ne	1224 <_ZN4llvm7TGLexer23prepIsProcessingEnabledEv+0x1c>  // b.any
    121c:	b	1238 <_ZN4llvm7TGLexer23prepIsProcessingEnabledEv+0x30>
    1220:	b.eq	1234 <_ZN4llvm7TGLexer23prepIsProcessingEnabledEv+0x2c>  // b.none
    1224:	ldurb	w0, [x1, #-12]
    1228:	sub	x1, x1, #0x10
    122c:	cmp	x2, x1
    1230:	cbnz	w0, 1220 <_ZN4llvm7TGLexer23prepIsProcessingEnabledEv+0x18>
    1234:	ret
    1238:	mov	w0, #0x1                   	// #1
    123c:	ret

0000000000001240 <_ZN4llvm7TGLexer32prepReportPreprocessorStackErrorEv>:
    1240:	stp	x29, x30, [sp, #-80]!
    1244:	mov	x29, sp
    1248:	stp	x19, x20, [sp, #16]
    124c:	mov	x19, x0
    1250:	ldr	x0, [x0, #184]
    1254:	stp	x21, x22, [sp, #32]
    1258:	ldur	x0, [x0, #-8]
    125c:	ldp	x1, x21, [x0]
    1260:	cmp	x21, x1
    1264:	b.eq	12c8 <_ZN4llvm7TGLexer32prepReportPreprocessorStackErrorEv+0x88>  // b.none
    1268:	ldp	x3, x0, [x19, #16]
    126c:	adrp	x2, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1270:	add	x2, x2, #0x0
    1274:	add	x20, sp, #0x38
    1278:	mov	x1, x20
    127c:	mov	w22, #0x103                 	// #259
    1280:	stp	x2, xzr, [sp, #56]
    1284:	add	x0, x3, x0
    1288:	strh	w22, [sp, #72]
    128c:	bl	0 <_ZN4llvm10PrintErrorEPKcRKNS_5TwineE>
    1290:	strh	w22, [sp, #72]
    1294:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1298:	add	x3, x3, #0x0
    129c:	mov	x2, x20
    12a0:	sub	x0, x21, #0x8
    12a4:	mov	x1, #0x1                   	// #1
    12a8:	stp	x3, xzr, [sp, #56]
    12ac:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    12b0:	ldr	x0, [x19, #8]
    12b4:	ldp	x21, x22, [sp, #32]
    12b8:	str	x0, [x19, #32]
    12bc:	ldp	x19, x20, [sp, #16]
    12c0:	ldp	x29, x30, [sp], #80
    12c4:	ret
    12c8:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    12cc:	add	x1, x1, #0x0
    12d0:	mov	w2, #0x103                 	// #259
    12d4:	add	x0, sp, #0x38
    12d8:	stp	x1, xzr, [sp, #56]
    12dc:	strh	w2, [sp, #72]
    12e0:	bl	0 <_ZN4llvm15PrintFatalErrorERKNS_5TwineE>
    12e4:	nop

00000000000012e8 <_ZN4llvm7TGLexer15prepExitIncludeEb>:
    12e8:	stp	x29, x30, [sp, #-96]!
    12ec:	mov	x29, sp
    12f0:	str	x21, [sp, #32]
    12f4:	and	w21, w1, #0xff
    12f8:	ldr	x1, [x0, #184]
    12fc:	stp	x19, x20, [sp, #16]
    1300:	str	x0, [sp, #56]
    1304:	ldur	x20, [x1, #-8]
    1308:	ldp	x2, x3, [x20]
    130c:	cmp	x2, x3
    1310:	b.ne	1398 <_ZN4llvm7TGLexer15prepExitIncludeEb+0xb0>  // b.any
    1314:	mov	x19, x0
    1318:	ldr	x0, [x0, #176]
    131c:	cmp	x1, x0
    1320:	b.eq	13b4 <_ZN4llvm7TGLexer15prepExitIncludeEb+0xcc>  // b.none
    1324:	sub	x1, x1, #0x8
    1328:	str	x1, [x19, #184]
    132c:	cbz	x2, 1338 <_ZN4llvm7TGLexer15prepExitIncludeEb+0x50>
    1330:	mov	x0, x2
    1334:	bl	0 <_ZdlPv>
    1338:	mov	x1, #0x18                  	// #24
    133c:	mov	x0, x20
    1340:	bl	0 <_ZdlPvm>
    1344:	ldr	x1, [x19, #176]
    1348:	cbnz	w21, 1370 <_ZN4llvm7TGLexer15prepExitIncludeEb+0x88>
    134c:	ldr	x0, [x19, #184]
    1350:	mov	w21, #0x1                   	// #1
    1354:	cmp	x1, x0
    1358:	b.eq	13b4 <_ZN4llvm7TGLexer15prepExitIncludeEb+0xcc>  // b.none
    135c:	mov	w0, w21
    1360:	ldp	x19, x20, [sp, #16]
    1364:	ldr	x21, [sp, #32]
    1368:	ldp	x29, x30, [sp], #96
    136c:	ret
    1370:	ldr	x0, [x19, #184]
    1374:	cmp	x1, x0
    1378:	b.eq	135c <_ZN4llvm7TGLexer15prepExitIncludeEb+0x74>  // b.none
    137c:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1380:	add	x1, x1, #0x0
    1384:	add	x19, sp, #0x48
    1388:	mov	x0, x19
    138c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    1390:	mov	x0, x19
    1394:	bl	0 <_ZN4llvm15PrintFatalErrorERKNS_5TwineE>
    1398:	bl	1240 <_ZN4llvm7TGLexer32prepReportPreprocessorStackErrorEv>
    139c:	mov	w21, #0x0                   	// #0
    13a0:	mov	w0, w21
    13a4:	ldp	x19, x20, [sp, #16]
    13a8:	ldr	x21, [sp, #32]
    13ac:	ldp	x29, x30, [sp], #96
    13b0:	ret
    13b4:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    13b8:	add	x1, x1, #0x0
    13bc:	b	1384 <_ZN4llvm7TGLexer15prepExitIncludeEb+0x9c>

00000000000013c0 <_ZN4llvm7TGLexer10processEOFEv>:
    13c0:	stp	x29, x30, [sp, #-64]!
    13c4:	mov	x29, sp
    13c8:	ldr	w2, [x0, #88]
    13cc:	stp	x19, x20, [sp, #16]
    13d0:	stp	x21, x22, [sp, #32]
    13d4:	str	x23, [sp, #48]
    13d8:	cbz	w2, 1440 <_ZN4llvm7TGLexer10processEOFEv+0x80>
    13dc:	ldr	x1, [x0]
    13e0:	mov	x20, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    13e4:	movk	x20, #0xaaab
    13e8:	mov	x19, x0
    13ec:	ldp	x3, x1, [x1]
    13f0:	sub	x1, x1, x3
    13f4:	asr	x1, x1, #3
    13f8:	mul	x1, x1, x20
    13fc:	cmp	x1, w2, uxtw
    1400:	b.cc	1440 <_ZN4llvm7TGLexer10processEOFEv+0x80>  // b.lo, b.ul, b.last
    1404:	sub	w2, w2, #0x1
    1408:	mov	w23, #0x18                  	// #24
    140c:	umaddl	x2, w2, w23, x3
    1410:	ldr	x22, [x2, #16]
    1414:	cbz	x22, 1460 <_ZN4llvm7TGLexer10processEOFEv+0xa0>
    1418:	mov	w1, #0x0                   	// #0
    141c:	bl	12e8 <_ZN4llvm7TGLexer15prepExitIncludeEb>
    1420:	ands	w21, w0, #0xff
    1424:	b.ne	1470 <_ZN4llvm7TGLexer10processEOFEv+0xb0>  // b.any
    1428:	mov	w0, w21
    142c:	ldp	x19, x20, [sp, #16]
    1430:	ldp	x21, x22, [sp, #32]
    1434:	ldr	x23, [sp, #48]
    1438:	ldp	x29, x30, [sp], #64
    143c:	ret
    1440:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1444:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1448:	adrp	x0, 0 <_ZNK4llvm7TGLexer6getLocEv>
    144c:	add	x3, x3, #0x0
    1450:	add	x1, x1, #0x0
    1454:	add	x0, x0, #0x0
    1458:	mov	w2, #0x93                  	// #147
    145c:	bl	0 <__assert_fail>
    1460:	mov	w21, #0x0                   	// #0
    1464:	mov	w1, #0x1                   	// #1
    1468:	bl	12e8 <_ZN4llvm7TGLexer15prepExitIncludeEb>
    146c:	b	1428 <_ZN4llvm7TGLexer10processEOFEv+0x68>
    1470:	ldr	x0, [x19]
    1474:	mov	x1, x22
    1478:	bl	0 <_ZNK4llvm9SourceMgr23FindBufferContainingLocENS_5SMLocE>
    147c:	str	w0, [x19, #88]
    1480:	cbz	w0, 14c0 <_ZN4llvm7TGLexer10processEOFEv+0x100>
    1484:	ldr	x1, [x19]
    1488:	ldp	x2, x1, [x1]
    148c:	sub	x1, x1, x2
    1490:	asr	x1, x1, #3
    1494:	mul	x20, x1, x20
    1498:	cmp	x20, w0, uxtw
    149c:	b.cc	14c0 <_ZN4llvm7TGLexer10processEOFEv+0x100>  // b.lo, b.ul, b.last
    14a0:	sub	w0, w0, #0x1
    14a4:	umull	x23, w0, w23
    14a8:	ldr	x0, [x2, x23]
    14ac:	ldp	x1, x0, [x0, #8]
    14b0:	stp	x22, x1, [x19, #8]
    14b4:	sub	x0, x0, x1
    14b8:	stp	x0, x22, [x19, #24]
    14bc:	b	1428 <_ZN4llvm7TGLexer10processEOFEv+0x68>
    14c0:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
    14c4:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    14c8:	adrp	x0, 0 <_ZNK4llvm7TGLexer6getLocEv>
    14cc:	add	x3, x3, #0x0
    14d0:	add	x1, x1, #0x0
    14d4:	add	x0, x0, #0x0
    14d8:	mov	w2, #0x85                  	// #133
    14dc:	bl	0 <__assert_fail>

00000000000014e0 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb>:
    14e0:	stp	x29, x30, [sp, #-160]!
    14e4:	mov	x29, sp
    14e8:	stp	x19, x20, [sp, #16]
    14ec:	mov	x20, x0
    14f0:	mov	w19, w1
    14f4:	stp	x21, x22, [sp, #32]
    14f8:	and	w21, w2, #0xff
    14fc:	bl	e80 <_ZN4llvm7TGLexer28prepEatPreprocessorDirectiveENS_5tgtok7TokKindE>
    1500:	tst	w0, #0xff
    1504:	b.eq	1a64 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x584>  // b.none
    1508:	sub	w0, w19, #0x4c
    150c:	cmp	w0, #0x1
    1510:	b.ls	1684 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x1a4>  // b.plast
    1514:	cmp	w19, #0x4e
    1518:	b.eq	1608 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x128>  // b.none
    151c:	cmp	w19, #0x4f
    1520:	b.eq	1848 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x368>  // b.none
    1524:	cmp	w19, #0x50
    1528:	b.ne	1aa4 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x5c4>  // b.any
    152c:	mov	x0, x20
    1530:	bl	f00 <_ZN4llvm7TGLexer16prepLexMacroNameEv>
    1534:	stp	x0, x1, [sp, #112]
    1538:	ldr	x19, [sp, #120]
    153c:	cbz	x19, 177c <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x29c>
    1540:	stp	x25, x26, [sp, #64]
    1544:	mov	x2, x19
    1548:	ldr	x26, [sp, #112]
    154c:	stp	x23, x24, [sp, #48]
    1550:	add	x23, x20, #0x90
    1554:	mov	x1, x26
    1558:	mov	x0, x23
    155c:	stp	x27, x28, [sp, #80]
    1560:	bl	0 <_ZN4llvm13StringMapImpl15LookupBucketForENS_9StringRefE>
    1564:	mov	w27, w0
    1568:	ldr	x25, [x20, #144]
    156c:	mov	x22, x27
    1570:	ldr	x0, [x25, x27, lsl #3]
    1574:	add	x1, x25, w27, uxtw #3
    1578:	cbz	x0, 18b4 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x3d4>
    157c:	cmn	x0, #0x8
    1580:	b.eq	18a8 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x3c8>  // b.none
    1584:	mov	w2, #0x0                   	// #0
    1588:	add	x22, sp, #0x88
    158c:	mov	x0, x22
    1590:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    1594:	mov	x0, x20
    1598:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    159c:	add	x3, sp, #0x70
    15a0:	mov	x6, x0
    15a4:	adrp	x4, 0 <_ZNK4llvm7TGLexer6getLocEv>
    15a8:	add	x4, x4, #0x0
    15ac:	mov	w5, #0x503                 	// #1283
    15b0:	mov	x2, x22
    15b4:	add	x0, sp, #0x60
    15b8:	mov	x1, #0x1                   	// #1
    15bc:	str	x6, [sp, #96]
    15c0:	stp	x4, x3, [sp, #136]
    15c4:	strh	w5, [sp, #152]
    15c8:	bl	0 <_ZN4llvm12PrintWarningENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    15cc:	mov	x0, x20
    15d0:	bl	1090 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv>
    15d4:	tst	w0, #0xff
    15d8:	b.eq	1930 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x450>  // b.none
    15dc:	cbz	w21, 1abc <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x5dc>
    15e0:	mov	x0, x20
    15e4:	mov	w1, #0x0                   	// #0
    15e8:	bl	1b30 <_ZN4llvm7TGLexer8LexTokenEb>
    15ec:	ldp	x23, x24, [sp, #48]
    15f0:	ldp	x25, x26, [sp, #64]
    15f4:	ldp	x27, x28, [sp, #80]
    15f8:	ldp	x19, x20, [sp, #16]
    15fc:	ldp	x21, x22, [sp, #32]
    1600:	ldp	x29, x30, [sp], #160
    1604:	ret
    1608:	ldr	x0, [x20, #184]
    160c:	ldr	x4, [x20, #32]
    1610:	ldur	x0, [x0, #-8]
    1614:	ldp	x1, x3, [x0]
    1618:	cmp	x3, x1
    161c:	b.eq	19c0 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x4e0>  // b.none
    1620:	ldur	w1, [x3, #-16]
    1624:	ldur	x22, [x3, #-8]
    1628:	cmp	w1, #0x4c
    162c:	b.eq	17ec <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x30c>  // b.none
    1630:	adrp	x2, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1634:	add	x2, x2, #0x0
    1638:	add	x19, sp, #0x88
    163c:	mov	x0, x4
    1640:	mov	x1, x19
    1644:	mov	w21, #0x103                 	// #259
    1648:	stp	x2, xzr, [sp, #136]
    164c:	strh	w21, [sp, #152]
    1650:	bl	0 <_ZN4llvm10PrintErrorEPKcRKNS_5TwineE>
    1654:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1658:	add	x3, x3, #0x0
    165c:	mov	x2, x19
    1660:	mov	x1, x22
    1664:	mov	x0, x20
    1668:	stp	x3, xzr, [sp, #136]
    166c:	strh	w21, [sp, #152]
    1670:	bl	8 <_ZN4llvm7TGLexer11ReturnErrorENS_5SMLocERKNS_5TwineE>
    1674:	ldp	x19, x20, [sp, #16]
    1678:	ldp	x21, x22, [sp, #32]
    167c:	ldp	x29, x30, [sp], #160
    1680:	ret
    1684:	mov	x0, x20
    1688:	stp	x23, x24, [sp, #48]
    168c:	bl	f00 <_ZN4llvm7TGLexer16prepLexMacroNameEv>
    1690:	cmp	w19, #0x4c
    1694:	adrp	x2, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1698:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
    169c:	add	x2, x2, #0x0
    16a0:	add	x3, x3, #0x0
    16a4:	mov	x22, x1
    16a8:	csel	x3, x3, x2, eq  // eq = none
    16ac:	mov	x23, x0
    16b0:	mov	x0, x3
    16b4:	str	x3, [sp, #96]
    16b8:	bl	0 <strlen>
    16bc:	str	x0, [sp, #104]
    16c0:	cbz	x22, 17b0 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x2d0>
    16c4:	mov	x1, x23
    16c8:	mov	x2, x22
    16cc:	add	x0, x20, #0x90
    16d0:	bl	0 <_ZNK4llvm13StringMapImpl7FindKeyENS_9StringRefE>
    16d4:	mov	w1, w0
    16d8:	cmn	w0, #0x1
    16dc:	b.eq	19e4 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x504>  // b.none
    16e0:	ldr	x3, [x20, #144]
    16e4:	add	x22, sp, #0x88
    16e8:	mov	x0, x22
    16ec:	mov	w2, #0x1                   	// #1
    16f0:	add	x1, x3, w1, sxtw #3
    16f4:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    16f8:	ldr	x23, [sp, #136]
    16fc:	mov	x0, x22
    1700:	ldr	w3, [x20, #152]
    1704:	mov	w2, #0x1                   	// #1
    1708:	ldr	x1, [x20, #144]
    170c:	add	x1, x1, x3, lsl #3
    1710:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    1714:	cmp	w19, #0x4d
    1718:	ldr	x0, [sp, #136]
    171c:	b.eq	19d8 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x4f8>  // b.none
    1720:	cmp	x0, x23
    1724:	cset	w23, ne  // ne = any
    1728:	ldr	x0, [x20, #184]
    172c:	mov	x1, x22
    1730:	ldr	x2, [x20, #32]
    1734:	mov	w19, #0x4c                  	// #76
    1738:	ldur	x0, [x0, #-8]
    173c:	str	w19, [sp, #136]
    1740:	strb	w23, [sp, #140]
    1744:	str	x2, [sp, #144]
    1748:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    174c:	mov	x0, x20
    1750:	bl	1090 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv>
    1754:	tst	w0, #0xff
    1758:	b.eq	1a08 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x528>  // b.none
    175c:	mov	w0, w19
    1760:	cbz	w21, 197c <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x49c>
    1764:	cbz	w23, 1964 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x484>
    1768:	mov	x0, x20
    176c:	mov	w1, #0x0                   	// #0
    1770:	bl	1b30 <_ZN4llvm7TGLexer8LexTokenEb>
    1774:	ldp	x23, x24, [sp, #48]
    1778:	b	15f8 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x118>
    177c:	ldr	x1, [x20, #32]
    1780:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1784:	add	x3, x3, #0x0
    1788:	mov	w4, #0x103                 	// #259
    178c:	mov	x0, x20
    1790:	add	x2, sp, #0x88
    1794:	stp	x3, xzr, [sp, #136]
    1798:	strh	w4, [sp, #152]
    179c:	bl	38 <_ZN4llvm7TGLexer11ReturnErrorEPKcRKNS_5TwineE>
    17a0:	ldp	x19, x20, [sp, #16]
    17a4:	ldp	x21, x22, [sp, #32]
    17a8:	ldp	x29, x30, [sp], #160
    17ac:	ret
    17b0:	ldr	x1, [x20, #32]
    17b4:	add	x3, sp, #0x60
    17b8:	adrp	x4, 0 <_ZNK4llvm7TGLexer6getLocEv>
    17bc:	add	x4, x4, #0x0
    17c0:	mov	w5, #0x503                 	// #1283
    17c4:	add	x2, sp, #0x88
    17c8:	mov	x0, x20
    17cc:	stp	x4, x3, [sp, #136]
    17d0:	strh	w5, [sp, #152]
    17d4:	bl	38 <_ZN4llvm7TGLexer11ReturnErrorEPKcRKNS_5TwineE>
    17d8:	ldp	x19, x20, [sp, #16]
    17dc:	ldp	x21, x22, [sp, #32]
    17e0:	ldp	x23, x24, [sp, #48]
    17e4:	ldp	x29, x30, [sp], #160
    17e8:	ret
    17ec:	ldurb	w5, [x3, #-12]
    17f0:	sub	x3, x3, #0x10
    17f4:	add	x22, sp, #0x88
    17f8:	str	x3, [x0, #8]
    17fc:	eor	w3, w5, #0x1
    1800:	mov	x1, x22
    1804:	str	w19, [sp, #136]
    1808:	strb	w3, [sp, #140]
    180c:	str	x4, [sp, #144]
    1810:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    1814:	mov	x0, x20
    1818:	bl	1090 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv>
    181c:	tst	w0, #0xff
    1820:	b.eq	1984 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x4a4>  // b.none
    1824:	mov	w0, w19
    1828:	cbz	w21, 15f8 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x118>
    182c:	mov	x0, x20
    1830:	mov	w1, #0x1                   	// #1
    1834:	bl	26d0 <_ZN4llvm7TGLexer14prepSkipRegionEb>
    1838:	tst	w0, #0xff
    183c:	mov	w0, #0x1                   	// #1
    1840:	b.eq	15f8 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x118>  // b.none
    1844:	b	1898 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x3b8>
    1848:	ldr	x0, [x20, #184]
    184c:	ldur	x0, [x0, #-8]
    1850:	ldp	x1, x0, [x0]
    1854:	cmp	x1, x0
    1858:	b.eq	1a50 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x570>  // b.none
    185c:	ldur	w0, [x0, #-16]
    1860:	and	w0, w0, #0xfffffffd
    1864:	cmp	w0, #0x4c
    1868:	b.ne	1a8c <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x5ac>  // b.any
    186c:	mov	x0, x20
    1870:	bl	1090 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv>
    1874:	tst	w0, #0xff
    1878:	b.eq	19ac <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x4cc>  // b.none
    187c:	ldr	x1, [x20, #184]
    1880:	mov	w0, w19
    1884:	ldur	x2, [x1, #-8]
    1888:	ldr	x1, [x2, #8]
    188c:	sub	x1, x1, #0x10
    1890:	str	x1, [x2, #8]
    1894:	cbz	w21, 15f8 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x118>
    1898:	mov	x0, x20
    189c:	mov	w1, #0x0                   	// #0
    18a0:	bl	1b30 <_ZN4llvm7TGLexer8LexTokenEb>
    18a4:	b	15f8 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x118>
    18a8:	ldr	w0, [x23, #16]
    18ac:	sub	w0, w0, #0x1
    18b0:	str	w0, [x23, #16]
    18b4:	add	x28, x19, #0x9
    18b8:	mov	x0, x28
    18bc:	bl	0 <malloc>
    18c0:	mov	x24, x0
    18c4:	cbz	x0, 1af4 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x614>
    18c8:	mov	x3, x0
    18cc:	str	x19, [x3], #8
    18d0:	mov	x1, x26
    18d4:	mov	x2, x19
    18d8:	mov	x0, x3
    18dc:	bl	0 <memcpy>
    18e0:	ldp	w1, w2, [x23, #12]
    18e4:	strb	wzr, [x0, x19]
    18e8:	str	x24, [x25, x27, lsl #3]
    18ec:	add	w0, w1, #0x1
    18f0:	ldr	w1, [x23, #8]
    18f4:	str	w0, [x23, #12]
    18f8:	add	w0, w0, w2
    18fc:	cmp	w0, w1
    1900:	b.hi	1ad4 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x5f4>  // b.pmore
    1904:	mov	w1, w22
    1908:	mov	x0, x23
    190c:	bl	0 <_ZN4llvm13StringMapImpl11RehashTableEj>
    1910:	mov	w3, w0
    1914:	ldr	x1, [x20, #144]
    1918:	add	x22, sp, #0x88
    191c:	mov	x0, x22
    1920:	mov	w2, #0x0                   	// #0
    1924:	add	x1, x1, w3, uxtw #3
    1928:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    192c:	b	15cc <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0xec>
    1930:	ldr	x1, [x20, #8]
    1934:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1938:	add	x3, x3, #0x0
    193c:	mov	w4, #0x103                 	// #259
    1940:	mov	x2, x22
    1944:	mov	x0, x20
    1948:	stp	x3, xzr, [sp, #136]
    194c:	strh	w4, [sp, #152]
    1950:	bl	38 <_ZN4llvm7TGLexer11ReturnErrorEPKcRKNS_5TwineE>
    1954:	ldp	x23, x24, [sp, #48]
    1958:	ldp	x25, x26, [sp, #64]
    195c:	ldp	x27, x28, [sp, #80]
    1960:	b	15f8 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x118>
    1964:	mov	x0, x20
    1968:	mov	w1, #0x1                   	// #1
    196c:	bl	26d0 <_ZN4llvm7TGLexer14prepSkipRegionEb>
    1970:	tst	w0, #0xff
    1974:	mov	w0, #0x1                   	// #1
    1978:	b.ne	1768 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x288>  // b.any
    197c:	ldp	x23, x24, [sp, #48]
    1980:	b	15f8 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x118>
    1984:	ldr	x1, [x20, #8]
    1988:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
    198c:	add	x3, x3, #0x0
    1990:	mov	w4, #0x103                 	// #259
    1994:	mov	x2, x22
    1998:	mov	x0, x20
    199c:	stp	x3, xzr, [sp, #136]
    19a0:	strh	w4, [sp, #152]
    19a4:	bl	38 <_ZN4llvm7TGLexer11ReturnErrorEPKcRKNS_5TwineE>
    19a8:	b	15f8 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x118>
    19ac:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
    19b0:	mov	w4, #0x103                 	// #259
    19b4:	add	x3, x3, #0x0
    19b8:	ldr	x1, [x20, #8]
    19bc:	b	178c <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x2ac>
    19c0:	mov	x1, x4
    19c4:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
    19c8:	mov	x0, x20
    19cc:	add	x3, x3, #0x0
    19d0:	mov	w4, #0x103                 	// #259
    19d4:	b	1790 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x2b0>
    19d8:	cmp	x0, x23
    19dc:	cset	w23, eq  // eq = none
    19e0:	b	1728 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x248>
    19e4:	ldr	w3, [x20, #152]
    19e8:	add	x22, sp, #0x88
    19ec:	ldr	x1, [x20, #144]
    19f0:	mov	x0, x22
    19f4:	mov	w2, #0x1                   	// #1
    19f8:	add	x1, x1, x3, lsl #3
    19fc:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    1a00:	ldr	x23, [sp, #136]
    1a04:	b	16fc <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x21c>
    1a08:	ldr	x1, [x20, #8]
    1a0c:	add	x5, sp, #0x60
    1a10:	add	x4, sp, #0x70
    1a14:	adrp	x6, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1a18:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1a1c:	add	x6, x6, #0x0
    1a20:	add	x3, x3, #0x0
    1a24:	mov	w8, #0x503                 	// #1283
    1a28:	mov	w7, #0x302                 	// #770
    1a2c:	mov	x2, x22
    1a30:	mov	x0, x20
    1a34:	stp	x6, x5, [sp, #112]
    1a38:	strh	w8, [sp, #128]
    1a3c:	stp	x4, x3, [sp, #136]
    1a40:	strh	w7, [sp, #152]
    1a44:	bl	38 <_ZN4llvm7TGLexer11ReturnErrorEPKcRKNS_5TwineE>
    1a48:	ldp	x23, x24, [sp, #48]
    1a4c:	b	15f8 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x118>
    1a50:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1a54:	mov	w4, #0x103                 	// #259
    1a58:	add	x3, x3, #0x0
    1a5c:	ldr	x1, [x20, #32]
    1a60:	b	178c <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x2ac>
    1a64:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1a68:	add	x1, x1, #0x0
    1a6c:	stp	x23, x24, [sp, #48]
    1a70:	stp	x25, x26, [sp, #64]
    1a74:	stp	x27, x28, [sp, #80]
    1a78:	add	x19, sp, #0x88
    1a7c:	mov	x0, x19
    1a80:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    1a84:	mov	x0, x19
    1a88:	bl	0 <_ZN4llvm15PrintFatalErrorERKNS_5TwineE>
    1a8c:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1a90:	add	x1, x1, #0x0
    1a94:	stp	x23, x24, [sp, #48]
    1a98:	stp	x25, x26, [sp, #64]
    1a9c:	stp	x27, x28, [sp, #80]
    1aa0:	b	1a78 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x598>
    1aa4:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1aa8:	add	x1, x1, #0x0
    1aac:	stp	x23, x24, [sp, #48]
    1ab0:	stp	x25, x26, [sp, #64]
    1ab4:	stp	x27, x28, [sp, #80]
    1ab8:	b	1a78 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x598>
    1abc:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1ac0:	add	x1, x1, #0x0
    1ac4:	mov	x0, x22
    1ac8:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    1acc:	mov	x0, x22
    1ad0:	bl	0 <_ZN4llvm15PrintFatalErrorERKNS_5TwineE>
    1ad4:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1ad8:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1adc:	adrp	x0, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1ae0:	add	x3, x3, #0x0
    1ae4:	add	x1, x1, #0x0
    1ae8:	add	x0, x0, #0x0
    1aec:	mov	w2, #0x1bb                 	// #443
    1af0:	bl	0 <__assert_fail>
    1af4:	cbz	x28, 1b0c <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x62c>
    1af8:	mov	w1, #0x1                   	// #1
    1afc:	adrp	x0, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1b00:	add	x0, x0, #0x0
    1b04:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    1b08:	brk	#0x3e8
    1b0c:	mov	x0, #0x1                   	// #1
    1b10:	bl	0 <malloc>
    1b14:	mov	x24, x0
    1b18:	cbz	x0, 1af8 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x618>
    1b1c:	mov	x3, x0
    1b20:	mov	x0, #0xfffffffffffffff7    	// #-9
    1b24:	str	x0, [x3], #8
    1b28:	b	18d0 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x3f0>
    1b2c:	nop

0000000000001b30 <_ZN4llvm7TGLexer8LexTokenEb>:
    1b30:	stp	x29, x30, [sp, #-80]!
    1b34:	mov	x29, sp
    1b38:	str	x21, [sp, #32]
    1b3c:	and	w21, w1, #0xff
    1b40:	ldr	x1, [x0, #8]
    1b44:	stp	x19, x20, [sp, #16]
    1b48:	mov	x19, x0
    1b4c:	str	x1, [x0, #32]
    1b50:	bl	40 <_ZN4llvm7TGLexer11getNextCharEv>
    1b54:	mov	w20, w0
    1b58:	add	w0, w0, #0x1
    1b5c:	cmp	w0, #0x7e
    1b60:	b.ls	1b90 <_ZN4llvm7TGLexer8LexTokenEb+0x60>  // b.plast
    1b64:	mov	w0, w20
    1b68:	bl	0 <isalpha>
    1b6c:	cmp	w20, #0x5f
    1b70:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    1b74:	b.eq	1c24 <_ZN4llvm7TGLexer8LexTokenEb+0xf4>  // b.none
    1b78:	mov	x0, x19
    1b7c:	bl	2110 <_ZN4llvm7TGLexer13LexIdentifierEv>
    1b80:	ldp	x19, x20, [sp, #16]
    1b84:	ldr	x21, [sp, #32]
    1b88:	ldp	x29, x30, [sp], #80
    1b8c:	ret
    1b90:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1b94:	add	x1, x1, #0x0
    1b98:	ldrb	w0, [x1, w0, uxtw]
    1b9c:	adr	x1, 1ba8 <_ZN4llvm7TGLexer8LexTokenEb+0x78>
    1ba0:	add	x0, x1, w0, sxtb #2
    1ba4:	br	x0
    1ba8:	mov	x0, x19
    1bac:	bl	460 <_ZN4llvm7TGLexer15SkipBCPLCommentEv>
    1bb0:	mov	w1, w21
    1bb4:	mov	x0, x19
    1bb8:	bl	1b30 <_ZN4llvm7TGLexer8LexTokenEb>
    1bbc:	b	1b80 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1bc0:	sub	w20, w20, #0x30
    1bc4:	cmp	w20, #0x9
    1bc8:	b.hi	1d9c <_ZN4llvm7TGLexer8LexTokenEb+0x26c>  // b.pmore
    1bcc:	mov	w21, #0x0                   	// #0
    1bd0:	mov	w1, w21
    1bd4:	mov	x0, x19
    1bd8:	bl	b8 <_ZNK4llvm7TGLexer12peekNextCharEi>
    1bdc:	mov	w20, w0
    1be0:	sub	w0, w0, #0x30
    1be4:	add	w21, w21, #0x1
    1be8:	cmp	w0, #0x9
    1bec:	b.ls	1bd0 <_ZN4llvm7TGLexer8LexTokenEb+0xa0>  // b.plast
    1bf0:	cmp	w20, #0x78
    1bf4:	mov	w0, #0x62                  	// #98
    1bf8:	ccmp	w20, w0, #0x4, ne  // ne = any
    1bfc:	b.eq	1dac <_ZN4llvm7TGLexer8LexTokenEb+0x27c>  // b.none
    1c00:	mov	w0, w20
    1c04:	bl	0 <isalpha>
    1c08:	cmp	w20, #0x5f
    1c0c:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    1c10:	b.ne	1b78 <_ZN4llvm7TGLexer8LexTokenEb+0x48>  // b.any
    1c14:	nop
    1c18:	mov	x0, x19
    1c1c:	bl	560 <_ZN4llvm7TGLexer9LexNumberEv>
    1c20:	b	1b80 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1c24:	ldr	x1, [x19, #32]
    1c28:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1c2c:	add	x3, x3, #0x0
    1c30:	mov	w4, #0x103                 	// #259
    1c34:	mov	x0, x19
    1c38:	add	x2, sp, #0x38
    1c3c:	stp	x3, xzr, [sp, #56]
    1c40:	strh	w4, [sp, #72]
    1c44:	bl	38 <_ZN4llvm7TGLexer11ReturnErrorEPKcRKNS_5TwineE>
    1c48:	b	1b80 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1c4c:	mov	x0, x19
    1c50:	mov	w1, #0x1                   	// #1
    1c54:	bl	1b30 <_ZN4llvm7TGLexer8LexTokenEb>
    1c58:	b	1b80 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1c5c:	mov	x0, x19
    1c60:	bl	13c0 <_ZN4llvm7TGLexer10processEOFEv>
    1c64:	mov	w1, w0
    1c68:	mov	w0, #0x0                   	// #0
    1c6c:	tst	w1, #0xff
    1c70:	b.eq	1b80 <_ZN4llvm7TGLexer8LexTokenEb+0x50>  // b.none
    1c74:	mov	x0, x19
    1c78:	mov	w1, #0x0                   	// #0
    1c7c:	bl	1b30 <_ZN4llvm7TGLexer8LexTokenEb>
    1c80:	b	1b80 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1c84:	mov	w0, #0x9                   	// #9
    1c88:	b	1b80 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1c8c:	mov	w0, #0x7                   	// #7
    1c90:	b	1b80 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1c94:	mov	w0, #0x6                   	// #6
    1c98:	b	1b80 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1c9c:	mov	w0, #0x5                   	// #5
    1ca0:	b	1b80 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1ca4:	mov	x0, x19
    1ca8:	bl	788 <_ZN4llvm7TGLexer10LexBracketEv>
    1cac:	b	1b80 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1cb0:	mov	w0, #0x11                  	// #17
    1cb4:	b	1b80 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1cb8:	mov	w0, #0xb                   	// #11
    1cbc:	b	1b80 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1cc0:	mov	w0, #0x10                  	// #16
    1cc4:	b	1b80 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1cc8:	mov	w0, #0xa                   	// #10
    1ccc:	b	1b80 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1cd0:	ldr	x0, [x19, #8]
    1cd4:	ldrb	w0, [x0]
    1cd8:	cmp	w0, #0x2f
    1cdc:	b.eq	1ba8 <_ZN4llvm7TGLexer8LexTokenEb+0x78>  // b.none
    1ce0:	cmp	w0, #0x2a
    1ce4:	b.ne	1c24 <_ZN4llvm7TGLexer8LexTokenEb+0xf4>  // b.any
    1ce8:	mov	x0, x19
    1cec:	bl	498 <_ZN4llvm7TGLexer12SkipCCommentEv>
    1cf0:	mov	w1, w0
    1cf4:	mov	w0, #0x1                   	// #1
    1cf8:	tst	w1, #0xff
    1cfc:	b.eq	1bb0 <_ZN4llvm7TGLexer8LexTokenEb+0x80>  // b.none
    1d00:	b	1b80 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1d04:	mov	w0, #0xf                   	// #15
    1d08:	b	1b80 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1d0c:	cbz	w21, 1d94 <_ZN4llvm7TGLexer8LexTokenEb+0x264>
    1d10:	mov	x0, x19
    1d14:	bl	d88 <_ZNK4llvm7TGLexer15prepIsDirectiveEv>
    1d18:	mov	w1, w0
    1d1c:	cmp	w0, #0x1
    1d20:	b.eq	1d94 <_ZN4llvm7TGLexer8LexTokenEb+0x264>  // b.none
    1d24:	mov	x0, x19
    1d28:	mov	w2, #0x1                   	// #1
    1d2c:	bl	14e0 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb>
    1d30:	b	1b80 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1d34:	mov	x0, x19
    1d38:	bl	c8 <_ZN4llvm7TGLexer9LexStringEv>
    1d3c:	b	1b80 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1d40:	mov	x0, x19
    1d44:	bl	860 <_ZN4llvm7TGLexer10LexExclaimEv>
    1d48:	b	1b80 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1d4c:	mov	w0, #0x8                   	// #8
    1d50:	b	1b80 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1d54:	mov	x0, x19
    1d58:	bl	398 <_ZN4llvm7TGLexer10LexVarNameEv>
    1d5c:	b	1b80 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1d60:	mov	w0, #0xe                   	// #14
    1d64:	b	1b80 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1d68:	mov	w0, #0xc                   	// #12
    1d6c:	b	1b80 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1d70:	mov	w0, #0xd                   	// #13
    1d74:	b	1b80 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1d78:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1d7c:	add	x1, x1, #0x0
    1d80:	add	x19, sp, #0x38
    1d84:	mov	x0, x19
    1d88:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    1d8c:	mov	x0, x19
    1d90:	bl	0 <_ZN4llvm15PrintFatalErrorERKNS_5TwineE>
    1d94:	mov	w0, #0x12                  	// #18
    1d98:	b	1b80 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1d9c:	mov	w0, #0x0                   	// #0
    1da0:	bl	0 <isalpha>
    1da4:	cbz	w0, 1c18 <_ZN4llvm7TGLexer8LexTokenEb+0xe8>
    1da8:	b	1b78 <_ZN4llvm7TGLexer8LexTokenEb+0x48>
    1dac:	mov	w1, w21
    1db0:	mov	x0, x19
    1db4:	bl	b8 <_ZNK4llvm7TGLexer12peekNextCharEi>
    1db8:	cmp	w0, #0x39
    1dbc:	b.gt	1dd8 <_ZN4llvm7TGLexer8LexTokenEb+0x2a8>
    1dc0:	cmp	w0, #0x31
    1dc4:	b.gt	1de8 <_ZN4llvm7TGLexer8LexTokenEb+0x2b8>
    1dc8:	sub	w0, w0, #0x30
    1dcc:	cmp	w0, #0x1
    1dd0:	b.ls	1c18 <_ZN4llvm7TGLexer8LexTokenEb+0xe8>  // b.plast
    1dd4:	b	1c00 <_ZN4llvm7TGLexer8LexTokenEb+0xd0>
    1dd8:	cmp	w0, #0x46
    1ddc:	b.gt	1df4 <_ZN4llvm7TGLexer8LexTokenEb+0x2c4>
    1de0:	cmp	w0, #0x40
    1de4:	b.le	1c00 <_ZN4llvm7TGLexer8LexTokenEb+0xd0>
    1de8:	cmp	w20, #0x78
    1dec:	b.ne	1c00 <_ZN4llvm7TGLexer8LexTokenEb+0xd0>  // b.any
    1df0:	b	1c18 <_ZN4llvm7TGLexer8LexTokenEb+0xe8>
    1df4:	sub	w0, w0, #0x61
    1df8:	cmp	w0, #0x5
    1dfc:	b.ls	1de8 <_ZN4llvm7TGLexer8LexTokenEb+0x2b8>  // b.plast
    1e00:	b	1c00 <_ZN4llvm7TGLexer8LexTokenEb+0xd0>
    1e04:	nop

0000000000001e08 <_ZN4llvm7TGLexer10LexIncludeEv>:
    1e08:	stp	x29, x30, [sp, #-224]!
    1e0c:	mov	w1, #0x0                   	// #0
    1e10:	mov	x29, sp
    1e14:	stp	x19, x20, [sp, #16]
    1e18:	mov	x19, x0
    1e1c:	bl	1b30 <_ZN4llvm7TGLexer8LexTokenEb>
    1e20:	cmp	w0, #0x1
    1e24:	b.eq	1fa0 <_ZN4llvm7TGLexer10LexIncludeEv+0x198>  // b.none
    1e28:	cmp	w0, #0x49
    1e2c:	b.eq	1e78 <_ZN4llvm7TGLexer10LexIncludeEv+0x70>  // b.none
    1e30:	mov	x0, x19
    1e34:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    1e38:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1e3c:	mov	x5, x0
    1e40:	add	x3, x3, #0x0
    1e44:	mov	w4, #0x103                 	// #259
    1e48:	add	x2, sp, #0xc0
    1e4c:	add	x0, sp, #0xa0
    1e50:	mov	x1, #0x1                   	// #1
    1e54:	mov	w19, #0x1                   	// #1
    1e58:	str	x5, [sp, #160]
    1e5c:	stp	x3, xzr, [sp, #192]
    1e60:	strh	w4, [sp, #208]
    1e64:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    1e68:	mov	w0, w19
    1e6c:	ldp	x19, x20, [sp, #16]
    1e70:	ldp	x29, x30, [sp], #224
    1e74:	ret
    1e78:	ldp	x1, x2, [x19, #48]
    1e7c:	add	x20, sp, #0x60
    1e80:	add	x4, x20, #0x10
    1e84:	mov	x0, x20
    1e88:	mov	w3, #0x0                   	// #0
    1e8c:	stp	x21, x22, [sp, #32]
    1e90:	add	x21, sp, #0x80
    1e94:	str	x4, [sp, #96]
    1e98:	add	x2, x1, x2
    1e9c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    1ea0:	ldp	x0, x2, [x19]
    1ea4:	add	x4, x21, #0x10
    1ea8:	mov	x3, x21
    1eac:	mov	x1, x20
    1eb0:	stp	x4, xzr, [sp, #128]
    1eb4:	strb	wzr, [sp, #144]
    1eb8:	bl	0 <_ZN4llvm9SourceMgr14AddIncludeFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_5SMLocERS6_>
    1ebc:	str	w0, [x19, #88]
    1ec0:	cbz	w0, 1fd8 <_ZN4llvm7TGLexer10LexIncludeEv+0x1d0>
    1ec4:	mov	x1, x21
    1ec8:	add	x0, x19, #0x60
    1ecc:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    1ed0:	ldr	w1, [x19, #88]
    1ed4:	cbz	w1, 1fb4 <_ZN4llvm7TGLexer10LexIncludeEv+0x1ac>
    1ed8:	ldr	x2, [x19]
    1edc:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    1ee0:	movk	x4, #0xaaab
    1ee4:	ldp	x3, x0, [x2]
    1ee8:	sub	x0, x0, x3
    1eec:	asr	x0, x0, #3
    1ef0:	mul	x0, x0, x4
    1ef4:	cmp	x0, w1, uxtw
    1ef8:	b.cc	1fb4 <_ZN4llvm7TGLexer10LexIncludeEv+0x1ac>  // b.lo, b.ul, b.last
    1efc:	sub	w1, w1, #0x1
    1f00:	mov	w2, #0x18                  	// #24
    1f04:	mov	x0, #0x18                  	// #24
    1f08:	umull	x1, w1, w2
    1f0c:	ldr	x1, [x3, x1]
    1f10:	ldp	x2, x1, [x1, #8]
    1f14:	stp	x2, x2, [x19, #8]
    1f18:	sub	x1, x1, x2
    1f1c:	str	x1, [x19, #24]
    1f20:	bl	0 <_Znwm>
    1f24:	mov	x2, x0
    1f28:	add	x1, sp, #0xc0
    1f2c:	add	x0, x19, #0xb0
    1f30:	str	x2, [sp, #192]
    1f34:	stp	xzr, xzr, [x2]
    1f38:	str	xzr, [x2, #16]
    1f3c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    1f40:	ldr	x19, [sp, #192]
    1f44:	cbz	x19, 1f60 <_ZN4llvm7TGLexer10LexIncludeEv+0x158>
    1f48:	ldr	x0, [x19]
    1f4c:	cbz	x0, 1f54 <_ZN4llvm7TGLexer10LexIncludeEv+0x14c>
    1f50:	bl	0 <_ZdlPv>
    1f54:	mov	x0, x19
    1f58:	mov	x1, #0x18                  	// #24
    1f5c:	bl	0 <_ZdlPvm>
    1f60:	mov	w19, #0x0                   	// #0
    1f64:	ldr	x0, [sp, #128]
    1f68:	add	x3, x21, #0x10
    1f6c:	cmp	x0, x3
    1f70:	b.eq	1f78 <_ZN4llvm7TGLexer10LexIncludeEv+0x170>  // b.none
    1f74:	bl	0 <_ZdlPv>
    1f78:	ldr	x0, [sp, #96]
    1f7c:	add	x1, x20, #0x10
    1f80:	cmp	x0, x1
    1f84:	b.eq	20ec <_ZN4llvm7TGLexer10LexIncludeEv+0x2e4>  // b.none
    1f88:	bl	0 <_ZdlPv>
    1f8c:	mov	w0, w19
    1f90:	ldp	x19, x20, [sp, #16]
    1f94:	ldp	x21, x22, [sp, #32]
    1f98:	ldp	x29, x30, [sp], #224
    1f9c:	ret
    1fa0:	mov	w19, w0
    1fa4:	mov	w0, w19
    1fa8:	ldp	x19, x20, [sp, #16]
    1fac:	ldp	x29, x30, [sp], #224
    1fb0:	ret
    1fb4:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1fb8:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1fbc:	adrp	x0, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1fc0:	add	x3, x3, #0x0
    1fc4:	add	x1, x1, #0x0
    1fc8:	add	x0, x0, #0x0
    1fcc:	mov	w2, #0x85                  	// #133
    1fd0:	str	x23, [sp, #48]
    1fd4:	bl	0 <__assert_fail>
    1fd8:	mov	x0, x19
    1fdc:	add	x19, sp, #0xc0
    1fe0:	str	x23, [sp, #48]
    1fe4:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    1fe8:	add	x2, x19, #0x10
    1fec:	mov	x3, x0
    1ff0:	ldr	x1, [sp, #104]
    1ff4:	mov	x0, x19
    1ff8:	str	x3, [sp, #64]
    1ffc:	mov	x22, #0x3fffffffffffffff    	// #4611686018427387903
    2000:	add	x1, x1, #0x1d
    2004:	stp	x2, xzr, [sp, #192]
    2008:	add	x23, sp, #0x40
    200c:	strb	wzr, [sp, #208]
    2010:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
    2014:	ldr	x0, [sp, #200]
    2018:	sub	x0, x22, x0
    201c:	cmp	x0, #0x1c
    2020:	b.ls	2100 <_ZN4llvm7TGLexer10LexIncludeEv+0x2f8>  // b.plast
    2024:	mov	x2, #0x1d                  	// #29
    2028:	mov	x0, x19
    202c:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    2030:	add	x1, x1, #0x0
    2034:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    2038:	ldp	x1, x2, [sp, #96]
    203c:	mov	x0, x19
    2040:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    2044:	ldr	x0, [sp, #200]
    2048:	cmp	x0, x22
    204c:	b.eq	2100 <_ZN4llvm7TGLexer10LexIncludeEv+0x2f8>  // b.none
    2050:	mov	x2, #0x1                   	// #1
    2054:	mov	x0, x19
    2058:	add	x22, sp, #0xa0
    205c:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    2060:	add	x1, x1, #0x0
    2064:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    2068:	add	x2, x22, #0x10
    206c:	str	x2, [sp, #160]
    2070:	mov	x1, x0
    2074:	ldr	x2, [x0], #16
    2078:	cmp	x2, x0
    207c:	b.eq	20f4 <_ZN4llvm7TGLexer10LexIncludeEv+0x2ec>  // b.none
    2080:	str	x2, [sp, #160]
    2084:	ldr	x2, [x1, #16]
    2088:	str	x2, [sp, #176]
    208c:	ldr	x2, [x1, #8]
    2090:	str	x2, [sp, #168]
    2094:	mov	w3, #0x104                 	// #260
    2098:	stp	x0, xzr, [x1]
    209c:	add	x2, sp, #0x48
    20a0:	strb	wzr, [x1, #16]
    20a4:	mov	x0, x23
    20a8:	mov	x1, #0x1                   	// #1
    20ac:	stp	x22, xzr, [sp, #72]
    20b0:	add	x22, x22, #0x10
    20b4:	strh	w3, [sp, #88]
    20b8:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    20bc:	ldr	x0, [sp, #160]
    20c0:	cmp	x0, x22
    20c4:	b.eq	20cc <_ZN4llvm7TGLexer10LexIncludeEv+0x2c4>  // b.none
    20c8:	bl	0 <_ZdlPv>
    20cc:	ldr	x0, [sp, #192]
    20d0:	add	x19, x19, #0x10
    20d4:	cmp	x0, x19
    20d8:	b.eq	20e0 <_ZN4llvm7TGLexer10LexIncludeEv+0x2d8>  // b.none
    20dc:	bl	0 <_ZdlPv>
    20e0:	mov	w19, #0x1                   	// #1
    20e4:	ldr	x23, [sp, #48]
    20e8:	b	1f64 <_ZN4llvm7TGLexer10LexIncludeEv+0x15c>
    20ec:	ldp	x21, x22, [sp, #32]
    20f0:	b	1e68 <_ZN4llvm7TGLexer10LexIncludeEv+0x60>
    20f4:	ldp	x2, x3, [x1, #16]
    20f8:	stp	x2, x3, [sp, #176]
    20fc:	b	208c <_ZN4llvm7TGLexer10LexIncludeEv+0x284>
    2100:	adrp	x0, 0 <_ZNK4llvm7TGLexer6getLocEv>
    2104:	add	x0, x0, #0x0
    2108:	bl	0 <_ZSt20__throw_length_errorPKc>
    210c:	nop

0000000000002110 <_ZN4llvm7TGLexer13LexIdentifierEv>:
    2110:	stp	x29, x30, [sp, #-80]!
    2114:	mov	x29, sp
    2118:	stp	x19, x20, [sp, #16]
    211c:	stp	x21, x22, [sp, #32]
    2120:	mov	x21, x0
    2124:	ldr	x19, [x0, #8]
    2128:	ldr	x22, [x0, #32]
    212c:	b	2138 <_ZN4llvm7TGLexer13LexIdentifierEv+0x28>
    2130:	add	x19, x19, #0x1
    2134:	str	x19, [x21, #8]
    2138:	ldrb	w20, [x19]
    213c:	mov	w0, w20
    2140:	bl	0 <isalpha>
    2144:	sub	w1, w20, #0x30
    2148:	cmp	w1, #0x9
    214c:	cbnz	w0, 2130 <_ZN4llvm7TGLexer13LexIdentifierEv+0x20>
    2150:	cset	w1, hi  // hi = pmore
    2154:	cmp	w20, #0x5f
    2158:	csel	w1, w1, wzr, ne  // ne = any
    215c:	cbz	w1, 2130 <_ZN4llvm7TGLexer13LexIdentifierEv+0x20>
    2160:	sub	x4, x19, x22
    2164:	cmp	x4, #0x7
    2168:	b.eq	21d4 <_ZN4llvm7TGLexer13LexIdentifierEv+0xc4>  // b.none
    216c:	strb	wzr, [sp, #72]
    2170:	cmp	x4, #0x6
    2174:	cset	w6, eq  // eq = none
    2178:	cmp	x4, #0x3
    217c:	b.eq	21f4 <_ZN4llvm7TGLexer13LexIdentifierEv+0xe4>  // b.none
    2180:	cmp	x4, #0x4
    2184:	b.eq	22f8 <_ZN4llvm7TGLexer13LexIdentifierEv+0x1e8>  // b.none
    2188:	cmp	x4, #0x6
    218c:	mov	w2, #0x0                   	// #0
    2190:	b.eq	2218 <_ZN4llvm7TGLexer13LexIdentifierEv+0x108>  // b.none
    2194:	cmp	x4, #0x5
    2198:	mov	w6, #0x0                   	// #0
    219c:	cset	w3, eq  // eq = none
    21a0:	cbz	w2, 2238 <_ZN4llvm7TGLexer13LexIdentifierEv+0x128>
    21a4:	ldrh	w0, [x22]
    21a8:	mov	w1, #0x6164                	// #24932
    21ac:	cmp	w0, w1
    21b0:	b.eq	25d8 <_ZN4llvm7TGLexer13LexIdentifierEv+0x4c8>  // b.none
    21b4:	mov	w1, #0x6564                	// #25956
    21b8:	cmp	w0, w1
    21bc:	b.eq	2658 <_ZN4llvm7TGLexer13LexIdentifierEv+0x548>  // b.none
    21c0:	mov	w0, w2
    21c4:	mov	w6, #0x0                   	// #0
    21c8:	mov	w7, #0x0                   	// #0
    21cc:	mov	w1, #0x0                   	// #0
    21d0:	b	227c <_ZN4llvm7TGLexer13LexIdentifierEv+0x16c>
    21d4:	ldr	w2, [x22]
    21d8:	mov	w0, #0x6e69                	// #28265
    21dc:	movk	w0, #0x6c63, lsl #16
    21e0:	cmp	w2, w0
    21e4:	b.eq	2418 <_ZN4llvm7TGLexer13LexIdentifierEv+0x308>  // b.none
    21e8:	mov	w2, #0x0                   	// #0
    21ec:	strb	wzr, [sp, #72]
    21f0:	b	2194 <_ZN4llvm7TGLexer13LexIdentifierEv+0x84>
    21f4:	ldrh	w0, [x22]
    21f8:	mov	w2, #0x6e69                	// #28265
    21fc:	cmp	w0, w2
    2200:	b.eq	2680 <_ZN4llvm7TGLexer13LexIdentifierEv+0x570>  // b.none
    2204:	mov	w2, #0x6962                	// #26978
    2208:	cmp	w0, w2
    220c:	b.eq	2600 <_ZN4llvm7TGLexer13LexIdentifierEv+0x4f0>  // b.none
    2210:	mov	w2, w1
    2214:	b	2194 <_ZN4llvm7TGLexer13LexIdentifierEv+0x84>
    2218:	ldr	w3, [x22]
    221c:	mov	w0, #0x7473                	// #29811
    2220:	movk	w0, #0x6972, lsl #16
    2224:	cmp	w3, w0
    2228:	b.eq	2624 <_ZN4llvm7TGLexer13LexIdentifierEv+0x514>  // b.none
    222c:	cmp	x4, #0x5
    2230:	mov	w6, w1
    2234:	cset	w3, eq  // eq = none
    2238:	mov	w7, #0x0                   	// #0
    223c:	cmp	x4, #0x7
    2240:	cset	w5, eq  // eq = none
    2244:	cbz	w3, 26bc <_ZN4llvm7TGLexer13LexIdentifierEv+0x5ac>
    2248:	ldr	w1, [x22]
    224c:	mov	w0, #0x6c63                	// #27747
    2250:	movk	w0, #0x7361, lsl #16
    2254:	cmp	w1, w0
    2258:	b.eq	2698 <_ZN4llvm7TGLexer13LexIdentifierEv+0x588>  // b.none
    225c:	mov	w0, w3
    2260:	mov	w1, #0x0                   	// #0
    2264:	mov	w2, #0x0                   	// #0
    2268:	cbnz	w5, 2338 <_ZN4llvm7TGLexer13LexIdentifierEv+0x228>
    226c:	nop
    2270:	and	w5, w0, w7
    2274:	ands	w5, w5, #0xff
    2278:	b.ne	24d0 <_ZN4llvm7TGLexer13LexIdentifierEv+0x3c0>  // b.any
    227c:	and	w5, w0, w6
    2280:	and	w5, w5, #0xff
    2284:	cbnz	w5, 2594 <_ZN4llvm7TGLexer13LexIdentifierEv+0x484>
    2288:	cmp	x4, #0xa
    228c:	cset	w5, eq  // eq = none
    2290:	and	w5, w0, w5
    2294:	cbnz	w5, 2554 <_ZN4llvm7TGLexer13LexIdentifierEv+0x444>
    2298:	and	w3, w0, w3
    229c:	cbnz	w3, 2520 <_ZN4llvm7TGLexer13LexIdentifierEv+0x410>
    22a0:	and	w2, w0, w2
    22a4:	and	w2, w2, #0xff
    22a8:	cbnz	w2, 24f8 <_ZN4llvm7TGLexer13LexIdentifierEv+0x3e8>
    22ac:	cmp	x4, #0x2
    22b0:	cset	w2, eq  // eq = none
    22b4:	and	w2, w0, w2
    22b8:	cbnz	w2, 249c <_ZN4llvm7TGLexer13LexIdentifierEv+0x38c>
    22bc:	and	w0, w0, w6
    22c0:	and	w0, w0, #0xff
    22c4:	cbnz	w0, 237c <_ZN4llvm7TGLexer13LexIdentifierEv+0x26c>
    22c8:	cbnz	w1, 23a8 <_ZN4llvm7TGLexer13LexIdentifierEv+0x298>
    22cc:	cbnz	w7, 2468 <_ZN4llvm7TGLexer13LexIdentifierEv+0x358>
    22d0:	ldr	x2, [x21, #56]
    22d4:	mov	x3, x22
    22d8:	add	x0, x21, #0x30
    22dc:	mov	x1, #0x0                   	// #0
    22e0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    22e4:	mov	w0, #0x48                  	// #72
    22e8:	ldp	x19, x20, [sp, #16]
    22ec:	ldp	x21, x22, [sp, #32]
    22f0:	ldp	x29, x30, [sp], #80
    22f4:	ret
    22f8:	ldr	w0, [x22]
    22fc:	mov	w2, #0x6962                	// #26978
    2300:	movk	w2, #0x7374, lsl #16
    2304:	cmp	w0, w2
    2308:	b.ne	23c4 <_ZN4llvm7TGLexer13LexIdentifierEv+0x2b4>  // b.any
    230c:	mov	w7, w1
    2310:	mov	w0, #0x14                  	// #20
    2314:	mov	w2, #0x0                   	// #0
    2318:	str	w0, [sp, #72]
    231c:	cmp	x4, #0x5
    2320:	mov	w0, #0x0                   	// #0
    2324:	cset	w3, eq  // eq = none
    2328:	cmp	x4, #0x7
    232c:	cset	w5, eq  // eq = none
    2330:	and	w5, w0, w5
    2334:	cbz	w5, 2270 <_ZN4llvm7TGLexer13LexIdentifierEv+0x160>
    2338:	ldr	w9, [x22]
    233c:	mov	w8, #0x6f66                	// #28518
    2340:	movk	w8, #0x6572, lsl #16
    2344:	cmp	w9, w8
    2348:	b.ne	227c <_ZN4llvm7TGLexer13LexIdentifierEv+0x16c>  // b.any
    234c:	ldrh	w9, [x22, #4]
    2350:	mov	w8, #0x6361                	// #25441
    2354:	cmp	w9, w8
    2358:	b.ne	227c <_ZN4llvm7TGLexer13LexIdentifierEv+0x16c>  // b.any
    235c:	ldrb	w8, [x22, #6]
    2360:	cmp	w8, #0x68
    2364:	b.ne	227c <_ZN4llvm7TGLexer13LexIdentifierEv+0x16c>  // b.any
    2368:	mov	w1, w5
    236c:	mov	w0, #0x0                   	// #0
    2370:	mov	w5, #0x19                  	// #25
    2374:	str	w5, [sp, #72]
    2378:	b	2288 <_ZN4llvm7TGLexer13LexIdentifierEv+0x178>
    237c:	ldr	w2, [x22]
    2380:	mov	w0, #0x6564                	// #25956
    2384:	movk	w0, #0x7666, lsl #16
    2388:	cmp	w2, w0
    238c:	b.ne	22c8 <_ZN4llvm7TGLexer13LexIdentifierEv+0x1b8>  // b.any
    2390:	ldrh	w2, [x22, #4]
    2394:	mov	w0, #0x7261                	// #29281
    2398:	cmp	w2, w0
    239c:	b.ne	22c8 <_ZN4llvm7TGLexer13LexIdentifierEv+0x1b8>  // b.any
    23a0:	mov	w0, #0x23                  	// #35
    23a4:	str	w0, [sp, #72]
    23a8:	ldr	w0, [sp, #72]
    23ac:	cmp	w0, #0x48
    23b0:	b.eq	22d0 <_ZN4llvm7TGLexer13LexIdentifierEv+0x1c0>  // b.none
    23b4:	ldp	x19, x20, [sp, #16]
    23b8:	ldp	x21, x22, [sp, #32]
    23bc:	ldp	x29, x30, [sp], #80
    23c0:	ret
    23c4:	mov	w2, #0x696c                	// #26988
    23c8:	movk	w2, #0x7473, lsl #16
    23cc:	cmp	w0, w2
    23d0:	b.ne	23e0 <_ZN4llvm7TGLexer13LexIdentifierEv+0x2d0>  // b.any
    23d4:	mov	w0, #0x1f                  	// #31
    23d8:	str	w0, [sp, #72]
    23dc:	b	23f8 <_ZN4llvm7TGLexer13LexIdentifierEv+0x2e8>
    23e0:	mov	w2, #0x6f63                	// #28515
    23e4:	movk	w2, #0x6564, lsl #16
    23e8:	cmp	w0, w2
    23ec:	b.ne	25cc <_ZN4llvm7TGLexer13LexIdentifierEv+0x4bc>  // b.any
    23f0:	mov	w0, #0x16                  	// #22
    23f4:	str	w0, [sp, #72]
    23f8:	cmp	x4, #0x5
    23fc:	mov	w5, #0x0                   	// #0
    2400:	mov	w0, #0x0                   	// #0
    2404:	mov	w7, w1
    2408:	cset	w3, eq  // eq = none
    240c:	and	w5, w0, w5
    2410:	mov	w2, #0x0                   	// #0
    2414:	b	2334 <_ZN4llvm7TGLexer13LexIdentifierEv+0x224>
    2418:	ldrh	w2, [x22, #4]
    241c:	mov	w0, #0x6475                	// #25717
    2420:	cmp	w2, w0
    2424:	b.ne	21e8 <_ZN4llvm7TGLexer13LexIdentifierEv+0xd8>  // b.any
    2428:	ldrb	w0, [x22, #6]
    242c:	cmp	w0, #0x65
    2430:	b.ne	21e8 <_ZN4llvm7TGLexer13LexIdentifierEv+0xd8>  // b.any
    2434:	mov	x0, x21
    2438:	bl	1e08 <_ZN4llvm7TGLexer10LexIncludeEv>
    243c:	mov	w1, w0
    2440:	mov	w0, #0x1                   	// #1
    2444:	tst	w1, #0xff
    2448:	b.ne	22e8 <_ZN4llvm7TGLexer13LexIdentifierEv+0x1d8>  // b.any
    244c:	ldp	x2, x1, [x21, #8]
    2450:	mov	x0, x21
    2454:	cmp	x2, x1
    2458:	cset	w1, eq  // eq = none
    245c:	bl	1b30 <_ZN4llvm7TGLexer8LexTokenEb>
    2460:	str	w0, [x21, #40]
    2464:	b	22e8 <_ZN4llvm7TGLexer13LexIdentifierEv+0x1d8>
    2468:	ldr	w1, [x22]
    246c:	mov	w0, #0x6874                	// #26740
    2470:	movk	w0, #0x6e65, lsl #16
    2474:	cmp	w1, w0
    2478:	b.ne	2484 <_ZN4llvm7TGLexer13LexIdentifierEv+0x374>  // b.any
    247c:	mov	w0, #0x25                  	// #37
    2480:	b	22e8 <_ZN4llvm7TGLexer13LexIdentifierEv+0x1d8>
    2484:	mov	w2, #0x6c65                	// #27749
    2488:	mov	w0, #0x26                  	// #38
    248c:	movk	w2, #0x6573, lsl #16
    2490:	cmp	w1, w2
    2494:	b.eq	22e8 <_ZN4llvm7TGLexer13LexIdentifierEv+0x1d8>  // b.none
    2498:	b	22d0 <_ZN4llvm7TGLexer13LexIdentifierEv+0x1c0>
    249c:	ldrh	w0, [x22]
    24a0:	mov	w1, #0x6e69                	// #28265
    24a4:	cmp	w0, w1
    24a8:	b.ne	24b8 <_ZN4llvm7TGLexer13LexIdentifierEv+0x3a8>  // b.any
    24ac:	mov	w0, #0x1c                  	// #28
    24b0:	str	w0, [sp, #72]
    24b4:	b	23a8 <_ZN4llvm7TGLexer13LexIdentifierEv+0x298>
    24b8:	mov	w1, #0x6669                	// #26217
    24bc:	cmp	w0, w1
    24c0:	b.ne	22d0 <_ZN4llvm7TGLexer13LexIdentifierEv+0x1c0>  // b.any
    24c4:	mov	w0, #0x24                  	// #36
    24c8:	str	w0, [sp, #72]
    24cc:	b	23a8 <_ZN4llvm7TGLexer13LexIdentifierEv+0x298>
    24d0:	ldr	w9, [x22]
    24d4:	mov	w8, #0x6564                	// #25956
    24d8:	movk	w8, #0x6d66, lsl #16
    24dc:	cmp	w9, w8
    24e0:	b.ne	2288 <_ZN4llvm7TGLexer13LexIdentifierEv+0x178>  // b.any
    24e4:	mov	w1, w5
    24e8:	mov	w0, #0x0                   	// #0
    24ec:	mov	w5, #0x1a                  	// #26
    24f0:	str	w5, [sp, #72]
    24f4:	b	2298 <_ZN4llvm7TGLexer13LexIdentifierEv+0x188>
    24f8:	ldrh	w3, [x22]
    24fc:	mov	w2, #0x656c                	// #25964
    2500:	cmp	w3, w2
    2504:	b.ne	22bc <_ZN4llvm7TGLexer13LexIdentifierEv+0x1ac>  // b.any
    2508:	ldrb	w2, [x22, #2]
    250c:	cmp	w2, #0x74
    2510:	b.ne	22bc <_ZN4llvm7TGLexer13LexIdentifierEv+0x1ac>  // b.any
    2514:	mov	w0, #0x1e                  	// #30
    2518:	str	w0, [sp, #72]
    251c:	b	23a8 <_ZN4llvm7TGLexer13LexIdentifierEv+0x298>
    2520:	ldr	w5, [x22]
    2524:	mov	w2, #0x6966                	// #26982
    2528:	movk	w2, #0x6c65, lsl #16
    252c:	cmp	w5, w2
    2530:	b.ne	22ac <_ZN4llvm7TGLexer13LexIdentifierEv+0x19c>  // b.any
    2534:	ldrb	w2, [x22, #4]
    2538:	cmp	w2, #0x64
    253c:	b.ne	22ac <_ZN4llvm7TGLexer13LexIdentifierEv+0x19c>  // b.any
    2540:	mov	w2, #0x1b                  	// #27
    2544:	mov	w1, w3
    2548:	mov	w0, #0x0                   	// #0
    254c:	str	w2, [sp, #72]
    2550:	b	22bc <_ZN4llvm7TGLexer13LexIdentifierEv+0x1ac>
    2554:	mov	x3, #0x756d                	// #30061
    2558:	ldr	x8, [x22]
    255c:	movk	x3, #0x746c, lsl #16
    2560:	movk	x3, #0x6369, lsl #32
    2564:	movk	x3, #0x616c, lsl #48
    2568:	cmp	x8, x3
    256c:	b.ne	22a0 <_ZN4llvm7TGLexer13LexIdentifierEv+0x190>  // b.any
    2570:	ldrh	w8, [x22, #8]
    2574:	mov	w3, #0x7373                	// #29555
    2578:	cmp	w8, w3
    257c:	b.ne	22a0 <_ZN4llvm7TGLexer13LexIdentifierEv+0x190>  // b.any
    2580:	mov	w2, #0x20                  	// #32
    2584:	mov	w1, w5
    2588:	mov	w0, #0x0                   	// #0
    258c:	str	w2, [sp, #72]
    2590:	b	22ac <_ZN4llvm7TGLexer13LexIdentifierEv+0x19c>
    2594:	ldr	w9, [x22]
    2598:	mov	w8, #0x6564                	// #25956
    259c:	movk	w8, #0x7366, lsl #16
    25a0:	cmp	w9, w8
    25a4:	b.ne	2298 <_ZN4llvm7TGLexer13LexIdentifierEv+0x188>  // b.any
    25a8:	ldrh	w9, [x22, #4]
    25ac:	mov	w8, #0x7465                	// #29797
    25b0:	cmp	w9, w8
    25b4:	b.ne	2298 <_ZN4llvm7TGLexer13LexIdentifierEv+0x188>  // b.any
    25b8:	mov	w3, #0x22                  	// #34
    25bc:	mov	w1, w5
    25c0:	mov	w0, #0x0                   	// #0
    25c4:	str	w3, [sp, #72]
    25c8:	b	22a0 <_ZN4llvm7TGLexer13LexIdentifierEv+0x190>
    25cc:	mov	w7, w1
    25d0:	mov	w3, #0x0                   	// #0
    25d4:	b	223c <_ZN4llvm7TGLexer13LexIdentifierEv+0x12c>
    25d8:	ldrb	w1, [x22, #2]
    25dc:	cmp	w1, #0x67
    25e0:	b.ne	21b4 <_ZN4llvm7TGLexer13LexIdentifierEv+0xa4>  // b.any
    25e4:	mov	w5, #0x17                  	// #23
    25e8:	mov	w1, w2
    25ec:	mov	w6, #0x0                   	// #0
    25f0:	mov	w7, #0x0                   	// #0
    25f4:	mov	w0, #0x0                   	// #0
    25f8:	str	w5, [sp, #72]
    25fc:	b	2270 <_ZN4llvm7TGLexer13LexIdentifierEv+0x160>
    2600:	ldrb	w0, [x22, #2]
    2604:	cmp	w0, #0x74
    2608:	b.ne	2210 <_ZN4llvm7TGLexer13LexIdentifierEv+0x100>  // b.any
    260c:	mov	w0, #0x13                  	// #19
    2610:	str	w0, [sp, #72]
    2614:	mov	w2, w1
    2618:	mov	w6, #0x0                   	// #0
    261c:	mov	w7, #0x0                   	// #0
    2620:	b	231c <_ZN4llvm7TGLexer13LexIdentifierEv+0x20c>
    2624:	ldrh	w3, [x22, #4]
    2628:	mov	w0, #0x676e                	// #26478
    262c:	cmp	w3, w0
    2630:	b.ne	222c <_ZN4llvm7TGLexer13LexIdentifierEv+0x11c>  // b.any
    2634:	mov	w8, #0x21                  	// #33
    2638:	mov	w5, #0x0                   	// #0
    263c:	mov	w0, #0x0                   	// #0
    2640:	mov	w6, w1
    2644:	and	w5, w0, w5
    2648:	mov	w3, #0x0                   	// #0
    264c:	mov	w7, #0x0                   	// #0
    2650:	str	w8, [sp, #72]
    2654:	b	2334 <_ZN4llvm7TGLexer13LexIdentifierEv+0x224>
    2658:	ldrb	w0, [x22, #2]
    265c:	cmp	w0, #0x66
    2660:	b.ne	21c0 <_ZN4llvm7TGLexer13LexIdentifierEv+0xb0>  // b.any
    2664:	mov	w5, #0x18                  	// #24
    2668:	mov	w1, w2
    266c:	mov	w6, #0x0                   	// #0
    2670:	mov	w7, #0x0                   	// #0
    2674:	mov	w0, #0x0                   	// #0
    2678:	str	w5, [sp, #72]
    267c:	b	227c <_ZN4llvm7TGLexer13LexIdentifierEv+0x16c>
    2680:	ldrb	w2, [x22, #2]
    2684:	cmp	w2, #0x74
    2688:	b.ne	2204 <_ZN4llvm7TGLexer13LexIdentifierEv+0xf4>  // b.any
    268c:	mov	w0, #0x1d                  	// #29
    2690:	str	w0, [sp, #72]
    2694:	b	2614 <_ZN4llvm7TGLexer13LexIdentifierEv+0x504>
    2698:	ldrb	w0, [x22, #4]
    269c:	cmp	w0, #0x73
    26a0:	b.ne	225c <_ZN4llvm7TGLexer13LexIdentifierEv+0x14c>  // b.any
    26a4:	mov	w5, #0x15                  	// #21
    26a8:	mov	w1, w3
    26ac:	mov	w2, #0x0                   	// #0
    26b0:	mov	w0, #0x0                   	// #0
    26b4:	str	w5, [sp, #72]
    26b8:	b	2270 <_ZN4llvm7TGLexer13LexIdentifierEv+0x160>
    26bc:	mov	w0, w1
    26c0:	mov	w2, #0x0                   	// #0
    26c4:	and	w5, w0, w5
    26c8:	mov	w1, #0x0                   	// #0
    26cc:	b	2334 <_ZN4llvm7TGLexer13LexIdentifierEv+0x224>

00000000000026d0 <_ZN4llvm7TGLexer14prepSkipRegionEb>:
    26d0:	stp	x29, x30, [sp, #-64]!
    26d4:	tst	w1, #0xff
    26d8:	mov	x29, sp
    26dc:	stp	x19, x20, [sp, #16]
    26e0:	mov	x19, x0
    26e4:	b.ne	26fc <_ZN4llvm7TGLexer14prepSkipRegionEb+0x2c>  // b.any
    26e8:	b	27e4 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x114>
    26ec:	ldp	x1, x2, [x19, #16]
    26f0:	add	x1, x1, x2
    26f4:	cmp	x0, x1
    26f8:	b.eq	2788 <_ZN4llvm7TGLexer14prepSkipRegionEb+0xb8>  // b.none
    26fc:	mov	x0, x19
    2700:	bl	11c0 <_ZN4llvm7TGLexer17prepSkipToLineEndEv>
    2704:	mov	x0, x19
    2708:	bl	fc0 <_ZN4llvm7TGLexer17prepSkipLineBeginEv>
    270c:	tst	w0, #0xff
    2710:	b.eq	2790 <_ZN4llvm7TGLexer14prepSkipRegionEb+0xc0>  // b.none
    2714:	ldr	x0, [x19, #8]
    2718:	ldrb	w1, [x0]
    271c:	cmp	w1, #0x23
    2720:	b.ne	26ec <_ZN4llvm7TGLexer14prepSkipRegionEb+0x1c>  // b.any
    2724:	add	x0, x0, #0x1
    2728:	str	x0, [x19, #8]
    272c:	mov	x0, x19
    2730:	bl	d88 <_ZNK4llvm7TGLexer15prepIsDirectiveEv>
    2734:	cmp	w0, #0x50
    2738:	mov	w20, w0
    273c:	ccmp	w0, #0x1, #0x4, ne  // ne = any
    2740:	b.eq	2774 <_ZN4llvm7TGLexer14prepSkipRegionEb+0xa4>  // b.none
    2744:	mov	w1, w0
    2748:	mov	w2, #0x0                   	// #0
    274c:	mov	x0, x19
    2750:	bl	14e0 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb>
    2754:	cmp	w0, #0x1
    2758:	b.eq	2790 <_ZN4llvm7TGLexer14prepSkipRegionEb+0xc0>  // b.none
    275c:	cmp	w20, w0
    2760:	b.ne	27c8 <_ZN4llvm7TGLexer14prepSkipRegionEb+0xf8>  // b.any
    2764:	mov	x0, x19
    2768:	bl	1208 <_ZN4llvm7TGLexer23prepIsProcessingEnabledEv>
    276c:	ands	w0, w0, #0xff
    2770:	b.ne	27a0 <_ZN4llvm7TGLexer14prepSkipRegionEb+0xd0>  // b.any
    2774:	ldp	x1, x2, [x19, #16]
    2778:	ldr	x0, [x19, #8]
    277c:	add	x1, x1, x2
    2780:	cmp	x0, x1
    2784:	b.ne	26fc <_ZN4llvm7TGLexer14prepSkipRegionEb+0x2c>  // b.any
    2788:	mov	x0, x19
    278c:	bl	1240 <_ZN4llvm7TGLexer32prepReportPreprocessorStackErrorEv>
    2790:	mov	w0, #0x0                   	// #0
    2794:	ldp	x19, x20, [sp, #16]
    2798:	ldp	x29, x30, [sp], #64
    279c:	ret
    27a0:	sub	w20, w20, #0x4e
    27a4:	cmp	w20, #0x1
    27a8:	b.ls	2794 <_ZN4llvm7TGLexer14prepSkipRegionEb+0xc4>  // b.plast
    27ac:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    27b0:	add	x1, x1, #0x0
    27b4:	add	x19, sp, #0x28
    27b8:	mov	x0, x19
    27bc:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    27c0:	mov	x0, x19
    27c4:	bl	0 <_ZN4llvm15PrintFatalErrorERKNS_5TwineE>
    27c8:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    27cc:	add	x1, x1, #0x0
    27d0:	mov	w2, #0x103                 	// #259
    27d4:	add	x0, sp, #0x28
    27d8:	stp	x1, xzr, [sp, #40]
    27dc:	strh	w2, [sp, #56]
    27e0:	bl	0 <_ZN4llvm15PrintFatalErrorERKNS_5TwineE>
    27e4:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    27e8:	add	x1, x1, #0x0
    27ec:	b	27b4 <_ZN4llvm7TGLexer14prepSkipRegionEb+0xe4>

00000000000027f0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>:
    27f0:	stp	x29, x30, [sp, #-128]!
    27f4:	mov	x7, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    27f8:	movk	x7, #0xaaab
    27fc:	mov	x29, sp
    2800:	ldp	x4, x5, [x1]
    2804:	stp	x19, x20, [sp, #16]
    2808:	mov	x19, x0
    280c:	stp	x21, x22, [sp, #32]
    2810:	add	x0, x0, #0x68
    2814:	add	x8, x19, #0x40
    2818:	stp	x1, xzr, [x19]
    281c:	add	x21, x19, #0xb0
    2820:	sub	x1, x5, x4
    2824:	stp	xzr, xzr, [x19, #16]
    2828:	mov	x6, #0x800000000           	// #34359738368
    282c:	asr	x1, x1, #3
    2830:	str	xzr, [x19, #32]
    2834:	str	wzr, [x19, #40]
    2838:	stp	x8, xzr, [x19, #48]
    283c:	mul	x1, x1, x7
    2840:	strb	wzr, [x19, #64]
    2844:	str	xzr, [x19, #80]
    2848:	str	wzr, [x19, #88]
    284c:	str	wzr, [x19, #104]
    2850:	str	xzr, [x19, #112]
    2854:	stp	x0, x0, [x0, #16]
    2858:	str	xzr, [x0, #32]
    285c:	stp	xzr, xzr, [x19, #144]
    2860:	str	x6, [x19, #160]
    2864:	str	xzr, [x19, #176]
    2868:	stp	xzr, xzr, [x21, #8]
    286c:	cbz	w1, 2a88 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0x298>
    2870:	mov	w0, #0x1                   	// #1
    2874:	str	w0, [x19, #88]
    2878:	stp	x23, x24, [sp, #48]
    287c:	cmp	x4, x5
    2880:	b.eq	2a08 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0x218>  // b.none
    2884:	ldr	x1, [x4]
    2888:	mov	x20, x2
    288c:	mov	x22, x2
    2890:	mov	x23, x3
    2894:	mov	x0, #0x18                  	// #24
    2898:	add	x24, sp, #0x78
    289c:	ldp	x2, x1, [x1, #8]
    28a0:	stp	x2, x2, [x19, #8]
    28a4:	sub	x1, x1, x2
    28a8:	str	x1, [x19, #24]
    28ac:	bl	0 <_Znwm>
    28b0:	mov	x2, x0
    28b4:	mov	x1, x24
    28b8:	mov	x0, x21
    28bc:	str	x2, [sp, #120]
    28c0:	stp	xzr, xzr, [x2]
    28c4:	str	xzr, [x2, #16]
    28c8:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    28cc:	ldr	x21, [sp, #120]
    28d0:	cbz	x21, 28ec <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0xfc>
    28d4:	ldr	x0, [x21]
    28d8:	cbz	x0, 28e0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0xf0>
    28dc:	bl	0 <_ZdlPv>
    28e0:	mov	x0, x21
    28e4:	mov	x1, #0x18                  	// #24
    28e8:	bl	0 <_ZdlPvm>
    28ec:	add	x23, x20, x23, lsl #5
    28f0:	add	x19, x19, #0x90
    28f4:	cmp	x20, x23
    28f8:	b.eq	29f4 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0x204>  // b.none
    28fc:	stp	x25, x26, [sp, #64]
    2900:	stp	x27, x28, [sp, #80]
    2904:	b	2920 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0x130>
    2908:	mov	x0, x24
    290c:	add	x22, x22, #0x20
    2910:	mov	w2, #0x0                   	// #0
    2914:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    2918:	cmp	x23, x22
    291c:	b.eq	29ec <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0x1fc>  // b.none
    2920:	ldp	x25, x20, [x22]
    2924:	cbz	x20, 2a30 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0x240>
    2928:	mov	x1, x25
    292c:	mov	x2, x20
    2930:	mov	x0, x19
    2934:	bl	0 <_ZN4llvm13StringMapImpl15LookupBucketForENS_9StringRefE>
    2938:	ldr	x26, [x19]
    293c:	mov	w27, w0
    2940:	mov	x28, x27
    2944:	ldr	x0, [x26, x27, lsl #3]
    2948:	add	x1, x26, w27, uxtw #3
    294c:	cbz	x0, 2964 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0x174>
    2950:	cmn	x0, #0x8
    2954:	b.ne	2908 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0x118>  // b.any
    2958:	ldr	w0, [x19, #16]
    295c:	sub	w0, w0, #0x1
    2960:	str	w0, [x19, #16]
    2964:	add	x2, x20, #0x9
    2968:	str	x2, [sp, #104]
    296c:	mov	x0, x2
    2970:	bl	0 <malloc>
    2974:	mov	x21, x0
    2978:	ldr	x2, [sp, #104]
    297c:	cbz	x0, 2a70 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0x280>
    2980:	mov	x3, x0
    2984:	str	x20, [x3], #8
    2988:	mov	x1, x25
    298c:	mov	x2, x20
    2990:	mov	x0, x3
    2994:	bl	0 <memcpy>
    2998:	strb	wzr, [x0, x20]
    299c:	ldp	w0, w1, [x19, #8]
    29a0:	ldr	w2, [x19, #16]
    29a4:	str	x21, [x26, x27, lsl #3]
    29a8:	add	w1, w1, #0x1
    29ac:	str	w1, [x19, #12]
    29b0:	add	w1, w1, w2
    29b4:	cmp	w1, w0
    29b8:	b.hi	2a50 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0x260>  // b.pmore
    29bc:	mov	w1, w28
    29c0:	mov	x0, x19
    29c4:	bl	0 <_ZN4llvm13StringMapImpl11RehashTableEj>
    29c8:	mov	w3, w0
    29cc:	ldr	x1, [x19]
    29d0:	mov	x0, x24
    29d4:	add	x22, x22, #0x20
    29d8:	mov	w2, #0x0                   	// #0
    29dc:	add	x1, x1, w3, uxtw #3
    29e0:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    29e4:	cmp	x23, x22
    29e8:	b.ne	2920 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0x130>  // b.any
    29ec:	ldp	x25, x26, [sp, #64]
    29f0:	ldp	x27, x28, [sp, #80]
    29f4:	ldp	x19, x20, [sp, #16]
    29f8:	ldp	x21, x22, [sp, #32]
    29fc:	ldp	x23, x24, [sp, #48]
    2a00:	ldp	x29, x30, [sp], #128
    2a04:	ret
    2a08:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
    2a0c:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    2a10:	adrp	x0, 0 <_ZNK4llvm7TGLexer6getLocEv>
    2a14:	add	x3, x3, #0x0
    2a18:	add	x1, x1, #0x0
    2a1c:	add	x0, x0, #0x0
    2a20:	mov	w2, #0x85                  	// #133
    2a24:	stp	x25, x26, [sp, #64]
    2a28:	stp	x27, x28, [sp, #80]
    2a2c:	bl	0 <__assert_fail>
    2a30:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
    2a34:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    2a38:	adrp	x0, 0 <_ZNK4llvm7TGLexer6getLocEv>
    2a3c:	add	x3, x3, #0x0
    2a40:	add	x1, x1, #0x0
    2a44:	add	x0, x0, #0x0
    2a48:	mov	w2, #0x27                  	// #39
    2a4c:	bl	0 <__assert_fail>
    2a50:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
    2a54:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    2a58:	adrp	x0, 0 <_ZNK4llvm7TGLexer6getLocEv>
    2a5c:	add	x3, x3, #0x0
    2a60:	add	x1, x1, #0x0
    2a64:	add	x0, x0, #0x0
    2a68:	mov	w2, #0x1bb                 	// #443
    2a6c:	bl	0 <__assert_fail>
    2a70:	cbz	x2, 2ab4 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0x2c4>
    2a74:	mov	w1, #0x1                   	// #1
    2a78:	adrp	x0, 0 <_ZNK4llvm7TGLexer6getLocEv>
    2a7c:	add	x0, x0, #0x0
    2a80:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    2a84:	brk	#0x3e8
    2a88:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
    2a8c:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    2a90:	adrp	x0, 0 <_ZNK4llvm7TGLexer6getLocEv>
    2a94:	add	x3, x3, #0x0
    2a98:	add	x1, x1, #0x0
    2a9c:	add	x0, x0, #0x0
    2aa0:	mov	w2, #0x8e                  	// #142
    2aa4:	stp	x23, x24, [sp, #48]
    2aa8:	stp	x25, x26, [sp, #64]
    2aac:	stp	x27, x28, [sp, #80]
    2ab0:	bl	0 <__assert_fail>
    2ab4:	mov	x0, #0x1                   	// #1
    2ab8:	bl	0 <malloc>
    2abc:	mov	x21, x0
    2ac0:	cbz	x0, 2a74 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0x284>
    2ac4:	mov	x3, x0
    2ac8:	mov	x0, #0xfffffffffffffff7    	// #-9
    2acc:	str	x0, [x3], #8
    2ad0:	b	2988 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0x198>

Disassembly of section .text._ZN4llvm5TwineC2EPKc:

0000000000000000 <_ZN4llvm5TwineC1EPKc>:
   0:	ldrb	w2, [x1]
   4:	mov	w3, #0x101                 	// #257
   8:	stp	xzr, xzr, [x0]
   c:	strh	w3, [x0, #16]
  10:	cbz	w2, 20 <_ZN4llvm5TwineC1EPKc+0x20>
  14:	mov	w2, #0x3                   	// #3
  18:	str	x1, [x0]
  1c:	strb	w2, [x0, #16]
  20:	ret

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x3, #0xfffffffffffffff     	// #1152921504606846975
   8:	mov	x29, sp
   c:	stp	x23, x24, [sp, #48]
  10:	stp	x25, x26, [sp, #64]
  14:	ldp	x24, x26, [x0]
  18:	stp	x19, x20, [sp, #16]
  1c:	stp	x21, x22, [sp, #32]
  20:	str	x27, [sp, #80]
  24:	mov	x27, x1
  28:	sub	x1, x26, x24
  2c:	cmp	x3, x1, asr #3
  30:	b.eq	154 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0x154>  // b.none
  34:	mov	x22, x0
  38:	mov	x20, x2
  3c:	asr	x0, x1, #3
  40:	sub	x21, x27, x24
  44:	cbz	x0, 13c <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0x13c>
  48:	cmp	x0, x0, lsl #1
  4c:	mov	x25, #0x7ffffffffffffff8    	// #9223372036854775800
  50:	lsl	x0, x0, #1
  54:	b.ls	128 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0x128>  // b.plast
  58:	mov	x0, x25
  5c:	bl	0 <_Znwm>
  60:	mov	x23, x0
  64:	add	x25, x0, x25
  68:	add	x19, x0, #0x8
  6c:	ldr	x0, [x20]
  70:	str	x0, [x23, x21]
  74:	str	xzr, [x20]
  78:	cmp	x27, x24
  7c:	b.eq	d0 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0xd0>  // b.none
  80:	mov	x20, x23
  84:	mov	x19, x24
  88:	ldr	x0, [x19]
  8c:	str	xzr, [x19]
  90:	str	x0, [x20]
  94:	ldr	x21, [x19]
  98:	cbz	x21, b4 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0xb4>
  9c:	ldr	x0, [x21]
  a0:	cbz	x0, a8 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0xa8>
  a4:	bl	0 <_ZdlPv>
  a8:	mov	x0, x21
  ac:	mov	x1, #0x18                  	// #24
  b0:	bl	0 <_ZdlPvm>
  b4:	add	x19, x19, #0x8
  b8:	add	x20, x20, #0x8
  bc:	cmp	x27, x19
  c0:	b.ne	88 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0x88>  // b.any
  c4:	sub	x19, x27, x24
  c8:	add	x19, x19, #0x8
  cc:	add	x19, x23, x19
  d0:	cmp	x27, x26
  d4:	b.eq	f8 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0xf8>  // b.none
  d8:	mov	x2, x27
  dc:	mov	x3, x19
  e0:	ldr	x0, [x2], #8
  e4:	str	x0, [x3], #8
  e8:	cmp	x2, x26
  ec:	b.ne	e0 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0xe0>  // b.any
  f0:	sub	x2, x2, x27
  f4:	add	x19, x19, x2
  f8:	cbz	x24, 104 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0x104>
  fc:	mov	x0, x24
 100:	bl	0 <_ZdlPv>
 104:	ldr	x27, [sp, #80]
 108:	stp	x23, x19, [x22]
 10c:	str	x25, [x22, #16]
 110:	ldp	x19, x20, [sp, #16]
 114:	ldp	x21, x22, [sp, #32]
 118:	ldp	x23, x24, [sp, #48]
 11c:	ldp	x25, x26, [sp, #64]
 120:	ldp	x29, x30, [sp], #96
 124:	ret
 128:	cbnz	x0, 144 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0x144>
 12c:	mov	x19, #0x8                   	// #8
 130:	mov	x25, #0x0                   	// #0
 134:	mov	x23, #0x0                   	// #0
 138:	b	6c <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0x6c>
 13c:	mov	x25, #0x8                   	// #8
 140:	b	58 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0x58>
 144:	cmp	x0, x3
 148:	csel	x0, x0, x3, ls  // ls = plast
 14c:	lsl	x25, x0, #3
 150:	b	58 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0x58>
 154:	adrp	x0, 0 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_>
 158:	add	x0, x0, #0x0
 15c:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE12emplace_backIJS8_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE12emplace_backIJS8_EEEvDpOT_>:
   0:	ldp	x3, x2, [x0, #8]
   4:	mov	x4, x0
   8:	cmp	x3, x2
   c:	b.eq	24 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE12emplace_backIJS8_EEEvDpOT_+0x24>  // b.none
  10:	ldr	x0, [x1]
  14:	str	xzr, [x1]
  18:	str	x0, [x3], #8
  1c:	str	x3, [x4, #8]
  20:	ret
  24:	mov	x2, x1
  28:	mov	x1, x3
  2c:	b	0 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE12emplace_backIJS8_EEEvDpOT_>

Disassembly of section .text._ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x3, #0x7ffffffffffffff     	// #576460752303423487
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x1
  14:	stp	x23, x24, [sp, #48]
  18:	ldp	x24, x20, [x0]
  1c:	stp	x21, x22, [sp, #32]
  20:	stp	x25, x26, [sp, #64]
  24:	str	x27, [sp, #80]
  28:	sub	x1, x20, x24
  2c:	cmp	x3, x1, asr #4
  30:	b.eq	168 <_ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x168>  // b.none
  34:	mov	x23, x0
  38:	mov	x25, x2
  3c:	asr	x0, x1, #4
  40:	sub	x27, x19, x24
  44:	cbz	x0, 150 <_ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x150>
  48:	cmp	x0, x0, lsl #1
  4c:	mov	x26, #0x7ffffffffffffff0    	// #9223372036854775792
  50:	lsl	x0, x0, #1
  54:	b.ls	13c <_ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x13c>  // b.plast
  58:	mov	x0, x26
  5c:	bl	0 <_Znwm>
  60:	mov	x22, x0
  64:	add	x26, x0, x26
  68:	add	x21, x0, #0x10
  6c:	add	x0, x22, x27
  70:	ldr	w1, [x25]
  74:	ldrb	w2, [x25, #4]
  78:	cmp	x19, x24
  7c:	str	w1, [x22, x27]
  80:	ldr	x1, [x25, #8]
  84:	strb	w2, [x0, #4]
  88:	str	x1, [x0, #8]
  8c:	b.eq	cc <_ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xcc>  // b.none
  90:	mov	x3, x22
  94:	mov	x2, x24
  98:	ldrb	w4, [x2, #4]
  9c:	add	x2, x2, #0x10
  a0:	ldur	w5, [x2, #-16]
  a4:	add	x3, x3, #0x10
  a8:	ldur	x1, [x2, #-8]
  ac:	stur	w5, [x3, #-16]
  b0:	sturb	w4, [x3, #-12]
  b4:	cmp	x19, x2
  b8:	stur	x1, [x3, #-8]
  bc:	b.ne	98 <_ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x98>  // b.any
  c0:	sub	x21, x19, x24
  c4:	add	x21, x21, #0x10
  c8:	add	x21, x22, x21
  cc:	cmp	x19, x20
  d0:	b.eq	10c <_ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x10c>  // b.none
  d4:	mov	x2, x19
  d8:	mov	x3, x21
  dc:	nop
  e0:	ldrb	w4, [x2, #4]
  e4:	add	x3, x3, #0x10
  e8:	sturb	w4, [x3, #-12]
  ec:	ldr	x1, [x2, #8]
  f0:	stur	x1, [x3, #-8]
  f4:	ldr	w4, [x2], #16
  f8:	stur	w4, [x3, #-16]
  fc:	cmp	x2, x20
 100:	b.ne	e0 <_ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xe0>  // b.any
 104:	sub	x2, x2, x19
 108:	add	x21, x21, x2
 10c:	cbz	x24, 118 <_ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x118>
 110:	mov	x0, x24
 114:	bl	0 <_ZdlPv>
 118:	ldp	x19, x20, [sp, #16]
 11c:	ldr	x27, [sp, #80]
 120:	stp	x22, x21, [x23]
 124:	str	x26, [x23, #16]
 128:	ldp	x21, x22, [sp, #32]
 12c:	ldp	x23, x24, [sp, #48]
 130:	ldp	x25, x26, [sp, #64]
 134:	ldp	x29, x30, [sp], #96
 138:	ret
 13c:	cbnz	x0, 158 <_ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x158>
 140:	mov	x21, #0x10                  	// #16
 144:	mov	x26, #0x0                   	// #0
 148:	mov	x22, #0x0                   	// #0
 14c:	b	6c <_ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x6c>
 150:	mov	x26, #0x10                  	// #16
 154:	b	58 <_ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x58>
 158:	cmp	x0, x3
 15c:	csel	x0, x0, x3, ls  // ls = plast
 160:	lsl	x26, x0, #4
 164:	b	58 <_ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x58>
 168:	adrp	x0, 0 <_ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 16c:	add	x0, x0, #0x0
 170:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE12emplace_backIJS2_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE12emplace_backIJS2_EEEvDpOT_>:
   0:	mov	x2, x1
   4:	mov	x3, x0
   8:	ldp	x1, x4, [x0, #8]
   c:	cmp	x1, x4
  10:	b.eq	38 <_ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE12emplace_backIJS2_EEEvDpOT_+0x38>  // b.none
  14:	ldrb	w4, [x2, #4]
  18:	add	x0, x1, #0x10
  1c:	ldr	w5, [x2]
  20:	ldr	x2, [x2, #8]
  24:	str	w5, [x1]
  28:	strb	w4, [x1, #4]
  2c:	str	x2, [x1, #8]
  30:	str	x0, [x3, #8]
  34:	ret
  38:	b	0 <_ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE12emplace_backIJS2_EEEvDpOT_>

Disassembly of section .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag:

0000000000000000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	cmp	x2, #0x0
   8:	ccmp	x1, #0x0, #0x0, ne  // ne = any
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	str	x21, [sp, #32]
  18:	b.eq	c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0xc8>  // b.none
  1c:	sub	x19, x2, x1
  20:	str	x19, [sp, #56]
  24:	mov	x21, x1
  28:	mov	x20, x0
  2c:	cmp	x19, #0xf
  30:	b.hi	84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x84>  // b.pmore
  34:	cmp	x19, #0x1
  38:	ldr	x0, [x0]
  3c:	b.ne	68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x68>  // b.any
  40:	ldrb	w1, [x1]
  44:	strb	w1, [x0]
  48:	ldr	x0, [x20]
  4c:	ldr	x19, [sp, #56]
  50:	str	x19, [x20, #8]
  54:	strb	wzr, [x0, x19]
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldr	x21, [sp, #32]
  60:	ldp	x29, x30, [sp], #64
  64:	ret
  68:	cbnz	x19, 9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x9c>
  6c:	str	x19, [x20, #8]
  70:	strb	wzr, [x0, x19]
  74:	ldp	x19, x20, [sp, #16]
  78:	ldr	x21, [sp, #32]
  7c:	ldp	x29, x30, [sp], #64
  80:	ret
  84:	add	x1, sp, #0x38
  88:	mov	x2, #0x0                   	// #0
  8c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  90:	str	x0, [x20]
  94:	ldr	x1, [sp, #56]
  98:	str	x1, [x20, #16]
  9c:	mov	x2, x19
  a0:	mov	x1, x21
  a4:	bl	0 <memcpy>
  a8:	ldr	x0, [x20]
  ac:	ldr	x19, [sp, #56]
  b0:	str	x19, [x20, #8]
  b4:	strb	wzr, [x0, x19]
  b8:	ldp	x19, x20, [sp, #16]
  bc:	ldr	x21, [sp, #32]
  c0:	ldp	x29, x30, [sp], #64
  c4:	ret
  c8:	adrp	x0, 0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>
  cc:	add	x0, x0, #0x0
  d0:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	ldr	x19, [x0, #16]
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x21, x1
  1c:	stp	x23, x24, [sp, #48]
  20:	add	x24, x0, #0x8
  24:	stp	x25, x26, [sp, #64]
  28:	stp	x27, x28, [sp, #80]
  2c:	cbz	x19, 208 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x208>
  30:	ldp	x26, x23, [x1]
  34:	mov	x25, #0xffffffff80000000    	// #-2147483648
  38:	ldp	x28, x22, [x19, #32]
  3c:	mov	x0, x26
  40:	cmp	x23, x22
  44:	csel	x27, x23, x22, ls  // ls = plast
  48:	cbz	x27, 5c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x5c>
  4c:	mov	x2, x27
  50:	mov	x1, x28
  54:	bl	0 <memcmp>
  58:	cbnz	w0, 78 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x78>
  5c:	sub	x2, x23, x22
  60:	mov	x1, #0x7fffffff            	// #2147483647
  64:	mov	w0, w2
  68:	cmp	x2, x1
  6c:	b.gt	90 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x90>
  70:	cmp	x2, x25
  74:	b.lt	7c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x7c>  // b.tstop
  78:	tbz	w0, #31, 90 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x90>
  7c:	ldr	x0, [x19, #16]
  80:	mov	w1, #0x1                   	// #1
  84:	cbz	x0, 9c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x9c>
  88:	mov	x19, x0
  8c:	b	38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x38>
  90:	ldr	x0, [x19, #24]
  94:	mov	w1, #0x0                   	// #0
  98:	cbnz	x0, 88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x88>
  9c:	mov	x25, x19
  a0:	cbnz	w1, 100 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x100>
  a4:	cbz	x27, bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0xbc>
  a8:	mov	x2, x27
  ac:	mov	x0, x28
  b0:	mov	x1, x26
  b4:	bl	0 <memcmp>
  b8:	cbnz	w0, d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0xd8>
  bc:	sub	x0, x22, x23
  c0:	mov	x1, #0x7fffffff            	// #2147483647
  c4:	cmp	x0, x1
  c8:	b.gt	dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0xdc>
  cc:	mov	x1, #0xffffffff80000000    	// #-2147483648
  d0:	cmp	x0, x1
  d4:	b.lt	12c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x12c>  // b.tstop
  d8:	tbnz	w0, #31, 12c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x12c>
  dc:	mov	x0, x19
  e0:	mov	x1, #0x0                   	// #0
  e4:	ldp	x19, x20, [sp, #16]
  e8:	ldp	x21, x22, [sp, #32]
  ec:	ldp	x23, x24, [sp, #48]
  f0:	ldp	x25, x26, [sp, #64]
  f4:	ldp	x27, x28, [sp, #80]
  f8:	ldp	x29, x30, [sp], #96
  fc:	ret
 100:	ldr	x0, [x20, #24]
 104:	cmp	x0, x19
 108:	b.eq	1b0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x1b0>  // b.none
 10c:	mov	x0, x19
 110:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 114:	ldp	x28, x22, [x0, #32]
 118:	mov	x25, x19
 11c:	mov	x19, x0
 120:	cmp	x22, x23
 124:	csel	x27, x22, x23, ls  // ls = plast
 128:	b	a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0xa4>
 12c:	cbz	x25, 22c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x22c>
 130:	cmp	x24, x25
 134:	mov	w22, #0x1                   	// #1
 138:	b.ne	1c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x1c0>  // b.any
 13c:	mov	x0, #0x40                  	// #64
 140:	bl	0 <_Znwm>
 144:	ldp	x1, x2, [x21]
 148:	mov	x19, x0
 14c:	add	x4, x0, #0x30
 150:	mov	w3, #0x0                   	// #0
 154:	add	x0, x0, #0x20
 158:	str	x4, [x19, #32]
 15c:	add	x2, x1, x2
 160:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_>
 164:	mov	x3, x24
 168:	mov	x2, x25
 16c:	mov	x1, x19
 170:	mov	w0, w22
 174:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
 178:	ldr	x2, [x20, #40]
 17c:	mov	x3, #0x1                   	// #1
 180:	mov	x1, #0x0                   	// #0
 184:	mov	x0, x19
 188:	add	x2, x2, x3
 18c:	str	x2, [x20, #40]
 190:	bfxil	x1, x3, #0, #8
 194:	ldp	x19, x20, [sp, #16]
 198:	ldp	x21, x22, [sp, #32]
 19c:	ldp	x23, x24, [sp, #48]
 1a0:	ldp	x25, x26, [sp, #64]
 1a4:	ldp	x27, x28, [sp, #80]
 1a8:	ldp	x29, x30, [sp], #96
 1ac:	ret
 1b0:	mov	x25, x19
 1b4:	mov	w22, #0x1                   	// #1
 1b8:	cmp	x24, x25
 1bc:	b.eq	13c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x13c>  // b.none
 1c0:	ldr	x22, [x25, #40]
 1c4:	cmp	x23, x22
 1c8:	csel	x2, x23, x22, ls  // ls = plast
 1cc:	cbz	x2, 1e0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x1e0>
 1d0:	ldr	x1, [x25, #32]
 1d4:	mov	x0, x26
 1d8:	bl	0 <memcmp>
 1dc:	cbnz	w0, 200 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x200>
 1e0:	sub	x0, x23, x22
 1e4:	mov	x1, #0x7fffffff            	// #2147483647
 1e8:	mov	w22, #0x0                   	// #0
 1ec:	cmp	x0, x1
 1f0:	b.gt	13c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x13c>
 1f4:	mov	x1, #0xffffffff80000000    	// #-2147483648
 1f8:	cmp	x0, x1
 1fc:	b.lt	224 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x224>  // b.tstop
 200:	lsr	w22, w0, #31
 204:	b	13c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x13c>
 208:	ldr	x0, [x0, #24]
 20c:	cmp	x24, x0
 210:	b.eq	220 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x220>  // b.none
 214:	mov	x19, x24
 218:	ldp	x26, x23, [x1]
 21c:	b	10c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x10c>
 220:	mov	x25, x24
 224:	mov	w22, #0x1                   	// #1
 228:	b	13c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x13c>
 22c:	mov	x19, #0x0                   	// #0
 230:	b	dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0xdc>

Disassembly of section .text._ZN4llvm17StringMapIterBaseINS_22StringMapConstIteratorINS_8NoneTypeEEEKNS_14StringMapEntryIS2_EEEC2EPPNS_18StringMapEntryBaseEb:

0000000000000000 <_ZN4llvm17StringMapIterBaseINS_22StringMapConstIteratorINS_8NoneTypeEEEKNS_14StringMapEntryIS2_EEEC1EPPNS_18StringMapEntryBaseEb>:
   0:	str	x1, [x0]
   4:	tst	w2, #0xff
   8:	b.ne	38 <_ZN4llvm17StringMapIterBaseINS_22StringMapConstIteratorINS_8NoneTypeEEEKNS_14StringMapEntryIS2_EEEC1EPPNS_18StringMapEntryBaseEb+0x38>  // b.any
   c:	ldr	x2, [x1]
  10:	cmp	x2, #0x0
  14:	ccmn	x2, #0x8, #0x4, ne  // ne = any
  18:	b.ne	38 <_ZN4llvm17StringMapIterBaseINS_22StringMapConstIteratorINS_8NoneTypeEEEKNS_14StringMapEntryIS2_EEEC1EPPNS_18StringMapEntryBaseEb+0x38>  // b.any
  1c:	add	x1, x1, #0x8
  20:	mov	x3, x1
  24:	ldr	x2, [x1], #8
  28:	cmp	x2, #0x0
  2c:	ccmn	x2, #0x8, #0x4, ne  // ne = any
  30:	b.eq	20 <_ZN4llvm17StringMapIterBaseINS_22StringMapConstIteratorINS_8NoneTypeEEEKNS_14StringMapEntryIS2_EEEC1EPPNS_18StringMapEntryBaseEb+0x20>  // b.none
  34:	str	x3, [x0]
  38:	ret

Disassembly of section .text._ZN4llvm17StringMapIterBaseINS_17StringMapIteratorINS_8NoneTypeEEENS_14StringMapEntryIS2_EEEC2EPPNS_18StringMapEntryBaseEb:

0000000000000000 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorINS_8NoneTypeEEENS_14StringMapEntryIS2_EEEC1EPPNS_18StringMapEntryBaseEb>:
   0:	str	x1, [x0]
   4:	tst	w2, #0xff
   8:	b.ne	38 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorINS_8NoneTypeEEENS_14StringMapEntryIS2_EEEC1EPPNS_18StringMapEntryBaseEb+0x38>  // b.any
   c:	ldr	x2, [x1]
  10:	cmp	x2, #0x0
  14:	ccmn	x2, #0x8, #0x4, ne  // ne = any
  18:	b.ne	38 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorINS_8NoneTypeEEENS_14StringMapEntryIS2_EEEC1EPPNS_18StringMapEntryBaseEb+0x38>  // b.any
  1c:	add	x1, x1, #0x8
  20:	mov	x3, x1
  24:	ldr	x2, [x1], #8
  28:	cmp	x2, #0x0
  2c:	ccmn	x2, #0x8, #0x4, ne  // ne = any
  30:	b.eq	20 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorINS_8NoneTypeEEENS_14StringMapEntryIS2_EEEC1EPPNS_18StringMapEntryBaseEb+0x20>  // b.none
  34:	str	x3, [x0]
  38:	ret

TGParser.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>:
       0:	stp	x29, x30, [sp, #-16]!
       4:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
       8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
       c:	mov	x29, sp
      10:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
      14:	add	x3, x3, #0x0
      18:	add	x1, x1, #0x0
      1c:	add	x0, x0, #0x0
      20:	mov	w2, #0x75                  	// #117
      24:	bl	0 <__assert_fail>

0000000000000028 <_ZNK4llvm8ArrayRefIPNS_4InitEEixEm.isra.0.part.0>:
      28:	stp	x29, x30, [sp, #-16]!
      2c:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
      30:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
      34:	mov	x29, sp
      38:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
      3c:	add	x3, x3, #0x0
      40:	add	x1, x1, #0x0
      44:	add	x0, x0, #0x0
      48:	mov	w2, #0xfa                  	// #250
      4c:	bl	0 <__assert_fail>

0000000000000050 <_ZN4llvm3isaINS_9BitsRecTyEPNS_5RecTyEEEbRKT0_.isra.0.part.0>:
      50:	stp	x29, x30, [sp, #-16]!
      54:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
      58:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
      5c:	mov	x29, sp
      60:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
      64:	add	x3, x3, #0x0
      68:	add	x1, x1, #0x0
      6c:	add	x0, x0, #0x0
      70:	mov	w2, #0x69                  	// #105
      74:	bl	0 <__assert_fail>

0000000000000078 <_ZN4llvm3isaINS_9ListRecTyEPNS_5RecTyEEEbRKT0_.isra.0.part.0>:
      78:	stp	x29, x30, [sp, #-16]!
      7c:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
      80:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
      84:	mov	x29, sp
      88:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
      8c:	add	x3, x3, #0x0
      90:	add	x1, x1, #0x0
      94:	add	x0, x0, #0x0
      98:	mov	w2, #0x69                  	// #105
      9c:	bl	0 <__assert_fail>

00000000000000a0 <_ZN4llvm3isaINS_7VarInitEPNS_4InitEEEbRKT0_.isra.0.part.0>:
      a0:	stp	x29, x30, [sp, #-16]!
      a4:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
      a8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
      ac:	mov	x29, sp
      b0:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
      b4:	add	x3, x3, #0x0
      b8:	add	x1, x1, #0x0
      bc:	add	x0, x0, #0x0
      c0:	mov	w2, #0x69                  	// #105
      c4:	bl	0 <__assert_fail>

00000000000000c8 <_ZN4llvm3isaINS_8BitsInitEPNS_4InitEEEbRKT0_.isra.0.part.0>:
      c8:	stp	x29, x30, [sp, #-16]!
      cc:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
      d0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
      d4:	mov	x29, sp
      d8:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
      dc:	add	x3, x3, #0x0
      e0:	add	x1, x1, #0x0
      e4:	add	x0, x0, #0x0
      e8:	mov	w2, #0x69                  	// #105
      ec:	bl	0 <__assert_fail>

00000000000000f0 <_ZN4llvm3isaINS_10StringInitEPNS_4InitEEEbRKT0_.isra.0.part.0>:
      f0:	stp	x29, x30, [sp, #-16]!
      f4:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
      f8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
      fc:	mov	x29, sp
     100:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     104:	add	x3, x3, #0x0
     108:	add	x1, x1, #0x0
     10c:	add	x0, x0, #0x0
     110:	mov	w2, #0x69                  	// #105
     114:	bl	0 <__assert_fail>

0000000000000118 <_ZN4llvm3isaINS_8DagRecTyEPNS_5RecTyEEEbRKT0_.isra.0.part.0>:
     118:	stp	x29, x30, [sp, #-16]!
     11c:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     120:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     124:	mov	x29, sp
     128:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     12c:	add	x3, x3, #0x0
     130:	add	x1, x1, #0x0
     134:	add	x0, x0, #0x0
     138:	mov	w2, #0x69                  	// #105
     13c:	bl	0 <__assert_fail>

0000000000000140 <_ZN4llvm3isaINS_9BinOpInitEPNS_4InitEEEbRKT0_.isra.0.part.0>:
     140:	stp	x29, x30, [sp, #-16]!
     144:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     148:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     14c:	mov	x29, sp
     150:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     154:	add	x3, x3, #0x0
     158:	add	x1, x1, #0x0
     15c:	add	x0, x0, #0x0
     160:	mov	w2, #0x69                  	// #105
     164:	bl	0 <__assert_fail>

0000000000000168 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE>:
     168:	stp	x29, x30, [sp, #-64]!
     16c:	mov	x29, sp
     170:	stp	x23, x24, [sp, #48]
     174:	mov	x23, x3
     178:	ldr	x24, [x0]
     17c:	stp	x19, x20, [sp, #16]
     180:	mov	x19, x2
     184:	mov	x20, x4
     188:	stp	x21, x22, [sp, #32]
     18c:	mov	x22, x0
     190:	mov	x21, x1
     194:	mov	x0, x3
     198:	mov	x1, x4
     19c:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
     1a0:	mov	x1, x0
     1a4:	mov	x0, x24
     1a8:	bl	0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>
     1ac:	mov	x1, x19
     1b0:	bl	0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>
     1b4:	mov	x19, x0
     1b8:	cbz	x21, 1f0 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE+0x88>
     1bc:	cmp	x20, #0x2
     1c0:	b.eq	234 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE+0xcc>  // b.none
     1c4:	ldr	x20, [x21]
     1c8:	mov	x1, #0x2                   	// #2
     1cc:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     1d0:	add	x0, x0, #0x0
     1d4:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
     1d8:	mov	x1, x0
     1dc:	mov	x0, x20
     1e0:	bl	0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>
     1e4:	mov	x1, x19
     1e8:	bl	0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>
     1ec:	mov	x19, x0
     1f0:	cbz	x19, 248 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE+0xe0>
     1f4:	ldrb	w0, [x19, #8]
     1f8:	cmp	w0, #0xb
     1fc:	b.eq	218 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE+0xb0>  // b.none
     200:	mov	x0, x19
     204:	ldp	x19, x20, [sp, #16]
     208:	ldp	x21, x22, [sp, #32]
     20c:	ldp	x23, x24, [sp, #48]
     210:	ldp	x29, x30, [sp], #64
     214:	ret
     218:	mov	x1, x22
     21c:	mov	x0, x19
     220:	ldp	x19, x20, [sp, #16]
     224:	ldp	x21, x22, [sp, #32]
     228:	ldp	x23, x24, [sp, #48]
     22c:	ldp	x29, x30, [sp], #64
     230:	b	0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE>
     234:	ldrh	w1, [x23]
     238:	mov	w0, #0x3a3a                	// #14906
     23c:	cmp	w1, w0
     240:	b.ne	1c4 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE+0x5c>  // b.any
     244:	b	1f0 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE+0x88>
     248:	bl	140 <_ZN4llvm3isaINS_9BinOpInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
     24c:	nop

0000000000000250 <_ZL27QualifiedNameOfImplicitNameRN4llvm6RecordEPNS_10MultiClassE>:
     250:	stp	x29, x30, [sp, #-48]!
     254:	mov	x29, sp
     258:	stp	x19, x20, [sp, #16]
     25c:	mov	x20, x1
     260:	mov	x1, #0x4                   	// #4
     264:	stp	x21, x22, [sp, #32]
     268:	mov	x21, x0
     26c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     270:	add	x0, x0, #0x0
     274:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
     278:	cmp	x20, #0x0
     27c:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     280:	add	x3, x3, #0x0
     284:	adrp	x19, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     288:	add	x19, x19, #0x0
     28c:	mov	x22, x0
     290:	csel	x19, x19, x3, ne  // ne = any
     294:	mov	x0, x19
     298:	bl	0 <strlen>
     29c:	mov	x3, x19
     2a0:	mov	x4, x0
     2a4:	mov	x2, x22
     2a8:	mov	x1, x20
     2ac:	mov	x0, x21
     2b0:	ldp	x19, x20, [sp, #16]
     2b4:	ldp	x21, x22, [sp, #32]
     2b8:	ldp	x29, x30, [sp], #48
     2bc:	b	168 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE>

00000000000002c0 <_ZN4llvm3isaINS_8ListInitEPNS_4InitEEEbRKT0_.isra.0.part.0>:
     2c0:	stp	x29, x30, [sp, #-16]!
     2c4:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     2c8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     2cc:	mov	x29, sp
     2d0:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     2d4:	add	x3, x3, #0x0
     2d8:	add	x1, x1, #0x0
     2dc:	add	x0, x0, #0x0
     2e0:	mov	w2, #0x69                  	// #105
     2e4:	bl	0 <__assert_fail>

00000000000002e8 <_ZN4llvm3isaINS_7IntInitEPNS_4InitEEEbRKT0_.isra.0.part.0>:
     2e8:	stp	x29, x30, [sp, #-16]!
     2ec:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     2f0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     2f4:	mov	x29, sp
     2f8:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     2fc:	add	x3, x3, #0x0
     300:	add	x1, x1, #0x0
     304:	add	x0, x0, #0x0
     308:	mov	w2, #0x69                  	// #105
     30c:	bl	0 <__assert_fail>

0000000000000310 <_ZN4llvm3isaINS_11StringRecTyEPNS_5RecTyEEEbRKT0_.isra.0.part.0>:
     310:	stp	x29, x30, [sp, #-16]!
     314:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     318:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     31c:	mov	x29, sp
     320:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     324:	add	x3, x3, #0x0
     328:	add	x1, x1, #0x0
     32c:	add	x0, x0, #0x0
     330:	mov	w2, #0x69                  	// #105
     334:	bl	0 <__assert_fail>

0000000000000338 <_ZNKSt14default_deleteIN4llvm6RecordEEclEPS1_.isra.0.part.0>:
     338:	stp	x29, x30, [sp, #-48]!
     33c:	add	x1, x0, #0x68
     340:	mov	x29, sp
     344:	stp	x19, x20, [sp, #16]
     348:	mov	x19, x0
     34c:	str	x21, [sp, #32]
     350:	add	x21, x0, #0x58
     354:	ldr	x0, [x0, #88]
     358:	cmp	x0, x1
     35c:	b.eq	364 <_ZNKSt14default_deleteIN4llvm6RecordEEclEPS1_.isra.0.part.0+0x2c>  // b.none
     360:	bl	0 <free>
     364:	ldr	x0, [x19, #72]
     368:	add	x20, x19, #0x48
     36c:	cmp	x21, x0
     370:	b.eq	378 <_ZNKSt14default_deleteIN4llvm6RecordEEclEPS1_.isra.0.part.0+0x40>  // b.none
     374:	bl	0 <free>
     378:	ldr	x0, [x19, #56]
     37c:	cmp	x20, x0
     380:	b.eq	388 <_ZNKSt14default_deleteIN4llvm6RecordEEclEPS1_.isra.0.part.0+0x50>  // b.none
     384:	bl	0 <free>
     388:	ldr	x0, [x19, #8]
     38c:	add	x1, x19, #0x18
     390:	cmp	x0, x1
     394:	b.eq	39c <_ZNKSt14default_deleteIN4llvm6RecordEEclEPS1_.isra.0.part.0+0x64>  // b.none
     398:	bl	0 <free>
     39c:	mov	x0, x19
     3a0:	mov	x1, #0x80                  	// #128
     3a4:	ldp	x19, x20, [sp, #16]
     3a8:	ldr	x21, [sp, #32]
     3ac:	ldp	x29, x30, [sp], #48
     3b0:	b	0 <_ZdlPvm>
     3b4:	nop

00000000000003b8 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE>:
     3b8:	sub	sp, sp, #0x220
     3bc:	stp	x29, x30, [sp]
     3c0:	mov	x29, sp
     3c4:	stp	x19, x20, [sp, #16]
     3c8:	mov	x20, x1
     3cc:	stp	x21, x22, [sp, #32]
     3d0:	mov	x21, x2
     3d4:	mov	x22, x3
     3d8:	stp	x23, x24, [sp, #48]
     3dc:	cbz	x1, 6dc <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x324>
     3e0:	ldr	w1, [x20, #80]
     3e4:	mov	w5, #0x18                  	// #24
     3e8:	ldr	x4, [x20, #72]
     3ec:	ldr	x6, [x22]
     3f0:	umaddl	x5, w1, w5, x4
     3f4:	cmp	x5, x4
     3f8:	b.eq	684 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x2cc>  // b.none
     3fc:	mov	x19, x4
     400:	b	410 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x58>
     404:	add	x19, x19, #0x18
     408:	cmp	x5, x19
     40c:	b.eq	458 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0xa0>  // b.none
     410:	ldr	x0, [x19]
     414:	cmp	x6, x0
     418:	b.ne	404 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x4c>  // b.any
     41c:	ldr	x1, [x22, #16]
     420:	mov	x0, x19
     424:	bl	0 <_ZN4llvm9RecordVal8setValueEPNS_4InitE>
     428:	ands	w23, w0, #0xff
     42c:	b.ne	48c <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0xd4>  // b.any
     430:	mov	w0, w23
     434:	ldp	x29, x30, [sp]
     438:	ldp	x19, x20, [sp, #16]
     43c:	ldp	x21, x22, [sp, #32]
     440:	ldp	x23, x24, [sp, #48]
     444:	add	sp, sp, #0x220
     448:	ret
     44c:	add	x4, x4, #0x18
     450:	cmp	x5, x4
     454:	b.eq	684 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x2cc>  // b.none
     458:	ldr	x0, [x4]
     45c:	cmp	x6, x0
     460:	b.ne	44c <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x94>  // b.any
     464:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     468:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     46c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     470:	add	x3, x3, #0x0
     474:	add	x1, x1, #0x0
     478:	add	x0, x0, #0x0
     47c:	mov	w2, #0x60a                 	// #1546
     480:	stp	x25, x26, [sp, #64]
     484:	stp	x27, x28, [sp, #80]
     488:	bl	0 <__assert_fail>
     48c:	mov	x0, x22
     490:	stp	x25, x26, [sp, #64]
     494:	add	x25, sp, #0xc0
     498:	stp	x27, x28, [sp, #80]
     49c:	bl	0 <_ZNK4llvm9RecordVal7getNameEv>
     4a0:	mov	x4, x0
     4a4:	mov	x5, x1
     4a8:	add	x7, sp, #0xf0
     4ac:	add	x2, sp, #0x98
     4b0:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     4b4:	add	x3, x3, #0x0
     4b8:	stp	x4, x5, [sp, #152]
     4bc:	add	x5, sp, #0x120
     4c0:	add	x4, sp, #0x108
     4c4:	mov	w6, #0x503                 	// #1283
     4c8:	mov	x0, x25
     4cc:	add	x20, sp, #0xd8
     4d0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     4d4:	add	x1, x1, #0x0
     4d8:	str	x7, [sp, #96]
     4dc:	add	x24, sp, #0x1e0
     4e0:	str	x4, [sp, #112]
     4e4:	add	x27, sp, #0x168
     4e8:	str	x5, [sp, #136]
     4ec:	add	x28, sp, #0x180
     4f0:	stp	x3, x2, [sp, #168]
     4f4:	add	x26, sp, #0x1b0
     4f8:	strh	w6, [sp, #184]
     4fc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     500:	mov	x1, x25
     504:	mov	x8, x20
     508:	add	x0, sp, #0xa8
     50c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     510:	ldr	x0, [x22, #8]
     514:	add	x6, sp, #0x200
     518:	add	x3, sp, #0x150
     51c:	add	x2, sp, #0x138
     520:	and	x0, x0, #0xfffffffffffffff8
     524:	str	x2, [sp, #104]
     528:	stp	x6, x3, [sp, #120]
     52c:	mov	x8, x24
     530:	add	x25, sp, #0x198
     534:	ldr	x1, [x0]
     538:	add	x22, sp, #0x1c8
     53c:	ldr	x1, [x1, #16]
     540:	blr	x1
     544:	ldr	x7, [sp, #96]
     548:	mov	x1, x24
     54c:	mov	x0, x7
     550:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     554:	ldr	x4, [sp, #112]
     558:	ldr	x0, [sp, #96]
     55c:	mov	x8, x4
     560:	mov	x1, x0
     564:	mov	x0, x20
     568:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     56c:	ldr	x5, [sp, #136]
     570:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     574:	add	x1, x1, #0x0
     578:	str	x5, [sp, #96]
     57c:	mov	x0, x5
     580:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     584:	ldp	x0, x2, [sp, #96]
     588:	ldr	x4, [sp, #112]
     58c:	mov	x8, x2
     590:	mov	x1, x0
     594:	mov	x0, x4
     598:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     59c:	ldr	x3, [sp, #128]
     5a0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     5a4:	add	x1, x1, #0x0
     5a8:	str	x3, [sp, #96]
     5ac:	mov	x0, x3
     5b0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     5b4:	ldp	x0, x8, [sp, #96]
     5b8:	mov	x1, x0
     5bc:	mov	x0, x8
     5c0:	mov	x8, x27
     5c4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     5c8:	ldr	x0, [x19, #8]
     5cc:	ldr	x6, [sp, #120]
     5d0:	and	x0, x0, #0xfffffffffffffff8
     5d4:	mov	x8, x6
     5d8:	mov	x19, x6
     5dc:	ldr	x1, [x0]
     5e0:	ldr	x1, [x1, #16]
     5e4:	blr	x1
     5e8:	mov	x1, x19
     5ec:	mov	x0, x28
     5f0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     5f4:	add	x19, x19, #0x10
     5f8:	mov	x8, x25
     5fc:	mov	x1, x28
     600:	mov	x0, x27
     604:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     608:	mov	x0, x26
     60c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     610:	add	x1, x1, #0x0
     614:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     618:	mov	x8, x22
     61c:	mov	x1, x26
     620:	mov	x0, x25
     624:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     628:	add	x0, sp, #0x90
     62c:	mov	x2, x22
     630:	mov	x1, #0x1                   	// #1
     634:	str	x21, [sp, #144]
     638:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
     63c:	ldr	x0, [sp, #512]
     640:	cmp	x0, x19
     644:	b.eq	64c <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x294>  // b.none
     648:	bl	0 <_ZdlPv>
     64c:	ldr	x0, [sp, #480]
     650:	add	x24, x24, #0x10
     654:	cmp	x0, x24
     658:	b.eq	6e4 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x32c>  // b.none
     65c:	bl	0 <_ZdlPv>
     660:	mov	w0, w23
     664:	ldp	x29, x30, [sp]
     668:	ldp	x19, x20, [sp, #16]
     66c:	ldp	x21, x22, [sp, #32]
     670:	ldp	x23, x24, [sp, #48]
     674:	ldp	x25, x26, [sp, #64]
     678:	ldp	x27, x28, [sp, #80]
     67c:	add	sp, sp, #0x220
     680:	ret
     684:	ldr	w0, [x20, #84]
     688:	cmp	w1, w0
     68c:	b.cs	708 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x350>  // b.hs, b.nlast
     690:	ldp	x0, x1, [x22]
     694:	stp	x0, x1, [x5]
     698:	ldr	x0, [x22, #16]
     69c:	str	x0, [x5, #16]
     6a0:	ldp	w0, w2, [x20, #80]
     6a4:	mov	w1, w0
     6a8:	add	x1, x1, #0x1
     6ac:	cmp	x1, x2
     6b0:	b.hi	730 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x378>  // b.pmore
     6b4:	add	w0, w0, #0x1
     6b8:	str	w0, [x20, #80]
     6bc:	mov	w23, #0x0                   	// #0
     6c0:	mov	w0, w23
     6c4:	ldp	x29, x30, [sp]
     6c8:	ldp	x19, x20, [sp, #16]
     6cc:	ldp	x21, x22, [sp, #32]
     6d0:	ldp	x23, x24, [sp, #48]
     6d4:	add	sp, sp, #0x220
     6d8:	ret
     6dc:	ldr	x20, [x0, #328]
     6e0:	b	3e0 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x28>
     6e4:	mov	w0, w23
     6e8:	ldp	x29, x30, [sp]
     6ec:	ldp	x19, x20, [sp, #16]
     6f0:	ldp	x21, x22, [sp, #32]
     6f4:	ldp	x23, x24, [sp, #48]
     6f8:	ldp	x25, x26, [sp, #64]
     6fc:	ldp	x27, x28, [sp, #80]
     700:	add	sp, sp, #0x220
     704:	ret
     708:	add	x1, x20, #0x58
     70c:	add	x0, x20, #0x48
     710:	mov	x3, #0x18                  	// #24
     714:	mov	x2, #0x0                   	// #0
     718:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     71c:	ldr	w5, [x20, #80]
     720:	mov	w1, #0x18                  	// #24
     724:	ldr	x0, [x20, #72]
     728:	umaddl	x5, w5, w1, x0
     72c:	b	690 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x2d8>
     730:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     734:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     738:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     73c:	add	x3, x3, #0x0
     740:	add	x1, x1, #0x0
     744:	add	x0, x0, #0x0
     748:	mov	w2, #0x43                  	// #67
     74c:	stp	x25, x26, [sp, #64]
     750:	stp	x27, x28, [sp, #80]
     754:	bl	0 <__assert_fail>

0000000000000758 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE>:
     758:	stp	x29, x30, [sp, #-208]!
     75c:	mov	x29, sp
     760:	stp	x19, x20, [sp, #16]
     764:	stp	x21, x22, [sp, #32]
     768:	mov	x21, x2
     76c:	stp	x23, x24, [sp, #48]
     770:	mov	x24, x1
     774:	stp	x25, x26, [sp, #64]
     778:	mov	x26, x0
     77c:	str	w4, [sp, #100]
     780:	str	x3, [sp, #104]
     784:	cbz	x1, 81c <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0xc4>
     788:	ldr	w2, [x24, #80]
     78c:	mov	w1, #0x18                  	// #24
     790:	ldr	x0, [x24, #72]
     794:	umaddl	x2, w2, w1, x0
     798:	cmp	x0, x2
     79c:	b.ne	7b0 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x58>  // b.any
     7a0:	b	7ec <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x94>
     7a4:	add	x0, x0, #0x18
     7a8:	cmp	x2, x0
     7ac:	b.eq	7ec <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x94>  // b.none
     7b0:	ldr	x1, [x0]
     7b4:	cmp	x21, x1
     7b8:	b.ne	7a4 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x4c>  // b.any
     7bc:	ldr	x1, [x0, #8]
     7c0:	mov	x0, x21
     7c4:	and	x1, x1, #0xfffffffffffffff8
     7c8:	bl	0 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE>
     7cc:	mov	x19, x0
     7d0:	mov	x0, x19
     7d4:	ldp	x19, x20, [sp, #16]
     7d8:	ldp	x21, x22, [sp, #32]
     7dc:	ldp	x23, x24, [sp, #48]
     7e0:	ldp	x25, x26, [sp, #64]
     7e4:	ldp	x29, x30, [sp], #208
     7e8:	ret
     7ec:	ldrb	w0, [x24, #125]
     7f0:	ldr	x1, [x26, #328]
     7f4:	cbz	w0, 820 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0xc8>
     7f8:	cbnz	x1, 824 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0xcc>
     7fc:	mov	x2, x21
     800:	mov	x0, x24
     804:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     808:	mov	x4, #0x1                   	// #1
     80c:	add	x3, x3, #0x0
     810:	mov	x1, #0x0                   	// #0
     814:	bl	168 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE>
     818:	b	83c <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0xe4>
     81c:	ldr	x1, [x0, #328]
     820:	cbz	x1, 8e4 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x18c>
     824:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     828:	mov	x2, x21
     82c:	add	x3, x3, #0x0
     830:	mov	x0, x1
     834:	mov	x4, #0x2                   	// #2
     838:	bl	168 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE>
     83c:	ldr	x4, [x26, #328]
     840:	cmp	x4, #0x0
     844:	csel	x4, x24, x4, eq  // eq = none
     848:	ldr	x1, [x4, #56]
     84c:	ldr	w3, [x4, #64]
     850:	add	x3, x1, x3, lsl #3
     854:	cmp	x1, x3
     858:	b.ne	86c <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x114>  // b.any
     85c:	b	8d8 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x180>
     860:	add	x1, x1, #0x8
     864:	cmp	x3, x1
     868:	b.eq	8d8 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x180>  // b.none
     86c:	ldr	x2, [x1]
     870:	cmp	x0, x2
     874:	b.ne	860 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x108>  // b.any
     878:	ldr	w3, [x4, #80]
     87c:	mov	w2, #0x18                  	// #24
     880:	ldr	x1, [x4, #72]
     884:	umaddl	x3, w3, w2, x1
     888:	cmp	x1, x3
     88c:	b.ne	8a0 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x148>  // b.any
     890:	b	b10 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x3b8>
     894:	add	x1, x1, #0x18
     898:	cmp	x3, x1
     89c:	b.eq	b10 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x3b8>  // b.none
     8a0:	ldr	x2, [x1]
     8a4:	cmp	x0, x2
     8a8:	b.ne	894 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x13c>  // b.any
     8ac:	ldr	x1, [x1, #8]
     8b0:	and	x1, x1, #0xfffffffffffffff8
     8b4:	bl	0 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE>
     8b8:	mov	x19, x0
     8bc:	mov	x0, x19
     8c0:	ldp	x19, x20, [sp, #16]
     8c4:	ldp	x21, x22, [sp, #32]
     8c8:	ldp	x23, x24, [sp, #48]
     8cc:	ldp	x25, x26, [sp, #64]
     8d0:	ldp	x29, x30, [sp], #208
     8d4:	ret
     8d8:	ldr	x1, [x21, #32]
     8dc:	cmp	x1, #0x4
     8e0:	b.eq	ac4 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x36c>  // b.none
     8e4:	ldr	x23, [x26, #336]
     8e8:	cbz	x23, 984 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x22c>
     8ec:	stp	x27, x28, [sp, #80]
     8f0:	ldp	x22, x28, [x21, #24]
     8f4:	nop
     8f8:	add	x25, x23, #0x8
     8fc:	ldr	x19, [x23, #16]
     900:	cbz	x19, 978 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x220>
     904:	mov	x20, x25
     908:	ldp	x0, x27, [x19, #32]
     90c:	cmp	x28, x27
     910:	b.cc	a5c <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x304>  // b.lo, b.ul, b.last
     914:	cbz	x27, 928 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x1d0>
     918:	mov	x2, x27
     91c:	mov	x1, x22
     920:	bl	0 <memcmp>
     924:	cbnz	w0, a70 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x318>
     928:	cmp	x28, x27
     92c:	b.eq	a74 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x31c>  // b.none
     930:	cmp	x28, x27
     934:	b.ls	a74 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x31c>  // b.plast
     938:	ldr	x19, [x19, #24]
     93c:	cbnz	x19, 908 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x1b0>
     940:	cmp	x25, x20
     944:	b.eq	978 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x220>  // b.none
     948:	ldp	x1, x19, [x20, #32]
     94c:	cmp	x28, x19
     950:	b.hi	a84 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x32c>  // b.pmore
     954:	cbz	x28, 968 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x210>
     958:	mov	x2, x28
     95c:	mov	x0, x22
     960:	bl	0 <memcmp>
     964:	cbnz	w0, a98 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x340>
     968:	cmp	x28, x19
     96c:	b.eq	a9c <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x344>  // b.none
     970:	cmp	x28, x19
     974:	b.cs	a9c <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x344>  // b.hs, b.nlast
     978:	ldr	x23, [x23, #48]
     97c:	cbnz	x23, 8f8 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x1a0>
     980:	ldp	x27, x28, [sp, #80]
     984:	ldp	x0, x2, [x26, #272]
     988:	cmp	x2, x0
     98c:	b.eq	9b4 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x25c>  // b.none
     990:	ldr	x1, [x0]
     994:	ldr	x19, [x1, #8]
     998:	cbz	x19, 9a8 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x250>
     99c:	ldr	x1, [x19, #24]
     9a0:	cmp	x21, x1
     9a4:	b.eq	7d0 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x78>  // b.none
     9a8:	add	x0, x0, #0x8
     9ac:	cmp	x2, x0
     9b0:	b.ne	990 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x238>  // b.any
     9b4:	ldr	w0, [sp, #100]
     9b8:	mov	x19, x21
     9bc:	cmp	w0, #0x1
     9c0:	b.eq	7d0 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x78>  // b.none
     9c4:	ldp	x1, x2, [x21, #24]
     9c8:	ldr	x0, [x26, #344]
     9cc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     9d0:	mov	x19, x0
     9d4:	cbnz	x0, 7d0 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x78>
     9d8:	cbz	x24, 9f8 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x2a0>
     9dc:	ldrb	w0, [x24, #125]
     9e0:	cbnz	w0, 9f8 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x2a0>
     9e4:	ldr	x0, [x26, #328]
     9e8:	cbnz	x0, 9f8 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x2a0>
     9ec:	ldr	x0, [x24]
     9f0:	cmp	x21, x0
     9f4:	b.eq	af0 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x398>  // b.none
     9f8:	ldp	x6, x5, [x21, #24]
     9fc:	add	x2, sp, #0x78
     a00:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     a04:	add	x3, x3, #0x0
     a08:	mov	w4, #0x503                 	// #1283
     a0c:	add	x0, sp, #0xa0
     a10:	mov	x21, x0
     a14:	add	x20, sp, #0xb8
     a18:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     a1c:	add	x1, x1, #0x0
     a20:	stp	x6, x5, [sp, #120]
     a24:	stp	x3, x2, [sp, #136]
     a28:	strh	w4, [sp, #152]
     a2c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     a30:	mov	x1, x21
     a34:	add	x0, sp, #0x88
     a38:	mov	x8, x20
     a3c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     a40:	ldr	x3, [sp, #104]
     a44:	mov	x2, x20
     a48:	add	x0, sp, #0x70
     a4c:	mov	x1, #0x1                   	// #1
     a50:	str	x3, [sp, #112]
     a54:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
     a58:	b	7d0 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x78>
     a5c:	cbz	x28, a74 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x31c>
     a60:	mov	x2, x28
     a64:	mov	x1, x22
     a68:	bl	0 <memcmp>
     a6c:	cbz	w0, 930 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x1d8>
     a70:	tbnz	w0, #31, 938 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x1e0>
     a74:	mov	x20, x19
     a78:	ldr	x19, [x19, #16]
     a7c:	cbnz	x19, 908 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x1b0>
     a80:	b	940 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x1e8>
     a84:	cbz	x19, a9c <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x344>
     a88:	mov	x2, x19
     a8c:	mov	x0, x22
     a90:	bl	0 <memcmp>
     a94:	cbz	w0, 970 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x218>
     a98:	tbnz	w0, #31, 978 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x220>
     a9c:	ldr	x19, [x20, #64]
     aa0:	ldp	x27, x28, [sp, #80]
     aa4:	cbz	x19, 984 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x22c>
     aa8:	mov	x0, x19
     aac:	ldp	x19, x20, [sp, #16]
     ab0:	ldp	x21, x22, [sp, #32]
     ab4:	ldp	x23, x24, [sp, #48]
     ab8:	ldp	x25, x26, [sp, #64]
     abc:	ldp	x29, x30, [sp], #208
     ac0:	ret
     ac4:	ldr	x2, [x21, #24]
     ac8:	mov	w1, #0x414e                	// #16718
     acc:	movk	w1, #0x454d, lsl #16
     ad0:	ldr	w2, [x2]
     ad4:	cmp	w2, w1
     ad8:	b.ne	8e4 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x18c>  // b.any
     adc:	adrp	x1, 0 <_ZN4llvm11StringRecTy6SharedE>
     ae0:	ldr	x1, [x1]
     ae4:	bl	0 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE>
     ae8:	mov	x19, x0
     aec:	b	7d0 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x78>
     af0:	mov	x0, x24
     af4:	bl	0 <_ZN4llvm6Record7getTypeEv>
     af8:	mov	x1, x21
     afc:	mov	x2, x0
     b00:	mov	w0, #0x0                   	// #0
     b04:	bl	0 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE>
     b08:	mov	x19, x0
     b0c:	b	7d0 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x78>
     b10:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     b14:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     b18:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     b1c:	add	x3, x3, #0x0
     b20:	add	x1, x1, #0x0
     b24:	add	x0, x0, #0x0
     b28:	mov	w2, #0x363                 	// #867
     b2c:	stp	x27, x28, [sp, #80]
     b30:	bl	0 <__assert_fail>
     b34:	nop

0000000000000b38 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b>:
     b38:	sub	sp, sp, #0x270
     b3c:	stp	x29, x30, [sp]
     b40:	mov	x29, sp
     b44:	str	x2, [sp, #96]
     b48:	cbz	x6, d8c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x254>
     b4c:	stp	x21, x22, [sp, #32]
     b50:	and	w7, w7, #0xff
     b54:	mov	x21, x5
     b58:	stp	x23, x24, [sp, #48]
     b5c:	mov	x23, x4
     b60:	stp	x25, x26, [sp, #64]
     b64:	mov	x26, x3
     b68:	stp	x27, x28, [sp, #80]
     b6c:	mov	x28, x6
     b70:	cbz	x1, d9c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x264>
     b74:	ldr	w2, [x1, #80]
     b78:	mov	w0, #0x18                  	// #24
     b7c:	ldr	x9, [x1, #72]
     b80:	umaddl	x2, w2, w0, x9
     b84:	cmp	x2, x9
     b88:	b.eq	c4c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x114>  // b.none
     b8c:	mov	x22, x9
     b90:	b	ba0 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x68>
     b94:	add	x22, x22, #0x18
     b98:	cmp	x2, x22
     b9c:	b.eq	c4c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x114>  // b.none
     ba0:	ldr	x1, [x22]
     ba4:	cmp	x26, x1
     ba8:	b.ne	b94 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x5c>  // b.any
     bac:	cbz	x21, d5c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x224>
     bb0:	ldr	x0, [x22, #16]
     bb4:	stp	x19, x20, [sp, #16]
     bb8:	str	x0, [sp, #104]
     bbc:	cbz	x0, 147c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x944>
     bc0:	ldr	x0, [sp, #104]
     bc4:	ldrb	w0, [x0, #8]
     bc8:	cmp	w0, #0x3
     bcc:	b.eq	da4 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x26c>  // b.none
     bd0:	ldr	x1, [x26]
     bd4:	add	x21, sp, #0x1a0
     bd8:	mov	x8, x21
     bdc:	mov	x0, x26
     be0:	add	x20, sp, #0x1c0
     be4:	ldr	x1, [x1, #48]
     be8:	blr	x1
     bec:	mov	x2, #0x0                   	// #0
     bf0:	mov	x1, #0x0                   	// #0
     bf4:	mov	x0, x21
     bf8:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     bfc:	mov	x4, #0x7                   	// #7
     c00:	add	x3, x3, #0x0
     c04:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
     c08:	add	x1, x20, #0x10
     c0c:	str	x1, [sp, #448]
     c10:	mov	x1, x0
     c14:	ldr	x2, [x1], #16
     c18:	cmp	x2, x1
     c1c:	b.eq	14c0 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x988>  // b.none
     c20:	str	x2, [sp, #448]
     c24:	ldr	x2, [x0, #16]
     c28:	str	x2, [sp, #464]
     c2c:	ldr	x2, [x0, #8]
     c30:	add	x22, sp, #0x1e0
     c34:	str	x2, [sp, #456]
     c38:	mov	x8, x22
     c3c:	stp	x1, xzr, [x0]
     c40:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     c44:	add	x1, x1, #0x0
     c48:	b	cc8 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x190>
     c4c:	ldr	x1, [x26]
     c50:	add	x21, sp, #0x1a0
     c54:	mov	x8, x21
     c58:	stp	x19, x20, [sp, #16]
     c5c:	mov	x0, x26
     c60:	ldr	x1, [x1, #48]
     c64:	add	x20, sp, #0x1c0
     c68:	blr	x1
     c6c:	mov	x2, #0x0                   	// #0
     c70:	mov	x1, #0x0                   	// #0
     c74:	mov	x0, x21
     c78:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     c7c:	mov	x4, #0x7                   	// #7
     c80:	add	x3, x3, #0x0
     c84:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
     c88:	add	x1, x20, #0x10
     c8c:	str	x1, [sp, #448]
     c90:	mov	x1, x0
     c94:	ldr	x2, [x1], #16
     c98:	cmp	x2, x1
     c9c:	b.eq	13a8 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x870>  // b.none
     ca0:	str	x2, [sp, #448]
     ca4:	ldr	x2, [x0, #16]
     ca8:	str	x2, [sp, #464]
     cac:	ldr	x2, [x0, #8]
     cb0:	add	x22, sp, #0x1e0
     cb4:	str	x2, [sp, #456]
     cb8:	mov	x8, x22
     cbc:	stp	x1, xzr, [x0]
     cc0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     cc4:	add	x1, x1, #0x0
     cc8:	strb	wzr, [x0, #16]
     ccc:	add	x23, sp, #0x180
     cd0:	mov	x0, x20
     cd4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     cd8:	mov	x1, x22
     cdc:	mov	x0, x23
     ce0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     ce4:	add	x22, x22, #0x10
     ce8:	ldr	x0, [sp, #96]
     cec:	mov	x2, x23
     cf0:	mov	x1, #0x1                   	// #1
     cf4:	str	x0, [sp, #352]
     cf8:	add	x0, sp, #0x160
     cfc:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
     d00:	ldr	x0, [sp, #480]
     d04:	cmp	x0, x22
     d08:	b.eq	d10 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x1d8>  // b.none
     d0c:	bl	0 <_ZdlPv>
     d10:	ldr	x0, [sp, #448]
     d14:	add	x20, x20, #0x10
     d18:	cmp	x0, x20
     d1c:	b.eq	d24 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x1ec>  // b.none
     d20:	bl	0 <_ZdlPv>
     d24:	ldr	x0, [sp, #416]
     d28:	add	x21, x21, #0x10
     d2c:	cmp	x0, x21
     d30:	b.eq	d38 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x200>  // b.none
     d34:	bl	0 <_ZdlPv>
     d38:	mov	w0, #0x1                   	// #1
     d3c:	ldp	x29, x30, [sp]
     d40:	ldp	x19, x20, [sp, #16]
     d44:	ldp	x21, x22, [sp, #32]
     d48:	ldp	x23, x24, [sp, #48]
     d4c:	ldp	x25, x26, [sp, #64]
     d50:	ldp	x27, x28, [sp, #80]
     d54:	add	sp, sp, #0x270
     d58:	ret
     d5c:	ldrb	w0, [x28, #8]
     d60:	cmp	w0, #0x13
     d64:	b.eq	f80 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x448>  // b.none
     d68:	mov	x1, x28
     d6c:	mov	x0, x22
     d70:	bl	0 <_ZN4llvm9RecordVal8setValueEPNS_4InitE>
     d74:	tst	w0, #0xff
     d78:	b.ne	fc4 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x48c>  // b.any
     d7c:	ldp	x21, x22, [sp, #32]
     d80:	ldp	x23, x24, [sp, #48]
     d84:	ldp	x25, x26, [sp, #64]
     d88:	ldp	x27, x28, [sp, #80]
     d8c:	mov	w0, #0x0                   	// #0
     d90:	ldp	x29, x30, [sp]
     d94:	add	sp, sp, #0x270
     d98:	ret
     d9c:	ldr	x1, [x0, #328]
     da0:	b	b74 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x3c>
     da4:	ldr	x1, [x28]
     da8:	mov	w0, w21
     dac:	ldr	x20, [x1, #56]
     db0:	bl	0 <_ZN4llvm9BitsRecTy3getEj>
     db4:	mov	x1, x0
     db8:	mov	x0, x28
     dbc:	blr	x20
     dc0:	mov	x25, x0
     dc4:	cbz	x0, 14ac <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x974>
     dc8:	ldr	x1, [sp, #104]
     dcc:	add	x0, sp, #0x1e0
     dd0:	str	x0, [sp, #112]
     dd4:	mov	x0, #0x1000000000          	// #68719476736
     dd8:	ldr	w24, [x1, #32]
     ddc:	add	x1, sp, #0x1f0
     de0:	str	x1, [sp, #480]
     de4:	str	x0, [sp, #488]
     de8:	mov	w28, w24
     dec:	cmp	x28, #0x10
     df0:	mov	x20, x28
     df4:	b.hi	14cc <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x994>  // b.pmore
     df8:	str	w24, [sp, #488]
     dfc:	add	x0, x1, x28, lsl #3
     e00:	cmp	x0, x1
     e04:	b.eq	e14 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x2dc>  // b.none
     e08:	str	xzr, [x1], #8
     e0c:	cmp	x0, x1
     e10:	b.ne	e08 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x2d0>  // b.any
     e14:	cbz	w21, 13b8 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x880>
     e18:	sub	w27, w21, #0x1
     e1c:	mov	x20, #0x0                   	// #0
     e20:	b	e54 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x31c>
     e24:	ldr	x2, [x25]
     e28:	mov	w1, w20
     e2c:	mov	x0, x25
     e30:	ldr	x2, [x2, #104]
     e34:	blr	x2
     e38:	str	x0, [x28, x19, lsl #3]
     e3c:	cmp	x27, x20
     e40:	b.eq	13b4 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x87c>  // b.none
     e44:	add	x20, x20, #0x1
     e48:	cmp	x21, x20
     e4c:	b.eq	1548 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xa10>  // b.none
     e50:	ldr	w28, [sp, #488]
     e54:	ldr	w24, [x23, x20, lsl #2]
     e58:	mov	w19, w24
     e5c:	cmp	x28, w24, uxtw
     e60:	b.ls	1568 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xa30>  // b.plast
     e64:	ldr	x28, [sp, #480]
     e68:	ldr	x0, [x28, x19, lsl #3]
     e6c:	cbz	x0, e24 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x2ec>
     e70:	add	x20, sp, #0xc0
     e74:	add	x21, sp, #0xe0
     e78:	mov	x0, x20
     e7c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     e80:	add	x1, x1, #0x0
     e84:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     e88:	mov	w2, #0x109                 	// #265
     e8c:	mov	x8, x21
     e90:	str	xzr, [sp, #160]
     e94:	mov	x0, x20
     e98:	add	x23, sp, #0x100
     e9c:	add	x1, sp, #0xa0
     ea0:	str	w24, [sp, #160]
     ea4:	add	x25, sp, #0x120
     ea8:	str	xzr, [sp, #168]
     eac:	add	x20, sp, #0x1c0
     eb0:	strh	w2, [sp, #176]
     eb4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     eb8:	mov	x0, x23
     ebc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     ec0:	add	x1, x1, #0x0
     ec4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     ec8:	mov	x1, x23
     ecc:	mov	x0, x21
     ed0:	mov	x8, x25
     ed4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     ed8:	ldr	x1, [x26]
     edc:	mov	x8, x20
     ee0:	mov	x0, x26
     ee4:	add	x26, sp, #0x140
     ee8:	add	x23, sp, #0x160
     eec:	add	x24, sp, #0x180
     ef0:	ldr	x1, [x1, #48]
     ef4:	add	x21, sp, #0x1a0
     ef8:	blr	x1
     efc:	mov	x1, x20
     f00:	mov	x0, x26
     f04:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     f08:	add	x20, x20, #0x10
     f0c:	mov	x8, x23
     f10:	mov	x1, x26
     f14:	mov	x0, x25
     f18:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     f1c:	mov	x0, x24
     f20:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     f24:	add	x1, x1, #0x0
     f28:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     f2c:	mov	x8, x21
     f30:	mov	x1, x24
     f34:	mov	x0, x23
     f38:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     f3c:	ldr	x3, [sp, #96]
     f40:	add	x0, sp, #0x88
     f44:	mov	x2, x21
     f48:	mov	x1, #0x1                   	// #1
     f4c:	str	x3, [sp, #136]
     f50:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
     f54:	ldr	x0, [sp, #448]
     f58:	cmp	x0, x20
     f5c:	b.eq	f64 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x42c>  // b.none
     f60:	bl	0 <_ZdlPv>
     f64:	ldr	x1, [sp, #112]
     f68:	ldr	x0, [sp, #480]
     f6c:	add	x22, x1, #0x10
     f70:	cmp	x0, x22
     f74:	b.eq	d38 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x200>  // b.none
     f78:	bl	0 <free>
     f7c:	b	d38 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x200>
     f80:	ldr	x0, [x28, #24]
     f84:	cmp	w7, #0x0
     f88:	ccmp	x0, x26, #0x0, eq  // eq = none
     f8c:	b.ne	d68 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x230>  // b.any
     f90:	stp	x19, x20, [sp, #16]
     f94:	add	x20, sp, #0x1e0
     f98:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     f9c:	mov	x0, x20
     fa0:	add	x1, x1, #0x0
     fa4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     fa8:	ldr	x0, [sp, #96]
     fac:	mov	x2, x20
     fb0:	mov	x1, #0x1                   	// #1
     fb4:	str	x0, [sp, #448]
     fb8:	add	x0, sp, #0x1c0
     fbc:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
     fc0:	b	d38 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x200>
     fc4:	add	x0, sp, #0xa0
     fc8:	add	x1, sp, #0x1e0
     fcc:	stp	x19, x20, [sp, #16]
     fd0:	stp	x1, x0, [sp, #112]
     fd4:	add	x0, sp, #0xb0
     fd8:	str	x0, [sp, #160]
     fdc:	str	xzr, [sp, #168]
     fe0:	strb	wzr, [sp, #176]
     fe4:	ldrb	w0, [x28, #8]
     fe8:	cmp	w0, #0x3
     fec:	b.eq	1098 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x560>  // b.none
     ff0:	mov	x0, x28
     ff4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     ff8:	mov	x21, x0
     ffc:	cbz	x0, 1494 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x95c>
    1000:	add	x24, sp, #0x160
    1004:	adrp	x27, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1008:	mov	x0, x24
    100c:	add	x1, x27, #0x0
    1010:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1014:	add	x20, sp, #0x1c0
    1018:	ldr	x0, [x21, #16]
    101c:	mov	x8, x20
    1020:	add	x23, sp, #0x180
    1024:	add	x21, sp, #0x1a0
    1028:	ldr	x1, [x0]
    102c:	ldr	x1, [x1, #16]
    1030:	blr	x1
    1034:	mov	x1, x20
    1038:	mov	x0, x23
    103c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1040:	mov	x1, x23
    1044:	mov	x0, x24
    1048:	mov	x8, x21
    104c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1050:	ldr	x19, [sp, #112]
    1054:	mov	x0, x21
    1058:	mov	x8, x19
    105c:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
    1060:	ldr	x0, [sp, #120]
    1064:	mov	x1, x19
    1068:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
    106c:	ldr	x0, [sp, #480]
    1070:	add	x1, x19, #0x10
    1074:	cmp	x0, x1
    1078:	b.eq	1080 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x548>  // b.none
    107c:	bl	0 <_ZdlPv>
    1080:	ldr	x0, [sp, #448]
    1084:	add	x1, x20, #0x10
    1088:	cmp	x0, x1
    108c:	b.eq	1158 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x620>  // b.none
    1090:	bl	0 <_ZdlPv>
    1094:	b	1158 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x620>
    1098:	add	x23, sp, #0x180
    109c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    10a0:	mov	x0, x23
    10a4:	add	x1, x1, #0x0
    10a8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    10ac:	add	x20, sp, #0x1c0
    10b0:	ldr	w3, [x28, #32]
    10b4:	mov	w2, #0x109                 	// #265
    10b8:	add	x21, sp, #0x1a0
    10bc:	str	xzr, [sp, #416]
    10c0:	mov	x1, x21
    10c4:	mov	x0, x23
    10c8:	mov	x8, x20
    10cc:	str	w3, [sp, #416]
    10d0:	str	xzr, [sp, #424]
    10d4:	strh	w2, [sp, #432]
    10d8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    10dc:	ldr	x19, [sp, #112]
    10e0:	mov	x0, x20
    10e4:	mov	x8, x19
    10e8:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
    10ec:	ldr	x1, [sp, #480]
    10f0:	add	x2, x19, #0x10
    10f4:	ldr	x0, [sp, #160]
    10f8:	cmp	x1, x2
    10fc:	b.eq	1508 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x9d0>  // b.none
    1100:	ldr	x2, [sp, #120]
    1104:	ldr	x3, [sp, #488]
    1108:	stp	x1, x3, [sp, #160]
    110c:	add	x2, x2, #0x10
    1110:	cmp	x0, x2
    1114:	ldr	x2, [sp, #496]
    1118:	b.eq	1480 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x948>  // b.none
    111c:	ldr	x1, [sp, #176]
    1120:	str	x2, [sp, #176]
    1124:	cbz	x0, 1484 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x94c>
    1128:	str	x0, [sp, #480]
    112c:	str	x1, [sp, #496]
    1130:	str	xzr, [sp, #488]
    1134:	add	x24, sp, #0x160
    1138:	strb	wzr, [x0]
    113c:	ldr	x1, [sp, #112]
    1140:	ldr	x0, [sp, #480]
    1144:	add	x1, x1, #0x10
    1148:	cmp	x0, x1
    114c:	b.eq	1154 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x61c>  // b.none
    1150:	bl	0 <_ZdlPv>
    1154:	adrp	x27, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1158:	ldr	x1, [x26]
    115c:	add	x25, sp, #0xc0
    1160:	mov	x8, x25
    1164:	add	x19, sp, #0xe0
    1168:	str	x19, [sp, #104]
    116c:	mov	x0, x26
    1170:	ldr	x1, [x1, #48]
    1174:	blr	x1
    1178:	mov	x2, #0x0                   	// #0
    117c:	mov	x1, #0x0                   	// #0
    1180:	mov	x0, x25
    1184:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1188:	mov	x4, #0x7                   	// #7
    118c:	add	x3, x3, #0x0
    1190:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    1194:	add	x1, x19, #0x10
    1198:	str	x1, [sp, #224]
    119c:	mov	x1, x0
    11a0:	ldr	x2, [x1], #16
    11a4:	cmp	x2, x1
    11a8:	b.eq	14f0 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x9b8>  // b.none
    11ac:	str	x2, [sp, #224]
    11b0:	ldr	x2, [x0, #16]
    11b4:	str	x2, [sp, #240]
    11b8:	ldr	x2, [x0, #8]
    11bc:	str	x2, [sp, #232]
    11c0:	stp	x1, xzr, [x0]
    11c4:	add	x26, sp, #0x100
    11c8:	add	x1, x27, #0x0
    11cc:	strb	wzr, [x0, #16]
    11d0:	mov	x8, x26
    11d4:	ldr	x0, [sp, #104]
    11d8:	add	x27, sp, #0x120
    11dc:	add	x19, sp, #0x140
    11e0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    11e4:	ldr	x0, [x22, #8]
    11e8:	mov	x8, x27
    11ec:	and	x0, x0, #0xfffffffffffffff8
    11f0:	ldr	x1, [x0]
    11f4:	ldr	x1, [x1, #16]
    11f8:	blr	x1
    11fc:	mov	x1, x27
    1200:	mov	x0, x26
    1204:	mov	x8, x19
    1208:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    120c:	mov	x0, x19
    1210:	mov	x8, x24
    1214:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1218:	add	x1, x1, #0x0
    121c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1220:	ldr	x1, [x28]
    1224:	mov	x0, x28
    1228:	mov	x8, x23
    122c:	ldr	x1, [x1, #40]
    1230:	blr	x1
    1234:	mov	x8, x21
    1238:	mov	x1, x23
    123c:	mov	x0, x24
    1240:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1244:	ldp	x1, x2, [sp, #160]
    1248:	mov	x0, x21
    124c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    1250:	mov	x1, x0
    1254:	add	x2, x20, #0x10
    1258:	str	x2, [sp, #448]
    125c:	ldr	x2, [x1], #16
    1260:	cmp	x2, x1
    1264:	b.eq	14fc <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x9c4>  // b.none
    1268:	str	x2, [sp, #448]
    126c:	ldr	x2, [x0, #16]
    1270:	str	x2, [sp, #464]
    1274:	ldr	x28, [sp, #112]
    1278:	add	x22, sp, #0x88
    127c:	ldr	x2, [x0, #8]
    1280:	str	x2, [sp, #456]
    1284:	mov	x8, x28
    1288:	stp	x1, xzr, [x0]
    128c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1290:	strb	wzr, [x0, #16]
    1294:	add	x1, x1, #0x0
    1298:	mov	x0, x20
    129c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    12a0:	mov	x0, x22
    12a4:	mov	x1, x28
    12a8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    12ac:	ldr	x0, [sp, #96]
    12b0:	mov	x2, x22
    12b4:	mov	x1, #0x1                   	// #1
    12b8:	str	x0, [sp, #128]
    12bc:	add	x0, sp, #0x80
    12c0:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    12c4:	ldr	x0, [sp, #480]
    12c8:	add	x22, x28, #0x10
    12cc:	cmp	x0, x22
    12d0:	b.eq	12d8 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x7a0>  // b.none
    12d4:	bl	0 <_ZdlPv>
    12d8:	ldr	x0, [sp, #448]
    12dc:	add	x20, x20, #0x10
    12e0:	cmp	x0, x20
    12e4:	b.eq	12ec <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x7b4>  // b.none
    12e8:	bl	0 <_ZdlPv>
    12ec:	ldr	x0, [sp, #416]
    12f0:	add	x21, x21, #0x10
    12f4:	cmp	x0, x21
    12f8:	b.eq	1300 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x7c8>  // b.none
    12fc:	bl	0 <_ZdlPv>
    1300:	ldr	x0, [sp, #384]
    1304:	add	x23, x23, #0x10
    1308:	cmp	x0, x23
    130c:	b.eq	1314 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x7dc>  // b.none
    1310:	bl	0 <_ZdlPv>
    1314:	ldr	x0, [sp, #352]
    1318:	add	x24, x24, #0x10
    131c:	cmp	x0, x24
    1320:	b.eq	1328 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x7f0>  // b.none
    1324:	bl	0 <_ZdlPv>
    1328:	ldr	x0, [sp, #320]
    132c:	add	x28, x19, #0x10
    1330:	cmp	x0, x28
    1334:	b.eq	133c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x804>  // b.none
    1338:	bl	0 <_ZdlPv>
    133c:	ldr	x0, [sp, #288]
    1340:	add	x27, x27, #0x10
    1344:	cmp	x0, x27
    1348:	b.eq	1350 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x818>  // b.none
    134c:	bl	0 <_ZdlPv>
    1350:	ldr	x0, [sp, #256]
    1354:	add	x26, x26, #0x10
    1358:	cmp	x0, x26
    135c:	b.eq	1364 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x82c>  // b.none
    1360:	bl	0 <_ZdlPv>
    1364:	ldr	x1, [sp, #104]
    1368:	ldr	x0, [sp, #224]
    136c:	add	x1, x1, #0x10
    1370:	cmp	x0, x1
    1374:	b.eq	137c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x844>  // b.none
    1378:	bl	0 <_ZdlPv>
    137c:	ldr	x0, [sp, #192]
    1380:	add	x25, x25, #0x10
    1384:	cmp	x0, x25
    1388:	b.eq	1390 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x858>  // b.none
    138c:	bl	0 <_ZdlPv>
    1390:	ldr	x1, [sp, #120]
    1394:	ldr	x0, [sp, #160]
    1398:	add	x1, x1, #0x10
    139c:	cmp	x0, x1
    13a0:	b.ne	d34 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x1fc>  // b.any
    13a4:	b	d38 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x200>
    13a8:	ldp	x2, x3, [x0, #16]
    13ac:	stp	x2, x3, [sp, #464]
    13b0:	b	cac <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x174>
    13b4:	ldr	w20, [sp, #488]
    13b8:	ldr	x0, [sp, #104]
    13bc:	add	x25, x0, #0x28
    13c0:	ldr	w3, [x0, #32]
    13c4:	mov	x0, #0x0                   	// #0
    13c8:	cbnz	w3, 1444 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x90c>
    13cc:	ldr	x0, [sp, #480]
    13d0:	mov	x1, x20
    13d4:	bl	0 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
    13d8:	mov	x28, x0
    13dc:	ldr	x1, [sp, #112]
    13e0:	ldr	x2, [sp, #480]
    13e4:	add	x1, x1, #0x10
    13e8:	cmp	x2, x1
    13ec:	b.eq	13f8 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x8c0>  // b.none
    13f0:	mov	x0, x2
    13f4:	bl	0 <free>
    13f8:	mov	x1, x28
    13fc:	mov	x0, x22
    1400:	bl	0 <_ZN4llvm9RecordVal8setValueEPNS_4InitE>
    1404:	tst	w0, #0xff
    1408:	b.ne	1460 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x928>  // b.any
    140c:	mov	w0, #0x0                   	// #0
    1410:	ldp	x19, x20, [sp, #16]
    1414:	ldp	x21, x22, [sp, #32]
    1418:	ldp	x23, x24, [sp, #48]
    141c:	ldp	x25, x26, [sp, #64]
    1420:	ldp	x27, x28, [sp, #80]
    1424:	b	d90 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x258>
    1428:	cmp	w3, w0
    142c:	b.ls	15a8 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xa70>  // b.plast
    1430:	ldr	x2, [x25, x0, lsl #3]
    1434:	str	x2, [x1, x4]
    1438:	add	x0, x0, #0x1
    143c:	cmp	w3, w0
    1440:	b.eq	13cc <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x894>  // b.none
    1444:	cmp	x20, x0
    1448:	b.eq	1568 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xa30>  // b.none
    144c:	ldr	x1, [sp, #480]
    1450:	lsl	x4, x0, #3
    1454:	ldr	x2, [x1, x0, lsl #3]
    1458:	cbnz	x2, 1438 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x900>
    145c:	b	1428 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x8f0>
    1460:	add	x0, sp, #0xa0
    1464:	str	x0, [sp, #120]
    1468:	add	x0, sp, #0xb0
    146c:	str	x0, [sp, #160]
    1470:	str	xzr, [sp, #168]
    1474:	strb	wzr, [sp, #176]
    1478:	cbnz	x28, fe4 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x4ac>
    147c:	bl	c8 <_ZN4llvm3isaINS_8BitsInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    1480:	str	x2, [sp, #176]
    1484:	ldr	x0, [sp, #112]
    1488:	add	x0, x0, #0x10
    148c:	str	x0, [sp, #480]
    1490:	b	1130 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x5f8>
    1494:	add	x20, sp, #0x1c0
    1498:	add	x23, sp, #0x180
    149c:	add	x24, sp, #0x160
    14a0:	add	x21, sp, #0x1a0
    14a4:	adrp	x27, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    14a8:	b	1158 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x620>
    14ac:	add	x20, sp, #0x1e0
    14b0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    14b4:	mov	x0, x20
    14b8:	add	x1, x1, #0x0
    14bc:	b	fa4 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x46c>
    14c0:	ldp	x2, x3, [x0, #16]
    14c4:	stp	x2, x3, [sp, #464]
    14c8:	b	c2c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xf4>
    14cc:	ldr	x0, [sp, #112]
    14d0:	mov	x2, x28
    14d4:	mov	x3, #0x8                   	// #8
    14d8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    14dc:	ldr	w0, [sp, #492]
    14e0:	cmp	x28, x0
    14e4:	b.hi	1588 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xa50>  // b.pmore
    14e8:	ldr	x1, [sp, #480]
    14ec:	b	df8 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x2c0>
    14f0:	ldp	x2, x3, [x0, #16]
    14f4:	stp	x2, x3, [sp, #240]
    14f8:	b	11b8 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x680>
    14fc:	ldp	x2, x3, [x0, #16]
    1500:	stp	x2, x3, [sp, #464]
    1504:	b	1274 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x73c>
    1508:	ldr	x2, [sp, #488]
    150c:	cbz	x2, 1524 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x9ec>
    1510:	cmp	x2, #0x1
    1514:	b.eq	1534 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x9fc>  // b.none
    1518:	bl	0 <memcpy>
    151c:	ldr	x0, [sp, #160]
    1520:	ldr	x2, [sp, #488]
    1524:	str	x2, [sp, #168]
    1528:	strb	wzr, [x0, x2]
    152c:	ldr	x0, [sp, #480]
    1530:	b	1130 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x5f8>
    1534:	ldrb	w1, [sp, #496]
    1538:	strb	w1, [x0]
    153c:	ldr	x0, [sp, #160]
    1540:	ldr	x2, [sp, #488]
    1544:	b	1524 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x9ec>
    1548:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    154c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1550:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1554:	add	x3, x3, #0x0
    1558:	add	x1, x1, #0x0
    155c:	add	x0, x0, #0x0
    1560:	mov	w2, #0xfa                  	// #250
    1564:	bl	0 <__assert_fail>
    1568:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    156c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1570:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1574:	add	x3, x3, #0x0
    1578:	add	x1, x1, #0x0
    157c:	add	x0, x0, #0x0
    1580:	mov	w2, #0x95                  	// #149
    1584:	bl	0 <__assert_fail>
    1588:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    158c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1590:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1594:	add	x3, x3, #0x0
    1598:	add	x1, x1, #0x0
    159c:	add	x0, x0, #0x0
    15a0:	mov	w2, #0x43                  	// #67
    15a4:	bl	0 <__assert_fail>
    15a8:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    15ac:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    15b0:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    15b4:	add	x3, x3, #0x0
    15b8:	add	x1, x1, #0x0
    15bc:	add	x0, x0, #0x0
    15c0:	mov	w2, #0x22e                 	// #558
    15c4:	bl	0 <__assert_fail>

00000000000015c8 <_ZN4llvm8TGParser13ApplyLetStackEPNS_6RecordE>:
    15c8:	stp	x29, x30, [sp, #-80]!
    15cc:	mov	x29, sp
    15d0:	stp	x21, x22, [sp, #32]
    15d4:	stp	x23, x24, [sp, #48]
    15d8:	ldp	x22, x23, [x0, #200]
    15dc:	cmp	x22, x23
    15e0:	b.eq	1674 <_ZN4llvm8TGParser13ApplyLetStackEPNS_6RecordE+0xac>  // b.none
    15e4:	mov	x21, x0
    15e8:	str	x25, [sp, #64]
    15ec:	mov	x25, x1
    15f0:	mov	w24, #0x30                  	// #48
    15f4:	stp	x19, x20, [sp, #16]
    15f8:	ldr	w20, [x22, #8]
    15fc:	ldr	x19, [x22]
    1600:	umaddl	x20, w20, w24, x19
    1604:	cmp	x19, x20
    1608:	b.ne	1618 <_ZN4llvm8TGParser13ApplyLetStackEPNS_6RecordE+0x50>  // b.any
    160c:	b	1660 <_ZN4llvm8TGParser13ApplyLetStackEPNS_6RecordE+0x98>
    1610:	cmp	x20, x19
    1614:	b.eq	1660 <_ZN4llvm8TGParser13ApplyLetStackEPNS_6RecordE+0x98>  // b.none
    1618:	ldp	x3, x4, [x19]
    161c:	mov	x1, x25
    1620:	ldp	x6, x2, [x19, #32]
    1624:	mov	x0, x21
    1628:	ldr	x5, [x19, #16]
    162c:	mov	w7, #0x0                   	// #0
    1630:	add	x19, x19, #0x30
    1634:	sub	x5, x5, x4
    1638:	asr	x5, x5, #2
    163c:	bl	b38 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b>
    1640:	ands	w0, w0, #0xff
    1644:	b.eq	1610 <_ZN4llvm8TGParser13ApplyLetStackEPNS_6RecordE+0x48>  // b.none
    1648:	ldp	x19, x20, [sp, #16]
    164c:	ldp	x21, x22, [sp, #32]
    1650:	ldp	x23, x24, [sp, #48]
    1654:	ldr	x25, [sp, #64]
    1658:	ldp	x29, x30, [sp], #80
    165c:	ret
    1660:	add	x22, x22, #0xd0
    1664:	cmp	x23, x22
    1668:	b.ne	15f8 <_ZN4llvm8TGParser13ApplyLetStackEPNS_6RecordE+0x30>  // b.any
    166c:	ldp	x19, x20, [sp, #16]
    1670:	ldr	x25, [sp, #64]
    1674:	mov	w0, #0x0                   	// #0
    1678:	ldp	x21, x22, [sp, #32]
    167c:	ldp	x23, x24, [sp, #48]
    1680:	ldp	x29, x30, [sp], #80
    1684:	ret

0000000000001688 <_ZN4llvm8TGParser13ApplyLetStackERNS_12RecordsEntryE>:
    1688:	mov	x2, x1
    168c:	ldr	x1, [x1]
    1690:	cbz	x1, 1698 <_ZN4llvm8TGParser13ApplyLetStackERNS_12RecordsEntryE+0x10>
    1694:	b	15c8 <_ZN4llvm8TGParser13ApplyLetStackEPNS_6RecordE>
    1698:	stp	x29, x30, [sp, #-48]!
    169c:	mov	x29, sp
    16a0:	stp	x19, x20, [sp, #16]
    16a4:	mov	x20, x0
    16a8:	ldr	x0, [x2, #8]
    16ac:	ldr	x19, [x0, #24]
    16b0:	str	x21, [sp, #32]
    16b4:	ldr	x21, [x0, #32]
    16b8:	cmp	x19, x21
    16bc:	b.eq	16e0 <_ZN4llvm8TGParser13ApplyLetStackERNS_12RecordsEntryE+0x58>  // b.none
    16c0:	mov	x1, x19
    16c4:	mov	x0, x20
    16c8:	add	x19, x19, #0x10
    16cc:	bl	1688 <_ZN4llvm8TGParser13ApplyLetStackERNS_12RecordsEntryE>
    16d0:	ands	w0, w0, #0xff
    16d4:	b.ne	16e4 <_ZN4llvm8TGParser13ApplyLetStackERNS_12RecordsEntryE+0x5c>  // b.any
    16d8:	cmp	x21, x19
    16dc:	b.ne	16c0 <_ZN4llvm8TGParser13ApplyLetStackERNS_12RecordsEntryE+0x38>  // b.any
    16e0:	mov	w0, #0x0                   	// #0
    16e4:	ldp	x19, x20, [sp, #16]
    16e8:	ldr	x21, [sp, #32]
    16ec:	ldp	x29, x30, [sp], #48
    16f0:	ret
    16f4:	nop

00000000000016f8 <_ZNKSt14default_deleteIN4llvm15TGLocalVarScopeEEclEPS1_.isra.0.part.0>:
    16f8:	stp	x29, x30, [sp, #-32]!
    16fc:	mov	x29, sp
    1700:	str	x19, [sp, #16]
    1704:	mov	x19, x0
    1708:	ldr	x0, [x0, #48]
    170c:	cbz	x0, 1714 <_ZNKSt14default_deleteIN4llvm15TGLocalVarScopeEEclEPS1_.isra.0.part.0+0x1c>
    1710:	bl	16f8 <_ZNKSt14default_deleteIN4llvm15TGLocalVarScopeEEclEPS1_.isra.0.part.0>
    1714:	ldr	x1, [x19, #16]
    1718:	mov	x0, x19
    171c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1720:	mov	x0, x19
    1724:	mov	x1, #0x38                  	// #56
    1728:	ldr	x19, [sp, #16]
    172c:	ldp	x29, x30, [sp], #32
    1730:	b	0 <_ZdlPvm>
    1734:	nop

0000000000001738 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>:
    1738:	sub	sp, sp, #0x230
    173c:	stp	x29, x30, [sp]
    1740:	mov	x29, sp
    1744:	stp	x21, x22, [sp, #32]
    1748:	str	x0, [sp, #104]
    174c:	ldr	x21, [x0, #344]
    1750:	stp	x19, x20, [sp, #16]
    1754:	mov	x19, x1
    1758:	ldr	x0, [x1]
    175c:	stp	x23, x24, [sp, #48]
    1760:	add	x20, sp, #0x210
    1764:	stp	x25, x26, [sp, #64]
    1768:	mov	x8, x20
    176c:	add	x25, x21, #0x38
    1770:	ldr	x0, [x0]
    1774:	stp	x27, x28, [sp, #80]
    1778:	ldr	x1, [x0]
    177c:	ldr	x1, [x1, #48]
    1780:	blr	x1
    1784:	ldr	x21, [x21, #64]
    1788:	ldr	x27, [sp, #528]
    178c:	ldr	x26, [sp, #536]
    1790:	cbz	x21, 1808 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xd0>
    1794:	mov	x24, x25
    1798:	ldp	x0, x23, [x21, #32]
    179c:	cmp	x26, x23
    17a0:	b.cc	1824 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xec>  // b.lo, b.ul, b.last
    17a4:	cbz	x23, 17b8 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x80>
    17a8:	mov	x2, x23
    17ac:	mov	x1, x27
    17b0:	bl	0 <memcmp>
    17b4:	cbnz	w0, 1838 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x100>
    17b8:	cmp	x26, x23
    17bc:	b.eq	183c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x104>  // b.none
    17c0:	cmp	x26, x23
    17c4:	b.ls	183c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x104>  // b.plast
    17c8:	ldr	x21, [x21, #24]
    17cc:	cbnz	x21, 1798 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x60>
    17d0:	cmp	x25, x24
    17d4:	b.eq	1808 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xd0>  // b.none
    17d8:	ldp	x1, x21, [x24, #32]
    17dc:	cmp	x26, x21
    17e0:	b.hi	184c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x114>  // b.pmore
    17e4:	cbz	x26, 17f8 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xc0>
    17e8:	mov	x2, x26
    17ec:	mov	x0, x27
    17f0:	bl	0 <memcmp>
    17f4:	cbnz	w0, 1860 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x128>
    17f8:	cmp	x26, x21
    17fc:	b.eq	1864 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x12c>  // b.none
    1800:	cmp	x26, x21
    1804:	b.cs	1864 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x12c>  // b.hs, b.nlast
    1808:	add	x0, x20, #0x10
    180c:	cmp	x27, x0
    1810:	b.eq	1968 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x230>  // b.none
    1814:	mov	x0, x27
    1818:	bl	0 <_ZdlPv>
    181c:	ldr	x21, [x19]
    1820:	b	196c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x234>
    1824:	cbz	x26, 183c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x104>
    1828:	mov	x2, x26
    182c:	mov	x1, x27
    1830:	bl	0 <memcmp>
    1834:	cbz	w0, 17c0 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x88>
    1838:	tbnz	w0, #31, 17c8 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x90>
    183c:	mov	x24, x21
    1840:	ldr	x21, [x21, #16]
    1844:	cbnz	x21, 1798 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x60>
    1848:	b	17d0 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x98>
    184c:	cbz	x21, 1864 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x12c>
    1850:	mov	x2, x21
    1854:	mov	x0, x27
    1858:	bl	0 <memcmp>
    185c:	cbz	w0, 1800 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xc8>
    1860:	tbnz	w0, #31, 1808 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xd0>
    1864:	add	x0, x20, #0x10
    1868:	cmp	x27, x0
    186c:	ldr	x23, [x24, #64]
    1870:	b.eq	187c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x144>  // b.none
    1874:	mov	x0, x27
    1878:	bl	0 <_ZdlPv>
    187c:	ldr	x21, [x19]
    1880:	cbz	x23, 196c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x234>
    1884:	ldrb	w0, [x21, #124]
    1888:	cbnz	w0, 1950 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x218>
    188c:	ldp	x0, x25, [x21]
    1890:	add	x19, sp, #0x1f0
    1894:	ldr	w24, [x21, #16]
    1898:	mov	x8, x19
    189c:	add	x22, sp, #0x1d0
    18a0:	ldr	x1, [x0]
    18a4:	ldr	x1, [x1, #48]
    18a8:	blr	x1
    18ac:	mov	x8, x20
    18b0:	mov	x1, x19
    18b4:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    18b8:	add	x0, x0, #0x0
    18bc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    18c0:	mov	x0, x22
    18c4:	mov	x1, x20
    18c8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    18cc:	mov	x0, x25
    18d0:	mov	x1, x24
    18d4:	mov	x2, x22
    18d8:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    18dc:	ldr	x0, [sp, #528]
    18e0:	add	x1, x20, #0x10
    18e4:	cmp	x0, x1
    18e8:	b.eq	18f0 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x1b8>  // b.none
    18ec:	bl	0 <_ZdlPv>
    18f0:	ldr	x0, [sp, #496]
    18f4:	add	x19, x19, #0x10
    18f8:	cmp	x0, x19
    18fc:	b.eq	1904 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x1cc>  // b.none
    1900:	bl	0 <_ZdlPv>
    1904:	ldr	x21, [x23, #8]
    1908:	mov	x0, x20
    190c:	ldr	w19, [x23, #16]
    1910:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1914:	add	x1, x1, #0x0
    1918:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    191c:	mov	x0, x21
    1920:	mov	x2, x20
    1924:	mov	x1, x19
    1928:	bl	0 <_ZN4llvm9PrintNoteENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    192c:	mov	w0, #0x1                   	// #1
    1930:	ldp	x29, x30, [sp]
    1934:	ldp	x19, x20, [sp, #16]
    1938:	ldp	x21, x22, [sp, #32]
    193c:	ldp	x23, x24, [sp, #48]
    1940:	ldp	x25, x26, [sp, #64]
    1944:	ldp	x27, x28, [sp, #80]
    1948:	add	sp, sp, #0x230
    194c:	ret
    1950:	ldr	x0, [sp, #104]
    1954:	ldr	x0, [x0, #344]
    1958:	bl	0 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv>
    195c:	mov	x1, x0
    1960:	mov	x0, x21
    1964:	bl	0 <_ZN4llvm6Record7setNameEPNS_4InitE>
    1968:	ldr	x21, [x19]
    196c:	mov	x0, x21
    1970:	bl	0 <_ZN4llvm6Record17resolveReferencesEv>
    1974:	ldr	x28, [x19]
    1978:	mov	w0, #0x18                  	// #24
    197c:	ldr	w21, [x28, #80]
    1980:	ldr	x3, [x28, #72]
    1984:	umaddl	x21, w21, w0, x3
    1988:	cmp	x3, x21
    198c:	b.eq	1b94 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x45c>  // b.none
    1990:	add	x0, sp, #0x1f0
    1994:	add	x1, sp, #0x1d0
    1998:	stp	x0, x1, [sp, #160]
    199c:	add	x0, sp, #0x200
    19a0:	mov	x25, x3
    19a4:	str	x0, [sp, #184]
    19a8:	add	x0, sp, #0x1e0
    19ac:	str	x0, [sp, #176]
    19b0:	add	x0, sp, #0x128
    19b4:	str	x0, [sp, #152]
    19b8:	b	19c8 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x290>
    19bc:	add	x25, x25, #0x18
    19c0:	cmp	x21, x25
    19c4:	b.eq	1b90 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x458>  // b.none
    19c8:	ldr	x0, [x25, #8]
    19cc:	tst	w0, #0x4
    19d0:	b.ne	19bc <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x284>  // b.any
    19d4:	ldr	x27, [x25, #16]
    19d8:	cbz	x27, 19bc <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x284>
    19dc:	ldrb	w0, [x27, #8]
    19e0:	cmp	w0, #0x3
    19e4:	b.eq	1c54 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x51c>  // b.none
    19e8:	ldr	x1, [x27]
    19ec:	mov	x0, x27
    19f0:	ldr	x1, [x1, #32]
    19f4:	blr	x1
    19f8:	tst	w0, #0xff
    19fc:	b.ne	19bc <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x284>  // b.any
    1a00:	ldr	x0, [x25]
    1a04:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1a08:	add	x1, x1, #0x0
    1a0c:	str	x1, [sp, #320]
    1a10:	ldr	w6, [x28, #16]
    1a14:	mov	w9, #0x103                 	// #259
    1a18:	ldr	x1, [x0]
    1a1c:	str	w9, [sp, #124]
    1a20:	ldr	x7, [x28, #8]
    1a24:	stp	x7, x6, [sp, #136]
    1a28:	mov	x8, x20
    1a2c:	ldr	x1, [x1, #48]
    1a30:	str	xzr, [sp, #328]
    1a34:	strh	w9, [sp, #336]
    1a38:	add	x27, sp, #0x158
    1a3c:	mov	w23, #0x104                 	// #260
    1a40:	add	x24, sp, #0x170
    1a44:	blr	x1
    1a48:	stp	x20, xzr, [sp, #296]
    1a4c:	mov	x8, x27
    1a50:	ldr	x1, [sp, #152]
    1a54:	add	x0, sp, #0x140
    1a58:	strh	w23, [sp, #312]
    1a5c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1a60:	ldr	w9, [sp, #124]
    1a64:	adrp	x2, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1a68:	add	x2, x2, #0x0
    1a6c:	mov	x4, x24
    1a70:	stp	x2, xzr, [sp, #272]
    1a74:	add	x2, sp, #0x188
    1a78:	mov	x0, x27
    1a7c:	mov	x8, x24
    1a80:	add	x1, sp, #0x110
    1a84:	str	x2, [sp, #112]
    1a88:	add	x27, sp, #0x1a0
    1a8c:	str	w9, [sp, #124]
    1a90:	add	x24, sp, #0x1b8
    1a94:	str	x4, [sp, #128]
    1a98:	strh	w9, [sp, #288]
    1a9c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1aa0:	ldr	x0, [x28]
    1aa4:	ldr	x22, [sp, #160]
    1aa8:	ldr	x1, [x0]
    1aac:	mov	x8, x22
    1ab0:	ldr	x1, [x1, #48]
    1ab4:	blr	x1
    1ab8:	stp	x22, xzr, [sp, #248]
    1abc:	add	x1, sp, #0xf8
    1ac0:	ldr	x2, [sp, #112]
    1ac4:	strh	w23, [sp, #264]
    1ac8:	ldr	x4, [sp, #128]
    1acc:	mov	x8, x2
    1ad0:	mov	x0, x4
    1ad4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1ad8:	ldr	w9, [sp, #124]
    1adc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1ae0:	ldr	x8, [sp, #112]
    1ae4:	add	x1, x1, #0x0
    1ae8:	stp	x1, xzr, [sp, #224]
    1aec:	add	x1, sp, #0xe0
    1af0:	mov	x0, x8
    1af4:	mov	x8, x27
    1af8:	strh	w9, [sp, #240]
    1afc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1b00:	ldr	x0, [x25, #16]
    1b04:	ldr	x22, [sp, #168]
    1b08:	ldr	x1, [x0]
    1b0c:	mov	x8, x22
    1b10:	ldr	x1, [x1, #40]
    1b14:	blr	x1
    1b18:	stp	x22, xzr, [sp, #200]
    1b1c:	mov	x8, x24
    1b20:	mov	x0, x27
    1b24:	add	x1, sp, #0xc8
    1b28:	strh	w23, [sp, #216]
    1b2c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1b30:	ldp	x7, x6, [sp, #136]
    1b34:	mov	x2, x24
    1b38:	mov	x0, x7
    1b3c:	mov	x1, x6
    1b40:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    1b44:	ldr	x1, [sp, #176]
    1b48:	ldr	x0, [sp, #464]
    1b4c:	cmp	x0, x1
    1b50:	b.eq	1b58 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x420>  // b.none
    1b54:	bl	0 <_ZdlPv>
    1b58:	ldr	x1, [sp, #184]
    1b5c:	ldr	x0, [sp, #496]
    1b60:	cmp	x0, x1
    1b64:	b.eq	1b6c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x434>  // b.none
    1b68:	bl	0 <_ZdlPv>
    1b6c:	ldr	x0, [sp, #528]
    1b70:	add	x1, x20, #0x10
    1b74:	cmp	x0, x1
    1b78:	b.eq	19bc <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x284>  // b.none
    1b7c:	add	x25, x25, #0x18
    1b80:	bl	0 <_ZdlPv>
    1b84:	cmp	x21, x25
    1b88:	b.ne	19c8 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x290>  // b.any
    1b8c:	nop
    1b90:	ldr	x28, [x19]
    1b94:	ldr	x2, [x28]
    1b98:	cbz	x2, 1fec <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x8b4>
    1b9c:	ldrb	w0, [x2, #8]
    1ba0:	cmp	w0, #0x12
    1ba4:	b.ne	1d0c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x5d4>  // b.any
    1ba8:	ldr	w0, [x28, #64]
    1bac:	cbnz	w0, 1ff0 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x8b8>
    1bb0:	ldr	x0, [sp, #104]
    1bb4:	ldr	x25, [x0, #296]
    1bb8:	ldr	w24, [x0, #304]
    1bbc:	add	x24, x25, x24, lsl #3
    1bc0:	cmp	x25, x24
    1bc4:	b.ne	1c00 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x4c8>  // b.any
    1bc8:	b	1f6c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x834>
    1bcc:	ldr	x1, [x21, #16]
    1bd0:	str	x23, [x1, w0, uxtw #3]
    1bd4:	ldp	w0, w2, [x21, #24]
    1bd8:	mov	w1, w0
    1bdc:	add	x1, x1, #0x1
    1be0:	cmp	x1, x2
    1be4:	b.hi	1fcc <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x894>  // b.pmore
    1be8:	add	w0, w0, #0x1
    1bec:	add	x25, x25, #0x8
    1bf0:	ldr	x28, [x19]
    1bf4:	str	w0, [x21, #24]
    1bf8:	cmp	x24, x25
    1bfc:	b.eq	1ea0 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x768>  // b.none
    1c00:	mov	x0, x28
    1c04:	ldr	x21, [x25]
    1c08:	bl	0 <_ZN4llvm6Record10getDefInitEv>
    1c0c:	mov	x23, x0
    1c10:	ldr	x0, [x0, #16]
    1c14:	ldr	x1, [x21, #8]
    1c18:	ldr	x2, [x0]
    1c1c:	ldr	x2, [x2, #32]
    1c20:	blr	x2
    1c24:	tst	w0, #0xff
    1c28:	b.eq	1dd4 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x69c>  // b.none
    1c2c:	ldp	w0, w1, [x21, #24]
    1c30:	cmp	w0, w1
    1c34:	b.cc	1bcc <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x494>  // b.lo, b.ul, b.last
    1c38:	add	x0, x21, #0x10
    1c3c:	add	x1, x21, #0x20
    1c40:	mov	x3, #0x8                   	// #8
    1c44:	mov	x2, #0x0                   	// #0
    1c48:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1c4c:	ldr	w0, [x21, #24]
    1c50:	b	1bcc <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x494>
    1c54:	ldr	w23, [x27, #32]
    1c58:	cbz	w23, 19bc <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x284>
    1c5c:	mov	w0, w23
    1c60:	add	x24, x27, #0x28
    1c64:	mov	x26, #0x0                   	// #0
    1c68:	b	1c9c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x564>
    1c6c:	cmp	w0, #0x13
    1c70:	b.eq	1c8c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x554>  // b.none
    1c74:	ldr	x1, [x22]
    1c78:	mov	x0, x22
    1c7c:	ldr	x1, [x1, #32]
    1c80:	blr	x1
    1c84:	tst	w0, #0xff
    1c88:	b.eq	1a00 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x2c8>  // b.none
    1c8c:	add	x26, x26, #0x1
    1c90:	cmp	w23, w26
    1c94:	b.eq	19bc <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x284>  // b.none
    1c98:	ldr	w0, [x27, #32]
    1c9c:	cmp	w0, w26
    1ca0:	b.ls	1f9c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x864>  // b.plast
    1ca4:	ldr	x22, [x24, x26, lsl #3]
    1ca8:	cbz	x22, 1f7c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x844>
    1cac:	ldrb	w0, [x22, #8]
    1cb0:	cmp	w0, #0x15
    1cb4:	b.ne	1c6c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x534>  // b.any
    1cb8:	ldr	x0, [x22, #24]
    1cbc:	cbz	x0, 1fbc <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x884>
    1cc0:	ldrb	w1, [x0, #8]
    1cc4:	cmp	w1, #0x13
    1cc8:	b.ne	1c74 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x53c>  // b.any
    1ccc:	bl	0 <_ZNK4llvm7VarInit7getNameEv>
    1cd0:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    1cd4:	ldr	w7, [x28, #80]
    1cd8:	mov	w2, #0x18                  	// #24
    1cdc:	ldr	x1, [x28, #72]
    1ce0:	umaddl	x7, w7, w2, x1
    1ce4:	cmp	x1, x7
    1ce8:	b.ne	1cfc <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x5c4>  // b.any
    1cec:	b	1c74 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x53c>
    1cf0:	add	x1, x1, #0x18
    1cf4:	cmp	x7, x1
    1cf8:	b.eq	1c74 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x53c>  // b.none
    1cfc:	ldr	x8, [x1]
    1d00:	cmp	x0, x8
    1d04:	b.ne	1cf0 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x5b8>  // b.any
    1d08:	b	1c8c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x554>
    1d0c:	add	x23, sp, #0x188
    1d10:	ldr	w25, [x28, #16]
    1d14:	mov	x0, x23
    1d18:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1d1c:	add	x1, x1, #0x0
    1d20:	add	x24, sp, #0x1a0
    1d24:	ldr	x26, [x28, #8]
    1d28:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1d2c:	ldr	x0, [x19]
    1d30:	mov	x8, x20
    1d34:	add	x21, sp, #0x1b8
    1d38:	add	x22, sp, #0x1d0
    1d3c:	add	x19, sp, #0x1f0
    1d40:	ldr	x0, [x0]
    1d44:	ldr	x1, [x0]
    1d48:	ldr	x1, [x1, #40]
    1d4c:	blr	x1
    1d50:	mov	x1, x20
    1d54:	mov	x0, x24
    1d58:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1d5c:	add	x20, x20, #0x10
    1d60:	mov	x8, x21
    1d64:	mov	x1, x24
    1d68:	mov	x0, x23
    1d6c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1d70:	mov	x0, x22
    1d74:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1d78:	add	x1, x1, #0x0
    1d7c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1d80:	mov	x8, x19
    1d84:	mov	x1, x22
    1d88:	mov	x0, x21
    1d8c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1d90:	mov	x0, x26
    1d94:	mov	x2, x19
    1d98:	mov	x1, x25
    1d9c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    1da0:	ldr	x0, [sp, #528]
    1da4:	cmp	x0, x20
    1da8:	b.eq	1db0 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x678>  // b.none
    1dac:	bl	0 <_ZdlPv>
    1db0:	mov	w0, #0x1                   	// #1
    1db4:	ldp	x29, x30, [sp]
    1db8:	ldp	x19, x20, [sp, #16]
    1dbc:	ldp	x21, x22, [sp, #32]
    1dc0:	ldp	x23, x24, [sp, #48]
    1dc4:	ldp	x25, x26, [sp, #64]
    1dc8:	ldp	x27, x28, [sp, #80]
    1dcc:	add	sp, sp, #0x230
    1dd0:	ret
    1dd4:	ldr	x2, [x19]
    1dd8:	add	x25, sp, #0x188
    1ddc:	mov	x0, x25
    1de0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1de4:	add	x1, x1, #0x0
    1de8:	add	x24, sp, #0x1a0
    1dec:	ldr	w26, [x2, #16]
    1df0:	add	x22, sp, #0x1b8
    1df4:	ldr	x27, [x2, #8]
    1df8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1dfc:	ldr	x0, [x23, #16]
    1e00:	mov	x8, x20
    1e04:	add	x23, sp, #0x1d0
    1e08:	add	x19, sp, #0x1f0
    1e0c:	ldr	x1, [x0]
    1e10:	ldr	x1, [x1, #16]
    1e14:	blr	x1
    1e18:	mov	x0, x24
    1e1c:	mov	x1, x20
    1e20:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1e24:	mov	x8, x22
    1e28:	mov	x1, x24
    1e2c:	mov	x0, x25
    1e30:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1e34:	mov	x0, x23
    1e38:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1e3c:	add	x1, x1, #0x0
    1e40:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1e44:	mov	x8, x19
    1e48:	mov	x1, x23
    1e4c:	mov	x0, x22
    1e50:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1e54:	mov	x0, x27
    1e58:	mov	x1, x26
    1e5c:	mov	x2, x19
    1e60:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    1e64:	ldr	x0, [sp, #528]
    1e68:	add	x1, x20, #0x10
    1e6c:	cmp	x0, x1
    1e70:	b.eq	1e78 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x740>  // b.none
    1e74:	bl	0 <_ZdlPv>
    1e78:	mov	x0, x20
    1e7c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1e80:	add	x1, x1, #0x0
    1e84:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1e88:	mov	x0, x21
    1e8c:	mov	x2, x20
    1e90:	mov	x1, #0x1                   	// #1
    1e94:	bl	0 <_ZN4llvm9PrintNoteENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    1e98:	mov	w0, #0x1                   	// #1
    1e9c:	b	1db4 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x67c>
    1ea0:	ldr	x0, [sp, #104]
    1ea4:	ldr	x2, [x28]
    1ea8:	ldr	x0, [x0, #344]
    1eac:	str	xzr, [x19]
    1eb0:	cbz	x2, 1fec <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x8b4>
    1eb4:	ldrb	w1, [x2, #8]
    1eb8:	cmp	w1, #0x12
    1ebc:	b.ne	2010 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x8d8>  // b.any
    1ec0:	ldp	x3, x2, [x2, #24]
    1ec4:	mov	x1, x20
    1ec8:	add	x0, x0, #0x30
    1ecc:	str	x3, [sp, #528]
    1ed0:	str	x2, [sp, #536]
    1ed4:	str	x28, [sp, #544]
    1ed8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1edc:	and	w20, w1, #0xff
    1ee0:	ldr	x19, [sp, #544]
    1ee4:	cbz	x19, 1f44 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x80c>
    1ee8:	ldr	x0, [x19, #88]
    1eec:	add	x1, x19, #0x68
    1ef0:	add	x22, x19, #0x58
    1ef4:	cmp	x0, x1
    1ef8:	b.eq	1f00 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x7c8>  // b.none
    1efc:	bl	0 <free>
    1f00:	ldr	x0, [x19, #72]
    1f04:	add	x21, x19, #0x48
    1f08:	cmp	x22, x0
    1f0c:	b.eq	1f14 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x7dc>  // b.none
    1f10:	bl	0 <free>
    1f14:	ldr	x0, [x19, #56]
    1f18:	cmp	x21, x0
    1f1c:	b.eq	1f24 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x7ec>  // b.none
    1f20:	bl	0 <free>
    1f24:	ldr	x0, [x19, #8]
    1f28:	add	x1, x19, #0x18
    1f2c:	cmp	x0, x1
    1f30:	b.eq	1f38 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x800>  // b.none
    1f34:	bl	0 <free>
    1f38:	mov	x0, x19
    1f3c:	mov	x1, #0x80                  	// #128
    1f40:	bl	0 <_ZdlPvm>
    1f44:	mov	w0, #0x0                   	// #0
    1f48:	cbnz	w20, 1930 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x1f8>
    1f4c:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1f50:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1f54:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1f58:	add	x3, x3, #0x0
    1f5c:	add	x1, x1, #0x0
    1f60:	add	x0, x0, #0x0
    1f64:	mov	w2, #0x6c7                 	// #1735
    1f68:	bl	0 <__assert_fail>
    1f6c:	ldr	x0, [sp, #104]
    1f70:	ldr	x0, [x0, #344]
    1f74:	str	xzr, [x19]
    1f78:	b	1eb4 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x77c>
    1f7c:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1f80:	add	x3, x3, #0x0
    1f84:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1f88:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1f8c:	add	x1, x1, #0x0
    1f90:	add	x0, x0, #0x0
    1f94:	mov	w2, #0x69                  	// #105
    1f98:	bl	0 <__assert_fail>
    1f9c:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1fa0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1fa4:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1fa8:	add	x3, x3, #0x0
    1fac:	add	x1, x1, #0x0
    1fb0:	add	x0, x0, #0x0
    1fb4:	mov	w2, #0x22e                 	// #558
    1fb8:	bl	0 <__assert_fail>
    1fbc:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1fc0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1fc4:	add	x3, x3, #0x0
    1fc8:	b	1f88 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x850>
    1fcc:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1fd0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1fd4:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1fd8:	add	x3, x3, #0x0
    1fdc:	add	x1, x1, #0x0
    1fe0:	add	x0, x0, #0x0
    1fe4:	mov	w2, #0x43                  	// #67
    1fe8:	bl	0 <__assert_fail>
    1fec:	bl	f0 <_ZN4llvm3isaINS_10StringInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    1ff0:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1ff4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1ff8:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1ffc:	add	x3, x3, #0x0
    2000:	add	x1, x1, #0x0
    2004:	add	x0, x0, #0x0
    2008:	mov	w2, #0x1cd                 	// #461
    200c:	bl	0 <__assert_fail>
    2010:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2014:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2018:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    201c:	add	x3, x3, #0x0
    2020:	add	x1, x1, #0x0
    2024:	add	x0, x0, #0x0
    2028:	mov	w2, #0x108                 	// #264
    202c:	bl	0 <__assert_fail>

0000000000002030 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE>:
    2030:	stp	x29, x30, [sp, #-240]!
    2034:	mov	x29, sp
    2038:	stp	x19, x20, [sp, #16]
    203c:	stp	x23, x24, [sp, #48]
    2040:	mov	x23, x0
    2044:	add	x0, sp, #0xb8
    2048:	ldp	x19, x24, [x1]
    204c:	stp	x27, x28, [sp, #80]
    2050:	stp	x5, x0, [sp, #96]
    2054:	cmp	x19, x24
    2058:	b.eq	20b4 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x84>  // b.none
    205c:	stp	x21, x22, [sp, #32]
    2060:	mov	x21, x2
    2064:	mov	x22, x4
    2068:	stp	x25, x26, [sp, #64]
    206c:	and	w25, w3, #0xff
    2070:	mov	w20, #0x18                  	// #24
    2074:	nop
    2078:	ldr	x1, [x19, #8]
    207c:	cbz	x1, 20d0 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0xa0>
    2080:	mov	x4, x22
    2084:	mov	w3, w25
    2088:	mov	x2, x21
    208c:	mov	x0, x23
    2090:	mov	x5, #0x0                   	// #0
    2094:	bl	2a40 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE>
    2098:	and	w27, w0, #0xff
    209c:	cbnz	w27, 2628 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x5f8>
    20a0:	add	x19, x19, #0x10
    20a4:	cmp	x24, x19
    20a8:	b.ne	2078 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x48>  // b.any
    20ac:	ldp	x21, x22, [sp, #32]
    20b0:	ldp	x25, x26, [sp, #64]
    20b4:	mov	w27, #0x0                   	// #0
    20b8:	mov	w0, w27
    20bc:	ldp	x19, x20, [sp, #16]
    20c0:	ldp	x23, x24, [sp, #48]
    20c4:	ldp	x27, x28, [sp, #80]
    20c8:	ldp	x29, x30, [sp], #240
    20cc:	ret
    20d0:	ldr	x27, [x19]
    20d4:	mov	x0, #0x80                  	// #128
    20d8:	bl	0 <_Znwm>
    20dc:	mov	x28, x0
    20e0:	mov	x26, x0
    20e4:	add	x0, x0, #0x18
    20e8:	mov	x2, x0
    20ec:	mov	x1, #0x400000000           	// #17179869184
    20f0:	ldr	x0, [x27]
    20f4:	str	x0, [x28], #8
    20f8:	stp	x2, x1, [x26, #8]
    20fc:	ldr	w0, [x27, #16]
    2100:	str	x2, [sp, #112]
    2104:	cbnz	w0, 2648 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x618>
    2108:	add	x3, x26, #0x48
    210c:	stp	x3, xzr, [x26, #56]
    2110:	ldr	w0, [x27, #64]
    2114:	cbnz	w0, 2664 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x634>
    2118:	add	x2, x26, #0x58
    211c:	stp	x2, xzr, [x26, #72]
    2120:	ldr	w0, [x27, #80]
    2124:	cbnz	w0, 2688 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x658>
    2128:	add	x0, x26, #0x68
    212c:	stp	x0, xzr, [x26, #88]
    2130:	ldr	w0, [x27, #96]
    2134:	cbnz	w0, 26ac <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x67c>
    2138:	adrp	x0, 0 <_ZN4llvm6Record6LastIDE>
    213c:	ldrh	w1, [x27, #124]
    2140:	ldr	x2, [x27, #104]
    2144:	stp	x2, xzr, [x26, #104]
    2148:	ldr	x0, [x0]
    214c:	strh	w1, [x26, #124]
    2150:	ldr	x2, [sp, #96]
    2154:	ldr	w1, [x0]
    2158:	str	w1, [x26, #120]
    215c:	add	w1, w1, #0x1
    2160:	str	w1, [x0]
    2164:	cbz	x2, 219c <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x16c>
    2168:	ldp	w0, w1, [x26, #16]
    216c:	ldr	x27, [x2]
    2170:	cmp	w0, w1
    2174:	b.cs	28a0 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x870>  // b.hs, b.nlast
    2178:	ldr	x1, [x26, #8]
    217c:	str	x27, [x1, w0, uxtw #3]
    2180:	ldp	w0, w2, [x26, #16]
    2184:	mov	w1, w0
    2188:	add	x1, x1, #0x1
    218c:	cmp	x1, x2
    2190:	b.hi	29f4 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x9c4>  // b.pmore
    2194:	add	w0, w0, #0x1
    2198:	str	w0, [x26, #16]
    219c:	adrp	x0, 0 <_ZTVN4llvm11MapResolverE>
    21a0:	ldr	w9, [x21, #8]
    21a4:	ldr	x27, [x21]
    21a8:	strb	wzr, [sp, #200]
    21ac:	ldr	x0, [x0]
    21b0:	stp	xzr, xzr, [sp, #208]
    21b4:	add	x9, x27, x9, lsl #4
    21b8:	add	x0, x0, #0x10
    21bc:	stp	x0, x26, [sp, #184]
    21c0:	cmp	x27, x9
    21c4:	str	xzr, [sp, #224]
    21c8:	str	wzr, [sp, #232]
    21cc:	b.eq	2344 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x314>  // b.none
    21d0:	mov	x5, #0x0                   	// #0
    21d4:	mov	w3, #0x0                   	// #0
    21d8:	b	2228 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x1f8>
    21dc:	cmn	x28, #0x10
    21e0:	ccmn	x28, #0x8, #0x4, ne  // ne = any
    21e4:	b.eq	29d4 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x9a4>  // b.none
    21e8:	lsr	w2, w28, #9
    21ec:	sub	w6, w3, #0x1
    21f0:	eor	w2, w2, w28, lsr #4
    21f4:	and	w10, w2, w6
    21f8:	umull	x0, w10, w20
    21fc:	add	x1, x5, x0
    2200:	ldr	x7, [x5, x0]
    2204:	cmp	x28, x7
    2208:	b.ne	2438 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x408>  // b.any
    220c:	str	x8, [x1, #8]
    2210:	add	x27, x27, #0x10
    2214:	strb	wzr, [x1, #16]
    2218:	cmp	x9, x27
    221c:	b.eq	2344 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x314>  // b.none
    2220:	ldr	w3, [sp, #232]
    2224:	ldr	x5, [sp, #216]
    2228:	ldp	x28, x8, [x27]
    222c:	cbnz	w3, 21dc <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x1ac>
    2230:	ldr	x1, [sp, #208]
    2234:	mov	w0, #0x0                   	// #0
    2238:	add	x1, x1, #0x1
    223c:	str	x1, [sp, #208]
    2240:	sub	w0, w0, #0x1
    2244:	mov	w1, #0x40                  	// #64
    2248:	stp	x8, x9, [sp, #112]
    224c:	orr	x0, x0, x0, lsr #1
    2250:	str	w3, [sp, #128]
    2254:	orr	x0, x0, x0, lsr #2
    2258:	str	x5, [sp, #136]
    225c:	orr	x0, x0, x0, lsr #4
    2260:	orr	x0, x0, x0, lsr #8
    2264:	orr	x0, x0, x0, lsr #16
    2268:	add	x0, x0, #0x1
    226c:	cmp	w0, w1
    2270:	csel	w0, w0, w1, cs  // cs = hs, nlast
    2274:	str	w0, [sp, #232]
    2278:	umull	x0, w0, w20
    227c:	bl	0 <_Znwm>
    2280:	str	x0, [sp, #216]
    2284:	ldr	x5, [sp, #136]
    2288:	ldr	w3, [sp, #128]
    228c:	ldp	x8, x9, [sp, #112]
    2290:	cbz	x5, 282c <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x7fc>
    2294:	ldr	w12, [sp, #232]
    2298:	umull	x1, w3, w20
    229c:	str	xzr, [sp, #224]
    22a0:	sub	w13, w12, #0x1
    22a4:	add	x10, x5, x1
    22a8:	tst	w12, w13
    22ac:	b.ne	2a14 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x9e4>  // b.any
    22b0:	umaddl	x3, w12, w20, x0
    22b4:	mov	x2, x0
    22b8:	mov	x6, #0xfffffffffffffff8    	// #-8
    22bc:	cmp	x0, x3
    22c0:	b.eq	22d4 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x2a4>  // b.none
    22c4:	nop
    22c8:	str	x6, [x2], #24
    22cc:	cmp	x3, x2
    22d0:	b.ne	22c8 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x298>  // b.any
    22d4:	cmp	x5, x10
    22d8:	mov	x2, x5
    22dc:	b.ne	22f0 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x2c0>  // b.any
    22e0:	b	26bc <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x68c>
    22e4:	add	x2, x2, #0x18
    22e8:	cmp	x10, x2
    22ec:	b.eq	26bc <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x68c>  // b.none
    22f0:	ldr	x6, [x2]
    22f4:	cmn	x6, #0x8
    22f8:	ccmn	x6, #0x10, #0x4, ne  // ne = any
    22fc:	b.eq	22e4 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x2b4>  // b.none
    2300:	cbz	w12, 2a34 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0xa04>
    2304:	lsr	w7, w6, #9
    2308:	eor	w7, w7, w6, lsr #4
    230c:	and	w7, w7, w13
    2310:	umull	x11, w7, w20
    2314:	add	x14, x0, x11
    2318:	ldr	x3, [x0, x11]
    231c:	cmp	x6, x3
    2320:	b.ne	27f8 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x7c8>  // b.any
    2324:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2328:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    232c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2330:	add	x3, x3, #0x0
    2334:	add	x1, x1, #0x0
    2338:	add	x0, x0, #0x0
    233c:	mov	w2, #0x17a                 	// #378
    2340:	bl	0 <__assert_fail>
    2344:	ldr	x1, [sp, #104]
    2348:	mov	x0, x26
    234c:	mov	x2, #0x0                   	// #0
    2350:	bl	0 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE>
    2354:	add	x1, sp, #0xa8
    2358:	cbz	x22, 2730 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x700>
    235c:	mov	x0, x22
    2360:	stp	x26, xzr, [sp, #168]
    2364:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2368:	ldr	x28, [sp, #176]
    236c:	cbz	x28, 23b0 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x380>
    2370:	ldp	x26, x27, [x28, #24]
    2374:	cmp	x26, x27
    2378:	b.eq	2398 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x368>  // b.none
    237c:	nop
    2380:	mov	x0, x26
    2384:	add	x26, x26, #0x10
    2388:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    238c:	cmp	x27, x26
    2390:	b.ne	2380 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x350>  // b.any
    2394:	ldr	x27, [x28, #24]
    2398:	cbz	x27, 23a4 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x374>
    239c:	mov	x0, x27
    23a0:	bl	0 <_ZdlPv>
    23a4:	mov	x0, x28
    23a8:	mov	x1, #0x30                  	// #48
    23ac:	bl	0 <_ZdlPvm>
    23b0:	ldr	x27, [sp, #168]
    23b4:	cbz	x27, 2414 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x3e4>
    23b8:	ldr	x0, [x27, #88]
    23bc:	add	x1, x27, #0x68
    23c0:	add	x26, x27, #0x58
    23c4:	cmp	x0, x1
    23c8:	b.eq	23d0 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x3a0>  // b.none
    23cc:	bl	0 <free>
    23d0:	ldr	x0, [x27, #72]
    23d4:	add	x28, x27, #0x48
    23d8:	cmp	x26, x0
    23dc:	b.eq	23e4 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x3b4>  // b.none
    23e0:	bl	0 <free>
    23e4:	ldr	x0, [x27, #56]
    23e8:	cmp	x28, x0
    23ec:	b.eq	23f4 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x3c4>  // b.none
    23f0:	bl	0 <free>
    23f4:	ldr	x0, [x27, #8]
    23f8:	add	x1, x27, #0x18
    23fc:	cmp	x0, x1
    2400:	b.eq	2408 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x3d8>  // b.none
    2404:	bl	0 <free>
    2408:	mov	x0, x27
    240c:	mov	x1, #0x80                  	// #128
    2410:	bl	0 <_ZdlPvm>
    2414:	ldr	w1, [sp, #232]
    2418:	adrp	x2, 0 <_ZTVN4llvm11MapResolverE>
    241c:	ldr	x0, [sp, #216]
    2420:	ldr	x26, [x2]
    2424:	umull	x1, w1, w20
    2428:	add	x26, x26, #0x10
    242c:	str	x26, [sp, #184]
    2430:	bl	0 <_ZdlPvm>
    2434:	b	20a0 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x70>
    2438:	mov	x12, #0x0                   	// #0
    243c:	mov	w0, #0x1                   	// #1
    2440:	cmn	x7, #0x8
    2444:	b.ne	28bc <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x88c>  // b.any
    2448:	ldr	x11, [sp, #208]
    244c:	lsl	w0, w3, #1
    2450:	ldr	w10, [sp, #224]
    2454:	cmp	x12, #0x0
    2458:	add	x11, x11, #0x1
    245c:	str	x11, [sp, #208]
    2460:	add	w10, w10, #0x1
    2464:	add	w11, w0, w3
    2468:	csel	x1, x1, x12, eq  // eq = none
    246c:	cmp	w11, w10, lsl #2
    2470:	b.ls	2240 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x210>  // b.plast
    2474:	ldr	w0, [sp, #228]
    2478:	add	w0, w10, w0
    247c:	sub	w0, w3, w0
    2480:	cmp	w0, w3, lsr #3
    2484:	b.ls	24b0 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x480>  // b.plast
    2488:	ldr	x0, [x1]
    248c:	str	w10, [sp, #224]
    2490:	cmn	x0, #0x8
    2494:	b.eq	24a4 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x474>  // b.none
    2498:	ldr	w0, [sp, #228]
    249c:	sub	w0, w0, #0x1
    24a0:	str	w0, [sp, #228]
    24a4:	stp	x28, xzr, [x1]
    24a8:	strb	wzr, [x1, #16]
    24ac:	b	220c <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x1dc>
    24b0:	mov	w1, w6
    24b4:	lsr	w0, w6, #1
    24b8:	orr	x0, x0, x1
    24bc:	mov	w1, #0x40                  	// #64
    24c0:	stp	x8, x9, [sp, #112]
    24c4:	orr	x0, x0, x0, lsr #2
    24c8:	str	x7, [sp, #128]
    24cc:	orr	x0, x0, x0, lsr #4
    24d0:	str	w3, [sp, #136]
    24d4:	str	w2, [sp, #148]
    24d8:	orr	x0, x0, x0, lsr #8
    24dc:	str	x5, [sp, #152]
    24e0:	orr	x0, x0, x0, lsr #16
    24e4:	add	x0, x0, #0x1
    24e8:	cmp	w0, w1
    24ec:	csel	w0, w0, w1, cs  // cs = hs, nlast
    24f0:	str	w0, [sp, #232]
    24f4:	umull	x0, w0, w20
    24f8:	bl	0 <_Znwm>
    24fc:	str	x0, [sp, #216]
    2500:	ldr	x5, [sp, #152]
    2504:	ldr	w3, [sp, #136]
    2508:	ldr	w2, [sp, #148]
    250c:	ldp	x8, x9, [sp, #112]
    2510:	ldr	x7, [sp, #128]
    2514:	cbz	x5, 2868 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x838>
    2518:	ldr	w12, [sp, #232]
    251c:	umull	x1, w3, w20
    2520:	str	xzr, [sp, #224]
    2524:	sub	w13, w12, #0x1
    2528:	add	x11, x5, x1
    252c:	tst	w12, w13
    2530:	b.ne	2a14 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x9e4>  // b.any
    2534:	umaddl	x3, w12, w20, x0
    2538:	mov	x6, x0
    253c:	cmp	x0, x3
    2540:	b.eq	2554 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x524>  // b.none
    2544:	nop
    2548:	str	x7, [x6], #24
    254c:	cmp	x3, x6
    2550:	b.ne	2548 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x518>  // b.any
    2554:	mov	x10, x5
    2558:	b	2568 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x538>
    255c:	add	x10, x10, #0x18
    2560:	cmp	x11, x10
    2564:	b.eq	25d8 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x5a8>  // b.none
    2568:	ldr	x6, [x10]
    256c:	cmn	x6, #0x8
    2570:	ccmn	x6, #0x10, #0x4, ne  // ne = any
    2574:	b.eq	255c <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x52c>  // b.none
    2578:	cbz	w12, 2a34 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0xa04>
    257c:	lsr	w7, w6, #9
    2580:	eor	w7, w7, w6, lsr #4
    2584:	and	w7, w7, w13
    2588:	umull	x3, w7, w20
    258c:	add	x14, x0, x3
    2590:	ldr	x3, [x0, x3]
    2594:	cmp	x6, x3
    2598:	b.eq	2324 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x2f4>  // b.none
    259c:	mov	x15, #0x0                   	// #0
    25a0:	mov	w16, #0x1                   	// #1
    25a4:	cmn	x3, #0x8
    25a8:	b.ne	299c <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x96c>  // b.any
    25ac:	cmp	x15, #0x0
    25b0:	ldr	w3, [sp, #224]
    25b4:	csel	x15, x15, x14, ne  // ne = any
    25b8:	add	x10, x10, #0x18
    25bc:	add	w3, w3, #0x1
    25c0:	str	x6, [x15]
    25c4:	ldp	x6, x7, [x10, #-16]
    25c8:	stp	x6, x7, [x15, #8]
    25cc:	cmp	x11, x10
    25d0:	str	w3, [sp, #224]
    25d4:	b.ne	2568 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x538>  // b.any
    25d8:	mov	x0, x5
    25dc:	stp	x8, x9, [sp, #112]
    25e0:	str	w2, [sp, #128]
    25e4:	bl	0 <_ZdlPvm>
    25e8:	ldp	x8, x9, [sp, #112]
    25ec:	ldr	w2, [sp, #128]
    25f0:	ldr	w3, [sp, #232]
    25f4:	ldr	x0, [sp, #216]
    25f8:	cbz	w3, 27d8 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x7a8>
    25fc:	sub	w3, w3, #0x1
    2600:	ldr	w10, [sp, #224]
    2604:	and	w2, w2, w3
    2608:	add	w10, w10, #0x1
    260c:	umull	x5, w2, w20
    2610:	add	x1, x0, x5
    2614:	ldr	x5, [x0, x5]
    2618:	cmp	x28, x5
    261c:	b.ne	28ec <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x8bc>  // b.any
    2620:	str	w10, [sp, #224]
    2624:	b	2498 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x468>
    2628:	mov	w0, w27
    262c:	ldp	x19, x20, [sp, #16]
    2630:	ldp	x21, x22, [sp, #32]
    2634:	ldp	x23, x24, [sp, #48]
    2638:	ldp	x25, x26, [sp, #64]
    263c:	ldp	x27, x28, [sp, #80]
    2640:	ldp	x29, x30, [sp], #240
    2644:	ret
    2648:	add	x1, x27, #0x8
    264c:	mov	x0, x28
    2650:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2654:	add	x3, x26, #0x48
    2658:	stp	x3, xzr, [x26, #56]
    265c:	ldr	w0, [x27, #64]
    2660:	cbz	w0, 2118 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0xe8>
    2664:	add	x1, x27, #0x38
    2668:	add	x0, x26, #0x38
    266c:	str	x3, [sp, #120]
    2670:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2674:	add	x2, x26, #0x58
    2678:	stp	x2, xzr, [x26, #72]
    267c:	ldr	w0, [x27, #80]
    2680:	ldr	x3, [sp, #120]
    2684:	cbz	w0, 2128 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0xf8>
    2688:	mov	x0, x3
    268c:	add	x1, x27, #0x48
    2690:	str	x2, [sp, #120]
    2694:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2698:	add	x0, x26, #0x68
    269c:	stp	x0, xzr, [x26, #88]
    26a0:	ldr	w0, [x27, #96]
    26a4:	ldr	x2, [sp, #120]
    26a8:	cbz	w0, 2138 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x108>
    26ac:	mov	x0, x2
    26b0:	add	x1, x27, #0x58
    26b4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    26b8:	b	2138 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x108>
    26bc:	mov	x0, x5
    26c0:	stp	x8, x9, [sp, #112]
    26c4:	bl	0 <_ZdlPvm>
    26c8:	ldp	x8, x9, [sp, #112]
    26cc:	ldr	w3, [sp, #232]
    26d0:	ldr	x0, [sp, #216]
    26d4:	cbz	w3, 27d8 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x7a8>
    26d8:	cmn	x28, #0x10
    26dc:	ccmn	x28, #0x8, #0x4, ne  // ne = any
    26e0:	b.eq	29d4 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x9a4>  // b.none
    26e4:	lsr	w2, w28, #9
    26e8:	sub	w3, w3, #0x1
    26ec:	eor	w2, w2, w28, lsr #4
    26f0:	ldr	w10, [sp, #224]
    26f4:	and	w2, w2, w3
    26f8:	add	w10, w10, #0x1
    26fc:	umull	x5, w2, w20
    2700:	add	x1, x0, x5
    2704:	ldr	x5, [x0, x5]
    2708:	cmp	x28, x5
    270c:	b.eq	2620 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x5f0>  // b.none
    2710:	mov	x6, #0x0                   	// #0
    2714:	mov	w7, #0x1                   	// #1
    2718:	cmn	x5, #0x8
    271c:	b.ne	2930 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x900>  // b.any
    2720:	cbz	x6, 2488 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x458>
    2724:	mov	x1, x6
    2728:	ldr	x0, [x6]
    272c:	b	248c <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x45c>
    2730:	mov	x0, x23
    2734:	str	x26, [sp, #168]
    2738:	bl	1738 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
    273c:	and	w27, w0, #0xff
    2740:	ldr	x28, [sp, #168]
    2744:	cbz	x28, 27b4 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x784>
    2748:	ldr	x0, [x28, #88]
    274c:	add	x1, x28, #0x68
    2750:	add	x2, x28, #0x58
    2754:	cmp	x0, x1
    2758:	b.eq	2768 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x738>  // b.none
    275c:	str	x2, [sp, #112]
    2760:	bl	0 <free>
    2764:	ldr	x2, [sp, #112]
    2768:	add	x1, x28, #0x48
    276c:	ldr	x0, [x28, #72]
    2770:	cmp	x2, x0
    2774:	b.eq	2784 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x754>  // b.none
    2778:	str	x1, [sp, #112]
    277c:	bl	0 <free>
    2780:	ldr	x1, [sp, #112]
    2784:	ldr	x0, [x28, #56]
    2788:	cmp	x1, x0
    278c:	b.eq	2794 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x764>  // b.none
    2790:	bl	0 <free>
    2794:	ldr	x0, [x28, #8]
    2798:	add	x1, x28, #0x18
    279c:	cmp	x0, x1
    27a0:	b.eq	27a8 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x778>  // b.none
    27a4:	bl	0 <free>
    27a8:	mov	x0, x28
    27ac:	mov	x1, #0x80                  	// #128
    27b0:	bl	0 <_ZdlPvm>
    27b4:	ldr	w1, [sp, #232]
    27b8:	adrp	x2, 0 <_ZTVN4llvm11MapResolverE>
    27bc:	ldr	x0, [sp, #216]
    27c0:	ldr	x26, [x2]
    27c4:	umull	x1, w1, w20
    27c8:	add	x26, x26, #0x10
    27cc:	str	x26, [sp, #184]
    27d0:	bl	0 <_ZdlPvm>
    27d4:	b	209c <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x6c>
    27d8:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    27dc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    27e0:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    27e4:	add	x3, x3, #0x0
    27e8:	add	x1, x1, #0x0
    27ec:	add	x0, x0, #0x0
    27f0:	mov	w2, #0x22f                 	// #559
    27f4:	bl	0 <__assert_fail>
    27f8:	mov	x11, #0x0                   	// #0
    27fc:	mov	w15, #0x1                   	// #1
    2800:	cmn	x3, #0x8
    2804:	b.ne	2964 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x934>  // b.any
    2808:	cmp	x11, #0x0
    280c:	ldr	w3, [sp, #224]
    2810:	csel	x11, x11, x14, ne  // ne = any
    2814:	add	w3, w3, #0x1
    2818:	str	x6, [x11]
    281c:	ldp	x6, x7, [x2, #8]
    2820:	stp	x6, x7, [x11, #8]
    2824:	str	w3, [sp, #224]
    2828:	b	22e4 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x2b4>
    282c:	ldr	w3, [sp, #232]
    2830:	str	xzr, [sp, #224]
    2834:	sub	w1, w3, #0x1
    2838:	tst	w1, w3
    283c:	b.ne	2a14 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x9e4>  // b.any
    2840:	umaddl	x2, w3, w20, x0
    2844:	cmp	x0, x2
    2848:	b.eq	26d4 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x6a4>  // b.none
    284c:	mov	x1, x0
    2850:	mov	x5, #0xfffffffffffffff8    	// #-8
    2854:	nop
    2858:	str	x5, [x1], #24
    285c:	cmp	x2, x1
    2860:	b.ne	2858 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x828>  // b.any
    2864:	b	26d4 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x6a4>
    2868:	ldr	w3, [sp, #232]
    286c:	str	xzr, [sp, #224]
    2870:	sub	w1, w3, #0x1
    2874:	tst	w1, w3
    2878:	b.ne	2a14 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x9e4>  // b.any
    287c:	umaddl	x5, w3, w20, x0
    2880:	cmp	x0, x5
    2884:	b.eq	25f8 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x5c8>  // b.none
    2888:	mov	x1, x0
    288c:	nop
    2890:	str	x7, [x1], #24
    2894:	cmp	x5, x1
    2898:	b.ne	2890 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x860>  // b.any
    289c:	b	25f8 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x5c8>
    28a0:	ldr	x1, [sp, #112]
    28a4:	mov	x0, x28
    28a8:	mov	x3, #0x8                   	// #8
    28ac:	mov	x2, #0x0                   	// #0
    28b0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    28b4:	ldr	w0, [x26, #16]
    28b8:	b	2178 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x148>
    28bc:	add	w10, w10, w0
    28c0:	cmp	x12, #0x0
    28c4:	and	w10, w6, w10
    28c8:	ccmn	x7, #0x10, #0x0, eq  // eq = none
    28cc:	csel	x12, x12, x1, ne  // ne = any
    28d0:	add	w0, w0, #0x1
    28d4:	umull	x7, w10, w20
    28d8:	add	x1, x5, x7
    28dc:	ldr	x7, [x5, x7]
    28e0:	cmp	x28, x7
    28e4:	b.eq	220c <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x1dc>  // b.none
    28e8:	b	2440 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x410>
    28ec:	mov	x6, #0x0                   	// #0
    28f0:	mov	w7, #0x1                   	// #1
    28f4:	cmn	x5, #0x8
    28f8:	b.eq	2720 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x6f0>  // b.none
    28fc:	add	w2, w7, w2
    2900:	cmp	x6, #0x0
    2904:	and	w2, w3, w2
    2908:	ccmn	x5, #0x10, #0x0, eq  // eq = none
    290c:	csel	x6, x6, x1, ne  // ne = any
    2910:	add	w7, w7, #0x1
    2914:	umull	x5, w2, w20
    2918:	add	x1, x0, x5
    291c:	ldr	x5, [x0, x5]
    2920:	cmp	x28, x5
    2924:	b.ne	28f4 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x8c4>  // b.any
    2928:	str	w10, [sp, #224]
    292c:	b	2498 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x468>
    2930:	add	w2, w7, w2
    2934:	cmp	x6, #0x0
    2938:	and	w2, w3, w2
    293c:	ccmn	x5, #0x10, #0x0, eq  // eq = none
    2940:	csel	x6, x6, x1, ne  // ne = any
    2944:	add	w7, w7, #0x1
    2948:	umull	x5, w2, w20
    294c:	add	x1, x0, x5
    2950:	ldr	x5, [x0, x5]
    2954:	cmp	x28, x5
    2958:	b.ne	2718 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x6e8>  // b.any
    295c:	str	w10, [sp, #224]
    2960:	b	2498 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x468>
    2964:	add	w7, w15, w7
    2968:	cmp	x11, #0x0
    296c:	and	w7, w13, w7
    2970:	ccmn	x3, #0x10, #0x0, eq  // eq = none
    2974:	csel	x14, x14, x11, eq  // eq = none
    2978:	add	w15, w15, #0x1
    297c:	umull	x3, w7, w20
    2980:	add	x16, x0, x3
    2984:	ldr	x3, [x0, x3]
    2988:	cmp	x6, x3
    298c:	b.eq	2324 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x2f4>  // b.none
    2990:	mov	x11, x14
    2994:	mov	x14, x16
    2998:	b	2800 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x7d0>
    299c:	add	w7, w7, w16
    29a0:	cmp	x15, #0x0
    29a4:	and	w7, w13, w7
    29a8:	ccmn	x3, #0x10, #0x0, eq  // eq = none
    29ac:	csel	x14, x14, x15, eq  // eq = none
    29b0:	add	w16, w16, #0x1
    29b4:	umull	x3, w7, w20
    29b8:	add	x17, x0, x3
    29bc:	ldr	x3, [x0, x3]
    29c0:	cmp	x6, x3
    29c4:	b.eq	2324 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x2f4>  // b.none
    29c8:	mov	x15, x14
    29cc:	mov	x14, x17
    29d0:	b	25a4 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x574>
    29d4:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    29d8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    29dc:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    29e0:	add	x3, x3, #0x0
    29e4:	add	x1, x1, #0x0
    29e8:	add	x0, x0, #0x0
    29ec:	mov	w2, #0x250                 	// #592
    29f0:	bl	0 <__assert_fail>
    29f4:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    29f8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    29fc:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2a00:	add	x3, x3, #0x0
    2a04:	add	x1, x1, #0x0
    2a08:	add	x0, x0, #0x0
    2a0c:	mov	w2, #0x43                  	// #67
    2a10:	bl	0 <__assert_fail>
    2a14:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2a18:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2a1c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2a20:	add	x3, x3, #0x0
    2a24:	add	x1, x1, #0x0
    2a28:	add	x0, x0, #0x0
    2a2c:	mov	w2, #0x15b                 	// #347
    2a30:	bl	0 <__assert_fail>
    2a34:	mov	x0, #0x0                   	// #0
    2a38:	str	x6, [x0]
    2a3c:	brk	#0x3e8

0000000000002a40 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE>:
    2a40:	stp	x29, x30, [sp, #-352]!
    2a44:	mov	x29, sp
    2a48:	stp	x23, x24, [sp, #48]
    2a4c:	mov	x24, x2
    2a50:	adrp	x2, 0 <_ZTVN4llvm11MapResolverE>
    2a54:	stp	x19, x20, [sp, #16]
    2a58:	mov	x23, x0
    2a5c:	ldr	w9, [x24, #8]
    2a60:	ldr	x2, [x2]
    2a64:	stp	x21, x22, [sp, #32]
    2a68:	mov	x21, x1
    2a6c:	ldr	x19, [x24]
    2a70:	add	x2, x2, #0x10
    2a74:	stp	x25, x26, [sp, #64]
    2a78:	mov	x22, x4
    2a7c:	and	w26, w3, #0xff
    2a80:	stp	x27, x28, [sp, #80]
    2a84:	add	x9, x19, x9, lsl #4
    2a88:	cmp	x9, x19
    2a8c:	str	x5, [sp, #104]
    2a90:	stp	x2, xzr, [sp, #296]
    2a94:	strb	wzr, [sp, #312]
    2a98:	stp	xzr, xzr, [sp, #320]
    2a9c:	str	xzr, [sp, #336]
    2aa0:	str	wzr, [sp, #344]
    2aa4:	b.eq	2c14 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x1d4>  // b.none
    2aa8:	mov	w28, #0x0                   	// #0
    2aac:	mov	x7, #0x0                   	// #0
    2ab0:	mov	w25, #0x18                  	// #24
    2ab4:	b	2b04 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0xc4>
    2ab8:	cmn	x20, #0x10
    2abc:	ccmn	x20, #0x8, #0x4, ne  // ne = any
    2ac0:	b.eq	3320 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x8e0>  // b.none
    2ac4:	lsr	w27, w20, #9
    2ac8:	sub	w1, w28, #0x1
    2acc:	eor	w27, w27, w20, lsr #4
    2ad0:	and	w4, w27, w1
    2ad4:	umull	x0, w4, w25
    2ad8:	add	x3, x7, x0
    2adc:	ldr	x2, [x7, x0]
    2ae0:	cmp	x20, x2
    2ae4:	b.ne	2da4 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x364>  // b.any
    2ae8:	str	x8, [x3, #8]
    2aec:	add	x19, x19, #0x10
    2af0:	strb	wzr, [x3, #16]
    2af4:	cmp	x9, x19
    2af8:	b.eq	2c14 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x1d4>  // b.none
    2afc:	ldr	w28, [sp, #344]
    2b00:	ldr	x7, [sp, #328]
    2b04:	ldp	x20, x8, [x19]
    2b08:	cbnz	w28, 2ab8 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x78>
    2b0c:	ldr	x1, [sp, #320]
    2b10:	mov	w0, #0x0                   	// #0
    2b14:	add	x1, x1, #0x1
    2b18:	str	x1, [sp, #320]
    2b1c:	sub	w0, w0, #0x1
    2b20:	mov	w1, #0x40                  	// #64
    2b24:	stp	x8, x9, [sp, #112]
    2b28:	orr	x0, x0, x0, lsr #1
    2b2c:	str	x7, [sp, #128]
    2b30:	orr	x0, x0, x0, lsr #2
    2b34:	orr	x0, x0, x0, lsr #4
    2b38:	orr	x0, x0, x0, lsr #8
    2b3c:	orr	x0, x0, x0, lsr #16
    2b40:	add	x0, x0, #0x1
    2b44:	cmp	w0, w1
    2b48:	csel	w0, w0, w1, cs  // cs = hs, nlast
    2b4c:	str	w0, [sp, #344]
    2b50:	umull	x0, w0, w25
    2b54:	bl	0 <_Znwm>
    2b58:	str	x0, [sp, #328]
    2b5c:	ldr	x7, [sp, #128]
    2b60:	ldp	x8, x9, [sp, #112]
    2b64:	cbz	x7, 321c <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x7dc>
    2b68:	ldr	w12, [sp, #344]
    2b6c:	umull	x1, w28, w25
    2b70:	str	xzr, [sp, #336]
    2b74:	sub	w13, w12, #0x1
    2b78:	add	x11, x7, x1
    2b7c:	tst	w12, w13
    2b80:	b.ne	33ec <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x9ac>  // b.any
    2b84:	umaddl	x3, w12, w25, x0
    2b88:	mov	x2, x0
    2b8c:	mov	x4, #0xfffffffffffffff8    	// #-8
    2b90:	cmp	x0, x3
    2b94:	b.eq	2ba4 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x164>  // b.none
    2b98:	str	x4, [x2], #24
    2b9c:	cmp	x3, x2
    2ba0:	b.ne	2b98 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x158>  // b.any
    2ba4:	cmp	x11, x7
    2ba8:	mov	x2, x7
    2bac:	b.ne	2bc0 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x180>  // b.any
    2bb0:	b	2f84 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x544>
    2bb4:	add	x2, x2, #0x18
    2bb8:	cmp	x11, x2
    2bbc:	b.eq	2f84 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x544>  // b.none
    2bc0:	ldr	x3, [x2]
    2bc4:	cmn	x3, #0x8
    2bc8:	ccmn	x3, #0x10, #0x4, ne  // ne = any
    2bcc:	b.eq	2bb4 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x174>  // b.none
    2bd0:	cbz	w12, 3418 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x9d8>
    2bd4:	lsr	w4, w3, #9
    2bd8:	eor	w4, w4, w3, lsr #4
    2bdc:	and	w4, w4, w13
    2be0:	umull	x5, w4, w25
    2be4:	add	x14, x0, x5
    2be8:	ldr	x5, [x0, x5]
    2bec:	cmp	x3, x5
    2bf0:	b.ne	30ec <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x6ac>  // b.any
    2bf4:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2bf8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2bfc:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2c00:	add	x3, x3, #0x0
    2c04:	add	x1, x1, #0x0
    2c08:	add	x0, x0, #0x0
    2c0c:	mov	w2, #0x17a                 	// #378
    2c10:	bl	0 <__assert_fail>
    2c14:	ldr	x0, [x21, #16]
    2c18:	add	x1, sp, #0x128
    2c1c:	ldr	x2, [x0]
    2c20:	ldr	x2, [x2, #96]
    2c24:	blr	x2
    2c28:	mov	x20, x0
    2c2c:	cbz	x0, 33e8 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x9a8>
    2c30:	ldrb	w0, [x0, #8]
    2c34:	cmp	w0, #0x9
    2c38:	b.eq	2cdc <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x29c>  // b.none
    2c3c:	cbnz	w26, 3018 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x5d8>
    2c40:	mov	x0, #0x30                  	// #48
    2c44:	ldp	x26, x19, [x21]
    2c48:	bl	0 <_Znwm>
    2c4c:	ldp	x1, x3, [x22, #8]
    2c50:	stp	x26, x19, [x0]
    2c54:	stp	x20, xzr, [x0, #16]
    2c58:	stp	xzr, xzr, [x0, #32]
    2c5c:	cmp	x1, x3
    2c60:	str	x0, [sp, #264]
    2c64:	b.eq	3120 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x6e0>  // b.none
    2c68:	stp	xzr, x0, [x1]
    2c6c:	add	x2, x1, #0x10
    2c70:	str	x2, [x22, #8]
    2c74:	ldr	x5, [sp, #104]
    2c78:	add	x1, x21, #0x18
    2c7c:	ldur	x4, [x2, #-8]
    2c80:	mov	x0, x23
    2c84:	mov	x2, x24
    2c88:	mov	w3, #0x0                   	// #0
    2c8c:	add	x4, x4, #0x18
    2c90:	bl	2030 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE>
    2c94:	and	w19, w0, #0xff
    2c98:	ldr	w2, [sp, #344]
    2c9c:	mov	w1, #0x18                  	// #24
    2ca0:	adrp	x3, 0 <_ZTVN4llvm11MapResolverE>
    2ca4:	ldr	x0, [sp, #328]
    2ca8:	umull	x1, w2, w1
    2cac:	ldr	x24, [x3]
    2cb0:	add	x24, x24, #0x10
    2cb4:	str	x24, [sp, #296]
    2cb8:	bl	0 <_ZdlPvm>
    2cbc:	mov	w0, w19
    2cc0:	ldp	x19, x20, [sp, #16]
    2cc4:	ldp	x21, x22, [sp, #32]
    2cc8:	ldp	x23, x24, [sp, #48]
    2ccc:	ldp	x25, x26, [sp, #64]
    2cd0:	ldp	x27, x28, [sp, #80]
    2cd4:	ldp	x29, x30, [sp], #352
    2cd8:	ret
    2cdc:	ldr	w0, [x20, #32]
    2ce0:	mov	x1, #0x28                  	// #40
    2ce4:	add	x27, x20, x1
    2ce8:	add	x0, x1, w0, uxtw #3
    2cec:	add	x20, x20, x0
    2cf0:	cmp	x20, x27
    2cf4:	b.eq	2d9c <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x35c>  // b.none
    2cf8:	ldr	x1, [x21, #8]
    2cfc:	add	x25, x21, #0x18
    2d00:	cbz	x1, 2d48 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x308>
    2d04:	ldp	w0, w3, [x24, #8]
    2d08:	ldr	x19, [x27]
    2d0c:	cmp	w0, w3
    2d10:	ldr	x28, [x1, #24]
    2d14:	b.cs	2f70 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x530>  // b.hs, b.nlast
    2d18:	ldr	x4, [x24]
    2d1c:	ubfiz	x2, x0, #4, #32
    2d20:	mov	w1, w0
    2d24:	add	x5, x4, x2
    2d28:	add	x1, x1, #0x1
    2d2c:	str	x28, [x4, x2]
    2d30:	cmp	x1, w3, uxtw
    2d34:	str	x19, [x5, #8]
    2d38:	b.hi	3340 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x900>  // b.pmore
    2d3c:	add	w0, w0, #0x1
    2d40:	str	w0, [x24, #8]
    2d44:	cbz	w0, 33c8 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x988>
    2d48:	mov	x1, x25
    2d4c:	mov	x4, x22
    2d50:	mov	w3, w26
    2d54:	mov	x2, x24
    2d58:	mov	x0, x23
    2d5c:	mov	x5, #0x0                   	// #0
    2d60:	bl	2030 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE>
    2d64:	and	w19, w0, #0xff
    2d68:	ldr	x1, [x21, #8]
    2d6c:	cbz	x1, 2d8c <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x34c>
    2d70:	ldp	w0, w3, [x24, #8]
    2d74:	mov	w2, w0
    2d78:	sub	x2, x2, #0x1
    2d7c:	cmp	x2, x3
    2d80:	b.hi	3340 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x900>  // b.pmore
    2d84:	sub	w0, w0, #0x1
    2d88:	str	w0, [x24, #8]
    2d8c:	cbnz	w19, 2c98 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x258>
    2d90:	add	x27, x27, #0x8
    2d94:	cmp	x20, x27
    2d98:	b.ne	2d00 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x2c0>  // b.any
    2d9c:	mov	w19, #0x0                   	// #0
    2da0:	b	2c98 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x258>
    2da4:	mov	w0, #0x1                   	// #1
    2da8:	mov	x11, #0x0                   	// #0
    2dac:	cmn	x2, #0x8
    2db0:	b.ne	30bc <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x67c>  // b.any
    2db4:	ldr	x5, [sp, #320]
    2db8:	lsl	w0, w28, #1
    2dbc:	ldr	w4, [sp, #336]
    2dc0:	cmp	x11, #0x0
    2dc4:	add	x5, x5, #0x1
    2dc8:	str	x5, [sp, #320]
    2dcc:	add	w4, w4, #0x1
    2dd0:	add	w5, w0, w28
    2dd4:	csel	x3, x3, x11, eq  // eq = none
    2dd8:	cmp	w5, w4, lsl #2
    2ddc:	b.ls	2b1c <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0xdc>  // b.plast
    2de0:	ldr	w0, [sp, #340]
    2de4:	add	w0, w4, w0
    2de8:	sub	w0, w28, w0
    2dec:	cmp	w0, w28, lsr #3
    2df0:	b.ls	2e1c <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x3dc>  // b.plast
    2df4:	ldr	x0, [x3]
    2df8:	str	w4, [sp, #336]
    2dfc:	cmn	x0, #0x8
    2e00:	b.eq	2e10 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x3d0>  // b.none
    2e04:	ldr	w0, [sp, #340]
    2e08:	sub	w0, w0, #0x1
    2e0c:	str	w0, [sp, #340]
    2e10:	stp	x20, xzr, [x3]
    2e14:	strb	wzr, [x3, #16]
    2e18:	b	2ae8 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0xa8>
    2e1c:	mov	w3, w1
    2e20:	lsr	w0, w1, #1
    2e24:	orr	x0, x0, x3
    2e28:	mov	w1, #0x40                  	// #64
    2e2c:	stp	x8, x9, [sp, #112]
    2e30:	orr	x0, x0, x0, lsr #2
    2e34:	stp	x2, x7, [sp, #128]
    2e38:	orr	x0, x0, x0, lsr #4
    2e3c:	orr	x0, x0, x0, lsr #8
    2e40:	orr	x0, x0, x0, lsr #16
    2e44:	add	x0, x0, #0x1
    2e48:	cmp	w0, w1
    2e4c:	csel	w0, w0, w1, cs  // cs = hs, nlast
    2e50:	str	w0, [sp, #344]
    2e54:	umull	x0, w0, w25
    2e58:	bl	0 <_Znwm>
    2e5c:	str	x0, [sp, #328]
    2e60:	ldp	x2, x7, [sp, #128]
    2e64:	ldp	x8, x9, [sp, #112]
    2e68:	cbz	x7, 3258 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x818>
    2e6c:	ldr	w11, [sp, #344]
    2e70:	umull	x1, w28, w25
    2e74:	str	xzr, [sp, #336]
    2e78:	sub	w12, w11, #0x1
    2e7c:	add	x5, x7, x1
    2e80:	tst	w11, w12
    2e84:	b.ne	33ec <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x9ac>  // b.any
    2e88:	umaddl	x4, w11, w25, x0
    2e8c:	mov	x3, x0
    2e90:	cmp	x0, x4
    2e94:	b.eq	2ea4 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x464>  // b.none
    2e98:	str	x2, [x3], #24
    2e9c:	cmp	x4, x3
    2ea0:	b.ne	2e98 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x458>  // b.any
    2ea4:	mov	x4, x7
    2ea8:	b	2eb8 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x478>
    2eac:	add	x4, x4, #0x18
    2eb0:	cmp	x5, x4
    2eb4:	b.eq	2f28 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x4e8>  // b.none
    2eb8:	ldr	x2, [x4]
    2ebc:	cmn	x2, #0x10
    2ec0:	ccmn	x2, #0x8, #0x4, ne  // ne = any
    2ec4:	b.eq	2eac <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x46c>  // b.none
    2ec8:	cbz	w11, 340c <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x9cc>
    2ecc:	lsr	w3, w2, #9
    2ed0:	eor	w3, w3, w2, lsr #4
    2ed4:	and	w3, w3, w12
    2ed8:	umull	x13, w3, w25
    2edc:	add	x14, x0, x13
    2ee0:	ldr	x13, [x0, x13]
    2ee4:	cmp	x13, x2
    2ee8:	b.eq	2bf4 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x1b4>  // b.none
    2eec:	mov	w16, #0x1                   	// #1
    2ef0:	mov	x15, #0x0                   	// #0
    2ef4:	cmn	x13, #0x8
    2ef8:	b.ne	32e8 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x8a8>  // b.any
    2efc:	cmp	x15, #0x0
    2f00:	ldr	w13, [sp, #336]
    2f04:	csel	x15, x15, x14, ne  // ne = any
    2f08:	add	x4, x4, #0x18
    2f0c:	add	w13, w13, #0x1
    2f10:	str	x2, [x15]
    2f14:	ldp	x2, x3, [x4, #-16]
    2f18:	stp	x2, x3, [x15, #8]
    2f1c:	cmp	x5, x4
    2f20:	str	w13, [sp, #336]
    2f24:	b.ne	2eb8 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x478>  // b.any
    2f28:	mov	x0, x7
    2f2c:	stp	x8, x9, [sp, #112]
    2f30:	bl	0 <_ZdlPvm>
    2f34:	ldp	x8, x9, [sp, #112]
    2f38:	ldr	w3, [sp, #344]
    2f3c:	ldr	x0, [sp, #328]
    2f40:	cbz	w3, 2ff8 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x5b8>
    2f44:	sub	w1, w3, #0x1
    2f48:	ldr	w4, [sp, #336]
    2f4c:	and	w27, w27, w1
    2f50:	add	w4, w4, #0x1
    2f54:	umull	x2, w27, w25
    2f58:	add	x3, x0, x2
    2f5c:	ldr	x2, [x0, x2]
    2f60:	cmp	x20, x2
    2f64:	b.ne	3290 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x850>  // b.any
    2f68:	str	w4, [sp, #336]
    2f6c:	b	2e04 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x3c4>
    2f70:	mov	x0, x24
    2f74:	mov	x1, #0x0                   	// #0
    2f78:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2f7c:	ldp	w0, w3, [x24, #8]
    2f80:	b	2d18 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x2d8>
    2f84:	mov	x0, x7
    2f88:	stp	x8, x9, [sp, #112]
    2f8c:	bl	0 <_ZdlPvm>
    2f90:	ldp	x8, x9, [sp, #112]
    2f94:	ldr	w2, [sp, #344]
    2f98:	ldr	x0, [sp, #328]
    2f9c:	cbz	w2, 2ff8 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x5b8>
    2fa0:	cmn	x20, #0x8
    2fa4:	ccmn	x20, #0x10, #0x4, ne  // ne = any
    2fa8:	b.eq	3320 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x8e0>  // b.none
    2fac:	lsr	w1, w20, #9
    2fb0:	sub	w2, w2, #0x1
    2fb4:	eor	w1, w1, w20, lsr #4
    2fb8:	ldr	w4, [sp, #336]
    2fbc:	and	w1, w1, w2
    2fc0:	add	w4, w4, #0x1
    2fc4:	umull	x5, w1, w25
    2fc8:	add	x3, x0, x5
    2fcc:	ldr	x5, [x0, x5]
    2fd0:	cmp	x20, x5
    2fd4:	b.eq	2f68 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x528>  // b.none
    2fd8:	mov	w11, #0x1                   	// #1
    2fdc:	mov	x7, #0x0                   	// #0
    2fe0:	cmn	x5, #0x8
    2fe4:	b.ne	3360 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x920>  // b.any
    2fe8:	cbz	x7, 2df4 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x3b4>
    2fec:	mov	x3, x7
    2ff0:	ldr	x0, [x7]
    2ff4:	b	2df8 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x3b8>
    2ff8:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2ffc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3000:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3004:	add	x3, x3, #0x0
    3008:	add	x1, x1, #0x0
    300c:	add	x0, x0, #0x0
    3010:	mov	w2, #0x22f                 	// #559
    3014:	bl	0 <__assert_fail>
    3018:	add	x25, sp, #0x90
    301c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3020:	mov	x0, x25
    3024:	add	x1, x1, #0x0
    3028:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    302c:	add	x19, sp, #0x108
    3030:	ldr	x1, [x20]
    3034:	mov	x8, x19
    3038:	mov	x0, x20
    303c:	add	x27, sp, #0xa8
    3040:	add	x22, sp, #0xc0
    3044:	add	x23, sp, #0xd8
    3048:	ldr	x1, [x1, #40]
    304c:	add	x20, sp, #0xf0
    3050:	blr	x1
    3054:	mov	x1, x19
    3058:	mov	x0, x27
    305c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3060:	add	x19, x19, #0x10
    3064:	mov	x8, x22
    3068:	mov	x1, x27
    306c:	mov	x0, x25
    3070:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3074:	mov	x0, x23
    3078:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    307c:	add	x1, x1, #0x0
    3080:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3084:	mov	x8, x20
    3088:	mov	x1, x23
    308c:	mov	x0, x22
    3090:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3094:	mov	x0, x21
    3098:	mov	x2, x20
    309c:	mov	x1, #0x1                   	// #1
    30a0:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    30a4:	ldr	x0, [sp, #264]
    30a8:	cmp	x0, x19
    30ac:	b.eq	30b4 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x674>  // b.none
    30b0:	bl	0 <_ZdlPv>
    30b4:	mov	w19, w26
    30b8:	b	2c98 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x258>
    30bc:	add	w4, w4, w0
    30c0:	cmp	x11, #0x0
    30c4:	and	w4, w1, w4
    30c8:	ccmn	x2, #0x10, #0x0, eq  // eq = none
    30cc:	csel	x11, x11, x3, ne  // ne = any
    30d0:	add	w0, w0, #0x1
    30d4:	umull	x2, w4, w25
    30d8:	add	x3, x7, x2
    30dc:	ldr	x2, [x7, x2]
    30e0:	cmp	x20, x2
    30e4:	b.eq	2ae8 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0xa8>  // b.none
    30e8:	b	2dac <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x36c>
    30ec:	mov	w16, #0x1                   	// #1
    30f0:	mov	x15, #0x0                   	// #0
    30f4:	cmn	x5, #0x8
    30f8:	b.ne	32b0 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x870>  // b.any
    30fc:	cmp	x15, #0x0
    3100:	ldr	w4, [sp, #336]
    3104:	csel	x15, x15, x14, ne  // ne = any
    3108:	add	w14, w4, #0x1
    310c:	str	x3, [x15]
    3110:	ldp	x4, x5, [x2, #8]
    3114:	stp	x4, x5, [x15, #8]
    3118:	str	w14, [sp, #336]
    311c:	b	2bb4 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x174>
    3120:	add	x2, sp, #0x108
    3124:	mov	x0, x22
    3128:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    312c:	ldr	x28, [sp, #264]
    3130:	cbz	x28, 3214 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x7d4>
    3134:	ldp	x20, x27, [x28, #24]
    3138:	cmp	x20, x27
    313c:	b.eq	31fc <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x7bc>  // b.none
    3140:	ldr	x26, [x20, #8]
    3144:	cbz	x26, 3188 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x748>
    3148:	ldp	x25, x19, [x26, #24]
    314c:	cmp	x25, x19
    3150:	b.eq	3170 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x730>  // b.none
    3154:	nop
    3158:	mov	x0, x25
    315c:	add	x25, x25, #0x10
    3160:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3164:	cmp	x19, x25
    3168:	b.ne	3158 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x718>  // b.any
    316c:	ldr	x19, [x26, #24]
    3170:	cbz	x19, 317c <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x73c>
    3174:	mov	x0, x19
    3178:	bl	0 <_ZdlPv>
    317c:	mov	x0, x26
    3180:	mov	x1, #0x30                  	// #48
    3184:	bl	0 <_ZdlPvm>
    3188:	ldr	x19, [x20]
    318c:	cbz	x19, 31ec <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x7ac>
    3190:	ldr	x0, [x19, #88]
    3194:	add	x1, x19, #0x68
    3198:	add	x25, x19, #0x58
    319c:	cmp	x0, x1
    31a0:	b.eq	31a8 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x768>  // b.none
    31a4:	bl	0 <free>
    31a8:	ldr	x0, [x19, #72]
    31ac:	add	x26, x19, #0x48
    31b0:	cmp	x25, x0
    31b4:	b.eq	31bc <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x77c>  // b.none
    31b8:	bl	0 <free>
    31bc:	ldr	x0, [x19, #56]
    31c0:	cmp	x26, x0
    31c4:	b.eq	31cc <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x78c>  // b.none
    31c8:	bl	0 <free>
    31cc:	ldr	x0, [x19, #8]
    31d0:	add	x1, x19, #0x18
    31d4:	cmp	x0, x1
    31d8:	b.eq	31e0 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x7a0>  // b.none
    31dc:	bl	0 <free>
    31e0:	mov	x0, x19
    31e4:	mov	x1, #0x80                  	// #128
    31e8:	bl	0 <_ZdlPvm>
    31ec:	add	x20, x20, #0x10
    31f0:	cmp	x27, x20
    31f4:	b.ne	3140 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x700>  // b.any
    31f8:	ldr	x27, [x28, #24]
    31fc:	cbz	x27, 3208 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x7c8>
    3200:	mov	x0, x27
    3204:	bl	0 <_ZdlPv>
    3208:	mov	x0, x28
    320c:	mov	x1, #0x30                  	// #48
    3210:	bl	0 <_ZdlPvm>
    3214:	ldr	x2, [x22, #8]
    3218:	b	2c74 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x234>
    321c:	ldr	w2, [sp, #344]
    3220:	str	xzr, [sp, #336]
    3224:	sub	w1, w2, #0x1
    3228:	tst	w1, w2
    322c:	b.ne	33ec <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x9ac>  // b.any
    3230:	umaddl	x3, w2, w25, x0
    3234:	cmp	x0, x3
    3238:	b.eq	2f9c <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x55c>  // b.none
    323c:	mov	x1, x0
    3240:	mov	x4, #0xfffffffffffffff8    	// #-8
    3244:	nop
    3248:	str	x4, [x1], #24
    324c:	cmp	x3, x1
    3250:	b.ne	3248 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x808>  // b.any
    3254:	b	2f9c <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x55c>
    3258:	ldr	w3, [sp, #344]
    325c:	str	xzr, [sp, #336]
    3260:	sub	w1, w3, #0x1
    3264:	tst	w1, w3
    3268:	b.ne	33ec <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x9ac>  // b.any
    326c:	umaddl	x4, w3, w25, x0
    3270:	cmp	x0, x4
    3274:	b.eq	2f40 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x500>  // b.none
    3278:	mov	x1, x0
    327c:	nop
    3280:	str	x2, [x1], #24
    3284:	cmp	x4, x1
    3288:	b.ne	3280 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x840>  // b.any
    328c:	b	2f40 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x500>
    3290:	mov	w7, #0x1                   	// #1
    3294:	mov	x5, #0x0                   	// #0
    3298:	cmn	x2, #0x8
    329c:	b.ne	3394 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x954>  // b.any
    32a0:	cbz	x5, 2df4 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x3b4>
    32a4:	mov	x3, x5
    32a8:	ldr	x0, [x5]
    32ac:	b	2df8 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x3b8>
    32b0:	add	w4, w4, w16
    32b4:	cmp	x15, #0x0
    32b8:	and	w4, w13, w4
    32bc:	ccmn	x5, #0x10, #0x0, eq  // eq = none
    32c0:	csel	x14, x14, x15, eq  // eq = none
    32c4:	add	w16, w16, #0x1
    32c8:	umull	x5, w4, w25
    32cc:	add	x17, x0, x5
    32d0:	ldr	x5, [x0, x5]
    32d4:	cmp	x3, x5
    32d8:	b.eq	2bf4 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x1b4>  // b.none
    32dc:	mov	x15, x14
    32e0:	mov	x14, x17
    32e4:	b	30f4 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x6b4>
    32e8:	add	w3, w16, w3
    32ec:	cmp	x15, #0x0
    32f0:	and	w3, w12, w3
    32f4:	ccmn	x13, #0x10, #0x0, eq  // eq = none
    32f8:	csel	x14, x14, x15, eq  // eq = none
    32fc:	add	w16, w16, #0x1
    3300:	umull	x13, w3, w25
    3304:	add	x17, x0, x13
    3308:	ldr	x13, [x0, x13]
    330c:	cmp	x2, x13
    3310:	b.eq	2bf4 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x1b4>  // b.none
    3314:	mov	x15, x14
    3318:	mov	x14, x17
    331c:	b	2ef4 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x4b4>
    3320:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3324:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3328:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    332c:	add	x3, x3, #0x0
    3330:	add	x1, x1, #0x0
    3334:	add	x0, x0, #0x0
    3338:	mov	w2, #0x250                 	// #592
    333c:	bl	0 <__assert_fail>
    3340:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3344:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3348:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    334c:	add	x3, x3, #0x0
    3350:	add	x1, x1, #0x0
    3354:	add	x0, x0, #0x0
    3358:	mov	w2, #0x43                  	// #67
    335c:	bl	0 <__assert_fail>
    3360:	add	w1, w11, w1
    3364:	cmp	x7, #0x0
    3368:	and	w1, w2, w1
    336c:	ccmn	x5, #0x10, #0x0, eq  // eq = none
    3370:	csel	x7, x7, x3, ne  // ne = any
    3374:	add	w11, w11, #0x1
    3378:	umull	x5, w1, w25
    337c:	add	x3, x0, x5
    3380:	ldr	x5, [x0, x5]
    3384:	cmp	x20, x5
    3388:	b.ne	2fe0 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x5a0>  // b.any
    338c:	str	w4, [sp, #336]
    3390:	b	2e04 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x3c4>
    3394:	add	w27, w7, w27
    3398:	cmp	x5, #0x0
    339c:	and	w27, w1, w27
    33a0:	ccmn	x2, #0x10, #0x0, eq  // eq = none
    33a4:	csel	x5, x5, x3, ne  // ne = any
    33a8:	add	w7, w7, #0x1
    33ac:	umull	x2, w27, w25
    33b0:	add	x3, x0, x2
    33b4:	ldr	x2, [x0, x2]
    33b8:	cmp	x20, x2
    33bc:	b.ne	3298 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x858>  // b.any
    33c0:	str	w4, [sp, #336]
    33c4:	b	2e04 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x3c4>
    33c8:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    33cc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    33d0:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    33d4:	add	x3, x3, #0x0
    33d8:	add	x1, x1, #0x0
    33dc:	add	x0, x0, #0x0
    33e0:	mov	w2, #0xa7                  	// #167
    33e4:	bl	0 <__assert_fail>
    33e8:	bl	2c0 <_ZN4llvm3isaINS_8ListInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    33ec:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    33f0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    33f4:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    33f8:	add	x3, x3, #0x0
    33fc:	add	x1, x1, #0x0
    3400:	add	x0, x0, #0x0
    3404:	mov	w2, #0x15b                 	// #347
    3408:	bl	0 <__assert_fail>
    340c:	mov	x0, #0x0                   	// #0
    3410:	str	x2, [x0]
    3414:	brk	#0x3e8
    3418:	mov	x0, #0x0                   	// #0
    341c:	str	x3, [x0]
    3420:	brk	#0x3e8
    3424:	nop

0000000000003428 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE>:
    3428:	sub	sp, sp, #0x290
    342c:	stp	x29, x30, [sp]
    3430:	mov	x29, sp
    3434:	stp	x25, x26, [sp, #64]
    3438:	ldr	x26, [x2, #16]
    343c:	stp	x19, x20, [sp, #16]
    3440:	stp	x23, x24, [sp, #48]
    3444:	mov	x24, x2
    3448:	stp	x27, x28, [sp, #80]
    344c:	ldr	w27, [x26, #64]
    3450:	stp	x1, x0, [sp, #104]
    3454:	ldr	w0, [x2, #32]
    3458:	cmp	w27, w0
    345c:	b.cc	36ec <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x2c4>  // b.lo, b.ul, b.last
    3460:	stp	x21, x22, [sp, #32]
    3464:	add	x21, sp, #0x200
    3468:	add	x2, x21, #0x10
    346c:	mov	x1, #0x800000000           	// #34359738368
    3470:	ldr	x25, [x26, #56]
    3474:	str	x2, [sp, #512]
    3478:	str	x1, [sp, #520]
    347c:	cbz	w27, 3600 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x1d8>
    3480:	mov	w28, w27
    3484:	mov	x19, #0x0                   	// #0
    3488:	mov	w20, #0x18                  	// #24
    348c:	b	3500 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0xd8>
    3490:	cmp	x28, x19
    3494:	b.ls	38f8 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x4d0>  // b.plast
    3498:	cmp	x19, w0, uxtw
    349c:	lsl	x22, x19, #3
    34a0:	b.cs	3938 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x510>  // b.hs, b.nlast
    34a4:	ldr	w3, [sp, #520]
    34a8:	ldr	w1, [sp, #524]
    34ac:	ldr	x23, [x24, #24]
    34b0:	cmp	w3, w1
    34b4:	b.cs	35d0 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x1a8>  // b.hs, b.nlast
    34b8:	ldr	x2, [sp, #512]
    34bc:	ubfiz	x0, x3, #4, #32
    34c0:	ldr	x7, [x25, x19, lsl #3]
    34c4:	add	x4, x2, x0
    34c8:	str	x7, [x2, x0]
    34cc:	mov	w0, w3
    34d0:	ldr	x2, [x23, x22]
    34d4:	str	x2, [x4, #8]
    34d8:	add	x0, x0, #0x1
    34dc:	cmp	x0, w1, uxtw
    34e0:	b.hi	3918 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x4f0>  // b.pmore
    34e4:	add	w3, w3, #0x1
    34e8:	str	w3, [sp, #520]
    34ec:	cbz	w3, 35b0 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x188>
    34f0:	add	x19, x19, #0x1
    34f4:	cmp	w27, w19
    34f8:	b.eq	3600 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x1d8>  // b.none
    34fc:	ldr	w0, [x24, #32]
    3500:	cmp	w19, w0
    3504:	mov	w22, w19
    3508:	b.cc	3490 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x68>  // b.lo, b.ul, b.last
    350c:	cmp	x28, x19
    3510:	b.ls	38f8 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x4d0>  // b.plast
    3514:	ldr	w0, [x26, #80]
    3518:	add	x2, x25, x19, lsl #3
    351c:	ldr	x3, [x26, #72]
    3520:	ldr	x1, [x25, x19, lsl #3]
    3524:	umaddl	x0, w0, w20, x3
    3528:	cmp	x3, x0
    352c:	b.ne	3540 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x118>  // b.any
    3530:	b	3958 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x530>
    3534:	add	x3, x3, #0x18
    3538:	cmp	x0, x3
    353c:	b.eq	3958 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x530>  // b.none
    3540:	ldr	x4, [x3]
    3544:	cmp	x1, x4
    3548:	b.ne	3534 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x10c>  // b.any
    354c:	ldr	x23, [x3, #16]
    3550:	str	x2, [sp, #96]
    3554:	mov	x0, x23
    3558:	ldr	x1, [x23]
    355c:	ldr	x1, [x1, #24]
    3560:	blr	x1
    3564:	tst	w0, #0xff
    3568:	b.eq	3754 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x32c>  // b.none
    356c:	ldr	w0, [sp, #520]
    3570:	ldr	w2, [sp, #524]
    3574:	cmp	w0, w2
    3578:	b.cs	35e8 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x1c0>  // b.hs, b.nlast
    357c:	ldr	x3, [sp, #512]
    3580:	ubfiz	x1, x0, #4, #32
    3584:	ldr	x6, [x25, x19, lsl #3]
    3588:	add	x5, x3, x1
    358c:	str	x6, [x3, x1]
    3590:	mov	w1, w0
    3594:	add	x1, x1, #0x1
    3598:	str	x23, [x5, #8]
    359c:	cmp	x1, w2, uxtw
    35a0:	b.hi	3918 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x4f0>  // b.pmore
    35a4:	add	w0, w0, #0x1
    35a8:	str	w0, [sp, #520]
    35ac:	cbnz	w0, 34f0 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0xc8>
    35b0:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    35b4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    35b8:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    35bc:	add	x3, x3, #0x0
    35c0:	add	x1, x1, #0x0
    35c4:	add	x0, x0, #0x0
    35c8:	mov	w2, #0xa7                  	// #167
    35cc:	bl	0 <__assert_fail>
    35d0:	mov	x1, #0x0                   	// #0
    35d4:	mov	x0, x21
    35d8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    35dc:	ldr	w3, [sp, #520]
    35e0:	ldr	w1, [sp, #524]
    35e4:	b	34b8 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x90>
    35e8:	mov	x0, x21
    35ec:	mov	x1, #0x0                   	// #0
    35f0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    35f4:	ldr	w0, [sp, #520]
    35f8:	ldr	w2, [sp, #524]
    35fc:	b	357c <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x154>
    3600:	mov	x1, x26
    3604:	mov	x0, x26
    3608:	bl	250 <_ZL27QualifiedNameOfImplicitNameRN4llvm6RecordEPNS_10MultiClassE>
    360c:	mov	x19, x0
    3610:	ldr	x0, [sp, #104]
    3614:	mov	x1, x0
    3618:	bl	250 <_ZL27QualifiedNameOfImplicitNameRN4llvm6RecordEPNS_10MultiClassE>
    361c:	adrp	x1, 0 <_ZN4llvm11StringRecTy6SharedE>
    3620:	ldr	x1, [x1]
    3624:	bl	0 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE>
    3628:	mov	x20, x0
    362c:	ldr	w1, [sp, #520]
    3630:	ldr	w0, [sp, #524]
    3634:	cmp	w1, w0
    3638:	b.cs	373c <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x314>  // b.hs, b.nlast
    363c:	ldr	x4, [sp, #512]
    3640:	ubfiz	x3, x1, #4, #32
    3644:	mov	w2, w1
    3648:	add	x5, x4, x3
    364c:	add	x2, x2, #0x1
    3650:	str	x19, [x4, x3]
    3654:	cmp	x2, w0, uxtw
    3658:	str	x20, [x5, #8]
    365c:	b.hi	3918 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x4f0>  // b.pmore
    3660:	add	w1, w1, #0x1
    3664:	str	w1, [sp, #520]
    3668:	cbz	w1, 35b0 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x188>
    366c:	ldr	x0, [sp, #104]
    3670:	add	x1, x26, #0x80
    3674:	mov	x2, x21
    3678:	mov	x5, #0x0                   	// #0
    367c:	add	x4, x0, #0x80
    3680:	mov	w3, #0x0                   	// #0
    3684:	ldr	x0, [sp, #112]
    3688:	bl	2030 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE>
    368c:	and	w19, w0, #0xff
    3690:	ldr	x0, [sp, #512]
    3694:	add	x21, x21, #0x10
    3698:	cmp	x0, x21
    369c:	b.eq	36c8 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x2a0>  // b.none
    36a0:	bl	0 <free>
    36a4:	mov	w0, w19
    36a8:	ldp	x29, x30, [sp]
    36ac:	ldp	x19, x20, [sp, #16]
    36b0:	ldp	x21, x22, [sp, #32]
    36b4:	ldp	x23, x24, [sp, #48]
    36b8:	ldp	x25, x26, [sp, #64]
    36bc:	ldp	x27, x28, [sp, #80]
    36c0:	add	sp, sp, #0x290
    36c4:	ret
    36c8:	mov	w0, w19
    36cc:	ldp	x29, x30, [sp]
    36d0:	ldp	x19, x20, [sp, #16]
    36d4:	ldp	x21, x22, [sp, #32]
    36d8:	ldp	x23, x24, [sp, #48]
    36dc:	ldp	x25, x26, [sp, #64]
    36e0:	ldp	x27, x28, [sp, #80]
    36e4:	add	sp, sp, #0x290
    36e8:	ret
    36ec:	add	x20, sp, #0x200
    36f0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    36f4:	mov	x0, x20
    36f8:	add	x1, x1, #0x0
    36fc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3700:	mov	w19, #0x1                   	// #1
    3704:	ldr	x3, [x24]
    3708:	mov	x2, x20
    370c:	add	x0, sp, #0x1e0
    3710:	mov	x1, #0x1                   	// #1
    3714:	str	x3, [sp, #480]
    3718:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    371c:	mov	w0, w19
    3720:	ldp	x29, x30, [sp]
    3724:	ldp	x19, x20, [sp, #16]
    3728:	ldp	x23, x24, [sp, #48]
    372c:	ldp	x25, x26, [sp, #64]
    3730:	ldp	x27, x28, [sp, #80]
    3734:	add	sp, sp, #0x290
    3738:	ret
    373c:	mov	x0, x21
    3740:	mov	x1, #0x0                   	// #0
    3744:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3748:	ldr	w1, [sp, #520]
    374c:	ldr	w0, [sp, #524]
    3750:	b	363c <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x214>
    3754:	add	x19, sp, #0xa0
    3758:	add	x20, sp, #0xb8
    375c:	mov	x0, x19
    3760:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3764:	add	x1, x1, #0x0
    3768:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    376c:	mov	w3, #0x109                 	// #265
    3770:	mov	x8, x20
    3774:	str	xzr, [sp, #136]
    3778:	mov	x0, x19
    377c:	add	x23, sp, #0xd0
    3780:	add	x1, sp, #0x88
    3784:	str	w22, [sp, #136]
    3788:	add	x19, sp, #0xe8
    378c:	str	xzr, [sp, #144]
    3790:	mov	x27, x20
    3794:	strh	w3, [sp, #152]
    3798:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    379c:	mov	x0, x23
    37a0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    37a4:	add	x1, x1, #0x0
    37a8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    37ac:	mov	x4, x19
    37b0:	mov	x1, x23
    37b4:	mov	x0, x27
    37b8:	mov	x8, x19
    37bc:	str	x4, [sp, #120]
    37c0:	add	x20, sp, #0x1c0
    37c4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    37c8:	add	x27, sp, #0x148
    37cc:	ldr	x2, [sp, #96]
    37d0:	add	x3, sp, #0x130
    37d4:	add	x5, sp, #0x100
    37d8:	str	x3, [sp, #112]
    37dc:	mov	x8, x20
    37e0:	add	x19, sp, #0x1e0
    37e4:	ldr	x0, [x2]
    37e8:	add	x2, sp, #0x118
    37ec:	stp	x5, x2, [sp, #96]
    37f0:	add	x28, sp, #0x160
    37f4:	add	x23, sp, #0x178
    37f8:	ldr	x1, [x0]
    37fc:	add	x25, sp, #0x190
    3800:	add	x22, sp, #0x1a8
    3804:	ldr	x1, [x1, #48]
    3808:	blr	x1
    380c:	ldr	x5, [sp, #96]
    3810:	mov	x1, x20
    3814:	mov	x0, x5
    3818:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    381c:	ldp	x0, x2, [sp, #96]
    3820:	ldr	x4, [sp, #120]
    3824:	mov	x8, x2
    3828:	mov	x1, x0
    382c:	mov	x0, x4
    3830:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3834:	ldr	x3, [sp, #112]
    3838:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    383c:	add	x1, x1, #0x0
    3840:	str	x3, [sp, #96]
    3844:	mov	x0, x3
    3848:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    384c:	ldp	x0, x8, [sp, #96]
    3850:	mov	x1, x0
    3854:	mov	x0, x8
    3858:	mov	x8, x27
    385c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3860:	ldr	x0, [x26]
    3864:	mov	x8, x19
    3868:	ldr	x1, [x0]
    386c:	ldr	x1, [x1, #48]
    3870:	blr	x1
    3874:	mov	x1, x19
    3878:	mov	x0, x28
    387c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3880:	add	x19, x19, #0x10
    3884:	mov	x8, x23
    3888:	mov	x1, x28
    388c:	mov	x0, x27
    3890:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3894:	mov	x0, x25
    3898:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    389c:	add	x1, x1, #0x0
    38a0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    38a4:	mov	x8, x22
    38a8:	mov	x1, x25
    38ac:	mov	x0, x23
    38b0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    38b4:	ldr	x3, [x24]
    38b8:	add	x0, sp, #0x80
    38bc:	mov	x2, x22
    38c0:	mov	x1, #0x1                   	// #1
    38c4:	str	x3, [sp, #128]
    38c8:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    38cc:	ldr	x0, [sp, #480]
    38d0:	cmp	x0, x19
    38d4:	b.eq	38dc <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x4b4>  // b.none
    38d8:	bl	0 <_ZdlPv>
    38dc:	ldr	x0, [sp, #448]
    38e0:	add	x20, x20, #0x10
    38e4:	cmp	x0, x20
    38e8:	b.eq	38f0 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x4c8>  // b.none
    38ec:	bl	0 <_ZdlPv>
    38f0:	mov	w19, #0x1                   	// #1
    38f4:	b	3690 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x268>
    38f8:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    38fc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3900:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3904:	add	x3, x3, #0x0
    3908:	add	x1, x1, #0x0
    390c:	add	x0, x0, #0x0
    3910:	mov	w2, #0xfa                  	// #250
    3914:	bl	0 <__assert_fail>
    3918:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    391c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3920:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3924:	add	x3, x3, #0x0
    3928:	add	x1, x1, #0x0
    392c:	add	x0, x0, #0x0
    3930:	mov	w2, #0x43                  	// #67
    3934:	bl	0 <__assert_fail>
    3938:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    393c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3940:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3944:	add	x3, x3, #0x0
    3948:	add	x1, x1, #0x0
    394c:	add	x0, x0, #0x0
    3950:	mov	w2, #0x95                  	// #149
    3954:	bl	0 <__assert_fail>
    3958:	mov	x0, #0x0                   	// #0
    395c:	ldr	x0, [x0, #16]
    3960:	brk	#0x3e8
    3964:	nop

0000000000003968 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE>:
    3968:	stp	x29, x30, [sp, #-192]!
    396c:	mov	x2, x0
    3970:	mov	x29, sp
    3974:	ldr	x5, [x1]
    3978:	stp	x19, x20, [sp, #16]
    397c:	cbz	x5, 39b4 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x4c>
    3980:	ldr	x0, [x1, #8]
    3984:	cbnz	x0, 3acc <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x164>
    3988:	ldp	x0, x3, [x2, #272]
    398c:	cmp	x3, x0
    3990:	b.eq	3a20 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0xb8>  // b.none
    3994:	ldur	x0, [x3, #-8]
    3998:	mov	w19, #0x0                   	// #0
    399c:	add	x0, x0, #0x18
    39a0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    39a4:	mov	w0, w19
    39a8:	ldp	x19, x20, [sp, #16]
    39ac:	ldp	x29, x30, [sp], #192
    39b0:	ret
    39b4:	ldp	x4, x3, [x0, #272]
    39b8:	cmp	x3, x4
    39bc:	b.ne	3994 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x2c>  // b.any
    39c0:	ldr	x6, [x1, #8]
    39c4:	ldr	x4, [x0, #328]
    39c8:	cbz	x6, 3a24 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0xbc>
    39cc:	cmp	x4, #0x0
    39d0:	mov	x1, x6
    39d4:	mov	x6, #0x800000000           	// #34359738368
    39d8:	add	x2, sp, #0x30
    39dc:	add	x5, x4, #0x80
    39e0:	add	x20, x2, #0x10
    39e4:	csel	x4, x5, x4, ne  // ne = any
    39e8:	cset	w3, eq  // eq = none
    39ec:	mov	x5, #0x0                   	// #0
    39f0:	stp	x20, x6, [sp, #48]
    39f4:	bl	2a40 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE>
    39f8:	ldr	x1, [sp, #48]
    39fc:	and	w19, w0, #0xff
    3a00:	cmp	x1, x20
    3a04:	b.eq	39a4 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x3c>  // b.none
    3a08:	mov	x0, x1
    3a0c:	bl	0 <free>
    3a10:	mov	w0, w19
    3a14:	ldp	x19, x20, [sp, #16]
    3a18:	ldp	x29, x30, [sp], #192
    3a1c:	ret
    3a20:	ldr	x4, [x2, #328]
    3a24:	cbz	x4, 3a44 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0xdc>
    3a28:	add	x0, x4, #0x80
    3a2c:	mov	w19, #0x0                   	// #0
    3a30:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3a34:	mov	w0, w19
    3a38:	ldp	x19, x20, [sp, #16]
    3a3c:	ldp	x29, x30, [sp], #192
    3a40:	ret
    3a44:	str	xzr, [x1]
    3a48:	mov	x0, x2
    3a4c:	add	x1, sp, #0x30
    3a50:	str	x5, [sp, #48]
    3a54:	bl	1738 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
    3a58:	and	w19, w0, #0xff
    3a5c:	ldr	x20, [sp, #48]
    3a60:	cbz	x20, 39a4 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x3c>
    3a64:	ldr	x0, [x20, #88]
    3a68:	stp	x21, x22, [sp, #32]
    3a6c:	add	x1, x20, #0x68
    3a70:	add	x22, x20, #0x58
    3a74:	cmp	x0, x1
    3a78:	b.eq	3a80 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x118>  // b.none
    3a7c:	bl	0 <free>
    3a80:	ldr	x0, [x20, #72]
    3a84:	add	x21, x20, #0x48
    3a88:	cmp	x22, x0
    3a8c:	b.eq	3a94 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x12c>  // b.none
    3a90:	bl	0 <free>
    3a94:	ldr	x0, [x20, #56]
    3a98:	cmp	x21, x0
    3a9c:	b.eq	3aa4 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x13c>  // b.none
    3aa0:	bl	0 <free>
    3aa4:	ldr	x0, [x20, #8]
    3aa8:	add	x1, x20, #0x18
    3aac:	cmp	x0, x1
    3ab0:	b.eq	3ab8 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x150>  // b.none
    3ab4:	bl	0 <free>
    3ab8:	mov	x0, x20
    3abc:	mov	x1, #0x80                  	// #128
    3ac0:	bl	0 <_ZdlPvm>
    3ac4:	ldp	x21, x22, [sp, #32]
    3ac8:	b	39a4 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x3c>
    3acc:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3ad0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3ad4:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3ad8:	add	x3, x3, #0x0
    3adc:	add	x1, x1, #0x0
    3ae0:	add	x0, x0, #0x0
    3ae4:	mov	w2, #0x159                 	// #345
    3ae8:	stp	x21, x22, [sp, #32]
    3aec:	bl	0 <__assert_fail>

0000000000003af0 <_ZNK4llvm11ForeachLoop4dumpEv>:
    3af0:	stp	x29, x30, [sp, #-112]!
    3af4:	mov	x29, sp
    3af8:	stp	x19, x20, [sp, #16]
    3afc:	mov	x20, x0
    3b00:	stp	x21, x22, [sp, #32]
    3b04:	bl	0 <_ZN4llvm4errsEv>
    3b08:	ldp	x1, x2, [x0, #16]
    3b0c:	sub	x1, x1, x2
    3b10:	cmp	x1, #0x7
    3b14:	b.ls	3d00 <_ZNK4llvm11ForeachLoop4dumpEv+0x210>  // b.plast
    3b18:	mov	x19, x0
    3b1c:	mov	x0, #0x6f66                	// #28518
    3b20:	movk	x0, #0x6572, lsl #16
    3b24:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3b28:	movk	x0, #0x6361, lsl #32
    3b2c:	add	x1, x1, #0x0
    3b30:	movk	x0, #0x2068, lsl #48
    3b34:	str	x0, [x2]
    3b38:	ldr	x0, [x19, #24]
    3b3c:	add	x0, x0, #0x8
    3b40:	str	x0, [x19, #24]
    3b44:	ldr	x0, [x20, #8]
    3b48:	ldr	x2, [x0]
    3b4c:	ldr	x2, [x2, #40]
    3b50:	cmp	x2, x1
    3b54:	b.ne	3d30 <_ZNK4llvm11ForeachLoop4dumpEv+0x240>  // b.any
    3b58:	bl	0 <_ZNK4llvm7VarInit7getNameEv>
    3b5c:	add	x21, sp, #0x30
    3b60:	mov	x2, x1
    3b64:	mov	x1, x0
    3b68:	cbz	x0, 3ca8 <_ZNK4llvm11ForeachLoop4dumpEv+0x1b8>
    3b6c:	add	x4, x21, #0x10
    3b70:	add	x2, x0, x2
    3b74:	mov	w3, #0x0                   	// #0
    3b78:	mov	x0, x21
    3b7c:	str	x4, [sp, #48]
    3b80:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3b84:	ldp	x1, x2, [sp, #48]
    3b88:	mov	x0, x19
    3b8c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3b90:	mov	x19, x0
    3b94:	ldp	x1, x2, [x0, #16]
    3b98:	sub	x1, x1, x2
    3b9c:	cmp	x1, #0x2
    3ba0:	b.ls	3cd4 <_ZNK4llvm11ForeachLoop4dumpEv+0x1e4>  // b.plast
    3ba4:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3ba8:	add	x0, x0, #0x0
    3bac:	ldrh	w1, [x0]
    3bb0:	ldrb	w0, [x0, #2]
    3bb4:	strh	w1, [x2]
    3bb8:	strb	w0, [x2, #2]
    3bbc:	ldr	x0, [x19, #24]
    3bc0:	add	x0, x0, #0x3
    3bc4:	str	x0, [x19, #24]
    3bc8:	ldr	x0, [x20, #16]
    3bcc:	add	x22, sp, #0x50
    3bd0:	mov	x8, x22
    3bd4:	ldr	x1, [x0]
    3bd8:	ldr	x1, [x1, #40]
    3bdc:	blr	x1
    3be0:	ldp	x1, x2, [sp, #80]
    3be4:	mov	x0, x19
    3be8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3bec:	mov	x1, x0
    3bf0:	ldp	x2, x3, [x0, #16]
    3bf4:	sub	x2, x2, x3
    3bf8:	cmp	x2, #0x5
    3bfc:	b.ls	3cec <_ZNK4llvm11ForeachLoop4dumpEv+0x1fc>  // b.plast
    3c00:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3c04:	add	x0, x0, #0x0
    3c08:	ldr	w2, [x0]
    3c0c:	ldrh	w0, [x0, #4]
    3c10:	str	w2, [x3]
    3c14:	strh	w0, [x3, #4]
    3c18:	ldr	x0, [x1, #24]
    3c1c:	add	x0, x0, #0x6
    3c20:	str	x0, [x1, #24]
    3c24:	ldr	x0, [sp, #80]
    3c28:	add	x22, x22, #0x10
    3c2c:	cmp	x0, x22
    3c30:	b.eq	3c38 <_ZNK4llvm11ForeachLoop4dumpEv+0x148>  // b.none
    3c34:	bl	0 <_ZdlPv>
    3c38:	ldr	x0, [sp, #48]
    3c3c:	add	x21, x21, #0x10
    3c40:	cmp	x0, x21
    3c44:	b.eq	3c4c <_ZNK4llvm11ForeachLoop4dumpEv+0x15c>  // b.none
    3c48:	bl	0 <_ZdlPv>
    3c4c:	ldp	x19, x20, [x20, #24]
    3c50:	cmp	x19, x20
    3c54:	b.eq	3c6c <_ZNK4llvm11ForeachLoop4dumpEv+0x17c>  // b.none
    3c58:	mov	x0, x19
    3c5c:	add	x19, x19, #0x10
    3c60:	bl	3d68 <_ZNK4llvm12RecordsEntry4dumpEv>
    3c64:	cmp	x20, x19
    3c68:	b.ne	3c58 <_ZNK4llvm11ForeachLoop4dumpEv+0x168>  // b.any
    3c6c:	bl	0 <_ZN4llvm4errsEv>
    3c70:	mov	x1, x0
    3c74:	ldp	x2, x3, [x0, #16]
    3c78:	sub	x2, x2, x3
    3c7c:	cmp	x2, #0x1
    3c80:	b.ls	3d44 <_ZNK4llvm11ForeachLoop4dumpEv+0x254>  // b.plast
    3c84:	mov	w0, #0xa7d                 	// #2685
    3c88:	strh	w0, [x3]
    3c8c:	ldr	x0, [x1, #24]
    3c90:	ldp	x19, x20, [sp, #16]
    3c94:	add	x0, x0, #0x2
    3c98:	str	x0, [x1, #24]
    3c9c:	ldp	x21, x22, [sp, #32]
    3ca0:	ldp	x29, x30, [sp], #112
    3ca4:	ret
    3ca8:	add	x1, x21, #0x10
    3cac:	mov	x2, #0x0                   	// #0
    3cb0:	mov	x0, x19
    3cb4:	stp	x1, xzr, [sp, #48]
    3cb8:	strb	wzr, [sp, #64]
    3cbc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3cc0:	ldp	x1, x2, [x0, #16]
    3cc4:	mov	x19, x0
    3cc8:	sub	x1, x1, x2
    3ccc:	cmp	x1, #0x2
    3cd0:	b.hi	3ba4 <_ZNK4llvm11ForeachLoop4dumpEv+0xb4>  // b.pmore
    3cd4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3cd8:	mov	x2, #0x3                   	// #3
    3cdc:	add	x1, x1, #0x0
    3ce0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3ce4:	mov	x19, x0
    3ce8:	b	3bc8 <_ZNK4llvm11ForeachLoop4dumpEv+0xd8>
    3cec:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3cf0:	mov	x2, #0x6                   	// #6
    3cf4:	add	x1, x1, #0x0
    3cf8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3cfc:	b	3c24 <_ZNK4llvm11ForeachLoop4dumpEv+0x134>
    3d00:	mov	x2, #0x8                   	// #8
    3d04:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3d08:	add	x1, x1, #0x0
    3d0c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3d10:	mov	x19, x0
    3d14:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3d18:	ldr	x0, [x20, #8]
    3d1c:	add	x1, x1, #0x0
    3d20:	ldr	x2, [x0]
    3d24:	ldr	x2, [x2, #40]
    3d28:	cmp	x2, x1
    3d2c:	b.eq	3b58 <_ZNK4llvm11ForeachLoop4dumpEv+0x68>  // b.none
    3d30:	add	x21, sp, #0x30
    3d34:	mov	x8, x21
    3d38:	blr	x2
    3d3c:	ldp	x1, x2, [sp, #48]
    3d40:	b	3b88 <_ZNK4llvm11ForeachLoop4dumpEv+0x98>
    3d44:	mov	x2, #0x2                   	// #2
    3d48:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3d4c:	add	x1, x1, #0x0
    3d50:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3d54:	ldp	x19, x20, [sp, #16]
    3d58:	ldp	x21, x22, [sp, #32]
    3d5c:	ldp	x29, x30, [sp], #112
    3d60:	ret
    3d64:	nop

0000000000003d68 <_ZNK4llvm12RecordsEntry4dumpEv>:
    3d68:	stp	x29, x30, [sp, #-32]!
    3d6c:	mov	x29, sp
    3d70:	str	x19, [sp, #16]
    3d74:	mov	x19, x0
    3d78:	ldr	x0, [x0, #8]
    3d7c:	cbz	x0, 3d84 <_ZNK4llvm12RecordsEntry4dumpEv+0x1c>
    3d80:	bl	3af0 <_ZNK4llvm11ForeachLoop4dumpEv>
    3d84:	ldr	x0, [x19]
    3d88:	cbz	x0, 3d98 <_ZNK4llvm12RecordsEntry4dumpEv+0x30>
    3d8c:	ldr	x19, [sp, #16]
    3d90:	ldp	x29, x30, [sp], #32
    3d94:	b	0 <_ZNK4llvm6Record4dumpEv>
    3d98:	ldr	x19, [sp, #16]
    3d9c:	ldp	x29, x30, [sp], #32
    3da0:	ret
    3da4:	nop

0000000000003da8 <_ZNK4llvm10MultiClass4dumpEv>:
    3da8:	stp	x29, x30, [sp, #-32]!
    3dac:	mov	x29, sp
    3db0:	stp	x19, x20, [sp, #16]
    3db4:	mov	x20, x0
    3db8:	bl	0 <_ZN4llvm4errsEv>
    3dbc:	ldp	x2, x3, [x0, #16]
    3dc0:	sub	x2, x2, x3
    3dc4:	cmp	x2, #0x7
    3dc8:	b.ls	3e60 <_ZNK4llvm10MultiClass4dumpEv+0xb8>  // b.plast
    3dcc:	mov	x1, x0
    3dd0:	mov	x0, #0x6552                	// #25938
    3dd4:	movk	x0, #0x6f63, lsl #16
    3dd8:	movk	x0, #0x6472, lsl #32
    3ddc:	movk	x0, #0xa3a, lsl #48
    3de0:	str	x0, [x3]
    3de4:	ldr	x0, [x1, #24]
    3de8:	add	x0, x0, #0x8
    3dec:	str	x0, [x1, #24]
    3df0:	mov	x0, x20
    3df4:	bl	0 <_ZNK4llvm6Record4dumpEv>
    3df8:	bl	0 <_ZN4llvm4errsEv>
    3dfc:	mov	x1, x0
    3e00:	ldp	x2, x3, [x0, #16]
    3e04:	sub	x2, x2, x3
    3e08:	cmp	x2, #0x5
    3e0c:	b.ls	3e90 <_ZNK4llvm10MultiClass4dumpEv+0xe8>  // b.plast
    3e10:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3e14:	add	x0, x0, #0x0
    3e18:	ldr	w2, [x0]
    3e1c:	ldrh	w0, [x0, #4]
    3e20:	str	w2, [x3]
    3e24:	strh	w0, [x3, #4]
    3e28:	ldr	x0, [x1, #24]
    3e2c:	add	x0, x0, #0x6
    3e30:	str	x0, [x1, #24]
    3e34:	ldp	x19, x20, [x20, #128]
    3e38:	cmp	x19, x20
    3e3c:	b.eq	3e54 <_ZNK4llvm10MultiClass4dumpEv+0xac>  // b.none
    3e40:	mov	x0, x19
    3e44:	add	x19, x19, #0x10
    3e48:	bl	3d68 <_ZNK4llvm12RecordsEntry4dumpEv>
    3e4c:	cmp	x20, x19
    3e50:	b.ne	3e40 <_ZNK4llvm10MultiClass4dumpEv+0x98>  // b.any
    3e54:	ldp	x19, x20, [sp, #16]
    3e58:	ldp	x29, x30, [sp], #32
    3e5c:	ret
    3e60:	mov	x2, #0x8                   	// #8
    3e64:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3e68:	add	x1, x1, #0x0
    3e6c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3e70:	mov	x0, x20
    3e74:	bl	0 <_ZNK4llvm6Record4dumpEv>
    3e78:	bl	0 <_ZN4llvm4errsEv>
    3e7c:	mov	x1, x0
    3e80:	ldp	x2, x3, [x0, #16]
    3e84:	sub	x2, x2, x3
    3e88:	cmp	x2, #0x5
    3e8c:	b.hi	3e10 <_ZNK4llvm10MultiClass4dumpEv+0x68>  // b.pmore
    3e90:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3e94:	mov	x2, #0x6                   	// #6
    3e98:	add	x1, x1, #0x0
    3e9c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3ea0:	b	3e34 <_ZNK4llvm10MultiClass4dumpEv+0x8c>
    3ea4:	nop

0000000000003ea8 <_ZNK4llvm22SubMultiClassReference4dumpEv>:
    3ea8:	stp	x29, x30, [sp, #-32]!
    3eac:	mov	x29, sp
    3eb0:	stp	x19, x20, [sp, #16]
    3eb4:	mov	x20, x0
    3eb8:	bl	0 <_ZN4llvm4errsEv>
    3ebc:	ldp	x2, x3, [x0, #16]
    3ec0:	sub	x2, x2, x3
    3ec4:	cmp	x2, #0xb
    3ec8:	b.ls	3f6c <_ZNK4llvm22SubMultiClassReference4dumpEv+0xc4>  // b.plast
    3ecc:	mov	x1, x0
    3ed0:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3ed4:	add	x0, x0, #0x0
    3ed8:	ldr	x2, [x0]
    3edc:	str	x2, [x3]
    3ee0:	ldr	w0, [x0, #8]
    3ee4:	str	w0, [x3, #8]
    3ee8:	ldr	x0, [x1, #24]
    3eec:	add	x0, x0, #0xc
    3ef0:	str	x0, [x1, #24]
    3ef4:	ldr	x0, [x20, #16]
    3ef8:	bl	3da8 <_ZNK4llvm10MultiClass4dumpEv>
    3efc:	bl	0 <_ZN4llvm4errsEv>
    3f00:	mov	x1, x0
    3f04:	ldp	x2, x3, [x0, #16]
    3f08:	sub	x2, x2, x3
    3f0c:	cmp	x2, #0xe
    3f10:	b.ls	3f9c <_ZNK4llvm22SubMultiClassReference4dumpEv+0xf4>  // b.plast
    3f14:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3f18:	add	x0, x0, #0x0
    3f1c:	ldr	x2, [x0]
    3f20:	str	x2, [x3]
    3f24:	ldur	x0, [x0, #7]
    3f28:	stur	x0, [x3, #7]
    3f2c:	ldr	x0, [x1, #24]
    3f30:	add	x0, x0, #0xf
    3f34:	str	x0, [x1, #24]
    3f38:	ldr	x19, [x20, #24]
    3f3c:	ldr	w20, [x20, #32]
    3f40:	add	x20, x19, x20, lsl #3
    3f44:	cmp	x19, x20
    3f48:	b.eq	3f60 <_ZNK4llvm22SubMultiClassReference4dumpEv+0xb8>  // b.none
    3f4c:	nop
    3f50:	ldr	x0, [x19], #8
    3f54:	bl	0 <_ZNK4llvm4Init4dumpEv>
    3f58:	cmp	x20, x19
    3f5c:	b.ne	3f50 <_ZNK4llvm22SubMultiClassReference4dumpEv+0xa8>  // b.any
    3f60:	ldp	x19, x20, [sp, #16]
    3f64:	ldp	x29, x30, [sp], #32
    3f68:	ret
    3f6c:	mov	x2, #0xc                   	// #12
    3f70:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3f74:	add	x1, x1, #0x0
    3f78:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3f7c:	ldr	x0, [x20, #16]
    3f80:	bl	3da8 <_ZNK4llvm10MultiClass4dumpEv>
    3f84:	bl	0 <_ZN4llvm4errsEv>
    3f88:	mov	x1, x0
    3f8c:	ldp	x2, x3, [x0, #16]
    3f90:	sub	x2, x2, x3
    3f94:	cmp	x2, #0xe
    3f98:	b.hi	3f14 <_ZNK4llvm22SubMultiClassReference4dumpEv+0x6c>  // b.pmore
    3f9c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3fa0:	mov	x2, #0xf                   	// #15
    3fa4:	add	x1, x1, #0x0
    3fa8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3fac:	b	3f38 <_ZNK4llvm22SubMultiClassReference4dumpEv+0x90>

0000000000003fb0 <_ZN4llvm8TGParser12ParseClassIDEv>:
    3fb0:	stp	x29, x30, [sp, #-272]!
    3fb4:	mov	x29, sp
    3fb8:	stp	x19, x20, [sp, #16]
    3fbc:	mov	x19, x0
    3fc0:	ldr	w0, [x0, #40]
    3fc4:	stp	x21, x22, [sp, #32]
    3fc8:	cmp	w0, #0x48
    3fcc:	b.ne	439c <_ZN4llvm8TGParser12ParseClassIDEv+0x3ec>  // b.any
    3fd0:	ldr	x0, [x19, #344]
    3fd4:	stp	x23, x24, [sp, #48]
    3fd8:	stp	x25, x26, [sp, #64]
    3fdc:	add	x25, x0, #0x8
    3fe0:	ldr	x20, [x0, #16]
    3fe4:	ldp	x24, x21, [x19, #48]
    3fe8:	cbz	x20, 4060 <_ZN4llvm8TGParser12ParseClassIDEv+0xb0>
    3fec:	mov	x23, x25
    3ff0:	ldp	x0, x22, [x20, #32]
    3ff4:	cmp	x21, x22
    3ff8:	b.cc	4314 <_ZN4llvm8TGParser12ParseClassIDEv+0x364>  // b.lo, b.ul, b.last
    3ffc:	cbz	x22, 4010 <_ZN4llvm8TGParser12ParseClassIDEv+0x60>
    4000:	mov	x2, x22
    4004:	mov	x1, x24
    4008:	bl	0 <memcmp>
    400c:	cbnz	w0, 4328 <_ZN4llvm8TGParser12ParseClassIDEv+0x378>
    4010:	cmp	x21, x22
    4014:	b.eq	432c <_ZN4llvm8TGParser12ParseClassIDEv+0x37c>  // b.none
    4018:	cmp	x21, x22
    401c:	b.ls	432c <_ZN4llvm8TGParser12ParseClassIDEv+0x37c>  // b.plast
    4020:	ldr	x20, [x20, #24]
    4024:	cbnz	x20, 3ff0 <_ZN4llvm8TGParser12ParseClassIDEv+0x40>
    4028:	cmp	x25, x23
    402c:	b.eq	4060 <_ZN4llvm8TGParser12ParseClassIDEv+0xb0>  // b.none
    4030:	ldp	x1, x20, [x23, #32]
    4034:	cmp	x21, x20
    4038:	b.hi	4348 <_ZN4llvm8TGParser12ParseClassIDEv+0x398>  // b.pmore
    403c:	cbz	x21, 4050 <_ZN4llvm8TGParser12ParseClassIDEv+0xa0>
    4040:	mov	x0, x24
    4044:	mov	x2, x21
    4048:	bl	0 <memcmp>
    404c:	cbnz	w0, 435c <_ZN4llvm8TGParser12ParseClassIDEv+0x3ac>
    4050:	cmp	x21, x20
    4054:	b.eq	4360 <_ZN4llvm8TGParser12ParseClassIDEv+0x3b0>  // b.none
    4058:	cmp	x21, x20
    405c:	b.cs	4360 <_ZN4llvm8TGParser12ParseClassIDEv+0x3b0>  // b.hs, b.nlast
    4060:	add	x25, x19, #0x30
    4064:	add	x21, sp, #0xf0
    4068:	mov	x1, x25
    406c:	mov	x8, x21
    4070:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4074:	add	x0, x0, #0x0
    4078:	stp	x27, x28, [sp, #80]
    407c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4080:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    4084:	ldr	x1, [sp, #248]
    4088:	cmp	x1, x0
    408c:	b.eq	4454 <_ZN4llvm8TGParser12ParseClassIDEv+0x4a4>  // b.none
    4090:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4094:	mov	x2, #0x1                   	// #1
    4098:	add	x1, x0, #0x0
    409c:	mov	x0, x21
    40a0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    40a4:	add	x1, sp, #0x90
    40a8:	mov	x2, x1
    40ac:	mov	x1, x0
    40b0:	str	x2, [sp, #96]
    40b4:	add	x2, x2, #0x10
    40b8:	str	x2, [sp, #144]
    40bc:	ldr	x2, [x1], #16
    40c0:	cmp	x2, x1
    40c4:	b.eq	4414 <_ZN4llvm8TGParser12ParseClassIDEv+0x464>  // b.none
    40c8:	ldr	x3, [x0, #16]
    40cc:	str	x2, [sp, #144]
    40d0:	str	x3, [sp, #160]
    40d4:	ldr	x2, [x0, #8]
    40d8:	str	x2, [sp, #152]
    40dc:	stp	x1, xzr, [x0]
    40e0:	add	x1, x21, #0x10
    40e4:	strb	wzr, [x0, #16]
    40e8:	ldr	x0, [sp, #240]
    40ec:	cmp	x0, x1
    40f0:	b.eq	40f8 <_ZN4llvm8TGParser12ParseClassIDEv+0x148>  // b.none
    40f4:	bl	0 <_ZdlPv>
    40f8:	ldr	w0, [x19, #40]
    40fc:	sub	w0, w0, #0x48
    4100:	cmp	w0, #0x3
    4104:	b.hi	4460 <_ZN4llvm8TGParser12ParseClassIDEv+0x4b0>  // b.pmore
    4108:	ldr	x28, [x19, #240]
    410c:	add	x0, x19, #0xe8
    4110:	str	x0, [sp, #104]
    4114:	cbz	x28, 43e8 <_ZN4llvm8TGParser12ParseClassIDEv+0x438>
    4118:	ldp	x26, x27, [x19, #48]
    411c:	mov	x20, x0
    4120:	mov	x24, #0x7fffffff            	// #2147483647
    4124:	mov	x23, #0xffffffff80000000    	// #-2147483648
    4128:	ldr	x22, [x28, #40]
    412c:	cmp	x22, x27
    4130:	csel	x2, x22, x27, ls  // ls = plast
    4134:	cbz	x2, 4148 <_ZN4llvm8TGParser12ParseClassIDEv+0x198>
    4138:	ldr	x0, [x28, #32]
    413c:	mov	x1, x26
    4140:	bl	0 <memcmp>
    4144:	cbnz	w0, 415c <_ZN4llvm8TGParser12ParseClassIDEv+0x1ac>
    4148:	sub	x0, x22, x27
    414c:	cmp	x0, x24
    4150:	b.gt	4160 <_ZN4llvm8TGParser12ParseClassIDEv+0x1b0>
    4154:	cmp	x0, x23
    4158:	b.lt	433c <_ZN4llvm8TGParser12ParseClassIDEv+0x38c>  // b.tstop
    415c:	tbnz	w0, #31, 433c <_ZN4llvm8TGParser12ParseClassIDEv+0x38c>
    4160:	mov	x20, x28
    4164:	ldr	x28, [x28, #16]
    4168:	cbnz	x28, 4128 <_ZN4llvm8TGParser12ParseClassIDEv+0x178>
    416c:	ldr	x0, [sp, #104]
    4170:	cmp	x0, x20
    4174:	b.eq	43ec <_ZN4llvm8TGParser12ParseClassIDEv+0x43c>  // b.none
    4178:	add	x1, x20, #0x20
    417c:	mov	x0, x25
    4180:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>
    4184:	tbnz	w0, #31, 43ec <_ZN4llvm8TGParser12ParseClassIDEv+0x43c>
    4188:	ldr	x0, [x20, #64]
    418c:	cbz	x0, 442c <_ZN4llvm8TGParser12ParseClassIDEv+0x47c>
    4190:	ldp	x1, x2, [sp, #144]
    4194:	add	x20, sp, #0xb0
    4198:	add	x4, x20, #0x10
    419c:	mov	x0, x20
    41a0:	mov	w3, #0x0                   	// #0
    41a4:	str	x4, [sp, #176]
    41a8:	add	x2, x1, x2
    41ac:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    41b0:	ldr	x1, [sp, #184]
    41b4:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    41b8:	sub	x0, x0, x1
    41bc:	cmp	x0, #0x2c
    41c0:	b.ls	4454 <_ZN4llvm8TGParser12ParseClassIDEv+0x4a4>  // b.plast
    41c4:	mov	x0, x20
    41c8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    41cc:	mov	x2, #0x2d                  	// #45
    41d0:	add	x1, x1, #0x0
    41d4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    41d8:	ldr	w0, [x19, #40]
    41dc:	sub	w0, w0, #0x48
    41e0:	cmp	w0, #0x3
    41e4:	b.hi	4460 <_ZN4llvm8TGParser12ParseClassIDEv+0x4b0>  // b.pmore
    41e8:	ldp	x1, x2, [x19, #48]
    41ec:	mov	x0, x20
    41f0:	add	x23, sp, #0xd0
    41f4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    41f8:	mov	x1, x0
    41fc:	add	x2, x23, #0x10
    4200:	str	x2, [sp, #208]
    4204:	ldr	x2, [x1], #16
    4208:	cmp	x2, x1
    420c:	b.eq	4420 <_ZN4llvm8TGParser12ParseClassIDEv+0x470>  // b.none
    4210:	str	x2, [sp, #208]
    4214:	ldr	x2, [x0, #16]
    4218:	str	x2, [sp, #224]
    421c:	ldr	x2, [x0, #8]
    4220:	str	x2, [sp, #216]
    4224:	stp	x1, xzr, [x0]
    4228:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
    422c:	strb	wzr, [x0, #16]
    4230:	ldr	x0, [sp, #216]
    4234:	cmp	x0, x2
    4238:	b.eq	4454 <_ZN4llvm8TGParser12ParseClassIDEv+0x4a4>  // b.none
    423c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4240:	mov	x2, #0x1                   	// #1
    4244:	add	x1, x0, #0x0
    4248:	mov	x0, x23
    424c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    4250:	mov	x3, x0
    4254:	add	x1, x21, #0x10
    4258:	str	x1, [sp, #240]
    425c:	ldr	x1, [x0], #16
    4260:	cmp	x1, x0
    4264:	b.eq	4448 <_ZN4llvm8TGParser12ParseClassIDEv+0x498>  // b.none
    4268:	str	x1, [sp, #240]
    426c:	ldr	x1, [x3, #16]
    4270:	str	x1, [sp, #256]
    4274:	ldr	x2, [x3, #8]
    4278:	str	x2, [sp, #248]
    427c:	mov	x1, x21
    4280:	stp	x0, xzr, [x3]
    4284:	add	x24, sp, #0x78
    4288:	strb	wzr, [x3, #16]
    428c:	mov	x0, x24
    4290:	add	x21, x21, #0x10
    4294:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4298:	mov	x0, x19
    429c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    42a0:	mov	x3, x0
    42a4:	mov	x2, x24
    42a8:	add	x0, sp, #0x70
    42ac:	mov	x1, #0x1                   	// #1
    42b0:	str	x3, [sp, #112]
    42b4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    42b8:	ldr	x0, [sp, #240]
    42bc:	cmp	x0, x21
    42c0:	b.eq	42c8 <_ZN4llvm8TGParser12ParseClassIDEv+0x318>  // b.none
    42c4:	bl	0 <_ZdlPv>
    42c8:	ldr	x0, [sp, #208]
    42cc:	add	x23, x23, #0x10
    42d0:	cmp	x0, x23
    42d4:	b.eq	42dc <_ZN4llvm8TGParser12ParseClassIDEv+0x32c>  // b.none
    42d8:	bl	0 <_ZdlPv>
    42dc:	ldr	x0, [sp, #176]
    42e0:	add	x20, x20, #0x10
    42e4:	cmp	x0, x20
    42e8:	b.eq	42f0 <_ZN4llvm8TGParser12ParseClassIDEv+0x340>  // b.none
    42ec:	bl	0 <_ZdlPv>
    42f0:	ldr	x1, [sp, #96]
    42f4:	ldr	x0, [sp, #144]
    42f8:	add	x22, x1, #0x10
    42fc:	cmp	x0, x22
    4300:	b.eq	4308 <_ZN4llvm8TGParser12ParseClassIDEv+0x358>  // b.none
    4304:	bl	0 <_ZdlPv>
    4308:	mov	x20, #0x0                   	// #0
    430c:	ldp	x27, x28, [sp, #80]
    4310:	b	4368 <_ZN4llvm8TGParser12ParseClassIDEv+0x3b8>
    4314:	cbz	x21, 432c <_ZN4llvm8TGParser12ParseClassIDEv+0x37c>
    4318:	mov	x2, x21
    431c:	mov	x1, x24
    4320:	bl	0 <memcmp>
    4324:	cbz	w0, 4018 <_ZN4llvm8TGParser12ParseClassIDEv+0x68>
    4328:	tbnz	w0, #31, 4020 <_ZN4llvm8TGParser12ParseClassIDEv+0x70>
    432c:	mov	x23, x20
    4330:	ldr	x20, [x20, #16]
    4334:	cbnz	x20, 3ff0 <_ZN4llvm8TGParser12ParseClassIDEv+0x40>
    4338:	b	4028 <_ZN4llvm8TGParser12ParseClassIDEv+0x78>
    433c:	ldr	x28, [x28, #24]
    4340:	cbnz	x28, 4128 <_ZN4llvm8TGParser12ParseClassIDEv+0x178>
    4344:	b	416c <_ZN4llvm8TGParser12ParseClassIDEv+0x1bc>
    4348:	cbz	x20, 4360 <_ZN4llvm8TGParser12ParseClassIDEv+0x3b0>
    434c:	mov	x0, x24
    4350:	mov	x2, x20
    4354:	bl	0 <memcmp>
    4358:	cbz	w0, 4058 <_ZN4llvm8TGParser12ParseClassIDEv+0xa8>
    435c:	tbnz	w0, #31, 4060 <_ZN4llvm8TGParser12ParseClassIDEv+0xb0>
    4360:	ldr	x20, [x23, #64]
    4364:	cbz	x20, 4060 <_ZN4llvm8TGParser12ParseClassIDEv+0xb0>
    4368:	ldp	x2, x1, [x19, #8]
    436c:	mov	x0, x19
    4370:	cmp	x2, x1
    4374:	cset	w1, eq  // eq = none
    4378:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    437c:	ldp	x23, x24, [sp, #48]
    4380:	ldp	x25, x26, [sp, #64]
    4384:	str	w0, [x19, #40]
    4388:	mov	x0, x20
    438c:	ldp	x19, x20, [sp, #16]
    4390:	ldp	x21, x22, [sp, #32]
    4394:	ldp	x29, x30, [sp], #272
    4398:	ret
    439c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    43a0:	add	x1, x1, #0x0
    43a4:	add	x21, sp, #0xf0
    43a8:	mov	x20, #0x0                   	// #0
    43ac:	mov	x0, x21
    43b0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    43b4:	mov	x0, x19
    43b8:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    43bc:	mov	x3, x0
    43c0:	mov	x2, x21
    43c4:	add	x0, sp, #0xd0
    43c8:	mov	x1, #0x1                   	// #1
    43cc:	str	x3, [sp, #208]
    43d0:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    43d4:	mov	x0, x20
    43d8:	ldp	x19, x20, [sp, #16]
    43dc:	ldp	x21, x22, [sp, #32]
    43e0:	ldp	x29, x30, [sp], #272
    43e4:	ret
    43e8:	ldr	x20, [sp, #104]
    43ec:	mov	x1, x20
    43f0:	add	x4, sp, #0xd0
    43f4:	mov	x3, x21
    43f8:	add	x0, x19, #0xe0
    43fc:	adrp	x2, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4400:	add	x2, x2, #0x0
    4404:	str	x25, [sp, #240]
    4408:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    440c:	mov	x20, x0
    4410:	b	4188 <_ZN4llvm8TGParser12ParseClassIDEv+0x1d8>
    4414:	ldp	x2, x3, [x0, #16]
    4418:	stp	x2, x3, [sp, #160]
    441c:	b	40d4 <_ZN4llvm8TGParser12ParseClassIDEv+0x124>
    4420:	ldp	x2, x3, [x0, #16]
    4424:	stp	x2, x3, [sp, #224]
    4428:	b	421c <_ZN4llvm8TGParser12ParseClassIDEv+0x26c>
    442c:	ldr	x1, [sp, #96]
    4430:	mov	x0, x21
    4434:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4438:	mov	x1, x21
    443c:	mov	x0, x19
    4440:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4444:	b	42f0 <_ZN4llvm8TGParser12ParseClassIDEv+0x340>
    4448:	ldp	x4, x5, [x3, #16]
    444c:	stp	x4, x5, [sp, #256]
    4450:	b	4274 <_ZN4llvm8TGParser12ParseClassIDEv+0x2c4>
    4454:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4458:	add	x0, x0, #0x0
    445c:	bl	0 <_ZSt20__throw_length_errorPKc>
    4460:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4464:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4468:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    446c:	add	x3, x3, #0x0
    4470:	add	x1, x1, #0x0
    4474:	add	x0, x0, #0x0
    4478:	mov	w2, #0x6f                  	// #111
    447c:	bl	0 <__assert_fail>

0000000000004480 <_ZN4llvm8TGParser9ParseTypeEv>:
    4480:	stp	x29, x30, [sp, #-80]!
    4484:	mov	x29, sp
    4488:	ldr	w1, [x0, #40]
    448c:	stp	x19, x20, [sp, #16]
    4490:	mov	x19, x0
    4494:	cmp	w1, #0x1d
    4498:	b.eq	4668 <_ZN4llvm8TGParser9ParseTypeEv+0x1e8>  // b.none
    449c:	b.hi	4578 <_ZN4llvm8TGParser9ParseTypeEv+0xf8>  // b.pmore
    44a0:	cmp	w1, #0x16
    44a4:	b.eq	46ec <_ZN4llvm8TGParser9ParseTypeEv+0x26c>  // b.none
    44a8:	b.ls	44e0 <_ZN4llvm8TGParser9ParseTypeEv+0x60>  // b.plast
    44ac:	cmp	w1, #0x17
    44b0:	b.ne	462c <_ZN4llvm8TGParser9ParseTypeEv+0x1ac>  // b.any
    44b4:	ldp	x2, x1, [x0, #8]
    44b8:	adrp	x20, 0 <_ZN4llvm8DagRecTy6SharedE>
    44bc:	cmp	x2, x1
    44c0:	cset	w1, eq  // eq = none
    44c4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    44c8:	str	w0, [x19, #40]
    44cc:	ldr	x20, [x20]
    44d0:	mov	x0, x20
    44d4:	ldp	x19, x20, [sp, #16]
    44d8:	ldp	x29, x30, [sp], #80
    44dc:	ret
    44e0:	cmp	w1, #0x13
    44e4:	b.eq	4694 <_ZN4llvm8TGParser9ParseTypeEv+0x214>  // b.none
    44e8:	cmp	w1, #0x14
    44ec:	b.ne	462c <_ZN4llvm8TGParser9ParseTypeEv+0x1ac>  // b.any
    44f0:	ldp	x2, x1, [x0, #8]
    44f4:	cmp	x2, x1
    44f8:	cset	w1, eq  // eq = none
    44fc:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4500:	str	w0, [x19, #40]
    4504:	cmp	w0, #0xa
    4508:	b.ne	4730 <_ZN4llvm8TGParser9ParseTypeEv+0x2b0>  // b.any
    450c:	ldp	x2, x1, [x19, #8]
    4510:	mov	x0, x19
    4514:	cmp	x2, x1
    4518:	cset	w1, eq  // eq = none
    451c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4520:	str	w0, [x19, #40]
    4524:	cmp	w0, #0x46
    4528:	b.ne	4778 <_ZN4llvm8TGParser9ParseTypeEv+0x2f8>  // b.any
    452c:	ldp	x2, x1, [x19, #8]
    4530:	mov	x0, x19
    4534:	ldr	x20, [x19, #80]
    4538:	cmp	x2, x1
    453c:	cset	w1, eq  // eq = none
    4540:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4544:	str	w0, [x19, #40]
    4548:	cmp	w0, #0xb
    454c:	b.ne	4760 <_ZN4llvm8TGParser9ParseTypeEv+0x2e0>  // b.any
    4550:	ldp	x2, x1, [x19, #8]
    4554:	mov	x0, x19
    4558:	cmp	x2, x1
    455c:	cset	w1, eq  // eq = none
    4560:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4564:	str	w0, [x19, #40]
    4568:	mov	w0, w20
    456c:	bl	0 <_ZN4llvm9BitsRecTy3getEj>
    4570:	mov	x20, x0
    4574:	b	44d0 <_ZN4llvm8TGParser9ParseTypeEv+0x50>
    4578:	cmp	w1, #0x21
    457c:	b.eq	46c0 <_ZN4llvm8TGParser9ParseTypeEv+0x240>  // b.none
    4580:	cmp	w1, #0x48
    4584:	b.ne	45ac <_ZN4llvm8TGParser9ParseTypeEv+0x12c>  // b.any
    4588:	bl	3fb0 <_ZN4llvm8TGParser12ParseClassIDEv>
    458c:	str	x0, [sp, #56]
    4590:	mov	x20, x0
    4594:	cbz	x0, 4748 <_ZN4llvm8TGParser9ParseTypeEv+0x2c8>
    4598:	add	x0, sp, #0x38
    459c:	mov	x1, #0x1                   	// #1
    45a0:	bl	0 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE>
    45a4:	mov	x20, x0
    45a8:	b	44d0 <_ZN4llvm8TGParser9ParseTypeEv+0x50>
    45ac:	cmp	w1, #0x1f
    45b0:	b.ne	462c <_ZN4llvm8TGParser9ParseTypeEv+0x1ac>  // b.any
    45b4:	ldp	x2, x1, [x0, #8]
    45b8:	cmp	x2, x1
    45bc:	cset	w1, eq  // eq = none
    45c0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    45c4:	str	w0, [x19, #40]
    45c8:	cmp	w0, #0xa
    45cc:	b.ne	4718 <_ZN4llvm8TGParser9ParseTypeEv+0x298>  // b.any
    45d0:	ldp	x2, x1, [x19, #8]
    45d4:	mov	x0, x19
    45d8:	cmp	x2, x1
    45dc:	cset	w1, eq  // eq = none
    45e0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    45e4:	str	w0, [x19, #40]
    45e8:	mov	x0, x19
    45ec:	bl	4480 <_ZN4llvm8TGParser9ParseTypeEv>
    45f0:	mov	x20, x0
    45f4:	cbz	x0, 44d0 <_ZN4llvm8TGParser9ParseTypeEv+0x50>
    45f8:	ldr	w0, [x19, #40]
    45fc:	cmp	w0, #0xb
    4600:	b.ne	4790 <_ZN4llvm8TGParser9ParseTypeEv+0x310>  // b.any
    4604:	ldp	x2, x1, [x19, #8]
    4608:	mov	x0, x19
    460c:	cmp	x2, x1
    4610:	cset	w1, eq  // eq = none
    4614:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4618:	str	w0, [x19, #40]
    461c:	mov	x0, x20
    4620:	bl	0 <_ZN4llvm5RecTy9getListTyEv>
    4624:	mov	x20, x0
    4628:	b	44d0 <_ZN4llvm8TGParser9ParseTypeEv+0x50>
    462c:	str	x21, [sp, #32]
    4630:	add	x21, sp, #0x38
    4634:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4638:	mov	x0, x21
    463c:	add	x1, x1, #0x0
    4640:	mov	x20, #0x0                   	// #0
    4644:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4648:	mov	x1, x21
    464c:	mov	x0, x19
    4650:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4654:	mov	x0, x20
    4658:	ldp	x19, x20, [sp, #16]
    465c:	ldr	x21, [sp, #32]
    4660:	ldp	x29, x30, [sp], #80
    4664:	ret
    4668:	ldp	x2, x1, [x0, #8]
    466c:	adrp	x20, 0 <_ZN4llvm8IntRecTy6SharedE>
    4670:	cmp	x2, x1
    4674:	cset	w1, eq  // eq = none
    4678:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    467c:	str	w0, [x19, #40]
    4680:	ldr	x20, [x20]
    4684:	mov	x0, x20
    4688:	ldp	x19, x20, [sp, #16]
    468c:	ldp	x29, x30, [sp], #80
    4690:	ret
    4694:	ldp	x2, x1, [x0, #8]
    4698:	adrp	x20, 0 <_ZN4llvm8BitRecTy6SharedE>
    469c:	cmp	x2, x1
    46a0:	cset	w1, eq  // eq = none
    46a4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    46a8:	str	w0, [x19, #40]
    46ac:	ldr	x20, [x20]
    46b0:	mov	x0, x20
    46b4:	ldp	x19, x20, [sp, #16]
    46b8:	ldp	x29, x30, [sp], #80
    46bc:	ret
    46c0:	ldp	x1, x2, [x0, #8]
    46c4:	adrp	x20, 0 <_ZN4llvm11StringRecTy6SharedE>
    46c8:	cmp	x2, x1
    46cc:	cset	w1, eq  // eq = none
    46d0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    46d4:	str	w0, [x19, #40]
    46d8:	ldr	x20, [x20]
    46dc:	mov	x0, x20
    46e0:	ldp	x19, x20, [sp, #16]
    46e4:	ldp	x29, x30, [sp], #80
    46e8:	ret
    46ec:	ldp	x1, x2, [x0, #8]
    46f0:	adrp	x20, 0 <_ZN4llvm9CodeRecTy6SharedE>
    46f4:	cmp	x2, x1
    46f8:	cset	w1, eq  // eq = none
    46fc:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4700:	str	w0, [x19, #40]
    4704:	ldr	x20, [x20]
    4708:	mov	x0, x20
    470c:	ldp	x19, x20, [sp, #16]
    4710:	ldp	x29, x30, [sp], #80
    4714:	ret
    4718:	str	x21, [sp, #32]
    471c:	add	x21, sp, #0x38
    4720:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4724:	mov	x0, x21
    4728:	add	x1, x1, #0x0
    472c:	b	4640 <_ZN4llvm8TGParser9ParseTypeEv+0x1c0>
    4730:	str	x21, [sp, #32]
    4734:	add	x21, sp, #0x38
    4738:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    473c:	mov	x0, x21
    4740:	add	x1, x1, #0x0
    4744:	b	4640 <_ZN4llvm8TGParser9ParseTypeEv+0x1c0>
    4748:	str	x21, [sp, #32]
    474c:	add	x21, sp, #0x38
    4750:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4754:	mov	x0, x21
    4758:	add	x1, x1, #0x0
    475c:	b	4644 <_ZN4llvm8TGParser9ParseTypeEv+0x1c4>
    4760:	str	x21, [sp, #32]
    4764:	add	x21, sp, #0x38
    4768:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    476c:	mov	x0, x21
    4770:	add	x1, x1, #0x0
    4774:	b	4640 <_ZN4llvm8TGParser9ParseTypeEv+0x1c0>
    4778:	str	x21, [sp, #32]
    477c:	add	x21, sp, #0x38
    4780:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4784:	mov	x0, x21
    4788:	add	x1, x1, #0x0
    478c:	b	4640 <_ZN4llvm8TGParser9ParseTypeEv+0x1c0>
    4790:	str	x21, [sp, #32]
    4794:	add	x21, sp, #0x38
    4798:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    479c:	mov	x0, x21
    47a0:	add	x1, x1, #0x0
    47a4:	b	4640 <_ZN4llvm8TGParser9ParseTypeEv+0x1c0>

00000000000047a8 <_ZN4llvm8TGParser17ParseOperatorTypeEv>:
    47a8:	stp	x29, x30, [sp, #-80]!
    47ac:	mov	x29, sp
    47b0:	ldr	w1, [x0, #40]
    47b4:	stp	x19, x20, [sp, #16]
    47b8:	mov	x19, x0
    47bc:	cmp	w1, #0xa
    47c0:	b.ne	481c <_ZN4llvm8TGParser17ParseOperatorTypeEv+0x74>  // b.any
    47c4:	ldp	x2, x1, [x0, #8]
    47c8:	cmp	x2, x1
    47cc:	cset	w1, eq  // eq = none
    47d0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    47d4:	str	w0, [x19, #40]
    47d8:	mov	x0, x19
    47dc:	bl	4480 <_ZN4llvm8TGParser9ParseTypeEv>
    47e0:	mov	x20, x0
    47e4:	cbz	x0, 486c <_ZN4llvm8TGParser17ParseOperatorTypeEv+0xc4>
    47e8:	ldr	w0, [x19, #40]
    47ec:	cmp	w0, #0xb
    47f0:	b.ne	481c <_ZN4llvm8TGParser17ParseOperatorTypeEv+0x74>  // b.any
    47f4:	ldp	x2, x1, [x19, #8]
    47f8:	mov	x0, x19
    47fc:	cmp	x2, x1
    4800:	cset	w1, eq  // eq = none
    4804:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4808:	str	w0, [x19, #40]
    480c:	mov	x0, x20
    4810:	ldp	x19, x20, [sp, #16]
    4814:	ldp	x29, x30, [sp], #80
    4818:	ret
    481c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4820:	add	x1, x1, #0x0
    4824:	str	x21, [sp, #32]
    4828:	add	x21, sp, #0x38
    482c:	mov	x0, x21
    4830:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4834:	mov	x0, x19
    4838:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    483c:	mov	x3, x0
    4840:	mov	x2, x21
    4844:	add	x0, sp, #0x30
    4848:	mov	x20, #0x0                   	// #0
    484c:	mov	x1, #0x1                   	// #1
    4850:	str	x3, [sp, #48]
    4854:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    4858:	mov	x0, x20
    485c:	ldp	x19, x20, [sp, #16]
    4860:	ldr	x21, [sp, #32]
    4864:	ldp	x29, x30, [sp], #80
    4868:	ret
    486c:	str	x21, [sp, #32]
    4870:	add	x21, sp, #0x38
    4874:	mov	x0, x21
    4878:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    487c:	add	x1, x1, #0x0
    4880:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4884:	mov	x1, x21
    4888:	mov	x0, x19
    488c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4890:	ldr	x21, [sp, #32]
    4894:	b	480c <_ZN4llvm8TGParser17ParseOperatorTypeEv+0x64>

0000000000004898 <_ZN4llvm8TGParser17ParseMultiClassIDEv>:
    4898:	stp	x29, x30, [sp, #-192]!
    489c:	mov	x29, sp
    48a0:	stp	x19, x20, [sp, #16]
    48a4:	mov	x19, x0
    48a8:	ldr	w0, [x0, #40]
    48ac:	stp	x21, x22, [sp, #32]
    48b0:	cmp	w0, #0x48
    48b4:	b.ne	4ac4 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x22c>  // b.any
    48b8:	ldr	x20, [x19, #240]
    48bc:	stp	x23, x24, [sp, #48]
    48c0:	add	x24, x19, #0x30
    48c4:	stp	x27, x28, [sp, #80]
    48c8:	add	x27, x19, #0xe8
    48cc:	cbz	x20, 4b24 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x28c>
    48d0:	ldp	x28, x22, [x19, #48]
    48d4:	mov	x21, x27
    48d8:	mov	x23, #0xffffffff80000000    	// #-2147483648
    48dc:	stp	x25, x26, [sp, #64]
    48e0:	mov	x25, #0x7fffffff            	// #2147483647
    48e4:	nop
    48e8:	ldr	x26, [x20, #40]
    48ec:	cmp	x26, x22
    48f0:	csel	x2, x26, x22, ls  // ls = plast
    48f4:	cbz	x2, 4908 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x70>
    48f8:	ldr	x0, [x20, #32]
    48fc:	mov	x1, x28
    4900:	bl	0 <memcmp>
    4904:	cbnz	w0, 491c <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x84>
    4908:	sub	x0, x26, x22
    490c:	cmp	x0, x25
    4910:	b.gt	4920 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x88>
    4914:	cmp	x0, x23
    4918:	b.lt	49d8 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x140>  // b.tstop
    491c:	tbnz	w0, #31, 49d8 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x140>
    4920:	mov	x21, x20
    4924:	ldr	x20, [x20, #16]
    4928:	cbnz	x20, 48e8 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x50>
    492c:	cmp	x27, x21
    4930:	b.eq	4b2c <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x294>  // b.none
    4934:	ldr	x20, [x21, #40]
    4938:	cmp	x22, x20
    493c:	csel	x2, x22, x20, ls  // ls = plast
    4940:	cbz	x2, 4954 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0xbc>
    4944:	ldr	x1, [x21, #32]
    4948:	mov	x0, x28
    494c:	bl	0 <memcmp>
    4950:	cbnz	w0, 4970 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0xd8>
    4954:	sub	x0, x22, x20
    4958:	mov	x1, #0x7fffffff            	// #2147483647
    495c:	cmp	x0, x1
    4960:	b.gt	4b1c <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x284>
    4964:	mov	x1, #0xffffffff80000000    	// #-2147483648
    4968:	cmp	x0, x1
    496c:	b.lt	4b2c <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x294>  // b.tstop
    4970:	ldp	x25, x26, [sp, #64]
    4974:	tbz	w0, #31, 499c <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x104>
    4978:	mov	x1, x21
    497c:	add	x4, sp, #0x80
    4980:	add	x3, sp, #0xa0
    4984:	add	x0, x19, #0xe0
    4988:	adrp	x2, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    498c:	add	x2, x2, #0x0
    4990:	str	x24, [sp, #160]
    4994:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4998:	mov	x21, x0
    499c:	ldr	x20, [x21, #64]
    49a0:	cbz	x20, 49e4 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x14c>
    49a4:	ldp	x2, x1, [x19, #8]
    49a8:	mov	x0, x19
    49ac:	cmp	x2, x1
    49b0:	cset	w1, eq  // eq = none
    49b4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    49b8:	ldp	x23, x24, [sp, #48]
    49bc:	ldp	x27, x28, [sp, #80]
    49c0:	str	w0, [x19, #40]
    49c4:	mov	x0, x20
    49c8:	ldp	x19, x20, [sp, #16]
    49cc:	ldp	x21, x22, [sp, #32]
    49d0:	ldp	x29, x30, [sp], #192
    49d4:	ret
    49d8:	ldr	x20, [x20, #24]
    49dc:	cbnz	x20, 48e8 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x50>
    49e0:	b	492c <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x94>
    49e4:	ldr	w0, [x19, #40]
    49e8:	sub	w0, w0, #0x48
    49ec:	cmp	w0, #0x3
    49f0:	b.hi	4b44 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x2ac>  // b.pmore
    49f4:	add	x21, sp, #0x80
    49f8:	mov	x1, x24
    49fc:	mov	x8, x21
    4a00:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4a04:	add	x0, x0, #0x0
    4a08:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4a0c:	ldr	x1, [sp, #136]
    4a10:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    4a14:	cmp	x1, x0
    4a18:	b.eq	4b34 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x29c>  // b.none
    4a1c:	mov	x0, x21
    4a20:	add	x22, sp, #0xa0
    4a24:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4a28:	mov	x2, #0x1                   	// #1
    4a2c:	add	x1, x1, #0x0
    4a30:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    4a34:	add	x1, x22, #0x10
    4a38:	str	x1, [sp, #160]
    4a3c:	mov	x3, x0
    4a40:	ldr	x1, [x0], #16
    4a44:	cmp	x1, x0
    4a48:	b.eq	4b10 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x278>  // b.none
    4a4c:	str	x1, [sp, #160]
    4a50:	ldr	x1, [x3, #16]
    4a54:	str	x1, [sp, #176]
    4a58:	ldr	x2, [x3, #8]
    4a5c:	str	x2, [sp, #168]
    4a60:	mov	x1, x22
    4a64:	stp	x0, xzr, [x3]
    4a68:	add	x23, sp, #0x68
    4a6c:	strb	wzr, [x3, #16]
    4a70:	mov	x0, x23
    4a74:	add	x22, x22, #0x10
    4a78:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4a7c:	mov	x0, x19
    4a80:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    4a84:	mov	x3, x0
    4a88:	mov	x2, x23
    4a8c:	add	x0, sp, #0x60
    4a90:	mov	x1, #0x1                   	// #1
    4a94:	str	x3, [sp, #96]
    4a98:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    4a9c:	ldr	x0, [sp, #160]
    4aa0:	cmp	x0, x22
    4aa4:	b.eq	4aac <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x214>  // b.none
    4aa8:	bl	0 <_ZdlPv>
    4aac:	ldr	x0, [sp, #128]
    4ab0:	add	x21, x21, #0x10
    4ab4:	cmp	x0, x21
    4ab8:	b.eq	49a4 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x10c>  // b.none
    4abc:	bl	0 <_ZdlPv>
    4ac0:	b	49a4 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x10c>
    4ac4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4ac8:	add	x1, x1, #0x0
    4acc:	add	x21, sp, #0xa0
    4ad0:	mov	x20, #0x0                   	// #0
    4ad4:	mov	x0, x21
    4ad8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4adc:	mov	x0, x19
    4ae0:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    4ae4:	mov	x3, x0
    4ae8:	mov	x2, x21
    4aec:	add	x0, sp, #0x80
    4af0:	mov	x1, #0x1                   	// #1
    4af4:	str	x3, [sp, #128]
    4af8:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    4afc:	mov	x0, x20
    4b00:	ldp	x19, x20, [sp, #16]
    4b04:	ldp	x21, x22, [sp, #32]
    4b08:	ldp	x29, x30, [sp], #192
    4b0c:	ret
    4b10:	ldp	x4, x5, [x3, #16]
    4b14:	stp	x4, x5, [sp, #176]
    4b18:	b	4a58 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x1c0>
    4b1c:	ldp	x25, x26, [sp, #64]
    4b20:	b	499c <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x104>
    4b24:	mov	x21, x27
    4b28:	b	4978 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0xe0>
    4b2c:	ldp	x25, x26, [sp, #64]
    4b30:	b	4978 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0xe0>
    4b34:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4b38:	add	x0, x0, #0x0
    4b3c:	stp	x25, x26, [sp, #64]
    4b40:	bl	0 <_ZSt20__throw_length_errorPKc>
    4b44:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4b48:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4b4c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4b50:	add	x3, x3, #0x0
    4b54:	add	x1, x1, #0x0
    4b58:	add	x0, x0, #0x0
    4b5c:	mov	w2, #0x6f                  	// #111
    4b60:	stp	x25, x26, [sp, #64]
    4b64:	bl	0 <__assert_fail>

0000000000004b68 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>:
    4b68:	sub	sp, sp, #0x4b0
    4b6c:	stp	x29, x30, [sp]
    4b70:	mov	x29, sp
    4b74:	ldr	w5, [x0, #40]
    4b78:	stp	x19, x20, [sp, #16]
    4b7c:	mov	x19, x0
    4b80:	mov	w20, w3
    4b84:	stp	x21, x22, [sp, #32]
    4b88:	cmp	w5, #0x45
    4b8c:	mov	x21, x1
    4b90:	stp	x27, x28, [sp, #80]
    4b94:	b.hi	4dac <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x244>  // b.pmore
    4b98:	cmp	w5, #0x26
    4b9c:	b.hi	4fd4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x46c>  // b.pmore
    4ba0:	cmp	w5, #0x8
    4ba4:	b.eq	4fe0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x478>  // b.none
    4ba8:	mov	x22, x2
    4bac:	b.ls	4c08 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xa0>  // b.plast
    4bb0:	cmp	w5, #0x11
    4bb4:	b.eq	50a4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x53c>  // b.none
    4bb8:	cmp	w5, #0x12
    4bbc:	b.ne	50e0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x578>  // b.any
    4bc0:	ldp	x1, x2, [x0, #8]
    4bc4:	cmp	x2, x1
    4bc8:	cset	w1, eq  // eq = none
    4bcc:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4bd0:	str	w0, [x19, #40]
    4bd4:	mov	w3, w20
    4bd8:	mov	x2, x22
    4bdc:	mov	x1, x21
    4be0:	mov	x0, x19
    4be4:	bl	4b68 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    4be8:	mov	x28, x0
    4bec:	mov	x0, x28
    4bf0:	ldp	x29, x30, [sp]
    4bf4:	ldp	x19, x20, [sp, #16]
    4bf8:	ldp	x21, x22, [sp, #32]
    4bfc:	ldp	x27, x28, [sp, #80]
    4c00:	add	sp, sp, #0x4b0
    4c04:	ret
    4c08:	cmp	w5, #0x4
    4c0c:	b.eq	4f20 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x3b8>  // b.none
    4c10:	cmp	w5, #0x6
    4c14:	b.ne	50e0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x578>  // b.any
    4c18:	stp	x23, x24, [sp, #48]
    4c1c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    4c20:	add	x20, sp, #0x390
    4c24:	ldp	x2, x1, [x19, #8]
    4c28:	stp	x20, x0, [sp, #112]
    4c2c:	mov	x0, x19
    4c30:	cmp	x2, x1
    4c34:	cset	w1, eq  // eq = none
    4c38:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4c3c:	str	w0, [x19, #40]
    4c40:	add	x2, x20, #0x10
    4c44:	mov	x1, #0x1000000000          	// #68719476736
    4c48:	str	x2, [sp, #912]
    4c4c:	cmp	w0, #0x7
    4c50:	str	x1, [sp, #920]
    4c54:	b.ne	5204 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x69c>  // b.any
    4c58:	ldp	x2, x1, [x19, #8]
    4c5c:	mov	x0, x19
    4c60:	add	x20, sp, #0x420
    4c64:	cmp	x2, x1
    4c68:	cset	w1, eq  // eq = none
    4c6c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4c70:	ldr	w22, [sp, #920]
    4c74:	add	x1, x20, #0x10
    4c78:	mov	x2, #0x1000000000          	// #68719476736
    4c7c:	str	w0, [x19, #40]
    4c80:	str	x1, [sp, #1056]
    4c84:	str	x2, [sp, #1064]
    4c88:	cbz	w22, 5ea8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1340>
    4c8c:	stp	x25, x26, [sp, #64]
    4c90:	adrp	x25, 0 <_ZN4llvm8BitRecTy6SharedE>
    4c94:	mov	w0, w22
    4c98:	ldr	x25, [x25]
    4c9c:	add	x24, sp, #0x300
    4ca0:	add	x27, sp, #0x1b8
    4ca4:	mov	x26, #0x0                   	// #0
    4ca8:	mov	x21, #0x28                  	// #40
    4cac:	b	4cf4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x18c>
    4cb0:	cmp	w0, #0x13
    4cb4:	b.eq	538c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x824>  // b.none
    4cb8:	ldr	x3, [x28]
    4cbc:	mov	x0, x28
    4cc0:	mov	x1, x25
    4cc4:	ldr	x3, [x3, #56]
    4cc8:	blr	x3
    4ccc:	str	x0, [sp, #440]
    4cd0:	mov	x28, x0
    4cd4:	cbz	x0, 5778 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xc10>
    4cd8:	mov	x1, x27
    4cdc:	mov	x0, x20
    4ce0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4ce4:	add	x26, x26, #0x1
    4ce8:	cmp	w22, w26
    4cec:	b.eq	54c0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x958>  // b.none
    4cf0:	ldr	w0, [sp, #920]
    4cf4:	cmp	x26, w0, uxtw
    4cf8:	mov	w23, w26
    4cfc:	b.cs	5f0c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x13a4>  // b.hs, b.nlast
    4d00:	ldr	x0, [sp, #912]
    4d04:	lsl	x19, x26, #3
    4d08:	ldr	x28, [x0, x26, lsl #3]
    4d0c:	cbz	x28, 5f60 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x13f8>
    4d10:	ldrb	w0, [x28, #8]
    4d14:	cmp	w0, #0x3
    4d18:	b.ne	4cb0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x148>  // b.any
    4d1c:	ldr	w0, [x28, #32]
    4d20:	cbz	w0, 4ce4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x17c>
    4d24:	sub	w19, w0, #0x1
    4d28:	add	x23, x20, #0x10
    4d2c:	b	4d68 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x200>
    4d30:	ldr	x0, [sp, #1056]
    4d34:	str	x5, [x0, w2, uxtw #3]
    4d38:	ldr	w2, [sp, #1064]
    4d3c:	ldr	w3, [sp, #1068]
    4d40:	mov	w0, w2
    4d44:	add	x0, x0, #0x1
    4d48:	cmp	x0, x3
    4d4c:	b.hi	5f2c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x13c4>  // b.pmore
    4d50:	add	w2, w2, #0x1
    4d54:	str	w2, [sp, #1064]
    4d58:	sub	w19, w19, #0x1
    4d5c:	cmn	w19, #0x1
    4d60:	b.eq	4ce4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x17c>  // b.none
    4d64:	ldr	w0, [x28, #32]
    4d68:	cmp	w19, w0
    4d6c:	b.cs	5ec0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1358>  // b.hs, b.nlast
    4d70:	add	x0, x21, w19, uxtw #3
    4d74:	ldr	w2, [sp, #1064]
    4d78:	ldr	w3, [sp, #1068]
    4d7c:	cmp	w2, w3
    4d80:	ldr	x5, [x28, x0]
    4d84:	b.cc	4d30 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1c8>  // b.lo, b.ul, b.last
    4d88:	mov	x2, #0x0                   	// #0
    4d8c:	mov	x1, x23
    4d90:	mov	x0, x20
    4d94:	mov	x3, #0x8                   	// #8
    4d98:	str	x5, [sp, #104]
    4d9c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4da0:	ldr	w2, [sp, #1064]
    4da4:	ldr	x5, [sp, #104]
    4da8:	b	4d30 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1c8>
    4dac:	cmp	w5, #0x48
    4db0:	b.eq	5198 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x630>  // b.none
    4db4:	b.ls	4e08 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x2a0>  // b.plast
    4db8:	cmp	w5, #0x49
    4dbc:	b.eq	5108 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x5a0>  // b.none
    4dc0:	cmp	w5, #0x4b
    4dc4:	b.ne	50e0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x578>  // b.any
    4dc8:	ldp	x20, x21, [x0, #48]
    4dcc:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    4dd0:	mov	x3, x0
    4dd4:	add	x2, sp, #0x420
    4dd8:	str	x3, [sp, #1056]
    4ddc:	mov	x1, x21
    4de0:	mov	x0, x20
    4de4:	bl	0 <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE>
    4de8:	mov	x28, x0
    4dec:	ldp	x1, x2, [x19, #8]
    4df0:	mov	x0, x19
    4df4:	cmp	x2, x1
    4df8:	cset	w1, eq  // eq = none
    4dfc:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4e00:	str	w0, [x19, #40]
    4e04:	b	4bec <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x84>
    4e08:	cmp	w5, #0x46
    4e0c:	b.eq	5184 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x61c>  // b.none
    4e10:	cmp	w5, #0x47
    4e14:	b.ne	50e0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x578>  // b.any
    4e18:	ldr	x20, [x19, #8]
    4e1c:	add	x22, sp, #0x300
    4e20:	ldr	x2, [x19, #32]
    4e24:	mov	x0, #0x1000000000          	// #68719476736
    4e28:	add	x1, x22, #0x10
    4e2c:	stp	x23, x24, [sp, #48]
    4e30:	sub	x20, x20, x2
    4e34:	stp	x25, x26, [sp, #64]
    4e38:	sub	x20, x20, #0x2
    4e3c:	cmp	w20, #0x10
    4e40:	str	x1, [sp, #768]
    4e44:	mov	w23, w20
    4e48:	str	x0, [sp, #776]
    4e4c:	and	x21, x20, #0xffffffff
    4e50:	mov	x0, #0x10                  	// #16
    4e54:	ldr	x24, [x19, #80]
    4e58:	b.hi	52f4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x78c>  // b.pmore
    4e5c:	cmp	x21, x0
    4e60:	b.hi	5f2c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x13c4>  // b.pmore
    4e64:	ldr	x0, [sp, #768]
    4e68:	str	w20, [sp, #776]
    4e6c:	add	x25, x0, x21, lsl #3
    4e70:	cmp	x0, x25
    4e74:	b.eq	4e88 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x320>  // b.none
    4e78:	str	xzr, [x0], #8
    4e7c:	cmp	x25, x0
    4e80:	b.ne	4e78 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x310>  // b.any
    4e84:	ldr	x25, [sp, #768]
    4e88:	cbz	w20, 4ed4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x36c>
    4e8c:	and	w0, w24, #0x1
    4e90:	mov	x21, #0x1                   	// #1
    4e94:	b	4eb4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x34c>
    4e98:	ldr	w1, [sp, #776]
    4e9c:	asr	x0, x24, x21
    4ea0:	and	w0, w0, #0x1
    4ea4:	cmp	x21, x1
    4ea8:	b.cs	5f0c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x13a4>  // b.hs, b.nlast
    4eac:	ldr	x25, [sp, #768]
    4eb0:	add	x21, x21, #0x1
    4eb4:	lsl	x20, x21, #3
    4eb8:	bl	0 <_ZN4llvm7BitInit3getEb>
    4ebc:	sub	x20, x20, #0x8
    4ec0:	cmp	w21, w23
    4ec4:	str	x0, [x25, x20]
    4ec8:	b.ne	4e98 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x330>  // b.any
    4ecc:	ldr	w21, [sp, #776]
    4ed0:	ldr	x25, [sp, #768]
    4ed4:	mov	x1, x21
    4ed8:	mov	x0, x25
    4edc:	bl	0 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
    4ee0:	ldp	x1, x2, [x19, #8]
    4ee4:	mov	x28, x0
    4ee8:	mov	x0, x19
    4eec:	add	x22, x22, #0x10
    4ef0:	cmp	x2, x1
    4ef4:	cset	w1, eq  // eq = none
    4ef8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4efc:	str	w0, [x19, #40]
    4f00:	ldr	x1, [sp, #768]
    4f04:	cmp	x1, x22
    4f08:	b.eq	52e8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x780>  // b.none
    4f0c:	mov	x0, x1
    4f10:	bl	0 <free>
    4f14:	ldp	x23, x24, [sp, #48]
    4f18:	ldp	x25, x26, [sp, #64]
    4f1c:	b	4bec <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x84>
    4f20:	ldp	x2, x1, [x0, #8]
    4f24:	add	x20, sp, #0x420
    4f28:	stp	x23, x24, [sp, #48]
    4f2c:	cmp	x2, x1
    4f30:	cset	w1, eq  // eq = none
    4f34:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4f38:	str	w0, [x19, #40]
    4f3c:	add	x2, x20, #0x10
    4f40:	mov	x1, #0x1000000000          	// #68719476736
    4f44:	str	x2, [sp, #1056]
    4f48:	str	x1, [sp, #1064]
    4f4c:	cbz	x22, 5274 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x70c>
    4f50:	ldr	w1, [x22, #8]
    4f54:	cmp	w1, #0x5
    4f58:	b.eq	5740 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xbd8>  // b.none
    4f5c:	add	x23, sp, #0x290
    4f60:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4f64:	mov	x0, x23
    4f68:	add	x1, x1, #0x0
    4f6c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4f70:	add	x21, sp, #0x390
    4f74:	ldr	x1, [x22]
    4f78:	mov	x8, x21
    4f7c:	mov	x0, x22
    4f80:	add	x24, sp, #0x2b0
    4f84:	add	x22, sp, #0x300
    4f88:	ldr	x1, [x1, #16]
    4f8c:	blr	x1
    4f90:	mov	x1, x21
    4f94:	mov	x0, x24
    4f98:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4f9c:	add	x21, x21, #0x10
    4fa0:	mov	x8, x22
    4fa4:	mov	x1, x24
    4fa8:	mov	x0, x23
    4fac:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4fb0:	mov	x1, x22
    4fb4:	mov	x0, x19
    4fb8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4fbc:	ldr	x0, [sp, #912]
    4fc0:	cmp	x0, x21
    4fc4:	b.eq	4fcc <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x464>  // b.none
    4fc8:	bl	0 <_ZdlPv>
    4fcc:	mov	x28, #0x0                   	// #0
    4fd0:	b	52d0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x768>
    4fd4:	bl	7258 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE>
    4fd8:	mov	x28, x0
    4fdc:	b	4bec <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x84>
    4fe0:	ldp	x2, x1, [x0, #8]
    4fe4:	cmp	x2, x1
    4fe8:	cset	w1, eq  // eq = none
    4fec:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4ff0:	cmp	w0, #0x32
    4ff4:	mov	w1, #0x48                  	// #72
    4ff8:	ccmp	w0, w1, #0x4, ne  // ne = any
    4ffc:	cset	w1, ne  // ne = any
    5000:	cmp	w0, #0x45
    5004:	str	w0, [x19, #40]
    5008:	ccmp	w0, #0x11, #0x4, ne  // ne = any
    500c:	csel	w0, w1, wzr, ne  // ne = any
    5010:	cbnz	w0, 5764 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xbfc>
    5014:	mov	x1, x21
    5018:	mov	x0, x19
    501c:	mov	w3, #0x0                   	// #0
    5020:	mov	x2, #0x0                   	// #0
    5024:	bl	5fb0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    5028:	mov	x28, x0
    502c:	cbz	x0, 4bec <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x84>
    5030:	ldr	w0, [x19, #40]
    5034:	mov	x22, #0x0                   	// #0
    5038:	cmp	w0, #0xc
    503c:	b.eq	5358 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x7f0>  // b.none
    5040:	add	x20, sp, #0x420
    5044:	mov	x1, #0x800000000           	// #34359738368
    5048:	add	x2, x20, #0x10
    504c:	str	x2, [sp, #1056]
    5050:	str	x1, [sp, #1064]
    5054:	cmp	w0, #0x9
    5058:	b.ne	530c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x7a4>  // b.any
    505c:	ldp	x2, x1, [x19, #8]
    5060:	mov	x0, x19
    5064:	cmp	x2, x1
    5068:	cset	w1, eq  // eq = none
    506c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5070:	str	w0, [x19, #40]
    5074:	ldr	w3, [sp, #1064]
    5078:	mov	x0, x28
    507c:	ldr	x2, [sp, #1056]
    5080:	mov	x1, x22
    5084:	bl	0 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE>
    5088:	mov	x28, x0
    508c:	ldr	x0, [sp, #1056]
    5090:	add	x20, x20, #0x10
    5094:	cmp	x0, x20
    5098:	b.eq	4bec <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x84>  // b.none
    509c:	bl	0 <free>
    50a0:	b	4bec <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x84>
    50a4:	bl	0 <_ZN4llvm9UnsetInit3getEv>
    50a8:	mov	x28, x0
    50ac:	ldp	x2, x1, [x19, #8]
    50b0:	cmp	x2, x1
    50b4:	mov	x0, x19
    50b8:	cset	w1, eq  // eq = none
    50bc:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    50c0:	str	w0, [x19, #40]
    50c4:	mov	x0, x28
    50c8:	ldp	x29, x30, [sp]
    50cc:	ldp	x19, x20, [sp, #16]
    50d0:	ldp	x21, x22, [sp, #32]
    50d4:	ldp	x27, x28, [sp, #80]
    50d8:	add	sp, sp, #0x4b0
    50dc:	ret
    50e0:	add	x20, sp, #0x420
    50e4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    50e8:	mov	x0, x20
    50ec:	add	x1, x1, #0x0
    50f0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    50f4:	mov	x28, #0x0                   	// #0
    50f8:	mov	x1, x20
    50fc:	mov	x0, x19
    5100:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5104:	b	4bec <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x84>
    5108:	ldp	x1, x2, [x19, #48]
    510c:	add	x20, sp, #0x420
    5110:	add	x4, x20, #0x10
    5114:	mov	x0, x20
    5118:	mov	w3, #0x0                   	// #0
    511c:	str	x4, [sp, #1056]
    5120:	add	x2, x1, x2
    5124:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5128:	b	5138 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x5d0>
    512c:	ldp	x1, x2, [x19, #48]
    5130:	mov	x0, x20
    5134:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    5138:	ldp	x1, x2, [x19, #8]
    513c:	mov	x0, x19
    5140:	cmp	x2, x1
    5144:	cset	w1, eq  // eq = none
    5148:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    514c:	str	w0, [x19, #40]
    5150:	cmp	w0, #0x49
    5154:	b.eq	512c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x5c4>  // b.none
    5158:	ldr	x0, [sp, #1056]
    515c:	add	x20, x20, #0x10
    5160:	ldr	x1, [sp, #1064]
    5164:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    5168:	mov	x28, x0
    516c:	ldr	x1, [sp, #1056]
    5170:	cmp	x1, x20
    5174:	b.eq	4bec <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x84>  // b.none
    5178:	mov	x0, x1
    517c:	bl	0 <_ZdlPv>
    5180:	b	4bec <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x84>
    5184:	ldr	x0, [x0, #80]
    5188:	bl	0 <_ZN4llvm7IntInit3getEl>
    518c:	mov	x28, x0
    5190:	ldp	x1, x2, [x19, #8]
    5194:	b	50b0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x548>
    5198:	stp	x23, x24, [sp, #48]
    519c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    51a0:	ldr	w1, [x19, #40]
    51a4:	mov	x24, x0
    51a8:	sub	w1, w1, #0x48
    51ac:	cmp	w1, #0x3
    51b0:	b.hi	5f84 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x141c>  // b.pmore
    51b4:	ldp	x0, x1, [x19, #48]
    51b8:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    51bc:	mov	x22, x0
    51c0:	ldp	x2, x1, [x19, #8]
    51c4:	mov	x0, x19
    51c8:	cmp	x2, x1
    51cc:	cset	w1, eq  // eq = none
    51d0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    51d4:	str	w0, [x19, #40]
    51d8:	cmp	w0, #0xa
    51dc:	b.eq	53e8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x880>  // b.none
    51e0:	mov	x3, x24
    51e4:	mov	w4, w20
    51e8:	mov	x2, x22
    51ec:	mov	x1, x21
    51f0:	mov	x0, x19
    51f4:	bl	758 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE>
    51f8:	mov	x28, x0
    51fc:	ldp	x23, x24, [sp, #48]
    5200:	b	4bec <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x84>
    5204:	mov	x0, x19
    5208:	mov	x2, x21
    520c:	mov	x1, x20
    5210:	mov	x4, #0x0                   	// #0
    5214:	mov	x3, #0x0                   	// #0
    5218:	bl	98c0 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE>
    521c:	ldr	w0, [sp, #920]
    5220:	cbz	w0, 5754 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xbec>
    5224:	ldr	w0, [x19, #40]
    5228:	cmp	w0, #0x7
    522c:	b.eq	4c58 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xf0>  // b.none
    5230:	add	x20, sp, #0x420
    5234:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5238:	mov	x0, x20
    523c:	add	x1, x1, #0x0
    5240:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5244:	mov	x28, #0x0                   	// #0
    5248:	mov	x1, x20
    524c:	mov	x0, x19
    5250:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5254:	ldr	x1, [sp, #112]
    5258:	ldr	x0, [sp, #912]
    525c:	add	x23, x1, #0x10
    5260:	cmp	x0, x23
    5264:	b.eq	52e0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x778>  // b.none
    5268:	bl	0 <free>
    526c:	ldp	x23, x24, [sp, #48]
    5270:	b	4bec <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x84>
    5274:	cmp	w0, #0x5
    5278:	mov	x23, #0x0                   	// #0
    527c:	mov	x4, #0x0                   	// #0
    5280:	b.eq	5520 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x9b8>  // b.none
    5284:	mov	x0, x19
    5288:	mov	x2, x21
    528c:	mov	x1, x20
    5290:	mov	x3, #0x0                   	// #0
    5294:	bl	98c0 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE>
    5298:	ldr	w0, [sp, #1064]
    529c:	cbz	w0, 4fcc <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x464>
    52a0:	ldr	w0, [x19, #40]
    52a4:	cmp	w0, #0x5
    52a8:	b.eq	575c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xbf4>  // b.none
    52ac:	add	x21, sp, #0x390
    52b0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    52b4:	mov	x0, x21
    52b8:	add	x1, x1, #0x0
    52bc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    52c0:	mov	x28, #0x0                   	// #0
    52c4:	mov	x1, x21
    52c8:	mov	x0, x19
    52cc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    52d0:	ldr	x0, [sp, #1056]
    52d4:	add	x20, x20, #0x10
    52d8:	cmp	x0, x20
    52dc:	b.ne	5268 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x700>  // b.any
    52e0:	ldp	x23, x24, [sp, #48]
    52e4:	b	4bec <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x84>
    52e8:	ldp	x23, x24, [sp, #48]
    52ec:	ldp	x25, x26, [sp, #64]
    52f0:	b	4bec <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x84>
    52f4:	mov	x0, x22
    52f8:	mov	x2, x21
    52fc:	mov	x3, #0x8                   	// #8
    5300:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    5304:	ldr	w0, [sp, #780]
    5308:	b	4e5c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x2f4>
    530c:	mov	x0, x19
    5310:	mov	x2, x21
    5314:	mov	x1, x20
    5318:	bl	9680 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE>
    531c:	ldr	w0, [sp, #1064]
    5320:	cbz	w0, 58ec <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xd84>
    5324:	ldr	w0, [x19, #40]
    5328:	cmp	w0, #0x9
    532c:	b.eq	505c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x4f4>  // b.none
    5330:	add	x21, sp, #0x390
    5334:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5338:	mov	x0, x21
    533c:	add	x1, x1, #0x0
    5340:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5344:	mov	x28, #0x0                   	// #0
    5348:	mov	x1, x21
    534c:	mov	x0, x19
    5350:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5354:	b	508c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x524>
    5358:	ldp	x2, x1, [x19, #8]
    535c:	mov	x0, x19
    5360:	cmp	x2, x1
    5364:	cset	w1, eq  // eq = none
    5368:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    536c:	str	w0, [x19, #40]
    5370:	cmp	w0, #0x4a
    5374:	b.eq	5c00 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1098>  // b.none
    5378:	add	x20, sp, #0x420
    537c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5380:	mov	x0, x20
    5384:	add	x1, x1, #0x0
    5388:	b	50f0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x588>
    538c:	ldr	x0, [x28, #16]
    5390:	cbz	x0, 5fa8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1440>
    5394:	ldr	w1, [x0, #8]
    5398:	cmp	w1, #0x1
    539c:	b.ne	4cb8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x150>  // b.any
    53a0:	ldr	w19, [x0, #24]
    53a4:	cbz	w19, 4ce4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x17c>
    53a8:	sub	w19, w19, #0x1
    53ac:	nop
    53b0:	ldr	x2, [x28]
    53b4:	mov	w1, w19
    53b8:	mov	x0, x28
    53bc:	sub	w19, w19, #0x1
    53c0:	ldr	x2, [x2, #104]
    53c4:	blr	x2
    53c8:	mov	x2, x0
    53cc:	mov	x1, x24
    53d0:	mov	x0, x20
    53d4:	str	x2, [sp, #768]
    53d8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    53dc:	cmn	w19, #0x1
    53e0:	b.ne	53b0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x848>  // b.any
    53e4:	b	4ce4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x17c>
    53e8:	ldp	x2, x1, [x19, #8]
    53ec:	mov	x0, x19
    53f0:	cmp	x2, x1
    53f4:	cset	w1, eq  // eq = none
    53f8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    53fc:	str	w0, [x19, #40]
    5400:	cmp	w0, #0xb
    5404:	b.eq	5c28 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x10c0>  // b.none
    5408:	ldp	x3, x2, [x22, #24]
    540c:	add	x20, sp, #0x420
    5410:	ldr	x23, [x19, #344]
    5414:	mov	x1, x20
    5418:	str	x3, [sp, #1056]
    541c:	mov	x0, x23
    5420:	add	x23, x23, #0x8
    5424:	str	x2, [sp, #1064]
    5428:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    542c:	cmp	x0, x23
    5430:	b.eq	5884 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xd1c>  // b.none
    5434:	ldr	x28, [x0, #64]
    5438:	cbz	x28, 5884 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xd1c>
    543c:	stp	x25, x26, [sp, #64]
    5440:	add	x25, sp, #0x2b0
    5444:	add	x6, x25, #0x10
    5448:	mov	x5, #0x800000000           	// #34359738368
    544c:	mov	x0, x19
    5450:	mov	x2, x21
    5454:	mov	x1, x25
    5458:	mov	x3, x28
    545c:	mov	x4, #0x0                   	// #0
    5460:	str	x6, [sp, #688]
    5464:	str	x5, [sp, #696]
    5468:	bl	98c0 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE>
    546c:	ldr	w0, [sp, #696]
    5470:	cbz	w0, 5b9c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1034>
    5474:	ldr	w0, [x19, #40]
    5478:	cmp	w0, #0xb
    547c:	b.eq	5c5c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x10f4>  // b.none
    5480:	mov	x0, x20
    5484:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5488:	add	x1, x1, #0x0
    548c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5490:	mov	x1, x20
    5494:	mov	x0, x19
    5498:	mov	x28, #0x0                   	// #0
    549c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    54a0:	ldr	x0, [sp, #688]
    54a4:	add	x25, x25, #0x10
    54a8:	cmp	x0, x25
    54ac:	b.eq	52e8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x780>  // b.none
    54b0:	bl	0 <free>
    54b4:	ldp	x23, x24, [sp, #48]
    54b8:	ldp	x25, x26, [sp, #64]
    54bc:	b	4bec <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x84>
    54c0:	ldr	x2, [sp, #1056]
    54c4:	ldr	w1, [sp, #1064]
    54c8:	add	x0, x2, x1, lsl #3
    54cc:	cmp	x2, x0
    54d0:	b.eq	5e94 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x132c>  // b.none
    54d4:	sub	x0, x0, #0x8
    54d8:	cmp	x2, x0
    54dc:	b.cs	5e9c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1334>  // b.hs, b.nlast
    54e0:	ldr	x4, [x0]
    54e4:	ldr	x3, [x2]
    54e8:	str	x4, [x2], #8
    54ec:	str	x3, [x0], #-8
    54f0:	cmp	x2, x0
    54f4:	b.cc	54e0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x978>  // b.lo, b.ul, b.last
    54f8:	ldp	x25, x26, [sp, #64]
    54fc:	ldr	x0, [sp, #1056]
    5500:	bl	0 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
    5504:	mov	x28, x0
    5508:	ldr	x0, [sp, #1056]
    550c:	add	x20, x20, #0x10
    5510:	cmp	x0, x20
    5514:	b.eq	5254 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x6ec>  // b.none
    5518:	bl	0 <free>
    551c:	b	5254 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x6ec>
    5520:	mov	x23, x22
    5524:	stp	x25, x26, [sp, #64]
    5528:	mov	x0, x19
    552c:	ldp	x2, x1, [x19, #8]
    5530:	cmp	x2, x1
    5534:	cset	w1, eq  // eq = none
    5538:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    553c:	str	w0, [x19, #40]
    5540:	cmp	w0, #0xa
    5544:	b.eq	5bb8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1050>  // b.none
    5548:	ldr	x21, [sp, #1056]
    554c:	mov	x24, #0x0                   	// #0
    5550:	ldr	w25, [sp, #1064]
    5554:	add	x25, x21, x25, lsl #3
    5558:	cmp	x21, x25
    555c:	b.eq	55a8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xa40>  // b.none
    5560:	mov	x28, #0x0                   	// #0
    5564:	b	5584 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xa1c>
    5568:	mov	x0, x28
    556c:	bl	0 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_>
    5570:	mov	x28, x0
    5574:	cbz	x0, 5ba4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x103c>
    5578:	add	x21, x21, #0x8
    557c:	cmp	x25, x21
    5580:	b.eq	55cc <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xa64>  // b.none
    5584:	ldr	x0, [x21]
    5588:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    558c:	cbz	x0, 5578 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xa10>
    5590:	ldr	x1, [x0, #16]
    5594:	cbnz	x28, 5568 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xa00>
    5598:	mov	x28, x1
    559c:	b	5578 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xa10>
    55a0:	mov	x24, x28
    55a4:	cbnz	x28, 55f0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xa88>
    55a8:	cbz	x22, 5f4c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x13e4>
    55ac:	ldr	x24, [x23, #24]
    55b0:	mov	x2, x24
    55b4:	ldr	w1, [sp, #1064]
    55b8:	ldr	x0, [sp, #1056]
    55bc:	bl	0 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    55c0:	mov	x28, x0
    55c4:	ldp	x25, x26, [sp, #64]
    55c8:	b	52d0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x768>
    55cc:	cbz	x24, 55a0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xa38>
    55d0:	cbz	x28, 55f0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xa88>
    55d4:	ldr	x2, [x28]
    55d8:	mov	x0, x28
    55dc:	mov	x1, x24
    55e0:	ldr	x2, [x2, #24]
    55e4:	blr	x2
    55e8:	tst	w0, #0xff
    55ec:	b.eq	5714 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xbac>  // b.none
    55f0:	cbz	x23, 55b0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xa48>
    55f4:	ldr	x2, [x24]
    55f8:	mov	x0, x24
    55fc:	ldr	x1, [x23, #24]
    5600:	ldr	x2, [x2, #24]
    5604:	blr	x2
    5608:	tst	w0, #0xff
    560c:	b.ne	55b0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xa48>  // b.any
    5610:	add	x2, sp, #0x218
    5614:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5618:	mov	x0, x2
    561c:	add	x1, x1, #0x0
    5620:	str	x2, [sp, #112]
    5624:	add	x22, sp, #0x300
    5628:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    562c:	add	x27, sp, #0x248
    5630:	ldr	x1, [x24]
    5634:	add	x3, sp, #0x230
    5638:	str	x3, [sp, #104]
    563c:	mov	x8, x22
    5640:	mov	x0, x24
    5644:	add	x28, sp, #0x260
    5648:	ldr	x1, [x1, #16]
    564c:	add	x25, sp, #0x278
    5650:	add	x21, sp, #0x390
    5654:	add	x26, sp, #0x290
    5658:	add	x24, sp, #0x2b0
    565c:	blr	x1
    5660:	ldr	x3, [sp, #104]
    5664:	mov	x1, x22
    5668:	mov	x0, x3
    566c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5670:	ldp	x0, x2, [sp, #104]
    5674:	mov	x8, x27
    5678:	mov	x1, x0
    567c:	mov	x0, x2
    5680:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5684:	mov	x0, x28
    5688:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    568c:	add	x1, x1, #0x0
    5690:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5694:	mov	x1, x28
    5698:	mov	x0, x27
    569c:	mov	x8, x25
    56a0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    56a4:	ldr	x0, [x23, #24]
    56a8:	mov	x8, x21
    56ac:	ldr	x1, [x0]
    56b0:	ldr	x1, [x1, #16]
    56b4:	blr	x1
    56b8:	mov	x1, x21
    56bc:	mov	x0, x26
    56c0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    56c4:	add	x21, x21, #0x10
    56c8:	mov	x8, x24
    56cc:	mov	x1, x26
    56d0:	mov	x0, x25
    56d4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    56d8:	mov	x1, x24
    56dc:	mov	x0, x19
    56e0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    56e4:	ldr	x0, [sp, #912]
    56e8:	cmp	x0, x21
    56ec:	b.eq	56f4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xb8c>  // b.none
    56f0:	bl	0 <_ZdlPv>
    56f4:	ldr	x0, [sp, #768]
    56f8:	add	x22, x22, #0x10
    56fc:	cmp	x0, x22
    5700:	b.eq	5708 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xba0>  // b.none
    5704:	bl	0 <_ZdlPv>
    5708:	mov	x28, #0x0                   	// #0
    570c:	ldp	x25, x26, [sp, #64]
    5710:	b	52d0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x768>
    5714:	add	x21, sp, #0x390
    5718:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    571c:	mov	x0, x21
    5720:	add	x1, x1, #0x0
    5724:	mov	x28, #0x0                   	// #0
    5728:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    572c:	mov	x1, x21
    5730:	mov	x0, x19
    5734:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5738:	ldp	x25, x26, [sp, #64]
    573c:	b	52d0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x768>
    5740:	cmp	w0, #0x5
    5744:	b.eq	5520 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x9b8>  // b.none
    5748:	mov	x23, x22
    574c:	ldr	x4, [x22, #24]
    5750:	b	5284 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x71c>
    5754:	mov	x28, #0x0                   	// #0
    5758:	b	5254 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x6ec>
    575c:	stp	x25, x26, [sp, #64]
    5760:	b	5528 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x9c0>
    5764:	add	x20, sp, #0x420
    5768:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    576c:	mov	x0, x20
    5770:	add	x1, x1, #0x0
    5774:	b	50f0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x588>
    5778:	add	x22, sp, #0x200
    577c:	add	x21, sp, #0x218
    5780:	mov	x0, x22
    5784:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5788:	add	x1, x1, #0x0
    578c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5790:	mov	w3, #0x109                 	// #265
    5794:	mov	x8, x21
    5798:	str	xzr, [sp, #488]
    579c:	mov	x0, x22
    57a0:	add	x1, sp, #0x1e8
    57a4:	add	x22, sp, #0x230
    57a8:	str	w23, [sp, #488]
    57ac:	add	x24, sp, #0x248
    57b0:	str	xzr, [sp, #496]
    57b4:	strh	w3, [sp, #504]
    57b8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    57bc:	mov	x0, x22
    57c0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    57c4:	add	x1, x1, #0x0
    57c8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    57cc:	mov	x0, x21
    57d0:	mov	x1, x22
    57d4:	mov	x8, x24
    57d8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    57dc:	ldr	w0, [sp, #920]
    57e0:	cmp	x26, x0
    57e4:	b.cs	5f0c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x13a4>  // b.hs, b.nlast
    57e8:	ldr	x0, [sp, #912]
    57ec:	add	x21, sp, #0x300
    57f0:	mov	x8, x21
    57f4:	add	x27, sp, #0x260
    57f8:	add	x22, sp, #0x278
    57fc:	add	x25, sp, #0x290
    5800:	ldr	x0, [x0, x19]
    5804:	add	x19, sp, #0x2b0
    5808:	ldr	x1, [x0]
    580c:	ldr	x1, [x1, #40]
    5810:	blr	x1
    5814:	mov	x1, x21
    5818:	mov	x0, x27
    581c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5820:	add	x21, x21, #0x10
    5824:	mov	x8, x22
    5828:	mov	x1, x27
    582c:	mov	x0, x24
    5830:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5834:	mov	x0, x25
    5838:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    583c:	add	x1, x1, #0x0
    5840:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5844:	mov	x8, x19
    5848:	mov	x1, x25
    584c:	mov	x0, x22
    5850:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5854:	ldr	x3, [sp, #120]
    5858:	add	x0, sp, #0x1d0
    585c:	mov	x2, x19
    5860:	mov	x1, #0x1                   	// #1
    5864:	str	x3, [sp, #464]
    5868:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    586c:	ldr	x0, [sp, #768]
    5870:	cmp	x0, x21
    5874:	b.eq	5c54 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x10ec>  // b.none
    5878:	bl	0 <_ZdlPv>
    587c:	ldp	x25, x26, [sp, #64]
    5880:	b	5508 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x9a0>
    5884:	ldp	x4, x3, [x22, #24]
    5888:	add	x2, sp, #0x2b0
    588c:	add	x19, sp, #0x300
    5890:	add	x21, sp, #0x390
    5894:	mov	x0, x19
    5898:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    589c:	add	x1, x1, #0x0
    58a0:	str	x4, [sp, #688]
    58a4:	str	x3, [sp, #696]
    58a8:	mov	x28, #0x0                   	// #0
    58ac:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    58b0:	mov	x0, x21
    58b4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    58b8:	add	x1, x1, #0x0
    58bc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    58c0:	mov	x8, x20
    58c4:	mov	x1, x21
    58c8:	mov	x0, x19
    58cc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    58d0:	mov	x2, x20
    58d4:	add	x0, sp, #0x290
    58d8:	mov	x1, #0x1                   	// #1
    58dc:	str	x24, [sp, #656]
    58e0:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    58e4:	ldp	x23, x24, [sp, #48]
    58e8:	b	4bec <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x84>
    58ec:	mov	x28, #0x0                   	// #0
    58f0:	b	508c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x524>
    58f4:	add	x21, sp, #0xe0
    58f8:	add	x23, sp, #0xf8
    58fc:	mov	x0, x21
    5900:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5904:	add	x1, x1, #0x0
    5908:	stp	x2, x3, [sp, #176]
    590c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5910:	mov	w4, #0x109                 	// #265
    5914:	mov	x8, x23
    5918:	str	xzr, [sp, #200]
    591c:	add	x26, sp, #0x110
    5920:	mov	x0, x21
    5924:	add	x1, sp, #0xc8
    5928:	str	w22, [sp, #200]
    592c:	add	x27, sp, #0x128
    5930:	str	xzr, [sp, #208]
    5934:	add	x21, sp, #0x290
    5938:	strh	w4, [sp, #216]
    593c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5940:	mov	x0, x26
    5944:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5948:	add	x1, x1, #0x0
    594c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5950:	mov	x10, x27
    5954:	mov	x1, x26
    5958:	mov	x0, x23
    595c:	mov	x8, x27
    5960:	str	x10, [sp, #128]
    5964:	add	x23, sp, #0x140
    5968:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    596c:	add	x26, sp, #0x158
    5970:	ldr	x0, [x19]
    5974:	add	x6, sp, #0x200
    5978:	add	x5, sp, #0x1e8
    597c:	add	x9, sp, #0x1d0
    5980:	add	x7, sp, #0x1b8
    5984:	add	x11, sp, #0x1a0
    5988:	ldr	x1, [x0]
    598c:	add	x2, sp, #0x390
    5990:	mov	x8, x21
    5994:	stp	x2, x7, [sp, #112]
    5998:	add	x27, sp, #0x170
    599c:	ldr	x1, [x1, #48]
    59a0:	stp	x6, x5, [sp, #144]
    59a4:	add	x19, sp, #0x188
    59a8:	stp	x9, x11, [sp, #160]
    59ac:	add	x22, sp, #0x300
    59b0:	add	x28, sp, #0x218
    59b4:	blr	x1
    59b8:	mov	x0, x23
    59bc:	mov	x1, x21
    59c0:	str	x0, [sp, #104]
    59c4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    59c8:	ldr	x10, [sp, #128]
    59cc:	mov	x8, x26
    59d0:	ldr	x0, [sp, #104]
    59d4:	add	x23, sp, #0x230
    59d8:	mov	x1, x0
    59dc:	mov	x0, x10
    59e0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    59e4:	mov	x0, x27
    59e8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    59ec:	add	x1, x1, #0x0
    59f0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    59f4:	mov	x10, x19
    59f8:	mov	x1, x27
    59fc:	mov	x0, x26
    5a00:	mov	x8, x19
    5a04:	str	x10, [sp, #136]
    5a08:	add	x26, sp, #0x248
    5a0c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5a10:	add	x27, sp, #0x260
    5a14:	ldr	x2, [sp, #176]
    5a18:	str	x2, [sp, #128]
    5a1c:	mov	x8, x22
    5a20:	add	x19, sp, #0x278
    5a24:	ldr	x0, [x2, #16]
    5a28:	ldr	x1, [x0]
    5a2c:	ldr	x1, [x1, #16]
    5a30:	blr	x1
    5a34:	ldr	x11, [sp, #168]
    5a38:	mov	x1, x22
    5a3c:	str	x11, [sp, #104]
    5a40:	mov	x0, x11
    5a44:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5a48:	ldr	x7, [sp, #120]
    5a4c:	ldr	x10, [sp, #136]
    5a50:	mov	x8, x7
    5a54:	ldr	x0, [sp, #104]
    5a58:	mov	x1, x0
    5a5c:	mov	x0, x10
    5a60:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5a64:	ldr	x9, [sp, #160]
    5a68:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5a6c:	add	x1, x1, #0x0
    5a70:	str	x9, [sp, #104]
    5a74:	mov	x0, x9
    5a78:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5a7c:	ldr	x5, [sp, #152]
    5a80:	ldr	x0, [sp, #104]
    5a84:	ldr	x8, [sp, #120]
    5a88:	mov	x1, x0
    5a8c:	str	x5, [sp, #120]
    5a90:	mov	x0, x8
    5a94:	mov	x8, x5
    5a98:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5a9c:	ldr	x3, [sp, #184]
    5aa0:	ldr	x8, [sp, #112]
    5aa4:	mov	x0, x3
    5aa8:	ldr	x1, [x3]
    5aac:	ldr	x1, [x1, #16]
    5ab0:	blr	x1
    5ab4:	ldr	x1, [sp, #112]
    5ab8:	ldr	x6, [sp, #144]
    5abc:	str	x6, [sp, #104]
    5ac0:	mov	x0, x6
    5ac4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5ac8:	ldr	x5, [sp, #120]
    5acc:	mov	x8, x28
    5ad0:	ldr	x0, [sp, #104]
    5ad4:	mov	x1, x0
    5ad8:	mov	x0, x5
    5adc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5ae0:	mov	x0, x23
    5ae4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5ae8:	add	x1, x1, #0x0
    5aec:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5af0:	mov	x1, x23
    5af4:	mov	x0, x28
    5af8:	mov	x8, x26
    5afc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5b00:	ldr	x2, [sp, #128]
    5b04:	mov	x8, x20
    5b08:	mov	x0, x2
    5b0c:	ldr	x1, [x2]
    5b10:	ldr	x1, [x1, #40]
    5b14:	blr	x1
    5b18:	mov	x1, x20
    5b1c:	mov	x0, x27
    5b20:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5b24:	add	x20, x20, #0x10
    5b28:	mov	x8, x19
    5b2c:	mov	x1, x27
    5b30:	mov	x0, x26
    5b34:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5b38:	add	x0, sp, #0xc0
    5b3c:	mov	x2, x19
    5b40:	mov	x1, #0x1                   	// #1
    5b44:	str	x24, [sp, #192]
    5b48:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    5b4c:	ldr	x0, [sp, #1056]
    5b50:	cmp	x0, x20
    5b54:	b.eq	5b5c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xff4>  // b.none
    5b58:	bl	0 <_ZdlPv>
    5b5c:	ldr	x1, [sp, #112]
    5b60:	ldr	x0, [sp, #912]
    5b64:	add	x23, x1, #0x10
    5b68:	cmp	x0, x23
    5b6c:	b.eq	5b74 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x100c>  // b.none
    5b70:	bl	0 <_ZdlPv>
    5b74:	ldr	x0, [sp, #768]
    5b78:	add	x22, x22, #0x10
    5b7c:	cmp	x0, x22
    5b80:	b.eq	5b88 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1020>  // b.none
    5b84:	bl	0 <_ZdlPv>
    5b88:	ldr	x0, [sp, #656]
    5b8c:	add	x21, x21, #0x10
    5b90:	cmp	x0, x21
    5b94:	b.eq	5b9c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1034>  // b.none
    5b98:	bl	0 <_ZdlPv>
    5b9c:	mov	x28, #0x0                   	// #0
    5ba0:	b	54a0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x938>
    5ba4:	add	x21, sp, #0x390
    5ba8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5bac:	mov	x0, x21
    5bb0:	add	x1, x1, #0x0
    5bb4:	b	5728 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xbc0>
    5bb8:	ldp	x2, x1, [x19, #8]
    5bbc:	mov	x0, x19
    5bc0:	cmp	x2, x1
    5bc4:	cset	w1, eq  // eq = none
    5bc8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5bcc:	str	w0, [x19, #40]
    5bd0:	mov	x0, x19
    5bd4:	bl	4480 <_ZN4llvm8TGParser9ParseTypeEv>
    5bd8:	mov	x24, x0
    5bdc:	cbz	x0, 5eb4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x134c>
    5be0:	ldr	w0, [x19, #40]
    5be4:	cmp	w0, #0xb
    5be8:	b.eq	5e64 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x12fc>  // b.none
    5bec:	add	x21, sp, #0x390
    5bf0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5bf4:	mov	x0, x21
    5bf8:	add	x1, x1, #0x0
    5bfc:	b	5724 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xbbc>
    5c00:	ldp	x0, x1, [x19, #48]
    5c04:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    5c08:	mov	x22, x0
    5c0c:	ldp	x2, x1, [x19, #8]
    5c10:	mov	x0, x19
    5c14:	cmp	x2, x1
    5c18:	cset	w1, eq  // eq = none
    5c1c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5c20:	str	w0, [x19, #40]
    5c24:	b	5040 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x4d8>
    5c28:	add	x20, sp, #0x420
    5c2c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5c30:	mov	x0, x20
    5c34:	add	x1, x1, #0x0
    5c38:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5c3c:	mov	x28, #0x0                   	// #0
    5c40:	mov	x1, x20
    5c44:	mov	x0, x19
    5c48:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5c4c:	ldp	x23, x24, [sp, #48]
    5c50:	b	4bec <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x84>
    5c54:	ldp	x25, x26, [sp, #64]
    5c58:	b	5508 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x9a0>
    5c5c:	ldp	x2, x1, [x19, #8]
    5c60:	mov	x0, x19
    5c64:	cmp	x2, x1
    5c68:	cset	w1, eq  // eq = none
    5c6c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5c70:	ldr	w21, [x28, #64]
    5c74:	ldr	w5, [sp, #696]
    5c78:	str	w0, [x19, #40]
    5c7c:	mov	w0, w21
    5c80:	str	x0, [sp, #104]
    5c84:	cmp	w5, w21
    5c88:	b.hi	5ee0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1378>  // b.pmore
    5c8c:	cbz	w21, 5f68 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1400>
    5c90:	ldr	x23, [x28, #56]
    5c94:	sub	w21, w21, #0x1
    5c98:	mov	x27, #0x0                   	// #0
    5c9c:	mov	w26, #0x18                  	// #24
    5ca0:	ldr	w2, [x28, #80]
    5ca4:	mov	w22, w27
    5ca8:	ldr	x0, [x28, #72]
    5cac:	lsl	x6, x27, #3
    5cb0:	ldr	x3, [x23]
    5cb4:	umaddl	x2, w2, w26, x0
    5cb8:	cmp	x0, x2
    5cbc:	b.ne	5cd0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1168>  // b.any
    5cc0:	b	5d54 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x11ec>
    5cc4:	add	x0, x0, #0x18
    5cc8:	cmp	x2, x0
    5ccc:	b.eq	5d54 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x11ec>  // b.none
    5cd0:	ldr	x1, [x0]
    5cd4:	mov	x19, x0
    5cd8:	cmp	x3, x1
    5cdc:	b.ne	5cc4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x115c>  // b.any
    5ce0:	cmp	w22, w5
    5ce4:	b.cs	5d5c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x11f4>  // b.hs, b.nlast
    5ce8:	cmp	x27, w5, uxtw
    5cec:	b.cs	5f0c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x13a4>  // b.hs, b.nlast
    5cf0:	ldr	x0, [sp, #688]
    5cf4:	ldr	x0, [x0, x6]
    5cf8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5cfc:	mov	x2, x0
    5d00:	cbz	x0, 5d74 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x120c>
    5d04:	ldr	x0, [x0, #16]
    5d08:	ldr	x3, [x19, #8]
    5d0c:	ldr	x5, [x0]
    5d10:	and	x3, x3, #0xfffffffffffffff8
    5d14:	stp	x3, x2, [sp, #112]
    5d18:	mov	x1, x3
    5d1c:	ldr	x5, [x5, #24]
    5d20:	blr	x5
    5d24:	tst	w0, #0xff
    5d28:	ldp	x3, x2, [sp, #112]
    5d2c:	b.eq	58f4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xd8c>  // b.none
    5d30:	cmp	x27, x21
    5d34:	b.eq	5f68 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1400>  // b.none
    5d38:	ldr	x0, [sp, #104]
    5d3c:	add	x27, x27, #0x1
    5d40:	add	x23, x23, #0x8
    5d44:	cmp	x0, x27
    5d48:	b.eq	5f64 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x13fc>  // b.none
    5d4c:	ldr	w5, [sp, #696]
    5d50:	b	5ca0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1138>
    5d54:	mov	x19, #0x0                   	// #0
    5d58:	b	5ce0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1178>
    5d5c:	ldr	x0, [x19, #16]
    5d60:	ldr	x1, [x0]
    5d64:	ldr	x1, [x1, #24]
    5d68:	blr	x1
    5d6c:	tst	w0, #0xff
    5d70:	b.ne	5d30 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x11c8>  // b.any
    5d74:	add	x21, sp, #0x218
    5d78:	add	x19, sp, #0x230
    5d7c:	mov	x0, x21
    5d80:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5d84:	add	x1, x1, #0x0
    5d88:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5d8c:	mov	w2, #0x109                 	// #265
    5d90:	mov	x8, x19
    5d94:	str	xzr, [sp, #512]
    5d98:	mov	x0, x21
    5d9c:	add	x1, sp, #0x200
    5da0:	add	x21, sp, #0x248
    5da4:	str	w22, [sp, #512]
    5da8:	add	x26, sp, #0x260
    5dac:	str	xzr, [sp, #520]
    5db0:	add	x27, sp, #0x278
    5db4:	strh	w2, [sp, #528]
    5db8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5dbc:	mov	x0, x21
    5dc0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5dc4:	add	x1, x1, #0x0
    5dc8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5dcc:	mov	x1, x21
    5dd0:	mov	x0, x19
    5dd4:	mov	x8, x26
    5dd8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5ddc:	ldr	x0, [x23]
    5de0:	mov	x8, x20
    5de4:	add	x21, sp, #0x290
    5de8:	add	x22, sp, #0x300
    5dec:	add	x19, sp, #0x390
    5df0:	ldr	x1, [x0]
    5df4:	ldr	x1, [x1, #48]
    5df8:	blr	x1
    5dfc:	mov	x1, x20
    5e00:	mov	x0, x27
    5e04:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5e08:	add	x20, x20, #0x10
    5e0c:	mov	x8, x21
    5e10:	mov	x1, x27
    5e14:	mov	x0, x26
    5e18:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5e1c:	mov	x0, x22
    5e20:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5e24:	add	x1, x1, #0x0
    5e28:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5e2c:	mov	x8, x19
    5e30:	mov	x1, x22
    5e34:	mov	x0, x21
    5e38:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5e3c:	add	x0, sp, #0x1e8
    5e40:	mov	x2, x19
    5e44:	mov	x1, #0x1                   	// #1
    5e48:	str	x24, [sp, #488]
    5e4c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    5e50:	ldr	x0, [sp, #1056]
    5e54:	cmp	x0, x20
    5e58:	b.eq	5b9c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1034>  // b.none
    5e5c:	bl	0 <_ZdlPv>
    5e60:	b	5b9c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1034>
    5e64:	ldp	x2, x1, [x19, #8]
    5e68:	mov	x0, x19
    5e6c:	cmp	x2, x1
    5e70:	cset	w1, eq  // eq = none
    5e74:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5e78:	ldr	w25, [sp, #1064]
    5e7c:	ldr	x21, [sp, #1056]
    5e80:	str	w0, [x19, #40]
    5e84:	add	x25, x21, x25, lsl #3
    5e88:	cmp	x21, x25
    5e8c:	b.ne	5560 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x9f8>  // b.any
    5e90:	b	55f0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xa88>
    5e94:	ldp	x25, x26, [sp, #64]
    5e98:	b	5500 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x998>
    5e9c:	mov	x0, x2
    5ea0:	ldp	x25, x26, [sp, #64]
    5ea4:	b	5500 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x998>
    5ea8:	mov	x0, x1
    5eac:	mov	x1, #0x0                   	// #0
    5eb0:	b	5500 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x998>
    5eb4:	mov	x28, #0x0                   	// #0
    5eb8:	ldp	x25, x26, [sp, #64]
    5ebc:	b	52d0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x768>
    5ec0:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5ec4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5ec8:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5ecc:	add	x3, x3, #0x0
    5ed0:	add	x1, x1, #0x0
    5ed4:	add	x0, x0, #0x0
    5ed8:	mov	w2, #0x22e                 	// #558
    5edc:	bl	0 <__assert_fail>
    5ee0:	mov	x0, x20
    5ee4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5ee8:	add	x1, x1, #0x0
    5eec:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5ef0:	mov	x2, x20
    5ef4:	add	x0, sp, #0x390
    5ef8:	mov	x1, #0x1                   	// #1
    5efc:	mov	x28, #0x0                   	// #0
    5f00:	str	x24, [sp, #912]
    5f04:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    5f08:	b	54a0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x938>
    5f0c:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5f10:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5f14:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5f18:	add	x3, x3, #0x0
    5f1c:	add	x1, x1, #0x0
    5f20:	add	x0, x0, #0x0
    5f24:	mov	w2, #0x95                  	// #149
    5f28:	bl	0 <__assert_fail>
    5f2c:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5f30:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5f34:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5f38:	add	x3, x3, #0x0
    5f3c:	add	x1, x1, #0x0
    5f40:	add	x0, x0, #0x0
    5f44:	mov	w2, #0x43                  	// #67
    5f48:	bl	0 <__assert_fail>
    5f4c:	add	x21, sp, #0x390
    5f50:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5f54:	mov	x0, x21
    5f58:	add	x1, x1, #0x0
    5f5c:	b	5724 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xbbc>
    5f60:	bl	c8 <_ZN4llvm3isaINS_8BitsInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    5f64:	bl	28 <_ZNK4llvm8ArrayRefIPNS_4InitEEixEm.isra.0.part.0>
    5f68:	ldr	w2, [sp, #696]
    5f6c:	mov	x0, x28
    5f70:	ldr	x1, [sp, #688]
    5f74:	bl	0 <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE>
    5f78:	bl	0 <_ZNK4llvm10VarDefInit4FoldEv>
    5f7c:	mov	x28, x0
    5f80:	b	54a0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x938>
    5f84:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5f88:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5f8c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5f90:	add	x3, x3, #0x0
    5f94:	add	x1, x1, #0x0
    5f98:	add	x0, x0, #0x0
    5f9c:	mov	w2, #0x6f                  	// #111
    5fa0:	stp	x25, x26, [sp, #64]
    5fa4:	bl	0 <__assert_fail>
    5fa8:	bl	50 <_ZN4llvm3isaINS_9BitsRecTyEPNS_5RecTyEEEbRKT0_.isra.0.part.0>
    5fac:	nop

0000000000005fb0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>:
    5fb0:	stp	x29, x30, [sp, #-352]!
    5fb4:	mov	x29, sp
    5fb8:	stp	x19, x20, [sp, #16]
    5fbc:	mov	x19, x0
    5fc0:	mov	x20, x1
    5fc4:	stp	x21, x22, [sp, #32]
    5fc8:	mov	w22, w3
    5fcc:	stp	x23, x24, [sp, #48]
    5fd0:	str	x2, [sp, #96]
    5fd4:	bl	4b68 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    5fd8:	mov	x24, x0
    5fdc:	cbz	x0, 61e8 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x238>
    5fe0:	stp	x25, x26, [sp, #64]
    5fe4:	adrp	x25, 0 <_ZN4llvm11StringRecTy6SharedE>
    5fe8:	add	x23, sp, #0x110
    5fec:	ldr	x26, [x25]
    5ff0:	add	x21, x23, #0x10
    5ff4:	ldr	w4, [x19, #40]
    5ff8:	stp	x27, x28, [sp, #80]
    5ffc:	adrp	x27, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6000:	cmp	w4, #0xf
    6004:	b.eq	6100 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x150>  // b.none
    6008:	b.hi	617c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1cc>  // b.pmore
    600c:	cmp	w4, #0x4
    6010:	b.eq	6200 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x250>  // b.none
    6014:	cmp	w4, #0x6
    6018:	b.ne	61e0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x230>  // b.any
    601c:	cmp	w22, #0x1
    6020:	b.eq	61e0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x230>  // b.none
    6024:	mov	x0, x19
    6028:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    602c:	ldp	x1, x2, [x19, #8]
    6030:	mov	x28, x0
    6034:	mov	x0, x19
    6038:	cmp	x2, x1
    603c:	cset	w1, eq  // eq = none
    6040:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6044:	str	w0, [x19, #40]
    6048:	mov	x2, #0x1000000000          	// #68719476736
    604c:	mov	x1, x23
    6050:	mov	x0, x19
    6054:	stp	x21, x2, [sp, #272]
    6058:	bl	69d8 <_ZN4llvm8TGParser14ParseRangeListERNS_15SmallVectorImplIjEE>
    605c:	ldr	w2, [sp, #280]
    6060:	cbz	w2, 6508 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x558>
    6064:	ldr	x1, [sp, #272]
    6068:	mov	x0, #0xfffffffffffffffc    	// #-4
    606c:	add	x0, x0, w2, uxtw #2
    6070:	mov	w2, w2
    6074:	add	x0, x1, x0
    6078:	cmp	x0, x1
    607c:	b.ls	60a4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xf4>  // b.plast
    6080:	mov	x2, x1
    6084:	nop
    6088:	ldr	w4, [x0]
    608c:	ldr	w3, [x2]
    6090:	str	w4, [x2], #4
    6094:	str	w3, [x0], #-4
    6098:	cmp	x0, x2
    609c:	b.hi	6088 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xd8>  // b.pmore
    60a0:	ldr	w2, [sp, #280]
    60a4:	ldr	x3, [x24]
    60a8:	mov	x0, x24
    60ac:	ldr	x3, [x3, #72]
    60b0:	blr	x3
    60b4:	mov	x24, x0
    60b8:	cbz	x0, 64e0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x530>
    60bc:	ldr	w0, [x19, #40]
    60c0:	cmp	w0, #0x7
    60c4:	b.ne	6690 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x6e0>  // b.any
    60c8:	ldp	x2, x1, [x19, #8]
    60cc:	mov	x0, x19
    60d0:	cmp	x2, x1
    60d4:	cset	w1, eq  // eq = none
    60d8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    60dc:	mov	w4, w0
    60e0:	ldr	x0, [sp, #272]
    60e4:	str	w4, [x19, #40]
    60e8:	cmp	x0, x21
    60ec:	b.eq	6000 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x50>  // b.none
    60f0:	bl	0 <free>
    60f4:	ldr	w4, [x19, #40]
    60f8:	cmp	w4, #0xf
    60fc:	b.ne	6008 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x58>  // b.any
    6100:	ldp	x2, x1, [x19, #8]
    6104:	mov	x0, x19
    6108:	cmp	x2, x1
    610c:	cset	w1, eq  // eq = none
    6110:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6114:	str	w0, [x19, #40]
    6118:	cmp	w0, #0x48
    611c:	b.ne	652c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x57c>  // b.any
    6120:	ldp	x0, x1, [x19, #48]
    6124:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    6128:	mov	x28, x0
    612c:	ldr	x2, [x24]
    6130:	mov	x1, x0
    6134:	mov	x0, x24
    6138:	ldr	x2, [x2, #88]
    613c:	blr	x2
    6140:	cbz	x0, 6588 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x5d8>
    6144:	mov	x1, x28
    6148:	mov	x0, x24
    614c:	bl	0 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE>
    6150:	mov	x1, x20
    6154:	bl	0 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE>
    6158:	ldp	x2, x1, [x19, #8]
    615c:	mov	x24, x0
    6160:	mov	x0, x19
    6164:	cmp	x2, x1
    6168:	cset	w1, eq  // eq = none
    616c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6170:	mov	w4, w0
    6174:	str	w0, [x19, #40]
    6178:	b	6000 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x50>
    617c:	cmp	w4, #0x12
    6180:	b.ne	61e0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x230>  // b.any
    6184:	mov	x0, x19
    6188:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    618c:	mov	x28, x0
    6190:	cbz	x24, 66c8 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x718>
    6194:	ldrb	w0, [x24, #8]
    6198:	sub	w0, w0, #0x1
    619c:	and	w0, w0, #0xff
    61a0:	cmp	w0, #0x16
    61a4:	b.ls	62b0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x300>  // b.plast
    61a8:	add	x19, sp, #0x110
    61ac:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    61b0:	mov	x0, x19
    61b4:	add	x1, x1, #0x0
    61b8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    61bc:	mov	x24, #0x0                   	// #0
    61c0:	mov	x2, x19
    61c4:	add	x0, sp, #0xf0
    61c8:	mov	x1, #0x1                   	// #1
    61cc:	str	x28, [sp, #240]
    61d0:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    61d4:	ldp	x25, x26, [sp, #64]
    61d8:	ldp	x27, x28, [sp, #80]
    61dc:	b	61e8 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x238>
    61e0:	ldp	x25, x26, [sp, #64]
    61e4:	ldp	x27, x28, [sp, #80]
    61e8:	mov	x0, x24
    61ec:	ldp	x19, x20, [sp, #16]
    61f0:	ldp	x21, x22, [sp, #32]
    61f4:	ldp	x23, x24, [sp, #48]
    61f8:	ldp	x29, x30, [sp], #352
    61fc:	ret
    6200:	mov	x0, x19
    6204:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    6208:	ldp	x2, x1, [x19, #8]
    620c:	mov	x28, x0
    6210:	mov	x0, x19
    6214:	cmp	x2, x1
    6218:	cset	w1, eq  // eq = none
    621c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6220:	str	w0, [x19, #40]
    6224:	mov	x2, #0x1000000000          	// #68719476736
    6228:	mov	x1, x23
    622c:	mov	x0, x19
    6230:	stp	x21, x2, [sp, #272]
    6234:	bl	69d8 <_ZN4llvm8TGParser14ParseRangeListERNS_15SmallVectorImplIjEE>
    6238:	ldr	w2, [sp, #280]
    623c:	cbz	w2, 628c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x2dc>
    6240:	ldr	x3, [x24]
    6244:	mov	x0, x24
    6248:	ldr	x1, [sp, #272]
    624c:	mov	w2, w2
    6250:	ldr	x3, [x3, #80]
    6254:	blr	x3
    6258:	mov	x24, x0
    625c:	cbz	x0, 655c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x5ac>
    6260:	ldr	w0, [x19, #40]
    6264:	cmp	w0, #0x5
    6268:	b.eq	60c8 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x118>  // b.none
    626c:	add	x20, sp, #0xf0
    6270:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6274:	mov	x0, x20
    6278:	add	x1, x1, #0x0
    627c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6280:	mov	x1, x20
    6284:	mov	x0, x19
    6288:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    628c:	ldr	x0, [sp, #272]
    6290:	add	x23, x23, #0x10
    6294:	cmp	x0, x23
    6298:	b.eq	62a0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x2f0>  // b.none
    629c:	bl	0 <free>
    62a0:	mov	x24, #0x0                   	// #0
    62a4:	ldp	x25, x26, [sp, #64]
    62a8:	ldp	x27, x28, [sp, #80]
    62ac:	b	61e8 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x238>
    62b0:	ldr	x0, [x24, #16]
    62b4:	cbz	x0, 66e8 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x738>
    62b8:	ldr	w1, [x0, #8]
    62bc:	cmp	w1, #0x5
    62c0:	b.eq	6484 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x4d4>  // b.none
    62c4:	cmp	x0, x26
    62c8:	b.eq	63a8 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x3f8>  // b.none
    62cc:	mov	x2, x26
    62d0:	mov	x1, x24
    62d4:	mov	w0, #0x0                   	// #0
    62d8:	bl	0 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE>
    62dc:	mov	x1, x20
    62e0:	mov	w2, #0x0                   	// #0
    62e4:	bl	0 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb>
    62e8:	cbz	x0, 66c8 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x718>
    62ec:	ldrb	w1, [x0, #8]
    62f0:	sub	w1, w1, #0x1
    62f4:	and	w1, w1, #0xff
    62f8:	cmp	w1, #0x16
    62fc:	b.ls	63a4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x3f4>  // b.plast
    6300:	add	x23, sp, #0x78
    6304:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6308:	mov	x0, x23
    630c:	add	x1, x1, #0x0
    6310:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6314:	add	x19, sp, #0x110
    6318:	ldr	x1, [x24]
    631c:	mov	x8, x19
    6320:	mov	x0, x24
    6324:	ldr	x1, [x1, #40]
    6328:	add	x24, sp, #0x90
    632c:	add	x21, sp, #0xb0
    6330:	add	x22, sp, #0xd0
    6334:	add	x20, sp, #0xf0
    6338:	blr	x1
    633c:	mov	x1, x19
    6340:	mov	x0, x24
    6344:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6348:	add	x19, x19, #0x10
    634c:	mov	x8, x21
    6350:	mov	x1, x24
    6354:	mov	x0, x23
    6358:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    635c:	mov	x0, x22
    6360:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6364:	add	x1, x1, #0x0
    6368:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    636c:	mov	x8, x20
    6370:	mov	x1, x22
    6374:	mov	x0, x21
    6378:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    637c:	add	x0, sp, #0x70
    6380:	mov	x2, x20
    6384:	mov	x1, #0x1                   	// #1
    6388:	str	x28, [sp, #112]
    638c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    6390:	ldr	x0, [sp, #272]
    6394:	cmp	x0, x19
    6398:	b.eq	62a0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x2f0>  // b.none
    639c:	bl	0 <_ZdlPv>
    63a0:	b	62a0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x2f0>
    63a4:	mov	x24, x0
    63a8:	ldp	x2, x1, [x19, #8]
    63ac:	mov	x0, x19
    63b0:	cmp	x2, x1
    63b4:	cset	w1, eq  // eq = none
    63b8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    63bc:	str	w0, [x19, #40]
    63c0:	cmp	w0, #0x6
    63c4:	b.eq	63d4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x424>  // b.none
    63c8:	sub	w0, w0, #0xc
    63cc:	cmp	w0, #0x1
    63d0:	b.hi	63f8 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x448>  // b.pmore
    63d4:	mov	x1, #0x0                   	// #0
    63d8:	add	x0, x27, #0x0
    63dc:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    63e0:	mov	x1, x0
    63e4:	mov	x0, x24
    63e8:	bl	0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>
    63ec:	ldr	w4, [x19, #40]
    63f0:	mov	x24, x0
    63f4:	b	6000 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x50>
    63f8:	mov	x1, x20
    63fc:	mov	w3, #0x1                   	// #1
    6400:	mov	x2, #0x0                   	// #0
    6404:	mov	x0, x19
    6408:	bl	5fb0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    640c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6410:	mov	x3, x0
    6414:	cbz	x0, 66b4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x704>
    6418:	ldr	x2, [x25]
    641c:	mov	x1, x0
    6420:	ldr	x0, [x0, #16]
    6424:	cmp	x0, x2
    6428:	b.eq	63e4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x434>  // b.none
    642c:	mov	w0, #0x0                   	// #0
    6430:	str	x3, [sp, #104]
    6434:	bl	0 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE>
    6438:	mov	x1, x20
    643c:	mov	w2, #0x0                   	// #0
    6440:	bl	0 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb>
    6444:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6448:	mov	x1, x0
    644c:	ldr	x3, [sp, #104]
    6450:	cbnz	x0, 63e4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x434>
    6454:	add	x23, sp, #0x78
    6458:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    645c:	mov	x0, x23
    6460:	add	x1, x1, #0x0
    6464:	str	x3, [sp, #96]
    6468:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    646c:	ldr	x3, [sp, #96]
    6470:	add	x19, sp, #0x110
    6474:	mov	x8, x19
    6478:	mov	x0, x3
    647c:	ldr	x1, [x3]
    6480:	b	6324 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x374>
    6484:	ldp	x2, x1, [x19, #8]
    6488:	mov	x0, x19
    648c:	cmp	x2, x1
    6490:	cset	w1, eq  // eq = none
    6494:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6498:	str	w0, [x19, #40]
    649c:	mov	w4, w0
    64a0:	cmp	w0, #0x6
    64a4:	b.eq	601c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x6c>  // b.none
    64a8:	sub	w0, w0, #0xc
    64ac:	cmp	w0, #0x1
    64b0:	b.ls	6000 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x50>  // b.plast
    64b4:	ldr	x2, [sp, #96]
    64b8:	mov	w3, #0x1                   	// #1
    64bc:	mov	x1, x20
    64c0:	mov	x0, x19
    64c4:	bl	5fb0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    64c8:	mov	x1, x0
    64cc:	mov	x0, x24
    64d0:	bl	0 <_ZN4llvm9BinOpInit13getListConcatEPNS_9TypedInitEPNS_4InitE>
    64d4:	ldr	w4, [x19, #40]
    64d8:	mov	x24, x0
    64dc:	b	6000 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x50>
    64e0:	add	x19, sp, #0xf0
    64e4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    64e8:	mov	x0, x19
    64ec:	add	x1, x1, #0x0
    64f0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    64f4:	str	x28, [sp, #208]
    64f8:	mov	x2, x19
    64fc:	add	x0, sp, #0xd0
    6500:	mov	x1, #0x1                   	// #1
    6504:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    6508:	ldr	x0, [sp, #272]
    650c:	add	x23, x23, #0x10
    6510:	mov	x24, #0x0                   	// #0
    6514:	cmp	x0, x23
    6518:	b.eq	61e0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x230>  // b.none
    651c:	bl	0 <free>
    6520:	ldp	x25, x26, [sp, #64]
    6524:	ldp	x27, x28, [sp, #80]
    6528:	b	61e8 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x238>
    652c:	add	x20, sp, #0x110
    6530:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6534:	mov	x0, x20
    6538:	add	x1, x1, #0x0
    653c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6540:	mov	x24, #0x0                   	// #0
    6544:	mov	x1, x20
    6548:	mov	x0, x19
    654c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6550:	ldp	x25, x26, [sp, #64]
    6554:	ldp	x27, x28, [sp, #80]
    6558:	b	61e8 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x238>
    655c:	add	x19, sp, #0xf0
    6560:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6564:	mov	x0, x19
    6568:	add	x1, x1, #0x0
    656c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6570:	str	x28, [sp, #208]
    6574:	mov	x2, x19
    6578:	add	x0, sp, #0xd0
    657c:	mov	x1, #0x1                   	// #1
    6580:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    6584:	b	628c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x2dc>
    6588:	ldr	w0, [x19, #40]
    658c:	sub	w0, w0, #0x48
    6590:	cmp	w0, #0x3
    6594:	b.hi	66ec <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x73c>  // b.pmore
    6598:	add	x21, sp, #0x90
    659c:	add	x1, x19, #0x30
    65a0:	mov	x8, x21
    65a4:	add	x22, sp, #0xb0
    65a8:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    65ac:	add	x0, x0, #0x0
    65b0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    65b4:	add	x23, sp, #0xd0
    65b8:	mov	x0, x21
    65bc:	mov	x8, x22
    65c0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    65c4:	add	x1, x1, #0x0
    65c8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    65cc:	add	x20, sp, #0x110
    65d0:	ldr	x1, [x24]
    65d4:	mov	x0, x24
    65d8:	mov	x8, x23
    65dc:	add	x24, sp, #0xf0
    65e0:	add	x25, sp, #0x78
    65e4:	ldr	x1, [x1, #40]
    65e8:	blr	x1
    65ec:	mov	x1, x23
    65f0:	mov	x0, x22
    65f4:	mov	x8, x24
    65f8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    65fc:	mov	x8, x20
    6600:	mov	x0, x24
    6604:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6608:	add	x1, x1, #0x0
    660c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6610:	mov	x1, x20
    6614:	mov	x0, x25
    6618:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    661c:	add	x20, x20, #0x10
    6620:	mov	x1, x25
    6624:	mov	x0, x19
    6628:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    662c:	ldr	x0, [sp, #272]
    6630:	cmp	x0, x20
    6634:	b.eq	663c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x68c>  // b.none
    6638:	bl	0 <_ZdlPv>
    663c:	ldr	x0, [sp, #240]
    6640:	add	x24, x24, #0x10
    6644:	cmp	x0, x24
    6648:	b.eq	6650 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x6a0>  // b.none
    664c:	bl	0 <_ZdlPv>
    6650:	ldr	x0, [sp, #208]
    6654:	add	x23, x23, #0x10
    6658:	cmp	x0, x23
    665c:	b.eq	6664 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x6b4>  // b.none
    6660:	bl	0 <_ZdlPv>
    6664:	ldr	x0, [sp, #176]
    6668:	add	x22, x22, #0x10
    666c:	cmp	x0, x22
    6670:	b.eq	6678 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x6c8>  // b.none
    6674:	bl	0 <_ZdlPv>
    6678:	ldr	x0, [sp, #144]
    667c:	add	x21, x21, #0x10
    6680:	cmp	x0, x21
    6684:	b.eq	62a0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x2f0>  // b.none
    6688:	bl	0 <_ZdlPv>
    668c:	b	62a0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x2f0>
    6690:	add	x20, sp, #0xf0
    6694:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6698:	mov	x0, x20
    669c:	add	x1, x1, #0x0
    66a0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    66a4:	mov	x1, x20
    66a8:	mov	x0, x19
    66ac:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    66b0:	b	6508 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x558>
    66b4:	add	x19, sp, #0x110
    66b8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    66bc:	mov	x0, x19
    66c0:	add	x1, x1, #0x0
    66c4:	b	61b8 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x208>
    66c8:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    66cc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    66d0:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    66d4:	add	x3, x3, #0x0
    66d8:	add	x1, x1, #0x0
    66dc:	add	x0, x0, #0x0
    66e0:	mov	w2, #0x69                  	// #105
    66e4:	bl	0 <__assert_fail>
    66e8:	bl	78 <_ZN4llvm3isaINS_9ListRecTyEPNS_5RecTyEEEbRKT0_.isra.0.part.0>
    66ec:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    66f0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    66f4:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    66f8:	add	x3, x3, #0x0
    66fc:	add	x1, x1, #0x0
    6700:	add	x0, x0, #0x0
    6704:	mov	w2, #0x6f                  	// #111
    6708:	bl	0 <__assert_fail>
    670c:	nop

0000000000006710 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE>:
    6710:	stp	x29, x30, [sp, #-96]!
    6714:	mov	x3, x2
    6718:	mov	x29, sp
    671c:	stp	x19, x20, [sp, #16]
    6720:	mov	x19, x1
    6724:	mov	x20, x0
    6728:	cbz	x2, 6804 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0xf4>
    672c:	ldrb	w0, [x3, #8]
    6730:	cmp	w0, #0x8
    6734:	b.eq	677c <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x6c>  // b.none
    6738:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    673c:	add	x1, x1, #0x0
    6740:	add	x19, sp, #0x48
    6744:	mov	x0, x19
    6748:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    674c:	mov	x0, x20
    6750:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    6754:	mov	x3, x0
    6758:	mov	x2, x19
    675c:	add	x0, sp, #0x40
    6760:	mov	x1, #0x1                   	// #1
    6764:	str	x3, [sp, #64]
    6768:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    676c:	mov	w0, #0x1                   	// #1
    6770:	ldp	x19, x20, [sp, #16]
    6774:	ldp	x29, x30, [sp], #96
    6778:	ret
    677c:	stp	x21, x22, [sp, #32]
    6780:	ldr	x21, [x3, #24]
    6784:	tbnz	x21, #63, 67d8 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0xc8>
    6788:	ldr	w0, [x20, #40]
    678c:	cmp	w0, #0x2
    6790:	b.eq	68a4 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x194>  // b.none
    6794:	cmp	w0, #0x46
    6798:	b.eq	6818 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x108>  // b.none
    679c:	ldp	w0, w1, [x19, #8]
    67a0:	cmp	w0, w1
    67a4:	b.cs	6998 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x288>  // b.hs, b.nlast
    67a8:	ldr	x1, [x19]
    67ac:	str	w21, [x1, w0, uxtw #2]
    67b0:	ldp	w0, w2, [x19, #8]
    67b4:	mov	w1, w0
    67b8:	add	x1, x1, #0x1
    67bc:	cmp	x1, x2
    67c0:	b.hi	69b4 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x2a4>  // b.pmore
    67c4:	add	w1, w0, #0x1
    67c8:	mov	w0, #0x0                   	// #0
    67cc:	ldp	x21, x22, [sp, #32]
    67d0:	str	w1, [x19, #8]
    67d4:	b	6770 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x60>
    67d8:	add	x19, sp, #0x48
    67dc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    67e0:	mov	x0, x19
    67e4:	add	x1, x1, #0x0
    67e8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    67ec:	mov	x1, x19
    67f0:	mov	x0, x20
    67f4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    67f8:	and	w0, w0, #0xff
    67fc:	ldp	x21, x22, [sp, #32]
    6800:	b	6770 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x60>
    6804:	mov	x1, #0x0                   	// #0
    6808:	bl	5fb0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    680c:	mov	x3, x0
    6810:	cbz	x0, 6738 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x28>
    6814:	b	672c <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x1c>
    6818:	ldp	x2, x1, [x20, #8]
    681c:	mov	x0, x20
    6820:	ldr	x22, [x20, #80]
    6824:	neg	x22, x22
    6828:	cmp	x2, x1
    682c:	cset	w1, eq  // eq = none
    6830:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6834:	str	w0, [x20, #40]
    6838:	tbnz	x22, #63, 67d8 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0xc8>
    683c:	ldr	w0, [x19, #8]
    6840:	cmp	x22, x21
    6844:	str	x23, [sp, #48]
    6848:	b.le	690c <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x1fc>
    684c:	ldr	w3, [x19, #12]
    6850:	add	x23, x19, #0x10
    6854:	nop
    6858:	cmp	w3, w0
    685c:	mov	w20, w21
    6860:	b.ls	6974 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x264>  // b.plast
    6864:	ldr	x2, [x19]
    6868:	str	w20, [x2, w0, uxtw #2]
    686c:	ldp	w0, w3, [x19, #8]
    6870:	mov	w2, w0
    6874:	add	x2, x2, #0x1
    6878:	cmp	x2, w3, uxtw
    687c:	b.hi	69b8 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x2a8>  // b.pmore
    6880:	add	w0, w0, #0x1
    6884:	str	w0, [x19, #8]
    6888:	add	x21, x21, #0x1
    688c:	cmp	x22, x21
    6890:	b.ge	6858 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x148>  // b.tcont
    6894:	mov	w0, #0x0                   	// #0
    6898:	ldp	x21, x22, [sp, #32]
    689c:	ldr	x23, [sp, #48]
    68a0:	b	6770 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x60>
    68a4:	ldp	x2, x1, [x20, #8]
    68a8:	mov	x0, x20
    68ac:	cmp	x2, x1
    68b0:	cset	w1, eq  // eq = none
    68b4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    68b8:	str	w0, [x20, #40]
    68bc:	mov	w3, #0x0                   	// #0
    68c0:	mov	x0, x20
    68c4:	mov	x2, #0x0                   	// #0
    68c8:	mov	x1, #0x0                   	// #0
    68cc:	bl	5fb0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    68d0:	cbz	x0, 68e0 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x1d0>
    68d4:	ldrb	w1, [x0, #8]
    68d8:	cmp	w1, #0x8
    68dc:	b.eq	6990 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x280>  // b.none
    68e0:	add	x19, sp, #0x48
    68e4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    68e8:	mov	x0, x19
    68ec:	add	x1, x1, #0x0
    68f0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    68f4:	mov	x1, x19
    68f8:	mov	x0, x20
    68fc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6900:	mov	w0, #0x1                   	// #1
    6904:	ldp	x21, x22, [sp, #32]
    6908:	b	6770 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x60>
    690c:	ldr	w3, [x19, #12]
    6910:	sub	x22, x22, #0x1
    6914:	add	x23, x19, #0x10
    6918:	cmp	w3, w0
    691c:	mov	w20, w21
    6920:	b.ls	6958 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x248>  // b.plast
    6924:	ldr	x2, [x19]
    6928:	str	w20, [x2, w0, uxtw #2]
    692c:	ldp	w0, w3, [x19, #8]
    6930:	mov	w2, w0
    6934:	add	x2, x2, #0x1
    6938:	cmp	x2, w3, uxtw
    693c:	b.hi	69b8 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x2a8>  // b.pmore
    6940:	add	w0, w0, #0x1
    6944:	str	w0, [x19, #8]
    6948:	sub	x21, x21, #0x1
    694c:	cmp	x21, x22
    6950:	b.ne	6918 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x208>  // b.any
    6954:	b	6894 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x184>
    6958:	mov	x0, x19
    695c:	mov	x1, x23
    6960:	mov	x3, #0x4                   	// #4
    6964:	mov	x2, #0x0                   	// #0
    6968:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    696c:	ldr	w0, [x19, #8]
    6970:	b	6924 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x214>
    6974:	mov	x0, x19
    6978:	mov	x1, x23
    697c:	mov	x3, #0x4                   	// #4
    6980:	mov	x2, #0x0                   	// #0
    6984:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6988:	ldr	w0, [x19, #8]
    698c:	b	6864 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x154>
    6990:	ldr	x22, [x0, #24]
    6994:	b	6838 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x128>
    6998:	mov	x0, x19
    699c:	add	x1, x19, #0x10
    69a0:	mov	x3, #0x4                   	// #4
    69a4:	mov	x2, #0x0                   	// #0
    69a8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    69ac:	ldr	w0, [x19, #8]
    69b0:	b	67a8 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x98>
    69b4:	str	x23, [sp, #48]
    69b8:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    69bc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    69c0:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    69c4:	add	x3, x3, #0x0
    69c8:	add	x1, x1, #0x0
    69cc:	add	x0, x0, #0x0
    69d0:	mov	w2, #0x43                  	// #67
    69d4:	bl	0 <__assert_fail>

00000000000069d8 <_ZN4llvm8TGParser14ParseRangeListERNS_15SmallVectorImplIjEE>:
    69d8:	stp	x29, x30, [sp, #-32]!
    69dc:	mov	x2, #0x0                   	// #0
    69e0:	mov	x29, sp
    69e4:	stp	x19, x20, [sp, #16]
    69e8:	mov	x19, x0
    69ec:	mov	x20, x1
    69f0:	bl	6710 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE>
    69f4:	tst	w0, #0xff
    69f8:	b.eq	6a2c <_ZN4llvm8TGParser14ParseRangeListERNS_15SmallVectorImplIjEE+0x54>  // b.none
    69fc:	b	6a48 <_ZN4llvm8TGParser14ParseRangeListERNS_15SmallVectorImplIjEE+0x70>
    6a00:	ldp	x3, x2, [x19, #8]
    6a04:	cmp	x3, x2
    6a08:	cset	w1, eq  // eq = none
    6a0c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6a10:	str	w0, [x19, #40]
    6a14:	mov	x1, x20
    6a18:	mov	x0, x19
    6a1c:	mov	x2, #0x0                   	// #0
    6a20:	bl	6710 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE>
    6a24:	tst	w0, #0xff
    6a28:	b.ne	6a48 <_ZN4llvm8TGParser14ParseRangeListERNS_15SmallVectorImplIjEE+0x70>  // b.any
    6a2c:	ldr	w2, [x19, #40]
    6a30:	mov	x0, x19
    6a34:	cmp	w2, #0xe
    6a38:	b.eq	6a00 <_ZN4llvm8TGParser14ParseRangeListERNS_15SmallVectorImplIjEE+0x28>  // b.none
    6a3c:	ldp	x19, x20, [sp, #16]
    6a40:	ldp	x29, x30, [sp], #32
    6a44:	ret
    6a48:	str	wzr, [x20, #8]
    6a4c:	ldp	x19, x20, [sp, #16]
    6a50:	ldp	x29, x30, [sp], #32
    6a54:	ret

0000000000006a58 <_ZN4llvm8TGParser22ParseOptionalRangeListERNS_15SmallVectorImplIjEE>:
    6a58:	stp	x29, x30, [sp, #-96]!
    6a5c:	mov	x29, sp
    6a60:	stp	x19, x20, [sp, #16]
    6a64:	mov	x20, x1
    6a68:	ldr	w1, [x0, #40]
    6a6c:	stp	x21, x22, [sp, #32]
    6a70:	mov	w21, #0x0                   	// #0
    6a74:	cmp	w1, #0xa
    6a78:	b.eq	6a90 <_ZN4llvm8TGParser22ParseOptionalRangeListERNS_15SmallVectorImplIjEE+0x38>  // b.none
    6a7c:	mov	w0, w21
    6a80:	ldp	x19, x20, [sp, #16]
    6a84:	ldp	x21, x22, [sp, #32]
    6a88:	ldp	x29, x30, [sp], #96
    6a8c:	ret
    6a90:	mov	x19, x0
    6a94:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    6a98:	mov	x22, x0
    6a9c:	mov	x0, x19
    6aa0:	mov	w21, #0x1                   	// #1
    6aa4:	ldp	x2, x1, [x19, #8]
    6aa8:	cmp	x2, x1
    6aac:	cset	w1, eq  // eq = none
    6ab0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6ab4:	str	w0, [x19, #40]
    6ab8:	mov	x1, x20
    6abc:	mov	x0, x19
    6ac0:	bl	69d8 <_ZN4llvm8TGParser14ParseRangeListERNS_15SmallVectorImplIjEE>
    6ac4:	ldr	w0, [x20, #8]
    6ac8:	cbz	w0, 6a7c <_ZN4llvm8TGParser22ParseOptionalRangeListERNS_15SmallVectorImplIjEE+0x24>
    6acc:	ldr	w0, [x19, #40]
    6ad0:	cmp	w0, #0xb
    6ad4:	b.eq	6b50 <_ZN4llvm8TGParser22ParseOptionalRangeListERNS_15SmallVectorImplIjEE+0xf8>  // b.none
    6ad8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6adc:	add	x1, x1, #0x0
    6ae0:	add	x20, sp, #0x48
    6ae4:	str	x23, [sp, #48]
    6ae8:	mov	x0, x20
    6aec:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6af0:	mov	x0, x19
    6af4:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    6af8:	mov	x3, x0
    6afc:	mov	x2, x20
    6b00:	add	x23, sp, #0x40
    6b04:	mov	x1, #0x1                   	// #1
    6b08:	mov	x0, x23
    6b0c:	str	x3, [sp, #64]
    6b10:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    6b14:	mov	x0, x20
    6b18:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6b1c:	add	x1, x1, #0x0
    6b20:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6b24:	mov	x2, x20
    6b28:	mov	x0, x23
    6b2c:	mov	x1, #0x1                   	// #1
    6b30:	str	x22, [sp, #64]
    6b34:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    6b38:	mov	w0, w21
    6b3c:	ldp	x19, x20, [sp, #16]
    6b40:	ldp	x21, x22, [sp, #32]
    6b44:	ldr	x23, [sp, #48]
    6b48:	ldp	x29, x30, [sp], #96
    6b4c:	ret
    6b50:	ldp	x2, x1, [x19, #8]
    6b54:	mov	x0, x19
    6b58:	mov	w21, #0x0                   	// #0
    6b5c:	cmp	x2, x1
    6b60:	cset	w1, eq  // eq = none
    6b64:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6b68:	str	w0, [x19, #40]
    6b6c:	b	6a7c <_ZN4llvm8TGParser22ParseOptionalRangeListERNS_15SmallVectorImplIjEE+0x24>

0000000000006b70 <_ZN4llvm8TGParser20ParseOptionalBitListERNS_15SmallVectorImplIjEE>:
    6b70:	stp	x29, x30, [sp, #-96]!
    6b74:	mov	x29, sp
    6b78:	stp	x19, x20, [sp, #16]
    6b7c:	mov	x20, x1
    6b80:	ldr	w1, [x0, #40]
    6b84:	stp	x21, x22, [sp, #32]
    6b88:	mov	w21, #0x0                   	// #0
    6b8c:	cmp	w1, #0x6
    6b90:	b.eq	6ba8 <_ZN4llvm8TGParser20ParseOptionalBitListERNS_15SmallVectorImplIjEE+0x38>  // b.none
    6b94:	mov	w0, w21
    6b98:	ldp	x19, x20, [sp, #16]
    6b9c:	ldp	x21, x22, [sp, #32]
    6ba0:	ldp	x29, x30, [sp], #96
    6ba4:	ret
    6ba8:	mov	x19, x0
    6bac:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    6bb0:	mov	x22, x0
    6bb4:	mov	x0, x19
    6bb8:	mov	w21, #0x1                   	// #1
    6bbc:	ldp	x2, x1, [x19, #8]
    6bc0:	cmp	x2, x1
    6bc4:	cset	w1, eq  // eq = none
    6bc8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6bcc:	str	w0, [x19, #40]
    6bd0:	mov	x1, x20
    6bd4:	mov	x0, x19
    6bd8:	bl	69d8 <_ZN4llvm8TGParser14ParseRangeListERNS_15SmallVectorImplIjEE>
    6bdc:	ldr	w0, [x20, #8]
    6be0:	cbz	w0, 6b94 <_ZN4llvm8TGParser20ParseOptionalBitListERNS_15SmallVectorImplIjEE+0x24>
    6be4:	ldr	w0, [x19, #40]
    6be8:	cmp	w0, #0x7
    6bec:	b.eq	6c68 <_ZN4llvm8TGParser20ParseOptionalBitListERNS_15SmallVectorImplIjEE+0xf8>  // b.none
    6bf0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6bf4:	add	x1, x1, #0x0
    6bf8:	add	x20, sp, #0x48
    6bfc:	str	x23, [sp, #48]
    6c00:	mov	x0, x20
    6c04:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6c08:	mov	x0, x19
    6c0c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    6c10:	mov	x3, x0
    6c14:	mov	x2, x20
    6c18:	add	x23, sp, #0x40
    6c1c:	mov	x1, #0x1                   	// #1
    6c20:	mov	x0, x23
    6c24:	str	x3, [sp, #64]
    6c28:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    6c2c:	mov	x0, x20
    6c30:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6c34:	add	x1, x1, #0x0
    6c38:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6c3c:	mov	x2, x20
    6c40:	mov	x0, x23
    6c44:	mov	x1, #0x1                   	// #1
    6c48:	str	x22, [sp, #64]
    6c4c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    6c50:	mov	w0, w21
    6c54:	ldp	x19, x20, [sp, #16]
    6c58:	ldp	x21, x22, [sp, #32]
    6c5c:	ldr	x23, [sp, #48]
    6c60:	ldp	x29, x30, [sp], #96
    6c64:	ret
    6c68:	ldp	x2, x1, [x19, #8]
    6c6c:	mov	x0, x19
    6c70:	mov	w21, #0x0                   	// #0
    6c74:	cmp	x2, x1
    6c78:	cset	w1, eq  // eq = none
    6c7c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6c80:	str	w0, [x19, #40]
    6c84:	b	6b94 <_ZN4llvm8TGParser20ParseOptionalBitListERNS_15SmallVectorImplIjEE+0x24>

0000000000006c88 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE>:
    6c88:	sub	sp, sp, #0x210
    6c8c:	stp	x29, x30, [sp]
    6c90:	mov	x29, sp
    6c94:	stp	x21, x22, [sp, #32]
    6c98:	mov	x21, x1
    6c9c:	mov	x22, x2
    6ca0:	ldp	x1, x2, [x0, #8]
    6ca4:	stp	x19, x20, [sp, #16]
    6ca8:	mov	x19, x0
    6cac:	cmp	x2, x1
    6cb0:	cset	w1, eq  // eq = none
    6cb4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6cb8:	str	w0, [x19, #40]
    6cbc:	cmp	w0, #0x8
    6cc0:	b.ne	6e44 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x1bc>  // b.any
    6cc4:	ldp	x1, x2, [x19, #8]
    6cc8:	mov	x0, x19
    6ccc:	stp	x23, x24, [sp, #48]
    6cd0:	add	x23, sp, #0x1b0
    6cd4:	add	x24, sp, #0x1e0
    6cd8:	stp	x25, x26, [sp, #64]
    6cdc:	add	x25, x23, #0x10
    6ce0:	add	x26, x24, #0x10
    6ce4:	cmp	x2, x1
    6ce8:	cset	w1, eq  // eq = none
    6cec:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6cf0:	str	w0, [x19, #40]
    6cf4:	mov	x1, #0x400000000           	// #17179869184
    6cf8:	stp	x25, x1, [sp, #432]
    6cfc:	cmp	w0, #0x9
    6d00:	stp	x26, x1, [sp, #480]
    6d04:	b.ne	6de0 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x158>  // b.any
    6d08:	b	6f00 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x278>
    6d0c:	ldr	x1, [sp, #432]
    6d10:	str	x20, [x1, w0, uxtw #3]
    6d14:	ldr	w0, [sp, #440]
    6d18:	ldr	w2, [sp, #444]
    6d1c:	mov	w1, w0
    6d20:	add	x1, x1, #0x1
    6d24:	cmp	x1, x2
    6d28:	b.hi	7210 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x588>  // b.pmore
    6d2c:	add	w0, w0, #0x1
    6d30:	str	w0, [sp, #440]
    6d34:	ldr	w0, [x19, #40]
    6d38:	cmp	w0, #0xc
    6d3c:	b.ne	701c <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x394>  // b.any
    6d40:	ldp	x2, x1, [x19, #8]
    6d44:	mov	x0, x19
    6d48:	cmp	x2, x1
    6d4c:	cset	w1, eq  // eq = none
    6d50:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6d54:	str	w0, [x19, #40]
    6d58:	mov	x2, x22
    6d5c:	mov	x1, x21
    6d60:	mov	x0, x19
    6d64:	mov	w3, #0x0                   	// #0
    6d68:	bl	5fb0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    6d6c:	mov	x20, x0
    6d70:	cbz	x0, 6e94 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x20c>
    6d74:	ldr	w0, [sp, #488]
    6d78:	ldr	w1, [sp, #492]
    6d7c:	cmp	w0, w1
    6d80:	b.cs	6e28 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x1a0>  // b.hs, b.nlast
    6d84:	ldr	x1, [sp, #480]
    6d88:	str	x20, [x1, w0, uxtw #3]
    6d8c:	ldr	w0, [sp, #488]
    6d90:	ldr	w2, [sp, #492]
    6d94:	mov	w1, w0
    6d98:	add	x1, x1, #0x1
    6d9c:	cmp	x1, x2
    6da0:	b.hi	7210 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x588>  // b.pmore
    6da4:	add	w0, w0, #0x1
    6da8:	str	w0, [sp, #488]
    6dac:	ldr	w0, [x19, #40]
    6db0:	cmp	w0, #0x9
    6db4:	b.eq	7044 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x3bc>  // b.none
    6db8:	cmp	w0, #0xe
    6dbc:	b.ne	7060 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x3d8>  // b.any
    6dc0:	ldp	x2, x1, [x19, #8]
    6dc4:	mov	x0, x19
    6dc8:	cmp	x2, x1
    6dcc:	cset	w1, eq  // eq = none
    6dd0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6dd4:	str	w0, [x19, #40]
    6dd8:	cmp	w0, #0x9
    6ddc:	b.eq	6f00 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x278>  // b.none
    6de0:	mov	x1, x21
    6de4:	mov	x0, x19
    6de8:	mov	w3, #0x0                   	// #0
    6dec:	mov	x2, #0x0                   	// #0
    6df0:	bl	5fb0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    6df4:	mov	x20, x0
    6df8:	cbz	x0, 6e94 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x20c>
    6dfc:	ldr	w0, [sp, #440]
    6e00:	ldr	w1, [sp, #444]
    6e04:	cmp	w0, w1
    6e08:	b.cc	6d0c <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x84>  // b.lo, b.ul, b.last
    6e0c:	mov	x0, x23
    6e10:	mov	x1, x25
    6e14:	mov	x3, #0x8                   	// #8
    6e18:	mov	x2, #0x0                   	// #0
    6e1c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6e20:	ldr	w0, [sp, #440]
    6e24:	b	6d0c <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x84>
    6e28:	mov	x0, x24
    6e2c:	mov	x1, x26
    6e30:	mov	x3, #0x8                   	// #8
    6e34:	mov	x2, #0x0                   	// #0
    6e38:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6e3c:	ldr	w0, [sp, #488]
    6e40:	b	6d84 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0xfc>
    6e44:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6e48:	add	x1, x1, #0x0
    6e4c:	add	x21, sp, #0x1e0
    6e50:	mov	x20, #0x0                   	// #0
    6e54:	mov	x0, x21
    6e58:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6e5c:	mov	x0, x19
    6e60:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    6e64:	mov	x3, x0
    6e68:	mov	x2, x21
    6e6c:	add	x0, sp, #0x1b0
    6e70:	mov	x1, #0x1                   	// #1
    6e74:	str	x3, [sp, #432]
    6e78:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    6e7c:	mov	x0, x20
    6e80:	ldp	x29, x30, [sp]
    6e84:	ldp	x19, x20, [sp, #16]
    6e88:	ldp	x21, x22, [sp, #32]
    6e8c:	add	sp, sp, #0x210
    6e90:	ret
    6e94:	mov	x20, #0x0                   	// #0
    6e98:	ldr	x0, [sp, #480]
    6e9c:	add	x24, x24, #0x10
    6ea0:	cmp	x0, x24
    6ea4:	b.eq	6eac <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x224>  // b.none
    6ea8:	bl	0 <free>
    6eac:	ldr	x0, [sp, #432]
    6eb0:	add	x23, x23, #0x10
    6eb4:	cmp	x0, x23
    6eb8:	b.eq	6ee0 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x258>  // b.none
    6ebc:	bl	0 <free>
    6ec0:	mov	x0, x20
    6ec4:	ldp	x29, x30, [sp]
    6ec8:	ldp	x19, x20, [sp, #16]
    6ecc:	ldp	x21, x22, [sp, #32]
    6ed0:	ldp	x23, x24, [sp, #48]
    6ed4:	ldp	x25, x26, [sp, #64]
    6ed8:	add	sp, sp, #0x210
    6edc:	ret
    6ee0:	mov	x0, x20
    6ee4:	ldp	x29, x30, [sp]
    6ee8:	ldp	x19, x20, [sp, #16]
    6eec:	ldp	x21, x22, [sp, #32]
    6ef0:	ldp	x23, x24, [sp, #48]
    6ef4:	ldp	x25, x26, [sp, #64]
    6ef8:	add	sp, sp, #0x210
    6efc:	ret
    6f00:	ldp	x1, x2, [x19, #8]
    6f04:	mov	x0, x19
    6f08:	cmp	x2, x1
    6f0c:	cset	w1, eq  // eq = none
    6f10:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6f14:	str	w0, [x19, #40]
    6f18:	ldr	w0, [sp, #440]
    6f1c:	cbz	w0, 7074 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x3ec>
    6f20:	ldr	x0, [sp, #480]
    6f24:	adrp	x1, 0 <_ZN4llvm8BitRecTy6SharedE>
    6f28:	ldr	w25, [sp, #488]
    6f2c:	stp	x27, x28, [sp, #80]
    6f30:	mov	x22, x0
    6f34:	mov	x27, #0x0                   	// #0
    6f38:	add	x25, x0, x25, lsl #3
    6f3c:	ldr	x26, [x1]
    6f40:	cmp	x0, x25
    6f44:	b.ne	6f64 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x2dc>  // b.any
    6f48:	b	71dc <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x554>
    6f4c:	cmp	w1, #0x18
    6f50:	cbz	x27, 7008 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x380>
    6f54:	b.ne	6f94 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x30c>  // b.any
    6f58:	add	x22, x22, #0x8
    6f5c:	cmp	x25, x22
    6f60:	b.eq	6fb8 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x330>  // b.none
    6f64:	ldr	x20, [x22]
    6f68:	cbz	x20, 7234 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x5ac>
    6f6c:	ldrb	w1, [x20, #8]
    6f70:	sub	w0, w1, #0x1
    6f74:	and	w0, w0, #0xff
    6f78:	cmp	w0, #0x16
    6f7c:	b.ls	6fe8 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x360>  // b.plast
    6f80:	mov	x28, #0x0                   	// #0
    6f84:	cmp	w1, #0x2
    6f88:	b.ne	6f4c <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x2c4>  // b.any
    6f8c:	mov	x28, x26
    6f90:	cbz	x27, 7010 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x388>
    6f94:	mov	x1, x28
    6f98:	mov	x0, x27
    6f9c:	bl	0 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_>
    6fa0:	mov	x20, x0
    6fa4:	cbz	x0, 7088 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x400>
    6fa8:	add	x22, x22, #0x8
    6fac:	mov	x27, x0
    6fb0:	cmp	x25, x22
    6fb4:	b.ne	6f64 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x2dc>  // b.any
    6fb8:	cbz	x27, 71dc <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x554>
    6fbc:	ldr	w1, [sp, #440]
    6fc0:	mov	x4, x27
    6fc4:	ldr	w3, [sp, #488]
    6fc8:	ldr	x0, [sp, #432]
    6fcc:	ldr	x2, [sp, #480]
    6fd0:	bl	0 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE>
    6fd4:	mov	x1, x21
    6fd8:	bl	0 <_ZNK4llvm10CondOpInit4FoldEPNS_6RecordE>
    6fdc:	mov	x20, x0
    6fe0:	ldp	x27, x28, [sp, #80]
    6fe4:	b	6e98 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x210>
    6fe8:	cmp	w1, #0x3
    6fec:	ldr	x28, [x20, #16]
    6ff0:	b.ne	6f84 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x2fc>  // b.any
    6ff4:	ldr	w0, [x20, #32]
    6ff8:	bl	0 <_ZN4llvm9BitsRecTy3getEj>
    6ffc:	mov	x28, x0
    7000:	ldrb	w1, [x20, #8]
    7004:	b	6f84 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x2fc>
    7008:	csel	x27, xzr, x28, eq  // eq = none
    700c:	b	6f58 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x2d0>
    7010:	adrp	x0, 0 <_ZN4llvm8BitRecTy6SharedE>
    7014:	ldr	x27, [x0]
    7018:	b	6f58 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x2d0>
    701c:	add	x21, sp, #0x190
    7020:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7024:	mov	x0, x21
    7028:	add	x1, x1, #0x0
    702c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7030:	mov	x20, #0x0                   	// #0
    7034:	mov	x1, x21
    7038:	mov	x0, x19
    703c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7040:	b	6e98 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x210>
    7044:	ldp	x2, x1, [x19, #8]
    7048:	mov	x0, x19
    704c:	cmp	x2, x1
    7050:	cset	w1, eq  // eq = none
    7054:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7058:	str	w0, [x19, #40]
    705c:	b	6f18 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x290>
    7060:	add	x21, sp, #0x190
    7064:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7068:	mov	x0, x21
    706c:	add	x1, x1, #0x0
    7070:	b	702c <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x3a4>
    7074:	add	x21, sp, #0x190
    7078:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    707c:	mov	x0, x21
    7080:	add	x1, x1, #0x0
    7084:	b	702c <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x3a4>
    7088:	add	x6, sp, #0x98
    708c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7090:	mov	x0, x6
    7094:	add	x1, x1, #0x0
    7098:	str	x6, [sp, #136]
    709c:	add	x22, sp, #0x170
    70a0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    70a4:	add	x21, sp, #0x190
    70a8:	ldr	x1, [x27]
    70ac:	add	x3, sp, #0x110
    70b0:	add	x2, sp, #0xf8
    70b4:	add	x5, sp, #0xe0
    70b8:	add	x4, sp, #0xc8
    70bc:	add	x7, sp, #0xb0
    70c0:	ldr	x1, [x1, #16]
    70c4:	stp	x7, x4, [sp, #96]
    70c8:	mov	x8, x22
    70cc:	stp	x3, x2, [sp, #112]
    70d0:	mov	x0, x27
    70d4:	add	x26, sp, #0x128
    70d8:	str	x5, [sp, #128]
    70dc:	add	x27, sp, #0x140
    70e0:	add	x25, sp, #0x158
    70e4:	blr	x1
    70e8:	ldr	x7, [sp, #96]
    70ec:	mov	x1, x22
    70f0:	mov	x0, x7
    70f4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    70f8:	ldp	x0, x4, [sp, #96]
    70fc:	ldr	x6, [sp, #136]
    7100:	mov	x8, x4
    7104:	mov	x1, x0
    7108:	mov	x0, x6
    710c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7110:	ldr	x5, [sp, #128]
    7114:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7118:	add	x1, x1, #0x0
    711c:	str	x5, [sp, #96]
    7120:	mov	x0, x5
    7124:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7128:	ldp	x0, x8, [sp, #96]
    712c:	ldr	x2, [sp, #120]
    7130:	str	x2, [sp, #96]
    7134:	mov	x1, x0
    7138:	mov	x0, x8
    713c:	mov	x8, x2
    7140:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7144:	ldr	x1, [x28]
    7148:	mov	x8, x21
    714c:	mov	x0, x28
    7150:	ldr	x1, [x1, #16]
    7154:	blr	x1
    7158:	ldr	x3, [sp, #112]
    715c:	mov	x1, x21
    7160:	add	x21, x21, #0x10
    7164:	mov	x28, x3
    7168:	mov	x0, x3
    716c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7170:	ldr	x2, [sp, #96]
    7174:	mov	x8, x26
    7178:	mov	x1, x28
    717c:	mov	x0, x2
    7180:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7184:	mov	x0, x27
    7188:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    718c:	add	x1, x1, #0x0
    7190:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7194:	mov	x8, x25
    7198:	mov	x1, x27
    719c:	mov	x0, x26
    71a0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    71a4:	mov	x1, x25
    71a8:	mov	x0, x19
    71ac:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    71b0:	ldr	x0, [sp, #400]
    71b4:	cmp	x0, x21
    71b8:	b.eq	71c0 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x538>  // b.none
    71bc:	bl	0 <_ZdlPv>
    71c0:	ldr	x0, [sp, #368]
    71c4:	add	x22, x22, #0x10
    71c8:	cmp	x0, x22
    71cc:	b.eq	7208 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x580>  // b.none
    71d0:	bl	0 <_ZdlPv>
    71d4:	ldp	x27, x28, [sp, #80]
    71d8:	b	6e98 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x210>
    71dc:	add	x21, sp, #0x190
    71e0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    71e4:	mov	x0, x21
    71e8:	add	x1, x1, #0x0
    71ec:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    71f0:	mov	x20, #0x0                   	// #0
    71f4:	mov	x1, x21
    71f8:	mov	x0, x19
    71fc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7200:	ldp	x27, x28, [sp, #80]
    7204:	b	6e98 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x210>
    7208:	ldp	x27, x28, [sp, #80]
    720c:	b	6e98 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x210>
    7210:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7214:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7218:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    721c:	add	x3, x3, #0x0
    7220:	add	x1, x1, #0x0
    7224:	add	x0, x0, #0x0
    7228:	mov	w2, #0x43                  	// #67
    722c:	stp	x27, x28, [sp, #80]
    7230:	bl	0 <__assert_fail>
    7234:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7238:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    723c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7240:	add	x3, x3, #0x0
    7244:	add	x1, x1, #0x0
    7248:	add	x0, x0, #0x0
    724c:	mov	w2, #0x69                  	// #105
    7250:	bl	0 <__assert_fail>
    7254:	nop

0000000000007258 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE>:
    7258:	stp	x29, x30, [sp, #-448]!
    725c:	mov	x29, sp
    7260:	stp	x19, x20, [sp, #16]
    7264:	mov	x19, x1
    7268:	ldr	w20, [x0, #40]
    726c:	stp	x21, x22, [sp, #32]
    7270:	mov	x21, x2
    7274:	cmp	w20, #0x3a
    7278:	stp	x23, x24, [sp, #48]
    727c:	stp	x27, x28, [sp, #80]
    7280:	mov	x28, x0
    7284:	b.eq	7f08 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xcb0>  // b.none
    7288:	b.hi	73e0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x188>  // b.pmore
    728c:	cmp	w20, #0x34
    7290:	b.eq	7794 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x53c>  // b.none
    7294:	b.ls	7540 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2e8>  // b.plast
    7298:	cmp	w20, #0x35
    729c:	b.ne	7468 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x210>  // b.any
    72a0:	ldp	x2, x1, [x0, #8]
    72a4:	cmp	x2, x1
    72a8:	cset	w1, eq  // eq = none
    72ac:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    72b0:	str	w0, [x28, #40]
    72b4:	cmp	w0, #0x8
    72b8:	b.ne	7a6c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x814>  // b.any
    72bc:	ldp	x2, x1, [x28, #8]
    72c0:	mov	x0, x28
    72c4:	cmp	x2, x1
    72c8:	cset	w1, eq  // eq = none
    72cc:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    72d0:	str	w0, [x28, #40]
    72d4:	mov	x1, x19
    72d8:	mov	x0, x28
    72dc:	mov	w3, #0x0                   	// #0
    72e0:	mov	x2, #0x0                   	// #0
    72e4:	bl	5fb0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    72e8:	mov	x20, x0
    72ec:	cbz	x0, 7778 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x520>
    72f0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    72f4:	mov	x21, x0
    72f8:	cbz	x0, 76dc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x484>
    72fc:	ldr	w0, [x28, #40]
    7300:	cmp	w0, #0xe
    7304:	b.ne	7f28 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xcd0>  // b.any
    7308:	ldp	x2, x1, [x28, #8]
    730c:	mov	x0, x28
    7310:	cmp	x2, x1
    7314:	cset	w1, eq  // eq = none
    7318:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    731c:	str	w0, [x28, #40]
    7320:	mov	x1, x19
    7324:	mov	x0, x28
    7328:	mov	w3, #0x0                   	// #0
    732c:	mov	x2, #0x0                   	// #0
    7330:	bl	5fb0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    7334:	mov	x22, x0
    7338:	cbz	x0, 7778 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x520>
    733c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7340:	mov	x20, x0
    7344:	cbz	x0, 89a8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1750>
    7348:	ldr	x0, [x0, #16]
    734c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7350:	mov	x22, x0
    7354:	cbz	x0, 8bb4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x195c>
    7358:	ldr	w0, [x28, #40]
    735c:	cmp	w0, #0xe
    7360:	b.ne	7f28 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xcd0>  // b.any
    7364:	ldp	x2, x1, [x28, #8]
    7368:	mov	x0, x28
    736c:	cmp	x2, x1
    7370:	cset	w1, eq  // eq = none
    7374:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7378:	str	w0, [x28, #40]
    737c:	cmp	w0, #0x48
    7380:	b.ne	8704 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x14ac>  // b.any
    7384:	ldp	x0, x1, [x28, #48]
    7388:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    738c:	mov	x23, x0
    7390:	cbz	x19, 82b8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1060>
    7394:	ldr	w3, [x19, #80]
    7398:	mov	w0, #0x18                  	// #24
    739c:	ldr	x1, [x19, #72]
    73a0:	umaddl	x3, w3, w0, x1
    73a4:	cmp	x1, x3
    73a8:	b.ne	73bc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x164>  // b.any
    73ac:	b	82b8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1060>
    73b0:	add	x1, x1, #0x18
    73b4:	cmp	x3, x1
    73b8:	b.eq	82b8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1060>  // b.none
    73bc:	ldr	x2, [x1]
    73c0:	cmp	x23, x2
    73c4:	b.ne	73b0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x158>  // b.any
    73c8:	add	x24, sp, #0xe8
    73cc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    73d0:	mov	x0, x24
    73d4:	add	x1, x1, #0x0
    73d8:	stp	x25, x26, [sp, #64]
    73dc:	b	78e8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x690>
    73e0:	cmp	w20, #0x3d
    73e4:	b.eq	77d0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x578>  // b.none
    73e8:	b.ls	75b4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x35c>  // b.plast
    73ec:	cmp	w20, #0x44
    73f0:	b.hi	7574 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x31c>  // b.pmore
    73f4:	cmp	w20, #0x3e
    73f8:	b.ne	76bc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x464>  // b.any
    73fc:	ldp	x2, x1, [x0, #8]
    7400:	adrp	x23, 0 <_ZN4llvm8DagRecTy6SharedE>
    7404:	mov	x21, #0x0                   	// #0
    7408:	mov	w22, #0x3                   	// #3
    740c:	cmp	x2, x1
    7410:	cset	w1, eq  // eq = none
    7414:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7418:	str	w0, [x28, #40]
    741c:	ldr	x23, [x23]
    7420:	cmp	w0, #0x8
    7424:	b.eq	79b0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x758>  // b.none
    7428:	add	x19, sp, #0x1a0
    742c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7430:	mov	x0, x19
    7434:	add	x1, x1, #0x0
    7438:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    743c:	mov	x20, #0x0                   	// #0
    7440:	mov	x1, x19
    7444:	mov	x0, x28
    7448:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    744c:	mov	x0, x20
    7450:	ldp	x19, x20, [sp, #16]
    7454:	ldp	x21, x22, [sp, #32]
    7458:	ldp	x23, x24, [sp, #48]
    745c:	ldp	x27, x28, [sp, #80]
    7460:	ldp	x29, x30, [sp], #448
    7464:	ret
    7468:	cmp	w20, #0x38
    746c:	b.eq	822c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xfd4>  // b.none
    7470:	cmp	w20, #0x39
    7474:	b.eq	8208 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xfb0>  // b.none
    7478:	cmp	w20, #0x36
    747c:	b.eq	8268 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1010>  // b.none
    7480:	cmp	w20, #0x37
    7484:	b.ne	95b4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x235c>  // b.any
    7488:	ldp	x1, x2, [x0, #8]
    748c:	mov	x23, #0x0                   	// #0
    7490:	mov	w22, #0x2                   	// #2
    7494:	cmp	x2, x1
    7498:	cset	w1, eq  // eq = none
    749c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    74a0:	str	w0, [x28, #40]
    74a4:	nop
    74a8:	cmp	w0, #0x8
    74ac:	b.ne	7f3c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xce4>  // b.any
    74b0:	ldp	x1, x2, [x28, #8]
    74b4:	mov	x0, x28
    74b8:	cmp	x2, x1
    74bc:	cset	w1, eq  // eq = none
    74c0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    74c4:	str	w0, [x28, #40]
    74c8:	mov	x1, x19
    74cc:	mov	x0, x28
    74d0:	mov	w3, #0x0                   	// #0
    74d4:	mov	x2, #0x0                   	// #0
    74d8:	bl	5fb0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    74dc:	mov	x21, x0
    74e0:	cbz	x0, 7778 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x520>
    74e4:	sub	w24, w22, #0x1
    74e8:	and	w24, w24, #0xff
    74ec:	cmp	w24, #0x1
    74f0:	ccmp	w22, #0x4, #0x4, hi  // hi = pmore
    74f4:	b.eq	8040 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xde8>  // b.none
    74f8:	ldr	w0, [x28, #40]
    74fc:	cmp	w0, #0x9
    7500:	b.ne	808c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xe34>  // b.any
    7504:	ldp	x1, x2, [x28, #8]
    7508:	mov	x0, x28
    750c:	cmp	x2, x1
    7510:	cset	w1, eq  // eq = none
    7514:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7518:	str	w0, [x28, #40]
    751c:	mov	x2, x23
    7520:	mov	x1, x21
    7524:	mov	w0, w22
    7528:	bl	0 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE>
    752c:	mov	x1, x19
    7530:	mov	w2, #0x0                   	// #0
    7534:	bl	0 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb>
    7538:	mov	x20, x0
    753c:	b	744c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f4>
    7540:	cmp	w20, #0x32
    7544:	b.eq	8238 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xfe0>  // b.none
    7548:	b.ls	7660 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x408>  // b.plast
    754c:	cmp	w20, #0x33
    7550:	b.ne	7780 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x528>  // b.any
    7554:	ldp	x1, x2, [x0, #8]
    7558:	mov	x23, #0x0                   	// #0
    755c:	mov	w22, #0x0                   	// #0
    7560:	cmp	x2, x1
    7564:	cset	w1, eq  // eq = none
    7568:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    756c:	str	w0, [x28, #40]
    7570:	b	7420 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1c8>
    7574:	cmp	w20, #0x45
    7578:	b.ne	7780 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x528>  // b.any
    757c:	ldp	x1, x2, [x0, #8]
    7580:	cmp	x2, x1
    7584:	cset	w1, eq  // eq = none
    7588:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    758c:	str	w0, [x28, #40]
    7590:	cmp	w0, #0xa
    7594:	b.eq	7aa8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x850>  // b.none
    7598:	mov	x0, #0x0                   	// #0
    759c:	mov	x1, #0x0                   	// #0
    75a0:	bl	0 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE>
    75a4:	mov	w22, #0x5                   	// #5
    75a8:	mov	x23, x0
    75ac:	ldr	w0, [x28, #40]
    75b0:	b	74a8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x250>
    75b4:	cmp	w20, #0x3b
    75b8:	b.ne	75e0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x388>  // b.any
    75bc:	bl	6c88 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE>
    75c0:	mov	x20, x0
    75c4:	mov	x0, x20
    75c8:	ldp	x19, x20, [sp, #16]
    75cc:	ldp	x21, x22, [sp, #32]
    75d0:	ldp	x23, x24, [sp, #48]
    75d4:	ldp	x27, x28, [sp, #80]
    75d8:	ldp	x29, x30, [sp], #448
    75dc:	ret
    75e0:	cmp	w20, #0x3c
    75e4:	b.ne	7780 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x528>  // b.any
    75e8:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    75ec:	str	x0, [sp, #120]
    75f0:	ldp	x1, x2, [x28, #8]
    75f4:	mov	x0, x28
    75f8:	cmp	x2, x1
    75fc:	cset	w1, eq  // eq = none
    7600:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7604:	str	w0, [x28, #40]
    7608:	adrp	x1, 0 <_ZN4llvm8BitRecTy6SharedE>
    760c:	mov	w23, #0xb                   	// #11
    7610:	mov	x20, #0x0                   	// #0
    7614:	ldr	x1, [x1]
    7618:	str	x1, [sp, #104]
    761c:	nop
    7620:	cbz	x21, 7644 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x3ec>
    7624:	ldr	x0, [sp, #104]
    7628:	mov	x1, x21
    762c:	ldr	x2, [x0]
    7630:	ldr	x2, [x2, #24]
    7634:	blr	x2
    7638:	tst	w0, #0xff
    763c:	b.eq	83a0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1148>  // b.none
    7640:	ldr	w0, [x28, #40]
    7644:	cmp	w0, #0x8
    7648:	b.eq	7c40 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x9e8>  // b.none
    764c:	add	x19, sp, #0x1a0
    7650:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7654:	mov	x0, x19
    7658:	add	x1, x1, #0x0
    765c:	b	7438 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e0>
    7660:	sub	w20, w20, #0x27
    7664:	cmp	w20, #0xa
    7668:	b.hi	7780 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x528>  // b.pmore
    766c:	mov	x0, x28
    7670:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    7674:	mov	x2, x0
    7678:	str	x2, [sp, #120]
    767c:	ldr	x1, [x28, #8]
    7680:	mov	x0, x28
    7684:	ldr	x2, [x28, #16]
    7688:	cmp	x2, x1
    768c:	cset	w1, eq  // eq = none
    7690:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7694:	str	w0, [x28, #40]
    7698:	cmp	w20, #0x1d
    769c:	b.ls	76c4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x46c>  // b.plast
    76a0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    76a4:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    76a8:	add	x1, x1, #0x0
    76ac:	add	x0, x0, #0x0
    76b0:	mov	w2, #0x449                 	// #1097
    76b4:	stp	x25, x26, [sp, #64]
    76b8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    76bc:	sub	w20, w20, #0x27
    76c0:	b	766c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x414>
    76c4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    76c8:	add	x1, x1, #0x0
    76cc:	ldrh	w1, [x1, w20, uxtw #1]
    76d0:	adr	x2, 76dc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x484>
    76d4:	add	x1, x2, w1, sxth #2
    76d8:	br	x1
    76dc:	add	x23, sp, #0x118
    76e0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    76e4:	mov	x0, x23
    76e8:	add	x1, x1, #0x0
    76ec:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    76f0:	add	x19, sp, #0x1a0
    76f4:	ldr	x1, [x20]
    76f8:	mov	x8, x19
    76fc:	mov	x0, x20
    7700:	add	x24, sp, #0x130
    7704:	add	x21, sp, #0x148
    7708:	add	x22, sp, #0x160
    770c:	ldr	x1, [x1, #40]
    7710:	add	x20, sp, #0x180
    7714:	blr	x1
    7718:	mov	x1, x19
    771c:	mov	x0, x24
    7720:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7724:	mov	x8, x21
    7728:	mov	x1, x24
    772c:	mov	x0, x23
    7730:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7734:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7738:	mov	x0, x22
    773c:	add	x1, x1, #0x0
    7740:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7744:	mov	x8, x20
    7748:	mov	x1, x22
    774c:	mov	x0, x21
    7750:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7754:	mov	x1, x20
    7758:	mov	x0, x28
    775c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7760:	add	x19, x19, #0x10
    7764:	ldr	x0, [sp, #416]
    7768:	cmp	x0, x19
    776c:	b.eq	7778 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x520>  // b.none
    7770:	bl	0 <_ZdlPv>
    7774:	nop
    7778:	mov	x20, #0x0                   	// #0
    777c:	b	744c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f4>
    7780:	add	x19, sp, #0x1a0
    7784:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7788:	mov	x0, x19
    778c:	add	x1, x1, #0x0
    7790:	b	7438 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e0>
    7794:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    7798:	mov	x22, x0
    779c:	ldp	x2, x1, [x28, #8]
    77a0:	mov	x0, x28
    77a4:	cmp	x2, x1
    77a8:	cset	w1, eq  // eq = none
    77ac:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    77b0:	str	w0, [x28, #40]
    77b4:	cmp	w0, #0x8
    77b8:	b.eq	7870 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x618>  // b.none
    77bc:	add	x19, sp, #0x1a0
    77c0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    77c4:	mov	x0, x19
    77c8:	add	x1, x1, #0x0
    77cc:	b	7438 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e0>
    77d0:	ldp	x1, x2, [x0, #8]
    77d4:	cmp	x2, x1
    77d8:	cset	w1, eq  // eq = none
    77dc:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    77e0:	str	w0, [x28, #40]
    77e4:	mov	x0, x28
    77e8:	bl	47a8 <_ZN4llvm8TGParser17ParseOperatorTypeEv>
    77ec:	mov	x20, x0
    77f0:	cbz	x0, 7778 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x520>
    77f4:	ldr	w0, [x28, #40]
    77f8:	cmp	w0, #0x8
    77fc:	b.ne	7f84 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xd2c>  // b.any
    7800:	ldp	x2, x1, [x28, #8]
    7804:	mov	x0, x28
    7808:	cmp	x2, x1
    780c:	cset	w1, eq  // eq = none
    7810:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7814:	str	w0, [x28, #40]
    7818:	mov	x1, x19
    781c:	mov	x0, x28
    7820:	mov	w3, #0x0                   	// #0
    7824:	mov	x2, #0x0                   	// #0
    7828:	bl	5fb0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    782c:	mov	x19, x0
    7830:	cbz	x0, 7778 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x520>
    7834:	ldr	w0, [x28, #40]
    7838:	cmp	w0, #0x9
    783c:	b.ne	81f4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xf9c>  // b.any
    7840:	ldp	x1, x2, [x28, #8]
    7844:	mov	x0, x28
    7848:	cmp	x2, x1
    784c:	cset	w1, eq  // eq = none
    7850:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7854:	str	w0, [x28, #40]
    7858:	mov	x1, x19
    785c:	mov	x0, x20
    7860:	bl	0 <_ZN4llvm9IsAOpInit3getEPNS_5RecTyEPNS_4InitE>
    7864:	bl	0 <_ZNK4llvm9IsAOpInit4FoldEv>
    7868:	mov	x20, x0
    786c:	b	744c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f4>
    7870:	ldp	x2, x1, [x28, #8]
    7874:	mov	x0, x28
    7878:	cmp	x2, x1
    787c:	cset	w1, eq  // eq = none
    7880:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7884:	str	w0, [x28, #40]
    7888:	cmp	w0, #0x48
    788c:	b.ne	7a80 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x828>  // b.any
    7890:	ldp	x0, x1, [x28, #48]
    7894:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    7898:	mov	x23, x0
    789c:	cbz	x19, 80a0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xe48>
    78a0:	ldr	w3, [x19, #80]
    78a4:	mov	w0, #0x18                  	// #24
    78a8:	ldr	x1, [x19, #72]
    78ac:	umaddl	x3, w3, w0, x1
    78b0:	cmp	x1, x3
    78b4:	b.ne	78c8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x670>  // b.any
    78b8:	b	80a0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xe48>
    78bc:	add	x1, x1, #0x18
    78c0:	cmp	x3, x1
    78c4:	b.eq	80a0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xe48>  // b.none
    78c8:	ldr	x2, [x1]
    78cc:	cmp	x23, x2
    78d0:	b.ne	78bc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x664>  // b.any
    78d4:	add	x24, sp, #0xe8
    78d8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    78dc:	mov	x0, x24
    78e0:	add	x1, x1, #0x0
    78e4:	stp	x25, x26, [sp, #64]
    78e8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    78ec:	ldr	x1, [x23]
    78f0:	add	x26, sp, #0x180
    78f4:	mov	x8, x26
    78f8:	mov	x0, x23
    78fc:	add	x25, sp, #0x100
    7900:	add	x22, sp, #0x118
    7904:	ldr	x1, [x1, #40]
    7908:	add	x21, sp, #0x148
    790c:	add	x19, sp, #0x1a0
    7910:	add	x20, sp, #0x160
    7914:	add	x23, sp, #0x130
    7918:	blr	x1
    791c:	mov	x1, x26
    7920:	mov	x0, x25
    7924:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7928:	mov	x8, x22
    792c:	mov	x1, x25
    7930:	mov	x0, x24
    7934:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7938:	mov	x0, x23
    793c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7940:	add	x1, x1, #0x0
    7944:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7948:	mov	x1, x23
    794c:	mov	x0, x22
    7950:	mov	x8, x21
    7954:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7958:	mov	x8, x19
    795c:	mov	x0, x21
    7960:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
    7964:	mov	x1, x19
    7968:	mov	x0, x20
    796c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7970:	add	x19, x19, #0x10
    7974:	mov	x1, x20
    7978:	mov	x0, x28
    797c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7980:	ldr	x0, [sp, #416]
    7984:	cmp	x0, x19
    7988:	b.eq	7990 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x738>  // b.none
    798c:	bl	0 <_ZdlPv>
    7990:	ldr	x0, [sp, #384]
    7994:	add	x26, x26, #0x10
    7998:	cmp	x0, x26
    799c:	b.eq	79a4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x74c>  // b.none
    79a0:	bl	0 <_ZdlPv>
    79a4:	mov	x20, #0x0                   	// #0
    79a8:	ldp	x25, x26, [sp, #64]
    79ac:	b	744c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f4>
    79b0:	ldp	x2, x1, [x28, #8]
    79b4:	mov	x0, x28
    79b8:	cmp	x2, x1
    79bc:	cset	w1, eq  // eq = none
    79c0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    79c4:	str	w0, [x28, #40]
    79c8:	mov	x1, x19
    79cc:	mov	x0, x28
    79d0:	mov	w3, #0x0                   	// #0
    79d4:	mov	x2, #0x0                   	// #0
    79d8:	bl	5fb0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    79dc:	mov	x24, x0
    79e0:	cbz	x0, 7778 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x520>
    79e4:	ldr	w0, [x28, #40]
    79e8:	cmp	w0, #0xe
    79ec:	b.ne	7a94 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x83c>  // b.any
    79f0:	ldp	x2, x1, [x28, #8]
    79f4:	mov	x0, x28
    79f8:	stp	x25, x26, [sp, #64]
    79fc:	cmp	x2, x1
    7a00:	cset	w1, eq  // eq = none
    7a04:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7a08:	str	w0, [x28, #40]
    7a0c:	mov	x0, x28
    7a10:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    7a14:	mov	x25, x0
    7a18:	mov	x2, x21
    7a1c:	mov	x1, x19
    7a20:	mov	x0, x28
    7a24:	mov	w3, #0x0                   	// #0
    7a28:	bl	5fb0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    7a2c:	mov	x27, x0
    7a30:	cbz	x0, 86f8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x14a0>
    7a34:	ldr	w0, [x28, #40]
    7a38:	cmp	w0, #0xe
    7a3c:	b.eq	84b8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1260>  // b.none
    7a40:	add	x19, sp, #0x1a0
    7a44:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7a48:	mov	x0, x19
    7a4c:	add	x1, x1, #0x0
    7a50:	mov	x20, #0x0                   	// #0
    7a54:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7a58:	mov	x1, x19
    7a5c:	mov	x0, x28
    7a60:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7a64:	ldp	x25, x26, [sp, #64]
    7a68:	b	744c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f4>
    7a6c:	add	x19, sp, #0x1a0
    7a70:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7a74:	mov	x0, x19
    7a78:	add	x1, x1, #0x0
    7a7c:	b	7438 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e0>
    7a80:	add	x19, sp, #0x1a0
    7a84:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7a88:	mov	x0, x19
    7a8c:	add	x1, x1, #0x0
    7a90:	b	7438 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e0>
    7a94:	add	x19, sp, #0x1a0
    7a98:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7a9c:	mov	x0, x19
    7aa0:	add	x1, x1, #0x0
    7aa4:	b	7438 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e0>
    7aa8:	mov	x0, x28
    7aac:	bl	47a8 <_ZN4llvm8TGParser17ParseOperatorTypeEv>
    7ab0:	mov	x23, x0
    7ab4:	cbz	x0, 8f28 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1cd0>
    7ab8:	ldr	w0, [x0, #8]
    7abc:	cmp	w0, #0x7
    7ac0:	b.ne	8a4c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x17f4>  // b.any
    7ac4:	ldr	w0, [x28, #40]
    7ac8:	mov	w22, #0x5                   	// #5
    7acc:	b	74a8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x250>
    7ad0:	adrp	x1, 0 <_ZN4llvm8BitRecTy6SharedE>
    7ad4:	adrp	x20, 0 <_ZN4llvm8IntRecTy6SharedE>
    7ad8:	mov	w23, #0xe                   	// #14
    7adc:	ldr	x1, [x1]
    7ae0:	str	x1, [sp, #104]
    7ae4:	ldr	x20, [x20]
    7ae8:	b	7620 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x3c8>
    7aec:	adrp	x1, 0 <_ZN4llvm8BitRecTy6SharedE>
    7af0:	mov	w23, #0xc                   	// #12
    7af4:	mov	x20, #0x0                   	// #0
    7af8:	ldr	x1, [x1]
    7afc:	str	x1, [sp, #104]
    7b00:	b	7620 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x3c8>
    7b04:	adrp	x1, 0 <_ZN4llvm8BitRecTy6SharedE>
    7b08:	adrp	x20, 0 <_ZN4llvm8IntRecTy6SharedE>
    7b0c:	mov	w23, #0xd                   	// #13
    7b10:	ldr	x1, [x1]
    7b14:	str	x1, [sp, #104]
    7b18:	ldr	x20, [x20]
    7b1c:	b	7620 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x3c8>
    7b20:	adrp	x20, 0 <_ZN4llvm8DagRecTy6SharedE>
    7b24:	mov	w23, #0x11                  	// #17
    7b28:	ldr	x20, [x20]
    7b2c:	str	x20, [sp, #104]
    7b30:	b	7620 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x3c8>
    7b34:	adrp	x20, 0 <_ZN4llvm8IntRecTy6SharedE>
    7b38:	mov	w23, #0x0                   	// #0
    7b3c:	ldr	x20, [x20]
    7b40:	str	x20, [sp, #104]
    7b44:	b	7620 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x3c8>
    7b48:	adrp	x20, 0 <_ZN4llvm8IntRecTy6SharedE>
    7b4c:	mov	w23, #0x4                   	// #4
    7b50:	ldr	x20, [x20]
    7b54:	str	x20, [sp, #104]
    7b58:	b	7620 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x3c8>
    7b5c:	adrp	x20, 0 <_ZN4llvm8IntRecTy6SharedE>
    7b60:	mov	w23, #0x6                   	// #6
    7b64:	ldr	x20, [x20]
    7b68:	str	x20, [sp, #104]
    7b6c:	b	7620 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x3c8>
    7b70:	adrp	x20, 0 <_ZN4llvm8IntRecTy6SharedE>
    7b74:	mov	w23, #0x5                   	// #5
    7b78:	ldr	x20, [x20]
    7b7c:	str	x20, [sp, #104]
    7b80:	b	7620 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x3c8>
    7b84:	adrp	x20, 0 <_ZN4llvm8IntRecTy6SharedE>
    7b88:	mov	w23, #0x3                   	// #3
    7b8c:	ldr	x20, [x20]
    7b90:	str	x20, [sp, #104]
    7b94:	b	7620 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x3c8>
    7b98:	adrp	x20, 0 <_ZN4llvm8IntRecTy6SharedE>
    7b9c:	mov	w23, #0x2                   	// #2
    7ba0:	ldr	x20, [x20]
    7ba4:	str	x20, [sp, #104]
    7ba8:	b	7620 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x3c8>
    7bac:	adrp	x20, 0 <_ZN4llvm8IntRecTy6SharedE>
    7bb0:	mov	w23, #0x1                   	// #1
    7bb4:	ldr	x20, [x20]
    7bb8:	str	x20, [sp, #104]
    7bbc:	b	7620 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x3c8>
    7bc0:	adrp	x1, 0 <_ZN4llvm8BitRecTy6SharedE>
    7bc4:	adrp	x20, 0 <_ZN4llvm8IntRecTy6SharedE>
    7bc8:	mov	w23, #0x10                  	// #16
    7bcc:	ldr	x1, [x1]
    7bd0:	str	x1, [sp, #104]
    7bd4:	ldr	x20, [x20]
    7bd8:	b	7620 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x3c8>
    7bdc:	adrp	x1, 0 <_ZN4llvm8BitRecTy6SharedE>
    7be0:	adrp	x20, 0 <_ZN4llvm8IntRecTy6SharedE>
    7be4:	mov	w23, #0xf                   	// #15
    7be8:	ldr	x1, [x1]
    7bec:	str	x1, [sp, #104]
    7bf0:	ldr	x20, [x20]
    7bf4:	b	7620 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x3c8>
    7bf8:	adrp	x20, 0 <_ZN4llvm11StringRecTy6SharedE>
    7bfc:	mov	w23, #0x9                   	// #9
    7c00:	ldr	x20, [x20]
    7c04:	str	x20, [sp, #104]
    7c08:	b	7620 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x3c8>
    7c0c:	mov	x20, x21
    7c10:	mov	w23, #0x7                   	// #7
    7c14:	str	xzr, [sp, #104]
    7c18:	b	7644 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x3ec>
    7c1c:	adrp	x20, 0 <_ZN4llvm8DagRecTy6SharedE>
    7c20:	mov	w23, #0xa                   	// #10
    7c24:	ldr	x20, [x20]
    7c28:	str	x20, [sp, #104]
    7c2c:	b	7620 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x3c8>
    7c30:	mov	w23, #0x8                   	// #8
    7c34:	mov	x20, #0x0                   	// #0
    7c38:	str	xzr, [sp, #104]
    7c3c:	b	7644 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x3ec>
    7c40:	ldp	x1, x2, [x28, #8]
    7c44:	mov	x0, x28
    7c48:	stp	x25, x26, [sp, #64]
    7c4c:	sub	w27, w23, #0xb
    7c50:	add	x24, sp, #0x160
    7c54:	add	x25, sp, #0x1a0
    7c58:	mov	x26, #0xfffffffffffffff8    	// #-8
    7c5c:	cmp	x2, x1
    7c60:	cset	w1, eq  // eq = none
    7c64:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7c68:	str	w0, [x28, #40]
    7c6c:	and	w1, w23, #0xfffffffd
    7c70:	add	x2, x24, #0x10
    7c74:	and	w1, w1, #0xff
    7c78:	str	w1, [sp, #112]
    7c7c:	and	w1, w27, #0xff
    7c80:	str	w1, [sp, #96]
    7c84:	mov	x1, #0x200000000           	// #8589934592
    7c88:	str	x2, [sp, #352]
    7c8c:	str	x1, [sp, #360]
    7c90:	mov	x0, x28
    7c94:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    7c98:	mov	x2, x20
    7c9c:	mov	x1, x19
    7ca0:	mov	w3, #0x0                   	// #0
    7ca4:	mov	x22, x0
    7ca8:	mov	x0, x28
    7cac:	bl	5fb0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    7cb0:	mov	x2, x0
    7cb4:	mov	x1, x25
    7cb8:	mov	x0, x24
    7cbc:	str	x2, [sp, #416]
    7cc0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7cc4:	ldr	w2, [sp, #360]
    7cc8:	cbz	w2, 9334 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x20dc>
    7ccc:	ldr	x0, [sp, #352]
    7cd0:	add	x1, x26, w2, uxtw #3
    7cd4:	ldr	x1, [x0, x1]
    7cd8:	cbz	x1, 7e54 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xbfc>
    7cdc:	ldrb	w0, [x1, #8]
    7ce0:	sub	w0, w0, #0x1
    7ce4:	and	w0, w0, #0xff
    7ce8:	cmp	w0, #0x16
    7cec:	b.ls	7d10 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xab8>  // b.plast
    7cf0:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7cf4:	add	x3, x3, #0x0
    7cf8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7cfc:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7d00:	add	x1, x1, #0x0
    7d04:	add	x0, x0, #0x0
    7d08:	mov	w2, #0x108                 	// #264
    7d0c:	bl	0 <__assert_fail>
    7d10:	ldr	x27, [x1, #16]
    7d14:	cbz	x20, 7d84 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xb2c>
    7d18:	mov	x1, x27
    7d1c:	mov	x0, x20
    7d20:	bl	0 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_>
    7d24:	cbz	x0, 8518 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x12c0>
    7d28:	cmp	w23, #0x3
    7d2c:	b.ls	7d44 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xaec>  // b.plast
    7d30:	cmp	w23, #0x5
    7d34:	b.eq	7d5c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xb04>  // b.none
    7d38:	ldr	w1, [sp, #112]
    7d3c:	cmp	w1, #0x4
    7d40:	csel	x20, x20, x0, eq  // eq = none
    7d44:	cmp	w23, #0x11
    7d48:	b.ne	7d5c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xb04>  // b.any
    7d4c:	mov	x0, #0x0                   	// #0
    7d50:	mov	x1, #0x0                   	// #0
    7d54:	bl	0 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE>
    7d58:	mov	x20, x0
    7d5c:	ldr	w0, [x28, #40]
    7d60:	cmp	w0, #0xe
    7d64:	b.ne	8288 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1030>  // b.any
    7d68:	ldp	x1, x2, [x28, #8]
    7d6c:	mov	x0, x28
    7d70:	cmp	x2, x1
    7d74:	cset	w1, eq  // eq = none
    7d78:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7d7c:	str	w0, [x28, #40]
    7d80:	b	7c90 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xa38>
    7d84:	cmp	w23, #0x8
    7d88:	b.eq	7ed0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xc78>  // b.none
    7d8c:	b.hi	7e70 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xc18>  // b.pmore
    7d90:	cmp	w23, #0x7
    7d94:	b.ne	94fc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x22a4>  // b.any
    7d98:	cbz	x27, 9524 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x22cc>
    7d9c:	ldr	w0, [x27, #8]
    7da0:	cmp	w0, #0x5
    7da4:	b.ne	7db0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xb58>  // b.any
    7da8:	mov	x20, x27
    7dac:	b	7d5c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xb04>
    7db0:	add	x23, sp, #0x100
    7db4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7db8:	mov	x0, x23
    7dbc:	add	x1, x1, #0x0
    7dc0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7dc4:	add	x26, sp, #0x118
    7dc8:	ldr	x1, [x27]
    7dcc:	mov	x8, x25
    7dd0:	mov	x0, x27
    7dd4:	add	x20, sp, #0x130
    7dd8:	add	x21, sp, #0x148
    7ddc:	add	x19, sp, #0x180
    7de0:	ldr	x1, [x1, #16]
    7de4:	blr	x1
    7de8:	mov	x0, x26
    7dec:	mov	x1, x25
    7df0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7df4:	mov	x8, x20
    7df8:	mov	x1, x26
    7dfc:	mov	x0, x23
    7e00:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7e04:	mov	x0, x21
    7e08:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7e0c:	add	x1, x1, #0x0
    7e10:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7e14:	mov	x1, x21
    7e18:	mov	x0, x20
    7e1c:	mov	x8, x19
    7e20:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7e24:	mov	x2, x19
    7e28:	add	x0, sp, #0xe8
    7e2c:	mov	x1, #0x1                   	// #1
    7e30:	str	x22, [sp, #232]
    7e34:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    7e38:	add	x25, x25, #0x10
    7e3c:	ldr	x0, [sp, #416]
    7e40:	cmp	x0, x25
    7e44:	b.eq	7e50 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xbf8>  // b.none
    7e48:	bl	0 <_ZdlPv>
    7e4c:	nop
    7e50:	ldr	x0, [sp, #352]
    7e54:	mov	x20, #0x0                   	// #0
    7e58:	add	x24, x24, #0x10
    7e5c:	cmp	x0, x24
    7e60:	b.eq	8038 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xde0>  // b.none
    7e64:	bl	0 <free>
    7e68:	ldp	x25, x26, [sp, #64]
    7e6c:	b	744c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f4>
    7e70:	ldr	w0, [sp, #96]
    7e74:	cmp	w0, #0x1
    7e78:	b.hi	94fc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x22a4>  // b.pmore
    7e7c:	ldr	x2, [x27]
    7e80:	adrp	x1, 0 <_ZN4llvm8IntRecTy6SharedE>
    7e84:	mov	x0, x27
    7e88:	ldr	x1, [x1]
    7e8c:	ldr	x2, [x2, #24]
    7e90:	blr	x2
    7e94:	tst	w0, #0xff
    7e98:	b.ne	7da8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xb50>  // b.any
    7e9c:	ldr	x2, [x27]
    7ea0:	adrp	x1, 0 <_ZN4llvm11StringRecTy6SharedE>
    7ea4:	mov	x0, x27
    7ea8:	ldr	x1, [x1]
    7eac:	ldr	x2, [x2, #24]
    7eb0:	blr	x2
    7eb4:	tst	w0, #0xff
    7eb8:	b.ne	7da8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xb50>  // b.any
    7ebc:	add	x23, sp, #0x100
    7ec0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7ec4:	mov	x0, x23
    7ec8:	add	x1, x1, #0x0
    7ecc:	b	7dc0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xb68>
    7ed0:	cmp	x21, #0x0
    7ed4:	ccmp	w2, #0x1, #0x0, ne  // ne = any
    7ed8:	b.eq	7f50 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xcf8>  // b.none
    7edc:	cmp	w2, #0x2
    7ee0:	b.ne	7d5c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xb04>  // b.any
    7ee4:	cbz	x27, 966c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2414>
    7ee8:	ldr	w0, [x27, #8]
    7eec:	cmp	w0, #0x3
    7ef0:	b.eq	7d5c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xb04>  // b.none
    7ef4:	add	x23, sp, #0x100
    7ef8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7efc:	mov	x0, x23
    7f00:	add	x1, x1, #0x0
    7f04:	b	7dc0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xb68>
    7f08:	ldp	x2, x1, [x0, #8]
    7f0c:	mov	x23, #0x0                   	// #0
    7f10:	mov	w22, #0x2                   	// #2
    7f14:	cmp	x2, x1
    7f18:	cset	w1, eq  // eq = none
    7f1c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7f20:	str	w0, [x28, #40]
    7f24:	b	7420 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1c8>
    7f28:	add	x19, sp, #0x1a0
    7f2c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7f30:	mov	x0, x19
    7f34:	add	x1, x1, #0x0
    7f38:	b	7438 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e0>
    7f3c:	add	x19, sp, #0x1a0
    7f40:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7f44:	mov	x0, x19
    7f48:	add	x1, x1, #0x0
    7f4c:	b	7438 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e0>
    7f50:	ldr	w0, [x21, #8]
    7f54:	cmp	w0, #0x5
    7f58:	b.ne	91a8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f50>  // b.any
    7f5c:	mov	x0, x27
    7f60:	bl	0 <_ZN4llvm5RecTy9getListTyEv>
    7f64:	ldr	x2, [x0]
    7f68:	mov	x1, x21
    7f6c:	ldr	x2, [x2, #24]
    7f70:	blr	x2
    7f74:	tst	w0, #0xff
    7f78:	b.eq	90ac <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e54>  // b.none
    7f7c:	ldr	w2, [sp, #360]
    7f80:	b	7edc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xc84>
    7f84:	add	x19, sp, #0x1a0
    7f88:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7f8c:	mov	x0, x19
    7f90:	add	x1, x1, #0x0
    7f94:	b	7438 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e0>
    7f98:	add	x25, sp, #0x130
    7f9c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7fa0:	mov	x0, x25
    7fa4:	add	x1, x1, #0x0
    7fa8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7fac:	add	x19, sp, #0x1a0
    7fb0:	ldr	x1, [x21]
    7fb4:	mov	x8, x19
    7fb8:	mov	x0, x21
    7fbc:	add	x26, sp, #0x118
    7fc0:	add	x23, sp, #0x148
    7fc4:	add	x24, sp, #0x160
    7fc8:	ldr	x1, [x1, #16]
    7fcc:	add	x21, sp, #0x180
    7fd0:	blr	x1
    7fd4:	mov	x1, x19
    7fd8:	mov	x0, x26
    7fdc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7fe0:	mov	x1, x26
    7fe4:	mov	x0, x25
    7fe8:	mov	x8, x23
    7fec:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7ff0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7ff4:	mov	x0, x24
    7ff8:	add	x1, x1, #0x0
    7ffc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8000:	add	x19, x19, #0x10
    8004:	mov	x8, x21
    8008:	mov	x1, x24
    800c:	mov	x0, x23
    8010:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8014:	add	x0, sp, #0x100
    8018:	mov	x2, x21
    801c:	mov	x1, #0x1                   	// #1
    8020:	str	x22, [sp, #256]
    8024:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    8028:	ldr	x0, [sp, #416]
    802c:	cmp	x0, x19
    8030:	b.ne	8a40 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x17e8>  // b.any
    8034:	nop
    8038:	ldp	x25, x26, [sp, #64]
    803c:	b	744c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f4>
    8040:	ldrb	w1, [x0, #8]
    8044:	cmp	w1, #0x9
    8048:	b.eq	879c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1544>  // b.none
    804c:	cmp	w1, #0x12
    8050:	b.ne	8718 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x14c0>  // b.any
    8054:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8058:	mov	x20, x0
    805c:	cbnz	x0, 9078 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e20>
    8060:	cmp	w24, #0x2
    8064:	b.hi	74f8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2a0>  // b.pmore
    8068:	add	x19, sp, #0x1a0
    806c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8070:	mov	x0, x19
    8074:	add	x1, x1, #0x0
    8078:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    807c:	mov	x1, x19
    8080:	mov	x0, x28
    8084:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8088:	b	744c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f4>
    808c:	add	x19, sp, #0x1a0
    8090:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8094:	mov	x0, x19
    8098:	add	x1, x1, #0x0
    809c:	b	7438 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e0>
    80a0:	ldp	x2, x1, [x28, #8]
    80a4:	mov	x0, x28
    80a8:	cmp	x2, x1
    80ac:	cset	w1, eq  // eq = none
    80b0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    80b4:	str	w0, [x28, #40]
    80b8:	cmp	w0, #0xe
    80bc:	b.ne	7a94 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x83c>  // b.any
    80c0:	ldp	x2, x1, [x28, #8]
    80c4:	mov	x0, x28
    80c8:	cmp	x2, x1
    80cc:	cset	w1, eq  // eq = none
    80d0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    80d4:	str	w0, [x28, #40]
    80d8:	mov	x1, x19
    80dc:	mov	x0, x28
    80e0:	mov	w3, #0x0                   	// #0
    80e4:	mov	x2, #0x0                   	// #0
    80e8:	bl	5fb0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    80ec:	mov	x24, x0
    80f0:	cbz	x0, 7778 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x520>
    80f4:	ldr	w0, [x28, #40]
    80f8:	cmp	w0, #0xe
    80fc:	b.ne	7a94 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x83c>  // b.any
    8100:	ldp	x2, x1, [x28, #8]
    8104:	mov	x0, x28
    8108:	cmp	x2, x1
    810c:	cset	w1, eq  // eq = none
    8110:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8114:	str	w0, [x28, #40]
    8118:	mov	x0, x24
    811c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8120:	mov	x20, x0
    8124:	cbz	x0, 9088 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e30>
    8128:	stp	x25, x26, [sp, #64]
    812c:	ldr	x26, [x0, #16]
    8130:	mov	x0, x26
    8134:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8138:	mov	x20, x0
    813c:	cbz	x0, 9234 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1fdc>
    8140:	ldr	x26, [x0, #24]
    8144:	cbz	x21, 8eb0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1c58>
    8148:	mov	x0, x21
    814c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8150:	mov	x20, x0
    8154:	cbz	x0, 7f98 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xd40>
    8158:	ldr	x21, [x0, #24]
    815c:	mov	w27, #0x0                   	// #0
    8160:	cbz	x19, 9288 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2030>
    8164:	mov	x2, x26
    8168:	mov	w3, #0x0                   	// #0
    816c:	add	x25, sp, #0x1a0
    8170:	mov	x1, x23
    8174:	mov	x0, x25
    8178:	bl	0 <_ZN4llvm9RecordValC1EPNS_4InitEPNS_5RecTyEb>
    817c:	mov	x1, x25
    8180:	mov	x0, x19
    8184:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8188:	mov	x2, x21
    818c:	mov	w3, #0x0                   	// #0
    8190:	mov	x1, x19
    8194:	mov	x0, x28
    8198:	bl	5fb0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    819c:	mov	x20, x0
    81a0:	mov	x1, x23
    81a4:	mov	x0, x19
    81a8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    81ac:	cbz	x20, 86f8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x14a0>
    81b0:	mov	x22, #0x0                   	// #0
    81b4:	ldr	w0, [x28, #40]
    81b8:	cmp	w0, #0x9
    81bc:	b.eq	8ecc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1c74>  // b.none
    81c0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    81c4:	mov	x0, x25
    81c8:	add	x1, x1, #0x0
    81cc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    81d0:	mov	x20, #0x0                   	// #0
    81d4:	mov	x1, x25
    81d8:	mov	x0, x28
    81dc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    81e0:	cbz	x22, 8038 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xde0>
    81e4:	mov	x0, x22
    81e8:	bl	338 <_ZNKSt14default_deleteIN4llvm6RecordEEclEPS1_.isra.0.part.0>
    81ec:	ldp	x25, x26, [sp, #64]
    81f0:	b	744c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f4>
    81f4:	add	x19, sp, #0x1a0
    81f8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    81fc:	mov	x0, x19
    8200:	add	x1, x1, #0x0
    8204:	b	7438 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e0>
    8208:	ldp	x1, x2, [x0, #8]
    820c:	mov	w22, #0x4                   	// #4
    8210:	cmp	x2, x1
    8214:	adrp	x23, 0 <_ZN4llvm8IntRecTy6SharedE>
    8218:	cset	w1, eq  // eq = none
    821c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8220:	str	w0, [x28, #40]
    8224:	ldr	x23, [x23]
    8228:	b	74a8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x250>
    822c:	mov	w22, #0x3                   	// #3
    8230:	ldp	x2, x1, [x0, #8]
    8234:	b	8210 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xfb8>
    8238:	ldp	x1, x2, [x0, #8]
    823c:	cmp	x2, x1
    8240:	cset	w1, eq  // eq = none
    8244:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8248:	str	w0, [x28, #40]
    824c:	mov	x0, x28
    8250:	bl	47a8 <_ZN4llvm8TGParser17ParseOperatorTypeEv>
    8254:	mov	x23, x0
    8258:	cbz	x0, 8f28 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1cd0>
    825c:	ldr	w0, [x28, #40]
    8260:	mov	w22, #0x0                   	// #0
    8264:	b	74a8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x250>
    8268:	ldp	x1, x2, [x0, #8]
    826c:	mov	x23, #0x0                   	// #0
    8270:	mov	w22, #0x1                   	// #1
    8274:	cmp	x2, x1
    8278:	cset	w1, eq  // eq = none
    827c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8280:	str	w0, [x28, #40]
    8284:	b	74a8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x250>
    8288:	cmp	w0, #0x9
    828c:	b.eq	865c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1404>  // b.none
    8290:	mov	x0, x25
    8294:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8298:	add	x1, x1, #0x0
    829c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    82a0:	mov	x1, x25
    82a4:	mov	x0, x28
    82a8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    82ac:	mov	x20, #0x0                   	// #0
    82b0:	ldr	x0, [sp, #352]
    82b4:	b	7e58 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xc00>
    82b8:	ldp	x2, x1, [x28, #8]
    82bc:	mov	x0, x28
    82c0:	cmp	x2, x1
    82c4:	cset	w1, eq  // eq = none
    82c8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    82cc:	str	w0, [x28, #40]
    82d0:	cmp	w0, #0xe
    82d4:	b.ne	7f28 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xcd0>  // b.any
    82d8:	ldp	x2, x1, [x28, #8]
    82dc:	mov	x0, x28
    82e0:	cmp	x2, x1
    82e4:	cset	w1, eq  // eq = none
    82e8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    82ec:	str	w0, [x28, #40]
    82f0:	cmp	w0, #0x48
    82f4:	b.ne	8a78 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1820>  // b.any
    82f8:	ldp	x0, x1, [x28, #48]
    82fc:	stp	x25, x26, [sp, #64]
    8300:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    8304:	mov	x24, x0
    8308:	cbz	x19, 8c10 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x19b8>
    830c:	ldr	w3, [x19, #80]
    8310:	mov	w0, #0x18                  	// #24
    8314:	ldr	x1, [x19, #72]
    8318:	umaddl	x3, w3, w0, x1
    831c:	cmp	x1, x3
    8320:	b.ne	8334 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x10dc>  // b.any
    8324:	b	87c8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1570>
    8328:	add	x1, x1, #0x18
    832c:	cmp	x3, x1
    8330:	b.eq	87c8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1570>  // b.none
    8334:	ldr	x2, [x1]
    8338:	cmp	x24, x2
    833c:	b.ne	8328 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x10d0>  // b.any
    8340:	add	x25, sp, #0xe8
    8344:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8348:	mov	x0, x25
    834c:	add	x1, x1, #0x0
    8350:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8354:	add	x26, sp, #0x180
    8358:	ldr	x1, [x24]
    835c:	mov	x8, x26
    8360:	mov	x0, x24
    8364:	add	x24, sp, #0x100
    8368:	add	x22, sp, #0x118
    836c:	add	x23, sp, #0x130
    8370:	ldr	x1, [x1, #40]
    8374:	add	x21, sp, #0x148
    8378:	add	x19, sp, #0x1a0
    837c:	add	x20, sp, #0x160
    8380:	blr	x1
    8384:	mov	x1, x26
    8388:	mov	x0, x24
    838c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8390:	mov	x8, x22
    8394:	mov	x1, x24
    8398:	mov	x0, x25
    839c:	b	7934 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x6dc>
    83a0:	add	x20, sp, #0xa0
    83a4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    83a8:	mov	x0, x20
    83ac:	add	x1, x1, #0x0
    83b0:	stp	x25, x26, [sp, #64]
    83b4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    83b8:	add	x2, sp, #0xb8
    83bc:	ldr	x1, [x21]
    83c0:	str	x2, [sp, #96]
    83c4:	add	x26, sp, #0x180
    83c8:	mov	x0, x21
    83cc:	mov	x8, x26
    83d0:	add	x25, sp, #0xd0
    83d4:	ldr	x1, [x1, #16]
    83d8:	add	x27, sp, #0xe8
    83dc:	add	x23, sp, #0x100
    83e0:	add	x19, sp, #0x1a0
    83e4:	add	x24, sp, #0x118
    83e8:	add	x21, sp, #0x130
    83ec:	blr	x1
    83f0:	add	x22, sp, #0x148
    83f4:	ldr	x2, [sp, #96]
    83f8:	mov	x1, x26
    83fc:	add	x28, sp, #0x160
    8400:	mov	x0, x2
    8404:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8408:	ldr	x0, [sp, #96]
    840c:	mov	x8, x25
    8410:	mov	x1, x0
    8414:	mov	x0, x20
    8418:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    841c:	mov	x0, x27
    8420:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8424:	add	x1, x1, #0x0
    8428:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    842c:	mov	x1, x27
    8430:	mov	x0, x25
    8434:	mov	x8, x23
    8438:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    843c:	ldr	x0, [sp, #104]
    8440:	mov	x8, x19
    8444:	ldr	x1, [x0]
    8448:	ldr	x1, [x1, #16]
    844c:	blr	x1
    8450:	mov	x1, x19
    8454:	mov	x0, x24
    8458:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    845c:	add	x19, x19, #0x10
    8460:	mov	x8, x21
    8464:	mov	x1, x24
    8468:	mov	x0, x23
    846c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8470:	mov	x0, x22
    8474:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8478:	add	x1, x1, #0x0
    847c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8480:	mov	x8, x28
    8484:	mov	x1, x22
    8488:	mov	x0, x21
    848c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8490:	ldr	x3, [sp, #120]
    8494:	add	x0, sp, #0x88
    8498:	mov	x2, x28
    849c:	mov	x1, #0x1                   	// #1
    84a0:	str	x3, [sp, #136]
    84a4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    84a8:	ldr	x0, [sp, #416]
    84ac:	cmp	x0, x19
    84b0:	b.ne	798c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x734>  // b.any
    84b4:	b	7990 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x738>
    84b8:	ldp	x2, x1, [x28, #8]
    84bc:	mov	x0, x28
    84c0:	cmp	x2, x1
    84c4:	cset	w1, eq  // eq = none
    84c8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    84cc:	str	w0, [x28, #40]
    84d0:	mov	x0, x28
    84d4:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    84d8:	mov	x26, x0
    84dc:	mov	x2, x21
    84e0:	mov	x1, x19
    84e4:	mov	x0, x28
    84e8:	mov	w3, #0x0                   	// #0
    84ec:	bl	5fb0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    84f0:	mov	x21, x0
    84f4:	cbz	x0, 86f8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x14a0>
    84f8:	ldr	w0, [x28, #40]
    84fc:	cmp	w0, #0x9
    8500:	b.eq	88e8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1690>  // b.none
    8504:	add	x19, sp, #0x1a0
    8508:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    850c:	mov	x0, x19
    8510:	add	x1, x1, #0x0
    8514:	b	7a50 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7f8>
    8518:	add	x4, sp, #0x88
    851c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8520:	mov	x0, x4
    8524:	add	x1, x1, #0x0
    8528:	str	x4, [sp, #120]
    852c:	add	x26, sp, #0x180
    8530:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8534:	add	x28, sp, #0xb8
    8538:	ldr	x1, [x20]
    853c:	add	x3, sp, #0x100
    8540:	add	x2, sp, #0xd0
    8544:	add	x5, sp, #0xa0
    8548:	stp	x5, x3, [sp, #96]
    854c:	mov	x8, x26
    8550:	mov	x0, x20
    8554:	ldr	x1, [x1, #16]
    8558:	str	x2, [sp, #112]
    855c:	add	x23, sp, #0xe8
    8560:	add	x20, sp, #0x118
    8564:	add	x21, sp, #0x130
    8568:	add	x19, sp, #0x148
    856c:	blr	x1
    8570:	ldr	x5, [sp, #96]
    8574:	mov	x1, x26
    8578:	mov	x0, x5
    857c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8580:	ldr	x4, [sp, #120]
    8584:	mov	x8, x28
    8588:	ldr	x0, [sp, #96]
    858c:	mov	x1, x0
    8590:	mov	x0, x4
    8594:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8598:	ldr	x2, [sp, #112]
    859c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    85a0:	add	x1, x1, #0x0
    85a4:	str	x2, [sp, #96]
    85a8:	mov	x0, x2
    85ac:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    85b0:	ldr	x0, [sp, #96]
    85b4:	mov	x8, x23
    85b8:	mov	x1, x0
    85bc:	mov	x0, x28
    85c0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    85c4:	ldr	x1, [x27]
    85c8:	mov	x8, x25
    85cc:	mov	x0, x27
    85d0:	ldr	x1, [x1, #16]
    85d4:	blr	x1
    85d8:	ldr	x3, [sp, #104]
    85dc:	mov	x1, x25
    85e0:	mov	x27, x3
    85e4:	mov	x0, x3
    85e8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    85ec:	mov	x8, x20
    85f0:	mov	x1, x27
    85f4:	mov	x0, x23
    85f8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    85fc:	mov	x0, x21
    8600:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8604:	add	x1, x1, #0x0
    8608:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    860c:	mov	x1, x21
    8610:	mov	x0, x20
    8614:	mov	x8, x19
    8618:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    861c:	mov	x2, x19
    8620:	add	x0, sp, #0x80
    8624:	mov	x1, #0x1                   	// #1
    8628:	str	x22, [sp, #128]
    862c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    8630:	add	x25, x25, #0x10
    8634:	ldr	x0, [sp, #416]
    8638:	cmp	x0, x25
    863c:	b.eq	8644 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x13ec>  // b.none
    8640:	bl	0 <_ZdlPv>
    8644:	ldr	x0, [sp, #384]
    8648:	add	x26, x26, #0x10
    864c:	cmp	x0, x26
    8650:	b.eq	7e50 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xbf8>  // b.none
    8654:	bl	0 <_ZdlPv>
    8658:	b	7e50 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xbf8>
    865c:	ldp	x1, x2, [x28, #8]
    8660:	mov	x0, x28
    8664:	cmp	x2, x1
    8668:	cset	w1, eq  // eq = none
    866c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8670:	str	w0, [x28, #40]
    8674:	cmp	w23, #0x7
    8678:	b.eq	8a8c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1834>  // b.none
    867c:	ldr	w1, [sp, #360]
    8680:	cmp	w23, #0x8
    8684:	b.ne	8b4c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x18f4>  // b.any
    8688:	cbz	w1, 9638 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x23e0>
    868c:	ldr	x0, [sp, #352]
    8690:	ldr	x1, [x0]
    8694:	cbz	x1, 9618 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x23c0>
    8698:	ldrb	w0, [x1, #8]
    869c:	sub	w0, w0, #0x1
    86a0:	and	w0, w0, #0xff
    86a4:	cmp	w0, #0x16
    86a8:	b.hi	7cf0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xa98>  // b.pmore
    86ac:	ldr	x0, [x1, #16]
    86b0:	bl	0 <_ZN4llvm5RecTy9getListTyEv>
    86b4:	str	x0, [sp, #104]
    86b8:	ldr	w1, [sp, #360]
    86bc:	cmp	w1, #0x2
    86c0:	b.eq	8b24 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x18cc>  // b.none
    86c4:	mov	x0, x25
    86c8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    86cc:	add	x1, x1, #0x0
    86d0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    86d4:	ldr	x3, [sp, #120]
    86d8:	add	x0, sp, #0x180
    86dc:	mov	x2, x25
    86e0:	mov	x1, #0x1                   	// #1
    86e4:	str	x3, [sp, #384]
    86e8:	mov	x20, #0x0                   	// #0
    86ec:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    86f0:	ldr	x0, [sp, #352]
    86f4:	b	7e58 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xc00>
    86f8:	mov	x20, #0x0                   	// #0
    86fc:	ldp	x25, x26, [sp, #64]
    8700:	b	744c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f4>
    8704:	add	x19, sp, #0x1a0
    8708:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    870c:	mov	x0, x19
    8710:	add	x1, x1, #0x0
    8714:	b	7438 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e0>
    8718:	stp	x25, x26, [sp, #64]
    871c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8720:	mov	x25, x0
    8724:	cbz	x0, 9258 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2000>
    8728:	mov	x27, #0x0                   	// #0
    872c:	ldr	x26, [x25, #16]
    8730:	mov	x0, x26
    8734:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8738:	mov	x20, x0
    873c:	cbz	x26, 967c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2424>
    8740:	ldr	w0, [x26, #8]
    8744:	cmp	w0, #0x4
    8748:	b.eq	8750 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x14f8>  // b.none
    874c:	cbz	x20, 8eb8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1c60>
    8750:	cmp	w24, #0x2
    8754:	b.hi	87c0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1568>  // b.pmore
    8758:	cmp	w24, #0x1
    875c:	b.hi	87c0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1568>  // b.pmore
    8760:	cbz	x27, 8b7c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1924>
    8764:	ldr	w0, [x27, #32]
    8768:	cbz	w0, 92f8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x20a0>
    876c:	ldr	x0, [x27, #40]
    8770:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8774:	mov	x20, x0
    8778:	cbz	x0, 945c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2204>
    877c:	cmp	w22, #0x1
    8780:	ldr	x23, [x0, #16]
    8784:	b.eq	87c0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1568>  // b.none
    8788:	mov	x0, x23
    878c:	bl	0 <_ZN4llvm5RecTy9getListTyEv>
    8790:	mov	x23, x0
    8794:	ldp	x25, x26, [sp, #64]
    8798:	b	74f8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2a0>
    879c:	stp	x25, x26, [sp, #64]
    87a0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    87a4:	mov	x25, x0
    87a8:	cbnz	x0, 9430 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x21d8>
    87ac:	cmp	w24, #0x2
    87b0:	b.hi	87c0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1568>  // b.pmore
    87b4:	cmp	w24, #0x1
    87b8:	mov	x27, x21
    87bc:	b.ls	8764 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x150c>  // b.plast
    87c0:	ldp	x25, x26, [sp, #64]
    87c4:	b	74f8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2a0>
    87c8:	ldp	x2, x1, [x28, #8]
    87cc:	mov	x0, x28
    87d0:	cmp	x2, x1
    87d4:	cset	w1, eq  // eq = none
    87d8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    87dc:	str	w0, [x28, #40]
    87e0:	cmp	w0, #0xe
    87e4:	b.ne	8ba0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1948>  // b.any
    87e8:	ldp	x2, x1, [x28, #8]
    87ec:	mov	x0, x28
    87f0:	add	x25, sp, #0x1a0
    87f4:	mov	x27, #0x0                   	// #0
    87f8:	cmp	x2, x1
    87fc:	cset	w1, eq  // eq = none
    8800:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8804:	ldr	x2, [x21, #16]
    8808:	str	w0, [x28, #40]
    880c:	mov	w3, #0x0                   	// #0
    8810:	mov	x1, x23
    8814:	mov	x0, x25
    8818:	bl	0 <_ZN4llvm9RecordValC1EPNS_4InitEPNS_5RecTyEb>
    881c:	mov	x1, x25
    8820:	mov	x0, x19
    8824:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8828:	ldr	x2, [x22, #24]
    882c:	mov	w3, #0x0                   	// #0
    8830:	mov	x0, x25
    8834:	mov	x1, x24
    8838:	bl	0 <_ZN4llvm9RecordValC1EPNS_4InitEPNS_5RecTyEb>
    883c:	mov	x1, x25
    8840:	mov	x0, x19
    8844:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8848:	mov	w3, #0x0                   	// #0
    884c:	mov	x2, #0x0                   	// #0
    8850:	mov	x1, x19
    8854:	mov	x0, x28
    8858:	bl	5fb0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    885c:	mov	x22, x0
    8860:	mov	x1, x23
    8864:	mov	x0, x19
    8868:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    886c:	mov	x1, x24
    8870:	mov	x0, x19
    8874:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8878:	cbz	x22, 86f8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x14a0>
    887c:	mov	x0, x22
    8880:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8884:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8888:	mov	x22, x0
    888c:	add	x1, x1, #0x0
    8890:	mov	x0, x25
    8894:	cbz	x22, 88c0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1668>
    8898:	ldr	x0, [x21, #16]
    889c:	ldr	x1, [x22, #16]
    88a0:	cmp	x1, x0
    88a4:	b.ne	8f3c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1ce4>  // b.any
    88a8:	ldr	w0, [x28, #40]
    88ac:	cmp	w0, #0x9
    88b0:	b.eq	9034 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1ddc>  // b.none
    88b4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    88b8:	mov	x0, x25
    88bc:	add	x1, x1, #0x0
    88c0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    88c4:	mov	x20, #0x0                   	// #0
    88c8:	mov	x1, x25
    88cc:	mov	x0, x28
    88d0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    88d4:	cbz	x27, 8038 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xde0>
    88d8:	mov	x0, x27
    88dc:	bl	338 <_ZNKSt14default_deleteIN4llvm6RecordEEclEPS1_.isra.0.part.0>
    88e0:	ldp	x25, x26, [sp, #64]
    88e4:	b	744c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f4>
    88e8:	ldp	x2, x1, [x28, #8]
    88ec:	mov	x0, x28
    88f0:	cmp	x2, x1
    88f4:	cset	w1, eq  // eq = none
    88f8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    88fc:	str	w0, [x28, #40]
    8900:	cmp	w20, #0x3a
    8904:	b.eq	8ce8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a90>  // b.none
    8908:	cmp	w20, #0x3e
    890c:	b.ne	8988 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1730>  // b.any
    8910:	mov	x0, x27
    8914:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8918:	mov	x20, x0
    891c:	cbz	x0, 93f4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x219c>
    8920:	ldr	x0, [x0, #16]
    8924:	cbz	x0, 9524 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x22cc>
    8928:	ldr	w0, [x0, #8]
    892c:	cmp	w0, #0x5
    8930:	b.ne	9354 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x20fc>  // b.any
    8934:	mov	x0, x21
    8938:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    893c:	mov	x28, x0
    8940:	cbz	x0, 9438 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x21e0>
    8944:	adrp	x0, 0 <_ZN4llvm11StringRecTy6SharedE>
    8948:	ldr	x0, [x0]
    894c:	bl	0 <_ZN4llvm5RecTy9getListTyEv>
    8950:	ldr	x1, [x28, #16]
    8954:	cmp	x1, x0
    8958:	b.ne	9470 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2218>  // b.any
    895c:	mov	x4, x23
    8960:	mov	x3, x21
    8964:	mov	x2, x27
    8968:	mov	x1, x24
    896c:	mov	w0, w22
    8970:	bl	0 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE>
    8974:	mov	x1, x19
    8978:	bl	0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE>
    897c:	mov	x20, x0
    8980:	ldp	x25, x26, [sp, #64]
    8984:	b	744c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f4>
    8988:	cmp	w20, #0x33
    898c:	b.eq	8bf8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x19a0>  // b.none
    8990:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8994:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8998:	add	x1, x1, #0x0
    899c:	add	x0, x0, #0x0
    89a0:	mov	w2, #0x5be                 	// #1470
    89a4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    89a8:	add	x24, sp, #0x118
    89ac:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    89b0:	mov	x0, x24
    89b4:	add	x1, x1, #0x0
    89b8:	stp	x25, x26, [sp, #64]
    89bc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    89c0:	add	x19, sp, #0x1a0
    89c4:	ldr	x1, [x22]
    89c8:	mov	x8, x19
    89cc:	mov	x0, x22
    89d0:	add	x25, sp, #0x130
    89d4:	add	x22, sp, #0x148
    89d8:	add	x23, sp, #0x160
    89dc:	ldr	x1, [x1, #40]
    89e0:	add	x21, sp, #0x180
    89e4:	blr	x1
    89e8:	mov	x1, x19
    89ec:	mov	x0, x25
    89f0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    89f4:	add	x19, x19, #0x10
    89f8:	mov	x8, x22
    89fc:	mov	x1, x25
    8a00:	mov	x0, x24
    8a04:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8a08:	mov	x0, x23
    8a0c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8a10:	add	x1, x1, #0x0
    8a14:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8a18:	mov	x8, x21
    8a1c:	mov	x1, x23
    8a20:	mov	x0, x22
    8a24:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8a28:	mov	x1, x21
    8a2c:	mov	x0, x28
    8a30:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8a34:	ldr	x0, [sp, #416]
    8a38:	cmp	x0, x19
    8a3c:	b.eq	8038 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xde0>  // b.none
    8a40:	bl	0 <_ZdlPv>
    8a44:	ldp	x25, x26, [sp, #64]
    8a48:	b	744c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f4>
    8a4c:	add	x20, sp, #0x1a0
    8a50:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8a54:	mov	x0, x20
    8a58:	add	x1, x1, #0x0
    8a5c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8a60:	mov	w22, #0x5                   	// #5
    8a64:	mov	x1, x20
    8a68:	mov	x0, x28
    8a6c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8a70:	ldr	w0, [x28, #40]
    8a74:	b	74a8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x250>
    8a78:	add	x19, sp, #0x1a0
    8a7c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8a80:	mov	x0, x19
    8a84:	add	x1, x1, #0x0
    8a88:	b	7438 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e0>
    8a8c:	ldr	w1, [sp, #360]
    8a90:	str	x20, [sp, #104]
    8a94:	cmp	w1, #0x2
    8a98:	mov	x20, #0xfffffffffffffff8    	// #-8
    8a9c:	b.hi	8ae4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x188c>  // b.pmore
    8aa0:	b	86bc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1464>
    8aa4:	sub	w1, w1, #0x1
    8aa8:	str	w1, [sp, #360]
    8aac:	ldr	x3, [sp, #104]
    8ab0:	add	x5, x20, w1, uxtw #3
    8ab4:	mov	w0, w23
    8ab8:	ldr	x1, [x4, x5]
    8abc:	bl	0 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE>
    8ac0:	mov	x1, x19
    8ac4:	bl	0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE>
    8ac8:	ldr	w1, [sp, #360]
    8acc:	cbz	w1, 9334 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x20dc>
    8ad0:	ldr	x3, [sp, #352]
    8ad4:	add	x2, x20, w1, uxtw #3
    8ad8:	cmp	w1, #0x2
    8adc:	str	x0, [x3, x2]
    8ae0:	b.ls	86bc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1464>  // b.plast
    8ae4:	ldr	x4, [sp, #352]
    8ae8:	add	x2, x20, w1, uxtw #3
    8aec:	ldr	w3, [sp, #364]
    8af0:	mov	w0, w1
    8af4:	sub	x0, x0, #0x1
    8af8:	cmp	x0, x3
    8afc:	ldr	x2, [x4, x2]
    8b00:	b.ls	8aa4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x184c>  // b.plast
    8b04:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8b08:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8b0c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8b10:	add	x3, x3, #0x0
    8b14:	add	x1, x1, #0x0
    8b18:	add	x0, x0, #0x0
    8b1c:	mov	w2, #0x43                  	// #67
    8b20:	bl	0 <__assert_fail>
    8b24:	ldr	x2, [sp, #352]
    8b28:	mov	w0, w23
    8b2c:	ldr	x3, [sp, #104]
    8b30:	ldp	x1, x2, [x2]
    8b34:	bl	0 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE>
    8b38:	mov	x1, x19
    8b3c:	bl	0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE>
    8b40:	mov	x20, x0
    8b44:	ldr	x0, [sp, #352]
    8b48:	b	7e58 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xc00>
    8b4c:	sub	w0, w23, #0x7
    8b50:	mov	w2, #0xfd                  	// #253
    8b54:	tst	w0, w2
    8b58:	b.eq	8a94 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x183c>  // b.none
    8b5c:	cmp	w23, #0x0
    8b60:	ccmp	w23, #0xa, #0x4, ne  // ne = any
    8b64:	b.eq	8a94 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x183c>  // b.none
    8b68:	sub	w0, w23, #0x1
    8b6c:	and	w0, w0, #0xff
    8b70:	cmp	w0, #0x2
    8b74:	b.ls	8a94 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x183c>  // b.plast
    8b78:	b	86bc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1464>
    8b7c:	ldr	x0, [x25, #16]
    8b80:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8b84:	mov	x23, x0
    8b88:	cbz	x0, 95a0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2348>
    8b8c:	cmp	w22, #0x1
    8b90:	b.ne	87c0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1568>  // b.any
    8b94:	ldr	x23, [x0, #24]
    8b98:	ldp	x25, x26, [sp, #64]
    8b9c:	b	74f8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2a0>
    8ba0:	add	x19, sp, #0x1a0
    8ba4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8ba8:	mov	x0, x19
    8bac:	add	x1, x1, #0x0
    8bb0:	b	7a50 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7f8>
    8bb4:	add	x21, sp, #0x148
    8bb8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8bbc:	mov	x0, x21
    8bc0:	add	x1, x1, #0x0
    8bc4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8bc8:	add	x19, sp, #0x1a0
    8bcc:	ldr	x0, [x20, #16]
    8bd0:	mov	x8, x19
    8bd4:	add	x22, sp, #0x160
    8bd8:	add	x20, sp, #0x180
    8bdc:	ldr	x1, [x0]
    8be0:	ldr	x1, [x1, #16]
    8be4:	blr	x1
    8be8:	mov	x1, x19
    8bec:	mov	x0, x22
    8bf0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8bf4:	b	7744 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x4ec>
    8bf8:	mov	x0, x21
    8bfc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8c00:	mov	x20, x0
    8c04:	cbz	x0, 95d0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2378>
    8c08:	ldr	x23, [x0, #16]
    8c0c:	b	895c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1704>
    8c10:	ldp	x2, x1, [x28, #8]
    8c14:	mov	x0, x28
    8c18:	cmp	x2, x1
    8c1c:	cset	w1, eq  // eq = none
    8c20:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8c24:	str	w0, [x28, #40]
    8c28:	cmp	w0, #0xe
    8c2c:	b.ne	8ba0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1948>  // b.any
    8c30:	ldp	x2, x1, [x28, #8]
    8c34:	mov	x0, x28
    8c38:	add	x25, sp, #0x1a0
    8c3c:	cmp	x2, x1
    8c40:	cset	w1, eq  // eq = none
    8c44:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8c48:	str	w0, [x28, #40]
    8c4c:	ldr	x2, [x28, #344]
    8c50:	add	x8, sp, #0x180
    8c54:	mov	x1, x25
    8c58:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8c5c:	add	x0, x0, #0x0
    8c60:	stp	xzr, xzr, [sp, #416]
    8c64:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8c68:	ldr	x2, [x21, #16]
    8c6c:	mov	w3, #0x0                   	// #0
    8c70:	ldr	x27, [sp, #384]
    8c74:	mov	x0, x25
    8c78:	mov	x1, x23
    8c7c:	bl	0 <_ZN4llvm9RecordValC1EPNS_4InitEPNS_5RecTyEb>
    8c80:	mov	x1, x25
    8c84:	mov	x0, x27
    8c88:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8c8c:	ldr	x2, [x22, #24]
    8c90:	mov	w3, #0x0                   	// #0
    8c94:	mov	x0, x25
    8c98:	mov	x1, x24
    8c9c:	bl	0 <_ZN4llvm9RecordValC1EPNS_4InitEPNS_5RecTyEb>
    8ca0:	mov	x1, x25
    8ca4:	mov	x0, x27
    8ca8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8cac:	mov	w3, #0x0                   	// #0
    8cb0:	mov	x2, #0x0                   	// #0
    8cb4:	mov	x1, x27
    8cb8:	mov	x0, x28
    8cbc:	bl	5fb0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    8cc0:	mov	x22, x0
    8cc4:	mov	x1, x23
    8cc8:	mov	x0, x27
    8ccc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8cd0:	mov	x1, x24
    8cd4:	mov	x0, x27
    8cd8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8cdc:	cbnz	x22, 887c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1624>
    8ce0:	mov	x20, #0x0                   	// #0
    8ce4:	b	88d4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x167c>
    8ce8:	mov	x0, x27
    8cec:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8cf0:	mov	x20, x0
    8cf4:	cbz	x0, 8cfc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1aa4>
    8cf8:	ldr	x20, [x0, #16]
    8cfc:	mov	x0, x27
    8d00:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8d04:	cbz	x0, 8d14 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1abc>
    8d08:	ldr	w0, [x0, #32]
    8d0c:	bl	0 <_ZN4llvm9BitsRecTy3getEj>
    8d10:	mov	x20, x0
    8d14:	adrp	x1, 0 <_ZN4llvm8BitRecTy6SharedE>
    8d18:	ldrb	w2, [x27, #8]
    8d1c:	mov	x0, x21
    8d20:	ldr	x1, [x1]
    8d24:	cmp	w2, #0x2
    8d28:	csel	x20, x1, x20, eq  // eq = none
    8d2c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8d30:	mov	x25, x0
    8d34:	cbz	x0, 8d3c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1ae4>
    8d38:	ldr	x25, [x0, #16]
    8d3c:	mov	x0, x21
    8d40:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8d44:	cbz	x0, 8d54 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1afc>
    8d48:	ldr	w0, [x0, #32]
    8d4c:	bl	0 <_ZN4llvm9BitsRecTy3getEj>
    8d50:	mov	x25, x0
    8d54:	ldrb	w1, [x21, #8]
    8d58:	ldrb	w0, [x27, #8]
    8d5c:	cmp	w1, #0x2
    8d60:	b.eq	9320 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x20c8>  // b.none
    8d64:	cmp	w0, #0x18
    8d68:	csel	x20, x20, x25, ne  // ne = any
    8d6c:	cmp	w1, #0x18
    8d70:	csel	x25, x25, x20, ne  // ne = any
    8d74:	cmp	x20, #0x0
    8d78:	ccmp	x25, #0x0, #0x4, ne  // ne = any
    8d7c:	b.eq	930c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x20b4>  // b.none
    8d80:	mov	x1, x25
    8d84:	mov	x0, x20
    8d88:	bl	0 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_>
    8d8c:	mov	x23, x0
    8d90:	cbnz	x0, 895c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1704>
    8d94:	add	x2, sp, #0xa0
    8d98:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8d9c:	mov	x0, x2
    8da0:	add	x1, x1, #0x0
    8da4:	str	x2, [sp, #112]
    8da8:	add	x26, sp, #0x180
    8dac:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8db0:	add	x27, sp, #0xd0
    8db4:	ldr	x1, [x20]
    8db8:	add	x4, sp, #0xe8
    8dbc:	add	x3, sp, #0xb8
    8dc0:	stp	x3, x4, [sp, #96]
    8dc4:	mov	x8, x26
    8dc8:	ldr	x1, [x1, #16]
    8dcc:	mov	x0, x20
    8dd0:	add	x23, sp, #0x100
    8dd4:	add	x19, sp, #0x1a0
    8dd8:	add	x24, sp, #0x118
    8ddc:	add	x21, sp, #0x130
    8de0:	blr	x1
    8de4:	add	x22, sp, #0x148
    8de8:	ldr	x3, [sp, #96]
    8dec:	mov	x1, x26
    8df0:	add	x20, sp, #0x160
    8df4:	mov	x0, x3
    8df8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8dfc:	ldr	x2, [sp, #112]
    8e00:	mov	x8, x27
    8e04:	ldr	x0, [sp, #96]
    8e08:	mov	x1, x0
    8e0c:	mov	x0, x2
    8e10:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8e14:	ldr	x4, [sp, #104]
    8e18:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8e1c:	add	x1, x1, #0x0
    8e20:	str	x4, [sp, #96]
    8e24:	mov	x0, x4
    8e28:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8e2c:	ldr	x0, [sp, #96]
    8e30:	mov	x8, x23
    8e34:	mov	x1, x0
    8e38:	mov	x0, x27
    8e3c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8e40:	ldr	x1, [x25]
    8e44:	mov	x8, x19
    8e48:	mov	x0, x25
    8e4c:	ldr	x1, [x1, #16]
    8e50:	blr	x1
    8e54:	mov	x1, x19
    8e58:	mov	x0, x24
    8e5c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8e60:	add	x19, x19, #0x10
    8e64:	mov	x8, x21
    8e68:	mov	x1, x24
    8e6c:	mov	x0, x23
    8e70:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8e74:	mov	x0, x22
    8e78:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8e7c:	add	x1, x1, #0x0
    8e80:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8e84:	mov	x8, x20
    8e88:	mov	x1, x22
    8e8c:	mov	x0, x21
    8e90:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8e94:	mov	x1, x20
    8e98:	mov	x0, x28
    8e9c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8ea0:	ldr	x0, [sp, #416]
    8ea4:	cmp	x0, x19
    8ea8:	b.ne	798c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x734>  // b.any
    8eac:	b	7990 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x738>
    8eb0:	mov	w27, #0x0                   	// #0
    8eb4:	b	8160 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xf08>
    8eb8:	add	x19, sp, #0x1a0
    8ebc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8ec0:	mov	x0, x19
    8ec4:	add	x1, x1, #0x0
    8ec8:	b	7a54 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7fc>
    8ecc:	ldp	x2, x1, [x28, #8]
    8ed0:	mov	x0, x28
    8ed4:	cmp	x2, x1
    8ed8:	cset	w1, eq  // eq = none
    8edc:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8ee0:	str	w0, [x28, #40]
    8ee4:	cbnz	w27, 8f00 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1ca8>
    8ee8:	mov	x0, x20
    8eec:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8ef0:	cbz	x0, 9528 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x22d0>
    8ef4:	ldr	x0, [x0, #16]
    8ef8:	bl	0 <_ZN4llvm5RecTy9getListTyEv>
    8efc:	mov	x26, x0
    8f00:	mov	x3, x20
    8f04:	mov	x4, x26
    8f08:	mov	x2, x24
    8f0c:	mov	x1, x23
    8f10:	mov	w0, #0x1                   	// #1
    8f14:	bl	0 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE>
    8f18:	mov	x1, x19
    8f1c:	bl	0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE>
    8f20:	mov	x20, x0
    8f24:	b	81e0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xf88>
    8f28:	add	x19, sp, #0x1a0
    8f2c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8f30:	mov	x0, x19
    8f34:	add	x1, x1, #0x0
    8f38:	b	7438 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e0>
    8f3c:	add	x0, sp, #0xd0
    8f40:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8f44:	add	x1, x1, #0x0
    8f48:	str	x0, [sp, #104]
    8f4c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8f50:	add	x26, sp, #0x180
    8f54:	ldr	x0, [x21, #16]
    8f58:	add	x3, sp, #0xe8
    8f5c:	str	x3, [sp, #96]
    8f60:	mov	x8, x26
    8f64:	add	x23, sp, #0x100
    8f68:	add	x24, sp, #0x118
    8f6c:	ldr	x1, [x0]
    8f70:	add	x20, sp, #0x130
    8f74:	add	x21, sp, #0x148
    8f78:	add	x19, sp, #0x160
    8f7c:	ldr	x1, [x1, #16]
    8f80:	blr	x1
    8f84:	ldr	x3, [sp, #96]
    8f88:	mov	x1, x26
    8f8c:	mov	x0, x3
    8f90:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8f94:	ldp	x0, x2, [sp, #96]
    8f98:	mov	x8, x23
    8f9c:	mov	x1, x0
    8fa0:	mov	x0, x2
    8fa4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8fa8:	mov	x0, x24
    8fac:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8fb0:	add	x1, x1, #0x0
    8fb4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8fb8:	mov	x1, x24
    8fbc:	mov	x0, x23
    8fc0:	mov	x8, x20
    8fc4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8fc8:	ldr	x0, [x22, #16]
    8fcc:	mov	x8, x25
    8fd0:	ldr	x1, [x0]
    8fd4:	ldr	x1, [x1, #16]
    8fd8:	blr	x1
    8fdc:	mov	x1, x25
    8fe0:	mov	x0, x21
    8fe4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8fe8:	add	x25, x25, #0x10
    8fec:	mov	x8, x19
    8ff0:	mov	x1, x21
    8ff4:	mov	x0, x20
    8ff8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8ffc:	mov	x1, x19
    9000:	mov	x0, x28
    9004:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9008:	ldr	x0, [sp, #416]
    900c:	cmp	x0, x25
    9010:	b.eq	9018 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1dc0>  // b.none
    9014:	bl	0 <_ZdlPv>
    9018:	ldr	x0, [sp, #384]
    901c:	add	x26, x26, #0x10
    9020:	cmp	x0, x26
    9024:	b.eq	8ce0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a88>  // b.none
    9028:	mov	x20, #0x0                   	// #0
    902c:	bl	0 <_ZdlPv>
    9030:	b	88d4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x167c>
    9034:	ldp	x2, x1, [x28, #8]
    9038:	mov	x0, x28
    903c:	cmp	x2, x1
    9040:	cset	w1, eq  // eq = none
    9044:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    9048:	ldr	x5, [x21, #16]
    904c:	mov	x4, x22
    9050:	mov	x3, x24
    9054:	mov	x2, x23
    9058:	str	w0, [x28, #40]
    905c:	mov	x1, x20
    9060:	mov	x0, x21
    9064:	bl	0 <_ZN4llvm10FoldOpInit3getEPNS_4InitES2_S2_S2_S2_PNS_5RecTyE>
    9068:	mov	x1, x19
    906c:	bl	0 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE>
    9070:	mov	x20, x0
    9074:	b	88d4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x167c>
    9078:	mov	x27, #0x0                   	// #0
    907c:	stp	x25, x26, [sp, #64]
    9080:	mov	x25, x0
    9084:	b	872c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x14d4>
    9088:	add	x19, sp, #0x1a0
    908c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9090:	mov	x0, x19
    9094:	add	x1, x1, #0x0
    9098:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    909c:	mov	x1, x19
    90a0:	mov	x0, x28
    90a4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    90a8:	b	744c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f4>
    90ac:	add	x23, sp, #0x88
    90b0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    90b4:	mov	x0, x23
    90b8:	add	x1, x1, #0x0
    90bc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    90c0:	add	x26, sp, #0x180
    90c4:	ldr	x1, [x27]
    90c8:	mov	x8, x26
    90cc:	mov	x0, x27
    90d0:	add	x27, sp, #0xa0
    90d4:	add	x19, sp, #0xb8
    90d8:	add	x20, sp, #0xd0
    90dc:	ldr	x1, [x1, #16]
    90e0:	add	x22, sp, #0xe8
    90e4:	blr	x1
    90e8:	mov	x1, x26
    90ec:	mov	x0, x27
    90f0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    90f4:	mov	x8, x19
    90f8:	mov	x1, x27
    90fc:	mov	x0, x23
    9100:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9104:	mov	x0, x20
    9108:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    910c:	add	x1, x1, #0x0
    9110:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9114:	mov	x0, x19
    9118:	mov	x1, x20
    911c:	mov	x8, x22
    9120:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9124:	ldr	w0, [x21, #8]
    9128:	cmp	w0, #0x5
    912c:	b.ne	965c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2404>  // b.any
    9130:	ldr	x0, [x21, #24]
    9134:	mov	x8, x25
    9138:	add	x23, sp, #0x100
    913c:	add	x20, sp, #0x118
    9140:	add	x21, sp, #0x130
    9144:	add	x19, sp, #0x148
    9148:	ldr	x1, [x0]
    914c:	ldr	x1, [x1, #16]
    9150:	blr	x1
    9154:	mov	x0, x23
    9158:	mov	x1, x25
    915c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9160:	mov	x8, x20
    9164:	mov	x1, x23
    9168:	mov	x0, x22
    916c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9170:	mov	x0, x21
    9174:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9178:	add	x1, x1, #0x0
    917c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9180:	mov	x1, x21
    9184:	mov	x0, x20
    9188:	mov	x8, x19
    918c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9190:	ldr	x3, [sp, #120]
    9194:	mov	x2, x19
    9198:	add	x0, sp, #0x80
    919c:	mov	x1, #0x1                   	// #1
    91a0:	str	x3, [sp, #128]
    91a4:	b	862c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x13d4>
    91a8:	add	x22, sp, #0x100
    91ac:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    91b0:	mov	x0, x22
    91b4:	add	x1, x1, #0x0
    91b8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    91bc:	add	x23, sp, #0x118
    91c0:	ldr	x1, [x21]
    91c4:	mov	x8, x25
    91c8:	mov	x0, x21
    91cc:	add	x20, sp, #0x130
    91d0:	add	x21, sp, #0x148
    91d4:	add	x19, sp, #0x180
    91d8:	ldr	x1, [x1, #16]
    91dc:	blr	x1
    91e0:	mov	x0, x23
    91e4:	mov	x1, x25
    91e8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    91ec:	mov	x8, x20
    91f0:	mov	x1, x23
    91f4:	mov	x0, x22
    91f8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    91fc:	mov	x0, x21
    9200:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9204:	add	x1, x1, #0x0
    9208:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    920c:	mov	x1, x21
    9210:	mov	x0, x20
    9214:	mov	x8, x19
    9218:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    921c:	ldr	x3, [sp, #120]
    9220:	mov	x2, x19
    9224:	add	x0, sp, #0xe8
    9228:	mov	x1, #0x1                   	// #1
    922c:	str	x3, [sp, #232]
    9230:	b	7e34 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xbdc>
    9234:	cbz	x26, 9658 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2400>
    9238:	ldr	w0, [x26, #8]
    923c:	cmp	w0, #0x6
    9240:	b.eq	926c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2014>  // b.none
    9244:	add	x19, sp, #0x1a0
    9248:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    924c:	mov	x0, x19
    9250:	add	x1, x1, #0x0
    9254:	b	7a54 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7fc>
    9258:	add	x19, sp, #0x1a0
    925c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9260:	mov	x0, x19
    9264:	add	x1, x1, #0x0
    9268:	b	7a50 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7f8>
    926c:	cbz	x21, 9280 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2028>
    9270:	ldr	w0, [x21, #8]
    9274:	cmp	w0, #0x6
    9278:	b.ne	9538 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x22e0>  // b.any
    927c:	mov	x21, #0x0                   	// #0
    9280:	mov	w27, #0x1                   	// #1
    9284:	b	8160 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xf08>
    9288:	ldr	x2, [x28, #344]
    928c:	add	x25, sp, #0x1a0
    9290:	add	x8, sp, #0x180
    9294:	mov	x1, x25
    9298:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    929c:	add	x0, x0, #0x0
    92a0:	stp	xzr, xzr, [sp, #416]
    92a4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    92a8:	mov	x2, x26
    92ac:	ldr	x22, [sp, #384]
    92b0:	mov	w3, #0x0                   	// #0
    92b4:	mov	x0, x25
    92b8:	mov	x1, x23
    92bc:	bl	0 <_ZN4llvm9RecordValC1EPNS_4InitEPNS_5RecTyEb>
    92c0:	mov	x1, x25
    92c4:	mov	x0, x22
    92c8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    92cc:	mov	x2, x21
    92d0:	mov	w3, #0x0                   	// #0
    92d4:	mov	x1, x22
    92d8:	mov	x0, x28
    92dc:	bl	5fb0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    92e0:	mov	x20, x0
    92e4:	mov	x1, x23
    92e8:	mov	x0, x22
    92ec:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    92f0:	cbnz	x20, 81b4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xf5c>
    92f4:	b	81e0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xf88>
    92f8:	add	x19, sp, #0x1a0
    92fc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9300:	mov	x0, x19
    9304:	add	x1, x1, #0x0
    9308:	b	7a50 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7f8>
    930c:	add	x19, sp, #0x1a0
    9310:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9314:	mov	x0, x19
    9318:	add	x1, x1, #0x0
    931c:	b	7a50 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7f8>
    9320:	cmp	w0, #0x18
    9324:	b.eq	9514 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x22bc>  // b.none
    9328:	adrp	x25, 0 <_ZN4llvm8BitRecTy6SharedE>
    932c:	ldr	x25, [x25]
    9330:	b	8d74 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1b1c>
    9334:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9338:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    933c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9340:	add	x3, x3, #0x0
    9344:	add	x1, x1, #0x0
    9348:	add	x0, x0, #0x0
    934c:	mov	w2, #0xa7                  	// #167
    9350:	bl	0 <__assert_fail>
    9354:	add	x23, sp, #0x118
    9358:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    935c:	mov	x0, x23
    9360:	add	x1, x1, #0x0
    9364:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9368:	add	x19, sp, #0x1a0
    936c:	ldr	x0, [x20, #16]
    9370:	mov	x8, x19
    9374:	add	x24, sp, #0x130
    9378:	add	x21, sp, #0x148
    937c:	add	x22, sp, #0x160
    9380:	add	x20, sp, #0x180
    9384:	ldr	x1, [x0]
    9388:	ldr	x1, [x1, #16]
    938c:	blr	x1
    9390:	mov	x1, x19
    9394:	mov	x0, x24
    9398:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    939c:	mov	x8, x21
    93a0:	mov	x1, x24
    93a4:	mov	x0, x23
    93a8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    93ac:	mov	x0, x22
    93b0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    93b4:	add	x1, x1, #0x0
    93b8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    93bc:	mov	x1, x22
    93c0:	mov	x0, x21
    93c4:	mov	x8, x20
    93c8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    93cc:	mov	x2, x20
    93d0:	add	x0, sp, #0x100
    93d4:	mov	x1, #0x1                   	// #1
    93d8:	str	x25, [sp, #256]
    93dc:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    93e0:	add	x19, x19, #0x10
    93e4:	ldr	x0, [sp, #416]
    93e8:	cmp	x0, x19
    93ec:	b.ne	79a0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x748>  // b.any
    93f0:	b	79a4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x74c>
    93f4:	ldrb	w0, [x27, #8]
    93f8:	cmp	w0, #0x18
    93fc:	b.eq	8934 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x16dc>  // b.none
    9400:	add	x19, sp, #0x1a0
    9404:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9408:	mov	x0, x19
    940c:	add	x1, x1, #0x0
    9410:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9414:	str	x25, [sp, #384]
    9418:	mov	x2, x19
    941c:	add	x0, sp, #0x180
    9420:	mov	x1, #0x1                   	// #1
    9424:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    9428:	ldp	x25, x26, [sp, #64]
    942c:	b	744c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f4>
    9430:	mov	x27, x21
    9434:	b	872c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x14d4>
    9438:	ldrb	w0, [x21, #8]
    943c:	cmp	w0, #0x18
    9440:	b.ne	95e4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x238c>  // b.any
    9444:	cbnz	x20, 895c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1704>
    9448:	add	x19, sp, #0x1a0
    944c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9450:	mov	x0, x19
    9454:	add	x1, x1, #0x0
    9458:	b	9410 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x21b8>
    945c:	add	x19, sp, #0x1a0
    9460:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9464:	mov	x0, x19
    9468:	add	x1, x1, #0x0
    946c:	b	7a54 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7fc>
    9470:	add	x23, sp, #0x118
    9474:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9478:	mov	x0, x23
    947c:	add	x1, x1, #0x0
    9480:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9484:	add	x19, sp, #0x1a0
    9488:	ldr	x0, [x28, #16]
    948c:	mov	x8, x19
    9490:	add	x24, sp, #0x130
    9494:	add	x21, sp, #0x148
    9498:	add	x22, sp, #0x160
    949c:	add	x20, sp, #0x180
    94a0:	ldr	x1, [x0]
    94a4:	ldr	x1, [x1, #16]
    94a8:	blr	x1
    94ac:	mov	x1, x19
    94b0:	mov	x0, x24
    94b4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    94b8:	mov	x8, x21
    94bc:	mov	x1, x24
    94c0:	mov	x0, x23
    94c4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    94c8:	mov	x0, x22
    94cc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    94d0:	add	x1, x1, #0x0
    94d4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    94d8:	mov	x1, x22
    94dc:	mov	x0, x21
    94e0:	mov	x8, x20
    94e4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    94e8:	mov	x2, x20
    94ec:	add	x0, sp, #0x100
    94f0:	mov	x1, #0x1                   	// #1
    94f4:	str	x26, [sp, #256]
    94f8:	b	93dc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2184>
    94fc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9500:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9504:	add	x1, x1, #0x0
    9508:	add	x0, x0, #0x0
    950c:	mov	w2, #0x4cf                 	// #1231
    9510:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    9514:	adrp	x20, 0 <_ZN4llvm8BitRecTy6SharedE>
    9518:	ldr	x20, [x20]
    951c:	mov	x25, x20
    9520:	b	8d80 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1b28>
    9524:	bl	78 <_ZN4llvm3isaINS_9ListRecTyEPNS_5RecTyEEEbRKT0_.isra.0.part.0>
    9528:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    952c:	mov	x0, x25
    9530:	add	x1, x1, #0x0
    9534:	b	81cc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xf74>
    9538:	add	x25, sp, #0x130
    953c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9540:	mov	x0, x25
    9544:	add	x1, x1, #0x0
    9548:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    954c:	add	x19, sp, #0x1a0
    9550:	ldr	x1, [x21]
    9554:	mov	x8, x19
    9558:	mov	x0, x21
    955c:	add	x26, sp, #0x118
    9560:	add	x23, sp, #0x148
    9564:	add	x24, sp, #0x160
    9568:	ldr	x1, [x1, #16]
    956c:	add	x21, sp, #0x180
    9570:	blr	x1
    9574:	mov	x1, x19
    9578:	mov	x0, x26
    957c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9580:	mov	x1, x26
    9584:	mov	x0, x25
    9588:	mov	x8, x23
    958c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9590:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9594:	mov	x0, x24
    9598:	add	x1, x1, #0x0
    959c:	b	7ffc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xda4>
    95a0:	add	x19, sp, #0x1a0
    95a4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    95a8:	mov	x0, x19
    95ac:	add	x1, x1, #0x0
    95b0:	b	7a50 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7f8>
    95b4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    95b8:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    95bc:	add	x1, x1, #0x0
    95c0:	add	x0, x0, #0x0
    95c4:	mov	w2, #0x39a                 	// #922
    95c8:	stp	x25, x26, [sp, #64]
    95cc:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    95d0:	add	x19, sp, #0x1a0
    95d4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    95d8:	mov	x0, x19
    95dc:	add	x1, x1, #0x0
    95e0:	b	7a54 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7fc>
    95e4:	add	x19, sp, #0x1a0
    95e8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    95ec:	mov	x0, x19
    95f0:	add	x1, x1, #0x0
    95f4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    95f8:	mov	x20, #0x0                   	// #0
    95fc:	mov	x2, x19
    9600:	add	x0, sp, #0x180
    9604:	mov	x1, #0x1                   	// #1
    9608:	str	x26, [sp, #384]
    960c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    9610:	ldp	x25, x26, [sp, #64]
    9614:	b	744c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f4>
    9618:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    961c:	add	x3, x3, #0x0
    9620:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9624:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9628:	add	x1, x1, #0x0
    962c:	add	x0, x0, #0x0
    9630:	mov	w2, #0x69                  	// #105
    9634:	bl	0 <__assert_fail>
    9638:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    963c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9640:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9644:	add	x3, x3, #0x0
    9648:	add	x1, x1, #0x0
    964c:	add	x0, x0, #0x0
    9650:	mov	w2, #0x9e                  	// #158
    9654:	bl	0 <__assert_fail>
    9658:	bl	118 <_ZN4llvm3isaINS_8DagRecTyEPNS_5RecTyEEEbRKT0_.isra.0.part.0>
    965c:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9660:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9664:	add	x3, x3, #0x0
    9668:	b	7cfc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xaa4>
    966c:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9670:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9674:	add	x3, x3, #0x0
    9678:	b	9624 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x23cc>
    967c:	bl	310 <_ZN4llvm3isaINS_11StringRecTyEPNS_5RecTyEEEbRKT0_.isra.0.part.0>

0000000000009680 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE>:
    9680:	stp	x29, x30, [sp, #-96]!
    9684:	mov	x29, sp
    9688:	stp	x19, x20, [sp, #16]
    968c:	mov	x19, x0
    9690:	mov	x20, x1
    9694:	ldr	w0, [x0, #40]
    9698:	stp	x21, x22, [sp, #32]
    969c:	mov	x21, x2
    96a0:	str	x23, [sp, #48]
    96a4:	b	9730 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0xb0>
    96a8:	mov	x1, x21
    96ac:	mov	x0, x19
    96b0:	mov	w3, #0x0                   	// #0
    96b4:	mov	x2, #0x0                   	// #0
    96b8:	bl	5fb0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    96bc:	mov	x22, x0
    96c0:	cbz	x0, 9868 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x1e8>
    96c4:	ldr	w0, [x19, #40]
    96c8:	mov	x23, #0x0                   	// #0
    96cc:	cmp	w0, #0xc
    96d0:	b.eq	97bc <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x13c>  // b.none
    96d4:	ldp	w3, w4, [x20, #8]
    96d8:	cmp	w3, w4
    96dc:	b.cs	980c <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x18c>  // b.hs, b.nlast
    96e0:	ldr	x0, [x20]
    96e4:	ubfiz	x2, x3, #4, #32
    96e8:	mov	w1, w3
    96ec:	add	x5, x0, x2
    96f0:	add	x1, x1, #0x1
    96f4:	str	x22, [x0, x2]
    96f8:	cmp	x1, w4, uxtw
    96fc:	str	x23, [x5, #8]
    9700:	b.hi	9880 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x200>  // b.pmore
    9704:	ldr	w0, [x19, #40]
    9708:	add	w3, w3, #0x1
    970c:	str	w3, [x20, #8]
    9710:	cmp	w0, #0xe
    9714:	b.ne	97a8 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x128>  // b.any
    9718:	ldp	x2, x1, [x19, #8]
    971c:	mov	x0, x19
    9720:	cmp	x2, x1
    9724:	cset	w1, eq  // eq = none
    9728:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    972c:	str	w0, [x19, #40]
    9730:	cmp	w0, #0x4a
    9734:	b.ne	96a8 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x28>  // b.any
    9738:	ldp	x0, x1, [x19, #48]
    973c:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    9740:	mov	x22, x0
    9744:	bl	0 <_ZN4llvm9UnsetInit3getEv>
    9748:	mov	x23, x0
    974c:	ldp	w1, w4, [x20, #8]
    9750:	cmp	w1, w4
    9754:	b.cs	9820 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x1a0>  // b.hs, b.nlast
    9758:	ldr	x0, [x20]
    975c:	ubfiz	x3, x1, #4, #32
    9760:	mov	w2, w1
    9764:	add	x5, x0, x3
    9768:	add	x2, x2, #0x1
    976c:	str	x23, [x0, x3]
    9770:	cmp	x2, w4, uxtw
    9774:	str	x22, [x5, #8]
    9778:	b.hi	9880 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x200>  // b.pmore
    977c:	add	w1, w1, #0x1
    9780:	str	w1, [x20, #8]
    9784:	cbz	w1, 98a0 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x220>
    9788:	ldp	x1, x2, [x19, #8]
    978c:	mov	x0, x19
    9790:	cmp	x2, x1
    9794:	cset	w1, eq  // eq = none
    9798:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    979c:	str	w0, [x19, #40]
    97a0:	cmp	w0, #0xe
    97a4:	b.eq	9718 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x98>  // b.none
    97a8:	ldp	x19, x20, [sp, #16]
    97ac:	ldp	x21, x22, [sp, #32]
    97b0:	ldr	x23, [sp, #48]
    97b4:	ldp	x29, x30, [sp], #96
    97b8:	ret
    97bc:	ldp	x2, x1, [x19, #8]
    97c0:	mov	x0, x19
    97c4:	cmp	x2, x1
    97c8:	cset	w1, eq  // eq = none
    97cc:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    97d0:	str	w0, [x19, #40]
    97d4:	cmp	w0, #0x4a
    97d8:	b.ne	9834 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x1b4>  // b.any
    97dc:	ldp	x0, x1, [x19, #48]
    97e0:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    97e4:	mov	x23, x0
    97e8:	ldp	x2, x1, [x19, #8]
    97ec:	mov	x0, x19
    97f0:	cmp	x2, x1
    97f4:	cset	w1, eq  // eq = none
    97f8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    97fc:	str	w0, [x19, #40]
    9800:	ldp	w3, w4, [x20, #8]
    9804:	cmp	w3, w4
    9808:	b.cc	96e0 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x60>  // b.lo, b.ul, b.last
    980c:	mov	x0, x20
    9810:	mov	x1, #0x0                   	// #0
    9814:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9818:	ldp	w3, w4, [x20, #8]
    981c:	b	96e0 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x60>
    9820:	mov	x1, #0x0                   	// #0
    9824:	mov	x0, x20
    9828:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    982c:	ldp	w1, w4, [x20, #8]
    9830:	b	9758 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0xd8>
    9834:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9838:	add	x1, x1, #0x0
    983c:	add	x21, sp, #0x48
    9840:	mov	x0, x21
    9844:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9848:	mov	x0, x19
    984c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    9850:	mov	x3, x0
    9854:	mov	x2, x21
    9858:	add	x0, sp, #0x40
    985c:	mov	x1, #0x1                   	// #1
    9860:	str	x3, [sp, #64]
    9864:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    9868:	str	wzr, [x20, #8]
    986c:	ldp	x19, x20, [sp, #16]
    9870:	ldp	x21, x22, [sp, #32]
    9874:	ldr	x23, [sp, #48]
    9878:	ldp	x29, x30, [sp], #96
    987c:	ret
    9880:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9884:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9888:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    988c:	add	x3, x3, #0x0
    9890:	add	x1, x1, #0x0
    9894:	add	x0, x0, #0x0
    9898:	mov	w2, #0x43                  	// #67
    989c:	bl	0 <__assert_fail>
    98a0:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    98a4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    98a8:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    98ac:	add	x3, x3, #0x0
    98b0:	add	x1, x1, #0x0
    98b4:	add	x0, x0, #0x0
    98b8:	mov	w2, #0xa7                  	// #167
    98bc:	bl	0 <__assert_fail>

00000000000098c0 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE>:
    98c0:	stp	x29, x30, [sp, #-128]!
    98c4:	cmp	x3, #0x0
    98c8:	mov	x29, sp
    98cc:	stp	x19, x20, [sp, #16]
    98d0:	mov	x20, x3
    98d4:	mov	x19, x1
    98d8:	stp	x21, x22, [sp, #32]
    98dc:	cset	w22, ne  // ne = any
    98e0:	cmp	x4, #0x0
    98e4:	stp	x23, x24, [sp, #48]
    98e8:	csel	w22, w22, wzr, eq  // eq = none
    98ec:	mov	x23, x2
    98f0:	stp	x25, x26, [sp, #64]
    98f4:	stp	x27, x28, [sp, #80]
    98f8:	mov	x27, x0
    98fc:	cbz	w22, 9af8 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x238>
    9900:	ldr	w0, [x3, #64]
    9904:	cbz	w0, 9a9c <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x1dc>
    9908:	ldr	w2, [x3, #80]
    990c:	mov	w1, #0x18                  	// #24
    9910:	ldr	x0, [x3, #72]
    9914:	ldr	x21, [x3, #56]
    9918:	umaddl	x2, w2, w1, x0
    991c:	cmp	x2, x0
    9920:	ldr	x3, [x21]
    9924:	b.ne	9938 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x78>  // b.any
    9928:	b	9b04 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x244>
    992c:	add	x0, x0, #0x18
    9930:	cmp	x2, x0
    9934:	b.eq	9b04 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x244>  // b.none
    9938:	ldr	x1, [x0]
    993c:	cmp	x3, x1
    9940:	b.ne	992c <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x6c>  // b.any
    9944:	ldr	x26, [x0, #8]
    9948:	mov	w21, #0x1                   	// #1
    994c:	and	x26, x26, #0xfffffffffffffff8
    9950:	mov	x1, x23
    9954:	mov	x2, x26
    9958:	mov	x0, x27
    995c:	mov	w3, #0x0                   	// #0
    9960:	bl	5fb0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    9964:	mov	x24, x0
    9968:	ldp	w1, w0, [x19, #8]
    996c:	cmp	w1, w0
    9970:	b.cs	9be4 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x324>  // b.hs, b.nlast
    9974:	ldr	x0, [x19]
    9978:	str	x24, [x0, w1, uxtw #3]
    997c:	ldp	w1, w2, [x19, #8]
    9980:	mov	w0, w1
    9984:	add	x0, x0, #0x1
    9988:	cmp	x0, x2
    998c:	b.hi	9c64 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x3a4>  // b.pmore
    9990:	add	w1, w1, #0x1
    9994:	str	w1, [x19, #8]
    9998:	cbz	w1, 9c44 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x384>
    999c:	ldr	x1, [x19]
    99a0:	add	x25, x19, #0x10
    99a4:	mov	w24, #0x18                  	// #24
    99a8:	add	x0, x1, x0, lsl #3
    99ac:	ldur	x0, [x0, #-8]
    99b0:	cbnz	x0, 9a14 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x154>
    99b4:	b	9abc <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x1fc>
    99b8:	mov	x1, x23
    99bc:	mov	x2, x26
    99c0:	mov	x0, x27
    99c4:	mov	w3, #0x0                   	// #0
    99c8:	bl	5fb0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    99cc:	mov	x28, x0
    99d0:	ldp	w1, w0, [x19, #8]
    99d4:	cmp	w1, w0
    99d8:	b.cs	9adc <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x21c>  // b.hs, b.nlast
    99dc:	ldr	x0, [x19]
    99e0:	str	x28, [x0, w1, uxtw #3]
    99e4:	ldp	w0, w2, [x19, #8]
    99e8:	mov	w1, w0
    99ec:	add	x1, x1, #0x1
    99f0:	cmp	x1, x2
    99f4:	b.hi	9c64 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x3a4>  // b.pmore
    99f8:	add	w0, w0, #0x1
    99fc:	str	w0, [x19, #8]
    9a00:	cbz	w0, 9c44 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x384>
    9a04:	ldr	x0, [x19]
    9a08:	add	x1, x0, x1, lsl #3
    9a0c:	ldur	x0, [x1, #-8]
    9a10:	cbz	x0, 9abc <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x1fc>
    9a14:	ldr	w0, [x27, #40]
    9a18:	cmp	w0, #0xe
    9a1c:	b.ne	9ac0 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x200>  // b.any
    9a20:	ldp	x2, x1, [x27, #8]
    9a24:	mov	x0, x27
    9a28:	cmp	x2, x1
    9a2c:	cset	w1, eq  // eq = none
    9a30:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    9a34:	str	w0, [x27, #40]
    9a38:	cmp	w0, #0x5
    9a3c:	b.eq	9ac0 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x200>  // b.none
    9a40:	cbz	w22, 99b8 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0xf8>
    9a44:	ldr	w0, [x20, #64]
    9a48:	mov	w2, w21
    9a4c:	ldr	x1, [x20, #56]
    9a50:	cmp	x0, w21, uxtw
    9a54:	b.ls	9bd0 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x310>  // b.plast
    9a58:	ldr	w0, [x20, #80]
    9a5c:	ldr	x4, [x20, #72]
    9a60:	ldr	x2, [x1, x2, lsl #3]
    9a64:	umaddl	x0, w0, w24, x4
    9a68:	cmp	x4, x0
    9a6c:	b.ne	9a80 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x1c0>  // b.any
    9a70:	b	9c84 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x3c4>
    9a74:	add	x4, x4, #0x18
    9a78:	cmp	x0, x4
    9a7c:	b.eq	9c84 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x3c4>  // b.none
    9a80:	ldr	x1, [x4]
    9a84:	cmp	x2, x1
    9a88:	b.ne	9a74 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x1b4>  // b.any
    9a8c:	ldr	x26, [x4, #8]
    9a90:	add	w21, w21, #0x1
    9a94:	and	x26, x26, #0xfffffffffffffff8
    9a98:	b	99b8 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0xf8>
    9a9c:	add	x20, sp, #0x68
    9aa0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9aa4:	mov	x0, x20
    9aa8:	add	x1, x1, #0x0
    9aac:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9ab0:	mov	x1, x20
    9ab4:	mov	x0, x27
    9ab8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9abc:	str	wzr, [x19, #8]
    9ac0:	ldp	x19, x20, [sp, #16]
    9ac4:	ldp	x21, x22, [sp, #32]
    9ac8:	ldp	x23, x24, [sp, #48]
    9acc:	ldp	x25, x26, [sp, #64]
    9ad0:	ldp	x27, x28, [sp, #80]
    9ad4:	ldp	x29, x30, [sp], #128
    9ad8:	ret
    9adc:	mov	x1, x25
    9ae0:	mov	x0, x19
    9ae4:	mov	x3, #0x8                   	// #8
    9ae8:	mov	x2, #0x0                   	// #0
    9aec:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    9af0:	ldr	w1, [x19, #8]
    9af4:	b	99dc <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x11c>
    9af8:	mov	x26, x4
    9afc:	mov	w21, #0x0                   	// #0
    9b00:	b	9950 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x90>
    9b04:	bl	0 <_ZN4llvm4errsEv>
    9b08:	mov	x1, x0
    9b0c:	ldp	x2, x3, [x0, #16]
    9b10:	sub	x2, x2, x3
    9b14:	cmp	x2, #0x18
    9b18:	b.ls	9c00 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x340>  // b.plast
    9b1c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9b20:	add	x0, x0, #0x0
    9b24:	ldrb	w2, [x0, #24]
    9b28:	ldp	x4, x5, [x0]
    9b2c:	stp	x4, x5, [x3]
    9b30:	ldr	x0, [x0, #16]
    9b34:	str	x0, [x3, #16]
    9b38:	strb	w2, [x3, #24]
    9b3c:	ldr	x0, [x1, #24]
    9b40:	add	x0, x0, #0x19
    9b44:	str	x0, [x1, #24]
    9b48:	mov	x0, x1
    9b4c:	mov	x1, #0x0                   	// #0
    9b50:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    9b54:	mov	x2, x0
    9b58:	ldp	x1, x3, [x0, #16]
    9b5c:	sub	x1, x1, x3
    9b60:	cmp	x1, #0x1
    9b64:	b.ls	9c2c <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x36c>  // b.plast
    9b68:	mov	w0, #0x2820                	// #10272
    9b6c:	strh	w0, [x3]
    9b70:	ldr	x0, [x2, #24]
    9b74:	add	x0, x0, #0x2
    9b78:	str	x0, [x2, #24]
    9b7c:	ldr	x1, [x21]
    9b80:	mov	x0, x2
    9b84:	bl	0 <_ZN4llvm11raw_ostreamlsEPKv>
    9b88:	mov	x1, x0
    9b8c:	ldp	x2, x3, [x0, #16]
    9b90:	sub	x2, x2, x3
    9b94:	cmp	x2, #0x1
    9b98:	b.ls	9c18 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x358>  // b.plast
    9b9c:	mov	w0, #0xa29                 	// #2601
    9ba0:	strh	w0, [x3]
    9ba4:	ldr	x0, [x1, #24]
    9ba8:	add	x0, x0, #0x2
    9bac:	str	x0, [x1, #24]
    9bb0:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9bb4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9bb8:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9bbc:	add	x3, x3, #0x0
    9bc0:	add	x1, x1, #0x0
    9bc4:	add	x0, x0, #0x0
    9bc8:	mov	w2, #0x945                 	// #2373
    9bcc:	bl	0 <__assert_fail>
    9bd0:	add	x20, sp, #0x68
    9bd4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9bd8:	mov	x0, x20
    9bdc:	add	x1, x1, #0x0
    9be0:	b	9aac <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x1ec>
    9be4:	add	x1, x19, #0x10
    9be8:	mov	x0, x19
    9bec:	mov	x3, #0x8                   	// #8
    9bf0:	mov	x2, #0x0                   	// #0
    9bf4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    9bf8:	ldr	w1, [x19, #8]
    9bfc:	b	9974 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0xb4>
    9c00:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9c04:	add	x1, x1, #0x0
    9c08:	mov	x2, #0x19                  	// #25
    9c0c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    9c10:	mov	x1, x0
    9c14:	b	9b48 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x288>
    9c18:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9c1c:	mov	x2, #0x2                   	// #2
    9c20:	add	x1, x1, #0x0
    9c24:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    9c28:	b	9bb0 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x2f0>
    9c2c:	mov	x2, #0x2                   	// #2
    9c30:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9c34:	add	x1, x1, #0x0
    9c38:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    9c3c:	mov	x2, x0
    9c40:	b	9b7c <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x2bc>
    9c44:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9c48:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9c4c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9c50:	add	x3, x3, #0x0
    9c54:	add	x1, x1, #0x0
    9c58:	add	x0, x0, #0x0
    9c5c:	mov	w2, #0xa7                  	// #167
    9c60:	bl	0 <__assert_fail>
    9c64:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9c68:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9c6c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9c70:	add	x3, x3, #0x0
    9c74:	add	x1, x1, #0x0
    9c78:	add	x0, x0, #0x0
    9c7c:	mov	w2, #0x43                  	// #67
    9c80:	bl	0 <__assert_fail>
    9c84:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9c88:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9c8c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9c90:	add	x3, x3, #0x0
    9c94:	add	x1, x1, #0x0
    9c98:	add	x0, x0, #0x0
    9c9c:	mov	w2, #0x95e                 	// #2398
    9ca0:	bl	0 <__assert_fail>
    9ca4:	nop

0000000000009ca8 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb>:
    9ca8:	stp	x29, x30, [sp, #-80]!
    9cac:	add	x4, x8, #0x28
    9cb0:	mov	x3, #0x400000000           	// #17179869184
    9cb4:	mov	x29, sp
    9cb8:	stp	x19, x20, [sp, #16]
    9cbc:	mov	x19, x8
    9cc0:	mov	x20, x0
    9cc4:	stp	x21, x22, [sp, #32]
    9cc8:	mov	x21, x1
    9ccc:	and	w22, w2, #0xff
    9cd0:	stp	xzr, xzr, [x8]
    9cd4:	stp	xzr, x4, [x8, #16]
    9cd8:	str	x3, [x8, #32]
    9cdc:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    9ce0:	str	x0, [x19]
    9ce4:	mov	x0, x20
    9ce8:	cbz	w22, 9d24 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0x7c>
    9cec:	bl	4898 <_ZN4llvm8TGParser17ParseMultiClassIDEv>
    9cf0:	cbz	x0, 9dc0 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0x118>
    9cf4:	str	x0, [x19, #16]
    9cf8:	ldr	w0, [x20, #40]
    9cfc:	cmp	w0, #0xa
    9d00:	b.eq	9d3c <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0x94>  // b.none
    9d04:	mov	x0, x20
    9d08:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    9d0c:	str	x0, [x19, #8]
    9d10:	mov	x0, x19
    9d14:	ldp	x19, x20, [sp, #16]
    9d18:	ldp	x21, x22, [sp, #32]
    9d1c:	ldp	x29, x30, [sp], #80
    9d20:	ret
    9d24:	bl	3fb0 <_ZN4llvm8TGParser12ParseClassIDEv>
    9d28:	str	x0, [x19, #16]
    9d2c:	cbz	x0, 9d10 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0x68>
    9d30:	ldr	w0, [x20, #40]
    9d34:	cmp	w0, #0xa
    9d38:	b.ne	9d04 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0x5c>  // b.any
    9d3c:	ldp	x2, x1, [x20, #8]
    9d40:	mov	x0, x20
    9d44:	cmp	x2, x1
    9d48:	cset	w1, eq  // eq = none
    9d4c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    9d50:	str	w0, [x20, #40]
    9d54:	cmp	w0, #0xb
    9d58:	b.eq	9dcc <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0x124>  // b.none
    9d5c:	ldr	x3, [x19, #16]
    9d60:	mov	x0, x20
    9d64:	mov	x2, x21
    9d68:	add	x1, x19, #0x18
    9d6c:	mov	x4, #0x0                   	// #0
    9d70:	bl	98c0 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE>
    9d74:	ldr	w0, [x19, #32]
    9d78:	cbz	w0, 9da8 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0x100>
    9d7c:	ldr	w0, [x20, #40]
    9d80:	cmp	w0, #0xb
    9d84:	b.eq	9de0 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0x138>  // b.none
    9d88:	add	x21, sp, #0x38
    9d8c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9d90:	mov	x0, x21
    9d94:	add	x1, x1, #0x0
    9d98:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9d9c:	mov	x1, x21
    9da0:	mov	x0, x20
    9da4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9da8:	str	xzr, [x19, #16]
    9dac:	mov	x0, x19
    9db0:	ldp	x19, x20, [sp, #16]
    9db4:	ldp	x21, x22, [sp, #32]
    9db8:	ldp	x29, x30, [sp], #80
    9dbc:	ret
    9dc0:	ldr	x0, [x19, #16]
    9dc4:	cbnz	x0, 9d30 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0x88>
    9dc8:	b	9d10 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0x68>
    9dcc:	add	x21, sp, #0x38
    9dd0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9dd4:	mov	x0, x21
    9dd8:	add	x1, x1, #0x0
    9ddc:	b	9d98 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0xf0>
    9de0:	ldp	x2, x1, [x20, #8]
    9de4:	mov	x0, x20
    9de8:	cmp	x2, x1
    9dec:	cset	w1, eq  // eq = none
    9df0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    9df4:	str	w0, [x20, #40]
    9df8:	b	9d04 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0x5c>
    9dfc:	nop

0000000000009e00 <_ZN4llvm8TGParser27ParseSubMultiClassReferenceEPNS_10MultiClassE>:
    9e00:	stp	x29, x30, [sp, #-80]!
    9e04:	add	x4, x8, #0x28
    9e08:	mov	x3, #0x400000000           	// #17179869184
    9e0c:	mov	x29, sp
    9e10:	stp	x19, x20, [sp, #16]
    9e14:	mov	x19, x8
    9e18:	mov	x20, x0
    9e1c:	str	x21, [sp, #32]
    9e20:	mov	x21, x1
    9e24:	stp	xzr, xzr, [x8]
    9e28:	stp	xzr, x4, [x8, #16]
    9e2c:	str	x3, [x8, #32]
    9e30:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    9e34:	str	x0, [x19]
    9e38:	mov	x0, x20
    9e3c:	bl	4898 <_ZN4llvm8TGParser17ParseMultiClassIDEv>
    9e40:	str	x0, [x19, #16]
    9e44:	cbz	x0, 9e60 <_ZN4llvm8TGParser27ParseSubMultiClassReferenceEPNS_10MultiClassE+0x60>
    9e48:	ldr	w0, [x20, #40]
    9e4c:	cmp	w0, #0xa
    9e50:	b.eq	9e74 <_ZN4llvm8TGParser27ParseSubMultiClassReferenceEPNS_10MultiClassE+0x74>  // b.none
    9e54:	mov	x0, x20
    9e58:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    9e5c:	str	x0, [x19, #8]
    9e60:	mov	x0, x19
    9e64:	ldp	x19, x20, [sp, #16]
    9e68:	ldr	x21, [sp, #32]
    9e6c:	ldp	x29, x30, [sp], #80
    9e70:	ret
    9e74:	ldp	x2, x1, [x20, #8]
    9e78:	mov	x0, x20
    9e7c:	cmp	x2, x1
    9e80:	cset	w1, eq  // eq = none
    9e84:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    9e88:	str	w0, [x20, #40]
    9e8c:	cmp	w0, #0xb
    9e90:	b.eq	9ef8 <_ZN4llvm8TGParser27ParseSubMultiClassReferenceEPNS_10MultiClassE+0xf8>  // b.none
    9e94:	ldr	x3, [x19, #16]
    9e98:	mov	x0, x20
    9e9c:	mov	x2, x21
    9ea0:	add	x1, x19, #0x18
    9ea4:	mov	x4, #0x0                   	// #0
    9ea8:	bl	98c0 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE>
    9eac:	ldr	w0, [x19, #32]
    9eb0:	cbz	w0, 9ee0 <_ZN4llvm8TGParser27ParseSubMultiClassReferenceEPNS_10MultiClassE+0xe0>
    9eb4:	ldr	w0, [x20, #40]
    9eb8:	cmp	w0, #0xb
    9ebc:	b.eq	9f0c <_ZN4llvm8TGParser27ParseSubMultiClassReferenceEPNS_10MultiClassE+0x10c>  // b.none
    9ec0:	add	x21, sp, #0x38
    9ec4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9ec8:	mov	x0, x21
    9ecc:	add	x1, x1, #0x0
    9ed0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9ed4:	mov	x1, x21
    9ed8:	mov	x0, x20
    9edc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9ee0:	str	xzr, [x19, #16]
    9ee4:	mov	x0, x19
    9ee8:	ldp	x19, x20, [sp, #16]
    9eec:	ldr	x21, [sp, #32]
    9ef0:	ldp	x29, x30, [sp], #80
    9ef4:	ret
    9ef8:	add	x21, sp, #0x38
    9efc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9f00:	mov	x0, x21
    9f04:	add	x1, x1, #0x0
    9f08:	b	9ed0 <_ZN4llvm8TGParser27ParseSubMultiClassReferenceEPNS_10MultiClassE+0xd0>
    9f0c:	ldp	x2, x1, [x20, #8]
    9f10:	mov	x0, x20
    9f14:	cmp	x2, x1
    9f18:	cset	w1, eq  // eq = none
    9f1c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    9f20:	str	w0, [x20, #40]
    9f24:	b	9e54 <_ZN4llvm8TGParser27ParseSubMultiClassReferenceEPNS_10MultiClassE+0x54>

0000000000009f28 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE>:
    9f28:	stp	x29, x30, [sp, #-368]!
    9f2c:	mov	x29, sp
    9f30:	stp	x19, x20, [sp, #16]
    9f34:	mov	x19, x0
    9f38:	ldr	w0, [x0, #40]
    9f3c:	stp	x21, x22, [sp, #32]
    9f40:	cmp	w0, #0x48
    9f44:	b.ne	a1ac <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x284>  // b.any
    9f48:	mov	x20, x1
    9f4c:	ldp	x0, x1, [x19, #48]
    9f50:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    9f54:	mov	x22, x0
    9f58:	ldp	x1, x2, [x19, #8]
    9f5c:	mov	x0, x19
    9f60:	cmp	x2, x1
    9f64:	cset	w1, eq  // eq = none
    9f68:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    9f6c:	str	w0, [x19, #40]
    9f70:	cmp	w0, #0x10
    9f74:	b.ne	a1f8 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x2d0>  // b.any
    9f78:	ldp	x1, x2, [x19, #8]
    9f7c:	mov	x0, x19
    9f80:	add	x21, sp, #0x120
    9f84:	cmp	x2, x1
    9f88:	cset	w1, eq  // eq = none
    9f8c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    9f90:	str	w0, [x19, #40]
    9f94:	add	x2, x21, #0x10
    9f98:	mov	x1, #0x1000000000          	// #68719476736
    9f9c:	stp	x2, x1, [sp, #288]
    9fa0:	cmp	w0, #0x6
    9fa4:	b.eq	a230 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x308>  // b.none
    9fa8:	mov	x0, x19
    9fac:	stp	x23, x24, [sp, #48]
    9fb0:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    9fb4:	mov	x2, #0x0                   	// #0
    9fb8:	mov	x23, x0
    9fbc:	mov	w3, #0x0                   	// #0
    9fc0:	mov	x0, x19
    9fc4:	mov	x1, #0x0                   	// #0
    9fc8:	bl	5fb0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    9fcc:	mov	x2, x0
    9fd0:	cbz	x0, a17c <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x254>
    9fd4:	ldrb	w1, [x0, #8]
    9fd8:	sub	w1, w1, #0x1
    9fdc:	and	w1, w1, #0xff
    9fe0:	cmp	w1, #0x16
    9fe4:	b.ls	a288 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x360>  // b.plast
    9fe8:	strb	wzr, [sp, #144]
    9fec:	add	x22, sp, #0x80
    9ff0:	add	x3, x22, #0x10
    9ff4:	add	x20, sp, #0xa0
    9ff8:	ldr	x1, [x0]
    9ffc:	mov	x8, x20
    a000:	stp	x25, x26, [sp, #64]
    a004:	add	x24, sp, #0xc0
    a008:	ldr	x1, [x1, #40]
    a00c:	str	x27, [sp, #80]
    a010:	stp	x3, xzr, [sp, #128]
    a014:	blr	x1
    a018:	mov	x2, #0x0                   	// #0
    a01c:	mov	x1, #0x0                   	// #0
    a020:	mov	x0, x20
    a024:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a028:	mov	x4, #0x16                  	// #22
    a02c:	add	x3, x3, #0x0
    a030:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    a034:	mov	x2, x0
    a038:	add	x1, x24, #0x10
    a03c:	str	x1, [sp, #192]
    a040:	ldr	x1, [x0], #16
    a044:	cmp	x1, x0
    a048:	b.eq	a3f0 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x4c8>  // b.none
    a04c:	ldr	x3, [x2, #16]
    a050:	str	x1, [sp, #192]
    a054:	str	x3, [sp, #208]
    a058:	ldr	x1, [x2, #8]
    a05c:	str	x1, [sp, #200]
    a060:	stp	x0, xzr, [x2]
    a064:	add	x25, sp, #0xe0
    a068:	mov	x0, x24
    a06c:	strb	wzr, [x2, #16]
    a070:	ldp	x1, x2, [sp, #128]
    a074:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    a078:	mov	x1, x0
    a07c:	add	x2, x25, #0x10
    a080:	str	x2, [sp, #224]
    a084:	ldr	x2, [x1], #16
    a088:	cmp	x2, x1
    a08c:	b.eq	a3e4 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x4bc>  // b.none
    a090:	str	x2, [sp, #224]
    a094:	ldr	x2, [x0, #16]
    a098:	str	x2, [sp, #240]
    a09c:	ldr	x2, [x0, #8]
    a0a0:	add	x26, sp, #0x100
    a0a4:	str	x2, [sp, #232]
    a0a8:	mov	x8, x26
    a0ac:	stp	x1, xzr, [x0]
    a0b0:	add	x27, sp, #0x68
    a0b4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a0b8:	strb	wzr, [x0, #16]
    a0bc:	add	x1, x1, #0x0
    a0c0:	mov	x0, x25
    a0c4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a0c8:	mov	x1, x26
    a0cc:	mov	x0, x27
    a0d0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a0d4:	str	x23, [sp, #96]
    a0d8:	add	x0, sp, #0x60
    a0dc:	mov	x1, #0x1                   	// #1
    a0e0:	mov	x2, x27
    a0e4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    a0e8:	ldr	x0, [sp, #256]
    a0ec:	add	x1, x26, #0x10
    a0f0:	cmp	x0, x1
    a0f4:	b.eq	a0fc <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x1d4>  // b.none
    a0f8:	bl	0 <_ZdlPv>
    a0fc:	ldr	x0, [sp, #224]
    a100:	add	x25, x25, #0x10
    a104:	cmp	x0, x25
    a108:	b.eq	a110 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x1e8>  // b.none
    a10c:	bl	0 <_ZdlPv>
    a110:	ldr	x0, [sp, #192]
    a114:	add	x24, x24, #0x10
    a118:	cmp	x0, x24
    a11c:	b.eq	a124 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x1fc>  // b.none
    a120:	bl	0 <_ZdlPv>
    a124:	ldr	x0, [sp, #160]
    a128:	add	x20, x20, #0x10
    a12c:	cmp	x0, x20
    a130:	b.eq	a138 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x210>  // b.none
    a134:	bl	0 <_ZdlPv>
    a138:	ldr	x0, [x19, #328]
    a13c:	cbz	x0, a160 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x238>
    a140:	mov	x0, x26
    a144:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a148:	add	x1, x1, #0x0
    a14c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a150:	mov	x2, x26
    a154:	mov	x0, #0x0                   	// #0
    a158:	mov	x1, #0x0                   	// #0
    a15c:	bl	0 <_ZN4llvm9PrintNoteENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    a160:	ldr	x0, [sp, #128]
    a164:	add	x22, x22, #0x10
    a168:	cmp	x0, x22
    a16c:	b.eq	a39c <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x474>  // b.none
    a170:	bl	0 <_ZdlPv>
    a174:	ldp	x25, x26, [sp, #64]
    a178:	ldr	x27, [sp, #80]
    a17c:	mov	x20, #0x0                   	// #0
    a180:	ldp	x23, x24, [sp, #48]
    a184:	add	x21, x21, #0x10
    a188:	ldr	x0, [sp, #288]
    a18c:	cmp	x0, x21
    a190:	b.eq	a1e4 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x2bc>  // b.none
    a194:	bl	0 <free>
    a198:	mov	x0, x20
    a19c:	ldp	x19, x20, [sp, #16]
    a1a0:	ldp	x21, x22, [sp, #32]
    a1a4:	ldp	x29, x30, [sp], #368
    a1a8:	ret
    a1ac:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a1b0:	add	x1, x1, #0x0
    a1b4:	add	x21, sp, #0x120
    a1b8:	mov	x20, #0x0                   	// #0
    a1bc:	mov	x0, x21
    a1c0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a1c4:	mov	x0, x19
    a1c8:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    a1cc:	mov	x3, x0
    a1d0:	mov	x2, x21
    a1d4:	add	x0, sp, #0x100
    a1d8:	mov	x1, #0x1                   	// #1
    a1dc:	str	x3, [sp, #256]
    a1e0:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    a1e4:	mov	x0, x20
    a1e8:	ldp	x19, x20, [sp, #16]
    a1ec:	ldp	x21, x22, [sp, #32]
    a1f0:	ldp	x29, x30, [sp], #368
    a1f4:	ret
    a1f8:	add	x21, sp, #0x120
    a1fc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a200:	mov	x0, x21
    a204:	add	x1, x1, #0x0
    a208:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a20c:	mov	x20, #0x0                   	// #0
    a210:	mov	x1, x21
    a214:	mov	x0, x19
    a218:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a21c:	mov	x0, x20
    a220:	ldp	x19, x20, [sp, #16]
    a224:	ldp	x21, x22, [sp, #32]
    a228:	ldp	x29, x30, [sp], #368
    a22c:	ret
    a230:	ldp	x2, x1, [x19, #8]
    a234:	mov	x0, x19
    a238:	cmp	x2, x1
    a23c:	cset	w1, eq  // eq = none
    a240:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    a244:	str	w0, [x19, #40]
    a248:	mov	x1, x21
    a24c:	mov	x0, x19
    a250:	bl	69d8 <_ZN4llvm8TGParser14ParseRangeListERNS_15SmallVectorImplIjEE>
    a254:	ldr	w0, [x19, #40]
    a258:	cmp	w0, #0x7
    a25c:	b.eq	a364 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x43c>  // b.none
    a260:	add	x22, sp, #0x100
    a264:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a268:	mov	x0, x22
    a26c:	add	x1, x1, #0x0
    a270:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a274:	mov	x20, #0x0                   	// #0
    a278:	mov	x1, x22
    a27c:	mov	x0, x19
    a280:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a284:	b	a184 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x25c>
    a288:	ldr	x0, [x0, #16]
    a28c:	cbz	x0, a3fc <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x4d4>
    a290:	ldr	w1, [x0, #8]
    a294:	cmp	w1, #0x5
    a298:	b.eq	a3a8 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x480>  // b.none
    a29c:	mov	x0, x19
    a2a0:	mov	x1, x21
    a2a4:	bl	6710 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE>
    a2a8:	tst	w0, #0xff
    a2ac:	b.ne	a17c <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x254>  // b.any
    a2b0:	ldr	w3, [sp, #296]
    a2b4:	cbz	w3, a390 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x468>
    a2b8:	ldr	x19, [sp, #288]
    a2bc:	add	x24, sp, #0xe0
    a2c0:	add	x23, sp, #0x100
    a2c4:	stp	x25, x26, [sp, #64]
    a2c8:	mov	x25, x19
    a2cc:	add	x19, x19, w3, uxtw #2
    a2d0:	stp	xzr, xzr, [sp, #256]
    a2d4:	str	xzr, [sp, #272]
    a2d8:	b	a2f0 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x3c8>
    a2dc:	str	x0, [x2], #8
    a2e0:	str	x2, [sp, #264]
    a2e4:	add	x25, x25, #0x4
    a2e8:	cmp	x19, x25
    a2ec:	b.eq	a31c <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x3f4>  // b.none
    a2f0:	ldr	w0, [x25]
    a2f4:	bl	0 <_ZN4llvm7IntInit3getEl>
    a2f8:	str	x0, [sp, #224]
    a2fc:	ldp	x2, x1, [sp, #264]
    a300:	cmp	x2, x1
    a304:	b.ne	a2dc <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x3b4>  // b.any
    a308:	mov	x1, x2
    a30c:	mov	x0, x23
    a310:	mov	x2, x24
    a314:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a318:	b	a2e4 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x3bc>
    a31c:	ldp	x0, x1, [sp, #256]
    a320:	adrp	x19, 0 <_ZN4llvm8IntRecTy6SharedE>
    a324:	ldr	x2, [x19]
    a328:	sub	x1, x1, x0
    a32c:	asr	x1, x1, #3
    a330:	bl	0 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    a334:	ldr	x1, [sp, #256]
    a338:	str	x0, [x20]
    a33c:	cbz	x1, a348 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x420>
    a340:	mov	x0, x1
    a344:	bl	0 <_ZdlPv>
    a348:	ldp	x25, x26, [sp, #64]
    a34c:	ldr	x1, [x19]
    a350:	mov	x0, x22
    a354:	bl	0 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE>
    a358:	mov	x20, x0
    a35c:	ldp	x23, x24, [sp, #48]
    a360:	b	a184 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x25c>
    a364:	ldp	x2, x1, [x19, #8]
    a368:	mov	x0, x19
    a36c:	cmp	x2, x1
    a370:	cset	w1, eq  // eq = none
    a374:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    a378:	str	w0, [x19, #40]
    a37c:	ldr	w3, [sp, #296]
    a380:	cbz	w3, a394 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x46c>
    a384:	stp	x23, x24, [sp, #48]
    a388:	b	a2b8 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x390>
    a38c:	cbnz	x1, a350 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x428>
    a390:	ldp	x23, x24, [sp, #48]
    a394:	mov	x20, #0x0                   	// #0
    a398:	b	a184 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x25c>
    a39c:	ldp	x25, x26, [sp, #64]
    a3a0:	ldr	x27, [sp, #80]
    a3a4:	b	a17c <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x254>
    a3a8:	ldr	w3, [sp, #296]
    a3ac:	ldr	x1, [x0, #24]
    a3b0:	str	x2, [x20]
    a3b4:	cbz	w3, a38c <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x464>
    a3b8:	cbz	x1, a2b8 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x390>
    a3bc:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a3c0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a3c4:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a3c8:	add	x3, x3, #0x0
    a3cc:	add	x1, x1, #0x0
    a3d0:	add	x0, x0, #0x0
    a3d4:	mov	w2, #0x9f2                 	// #2546
    a3d8:	stp	x25, x26, [sp, #64]
    a3dc:	str	x27, [sp, #80]
    a3e0:	bl	0 <__assert_fail>
    a3e4:	ldp	x2, x3, [x0, #16]
    a3e8:	stp	x2, x3, [sp, #240]
    a3ec:	b	a09c <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x174>
    a3f0:	ldp	x4, x5, [x2, #16]
    a3f4:	stp	x4, x5, [sp, #208]
    a3f8:	b	a058 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x130>
    a3fc:	stp	x25, x26, [sp, #64]
    a400:	str	x27, [sp, #80]
    a404:	bl	78 <_ZN4llvm3isaINS_9ListRecTyEPNS_5RecTyEEEbRKT0_.isra.0.part.0>

000000000000a408 <_ZN4llvm8TGParser11ParseDefvarEv>:
    a408:	stp	x29, x30, [sp, #-112]!
    a40c:	mov	x29, sp
    a410:	ldr	w1, [x0, #40]
    a414:	stp	x19, x20, [sp, #16]
    a418:	cmp	w1, #0x23
    a41c:	b.ne	a6f8 <_ZN4llvm8TGParser11ParseDefvarEv+0x2f0>  // b.any
    a420:	ldp	x1, x2, [x0, #8]
    a424:	mov	x19, x0
    a428:	cmp	x2, x1
    a42c:	cset	w1, eq  // eq = none
    a430:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    a434:	str	w0, [x19, #40]
    a438:	cmp	w0, #0x48
    a43c:	b.eq	a484 <_ZN4llvm8TGParser11ParseDefvarEv+0x7c>  // b.none
    a440:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a444:	add	x1, x1, #0x0
    a448:	add	x20, sp, #0x58
    a44c:	mov	x0, x20
    a450:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a454:	mov	x0, x19
    a458:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    a45c:	mov	x3, x0
    a460:	mov	x2, x20
    a464:	add	x0, sp, #0x50
    a468:	mov	x1, #0x1                   	// #1
    a46c:	str	x3, [sp, #80]
    a470:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    a474:	mov	w0, #0x1                   	// #1
    a478:	ldp	x19, x20, [sp, #16]
    a47c:	ldp	x29, x30, [sp], #112
    a480:	ret
    a484:	ldp	x0, x1, [x19, #48]
    a488:	stp	x23, x24, [sp, #48]
    a48c:	stp	x25, x26, [sp, #64]
    a490:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    a494:	mov	x25, x0
    a498:	ldr	x23, [x19, #336]
    a49c:	cbz	x23, a600 <_ZN4llvm8TGParser11ParseDefvarEv+0x1f8>
    a4a0:	ldr	x20, [x23, #16]
    a4a4:	stp	x21, x22, [sp, #32]
    a4a8:	add	x23, x23, #0x8
    a4ac:	ldp	x26, x22, [x0, #24]
    a4b0:	cbz	x20, a528 <_ZN4llvm8TGParser11ParseDefvarEv+0x120>
    a4b4:	mov	x24, x23
    a4b8:	ldp	x0, x21, [x20, #32]
    a4bc:	cmp	x22, x21
    a4c0:	b.cc	a584 <_ZN4llvm8TGParser11ParseDefvarEv+0x17c>  // b.lo, b.ul, b.last
    a4c4:	cbz	x21, a4d8 <_ZN4llvm8TGParser11ParseDefvarEv+0xd0>
    a4c8:	mov	x2, x21
    a4cc:	mov	x1, x26
    a4d0:	bl	0 <memcmp>
    a4d4:	cbnz	w0, a598 <_ZN4llvm8TGParser11ParseDefvarEv+0x190>
    a4d8:	cmp	x22, x21
    a4dc:	b.eq	a59c <_ZN4llvm8TGParser11ParseDefvarEv+0x194>  // b.none
    a4e0:	cmp	x22, x21
    a4e4:	b.ls	a59c <_ZN4llvm8TGParser11ParseDefvarEv+0x194>  // b.plast
    a4e8:	ldr	x20, [x20, #24]
    a4ec:	cbnz	x20, a4b8 <_ZN4llvm8TGParser11ParseDefvarEv+0xb0>
    a4f0:	cmp	x23, x24
    a4f4:	b.eq	a528 <_ZN4llvm8TGParser11ParseDefvarEv+0x120>  // b.none
    a4f8:	ldp	x1, x20, [x24, #32]
    a4fc:	cmp	x22, x20
    a500:	b.hi	a5ac <_ZN4llvm8TGParser11ParseDefvarEv+0x1a4>  // b.pmore
    a504:	cbz	x22, a518 <_ZN4llvm8TGParser11ParseDefvarEv+0x110>
    a508:	mov	x0, x26
    a50c:	mov	x2, x22
    a510:	bl	0 <memcmp>
    a514:	cbnz	w0, a5c0 <_ZN4llvm8TGParser11ParseDefvarEv+0x1b8>
    a518:	cmp	x22, x20
    a51c:	b.eq	a5c4 <_ZN4llvm8TGParser11ParseDefvarEv+0x1bc>  // b.none
    a520:	cmp	x22, x20
    a524:	b.cs	a5c4 <_ZN4llvm8TGParser11ParseDefvarEv+0x1bc>  // b.hs, b.nlast
    a528:	ldp	x21, x22, [sp, #32]
    a52c:	mov	x0, x19
    a530:	ldp	x2, x1, [x19, #8]
    a534:	cmp	x2, x1
    a538:	cset	w1, eq  // eq = none
    a53c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    a540:	str	w0, [x19, #40]
    a544:	cmp	w0, #0x10
    a548:	b.eq	a624 <_ZN4llvm8TGParser11ParseDefvarEv+0x21c>  // b.none
    a54c:	add	x20, sp, #0x58
    a550:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a554:	mov	x0, x20
    a558:	add	x1, x1, #0x0
    a55c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a560:	mov	x1, x20
    a564:	mov	x0, x19
    a568:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a56c:	and	w0, w0, #0xff
    a570:	ldp	x19, x20, [sp, #16]
    a574:	ldp	x23, x24, [sp, #48]
    a578:	ldp	x25, x26, [sp, #64]
    a57c:	ldp	x29, x30, [sp], #112
    a580:	ret
    a584:	cbz	x22, a59c <_ZN4llvm8TGParser11ParseDefvarEv+0x194>
    a588:	mov	x2, x22
    a58c:	mov	x1, x26
    a590:	bl	0 <memcmp>
    a594:	cbz	w0, a4e0 <_ZN4llvm8TGParser11ParseDefvarEv+0xd8>
    a598:	tbnz	w0, #31, a4e8 <_ZN4llvm8TGParser11ParseDefvarEv+0xe0>
    a59c:	mov	x24, x20
    a5a0:	ldr	x20, [x20, #16]
    a5a4:	cbnz	x20, a4b8 <_ZN4llvm8TGParser11ParseDefvarEv+0xb0>
    a5a8:	b	a4f0 <_ZN4llvm8TGParser11ParseDefvarEv+0xe8>
    a5ac:	cbz	x20, a5c4 <_ZN4llvm8TGParser11ParseDefvarEv+0x1bc>
    a5b0:	mov	x0, x26
    a5b4:	mov	x2, x20
    a5b8:	bl	0 <memcmp>
    a5bc:	cbz	w0, a520 <_ZN4llvm8TGParser11ParseDefvarEv+0x118>
    a5c0:	tbnz	w0, #31, a528 <_ZN4llvm8TGParser11ParseDefvarEv+0x120>
    a5c4:	add	x20, sp, #0x58
    a5c8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a5cc:	mov	x0, x20
    a5d0:	add	x1, x1, #0x0
    a5d4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a5d8:	mov	x1, x20
    a5dc:	mov	x0, x19
    a5e0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a5e4:	and	w0, w0, #0xff
    a5e8:	ldp	x19, x20, [sp, #16]
    a5ec:	ldp	x21, x22, [sp, #32]
    a5f0:	ldp	x23, x24, [sp, #48]
    a5f4:	ldp	x25, x26, [sp, #64]
    a5f8:	ldp	x29, x30, [sp], #112
    a5fc:	ret
    a600:	ldp	x1, x2, [x25, #24]
    a604:	ldr	x0, [x19, #344]
    a608:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a60c:	cbz	x0, a52c <_ZN4llvm8TGParser11ParseDefvarEv+0x124>
    a610:	add	x20, sp, #0x58
    a614:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a618:	mov	x0, x20
    a61c:	add	x1, x1, #0x0
    a620:	b	a55c <_ZN4llvm8TGParser11ParseDefvarEv+0x154>
    a624:	ldp	x2, x1, [x19, #8]
    a628:	mov	x0, x19
    a62c:	cmp	x2, x1
    a630:	cset	w1, eq  // eq = none
    a634:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    a638:	str	w0, [x19, #40]
    a63c:	mov	w3, #0x0                   	// #0
    a640:	mov	x0, x19
    a644:	mov	x2, #0x0                   	// #0
    a648:	mov	x1, #0x0                   	// #0
    a64c:	bl	5fb0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    a650:	mov	x20, x0
    a654:	cbz	x0, a678 <_ZN4llvm8TGParser11ParseDefvarEv+0x270>
    a658:	ldr	w0, [x19, #40]
    a65c:	cmp	w0, #0xd
    a660:	b.eq	a688 <_ZN4llvm8TGParser11ParseDefvarEv+0x280>  // b.none
    a664:	add	x20, sp, #0x58
    a668:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a66c:	mov	x0, x20
    a670:	add	x1, x1, #0x0
    a674:	b	a55c <_ZN4llvm8TGParser11ParseDefvarEv+0x154>
    a678:	mov	w0, #0x1                   	// #1
    a67c:	ldp	x23, x24, [sp, #48]
    a680:	ldp	x25, x26, [sp, #64]
    a684:	b	a478 <_ZN4llvm8TGParser11ParseDefvarEv+0x70>
    a688:	ldp	x2, x1, [x19, #8]
    a68c:	mov	x0, x19
    a690:	cmp	x2, x1
    a694:	cset	w1, eq  // eq = none
    a698:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    a69c:	str	w0, [x19, #40]
    a6a0:	ldr	x1, [x19, #336]
    a6a4:	cbz	x1, a6d8 <_ZN4llvm8TGParser11ParseDefvarEv+0x2d0>
    a6a8:	ldp	x3, x2, [x25, #24]
    a6ac:	mov	x0, x1
    a6b0:	add	x1, sp, #0x58
    a6b4:	stp	x3, x2, [sp, #88]
    a6b8:	str	x20, [sp, #104]
    a6bc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a6c0:	tst	w1, #0xff
    a6c4:	mov	w0, #0x0                   	// #0
    a6c8:	b.eq	a724 <_ZN4llvm8TGParser11ParseDefvarEv+0x31c>  // b.none
    a6cc:	ldp	x23, x24, [sp, #48]
    a6d0:	ldp	x25, x26, [sp, #64]
    a6d4:	b	a478 <_ZN4llvm8TGParser11ParseDefvarEv+0x70>
    a6d8:	ldp	x1, x2, [x25, #24]
    a6dc:	mov	x3, x20
    a6e0:	ldr	x0, [x19, #344]
    a6e4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a6e8:	mov	w0, #0x0                   	// #0
    a6ec:	ldp	x23, x24, [sp, #48]
    a6f0:	ldp	x25, x26, [sp, #64]
    a6f4:	b	a478 <_ZN4llvm8TGParser11ParseDefvarEv+0x70>
    a6f8:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a6fc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a700:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a704:	add	x3, x3, #0x0
    a708:	add	x1, x1, #0x0
    a70c:	add	x0, x0, #0x0
    a710:	mov	w2, #0xb09                 	// #2825
    a714:	stp	x21, x22, [sp, #32]
    a718:	stp	x23, x24, [sp, #48]
    a71c:	stp	x25, x26, [sp, #64]
    a720:	bl	0 <__assert_fail>
    a724:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a728:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a72c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a730:	add	x3, x3, #0x0
    a734:	add	x1, x1, #0x0
    a738:	add	x0, x0, #0x0
    a73c:	mov	w2, #0x75                  	// #117
    a740:	stp	x21, x22, [sp, #32]
    a744:	bl	0 <__assert_fail>

000000000000a748 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE>:
    a748:	stp	x29, x30, [sp, #-224]!
    a74c:	mov	x29, sp
    a750:	stp	x19, x20, [sp, #16]
    a754:	mov	x19, x1
    a758:	stp	x21, x22, [sp, #32]
    a75c:	stp	x23, x24, [sp, #48]
    a760:	add	x23, sp, #0x90
    a764:	stp	x25, x26, [sp, #64]
    a768:	mov	x26, x0
    a76c:	ldr	w0, [x0, #40]
    a770:	cmp	w0, #0x48
    a774:	b.ne	a934 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x1ec>  // b.any
    a778:	add	x22, x23, #0x10
    a77c:	stp	x27, x28, [sp, #80]
    a780:	ldp	x0, x1, [x26, #48]
    a784:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    a788:	mov	x21, x0
    a78c:	mov	x0, x26
    a790:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    a794:	ldp	x1, x2, [x26, #8]
    a798:	str	x0, [sp, #96]
    a79c:	mov	x0, x26
    a7a0:	cmp	x2, x1
    a7a4:	cset	w1, eq  // eq = none
    a7a8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    a7ac:	str	w0, [x26, #40]
    a7b0:	mov	x2, #0x1000000000          	// #68719476736
    a7b4:	mov	x1, x23
    a7b8:	mov	x0, x26
    a7bc:	stp	x22, x2, [sp, #144]
    a7c0:	bl	6a58 <_ZN4llvm8TGParser22ParseOptionalRangeListERNS_15SmallVectorImplIjEE>
    a7c4:	tst	w0, #0xff
    a7c8:	b.ne	a9c4 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x27c>  // b.any
    a7cc:	ldr	x1, [sp, #144]
    a7d0:	ldr	w2, [sp, #152]
    a7d4:	add	x2, x1, x2, lsl #2
    a7d8:	cmp	x1, x2
    a7dc:	b.eq	a808 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0xc0>  // b.none
    a7e0:	sub	x2, x2, #0x4
    a7e4:	cmp	x1, x2
    a7e8:	b.cs	a808 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0xc0>  // b.hs, b.nlast
    a7ec:	nop
    a7f0:	ldr	w3, [x2]
    a7f4:	ldr	w0, [x1]
    a7f8:	str	w3, [x1], #4
    a7fc:	str	w0, [x2], #-4
    a800:	cmp	x1, x2
    a804:	b.cc	a7f0 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0xa8>  // b.lo, b.ul, b.last
    a808:	ldr	w0, [x26, #40]
    a80c:	cmp	w0, #0x10
    a810:	b.ne	aa7c <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x334>  // b.any
    a814:	ldp	x2, x1, [x26, #8]
    a818:	mov	x0, x26
    a81c:	cmp	x2, x1
    a820:	cset	w1, eq  // eq = none
    a824:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    a828:	str	w0, [x26, #40]
    a82c:	mov	w3, #0x0                   	// #0
    a830:	mov	x0, x26
    a834:	mov	x2, #0x0                   	// #0
    a838:	mov	x1, #0x0                   	// #0
    a83c:	bl	5fb0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    a840:	mov	x24, x0
    a844:	cbz	x0, aa44 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x2fc>
    a848:	ldp	w27, w0, [x19, #8]
    a84c:	cmp	w27, w0
    a850:	b.cs	a9b0 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x268>  // b.hs, b.nlast
    a854:	mov	w0, #0x30                  	// #48
    a858:	ldr	w28, [sp, #152]
    a85c:	ldr	x2, [x19]
    a860:	umull	x0, w27, w0
    a864:	ldr	x1, [sp, #144]
    a868:	add	x25, x2, x0
    a86c:	add	x20, x25, #0x8
    a870:	str	x1, [sp, #104]
    a874:	str	x21, [x2, x0]
    a878:	mov	w5, w27
    a87c:	str	xzr, [x25, #8]
    a880:	ubfiz	x28, x28, #2, #32
    a884:	stp	xzr, xzr, [x20, #8]
    a888:	mov	x21, #0x0                   	// #0
    a88c:	cbz	x28, a8c0 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x178>
    a890:	mov	x0, x28
    a894:	bl	0 <_Znwm>
    a898:	ldr	w27, [x19, #8]
    a89c:	add	x21, x0, x28
    a8a0:	ldr	x1, [sp, #104]
    a8a4:	mov	w5, w27
    a8a8:	str	x0, [x25, #8]
    a8ac:	mov	x2, x28
    a8b0:	str	x21, [x20, #16]
    a8b4:	str	x5, [sp, #104]
    a8b8:	bl	0 <memcpy>
    a8bc:	ldr	x5, [sp, #104]
    a8c0:	add	x5, x5, #0x1
    a8c4:	ldr	w0, [x19, #12]
    a8c8:	str	x21, [x20, #8]
    a8cc:	ldr	x1, [sp, #96]
    a8d0:	stp	x24, x1, [x25, #32]
    a8d4:	cmp	x5, x0
    a8d8:	b.hi	aae8 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x3a0>  // b.pmore
    a8dc:	add	w27, w27, #0x1
    a8e0:	str	w27, [x19, #8]
    a8e4:	cbz	w27, ab08 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x3c0>
    a8e8:	ldr	w0, [x26, #40]
    a8ec:	cmp	w0, #0xe
    a8f0:	b.ne	a9f8 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x2b0>  // b.any
    a8f4:	ldp	x2, x1, [x26, #8]
    a8f8:	mov	x0, x26
    a8fc:	cmp	x2, x1
    a900:	cset	w1, eq  // eq = none
    a904:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    a908:	str	w0, [x26, #40]
    a90c:	ldr	x2, [sp, #144]
    a910:	mov	w1, w0
    a914:	cmp	x2, x22
    a918:	b.eq	a928 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x1e0>  // b.none
    a91c:	mov	x0, x2
    a920:	bl	0 <free>
    a924:	ldr	w1, [x26, #40]
    a928:	cmp	w1, #0x48
    a92c:	b.eq	a780 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x38>  // b.none
    a930:	ldp	x27, x28, [sp, #80]
    a934:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a938:	add	x1, x1, #0x0
    a93c:	mov	x0, x23
    a940:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a944:	mov	x0, x26
    a948:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    a94c:	mov	x3, x0
    a950:	mov	x2, x23
    a954:	add	x0, sp, #0x78
    a958:	mov	x1, #0x1                   	// #1
    a95c:	str	x3, [sp, #120]
    a960:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    a964:	ldr	w20, [x19, #8]
    a968:	ldr	x21, [x19]
    a96c:	mov	w0, #0x30                  	// #48
    a970:	umaddl	x20, w20, w0, x21
    a974:	cmp	x21, x20
    a978:	b.eq	a994 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x24c>  // b.none
    a97c:	ldur	x0, [x20, #-40]
    a980:	sub	x20, x20, #0x30
    a984:	cbz	x0, a974 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x22c>
    a988:	bl	0 <_ZdlPv>
    a98c:	cmp	x21, x20
    a990:	b.ne	a97c <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x234>  // b.any
    a994:	str	wzr, [x19, #8]
    a998:	ldp	x19, x20, [sp, #16]
    a99c:	ldp	x21, x22, [sp, #32]
    a9a0:	ldp	x23, x24, [sp, #48]
    a9a4:	ldp	x25, x26, [sp, #64]
    a9a8:	ldp	x29, x30, [sp], #224
    a9ac:	ret
    a9b0:	mov	x0, x19
    a9b4:	mov	x1, #0x0                   	// #0
    a9b8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a9bc:	ldr	w27, [x19, #8]
    a9c0:	b	a854 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x10c>
    a9c4:	ldr	w20, [x19, #8]
    a9c8:	mov	w0, #0x30                  	// #48
    a9cc:	ldr	x21, [x19]
    a9d0:	umaddl	x20, w20, w0, x21
    a9d4:	cmp	x21, x20
    a9d8:	b.eq	a9f4 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x2ac>  // b.none
    a9dc:	ldur	x0, [x20, #-40]
    a9e0:	sub	x20, x20, #0x30
    a9e4:	cbz	x0, a9d4 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x28c>
    a9e8:	bl	0 <_ZdlPv>
    a9ec:	cmp	x21, x20
    a9f0:	b.ne	a9dc <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x294>  // b.any
    a9f4:	str	wzr, [x19, #8]
    a9f8:	ldr	x0, [sp, #144]
    a9fc:	add	x23, x23, #0x10
    aa00:	cmp	x0, x23
    aa04:	b.eq	aa28 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x2e0>  // b.none
    aa08:	bl	0 <free>
    aa0c:	ldp	x19, x20, [sp, #16]
    aa10:	ldp	x21, x22, [sp, #32]
    aa14:	ldp	x23, x24, [sp, #48]
    aa18:	ldp	x25, x26, [sp, #64]
    aa1c:	ldp	x27, x28, [sp, #80]
    aa20:	ldp	x29, x30, [sp], #224
    aa24:	ret
    aa28:	ldp	x19, x20, [sp, #16]
    aa2c:	ldp	x21, x22, [sp, #32]
    aa30:	ldp	x23, x24, [sp, #48]
    aa34:	ldp	x25, x26, [sp, #64]
    aa38:	ldp	x27, x28, [sp, #80]
    aa3c:	ldp	x29, x30, [sp], #224
    aa40:	ret
    aa44:	ldr	w20, [x19, #8]
    aa48:	mov	w0, #0x30                  	// #48
    aa4c:	ldr	x21, [x19]
    aa50:	umaddl	x20, w20, w0, x21
    aa54:	cmp	x21, x20
    aa58:	b.eq	a9f4 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x2ac>  // b.none
    aa5c:	ldur	x0, [x20, #-40]
    aa60:	sub	x20, x20, #0x30
    aa64:	cbz	x0, aa54 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x30c>
    aa68:	bl	0 <_ZdlPv>
    aa6c:	cmp	x21, x20
    aa70:	b.ne	aa5c <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x314>  // b.any
    aa74:	str	wzr, [x19, #8]
    aa78:	b	a9f8 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x2b0>
    aa7c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    aa80:	add	x1, x1, #0x0
    aa84:	add	x20, sp, #0x78
    aa88:	mov	x0, x20
    aa8c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    aa90:	mov	x0, x26
    aa94:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    aa98:	mov	x3, x0
    aa9c:	mov	x2, x20
    aaa0:	add	x0, sp, #0x70
    aaa4:	mov	x1, #0x1                   	// #1
    aaa8:	str	x3, [sp, #112]
    aaac:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    aab0:	ldr	w20, [x19, #8]
    aab4:	ldr	x21, [x19]
    aab8:	mov	w0, #0x30                  	// #48
    aabc:	umaddl	x20, w20, w0, x21
    aac0:	cmp	x21, x20
    aac4:	b.eq	a9f4 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x2ac>  // b.none
    aac8:	ldur	x0, [x20, #-40]
    aacc:	sub	x20, x20, #0x30
    aad0:	cbz	x0, aac0 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x378>
    aad4:	bl	0 <_ZdlPv>
    aad8:	cmp	x21, x20
    aadc:	b.ne	aac8 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x380>  // b.any
    aae0:	str	wzr, [x19, #8]
    aae4:	b	a9f8 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x2b0>
    aae8:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    aaec:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    aaf0:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    aaf4:	add	x3, x3, #0x0
    aaf8:	add	x1, x1, #0x0
    aafc:	add	x0, x0, #0x0
    ab00:	mov	w2, #0x43                  	// #67
    ab04:	bl	0 <__assert_fail>
    ab08:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ab0c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ab10:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ab14:	add	x3, x3, #0x0
    ab18:	add	x1, x1, #0x0
    ab1c:	add	x0, x0, #0x0
    ab20:	mov	w2, #0xa7                  	// #167
    ab24:	bl	0 <__assert_fail>

000000000000ab28 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0>:
    ab28:	stp	x29, x30, [sp, #-240]!
    ab2c:	mov	x29, sp
    ab30:	stp	x19, x20, [sp, #16]
    ab34:	mov	x20, x1
    ab38:	mov	x19, x0
    ab3c:	ldp	x2, x1, [x0, #8]
    ab40:	stp	x21, x22, [sp, #32]
    ab44:	cmp	x2, x1
    ab48:	cset	w1, eq  // eq = none
    ab4c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    ab50:	str	w0, [x19, #40]
    ab54:	cmp	w0, #0x48
    ab58:	b.eq	aba8 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x80>  // b.none
    ab5c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ab60:	add	x1, x1, #0x0
    ab64:	add	x20, sp, #0xa0
    ab68:	mov	w22, #0x1                   	// #1
    ab6c:	mov	x0, x20
    ab70:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ab74:	mov	x0, x19
    ab78:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    ab7c:	mov	x3, x0
    ab80:	mov	x2, x20
    ab84:	add	x0, sp, #0x88
    ab88:	mov	x1, #0x1                   	// #1
    ab8c:	str	x3, [sp, #136]
    ab90:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    ab94:	mov	w0, w22
    ab98:	ldp	x19, x20, [sp, #16]
    ab9c:	ldp	x21, x22, [sp, #32]
    aba0:	ldp	x29, x30, [sp], #240
    aba4:	ret
    aba8:	mov	x0, x19
    abac:	stp	x23, x24, [sp, #48]
    abb0:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    abb4:	ldr	w1, [x19, #40]
    abb8:	mov	x22, x0
    abbc:	sub	w1, w1, #0x48
    abc0:	cmp	w1, #0x3
    abc4:	b.hi	adfc <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x2d4>  // b.pmore
    abc8:	ldp	x0, x1, [x19, #48]
    abcc:	add	x21, sp, #0xa0
    abd0:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    abd4:	mov	x23, x0
    abd8:	ldp	x2, x1, [x19, #8]
    abdc:	mov	x0, x19
    abe0:	cmp	x2, x1
    abe4:	cset	w1, eq  // eq = none
    abe8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    abec:	str	w0, [x19, #40]
    abf0:	add	x3, x21, #0x10
    abf4:	mov	x2, #0x1000000000          	// #68719476736
    abf8:	mov	x1, x21
    abfc:	mov	x0, x19
    ac00:	stp	x3, x2, [sp, #160]
    ac04:	bl	6b70 <_ZN4llvm8TGParser20ParseOptionalBitListERNS_15SmallVectorImplIjEE>
    ac08:	tst	w0, #0xff
    ac0c:	b.ne	ad30 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x208>  // b.any
    ac10:	ldr	x3, [sp, #160]
    ac14:	ldr	w2, [sp, #168]
    ac18:	add	x2, x3, x2, lsl #2
    ac1c:	cmp	x3, x2
    ac20:	b.eq	ac48 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x120>  // b.none
    ac24:	sub	x2, x2, #0x4
    ac28:	cmp	x3, x2
    ac2c:	b.cs	ac48 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x120>  // b.hs, b.nlast
    ac30:	ldr	w4, [x2]
    ac34:	ldr	w1, [x3]
    ac38:	str	w4, [x3], #4
    ac3c:	str	w1, [x2], #-4
    ac40:	cmp	x3, x2
    ac44:	b.cc	ac30 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x108>  // b.lo, b.ul, b.last
    ac48:	ldr	w0, [x19, #40]
    ac4c:	cmp	w0, #0x10
    ac50:	b.eq	aca4 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x17c>  // b.none
    ac54:	add	x20, sp, #0x88
    ac58:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ac5c:	mov	x0, x20
    ac60:	add	x1, x1, #0x0
    ac64:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ac68:	mov	x1, x20
    ac6c:	mov	x0, x19
    ac70:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ac74:	and	w22, w0, #0xff
    ac78:	ldr	x0, [sp, #160]
    ac7c:	add	x21, x21, #0x10
    ac80:	cmp	x0, x21
    ac84:	b.eq	ad44 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x21c>  // b.none
    ac88:	bl	0 <free>
    ac8c:	mov	w0, w22
    ac90:	ldp	x19, x20, [sp, #16]
    ac94:	ldp	x21, x22, [sp, #32]
    ac98:	ldp	x23, x24, [sp, #48]
    ac9c:	ldp	x29, x30, [sp], #240
    aca0:	ret
    aca4:	ldp	x2, x1, [x19, #8]
    aca8:	mov	x0, x19
    acac:	cmp	x2, x1
    acb0:	cset	w1, eq  // eq = none
    acb4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    acb8:	ldr	w2, [x20, #80]
    acbc:	mov	w3, #0x18                  	// #24
    acc0:	ldr	x1, [x20, #72]
    acc4:	str	w0, [x19, #40]
    acc8:	umaddl	x2, w2, w3, x1
    accc:	cmp	x1, x2
    acd0:	b.ne	ace4 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x1bc>  // b.any
    acd4:	b	ad5c <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x234>
    acd8:	add	x1, x1, #0x18
    acdc:	cmp	x2, x1
    ace0:	b.eq	ad5c <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x234>  // b.none
    ace4:	ldr	x0, [x1]
    ace8:	cmp	x23, x0
    acec:	b.ne	acd8 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x1b0>  // b.any
    acf0:	ldr	x2, [x1, #8]
    acf4:	mov	x0, x19
    acf8:	mov	x1, x20
    acfc:	mov	w3, #0x0                   	// #0
    ad00:	and	x2, x2, #0xfffffffffffffff8
    ad04:	bl	5fb0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    ad08:	mov	x24, x0
    ad0c:	cbz	x0, ad30 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x208>
    ad10:	ldr	w0, [x19, #40]
    ad14:	cmp	w0, #0xd
    ad18:	b.eq	adb8 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x290>  // b.none
    ad1c:	add	x20, sp, #0x88
    ad20:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ad24:	mov	x0, x20
    ad28:	add	x1, x1, #0x0
    ad2c:	b	ac64 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x13c>
    ad30:	ldr	x0, [sp, #160]
    ad34:	add	x21, x21, #0x10
    ad38:	mov	w22, #0x1                   	// #1
    ad3c:	cmp	x0, x21
    ad40:	b.ne	ac88 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x160>  // b.any
    ad44:	mov	w0, w22
    ad48:	ldp	x19, x20, [sp, #16]
    ad4c:	ldp	x21, x22, [sp, #32]
    ad50:	ldp	x23, x24, [sp, #48]
    ad54:	ldp	x29, x30, [sp], #240
    ad58:	ret
    ad5c:	ldp	x4, x3, [x23, #24]
    ad60:	add	x2, sp, #0x48
    ad64:	add	x22, sp, #0x70
    ad68:	add	x23, sp, #0x58
    ad6c:	mov	x0, x22
    ad70:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ad74:	add	x1, x1, #0x0
    ad78:	stp	x4, x3, [sp, #72]
    ad7c:	add	x20, sp, #0x88
    ad80:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ad84:	mov	x0, x23
    ad88:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ad8c:	add	x1, x1, #0x0
    ad90:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ad94:	mov	x8, x20
    ad98:	mov	x0, x22
    ad9c:	mov	x1, x23
    ada0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ada4:	mov	x1, x20
    ada8:	mov	x0, x19
    adac:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    adb0:	and	w22, w0, #0xff
    adb4:	b	ac78 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x150>
    adb8:	ldp	x2, x1, [x19, #8]
    adbc:	mov	x0, x19
    adc0:	cmp	x2, x1
    adc4:	cset	w1, eq  // eq = none
    adc8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    adcc:	str	w0, [x19, #40]
    add0:	ldr	w5, [sp, #168]
    add4:	mov	x2, x22
    add8:	ldr	x4, [sp, #160]
    addc:	mov	x6, x24
    ade0:	mov	x3, x23
    ade4:	mov	x1, x20
    ade8:	mov	x0, x19
    adec:	mov	w7, #0x0                   	// #0
    adf0:	bl	b38 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b>
    adf4:	and	w22, w0, #0xff
    adf8:	b	ac78 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x150>
    adfc:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ae00:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ae04:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ae08:	add	x3, x3, #0x0
    ae0c:	add	x1, x1, #0x0
    ae10:	add	x0, x0, #0x0
    ae14:	mov	w2, #0x6f                  	// #111
    ae18:	bl	0 <__assert_fail>
    ae1c:	nop

000000000000ae20 <_ZN4llvm8TGParser15ParseObjectNameEPNS_10MultiClassE>:
    ae20:	stp	x29, x30, [sp, #-96]!
    ae24:	mov	x29, sp
    ae28:	ldr	w2, [x0, #40]
    ae2c:	stp	x19, x20, [sp, #16]
    ae30:	cmp	w2, #0x6
    ae34:	b.eq	ae44 <_ZN4llvm8TGParser15ParseObjectNameEPNS_10MultiClassE+0x24>  // b.none
    ae38:	sub	w2, w2, #0xc
    ae3c:	cmp	w2, #0x1
    ae40:	b.hi	ae5c <_ZN4llvm8TGParser15ParseObjectNameEPNS_10MultiClassE+0x3c>  // b.pmore
    ae44:	bl	0 <_ZN4llvm9UnsetInit3getEv>
    ae48:	mov	x19, x0
    ae4c:	mov	x0, x19
    ae50:	ldp	x19, x20, [sp, #16]
    ae54:	ldp	x29, x30, [sp], #96
    ae58:	ret
    ae5c:	mov	x20, x1
    ae60:	cbz	x1, aee0 <_ZN4llvm8TGParser15ParseObjectNameEPNS_10MultiClassE+0xc0>
    ae64:	str	x21, [sp, #32]
    ae68:	adrp	x21, 0 <_ZN4llvm11StringRecTy6SharedE>
    ae6c:	mov	w3, #0x1                   	// #1
    ae70:	ldr	x21, [x21]
    ae74:	mov	x2, x21
    ae78:	bl	5fb0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    ae7c:	mov	x19, x0
    ae80:	cbz	x0, aecc <_ZN4llvm8TGParser15ParseObjectNameEPNS_10MultiClassE+0xac>
    ae84:	mov	x1, x20
    ae88:	mov	x0, x20
    ae8c:	bl	250 <_ZL27QualifiedNameOfImplicitNameRN4llvm6RecordEPNS_10MultiClassE>
    ae90:	mov	x20, x0
    ae94:	ldr	x2, [x19]
    ae98:	adrp	x1, 0 <_ZTVN4llvm20HasReferenceResolverE>
    ae9c:	strb	wzr, [sp, #72]
    aea0:	mov	x0, x19
    aea4:	ldr	x1, [x1]
    aea8:	str	x20, [sp, #80]
    aeac:	ldr	x2, [x2, #96]
    aeb0:	add	x1, x1, #0x10
    aeb4:	stp	x1, xzr, [sp, #56]
    aeb8:	add	x1, sp, #0x38
    aebc:	strb	wzr, [sp, #88]
    aec0:	blr	x2
    aec4:	ldrb	w0, [sp, #88]
    aec8:	cbz	w0, af04 <_ZN4llvm8TGParser15ParseObjectNameEPNS_10MultiClassE+0xe4>
    aecc:	mov	x0, x19
    aed0:	ldp	x19, x20, [sp, #16]
    aed4:	ldr	x21, [sp, #32]
    aed8:	ldp	x29, x30, [sp], #96
    aedc:	ret
    aee0:	adrp	x2, 0 <_ZN4llvm11StringRecTy6SharedE>
    aee4:	mov	w3, #0x1                   	// #1
    aee8:	ldr	x2, [x2]
    aeec:	bl	5fb0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    aef0:	mov	x19, x0
    aef4:	mov	x0, x19
    aef8:	ldp	x19, x20, [sp, #16]
    aefc:	ldp	x29, x30, [sp], #96
    af00:	ret
    af04:	mov	x1, x21
    af08:	mov	x0, x20
    af0c:	bl	0 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE>
    af10:	mov	x1, x19
    af14:	bl	0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>
    af18:	mov	x19, x0
    af1c:	mov	x0, x19
    af20:	ldp	x19, x20, [sp, #16]
    af24:	ldr	x21, [sp, #32]
    af28:	ldp	x29, x30, [sp], #96
    af2c:	ret

000000000000af30 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb>:
    af30:	stp	x29, x30, [sp, #-208]!
    af34:	mov	x29, sp
    af38:	stp	x19, x20, [sp, #16]
    af3c:	mov	x19, x0
    af40:	stp	x21, x22, [sp, #32]
    af44:	ldr	w21, [x0, #40]
    af48:	stp	x23, x24, [sp, #48]
    af4c:	mov	x24, x1
    af50:	cmp	w21, #0x1b
    af54:	stp	x25, x26, [sp, #64]
    af58:	and	w25, w2, #0xff
    af5c:	b.eq	b1b0 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x280>  // b.none
    af60:	mov	x0, x19
    af64:	bl	4480 <_ZN4llvm8TGParser9ParseTypeEv>
    af68:	mov	x23, x0
    af6c:	cbz	x0, b1f8 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x2c8>
    af70:	ldr	w0, [x19, #40]
    af74:	cmp	w0, #0x48
    af78:	b.ne	b15c <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x22c>  // b.any
    af7c:	ldp	x1, x2, [x19, #48]
    af80:	add	x22, sp, #0x70
    af84:	add	x4, x22, #0x10
    af88:	mov	w3, #0x0                   	// #0
    af8c:	mov	x0, x22
    af90:	str	x4, [sp, #112]
    af94:	add	x2, x1, x2
    af98:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    af9c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    afa0:	mov	x0, x22
    afa4:	add	x1, x1, #0x0
    afa8:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>
    afac:	cbz	w0, b084 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x154>
    afb0:	mov	x0, x19
    afb4:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    afb8:	mov	x26, x0
    afbc:	ldp	x0, x1, [sp, #112]
    afc0:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    afc4:	mov	x20, x0
    afc8:	ldp	x2, x1, [x19, #8]
    afcc:	mov	x0, x19
    afd0:	cmp	x2, x1
    afd4:	cset	w1, eq  // eq = none
    afd8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    afdc:	str	w0, [x19, #40]
    afe0:	cbz	w25, b010 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0xe0>
    afe4:	ldr	x1, [x19, #328]
    afe8:	cbz	x24, b1c8 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x298>
    afec:	mov	x2, x20
    aff0:	mov	x0, x24
    aff4:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    aff8:	mov	x4, #0x1                   	// #1
    affc:	add	x3, x3, #0x0
    b000:	bl	168 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE>
    b004:	ldr	x1, [x19, #328]
    b008:	mov	x20, x0
    b00c:	cbnz	x1, b1cc <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x29c>
    b010:	cmp	w21, #0x1b
    b014:	add	x21, sp, #0xb0
    b018:	cset	w3, eq  // eq = none
    b01c:	mov	x0, x21
    b020:	mov	x2, x23
    b024:	mov	x1, x20
    b028:	bl	0 <_ZN4llvm9RecordValC1EPNS_4InitEPNS_5RecTyEb>
    b02c:	mov	x3, x21
    b030:	mov	x2, x26
    b034:	mov	x1, x24
    b038:	mov	x0, x19
    b03c:	bl	3b8 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE>
    b040:	tst	w0, #0xff
    b044:	b.ne	b154 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x224>  // b.any
    b048:	ldr	w0, [x19, #40]
    b04c:	cmp	w0, #0x10
    b050:	b.eq	b200 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x2d0>  // b.none
    b054:	ldr	x0, [sp, #112]
    b058:	add	x1, x22, #0x10
    b05c:	cmp	x0, x1
    b060:	b.eq	b068 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x138>  // b.none
    b064:	bl	0 <_ZdlPv>
    b068:	mov	x0, x20
    b06c:	ldp	x19, x20, [sp, #16]
    b070:	ldp	x21, x22, [sp, #32]
    b074:	ldp	x23, x24, [sp, #48]
    b078:	ldp	x25, x26, [sp, #64]
    b07c:	ldp	x29, x30, [sp], #208
    b080:	ret
    b084:	add	x20, sp, #0x90
    b088:	mov	x1, x22
    b08c:	mov	x8, x20
    b090:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b094:	add	x0, x0, #0x0
    b098:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b09c:	ldr	x1, [sp, #152]
    b0a0:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    b0a4:	sub	x0, x0, x1
    b0a8:	cmp	x0, #0x1c
    b0ac:	b.ls	b284 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x354>  // b.plast
    b0b0:	mov	x0, x20
    b0b4:	add	x21, sp, #0xb0
    b0b8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b0bc:	mov	x2, #0x1d                  	// #29
    b0c0:	add	x1, x1, #0x0
    b0c4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    b0c8:	add	x1, x21, #0x10
    b0cc:	str	x1, [sp, #176]
    b0d0:	mov	x3, x0
    b0d4:	ldr	x1, [x0], #16
    b0d8:	cmp	x1, x0
    b0dc:	b.eq	b1ec <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x2bc>  // b.none
    b0e0:	str	x1, [sp, #176]
    b0e4:	ldr	x1, [x3, #16]
    b0e8:	str	x1, [sp, #192]
    b0ec:	ldr	x2, [x3, #8]
    b0f0:	str	x2, [sp, #184]
    b0f4:	mov	x1, x21
    b0f8:	stp	x0, xzr, [x3]
    b0fc:	add	x23, sp, #0x58
    b100:	strb	wzr, [x3, #16]
    b104:	mov	x0, x23
    b108:	add	x21, x21, #0x10
    b10c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b110:	mov	x0, x19
    b114:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    b118:	mov	x3, x0
    b11c:	mov	x2, x23
    b120:	add	x0, sp, #0x50
    b124:	mov	x1, #0x1                   	// #1
    b128:	str	x3, [sp, #80]
    b12c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    b130:	ldr	x0, [sp, #176]
    b134:	cmp	x0, x21
    b138:	b.eq	b140 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x210>  // b.none
    b13c:	bl	0 <_ZdlPv>
    b140:	ldr	x0, [sp, #144]
    b144:	add	x20, x20, #0x10
    b148:	cmp	x0, x20
    b14c:	b.eq	b154 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x224>  // b.none
    b150:	bl	0 <_ZdlPv>
    b154:	mov	x20, #0x0                   	// #0
    b158:	b	b054 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x124>
    b15c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b160:	add	x1, x1, #0x0
    b164:	add	x21, sp, #0xb0
    b168:	mov	x20, #0x0                   	// #0
    b16c:	mov	x0, x21
    b170:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b174:	mov	x0, x19
    b178:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    b17c:	mov	x3, x0
    b180:	mov	x2, x21
    b184:	add	x0, sp, #0x90
    b188:	mov	x1, #0x1                   	// #1
    b18c:	str	x3, [sp, #144]
    b190:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    b194:	mov	x0, x20
    b198:	ldp	x19, x20, [sp, #16]
    b19c:	ldp	x21, x22, [sp, #32]
    b1a0:	ldp	x23, x24, [sp, #48]
    b1a4:	ldp	x25, x26, [sp, #64]
    b1a8:	ldp	x29, x30, [sp], #208
    b1ac:	ret
    b1b0:	ldp	x1, x2, [x0, #8]
    b1b4:	cmp	x2, x1
    b1b8:	cset	w1, eq  // eq = none
    b1bc:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    b1c0:	str	w0, [x19, #40]
    b1c4:	b	af60 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x30>
    b1c8:	cbz	x1, b264 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x334>
    b1cc:	mov	x2, x20
    b1d0:	mov	x0, x1
    b1d4:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b1d8:	mov	x4, #0x2                   	// #2
    b1dc:	add	x3, x3, #0x0
    b1e0:	bl	168 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE>
    b1e4:	mov	x20, x0
    b1e8:	b	b010 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0xe0>
    b1ec:	ldp	x4, x5, [x3, #16]
    b1f0:	stp	x4, x5, [sp, #192]
    b1f4:	b	b0ec <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x1bc>
    b1f8:	mov	x20, #0x0                   	// #0
    b1fc:	b	b068 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x138>
    b200:	ldp	x2, x1, [x19, #8]
    b204:	mov	x0, x19
    b208:	cmp	x2, x1
    b20c:	cset	w1, eq  // eq = none
    b210:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    b214:	str	w0, [x19, #40]
    b218:	mov	x0, x19
    b21c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    b220:	mov	x21, x0
    b224:	mov	x2, x23
    b228:	mov	x1, x24
    b22c:	mov	x0, x19
    b230:	mov	w3, #0x0                   	// #0
    b234:	bl	5fb0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    b238:	mov	x6, x0
    b23c:	cbz	x0, b054 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x124>
    b240:	mov	x2, x21
    b244:	mov	x1, x24
    b248:	mov	x0, x19
    b24c:	mov	x3, x20
    b250:	mov	w7, #0x0                   	// #0
    b254:	mov	x4, #0x0                   	// #0
    b258:	mov	x5, #0x0                   	// #0
    b25c:	bl	b38 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b>
    b260:	b	b054 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x124>
    b264:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b268:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b26c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b270:	add	x3, x3, #0x0
    b274:	add	x1, x1, #0x0
    b278:	add	x0, x0, #0x0
    b27c:	mov	w2, #0x990                 	// #2448
    b280:	bl	0 <__assert_fail>
    b284:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b288:	add	x0, x0, #0x0
    b28c:	bl	0 <_ZSt20__throw_length_errorPKc>

000000000000b290 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE>:
    b290:	stp	x29, x30, [sp, #-112]!
    b294:	mov	x29, sp
    b298:	stp	x19, x20, [sp, #16]
    b29c:	mov	x20, x1
    b2a0:	ldr	w1, [x0, #40]
    b2a4:	cmp	w1, #0xa
    b2a8:	b.ne	b558 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x2c8>  // b.any
    b2ac:	ldp	x1, x2, [x0, #8]
    b2b0:	stp	x23, x24, [sp, #48]
    b2b4:	mov	x24, x0
    b2b8:	str	x25, [sp, #64]
    b2bc:	mov	x25, x20
    b2c0:	cmp	x2, x1
    b2c4:	cset	w1, eq  // eq = none
    b2c8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    b2cc:	str	w0, [x24, #40]
    b2d0:	cbz	x20, b504 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x274>
    b2d4:	mov	x1, x20
    b2d8:	mov	x0, x24
    b2dc:	mov	w2, #0x1                   	// #1
    b2e0:	bl	af30 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb>
    b2e4:	mov	x19, x0
    b2e8:	cbz	x0, b4ec <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x25c>
    b2ec:	ldr	x1, [x25, #56]
    b2f0:	stp	x21, x22, [sp, #32]
    b2f4:	ldr	w3, [x25, #64]
    b2f8:	add	x0, x1, w3, uxtw #3
    b2fc:	cmp	x1, x0
    b300:	b.ne	b314 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x84>  // b.any
    b304:	b	b340 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0xb0>
    b308:	add	x1, x1, #0x8
    b30c:	cmp	x0, x1
    b310:	b.eq	b340 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0xb0>  // b.none
    b314:	ldr	x2, [x1]
    b318:	cmp	x19, x2
    b31c:	b.ne	b308 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x78>  // b.any
    b320:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b324:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b328:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b32c:	add	x3, x3, #0x0
    b330:	add	x1, x1, #0x0
    b334:	add	x0, x0, #0x0
    b338:	mov	w2, #0x605                 	// #1541
    b33c:	bl	0 <__assert_fail>
    b340:	ldr	w1, [x25, #68]
    b344:	add	x21, x25, #0x38
    b348:	cmp	w3, w1
    b34c:	b.cs	b534 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x2a4>  // b.hs, b.nlast
    b350:	str	x19, [x0]
    b354:	ldp	w0, w2, [x25, #64]
    b358:	mov	w1, w0
    b35c:	add	x1, x1, #0x1
    b360:	cmp	x1, x2
    b364:	b.hi	b584 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x2f4>  // b.pmore
    b368:	add	w0, w0, #0x1
    b36c:	str	w0, [x25, #64]
    b370:	ldr	w0, [x24, #40]
    b374:	cmp	w0, #0xe
    b378:	b.ne	b488 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x1f8>  // b.any
    b37c:	add	x22, x25, #0x48
    b380:	ldp	x2, x1, [x24, #8]
    b384:	mov	x0, x24
    b388:	cmp	x2, x1
    b38c:	cset	w1, eq  // eq = none
    b390:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    b394:	str	w0, [x24, #40]
    b398:	mov	x0, x24
    b39c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    b3a0:	mov	x23, x0
    b3a4:	mov	x1, x20
    b3a8:	mov	x0, x24
    b3ac:	mov	w2, #0x1                   	// #1
    b3b0:	bl	af30 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb>
    b3b4:	mov	x19, x0
    b3b8:	cbz	x0, b418 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x188>
    b3bc:	ldr	x2, [x25, #56]
    b3c0:	ldr	w0, [x25, #64]
    b3c4:	add	x4, x2, w0, uxtw #3
    b3c8:	cmp	x2, x4
    b3cc:	b.eq	b450 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x1c0>  // b.none
    b3d0:	mov	x3, x2
    b3d4:	b	b3e4 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x154>
    b3d8:	add	x3, x3, #0x8
    b3dc:	cmp	x4, x3
    b3e0:	b.eq	b440 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x1b0>  // b.none
    b3e4:	ldr	x1, [x3]
    b3e8:	cmp	x19, x1
    b3ec:	b.ne	b3d8 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x148>  // b.any
    b3f0:	add	x19, sp, #0x58
    b3f4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b3f8:	mov	x0, x19
    b3fc:	add	x1, x1, #0x0
    b400:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b404:	str	x23, [sp, #80]
    b408:	mov	x2, x19
    b40c:	add	x0, sp, #0x50
    b410:	mov	x1, #0x1                   	// #1
    b414:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    b418:	ldp	x21, x22, [sp, #32]
    b41c:	mov	w0, #0x1                   	// #1
    b420:	ldp	x19, x20, [sp, #16]
    b424:	ldp	x23, x24, [sp, #48]
    b428:	ldr	x25, [sp, #64]
    b42c:	ldp	x29, x30, [sp], #112
    b430:	ret
    b434:	add	x2, x2, #0x8
    b438:	cmp	x4, x2
    b43c:	b.eq	b450 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x1c0>  // b.none
    b440:	ldr	x1, [x2]
    b444:	cmp	x19, x1
    b448:	b.ne	b434 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x1a4>  // b.any
    b44c:	b	b320 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x90>
    b450:	ldr	w1, [x25, #68]
    b454:	cmp	w0, w1
    b458:	b.cs	b4c8 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x238>  // b.hs, b.nlast
    b45c:	str	x19, [x4]
    b460:	ldp	w0, w2, [x25, #64]
    b464:	mov	w1, w0
    b468:	add	x1, x1, #0x1
    b46c:	cmp	x1, x2
    b470:	b.hi	b584 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x2f4>  // b.pmore
    b474:	add	w0, w0, #0x1
    b478:	str	w0, [x25, #64]
    b47c:	ldr	w0, [x24, #40]
    b480:	cmp	w0, #0xe
    b484:	b.eq	b380 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0xf0>  // b.none
    b488:	cmp	w0, #0xb
    b48c:	b.eq	b50c <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x27c>  // b.none
    b490:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b494:	add	x1, x1, #0x0
    b498:	add	x19, sp, #0x58
    b49c:	mov	x0, x19
    b4a0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b4a4:	mov	x0, x24
    b4a8:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    b4ac:	mov	x3, x0
    b4b0:	mov	x2, x19
    b4b4:	add	x0, sp, #0x50
    b4b8:	mov	x1, #0x1                   	// #1
    b4bc:	str	x3, [sp, #80]
    b4c0:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    b4c4:	b	b418 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x188>
    b4c8:	mov	x0, x21
    b4cc:	mov	x1, x22
    b4d0:	mov	x3, #0x8                   	// #8
    b4d4:	mov	x2, #0x0                   	// #0
    b4d8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b4dc:	ldr	x0, [x25, #56]
    b4e0:	ldr	w4, [x25, #64]
    b4e4:	add	x4, x0, x4, lsl #3
    b4e8:	b	b45c <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x1cc>
    b4ec:	mov	w0, #0x1                   	// #1
    b4f0:	ldp	x19, x20, [sp, #16]
    b4f4:	ldp	x23, x24, [sp, #48]
    b4f8:	ldr	x25, [sp, #64]
    b4fc:	ldp	x29, x30, [sp], #112
    b500:	ret
    b504:	ldr	x25, [x24, #328]
    b508:	b	b2d4 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x44>
    b50c:	ldp	x2, x1, [x24, #8]
    b510:	mov	x0, x24
    b514:	cmp	x2, x1
    b518:	cset	w1, eq  // eq = none
    b51c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    b520:	mov	w1, w0
    b524:	mov	w0, #0x0                   	// #0
    b528:	ldp	x21, x22, [sp, #32]
    b52c:	str	w1, [x24, #40]
    b530:	b	b420 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x190>
    b534:	add	x1, x25, #0x48
    b538:	mov	x0, x21
    b53c:	mov	x3, #0x8                   	// #8
    b540:	mov	x2, #0x0                   	// #0
    b544:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b548:	ldr	x1, [x25, #56]
    b54c:	ldr	w0, [x25, #64]
    b550:	add	x0, x1, x0, lsl #3
    b554:	b	b350 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0xc0>
    b558:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b55c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b560:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b564:	add	x3, x3, #0x0
    b568:	add	x1, x1, #0x0
    b56c:	add	x0, x0, #0x0
    b570:	mov	w2, #0xa08                 	// #2568
    b574:	stp	x21, x22, [sp, #32]
    b578:	stp	x23, x24, [sp, #48]
    b57c:	str	x25, [sp, #64]
    b580:	bl	0 <__assert_fail>
    b584:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b588:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b58c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b590:	add	x3, x3, #0x0
    b594:	add	x1, x1, #0x0
    b598:	add	x0, x0, #0x0
    b59c:	mov	w2, #0x43                  	// #67
    b5a0:	bl	0 <__assert_fail>
    b5a4:	nop

000000000000b5a8 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE>:
    b5a8:	stp	x29, x30, [sp, #-64]!
    b5ac:	mov	x29, sp
    b5b0:	ldr	w2, [x0, #40]
    b5b4:	cmp	w2, #0x23
    b5b8:	b.eq	b638 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x90>  // b.none
    b5bc:	cmp	w2, #0x1e
    b5c0:	b.eq	b628 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x80>  // b.none
    b5c4:	mov	w2, #0x0                   	// #0
    b5c8:	stp	x19, x20, [sp, #16]
    b5cc:	mov	x19, x0
    b5d0:	bl	af30 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb>
    b5d4:	cbz	x0, b648 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0xa0>
    b5d8:	ldr	w0, [x19, #40]
    b5dc:	cmp	w0, #0xd
    b5e0:	b.eq	b654 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0xac>  // b.none
    b5e4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b5e8:	add	x1, x1, #0x0
    b5ec:	add	x20, sp, #0x28
    b5f0:	mov	x0, x20
    b5f4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b5f8:	mov	x0, x19
    b5fc:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    b600:	mov	x3, x0
    b604:	mov	x2, x20
    b608:	add	x0, sp, #0x20
    b60c:	mov	x1, #0x1                   	// #1
    b610:	str	x3, [sp, #32]
    b614:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    b618:	ldp	x19, x20, [sp, #16]
    b61c:	mov	w0, #0x1                   	// #1
    b620:	ldp	x29, x30, [sp], #64
    b624:	ret
    b628:	bl	ab28 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0>
    b62c:	and	w0, w0, #0xff
    b630:	ldp	x29, x30, [sp], #64
    b634:	ret
    b638:	bl	a408 <_ZN4llvm8TGParser11ParseDefvarEv>
    b63c:	and	w0, w0, #0xff
    b640:	ldp	x29, x30, [sp], #64
    b644:	ret
    b648:	mov	w0, #0x1                   	// #1
    b64c:	ldp	x19, x20, [sp, #16]
    b650:	b	b620 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x78>
    b654:	ldp	x1, x2, [x19, #8]
    b658:	mov	x0, x19
    b65c:	cmp	x2, x1
    b660:	cset	w1, eq  // eq = none
    b664:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    b668:	mov	w1, w0
    b66c:	mov	w0, #0x0                   	// #0
    b670:	str	w1, [x19, #40]
    b674:	ldp	x19, x20, [sp, #16]
    b678:	b	b620 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x78>
    b67c:	nop

000000000000b680 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE>:
    b680:	stp	x29, x30, [sp, #-112]!
    b684:	mov	x29, sp
    b688:	ldr	w2, [x0, #40]
    b68c:	stp	x19, x20, [sp, #16]
    b690:	mov	x19, x0
    b694:	cmp	w2, #0xd
    b698:	b.eq	b958 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x2d8>  // b.none
    b69c:	cmp	w2, #0x6
    b6a0:	b.eq	b6e4 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x64>  // b.none
    b6a4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b6a8:	add	x1, x1, #0x0
    b6ac:	mov	w2, #0x103                 	// #259
    b6b0:	stp	x1, xzr, [sp, #88]
    b6b4:	strh	w2, [sp, #104]
    b6b8:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    b6bc:	mov	x3, x0
    b6c0:	add	x2, sp, #0x58
    b6c4:	add	x0, sp, #0x50
    b6c8:	mov	x1, #0x1                   	// #1
    b6cc:	str	x3, [sp, #80]
    b6d0:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    b6d4:	mov	w0, #0x1                   	// #1
    b6d8:	ldp	x19, x20, [sp, #16]
    b6dc:	ldp	x29, x30, [sp], #112
    b6e0:	ret
    b6e4:	mov	x20, x1
    b6e8:	stp	x21, x22, [sp, #32]
    b6ec:	ldp	x2, x1, [x0, #8]
    b6f0:	stp	x23, x24, [sp, #48]
    b6f4:	cmp	x2, x1
    b6f8:	cset	w1, eq  // eq = none
    b6fc:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    b700:	str	w0, [x19, #40]
    b704:	ldr	x23, [x19, #336]
    b708:	str	xzr, [x19, #336]
    b70c:	mov	x0, #0x38                  	// #56
    b710:	bl	0 <_Znwm>
    b714:	add	x2, x0, #0x8
    b718:	str	wzr, [x0, #8]
    b71c:	mov	x21, x0
    b720:	str	xzr, [x0, #16]
    b724:	ldr	x22, [x19, #336]
    b728:	stp	x2, x2, [x2, #16]
    b72c:	str	xzr, [x2, #32]
    b730:	str	x23, [x0, #48]
    b734:	str	x0, [x19, #336]
    b738:	cbz	x22, b82c <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x1ac>
    b73c:	ldr	x21, [x22, #48]
    b740:	cbz	x21, b7f0 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x170>
    b744:	ldr	x23, [x21, #48]
    b748:	cbz	x23, b7d8 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x158>
    b74c:	ldr	x24, [x23, #48]
    b750:	cbz	x24, b7c0 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x140>
    b754:	stp	x25, x26, [sp, #64]
    b758:	ldr	x25, [x24, #48]
    b75c:	cbz	x25, b7a4 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x124>
    b760:	ldr	x26, [x25, #48]
    b764:	cbz	x26, b78c <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x10c>
    b768:	ldr	x0, [x26, #48]
    b76c:	cbz	x0, b774 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0xf4>
    b770:	bl	16f8 <_ZNKSt14default_deleteIN4llvm15TGLocalVarScopeEEclEPS1_.isra.0.part.0>
    b774:	ldr	x1, [x26, #16]
    b778:	mov	x0, x26
    b77c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b780:	mov	x0, x26
    b784:	mov	x1, #0x38                  	// #56
    b788:	bl	0 <_ZdlPvm>
    b78c:	ldr	x1, [x25, #16]
    b790:	mov	x0, x25
    b794:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b798:	mov	x0, x25
    b79c:	mov	x1, #0x38                  	// #56
    b7a0:	bl	0 <_ZdlPvm>
    b7a4:	ldr	x1, [x24, #16]
    b7a8:	mov	x0, x24
    b7ac:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b7b0:	mov	x0, x24
    b7b4:	mov	x1, #0x38                  	// #56
    b7b8:	bl	0 <_ZdlPvm>
    b7bc:	ldp	x25, x26, [sp, #64]
    b7c0:	mov	x0, x23
    b7c4:	ldr	x1, [x23, #16]
    b7c8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b7cc:	mov	x0, x23
    b7d0:	mov	x1, #0x38                  	// #56
    b7d4:	bl	0 <_ZdlPvm>
    b7d8:	ldr	x1, [x21, #16]
    b7dc:	mov	x0, x21
    b7e0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b7e4:	mov	x0, x21
    b7e8:	mov	x1, #0x38                  	// #56
    b7ec:	bl	0 <_ZdlPvm>
    b7f0:	ldr	x1, [x22, #16]
    b7f4:	mov	x0, x22
    b7f8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b7fc:	mov	x0, x22
    b800:	mov	x1, #0x38                  	// #56
    b804:	bl	0 <_ZdlPvm>
    b808:	ldr	w2, [x19, #40]
    b80c:	ldr	x21, [x19, #336]
    b810:	cmp	w2, #0x7
    b814:	b.eq	b838 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x1b8>  // b.none
    b818:	mov	x1, x20
    b81c:	mov	x0, x19
    b820:	bl	b5a8 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE>
    b824:	ands	w0, w0, #0xff
    b828:	b.ne	b944 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x2c4>  // b.any
    b82c:	ldr	w2, [x19, #40]
    b830:	cmp	w2, #0x7
    b834:	b.ne	b818 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x198>  // b.any
    b838:	ldr	x0, [x19, #336]
    b83c:	cmp	x21, x0
    b840:	b.ne	b980 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x300>  // b.any
    b844:	ldr	x0, [x21, #48]
    b848:	str	xzr, [x21, #48]
    b84c:	ldr	x20, [x19, #336]
    b850:	str	x0, [x19, #336]
    b854:	cbz	x20, b924 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x2a4>
    b858:	ldr	x21, [x20, #48]
    b85c:	cbz	x21, b90c <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x28c>
    b860:	ldr	x22, [x21, #48]
    b864:	cbz	x22, b8f4 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x274>
    b868:	ldr	x23, [x22, #48]
    b86c:	cbz	x23, b8dc <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x25c>
    b870:	ldr	x24, [x23, #48]
    b874:	cbz	x24, b8c4 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x244>
    b878:	stp	x25, x26, [sp, #64]
    b87c:	ldr	x25, [x24, #48]
    b880:	cbz	x25, b8a8 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x228>
    b884:	ldr	x0, [x25, #48]
    b888:	cbz	x0, b890 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x210>
    b88c:	bl	16f8 <_ZNKSt14default_deleteIN4llvm15TGLocalVarScopeEEclEPS1_.isra.0.part.0>
    b890:	ldr	x1, [x25, #16]
    b894:	mov	x0, x25
    b898:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b89c:	mov	x0, x25
    b8a0:	mov	x1, #0x38                  	// #56
    b8a4:	bl	0 <_ZdlPvm>
    b8a8:	ldr	x1, [x24, #16]
    b8ac:	mov	x0, x24
    b8b0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b8b4:	mov	x0, x24
    b8b8:	mov	x1, #0x38                  	// #56
    b8bc:	bl	0 <_ZdlPvm>
    b8c0:	ldp	x25, x26, [sp, #64]
    b8c4:	mov	x0, x23
    b8c8:	ldr	x1, [x23, #16]
    b8cc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b8d0:	mov	x0, x23
    b8d4:	mov	x1, #0x38                  	// #56
    b8d8:	bl	0 <_ZdlPvm>
    b8dc:	ldr	x1, [x22, #16]
    b8e0:	mov	x0, x22
    b8e4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b8e8:	mov	x0, x22
    b8ec:	mov	x1, #0x38                  	// #56
    b8f0:	bl	0 <_ZdlPvm>
    b8f4:	ldr	x1, [x21, #16]
    b8f8:	mov	x0, x21
    b8fc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b900:	mov	x0, x21
    b904:	mov	x1, #0x38                  	// #56
    b908:	bl	0 <_ZdlPvm>
    b90c:	ldr	x1, [x20, #16]
    b910:	mov	x0, x20
    b914:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b918:	mov	x0, x20
    b91c:	mov	x1, #0x38                  	// #56
    b920:	bl	0 <_ZdlPvm>
    b924:	ldp	x2, x1, [x19, #8]
    b928:	mov	x0, x19
    b92c:	cmp	x2, x1
    b930:	cset	w1, eq  // eq = none
    b934:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    b938:	mov	w1, w0
    b93c:	mov	w0, #0x0                   	// #0
    b940:	str	w1, [x19, #40]
    b944:	ldp	x19, x20, [sp, #16]
    b948:	ldp	x21, x22, [sp, #32]
    b94c:	ldp	x23, x24, [sp, #48]
    b950:	ldp	x29, x30, [sp], #112
    b954:	ret
    b958:	ldp	x1, x2, [x0, #8]
    b95c:	cmp	x2, x1
    b960:	cset	w1, eq  // eq = none
    b964:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    b968:	mov	w1, w0
    b96c:	str	w1, [x19, #40]
    b970:	mov	w0, #0x0                   	// #0
    b974:	ldp	x19, x20, [sp, #16]
    b978:	ldp	x29, x30, [sp], #112
    b97c:	ret
    b980:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b984:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b988:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b98c:	add	x3, x3, #0x0
    b990:	add	x1, x1, #0x0
    b994:	add	x0, x0, #0x0
    b998:	mov	w2, #0xc0                  	// #192
    b99c:	stp	x25, x26, [sp, #64]
    b9a0:	bl	0 <__assert_fail>
    b9a4:	nop

000000000000b9a8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE>:
    b9a8:	sub	sp, sp, #0x250
    b9ac:	mov	w3, #0x18                  	// #24
    b9b0:	stp	x29, x30, [sp]
    b9b4:	mov	x29, sp
    b9b8:	stp	x21, x22, [sp, #32]
    b9bc:	ldr	x22, [x2, #16]
    b9c0:	stp	x19, x20, [sp, #16]
    b9c4:	mov	x20, x0
    b9c8:	stp	x23, x24, [sp, #48]
    b9cc:	mov	x19, x2
    b9d0:	ldr	w23, [x22, #80]
    b9d4:	ldr	x0, [x22, #72]
    b9d8:	stp	x25, x26, [sp, #64]
    b9dc:	mov	x25, x1
    b9e0:	mov	x21, x0
    b9e4:	umaddl	x23, w23, w3, x0
    b9e8:	cmp	x0, x23
    b9ec:	b.ne	ba00 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x58>  // b.any
    b9f0:	b	ba3c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x94>
    b9f4:	add	x21, x21, #0x18
    b9f8:	cmp	x23, x21
    b9fc:	b.eq	ba3c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x94>  // b.none
    ba00:	ldr	x2, [x19]
    ba04:	mov	x3, x21
    ba08:	mov	x1, x25
    ba0c:	mov	x0, x20
    ba10:	bl	3b8 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE>
    ba14:	ands	w3, w0, #0xff
    ba18:	b.eq	b9f4 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x4c>  // b.none
    ba1c:	mov	w0, w3
    ba20:	ldp	x29, x30, [sp]
    ba24:	ldp	x19, x20, [sp, #16]
    ba28:	ldp	x21, x22, [sp, #32]
    ba2c:	ldp	x23, x24, [sp, #48]
    ba30:	ldp	x25, x26, [sp, #64]
    ba34:	add	sp, sp, #0x250
    ba38:	ret
    ba3c:	ldr	w21, [x22, #64]
    ba40:	ldr	w0, [x19, #32]
    ba44:	mov	w23, w21
    ba48:	cmp	w21, w0
    ba4c:	b.cc	be48 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x4a0>  // b.lo, b.ul, b.last
    ba50:	adrp	x1, 0 <_ZTVN4llvm11MapResolverE>
    ba54:	add	x2, sp, #0x218
    ba58:	stp	x27, x28, [sp, #80]
    ba5c:	ldr	x1, [x1]
    ba60:	ldr	x27, [x22, #56]
    ba64:	strb	wzr, [sp, #552]
    ba68:	add	x1, x1, #0x10
    ba6c:	stp	x1, x25, [x2]
    ba70:	stp	xzr, xzr, [x2, #24]
    ba74:	str	xzr, [sp, #576]
    ba78:	str	wzr, [sp, #584]
    ba7c:	cbz	w21, c258 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x8b0>
    ba80:	mov	x26, #0x0                   	// #0
    ba84:	mov	w28, #0x18                  	// #24
    ba88:	cmp	w26, w0
    ba8c:	mov	w24, w26
    ba90:	b.cs	bc0c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x264>  // b.hs, b.nlast
    ba94:	nop
    ba98:	cmp	x23, x26
    ba9c:	b.ls	c73c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xd94>  // b.plast
    baa0:	cmp	x26, w0, uxtw
    baa4:	ldr	x3, [x27]
    baa8:	b.cs	c740 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xd98>  // b.hs, b.nlast
    baac:	ldr	x0, [x19, #24]
    bab0:	mov	x1, x25
    bab4:	ldr	x2, [x19]
    bab8:	mov	w7, #0x0                   	// #0
    babc:	ldr	x6, [x0, x26, lsl #3]
    bac0:	mov	x4, #0x0                   	// #0
    bac4:	mov	x0, x20
    bac8:	mov	x5, #0x0                   	// #0
    bacc:	bl	b38 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b>
    bad0:	ands	w3, w0, #0xff
    bad4:	b.ne	bdf8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x450>  // b.any
    bad8:	ldr	w5, [x25, #80]
    badc:	ldr	x3, [x25, #72]
    bae0:	mov	w6, w5
    bae4:	ldr	x24, [x27]
    bae8:	umaddl	x1, w5, w28, x3
    baec:	cmp	x3, x1
    baf0:	b.ne	bb04 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x15c>  // b.any
    baf4:	b	c830 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xe88>
    baf8:	add	x3, x3, #0x18
    bafc:	cmp	x1, x3
    bb00:	b.eq	c830 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xe88>  // b.none
    bb04:	ldr	x0, [x3]
    bb08:	cmp	x24, x0
    bb0c:	b.ne	baf8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x150>  // b.any
    bb10:	ldr	w1, [sp, #584]
    bb14:	ldr	x7, [x3, #16]
    bb18:	ldr	x4, [sp, #568]
    bb1c:	cbz	w1, c01c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x674>
    bb20:	cmn	x24, #0x10
    bb24:	ccmn	x24, #0x8, #0x4, ne  // ne = any
    bb28:	b.eq	c810 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xe68>  // b.none
    bb2c:	lsr	w3, w24, #9
    bb30:	sub	w10, w1, #0x1
    bb34:	eor	w3, w3, w24, lsr #4
    bb38:	and	w11, w3, w10
    bb3c:	umull	x0, w11, w28
    bb40:	add	x9, x4, x0
    bb44:	ldr	x8, [x4, x0]
    bb48:	cmp	x24, x8
    bb4c:	b.ne	bea0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x4f8>  // b.any
    bb50:	str	x7, [x9, #8]
    bb54:	strb	wzr, [x9, #16]
    bb58:	ldr	x1, [x27]
    bb5c:	cbz	w5, c558 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xbb0>
    bb60:	sub	w2, w5, #0x1
    bb64:	ldr	x7, [x25, #72]
    bb68:	umull	x2, w2, w28
    bb6c:	add	x4, x7, #0x18
    bb70:	mov	x0, x7
    bb74:	add	x4, x4, x2
    bb78:	add	x2, x2, x7
    bb7c:	b	bb94 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x1ec>
    bb80:	cmp	x2, x0
    bb84:	b.eq	c558 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xbb0>  // b.none
    bb88:	add	x0, x0, #0x18
    bb8c:	cmp	x4, x0
    bb90:	b.eq	c538 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xb90>  // b.none
    bb94:	ldr	x3, [x0]
    bb98:	cmp	x1, x3
    bb9c:	b.ne	bb80 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x1d8>  // b.any
    bba0:	cmp	x7, x0
    bba4:	b.hi	c7f0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xe48>  // b.pmore
    bba8:	add	x2, x6, x6, lsl #1
    bbac:	add	x2, x7, x2, lsl #3
    bbb0:	cmp	x0, x2
    bbb4:	b.cs	c7b0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xe08>  // b.hs, b.nlast
    bbb8:	add	x1, x0, #0x18
    bbbc:	cmp	x2, x1
    bbc0:	b.eq	bbd4 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x22c>  // b.none
    bbc4:	sub	x2, x2, x1
    bbc8:	bl	0 <memmove>
    bbcc:	ldr	w5, [x25, #80]
    bbd0:	mov	w6, w5
    bbd4:	ldr	w0, [x25, #84]
    bbd8:	sub	x6, x6, #0x1
    bbdc:	cmp	x6, x0
    bbe0:	b.hi	c7d0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xe28>  // b.pmore
    bbe4:	sub	w5, w5, #0x1
    bbe8:	str	w5, [x25, #80]
    bbec:	add	x26, x26, #0x1
    bbf0:	add	x27, x27, #0x8
    bbf4:	cmp	w21, w26
    bbf8:	b.eq	c258 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x8b0>  // b.none
    bbfc:	ldr	w0, [x19, #32]
    bc00:	mov	w24, w26
    bc04:	cmp	w26, w0
    bc08:	b.cc	ba98 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xf0>  // b.lo, b.ul, b.last
    bc0c:	cmp	x23, x26
    bc10:	b.ls	c73c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xd94>  // b.plast
    bc14:	ldr	w2, [x25, #80]
    bc18:	ldr	x0, [x25, #72]
    bc1c:	ldr	x3, [x27]
    bc20:	umaddl	x2, w2, w28, x0
    bc24:	cmp	x0, x2
    bc28:	b.ne	bc3c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x294>  // b.any
    bc2c:	b	c830 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xe88>
    bc30:	add	x0, x0, #0x18
    bc34:	cmp	x2, x0
    bc38:	b.eq	c830 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xe88>  // b.none
    bc3c:	ldr	x1, [x0]
    bc40:	cmp	x3, x1
    bc44:	b.ne	bc30 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x288>  // b.any
    bc48:	ldr	x0, [x0, #16]
    bc4c:	ldr	x1, [x0]
    bc50:	ldr	x1, [x1, #24]
    bc54:	blr	x1
    bc58:	tst	w0, #0xff
    bc5c:	b.ne	bad8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x130>  // b.any
    bc60:	add	x21, sp, #0xb8
    bc64:	add	x20, sp, #0xd0
    bc68:	mov	x0, x21
    bc6c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    bc70:	add	x1, x1, #0x0
    bc74:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    bc78:	mov	w2, #0x109                 	// #265
    bc7c:	mov	x8, x20
    bc80:	str	xzr, [sp, #160]
    bc84:	mov	x0, x21
    bc88:	add	x23, sp, #0xe8
    bc8c:	add	x1, sp, #0xa0
    bc90:	str	w24, [sp, #160]
    bc94:	add	x25, sp, #0x100
    bc98:	str	xzr, [sp, #168]
    bc9c:	add	x21, sp, #0x1d8
    bca0:	strh	w2, [sp, #176]
    bca4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    bca8:	mov	x0, x23
    bcac:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    bcb0:	add	x1, x1, #0x0
    bcb4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    bcb8:	mov	x1, x23
    bcbc:	mov	x0, x20
    bcc0:	mov	x8, x25
    bcc4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    bcc8:	ldr	x0, [x27]
    bccc:	add	x2, sp, #0x1c0
    bcd0:	add	x4, sp, #0x1a8
    bcd4:	add	x3, sp, #0x190
    bcd8:	add	x5, sp, #0x178
    bcdc:	mov	x8, x21
    bce0:	ldr	x1, [x0]
    bce4:	stp	x2, x4, [sp, #104]
    bce8:	add	x27, sp, #0x118
    bcec:	stp	x3, x5, [sp, #120]
    bcf0:	add	x28, sp, #0x130
    bcf4:	add	x23, sp, #0x148
    bcf8:	ldr	x1, [x1, #48]
    bcfc:	add	x26, sp, #0x160
    bd00:	add	x20, sp, #0x1f8
    bd04:	blr	x1
    bd08:	mov	x0, x27
    bd0c:	mov	x1, x21
    bd10:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    bd14:	mov	x8, x28
    bd18:	mov	x1, x27
    bd1c:	mov	x0, x25
    bd20:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    bd24:	mov	x0, x23
    bd28:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    bd2c:	add	x1, x1, #0x0
    bd30:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    bd34:	mov	x1, x23
    bd38:	mov	x0, x28
    bd3c:	mov	x8, x26
    bd40:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    bd44:	ldr	x0, [x22]
    bd48:	mov	x8, x20
    bd4c:	ldr	x1, [x0]
    bd50:	ldr	x1, [x1, #48]
    bd54:	blr	x1
    bd58:	ldr	x5, [sp, #128]
    bd5c:	mov	x1, x20
    bd60:	add	x20, x20, #0x10
    bd64:	mov	x27, x5
    bd68:	mov	x0, x5
    bd6c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    bd70:	ldr	x3, [sp, #120]
    bd74:	mov	x1, x27
    bd78:	mov	x0, x26
    bd7c:	mov	x23, x3
    bd80:	mov	x8, x3
    bd84:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    bd88:	ldr	x4, [sp, #112]
    bd8c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    bd90:	add	x1, x1, #0x0
    bd94:	mov	x25, x4
    bd98:	mov	x0, x4
    bd9c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    bda0:	ldr	x2, [sp, #104]
    bda4:	mov	x1, x25
    bda8:	mov	x0, x23
    bdac:	mov	x8, x2
    bdb0:	mov	x22, x2
    bdb4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    bdb8:	ldr	x3, [x19]
    bdbc:	add	x0, sp, #0x98
    bdc0:	mov	x2, x22
    bdc4:	mov	x1, #0x1                   	// #1
    bdc8:	str	x3, [sp, #152]
    bdcc:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    bdd0:	ldr	x0, [sp, #504]
    bdd4:	cmp	x0, x20
    bdd8:	b.eq	bde0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x438>  // b.none
    bddc:	bl	0 <_ZdlPv>
    bde0:	ldr	x0, [sp, #472]
    bde4:	add	x21, x21, #0x10
    bde8:	cmp	x0, x21
    bdec:	b.eq	bdf4 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x44c>  // b.none
    bdf0:	bl	0 <_ZdlPv>
    bdf4:	mov	w3, #0x1                   	// #1
    bdf8:	ldr	w2, [sp, #584]
    bdfc:	mov	w1, #0x18                  	// #24
    be00:	str	w3, [sp, #104]
    be04:	adrp	x3, 0 <_ZTVN4llvm11MapResolverE>
    be08:	ldr	x0, [sp, #568]
    be0c:	umull	x1, w2, w1
    be10:	ldr	x24, [x3]
    be14:	add	x24, x24, #0x10
    be18:	str	x24, [sp, #536]
    be1c:	bl	0 <_ZdlPvm>
    be20:	ldr	w3, [sp, #104]
    be24:	ldp	x29, x30, [sp]
    be28:	mov	w0, w3
    be2c:	ldp	x19, x20, [sp, #16]
    be30:	ldp	x21, x22, [sp, #32]
    be34:	ldp	x23, x24, [sp, #48]
    be38:	ldp	x25, x26, [sp, #64]
    be3c:	ldp	x27, x28, [sp, #80]
    be40:	add	sp, sp, #0x250
    be44:	ret
    be48:	add	x20, sp, #0x218
    be4c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    be50:	mov	x0, x20
    be54:	add	x1, x1, #0x0
    be58:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    be5c:	ldr	x4, [x19]
    be60:	mov	w3, #0x1                   	// #1
    be64:	mov	x2, x20
    be68:	add	x0, sp, #0x1f8
    be6c:	mov	x1, #0x1                   	// #1
    be70:	str	w3, [sp, #104]
    be74:	str	x4, [sp, #504]
    be78:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    be7c:	ldr	w3, [sp, #104]
    be80:	ldp	x29, x30, [sp]
    be84:	mov	w0, w3
    be88:	ldp	x19, x20, [sp, #16]
    be8c:	ldp	x21, x22, [sp, #32]
    be90:	ldp	x23, x24, [sp, #48]
    be94:	ldp	x25, x26, [sp, #64]
    be98:	add	sp, sp, #0x250
    be9c:	ret
    bea0:	mov	w0, #0x1                   	// #1
    bea4:	mov	x13, #0x0                   	// #0
    bea8:	cmn	x8, #0x8
    beac:	b.ne	c5a8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xc00>  // b.any
    beb0:	ldr	x12, [sp, #560]
    beb4:	lsl	w0, w1, #1
    beb8:	ldr	w11, [sp, #576]
    bebc:	cmp	x13, #0x0
    bec0:	add	x12, x12, #0x1
    bec4:	str	x12, [sp, #560]
    bec8:	add	w11, w11, #0x1
    becc:	add	w12, w0, w1
    bed0:	csel	x9, x9, x13, eq  // eq = none
    bed4:	cmp	w12, w11, lsl #2
    bed8:	b.ls	c02c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x684>  // b.plast
    bedc:	ldr	w0, [sp, #580]
    bee0:	sub	w0, w1, w0
    bee4:	sub	w0, w0, w11
    bee8:	cmp	w0, w1, lsr #3
    beec:	b.ls	bf18 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x570>  // b.plast
    bef0:	ldr	x0, [x9]
    bef4:	str	w11, [sp, #576]
    bef8:	cmn	x0, #0x8
    befc:	b.eq	bf0c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x564>  // b.none
    bf00:	ldr	w0, [sp, #580]
    bf04:	sub	w0, w0, #0x1
    bf08:	str	w0, [sp, #580]
    bf0c:	stp	x24, xzr, [x9]
    bf10:	strb	wzr, [x9, #16]
    bf14:	b	bb50 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x1a8>
    bf18:	mov	w5, w10
    bf1c:	lsr	w0, w10, #1
    bf20:	orr	x0, x0, x5
    bf24:	mov	w5, #0x40                  	// #64
    bf28:	stp	x7, x4, [sp, #104]
    bf2c:	orr	x0, x0, x0, lsr #2
    bf30:	str	w1, [sp, #120]
    bf34:	orr	x0, x0, x0, lsr #4
    bf38:	str	w3, [sp, #128]
    bf3c:	str	x8, [sp, #136]
    bf40:	orr	x0, x0, x0, lsr #8
    bf44:	orr	x0, x0, x0, lsr #16
    bf48:	add	x0, x0, #0x1
    bf4c:	cmp	w0, w5
    bf50:	csel	w0, w0, w5, cs  // cs = hs, nlast
    bf54:	str	w0, [sp, #584]
    bf58:	umull	x0, w0, w28
    bf5c:	bl	0 <_Znwm>
    bf60:	str	x0, [sp, #568]
    bf64:	ldp	x7, x4, [sp, #104]
    bf68:	mov	x10, x0
    bf6c:	ldr	w1, [sp, #120]
    bf70:	ldr	w3, [sp, #128]
    bf74:	ldr	x8, [sp, #136]
    bf78:	cbz	x4, c5fc <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xc54>
    bf7c:	ldr	w11, [sp, #584]
    bf80:	umull	x13, w1, w28
    bf84:	str	xzr, [sp, #576]
    bf88:	sub	w12, w11, #0x1
    bf8c:	add	x9, x4, x13
    bf90:	tst	w11, w12
    bf94:	b.ne	c790 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xde8>  // b.any
    bf98:	umaddl	x1, w11, w28, x0
    bf9c:	cmp	x0, x1
    bfa0:	b.eq	bfb4 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x60c>  // b.none
    bfa4:	nop
    bfa8:	str	x8, [x0], #24
    bfac:	cmp	x1, x0
    bfb0:	b.ne	bfa8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x600>  // b.any
    bfb4:	mov	x5, x4
    bfb8:	b	bfc8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x620>
    bfbc:	add	x5, x5, #0x18
    bfc0:	cmp	x9, x5
    bfc4:	b.eq	c1a0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x7f8>  // b.none
    bfc8:	ldr	x0, [x5]
    bfcc:	cmn	x0, #0x8
    bfd0:	ccmn	x0, #0x10, #0x4, ne  // ne = any
    bfd4:	b.eq	bfbc <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x614>  // b.none
    bfd8:	cbz	w11, c83c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xe94>
    bfdc:	lsr	w6, w0, #9
    bfe0:	eor	w6, w6, w0, lsr #4
    bfe4:	and	w6, w6, w12
    bfe8:	umull	x1, w6, w28
    bfec:	add	x14, x10, x1
    bff0:	ldr	x1, [x10, x1]
    bff4:	cmp	x0, x1
    bff8:	b.ne	c4b8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xb10>  // b.any
    bffc:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c000:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c004:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c008:	add	x3, x3, #0x0
    c00c:	add	x1, x1, #0x0
    c010:	add	x0, x0, #0x0
    c014:	mov	w2, #0x17a                 	// #378
    c018:	bl	0 <__assert_fail>
    c01c:	ldr	x3, [sp, #560]
    c020:	mov	w0, #0x0                   	// #0
    c024:	add	x3, x3, #0x1
    c028:	str	x3, [sp, #560]
    c02c:	sub	w0, w0, #0x1
    c030:	mov	w3, #0x40                  	// #64
    c034:	stp	x7, x4, [sp, #104]
    c038:	orr	x0, x0, x0, lsr #1
    c03c:	str	w1, [sp, #120]
    c040:	orr	x0, x0, x0, lsr #2
    c044:	orr	x0, x0, x0, lsr #4
    c048:	orr	x0, x0, x0, lsr #8
    c04c:	orr	x0, x0, x0, lsr #16
    c050:	add	x0, x0, #0x1
    c054:	cmp	w0, w3
    c058:	csel	w0, w0, w3, cs  // cs = hs, nlast
    c05c:	str	w0, [sp, #584]
    c060:	umull	x0, w0, w28
    c064:	bl	0 <_Znwm>
    c068:	str	x0, [sp, #568]
    c06c:	ldp	x7, x4, [sp, #104]
    c070:	mov	x8, x0
    c074:	ldr	w1, [sp, #120]
    c078:	cbz	x4, c570 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xbc8>
    c07c:	ldr	w10, [sp, #584]
    c080:	umull	x11, w1, w28
    c084:	str	xzr, [sp, #576]
    c088:	sub	w12, w10, #0x1
    c08c:	add	x6, x4, x11
    c090:	tst	w10, w12
    c094:	b.ne	c790 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xde8>  // b.any
    c098:	umaddl	x3, w10, w28, x0
    c09c:	mov	x1, #0xfffffffffffffff8    	// #-8
    c0a0:	cmp	x0, x3
    c0a4:	b.eq	c0b4 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x70c>  // b.none
    c0a8:	str	x1, [x0], #24
    c0ac:	cmp	x3, x0
    c0b0:	b.ne	c0a8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x700>  // b.any
    c0b4:	cmp	x4, x6
    c0b8:	mov	x3, x4
    c0bc:	b.ne	c0d0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x728>  // b.any
    c0c0:	b	c138 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x790>
    c0c4:	add	x3, x3, #0x18
    c0c8:	cmp	x6, x3
    c0cc:	b.eq	c138 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x790>  // b.none
    c0d0:	ldr	x0, [x3]
    c0d4:	cmn	x0, #0x8
    c0d8:	ccmn	x0, #0x10, #0x4, ne  // ne = any
    c0dc:	b.eq	c0c4 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x71c>  // b.none
    c0e0:	cbz	w10, c83c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xe94>
    c0e4:	lsr	w5, w0, #9
    c0e8:	eor	w5, w5, w0, lsr #4
    c0ec:	and	w5, w5, w12
    c0f0:	umull	x9, w5, w28
    c0f4:	add	x1, x8, x9
    c0f8:	ldr	x9, [x8, x9]
    c0fc:	cmp	x0, x9
    c100:	b.eq	bffc <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x654>  // b.none
    c104:	mov	w13, #0x1                   	// #1
    c108:	mov	x14, #0x0                   	// #0
    c10c:	cmn	x9, #0x8
    c110:	b.ne	c694 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xcec>  // b.any
    c114:	cmp	x14, #0x0
    c118:	ldr	w5, [sp, #576]
    c11c:	csel	x14, x14, x1, ne  // ne = any
    c120:	add	w5, w5, #0x1
    c124:	str	x0, [x14]
    c128:	ldp	x0, x1, [x3, #8]
    c12c:	stp	x0, x1, [x14, #8]
    c130:	str	w5, [sp, #576]
    c134:	b	c0c4 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x71c>
    c138:	mov	x1, x11
    c13c:	mov	x0, x4
    c140:	str	x7, [sp, #104]
    c144:	bl	0 <_ZdlPvm>
    c148:	ldr	w1, [sp, #584]
    c14c:	ldr	x7, [sp, #104]
    c150:	ldr	x8, [sp, #568]
    c154:	cbz	w1, c238 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x890>
    c158:	cmn	x24, #0x8
    c15c:	ccmn	x24, #0x10, #0x4, ne  // ne = any
    c160:	b.eq	c810 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xe68>  // b.none
    c164:	lsr	w0, w24, #9
    c168:	sub	w1, w1, #0x1
    c16c:	eor	w0, w0, w24, lsr #4
    c170:	ldr	w5, [x25, #80]
    c174:	and	w0, w0, w1
    c178:	ldr	w11, [sp, #576]
    c17c:	mov	w6, w5
    c180:	add	w11, w11, #0x1
    c184:	umull	x3, w0, w28
    c188:	add	x9, x8, x3
    c18c:	ldr	x3, [x8, x3]
    c190:	cmp	x24, x3
    c194:	b.ne	c4ec <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xb44>  // b.any
    c198:	str	w11, [sp, #576]
    c19c:	b	bf00 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x558>
    c1a0:	mov	x0, x4
    c1a4:	mov	x1, x13
    c1a8:	str	x7, [sp, #104]
    c1ac:	str	w3, [sp, #112]
    c1b0:	bl	0 <_ZdlPvm>
    c1b4:	ldr	w3, [sp, #112]
    c1b8:	ldr	w0, [sp, #584]
    c1bc:	ldr	x7, [sp, #104]
    c1c0:	ldr	x10, [sp, #568]
    c1c4:	cbz	w0, c238 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x890>
    c1c8:	sub	w0, w0, #0x1
    c1cc:	ldr	w5, [x25, #80]
    c1d0:	and	w3, w3, w0
    c1d4:	ldr	w11, [sp, #576]
    c1d8:	mov	w6, w5
    c1dc:	add	w11, w11, #0x1
    c1e0:	umull	x1, w3, w28
    c1e4:	add	x9, x10, x1
    c1e8:	ldr	x1, [x10, x1]
    c1ec:	cmp	x24, x1
    c1f0:	b.eq	c198 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x7f0>  // b.none
    c1f4:	mov	w8, #0x1                   	// #1
    c1f8:	mov	x4, #0x0                   	// #0
    c1fc:	cmn	x1, #0x8
    c200:	b.eq	c4fc <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xb54>  // b.none
    c204:	add	w3, w8, w3
    c208:	cmp	x4, #0x0
    c20c:	and	w3, w0, w3
    c210:	ccmn	x1, #0x10, #0x0, eq  // eq = none
    c214:	csel	x4, x4, x9, ne  // ne = any
    c218:	add	w8, w8, #0x1
    c21c:	umull	x1, w3, w28
    c220:	add	x9, x10, x1
    c224:	ldr	x1, [x10, x1]
    c228:	cmp	x24, x1
    c22c:	b.ne	c1fc <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x854>  // b.any
    c230:	str	w11, [sp, #576]
    c234:	b	bf00 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x558>
    c238:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c23c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c240:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c244:	add	x3, x3, #0x0
    c248:	add	x1, x1, #0x0
    c24c:	add	x0, x0, #0x0
    c250:	mov	w2, #0x22f                 	// #559
    c254:	bl	0 <__assert_fail>
    c258:	ldrb	w0, [x25, #125]
    c25c:	cbnz	w0, c5dc <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xc34>
    c260:	ldr	x21, [x25]
    c264:	mov	x1, #0x0                   	// #0
    c268:	mov	x0, x22
    c26c:	bl	250 <_ZL27QualifiedNameOfImplicitNameRN4llvm6RecordEPNS_10MultiClassE>
    c270:	mov	x2, x0
    c274:	add	x20, sp, #0x1f8
    c278:	mov	x1, x20
    c27c:	add	x0, sp, #0x230
    c280:	str	x2, [sp, #504]
    c284:	add	x23, sp, #0x218
    c288:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c28c:	mov	x3, x0
    c290:	mov	x1, x23
    c294:	mov	x0, x25
    c298:	mov	x2, #0x0                   	// #0
    c29c:	mov	w26, #0x18                  	// #24
    c2a0:	str	x21, [x3, #8]
    c2a4:	strb	wzr, [x3, #16]
    c2a8:	bl	0 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE>
    c2ac:	ldr	w7, [x22, #96]
    c2b0:	ldr	x23, [x22, #88]
    c2b4:	ldr	w5, [x25, #96]
    c2b8:	umaddl	x7, w7, w26, x23
    c2bc:	cmp	x7, x23
    c2c0:	b.eq	c3fc <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xa54>  // b.none
    c2c4:	add	x0, x25, #0x58
    c2c8:	ldr	x1, [x25, #88]
    c2cc:	mov	w6, w5
    c2d0:	ldr	x21, [x23]
    c2d4:	umaddl	x3, w5, w26, x1
    c2d8:	cmp	x1, x3
    c2dc:	b.eq	c50c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xb64>  // b.none
    c2e0:	mov	x2, x1
    c2e4:	b	c2f4 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x94c>
    c2e8:	add	x2, x2, #0x18
    c2ec:	cmp	x3, x2
    c2f0:	b.eq	c380 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x9d8>  // b.none
    c2f4:	ldr	x4, [x2]
    c2f8:	cmp	x21, x4
    c2fc:	b.ne	c2e8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x940>  // b.any
    c300:	ldr	x0, [x21]
    c304:	cbz	x0, c738 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xd90>
    c308:	ldrb	w1, [x0, #8]
    c30c:	cmp	w1, #0x12
    c310:	b.ne	c718 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xd70>  // b.any
    c314:	ldp	x3, x6, [x0, #24]
    c318:	add	x2, sp, #0x1a8
    c31c:	adrp	x4, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c320:	add	x4, x4, #0x0
    c324:	mov	w5, #0x503                 	// #1283
    c328:	stp	x3, x6, [sp, #424]
    c32c:	mov	w3, #0x1                   	// #1
    c330:	add	x21, sp, #0x1d8
    c334:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c338:	mov	x0, x21
    c33c:	add	x1, x1, #0x0
    c340:	str	w3, [sp, #104]
    c344:	stp	x4, x2, [sp, #448]
    c348:	strh	w5, [sp, #464]
    c34c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c350:	mov	x8, x20
    c354:	mov	x1, x21
    c358:	add	x0, sp, #0x1c0
    c35c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c360:	ldr	x4, [x19]
    c364:	mov	x2, x20
    c368:	add	x0, sp, #0x190
    c36c:	mov	x1, #0x1                   	// #1
    c370:	str	x4, [sp, #400]
    c374:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    c378:	ldr	w3, [sp, #104]
    c37c:	b	bdf8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x450>
    c380:	ldr	x2, [x25, #112]
    c384:	ldp	x28, x27, [x23, #8]
    c388:	cbz	x2, c39c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x9f4>
    c38c:	b	c518 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xb70>
    c390:	add	x1, x1, #0x18
    c394:	cmp	x3, x1
    c398:	b.eq	c3c8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xa20>  // b.none
    c39c:	ldr	x2, [x1]
    c3a0:	cmp	x21, x2
    c3a4:	b.ne	c390 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x9e8>  // b.any
    c3a8:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c3ac:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c3b0:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c3b4:	add	x3, x3, #0x0
    c3b8:	add	x1, x1, #0x0
    c3bc:	add	x0, x0, #0x0
    c3c0:	mov	w2, #0x630                 	// #1584
    c3c4:	bl	0 <__assert_fail>
    c3c8:	ldr	w1, [x25, #100]
    c3cc:	cmp	w1, w5
    c3d0:	b.ls	c494 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xaec>  // b.plast
    c3d4:	stp	x21, x28, [x3]
    c3d8:	add	x6, x6, #0x1
    c3dc:	cmp	x6, w1, uxtw
    c3e0:	str	x27, [x3, #16]
    c3e4:	b.hi	c7d0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xe28>  // b.pmore
    c3e8:	add	w5, w5, #0x1
    c3ec:	str	w5, [x25, #96]
    c3f0:	add	x23, x23, #0x18
    c3f4:	cmp	x7, x23
    c3f8:	b.ne	c2c8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x920>  // b.any
    c3fc:	ldr	x2, [x25, #88]
    c400:	mov	w1, #0x18                  	// #24
    c404:	mov	w4, w5
    c408:	umaddl	x1, w5, w1, x2
    c40c:	cmp	x2, x1
    c410:	b.eq	c658 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xcb0>  // b.none
    c414:	mov	x0, x2
    c418:	b	c428 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xa80>
    c41c:	add	x0, x0, #0x18
    c420:	cmp	x1, x0
    c424:	b.eq	c630 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xc88>  // b.none
    c428:	ldr	x3, [x0]
    c42c:	cmp	x22, x3
    c430:	b.ne	c41c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xa74>  // b.any
    c434:	ldr	x1, [x22]
    c438:	cbz	x1, c738 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xd90>
    c43c:	ldrb	w0, [x1, #8]
    c440:	cmp	w0, #0x12
    c444:	b.ne	c718 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xd70>  // b.any
    c448:	ldp	x3, x4, [x1, #24]
    c44c:	add	x2, sp, #0x1a8
    c450:	stp	x3, x4, [sp, #424]
    c454:	add	x21, sp, #0x1c0
    c458:	mov	x0, x21
    c45c:	mov	w3, #0x1                   	// #1
    c460:	add	x22, sp, #0x1d8
    c464:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c468:	add	x1, x1, #0x0
    c46c:	str	w3, [sp, #104]
    c470:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c474:	mov	x0, x22
    c478:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c47c:	add	x1, x1, #0x0
    c480:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c484:	mov	x8, x20
    c488:	mov	x1, x22
    c48c:	mov	x0, x21
    c490:	b	c35c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x9b4>
    c494:	mov	x1, #0x0                   	// #0
    c498:	stp	x0, x7, [sp, #104]
    c49c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c4a0:	ldp	w5, w1, [x25, #96]
    c4a4:	ldr	x3, [x25, #88]
    c4a8:	mov	w6, w5
    c4ac:	ldp	x0, x7, [sp, #104]
    c4b0:	umaddl	x3, w5, w26, x3
    c4b4:	b	c3d4 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xa2c>
    c4b8:	mov	w8, #0x1                   	// #1
    c4bc:	mov	x15, #0x0                   	// #0
    c4c0:	cmn	x1, #0x8
    c4c4:	b.ne	c6c4 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xd1c>  // b.any
    c4c8:	cmp	x15, #0x0
    c4cc:	ldr	w6, [sp, #576]
    c4d0:	csel	x15, x15, x14, ne  // ne = any
    c4d4:	add	w6, w6, #0x1
    c4d8:	str	x0, [x15]
    c4dc:	ldp	x0, x1, [x5, #8]
    c4e0:	stp	x0, x1, [x15, #8]
    c4e4:	str	w6, [sp, #576]
    c4e8:	b	bfbc <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x614>
    c4ec:	mov	w10, #0x1                   	// #1
    c4f0:	mov	x4, #0x0                   	// #0
    c4f4:	cmn	x3, #0x8
    c4f8:	b.ne	c750 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xda8>  // b.any
    c4fc:	cbz	x4, bef0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x548>
    c500:	mov	x9, x4
    c504:	ldr	x0, [x4]
    c508:	b	bef4 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x54c>
    c50c:	ldr	x1, [x25, #112]
    c510:	ldp	x28, x27, [x23, #8]
    c514:	cbz	x1, c3c8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xa20>
    c518:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c51c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c520:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c524:	add	x3, x3, #0x0
    c528:	add	x1, x1, #0x0
    c52c:	add	x0, x0, #0x0
    c530:	mov	w2, #0x62f                 	// #1583
    c534:	bl	0 <__assert_fail>
    c538:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c53c:	add	x3, x3, #0x0
    c540:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c544:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c548:	add	x1, x1, #0x0
    c54c:	add	x0, x0, #0x0
    c550:	mov	w2, #0x95                  	// #149
    c554:	bl	0 <__assert_fail>
    c558:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c55c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c560:	add	x1, x1, #0x0
    c564:	add	x0, x0, #0x0
    c568:	mov	w2, #0x614                 	// #1556
    c56c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    c570:	ldr	w1, [sp, #584]
    c574:	str	xzr, [sp, #576]
    c578:	sub	w0, w1, #0x1
    c57c:	tst	w0, w1
    c580:	b.ne	c790 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xde8>  // b.any
    c584:	umaddl	x3, w1, w28, x8
    c588:	cmp	x8, x3
    c58c:	b.eq	c154 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x7ac>  // b.none
    c590:	mov	x0, x8
    c594:	mov	x4, #0xfffffffffffffff8    	// #-8
    c598:	str	x4, [x0], #24
    c59c:	cmp	x3, x0
    c5a0:	b.ne	c598 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xbf0>  // b.any
    c5a4:	b	c154 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x7ac>
    c5a8:	add	w11, w11, w0
    c5ac:	cmp	x13, #0x0
    c5b0:	and	w11, w10, w11
    c5b4:	ccmn	x8, #0x10, #0x0, eq  // eq = none
    c5b8:	csel	x9, x9, x13, eq  // eq = none
    c5bc:	add	w0, w0, #0x1
    c5c0:	umull	x8, w11, w28
    c5c4:	add	x12, x4, x8
    c5c8:	ldr	x8, [x4, x8]
    c5cc:	cmp	x24, x8
    c5d0:	b.ne	c784 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xddc>  // b.any
    c5d4:	mov	x9, x12
    c5d8:	b	bb50 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x1a8>
    c5dc:	mov	x1, #0x0                   	// #0
    c5e0:	mov	x0, x25
    c5e4:	bl	250 <_ZL27QualifiedNameOfImplicitNameRN4llvm6RecordEPNS_10MultiClassE>
    c5e8:	adrp	x1, 0 <_ZN4llvm11StringRecTy6SharedE>
    c5ec:	ldr	x1, [x1]
    c5f0:	bl	0 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE>
    c5f4:	mov	x21, x0
    c5f8:	b	c264 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x8bc>
    c5fc:	ldr	w0, [sp, #584]
    c600:	str	xzr, [sp, #576]
    c604:	sub	w1, w0, #0x1
    c608:	tst	w1, w0
    c60c:	b.ne	c790 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xde8>  // b.any
    c610:	umaddl	x4, w0, w28, x10
    c614:	cmp	x10, x4
    c618:	b.eq	c1c4 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x81c>  // b.none
    c61c:	mov	x1, x10
    c620:	str	x8, [x1], #24
    c624:	cmp	x4, x1
    c628:	b.ne	c620 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xc78>  // b.any
    c62c:	b	c1c4 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x81c>
    c630:	ldr	x0, [x25, #112]
    c634:	cbz	x0, c648 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xca0>
    c638:	b	c518 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xb70>
    c63c:	add	x2, x2, #0x18
    c640:	cmp	x1, x2
    c644:	b.eq	c660 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xcb8>  // b.none
    c648:	ldr	x0, [x2]
    c64c:	cmp	x22, x0
    c650:	b.ne	c63c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xc94>  // b.any
    c654:	b	c3a8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xa00>
    c658:	ldr	x0, [x25, #112]
    c65c:	cbnz	x0, c518 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xb70>
    c660:	ldr	w0, [x25, #100]
    c664:	ldp	x20, x19, [x19]
    c668:	cmp	w5, w0
    c66c:	b.cs	c6f4 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xd4c>  // b.hs, b.nlast
    c670:	stp	x22, x20, [x1]
    c674:	add	x4, x4, #0x1
    c678:	cmp	x4, w0, uxtw
    c67c:	str	x19, [x1, #16]
    c680:	b.hi	c7d0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xe28>  // b.pmore
    c684:	add	w5, w5, #0x1
    c688:	mov	w3, #0x0                   	// #0
    c68c:	str	w5, [x25, #96]
    c690:	b	bdf8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x450>
    c694:	add	w5, w13, w5
    c698:	cmp	x14, #0x0
    c69c:	and	w5, w12, w5
    c6a0:	ccmn	x9, #0x10, #0x0, eq  // eq = none
    c6a4:	csel	x14, x14, x1, ne  // ne = any
    c6a8:	add	w13, w13, #0x1
    c6ac:	umull	x9, w5, w28
    c6b0:	add	x1, x8, x9
    c6b4:	ldr	x9, [x8, x9]
    c6b8:	cmp	x0, x9
    c6bc:	b.eq	bffc <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x654>  // b.none
    c6c0:	b	c10c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x764>
    c6c4:	add	w6, w6, w8
    c6c8:	cmp	x15, #0x0
    c6cc:	and	w6, w12, w6
    c6d0:	ccmn	x1, #0x10, #0x0, eq  // eq = none
    c6d4:	csel	x15, x15, x14, ne  // ne = any
    c6d8:	add	w8, w8, #0x1
    c6dc:	umull	x1, w6, w28
    c6e0:	add	x14, x10, x1
    c6e4:	ldr	x1, [x10, x1]
    c6e8:	cmp	x0, x1
    c6ec:	b.eq	bffc <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x654>  // b.none
    c6f0:	b	c4c0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xb18>
    c6f4:	add	x0, x25, #0x58
    c6f8:	mov	x1, #0x0                   	// #0
    c6fc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c700:	ldp	w5, w0, [x25, #96]
    c704:	mov	w1, #0x18                  	// #24
    c708:	ldr	x2, [x25, #88]
    c70c:	mov	w4, w5
    c710:	umaddl	x1, w5, w1, x2
    c714:	b	c670 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xcc8>
    c718:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c71c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c720:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c724:	add	x3, x3, #0x0
    c728:	add	x1, x1, #0x0
    c72c:	add	x0, x0, #0x0
    c730:	mov	w2, #0x108                 	// #264
    c734:	bl	0 <__assert_fail>
    c738:	bl	f0 <_ZN4llvm3isaINS_10StringInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    c73c:	bl	28 <_ZNK4llvm8ArrayRefIPNS_4InitEEixEm.isra.0.part.0>
    c740:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c744:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c748:	add	x3, x3, #0x0
    c74c:	b	c544 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xb9c>
    c750:	add	w0, w0, w10
    c754:	cmp	x4, #0x0
    c758:	and	w0, w1, w0
    c75c:	ccmn	x3, #0x10, #0x0, eq  // eq = none
    c760:	csel	x4, x4, x9, ne  // ne = any
    c764:	add	w10, w10, #0x1
    c768:	umull	x3, w0, w28
    c76c:	add	x9, x8, x3
    c770:	ldr	x3, [x8, x3]
    c774:	cmp	x24, x3
    c778:	b.ne	c4f4 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xb4c>  // b.any
    c77c:	str	w11, [sp, #576]
    c780:	b	bf00 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x558>
    c784:	mov	x13, x9
    c788:	mov	x9, x12
    c78c:	b	bea8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x500>
    c790:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c794:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c798:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c79c:	add	x3, x3, #0x0
    c7a0:	add	x1, x1, #0x0
    c7a4:	add	x0, x0, #0x0
    c7a8:	mov	w2, #0x15b                 	// #347
    c7ac:	bl	0 <__assert_fail>
    c7b0:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c7b4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c7b8:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c7bc:	add	x3, x3, #0x0
    c7c0:	add	x1, x1, #0x0
    c7c4:	add	x0, x0, #0x0
    c7c8:	mov	w2, #0x1b7                 	// #439
    c7cc:	bl	0 <__assert_fail>
    c7d0:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c7d4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c7d8:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c7dc:	add	x3, x3, #0x0
    c7e0:	add	x1, x1, #0x0
    c7e4:	add	x0, x0, #0x0
    c7e8:	mov	w2, #0x43                  	// #67
    c7ec:	bl	0 <__assert_fail>
    c7f0:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c7f4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c7f8:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c7fc:	add	x3, x3, #0x0
    c800:	add	x1, x1, #0x0
    c804:	add	x0, x0, #0x0
    c808:	mov	w2, #0x1b6                 	// #438
    c80c:	bl	0 <__assert_fail>
    c810:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c814:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c818:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c81c:	add	x3, x3, #0x0
    c820:	add	x1, x1, #0x0
    c824:	add	x0, x0, #0x0
    c828:	mov	w2, #0x250                 	// #592
    c82c:	bl	0 <__assert_fail>
    c830:	mov	x0, #0x0                   	// #0
    c834:	ldr	x0, [x0, #16]
    c838:	brk	#0x3e8
    c83c:	mov	x1, #0x0                   	// #0
    c840:	str	x0, [x1]
    c844:	brk	#0x3e8

000000000000c848 <_ZN4llvm8TGParser11AddSubClassERNS_12RecordsEntryERNS_17SubClassReferenceE>:
    c848:	mov	x3, x1
    c84c:	ldr	x1, [x1]
    c850:	cbz	x1, c858 <_ZN4llvm8TGParser11AddSubClassERNS_12RecordsEntryERNS_17SubClassReferenceE+0x10>
    c854:	b	b9a8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE>
    c858:	stp	x29, x30, [sp, #-48]!
    c85c:	mov	x29, sp
    c860:	stp	x19, x20, [sp, #16]
    c864:	mov	x20, x0
    c868:	ldr	x0, [x3, #8]
    c86c:	stp	x21, x22, [sp, #32]
    c870:	mov	x21, x2
    c874:	ldp	x19, x22, [x0, #24]
    c878:	cmp	x19, x22
    c87c:	b.eq	c8a4 <_ZN4llvm8TGParser11AddSubClassERNS_12RecordsEntryERNS_17SubClassReferenceE+0x5c>  // b.none
    c880:	mov	x1, x19
    c884:	mov	x2, x21
    c888:	mov	x0, x20
    c88c:	add	x19, x19, #0x10
    c890:	bl	c848 <_ZN4llvm8TGParser11AddSubClassERNS_12RecordsEntryERNS_17SubClassReferenceE>
    c894:	ands	w0, w0, #0xff
    c898:	b.ne	c8a8 <_ZN4llvm8TGParser11AddSubClassERNS_12RecordsEntryERNS_17SubClassReferenceE+0x60>  // b.any
    c89c:	cmp	x22, x19
    c8a0:	b.ne	c880 <_ZN4llvm8TGParser11AddSubClassERNS_12RecordsEntryERNS_17SubClassReferenceE+0x38>  // b.any
    c8a4:	mov	w0, #0x0                   	// #0
    c8a8:	ldp	x19, x20, [sp, #16]
    c8ac:	ldp	x21, x22, [sp, #32]
    c8b0:	ldp	x29, x30, [sp], #48
    c8b4:	ret

000000000000c8b8 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE>:
    c8b8:	sub	sp, sp, #0x350
    c8bc:	stp	x29, x30, [sp]
    c8c0:	mov	x29, sp
    c8c4:	str	x1, [sp, #120]
    c8c8:	ldr	w1, [x0, #40]
    c8cc:	stp	x19, x20, [sp, #16]
    c8d0:	cmp	w1, #0x1a
    c8d4:	b.ne	d69c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xde4>  // b.any
    c8d8:	ldp	x1, x2, [x0, #8]
    c8dc:	mov	x19, x0
    c8e0:	stp	x23, x24, [sp, #48]
    c8e4:	cmp	x2, x1
    c8e8:	cset	w1, eq  // eq = none
    c8ec:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    c8f0:	str	w0, [x19, #40]
    c8f4:	ldr	x1, [sp, #120]
    c8f8:	mov	x0, x19
    c8fc:	bl	ae20 <_ZN4llvm8TGParser15ParseObjectNameEPNS_10MultiClassE>
    c900:	str	x0, [sp, #128]
    c904:	cbz	x0, d270 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x9b8>
    c908:	ldrb	w0, [x0, #8]
    c90c:	cmp	w0, #0x18
    c910:	b.eq	d28c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x9d4>  // b.none
    c914:	ldr	w0, [x19, #40]
    c918:	cmp	w0, #0xc
    c91c:	b.eq	c970 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xb8>  // b.none
    c920:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c924:	add	x1, x1, #0x0
    c928:	add	x20, sp, #0x2c0
    c92c:	mov	w23, #0x1                   	// #1
    c930:	mov	x0, x20
    c934:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c938:	mov	x0, x19
    c93c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    c940:	mov	x3, x0
    c944:	mov	x2, x20
    c948:	add	x0, sp, #0x278
    c94c:	mov	x1, #0x1                   	// #1
    c950:	str	x3, [sp, #632]
    c954:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    c958:	mov	w0, w23
    c95c:	ldp	x29, x30, [sp]
    c960:	ldp	x19, x20, [sp, #16]
    c964:	ldp	x23, x24, [sp, #48]
    c968:	add	sp, sp, #0x350
    c96c:	ret
    c970:	ldp	x1, x2, [x19, #8]
    c974:	add	x20, sp, #0x230
    c978:	mov	x0, x19
    c97c:	stp	x21, x22, [sp, #32]
    c980:	stp	x25, x26, [sp, #64]
    c984:	cmp	x2, x1
    c988:	str	x20, [sp, #136]
    c98c:	cset	w1, eq  // eq = none
    c990:	stp	xzr, xzr, [sp, #192]
    c994:	str	xzr, [sp, #208]
    c998:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    c99c:	str	w0, [x19, #40]
    c9a0:	mov	x0, x19
    c9a4:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    c9a8:	mov	x3, x0
    c9ac:	mov	x8, x20
    c9b0:	mov	x0, x19
    c9b4:	mov	w2, #0x1                   	// #1
    c9b8:	mov	x1, #0x0                   	// #0
    c9bc:	str	x3, [sp, #176]
    c9c0:	bl	9ca8 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb>
    c9c4:	ldr	x0, [sp, #576]
    c9c8:	cbz	x0, ce14 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x55c>
    c9cc:	add	x1, sp, #0x278
    c9d0:	add	x21, sp, #0x2c0
    c9d4:	str	x1, [sp, #160]
    c9d8:	add	x1, sp, #0x290
    c9dc:	add	x2, x21, #0x10
    c9e0:	stp	x27, x28, [sp, #80]
    c9e4:	str	x2, [sp, #144]
    c9e8:	str	x1, [sp, #168]
    c9ec:	add	x1, sp, #0xb0
    c9f0:	str	x1, [sp, #152]
    c9f4:	ldr	x0, [x0]
    c9f8:	cbz	x0, d6ec <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xe34>
    c9fc:	ldrb	w1, [x0, #8]
    ca00:	cmp	w1, #0x12
    ca04:	b.ne	d65c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xda4>  // b.any
    ca08:	ldr	x1, [x0, #24]
    ca0c:	cbz	x1, cfa0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x6e8>
    ca10:	ldr	x4, [sp, #144]
    ca14:	mov	w3, #0x0                   	// #0
    ca18:	ldr	x2, [x0, #32]
    ca1c:	mov	x0, x21
    ca20:	str	x4, [sp, #704]
    ca24:	add	x2, x1, x2
    ca28:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ca2c:	ldr	x26, [x19, #240]
    ca30:	add	x28, x19, #0xe8
    ca34:	mov	x20, x28
    ca38:	cbz	x26, cf18 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x660>
    ca3c:	ldr	x22, [sp, #704]
    ca40:	mov	x23, #0x7fffffff            	// #2147483647
    ca44:	ldr	x24, [sp, #712]
    ca48:	mov	x25, #0xffffffff80000000    	// #-2147483648
    ca4c:	nop
    ca50:	ldr	x27, [x26, #40]
    ca54:	cmp	x27, x24
    ca58:	csel	x2, x27, x24, ls  // ls = plast
    ca5c:	cbz	x2, ca70 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x1b8>
    ca60:	ldr	x0, [x26, #32]
    ca64:	mov	x1, x22
    ca68:	bl	0 <memcmp>
    ca6c:	cbnz	w0, ca84 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x1cc>
    ca70:	sub	x0, x27, x24
    ca74:	cmp	x0, x23
    ca78:	b.gt	ca88 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x1d0>
    ca7c:	cmp	x0, x25
    ca80:	b.lt	cc28 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x370>  // b.tstop
    ca84:	tbnz	w0, #31, cc28 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x370>
    ca88:	mov	x20, x26
    ca8c:	ldr	x26, [x26, #16]
    ca90:	cbnz	x26, ca50 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x198>
    ca94:	cmp	x28, x20
    ca98:	b.eq	cf18 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x660>  // b.none
    ca9c:	add	x1, x20, #0x20
    caa0:	mov	x0, x21
    caa4:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>
    caa8:	tbnz	w0, #31, cf18 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x660>
    caac:	add	x0, x21, #0x10
    cab0:	cmp	x22, x0
    cab4:	ldr	x26, [x20, #64]
    cab8:	b.eq	cac4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x20c>  // b.none
    cabc:	mov	x0, x22
    cac0:	bl	0 <_ZdlPv>
    cac4:	cbz	x26, d67c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xdc4>
    cac8:	ldr	w28, [x26, #64]
    cacc:	ldr	w20, [sp, #592]
    cad0:	mov	w22, w28
    cad4:	ldr	x25, [x26, #56]
    cad8:	cmp	x20, w28, uxtw
    cadc:	ldr	x27, [sp, #584]
    cae0:	b.hi	d484 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xbcc>  // b.pmore
    cae4:	add	x1, x21, #0x10
    cae8:	mov	x0, #0x800000000           	// #34359738368
    caec:	str	x1, [sp, #704]
    caf0:	mov	x23, #0x0                   	// #0
    caf4:	str	x0, [sp, #712]
    caf8:	cbnz	w28, cb5c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x2a4>
    cafc:	b	cc4c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x394>
    cb00:	cmp	x22, x23
    cb04:	b.ls	d578 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xcc0>  // b.plast
    cb08:	ldr	w0, [sp, #712]
    cb0c:	ldr	w2, [sp, #716]
    cb10:	cmp	w0, w2
    cb14:	b.cs	cc34 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x37c>  // b.hs, b.nlast
    cb18:	ldr	x7, [sp, #704]
    cb1c:	ubfiz	x1, x0, #4, #32
    cb20:	ldr	x9, [x25, x23, lsl #3]
    cb24:	add	x8, x7, x1
    cb28:	str	x9, [x7, x1]
    cb2c:	mov	w1, w0
    cb30:	add	x1, x1, #0x1
    cb34:	ldr	x7, [x27, x23, lsl #3]
    cb38:	str	x7, [x8, #8]
    cb3c:	cmp	x1, w2, uxtw
    cb40:	b.hi	cc08 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x350>  // b.pmore
    cb44:	add	w0, w0, #0x1
    cb48:	str	w0, [sp, #712]
    cb4c:	cbz	w0, d558 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xca0>
    cb50:	add	x23, x23, #0x1
    cb54:	cmp	w28, w23
    cb58:	b.eq	cc4c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x394>  // b.none
    cb5c:	cmp	x20, x23
    cb60:	mov	w24, w23
    cb64:	b.hi	cb00 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x248>  // b.pmore
    cb68:	cmp	x22, x23
    cb6c:	b.ls	d6f0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xe38>  // b.plast
    cb70:	ldr	w2, [x26, #80]
    cb74:	mov	w1, #0x18                  	// #24
    cb78:	ldr	x0, [x26, #72]
    cb7c:	add	x3, x25, x23, lsl #3
    cb80:	ldr	x8, [x25, x23, lsl #3]
    cb84:	umaddl	x2, w2, w1, x0
    cb88:	cmp	x0, x2
    cb8c:	b.ne	cba0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x2e8>  // b.any
    cb90:	b	d714 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xe5c>
    cb94:	add	x0, x0, #0x18
    cb98:	cmp	x2, x0
    cb9c:	b.eq	d714 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xe5c>  // b.none
    cba0:	ldr	x1, [x0]
    cba4:	cmp	x8, x1
    cba8:	b.ne	cb94 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x2dc>  // b.any
    cbac:	ldr	x2, [x0, #16]
    cbb0:	stp	x2, x3, [sp, #104]
    cbb4:	mov	x0, x2
    cbb8:	ldr	x1, [x2]
    cbbc:	ldr	x1, [x1, #24]
    cbc0:	blr	x1
    cbc4:	tst	w0, #0xff
    cbc8:	ldp	x2, x3, [sp, #104]
    cbcc:	b.eq	cfb4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x6fc>  // b.none
    cbd0:	ldr	w0, [sp, #712]
    cbd4:	ldr	w7, [sp, #716]
    cbd8:	cmp	w0, w7
    cbdc:	b.cs	cef8 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x640>  // b.hs, b.nlast
    cbe0:	ldr	x8, [sp, #704]
    cbe4:	ubfiz	x1, x0, #4, #32
    cbe8:	ldr	x10, [x25, x23, lsl #3]
    cbec:	add	x9, x8, x1
    cbf0:	str	x10, [x8, x1]
    cbf4:	mov	w1, w0
    cbf8:	add	x1, x1, #0x1
    cbfc:	str	x2, [x9, #8]
    cc00:	cmp	x1, w7, uxtw
    cc04:	b.ls	cb44 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x28c>  // b.plast
    cc08:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    cc0c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    cc10:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    cc14:	add	x3, x3, #0x0
    cc18:	add	x1, x1, #0x0
    cc1c:	add	x0, x0, #0x0
    cc20:	mov	w2, #0x43                  	// #67
    cc24:	bl	0 <__assert_fail>
    cc28:	ldr	x26, [x26, #24]
    cc2c:	cbnz	x26, ca50 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x198>
    cc30:	b	ca94 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x1dc>
    cc34:	mov	x0, x21
    cc38:	mov	x1, #0x0                   	// #0
    cc3c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    cc40:	ldr	w0, [sp, #712]
    cc44:	ldr	w2, [sp, #716]
    cc48:	b	cb18 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x260>
    cc4c:	mov	x1, x26
    cc50:	mov	x0, x26
    cc54:	bl	250 <_ZL27QualifiedNameOfImplicitNameRN4llvm6RecordEPNS_10MultiClassE>
    cc58:	mov	x20, x0
    cc5c:	ldr	w1, [sp, #712]
    cc60:	ldr	w0, [sp, #716]
    cc64:	cmp	w1, w0
    cc68:	b.cs	d46c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xbb4>  // b.hs, b.nlast
    cc6c:	ldr	x4, [sp, #704]
    cc70:	ubfiz	x3, x1, #4, #32
    cc74:	mov	w2, w1
    cc78:	add	x6, x4, x3
    cc7c:	add	x2, x2, #0x1
    cc80:	cmp	x2, w0, uxtw
    cc84:	str	x20, [x4, x3]
    cc88:	ldr	x0, [sp, #128]
    cc8c:	str	x0, [x6, #8]
    cc90:	b.hi	cc08 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x350>  // b.pmore
    cc94:	add	w1, w1, #0x1
    cc98:	str	w1, [sp, #712]
    cc9c:	cbz	w1, d558 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xca0>
    cca0:	ldr	x0, [sp, #120]
    cca4:	add	x1, x26, #0x80
    cca8:	ldr	x5, [sp, #152]
    ccac:	cmp	x0, #0x0
    ccb0:	cset	w3, eq  // eq = none
    ccb4:	add	x4, sp, #0xc0
    ccb8:	mov	x2, x21
    ccbc:	mov	x0, x19
    ccc0:	bl	2030 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE>
    ccc4:	ands	w23, w0, #0xff
    ccc8:	b.ne	d14c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x894>  // b.any
    cccc:	ldr	w0, [x19, #40]
    ccd0:	cmp	w0, #0xe
    ccd4:	b.ne	d4b8 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xc00>  // b.any
    ccd8:	ldp	x2, x1, [x19, #8]
    ccdc:	mov	x0, x19
    cce0:	cmp	x2, x1
    cce4:	cset	w1, eq  // eq = none
    cce8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    ccec:	str	w0, [x19, #40]
    ccf0:	cmp	w0, #0x48
    ccf4:	b.ne	d530 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xc78>  // b.any
    ccf8:	mov	x0, x19
    ccfc:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    cd00:	ldr	w1, [x19, #40]
    cd04:	str	x0, [sp, #176]
    cd08:	sub	w1, w1, #0x48
    cd0c:	cmp	w1, #0x3
    cd10:	ldr	x25, [x19, #344]
    cd14:	b.hi	d6cc <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xe14>  // b.pmore
    cd18:	ldr	x28, [x25, #16]
    cd1c:	add	x25, x25, #0x8
    cd20:	ldp	x24, x26, [x19, #48]
    cd24:	cbz	x28, cda0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x4e8>
    cd28:	mov	x20, x25
    cd2c:	nop
    cd30:	ldp	x0, x22, [x28, #32]
    cd34:	cmp	x26, x22
    cd38:	b.cc	ce1c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x564>  // b.lo, b.ul, b.last
    cd3c:	cbz	x22, cd50 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x498>
    cd40:	mov	x2, x22
    cd44:	mov	x1, x24
    cd48:	bl	0 <memcmp>
    cd4c:	cbnz	w0, ce30 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x578>
    cd50:	cmp	x26, x22
    cd54:	b.eq	ce34 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x57c>  // b.none
    cd58:	cmp	x26, x22
    cd5c:	b.ls	ce34 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x57c>  // b.plast
    cd60:	ldr	x28, [x28, #24]
    cd64:	cbnz	x28, cd30 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x478>
    cd68:	cmp	x25, x20
    cd6c:	b.eq	cda0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x4e8>  // b.none
    cd70:	ldp	x1, x25, [x20, #32]
    cd74:	cmp	x26, x25
    cd78:	b.hi	ce44 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x58c>  // b.pmore
    cd7c:	cbz	x26, cd90 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x4d8>
    cd80:	mov	x0, x24
    cd84:	mov	x2, x26
    cd88:	bl	0 <memcmp>
    cd8c:	cbnz	w0, ce58 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x5a0>
    cd90:	cmp	x26, x25
    cd94:	b.eq	ce5c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x5a4>  // b.none
    cd98:	cmp	x26, x25
    cd9c:	b.cs	ce5c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x5a4>  // b.hs, b.nlast
    cda0:	ldr	x20, [sp, #160]
    cda4:	mov	x0, x19
    cda8:	mov	w2, #0x1                   	// #1
    cdac:	mov	x1, #0x0                   	// #0
    cdb0:	mov	x8, x20
    cdb4:	bl	9ca8 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb>
    cdb8:	add	x0, sp, #0x250
    cdbc:	add	x3, sp, #0x200
    cdc0:	ldr	x1, [sp, #168]
    cdc4:	ldp	x4, x5, [x0, #40]
    cdc8:	stp	x4, x5, [x3, #48]
    cdcc:	ldr	x2, [sp, #648]
    cdd0:	str	x2, [sp, #576]
    cdd4:	ldr	x0, [sp, #136]
    cdd8:	add	x0, x0, #0x18
    cddc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    cde0:	ldr	x0, [sp, #656]
    cde4:	add	x1, x20, #0x28
    cde8:	cmp	x0, x1
    cdec:	b.eq	cdf4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x53c>  // b.none
    cdf0:	bl	0 <free>
    cdf4:	ldr	x0, [sp, #704]
    cdf8:	add	x1, x21, #0x10
    cdfc:	cmp	x0, x1
    ce00:	b.eq	ce08 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x550>  // b.none
    ce04:	bl	0 <free>
    ce08:	ldr	x0, [sp, #576]
    ce0c:	cbnz	x0, c9f4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x13c>
    ce10:	ldp	x27, x28, [sp, #80]
    ce14:	mov	w23, #0x1                   	// #1
    ce18:	b	d164 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x8ac>
    ce1c:	cbz	x26, ce34 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x57c>
    ce20:	mov	x2, x26
    ce24:	mov	x1, x24
    ce28:	bl	0 <memcmp>
    ce2c:	cbz	w0, cd58 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x4a0>
    ce30:	tbnz	w0, #31, cd60 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x4a8>
    ce34:	mov	x20, x28
    ce38:	ldr	x28, [x28, #16]
    ce3c:	cbnz	x28, cd30 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x478>
    ce40:	b	cd68 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x4b0>
    ce44:	cbz	x25, ce5c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x5a4>
    ce48:	mov	x0, x24
    ce4c:	mov	x2, x25
    ce50:	bl	0 <memcmp>
    ce54:	cbz	w0, cd98 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x4e0>
    ce58:	tbnz	w0, #31, cda0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x4e8>
    ce5c:	ldr	x0, [x20, #64]
    ce60:	cbz	x0, cda0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x4e8>
    ce64:	ldr	x0, [sp, #704]
    ce68:	add	x1, x21, #0x10
    ce6c:	cmp	x0, x1
    ce70:	b.eq	ce78 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x5c0>  // b.none
    ce74:	bl	0 <free>
    ce78:	add	x20, sp, #0x278
    ce7c:	mov	x0, x19
    ce80:	mov	x8, x20
    ce84:	mov	w2, #0x0                   	// #0
    ce88:	mov	x1, #0x0                   	// #0
    ce8c:	bl	9ca8 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb>
    ce90:	ldr	x0, [sp, #648]
    ce94:	cbz	x0, ced8 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x620>
    ce98:	add	x28, x21, #0x18
    ce9c:	add	x27, x20, #0x18
    cea0:	add	x25, x21, #0x28
    cea4:	ldp	x22, x24, [sp, #192]
    cea8:	cmp	x24, x22
    ceac:	b.ne	cec0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x608>  // b.any
    ceb0:	b	d5cc <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xd14>
    ceb4:	add	x22, x22, #0x10
    ceb8:	cmp	x24, x22
    cebc:	b.eq	d5cc <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xd14>  // b.none
    cec0:	mov	x2, x20
    cec4:	mov	x1, x22
    cec8:	mov	x0, x19
    cecc:	bl	c848 <_ZN4llvm8TGParser11AddSubClassERNS_12RecordsEntryERNS_17SubClassReferenceE>
    ced0:	tst	w0, #0xff
    ced4:	b.eq	ceb4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x5fc>  // b.none
    ced8:	ldr	x0, [sp, #656]
    cedc:	add	x20, x20, #0x28
    cee0:	cmp	x0, x20
    cee4:	b.eq	ceec <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x634>  // b.none
    cee8:	bl	0 <free>
    ceec:	mov	w23, #0x1                   	// #1
    cef0:	ldp	x27, x28, [sp, #80]
    cef4:	b	d164 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x8ac>
    cef8:	mov	x0, x21
    cefc:	mov	x1, #0x0                   	// #0
    cf00:	str	x2, [sp, #104]
    cf04:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    cf08:	ldr	w0, [sp, #712]
    cf0c:	ldr	w7, [sp, #716]
    cf10:	ldr	x2, [sp, #104]
    cf14:	b	cbe0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x328>
    cf18:	mov	x0, #0x48                  	// #72
    cf1c:	bl	0 <_Znwm>
    cf20:	mov	x23, x0
    cf24:	add	x22, x0, #0x30
    cf28:	add	x2, x0, #0x20
    cf2c:	add	x1, x21, #0x10
    cf30:	ldr	x0, [sp, #704]
    cf34:	str	x22, [x23, #32]
    cf38:	cmp	x0, x1
    cf3c:	b.eq	d434 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xb7c>  // b.none
    cf40:	ldr	x1, [sp, #720]
    cf44:	str	x0, [x23, #32]
    cf48:	str	x1, [x23, #48]
    cf4c:	ldr	x3, [sp, #712]
    cf50:	add	x4, x21, #0x10
    cf54:	str	x3, [x23, #40]
    cf58:	add	x25, x19, #0xe0
    cf5c:	str	xzr, [x23, #64]
    cf60:	mov	x1, x20
    cf64:	mov	x0, x25
    cf68:	str	x4, [sp, #704]
    cf6c:	str	xzr, [sp, #712]
    cf70:	strb	wzr, [sp, #720]
    cf74:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    cf78:	mov	x20, x0
    cf7c:	mov	x2, x1
    cf80:	cbz	x1, d2cc <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xa14>
    cf84:	mov	x1, x0
    cf88:	mov	x3, x23
    cf8c:	mov	x0, x25
    cf90:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    cf94:	mov	x20, x0
    cf98:	ldr	x22, [sp, #704]
    cf9c:	b	caac <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x1f4>
    cfa0:	ldr	x0, [sp, #144]
    cfa4:	str	x0, [sp, #704]
    cfa8:	str	xzr, [sp, #712]
    cfac:	strb	wzr, [sp, #720]
    cfb0:	b	ca2c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x174>
    cfb4:	add	x20, sp, #0xf0
    cfb8:	add	x19, sp, #0x108
    cfbc:	mov	x0, x20
    cfc0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    cfc4:	add	x1, x1, #0x0
    cfc8:	str	x3, [sp, #104]
    cfcc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    cfd0:	str	xzr, [sp, #216]
    cfd4:	mov	w2, #0x109                 	// #265
    cfd8:	mov	x8, x19
    cfdc:	add	x22, sp, #0x120
    cfe0:	mov	x0, x20
    cfe4:	add	x1, sp, #0xd8
    cfe8:	str	w24, [sp, #216]
    cfec:	str	xzr, [sp, #224]
    cff0:	add	x23, sp, #0x138
    cff4:	strh	w2, [sp, #232]
    cff8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    cffc:	mov	x0, x22
    d000:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d004:	add	x1, x1, #0x0
    d008:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d00c:	mov	x1, x22
    d010:	mov	x0, x19
    d014:	mov	x8, x23
    d018:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d01c:	ldr	x3, [sp, #104]
    d020:	add	x2, sp, #0x1f8
    d024:	add	x4, sp, #0x1e0
    d028:	add	x20, sp, #0x210
    d02c:	mov	x8, x20
    d030:	stp	x2, x4, [sp, #104]
    d034:	add	x24, sp, #0x150
    d038:	ldr	x0, [x3]
    d03c:	add	x3, sp, #0x1c8
    d040:	str	x3, [sp, #120]
    d044:	add	x28, sp, #0x168
    d048:	add	x22, sp, #0x180
    d04c:	add	x25, sp, #0x198
    d050:	ldr	x1, [x0]
    d054:	add	x19, sp, #0x278
    d058:	add	x27, sp, #0x1b0
    d05c:	ldr	x1, [x1, #48]
    d060:	blr	x1
    d064:	mov	x0, x24
    d068:	mov	x1, x20
    d06c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d070:	mov	x8, x28
    d074:	mov	x1, x24
    d078:	mov	x0, x23
    d07c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d080:	mov	x0, x22
    d084:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d088:	add	x1, x1, #0x0
    d08c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d090:	mov	x1, x22
    d094:	mov	x0, x28
    d098:	mov	x8, x25
    d09c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d0a0:	ldr	x0, [x26]
    d0a4:	mov	x8, x19
    d0a8:	ldr	x1, [x0]
    d0ac:	ldr	x1, [x1, #48]
    d0b0:	blr	x1
    d0b4:	mov	x1, x19
    d0b8:	mov	x0, x27
    d0bc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d0c0:	add	x19, x19, #0x10
    d0c4:	ldr	x3, [sp, #120]
    d0c8:	mov	x1, x27
    d0cc:	mov	x0, x25
    d0d0:	mov	x23, x3
    d0d4:	mov	x8, x3
    d0d8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d0dc:	ldr	x4, [sp, #112]
    d0e0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d0e4:	add	x1, x1, #0x0
    d0e8:	mov	x24, x4
    d0ec:	mov	x0, x4
    d0f0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d0f4:	ldr	x2, [sp, #104]
    d0f8:	mov	x1, x24
    d0fc:	mov	x0, x23
    d100:	mov	x8, x2
    d104:	mov	x22, x2
    d108:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d10c:	ldr	x3, [sp, #176]
    d110:	add	x0, sp, #0xb8
    d114:	mov	x2, x22
    d118:	mov	x1, #0x1                   	// #1
    d11c:	str	x3, [sp, #184]
    d120:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    d124:	ldr	x0, [sp, #632]
    d128:	cmp	x0, x19
    d12c:	b.eq	d134 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x87c>  // b.none
    d130:	bl	0 <_ZdlPv>
    d134:	ldr	x0, [sp, #528]
    d138:	add	x20, x20, #0x10
    d13c:	cmp	x0, x20
    d140:	b.eq	d148 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x890>  // b.none
    d144:	bl	0 <_ZdlPv>
    d148:	mov	w23, #0x1                   	// #1
    d14c:	ldr	x0, [sp, #704]
    d150:	add	x21, x21, #0x10
    d154:	cmp	x0, x21
    d158:	b.eq	d464 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xbac>  // b.none
    d15c:	bl	0 <free>
    d160:	ldp	x27, x28, [sp, #80]
    d164:	ldr	x1, [sp, #136]
    d168:	ldr	x0, [sp, #584]
    d16c:	add	x26, x1, #0x28
    d170:	cmp	x0, x26
    d174:	b.eq	d17c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x8c4>  // b.none
    d178:	bl	0 <free>
    d17c:	ldp	x21, x24, [sp, #192]
    d180:	cmp	x21, x24
    d184:	b.eq	d244 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x98c>  // b.none
    d188:	ldr	x22, [x21, #8]
    d18c:	cbz	x22, d1d0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x918>
    d190:	ldp	x19, x20, [x22, #24]
    d194:	cmp	x19, x20
    d198:	b.eq	d1b8 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x900>  // b.none
    d19c:	nop
    d1a0:	mov	x0, x19
    d1a4:	add	x19, x19, #0x10
    d1a8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d1ac:	cmp	x20, x19
    d1b0:	b.ne	d1a0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x8e8>  // b.any
    d1b4:	ldr	x20, [x22, #24]
    d1b8:	cbz	x20, d1c4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x90c>
    d1bc:	mov	x0, x20
    d1c0:	bl	0 <_ZdlPv>
    d1c4:	mov	x0, x22
    d1c8:	mov	x1, #0x30                  	// #48
    d1cc:	bl	0 <_ZdlPvm>
    d1d0:	ldr	x19, [x21]
    d1d4:	cbz	x19, d234 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x97c>
    d1d8:	ldr	x0, [x19, #88]
    d1dc:	add	x1, x19, #0x68
    d1e0:	add	x22, x19, #0x58
    d1e4:	cmp	x0, x1
    d1e8:	b.eq	d1f0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x938>  // b.none
    d1ec:	bl	0 <free>
    d1f0:	ldr	x0, [x19, #72]
    d1f4:	add	x20, x19, #0x48
    d1f8:	cmp	x22, x0
    d1fc:	b.eq	d204 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x94c>  // b.none
    d200:	bl	0 <free>
    d204:	ldr	x0, [x19, #56]
    d208:	cmp	x20, x0
    d20c:	b.eq	d214 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x95c>  // b.none
    d210:	bl	0 <free>
    d214:	ldr	x0, [x19, #8]
    d218:	add	x1, x19, #0x18
    d21c:	cmp	x0, x1
    d220:	b.eq	d228 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x970>  // b.none
    d224:	bl	0 <free>
    d228:	mov	x0, x19
    d22c:	mov	x1, #0x80                  	// #128
    d230:	bl	0 <_ZdlPvm>
    d234:	add	x21, x21, #0x10
    d238:	cmp	x24, x21
    d23c:	b.ne	d188 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x8d0>  // b.any
    d240:	ldr	x24, [sp, #192]
    d244:	cbz	x24, d444 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xb8c>
    d248:	mov	x0, x24
    d24c:	bl	0 <_ZdlPv>
    d250:	mov	w0, w23
    d254:	ldp	x29, x30, [sp]
    d258:	ldp	x19, x20, [sp, #16]
    d25c:	ldp	x21, x22, [sp, #32]
    d260:	ldp	x23, x24, [sp, #48]
    d264:	ldp	x25, x26, [sp, #64]
    d268:	add	sp, sp, #0x350
    d26c:	ret
    d270:	mov	w23, #0x1                   	// #1
    d274:	mov	w0, w23
    d278:	ldp	x29, x30, [sp]
    d27c:	ldp	x19, x20, [sp, #16]
    d280:	ldp	x23, x24, [sp, #48]
    d284:	add	sp, sp, #0x350
    d288:	ret
    d28c:	ldr	x0, [x19, #344]
    d290:	bl	0 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv>
    d294:	str	x0, [sp, #128]
    d298:	ldr	x2, [sp, #120]
    d29c:	mov	x20, x0
    d2a0:	cbz	x2, c914 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x5c>
    d2a4:	mov	x1, x2
    d2a8:	mov	x0, x2
    d2ac:	bl	250 <_ZL27QualifiedNameOfImplicitNameRN4llvm6RecordEPNS_10MultiClassE>
    d2b0:	adrp	x1, 0 <_ZN4llvm11StringRecTy6SharedE>
    d2b4:	ldr	x1, [x1]
    d2b8:	bl	0 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE>
    d2bc:	mov	x1, x20
    d2c0:	bl	0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>
    d2c4:	str	x0, [sp, #128]
    d2c8:	b	c914 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x5c>
    d2cc:	ldr	x24, [x23, #64]
    d2d0:	cbz	x24, d414 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xb5c>
    d2d4:	ldp	x28, x0, [x24, #128]
    d2d8:	str	x0, [sp, #104]
    d2dc:	cmp	x28, x0
    d2e0:	b.eq	d3ac <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xaf4>  // b.none
    d2e4:	ldr	x27, [x28, #8]
    d2e8:	cbz	x27, d328 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xa70>
    d2ec:	ldp	x26, x25, [x27, #24]
    d2f0:	cmp	x26, x25
    d2f4:	b.eq	d310 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xa58>  // b.none
    d2f8:	mov	x0, x26
    d2fc:	add	x26, x26, #0x10
    d300:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d304:	cmp	x25, x26
    d308:	b.ne	d2f8 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xa40>  // b.any
    d30c:	ldr	x25, [x27, #24]
    d310:	cbz	x25, d31c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xa64>
    d314:	mov	x0, x25
    d318:	bl	0 <_ZdlPv>
    d31c:	mov	x0, x27
    d320:	mov	x1, #0x30                  	// #48
    d324:	bl	0 <_ZdlPvm>
    d328:	ldr	x25, [x28]
    d32c:	cbz	x25, d394 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xadc>
    d330:	ldr	x0, [x25, #88]
    d334:	add	x1, x25, #0x68
    d338:	add	x2, x25, #0x58
    d33c:	cmp	x0, x1
    d340:	b.eq	d350 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xa98>  // b.none
    d344:	str	x2, [sp, #112]
    d348:	bl	0 <free>
    d34c:	ldr	x2, [sp, #112]
    d350:	add	x27, x25, #0x48
    d354:	ldr	x0, [x25, #72]
    d358:	cmp	x2, x0
    d35c:	b.eq	d364 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xaac>  // b.none
    d360:	bl	0 <free>
    d364:	ldr	x0, [x25, #56]
    d368:	cmp	x27, x0
    d36c:	b.eq	d374 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xabc>  // b.none
    d370:	bl	0 <free>
    d374:	ldr	x0, [x25, #8]
    d378:	add	x1, x25, #0x18
    d37c:	cmp	x0, x1
    d380:	b.eq	d388 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xad0>  // b.none
    d384:	bl	0 <free>
    d388:	mov	x0, x25
    d38c:	mov	x1, #0x80                  	// #128
    d390:	bl	0 <_ZdlPvm>
    d394:	ldr	x0, [sp, #104]
    d398:	add	x28, x28, #0x10
    d39c:	cmp	x0, x28
    d3a0:	b.ne	d2e4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xa2c>  // b.any
    d3a4:	ldr	x0, [x24, #128]
    d3a8:	str	x0, [sp, #104]
    d3ac:	ldr	x0, [sp, #104]
    d3b0:	cbz	x0, d3b8 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xb00>
    d3b4:	bl	0 <_ZdlPv>
    d3b8:	ldr	x0, [x24, #88]
    d3bc:	add	x1, x24, #0x68
    d3c0:	add	x28, x24, #0x58
    d3c4:	cmp	x0, x1
    d3c8:	b.eq	d3d0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xb18>  // b.none
    d3cc:	bl	0 <free>
    d3d0:	ldr	x0, [x24, #72]
    d3d4:	add	x25, x24, #0x48
    d3d8:	cmp	x28, x0
    d3dc:	b.eq	d3e4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xb2c>  // b.none
    d3e0:	bl	0 <free>
    d3e4:	ldr	x0, [x24, #56]
    d3e8:	cmp	x25, x0
    d3ec:	b.eq	d3f4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xb3c>  // b.none
    d3f0:	bl	0 <free>
    d3f4:	ldr	x0, [x24, #8]
    d3f8:	add	x1, x24, #0x18
    d3fc:	cmp	x0, x1
    d400:	b.eq	d408 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xb50>  // b.none
    d404:	bl	0 <free>
    d408:	mov	x0, x24
    d40c:	mov	x1, #0x98                  	// #152
    d410:	bl	0 <_ZdlPvm>
    d414:	ldr	x0, [x23, #32]
    d418:	cmp	x22, x0
    d41c:	b.eq	d424 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xb6c>  // b.none
    d420:	bl	0 <_ZdlPv>
    d424:	mov	x0, x23
    d428:	bl	0 <_ZdlPv>
    d42c:	ldr	x22, [sp, #704]
    d430:	b	caac <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x1f4>
    d434:	add	x0, sp, #0x250
    d438:	ldp	x0, x1, [x0, #128]
    d43c:	stp	x0, x1, [x23, #48]
    d440:	b	cf4c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x694>
    d444:	mov	w0, w23
    d448:	ldp	x29, x30, [sp]
    d44c:	ldp	x19, x20, [sp, #16]
    d450:	ldp	x21, x22, [sp, #32]
    d454:	ldp	x23, x24, [sp, #48]
    d458:	ldp	x25, x26, [sp, #64]
    d45c:	add	sp, sp, #0x350
    d460:	ret
    d464:	ldp	x27, x28, [sp, #80]
    d468:	b	d164 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x8ac>
    d46c:	mov	x0, x21
    d470:	mov	x1, #0x0                   	// #0
    d474:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d478:	ldr	w1, [sp, #712]
    d47c:	ldr	w0, [sp, #716]
    d480:	b	cc6c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x3b4>
    d484:	mov	x0, x21
    d488:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d48c:	add	x1, x1, #0x0
    d490:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d494:	ldr	x3, [sp, #176]
    d498:	mov	x2, x21
    d49c:	add	x0, sp, #0x278
    d4a0:	mov	x1, #0x1                   	// #1
    d4a4:	mov	w23, #0x1                   	// #1
    d4a8:	str	x3, [sp, #632]
    d4ac:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    d4b0:	ldp	x27, x28, [sp, #80]
    d4b4:	b	d164 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x8ac>
    d4b8:	ldr	x0, [sp, #704]
    d4bc:	add	x1, x21, #0x10
    d4c0:	cmp	x0, x1
    d4c4:	b.eq	d4cc <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xc14>  // b.none
    d4c8:	bl	0 <free>
    d4cc:	ldp	x20, x22, [sp, #192]
    d4d0:	cmp	x22, x20
    d4d4:	b.ne	d510 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xc58>  // b.any
    d4d8:	b	d598 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xce0>
    d4dc:	ldp	x0, x2, [x20]
    d4e0:	str	xzr, [x20]
    d4e4:	str	x0, [sp, #704]
    d4e8:	mov	x1, x21
    d4ec:	str	xzr, [x20, #8]
    d4f0:	mov	x0, x19
    d4f4:	str	x2, [sp, #712]
    d4f8:	add	x20, x20, #0x10
    d4fc:	bl	3968 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE>
    d500:	mov	x0, x21
    d504:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d508:	cmp	x22, x20
    d50c:	b.eq	d598 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xce0>  // b.none
    d510:	mov	x1, x20
    d514:	mov	x0, x19
    d518:	bl	1688 <_ZN4llvm8TGParser13ApplyLetStackERNS_12RecordsEntryE>
    d51c:	ands	w0, w0, #0xff
    d520:	b.eq	d4dc <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xc24>  // b.none
    d524:	mov	w23, w0
    d528:	ldp	x27, x28, [sp, #80]
    d52c:	b	d164 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x8ac>
    d530:	add	x20, sp, #0x278
    d534:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d538:	mov	x0, x20
    d53c:	add	x1, x1, #0x0
    d540:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d544:	mov	x1, x20
    d548:	mov	x0, x19
    d54c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d550:	and	w23, w0, #0xff
    d554:	b	d14c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x894>
    d558:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d55c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d560:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d564:	add	x3, x3, #0x0
    d568:	add	x1, x1, #0x0
    d56c:	add	x0, x0, #0x0
    d570:	mov	w2, #0xa7                  	// #167
    d574:	bl	0 <__assert_fail>
    d578:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d57c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d580:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d584:	add	x3, x3, #0x0
    d588:	add	x1, x1, #0x0
    d58c:	add	x0, x0, #0x0
    d590:	mov	w2, #0xfa                  	// #250
    d594:	bl	0 <__assert_fail>
    d598:	ldr	w0, [x19, #40]
    d59c:	cmp	w0, #0xd
    d5a0:	b.eq	d6f4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xe3c>  // b.none
    d5a4:	mov	x0, x21
    d5a8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d5ac:	add	x1, x1, #0x0
    d5b0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d5b4:	mov	x1, x21
    d5b8:	mov	x0, x19
    d5bc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d5c0:	and	w23, w0, #0xff
    d5c4:	ldp	x27, x28, [sp, #80]
    d5c8:	b	d164 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x8ac>
    d5cc:	ldr	w0, [x19, #40]
    d5d0:	cmp	w0, #0xe
    d5d4:	b.ne	d644 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xd8c>  // b.any
    d5d8:	ldp	x2, x1, [x19, #8]
    d5dc:	mov	x0, x19
    d5e0:	cmp	x2, x1
    d5e4:	cset	w1, eq  // eq = none
    d5e8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    d5ec:	str	w0, [x19, #40]
    d5f0:	mov	x8, x21
    d5f4:	mov	x0, x19
    d5f8:	mov	w2, #0x0                   	// #0
    d5fc:	mov	x1, #0x0                   	// #0
    d600:	bl	9ca8 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb>
    d604:	add	x0, sp, #0x250
    d608:	add	x3, sp, #0x250
    d60c:	ldr	x2, [sp, #720]
    d610:	mov	x1, x28
    d614:	ldp	x4, x5, [x0, #112]
    d618:	mov	x0, x27
    d61c:	stp	x4, x5, [x3, #40]
    d620:	str	x2, [sp, #648]
    d624:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d628:	ldr	x0, [sp, #728]
    d62c:	cmp	x0, x25
    d630:	b.eq	d638 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xd80>  // b.none
    d634:	bl	0 <free>
    d638:	ldr	x0, [sp, #648]
    d63c:	cbnz	x0, cea4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x5ec>
    d640:	b	ced8 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x620>
    d644:	ldr	x0, [sp, #656]
    d648:	add	x20, x20, #0x28
    d64c:	cmp	x0, x20
    d650:	b.eq	d4cc <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xc14>  // b.none
    d654:	bl	0 <free>
    d658:	b	d4cc <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xc14>
    d65c:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d660:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d664:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d668:	add	x3, x3, #0x0
    d66c:	add	x1, x1, #0x0
    d670:	add	x0, x0, #0x0
    d674:	mov	w2, #0x108                 	// #264
    d678:	bl	0 <__assert_fail>
    d67c:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d680:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d684:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d688:	add	x3, x3, #0x0
    d68c:	add	x1, x1, #0x0
    d690:	add	x0, x0, #0x0
    d694:	mov	w2, #0xce2                 	// #3298
    d698:	bl	0 <__assert_fail>
    d69c:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d6a0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d6a4:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d6a8:	add	x3, x3, #0x0
    d6ac:	add	x1, x1, #0x0
    d6b0:	add	x0, x0, #0x0
    d6b4:	mov	w2, #0xcbd                 	// #3261
    d6b8:	stp	x21, x22, [sp, #32]
    d6bc:	stp	x23, x24, [sp, #48]
    d6c0:	stp	x25, x26, [sp, #64]
    d6c4:	stp	x27, x28, [sp, #80]
    d6c8:	bl	0 <__assert_fail>
    d6cc:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d6d0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d6d4:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d6d8:	add	x3, x3, #0x0
    d6dc:	add	x1, x1, #0x0
    d6e0:	add	x0, x0, #0x0
    d6e4:	mov	w2, #0x6f                  	// #111
    d6e8:	bl	0 <__assert_fail>
    d6ec:	bl	f0 <_ZN4llvm3isaINS_10StringInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    d6f0:	bl	28 <_ZNK4llvm8ArrayRefIPNS_4InitEEixEm.isra.0.part.0>
    d6f4:	ldp	x2, x1, [x19, #8]
    d6f8:	mov	x0, x19
    d6fc:	cmp	x2, x1
    d700:	cset	w1, eq  // eq = none
    d704:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    d708:	ldp	x27, x28, [sp, #80]
    d70c:	str	w0, [x19, #40]
    d710:	b	d164 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x8ac>
    d714:	mov	x0, #0x0                   	// #0
    d718:	ldr	x0, [x0, #16]
    d71c:	brk	#0x3e8

000000000000d720 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE>:
    d720:	stp	x29, x30, [sp, #-224]!
    d724:	mov	x29, sp
    d728:	stp	x19, x20, [sp, #16]
    d72c:	mov	x20, x1
    d730:	ldr	w1, [x0, #40]
    d734:	mov	x19, x0
    d738:	cmp	w1, #0xc
    d73c:	b.eq	d77c <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x5c>  // b.none
    d740:	mov	x1, x20
    d744:	mov	x0, x19
    d748:	bl	15c8 <_ZN4llvm8TGParser13ApplyLetStackEPNS_6RecordE>
    d74c:	ands	w0, w0, #0xff
    d750:	b.eq	d760 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x40>  // b.none
    d754:	ldp	x19, x20, [sp, #16]
    d758:	ldp	x29, x30, [sp], #224
    d75c:	ret
    d760:	mov	x1, x20
    d764:	mov	x0, x19
    d768:	bl	b680 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE>
    d76c:	and	w0, w0, #0xff
    d770:	ldp	x19, x20, [sp, #16]
    d774:	ldp	x29, x30, [sp], #224
    d778:	ret
    d77c:	ldp	x2, x1, [x0, #8]
    d780:	stp	x21, x22, [sp, #32]
    d784:	add	x21, sp, #0x50
    d788:	cmp	x2, x1
    d78c:	cset	w1, eq  // eq = none
    d790:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    d794:	str	w0, [x19, #40]
    d798:	mov	x8, x21
    d79c:	mov	x0, x19
    d7a0:	mov	x1, x20
    d7a4:	mov	w2, #0x0                   	// #0
    d7a8:	bl	9ca8 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb>
    d7ac:	ldr	x0, [sp, #96]
    d7b0:	cbz	x0, d860 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x140>
    d7b4:	add	x22, sp, #0x98
    d7b8:	stp	x23, x24, [sp, #48]
    d7bc:	add	x24, x22, #0x18
    d7c0:	add	x23, x22, #0x28
    d7c4:	str	x25, [sp, #64]
    d7c8:	add	x25, x21, #0x18
    d7cc:	b	d838 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x118>
    d7d0:	ldr	w1, [x19, #40]
    d7d4:	cmp	w1, #0xe
    d7d8:	b.ne	d888 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x168>  // b.any
    d7dc:	ldp	x2, x1, [x19, #8]
    d7e0:	cmp	x2, x1
    d7e4:	cset	w1, eq  // eq = none
    d7e8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    d7ec:	str	w0, [x19, #40]
    d7f0:	mov	x8, x22
    d7f4:	mov	x1, x20
    d7f8:	mov	x0, x19
    d7fc:	mov	w2, #0x0                   	// #0
    d800:	bl	9ca8 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb>
    d804:	ldp	x4, x5, [sp, #152]
    d808:	mov	x1, x24
    d80c:	ldr	x2, [sp, #168]
    d810:	mov	x0, x25
    d814:	stp	x4, x5, [sp, #80]
    d818:	str	x2, [sp, #96]
    d81c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d820:	ldr	x0, [sp, #176]
    d824:	cmp	x0, x23
    d828:	b.eq	d830 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x110>  // b.none
    d82c:	bl	0 <free>
    d830:	ldr	x0, [sp, #96]
    d834:	cbz	x0, d858 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x138>
    d838:	mov	x1, x20
    d83c:	mov	x2, x21
    d840:	mov	x0, x19
    d844:	bl	b9a8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE>
    d848:	mov	w1, w0
    d84c:	mov	x0, x19
    d850:	tst	w1, #0xff
    d854:	b.eq	d7d0 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0xb0>  // b.none
    d858:	ldp	x23, x24, [sp, #48]
    d85c:	ldr	x25, [sp, #64]
    d860:	add	x21, x21, #0x28
    d864:	ldr	x0, [sp, #104]
    d868:	cmp	x0, x21
    d86c:	b.eq	d874 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x154>  // b.none
    d870:	bl	0 <free>
    d874:	mov	w0, #0x1                   	// #1
    d878:	ldp	x19, x20, [sp, #16]
    d87c:	ldp	x21, x22, [sp, #32]
    d880:	ldp	x29, x30, [sp], #224
    d884:	ret
    d888:	ldr	x0, [sp, #104]
    d88c:	add	x21, x21, #0x28
    d890:	cmp	x0, x21
    d894:	b.eq	d8ac <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x18c>  // b.none
    d898:	bl	0 <free>
    d89c:	ldp	x21, x22, [sp, #32]
    d8a0:	ldp	x23, x24, [sp, #48]
    d8a4:	ldr	x25, [sp, #64]
    d8a8:	b	d740 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x20>
    d8ac:	ldp	x21, x22, [sp, #32]
    d8b0:	ldp	x23, x24, [sp, #48]
    d8b4:	ldr	x25, [sp, #64]
    d8b8:	b	d740 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x20>
    d8bc:	nop

000000000000d8c0 <_ZN4llvm8TGParser10ParseClassEv>:
    d8c0:	stp	x29, x30, [sp, #-208]!
    d8c4:	mov	x29, sp
    d8c8:	ldr	w1, [x0, #40]
    d8cc:	stp	x19, x20, [sp, #16]
    d8d0:	cmp	w1, #0x15
    d8d4:	b.ne	dc94 <_ZN4llvm8TGParser10ParseClassEv+0x3d4>  // b.any
    d8d8:	ldp	x1, x2, [x0, #8]
    d8dc:	mov	x19, x0
    d8e0:	cmp	x2, x1
    d8e4:	cset	w1, eq  // eq = none
    d8e8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    d8ec:	str	w0, [x19, #40]
    d8f0:	cmp	w0, #0x48
    d8f4:	b.eq	d93c <_ZN4llvm8TGParser10ParseClassEv+0x7c>  // b.none
    d8f8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d8fc:	add	x1, x1, #0x0
    d900:	add	x20, sp, #0xb0
    d904:	mov	x0, x20
    d908:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d90c:	mov	x0, x19
    d910:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    d914:	mov	x3, x0
    d918:	mov	x2, x20
    d91c:	add	x0, sp, #0x90
    d920:	mov	x1, #0x1                   	// #1
    d924:	str	x3, [sp, #144]
    d928:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    d92c:	mov	w0, #0x1                   	// #1
    d930:	ldp	x19, x20, [sp, #16]
    d934:	ldp	x29, x30, [sp], #208
    d938:	ret
    d93c:	ldr	x0, [x19, #344]
    d940:	stp	x21, x22, [sp, #32]
    d944:	stp	x23, x24, [sp, #48]
    d948:	add	x24, x0, #0x8
    d94c:	ldr	x20, [x0, #16]
    d950:	ldr	x22, [x19, #56]
    d954:	str	x25, [sp, #64]
    d958:	ldr	x25, [x19, #48]
    d95c:	cbz	x20, d9d8 <_ZN4llvm8TGParser10ParseClassEv+0x118>
    d960:	mov	x23, x24
    d964:	nop
    d968:	ldp	x0, x21, [x20, #32]
    d96c:	cmp	x22, x21
    d970:	b.cc	db40 <_ZN4llvm8TGParser10ParseClassEv+0x280>  // b.lo, b.ul, b.last
    d974:	cbz	x21, d988 <_ZN4llvm8TGParser10ParseClassEv+0xc8>
    d978:	mov	x2, x21
    d97c:	mov	x1, x25
    d980:	bl	0 <memcmp>
    d984:	cbnz	w0, db54 <_ZN4llvm8TGParser10ParseClassEv+0x294>
    d988:	cmp	x22, x21
    d98c:	b.eq	db58 <_ZN4llvm8TGParser10ParseClassEv+0x298>  // b.none
    d990:	cmp	x22, x21
    d994:	b.ls	db58 <_ZN4llvm8TGParser10ParseClassEv+0x298>  // b.plast
    d998:	ldr	x20, [x20, #24]
    d99c:	cbnz	x20, d968 <_ZN4llvm8TGParser10ParseClassEv+0xa8>
    d9a0:	cmp	x24, x23
    d9a4:	b.eq	d9d8 <_ZN4llvm8TGParser10ParseClassEv+0x118>  // b.none
    d9a8:	ldp	x1, x20, [x23, #32]
    d9ac:	cmp	x22, x20
    d9b0:	b.hi	db68 <_ZN4llvm8TGParser10ParseClassEv+0x2a8>  // b.pmore
    d9b4:	cbz	x22, d9c8 <_ZN4llvm8TGParser10ParseClassEv+0x108>
    d9b8:	mov	x0, x25
    d9bc:	mov	x2, x22
    d9c0:	bl	0 <memcmp>
    d9c4:	cbnz	w0, db7c <_ZN4llvm8TGParser10ParseClassEv+0x2bc>
    d9c8:	cmp	x22, x20
    d9cc:	b.eq	db80 <_ZN4llvm8TGParser10ParseClassEv+0x2c0>  // b.none
    d9d0:	cmp	x22, x20
    d9d4:	b.cs	db80 <_ZN4llvm8TGParser10ParseClassEv+0x2c0>  // b.hs, b.nlast
    d9d8:	mov	x0, x19
    d9dc:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    d9e0:	ldp	x23, x20, [x19, #48]
    d9e4:	mov	x21, x0
    d9e8:	mov	x0, #0x80                  	// #128
    d9ec:	ldr	x22, [x19, #344]
    d9f0:	bl	0 <_Znwm>
    d9f4:	mov	x1, x20
    d9f8:	mov	x20, x0
    d9fc:	mov	x0, x23
    da00:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    da04:	adrp	x1, 0 <_ZN4llvm6Record6LastIDE>
    da08:	mov	x2, x20
    da0c:	mov	x3, #0x1                   	// #1
    da10:	add	x7, x20, #0x48
    da14:	ldr	x1, [x1]
    da18:	str	x0, [x2], #24
    da1c:	movk	x3, #0x4, lsl #32
    da20:	add	x6, x20, #0x58
    da24:	stp	x2, x3, [x20, #8]
    da28:	add	x5, x20, #0x68
    da2c:	ldr	w2, [x1]
    da30:	mov	w4, #0x100                 	// #256
    da34:	str	x21, [x20, #24]
    da38:	add	w3, w2, #0x1
    da3c:	stp	x7, xzr, [x20, #56]
    da40:	mov	x0, x20
    da44:	stp	x6, xzr, [x20, #72]
    da48:	stp	x5, xzr, [x20, #88]
    da4c:	stp	x22, xzr, [x20, #104]
    da50:	str	w2, [x20, #120]
    da54:	strh	w4, [x20, #124]
    da58:	str	w3, [x1]
    da5c:	bl	0 <_ZN4llvm6Record9checkNameEv>
    da60:	ldr	x1, [x20]
    da64:	ldr	x0, [x19, #344]
    da68:	cbz	x1, dcc0 <_ZN4llvm8TGParser10ParseClassEv+0x400>
    da6c:	ldrb	w2, [x1, #8]
    da70:	cmp	w2, #0x12
    da74:	b.ne	dcc4 <_ZN4llvm8TGParser10ParseClassEv+0x404>  // b.any
    da78:	ldp	x3, x2, [x1, #24]
    da7c:	add	x1, sp, #0xb0
    da80:	stp	x3, x2, [sp, #176]
    da84:	str	x20, [sp, #192]
    da88:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    da8c:	and	w22, w1, #0xff
    da90:	ldr	x21, [sp, #192]
    da94:	cbz	x21, daf4 <_ZN4llvm8TGParser10ParseClassEv+0x234>
    da98:	ldr	x0, [x21, #88]
    da9c:	add	x1, x21, #0x68
    daa0:	add	x24, x21, #0x58
    daa4:	cmp	x0, x1
    daa8:	b.eq	dab0 <_ZN4llvm8TGParser10ParseClassEv+0x1f0>  // b.none
    daac:	bl	0 <free>
    dab0:	ldr	x0, [x21, #72]
    dab4:	add	x23, x21, #0x48
    dab8:	cmp	x24, x0
    dabc:	b.eq	dac4 <_ZN4llvm8TGParser10ParseClassEv+0x204>  // b.none
    dac0:	bl	0 <free>
    dac4:	ldr	x0, [x21, #56]
    dac8:	cmp	x23, x0
    dacc:	b.eq	dad4 <_ZN4llvm8TGParser10ParseClassEv+0x214>  // b.none
    dad0:	bl	0 <free>
    dad4:	ldr	x0, [x21, #8]
    dad8:	add	x1, x21, #0x18
    dadc:	cmp	x0, x1
    dae0:	b.eq	dae8 <_ZN4llvm8TGParser10ParseClassEv+0x228>  // b.none
    dae4:	bl	0 <free>
    dae8:	mov	x0, x21
    daec:	mov	x1, #0x80                  	// #128
    daf0:	bl	0 <_ZdlPvm>
    daf4:	cbz	w22, dce4 <_ZN4llvm8TGParser10ParseClassEv+0x424>
    daf8:	ldp	x2, x1, [x19, #8]
    dafc:	mov	x0, x19
    db00:	cmp	x2, x1
    db04:	cset	w1, eq  // eq = none
    db08:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    db0c:	str	w0, [x19, #40]
    db10:	cmp	w0, #0xa
    db14:	b.eq	dc70 <_ZN4llvm8TGParser10ParseClassEv+0x3b0>  // b.none
    db18:	mov	x1, x20
    db1c:	mov	x0, x19
    db20:	bl	d720 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE>
    db24:	and	w0, w0, #0xff
    db28:	ldp	x19, x20, [sp, #16]
    db2c:	ldp	x21, x22, [sp, #32]
    db30:	ldp	x23, x24, [sp, #48]
    db34:	ldr	x25, [sp, #64]
    db38:	ldp	x29, x30, [sp], #208
    db3c:	ret
    db40:	cbz	x22, db58 <_ZN4llvm8TGParser10ParseClassEv+0x298>
    db44:	mov	x2, x22
    db48:	mov	x1, x25
    db4c:	bl	0 <memcmp>
    db50:	cbz	w0, d990 <_ZN4llvm8TGParser10ParseClassEv+0xd0>
    db54:	tbnz	w0, #31, d998 <_ZN4llvm8TGParser10ParseClassEv+0xd8>
    db58:	mov	x23, x20
    db5c:	ldr	x20, [x20, #16]
    db60:	cbnz	x20, d968 <_ZN4llvm8TGParser10ParseClassEv+0xa8>
    db64:	b	d9a0 <_ZN4llvm8TGParser10ParseClassEv+0xe0>
    db68:	cbz	x20, db80 <_ZN4llvm8TGParser10ParseClassEv+0x2c0>
    db6c:	mov	x0, x25
    db70:	mov	x2, x20
    db74:	bl	0 <memcmp>
    db78:	cbz	w0, d9d0 <_ZN4llvm8TGParser10ParseClassEv+0x110>
    db7c:	tbnz	w0, #31, d9d8 <_ZN4llvm8TGParser10ParseClassEv+0x118>
    db80:	ldr	x20, [x23, #64]
    db84:	cbz	x20, d9d8 <_ZN4llvm8TGParser10ParseClassEv+0x118>
    db88:	ldr	w0, [x20, #80]
    db8c:	cbnz	w0, dba0 <_ZN4llvm8TGParser10ParseClassEv+0x2e0>
    db90:	ldr	w0, [x20, #96]
    db94:	cbnz	w0, dba0 <_ZN4llvm8TGParser10ParseClassEv+0x2e0>
    db98:	ldr	w0, [x20, #64]
    db9c:	cbz	w0, daf8 <_ZN4llvm8TGParser10ParseClassEv+0x238>
    dba0:	ldr	x0, [x20]
    dba4:	add	x21, sp, #0x70
    dba8:	mov	x8, x21
    dbac:	add	x22, sp, #0x90
    dbb0:	add	x20, sp, #0xb0
    dbb4:	add	x23, sp, #0x58
    dbb8:	ldr	x1, [x0]
    dbbc:	ldr	x1, [x1, #48]
    dbc0:	blr	x1
    dbc4:	mov	x1, x21
    dbc8:	mov	x8, x22
    dbcc:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    dbd0:	add	x0, x0, #0x0
    dbd4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    dbd8:	mov	x8, x20
    dbdc:	mov	x0, x22
    dbe0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    dbe4:	add	x1, x1, #0x0
    dbe8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    dbec:	mov	x1, x20
    dbf0:	mov	x0, x23
    dbf4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    dbf8:	add	x20, x20, #0x10
    dbfc:	mov	x0, x19
    dc00:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    dc04:	mov	x3, x0
    dc08:	mov	x2, x23
    dc0c:	add	x0, sp, #0x50
    dc10:	mov	x1, #0x1                   	// #1
    dc14:	str	x3, [sp, #80]
    dc18:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    dc1c:	ldr	x0, [sp, #176]
    dc20:	cmp	x0, x20
    dc24:	b.eq	dc2c <_ZN4llvm8TGParser10ParseClassEv+0x36c>  // b.none
    dc28:	bl	0 <_ZdlPv>
    dc2c:	ldr	x0, [sp, #144]
    dc30:	add	x22, x22, #0x10
    dc34:	cmp	x0, x22
    dc38:	b.eq	dc40 <_ZN4llvm8TGParser10ParseClassEv+0x380>  // b.none
    dc3c:	bl	0 <_ZdlPv>
    dc40:	ldr	x0, [sp, #112]
    dc44:	add	x21, x21, #0x10
    dc48:	cmp	x0, x21
    dc4c:	b.eq	dc54 <_ZN4llvm8TGParser10ParseClassEv+0x394>  // b.none
    dc50:	bl	0 <_ZdlPv>
    dc54:	mov	w0, #0x1                   	// #1
    dc58:	ldp	x19, x20, [sp, #16]
    dc5c:	ldp	x21, x22, [sp, #32]
    dc60:	ldp	x23, x24, [sp, #48]
    dc64:	ldr	x25, [sp, #64]
    dc68:	ldp	x29, x30, [sp], #208
    dc6c:	ret
    dc70:	mov	x1, x20
    dc74:	mov	x0, x19
    dc78:	bl	b290 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE>
    dc7c:	ands	w0, w0, #0xff
    dc80:	b.eq	db18 <_ZN4llvm8TGParser10ParseClassEv+0x258>  // b.none
    dc84:	ldp	x21, x22, [sp, #32]
    dc88:	ldp	x23, x24, [sp, #48]
    dc8c:	ldr	x25, [sp, #64]
    dc90:	b	d930 <_ZN4llvm8TGParser10ParseClassEv+0x70>
    dc94:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    dc98:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    dc9c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    dca0:	add	x3, x3, #0x0
    dca4:	add	x1, x1, #0x0
    dca8:	add	x0, x0, #0x0
    dcac:	mov	w2, #0xbd6                 	// #3030
    dcb0:	stp	x21, x22, [sp, #32]
    dcb4:	stp	x23, x24, [sp, #48]
    dcb8:	str	x25, [sp, #64]
    dcbc:	bl	0 <__assert_fail>
    dcc0:	bl	f0 <_ZN4llvm3isaINS_10StringInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    dcc4:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    dcc8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    dccc:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    dcd0:	add	x3, x3, #0x0
    dcd4:	add	x1, x1, #0x0
    dcd8:	add	x0, x0, #0x0
    dcdc:	mov	w2, #0x108                 	// #264
    dce0:	bl	0 <__assert_fail>
    dce4:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    dce8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    dcec:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    dcf0:	add	x3, x3, #0x0
    dcf4:	add	x1, x1, #0x0
    dcf8:	add	x0, x0, #0x0
    dcfc:	mov	w2, #0x6c0                 	// #1728
    dd00:	bl	0 <__assert_fail>
    dd04:	nop

000000000000dd08 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE>:
    dd08:	stp	x29, x30, [sp, #-112]!
    dd0c:	mov	x29, sp
    dd10:	stp	x19, x20, [sp, #16]
    dd14:	mov	x20, x0
    dd18:	mov	x19, x1
    dd1c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    dd20:	ldr	w1, [x20, #40]
    dd24:	stp	x21, x22, [sp, #32]
    dd28:	cmp	w1, #0x18
    dd2c:	b.ne	dfc0 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x2b8>  // b.any
    dd30:	ldp	x1, x2, [x20, #8]
    dd34:	mov	x22, x0
    dd38:	mov	x0, x20
    dd3c:	cmp	x2, x1
    dd40:	cset	w1, eq  // eq = none
    dd44:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    dd48:	str	w0, [x20, #40]
    dd4c:	mov	x1, x19
    dd50:	mov	x0, x20
    dd54:	bl	ae20 <_ZN4llvm8TGParser15ParseObjectNameEPNS_10MultiClassE>
    dd58:	mov	x21, x0
    dd5c:	cbz	x0, dfa8 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x2a0>
    dd60:	ldrb	w0, [x0, #8]
    dd64:	stp	x23, x24, [sp, #48]
    dd68:	cmp	w0, #0x18
    dd6c:	stp	x25, x26, [sp, #64]
    dd70:	str	x27, [sp, #80]
    dd74:	ldr	x27, [x20, #344]
    dd78:	b.eq	df10 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x208>  // b.none
    dd7c:	mov	x0, #0x80                  	// #128
    dd80:	bl	0 <_Znwm>
    dd84:	adrp	x1, 0 <_ZN4llvm6Record6LastIDE>
    dd88:	mov	x23, x0
    dd8c:	mov	x2, #0x1                   	// #1
    dd90:	add	x24, x0, #0x48
    dd94:	ldr	x1, [x1]
    dd98:	str	x21, [x23], #24
    dd9c:	movk	x2, #0x4, lsl #32
    dda0:	add	x25, x0, #0x58
    dda4:	stp	x23, x2, [x0, #8]
    dda8:	add	x26, x0, #0x68
    ddac:	ldr	w2, [x1]
    ddb0:	str	x22, [x0, #24]
    ddb4:	mov	x19, x0
    ddb8:	add	w3, w2, #0x1
    ddbc:	stp	x24, xzr, [x0, #56]
    ddc0:	stp	x25, xzr, [x0, #72]
    ddc4:	stp	x26, xzr, [x0, #88]
    ddc8:	stp	x27, xzr, [x0, #104]
    ddcc:	str	w2, [x0, #120]
    ddd0:	strh	wzr, [x0, #124]
    ddd4:	str	w3, [x1]
    ddd8:	bl	0 <_ZN4llvm6Record9checkNameEv>
    dddc:	mov	x1, x19
    dde0:	mov	x0, x20
    dde4:	bl	d720 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE>
    dde8:	ands	w21, w0, #0xff
    ddec:	b.ne	decc <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x1c4>  // b.any
    ddf0:	mov	x0, x20
    ddf4:	add	x1, sp, #0x60
    ddf8:	stp	x19, xzr, [sp, #96]
    ddfc:	bl	3968 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE>
    de00:	and	w21, w0, #0xff
    de04:	ldr	x22, [sp, #104]
    de08:	cbz	x22, de48 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x140>
    de0c:	ldp	x19, x20, [x22, #24]
    de10:	cmp	x19, x20
    de14:	b.eq	de30 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x128>  // b.none
    de18:	mov	x0, x19
    de1c:	add	x19, x19, #0x10
    de20:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    de24:	cmp	x20, x19
    de28:	b.ne	de18 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x110>  // b.any
    de2c:	ldr	x20, [x22, #24]
    de30:	cbz	x20, de3c <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x134>
    de34:	mov	x0, x20
    de38:	bl	0 <_ZdlPv>
    de3c:	mov	x0, x22
    de40:	mov	x1, #0x30                  	// #48
    de44:	bl	0 <_ZdlPvm>
    de48:	ldr	x19, [sp, #96]
    de4c:	cbz	x19, df88 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x280>
    de50:	ldr	x0, [x19, #88]
    de54:	add	x1, x19, #0x68
    de58:	add	x22, x19, #0x58
    de5c:	cmp	x0, x1
    de60:	b.eq	de68 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x160>  // b.none
    de64:	bl	0 <free>
    de68:	ldr	x0, [x19, #72]
    de6c:	add	x20, x19, #0x48
    de70:	cmp	x22, x0
    de74:	b.eq	de7c <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x174>  // b.none
    de78:	bl	0 <free>
    de7c:	ldr	x0, [x19, #56]
    de80:	cmp	x20, x0
    de84:	b.eq	de8c <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x184>  // b.none
    de88:	bl	0 <free>
    de8c:	ldr	x0, [x19, #8]
    de90:	add	x1, x19, #0x18
    de94:	cmp	x0, x1
    de98:	b.eq	dea0 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x198>  // b.none
    de9c:	bl	0 <free>
    dea0:	mov	x0, x19
    dea4:	mov	x1, #0x80                  	// #128
    dea8:	bl	0 <_ZdlPvm>
    deac:	mov	w0, w21
    deb0:	ldp	x19, x20, [sp, #16]
    deb4:	ldp	x21, x22, [sp, #32]
    deb8:	ldp	x23, x24, [sp, #48]
    debc:	ldp	x25, x26, [sp, #64]
    dec0:	ldr	x27, [sp, #80]
    dec4:	ldp	x29, x30, [sp], #112
    dec8:	ret
    decc:	ldr	x0, [x19, #88]
    ded0:	cmp	x0, x26
    ded4:	b.eq	dedc <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x1d4>  // b.none
    ded8:	bl	0 <free>
    dedc:	ldr	x0, [x19, #72]
    dee0:	cmp	x25, x0
    dee4:	b.eq	deec <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x1e4>  // b.none
    dee8:	bl	0 <free>
    deec:	ldr	x0, [x19, #56]
    def0:	cmp	x24, x0
    def4:	b.eq	defc <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x1f4>  // b.none
    def8:	bl	0 <free>
    defc:	ldr	x0, [x19, #8]
    df00:	cmp	x0, x23
    df04:	b.eq	dea0 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x198>  // b.none
    df08:	bl	0 <free>
    df0c:	b	dea0 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x198>
    df10:	mov	x0, x27
    df14:	bl	0 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv>
    df18:	mov	x21, x0
    df1c:	mov	x0, #0x80                  	// #128
    df20:	ldr	x27, [x20, #344]
    df24:	bl	0 <_Znwm>
    df28:	adrp	x1, 0 <_ZN4llvm6Record6LastIDE>
    df2c:	mov	x23, x0
    df30:	mov	x2, #0x1                   	// #1
    df34:	add	x24, x0, #0x48
    df38:	ldr	x1, [x1]
    df3c:	str	x21, [x23], #24
    df40:	movk	x2, #0x4, lsl #32
    df44:	add	x25, x0, #0x58
    df48:	stp	x23, x2, [x0, #8]
    df4c:	add	x26, x0, #0x68
    df50:	ldr	w2, [x1]
    df54:	mov	w4, #0x1                   	// #1
    df58:	str	x22, [x0, #24]
    df5c:	add	w3, w2, #0x1
    df60:	stp	x24, xzr, [x0, #56]
    df64:	mov	x19, x0
    df68:	stp	x25, xzr, [x0, #72]
    df6c:	stp	x26, xzr, [x0, #88]
    df70:	stp	x27, xzr, [x0, #104]
    df74:	str	w2, [x0, #120]
    df78:	strh	w4, [x0, #124]
    df7c:	str	w3, [x1]
    df80:	bl	0 <_ZN4llvm6Record9checkNameEv>
    df84:	b	dddc <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0xd4>
    df88:	mov	w0, w21
    df8c:	ldp	x19, x20, [sp, #16]
    df90:	ldp	x21, x22, [sp, #32]
    df94:	ldp	x23, x24, [sp, #48]
    df98:	ldp	x25, x26, [sp, #64]
    df9c:	ldr	x27, [sp, #80]
    dfa0:	ldp	x29, x30, [sp], #112
    dfa4:	ret
    dfa8:	mov	w21, #0x1                   	// #1
    dfac:	mov	w0, w21
    dfb0:	ldp	x19, x20, [sp, #16]
    dfb4:	ldp	x21, x22, [sp, #32]
    dfb8:	ldp	x29, x30, [sp], #112
    dfbc:	ret
    dfc0:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    dfc4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    dfc8:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    dfcc:	add	x3, x3, #0x0
    dfd0:	add	x1, x1, #0x0
    dfd4:	add	x0, x0, #0x0
    dfd8:	mov	w2, #0xac0                 	// #2752
    dfdc:	stp	x23, x24, [sp, #48]
    dfe0:	stp	x25, x26, [sp, #64]
    dfe4:	str	x27, [sp, #80]
    dfe8:	bl	0 <__assert_fail>
    dfec:	nop

000000000000dff0 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE>:
    dff0:	sub	sp, sp, #0x2c0
    dff4:	stp	x29, x30, [sp]
    dff8:	mov	x29, sp
    dffc:	stp	x21, x22, [sp, #32]
    e000:	mov	x22, x1
    e004:	ldr	w1, [x0, #40]
    e008:	stp	x19, x20, [sp, #16]
    e00c:	cmp	w1, #0x1e
    e010:	stp	x23, x24, [sp, #48]
    e014:	b.ne	e3e8 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x3f8>  // b.any
    e018:	ldp	x1, x2, [x0, #8]
    e01c:	mov	x19, x0
    e020:	add	x21, sp, #0x130
    e024:	mov	w24, #0x1                   	// #1
    e028:	cmp	x2, x1
    e02c:	cset	w1, eq  // eq = none
    e030:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    e034:	str	w0, [x19, #40]
    e038:	add	x3, x21, #0x10
    e03c:	mov	x2, #0x800000000           	// #34359738368
    e040:	mov	x0, x19
    e044:	mov	x1, x21
    e048:	stp	x3, x2, [sp, #304]
    e04c:	bl	a748 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE>
    e050:	ldr	w0, [sp, #312]
    e054:	cbnz	w0, e088 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x98>
    e058:	ldr	x0, [sp, #304]
    e05c:	add	x21, x21, #0x10
    e060:	cmp	x0, x21
    e064:	b.eq	e06c <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x7c>  // b.none
    e068:	bl	0 <free>
    e06c:	mov	w0, w24
    e070:	ldp	x29, x30, [sp]
    e074:	ldp	x19, x20, [sp, #16]
    e078:	ldp	x21, x22, [sp, #32]
    e07c:	ldp	x23, x24, [sp, #48]
    e080:	add	sp, sp, #0x2c0
    e084:	ret
    e088:	add	x23, sp, #0x60
    e08c:	add	x24, x19, #0xc8
    e090:	add	x2, x23, #0x10
    e094:	mov	x1, x21
    e098:	mov	x0, x23
    e09c:	mov	x20, #0x400000000           	// #17179869184
    e0a0:	stp	x2, x20, [sp, #96]
    e0a4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e0a8:	ldp	x0, x1, [x24, #8]
    e0ac:	cmp	x0, x1
    e0b0:	b.eq	e328 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x338>  // b.none
    e0b4:	add	x1, x0, #0x10
    e0b8:	stp	x1, x20, [x0]
    e0bc:	ldr	w20, [sp, #104]
    e0c0:	cbnz	w20, e318 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x328>
    e0c4:	ldr	x0, [x24, #8]
    e0c8:	add	x0, x0, #0xd0
    e0cc:	str	x0, [x24, #8]
    e0d0:	ldr	x24, [sp, #96]
    e0d4:	mov	w0, #0x30                  	// #48
    e0d8:	umaddl	x20, w20, w0, x24
    e0dc:	cmp	x24, x20
    e0e0:	b.eq	e104 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x114>  // b.none
    e0e4:	nop
    e0e8:	ldur	x0, [x20, #-40]
    e0ec:	sub	x20, x20, #0x30
    e0f0:	cbz	x0, e0f8 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x108>
    e0f4:	bl	0 <_ZdlPv>
    e0f8:	cmp	x24, x20
    e0fc:	b.ne	e0e8 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0xf8>  // b.any
    e100:	ldr	x20, [sp, #96]
    e104:	add	x0, x23, #0x10
    e108:	cmp	x20, x0
    e10c:	b.eq	e118 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x128>  // b.none
    e110:	mov	x0, x20
    e114:	bl	0 <free>
    e118:	ldr	w0, [x19, #40]
    e11c:	cmp	w0, #0x1c
    e120:	b.eq	e18c <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x19c>  // b.none
    e124:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e128:	add	x1, x1, #0x0
    e12c:	mov	x0, x23
    e130:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e134:	mov	x0, x19
    e138:	mov	w24, #0x1                   	// #1
    e13c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    e140:	mov	x3, x0
    e144:	mov	x2, x23
    e148:	add	x0, sp, #0x58
    e14c:	mov	x1, #0x1                   	// #1
    e150:	str	x3, [sp, #88]
    e154:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    e158:	ldr	w19, [sp, #312]
    e15c:	mov	w0, #0x30                  	// #48
    e160:	ldr	x20, [sp, #304]
    e164:	umaddl	x19, w19, w0, x20
    e168:	cmp	x20, x19
    e16c:	b.eq	e058 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x68>  // b.none
    e170:	ldur	x0, [x19, #-40]
    e174:	sub	x19, x19, #0x30
    e178:	cbz	x0, e168 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x178>
    e17c:	bl	0 <_ZdlPv>
    e180:	cmp	x20, x19
    e184:	b.ne	e170 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x180>  // b.any
    e188:	b	e058 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x68>
    e18c:	ldp	x2, x1, [x19, #8]
    e190:	mov	x0, x19
    e194:	cmp	x2, x1
    e198:	cset	w1, eq  // eq = none
    e19c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    e1a0:	str	w0, [x19, #40]
    e1a4:	mov	x0, x19
    e1a8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e1ac:	mov	x20, x0
    e1b0:	ldr	w1, [x19, #40]
    e1b4:	cmp	w1, #0x6
    e1b8:	b.eq	e340 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x350>  // b.none
    e1bc:	mov	x1, x22
    e1c0:	mov	x0, x19
    e1c4:	bl	e430 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE>
    e1c8:	ands	w24, w0, #0xff
    e1cc:	b.ne	e158 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x168>  // b.any
    e1d0:	ldr	x0, [x19, #336]
    e1d4:	cmp	x20, x0
    e1d8:	b.ne	e40c <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x41c>  // b.any
    e1dc:	ldr	x0, [x20, #48]
    e1e0:	str	xzr, [x20, #48]
    e1e4:	ldr	x20, [x19, #336]
    e1e8:	str	x0, [x19, #336]
    e1ec:	cbz	x20, e2bc <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x2cc>
    e1f0:	ldr	x22, [x20, #48]
    e1f4:	cbz	x22, e2a4 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x2b4>
    e1f8:	ldr	x23, [x22, #48]
    e1fc:	cbz	x23, e28c <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x29c>
    e200:	ldr	x24, [x23, #48]
    e204:	cbz	x24, e274 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x284>
    e208:	stp	x25, x26, [sp, #64]
    e20c:	ldr	x25, [x24, #48]
    e210:	cbz	x25, e258 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x268>
    e214:	ldr	x26, [x25, #48]
    e218:	cbz	x26, e240 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x250>
    e21c:	ldr	x0, [x26, #48]
    e220:	cbz	x0, e228 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x238>
    e224:	bl	16f8 <_ZNKSt14default_deleteIN4llvm15TGLocalVarScopeEEclEPS1_.isra.0.part.0>
    e228:	ldr	x1, [x26, #16]
    e22c:	mov	x0, x26
    e230:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e234:	mov	x0, x26
    e238:	mov	x1, #0x38                  	// #56
    e23c:	bl	0 <_ZdlPvm>
    e240:	ldr	x1, [x25, #16]
    e244:	mov	x0, x25
    e248:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e24c:	mov	x0, x25
    e250:	mov	x1, #0x38                  	// #56
    e254:	bl	0 <_ZdlPvm>
    e258:	ldr	x1, [x24, #16]
    e25c:	mov	x0, x24
    e260:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e264:	mov	x0, x24
    e268:	mov	x1, #0x38                  	// #56
    e26c:	bl	0 <_ZdlPvm>
    e270:	ldp	x25, x26, [sp, #64]
    e274:	mov	x0, x23
    e278:	ldr	x1, [x23, #16]
    e27c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e280:	mov	x0, x23
    e284:	mov	x1, #0x38                  	// #56
    e288:	bl	0 <_ZdlPvm>
    e28c:	ldr	x1, [x22, #16]
    e290:	mov	x0, x22
    e294:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e298:	mov	x0, x22
    e29c:	mov	x1, #0x38                  	// #56
    e2a0:	bl	0 <_ZdlPvm>
    e2a4:	ldr	x1, [x20, #16]
    e2a8:	mov	x0, x20
    e2ac:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e2b0:	mov	x0, x20
    e2b4:	mov	x1, #0x38                  	// #56
    e2b8:	bl	0 <_ZdlPvm>
    e2bc:	ldr	x22, [x19, #208]
    e2c0:	mov	w0, #0x30                  	// #48
    e2c4:	sub	x1, x22, #0xd0
    e2c8:	str	x1, [x19, #208]
    e2cc:	ldur	w19, [x22, #-200]
    e2d0:	ldur	x20, [x22, #-208]
    e2d4:	umaddl	x19, w19, w0, x20
    e2d8:	cmp	x20, x19
    e2dc:	b.eq	e2fc <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x30c>  // b.none
    e2e0:	ldur	x0, [x19, #-40]
    e2e4:	sub	x19, x19, #0x30
    e2e8:	cbz	x0, e2f0 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x300>
    e2ec:	bl	0 <_ZdlPv>
    e2f0:	cmp	x20, x19
    e2f4:	b.ne	e2e0 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x2f0>  // b.any
    e2f8:	ldur	x19, [x22, #-208]
    e2fc:	sub	x22, x22, #0xc0
    e300:	cmp	x19, x22
    e304:	b.eq	e310 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x320>  // b.none
    e308:	mov	x0, x19
    e30c:	bl	0 <free>
    e310:	mov	w24, #0x0                   	// #0
    e314:	b	e158 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x168>
    e318:	mov	x1, x23
    e31c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e320:	ldr	w20, [sp, #104]
    e324:	b	e0c4 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0xd4>
    e328:	mov	x1, x0
    e32c:	mov	x2, x23
    e330:	mov	x0, x24
    e334:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e338:	ldr	w20, [sp, #104]
    e33c:	b	e0d0 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0xe0>
    e340:	mov	x0, x19
    e344:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    e348:	ldp	x2, x1, [x19, #8]
    e34c:	mov	x24, x0
    e350:	mov	x0, x19
    e354:	cmp	x2, x1
    e358:	cset	w1, eq  // eq = none
    e35c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    e360:	str	w0, [x19, #40]
    e364:	mov	x1, x22
    e368:	mov	x0, x19
    e36c:	bl	ec48 <_ZN4llvm8TGParser15ParseObjectListEPNS_10MultiClassE>
    e370:	tst	w0, #0xff
    e374:	b.ne	e3c4 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x3d4>  // b.any
    e378:	ldr	w0, [x19, #40]
    e37c:	cmp	w0, #0x7
    e380:	b.eq	e3cc <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x3dc>  // b.none
    e384:	mov	x0, x23
    e388:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e38c:	add	x1, x1, #0x0
    e390:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e394:	mov	x1, x23
    e398:	mov	x0, x19
    e39c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e3a0:	mov	x0, x23
    e3a4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e3a8:	add	x1, x1, #0x0
    e3ac:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e3b0:	mov	x2, x23
    e3b4:	add	x0, sp, #0x58
    e3b8:	mov	x1, #0x1                   	// #1
    e3bc:	str	x24, [sp, #88]
    e3c0:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    e3c4:	mov	w24, #0x1                   	// #1
    e3c8:	b	e158 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x168>
    e3cc:	ldp	x2, x1, [x19, #8]
    e3d0:	mov	x0, x19
    e3d4:	cmp	x2, x1
    e3d8:	cset	w1, eq  // eq = none
    e3dc:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    e3e0:	str	w0, [x19, #40]
    e3e4:	b	e1d0 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x1e0>
    e3e8:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e3ec:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e3f0:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e3f4:	add	x3, x3, #0x0
    e3f8:	add	x1, x1, #0x0
    e3fc:	add	x0, x0, #0x0
    e400:	mov	w2, #0xc2d                 	// #3117
    e404:	stp	x25, x26, [sp, #64]
    e408:	bl	0 <__assert_fail>
    e40c:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e410:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e414:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e418:	add	x3, x3, #0x0
    e41c:	add	x1, x1, #0x0
    e420:	add	x0, x0, #0x0
    e424:	mov	w2, #0xc0                  	// #192
    e428:	stp	x25, x26, [sp, #64]
    e42c:	bl	0 <__assert_fail>

000000000000e430 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE>:
    e430:	stp	x29, x30, [sp, #-64]!
    e434:	mov	x29, sp
    e438:	ldr	w2, [x0, #40]
    e43c:	cmp	w2, #0x1e
    e440:	b.eq	e508 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0xd8>  // b.none
    e444:	stp	x19, x20, [sp, #16]
    e448:	mov	x19, x0
    e44c:	b.ls	e4bc <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x8c>  // b.plast
    e450:	cmp	w2, #0x23
    e454:	b.eq	e5a8 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x178>  // b.none
    e458:	b.ls	e478 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x48>  // b.plast
    e45c:	cmp	w2, #0x24
    e460:	b.ne	e544 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x114>  // b.any
    e464:	bl	f960 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE>
    e468:	and	w0, w0, #0xff
    e46c:	ldp	x19, x20, [sp, #16]
    e470:	ldp	x29, x30, [sp], #64
    e474:	ret
    e478:	cmp	w2, #0x20
    e47c:	b.eq	e588 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x158>  // b.none
    e480:	cmp	w2, #0x22
    e484:	b.ne	e544 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x114>  // b.any
    e488:	cbz	x1, e5bc <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x18c>
    e48c:	add	x20, sp, #0x28
    e490:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e494:	mov	x0, x20
    e498:	add	x1, x1, #0x0
    e49c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e4a0:	mov	x1, x20
    e4a4:	mov	x0, x19
    e4a8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e4ac:	and	w0, w0, #0xff
    e4b0:	ldp	x19, x20, [sp, #16]
    e4b4:	ldp	x29, x30, [sp], #64
    e4b8:	ret
    e4bc:	cmp	w2, #0x19
    e4c0:	b.eq	e518 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0xe8>  // b.none
    e4c4:	b.ls	e4e4 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0xb4>  // b.plast
    e4c8:	cmp	w2, #0x1a
    e4cc:	b.ne	e544 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x114>  // b.any
    e4d0:	bl	c8b8 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE>
    e4d4:	and	w0, w0, #0xff
    e4d8:	ldp	x19, x20, [sp, #16]
    e4dc:	ldp	x29, x30, [sp], #64
    e4e0:	ret
    e4e4:	cmp	w2, #0x15
    e4e8:	b.eq	e52c <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0xfc>  // b.none
    e4ec:	cmp	w2, #0x18
    e4f0:	b.ne	e544 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x114>  // b.any
    e4f4:	bl	dd08 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE>
    e4f8:	and	w0, w0, #0xff
    e4fc:	ldp	x19, x20, [sp, #16]
    e500:	ldp	x29, x30, [sp], #64
    e504:	ret
    e508:	bl	dff0 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE>
    e50c:	and	w0, w0, #0xff
    e510:	ldp	x29, x30, [sp], #64
    e514:	ret
    e518:	bl	f0b8 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE>
    e51c:	and	w0, w0, #0xff
    e520:	ldp	x19, x20, [sp, #16]
    e524:	ldp	x29, x30, [sp], #64
    e528:	ret
    e52c:	cbz	x1, e5cc <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x19c>
    e530:	add	x20, sp, #0x28
    e534:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e538:	mov	x0, x20
    e53c:	add	x1, x1, #0x0
    e540:	b	e49c <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x6c>
    e544:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e548:	add	x1, x1, #0x0
    e54c:	add	x20, sp, #0x28
    e550:	mov	x0, x20
    e554:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e558:	mov	x0, x19
    e55c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    e560:	mov	x3, x0
    e564:	mov	x2, x20
    e568:	add	x0, sp, #0x20
    e56c:	mov	x1, #0x1                   	// #1
    e570:	str	x3, [sp, #32]
    e574:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    e578:	mov	w0, #0x1                   	// #1
    e57c:	ldp	x19, x20, [sp, #16]
    e580:	ldp	x29, x30, [sp], #64
    e584:	ret
    e588:	ldp	x2, x1, [x0, #272]
    e58c:	cmp	x2, x1
    e590:	b.eq	e5ec <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x1bc>  // b.none
    e594:	add	x20, sp, #0x28
    e598:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e59c:	mov	x0, x20
    e5a0:	add	x1, x1, #0x0
    e5a4:	b	e49c <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x6c>
    e5a8:	bl	a408 <_ZN4llvm8TGParser11ParseDefvarEv>
    e5ac:	and	w0, w0, #0xff
    e5b0:	ldp	x19, x20, [sp, #16]
    e5b4:	ldp	x29, x30, [sp], #64
    e5b8:	ret
    e5bc:	bl	ecb8 <_ZN4llvm8TGParser11ParseDefsetEv>
    e5c0:	and	w0, w0, #0xff
    e5c4:	ldp	x19, x20, [sp, #16]
    e5c8:	b	e470 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x40>
    e5cc:	ldp	x1, x2, [x0, #272]
    e5d0:	cmp	x2, x1
    e5d4:	b.eq	e5fc <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x1cc>  // b.none
    e5d8:	add	x20, sp, #0x28
    e5dc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e5e0:	mov	x0, x20
    e5e4:	add	x1, x1, #0x0
    e5e8:	b	e49c <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x6c>
    e5ec:	bl	e610 <_ZN4llvm8TGParser15ParseMultiClassEv>
    e5f0:	and	w0, w0, #0xff
    e5f4:	ldp	x19, x20, [sp, #16]
    e5f8:	b	e470 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x40>
    e5fc:	bl	d8c0 <_ZN4llvm8TGParser10ParseClassEv>
    e600:	and	w0, w0, #0xff
    e604:	ldp	x19, x20, [sp, #16]
    e608:	b	e470 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x40>
    e60c:	nop

000000000000e610 <_ZN4llvm8TGParser15ParseMultiClassEv>:
    e610:	stp	x29, x30, [sp, #-320]!
    e614:	mov	x29, sp
    e618:	ldr	w1, [x0, #40]
    e61c:	stp	x19, x20, [sp, #16]
    e620:	cmp	w1, #0x20
    e624:	stp	x21, x22, [sp, #32]
    e628:	b.ne	ec1c <_ZN4llvm8TGParser15ParseMultiClassEv+0x60c>  // b.any
    e62c:	ldp	x1, x2, [x0, #8]
    e630:	mov	x19, x0
    e634:	cmp	x2, x1
    e638:	cset	w1, eq  // eq = none
    e63c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    e640:	str	w0, [x19, #40]
    e644:	cmp	w0, #0x48
    e648:	b.eq	e698 <_ZN4llvm8TGParser15ParseMultiClassEv+0x88>  // b.none
    e64c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e650:	add	x1, x1, #0x0
    e654:	add	x20, sp, #0xf8
    e658:	mov	w21, #0x1                   	// #1
    e65c:	mov	x0, x20
    e660:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e664:	mov	x0, x19
    e668:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    e66c:	mov	x3, x0
    e670:	mov	x2, x20
    e674:	add	x0, sp, #0xb0
    e678:	mov	x1, #0x1                   	// #1
    e67c:	str	x3, [sp, #176]
    e680:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    e684:	mov	w0, w21
    e688:	ldp	x19, x20, [sp, #16]
    e68c:	ldp	x21, x22, [sp, #32]
    e690:	ldp	x29, x30, [sp], #320
    e694:	ret
    e698:	ldp	x1, x2, [x19, #48]
    e69c:	stp	x23, x24, [sp, #48]
    e6a0:	add	x23, sp, #0x90
    e6a4:	add	x4, x23, #0x10
    e6a8:	mov	w3, #0x0                   	// #0
    e6ac:	mov	x0, x23
    e6b0:	stp	x25, x26, [sp, #64]
    e6b4:	add	x22, sp, #0xf8
    e6b8:	add	x2, x1, x2
    e6bc:	str	x4, [sp, #144]
    e6c0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e6c4:	mov	x0, x19
    e6c8:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    e6cc:	mov	x21, x0
    e6d0:	ldp	x25, x20, [sp, #144]
    e6d4:	mov	x0, #0x98                  	// #152
    e6d8:	ldr	x24, [x19, #344]
    e6dc:	bl	0 <_Znwm>
    e6e0:	mov	x1, x20
    e6e4:	mov	x20, x0
    e6e8:	mov	x0, x25
    e6ec:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    e6f0:	adrp	x1, 0 <_ZN4llvm6Record6LastIDE>
    e6f4:	mov	x2, x20
    e6f8:	mov	x6, #0x1                   	// #1
    e6fc:	add	x4, x20, #0x58
    e700:	ldr	x1, [x1]
    e704:	str	x0, [x2], #24
    e708:	movk	x6, #0x4, lsl #32
    e70c:	add	x5, x20, #0x48
    e710:	stp	x2, x6, [x20, #8]
    e714:	add	x3, x20, #0x68
    e718:	ldr	w2, [x1]
    e71c:	str	x21, [x20, #24]
    e720:	mov	x0, x20
    e724:	add	w6, w2, #0x1
    e728:	stp	x5, xzr, [x20, #56]
    e72c:	stp	x4, xzr, [x20, #72]
    e730:	stp	x3, xzr, [x20, #88]
    e734:	stp	x24, xzr, [x20, #104]
    e738:	str	w2, [x20, #120]
    e73c:	strh	wzr, [x20, #124]
    e740:	str	w6, [x1]
    e744:	bl	0 <_ZN4llvm6Record9checkNameEv>
    e748:	stp	xzr, xzr, [x20, #128]
    e74c:	add	x5, x22, #0x10
    e750:	ldp	x1, x2, [sp, #144]
    e754:	str	xzr, [x20, #144]
    e758:	mov	w3, #0x0                   	// #0
    e75c:	mov	x0, x22
    e760:	str	x5, [sp, #248]
    e764:	add	x2, x1, x2
    e768:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e76c:	mov	x1, x22
    e770:	add	x0, x19, #0xe0
    e774:	str	x20, [sp, #280]
    e778:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e77c:	str	x0, [sp, #96]
    e780:	ldr	x25, [sp, #280]
    e784:	and	w21, w1, #0xff
    e788:	cbz	x25, e8d0 <_ZN4llvm8TGParser15ParseMultiClassEv+0x2c0>
    e78c:	ldp	x24, x26, [x25, #128]
    e790:	cmp	x24, x26
    e794:	b.eq	e868 <_ZN4llvm8TGParser15ParseMultiClassEv+0x258>  // b.none
    e798:	stp	x27, x28, [sp, #80]
    e79c:	nop
    e7a0:	ldr	x28, [x24, #8]
    e7a4:	cbz	x28, e7e8 <_ZN4llvm8TGParser15ParseMultiClassEv+0x1d8>
    e7a8:	ldp	x20, x27, [x28, #24]
    e7ac:	cmp	x20, x27
    e7b0:	b.eq	e7d0 <_ZN4llvm8TGParser15ParseMultiClassEv+0x1c0>  // b.none
    e7b4:	nop
    e7b8:	mov	x0, x20
    e7bc:	add	x20, x20, #0x10
    e7c0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e7c4:	cmp	x27, x20
    e7c8:	b.ne	e7b8 <_ZN4llvm8TGParser15ParseMultiClassEv+0x1a8>  // b.any
    e7cc:	ldr	x27, [x28, #24]
    e7d0:	cbz	x27, e7dc <_ZN4llvm8TGParser15ParseMultiClassEv+0x1cc>
    e7d4:	mov	x0, x27
    e7d8:	bl	0 <_ZdlPv>
    e7dc:	mov	x0, x28
    e7e0:	mov	x1, #0x30                  	// #48
    e7e4:	bl	0 <_ZdlPvm>
    e7e8:	ldr	x20, [x24]
    e7ec:	cbz	x20, e854 <_ZN4llvm8TGParser15ParseMultiClassEv+0x244>
    e7f0:	ldr	x0, [x20, #88]
    e7f4:	add	x1, x20, #0x68
    e7f8:	add	x2, x20, #0x58
    e7fc:	cmp	x0, x1
    e800:	b.eq	e810 <_ZN4llvm8TGParser15ParseMultiClassEv+0x200>  // b.none
    e804:	str	x2, [sp, #104]
    e808:	bl	0 <free>
    e80c:	ldr	x2, [sp, #104]
    e810:	add	x28, x20, #0x48
    e814:	ldr	x0, [x20, #72]
    e818:	cmp	x2, x0
    e81c:	b.eq	e824 <_ZN4llvm8TGParser15ParseMultiClassEv+0x214>  // b.none
    e820:	bl	0 <free>
    e824:	ldr	x0, [x20, #56]
    e828:	cmp	x28, x0
    e82c:	b.eq	e834 <_ZN4llvm8TGParser15ParseMultiClassEv+0x224>  // b.none
    e830:	bl	0 <free>
    e834:	ldr	x0, [x20, #8]
    e838:	add	x1, x20, #0x18
    e83c:	cmp	x0, x1
    e840:	b.eq	e848 <_ZN4llvm8TGParser15ParseMultiClassEv+0x238>  // b.none
    e844:	bl	0 <free>
    e848:	mov	x0, x20
    e84c:	mov	x1, #0x80                  	// #128
    e850:	bl	0 <_ZdlPvm>
    e854:	add	x24, x24, #0x10
    e858:	cmp	x26, x24
    e85c:	b.ne	e7a0 <_ZN4llvm8TGParser15ParseMultiClassEv+0x190>  // b.any
    e860:	ldp	x27, x28, [sp, #80]
    e864:	ldr	x26, [x25, #128]
    e868:	cbz	x26, e874 <_ZN4llvm8TGParser15ParseMultiClassEv+0x264>
    e86c:	mov	x0, x26
    e870:	bl	0 <_ZdlPv>
    e874:	ldr	x0, [x25, #88]
    e878:	add	x1, x25, #0x68
    e87c:	add	x24, x25, #0x58
    e880:	cmp	x0, x1
    e884:	b.eq	e88c <_ZN4llvm8TGParser15ParseMultiClassEv+0x27c>  // b.none
    e888:	bl	0 <free>
    e88c:	ldr	x0, [x25, #72]
    e890:	add	x20, x25, #0x48
    e894:	cmp	x24, x0
    e898:	b.eq	e8a0 <_ZN4llvm8TGParser15ParseMultiClassEv+0x290>  // b.none
    e89c:	bl	0 <free>
    e8a0:	ldr	x0, [x25, #56]
    e8a4:	cmp	x20, x0
    e8a8:	b.eq	e8b0 <_ZN4llvm8TGParser15ParseMultiClassEv+0x2a0>  // b.none
    e8ac:	bl	0 <free>
    e8b0:	ldr	x0, [x25, #8]
    e8b4:	add	x1, x25, #0x18
    e8b8:	cmp	x0, x1
    e8bc:	b.eq	e8c4 <_ZN4llvm8TGParser15ParseMultiClassEv+0x2b4>  // b.none
    e8c0:	bl	0 <free>
    e8c4:	mov	x0, x25
    e8c8:	mov	x1, #0x98                  	// #152
    e8cc:	bl	0 <_ZdlPvm>
    e8d0:	ldr	x0, [sp, #248]
    e8d4:	add	x1, x22, #0x10
    e8d8:	cmp	x0, x1
    e8dc:	b.eq	e8e4 <_ZN4llvm8TGParser15ParseMultiClassEv+0x2d4>  // b.none
    e8e0:	bl	0 <_ZdlPv>
    e8e4:	cbnz	w21, e990 <_ZN4llvm8TGParser15ParseMultiClassEv+0x380>
    e8e8:	add	x20, sp, #0xb0
    e8ec:	mov	x1, x23
    e8f0:	mov	x8, x20
    e8f4:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e8f8:	add	x0, x0, #0x0
    e8fc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e900:	mov	x8, x22
    e904:	add	x21, sp, #0x78
    e908:	mov	x0, x20
    e90c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e910:	add	x1, x1, #0x0
    e914:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e918:	mov	x0, x21
    e91c:	mov	x1, x22
    e920:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e924:	add	x22, x22, #0x10
    e928:	mov	x1, x21
    e92c:	mov	x0, x19
    e930:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e934:	and	w21, w0, #0xff
    e938:	ldr	x2, [sp, #248]
    e93c:	cmp	x2, x22
    e940:	b.eq	e94c <_ZN4llvm8TGParser15ParseMultiClassEv+0x33c>  // b.none
    e944:	mov	x0, x2
    e948:	bl	0 <_ZdlPv>
    e94c:	ldr	x0, [sp, #176]
    e950:	add	x20, x20, #0x10
    e954:	cmp	x0, x20
    e958:	b.eq	e960 <_ZN4llvm8TGParser15ParseMultiClassEv+0x350>  // b.none
    e95c:	bl	0 <_ZdlPv>
    e960:	ldr	x0, [sp, #144]
    e964:	add	x23, x23, #0x10
    e968:	cmp	x0, x23
    e96c:	b.eq	e9f0 <_ZN4llvm8TGParser15ParseMultiClassEv+0x3e0>  // b.none
    e970:	bl	0 <_ZdlPv>
    e974:	mov	w0, w21
    e978:	ldp	x19, x20, [sp, #16]
    e97c:	ldp	x21, x22, [sp, #32]
    e980:	ldp	x23, x24, [sp, #48]
    e984:	ldp	x25, x26, [sp, #64]
    e988:	ldp	x29, x30, [sp], #320
    e98c:	ret
    e990:	ldp	x3, x2, [x19, #8]
    e994:	mov	x0, x19
    e998:	ldr	x1, [sp, #96]
    e99c:	cmp	x3, x2
    e9a0:	ldr	x1, [x1, #64]
    e9a4:	str	x1, [x19, #328]
    e9a8:	cset	w1, eq  // eq = none
    e9ac:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    e9b0:	str	w0, [x19, #40]
    e9b4:	cmp	w0, #0xa
    e9b8:	b.eq	ea0c <_ZN4llvm8TGParser15ParseMultiClassEv+0x3fc>  // b.none
    e9bc:	cmp	w0, #0xc
    e9c0:	b.eq	ea28 <_ZN4llvm8TGParser15ParseMultiClassEv+0x418>  // b.none
    e9c4:	cmp	w0, #0x6
    e9c8:	b.eq	eb04 <_ZN4llvm8TGParser15ParseMultiClassEv+0x4f4>  // b.none
    e9cc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e9d0:	mov	x0, x22
    e9d4:	add	x1, x1, #0x0
    e9d8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e9dc:	mov	x1, x22
    e9e0:	mov	x0, x19
    e9e4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e9e8:	and	w21, w0, #0xff
    e9ec:	b	e960 <_ZN4llvm8TGParser15ParseMultiClassEv+0x350>
    e9f0:	mov	w0, w21
    e9f4:	ldp	x19, x20, [sp, #16]
    e9f8:	ldp	x21, x22, [sp, #32]
    e9fc:	ldp	x23, x24, [sp, #48]
    ea00:	ldp	x25, x26, [sp, #64]
    ea04:	ldp	x29, x30, [sp], #320
    ea08:	ret
    ea0c:	mov	x0, x19
    ea10:	mov	x1, #0x0                   	// #0
    ea14:	bl	b290 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE>
    ea18:	tst	w0, #0xff
    ea1c:	b.ne	e960 <_ZN4llvm8TGParser15ParseMultiClassEv+0x350>  // b.any
    ea20:	ldr	w0, [x19, #40]
    ea24:	b	e9bc <_ZN4llvm8TGParser15ParseMultiClassEv+0x3ac>
    ea28:	ldp	x2, x1, [x19, #8]
    ea2c:	mov	x0, x19
    ea30:	add	x20, sp, #0xb0
    ea34:	cmp	x2, x1
    ea38:	cset	w1, eq  // eq = none
    ea3c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    ea40:	str	w0, [x19, #40]
    ea44:	ldr	x1, [x19, #328]
    ea48:	mov	x0, x19
    ea4c:	mov	x8, x20
    ea50:	bl	9e00 <_ZN4llvm8TGParser27ParseSubMultiClassReferenceEPNS_10MultiClassE>
    ea54:	ldr	x0, [sp, #192]
    ea58:	cbz	x0, eaec <_ZN4llvm8TGParser15ParseMultiClassEv+0x4dc>
    ea5c:	add	x26, x22, #0x18
    ea60:	add	x25, x20, #0x18
    ea64:	add	x24, x22, #0x28
    ea68:	b	ead4 <_ZN4llvm8TGParser15ParseMultiClassEv+0x4c4>
    ea6c:	ldr	w1, [x19, #40]
    ea70:	cmp	w1, #0xe
    ea74:	b.ne	eb88 <_ZN4llvm8TGParser15ParseMultiClassEv+0x578>  // b.any
    ea78:	ldp	x2, x1, [x19, #8]
    ea7c:	mov	x0, x19
    ea80:	cmp	x2, x1
    ea84:	cset	w1, eq  // eq = none
    ea88:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    ea8c:	str	w0, [x19, #40]
    ea90:	ldr	x1, [x19, #328]
    ea94:	mov	x8, x22
    ea98:	mov	x0, x19
    ea9c:	bl	9e00 <_ZN4llvm8TGParser27ParseSubMultiClassReferenceEPNS_10MultiClassE>
    eaa0:	ldp	x4, x5, [sp, #248]
    eaa4:	mov	x1, x26
    eaa8:	ldr	x2, [sp, #264]
    eaac:	mov	x0, x25
    eab0:	stp	x4, x5, [sp, #176]
    eab4:	str	x2, [sp, #192]
    eab8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    eabc:	ldr	x0, [sp, #272]
    eac0:	cmp	x0, x24
    eac4:	b.eq	eacc <_ZN4llvm8TGParser15ParseMultiClassEv+0x4bc>  // b.none
    eac8:	bl	0 <free>
    eacc:	ldr	x0, [sp, #192]
    ead0:	cbz	x0, eaec <_ZN4llvm8TGParser15ParseMultiClassEv+0x4dc>
    ead4:	ldr	x1, [x19, #328]
    ead8:	mov	x2, x20
    eadc:	mov	x0, x19
    eae0:	bl	3428 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE>
    eae4:	tst	w0, #0xff
    eae8:	b.eq	ea6c <_ZN4llvm8TGParser15ParseMultiClassEv+0x45c>  // b.none
    eaec:	ldr	x0, [sp, #200]
    eaf0:	add	x20, x20, #0x28
    eaf4:	cmp	x0, x20
    eaf8:	b.eq	e960 <_ZN4llvm8TGParser15ParseMultiClassEv+0x350>  // b.none
    eafc:	bl	0 <free>
    eb00:	b	e960 <_ZN4llvm8TGParser15ParseMultiClassEv+0x350>
    eb04:	ldp	x2, x1, [x19, #8]
    eb08:	mov	x0, x19
    eb0c:	cmp	x2, x1
    eb10:	cset	w1, eq  // eq = none
    eb14:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    eb18:	str	w0, [x19, #40]
    eb1c:	cmp	w0, #0x7
    eb20:	b.eq	ebe4 <_ZN4llvm8TGParser15ParseMultiClassEv+0x5d4>  // b.none
    eb24:	mov	x0, x19
    eb28:	mov	x20, #0x47000000            	// #1191182336
    eb2c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    eb30:	mov	x25, x0
    eb34:	mov	x24, #0x1                   	// #1
    eb38:	movk	x20, #0x18, lsl #32
    eb3c:	nop
    eb40:	ldr	w1, [x19, #40]
    eb44:	cmp	w1, #0x7
    eb48:	b.eq	ebf4 <_ZN4llvm8TGParser15ParseMultiClassEv+0x5e4>  // b.none
    eb4c:	cmp	w1, #0x24
    eb50:	b.hi	eb60 <_ZN4llvm8TGParser15ParseMultiClassEv+0x550>  // b.pmore
    eb54:	lsl	x1, x24, x1
    eb58:	tst	x1, x20
    eb5c:	b.ne	eb70 <_ZN4llvm8TGParser15ParseMultiClassEv+0x560>  // b.any
    eb60:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    eb64:	mov	x0, x22
    eb68:	add	x1, x1, #0x0
    eb6c:	b	e9d8 <_ZN4llvm8TGParser15ParseMultiClassEv+0x3c8>
    eb70:	ldr	x1, [x19, #328]
    eb74:	mov	x0, x19
    eb78:	bl	e430 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE>
    eb7c:	tst	w0, #0xff
    eb80:	b.eq	eb40 <_ZN4llvm8TGParser15ParseMultiClassEv+0x530>  // b.none
    eb84:	b	e960 <_ZN4llvm8TGParser15ParseMultiClassEv+0x350>
    eb88:	ldr	x0, [sp, #200]
    eb8c:	add	x20, x20, #0x28
    eb90:	cmp	x0, x20
    eb94:	b.eq	eba0 <_ZN4llvm8TGParser15ParseMultiClassEv+0x590>  // b.none
    eb98:	bl	0 <free>
    eb9c:	ldr	w1, [x19, #40]
    eba0:	cmp	w1, #0x6
    eba4:	b.eq	eb04 <_ZN4llvm8TGParser15ParseMultiClassEv+0x4f4>  // b.none
    eba8:	cmp	w1, #0xd
    ebac:	b.eq	ebc0 <_ZN4llvm8TGParser15ParseMultiClassEv+0x5b0>  // b.none
    ebb0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ebb4:	mov	x0, x22
    ebb8:	add	x1, x1, #0x0
    ebbc:	b	e9d8 <_ZN4llvm8TGParser15ParseMultiClassEv+0x3c8>
    ebc0:	ldp	x2, x1, [x19, #8]
    ebc4:	mov	x0, x19
    ebc8:	cmp	x2, x1
    ebcc:	cset	w1, eq  // eq = none
    ebd0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    ebd4:	str	w0, [x19, #40]
    ebd8:	mov	w21, #0x0                   	// #0
    ebdc:	str	xzr, [x19, #328]
    ebe0:	b	e960 <_ZN4llvm8TGParser15ParseMultiClassEv+0x350>
    ebe4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ebe8:	mov	x0, x22
    ebec:	add	x1, x1, #0x0
    ebf0:	b	e9d8 <_ZN4llvm8TGParser15ParseMultiClassEv+0x3c8>
    ebf4:	ldp	x2, x1, [x19, #8]
    ebf8:	mov	x0, x19
    ebfc:	cmp	x2, x1
    ec00:	cset	w1, eq  // eq = none
    ec04:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    ec08:	str	w0, [x19, #40]
    ec0c:	mov	x1, x25
    ec10:	mov	x0, x19
    ec14:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ec18:	b	ebd8 <_ZN4llvm8TGParser15ParseMultiClassEv+0x5c8>
    ec1c:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ec20:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ec24:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ec28:	add	x3, x3, #0x0
    ec2c:	add	x1, x1, #0x0
    ec30:	add	x0, x0, #0x0
    ec34:	mov	w2, #0xc63                 	// #3171
    ec38:	stp	x23, x24, [sp, #48]
    ec3c:	stp	x25, x26, [sp, #64]
    ec40:	stp	x27, x28, [sp, #80]
    ec44:	bl	0 <__assert_fail>

000000000000ec48 <_ZN4llvm8TGParser15ParseObjectListEPNS_10MultiClassE>:
    ec48:	stp	x29, x30, [sp, #-32]!
    ec4c:	mov	x29, sp
    ec50:	stp	x19, x20, [sp, #16]
    ec54:	mov	x19, x0
    ec58:	mov	x20, x1
    ec5c:	b	ec6c <_ZN4llvm8TGParser15ParseObjectListEPNS_10MultiClassE+0x24>
    ec60:	bl	e430 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE>
    ec64:	ands	w2, w0, #0xff
    ec68:	b.ne	eca8 <_ZN4llvm8TGParser15ParseObjectListEPNS_10MultiClassE+0x60>  // b.any
    ec6c:	ldr	w3, [x19, #40]
    ec70:	mov	x1, x20
    ec74:	mov	x0, x19
    ec78:	sub	w2, w3, #0x18
    ec7c:	sub	w4, w3, #0x1e
    ec80:	cmp	w2, #0x2
    ec84:	cset	w2, ls  // ls = plast
    ec88:	cmp	w3, #0x15
    ec8c:	csinc	w2, w2, wzr, ne  // ne = any
    ec90:	cbnz	w2, ec60 <_ZN4llvm8TGParser15ParseObjectListEPNS_10MultiClassE+0x18>
    ec94:	sub	w3, w3, #0x22
    ec98:	tst	w4, #0xfffffffd
    ec9c:	b.eq	ec60 <_ZN4llvm8TGParser15ParseObjectListEPNS_10MultiClassE+0x18>  // b.none
    eca0:	cmp	w3, #0x2
    eca4:	b.ls	ec60 <_ZN4llvm8TGParser15ParseObjectListEPNS_10MultiClassE+0x18>  // b.plast
    eca8:	mov	w0, w2
    ecac:	ldp	x19, x20, [sp, #16]
    ecb0:	ldp	x29, x30, [sp], #32
    ecb4:	ret

000000000000ecb8 <_ZN4llvm8TGParser11ParseDefsetEv>:
    ecb8:	stp	x29, x30, [sp, #-256]!
    ecbc:	mov	x29, sp
    ecc0:	ldr	w1, [x0, #40]
    ecc4:	stp	x19, x20, [sp, #16]
    ecc8:	cmp	w1, #0x22
    eccc:	stp	x21, x22, [sp, #32]
    ecd0:	b.ne	efc4 <_ZN4llvm8TGParser11ParseDefsetEv+0x30c>  // b.any
    ecd4:	ldp	x1, x2, [x0, #8]
    ecd8:	mov	x19, x0
    ecdc:	add	x20, sp, #0x60
    ece0:	cmp	x2, x1
    ece4:	cset	w1, eq  // eq = none
    ece8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    ecec:	str	w0, [x19, #40]
    ecf0:	add	x2, x20, #0x20
    ecf4:	mov	x1, #0x1000000000          	// #68719476736
    ecf8:	mov	x0, x19
    ecfc:	stp	xzr, xzr, [sp, #96]
    ed00:	stp	x2, x1, [sp, #112]
    ed04:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    ed08:	str	x0, [sp, #96]
    ed0c:	mov	x0, x19
    ed10:	bl	4480 <_ZN4llvm8TGParser9ParseTypeEv>
    ed14:	cbz	x0, ee18 <_ZN4llvm8TGParser11ParseDefsetEv+0x160>
    ed18:	ldr	w1, [x0, #8]
    ed1c:	cmp	w1, #0x5
    ed20:	b.eq	ed7c <_ZN4llvm8TGParser11ParseDefsetEv+0xc4>  // b.none
    ed24:	add	x19, sp, #0x48
    ed28:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ed2c:	mov	x0, x19
    ed30:	add	x1, x1, #0x0
    ed34:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ed38:	mov	w21, #0x1                   	// #1
    ed3c:	ldr	x3, [sp, #96]
    ed40:	mov	x2, x19
    ed44:	add	x0, sp, #0x40
    ed48:	mov	x1, #0x1                   	// #1
    ed4c:	str	x3, [sp, #64]
    ed50:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    ed54:	ldr	x0, [sp, #112]
    ed58:	add	x1, x20, #0x20
    ed5c:	cmp	x0, x1
    ed60:	b.eq	ed68 <_ZN4llvm8TGParser11ParseDefsetEv+0xb0>  // b.none
    ed64:	bl	0 <free>
    ed68:	mov	w0, w21
    ed6c:	ldp	x19, x20, [sp, #16]
    ed70:	ldp	x21, x22, [sp, #32]
    ed74:	ldp	x29, x30, [sp], #256
    ed78:	ret
    ed7c:	ldr	x0, [x0, #24]
    ed80:	str	x0, [sp, #104]
    ed84:	ldr	w0, [x19, #40]
    ed88:	cmp	w0, #0x48
    ed8c:	b.eq	edcc <_ZN4llvm8TGParser11ParseDefsetEv+0x114>  // b.none
    ed90:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ed94:	add	x1, x1, #0x0
    ed98:	add	x22, sp, #0x48
    ed9c:	mov	w21, #0x1                   	// #1
    eda0:	mov	x0, x22
    eda4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    eda8:	mov	x0, x19
    edac:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    edb0:	mov	x3, x0
    edb4:	mov	x2, x22
    edb8:	add	x0, sp, #0x40
    edbc:	mov	x1, #0x1                   	// #1
    edc0:	str	x3, [sp, #64]
    edc4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    edc8:	b	ed54 <_ZN4llvm8TGParser11ParseDefsetEv+0x9c>
    edcc:	ldp	x0, x1, [x19, #48]
    edd0:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    edd4:	mov	x22, x0
    edd8:	ldr	x0, [x19, #344]
    eddc:	ldp	x1, x2, [x22, #24]
    ede0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ede4:	cbz	x0, ee20 <_ZN4llvm8TGParser11ParseDefsetEv+0x168>
    ede8:	add	x21, sp, #0x48
    edec:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    edf0:	mov	x0, x21
    edf4:	add	x1, x1, #0x0
    edf8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    edfc:	mov	x1, x21
    ee00:	mov	x0, x19
    ee04:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ee08:	and	w21, w0, #0xff
    ee0c:	b	ed54 <_ZN4llvm8TGParser11ParseDefsetEv+0x9c>
    ee10:	ldp	x23, x24, [sp, #48]
    ee14:	nop
    ee18:	mov	w21, #0x1                   	// #1
    ee1c:	b	ed54 <_ZN4llvm8TGParser11ParseDefsetEv+0x9c>
    ee20:	ldp	x2, x1, [x19, #8]
    ee24:	mov	x0, x19
    ee28:	cmp	x2, x1
    ee2c:	cset	w1, eq  // eq = none
    ee30:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    ee34:	str	w0, [x19, #40]
    ee38:	cmp	w0, #0x10
    ee3c:	b.eq	ee54 <_ZN4llvm8TGParser11ParseDefsetEv+0x19c>  // b.none
    ee40:	add	x21, sp, #0x48
    ee44:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ee48:	mov	x0, x21
    ee4c:	add	x1, x1, #0x0
    ee50:	b	edf8 <_ZN4llvm8TGParser11ParseDefsetEv+0x140>
    ee54:	ldp	x2, x1, [x19, #8]
    ee58:	mov	x0, x19
    ee5c:	cmp	x2, x1
    ee60:	cset	w1, eq  // eq = none
    ee64:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    ee68:	str	w0, [x19, #40]
    ee6c:	cmp	w0, #0x6
    ee70:	b.eq	ee88 <_ZN4llvm8TGParser11ParseDefsetEv+0x1d0>  // b.none
    ee74:	add	x21, sp, #0x48
    ee78:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ee7c:	mov	x0, x21
    ee80:	add	x1, x1, #0x0
    ee84:	b	edf8 <_ZN4llvm8TGParser11ParseDefsetEv+0x140>
    ee88:	mov	x0, x19
    ee8c:	stp	x23, x24, [sp, #48]
    ee90:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    ee94:	ldp	x2, x1, [x19, #8]
    ee98:	mov	x23, x0
    ee9c:	mov	x0, x19
    eea0:	cmp	x2, x1
    eea4:	cset	w1, eq  // eq = none
    eea8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    eeac:	str	w0, [x19, #40]
    eeb0:	ldr	w1, [x19, #308]
    eeb4:	ldr	w0, [x19, #304]
    eeb8:	cmp	w0, w1
    eebc:	b.cs	efe8 <_ZN4llvm8TGParser11ParseDefsetEv+0x330>  // b.hs, b.nlast
    eec0:	ldr	x1, [x19, #296]
    eec4:	str	x20, [x1, w0, uxtw #3]
    eec8:	ldr	w0, [x19, #304]
    eecc:	ldr	w2, [x19, #308]
    eed0:	mov	w1, w0
    eed4:	add	x1, x1, #0x1
    eed8:	cmp	x1, x2
    eedc:	b.hi	f004 <_ZN4llvm8TGParser11ParseDefsetEv+0x34c>  // b.pmore
    eee0:	add	w2, w0, #0x1
    eee4:	str	w2, [x19, #304]
    eee8:	mov	x1, #0x0                   	// #0
    eeec:	mov	x0, x19
    eef0:	bl	ec48 <_ZN4llvm8TGParser15ParseObjectListEPNS_10MultiClassE>
    eef4:	and	w21, w0, #0xff
    eef8:	ldr	w1, [x19, #304]
    eefc:	ldr	w2, [x19, #308]
    ef00:	mov	w0, w1
    ef04:	sub	x0, x0, #0x1
    ef08:	cmp	x0, x2
    ef0c:	b.hi	f004 <_ZN4llvm8TGParser11ParseDefsetEv+0x34c>  // b.pmore
    ef10:	sub	w1, w1, #0x1
    ef14:	str	w1, [x19, #304]
    ef18:	cbnz	w21, ee10 <_ZN4llvm8TGParser11ParseDefsetEv+0x158>
    ef1c:	ldr	w0, [x19, #40]
    ef20:	cmp	w0, #0x7
    ef24:	b.eq	ef78 <_ZN4llvm8TGParser11ParseDefsetEv+0x2c0>  // b.none
    ef28:	add	x21, sp, #0x48
    ef2c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ef30:	mov	x0, x21
    ef34:	add	x1, x1, #0x0
    ef38:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ef3c:	mov	x1, x21
    ef40:	mov	x0, x19
    ef44:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ef48:	mov	x0, x21
    ef4c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ef50:	add	x1, x1, #0x0
    ef54:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ef58:	mov	x2, x21
    ef5c:	add	x0, sp, #0x40
    ef60:	mov	x1, #0x1                   	// #1
    ef64:	mov	w21, #0x1                   	// #1
    ef68:	str	x23, [sp, #64]
    ef6c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    ef70:	ldp	x23, x24, [sp, #48]
    ef74:	b	ed54 <_ZN4llvm8TGParser11ParseDefsetEv+0x9c>
    ef78:	ldp	x2, x1, [x19, #8]
    ef7c:	mov	x0, x19
    ef80:	cmp	x2, x1
    ef84:	cset	w1, eq  // eq = none
    ef88:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    ef8c:	ldp	x23, x22, [x22, #24]
    ef90:	str	w0, [x19, #40]
    ef94:	ldr	w1, [sp, #120]
    ef98:	ldr	x2, [sp, #104]
    ef9c:	ldr	x0, [sp, #112]
    efa0:	ldr	x19, [x19, #344]
    efa4:	bl	0 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    efa8:	mov	x3, x0
    efac:	mov	x1, x23
    efb0:	mov	x2, x22
    efb4:	mov	x0, x19
    efb8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    efbc:	ldp	x23, x24, [sp, #48]
    efc0:	b	ed54 <_ZN4llvm8TGParser11ParseDefsetEv+0x9c>
    efc4:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    efc8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    efcc:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    efd0:	add	x3, x3, #0x0
    efd4:	add	x1, x1, #0x0
    efd8:	add	x0, x0, #0x0
    efdc:	mov	w2, #0xada                 	// #2778
    efe0:	stp	x23, x24, [sp, #48]
    efe4:	bl	0 <__assert_fail>
    efe8:	add	x0, x19, #0x128
    efec:	add	x1, x19, #0x138
    eff0:	mov	x3, #0x8                   	// #8
    eff4:	mov	x2, #0x0                   	// #0
    eff8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    effc:	ldr	w0, [x19, #304]
    f000:	b	eec0 <_ZN4llvm8TGParser11ParseDefsetEv+0x208>
    f004:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f008:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f00c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f010:	add	x3, x3, #0x0
    f014:	add	x1, x1, #0x0
    f018:	add	x0, x0, #0x0
    f01c:	mov	w2, #0x43                  	// #67
    f020:	bl	0 <__assert_fail>
    f024:	nop

000000000000f028 <_ZN4llvm8TGParser9ParseFileEv>:
    f028:	stp	x29, x30, [sp, #-64]!
    f02c:	mov	x29, sp
    f030:	ldp	x2, x1, [x0, #8]
    f034:	stp	x19, x20, [sp, #16]
    f038:	mov	x19, x0
    f03c:	cmp	x2, x1
    f040:	cset	w1, eq  // eq = none
    f044:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    f048:	str	w0, [x19, #40]
    f04c:	mov	x1, #0x0                   	// #0
    f050:	mov	x0, x19
    f054:	bl	ec48 <_ZN4llvm8TGParser15ParseObjectListEPNS_10MultiClassE>
    f058:	ands	w0, w0, #0xff
    f05c:	b.ne	f068 <_ZN4llvm8TGParser9ParseFileEv+0x40>  // b.any
    f060:	ldr	w1, [x19, #40]
    f064:	cbnz	w1, f074 <_ZN4llvm8TGParser9ParseFileEv+0x4c>
    f068:	ldp	x19, x20, [sp, #16]
    f06c:	ldp	x29, x30, [sp], #64
    f070:	ret
    f074:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f078:	add	x1, x1, #0x0
    f07c:	add	x20, sp, #0x28
    f080:	mov	x0, x20
    f084:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f088:	mov	x0, x19
    f08c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    f090:	mov	x3, x0
    f094:	mov	x2, x20
    f098:	add	x0, sp, #0x20
    f09c:	mov	x1, #0x1                   	// #1
    f0a0:	str	x3, [sp, #32]
    f0a4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    f0a8:	mov	w0, #0x1                   	// #1
    f0ac:	ldp	x19, x20, [sp, #16]
    f0b0:	ldp	x29, x30, [sp], #64
    f0b4:	ret

000000000000f0b8 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE>:
    f0b8:	stp	x29, x30, [sp, #-144]!
    f0bc:	mov	x29, sp
    f0c0:	stp	x19, x20, [sp, #16]
    f0c4:	mov	x19, x0
    f0c8:	stp	x23, x24, [sp, #48]
    f0cc:	mov	x24, x1
    f0d0:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    f0d4:	ldr	w1, [x19, #40]
    f0d8:	stp	x21, x22, [sp, #32]
    f0dc:	cmp	w1, #0x19
    f0e0:	b.ne	f5b0 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x4f8>  // b.any
    f0e4:	ldp	x1, x2, [x19, #8]
    f0e8:	mov	x21, x0
    f0ec:	mov	x0, x19
    f0f0:	cmp	x2, x1
    f0f4:	cset	w1, eq  // eq = none
    f0f8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    f0fc:	str	w0, [x19, #40]
    f100:	add	x1, sp, #0x68
    f104:	mov	x0, x19
    f108:	str	xzr, [sp, #104]
    f10c:	bl	9f28 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE>
    f110:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f114:	mov	x20, x0
    f118:	add	x1, x1, #0x0
    f11c:	cbz	x0, f134 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x7c>
    f120:	ldr	w0, [x19, #40]
    f124:	cmp	w0, #0x1c
    f128:	b.eq	f17c <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0xc4>  // b.none
    f12c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f130:	add	x1, x1, #0x0
    f134:	add	x21, sp, #0x78
    f138:	mov	w20, #0x1                   	// #1
    f13c:	mov	x0, x21
    f140:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f144:	mov	x0, x19
    f148:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    f14c:	mov	x3, x0
    f150:	mov	x2, x21
    f154:	add	x0, sp, #0x70
    f158:	mov	x1, #0x1                   	// #1
    f15c:	str	x3, [sp, #112]
    f160:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    f164:	mov	w0, w20
    f168:	ldp	x19, x20, [sp, #16]
    f16c:	ldp	x21, x22, [sp, #32]
    f170:	ldp	x23, x24, [sp, #48]
    f174:	ldp	x29, x30, [sp], #144
    f178:	ret
    f17c:	ldp	x2, x1, [x19, #8]
    f180:	mov	x0, x19
    f184:	stp	x25, x26, [sp, #64]
    f188:	add	x25, sp, #0x78
    f18c:	str	x27, [sp, #80]
    f190:	cmp	x2, x1
    f194:	cset	w1, eq  // eq = none
    f198:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    f19c:	str	w0, [x19, #40]
    f1a0:	mov	x0, #0x30                  	// #48
    f1a4:	ldr	x22, [sp, #104]
    f1a8:	bl	0 <_Znwm>
    f1ac:	mov	x2, x0
    f1b0:	mov	x1, x25
    f1b4:	add	x0, x19, #0x110
    f1b8:	str	x2, [sp, #120]
    f1bc:	stp	x21, x20, [x2]
    f1c0:	stp	x22, xzr, [x2, #16]
    f1c4:	stp	xzr, xzr, [x2, #32]
    f1c8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f1cc:	ldr	x27, [sp, #120]
    f1d0:	cbz	x27, f2b4 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x1fc>
    f1d4:	ldp	x21, x26, [x27, #24]
    f1d8:	cmp	x21, x26
    f1dc:	b.eq	f29c <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x1e4>  // b.none
    f1e0:	ldr	x22, [x21, #8]
    f1e4:	cbz	x22, f228 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x170>
    f1e8:	ldp	x20, x23, [x22, #24]
    f1ec:	cmp	x20, x23
    f1f0:	b.eq	f210 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x158>  // b.none
    f1f4:	nop
    f1f8:	mov	x0, x20
    f1fc:	add	x20, x20, #0x10
    f200:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f204:	cmp	x23, x20
    f208:	b.ne	f1f8 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x140>  // b.any
    f20c:	ldr	x23, [x22, #24]
    f210:	cbz	x23, f21c <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x164>
    f214:	mov	x0, x23
    f218:	bl	0 <_ZdlPv>
    f21c:	mov	x0, x22
    f220:	mov	x1, #0x30                  	// #48
    f224:	bl	0 <_ZdlPvm>
    f228:	ldr	x20, [x21]
    f22c:	cbz	x20, f28c <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x1d4>
    f230:	ldr	x0, [x20, #88]
    f234:	add	x1, x20, #0x68
    f238:	add	x23, x20, #0x58
    f23c:	cmp	x0, x1
    f240:	b.eq	f248 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x190>  // b.none
    f244:	bl	0 <free>
    f248:	ldr	x0, [x20, #72]
    f24c:	add	x22, x20, #0x48
    f250:	cmp	x23, x0
    f254:	b.eq	f25c <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x1a4>  // b.none
    f258:	bl	0 <free>
    f25c:	ldr	x0, [x20, #56]
    f260:	cmp	x22, x0
    f264:	b.eq	f26c <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x1b4>  // b.none
    f268:	bl	0 <free>
    f26c:	ldr	x0, [x20, #8]
    f270:	add	x1, x20, #0x18
    f274:	cmp	x0, x1
    f278:	b.eq	f280 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x1c8>  // b.none
    f27c:	bl	0 <free>
    f280:	mov	x0, x20
    f284:	mov	x1, #0x80                  	// #128
    f288:	bl	0 <_ZdlPvm>
    f28c:	add	x21, x21, #0x10
    f290:	cmp	x26, x21
    f294:	b.ne	f1e0 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x128>  // b.any
    f298:	ldr	x26, [x27, #24]
    f29c:	cbz	x26, f2a8 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x1f0>
    f2a0:	mov	x0, x26
    f2a4:	bl	0 <_ZdlPv>
    f2a8:	mov	x0, x27
    f2ac:	mov	x1, #0x30                  	// #48
    f2b0:	bl	0 <_ZdlPvm>
    f2b4:	ldr	x22, [x19, #336]
    f2b8:	str	xzr, [x19, #336]
    f2bc:	mov	x0, #0x38                  	// #56
    f2c0:	bl	0 <_Znwm>
    f2c4:	mov	x21, x0
    f2c8:	add	x0, x0, #0x8
    f2cc:	ldr	x20, [x19, #336]
    f2d0:	str	wzr, [x21, #8]
    f2d4:	str	xzr, [x21, #16]
    f2d8:	stp	x0, x0, [x0, #16]
    f2dc:	str	xzr, [x0, #32]
    f2e0:	str	x22, [x21, #48]
    f2e4:	str	x21, [x19, #336]
    f2e8:	cbz	x20, f3b4 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x2fc>
    f2ec:	ldr	x21, [x20, #48]
    f2f0:	cbz	x21, f398 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x2e0>
    f2f4:	ldr	x22, [x21, #48]
    f2f8:	cbz	x22, f380 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x2c8>
    f2fc:	ldr	x23, [x22, #48]
    f300:	cbz	x23, f368 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x2b0>
    f304:	ldr	x26, [x23, #48]
    f308:	cbz	x26, f350 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x298>
    f30c:	ldr	x27, [x26, #48]
    f310:	cbz	x27, f338 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x280>
    f314:	ldr	x0, [x27, #48]
    f318:	cbz	x0, f320 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x268>
    f31c:	bl	16f8 <_ZNKSt14default_deleteIN4llvm15TGLocalVarScopeEEclEPS1_.isra.0.part.0>
    f320:	ldr	x1, [x27, #16]
    f324:	mov	x0, x27
    f328:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f32c:	mov	x0, x27
    f330:	mov	x1, #0x38                  	// #56
    f334:	bl	0 <_ZdlPvm>
    f338:	ldr	x1, [x26, #16]
    f33c:	mov	x0, x26
    f340:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f344:	mov	x0, x26
    f348:	mov	x1, #0x38                  	// #56
    f34c:	bl	0 <_ZdlPvm>
    f350:	ldr	x1, [x23, #16]
    f354:	mov	x0, x23
    f358:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f35c:	mov	x0, x23
    f360:	mov	x1, #0x38                  	// #56
    f364:	bl	0 <_ZdlPvm>
    f368:	ldr	x1, [x22, #16]
    f36c:	mov	x0, x22
    f370:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f374:	mov	x0, x22
    f378:	mov	x1, #0x38                  	// #56
    f37c:	bl	0 <_ZdlPvm>
    f380:	ldr	x1, [x21, #16]
    f384:	mov	x0, x21
    f388:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f38c:	mov	x0, x21
    f390:	mov	x1, #0x38                  	// #56
    f394:	bl	0 <_ZdlPvm>
    f398:	ldr	x1, [x20, #16]
    f39c:	mov	x0, x20
    f3a0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f3a4:	mov	x0, x20
    f3a8:	mov	x1, #0x38                  	// #56
    f3ac:	bl	0 <_ZdlPvm>
    f3b0:	ldr	x21, [x19, #336]
    f3b4:	ldr	w0, [x19, #40]
    f3b8:	cmp	w0, #0x6
    f3bc:	b.eq	f500 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x448>  // b.none
    f3c0:	mov	x1, x24
    f3c4:	mov	x0, x19
    f3c8:	bl	e430 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE>
    f3cc:	ands	w20, w0, #0xff
    f3d0:	b.ne	f4e0 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x428>  // b.any
    f3d4:	ldr	x0, [x19, #336]
    f3d8:	cmp	x21, x0
    f3dc:	b.ne	f5d8 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x520>  // b.any
    f3e0:	ldr	x0, [x21, #48]
    f3e4:	str	xzr, [x21, #48]
    f3e8:	ldr	x20, [x19, #336]
    f3ec:	str	x0, [x19, #336]
    f3f0:	cbz	x20, f4b8 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x400>
    f3f4:	ldr	x21, [x20, #48]
    f3f8:	cbz	x21, f4a0 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x3e8>
    f3fc:	ldr	x22, [x21, #48]
    f400:	cbz	x22, f488 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x3d0>
    f404:	ldr	x23, [x22, #48]
    f408:	cbz	x23, f470 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x3b8>
    f40c:	ldr	x24, [x23, #48]
    f410:	cbz	x24, f458 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x3a0>
    f414:	ldr	x26, [x24, #48]
    f418:	cbz	x26, f440 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x388>
    f41c:	ldr	x0, [x26, #48]
    f420:	cbz	x0, f428 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x370>
    f424:	bl	16f8 <_ZNKSt14default_deleteIN4llvm15TGLocalVarScopeEEclEPS1_.isra.0.part.0>
    f428:	ldr	x1, [x26, #16]
    f42c:	mov	x0, x26
    f430:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f434:	mov	x0, x26
    f438:	mov	x1, #0x38                  	// #56
    f43c:	bl	0 <_ZdlPvm>
    f440:	ldr	x1, [x24, #16]
    f444:	mov	x0, x24
    f448:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f44c:	mov	x0, x24
    f450:	mov	x1, #0x38                  	// #56
    f454:	bl	0 <_ZdlPvm>
    f458:	ldr	x1, [x23, #16]
    f45c:	mov	x0, x23
    f460:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f464:	mov	x0, x23
    f468:	mov	x1, #0x38                  	// #56
    f46c:	bl	0 <_ZdlPvm>
    f470:	ldr	x1, [x22, #16]
    f474:	mov	x0, x22
    f478:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f47c:	mov	x0, x22
    f480:	mov	x1, #0x38                  	// #56
    f484:	bl	0 <_ZdlPvm>
    f488:	ldr	x1, [x21, #16]
    f48c:	mov	x0, x21
    f490:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f494:	mov	x0, x21
    f498:	mov	x1, #0x38                  	// #56
    f49c:	bl	0 <_ZdlPvm>
    f4a0:	ldr	x1, [x20, #16]
    f4a4:	mov	x0, x20
    f4a8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f4ac:	mov	x0, x20
    f4b0:	mov	x1, #0x38                  	// #56
    f4b4:	bl	0 <_ZdlPvm>
    f4b8:	ldr	x2, [x19, #280]
    f4bc:	mov	x1, x25
    f4c0:	mov	x0, x19
    f4c4:	ldr	x3, [x2, #-8]!
    f4c8:	str	x2, [x19, #280]
    f4cc:	stp	xzr, x3, [sp, #120]
    f4d0:	bl	3968 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE>
    f4d4:	and	w20, w0, #0xff
    f4d8:	mov	x0, x25
    f4dc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f4e0:	mov	w0, w20
    f4e4:	ldp	x19, x20, [sp, #16]
    f4e8:	ldp	x21, x22, [sp, #32]
    f4ec:	ldp	x23, x24, [sp, #48]
    f4f0:	ldp	x25, x26, [sp, #64]
    f4f4:	ldr	x27, [sp, #80]
    f4f8:	ldp	x29, x30, [sp], #144
    f4fc:	ret
    f500:	mov	x0, x19
    f504:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    f508:	ldp	x2, x1, [x19, #8]
    f50c:	mov	x20, x0
    f510:	mov	x0, x19
    f514:	cmp	x2, x1
    f518:	cset	w1, eq  // eq = none
    f51c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    f520:	str	w0, [x19, #40]
    f524:	mov	x1, x24
    f528:	mov	x0, x19
    f52c:	bl	ec48 <_ZN4llvm8TGParser15ParseObjectListEPNS_10MultiClassE>
    f530:	tst	w0, #0xff
    f534:	b.ne	f584 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x4cc>  // b.any
    f538:	ldr	w0, [x19, #40]
    f53c:	cmp	w0, #0x7
    f540:	b.eq	f594 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x4dc>  // b.none
    f544:	mov	x0, x25
    f548:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f54c:	add	x1, x1, #0x0
    f550:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f554:	mov	x1, x25
    f558:	mov	x0, x19
    f55c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f560:	mov	x0, x25
    f564:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f568:	add	x1, x1, #0x0
    f56c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f570:	mov	x2, x25
    f574:	add	x0, sp, #0x70
    f578:	mov	x1, #0x1                   	// #1
    f57c:	str	x20, [sp, #112]
    f580:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    f584:	mov	w20, #0x1                   	// #1
    f588:	ldp	x25, x26, [sp, #64]
    f58c:	ldr	x27, [sp, #80]
    f590:	b	f164 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0xac>
    f594:	ldp	x2, x1, [x19, #8]
    f598:	mov	x0, x19
    f59c:	cmp	x2, x1
    f5a0:	cset	w1, eq  // eq = none
    f5a4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    f5a8:	str	w0, [x19, #40]
    f5ac:	b	f3d4 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x31c>
    f5b0:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f5b4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f5b8:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f5bc:	add	x3, x3, #0x0
    f5c0:	add	x1, x1, #0x0
    f5c4:	add	x0, x0, #0x0
    f5c8:	mov	w2, #0xb33                 	// #2867
    f5cc:	stp	x25, x26, [sp, #64]
    f5d0:	str	x27, [sp, #80]
    f5d4:	bl	0 <__assert_fail>
    f5d8:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f5dc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f5e0:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f5e4:	add	x3, x3, #0x0
    f5e8:	add	x1, x1, #0x0
    f5ec:	add	x0, x0, #0x0
    f5f0:	mov	w2, #0xc0                  	// #192
    f5f4:	bl	0 <__assert_fail>

000000000000f5f8 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE>:
    f5f8:	stp	x29, x30, [sp, #-176]!
    f5fc:	mov	x29, sp
    f600:	stp	x19, x20, [sp, #16]
    f604:	mov	x19, x0
    f608:	mov	x0, #0x38                  	// #56
    f60c:	stp	x21, x22, [sp, #32]
    f610:	stp	x23, x24, [sp, #48]
    f614:	mov	x23, x1
    f618:	ldr	x22, [x19, #336]
    f61c:	str	xzr, [x19, #336]
    f620:	stp	x2, x3, [sp, #80]
    f624:	bl	0 <_Znwm>
    f628:	mov	x20, x0
    f62c:	add	x0, x0, #0x8
    f630:	ldr	x21, [x19, #336]
    f634:	str	x20, [x19, #336]
    f638:	str	wzr, [x20, #8]
    f63c:	str	xzr, [x20, #16]
    f640:	stp	x0, x0, [x0, #16]
    f644:	str	xzr, [x0, #32]
    f648:	str	x22, [x20, #48]
    f64c:	cbz	x21, f720 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x128>
    f650:	ldr	x20, [x21, #48]
    f654:	cbz	x20, f704 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x10c>
    f658:	ldr	x22, [x20, #48]
    f65c:	cbz	x22, f6ec <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0xf4>
    f660:	ldr	x24, [x22, #48]
    f664:	cbz	x24, f6d4 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0xdc>
    f668:	stp	x25, x26, [sp, #64]
    f66c:	ldr	x25, [x24, #48]
    f670:	cbz	x25, f6b8 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0xc0>
    f674:	ldr	x26, [x25, #48]
    f678:	cbz	x26, f6a0 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0xa8>
    f67c:	ldr	x0, [x26, #48]
    f680:	cbz	x0, f688 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x90>
    f684:	bl	16f8 <_ZNKSt14default_deleteIN4llvm15TGLocalVarScopeEEclEPS1_.isra.0.part.0>
    f688:	ldr	x1, [x26, #16]
    f68c:	mov	x0, x26
    f690:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f694:	mov	x0, x26
    f698:	mov	x1, #0x38                  	// #56
    f69c:	bl	0 <_ZdlPvm>
    f6a0:	ldr	x1, [x25, #16]
    f6a4:	mov	x0, x25
    f6a8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f6ac:	mov	x0, x25
    f6b0:	mov	x1, #0x38                  	// #56
    f6b4:	bl	0 <_ZdlPvm>
    f6b8:	ldr	x1, [x24, #16]
    f6bc:	mov	x0, x24
    f6c0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f6c4:	mov	x0, x24
    f6c8:	mov	x1, #0x38                  	// #56
    f6cc:	bl	0 <_ZdlPvm>
    f6d0:	ldp	x25, x26, [sp, #64]
    f6d4:	mov	x0, x22
    f6d8:	ldr	x1, [x22, #16]
    f6dc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f6e0:	mov	x0, x22
    f6e4:	mov	x1, #0x38                  	// #56
    f6e8:	bl	0 <_ZdlPvm>
    f6ec:	ldr	x1, [x20, #16]
    f6f0:	mov	x0, x20
    f6f4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f6f8:	mov	x0, x20
    f6fc:	mov	x1, #0x38                  	// #56
    f700:	bl	0 <_ZdlPvm>
    f704:	ldr	x1, [x21, #16]
    f708:	mov	x0, x21
    f70c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f710:	mov	x0, x21
    f714:	mov	x1, #0x38                  	// #56
    f718:	bl	0 <_ZdlPvm>
    f71c:	ldr	x20, [x19, #336]
    f720:	ldr	w0, [x19, #40]
    f724:	cmp	w0, #0x6
    f728:	b.eq	f840 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x248>  // b.none
    f72c:	mov	x1, x23
    f730:	mov	x0, x19
    f734:	bl	e430 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE>
    f738:	ands	w0, w0, #0xff
    f73c:	b.ne	f82c <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x234>  // b.any
    f740:	ldr	x0, [x19, #336]
    f744:	cmp	x0, x20
    f748:	b.ne	f93c <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x344>  // b.any
    f74c:	ldr	x1, [x20, #48]
    f750:	str	xzr, [x20, #48]
    f754:	mov	w0, #0x0                   	// #0
    f758:	ldr	x20, [x19, #336]
    f75c:	str	x1, [x19, #336]
    f760:	cbz	x20, f82c <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x234>
    f764:	ldr	x19, [x20, #48]
    f768:	cbz	x19, f810 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x218>
    f76c:	ldr	x21, [x19, #48]
    f770:	cbz	x21, f7f8 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x200>
    f774:	ldr	x22, [x21, #48]
    f778:	cbz	x22, f7e0 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x1e8>
    f77c:	ldr	x23, [x22, #48]
    f780:	cbz	x23, f7c8 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x1d0>
    f784:	ldr	x24, [x23, #48]
    f788:	cbz	x24, f7b0 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x1b8>
    f78c:	ldr	x0, [x24, #48]
    f790:	cbz	x0, f798 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x1a0>
    f794:	bl	16f8 <_ZNKSt14default_deleteIN4llvm15TGLocalVarScopeEEclEPS1_.isra.0.part.0>
    f798:	ldr	x1, [x24, #16]
    f79c:	mov	x0, x24
    f7a0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f7a4:	mov	x0, x24
    f7a8:	mov	x1, #0x38                  	// #56
    f7ac:	bl	0 <_ZdlPvm>
    f7b0:	ldr	x1, [x23, #16]
    f7b4:	mov	x0, x23
    f7b8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f7bc:	mov	x0, x23
    f7c0:	mov	x1, #0x38                  	// #56
    f7c4:	bl	0 <_ZdlPvm>
    f7c8:	ldr	x1, [x22, #16]
    f7cc:	mov	x0, x22
    f7d0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f7d4:	mov	x0, x22
    f7d8:	mov	x1, #0x38                  	// #56
    f7dc:	bl	0 <_ZdlPvm>
    f7e0:	ldr	x1, [x21, #16]
    f7e4:	mov	x0, x21
    f7e8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f7ec:	mov	x0, x21
    f7f0:	mov	x1, #0x38                  	// #56
    f7f4:	bl	0 <_ZdlPvm>
    f7f8:	ldr	x1, [x19, #16]
    f7fc:	mov	x0, x19
    f800:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f804:	mov	x0, x19
    f808:	mov	x1, #0x38                  	// #56
    f80c:	bl	0 <_ZdlPvm>
    f810:	ldr	x1, [x20, #16]
    f814:	mov	x0, x20
    f818:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f81c:	mov	x0, x20
    f820:	mov	x1, #0x38                  	// #56
    f824:	bl	0 <_ZdlPvm>
    f828:	mov	w0, #0x0                   	// #0
    f82c:	ldp	x19, x20, [sp, #16]
    f830:	ldp	x21, x22, [sp, #32]
    f834:	ldp	x23, x24, [sp, #48]
    f838:	ldp	x29, x30, [sp], #176
    f83c:	ret
    f840:	mov	x0, x19
    f844:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    f848:	ldp	x2, x1, [x19, #8]
    f84c:	mov	x21, x0
    f850:	mov	x0, x19
    f854:	cmp	x2, x1
    f858:	cset	w1, eq  // eq = none
    f85c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    f860:	str	w0, [x19, #40]
    f864:	mov	x1, x23
    f868:	mov	x0, x19
    f86c:	bl	ec48 <_ZN4llvm8TGParser15ParseObjectListEPNS_10MultiClassE>
    f870:	tst	w0, #0xff
    f874:	b.ne	f908 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x310>  // b.any
    f878:	ldr	w0, [x19, #40]
    f87c:	cmp	w0, #0x7
    f880:	b.eq	f920 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x328>  // b.none
    f884:	add	x2, sp, #0x50
    f888:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f88c:	add	x3, x3, #0x0
    f890:	mov	w4, #0x503                 	// #1283
    f894:	add	x22, sp, #0x80
    f898:	add	x20, sp, #0x98
    f89c:	mov	x0, x22
    f8a0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f8a4:	add	x1, x1, #0x0
    f8a8:	stp	x3, x2, [sp, #104]
    f8ac:	strh	w4, [sp, #120]
    f8b0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f8b4:	mov	x8, x20
    f8b8:	mov	x1, x22
    f8bc:	add	x0, sp, #0x68
    f8c0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f8c4:	mov	x0, x19
    f8c8:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    f8cc:	mov	x3, x0
    f8d0:	mov	x2, x20
    f8d4:	add	x0, sp, #0x60
    f8d8:	mov	x1, #0x1                   	// #1
    f8dc:	str	x3, [sp, #96]
    f8e0:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    f8e4:	mov	x0, x20
    f8e8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f8ec:	add	x1, x1, #0x0
    f8f0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f8f4:	mov	x2, x20
    f8f8:	mov	x0, x22
    f8fc:	mov	x1, #0x1                   	// #1
    f900:	str	x21, [sp, #128]
    f904:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    f908:	mov	w0, #0x1                   	// #1
    f90c:	ldp	x19, x20, [sp, #16]
    f910:	ldp	x21, x22, [sp, #32]
    f914:	ldp	x23, x24, [sp, #48]
    f918:	ldp	x29, x30, [sp], #176
    f91c:	ret
    f920:	ldp	x2, x1, [x19, #8]
    f924:	mov	x0, x19
    f928:	cmp	x2, x1
    f92c:	cset	w1, eq  // eq = none
    f930:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    f934:	str	w0, [x19, #40]
    f938:	b	f740 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x148>
    f93c:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f940:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f944:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f948:	add	x3, x3, #0x0
    f94c:	add	x1, x1, #0x0
    f950:	add	x0, x0, #0x0
    f954:	mov	w2, #0xc0                  	// #192
    f958:	stp	x25, x26, [sp, #64]
    f95c:	bl	0 <__assert_fail>

000000000000f960 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE>:
    f960:	stp	x29, x30, [sp, #-176]!
    f964:	mov	x29, sp
    f968:	stp	x19, x20, [sp, #16]
    f96c:	mov	x19, x0
    f970:	stp	x21, x22, [sp, #32]
    f974:	mov	x22, x1
    f978:	stp	x23, x24, [sp, #48]
    f97c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    f980:	mov	x23, x0
    f984:	ldr	w0, [x19, #40]
    f988:	cmp	w0, #0x24
    f98c:	b.ne	fe18 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x4b8>  // b.any
    f990:	ldp	x1, x2, [x19, #8]
    f994:	mov	x0, x19
    f998:	cmp	x2, x1
    f99c:	cset	w1, eq  // eq = none
    f9a0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    f9a4:	str	w0, [x19, #40]
    f9a8:	mov	w3, #0x0                   	// #0
    f9ac:	mov	x0, x19
    f9b0:	mov	x2, #0x0                   	// #0
    f9b4:	mov	x1, #0x0                   	// #0
    f9b8:	bl	5fb0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    f9bc:	mov	x21, x0
    f9c0:	cbz	x0, fc18 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x2b8>
    f9c4:	ldr	w0, [x19, #40]
    f9c8:	cmp	w0, #0x25
    f9cc:	b.eq	fa20 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0xc0>  // b.none
    f9d0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f9d4:	add	x1, x1, #0x0
    f9d8:	add	x20, sp, #0x98
    f9dc:	mov	w24, #0x1                   	// #1
    f9e0:	mov	x0, x20
    f9e4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f9e8:	mov	x0, x19
    f9ec:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    f9f0:	mov	x3, x0
    f9f4:	mov	x2, x20
    f9f8:	add	x0, sp, #0x90
    f9fc:	mov	x1, #0x1                   	// #1
    fa00:	str	x3, [sp, #144]
    fa04:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    fa08:	mov	w0, w24
    fa0c:	ldp	x19, x20, [sp, #16]
    fa10:	ldp	x21, x22, [sp, #32]
    fa14:	ldp	x23, x24, [sp, #48]
    fa18:	ldp	x29, x30, [sp], #176
    fa1c:	ret
    fa20:	ldp	x2, x1, [x19, #8]
    fa24:	adrp	x20, 0 <_ZN4llvm8BitRecTy6SharedE>
    fa28:	add	x24, x19, #0x110
    fa2c:	mov	x0, x19
    fa30:	stp	x25, x26, [sp, #64]
    fa34:	add	x25, sp, #0x98
    fa38:	stp	x27, x28, [sp, #80]
    fa3c:	cmp	x2, x1
    fa40:	cset	w1, eq  // eq = none
    fa44:	str	x24, [sp, #112]
    fa48:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    fa4c:	str	w0, [x19, #40]
    fa50:	ldr	x20, [x20]
    fa54:	mov	x1, #0x0                   	// #0
    fa58:	mov	x0, #0x0                   	// #0
    fa5c:	mov	x2, x20
    fa60:	bl	0 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    fa64:	mov	x1, x0
    fa68:	mov	w0, #0x1                   	// #1
    fa6c:	mov	x27, x1
    fa70:	str	x1, [sp, #120]
    fa74:	bl	0 <_ZN4llvm7BitInit3getEb>
    fa78:	mov	x3, x0
    fa7c:	mov	x2, x20
    fa80:	mov	x1, #0x1                   	// #1
    fa84:	mov	x0, x25
    fa88:	str	x3, [sp, #152]
    fa8c:	bl	0 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    fa90:	mov	x26, x0
    fa94:	mov	x0, x20
    fa98:	str	x26, [sp, #128]
    fa9c:	bl	0 <_ZN4llvm5RecTy9getListTyEv>
    faa0:	mov	x4, x0
    faa4:	mov	x3, x27
    faa8:	mov	x2, x26
    faac:	mov	x1, x21
    fab0:	mov	w0, #0x2                   	// #2
    fab4:	str	x4, [sp, #136]
    fab8:	bl	0 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE>
    fabc:	mov	x1, #0x0                   	// #0
    fac0:	bl	0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE>
    fac4:	mov	x20, x0
    fac8:	mov	x0, #0x30                  	// #48
    facc:	bl	0 <_Znwm>
    fad0:	mov	x2, x0
    fad4:	mov	x1, x25
    fad8:	mov	x0, x24
    fadc:	str	x2, [sp, #152]
    fae0:	stp	x23, xzr, [x2]
    fae4:	stp	x20, xzr, [x2, #16]
    fae8:	stp	xzr, xzr, [x2, #32]
    faec:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    faf0:	ldr	x0, [sp, #152]
    faf4:	str	x0, [sp, #104]
    faf8:	cbz	x0, fbf0 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x290>
    fafc:	ldp	x20, x24, [x0, #24]
    fb00:	cmp	x20, x24
    fb04:	b.eq	fbd8 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x278>  // b.none
    fb08:	ldr	x27, [x20, #8]
    fb0c:	cbz	x27, fb50 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x1f0>
    fb10:	ldp	x26, x28, [x27, #24]
    fb14:	cmp	x26, x28
    fb18:	b.eq	fb38 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x1d8>  // b.none
    fb1c:	nop
    fb20:	mov	x0, x26
    fb24:	add	x26, x26, #0x10
    fb28:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    fb2c:	cmp	x28, x26
    fb30:	b.ne	fb20 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x1c0>  // b.any
    fb34:	ldr	x28, [x27, #24]
    fb38:	cbz	x28, fb44 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x1e4>
    fb3c:	mov	x0, x28
    fb40:	bl	0 <_ZdlPv>
    fb44:	mov	x0, x27
    fb48:	mov	x1, #0x30                  	// #48
    fb4c:	bl	0 <_ZdlPvm>
    fb50:	ldr	x27, [x20]
    fb54:	cbz	x27, fbc4 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x264>
    fb58:	ldr	x0, [x27, #88]
    fb5c:	add	x2, x27, #0x68
    fb60:	add	x3, x27, #0x58
    fb64:	cmp	x0, x2
    fb68:	b.eq	fb78 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x218>  // b.none
    fb6c:	str	x3, [sp, #96]
    fb70:	bl	0 <free>
    fb74:	ldr	x3, [sp, #96]
    fb78:	add	x2, x27, #0x48
    fb7c:	ldr	x0, [x27, #72]
    fb80:	cmp	x3, x0
    fb84:	b.eq	fb94 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x234>  // b.none
    fb88:	str	x2, [sp, #96]
    fb8c:	bl	0 <free>
    fb90:	ldr	x2, [sp, #96]
    fb94:	ldr	x0, [x27, #56]
    fb98:	cmp	x2, x0
    fb9c:	b.eq	fba4 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x244>  // b.none
    fba0:	bl	0 <free>
    fba4:	ldr	x0, [x27, #8]
    fba8:	add	x2, x27, #0x18
    fbac:	cmp	x0, x2
    fbb0:	b.eq	fbb8 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x258>  // b.none
    fbb4:	bl	0 <free>
    fbb8:	mov	x0, x27
    fbbc:	mov	x1, #0x80                  	// #128
    fbc0:	bl	0 <_ZdlPvm>
    fbc4:	add	x20, x20, #0x10
    fbc8:	cmp	x24, x20
    fbcc:	b.ne	fb08 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x1a8>  // b.any
    fbd0:	ldr	x0, [sp, #104]
    fbd4:	ldr	x24, [x0, #24]
    fbd8:	cbz	x24, fbe4 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x284>
    fbdc:	mov	x0, x24
    fbe0:	bl	0 <_ZdlPv>
    fbe4:	ldr	x0, [sp, #104]
    fbe8:	mov	x1, #0x30                  	// #48
    fbec:	bl	0 <_ZdlPvm>
    fbf0:	mov	x1, x22
    fbf4:	mov	x0, x19
    fbf8:	adrp	x2, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    fbfc:	mov	x3, #0x4                   	// #4
    fc00:	add	x2, x2, #0x0
    fc04:	bl	f5f8 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE>
    fc08:	tst	w0, #0xff
    fc0c:	b.eq	fc34 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x2d4>  // b.none
    fc10:	ldp	x25, x26, [sp, #64]
    fc14:	ldp	x27, x28, [sp, #80]
    fc18:	mov	w24, #0x1                   	// #1
    fc1c:	mov	w0, w24
    fc20:	ldp	x19, x20, [sp, #16]
    fc24:	ldp	x21, x22, [sp, #32]
    fc28:	ldp	x23, x24, [sp, #48]
    fc2c:	ldp	x29, x30, [sp], #176
    fc30:	ret
    fc34:	ldr	x2, [x19, #280]
    fc38:	mov	x1, x25
    fc3c:	mov	x0, x19
    fc40:	ldr	x3, [x2, #-8]!
    fc44:	str	x2, [x19, #280]
    fc48:	stp	xzr, x3, [sp, #152]
    fc4c:	bl	3968 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE>
    fc50:	and	w24, w0, #0xff
    fc54:	mov	x0, x25
    fc58:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    fc5c:	cbnz	w24, fc10 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x2b0>
    fc60:	ldr	w0, [x19, #40]
    fc64:	cmp	w0, #0x26
    fc68:	b.eq	fc78 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x318>  // b.none
    fc6c:	ldp	x25, x26, [sp, #64]
    fc70:	ldp	x27, x28, [sp, #80]
    fc74:	b	fa08 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0xa8>
    fc78:	ldp	x2, x1, [x19, #8]
    fc7c:	mov	x0, x19
    fc80:	cmp	x2, x1
    fc84:	cset	w1, eq  // eq = none
    fc88:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    fc8c:	str	w0, [x19, #40]
    fc90:	ldp	x2, x3, [sp, #120]
    fc94:	mov	x1, x21
    fc98:	ldr	x4, [sp, #136]
    fc9c:	mov	w0, #0x2                   	// #2
    fca0:	bl	0 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE>
    fca4:	mov	x1, #0x0                   	// #0
    fca8:	bl	0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE>
    fcac:	mov	x20, x0
    fcb0:	mov	x0, #0x30                  	// #48
    fcb4:	bl	0 <_Znwm>
    fcb8:	mov	x2, x0
    fcbc:	ldr	x0, [sp, #112]
    fcc0:	mov	x1, x25
    fcc4:	stp	x23, xzr, [x2]
    fcc8:	stp	x20, xzr, [x2, #16]
    fccc:	stp	xzr, xzr, [x2, #32]
    fcd0:	str	x2, [sp, #152]
    fcd4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    fcd8:	ldr	x27, [sp, #152]
    fcdc:	cbz	x27, fdc4 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x464>
    fce0:	ldp	x23, x26, [x27, #24]
    fce4:	cmp	x23, x26
    fce8:	b.eq	fdac <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x44c>  // b.none
    fcec:	nop
    fcf0:	ldr	x24, [x23, #8]
    fcf4:	cbz	x24, fd38 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x3d8>
    fcf8:	ldp	x20, x21, [x24, #24]
    fcfc:	cmp	x20, x21
    fd00:	b.eq	fd20 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x3c0>  // b.none
    fd04:	nop
    fd08:	mov	x0, x20
    fd0c:	add	x20, x20, #0x10
    fd10:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    fd14:	cmp	x21, x20
    fd18:	b.ne	fd08 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x3a8>  // b.any
    fd1c:	ldr	x21, [x24, #24]
    fd20:	cbz	x21, fd2c <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x3cc>
    fd24:	mov	x0, x21
    fd28:	bl	0 <_ZdlPv>
    fd2c:	mov	x0, x24
    fd30:	mov	x1, #0x30                  	// #48
    fd34:	bl	0 <_ZdlPvm>
    fd38:	ldr	x20, [x23]
    fd3c:	cbz	x20, fd9c <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x43c>
    fd40:	ldr	x0, [x20, #88]
    fd44:	add	x1, x20, #0x68
    fd48:	add	x24, x20, #0x58
    fd4c:	cmp	x0, x1
    fd50:	b.eq	fd58 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x3f8>  // b.none
    fd54:	bl	0 <free>
    fd58:	ldr	x0, [x20, #72]
    fd5c:	add	x21, x20, #0x48
    fd60:	cmp	x24, x0
    fd64:	b.eq	fd6c <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x40c>  // b.none
    fd68:	bl	0 <free>
    fd6c:	ldr	x0, [x20, #56]
    fd70:	cmp	x21, x0
    fd74:	b.eq	fd7c <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x41c>  // b.none
    fd78:	bl	0 <free>
    fd7c:	ldr	x0, [x20, #8]
    fd80:	add	x1, x20, #0x18
    fd84:	cmp	x0, x1
    fd88:	b.eq	fd90 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x430>  // b.none
    fd8c:	bl	0 <free>
    fd90:	mov	x0, x20
    fd94:	mov	x1, #0x80                  	// #128
    fd98:	bl	0 <_ZdlPvm>
    fd9c:	add	x23, x23, #0x10
    fda0:	cmp	x26, x23
    fda4:	b.ne	fcf0 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x390>  // b.any
    fda8:	ldr	x26, [x27, #24]
    fdac:	cbz	x26, fdb8 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x458>
    fdb0:	mov	x0, x26
    fdb4:	bl	0 <_ZdlPv>
    fdb8:	mov	x0, x27
    fdbc:	mov	x1, #0x30                  	// #48
    fdc0:	bl	0 <_ZdlPvm>
    fdc4:	mov	x1, x22
    fdc8:	mov	x0, x19
    fdcc:	adrp	x2, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    fdd0:	mov	x3, #0x4                   	// #4
    fdd4:	add	x2, x2, #0x0
    fdd8:	bl	f5f8 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE>
    fddc:	tst	w0, #0xff
    fde0:	b.ne	fc10 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x2b0>  // b.any
    fde4:	ldr	x2, [x19, #280]
    fde8:	mov	x1, x25
    fdec:	mov	x0, x19
    fdf0:	ldr	x3, [x2, #-8]!
    fdf4:	str	x2, [x19, #280]
    fdf8:	stp	xzr, x3, [sp, #152]
    fdfc:	bl	3968 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE>
    fe00:	and	w24, w0, #0xff
    fe04:	mov	x0, x25
    fe08:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    fe0c:	ldp	x25, x26, [sp, #64]
    fe10:	ldp	x27, x28, [sp, #80]
    fe14:	b	fa08 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0xa8>
    fe18:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    fe1c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    fe20:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    fe24:	add	x3, x3, #0x0
    fe28:	add	x1, x1, #0x0
    fe2c:	add	x0, x0, #0x0
    fe30:	mov	w2, #0xb6b                 	// #2923
    fe34:	stp	x25, x26, [sp, #64]
    fe38:	stp	x27, x28, [sp, #80]
    fe3c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm5TwineC2EPKc:

0000000000000000 <_ZN4llvm5TwineC1EPKc>:
   0:	ldrb	w2, [x1]
   4:	mov	w3, #0x101                 	// #257
   8:	stp	xzr, xzr, [x0]
   c:	strh	w3, [x0, #16]
  10:	cbz	w2, 20 <_ZN4llvm5TwineC1EPKc+0x20>
  14:	mov	w2, #0x3                   	// #3
  18:	str	x1, [x0]
  1c:	strb	w2, [x0, #16]
  20:	ret

Disassembly of section .text._ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:

0000000000000000 <_ZN4llvm5TwineC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
   0:	mov	w2, #0x104                 	// #260
   4:	stp	x1, xzr, [x0]
   8:	strh	w2, [x0, #16]
   c:	ret

Disassembly of section .text._ZN4llvm5TwineC2EPKcRKNS_9StringRefE:

0000000000000000 <_ZN4llvm5TwineC1EPKcRKNS_9StringRefE>:
   0:	mov	w3, #0x503                 	// #1283
   4:	stp	x1, x2, [x0]
   8:	strh	w3, [x0, #16]
   c:	ret

Disassembly of section .text._ZNK4llvm5Twine6concatERKS0_:

0000000000000000 <_ZNK4llvm5Twine6concatERKS0_>:
   0:	ldrb	w2, [x0, #16]
   4:	cbz	w2, 10 <_ZNK4llvm5Twine6concatERKS0_+0x10>
   8:	ldrb	w3, [x1, #16]
   c:	cbnz	w3, 20 <_ZNK4llvm5Twine6concatERKS0_+0x20>
  10:	mov	w0, #0x100                 	// #256
  14:	stp	xzr, xzr, [x8]
  18:	strh	w0, [x8, #16]
  1c:	ret
  20:	cmp	w2, #0x1
  24:	b.eq	7c <_ZNK4llvm5Twine6concatERKS0_+0x7c>  // b.none
  28:	cmp	w3, #0x1
  2c:	b.eq	90 <_ZNK4llvm5Twine6concatERKS0_+0x90>  // b.none
  30:	ldrb	w4, [x0, #17]
  34:	cmp	w4, #0x1
  38:	b.eq	a4 <_ZNK4llvm5Twine6concatERKS0_+0xa4>  // b.none
  3c:	ldrb	w2, [x1, #17]
  40:	cmp	w2, #0x1
  44:	b.eq	100 <_ZNK4llvm5Twine6concatERKS0_+0x100>  // b.none
  48:	mov	w2, #0x202                 	// #514
  4c:	mov	w3, #0x2                   	// #2
  50:	stp	x0, x1, [x8]
  54:	strh	w2, [x8, #16]
  58:	ldrb	w2, [x0, #16]
  5c:	cbz	w2, d8 <_ZNK4llvm5Twine6concatERKS0_+0xd8>
  60:	ldrb	w0, [x0, #17]
  64:	cmp	w0, #0x1
  68:	b.eq	d8 <_ZNK4llvm5Twine6concatERKS0_+0xd8>  // b.none
  6c:	nop
  70:	cmp	w3, #0x2
  74:	b.eq	d0 <_ZNK4llvm5Twine6concatERKS0_+0xd0>  // b.none
  78:	ret
  7c:	ldp	x2, x3, [x1]
  80:	stp	x2, x3, [x8]
  84:	ldr	x0, [x1, #16]
  88:	str	x0, [x8, #16]
  8c:	ret
  90:	ldp	x2, x3, [x0]
  94:	stp	x2, x3, [x8]
  98:	ldr	x0, [x0, #16]
  9c:	str	x0, [x8, #16]
  a0:	ret
  a4:	ldrb	w4, [x1, #17]
  a8:	ldr	x0, [x0]
  ac:	cmp	w4, #0x1
  b0:	b.ne	118 <_ZNK4llvm5Twine6concatERKS0_+0x118>  // b.any
  b4:	ldr	x1, [x1]
  b8:	stp	x0, x1, [x8]
  bc:	cmp	w2, #0x2
  c0:	strb	w2, [x8, #16]
  c4:	strb	w3, [x8, #17]
  c8:	b.ne	70 <_ZNK4llvm5Twine6concatERKS0_+0x70>  // b.any
  cc:	b	58 <_ZNK4llvm5Twine6concatERKS0_+0x58>
  d0:	ldrb	w0, [x1, #16]
  d4:	cbnz	w0, 130 <_ZNK4llvm5Twine6concatERKS0_+0x130>
  d8:	stp	x29, x30, [sp, #-16]!
  dc:	adrp	x3, 0 <_ZNK4llvm5Twine6concatERKS0_>
  e0:	adrp	x1, 0 <_ZNK4llvm5Twine6concatERKS0_>
  e4:	mov	x29, sp
  e8:	adrp	x0, 0 <_ZNK4llvm5Twine6concatERKS0_>
  ec:	add	x3, x3, #0x0
  f0:	add	x1, x1, #0x0
  f4:	add	x0, x0, #0x0
  f8:	mov	w2, #0xb8                  	// #184
  fc:	bl	0 <__assert_fail>
 100:	ldr	x1, [x1]
 104:	mov	w2, #0x2                   	// #2
 108:	stp	x0, x1, [x8]
 10c:	strb	w2, [x8, #16]
 110:	strb	w3, [x8, #17]
 114:	b	58 <_ZNK4llvm5Twine6concatERKS0_+0x58>
 118:	mov	w3, #0x2                   	// #2
 11c:	stp	x0, x1, [x8]
 120:	cmp	w2, #0x2
 124:	strb	w2, [x8, #16]
 128:	strb	w3, [x8, #17]
 12c:	b.eq	140 <_ZNK4llvm5Twine6concatERKS0_+0x140>  // b.none
 130:	ldrb	w0, [x1, #17]
 134:	cmp	w0, #0x1
 138:	b.eq	d8 <_ZNK4llvm5Twine6concatERKS0_+0xd8>  // b.none
 13c:	ret
 140:	mov	w3, w2
 144:	b	58 <_ZNK4llvm5Twine6concatERKS0_+0x58>

Disassembly of section .text._ZN4llvm6Record8addValueERKNS_9RecordValE:

0000000000000000 <_ZN4llvm6Record8addValueERKNS_9RecordValE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	w4, #0x18                  	// #24
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	ldr	x2, [x0, #72]
  1c:	ldr	w0, [x0, #80]
  20:	ldr	x5, [x1]
  24:	umaddl	x4, w0, w4, x2
  28:	cmp	x2, x4
  2c:	b.ne	40 <_ZN4llvm6Record8addValueERKNS_9RecordValE+0x40>  // b.any
  30:	b	6c <_ZN4llvm6Record8addValueERKNS_9RecordValE+0x6c>
  34:	add	x2, x2, #0x18
  38:	cmp	x4, x2
  3c:	b.eq	6c <_ZN4llvm6Record8addValueERKNS_9RecordValE+0x6c>  // b.none
  40:	ldr	x3, [x2]
  44:	cmp	x5, x3
  48:	b.ne	34 <_ZN4llvm6Record8addValueERKNS_9RecordValE+0x34>  // b.any
  4c:	adrp	x3, 0 <_ZN4llvm6Record8addValueERKNS_9RecordValE>
  50:	adrp	x1, 0 <_ZN4llvm6Record8addValueERKNS_9RecordValE>
  54:	adrp	x0, 0 <_ZN4llvm6Record8addValueERKNS_9RecordValE>
  58:	add	x3, x3, #0x0
  5c:	add	x1, x1, #0x0
  60:	add	x0, x0, #0x0
  64:	mov	w2, #0x60a                 	// #1546
  68:	bl	0 <__assert_fail>
  6c:	ldr	w1, [x19, #84]
  70:	cmp	w0, w1
  74:	b.cs	b0 <_ZN4llvm6Record8addValueERKNS_9RecordValE+0xb0>  // b.hs, b.nlast
  78:	ldp	x0, x1, [x20]
  7c:	stp	x0, x1, [x4]
  80:	ldr	x0, [x20, #16]
  84:	str	x0, [x4, #16]
  88:	ldp	w0, w2, [x19, #80]
  8c:	mov	w1, w0
  90:	add	x1, x1, #0x1
  94:	cmp	x1, x2
  98:	b.hi	d8 <_ZN4llvm6Record8addValueERKNS_9RecordValE+0xd8>  // b.pmore
  9c:	add	w0, w0, #0x1
  a0:	str	w0, [x19, #80]
  a4:	ldp	x19, x20, [sp, #16]
  a8:	ldp	x29, x30, [sp], #32
  ac:	ret
  b0:	add	x1, x19, #0x58
  b4:	add	x0, x19, #0x48
  b8:	mov	x3, #0x18                  	// #24
  bc:	mov	x2, #0x0                   	// #0
  c0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  c4:	ldr	w4, [x19, #80]
  c8:	mov	w1, #0x18                  	// #24
  cc:	ldr	x0, [x19, #72]
  d0:	umaddl	x4, w4, w1, x0
  d4:	b	78 <_ZN4llvm6Record8addValueERKNS_9RecordValE+0x78>
  d8:	adrp	x3, 0 <_ZN4llvm6Record8addValueERKNS_9RecordValE>
  dc:	adrp	x1, 0 <_ZN4llvm6Record8addValueERKNS_9RecordValE>
  e0:	adrp	x0, 0 <_ZN4llvm6Record8addValueERKNS_9RecordValE>
  e4:	add	x3, x3, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x0, x0, #0x0
  f0:	mov	w2, #0x43                  	// #67
  f4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm6Record11removeValueEPNS_4InitE:

0000000000000000 <_ZN4llvm6Record11removeValueEPNS_4InitE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	ldr	w6, [x0, #80]
   c:	str	x19, [sp, #16]
  10:	cbz	w6, ac <_ZN4llvm6Record11removeValueEPNS_4InitE+0xac>
  14:	ldr	x7, [x0, #72]
  18:	mov	x19, x0
  1c:	mov	w4, w6
  20:	sub	w5, w6, #0x1
  24:	mov	x0, x7
  28:	mov	x2, #0x0                   	// #0
  2c:	b	48 <_ZN4llvm6Record11removeValueEPNS_4InitE+0x48>
  30:	cmp	x5, x2
  34:	b.eq	ac <_ZN4llvm6Record11removeValueEPNS_4InitE+0xac>  // b.none
  38:	add	x2, x2, #0x1
  3c:	add	x0, x0, #0x18
  40:	cmp	x4, x2
  44:	b.eq	c4 <_ZN4llvm6Record11removeValueEPNS_4InitE+0xc4>  // b.none
  48:	ldr	x3, [x0]
  4c:	cmp	x1, x3
  50:	b.ne	30 <_ZN4llvm6Record11removeValueEPNS_4InitE+0x30>  // b.any
  54:	cmp	x7, x0
  58:	b.hi	e4 <_ZN4llvm6Record11removeValueEPNS_4InitE+0xe4>  // b.pmore
  5c:	mov	w2, #0x18                  	// #24
  60:	umaddl	x2, w6, w2, x7
  64:	cmp	x0, x2
  68:	b.cs	124 <_ZN4llvm6Record11removeValueEPNS_4InitE+0x124>  // b.hs, b.nlast
  6c:	add	x1, x0, #0x18
  70:	cmp	x2, x1
  74:	b.eq	88 <_ZN4llvm6Record11removeValueEPNS_4InitE+0x88>  // b.none
  78:	sub	x2, x2, x1
  7c:	bl	0 <memmove>
  80:	ldr	w6, [x19, #80]
  84:	mov	w4, w6
  88:	ldr	w0, [x19, #84]
  8c:	sub	x4, x4, #0x1
  90:	cmp	x4, x0
  94:	b.hi	104 <_ZN4llvm6Record11removeValueEPNS_4InitE+0x104>  // b.pmore
  98:	sub	w6, w6, #0x1
  9c:	str	w6, [x19, #80]
  a0:	ldr	x19, [sp, #16]
  a4:	ldp	x29, x30, [sp], #32
  a8:	ret
  ac:	adrp	x1, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
  b0:	adrp	x0, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
  b4:	add	x1, x1, #0x0
  b8:	add	x0, x0, #0x0
  bc:	mov	w2, #0x614                 	// #1556
  c0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  c4:	adrp	x3, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
  c8:	adrp	x1, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
  cc:	adrp	x0, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
  d0:	add	x3, x3, #0x0
  d4:	add	x1, x1, #0x0
  d8:	add	x0, x0, #0x0
  dc:	mov	w2, #0x95                  	// #149
  e0:	bl	0 <__assert_fail>
  e4:	adrp	x3, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
  e8:	adrp	x1, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
  ec:	adrp	x0, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
  f0:	add	x3, x3, #0x0
  f4:	add	x1, x1, #0x0
  f8:	add	x0, x0, #0x0
  fc:	mov	w2, #0x1b6                 	// #438
 100:	bl	0 <__assert_fail>
 104:	adrp	x3, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
 108:	adrp	x1, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
 10c:	adrp	x0, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
 110:	add	x3, x3, #0x0
 114:	add	x1, x1, #0x0
 118:	add	x0, x0, #0x0
 11c:	mov	w2, #0x43                  	// #67
 120:	bl	0 <__assert_fail>
 124:	adrp	x3, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
 128:	adrp	x1, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
 12c:	adrp	x0, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
 130:	add	x3, x3, #0x0
 134:	add	x1, x1, #0x0
 138:	add	x0, x0, #0x0
 13c:	mov	w2, #0x1b7                 	// #439
 140:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE:

0000000000000000 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x2
  10:	ldr	x20, [x0, #64]
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x21, x0
  1c:	stp	x23, x24, [sp, #48]
  20:	str	x25, [sp, #64]
  24:	mov	x25, x1
  28:	cbz	x20, a8 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0xa8>
  2c:	add	x24, x0, #0x38
  30:	mov	x23, x24
  34:	nop
  38:	ldp	x0, x22, [x20, #32]
  3c:	cmp	x22, x19
  40:	b.hi	144 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x144>  // b.pmore
  44:	cbz	x22, 58 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x58>
  48:	mov	x2, x22
  4c:	mov	x1, x25
  50:	bl	0 <memcmp>
  54:	cbnz	w0, 158 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x158>
  58:	cmp	x22, x19
  5c:	b.eq	15c <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x15c>  // b.none
  60:	cmp	x22, x19
  64:	b.cs	15c <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x15c>  // b.hs, b.nlast
  68:	ldr	x20, [x20, #24]
  6c:	cbnz	x20, 38 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x38>
  70:	cmp	x24, x23
  74:	b.eq	a8 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0xa8>  // b.none
  78:	ldp	x1, x20, [x23, #32]
  7c:	cmp	x20, x19
  80:	b.cc	194 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x194>  // b.lo, b.ul, b.last
  84:	cbz	x19, 98 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x98>
  88:	mov	x2, x19
  8c:	mov	x0, x25
  90:	bl	0 <memcmp>
  94:	cbnz	w0, 1a8 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x1a8>
  98:	cmp	x20, x19
  9c:	b.eq	1ac <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x1ac>  // b.none
  a0:	cmp	x20, x19
  a4:	b.ls	1ac <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x1ac>  // b.plast
  a8:	ldr	x20, [x21, #136]
  ac:	add	x21, x21, #0x80
  b0:	cbz	x20, 1cc <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x1cc>
  b4:	mov	x23, x21
  b8:	ldp	x0, x22, [x20, #32]
  bc:	cmp	x22, x19
  c0:	b.hi	16c <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x16c>  // b.pmore
  c4:	cbz	x22, d8 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0xd8>
  c8:	mov	x2, x22
  cc:	mov	x1, x25
  d0:	bl	0 <memcmp>
  d4:	cbnz	w0, 180 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x180>
  d8:	cmp	x22, x19
  dc:	b.eq	184 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x184>  // b.none
  e0:	cmp	x22, x19
  e4:	b.cs	184 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x184>  // b.hs, b.nlast
  e8:	ldr	x20, [x20, #24]
  ec:	cbnz	x20, b8 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0xb8>
  f0:	cmp	x21, x23
  f4:	b.eq	1cc <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x1cc>  // b.none
  f8:	ldp	x1, x21, [x23, #32]
  fc:	cmp	x21, x19
 100:	b.cc	1ec <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x1ec>  // b.lo, b.ul, b.last
 104:	cbz	x19, 118 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x118>
 108:	mov	x0, x25
 10c:	mov	x2, x19
 110:	bl	0 <memcmp>
 114:	cbnz	w0, 200 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x200>
 118:	cmp	x21, x19
 11c:	b.eq	204 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x204>  // b.none
 120:	cmp	x21, x19
 124:	b.ls	204 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x204>  // b.plast
 128:	mov	x0, x20
 12c:	ldp	x19, x20, [sp, #16]
 130:	ldp	x21, x22, [sp, #32]
 134:	ldp	x23, x24, [sp, #48]
 138:	ldr	x25, [sp, #64]
 13c:	ldp	x29, x30, [sp], #80
 140:	ret
 144:	cbz	x19, 15c <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x15c>
 148:	mov	x2, x19
 14c:	mov	x1, x25
 150:	bl	0 <memcmp>
 154:	cbz	w0, 60 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x60>
 158:	tbnz	w0, #31, 68 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x68>
 15c:	mov	x23, x20
 160:	ldr	x20, [x20, #16]
 164:	cbnz	x20, 38 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x38>
 168:	b	70 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x70>
 16c:	cbz	x19, 184 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x184>
 170:	mov	x2, x19
 174:	mov	x1, x25
 178:	bl	0 <memcmp>
 17c:	cbz	w0, e0 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0xe0>
 180:	tbnz	w0, #31, e8 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0xe8>
 184:	mov	x23, x20
 188:	ldr	x20, [x20, #16]
 18c:	cbnz	x20, b8 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0xb8>
 190:	b	f0 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0xf0>
 194:	cbz	x20, 1ac <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x1ac>
 198:	mov	x2, x20
 19c:	mov	x0, x25
 1a0:	bl	0 <memcmp>
 1a4:	cbz	w0, a0 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0xa0>
 1a8:	tbnz	w0, #31, a8 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0xa8>
 1ac:	ldr	x0, [x23, #64]
 1b0:	cbz	x0, a8 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0xa8>
 1b4:	ldp	x19, x20, [sp, #16]
 1b8:	ldp	x21, x22, [sp, #32]
 1bc:	ldp	x23, x24, [sp, #48]
 1c0:	ldr	x25, [sp, #64]
 1c4:	ldp	x29, x30, [sp], #80
 1c8:	b	0 <_ZN4llvm6Record10getDefInitEv>
 1cc:	mov	x20, #0x0                   	// #0
 1d0:	mov	x0, x20
 1d4:	ldp	x19, x20, [sp, #16]
 1d8:	ldp	x21, x22, [sp, #32]
 1dc:	ldp	x23, x24, [sp, #48]
 1e0:	ldr	x25, [sp, #64]
 1e4:	ldp	x29, x30, [sp], #80
 1e8:	ret
 1ec:	cbz	x21, 204 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x204>
 1f0:	mov	x0, x25
 1f4:	mov	x2, x21
 1f8:	bl	0 <memcmp>
 1fc:	cbz	w0, 120 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x120>
 200:	tbnz	w0, #31, 128 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x128>
 204:	ldr	x20, [x23, #64]
 208:	ldp	x21, x22, [sp, #32]
 20c:	mov	x0, x20
 210:	ldp	x19, x20, [sp, #16]
 214:	ldp	x23, x24, [sp, #48]
 218:	ldr	x25, [sp, #64]
 21c:	ldp	x29, x30, [sp], #80
 220:	ret

Disassembly of section .text._ZNK4llvm8TGParser8TokErrorERKNS_5TwineE:

0000000000000000 <_ZNK4llvm8TGParser8TokErrorERKNS_5TwineE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x1
  10:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
  14:	mov	x3, x0
  18:	mov	x2, x19
  1c:	add	x0, sp, #0x28
  20:	mov	x20, #0x1                   	// #1
  24:	mov	x1, x20
  28:	str	x3, [sp, #40]
  2c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
  30:	mov	w0, w20
  34:	ldp	x19, x20, [sp, #16]
  38:	ldp	x29, x30, [sp], #48
  3c:	ret

Disassembly of section .text._ZN4llvm12RecordsEntryD2Ev:

0000000000000000 <_ZN4llvm12RecordsEntryD1Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	ldr	x21, [x0, #8]
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x20, x0
  18:	cbz	x21, 58 <_ZN4llvm12RecordsEntryD1Ev+0x58>
  1c:	ldp	x19, x22, [x21, #24]
  20:	cmp	x19, x22
  24:	b.eq	40 <_ZN4llvm12RecordsEntryD1Ev+0x40>  // b.none
  28:	mov	x0, x19
  2c:	add	x19, x19, #0x10
  30:	bl	0 <_ZN4llvm12RecordsEntryD1Ev>
  34:	cmp	x22, x19
  38:	b.ne	28 <_ZN4llvm12RecordsEntryD1Ev+0x28>  // b.any
  3c:	ldr	x22, [x21, #24]
  40:	cbz	x22, 4c <_ZN4llvm12RecordsEntryD1Ev+0x4c>
  44:	mov	x0, x22
  48:	bl	0 <_ZdlPv>
  4c:	mov	x0, x21
  50:	mov	x1, #0x30                  	// #48
  54:	bl	0 <_ZdlPvm>
  58:	ldr	x19, [x20]
  5c:	cbz	x19, c8 <_ZN4llvm12RecordsEntryD1Ev+0xc8>
  60:	ldr	x0, [x19, #88]
  64:	add	x1, x19, #0x68
  68:	add	x21, x19, #0x58
  6c:	cmp	x0, x1
  70:	b.eq	78 <_ZN4llvm12RecordsEntryD1Ev+0x78>  // b.none
  74:	bl	0 <free>
  78:	ldr	x0, [x19, #72]
  7c:	add	x20, x19, #0x48
  80:	cmp	x21, x0
  84:	b.eq	8c <_ZN4llvm12RecordsEntryD1Ev+0x8c>  // b.none
  88:	bl	0 <free>
  8c:	ldr	x0, [x19, #56]
  90:	cmp	x20, x0
  94:	b.eq	9c <_ZN4llvm12RecordsEntryD1Ev+0x9c>  // b.none
  98:	bl	0 <free>
  9c:	ldr	x0, [x19, #8]
  a0:	add	x1, x19, #0x18
  a4:	cmp	x0, x1
  a8:	b.eq	b0 <_ZN4llvm12RecordsEntryD1Ev+0xb0>  // b.none
  ac:	bl	0 <free>
  b0:	mov	x0, x19
  b4:	mov	x1, #0x80                  	// #128
  b8:	ldp	x19, x20, [sp, #16]
  bc:	ldp	x21, x22, [sp, #32]
  c0:	ldp	x29, x30, [sp], #48
  c4:	b	0 <_ZdlPvm>
  c8:	ldp	x19, x20, [sp, #16]
  cc:	ldp	x21, x22, [sp, #32]
  d0:	ldp	x29, x30, [sp], #48
  d4:	ret

Disassembly of section .text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_:

0000000000000000 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_>:
   0:	mov	x5, x1
   4:	mov	x1, x0
   8:	stp	x29, x30, [sp, #-32]!
   c:	mov	x29, sp
  10:	ldr	x4, [x0, #8]
  14:	ldr	x2, [x5, #8]
  18:	ldr	x3, [x1], #16
  1c:	str	x19, [sp, #16]
  20:	add	x6, x4, x2
  24:	mov	x19, x8
  28:	cmp	x3, x1
  2c:	b.eq	f8 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0xf8>  // b.none
  30:	ldr	x1, [x0, #16]
  34:	cmp	x6, x1
  38:	ldr	x1, [x5]
  3c:	b.ls	58 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x58>  // b.plast
  40:	add	x7, x5, #0x10
  44:	cmp	x1, x7
  48:	b.eq	100 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x100>  // b.none
  4c:	ldr	x7, [x5, #16]
  50:	cmp	x6, x7
  54:	b.ls	a4 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0xa4>  // b.plast
  58:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
  5c:	mov	x1, x0
  60:	mov	x2, x1
  64:	add	x0, x19, #0x10
  68:	str	x0, [x19]
  6c:	ldr	x0, [x2], #16
  70:	cmp	x0, x2
  74:	b.eq	d0 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0xd0>  // b.none
  78:	str	x0, [x19]
  7c:	ldr	x0, [x1, #8]
  80:	str	x0, [x19, #8]
  84:	ldr	x3, [x1, #16]
  88:	str	x3, [x19, #16]
  8c:	stp	x2, xzr, [x1]
  90:	mov	x0, x19
  94:	strb	wzr, [x1, #16]
  98:	ldr	x19, [sp, #16]
  9c:	ldp	x29, x30, [sp], #32
  a0:	ret
  a4:	mov	x1, #0x0                   	// #0
  a8:	mov	x2, #0x0                   	// #0
  ac:	mov	x0, x5
  b0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
  b4:	mov	x1, x0
  b8:	add	x0, x19, #0x10
  bc:	mov	x2, x1
  c0:	str	x0, [x19]
  c4:	ldr	x0, [x2], #16
  c8:	cmp	x0, x2
  cc:	b.ne	78 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x78>  // b.any
  d0:	ldr	x0, [x1, #8]
  d4:	str	x0, [x19, #8]
  d8:	ldp	x4, x5, [x1, #16]
  dc:	stp	x4, x5, [x19, #16]
  e0:	mov	x0, x19
  e4:	stp	x2, xzr, [x1]
  e8:	strb	wzr, [x1, #16]
  ec:	ldr	x19, [sp, #16]
  f0:	ldp	x29, x30, [sp], #32
  f4:	ret
  f8:	mov	x1, #0xf                   	// #15
  fc:	b	34 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x34>
 100:	mov	x7, #0xf                   	// #15
 104:	b	50 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x50>

Disassembly of section .text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_:

0000000000000000 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x8
  14:	mov	x0, x1
  18:	str	x21, [sp, #32]
  1c:	mov	x21, x1
  20:	bl	0 <strlen>
  24:	ldr	x3, [x20, #8]
  28:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
  2c:	sub	x1, x1, x3
  30:	cmp	x0, x1
  34:	b.hi	a0 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_+0xa0>  // b.pmore
  38:	mov	x2, x0
  3c:	mov	x1, x21
  40:	mov	x0, x20
  44:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
  48:	add	x2, x19, #0x10
  4c:	str	x2, [x19]
  50:	mov	x2, x0
  54:	mov	x1, x0
  58:	ldr	x0, [x2], #16
  5c:	cmp	x0, x2
  60:	b.eq	94 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_+0x94>  // b.none
  64:	ldr	x3, [x1, #16]
  68:	str	x0, [x19]
  6c:	str	x3, [x19, #16]
  70:	ldr	x0, [x1, #8]
  74:	str	x0, [x19, #8]
  78:	stp	x2, xzr, [x1]
  7c:	mov	x0, x19
  80:	strb	wzr, [x1, #16]
  84:	ldp	x19, x20, [sp, #16]
  88:	ldr	x21, [sp, #32]
  8c:	ldp	x29, x30, [sp], #48
  90:	ret
  94:	ldp	x4, x5, [x1, #16]
  98:	stp	x4, x5, [x19, #16]
  9c:	b	70 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_+0x70>
  a0:	adrp	x0, 0 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
  a4:	add	x0, x0, #0x0
  a8:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPNS_4InitELb1EE9push_backERKS2_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPNS_4InitELb1EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	mov	x19, x0
  14:	ldp	w1, w2, [x0, #8]
  18:	cmp	w1, w2
  1c:	b.cs	54 <_ZN4llvm23SmallVectorTemplateBaseIPNS_4InitELb1EE9push_backERKS2_+0x54>  // b.hs, b.nlast
  20:	ldr	x0, [x19]
  24:	ldr	x2, [x20]
  28:	str	x2, [x0, w1, uxtw #3]
  2c:	ldp	w0, w2, [x19, #8]
  30:	mov	w1, w0
  34:	add	x1, x1, #0x1
  38:	cmp	x1, x2
  3c:	b.hi	6c <_ZN4llvm23SmallVectorTemplateBaseIPNS_4InitELb1EE9push_backERKS2_+0x6c>  // b.pmore
  40:	add	w0, w0, #0x1
  44:	str	w0, [x19, #8]
  48:	ldp	x19, x20, [sp, #16]
  4c:	ldp	x29, x30, [sp], #32
  50:	ret
  54:	add	x1, x0, #0x10
  58:	mov	x3, #0x8                   	// #8
  5c:	mov	x2, #0x0                   	// #0
  60:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  64:	ldr	w1, [x19, #8]
  68:	b	20 <_ZN4llvm23SmallVectorTemplateBaseIPNS_4InitELb1EE9push_backERKS2_+0x20>
  6c:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_4InitELb1EE9push_backERKS2_>
  70:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_4InitELb1EE9push_backERKS2_>
  74:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_4InitELb1EE9push_backERKS2_>
  78:	add	x3, x3, #0x0
  7c:	add	x1, x1, #0x0
  80:	add	x0, x0, #0x0
  84:	mov	w2, #0x43                  	// #67
  88:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED2Ev:

0000000000000000 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x23, x24, [sp, #48]
  10:	ldp	x20, x23, [x0]
  14:	cmp	x20, x23
  18:	b.eq	e8 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev+0xe8>  // b.none
  1c:	mov	x24, x0
  20:	stp	x21, x22, [sp, #32]
  24:	nop
  28:	ldr	x21, [x20, #8]
  2c:	cbz	x21, 70 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev+0x70>
  30:	ldp	x19, x22, [x21, #24]
  34:	cmp	x19, x22
  38:	b.eq	58 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev+0x58>  // b.none
  3c:	nop
  40:	mov	x0, x19
  44:	add	x19, x19, #0x10
  48:	bl	0 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev>
  4c:	cmp	x22, x19
  50:	b.ne	40 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev+0x40>  // b.any
  54:	ldr	x22, [x21, #24]
  58:	cbz	x22, 64 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev+0x64>
  5c:	mov	x0, x22
  60:	bl	0 <_ZdlPv>
  64:	mov	x0, x21
  68:	mov	x1, #0x30                  	// #48
  6c:	bl	0 <_ZdlPvm>
  70:	ldr	x19, [x20]
  74:	cbz	x19, d4 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev+0xd4>
  78:	ldr	x0, [x19, #88]
  7c:	add	x1, x19, #0x68
  80:	add	x22, x19, #0x58
  84:	cmp	x0, x1
  88:	b.eq	90 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev+0x90>  // b.none
  8c:	bl	0 <free>
  90:	ldr	x0, [x19, #72]
  94:	add	x21, x19, #0x48
  98:	cmp	x22, x0
  9c:	b.eq	a4 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev+0xa4>  // b.none
  a0:	bl	0 <free>
  a4:	ldr	x0, [x19, #56]
  a8:	cmp	x21, x0
  ac:	b.eq	b4 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev+0xb4>  // b.none
  b0:	bl	0 <free>
  b4:	ldr	x0, [x19, #8]
  b8:	add	x1, x19, #0x18
  bc:	cmp	x0, x1
  c0:	b.eq	c8 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev+0xc8>  // b.none
  c4:	bl	0 <free>
  c8:	mov	x0, x19
  cc:	mov	x1, #0x80                  	// #128
  d0:	bl	0 <_ZdlPvm>
  d4:	add	x20, x20, #0x10
  d8:	cmp	x23, x20
  dc:	b.ne	28 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev+0x28>  // b.any
  e0:	ldp	x21, x22, [sp, #32]
  e4:	ldr	x23, [x24]
  e8:	cbz	x23, 100 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev+0x100>
  ec:	mov	x0, x23
  f0:	ldp	x19, x20, [sp, #16]
  f4:	ldp	x23, x24, [sp, #48]
  f8:	ldp	x29, x30, [sp], #64
  fc:	b	0 <_ZdlPv>
 100:	ldp	x19, x20, [sp, #16]
 104:	ldp	x23, x24, [sp, #48]
 108:	ldp	x29, x30, [sp], #64
 10c:	ret

Disassembly of section .text._ZN4llvm8dyn_castINS_8BitsInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm8dyn_castINS_8BitsInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	cbz	x0, 14 <_ZN4llvm8dyn_castINS_8BitsInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x14>
   4:	ldrb	w1, [x0, #8]
   8:	cmp	w1, #0x3
   c:	csel	x0, x0, xzr, eq  // eq = none
  10:	ret
  14:	stp	x29, x30, [sp, #-16]!
  18:	mov	x29, sp
  1c:	bl	0 <_ZN4llvm8dyn_castINS_8BitsInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>

Disassembly of section .text._ZN4llvm8dyn_castINS_9TypedInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm8dyn_castINS_9TypedInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	cbz	x0, 1c <_ZN4llvm8dyn_castINS_9TypedInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x1c>
   4:	ldrb	w1, [x0, #8]
   8:	sub	w1, w1, #0x1
   c:	and	w1, w1, #0xff
  10:	cmp	w1, #0x16
  14:	csel	x0, x0, xzr, ls  // ls = plast
  18:	ret
  1c:	stp	x29, x30, [sp, #-16]!
  20:	adrp	x3, 0 <_ZN4llvm8dyn_castINS_9TypedInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  24:	adrp	x1, 0 <_ZN4llvm8dyn_castINS_9TypedInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  28:	mov	x29, sp
  2c:	adrp	x0, 0 <_ZN4llvm8dyn_castINS_9TypedInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  30:	add	x3, x3, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x0, x0, #0x0
  3c:	mov	w2, #0x69                  	// #105
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_:

0000000000000000 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x8
  10:	stp	x21, x22, [sp, #32]
  14:	mov	x21, x1
  18:	mov	x22, x0
  1c:	bl	0 <strlen>
  20:	strb	wzr, [x19, #16]
  24:	add	x1, x19, #0x10
  28:	stp	x1, xzr, [x19]
  2c:	mov	x20, x0
  30:	ldr	x1, [x21, #8]
  34:	mov	x0, x19
  38:	add	x1, x20, x1
  3c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
  40:	ldr	x0, [x19, #8]
  44:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
  48:	sub	x1, x1, x0
  4c:	cmp	x20, x1
  50:	b.hi	84 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_+0x84>  // b.pmore
  54:	mov	x2, x20
  58:	mov	x1, x22
  5c:	mov	x0, x19
  60:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
  64:	ldp	x1, x2, [x21]
  68:	mov	x0, x19
  6c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
  70:	mov	x0, x19
  74:	ldp	x19, x20, [sp, #16]
  78:	ldp	x21, x22, [sp, #32]
  7c:	ldp	x29, x30, [sp], #48
  80:	ret
  84:	adrp	x0, 0 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
  88:	add	x0, x0, #0x0
  8c:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm8dyn_castINS_9ListRecTyENS_5RecTyEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm8dyn_castINS_9ListRecTyENS_5RecTyEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	cbz	x0, 14 <_ZN4llvm8dyn_castINS_9ListRecTyENS_5RecTyEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x14>
   4:	ldr	w1, [x0, #8]
   8:	cmp	w1, #0x5
   c:	csel	x0, x0, xzr, eq  // eq = none
  10:	ret
  14:	stp	x29, x30, [sp, #-16]!
  18:	mov	x29, sp
  1c:	bl	0 <_ZN4llvm8dyn_castINS_9ListRecTyENS_5RecTyEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>

Disassembly of section .text._ZSt11make_uniqueIN4llvm6RecordEJRA7_KcNS0_8ArrayRefINS0_5SMLocEEERNS0_12RecordKeeperEEENSt9_MakeUniqIT_E15__single_objectEDpOT0_:

0000000000000000 <_ZSt11make_uniqueIN4llvm6RecordEJRA7_KcNS0_8ArrayRefINS0_5SMLocEEERNS0_12RecordKeeperEEENSt9_MakeUniqIT_E15__single_objectEDpOT0_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x1
  10:	mov	x20, x0
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x22, x8
  1c:	stp	x23, x24, [sp, #48]
  20:	mov	x23, x2
  24:	str	x25, [sp, #64]
  28:	bl	0 <strlen>
  2c:	mov	x25, x0
  30:	mov	x0, #0x80                  	// #128
  34:	ldp	x24, x21, [x19]
  38:	bl	0 <_Znwm>
  3c:	mov	x1, x25
  40:	mov	x19, x0
  44:	mov	x0, x20
  48:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
  4c:	mov	x3, x19
  50:	mov	x2, #0x400000000           	// #17179869184
  54:	mov	x1, #0x0                   	// #0
  58:	sbfx	x20, x21, #0, #61
  5c:	lsl	x21, x21, #3
  60:	str	x0, [x3], #24
  64:	cmp	x20, #0x4
  68:	stp	x3, x2, [x19, #8]
  6c:	b.hi	fc <_ZSt11make_uniqueIN4llvm6RecordEJRA7_KcNS0_8ArrayRefINS0_5SMLocEEERNS0_12RecordKeeperEEENSt9_MakeUniqIT_E15__single_objectEDpOT0_+0xfc>  // b.pmore
  70:	cbz	x21, 88 <_ZSt11make_uniqueIN4llvm6RecordEJRA7_KcNS0_8ArrayRefINS0_5SMLocEEERNS0_12RecordKeeperEEENSt9_MakeUniqIT_E15__single_objectEDpOT0_+0x88>
  74:	mov	x1, x24
  78:	mov	x2, x21
  7c:	mov	x0, x3
  80:	bl	0 <memcpy>
  84:	ldr	w1, [x19, #16]
  88:	ldr	w0, [x19, #20]
  8c:	add	x20, x20, x1
  90:	cmp	x20, x0
  94:	b.hi	120 <_ZSt11make_uniqueIN4llvm6RecordEJRA7_KcNS0_8ArrayRefINS0_5SMLocEEERNS0_12RecordKeeperEEENSt9_MakeUniqIT_E15__single_objectEDpOT0_+0x120>  // b.pmore
  98:	adrp	x1, 0 <_ZN4llvm6Record6LastIDE>
  9c:	add	x2, x19, #0x48
  a0:	stp	x2, xzr, [x19, #56]
  a4:	add	x4, x19, #0x58
  a8:	add	x3, x19, #0x68
  ac:	ldr	x1, [x1]
  b0:	str	w20, [x19, #16]
  b4:	stp	x4, xzr, [x19, #72]
  b8:	mov	x0, x19
  bc:	ldr	w2, [x1]
  c0:	stp	x3, xzr, [x19, #88]
  c4:	add	w5, w2, #0x1
  c8:	stp	x23, xzr, [x19, #104]
  cc:	str	w2, [x19, #120]
  d0:	strh	wzr, [x19, #124]
  d4:	str	w5, [x1]
  d8:	bl	0 <_ZN4llvm6Record9checkNameEv>
  dc:	ldp	x23, x24, [sp, #48]
  e0:	mov	x0, x22
  e4:	ldr	x25, [sp, #64]
  e8:	str	x19, [x22]
  ec:	ldp	x19, x20, [sp, #16]
  f0:	ldp	x21, x22, [sp, #32]
  f4:	ldp	x29, x30, [sp], #80
  f8:	ret
  fc:	mov	x1, x3
 100:	mov	x2, x20
 104:	mov	x3, #0x8                   	// #8
 108:	add	x0, x19, x3
 10c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 110:	ldr	x3, [x19, #8]
 114:	ldr	w1, [x19, #16]
 118:	add	x3, x3, x1, lsl #3
 11c:	b	70 <_ZSt11make_uniqueIN4llvm6RecordEJRA7_KcNS0_8ArrayRefINS0_5SMLocEEERNS0_12RecordKeeperEEENSt9_MakeUniqIT_E15__single_objectEDpOT0_+0x70>
 120:	adrp	x3, 0 <_ZSt11make_uniqueIN4llvm6RecordEJRA7_KcNS0_8ArrayRefINS0_5SMLocEEERNS0_12RecordKeeperEEENSt9_MakeUniqIT_E15__single_objectEDpOT0_>
 124:	adrp	x1, 0 <_ZSt11make_uniqueIN4llvm6RecordEJRA7_KcNS0_8ArrayRefINS0_5SMLocEEERNS0_12RecordKeeperEEENSt9_MakeUniqIT_E15__single_objectEDpOT0_>
 128:	adrp	x0, 0 <_ZSt11make_uniqueIN4llvm6RecordEJRA7_KcNS0_8ArrayRefINS0_5SMLocEEERNS0_12RecordKeeperEEENSt9_MakeUniqIT_E15__single_objectEDpOT0_>
 12c:	add	x3, x3, #0x0
 130:	add	x1, x1, #0x0
 134:	add	x0, x0, #0x0
 138:	mov	w2, #0x43                  	// #67
 13c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	b.eq	5c <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0x5c>  // b.none
  18:	ldr	w2, [x0, #8]
  1c:	mov	x20, x1
  20:	stp	x21, x22, [sp, #32]
  24:	ldr	w21, [x1, #8]
  28:	mov	w22, w21
  2c:	cmp	x2, w21, uxtw
  30:	b.cc	6c <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0x6c>  // b.lo, b.ul, b.last
  34:	cbz	x22, 54 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0x54>
  38:	ldr	x0, [x0]
  3c:	lsl	x2, x22, #3
  40:	ldr	x1, [x1]
  44:	bl	0 <memmove>
  48:	ldr	w0, [x19, #12]
  4c:	cmp	x22, x0
  50:	b.hi	12c <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0x12c>  // b.pmore
  54:	str	w21, [x19, #8]
  58:	ldp	x21, x22, [sp, #32]
  5c:	mov	x0, x19
  60:	ldp	x19, x20, [sp, #16]
  64:	ldp	x29, x30, [sp], #64
  68:	ret
  6c:	ldr	w1, [x0, #12]
  70:	str	x23, [sp, #48]
  74:	cmp	x22, x1
  78:	b.hi	104 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0x104>  // b.pmore
  7c:	lsl	x23, x2, #3
  80:	ldr	x0, [x0]
  84:	ldr	x3, [x20]
  88:	cbnz	x2, d4 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0xd4>
  8c:	lsl	x2, x22, #3
  90:	add	x1, x3, x23
  94:	add	x3, x3, x2
  98:	cmp	x1, x3
  9c:	b.eq	b8 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0xb8>  // b.none
  a0:	sub	x2, x2, x23
  a4:	add	x0, x0, x23
  a8:	bl	0 <memcpy>
  ac:	ldr	w0, [x19, #12]
  b0:	cmp	x22, x0
  b4:	b.hi	130 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0x130>  // b.pmore
  b8:	ldr	x23, [sp, #48]
  bc:	str	w21, [x19, #8]
  c0:	mov	x0, x19
  c4:	ldp	x19, x20, [sp, #16]
  c8:	ldp	x21, x22, [sp, #32]
  cc:	ldp	x29, x30, [sp], #64
  d0:	ret
  d4:	mov	x1, x3
  d8:	mov	x2, x23
  dc:	bl	0 <memmove>
  e0:	ldr	w2, [x20, #8]
  e4:	ldr	x0, [x19]
  e8:	ldr	x1, [x20]
  ec:	lsl	x2, x2, #3
  f0:	add	x3, x1, x2
  f4:	add	x1, x1, x23
  f8:	cmp	x1, x3
  fc:	b.ne	a0 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0xa0>  // b.any
 100:	b	ac <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0xac>
 104:	str	wzr, [x0, #8]
 108:	add	x1, x0, #0x10
 10c:	mov	x2, x22
 110:	mov	x3, #0x8                   	// #8
 114:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 118:	mov	x23, #0x0                   	// #0
 11c:	ldr	w2, [x20, #8]
 120:	ldr	x0, [x19]
 124:	ldr	x1, [x20]
 128:	b	ec <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0xec>
 12c:	str	x23, [sp, #48]
 130:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_>
 134:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_>
 138:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_>
 13c:	add	x3, x3, #0x0
 140:	add	x1, x1, #0x0
 144:	add	x0, x0, #0x0
 148:	mov	w2, #0x43                  	// #67
 14c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_:

0000000000000000 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	b.eq	5c <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0x5c>  // b.none
  18:	ldr	w2, [x0, #8]
  1c:	mov	x20, x1
  20:	stp	x21, x22, [sp, #32]
  24:	ldr	w21, [x1, #8]
  28:	mov	w22, w21
  2c:	cmp	x2, w21, uxtw
  30:	b.cc	6c <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0x6c>  // b.lo, b.ul, b.last
  34:	cbz	x22, 54 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0x54>
  38:	ldr	x0, [x0]
  3c:	lsl	x2, x22, #3
  40:	ldr	x1, [x1]
  44:	bl	0 <memmove>
  48:	ldr	w0, [x19, #12]
  4c:	cmp	x22, x0
  50:	b.hi	12c <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0x12c>  // b.pmore
  54:	str	w21, [x19, #8]
  58:	ldp	x21, x22, [sp, #32]
  5c:	mov	x0, x19
  60:	ldp	x19, x20, [sp, #16]
  64:	ldp	x29, x30, [sp], #64
  68:	ret
  6c:	ldr	w1, [x0, #12]
  70:	str	x23, [sp, #48]
  74:	cmp	x22, x1
  78:	b.hi	104 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0x104>  // b.pmore
  7c:	lsl	x23, x2, #3
  80:	ldr	x0, [x0]
  84:	ldr	x3, [x20]
  88:	cbnz	x2, d4 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0xd4>
  8c:	lsl	x2, x22, #3
  90:	add	x1, x3, x23
  94:	add	x3, x3, x2
  98:	cmp	x1, x3
  9c:	b.eq	b8 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0xb8>  // b.none
  a0:	sub	x2, x2, x23
  a4:	add	x0, x0, x23
  a8:	bl	0 <memcpy>
  ac:	ldr	w0, [x19, #12]
  b0:	cmp	x22, x0
  b4:	b.hi	130 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0x130>  // b.pmore
  b8:	ldr	x23, [sp, #48]
  bc:	str	w21, [x19, #8]
  c0:	mov	x0, x19
  c4:	ldp	x19, x20, [sp, #16]
  c8:	ldp	x21, x22, [sp, #32]
  cc:	ldp	x29, x30, [sp], #64
  d0:	ret
  d4:	mov	x1, x3
  d8:	mov	x2, x23
  dc:	bl	0 <memmove>
  e0:	ldr	w2, [x20, #8]
  e4:	ldr	x0, [x19]
  e8:	ldr	x1, [x20]
  ec:	lsl	x2, x2, #3
  f0:	add	x3, x1, x2
  f4:	add	x1, x1, x23
  f8:	cmp	x1, x3
  fc:	b.ne	a0 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0xa0>  // b.any
 100:	b	ac <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0xac>
 104:	str	wzr, [x0, #8]
 108:	add	x1, x0, #0x10
 10c:	mov	x2, x22
 110:	mov	x3, #0x8                   	// #8
 114:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 118:	mov	x23, #0x0                   	// #0
 11c:	ldr	w2, [x20, #8]
 120:	ldr	x0, [x19]
 124:	ldr	x1, [x20]
 128:	b	ec <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0xec>
 12c:	str	x23, [sp, #48]
 130:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_>
 134:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_>
 138:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_>
 13c:	add	x3, x3, #0x0
 140:	add	x1, x1, #0x0
 144:	add	x0, x0, #0x0
 148:	mov	w2, #0x43                  	// #67
 14c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	b.eq	6c <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0x6c>  // b.none
  18:	ldr	w3, [x0, #8]
  1c:	mov	x20, x1
  20:	stp	x21, x22, [sp, #32]
  24:	ldr	w22, [x1, #8]
  28:	str	x23, [sp, #48]
  2c:	mov	w4, w3
  30:	cmp	w22, w3
  34:	mov	w23, w22
  38:	b.hi	7c <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0x7c>  // b.pmore
  3c:	cbz	x23, 60 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0x60>
  40:	mov	w2, #0x18                  	// #24
  44:	ldr	x0, [x0]
  48:	umull	x2, w22, w2
  4c:	ldr	x1, [x1]
  50:	bl	0 <memmove>
  54:	ldr	w0, [x19, #12]
  58:	cmp	x23, x0
  5c:	b.hi	11c <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0x11c>  // b.pmore
  60:	ldr	x23, [sp, #48]
  64:	str	w22, [x19, #8]
  68:	ldp	x21, x22, [sp, #32]
  6c:	mov	x0, x19
  70:	ldp	x19, x20, [sp, #16]
  74:	ldp	x29, x30, [sp], #64
  78:	ret
  7c:	ldr	w1, [x0, #12]
  80:	cmp	x23, x1
  84:	b.hi	f4 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0xf4>  // b.pmore
  88:	mov	w2, #0x18                  	// #24
  8c:	ldr	x0, [x0]
  90:	umull	x21, w3, w2
  94:	ldr	x5, [x20]
  98:	cbz	x4, d0 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0xd0>
  9c:	mov	x2, x21
  a0:	mov	x1, x5
  a4:	bl	0 <memmove>
  a8:	ldr	w2, [x20, #8]
  ac:	ldr	x0, [x19]
  b0:	ldr	x3, [x20]
  b4:	add	x2, x2, x2, lsl #1
  b8:	add	x1, x3, x21
  bc:	lsl	x2, x2, #3
  c0:	add	x3, x3, x2
  c4:	cmp	x1, x3
  c8:	b.ne	e4 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0xe4>  // b.any
  cc:	b	54 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0x54>
  d0:	umull	x2, w22, w2
  d4:	add	x1, x5, x21
  d8:	add	x5, x5, x2
  dc:	cmp	x1, x5
  e0:	b.eq	60 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0x60>  // b.none
  e4:	sub	x2, x2, x21
  e8:	add	x0, x0, x21
  ec:	bl	0 <memcpy>
  f0:	b	54 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0x54>
  f4:	str	wzr, [x0, #8]
  f8:	mov	x2, x23
  fc:	add	x1, x0, #0x10
 100:	mov	x3, #0x18                  	// #24
 104:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 108:	mov	x21, #0x0                   	// #0
 10c:	ldr	w2, [x20, #8]
 110:	ldr	x0, [x19]
 114:	ldr	x3, [x20]
 118:	b	b4 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0xb4>
 11c:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_>
 120:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_>
 124:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_>
 128:	add	x3, x3, #0x0
 12c:	add	x1, x1, #0x0
 130:	add	x0, x0, #0x0
 134:	mov	w2, #0x43                  	// #67
 138:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	str	x21, [sp, #32]
  18:	mov	x0, #0xffffffff            	// #4294967295
  1c:	str	x1, [sp, #56]
  20:	cmp	x1, x0
  24:	b.hi	118 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0x118>  // b.pmore
  28:	ldr	w2, [x20, #12]
  2c:	mov	x0, #0xffffffff            	// #4294967295
  30:	add	x2, x2, #0x2
  34:	orr	x2, x2, x2, lsr #1
  38:	orr	x2, x2, x2, lsr #2
  3c:	orr	x2, x2, x2, lsr #4
  40:	orr	x2, x2, x2, lsr #8
  44:	orr	x1, x2, x2, lsr #16
  48:	orr	x2, x1, x2, lsr #32
  4c:	add	x2, x2, #0x1
  50:	str	x2, [sp, #72]
  54:	cmp	x19, x2
  58:	csel	x2, x19, x2, cs  // cs = hs, nlast
  5c:	cmp	x2, x0
  60:	b.hi	e8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0xe8>  // b.pmore
  64:	add	x0, x2, x2, lsl #1
  68:	mov	w19, w2
  6c:	lsl	x0, x0, #3
  70:	bl	0 <malloc>
  74:	mov	x21, x0
  78:	cbz	x0, 100 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0x100>
  7c:	ldr	w6, [x20, #8]
  80:	mov	w3, #0x18                  	// #24
  84:	ldr	x0, [x20]
  88:	mov	x2, x21
  8c:	mov	x1, x0
  90:	umaddl	x6, w6, w3, x0
  94:	cmp	x0, x6
  98:	b.eq	c0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0xc0>  // b.none
  9c:	nop
  a0:	ldp	x4, x5, [x1]
  a4:	stp	x4, x5, [x2]
  a8:	add	x1, x1, #0x18
  ac:	ldur	x3, [x1, #-8]
  b0:	str	x3, [x2, #16]
  b4:	cmp	x6, x1
  b8:	add	x2, x2, #0x18
  bc:	b.ne	a0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0xa0>  // b.any
  c0:	add	x1, x20, #0x10
  c4:	cmp	x0, x1
  c8:	b.eq	d0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0xd0>  // b.none
  cc:	bl	0 <free>
  d0:	str	x21, [x20]
  d4:	str	w19, [x20, #12]
  d8:	ldp	x19, x20, [sp, #16]
  dc:	ldr	x21, [sp, #32]
  e0:	ldp	x29, x30, [sp], #80
  e4:	ret
  e8:	mov	w0, #0xffffffe8            	// #-24
  ec:	mov	w19, #0xffffffff            	// #-1
  f0:	movk	x0, #0x17, lsl #32
  f4:	bl	0 <malloc>
  f8:	mov	x21, x0
  fc:	cbnz	x0, 7c <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0x7c>
 100:	mov	x21, #0x0                   	// #0
 104:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm>
 108:	mov	w1, #0x1                   	// #1
 10c:	add	x0, x0, #0x0
 110:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 114:	b	7c <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0x7c>
 118:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm>
 11c:	mov	w1, #0x1                   	// #1
 120:	add	x0, x0, #0x0
 124:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 128:	b	28 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0x28>

Disassembly of section .text._ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_:

0000000000000000 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	b.eq	84 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0x84>  // b.none
  18:	ldr	w4, [x0, #8]
  1c:	mov	x20, x1
  20:	stp	x21, x22, [sp, #32]
  24:	ldr	w21, [x1, #8]
  28:	mov	w2, w4
  2c:	mov	w22, w21
  30:	cmp	w21, w4
  34:	b.hi	94 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0x94>  // b.pmore
  38:	cbz	x22, 7c <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0x7c>
  3c:	ldr	x2, [x0]
  40:	mov	w1, #0x18                  	// #24
  44:	ldr	x0, [x20]
  48:	umaddl	x1, w21, w1, x2
  4c:	nop
  50:	ldr	x3, [x0]
  54:	add	x2, x2, #0x18
  58:	ldp	x4, x5, [x0, #8]
  5c:	stur	x3, [x2, #-24]
  60:	stp	x4, x5, [x2, #-16]
  64:	add	x0, x0, #0x18
  68:	cmp	x2, x1
  6c:	b.ne	50 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0x50>  // b.any
  70:	ldr	w0, [x19, #12]
  74:	cmp	x22, x0
  78:	b.hi	120 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0x120>  // b.pmore
  7c:	str	w21, [x19, #8]
  80:	ldp	x21, x22, [sp, #32]
  84:	mov	x0, x19
  88:	ldp	x19, x20, [sp, #16]
  8c:	ldp	x29, x30, [sp], #48
  90:	ret
  94:	ldr	w6, [x0, #12]
  98:	cmp	x22, x6
  9c:	b.hi	140 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0x140>  // b.pmore
  a0:	ldr	x3, [x0]
  a4:	ldr	x0, [x1]
  a8:	cbz	x2, e4 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0xe4>
  ac:	mov	w2, #0x18                  	// #24
  b0:	umull	x2, w4, w2
  b4:	add	x7, x0, x2
  b8:	ldr	x1, [x0]
  bc:	add	x0, x0, #0x18
  c0:	ldp	x4, x5, [x0, #-16]
  c4:	str	x1, [x3]
  c8:	stp	x4, x5, [x3, #8]
  cc:	cmp	x0, x7
  d0:	add	x3, x3, #0x18
  d4:	b.ne	b8 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0xb8>  // b.any
  d8:	ldr	x3, [x19]
  dc:	ldr	x0, [x20]
  e0:	add	x3, x3, x2
  e4:	mov	w4, #0x18                  	// #24
  e8:	add	x2, x0, x2
  ec:	umaddl	x0, w21, w4, x0
  f0:	cmp	x0, x2
  f4:	b.eq	7c <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0x7c>  // b.none
  f8:	ldp	x4, x5, [x2]
  fc:	stp	x4, x5, [x3]
 100:	add	x2, x2, #0x18
 104:	ldur	x4, [x2, #-8]
 108:	str	x4, [x3, #16]
 10c:	cmp	x2, x0
 110:	add	x3, x3, #0x18
 114:	b.ne	f8 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0xf8>  // b.any
 118:	cmp	x22, x6
 11c:	b.ls	7c <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0x7c>  // b.plast
 120:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_>
 124:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_>
 128:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_>
 12c:	add	x3, x3, #0x0
 130:	add	x1, x1, #0x0
 134:	add	x0, x0, #0x0
 138:	mov	w2, #0x43                  	// #67
 13c:	bl	0 <__assert_fail>
 140:	str	wzr, [x0, #8]
 144:	mov	x1, x22
 148:	bl	0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_>
 14c:	ldr	w0, [x20, #8]
 150:	mov	w1, #0x18                  	// #24
 154:	ldr	x2, [x20]
 158:	ldr	x3, [x19]
 15c:	umaddl	x0, w0, w1, x2
 160:	cmp	x2, x0
 164:	b.eq	170 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0x170>  // b.none
 168:	ldr	w6, [x19, #12]
 16c:	b	f8 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0xf8>
 170:	ldr	w6, [x19, #12]
 174:	b	118 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0x118>

Disassembly of section .text._ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_:

0000000000000000 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	ldr	x19, [x0, #16]
  10:	stp	x21, x22, [sp, #32]
  14:	stp	x23, x24, [sp, #48]
  18:	add	x23, x0, #0x8
  1c:	mov	x21, x23
  20:	cbz	x19, 98 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x98>
  24:	ldp	x24, x20, [x1]
  28:	ldp	x0, x22, [x19, #32]
  2c:	cmp	x22, x20
  30:	b.hi	b0 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0xb0>  // b.pmore
  34:	cbz	x22, 48 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x48>
  38:	mov	x2, x22
  3c:	mov	x1, x24
  40:	bl	0 <memcmp>
  44:	cbnz	w0, c4 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0xc4>
  48:	cmp	x22, x20
  4c:	b.eq	c8 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0xc8>  // b.none
  50:	cmp	x22, x20
  54:	b.cs	c8 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0xc8>  // b.hs, b.nlast
  58:	ldr	x19, [x19, #24]
  5c:	cbnz	x19, 28 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x28>
  60:	cmp	x23, x21
  64:	b.eq	98 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x98>  // b.none
  68:	ldp	x1, x19, [x21, #32]
  6c:	cmp	x19, x20
  70:	b.cc	d8 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0xd8>  // b.lo, b.ul, b.last
  74:	cbz	x20, 88 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x88>
  78:	mov	x0, x24
  7c:	mov	x2, x20
  80:	bl	0 <memcmp>
  84:	cbnz	w0, ec <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0xec>
  88:	cmp	x19, x20
  8c:	b.eq	98 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x98>  // b.none
  90:	cmp	x19, x20
  94:	csel	x21, x21, x23, ls  // ls = plast
  98:	mov	x0, x21
  9c:	ldp	x19, x20, [sp, #16]
  a0:	ldp	x21, x22, [sp, #32]
  a4:	ldp	x23, x24, [sp, #48]
  a8:	ldp	x29, x30, [sp], #64
  ac:	ret
  b0:	cbz	x20, c8 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0xc8>
  b4:	mov	x2, x20
  b8:	mov	x1, x24
  bc:	bl	0 <memcmp>
  c0:	cbz	w0, 50 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x50>
  c4:	tbnz	w0, #31, 58 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x58>
  c8:	mov	x21, x19
  cc:	ldr	x19, [x19, #16]
  d0:	cbnz	x19, 28 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x28>
  d4:	b	60 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x60>
  d8:	cbz	x19, 98 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x98>
  dc:	mov	x0, x24
  e0:	mov	x2, x19
  e4:	bl	0 <memcmp>
  e8:	cbz	w0, 90 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x90>
  ec:	cmp	w0, #0x0
  f0:	csel	x21, x21, x23, ge  // ge = tcont
  f4:	mov	x0, x21
  f8:	ldp	x19, x20, [sp, #16]
  fc:	ldp	x21, x22, [sp, #32]
 100:	ldp	x23, x24, [sp, #48]
 104:	ldp	x29, x30, [sp], #64
 108:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E>:
   0:	cbz	x1, 60 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x60>
   4:	stp	x29, x30, [sp, #-48]!
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x1
  14:	str	x21, [sp, #32]
  18:	mov	x21, x0
  1c:	ldr	x1, [x19, #24]
  20:	mov	x20, x19
  24:	mov	x0, x21
  28:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E>
  2c:	ldr	x0, [x20, #32]
  30:	add	x1, x19, #0x30
  34:	ldr	x19, [x19, #16]
  38:	cmp	x0, x1
  3c:	b.eq	44 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x44>  // b.none
  40:	bl	0 <_ZdlPv>
  44:	mov	x0, x20
  48:	bl	0 <_ZdlPv>
  4c:	cbnz	x19, 1c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x1c>
  50:	ldp	x19, x20, [sp, #16]
  54:	ldr	x21, [sp, #32]
  58:	ldp	x29, x30, [sp], #48
  5c:	ret
  60:	ret

Disassembly of section .text._ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE:

0000000000000000 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	ldr	x2, [x0, #336]
   c:	stp	x19, x20, [sp, #16]
  10:	cmp	x1, x2
  14:	b.ne	114 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0x114>  // b.any
  18:	ldr	x2, [x1, #48]
  1c:	str	xzr, [x1, #48]
  20:	ldr	x19, [x0, #336]
  24:	str	x2, [x0, #336]
  28:	cbz	x19, 108 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0x108>
  2c:	ldr	x20, [x19, #48]
  30:	cbz	x20, e8 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0xe8>
  34:	stp	x21, x22, [sp, #32]
  38:	ldr	x21, [x20, #48]
  3c:	cbz	x21, cc <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0xcc>
  40:	ldr	x22, [x21, #48]
  44:	cbz	x22, b4 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0xb4>
  48:	stp	x23, x24, [sp, #48]
  4c:	ldr	x23, [x22, #48]
  50:	cbz	x23, 98 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0x98>
  54:	ldr	x24, [x23, #48]
  58:	cbz	x24, 80 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0x80>
  5c:	ldr	x0, [x24, #48]
  60:	cbz	x0, 68 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0x68>
  64:	bl	0 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE>
  68:	ldr	x1, [x24, #16]
  6c:	mov	x0, x24
  70:	bl	0 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE>
  74:	mov	x0, x24
  78:	mov	x1, #0x38                  	// #56
  7c:	bl	0 <_ZdlPvm>
  80:	ldr	x1, [x23, #16]
  84:	mov	x0, x23
  88:	bl	0 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE>
  8c:	mov	x0, x23
  90:	mov	x1, #0x38                  	// #56
  94:	bl	0 <_ZdlPvm>
  98:	ldr	x1, [x22, #16]
  9c:	mov	x0, x22
  a0:	bl	0 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE>
  a4:	mov	x0, x22
  a8:	mov	x1, #0x38                  	// #56
  ac:	bl	0 <_ZdlPvm>
  b0:	ldp	x23, x24, [sp, #48]
  b4:	mov	x0, x21
  b8:	ldr	x1, [x21, #16]
  bc:	bl	0 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE>
  c0:	mov	x0, x21
  c4:	mov	x1, #0x38                  	// #56
  c8:	bl	0 <_ZdlPvm>
  cc:	ldr	x1, [x20, #16]
  d0:	mov	x0, x20
  d4:	bl	0 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE>
  d8:	mov	x0, x20
  dc:	mov	x1, #0x38                  	// #56
  e0:	bl	0 <_ZdlPvm>
  e4:	ldp	x21, x22, [sp, #32]
  e8:	mov	x0, x19
  ec:	ldr	x1, [x19, #16]
  f0:	bl	0 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE>
  f4:	mov	x0, x19
  f8:	mov	x1, #0x38                  	// #56
  fc:	ldp	x19, x20, [sp, #16]
 100:	ldp	x29, x30, [sp], #64
 104:	b	0 <_ZdlPvm>
 108:	ldp	x19, x20, [sp, #16]
 10c:	ldp	x29, x30, [sp], #64
 110:	ret
 114:	adrp	x3, 0 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE>
 118:	adrp	x1, 0 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE>
 11c:	adrp	x0, 0 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE>
 120:	add	x3, x3, #0x0
 124:	add	x1, x1, #0x0
 128:	add	x0, x0, #0x0
 12c:	mov	w2, #0xc0                  	// #192
 130:	stp	x21, x22, [sp, #32]
 134:	stp	x23, x24, [sp, #48]
 138:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8TGParser14PushLocalScopeEv:

0000000000000000 <_ZN4llvm8TGParser14PushLocalScopeEv>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x0, #0x38                  	// #56
  14:	stp	x21, x22, [sp, #32]
  18:	ldr	x21, [x19, #336]
  1c:	str	xzr, [x19, #336]
  20:	bl	0 <_Znwm>
  24:	add	x1, x0, #0x8
  28:	str	wzr, [x0, #8]
  2c:	str	xzr, [x0, #16]
  30:	ldr	x20, [x19, #336]
  34:	stp	x1, x1, [x1, #16]
  38:	str	xzr, [x1, #32]
  3c:	str	x21, [x0, #48]
  40:	str	x0, [x19, #336]
  44:	cbz	x20, 120 <_ZN4llvm8TGParser14PushLocalScopeEv+0x120>
  48:	ldr	x21, [x20, #48]
  4c:	cbz	x21, 104 <_ZN4llvm8TGParser14PushLocalScopeEv+0x104>
  50:	ldr	x22, [x21, #48]
  54:	cbz	x22, ec <_ZN4llvm8TGParser14PushLocalScopeEv+0xec>
  58:	stp	x23, x24, [sp, #48]
  5c:	ldr	x23, [x22, #48]
  60:	cbz	x23, d0 <_ZN4llvm8TGParser14PushLocalScopeEv+0xd0>
  64:	ldr	x24, [x23, #48]
  68:	cbz	x24, b8 <_ZN4llvm8TGParser14PushLocalScopeEv+0xb8>
  6c:	str	x25, [sp, #64]
  70:	ldr	x25, [x24, #48]
  74:	cbz	x25, 9c <_ZN4llvm8TGParser14PushLocalScopeEv+0x9c>
  78:	ldr	x0, [x25, #48]
  7c:	cbz	x0, 84 <_ZN4llvm8TGParser14PushLocalScopeEv+0x84>
  80:	bl	0 <_ZN4llvm8TGParser14PushLocalScopeEv>
  84:	ldr	x1, [x25, #16]
  88:	mov	x0, x25
  8c:	bl	0 <_ZN4llvm8TGParser14PushLocalScopeEv>
  90:	mov	x0, x25
  94:	mov	x1, #0x38                  	// #56
  98:	bl	0 <_ZdlPvm>
  9c:	ldr	x1, [x24, #16]
  a0:	mov	x0, x24
  a4:	bl	0 <_ZN4llvm8TGParser14PushLocalScopeEv>
  a8:	mov	x0, x24
  ac:	mov	x1, #0x38                  	// #56
  b0:	bl	0 <_ZdlPvm>
  b4:	ldr	x25, [sp, #64]
  b8:	mov	x0, x23
  bc:	ldr	x1, [x23, #16]
  c0:	bl	0 <_ZN4llvm8TGParser14PushLocalScopeEv>
  c4:	mov	x0, x23
  c8:	mov	x1, #0x38                  	// #56
  cc:	bl	0 <_ZdlPvm>
  d0:	ldr	x1, [x22, #16]
  d4:	mov	x0, x22
  d8:	bl	0 <_ZN4llvm8TGParser14PushLocalScopeEv>
  dc:	mov	x0, x22
  e0:	mov	x1, #0x38                  	// #56
  e4:	bl	0 <_ZdlPvm>
  e8:	ldp	x23, x24, [sp, #48]
  ec:	mov	x0, x21
  f0:	ldr	x1, [x21, #16]
  f4:	bl	0 <_ZN4llvm8TGParser14PushLocalScopeEv>
  f8:	mov	x0, x21
  fc:	mov	x1, #0x38                  	// #56
 100:	bl	0 <_ZdlPvm>
 104:	ldr	x1, [x20, #16]
 108:	mov	x0, x20
 10c:	bl	0 <_ZN4llvm8TGParser14PushLocalScopeEv>
 110:	mov	x0, x20
 114:	mov	x1, #0x38                  	// #56
 118:	bl	0 <_ZdlPvm>
 11c:	ldr	x0, [x19, #336]
 120:	ldp	x19, x20, [sp, #16]
 124:	ldp	x21, x22, [sp, #32]
 128:	ldp	x29, x30, [sp], #80
 12c:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	str	x21, [sp, #32]
  18:	mov	x0, #0xffffffff            	// #4294967295
  1c:	str	x1, [sp, #56]
  20:	cmp	x1, x0
  24:	b.hi	108 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm+0x108>  // b.pmore
  28:	ldr	w2, [x19, #12]
  2c:	mov	x3, #0xffffffff            	// #4294967295
  30:	str	x3, [sp, #72]
  34:	add	x2, x2, #0x2
  38:	orr	x2, x2, x2, lsr #1
  3c:	orr	x2, x2, x2, lsr #2
  40:	orr	x2, x2, x2, lsr #4
  44:	orr	x2, x2, x2, lsr #8
  48:	orr	x1, x2, x2, lsr #16
  4c:	orr	x2, x1, x2, lsr #32
  50:	add	x2, x2, #0x1
  54:	cmp	x2, x20
  58:	csel	x1, x2, x20, cs  // cs = hs, nlast
  5c:	cmp	x1, x3
  60:	b.hi	d8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm+0xd8>  // b.pmore
  64:	mov	w21, w1
  68:	lsl	x0, x1, #4
  6c:	str	x1, [sp, #64]
  70:	bl	0 <malloc>
  74:	mov	x20, x0
  78:	cbz	x0, f0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm+0xf0>
  7c:	ldr	x0, [x19]
  80:	mov	x2, x20
  84:	ldr	w5, [x19, #8]
  88:	mov	x1, x0
  8c:	add	x5, x0, x5, lsl #4
  90:	cmp	x0, x5
  94:	b.eq	b0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm+0xb0>  // b.none
  98:	ldp	x4, x3, [x1]
  9c:	stp	x4, x3, [x2]
  a0:	add	x1, x1, #0x10
  a4:	cmp	x5, x1
  a8:	add	x2, x2, #0x10
  ac:	b.ne	98 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm+0x98>  // b.any
  b0:	add	x1, x19, #0x10
  b4:	cmp	x0, x1
  b8:	b.eq	c0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm+0xc0>  // b.none
  bc:	bl	0 <free>
  c0:	str	x20, [x19]
  c4:	str	w21, [x19, #12]
  c8:	ldp	x19, x20, [sp, #16]
  cc:	ldr	x21, [sp, #32]
  d0:	ldp	x29, x30, [sp], #80
  d4:	ret
  d8:	mov	x0, #0xffffffff0           	// #68719476720
  dc:	mov	w21, #0xffffffff            	// #-1
  e0:	str	x3, [sp, #64]
  e4:	bl	0 <malloc>
  e8:	mov	x20, x0
  ec:	cbnz	x0, 7c <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm+0x7c>
  f0:	mov	x20, #0x0                   	// #0
  f4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm>
  f8:	mov	w1, #0x1                   	// #1
  fc:	add	x0, x0, #0x0
 100:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 104:	b	7c <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm+0x7c>
 108:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm>
 10c:	mov	w1, #0x1                   	// #1
 110:	add	x0, x0, #0x0
 114:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 118:	b	28 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm+0x28>

Disassembly of section .text._ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x3, #0x7ffffffffffffff     	// #576460752303423487
   8:	mov	x29, sp
   c:	stp	x23, x24, [sp, #48]
  10:	stp	x25, x26, [sp, #64]
  14:	ldp	x24, x26, [x0]
  18:	stp	x19, x20, [sp, #16]
  1c:	stp	x21, x22, [sp, #32]
  20:	mov	x21, x1
  24:	stp	x27, x28, [sp, #80]
  28:	sub	x1, x26, x24
  2c:	cmp	x3, x1, asr #4
  30:	b.eq	210 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x210>  // b.none
  34:	mov	x23, x0
  38:	mov	x20, x2
  3c:	asr	x0, x1, #4
  40:	sub	x27, x21, x24
  44:	cbz	x0, 1f8 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1f8>
  48:	cmp	x0, x0, lsl #1
  4c:	mov	x25, #0x7ffffffffffffff0    	// #9223372036854775792
  50:	lsl	x0, x0, #1
  54:	b.ls	1e4 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1e4>  // b.plast
  58:	mov	x0, x25
  5c:	bl	0 <_Znwm>
  60:	mov	x22, x0
  64:	add	x0, x0, x25
  68:	add	x19, x22, #0x10
  6c:	str	x0, [sp, #104]
  70:	add	x0, x22, x27
  74:	str	xzr, [x22, x27]
  78:	ldr	x1, [x20]
  7c:	str	xzr, [x20]
  80:	str	x1, [x0, #8]
  84:	cmp	x21, x24
  88:	b.eq	178 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x178>  // b.none
  8c:	mov	x27, x22
  90:	mov	x19, x24
  94:	nop
  98:	ldr	x0, [x19]
  9c:	str	xzr, [x19]
  a0:	str	x0, [x27]
  a4:	ldr	x0, [x19, #8]
  a8:	str	xzr, [x19, #8]
  ac:	str	x0, [x27, #8]
  b0:	ldr	x28, [x19, #8]
  b4:	cbz	x28, f8 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf8>
  b8:	ldp	x20, x25, [x28, #24]
  bc:	cmp	x20, x25
  c0:	b.eq	e0 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xe0>  // b.none
  c4:	nop
  c8:	mov	x0, x20
  cc:	add	x20, x20, #0x10
  d0:	bl	0 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
  d4:	cmp	x25, x20
  d8:	b.ne	c8 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xc8>  // b.any
  dc:	ldr	x25, [x28, #24]
  e0:	cbz	x25, ec <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xec>
  e4:	mov	x0, x25
  e8:	bl	0 <_ZdlPv>
  ec:	mov	x0, x28
  f0:	mov	x1, #0x30                  	// #48
  f4:	bl	0 <_ZdlPvm>
  f8:	ldr	x20, [x19]
  fc:	cbz	x20, 15c <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x15c>
 100:	ldr	x0, [x20, #88]
 104:	add	x1, x20, #0x68
 108:	add	x25, x20, #0x58
 10c:	cmp	x0, x1
 110:	b.eq	118 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x118>  // b.none
 114:	bl	0 <free>
 118:	ldr	x0, [x20, #72]
 11c:	add	x28, x20, #0x48
 120:	cmp	x25, x0
 124:	b.eq	12c <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x12c>  // b.none
 128:	bl	0 <free>
 12c:	ldr	x0, [x20, #56]
 130:	cmp	x28, x0
 134:	b.eq	13c <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x13c>  // b.none
 138:	bl	0 <free>
 13c:	ldr	x0, [x20, #8]
 140:	add	x1, x20, #0x18
 144:	cmp	x0, x1
 148:	b.eq	150 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x150>  // b.none
 14c:	bl	0 <free>
 150:	mov	x0, x20
 154:	mov	x1, #0x80                  	// #128
 158:	bl	0 <_ZdlPvm>
 15c:	add	x19, x19, #0x10
 160:	add	x27, x27, #0x10
 164:	cmp	x21, x19
 168:	b.ne	98 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x98>  // b.any
 16c:	sub	x19, x21, x24
 170:	add	x19, x19, #0x10
 174:	add	x19, x22, x19
 178:	cmp	x21, x26
 17c:	b.eq	1b0 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1b0>  // b.none
 180:	mov	x2, x21
 184:	mov	x0, x19
 188:	ldr	x1, [x2]
 18c:	str	x1, [x0]
 190:	ldr	x1, [x2, #8]
 194:	str	x1, [x0, #8]
 198:	add	x2, x2, #0x10
 19c:	add	x0, x0, #0x10
 1a0:	cmp	x2, x26
 1a4:	b.ne	188 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x188>  // b.any
 1a8:	sub	x2, x2, x21
 1ac:	add	x19, x19, x2
 1b0:	cbz	x24, 1bc <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1bc>
 1b4:	mov	x0, x24
 1b8:	bl	0 <_ZdlPv>
 1bc:	ldr	x0, [sp, #104]
 1c0:	ldp	x25, x26, [sp, #64]
 1c4:	ldp	x27, x28, [sp, #80]
 1c8:	stp	x22, x19, [x23]
 1cc:	str	x0, [x23, #16]
 1d0:	ldp	x19, x20, [sp, #16]
 1d4:	ldp	x21, x22, [sp, #32]
 1d8:	ldp	x23, x24, [sp, #48]
 1dc:	ldp	x29, x30, [sp], #112
 1e0:	ret
 1e4:	cbnz	x0, 200 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x200>
 1e8:	mov	x19, #0x10                  	// #16
 1ec:	mov	x22, #0x0                   	// #0
 1f0:	str	xzr, [sp, #104]
 1f4:	b	70 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x70>
 1f8:	mov	x25, #0x10                  	// #16
 1fc:	b	58 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x58>
 200:	cmp	x0, x3
 204:	csel	x0, x0, x3, ls  // ls = plast
 208:	lsl	x25, x0, #4
 20c:	b	58 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x58>
 210:	adrp	x0, 0 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 214:	add	x0, x0, #0x0
 218:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_:

0000000000000000 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	b.eq	60 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0x60>  // b.none
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	x21, x1
  20:	mov	x20, x1
  24:	ldr	x1, [x21], #16
  28:	cmp	x21, x1
  2c:	b.eq	70 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0x70>  // b.none
  30:	mov	x2, x0
  34:	ldr	x0, [x2], #16
  38:	cmp	x0, x2
  3c:	b.eq	48 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0x48>  // b.none
  40:	bl	0 <free>
  44:	ldr	x1, [x20]
  48:	ldr	w0, [x20, #12]
  4c:	str	x1, [x19]
  50:	ldr	w1, [x20, #8]
  54:	stp	w1, w0, [x19, #8]
  58:	stp	x21, xzr, [x20]
  5c:	ldp	x21, x22, [sp, #32]
  60:	mov	x0, x19
  64:	ldp	x19, x20, [sp, #16]
  68:	ldp	x29, x30, [sp], #64
  6c:	ret
  70:	ldr	w22, [x20, #8]
  74:	ldr	w1, [x0, #8]
  78:	stp	x23, x24, [sp, #48]
  7c:	mov	w23, w22
  80:	cmp	x1, w22, uxtw
  84:	b.cs	104 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0x104>  // b.hs, b.nlast
  88:	ldr	w2, [x0, #12]
  8c:	cmp	x23, x2
  90:	b.hi	134 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0x134>  // b.pmore
  94:	lsl	x24, x1, #3
  98:	ldr	x0, [x0]
  9c:	cbz	x1, 11c <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0x11c>
  a0:	mov	x1, x21
  a4:	mov	x2, x24
  a8:	bl	0 <memmove>
  ac:	ldr	w2, [x20, #8]
  b0:	ldr	x0, [x19]
  b4:	ldr	x1, [x20]
  b8:	lsl	x2, x2, #3
  bc:	add	x3, x1, x2
  c0:	add	x1, x1, x24
  c4:	cmp	x1, x3
  c8:	b.eq	d8 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0xd8>  // b.none
  cc:	sub	x2, x2, x24
  d0:	add	x0, x0, x24
  d4:	bl	0 <memcpy>
  d8:	ldr	w0, [x19, #12]
  dc:	cmp	x23, x0
  e0:	b.hi	15c <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0x15c>  // b.pmore
  e4:	ldp	x23, x24, [sp, #48]
  e8:	str	w22, [x19, #8]
  ec:	ldp	x21, x22, [sp, #32]
  f0:	str	wzr, [x20, #8]
  f4:	mov	x0, x19
  f8:	ldp	x19, x20, [sp, #16]
  fc:	ldp	x29, x30, [sp], #64
 100:	ret
 104:	cbz	x23, e4 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0xe4>
 108:	ldr	x0, [x0]
 10c:	mov	x1, x21
 110:	lsl	x2, x23, #3
 114:	bl	0 <memmove>
 118:	b	d8 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0xd8>
 11c:	lsl	x2, x23, #3
 120:	add	x1, x21, x24
 124:	add	x21, x21, x2
 128:	cmp	x1, x21
 12c:	b.ne	cc <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0xcc>  // b.any
 130:	b	e4 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0xe4>
 134:	str	wzr, [x0, #8]
 138:	add	x1, x0, #0x10
 13c:	mov	x2, x23
 140:	mov	x3, #0x8                   	// #8
 144:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 148:	mov	x24, #0x0                   	// #0
 14c:	ldr	w2, [x20, #8]
 150:	ldr	x0, [x19]
 154:	ldr	x1, [x20]
 158:	b	b8 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0xb8>
 15c:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_>
 160:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_>
 164:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_>
 168:	add	x3, x3, #0x0
 16c:	add	x1, x1, #0x0
 170:	add	x0, x0, #0x0
 174:	mov	w2, #0x43                  	// #67
 178:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	str	x21, [sp, #32]
  18:	mov	x0, #0xffffffff            	// #4294967295
  1c:	str	x1, [sp, #56]
  20:	cmp	x1, x0
  24:	b.hi	108 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0x108>  // b.pmore
  28:	ldr	w2, [x19, #12]
  2c:	mov	x3, #0xffffffff            	// #4294967295
  30:	str	x3, [sp, #72]
  34:	add	x2, x2, #0x2
  38:	orr	x2, x2, x2, lsr #1
  3c:	orr	x2, x2, x2, lsr #2
  40:	orr	x2, x2, x2, lsr #4
  44:	orr	x2, x2, x2, lsr #8
  48:	orr	x1, x2, x2, lsr #16
  4c:	orr	x2, x1, x2, lsr #32
  50:	add	x2, x2, #0x1
  54:	cmp	x2, x20
  58:	csel	x1, x2, x20, cs  // cs = hs, nlast
  5c:	cmp	x1, x3
  60:	b.hi	d8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0xd8>  // b.pmore
  64:	mov	w21, w1
  68:	lsl	x0, x1, #4
  6c:	str	x1, [sp, #64]
  70:	bl	0 <malloc>
  74:	mov	x20, x0
  78:	cbz	x0, f0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0xf0>
  7c:	ldr	x0, [x19]
  80:	mov	x2, x20
  84:	ldr	w5, [x19, #8]
  88:	mov	x1, x0
  8c:	add	x5, x0, x5, lsl #4
  90:	cmp	x0, x5
  94:	b.eq	b0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0xb0>  // b.none
  98:	ldp	x4, x3, [x1]
  9c:	stp	x4, x3, [x2]
  a0:	add	x1, x1, #0x10
  a4:	cmp	x5, x1
  a8:	add	x2, x2, #0x10
  ac:	b.ne	98 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0x98>  // b.any
  b0:	add	x1, x19, #0x10
  b4:	cmp	x0, x1
  b8:	b.eq	c0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0xc0>  // b.none
  bc:	bl	0 <free>
  c0:	str	x20, [x19]
  c4:	str	w21, [x19, #12]
  c8:	ldp	x19, x20, [sp, #16]
  cc:	ldr	x21, [sp, #32]
  d0:	ldp	x29, x30, [sp], #80
  d4:	ret
  d8:	mov	x0, #0xffffffff0           	// #68719476720
  dc:	mov	w21, #0xffffffff            	// #-1
  e0:	str	x3, [sp, #64]
  e4:	bl	0 <malloc>
  e8:	mov	x20, x0
  ec:	cbnz	x0, 7c <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0x7c>
  f0:	mov	x20, #0x0                   	// #0
  f4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm>
  f8:	mov	w1, #0x1                   	// #1
  fc:	add	x0, x0, #0x0
 100:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 104:	b	7c <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0x7c>
 108:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm>
 10c:	mov	w1, #0x1                   	// #1
 110:	add	x0, x0, #0x0
 114:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 118:	b	28 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0x28>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x0, #0xffffffff            	// #4294967295
  1c:	cmp	x1, x0
  20:	str	x1, [sp, #72]
  24:	b.hi	178 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0x178>  // b.pmore
  28:	ldr	w2, [x20, #12]
  2c:	mov	x3, #0xffffffff            	// #4294967295
  30:	str	x3, [sp, #88]
  34:	add	x2, x2, #0x2
  38:	orr	x2, x2, x2, lsr #1
  3c:	orr	x2, x2, x2, lsr #2
  40:	orr	x2, x2, x2, lsr #4
  44:	orr	x2, x2, x2, lsr #8
  48:	orr	x1, x2, x2, lsr #16
  4c:	orr	x2, x1, x2, lsr #32
  50:	add	x2, x2, #0x1
  54:	cmp	x2, x19
  58:	csel	x1, x2, x19, cs  // cs = hs, nlast
  5c:	cmp	x1, x3
  60:	b.hi	144 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0x144>  // b.pmore
  64:	add	x0, x1, x1, lsl #1
  68:	mov	w21, w1
  6c:	str	x1, [sp, #80]
  70:	lsl	x0, x0, #4
  74:	bl	0 <malloc>
  78:	mov	x22, x0
  7c:	cbz	x0, 160 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0x160>
  80:	ldr	w5, [x20, #8]
  84:	mov	w0, #0x30                  	// #48
  88:	ldr	x1, [x20]
  8c:	umull	x5, w5, w0
  90:	add	x19, x1, x5
  94:	cmp	x1, x19
  98:	b.eq	118 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0x118>  // b.none
  9c:	mov	x2, x22
  a0:	str	x23, [sp, #48]
  a4:	nop
  a8:	ldp	x0, x3, [x1]
  ac:	ldr	x4, [x1, #32]
  b0:	stp	x0, x3, [x2]
  b4:	ldr	x0, [x1, #16]
  b8:	ldr	x3, [x1, #40]
  bc:	str	x0, [x2, #16]
  c0:	ldr	x0, [x1, #24]
  c4:	str	x0, [x2, #24]
  c8:	stp	xzr, xzr, [x1, #8]
  cc:	add	x1, x1, #0x30
  d0:	stur	xzr, [x1, #-24]
  d4:	cmp	x19, x1
  d8:	stp	x4, x3, [x2, #32]
  dc:	add	x2, x2, #0x30
  e0:	b.ne	a8 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0xa8>  // b.any
  e4:	ldr	x23, [x20]
  e8:	add	x19, x23, x5
  ec:	cmp	x23, x19
  f0:	b.eq	18c <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0x18c>  // b.none
  f4:	nop
  f8:	ldur	x0, [x19, #-40]
  fc:	sub	x19, x19, #0x30
 100:	cbz	x0, 108 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0x108>
 104:	bl	0 <_ZdlPv>
 108:	cmp	x19, x23
 10c:	b.ne	f8 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0xf8>  // b.any
 110:	ldr	x19, [x20]
 114:	ldr	x23, [sp, #48]
 118:	add	x0, x20, #0x10
 11c:	cmp	x19, x0
 120:	b.eq	12c <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0x12c>  // b.none
 124:	mov	x0, x19
 128:	bl	0 <free>
 12c:	str	x22, [x20]
 130:	str	w21, [x20, #12]
 134:	ldp	x19, x20, [sp, #16]
 138:	ldp	x21, x22, [sp, #32]
 13c:	ldp	x29, x30, [sp], #96
 140:	ret
 144:	mov	w0, #0xffffffd0            	// #-48
 148:	mov	w21, #0xffffffff            	// #-1
 14c:	movk	x0, #0x2f, lsl #32
 150:	str	x3, [sp, #80]
 154:	bl	0 <malloc>
 158:	mov	x22, x0
 15c:	cbnz	x0, 80 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0x80>
 160:	mov	x22, #0x0                   	// #0
 164:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm>
 168:	mov	w1, #0x1                   	// #1
 16c:	add	x0, x0, #0x0
 170:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 174:	b	80 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0x80>
 178:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm>
 17c:	mov	w1, #0x1                   	// #1
 180:	add	x0, x0, #0x0
 184:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 188:	b	28 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0x28>
 18c:	ldr	x23, [sp, #48]
 190:	b	118 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0x118>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x20, x0
  14:	b.eq	ac <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0xac>  // b.none
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	x22, x1
  20:	ldr	w19, [x0, #8]
  24:	stp	x23, x24, [sp, #48]
  28:	mov	x21, x1
  2c:	mov	w0, w19
  30:	ldr	x24, [x22], #16
  34:	stp	x25, x26, [sp, #64]
  38:	cmp	x22, x24
  3c:	ldr	x25, [x20]
  40:	b.eq	bc <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0xbc>  // b.none
  44:	mov	w0, #0x30                  	// #48
  48:	umaddl	x19, w19, w0, x25
  4c:	cmp	x19, x25
  50:	b.eq	74 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x74>  // b.none
  54:	nop
  58:	ldur	x0, [x19, #-40]
  5c:	sub	x19, x19, #0x30
  60:	cbz	x0, 68 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x68>
  64:	bl	0 <_ZdlPv>
  68:	cmp	x19, x25
  6c:	b.ne	58 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x58>  // b.any
  70:	ldr	x25, [x20]
  74:	add	x0, x20, #0x10
  78:	cmp	x25, x0
  7c:	b.eq	88 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x88>  // b.none
  80:	mov	x0, x25
  84:	bl	0 <free>
  88:	ldr	x0, [x21]
  8c:	ldr	w1, [x21, #8]
  90:	ldp	x23, x24, [sp, #48]
  94:	ldp	x25, x26, [sp, #64]
  98:	str	x0, [x20]
  9c:	ldr	w0, [x21, #12]
  a0:	stp	w1, w0, [x20, #8]
  a4:	stp	x22, xzr, [x21]
  a8:	ldp	x21, x22, [sp, #32]
  ac:	mov	x0, x20
  b0:	ldp	x19, x20, [sp, #16]
  b4:	ldp	x29, x30, [sp], #80
  b8:	ret
  bc:	ldr	w22, [x1, #8]
  c0:	mov	w23, w22
  c4:	cmp	x0, w22, uxtw
  c8:	b.cs	1d8 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x1d8>  // b.hs, b.nlast
  cc:	ldr	w4, [x20, #12]
  d0:	cmp	x23, x4
  d4:	b.ls	2c0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x2c0>  // b.plast
  d8:	mov	w0, #0x30                  	// #48
  dc:	umaddl	x19, w19, w0, x25
  e0:	cmp	x19, x25
  e4:	b.eq	100 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x100>  // b.none
  e8:	ldur	x0, [x19, #-40]
  ec:	sub	x19, x19, #0x30
  f0:	cbz	x0, e0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0xe0>
  f4:	bl	0 <_ZdlPv>
  f8:	cmp	x19, x25
  fc:	b.ne	e8 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0xe8>  // b.any
 100:	str	wzr, [x20, #8]
 104:	mov	x0, x20
 108:	mov	x1, x23
 10c:	mov	x19, #0x0                   	// #0
 110:	bl	0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_>
 114:	ldr	x0, [x21]
 118:	ldr	w4, [x20, #12]
 11c:	ldr	w3, [x21, #8]
 120:	mov	x24, x0
 124:	ldr	x25, [x20]
 128:	add	x3, x3, x3, lsl #1
 12c:	add	x25, x25, x19
 130:	add	x3, x0, x3, lsl #4
 134:	cmp	x3, x24
 138:	b.eq	17c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x17c>  // b.none
 13c:	mov	x2, x24
 140:	ldp	x0, x1, [x2]
 144:	stp	x0, x1, [x25]
 148:	ldr	x0, [x2, #16]
 14c:	ldr	x1, [x2, #32]
 150:	str	x0, [x25, #16]
 154:	ldr	x0, [x2, #24]
 158:	str	x0, [x25, #24]
 15c:	stp	xzr, xzr, [x2, #8]
 160:	add	x2, x2, #0x30
 164:	stur	xzr, [x2, #-24]
 168:	ldur	x0, [x2, #-8]
 16c:	stp	x1, x0, [x25, #32]
 170:	cmp	x3, x2
 174:	add	x25, x25, #0x30
 178:	b.ne	140 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x140>  // b.any
 17c:	cmp	x23, x4
 180:	b.hi	344 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x344>  // b.pmore
 184:	str	w22, [x20, #8]
 188:	mov	w0, #0x30                  	// #48
 18c:	ldr	x22, [x21]
 190:	ldr	w19, [x21, #8]
 194:	umaddl	x19, w19, w0, x22
 198:	cmp	x22, x19
 19c:	b.eq	1b8 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x1b8>  // b.none
 1a0:	ldur	x0, [x19, #-40]
 1a4:	sub	x19, x19, #0x30
 1a8:	cbz	x0, 198 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x198>
 1ac:	bl	0 <_ZdlPv>
 1b0:	cmp	x22, x19
 1b4:	b.ne	1a0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x1a0>  // b.any
 1b8:	ldp	x23, x24, [sp, #48]
 1bc:	mov	x0, x20
 1c0:	ldp	x25, x26, [sp, #64]
 1c4:	str	wzr, [x21, #8]
 1c8:	ldp	x19, x20, [sp, #16]
 1cc:	ldp	x21, x22, [sp, #32]
 1d0:	ldp	x29, x30, [sp], #80
 1d4:	ret
 1d8:	cbz	x23, 2ac <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x2ac>
 1dc:	mov	w19, #0x30                  	// #48
 1e0:	umaddl	x19, w22, w19, x25
 1e4:	nop
 1e8:	ldp	x0, x1, [x24]
 1ec:	str	x0, [x25]
 1f0:	ldr	x0, [x25, #8]
 1f4:	str	x1, [x25, #8]
 1f8:	ldr	x1, [x24, #16]
 1fc:	str	x1, [x25, #16]
 200:	ldr	x1, [x24, #24]
 204:	str	x1, [x25, #24]
 208:	stp	xzr, xzr, [x24, #8]
 20c:	str	xzr, [x24, #24]
 210:	cbz	x0, 218 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x218>
 214:	bl	0 <_ZdlPv>
 218:	ldr	x0, [x24, #32]
 21c:	str	x0, [x25, #32]
 220:	ldr	x0, [x24, #40]
 224:	str	x0, [x25, #40]
 228:	add	x25, x25, #0x30
 22c:	add	x24, x24, #0x30
 230:	cmp	x25, x19
 234:	b.ne	1e8 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x1e8>  // b.any
 238:	ldr	w19, [x20, #8]
 23c:	mov	w1, #0x30                  	// #48
 240:	ldr	x0, [x20]
 244:	umaddl	x19, w19, w1, x0
 248:	cmp	x19, x25
 24c:	b.eq	268 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x268>  // b.none
 250:	ldur	x0, [x19, #-40]
 254:	sub	x19, x19, #0x30
 258:	cbz	x0, 248 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x248>
 25c:	bl	0 <_ZdlPv>
 260:	cmp	x19, x25
 264:	b.ne	250 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x250>  // b.any
 268:	ldr	w0, [x20, #12]
 26c:	cmp	x23, x0
 270:	b.hi	344 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x344>  // b.pmore
 274:	ldr	x24, [x21]
 278:	str	w22, [x20, #8]
 27c:	mov	w0, #0x30                  	// #48
 280:	ldr	w19, [x21, #8]
 284:	umaddl	x19, w19, w0, x24
 288:	cmp	x24, x19
 28c:	b.eq	1b8 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x1b8>  // b.none
 290:	ldur	x0, [x19, #-40]
 294:	sub	x19, x19, #0x30
 298:	cbz	x0, 288 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x288>
 29c:	bl	0 <_ZdlPv>
 2a0:	cmp	x24, x19
 2a4:	b.ne	290 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x290>  // b.any
 2a8:	b	1b8 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x1b8>
 2ac:	mov	w0, #0x30                  	// #48
 2b0:	umaddl	x19, w19, w0, x25
 2b4:	cmp	x25, x19
 2b8:	b.ne	250 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x250>  // b.any
 2bc:	b	278 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x278>
 2c0:	cbz	x0, 338 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x338>
 2c4:	mov	w0, #0x30                  	// #48
 2c8:	umull	x19, w19, w0
 2cc:	add	x26, x25, x19
 2d0:	ldp	x0, x1, [x24]
 2d4:	str	x0, [x25]
 2d8:	ldr	x0, [x25, #8]
 2dc:	str	x1, [x25, #8]
 2e0:	ldr	x1, [x24, #16]
 2e4:	str	x1, [x25, #16]
 2e8:	ldr	x1, [x24, #24]
 2ec:	str	x1, [x25, #24]
 2f0:	stp	xzr, xzr, [x24, #8]
 2f4:	str	xzr, [x24, #24]
 2f8:	cbz	x0, 300 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x300>
 2fc:	bl	0 <_ZdlPv>
 300:	ldr	x0, [x24, #32]
 304:	str	x0, [x25, #32]
 308:	ldr	x0, [x24, #40]
 30c:	str	x0, [x25, #40]
 310:	add	x25, x25, #0x30
 314:	add	x24, x24, #0x30
 318:	cmp	x25, x26
 31c:	b.ne	2d0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x2d0>  // b.any
 320:	ldr	x0, [x21]
 324:	ldr	w4, [x20, #12]
 328:	ldr	w3, [x21, #8]
 32c:	add	x24, x0, x19
 330:	ldr	x25, [x20]
 334:	b	128 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x128>
 338:	mov	w3, #0x30                  	// #48
 33c:	umaddl	x3, w22, w3, x24
 340:	b	13c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x13c>
 344:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_>
 348:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_>
 34c:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_>
 350:	add	x3, x3, #0x0
 354:	add	x1, x1, #0x0
 358:	add	x0, x0, #0x0
 35c:	mov	w2, #0x43                  	// #67
 360:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x3, #0x7ffffffffffffff     	// #576460752303423487
   8:	mov	x29, sp
   c:	stp	x23, x24, [sp, #48]
  10:	stp	x25, x26, [sp, #64]
  14:	ldp	x24, x26, [x0]
  18:	stp	x19, x20, [sp, #16]
  1c:	stp	x21, x22, [sp, #32]
  20:	mov	x21, x1
  24:	stp	x27, x28, [sp, #80]
  28:	sub	x1, x26, x24
  2c:	cmp	x3, x1, asr #4
  30:	b.eq	210 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x210>  // b.none
  34:	mov	x23, x0
  38:	mov	x20, x2
  3c:	asr	x0, x1, #4
  40:	sub	x27, x21, x24
  44:	cbz	x0, 1f8 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1f8>
  48:	cmp	x0, x0, lsl #1
  4c:	mov	x25, #0x7ffffffffffffff0    	// #9223372036854775792
  50:	lsl	x0, x0, #1
  54:	b.ls	1e4 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1e4>  // b.plast
  58:	mov	x0, x25
  5c:	bl	0 <_Znwm>
  60:	mov	x22, x0
  64:	add	x0, x0, x25
  68:	add	x19, x22, #0x10
  6c:	str	x0, [sp, #104]
  70:	add	x0, x22, x27
  74:	cmp	x21, x24
  78:	ldr	x1, [x20]
  7c:	str	x1, [x22, x27]
  80:	ldr	x1, [x20, #8]
  84:	stp	xzr, xzr, [x20]
  88:	str	x1, [x0, #8]
  8c:	b.eq	178 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x178>  // b.none
  90:	mov	x27, x22
  94:	mov	x19, x24
  98:	ldr	x0, [x19]
  9c:	str	xzr, [x19]
  a0:	str	x0, [x27]
  a4:	ldr	x0, [x19, #8]
  a8:	str	xzr, [x19, #8]
  ac:	str	x0, [x27, #8]
  b0:	ldr	x28, [x19, #8]
  b4:	cbz	x28, f8 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf8>
  b8:	ldp	x20, x25, [x28, #24]
  bc:	cmp	x20, x25
  c0:	b.eq	e0 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xe0>  // b.none
  c4:	nop
  c8:	mov	x0, x20
  cc:	add	x20, x20, #0x10
  d0:	bl	0 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
  d4:	cmp	x25, x20
  d8:	b.ne	c8 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xc8>  // b.any
  dc:	ldr	x25, [x28, #24]
  e0:	cbz	x25, ec <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xec>
  e4:	mov	x0, x25
  e8:	bl	0 <_ZdlPv>
  ec:	mov	x0, x28
  f0:	mov	x1, #0x30                  	// #48
  f4:	bl	0 <_ZdlPvm>
  f8:	ldr	x20, [x19]
  fc:	cbz	x20, 15c <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x15c>
 100:	ldr	x0, [x20, #88]
 104:	add	x1, x20, #0x68
 108:	add	x25, x20, #0x58
 10c:	cmp	x0, x1
 110:	b.eq	118 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x118>  // b.none
 114:	bl	0 <free>
 118:	ldr	x0, [x20, #72]
 11c:	add	x28, x20, #0x48
 120:	cmp	x25, x0
 124:	b.eq	12c <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x12c>  // b.none
 128:	bl	0 <free>
 12c:	ldr	x0, [x20, #56]
 130:	cmp	x28, x0
 134:	b.eq	13c <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x13c>  // b.none
 138:	bl	0 <free>
 13c:	ldr	x0, [x20, #8]
 140:	add	x1, x20, #0x18
 144:	cmp	x0, x1
 148:	b.eq	150 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x150>  // b.none
 14c:	bl	0 <free>
 150:	mov	x0, x20
 154:	mov	x1, #0x80                  	// #128
 158:	bl	0 <_ZdlPvm>
 15c:	add	x19, x19, #0x10
 160:	add	x27, x27, #0x10
 164:	cmp	x21, x19
 168:	b.ne	98 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x98>  // b.any
 16c:	sub	x19, x21, x24
 170:	add	x19, x19, #0x10
 174:	add	x19, x22, x19
 178:	cmp	x21, x26
 17c:	b.eq	1b0 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1b0>  // b.none
 180:	mov	x2, x21
 184:	mov	x0, x19
 188:	ldr	x1, [x2]
 18c:	str	x1, [x0]
 190:	ldr	x1, [x2, #8]
 194:	str	x1, [x0, #8]
 198:	add	x2, x2, #0x10
 19c:	add	x0, x0, #0x10
 1a0:	cmp	x2, x26
 1a4:	b.ne	188 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x188>  // b.any
 1a8:	sub	x2, x2, x21
 1ac:	add	x19, x19, x2
 1b0:	cbz	x24, 1bc <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1bc>
 1b4:	mov	x0, x24
 1b8:	bl	0 <_ZdlPv>
 1bc:	ldr	x0, [sp, #104]
 1c0:	ldp	x25, x26, [sp, #64]
 1c4:	ldp	x27, x28, [sp, #80]
 1c8:	stp	x22, x19, [x23]
 1cc:	str	x0, [x23, #16]
 1d0:	ldp	x19, x20, [sp, #16]
 1d4:	ldp	x21, x22, [sp, #32]
 1d8:	ldp	x23, x24, [sp, #48]
 1dc:	ldp	x29, x30, [sp], #112
 1e0:	ret
 1e4:	cbnz	x0, 200 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x200>
 1e8:	mov	x19, #0x10                  	// #16
 1ec:	mov	x22, #0x0                   	// #0
 1f0:	str	xzr, [sp, #104]
 1f4:	b	70 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x70>
 1f8:	mov	x25, #0x10                  	// #16
 1fc:	b	58 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x58>
 200:	cmp	x0, x3
 204:	csel	x0, x0, x3, ls  // ls = plast
 208:	lsl	x25, x0, #4
 20c:	b	58 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x58>
 210:	adrp	x0, 0 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 214:	add	x0, x0, #0x0
 218:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE12emplace_backIJS1_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE12emplace_backIJS1_EEEvDpOT_>:
   0:	mov	x2, x1
   4:	mov	x3, x0
   8:	ldp	x1, x4, [x0, #8]
   c:	cmp	x1, x4
  10:	b.eq	34 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE12emplace_backIJS1_EEEvDpOT_+0x34>  // b.none
  14:	ldp	x0, x4, [x2]
  18:	str	xzr, [x2]
  1c:	str	x0, [x1]
  20:	str	xzr, [x2, #8]
  24:	add	x0, x1, #0x10
  28:	str	x4, [x1, #8]
  2c:	str	x0, [x3, #8]
  30:	ret
  34:	b	0 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE12emplace_backIJS1_EEEvDpOT_>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSM_PSt13_Rb_tree_nodeISE_E:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSM_PSt13_Rb_tree_nodeISE_E>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x3
  14:	stp	x21, x22, [sp, #32]
  18:	add	x3, x0, #0x8
  1c:	mov	x21, x2
  20:	mov	w0, #0x1                   	// #1
  24:	cbz	x1, 54 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSM_PSt13_Rb_tree_nodeISE_E+0x54>
  28:	mov	x2, x21
  2c:	mov	x1, x20
  30:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  34:	ldr	x1, [x19, #40]
  38:	mov	x0, x20
  3c:	ldp	x21, x22, [sp, #32]
  40:	add	x1, x1, #0x1
  44:	str	x1, [x19, #40]
  48:	ldp	x19, x20, [sp, #16]
  4c:	ldp	x29, x30, [sp], #80
  50:	ret
  54:	cmp	x2, x3
  58:	mov	w0, #0x1                   	// #1
  5c:	b.eq	28 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSM_PSt13_Rb_tree_nodeISE_E+0x28>  // b.none
  60:	ldr	x22, [x2, #40]
  64:	str	x23, [sp, #48]
  68:	ldr	x23, [x20, #40]
  6c:	cmp	x23, x22
  70:	csel	x2, x23, x22, ls  // ls = plast
  74:	cbz	x2, 90 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSM_PSt13_Rb_tree_nodeISE_E+0x90>
  78:	ldr	x0, [x20, #32]
  7c:	str	x3, [sp, #72]
  80:	ldr	x1, [x21, #32]
  84:	bl	0 <memcmp>
  88:	ldr	x3, [sp, #72]
  8c:	cbnz	w0, b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSM_PSt13_Rb_tree_nodeISE_E+0xb4>
  90:	sub	x1, x23, x22
  94:	mov	x2, #0x7fffffff            	// #2147483647
  98:	mov	w0, #0x0                   	// #0
  9c:	cmp	x1, x2
  a0:	b.gt	c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSM_PSt13_Rb_tree_nodeISE_E+0xc0>
  a4:	mov	x0, #0xffffffff80000000    	// #-2147483648
  a8:	cmp	x1, x0
  ac:	b.lt	c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSM_PSt13_Rb_tree_nodeISE_E+0xc8>  // b.tstop
  b0:	mov	w0, w1
  b4:	lsr	w0, w0, #31
  b8:	ldr	x23, [sp, #48]
  bc:	b	28 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSM_PSt13_Rb_tree_nodeISE_E+0x28>
  c0:	ldr	x23, [sp, #48]
  c4:	b	28 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSM_PSt13_Rb_tree_nodeISE_E+0x28>
  c8:	mov	w0, #0x1                   	// #1
  cc:	ldr	x23, [sp, #48]
  d0:	b	28 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSM_PSt13_Rb_tree_nodeISE_E+0x28>

Disassembly of section .text._ZNSt6vectorIPN4llvm4InitESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIPN4llvm4InitESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x3, #0xfffffffffffffff     	// #1152921504606846975
   8:	mov	x29, sp
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	mov	x23, x1
  18:	ldp	x24, x21, [x0]
  1c:	stp	x19, x20, [sp, #16]
  20:	stp	x25, x26, [sp, #64]
  24:	str	x27, [sp, #80]
  28:	sub	x1, x21, x24
  2c:	cmp	x3, x1, asr #3
  30:	b.eq	10c <_ZNSt6vectorIPN4llvm4InitESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x10c>  // b.none
  34:	mov	x19, x0
  38:	mov	x22, x2
  3c:	asr	x0, x1, #3
  40:	sub	x26, x23, x24
  44:	cbz	x0, 104 <_ZNSt6vectorIPN4llvm4InitESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x104>
  48:	cmp	x0, x0, lsl #1
  4c:	mov	x25, #0x7ffffffffffffff8    	// #9223372036854775800
  50:	lsl	x0, x0, #1
  54:	b.ls	dc <_ZNSt6vectorIPN4llvm4InitESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xdc>  // b.plast
  58:	mov	x0, x25
  5c:	bl	0 <_Znwm>
  60:	mov	x20, x0
  64:	add	x25, x0, x25
  68:	ldr	x0, [x22]
  6c:	add	x22, x26, #0x8
  70:	str	x0, [x20, x26]
  74:	sub	x21, x21, x23
  78:	add	x22, x20, x22
  7c:	cmp	x26, #0x0
  80:	add	x27, x22, x21
  84:	b.gt	b8 <_ZNSt6vectorIPN4llvm4InitESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xb8>
  88:	cmp	x21, #0x0
  8c:	b.gt	ec <_ZNSt6vectorIPN4llvm4InitESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xec>
  90:	cbnz	x24, d0 <_ZNSt6vectorIPN4llvm4InitESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xd0>
  94:	ldp	x21, x22, [sp, #32]
  98:	ldp	x23, x24, [sp, #48]
  9c:	stp	x20, x27, [x19]
  a0:	str	x25, [x19, #16]
  a4:	ldp	x19, x20, [sp, #16]
  a8:	ldp	x25, x26, [sp, #64]
  ac:	ldr	x27, [sp, #80]
  b0:	ldp	x29, x30, [sp], #96
  b4:	ret
  b8:	mov	x2, x26
  bc:	mov	x1, x24
  c0:	mov	x0, x20
  c4:	bl	0 <memmove>
  c8:	cmp	x21, #0x0
  cc:	b.gt	ec <_ZNSt6vectorIPN4llvm4InitESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xec>
  d0:	mov	x0, x24
  d4:	bl	0 <_ZdlPv>
  d8:	b	94 <_ZNSt6vectorIPN4llvm4InitESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x94>
  dc:	cbnz	x0, 118 <_ZNSt6vectorIPN4llvm4InitESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x118>
  e0:	mov	x25, #0x0                   	// #0
  e4:	mov	x20, #0x0                   	// #0
  e8:	b	68 <_ZNSt6vectorIPN4llvm4InitESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x68>
  ec:	mov	x2, x21
  f0:	mov	x1, x23
  f4:	mov	x0, x22
  f8:	bl	0 <memcpy>
  fc:	cbz	x24, 94 <_ZNSt6vectorIPN4llvm4InitESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x94>
 100:	b	d0 <_ZNSt6vectorIPN4llvm4InitESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xd0>
 104:	mov	x25, #0x8                   	// #8
 108:	b	58 <_ZNSt6vectorIPN4llvm4InitESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x58>
 10c:	adrp	x0, 0 <_ZNSt6vectorIPN4llvm4InitESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 110:	add	x0, x0, #0x0
 114:	bl	0 <_ZSt20__throw_length_errorPKc>
 118:	cmp	x0, x3
 11c:	csel	x0, x0, x3, ls  // ls = plast
 120:	lsl	x25, x0, #3
 124:	b	58 <_ZNSt6vectorIPN4llvm4InitESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x58>

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-128]!
   4:	mov	x3, #0xfffffffffffffff     	// #1152921504606846975
   8:	mov	x29, sp
   c:	stp	x23, x24, [sp, #48]
  10:	mov	x24, x1
  14:	stp	x25, x26, [sp, #64]
  18:	ldp	x1, x25, [x0]
  1c:	stp	x19, x20, [sp, #16]
  20:	stp	x21, x22, [sp, #32]
  24:	str	x1, [sp, #96]
  28:	sub	x1, x25, x1
  2c:	str	x0, [sp, #120]
  30:	cmp	x3, x1, asr #3
  34:	b.eq	210 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x210>  // b.none
  38:	asr	x0, x1, #3
  3c:	mov	x20, x2
  40:	ldr	x1, [sp, #96]
  44:	sub	x21, x24, x1
  48:	cbz	x0, 1f8 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1f8>
  4c:	cmp	x0, x0, lsl #1
  50:	mov	x19, #0x7ffffffffffffff8    	// #9223372036854775800
  54:	lsl	x0, x0, #1
  58:	b.ls	1e8 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1e8>  // b.plast
  5c:	mov	x0, x19
  60:	bl	0 <_Znwm>
  64:	add	x1, x0, x19
  68:	add	x19, x0, #0x8
  6c:	stp	x0, x1, [sp, #104]
  70:	ldr	x23, [sp, #104]
  74:	ldr	x0, [x20]
  78:	str	xzr, [x20]
  7c:	ldr	x20, [sp, #96]
  80:	str	x0, [x23, x21]
  84:	cmp	x24, x20
  88:	b.eq	188 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x188>  // b.none
  8c:	nop
  90:	ldr	x0, [x20]
  94:	str	xzr, [x20]
  98:	str	x0, [x23]
  9c:	ldr	x21, [x20]
  a0:	cbz	x21, 164 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x164>
  a4:	ldp	x19, x22, [x21, #24]
  a8:	cmp	x19, x22
  ac:	b.eq	14c <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x14c>  // b.none
  b0:	stp	x27, x28, [sp, #80]
  b4:	nop
  b8:	ldr	x26, [x19, #8]
  bc:	cbz	x26, d4 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xd4>
  c0:	add	x0, x26, #0x18
  c4:	bl	0 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
  c8:	mov	x0, x26
  cc:	mov	x1, #0x30                  	// #48
  d0:	bl	0 <_ZdlPvm>
  d4:	ldr	x26, [x19]
  d8:	cbz	x26, 138 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x138>
  dc:	ldr	x0, [x26, #88]
  e0:	add	x2, x26, #0x68
  e4:	add	x28, x26, #0x58
  e8:	cmp	x0, x2
  ec:	b.eq	f4 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xf4>  // b.none
  f0:	bl	0 <free>
  f4:	ldr	x0, [x26, #72]
  f8:	add	x27, x26, #0x48
  fc:	cmp	x28, x0
 100:	b.eq	108 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x108>  // b.none
 104:	bl	0 <free>
 108:	ldr	x0, [x26, #56]
 10c:	cmp	x27, x0
 110:	b.eq	118 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x118>  // b.none
 114:	bl	0 <free>
 118:	ldr	x0, [x26, #8]
 11c:	add	x2, x26, #0x18
 120:	cmp	x0, x2
 124:	b.eq	12c <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x12c>  // b.none
 128:	bl	0 <free>
 12c:	mov	x0, x26
 130:	mov	x1, #0x80                  	// #128
 134:	bl	0 <_ZdlPvm>
 138:	add	x19, x19, #0x10
 13c:	cmp	x22, x19
 140:	b.ne	b8 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xb8>  // b.any
 144:	ldp	x27, x28, [sp, #80]
 148:	ldr	x22, [x21, #24]
 14c:	cbz	x22, 158 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x158>
 150:	mov	x0, x22
 154:	bl	0 <_ZdlPv>
 158:	mov	x0, x21
 15c:	mov	x1, #0x30                  	// #48
 160:	bl	0 <_ZdlPvm>
 164:	add	x20, x20, #0x8
 168:	add	x23, x23, #0x8
 16c:	cmp	x24, x20
 170:	b.ne	90 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x90>  // b.any
 174:	ldr	x0, [sp, #96]
 178:	sub	x19, x24, x0
 17c:	ldr	x0, [sp, #104]
 180:	add	x19, x19, #0x8
 184:	add	x19, x0, x19
 188:	cmp	x24, x25
 18c:	b.eq	1b0 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1b0>  // b.none
 190:	mov	x0, x24
 194:	mov	x1, x19
 198:	ldr	x2, [x0], #8
 19c:	str	x2, [x1], #8
 1a0:	cmp	x0, x25
 1a4:	b.ne	198 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x198>  // b.any
 1a8:	sub	x24, x0, x24
 1ac:	add	x19, x19, x24
 1b0:	ldr	x0, [sp, #96]
 1b4:	cbz	x0, 1bc <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1bc>
 1b8:	bl	0 <_ZdlPv>
 1bc:	ldr	x0, [sp, #120]
 1c0:	ldr	x1, [sp, #104]
 1c4:	ldp	x21, x22, [sp, #32]
 1c8:	ldp	x23, x24, [sp, #48]
 1cc:	ldp	x25, x26, [sp, #64]
 1d0:	stp	x1, x19, [x0]
 1d4:	ldr	x1, [sp, #112]
 1d8:	ldp	x19, x20, [sp, #16]
 1dc:	str	x1, [x0, #16]
 1e0:	ldp	x29, x30, [sp], #128
 1e4:	ret
 1e8:	cbnz	x0, 200 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x200>
 1ec:	mov	x19, #0x8                   	// #8
 1f0:	stp	xzr, xzr, [sp, #104]
 1f4:	b	70 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x70>
 1f8:	mov	x19, #0x8                   	// #8
 1fc:	b	5c <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x5c>
 200:	cmp	x0, x3
 204:	csel	x0, x0, x3, ls  // ls = plast
 208:	lsl	x19, x0, #3
 20c:	b	5c <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x5c>
 210:	adrp	x0, 0 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
 214:	add	x0, x0, #0x0
 218:	stp	x27, x28, [sp, #80]
 21c:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_>:
   0:	ldp	x3, x2, [x0, #8]
   4:	mov	x4, x0
   8:	cmp	x3, x2
   c:	b.eq	24 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_+0x24>  // b.none
  10:	ldr	x0, [x1]
  14:	str	xzr, [x1]
  18:	str	x0, [x3], #8
  1c:	str	x3, [x4, #8]
  20:	ret
  24:	mov	x2, x1
  28:	mov	x1, x3
  2c:	b	0 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	ldr	x19, [x0, #16]
  10:	stp	x21, x22, [sp, #32]
  14:	stp	x23, x24, [sp, #48]
  18:	mov	x23, x1
  1c:	stp	x25, x26, [sp, #64]
  20:	mov	x25, x0
  24:	stp	x27, x28, [sp, #80]
  28:	cbz	x19, fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0xfc>
  2c:	ldp	x28, x21, [x1]
  30:	mov	x22, #0x7fffffff            	// #2147483647
  34:	mov	x24, #0xffffffff80000000    	// #-2147483648
  38:	ldp	x27, x20, [x19, #32]
  3c:	mov	x0, x28
  40:	cmp	x21, x20
  44:	csel	x26, x21, x20, ls  // ls = plast
  48:	cbz	x26, 5c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x5c>
  4c:	mov	x2, x26
  50:	mov	x1, x27
  54:	bl	0 <memcmp>
  58:	cbnz	w0, 74 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x74>
  5c:	sub	x1, x21, x20
  60:	mov	w0, w1
  64:	cmp	x1, x22
  68:	b.gt	8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x8c>
  6c:	cmp	x1, x24
  70:	b.lt	78 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x78>  // b.tstop
  74:	tbz	w0, #31, 8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x8c>
  78:	ldr	x3, [x19, #16]
  7c:	mov	w0, #0x1                   	// #1
  80:	cbz	x3, 98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x98>
  84:	mov	x19, x3
  88:	b	38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x38>
  8c:	ldr	x3, [x19, #24]
  90:	mov	w0, #0x0                   	// #0
  94:	cbnz	x3, 84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x84>
  98:	mov	x22, x19
  9c:	cbnz	w0, 100 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x100>
  a0:	cbz	x26, b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0xb8>
  a4:	mov	x2, x26
  a8:	mov	x1, x28
  ac:	mov	x0, x27
  b0:	bl	0 <memcmp>
  b4:	cbnz	w0, d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0xd4>
  b8:	sub	x0, x20, x21
  bc:	mov	x1, #0x7fffffff            	// #2147483647
  c0:	cmp	x0, x1
  c4:	b.gt	d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0xd8>
  c8:	mov	x1, #0xffffffff80000000    	// #-2147483648
  cc:	cmp	x0, x1
  d0:	b.lt	130 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x130>  // b.tstop
  d4:	tbnz	w0, #31, 130 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x130>
  d8:	mov	x0, x19
  dc:	mov	x1, #0x0                   	// #0
  e0:	ldp	x19, x20, [sp, #16]
  e4:	ldp	x21, x22, [sp, #32]
  e8:	ldp	x23, x24, [sp, #48]
  ec:	ldp	x25, x26, [sp, #64]
  f0:	ldp	x27, x28, [sp, #80]
  f4:	ldp	x29, x30, [sp], #96
  f8:	ret
  fc:	add	x19, x0, #0x8
 100:	ldr	x0, [x25, #24]
 104:	cmp	x19, x0
 108:	b.eq	154 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x154>  // b.none
 10c:	mov	x0, x19
 110:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 114:	ldp	x28, x21, [x23]
 118:	mov	x22, x19
 11c:	ldp	x27, x20, [x0, #32]
 120:	mov	x19, x0
 124:	cmp	x21, x20
 128:	csel	x26, x21, x20, ls  // ls = plast
 12c:	b	a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0xa0>
 130:	mov	x1, x22
 134:	mov	x0, #0x0                   	// #0
 138:	ldp	x19, x20, [sp, #16]
 13c:	ldp	x21, x22, [sp, #32]
 140:	ldp	x23, x24, [sp, #48]
 144:	ldp	x25, x26, [sp, #64]
 148:	ldp	x27, x28, [sp, #80]
 14c:	ldp	x29, x30, [sp], #96
 150:	ret
 154:	mov	x1, x19
 158:	mov	x0, #0x0                   	// #0
 15c:	ldp	x19, x20, [sp, #16]
 160:	ldp	x21, x22, [sp, #32]
 164:	ldp	x23, x24, [sp, #48]
 168:	ldp	x25, x26, [sp, #64]
 16c:	ldp	x27, x28, [sp, #80]
 170:	ldp	x29, x30, [sp], #96
 174:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	add	x3, x0, #0x8
   8:	cmp	x1, x3
   c:	mov	x29, sp
  10:	stp	x23, x24, [sp, #48]
  14:	mov	x23, x0
  18:	mov	x24, x2
  1c:	b.eq	140 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x140>  // b.none
  20:	stp	x19, x20, [sp, #16]
  24:	mov	x19, x1
  28:	stp	x21, x22, [sp, #32]
  2c:	stp	x25, x26, [sp, #64]
  30:	ldp	x25, x20, [x2]
  34:	ldp	x26, x21, [x1, #32]
  38:	cmp	x20, x21
  3c:	csel	x22, x20, x21, ls  // ls = plast
  40:	cbz	x22, d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0xd8>
  44:	mov	x2, x22
  48:	mov	x1, x26
  4c:	mov	x0, x25
  50:	bl	0 <memcmp>
  54:	cmp	w0, #0x0
  58:	cbnz	w0, ec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0xec>
  5c:	sub	x0, x20, x21
  60:	mov	x1, #0x7fffffff            	// #2147483647
  64:	cmp	x0, x1
  68:	b.gt	80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x80>
  6c:	mov	x1, #0xffffffff80000000    	// #-2147483648
  70:	cmp	x0, x1
  74:	b.lt	f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0xf0>  // b.tstop
  78:	tbnz	w0, #31, f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0xf0>
  7c:	cbz	x22, 98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x98>
  80:	mov	x1, x25
  84:	mov	x2, x22
  88:	mov	x0, x26
  8c:	bl	0 <memcmp>
  90:	mov	w1, w0
  94:	cbnz	w0, b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0xb4>
  98:	sub	x1, x21, x20
  9c:	mov	x0, #0x7fffffff            	// #2147483647
  a0:	cmp	x1, x0
  a4:	b.gt	b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0xb8>
  a8:	mov	x0, #0xffffffff80000000    	// #-2147483648
  ac:	cmp	x1, x0
  b0:	b.lt	178 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x178>  // b.tstop
  b4:	tbnz	w1, #31, 178 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x178>
  b8:	ldp	x21, x22, [sp, #32]
  bc:	mov	x0, x19
  c0:	ldp	x25, x26, [sp, #64]
  c4:	mov	x1, #0x0                   	// #0
  c8:	ldp	x19, x20, [sp, #16]
  cc:	ldp	x23, x24, [sp, #48]
  d0:	ldp	x29, x30, [sp], #80
  d4:	ret
  d8:	sub	x0, x20, x21
  dc:	mov	x1, #0x7fffffff            	// #2147483647
  e0:	cmp	x0, x1
  e4:	b.le	6c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x6c>
  e8:	b	98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x98>
  ec:	b.ge	80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x80>  // b.tcont
  f0:	ldr	x0, [x23, #24]
  f4:	cmp	x0, x19
  f8:	mov	x0, x19
  fc:	b.eq	1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x1e8>  // b.none
 100:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 104:	mov	x20, x0
 108:	mov	x1, x24
 10c:	add	x0, x0, #0x20
 110:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>
 114:	tbz	w0, #31, 1bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x1bc>
 118:	ldr	x1, [x20, #24]
 11c:	ldp	x21, x22, [sp, #32]
 120:	cmp	x1, #0x0
 124:	csel	x0, x19, xzr, ne  // ne = any
 128:	csel	x1, x20, x19, eq  // eq = none
 12c:	ldp	x19, x20, [sp, #16]
 130:	ldp	x23, x24, [sp, #48]
 134:	ldp	x25, x26, [sp, #64]
 138:	ldp	x29, x30, [sp], #80
 13c:	ret
 140:	ldr	x0, [x0, #40]
 144:	cbz	x0, 164 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x164>
 148:	stp	x19, x20, [sp, #16]
 14c:	mov	x1, x2
 150:	ldr	x19, [x23, #32]
 154:	add	x0, x19, #0x20
 158:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>
 15c:	tbnz	w0, #31, 1dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x1dc>
 160:	ldp	x19, x20, [sp, #16]
 164:	mov	x1, x24
 168:	mov	x0, x23
 16c:	ldp	x23, x24, [sp, #48]
 170:	ldp	x29, x30, [sp], #80
 174:	b	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_>
 178:	ldr	x0, [x23, #32]
 17c:	cmp	x0, x19
 180:	b.eq	1f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x1f8>  // b.none
 184:	mov	x0, x19
 188:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
 18c:	mov	x20, x0
 190:	mov	x0, x24
 194:	add	x1, x20, #0x20
 198:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>
 19c:	tbz	w0, #31, 1bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x1bc>
 1a0:	ldr	x1, [x19, #24]
 1a4:	ldp	x21, x22, [sp, #32]
 1a8:	cmp	x1, #0x0
 1ac:	csel	x0, x20, xzr, ne  // ne = any
 1b0:	csel	x1, x20, x19, ne  // ne = any
 1b4:	ldp	x25, x26, [sp, #64]
 1b8:	b	c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0xc8>
 1bc:	mov	x1, x24
 1c0:	mov	x0, x23
 1c4:	ldp	x19, x20, [sp, #16]
 1c8:	ldp	x21, x22, [sp, #32]
 1cc:	ldp	x23, x24, [sp, #48]
 1d0:	ldp	x25, x26, [sp, #64]
 1d4:	ldp	x29, x30, [sp], #80
 1d8:	b	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_>
 1dc:	mov	x1, x19
 1e0:	mov	x0, #0x0                   	// #0
 1e4:	b	c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0xc8>
 1e8:	mov	x1, x19
 1ec:	ldp	x21, x22, [sp, #32]
 1f0:	ldp	x25, x26, [sp, #64]
 1f4:	b	c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0xc8>
 1f8:	mov	x1, x19
 1fc:	mov	x0, #0x0                   	// #0
 200:	ldp	x21, x22, [sp, #32]
 204:	ldp	x25, x26, [sp, #64]
 208:	b	c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0xc8>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	stp	x21, x22, [sp, #32]
  14:	mov	x21, x0
  18:	mov	x0, #0x48                  	// #72
  1c:	stp	x23, x24, [sp, #48]
  20:	bl	0 <_Znwm>
  24:	mov	x1, x20
  28:	add	x22, x0, #0x30
  2c:	str	x22, [x0, #32]
  30:	mov	x19, x0
  34:	ldr	x2, [x1], #16
  38:	cmp	x2, x1
  3c:	b.eq	b0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xb0>  // b.none
  40:	ldr	x0, [x20, #16]
  44:	str	x2, [x19, #32]
  48:	str	x0, [x19, #48]
  4c:	ldr	x3, [x20, #8]
  50:	stp	x1, xzr, [x20]
  54:	mov	x0, x21
  58:	ldr	x2, [x20, #32]
  5c:	strb	wzr, [x20, #16]
  60:	str	xzr, [x20, #32]
  64:	add	x1, x19, #0x20
  68:	str	x3, [x19, #40]
  6c:	str	x2, [x19, #64]
  70:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_>
  74:	mov	x2, x1
  78:	mov	x24, x0
  7c:	cbz	x1, bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xbc>
  80:	mov	x3, x19
  84:	mov	x1, x0
  88:	mov	x0, x21
  8c:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_>
  90:	mov	x2, #0x1                   	// #1
  94:	mov	x1, #0x0                   	// #0
  98:	bfxil	x1, x2, #0, #8
  9c:	ldp	x19, x20, [sp, #16]
  a0:	ldp	x21, x22, [sp, #32]
  a4:	ldp	x23, x24, [sp, #48]
  a8:	ldp	x29, x30, [sp], #96
  ac:	ret
  b0:	ldp	x2, x3, [x20, #16]
  b4:	stp	x2, x3, [x0, #48]
  b8:	b	4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x4c>
  bc:	stp	x25, x26, [sp, #64]
  c0:	ldr	x26, [x19, #64]
  c4:	cbz	x26, 208 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x208>
  c8:	ldr	x25, [x26, #128]
  cc:	str	x27, [sp, #80]
  d0:	ldr	x27, [x26, #136]
  d4:	cmp	x25, x27
  d8:	b.eq	19c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x19c>  // b.none
  dc:	nop
  e0:	ldr	x21, [x25, #8]
  e4:	cbz	x21, 128 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x128>
  e8:	ldp	x20, x23, [x21, #24]
  ec:	cmp	x20, x23
  f0:	b.eq	110 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x110>  // b.none
  f4:	nop
  f8:	mov	x0, x20
  fc:	add	x20, x20, #0x10
 100:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_>
 104:	cmp	x23, x20
 108:	b.ne	f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xf8>  // b.any
 10c:	ldr	x23, [x21, #24]
 110:	cbz	x23, 11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x11c>
 114:	mov	x0, x23
 118:	bl	0 <_ZdlPv>
 11c:	mov	x0, x21
 120:	mov	x1, #0x30                  	// #48
 124:	bl	0 <_ZdlPvm>
 128:	ldr	x20, [x25]
 12c:	cbz	x20, 18c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x18c>
 130:	ldr	x0, [x20, #88]
 134:	add	x1, x20, #0x68
 138:	add	x23, x20, #0x58
 13c:	cmp	x0, x1
 140:	b.eq	148 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x148>  // b.none
 144:	bl	0 <free>
 148:	ldr	x0, [x20, #72]
 14c:	add	x21, x20, #0x48
 150:	cmp	x23, x0
 154:	b.eq	15c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x15c>  // b.none
 158:	bl	0 <free>
 15c:	ldr	x0, [x20, #56]
 160:	cmp	x21, x0
 164:	b.eq	16c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x16c>  // b.none
 168:	bl	0 <free>
 16c:	ldr	x0, [x20, #8]
 170:	add	x1, x20, #0x18
 174:	cmp	x0, x1
 178:	b.eq	180 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x180>  // b.none
 17c:	bl	0 <free>
 180:	mov	x0, x20
 184:	mov	x1, #0x80                  	// #128
 188:	bl	0 <_ZdlPvm>
 18c:	add	x25, x25, #0x10
 190:	cmp	x27, x25
 194:	b.ne	e0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xe0>  // b.any
 198:	ldr	x27, [x26, #128]
 19c:	cbz	x27, 1a8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x1a8>
 1a0:	mov	x0, x27
 1a4:	bl	0 <_ZdlPv>
 1a8:	ldr	x0, [x26, #88]
 1ac:	add	x1, x26, #0x68
 1b0:	add	x21, x26, #0x58
 1b4:	cmp	x0, x1
 1b8:	b.eq	1c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x1c0>  // b.none
 1bc:	bl	0 <free>
 1c0:	ldr	x0, [x26, #72]
 1c4:	add	x20, x26, #0x48
 1c8:	cmp	x21, x0
 1cc:	b.eq	1d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x1d4>  // b.none
 1d0:	bl	0 <free>
 1d4:	ldr	x0, [x26, #56]
 1d8:	cmp	x20, x0
 1dc:	b.eq	1e4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x1e4>  // b.none
 1e0:	bl	0 <free>
 1e4:	ldr	x0, [x26, #8]
 1e8:	add	x1, x26, #0x18
 1ec:	cmp	x0, x1
 1f0:	b.eq	1f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x1f8>  // b.none
 1f4:	bl	0 <free>
 1f8:	mov	x0, x26
 1fc:	mov	x1, #0x98                  	// #152
 200:	bl	0 <_ZdlPvm>
 204:	ldr	x27, [sp, #80]
 208:	ldr	x0, [x19, #32]
 20c:	cmp	x22, x0
 210:	b.eq	218 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x218>  // b.none
 214:	bl	0 <_ZdlPv>
 218:	mov	x0, x19
 21c:	bl	0 <_ZdlPv>
 220:	mov	x0, x24
 224:	mov	x1, #0x0                   	// #0
 228:	ldp	x19, x20, [sp, #16]
 22c:	ldp	x21, x22, [sp, #32]
 230:	ldp	x23, x24, [sp, #48]
 234:	ldp	x25, x26, [sp, #64]
 238:	ldp	x29, x30, [sp], #96
 23c:	ret

Disassembly of section .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag:

0000000000000000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	cmp	x2, #0x0
   8:	ccmp	x1, #0x0, #0x0, ne  // ne = any
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	str	x21, [sp, #32]
  18:	b.eq	c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xc8>  // b.none
  1c:	sub	x19, x2, x1
  20:	str	x19, [sp, #56]
  24:	mov	x21, x1
  28:	mov	x20, x0
  2c:	cmp	x19, #0xf
  30:	b.hi	84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x84>  // b.pmore
  34:	cmp	x19, #0x1
  38:	ldr	x0, [x0]
  3c:	b.ne	68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x68>  // b.any
  40:	ldrb	w1, [x1]
  44:	strb	w1, [x0]
  48:	ldr	x0, [x20]
  4c:	ldr	x19, [sp, #56]
  50:	str	x19, [x20, #8]
  54:	strb	wzr, [x0, x19]
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldr	x21, [sp, #32]
  60:	ldp	x29, x30, [sp], #64
  64:	ret
  68:	cbnz	x19, 9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x9c>
  6c:	str	x19, [x20, #8]
  70:	strb	wzr, [x0, x19]
  74:	ldp	x19, x20, [sp, #16]
  78:	ldr	x21, [sp, #32]
  7c:	ldp	x29, x30, [sp], #64
  80:	ret
  84:	add	x1, sp, #0x38
  88:	mov	x2, #0x0                   	// #0
  8c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  90:	str	x0, [x20]
  94:	ldr	x1, [sp, #56]
  98:	str	x1, [x20, #16]
  9c:	mov	x2, x19
  a0:	mov	x1, x21
  a4:	bl	0 <memcpy>
  a8:	ldr	x0, [x20]
  ac:	ldr	x19, [sp, #56]
  b0:	str	x19, [x20, #8]
  b4:	strb	wzr, [x0, x19]
  b8:	ldp	x19, x20, [sp, #16]
  bc:	ldr	x21, [sp, #32]
  c0:	ldp	x29, x30, [sp], #64
  c4:	ret
  c8:	adrp	x0, 0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
  cc:	add	x0, x0, #0x0
  d0:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNK4llvm7VarInit11getAsStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm7VarInit11getAsStringB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x8
  10:	bl	0 <_ZNK4llvm7VarInit7getNameEv>
  14:	mov	x2, x1
  18:	mov	x1, x0
  1c:	add	x0, x19, #0x10
  20:	str	x0, [x19]
  24:	cbz	x1, 48 <_ZNK4llvm7VarInit11getAsStringB5cxx11Ev+0x48>
  28:	mov	x0, x19
  2c:	add	x2, x1, x2
  30:	mov	w3, #0x0                   	// #0
  34:	bl	0 <_ZNK4llvm7VarInit11getAsStringB5cxx11Ev>
  38:	mov	x0, x19
  3c:	ldr	x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	ret
  48:	str	xzr, [x19, #8]
  4c:	mov	x0, x19
  50:	strb	wzr, [x19, #16]
  54:	ldr	x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	mov	x22, x1
  10:	mov	x21, x0
  14:	mov	x0, #0x48                  	// #72
  18:	stp	x19, x20, [sp, #16]
  1c:	stp	x23, x24, [sp, #48]
  20:	stp	x25, x26, [sp, #64]
  24:	stp	x27, x28, [sp, #80]
  28:	bl	0 <_Znwm>
  2c:	mov	x19, x0
  30:	ldr	x1, [x22]
  34:	cbz	x1, 23c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x23c>
  38:	ldr	x2, [x22, #8]
  3c:	add	x25, x0, #0x30
  40:	mov	w3, #0x0                   	// #0
  44:	add	x0, x0, #0x20
  48:	add	x2, x1, x2
  4c:	str	x25, [x19, #32]
  50:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_>
  54:	add	x24, x21, #0x8
  58:	ldr	x20, [x21, #16]
  5c:	ldr	x23, [x22, #16]
  60:	str	xzr, [x22, #16]
  64:	str	x23, [x19, #64]
  68:	cbz	x20, 260 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x260>
  6c:	ldp	x26, x28, [x19, #32]
  70:	mov	x22, #0xffffffff80000000    	// #-2147483648
  74:	nop
  78:	ldp	x1, x27, [x20, #32]
  7c:	mov	x0, x26
  80:	cmp	x28, x27
  84:	csel	x2, x28, x27, ls  // ls = plast
  88:	cbz	x2, 9c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x9c>
  8c:	stp	x1, x2, [sp, #96]
  90:	bl	0 <memcmp>
  94:	ldp	x1, x2, [sp, #96]
  98:	cbnz	w0, b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xb8>
  9c:	sub	x3, x28, x27
  a0:	mov	x4, #0x7fffffff            	// #2147483647
  a4:	mov	w0, w3
  a8:	cmp	x3, x4
  ac:	b.gt	d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xd0>
  b0:	cmp	x3, x22
  b4:	b.lt	bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xbc>  // b.tstop
  b8:	tbz	w0, #31, d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xd0>
  bc:	ldr	x0, [x20, #16]
  c0:	mov	w3, #0x1                   	// #1
  c4:	cbz	x0, dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xdc>
  c8:	mov	x20, x0
  cc:	b	78 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x78>
  d0:	ldr	x0, [x20, #24]
  d4:	mov	w3, #0x0                   	// #0
  d8:	cbnz	x0, c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xc8>
  dc:	mov	x22, x20
  e0:	cbnz	w3, 210 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x210>
  e4:	cbz	x2, f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xf8>
  e8:	mov	x0, x1
  ec:	mov	x1, x26
  f0:	bl	0 <memcmp>
  f4:	cbnz	w0, 114 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x114>
  f8:	sub	x0, x27, x28
  fc:	mov	x1, #0x7fffffff            	// #2147483647
 100:	cmp	x0, x1
 104:	b.gt	118 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x118>
 108:	mov	x1, #0xffffffff80000000    	// #-2147483648
 10c:	cmp	x0, x1
 110:	b.lt	1b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x1b8>  // b.tstop
 114:	tbnz	w0, #31, 1b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x1b8>
 118:	cbz	x23, 17c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x17c>
 11c:	ldr	x0, [x23, #88]
 120:	add	x1, x23, #0x68
 124:	add	x22, x23, #0x58
 128:	cmp	x0, x1
 12c:	b.eq	134 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x134>  // b.none
 130:	bl	0 <free>
 134:	ldr	x0, [x23, #72]
 138:	add	x21, x23, #0x48
 13c:	cmp	x22, x0
 140:	b.eq	148 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x148>  // b.none
 144:	bl	0 <free>
 148:	ldr	x0, [x23, #56]
 14c:	cmp	x21, x0
 150:	b.eq	158 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x158>  // b.none
 154:	bl	0 <free>
 158:	ldr	x0, [x23, #8]
 15c:	add	x1, x23, #0x18
 160:	cmp	x0, x1
 164:	b.eq	16c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x16c>  // b.none
 168:	bl	0 <free>
 16c:	mov	x0, x23
 170:	mov	x1, #0x80                  	// #128
 174:	bl	0 <_ZdlPvm>
 178:	ldr	x26, [x19, #32]
 17c:	cmp	x26, x25
 180:	b.eq	18c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x18c>  // b.none
 184:	mov	x0, x26
 188:	bl	0 <_ZdlPv>
 18c:	mov	x0, x19
 190:	bl	0 <_ZdlPv>
 194:	mov	x0, x20
 198:	mov	x1, #0x0                   	// #0
 19c:	ldp	x19, x20, [sp, #16]
 1a0:	ldp	x21, x22, [sp, #32]
 1a4:	ldp	x23, x24, [sp, #48]
 1a8:	ldp	x25, x26, [sp, #64]
 1ac:	ldp	x27, x28, [sp, #80]
 1b0:	ldp	x29, x30, [sp], #112
 1b4:	ret
 1b8:	cbz	x22, 2d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x2d8>
 1bc:	cmp	x24, x22
 1c0:	mov	w0, #0x1                   	// #1
 1c4:	b.ne	278 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x278>  // b.any
 1c8:	mov	x3, x24
 1cc:	mov	x2, x22
 1d0:	mov	x1, x19
 1d4:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
 1d8:	ldr	x2, [x21, #40]
 1dc:	mov	x3, #0x1                   	// #1
 1e0:	mov	x1, #0x0                   	// #0
 1e4:	mov	x0, x19
 1e8:	add	x2, x2, x3
 1ec:	str	x2, [x21, #40]
 1f0:	bfxil	x1, x3, #0, #8
 1f4:	ldp	x19, x20, [sp, #16]
 1f8:	ldp	x21, x22, [sp, #32]
 1fc:	ldp	x23, x24, [sp, #48]
 200:	ldp	x25, x26, [sp, #64]
 204:	ldp	x27, x28, [sp, #80]
 208:	ldp	x29, x30, [sp], #112
 20c:	ret
 210:	ldr	x0, [x21, #24]
 214:	cmp	x0, x20
 218:	b.eq	2c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x2c4>  // b.none
 21c:	mov	x0, x20
 220:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 224:	ldp	x1, x27, [x0, #32]
 228:	mov	x22, x20
 22c:	mov	x20, x0
 230:	cmp	x28, x27
 234:	csel	x2, x28, x27, ls  // ls = plast
 238:	b	e4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xe4>
 23c:	ldr	x20, [x21, #16]
 240:	add	x25, x0, #0x30
 244:	stp	x25, xzr, [x0, #32]
 248:	add	x24, x21, #0x8
 24c:	strb	wzr, [x0, #48]
 250:	ldr	x23, [x22, #16]
 254:	str	xzr, [x22, #16]
 258:	str	x23, [x19, #64]
 25c:	cbnz	x20, 6c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x6c>
 260:	ldr	x0, [x21, #24]
 264:	mov	x22, x24
 268:	cmp	x24, x0
 26c:	b.ne	2cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x2cc>  // b.any
 270:	mov	w0, #0x1                   	// #1
 274:	b	1c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x1c8>
 278:	ldr	x20, [x22, #40]
 27c:	cmp	x28, x20
 280:	csel	x2, x28, x20, ls  // ls = plast
 284:	cbz	x2, 298 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x298>
 288:	ldr	x1, [x22, #32]
 28c:	mov	x0, x26
 290:	bl	0 <memcmp>
 294:	cbnz	w0, 2bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x2bc>
 298:	sub	x28, x28, x20
 29c:	mov	x1, #0x7fffffff            	// #2147483647
 2a0:	mov	w0, #0x0                   	// #0
 2a4:	cmp	x28, x1
 2a8:	b.gt	1c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x1c8>
 2ac:	mov	x0, #0xffffffff80000000    	// #-2147483648
 2b0:	cmp	x28, x0
 2b4:	b.lt	270 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x270>  // b.tstop
 2b8:	mov	w0, w28
 2bc:	lsr	w0, w0, #31
 2c0:	b	1c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x1c8>
 2c4:	mov	x22, x20
 2c8:	b	1bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x1bc>
 2cc:	mov	x20, x24
 2d0:	ldp	x26, x28, [x19, #32]
 2d4:	b	21c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x21c>
 2d8:	mov	x20, #0x0                   	// #0
 2dc:	cbnz	x23, 11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x11c>
 2e0:	b	17c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x17c>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	mov	x22, x1
  10:	mov	x21, x0
  14:	mov	x0, #0x48                  	// #72
  18:	stp	x19, x20, [sp, #16]
  1c:	stp	x23, x24, [sp, #48]
  20:	stp	x25, x26, [sp, #64]
  24:	stp	x27, x28, [sp, #80]
  28:	bl	0 <_Znwm>
  2c:	mov	x19, x0
  30:	ldr	x1, [x22]
  34:	cbz	x1, 1e4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x1e4>
  38:	ldr	x2, [x22, #8]
  3c:	add	x25, x0, #0x20
  40:	mov	x0, x25
  44:	add	x24, x19, #0x30
  48:	add	x2, x1, x2
  4c:	mov	w3, #0x0                   	// #0
  50:	str	x24, [x19, #32]
  54:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_>
  58:	ldr	x20, [x21, #16]
  5c:	add	x23, x21, #0x8
  60:	ldr	x0, [x22, #16]
  64:	str	x0, [x25, #32]
  68:	cbz	x20, 208 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x208>
  6c:	ldp	x26, x27, [x19, #32]
  70:	mov	x25, #0xffffffff80000000    	// #-2147483648
  74:	nop
  78:	ldp	x1, x22, [x20, #32]
  7c:	mov	x0, x26
  80:	cmp	x27, x22
  84:	csel	x28, x27, x22, ls  // ls = plast
  88:	cbz	x28, a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0xa0>
  8c:	mov	x2, x28
  90:	str	x1, [sp, #104]
  94:	bl	0 <memcmp>
  98:	ldr	x1, [sp, #104]
  9c:	cbnz	w0, bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0xbc>
  a0:	sub	x2, x27, x22
  a4:	mov	x3, #0x7fffffff            	// #2147483647
  a8:	mov	w0, w2
  ac:	cmp	x2, x3
  b0:	b.gt	d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0xd4>
  b4:	cmp	x2, x25
  b8:	b.lt	c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0xc0>  // b.tstop
  bc:	tbz	w0, #31, d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0xd4>
  c0:	ldr	x0, [x20, #16]
  c4:	mov	w2, #0x1                   	// #1
  c8:	cbz	x0, e0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0xe0>
  cc:	mov	x20, x0
  d0:	b	78 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x78>
  d4:	ldr	x0, [x20, #24]
  d8:	mov	w2, #0x0                   	// #0
  dc:	cbnz	x0, cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0xcc>
  e0:	mov	x25, x20
  e4:	cbnz	w2, 1b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x1b8>
  e8:	cbz	x28, 100 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x100>
  ec:	mov	x0, x1
  f0:	mov	x2, x28
  f4:	mov	x1, x26
  f8:	bl	0 <memcmp>
  fc:	cbnz	w0, 11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x11c>
 100:	sub	x0, x22, x27
 104:	mov	x1, #0x7fffffff            	// #2147483647
 108:	cmp	x0, x1
 10c:	b.gt	120 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x120>
 110:	mov	x1, #0xffffffff80000000    	// #-2147483648
 114:	cmp	x0, x1
 118:	b.lt	15c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x15c>  // b.tstop
 11c:	tbnz	w0, #31, 15c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x15c>
 120:	cmp	x26, x24
 124:	b.eq	130 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x130>  // b.none
 128:	mov	x0, x26
 12c:	bl	0 <_ZdlPv>
 130:	mov	x0, x19
 134:	bl	0 <_ZdlPv>
 138:	mov	x0, x20
 13c:	mov	x1, #0x0                   	// #0
 140:	ldp	x19, x20, [sp, #16]
 144:	ldp	x21, x22, [sp, #32]
 148:	ldp	x23, x24, [sp, #48]
 14c:	ldp	x25, x26, [sp, #64]
 150:	ldp	x27, x28, [sp, #80]
 154:	ldp	x29, x30, [sp], #112
 158:	ret
 15c:	mov	x20, #0x0                   	// #0
 160:	cbz	x25, 120 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x120>
 164:	cmp	x23, x25
 168:	mov	w0, #0x1                   	// #1
 16c:	b.ne	220 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x220>  // b.any
 170:	mov	x3, x23
 174:	mov	x2, x25
 178:	mov	x1, x19
 17c:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
 180:	ldr	x2, [x21, #40]
 184:	mov	x3, #0x1                   	// #1
 188:	mov	x1, #0x0                   	// #0
 18c:	mov	x0, x19
 190:	add	x2, x2, x3
 194:	str	x2, [x21, #40]
 198:	bfxil	x1, x3, #0, #8
 19c:	ldp	x19, x20, [sp, #16]
 1a0:	ldp	x21, x22, [sp, #32]
 1a4:	ldp	x23, x24, [sp, #48]
 1a8:	ldp	x25, x26, [sp, #64]
 1ac:	ldp	x27, x28, [sp, #80]
 1b0:	ldp	x29, x30, [sp], #112
 1b4:	ret
 1b8:	ldr	x0, [x21, #24]
 1bc:	cmp	x0, x20
 1c0:	b.eq	26c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x26c>  // b.none
 1c4:	mov	x0, x20
 1c8:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 1cc:	ldp	x1, x22, [x0, #32]
 1d0:	mov	x25, x20
 1d4:	mov	x20, x0
 1d8:	cmp	x27, x22
 1dc:	csel	x28, x27, x22, ls  // ls = plast
 1e0:	b	e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0xe8>
 1e4:	add	x25, x0, #0x20
 1e8:	add	x24, x0, #0x30
 1ec:	ldr	x20, [x21, #16]
 1f0:	stp	x24, xzr, [x0, #32]
 1f4:	add	x23, x21, #0x8
 1f8:	strb	wzr, [x0, #48]
 1fc:	ldr	x0, [x22, #16]
 200:	str	x0, [x25, #32]
 204:	cbnz	x20, 6c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x6c>
 208:	ldr	x0, [x21, #24]
 20c:	mov	x25, x23
 210:	cmp	x23, x0
 214:	b.ne	274 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x274>  // b.any
 218:	mov	w0, #0x1                   	// #1
 21c:	b	170 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x170>
 220:	ldr	x20, [x25, #40]
 224:	cmp	x27, x20
 228:	csel	x2, x27, x20, ls  // ls = plast
 22c:	cbz	x2, 240 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x240>
 230:	ldr	x1, [x25, #32]
 234:	mov	x0, x26
 238:	bl	0 <memcmp>
 23c:	cbnz	w0, 264 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x264>
 240:	sub	x27, x27, x20
 244:	mov	x1, #0x7fffffff            	// #2147483647
 248:	mov	w0, #0x0                   	// #0
 24c:	cmp	x27, x1
 250:	b.gt	170 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x170>
 254:	mov	x0, #0xffffffff80000000    	// #-2147483648
 258:	cmp	x27, x0
 25c:	b.lt	218 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x218>  // b.tstop
 260:	mov	w0, w27
 264:	lsr	w0, w0, #31
 268:	b	170 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x170>
 26c:	mov	x25, x20
 270:	b	164 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x164>
 274:	mov	x20, x23
 278:	ldp	x26, x27, [x19, #32]
 27c:	b	1c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x1c4>

Disassembly of section .text._ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE:

0000000000000000 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x2
  14:	add	x0, x0, #0x78
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	x21, x1
  20:	add	x1, sp, #0x58
  24:	stp	x23, x24, [sp, #48]
  28:	add	x24, x20, #0x38
  2c:	str	x25, [sp, #64]
  30:	stp	x21, x2, [sp, #88]
  34:	str	x3, [sp, #104]
  38:	bl	0 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE>
  3c:	ldr	x20, [x20, #64]
  40:	and	w25, w1, #0xff
  44:	cbz	x20, c0 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0xc0>
  48:	mov	x23, x24
  4c:	nop
  50:	ldp	x0, x22, [x20, #32]
  54:	cmp	x19, x22
  58:	b.cc	dc <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0xdc>  // b.lo, b.ul, b.last
  5c:	cbz	x22, 70 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0x70>
  60:	mov	x2, x22
  64:	mov	x1, x21
  68:	bl	0 <memcmp>
  6c:	cbnz	w0, f0 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0xf0>
  70:	cmp	x19, x22
  74:	b.eq	f4 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0xf4>  // b.none
  78:	cmp	x19, x22
  7c:	b.ls	f4 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0xf4>  // b.plast
  80:	ldr	x20, [x20, #24]
  84:	cbnz	x20, 50 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0x50>
  88:	cmp	x24, x23
  8c:	b.eq	c0 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0xc0>  // b.none
  90:	ldp	x1, x20, [x23, #32]
  94:	cmp	x19, x20
  98:	b.hi	104 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0x104>  // b.pmore
  9c:	cbz	x19, b0 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0xb0>
  a0:	mov	x0, x21
  a4:	mov	x2, x19
  a8:	bl	0 <memcmp>
  ac:	cbnz	w0, 118 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0x118>
  b0:	cmp	x19, x20
  b4:	b.eq	11c <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0x11c>  // b.none
  b8:	cmp	x19, x20
  bc:	b.cs	11c <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0x11c>  // b.hs, b.nlast
  c0:	cbz	w25, 144 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0x144>
  c4:	ldp	x19, x20, [sp, #16]
  c8:	ldp	x21, x22, [sp, #32]
  cc:	ldp	x23, x24, [sp, #48]
  d0:	ldr	x25, [sp, #64]
  d4:	ldp	x29, x30, [sp], #112
  d8:	ret
  dc:	cbz	x19, f4 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0xf4>
  e0:	mov	x2, x19
  e4:	mov	x1, x21
  e8:	bl	0 <memcmp>
  ec:	cbz	w0, 78 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0x78>
  f0:	tbnz	w0, #31, 80 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0x80>
  f4:	mov	x23, x20
  f8:	ldr	x20, [x20, #16]
  fc:	cbnz	x20, 50 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0x50>
 100:	b	88 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0x88>
 104:	cbz	x20, 11c <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0x11c>
 108:	mov	x0, x21
 10c:	mov	x2, x20
 110:	bl	0 <memcmp>
 114:	cbz	w0, b8 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0xb8>
 118:	tbnz	w0, #31, c0 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0xc0>
 11c:	ldr	x0, [x23, #64]
 120:	cbz	x0, c0 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0xc0>
 124:	adrp	x3, 0 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE>
 128:	adrp	x1, 0 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE>
 12c:	adrp	x0, 0 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE>
 130:	add	x3, x3, #0x0
 134:	add	x1, x1, #0x0
 138:	add	x0, x0, #0x0
 13c:	mov	w2, #0x6cd                 	// #1741
 140:	bl	0 <__assert_fail>
 144:	adrp	x3, 0 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE>
 148:	adrp	x1, 0 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE>
 14c:	adrp	x0, 0 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE>
 150:	add	x3, x3, #0x0
 154:	add	x1, x1, #0x0
 158:	add	x0, x0, #0x0
 15c:	mov	w2, #0x6ce                 	// #1742
 160:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag:

0000000000000000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	cmp	x2, #0x0
   8:	ccmp	x1, #0x0, #0x0, ne  // ne = any
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	str	x21, [sp, #32]
  18:	b.eq	c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0xc8>  // b.none
  1c:	sub	x19, x2, x1
  20:	str	x19, [sp, #56]
  24:	mov	x21, x1
  28:	mov	x20, x0
  2c:	cmp	x19, #0xf
  30:	b.hi	84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x84>  // b.pmore
  34:	cmp	x19, #0x1
  38:	ldr	x0, [x0]
  3c:	b.ne	68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x68>  // b.any
  40:	ldrb	w1, [x1]
  44:	strb	w1, [x0]
  48:	ldr	x0, [x20]
  4c:	ldr	x19, [sp, #56]
  50:	str	x19, [x20, #8]
  54:	strb	wzr, [x0, x19]
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldr	x21, [sp, #32]
  60:	ldp	x29, x30, [sp], #64
  64:	ret
  68:	cbnz	x19, 9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x9c>
  6c:	str	x19, [x20, #8]
  70:	strb	wzr, [x0, x19]
  74:	ldp	x19, x20, [sp, #16]
  78:	ldr	x21, [sp, #32]
  7c:	ldp	x29, x30, [sp], #64
  80:	ret
  84:	add	x1, sp, #0x38
  88:	mov	x2, #0x0                   	// #0
  8c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  90:	str	x0, [x20]
  94:	ldr	x1, [sp, #56]
  98:	str	x1, [x20, #16]
  9c:	mov	x2, x19
  a0:	mov	x1, x21
  a4:	bl	0 <memcpy>
  a8:	ldr	x0, [x20]
  ac:	ldr	x19, [sp, #56]
  b0:	str	x19, [x20, #8]
  b4:	strb	wzr, [x0, x19]
  b8:	ldp	x19, x20, [sp, #16]
  bc:	ldr	x21, [sp, #32]
  c0:	ldp	x29, x30, [sp], #64
  c4:	ret
  c8:	adrp	x0, 0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>
  cc:	add	x0, x0, #0x0
  d0:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	mov	x22, x3
  10:	mov	x21, x1
  14:	stp	x19, x20, [sp, #16]
  18:	mov	x20, x0
  1c:	mov	x0, #0x48                  	// #72
  20:	stp	x23, x24, [sp, #48]
  24:	bl	0 <_Znwm>
  28:	add	x23, x0, #0x30
  2c:	ldr	x2, [x22]
  30:	str	x23, [x0, #32]
  34:	mov	x19, x0
  38:	add	x22, x0, #0x20
  3c:	mov	w3, #0x0                   	// #0
  40:	mov	x0, x22
  44:	ldp	x1, x2, [x2]
  48:	add	x2, x1, x2
  4c:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_>
  50:	mov	x1, x21
  54:	mov	x2, x22
  58:	mov	x0, x20
  5c:	str	xzr, [x19, #64]
  60:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_>
  64:	mov	x21, x0
  68:	cbz	x1, 90 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x90>
  6c:	mov	x2, x1
  70:	mov	x3, x19
  74:	mov	x1, x0
  78:	mov	x0, x20
  7c:	ldp	x19, x20, [sp, #16]
  80:	ldp	x21, x22, [sp, #32]
  84:	ldp	x23, x24, [sp, #48]
  88:	ldp	x29, x30, [sp], #96
  8c:	b	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_>
  90:	stp	x25, x26, [sp, #64]
  94:	ldr	x26, [x19, #64]
  98:	cbz	x26, 1d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x1d8>
  9c:	ldr	x22, [x26, #128]
  a0:	str	x27, [sp, #80]
  a4:	ldr	x27, [x26, #136]
  a8:	cmp	x22, x27
  ac:	b.eq	16c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x16c>  // b.none
  b0:	ldr	x24, [x22, #8]
  b4:	cbz	x24, f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0xf8>
  b8:	ldp	x20, x25, [x24, #24]
  bc:	cmp	x20, x25
  c0:	b.eq	e0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0xe0>  // b.none
  c4:	nop
  c8:	mov	x0, x20
  cc:	add	x20, x20, #0x10
  d0:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_>
  d4:	cmp	x25, x20
  d8:	b.ne	c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0xc8>  // b.any
  dc:	ldr	x25, [x24, #24]
  e0:	cbz	x25, ec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0xec>
  e4:	mov	x0, x25
  e8:	bl	0 <_ZdlPv>
  ec:	mov	x0, x24
  f0:	mov	x1, #0x30                  	// #48
  f4:	bl	0 <_ZdlPvm>
  f8:	ldr	x20, [x22]
  fc:	cbz	x20, 15c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x15c>
 100:	ldr	x0, [x20, #88]
 104:	add	x1, x20, #0x68
 108:	add	x25, x20, #0x58
 10c:	cmp	x0, x1
 110:	b.eq	118 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x118>  // b.none
 114:	bl	0 <free>
 118:	ldr	x0, [x20, #72]
 11c:	add	x24, x20, #0x48
 120:	cmp	x25, x0
 124:	b.eq	12c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x12c>  // b.none
 128:	bl	0 <free>
 12c:	ldr	x0, [x20, #56]
 130:	cmp	x24, x0
 134:	b.eq	13c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x13c>  // b.none
 138:	bl	0 <free>
 13c:	ldr	x0, [x20, #8]
 140:	add	x1, x20, #0x18
 144:	cmp	x0, x1
 148:	b.eq	150 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x150>  // b.none
 14c:	bl	0 <free>
 150:	mov	x0, x20
 154:	mov	x1, #0x80                  	// #128
 158:	bl	0 <_ZdlPvm>
 15c:	add	x22, x22, #0x10
 160:	cmp	x27, x22
 164:	b.ne	b0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0xb0>  // b.any
 168:	ldr	x27, [x26, #128]
 16c:	cbz	x27, 178 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x178>
 170:	mov	x0, x27
 174:	bl	0 <_ZdlPv>
 178:	ldr	x0, [x26, #88]
 17c:	add	x1, x26, #0x68
 180:	add	x22, x26, #0x58
 184:	cmp	x0, x1
 188:	b.eq	190 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x190>  // b.none
 18c:	bl	0 <free>
 190:	ldr	x0, [x26, #72]
 194:	add	x20, x26, #0x48
 198:	cmp	x22, x0
 19c:	b.eq	1a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x1a4>  // b.none
 1a0:	bl	0 <free>
 1a4:	ldr	x0, [x26, #56]
 1a8:	cmp	x20, x0
 1ac:	b.eq	1b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x1b4>  // b.none
 1b0:	bl	0 <free>
 1b4:	ldr	x0, [x26, #8]
 1b8:	add	x1, x26, #0x18
 1bc:	cmp	x0, x1
 1c0:	b.eq	1c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x1c8>  // b.none
 1c4:	bl	0 <free>
 1c8:	mov	x0, x26
 1cc:	mov	x1, #0x98                  	// #152
 1d0:	bl	0 <_ZdlPvm>
 1d4:	ldr	x27, [sp, #80]
 1d8:	ldr	x0, [x19, #32]
 1dc:	cmp	x23, x0
 1e0:	b.eq	1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x1e8>  // b.none
 1e4:	bl	0 <_ZdlPv>
 1e8:	mov	x0, x19
 1ec:	bl	0 <_ZdlPv>
 1f0:	mov	x0, x21
 1f4:	ldp	x19, x20, [sp, #16]
 1f8:	ldp	x21, x22, [sp, #32]
 1fc:	ldp	x23, x24, [sp, #48]
 200:	ldp	x25, x26, [sp, #64]
 204:	ldp	x29, x30, [sp], #96
 208:	ret

Disassembly of section .text._ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>:
   0:	sub	w1, w1, #0x1
   4:	stp	x29, x30, [sp, #-48]!
   8:	mov	w3, #0x40                  	// #64
   c:	orr	x2, x1, x1, lsr #1
  10:	mov	x29, sp
  14:	orr	x2, x2, x2, lsr #2
  18:	stp	x19, x20, [sp, #16]
  1c:	mov	w20, #0x18                  	// #24
  20:	orr	x2, x2, x2, lsr #4
  24:	stp	x21, x22, [sp, #32]
  28:	mov	x19, x0
  2c:	orr	x2, x2, x2, lsr #8
  30:	ldr	w21, [x0, #24]
  34:	ldr	x22, [x0, #8]
  38:	orr	x2, x2, x2, lsr #16
  3c:	add	x2, x2, #0x1
  40:	cmp	w2, w3
  44:	csel	w2, w2, w3, cs  // cs = hs, nlast
  48:	str	w2, [x0, #24]
  4c:	umull	x0, w2, w20
  50:	bl	0 <_Znwm>
  54:	str	x0, [x19, #8]
  58:	ldr	w5, [x19, #24]
  5c:	sub	w6, w5, #0x1
  60:	and	w2, w5, w6
  64:	cbz	x22, 158 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x158>
  68:	umull	x1, w21, w20
  6c:	str	xzr, [x19, #16]
  70:	add	x8, x22, x1
  74:	cbnz	w2, 1c4 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x1c4>
  78:	umaddl	x20, w5, w20, x0
  7c:	mov	x2, x0
  80:	mov	x3, #0xfffffffffffffff8    	// #-8
  84:	cmp	x0, x20
  88:	b.eq	9c <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x9c>  // b.none
  8c:	nop
  90:	str	x3, [x2], #24
  94:	cmp	x20, x2
  98:	b.ne	90 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x90>  // b.any
  9c:	cmp	x8, x22
  a0:	mov	x4, x22
  a4:	mov	w10, #0x18                  	// #24
  a8:	b.ne	bc <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0xbc>  // b.any
  ac:	b	110 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x110>
  b0:	add	x4, x4, #0x18
  b4:	cmp	x8, x4
  b8:	b.eq	110 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x110>  // b.none
  bc:	ldr	x2, [x4]
  c0:	cmn	x2, #0x10
  c4:	ccmn	x2, #0x8, #0x4, ne  // ne = any
  c8:	b.eq	b0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0xb0>  // b.none
  cc:	cbz	w5, 1e4 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x1e4>
  d0:	lsr	w3, w2, #9
  d4:	eor	w3, w3, w2, lsr #4
  d8:	and	w3, w3, w6
  dc:	umull	x7, w3, w10
  e0:	add	x11, x0, x7
  e4:	ldr	x7, [x0, x7]
  e8:	cmp	x2, x7
  ec:	b.ne	124 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x124>  // b.any
  f0:	adrp	x3, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>
  f4:	adrp	x1, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>
  f8:	adrp	x0, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>
  fc:	add	x3, x3, #0x0
 100:	add	x1, x1, #0x0
 104:	add	x0, x0, #0x0
 108:	mov	w2, #0x17a                 	// #378
 10c:	bl	0 <__assert_fail>
 110:	mov	x0, x22
 114:	ldp	x19, x20, [sp, #16]
 118:	ldp	x21, x22, [sp, #32]
 11c:	ldp	x29, x30, [sp], #48
 120:	b	0 <_ZdlPvm>
 124:	mov	w12, #0x1                   	// #1
 128:	mov	x9, #0x0                   	// #0
 12c:	cmn	x7, #0x8
 130:	b.ne	18c <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x18c>  // b.any
 134:	cmp	x9, #0x0
 138:	ldr	w7, [x19, #16]
 13c:	csel	x9, x9, x11, ne  // ne = any
 140:	add	w7, w7, #0x1
 144:	str	x2, [x9]
 148:	ldp	x2, x3, [x4, #8]
 14c:	stp	x2, x3, [x9, #8]
 150:	str	w7, [x19, #16]
 154:	b	b0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0xb0>
 158:	str	xzr, [x19, #16]
 15c:	cbnz	w2, 1c4 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x1c4>
 160:	umaddl	x20, w5, w20, x0
 164:	mov	x1, #0xfffffffffffffff8    	// #-8
 168:	cmp	x0, x20
 16c:	b.eq	17c <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x17c>  // b.none
 170:	str	x1, [x0], #24
 174:	cmp	x20, x0
 178:	b.ne	170 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x170>  // b.any
 17c:	ldp	x19, x20, [sp, #16]
 180:	ldp	x21, x22, [sp, #32]
 184:	ldp	x29, x30, [sp], #48
 188:	ret
 18c:	add	w3, w12, w3
 190:	cmp	x9, #0x0
 194:	and	w3, w6, w3
 198:	ccmn	x7, #0x10, #0x0, eq  // eq = none
 19c:	csel	x11, x11, x9, eq  // eq = none
 1a0:	add	w12, w12, #0x1
 1a4:	umull	x7, w3, w10
 1a8:	add	x13, x0, x7
 1ac:	ldr	x7, [x0, x7]
 1b0:	cmp	x2, x7
 1b4:	b.eq	f0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0xf0>  // b.none
 1b8:	mov	x9, x11
 1bc:	mov	x11, x13
 1c0:	b	12c <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x12c>
 1c4:	adrp	x3, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>
 1c8:	adrp	x1, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>
 1cc:	adrp	x0, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>
 1d0:	add	x3, x3, #0x0
 1d4:	add	x1, x1, #0x0
 1d8:	add	x0, x0, #0x0
 1dc:	mov	w2, #0x15b                 	// #347
 1e0:	bl	0 <__assert_fail>
 1e4:	mov	x0, #0x0                   	// #0
 1e8:	str	x2, [x0]
 1ec:	brk	#0x3e8

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	ldr	w4, [x0, #24]
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cbz	w4, 168 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x168>
  1c:	ldr	x3, [x1]
  20:	cmn	x3, #0x10
  24:	ccmn	x3, #0x8, #0x4, ne  // ne = any
  28:	b.eq	260 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x260>  // b.none
  2c:	lsr	w2, w3, #9
  30:	sub	w7, w4, #0x1
  34:	eor	w2, w2, w3, lsr #4
  38:	mov	w6, #0x18                  	// #24
  3c:	and	w2, w2, w7
  40:	ldr	x1, [x0, #8]
  44:	umull	x5, w2, w6
  48:	add	x0, x1, x5
  4c:	ldr	x5, [x1, x5]
  50:	cmp	x3, x5
  54:	b.ne	64 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x64>  // b.any
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	ret
  64:	mov	w9, #0x1                   	// #1
  68:	mov	x8, #0x0                   	// #0
  6c:	cmn	x5, #0x8
  70:	b.ne	230 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x230>  // b.any
  74:	ldr	x2, [x19]
  78:	lsl	w1, w4, #1
  7c:	ldr	w5, [x19, #16]
  80:	cmp	x8, #0x0
  84:	add	x2, x2, #0x1
  88:	str	x2, [x19]
  8c:	add	w5, w5, #0x1
  90:	add	w2, w1, w4
  94:	csel	x0, x0, x8, eq  // eq = none
  98:	cmp	w2, w5, lsl #2
  9c:	b.ls	178 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x178>  // b.plast
  a0:	ldr	w2, [x19, #20]
  a4:	sub	w2, w4, w2
  a8:	sub	w2, w2, w5
  ac:	cmp	w2, w4, lsr #3
  b0:	b.ls	e4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0xe4>  // b.plast
  b4:	ldr	x1, [x0]
  b8:	str	w5, [x19, #16]
  bc:	cmn	x1, #0x8
  c0:	b.eq	d0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0xd0>  // b.none
  c4:	ldr	w1, [x19, #20]
  c8:	sub	w1, w1, #0x1
  cc:	str	w1, [x19, #20]
  d0:	stp	x3, xzr, [x0]
  d4:	strb	wzr, [x0, #16]
  d8:	ldp	x19, x20, [sp, #16]
  dc:	ldp	x29, x30, [sp], #32
  e0:	ret
  e4:	mov	x0, x19
  e8:	mov	w1, w4
  ec:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_>
  f0:	ldr	w0, [x19, #24]
  f4:	cbz	w0, 210 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x210>
  f8:	ldr	x2, [x20]
  fc:	cmn	x2, #0x10
 100:	ccmn	x2, #0x8, #0x4, ne  // ne = any
 104:	b.eq	260 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x260>  // b.none
 108:	lsr	w1, w2, #9
 10c:	sub	w4, w0, #0x1
 110:	eor	w1, w1, w2, lsr #4
 114:	mov	w7, #0x18                  	// #24
 118:	and	w1, w1, w4
 11c:	ldr	w5, [x19, #16]
 120:	ldr	x6, [x19, #8]
 124:	add	w5, w5, #0x1
 128:	umull	x3, w1, w7
 12c:	add	x0, x6, x3
 130:	ldr	x3, [x6, x3]
 134:	cmp	x2, x3
 138:	b.ne	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x144>  // b.any
 13c:	str	w5, [x19, #16]
 140:	b	c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0xc4>
 144:	mov	w9, #0x1                   	// #1
 148:	mov	x8, #0x0                   	// #0
 14c:	cmn	x3, #0x8
 150:	b.ne	280 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x280>  // b.any
 154:	mov	x3, x2
 158:	cbz	x8, b4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0xb4>
 15c:	mov	x0, x8
 160:	ldr	x1, [x8]
 164:	b	b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0xb8>
 168:	ldr	x0, [x0]
 16c:	mov	w1, #0x0                   	// #0
 170:	add	x0, x0, #0x1
 174:	str	x0, [x19]
 178:	mov	x0, x19
 17c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_>
 180:	ldr	w0, [x19, #24]
 184:	cbz	w0, 210 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x210>
 188:	ldr	x3, [x20]
 18c:	cmn	x3, #0x10
 190:	ccmn	x3, #0x8, #0x4, ne  // ne = any
 194:	b.eq	260 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x260>  // b.none
 198:	lsr	w1, w3, #9
 19c:	sub	w2, w0, #0x1
 1a0:	eor	w1, w1, w3, lsr #4
 1a4:	mov	w7, #0x18                  	// #24
 1a8:	and	w1, w1, w2
 1ac:	ldr	w5, [x19, #16]
 1b0:	ldr	x4, [x19, #8]
 1b4:	add	w5, w5, #0x1
 1b8:	umull	x6, w1, w7
 1bc:	add	x0, x4, x6
 1c0:	ldr	x6, [x4, x6]
 1c4:	cmp	x6, x3
 1c8:	b.eq	13c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x13c>  // b.none
 1cc:	mov	w9, #0x1                   	// #1
 1d0:	mov	x8, #0x0                   	// #0
 1d4:	cmn	x6, #0x8
 1d8:	b.eq	158 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x158>  // b.none
 1dc:	add	w1, w9, w1
 1e0:	cmp	x8, #0x0
 1e4:	and	w1, w2, w1
 1e8:	ccmn	x6, #0x10, #0x0, eq  // eq = none
 1ec:	csel	x8, x8, x0, ne  // ne = any
 1f0:	add	w9, w9, #0x1
 1f4:	umull	x6, w1, w7
 1f8:	add	x0, x4, x6
 1fc:	ldr	x6, [x4, x6]
 200:	cmp	x3, x6
 204:	b.ne	1d4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x1d4>  // b.any
 208:	str	w5, [x19, #16]
 20c:	b	c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0xc4>
 210:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_>
 214:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_>
 218:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_>
 21c:	add	x3, x3, #0x0
 220:	add	x1, x1, #0x0
 224:	add	x0, x0, #0x0
 228:	mov	w2, #0x22f                 	// #559
 22c:	bl	0 <__assert_fail>
 230:	add	w2, w2, w9
 234:	cmp	x8, #0x0
 238:	and	w2, w7, w2
 23c:	ccmn	x5, #0x10, #0x0, eq  // eq = none
 240:	csel	x8, x8, x0, ne  // ne = any
 244:	add	w9, w9, #0x1
 248:	umull	x5, w2, w6
 24c:	add	x0, x1, x5
 250:	ldr	x5, [x1, x5]
 254:	cmp	x3, x5
 258:	b.eq	58 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x58>  // b.none
 25c:	b	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x6c>
 260:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_>
 264:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_>
 268:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_>
 26c:	add	x3, x3, #0x0
 270:	add	x1, x1, #0x0
 274:	add	x0, x0, #0x0
 278:	mov	w2, #0x250                 	// #592
 27c:	bl	0 <__assert_fail>
 280:	add	w1, w9, w1
 284:	cmp	x8, #0x0
 288:	and	w1, w4, w1
 28c:	ccmn	x3, #0x10, #0x0, eq  // eq = none
 290:	csel	x8, x8, x0, ne  // ne = any
 294:	add	w9, w9, #0x1
 298:	umull	x3, w1, w7
 29c:	add	x0, x6, x3
 2a0:	ldr	x3, [x6, x3]
 2a4:	cmp	x2, x3
 2a8:	b.ne	14c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x14c>  // b.any
 2ac:	str	w5, [x19, #16]
 2b0:	b	c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0xc4>

Disassembly of section .text._ZNSt6vectorIjSaIjEEaSERKS1_:

0000000000000000 <_ZNSt6vectorIjSaIjEEaSERKS1_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	cmp	x1, x0
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	b.eq	84 <_ZNSt6vectorIjSaIjEEaSERKS1_+0x84>  // b.none
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	x20, x1
  20:	stp	x23, x24, [sp, #48]
  24:	ldp	x22, x24, [x1]
  28:	ldr	x23, [x0]
  2c:	ldr	x0, [x0, #16]
  30:	sub	x21, x24, x22
  34:	sub	x0, x0, x23
  38:	asr	x2, x21, #2
  3c:	asr	x0, x0, #2
  40:	cmp	x0, x21, asr #2
  44:	b.cc	94 <_ZNSt6vectorIjSaIjEEaSERKS1_+0x94>  // b.lo, b.ul, b.last
  48:	ldr	x0, [x19, #8]
  4c:	sub	x1, x0, x23
  50:	cmp	x2, x1, asr #2
  54:	b.hi	ec <_ZNSt6vectorIjSaIjEEaSERKS1_+0xec>  // b.pmore
  58:	cmp	x22, x24
  5c:	b.eq	118 <_ZNSt6vectorIjSaIjEEaSERKS1_+0x118>  // b.none
  60:	mov	x1, x22
  64:	mov	x0, x23
  68:	mov	x2, x21
  6c:	bl	0 <memmove>
  70:	ldr	x0, [x19]
  74:	ldp	x23, x24, [sp, #48]
  78:	add	x21, x0, x21
  7c:	str	x21, [x19, #8]
  80:	ldp	x21, x22, [sp, #32]
  84:	mov	x0, x19
  88:	ldp	x19, x20, [sp, #16]
  8c:	ldp	x29, x30, [sp], #64
  90:	ret
  94:	mov	x20, #0x0                   	// #0
  98:	cbz	x2, b8 <_ZNSt6vectorIjSaIjEEaSERKS1_+0xb8>
  9c:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
  a0:	cmp	x2, x0
  a4:	b.hi	14c <_ZNSt6vectorIjSaIjEEaSERKS1_+0x14c>  // b.pmore
  a8:	mov	x0, x21
  ac:	bl	0 <_Znwm>
  b0:	ldr	x23, [x19]
  b4:	mov	x20, x0
  b8:	cmp	x22, x24
  bc:	b.eq	d0 <_ZNSt6vectorIjSaIjEEaSERKS1_+0xd0>  // b.none
  c0:	mov	x1, x22
  c4:	mov	x2, x21
  c8:	mov	x0, x20
  cc:	bl	0 <memcpy>
  d0:	cbz	x23, dc <_ZNSt6vectorIjSaIjEEaSERKS1_+0xdc>
  d4:	mov	x0, x23
  d8:	bl	0 <_ZdlPv>
  dc:	add	x21, x20, x21
  e0:	str	x20, [x19]
  e4:	str	x21, [x19, #16]
  e8:	b	11c <_ZNSt6vectorIjSaIjEEaSERKS1_+0x11c>
  ec:	cbz	x1, 10c <_ZNSt6vectorIjSaIjEEaSERKS1_+0x10c>
  f0:	mov	x2, x1
  f4:	mov	x0, x23
  f8:	mov	x1, x22
  fc:	bl	0 <memmove>
 100:	ldp	x23, x0, [x19]
 104:	ldp	x22, x24, [x20]
 108:	sub	x1, x0, x23
 10c:	add	x1, x22, x1
 110:	cmp	x1, x24
 114:	b.ne	138 <_ZNSt6vectorIjSaIjEEaSERKS1_+0x138>  // b.any
 118:	add	x21, x23, x21
 11c:	ldp	x23, x24, [sp, #48]
 120:	str	x21, [x19, #8]
 124:	mov	x0, x19
 128:	ldp	x19, x20, [sp, #16]
 12c:	ldp	x21, x22, [sp, #32]
 130:	ldp	x29, x30, [sp], #64
 134:	ret
 138:	sub	x2, x24, x1
 13c:	bl	0 <memmove>
 140:	ldr	x0, [x19]
 144:	add	x21, x0, x21
 148:	b	11c <_ZNSt6vectorIjSaIjEEaSERKS1_+0x11c>
 14c:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x21, x0
  14:	b.eq	158 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x158>  // b.none
  18:	stp	x23, x24, [sp, #48]
  1c:	mov	x24, x1
  20:	ldr	w0, [x0, #8]
  24:	stp	x19, x20, [sp, #16]
  28:	ldr	w23, [x24, #8]
  2c:	stp	x25, x26, [sp, #64]
  30:	mov	w1, w0
  34:	mov	w25, w23
  38:	cmp	w23, w0
  3c:	ldr	x19, [x21]
  40:	b.ls	168 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x168>  // b.plast
  44:	ldr	w2, [x21, #12]
  48:	cmp	x25, x2
  4c:	b.ls	19c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x19c>  // b.plast
  50:	mov	w20, #0x30                  	// #48
  54:	umaddl	x20, w0, w20, x19
  58:	cmp	x20, x19
  5c:	b.eq	78 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x78>  // b.none
  60:	ldur	x0, [x20, #-40]
  64:	sub	x20, x20, #0x30
  68:	cbz	x0, 58 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x58>
  6c:	bl	0 <_ZdlPv>
  70:	cmp	x20, x19
  74:	b.ne	60 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x60>  // b.any
  78:	str	wzr, [x21, #8]
  7c:	mov	x1, x25
  80:	mov	x0, x21
  84:	mov	x26, #0x0                   	// #0
  88:	bl	0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_>
  8c:	ldr	w22, [x24, #8]
  90:	mov	w1, #0x30                  	// #48
  94:	ldr	x0, [x24]
  98:	ldr	x19, [x21]
  9c:	add	x20, x0, x26
  a0:	umaddl	x22, w22, w1, x0
  a4:	add	x19, x19, x26
  a8:	cmp	x20, x22
  ac:	b.eq	13c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x13c>  // b.none
  b0:	mov	x24, #0x1fffffffffffffff    	// #2305843009213693951
  b4:	nop
  b8:	ldp	x0, x1, [x20]
  bc:	mov	x3, #0x0                   	// #0
  c0:	ldr	x26, [x20, #16]
  c4:	stp	x0, xzr, [x19]
  c8:	stp	xzr, xzr, [x19, #16]
  cc:	sub	x26, x26, x1
  d0:	cmp	xzr, x26, asr #2
  d4:	asr	x0, x26, #2
  d8:	b.eq	f0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0xf0>  // b.none
  dc:	cmp	x0, x24
  e0:	b.hi	26c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x26c>  // b.pmore
  e4:	mov	x0, x26
  e8:	bl	0 <_Znwm>
  ec:	mov	x3, x0
  f0:	add	x26, x3, x26
  f4:	stp	x3, x3, [x19, #8]
  f8:	str	x26, [x19, #24]
  fc:	ldp	x1, x2, [x20, #8]
 100:	cmp	x1, x2
 104:	sub	x26, x2, x1
 108:	b.eq	11c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x11c>  // b.none
 10c:	mov	x0, x3
 110:	mov	x2, x26
 114:	bl	0 <memmove>
 118:	mov	x3, x0
 11c:	ldp	x1, x0, [x20, #32]
 120:	add	x3, x3, x26
 124:	str	x3, [x19, #16]
 128:	add	x20, x20, #0x30
 12c:	stp	x1, x0, [x19, #32]
 130:	cmp	x20, x22
 134:	add	x19, x19, #0x30
 138:	b.ne	b8 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0xb8>  // b.any
 13c:	ldr	w0, [x21, #12]
 140:	cmp	x25, x0
 144:	b.hi	270 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x270>  // b.pmore
 148:	ldp	x19, x20, [sp, #16]
 14c:	ldp	x25, x26, [sp, #64]
 150:	str	w23, [x21, #8]
 154:	ldp	x23, x24, [sp, #48]
 158:	mov	x0, x21
 15c:	ldp	x21, x22, [sp, #32]
 160:	ldp	x29, x30, [sp], #80
 164:	ret
 168:	cbnz	x25, 200 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x200>
 16c:	mov	w20, #0x30                  	// #48
 170:	umaddl	x20, w0, w20, x19
 174:	cmp	x20, x19
 178:	b.eq	148 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x148>  // b.none
 17c:	nop
 180:	ldur	x0, [x20, #-40]
 184:	sub	x20, x20, #0x30
 188:	cbz	x0, 190 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x190>
 18c:	bl	0 <_ZdlPv>
 190:	cmp	x20, x19
 194:	b.ne	180 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x180>  // b.any
 198:	b	13c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x13c>
 19c:	ldr	x20, [x24]
 1a0:	cbnz	x1, 1b0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x1b0>
 1a4:	mov	w22, #0x30                  	// #48
 1a8:	umaddl	x22, w23, w22, x20
 1ac:	b	b0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0xb0>
 1b0:	mov	w26, #0x30                  	// #48
 1b4:	add	x22, x20, #0x8
 1b8:	add	x19, x19, #0x8
 1bc:	umull	x26, w0, w26
 1c0:	add	x20, x22, x26
 1c4:	nop
 1c8:	ldur	x0, [x22, #-8]
 1cc:	stur	x0, [x19, #-8]
 1d0:	mov	x1, x22
 1d4:	mov	x0, x19
 1d8:	bl	0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_>
 1dc:	add	x22, x22, #0x30
 1e0:	ldur	x0, [x22, #-24]
 1e4:	str	x0, [x19, #24]
 1e8:	ldur	x0, [x22, #-16]
 1ec:	str	x0, [x19, #32]
 1f0:	cmp	x20, x22
 1f4:	add	x19, x19, #0x30
 1f8:	b.ne	1c8 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x1c8>  // b.any
 1fc:	b	8c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x8c>
 200:	mov	w0, #0x30                  	// #48
 204:	add	x22, x19, #0x8
 208:	ldr	x20, [x24]
 20c:	umull	x24, w23, w0
 210:	add	x20, x20, #0x8
 214:	add	x26, x20, x24
 218:	ldur	x0, [x20, #-8]
 21c:	stur	x0, [x22, #-8]
 220:	mov	x1, x20
 224:	mov	x0, x22
 228:	bl	0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_>
 22c:	add	x20, x20, #0x30
 230:	ldur	x0, [x20, #-24]
 234:	str	x0, [x22, #24]
 238:	ldur	x0, [x20, #-16]
 23c:	str	x0, [x22, #32]
 240:	cmp	x26, x20
 244:	add	x22, x22, #0x30
 248:	b.ne	218 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x218>  // b.any
 24c:	ldr	w20, [x21, #8]
 250:	mov	w1, #0x30                  	// #48
 254:	ldr	x0, [x21]
 258:	add	x19, x19, x24
 25c:	umaddl	x20, w20, w1, x0
 260:	cmp	x19, x20
 264:	b.ne	180 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x180>  // b.any
 268:	b	13c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x13c>
 26c:	bl	0 <_ZSt17__throw_bad_allocv>
 270:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_>
 274:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_>
 278:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_>
 27c:	add	x3, x3, #0x0
 280:	add	x1, x1, #0x0
 284:	add	x0, x0, #0x0
 288:	mov	w2, #0x43                  	// #67
 28c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x3, #0x4ec5                	// #20165
   8:	movk	x3, #0xc4ec, lsl #16
   c:	mov	x29, sp
  10:	stp	x21, x22, [sp, #32]
  14:	movk	x3, #0xec4e, lsl #32
  18:	movk	x3, #0x4ec4, lsl #48
  1c:	stp	x23, x24, [sp, #48]
  20:	mov	x22, #0xd89d                	// #55453
  24:	movk	x22, #0x9d89, lsl #16
  28:	ldp	x23, x21, [x0]
  2c:	stp	x25, x26, [sp, #64]
  30:	mov	x25, x0
  34:	stp	x19, x20, [sp, #16]
  38:	movk	x22, #0x89d8, lsl #32
  3c:	movk	x22, #0x9d, lsl #48
  40:	stp	x27, x28, [sp, #80]
  44:	sub	x0, x21, x23
  48:	asr	x0, x0, #4
  4c:	mul	x0, x0, x3
  50:	cmp	x0, x22
  54:	b.eq	2b0 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x2b0>  // b.none
  58:	mov	x27, x1
  5c:	mov	x19, x2
  60:	sub	x20, x1, x23
  64:	cbz	x0, 294 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x294>
  68:	cmp	x0, x0, lsl #1
  6c:	lsl	x0, x0, #1
  70:	b.ls	25c <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x25c>  // b.plast
  74:	mov	x22, #0xffffffffffffff90    	// #-112
  78:	movk	x22, #0x7fff, lsl #48
  7c:	mov	x0, x22
  80:	bl	0 <_Znwm>
  84:	mov	x24, x0
  88:	add	x22, x0, x22
  8c:	add	x26, x0, #0xd0
  90:	add	x0, x24, x20
  94:	ldr	w1, [x19, #8]
  98:	add	x2, x0, #0x10
  9c:	str	x2, [x24, x20]
  a0:	mov	x2, #0x400000000           	// #17179869184
  a4:	str	x2, [x0, #8]
  a8:	cbnz	w1, 288 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x288>
  ac:	cmp	x27, x23
  b0:	b.eq	138 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x138>  // b.none
  b4:	mov	x19, x24
  b8:	mov	x20, x23
  bc:	mov	w26, #0x4                   	// #4
  c0:	b	d4 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xd4>
  c4:	add	x20, x20, #0xd0
  c8:	add	x19, x19, #0xd0
  cc:	cmp	x27, x20
  d0:	b.eq	104 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x104>  // b.none
  d4:	stp	wzr, w26, [x19, #8]
  d8:	add	x0, x19, #0x10
  dc:	str	x0, [x19]
  e0:	ldr	w0, [x20, #8]
  e4:	cbz	w0, c4 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xc4>
  e8:	mov	x1, x20
  ec:	mov	x0, x19
  f0:	add	x20, x20, #0xd0
  f4:	bl	0 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
  f8:	add	x19, x19, #0xd0
  fc:	cmp	x27, x20
 100:	b.ne	d4 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xd4>  // b.any
 104:	sub	x0, x27, #0xd0
 108:	mov	x1, #0x4ec5                	// #20165
 10c:	sub	x0, x0, x23
 110:	movk	x1, #0xc4ec, lsl #16
 114:	movk	x1, #0xec4e, lsl #32
 118:	lsr	x0, x0, #4
 11c:	movk	x1, #0xec4, lsl #48
 120:	mul	x0, x0, x1
 124:	and	x0, x0, #0xfffffffffffffff
 128:	add	x0, x0, #0x2
 12c:	add	x26, x0, x0, lsl #1
 130:	add	x26, x0, x26, lsl #2
 134:	add	x26, x24, x26, lsl #4
 138:	cmp	x27, x21
 13c:	mov	x19, x26
 140:	mov	x20, x27
 144:	mov	w28, #0x4                   	// #4
 148:	b.ne	160 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x160>  // b.any
 14c:	b	1c4 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1c4>
 150:	add	x20, x20, #0xd0
 154:	add	x19, x19, #0xd0
 158:	cmp	x21, x20
 15c:	b.eq	190 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x190>  // b.none
 160:	ldr	w0, [x20, #8]
 164:	add	x1, x19, #0x10
 168:	str	x1, [x19]
 16c:	stp	wzr, w28, [x19, #8]
 170:	cbz	w0, 150 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x150>
 174:	mov	x1, x20
 178:	mov	x0, x19
 17c:	add	x20, x20, #0xd0
 180:	bl	0 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
 184:	add	x19, x19, #0xd0
 188:	cmp	x21, x20
 18c:	b.ne	160 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x160>  // b.any
 190:	sub	x0, x21, x27
 194:	mov	x1, #0x4ec5                	// #20165
 198:	sub	x0, x0, #0xd0
 19c:	movk	x1, #0xc4ec, lsl #16
 1a0:	movk	x1, #0xec4e, lsl #32
 1a4:	lsr	x0, x0, #4
 1a8:	movk	x1, #0xec4, lsl #48
 1ac:	mul	x0, x0, x1
 1b0:	and	x0, x0, #0xfffffffffffffff
 1b4:	add	x0, x0, #0x1
 1b8:	add	x1, x0, x0, lsl #1
 1bc:	add	x0, x0, x1, lsl #2
 1c0:	add	x26, x26, x0, lsl #4
 1c4:	cmp	x23, x21
 1c8:	mov	x20, x23
 1cc:	mov	w27, #0x30                  	// #48
 1d0:	b.eq	22c <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x22c>  // b.none
 1d4:	nop
 1d8:	ldr	w19, [x20, #8]
 1dc:	ldr	x28, [x20]
 1e0:	umaddl	x19, w19, w27, x28
 1e4:	cmp	x28, x19
 1e8:	b.eq	20c <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x20c>  // b.none
 1ec:	nop
 1f0:	ldur	x0, [x19, #-40]
 1f4:	sub	x19, x19, #0x30
 1f8:	cbz	x0, 200 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x200>
 1fc:	bl	0 <_ZdlPv>
 200:	cmp	x28, x19
 204:	b.ne	1f0 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1f0>  // b.any
 208:	ldr	x19, [x20]
 20c:	add	x0, x20, #0x10
 210:	cmp	x19, x0
 214:	b.eq	220 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x220>  // b.none
 218:	mov	x0, x19
 21c:	bl	0 <free>
 220:	add	x20, x20, #0xd0
 224:	cmp	x20, x21
 228:	b.ne	1d8 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1d8>  // b.any
 22c:	cbz	x23, 238 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x238>
 230:	mov	x0, x23
 234:	bl	0 <_ZdlPv>
 238:	ldp	x19, x20, [sp, #16]
 23c:	ldp	x27, x28, [sp, #80]
 240:	stp	x24, x26, [x25]
 244:	str	x22, [x25, #16]
 248:	ldp	x21, x22, [sp, #32]
 24c:	ldp	x23, x24, [sp, #48]
 250:	ldp	x25, x26, [sp, #64]
 254:	ldp	x29, x30, [sp], #96
 258:	ret
 25c:	cbnz	x0, 29c <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x29c>
 260:	mov	x24, #0x0                   	// #0
 264:	add	x0, x24, x20
 268:	ldr	w1, [x19, #8]
 26c:	add	x2, x0, #0x10
 270:	str	x2, [x24, x20]
 274:	mov	x2, #0x400000000           	// #17179869184
 278:	str	x2, [x0, #8]
 27c:	mov	x26, #0xd0                  	// #208
 280:	mov	x22, #0x0                   	// #0
 284:	cbz	w1, ac <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xac>
 288:	mov	x1, x19
 28c:	bl	0 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
 290:	b	ac <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xac>
 294:	mov	x22, #0xd0                  	// #208
 298:	b	7c <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x7c>
 29c:	cmp	x0, x22
 2a0:	mov	x1, #0xd0                  	// #208
 2a4:	csel	x0, x0, x22, ls  // ls = plast
 2a8:	mul	x22, x0, x1
 2ac:	b	7c <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x7c>
 2b0:	adrp	x0, 0 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
 2b4:	add	x0, x0, #0x0
 2b8:	bl	0 <_ZSt20__throw_length_errorPKc>
