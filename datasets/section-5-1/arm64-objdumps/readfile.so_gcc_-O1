
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//readfile.so_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000758 <.init>:
 758:	stp	x29, x30, [sp, #-16]!
 75c:	mov	x29, sp
 760:	bl	840 <fprintf@plt+0x10>
 764:	ldp	x29, x30, [sp], #16
 768:	ret

Disassembly of section .plt:

0000000000000770 <exit@plt-0x20>:
 770:	stp	x16, x30, [sp, #-16]!
 774:	adrp	x16, 11000 <dl_load@@Base+0x10254>
 778:	ldr	x17, [x16, #4088]
 77c:	add	x16, x16, #0xff8
 780:	br	x17
 784:	nop
 788:	nop
 78c:	nop

0000000000000790 <exit@plt>:
 790:	adrp	x16, 12000 <exit@GLIBC_2.17>
 794:	ldr	x17, [x16]
 798:	add	x16, x16, #0x0
 79c:	br	x17

00000000000007a0 <__cxa_finalize@plt>:
 7a0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 7a4:	ldr	x17, [x16, #8]
 7a8:	add	x16, x16, #0x8
 7ac:	br	x17

00000000000007b0 <open@plt>:
 7b0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 7b4:	ldr	x17, [x16, #16]
 7b8:	add	x16, x16, #0x10
 7bc:	br	x17

00000000000007c0 <close@plt>:
 7c0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 7c4:	ldr	x17, [x16, #24]
 7c8:	add	x16, x16, #0x18
 7cc:	br	x17

00000000000007d0 <__gmon_start__@plt>:
 7d0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 7d4:	ldr	x17, [x16, #32]
 7d8:	add	x16, x16, #0x20
 7dc:	br	x17

00000000000007e0 <fwrite@plt>:
 7e0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 7e4:	ldr	x17, [x16, #40]
 7e8:	add	x16, x16, #0x28
 7ec:	br	x17

00000000000007f0 <read@plt>:
 7f0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 7f4:	ldr	x17, [x16, #48]
 7f8:	add	x16, x16, #0x30
 7fc:	br	x17

0000000000000800 <dcgettext@plt>:
 800:	adrp	x16, 12000 <exit@GLIBC_2.17>
 804:	ldr	x17, [x16, #56]
 808:	add	x16, x16, #0x38
 80c:	br	x17

0000000000000810 <__errno_location@plt>:
 810:	adrp	x16, 12000 <exit@GLIBC_2.17>
 814:	ldr	x17, [x16, #64]
 818:	add	x16, x16, #0x40
 81c:	br	x17

0000000000000820 <__xstat@plt>:
 820:	adrp	x16, 12000 <exit@GLIBC_2.17>
 824:	ldr	x17, [x16, #72]
 828:	add	x16, x16, #0x48
 82c:	br	x17

0000000000000830 <fprintf@plt>:
 830:	adrp	x16, 12000 <exit@GLIBC_2.17>
 834:	ldr	x17, [x16, #80]
 838:	add	x16, x16, #0x50
 83c:	br	x17

Disassembly of section .text:

0000000000000840 <dl_load@@Base-0x56c>:
 840:	adrp	x0, 11000 <dl_load@@Base+0x10254>
 844:	ldr	x0, [x0, #4056]
 848:	cbz	x0, 850 <fprintf@plt+0x20>
 84c:	b	7d0 <__gmon_start__@plt>
 850:	ret
 854:	adrp	x0, 12000 <dl_load@@Base+0x11254>
 858:	add	x0, x0, #0xb0
 85c:	adrp	x1, 12000 <dl_load@@Base+0x11254>
 860:	add	x1, x1, #0xb0
 864:	cmp	x0, x1
 868:	b.eq	894 <fprintf@plt+0x64>  // b.none
 86c:	adrp	x1, 11000 <dl_load@@Base+0x10254>
 870:	ldr	x1, [x1, #4032]
 874:	cbz	x1, 894 <fprintf@plt+0x64>
 878:	stp	x29, x30, [sp, #-16]!
 87c:	mov	x29, sp
 880:	adrp	x0, 12000 <dl_load@@Base+0x11254>
 884:	add	x0, x0, #0xb0
 888:	blr	x1
 88c:	ldp	x29, x30, [sp], #16
 890:	ret
 894:	ret
 898:	adrp	x0, 12000 <dl_load@@Base+0x11254>
 89c:	add	x0, x0, #0xb0
 8a0:	adrp	x1, 12000 <dl_load@@Base+0x11254>
 8a4:	add	x1, x1, #0xb0
 8a8:	sub	x0, x0, x1
 8ac:	lsr	x1, x0, #63
 8b0:	add	x0, x1, x0, asr #3
 8b4:	cmp	xzr, x0, asr #1
 8b8:	b.eq	8e8 <fprintf@plt+0xb8>  // b.none
 8bc:	asr	x1, x0, #1
 8c0:	adrp	x2, 11000 <dl_load@@Base+0x10254>
 8c4:	ldr	x2, [x2, #4064]
 8c8:	cbz	x2, 8e8 <fprintf@plt+0xb8>
 8cc:	stp	x29, x30, [sp, #-16]!
 8d0:	mov	x29, sp
 8d4:	adrp	x0, 12000 <dl_load@@Base+0x11254>
 8d8:	add	x0, x0, #0xb0
 8dc:	blr	x2
 8e0:	ldp	x29, x30, [sp], #16
 8e4:	ret
 8e8:	ret
 8ec:	adrp	x0, 12000 <dl_load@@Base+0x11254>
 8f0:	ldrb	w0, [x0, #176]
 8f4:	cbnz	w0, 930 <fprintf@plt+0x100>
 8f8:	stp	x29, x30, [sp, #-16]!
 8fc:	mov	x29, sp
 900:	adrp	x0, 11000 <dl_load@@Base+0x10254>
 904:	ldr	x0, [x0, #4040]
 908:	cbz	x0, 918 <fprintf@plt+0xe8>
 90c:	adrp	x0, 12000 <dl_load@@Base+0x11254>
 910:	ldr	x0, [x0, #88]
 914:	bl	7a0 <__cxa_finalize@plt>
 918:	bl	854 <fprintf@plt+0x24>
 91c:	adrp	x0, 12000 <dl_load@@Base+0x11254>
 920:	mov	w1, #0x1                   	// #1
 924:	strb	w1, [x0, #176]
 928:	ldp	x29, x30, [sp], #16
 92c:	ret
 930:	ret
 934:	stp	x29, x30, [sp, #-16]!
 938:	mov	x29, sp
 93c:	bl	898 <fprintf@plt+0x68>
 940:	ldp	x29, x30, [sp], #16
 944:	ret
 948:	cbz	x0, 960 <fprintf@plt+0x130>
 94c:	adrp	x1, 0 <exit@plt-0x790>
 950:	add	x1, x1, #0xab8
 954:	str	x1, [x0, #24]
 958:	mov	w0, #0x1                   	// #1
 95c:	ret
 960:	mov	w0, #0x0                   	// #0
 964:	b	95c <fprintf@plt+0x12c>
 968:	stp	x29, x30, [sp, #-16]!
 96c:	mov	x29, sp
 970:	adrp	x0, 12000 <dl_load@@Base+0x11254>
 974:	add	x1, x0, #0xb8
 978:	ldr	x1, [x1, #8]
 97c:	ldr	x2, [x1, #56]
 980:	adrp	x1, 12000 <dl_load@@Base+0x11254>
 984:	add	x1, x1, #0x60
 988:	ldr	x0, [x0, #184]
 98c:	blr	x2
 990:	mov	w0, #0x1                   	// #1
 994:	ldp	x29, x30, [sp], #16
 998:	ret
 99c:	stp	x29, x30, [sp, #-48]!
 9a0:	mov	x29, sp
 9a4:	stp	x19, x20, [sp, #16]
 9a8:	mov	x19, x1
 9ac:	ldr	w1, [x1, #16]
 9b0:	and	w1, w1, #0xf000
 9b4:	cmp	w1, #0x8, lsl #12
 9b8:	b.ne	a18 <fprintf@plt+0x1e8>  // b.any
 9bc:	str	x21, [sp, #32]
 9c0:	mov	w21, w0
 9c4:	ldr	x0, [x19, #48]
 9c8:	adrp	x1, 12000 <dl_load@@Base+0x11254>
 9cc:	ldr	x1, [x1, #192]
 9d0:	ldr	x1, [x1, #280]
 9d4:	add	x0, x0, #0x1
 9d8:	blr	x1
 9dc:	mov	x20, x0
 9e0:	cbz	x0, a44 <fprintf@plt+0x214>
 9e4:	ldr	x2, [x19, #48]
 9e8:	mov	x1, x20
 9ec:	mov	w0, w21
 9f0:	bl	7f0 <read@plt>
 9f4:	ldr	x1, [x19, #48]
 9f8:	cmp	x0, x1
 9fc:	b.ne	a78 <fprintf@plt+0x248>  // b.any
 a00:	strb	wzr, [x20, x1]
 a04:	ldr	x21, [sp, #32]
 a08:	mov	x0, x20
 a0c:	ldp	x19, x20, [sp, #16]
 a10:	ldp	x29, x30, [sp], #48
 a14:	ret
 a18:	bl	810 <__errno_location@plt>
 a1c:	mov	w1, #0x16                  	// #22
 a20:	str	w1, [x0]
 a24:	adrp	x0, 12000 <dl_load@@Base+0x11254>
 a28:	add	x2, x0, #0xb8
 a2c:	ldr	x2, [x2, #8]
 a30:	ldr	x2, [x2, #128]
 a34:	ldr	x0, [x0, #184]
 a38:	blr	x2
 a3c:	mov	x20, #0x0                   	// #0
 a40:	b	a08 <fprintf@plt+0x1d8>
 a44:	ldr	x3, [x19, #48]
 a48:	adrp	x0, 12000 <dl_load@@Base+0x11254>
 a4c:	add	x1, x0, #0xb8
 a50:	ldr	x1, [x1, #8]
 a54:	ldr	x4, [x1, #96]
 a58:	add	x3, x3, #0x1
 a5c:	adrp	x2, 0 <exit@plt-0x790>
 a60:	add	x2, x2, #0xf08
 a64:	adrp	x1, 0 <exit@plt-0x790>
 a68:	add	x1, x1, #0xf18
 a6c:	ldr	x0, [x0, #184]
 a70:	blr	x4
 a74:	b	9e4 <fprintf@plt+0x1b4>
 a78:	adrp	x0, 12000 <dl_load@@Base+0x11254>
 a7c:	add	x19, x0, #0xb8
 a80:	ldr	x21, [x0, #184]
 a84:	bl	810 <__errno_location@plt>
 a88:	ldr	x1, [x19, #8]
 a8c:	ldr	x2, [x1, #128]
 a90:	ldr	w1, [x0]
 a94:	mov	x0, x21
 a98:	blr	x2
 a9c:	ldr	x0, [x19, #8]
 aa0:	ldr	x1, [x0, #304]
 aa4:	mov	x0, x20
 aa8:	blr	x1
 aac:	mov	x20, #0x0                   	// #0
 ab0:	ldr	x21, [sp, #32]
 ab4:	b	a08 <fprintf@plt+0x1d8>
 ab8:	cmp	x0, #0x0
 abc:	ccmp	x1, #0x0, #0x4, ne  // ne = any
 ac0:	b.eq	b3c <fprintf@plt+0x30c>  // b.none
 ac4:	stp	x29, x30, [sp, #-48]!
 ac8:	mov	x29, sp
 acc:	stp	x19, x20, [sp, #16]
 ad0:	stp	x21, x22, [sp, #32]
 ad4:	mov	x20, x0
 ad8:	mov	x19, x1
 adc:	mov	x22, x3
 ae0:	mov	x21, x4
 ae4:	ldr	x0, [x1, #16]
 ae8:	cbnz	x0, b20 <fprintf@plt+0x2f0>
 aec:	add	x1, x1, #0x30
 af0:	ldr	w0, [x19, #8]
 af4:	bl	99c <fprintf@plt+0x16c>
 af8:	cbz	x0, b44 <fprintf@plt+0x314>
 afc:	str	x0, [x19, #16]
 b00:	str	xzr, [x22]
 b04:	str	xzr, [x21]
 b08:	str	x0, [x20]
 b0c:	ldr	w0, [x19, #96]
 b10:	ldp	x19, x20, [sp, #16]
 b14:	ldp	x21, x22, [sp, #32]
 b18:	ldp	x29, x30, [sp], #48
 b1c:	ret
 b20:	adrp	x1, 12000 <dl_load@@Base+0x11254>
 b24:	ldr	x1, [x1, #192]
 b28:	ldr	x1, [x1, #304]
 b2c:	blr	x1
 b30:	str	xzr, [x19, #16]
 b34:	mov	w0, #0xffffffff            	// #-1
 b38:	b	b10 <fprintf@plt+0x2e0>
 b3c:	mov	w0, #0xffffffff            	// #-1
 b40:	ret
 b44:	mov	w0, #0xffffffff            	// #-1
 b48:	b	b10 <fprintf@plt+0x2e0>
 b4c:	cbz	x0, c54 <fprintf@plt+0x424>
 b50:	stp	x29, x30, [sp, #-144]!
 b54:	mov	x29, sp
 b58:	adrp	x0, 12000 <dl_load@@Base+0x11254>
 b5c:	add	x1, x0, #0xb8
 b60:	ldr	x1, [x1, #8]
 b64:	ldr	x5, [x1, #168]
 b68:	add	x4, sp, #0x70
 b6c:	mov	w3, #0x5                   	// #5
 b70:	adrp	x2, 0 <exit@plt-0x790>
 b74:	add	x2, x2, #0xf38
 b78:	adrp	x1, 0 <exit@plt-0x790>
 b7c:	add	x1, x1, #0xf40
 b80:	ldr	x0, [x0, #184]
 b84:	blr	x5
 b88:	cbnz	w0, b94 <fprintf@plt+0x364>
 b8c:	ldp	x29, x30, [sp], #144
 b90:	ret
 b94:	stp	x19, x20, [sp, #16]
 b98:	str	x21, [sp, #32]
 b9c:	adrp	x0, 12000 <dl_load@@Base+0x11254>
 ba0:	add	x1, x0, #0xb8
 ba4:	ldr	x20, [x1, #8]
 ba8:	ldr	x21, [x0, #184]
 bac:	stp	xzr, xzr, [sp, #80]
 bb0:	stp	xzr, xzr, [sp, #96]
 bb4:	mov	w0, #0x2                   	// #2
 bb8:	str	w0, [sp, #80]
 bbc:	mov	x0, #0x8                   	// #8
 bc0:	str	x0, [sp, #96]
 bc4:	ldr	x1, [x20, #280]
 bc8:	mov	x0, #0x9                   	// #9
 bcc:	blr	x1
 bd0:	mov	x19, x0
 bd4:	cbz	x0, c30 <fprintf@plt+0x400>
 bd8:	mov	x0, #0x6572                	// #25970
 bdc:	movk	x0, #0x6461, lsl #16
 be0:	movk	x0, #0x6966, lsl #32
 be4:	movk	x0, #0x656c, lsl #48
 be8:	str	x0, [x19]
 bec:	strb	wzr, [x19, #8]
 bf0:	str	x19, [sp, #88]
 bf4:	adrp	x0, 12000 <dl_load@@Base+0x11254>
 bf8:	add	x1, x0, #0xb8
 bfc:	ldr	x1, [x1, #8]
 c00:	ldr	x5, [x1, #224]
 c04:	add	x4, sp, #0x30
 c08:	mov	w3, #0x0                   	// #0
 c0c:	add	x2, sp, #0x50
 c10:	ldr	x1, [sp, #120]
 c14:	ldr	x0, [x0, #184]
 c18:	blr	x5
 c1c:	cmp	w0, #0x0
 c20:	cset	w0, ne  // ne = any
 c24:	ldp	x19, x20, [sp, #16]
 c28:	ldr	x21, [sp, #32]
 c2c:	b	b8c <fprintf@plt+0x35c>
 c30:	ldr	x4, [x20, #96]
 c34:	mov	x3, #0x9                   	// #9
 c38:	adrp	x2, 0 <exit@plt-0x790>
 c3c:	add	x2, x2, #0xf48
 c40:	adrp	x1, 0 <exit@plt-0x790>
 c44:	add	x1, x1, #0xf18
 c48:	mov	x0, x21
 c4c:	blr	x4
 c50:	b	bd8 <fprintf@plt+0x3a8>
 c54:	mov	w0, #0x0                   	// #0
 c58:	ret
 c5c:	stp	x29, x30, [sp, #-208]!
 c60:	mov	x29, sp
 c64:	stp	x19, x20, [sp, #16]
 c68:	str	x21, [sp, #32]
 c6c:	mov	x19, x1
 c70:	stp	xzr, xzr, [x1]
 c74:	stp	xzr, xzr, [x1, #16]
 c78:	adrp	x20, 12000 <dl_load@@Base+0x11254>
 c7c:	add	x21, x20, #0xb8
 c80:	ldr	x0, [x21, #8]
 c84:	ldr	x1, [x0, #144]
 c88:	ldr	x0, [x20, #184]
 c8c:	blr	x1
 c90:	ldr	x0, [x21, #8]
 c94:	ldr	x4, [x0, #152]
 c98:	add	x3, sp, #0xb0
 c9c:	mov	w2, #0x2                   	// #2
 ca0:	mov	x1, #0x0                   	// #0
 ca4:	ldr	x0, [x20, #184]
 ca8:	blr	x4
 cac:	cbnz	w0, cd4 <fprintf@plt+0x4a4>
 cb0:	adrp	x0, 12000 <dl_load@@Base+0x11254>
 cb4:	ldr	x0, [x0, #192]
 cb8:	ldr	w1, [x0, #24]
 cbc:	cbnz	w1, d7c <fprintf@plt+0x54c>
 cc0:	mov	x0, x19
 cc4:	ldp	x19, x20, [sp, #16]
 cc8:	ldr	x21, [sp, #32]
 ccc:	ldp	x29, x30, [sp], #208
 cd0:	ret
 cd4:	add	x2, sp, #0x30
 cd8:	ldr	x1, [sp, #184]
 cdc:	mov	w0, #0x0                   	// #0
 ce0:	bl	820 <__xstat@plt>
 ce4:	tbnz	w0, #31, d34 <fprintf@plt+0x504>
 ce8:	mov	w1, #0x0                   	// #0
 cec:	ldr	x0, [sp, #184]
 cf0:	bl	7b0 <open@plt>
 cf4:	mov	w20, w0
 cf8:	tbnz	w0, #31, d54 <fprintf@plt+0x524>
 cfc:	add	x1, sp, #0x30
 d00:	bl	99c <fprintf@plt+0x16c>
 d04:	mov	x21, x0
 d08:	cbz	x0, cc0 <fprintf@plt+0x490>
 d0c:	mov	w0, w20
 d10:	bl	7c0 <close@plt>
 d14:	stp	xzr, xzr, [x19]
 d18:	stp	xzr, xzr, [x19, #16]
 d1c:	mov	w0, #0x2                   	// #2
 d20:	str	w0, [x19]
 d24:	ldr	x0, [sp, #96]
 d28:	str	x0, [x19, #16]
 d2c:	str	x21, [x19, #8]
 d30:	b	cc0 <fprintf@plt+0x490>
 d34:	ldr	x20, [x20, #184]
 d38:	bl	810 <__errno_location@plt>
 d3c:	ldr	x1, [x21, #8]
 d40:	ldr	x2, [x1, #128]
 d44:	ldr	w1, [x0]
 d48:	mov	x0, x20
 d4c:	blr	x2
 d50:	b	cc0 <fprintf@plt+0x490>
 d54:	adrp	x0, 12000 <dl_load@@Base+0x11254>
 d58:	add	x21, x0, #0xb8
 d5c:	ldr	x20, [x0, #184]
 d60:	bl	810 <__errno_location@plt>
 d64:	ldr	x1, [x21, #8]
 d68:	ldr	x2, [x1, #128]
 d6c:	ldr	w1, [x0]
 d70:	mov	x0, x20
 d74:	blr	x2
 d78:	b	cc0 <fprintf@plt+0x490>
 d7c:	ldr	x20, [x0, #112]
 d80:	adrp	x0, 12000 <dl_load@@Base+0x11254>
 d84:	ldr	x21, [x0, #184]
 d88:	mov	w2, #0x5                   	// #5
 d8c:	adrp	x1, 0 <exit@plt-0x790>
 d90:	add	x1, x1, #0xf58
 d94:	mov	x0, #0x0                   	// #0
 d98:	bl	800 <dcgettext@plt>
 d9c:	mov	x1, x0
 da0:	mov	x0, x21
 da4:	blr	x20
 da8:	b	cc0 <fprintf@plt+0x490>

0000000000000dac <dl_load@@Base>:
 dac:	stp	x29, x30, [sp, #-32]!
 db0:	mov	x29, sp
 db4:	str	x19, [sp, #16]
 db8:	mov	x2, x0
 dbc:	mov	x0, x1
 dc0:	adrp	x1, 12000 <dl_load@@Base+0x11254>
 dc4:	add	x3, x1, #0xb8
 dc8:	str	x2, [x3, #8]
 dcc:	str	x0, [x1, #184]
 dd0:	ldr	w1, [x2]
 dd4:	cmp	w1, #0x2
 dd8:	b.ne	ea0 <dl_load@@Base+0xf4>  // b.any
 ddc:	ldr	w1, [x2, #4]
 de0:	tbnz	w1, #31, ea0 <dl_load@@Base+0xf4>
 de4:	adrp	x1, 12000 <dl_load@@Base+0x11254>
 de8:	ldr	x1, [x1, #128]
 dec:	cbz	x1, ef0 <dl_load@@Base+0x144>
 df0:	ldr	x3, [x2, #48]
 df4:	adrp	x2, 12000 <dl_load@@Base+0x11254>
 df8:	add	x2, x2, #0x60
 dfc:	add	x2, x2, #0x20
 e00:	adrp	x1, 0 <exit@plt-0x790>
 e04:	add	x1, x1, #0xf40
 e08:	blr	x3
 e0c:	mov	w19, #0x0                   	// #0
 e10:	cbnz	w0, e40 <dl_load@@Base+0x94>
 e14:	adrp	x0, 12000 <dl_load@@Base+0x11254>
 e18:	add	x1, x0, #0xb8
 e1c:	ldr	x1, [x1, #8]
 e20:	ldr	x3, [x1, #104]
 e24:	adrp	x1, 12000 <dl_load@@Base+0x11254>
 e28:	ldr	x2, [x1, #128]
 e2c:	adrp	x1, 0 <exit@plt-0x790>
 e30:	add	x1, x1, #0xfe8
 e34:	ldr	x0, [x0, #184]
 e38:	blr	x3
 e3c:	mov	w19, #0x1                   	// #1
 e40:	bl	968 <fprintf@plt+0x138>
 e44:	cbnz	w0, e6c <dl_load@@Base+0xc0>
 e48:	adrp	x0, 12000 <dl_load@@Base+0x11254>
 e4c:	add	x1, x0, #0xb8
 e50:	ldr	x1, [x1, #8]
 e54:	ldr	x2, [x1, #104]
 e58:	adrp	x1, 1000 <dl_load@@Base+0x254>
 e5c:	add	x1, x1, #0x8
 e60:	ldr	x0, [x0, #184]
 e64:	blr	x2
 e68:	add	w19, w19, #0x1
 e6c:	adrp	x0, 12000 <dl_load@@Base+0x11254>
 e70:	add	x1, x0, #0xb8
 e74:	ldr	x1, [x1, #8]
 e78:	ldr	x2, [x1, #88]
 e7c:	adrp	x1, 1000 <dl_load@@Base+0x254>
 e80:	add	x1, x1, #0x38
 e84:	ldr	x0, [x0, #184]
 e88:	blr	x2
 e8c:	cmp	w19, #0x0
 e90:	cset	w0, eq  // eq = none
 e94:	ldr	x19, [sp, #16]
 e98:	ldp	x29, x30, [sp], #32
 e9c:	ret
 ea0:	adrp	x19, 11000 <dl_load@@Base+0x10254>
 ea4:	ldr	x19, [x19, #4048]
 ea8:	ldr	x3, [x19]
 eac:	mov	x2, #0x26                  	// #38
 eb0:	mov	x1, #0x1                   	// #1
 eb4:	adrp	x0, 0 <exit@plt-0x790>
 eb8:	add	x0, x0, #0xf88
 ebc:	bl	7e0 <fwrite@plt>
 ec0:	adrp	x0, 12000 <dl_load@@Base+0x11254>
 ec4:	ldr	x0, [x0, #192]
 ec8:	ldr	w5, [x0, #4]
 ecc:	ldr	w4, [x0]
 ed0:	mov	w3, #0x0                   	// #0
 ed4:	mov	w2, #0x2                   	// #2
 ed8:	adrp	x1, 0 <exit@plt-0x790>
 edc:	add	x1, x1, #0xfb0
 ee0:	ldr	x0, [x19]
 ee4:	bl	830 <fprintf@plt>
 ee8:	mov	w0, #0x1                   	// #1
 eec:	bl	790 <exit@plt>
 ef0:	mov	w19, #0x0                   	// #0
 ef4:	b	e40 <dl_load@@Base+0x94>

Disassembly of section .fini:

0000000000000ef8 <.fini>:
 ef8:	stp	x29, x30, [sp, #-16]!
 efc:	mov	x29, sp
 f00:	ldp	x29, x30, [sp], #16
 f04:	ret
