
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//gcry_idea.mod_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x5f0>:
   0:	and	w0, w0, #0xffff
   4:	cmp	w0, #0x1
   8:	b.ls	34 <grub_mod_init-0x5bc>  // b.plast
   c:	and	x1, x0, #0xffff
  10:	mov	w4, #0x10001               	// #65537
  14:	udiv	x2, x4, x1
  18:	and	w3, w2, #0xffff
  1c:	msub	x2, x2, x1, x4
  20:	and	w1, w2, #0xffff
  24:	cmp	x2, #0x1
  28:	b.ne	38 <grub_mod_init-0x5b8>  // b.any
  2c:	sub	w0, w2, w3
  30:	and	w0, w0, #0xffff
  34:	ret
  38:	mov	w5, #0x1                   	// #1
  3c:	udiv	w2, w0, w1
  40:	msub	w0, w2, w1, w0
  44:	and	w4, w0, #0xffff
  48:	madd	w0, w3, w2, w5
  4c:	cmp	w4, #0x1
  50:	and	w0, w0, #0xffff
  54:	b.eq	34 <grub_mod_init-0x5bc>  // b.none
  58:	udiv	w2, w1, w4
  5c:	msub	w1, w2, w4, w1
  60:	madd	w3, w0, w2, w3
  64:	and	w1, w1, #0xffff
  68:	and	w3, w3, #0xffff
  6c:	cmp	w1, #0x1
  70:	b.ne	7c <grub_mod_init-0x574>  // b.any
  74:	sub	w0, w1, w3
  78:	b	30 <grub_mod_init-0x5c0>
  7c:	mov	w5, w0
  80:	mov	w0, w4
  84:	b	3c <grub_mod_init-0x5b4>
  88:	stp	x29, x30, [sp, #-128]!
  8c:	mov	x6, x0
  90:	mov	x11, x1
  94:	mov	x29, sp
  98:	ldrh	w0, [x0]
  9c:	bl	0 <grub_mod_init-0x5f0>
  a0:	ldrh	w8, [x6, #2]
  a4:	ldrh	w9, [x6, #4]
  a8:	mov	w10, w0
  ac:	neg	w8, w8
  b0:	ldrh	w0, [x6, #6]
  b4:	neg	w9, w9
  b8:	and	w8, w8, #0xffff
  bc:	and	w9, w9, #0xffff
  c0:	add	x7, x6, #0x8
  c4:	bl	0 <grub_mod_init-0x5f0>
  c8:	add	x13, x6, #0x5c
  cc:	strh	w8, [sp, #122]
  d0:	add	x8, sp, #0x78
  d4:	strh	w10, [sp, #120]
  d8:	strh	w9, [sp, #124]
  dc:	strh	w0, [sp, #126]
  e0:	ldrh	w0, [x7]
  e4:	ldrh	w1, [x7, #2]
  e8:	sturh	w0, [x8, #-4]
  ec:	ldrh	w0, [x7, #4]
  f0:	sturh	w1, [x8, #-2]
  f4:	bl	0 <grub_mod_init-0x5f0>
  f8:	ldrh	w10, [x7, #6]
  fc:	ldrh	w9, [x7, #8]
 100:	add	x7, x7, #0xc
 104:	mov	w12, w0
 108:	neg	w10, w10
 10c:	neg	w9, w9
 110:	and	w10, w10, #0xffff
 114:	and	w9, w9, #0xffff
 118:	ldurh	w0, [x7, #-2]
 11c:	bl	0 <grub_mod_init-0x5f0>
 120:	sturh	w9, [x8, #-10]
 124:	sturh	w10, [x8, #-8]
 128:	cmp	x13, x7
 12c:	sturh	w0, [x8, #-6]
 130:	strh	w12, [x8, #-12]!
 134:	b.ne	e0 <grub_mod_init-0x510>  // b.any
 138:	ldr	w0, [x6, #92]
 13c:	str	w0, [sp, #32]
 140:	ldrh	w0, [x6, #96]
 144:	bl	0 <grub_mod_init-0x5f0>
 148:	ldrh	w7, [x6, #98]
 14c:	ldrh	w8, [x6, #100]
 150:	mov	w9, w0
 154:	neg	w7, w7
 158:	ldrh	w0, [x6, #102]
 15c:	neg	w8, w8
 160:	and	w7, w7, #0xffff
 164:	and	w8, w8, #0xffff
 168:	bl	0 <grub_mod_init-0x5f0>
 16c:	strh	w9, [sp, #24]
 170:	add	x1, sp, #0x18
 174:	mov	x2, #0x68                  	// #104
 178:	strh	w7, [sp, #26]
 17c:	strh	w8, [sp, #28]
 180:	strh	w0, [sp, #30]
 184:	mov	x0, x11
 188:	bl	0 <grub_memmove>
 18c:	add	x0, sp, #0x18
 190:	mov	x2, #0x68                  	// #104
 194:	mov	w1, #0x0                   	// #0
 198:	bl	0 <grub_memset>
 19c:	ldp	x29, x30, [sp], #128
 1a0:	ret
 1a4:	stp	x29, x30, [sp, #-32]!
 1a8:	adrp	x3, 0 <grub_mod_init-0x5f0>
 1ac:	mov	x29, sp
 1b0:	ldr	x3, [x3]
 1b4:	ldr	w4, [x3]
 1b8:	str	x19, [sp, #16]
 1bc:	cbnz	w4, 1f4 <grub_mod_init-0x3fc>
 1c0:	mov	w4, #0x1                   	// #1
 1c4:	str	w4, [x3]
 1c8:	str	xzr, [x3, #8]
 1cc:	cmp	w2, #0x10
 1d0:	b.eq	204 <grub_mod_init-0x3ec>  // b.none
 1d4:	adrp	x0, 0 <grub_mod_init-0x5f0>
 1d8:	mov	w2, #0xfb                  	// #251
 1dc:	ldr	x3, [x0]
 1e0:	adrp	x0, 0 <grub_mod_init-0x5f0>
 1e4:	ldr	x1, [x0]
 1e8:	adrp	x0, 0 <grub_mod_init-0x5f0>
 1ec:	ldr	x0, [x0]
 1f0:	bl	0 <_gcry_assert_failed>
 1f4:	ldr	x3, [x3, #8]
 1f8:	cbz	x3, 1cc <grub_mod_init-0x424>
 1fc:	mov	w19, #0x1c                  	// #28
 200:	b	284 <grub_mod_init-0x36c>
 204:	add	x5, x1, #0x1
 208:	mov	x2, #0x0                   	// #0
 20c:	str	wzr, [x0, #208]
 210:	ldrb	w3, [x1, x2]
 214:	ldrb	w4, [x5, x2]
 218:	ubfiz	w3, w3, #8, #8
 21c:	add	w3, w3, w4
 220:	strh	w3, [x0, x2]
 224:	add	x2, x2, #0x2
 228:	cmp	x2, #0x10
 22c:	b.ne	210 <grub_mod_init-0x3e0>  // b.any
 230:	mov	x2, x0
 234:	mov	w4, #0x2c                  	// #44
 238:	mov	w1, #0x0                   	// #0
 23c:	add	w3, w1, #0x1
 240:	add	w1, w1, #0x2
 244:	subs	w4, w4, #0x1
 248:	ubfiz	x5, x3, #1, #3
 24c:	ubfiz	x1, x1, #1, #3
 250:	add	x6, x2, w3, sxtw #1
 254:	ldrh	w5, [x2, x5]
 258:	ldrh	w1, [x2, x1]
 25c:	lsl	w5, w5, #9
 260:	orr	w1, w5, w1, lsr #7
 264:	strh	w1, [x6, #14]
 268:	and	w1, w3, #0x8
 26c:	add	x2, x2, x1, lsl #1
 270:	and	w1, w3, #0x7
 274:	b.ne	23c <grub_mod_init-0x3b4>  // b.any
 278:	mov	w19, #0x0                   	// #0
 27c:	add	x1, x0, #0x68
 280:	bl	88 <grub_mod_init-0x568>
 284:	mov	w0, #0x47                  	// #71
 288:	bl	0 <_gcry_burn_stack>
 28c:	mov	w0, w19
 290:	ldr	x19, [sp, #16]
 294:	ldp	x29, x30, [sp], #32
 298:	ret
 29c:	nop
	...
 2c0:	stp	x29, x30, [sp, #-48]!
 2c4:	mov	x29, sp
 2c8:	stp	x19, x20, [sp, #16]
 2cc:	mov	x20, x2
 2d0:	mov	x19, x0
 2d4:	mov	x2, #0x8                   	// #8
 2d8:	add	x0, sp, #0x28
 2dc:	bl	0 <grub_memmove>
 2e0:	ldrb	w0, [sp, #41]
 2e4:	add	x11, x20, #0x60
 2e8:	ldrb	w4, [sp, #43]
 2ec:	mov	x8, x20
 2f0:	ldrh	w1, [sp, #40]
 2f4:	mov	w9, #0x1                   	// #1
 2f8:	ldrh	w5, [sp, #42]
 2fc:	ldrh	w7, [sp, #46]
 300:	orr	w1, w0, w1, lsl #8
 304:	ldrb	w6, [sp, #47]
 308:	orr	w5, w4, w5, lsl #8
 30c:	ldrb	w0, [sp, #45]
 310:	ldrh	w4, [sp, #44]
 314:	and	w1, w1, #0xffff
 318:	orr	w7, w6, w7, lsl #8
 31c:	and	w5, w5, #0xffff
 320:	and	w7, w7, #0xffff
 324:	orr	w4, w0, w4, lsl #8
 328:	and	w4, w4, #0xffff
 32c:	ldrh	w2, [x8]
 330:	cbz	w2, 4fc <grub_mod_init-0xf4>
 334:	cbz	w1, 4f4 <grub_mod_init-0xfc>
 338:	mul	w1, w1, w2
 33c:	and	w0, w1, #0xffff
 340:	sub	w2, w0, w1, lsr #16
 344:	cmp	w0, w1, lsr #16
 348:	cinc	w1, w2, cc  // cc = lo, ul, last
 34c:	ldrh	w10, [x8, #2]
 350:	and	w2, w1, #0xffff
 354:	ldrh	w6, [x8, #6]
 358:	add	w5, w5, w10
 35c:	and	w10, w5, #0xffff
 360:	ldrh	w5, [x8, #4]
 364:	add	w5, w4, w5
 368:	and	w5, w5, #0xffff
 36c:	cbz	w6, 50c <grub_mod_init-0xe4>
 370:	cbz	w7, 504 <grub_mod_init-0xec>
 374:	mul	w6, w7, w6
 378:	and	w1, w6, #0xffff
 37c:	sub	w0, w1, w6, lsr #16
 380:	cmp	w1, w6, lsr #16
 384:	cinc	w6, w0, cc  // cc = lo, ul, last
 388:	ldrh	w0, [x8, #8]
 38c:	and	w6, w6, #0xffff
 390:	eor	w3, w2, w5
 394:	cbz	w0, 51c <grub_mod_init-0xd4>
 398:	cmp	w2, w5
 39c:	b.eq	514 <grub_mod_init-0xdc>  // b.none
 3a0:	mul	w3, w3, w0
 3a4:	and	w1, w3, #0xffff
 3a8:	sub	w0, w1, w3, lsr #16
 3ac:	cmp	w1, w3, lsr #16
 3b0:	cinc	w0, w0, cc  // cc = lo, ul, last
 3b4:	and	w0, w0, #0xffff
 3b8:	ldrh	w1, [x8, #10]
 3bc:	eor	w3, w10, w6
 3c0:	add	w3, w0, w3
 3c4:	add	x8, x8, #0xc
 3c8:	and	w3, w3, #0xffff
 3cc:	cbz	w1, 530 <grub_mod_init-0xc0>
 3d0:	cbz	w3, 528 <grub_mod_init-0xc8>
 3d4:	mul	w3, w3, w1
 3d8:	and	w4, w3, #0xffff
 3dc:	sub	w1, w4, w3, lsr #16
 3e0:	cmp	w4, w3, lsr #16
 3e4:	cinc	w3, w1, cc  // cc = lo, ul, last
 3e8:	and	w3, w3, #0xffff
 3ec:	cmp	x11, x8
 3f0:	add	w0, w3, w0
 3f4:	eor	w1, w2, w3
 3f8:	and	w0, w0, #0xffff
 3fc:	eor	w5, w5, w3
 400:	eor	w7, w0, w6
 404:	eor	w4, w10, w0
 408:	b.ne	32c <grub_mod_init-0x2c4>  // b.any
 40c:	ldrh	w8, [x20, #96]
 410:	cbz	w8, 544 <grub_mod_init-0xac>
 414:	cmp	w2, w3
 418:	b.eq	538 <grub_mod_init-0xb8>  // b.none
 41c:	mul	w1, w1, w8
 420:	and	w3, w1, #0xffff
 424:	sub	w2, w3, w1, lsr #16
 428:	cmp	w3, w1, lsr #16
 42c:	cinc	w1, w2, cc  // cc = lo, ul, last
 430:	strh	w1, [sp, #40]
 434:	ldrh	w1, [x20, #98]
 438:	add	w4, w4, w1
 43c:	ldrh	w1, [x20, #100]
 440:	and	w4, w4, #0xffff
 444:	add	w5, w5, w1
 448:	ldrh	w1, [x20, #102]
 44c:	and	w5, w5, #0xffff
 450:	cbz	w1, 560 <grub_mod_init-0x90>
 454:	cmp	w0, w6
 458:	b.eq	550 <grub_mod_init-0xa0>  // b.none
 45c:	mul	w7, w7, w1
 460:	and	w1, w7, #0xffff
 464:	sub	w0, w1, w7, lsr #16
 468:	cmp	w1, w7, lsr #16
 46c:	cinc	w0, w0, cc  // cc = lo, ul, last
 470:	strh	w0, [sp, #46]
 474:	ldrb	w1, [sp, #41]
 478:	rev16	w5, w5
 47c:	ldrh	w0, [sp, #40]
 480:	rev16	w4, w4
 484:	mov	x2, #0x2                   	// #2
 488:	strh	w5, [sp, #42]
 48c:	strh	w4, [sp, #44]
 490:	orr	w0, w1, w0, lsl #8
 494:	ldrb	w1, [sp, #47]
 498:	strh	w0, [sp, #40]
 49c:	ldrh	w0, [sp, #46]
 4a0:	orr	w0, w1, w0, lsl #8
 4a4:	add	x1, sp, #0x28
 4a8:	strh	w0, [sp, #46]
 4ac:	mov	x0, x19
 4b0:	bl	0 <grub_memmove>
 4b4:	add	x1, sp, #0x2c
 4b8:	mov	x2, #0x2                   	// #2
 4bc:	add	x0, x19, x2
 4c0:	bl	0 <grub_memmove>
 4c4:	add	x0, sp, #0x28
 4c8:	mov	x2, #0x2                   	// #2
 4cc:	add	x1, x0, x2
 4d0:	add	x0, x19, #0x4
 4d4:	bl	0 <grub_memmove>
 4d8:	add	x1, sp, #0x2e
 4dc:	add	x0, x19, #0x6
 4e0:	mov	x2, #0x2                   	// #2
 4e4:	bl	0 <grub_memmove>
 4e8:	ldp	x19, x20, [sp, #16]
 4ec:	ldp	x29, x30, [sp], #48
 4f0:	ret
 4f4:	sub	w1, w9, w2
 4f8:	b	34c <grub_mod_init-0x2a4>
 4fc:	sub	w1, w9, w1
 500:	b	34c <grub_mod_init-0x2a4>
 504:	sub	w6, w9, w6
 508:	b	388 <grub_mod_init-0x268>
 50c:	sub	w6, w9, w7
 510:	b	388 <grub_mod_init-0x268>
 514:	sub	w0, w9, w0
 518:	b	3b4 <grub_mod_init-0x23c>
 51c:	sub	w3, w9, w3
 520:	and	w0, w3, #0xffff
 524:	b	3b8 <grub_mod_init-0x238>
 528:	sub	w3, w9, w1
 52c:	b	3e8 <grub_mod_init-0x208>
 530:	sub	w3, w9, w3
 534:	b	3e8 <grub_mod_init-0x208>
 538:	mov	w1, #0x1                   	// #1
 53c:	sub	w1, w1, w8
 540:	b	430 <grub_mod_init-0x1c0>
 544:	mov	w2, #0x1                   	// #1
 548:	sub	w1, w2, w1
 54c:	b	430 <grub_mod_init-0x1c0>
 550:	mov	w7, #0x1                   	// #1
 554:	sub	w1, w7, w1
 558:	strh	w1, [sp, #46]
 55c:	b	474 <grub_mod_init-0x17c>
 560:	mov	w6, #0x1                   	// #1
 564:	sub	w7, w6, w7
 568:	strh	w7, [sp, #46]
 56c:	b	474 <grub_mod_init-0x17c>
 570:	stp	x29, x30, [sp, #-48]!
 574:	mov	x29, sp
 578:	stp	x19, x20, [sp, #16]
 57c:	mov	x19, x1
 580:	ldr	w1, [x0, #208]
 584:	str	x21, [sp, #32]
 588:	mov	x20, x2
 58c:	add	x21, x0, #0x68
 590:	cbnz	w1, 5a4 <grub_mod_init-0x4c>
 594:	mov	w1, #0x1                   	// #1
 598:	str	w1, [x0, #208]
 59c:	mov	x1, x21
 5a0:	bl	88 <grub_mod_init-0x568>
 5a4:	mov	x2, x21
 5a8:	mov	x1, x20
 5ac:	mov	x0, x19
 5b0:	bl	2c0 <grub_mod_init-0x330>
 5b4:	ldp	x19, x20, [sp, #16]
 5b8:	mov	w0, #0x30                  	// #48
 5bc:	ldr	x21, [sp, #32]
 5c0:	ldp	x29, x30, [sp], #48
 5c4:	b	0 <_gcry_burn_stack>
 5c8:	mov	x3, x0
 5cc:	stp	x29, x30, [sp, #-16]!
 5d0:	mov	x0, x1
 5d4:	mov	x29, sp
 5d8:	mov	x1, x2
 5dc:	mov	x2, x3
 5e0:	bl	2c0 <grub_mod_init-0x330>
 5e4:	ldp	x29, x30, [sp], #16
 5e8:	mov	w0, #0x30                  	// #48
 5ec:	b	0 <_gcry_burn_stack>

00000000000005f0 <grub_mod_init>:
 5f0:	adrp	x0, 0 <grub_mod_init-0x5f0>
 5f4:	ldr	x0, [x0]
 5f8:	b	0 <grub_cipher_register>
 5fc:	nop
	...

0000000000000608 <grub_mod_fini>:
 608:	adrp	x0, 0 <grub_mod_init-0x5f0>
 60c:	ldr	x0, [x0]
 610:	b	0 <grub_cipher_unregister>
 614:	nop
	...
