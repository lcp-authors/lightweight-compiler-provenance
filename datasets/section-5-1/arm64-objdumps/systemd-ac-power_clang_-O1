
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-ac-power_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000210ef0 <_start>:
  210ef0:	mov	x29, #0x0                   	// #0
  210ef4:	mov	x30, #0x0                   	// #0
  210ef8:	mov	x5, x0
  210efc:	ldr	x1, [sp]
  210f00:	add	x2, sp, #0x8
  210f04:	mov	x6, sp
  210f08:	movz	x0, #0x0, lsl #48
  210f0c:	movk	x0, #0x0, lsl #32
  210f10:	movk	x0, #0x21, lsl #16
  210f14:	movk	x0, #0x1040
  210f18:	movz	x3, #0x0, lsl #48
  210f1c:	movk	x3, #0x0, lsl #32
  210f20:	movk	x3, #0x21, lsl #16
  210f24:	movk	x3, #0x13b0
  210f28:	movz	x4, #0x0, lsl #48
  210f2c:	movk	x4, #0x0, lsl #32
  210f30:	movk	x4, #0x21, lsl #16
  210f34:	movk	x4, #0x1430
  210f38:	bl	211480 <__libc_start_main@plt>
  210f3c:	bl	211490 <abort@plt>

0000000000210f40 <call_weak_fn>:
  210f40:	adrp	x0, 221000 <printf@plt+0xfa70>
  210f44:	ldr	x0, [x0, #1920]
  210f48:	cbz	x0, 210f50 <call_weak_fn+0x10>
  210f4c:	b	2114a0 <__gmon_start__@plt>
  210f50:	ret

0000000000210f54 <deregister_tm_clones>:
  210f54:	adrp	x0, 231000 <_DYNAMIC+0xfa50>
  210f58:	add	x0, x0, #0x840
  210f5c:	adrp	x1, 231000 <_DYNAMIC+0xfa50>
  210f60:	add	x1, x1, #0x840
  210f64:	cmp	x0, x1
  210f68:	b.eq	210f9c <deregister_tm_clones+0x48>  // b.none
  210f6c:	stp	x29, x30, [sp, #-32]!
  210f70:	mov	x29, sp
  210f74:	adrp	x0, 200000 <parse_argv.options-0xd38>
  210f78:	ldr	x0, [x0, #2984]
  210f7c:	str	x0, [sp, #24]
  210f80:	mov	x1, x0
  210f84:	cbz	x1, 210f94 <deregister_tm_clones+0x40>
  210f88:	adrp	x0, 231000 <_DYNAMIC+0xfa50>
  210f8c:	add	x0, x0, #0x840
  210f90:	blr	x1
  210f94:	ldp	x29, x30, [sp], #32
  210f98:	ret
  210f9c:	ret

0000000000210fa0 <register_tm_clones>:
  210fa0:	adrp	x0, 231000 <_DYNAMIC+0xfa50>
  210fa4:	add	x0, x0, #0x840
  210fa8:	adrp	x1, 231000 <_DYNAMIC+0xfa50>
  210fac:	add	x1, x1, #0x840
  210fb0:	sub	x0, x0, x1
  210fb4:	lsr	x1, x0, #63
  210fb8:	add	x0, x1, x0, asr #3
  210fbc:	cmp	xzr, x0, asr #1
  210fc0:	b.eq	210ff8 <register_tm_clones+0x58>  // b.none
  210fc4:	stp	x29, x30, [sp, #-32]!
  210fc8:	mov	x29, sp
  210fcc:	asr	x1, x0, #1
  210fd0:	adrp	x0, 200000 <parse_argv.options-0xd38>
  210fd4:	ldr	x0, [x0, #2992]
  210fd8:	str	x0, [sp, #24]
  210fdc:	mov	x2, x0
  210fe0:	cbz	x2, 210ff0 <register_tm_clones+0x50>
  210fe4:	adrp	x0, 231000 <_DYNAMIC+0xfa50>
  210fe8:	add	x0, x0, #0x840
  210fec:	blr	x2
  210ff0:	ldp	x29, x30, [sp], #32
  210ff4:	ret
  210ff8:	ret

0000000000210ffc <__do_global_dtors_aux>:
  210ffc:	adrp	x0, 231000 <_DYNAMIC+0xfa50>
  211000:	ldrb	w0, [x0, #2112]
  211004:	cbnz	w0, 211028 <__do_global_dtors_aux+0x2c>
  211008:	stp	x29, x30, [sp, #-16]!
  21100c:	mov	x29, sp
  211010:	bl	210f54 <deregister_tm_clones>
  211014:	adrp	x0, 231000 <_DYNAMIC+0xfa50>
  211018:	mov	w1, #0x1                   	// #1
  21101c:	strb	w1, [x0, #2112]
  211020:	ldp	x29, x30, [sp], #16
  211024:	ret
  211028:	ret

000000000021102c <frame_dummy>:
  21102c:	stp	x29, x30, [sp, #-16]!
  211030:	mov	x29, sp
  211034:	bl	210fa0 <register_tm_clones>
  211038:	ldp	x29, x30, [sp], #16
  21103c:	ret

0000000000211040 <main>:
  211040:	stp	x29, x30, [sp, #-32]!
  211044:	stp	x20, x19, [sp, #16]
  211048:	mov	x29, sp
  21104c:	mov	x19, x1
  211050:	mov	w20, w0
  211054:	bl	211090 <save_argc_argv>
  211058:	mov	w0, w20
  21105c:	mov	x1, x19
  211060:	bl	2110a4 <run>
  211064:	mov	w19, w0
  211068:	bl	2114b0 <ask_password_agent_close@plt>
  21106c:	bl	2114c0 <polkit_agent_close@plt>
  211070:	bl	2114d0 <pager_close@plt>
  211074:	bl	2114e0 <mac_selinux_finish@plt>
  211078:	bl	211164 <static_destruct>
  21107c:	cmp	w19, #0x0
  211080:	csinc	w0, w19, wzr, ge  // ge = tcont
  211084:	ldp	x20, x19, [sp, #16]
  211088:	ldp	x29, x30, [sp], #32
  21108c:	ret

0000000000211090 <save_argc_argv>:
  211090:	adrp	x8, 231000 <_DYNAMIC+0xfa50>
  211094:	adrp	x9, 231000 <_DYNAMIC+0xfa50>
  211098:	str	w0, [x8, #2120]
  21109c:	str	x1, [x9, #2128]
  2110a0:	ret

00000000002110a4 <run>:
  2110a4:	stp	x29, x30, [sp, #-32]!
  2110a8:	stp	x20, x19, [sp, #16]
  2110ac:	mov	w20, w0
  2110b0:	mov	w0, wzr
  2110b4:	mov	x29, sp
  2110b8:	mov	x19, x1
  2110bc:	bl	2114f0 <log_parse_environment_realm@plt>
  2110c0:	bl	211500 <log_open@plt>
  2110c4:	mov	w0, w20
  2110c8:	mov	x1, x19
  2110cc:	bl	2111c4 <parse_argv>
  2110d0:	cmp	w0, #0x1
  2110d4:	b.lt	211158 <run+0xb4>  // b.tstop
  2110d8:	bl	211510 <on_ac_power@plt>
  2110dc:	mov	w19, w0
  2110e0:	tbnz	w0, #31, 211110 <run+0x6c>
  2110e4:	adrp	x8, 231000 <_DYNAMIC+0xfa50>
  2110e8:	ldrb	w8, [x8, #2113]
  2110ec:	cmp	w8, #0x1
  2110f0:	b.ne	211104 <run+0x60>  // b.any
  2110f4:	cmp	w19, #0x0
  2110f8:	cset	w0, ne  // ne = any
  2110fc:	bl	211360 <yes_no>
  211100:	bl	211520 <puts@plt>
  211104:	cmp	w19, #0x0
  211108:	cset	w0, eq  // eq = none
  21110c:	b	211158 <run+0xb4>
  211110:	mov	w0, wzr
  211114:	bl	211530 <log_get_max_level_realm@plt>
  211118:	cmp	w0, #0x3
  21111c:	b.lt	21114c <run+0xa8>  // b.tstop
  211120:	adrp	x2, 200000 <parse_argv.options-0xd38>
  211124:	adrp	x4, 200000 <parse_argv.options-0xd38>
  211128:	adrp	x5, 200000 <parse_argv.options-0xd38>
  21112c:	add	x2, x2, #0xcff
  211130:	add	x4, x4, #0xcf3
  211134:	add	x5, x5, #0xbdb
  211138:	mov	w0, #0x3                   	// #3
  21113c:	mov	w3, #0x52                  	// #82
  211140:	mov	w1, w19
  211144:	bl	211540 <log_internal_realm@plt>
  211148:	b	211158 <run+0xb4>
  21114c:	mov	w8, wzr
  211150:	neg	w9, w19
  211154:	sub	w0, w8, w9, uxtb
  211158:	ldp	x20, x19, [sp, #16]
  21115c:	ldp	x29, x30, [sp], #32
  211160:	ret

0000000000211164 <static_destruct>:
  211164:	stp	x29, x30, [sp, #-32]!
  211168:	stp	x20, x19, [sp, #16]
  21116c:	adrp	x8, 221000 <printf@plt+0xfa70>
  211170:	ldr	x8, [x8, #1928]
  211174:	mov	x29, sp
  211178:	cbz	x8, 2111b8 <static_destruct+0x54>
  21117c:	adrp	x0, 221000 <printf@plt+0xfa70>
  211180:	ldr	x0, [x0, #1928]
  211184:	bl	2113a0 <ALIGN_TO>
  211188:	adrp	x20, 221000 <printf@plt+0xfa70>
  21118c:	ldr	x20, [x20, #1936]
  211190:	cmp	x0, x20
  211194:	b.cs	2111b8 <static_destruct+0x54>  // b.hs, b.nlast
  211198:	mov	x19, x0
  21119c:	ldp	x0, x8, [x19]
  2111a0:	blr	x8
  2111a4:	add	x0, x19, #0x10
  2111a8:	bl	2113a0 <ALIGN_TO>
  2111ac:	mov	x19, x0
  2111b0:	cmp	x0, x20
  2111b4:	b.cc	21119c <static_destruct+0x38>  // b.lo, b.ul, b.last
  2111b8:	ldp	x20, x19, [sp, #16]
  2111bc:	ldp	x29, x30, [sp], #32
  2111c0:	ret

00000000002111c4 <parse_argv>:
  2111c4:	stp	x29, x30, [sp, #-64]!
  2111c8:	stp	x24, x23, [sp, #16]
  2111cc:	stp	x22, x21, [sp, #32]
  2111d0:	stp	x20, x19, [sp, #48]
  2111d4:	mov	x29, sp
  2111d8:	tbnz	w0, #31, 2112f4 <parse_argv+0x130>
  2111dc:	mov	x20, x1
  2111e0:	cbz	x1, 211318 <parse_argv+0x154>
  2111e4:	adrp	x2, 200000 <parse_argv.options-0xd38>
  2111e8:	adrp	x3, 200000 <parse_argv.options-0xd38>
  2111ec:	add	x2, x2, #0xbf8
  2111f0:	add	x3, x3, #0xd38
  2111f4:	mov	x1, x20
  2111f8:	mov	x4, xzr
  2111fc:	mov	w19, w0
  211200:	bl	211550 <getopt_long@plt>
  211204:	tbnz	w0, #31, 211250 <parse_argv+0x8c>
  211208:	adrp	x21, 200000 <parse_argv.options-0xd38>
  21120c:	adrp	x22, 200000 <parse_argv.options-0xd38>
  211210:	adrp	x23, 231000 <_DYNAMIC+0xfa50>
  211214:	mov	w24, #0x1                   	// #1
  211218:	add	x21, x21, #0xbf8
  21121c:	add	x22, x22, #0xd38
  211220:	cmp	w0, #0x75
  211224:	b.le	2112a8 <parse_argv+0xe4>
  211228:	cmp	w0, #0x76
  21122c:	b.ne	2112b8 <parse_argv+0xf4>  // b.any
  211230:	mov	w0, w19
  211234:	mov	x1, x20
  211238:	mov	x2, x21
  21123c:	mov	x3, x22
  211240:	mov	x4, xzr
  211244:	strb	w24, [x23, #2113]
  211248:	bl	211550 <getopt_long@plt>
  21124c:	tbz	w0, #31, 211220 <parse_argv+0x5c>
  211250:	adrp	x8, 231000 <_DYNAMIC+0xfa50>
  211254:	ldr	w8, [x8, #2136]
  211258:	cmp	w8, w19
  21125c:	b.ge	2112dc <parse_argv+0x118>  // b.tcont
  211260:	mov	w0, wzr
  211264:	bl	211530 <log_get_max_level_realm@plt>
  211268:	cmp	w0, #0x3
  21126c:	b.lt	2112b0 <parse_argv+0xec>  // b.tstop
  211270:	adrp	x8, 231000 <_DYNAMIC+0xfa50>
  211274:	ldr	x6, [x8, #2144]
  211278:	adrp	x2, 200000 <parse_argv.options-0xd38>
  21127c:	adrp	x4, 200000 <parse_argv.options-0xd38>
  211280:	adrp	x5, 200000 <parse_argv.options-0xd38>
  211284:	mov	w1, #0x16                  	// #22
  211288:	add	x2, x2, #0xcff
  21128c:	add	x4, x4, #0xc12
  211290:	add	x5, x5, #0xbb8
  211294:	mov	w0, #0x3                   	// #3
  211298:	movk	w1, #0x4000, lsl #16
  21129c:	mov	w3, #0x3e                  	// #62
  2112a0:	bl	211540 <log_internal_realm@plt>
  2112a4:	b	2112e0 <parse_argv+0x11c>
  2112a8:	cmp	w0, #0x3f
  2112ac:	b.ne	2112c8 <parse_argv+0x104>  // b.any
  2112b0:	mov	w0, #0xffffffea            	// #-22
  2112b4:	b	2112e0 <parse_argv+0x11c>
  2112b8:	cmp	w0, #0x100
  2112bc:	b.ne	21133c <parse_argv+0x178>  // b.any
  2112c0:	bl	211560 <version@plt>
  2112c4:	b	2112e0 <parse_argv+0x11c>
  2112c8:	cmp	w0, #0x68
  2112cc:	b.ne	21133c <parse_argv+0x178>  // b.any
  2112d0:	bl	21137c <help>
  2112d4:	mov	w0, wzr
  2112d8:	b	2112e0 <parse_argv+0x11c>
  2112dc:	mov	w0, #0x1                   	// #1
  2112e0:	ldp	x20, x19, [sp, #48]
  2112e4:	ldp	x22, x21, [sp, #32]
  2112e8:	ldp	x24, x23, [sp, #16]
  2112ec:	ldp	x29, x30, [sp], #64
  2112f0:	ret
  2112f4:	adrp	x1, 200000 <parse_argv.options-0xd38>
  2112f8:	adrp	x2, 200000 <parse_argv.options-0xd38>
  2112fc:	adrp	x4, 200000 <parse_argv.options-0xd38>
  211300:	add	x1, x1, #0xbfb
  211304:	add	x2, x2, #0xcff
  211308:	add	x4, x4, #0xd17
  21130c:	mov	w3, #0x22                  	// #34
  211310:	mov	w0, wzr
  211314:	bl	211570 <log_assert_failed_realm@plt>
  211318:	adrp	x1, 200000 <parse_argv.options-0xd38>
  21131c:	adrp	x2, 200000 <parse_argv.options-0xd38>
  211320:	adrp	x4, 200000 <parse_argv.options-0xd38>
  211324:	add	x1, x1, #0xc05
  211328:	add	x2, x2, #0xcff
  21132c:	add	x4, x4, #0xd17
  211330:	mov	w3, #0x23                  	// #35
  211334:	mov	w0, wzr
  211338:	bl	211570 <log_assert_failed_realm@plt>
  21133c:	adrp	x1, 200000 <parse_argv.options-0xd38>
  211340:	adrp	x2, 200000 <parse_argv.options-0xd38>
  211344:	adrp	x4, 200000 <parse_argv.options-0xd38>
  211348:	add	x1, x1, #0xc20
  21134c:	add	x2, x2, #0xcff
  211350:	add	x4, x4, #0xd17
  211354:	mov	w3, #0x38                  	// #56
  211358:	mov	w0, wzr
  21135c:	bl	211580 <log_assert_failed_unreachable_realm@plt>

0000000000211360 <yes_no>:
  211360:	adrp	x8, 200000 <parse_argv.options-0xd38>
  211364:	adrp	x9, 200000 <parse_argv.options-0xd38>
  211368:	add	x8, x8, #0xc1d
  21136c:	add	x9, x9, #0xbd7
  211370:	tst	w0, #0x1
  211374:	csel	x0, x9, x8, ne  // ne = any
  211378:	ret

000000000021137c <help>:
  21137c:	stp	x29, x30, [sp, #-16]!
  211380:	adrp	x8, 231000 <_DYNAMIC+0xfa50>
  211384:	ldr	x1, [x8, #2144]
  211388:	adrp	x0, 200000 <parse_argv.options-0xd38>
  21138c:	add	x0, x0, #0xc31
  211390:	mov	x29, sp
  211394:	bl	211590 <printf@plt>
  211398:	ldp	x29, x30, [sp], #16
  21139c:	ret

00000000002113a0 <ALIGN_TO>:
  2113a0:	add	x8, x0, #0x7
  2113a4:	and	x0, x8, #0xfffffffffffffff8
  2113a8:	ret
  2113ac:	udf	#0

00000000002113b0 <__libc_csu_init>:
  2113b0:	stp	x29, x30, [sp, #-64]!
  2113b4:	mov	x29, sp
  2113b8:	stp	x19, x20, [sp, #16]
  2113bc:	adrp	x20, 221000 <printf@plt+0xfa70>
  2113c0:	add	x20, x20, #0x5b0
  2113c4:	stp	x21, x22, [sp, #32]
  2113c8:	adrp	x21, 221000 <printf@plt+0xfa70>
  2113cc:	add	x21, x21, #0x5a8
  2113d0:	sub	x20, x20, x21
  2113d4:	mov	w22, w0
  2113d8:	stp	x23, x24, [sp, #48]
  2113dc:	mov	x23, x1
  2113e0:	mov	x24, x2
  2113e4:	bl	211434 <_init>
  2113e8:	cmp	xzr, x20, asr #3
  2113ec:	b.eq	211418 <__libc_csu_init+0x68>  // b.none
  2113f0:	asr	x20, x20, #3
  2113f4:	mov	x19, #0x0                   	// #0
  2113f8:	ldr	x3, [x21, x19, lsl #3]
  2113fc:	mov	x2, x24
  211400:	add	x19, x19, #0x1
  211404:	mov	x1, x23
  211408:	mov	w0, w22
  21140c:	blr	x3
  211410:	cmp	x20, x19
  211414:	b.ne	2113f8 <__libc_csu_init+0x48>  // b.any
  211418:	ldp	x19, x20, [sp, #16]
  21141c:	ldp	x21, x22, [sp, #32]
  211420:	ldp	x23, x24, [sp, #48]
  211424:	ldp	x29, x30, [sp], #64
  211428:	ret
  21142c:	nop

0000000000211430 <__libc_csu_fini>:
  211430:	ret

Disassembly of section .init:

0000000000211434 <_init>:
  211434:	stp	x29, x30, [sp, #-16]!
  211438:	mov	x29, sp
  21143c:	bl	210f40 <call_weak_fn>
  211440:	ldp	x29, x30, [sp], #16
  211444:	ret

Disassembly of section .fini:

0000000000211448 <_fini>:
  211448:	stp	x29, x30, [sp, #-16]!
  21144c:	mov	x29, sp
  211450:	ldp	x29, x30, [sp], #16
  211454:	ret

Disassembly of section .plt:

0000000000211460 <__libc_start_main@plt-0x20>:
  211460:	stp	x16, x30, [sp, #-16]!
  211464:	adrp	x16, 221000 <printf@plt+0xfa70>
  211468:	ldr	x17, [x16, #1960]
  21146c:	add	x16, x16, #0x7a8
  211470:	br	x17
  211474:	nop
  211478:	nop
  21147c:	nop

0000000000211480 <__libc_start_main@plt>:
  211480:	adrp	x16, 221000 <printf@plt+0xfa70>
  211484:	ldr	x17, [x16, #1968]
  211488:	add	x16, x16, #0x7b0
  21148c:	br	x17

0000000000211490 <abort@plt>:
  211490:	adrp	x16, 221000 <printf@plt+0xfa70>
  211494:	ldr	x17, [x16, #1976]
  211498:	add	x16, x16, #0x7b8
  21149c:	br	x17

00000000002114a0 <__gmon_start__@plt>:
  2114a0:	adrp	x16, 221000 <printf@plt+0xfa70>
  2114a4:	ldr	x17, [x16, #1984]
  2114a8:	add	x16, x16, #0x7c0
  2114ac:	br	x17

00000000002114b0 <ask_password_agent_close@plt>:
  2114b0:	adrp	x16, 221000 <printf@plt+0xfa70>
  2114b4:	ldr	x17, [x16, #1992]
  2114b8:	add	x16, x16, #0x7c8
  2114bc:	br	x17

00000000002114c0 <polkit_agent_close@plt>:
  2114c0:	adrp	x16, 221000 <printf@plt+0xfa70>
  2114c4:	ldr	x17, [x16, #2000]
  2114c8:	add	x16, x16, #0x7d0
  2114cc:	br	x17

00000000002114d0 <pager_close@plt>:
  2114d0:	adrp	x16, 221000 <printf@plt+0xfa70>
  2114d4:	ldr	x17, [x16, #2008]
  2114d8:	add	x16, x16, #0x7d8
  2114dc:	br	x17

00000000002114e0 <mac_selinux_finish@plt>:
  2114e0:	adrp	x16, 221000 <printf@plt+0xfa70>
  2114e4:	ldr	x17, [x16, #2016]
  2114e8:	add	x16, x16, #0x7e0
  2114ec:	br	x17

00000000002114f0 <log_parse_environment_realm@plt>:
  2114f0:	adrp	x16, 221000 <printf@plt+0xfa70>
  2114f4:	ldr	x17, [x16, #2024]
  2114f8:	add	x16, x16, #0x7e8
  2114fc:	br	x17

0000000000211500 <log_open@plt>:
  211500:	adrp	x16, 221000 <printf@plt+0xfa70>
  211504:	ldr	x17, [x16, #2032]
  211508:	add	x16, x16, #0x7f0
  21150c:	br	x17

0000000000211510 <on_ac_power@plt>:
  211510:	adrp	x16, 221000 <printf@plt+0xfa70>
  211514:	ldr	x17, [x16, #2040]
  211518:	add	x16, x16, #0x7f8
  21151c:	br	x17

0000000000211520 <puts@plt>:
  211520:	adrp	x16, 221000 <printf@plt+0xfa70>
  211524:	ldr	x17, [x16, #2048]
  211528:	add	x16, x16, #0x800
  21152c:	br	x17

0000000000211530 <log_get_max_level_realm@plt>:
  211530:	adrp	x16, 221000 <printf@plt+0xfa70>
  211534:	ldr	x17, [x16, #2056]
  211538:	add	x16, x16, #0x808
  21153c:	br	x17

0000000000211540 <log_internal_realm@plt>:
  211540:	adrp	x16, 221000 <printf@plt+0xfa70>
  211544:	ldr	x17, [x16, #2064]
  211548:	add	x16, x16, #0x810
  21154c:	br	x17

0000000000211550 <getopt_long@plt>:
  211550:	adrp	x16, 221000 <printf@plt+0xfa70>
  211554:	ldr	x17, [x16, #2072]
  211558:	add	x16, x16, #0x818
  21155c:	br	x17

0000000000211560 <version@plt>:
  211560:	adrp	x16, 221000 <printf@plt+0xfa70>
  211564:	ldr	x17, [x16, #2080]
  211568:	add	x16, x16, #0x820
  21156c:	br	x17

0000000000211570 <log_assert_failed_realm@plt>:
  211570:	adrp	x16, 221000 <printf@plt+0xfa70>
  211574:	ldr	x17, [x16, #2088]
  211578:	add	x16, x16, #0x828
  21157c:	br	x17

0000000000211580 <log_assert_failed_unreachable_realm@plt>:
  211580:	adrp	x16, 221000 <printf@plt+0xfa70>
  211584:	ldr	x17, [x16, #2096]
  211588:	add	x16, x16, #0x830
  21158c:	br	x17

0000000000211590 <printf@plt>:
  211590:	adrp	x16, 221000 <printf@plt+0xfa70>
  211594:	ldr	x17, [x16, #2104]
  211598:	add	x16, x16, #0x838
  21159c:	br	x17
