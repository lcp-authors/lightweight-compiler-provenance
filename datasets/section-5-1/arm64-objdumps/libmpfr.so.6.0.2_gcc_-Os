
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libmpfr.so.6.0.2_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

000000000000ba40 <.init>:
    ba40:	stp	x29, x30, [sp, #-16]!
    ba44:	mov	x29, sp
    ba48:	bl	154c0 <mpfr_mpz_clear@@Base+0x6c>
    ba4c:	ldp	x29, x30, [sp], #16
    ba50:	ret

Disassembly of section .plt:

000000000000ba60 <mpfr_agm@plt-0x20>:
    ba60:	stp	x16, x30, [sp, #-16]!
    ba64:	adrp	x16, 73000 <__gmpfr_l2b@@Base+0x200>
    ba68:	ldr	x17, [x16, #4088]
    ba6c:	add	x16, x16, #0xff8
    ba70:	br	x17
    ba74:	nop
    ba78:	nop
    ba7c:	nop

000000000000ba80 <mpfr_agm@plt>:
    ba80:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    ba84:	ldr	x17, [x16]
    ba88:	add	x16, x16, #0x0
    ba8c:	br	x17

000000000000ba90 <memcpy@plt>:
    ba90:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    ba94:	ldr	x17, [x16, #8]
    ba98:	add	x16, x16, #0x8
    ba9c:	br	x17

000000000000baa0 <__gmpz_get_si@plt>:
    baa0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    baa4:	ldr	x17, [x16, #16]
    baa8:	add	x16, x16, #0x10
    baac:	br	x17

000000000000bab0 <__gmpz_tdiv_r_2exp@plt>:
    bab0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bab4:	ldr	x17, [x16, #24]
    bab8:	add	x16, x16, #0x18
    babc:	br	x17

000000000000bac0 <mpfr_set_ld@plt>:
    bac0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bac4:	ldr	x17, [x16, #32]
    bac8:	add	x16, x16, #0x20
    bacc:	br	x17

000000000000bad0 <mpfr_mul_ui@plt>:
    bad0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bad4:	ldr	x17, [x16, #40]
    bad8:	add	x16, x16, #0x28
    badc:	br	x17

000000000000bae0 <__gmpn_tdiv_qr@plt>:
    bae0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bae4:	ldr	x17, [x16, #48]
    bae8:	add	x16, x16, #0x30
    baec:	br	x17

000000000000baf0 <mpfr_cot@plt>:
    baf0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    baf4:	ldr	x17, [x16, #56]
    baf8:	add	x16, x16, #0x38
    bafc:	br	x17

000000000000bb00 <mpfr_set_si_2exp@plt>:
    bb00:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bb04:	ldr	x17, [x16, #64]
    bb08:	add	x16, x16, #0x40
    bb0c:	br	x17

000000000000bb10 <__gmpz_scan1@plt>:
    bb10:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bb14:	ldr	x17, [x16, #72]
    bb18:	add	x16, x16, #0x48
    bb1c:	br	x17

000000000000bb20 <mpfr_random_deviate_value@plt>:
    bb20:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bb24:	ldr	x17, [x16, #80]
    bb28:	add	x16, x16, #0x50
    bb2c:	br	x17

000000000000bb30 <strlen@plt>:
    bb30:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bb34:	ldr	x17, [x16, #88]
    bb38:	add	x16, x16, #0x58
    bb3c:	br	x17

000000000000bb40 <fputs@plt>:
    bb40:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bb44:	ldr	x17, [x16, #96]
    bb48:	add	x16, x16, #0x60
    bb4c:	br	x17

000000000000bb50 <__gmpz_tdiv_qr@plt>:
    bb50:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bb54:	ldr	x17, [x16, #104]
    bb58:	add	x16, x16, #0x68
    bb5c:	br	x17

000000000000bb60 <__gmpn_copyd@plt>:
    bb60:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bb64:	ldr	x17, [x16, #112]
    bb68:	add	x16, x16, #0x70
    bb6c:	br	x17

000000000000bb70 <mpfr_cosh@plt>:
    bb70:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bb74:	ldr	x17, [x16, #120]
    bb78:	add	x16, x16, #0x78
    bb7c:	br	x17

000000000000bb80 <mpfr_tanh@plt>:
    bb80:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bb84:	ldr	x17, [x16, #128]
    bb88:	add	x16, x16, #0x80
    bb8c:	br	x17

000000000000bb90 <mpfr_free_cache@plt>:
    bb90:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bb94:	ldr	x17, [x16, #136]
    bb98:	add	x16, x16, #0x88
    bb9c:	br	x17

000000000000bba0 <mpfr_ui_pow_ui@plt>:
    bba0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bba4:	ldr	x17, [x16, #144]
    bba8:	add	x16, x16, #0x90
    bbac:	br	x17

000000000000bbb0 <__gmpz_tdiv_q@plt>:
    bbb0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bbb4:	ldr	x17, [x16, #152]
    bbb8:	add	x16, x16, #0x98
    bbbc:	br	x17

000000000000bbc0 <__gmpfr_ceil_exp2@plt>:
    bbc0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bbc4:	ldr	x17, [x16, #160]
    bbc8:	add	x16, x16, #0xa0
    bbcc:	br	x17

000000000000bbd0 <mpfr_set_nan@plt>:
    bbd0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bbd4:	ldr	x17, [x16, #168]
    bbd8:	add	x16, x16, #0xa8
    bbdc:	br	x17

000000000000bbe0 <__gmpz_cdiv_q_2exp@plt>:
    bbe0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bbe4:	ldr	x17, [x16, #176]
    bbe8:	add	x16, x16, #0xb0
    bbec:	br	x17

000000000000bbf0 <mpfr_sub@plt>:
    bbf0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bbf4:	ldr	x17, [x16, #184]
    bbf8:	add	x16, x16, #0xb8
    bbfc:	br	x17

000000000000bc00 <__gmpn_set_str@plt>:
    bc00:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bc04:	ldr	x17, [x16, #192]
    bc08:	add	x16, x16, #0xc0
    bc0c:	br	x17

000000000000bc10 <mpfr_mul_2si@plt>:
    bc10:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bc14:	ldr	x17, [x16, #200]
    bc18:	add	x16, x16, #0xc8
    bc1c:	br	x17

000000000000bc20 <mpfr_gamma_one_and_two_third@plt>:
    bc20:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bc24:	ldr	x17, [x16, #208]
    bc28:	add	x16, x16, #0xd0
    bc2c:	br	x17

000000000000bc30 <mpfr_cmp_z@plt>:
    bc30:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bc34:	ldr	x17, [x16, #216]
    bc38:	add	x16, x16, #0xd8
    bc3c:	br	x17

000000000000bc40 <mpfr_fits_intmax_p@plt>:
    bc40:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bc44:	ldr	x17, [x16, #224]
    bc48:	add	x16, x16, #0xe0
    bc4c:	br	x17

000000000000bc50 <mpfr_init@plt>:
    bc50:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bc54:	ldr	x17, [x16, #232]
    bc58:	add	x16, x16, #0xe8
    bc5c:	br	x17

000000000000bc60 <mpfr_tan@plt>:
    bc60:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bc64:	ldr	x17, [x16, #240]
    bc68:	add	x16, x16, #0xf0
    bc6c:	br	x17

000000000000bc70 <mpfr_fdump@plt>:
    bc70:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bc74:	ldr	x17, [x16, #248]
    bc78:	add	x16, x16, #0xf8
    bc7c:	br	x17

000000000000bc80 <__gmpz_cmpabs_ui@plt>:
    bc80:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bc84:	ldr	x17, [x16, #256]
    bc88:	add	x16, x16, #0x100
    bc8c:	br	x17

000000000000bc90 <mpfr_strtofr@plt>:
    bc90:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bc94:	ldr	x17, [x16, #264]
    bc98:	add	x16, x16, #0x108
    bc9c:	br	x17

000000000000bca0 <mpfr_vasnprintf_aux@plt>:
    bca0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bca4:	ldr	x17, [x16, #272]
    bca8:	add	x16, x16, #0x110
    bcac:	br	x17

000000000000bcb0 <__gmpz_sub_ui@plt>:
    bcb0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bcb4:	ldr	x17, [x16, #280]
    bcb8:	add	x16, x16, #0x118
    bcbc:	br	x17

000000000000bcc0 <mpfr_ubf_zexp2exp@plt>:
    bcc0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bcc4:	ldr	x17, [x16, #288]
    bcc8:	add	x16, x16, #0x120
    bccc:	br	x17

000000000000bcd0 <__gmp_get_memory_functions@plt>:
    bcd0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bcd4:	ldr	x17, [x16, #296]
    bcd8:	add	x16, x16, #0x128
    bcdc:	br	x17

000000000000bce0 <__gmpz_sqrt@plt>:
    bce0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bce4:	ldr	x17, [x16, #304]
    bce8:	add	x16, x16, #0x130
    bcec:	br	x17

000000000000bcf0 <__gmpfr_int_ceil_log2@plt>:
    bcf0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bcf4:	ldr	x17, [x16, #312]
    bcf8:	add	x16, x16, #0x138
    bcfc:	br	x17

000000000000bd00 <mpfr_mulhigh_n@plt>:
    bd00:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bd04:	ldr	x17, [x16, #320]
    bd08:	add	x16, x16, #0x140
    bd0c:	br	x17

000000000000bd10 <mpfr_set_erangeflag@plt>:
    bd10:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bd14:	ldr	x17, [x16, #328]
    bd18:	add	x16, x16, #0x148
    bd1c:	br	x17

000000000000bd20 <mpfr_get_ui@plt>:
    bd20:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bd24:	ldr	x17, [x16, #336]
    bd28:	add	x16, x16, #0x150
    bd2c:	br	x17

000000000000bd30 <__gmpz_set_ui@plt>:
    bd30:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bd34:	ldr	x17, [x16, #344]
    bd38:	add	x16, x16, #0x158
    bd3c:	br	x17

000000000000bd40 <__gmpn_lshift@plt>:
    bd40:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bd44:	ldr	x17, [x16, #352]
    bd48:	add	x16, x16, #0x160
    bd4c:	br	x17

000000000000bd50 <__gmpfr_floor_log2@plt>:
    bd50:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bd54:	ldr	x17, [x16, #360]
    bd58:	add	x16, x16, #0x168
    bd5c:	br	x17

000000000000bd60 <__gmpn_rshift@plt>:
    bd60:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bd64:	ldr	x17, [x16, #368]
    bd68:	add	x16, x16, #0x170
    bd6c:	br	x17

000000000000bd70 <mpfr_cmp_d@plt>:
    bd70:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bd74:	ldr	x17, [x16, #376]
    bd78:	add	x16, x16, #0x178
    bd7c:	br	x17

000000000000bd80 <__cxa_finalize@plt>:
    bd80:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bd84:	ldr	x17, [x16, #384]
    bd88:	add	x16, x16, #0x180
    bd8c:	br	x17

000000000000bd90 <sprintf@plt>:
    bd90:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bd94:	ldr	x17, [x16, #392]
    bd98:	add	x16, x16, #0x188
    bd9c:	br	x17

000000000000bda0 <putc@plt>:
    bda0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bda4:	ldr	x17, [x16, #400]
    bda8:	add	x16, x16, #0x190
    bdac:	br	x17

000000000000bdb0 <mpfr_get_d@plt>:
    bdb0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bdb4:	ldr	x17, [x16, #408]
    bdb8:	add	x16, x16, #0x198
    bdbc:	br	x17

000000000000bdc0 <mpfr_set_f@plt>:
    bdc0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bdc4:	ldr	x17, [x16, #416]
    bdc8:	add	x16, x16, #0x1a0
    bdcc:	br	x17

000000000000bdd0 <mpfr_mul@plt>:
    bdd0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bdd4:	ldr	x17, [x16, #424]
    bdd8:	add	x16, x16, #0x1a8
    bddc:	br	x17

000000000000bde0 <mpfr_sub_z@plt>:
    bde0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bde4:	ldr	x17, [x16, #432]
    bde8:	add	x16, x16, #0x1b0
    bdec:	br	x17

000000000000bdf0 <mpfr_neg@plt>:
    bdf0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bdf4:	ldr	x17, [x16, #440]
    bdf8:	add	x16, x16, #0x1b8
    bdfc:	br	x17

000000000000be00 <mpfr_exp10@plt>:
    be00:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    be04:	ldr	x17, [x16, #448]
    be08:	add	x16, x16, #0x1c0
    be0c:	br	x17

000000000000be10 <mpfr_pow@plt>:
    be10:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    be14:	ldr	x17, [x16, #456]
    be18:	add	x16, x16, #0x1c8
    be1c:	br	x17

000000000000be20 <fputc@plt>:
    be20:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    be24:	ldr	x17, [x16, #464]
    be28:	add	x16, x16, #0x1d0
    be2c:	br	x17

000000000000be30 <mpfr_cmp2@plt>:
    be30:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    be34:	ldr	x17, [x16, #472]
    be38:	add	x16, x16, #0x1d8
    be3c:	br	x17

000000000000be40 <mpfr_tmp_allocate@plt>:
    be40:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    be44:	ldr	x17, [x16, #480]
    be48:	add	x16, x16, #0x1e0
    be4c:	br	x17

000000000000be50 <mpfr_nextbelow@plt>:
    be50:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    be54:	ldr	x17, [x16, #488]
    be58:	add	x16, x16, #0x1e8
    be5c:	br	x17

000000000000be60 <__gmpz_sub@plt>:
    be60:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    be64:	ldr	x17, [x16, #496]
    be68:	add	x16, x16, #0x1f0
    be6c:	br	x17

000000000000be70 <mpfr_random_deviate_clear@plt>:
    be70:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    be74:	ldr	x17, [x16, #504]
    be78:	add	x16, x16, #0x1f8
    be7c:	br	x17

000000000000be80 <mpfr_get_z@plt>:
    be80:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    be84:	ldr	x17, [x16, #512]
    be88:	add	x16, x16, #0x200
    be8c:	br	x17

000000000000be90 <__gmpn_com@plt>:
    be90:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    be94:	ldr	x17, [x16, #520]
    be98:	add	x16, x16, #0x208
    be9c:	br	x17

000000000000bea0 <mpfr_exp_3@plt>:
    bea0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bea4:	ldr	x17, [x16, #528]
    bea8:	add	x16, x16, #0x210
    beac:	br	x17

000000000000beb0 <__gmpz_fdiv_q@plt>:
    beb0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    beb4:	ldr	x17, [x16, #536]
    beb8:	add	x16, x16, #0x218
    bebc:	br	x17

000000000000bec0 <mpfr_set_d@plt>:
    bec0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bec4:	ldr	x17, [x16, #544]
    bec8:	add	x16, x16, #0x220
    becc:	br	x17

000000000000bed0 <mpfr_fits_ulong_p@plt>:
    bed0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bed4:	ldr	x17, [x16, #552]
    bed8:	add	x16, x16, #0x228
    bedc:	br	x17

000000000000bee0 <__gmpn_sub_n@plt>:
    bee0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bee4:	ldr	x17, [x16, #560]
    bee8:	add	x16, x16, #0x230
    beec:	br	x17

000000000000bef0 <mpfr_clear_cache@plt>:
    bef0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bef4:	ldr	x17, [x16, #568]
    bef8:	add	x16, x16, #0x238
    befc:	br	x17

000000000000bf00 <mpfr_div_ui2@plt>:
    bf00:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bf04:	ldr	x17, [x16, #576]
    bf08:	add	x16, x16, #0x240
    bf0c:	br	x17

000000000000bf10 <__gmpz_fits_slong_p@plt>:
    bf10:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bf14:	ldr	x17, [x16, #584]
    bf18:	add	x16, x16, #0x248
    bf1c:	br	x17

000000000000bf20 <localeconv@plt>:
    bf20:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bf24:	ldr	x17, [x16, #592]
    bf28:	add	x16, x16, #0x250
    bf2c:	br	x17

000000000000bf30 <__gmpz_cdiv_q_ui@plt>:
    bf30:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bf34:	ldr	x17, [x16, #600]
    bf38:	add	x16, x16, #0x258
    bf3c:	br	x17

000000000000bf40 <mpfr_frac@plt>:
    bf40:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bf44:	ldr	x17, [x16, #608]
    bf48:	add	x16, x16, #0x260
    bf4c:	br	x17

000000000000bf50 <mpfr_set_prec@plt>:
    bf50:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bf54:	ldr	x17, [x16, #616]
    bf58:	add	x16, x16, #0x268
    bf5c:	br	x17

000000000000bf60 <__gmpz_cmpabs@plt>:
    bf60:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bf64:	ldr	x17, [x16, #624]
    bf68:	add	x16, x16, #0x270
    bf6c:	br	x17

000000000000bf70 <mpfr_pow_z@plt>:
    bf70:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bf74:	ldr	x17, [x16, #632]
    bf78:	add	x16, x16, #0x278
    bf7c:	br	x17

000000000000bf80 <mpfr_powerof2_raw@plt>:
    bf80:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bf84:	ldr	x17, [x16, #640]
    bf88:	add	x16, x16, #0x280
    bf8c:	br	x17

000000000000bf90 <__gmpz_setbit@plt>:
    bf90:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bf94:	ldr	x17, [x16, #648]
    bf98:	add	x16, x16, #0x288
    bf9c:	br	x17

000000000000bfa0 <__gmpfr_isqrt@plt>:
    bfa0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bfa4:	ldr	x17, [x16, #656]
    bfa8:	add	x16, x16, #0x290
    bfac:	br	x17

000000000000bfb0 <mpfr_rint_trunc@plt>:
    bfb0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bfb4:	ldr	x17, [x16, #664]
    bfb8:	add	x16, x16, #0x298
    bfbc:	br	x17

000000000000bfc0 <mpfr_overflow@plt>:
    bfc0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bfc4:	ldr	x17, [x16, #672]
    bfc8:	add	x16, x16, #0x2a0
    bfcc:	br	x17

000000000000bfd0 <mpfr_cmp_ui_2exp@plt>:
    bfd0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bfd4:	ldr	x17, [x16, #680]
    bfd8:	add	x16, x16, #0x2a8
    bfdc:	br	x17

000000000000bfe0 <__gmpz_divexact@plt>:
    bfe0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bfe4:	ldr	x17, [x16, #688]
    bfe8:	add	x16, x16, #0x2b0
    bfec:	br	x17

000000000000bff0 <mpfr_pow_ui@plt>:
    bff0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    bff4:	ldr	x17, [x16, #696]
    bff8:	add	x16, x16, #0x2b8
    bffc:	br	x17

000000000000c000 <mpfr_ubf_mul_exact@plt>:
    c000:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c004:	ldr	x17, [x16, #704]
    c008:	add	x16, x16, #0x2c0
    c00c:	br	x17

000000000000c010 <mpfr_mpz_init@plt>:
    c010:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c014:	ldr	x17, [x16, #712]
    c018:	add	x16, x16, #0x2c8
    c01c:	br	x17

000000000000c020 <__gmpz_set@plt>:
    c020:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c024:	ldr	x17, [x16, #720]
    c028:	add	x16, x16, #0x2d0
    c02c:	br	x17

000000000000c030 <mpfr_bernoulli_freecache@plt>:
    c030:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c034:	ldr	x17, [x16, #728]
    c038:	add	x16, x16, #0x2d8
    c03c:	br	x17

000000000000c040 <__gmpz_fac_ui@plt>:
    c040:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c044:	ldr	x17, [x16, #736]
    c048:	add	x16, x16, #0x2e0
    c04c:	br	x17

000000000000c050 <__gmpfr_vasprintf@plt>:
    c050:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c054:	ldr	x17, [x16, #744]
    c058:	add	x16, x16, #0x2e8
    c05c:	br	x17

000000000000c060 <__gmpz_tstbit@plt>:
    c060:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c064:	ldr	x17, [x16, #752]
    c068:	add	x16, x16, #0x2f0
    c06c:	br	x17

000000000000c070 <__gmpz_mul@plt>:
    c070:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c074:	ldr	x17, [x16, #760]
    c078:	add	x16, x16, #0x2f8
    c07c:	br	x17

000000000000c080 <__gmpfr_set_uj_2exp@plt>:
    c080:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c084:	ldr	x17, [x16, #768]
    c088:	add	x16, x16, #0x300
    c08c:	br	x17

000000000000c090 <mpfr_fits_uintmax_p@plt>:
    c090:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c094:	ldr	x17, [x16, #776]
    c098:	add	x16, x16, #0x308
    c09c:	br	x17

000000000000c0a0 <mpfr_sincos_fast@plt>:
    c0a0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c0a4:	ldr	x17, [x16, #784]
    c0a8:	add	x16, x16, #0x310
    c0ac:	br	x17

000000000000c0b0 <mpfr_z_sub@plt>:
    c0b0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c0b4:	ldr	x17, [x16, #792]
    c0b8:	add	x16, x16, #0x318
    c0bc:	br	x17

000000000000c0c0 <__gmpz_tdiv_q_ui@plt>:
    c0c0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c0c4:	ldr	x17, [x16, #800]
    c0c8:	add	x16, x16, #0x320
    c0cc:	br	x17

000000000000c0d0 <__gmp_vasprintf@plt>:
    c0d0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c0d4:	ldr	x17, [x16, #808]
    c0d8:	add	x16, x16, #0x328
    c0dc:	br	x17

000000000000c0e0 <mpfr_sub_si@plt>:
    c0e0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c0e4:	ldr	x17, [x16, #816]
    c0e8:	add	x16, x16, #0x330
    c0ec:	br	x17

000000000000c0f0 <mpfr_clear@plt>:
    c0f0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c0f4:	ldr	x17, [x16, #824]
    c0f8:	add	x16, x16, #0x338
    c0fc:	br	x17

000000000000c100 <__gmpfr_set_sj@plt>:
    c100:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c104:	ldr	x17, [x16, #832]
    c108:	add	x16, x16, #0x340
    c10c:	br	x17

000000000000c110 <mpfr_log@plt>:
    c110:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c114:	ldr	x17, [x16, #840]
    c118:	add	x16, x16, #0x348
    c11c:	br	x17

000000000000c120 <mpfr_lgamma@plt>:
    c120:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c124:	ldr	x17, [x16, #848]
    c128:	add	x16, x16, #0x350
    c12c:	br	x17

000000000000c130 <__gmpfr_cuberoot@plt>:
    c130:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c134:	ldr	x17, [x16, #856]
    c138:	add	x16, x16, #0x358
    c13c:	br	x17

000000000000c140 <__gmp_asprintf@plt>:
    c140:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c144:	ldr	x17, [x16, #864]
    c148:	add	x16, x16, #0x360
    c14c:	br	x17

000000000000c150 <mpfr_setmax@plt>:
    c150:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c154:	ldr	x17, [x16, #872]
    c158:	add	x16, x16, #0x368
    c15c:	br	x17

000000000000c160 <__gmpz_swap@plt>:
    c160:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c164:	ldr	x17, [x16, #880]
    c168:	add	x16, x16, #0x370
    c16c:	br	x17

000000000000c170 <mpfr_sub1sp@plt>:
    c170:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c174:	ldr	x17, [x16, #888]
    c178:	add	x16, x16, #0x378
    c17c:	br	x17

000000000000c180 <strcat@plt>:
    c180:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c184:	ldr	x17, [x16, #896]
    c188:	add	x16, x16, #0x380
    c18c:	br	x17

000000000000c190 <__gmpz_mul_ui@plt>:
    c190:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c194:	ldr	x17, [x16, #904]
    c198:	add	x16, x16, #0x388
    c19c:	br	x17

000000000000c1a0 <memset@plt>:
    c1a0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c1a4:	ldr	x17, [x16, #912]
    c1a8:	add	x16, x16, #0x390
    c1ac:	br	x17

000000000000c1b0 <mpfr_nextabove@plt>:
    c1b0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c1b4:	ldr	x17, [x16, #920]
    c1b8:	add	x16, x16, #0x398
    c1bc:	br	x17

000000000000c1c0 <__gmpz_fdiv_q_2exp@plt>:
    c1c0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c1c4:	ldr	x17, [x16, #928]
    c1c8:	add	x16, x16, #0x3a0
    c1cc:	br	x17

000000000000c1d0 <mpfr_divhigh_n@plt>:
    c1d0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c1d4:	ldr	x17, [x16, #936]
    c1d8:	add	x16, x16, #0x3a8
    c1dc:	br	x17

000000000000c1e0 <mpfr_random_deviate_init@plt>:
    c1e0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c1e4:	ldr	x17, [x16, #944]
    c1e8:	add	x16, x16, #0x3b0
    c1ec:	br	x17

000000000000c1f0 <mpfr_integer_p@plt>:
    c1f0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c1f4:	ldr	x17, [x16, #952]
    c1f8:	add	x16, x16, #0x3b8
    c1fc:	br	x17

000000000000c200 <mpfr_mpz_clear@plt>:
    c200:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c204:	ldr	x17, [x16, #960]
    c208:	add	x16, x16, #0x3c0
    c20c:	br	x17

000000000000c210 <__gmpf_set_ui@plt>:
    c210:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c214:	ldr	x17, [x16, #968]
    c218:	add	x16, x16, #0x3c8
    c21c:	br	x17

000000000000c220 <mpfr_get_si@plt>:
    c220:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c224:	ldr	x17, [x16, #976]
    c228:	add	x16, x16, #0x3d0
    c22c:	br	x17

000000000000c230 <mpfr_add@plt>:
    c230:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c234:	ldr	x17, [x16, #984]
    c238:	add	x16, x16, #0x3d8
    c23c:	br	x17

000000000000c240 <mpfr_clears@plt>:
    c240:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c244:	ldr	x17, [x16, #992]
    c248:	add	x16, x16, #0x3e0
    c24c:	br	x17

000000000000c250 <mpfr_reallocate_func@plt>:
    c250:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c254:	ldr	x17, [x16, #1000]
    c258:	add	x16, x16, #0x3e8
    c25c:	br	x17

000000000000c260 <mpfr_log2@plt>:
    c260:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c264:	ldr	x17, [x16, #1008]
    c268:	add	x16, x16, #0x3f0
    c26c:	br	x17

000000000000c270 <mpfr_erf@plt>:
    c270:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c274:	ldr	x17, [x16, #1016]
    c278:	add	x16, x16, #0x3f8
    c27c:	br	x17

000000000000c280 <mpfr_set@plt>:
    c280:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c284:	ldr	x17, [x16, #1024]
    c288:	add	x16, x16, #0x400
    c28c:	br	x17

000000000000c290 <__gmpz_mul_2exp@plt>:
    c290:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c294:	ldr	x17, [x16, #1032]
    c298:	add	x16, x16, #0x408
    c29c:	br	x17

000000000000c2a0 <mpfr_floor@plt>:
    c2a0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c2a4:	ldr	x17, [x16, #1040]
    c2a8:	add	x16, x16, #0x410
    c2ac:	br	x17

000000000000c2b0 <mpfr_round@plt>:
    c2b0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c2b4:	ldr	x17, [x16, #1048]
    c2b8:	add	x16, x16, #0x418
    c2bc:	br	x17

000000000000c2c0 <mpfr_free_pool@plt>:
    c2c0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c2c4:	ldr	x17, [x16, #1056]
    c2c8:	add	x16, x16, #0x420
    c2cc:	br	x17

000000000000c2d0 <mpfr_set_z@plt>:
    c2d0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c2d4:	ldr	x17, [x16, #1064]
    c2d8:	add	x16, x16, #0x428
    c2dc:	br	x17

000000000000c2e0 <mpfr_fma@plt>:
    c2e0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c2e4:	ldr	x17, [x16, #1072]
    c2e8:	add	x16, x16, #0x430
    c2ec:	br	x17

000000000000c2f0 <mpfr_add_ui@plt>:
    c2f0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c2f4:	ldr	x17, [x16, #1080]
    c2f8:	add	x16, x16, #0x438
    c2fc:	br	x17

000000000000c300 <mpfr_clear_flags@plt>:
    c300:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c304:	ldr	x17, [x16, #1088]
    c308:	add	x16, x16, #0x440
    c30c:	br	x17

000000000000c310 <mpfr_roundeven@plt>:
    c310:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c314:	ldr	x17, [x16, #1096]
    c318:	add	x16, x16, #0x448
    c31c:	br	x17

000000000000c320 <__gmpz_addmul@plt>:
    c320:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c324:	ldr	x17, [x16, #1104]
    c328:	add	x16, x16, #0x450
    c32c:	br	x17

000000000000c330 <getc@plt>:
    c330:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c334:	ldr	x17, [x16, #1112]
    c338:	add	x16, x16, #0x458
    c33c:	br	x17

000000000000c340 <mpfr_setmin@plt>:
    c340:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c344:	ldr	x17, [x16, #1120]
    c348:	add	x16, x16, #0x460
    c34c:	br	x17

000000000000c350 <mpfr_mul_2ui@plt>:
    c350:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c354:	ldr	x17, [x16, #1128]
    c358:	add	x16, x16, #0x468
    c35c:	br	x17

000000000000c360 <__gmp_urandomm_ui@plt>:
    c360:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c364:	ldr	x17, [x16, #1136]
    c368:	add	x16, x16, #0x470
    c36c:	br	x17

000000000000c370 <__gmpz_root@plt>:
    c370:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c374:	ldr	x17, [x16, #1144]
    c378:	add	x16, x16, #0x478
    c37c:	br	x17

000000000000c380 <mpfr_ui_div@plt>:
    c380:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c384:	ldr	x17, [x16, #1152]
    c388:	add	x16, x16, #0x480
    c38c:	br	x17

000000000000c390 <mpfr_rint@plt>:
    c390:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c394:	ldr	x17, [x16, #1160]
    c398:	add	x16, x16, #0x488
    c39c:	br	x17

000000000000c3a0 <mpfr_random_deviate_tstbit@plt>:
    c3a0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c3a4:	ldr	x17, [x16, #1168]
    c3a8:	add	x16, x16, #0x490
    c3ac:	br	x17

000000000000c3b0 <mpfr_sinh@plt>:
    c3b0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c3b4:	ldr	x17, [x16, #1176]
    c3b8:	add	x16, x16, #0x498
    c3bc:	br	x17

000000000000c3c0 <__gmpz_pow_ui@plt>:
    c3c0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c3c4:	ldr	x17, [x16, #1184]
    c3c8:	add	x16, x16, #0x4a0
    c3cc:	br	x17

000000000000c3d0 <mpfr_set_str_binary@plt>:
    c3d0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c3d4:	ldr	x17, [x16, #1192]
    c3d8:	add	x16, x16, #0x4a8
    c3dc:	br	x17

000000000000c3e0 <mpfr_can_round_raw@plt>:
    c3e0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c3e4:	ldr	x17, [x16, #1200]
    c3e8:	add	x16, x16, #0x4b0
    c3ec:	br	x17

000000000000c3f0 <__gmpz_add_ui@plt>:
    c3f0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c3f4:	ldr	x17, [x16, #1208]
    c3f8:	add	x16, x16, #0x4b8
    c3fc:	br	x17

000000000000c400 <mpfr_round_p@plt>:
    c400:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c404:	ldr	x17, [x16, #1216]
    c408:	add	x16, x16, #0x4c0
    c40c:	br	x17

000000000000c410 <mpfr_cache@plt>:
    c410:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c414:	ldr	x17, [x16, #1224]
    c418:	add	x16, x16, #0x4c8
    c41c:	br	x17

000000000000c420 <__gmon_start__@plt>:
    c420:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c424:	ldr	x17, [x16, #1232]
    c428:	add	x16, x16, #0x4d0
    c42c:	br	x17

000000000000c430 <mpfr_add_d@plt>:
    c430:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c434:	ldr	x17, [x16, #1240]
    c438:	add	x16, x16, #0x4d8
    c43c:	br	x17

000000000000c440 <__gmpn_sqr@plt>:
    c440:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c444:	ldr	x17, [x16, #1248]
    c448:	add	x16, x16, #0x4e0
    c44c:	br	x17

000000000000c450 <mpfr_underflow@plt>:
    c450:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c454:	ldr	x17, [x16, #1256]
    c458:	add	x16, x16, #0x4e8
    c45c:	br	x17

000000000000c460 <mpfr_cmp_si_2exp@plt>:
    c460:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c464:	ldr	x17, [x16, #1264]
    c468:	add	x16, x16, #0x4f0
    c46c:	br	x17

000000000000c470 <abort@plt>:
    c470:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c474:	ldr	x17, [x16, #1272]
    c478:	add	x16, x16, #0x4f8
    c47c:	br	x17

000000000000c480 <mpfr_trunc@plt>:
    c480:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c484:	ldr	x17, [x16, #1280]
    c488:	add	x16, x16, #0x500
    c48c:	br	x17

000000000000c490 <mpfr_sqr@plt>:
    c490:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c494:	ldr	x17, [x16, #1288]
    c498:	add	x16, x16, #0x508
    c49c:	br	x17

000000000000c4a0 <mpfr_tmp_free@plt>:
    c4a0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c4a4:	ldr	x17, [x16, #1296]
    c4a8:	add	x16, x16, #0x510
    c4ac:	br	x17

000000000000c4b0 <mpfr_div_2si@plt>:
    c4b0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c4b4:	ldr	x17, [x16, #1304]
    c4b8:	add	x16, x16, #0x518
    c4bc:	br	x17

000000000000c4c0 <mpfr_cos@plt>:
    c4c0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c4c4:	ldr	x17, [x16, #1312]
    c4c8:	add	x16, x16, #0x520
    c4cc:	br	x17

000000000000c4d0 <__gmpz_realloc2@plt>:
    c4d0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c4d4:	ldr	x17, [x16, #1320]
    c4d8:	add	x16, x16, #0x528
    c4dc:	br	x17

000000000000c4e0 <mpfr_sin@plt>:
    c4e0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c4e4:	ldr	x17, [x16, #1328]
    c4e8:	add	x16, x16, #0x530
    c4ec:	br	x17

000000000000c4f0 <mpfr_nexttozero@plt>:
    c4f0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c4f4:	ldr	x17, [x16, #1336]
    c4f8:	add	x16, x16, #0x538
    c4fc:	br	x17

000000000000c500 <__gmpn_mul_n@plt>:
    c500:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c504:	ldr	x17, [x16, #1344]
    c508:	add	x16, x16, #0x540
    c50c:	br	x17

000000000000c510 <mpfr_add_z@plt>:
    c510:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c514:	ldr	x17, [x16, #1352]
    c518:	add	x16, x16, #0x548
    c51c:	br	x17

000000000000c520 <mpfr_sqrhigh_n@plt>:
    c520:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c524:	ldr	x17, [x16, #1360]
    c528:	add	x16, x16, #0x550
    c52c:	br	x17

000000000000c530 <mpfr_swap@plt>:
    c530:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c534:	ldr	x17, [x16, #1368]
    c538:	add	x16, x16, #0x558
    c53c:	br	x17

000000000000c540 <__gmpz_scan0@plt>:
    c540:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c544:	ldr	x17, [x16, #1376]
    c548:	add	x16, x16, #0x560
    c54c:	br	x17

000000000000c550 <__gmpn_submul_1@plt>:
    c550:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c554:	ldr	x17, [x16, #1384]
    c558:	add	x16, x16, #0x568
    c55c:	br	x17

000000000000c560 <mpfr_mul_z@plt>:
    c560:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c564:	ldr	x17, [x16, #1392]
    c568:	add	x16, x16, #0x570
    c56c:	br	x17

000000000000c570 <__gmpz_ui_pow_ui@plt>:
    c570:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c574:	ldr	x17, [x16, #1400]
    c578:	add	x16, x16, #0x578
    c57c:	br	x17

000000000000c580 <mpfr_set_z_2exp@plt>:
    c580:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c584:	ldr	x17, [x16, #1408]
    c588:	add	x16, x16, #0x580
    c58c:	br	x17

000000000000c590 <mpfr_get_str@plt>:
    c590:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c594:	ldr	x17, [x16, #1416]
    c598:	add	x16, x16, #0x588
    c59c:	br	x17

000000000000c5a0 <mpfr_remquo@plt>:
    c5a0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c5a4:	ldr	x17, [x16, #1424]
    c5a8:	add	x16, x16, #0x590
    c5ac:	br	x17

000000000000c5b0 <__gmpn_copyi@plt>:
    c5b0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c5b4:	ldr	x17, [x16, #1432]
    c5b8:	add	x16, x16, #0x598
    c5bc:	br	x17

000000000000c5c0 <mpfr_sub_ui@plt>:
    c5c0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c5c4:	ldr	x17, [x16, #1440]
    c5c8:	add	x16, x16, #0x5a0
    c5cc:	br	x17

000000000000c5d0 <mpfr_round_near_x@plt>:
    c5d0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c5d4:	ldr	x17, [x16, #1448]
    c5d8:	add	x16, x16, #0x5a8
    c5dc:	br	x17

000000000000c5e0 <__gmp_fprintf@plt>:
    c5e0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c5e4:	ldr	x17, [x16, #1456]
    c5e8:	add	x16, x16, #0x5b0
    c5ec:	br	x17

000000000000c5f0 <__gmpq_set_ui@plt>:
    c5f0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c5f4:	ldr	x17, [x16, #1464]
    c5f8:	add	x16, x16, #0x5b8
    c5fc:	br	x17

000000000000c600 <__gmpz_divexact_ui@plt>:
    c600:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c604:	ldr	x17, [x16, #1472]
    c608:	add	x16, x16, #0x5c0
    c60c:	br	x17

000000000000c610 <mpfr_get_ld@plt>:
    c610:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c614:	ldr	x17, [x16, #1480]
    c618:	add	x16, x16, #0x5c8
    c61c:	br	x17

000000000000c620 <mpfr_random_deviate_swap@plt>:
    c620:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c624:	ldr	x17, [x16, #1488]
    c628:	add	x16, x16, #0x5d0
    c62c:	br	x17

000000000000c630 <__gmpn_add_n@plt>:
    c630:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c634:	ldr	x17, [x16, #1496]
    c638:	add	x16, x16, #0x5d8
    c63c:	br	x17

000000000000c640 <mpfr_set_inf@plt>:
    c640:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c644:	ldr	x17, [x16, #1504]
    c648:	add	x16, x16, #0x5e0
    c64c:	br	x17

000000000000c650 <mpfr_yn@plt>:
    c650:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c654:	ldr	x17, [x16, #1512]
    c658:	add	x16, x16, #0x5e8
    c65c:	br	x17

000000000000c660 <mpfr_si_sub@plt>:
    c660:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c664:	ldr	x17, [x16, #1520]
    c668:	add	x16, x16, #0x5f0
    c66c:	br	x17

000000000000c670 <__gmpn_get_str@plt>:
    c670:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c674:	ldr	x17, [x16, #1528]
    c678:	add	x16, x16, #0x5f8
    c67c:	br	x17

000000000000c680 <mpfr_set_ui_2exp@plt>:
    c680:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c684:	ldr	x17, [x16, #1536]
    c688:	add	x16, x16, #0x600
    c68c:	br	x17

000000000000c690 <mpfr_lngamma@plt>:
    c690:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c694:	ldr	x17, [x16, #1544]
    c698:	add	x16, x16, #0x608
    c69c:	br	x17

000000000000c6a0 <__gmpz_fdiv_q_ui@plt>:
    c6a0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c6a4:	ldr	x17, [x16, #1552]
    c6a8:	add	x16, x16, #0x610
    c6ac:	br	x17

000000000000c6b0 <mpfr_div@plt>:
    c6b0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c6b4:	ldr	x17, [x16, #1560]
    c6b8:	add	x16, x16, #0x618
    c6bc:	br	x17

000000000000c6c0 <__ctype_b_loc@plt>:
    c6c0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c6c4:	ldr	x17, [x16, #1568]
    c6c8:	add	x16, x16, #0x620
    c6cc:	br	x17

000000000000c6d0 <__gmpz_clear@plt>:
    c6d0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c6d4:	ldr	x17, [x16, #1576]
    c6d8:	add	x16, x16, #0x628
    c6dc:	br	x17

000000000000c6e0 <strtol@plt>:
    c6e0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c6e4:	ldr	x17, [x16, #1584]
    c6e8:	add	x16, x16, #0x630
    c6ec:	br	x17

000000000000c6f0 <fread@plt>:
    c6f0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c6f4:	ldr	x17, [x16, #1592]
    c6f8:	add	x16, x16, #0x638
    c6fc:	br	x17

000000000000c700 <mpfr_nexttoinf@plt>:
    c700:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c704:	ldr	x17, [x16, #1600]
    c708:	add	x16, x16, #0x640
    c70c:	br	x17

000000000000c710 <__gmpz_mul_si@plt>:
    c710:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c714:	ldr	x17, [x16, #1608]
    c718:	add	x16, x16, #0x648
    c71c:	br	x17

000000000000c720 <mpfr_atan@plt>:
    c720:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c724:	ldr	x17, [x16, #1616]
    c728:	add	x16, x16, #0x650
    c72c:	br	x17

000000000000c730 <mpfr_set4@plt>:
    c730:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c734:	ldr	x17, [x16, #1624]
    c738:	add	x16, x16, #0x658
    c73c:	br	x17

000000000000c740 <mpfr_rootn_ui@plt>:
    c740:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c744:	ldr	x17, [x16, #1632]
    c748:	add	x16, x16, #0x660
    c74c:	br	x17

000000000000c750 <mpfr_set_str@plt>:
    c750:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c754:	ldr	x17, [x16, #1640]
    c758:	add	x16, x16, #0x668
    c75c:	br	x17

000000000000c760 <__gmpf_neg@plt>:
    c760:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c764:	ldr	x17, [x16, #1648]
    c768:	add	x16, x16, #0x670
    c76c:	br	x17

000000000000c770 <mpfr_fac_ui@plt>:
    c770:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c774:	ldr	x17, [x16, #1656]
    c778:	add	x16, x16, #0x678
    c77c:	br	x17

000000000000c780 <mpfr_pow_general@plt>:
    c780:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c784:	ldr	x17, [x16, #1664]
    c788:	add	x16, x16, #0x680
    c78c:	br	x17

000000000000c790 <mpfr_log1p@plt>:
    c790:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c794:	ldr	x17, [x16, #1672]
    c798:	add	x16, x16, #0x688
    c79c:	br	x17

000000000000c7a0 <mpfr_sgn@plt>:
    c7a0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c7a4:	ldr	x17, [x16, #1680]
    c7a8:	add	x16, x16, #0x690
    c7ac:	br	x17

000000000000c7b0 <mpfr_round_raw_4@plt>:
    c7b0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c7b4:	ldr	x17, [x16, #1688]
    c7b8:	add	x16, x16, #0x698
    c7bc:	br	x17

000000000000c7c0 <ungetc@plt>:
    c7c0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c7c4:	ldr	x17, [x16, #1696]
    c7c8:	add	x16, x16, #0x6a0
    c7cc:	br	x17

000000000000c7d0 <__gmpz_tdiv_q_2exp@plt>:
    c7d0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c7d4:	ldr	x17, [x16, #1704]
    c7d8:	add	x16, x16, #0x6a8
    c7dc:	br	x17

000000000000c7e0 <mpfr_exp@plt>:
    c7e0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c7e4:	ldr	x17, [x16, #1712]
    c7e8:	add	x16, x16, #0x6b0
    c7ec:	br	x17

000000000000c7f0 <mpfr_round_raw_2@plt>:
    c7f0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c7f4:	ldr	x17, [x16, #1720]
    c7f8:	add	x16, x16, #0x6b8
    c7fc:	br	x17

000000000000c800 <__gmpz_cdiv_q@plt>:
    c800:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c804:	ldr	x17, [x16, #1728]
    c808:	add	x16, x16, #0x6c0
    c80c:	br	x17

000000000000c810 <mpfr_add1@plt>:
    c810:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c814:	ldr	x17, [x16, #1736]
    c818:	add	x16, x16, #0x6c8
    c81c:	br	x17

000000000000c820 <mpfr_fits_slong_p@plt>:
    c820:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c824:	ldr	x17, [x16, #1744]
    c828:	add	x16, x16, #0x6d0
    c82c:	br	x17

000000000000c830 <__gmpn_mul@plt>:
    c830:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c834:	ldr	x17, [x16, #1752]
    c838:	add	x16, x16, #0x6d8
    c83c:	br	x17

000000000000c840 <mpfr_gamma@plt>:
    c840:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c844:	ldr	x17, [x16, #1760]
    c848:	add	x16, x16, #0x6e0
    c84c:	br	x17

000000000000c850 <__gmpn_divrem_1@plt>:
    c850:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c854:	ldr	x17, [x16, #1768]
    c858:	add	x16, x16, #0x6e8
    c85c:	br	x17

000000000000c860 <mpfr_powerof2_raw2@plt>:
    c860:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c864:	ldr	x17, [x16, #1776]
    c868:	add	x16, x16, #0x6f0
    c86c:	br	x17

000000000000c870 <mpfr_random_deviate_reset@plt>:
    c870:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c874:	ldr	x17, [x16, #1784]
    c878:	add	x16, x16, #0x6f8
    c87c:	br	x17

000000000000c880 <mpfr_add_si@plt>:
    c880:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c884:	ldr	x17, [x16, #1792]
    c888:	add	x16, x16, #0x700
    c88c:	br	x17

000000000000c890 <__gmpz_cmp_si@plt>:
    c890:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c894:	ldr	x17, [x16, #1800]
    c898:	add	x16, x16, #0x708
    c89c:	br	x17

000000000000c8a0 <mpfr_rand_raw@plt>:
    c8a0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c8a4:	ldr	x17, [x16, #1808]
    c8a8:	add	x16, x16, #0x710
    c8ac:	br	x17

000000000000c8b0 <mpfr_div_si@plt>:
    c8b0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c8b4:	ldr	x17, [x16, #1816]
    c8b8:	add	x16, x16, #0x718
    c8bc:	br	x17

000000000000c8c0 <mpfr_bernoulli_cache@plt>:
    c8c0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c8c4:	ldr	x17, [x16, #1824]
    c8c8:	add	x16, x16, #0x720
    c8cc:	br	x17

000000000000c8d0 <mpfr_sqrt_ui@plt>:
    c8d0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c8d4:	ldr	x17, [x16, #1832]
    c8d8:	add	x16, x16, #0x728
    c8dc:	br	x17

000000000000c8e0 <mpfr_set_q@plt>:
    c8e0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c8e4:	ldr	x17, [x16, #1840]
    c8e8:	add	x16, x16, #0x730
    c8ec:	br	x17

000000000000c8f0 <__gmpn_popcount@plt>:
    c8f0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c8f4:	ldr	x17, [x16, #1848]
    c8f8:	add	x16, x16, #0x738
    c8fc:	br	x17

000000000000c900 <mpfr_exp_2@plt>:
    c900:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c904:	ldr	x17, [x16, #1856]
    c908:	add	x16, x16, #0x740
    c90c:	br	x17

000000000000c910 <__gmpz_submul@plt>:
    c910:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c914:	ldr	x17, [x16, #1864]
    c918:	add	x16, x16, #0x748
    c91c:	br	x17

000000000000c920 <mpfr_free_str@plt>:
    c920:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c924:	ldr	x17, [x16, #1872]
    c928:	add	x16, x16, #0x750
    c92c:	br	x17

000000000000c930 <__gmpz_mod@plt>:
    c930:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c934:	ldr	x17, [x16, #1880]
    c938:	add	x16, x16, #0x758
    c93c:	br	x17

000000000000c940 <mpfr_si_div@plt>:
    c940:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c944:	ldr	x17, [x16, #1888]
    c948:	add	x16, x16, #0x760
    c94c:	br	x17

000000000000c950 <fwrite@plt>:
    c950:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c954:	ldr	x17, [x16, #1896]
    c958:	add	x16, x16, #0x768
    c95c:	br	x17

000000000000c960 <__gmpz_cmp@plt>:
    c960:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c964:	ldr	x17, [x16, #1904]
    c968:	add	x16, x16, #0x770
    c96c:	br	x17

000000000000c970 <mpfr_abort_prec_max@plt>:
    c970:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c974:	ldr	x17, [x16, #1912]
    c978:	add	x16, x16, #0x778
    c97c:	br	x17

000000000000c980 <mpfr_div_2ui@plt>:
    c980:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c984:	ldr	x17, [x16, #1920]
    c988:	add	x16, x16, #0x780
    c98c:	br	x17

000000000000c990 <mpfr_mpz_init2@plt>:
    c990:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c994:	ldr	x17, [x16, #1928]
    c998:	add	x16, x16, #0x788
    c99c:	br	x17

000000000000c9a0 <strcpy@plt>:
    c9a0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c9a4:	ldr	x17, [x16, #1936]
    c9a8:	add	x16, x16, #0x790
    c9ac:	br	x17

000000000000c9b0 <__gmpfr_set_sj_2exp@plt>:
    c9b0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c9b4:	ldr	x17, [x16, #1944]
    c9b8:	add	x16, x16, #0x798
    c9bc:	br	x17

000000000000c9c0 <mpfr_sqrt@plt>:
    c9c0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c9c4:	ldr	x17, [x16, #1952]
    c9c8:	add	x16, x16, #0x7a0
    c9cc:	br	x17

000000000000c9d0 <strncat@plt>:
    c9d0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c9d4:	ldr	x17, [x16, #1960]
    c9d8:	add	x16, x16, #0x7a8
    c9dc:	br	x17

000000000000c9e0 <__gmpfr_ceil_log2@plt>:
    c9e0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c9e4:	ldr	x17, [x16, #1968]
    c9e8:	add	x16, x16, #0x7b0
    c9ec:	br	x17

000000000000c9f0 <mpfr_mul_si@plt>:
    c9f0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    c9f4:	ldr	x17, [x16, #1976]
    c9f8:	add	x16, x16, #0x7b8
    c9fc:	br	x17

000000000000ca00 <mpfr_prec_round@plt>:
    ca00:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    ca04:	ldr	x17, [x16, #1984]
    ca08:	add	x16, x16, #0x7c0
    ca0c:	br	x17

000000000000ca10 <mpfr_ceil@plt>:
    ca10:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    ca14:	ldr	x17, [x16, #1992]
    ca18:	add	x16, x16, #0x7c8
    ca1c:	br	x17

000000000000ca20 <mpfr_min_prec@plt>:
    ca20:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    ca24:	ldr	x17, [x16, #2000]
    ca28:	add	x16, x16, #0x7d0
    ca2c:	br	x17

000000000000ca30 <mpfr_cmp3@plt>:
    ca30:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    ca34:	ldr	x17, [x16, #2008]
    ca38:	add	x16, x16, #0x7d8
    ca3c:	br	x17

000000000000ca40 <mpfr_cmpabs@plt>:
    ca40:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    ca44:	ldr	x17, [x16, #2016]
    ca48:	add	x16, x16, #0x7e0
    ca4c:	br	x17

000000000000ca50 <__gmpz_add@plt>:
    ca50:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    ca54:	ldr	x17, [x16, #2024]
    ca58:	add	x16, x16, #0x7e8
    ca5c:	br	x17

000000000000ca60 <mpfr_extract@plt>:
    ca60:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    ca64:	ldr	x17, [x16, #2032]
    ca68:	add	x16, x16, #0x7f0
    ca6c:	br	x17

000000000000ca70 <mpfr_eint@plt>:
    ca70:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    ca74:	ldr	x17, [x16, #2040]
    ca78:	add	x16, x16, #0x7f8
    ca7c:	br	x17

000000000000ca80 <mpfr_digamma@plt>:
    ca80:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    ca84:	ldr	x17, [x16, #2048]
    ca88:	add	x16, x16, #0x800
    ca8c:	br	x17

000000000000ca90 <mpfr_less_p@plt>:
    ca90:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    ca94:	ldr	x17, [x16, #2056]
    ca98:	add	x16, x16, #0x808
    ca9c:	br	x17

000000000000caa0 <mpfr_ui_pow@plt>:
    caa0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    caa4:	ldr	x17, [x16, #2064]
    caa8:	add	x16, x16, #0x810
    caac:	br	x17

000000000000cab0 <mpfr_round_raw@plt>:
    cab0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cab4:	ldr	x17, [x16, #2072]
    cab8:	add	x16, x16, #0x818
    cabc:	br	x17

000000000000cac0 <mpfr_random_deviate_less@plt>:
    cac0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cac4:	ldr	x17, [x16, #2080]
    cac8:	add	x16, x16, #0x820
    cacc:	br	x17

000000000000cad0 <__gmpn_perfect_square_p@plt>:
    cad0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cad4:	ldr	x17, [x16, #2088]
    cad8:	add	x16, x16, #0x828
    cadc:	br	x17

000000000000cae0 <mpfr_ui_sub@plt>:
    cae0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cae4:	ldr	x17, [x16, #2096]
    cae8:	add	x16, x16, #0x830
    caec:	br	x17

000000000000caf0 <mpfr_equal_p@plt>:
    caf0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    caf4:	ldr	x17, [x16, #2104]
    caf8:	add	x16, x16, #0x838
    cafc:	br	x17

000000000000cb00 <mpfr_sub1@plt>:
    cb00:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cb04:	ldr	x17, [x16, #2112]
    cb08:	add	x16, x16, #0x840
    cb0c:	br	x17

000000000000cb10 <mpfr_init2@plt>:
    cb10:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cb14:	ldr	x17, [x16, #2120]
    cb18:	add	x16, x16, #0x848
    cb1c:	br	x17

000000000000cb20 <__gmpz_init2@plt>:
    cb20:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cb24:	ldr	x17, [x16, #2128]
    cb28:	add	x16, x16, #0x850
    cb2c:	br	x17

000000000000cb30 <__gmpn_scan1@plt>:
    cb30:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cb34:	ldr	x17, [x16, #2136]
    cb38:	add	x16, x16, #0x858
    cb3c:	br	x17

000000000000cb40 <mpfr_ubf_exp_less_p@plt>:
    cb40:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cb44:	ldr	x17, [x16, #2144]
    cb48:	add	x16, x16, #0x860
    cb4c:	br	x17

000000000000cb50 <mpfr_get_z_2exp@plt>:
    cb50:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cb54:	ldr	x17, [x16, #2152]
    cb58:	add	x16, x16, #0x868
    cb5c:	br	x17

000000000000cb60 <strncpy@plt>:
    cb60:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cb64:	ldr	x17, [x16, #2160]
    cb68:	add	x16, x16, #0x870
    cb6c:	br	x17

000000000000cb70 <mpfr_set_1_2@plt>:
    cb70:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cb74:	ldr	x17, [x16, #2168]
    cb78:	add	x16, x16, #0x878
    cb7c:	br	x17

000000000000cb80 <__gmpq_div_2exp@plt>:
    cb80:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cb84:	ldr	x17, [x16, #2176]
    cb88:	add	x16, x16, #0x880
    cb8c:	br	x17

000000000000cb90 <mpfr_ubf_diff_exp@plt>:
    cb90:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cb94:	ldr	x17, [x16, #2184]
    cb98:	add	x16, x16, #0x888
    cb9c:	br	x17

000000000000cba0 <__gmp_urandomb_ui@plt>:
    cba0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cba4:	ldr	x17, [x16, #2192]
    cba8:	add	x16, x16, #0x890
    cbac:	br	x17

000000000000cbb0 <__gmpz_cmp_ui@plt>:
    cbb0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cbb4:	ldr	x17, [x16, #2200]
    cbb8:	add	x16, x16, #0x898
    cbbc:	br	x17

000000000000cbc0 <mpfr_check_range@plt>:
    cbc0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cbc4:	ldr	x17, [x16, #2208]
    cbc8:	add	x16, x16, #0x8a0
    cbcc:	br	x17

000000000000cbd0 <mpfr_assert_fail@plt>:
    cbd0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cbd4:	ldr	x17, [x16, #2216]
    cbd8:	add	x16, x16, #0x8a8
    cbdc:	br	x17

000000000000cbe0 <__gmpz_init@plt>:
    cbe0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cbe4:	ldr	x17, [x16, #2224]
    cbe8:	add	x16, x16, #0x8b0
    cbec:	br	x17

000000000000cbf0 <__gmpz_sizeinbase@plt>:
    cbf0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cbf4:	ldr	x17, [x16, #2232]
    cbf8:	add	x16, x16, #0x8b8
    cbfc:	br	x17

000000000000cc00 <__gmpz_set_si@plt>:
    cc00:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cc04:	ldr	x17, [x16, #2240]
    cc08:	add	x16, x16, #0x8c0
    cc0c:	br	x17

000000000000cc10 <mpfr_ceil_mul@plt>:
    cc10:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cc14:	ldr	x17, [x16, #2248]
    cc18:	add	x16, x16, #0x8c8
    cc1c:	br	x17

000000000000cc20 <mpfr_number_p@plt>:
    cc20:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cc24:	ldr	x17, [x16, #2256]
    cc28:	add	x16, x16, #0x8d0
    cc2c:	br	x17

000000000000cc30 <mpfr_scale2@plt>:
    cc30:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cc34:	ldr	x17, [x16, #2264]
    cc38:	add	x16, x16, #0x8d8
    cc3c:	br	x17

000000000000cc40 <mpfr_add1sp@plt>:
    cc40:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cc44:	ldr	x17, [x16, #2272]
    cc48:	add	x16, x16, #0x8e0
    cc4c:	br	x17

000000000000cc50 <__gmpz_powm_ui@plt>:
    cc50:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cc54:	ldr	x17, [x16, #2280]
    cc58:	add	x16, x16, #0x8e8
    cc5c:	br	x17

000000000000cc60 <mpfr_get_d_2exp@plt>:
    cc60:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cc64:	ldr	x17, [x16, #2288]
    cc68:	add	x16, x16, #0x8f0
    cc6c:	br	x17

000000000000cc70 <mpfr_mpn_exp@plt>:
    cc70:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cc74:	ldr	x17, [x16, #2296]
    cc78:	add	x16, x16, #0x8f8
    cc7c:	br	x17

000000000000cc80 <printf@plt>:
    cc80:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cc84:	ldr	x17, [x16, #2304]
    cc88:	add	x16, x16, #0x900
    cc8c:	br	x17

000000000000cc90 <__errno_location@plt>:
    cc90:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cc94:	ldr	x17, [x16, #2312]
    cc98:	add	x16, x16, #0x908
    cc9c:	br	x17

000000000000cca0 <mpfr_jn@plt>:
    cca0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cca4:	ldr	x17, [x16, #2320]
    cca8:	add	x16, x16, #0x910
    ccac:	br	x17

000000000000ccb0 <putchar@plt>:
    ccb0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    ccb4:	ldr	x17, [x16, #2328]
    ccb8:	add	x16, x16, #0x918
    ccbc:	br	x17

000000000000ccc0 <mpfr_free_func@plt>:
    ccc0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    ccc4:	ldr	x17, [x16, #2336]
    ccc8:	add	x16, x16, #0x920
    cccc:	br	x17

000000000000ccd0 <__gmpz_addmul_ui@plt>:
    ccd0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    ccd4:	ldr	x17, [x16, #2344]
    ccd8:	add	x16, x16, #0x928
    ccdc:	br	x17

000000000000cce0 <mpfr_sin_cos@plt>:
    cce0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cce4:	ldr	x17, [x16, #2352]
    cce8:	add	x16, x16, #0x930
    ccec:	br	x17

000000000000ccf0 <mpfr_inits2@plt>:
    ccf0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    ccf4:	ldr	x17, [x16, #2360]
    ccf8:	add	x16, x16, #0x938
    ccfc:	br	x17

000000000000cd00 <mpfr_div_ui@plt>:
    cd00:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cd04:	ldr	x17, [x16, #2368]
    cd08:	add	x16, x16, #0x940
    cd0c:	br	x17

000000000000cd10 <mpfr_fmodquo@plt>:
    cd10:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cd14:	ldr	x17, [x16, #2376]
    cd18:	add	x16, x16, #0x948
    cd1c:	br	x17

000000000000cd20 <mpfr_div_z@plt>:
    cd20:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cd24:	ldr	x17, [x16, #2384]
    cd28:	add	x16, x16, #0x950
    cd2c:	br	x17

000000000000cd30 <mpfr_exp2@plt>:
    cd30:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cd34:	ldr	x17, [x16, #2392]
    cd38:	add	x16, x16, #0x958
    cd3c:	br	x17

000000000000cd40 <mpfr_odd_p@plt>:
    cd40:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cd44:	ldr	x17, [x16, #2400]
    cd48:	add	x16, x16, #0x960
    cd4c:	br	x17

000000000000cd50 <__gmpn_divrem@plt>:
    cd50:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cd54:	ldr	x17, [x16, #2408]
    cd58:	add	x16, x16, #0x968
    cd5c:	br	x17

000000000000cd60 <__gmpn_sqrtrem@plt>:
    cd60:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cd64:	ldr	x17, [x16, #2416]
    cd68:	add	x16, x16, #0x970
    cd6c:	br	x17

000000000000cd70 <__gmpn_addmul_1@plt>:
    cd70:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cd74:	ldr	x17, [x16, #2424]
    cd78:	add	x16, x16, #0x978
    cd7c:	br	x17

000000000000cd80 <fprintf@plt>:
    cd80:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cd84:	ldr	x17, [x16, #2432]
    cd88:	add	x16, x16, #0x980
    cd8c:	br	x17

000000000000cd90 <mpfr_allocate_func@plt>:
    cd90:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cd94:	ldr	x17, [x16, #2440]
    cd98:	add	x16, x16, #0x988
    cd9c:	br	x17

000000000000cda0 <__gmpz_urandomb@plt>:
    cda0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cda4:	ldr	x17, [x16, #2448]
    cda8:	add	x16, x16, #0x990
    cdac:	br	x17

000000000000cdb0 <mpfr_remainder@plt>:
    cdb0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cdb4:	ldr	x17, [x16, #2456]
    cdb8:	add	x16, x16, #0x998
    cdbc:	br	x17

000000000000cdc0 <mpfr_cbrt@plt>:
    cdc0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cdc4:	ldr	x17, [x16, #2464]
    cdc8:	add	x16, x16, #0x9a0
    cdcc:	br	x17

000000000000cdd0 <__gmpn_mul_1@plt>:
    cdd0:	adrp	x16, 74000 <mpfr_agm@@Base+0x5e674>
    cdd4:	ldr	x17, [x16, #2472]
    cdd8:	add	x16, x16, #0x9a8
    cddc:	br	x17

000000000000cde0 <__gmpfr_emin@plt>:
    cde0:	stp	x2, x3, [sp, #-16]!
    cde4:	adrp	x2, 73000 <__gmpfr_l2b@@Base+0x200>
    cde8:	adrp	x3, 73000 <__gmpfr_l2b@@Base+0x200>
    cdec:	ldr	x2, [x2, #4064]

000000000000cdf0 <__gmpfr_emax@plt>:
    cdf0:	add	x3, x3, #0xfe8
    cdf4:	br	x2
    cdf8:	nop
    cdfc:	nop

Disassembly of section .text:

000000000000ce00 <mpfr_get_emin@@Base>:
    ce00:	stp	x29, x30, [sp, #-16]!
    ce04:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    ce08:	ldr	x1, [x0, #2528]
    ce0c:	add	x0, x0, #0x9e0
    ce10:	blr	x1
    ce14:	mrs	x1, tpidr_el0
    ce18:	mov	x29, sp
    ce1c:	ldp	x29, x30, [sp], #16
    ce20:	ldr	x0, [x1, x0]
    ce24:	ret

000000000000ce28 <mpfr_get_emin_min@@Base>:
    ce28:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
    ce2c:	ret

000000000000ce30 <mpfr_get_emin_max@@Base>:
    ce30:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    ce34:	ret

000000000000ce38 <mpfr_get_emax@@Base>:
    ce38:	stp	x29, x30, [sp, #-16]!
    ce3c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    ce40:	ldr	x1, [x0, #2560]
    ce44:	add	x0, x0, #0xa00
    ce48:	blr	x1
    ce4c:	mrs	x1, tpidr_el0
    ce50:	mov	x29, sp
    ce54:	ldp	x29, x30, [sp], #16
    ce58:	ldr	x0, [x1, x0]
    ce5c:	ret

000000000000ce60 <mpfr_get_emax_min@@Base>:
    ce60:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
    ce64:	ret

000000000000ce68 <mpfr_get_emax_max@@Base>:
    ce68:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    ce6c:	ret

000000000000ce70 <mpfr_flags_clear@@Base>:
    ce70:	stp	x29, x30, [sp, #-16]!
    ce74:	mov	w1, w0
    ce78:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    ce7c:	ldr	x2, [x0, #2592]
    ce80:	add	x0, x0, #0xa20
    ce84:	blr	x2
    ce88:	mrs	x2, tpidr_el0
    ce8c:	mov	x29, sp
    ce90:	add	x0, x2, x0
    ce94:	eor	w1, w1, #0x3f
    ce98:	ldr	w2, [x0]
    ce9c:	and	w1, w1, w2
    cea0:	str	w1, [x0]
    cea4:	ldp	x29, x30, [sp], #16
    cea8:	ret

000000000000ceac <mpfr_flags_set@@Base>:
    ceac:	stp	x29, x30, [sp, #-16]!
    ceb0:	mov	w2, w0
    ceb4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    ceb8:	ldr	x1, [x0, #2592]
    cebc:	add	x0, x0, #0xa20
    cec0:	blr	x1
    cec4:	mrs	x1, tpidr_el0
    cec8:	mov	x29, sp
    cecc:	add	x0, x1, x0
    ced0:	ldr	w1, [x0]
    ced4:	orr	w1, w1, w2
    ced8:	str	w1, [x0]
    cedc:	ldp	x29, x30, [sp], #16
    cee0:	ret

000000000000cee4 <mpfr_flags_test@@Base>:
    cee4:	stp	x29, x30, [sp, #-16]!
    cee8:	mov	w1, w0
    ceec:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    cef0:	ldr	x2, [x0, #2592]
    cef4:	add	x0, x0, #0xa20
    cef8:	blr	x2
    cefc:	mrs	x2, tpidr_el0
    cf00:	mov	x29, sp
    cf04:	ldp	x29, x30, [sp], #16
    cf08:	ldr	w0, [x2, x0]
    cf0c:	and	w0, w1, w0
    cf10:	ret

000000000000cf14 <mpfr_flags_save@@Base>:
    cf14:	stp	x29, x30, [sp, #-16]!
    cf18:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    cf1c:	ldr	x1, [x0, #2592]
    cf20:	add	x0, x0, #0xa20
    cf24:	blr	x1
    cf28:	mrs	x1, tpidr_el0
    cf2c:	mov	x29, sp
    cf30:	ldp	x29, x30, [sp], #16
    cf34:	ldr	w0, [x1, x0]
    cf38:	ret

000000000000cf3c <mpfr_flags_restore@@Base>:
    cf3c:	stp	x29, x30, [sp, #-16]!
    cf40:	mov	w3, w0
    cf44:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    cf48:	ldr	x2, [x0, #2592]
    cf4c:	add	x0, x0, #0xa20
    cf50:	blr	x2
    cf54:	mrs	x2, tpidr_el0
    cf58:	mov	x29, sp
    cf5c:	add	x0, x2, x0
    cf60:	eor	w2, w1, #0x3f
    cf64:	and	w1, w1, w3
    cf68:	ldr	w4, [x0]
    cf6c:	and	w2, w2, w4
    cf70:	orr	w1, w2, w1
    cf74:	str	w1, [x0]
    cf78:	ldp	x29, x30, [sp], #16
    cf7c:	ret

000000000000cf80 <mpfr_clear_underflow@@Base>:
    cf80:	stp	x29, x30, [sp, #-16]!
    cf84:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    cf88:	ldr	x1, [x0, #2592]
    cf8c:	add	x0, x0, #0xa20
    cf90:	blr	x1
    cf94:	mrs	x1, tpidr_el0
    cf98:	add	x0, x1, x0
    cf9c:	mov	x29, sp
    cfa0:	ldr	w1, [x0]
    cfa4:	and	w1, w1, #0x3e
    cfa8:	str	w1, [x0]
    cfac:	ldp	x29, x30, [sp], #16
    cfb0:	ret

000000000000cfb4 <mpfr_clear_overflow@@Base>:
    cfb4:	stp	x29, x30, [sp, #-16]!
    cfb8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    cfbc:	ldr	x1, [x0, #2592]
    cfc0:	add	x0, x0, #0xa20
    cfc4:	blr	x1
    cfc8:	mrs	x1, tpidr_el0
    cfcc:	add	x0, x1, x0
    cfd0:	mov	x29, sp
    cfd4:	mov	w2, #0x3d                  	// #61
    cfd8:	ldr	w1, [x0]
    cfdc:	and	w1, w1, w2
    cfe0:	str	w1, [x0]
    cfe4:	ldp	x29, x30, [sp], #16
    cfe8:	ret

000000000000cfec <mpfr_clear_divby0@@Base>:
    cfec:	stp	x29, x30, [sp, #-16]!
    cff0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    cff4:	ldr	x1, [x0, #2592]
    cff8:	add	x0, x0, #0xa20
    cffc:	blr	x1
    d000:	mrs	x1, tpidr_el0
    d004:	add	x0, x1, x0
    d008:	mov	x29, sp
    d00c:	ldr	w1, [x0]
    d010:	and	w1, w1, #0x1f
    d014:	str	w1, [x0]
    d018:	ldp	x29, x30, [sp], #16
    d01c:	ret

000000000000d020 <mpfr_clear_nanflag@@Base>:
    d020:	stp	x29, x30, [sp, #-16]!
    d024:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    d028:	ldr	x1, [x0, #2592]
    d02c:	add	x0, x0, #0xa20
    d030:	blr	x1
    d034:	mrs	x1, tpidr_el0
    d038:	add	x0, x1, x0
    d03c:	mov	x29, sp
    d040:	mov	w2, #0x3b                  	// #59
    d044:	ldr	w1, [x0]
    d048:	and	w1, w1, w2
    d04c:	str	w1, [x0]
    d050:	ldp	x29, x30, [sp], #16
    d054:	ret

000000000000d058 <mpfr_clear_inexflag@@Base>:
    d058:	stp	x29, x30, [sp, #-16]!
    d05c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    d060:	ldr	x1, [x0, #2592]
    d064:	add	x0, x0, #0xa20
    d068:	blr	x1
    d06c:	mrs	x1, tpidr_el0
    d070:	add	x0, x1, x0
    d074:	mov	x29, sp
    d078:	mov	w2, #0x37                  	// #55
    d07c:	ldr	w1, [x0]
    d080:	and	w1, w1, w2
    d084:	str	w1, [x0]
    d088:	ldp	x29, x30, [sp], #16
    d08c:	ret

000000000000d090 <mpfr_clear_erangeflag@@Base>:
    d090:	stp	x29, x30, [sp, #-16]!
    d094:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    d098:	ldr	x1, [x0, #2592]
    d09c:	add	x0, x0, #0xa20
    d0a0:	blr	x1
    d0a4:	mrs	x1, tpidr_el0
    d0a8:	add	x0, x1, x0
    d0ac:	mov	x29, sp
    d0b0:	mov	w2, #0x2f                  	// #47
    d0b4:	ldr	w1, [x0]
    d0b8:	and	w1, w1, w2
    d0bc:	str	w1, [x0]
    d0c0:	ldp	x29, x30, [sp], #16
    d0c4:	ret

000000000000d0c8 <mpfr_set_underflow@@Base>:
    d0c8:	stp	x29, x30, [sp, #-16]!
    d0cc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    d0d0:	ldr	x1, [x0, #2592]
    d0d4:	add	x0, x0, #0xa20
    d0d8:	blr	x1
    d0dc:	mrs	x1, tpidr_el0
    d0e0:	add	x0, x1, x0
    d0e4:	mov	x29, sp
    d0e8:	ldr	w1, [x0]
    d0ec:	orr	w1, w1, #0x1
    d0f0:	str	w1, [x0]
    d0f4:	ldp	x29, x30, [sp], #16
    d0f8:	ret

000000000000d0fc <mpfr_set_overflow@@Base>:
    d0fc:	stp	x29, x30, [sp, #-16]!
    d100:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    d104:	ldr	x1, [x0, #2592]
    d108:	add	x0, x0, #0xa20
    d10c:	blr	x1
    d110:	mrs	x1, tpidr_el0
    d114:	add	x0, x1, x0
    d118:	mov	x29, sp
    d11c:	ldr	w1, [x0]
    d120:	orr	w1, w1, #0x2
    d124:	str	w1, [x0]
    d128:	ldp	x29, x30, [sp], #16
    d12c:	ret

000000000000d130 <mpfr_set_divby0@@Base>:
    d130:	stp	x29, x30, [sp, #-16]!
    d134:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    d138:	ldr	x1, [x0, #2592]
    d13c:	add	x0, x0, #0xa20
    d140:	blr	x1
    d144:	mrs	x1, tpidr_el0
    d148:	add	x0, x1, x0
    d14c:	mov	x29, sp
    d150:	ldr	w1, [x0]
    d154:	orr	w1, w1, #0x20
    d158:	str	w1, [x0]
    d15c:	ldp	x29, x30, [sp], #16
    d160:	ret

000000000000d164 <mpfr_set_nanflag@@Base>:
    d164:	stp	x29, x30, [sp, #-16]!
    d168:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    d16c:	ldr	x1, [x0, #2592]
    d170:	add	x0, x0, #0xa20
    d174:	blr	x1
    d178:	mrs	x1, tpidr_el0
    d17c:	add	x0, x1, x0
    d180:	mov	x29, sp
    d184:	ldr	w1, [x0]
    d188:	orr	w1, w1, #0x4
    d18c:	str	w1, [x0]
    d190:	ldp	x29, x30, [sp], #16
    d194:	ret

000000000000d198 <mpfr_set_inexflag@@Base>:
    d198:	stp	x29, x30, [sp, #-16]!
    d19c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    d1a0:	ldr	x1, [x0, #2592]
    d1a4:	add	x0, x0, #0xa20
    d1a8:	blr	x1
    d1ac:	mrs	x1, tpidr_el0
    d1b0:	add	x0, x1, x0
    d1b4:	mov	x29, sp
    d1b8:	ldr	w1, [x0]
    d1bc:	orr	w1, w1, #0x8
    d1c0:	str	w1, [x0]
    d1c4:	ldp	x29, x30, [sp], #16
    d1c8:	ret

000000000000d1cc <mpfr_set_erangeflag@@Base>:
    d1cc:	stp	x29, x30, [sp, #-16]!
    d1d0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    d1d4:	ldr	x1, [x0, #2592]
    d1d8:	add	x0, x0, #0xa20
    d1dc:	blr	x1
    d1e0:	mrs	x1, tpidr_el0
    d1e4:	add	x0, x1, x0
    d1e8:	mov	x29, sp
    d1ec:	ldr	w1, [x0]
    d1f0:	orr	w1, w1, #0x10
    d1f4:	str	w1, [x0]
    d1f8:	ldp	x29, x30, [sp], #16
    d1fc:	ret

000000000000d200 <mpfr_underflow_p@@Base>:
    d200:	stp	x29, x30, [sp, #-16]!
    d204:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    d208:	ldr	x1, [x0, #2592]
    d20c:	add	x0, x0, #0xa20
    d210:	blr	x1
    d214:	mrs	x1, tpidr_el0
    d218:	mov	x29, sp
    d21c:	ldp	x29, x30, [sp], #16
    d220:	ldr	w0, [x1, x0]
    d224:	and	w0, w0, #0x1
    d228:	ret

000000000000d22c <mpfr_overflow_p@@Base>:
    d22c:	stp	x29, x30, [sp, #-16]!
    d230:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    d234:	ldr	x1, [x0, #2592]
    d238:	add	x0, x0, #0xa20
    d23c:	blr	x1
    d240:	mrs	x1, tpidr_el0
    d244:	mov	x29, sp
    d248:	ldp	x29, x30, [sp], #16
    d24c:	ldr	w0, [x1, x0]
    d250:	and	w0, w0, #0x2
    d254:	ret

000000000000d258 <mpfr_divby0_p@@Base>:
    d258:	stp	x29, x30, [sp, #-16]!
    d25c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    d260:	ldr	x1, [x0, #2592]
    d264:	add	x0, x0, #0xa20
    d268:	blr	x1
    d26c:	mrs	x1, tpidr_el0
    d270:	mov	x29, sp
    d274:	ldp	x29, x30, [sp], #16
    d278:	ldr	w0, [x1, x0]
    d27c:	and	w0, w0, #0x20
    d280:	ret

000000000000d284 <mpfr_nanflag_p@@Base>:
    d284:	stp	x29, x30, [sp, #-16]!
    d288:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    d28c:	ldr	x1, [x0, #2592]
    d290:	add	x0, x0, #0xa20
    d294:	blr	x1
    d298:	mrs	x1, tpidr_el0
    d29c:	mov	x29, sp
    d2a0:	ldp	x29, x30, [sp], #16
    d2a4:	ldr	w0, [x1, x0]
    d2a8:	and	w0, w0, #0x4
    d2ac:	ret

000000000000d2b0 <mpfr_inexflag_p@@Base>:
    d2b0:	stp	x29, x30, [sp, #-16]!
    d2b4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    d2b8:	ldr	x1, [x0, #2592]
    d2bc:	add	x0, x0, #0xa20
    d2c0:	blr	x1
    d2c4:	mrs	x1, tpidr_el0
    d2c8:	mov	x29, sp
    d2cc:	ldp	x29, x30, [sp], #16
    d2d0:	ldr	w0, [x1, x0]
    d2d4:	and	w0, w0, #0x8
    d2d8:	ret

000000000000d2dc <mpfr_erangeflag_p@@Base>:
    d2dc:	stp	x29, x30, [sp, #-16]!
    d2e0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    d2e4:	ldr	x1, [x0, #2592]
    d2e8:	add	x0, x0, #0xa20
    d2ec:	blr	x1
    d2f0:	mrs	x1, tpidr_el0
    d2f4:	mov	x29, sp
    d2f8:	ldp	x29, x30, [sp], #16
    d2fc:	ldr	w0, [x1, x0]
    d300:	and	w0, w0, #0x10
    d304:	ret

000000000000d308 <mpfr_underflow@@Base>:
    d308:	stp	x29, x30, [sp, #-48]!
    d30c:	cmp	w1, #0x1
    d310:	mov	x29, sp
    d314:	stp	x19, x20, [sp, #16]
    d318:	mov	w19, w2
    d31c:	mrs	x20, tpidr_el0
    d320:	str	x21, [sp, #32]
    d324:	mov	x21, x0
    d328:	b.eq	d338 <mpfr_underflow@@Base+0x30>  // b.none
    d32c:	add	w1, w1, w2, lsr #31
    d330:	cmp	w1, #0x3
    d334:	b.ne	d38c <mpfr_underflow@@Base+0x84>  // b.any
    d338:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    d33c:	mov	w1, #0xffffffff            	// #-1
    d340:	str	x0, [x21, #16]
    d344:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    d348:	ldr	x2, [x0, #2592]
    d34c:	add	x0, x0, #0xa20
    d350:	blr	x2
    d354:	add	x0, x20, x0
    d358:	mov	w3, #0x9                   	// #9
    d35c:	str	w19, [x21, #8]
    d360:	cmp	w19, #0x0
    d364:	ldr	w2, [x0]
    d368:	orr	w2, w2, w3
    d36c:	str	w2, [x0]
    d370:	b.gt	d378 <mpfr_underflow@@Base+0x70>
    d374:	neg	w1, w1
    d378:	mov	w0, w1
    d37c:	ldp	x19, x20, [sp, #16]
    d380:	ldr	x21, [sp, #32]
    d384:	ldp	x29, x30, [sp], #48
    d388:	ret
    d38c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    d390:	ldr	x1, [x0, #2528]
    d394:	add	x0, x0, #0x9e0
    d398:	blr	x1
    d39c:	ldr	x1, [x20, x0]
    d3a0:	mov	x0, x21
    d3a4:	bl	c340 <mpfr_setmin@plt>
    d3a8:	mov	w1, #0x1                   	// #1
    d3ac:	b	d344 <mpfr_underflow@@Base+0x3c>

000000000000d3b0 <mpfr_overflow@@Base>:
    d3b0:	stp	x29, x30, [sp, #-48]!
    d3b4:	cmp	w1, #0x1
    d3b8:	mov	x29, sp
    d3bc:	stp	x19, x20, [sp, #16]
    d3c0:	mov	w19, w2
    d3c4:	mrs	x20, tpidr_el0
    d3c8:	str	x21, [sp, #32]
    d3cc:	mov	x21, x0
    d3d0:	b.eq	d3e0 <mpfr_overflow@@Base+0x30>  // b.none
    d3d4:	add	w1, w1, w2, lsr #31
    d3d8:	cmp	w1, #0x3
    d3dc:	b.ne	d448 <mpfr_overflow@@Base+0x98>  // b.any
    d3e0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    d3e4:	ldr	x1, [x0, #2560]
    d3e8:	add	x0, x0, #0xa00
    d3ec:	blr	x1
    d3f0:	ldr	x1, [x20, x0]
    d3f4:	mov	x0, x21
    d3f8:	bl	c150 <mpfr_setmax@plt>
    d3fc:	mov	w1, #0xffffffff            	// #-1
    d400:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    d404:	ldr	x2, [x0, #2592]
    d408:	add	x0, x0, #0xa20
    d40c:	blr	x2
    d410:	add	x0, x20, x0
    d414:	mov	w3, #0xa                   	// #10
    d418:	str	w19, [x21, #8]
    d41c:	cmp	w19, #0x0
    d420:	ldr	w2, [x0]
    d424:	orr	w2, w2, w3
    d428:	str	w2, [x0]
    d42c:	b.gt	d434 <mpfr_overflow@@Base+0x84>
    d430:	neg	w1, w1
    d434:	mov	w0, w1
    d438:	ldp	x19, x20, [sp, #16]
    d43c:	ldr	x21, [sp, #32]
    d440:	ldp	x29, x30, [sp], #48
    d444:	ret
    d448:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    d44c:	mov	w1, #0x1                   	// #1
    d450:	str	x0, [x21, #16]
    d454:	b	d400 <mpfr_overflow@@Base+0x50>

000000000000d458 <mpfr_assert_fail@@Base>:
    d458:	stp	x29, x30, [sp, #-48]!
    d45c:	mov	x29, sp
    d460:	stp	x19, x20, [sp, #16]
    d464:	adrp	x19, 73000 <__gmpfr_l2b@@Base+0x200>
    d468:	stp	x21, x22, [sp, #32]
    d46c:	mov	x21, x2
    d470:	cbz	x0, d4b4 <mpfr_assert_fail@@Base+0x5c>
    d474:	mov	w20, w1
    d478:	ldrb	w1, [x0]
    d47c:	cbz	w1, d4b4 <mpfr_assert_fail@@Base+0x5c>
    d480:	ldr	x22, [x19, #3968]
    d484:	mov	x2, x0
    d488:	adrp	x1, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
    d48c:	add	x1, x1, #0xd34
    d490:	ldr	x0, [x22]
    d494:	bl	cd80 <fprintf@plt>
    d498:	cmn	w20, #0x1
    d49c:	b.eq	d4b4 <mpfr_assert_fail@@Base+0x5c>  // b.none
    d4a0:	ldr	x0, [x22]
    d4a4:	adrp	x1, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
    d4a8:	mov	w2, w20
    d4ac:	add	x1, x1, #0xd38
    d4b0:	bl	cd80 <fprintf@plt>
    d4b4:	ldr	x19, [x19, #3968]
    d4b8:	mov	x2, x21
    d4bc:	adrp	x1, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
    d4c0:	add	x1, x1, #0xd3d
    d4c4:	ldr	x0, [x19]
    d4c8:	bl	cd80 <fprintf@plt>
    d4cc:	bl	c470 <abort@plt>

000000000000d4d0 <mpfr_abort_prec_max@@Base>:
    d4d0:	stp	x29, x30, [sp, #-16]!
    d4d4:	adrp	x0, 73000 <__gmpfr_l2b@@Base+0x200>
    d4d8:	mov	x29, sp
    d4dc:	ldr	x0, [x0, #3968]
    d4e0:	ldr	x1, [x0]
    d4e4:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
    d4e8:	add	x0, x0, #0x4d0
    d4ec:	bl	bb40 <fputs@plt>
    d4f0:	bl	c470 <abort@plt>

000000000000d4f4 <mpfr_add@@Base>:
    d4f4:	stp	x29, x30, [sp, #-48]!
    d4f8:	mov	x5, #0x5                   	// #5
    d4fc:	movk	x5, #0x8000, lsl #48
    d500:	mov	x29, sp
    d504:	ldr	x4, [x1, #16]
    d508:	stp	x19, x20, [sp, #16]
    d50c:	mov	x20, x0
    d510:	stp	x21, x22, [sp, #32]
    d514:	mov	x19, x2
    d518:	mov	x21, x1
    d51c:	mov	w22, w3
    d520:	cmp	x4, x5
    d524:	b.lt	d57c <mpfr_add@@Base+0x88>  // b.tstop
    d528:	ldr	x6, [x2, #16]
    d52c:	cmp	x6, x5
    d530:	b.ge	d71c <mpfr_add@@Base+0x228>  // b.tcont
    d534:	ldr	x0, [x19, #16]
    d538:	mov	x1, #0x2                   	// #2
    d53c:	movk	x1, #0x8000, lsl #48
    d540:	cmp	x0, x1
    d544:	b.eq	d58c <mpfr_add@@Base+0x98>  // b.none
    d548:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    d54c:	cmp	x4, x1
    d550:	mov	x2, x1
    d554:	b.ne	d5d0 <mpfr_add@@Base+0xdc>  // b.any
    d558:	cmp	x0, x1
    d55c:	ldr	w1, [x21, #8]
    d560:	b.ne	d570 <mpfr_add@@Base+0x7c>  // b.any
    d564:	ldr	w0, [x19, #8]
    d568:	cmp	w0, w1
    d56c:	b.ne	d58c <mpfr_add@@Base+0x98>  // b.any
    d570:	str	w1, [x20, #8]
    d574:	str	x2, [x20, #16]
    d578:	b	d5bc <mpfr_add@@Base+0xc8>
    d57c:	mov	x0, #0x2                   	// #2
    d580:	movk	x0, #0x8000, lsl #48
    d584:	cmp	x4, x0
    d588:	b.ne	d534 <mpfr_add@@Base+0x40>  // b.any
    d58c:	mov	x0, #0x2                   	// #2
    d590:	movk	x0, #0x8000, lsl #48
    d594:	str	x0, [x20, #16]
    d598:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    d59c:	ldr	x1, [x0, #2592]
    d5a0:	add	x0, x0, #0xa20
    d5a4:	blr	x1
    d5a8:	mrs	x1, tpidr_el0
    d5ac:	add	x0, x1, x0
    d5b0:	ldr	w1, [x0]
    d5b4:	orr	w1, w1, #0x4
    d5b8:	str	w1, [x0]
    d5bc:	mov	w0, #0x0                   	// #0
    d5c0:	ldp	x19, x20, [sp, #16]
    d5c4:	ldp	x21, x22, [sp, #32]
    d5c8:	ldp	x29, x30, [sp], #48
    d5cc:	ret
    d5d0:	cmp	x0, x1
    d5d4:	b.ne	d5e8 <mpfr_add@@Base+0xf4>  // b.any
    d5d8:	str	x0, [x20, #16]
    d5dc:	ldr	w0, [x19, #8]
    d5e0:	str	w0, [x20, #8]
    d5e4:	b	d5bc <mpfr_add@@Base+0xc8>
    d5e8:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    d5ec:	cmp	x4, x1
    d5f0:	b.ne	d678 <mpfr_add@@Base+0x184>  // b.any
    d5f4:	cmp	x0, x4
    d5f8:	b.ne	d658 <mpfr_add@@Base+0x164>  // b.any
    d5fc:	ldr	w0, [x21, #8]
    d600:	cmp	w22, #0x3
    d604:	b.ne	d630 <mpfr_add@@Base+0x13c>  // b.any
    d608:	cmp	w0, #0x0
    d60c:	b.le	d648 <mpfr_add@@Base+0x154>
    d610:	ldr	w1, [x19, #8]
    d614:	mov	w0, #0x1                   	// #1
    d618:	cmp	w1, w0
    d61c:	cneg	w0, w0, lt  // lt = tstop
    d620:	str	w0, [x20, #8]
    d624:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    d628:	str	x0, [x20, #16]
    d62c:	b	d5bc <mpfr_add@@Base+0xc8>
    d630:	tbz	w0, #31, d650 <mpfr_add@@Base+0x15c>
    d634:	ldr	w1, [x19, #8]
    d638:	mov	w0, #0xffffffff            	// #-1
    d63c:	cmp	w1, w0
    d640:	cneg	w0, w0, gt
    d644:	b	d620 <mpfr_add@@Base+0x12c>
    d648:	mov	w0, #0xffffffff            	// #-1
    d64c:	b	d620 <mpfr_add@@Base+0x12c>
    d650:	mov	w0, #0x1                   	// #1
    d654:	b	d620 <mpfr_add@@Base+0x12c>
    d658:	ldr	w3, [x19, #8]
    d65c:	mov	w2, w22
    d660:	mov	x1, x19
    d664:	mov	x0, x20
    d668:	ldp	x19, x20, [sp, #16]
    d66c:	ldp	x21, x22, [sp, #32]
    d670:	ldp	x29, x30, [sp], #48
    d674:	b	c730 <mpfr_set4@plt>
    d678:	cmp	x0, x1
    d67c:	b.ne	d690 <mpfr_add@@Base+0x19c>  // b.any
    d680:	ldr	w3, [x21, #8]
    d684:	mov	w2, w22
    d688:	mov	x1, x21
    d68c:	b	d664 <mpfr_add@@Base+0x170>
    d690:	ldr	w1, [x19, #8]
    d694:	ldr	w2, [x21, #8]
    d698:	cmp	w2, w1
    d69c:	b.eq	d6c0 <mpfr_add@@Base+0x1cc>  // b.none
    d6a0:	mov	w3, w22
    d6a4:	mov	x2, x19
    d6a8:	mov	x1, x21
    d6ac:	mov	x0, x20
    d6b0:	ldp	x19, x20, [sp, #16]
    d6b4:	ldp	x21, x22, [sp, #32]
    d6b8:	ldp	x29, x30, [sp], #48
    d6bc:	b	cb00 <mpfr_sub1@plt>
    d6c0:	mov	x1, #0x4                   	// #4
    d6c4:	movk	x1, #0x8000, lsl #48
    d6c8:	cmp	x4, x1
    d6cc:	b.eq	d6d8 <mpfr_add@@Base+0x1e4>  // b.none
    d6d0:	cmp	x0, x1
    d6d4:	b.ne	d710 <mpfr_add@@Base+0x21c>  // b.any
    d6d8:	mov	x1, x19
    d6dc:	mov	x0, x21
    d6e0:	bl	cb40 <mpfr_ubf_exp_less_p@plt>
    d6e4:	cmp	w0, #0x0
    d6e8:	cset	w0, ne  // ne = any
    d6ec:	mov	w3, w22
    d6f0:	cbz	w0, d788 <mpfr_add@@Base+0x294>
    d6f4:	mov	x2, x21
    d6f8:	mov	x1, x19
    d6fc:	mov	x0, x20
    d700:	ldp	x19, x20, [sp, #16]
    d704:	ldp	x21, x22, [sp, #32]
    d708:	ldp	x29, x30, [sp], #48
    d70c:	b	c810 <mpfr_add1@plt>
    d710:	cmp	x4, x0
    d714:	cset	w0, lt  // lt = tstop
    d718:	b	d6ec <mpfr_add@@Base+0x1f8>
    d71c:	ldr	w8, [x2, #8]
    d720:	ldr	w9, [x1, #8]
    d724:	ldr	x7, [x0]
    d728:	cmp	w9, w8
    d72c:	ldr	x5, [x1]
    d730:	b.eq	d758 <mpfr_add@@Base+0x264>  // b.none
    d734:	cmp	x5, x7
    d738:	b.ne	d6a0 <mpfr_add@@Base+0x1ac>  // b.any
    d73c:	ldr	x4, [x2]
    d740:	cmp	x5, x4
    d744:	b.ne	d6a0 <mpfr_add@@Base+0x1ac>  // b.any
    d748:	ldp	x19, x20, [sp, #16]
    d74c:	ldp	x21, x22, [sp, #32]
    d750:	ldp	x29, x30, [sp], #48
    d754:	b	c170 <mpfr_sub1sp@plt>
    d758:	cmp	x5, x7
    d75c:	b.ne	d77c <mpfr_add@@Base+0x288>  // b.any
    d760:	ldr	x7, [x2]
    d764:	cmp	x5, x7
    d768:	b.ne	d77c <mpfr_add@@Base+0x288>  // b.any
    d76c:	ldp	x19, x20, [sp, #16]
    d770:	ldp	x21, x22, [sp, #32]
    d774:	ldp	x29, x30, [sp], #48
    d778:	b	cc40 <mpfr_add1sp@plt>
    d77c:	mov	w3, w22
    d780:	cmp	x4, x6
    d784:	b.lt	d6f4 <mpfr_add@@Base+0x200>  // b.tstop
    d788:	mov	x2, x19
    d78c:	mov	x1, x21
    d790:	b	d6fc <mpfr_add@@Base+0x208>

000000000000d794 <mpfr_add1@@Base>:
    d794:	stp	x29, x30, [sp, #-160]!
    d798:	mov	x29, sp
    d79c:	stp	x23, x24, [sp, #48]
    d7a0:	ldr	x23, [x1, #16]
    d7a4:	stp	x19, x20, [sp, #16]
    d7a8:	stp	x21, x22, [sp, #32]
    d7ac:	mov	x22, x0
    d7b0:	mov	x0, #0x4                   	// #4
    d7b4:	stp	x25, x26, [sp, #64]
    d7b8:	movk	x0, #0x8000, lsl #48
    d7bc:	mov	w21, w3
    d7c0:	stp	x27, x28, [sp, #80]
    d7c4:	cmp	x23, x0
    d7c8:	mov	x28, x1
    d7cc:	str	x2, [x29, #104]
    d7d0:	b.ne	d838 <mpfr_add1@@Base+0xa4>  // b.any
    d7d4:	add	x0, x1, #0x20
    d7d8:	bl	bcc0 <mpfr_ubf_zexp2exp@plt>
    d7dc:	mov	x23, x0
    d7e0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    d7e4:	ldr	x1, [x0, #2560]
    d7e8:	add	x0, x0, #0xa00
    d7ec:	blr	x1
    d7f0:	mrs	x1, tpidr_el0
    d7f4:	ldr	x0, [x1, x0]
    d7f8:	cmp	x0, x23
    d7fc:	b.ge	d838 <mpfr_add1@@Base+0xa4>  // b.tcont
    d800:	ldr	w2, [x28, #8]
    d804:	mov	w1, w21
    d808:	mov	x0, x22
    d80c:	bl	bfc0 <mpfr_overflow@plt>
    d810:	mov	w28, w0
    d814:	mov	sp, x29
    d818:	mov	w0, w28
    d81c:	ldp	x19, x20, [sp, #16]
    d820:	ldp	x21, x22, [sp, #32]
    d824:	ldp	x23, x24, [sp, #48]
    d828:	ldp	x25, x26, [sp, #64]
    d82c:	ldp	x27, x28, [sp, #80]
    d830:	ldp	x29, x30, [sp], #160
    d834:	ret
    d838:	ldr	x25, [x22]
    d83c:	str	xzr, [x29, #152]
    d840:	ldr	x27, [x22, #24]
    d844:	sub	x19, x25, #0x1
    d848:	ldr	x26, [x28, #24]
    d84c:	asr	x0, x19, #6
    d850:	str	x0, [x29, #128]
    d854:	add	x0, x0, #0x1
    d858:	str	x0, [x29, #136]
    d85c:	cmp	x27, x26
    d860:	lsl	x0, x0, #6
    d864:	str	x0, [x29, #112]
    d868:	ldr	x19, [x28]
    d86c:	ldr	w0, [x29, #112]
    d870:	sub	x19, x19, #0x1
    d874:	sub	w25, w0, w25
    d878:	ldr	x0, [x29, #104]
    d87c:	asr	x19, x19, #6
    d880:	ldr	x2, [x0]
    d884:	sub	x2, x2, #0x1
    d888:	asr	x0, x2, #6
    d88c:	str	x0, [x29, #96]
    d890:	add	x0, x0, #0x1
    d894:	str	x0, [x29, #120]
    d898:	ldr	x0, [x29, #104]
    d89c:	ldr	x24, [x0, #24]
    d8a0:	b.ne	dac4 <mpfr_add1@@Base+0x330>  // b.any
    d8a4:	add	x0, x19, #0x1
    d8a8:	lsl	x20, x0, #3
    d8ac:	cmp	x20, #0x4, lsl #12
    d8b0:	b.hi	dab0 <mpfr_add1@@Base+0x31c>  // b.pmore
    d8b4:	add	x0, x20, #0xf
    d8b8:	and	x0, x0, #0xfffffffffffffff0
    d8bc:	sub	sp, sp, x0
    d8c0:	mov	x26, sp
    d8c4:	cmp	x26, x27
    d8c8:	b.eq	d8dc <mpfr_add1@@Base+0x148>  // b.none
    d8cc:	mov	x2, x20
    d8d0:	mov	x1, x27
    d8d4:	mov	x0, x26
    d8d8:	bl	ba90 <memcpy@plt>
    d8dc:	cmp	x27, x24
    d8e0:	csel	x24, x24, x26, ne  // ne = any
    d8e4:	ldr	w0, [x28, #8]
    d8e8:	cmp	w21, #0x2
    d8ec:	str	w0, [x22, #8]
    d8f0:	b.ne	db1c <mpfr_add1@@Base+0x388>  // b.any
    d8f4:	cmp	w0, #0x0
    d8f8:	mov	w21, #0x4                   	// #4
    d8fc:	csinc	w21, w21, wzr, gt
    d900:	ldr	x0, [x29, #104]
    d904:	mov	x1, #0x4                   	// #4
    d908:	movk	x1, #0x8000, lsl #48
    d90c:	ldr	x0, [x0, #16]
    d910:	sub	x20, x23, x0
    d914:	cmp	x0, x1
    d918:	b.ne	d92c <mpfr_add1@@Base+0x198>  // b.any
    d91c:	ldr	x1, [x29, #104]
    d920:	mov	x0, x28
    d924:	bl	cb90 <mpfr_ubf_diff_exp@plt>
    d928:	mov	x20, x0
    d92c:	ldr	x0, [x29, #112]
    d930:	cmp	x0, x20
    d934:	b.hi	db5c <mpfr_add1@@Base+0x3c8>  // b.pmore
    d938:	ldr	x0, [x29, #128]
    d93c:	cmp	x0, x19
    d940:	b.le	db34 <mpfr_add1@@Base+0x3a0>
    d944:	sub	x0, x0, x19
    d948:	lsl	x28, x0, #3
    d94c:	add	x0, x27, x0, lsl #3
    d950:	cmp	x0, x26
    d954:	b.eq	d968 <mpfr_add1@@Base+0x1d4>  // b.none
    d958:	add	x1, x19, #0x1
    d95c:	lsl	x2, x1, #3
    d960:	mov	x1, x26
    d964:	bl	ba90 <memcpy@plt>
    d968:	mov	x2, x28
    d96c:	mov	x0, x27
    d970:	mov	w1, #0x0                   	// #0
    d974:	bl	c1a0 <memset@plt>
    d978:	mov	w4, #0xffffffff            	// #-1
    d97c:	mov	w28, w4
    d980:	cmp	w28, #0x0
    d984:	ccmp	w25, #0x0, #0x4, lt  // lt = tstop
    d988:	b.eq	d9d4 <mpfr_add1@@Base+0x240>  // b.none
    d98c:	ldr	x6, [x27]
    d990:	mov	x3, #0x1                   	// #1
    d994:	lsl	x0, x3, x25
    d998:	sub	x1, x0, #0x1
    d99c:	neg	x0, x0
    d9a0:	and	x2, x6, x1
    d9a4:	and	x0, x0, x6
    d9a8:	str	x0, [x27]
    d9ac:	sub	w0, w25, #0x1
    d9b0:	cmp	w25, #0x1
    d9b4:	lsr	x28, x2, x0
    d9b8:	b.le	d9d4 <mpfr_add1@@Base+0x240>
    d9bc:	lsr	x0, x1, #1
    d9c0:	ands	x1, x2, x1, lsr #1
    d9c4:	b.eq	dd68 <mpfr_add1@@Base+0x5d4>  // b.none
    d9c8:	cmp	x0, x1
    d9cc:	b.ne	dd8c <mpfr_add1@@Base+0x5f8>  // b.any
    d9d0:	mov	w4, w3
    d9d4:	mov	x2, #0x40                  	// #64
    d9d8:	ldr	x0, [x29, #136]
    d9dc:	sdiv	x1, x20, x2
    d9e0:	sub	x1, x0, x1
    d9e4:	ldr	x0, [x29, #128]
    d9e8:	cmp	x0, x19
    d9ec:	b.ge	dfc4 <mpfr_add1@@Base+0x830>  // b.tcont
    d9f0:	cmp	w4, #0x0
    d9f4:	ccmp	x1, #0x0, #0x0, eq  // eq = none
    d9f8:	b.le	df34 <mpfr_add1@@Base+0x7a0>
    d9fc:	sub	x19, x19, x0
    da00:	tbnz	x1, #63, dd70 <mpfr_add1@@Base+0x5dc>
    da04:	ldr	x0, [x29, #120]
    da08:	cmp	x1, x0
    da0c:	b.gt	e18c <mpfr_add1@@Base+0x9f8>
    da10:	and	x20, x20, #0x3f
    da14:	sub	x1, x0, x1
    da18:	cmp	w20, #0x0
    da1c:	mov	w7, w20
    da20:	ccmp	x1, #0x0, #0x0, eq  // eq = none
    da24:	b.eq	e18c <mpfr_add1@@Base+0x9f8>  // b.none
    da28:	cmp	x0, x1
    da2c:	b.eq	dde4 <mpfr_add1@@Base+0x650>  // b.none
    da30:	ldr	x6, [x24, x1, lsl #3]
    da34:	cmn	w4, #0x1
    da38:	b.ne	de60 <mpfr_add1@@Base+0x6cc>  // b.any
    da3c:	sub	x1, x1, #0x1
    da40:	cbz	x20, ddec <mpfr_add1@@Base+0x658>
    da44:	neg	w0, w20
    da48:	lsl	x2, x6, x0
    da4c:	tbnz	x1, #63, da5c <mpfr_add1@@Base+0x2c8>
    da50:	ldr	x6, [x24, x1, lsl #3]
    da54:	lsr	x0, x6, x20
    da58:	add	x2, x2, x0
    da5c:	sub	x19, x19, #0x1
    da60:	ldr	x0, [x26, x19, lsl #3]
    da64:	adds	x0, x0, x2
    da68:	mov	x3, x0
    da6c:	b.cc	da9c <mpfr_add1@@Base+0x308>  // b.lo, b.ul, b.last
    da70:	tbnz	w28, #31, da84 <mpfr_add1@@Base+0x2f0>
    da74:	eor	w2, w28, #0x1
    da78:	cmp	w28, #0x1
    da7c:	mov	w28, w2
    da80:	b.ne	de4c <mpfr_add1@@Base+0x6b8>  // b.any
    da84:	ldr	x8, [x27]
    da88:	mov	x2, #0x1                   	// #1
    da8c:	lsl	x4, x2, x25
    da90:	adds	x4, x4, x8
    da94:	str	x4, [x27]
    da98:	b.cs	de08 <mpfr_add1@@Base+0x674>  // b.hs, b.nlast
    da9c:	tbz	w28, #31, de4c <mpfr_add1@@Base+0x6b8>
    daa0:	ubfx	x3, x0, #62, #1
    daa4:	lsr	x28, x0, #63
    daa8:	orr	x3, x3, x0, lsl #1
    daac:	b	de4c <mpfr_add1@@Base+0x6b8>
    dab0:	mov	x1, x20
    dab4:	add	x0, x29, #0x98
    dab8:	bl	be40 <mpfr_tmp_allocate@plt>
    dabc:	mov	x26, x0
    dac0:	b	d8c4 <mpfr_add1@@Base+0x130>
    dac4:	cmp	x27, x24
    dac8:	b.ne	d8e4 <mpfr_add1@@Base+0x150>  // b.any
    dacc:	ldr	x0, [x29, #120]
    dad0:	lsl	x20, x0, #3
    dad4:	cmp	x20, #0x4, lsl #12
    dad8:	b.hi	db08 <mpfr_add1@@Base+0x374>  // b.pmore
    dadc:	add	x0, x20, #0xf
    dae0:	and	x0, x0, #0xfffffffffffffff0
    dae4:	sub	sp, sp, x0
    dae8:	mov	x24, sp
    daec:	cmp	x24, x27
    daf0:	b.eq	d8e4 <mpfr_add1@@Base+0x150>  // b.none
    daf4:	mov	x2, x20
    daf8:	mov	x1, x27
    dafc:	mov	x0, x24
    db00:	bl	ba90 <memcpy@plt>
    db04:	b	d8e4 <mpfr_add1@@Base+0x150>
    db08:	mov	x1, x20
    db0c:	add	x0, x29, #0x98
    db10:	bl	be40 <mpfr_tmp_allocate@plt>
    db14:	mov	x24, x0
    db18:	b	daec <mpfr_add1@@Base+0x358>
    db1c:	cmp	w21, #0x3
    db20:	b.ne	d900 <mpfr_add1@@Base+0x16c>  // b.any
    db24:	cmp	w0, #0x0
    db28:	mov	w21, #0x4                   	// #4
    db2c:	csinc	w21, w21, wzr, lt  // lt = tstop
    db30:	b	d900 <mpfr_add1@@Base+0x16c>
    db34:	ldr	x0, [x29, #128]
    db38:	sub	x1, x19, x0
    db3c:	add	x1, x26, x1, lsl #3
    db40:	cmp	x1, x27
    db44:	b.eq	d978 <mpfr_add1@@Base+0x1e4>  // b.none
    db48:	ldr	x0, [x29, #136]
    db4c:	lsl	x2, x0, #3
    db50:	mov	x0, x27
    db54:	bl	ba90 <memcpy@plt>
    db58:	b	d978 <mpfr_add1@@Base+0x1e4>
    db5c:	ldr	x0, [x29, #112]
    db60:	sub	x2, x0, x20
    db64:	sub	x2, x2, #0x1
    db68:	ldr	x0, [x29, #96]
    db6c:	asr	x2, x2, #6
    db70:	add	x4, x2, #0x1
    db74:	cmp	x0, x2
    db78:	b.ge	db94 <mpfr_add1@@Base+0x400>  // b.tcont
    db7c:	sub	x2, x2, x0
    db80:	mov	w1, #0x0                   	// #0
    db84:	mov	x0, x27
    db88:	lsl	x2, x2, #3
    db8c:	bl	c1a0 <memset@plt>
    db90:	ldr	x4, [x29, #120]
    db94:	asr	x2, x20, #6
    db98:	ldr	x0, [x29, #136]
    db9c:	mov	w1, #0x0                   	// #0
    dba0:	lsl	x2, x2, #3
    dba4:	str	x4, [x29, #104]
    dba8:	sub	x28, x0, x20, asr #6
    dbac:	add	x28, x27, x28, lsl #3
    dbb0:	mov	x0, x28
    dbb4:	bl	c1a0 <memset@plt>
    dbb8:	ldr	x4, [x29, #104]
    dbbc:	ands	x3, x20, #0x3f
    dbc0:	ldr	x0, [x29, #120]
    dbc4:	lsl	x7, x4, #3
    dbc8:	sub	x6, x28, x4, lsl #3
    dbcc:	sub	x1, x0, x4
    dbd0:	b.eq	dc90 <mpfr_add1@@Base+0x4fc>  // b.none
    dbd4:	mov	x0, x6
    dbd8:	mov	x2, x4
    dbdc:	add	x1, x24, x1, lsl #3
    dbe0:	stp	x7, x6, [x29, #96]
    dbe4:	bl	bd60 <__gmpn_rshift@plt>
    dbe8:	ldp	x7, x6, [x29, #96]
    dbec:	cmp	x6, x27
    dbf0:	b.ls	dbfc <mpfr_add1@@Base+0x468>  // b.plast
    dbf4:	sub	x28, x28, x7
    dbf8:	stur	x0, [x28, #-8]
    dbfc:	ldr	x0, [x29, #128]
    dc00:	cmp	x0, x19
    dc04:	b.le	dcac <mpfr_add1@@Base+0x518>
    dc08:	sub	x1, x0, x19
    dc0c:	add	x3, x19, #0x1
    dc10:	mov	x2, x26
    dc14:	add	x1, x27, x1, lsl #3
    dc18:	mov	x0, x1
    dc1c:	bl	c630 <__gmpn_add_n@plt>
    dc20:	cbz	x0, d978 <mpfr_add1@@Base+0x1e4>
    dc24:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    dc28:	ldr	x1, [x0, #2560]
    dc2c:	add	x0, x0, #0xa00
    dc30:	blr	x1
    dc34:	mrs	x1, tpidr_el0
    dc38:	ldr	x0, [x1, x0]
    dc3c:	cmp	x23, x0
    dc40:	b.ne	dcc4 <mpfr_add1@@Base+0x530>  // b.any
    dc44:	ldr	w2, [x22, #8]
    dc48:	mov	w1, w21
    dc4c:	mov	x0, x22
    dc50:	bl	bfc0 <mpfr_overflow@plt>
    dc54:	mov	w28, w0
    dc58:	ldr	x0, [x29, #152]
    dc5c:	cbz	x0, dc64 <mpfr_add1@@Base+0x4d0>
    dc60:	bl	c4a0 <mpfr_tmp_free@plt>
    dc64:	cbz	w28, d814 <mpfr_add1@@Base+0x80>
    dc68:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    dc6c:	ldr	x1, [x0, #2592]
    dc70:	add	x0, x0, #0xa20
    dc74:	blr	x1
    dc78:	mrs	x1, tpidr_el0
    dc7c:	add	x0, x1, x0
    dc80:	ldr	w1, [x0]
    dc84:	orr	w1, w1, #0x8
    dc88:	str	w1, [x0]
    dc8c:	b	d814 <mpfr_add1@@Base+0x80>
    dc90:	add	x1, x24, x1, lsl #3
    dc94:	cmp	x6, x1
    dc98:	b.eq	dbfc <mpfr_add1@@Base+0x468>  // b.none
    dc9c:	mov	x2, x7
    dca0:	mov	x0, x6
    dca4:	bl	ba90 <memcpy@plt>
    dca8:	b	dbfc <mpfr_add1@@Base+0x468>
    dcac:	ldp	x0, x3, [x29, #128]
    dcb0:	mov	x1, x27
    dcb4:	sub	x2, x19, x0
    dcb8:	mov	x0, x27
    dcbc:	add	x2, x26, x2, lsl #3
    dcc0:	b	dc1c <mpfr_add1@@Base+0x488>
    dcc4:	ldr	x1, [x27]
    dcc8:	cmp	w25, #0x0
    dccc:	add	x23, x23, #0x1
    dcd0:	cset	w6, ne  // ne = any
    dcd4:	lsr	x0, x1, x25
    dcd8:	and	w28, w0, #0x1
    dcdc:	cbz	w25, dd08 <mpfr_add1@@Base+0x574>
    dce0:	mov	x4, #0x1                   	// #1
    dce4:	lsl	x2, x4, x25
    dce8:	sub	x3, x2, #0x1
    dcec:	neg	x2, x2, lsl #1
    dcf0:	and	x2, x2, x1
    dcf4:	str	x2, [x27]
    dcf8:	ands	x1, x1, x3
    dcfc:	b.eq	dd60 <mpfr_add1@@Base+0x5cc>  // b.none
    dd00:	cmp	x3, x1
    dd04:	b.eq	dd0c <mpfr_add1@@Base+0x578>  // b.none
    dd08:	mov	w4, #0xffffffff            	// #-1
    dd0c:	ldr	x2, [x29, #136]
    dd10:	mov	x1, x27
    dd14:	mov	x0, x27
    dd18:	mov	w3, #0x1                   	// #1
    dd1c:	str	w4, [x29, #96]
    dd20:	str	w6, [x29, #104]
    dd24:	bl	bd60 <__gmpn_rshift@plt>
    dd28:	ldr	x0, [x29, #136]
    dd2c:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
    dd30:	ldr	w4, [x29, #96]
    dd34:	ldr	w6, [x29, #104]
    dd38:	lsl	x0, x0, #3
    dd3c:	cmp	w4, #0x0
    dd40:	sub	x0, x0, #0x8
    dd44:	ccmp	w6, #0x0, #0x4, lt  // lt = tstop
    dd48:	ldr	x1, [x27, x0]
    dd4c:	add	x1, x1, x2
    dd50:	str	x1, [x27, x0]
    dd54:	b.eq	d980 <mpfr_add1@@Base+0x1ec>  // b.none
    dd58:	mov	w4, #0xffffffff            	// #-1
    dd5c:	b	dd8c <mpfr_add1@@Base+0x5f8>
    dd60:	mov	w4, #0x0                   	// #0
    dd64:	b	dd0c <mpfr_add1@@Base+0x578>
    dd68:	mov	w4, #0x0                   	// #0
    dd6c:	b	d9d4 <mpfr_add1@@Base+0x240>
    dd70:	sub	x19, x19, #0x1
    dd74:	cmp	w4, #0x1
    dd78:	ldr	x0, [x26, x19, lsl #3]
    dd7c:	b.ne	ddc0 <mpfr_add1@@Base+0x62c>  // b.any
    dd80:	cmp	w21, #0x5
    dd84:	ccmn	x0, #0x1, #0x0, ne  // ne = any
    dd88:	b.eq	ddd4 <mpfr_add1@@Base+0x640>  // b.none
    dd8c:	cmp	w21, #0x0
    dd90:	ccmp	w21, #0x5, #0x4, ne  // ne = any
    dd94:	b.ne	e0c8 <mpfr_add1@@Base+0x934>  // b.any
    dd98:	cbnz	w4, e058 <mpfr_add1@@Base+0x8c4>
    dd9c:	cbz	w28, e0dc <mpfr_add1@@Base+0x948>
    dda0:	ldr	x0, [x27]
    dda4:	lsr	x0, x0, x25
    dda8:	tbnz	w0, #0, e05c <mpfr_add1@@Base+0x8c8>
    ddac:	ldr	w1, [x22, #8]
    ddb0:	mov	w0, #0xffffffff            	// #-1
    ddb4:	cmp	w1, #0x0
    ddb8:	cneg	w28, w0, lt  // lt = tstop
    ddbc:	b	e0dc <mpfr_add1@@Base+0x948>
    ddc0:	tbz	w28, #31, ddcc <mpfr_add1@@Base+0x638>
    ddc4:	lsr	x28, x0, #63
    ddc8:	orr	x0, x0, #0x8000000000000000
    ddcc:	cmn	x0, #0x1
    ddd0:	b.ne	df34 <mpfr_add1@@Base+0x7a0>  // b.any
    ddd4:	cbz	x19, df34 <mpfr_add1@@Base+0x7a0>
    ddd8:	add	x1, x1, #0x1
    dddc:	mov	w4, #0x1                   	// #1
    dde0:	b	da00 <mpfr_add1@@Base+0x26c>
    dde4:	mov	x6, #0x0                   	// #0
    dde8:	b	da34 <mpfr_add1@@Base+0x2a0>
    ddec:	ldr	x2, [x24, x1, lsl #3]
    ddf0:	b	da5c <mpfr_add1@@Base+0x2c8>
    ddf4:	ldr	x4, [x27, x2, lsl #3]
    ddf8:	add	x4, x4, #0x1
    ddfc:	str	x4, [x27, x2, lsl #3]
    de00:	add	x2, x2, #0x1
    de04:	cbnz	x4, da9c <mpfr_add1@@Base+0x308>
    de08:	ldr	x4, [x29, #136]
    de0c:	cmp	x4, x2
    de10:	b.gt	ddf4 <mpfr_add1@@Base+0x660>
    de14:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    de18:	ldr	x2, [x0, #2560]
    de1c:	add	x0, x0, #0xa00
    de20:	blr	x2
    de24:	mrs	x2, tpidr_el0
    de28:	ldr	x0, [x2, x0]
    de2c:	cmp	x0, x23
    de30:	b.eq	dc44 <mpfr_add1@@Base+0x4b0>  // b.none
    de34:	ldr	x0, [x29, #136]
    de38:	add	x23, x23, #0x1
    de3c:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
    de40:	mov	w28, #0x0                   	// #0
    de44:	add	x0, x27, x0, lsl #3
    de48:	stur	x2, [x0, #-8]
    de4c:	cmp	x3, #0x0
    de50:	sub	x3, x3, #0x1
    de54:	cset	w4, ne  // ne = any
    de58:	cmn	x3, #0x3
    de5c:	b.ls	dd8c <mpfr_add1@@Base+0x5f8>  // b.plast
    de60:	cmp	w21, #0x5
    de64:	b.eq	dd8c <mpfr_add1@@Base+0x5f8>  // b.none
    de68:	ldr	x0, [x29, #136]
    de6c:	mov	x2, #0x1                   	// #1
    de70:	mov	w9, #0x40                  	// #64
    de74:	sub	x1, x1, #0x1
    de78:	sub	w9, w9, w7
    de7c:	mrs	x10, tpidr_el0
    de80:	add	x8, x27, x0, lsl #3
    de84:	lsl	x2, x2, x25
    de88:	sub	x8, x8, #0x8
    de8c:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
    de90:	add	x0, x1, #0x1
    de94:	cbnz	x19, dec4 <mpfr_add1@@Base+0x730>
    de98:	lsr	x1, x0, #63
    de9c:	and	w2, w4, #0x1
    dea0:	orr	w1, w2, w1
    dea4:	cbnz	w1, dd8c <mpfr_add1@@Base+0x5f8>
    dea8:	cbz	x20, deb8 <mpfr_add1@@Base+0x724>
    deac:	neg	w20, w20
    deb0:	lsl	x20, x6, x20
    deb4:	cbnz	x20, df34 <mpfr_add1@@Base+0x7a0>
    deb8:	cbnz	x0, dfb4 <mpfr_add1@@Base+0x820>
    debc:	mov	w4, #0x0                   	// #0
    dec0:	b	dd8c <mpfr_add1@@Base+0x5f8>
    dec4:	cbz	x20, df3c <mpfr_add1@@Base+0x7a8>
    dec8:	tbnz	x0, #63, e1b0 <mpfr_add1@@Base+0xa1c>
    decc:	cmn	x1, #0x1
    ded0:	lsl	x0, x6, x9
    ded4:	b.eq	dee4 <mpfr_add1@@Base+0x750>  // b.none
    ded8:	ldr	x6, [x24, x1, lsl #3]
    dedc:	lsr	x3, x6, x7
    dee0:	add	x0, x0, x3
    dee4:	sub	x19, x19, #0x1
    dee8:	ldr	x3, [x26, x19, lsl #3]
    deec:	adds	x12, x3, x0
    def0:	b.cc	df0c <mpfr_add1@@Base+0x778>  // b.lo, b.ul, b.last
    def4:	cmp	w4, #0x1
    def8:	b.ne	df34 <mpfr_add1@@Base+0x7a0>  // b.any
    defc:	cmp	w28, #0x1
    df00:	b.eq	df48 <mpfr_add1@@Base+0x7b4>  // b.none
    df04:	eor	w28, w28, #0x1
    df08:	mov	w4, #0x0                   	// #0
    df0c:	cmp	x12, #0x0
    df10:	eor	w0, w4, #0x1
    df14:	cset	w3, ne  // ne = any
    df18:	tst	w0, w3
    df1c:	b.ne	df34 <mpfr_add1@@Base+0x7a0>  // b.any
    df20:	cmn	x12, #0x1
    df24:	and	w0, w4, #0x1
    df28:	sub	x1, x1, #0x1
    df2c:	csel	w0, w0, wzr, ne  // ne = any
    df30:	cbz	w0, de90 <mpfr_add1@@Base+0x6fc>
    df34:	mov	w4, #0x1                   	// #1
    df38:	b	dd8c <mpfr_add1@@Base+0x5f8>
    df3c:	cbz	x0, e1b0 <mpfr_add1@@Base+0xa1c>
    df40:	ldr	x0, [x24, x1, lsl #3]
    df44:	b	dee4 <mpfr_add1@@Base+0x750>
    df48:	ldr	x0, [x27]
    df4c:	adds	x0, x2, x0
    df50:	str	x0, [x27]
    df54:	b.cs	dfac <mpfr_add1@@Base+0x818>  // b.hs, b.nlast
    df58:	mov	w4, #0x0                   	// #0
    df5c:	mov	w28, #0x0                   	// #0
    df60:	b	df0c <mpfr_add1@@Base+0x778>
    df64:	ldr	x3, [x27, x0, lsl #3]
    df68:	add	x3, x3, #0x1
    df6c:	str	x3, [x27, x0, lsl #3]
    df70:	add	x0, x0, #0x1
    df74:	cbnz	x3, df58 <mpfr_add1@@Base+0x7c4>
    df78:	ldr	x3, [x29, #136]
    df7c:	cmp	x3, x0
    df80:	b.gt	df64 <mpfr_add1@@Base+0x7d0>
    df84:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    df88:	ldr	x3, [x0, #2560]
    df8c:	add	x0, x0, #0xa00
    df90:	blr	x3
    df94:	ldr	x0, [x10, x0]
    df98:	cmp	x0, x23
    df9c:	b.eq	dc44 <mpfr_add1@@Base+0x4b0>  // b.none
    dfa0:	add	x23, x23, #0x1
    dfa4:	str	x11, [x8]
    dfa8:	b	df58 <mpfr_add1@@Base+0x7c4>
    dfac:	mov	x0, #0x1                   	// #1
    dfb0:	b	df78 <mpfr_add1@@Base+0x7e4>
    dfb4:	sub	x0, x0, #0x1
    dfb8:	ldr	x1, [x24, x0, lsl #3]
    dfbc:	cbz	x1, deb8 <mpfr_add1@@Base+0x724>
    dfc0:	b	df34 <mpfr_add1@@Base+0x7a0>
    dfc4:	cmp	w4, #0x1
    dfc8:	b.eq	dd8c <mpfr_add1@@Base+0x5f8>  // b.none
    dfcc:	ldr	x0, [x29, #120]
    dfd0:	cmp	x0, x1
    dfd4:	b.ge	dfe4 <mpfr_add1@@Base+0x850>  // b.tcont
    dfd8:	cmp	w28, #0x0
    dfdc:	csel	w28, w28, wzr, ge  // ge = tcont
    dfe0:	b	debc <mpfr_add1@@Base+0x728>
    dfe4:	ldr	x0, [x29, #112]
    dfe8:	cmp	x0, x20
    dfec:	b.cs	dffc <mpfr_add1@@Base+0x868>  // b.hs, b.nlast
    dff0:	cmp	w28, #0x0
    dff4:	csel	w28, w28, wzr, ge  // ge = tcont
    dff8:	b	df34 <mpfr_add1@@Base+0x7a0>
    dffc:	ldr	x0, [x29, #120]
    e000:	ands	x20, x20, #0x3f
    e004:	sub	x1, x0, x1
    e008:	ccmp	x1, #0x0, #0x0, eq  // eq = none
    e00c:	b.eq	dfd8 <mpfr_add1@@Base+0x844>  // b.none
    e010:	cbz	x20, e04c <mpfr_add1@@Base+0x8b8>
    e014:	sub	w2, w2, w20
    e018:	ldr	x20, [x24, x1, lsl #3]
    e01c:	lsl	x20, x20, x2
    e020:	tbz	w28, #31, e02c <mpfr_add1@@Base+0x898>
    e024:	lsr	x28, x20, #63
    e028:	and	x20, x20, #0x7fffffffffffffff
    e02c:	cmp	x20, #0x0
    e030:	ccmp	w21, #0x5, #0x0, eq  // eq = none
    e034:	b.eq	debc <mpfr_add1@@Base+0x728>  // b.none
    e038:	cbnz	x20, df34 <mpfr_add1@@Base+0x7a0>
    e03c:	cbz	x1, debc <mpfr_add1@@Base+0x728>
    e040:	sub	x1, x1, #0x1
    e044:	ldr	x20, [x24, x1, lsl #3]
    e048:	b	e038 <mpfr_add1@@Base+0x8a4>
    e04c:	sub	x1, x1, #0x1
    e050:	ldr	x20, [x24, x1, lsl #3]
    e054:	b	e020 <mpfr_add1@@Base+0x88c>
    e058:	cbz	w28, ddac <mpfr_add1@@Base+0x618>
    e05c:	ldr	w1, [x22, #8]
    e060:	mov	w0, #0x1                   	// #1
    e064:	cmp	w1, w0
    e068:	ldr	x1, [x27]
    e06c:	cneg	w28, w0, lt  // lt = tstop
    e070:	mov	x0, #0x1                   	// #1
    e074:	lsl	x25, x0, x25
    e078:	adds	x25, x25, x1
    e07c:	str	x25, [x27]
    e080:	b.cc	e0dc <mpfr_add1@@Base+0x948>  // b.lo, b.ul, b.last
    e084:	ldr	x1, [x29, #136]
    e088:	cmp	x1, x0
    e08c:	b.gt	e164 <mpfr_add1@@Base+0x9d0>
    e090:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    e094:	ldr	x1, [x0, #2560]
    e098:	add	x0, x0, #0xa00
    e09c:	blr	x1
    e0a0:	mrs	x1, tpidr_el0
    e0a4:	ldr	x0, [x1, x0]
    e0a8:	cmp	x0, x23
    e0ac:	b.eq	dc44 <mpfr_add1@@Base+0x4b0>  // b.none
    e0b0:	ldr	x0, [x29, #136]
    e0b4:	add	x23, x23, #0x1
    e0b8:	add	x27, x27, x0, lsl #3
    e0bc:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    e0c0:	stur	x0, [x27, #-8]
    e0c4:	b	e0dc <mpfr_add1@@Base+0x948>
    e0c8:	cmp	w21, #0x1
    e0cc:	orr	w0, w28, w4
    e0d0:	b.ne	e138 <mpfr_add1@@Base+0x9a4>  // b.any
    e0d4:	mov	w28, w0
    e0d8:	cbnz	w0, ddac <mpfr_add1@@Base+0x618>
    e0dc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    e0e0:	ldr	x1, [x0, #2528]
    e0e4:	add	x0, x0, #0x9e0
    e0e8:	blr	x1
    e0ec:	mrs	x1, tpidr_el0
    e0f0:	ldr	x0, [x1, x0]
    e0f4:	cmp	x0, x23
    e0f8:	b.le	e184 <mpfr_add1@@Base+0x9f0>
    e0fc:	cbnz	w21, e124 <mpfr_add1@@Base+0x990>
    e100:	sub	x0, x0, #0x1
    e104:	cmp	x0, x23
    e108:	b.gt	e17c <mpfr_add1@@Base+0x9e8>
    e10c:	cmn	w28, #0x1
    e110:	b.eq	e124 <mpfr_add1@@Base+0x990>  // b.none
    e114:	mov	x0, x22
    e118:	bl	bf80 <mpfr_powerof2_raw@plt>
    e11c:	cmp	w0, #0x0
    e120:	cset	w21, ne  // ne = any
    e124:	ldr	w2, [x22, #8]
    e128:	mov	w1, w21
    e12c:	mov	x0, x22
    e130:	bl	c450 <mpfr_underflow@plt>
    e134:	b	dc54 <mpfr_add1@@Base+0x4c0>
    e138:	cmp	w21, #0x4
    e13c:	b.eq	e158 <mpfr_add1@@Base+0x9c4>  // b.none
    e140:	adrp	x2, 53000 <mpfr_free_pool@@Base+0x1eec>
    e144:	adrp	x0, 53000 <mpfr_free_pool@@Base+0x1eec>
    e148:	add	x2, x2, #0x83d
    e14c:	add	x0, x0, #0x853
    e150:	mov	w1, #0x221                 	// #545
    e154:	bl	cbd0 <mpfr_assert_fail@plt>
    e158:	mov	w28, w0
    e15c:	cbz	w0, e0dc <mpfr_add1@@Base+0x948>
    e160:	b	e05c <mpfr_add1@@Base+0x8c8>
    e164:	ldr	x1, [x27, x0, lsl #3]
    e168:	add	x1, x1, #0x1
    e16c:	str	x1, [x27, x0, lsl #3]
    e170:	add	x0, x0, #0x1
    e174:	cbz	x1, e084 <mpfr_add1@@Base+0x8f0>
    e178:	b	e0dc <mpfr_add1@@Base+0x948>
    e17c:	mov	w21, #0x1                   	// #1
    e180:	b	e124 <mpfr_add1@@Base+0x990>
    e184:	str	x23, [x22, #16]
    e188:	b	dc58 <mpfr_add1@@Base+0x4c4>
    e18c:	cmn	w4, #0x1
    e190:	b.ne	e1b0 <mpfr_add1@@Base+0xa1c>  // b.any
    e194:	sub	x19, x19, #0x1
    e198:	ldr	x0, [x26, x19, lsl #3]
    e19c:	tbz	w28, #31, e1a8 <mpfr_add1@@Base+0xa14>
    e1a0:	lsr	x28, x0, #63
    e1a4:	and	x0, x0, #0x7fffffffffffffff
    e1a8:	cmp	x0, #0x0
    e1ac:	cset	w4, ne  // ne = any
    e1b0:	cmp	w21, #0x5
    e1b4:	and	w0, w4, #0x1
    e1b8:	csinc	w0, w0, wzr, ne  // ne = any
    e1bc:	cbnz	w0, dd8c <mpfr_add1@@Base+0x5f8>
    e1c0:	cbz	x19, debc <mpfr_add1@@Base+0x728>
    e1c4:	sub	x19, x19, #0x1
    e1c8:	ldr	x0, [x26, x19, lsl #3]
    e1cc:	cbz	x0, e1c0 <mpfr_add1@@Base+0xa2c>
    e1d0:	b	df34 <mpfr_add1@@Base+0x7a0>

000000000000e1d4 <mpfr_add_ui@@Base>:
    e1d4:	stp	x29, x30, [sp, #-128]!
    e1d8:	mov	x5, x1
    e1dc:	mov	x29, sp
    e1e0:	stp	x19, x20, [sp, #16]
    e1e4:	stp	x21, x22, [sp, #32]
    e1e8:	mov	w21, w3
    e1ec:	stp	x23, x24, [sp, #48]
    e1f0:	stp	x25, x26, [sp, #64]
    e1f4:	cbnz	x2, e21c <mpfr_add_ui@@Base+0x48>
    e1f8:	mov	w2, w3
    e1fc:	ldr	w3, [x1, #8]
    e200:	bl	c730 <mpfr_set4@plt>
    e204:	ldp	x19, x20, [sp, #16]
    e208:	ldp	x21, x22, [sp, #32]
    e20c:	ldp	x23, x24, [sp, #48]
    e210:	ldp	x25, x26, [sp, #64]
    e214:	ldp	x29, x30, [sp], #128
    e218:	ret
    e21c:	mov	x4, x2
    e220:	mov	x6, #0x8000000000000003    	// #-9223372036854775805
    e224:	ldr	x2, [x1, #16]
    e228:	mov	x19, x0
    e22c:	cmp	x2, x6
    e230:	b.gt	e29c <mpfr_add_ui@@Base+0xc8>
    e234:	mov	x1, #0x2                   	// #2
    e238:	movk	x1, #0x8000, lsl #48
    e23c:	cmp	x2, x1
    e240:	b.ne	e274 <mpfr_add_ui@@Base+0xa0>  // b.any
    e244:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    e248:	ldr	x1, [x0, #2592]
    e24c:	add	x0, x0, #0xa20
    e250:	blr	x1
    e254:	str	x2, [x19, #16]
    e258:	mrs	x1, tpidr_el0
    e25c:	add	x0, x1, x0
    e260:	ldr	w1, [x0]
    e264:	orr	w1, w1, #0x4
    e268:	str	w1, [x0]
    e26c:	mov	w0, #0x0                   	// #0
    e270:	b	e204 <mpfr_add_ui@@Base+0x30>
    e274:	cmp	x2, x6
    e278:	b.ne	e28c <mpfr_add_ui@@Base+0xb8>  // b.any
    e27c:	ldr	w0, [x5, #8]
    e280:	str	w0, [x19, #8]
    e284:	str	x2, [x19, #16]
    e288:	b	e26c <mpfr_add_ui@@Base+0x98>
    e28c:	mov	x1, x4
    e290:	mov	x2, #0x0                   	// #0
    e294:	bl	c680 <mpfr_set_ui_2exp@plt>
    e298:	b	e204 <mpfr_add_ui@@Base+0x30>
    e29c:	clz	x5, x4
    e2a0:	add	x0, sp, #0x58
    e2a4:	str	x0, [sp, #120]
    e2a8:	mov	w0, #0x1                   	// #1
    e2ac:	lsl	x4, x4, x5
    e2b0:	mov	x2, #0x40                  	// #64
    e2b4:	stp	x4, x2, [sp, #88]
    e2b8:	sub	w2, w2, w5
    e2bc:	str	w0, [sp, #104]
    e2c0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    e2c4:	ldr	x4, [x0, #2592]
    e2c8:	add	x0, x0, #0xa20
    e2cc:	blr	x4
    e2d0:	mrs	x4, tpidr_el0
    e2d4:	sxtw	x2, w2
    e2d8:	add	x22, x4, x0
    e2dc:	str	x2, [sp, #112]
    e2e0:	add	x2, sp, #0x60
    e2e4:	ldr	w20, [x4, x0]
    e2e8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    e2ec:	ldr	x6, [x0, #2528]
    e2f0:	add	x0, x0, #0x9e0
    e2f4:	blr	x6
    e2f8:	add	x26, x4, x0
    e2fc:	ldr	x24, [x4, x0]
    e300:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    e304:	ldr	x6, [x0, #2560]
    e308:	add	x0, x0, #0xa00
    e30c:	blr	x6
    e310:	add	x25, x4, x0
    e314:	ldr	x23, [x4, x0]
    e318:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
    e31c:	str	x0, [x26]
    e320:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    e324:	str	x0, [x25]
    e328:	mov	x0, x19
    e32c:	bl	c230 <mpfr_add@plt>
    e330:	str	x23, [x25]
    e334:	ldr	w1, [x22]
    e338:	ldr	x2, [x19, #16]
    e33c:	orr	w1, w20, w1
    e340:	str	x24, [x26]
    e344:	str	w1, [x22]
    e348:	cmp	x24, x2
    e34c:	b.gt	e368 <mpfr_add_ui@@Base+0x194>
    e350:	cmp	x23, x2
    e354:	b.lt	e368 <mpfr_add_ui@@Base+0x194>  // b.tstop
    e358:	cbz	w0, e204 <mpfr_add_ui@@Base+0x30>
    e35c:	orr	w1, w1, #0x8
    e360:	str	w1, [x22]
    e364:	b	e204 <mpfr_add_ui@@Base+0x30>
    e368:	mov	w1, w0
    e36c:	mov	w2, w21
    e370:	mov	x0, x19
    e374:	bl	cbc0 <mpfr_check_range@plt>
    e378:	b	e204 <mpfr_add_ui@@Base+0x30>

000000000000e37c <mpfr_clear@@Base>:
    e37c:	stp	x29, x30, [sp, #-32]!
    e380:	mov	x29, sp
    e384:	str	x19, [sp, #16]
    e388:	mov	x19, x0
    e38c:	ldr	x0, [x0, #24]
    e390:	ldr	x1, [x0, #-8]!
    e394:	add	x1, x1, #0x1
    e398:	lsl	x1, x1, #3
    e39c:	bl	ccc0 <mpfr_free_func@plt>
    e3a0:	str	xzr, [x19, #24]
    e3a4:	ldr	x19, [sp, #16]
    e3a8:	ldp	x29, x30, [sp], #32
    e3ac:	ret

000000000000e3b0 <mpfr_cmp3@@Base>:
    e3b0:	mov	x4, x0
    e3b4:	ldr	w0, [x1, #8]
    e3b8:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
    e3bc:	mul	w0, w2, w0
    e3c0:	ldr	x2, [x4, #16]
    e3c4:	cmp	x2, x3
    e3c8:	b.le	e410 <mpfr_cmp3@@Base+0x60>
    e3cc:	ldr	x5, [x1, #16]
    e3d0:	cmp	x5, x3
    e3d4:	b.gt	e488 <mpfr_cmp3@@Base+0xd8>
    e3d8:	ldr	x1, [x1, #16]
    e3dc:	mov	x3, #0x2                   	// #2
    e3e0:	movk	x3, #0x8000, lsl #48
    e3e4:	cmp	x1, x3
    e3e8:	b.eq	e420 <mpfr_cmp3@@Base+0x70>  // b.none
    e3ec:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
    e3f0:	cmp	x2, x3
    e3f4:	b.ne	e458 <mpfr_cmp3@@Base+0xa8>  // b.any
    e3f8:	ldr	w3, [x4, #8]
    e3fc:	cmp	x1, x2
    e400:	b.ne	e51c <mpfr_cmp3@@Base+0x16c>  // b.any
    e404:	cmp	w0, w3
    e408:	csel	w0, w3, wzr, ne  // ne = any
    e40c:	ret
    e410:	mov	x3, #0x2                   	// #2
    e414:	movk	x3, #0x8000, lsl #48
    e418:	cmp	x2, x3
    e41c:	b.ne	e3d8 <mpfr_cmp3@@Base+0x28>  // b.any
    e420:	stp	x29, x30, [sp, #-16]!
    e424:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    e428:	ldr	x1, [x0, #2592]
    e42c:	add	x0, x0, #0xa20
    e430:	blr	x1
    e434:	mrs	x1, tpidr_el0
    e438:	add	x0, x1, x0
    e43c:	mov	x29, sp
    e440:	ldr	w1, [x0]
    e444:	orr	w1, w1, #0x10
    e448:	str	w1, [x0]
    e44c:	mov	w0, #0x0                   	// #0
    e450:	ldp	x29, x30, [sp], #16
    e454:	ret
    e458:	cmp	x1, x3
    e45c:	b.ne	e468 <mpfr_cmp3@@Base+0xb8>  // b.any
    e460:	neg	w0, w0
    e464:	ret
    e468:	mov	x3, #0x8000000000000001    	// #-9223372036854775807
    e46c:	cmp	x2, x3
    e470:	b.ne	e480 <mpfr_cmp3@@Base+0xd0>  // b.any
    e474:	cmp	x1, x2
    e478:	csneg	w0, wzr, w0, eq  // eq = none
    e47c:	ret
    e480:	ldr	w0, [x4, #8]
    e484:	ret
    e488:	ldr	w3, [x4, #8]
    e48c:	cmp	w3, w0
    e490:	b.ne	e51c <mpfr_cmp3@@Base+0x16c>  // b.any
    e494:	cmp	x2, x5
    e498:	b.gt	e524 <mpfr_cmp3@@Base+0x174>
    e49c:	b.lt	e460 <mpfr_cmp3@@Base+0xb0>  // b.tstop
    e4a0:	ldr	x2, [x1]
    e4a4:	ldr	x3, [x4]
    e4a8:	sub	x2, x2, #0x1
    e4ac:	ldr	x1, [x1, #24]
    e4b0:	sub	x3, x3, #0x1
    e4b4:	ldr	x4, [x4, #24]
    e4b8:	asr	x2, x2, #6
    e4bc:	asr	x3, x3, #6
    e4c0:	ldr	x6, [x4, x3, lsl #3]
    e4c4:	ldr	x5, [x1, x2, lsl #3]
    e4c8:	cmp	x6, x5
    e4cc:	b.hi	e524 <mpfr_cmp3@@Base+0x174>  // b.pmore
    e4d0:	b.cc	e460 <mpfr_cmp3@@Base+0xb0>  // b.lo, b.ul, b.last
    e4d4:	sub	x2, x2, #0x1
    e4d8:	subs	x3, x3, #0x1
    e4dc:	ccmp	x2, #0x0, #0x1, pl  // pl = nfrst
    e4e0:	b.ge	e4c0 <mpfr_cmp3@@Base+0x110>  // b.tcont
    e4e4:	cmn	x3, #0x1
    e4e8:	b.ne	e4fc <mpfr_cmp3@@Base+0x14c>  // b.any
    e4ec:	cmn	x2, #0x1
    e4f0:	b.ne	e50c <mpfr_cmp3@@Base+0x15c>  // b.any
    e4f4:	mov	w0, #0x0                   	// #0
    e4f8:	ret
    e4fc:	ldr	x5, [x4, x3, lsl #3]
    e500:	cbnz	x5, e524 <mpfr_cmp3@@Base+0x174>
    e504:	sub	x3, x3, #0x1
    e508:	b	e4e4 <mpfr_cmp3@@Base+0x134>
    e50c:	ldr	x3, [x1, x2, lsl #3]
    e510:	cbnz	x3, e460 <mpfr_cmp3@@Base+0xb0>
    e514:	sub	x2, x2, #0x1
    e518:	b	e4ec <mpfr_cmp3@@Base+0x13c>
    e51c:	mov	w0, w3
    e520:	ret
    e524:	ret

000000000000e528 <mpfr_div_2si@@Base>:
    e528:	stp	x29, x30, [sp, #-80]!
    e52c:	mov	x29, sp
    e530:	stp	x23, x24, [sp, #48]
    e534:	ldr	x23, [x1, #16]
    e538:	stp	x19, x20, [sp, #16]
    e53c:	mov	w20, w3
    e540:	stp	x21, x22, [sp, #32]
    e544:	mov	x21, x2
    e548:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
    e54c:	str	x25, [sp, #64]
    e550:	cmp	x23, x2
    e554:	b.gt	e578 <mpfr_div_2si@@Base+0x50>
    e558:	ldp	x19, x20, [sp, #16]
    e55c:	mov	w2, w3
    e560:	ldp	x21, x22, [sp, #32]
    e564:	ldp	x23, x24, [sp, #48]
    e568:	ldr	x25, [sp, #64]
    e56c:	ldp	x29, x30, [sp], #80
    e570:	ldr	w3, [x1, #8]
    e574:	b	c730 <mpfr_set4@plt>
    e578:	mov	x22, x0
    e57c:	cmp	x1, x0
    e580:	b.eq	e5c4 <mpfr_div_2si@@Base+0x9c>  // b.none
    e584:	ldr	w24, [x1, #8]
    e588:	ldr	x4, [x1]
    e58c:	ldr	x5, [x0]
    e590:	ldr	x1, [x1, #24]
    e594:	str	w24, [x0, #8]
    e598:	cmp	x5, x4
    e59c:	ldr	x19, [x0, #24]
    e5a0:	b.ne	e5cc <mpfr_div_2si@@Base+0xa4>  // b.any
    e5a4:	cmp	x19, x1
    e5a8:	b.eq	e5c4 <mpfr_div_2si@@Base+0x9c>  // b.none
    e5ac:	sub	x5, x5, #0x1
    e5b0:	mov	x0, x19
    e5b4:	asr	x5, x5, #6
    e5b8:	add	x5, x5, #0x1
    e5bc:	lsl	x2, x5, #3
    e5c0:	bl	ba90 <memcpy@plt>
    e5c4:	mov	w24, #0x0                   	// #0
    e5c8:	b	e6c4 <mpfr_div_2si@@Base+0x19c>
    e5cc:	sub	x4, x4, #0x1
    e5d0:	sub	x0, x5, #0x1
    e5d4:	asr	x4, x4, #6
    e5d8:	asr	x0, x0, #6
    e5dc:	b.lt	e614 <mpfr_div_2si@@Base+0xec>  // b.tstop
    e5e0:	add	x2, x4, #0x1
    e5e4:	sub	x4, x0, x4
    e5e8:	add	x0, x19, x4, lsl #3
    e5ec:	lsl	x24, x4, #3
    e5f0:	cmp	x1, x0
    e5f4:	b.eq	e600 <mpfr_div_2si@@Base+0xd8>  // b.none
    e5f8:	lsl	x2, x2, #3
    e5fc:	bl	ba90 <memcpy@plt>
    e600:	mov	x2, x24
    e604:	mov	x0, x19
    e608:	mov	w1, #0x0                   	// #0
    e60c:	bl	c1a0 <memset@plt>
    e610:	b	e5c4 <mpfr_div_2si@@Base+0x9c>
    e614:	sub	x4, x4, x0
    e618:	neg	w5, w5
    e61c:	add	x2, x0, #0x1
    e620:	ands	w5, w5, #0x3f
    e624:	lsl	x8, x4, #3
    e628:	add	x0, x1, x4, lsl #3
    e62c:	b.eq	e760 <mpfr_div_2si@@Base+0x238>  // b.none
    e630:	sub	w7, w5, #0x1
    e634:	mov	x6, #0x1                   	// #1
    e638:	ldr	x5, [x1, x8]
    e63c:	lsl	x6, x6, x7
    e640:	cmp	w20, #0x0
    e644:	and	x3, x5, x6
    e648:	sub	x6, x6, #0x1
    e64c:	and	x5, x6, x5
    e650:	ccmp	x3, #0x0, #0x4, ne  // ne = any
    e654:	b.ne	e678 <mpfr_div_2si@@Base+0x150>  // b.any
    e658:	mov	x9, #0xfffffffffffffff8    	// #-8
    e65c:	madd	x9, x4, x9, x0
    e660:	cmp	x4, #0x0
    e664:	sub	x4, x4, #0x1
    e668:	cset	w6, ne  // ne = any
    e66c:	cmp	x5, #0x0
    e670:	csel	w6, w6, wzr, eq  // eq = none
    e674:	cbnz	w6, e758 <mpfr_div_2si@@Base+0x230>
    e678:	mov	x25, #0x2                   	// #2
    e67c:	lsl	x25, x25, x7
    e680:	cmp	w20, #0x5
    e684:	b.eq	e934 <mpfr_div_2si@@Base+0x40c>  // b.none
    e688:	cbnz	w20, e918 <mpfr_div_2si@@Base+0x3f0>
    e68c:	cbnz	x3, e7ac <mpfr_div_2si@@Base+0x284>
    e690:	orr	x5, x3, x5
    e694:	cmp	x5, #0x0
    e698:	csneg	w24, wzr, w24, eq  // eq = none
    e69c:	cmp	x19, x0
    e6a0:	b.eq	e6b4 <mpfr_div_2si@@Base+0x18c>  // b.none
    e6a4:	mov	x1, x0
    e6a8:	lsl	x2, x2, #3
    e6ac:	mov	x0, x19
    e6b0:	bl	ba90 <memcpy@plt>
    e6b4:	ldr	x0, [x19]
    e6b8:	neg	x7, x25
    e6bc:	and	x7, x0, x7
    e6c0:	str	x7, [x19]
    e6c4:	cmp	x21, #0x0
    e6c8:	mrs	x1, tpidr_el0
    e6cc:	b.le	e870 <mpfr_div_2si@@Base+0x348>
    e6d0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    e6d4:	ldr	x2, [x0, #2528]
    e6d8:	add	x0, x0, #0x9e0
    e6dc:	blr	x2
    e6e0:	ldr	x0, [x1, x0]
    e6e4:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
    e6e8:	sub	x2, x2, x21
    e6ec:	cmp	x2, x0
    e6f0:	b.lt	e700 <mpfr_div_2si@@Base+0x1d8>  // b.tstop
    e6f4:	add	x2, x0, x21
    e6f8:	cmp	x2, x23
    e6fc:	b.le	e8c4 <mpfr_div_2si@@Base+0x39c>
    e700:	ldr	w2, [x22, #8]
    e704:	cbnz	w20, e734 <mpfr_div_2si@@Base+0x20c>
    e708:	mov	x1, #0x4000000000000000    	// #4611686018427387904
    e70c:	sub	x1, x1, x21
    e710:	cmp	x0, x1
    e714:	b.gt	e868 <mpfr_div_2si@@Base+0x340>
    e718:	sub	x21, x21, #0x1
    e71c:	add	x0, x21, x0
    e720:	cmp	x0, x23
    e724:	b.gt	e868 <mpfr_div_2si@@Base+0x340>
    e728:	tbz	w2, #31, e850 <mpfr_div_2si@@Base+0x328>
    e72c:	cmp	w24, #0x0
    e730:	b.le	e854 <mpfr_div_2si@@Base+0x32c>
    e734:	ldr	w2, [x22, #8]
    e738:	mov	w1, w20
    e73c:	mov	x0, x22
    e740:	ldp	x19, x20, [sp, #16]
    e744:	ldp	x21, x22, [sp, #32]
    e748:	ldp	x23, x24, [sp, #48]
    e74c:	ldr	x25, [sp, #64]
    e750:	ldp	x29, x30, [sp], #80
    e754:	b	c450 <mpfr_underflow@plt>
    e758:	ldr	x5, [x9, x4, lsl #3]
    e75c:	b	e660 <mpfr_div_2si@@Base+0x138>
    e760:	ldur	x6, [x0, #-8]
    e764:	cmp	w3, #0x0
    e768:	and	x5, x6, #0x7fffffffffffffff
    e76c:	and	x3, x6, #0x8000000000000000
    e770:	ccmp	x6, #0x0, #0x0, ne  // ne = any
    e774:	b.lt	e90c <mpfr_div_2si@@Base+0x3e4>  // b.tstop
    e778:	mov	x7, #0xfffffffffffffff8    	// #-8
    e77c:	sub	x6, x4, #0x1
    e780:	madd	x4, x4, x7, x0
    e784:	cmp	x6, #0x0
    e788:	sub	x6, x6, #0x1
    e78c:	cset	w7, ne  // ne = any
    e790:	cmp	x5, #0x0
    e794:	csel	w7, w7, wzr, eq  // eq = none
    e798:	cbnz	w7, e7a4 <mpfr_div_2si@@Base+0x27c>
    e79c:	mov	x25, #0x1                   	// #1
    e7a0:	b	e680 <mpfr_div_2si@@Base+0x158>
    e7a4:	ldr	x5, [x4, x6, lsl #3]
    e7a8:	b	e784 <mpfr_div_2si@@Base+0x25c>
    e7ac:	ldr	x3, [x1, x8]
    e7b0:	and	x3, x25, x3
    e7b4:	orr	x5, x3, x5
    e7b8:	cbnz	x5, e7c4 <mpfr_div_2si@@Base+0x29c>
    e7bc:	neg	w24, w24
    e7c0:	b	e69c <mpfr_div_2si@@Base+0x174>
    e7c4:	ldr	x1, [x1, x8]
    e7c8:	adds	x1, x1, x25
    e7cc:	str	x1, [x19]
    e7d0:	b.cs	e818 <mpfr_div_2si@@Base+0x2f0>  // b.hs, b.nlast
    e7d4:	cmp	x19, x0
    e7d8:	b.eq	e6b4 <mpfr_div_2si@@Base+0x18c>  // b.none
    e7dc:	mov	x1, #0x1                   	// #1
    e7e0:	b	e844 <mpfr_div_2si@@Base+0x31c>
    e7e4:	ldr	x3, [x0, x1, lsl #3]
    e7e8:	add	x3, x3, #0x1
    e7ec:	str	x3, [x19, x1, lsl #3]
    e7f0:	add	x1, x1, #0x1
    e7f4:	cbz	x3, e81c <mpfr_div_2si@@Base+0x2f4>
    e7f8:	cmp	x19, x0
    e7fc:	b.eq	e6b4 <mpfr_div_2si@@Base+0x18c>  // b.none
    e800:	cmp	x2, x1
    e804:	b.le	e6b4 <mpfr_div_2si@@Base+0x18c>
    e808:	ldr	x3, [x0, x1, lsl #3]
    e80c:	str	x3, [x19, x1, lsl #3]
    e810:	add	x1, x1, #0x1
    e814:	b	e800 <mpfr_div_2si@@Base+0x2d8>
    e818:	mov	x1, #0x1                   	// #1
    e81c:	cmp	x2, x1
    e820:	b.gt	e7e4 <mpfr_div_2si@@Base+0x2bc>
    e824:	add	x2, x19, x2, lsl #3
    e828:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    e82c:	add	x23, x23, #0x1
    e830:	stur	x0, [x2, #-8]
    e834:	b	e6b4 <mpfr_div_2si@@Base+0x18c>
    e838:	ldr	x3, [x0, x1, lsl #3]
    e83c:	str	x3, [x19, x1, lsl #3]
    e840:	add	x1, x1, #0x1
    e844:	cmp	x2, x1
    e848:	b.gt	e838 <mpfr_div_2si@@Base+0x310>
    e84c:	b	e6b4 <mpfr_div_2si@@Base+0x18c>
    e850:	tbnz	w24, #31, e734 <mpfr_div_2si@@Base+0x20c>
    e854:	mov	x0, x22
    e858:	bl	bf80 <mpfr_powerof2_raw@plt>
    e85c:	cmp	w0, #0x0
    e860:	cset	w20, ne  // ne = any
    e864:	b	e734 <mpfr_div_2si@@Base+0x20c>
    e868:	mov	w20, #0x1                   	// #1
    e86c:	b	e734 <mpfr_div_2si@@Base+0x20c>
    e870:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    e874:	ldr	x2, [x0, #2560]
    e878:	add	x0, x0, #0xa00
    e87c:	blr	x2
    e880:	ldr	x0, [x1, x0]
    e884:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
    e888:	sub	x2, x2, x21
    e88c:	cmp	x2, x0
    e890:	b.gt	e8a0 <mpfr_div_2si@@Base+0x378>
    e894:	add	x0, x0, x21
    e898:	cmp	x0, x23
    e89c:	b.ge	e8c4 <mpfr_div_2si@@Base+0x39c>  // b.tcont
    e8a0:	ldr	w2, [x22, #8]
    e8a4:	mov	w1, w20
    e8a8:	mov	x0, x22
    e8ac:	ldp	x19, x20, [sp, #16]
    e8b0:	ldp	x21, x22, [sp, #32]
    e8b4:	ldp	x23, x24, [sp, #48]
    e8b8:	ldr	x25, [sp, #64]
    e8bc:	ldp	x29, x30, [sp], #80
    e8c0:	b	bfc0 <mpfr_overflow@plt>
    e8c4:	sub	x21, x23, x21
    e8c8:	str	x21, [x22, #16]
    e8cc:	cbz	w24, e8f0 <mpfr_div_2si@@Base+0x3c8>
    e8d0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    e8d4:	ldr	x2, [x0, #2592]
    e8d8:	add	x0, x0, #0xa20
    e8dc:	blr	x2
    e8e0:	add	x0, x1, x0
    e8e4:	ldr	w1, [x0]
    e8e8:	orr	w1, w1, #0x8
    e8ec:	str	w1, [x0]
    e8f0:	mov	w0, w24
    e8f4:	ldp	x19, x20, [sp, #16]
    e8f8:	ldp	x21, x22, [sp, #32]
    e8fc:	ldp	x23, x24, [sp, #48]
    e900:	ldr	x25, [sp, #64]
    e904:	ldp	x29, x30, [sp], #80
    e908:	ret
    e90c:	cmp	w20, #0x5
    e910:	mov	x25, #0x1                   	// #1
    e914:	b.eq	e934 <mpfr_div_2si@@Base+0x40c>  // b.none
    e918:	cmp	w20, #0x1
    e91c:	b.eq	e690 <mpfr_div_2si@@Base+0x168>  // b.none
    e920:	add	w4, w20, w24, lsr #31
    e924:	cmp	w4, #0x3
    e928:	b.eq	e690 <mpfr_div_2si@@Base+0x168>  // b.none
    e92c:	orr	x5, x3, x5
    e930:	cbnz	x5, e7c4 <mpfr_div_2si@@Base+0x29c>
    e934:	mov	w24, #0x0                   	// #0
    e938:	b	e69c <mpfr_div_2si@@Base+0x174>

000000000000e93c <mpfr_div@@Base>:
    e93c:	stp	x29, x30, [sp, #-272]!
    e940:	mov	x29, sp
    e944:	stp	x23, x24, [sp, #48]
    e948:	mov	x23, x1
    e94c:	ldr	x1, [x1, #16]
    e950:	stp	x19, x20, [sp, #16]
    e954:	mov	x20, x0
    e958:	stp	x21, x22, [sp, #32]
    e95c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    e960:	mov	x22, x2
    e964:	stp	x25, x26, [sp, #64]
    e968:	cmp	x1, x0
    e96c:	stp	x27, x28, [sp, #80]
    e970:	b.le	e9c0 <mpfr_div@@Base+0x84>
    e974:	ldr	x25, [x2, #16]
    e978:	cmp	x25, x0
    e97c:	b.gt	ea8c <mpfr_div@@Base+0x150>
    e980:	ldr	x2, [x22, #16]
    e984:	mov	x4, #0x2                   	// #2
    e988:	movk	x4, #0x8000, lsl #48
    e98c:	cmp	x2, x4
    e990:	b.eq	e9d0 <mpfr_div@@Base+0x94>  // b.none
    e994:	ldr	w3, [x22, #8]
    e998:	ldr	w0, [x23, #8]
    e99c:	mul	w0, w0, w3
    e9a0:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
    e9a4:	str	w0, [x20, #8]
    e9a8:	cmp	x1, x3
    e9ac:	b.ne	ea30 <mpfr_div@@Base+0xf4>  // b.any
    e9b0:	cmp	x2, x1
    e9b4:	b.ne	ea28 <mpfr_div@@Base+0xec>  // b.any
    e9b8:	str	x4, [x20, #16]
    e9bc:	b	e9dc <mpfr_div@@Base+0xa0>
    e9c0:	mov	x0, #0x2                   	// #2
    e9c4:	movk	x0, #0x8000, lsl #48
    e9c8:	cmp	x1, x0
    e9cc:	b.ne	e980 <mpfr_div@@Base+0x44>  // b.any
    e9d0:	mov	x0, #0x2                   	// #2
    e9d4:	movk	x0, #0x8000, lsl #48
    e9d8:	str	x0, [x20, #16]
    e9dc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    e9e0:	ldr	x1, [x0, #2592]
    e9e4:	add	x0, x0, #0xa20
    e9e8:	blr	x1
    e9ec:	mrs	x1, tpidr_el0
    e9f0:	add	x0, x1, x0
    e9f4:	ldr	w1, [x0]
    e9f8:	orr	w1, w1, #0x4
    e9fc:	str	w1, [x0]
    ea00:	mov	w28, #0x0                   	// #0
    ea04:	mov	sp, x29
    ea08:	mov	w0, w28
    ea0c:	ldp	x19, x20, [sp, #16]
    ea10:	ldp	x21, x22, [sp, #32]
    ea14:	ldp	x23, x24, [sp, #48]
    ea18:	ldp	x25, x26, [sp, #64]
    ea1c:	ldp	x27, x28, [sp, #80]
    ea20:	ldp	x29, x30, [sp], #272
    ea24:	ret
    ea28:	str	x1, [x20, #16]
    ea2c:	b	ea00 <mpfr_div@@Base+0xc4>
    ea30:	cmp	x2, x3
    ea34:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    ea38:	b.ne	ea44 <mpfr_div@@Base+0x108>  // b.any
    ea3c:	str	x0, [x20, #16]
    ea40:	b	ea00 <mpfr_div@@Base+0xc4>
    ea44:	cmp	x2, x0
    ea48:	b.ne	ea3c <mpfr_div@@Base+0x100>  // b.any
    ea4c:	mrs	x6, tpidr_el0
    ea50:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    ea54:	ldr	x5, [x0, #2592]
    ea58:	add	x0, x0, #0xa20
    ea5c:	blr	x5
    ea60:	cmp	x1, x2
    ea64:	add	x5, x6, x0
    ea68:	ldr	w0, [x6, x0]
    ea6c:	b.ne	ea80 <mpfr_div@@Base+0x144>  // b.any
    ea70:	orr	w0, w0, #0x4
    ea74:	str	x4, [x20, #16]
    ea78:	str	w0, [x5]
    ea7c:	b	ea00 <mpfr_div@@Base+0xc4>
    ea80:	orr	w0, w0, #0x20
    ea84:	str	x3, [x20, #16]
    ea88:	b	ea78 <mpfr_div@@Base+0x13c>
    ea8c:	ldr	x24, [x2]
    ea90:	mov	w19, w3
    ea94:	ldr	x2, [x23, #24]
    ea98:	str	x2, [x29, #216]
    ea9c:	ldr	x26, [x20]
    eaa0:	ldr	x0, [x23]
    eaa4:	ldr	x2, [x22, #24]
    eaa8:	str	x2, [x29, #208]
    eaac:	cmp	x0, x26
    eab0:	ldr	x21, [x20, #24]
    eab4:	b.ne	f2c8 <mpfr_div@@Base+0x98c>  // b.any
    eab8:	cmp	x0, x24
    eabc:	b.ne	f2c8 <mpfr_div@@Base+0x98c>  // b.any
    eac0:	cmp	x0, #0x3f
    eac4:	b.gt	ed70 <mpfr_div@@Base+0x434>
    eac8:	sub	x5, x1, x25
    eacc:	mov	x7, #0x1                   	// #1
    ead0:	ldr	x1, [x29, #216]
    ead4:	ldr	x8, [x2]
    ead8:	ldr	x6, [x1]
    eadc:	mov	x1, #0x40                  	// #64
    eae0:	sub	x0, x1, x0
    eae4:	cmp	x6, x8
    eae8:	lsl	x7, x7, x0
    eaec:	cset	w1, cs  // cs = hs, nlast
    eaf0:	sub	x9, x7, #0x1
    eaf4:	b.cc	eafc <mpfr_div@@Base+0x1c0>  // b.lo, b.ul, b.last
    eaf8:	sub	x6, x6, x8
    eafc:	lsr	x10, x8, #55
    eb00:	adrp	x4, 53000 <mpfr_free_pool@@Base+0x1eec>
    eb04:	sub	x10, x10, #0x100
    eb08:	add	x4, x4, #0xa10
    eb0c:	lsr	x2, x8, #24
    eb10:	ldr	x3, [x4, x10, lsl #3]
    eb14:	add	x4, x4, #0x800
    eb18:	sub	x11, x3, #0x1
    eb1c:	ldr	x3, [x4, x10, lsl #3]
    eb20:	madd	x3, x2, x3, x3
    eb24:	sub	x3, x11, x3, lsr #40
    eb28:	madd	x4, x2, x3, x3
    eb2c:	mov	x2, #0x1000000000000000    	// #1152921504606846976
    eb30:	sub	x2, x2, x4
    eb34:	sub	x4, x8, #0x1
    eb38:	lsr	x4, x4, #1
    eb3c:	mul	x2, x2, x3
    eb40:	lsl	x3, x3, #13
    eb44:	add	x2, x3, x2, lsr #47
    eb48:	sbfx	x3, x8, #0, #1
    eb4c:	and	x3, x3, x2
    eb50:	madd	x4, x4, x2, x2
    eb54:	lsr	x3, x3, #1
    eb58:	sub	x3, x3, x4
    eb5c:	lsr	x4, x9, #1
    eb60:	umulh	x3, x2, x3
    eb64:	lsr	x3, x3, #1
    eb68:	add	x2, x3, x2, lsl #31
    eb6c:	umulh	x2, x6, x2
    eb70:	add	x2, x2, x6
    eb74:	lsr	x3, x2, x1
    eb78:	add	x10, x3, #0x2
    eb7c:	and	x9, x10, x9, lsr #1
    eb80:	cmp	x9, #0x2
    eb84:	b.ls	ebf4 <mpfr_div@@Base+0x2b8>  // b.plast
    eb88:	sub	w0, w0, #0x1
    eb8c:	mov	x2, #0x1                   	// #1
    eb90:	lsl	x0, x2, x0
    eb94:	and	x6, x0, x3
    eb98:	ldr	w0, [x22, #8]
    eb9c:	orr	x3, x3, #0x8000000000000000
    eba0:	ldr	w4, [x23, #8]
    eba4:	neg	x8, x7
    eba8:	and	x8, x3, x8
    ebac:	str	x8, [x21]
    ebb0:	and	x1, x1, #0xff
    ebb4:	add	x1, x1, x5
    ebb8:	mul	w28, w4, w0
    ebbc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    ebc0:	ldr	x3, [x0, #2560]
    ebc4:	add	x0, x0, #0xa00
    ebc8:	blr	x3
    ebcc:	mrs	x3, tpidr_el0
    ebd0:	str	w28, [x20, #8]
    ebd4:	ldr	x0, [x3, x0]
    ebd8:	cmp	x1, x0
    ebdc:	b.le	ec58 <mpfr_div@@Base+0x31c>
    ebe0:	mov	w2, w28
    ebe4:	mov	w1, w19
    ebe8:	mov	x0, x20
    ebec:	bl	bfc0 <mpfr_overflow@plt>
    ebf0:	b	f43c <mpfr_div@@Base+0xb00>
    ebf4:	umulh	x3, x2, x8
    ebf8:	mul	x10, x8, x2
    ebfc:	negs	x9, x10
    ec00:	sbc	x3, x6, x3
    ec04:	mov	x6, x9
    ec08:	cmp	x3, #0x0
    ec0c:	ccmp	x8, x6, #0x0, eq  // eq = none
    ec10:	b.ls	ec40 <mpfr_div@@Base+0x304>  // b.plast
    ec14:	and	x8, x1, #0xff
    ec18:	sub	w0, w0, #0x1
    ec1c:	and	x8, x8, x2
    ec20:	lsr	x3, x2, x1
    ec24:	orr	x8, x8, x6
    ec28:	and	x2, x4, x3
    ec2c:	mov	x6, #0x1                   	// #1
    ec30:	orr	x2, x2, x8
    ec34:	lsl	x0, x6, x0
    ec38:	and	x6, x0, x3
    ec3c:	b	eb98 <mpfr_div@@Base+0x25c>
    ec40:	cmp	x8, x6
    ec44:	add	x2, x2, #0x1
    ec48:	cset	x9, hi  // hi = pmore
    ec4c:	sub	x6, x6, x8
    ec50:	sub	x3, x3, x9
    ec54:	b	ec08 <mpfr_div@@Base+0x2cc>
    ec58:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    ec5c:	ldr	x4, [x0, #2528]
    ec60:	add	x0, x0, #0x9e0
    ec64:	blr	x4
    ec68:	ldr	x0, [x3, x0]
    ec6c:	cmp	x1, x0
    ec70:	b.ge	ecac <mpfr_div@@Base+0x370>  // b.tcont
    ec74:	cbnz	w19, ec98 <mpfr_div@@Base+0x35c>
    ec78:	sub	x0, x0, #0x1
    ec7c:	cmp	x1, x0
    ec80:	b.lt	f218 <mpfr_div@@Base+0x8dc>  // b.tstop
    ec84:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    ec88:	cmp	x8, x0
    ec8c:	b.ne	ec98 <mpfr_div@@Base+0x35c>  // b.any
    ec90:	cmp	x2, #0x0
    ec94:	cset	w19, eq  // eq = none
    ec98:	mov	w2, w28
    ec9c:	mov	w1, w19
    eca0:	mov	x0, x20
    eca4:	bl	c450 <mpfr_underflow@plt>
    eca8:	b	f43c <mpfr_div@@Base+0xb00>
    ecac:	str	x1, [x20, #16]
    ecb0:	orr	x2, x2, x6
    ecb4:	cbz	x2, ea00 <mpfr_div@@Base+0xc4>
    ecb8:	cmp	w19, #0x5
    ecbc:	b.eq	ea00 <mpfr_div@@Base+0xc4>  // b.none
    ecc0:	cbnz	w19, ed00 <mpfr_div@@Base+0x3c4>
    ecc4:	cbz	x6, ed14 <mpfr_div@@Base+0x3d8>
    ecc8:	ldr	x0, [x21]
    eccc:	adds	x7, x7, x0
    ecd0:	b.eq	ed40 <mpfr_div@@Base+0x404>  // b.none
    ecd4:	str	x7, [x21]
    ecd8:	cbz	w28, ea04 <mpfr_div@@Base+0xc8>
    ecdc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    ece0:	ldr	x1, [x0, #2592]
    ece4:	add	x0, x0, #0xa20
    ece8:	blr	x1
    ecec:	add	x0, x3, x0
    ecf0:	ldr	w1, [x0]
    ecf4:	orr	w1, w1, #0x8
    ecf8:	str	w1, [x0]
    ecfc:	b	ea04 <mpfr_div@@Base+0xc8>
    ed00:	cmp	w19, #0x1
    ed04:	b.eq	ed14 <mpfr_div@@Base+0x3d8>  // b.none
    ed08:	add	w0, w19, w28, lsr #31
    ed0c:	cmp	w0, #0x3
    ed10:	b.ne	ecc8 <mpfr_div@@Base+0x38c>  // b.any
    ed14:	cbz	w28, ea00 <mpfr_div@@Base+0xc4>
    ed18:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    ed1c:	ldr	x1, [x0, #2592]
    ed20:	add	x0, x0, #0xa20
    ed24:	blr	x1
    ed28:	add	x0, x3, x0
    ed2c:	ldr	w1, [x0]
    ed30:	neg	w28, w28
    ed34:	orr	w1, w1, #0x8
    ed38:	str	w1, [x0]
    ed3c:	b	ea04 <mpfr_div@@Base+0xc8>
    ed40:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    ed44:	str	x0, [x21]
    ed48:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    ed4c:	ldr	x2, [x0, #2560]
    ed50:	add	x0, x0, #0xa00
    ed54:	blr	x2
    ed58:	ldr	x0, [x3, x0]
    ed5c:	cmp	x1, x0
    ed60:	b.ge	ebe0 <mpfr_div@@Base+0x2a4>  // b.tcont
    ed64:	add	x1, x1, #0x1
    ed68:	str	x1, [x20, #16]
    ed6c:	b	ecd8 <mpfr_div@@Base+0x39c>
    ed70:	cmp	x0, #0x40
    ed74:	b.eq	f098 <mpfr_div@@Base+0x75c>  // b.none
    ed78:	cmp	x0, #0x7f
    ed7c:	b.gt	f2c8 <mpfr_div@@Base+0x98c>
    ed80:	mov	x4, #0x80                  	// #128
    ed84:	sub	x4, x4, x0
    ed88:	ldr	x0, [x29, #208]
    ed8c:	mov	x9, #0x1                   	// #1
    ed90:	lsl	x9, x9, x4
    ed94:	sub	x1, x1, x25
    ed98:	sub	x10, x9, #0x1
    ed9c:	ldp	x12, x11, [x0]
    eda0:	ldr	x0, [x29, #216]
    eda4:	ldp	x7, x8, [x0]
    eda8:	cmp	x11, x8
    edac:	b.cc	edb8 <mpfr_div@@Base+0x47c>  // b.lo, b.ul, b.last
    edb0:	ccmp	x12, x7, #0x2, eq  // eq = none
    edb4:	b.hi	efe0 <mpfr_div@@Base+0x6a4>  // b.pmore
    edb8:	subs	x2, x7, x12
    edbc:	sbc	x8, x8, x11
    edc0:	mov	x7, x2
    edc4:	mov	w13, #0x1                   	// #1
    edc8:	cmn	x11, #0x1
    edcc:	b.eq	efe8 <mpfr_div@@Base+0x6ac>  // b.none
    edd0:	add	x2, x11, #0x1
    edd4:	adrp	x5, 53000 <mpfr_free_pool@@Base+0x1eec>
    edd8:	add	x5, x5, #0xa10
    eddc:	lsr	x6, x2, #55
    ede0:	lsr	x0, x2, #24
    ede4:	sub	x6, x6, #0x100
    ede8:	sbfx	x2, x2, #0, #1
    edec:	ldr	x3, [x5, x6, lsl #3]
    edf0:	add	x5, x5, #0x800
    edf4:	sub	x14, x3, #0x1
    edf8:	ldr	x3, [x5, x6, lsl #3]
    edfc:	madd	x3, x0, x3, x3
    ee00:	sub	x3, x14, x3, lsr #40
    ee04:	madd	x5, x0, x3, x3
    ee08:	mov	x0, #0x1000000000000000    	// #1152921504606846976
    ee0c:	sub	x0, x0, x5
    ee10:	mul	x0, x0, x3
    ee14:	lsl	x3, x3, #13
    ee18:	add	x0, x3, x0, lsr #47
    ee1c:	lsr	x3, x11, #1
    ee20:	and	x2, x2, x0
    ee24:	madd	x3, x3, x0, x0
    ee28:	lsr	x2, x2, #1
    ee2c:	sub	x2, x2, x3
    ee30:	umulh	x2, x0, x2
    ee34:	lsr	x2, x2, #1
    ee38:	add	x0, x2, x0, lsl #31
    ee3c:	umulh	x5, x8, x0
    ee40:	add	x5, x8, x5
    ee44:	umulh	x2, x5, x12
    ee48:	umulh	x14, x5, x11
    ee4c:	mul	x3, x11, x5
    ee50:	sub	x8, x8, x14
    ee54:	mul	x6, x12, x5
    ee58:	adds	x3, x3, x2
    ee5c:	cset	x2, cs  // cs = hs, nlast
    ee60:	cmp	x6, #0x0
    ee64:	cinc	x3, x3, ne  // ne = any
    ee68:	cset	w15, ne  // ne = any
    ee6c:	subs	x6, x7, x3
    ee70:	cmp	x7, x3
    ee74:	cset	x14, cc  // cc = lo, ul, last
    ee78:	cmp	x3, #0x0
    ee7c:	ccmp	w15, #0x0, #0x4, eq  // eq = none
    ee80:	cinc	x3, x14, ne  // ne = any
    ee84:	sub	x8, x8, x3
    ee88:	sub	x8, x8, x2
    ee8c:	umulh	x2, x6, x0
    ee90:	adds	x6, x6, x2
    ee94:	mov	x14, x8
    ee98:	adc	x5, x5, x8
    ee9c:	mov	x3, x6
    eea0:	cbnz	x14, eff0 <mpfr_div@@Base+0x6b4>
    eea4:	madd	x0, x0, x8, x6
    eea8:	mov	x2, #0x1                   	// #1
    eeac:	add	x3, x0, #0x15
    eeb0:	and	x3, x3, x10, lsr #1
    eeb4:	cmp	x3, #0x15
    eeb8:	b.hi	ef2c <mpfr_div@@Base+0x5f0>  // b.pmore
    eebc:	mul	x2, x0, x11
    eec0:	msub	x7, x11, x5, x7
    eec4:	umulh	x3, x0, x12
    eec8:	umulh	x6, x0, x11
    eecc:	adds	x3, x3, x2
    eed0:	mul	x2, x12, x5
    eed4:	umulh	x15, x5, x12
    eed8:	add	x6, x6, x15
    eedc:	cset	x14, cs  // cs = hs, nlast
    eee0:	sub	x6, x7, x6
    eee4:	mneg	x7, x12, x0
    eee8:	adds	x3, x3, x2
    eeec:	cinc	x2, x14, cs  // cs = hs, nlast
    eef0:	cmp	x7, #0x0
    eef4:	cinc	x3, x3, ne  // ne = any
    eef8:	sub	x6, x6, x2
    eefc:	neg	x2, x3
    ef00:	orr	x3, x7, x2
    ef04:	cmp	x3, #0x0
    ef08:	cset	x3, ne  // ne = any
    ef0c:	sub	x6, x6, x3
    ef10:	cmp	x6, #0x0
    ef14:	ccmp	x11, x2, #0x0, eq  // eq = none
    ef18:	b.cc	f000 <mpfr_div@@Base+0x6c4>  // b.lo, b.ul, b.last
    ef1c:	cmp	x11, x2
    ef20:	ccmp	x12, x7, #0x2, eq  // eq = none
    ef24:	b.ls	f000 <mpfr_div@@Base+0x6c4>  // b.plast
    ef28:	orr	x2, x2, x7
    ef2c:	cbz	w13, ef48 <mpfr_div@@Base+0x60c>
    ef30:	and	x3, x0, #0x1
    ef34:	extr	x0, x5, x0, #1
    ef38:	lsr	x5, x5, #1
    ef3c:	add	x1, x1, #0x1
    ef40:	orr	x2, x2, x3
    ef44:	orr	x5, x5, #0x8000000000000000
    ef48:	sub	w3, w4, #0x1
    ef4c:	mov	x7, #0x1                   	// #1
    ef50:	ldr	w4, [x23, #8]
    ef54:	lsl	x3, x7, x3
    ef58:	and	x6, x3, x0
    ef5c:	eor	x3, x10, x3
    ef60:	neg	x10, x9
    ef64:	and	x3, x3, x0
    ef68:	and	x10, x10, x0
    ef6c:	ldr	w0, [x22, #8]
    ef70:	orr	x2, x3, x2
    ef74:	stp	x10, x5, [x21]
    ef78:	mul	w28, w4, w0
    ef7c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    ef80:	ldr	x3, [x0, #2560]
    ef84:	add	x0, x0, #0xa00
    ef88:	blr	x3
    ef8c:	mrs	x3, tpidr_el0
    ef90:	str	w28, [x20, #8]
    ef94:	ldr	x0, [x3, x0]
    ef98:	cmp	x0, x1
    ef9c:	b.lt	ebe0 <mpfr_div@@Base+0x2a4>  // b.tstop
    efa0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    efa4:	ldr	x4, [x0, #2528]
    efa8:	add	x0, x0, #0x9e0
    efac:	blr	x4
    efb0:	ldr	x0, [x3, x0]
    efb4:	cmp	x1, x0
    efb8:	b.ge	f034 <mpfr_div@@Base+0x6f8>  // b.tcont
    efbc:	cbnz	w19, ec98 <mpfr_div@@Base+0x35c>
    efc0:	sub	x0, x0, #0x1
    efc4:	cmp	x1, x0
    efc8:	b.lt	f218 <mpfr_div@@Base+0x8dc>  // b.tstop
    efcc:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    efd0:	cmp	x5, x0
    efd4:	b.ne	ec98 <mpfr_div@@Base+0x35c>  // b.any
    efd8:	orr	x2, x2, x10
    efdc:	b	ec90 <mpfr_div@@Base+0x354>
    efe0:	mov	w13, #0x0                   	// #0
    efe4:	b	edc8 <mpfr_div@@Base+0x48c>
    efe8:	mov	x0, #0x0                   	// #0
    efec:	b	ee3c <mpfr_div@@Base+0x500>
    eff0:	adds	x3, x0, x3
    eff4:	sub	x14, x14, #0x1
    eff8:	cinc	x5, x5, cs  // cs = hs, nlast
    effc:	b	eea0 <mpfr_div@@Base+0x564>
    f000:	adds	x0, x0, #0x1
    f004:	cinc	x5, x5, eq  // eq = none
    f008:	cmp	x11, x2
    f00c:	b.hi	f02c <mpfr_div@@Base+0x6f0>  // b.pmore
    f010:	ccmp	x12, x7, #0x0, eq  // eq = none
    f014:	cset	w3, hi  // hi = pmore
    f018:	sub	x6, x6, w3, sxtw
    f01c:	subs	x3, x7, x12
    f020:	sbc	x2, x2, x11
    f024:	mov	x7, x3
    f028:	b	ef10 <mpfr_div@@Base+0x5d4>
    f02c:	mov	w3, #0x1                   	// #1
    f030:	b	f018 <mpfr_div@@Base+0x6dc>
    f034:	str	x1, [x20, #16]
    f038:	orr	x2, x6, x2
    f03c:	cbz	x2, ea00 <mpfr_div@@Base+0xc4>
    f040:	cmp	w19, #0x5
    f044:	b.eq	ea00 <mpfr_div@@Base+0xc4>  // b.none
    f048:	cbnz	w19, f074 <mpfr_div@@Base+0x738>
    f04c:	cbz	x6, ed14 <mpfr_div@@Base+0x3d8>
    f050:	ldr	x0, [x21]
    f054:	add	x9, x9, x0
    f058:	str	x9, [x21]
    f05c:	ldr	x0, [x21, #8]
    f060:	cmp	x9, #0x0
    f064:	cinc	x0, x0, eq  // eq = none
    f068:	cbz	x0, f08c <mpfr_div@@Base+0x750>
    f06c:	str	x0, [x21, #8]
    f070:	b	ecd8 <mpfr_div@@Base+0x39c>
    f074:	cmp	w19, #0x1
    f078:	b.eq	ed14 <mpfr_div@@Base+0x3d8>  // b.none
    f07c:	add	w0, w19, w28, lsr #31
    f080:	cmp	w0, #0x3
    f084:	b.ne	f050 <mpfr_div@@Base+0x714>  // b.any
    f088:	b	ed14 <mpfr_div@@Base+0x3d8>
    f08c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    f090:	str	x0, [x21, #8]
    f094:	b	ed48 <mpfr_div@@Base+0x40c>
    f098:	ldr	x0, [x29, #216]
    f09c:	adrp	x3, 53000 <mpfr_free_pool@@Base+0x1eec>
    f0a0:	add	x3, x3, #0xa10
    f0a4:	sub	x1, x1, x25
    f0a8:	ldr	x5, [x0]
    f0ac:	ldr	x0, [x29, #208]
    f0b0:	ldr	x4, [x0]
    f0b4:	subs	x2, x5, x4
    f0b8:	lsr	x7, x4, #55
    f0bc:	csel	x6, x2, x5, cs  // cs = hs, nlast
    f0c0:	sub	x7, x7, #0x100
    f0c4:	lsr	x0, x4, #24
    f0c8:	ldr	x2, [x3, x7, lsl #3]
    f0cc:	add	x3, x3, #0x800
    f0d0:	sub	x8, x2, #0x1
    f0d4:	ldr	x2, [x3, x7, lsl #3]
    f0d8:	madd	x2, x0, x2, x2
    f0dc:	sub	x2, x8, x2, lsr #40
    f0e0:	madd	x3, x0, x2, x2
    f0e4:	mov	x0, #0x1000000000000000    	// #1152921504606846976
    f0e8:	sub	x0, x0, x3
    f0ec:	sub	x3, x4, #0x1
    f0f0:	lsr	x3, x3, #1
    f0f4:	mul	x0, x0, x2
    f0f8:	lsl	x2, x2, #13
    f0fc:	add	x0, x2, x0, lsr #47
    f100:	sbfx	x2, x4, #0, #1
    f104:	and	x2, x2, x0
    f108:	madd	x3, x3, x0, x0
    f10c:	lsr	x2, x2, #1
    f110:	sub	x2, x2, x3
    f114:	umulh	x2, x0, x2
    f118:	lsr	x2, x2, #1
    f11c:	add	x0, x2, x0, lsl #31
    f120:	umulh	x0, x6, x0
    f124:	add	x0, x0, x6
    f128:	umulh	x2, x0, x4
    f12c:	mul	x7, x4, x0
    f130:	negs	x3, x7
    f134:	sbc	x2, x6, x2
    f138:	cmp	x2, #0x0
    f13c:	ccmp	x4, x3, #0x0, eq  // eq = none
    f140:	b.ls	f1e0 <mpfr_div@@Base+0x8a4>  // b.plast
    f144:	cmp	x5, x4
    f148:	b.cs	f1f8 <mpfr_div@@Base+0x8bc>  // b.hs, b.nlast
    f14c:	str	x0, [x21]
    f150:	cmp	x3, x3, lsl #1
    f154:	lsl	x0, x3, #1
    f158:	b.hi	f164 <mpfr_div@@Base+0x828>  // b.pmore
    f15c:	cmp	x4, x0
    f160:	b.hi	f210 <mpfr_div@@Base+0x8d4>  // b.pmore
    f164:	sub	x3, x0, x4
    f168:	mov	x2, #0x1                   	// #1
    f16c:	ldr	w0, [x22, #8]
    f170:	mrs	x5, tpidr_el0
    f174:	ldr	w4, [x23, #8]
    f178:	mul	w28, w4, w0
    f17c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    f180:	ldr	x4, [x0, #2560]
    f184:	add	x0, x0, #0xa00
    f188:	blr	x4
    f18c:	ldr	x0, [x5, x0]
    f190:	str	w28, [x20, #8]
    f194:	cmp	x0, x1
    f198:	b.lt	ebe0 <mpfr_div@@Base+0x2a4>  // b.tstop
    f19c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    f1a0:	ldr	x4, [x0, #2528]
    f1a4:	add	x0, x0, #0x9e0
    f1a8:	blr	x4
    f1ac:	ldr	x0, [x5, x0]
    f1b0:	cmp	x1, x0
    f1b4:	b.ge	f220 <mpfr_div@@Base+0x8e4>  // b.tcont
    f1b8:	cbnz	w19, ec98 <mpfr_div@@Base+0x35c>
    f1bc:	sub	x0, x0, #0x1
    f1c0:	cmp	x1, x0
    f1c4:	b.lt	f218 <mpfr_div@@Base+0x8dc>  // b.tstop
    f1c8:	ldr	x1, [x21]
    f1cc:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    f1d0:	cmp	x1, x0
    f1d4:	b.ne	ec98 <mpfr_div@@Base+0x35c>  // b.any
    f1d8:	cmp	x3, #0x0
    f1dc:	b	ec94 <mpfr_div@@Base+0x358>
    f1e0:	cmp	x4, x3
    f1e4:	add	x0, x0, #0x1
    f1e8:	cset	x6, hi  // hi = pmore
    f1ec:	sub	x3, x3, x4
    f1f0:	sub	x2, x2, x6
    f1f4:	b	f138 <mpfr_div@@Base+0x7fc>
    f1f8:	lsr	x2, x0, #1
    f1fc:	add	x1, x1, #0x1
    f200:	orr	x2, x2, #0x8000000000000000
    f204:	str	x2, [x21]
    f208:	and	x2, x0, #0x1
    f20c:	b	f16c <mpfr_div@@Base+0x830>
    f210:	mov	x2, #0x0                   	// #0
    f214:	b	f16c <mpfr_div@@Base+0x830>
    f218:	mov	w19, #0x1                   	// #1
    f21c:	b	ec98 <mpfr_div@@Base+0x35c>
    f220:	str	x1, [x20, #16]
    f224:	orr	x3, x3, x2
    f228:	cbz	x3, ea00 <mpfr_div@@Base+0xc4>
    f22c:	cmp	w19, #0x5
    f230:	b.eq	ea00 <mpfr_div@@Base+0xc4>  // b.none
    f234:	cbnz	w19, f268 <mpfr_div@@Base+0x92c>
    f238:	cbz	x2, f27c <mpfr_div@@Base+0x940>
    f23c:	ldr	x0, [x21]
    f240:	adds	x0, x0, #0x1
    f244:	b.eq	f298 <mpfr_div@@Base+0x95c>  // b.none
    f248:	str	x0, [x21]
    f24c:	cbz	w28, ea04 <mpfr_div@@Base+0xc8>
    f250:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    f254:	ldr	x1, [x0, #2592]
    f258:	add	x0, x0, #0xa20
    f25c:	blr	x1
    f260:	add	x0, x5, x0
    f264:	b	ecf0 <mpfr_div@@Base+0x3b4>
    f268:	cmp	w19, #0x1
    f26c:	b.eq	f27c <mpfr_div@@Base+0x940>  // b.none
    f270:	add	w0, w19, w28, lsr #31
    f274:	cmp	w0, #0x3
    f278:	b.ne	f23c <mpfr_div@@Base+0x900>  // b.any
    f27c:	cbz	w28, ea00 <mpfr_div@@Base+0xc4>
    f280:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    f284:	ldr	x1, [x0, #2592]
    f288:	add	x0, x0, #0xa20
    f28c:	blr	x1
    f290:	add	x0, x5, x0
    f294:	b	ed2c <mpfr_div@@Base+0x3f0>
    f298:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    f29c:	str	x0, [x21]
    f2a0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    f2a4:	ldr	x2, [x0, #2560]
    f2a8:	add	x0, x0, #0xa00
    f2ac:	blr	x2
    f2b0:	ldr	x0, [x5, x0]
    f2b4:	cmp	x1, x0
    f2b8:	b.ge	ebe0 <mpfr_div@@Base+0x2a4>  // b.tcont
    f2bc:	add	x1, x1, #0x1
    f2c0:	str	x1, [x20, #16]
    f2c4:	b	f24c <mpfr_div@@Base+0x910>
    f2c8:	sub	x0, x0, #0x1
    f2cc:	sub	x24, x24, #0x1
    f2d0:	asr	x0, x0, #6
    f2d4:	str	x0, [x29, #168]
    f2d8:	add	x0, x0, #0x1
    f2dc:	str	x0, [x29, #184]
    f2e0:	asr	x0, x24, #6
    f2e4:	str	x0, [x29, #200]
    f2e8:	add	x0, x0, #0x1
    f2ec:	str	x0, [x29, #192]
    f2f0:	sub	x0, x26, #0x1
    f2f4:	asr	x0, x0, #6
    f2f8:	str	x0, [x29, #152]
    f2fc:	add	x0, x0, #0x1
    f300:	str	x0, [x29, #176]
    f304:	ldr	x0, [x29, #200]
    f308:	cbnz	x0, f444 <mpfr_div@@Base+0xb08>
    f30c:	mrs	x27, tpidr_el0
    f310:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    f314:	ldr	x2, [x0, #2528]
    f318:	add	x0, x0, #0x9e0
    f31c:	blr	x2
    f320:	sub	x1, x1, #0x3f
    f324:	ldr	x0, [x27, x0]
    f328:	cmp	x1, x0
    f32c:	b.le	f444 <mpfr_div@@Base+0xb08>
    f330:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    f334:	ldr	x2, [x0, #2560]
    f338:	add	x0, x0, #0xa00
    f33c:	blr	x2
    f340:	ldr	x0, [x27, x0]
    f344:	cmp	x1, x0
    f348:	b.gt	f444 <mpfr_div@@Base+0xb08>
    f34c:	ldr	x0, [x29, #208]
    f350:	ldr	x2, [x0]
    f354:	ldr	w0, [x22, #8]
    f358:	cmp	w0, #0x0
    f35c:	b.le	f3a8 <mpfr_div@@Base+0xa6c>
    f360:	mov	w3, w19
    f364:	mov	x1, x23
    f368:	mov	x0, x20
    f36c:	bl	cd00 <mpfr_div_ui@plt>
    f370:	mov	w28, w0
    f374:	ldr	x1, [x20, #16]
    f378:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    f37c:	ldr	x2, [x0, #2560]
    f380:	add	x0, x0, #0xa00
    f384:	blr	x2
    f388:	ldr	x2, [x27, x0]
    f38c:	sub	x1, x1, x25
    f390:	str	x1, [x20, #16]
    f394:	sub	x0, x2, #0x3f
    f398:	cmp	x1, x0
    f39c:	b.lt	f3e4 <mpfr_div@@Base+0xaa8>  // b.tstop
    f3a0:	ldr	w2, [x20, #8]
    f3a4:	b	ebe4 <mpfr_div@@Base+0x2a8>
    f3a8:	cmp	w19, #0x2
    f3ac:	b.eq	f3dc <mpfr_div@@Base+0xaa0>  // b.none
    f3b0:	cmp	w19, #0x3
    f3b4:	mov	w3, #0x2                   	// #2
    f3b8:	csel	w3, w19, w3, ne  // ne = any
    f3bc:	mov	x1, x23
    f3c0:	mov	x0, x20
    f3c4:	bl	cd00 <mpfr_div_ui@plt>
    f3c8:	neg	w28, w0
    f3cc:	ldr	w0, [x20, #8]
    f3d0:	neg	w0, w0
    f3d4:	str	w0, [x20, #8]
    f3d8:	b	f374 <mpfr_div@@Base+0xa38>
    f3dc:	mov	w3, #0x3                   	// #3
    f3e0:	b	f3bc <mpfr_div@@Base+0xa80>
    f3e4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    f3e8:	ldr	x3, [x0, #2528]
    f3ec:	add	x0, x0, #0x9e0
    f3f0:	blr	x3
    f3f4:	add	x1, x1, #0x40
    f3f8:	ldr	x0, [x27, x0]
    f3fc:	str	x1, [x20, #16]
    f400:	cmp	x1, x0
    f404:	b.lt	f42c <mpfr_div@@Base+0xaf0>  // b.tstop
    f408:	cmp	x2, x1
    f40c:	b.lt	f42c <mpfr_div@@Base+0xaf0>  // b.tstop
    f410:	cbz	w28, ea04 <mpfr_div@@Base+0xc8>
    f414:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    f418:	ldr	x1, [x0, #2592]
    f41c:	add	x0, x0, #0xa20
    f420:	blr	x1
    f424:	add	x0, x27, x0
    f428:	b	ecf0 <mpfr_div@@Base+0x3b4>
    f42c:	mov	w2, w19
    f430:	mov	w1, w28
    f434:	mov	x0, x20
    f438:	bl	cbc0 <mpfr_check_range@plt>
    f43c:	mov	w28, w0
    f440:	b	ea04 <mpfr_div@@Base+0xc8>
    f444:	ldr	x0, [x29, #176]
    f448:	cmp	x0, #0x1f
    f44c:	b.gt	f6e4 <mpfr_div@@Base+0xda8>
    f450:	ldr	w1, [x23, #8]
    f454:	ldr	w0, [x22, #8]
    f458:	str	xzr, [x29, #256]
    f45c:	mul	w0, w1, w0
    f460:	str	w0, [x20, #8]
    f464:	str	w0, [x29, #128]
    f468:	ldr	x0, [x29, #184]
    f46c:	ldp	x2, x1, [x29, #208]
    f470:	lsl	x0, x0, #3
    f474:	str	x0, [x29, #160]
    f478:	ldr	x0, [x29, #184]
    f47c:	add	x0, x1, x0, lsl #3
    f480:	ldur	x1, [x0, #-8]
    f484:	ldr	x0, [x29, #192]
    f488:	lsl	x25, x0, #3
    f48c:	add	x0, x2, x0, lsl #3
    f490:	ldur	x0, [x0, #-8]
    f494:	cmp	x1, x0
    f498:	b.ne	f508 <mpfr_div@@Base+0xbcc>  // b.any
    f49c:	ldr	x0, [x29, #168]
    f4a0:	cmp	x0, #0x0
    f4a4:	ldr	x0, [x29, #200]
    f4a8:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    f4ac:	b.eq	f4e8 <mpfr_div@@Base+0xbac>  // b.none
    f4b0:	ldr	x0, [x29, #168]
    f4b4:	sub	x0, x0, #0x1
    f4b8:	str	x0, [x29, #168]
    f4bc:	ldr	x0, [x29, #200]
    f4c0:	ldr	x1, [x29, #168]
    f4c4:	sub	x0, x0, #0x1
    f4c8:	str	x0, [x29, #200]
    f4cc:	ldr	x0, [x29, #216]
    f4d0:	ldr	x2, [x29, #200]
    f4d4:	ldr	x1, [x0, x1, lsl #3]
    f4d8:	ldr	x0, [x29, #208]
    f4dc:	ldr	x0, [x0, x2, lsl #3]
    f4e0:	cmp	x1, x0
    f4e4:	b.eq	f49c <mpfr_div@@Base+0xb60>  // b.none
    f4e8:	ldr	x1, [x29, #168]
    f4ec:	ldr	x0, [x29, #216]
    f4f0:	ldr	x2, [x29, #200]
    f4f4:	ldr	x1, [x0, x1, lsl #3]
    f4f8:	ldr	x0, [x29, #208]
    f4fc:	ldr	x0, [x0, x2, lsl #3]
    f500:	cmp	x1, x0
    f504:	b.eq	f98c <mpfr_div@@Base+0x1050>  // b.none
    f508:	cset	w28, hi  // hi = pmore
    f50c:	ldr	x1, [x22, #16]
    f510:	cmp	w19, #0x1
    f514:	ldr	x0, [x23, #16]
    f518:	sub	x0, x0, x1
    f51c:	add	x0, x0, w28, sxtw
    f520:	str	x0, [x29, #168]
    f524:	ldr	x0, [x20]
    f528:	neg	w0, w0
    f52c:	and	w0, w0, #0x3f
    f530:	str	w0, [x29, #200]
    f534:	b.eq	f9b4 <mpfr_div@@Base+0x1078>  // b.none
    f538:	ldr	w0, [x29, #128]
    f53c:	mvn	w0, w0
    f540:	lsr	w0, w0, #31
    f544:	add	w0, w0, #0x2
    f548:	cmp	w0, w19
    f54c:	cset	w0, eq  // eq = none
    f550:	str	w0, [x29, #144]
    f554:	ldr	x0, [x29, #176]
    f558:	cmp	x0, #0x18
    f55c:	ldr	x0, [x29, #192]
    f560:	ccmp	x0, #0x18, #0x4, gt
    f564:	b.le	fa98 <mpfr_div@@Base+0x115c>
    f568:	ldr	x0, [x29, #152]
    f56c:	add	x22, x0, #0x2
    f570:	lsl	x23, x22, #4
    f574:	cmp	x23, #0x4, lsl #12
    f578:	b.hi	f9bc <mpfr_div@@Base+0x1080>  // b.pmore
    f57c:	sub	sp, sp, x23
    f580:	mov	x24, sp
    f584:	lsl	x0, x22, #1
    f588:	str	x0, [x29, #136]
    f58c:	ldr	x0, [x29, #184]
    f590:	cmp	x0, x22, lsl #1
    f594:	b.lt	f9d0 <mpfr_div@@Base+0x1094>  // b.tstop
    f598:	lsl	x1, x22, #1
    f59c:	sub	x0, x0, x1
    f5a0:	ldr	x1, [x29, #216]
    f5a4:	add	x1, x1, x0, lsl #3
    f5a8:	cmp	x1, x24
    f5ac:	b.eq	f5bc <mpfr_div@@Base+0xc80>  // b.none
    f5b0:	mov	x2, x23
    f5b4:	mov	x0, x24
    f5b8:	bl	ba90 <memcpy@plt>
    f5bc:	ldr	x0, [x29, #192]
    f5c0:	lsl	x23, x22, #3
    f5c4:	cmp	x0, x22
    f5c8:	b.lt	fa08 <mpfr_div@@Base+0x10cc>  // b.tstop
    f5cc:	sub	x5, x0, x22
    f5d0:	ldr	x0, [x29, #208]
    f5d4:	add	x27, x0, x5, lsl #3
    f5d8:	cmp	x23, #0x4, lsl #12
    f5dc:	b.hi	fa68 <mpfr_div@@Base+0x112c>  // b.pmore
    f5e0:	add	x0, x23, #0xf
    f5e4:	and	x0, x0, #0xfffffffffffffff0
    f5e8:	sub	sp, sp, x0
    f5ec:	mov	x26, sp
    f5f0:	mov	x3, x22
    f5f4:	mov	x2, x27
    f5f8:	mov	x1, x24
    f5fc:	mov	x0, x26
    f600:	bl	c1d0 <mpfr_divhigh_n@plt>
    f604:	mov	x3, x0
    f608:	lsl	x0, x22, #1
    f60c:	lsl	x1, x22, #6
    f610:	add	x27, x0, #0x1
    f614:	mov	w0, #0x40                  	// #64
    f618:	clz	x27, x27
    f61c:	cmp	x3, #0x1
    f620:	sub	w0, w0, w27
    f624:	sub	x27, x1, w0, sxtw
    f628:	b.ne	f64c <mpfr_div@@Base+0xd10>  // b.any
    f62c:	sub	x23, x23, #0x8
    f630:	mov	x2, x22
    f634:	mov	x1, x26
    f638:	mov	x0, x26
    f63c:	bl	bd60 <__gmpn_rshift@plt>
    f640:	ldr	x0, [x26, x23]
    f644:	orr	x0, x0, #0x8000000000000000
    f648:	str	x0, [x26, x23]
    f64c:	cmp	w19, #0x0
    f650:	mov	x2, x27
    f654:	ldr	x3, [x20]
    f658:	mov	x1, x22
    f65c:	mov	x0, x26
    f660:	cinc	x3, x3, eq  // eq = none
    f664:	bl	c400 <mpfr_round_p@plt>
    f668:	cbz	w0, fa98 <mpfr_div@@Base+0x115c>
    f66c:	add	x1, x26, #0x8
    f670:	cmp	x1, x21
    f674:	b.eq	f688 <mpfr_div@@Base+0xd4c>  // b.none
    f678:	ldr	x0, [x29, #176]
    f67c:	lsl	x2, x0, #3
    f680:	mov	x0, x21
    f684:	bl	ba90 <memcpy@plt>
    f688:	ldrb	w1, [x29, #200]
    f68c:	mov	x0, #0xffffffffffffffff    	// #-1
    f690:	lsl	x1, x0, x1
    f694:	ldr	x0, [x21]
    f698:	and	x0, x0, x1
    f69c:	str	x0, [x21]
    f6a0:	cbnz	w19, fa88 <mpfr_div@@Base+0x114c>
    f6a4:	ldr	w0, [x29, #200]
    f6a8:	cbz	w0, fa7c <mpfr_div@@Base+0x1140>
    f6ac:	ldr	x1, [x26, #8]
    f6b0:	sub	w0, w0, #0x1
    f6b4:	lsr	x0, x1, x0
    f6b8:	and	x0, x0, #0x1
    f6bc:	cbz	x0, fa90 <mpfr_div@@Base+0x1154>
    f6c0:	ldrb	w0, [x29, #200]
    f6c4:	mov	x4, #0x1                   	// #1
    f6c8:	ldr	x1, [x21]
    f6cc:	lsl	x0, x4, x0
    f6d0:	adds	x0, x0, x1
    f6d4:	str	x0, [x21]
    f6d8:	b.cs	103b8 <mpfr_div@@Base+0x1a7c>  // b.hs, b.nlast
    f6dc:	mov	w28, #0x1                   	// #1
    f6e0:	b	10304 <mpfr_div@@Base+0x19c8>
    f6e4:	add	x24, x29, #0xe0
    f6e8:	add	x25, x29, #0xf0
    f6ec:	mov	x0, x24
    f6f0:	bl	c010 <mpfr_mpz_init@plt>
    f6f4:	add	x27, x29, #0x100
    f6f8:	mov	x0, x25
    f6fc:	bl	c010 <mpfr_mpz_init@plt>
    f700:	add	x26, x26, #0x40
    f704:	mov	x0, x27
    f708:	bl	c010 <mpfr_mpz_init@plt>
    f70c:	mov	x1, x23
    f710:	mov	x0, x25
    f714:	bl	cb50 <mpfr_get_z_2exp@plt>
    f718:	str	x0, [x29, #160]
    f71c:	mov	x1, x22
    f720:	mov	x0, x27
    f724:	bl	cb50 <mpfr_get_z_2exp@plt>
    f728:	str	x0, [x29, #144]
    f72c:	mov	w1, #0x2                   	// #2
    f730:	mov	x0, x27
    f734:	bl	cbf0 <__gmpz_sizeinbase@plt>
    f738:	mov	x3, x0
    f73c:	cmp	x26, x0
    f740:	b.ge	f768 <mpfr_div@@Base+0xe2c>  // b.tcont
    f744:	sub	x2, x0, x26
    f748:	mov	x1, x27
    f74c:	mov	x0, x27
    f750:	str	x2, [x29, #136]
    f754:	bl	c7d0 <__gmpz_tdiv_q_2exp@plt>
    f758:	ldp	x2, x0, [x29, #136]
    f75c:	mov	x3, x26
    f760:	add	x0, x0, x2
    f764:	str	x0, [x29, #144]
    f768:	mov	x0, x25
    f76c:	mov	w1, #0x2                   	// #2
    f770:	str	x3, [x29, #136]
    f774:	bl	cbf0 <__gmpz_sizeinbase@plt>
    f778:	ldr	x3, [x29, #136]
    f77c:	add	x3, x26, x3
    f780:	cmp	x0, x3
    f784:	b.le	f934 <mpfr_div@@Base+0xff8>
    f788:	sub	x2, x0, x3
    f78c:	mov	x1, x25
    f790:	mov	x0, x25
    f794:	str	x2, [x29, #136]
    f798:	bl	c7d0 <__gmpz_tdiv_q_2exp@plt>
    f79c:	ldr	x2, [x29, #136]
    f7a0:	ldr	x0, [x29, #160]
    f7a4:	add	x0, x0, x2
    f7a8:	str	x0, [x29, #160]
    f7ac:	mov	x2, x27
    f7b0:	mov	x1, x25
    f7b4:	mov	x0, x24
    f7b8:	bl	bbb0 <__gmpz_tdiv_q@plt>
    f7bc:	mov	w1, #0x2                   	// #2
    f7c0:	mov	x0, x24
    f7c4:	bl	cbf0 <__gmpz_sizeinbase@plt>
    f7c8:	sub	x26, x0, x26
    f7cc:	add	x1, x26, #0x1
    f7d0:	mov	x0, x24
    f7d4:	str	x1, [x29, #136]
    f7d8:	bl	bb10 <__gmpz_scan1@plt>
    f7dc:	cmp	w19, #0x0
    f7e0:	add	x26, x26, #0x40
    f7e4:	cset	x2, eq  // eq = none
    f7e8:	sub	x26, x26, x2
    f7ec:	cmp	x0, x26
    f7f0:	b.cs	f984 <mpfr_div@@Base+0x1048>  // b.hs, b.nlast
    f7f4:	ldr	x1, [x29, #136]
    f7f8:	mov	x0, x24
    f7fc:	bl	c540 <__gmpz_scan0@plt>
    f800:	cmp	x26, x0
    f804:	b.ls	f984 <mpfr_div@@Base+0x1048>  // b.plast
    f808:	mrs	x26, tpidr_el0
    f80c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    f810:	ldr	x1, [x0, #2592]
    f814:	add	x0, x0, #0xa20
    f818:	blr	x1
    f81c:	add	x11, x26, x0
    f820:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
    f824:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
    f828:	mov	w2, w19
    f82c:	ldr	w5, [x26, x0]
    f830:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    f834:	ldr	x1, [x0, #2528]
    f838:	add	x0, x0, #0x9e0
    f83c:	blr	x1
    f840:	add	x10, x26, x0
    f844:	str	x11, [x29, #96]
    f848:	ldr	x7, [x26, x0]
    f84c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    f850:	ldr	x1, [x0, #2560]
    f854:	add	x0, x0, #0xa00
    f858:	blr	x1
    f85c:	ldr	x6, [x26, x0]
    f860:	add	x9, x26, x0
    f864:	mov	x1, x24
    f868:	mov	x0, x20
    f86c:	str	x8, [x10]
    f870:	str	x3, [x9]
    f874:	str	w5, [x29, #108]
    f878:	stp	x7, x6, [x29, #112]
    f87c:	stp	x10, x9, [x29, #128]
    f880:	bl	c2d0 <mpfr_set_z@plt>
    f884:	ldr	w5, [x29, #108]
    f888:	ldp	x10, x9, [x29, #128]
    f88c:	mov	w28, w0
    f890:	ldr	x11, [x29, #96]
    f894:	mov	x0, #0x4                   	// #4
    f898:	ldr	x1, [x20, #16]
    f89c:	movk	x0, #0x8000, lsl #48
    f8a0:	ldp	x7, x6, [x29, #112]
    f8a4:	str	x6, [x9]
    f8a8:	str	x7, [x10]
    f8ac:	cmp	x1, x0
    f8b0:	str	w5, [x11]
    f8b4:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
    f8b8:	ccmp	x1, x8, #0x4, ge  // ge = tcont
    f8bc:	b.eq	f95c <mpfr_div@@Base+0x1020>  // b.none
    f8c0:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
    f8c4:	cmp	x1, x3
    f8c8:	cset	w3, ne  // ne = any
    f8cc:	ldr	x2, [x29, #144]
    f8d0:	ldr	x0, [x29, #160]
    f8d4:	sub	x0, x0, x2
    f8d8:	add	x0, x0, x1
    f8dc:	str	x0, [x20, #16]
    f8e0:	cmp	x7, x0
    f8e4:	b.gt	f8f0 <mpfr_div@@Base+0xfb4>
    f8e8:	cmp	x6, x0
    f8ec:	b.ge	f964 <mpfr_div@@Base+0x1028>  // b.tcont
    f8f0:	mov	w1, w28
    f8f4:	mov	w2, w19
    f8f8:	mov	x0, x20
    f8fc:	str	w3, [x29, #160]
    f900:	bl	cbc0 <mpfr_check_range@plt>
    f904:	mov	w28, w0
    f908:	ldr	w3, [x29, #160]
    f90c:	mov	x0, x24
    f910:	str	w3, [x29, #160]
    f914:	bl	c200 <mpfr_mpz_clear@plt>
    f918:	mov	x0, x25
    f91c:	bl	c200 <mpfr_mpz_clear@plt>
    f920:	mov	x0, x27
    f924:	bl	c200 <mpfr_mpz_clear@plt>
    f928:	ldr	w3, [x29, #160]
    f92c:	cbz	w3, f450 <mpfr_div@@Base+0xb14>
    f930:	b	ea04 <mpfr_div@@Base+0xc8>
    f934:	b.ge	f7ac <mpfr_div@@Base+0xe70>  // b.tcont
    f938:	sub	x2, x3, x0
    f93c:	mov	x1, x25
    f940:	mov	x0, x25
    f944:	str	x2, [x29, #136]
    f948:	bl	c290 <__gmpz_mul_2exp@plt>
    f94c:	ldr	x2, [x29, #136]
    f950:	ldr	x0, [x29, #160]
    f954:	sub	x0, x0, x2
    f958:	b	f7a8 <mpfr_div@@Base+0xe6c>
    f95c:	mov	w3, #0x0                   	// #0
    f960:	b	f8cc <mpfr_div@@Base+0xf90>
    f964:	cbz	w28, f90c <mpfr_div@@Base+0xfd0>
    f968:	orr	w5, w5, #0x8
    f96c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
    f970:	ldr	x1, [x0, #2592]
    f974:	add	x0, x0, #0xa20
    f978:	blr	x1
    f97c:	str	w5, [x26, x0]
    f980:	b	f90c <mpfr_div@@Base+0xfd0>
    f984:	mov	w3, #0x0                   	// #0
    f988:	b	f90c <mpfr_div@@Base+0xfd0>
    f98c:	ldr	x0, [x29, #200]
    f990:	cbz	x0, f9ac <mpfr_div@@Base+0x1070>
    f994:	mov	x1, x0
    f998:	ldr	x0, [x29, #208]
    f99c:	bl	16c6c <mpfr_div_2ui@@Base+0x3b4>
    f9a0:	cmp	w0, #0x0
    f9a4:	cset	w28, eq  // eq = none
    f9a8:	b	f50c <mpfr_div@@Base+0xbd0>
    f9ac:	mov	w28, #0x1                   	// #1
    f9b0:	b	f50c <mpfr_div@@Base+0xbd0>
    f9b4:	str	w19, [x29, #144]
    f9b8:	b	f554 <mpfr_div@@Base+0xc18>
    f9bc:	mov	x1, x23
    f9c0:	add	x0, x29, #0x100
    f9c4:	bl	be40 <mpfr_tmp_allocate@plt>
    f9c8:	mov	x24, x0
    f9cc:	b	f584 <mpfr_div@@Base+0xc48>
    f9d0:	ldr	x1, [x29, #184]
    f9d4:	lsl	x0, x22, #1
    f9d8:	sub	x23, x0, x1
    f9dc:	ldr	x1, [x29, #216]
    f9e0:	add	x0, x24, x23, lsl #3
    f9e4:	cmp	x0, x1
    f9e8:	b.eq	f9f4 <mpfr_div@@Base+0x10b8>  // b.none
    f9ec:	ldr	x2, [x29, #160]
    f9f0:	bl	ba90 <memcpy@plt>
    f9f4:	lsl	x2, x23, #3
    f9f8:	mov	x0, x24
    f9fc:	mov	w1, #0x0                   	// #0
    fa00:	bl	c1a0 <memset@plt>
    fa04:	b	f5bc <mpfr_div@@Base+0xc80>
    fa08:	cmp	x23, #0x4, lsl #12
    fa0c:	b.hi	fa54 <mpfr_div@@Base+0x1118>  // b.pmore
    fa10:	add	x0, x23, #0xf
    fa14:	and	x0, x0, #0xfffffffffffffff0
    fa18:	sub	sp, sp, x0
    fa1c:	mov	x27, sp
    fa20:	ldr	x0, [x29, #192]
    fa24:	ldr	x1, [x29, #208]
    fa28:	sub	x26, x22, x0
    fa2c:	add	x0, x27, x26, lsl #3
    fa30:	cmp	x0, x1
    fa34:	b.eq	fa40 <mpfr_div@@Base+0x1104>  // b.none
    fa38:	mov	x2, x25
    fa3c:	bl	ba90 <memcpy@plt>
    fa40:	lsl	x2, x26, #3
    fa44:	mov	x0, x27
    fa48:	mov	w1, #0x0                   	// #0
    fa4c:	bl	c1a0 <memset@plt>
    fa50:	b	f5d8 <mpfr_div@@Base+0xc9c>
    fa54:	mov	x1, x23
    fa58:	add	x0, x29, #0x100
    fa5c:	bl	be40 <mpfr_tmp_allocate@plt>
    fa60:	mov	x27, x0
    fa64:	b	fa20 <mpfr_div@@Base+0x10e4>
    fa68:	mov	x1, x23
    fa6c:	add	x0, x29, #0x100
    fa70:	bl	be40 <mpfr_tmp_allocate@plt>
    fa74:	mov	x26, x0
    fa78:	b	f5f0 <mpfr_div@@Base+0xcb4>
    fa7c:	ldr	x0, [x26]
    fa80:	lsr	x0, x0, #63
    fa84:	b	f6bc <mpfr_div@@Base+0xd80>
    fa88:	ldr	w0, [x29, #144]
    fa8c:	cbz	w0, f6c0 <mpfr_div@@Base+0xd84>
    fa90:	mov	w28, #0xffffffff            	// #-1
    fa94:	b	10304 <mpfr_div@@Base+0x19c8>
    fa98:	ldr	w0, [x29, #200]
    fa9c:	orr	w0, w19, w0
    faa0:	cbnz	w0, fb4c <mpfr_div@@Base+0x1210>
    faa4:	ldr	x0, [x29, #152]
    faa8:	add	x22, x0, #0x2
    faac:	lsl	x1, x22, #3
    fab0:	cmp	x1, #0x4, lsl #12
    fab4:	b.hi	fb3c <mpfr_div@@Base+0x1200>  // b.pmore
    fab8:	add	x1, x1, #0xf
    fabc:	and	x1, x1, #0xfffffffffffffff0
    fac0:	sub	sp, sp, x1
    fac4:	mov	x23, sp
    fac8:	lsl	x0, x22, #1
    facc:	str	x0, [x29, #120]
    fad0:	lsl	x2, x22, #4
    fad4:	cmp	x2, #0x4, lsl #12
    fad8:	b.hi	fb58 <mpfr_div@@Base+0x121c>  // b.pmore
    fadc:	sub	sp, sp, x2
    fae0:	mov	x27, sp
    fae4:	ldr	x0, [x29, #184]
    fae8:	lsl	x1, x22, #1
    faec:	cmp	x0, x1
    faf0:	b.ge	fb8c <mpfr_div@@Base+0x1250>  // b.tcont
    faf4:	mov	x0, x1
    faf8:	ldr	x1, [x29, #184]
    fafc:	sub	x24, x0, x1
    fb00:	mov	x0, x27
    fb04:	mov	w1, #0x0                   	// #0
    fb08:	lsl	x24, x24, #3
    fb0c:	mov	x2, x24
    fb10:	bl	c1a0 <memset@plt>
    fb14:	add	x0, x27, x24
    fb18:	cbz	w28, fb74 <mpfr_div@@Base+0x1238>
    fb1c:	ldr	x2, [x29, #184]
    fb20:	sub	x24, x24, #0x8
    fb24:	ldr	x1, [x29, #216]
    fb28:	mov	w3, #0x1                   	// #1
    fb2c:	bl	bd60 <__gmpn_rshift@plt>
    fb30:	str	x0, [x27, x24]
    fb34:	str	xzr, [x29, #152]
    fb38:	b	fbd4 <mpfr_div@@Base+0x1298>
    fb3c:	add	x0, x29, #0x100
    fb40:	bl	be40 <mpfr_tmp_allocate@plt>
    fb44:	mov	x23, x0
    fb48:	b	fac8 <mpfr_div@@Base+0x118c>
    fb4c:	mov	x23, x21
    fb50:	ldr	x22, [x29, #176]
    fb54:	b	fac8 <mpfr_div@@Base+0x118c>
    fb58:	mov	x1, x2
    fb5c:	add	x0, x29, #0x100
    fb60:	str	x2, [x29, #152]
    fb64:	bl	be40 <mpfr_tmp_allocate@plt>
    fb68:	mov	x27, x0
    fb6c:	ldr	x2, [x29, #152]
    fb70:	b	fae4 <mpfr_div@@Base+0x11a8>
    fb74:	ldr	x1, [x29, #216]
    fb78:	cmp	x1, x0
    fb7c:	b.eq	fb34 <mpfr_div@@Base+0x11f8>  // b.none
    fb80:	ldr	x2, [x29, #160]
    fb84:	bl	ba90 <memcpy@plt>
    fb88:	b	fb34 <mpfr_div@@Base+0x11f8>
    fb8c:	ldr	x0, [x29, #184]
    fb90:	lsl	x1, x22, #1
    fb94:	sub	x24, x0, x1
    fb98:	ldr	x0, [x29, #216]
    fb9c:	add	x1, x0, x24, lsl #3
    fba0:	cbz	w28, fcd8 <mpfr_div@@Base+0x139c>
    fba4:	lsl	x2, x22, #1
    fba8:	mov	x0, x27
    fbac:	mov	w3, #0x1                   	// #1
    fbb0:	bl	bd60 <__gmpn_rshift@plt>
    fbb4:	cbnz	x0, fcec <mpfr_div@@Base+0x13b0>
    fbb8:	ldr	x0, [x29, #216]
    fbbc:	mov	x1, x24
    fbc0:	bl	16c6c <mpfr_div_2ui@@Base+0x3b4>
    fbc4:	cmp	w0, #0x0
    fbc8:	cset	w0, ne  // ne = any
    fbcc:	sxtw	x0, w0
    fbd0:	str	x0, [x29, #152]
    fbd4:	ldr	x0, [x29, #192]
    fbd8:	cmp	x22, x0
    fbdc:	b.gt	fd40 <mpfr_div@@Base+0x1404>
    fbe0:	sub	x24, x0, x22
    fbe4:	ldr	x0, [x29, #208]
    fbe8:	cmp	x23, x0
    fbec:	b.eq	fcf4 <mpfr_div@@Base+0x13b8>  // b.none
    fbf0:	add	x26, x0, x24, lsl #3
    fbf4:	ldr	x0, [x29, #208]
    fbf8:	mov	x1, x24
    fbfc:	bl	16c6c <mpfr_div_2ui@@Base+0x3b4>
    fc00:	cmp	w0, #0x0
    fc04:	cset	x24, ne  // ne = any
    fc08:	mov	x2, #0x0                   	// #0
    fc0c:	lsl	x0, x22, #1
    fc10:	sub	x5, x22, x2
    fc14:	sub	x3, x0, x2
    fc18:	mov	x4, x26
    fc1c:	add	x2, x27, x2, lsl #3
    fc20:	mov	x0, x23
    fc24:	mov	x1, #0x0                   	// #0
    fc28:	bl	cd50 <__gmpn_divrem@plt>
    fc2c:	str	x0, [x29, #136]
    fc30:	ldr	x0, [x29, #152]
    fc34:	cbnz	x0, fd54 <mpfr_div@@Base+0x1418>
    fc38:	mov	x1, x22
    fc3c:	mov	x0, x27
    fc40:	bl	16c6c <mpfr_div_2ui@@Base+0x3b4>
    fc44:	cmp	w0, #0x0
    fc48:	cset	w3, ne  // ne = any
    fc4c:	ldr	x0, [x29, #176]
    fc50:	sxtw	x26, w3
    fc54:	orr	x24, x24, x26
    fc58:	cmp	x22, x0
    fc5c:	b.ne	fd5c <mpfr_div@@Base+0x1420>  // b.any
    fc60:	ldrb	w0, [x29, #200]
    fc64:	mov	x6, #0xffffffffffffffff    	// #-1
    fc68:	ldr	w1, [x29, #200]
    fc6c:	lsl	x6, x6, x0
    fc70:	ldr	x0, [x23]
    fc74:	bic	x6, x0, x6
    fc78:	ldr	x0, [x23]
    fc7c:	ldr	x2, [x29, #192]
    fc80:	eor	x0, x0, x6
    fc84:	str	x0, [x23]
    fc88:	orr	x0, x6, x24
    fc8c:	cmp	x0, #0x0
    fc90:	cset	w24, ne  // ne = any
    fc94:	cmp	x22, x2
    fc98:	b.lt	fd9c <mpfr_div@@Base+0x1460>  // b.tstop
    fc9c:	cbnz	w19, fd84 <mpfr_div@@Base+0x1448>
    fca0:	sub	w1, w1, #0x1
    fca4:	mov	x24, #0x1                   	// #1
    fca8:	lsl	x1, x24, x1
    fcac:	and	x0, x1, x6
    fcb0:	bic	x1, x6, x1
    fcb4:	str	x0, [x29, #160]
    fcb8:	orr	x24, x1, x26
    fcbc:	ldr	w0, [x29, #144]
    fcc0:	cbnz	w0, 102f4 <mpfr_div@@Base+0x19b8>
    fcc4:	ldr	x0, [x29, #160]
    fcc8:	orr	x0, x24, x0
    fccc:	cbnz	x0, ff48 <mpfr_div@@Base+0x160c>
    fcd0:	mov	w28, #0x0                   	// #0
    fcd4:	b	10304 <mpfr_div@@Base+0x19c8>
    fcd8:	cmp	x27, x1
    fcdc:	b.eq	fbb8 <mpfr_div@@Base+0x127c>  // b.none
    fce0:	mov	x0, x27
    fce4:	bl	ba90 <memcpy@plt>
    fce8:	b	fbb8 <mpfr_div@@Base+0x127c>
    fcec:	mov	w0, w28
    fcf0:	b	fbcc <mpfr_div@@Base+0x1290>
    fcf4:	lsl	x1, x22, #3
    fcf8:	cmp	x1, #0x4, lsl #12
    fcfc:	b.hi	fd30 <mpfr_div@@Base+0x13f4>  // b.pmore
    fd00:	add	x1, x1, #0xf
    fd04:	and	x1, x1, #0xfffffffffffffff0
    fd08:	sub	sp, sp, x1
    fd0c:	mov	x26, sp
    fd10:	ldr	x0, [x29, #208]
    fd14:	cmp	x26, x0
    fd18:	b.eq	fbf4 <mpfr_div@@Base+0x12b8>  // b.none
    fd1c:	mov	x1, x0
    fd20:	mov	x2, x25
    fd24:	mov	x0, x26
    fd28:	bl	ba90 <memcpy@plt>
    fd2c:	b	fbf4 <mpfr_div@@Base+0x12b8>
    fd30:	add	x0, x29, #0x100
    fd34:	bl	be40 <mpfr_tmp_allocate@plt>
    fd38:	mov	x26, x0
    fd3c:	b	fd10 <mpfr_div@@Base+0x13d4>
    fd40:	ldr	x0, [x29, #192]
    fd44:	mov	x24, #0x0                   	// #0
    fd48:	ldr	x26, [x29, #208]
    fd4c:	sub	x2, x22, x0
    fd50:	b	fc0c <mpfr_div@@Base+0x12d0>
    fd54:	mov	w3, #0x1                   	// #1
    fd58:	b	fc4c <mpfr_div@@Base+0x1310>
    fd5c:	add	x1, x23, #0x8
    fd60:	cmp	x1, x21
    fd64:	b.eq	fd78 <mpfr_div@@Base+0x143c>  // b.none
    fd68:	ldr	x0, [x29, #176]
    fd6c:	lsl	x2, x0, #3
    fd70:	mov	x0, x21
    fd74:	bl	ba90 <memcpy@plt>
    fd78:	mov	w1, #0x40                  	// #64
    fd7c:	ldr	x6, [x23]
    fd80:	b	fc78 <mpfr_div@@Base+0x133c>
    fd84:	ldr	w1, [x29, #144]
    fd88:	cbnz	w1, fd90 <mpfr_div@@Base+0x1454>
    fd8c:	cbnz	x0, f6c0 <mpfr_div@@Base+0xd84>
    fd90:	and	x24, x24, #0xff
    fd94:	str	xzr, [x29, #160]
    fd98:	b	fcbc <mpfr_div@@Base+0x1380>
    fd9c:	cbz	x0, fcd0 <mpfr_div@@Base+0x1394>
    fda0:	cbnz	w19, fee4 <mpfr_div@@Base+0x15a8>
    fda4:	sub	w1, w1, #0x1
    fda8:	mov	x24, #0x1                   	// #1
    fdac:	lsl	x1, x24, x1
    fdb0:	bic	x24, x6, x1
    fdb4:	and	x0, x1, x6
    fdb8:	str	x0, [x29, #160]
    fdbc:	cmp	x24, #0x1
    fdc0:	b.hi	fcbc <mpfr_div@@Base+0x1380>  // b.pmore
    fdc4:	cmp	x25, #0x4, lsl #12
    fdc8:	b.hi	fef0 <mpfr_div@@Base+0x15b4>  // b.pmore
    fdcc:	add	x25, x25, #0xf
    fdd0:	and	x25, x25, #0xfffffffffffffff0
    fdd4:	sub	sp, sp, x25
    fdd8:	mov	x26, sp
    fddc:	ldr	x0, [x29, #192]
    fde0:	str	x6, [x29, #112]
    fde4:	sub	x25, x0, x22
    fde8:	ldr	x0, [x23]
    fdec:	cmp	x22, x25
    fdf0:	eor	x0, x0, x6
    fdf4:	str	x0, [x23]
    fdf8:	b.lt	ff0c <mpfr_div@@Base+0x15d0>  // b.tstop
    fdfc:	ldr	x3, [x29, #208]
    fe00:	mov	x4, x25
    fe04:	mov	x2, x22
    fe08:	mov	x1, x23
    fe0c:	mov	x0, x26
    fe10:	bl	c830 <__gmpn_mul@plt>
    fe14:	ldr	x0, [x29, #136]
    fe18:	ldr	x6, [x29, #112]
    fe1c:	cbz	x0, ff20 <mpfr_div@@Base+0x15e4>
    fe20:	ldr	x2, [x29, #208]
    fe24:	add	x1, x26, x22, lsl #3
    fe28:	mov	x3, x25
    fe2c:	mov	x0, x1
    fe30:	str	x6, [x29, #112]
    fe34:	bl	c630 <__gmpn_add_n@plt>
    fe38:	mov	x11, x0
    fe3c:	ldr	x6, [x29, #112]
    fe40:	ldr	x0, [x23]
    fe44:	eor	x6, x0, x6
    fe48:	str	x6, [x23]
    fe4c:	cbnz	x11, 10248 <mpfr_div@@Base+0x190c>
    fe50:	lsl	x10, x25, #3
    fe54:	mov	x0, x22
    fe58:	add	x1, x26, x25, lsl #3
    fe5c:	sub	x0, x0, #0x1
    fe60:	cmn	x0, #0x1
    fe64:	b.ne	ff28 <mpfr_div@@Base+0x15ec>  // b.any
    fe68:	ldr	x1, [x29, #120]
    fe6c:	ldr	x0, [x29, #184]
    fe70:	cmp	x0, x1
    fe74:	b.lt	10058 <mpfr_div@@Base+0x171c>  // b.tstop
    fe78:	sub	x2, x0, x1
    fe7c:	cmp	x2, x25
    fe80:	b.gt	ffb4 <mpfr_div@@Base+0x1678>
    fe84:	ldr	x0, [x29, #216]
    fe88:	sub	x3, x25, x2
    fe8c:	mov	w1, #0x0                   	// #0
    fe90:	add	x6, x26, x3, lsl #3
    fe94:	add	x7, x0, #0x8
    fe98:	cmp	w1, #0x0
    fe9c:	ccmp	x2, #0x0, #0x4, eq  // eq = none
    fea0:	b.gt	ff6c <mpfr_div@@Base+0x1630>
    fea4:	cbz	w28, ffac <mpfr_div@@Base+0x1670>
    fea8:	ldr	x0, [x29, #216]
    feac:	ldr	x0, [x0]
    feb0:	lsl	x0, x0, #63
    feb4:	cmp	w1, #0x0
    feb8:	cset	w2, eq  // eq = none
    febc:	cmp	x3, #0x0
    fec0:	ccmp	w2, #0x0, #0x4, gt
    fec4:	b.ne	ff98 <mpfr_div@@Base+0x165c>  // b.any
    fec8:	cmp	x0, #0x0
    fecc:	ccmp	w2, #0x0, #0x4, ne  // ne = any
    fed0:	b.ne	ff3c <mpfr_div@@Base+0x1600>  // b.any
    fed4:	cmp	w1, #0x0
    fed8:	b.gt	1006c <mpfr_div@@Base+0x1730>
    fedc:	b.eq	fcbc <mpfr_div@@Base+0x1380>  // b.none
    fee0:	b	ff3c <mpfr_div@@Base+0x1600>
    fee4:	mov	x24, x6
    fee8:	str	xzr, [x29, #160]
    feec:	b	fdbc <mpfr_div@@Base+0x1480>
    fef0:	mov	x1, x25
    fef4:	add	x0, x29, #0x100
    fef8:	str	x6, [x29, #112]
    fefc:	bl	be40 <mpfr_tmp_allocate@plt>
    ff00:	mov	x26, x0
    ff04:	ldr	x6, [x29, #112]
    ff08:	b	fddc <mpfr_div@@Base+0x14a0>
    ff0c:	mov	x4, x22
    ff10:	mov	x3, x23
    ff14:	mov	x2, x25
    ff18:	ldr	x1, [x29, #208]
    ff1c:	b	fe0c <mpfr_div@@Base+0x14d0>
    ff20:	mov	x11, #0x0                   	// #0
    ff24:	b	fe40 <mpfr_div@@Base+0x1504>
    ff28:	ldr	x2, [x1, x0, lsl #3]
    ff2c:	ldr	x3, [x27, x0, lsl #3]
    ff30:	cmp	x3, x2
    ff34:	b.eq	fe5c <mpfr_div@@Base+0x1520>  // b.none
    ff38:	b.cc	1006c <mpfr_div@@Base+0x1730>  // b.lo, b.ul, b.last
    ff3c:	ldr	w0, [x29, #144]
    ff40:	mov	x24, #0x1                   	// #1
    ff44:	cbnz	w0, 102f4 <mpfr_div@@Base+0x19b8>
    ff48:	cbnz	w19, f6c0 <mpfr_div@@Base+0xd84>
    ff4c:	ldr	x0, [x29, #160]
    ff50:	cbz	x0, fa90 <mpfr_div@@Base+0x1154>
    ff54:	cbnz	x24, f6c0 <mpfr_div@@Base+0xd84>
    ff58:	ldr	x0, [x21]
    ff5c:	ldrb	w1, [x29, #200]
    ff60:	lsr	x0, x0, x1
    ff64:	tbnz	w0, #0, f6c0 <mpfr_div@@Base+0xd84>
    ff68:	b	fa90 <mpfr_div@@Base+0x1154>
    ff6c:	ldr	x0, [x29, #216]
    ff70:	sub	x2, x2, #0x1
    ff74:	ldr	x0, [x0, x2, lsl #3]
    ff78:	cbz	w28, ff84 <mpfr_div@@Base+0x1648>
    ff7c:	ldr	x1, [x7, x2, lsl #3]
    ff80:	extr	x0, x1, x0, #1
    ff84:	ldr	x4, [x6, x2, lsl #3]
    ff88:	cmp	x4, x0
    ff8c:	csetm	w1, cc  // cc = lo, ul, last
    ff90:	csinc	w1, w1, wzr, ls  // ls = plast
    ff94:	b	fe98 <mpfr_div@@Base+0x155c>
    ff98:	sub	x3, x3, #0x1
    ff9c:	ldr	x2, [x26, x3, lsl #3]
    ffa0:	cmp	x2, x0
    ffa4:	csetm	w1, cc  // cc = lo, ul, last
    ffa8:	csinc	w1, w1, wzr, ls  // ls = plast
    ffac:	mov	x0, #0x0                   	// #0
    ffb0:	b	feb4 <mpfr_div@@Base+0x1578>
    ffb4:	ldr	x0, [x29, #216]
    ffb8:	sub	x2, x2, x25
    ffbc:	mov	w1, #0x0                   	// #0
    ffc0:	add	x4, x0, x2, lsl #3
    ffc4:	mov	x0, x25
    ffc8:	add	x7, x4, #0x8
    ffcc:	cmp	w1, #0x0
    ffd0:	ccmp	x0, #0x0, #0x4, eq  // eq = none
    ffd4:	b.gt	1000c <mpfr_div@@Base+0x16d0>
    ffd8:	ldr	x0, [x29, #216]
    ffdc:	add	x3, x0, #0x8
    ffe0:	cmp	w1, #0x0
    ffe4:	cset	w0, eq  // eq = none
    ffe8:	cmp	x2, #0x0
    ffec:	ccmp	w0, #0x0, #0x4, gt
    fff0:	b.ne	10034 <mpfr_div@@Base+0x16f8>  // b.any
    fff4:	tst	w0, w28
    fff8:	b.eq	fed4 <mpfr_div@@Base+0x1598>  // b.none
    fffc:	ldr	x0, [x29, #216]
   10000:	ldr	x0, [x0]
   10004:	tbz	w0, #0, fcbc <mpfr_div@@Base+0x1380>
   10008:	b	ff3c <mpfr_div@@Base+0x1600>
   1000c:	sub	x0, x0, #0x1
   10010:	ldr	x3, [x4, x0, lsl #3]
   10014:	cbz	w28, 10020 <mpfr_div@@Base+0x16e4>
   10018:	ldr	x1, [x7, x0, lsl #3]
   1001c:	extr	x3, x1, x3, #1
   10020:	ldr	x6, [x26, x0, lsl #3]
   10024:	cmp	x6, x3
   10028:	csetm	w1, cc  // cc = lo, ul, last
   1002c:	csinc	w1, w1, wzr, ls  // ls = plast
   10030:	b	ffcc <mpfr_div@@Base+0x1690>
   10034:	ldr	x0, [x29, #216]
   10038:	sub	x2, x2, #0x1
   1003c:	ldr	x0, [x0, x2, lsl #3]
   10040:	cbz	w28, 1004c <mpfr_div@@Base+0x1710>
   10044:	ldr	x1, [x3, x2, lsl #3]
   10048:	extr	x0, x1, x0, #1
   1004c:	cmp	x0, #0x0
   10050:	csetm	w1, ne  // ne = any
   10054:	b	ffe0 <mpfr_div@@Base+0x16a4>
   10058:	mov	x1, x25
   1005c:	mov	x0, x26
   10060:	bl	16c6c <mpfr_div_2ui@@Base+0x3b4>
   10064:	mov	w1, w0
   10068:	b	fed4 <mpfr_div@@Base+0x1598>
   1006c:	ldr	x0, [x29, #152]
   10070:	cbz	x0, 10160 <mpfr_div@@Base+0x1824>
   10074:	ldr	x1, [x29, #120]
   10078:	ldr	x0, [x29, #184]
   1007c:	sub	x2, x0, x1
   10080:	sub	x6, x2, x25
   10084:	cmp	x25, x2
   10088:	csel	x6, x6, xzr, lt  // lt = tstop
   1008c:	cbz	w28, 10474 <mpfr_div@@Base+0x1b38>
   10090:	ldr	x0, [x29, #216]
   10094:	ldr	x3, [x0, x6, lsl #3]
   10098:	and	x3, x3, #0x1
   1009c:	b.gt	10124 <mpfr_div@@Base+0x17e8>
   100a0:	mov	w11, w28
   100a4:	cbnz	x3, 100bc <mpfr_div@@Base+0x1780>
   100a8:	ldr	x0, [x29, #216]
   100ac:	mov	x1, x6
   100b0:	bl	16c6c <mpfr_div_2ui@@Base+0x3b4>
   100b4:	cmp	w0, #0x0
   100b8:	cset	w11, ne  // ne = any
   100bc:	ldr	x0, [x29, #216]
   100c0:	sxtw	x11, w11
   100c4:	mov	w4, w28
   100c8:	mov	x3, x11
   100cc:	mov	x2, x25
   100d0:	add	x1, x0, x6, lsl #3
   100d4:	mov	x0, x26
   100d8:	bl	16c8c <mpfr_div_2ui@@Base+0x3d4>
   100dc:	str	x11, [x29, #152]
   100e0:	ldr	x2, [x26, x10]
   100e4:	add	x1, x26, x10
   100e8:	sub	x3, x2, x0
   100ec:	str	x3, [x26, x10]
   100f0:	cmp	x0, x2
   100f4:	b.hi	10188 <mpfr_div@@Base+0x184c>  // b.pmore
   100f8:	mov	x3, x22
   100fc:	mov	x2, x27
   10100:	mov	x0, x1
   10104:	bl	bee0 <__gmpn_sub_n@plt>
   10108:	ldr	x0, [x29, #192]
   1010c:	sub	x0, x0, #0x1
   10110:	str	x0, [x29, #192]
   10114:	cmn	x0, #0x1
   10118:	b.ne	10190 <mpfr_div@@Base+0x1854>  // b.any
   1011c:	mov	w28, #0x0                   	// #0
   10120:	b	101b4 <mpfr_div@@Base+0x1878>
   10124:	sub	x0, x25, x2
   10128:	lsl	x0, x0, #3
   1012c:	cbz	x3, 1014c <mpfr_div@@Base+0x1810>
   10130:	sub	x0, x0, #0x8
   10134:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   10138:	ldr	x3, [x26, x0]
   1013c:	add	x1, x3, x1
   10140:	mvn	x3, x3
   10144:	str	x1, [x26, x0]
   10148:	lsr	x3, x3, #63
   1014c:	sub	x0, x25, x2
   10150:	mov	w4, w28
   10154:	ldr	x1, [x29, #216]
   10158:	add	x0, x26, x0, lsl #3
   1015c:	b	100d8 <mpfr_div@@Base+0x179c>
   10160:	mov	x0, #0x0                   	// #0
   10164:	b	100e0 <mpfr_div@@Base+0x17a4>
   10168:	ldr	x2, [x1, x0, lsl #3]
   1016c:	sub	x3, x2, #0x1
   10170:	str	x3, [x1, x0, lsl #3]
   10174:	add	x0, x0, #0x1
   10178:	cbnz	x2, 100f8 <mpfr_div@@Base+0x17bc>
   1017c:	cmp	x22, x0
   10180:	b.ne	10168 <mpfr_div@@Base+0x182c>  // b.any
   10184:	b	100f8 <mpfr_div@@Base+0x17bc>
   10188:	mov	x0, #0x1                   	// #1
   1018c:	b	1017c <mpfr_div@@Base+0x1840>
   10190:	ldr	x0, [x29, #192]
   10194:	ldr	x2, [x29, #192]
   10198:	ldr	x1, [x26, x0, lsl #3]
   1019c:	ldr	x0, [x29, #208]
   101a0:	ldr	x0, [x0, x2, lsl #3]
   101a4:	cmp	x1, x0
   101a8:	b.eq	10108 <mpfr_div@@Base+0x17cc>  // b.none
   101ac:	mov	w0, #0xffffffff            	// #-1
   101b0:	cneg	w28, w0, hi  // hi = pmore
   101b4:	ldr	w0, [x29, #152]
   101b8:	cmp	w28, #0x0
   101bc:	and	w0, w0, #0x1
   101c0:	csel	w0, w0, wzr, eq  // eq = none
   101c4:	cbnz	w0, 10248 <mpfr_div@@Base+0x190c>
   101c8:	cmp	w28, #0x1
   101cc:	b.eq	10248 <mpfr_div@@Base+0x190c>  // b.none
   101d0:	cmp	x24, #0x1
   101d4:	b.ne	101e4 <mpfr_div@@Base+0x18a8>  // b.any
   101d8:	cmp	w28, #0x0
   101dc:	cset	x24, ne  // ne = any
   101e0:	b	fcbc <mpfr_div@@Base+0x1380>
   101e4:	ldr	x0, [x29, #160]
   101e8:	cbnz	x0, 10304 <mpfr_div@@Base+0x19c8>
   101ec:	cbz	w19, 1039c <mpfr_div@@Base+0x1a60>
   101f0:	ldr	w0, [x29, #200]
   101f4:	orr	w28, w28, w0
   101f8:	ldr	w0, [x29, #144]
   101fc:	cbz	w0, 1023c <mpfr_div@@Base+0x1900>
   10200:	cmp	w28, #0x0
   10204:	csetm	w28, ne  // ne = any
   10208:	ldrb	w1, [x29, #200]
   1020c:	mov	x0, #0x1                   	// #1
   10210:	lsl	x2, x0, x1
   10214:	ldr	x1, [x21]
   10218:	sub	x3, x1, x2
   1021c:	str	x3, [x21]
   10220:	cmp	x2, x1
   10224:	b.hi	10388 <mpfr_div@@Base+0x1a4c>  // b.pmore
   10228:	mov	x0, #0x0                   	// #0
   1022c:	ldr	x1, [x29, #136]
   10230:	sub	x0, x1, x0
   10234:	str	x0, [x29, #136]
   10238:	b	10264 <mpfr_div@@Base+0x1928>
   1023c:	cbnz	w28, 1039c <mpfr_div@@Base+0x1a60>
   10240:	str	wzr, [x29, #200]
   10244:	b	10208 <mpfr_div@@Base+0x18cc>
   10248:	cbnz	w19, 102ac <mpfr_div@@Base+0x1970>
   1024c:	ldr	w0, [x29, #200]
   10250:	cmp	w0, #0x1
   10254:	b.ne	10298 <mpfr_div@@Base+0x195c>  // b.any
   10258:	ldr	x0, [x29, #160]
   1025c:	cbz	x0, 102bc <mpfr_div@@Base+0x1980>
   10260:	ldr	w28, [x29, #200]
   10264:	ldr	x0, [x29, #136]
   10268:	cbz	x0, 10304 <mpfr_div@@Base+0x19c8>
   1026c:	ldr	x1, [x29, #168]
   10270:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   10274:	cmp	x1, x0
   10278:	b.eq	10284 <mpfr_div@@Base+0x1948>  // b.none
   1027c:	add	x0, x1, #0x1
   10280:	str	x0, [x29, #168]
   10284:	ldr	x0, [x29, #176]
   10288:	add	x21, x21, x0, lsl #3
   1028c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   10290:	stur	x0, [x21, #-8]
   10294:	b	10304 <mpfr_div@@Base+0x19c8>
   10298:	ldr	x1, [x29, #160]
   1029c:	mov	w0, #0xffffffff            	// #-1
   102a0:	cmp	x1, #0x0
   102a4:	cneg	w28, w0, eq  // eq = none
   102a8:	b	10264 <mpfr_div@@Base+0x1928>
   102ac:	ldr	w0, [x29, #144]
   102b0:	cbz	w0, 102e4 <mpfr_div@@Base+0x19a8>
   102b4:	ldr	w0, [x29, #200]
   102b8:	cbnz	w0, 1036c <mpfr_div@@Base+0x1a30>
   102bc:	ldr	x0, [x21]
   102c0:	sub	x1, x0, #0x1
   102c4:	str	x1, [x21]
   102c8:	cbz	x0, 10364 <mpfr_div@@Base+0x1a28>
   102cc:	mov	x0, #0x0                   	// #0
   102d0:	ldr	x1, [x29, #136]
   102d4:	mov	w28, #0xffffffff            	// #-1
   102d8:	sub	x0, x1, x0
   102dc:	str	x0, [x29, #136]
   102e0:	b	10240 <mpfr_div@@Base+0x1904>
   102e4:	ldr	w0, [x29, #200]
   102e8:	mov	w28, #0x1                   	// #1
   102ec:	cbnz	w0, 10264 <mpfr_div@@Base+0x1928>
   102f0:	b	10208 <mpfr_div@@Base+0x18cc>
   102f4:	ldr	x0, [x29, #160]
   102f8:	orr	x24, x24, x0
   102fc:	cmp	x24, #0x0
   10300:	csetm	w28, ne  // ne = any
   10304:	ldr	x0, [x29, #256]
   10308:	cbz	x0, 10310 <mpfr_div@@Base+0x19d4>
   1030c:	bl	c4a0 <mpfr_tmp_free@plt>
   10310:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   10314:	ldr	x1, [x0, #2560]
   10318:	add	x0, x0, #0xa00
   1031c:	blr	x1
   10320:	mrs	x1, tpidr_el0
   10324:	ldr	x2, [x29, #168]
   10328:	ldr	x0, [x1, x0]
   1032c:	cmp	x0, x2
   10330:	b.ge	103f0 <mpfr_div@@Base+0x1ab4>  // b.tcont
   10334:	ldr	w2, [x29, #128]
   10338:	b	ebe4 <mpfr_div@@Base+0x2a8>
   1033c:	ldr	x1, [x21, x0, lsl #3]
   10340:	sub	x2, x1, #0x1
   10344:	str	x2, [x21, x0, lsl #3]
   10348:	add	x0, x0, #0x1
   1034c:	cbnz	x1, 102cc <mpfr_div@@Base+0x1990>
   10350:	ldr	x1, [x29, #176]
   10354:	cmp	x1, x0
   10358:	b.gt	1033c <mpfr_div@@Base+0x1a00>
   1035c:	mov	x0, #0x1                   	// #1
   10360:	b	102d0 <mpfr_div@@Base+0x1994>
   10364:	mov	x0, #0x1                   	// #1
   10368:	b	10350 <mpfr_div@@Base+0x1a14>
   1036c:	mov	w28, #0xffffffff            	// #-1
   10370:	b	10208 <mpfr_div@@Base+0x18cc>
   10374:	ldr	x1, [x21, x0, lsl #3]
   10378:	sub	x2, x1, #0x1
   1037c:	str	x2, [x21, x0, lsl #3]
   10380:	add	x0, x0, #0x1
   10384:	cbnz	x1, 10228 <mpfr_div@@Base+0x18ec>
   10388:	ldr	x1, [x29, #176]
   1038c:	cmp	x1, x0
   10390:	b.gt	10374 <mpfr_div@@Base+0x1a38>
   10394:	mov	x0, #0x1                   	// #1
   10398:	b	1022c <mpfr_div@@Base+0x18f0>
   1039c:	mov	w28, #0x1                   	// #1
   103a0:	b	10264 <mpfr_div@@Base+0x1928>
   103a4:	ldr	x0, [x21, x4, lsl #3]
   103a8:	add	x0, x0, #0x1
   103ac:	str	x0, [x21, x4, lsl #3]
   103b0:	add	x4, x4, #0x1
   103b4:	cbnz	x0, f6dc <mpfr_div@@Base+0xda0>
   103b8:	ldr	x0, [x29, #176]
   103bc:	cmp	x0, x4
   103c0:	b.gt	103a4 <mpfr_div@@Base+0x1a68>
   103c4:	ldr	x1, [x29, #168]
   103c8:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   103cc:	cmp	x1, x0
   103d0:	b.eq	103dc <mpfr_div@@Base+0x1aa0>  // b.none
   103d4:	add	x0, x1, #0x1
   103d8:	str	x0, [x29, #168]
   103dc:	ldr	x0, [x29, #176]
   103e0:	add	x21, x21, x0, lsl #3
   103e4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   103e8:	stur	x0, [x21, #-8]
   103ec:	b	f6dc <mpfr_div@@Base+0xda0>
   103f0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   103f4:	ldr	x2, [x0, #2528]
   103f8:	add	x0, x0, #0x9e0
   103fc:	blr	x2
   10400:	ldr	x0, [x1, x0]
   10404:	ldr	x2, [x29, #168]
   10408:	cmp	x0, x2
   1040c:	b.le	10448 <mpfr_div@@Base+0x1b0c>
   10410:	cbnz	w19, 10438 <mpfr_div@@Base+0x1afc>
   10414:	sub	x0, x0, #0x1
   10418:	cmp	x0, x2
   1041c:	b.gt	10440 <mpfr_div@@Base+0x1b04>
   10420:	cmn	w28, #0x1
   10424:	b.eq	10438 <mpfr_div@@Base+0x1afc>  // b.none
   10428:	mov	x0, x20
   1042c:	bl	bf80 <mpfr_powerof2_raw@plt>
   10430:	cmp	w0, #0x0
   10434:	cset	w19, ne  // ne = any
   10438:	ldr	w2, [x29, #128]
   1043c:	b	ec9c <mpfr_div@@Base+0x360>
   10440:	mov	w19, #0x1                   	// #1
   10444:	b	10438 <mpfr_div@@Base+0x1afc>
   10448:	ldr	x0, [x29, #168]
   1044c:	str	x0, [x20, #16]
   10450:	ldr	w0, [x29, #128]
   10454:	mul	w28, w0, w28
   10458:	cbz	w28, ea04 <mpfr_div@@Base+0xc8>
   1045c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   10460:	ldr	x2, [x0, #2592]
   10464:	add	x0, x0, #0xa20
   10468:	blr	x2
   1046c:	add	x0, x1, x0
   10470:	b	ecf0 <mpfr_div@@Base+0x3b4>
   10474:	b.le	100a8 <mpfr_div@@Base+0x176c>
   10478:	mov	x3, #0x0                   	// #0
   1047c:	b	1014c <mpfr_div@@Base+0x1810>

0000000000010480 <mpfr_div_ui@@Base>:
   10480:	stp	x29, x30, [sp, #-160]!
   10484:	mov	x4, x2
   10488:	mov	x5, x1
   1048c:	mov	x29, sp
   10490:	stp	x27, x28, [sp, #80]
   10494:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   10498:	ldr	x27, [x1, #16]
   1049c:	stp	x19, x20, [sp, #16]
   104a0:	mov	x20, x0
   104a4:	stp	x21, x22, [sp, #32]
   104a8:	cmp	x27, x2
   104ac:	stp	x23, x24, [sp, #48]
   104b0:	stp	x25, x26, [sp, #64]
   104b4:	b.gt	10540 <mpfr_div_ui@@Base+0xc0>
   104b8:	mov	x0, #0x2                   	// #2
   104bc:	movk	x0, #0x8000, lsl #48
   104c0:	cmp	x27, x0
   104c4:	b.ne	104f4 <mpfr_div_ui@@Base+0x74>  // b.any
   104c8:	str	x0, [x20, #16]
   104cc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   104d0:	ldr	x1, [x0, #2592]
   104d4:	add	x0, x0, #0xa20
   104d8:	blr	x1
   104dc:	mrs	x1, tpidr_el0
   104e0:	add	x0, x1, x0
   104e4:	ldr	w1, [x0]
   104e8:	orr	w1, w1, #0x4
   104ec:	str	w1, [x0]
   104f0:	b	10508 <mpfr_div_ui@@Base+0x88>
   104f4:	cmp	x27, x2
   104f8:	b.ne	10530 <mpfr_div_ui@@Base+0xb0>  // b.any
   104fc:	str	x27, [x20, #16]
   10500:	ldr	w0, [x5, #8]
   10504:	str	w0, [x20, #8]
   10508:	mov	w1, #0x0                   	// #0
   1050c:	mov	sp, x29
   10510:	mov	w0, w1
   10514:	ldp	x19, x20, [sp, #16]
   10518:	ldp	x21, x22, [sp, #32]
   1051c:	ldp	x23, x24, [sp, #48]
   10520:	ldp	x25, x26, [sp, #64]
   10524:	ldp	x27, x28, [sp, #80]
   10528:	ldp	x29, x30, [sp], #160
   1052c:	ret
   10530:	cbz	x4, 104c8 <mpfr_div_ui@@Base+0x48>
   10534:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   10538:	str	x0, [x20, #16]
   1053c:	b	10500 <mpfr_div_ui@@Base+0x80>
   10540:	mov	w21, w3
   10544:	cmp	x4, #0x1
   10548:	b.hi	10590 <mpfr_div_ui@@Base+0x110>  // b.pmore
   1054c:	ldr	w3, [x1, #8]
   10550:	cbnz	x4, 10580 <mpfr_div_ui@@Base+0x100>
   10554:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   10558:	ldr	x1, [x0, #2592]
   1055c:	add	x0, x0, #0xa20
   10560:	blr	x1
   10564:	str	w3, [x20, #8]
   10568:	mrs	x1, tpidr_el0
   1056c:	str	x2, [x20, #16]
   10570:	add	x0, x1, x0
   10574:	ldr	w1, [x0]
   10578:	orr	w1, w1, #0x20
   1057c:	b	104ec <mpfr_div_ui@@Base+0x6c>
   10580:	mov	w2, w21
   10584:	bl	c730 <mpfr_set4@plt>
   10588:	mov	w1, w0
   1058c:	b	1050c <mpfr_div_ui@@Base+0x8c>
   10590:	sub	x2, x4, #0x1
   10594:	tst	x2, x4
   10598:	b.ne	105b4 <mpfr_div_ui@@Base+0x134>  // b.any
   1059c:	clz	x2, x2
   105a0:	mov	w4, #0x40                  	// #64
   105a4:	sub	w2, w4, w2
   105a8:	sxtw	x2, w2
   105ac:	bl	c4b0 <mpfr_div_2si@plt>
   105b0:	b	10588 <mpfr_div_ui@@Base+0x108>
   105b4:	ldr	x19, [x20]
   105b8:	str	xzr, [x29, #152]
   105bc:	ldr	x25, [x1]
   105c0:	sub	x19, x19, #0x1
   105c4:	ldr	w0, [x1, #8]
   105c8:	asr	x19, x19, #6
   105cc:	sub	x25, x25, #0x1
   105d0:	ldr	x28, [x1, #24]
   105d4:	str	w0, [x20, #8]
   105d8:	add	x0, x19, #0x1
   105dc:	add	x19, x19, #0x2
   105e0:	asr	x25, x25, #6
   105e4:	str	x0, [x29, #128]
   105e8:	lsl	x0, x19, #3
   105ec:	str	x0, [x29, #136]
   105f0:	add	x25, x25, #0x1
   105f4:	cmp	x0, #0x4, lsl #12
   105f8:	sub	x26, x19, x25
   105fc:	ldr	x24, [x20, #24]
   10600:	b.hi	106b8 <mpfr_div_ui@@Base+0x238>  // b.pmore
   10604:	add	x0, x0, #0xf
   10608:	and	x0, x0, #0xfffffffffffffff0
   1060c:	sub	sp, sp, x0
   10610:	mov	x23, sp
   10614:	str	x4, [x29, #120]
   10618:	tbnz	x26, #63, 106d4 <mpfr_div_ui@@Base+0x254>
   1061c:	mov	x3, x25
   10620:	mov	x2, x28
   10624:	mov	x1, x26
   10628:	mov	x0, x23
   1062c:	bl	c850 <__gmpn_divrem_1@plt>
   10630:	ldr	x4, [x29, #120]
   10634:	sub	x25, x25, x19
   10638:	mov	x22, x0
   1063c:	mov	x0, #0x0                   	// #0
   10640:	cmp	x25, x0
   10644:	b.gt	106e4 <mpfr_div_ui@@Base+0x264>
   10648:	mov	x7, #0x0                   	// #0
   1064c:	ldr	x2, [x20]
   10650:	orr	x19, x7, x22
   10654:	ldr	x0, [x29, #136]
   10658:	neg	w2, w2
   1065c:	and	w25, w2, #0x3f
   10660:	sub	x2, x0, #0x8
   10664:	ldr	x3, [x23, x2]
   10668:	cbnz	x3, 107cc <mpfr_div_ui@@Base+0x34c>
   1066c:	cmp	x23, x24
   10670:	b.eq	10690 <mpfr_div_ui@@Base+0x210>  // b.none
   10674:	mov	x1, x23
   10678:	mov	x0, x24
   1067c:	stp	x4, x3, [x29, #104]
   10680:	str	x7, [x29, #120]
   10684:	bl	ba90 <memcpy@plt>
   10688:	ldp	x4, x3, [x29, #104]
   1068c:	ldr	x7, [x29, #120]
   10690:	sub	x27, x27, #0x40
   10694:	cbnz	w25, 10740 <mpfr_div_ui@@Base+0x2c0>
   10698:	sub	x0, x4, x22
   1069c:	cmp	x0, x22
   106a0:	b.hi	106f8 <mpfr_div_ui@@Base+0x278>  // b.pmore
   106a4:	lsl	x22, x22, #1
   106a8:	sub	x22, x22, x4
   106ac:	orr	x19, x22, x7
   106b0:	mov	x3, #0x1                   	// #1
   106b4:	b	10768 <mpfr_div_ui@@Base+0x2e8>
   106b8:	lsl	x1, x19, #3
   106bc:	add	x0, x29, #0x98
   106c0:	str	x4, [x29, #120]
   106c4:	bl	be40 <mpfr_tmp_allocate@plt>
   106c8:	mov	x23, x0
   106cc:	ldr	x4, [x29, #120]
   106d0:	b	10614 <mpfr_div_ui@@Base+0x194>
   106d4:	mov	x3, x19
   106d8:	sub	x2, x28, x26, lsl #3
   106dc:	mov	x1, #0x0                   	// #0
   106e0:	b	10628 <mpfr_div_ui@@Base+0x1a8>
   106e4:	ldr	x1, [x28, x0, lsl #3]
   106e8:	add	x0, x0, #0x1
   106ec:	cbz	x1, 10640 <mpfr_div_ui@@Base+0x1c0>
   106f0:	mov	x7, #0x1                   	// #1
   106f4:	b	1064c <mpfr_div_ui@@Base+0x1cc>
   106f8:	cmp	x22, x4, lsr #1
   106fc:	b.ne	10768 <mpfr_div_ui@@Base+0x2e8>  // b.any
   10700:	tbz	x26, #63, 10768 <mpfr_div_ui@@Base+0x2e8>
   10704:	mov	x0, #0xfffffffffffffff8    	// #-8
   10708:	madd	x0, x26, x0, x0
   1070c:	ldr	x0, [x28, x0]
   10710:	tbz	x0, #63, 10768 <mpfr_div_ui@@Base+0x2e8>
   10714:	mvn	x26, x26
   10718:	lsl	x19, x0, #1
   1071c:	mov	x0, #0x0                   	// #0
   10720:	cbnz	x19, 106b0 <mpfr_div_ui@@Base+0x230>
   10724:	cmp	x26, x0
   10728:	b.le	106b0 <mpfr_div_ui@@Base+0x230>
   1072c:	ldr	x1, [x28, x0, lsl #3]
   10730:	add	x0, x0, #0x1
   10734:	cmp	x1, #0x0
   10738:	cset	x19, ne  // ne = any
   1073c:	b	10720 <mpfr_div_ui@@Base+0x2a0>
   10740:	ldr	x0, [x23]
   10744:	sub	w1, w25, #0x1
   10748:	mov	x19, #0xffffffffffffffff    	// #-1
   1074c:	mov	x3, #0x1                   	// #1
   10750:	lsl	x19, x19, x1
   10754:	bic	x19, x0, x19
   10758:	orr	x19, x19, x22
   1075c:	lsl	x3, x3, x1
   10760:	orr	x19, x19, x7
   10764:	and	x3, x3, x0
   10768:	mov	x0, #0xffffffffffffffff    	// #-1
   1076c:	lsl	x1, x0, x25
   10770:	ldr	x0, [x24]
   10774:	and	x0, x0, x1
   10778:	str	x0, [x24]
   1077c:	ldr	x0, [x29, #152]
   10780:	cbz	x0, 10790 <mpfr_div_ui@@Base+0x310>
   10784:	str	x3, [x29, #120]
   10788:	bl	c4a0 <mpfr_tmp_free@plt>
   1078c:	ldr	x3, [x29, #120]
   10790:	mrs	x4, tpidr_el0
   10794:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   10798:	ldr	x1, [x0, #2528]
   1079c:	add	x0, x0, #0x9e0
   107a0:	blr	x1
   107a4:	ldr	x0, [x4, x0]
   107a8:	sub	x0, x0, #0x1
   107ac:	cmp	x0, x27
   107b0:	b.le	10844 <mpfr_div_ui@@Base+0x3c4>
   107b4:	ldr	w2, [x20, #8]
   107b8:	cmp	w21, #0x0
   107bc:	csinc	w1, w21, wzr, ne  // ne = any
   107c0:	mov	x0, x20
   107c4:	bl	c450 <mpfr_underflow@plt>
   107c8:	b	10588 <mpfr_div_ui@@Base+0x108>
   107cc:	mov	x1, x23
   107d0:	clz	x26, x3
   107d4:	ldr	x2, [x29, #128]
   107d8:	mov	w3, w26
   107dc:	ldr	x22, [x1], #8
   107e0:	mov	x0, x24
   107e4:	bl	bd40 <__gmpn_lshift@plt>
   107e8:	lsl	x22, x22, x26
   107ec:	ldr	x0, [x23]
   107f0:	neg	w1, w26
   107f4:	lsr	x0, x0, x1
   107f8:	ldr	x1, [x24]
   107fc:	orr	x0, x0, x1
   10800:	str	x0, [x24]
   10804:	cbnz	w25, 1081c <mpfr_div_ui@@Base+0x39c>
   10808:	and	x3, x22, #0x8000000000000000
   1080c:	and	x22, x22, #0x7fffffffffffffff
   10810:	orr	x19, x19, x22
   10814:	sub	x27, x27, x26
   10818:	b	10768 <mpfr_div_ui@@Base+0x2e8>
   1081c:	sub	w2, w25, #0x1
   10820:	mov	x3, #0x1                   	// #1
   10824:	mov	x1, #0xffffffffffffffff    	// #-1
   10828:	orr	x19, x19, x22
   1082c:	lsl	x3, x3, x2
   10830:	and	x3, x3, x0
   10834:	lsl	x1, x1, x2
   10838:	bic	x0, x0, x1
   1083c:	orr	x19, x0, x19
   10840:	b	10814 <mpfr_div_ui@@Base+0x394>
   10844:	orr	x0, x3, x19
   10848:	cbz	x0, 10958 <mpfr_div_ui@@Base+0x4d8>
   1084c:	ldr	w1, [x20, #8]
   10850:	cmp	w21, #0x2
   10854:	b.ne	108b4 <mpfr_div_ui@@Base+0x434>  // b.any
   10858:	cmp	w1, #0x0
   1085c:	b.gt	108c0 <mpfr_div_ui@@Base+0x440>
   10860:	mov	w21, #0x1                   	// #1
   10864:	neg	w1, w1
   10868:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1086c:	ldr	x2, [x0, #2528]
   10870:	add	x0, x0, #0x9e0
   10874:	blr	x2
   10878:	str	x27, [x20, #16]
   1087c:	ldr	x0, [x4, x0]
   10880:	cmp	x0, x27
   10884:	b.gt	108a4 <mpfr_div_ui@@Base+0x424>
   10888:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1088c:	ldr	x2, [x0, #2560]
   10890:	add	x0, x0, #0xa00
   10894:	blr	x2
   10898:	ldr	x0, [x4, x0]
   1089c:	cmp	x0, x27
   108a0:	b.ge	10960 <mpfr_div_ui@@Base+0x4e0>  // b.tcont
   108a4:	mov	w2, w21
   108a8:	mov	x0, x20
   108ac:	bl	cbc0 <mpfr_check_range@plt>
   108b0:	b	10588 <mpfr_div_ui@@Base+0x108>
   108b4:	cmp	w21, #0x3
   108b8:	b.ne	108e4 <mpfr_div_ui@@Base+0x464>  // b.any
   108bc:	tbz	w1, #31, 10860 <mpfr_div_ui@@Base+0x3e0>
   108c0:	mov	w21, #0x4                   	// #4
   108c4:	ldr	x0, [x24]
   108c8:	mov	x3, #0x1                   	// #1
   108cc:	lsl	x2, x3, x25
   108d0:	adds	x2, x2, x0
   108d4:	str	x2, [x24]
   108d8:	b.cc	10868 <mpfr_div_ui@@Base+0x3e8>  // b.lo, b.ul, b.last
   108dc:	mov	x2, x3
   108e0:	b	10934 <mpfr_div_ui@@Base+0x4b4>
   108e4:	cmp	w21, #0x4
   108e8:	b.eq	108c0 <mpfr_div_ui@@Base+0x440>  // b.none
   108ec:	and	w0, w21, #0xfffffffb
   108f0:	cmp	w0, #0x1
   108f4:	b.eq	10864 <mpfr_div_ui@@Base+0x3e4>  // b.none
   108f8:	cbnz	x3, 10908 <mpfr_div_ui@@Base+0x488>
   108fc:	neg	w1, w1
   10900:	mov	w21, #0x0                   	// #0
   10904:	b	10868 <mpfr_div_ui@@Base+0x3e8>
   10908:	cbnz	x19, 10918 <mpfr_div_ui@@Base+0x498>
   1090c:	ldr	x0, [x24]
   10910:	lsr	x0, x0, x25
   10914:	tbz	w0, #0, 108fc <mpfr_div_ui@@Base+0x47c>
   10918:	mov	w21, #0x0                   	// #0
   1091c:	b	108c4 <mpfr_div_ui@@Base+0x444>
   10920:	ldr	x0, [x24, x2, lsl #3]
   10924:	add	x0, x0, #0x1
   10928:	str	x0, [x24, x2, lsl #3]
   1092c:	add	x2, x2, #0x1
   10930:	cbnz	x0, 10868 <mpfr_div_ui@@Base+0x3e8>
   10934:	ldr	x0, [x29, #128]
   10938:	cmp	x0, x2
   1093c:	b.gt	10920 <mpfr_div_ui@@Base+0x4a0>
   10940:	ldr	x0, [x29, #136]
   10944:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   10948:	add	x27, x27, #0x1
   1094c:	add	x0, x24, x0
   10950:	stur	x2, [x0, #-16]
   10954:	b	10868 <mpfr_div_ui@@Base+0x3e8>
   10958:	mov	w1, #0x0                   	// #0
   1095c:	b	10868 <mpfr_div_ui@@Base+0x3e8>
   10960:	cbz	w1, 1050c <mpfr_div_ui@@Base+0x8c>
   10964:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   10968:	ldr	x2, [x0, #2592]
   1096c:	add	x0, x0, #0xa20
   10970:	blr	x2
   10974:	add	x0, x4, x0
   10978:	ldr	w2, [x0]
   1097c:	orr	w2, w2, #0x8
   10980:	str	w2, [x0]
   10984:	b	1050c <mpfr_div_ui@@Base+0x8c>

0000000000010988 <mpfr_mul@@Base>:
   10988:	stp	x29, x30, [sp, #-288]!
   1098c:	mov	x29, sp
   10990:	ldr	x6, [x1, #16]
   10994:	stp	x19, x20, [sp, #16]
   10998:	mov	x20, x1
   1099c:	stp	x21, x22, [sp, #32]
   109a0:	mov	x19, x2
   109a4:	stp	x23, x24, [sp, #48]
   109a8:	stp	x25, x26, [sp, #64]
   109ac:	mov	x25, x0
   109b0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   109b4:	stp	x27, x28, [sp, #80]
   109b8:	cmp	x6, x0
   109bc:	b.le	10a10 <mpfr_mul@@Base+0x88>
   109c0:	ldr	x28, [x2, #16]
   109c4:	cmp	x28, x0
   109c8:	b.gt	10aa0 <mpfr_mul@@Base+0x118>
   109cc:	ldr	x1, [x19, #16]
   109d0:	mov	x0, #0x2                   	// #2
   109d4:	movk	x0, #0x8000, lsl #48
   109d8:	cmp	x1, x0
   109dc:	b.eq	10a20 <mpfr_mul@@Base+0x98>  // b.none
   109e0:	ldr	w2, [x19, #8]
   109e4:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   109e8:	ldr	w0, [x20, #8]
   109ec:	cmp	x6, x3
   109f0:	mul	w0, w0, w2
   109f4:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   109f8:	b.ne	10a78 <mpfr_mul@@Base+0xf0>  // b.any
   109fc:	cmp	x1, x2
   10a00:	b.eq	10a20 <mpfr_mul@@Base+0x98>  // b.none
   10a04:	str	w0, [x25, #8]
   10a08:	str	x6, [x25, #16]
   10a0c:	b	10a50 <mpfr_mul@@Base+0xc8>
   10a10:	mov	x0, #0x2                   	// #2
   10a14:	movk	x0, #0x8000, lsl #48
   10a18:	cmp	x6, x0
   10a1c:	b.ne	109cc <mpfr_mul@@Base+0x44>  // b.any
   10a20:	mov	x0, #0x2                   	// #2
   10a24:	movk	x0, #0x8000, lsl #48
   10a28:	str	x0, [x25, #16]
   10a2c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   10a30:	ldr	x1, [x0, #2592]
   10a34:	add	x0, x0, #0xa20
   10a38:	blr	x1
   10a3c:	mrs	x1, tpidr_el0
   10a40:	add	x0, x1, x0
   10a44:	ldr	w1, [x0]
   10a48:	orr	w1, w1, #0x4
   10a4c:	str	w1, [x0]
   10a50:	mov	w21, #0x0                   	// #0
   10a54:	mov	sp, x29
   10a58:	mov	w0, w21
   10a5c:	ldp	x19, x20, [sp, #16]
   10a60:	ldp	x21, x22, [sp, #32]
   10a64:	ldp	x23, x24, [sp, #48]
   10a68:	ldp	x25, x26, [sp, #64]
   10a6c:	ldp	x27, x28, [sp, #80]
   10a70:	ldp	x29, x30, [sp], #288
   10a74:	ret
   10a78:	cmp	x1, x3
   10a7c:	b.ne	10a94 <mpfr_mul@@Base+0x10c>  // b.any
   10a80:	cmp	x6, x2
   10a84:	b.eq	10a20 <mpfr_mul@@Base+0x98>  // b.none
   10a88:	str	w0, [x25, #8]
   10a8c:	str	x1, [x25, #16]
   10a90:	b	10a50 <mpfr_mul@@Base+0xc8>
   10a94:	str	w0, [x25, #8]
   10a98:	str	x2, [x25, #16]
   10a9c:	b	10a50 <mpfr_mul@@Base+0xc8>
   10aa0:	ldr	x0, [x25]
   10aa4:	str	x0, [x29, #184]
   10aa8:	ldr	x1, [x1]
   10aac:	mov	w27, w3
   10ab0:	ldr	x0, [x2]
   10ab4:	add	x26, x6, x28
   10ab8:	ldr	x2, [x29, #184]
   10abc:	cmp	x2, x1
   10ac0:	ccmp	x2, x0, #0x0, eq  // eq = none
   10ac4:	b.ne	11380 <mpfr_mul@@Base+0x9f8>  // b.any
   10ac8:	cmp	x2, #0x3f
   10acc:	b.gt	10cf0 <mpfr_mul@@Base+0x368>
   10ad0:	ldr	x0, [x20, #24]
   10ad4:	mov	x11, #0x40                  	// #64
   10ad8:	mov	x1, #0x1                   	// #1
   10adc:	ldr	x8, [x25, #24]
   10ae0:	ldr	x2, [x0]
   10ae4:	ldr	x0, [x19, #24]
   10ae8:	ldr	x4, [x0]
   10aec:	ldr	x0, [x29, #184]
   10af0:	sub	x11, x11, x0
   10af4:	umulh	x0, x2, x4
   10af8:	lsl	x9, x1, x11
   10afc:	mul	x2, x2, x4
   10b00:	sub	x3, x9, #0x1
   10b04:	tbnz	x0, #63, 10b14 <mpfr_mul@@Base+0x18c>
   10b08:	sub	x26, x26, #0x1
   10b0c:	extr	x0, x0, x2, #63
   10b10:	lsl	x2, x2, #1
   10b14:	sub	w4, w11, #0x1
   10b18:	mov	x10, #0x1                   	// #1
   10b1c:	ldr	w21, [x20, #8]
   10b20:	mrs	x12, tpidr_el0
   10b24:	lsl	x4, x10, x4
   10b28:	eor	x3, x3, x4
   10b2c:	and	x3, x3, x0
   10b30:	and	x13, x4, x0
   10b34:	neg	x4, x9
   10b38:	orr	x1, x3, x2
   10b3c:	and	x2, x0, x4
   10b40:	ldr	w0, [x19, #8]
   10b44:	str	x2, [x8]
   10b48:	mul	w21, w21, w0
   10b4c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   10b50:	ldr	x3, [x0, #2560]
   10b54:	add	x0, x0, #0xa00
   10b58:	blr	x3
   10b5c:	ldr	x0, [x12, x0]
   10b60:	str	w21, [x25, #8]
   10b64:	cmp	x0, x26
   10b68:	b.ge	10b80 <mpfr_mul@@Base+0x1f8>  // b.tcont
   10b6c:	mov	w2, w21
   10b70:	mov	w1, w27
   10b74:	mov	x0, x25
   10b78:	bl	bfc0 <mpfr_overflow@plt>
   10b7c:	b	117b4 <mpfr_mul@@Base+0xe2c>
   10b80:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   10b84:	ldr	x3, [x0, #2528]
   10b88:	add	x0, x0, #0x9e0
   10b8c:	blr	x3
   10b90:	ldr	x3, [x12, x0]
   10b94:	cmp	x26, x3
   10b98:	b.ge	10c18 <mpfr_mul@@Base+0x290>  // b.tcont
   10b9c:	sub	x3, x3, #0x1
   10ba0:	cmp	x26, x3
   10ba4:	b.ne	10be4 <mpfr_mul@@Base+0x25c>  // b.any
   10ba8:	cmp	x4, x2
   10bac:	b.ne	10bdc <mpfr_mul@@Base+0x254>  // b.any
   10bb0:	cmp	w27, #0x0
   10bb4:	ccmp	x13, #0x0, #0x4, eq  // eq = none
   10bb8:	b.ne	10c18 <mpfr_mul@@Base+0x290>  // b.any
   10bbc:	cmp	w27, #0x4
   10bc0:	b.eq	10bd4 <mpfr_mul@@Base+0x24c>  // b.none
   10bc4:	mvn	w3, w21
   10bc8:	add	w3, w27, w3, lsr #31
   10bcc:	cmp	w3, #0x3
   10bd0:	b.ne	10bdc <mpfr_mul@@Base+0x254>  // b.any
   10bd4:	orr	x0, x13, x1
   10bd8:	cbnz	x0, 10c18 <mpfr_mul@@Base+0x290>
   10bdc:	cbz	w27, 10bec <mpfr_mul@@Base+0x264>
   10be0:	b	10c04 <mpfr_mul@@Base+0x27c>
   10be4:	cbnz	w27, 10c04 <mpfr_mul@@Base+0x27c>
   10be8:	b.lt	112a0 <mpfr_mul@@Base+0x918>  // b.tstop
   10bec:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   10bf0:	cmp	x2, x0
   10bf4:	b.ne	10ff8 <mpfr_mul@@Base+0x670>  // b.any
   10bf8:	orr	x1, x13, x1
   10bfc:	cmp	x1, #0x0
   10c00:	cset	w27, eq  // eq = none
   10c04:	mov	w2, w21
   10c08:	mov	w1, w27
   10c0c:	mov	x0, x25
   10c10:	bl	c450 <mpfr_underflow@plt>
   10c14:	b	117b4 <mpfr_mul@@Base+0xe2c>
   10c18:	str	x26, [x25, #16]
   10c1c:	orr	x0, x13, x1
   10c20:	cbz	x0, 10a50 <mpfr_mul@@Base+0xc8>
   10c24:	cmp	w27, #0x5
   10c28:	b.eq	10a50 <mpfr_mul@@Base+0xc8>  // b.none
   10c2c:	cbnz	w27, 10c80 <mpfr_mul@@Base+0x2f8>
   10c30:	cbz	x13, 10c94 <mpfr_mul@@Base+0x30c>
   10c34:	ldr	x24, [x8]
   10c38:	lsr	x24, x24, x11
   10c3c:	and	x24, x24, #0x1
   10c40:	orr	x1, x24, x1
   10c44:	cbz	x1, 10c94 <mpfr_mul@@Base+0x30c>
   10c48:	ldr	x1, [x8]
   10c4c:	adds	x1, x9, x1
   10c50:	b.eq	10cc0 <mpfr_mul@@Base+0x338>  // b.none
   10c54:	str	x1, [x8]
   10c58:	cbz	w21, 10a54 <mpfr_mul@@Base+0xcc>
   10c5c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   10c60:	ldr	x1, [x0, #2592]
   10c64:	add	x0, x0, #0xa20
   10c68:	blr	x1
   10c6c:	add	x0, x12, x0
   10c70:	ldr	w1, [x0]
   10c74:	orr	w1, w1, #0x8
   10c78:	str	w1, [x0]
   10c7c:	b	10a54 <mpfr_mul@@Base+0xcc>
   10c80:	cmp	w27, #0x1
   10c84:	b.eq	10c94 <mpfr_mul@@Base+0x30c>  // b.none
   10c88:	add	w0, w27, w21, lsr #31
   10c8c:	cmp	w0, #0x3
   10c90:	b.ne	10c48 <mpfr_mul@@Base+0x2c0>  // b.any
   10c94:	cbz	w21, 10a50 <mpfr_mul@@Base+0xc8>
   10c98:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   10c9c:	ldr	x1, [x0, #2592]
   10ca0:	add	x0, x0, #0xa20
   10ca4:	blr	x1
   10ca8:	add	x0, x12, x0
   10cac:	ldr	w1, [x0]
   10cb0:	neg	w21, w21
   10cb4:	orr	w1, w1, #0x8
   10cb8:	str	w1, [x0]
   10cbc:	b	10a54 <mpfr_mul@@Base+0xcc>
   10cc0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   10cc4:	str	x0, [x8]
   10cc8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   10ccc:	ldr	x1, [x0, #2560]
   10cd0:	add	x0, x0, #0xa00
   10cd4:	blr	x1
   10cd8:	ldr	x0, [x12, x0]
   10cdc:	cmp	x26, x0
   10ce0:	b.ge	10b6c <mpfr_mul@@Base+0x1e4>  // b.tcont
   10ce4:	add	x6, x26, #0x1
   10ce8:	str	x6, [x25, #16]
   10cec:	b	10c58 <mpfr_mul@@Base+0x2d0>
   10cf0:	ldr	x2, [x29, #184]
   10cf4:	sub	x2, x2, #0x41
   10cf8:	cmp	x2, #0x3e
   10cfc:	b.hi	10f1c <mpfr_mul@@Base+0x594>  // b.pmore
   10d00:	ldr	x0, [x29, #184]
   10d04:	mov	x8, #0x80                  	// #128
   10d08:	ldr	x1, [x19, #24]
   10d0c:	sub	x24, x8, x0
   10d10:	ldr	x0, [x20, #24]
   10d14:	mov	x8, #0x1                   	// #1
   10d18:	ldp	x12, x2, [x1]
   10d1c:	lsl	x10, x8, x24
   10d20:	ldr	x4, [x0, #8]
   10d24:	umulh	x13, x4, x12
   10d28:	sub	x11, x10, #0x1
   10d2c:	umulh	x3, x4, x2
   10d30:	mul	x1, x4, x2
   10d34:	ldr	x9, [x25, #24]
   10d38:	adds	x1, x1, x13
   10d3c:	cinc	x3, x3, cs  // cs = hs, nlast
   10d40:	ldr	x13, [x0]
   10d44:	umulh	x0, x13, x2
   10d48:	adds	x1, x1, x0
   10d4c:	add	x0, x1, #0x2
   10d50:	cinc	x3, x3, cs  // cs = hs, nlast
   10d54:	and	x0, x0, x11, lsr #2
   10d58:	cmp	x0, #0x2
   10d5c:	b.hi	10e9c <mpfr_mul@@Base+0x514>  // b.pmore
   10d60:	mul	x4, x4, x12
   10d64:	umulh	x0, x13, x12
   10d68:	adds	x0, x4, x0
   10d6c:	mul	x2, x2, x13
   10d70:	cinc	x1, x1, cs  // cs = hs, nlast
   10d74:	cset	w4, cs  // cs = hs, nlast
   10d78:	cmp	x1, #0x0
   10d7c:	mul	x8, x12, x13
   10d80:	ccmp	w4, #0x0, #0x4, eq  // eq = none
   10d84:	cinc	x3, x3, ne  // ne = any
   10d88:	adds	x0, x2, x0
   10d8c:	cinc	x1, x1, cs  // cs = hs, nlast
   10d90:	cset	w2, cs  // cs = hs, nlast
   10d94:	cmp	x1, #0x0
   10d98:	ccmp	w2, #0x0, #0x4, eq  // eq = none
   10d9c:	cinc	x3, x3, ne  // ne = any
   10da0:	tbnz	x3, #63, 10db4 <mpfr_mul@@Base+0x42c>
   10da4:	sub	x26, x26, #0x1
   10da8:	extr	x3, x3, x1, #63
   10dac:	extr	x1, x1, x0, #63
   10db0:	lsl	x0, x0, #1
   10db4:	sub	w2, w24, #0x1
   10db8:	mov	x13, #0x1                   	// #1
   10dbc:	orr	x0, x8, x0
   10dc0:	ldr	w21, [x20, #8]
   10dc4:	lsl	x13, x13, x2
   10dc8:	eor	x4, x11, x13
   10dcc:	and	x4, x4, x1
   10dd0:	neg	x2, x10
   10dd4:	orr	x4, x4, x0
   10dd8:	ldr	w0, [x19, #8]
   10ddc:	mrs	x12, tpidr_el0
   10de0:	and	x8, x1, x2
   10de4:	stp	x8, x3, [x9]
   10de8:	and	x14, x13, x1
   10dec:	mul	w21, w21, w0
   10df0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   10df4:	ldr	x5, [x0, #2560]
   10df8:	add	x0, x0, #0xa00
   10dfc:	blr	x5
   10e00:	ldr	x0, [x12, x0]
   10e04:	str	w21, [x25, #8]
   10e08:	cmp	x0, x26
   10e0c:	b.lt	10b6c <mpfr_mul@@Base+0x1e4>  // b.tstop
   10e10:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   10e14:	ldr	x5, [x0, #2528]
   10e18:	add	x0, x0, #0x9e0
   10e1c:	blr	x5
   10e20:	ldr	x11, [x12, x0]
   10e24:	cmp	x26, x11
   10e28:	b.ge	10ea4 <mpfr_mul@@Base+0x51c>  // b.tcont
   10e2c:	sub	x11, x11, #0x1
   10e30:	cmp	x26, x11
   10e34:	b.ne	10e74 <mpfr_mul@@Base+0x4ec>  // b.any
   10e38:	cmn	x3, #0x1
   10e3c:	b.ne	11be4 <mpfr_mul@@Base+0x125c>  // b.any
   10e40:	cmp	x2, x8
   10e44:	b.ne	10e74 <mpfr_mul@@Base+0x4ec>  // b.any
   10e48:	cmp	w27, #0x0
   10e4c:	ccmp	x14, #0x0, #0x4, eq  // eq = none
   10e50:	b.ne	10ea4 <mpfr_mul@@Base+0x51c>  // b.any
   10e54:	cmp	w27, #0x4
   10e58:	b.eq	10e6c <mpfr_mul@@Base+0x4e4>  // b.none
   10e5c:	mvn	w0, w21
   10e60:	add	w0, w27, w0, lsr #31
   10e64:	cmp	w0, #0x3
   10e68:	b.ne	10e74 <mpfr_mul@@Base+0x4ec>  // b.any
   10e6c:	orr	x0, x14, x4
   10e70:	cbnz	x0, 10ea4 <mpfr_mul@@Base+0x51c>
   10e74:	cbnz	w27, 10c04 <mpfr_mul@@Base+0x27c>
   10e78:	cmp	x26, x11
   10e7c:	b.lt	112a0 <mpfr_mul@@Base+0x918>  // b.tstop
   10e80:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   10e84:	cmp	x3, x0
   10e88:	b.ne	10ff8 <mpfr_mul@@Base+0x670>  // b.any
   10e8c:	orr	x2, x13, x2
   10e90:	and	x1, x2, x1
   10e94:	orr	x1, x1, x4
   10e98:	b	10bfc <mpfr_mul@@Base+0x274>
   10e9c:	mov	x0, x8
   10ea0:	b	10da0 <mpfr_mul@@Base+0x418>
   10ea4:	str	x26, [x25, #16]
   10ea8:	orr	x0, x14, x4
   10eac:	cbz	x0, 10a50 <mpfr_mul@@Base+0xc8>
   10eb0:	cmp	w27, #0x5
   10eb4:	b.eq	10a50 <mpfr_mul@@Base+0xc8>  // b.none
   10eb8:	cbnz	w27, 10ef8 <mpfr_mul@@Base+0x570>
   10ebc:	cbz	x14, 10c94 <mpfr_mul@@Base+0x30c>
   10ec0:	ldr	x8, [x9]
   10ec4:	lsr	x8, x8, x24
   10ec8:	and	x8, x8, #0x1
   10ecc:	orr	x8, x8, x4
   10ed0:	cbz	x8, 10c94 <mpfr_mul@@Base+0x30c>
   10ed4:	ldr	x0, [x9]
   10ed8:	add	x10, x10, x0
   10edc:	str	x10, [x9]
   10ee0:	ldr	x0, [x9, #8]
   10ee4:	cmp	x10, #0x0
   10ee8:	cinc	x0, x0, eq  // eq = none
   10eec:	cbz	x0, 10f10 <mpfr_mul@@Base+0x588>
   10ef0:	str	x0, [x9, #8]
   10ef4:	b	10c58 <mpfr_mul@@Base+0x2d0>
   10ef8:	cmp	w27, #0x1
   10efc:	b.eq	10c94 <mpfr_mul@@Base+0x30c>  // b.none
   10f00:	add	w0, w27, w21, lsr #31
   10f04:	cmp	w0, #0x3
   10f08:	b.ne	10ed4 <mpfr_mul@@Base+0x54c>  // b.any
   10f0c:	b	10c94 <mpfr_mul@@Base+0x30c>
   10f10:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   10f14:	str	x0, [x9, #8]
   10f18:	b	10cc8 <mpfr_mul@@Base+0x340>
   10f1c:	ldr	x2, [x29, #184]
   10f20:	cmp	x2, #0x40
   10f24:	b.ne	110b8 <mpfr_mul@@Base+0x730>  // b.any
   10f28:	ldr	x0, [x20, #24]
   10f2c:	ldr	x8, [x25, #24]
   10f30:	ldr	x1, [x0]
   10f34:	ldr	x0, [x19, #24]
   10f38:	ldr	x0, [x0]
   10f3c:	umulh	x3, x1, x0
   10f40:	mul	x1, x1, x0
   10f44:	tbnz	x3, #63, 10f54 <mpfr_mul@@Base+0x5cc>
   10f48:	sub	x26, x26, #0x1
   10f4c:	extr	x3, x3, x1, #63
   10f50:	lsl	x1, x1, #1
   10f54:	ldr	w0, [x19, #8]
   10f58:	ldr	w21, [x20, #8]
   10f5c:	str	x3, [x8]
   10f60:	mul	w21, w21, w0
   10f64:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   10f68:	ldr	x2, [x0, #2560]
   10f6c:	add	x0, x0, #0xa00
   10f70:	blr	x2
   10f74:	mrs	x2, tpidr_el0
   10f78:	str	w21, [x25, #8]
   10f7c:	ldr	x0, [x2, x0]
   10f80:	cmp	x0, x26
   10f84:	b.lt	10b6c <mpfr_mul@@Base+0x1e4>  // b.tstop
   10f88:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   10f8c:	ldr	x4, [x0, #2528]
   10f90:	add	x0, x0, #0x9e0
   10f94:	blr	x4
   10f98:	ldr	x0, [x2, x0]
   10f9c:	cmp	x26, x0
   10fa0:	b.ge	11000 <mpfr_mul@@Base+0x678>  // b.tcont
   10fa4:	sub	x0, x0, #0x1
   10fa8:	cmp	x26, x0
   10fac:	b.ne	10fe0 <mpfr_mul@@Base+0x658>  // b.any
   10fb0:	cmn	x3, #0x1
   10fb4:	b.ne	11bec <mpfr_mul@@Base+0x1264>  // b.any
   10fb8:	cmp	w27, #0x0
   10fbc:	ccmp	x1, #0x0, #0x0, eq  // eq = none
   10fc0:	b.lt	11000 <mpfr_mul@@Base+0x678>  // b.tstop
   10fc4:	cmp	w27, #0x4
   10fc8:	b.eq	10fdc <mpfr_mul@@Base+0x654>  // b.none
   10fcc:	mvn	w4, w21
   10fd0:	add	w4, w27, w4, lsr #31
   10fd4:	cmp	w4, #0x3
   10fd8:	b.ne	10fe0 <mpfr_mul@@Base+0x658>  // b.any
   10fdc:	cbnz	x1, 11000 <mpfr_mul@@Base+0x678>
   10fe0:	cbnz	w27, 10c04 <mpfr_mul@@Base+0x27c>
   10fe4:	cmp	x26, x0
   10fe8:	b.lt	112a0 <mpfr_mul@@Base+0x918>  // b.tstop
   10fec:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   10ff0:	cmp	x3, x0
   10ff4:	b.eq	10bfc <mpfr_mul@@Base+0x274>  // b.none
   10ff8:	mov	w27, #0x0                   	// #0
   10ffc:	b	10c04 <mpfr_mul@@Base+0x27c>
   11000:	str	x26, [x25, #16]
   11004:	cbz	x1, 10a50 <mpfr_mul@@Base+0xc8>
   11008:	cmp	w27, #0x5
   1100c:	b.eq	10a50 <mpfr_mul@@Base+0xc8>  // b.none
   11010:	cbnz	w27, 11058 <mpfr_mul@@Base+0x6d0>
   11014:	tbz	x1, #63, 1106c <mpfr_mul@@Base+0x6e4>
   11018:	ldr	x0, [x8]
   1101c:	and	x1, x1, #0x7fffffffffffffff
   11020:	and	x0, x0, #0x1
   11024:	orr	x1, x0, x1
   11028:	cbz	x1, 1106c <mpfr_mul@@Base+0x6e4>
   1102c:	ldr	x0, [x8]
   11030:	adds	x0, x0, #0x1
   11034:	b.eq	11088 <mpfr_mul@@Base+0x700>  // b.none
   11038:	str	x0, [x8]
   1103c:	cbz	w21, 10a54 <mpfr_mul@@Base+0xcc>
   11040:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   11044:	ldr	x1, [x0, #2592]
   11048:	add	x0, x0, #0xa20
   1104c:	blr	x1
   11050:	add	x0, x2, x0
   11054:	b	10c70 <mpfr_mul@@Base+0x2e8>
   11058:	cmp	w27, #0x1
   1105c:	b.eq	1106c <mpfr_mul@@Base+0x6e4>  // b.none
   11060:	add	w0, w27, w21, lsr #31
   11064:	cmp	w0, #0x3
   11068:	b.ne	1102c <mpfr_mul@@Base+0x6a4>  // b.any
   1106c:	cbz	w21, 10a50 <mpfr_mul@@Base+0xc8>
   11070:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   11074:	ldr	x1, [x0, #2592]
   11078:	add	x0, x0, #0xa20
   1107c:	blr	x1
   11080:	add	x0, x2, x0
   11084:	b	10cac <mpfr_mul@@Base+0x324>
   11088:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   1108c:	str	x0, [x8]
   11090:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   11094:	ldr	x1, [x0, #2560]
   11098:	add	x0, x0, #0xa00
   1109c:	blr	x1
   110a0:	ldr	x0, [x2, x0]
   110a4:	cmp	x26, x0
   110a8:	b.ge	10b6c <mpfr_mul@@Base+0x1e4>  // b.tcont
   110ac:	add	x6, x26, #0x1
   110b0:	str	x6, [x25, #16]
   110b4:	b	1103c <mpfr_mul@@Base+0x6b4>
   110b8:	ldr	x2, [x29, #184]
   110bc:	sub	x2, x2, #0x81
   110c0:	cmp	x2, #0x3e
   110c4:	b.hi	11380 <mpfr_mul@@Base+0x9f8>  // b.pmore
   110c8:	ldr	x1, [x29, #184]
   110cc:	mov	x0, #0xc0                  	// #192
   110d0:	ldr	x2, [x19, #24]
   110d4:	sub	x24, x0, x1
   110d8:	ldr	x1, [x20, #24]
   110dc:	mov	x0, #0x1                   	// #1
   110e0:	ldp	x15, x14, [x2]
   110e4:	lsl	x23, x0, x24
   110e8:	ldp	x9, x8, [x1, #8]
   110ec:	umulh	x12, x8, x14
   110f0:	ldr	x13, [x2, #16]
   110f4:	umulh	x10, x8, x13
   110f8:	sub	x21, x23, #0x1
   110fc:	ldr	x22, [x25, #24]
   11100:	mul	x4, x8, x13
   11104:	mul	x3, x8, x14
   11108:	adds	x4, x4, x12
   1110c:	mul	x12, x13, x9
   11110:	cinc	x11, x10, cs  // cs = hs, nlast
   11114:	umulh	x10, x9, x13
   11118:	adds	x4, x4, x10
   1111c:	cset	x10, cs  // cs = hs, nlast
   11120:	adds	x3, x3, x12
   11124:	cset	x12, cs  // cs = hs, nlast
   11128:	umulh	x8, x8, x15
   1112c:	adds	x3, x3, x8
   11130:	cinc	x12, x12, cs  // cs = hs, nlast
   11134:	umulh	x9, x9, x14
   11138:	adds	x3, x3, x9
   1113c:	cset	x8, cs  // cs = hs, nlast
   11140:	ldr	x9, [x1]
   11144:	umulh	x9, x9, x13
   11148:	adds	x3, x3, x9
   1114c:	adc	x8, x8, x12
   11150:	adds	x4, x4, x8
   11154:	add	x8, x3, #0x4
   11158:	and	x8, x8, x21, lsr #2
   1115c:	adc	x10, x10, x11
   11160:	cmp	x8, #0x4
   11164:	b.hi	11298 <mpfr_mul@@Base+0x910>  // b.pmore
   11168:	add	x0, x29, #0xf0
   1116c:	mov	x3, #0x3                   	// #3
   11170:	bl	c500 <__gmpn_mul_n@plt>
   11174:	ldp	x1, x0, [x29, #240]
   11178:	ldp	x2, x3, [x29, #256]
   1117c:	ldp	x4, x10, [x29, #272]
   11180:	orr	x0, x0, x1
   11184:	tbnz	x10, #63, 1119c <mpfr_mul@@Base+0x814>
   11188:	sub	x26, x26, #0x1
   1118c:	extr	x10, x10, x4, #63
   11190:	extr	x4, x4, x3, #63
   11194:	extr	x3, x3, x2, #63
   11198:	lsl	x2, x2, #1
   1119c:	sub	w1, w24, #0x1
   111a0:	mov	x12, #0x1                   	// #1
   111a4:	orr	x0, x0, x2
   111a8:	mrs	x9, tpidr_el0
   111ac:	lsl	x12, x12, x1
   111b0:	eor	x21, x21, x12
   111b4:	and	x21, x21, x3
   111b8:	neg	x1, x23
   111bc:	orr	x8, x21, x0
   111c0:	ldr	w0, [x19, #8]
   111c4:	ldr	w21, [x20, #8]
   111c8:	and	x11, x3, x1
   111cc:	stp	x11, x4, [x22]
   111d0:	and	x13, x12, x3
   111d4:	str	x10, [x22, #16]
   111d8:	mul	w21, w21, w0
   111dc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   111e0:	ldr	x2, [x0, #2560]
   111e4:	add	x0, x0, #0xa00
   111e8:	blr	x2
   111ec:	ldr	x0, [x9, x0]
   111f0:	str	w21, [x25, #8]
   111f4:	cmp	x0, x26
   111f8:	b.lt	10b6c <mpfr_mul@@Base+0x1e4>  // b.tstop
   111fc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   11200:	ldr	x2, [x0, #2528]
   11204:	add	x0, x0, #0x9e0
   11208:	blr	x2
   1120c:	ldr	x2, [x9, x0]
   11210:	cmp	x26, x2
   11214:	b.ge	112a8 <mpfr_mul@@Base+0x920>  // b.tcont
   11218:	sub	x2, x2, #0x1
   1121c:	cmp	x26, x2
   11220:	b.ne	11268 <mpfr_mul@@Base+0x8e0>  // b.any
   11224:	cmn	x10, #0x1
   11228:	b.ne	11bf4 <mpfr_mul@@Base+0x126c>  // b.any
   1122c:	cmn	x4, #0x1
   11230:	b.ne	11268 <mpfr_mul@@Base+0x8e0>  // b.any
   11234:	cmp	x1, x11
   11238:	b.ne	11268 <mpfr_mul@@Base+0x8e0>  // b.any
   1123c:	cmp	w27, #0x0
   11240:	ccmp	x13, #0x0, #0x4, eq  // eq = none
   11244:	b.ne	112a8 <mpfr_mul@@Base+0x920>  // b.any
   11248:	cmp	w27, #0x4
   1124c:	b.eq	11260 <mpfr_mul@@Base+0x8d8>  // b.none
   11250:	mvn	w0, w21
   11254:	add	w0, w27, w0, lsr #31
   11258:	cmp	w0, #0x3
   1125c:	b.ne	11268 <mpfr_mul@@Base+0x8e0>  // b.any
   11260:	orr	x0, x13, x8
   11264:	cbnz	x0, 112a8 <mpfr_mul@@Base+0x920>
   11268:	cbnz	w27, 10c04 <mpfr_mul@@Base+0x27c>
   1126c:	cmp	x26, x2
   11270:	b.lt	112a0 <mpfr_mul@@Base+0x918>  // b.tstop
   11274:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   11278:	cmp	x10, x0
   1127c:	b.ne	10ff8 <mpfr_mul@@Base+0x670>  // b.any
   11280:	orr	x1, x12, x1
   11284:	and	x3, x1, x3
   11288:	orr	x4, x3, x4
   1128c:	orr	x4, x4, x8
   11290:	cmp	x4, #0x0
   11294:	b	10c00 <mpfr_mul@@Base+0x278>
   11298:	mov	x2, x0
   1129c:	b	11184 <mpfr_mul@@Base+0x7fc>
   112a0:	mov	w27, #0x1                   	// #1
   112a4:	b	10c04 <mpfr_mul@@Base+0x27c>
   112a8:	str	x26, [x25, #16]
   112ac:	orr	x0, x13, x8
   112b0:	cbz	x0, 10a50 <mpfr_mul@@Base+0xc8>
   112b4:	cmp	w27, #0x5
   112b8:	b.eq	10a50 <mpfr_mul@@Base+0xc8>  // b.none
   112bc:	cbnz	w27, 11320 <mpfr_mul@@Base+0x998>
   112c0:	cbz	x13, 11334 <mpfr_mul@@Base+0x9ac>
   112c4:	ldr	x0, [x22]
   112c8:	lsr	x0, x0, x24
   112cc:	and	x0, x0, #0x1
   112d0:	orr	x0, x0, x8
   112d4:	cbz	x0, 11334 <mpfr_mul@@Base+0x9ac>
   112d8:	ldp	x1, x0, [x22]
   112dc:	add	x1, x23, x1
   112e0:	cmp	x1, #0x0
   112e4:	cinc	x0, x0, eq  // eq = none
   112e8:	stp	x1, x0, [x22]
   112ec:	orr	x1, x1, x0
   112f0:	ldr	x0, [x22, #16]
   112f4:	cmp	x1, #0x0
   112f8:	cinc	x0, x0, eq  // eq = none
   112fc:	cbz	x0, 11350 <mpfr_mul@@Base+0x9c8>
   11300:	str	x0, [x22, #16]
   11304:	cbz	w21, 10a54 <mpfr_mul@@Base+0xcc>
   11308:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1130c:	ldr	x1, [x0, #2592]
   11310:	add	x0, x0, #0xa20
   11314:	blr	x1
   11318:	add	x0, x9, x0
   1131c:	b	10c70 <mpfr_mul@@Base+0x2e8>
   11320:	cmp	w27, #0x1
   11324:	b.eq	11334 <mpfr_mul@@Base+0x9ac>  // b.none
   11328:	add	w0, w27, w21, lsr #31
   1132c:	cmp	w0, #0x3
   11330:	b.ne	112d8 <mpfr_mul@@Base+0x950>  // b.any
   11334:	cbz	w21, 10a50 <mpfr_mul@@Base+0xc8>
   11338:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1133c:	ldr	x1, [x0, #2592]
   11340:	add	x0, x0, #0xa20
   11344:	blr	x1
   11348:	add	x0, x9, x0
   1134c:	b	10cac <mpfr_mul@@Base+0x324>
   11350:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   11354:	str	x0, [x22, #16]
   11358:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1135c:	ldr	x1, [x0, #2560]
   11360:	add	x0, x0, #0xa00
   11364:	blr	x1
   11368:	ldr	x0, [x9, x0]
   1136c:	cmp	x26, x0
   11370:	b.ge	10b6c <mpfr_mul@@Base+0x1e4>  // b.tcont
   11374:	add	x6, x26, #0x1
   11378:	str	x6, [x25, #16]
   1137c:	b	11304 <mpfr_mul@@Base+0x97c>
   11380:	ldr	w3, [x20, #8]
   11384:	ldr	w2, [x19, #8]
   11388:	mul	w2, w3, w2
   1138c:	add	x3, x1, x0
   11390:	str	w2, [x29, #176]
   11394:	add	x2, x1, x0
   11398:	str	x2, [x29, #128]
   1139c:	mov	x2, #0x7fffffffffffff00    	// #9223372036854775552
   113a0:	cmp	x3, x2
   113a4:	b.cc	113c0 <mpfr_mul@@Base+0xa38>  // b.lo, b.ul, b.last
   113a8:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   113ac:	adrp	x0, 55000 <mpfr_free_pool@@Base+0x3eec>
   113b0:	add	x2, x2, #0xbfc
   113b4:	add	x0, x0, #0xc49
   113b8:	mov	w1, #0x318                 	// #792
   113bc:	bl	cbd0 <mpfr_assert_fail@plt>
   113c0:	sub	x0, x0, #0x1
   113c4:	sub	x1, x1, #0x1
   113c8:	str	xzr, [x29, #200]
   113cc:	asr	x21, x0, #6
   113d0:	asr	x24, x1, #6
   113d4:	add	x23, x24, #0x1
   113d8:	add	x22, x21, #0x1
   113dc:	add	x0, x23, x22
   113e0:	str	x0, [x29, #160]
   113e4:	ldr	x0, [x29, #128]
   113e8:	sub	x0, x0, #0x1
   113ec:	asr	x0, x0, #6
   113f0:	str	x0, [x29, #144]
   113f4:	add	x0, x0, #0x1
   113f8:	str	x0, [x29, #168]
   113fc:	add	x0, x23, x22
   11400:	lsl	x0, x0, #3
   11404:	str	x0, [x29, #152]
   11408:	cmp	x0, #0x4, lsl #12
   1140c:	b.hi	11578 <mpfr_mul@@Base+0xbf0>  // b.pmore
   11410:	add	x0, x0, #0xf
   11414:	and	x0, x0, #0xfffffffffffffff0
   11418:	sub	sp, sp, x0
   1141c:	mov	x28, sp
   11420:	cmp	x24, x21
   11424:	b.ge	11440 <mpfr_mul@@Base+0xab8>  // b.tcont
   11428:	mov	x0, x23
   1142c:	mov	x23, x22
   11430:	mov	x22, x0
   11434:	mov	x0, x20
   11438:	mov	x20, x19
   1143c:	mov	x19, x0
   11440:	cmp	x23, #0x2
   11444:	ldr	x10, [x19, #24]
   11448:	ldr	x9, [x20, #24]
   1144c:	b.gt	115dc <mpfr_mul@@Base+0xc54>
   11450:	ldr	x0, [x9]
   11454:	add	x11, x28, #0x8
   11458:	ldr	x1, [x10]
   1145c:	umulh	x3, x0, x1
   11460:	cmp	x23, #0x1
   11464:	mul	x0, x0, x1
   11468:	stp	x0, x3, [x28]
   1146c:	b.eq	1149c <mpfr_mul@@Base+0xb14>  // b.none
   11470:	ldr	x1, [x10]
   11474:	ldr	x4, [x9, #8]
   11478:	mul	x0, x4, x1
   1147c:	umulh	x4, x4, x1
   11480:	adds	x1, x3, x0
   11484:	adc	x4, x4, xzr
   11488:	str	x4, [x28, #16]
   1148c:	cmp	x22, #0x1
   11490:	str	x1, [x11]
   11494:	b.ne	1158c <mpfr_mul@@Base+0xc04>  // b.any
   11498:	ldr	x3, [x28, #16]
   1149c:	lsr	x0, x3, #63
   114a0:	str	x0, [x29, #152]
   114a4:	ldr	x0, [x29, #160]
   114a8:	ldr	x1, [x29, #168]
   114ac:	sub	x0, x0, x1
   114b0:	add	x9, x28, x0, lsl #3
   114b4:	tbnz	x3, #63, 114d4 <mpfr_mul@@Base+0xb4c>
   114b8:	mov	x2, x1
   114bc:	mov	w3, #0x1                   	// #1
   114c0:	mov	x1, x9
   114c4:	mov	x0, x9
   114c8:	str	x9, [x29, #184]
   114cc:	bl	bd40 <__gmpn_lshift@plt>
   114d0:	ldr	x9, [x29, #184]
   114d4:	ldr	x1, [x25]
   114d8:	ldr	x0, [x29, #152]
   114dc:	ldr	x2, [x29, #128]
   114e0:	add	x28, x26, x0
   114e4:	sub	x0, x1, #0x1
   114e8:	sub	x22, x28, #0x1
   114ec:	cmp	x2, x1
   114f0:	asr	x0, x0, #6
   114f4:	ldr	x23, [x25, #24]
   114f8:	b.gt	11970 <mpfr_mul@@Base+0xfe8>
   114fc:	ldr	x1, [x29, #144]
   11500:	sub	x0, x0, x1
   11504:	lsl	x21, x0, #3
   11508:	add	x0, x23, x0, lsl #3
   1150c:	cmp	x0, x9
   11510:	b.eq	11524 <mpfr_mul@@Base+0xb9c>  // b.none
   11514:	ldr	x1, [x29, #168]
   11518:	lsl	x2, x1, #3
   1151c:	mov	x1, x9
   11520:	bl	ba90 <memcpy@plt>
   11524:	mov	x2, x21
   11528:	mov	w21, #0x0                   	// #0
   1152c:	mov	x0, x23
   11530:	mov	w1, #0x0                   	// #0
   11534:	bl	c1a0 <memset@plt>
   11538:	ldr	x0, [x29, #200]
   1153c:	cbz	x0, 11544 <mpfr_mul@@Base+0xbbc>
   11540:	bl	c4a0 <mpfr_tmp_free@plt>
   11544:	ldr	w0, [x29, #176]
   11548:	str	w0, [x25, #8]
   1154c:	str	x22, [x25, #16]
   11550:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   11554:	ldr	x1, [x0, #2560]
   11558:	add	x0, x0, #0xa00
   1155c:	blr	x1
   11560:	mrs	x1, tpidr_el0
   11564:	ldr	x0, [x1, x0]
   11568:	cmp	x0, x22
   1156c:	b.ge	11b3c <mpfr_mul@@Base+0x11b4>  // b.tcont
   11570:	ldr	w2, [x29, #176]
   11574:	b	10b70 <mpfr_mul@@Base+0x1e8>
   11578:	ldr	x1, [x29, #152]
   1157c:	add	x0, x29, #0xc8
   11580:	bl	be40 <mpfr_tmp_allocate@plt>
   11584:	mov	x28, x0
   11588:	b	11420 <mpfr_mul@@Base+0xa98>
   1158c:	ldp	x0, x1, [x9]
   11590:	ldr	x2, [x10, #8]
   11594:	umulh	x3, x1, x2
   11598:	umulh	x10, x0, x2
   1159c:	mul	x1, x2, x1
   115a0:	mul	x0, x0, x2
   115a4:	adds	x4, x10, x1
   115a8:	adc	x1, x3, xzr
   115ac:	str	x1, [x28, #24]
   115b0:	ldr	x3, [x28, #8]
   115b4:	ldr	x1, [x28, #16]
   115b8:	adds	x2, x3, x0
   115bc:	adc	x0, x1, x4
   115c0:	str	x0, [x28, #16]
   115c4:	str	x2, [x11]
   115c8:	ldp	x0, x3, [x28, #16]
   115cc:	cmp	x0, x4
   115d0:	cinc	x3, x3, cc  // cc = lo, ul, last
   115d4:	str	x3, [x28, #24]
   115d8:	b	1149c <mpfr_mul@@Base+0xb14>
   115dc:	cmp	x22, #0x14
   115e0:	b.le	11700 <mpfr_mul@@Base+0xd78>
   115e4:	ldr	x0, [x9]
   115e8:	cbnz	x0, 115f4 <mpfr_mul@@Base+0xc6c>
   115ec:	ldr	x0, [x9, #8]
   115f0:	cbz	x0, 1173c <mpfr_mul@@Base+0xdb4>
   115f4:	ldr	x0, [x10]
   115f8:	cbnz	x0, 11604 <mpfr_mul@@Base+0xc7c>
   115fc:	ldr	x0, [x10, #8]
   11600:	cbz	x0, 1173c <mpfr_mul@@Base+0xdb4>
   11604:	ldr	x1, [x25]
   11608:	mov	w21, #0x40                  	// #64
   1160c:	sub	x1, x1, #0x1
   11610:	asr	x1, x1, #6
   11614:	add	x1, x1, #0x2
   11618:	cmp	x22, x1
   1161c:	csel	x3, x22, x1, le
   11620:	add	x24, x3, #0x1
   11624:	sub	x11, x23, x3
   11628:	clz	x2, x24
   1162c:	lsl	x0, x3, #6
   11630:	sub	w21, w21, w2
   11634:	str	x0, [x29, #136]
   11638:	ldr	x1, [x29, #184]
   1163c:	sub	x21, x0, w21, sxtw
   11640:	sub	x0, x22, x3
   11644:	str	x0, [x29, #120]
   11648:	add	x9, x9, x11, lsl #3
   1164c:	add	x10, x10, x0, lsl #3
   11650:	sub	x0, x21, #0x4
   11654:	cmp	x1, x0
   11658:	b.ge	117e0 <mpfr_mul@@Base+0xe58>  // b.tcont
   1165c:	mov	x24, x3
   11660:	ldr	x0, [x29, #160]
   11664:	cmp	x20, x19
   11668:	sub	x0, x0, x24, lsl #1
   1166c:	str	x0, [x29, #136]
   11670:	add	x0, x28, x0, lsl #3
   11674:	b.eq	11960 <mpfr_mul@@Base+0xfd8>  // b.none
   11678:	mov	x3, x24
   1167c:	mov	x2, x10
   11680:	mov	x1, x9
   11684:	bl	bd00 <mpfr_mulhigh_n@plt>
   11688:	ldr	x0, [x29, #152]
   1168c:	add	x0, x28, x0
   11690:	ldur	x0, [x0, #-8]
   11694:	lsr	x1, x0, #63
   11698:	str	x1, [x29, #152]
   1169c:	tbnz	x0, #63, 116c0 <mpfr_mul@@Base+0xd38>
   116a0:	ldr	x0, [x29, #136]
   116a4:	add	x2, x24, #0x1
   116a8:	mov	w3, #0x1                   	// #1
   116ac:	add	x1, x0, x24
   116b0:	add	x1, x28, x1, lsl #3
   116b4:	sub	x1, x1, #0x8
   116b8:	mov	x0, x1
   116bc:	bl	bd40 <__gmpn_lshift@plt>
   116c0:	ldp	x0, x1, [x29, #160]
   116c4:	cmp	w27, #0x5
   116c8:	csinc	w27, w27, wzr, ne  // ne = any
   116cc:	sub	x2, x21, #0x1
   116d0:	cmp	w27, #0x0
   116d4:	sub	x9, x0, x1
   116d8:	ldr	x0, [x29, #184]
   116dc:	add	x9, x28, x9, lsl #3
   116e0:	str	x9, [x29, #184]
   116e4:	cinc	x3, x0, eq  // eq = none
   116e8:	ldr	x0, [x29, #152]
   116ec:	add	x2, x2, x0
   116f0:	mov	x0, x9
   116f4:	bl	c400 <mpfr_round_p@plt>
   116f8:	ldr	x9, [x29, #184]
   116fc:	cbnz	w0, 114d4 <mpfr_mul@@Base+0xb4c>
   11700:	ldr	x1, [x20, #24]
   11704:	mov	x2, x23
   11708:	ldr	x3, [x19, #24]
   1170c:	mov	x4, x22
   11710:	mov	x0, x28
   11714:	bl	c830 <__gmpn_mul@plt>
   11718:	lsr	x1, x0, #63
   1171c:	str	x1, [x29, #152]
   11720:	ldr	x1, [x29, #160]
   11724:	ldr	x2, [x29, #168]
   11728:	sub	x1, x1, x2
   1172c:	add	x9, x28, x1, lsl #3
   11730:	tbnz	x0, #63, 114d4 <mpfr_mul@@Base+0xb4c>
   11734:	mov	w3, #0x1                   	// #1
   11738:	b	114c0 <mpfr_mul@@Base+0xb38>
   1173c:	ldr	x0, [x29, #200]
   11740:	cbz	x0, 11750 <mpfr_mul@@Base+0xdc8>
   11744:	stp	x10, x9, [x29, #176]
   11748:	bl	c4a0 <mpfr_tmp_free@plt>
   1174c:	ldp	x10, x9, [x29, #176]
   11750:	ldr	x0, [x9]
   11754:	cbz	x0, 117bc <mpfr_mul@@Base+0xe34>
   11758:	ldr	x0, [x10]
   1175c:	cbz	x0, 117c8 <mpfr_mul@@Base+0xe40>
   11760:	ldr	w0, [x20, #8]
   11764:	lsl	x23, x23, #6
   11768:	str	w0, [x29, #216]
   1176c:	cmp	x20, x19
   11770:	ldr	x0, [x20, #16]
   11774:	str	x23, [x29, #208]
   11778:	str	x0, [x29, #224]
   1177c:	add	x1, x29, #0xd0
   11780:	str	x9, [x29, #232]
   11784:	b.eq	117d4 <mpfr_mul@@Base+0xe4c>  // b.none
   11788:	ldr	w0, [x19, #8]
   1178c:	mov	w3, w27
   11790:	add	x2, x29, #0xf0
   11794:	str	w0, [x29, #248]
   11798:	ldr	x0, [x19, #16]
   1179c:	lsl	x22, x22, #6
   117a0:	str	x22, [x29, #240]
   117a4:	str	x0, [x29, #256]
   117a8:	str	x10, [x29, #264]
   117ac:	mov	x0, x25
   117b0:	bl	10988 <mpfr_mul@@Base>
   117b4:	mov	w21, w0
   117b8:	b	10a54 <mpfr_mul@@Base+0xcc>
   117bc:	add	x9, x9, #0x8
   117c0:	sub	x23, x23, #0x1
   117c4:	b	11750 <mpfr_mul@@Base+0xdc8>
   117c8:	add	x10, x10, #0x8
   117cc:	sub	x22, x22, #0x1
   117d0:	b	11758 <mpfr_mul@@Base+0xdd0>
   117d4:	mov	w3, w27
   117d8:	mov	x2, x1
   117dc:	b	117ac <mpfr_mul@@Base+0xe24>
   117e0:	ldr	x0, [x29, #184]
   117e4:	add	x21, x21, #0x3b
   117e8:	cmp	x0, x21
   117ec:	b.gt	11700 <mpfr_mul@@Base+0xd78>
   117f0:	cmp	x23, #0x15
   117f4:	b.le	11700 <mpfr_mul@@Base+0xd78>
   117f8:	cmp	x23, x3
   117fc:	b.le	11868 <mpfr_mul@@Base+0xee0>
   11800:	sub	x9, x9, #0x8
   11804:	cmp	x20, x19
   11808:	b.eq	11818 <mpfr_mul@@Base+0xe90>  // b.none
   1180c:	cmp	x22, x3
   11810:	b.le	118d8 <mpfr_mul@@Base+0xf50>
   11814:	sub	x10, x10, #0x8
   11818:	add	x1, x3, #0x2
   1181c:	mov	w21, #0x40                  	// #64
   11820:	ldr	x0, [x29, #136]
   11824:	clz	x1, x1
   11828:	sub	w21, w21, w1
   1182c:	lsl	x8, x24, #1
   11830:	add	x0, x0, #0x40
   11834:	sub	x21, x0, w21, sxtw
   11838:	ldr	x0, [x29, #160]
   1183c:	cmp	x0, x24, lsl #1
   11840:	b.ge	11660 <mpfr_mul@@Base+0xcd8>  // b.tcont
   11844:	lsl	x1, x24, #4
   11848:	cmp	x1, #0x4, lsl #12
   1184c:	b.hi	11944 <mpfr_mul@@Base+0xfbc>  // b.pmore
   11850:	sub	sp, sp, x1
   11854:	mov	x0, sp
   11858:	ldr	x1, [x29, #160]
   1185c:	sub	x8, x8, x1
   11860:	add	x28, x0, x8, lsl #3
   11864:	b	11660 <mpfr_mul@@Base+0xcd8>
   11868:	lsl	x1, x24, #3
   1186c:	cmp	x1, #0x4, lsl #12
   11870:	b.hi	118b8 <mpfr_mul@@Base+0xf30>  // b.pmore
   11874:	add	x1, x1, #0xf
   11878:	and	x1, x1, #0xfffffffffffffff0
   1187c:	sub	sp, sp, x1
   11880:	mov	x9, sp
   11884:	mov	x0, x9
   11888:	ldr	x1, [x20, #24]
   1188c:	str	xzr, [x0], #8
   11890:	add	x1, x1, x11, lsl #3
   11894:	cmp	x0, x1
   11898:	b.eq	11804 <mpfr_mul@@Base+0xe7c>  // b.none
   1189c:	lsl	x2, x3, #3
   118a0:	stp	x10, x9, [x29, #96]
   118a4:	str	x3, [x29, #112]
   118a8:	bl	ba90 <memcpy@plt>
   118ac:	ldp	x10, x9, [x29, #96]
   118b0:	ldr	x3, [x29, #112]
   118b4:	b	11804 <mpfr_mul@@Base+0xe7c>
   118b8:	add	x0, x29, #0xc8
   118bc:	stp	x11, x3, [x29, #96]
   118c0:	str	x10, [x29, #112]
   118c4:	bl	be40 <mpfr_tmp_allocate@plt>
   118c8:	mov	x9, x0
   118cc:	ldp	x11, x3, [x29, #96]
   118d0:	ldr	x10, [x29, #112]
   118d4:	b	11884 <mpfr_mul@@Base+0xefc>
   118d8:	lsl	x1, x24, #3
   118dc:	cmp	x1, #0x4, lsl #12
   118e0:	b.hi	1192c <mpfr_mul@@Base+0xfa4>  // b.pmore
   118e4:	add	x1, x1, #0xf
   118e8:	and	x1, x1, #0xfffffffffffffff0
   118ec:	sub	sp, sp, x1
   118f0:	mov	x10, sp
   118f4:	mov	x0, x10
   118f8:	ldr	x1, [x19, #24]
   118fc:	ldr	x2, [x29, #120]
   11900:	str	xzr, [x0], #8
   11904:	add	x1, x1, x2, lsl #3
   11908:	cmp	x0, x1
   1190c:	b.eq	11818 <mpfr_mul@@Base+0xe90>  // b.none
   11910:	lsl	x2, x3, #3
   11914:	stp	x10, x9, [x29, #104]
   11918:	str	x3, [x29, #120]
   1191c:	bl	ba90 <memcpy@plt>
   11920:	ldp	x10, x9, [x29, #104]
   11924:	ldr	x3, [x29, #120]
   11928:	b	11818 <mpfr_mul@@Base+0xe90>
   1192c:	add	x0, x29, #0xc8
   11930:	stp	x3, x9, [x29, #104]
   11934:	bl	be40 <mpfr_tmp_allocate@plt>
   11938:	mov	x10, x0
   1193c:	ldp	x3, x9, [x29, #104]
   11940:	b	118f4 <mpfr_mul@@Base+0xf6c>
   11944:	add	x0, x29, #0xc8
   11948:	stp	x10, x9, [x29, #112]
   1194c:	str	x8, [x29, #136]
   11950:	bl	be40 <mpfr_tmp_allocate@plt>
   11954:	ldp	x10, x9, [x29, #112]
   11958:	ldr	x8, [x29, #136]
   1195c:	b	11858 <mpfr_mul@@Base+0xed0>
   11960:	mov	x2, x24
   11964:	mov	x1, x9
   11968:	bl	c520 <mpfr_sqrhigh_n@plt>
   1196c:	b	11688 <mpfr_mul@@Base+0xd00>
   11970:	neg	w6, w1
   11974:	add	x2, x0, #0x1
   11978:	ldr	x1, [x29, #144]
   1197c:	ands	w6, w6, #0x3f
   11980:	sub	x0, x1, x0
   11984:	lsl	x3, x0, #3
   11988:	add	x1, x9, x0, lsl #3
   1198c:	b.eq	11a30 <mpfr_mul@@Base+0x10a8>  // b.none
   11990:	ldr	x8, [x9, x3]
   11994:	sub	w6, w6, #0x1
   11998:	mov	x4, #0x1                   	// #1
   1199c:	cmp	w27, #0x0
   119a0:	lsl	x4, x4, x6
   119a4:	and	x9, x8, x4
   119a8:	sub	x4, x4, #0x1
   119ac:	ccmp	x9, #0x0, #0x4, ne  // ne = any
   119b0:	and	x3, x4, x8
   119b4:	b.ne	119d8 <mpfr_mul@@Base+0x1050>  // b.any
   119b8:	mov	x8, #0xfffffffffffffff8    	// #-8
   119bc:	madd	x8, x0, x8, x1
   119c0:	cmp	x0, #0x0
   119c4:	sub	x0, x0, #0x1
   119c8:	cset	w4, ne  // ne = any
   119cc:	cmp	x3, #0x0
   119d0:	csel	w4, w4, wzr, eq  // eq = none
   119d4:	cbnz	w4, 11a28 <mpfr_mul@@Base+0x10a0>
   119d8:	mov	x24, #0x2                   	// #2
   119dc:	lsl	x24, x24, x6
   119e0:	cmp	w27, #0x5
   119e4:	b.eq	11bdc <mpfr_mul@@Base+0x1254>  // b.none
   119e8:	cbnz	w27, 11bbc <mpfr_mul@@Base+0x1234>
   119ec:	cbnz	x9, 11a7c <mpfr_mul@@Base+0x10f4>
   119f0:	ldr	w0, [x29, #176]
   119f4:	orr	x3, x9, x3
   119f8:	cmp	x3, #0x0
   119fc:	csneg	w21, wzr, w0, eq  // eq = none
   11a00:	cmp	x23, x1
   11a04:	b.eq	11a14 <mpfr_mul@@Base+0x108c>  // b.none
   11a08:	lsl	x2, x2, #3
   11a0c:	mov	x0, x23
   11a10:	bl	ba90 <memcpy@plt>
   11a14:	ldr	x0, [x23]
   11a18:	neg	x6, x24
   11a1c:	and	x6, x0, x6
   11a20:	str	x6, [x23]
   11a24:	b	11538 <mpfr_mul@@Base+0xbb0>
   11a28:	ldr	x3, [x8, x0, lsl #3]
   11a2c:	b	119c0 <mpfr_mul@@Base+0x1038>
   11a30:	ldur	x4, [x1, #-8]
   11a34:	cmp	w27, #0x0
   11a38:	and	x9, x4, #0x8000000000000000
   11a3c:	and	x3, x4, #0x7fffffffffffffff
   11a40:	ccmp	x4, #0x0, #0x0, ne  // ne = any
   11a44:	b.lt	11bb0 <mpfr_mul@@Base+0x1228>  // b.tstop
   11a48:	mov	x6, #0xfffffffffffffff8    	// #-8
   11a4c:	sub	x4, x0, #0x1
   11a50:	madd	x0, x0, x6, x1
   11a54:	cmp	x4, #0x0
   11a58:	sub	x4, x4, #0x1
   11a5c:	cset	w6, ne  // ne = any
   11a60:	cmp	x3, #0x0
   11a64:	csel	w6, w6, wzr, eq  // eq = none
   11a68:	cbnz	w6, 11a74 <mpfr_mul@@Base+0x10ec>
   11a6c:	mov	x24, #0x1                   	// #1
   11a70:	b	119e0 <mpfr_mul@@Base+0x1058>
   11a74:	ldr	x3, [x0, x4, lsl #3]
   11a78:	b	11a54 <mpfr_mul@@Base+0x10cc>
   11a7c:	ldr	x0, [x1]
   11a80:	and	x0, x24, x0
   11a84:	orr	x3, x0, x3
   11a88:	cbnz	x3, 11a98 <mpfr_mul@@Base+0x1110>
   11a8c:	ldr	w0, [x29, #176]
   11a90:	neg	w21, w0
   11a94:	b	11a00 <mpfr_mul@@Base+0x1078>
   11a98:	ldr	x0, [x1]
   11a9c:	adds	x0, x0, x24
   11aa0:	str	x0, [x23]
   11aa4:	b.cs	11b04 <mpfr_mul@@Base+0x117c>  // b.hs, b.nlast
   11aa8:	cmp	x23, x1
   11aac:	b.eq	11ad4 <mpfr_mul@@Base+0x114c>  // b.none
   11ab0:	mov	x0, #0x1                   	// #1
   11ab4:	b	11b30 <mpfr_mul@@Base+0x11a8>
   11ab8:	ldr	x3, [x1, x0, lsl #3]
   11abc:	add	x3, x3, #0x1
   11ac0:	str	x3, [x23, x0, lsl #3]
   11ac4:	add	x0, x0, #0x1
   11ac8:	cbz	x3, 11b08 <mpfr_mul@@Base+0x1180>
   11acc:	cmp	x23, x1
   11ad0:	b.ne	11af8 <mpfr_mul@@Base+0x1170>  // b.any
   11ad4:	ldr	x0, [x23]
   11ad8:	neg	x6, x24
   11adc:	ldr	w21, [x29, #176]
   11ae0:	and	x6, x0, x6
   11ae4:	str	x6, [x23]
   11ae8:	b	11538 <mpfr_mul@@Base+0xbb0>
   11aec:	ldr	x3, [x1, x0, lsl #3]
   11af0:	str	x3, [x23, x0, lsl #3]
   11af4:	add	x0, x0, #0x1
   11af8:	cmp	x2, x0
   11afc:	b.gt	11aec <mpfr_mul@@Base+0x1164>
   11b00:	b	11ad4 <mpfr_mul@@Base+0x114c>
   11b04:	mov	x0, #0x1                   	// #1
   11b08:	cmp	x2, x0
   11b0c:	b.gt	11ab8 <mpfr_mul@@Base+0x1130>
   11b10:	add	x2, x23, x2, lsl #3
   11b14:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   11b18:	mov	x22, x28
   11b1c:	stur	x0, [x2, #-8]
   11b20:	b	11ad4 <mpfr_mul@@Base+0x114c>
   11b24:	ldr	x3, [x1, x0, lsl #3]
   11b28:	str	x3, [x23, x0, lsl #3]
   11b2c:	add	x0, x0, #0x1
   11b30:	cmp	x2, x0
   11b34:	b.gt	11b24 <mpfr_mul@@Base+0x119c>
   11b38:	b	11ad4 <mpfr_mul@@Base+0x114c>
   11b3c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   11b40:	ldr	x2, [x0, #2528]
   11b44:	add	x0, x0, #0x9e0
   11b48:	blr	x2
   11b4c:	ldr	x0, [x1, x0]
   11b50:	cmp	x0, x22
   11b54:	b.le	11b94 <mpfr_mul@@Base+0x120c>
   11b58:	cbnz	w27, 11b84 <mpfr_mul@@Base+0x11fc>
   11b5c:	cmp	x0, x28
   11b60:	b.gt	11b8c <mpfr_mul@@Base+0x1204>
   11b64:	mov	x0, x20
   11b68:	bl	bf80 <mpfr_powerof2_raw@plt>
   11b6c:	mov	w27, w0
   11b70:	cbz	w0, 11b84 <mpfr_mul@@Base+0x11fc>
   11b74:	mov	x0, x19
   11b78:	bl	bf80 <mpfr_powerof2_raw@plt>
   11b7c:	cmp	w0, #0x0
   11b80:	cset	w27, ne  // ne = any
   11b84:	ldr	w2, [x29, #176]
   11b88:	b	10c08 <mpfr_mul@@Base+0x280>
   11b8c:	mov	w27, #0x1                   	// #1
   11b90:	b	11b84 <mpfr_mul@@Base+0x11fc>
   11b94:	cbz	w21, 10a54 <mpfr_mul@@Base+0xcc>
   11b98:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   11b9c:	ldr	x2, [x0, #2592]
   11ba0:	add	x0, x0, #0xa20
   11ba4:	blr	x2
   11ba8:	add	x0, x1, x0
   11bac:	b	10c70 <mpfr_mul@@Base+0x2e8>
   11bb0:	cmp	w27, #0x5
   11bb4:	mov	x24, #0x1                   	// #1
   11bb8:	b.eq	11bdc <mpfr_mul@@Base+0x1254>  // b.none
   11bbc:	cmp	w27, #0x1
   11bc0:	b.eq	119f0 <mpfr_mul@@Base+0x1068>  // b.none
   11bc4:	ldr	w0, [x29, #176]
   11bc8:	add	w0, w27, w0, lsr #31
   11bcc:	cmp	w0, #0x3
   11bd0:	b.eq	119f0 <mpfr_mul@@Base+0x1068>  // b.none
   11bd4:	orr	x3, x9, x3
   11bd8:	cbnz	x3, 11a98 <mpfr_mul@@Base+0x1110>
   11bdc:	mov	w21, #0x0                   	// #0
   11be0:	b	11a00 <mpfr_mul@@Base+0x1078>
   11be4:	cbz	w27, 10e80 <mpfr_mul@@Base+0x4f8>
   11be8:	b	10c04 <mpfr_mul@@Base+0x27c>
   11bec:	cbz	w27, 10fec <mpfr_mul@@Base+0x664>
   11bf0:	b	10c04 <mpfr_mul@@Base+0x27c>
   11bf4:	cbz	w27, 11274 <mpfr_mul@@Base+0x8ec>
   11bf8:	b	10c04 <mpfr_mul@@Base+0x27c>

0000000000011bfc <mpfr_mul_ui@@Base>:
   11bfc:	stp	x29, x30, [sp, #-96]!
   11c00:	mov	x4, #0x8000000000000003    	// #-9223372036854775805
   11c04:	mov	x29, sp
   11c08:	stp	x19, x20, [sp, #16]
   11c0c:	mov	x20, x2
   11c10:	ldr	x2, [x1, #16]
   11c14:	stp	x21, x22, [sp, #32]
   11c18:	mov	x21, x0
   11c1c:	stp	x23, x24, [sp, #48]
   11c20:	cmp	x2, x4
   11c24:	stp	x25, x26, [sp, #64]
   11c28:	mov	x25, x1
   11c2c:	b.gt	11cb4 <mpfr_mul_ui@@Base+0xb8>
   11c30:	mov	x0, #0x2                   	// #2
   11c34:	movk	x0, #0x8000, lsl #48
   11c38:	cmp	x2, x0
   11c3c:	b.ne	11c8c <mpfr_mul_ui@@Base+0x90>  // b.any
   11c40:	str	x0, [x21, #16]
   11c44:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   11c48:	ldr	x1, [x0, #2592]
   11c4c:	add	x0, x0, #0xa20
   11c50:	blr	x1
   11c54:	mrs	x1, tpidr_el0
   11c58:	add	x0, x1, x0
   11c5c:	ldr	w1, [x0]
   11c60:	orr	w1, w1, #0x4
   11c64:	str	w1, [x0]
   11c68:	mov	w19, #0x0                   	// #0
   11c6c:	mov	sp, x29
   11c70:	mov	w0, w19
   11c74:	ldp	x19, x20, [sp, #16]
   11c78:	ldp	x21, x22, [sp, #32]
   11c7c:	ldp	x23, x24, [sp, #48]
   11c80:	ldp	x25, x26, [sp, #64]
   11c84:	ldp	x29, x30, [sp], #96
   11c88:	ret
   11c8c:	cmp	x2, x4
   11c90:	b.ne	11ca8 <mpfr_mul_ui@@Base+0xac>  // b.any
   11c94:	cbz	x20, 11c40 <mpfr_mul_ui@@Base+0x44>
   11c98:	str	x2, [x21, #16]
   11c9c:	ldr	w0, [x25, #8]
   11ca0:	str	w0, [x21, #8]
   11ca4:	b	11c68 <mpfr_mul_ui@@Base+0x6c>
   11ca8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   11cac:	str	x0, [x21, #16]
   11cb0:	b	11c9c <mpfr_mul_ui@@Base+0xa0>
   11cb4:	mov	w22, w3
   11cb8:	cmp	x20, #0x1
   11cbc:	b.hi	11ce8 <mpfr_mul_ui@@Base+0xec>  // b.pmore
   11cc0:	ldr	w3, [x1, #8]
   11cc4:	cbnz	x20, 11cd8 <mpfr_mul_ui@@Base+0xdc>
   11cc8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   11ccc:	str	w3, [x21, #8]
   11cd0:	str	x0, [x21, #16]
   11cd4:	b	11c68 <mpfr_mul_ui@@Base+0x6c>
   11cd8:	mov	w2, w22
   11cdc:	bl	c730 <mpfr_set4@plt>
   11ce0:	mov	w19, w0
   11ce4:	b	11c6c <mpfr_mul_ui@@Base+0x70>
   11ce8:	sub	x2, x20, #0x1
   11cec:	tst	x2, x20
   11cf0:	b.ne	11d0c <mpfr_mul_ui@@Base+0x110>  // b.any
   11cf4:	clz	x2, x2
   11cf8:	mov	w4, #0x40                  	// #64
   11cfc:	sub	w2, w4, w2
   11d00:	sxtw	x2, w2
   11d04:	bl	bc10 <mpfr_mul_2si@plt>
   11d08:	b	11ce0 <mpfr_mul_ui@@Base+0xe4>
   11d0c:	ldr	x19, [x1]
   11d10:	str	xzr, [x29, #88]
   11d14:	sub	x19, x19, #0x1
   11d18:	asr	x19, x19, #6
   11d1c:	add	x24, x19, #0x1
   11d20:	add	x19, x19, #0x2
   11d24:	lsl	x23, x19, #3
   11d28:	cmp	x23, #0x4, lsl #12
   11d2c:	b.hi	11e38 <mpfr_mul_ui@@Base+0x23c>  // b.pmore
   11d30:	add	x0, x23, #0xf
   11d34:	and	x0, x0, #0xfffffffffffffff0
   11d38:	sub	sp, sp, x0
   11d3c:	mov	x26, sp
   11d40:	ldr	x1, [x25, #24]
   11d44:	sub	x23, x23, #0x8
   11d48:	mov	x3, x20
   11d4c:	mov	x2, x24
   11d50:	mov	x0, x26
   11d54:	bl	cdd0 <__gmpn_mul_1@plt>
   11d58:	str	x0, [x26, x23]
   11d5c:	tbnz	x0, #63, 11e4c <mpfr_mul_ui@@Base+0x250>
   11d60:	clz	x3, x0
   11d64:	mov	x2, x19
   11d68:	mov	w23, w3
   11d6c:	mov	x1, x26
   11d70:	mov	x0, x26
   11d74:	bl	bd40 <__gmpn_lshift@plt>
   11d78:	ldr	x24, [x21]
   11d7c:	lsl	x19, x19, #6
   11d80:	sub	x4, x19, #0x1
   11d84:	sub	x0, x24, #0x1
   11d88:	cmp	x19, x24
   11d8c:	asr	x4, x4, #6
   11d90:	asr	x0, x0, #6
   11d94:	ldr	x20, [x21, #24]
   11d98:	b.gt	11e54 <mpfr_mul_ui@@Base+0x258>
   11d9c:	add	x2, x4, #0x1
   11da0:	sub	x4, x0, x4
   11da4:	add	x0, x20, x4, lsl #3
   11da8:	lsl	x19, x4, #3
   11dac:	cmp	x0, x26
   11db0:	b.eq	11dc0 <mpfr_mul_ui@@Base+0x1c4>  // b.none
   11db4:	lsl	x2, x2, #3
   11db8:	mov	x1, x26
   11dbc:	bl	ba90 <memcpy@plt>
   11dc0:	mov	x2, x19
   11dc4:	mov	w19, #0x0                   	// #0
   11dc8:	mov	x0, x20
   11dcc:	mov	w1, #0x0                   	// #0
   11dd0:	bl	c1a0 <memset@plt>
   11dd4:	ldr	x0, [x29, #88]
   11dd8:	cbz	x0, 11de0 <mpfr_mul_ui@@Base+0x1e4>
   11ddc:	bl	c4a0 <mpfr_tmp_free@plt>
   11de0:	mov	w0, #0x40                  	// #64
   11de4:	sub	w23, w0, w23
   11de8:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   11dec:	ldr	w2, [x25, #8]
   11df0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   11df4:	ldr	x1, [x0, #2560]
   11df8:	add	x0, x0, #0xa00
   11dfc:	blr	x1
   11e00:	sxtw	x3, w23
   11e04:	mrs	x1, tpidr_el0
   11e08:	add	x23, x4, w23, sxtw
   11e0c:	ldr	x0, [x1, x0]
   11e10:	cmp	x23, x0
   11e14:	b.gt	11e28 <mpfr_mul_ui@@Base+0x22c>
   11e18:	ldr	x4, [x25, #16]
   11e1c:	sub	x0, x0, x3
   11e20:	cmp	x4, x0
   11e24:	b.le	11fdc <mpfr_mul_ui@@Base+0x3e0>
   11e28:	mov	w1, w22
   11e2c:	mov	x0, x21
   11e30:	bl	bfc0 <mpfr_overflow@plt>
   11e34:	b	11ce0 <mpfr_mul_ui@@Base+0xe4>
   11e38:	mov	x1, x23
   11e3c:	add	x0, x29, #0x58
   11e40:	bl	be40 <mpfr_tmp_allocate@plt>
   11e44:	mov	x26, x0
   11e48:	b	11d40 <mpfr_mul_ui@@Base+0x144>
   11e4c:	mov	w23, #0x0                   	// #0
   11e50:	b	11d78 <mpfr_mul_ui@@Base+0x17c>
   11e54:	sub	x4, x4, x0
   11e58:	neg	w24, w24
   11e5c:	add	x2, x0, #0x1
   11e60:	ands	w24, w24, #0x3f
   11e64:	lsl	x0, x4, #3
   11e68:	add	x1, x26, x4, lsl #3
   11e6c:	b.eq	11eec <mpfr_mul_ui@@Base+0x2f0>  // b.none
   11e70:	ldr	x3, [x26, x0]
   11e74:	sub	w24, w24, #0x1
   11e78:	mov	x5, #0x1                   	// #1
   11e7c:	cmp	w22, #0x0
   11e80:	lsl	x5, x5, x24
   11e84:	and	x0, x3, x5
   11e88:	sub	x5, x5, #0x1
   11e8c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   11e90:	and	x3, x5, x3
   11e94:	b.ne	11eb8 <mpfr_mul_ui@@Base+0x2bc>  // b.any
   11e98:	mov	x6, #0xfffffffffffffff8    	// #-8
   11e9c:	madd	x6, x4, x6, x1
   11ea0:	cmp	x4, #0x0
   11ea4:	sub	x4, x4, #0x1
   11ea8:	cset	w5, ne  // ne = any
   11eac:	cmp	x3, #0x0
   11eb0:	csel	w5, w5, wzr, eq  // eq = none
   11eb4:	cbnz	w5, 11ee4 <mpfr_mul_ui@@Base+0x2e8>
   11eb8:	mov	x4, #0x2                   	// #2
   11ebc:	lsl	x24, x4, x24
   11ec0:	cmp	w22, #0x5
   11ec4:	b.eq	1203c <mpfr_mul_ui@@Base+0x440>  // b.none
   11ec8:	cbnz	w22, 1201c <mpfr_mul_ui@@Base+0x420>
   11ecc:	cbnz	x0, 11f38 <mpfr_mul_ui@@Base+0x33c>
   11ed0:	orr	x3, x0, x3
   11ed4:	cbz	x3, 1203c <mpfr_mul_ui@@Base+0x440>
   11ed8:	ldr	w19, [x25, #8]
   11edc:	neg	w19, w19
   11ee0:	b	12040 <mpfr_mul_ui@@Base+0x444>
   11ee4:	ldr	x3, [x6, x4, lsl #3]
   11ee8:	b	11ea0 <mpfr_mul_ui@@Base+0x2a4>
   11eec:	ldur	x5, [x1, #-8]
   11ef0:	cmp	w22, #0x0
   11ef4:	and	x0, x5, #0x8000000000000000
   11ef8:	and	x3, x5, #0x7fffffffffffffff
   11efc:	ccmp	x5, #0x0, #0x0, ne  // ne = any
   11f00:	b.lt	12010 <mpfr_mul_ui@@Base+0x414>  // b.tstop
   11f04:	mov	x6, #0xfffffffffffffff8    	// #-8
   11f08:	sub	x5, x4, #0x1
   11f0c:	madd	x4, x4, x6, x1
   11f10:	cmp	x5, #0x0
   11f14:	sub	x5, x5, #0x1
   11f18:	cset	w6, ne  // ne = any
   11f1c:	cmp	x3, #0x0
   11f20:	csel	w6, w6, wzr, eq  // eq = none
   11f24:	cbnz	w6, 11f30 <mpfr_mul_ui@@Base+0x334>
   11f28:	mov	x24, #0x1                   	// #1
   11f2c:	b	11ec0 <mpfr_mul_ui@@Base+0x2c4>
   11f30:	ldr	x3, [x4, x5, lsl #3]
   11f34:	b	11f10 <mpfr_mul_ui@@Base+0x314>
   11f38:	ldr	x4, [x1]
   11f3c:	ldr	w19, [x25, #8]
   11f40:	and	x4, x24, x4
   11f44:	orr	x3, x4, x3
   11f48:	cbz	x3, 11edc <mpfr_mul_ui@@Base+0x2e0>
   11f4c:	ldr	x0, [x1]
   11f50:	ldr	w19, [x25, #8]
   11f54:	adds	x0, x0, x24
   11f58:	str	x0, [x20]
   11f5c:	b.cs	11fa4 <mpfr_mul_ui@@Base+0x3a8>  // b.hs, b.nlast
   11f60:	cmp	x20, x1
   11f64:	b.eq	12054 <mpfr_mul_ui@@Base+0x458>  // b.none
   11f68:	mov	x0, #0x1                   	// #1
   11f6c:	b	11fd0 <mpfr_mul_ui@@Base+0x3d4>
   11f70:	ldr	x3, [x1, x0, lsl #3]
   11f74:	add	x3, x3, #0x1
   11f78:	str	x3, [x20, x0, lsl #3]
   11f7c:	add	x0, x0, #0x1
   11f80:	cbz	x3, 11fa8 <mpfr_mul_ui@@Base+0x3ac>
   11f84:	cmp	x20, x1
   11f88:	b.eq	12054 <mpfr_mul_ui@@Base+0x458>  // b.none
   11f8c:	cmp	x2, x0
   11f90:	b.le	12054 <mpfr_mul_ui@@Base+0x458>
   11f94:	ldr	x3, [x1, x0, lsl #3]
   11f98:	str	x3, [x20, x0, lsl #3]
   11f9c:	add	x0, x0, #0x1
   11fa0:	b	11f8c <mpfr_mul_ui@@Base+0x390>
   11fa4:	mov	x0, #0x1                   	// #1
   11fa8:	cmp	x2, x0
   11fac:	b.gt	11f70 <mpfr_mul_ui@@Base+0x374>
   11fb0:	add	x2, x20, x2, lsl #3
   11fb4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   11fb8:	sub	w23, w23, #0x1
   11fbc:	stur	x0, [x2, #-8]
   11fc0:	b	12054 <mpfr_mul_ui@@Base+0x458>
   11fc4:	ldr	x3, [x1, x0, lsl #3]
   11fc8:	str	x3, [x20, x0, lsl #3]
   11fcc:	add	x0, x0, #0x1
   11fd0:	cmp	x2, x0
   11fd4:	b.gt	11fc4 <mpfr_mul_ui@@Base+0x3c8>
   11fd8:	b	12054 <mpfr_mul_ui@@Base+0x458>
   11fdc:	add	x3, x3, x4
   11fe0:	str	w2, [x21, #8]
   11fe4:	str	x3, [x21, #16]
   11fe8:	cbz	w19, 11c6c <mpfr_mul_ui@@Base+0x70>
   11fec:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   11ff0:	ldr	x2, [x0, #2592]
   11ff4:	add	x0, x0, #0xa20
   11ff8:	blr	x2
   11ffc:	add	x0, x1, x0
   12000:	ldr	w1, [x0]
   12004:	orr	w1, w1, #0x8
   12008:	str	w1, [x0]
   1200c:	b	11c6c <mpfr_mul_ui@@Base+0x70>
   12010:	cmp	w22, #0x5
   12014:	mov	x24, #0x1                   	// #1
   12018:	b.eq	1203c <mpfr_mul_ui@@Base+0x440>  // b.none
   1201c:	cmp	w22, #0x1
   12020:	b.eq	11ed0 <mpfr_mul_ui@@Base+0x2d4>  // b.none
   12024:	ldr	w4, [x25, #8]
   12028:	add	w4, w22, w4, lsr #31
   1202c:	cmp	w4, #0x3
   12030:	b.eq	11ed0 <mpfr_mul_ui@@Base+0x2d4>  // b.none
   12034:	orr	x3, x0, x3
   12038:	cbnz	x3, 11f4c <mpfr_mul_ui@@Base+0x350>
   1203c:	mov	w19, #0x0                   	// #0
   12040:	cmp	x20, x1
   12044:	b.eq	12054 <mpfr_mul_ui@@Base+0x458>  // b.none
   12048:	lsl	x2, x2, #3
   1204c:	mov	x0, x20
   12050:	bl	ba90 <memcpy@plt>
   12054:	ldr	x0, [x20]
   12058:	neg	x24, x24
   1205c:	and	x24, x0, x24
   12060:	str	x24, [x20]
   12064:	b	11dd4 <mpfr_mul_ui@@Base+0x1d8>

0000000000012068 <mpfr_set4@@Base>:
   12068:	stp	x29, x30, [sp, #-48]!
   1206c:	mov	x8, x0
   12070:	mov	w6, w2
   12074:	mov	x29, sp
   12078:	stp	x19, x20, [sp, #16]
   1207c:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   12080:	ldr	x0, [x1, #16]
   12084:	str	x0, [x8, #16]
   12088:	str	w3, [x8, #8]
   1208c:	ldr	x0, [x1, #16]
   12090:	str	x21, [sp, #32]
   12094:	cmp	x0, x2
   12098:	b.gt	120d8 <mpfr_set4@@Base+0x70>
   1209c:	mov	x1, #0x2                   	// #2
   120a0:	movk	x1, #0x8000, lsl #48
   120a4:	cmp	x0, x1
   120a8:	b.ne	120d0 <mpfr_set4@@Base+0x68>  // b.any
   120ac:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   120b0:	ldr	x1, [x0, #2592]
   120b4:	add	x0, x0, #0xa20
   120b8:	blr	x1
   120bc:	mrs	x1, tpidr_el0
   120c0:	add	x0, x1, x0
   120c4:	ldr	w1, [x0]
   120c8:	orr	w1, w1, #0x4
   120cc:	str	w1, [x0]
   120d0:	mov	w19, #0x0                   	// #0
   120d4:	b	12238 <mpfr_set4@@Base+0x1d0>
   120d8:	ldr	x4, [x1]
   120dc:	ldr	x21, [x8]
   120e0:	ldr	x1, [x1, #24]
   120e4:	cmp	x4, x21
   120e8:	ldr	x20, [x8, #24]
   120ec:	b.ne	12114 <mpfr_set4@@Base+0xac>  // b.any
   120f0:	cmp	x20, x1
   120f4:	b.eq	120d0 <mpfr_set4@@Base+0x68>  // b.none
   120f8:	sub	x2, x4, #0x1
   120fc:	mov	x0, x20
   12100:	asr	x2, x2, #6
   12104:	add	x2, x2, #0x1
   12108:	lsl	x2, x2, #3
   1210c:	bl	ba90 <memcpy@plt>
   12110:	b	120d0 <mpfr_set4@@Base+0x68>
   12114:	mov	w19, w3
   12118:	sub	x4, x4, #0x1
   1211c:	sub	x3, x21, #0x1
   12120:	asr	x4, x4, #6
   12124:	asr	x3, x3, #6
   12128:	b.gt	12160 <mpfr_set4@@Base+0xf8>
   1212c:	add	x2, x4, #0x1
   12130:	sub	x4, x3, x4
   12134:	add	x0, x20, x4, lsl #3
   12138:	lsl	x19, x4, #3
   1213c:	cmp	x0, x1
   12140:	b.eq	1214c <mpfr_set4@@Base+0xe4>  // b.none
   12144:	lsl	x2, x2, #3
   12148:	bl	ba90 <memcpy@plt>
   1214c:	mov	x2, x19
   12150:	mov	x0, x20
   12154:	mov	w1, #0x0                   	// #0
   12158:	bl	c1a0 <memset@plt>
   1215c:	b	120d0 <mpfr_set4@@Base+0x68>
   12160:	sub	x4, x4, x3
   12164:	neg	w21, w21
   12168:	add	x2, x3, #0x1
   1216c:	ands	w21, w21, #0x3f
   12170:	lsl	x9, x4, #3
   12174:	add	x7, x1, x4, lsl #3
   12178:	b.eq	12254 <mpfr_set4@@Base+0x1ec>  // b.none
   1217c:	ldr	x3, [x1, x9]
   12180:	sub	w21, w21, #0x1
   12184:	mov	x5, #0x1                   	// #1
   12188:	cmp	w6, #0x0
   1218c:	lsl	x5, x5, x21
   12190:	and	x0, x3, x5
   12194:	sub	x5, x5, #0x1
   12198:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   1219c:	and	x3, x5, x3
   121a0:	b.ne	121c4 <mpfr_set4@@Base+0x15c>  // b.any
   121a4:	mov	x10, #0xfffffffffffffff8    	// #-8
   121a8:	madd	x10, x4, x10, x7
   121ac:	cmp	x4, #0x0
   121b0:	sub	x4, x4, #0x1
   121b4:	cset	w5, ne  // ne = any
   121b8:	cmp	x3, #0x0
   121bc:	csel	w5, w5, wzr, eq  // eq = none
   121c0:	cbnz	w5, 1224c <mpfr_set4@@Base+0x1e4>
   121c4:	mov	x4, #0x2                   	// #2
   121c8:	lsl	x21, x4, x21
   121cc:	cmp	w6, #0x5
   121d0:	b.eq	123ac <mpfr_set4@@Base+0x344>  // b.none
   121d4:	cbnz	w6, 12390 <mpfr_set4@@Base+0x328>
   121d8:	cbnz	x0, 122a0 <mpfr_set4@@Base+0x238>
   121dc:	orr	x3, x0, x3
   121e0:	cmp	x3, #0x0
   121e4:	csneg	w19, wzr, w19, eq  // eq = none
   121e8:	cmp	x20, x7
   121ec:	b.eq	12200 <mpfr_set4@@Base+0x198>  // b.none
   121f0:	lsl	x2, x2, #3
   121f4:	mov	x1, x7
   121f8:	mov	x0, x20
   121fc:	bl	ba90 <memcpy@plt>
   12200:	ldr	x0, [x20]
   12204:	neg	x21, x21
   12208:	and	x21, x0, x21
   1220c:	str	x21, [x20]
   12210:	cbz	w19, 12238 <mpfr_set4@@Base+0x1d0>
   12214:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   12218:	ldr	x1, [x0, #2592]
   1221c:	add	x0, x0, #0xa20
   12220:	blr	x1
   12224:	mrs	x1, tpidr_el0
   12228:	add	x0, x1, x0
   1222c:	ldr	w1, [x0]
   12230:	orr	w1, w1, #0x8
   12234:	str	w1, [x0]
   12238:	mov	w0, w19
   1223c:	ldp	x19, x20, [sp, #16]
   12240:	ldr	x21, [sp, #32]
   12244:	ldp	x29, x30, [sp], #48
   12248:	ret
   1224c:	ldr	x3, [x10, x4, lsl #3]
   12250:	b	121ac <mpfr_set4@@Base+0x144>
   12254:	ldur	x5, [x7, #-8]
   12258:	cmp	w6, #0x0
   1225c:	and	x0, x5, #0x8000000000000000
   12260:	and	x3, x5, #0x7fffffffffffffff
   12264:	ccmp	x5, #0x0, #0x0, ne  // ne = any
   12268:	b.lt	12384 <mpfr_set4@@Base+0x31c>  // b.tstop
   1226c:	mov	x10, #0xfffffffffffffff8    	// #-8
   12270:	sub	x5, x4, #0x1
   12274:	madd	x4, x4, x10, x7
   12278:	cmp	x5, #0x0
   1227c:	sub	x5, x5, #0x1
   12280:	cset	w10, ne  // ne = any
   12284:	cmp	x3, #0x0
   12288:	csel	w10, w10, wzr, eq  // eq = none
   1228c:	cbnz	w10, 12298 <mpfr_set4@@Base+0x230>
   12290:	mov	x21, #0x1                   	// #1
   12294:	b	121cc <mpfr_set4@@Base+0x164>
   12298:	ldr	x3, [x4, x5, lsl #3]
   1229c:	b	12278 <mpfr_set4@@Base+0x210>
   122a0:	ldr	x0, [x1, x9]
   122a4:	and	x0, x21, x0
   122a8:	orr	x3, x0, x3
   122ac:	cbnz	x3, 122b8 <mpfr_set4@@Base+0x250>
   122b0:	neg	w19, w19
   122b4:	b	121e8 <mpfr_set4@@Base+0x180>
   122b8:	ldr	x0, [x1, x9]
   122bc:	adds	x0, x0, x21
   122c0:	str	x0, [x20]
   122c4:	b.cs	1230c <mpfr_set4@@Base+0x2a4>  // b.hs, b.nlast
   122c8:	cmp	x20, x7
   122cc:	b.eq	12200 <mpfr_set4@@Base+0x198>  // b.none
   122d0:	mov	x0, #0x1                   	// #1
   122d4:	b	12378 <mpfr_set4@@Base+0x310>
   122d8:	ldr	x0, [x7, x1, lsl #3]
   122dc:	add	x0, x0, #0x1
   122e0:	str	x0, [x20, x1, lsl #3]
   122e4:	add	x1, x1, #0x1
   122e8:	cbz	x0, 12310 <mpfr_set4@@Base+0x2a8>
   122ec:	cmp	x20, x7
   122f0:	b.eq	12200 <mpfr_set4@@Base+0x198>  // b.none
   122f4:	cmp	x2, x1
   122f8:	b.le	12200 <mpfr_set4@@Base+0x198>
   122fc:	ldr	x0, [x7, x1, lsl #3]
   12300:	str	x0, [x20, x1, lsl #3]
   12304:	add	x1, x1, #0x1
   12308:	b	122f4 <mpfr_set4@@Base+0x28c>
   1230c:	mov	x1, #0x1                   	// #1
   12310:	cmp	x2, x1
   12314:	b.gt	122d8 <mpfr_set4@@Base+0x270>
   12318:	add	x2, x20, x2, lsl #3
   1231c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   12320:	stur	x0, [x2, #-8]
   12324:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   12328:	ldr	x2, [x0, #2560]
   1232c:	add	x0, x0, #0xa00
   12330:	blr	x2
   12334:	mrs	x2, tpidr_el0
   12338:	ldr	x1, [x8, #16]
   1233c:	ldr	x0, [x2, x0]
   12340:	add	x1, x1, #0x1
   12344:	str	x1, [x8, #16]
   12348:	cmp	x1, x0
   1234c:	b.le	12200 <mpfr_set4@@Base+0x198>
   12350:	mov	w2, w19
   12354:	mov	w1, w6
   12358:	ldp	x19, x20, [sp, #16]
   1235c:	mov	x0, x8
   12360:	ldr	x21, [sp, #32]
   12364:	ldp	x29, x30, [sp], #48
   12368:	b	bfc0 <mpfr_overflow@plt>
   1236c:	ldr	x1, [x7, x0, lsl #3]
   12370:	str	x1, [x20, x0, lsl #3]
   12374:	add	x0, x0, #0x1
   12378:	cmp	x2, x0
   1237c:	b.gt	1236c <mpfr_set4@@Base+0x304>
   12380:	b	12200 <mpfr_set4@@Base+0x198>
   12384:	cmp	w6, #0x5
   12388:	mov	x21, #0x1                   	// #1
   1238c:	b.eq	123ac <mpfr_set4@@Base+0x344>  // b.none
   12390:	cmp	w6, #0x1
   12394:	b.eq	121dc <mpfr_set4@@Base+0x174>  // b.none
   12398:	add	w4, w6, w19, lsr #31
   1239c:	cmp	w4, #0x3
   123a0:	b.eq	121dc <mpfr_set4@@Base+0x174>  // b.none
   123a4:	orr	x3, x0, x3
   123a8:	cbnz	x3, 122b8 <mpfr_set4@@Base+0x250>
   123ac:	mov	w19, #0x0                   	// #0
   123b0:	b	121e8 <mpfr_set4@@Base+0x180>

00000000000123b4 <mpfr_set_prec@@Base>:
   123b4:	stp	x29, x30, [sp, #-48]!
   123b8:	sub	x2, x1, #0x1
   123bc:	mov	x29, sp
   123c0:	stp	x19, x20, [sp, #16]
   123c4:	mov	x19, x0
   123c8:	mov	x0, #0xfffffffffffffefe    	// #-258
   123cc:	str	x21, [sp, #32]
   123d0:	movk	x0, #0x7fff, lsl #48
   123d4:	cmp	x2, x0
   123d8:	b.ls	123f4 <mpfr_set_prec@@Base+0x40>  // b.plast
   123dc:	adrp	x2, 56000 <mpfr_l2b_2_0__tab@@Base+0x488>
   123e0:	adrp	x0, 56000 <mpfr_l2b_2_0__tab@@Base+0x488>
   123e4:	add	x2, x2, #0xba
   123e8:	add	x0, x0, #0x16c
   123ec:	mov	w1, #0x1f                  	// #31
   123f0:	bl	cbd0 <mpfr_assert_fail@plt>
   123f4:	ldr	x0, [x19, #24]
   123f8:	mov	x20, x1
   123fc:	asr	x2, x2, #6
   12400:	add	x21, x2, #0x1
   12404:	ldur	x1, [x0, #-8]
   12408:	cmp	x21, x1
   1240c:	b.le	12434 <mpfr_set_prec@@Base+0x80>
   12410:	add	x1, x1, #0x1
   12414:	add	x2, x2, #0x2
   12418:	sub	x0, x0, #0x8
   1241c:	lsl	x1, x1, #3
   12420:	lsl	x2, x2, #3
   12424:	bl	c250 <mpfr_reallocate_func@plt>
   12428:	add	x1, x0, #0x8
   1242c:	str	x1, [x19, #24]
   12430:	str	x21, [x0]
   12434:	mov	x0, #0x2                   	// #2
   12438:	movk	x0, #0x8000, lsl #48
   1243c:	ldr	x21, [sp, #32]
   12440:	str	x20, [x19]
   12444:	str	x0, [x19, #16]
   12448:	ldp	x19, x20, [sp, #16]
   1244c:	ldp	x29, x30, [sp], #48
   12450:	ret

0000000000012454 <mpfr_sub@@Base>:
   12454:	stp	x29, x30, [sp, #-48]!
   12458:	mov	x5, #0x5                   	// #5
   1245c:	movk	x5, #0x8000, lsl #48
   12460:	mov	x29, sp
   12464:	ldr	x4, [x1, #16]
   12468:	stp	x19, x20, [sp, #16]
   1246c:	mov	x19, x0
   12470:	stp	x21, x22, [sp, #32]
   12474:	mov	x20, x2
   12478:	mov	x22, x1
   1247c:	mov	w21, w3
   12480:	cmp	x4, x5
   12484:	b.lt	124dc <mpfr_sub@@Base+0x88>  // b.tstop
   12488:	ldr	x7, [x2, #16]
   1248c:	cmp	x7, x5
   12490:	b.ge	126a0 <mpfr_sub@@Base+0x24c>  // b.tcont
   12494:	ldr	x0, [x20, #16]
   12498:	mov	x1, #0x2                   	// #2
   1249c:	movk	x1, #0x8000, lsl #48
   124a0:	cmp	x0, x1
   124a4:	b.eq	124ec <mpfr_sub@@Base+0x98>  // b.none
   124a8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   124ac:	cmp	x4, x1
   124b0:	mov	x2, x1
   124b4:	b.ne	12530 <mpfr_sub@@Base+0xdc>  // b.any
   124b8:	cmp	x0, x1
   124bc:	ldr	w1, [x22, #8]
   124c0:	b.ne	124d0 <mpfr_sub@@Base+0x7c>  // b.any
   124c4:	ldr	w0, [x20, #8]
   124c8:	cmp	w1, w0
   124cc:	b.eq	124ec <mpfr_sub@@Base+0x98>  // b.none
   124d0:	str	w1, [x19, #8]
   124d4:	str	x2, [x19, #16]
   124d8:	b	1251c <mpfr_sub@@Base+0xc8>
   124dc:	mov	x0, #0x2                   	// #2
   124e0:	movk	x0, #0x8000, lsl #48
   124e4:	cmp	x4, x0
   124e8:	b.ne	12494 <mpfr_sub@@Base+0x40>  // b.any
   124ec:	mov	x0, #0x2                   	// #2
   124f0:	movk	x0, #0x8000, lsl #48
   124f4:	str	x0, [x19, #16]
   124f8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   124fc:	ldr	x1, [x0, #2592]
   12500:	add	x0, x0, #0xa20
   12504:	blr	x1
   12508:	mrs	x1, tpidr_el0
   1250c:	add	x0, x1, x0
   12510:	ldr	w1, [x0]
   12514:	orr	w1, w1, #0x4
   12518:	str	w1, [x0]
   1251c:	mov	w0, #0x0                   	// #0
   12520:	ldp	x19, x20, [sp, #16]
   12524:	ldp	x21, x22, [sp, #32]
   12528:	ldp	x29, x30, [sp], #48
   1252c:	ret
   12530:	cmp	x0, x1
   12534:	b.ne	1254c <mpfr_sub@@Base+0xf8>  // b.any
   12538:	str	x0, [x19, #16]
   1253c:	ldr	w0, [x20, #8]
   12540:	neg	w0, w0
   12544:	str	w0, [x19, #8]
   12548:	b	1251c <mpfr_sub@@Base+0xc8>
   1254c:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   12550:	cmp	x4, x1
   12554:	b.ne	125d8 <mpfr_sub@@Base+0x184>  // b.any
   12558:	cmp	x0, x4
   1255c:	b.ne	125bc <mpfr_sub@@Base+0x168>  // b.any
   12560:	ldr	w0, [x22, #8]
   12564:	cmp	w21, #0x3
   12568:	b.eq	12590 <mpfr_sub@@Base+0x13c>  // b.none
   1256c:	tbz	w0, #31, 125ac <mpfr_sub@@Base+0x158>
   12570:	ldr	w1, [x20, #8]
   12574:	mov	w0, #0xffffffff            	// #-1
   12578:	cmp	w1, #0x1
   1257c:	cneg	w0, w0, lt  // lt = tstop
   12580:	str	w0, [x19, #8]
   12584:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   12588:	str	x0, [x19, #16]
   1258c:	b	1251c <mpfr_sub@@Base+0xc8>
   12590:	cmp	w0, #0x0
   12594:	b.le	125b4 <mpfr_sub@@Base+0x160>
   12598:	ldr	w1, [x20, #8]
   1259c:	mov	w0, #0x1                   	// #1
   125a0:	cmn	w1, #0x1
   125a4:	cneg	w0, w0, gt
   125a8:	b	12580 <mpfr_sub@@Base+0x12c>
   125ac:	mov	w0, #0x1                   	// #1
   125b0:	b	12580 <mpfr_sub@@Base+0x12c>
   125b4:	mov	w0, #0xffffffff            	// #-1
   125b8:	b	12580 <mpfr_sub@@Base+0x12c>
   125bc:	mov	w2, w21
   125c0:	mov	x1, x20
   125c4:	mov	x0, x19
   125c8:	ldp	x19, x20, [sp, #16]
   125cc:	ldp	x21, x22, [sp, #32]
   125d0:	ldp	x29, x30, [sp], #48
   125d4:	b	bdf0 <mpfr_neg@plt>
   125d8:	cmp	x0, x1
   125dc:	b.ne	12600 <mpfr_sub@@Base+0x1ac>  // b.any
   125e0:	ldr	w3, [x22, #8]
   125e4:	mov	w2, w21
   125e8:	mov	x1, x22
   125ec:	mov	x0, x19
   125f0:	ldp	x19, x20, [sp, #16]
   125f4:	ldp	x21, x22, [sp, #32]
   125f8:	ldp	x29, x30, [sp], #48
   125fc:	b	c730 <mpfr_set4@plt>
   12600:	ldr	w1, [x20, #8]
   12604:	ldr	w2, [x22, #8]
   12608:	cmp	w2, w1
   1260c:	b.ne	12630 <mpfr_sub@@Base+0x1dc>  // b.any
   12610:	mov	w3, w21
   12614:	mov	x2, x20
   12618:	mov	x1, x22
   1261c:	mov	x0, x19
   12620:	ldp	x19, x20, [sp, #16]
   12624:	ldp	x21, x22, [sp, #32]
   12628:	ldp	x29, x30, [sp], #48
   1262c:	b	cb00 <mpfr_sub1@plt>
   12630:	mov	x1, #0x4                   	// #4
   12634:	movk	x1, #0x8000, lsl #48
   12638:	cmp	x4, x1
   1263c:	b.eq	12648 <mpfr_sub@@Base+0x1f4>  // b.none
   12640:	cmp	x0, x1
   12644:	b.ne	1268c <mpfr_sub@@Base+0x238>  // b.any
   12648:	mov	x1, x20
   1264c:	mov	x0, x22
   12650:	bl	cb40 <mpfr_ubf_exp_less_p@plt>
   12654:	cmp	w0, #0x0
   12658:	cset	w0, ne  // ne = any
   1265c:	cbz	w0, 12760 <mpfr_sub@@Base+0x30c>
   12660:	cmp	w21, #0x2
   12664:	b.eq	12698 <mpfr_sub@@Base+0x244>  // b.none
   12668:	cmp	w21, #0x3
   1266c:	mov	w0, #0x2                   	// #2
   12670:	csel	w21, w21, w0, ne  // ne = any
   12674:	mov	w3, w21
   12678:	mov	x2, x22
   1267c:	mov	x1, x20
   12680:	mov	x0, x19
   12684:	bl	c810 <mpfr_add1@plt>
   12688:	b	12720 <mpfr_sub@@Base+0x2cc>
   1268c:	cmp	x4, x0
   12690:	cset	w0, lt  // lt = tstop
   12694:	b	1265c <mpfr_sub@@Base+0x208>
   12698:	mov	w21, #0x3                   	// #3
   1269c:	b	12674 <mpfr_sub@@Base+0x220>
   126a0:	ldr	w8, [x2, #8]
   126a4:	ldr	w9, [x1, #8]
   126a8:	ldr	x5, [x0]
   126ac:	cmp	w9, w8
   126b0:	ldr	x6, [x1]
   126b4:	b.ne	126dc <mpfr_sub@@Base+0x288>  // b.any
   126b8:	cmp	x5, x6
   126bc:	b.ne	12610 <mpfr_sub@@Base+0x1bc>  // b.any
   126c0:	ldr	x4, [x2]
   126c4:	cmp	x5, x4
   126c8:	b.ne	12610 <mpfr_sub@@Base+0x1bc>  // b.any
   126cc:	ldp	x19, x20, [sp, #16]
   126d0:	ldp	x21, x22, [sp, #32]
   126d4:	ldp	x29, x30, [sp], #48
   126d8:	b	c170 <mpfr_sub1sp@plt>
   126dc:	cmp	x4, x7
   126e0:	b.ge	1273c <mpfr_sub@@Base+0x2e8>  // b.tcont
   126e4:	cmp	w3, #0x2
   126e8:	b.eq	12734 <mpfr_sub@@Base+0x2e0>  // b.none
   126ec:	cmp	w3, #0x3
   126f0:	mov	w0, #0x2                   	// #2
   126f4:	csel	w21, w3, w0, ne  // ne = any
   126f8:	mov	w3, w21
   126fc:	mov	x2, x22
   12700:	mov	x1, x20
   12704:	cmp	x5, x6
   12708:	b.ne	12680 <mpfr_sub@@Base+0x22c>  // b.any
   1270c:	ldr	x0, [x20]
   12710:	cmp	x5, x0
   12714:	b.ne	12680 <mpfr_sub@@Base+0x22c>  // b.any
   12718:	mov	x0, x19
   1271c:	bl	cc40 <mpfr_add1sp@plt>
   12720:	ldr	w1, [x19, #8]
   12724:	neg	w0, w0
   12728:	neg	w1, w1
   1272c:	str	w1, [x19, #8]
   12730:	b	12520 <mpfr_sub@@Base+0xcc>
   12734:	mov	w21, #0x3                   	// #3
   12738:	b	126f8 <mpfr_sub@@Base+0x2a4>
   1273c:	cmp	x5, x6
   12740:	b.ne	12760 <mpfr_sub@@Base+0x30c>  // b.any
   12744:	ldr	x4, [x2]
   12748:	cmp	x5, x4
   1274c:	b.ne	12760 <mpfr_sub@@Base+0x30c>  // b.any
   12750:	ldp	x19, x20, [sp, #16]
   12754:	ldp	x21, x22, [sp, #32]
   12758:	ldp	x29, x30, [sp], #48
   1275c:	b	cc40 <mpfr_add1sp@plt>
   12760:	mov	w3, w21
   12764:	mov	x2, x20
   12768:	mov	x1, x22
   1276c:	mov	x0, x19
   12770:	ldp	x19, x20, [sp, #16]
   12774:	ldp	x21, x22, [sp, #32]
   12778:	ldp	x29, x30, [sp], #48
   1277c:	b	c810 <mpfr_add1@plt>

0000000000012780 <mpfr_init2@@Base>:
   12780:	stp	x29, x30, [sp, #-48]!
   12784:	mov	x29, sp
   12788:	stp	x19, x20, [sp, #16]
   1278c:	mov	x20, x0
   12790:	adrp	x0, 73000 <__gmpfr_l2b@@Base+0x200>
   12794:	str	x21, [sp, #32]
   12798:	ldr	x0, [x0, #4032]
   1279c:	ldr	w0, [x0]
   127a0:	cmp	w0, #0x40
   127a4:	b.eq	127c0 <mpfr_init2@@Base+0x40>  // b.none
   127a8:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   127ac:	add	x2, x2, #0x8c5
   127b0:	mov	w1, #0x27                  	// #39
   127b4:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   127b8:	add	x0, x0, #0x8e5
   127bc:	bl	cbd0 <mpfr_assert_fail@plt>
   127c0:	sub	x19, x1, #0x1
   127c4:	mov	x0, #0xfffffffffffffefe    	// #-258
   127c8:	movk	x0, #0x7fff, lsl #48
   127cc:	mov	x21, x1
   127d0:	cmp	x19, x0
   127d4:	b.ls	127e8 <mpfr_init2@@Base+0x68>  // b.plast
   127d8:	adrp	x2, 56000 <mpfr_l2b_2_0__tab@@Base+0x488>
   127dc:	mov	w1, #0x34                  	// #52
   127e0:	add	x2, x2, #0xba
   127e4:	b	127b4 <mpfr_init2@@Base+0x34>
   127e8:	asr	x19, x19, #6
   127ec:	add	x0, x19, #0x2
   127f0:	add	x19, x19, #0x1
   127f4:	lsl	x0, x0, #3
   127f8:	bl	cd90 <mpfr_allocate_func@plt>
   127fc:	mov	w1, #0x1                   	// #1
   12800:	str	x21, [x20]
   12804:	str	w1, [x20, #8]
   12808:	add	x1, x0, #0x8
   1280c:	ldr	x21, [sp, #32]
   12810:	str	x1, [x20, #24]
   12814:	str	x19, [x0]
   12818:	mov	x0, #0x2                   	// #2
   1281c:	movk	x0, #0x8000, lsl #48
   12820:	str	x0, [x20, #16]
   12824:	ldp	x19, x20, [sp, #16]
   12828:	ldp	x29, x30, [sp], #48
   1282c:	ret

0000000000012830 <mpfr_sub1sp@@Base>:
   12830:	stp	x29, x30, [sp, #-176]!
   12834:	mov	x8, x1
   12838:	mov	x29, sp
   1283c:	stp	x23, x24, [sp, #48]
   12840:	ldr	x24, [x1]
   12844:	stp	x19, x20, [sp, #16]
   12848:	stp	x21, x22, [sp, #32]
   1284c:	cmp	x24, #0x3f
   12850:	mov	w21, w3
   12854:	stp	x25, x26, [sp, #64]
   12858:	mov	x26, x0
   1285c:	add	x0, x24, #0x1
   12860:	stp	x27, x28, [sp, #80]
   12864:	mov	x27, x2
   12868:	str	x0, [x29, #136]
   1286c:	ldr	x19, [x1, #16]
   12870:	ldr	x20, [x2, #16]
   12874:	b.gt	12aec <mpfr_sub1sp@@Base+0x2bc>
   12878:	cmp	x19, x20
   1287c:	ldr	x11, [x1, #24]
   12880:	ldr	x9, [x26, #24]
   12884:	ldr	x1, [x2, #24]
   12888:	b.ne	12930 <mpfr_sub1sp@@Base+0x100>  // b.any
   1288c:	ldr	x1, [x1]
   12890:	ldr	x2, [x11]
   12894:	subs	x0, x2, x1
   12898:	cmp	x2, x1
   1289c:	cset	x4, cc  // cc = lo, ul, last
   128a0:	cbnz	x0, 128c0 <mpfr_sub1sp@@Base+0x90>
   128a4:	cmp	w21, #0x3
   128a8:	mov	w0, #0x1                   	// #1
   128ac:	cneg	w0, w0, eq  // eq = none
   128b0:	str	w0, [x26, #8]
   128b4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   128b8:	str	x0, [x26, #16]
   128bc:	b	12a48 <mpfr_sub1sp@@Base+0x218>
   128c0:	ldr	w3, [x8, #8]
   128c4:	cbz	x4, 128d0 <mpfr_sub1sp@@Base+0xa0>
   128c8:	neg	w3, w3
   128cc:	sub	x0, x1, x2
   128d0:	clz	x1, x0
   128d4:	str	w3, [x26, #8]
   128d8:	sub	x19, x19, x1
   128dc:	mov	x2, #0x0                   	// #0
   128e0:	lsl	x0, x0, x1
   128e4:	mov	x3, #0x0                   	// #0
   128e8:	str	x0, [x9]
   128ec:	mrs	x4, tpidr_el0
   128f0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   128f4:	ldr	x1, [x0, #2528]
   128f8:	add	x0, x0, #0x9e0
   128fc:	blr	x1
   12900:	ldr	x0, [x4, x0]
   12904:	cmp	x0, x19
   12908:	b.le	12a3c <mpfr_sub1sp@@Base+0x20c>
   1290c:	cbnz	w21, 132c8 <mpfr_sub1sp@@Base+0xa98>
   12910:	sub	x0, x0, #0x1
   12914:	cmp	x19, x0
   12918:	b.lt	13870 <mpfr_sub1sp@@Base+0x1040>  // b.tstop
   1291c:	ldr	x1, [x9]
   12920:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   12924:	cmp	x1, x0
   12928:	cset	w21, eq  // eq = none
   1292c:	b	132c8 <mpfr_sub1sp@@Base+0xa98>
   12930:	ldr	w0, [x8, #8]
   12934:	b.le	12a1c <mpfr_sub1sp@@Base+0x1ec>
   12938:	mov	x3, #0x40                  	// #64
   1293c:	sub	x6, x3, x24
   12940:	str	w0, [x26, #8]
   12944:	sub	x20, x19, x20
   12948:	mov	x2, #0x1                   	// #1
   1294c:	cmp	x20, #0x3f
   12950:	lsl	x4, x2, x6
   12954:	ldr	x0, [x11]
   12958:	b.hi	129d0 <mpfr_sub1sp@@Base+0x1a0>  // b.pmore
   1295c:	ldr	x1, [x1]
   12960:	sub	w2, w3, w20
   12964:	lsl	x2, x1, x2
   12968:	negs	x2, x2
   1296c:	lsr	x20, x1, x20
   12970:	sub	x20, x0, x20
   12974:	cset	x0, ne  // ne = any
   12978:	sub	x20, x20, x0
   1297c:	clz	x1, x20
   12980:	mov	x0, x1
   12984:	cbz	x1, 12998 <mpfr_sub1sp@@Base+0x168>
   12988:	sub	w3, w3, w1
   1298c:	lsl	x20, x20, x1
   12990:	lsr	x3, x2, x3
   12994:	orr	x20, x3, x20
   12998:	sub	x19, x19, x0
   1299c:	sub	w0, w6, #0x1
   129a0:	lsl	x1, x2, x1
   129a4:	mov	x2, #0x1                   	// #1
   129a8:	lsl	x0, x2, x0
   129ac:	sub	x2, x4, #0x1
   129b0:	eor	x2, x2, x0
   129b4:	and	x3, x0, x20
   129b8:	and	x2, x2, x20
   129bc:	neg	x0, x4
   129c0:	and	x20, x0, x20
   129c4:	orr	x2, x2, x1
   129c8:	str	x20, [x9]
   129cc:	b	128ec <mpfr_sub1sp@@Base+0xbc>
   129d0:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
   129d4:	cmp	x0, x3
   129d8:	b.ls	129ec <mpfr_sub1sp@@Base+0x1bc>  // b.plast
   129dc:	sub	x0, x0, x4
   129e0:	mov	x3, x2
   129e4:	str	x0, [x9]
   129e8:	b	128ec <mpfr_sub1sp@@Base+0xbc>
   129ec:	cmp	x20, #0x40
   129f0:	ccmp	x6, #0x1, #0x0, ls  // ls = plast
   129f4:	b.gt	12a04 <mpfr_sub1sp@@Base+0x1d4>
   129f8:	ldr	x0, [x1]
   129fc:	cmp	x0, x3
   12a00:	cset	w2, eq  // eq = none
   12a04:	sxtw	x3, w2
   12a08:	neg	x0, x4
   12a0c:	sub	x19, x19, #0x1
   12a10:	mov	x2, #0x1                   	// #1
   12a14:	str	x0, [x9]
   12a18:	b	128ec <mpfr_sub1sp@@Base+0xbc>
   12a1c:	mov	x2, x11
   12a20:	mov	x11, x1
   12a24:	mov	x1, x2
   12a28:	mov	x2, x19
   12a2c:	neg	w0, w0
   12a30:	mov	x19, x20
   12a34:	mov	x20, x2
   12a38:	b	12938 <mpfr_sub1sp@@Base+0x108>
   12a3c:	str	x19, [x26, #16]
   12a40:	orr	x0, x3, x2
   12a44:	cbnz	x0, 12a50 <mpfr_sub1sp@@Base+0x220>
   12a48:	mov	w1, #0x0                   	// #0
   12a4c:	b	131c0 <mpfr_sub1sp@@Base+0x990>
   12a50:	cmp	w21, #0x5
   12a54:	b.eq	12a48 <mpfr_sub1sp@@Base+0x218>  // b.none
   12a58:	ldr	w1, [x26, #8]
   12a5c:	cbnz	w21, 12a94 <mpfr_sub1sp@@Base+0x264>
   12a60:	cbz	x3, 12a78 <mpfr_sub1sp@@Base+0x248>
   12a64:	ldr	x0, [x9]
   12a68:	lsr	x0, x0, x6
   12a6c:	and	x0, x0, #0x1
   12a70:	orr	x2, x0, x2
   12a74:	cbnz	x2, 12aa8 <mpfr_sub1sp@@Base+0x278>
   12a78:	cbz	w1, 12a48 <mpfr_sub1sp@@Base+0x218>
   12a7c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   12a80:	ldr	x2, [x0, #2592]
   12a84:	add	x0, x0, #0xa20
   12a88:	blr	x2
   12a8c:	add	x0, x4, x0
   12a90:	b	12e20 <mpfr_sub1sp@@Base+0x5f0>
   12a94:	cmp	w21, #0x1
   12a98:	b.eq	12a78 <mpfr_sub1sp@@Base+0x248>  // b.none
   12a9c:	add	w21, w21, w1, lsr #31
   12aa0:	cmp	w21, #0x3
   12aa4:	b.eq	12a78 <mpfr_sub1sp@@Base+0x248>  // b.none
   12aa8:	mov	x0, #0x1                   	// #1
   12aac:	lsl	x6, x0, x6
   12ab0:	ldr	x0, [x9]
   12ab4:	add	x6, x6, x0
   12ab8:	str	x6, [x9]
   12abc:	cbnz	x6, 12ad0 <mpfr_sub1sp@@Base+0x2a0>
   12ac0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   12ac4:	str	x0, [x9]
   12ac8:	add	x19, x19, #0x1
   12acc:	str	x19, [x26, #16]
   12ad0:	cbz	w1, 131c0 <mpfr_sub1sp@@Base+0x990>
   12ad4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   12ad8:	ldr	x2, [x0, #2592]
   12adc:	add	x0, x0, #0xa20
   12ae0:	blr	x2
   12ae4:	add	x0, x4, x0
   12ae8:	b	12e94 <mpfr_sub1sp@@Base+0x664>
   12aec:	sub	x0, x24, #0x41
   12af0:	cmp	x0, #0x3e
   12af4:	b.hi	12ea4 <mpfr_sub1sp@@Base+0x674>  // b.pmore
   12af8:	cmp	x19, x20
   12afc:	ldr	x3, [x1, #24]
   12b00:	ldr	x6, [x26, #24]
   12b04:	ldr	x10, [x2, #24]
   12b08:	b.ne	12be4 <mpfr_sub1sp@@Base+0x3b4>  // b.any
   12b0c:	ldp	x7, x11, [x3]
   12b10:	ldp	x9, x2, [x10]
   12b14:	subs	x1, x7, x9
   12b18:	sub	x0, x11, x2
   12b1c:	cset	x3, cc  // cc = lo, ul, last
   12b20:	sub	x0, x0, x3
   12b24:	orr	x10, x1, x0
   12b28:	cbz	x10, 128a4 <mpfr_sub1sp@@Base+0x74>
   12b2c:	ldr	w8, [x8, #8]
   12b30:	cmp	x11, x0
   12b34:	b.hi	12b50 <mpfr_sub1sp@@Base+0x320>  // b.pmore
   12b38:	subs	x1, x9, x7
   12b3c:	neg	w8, w8
   12b40:	cset	x0, ne  // ne = any
   12b44:	sub	x3, x3, x0
   12b48:	sub	x0, x2, x11
   12b4c:	add	x0, x3, x0
   12b50:	str	w8, [x26, #8]
   12b54:	cbnz	x0, 12b64 <mpfr_sub1sp@@Base+0x334>
   12b58:	sub	x19, x19, #0x40
   12b5c:	mov	x0, x1
   12b60:	mov	x1, #0x0                   	// #0
   12b64:	clz	x2, x0
   12b68:	cbz	x2, 12bdc <mpfr_sub1sp@@Base+0x3ac>
   12b6c:	neg	w3, w2
   12b70:	sub	x19, x19, x2
   12b74:	lsl	x0, x0, x2
   12b78:	lsr	x3, x1, x3
   12b7c:	orr	x0, x3, x0
   12b80:	lsl	x1, x1, x2
   12b84:	stp	x1, x0, [x6]
   12b88:	mov	x2, #0x0                   	// #0
   12b8c:	mov	x3, #0x0                   	// #0
   12b90:	mrs	x7, tpidr_el0
   12b94:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   12b98:	ldr	x1, [x0, #2528]
   12b9c:	add	x0, x0, #0x9e0
   12ba0:	blr	x1
   12ba4:	ldr	x0, [x7, x0]
   12ba8:	cmp	x0, x19
   12bac:	b.le	12dd4 <mpfr_sub1sp@@Base+0x5a4>
   12bb0:	cbnz	w21, 132c8 <mpfr_sub1sp@@Base+0xa98>
   12bb4:	sub	x0, x0, #0x1
   12bb8:	cmp	x19, x0
   12bbc:	b.lt	13870 <mpfr_sub1sp@@Base+0x1040>  // b.tstop
   12bc0:	ldr	x1, [x6, #8]
   12bc4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   12bc8:	cmp	x1, x0
   12bcc:	b.ne	132c8 <mpfr_sub1sp@@Base+0xa98>  // b.any
   12bd0:	ldr	x0, [x6]
   12bd4:	cmp	x0, #0x0
   12bd8:	b	12928 <mpfr_sub1sp@@Base+0xf8>
   12bdc:	stp	x1, x0, [x6]
   12be0:	b	12b88 <mpfr_sub1sp@@Base+0x358>
   12be4:	ldr	w0, [x1, #8]
   12be8:	b.le	12db4 <mpfr_sub1sp@@Base+0x584>
   12bec:	ldp	x1, x3, [x3]
   12bf0:	str	w0, [x26, #8]
   12bf4:	mov	x0, #0x80                  	// #128
   12bf8:	sub	x4, x0, x24
   12bfc:	sub	x20, x19, x20
   12c00:	mov	x2, #0x1                   	// #1
   12c04:	lsl	x8, x2, x4
   12c08:	cmp	x20, #0x3f
   12c0c:	sub	x11, x8, #0x1
   12c10:	b.hi	12cb4 <mpfr_sub1sp@@Base+0x484>  // b.pmore
   12c14:	mov	w2, #0x40                  	// #64
   12c18:	sub	w0, w2, w20
   12c1c:	ldp	x2, x9, [x10]
   12c20:	lsr	x7, x2, x20
   12c24:	lsl	x10, x9, x0
   12c28:	orr	x10, x10, x7
   12c2c:	cmp	x1, x10
   12c30:	lsr	x20, x9, x20
   12c34:	sub	x7, x1, x10
   12c38:	sbc	x20, x3, x20
   12c3c:	lsl	x2, x2, x0
   12c40:	cbz	x2, 141c8 <mpfr_sub1sp@@Base+0x1998>
   12c44:	cmp	x7, #0x0
   12c48:	neg	x2, x2
   12c4c:	cset	x0, eq  // eq = none
   12c50:	sub	x7, x7, #0x1
   12c54:	sub	x20, x20, x0
   12c58:	clz	x0, x20
   12c5c:	cbz	x0, 12c88 <mpfr_sub1sp@@Base+0x458>
   12c60:	mov	w1, #0x40                  	// #64
   12c64:	sub	w1, w1, w0
   12c68:	lsl	x20, x20, x0
   12c6c:	sub	x19, x19, x0
   12c70:	lsr	x3, x7, x1
   12c74:	orr	x20, x20, x3
   12c78:	lsr	x1, x2, x1
   12c7c:	lsl	x7, x7, x0
   12c80:	orr	x7, x1, x7
   12c84:	lsl	x2, x2, x0
   12c88:	sub	w1, w4, #0x1
   12c8c:	mov	x3, #0x1                   	// #1
   12c90:	neg	x8, x8
   12c94:	lsl	x1, x3, x1
   12c98:	and	x3, x1, x7
   12c9c:	eor	x1, x11, x1
   12ca0:	and	x1, x1, x7
   12ca4:	and	x7, x8, x7
   12ca8:	orr	x2, x1, x2
   12cac:	stp	x7, x20, [x6]
   12cb0:	b	12b90 <mpfr_sub1sp@@Base+0x360>
   12cb4:	cmp	x20, #0x7f
   12cb8:	b.hi	12d4c <mpfr_sub1sp@@Base+0x51c>  // b.pmore
   12cbc:	cmp	x20, #0x40
   12cc0:	ldp	x2, x9, [x10]
   12cc4:	b.eq	12cdc <mpfr_sub1sp@@Base+0x4ac>  // b.none
   12cc8:	sub	w0, w0, w20
   12ccc:	cmp	x2, #0x0
   12cd0:	cset	x2, ne  // ne = any
   12cd4:	lsl	x0, x9, x0
   12cd8:	orr	x2, x0, x2
   12cdc:	sub	w20, w20, #0x40
   12ce0:	cmp	x2, #0x0
   12ce4:	cset	w0, ne  // ne = any
   12ce8:	neg	x2, x2
   12cec:	lsr	x20, x9, x20
   12cf0:	cinc	x9, x20, ne  // ne = any
   12cf4:	subs	x10, x1, x9
   12cf8:	sbc	x20, x3, xzr
   12cfc:	cmp	x9, #0x0
   12d00:	ccmp	w0, #0x0, #0x4, eq  // eq = none
   12d04:	cset	x3, ne  // ne = any
   12d08:	subs	x20, x20, x3
   12d0c:	b.mi	12d20 <mpfr_sub1sp@@Base+0x4f0>  // b.first
   12d10:	sub	x19, x19, #0x1
   12d14:	extr	x20, x20, x10, #63
   12d18:	extr	x10, x10, x2, #63
   12d1c:	lsl	x2, x2, #1
   12d20:	sub	w0, w4, #0x1
   12d24:	mov	x3, #0x1                   	// #1
   12d28:	neg	x8, x8
   12d2c:	lsl	x0, x3, x0
   12d30:	and	x3, x0, x10
   12d34:	eor	x0, x11, x0
   12d38:	and	x0, x0, x10
   12d3c:	and	x10, x8, x10
   12d40:	orr	x2, x0, x2
   12d44:	stp	x10, x20, [x6]
   12d48:	b	12b90 <mpfr_sub1sp@@Base+0x360>
   12d4c:	cmp	x1, x8
   12d50:	sbc	x3, x3, xzr
   12d54:	tbnz	x3, #63, 12da4 <mpfr_sub1sp@@Base+0x574>
   12d58:	cmp	x20, #0x80
   12d5c:	ccmp	x4, #0x1, #0x0, ls  // ls = plast
   12d60:	b.gt	12d80 <mpfr_sub1sp@@Base+0x550>
   12d64:	ldr	x1, [x10, #8]
   12d68:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   12d6c:	cmp	x1, x0
   12d70:	b.ne	12d9c <mpfr_sub1sp@@Base+0x56c>  // b.any
   12d74:	ldr	x0, [x10]
   12d78:	cmp	x0, #0x0
   12d7c:	cset	w2, eq  // eq = none
   12d80:	mov	x0, #0xffffffffffffffff    	// #-1
   12d84:	sxtw	x3, w2
   12d88:	neg	x8, x8
   12d8c:	add	x19, x19, x0
   12d90:	mov	x2, #0x1                   	// #1
   12d94:	stp	x8, x0, [x6]
   12d98:	b	12b90 <mpfr_sub1sp@@Base+0x360>
   12d9c:	mov	w2, #0x0                   	// #0
   12da0:	b	12d80 <mpfr_sub1sp@@Base+0x550>
   12da4:	sub	x8, x1, x8
   12da8:	stp	x8, x3, [x6]
   12dac:	mov	x3, x2
   12db0:	b	12b90 <mpfr_sub1sp@@Base+0x360>
   12db4:	mov	x1, x3
   12db8:	mov	x3, x10
   12dbc:	mov	x10, x1
   12dc0:	mov	x1, x19
   12dc4:	neg	w0, w0
   12dc8:	mov	x19, x20
   12dcc:	mov	x20, x1
   12dd0:	b	12bec <mpfr_sub1sp@@Base+0x3bc>
   12dd4:	str	x19, [x26, #16]
   12dd8:	orr	x0, x3, x2
   12ddc:	cbz	x0, 12a48 <mpfr_sub1sp@@Base+0x218>
   12de0:	cmp	w21, #0x5
   12de4:	b.eq	12a48 <mpfr_sub1sp@@Base+0x218>  // b.none
   12de8:	ldr	w1, [x26, #8]
   12dec:	cbnz	w21, 12e34 <mpfr_sub1sp@@Base+0x604>
   12df0:	cbz	x3, 12e08 <mpfr_sub1sp@@Base+0x5d8>
   12df4:	ldr	x0, [x6]
   12df8:	lsr	x0, x0, x4
   12dfc:	and	x0, x0, #0x1
   12e00:	orr	x2, x0, x2
   12e04:	cbnz	x2, 12e48 <mpfr_sub1sp@@Base+0x618>
   12e08:	cbz	w1, 12a48 <mpfr_sub1sp@@Base+0x218>
   12e0c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   12e10:	ldr	x2, [x0, #2592]
   12e14:	add	x0, x0, #0xa20
   12e18:	blr	x2
   12e1c:	add	x0, x7, x0
   12e20:	ldr	w2, [x0]
   12e24:	neg	w1, w1
   12e28:	orr	w2, w2, #0x8
   12e2c:	str	w2, [x0]
   12e30:	b	131c0 <mpfr_sub1sp@@Base+0x990>
   12e34:	cmp	w21, #0x1
   12e38:	b.eq	12e08 <mpfr_sub1sp@@Base+0x5d8>  // b.none
   12e3c:	add	w21, w21, w1, lsr #31
   12e40:	cmp	w21, #0x3
   12e44:	b.eq	12e08 <mpfr_sub1sp@@Base+0x5d8>  // b.none
   12e48:	mov	x0, #0x1                   	// #1
   12e4c:	lsl	x4, x0, x4
   12e50:	ldr	x0, [x6]
   12e54:	add	x4, x4, x0
   12e58:	ldr	x0, [x6, #8]
   12e5c:	cmp	x4, #0x0
   12e60:	cinc	x0, x0, eq  // eq = none
   12e64:	stp	x4, x0, [x6]
   12e68:	cbnz	x0, 12e7c <mpfr_sub1sp@@Base+0x64c>
   12e6c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   12e70:	str	x0, [x6, #8]
   12e74:	add	x19, x19, #0x1
   12e78:	str	x19, [x26, #16]
   12e7c:	cbz	w1, 131c0 <mpfr_sub1sp@@Base+0x990>
   12e80:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   12e84:	ldr	x2, [x0, #2592]
   12e88:	add	x0, x0, #0xa20
   12e8c:	blr	x2
   12e90:	add	x0, x7, x0
   12e94:	ldr	w2, [x0]
   12e98:	orr	w2, w2, #0x8
   12e9c:	str	w2, [x0]
   12ea0:	b	131c0 <mpfr_sub1sp@@Base+0x990>
   12ea4:	cmp	x24, #0x40
   12ea8:	b.ne	13140 <mpfr_sub1sp@@Base+0x910>  // b.any
   12eac:	cmp	x19, x20
   12eb0:	ldr	x1, [x1, #24]
   12eb4:	ldr	x6, [x26, #24]
   12eb8:	ldr	x0, [x2, #24]
   12ebc:	b.ne	12f3c <mpfr_sub1sp@@Base+0x70c>  // b.any
   12ec0:	ldr	x2, [x0]
   12ec4:	ldr	x1, [x1]
   12ec8:	subs	x0, x1, x2
   12ecc:	cmp	x1, x2
   12ed0:	cset	x4, cc  // cc = lo, ul, last
   12ed4:	cbz	x0, 128a4 <mpfr_sub1sp@@Base+0x74>
   12ed8:	ldr	w3, [x8, #8]
   12edc:	cbz	x4, 12ee8 <mpfr_sub1sp@@Base+0x6b8>
   12ee0:	neg	w3, w3
   12ee4:	sub	x0, x2, x1
   12ee8:	clz	x1, x0
   12eec:	str	w3, [x26, #8]
   12ef0:	sub	x19, x19, x1
   12ef4:	mov	x2, #0x0                   	// #0
   12ef8:	lsl	x0, x0, x1
   12efc:	mov	x3, #0x0                   	// #0
   12f00:	str	x0, [x6]
   12f04:	mrs	x4, tpidr_el0
   12f08:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   12f0c:	ldr	x1, [x0, #2528]
   12f10:	add	x0, x0, #0x9e0
   12f14:	blr	x1
   12f18:	ldr	x0, [x4, x0]
   12f1c:	cmp	x0, x19
   12f20:	b.le	130dc <mpfr_sub1sp@@Base+0x8ac>
   12f24:	cbnz	w21, 132c8 <mpfr_sub1sp@@Base+0xa98>
   12f28:	sub	x0, x0, #0x1
   12f2c:	cmp	x19, x0
   12f30:	b.lt	13870 <mpfr_sub1sp@@Base+0x1040>  // b.tstop
   12f34:	ldr	x1, [x6]
   12f38:	b	12920 <mpfr_sub1sp@@Base+0xf0>
   12f3c:	ldr	w2, [x8, #8]
   12f40:	b.le	130bc <mpfr_sub1sp@@Base+0x88c>
   12f44:	ldr	x1, [x1]
   12f48:	str	w2, [x26, #8]
   12f4c:	sub	x20, x19, x20
   12f50:	cmp	x20, #0x3f
   12f54:	b.hi	12fc8 <mpfr_sub1sp@@Base+0x798>  // b.pmore
   12f58:	ldr	x3, [x0]
   12f5c:	mov	w2, #0x40                  	// #64
   12f60:	sub	w0, w2, w20
   12f64:	lsl	x0, x3, x0
   12f68:	negs	x0, x0
   12f6c:	lsr	x20, x3, x20
   12f70:	cset	x3, ne  // ne = any
   12f74:	sub	x1, x1, x20
   12f78:	subs	x3, x1, x3
   12f7c:	b.ne	12f94 <mpfr_sub1sp@@Base+0x764>  // b.any
   12f80:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   12f84:	sub	x19, x19, #0x40
   12f88:	mov	x2, #0x0                   	// #0
   12f8c:	str	x0, [x6]
   12f90:	b	12f04 <mpfr_sub1sp@@Base+0x6d4>
   12f94:	clz	x4, x3
   12f98:	mov	x7, x4
   12f9c:	cbz	x4, 12fb0 <mpfr_sub1sp@@Base+0x780>
   12fa0:	sub	w2, w2, w4
   12fa4:	lsl	x1, x3, x4
   12fa8:	lsr	x2, x0, x2
   12fac:	orr	x3, x2, x1
   12fb0:	lsl	x0, x0, x4
   12fb4:	sub	x19, x19, x7
   12fb8:	and	x2, x0, #0x7fffffffffffffff
   12fbc:	str	x3, [x6]
   12fc0:	and	x3, x0, #0x8000000000000000
   12fc4:	b	12f04 <mpfr_sub1sp@@Base+0x6d4>
   12fc8:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
   12fcc:	cmp	x1, x3
   12fd0:	b.ls	13024 <mpfr_sub1sp@@Base+0x7f4>  // b.plast
   12fd4:	cmp	x20, #0x40
   12fd8:	b.ne	13014 <mpfr_sub1sp@@Base+0x7e4>  // b.any
   12fdc:	ldr	x2, [x0]
   12fe0:	cmp	x2, x3
   12fe4:	cset	w2, eq  // eq = none
   12fe8:	sxtw	x3, w2
   12fec:	cmp	x20, #0x40
   12ff0:	b.ne	1301c <mpfr_sub1sp@@Base+0x7ec>  // b.any
   12ff4:	ldr	x2, [x0]
   12ff8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   12ffc:	cmp	x2, x0
   13000:	cset	w2, ne  // ne = any
   13004:	sub	x1, x1, #0x1
   13008:	sxtw	x2, w2
   1300c:	str	x1, [x6]
   13010:	b	12f04 <mpfr_sub1sp@@Base+0x6d4>
   13014:	mov	w2, #0x1                   	// #1
   13018:	b	12fe8 <mpfr_sub1sp@@Base+0x7b8>
   1301c:	mov	w2, #0x1                   	// #1
   13020:	b	13004 <mpfr_sub1sp@@Base+0x7d4>
   13024:	sub	x19, x19, #0x1
   13028:	cmp	x20, #0x40
   1302c:	b.ne	1305c <mpfr_sub1sp@@Base+0x82c>  // b.any
   13030:	ldr	x2, [x0]
   13034:	cmp	x2, x3
   13038:	b.ls	1309c <mpfr_sub1sp@@Base+0x86c>  // b.plast
   1303c:	neg	x2, x2
   13040:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   13044:	cmp	x2, x0
   13048:	mov	x0, #0xfffffffffffffffe    	// #-2
   1304c:	cset	x3, hi  // hi = pmore
   13050:	lsl	x2, x2, #2
   13054:	str	x0, [x6]
   13058:	b	12f04 <mpfr_sub1sp@@Base+0x6d4>
   1305c:	cmp	x20, #0x41
   13060:	b.ne	130a4 <mpfr_sub1sp@@Base+0x874>  // b.any
   13064:	ldr	x1, [x0]
   13068:	cmp	x1, x3
   1306c:	cset	w1, eq  // eq = none
   13070:	sxtw	x3, w1
   13074:	cmp	x20, #0x41
   13078:	b.hi	130ac <mpfr_sub1sp@@Base+0x87c>  // b.pmore
   1307c:	b.ne	130b4 <mpfr_sub1sp@@Base+0x884>  // b.any
   13080:	ldr	x1, [x0]
   13084:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   13088:	cmp	x1, x0
   1308c:	cset	w2, hi  // hi = pmore
   13090:	sxtw	x2, w2
   13094:	mov	x0, #0xffffffffffffffff    	// #-1
   13098:	b	13054 <mpfr_sub1sp@@Base+0x824>
   1309c:	mov	w1, #0x0                   	// #0
   130a0:	b	13070 <mpfr_sub1sp@@Base+0x840>
   130a4:	mov	w1, #0x1                   	// #1
   130a8:	b	13070 <mpfr_sub1sp@@Base+0x840>
   130ac:	mov	w2, #0x1                   	// #1
   130b0:	b	13090 <mpfr_sub1sp@@Base+0x860>
   130b4:	mov	w2, #0x0                   	// #0
   130b8:	b	13090 <mpfr_sub1sp@@Base+0x860>
   130bc:	mov	x3, x1
   130c0:	mov	x1, x0
   130c4:	mov	x0, x3
   130c8:	mov	x3, x19
   130cc:	neg	w2, w2
   130d0:	mov	x19, x20
   130d4:	mov	x20, x3
   130d8:	b	12f44 <mpfr_sub1sp@@Base+0x714>
   130dc:	str	x19, [x26, #16]
   130e0:	orr	x0, x3, x2
   130e4:	cbz	x0, 12a48 <mpfr_sub1sp@@Base+0x218>
   130e8:	cmp	w21, #0x5
   130ec:	b.eq	12a48 <mpfr_sub1sp@@Base+0x218>  // b.none
   130f0:	ldr	w1, [x26, #8]
   130f4:	cbnz	w21, 13128 <mpfr_sub1sp@@Base+0x8f8>
   130f8:	cbz	x3, 12a78 <mpfr_sub1sp@@Base+0x248>
   130fc:	ldr	x0, [x6]
   13100:	and	x0, x0, #0x1
   13104:	orr	x2, x0, x2
   13108:	cbz	x2, 12a78 <mpfr_sub1sp@@Base+0x248>
   1310c:	ldr	x0, [x6]
   13110:	add	x0, x0, #0x1
   13114:	str	x0, [x6]
   13118:	cbnz	x0, 12ad0 <mpfr_sub1sp@@Base+0x2a0>
   1311c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   13120:	str	x0, [x6]
   13124:	b	12ac8 <mpfr_sub1sp@@Base+0x298>
   13128:	cmp	w21, #0x1
   1312c:	b.eq	12a78 <mpfr_sub1sp@@Base+0x248>  // b.none
   13130:	add	w21, w21, w1, lsr #31
   13134:	cmp	w21, #0x3
   13138:	b.ne	1310c <mpfr_sub1sp@@Base+0x8dc>  // b.any
   1313c:	b	12a78 <mpfr_sub1sp@@Base+0x248>
   13140:	sub	x0, x24, #0x81
   13144:	cmp	x0, #0x3e
   13148:	b.hi	13708 <mpfr_sub1sp@@Base+0xed8>  // b.pmore
   1314c:	cmp	x19, x20
   13150:	ldr	x1, [x1, #24]
   13154:	ldr	x6, [x26, #24]
   13158:	ldr	x4, [x2, #24]
   1315c:	b.ne	132fc <mpfr_sub1sp@@Base+0xacc>  // b.any
   13160:	ldp	x11, x10, [x1]
   13164:	ldp	x12, x3, [x4]
   13168:	ldr	x15, [x1, #16]
   1316c:	ldr	x4, [x4, #16]
   13170:	subs	x14, x11, x12
   13174:	sub	x13, x10, x3
   13178:	cset	w0, cc  // cc = lo, ul, last
   1317c:	cset	x7, cc  // cc = lo, ul, last
   13180:	cmp	x10, x3
   13184:	sub	x1, x15, x4
   13188:	csel	w0, w0, wzr, eq  // eq = none
   1318c:	sub	x13, x13, x7
   13190:	csinc	w0, w0, wzr, cs  // cs = hs, nlast
   13194:	sxtw	x2, w0
   13198:	sub	x0, x1, w0, sxtw
   1319c:	orr	x1, x14, x13
   131a0:	orr	x1, x1, x0
   131a4:	cbnz	x1, 131e4 <mpfr_sub1sp@@Base+0x9b4>
   131a8:	cmp	w21, #0x3
   131ac:	mov	w0, #0x1                   	// #1
   131b0:	cneg	w0, w0, eq  // eq = none
   131b4:	str	w0, [x26, #8]
   131b8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   131bc:	str	x0, [x26, #16]
   131c0:	mov	sp, x29
   131c4:	mov	w0, w1
   131c8:	ldp	x19, x20, [sp, #16]
   131cc:	ldp	x21, x22, [sp, #32]
   131d0:	ldp	x23, x24, [sp, #48]
   131d4:	ldp	x25, x26, [sp, #64]
   131d8:	ldp	x27, x28, [sp, #80]
   131dc:	ldp	x29, x30, [sp], #176
   131e0:	ret
   131e4:	ldr	w1, [x8, #8]
   131e8:	cmp	x15, x0
   131ec:	b.hi	13220 <mpfr_sub1sp@@Base+0x9f0>  // b.pmore
   131f0:	subs	x14, x12, x11
   131f4:	sub	x3, x3, x10
   131f8:	cset	x0, ne  // ne = any
   131fc:	neg	w1, w1
   13200:	sub	x7, x7, x0
   13204:	add	x13, x7, x3
   13208:	orr	x0, x14, x13
   1320c:	cmp	x0, #0x0
   13210:	cset	x0, ne  // ne = any
   13214:	sub	x2, x2, x0
   13218:	sub	x0, x4, x15
   1321c:	add	x0, x2, x0
   13220:	str	w1, [x26, #8]
   13224:	cbnz	x0, 13240 <mpfr_sub1sp@@Base+0xa10>
   13228:	cbz	x13, 132e0 <mpfr_sub1sp@@Base+0xab0>
   1322c:	mov	x1, x14
   13230:	mov	x0, x13
   13234:	sub	x19, x19, #0x40
   13238:	mov	x13, x1
   1323c:	mov	x14, #0x0                   	// #0
   13240:	clz	x1, x0
   13244:	cbz	x1, 132f0 <mpfr_sub1sp@@Base+0xac0>
   13248:	mov	w2, #0x40                  	// #64
   1324c:	sub	w2, w2, w1
   13250:	sub	x19, x19, x1
   13254:	lsl	x0, x0, x1
   13258:	lsr	x3, x13, x2
   1325c:	orr	x0, x0, x3
   13260:	lsr	x2, x14, x2
   13264:	str	x0, [x6, #16]
   13268:	lsl	x3, x13, x1
   1326c:	orr	x2, x3, x2
   13270:	lsl	x14, x14, x1
   13274:	stp	x14, x2, [x6]
   13278:	mov	x2, #0x0                   	// #0
   1327c:	mov	x12, #0x0                   	// #0
   13280:	mrs	x4, tpidr_el0
   13284:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   13288:	ldr	x1, [x0, #2528]
   1328c:	add	x0, x0, #0x9e0
   13290:	blr	x1
   13294:	ldr	x0, [x4, x0]
   13298:	cmp	x0, x19
   1329c:	b.le	13678 <mpfr_sub1sp@@Base+0xe48>
   132a0:	cbnz	w21, 132c8 <mpfr_sub1sp@@Base+0xa98>
   132a4:	sub	x0, x0, #0x1
   132a8:	cmp	x19, x0
   132ac:	b.lt	13870 <mpfr_sub1sp@@Base+0x1040>  // b.tstop
   132b0:	ldr	x1, [x6, #16]
   132b4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   132b8:	cmp	x1, x0
   132bc:	b.ne	132c8 <mpfr_sub1sp@@Base+0xa98>  // b.any
   132c0:	ldr	x0, [x6, #8]
   132c4:	cbz	x0, 12bd0 <mpfr_sub1sp@@Base+0x3a0>
   132c8:	ldr	w2, [x26, #8]
   132cc:	mov	w1, w21
   132d0:	mov	x0, x26
   132d4:	bl	c450 <mpfr_underflow@plt>
   132d8:	mov	w1, w0
   132dc:	b	131c0 <mpfr_sub1sp@@Base+0x990>
   132e0:	mov	x0, x14
   132e4:	sub	x19, x19, #0x80
   132e8:	mov	x14, #0x0                   	// #0
   132ec:	b	13240 <mpfr_sub1sp@@Base+0xa10>
   132f0:	stp	x14, x13, [x6]
   132f4:	str	x0, [x6, #16]
   132f8:	b	13278 <mpfr_sub1sp@@Base+0xa48>
   132fc:	ldr	w0, [x8, #8]
   13300:	b.le	13658 <mpfr_sub1sp@@Base+0xe28>
   13304:	ldp	x12, x3, [x1]
   13308:	sub	x20, x19, x20
   1330c:	ldr	x1, [x1, #16]
   13310:	str	w0, [x26, #8]
   13314:	mov	x0, #0xc0                  	// #192
   13318:	sub	x9, x0, x24
   1331c:	mov	x2, #0x1                   	// #1
   13320:	cmp	x20, #0x3f
   13324:	lsl	x7, x2, x9
   13328:	sub	x11, x7, #0x1
   1332c:	b.hi	13438 <mpfr_sub1sp@@Base+0xc08>  // b.pmore
   13330:	ldp	x8, x14, [x4]
   13334:	mov	w0, #0x40                  	// #64
   13338:	sub	w0, w0, w20
   1333c:	ldr	x4, [x4, #16]
   13340:	lsl	x13, x14, x0
   13344:	lsl	x10, x8, x0
   13348:	lsr	x8, x8, x20
   1334c:	orr	x13, x13, x8
   13350:	subs	x15, x12, x13
   13354:	lsr	x14, x14, x20
   13358:	cmp	x12, x13
   1335c:	lsl	x0, x4, x0
   13360:	orr	x0, x0, x14
   13364:	cset	w12, cc  // cc = lo, ul, last
   13368:	sbc	x0, x3, x0
   1336c:	lsr	x20, x4, x20
   13370:	cmp	x3, x0
   13374:	sub	x20, x1, x20
   13378:	csel	w12, w12, wzr, eq  // eq = none
   1337c:	mov	x8, x15
   13380:	csel	w2, w12, w2, cs  // cs = hs, nlast
   13384:	sub	x20, x20, w2, sxtw
   13388:	cbz	x10, 141e0 <mpfr_sub1sp@@Base+0x19b0>
   1338c:	orr	x1, x15, x0
   13390:	sub	x8, x15, #0x1
   13394:	cmp	x1, #0x0
   13398:	neg	x10, x10
   1339c:	cset	x1, eq  // eq = none
   133a0:	cmp	x15, #0x0
   133a4:	sub	x20, x20, x1
   133a8:	cset	x1, eq  // eq = none
   133ac:	sub	x0, x0, x1
   133b0:	clz	x1, x20
   133b4:	cbz	x1, 13430 <mpfr_sub1sp@@Base+0xc00>
   133b8:	mov	w2, #0x40                  	// #64
   133bc:	sub	w2, w2, w1
   133c0:	lsl	x20, x20, x1
   133c4:	sub	x19, x19, x1
   133c8:	lsr	x3, x0, x2
   133cc:	orr	x20, x20, x3
   133d0:	lsr	x3, x8, x2
   133d4:	lsr	x2, x10, x2
   133d8:	lsl	x8, x8, x1
   133dc:	orr	x8, x2, x8
   133e0:	lsl	x0, x0, x1
   133e4:	orr	x0, x0, x3
   133e8:	lsl	x10, x10, x1
   133ec:	stp	x0, x20, [x6, #8]
   133f0:	sub	w3, w9, #0x1
   133f4:	mov	x4, #0x1                   	// #1
   133f8:	lsl	x3, x4, x3
   133fc:	and	x12, x3, x8
   13400:	eor	x3, x11, x3
   13404:	and	x3, x3, x8
   13408:	orr	x2, x3, x10
   1340c:	neg	x7, x7
   13410:	and	x8, x7, x8
   13414:	str	x8, [x6]
   13418:	b	13280 <mpfr_sub1sp@@Base+0xa50>
   1341c:	sub	x19, x19, #0x80
   13420:	mov	x10, x0
   13424:	mov	x20, x15
   13428:	mov	x8, #0x0                   	// #0
   1342c:	b	133b0 <mpfr_sub1sp@@Base+0xb80>
   13430:	stp	x0, x20, [x6, #8]
   13434:	b	133f0 <mpfr_sub1sp@@Base+0xbc0>
   13438:	cmp	x20, #0x7f
   1343c:	b.hi	13518 <mpfr_sub1sp@@Base+0xce8>  // b.pmore
   13440:	sub	w8, w20, #0x40
   13444:	cmp	x20, #0x40
   13448:	ldp	x13, x0, [x4]
   1344c:	ldr	x10, [x4, #16]
   13450:	b.eq	13478 <mpfr_sub1sp@@Base+0xc48>  // b.none
   13454:	cmp	x13, #0x0
   13458:	mov	w4, #0x80                  	// #128
   1345c:	sub	w20, w4, w20
   13460:	cset	x2, ne  // ne = any
   13464:	lsl	x4, x0, x20
   13468:	orr	x13, x4, x2
   1346c:	lsl	x20, x10, x20
   13470:	lsr	x0, x0, x8
   13474:	orr	x0, x20, x0
   13478:	subs	x2, x12, x0
   1347c:	lsr	x8, x10, x8
   13480:	cmp	x12, x0
   13484:	mov	x14, x2
   13488:	sbc	x8, x3, x8
   1348c:	cset	w20, cc  // cc = lo, ul, last
   13490:	cmp	x3, x8
   13494:	csel	w20, w20, wzr, eq  // eq = none
   13498:	csinc	w20, w20, wzr, cs  // cs = hs, nlast
   1349c:	sub	x20, x1, w20, sxtw
   134a0:	cbz	x13, 134c8 <mpfr_sub1sp@@Base+0xc98>
   134a4:	orr	x0, x2, x8
   134a8:	sub	x14, x2, #0x1
   134ac:	cmp	x0, #0x0
   134b0:	neg	x13, x13
   134b4:	cset	x0, eq  // eq = none
   134b8:	cmp	x2, #0x0
   134bc:	sub	x20, x20, x0
   134c0:	cset	x0, eq  // eq = none
   134c4:	sub	x8, x8, x0
   134c8:	tbnz	x20, #63, 13510 <mpfr_sub1sp@@Base+0xce0>
   134cc:	sub	x19, x19, #0x1
   134d0:	extr	x20, x20, x8, #63
   134d4:	extr	x8, x8, x14, #63
   134d8:	stp	x8, x20, [x6, #8]
   134dc:	extr	x14, x14, x13, #63
   134e0:	lsl	x13, x13, #1
   134e4:	sub	w1, w9, #0x1
   134e8:	mov	x4, #0x1                   	// #1
   134ec:	neg	x7, x7
   134f0:	lsl	x1, x4, x1
   134f4:	and	x12, x1, x14
   134f8:	eor	x1, x11, x1
   134fc:	and	x7, x7, x14
   13500:	and	x1, x1, x14
   13504:	str	x7, [x6]
   13508:	orr	x2, x1, x13
   1350c:	b	13280 <mpfr_sub1sp@@Base+0xa50>
   13510:	stp	x8, x20, [x6, #8]
   13514:	b	134e4 <mpfr_sub1sp@@Base+0xcb4>
   13518:	cmp	x20, #0xbf
   1351c:	b.hi	135d4 <mpfr_sub1sp@@Base+0xda4>  // b.pmore
   13520:	cmp	x20, #0x80
   13524:	ldp	x10, x8, [x4, #8]
   13528:	ldr	x4, [x4]
   1352c:	b.ne	135b0 <mpfr_sub1sp@@Base+0xd80>  // b.any
   13530:	cmp	x4, #0x0
   13534:	cset	x2, ne  // ne = any
   13538:	orr	x2, x2, x10
   1353c:	sub	w20, w20, #0x80
   13540:	negs	x2, x2
   13544:	cset	x4, ne  // ne = any
   13548:	cset	w0, ne  // ne = any
   1354c:	lsr	x8, x8, x20
   13550:	sub	x8, x12, x8
   13554:	sub	x8, x8, x4
   13558:	cmp	x12, x8
   1355c:	csel	w0, w0, wzr, eq  // eq = none
   13560:	csinc	w0, w0, wzr, cs  // cs = hs, nlast
   13564:	sxtw	x0, w0
   13568:	subs	x10, x3, x0
   1356c:	cmp	x3, x0
   13570:	sbc	x20, x1, xzr
   13574:	tbnz	x20, #63, 135cc <mpfr_sub1sp@@Base+0xd9c>
   13578:	sub	x19, x19, #0x1
   1357c:	extr	x20, x20, x10, #63
   13580:	extr	x10, x10, x8, #63
   13584:	stp	x10, x20, [x6, #8]
   13588:	extr	x8, x8, x2, #63
   1358c:	lsl	x2, x2, #1
   13590:	sub	w0, w9, #0x1
   13594:	mov	x4, #0x1                   	// #1
   13598:	lsl	x0, x4, x0
   1359c:	and	x12, x0, x8
   135a0:	eor	x0, x11, x0
   135a4:	and	x0, x0, x8
   135a8:	orr	x2, x0, x2
   135ac:	b	1340c <mpfr_sub1sp@@Base+0xbdc>
   135b0:	orr	x4, x4, x10
   135b4:	sub	w0, w0, w20
   135b8:	cmp	x4, #0x0
   135bc:	cset	x2, ne  // ne = any
   135c0:	lsl	x0, x8, x0
   135c4:	orr	x2, x2, x0
   135c8:	b	1353c <mpfr_sub1sp@@Base+0xd0c>
   135cc:	stp	x10, x20, [x6, #8]
   135d0:	b	13590 <mpfr_sub1sp@@Base+0xd60>
   135d4:	cmp	x12, x7
   135d8:	cset	x0, cc  // cc = lo, ul, last
   135dc:	subs	x8, x3, x0
   135e0:	cmp	x3, x0
   135e4:	sbc	x1, x1, xzr
   135e8:	tbnz	x1, #63, 13644 <mpfr_sub1sp@@Base+0xe14>
   135ec:	cmp	x20, #0xc0
   135f0:	ccmp	x9, #0x1, #0x0, ls  // ls = plast
   135f4:	b.gt	1361c <mpfr_sub1sp@@Base+0xdec>
   135f8:	ldr	x1, [x4, #16]
   135fc:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   13600:	cmp	x1, x0
   13604:	b.ne	1363c <mpfr_sub1sp@@Base+0xe0c>  // b.any
   13608:	ldr	x0, [x4, #8]
   1360c:	cbnz	x0, 1363c <mpfr_sub1sp@@Base+0xe0c>
   13610:	ldr	x0, [x4]
   13614:	cmp	x0, #0x0
   13618:	cset	w2, eq  // eq = none
   1361c:	mov	x0, #0xffffffffffffffff    	// #-1
   13620:	sxtw	x12, w2
   13624:	neg	x7, x7
   13628:	add	x19, x19, x0
   1362c:	mov	x2, #0x1                   	// #1
   13630:	stp	x7, x0, [x6]
   13634:	str	x0, [x6, #16]
   13638:	b	13280 <mpfr_sub1sp@@Base+0xa50>
   1363c:	mov	w2, #0x0                   	// #0
   13640:	b	1361c <mpfr_sub1sp@@Base+0xdec>
   13644:	sub	x7, x12, x7
   13648:	mov	x12, x2
   1364c:	stp	x7, x8, [x6]
   13650:	str	x1, [x6, #16]
   13654:	b	13280 <mpfr_sub1sp@@Base+0xa50>
   13658:	mov	x2, x1
   1365c:	mov	x1, x4
   13660:	mov	x4, x2
   13664:	mov	x2, x19
   13668:	neg	w0, w0
   1366c:	mov	x19, x20
   13670:	mov	x20, x2
   13674:	b	13304 <mpfr_sub1sp@@Base+0xad4>
   13678:	str	x19, [x26, #16]
   1367c:	orr	x0, x12, x2
   13680:	cbz	x0, 12a48 <mpfr_sub1sp@@Base+0x218>
   13684:	cmp	w21, #0x5
   13688:	b.eq	12a48 <mpfr_sub1sp@@Base+0x218>  // b.none
   1368c:	ldr	w1, [x26, #8]
   13690:	cbnz	w21, 136f0 <mpfr_sub1sp@@Base+0xec0>
   13694:	cbz	x12, 12a78 <mpfr_sub1sp@@Base+0x248>
   13698:	ldr	x0, [x6]
   1369c:	lsr	x0, x0, x9
   136a0:	and	x0, x0, #0x1
   136a4:	orr	x2, x0, x2
   136a8:	cbz	x2, 12a78 <mpfr_sub1sp@@Base+0x248>
   136ac:	mov	x0, #0x1                   	// #1
   136b0:	lsl	x9, x0, x9
   136b4:	ldr	x0, [x6]
   136b8:	add	x9, x9, x0
   136bc:	ldr	x0, [x6, #8]
   136c0:	cmp	x9, #0x0
   136c4:	cinc	x0, x0, eq  // eq = none
   136c8:	stp	x9, x0, [x6]
   136cc:	orr	x9, x9, x0
   136d0:	ldr	x0, [x6, #16]
   136d4:	cmp	x9, #0x0
   136d8:	cinc	x0, x0, eq  // eq = none
   136dc:	str	x0, [x6, #16]
   136e0:	cbnz	x0, 12ad0 <mpfr_sub1sp@@Base+0x2a0>
   136e4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   136e8:	str	x0, [x6, #16]
   136ec:	b	12ac8 <mpfr_sub1sp@@Base+0x298>
   136f0:	cmp	w21, #0x1
   136f4:	b.eq	12a78 <mpfr_sub1sp@@Base+0x248>  // b.none
   136f8:	add	w21, w21, w1, lsr #31
   136fc:	cmp	w21, #0x3
   13700:	b.ne	136ac <mpfr_sub1sp@@Base+0xe7c>  // b.any
   13704:	b	12a78 <mpfr_sub1sp@@Base+0x248>
   13708:	sub	x28, x24, #0x1
   1370c:	str	xzr, [x29, #168]
   13710:	cmp	x19, x20
   13714:	asr	x23, x28, #6
   13718:	add	x22, x23, #0x1
   1371c:	b.ne	1374c <mpfr_sub1sp@@Base+0xf1c>  // b.any
   13720:	ldr	x1, [x1, #24]
   13724:	mov	x0, x23
   13728:	ldr	x2, [x2, #24]
   1372c:	ldr	x4, [x1, x0, lsl #3]
   13730:	ldr	x3, [x2, x0, lsl #3]
   13734:	cmp	x4, x3
   13738:	b.ne	141fc <mpfr_sub1sp@@Base+0x19cc>  // b.any
   1373c:	sub	x0, x0, #0x1
   13740:	cmn	x0, #0x1
   13744:	b.eq	128a4 <mpfr_sub1sp@@Base+0x74>  // b.none
   13748:	b	1372c <mpfr_sub1sp@@Base+0xefc>
   1374c:	b.ge	14200 <mpfr_sub1sp@@Base+0x19d0>  // b.tcont
   13750:	ldr	w0, [x8, #8]
   13754:	neg	w0, w0
   13758:	str	w0, [x26, #8]
   1375c:	sub	x3, x20, x19
   13760:	cmp	x3, #0x1
   13764:	b.hi	13a5c <mpfr_sub1sp@@Base+0x122c>  // b.pmore
   13768:	ldr	x25, [x8, #24]
   1376c:	ldr	x4, [x27, #24]
   13770:	cbnz	x3, 13888 <mpfr_sub1sp@@Base+0x1058>
   13774:	ldr	x24, [x26, #24]
   13778:	mov	x3, x22
   1377c:	mov	x2, x25
   13780:	mov	x1, x4
   13784:	mov	x0, x24
   13788:	bl	bee0 <__gmpn_sub_n@plt>
   1378c:	add	x0, x24, x22, lsl #3
   13790:	ldur	x0, [x0, #-8]
   13794:	cbz	x0, 1381c <mpfr_sub1sp@@Base+0xfec>
   13798:	clz	x3, x0
   1379c:	mov	x19, x3
   137a0:	cbz	x3, 137b8 <mpfr_sub1sp@@Base+0xf88>
   137a4:	sub	x20, x20, x19
   137a8:	mov	x2, x22
   137ac:	mov	x1, x24
   137b0:	mov	x0, x24
   137b4:	bl	bd40 <__gmpn_lshift@plt>
   137b8:	mrs	x19, tpidr_el0
   137bc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   137c0:	ldr	x1, [x0, #2528]
   137c4:	add	x0, x0, #0x9e0
   137c8:	blr	x1
   137cc:	ldr	x0, [x19, x0]
   137d0:	cmp	x0, x20
   137d4:	ldr	x0, [x29, #168]
   137d8:	b.le	13878 <mpfr_sub1sp@@Base+0x1048>
   137dc:	cbz	x0, 137e4 <mpfr_sub1sp@@Base+0xfb4>
   137e0:	bl	c4a0 <mpfr_tmp_free@plt>
   137e4:	cbnz	w21, 132c8 <mpfr_sub1sp@@Base+0xa98>
   137e8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   137ec:	ldr	x1, [x0, #2528]
   137f0:	add	x0, x0, #0x9e0
   137f4:	blr	x1
   137f8:	ldr	x0, [x19, x0]
   137fc:	sub	x0, x0, #0x1
   13800:	cmp	x0, x20
   13804:	b.gt	13870 <mpfr_sub1sp@@Base+0x1040>
   13808:	mov	x0, x26
   1380c:	bl	bf80 <mpfr_powerof2_raw@plt>
   13810:	cmp	w0, #0x0
   13814:	cset	w21, ne  // ne = any
   13818:	b	132c8 <mpfr_sub1sp@@Base+0xa98>
   1381c:	mov	x2, x23
   13820:	sub	x23, x23, #0x1
   13824:	ldr	x0, [x24, x23, lsl #3]
   13828:	cbz	x0, 1381c <mpfr_sub1sp@@Base+0xfec>
   1382c:	sub	x22, x22, x2
   13830:	clz	x3, x0
   13834:	mov	x19, x3
   13838:	mov	x1, x24
   1383c:	lsl	x23, x22, #3
   13840:	add	x0, x24, x22, lsl #3
   13844:	cbz	x3, 13868 <mpfr_sub1sp@@Base+0x1038>
   13848:	bl	bd40 <__gmpn_lshift@plt>
   1384c:	add	x22, x19, x22, lsl #6
   13850:	mov	x2, x23
   13854:	mov	x0, x24
   13858:	mov	w1, #0x0                   	// #0
   1385c:	sub	x20, x20, x22
   13860:	bl	c1a0 <memset@plt>
   13864:	b	137b8 <mpfr_sub1sp@@Base+0xf88>
   13868:	bl	bb60 <__gmpn_copyd@plt>
   1386c:	b	1384c <mpfr_sub1sp@@Base+0x101c>
   13870:	mov	w21, #0x1                   	// #1
   13874:	b	132c8 <mpfr_sub1sp@@Base+0xa98>
   13878:	str	x20, [x26, #16]
   1387c:	cbz	x0, 12a48 <mpfr_sub1sp@@Base+0x218>
   13880:	bl	c4a0 <mpfr_tmp_free@plt>
   13884:	b	12a48 <mpfr_sub1sp@@Base+0x218>
   13888:	lsl	x19, x23, #3
   1388c:	ldr	x1, [x4, x19]
   13890:	ldr	x0, [x25, x19]
   13894:	sub	x0, x1, x0, lsr #1
   13898:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   1389c:	cmp	x0, x1
   138a0:	b.ls	139a4 <mpfr_sub1sp@@Base+0x1174>  // b.plast
   138a4:	neg	w7, w24
   138a8:	add	x1, x19, #0x8
   138ac:	ldr	x25, [x25]
   138b0:	and	w27, w7, #0x3f
   138b4:	mov	x24, #0x1                   	// #1
   138b8:	cmp	x1, #0x4, lsl #12
   138bc:	lsl	x24, x24, x27
   138c0:	and	x25, x24, x25
   138c4:	neg	x24, x24
   138c8:	ldr	x28, [x26, #24]
   138cc:	b.hi	1392c <mpfr_sub1sp@@Base+0x10fc>  // b.pmore
   138d0:	add	x2, x19, #0x17
   138d4:	and	x2, x2, #0xfffffffffffffff0
   138d8:	sub	sp, sp, x2
   138dc:	mov	x19, sp
   138e0:	ldr	x1, [x8, #24]
   138e4:	mov	x2, x22
   138e8:	mov	w3, #0x1                   	// #1
   138ec:	mov	x0, x19
   138f0:	str	x4, [x29, #152]
   138f4:	bl	bd60 <__gmpn_rshift@plt>
   138f8:	ldr	x0, [x19]
   138fc:	mov	x3, x22
   13900:	ldr	x4, [x29, #152]
   13904:	and	x24, x0, x24
   13908:	str	x24, [x19]
   1390c:	mov	x2, x19
   13910:	mov	x0, x28
   13914:	mov	x1, x4
   13918:	bl	bee0 <__gmpn_sub_n@plt>
   1391c:	str	x20, [x26, #16]
   13920:	cbnz	x25, 13944 <mpfr_sub1sp@@Base+0x1114>
   13924:	ldr	x0, [x29, #168]
   13928:	b	1387c <mpfr_sub1sp@@Base+0x104c>
   1392c:	add	x0, x29, #0xa8
   13930:	stp	x8, x4, [x29, #144]
   13934:	bl	be40 <mpfr_tmp_allocate@plt>
   13938:	mov	x19, x0
   1393c:	ldp	x8, x4, [x29, #144]
   13940:	b	138e0 <mpfr_sub1sp@@Base+0x10b0>
   13944:	mov	w0, w27
   13948:	str	x0, [x29, #144]
   1394c:	cmp	w21, #0x5
   13950:	b.eq	13990 <mpfr_sub1sp@@Base+0x1160>  // b.none
   13954:	cbnz	w21, 13978 <mpfr_sub1sp@@Base+0x1148>
   13958:	ldr	x7, [x28]
   1395c:	lsr	x7, x7, x27
   13960:	mvn	x7, x7
   13964:	and	x4, x7, #0x1
   13968:	tbnz	w7, #0, 14114 <mpfr_sub1sp@@Base+0x18e4>
   1396c:	mov	x19, #0xffffffffffffffff    	// #-1
   13970:	mov	x6, #0x1                   	// #1
   13974:	b	13af0 <mpfr_sub1sp@@Base+0x12c0>
   13978:	ldr	w0, [x26, #8]
   1397c:	add	w0, w21, w0, lsr #31
   13980:	cmp	w0, #0x3
   13984:	b.eq	14064 <mpfr_sub1sp@@Base+0x1834>  // b.none
   13988:	cmp	w21, #0x1
   1398c:	b.eq	14074 <mpfr_sub1sp@@Base+0x1844>  // b.none
   13990:	mov	x25, #0xffffffffffffffff    	// #-1
   13994:	mov	x19, x25
   13998:	mov	x4, #0x0                   	// #0
   1399c:	mov	x6, #0x1                   	// #1
   139a0:	b	13be8 <mpfr_sub1sp@@Base+0x13b8>
   139a4:	tbnz	x0, #63, 13a08 <mpfr_sub1sp@@Base+0x11d8>
   139a8:	add	x1, x19, #0x8
   139ac:	cmp	x1, #0x4, lsl #12
   139b0:	ldr	x24, [x26, #24]
   139b4:	b.hi	139f8 <mpfr_sub1sp@@Base+0x11c8>  // b.pmore
   139b8:	add	x2, x19, #0x17
   139bc:	and	x2, x2, #0xfffffffffffffff0
   139c0:	sub	sp, sp, x2
   139c4:	mov	x19, sp
   139c8:	ldr	x1, [x27, #24]
   139cc:	mov	x2, x22
   139d0:	mov	x0, x19
   139d4:	mov	w3, #0x1                   	// #1
   139d8:	sub	x20, x20, #0x1
   139dc:	bl	bd40 <__gmpn_lshift@plt>
   139e0:	mov	x3, x22
   139e4:	mov	x2, x25
   139e8:	mov	x1, x19
   139ec:	mov	x0, x24
   139f0:	bl	bee0 <__gmpn_sub_n@plt>
   139f4:	b	1378c <mpfr_sub1sp@@Base+0xf5c>
   139f8:	add	x0, x29, #0xa8
   139fc:	bl	be40 <mpfr_tmp_allocate@plt>
   13a00:	mov	x19, x0
   13a04:	b	139c8 <mpfr_sub1sp@@Base+0x1198>
   13a08:	mov	x1, x23
   13a0c:	ldr	x0, [x25, x1, lsl #3]
   13a10:	sub	x1, x1, #0x1
   13a14:	cmn	x1, #0x1
   13a18:	lsl	x0, x0, #63
   13a1c:	b.eq	14238 <mpfr_sub1sp@@Base+0x1a08>  // b.none
   13a20:	ldr	x3, [x25, x1, lsl #3]
   13a24:	ldr	x2, [x4, x1, lsl #3]
   13a28:	add	x0, x0, x3, lsr #1
   13a2c:	cmp	x2, x0
   13a30:	b.eq	13a0c <mpfr_sub1sp@@Base+0x11dc>  // b.none
   13a34:	b.hi	138a4 <mpfr_sub1sp@@Base+0x1074>  // b.pmore
   13a38:	b	139a8 <mpfr_sub1sp@@Base+0x1178>
   13a3c:	mov	x0, x3
   13a40:	mov	x2, x19
   13a44:	mov	w1, #0x0                   	// #0
   13a48:	bl	c1a0 <memset@plt>
   13a4c:	mov	x3, x0
   13a50:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   13a54:	str	x0, [x3, x19]
   13a58:	b	14250 <mpfr_sub1sp@@Base+0x1a20>
   13a5c:	neg	w1, w24
   13a60:	cmp	x24, x3
   13a64:	and	w2, w1, #0x3f
   13a68:	and	x1, x1, #0x3f
   13a6c:	str	x1, [x29, #144]
   13a70:	str	w2, [x29, #152]
   13a74:	b.hi	13cc8 <mpfr_sub1sp@@Base+0x1498>  // b.pmore
   13a78:	ldr	x28, [x26, #24]
   13a7c:	b.ne	13c2c <mpfr_sub1sp@@Base+0x13fc>  // b.any
   13a80:	ldr	x3, [x8, #24]
   13a84:	lsl	x2, x22, #3
   13a88:	mov	x4, #0x1                   	// #1
   13a8c:	add	x1, x3, x22, lsl #3
   13a90:	ldur	x1, [x1, #-8]
   13a94:	and	x19, x1, #0x4000000000000000
   13a98:	tbnz	x1, #62, 13ac8 <mpfr_sub1sp@@Base+0x1298>
   13a9c:	mov	x6, #0x8000000000000000    	// #-9223372036854775808
   13aa0:	cmp	x1, x6
   13aa4:	b.ne	13ac8 <mpfr_sub1sp@@Base+0x1298>  // b.any
   13aa8:	mov	x4, x23
   13aac:	sub	x4, x4, #0x1
   13ab0:	cmn	x4, #0x1
   13ab4:	b.eq	13ac0 <mpfr_sub1sp@@Base+0x1290>  // b.none
   13ab8:	ldr	x1, [x3, x4, lsl #3]
   13abc:	cbz	x1, 13aac <mpfr_sub1sp@@Base+0x127c>
   13ac0:	mvn	x4, x4
   13ac4:	lsr	x4, x4, #63
   13ac8:	cmp	w21, #0x5
   13acc:	ldr	x1, [x27, #24]
   13ad0:	b.ne	13b5c <mpfr_sub1sp@@Base+0x132c>  // b.any
   13ad4:	cmp	x28, x1
   13ad8:	b.eq	13970 <mpfr_sub1sp@@Base+0x1140>  // b.none
   13adc:	mov	x0, x28
   13ae0:	str	x4, [x29, #152]
   13ae4:	bl	ba90 <memcpy@plt>
   13ae8:	mov	x6, #0x1                   	// #1
   13aec:	ldr	x4, [x29, #152]
   13af0:	mov	x0, #0x1                   	// #1
   13af4:	ldrb	w1, [x29, #144]
   13af8:	lsl	x24, x0, x1
   13afc:	ldr	x1, [x28]
   13b00:	sub	x2, x1, x24
   13b04:	str	x2, [x28]
   13b08:	cmp	x24, x1
   13b0c:	b.hi	14080 <mpfr_sub1sp@@Base+0x1850>  // b.pmore
   13b10:	lsl	x22, x22, #3
   13b14:	sub	x22, x22, #0x8
   13b18:	ldr	x0, [x28, x22]
   13b1c:	tbz	x0, #63, 140a4 <mpfr_sub1sp@@Base+0x1874>
   13b20:	mov	w19, #0xffffffff            	// #-1
   13b24:	ldr	x0, [x29, #168]
   13b28:	str	x20, [x26, #16]
   13b2c:	cbz	x0, 13b34 <mpfr_sub1sp@@Base+0x1304>
   13b30:	bl	c4a0 <mpfr_tmp_free@plt>
   13b34:	ldr	w0, [x26, #8]
   13b38:	mul	w1, w19, w0
   13b3c:	cbz	w1, 131c0 <mpfr_sub1sp@@Base+0x990>
   13b40:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   13b44:	ldr	x2, [x0, #2592]
   13b48:	add	x0, x0, #0xa20
   13b4c:	blr	x2
   13b50:	mrs	x2, tpidr_el0
   13b54:	add	x0, x2, x0
   13b58:	b	12e94 <mpfr_sub1sp@@Base+0x664>
   13b5c:	cbnz	w21, 13b94 <mpfr_sub1sp@@Base+0x1364>
   13b60:	cmp	x4, #0x1
   13b64:	b.eq	13ad4 <mpfr_sub1sp@@Base+0x12a4>  // b.none
   13b68:	ldr	x0, [x1]
   13b6c:	ldrb	w3, [x29, #152]
   13b70:	lsr	x0, x0, x3
   13b74:	tbnz	w0, #0, 13ad4 <mpfr_sub1sp@@Base+0x12a4>
   13b78:	cmp	x28, x1
   13b7c:	b.eq	13b88 <mpfr_sub1sp@@Base+0x1358>  // b.none
   13b80:	mov	x0, x28
   13b84:	bl	ba90 <memcpy@plt>
   13b88:	mov	x4, #0x0                   	// #0
   13b8c:	mov	x25, #0xffffffffffffffff    	// #-1
   13b90:	b	1399c <mpfr_sub1sp@@Base+0x116c>
   13b94:	add	w0, w21, w0, lsr #31
   13b98:	cmp	w0, #0x3
   13b9c:	b.eq	13ba8 <mpfr_sub1sp@@Base+0x1378>  // b.none
   13ba0:	cmp	w21, #0x1
   13ba4:	b.ne	13bc8 <mpfr_sub1sp@@Base+0x1398>  // b.any
   13ba8:	cmp	x28, x1
   13bac:	b.eq	1406c <mpfr_sub1sp@@Base+0x183c>  // b.none
   13bb0:	mov	x0, x28
   13bb4:	str	x4, [x29, #152]
   13bb8:	bl	ba90 <memcpy@plt>
   13bbc:	mov	x6, #0x1                   	// #1
   13bc0:	mov	w21, w6
   13bc4:	b	13aec <mpfr_sub1sp@@Base+0x12bc>
   13bc8:	cmp	x28, x1
   13bcc:	b.eq	13b8c <mpfr_sub1sp@@Base+0x135c>  // b.none
   13bd0:	mov	x0, x28
   13bd4:	str	x4, [x29, #152]
   13bd8:	bl	ba90 <memcpy@plt>
   13bdc:	mov	x25, #0xffffffffffffffff    	// #-1
   13be0:	ldr	x4, [x29, #152]
   13be4:	mov	x6, #0x1                   	// #1
   13be8:	lsl	x22, x22, #3
   13bec:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   13bf0:	sub	x22, x22, #0x8
   13bf4:	add	x1, x28, x22
   13bf8:	ldr	x2, [x28, x22]
   13bfc:	cmp	x2, x0
   13c00:	b.ne	13c1c <mpfr_sub1sp@@Base+0x13ec>  // b.any
   13c04:	mov	x0, x23
   13c08:	sub	x0, x0, #0x1
   13c0c:	cmn	x0, #0x1
   13c10:	b.eq	14220 <mpfr_sub1sp@@Base+0x19f0>  // b.none
   13c14:	ldr	x2, [x28, x0, lsl #3]
   13c18:	cbz	x2, 13c08 <mpfr_sub1sp@@Base+0x13d8>
   13c1c:	orr	x4, x6, x4
   13c20:	cmp	x4, #0x0
   13c24:	cset	w19, ne  // ne = any
   13c28:	b	13b24 <mpfr_sub1sp@@Base+0x12f4>
   13c2c:	ldr	x0, [x29, #136]
   13c30:	mov	x25, #0xffffffffffffffff    	// #-1
   13c34:	cmp	x0, x3
   13c38:	cset	x19, eq  // eq = none
   13c3c:	b.ne	13c80 <mpfr_sub1sp@@Base+0x1450>  // b.any
   13c40:	cbnz	w21, 13c80 <mpfr_sub1sp@@Base+0x1450>
   13c44:	ldr	x0, [x8, #24]
   13c48:	mov	x25, #0x1                   	// #1
   13c4c:	add	x1, x0, x22, lsl #3
   13c50:	ldur	x2, [x1, #-8]
   13c54:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   13c58:	cmp	x2, x1
   13c5c:	b.ne	13c80 <mpfr_sub1sp@@Base+0x1450>  // b.any
   13c60:	mov	x25, x23
   13c64:	sub	x25, x25, #0x1
   13c68:	cmn	x25, #0x1
   13c6c:	b.eq	13c78 <mpfr_sub1sp@@Base+0x1448>  // b.none
   13c70:	ldr	x1, [x0, x25, lsl #3]
   13c74:	cbz	x1, 13c64 <mpfr_sub1sp@@Base+0x1434>
   13c78:	mvn	x25, x25
   13c7c:	lsr	x25, x25, #63
   13c80:	ldr	x1, [x27, #24]
   13c84:	cmp	x1, x28
   13c88:	b.eq	13c98 <mpfr_sub1sp@@Base+0x1468>  // b.none
   13c8c:	lsl	x2, x22, #3
   13c90:	mov	x0, x28
   13c94:	bl	ba90 <memcpy@plt>
   13c98:	cmp	w21, #0x0
   13c9c:	ccmp	w21, #0x5, #0x4, ne  // ne = any
   13ca0:	b.eq	14128 <mpfr_sub1sp@@Base+0x18f8>  // b.none
   13ca4:	ldr	w0, [x26, #8]
   13ca8:	mov	x4, #0x1                   	// #1
   13cac:	mov	x6, #0x0                   	// #0
   13cb0:	add	w0, w21, w0, lsr #31
   13cb4:	cmp	w0, #0x3
   13cb8:	b.eq	1405c <mpfr_sub1sp@@Base+0x182c>  // b.none
   13cbc:	cmp	w21, #0x1
   13cc0:	b.ne	13be8 <mpfr_sub1sp@@Base+0x13b8>  // b.any
   13cc4:	b	13af0 <mpfr_sub1sp@@Base+0x12c0>
   13cc8:	lsl	x25, x22, #3
   13ccc:	cmp	x25, #0x4, lsl #12
   13cd0:	b.hi	13f3c <mpfr_sub1sp@@Base+0x170c>  // b.pmore
   13cd4:	add	x0, x25, #0xf
   13cd8:	and	x0, x0, #0xfffffffffffffff0
   13cdc:	sub	sp, sp, x0
   13ce0:	mov	x9, sp
   13ce4:	lsr	x0, x3, #6
   13ce8:	ands	x3, x3, #0x3f
   13cec:	ldr	x1, [x8, #24]
   13cf0:	b.ne	13f58 <mpfr_sub1sp@@Base+0x1728>  // b.any
   13cf4:	add	x1, x1, x0, lsl #3
   13cf8:	lsl	x4, x0, #3
   13cfc:	cmp	x1, x9
   13d00:	sub	x3, x22, x0
   13d04:	b.eq	13d28 <mpfr_sub1sp@@Base+0x14f8>  // b.none
   13d08:	lsl	x2, x3, #3
   13d0c:	mov	x0, x9
   13d10:	stp	x8, x4, [x29, #112]
   13d14:	str	x3, [x29, #128]
   13d18:	bl	ba90 <memcpy@plt>
   13d1c:	ldp	x8, x4, [x29, #112]
   13d20:	mov	x9, x0
   13d24:	ldr	x3, [x29, #128]
   13d28:	mov	x2, x4
   13d2c:	add	x0, x9, x3, lsl #3
   13d30:	mov	w1, #0x0                   	// #0
   13d34:	stp	x8, x9, [x29, #120]
   13d38:	bl	c1a0 <memset@plt>
   13d3c:	ldp	x8, x9, [x29, #120]
   13d40:	ldr	w0, [x29, #152]
   13d44:	ldr	x2, [x9]
   13d48:	cbz	w0, 13fb4 <mpfr_sub1sp@@Base+0x1784>
   13d4c:	sub	w4, w0, #0x1
   13d50:	mov	x3, #0x1                   	// #1
   13d54:	mov	x1, #0xffffffffffffffff    	// #-1
   13d58:	lsl	x6, x3, x4
   13d5c:	and	x6, x6, x2
   13d60:	lsl	x4, x1, x4
   13d64:	bics	x4, x2, x4
   13d68:	b.ne	1401c <mpfr_sub1sp@@Base+0x17ec>  // b.any
   13d6c:	ldr	x0, [x29, #144]
   13d70:	add	x0, x0, x19
   13d74:	add	x28, x0, x28
   13d78:	sub	x28, x28, x20
   13d7c:	cmp	x24, x28
   13d80:	b.lt	13dd4 <mpfr_sub1sp@@Base+0x15a4>  // b.tstop
   13d84:	mov	x4, #0x40                  	// #64
   13d88:	negs	x0, x28
   13d8c:	ldr	x7, [x8, #24]
   13d90:	and	x0, x0, #0x3f
   13d94:	sdiv	x4, x28, x4
   13d98:	and	x28, x28, #0x3f
   13d9c:	csneg	x28, x28, x0, mi  // mi = first
   13da0:	mov	x0, #0x3f                  	// #63
   13da4:	sub	x28, x0, x28
   13da8:	sub	x4, x23, x4
   13dac:	lsl	x1, x1, x28
   13db0:	ldr	x0, [x7, x4, lsl #3]
   13db4:	bics	xzr, x0, x1
   13db8:	b.ne	1401c <mpfr_sub1sp@@Base+0x17ec>  // b.any
   13dbc:	subs	x4, x4, #0x1
   13dc0:	b.mi	13dcc <mpfr_sub1sp@@Base+0x159c>  // b.first
   13dc4:	ldr	x0, [x7, x4, lsl #3]
   13dc8:	cbz	x0, 13dbc <mpfr_sub1sp@@Base+0x158c>
   13dcc:	mvn	x4, x4
   13dd0:	lsr	x4, x4, #63
   13dd4:	ldr	x1, [x27, #24]
   13dd8:	sub	x7, x25, #0x8
   13ddc:	ldr	x3, [x9, x7]
   13de0:	ldr	x0, [x1, x7]
   13de4:	sub	x0, x0, x3
   13de8:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
   13dec:	cmp	x0, x3
   13df0:	b.hi	14024 <mpfr_sub1sp@@Base+0x17f4>  // b.pmore
   13df4:	cmp	x4, #0x1
   13df8:	b.ne	14030 <mpfr_sub1sp@@Base+0x1800>  // b.any
   13dfc:	ldr	x0, [x29, #136]
   13e00:	sub	x19, x19, x20
   13e04:	ldr	x10, [x8, #24]
   13e08:	add	x27, x19, x0
   13e0c:	mov	x0, #0x40                  	// #64
   13e10:	negs	x19, x27
   13e14:	and	x19, x19, #0x3f
   13e18:	mov	x3, #0x3f                  	// #63
   13e1c:	sdiv	x0, x27, x0
   13e20:	and	x27, x27, #0x3f
   13e24:	csneg	x27, x27, x19, mi  // mi = first
   13e28:	mov	x25, x4
   13e2c:	sub	x27, x3, x27
   13e30:	sub	x0, x23, x0
   13e34:	lsl	x19, x4, x27
   13e38:	ldr	x8, [x10, x0, lsl #3]
   13e3c:	ands	x19, x19, x8
   13e40:	b.eq	13e6c <mpfr_sub1sp@@Base+0x163c>  // b.none
   13e44:	mov	x3, #0xffffffffffffffff    	// #-1
   13e48:	lsl	x27, x3, x27
   13e4c:	bics	xzr, x8, x27
   13e50:	b.ne	13e6c <mpfr_sub1sp@@Base+0x163c>  // b.any
   13e54:	subs	x0, x0, #0x1
   13e58:	b.mi	13e64 <mpfr_sub1sp@@Base+0x1634>  // b.first
   13e5c:	ldr	x3, [x10, x0, lsl #3]
   13e60:	cbz	x3, 13e54 <mpfr_sub1sp@@Base+0x1624>
   13e64:	mvn	x0, x0
   13e68:	lsr	x25, x0, #63
   13e6c:	ldrb	w0, [x29, #152]
   13e70:	mov	x27, #0x1                   	// #1
   13e74:	ldr	x28, [x26, #24]
   13e78:	mov	x3, x22
   13e7c:	lsl	x24, x27, x0
   13e80:	neg	x0, x24
   13e84:	and	x2, x0, x2
   13e88:	str	x2, [x9]
   13e8c:	mov	x0, x28
   13e90:	mov	x2, x9
   13e94:	stp	x4, x6, [x29, #120]
   13e98:	str	x7, [x29, #136]
   13e9c:	bl	bee0 <__gmpn_sub_n@plt>
   13ea0:	ldr	x7, [x29, #136]
   13ea4:	ldp	x4, x6, [x29, #120]
   13ea8:	ldr	x0, [x28, x7]
   13eac:	tbnz	x0, #63, 13f14 <mpfr_sub1sp@@Base+0x16e4>
   13eb0:	mov	w3, w27
   13eb4:	mov	x2, x22
   13eb8:	mov	x1, x28
   13ebc:	mov	x0, x28
   13ec0:	str	x6, [x29, #136]
   13ec4:	bl	bd40 <__gmpn_lshift@plt>
   13ec8:	ldr	x6, [x29, #136]
   13ecc:	cbz	x6, 13f08 <mpfr_sub1sp@@Base+0x16d8>
   13ed0:	ldr	x0, [x28]
   13ed4:	sub	x1, x0, x24
   13ed8:	str	x1, [x28]
   13edc:	cmp	x24, x0
   13ee0:	b.ls	13f08 <mpfr_sub1sp@@Base+0x16d8>  // b.plast
   13ee4:	mov	x0, x27
   13ee8:	ldr	x1, [x28, x0, lsl #3]
   13eec:	mov	x2, x0
   13ef0:	sub	x3, x1, #0x1
   13ef4:	str	x3, [x28, x0, lsl #3]
   13ef8:	add	x0, x0, #0x1
   13efc:	cbnz	x1, 13f08 <mpfr_sub1sp@@Base+0x16d8>
   13f00:	cmp	x23, x2
   13f04:	b.gt	13ee8 <mpfr_sub1sp@@Base+0x16b8>
   13f08:	sub	x20, x20, #0x1
   13f0c:	mov	x4, x25
   13f10:	mov	x6, x19
   13f14:	cmp	w21, #0x5
   13f18:	b.eq	13be8 <mpfr_sub1sp@@Base+0x13b8>  // b.none
   13f1c:	cbnz	w21, 1403c <mpfr_sub1sp@@Base+0x180c>
   13f20:	cbz	x6, 13be8 <mpfr_sub1sp@@Base+0x13b8>
   13f24:	cbnz	x4, 13af0 <mpfr_sub1sp@@Base+0x12c0>
   13f28:	ldr	x0, [x28]
   13f2c:	ldrb	w1, [x29, #152]
   13f30:	lsr	x0, x0, x1
   13f34:	tbnz	w0, #0, 13af0 <mpfr_sub1sp@@Base+0x12c0>
   13f38:	b	13be8 <mpfr_sub1sp@@Base+0x13b8>
   13f3c:	mov	x1, x25
   13f40:	add	x0, x29, #0xa8
   13f44:	stp	x8, x3, [x29, #120]
   13f48:	bl	be40 <mpfr_tmp_allocate@plt>
   13f4c:	mov	x9, x0
   13f50:	ldp	x8, x3, [x29, #120]
   13f54:	b	13ce4 <mpfr_sub1sp@@Base+0x14b4>
   13f58:	cbnz	x0, 13f70 <mpfr_sub1sp@@Base+0x1740>
   13f5c:	mov	x2, x22
   13f60:	mov	x0, x9
   13f64:	stp	x8, x9, [x29, #120]
   13f68:	bl	bd60 <__gmpn_rshift@plt>
   13f6c:	b	13d3c <mpfr_sub1sp@@Base+0x150c>
   13f70:	sub	x4, x22, x0
   13f74:	lsl	x6, x0, #3
   13f78:	mov	x2, x4
   13f7c:	add	x1, x1, x0, lsl #3
   13f80:	mov	x0, x9
   13f84:	stp	x8, x6, [x29, #104]
   13f88:	stp	x4, x9, [x29, #120]
   13f8c:	bl	bd60 <__gmpn_rshift@plt>
   13f90:	mov	w1, #0x0                   	// #0
   13f94:	ldp	x6, x4, [x29, #112]
   13f98:	ldr	x9, [x29, #128]
   13f9c:	mov	x2, x6
   13fa0:	add	x0, x9, x4, lsl #3
   13fa4:	bl	c1a0 <memset@plt>
   13fa8:	ldr	x8, [x29, #104]
   13fac:	ldr	x9, [x29, #128]
   13fb0:	b	13d40 <mpfr_sub1sp@@Base+0x1510>
   13fb4:	add	x7, x24, x19
   13fb8:	mov	x0, #0x40                  	// #64
   13fbc:	sub	x7, x7, x20
   13fc0:	mov	x4, #0x1                   	// #1
   13fc4:	ldr	x3, [x8, #24]
   13fc8:	negs	x1, x7
   13fcc:	sdiv	x0, x7, x0
   13fd0:	and	x1, x1, #0x3f
   13fd4:	and	x7, x7, #0x3f
   13fd8:	csneg	x7, x7, x1, mi  // mi = first
   13fdc:	mov	x1, #0x3f                  	// #63
   13fe0:	sub	x7, x1, x7
   13fe4:	mov	x1, #0xffffffffffffffff    	// #-1
   13fe8:	sub	x0, x23, x0
   13fec:	lsl	x6, x4, x7
   13ff0:	lsl	x7, x1, x7
   13ff4:	ldr	x11, [x3, x0, lsl #3]
   13ff8:	and	x6, x6, x11
   13ffc:	bics	xzr, x11, x7
   14000:	b.ne	13dd4 <mpfr_sub1sp@@Base+0x15a4>  // b.any
   14004:	subs	x0, x0, #0x1
   14008:	b.mi	14014 <mpfr_sub1sp@@Base+0x17e4>  // b.first
   1400c:	ldr	x1, [x3, x0, lsl #3]
   14010:	cbz	x1, 14004 <mpfr_sub1sp@@Base+0x17d4>
   14014:	mvn	x4, x0
   14018:	b	13dd0 <mpfr_sub1sp@@Base+0x15a0>
   1401c:	mov	x4, x3
   14020:	b	13dd4 <mpfr_sub1sp@@Base+0x15a4>
   14024:	mov	x25, #0xffffffffffffffff    	// #-1
   14028:	mov	x19, x25
   1402c:	b	13e6c <mpfr_sub1sp@@Base+0x163c>
   14030:	mov	x25, x4
   14034:	mov	x19, x4
   14038:	b	13e6c <mpfr_sub1sp@@Base+0x163c>
   1403c:	ldr	w0, [x26, #8]
   14040:	add	w0, w21, w0, lsr #31
   14044:	cmp	w0, #0x3
   14048:	b.eq	14054 <mpfr_sub1sp@@Base+0x1824>  // b.none
   1404c:	cmp	w21, #0x1
   14050:	b.ne	13be8 <mpfr_sub1sp@@Base+0x13b8>  // b.any
   14054:	orr	x0, x6, x4
   14058:	cbz	x0, 14134 <mpfr_sub1sp@@Base+0x1904>
   1405c:	mov	w21, #0x1                   	// #1
   14060:	b	13af0 <mpfr_sub1sp@@Base+0x12c0>
   14064:	mov	x19, #0xffffffffffffffff    	// #-1
   14068:	mov	x4, #0x0                   	// #0
   1406c:	mov	x6, #0x1                   	// #1
   14070:	b	1405c <mpfr_sub1sp@@Base+0x182c>
   14074:	mov	x19, #0xffffffffffffffff    	// #-1
   14078:	mov	x4, #0x0                   	// #0
   1407c:	b	13970 <mpfr_sub1sp@@Base+0x1140>
   14080:	ldr	x1, [x28, x0, lsl #3]
   14084:	mov	x2, x0
   14088:	sub	x3, x1, #0x1
   1408c:	str	x3, [x28, x0, lsl #3]
   14090:	add	x0, x0, #0x1
   14094:	cbnz	x1, 13b10 <mpfr_sub1sp@@Base+0x12e0>
   14098:	cmp	x23, x2
   1409c:	b.gt	14080 <mpfr_sub1sp@@Base+0x1850>
   140a0:	b	13b10 <mpfr_sub1sp@@Base+0x12e0>
   140a4:	ldr	x0, [x28]
   140a8:	cmp	w21, #0x1
   140ac:	cset	w1, eq  // eq = none
   140b0:	eor	x4, x4, #0x1
   140b4:	cmp	x6, #0x0
   140b8:	sub	x20, x20, #0x1
   140bc:	lsl	x0, x0, #1
   140c0:	str	x0, [x28]
   140c4:	and	w4, w4, #0x1
   140c8:	ccmp	w1, #0x0, #0x4, eq  // eq = none
   140cc:	ldr	x0, [x28, x22]
   140d0:	orr	x0, x0, #0x8000000000000000
   140d4:	str	x0, [x28, x22]
   140d8:	b.ne	140f4 <mpfr_sub1sp@@Base+0x18c4>  // b.any
   140dc:	cmp	w21, #0x0
   140e0:	ccmp	x19, #0x0, #0x0, eq  // eq = none
   140e4:	b.eq	140f4 <mpfr_sub1sp@@Base+0x18c4>  // b.none
   140e8:	cmp	x6, #0x0
   140ec:	ccmp	w4, #0x0, #0x4, ne  // ne = any
   140f0:	b.eq	14104 <mpfr_sub1sp@@Base+0x18d4>  // b.none
   140f4:	ldr	x0, [x28]
   140f8:	orr	x24, x0, x24
   140fc:	str	x24, [x28]
   14100:	cbz	w21, 141c0 <mpfr_sub1sp@@Base+0x1990>
   14104:	cmp	w1, #0x0
   14108:	ccmp	w4, #0x0, #0x4, ne  // ne = any
   1410c:	csetm	w19, eq  // eq = none
   14110:	b	13b24 <mpfr_sub1sp@@Base+0x12f4>
   14114:	mov	x6, x4
   14118:	mov	x25, #0xffffffffffffffff    	// #-1
   1411c:	mov	x4, #0x0                   	// #0
   14120:	mov	x19, x25
   14124:	b	13be8 <mpfr_sub1sp@@Base+0x13b8>
   14128:	mov	x4, #0x1                   	// #1
   1412c:	mov	x6, #0x0                   	// #0
   14130:	b	13be8 <mpfr_sub1sp@@Base+0x13b8>
   14134:	mov	x4, #0x0                   	// #0
   14138:	mov	x6, #0x0                   	// #0
   1413c:	mov	w21, #0x1                   	// #1
   14140:	b	13be8 <mpfr_sub1sp@@Base+0x13b8>
   14144:	cmp	x19, #0x0
   14148:	ccmp	x25, #0x0, #0x4, ne  // ne = any
   1414c:	b.eq	13c1c <mpfr_sub1sp@@Base+0x13ec>  // b.none
   14150:	ldrb	w2, [x29, #144]
   14154:	mov	x0, #0x1                   	// #1
   14158:	lsl	x24, x0, x2
   1415c:	ldr	x2, [x28]
   14160:	sub	x3, x2, x24
   14164:	str	x3, [x28]
   14168:	cmp	x24, x2
   1416c:	b.hi	1418c <mpfr_sub1sp@@Base+0x195c>  // b.pmore
   14170:	ldr	x0, [x1]
   14174:	sub	x20, x20, #0x1
   14178:	orr	x0, x0, #0x8000000000000000
   1417c:	str	x0, [x1]
   14180:	cbnz	x4, 141b0 <mpfr_sub1sp@@Base+0x1980>
   14184:	mov	w19, #0x0                   	// #0
   14188:	b	13b24 <mpfr_sub1sp@@Base+0x12f4>
   1418c:	ldr	x2, [x28, x0, lsl #3]
   14190:	mov	x3, x0
   14194:	sub	x6, x2, #0x1
   14198:	str	x6, [x28, x0, lsl #3]
   1419c:	add	x0, x0, #0x1
   141a0:	cbnz	x2, 14170 <mpfr_sub1sp@@Base+0x1940>
   141a4:	cmp	x23, x3
   141a8:	b.gt	1418c <mpfr_sub1sp@@Base+0x195c>
   141ac:	b	14170 <mpfr_sub1sp@@Base+0x1940>
   141b0:	cmp	w21, #0x0
   141b4:	mov	w1, #0x1                   	// #1
   141b8:	cneg	w19, w1, eq  // eq = none
   141bc:	b	13b24 <mpfr_sub1sp@@Base+0x12f4>
   141c0:	mov	w19, #0x1                   	// #1
   141c4:	b	13b24 <mpfr_sub1sp@@Base+0x12f4>
   141c8:	cbnz	x20, 12c58 <mpfr_sub1sp@@Base+0x428>
   141cc:	mov	x2, x20
   141d0:	sub	x19, x19, #0x40
   141d4:	mov	x20, x7
   141d8:	mov	x7, #0x0                   	// #0
   141dc:	b	12c58 <mpfr_sub1sp@@Base+0x428>
   141e0:	cbnz	x20, 133b0 <mpfr_sub1sp@@Base+0xb80>
   141e4:	cbz	x0, 1341c <mpfr_sub1sp@@Base+0xbec>
   141e8:	mov	x20, x0
   141ec:	sub	x19, x19, #0x40
   141f0:	mov	x0, x15
   141f4:	mov	x8, #0x0                   	// #0
   141f8:	b	133b0 <mpfr_sub1sp@@Base+0xb80>
   141fc:	b.ls	13750 <mpfr_sub1sp@@Base+0xf20>  // b.plast
   14200:	mov	x1, x20
   14204:	mov	x20, x19
   14208:	mov	x19, x1
   1420c:	mov	x1, x27
   14210:	ldr	w0, [x8, #8]
   14214:	mov	x27, x8
   14218:	mov	x8, x1
   1421c:	b	13758 <mpfr_sub1sp@@Base+0xf28>
   14220:	cmp	w21, #0x0
   14224:	ccmp	x6, #0x0, #0x0, eq  // eq = none
   14228:	b.eq	14144 <mpfr_sub1sp@@Base+0x1914>  // b.none
   1422c:	cmp	x6, #0x0
   14230:	ccmp	w21, #0x1, #0x4, ne  // ne = any
   14234:	b	1414c <mpfr_sub1sp@@Base+0x191c>
   14238:	ldr	x3, [x26, #24]
   1423c:	cbz	x0, 13a3c <mpfr_sub1sp@@Base+0x120c>
   14240:	sub	x20, x20, #0x1
   14244:	lsl	x2, x22, #3
   14248:	mov	x0, x3
   1424c:	bl	c1a0 <memset@plt>
   14250:	str	x20, [x26, #16]
   14254:	b	13924 <mpfr_sub1sp@@Base+0x10f4>

0000000000014258 <mpfr_allocate_func@@Base>:
   14258:	stp	x29, x30, [sp, #-64]!
   1425c:	mov	x29, sp
   14260:	add	x2, sp, #0x38
   14264:	add	x1, sp, #0x30
   14268:	str	x19, [sp, #16]
   1426c:	mov	x19, x0
   14270:	add	x0, sp, #0x28
   14274:	bl	bcd0 <__gmp_get_memory_functions@plt>
   14278:	ldr	x1, [sp, #40]
   1427c:	mov	x0, x19
   14280:	blr	x1
   14284:	ldr	x19, [sp, #16]
   14288:	ldp	x29, x30, [sp], #64
   1428c:	ret

0000000000014290 <mpfr_reallocate_func@@Base>:
   14290:	stp	x29, x30, [sp, #-80]!
   14294:	mov	x29, sp
   14298:	stp	x19, x20, [sp, #16]
   1429c:	mov	x19, x0
   142a0:	mov	x20, x1
   142a4:	add	x0, sp, #0x38
   142a8:	add	x1, sp, #0x40
   142ac:	str	x21, [sp, #32]
   142b0:	mov	x21, x2
   142b4:	add	x2, sp, #0x48
   142b8:	bl	bcd0 <__gmp_get_memory_functions@plt>
   142bc:	ldr	x3, [sp, #64]
   142c0:	mov	x2, x21
   142c4:	mov	x1, x20
   142c8:	mov	x0, x19
   142cc:	blr	x3
   142d0:	ldp	x19, x20, [sp, #16]
   142d4:	ldr	x21, [sp, #32]
   142d8:	ldp	x29, x30, [sp], #80
   142dc:	ret

00000000000142e0 <mpfr_free_func@@Base>:
   142e0:	stp	x29, x30, [sp, #-64]!
   142e4:	mov	x29, sp
   142e8:	add	x2, sp, #0x38
   142ec:	stp	x19, x20, [sp, #16]
   142f0:	mov	x19, x0
   142f4:	mov	x20, x1
   142f8:	add	x0, sp, #0x28
   142fc:	add	x1, sp, #0x30
   14300:	bl	bcd0 <__gmp_get_memory_functions@plt>
   14304:	ldr	x2, [sp, #56]
   14308:	mov	x1, x20
   1430c:	mov	x0, x19
   14310:	blr	x2
   14314:	ldp	x19, x20, [sp, #16]
   14318:	ldp	x29, x30, [sp], #64
   1431c:	ret

0000000000014320 <mpfr_add1sp@@Base>:
   14320:	stp	x29, x30, [sp, #-160]!
   14324:	mov	x29, sp
   14328:	stp	x25, x26, [sp, #64]
   1432c:	ldr	x25, [x1]
   14330:	stp	x19, x20, [sp, #16]
   14334:	mov	w20, w3
   14338:	stp	x21, x22, [sp, #32]
   1433c:	mov	x22, x2
   14340:	mov	x21, x0
   14344:	stp	x23, x24, [sp, #48]
   14348:	cmp	x25, #0x3f
   1434c:	stp	x27, x28, [sp, #80]
   14350:	mov	x27, x1
   14354:	ldr	x4, [x2, #16]
   14358:	str	xzr, [x29, #152]
   1435c:	ldr	w2, [x1, #8]
   14360:	ldr	x19, [x1, #16]
   14364:	str	w2, [x0, #8]
   14368:	sub	x0, x25, #0x1
   1436c:	str	x0, [x29, #136]
   14370:	b.gt	145b8 <mpfr_add1sp@@Base+0x298>
   14374:	mov	x1, #0x40                  	// #64
   14378:	cmp	x19, x4
   1437c:	sub	x7, x1, x25
   14380:	ldr	x6, [x21, #24]
   14384:	ldr	x9, [x22, #24]
   14388:	ldr	x0, [x27, #24]
   1438c:	b.ne	143f4 <mpfr_add1sp@@Base+0xd4>  // b.any
   14390:	ldr	x1, [x9]
   14394:	sub	w3, w7, #0x1
   14398:	ldr	x0, [x0]
   1439c:	add	x19, x19, #0x1
   143a0:	lsr	x1, x1, #1
   143a4:	add	x1, x1, x0, lsr #1
   143a8:	mov	x0, #0x1                   	// #1
   143ac:	lsl	x0, x0, x3
   143b0:	and	x4, x0, x1
   143b4:	bic	x0, x1, x0
   143b8:	mov	x1, #0x0                   	// #0
   143bc:	str	x0, [x6]
   143c0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   143c4:	ldr	x3, [x0, #2560]
   143c8:	add	x0, x0, #0xa00
   143cc:	blr	x3
   143d0:	mrs	x3, tpidr_el0
   143d4:	ldr	x0, [x3, x0]
   143d8:	cmp	x0, x19
   143dc:	b.ge	144d0 <mpfr_add1sp@@Base+0x1b0>  // b.tcont
   143e0:	mov	w1, w20
   143e4:	mov	x0, x21
   143e8:	bl	bfc0 <mpfr_overflow@plt>
   143ec:	mov	w2, w0
   143f0:	b	144e0 <mpfr_add1sp@@Base+0x1c0>
   143f4:	b.gt	14410 <mpfr_add1sp@@Base+0xf0>
   143f8:	mov	x1, x0
   143fc:	mov	x0, x9
   14400:	mov	x9, x1
   14404:	mov	x1, x19
   14408:	mov	x19, x4
   1440c:	mov	x4, x1
   14410:	sub	x8, x19, x4
   14414:	mov	x1, #0x1                   	// #1
   14418:	lsl	x3, x1, x7
   1441c:	cmp	x8, x7
   14420:	sub	x5, x3, #0x1
   14424:	ldr	x0, [x0]
   14428:	b.cs	14470 <mpfr_add1sp@@Base+0x150>  // b.hs, b.nlast
   1442c:	ldr	x4, [x9]
   14430:	lsr	x4, x4, x8
   14434:	adds	x0, x0, x4
   14438:	b.cc	14448 <mpfr_add1sp@@Base+0x128>  // b.lo, b.ul, b.last
   1443c:	lsr	x0, x0, #1
   14440:	add	x19, x19, x1
   14444:	orr	x0, x0, #0x8000000000000000
   14448:	sub	w4, w7, #0x1
   1444c:	mov	x1, #0x1                   	// #1
   14450:	lsl	x1, x1, x4
   14454:	and	x4, x1, x0
   14458:	eor	x1, x5, x1
   1445c:	and	x1, x1, x0
   14460:	neg	x3, x3
   14464:	and	x0, x3, x0
   14468:	str	x0, [x6]
   1446c:	b	143c0 <mpfr_add1sp@@Base+0xa0>
   14470:	cmp	x8, #0x3f
   14474:	b.hi	144c4 <mpfr_add1sp@@Base+0x1a4>  // b.pmore
   14478:	ldr	x4, [x9]
   1447c:	neg	w1, w8
   14480:	lsl	x1, x4, x1
   14484:	lsr	x4, x4, x8
   14488:	adds	x0, x0, x4
   1448c:	b.cc	144a4 <mpfr_add1sp@@Base+0x184>  // b.lo, b.ul, b.last
   14490:	and	x4, x0, #0x1
   14494:	lsr	x0, x0, #1
   14498:	orr	x1, x1, x4
   1449c:	orr	x0, x0, #0x8000000000000000
   144a0:	add	x19, x19, #0x1
   144a4:	sub	w4, w7, #0x1
   144a8:	mov	x8, #0x1                   	// #1
   144ac:	lsl	x8, x8, x4
   144b0:	eor	x5, x5, x8
   144b4:	and	x5, x5, x0
   144b8:	and	x4, x8, x0
   144bc:	orr	x1, x5, x1
   144c0:	b	14460 <mpfr_add1sp@@Base+0x140>
   144c4:	mov	x4, #0x0                   	// #0
   144c8:	str	x0, [x6]
   144cc:	b	143c0 <mpfr_add1sp@@Base+0xa0>
   144d0:	str	x19, [x21, #16]
   144d4:	orr	x0, x4, x1
   144d8:	cbnz	x0, 14504 <mpfr_add1sp@@Base+0x1e4>
   144dc:	mov	w2, #0x0                   	// #0
   144e0:	mov	sp, x29
   144e4:	mov	w0, w2
   144e8:	ldp	x19, x20, [sp, #16]
   144ec:	ldp	x21, x22, [sp, #32]
   144f0:	ldp	x23, x24, [sp, #48]
   144f4:	ldp	x25, x26, [sp, #64]
   144f8:	ldp	x27, x28, [sp, #80]
   144fc:	ldp	x29, x30, [sp], #160
   14500:	ret
   14504:	cmp	w20, #0x5
   14508:	b.eq	144dc <mpfr_add1sp@@Base+0x1bc>  // b.none
   1450c:	cbnz	w20, 14544 <mpfr_add1sp@@Base+0x224>
   14510:	cbz	x4, 14528 <mpfr_add1sp@@Base+0x208>
   14514:	ldr	x0, [x6]
   14518:	lsr	x0, x0, x7
   1451c:	and	x0, x0, #0x1
   14520:	orr	x1, x0, x1
   14524:	cbnz	x1, 14558 <mpfr_add1sp@@Base+0x238>
   14528:	cbz	w2, 144dc <mpfr_add1sp@@Base+0x1bc>
   1452c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   14530:	ldr	x1, [x0, #2592]
   14534:	add	x0, x0, #0xa20
   14538:	blr	x1
   1453c:	add	x0, x3, x0
   14540:	b	1488c <mpfr_add1sp@@Base+0x56c>
   14544:	cmp	w20, #0x1
   14548:	b.eq	14528 <mpfr_add1sp@@Base+0x208>  // b.none
   1454c:	add	w0, w20, w2, lsr #31
   14550:	cmp	w0, #0x3
   14554:	b.eq	14528 <mpfr_add1sp@@Base+0x208>  // b.none
   14558:	mov	x0, #0x1                   	// #1
   1455c:	lsl	x7, x0, x7
   14560:	ldr	x0, [x6]
   14564:	add	x7, x7, x0
   14568:	str	x7, [x6]
   1456c:	cbnz	x7, 1459c <mpfr_add1sp@@Base+0x27c>
   14570:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   14574:	str	x0, [x6]
   14578:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1457c:	ldr	x1, [x0, #2560]
   14580:	add	x0, x0, #0xa00
   14584:	blr	x1
   14588:	ldr	x0, [x3, x0]
   1458c:	cmp	x19, x0
   14590:	b.ge	143e0 <mpfr_add1sp@@Base+0xc0>  // b.tcont
   14594:	add	x19, x19, #0x1
   14598:	str	x19, [x21, #16]
   1459c:	cbz	w2, 144e0 <mpfr_add1sp@@Base+0x1c0>
   145a0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   145a4:	ldr	x1, [x0, #2592]
   145a8:	add	x0, x0, #0xa20
   145ac:	blr	x1
   145b0:	add	x0, x3, x0
   145b4:	b	149a8 <mpfr_add1sp@@Base+0x688>
   145b8:	sub	x0, x25, #0x41
   145bc:	cmp	x0, #0x3e
   145c0:	b.hi	147e8 <mpfr_add1sp@@Base+0x4c8>  // b.pmore
   145c4:	mov	x0, #0x80                  	// #128
   145c8:	cmp	x19, x4
   145cc:	sub	x7, x0, x25
   145d0:	ldr	x6, [x21, #24]
   145d4:	ldr	x5, [x22, #24]
   145d8:	ldr	x10, [x1, #24]
   145dc:	b.ne	1469c <mpfr_add1sp@@Base+0x37c>  // b.any
   145e0:	ldp	x3, x4, [x5]
   145e4:	add	x19, x19, #0x1
   145e8:	ldp	x0, x1, [x10]
   145ec:	adds	x0, x0, x3
   145f0:	mov	x3, #0x1                   	// #1
   145f4:	adc	x1, x1, x4
   145f8:	sub	w4, w7, #0x1
   145fc:	lsl	x3, x3, x4
   14600:	extr	x0, x1, x0, #1
   14604:	lsr	x1, x1, #1
   14608:	and	x5, x3, x0
   1460c:	orr	x1, x1, #0x8000000000000000
   14610:	bic	x0, x0, x3
   14614:	stp	x0, x1, [x6]
   14618:	mov	x1, #0x0                   	// #0
   1461c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   14620:	ldr	x3, [x0, #2560]
   14624:	add	x0, x0, #0xa00
   14628:	blr	x3
   1462c:	mrs	x3, tpidr_el0
   14630:	ldr	x0, [x3, x0]
   14634:	cmp	x0, x19
   14638:	b.lt	143e0 <mpfr_add1sp@@Base+0xc0>  // b.tstop
   1463c:	str	x19, [x21, #16]
   14640:	orr	x0, x5, x1
   14644:	cbz	x0, 144dc <mpfr_add1sp@@Base+0x1bc>
   14648:	cmp	w20, #0x5
   1464c:	b.eq	144dc <mpfr_add1sp@@Base+0x1bc>  // b.none
   14650:	cbnz	w20, 147d0 <mpfr_add1sp@@Base+0x4b0>
   14654:	cbz	x5, 14528 <mpfr_add1sp@@Base+0x208>
   14658:	ldr	x0, [x6]
   1465c:	lsr	x0, x0, x7
   14660:	and	x0, x0, #0x1
   14664:	orr	x1, x0, x1
   14668:	cbz	x1, 14528 <mpfr_add1sp@@Base+0x208>
   1466c:	mov	x0, #0x1                   	// #1
   14670:	lsl	x7, x0, x7
   14674:	ldr	x0, [x6]
   14678:	add	x7, x7, x0
   1467c:	ldr	x0, [x6, #8]
   14680:	cmp	x7, #0x0
   14684:	cinc	x0, x0, eq  // eq = none
   14688:	stp	x7, x0, [x6]
   1468c:	cbnz	x0, 1459c <mpfr_add1sp@@Base+0x27c>
   14690:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   14694:	str	x0, [x6, #8]
   14698:	b	14578 <mpfr_add1sp@@Base+0x258>
   1469c:	b.gt	146b8 <mpfr_add1sp@@Base+0x398>
   146a0:	mov	x0, x10
   146a4:	mov	x10, x5
   146a8:	mov	x5, x0
   146ac:	mov	x0, x19
   146b0:	mov	x19, x4
   146b4:	mov	x4, x0
   146b8:	sub	x4, x19, x4
   146bc:	mov	x1, #0x1                   	// #1
   146c0:	lsl	x8, x1, x7
   146c4:	cmp	x4, #0x3f
   146c8:	sub	x11, x8, #0x1
   146cc:	ldr	x12, [x10]
   146d0:	b.hi	14750 <mpfr_add1sp@@Base+0x430>  // b.pmore
   146d4:	ldp	x0, x3, [x5]
   146d8:	mov	w1, #0x40                  	// #64
   146dc:	sub	w1, w1, w4
   146e0:	lsl	x9, x0, x1
   146e4:	lsl	x1, x3, x1
   146e8:	lsr	x0, x0, x4
   146ec:	orr	x0, x1, x0
   146f0:	ldr	x1, [x10, #8]
   146f4:	adds	x0, x0, x12
   146f8:	lsr	x4, x3, x4
   146fc:	adc	x4, x1, x4
   14700:	cmp	x1, x4
   14704:	b.ls	14720 <mpfr_add1sp@@Base+0x400>  // b.plast
   14708:	and	x1, x0, #0x1
   1470c:	extr	x0, x4, x0, #1
   14710:	lsr	x4, x4, #1
   14714:	orr	x9, x9, x1
   14718:	orr	x4, x4, #0x8000000000000000
   1471c:	add	x19, x19, #0x1
   14720:	str	x4, [x6, #8]
   14724:	sub	w4, w7, #0x1
   14728:	mov	x5, #0x1                   	// #1
   1472c:	neg	x8, x8
   14730:	lsl	x4, x5, x4
   14734:	and	x5, x4, x0
   14738:	eor	x4, x11, x4
   1473c:	and	x4, x4, x0
   14740:	and	x0, x8, x0
   14744:	orr	x1, x4, x9
   14748:	str	x0, [x6]
   1474c:	b	1461c <mpfr_add1sp@@Base+0x2fc>
   14750:	cmp	x4, #0x7f
   14754:	b.hi	147bc <mpfr_add1sp@@Base+0x49c>  // b.pmore
   14758:	cmp	x4, #0x40
   1475c:	ldp	x9, x3, [x5]
   14760:	b.eq	14774 <mpfr_add1sp@@Base+0x454>  // b.none
   14764:	mov	w0, #0x80                  	// #128
   14768:	sub	w0, w0, w4
   1476c:	lsl	x0, x3, x0
   14770:	orr	x9, x9, x0
   14774:	sub	w4, w4, #0x40
   14778:	lsr	x3, x3, x4
   1477c:	adds	x3, x3, x12
   14780:	ldr	x4, [x10, #8]
   14784:	mov	x0, x3
   14788:	cinc	x4, x4, cs  // cs = hs, nlast
   1478c:	cbz	x4, 14708 <mpfr_add1sp@@Base+0x3e8>
   14790:	sub	w0, w7, #0x1
   14794:	mov	x1, #0x1                   	// #1
   14798:	lsl	x1, x1, x0
   1479c:	and	x5, x3, x1
   147a0:	eor	x1, x11, x1
   147a4:	neg	x0, x8
   147a8:	and	x1, x1, x3
   147ac:	and	x3, x0, x3
   147b0:	orr	x1, x1, x9
   147b4:	stp	x3, x4, [x6]
   147b8:	b	1461c <mpfr_add1sp@@Base+0x2fc>
   147bc:	str	x12, [x6]
   147c0:	mov	x5, #0x0                   	// #0
   147c4:	ldr	x0, [x10, #8]
   147c8:	str	x0, [x6, #8]
   147cc:	b	1461c <mpfr_add1sp@@Base+0x2fc>
   147d0:	cmp	w20, #0x1
   147d4:	b.eq	14528 <mpfr_add1sp@@Base+0x208>  // b.none
   147d8:	add	w0, w20, w2, lsr #31
   147dc:	cmp	w0, #0x3
   147e0:	b.ne	1466c <mpfr_add1sp@@Base+0x34c>  // b.any
   147e4:	b	14528 <mpfr_add1sp@@Base+0x208>
   147e8:	cmp	x25, #0x40
   147ec:	b.ne	149b8 <mpfr_add1sp@@Base+0x698>  // b.any
   147f0:	cmp	x19, x4
   147f4:	ldr	x6, [x21, #24]
   147f8:	ldr	x3, [x22, #24]
   147fc:	ldr	x0, [x1, #24]
   14800:	b.ne	148a0 <mpfr_add1sp@@Base+0x580>  // b.any
   14804:	ldr	x1, [x3]
   14808:	add	x19, x19, #0x1
   1480c:	ldr	x0, [x0]
   14810:	mov	x3, #0x0                   	// #0
   14814:	add	x0, x0, x1
   14818:	and	x1, x0, #0x1
   1481c:	lsr	x0, x0, #1
   14820:	orr	x0, x0, #0x8000000000000000
   14824:	str	x0, [x6]
   14828:	mrs	x5, tpidr_el0
   1482c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   14830:	ldr	x4, [x0, #2560]
   14834:	add	x0, x0, #0xa00
   14838:	blr	x4
   1483c:	ldr	x0, [x5, x0]
   14840:	cmp	x0, x19
   14844:	b.lt	143e0 <mpfr_add1sp@@Base+0xc0>  // b.tstop
   14848:	str	x19, [x21, #16]
   1484c:	orr	x0, x1, x3
   14850:	cbz	x0, 144dc <mpfr_add1sp@@Base+0x1bc>
   14854:	cmp	w20, #0x5
   14858:	b.eq	144dc <mpfr_add1sp@@Base+0x1bc>  // b.none
   1485c:	cbnz	w20, 14940 <mpfr_add1sp@@Base+0x620>
   14860:	cbz	x1, 14874 <mpfr_add1sp@@Base+0x554>
   14864:	ldr	x4, [x6]
   14868:	and	x4, x4, #0x1
   1486c:	orr	x3, x4, x3
   14870:	cbnz	x3, 14954 <mpfr_add1sp@@Base+0x634>
   14874:	cbz	w2, 144dc <mpfr_add1sp@@Base+0x1bc>
   14878:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1487c:	ldr	x1, [x0, #2592]
   14880:	add	x0, x0, #0xa20
   14884:	blr	x1
   14888:	add	x0, x5, x0
   1488c:	ldr	w1, [x0]
   14890:	neg	w2, w2
   14894:	orr	w1, w1, #0x8
   14898:	str	w1, [x0]
   1489c:	b	144e0 <mpfr_add1sp@@Base+0x1c0>
   148a0:	b.gt	148bc <mpfr_add1sp@@Base+0x59c>
   148a4:	mov	x1, x0
   148a8:	mov	x0, x3
   148ac:	mov	x3, x1
   148b0:	mov	x1, x19
   148b4:	mov	x19, x4
   148b8:	mov	x4, x1
   148bc:	sub	x4, x19, x4
   148c0:	cmp	x4, #0x3f
   148c4:	ldr	x1, [x0]
   148c8:	b.hi	1490c <mpfr_add1sp@@Base+0x5ec>  // b.pmore
   148cc:	ldr	x3, [x3]
   148d0:	lsr	x0, x3, x4
   148d4:	neg	w4, w4
   148d8:	adds	x1, x1, x0
   148dc:	lsl	x3, x3, x4
   148e0:	b.cc	148fc <mpfr_add1sp@@Base+0x5dc>  // b.lo, b.ul, b.last
   148e4:	lsr	x0, x1, #1
   148e8:	add	x19, x19, #0x1
   148ec:	orr	x0, x0, #0x8000000000000000
   148f0:	and	x1, x1, #0x1
   148f4:	str	x0, [x6]
   148f8:	b	14828 <mpfr_add1sp@@Base+0x508>
   148fc:	str	x1, [x6]
   14900:	and	x1, x3, #0x8000000000000000
   14904:	and	x3, x3, #0x7fffffffffffffff
   14908:	b	14828 <mpfr_add1sp@@Base+0x508>
   1490c:	cmp	x4, #0x40
   14910:	b.ne	14938 <mpfr_add1sp@@Base+0x618>  // b.any
   14914:	ldr	x3, [x3]
   14918:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   1491c:	cmp	x3, x0
   14920:	cset	w3, ne  // ne = any
   14924:	cmp	x4, #0x40
   14928:	sxtw	x3, w3
   1492c:	str	x1, [x6]
   14930:	cset	x1, eq  // eq = none
   14934:	b	14828 <mpfr_add1sp@@Base+0x508>
   14938:	mov	w3, #0x1                   	// #1
   1493c:	b	14924 <mpfr_add1sp@@Base+0x604>
   14940:	cmp	w20, #0x1
   14944:	b.eq	14874 <mpfr_add1sp@@Base+0x554>  // b.none
   14948:	add	w0, w20, w2, lsr #31
   1494c:	cmp	w0, #0x3
   14950:	b.eq	14874 <mpfr_add1sp@@Base+0x554>  // b.none
   14954:	ldr	x0, [x6]
   14958:	add	x0, x0, #0x1
   1495c:	str	x0, [x6]
   14960:	cbnz	x0, 14990 <mpfr_add1sp@@Base+0x670>
   14964:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   14968:	str	x0, [x6]
   1496c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   14970:	ldr	x1, [x0, #2560]
   14974:	add	x0, x0, #0xa00
   14978:	blr	x1
   1497c:	ldr	x0, [x5, x0]
   14980:	cmp	x19, x0
   14984:	b.ge	143e0 <mpfr_add1sp@@Base+0xc0>  // b.tcont
   14988:	add	x19, x19, #0x1
   1498c:	str	x19, [x21, #16]
   14990:	cbz	w2, 144e0 <mpfr_add1sp@@Base+0x1c0>
   14994:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   14998:	ldr	x1, [x0, #2592]
   1499c:	add	x0, x0, #0xa20
   149a0:	blr	x1
   149a4:	add	x0, x5, x0
   149a8:	ldr	w1, [x0]
   149ac:	orr	w1, w1, #0x8
   149b0:	str	w1, [x0]
   149b4:	b	144e0 <mpfr_add1sp@@Base+0x1c0>
   149b8:	sub	x0, x25, #0x81
   149bc:	cmp	x0, #0x3e
   149c0:	b.hi	14d10 <mpfr_add1sp@@Base+0x9f0>  // b.pmore
   149c4:	mov	x0, #0xc0                  	// #192
   149c8:	cmp	x19, x4
   149cc:	sub	x7, x0, x25
   149d0:	ldr	x6, [x21, #24]
   149d4:	ldr	x3, [x22, #24]
   149d8:	ldr	x11, [x1, #24]
   149dc:	b.ne	14ad8 <mpfr_add1sp@@Base+0x7b8>  // b.any
   149e0:	ldp	x0, x8, [x11]
   149e4:	add	x19, x19, #0x1
   149e8:	ldp	x1, x4, [x3]
   149ec:	ldr	x5, [x11, #16]
   149f0:	ldr	x3, [x3, #16]
   149f4:	adds	x1, x0, x1
   149f8:	adc	x4, x8, x4
   149fc:	cset	w0, cs  // cs = hs, nlast
   14a00:	cmp	x8, x4
   14a04:	add	x3, x5, x3
   14a08:	csel	w0, w0, wzr, eq  // eq = none
   14a0c:	sub	w5, w7, #0x1
   14a10:	csinc	w0, w0, wzr, ls  // ls = plast
   14a14:	extr	x1, x4, x1, #1
   14a18:	add	x0, x3, w0, sxtw
   14a1c:	mov	x3, #0x1                   	// #1
   14a20:	lsl	x3, x3, x5
   14a24:	and	x11, x3, x1
   14a28:	lsr	x5, x0, #1
   14a2c:	bic	x1, x1, x3
   14a30:	orr	x5, x5, #0x8000000000000000
   14a34:	extr	x0, x0, x4, #1
   14a38:	stp	x1, x0, [x6]
   14a3c:	mov	x1, #0x0                   	// #0
   14a40:	str	x5, [x6, #16]
   14a44:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   14a48:	ldr	x3, [x0, #2560]
   14a4c:	add	x0, x0, #0xa00
   14a50:	blr	x3
   14a54:	mrs	x3, tpidr_el0
   14a58:	ldr	x0, [x3, x0]
   14a5c:	cmp	x0, x19
   14a60:	b.lt	143e0 <mpfr_add1sp@@Base+0xc0>  // b.tstop
   14a64:	str	x19, [x21, #16]
   14a68:	orr	x0, x11, x1
   14a6c:	cbz	x0, 144dc <mpfr_add1sp@@Base+0x1bc>
   14a70:	cmp	w20, #0x5
   14a74:	b.eq	144dc <mpfr_add1sp@@Base+0x1bc>  // b.none
   14a78:	cbnz	w20, 14cf8 <mpfr_add1sp@@Base+0x9d8>
   14a7c:	cbz	x11, 14528 <mpfr_add1sp@@Base+0x208>
   14a80:	ldr	x0, [x6]
   14a84:	lsr	x0, x0, x7
   14a88:	and	x0, x0, #0x1
   14a8c:	orr	x1, x0, x1
   14a90:	cbz	x1, 14528 <mpfr_add1sp@@Base+0x208>
   14a94:	mov	x0, #0x1                   	// #1
   14a98:	lsl	x7, x0, x7
   14a9c:	ldr	x0, [x6]
   14aa0:	add	x7, x7, x0
   14aa4:	ldr	x0, [x6, #8]
   14aa8:	cmp	x7, #0x0
   14aac:	cinc	x0, x0, eq  // eq = none
   14ab0:	stp	x7, x0, [x6]
   14ab4:	orr	x7, x7, x0
   14ab8:	ldr	x0, [x6, #16]
   14abc:	cmp	x7, #0x0
   14ac0:	cinc	x0, x0, eq  // eq = none
   14ac4:	str	x0, [x6, #16]
   14ac8:	cbnz	x0, 1459c <mpfr_add1sp@@Base+0x27c>
   14acc:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   14ad0:	str	x0, [x6, #16]
   14ad4:	b	14578 <mpfr_add1sp@@Base+0x258>
   14ad8:	b.gt	14af4 <mpfr_add1sp@@Base+0x7d4>
   14adc:	mov	x0, x11
   14ae0:	mov	x11, x3
   14ae4:	mov	x3, x0
   14ae8:	mov	x0, x19
   14aec:	mov	x19, x4
   14af0:	mov	x4, x0
   14af4:	sub	x4, x19, x4
   14af8:	mov	x1, #0x1                   	// #1
   14afc:	lsl	x9, x1, x7
   14b00:	cmp	x4, #0x3f
   14b04:	sub	x12, x9, #0x1
   14b08:	ldr	x14, [x11]
   14b0c:	b.hi	14bcc <mpfr_add1sp@@Base+0x8ac>  // b.pmore
   14b10:	ldp	x13, x15, [x3]
   14b14:	mov	w8, #0x40                  	// #64
   14b18:	sub	w8, w8, w4
   14b1c:	ldr	x5, [x11, #8]
   14b20:	lsl	x0, x15, x8
   14b24:	lsl	x10, x13, x8
   14b28:	lsr	x13, x13, x4
   14b2c:	orr	x13, x0, x13
   14b30:	ldr	x0, [x3, #16]
   14b34:	adds	x13, x14, x13
   14b38:	lsr	x15, x15, x4
   14b3c:	cset	w3, cs  // cs = hs, nlast
   14b40:	lsl	x8, x0, x8
   14b44:	orr	x8, x8, x15
   14b48:	adc	x8, x5, x8
   14b4c:	lsr	x4, x0, x4
   14b50:	cmp	x5, x8
   14b54:	csel	w3, w3, wzr, eq  // eq = none
   14b58:	csel	w1, w3, w1, ls  // ls = plast
   14b5c:	ldr	x3, [x11, #16]
   14b60:	add	x4, x4, x3
   14b64:	add	x14, x4, w1, sxtw
   14b68:	cmp	x3, x14
   14b6c:	b.hi	14b78 <mpfr_add1sp@@Base+0x858>  // b.pmore
   14b70:	b.ne	14bc4 <mpfr_add1sp@@Base+0x8a4>  // b.any
   14b74:	cbz	w1, 14bc4 <mpfr_add1sp@@Base+0x8a4>
   14b78:	and	x0, x13, #0x1
   14b7c:	lsr	x4, x14, #1
   14b80:	orr	x10, x10, x0
   14b84:	add	x19, x19, #0x1
   14b88:	orr	x4, x4, #0x8000000000000000
   14b8c:	extr	x13, x8, x13, #1
   14b90:	extr	x8, x14, x8, #1
   14b94:	stp	x8, x4, [x6, #8]
   14b98:	sub	w1, w7, #0x1
   14b9c:	mov	x3, #0x1                   	// #1
   14ba0:	neg	x9, x9
   14ba4:	lsl	x3, x3, x1
   14ba8:	eor	x1, x12, x3
   14bac:	and	x1, x1, x13
   14bb0:	and	x11, x3, x13
   14bb4:	orr	x1, x1, x10
   14bb8:	and	x13, x9, x13
   14bbc:	str	x13, [x6]
   14bc0:	b	14a44 <mpfr_add1sp@@Base+0x724>
   14bc4:	stp	x8, x14, [x6, #8]
   14bc8:	b	14b98 <mpfr_add1sp@@Base+0x878>
   14bcc:	cmp	x4, #0x7f
   14bd0:	b.hi	14c60 <mpfr_add1sp@@Base+0x940>  // b.pmore
   14bd4:	sub	w15, w4, #0x40
   14bd8:	cmp	x4, #0x40
   14bdc:	ldp	x10, x5, [x3]
   14be0:	ldr	x8, [x3, #16]
   14be4:	b.eq	14c04 <mpfr_add1sp@@Base+0x8e4>  // b.none
   14be8:	mov	w0, #0x80                  	// #128
   14bec:	sub	w4, w0, w4
   14bf0:	lsl	x0, x5, x4
   14bf4:	orr	x10, x10, x0
   14bf8:	lsl	x4, x8, x4
   14bfc:	lsr	x5, x5, x15
   14c00:	orr	x5, x4, x5
   14c04:	ldp	x1, x4, [x11, #8]
   14c08:	adds	x5, x14, x5
   14c0c:	lsr	x8, x8, x15
   14c10:	cset	w0, cs  // cs = hs, nlast
   14c14:	mov	x13, x5
   14c18:	adc	x8, x1, x8
   14c1c:	cmp	x1, x8
   14c20:	csel	w0, w0, wzr, eq  // eq = none
   14c24:	csinc	w0, w0, wzr, ls  // ls = plast
   14c28:	adds	x14, x4, w0, sxtw
   14c2c:	b.eq	14b78 <mpfr_add1sp@@Base+0x858>  // b.none
   14c30:	sub	w1, w7, #0x1
   14c34:	mov	x0, #0x1                   	// #1
   14c38:	neg	x9, x9
   14c3c:	lsl	x0, x0, x1
   14c40:	eor	x1, x12, x0
   14c44:	and	x1, x1, x5
   14c48:	and	x11, x5, x0
   14c4c:	orr	x1, x1, x10
   14c50:	and	x5, x9, x5
   14c54:	stp	x5, x8, [x6]
   14c58:	str	x14, [x6, #16]
   14c5c:	b	14a44 <mpfr_add1sp@@Base+0x724>
   14c60:	cmp	x4, #0xbf
   14c64:	b.hi	14cdc <mpfr_add1sp@@Base+0x9bc>  // b.pmore
   14c68:	ldp	x0, x8, [x3, #8]
   14c6c:	mov	w10, #0xc0                  	// #192
   14c70:	ldr	x3, [x3]
   14c74:	sub	w10, w10, w4
   14c78:	cmp	x4, #0x80
   14c7c:	sub	w4, w4, #0x80
   14c80:	orr	x0, x0, x3
   14c84:	lsl	x10, x8, x10
   14c88:	csel	x10, x10, xzr, ne  // ne = any
   14c8c:	lsr	x4, x8, x4
   14c90:	orr	x10, x0, x10
   14c94:	adds	x4, x14, x4
   14c98:	ldp	x0, x14, [x11, #8]
   14c9c:	cset	x3, cs  // cs = hs, nlast
   14ca0:	mov	x13, x4
   14ca4:	adds	x0, x0, x3
   14ca8:	mov	x8, x0
   14cac:	cinc	x14, x14, cs  // cs = hs, nlast
   14cb0:	cbz	x14, 14b78 <mpfr_add1sp@@Base+0x858>
   14cb4:	sub	w3, w7, #0x1
   14cb8:	neg	x9, x9
   14cbc:	lsl	x1, x1, x3
   14cc0:	and	x11, x4, x1
   14cc4:	eor	x1, x12, x1
   14cc8:	and	x1, x1, x4
   14ccc:	and	x4, x9, x4
   14cd0:	orr	x1, x1, x10
   14cd4:	stp	x4, x0, [x6]
   14cd8:	b	14c58 <mpfr_add1sp@@Base+0x938>
   14cdc:	str	x14, [x6]
   14ce0:	ldr	x0, [x11, #8]
   14ce4:	str	x0, [x6, #8]
   14ce8:	ldr	x0, [x11, #16]
   14cec:	mov	x11, #0x0                   	// #0
   14cf0:	str	x0, [x6, #16]
   14cf4:	b	14a44 <mpfr_add1sp@@Base+0x724>
   14cf8:	cmp	w20, #0x1
   14cfc:	b.eq	14528 <mpfr_add1sp@@Base+0x208>  // b.none
   14d00:	add	w0, w20, w2, lsr #31
   14d04:	cmp	w0, #0x3
   14d08:	b.ne	14a94 <mpfr_add1sp@@Base+0x774>  // b.any
   14d0c:	b	14528 <mpfr_add1sp@@Base+0x208>
   14d10:	ldr	w26, [x1, #8]
   14d14:	cmp	x19, x4
   14d18:	lsr	w0, w26, #31
   14d1c:	str	w0, [x29, #132]
   14d20:	b.ge	14d30 <mpfr_add1sp@@Base+0xa10>  // b.tcont
   14d24:	mov	x27, x22
   14d28:	mov	x19, x4
   14d2c:	mov	x22, x1
   14d30:	sub	x0, x25, #0x1
   14d34:	neg	w23, w25
   14d38:	ldr	x2, [x22, #16]
   14d3c:	asr	x0, x0, #6
   14d40:	str	x0, [x29, #136]
   14d44:	add	x24, x0, #0x1
   14d48:	and	w23, w23, #0x3f
   14d4c:	subs	x28, x19, x2
   14d50:	b.ne	14df4 <mpfr_add1sp@@Base+0xad4>  // b.any
   14d54:	ldr	x2, [x22, #24]
   14d58:	mov	x3, x24
   14d5c:	ldr	x1, [x27, #24]
   14d60:	add	x19, x19, #0x1
   14d64:	ldr	x28, [x21, #24]
   14d68:	mov	x0, x28
   14d6c:	bl	c630 <__gmpn_add_n@plt>
   14d70:	mov	x2, x24
   14d74:	mov	x1, x28
   14d78:	mov	x0, x28
   14d7c:	mov	w3, #0x1                   	// #1
   14d80:	ldr	x22, [x28]
   14d84:	bl	bd60 <__gmpn_rshift@plt>
   14d88:	lsl	x0, x24, #3
   14d8c:	cmp	w20, #0x5
   14d90:	sub	x0, x0, #0x8
   14d94:	ldr	x1, [x28, x0]
   14d98:	orr	x1, x1, #0x8000000000000000
   14d9c:	str	x1, [x28, x0]
   14da0:	mov	x1, #0x1                   	// #1
   14da4:	ldr	x2, [x28]
   14da8:	lsl	x0, x1, x23
   14dac:	neg	x0, x0
   14db0:	and	x0, x0, x2
   14db4:	str	x0, [x28]
   14db8:	b.eq	151e0 <mpfr_add1sp@@Base+0xec0>  // b.none
   14dbc:	lsr	x22, x22, x23
   14dc0:	tbz	w22, #0, 151e0 <mpfr_add1sp@@Base+0xec0>
   14dc4:	cbnz	w20, 14dd4 <mpfr_add1sp@@Base+0xab4>
   14dc8:	lsr	x0, x0, x23
   14dcc:	tbz	w0, #0, 14dec <mpfr_add1sp@@Base+0xacc>
   14dd0:	b	14e90 <mpfr_add1sp@@Base+0xb70>
   14dd4:	ldr	w0, [x29, #132]
   14dd8:	add	w26, w0, w20
   14ddc:	cmp	w26, #0x3
   14de0:	b.eq	151e8 <mpfr_add1sp@@Base+0xec8>  // b.none
   14de4:	cmp	w20, #0x1
   14de8:	b.ne	14e90 <mpfr_add1sp@@Base+0xb70>  // b.any
   14dec:	mov	w22, #0xffffffff            	// #-1
   14df0:	b	150cc <mpfr_add1sp@@Base+0xdac>
   14df4:	cmp	x25, x28
   14df8:	b.hi	14ef0 <mpfr_add1sp@@Base+0xbd0>  // b.pmore
   14dfc:	cmp	w20, #0x5
   14e00:	b.eq	14e24 <mpfr_add1sp@@Base+0xb04>  // b.none
   14e04:	cmp	x25, x28
   14e08:	b.cs	14e40 <mpfr_add1sp@@Base+0xb20>  // b.hs, b.nlast
   14e0c:	cmp	w20, #0x1
   14e10:	b.ls	14e24 <mpfr_add1sp@@Base+0xb04>  // b.plast
   14e14:	ldr	w0, [x29, #132]
   14e18:	add	w26, w0, w20
   14e1c:	cmp	w26, #0x3
   14e20:	b.ne	14e74 <mpfr_add1sp@@Base+0xb54>  // b.any
   14e24:	ldr	x0, [x21, #24]
   14e28:	ldr	x1, [x27, #24]
   14e2c:	cmp	x1, x0
   14e30:	b.eq	14dec <mpfr_add1sp@@Base+0xacc>  // b.none
   14e34:	lsl	x2, x24, #3
   14e38:	bl	ba90 <memcpy@plt>
   14e3c:	b	14dec <mpfr_add1sp@@Base+0xacc>
   14e40:	cbnz	w20, 14ee4 <mpfr_add1sp@@Base+0xbc4>
   14e44:	ldr	x1, [x22, #24]
   14e48:	add	x0, x1, x24, lsl #3
   14e4c:	ldur	x2, [x0, #-8]
   14e50:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   14e54:	cmp	x2, x0
   14e58:	b.ne	14e74 <mpfr_add1sp@@Base+0xb54>  // b.any
   14e5c:	ldr	x0, [x29, #136]
   14e60:	sub	x0, x0, #0x1
   14e64:	cmn	x0, #0x1
   14e68:	b.eq	15228 <mpfr_add1sp@@Base+0xf08>  // b.none
   14e6c:	ldr	x2, [x1, x0, lsl #3]
   14e70:	cbz	x2, 14e60 <mpfr_add1sp@@Base+0xb40>
   14e74:	ldr	x28, [x21, #24]
   14e78:	ldr	x1, [x27, #24]
   14e7c:	cmp	x1, x28
   14e80:	b.eq	14e90 <mpfr_add1sp@@Base+0xb70>  // b.none
   14e84:	lsl	x2, x24, #3
   14e88:	mov	x0, x28
   14e8c:	bl	ba90 <memcpy@plt>
   14e90:	ldr	x0, [x28]
   14e94:	mov	x2, #0x1                   	// #1
   14e98:	lsl	x23, x2, x23
   14e9c:	adds	x23, x23, x0
   14ea0:	str	x23, [x28]
   14ea4:	b.cc	14edc <mpfr_add1sp@@Base+0xbbc>  // b.lo, b.ul, b.last
   14ea8:	ldr	x0, [x28, x2, lsl #3]
   14eac:	mov	x1, x2
   14eb0:	add	x0, x0, #0x1
   14eb4:	str	x0, [x28, x2, lsl #3]
   14eb8:	add	x2, x2, #0x1
   14ebc:	cbnz	x0, 14edc <mpfr_add1sp@@Base+0xbbc>
   14ec0:	ldr	x0, [x29, #136]
   14ec4:	cmp	x0, x1
   14ec8:	b.gt	14ea8 <mpfr_add1sp@@Base+0xb88>
   14ecc:	add	x2, x28, x24, lsl #3
   14ed0:	add	x19, x19, #0x1
   14ed4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   14ed8:	stur	x0, [x2, #-8]
   14edc:	mov	w22, #0x1                   	// #1
   14ee0:	b	150cc <mpfr_add1sp@@Base+0xdac>
   14ee4:	cmp	w20, #0x1
   14ee8:	b.ne	14e14 <mpfr_add1sp@@Base+0xaf4>  // b.any
   14eec:	b	14e24 <mpfr_add1sp@@Base+0xb04>
   14ef0:	lsl	x0, x24, #3
   14ef4:	str	x0, [x29, #120]
   14ef8:	cmp	x0, #0x4, lsl #12
   14efc:	b.hi	14f5c <mpfr_add1sp@@Base+0xc3c>  // b.pmore
   14f00:	add	x0, x0, #0xf
   14f04:	and	x0, x0, #0xfffffffffffffff0
   14f08:	sub	sp, sp, x0
   14f0c:	mov	x26, sp
   14f10:	lsr	x0, x28, #6
   14f14:	ands	x3, x28, #0x3f
   14f18:	ldr	x1, [x22, #24]
   14f1c:	b.ne	14f70 <mpfr_add1sp@@Base+0xc50>  // b.any
   14f20:	add	x1, x1, x0, lsl #3
   14f24:	lsl	x6, x0, #3
   14f28:	cmp	x1, x26
   14f2c:	sub	x3, x24, x0
   14f30:	b.eq	14f48 <mpfr_add1sp@@Base+0xc28>  // b.none
   14f34:	lsl	x2, x3, #3
   14f38:	mov	x0, x26
   14f3c:	stp	x6, x3, [x29, #104]
   14f40:	bl	ba90 <memcpy@plt>
   14f44:	ldp	x6, x3, [x29, #104]
   14f48:	mov	x2, x6
   14f4c:	add	x0, x26, x3, lsl #3
   14f50:	mov	w1, #0x0                   	// #0
   14f54:	bl	c1a0 <memset@plt>
   14f58:	b	14f80 <mpfr_add1sp@@Base+0xc60>
   14f5c:	lsl	x1, x24, #3
   14f60:	add	x0, x29, #0x98
   14f64:	bl	be40 <mpfr_tmp_allocate@plt>
   14f68:	mov	x26, x0
   14f6c:	b	14f10 <mpfr_add1sp@@Base+0xbf0>
   14f70:	cbnz	x0, 15104 <mpfr_add1sp@@Base+0xde4>
   14f74:	mov	x2, x24
   14f78:	mov	x0, x26
   14f7c:	bl	bd60 <__gmpn_rshift@plt>
   14f80:	cmp	w20, #0x5
   14f84:	ldr	x0, [x26]
   14f88:	b.eq	15198 <mpfr_add1sp@@Base+0xe78>  // b.none
   14f8c:	cbz	w23, 15134 <mpfr_add1sp@@Base+0xe14>
   14f90:	sub	w3, w23, #0x1
   14f94:	mov	x10, #0x1                   	// #1
   14f98:	mov	x1, #0xffffffffffffffff    	// #-1
   14f9c:	lsl	x6, x10, x3
   14fa0:	and	x6, x6, x0
   14fa4:	lsl	x3, x1, x3
   14fa8:	bics	x9, x0, x3
   14fac:	b.ne	151a4 <mpfr_add1sp@@Base+0xe84>  // b.any
   14fb0:	mov	w2, w23
   14fb4:	add	x3, x25, x1
   14fb8:	sub	x2, x2, x28
   14fbc:	add	x2, x2, x3
   14fc0:	cmp	x25, x2
   14fc4:	b.lt	1501c <mpfr_add1sp@@Base+0xcfc>  // b.tstop
   14fc8:	mov	x3, #0x40                  	// #64
   14fcc:	negs	x28, x2
   14fd0:	ldr	x4, [x29, #136]
   14fd4:	and	x28, x28, #0x3f
   14fd8:	sdiv	x3, x2, x3
   14fdc:	ldr	x7, [x22, #24]
   14fe0:	and	x22, x2, #0x3f
   14fe4:	csneg	x22, x22, x28, mi  // mi = first
   14fe8:	mov	x2, #0x3f                  	// #63
   14fec:	sub	x3, x4, x3
   14ff0:	sub	x22, x2, x22
   14ff4:	lsl	x1, x1, x22
   14ff8:	ldr	x2, [x7, x3, lsl #3]
   14ffc:	bics	xzr, x2, x1
   15000:	b.ne	151a4 <mpfr_add1sp@@Base+0xe84>  // b.any
   15004:	subs	x3, x3, #0x1
   15008:	b.mi	15014 <mpfr_add1sp@@Base+0xcf4>  // b.first
   1500c:	ldr	x1, [x7, x3, lsl #3]
   15010:	cbz	x1, 15004 <mpfr_add1sp@@Base+0xce4>
   15014:	mvn	x3, x3
   15018:	lsr	x9, x3, #63
   1501c:	mov	x8, #0x1                   	// #1
   15020:	mov	x3, x24
   15024:	ldr	x1, [x27, #24]
   15028:	lsl	x7, x8, x23
   1502c:	neg	x22, x7
   15030:	mov	x2, x26
   15034:	ldr	x28, [x21, #24]
   15038:	and	x0, x22, x0
   1503c:	str	x0, [x26]
   15040:	mov	x0, x28
   15044:	stp	x6, x9, [x29, #96]
   15048:	str	x7, [x29, #112]
   1504c:	bl	c630 <__gmpn_add_n@plt>
   15050:	mov	x8, #0x1                   	// #1
   15054:	ldp	x6, x9, [x29, #96]
   15058:	ldr	x7, [x29, #112]
   1505c:	cbz	x0, 150b0 <mpfr_add1sp@@Base+0xd90>
   15060:	ldr	x0, [x28]
   15064:	mov	w3, w8
   15068:	mov	x2, x24
   1506c:	mov	x1, x28
   15070:	and	x7, x7, x0
   15074:	mov	x0, x28
   15078:	str	x7, [x29, #112]
   1507c:	add	x19, x19, #0x1
   15080:	bl	bd60 <__gmpn_rshift@plt>
   15084:	ldp	x7, x0, [x29, #112]
   15088:	ldp	x6, x9, [x29, #96]
   1508c:	sub	x27, x0, #0x8
   15090:	orr	x9, x9, x6
   15094:	mov	x6, x7
   15098:	ldr	x0, [x28, x27]
   1509c:	orr	x0, x0, #0x8000000000000000
   150a0:	str	x0, [x28, x27]
   150a4:	ldr	x0, [x28]
   150a8:	and	x22, x0, x22
   150ac:	str	x22, [x28]
   150b0:	cmp	w20, #0x5
   150b4:	mov	w22, #0x0                   	// #0
   150b8:	b.eq	150cc <mpfr_add1sp@@Base+0xdac>  // b.none
   150bc:	cbnz	w20, 151b8 <mpfr_add1sp@@Base+0xe98>
   150c0:	cbnz	x6, 151ac <mpfr_add1sp@@Base+0xe8c>
   150c4:	cmp	x9, #0x0
   150c8:	csetm	w22, ne  // ne = any
   150cc:	mrs	x23, tpidr_el0
   150d0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   150d4:	ldr	x2, [x0, #2560]
   150d8:	add	x0, x0, #0xa00
   150dc:	blr	x2
   150e0:	ldr	x1, [x29, #152]
   150e4:	ldr	x0, [x23, x0]
   150e8:	cmp	x0, x19
   150ec:	b.ge	151f4 <mpfr_add1sp@@Base+0xed4>  // b.tcont
   150f0:	cbz	x1, 150fc <mpfr_add1sp@@Base+0xddc>
   150f4:	mov	x0, x1
   150f8:	bl	c4a0 <mpfr_tmp_free@plt>
   150fc:	ldr	w2, [x21, #8]
   15100:	b	143e0 <mpfr_add1sp@@Base+0xc0>
   15104:	sub	x6, x24, x0
   15108:	lsl	x9, x0, #3
   1510c:	mov	x2, x6
   15110:	add	x1, x1, x0, lsl #3
   15114:	mov	x0, x26
   15118:	stp	x9, x6, [x29, #104]
   1511c:	bl	bd60 <__gmpn_rshift@plt>
   15120:	ldp	x9, x6, [x29, #104]
   15124:	mov	w1, #0x0                   	// #0
   15128:	mov	x2, x9
   1512c:	add	x0, x26, x6, lsl #3
   15130:	b	14f54 <mpfr_add1sp@@Base+0xc34>
   15134:	sub	x2, x25, x28
   15138:	mov	x3, #0x40                  	// #64
   1513c:	ldr	x1, [x29, #136]
   15140:	mov	x9, #0x1                   	// #1
   15144:	sdiv	x3, x2, x3
   15148:	ldr	x8, [x22, #24]
   1514c:	sub	x3, x1, x3
   15150:	negs	x1, x2
   15154:	and	x1, x1, #0x3f
   15158:	and	x2, x2, #0x3f
   1515c:	csneg	x2, x2, x1, mi  // mi = first
   15160:	mov	x1, #0x3f                  	// #63
   15164:	ldr	x7, [x8, x3, lsl #3]
   15168:	sub	x2, x1, x2
   1516c:	mov	x1, #0xffffffffffffffff    	// #-1
   15170:	lsl	x6, x9, x2
   15174:	and	x6, x6, x7
   15178:	lsl	x2, x1, x2
   1517c:	bics	xzr, x7, x2
   15180:	b.ne	1501c <mpfr_add1sp@@Base+0xcfc>  // b.any
   15184:	subs	x3, x3, #0x1
   15188:	b.mi	15014 <mpfr_add1sp@@Base+0xcf4>  // b.first
   1518c:	ldr	x1, [x8, x3, lsl #3]
   15190:	cbz	x1, 15184 <mpfr_add1sp@@Base+0xe64>
   15194:	b	15014 <mpfr_add1sp@@Base+0xcf4>
   15198:	mov	x9, #0x0                   	// #0
   1519c:	mov	x6, #0x0                   	// #0
   151a0:	b	1501c <mpfr_add1sp@@Base+0xcfc>
   151a4:	mov	x9, x10
   151a8:	b	1501c <mpfr_add1sp@@Base+0xcfc>
   151ac:	cbnz	x9, 14e90 <mpfr_add1sp@@Base+0xb70>
   151b0:	ldr	x0, [x28]
   151b4:	b	14dc8 <mpfr_add1sp@@Base+0xaa8>
   151b8:	ldr	w0, [x29, #132]
   151bc:	orr	x3, x6, x9
   151c0:	add	w26, w0, w20
   151c4:	cmp	w26, #0x3
   151c8:	csinc	w20, w20, wzr, ne  // ne = any
   151cc:	cmp	x3, #0x0
   151d0:	ccmp	w20, #0x1, #0x4, ne  // ne = any
   151d4:	b.ne	14e90 <mpfr_add1sp@@Base+0xb70>  // b.any
   151d8:	cmp	x3, #0x0
   151dc:	b	150c8 <mpfr_add1sp@@Base+0xda8>
   151e0:	mov	w22, #0x0                   	// #0
   151e4:	b	150cc <mpfr_add1sp@@Base+0xdac>
   151e8:	mov	w20, w1
   151ec:	mov	w22, #0xffffffff            	// #-1
   151f0:	b	150cc <mpfr_add1sp@@Base+0xdac>
   151f4:	str	x19, [x21, #16]
   151f8:	cbz	x1, 15204 <mpfr_add1sp@@Base+0xee4>
   151fc:	mov	x0, x1
   15200:	bl	c4a0 <mpfr_tmp_free@plt>
   15204:	ldr	w0, [x21, #8]
   15208:	mul	w2, w22, w0
   1520c:	cbz	w2, 144e0 <mpfr_add1sp@@Base+0x1c0>
   15210:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   15214:	ldr	x1, [x0, #2592]
   15218:	add	x0, x0, #0xa20
   1521c:	blr	x1
   15220:	add	x0, x23, x0
   15224:	b	149a8 <mpfr_add1sp@@Base+0x688>
   15228:	ldr	x0, [x27, #24]
   1522c:	ldr	x0, [x0]
   15230:	lsr	x0, x0, x23
   15234:	tbz	w0, #0, 14e24 <mpfr_add1sp@@Base+0xb04>
   15238:	b	14e74 <mpfr_add1sp@@Base+0xb54>

000000000001523c <mpfr_set_ui_2exp@@Base>:
   1523c:	stp	x29, x30, [sp, #-96]!
   15240:	mov	x29, sp
   15244:	stp	x19, x20, [sp, #16]
   15248:	mov	x19, x0
   1524c:	mov	w0, #0x1                   	// #1
   15250:	stp	x21, x22, [sp, #32]
   15254:	stp	x23, x24, [sp, #48]
   15258:	stp	x25, x26, [sp, #64]
   1525c:	str	w0, [x19, #8]
   15260:	cbnz	x1, 15288 <mpfr_set_ui_2exp@@Base+0x4c>
   15264:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   15268:	str	x0, [x19, #16]
   1526c:	mov	w0, w1
   15270:	ldp	x19, x20, [sp, #16]
   15274:	ldp	x21, x22, [sp, #32]
   15278:	ldp	x23, x24, [sp, #48]
   1527c:	ldp	x25, x26, [sp, #64]
   15280:	ldp	x29, x30, [sp], #96
   15284:	ret
   15288:	ldr	x0, [x19]
   1528c:	mov	x22, #0x40                  	// #64
   15290:	ldr	x24, [x19, #24]
   15294:	sub	x0, x0, #0x1
   15298:	clz	x26, x1
   1529c:	str	wzr, [sp, #92]
   152a0:	mov	x20, x2
   152a4:	mov	w23, w3
   152a8:	sdiv	x0, x0, x22
   152ac:	lsl	x1, x1, x26
   152b0:	lsl	x25, x0, #3
   152b4:	add	x21, x24, x0, lsl #3
   152b8:	mov	x2, x25
   152bc:	mov	x0, x24
   152c0:	str	x1, [x24, x25]
   152c4:	mov	w1, #0x0                   	// #0
   152c8:	bl	c1a0 <memset@plt>
   152cc:	ldr	x4, [x19]
   152d0:	sub	w0, w22, w26
   152d4:	sxtw	x2, w0
   152d8:	add	x20, x20, w0, sxtw
   152dc:	cmp	x4, w0, sxtw
   152e0:	b.ge	1530c <mpfr_set_ui_2exp@@Base+0xd0>  // b.tcont
   152e4:	add	x6, sp, #0x5c
   152e8:	mov	w5, w23
   152ec:	mov	x1, x21
   152f0:	mov	x0, x21
   152f4:	mov	w3, #0x0                   	// #0
   152f8:	bl	cab0 <mpfr_round_raw@plt>
   152fc:	cbz	w0, 1530c <mpfr_set_ui_2exp@@Base+0xd0>
   15300:	add	x20, x20, #0x1
   15304:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   15308:	str	x0, [x24, x25]
   1530c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   15310:	ldr	x2, [x0, #2528]
   15314:	add	x0, x0, #0x9e0
   15318:	blr	x2
   1531c:	str	x20, [x19, #16]
   15320:	mrs	x2, tpidr_el0
   15324:	ldr	w1, [sp, #92]
   15328:	ldr	x0, [x2, x0]
   1532c:	cmp	x0, x20
   15330:	b.gt	15378 <mpfr_set_ui_2exp@@Base+0x13c>
   15334:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   15338:	ldr	x3, [x0, #2560]
   1533c:	add	x0, x0, #0xa00
   15340:	blr	x3
   15344:	ldr	x0, [x2, x0]
   15348:	cmp	x0, x20
   1534c:	b.lt	15378 <mpfr_set_ui_2exp@@Base+0x13c>  // b.tstop
   15350:	cbz	w1, 1526c <mpfr_set_ui_2exp@@Base+0x30>
   15354:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   15358:	ldr	x3, [x0, #2592]
   1535c:	add	x0, x0, #0xa20
   15360:	blr	x3
   15364:	add	x0, x2, x0
   15368:	ldr	w2, [x0]
   1536c:	orr	w2, w2, #0x8
   15370:	str	w2, [x0]
   15374:	b	1526c <mpfr_set_ui_2exp@@Base+0x30>
   15378:	mov	w2, w23
   1537c:	mov	x0, x19
   15380:	bl	cbc0 <mpfr_check_range@plt>
   15384:	mov	w1, w0
   15388:	b	1526c <mpfr_set_ui_2exp@@Base+0x30>

000000000001538c <mpfr_mpz_init@@Base>:
   1538c:	stp	x29, x30, [sp, #-16]!
   15390:	mov	x2, x0
   15394:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   15398:	ldr	x1, [x0, #2512]
   1539c:	add	x0, x0, #0x9d0
   153a0:	blr	x1
   153a4:	mrs	x1, tpidr_el0
   153a8:	mov	x29, sp
   153ac:	add	x3, x1, x0
   153b0:	ldr	w1, [x1, x0]
   153b4:	cmp	w1, #0x0
   153b8:	b.le	153e0 <mpfr_mpz_init@@Base+0x54>
   153bc:	mov	x0, x3
   153c0:	sub	w1, w1, #0x1
   153c4:	str	w1, [x0], #8
   153c8:	add	x1, x0, w1, sxtw #4
   153cc:	ldp	x0, x1, [x1]
   153d0:	stp	x0, x1, [x2]
   153d4:	ldp	x29, x30, [sp], #16
   153d8:	str	wzr, [x2, #4]
   153dc:	ret
   153e0:	ldp	x29, x30, [sp], #16
   153e4:	mov	x0, x2
   153e8:	b	cbe0 <__gmpz_init@plt>

00000000000153ec <mpfr_mpz_init2@@Base>:
   153ec:	stp	x29, x30, [sp, #-16]!
   153f0:	mov	x3, x0
   153f4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   153f8:	ldr	x2, [x0, #2512]
   153fc:	add	x0, x0, #0x9d0
   15400:	blr	x2
   15404:	mrs	x2, tpidr_el0
   15408:	mov	x29, sp
   1540c:	add	x4, x2, x0
   15410:	ldr	w2, [x2, x0]
   15414:	cmp	w2, #0x0
   15418:	b.le	15448 <mpfr_mpz_init2@@Base+0x5c>
   1541c:	cmp	x1, #0x800
   15420:	b.hi	15448 <mpfr_mpz_init2@@Base+0x5c>  // b.pmore
   15424:	mov	x0, x4
   15428:	sub	w2, w2, #0x1
   1542c:	str	w2, [x0], #8
   15430:	add	x2, x0, w2, sxtw #4
   15434:	ldp	x0, x1, [x2]
   15438:	stp	x0, x1, [x3]
   1543c:	ldp	x29, x30, [sp], #16
   15440:	str	wzr, [x3, #4]
   15444:	ret
   15448:	ldp	x29, x30, [sp], #16
   1544c:	mov	x0, x3
   15450:	b	cb20 <__gmpz_init2@plt>

0000000000015454 <mpfr_mpz_clear@@Base>:
   15454:	mrs	x3, tpidr_el0
   15458:	stp	x29, x30, [sp, #-16]!
   1545c:	mov	x1, x0
   15460:	mov	x29, sp
   15464:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   15468:	ldr	x2, [x0, #2512]
   1546c:	add	x0, x0, #0x9d0
   15470:	blr	x2
   15474:	add	x2, x3, x0
   15478:	ldr	w0, [x3, x0]
   1547c:	sxtw	x3, w0
   15480:	cmp	x3, #0x1f
   15484:	b.hi	154b4 <mpfr_mpz_clear@@Base+0x60>  // b.pmore
   15488:	ldr	w4, [x1]
   1548c:	cmp	w4, #0x20
   15490:	b.gt	154b4 <mpfr_mpz_clear@@Base+0x60>
   15494:	add	w4, w0, #0x1
   15498:	mov	x0, x2
   1549c:	str	w4, [x0], #8
   154a0:	ldp	x4, x5, [x1]
   154a4:	add	x0, x0, x3, lsl #4
   154a8:	stp	x4, x5, [x0]
   154ac:	ldp	x29, x30, [sp], #16
   154b0:	ret
   154b4:	ldp	x29, x30, [sp], #16
   154b8:	mov	x0, x1
   154bc:	b	c6d0 <__gmpz_clear@plt>
   154c0:	adrp	x0, 73000 <__gmpfr_l2b@@Base+0x200>
   154c4:	ldr	x0, [x0, #4024]
   154c8:	cbz	x0, 154d0 <mpfr_mpz_clear@@Base+0x7c>
   154cc:	b	c420 <__gmon_start__@plt>
   154d0:	ret
   154d4:	nop
   154d8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   154dc:	add	x0, x0, #0xa78
   154e0:	adrp	x1, 74000 <mpfr_agm@@Base+0x5e674>
   154e4:	add	x1, x1, #0xa78
   154e8:	cmp	x1, x0
   154ec:	b.eq	15504 <mpfr_mpz_clear@@Base+0xb0>  // b.none
   154f0:	adrp	x1, 73000 <__gmpfr_l2b@@Base+0x200>
   154f4:	ldr	x1, [x1, #3936]
   154f8:	cbz	x1, 15504 <mpfr_mpz_clear@@Base+0xb0>
   154fc:	mov	x16, x1
   15500:	br	x16
   15504:	ret
   15508:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1550c:	add	x0, x0, #0xa78
   15510:	adrp	x1, 74000 <mpfr_agm@@Base+0x5e674>
   15514:	add	x1, x1, #0xa78
   15518:	sub	x1, x1, x0
   1551c:	lsr	x2, x1, #63
   15520:	add	x1, x2, x1, asr #3
   15524:	cmp	xzr, x1, asr #1
   15528:	asr	x1, x1, #1
   1552c:	b.eq	15544 <mpfr_mpz_clear@@Base+0xf0>  // b.none
   15530:	adrp	x2, 73000 <__gmpfr_l2b@@Base+0x200>
   15534:	ldr	x2, [x2, #4056]
   15538:	cbz	x2, 15544 <mpfr_mpz_clear@@Base+0xf0>
   1553c:	mov	x16, x2
   15540:	br	x16
   15544:	ret
   15548:	stp	x29, x30, [sp, #-32]!
   1554c:	mov	x29, sp
   15550:	str	x19, [sp, #16]
   15554:	adrp	x19, 74000 <mpfr_agm@@Base+0x5e674>
   15558:	ldrb	w0, [x19, #2680]
   1555c:	cbnz	w0, 15584 <mpfr_mpz_clear@@Base+0x130>
   15560:	adrp	x0, 73000 <__gmpfr_l2b@@Base+0x200>
   15564:	ldr	x0, [x0, #3952]
   15568:	cbz	x0, 15578 <mpfr_mpz_clear@@Base+0x124>
   1556c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   15570:	ldr	x0, [x0, #2672]
   15574:	bl	bd80 <__cxa_finalize@plt>
   15578:	bl	154d8 <mpfr_mpz_clear@@Base+0x84>
   1557c:	mov	w0, #0x1                   	// #1
   15580:	strb	w0, [x19, #2680]
   15584:	ldr	x19, [sp, #16]
   15588:	ldp	x29, x30, [sp], #32
   1558c:	ret
   15590:	b	15508 <mpfr_mpz_clear@@Base+0xb4>

0000000000015594 <mpfr_set_emin@@Base>:
   15594:	mov	x1, x0
   15598:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   1559c:	add	x0, x1, x0
   155a0:	mov	x2, #0x7ffffffffffffffe    	// #9223372036854775806
   155a4:	cmp	x0, x2
   155a8:	b.hi	155d8 <mpfr_set_emin@@Base+0x44>  // b.pmore
   155ac:	stp	x29, x30, [sp, #-16]!
   155b0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   155b4:	ldr	x2, [x0, #2528]
   155b8:	add	x0, x0, #0x9e0
   155bc:	blr	x2
   155c0:	mrs	x2, tpidr_el0
   155c4:	mov	x29, sp
   155c8:	str	x1, [x2, x0]
   155cc:	mov	w0, #0x0                   	// #0
   155d0:	ldp	x29, x30, [sp], #16
   155d4:	ret
   155d8:	mov	w0, #0x1                   	// #1
   155dc:	ret

00000000000155e0 <mpfr_set_emax@@Base>:
   155e0:	mov	x1, x0
   155e4:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   155e8:	add	x0, x1, x0
   155ec:	mov	x2, #0x7ffffffffffffffe    	// #9223372036854775806
   155f0:	cmp	x0, x2
   155f4:	b.hi	15624 <mpfr_set_emax@@Base+0x44>  // b.pmore
   155f8:	stp	x29, x30, [sp, #-16]!
   155fc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   15600:	ldr	x2, [x0, #2560]
   15604:	add	x0, x0, #0xa00
   15608:	blr	x2
   1560c:	mrs	x2, tpidr_el0
   15610:	mov	x29, sp
   15614:	str	x1, [x2, x0]
   15618:	mov	w0, #0x0                   	// #0
   1561c:	ldp	x29, x30, [sp], #16
   15620:	ret
   15624:	mov	w0, #0x1                   	// #1
   15628:	ret

000000000001562c <mpfr_clear_flags@@Base>:
   1562c:	stp	x29, x30, [sp, #-16]!
   15630:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   15634:	ldr	x1, [x0, #2592]
   15638:	add	x0, x0, #0xa20
   1563c:	blr	x1
   15640:	mrs	x1, tpidr_el0
   15644:	mov	x29, sp
   15648:	str	wzr, [x1, x0]
   1564c:	ldp	x29, x30, [sp], #16
   15650:	ret

0000000000015654 <mpfr_check_range@@Base>:
   15654:	stp	x29, x30, [sp, #-32]!
   15658:	mov	x29, sp
   1565c:	stp	x19, x20, [sp, #16]
   15660:	mov	w19, w1
   15664:	mov	w1, w2
   15668:	ldr	x2, [x0, #16]
   1566c:	mov	x20, x0
   15670:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   15674:	cmp	x2, x0
   15678:	b.le	15724 <mpfr_check_range@@Base+0xd0>
   1567c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   15680:	ldr	x3, [x0, #2528]
   15684:	add	x0, x0, #0x9e0
   15688:	blr	x3
   1568c:	mrs	x3, tpidr_el0
   15690:	ldr	x0, [x3, x0]
   15694:	cmp	x2, x0
   15698:	b.ge	156f4 <mpfr_check_range@@Base+0xa0>  // b.tcont
   1569c:	cbnz	w1, 156cc <mpfr_check_range@@Base+0x78>
   156a0:	add	x2, x2, #0x1
   156a4:	cmp	x0, x2
   156a8:	b.gt	156ec <mpfr_check_range@@Base+0x98>
   156ac:	mov	x0, x20
   156b0:	bl	bf80 <mpfr_powerof2_raw@plt>
   156b4:	mov	w1, w0
   156b8:	cbz	w0, 156cc <mpfr_check_range@@Base+0x78>
   156bc:	ldr	w0, [x20, #8]
   156c0:	tbz	w0, #31, 156e0 <mpfr_check_range@@Base+0x8c>
   156c4:	cmp	w19, #0x0
   156c8:	cset	w1, le
   156cc:	ldr	w2, [x20, #8]
   156d0:	mov	x0, x20
   156d4:	ldp	x19, x20, [sp, #16]
   156d8:	ldp	x29, x30, [sp], #32
   156dc:	b	c450 <mpfr_underflow@plt>
   156e0:	mvn	w1, w19
   156e4:	lsr	w1, w1, #31
   156e8:	b	156cc <mpfr_check_range@@Base+0x78>
   156ec:	mov	w1, #0x1                   	// #1
   156f0:	b	156cc <mpfr_check_range@@Base+0x78>
   156f4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   156f8:	ldr	x4, [x0, #2560]
   156fc:	add	x0, x0, #0xa00
   15700:	blr	x4
   15704:	ldr	x0, [x3, x0]
   15708:	cmp	x2, x0
   1570c:	b.le	15778 <mpfr_check_range@@Base+0x124>
   15710:	ldr	w2, [x20, #8]
   15714:	mov	x0, x20
   15718:	ldp	x19, x20, [sp, #16]
   1571c:	ldp	x29, x30, [sp], #32
   15720:	b	bfc0 <mpfr_overflow@plt>
   15724:	cbz	w19, 1577c <mpfr_check_range@@Base+0x128>
   15728:	b.ne	15750 <mpfr_check_range@@Base+0xfc>  // b.any
   1572c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   15730:	ldr	x1, [x0, #2592]
   15734:	add	x0, x0, #0xa20
   15738:	blr	x1
   1573c:	mrs	x1, tpidr_el0
   15740:	add	x0, x1, x0
   15744:	ldr	w1, [x0]
   15748:	orr	w1, w1, #0x2
   1574c:	str	w1, [x0]
   15750:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   15754:	ldr	x1, [x0, #2592]
   15758:	add	x0, x0, #0xa20
   1575c:	blr	x1
   15760:	mrs	x1, tpidr_el0
   15764:	add	x0, x1, x0
   15768:	ldr	w1, [x0]
   1576c:	orr	w1, w1, #0x8
   15770:	str	w1, [x0]
   15774:	b	1577c <mpfr_check_range@@Base+0x128>
   15778:	cbnz	w19, 15750 <mpfr_check_range@@Base+0xfc>
   1577c:	mov	w0, w19
   15780:	ldp	x19, x20, [sp, #16]
   15784:	ldp	x29, x30, [sp], #32
   15788:	ret

000000000001578c <mpfr_extract@@Base>:
   1578c:	stp	x29, x30, [sp, #-64]!
   15790:	cmp	w2, #0x0
   15794:	mov	x29, sp
   15798:	stp	x19, x20, [sp, #16]
   1579c:	ldr	x19, [x1]
   157a0:	stp	x21, x22, [sp, #32]
   157a4:	mov	x21, x0
   157a8:	mov	x0, #0x1                   	// #1
   157ac:	sub	x19, x19, #0x1
   157b0:	str	x23, [sp, #48]
   157b4:	lsl	x23, x0, x2
   157b8:	lsr	x20, x23, #1
   157bc:	asr	x19, x19, #6
   157c0:	csel	x20, x20, x0, ne  // ne = any
   157c4:	cmp	x23, #0x0
   157c8:	add	x19, x19, x0
   157cc:	mov	x22, x1
   157d0:	mov	x0, #0x7fffffff            	// #2147483647
   157d4:	ccmp	x20, x0, #0x2, ne  // ne = any
   157d8:	b.ls	157f4 <mpfr_extract@@Base+0x68>  // b.plast
   157dc:	adrp	x2, 53000 <mpfr_free_pool@@Base+0x1eec>
   157e0:	adrp	x0, 53000 <mpfr_free_pool@@Base+0x1eec>
   157e4:	add	x2, x2, #0x7d0
   157e8:	add	x0, x0, #0x7f4
   157ec:	mov	w1, #0x28                  	// #40
   157f0:	bl	cbd0 <mpfr_assert_fail@plt>
   157f4:	mov	x0, x21
   157f8:	lsl	x1, x20, #6
   157fc:	bl	c4d0 <__gmpz_realloc2@plt>
   15800:	cmp	x19, x23
   15804:	ldr	x0, [x21, #8]
   15808:	b.cs	1586c <mpfr_extract@@Base+0xe0>  // b.hs, b.nlast
   1580c:	lsl	x2, x20, #3
   15810:	mov	w1, #0x0                   	// #0
   15814:	bl	c1a0 <memset@plt>
   15818:	cmp	x19, x20
   1581c:	b.cc	15844 <mpfr_extract@@Base+0xb8>  // b.lo, b.ul, b.last
   15820:	ldr	x0, [x21, #8]
   15824:	sub	x23, x23, x19
   15828:	ldr	x1, [x22, #24]
   1582c:	add	x0, x0, x23, lsl #3
   15830:	cmp	x0, x1
   15834:	b.eq	15844 <mpfr_extract@@Base+0xb8>  // b.none
   15838:	sub	x2, x19, x20
   1583c:	lsl	x2, x2, #3
   15840:	bl	ba90 <memcpy@plt>
   15844:	cbnz	x20, 15888 <mpfr_extract@@Base+0xfc>
   15848:	ldr	w0, [x22, #8]
   1584c:	ldr	x23, [sp, #48]
   15850:	cmp	w0, #0x0
   15854:	cneg	w20, w20, lt  // lt = tstop
   15858:	str	w20, [x21, #4]
   1585c:	ldp	x19, x20, [sp, #16]
   15860:	ldp	x21, x22, [sp, #32]
   15864:	ldp	x29, x30, [sp], #64
   15868:	ret
   1586c:	ldr	x1, [x22, #24]
   15870:	sub	x19, x19, x23
   15874:	add	x1, x1, x19, lsl #3
   15878:	cmp	x0, x1
   1587c:	b.eq	15844 <mpfr_extract@@Base+0xb8>  // b.none
   15880:	lsl	x2, x20, #3
   15884:	b	15840 <mpfr_extract@@Base+0xb4>
   15888:	ldr	x0, [x21, #8]
   1588c:	add	x0, x0, x20, lsl #3
   15890:	ldur	x0, [x0, #-8]
   15894:	cbnz	x0, 15848 <mpfr_extract@@Base+0xbc>
   15898:	sub	x20, x20, #0x1
   1589c:	b	15844 <mpfr_extract@@Base+0xb8>

00000000000158a0 <__gmpfr_ceil_exp2@@Base>:
   158a0:	mov	x0, #0x4090000000000000    	// #4652218415073722368
   158a4:	fmov	d1, x0
   158a8:	fcmpe	d0, d1
   158ac:	b.ls	158d0 <__gmpfr_ceil_exp2@@Base+0x30>  // b.plast
   158b0:	stp	x29, x30, [sp, #-16]!
   158b4:	adrp	x2, 53000 <mpfr_free_pool@@Base+0x1eec>
   158b8:	adrp	x0, 53000 <mpfr_free_pool@@Base+0x1eec>
   158bc:	mov	x29, sp
   158c0:	add	x2, x2, #0x7fe
   158c4:	add	x0, x0, #0x80a
   158c8:	mov	w1, #0x26                  	// #38
   158cc:	bl	cbd0 <mpfr_assert_fail@plt>
   158d0:	fcvtzs	x0, d0
   158d4:	scvtf	d1, x0
   158d8:	fcmp	d1, d0
   158dc:	b.eq	158e4 <__gmpfr_ceil_exp2@@Base+0x44>  // b.none
   158e0:	add	x0, x0, #0x1
   158e4:	cmn	x0, #0x3fe
   158e8:	mov	x1, #0xfffffffffffffc02    	// #-1022
   158ec:	csel	x0, x0, x1, ge  // ge = tcont
   158f0:	add	w0, w0, #0x3ff
   158f4:	ubfiz	x0, x0, #52, #11
   158f8:	fmov	d0, x0
   158fc:	ret

0000000000015900 <__gmpfr_ceil_log2@@Base>:
   15900:	fmov	x1, d0
   15904:	ubfx	x2, x1, #52, #11
   15908:	sub	x0, x2, #0x3ff
   1590c:	cmp	x0, #0x3fe
   15910:	b.le	15934 <__gmpfr_ceil_log2@@Base+0x34>
   15914:	stp	x29, x30, [sp, #-16]!
   15918:	adrp	x2, 53000 <mpfr_free_pool@@Base+0x1eec>
   1591c:	adrp	x0, 53000 <mpfr_free_pool@@Base+0x1eec>
   15920:	mov	x29, sp
   15924:	add	x2, x2, #0x817
   15928:	add	x0, x0, #0x822
   1592c:	mov	w1, #0x28                  	// #40
   15930:	bl	cbd0 <mpfr_assert_fail@plt>
   15934:	mov	x3, #0x3ff                 	// #1023
   15938:	fmov	d0, #1.000000000000000000e+00
   1593c:	bfi	x1, x3, #52, #11
   15940:	fmov	d1, x1
   15944:	fcmp	d1, d0
   15948:	b.eq	15950 <__gmpfr_ceil_log2@@Base+0x50>  // b.none
   1594c:	sub	x0, x2, #0x3fe
   15950:	ret

0000000000015954 <__gmpfr_floor_log2@@Base>:
   15954:	fmov	x0, d0
   15958:	ubfx	x0, x0, #52, #11
   1595c:	sub	x0, x0, #0x3ff
   15960:	cmp	x0, #0x3fe
   15964:	b.le	15988 <__gmpfr_floor_log2@@Base+0x34>
   15968:	stp	x29, x30, [sp, #-16]!
   1596c:	adrp	x2, 53000 <mpfr_free_pool@@Base+0x1eec>
   15970:	adrp	x0, 53000 <mpfr_free_pool@@Base+0x1eec>
   15974:	mov	x29, sp
   15978:	add	x2, x2, #0x817
   1597c:	add	x0, x0, #0x82f
   15980:	mov	w1, #0x25                  	// #37
   15984:	bl	cbd0 <mpfr_assert_fail@plt>
   15988:	ret

000000000001598c <mpfr_agm@@Base>:
   1598c:	stp	x29, x30, [sp, #-432]!
   15990:	mov	x29, sp
   15994:	stp	x21, x22, [sp, #32]
   15998:	mov	x22, x0
   1599c:	mov	x21, x1
   159a0:	ldr	x0, [x2, #16]
   159a4:	stp	x19, x20, [sp, #16]
   159a8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   159ac:	stp	x23, x24, [sp, #48]
   159b0:	mov	x20, x2
   159b4:	cmp	x0, x1
   159b8:	stp	x25, x26, [sp, #64]
   159bc:	stp	x27, x28, [sp, #80]
   159c0:	str	w3, [x29, #172]
   159c4:	b.le	15a3c <mpfr_agm@@Base+0xb0>
   159c8:	ldr	x2, [x21, #16]
   159cc:	cmp	x2, x1
   159d0:	b.gt	15ab4 <mpfr_agm@@Base+0x128>
   159d4:	ldr	x1, [x21, #16]
   159d8:	mov	x2, #0x2                   	// #2
   159dc:	movk	x2, #0x8000, lsl #48
   159e0:	cmp	x1, x2
   159e4:	b.eq	15a4c <mpfr_agm@@Base+0xc0>  // b.none
   159e8:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   159ec:	cmp	x0, x2
   159f0:	b.eq	15a08 <mpfr_agm@@Base+0x7c>  // b.none
   159f4:	cmp	x1, x2
   159f8:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   159fc:	b.ne	15aa4 <mpfr_agm@@Base+0x118>  // b.any
   15a00:	cmp	x0, x2
   15a04:	b.eq	15a4c <mpfr_agm@@Base+0xc0>  // b.none
   15a08:	ldr	w0, [x20, #8]
   15a0c:	cmp	w0, #0x0
   15a10:	b.le	15a4c <mpfr_agm@@Base+0xc0>
   15a14:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   15a18:	cmp	x1, x2
   15a1c:	b.eq	15a4c <mpfr_agm@@Base+0xc0>  // b.none
   15a20:	ldr	w1, [x21, #8]
   15a24:	cmp	w1, #0x0
   15a28:	b.le	15a4c <mpfr_agm@@Base+0xc0>
   15a2c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   15a30:	str	w0, [x22, #8]
   15a34:	str	x1, [x22, #16]
   15a38:	b	15a7c <mpfr_agm@@Base+0xf0>
   15a3c:	mov	x1, #0x2                   	// #2
   15a40:	movk	x1, #0x8000, lsl #48
   15a44:	cmp	x0, x1
   15a48:	b.ne	159d4 <mpfr_agm@@Base+0x48>  // b.any
   15a4c:	mov	x0, #0x2                   	// #2
   15a50:	movk	x0, #0x8000, lsl #48
   15a54:	str	x0, [x22, #16]
   15a58:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   15a5c:	ldr	x1, [x0, #2592]
   15a60:	add	x0, x0, #0xa20
   15a64:	blr	x1
   15a68:	mrs	x1, tpidr_el0
   15a6c:	add	x0, x1, x0
   15a70:	ldr	w1, [x0]
   15a74:	orr	w1, w1, #0x4
   15a78:	str	w1, [x0]
   15a7c:	mov	w20, #0x0                   	// #0
   15a80:	mov	sp, x29
   15a84:	mov	w0, w20
   15a88:	ldp	x19, x20, [sp, #16]
   15a8c:	ldp	x21, x22, [sp, #32]
   15a90:	ldp	x23, x24, [sp, #48]
   15a94:	ldp	x25, x26, [sp, #64]
   15a98:	ldp	x27, x28, [sp, #80]
   15a9c:	ldp	x29, x30, [sp], #432
   15aa0:	ret
   15aa4:	mov	w0, #0x1                   	// #1
   15aa8:	str	w0, [x22, #8]
   15aac:	str	x2, [x22, #16]
   15ab0:	b	15a7c <mpfr_agm@@Base+0xf0>
   15ab4:	ldr	w0, [x20, #8]
   15ab8:	tbnz	w0, #31, 15a4c <mpfr_agm@@Base+0xc0>
   15abc:	ldr	w0, [x21, #8]
   15ac0:	tbnz	w0, #31, 15a4c <mpfr_agm@@Base+0xc0>
   15ac4:	ldr	x0, [x22]
   15ac8:	str	x0, [x29, #176]
   15acc:	cmp	x0, #0x1
   15ad0:	b.eq	15b58 <mpfr_agm@@Base+0x1cc>  // b.none
   15ad4:	b.gt	15af0 <mpfr_agm@@Base+0x164>
   15ad8:	adrp	x2, 53000 <mpfr_free_pool@@Base+0x1eec>
   15adc:	add	x2, x2, #0x85a
   15ae0:	mov	w1, #0x5f                  	// #95
   15ae4:	adrp	x0, 53000 <mpfr_free_pool@@Base+0x1eec>
   15ae8:	add	x0, x0, #0x862
   15aec:	bl	cbd0 <mpfr_assert_fail@plt>
   15af0:	ldr	x0, [x29, #176]
   15af4:	sub	x24, x0, #0x1
   15af8:	clz	x0, x24
   15afc:	mov	w24, #0x40                  	// #64
   15b00:	sub	w24, w24, w0
   15b04:	sxtw	x24, w24
   15b08:	ldr	x0, [x29, #176]
   15b0c:	mov	x1, #0x40                  	// #64
   15b10:	mov	w2, #0x1                   	// #1
   15b14:	add	x24, x24, x0
   15b18:	mov	x0, x20
   15b1c:	add	x23, x24, #0xf
   15b20:	add	x24, x24, #0xe
   15b24:	sdiv	x24, x24, x1
   15b28:	mov	x1, x21
   15b2c:	bl	ca30 <mpfr_cmp3@plt>
   15b30:	cmp	w0, #0x0
   15b34:	add	x24, x24, #0x1
   15b38:	cbnz	w0, 15b60 <mpfr_agm@@Base+0x1d4>
   15b3c:	ldr	w3, [x20, #8]
   15b40:	mov	x1, x20
   15b44:	ldr	w2, [x29, #172]
   15b48:	mov	x0, x22
   15b4c:	bl	c730 <mpfr_set4@plt>
   15b50:	mov	w20, w0
   15b54:	b	15a80 <mpfr_agm@@Base+0xf4>
   15b58:	mov	x24, #0x0                   	// #0
   15b5c:	b	15b08 <mpfr_agm@@Base+0x17c>
   15b60:	b.le	15b70 <mpfr_agm@@Base+0x1e4>
   15b64:	mov	x0, x21
   15b68:	mov	x21, x20
   15b6c:	mov	x20, x0
   15b70:	mrs	x19, tpidr_el0
   15b74:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   15b78:	ldr	x1, [x0, #2592]
   15b7c:	add	x0, x0, #0xa20
   15b80:	blr	x1
   15b84:	mov	x27, #0x0                   	// #0
   15b88:	str	xzr, [x29, #192]
   15b8c:	ldr	w0, [x19, x0]
   15b90:	str	w0, [x29, #168]
   15b94:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   15b98:	ldr	x1, [x0, #2528]
   15b9c:	add	x0, x0, #0x9e0
   15ba0:	blr	x1
   15ba4:	add	x1, x19, x0
   15ba8:	ldr	x0, [x19, x0]
   15bac:	str	x0, [x29, #136]
   15bb0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   15bb4:	ldr	x2, [x0, #2560]
   15bb8:	add	x0, x0, #0xa00
   15bbc:	blr	x2
   15bc0:	ldr	x2, [x19, x0]
   15bc4:	str	x2, [x29, #128]
   15bc8:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   15bcc:	str	x2, [x1]
   15bd0:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   15bd4:	str	x1, [x19, x0]
   15bd8:	mov	x0, #0x40                  	// #64
   15bdc:	str	x0, [x29, #144]
   15be0:	add	x0, x29, #0xc0
   15be4:	str	x0, [x29, #160]
   15be8:	add	x0, x29, #0x110
   15bec:	str	x0, [x29, #120]
   15bf0:	lsl	x24, x24, #3
   15bf4:	cmp	x24, #0x4, lsl #12
   15bf8:	b.hi	15d18 <mpfr_agm@@Base+0x38c>  // b.pmore
   15bfc:	add	x0, x24, #0xf
   15c00:	and	x0, x0, #0xfffffffffffffff0
   15c04:	sub	sp, sp, x0
   15c08:	mov	x0, sp
   15c0c:	str	x23, [x29, #208]
   15c10:	cmp	x24, #0x4, lsl #12
   15c14:	str	x0, [x29, #232]
   15c18:	mov	w0, #0x1                   	// #1
   15c1c:	str	w0, [x29, #216]
   15c20:	b.hi	15d28 <mpfr_agm@@Base+0x39c>  // b.pmore
   15c24:	add	x0, x24, #0xf
   15c28:	and	x0, x0, #0xfffffffffffffff0
   15c2c:	sub	sp, sp, x0
   15c30:	mov	x0, sp
   15c34:	str	x23, [x29, #240]
   15c38:	cmp	x24, #0x4, lsl #12
   15c3c:	str	x0, [x29, #264]
   15c40:	mov	w0, #0x1                   	// #1
   15c44:	str	w0, [x29, #248]
   15c48:	b.hi	15d38 <mpfr_agm@@Base+0x3ac>  // b.pmore
   15c4c:	add	x0, x24, #0xf
   15c50:	and	x0, x0, #0xfffffffffffffff0
   15c54:	sub	sp, sp, x0
   15c58:	mov	x0, sp
   15c5c:	str	x23, [x29, #272]
   15c60:	cmp	x24, #0x4, lsl #12
   15c64:	str	x0, [x29, #296]
   15c68:	mov	w0, #0x1                   	// #1
   15c6c:	str	w0, [x29, #280]
   15c70:	b.hi	15d48 <mpfr_agm@@Base+0x3bc>  // b.pmore
   15c74:	add	x24, x24, #0xf
   15c78:	and	x24, x24, #0xfffffffffffffff0
   15c7c:	sub	sp, sp, x24
   15c80:	mov	x0, sp
   15c84:	adrp	x24, 53000 <mpfr_free_pool@@Base+0x1eec>
   15c88:	mov	x28, #0x2                   	// #2
   15c8c:	add	x26, x29, #0xd0
   15c90:	add	x25, x29, #0xf0
   15c94:	add	x24, x24, #0x914
   15c98:	movk	x28, #0xc000, lsl #48
   15c9c:	str	x23, [x29, #304]
   15ca0:	str	x0, [x29, #328]
   15ca4:	mov	w0, #0x1                   	// #1
   15ca8:	str	w0, [x29, #312]
   15cac:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   15cb0:	ldr	x1, [x0, #2592]
   15cb4:	add	x0, x0, #0xa20
   15cb8:	blr	x1
   15cbc:	add	x4, x19, x0
   15cc0:	mov	x2, x21
   15cc4:	mov	x1, x20
   15cc8:	mov	w3, #0x0                   	// #0
   15ccc:	str	wzr, [x19, x0]
   15cd0:	mov	x0, x26
   15cd4:	str	x4, [x29, #184]
   15cd8:	bl	bdd0 <mpfr_mul@plt>
   15cdc:	mov	x1, x20
   15ce0:	mov	x2, x21
   15ce4:	mov	x0, x25
   15ce8:	mov	w3, #0x0                   	// #0
   15cec:	bl	c230 <mpfr_add@plt>
   15cf0:	ldr	x4, [x29, #184]
   15cf4:	ldr	w0, [x4]
   15cf8:	and	w1, w0, #0x2
   15cfc:	tbnz	w0, #1, 15d04 <mpfr_agm@@Base+0x378>
   15d00:	tbz	w0, #0, 15e68 <mpfr_agm@@Base+0x4dc>
   15d04:	cbz	x27, 15d58 <mpfr_agm@@Base+0x3cc>
   15d08:	adrp	x2, 53000 <mpfr_free_pool@@Base+0x1eec>
   15d0c:	mov	w1, #0x8d                  	// #141
   15d10:	add	x2, x2, #0x868
   15d14:	b	15ae4 <mpfr_agm@@Base+0x158>
   15d18:	ldr	x0, [x29, #160]
   15d1c:	mov	x1, x24
   15d20:	bl	be40 <mpfr_tmp_allocate@plt>
   15d24:	b	15c0c <mpfr_agm@@Base+0x280>
   15d28:	ldr	x0, [x29, #160]
   15d2c:	mov	x1, x24
   15d30:	bl	be40 <mpfr_tmp_allocate@plt>
   15d34:	b	15c34 <mpfr_agm@@Base+0x2a8>
   15d38:	ldr	x0, [x29, #160]
   15d3c:	mov	x1, x24
   15d40:	bl	be40 <mpfr_tmp_allocate@plt>
   15d44:	b	15c5c <mpfr_agm@@Base+0x2d0>
   15d48:	ldr	x0, [x29, #160]
   15d4c:	mov	x1, x24
   15d50:	bl	be40 <mpfr_tmp_allocate@plt>
   15d54:	b	15c84 <mpfr_agm@@Base+0x2f8>
   15d58:	ldr	x4, [x20, #16]
   15d5c:	ldr	x3, [x21, #16]
   15d60:	cbz	w1, 15e04 <mpfr_agm@@Base+0x478>
   15d64:	add	x0, x4, x3
   15d68:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   15d6c:	cmp	x0, x1
   15d70:	b.le	15dd0 <mpfr_agm@@Base+0x444>
   15d74:	add	x0, x0, x28
   15d78:	mov	x1, #0x2                   	// #2
   15d7c:	sdiv	x0, x0, x1
   15d80:	neg	x27, x0
   15d84:	ldr	x0, [x20]
   15d88:	str	x0, [x29, #336]
   15d8c:	ldr	w0, [x20, #8]
   15d90:	add	x4, x27, x4
   15d94:	str	w0, [x29, #344]
   15d98:	add	x3, x27, x3
   15d9c:	ldr	x0, [x20, #24]
   15da0:	str	x0, [x29, #360]
   15da4:	ldr	x0, [x21]
   15da8:	str	x0, [x29, #368]
   15dac:	ldr	w0, [x21, #8]
   15db0:	add	x20, x29, #0x150
   15db4:	str	w0, [x29, #376]
   15db8:	ldr	x0, [x21, #24]
   15dbc:	add	x21, x29, #0x170
   15dc0:	str	x4, [x29, #352]
   15dc4:	str	x3, [x29, #384]
   15dc8:	str	x0, [x29, #392]
   15dcc:	b	15cac <mpfr_agm@@Base+0x320>
   15dd0:	cmp	x3, x1
   15dd4:	b.eq	15de8 <mpfr_agm@@Base+0x45c>  // b.none
   15dd8:	adrp	x2, 53000 <mpfr_free_pool@@Base+0x1eec>
   15ddc:	mov	w1, #0xaf                  	// #175
   15de0:	add	x2, x2, #0x875
   15de4:	b	15ae4 <mpfr_agm@@Base+0x158>
   15de8:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   15dec:	cmp	x4, x0
   15df0:	b.gt	15e60 <mpfr_agm@@Base+0x4d4>
   15df4:	adrp	x2, 53000 <mpfr_free_pool@@Base+0x1eec>
   15df8:	mov	w1, #0xb3                  	// #179
   15dfc:	add	x2, x2, #0x8c5
   15e00:	b	15ae4 <mpfr_agm@@Base+0x158>
   15e04:	cmp	x3, #0x0
   15e08:	ccmp	x4, x3, #0x0, le
   15e0c:	b.le	15e34 <mpfr_agm@@Base+0x4a8>
   15e10:	mov	x2, x24
   15e14:	mov	w1, #0xc1                  	// #193
   15e18:	adrp	x0, 53000 <mpfr_free_pool@@Base+0x1eec>
   15e1c:	add	x0, x0, #0x862
   15e20:	str	x3, [x29, #152]
   15e24:	str	x4, [x29, #184]
   15e28:	bl	cbd0 <mpfr_assert_fail@plt>
   15e2c:	ldr	x3, [x29, #152]
   15e30:	ldr	x4, [x29, #184]
   15e34:	mov	x0, #0xc000000000000003    	// #-4611686018427387901
   15e38:	sub	x0, x0, x4
   15e3c:	mov	x1, #0x2                   	// #2
   15e40:	sub	x0, x0, x3
   15e44:	cmp	x0, #0x1
   15e48:	sdiv	x27, x0, x1
   15e4c:	b.gt	15d84 <mpfr_agm@@Base+0x3f8>
   15e50:	adrp	x2, 53000 <mpfr_free_pool@@Base+0x1eec>
   15e54:	mov	w1, #0xc3                  	// #195
   15e58:	add	x2, x2, #0x928
   15e5c:	b	15ae4 <mpfr_agm@@Base+0x158>
   15e60:	mov	x27, #0xffffffffffffffff    	// #-1
   15e64:	b	15d84 <mpfr_agm@@Base+0x3f8>
   15e68:	mov	x1, x26
   15e6c:	mov	w2, #0x0                   	// #0
   15e70:	mov	x0, x26
   15e74:	str	wzr, [x4]
   15e78:	bl	c9c0 <mpfr_sqrt@plt>
   15e7c:	add	x24, x29, #0x190
   15e80:	mov	x1, x25
   15e84:	mov	x0, x25
   15e88:	mov	w3, #0x0                   	// #0
   15e8c:	mov	x2, #0x1                   	// #1
   15e90:	bl	c980 <mpfr_div_2ui@plt>
   15e94:	str	xzr, [x29, #152]
   15e98:	add	x1, x23, #0x1
   15e9c:	mov	x0, #0x2                   	// #2
   15ea0:	sdiv	x0, x1, x0
   15ea4:	str	x0, [x29, #112]
   15ea8:	mov	x0, #0x1                   	// #1
   15eac:	str	x0, [x29, #184]
   15eb0:	add	x0, x29, #0xc8
   15eb4:	str	x0, [x29, #104]
   15eb8:	ldr	x2, [x29, #104]
   15ebc:	mov	x1, x25
   15ec0:	mov	x0, x26
   15ec4:	bl	be30 <mpfr_cmp2@plt>
   15ec8:	cbz	w0, 160ac <mpfr_agm@@Base+0x720>
   15ecc:	ldr	x1, [x29, #200]
   15ed0:	sub	x0, x23, #0x1
   15ed4:	cmp	x0, x1
   15ed8:	b.le	160ac <mpfr_agm@@Base+0x720>
   15edc:	add	x28, x29, #0x130
   15ee0:	b	15f74 <mpfr_agm@@Base+0x5e8>
   15ee4:	mov	x0, x24
   15ee8:	bl	c0f0 <mpfr_clear@plt>
   15eec:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   15ef0:	ldr	x1, [x0, #2592]
   15ef4:	add	x0, x0, #0xa20
   15ef8:	blr	x1
   15efc:	add	x4, x19, x0
   15f00:	str	wzr, [x19, x0]
   15f04:	mov	x1, x26
   15f08:	ldr	x0, [x29, #120]
   15f0c:	mov	x2, x25
   15f10:	mov	w3, #0x0                   	// #0
   15f14:	str	x4, [x29, #96]
   15f18:	bl	bdd0 <mpfr_mul@plt>
   15f1c:	ldr	x4, [x29, #96]
   15f20:	ldr	w1, [x4]
   15f24:	tbz	w1, #1, 16080 <mpfr_agm@@Base+0x6f4>
   15f28:	ldr	x3, [x29, #224]
   15f2c:	mov	x5, #0x2                   	// #2
   15f30:	ldr	x2, [x29, #256]
   15f34:	movk	x5, #0xc000, lsl #48
   15f38:	add	x0, x3, x2
   15f3c:	add	x0, x0, x5
   15f40:	mov	x5, #0x2                   	// #2
   15f44:	sdiv	x0, x0, x5
   15f48:	neg	x0, x0
   15f4c:	add	x2, x2, x0
   15f50:	str	x2, [x29, #256]
   15f54:	ldr	x2, [x29, #152]
   15f58:	add	x3, x3, x0
   15f5c:	str	x3, [x29, #224]
   15f60:	add	x0, x2, x0
   15f64:	str	x0, [x29, #152]
   15f68:	mov	w0, #0x3d                  	// #61
   15f6c:	and	w1, w1, w0
   15f70:	str	w1, [x4]
   15f74:	mov	x2, x25
   15f78:	mov	x1, x26
   15f7c:	mov	w3, #0x0                   	// #0
   15f80:	mov	x0, x28
   15f84:	bl	c230 <mpfr_add@plt>
   15f88:	mov	x1, x28
   15f8c:	mov	x0, x28
   15f90:	mov	w3, #0x0                   	// #0
   15f94:	mov	x2, #0x1                   	// #1
   15f98:	bl	c980 <mpfr_div_2ui@plt>
   15f9c:	ldr	x0, [x29, #200]
   15fa0:	cmp	x23, x0, lsl #2
   15fa4:	b.ge	15eec <mpfr_agm@@Base+0x560>  // b.tcont
   15fa8:	ldr	x1, [x29, #112]
   15fac:	mov	x0, x24
   15fb0:	bl	cb10 <mpfr_init2@plt>
   15fb4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   15fb8:	ldr	x1, [x0, #2592]
   15fbc:	add	x0, x0, #0xa20
   15fc0:	blr	x1
   15fc4:	add	x4, x19, x0
   15fc8:	mov	w3, #0x0                   	// #0
   15fcc:	mov	x2, x26
   15fd0:	mov	x1, x25
   15fd4:	str	wzr, [x19, x0]
   15fd8:	mov	x0, x24
   15fdc:	str	x4, [x29, #96]
   15fe0:	bl	bbf0 <mpfr_sub@plt>
   15fe4:	mov	x1, x24
   15fe8:	mov	w2, #0x0                   	// #0
   15fec:	mov	x0, x24
   15ff0:	bl	c490 <mpfr_sqr@plt>
   15ff4:	mov	x1, x24
   15ff8:	mov	w3, #0x0                   	// #0
   15ffc:	mov	x2, #0x4                   	// #4
   16000:	mov	x0, x24
   16004:	bl	c980 <mpfr_div_2ui@plt>
   16008:	mov	x2, x28
   1600c:	mov	x1, x24
   16010:	mov	x0, x24
   16014:	mov	w3, #0x0                   	// #0
   16018:	bl	c6b0 <mpfr_div@plt>
   1601c:	ldr	x4, [x29, #96]
   16020:	ldr	w0, [x4]
   16024:	tbnz	w0, #0, 15ee4 <mpfr_agm@@Base+0x558>
   16028:	mov	x2, x24
   1602c:	mov	x1, x28
   16030:	mov	x0, x25
   16034:	mov	w3, #0x0                   	// #0
   16038:	bl	bbf0 <mpfr_sub@plt>
   1603c:	ldr	x2, [x29, #256]
   16040:	mov	x0, x24
   16044:	ldr	x26, [x29, #320]
   16048:	sub	x26, x26, x2
   1604c:	bl	c0f0 <mpfr_clear@plt>
   16050:	ldr	x1, [x29, #184]
   16054:	mov	x0, #0x12                  	// #18
   16058:	mul	x0, x1, x0
   1605c:	cmn	x0, #0x32
   16060:	b.eq	160ec <mpfr_agm@@Base+0x760>  // b.none
   16064:	add	x1, x0, #0x33
   16068:	cmp	x1, #0x1
   1606c:	b.hi	160b4 <mpfr_agm@@Base+0x728>  // b.pmore
   16070:	adrp	x2, 53000 <mpfr_free_pool@@Base+0x1eec>
   16074:	mov	w1, #0x117                 	// #279
   16078:	add	x2, x2, #0x934
   1607c:	b	15ae4 <mpfr_agm@@Base+0x158>
   16080:	ldr	x1, [x29, #120]
   16084:	mov	w2, #0x0                   	// #0
   16088:	mov	x0, x26
   1608c:	bl	c9c0 <mpfr_sqrt@plt>
   16090:	mov	x0, x25
   16094:	mov	x1, x28
   16098:	bl	c530 <mpfr_swap@plt>
   1609c:	ldr	x0, [x29, #184]
   160a0:	add	x0, x0, #0x1
   160a4:	str	x0, [x29, #184]
   160a8:	b	15eb8 <mpfr_agm@@Base+0x52c>
   160ac:	mov	x26, #0x0                   	// #0
   160b0:	b	16050 <mpfr_agm@@Base+0x6c4>
   160b4:	add	x0, x0, #0x32
   160b8:	mov	w2, #0x40                  	// #64
   160bc:	clz	x0, x0
   160c0:	sub	w0, w2, w0
   160c4:	sxtw	x2, w0
   160c8:	ldr	x0, [x29, #184]
   160cc:	cmn	x0, #0x1
   160d0:	b.eq	162e0 <mpfr_agm@@Base+0x954>  // b.none
   160d4:	cmn	x0, #0x2
   160d8:	b.cc	160f4 <mpfr_agm@@Base+0x768>  // b.lo, b.ul, b.last
   160dc:	adrp	x2, 53000 <mpfr_free_pool@@Base+0x1eec>
   160e0:	mov	w1, #0x11a                 	// #282
   160e4:	add	x2, x2, #0x946
   160e8:	b	15ae4 <mpfr_agm@@Base+0x158>
   160ec:	mov	w0, #0x0                   	// #0
   160f0:	b	160c4 <mpfr_agm@@Base+0x738>
   160f4:	ldr	x0, [x29, #184]
   160f8:	mov	w1, #0x40                  	// #64
   160fc:	add	x0, x0, #0x1
   16100:	clz	x0, x0
   16104:	sub	w0, w1, w0
   16108:	sxtw	x0, w0
   1610c:	mov	x1, #0x4                   	// #4
   16110:	sdiv	x1, x23, x1
   16114:	cmp	x1, x0
   16118:	b.lt	162e8 <mpfr_agm@@Base+0x95c>  // b.tstop
   1611c:	ldr	x1, [x29, #256]
   16120:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   16124:	cmp	x1, x0
   16128:	b.le	162e8 <mpfr_agm@@Base+0x95c>
   1612c:	ldr	w0, [x29, #172]
   16130:	sub	x26, x23, x26
   16134:	ldr	x1, [x29, #240]
   16138:	cmp	w0, #0x0
   1613c:	ldr	x0, [x29, #176]
   16140:	sub	x1, x1, #0x1
   16144:	sub	x2, x26, x2
   16148:	cinc	x3, x0, eq  // eq = none
   1614c:	asr	x1, x1, #6
   16150:	ldr	x0, [x29, #264]
   16154:	add	x1, x1, #0x1
   16158:	bl	c400 <mpfr_round_p@plt>
   1615c:	cbz	w0, 162e8 <mpfr_agm@@Base+0x95c>
   16160:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   16164:	ldr	x1, [x0, #2592]
   16168:	add	x0, x0, #0xa20
   1616c:	blr	x1
   16170:	ldr	w0, [x19, x0]
   16174:	mov	w1, #0x37                  	// #55
   16178:	tst	w0, w1
   1617c:	b.eq	1622c <mpfr_agm@@Base+0x8a0>  // b.none
   16180:	tbz	w0, #1, 1619c <mpfr_agm@@Base+0x810>
   16184:	adrp	x2, 53000 <mpfr_free_pool@@Base+0x1eec>
   16188:	adrp	x0, 53000 <mpfr_free_pool@@Base+0x1eec>
   1618c:	add	x2, x2, #0x995
   16190:	add	x0, x0, #0x862
   16194:	mov	w1, #0x127                 	// #295
   16198:	bl	cbd0 <mpfr_assert_fail@plt>
   1619c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   161a0:	ldr	x1, [x0, #2592]
   161a4:	add	x0, x0, #0xa20
   161a8:	blr	x1
   161ac:	ldr	w0, [x19, x0]
   161b0:	tbz	w0, #0, 161cc <mpfr_agm@@Base+0x840>
   161b4:	adrp	x2, 53000 <mpfr_free_pool@@Base+0x1eec>
   161b8:	adrp	x0, 53000 <mpfr_free_pool@@Base+0x1eec>
   161bc:	add	x2, x2, #0x9b3
   161c0:	add	x0, x0, #0x862
   161c4:	mov	w1, #0x128                 	// #296
   161c8:	bl	cbd0 <mpfr_assert_fail@plt>
   161cc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   161d0:	ldr	x1, [x0, #2592]
   161d4:	add	x0, x0, #0xa20
   161d8:	blr	x1
   161dc:	ldr	w0, [x19, x0]
   161e0:	tbz	w0, #5, 161fc <mpfr_agm@@Base+0x870>
   161e4:	adrp	x2, 53000 <mpfr_free_pool@@Base+0x1eec>
   161e8:	adrp	x0, 53000 <mpfr_free_pool@@Base+0x1eec>
   161ec:	add	x2, x2, #0x9d1
   161f0:	add	x0, x0, #0x862
   161f4:	mov	w1, #0x129                 	// #297
   161f8:	bl	cbd0 <mpfr_assert_fail@plt>
   161fc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   16200:	ldr	x1, [x0, #2592]
   16204:	add	x0, x0, #0xa20
   16208:	blr	x1
   1620c:	ldr	w0, [x19, x0]
   16210:	tbz	w0, #2, 1622c <mpfr_agm@@Base+0x8a0>
   16214:	adrp	x2, 53000 <mpfr_free_pool@@Base+0x1eec>
   16218:	adrp	x0, 53000 <mpfr_free_pool@@Base+0x1eec>
   1621c:	add	x2, x2, #0x9f0
   16220:	add	x0, x0, #0x862
   16224:	mov	w1, #0x12a                 	// #298
   16228:	bl	cbd0 <mpfr_assert_fail@plt>
   1622c:	ldr	w2, [x29, #172]
   16230:	mov	x1, x25
   16234:	ldr	w3, [x29, #248]
   16238:	mov	x0, x22
   1623c:	bl	c730 <mpfr_set4@plt>
   16240:	mov	w20, w0
   16244:	ldr	x0, [x29, #152]
   16248:	ldr	x1, [x22, #16]
   1624c:	add	x0, x27, x0
   16250:	sub	x0, x1, x0
   16254:	str	x0, [x22, #16]
   16258:	ldr	x0, [x29, #192]
   1625c:	cbz	x0, 16264 <mpfr_agm@@Base+0x8d8>
   16260:	bl	c4a0 <mpfr_tmp_free@plt>
   16264:	ldr	w2, [x29, #168]
   16268:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1626c:	ldr	x1, [x0, #2592]
   16270:	add	x0, x0, #0xa20
   16274:	blr	x1
   16278:	add	x1, x19, x0
   1627c:	str	w2, [x19, x0]
   16280:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   16284:	ldr	x2, [x0, #2528]
   16288:	add	x0, x0, #0x9e0
   1628c:	blr	x2
   16290:	ldr	x2, [x29, #136]
   16294:	str	x2, [x19, x0]
   16298:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1629c:	ldr	x2, [x0, #2560]
   162a0:	add	x0, x0, #0xa00
   162a4:	blr	x2
   162a8:	ldr	x2, [x29, #128]
   162ac:	str	x2, [x19, x0]
   162b0:	ldr	x0, [x22, #16]
   162b4:	ldr	x2, [x29, #136]
   162b8:	cmp	x2, x0
   162bc:	b.gt	16334 <mpfr_agm@@Base+0x9a8>
   162c0:	ldr	x2, [x29, #128]
   162c4:	cmp	x2, x0
   162c8:	b.lt	16334 <mpfr_agm@@Base+0x9a8>  // b.tstop
   162cc:	cbz	w20, 15a80 <mpfr_agm@@Base+0xf4>
   162d0:	ldr	w0, [x29, #168]
   162d4:	orr	w0, w0, #0x8
   162d8:	str	w0, [x1]
   162dc:	b	15a80 <mpfr_agm@@Base+0xf4>
   162e0:	mov	x0, #0x0                   	// #0
   162e4:	b	1610c <mpfr_agm@@Base+0x780>
   162e8:	ldr	x1, [x29, #144]
   162ec:	mov	x0, #0xfffffffffffffeff    	// #-257
   162f0:	movk	x0, #0x7fff, lsl #48
   162f4:	sub	x0, x0, x23
   162f8:	cmp	x0, x1
   162fc:	b.ge	16310 <mpfr_agm@@Base+0x984>  // b.tcont
   16300:	adrp	x2, 53000 <mpfr_free_pool@@Base+0x1eec>
   16304:	mov	w1, #0x11f                 	// #287
   16308:	add	x2, x2, #0x952
   1630c:	b	15ae4 <mpfr_agm@@Base+0x158>
   16310:	ldr	x0, [x29, #144]
   16314:	add	x23, x23, x0
   16318:	mov	x0, #0x2                   	// #2
   1631c:	sub	x24, x23, #0x1
   16320:	sdiv	x0, x23, x0
   16324:	asr	x24, x24, #6
   16328:	add	x24, x24, #0x1
   1632c:	str	x0, [x29, #144]
   16330:	b	15bf0 <mpfr_agm@@Base+0x264>
   16334:	ldr	w2, [x29, #172]
   16338:	mov	w1, w20
   1633c:	mov	x0, x22
   16340:	bl	cbc0 <mpfr_check_range@plt>
   16344:	b	15b50 <mpfr_agm@@Base+0x1c4>

0000000000016348 <mpfr_cmp@@Base>:
   16348:	mov	w2, #0x1                   	// #1
   1634c:	b	ca30 <mpfr_cmp3@plt>

0000000000016350 <mpfr_cmpabs@@Base>:
   16350:	ldr	x2, [x0, #16]
   16354:	mov	x4, #0x8000000000000003    	// #-9223372036854775805
   16358:	cmp	x2, x4
   1635c:	b.le	16398 <mpfr_cmpabs@@Base+0x48>
   16360:	ldr	x3, [x1, #16]
   16364:	cmp	x3, x4
   16368:	b.gt	163f4 <mpfr_cmpabs@@Base+0xa4>
   1636c:	ldr	x0, [x1, #16]
   16370:	mov	x1, #0x2                   	// #2
   16374:	movk	x1, #0x8000, lsl #48
   16378:	cmp	x0, x1
   1637c:	b.eq	163a8 <mpfr_cmpabs@@Base+0x58>  // b.none
   16380:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   16384:	cmp	x2, x1
   16388:	b.ne	163e0 <mpfr_cmpabs@@Base+0x90>  // b.any
   1638c:	cmp	x0, x2
   16390:	cset	w0, ne  // ne = any
   16394:	ret
   16398:	mov	x0, #0x2                   	// #2
   1639c:	movk	x0, #0x8000, lsl #48
   163a0:	cmp	x2, x0
   163a4:	b.ne	1636c <mpfr_cmpabs@@Base+0x1c>  // b.any
   163a8:	stp	x29, x30, [sp, #-16]!
   163ac:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   163b0:	ldr	x1, [x0, #2592]
   163b4:	add	x0, x0, #0xa20
   163b8:	blr	x1
   163bc:	mrs	x1, tpidr_el0
   163c0:	add	x0, x1, x0
   163c4:	mov	x29, sp
   163c8:	ldr	w1, [x0]
   163cc:	orr	w1, w1, #0x10
   163d0:	str	w1, [x0]
   163d4:	mov	w0, #0x0                   	// #0
   163d8:	ldp	x29, x30, [sp], #16
   163dc:	ret
   163e0:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   163e4:	cmp	x0, x1
   163e8:	b.ne	16484 <mpfr_cmpabs@@Base+0x134>  // b.any
   163ec:	cmp	x2, x0
   163f0:	b	16390 <mpfr_cmpabs@@Base+0x40>
   163f4:	cmp	x2, x3
   163f8:	b.gt	1647c <mpfr_cmpabs@@Base+0x12c>
   163fc:	b.lt	16484 <mpfr_cmpabs@@Base+0x134>  // b.tstop
   16400:	ldr	x3, [x0]
   16404:	ldr	x2, [x1]
   16408:	sub	x3, x3, #0x1
   1640c:	ldr	x4, [x0, #24]
   16410:	sub	x2, x2, #0x1
   16414:	ldr	x0, [x1, #24]
   16418:	asr	x3, x3, #6
   1641c:	asr	x2, x2, #6
   16420:	ldr	x5, [x4, x3, lsl #3]
   16424:	ldr	x1, [x0, x2, lsl #3]
   16428:	cmp	x5, x1
   1642c:	b.hi	1647c <mpfr_cmpabs@@Base+0x12c>  // b.pmore
   16430:	b.cc	16484 <mpfr_cmpabs@@Base+0x134>  // b.lo, b.ul, b.last
   16434:	sub	x2, x2, #0x1
   16438:	subs	x3, x3, #0x1
   1643c:	ccmp	x2, #0x0, #0x1, pl  // pl = nfrst
   16440:	b.ge	16420 <mpfr_cmpabs@@Base+0xd0>  // b.tcont
   16444:	cmn	x3, #0x1
   16448:	b.ne	1645c <mpfr_cmpabs@@Base+0x10c>  // b.any
   1644c:	cmn	x2, #0x1
   16450:	b.ne	1646c <mpfr_cmpabs@@Base+0x11c>  // b.any
   16454:	mov	w0, #0x0                   	// #0
   16458:	ret
   1645c:	ldr	x1, [x4, x3, lsl #3]
   16460:	cbnz	x1, 1647c <mpfr_cmpabs@@Base+0x12c>
   16464:	sub	x3, x3, #0x1
   16468:	b	16444 <mpfr_cmpabs@@Base+0xf4>
   1646c:	ldr	x1, [x0, x2, lsl #3]
   16470:	cbnz	x1, 16484 <mpfr_cmpabs@@Base+0x134>
   16474:	sub	x2, x2, #0x1
   16478:	b	1644c <mpfr_cmpabs@@Base+0xfc>
   1647c:	mov	w0, #0x1                   	// #1
   16480:	ret
   16484:	mov	w0, #0xffffffff            	// #-1
   16488:	ret

000000000001648c <mpfr_cmp_si_2exp@@Base>:
   1648c:	mov	x3, x0
   16490:	cmp	x1, #0x0
   16494:	mov	w0, #0x1                   	// #1
   16498:	mov	x5, #0x8000000000000003    	// #-9223372036854775805
   1649c:	cneg	w0, w0, lt  // lt = tstop
   164a0:	ldr	x4, [x3, #16]
   164a4:	cmp	x4, x5
   164a8:	b.gt	16508 <mpfr_cmp_si_2exp@@Base+0x7c>
   164ac:	b.ne	164b8 <mpfr_cmp_si_2exp@@Base+0x2c>  // b.any
   164b0:	ldr	w0, [x3, #8]
   164b4:	ret
   164b8:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   164bc:	cmp	x4, x2
   164c0:	b.ne	164d0 <mpfr_cmp_si_2exp@@Base+0x44>  // b.any
   164c4:	cmp	x1, #0x0
   164c8:	csneg	w0, wzr, w0, eq  // eq = none
   164cc:	ret
   164d0:	stp	x29, x30, [sp, #-16]!
   164d4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   164d8:	ldr	x1, [x0, #2592]
   164dc:	add	x0, x0, #0xa20
   164e0:	blr	x1
   164e4:	mrs	x1, tpidr_el0
   164e8:	add	x0, x1, x0
   164ec:	mov	x29, sp
   164f0:	ldr	w1, [x0]
   164f4:	orr	w1, w1, #0x10
   164f8:	str	w1, [x0]
   164fc:	mov	w0, #0x0                   	// #0
   16500:	ldp	x29, x30, [sp], #16
   16504:	ret
   16508:	ldr	w5, [x3, #8]
   1650c:	cmp	w5, w0
   16510:	b.ne	165b0 <mpfr_cmp_si_2exp@@Base+0x124>  // b.any
   16514:	cmp	x1, #0x0
   16518:	cbz	x1, 165ac <mpfr_cmp_si_2exp@@Base+0x120>
   1651c:	cneg	x1, x1, lt  // lt = tstop
   16520:	cmp	x4, x2
   16524:	b.gt	16530 <mpfr_cmp_si_2exp@@Base+0xa4>
   16528:	neg	w0, w0
   1652c:	ret
   16530:	mov	x5, #0xffffffffffffffbe    	// #-66
   16534:	movk	x5, #0x3fff, lsl #48
   16538:	cmp	x2, x5
   1653c:	b.gt	1654c <mpfr_cmp_si_2exp@@Base+0xc0>
   16540:	add	x5, x2, #0x40
   16544:	cmp	x4, x5
   16548:	b.gt	165ac <mpfr_cmp_si_2exp@@Base+0x120>
   1654c:	clz	x5, x1
   16550:	sub	w4, w4, w2
   16554:	mov	w2, #0x40                  	// #64
   16558:	sub	w2, w2, w5
   1655c:	cmp	w4, w2
   16560:	b.gt	165ac <mpfr_cmp_si_2exp@@Base+0x120>
   16564:	b.lt	16528 <mpfr_cmp_si_2exp@@Base+0x9c>  // b.tstop
   16568:	ldr	x2, [x3]
   1656c:	mov	x4, #0x40                  	// #64
   16570:	ldr	x3, [x3, #24]
   16574:	sub	x2, x2, #0x1
   16578:	lsl	x1, x1, x5
   1657c:	sdiv	x2, x2, x4
   16580:	ldr	x4, [x3, x2, lsl #3]
   16584:	cmp	x4, x1
   16588:	b.hi	165ac <mpfr_cmp_si_2exp@@Base+0x120>  // b.pmore
   1658c:	b.cc	16528 <mpfr_cmp_si_2exp@@Base+0x9c>  // b.lo, b.ul, b.last
   16590:	cmp	x2, #0x0
   16594:	b.gt	165a0 <mpfr_cmp_si_2exp@@Base+0x114>
   16598:	mov	w0, #0x0                   	// #0
   1659c:	ret
   165a0:	sub	x2, x2, #0x1
   165a4:	ldr	x1, [x3, x2, lsl #3]
   165a8:	cbz	x1, 16590 <mpfr_cmp_si_2exp@@Base+0x104>
   165ac:	ret
   165b0:	mov	w0, w5
   165b4:	ret

00000000000165b8 <mpfr_cmp_si@@Base>:
   165b8:	mov	x2, #0x0                   	// #0
   165bc:	b	c460 <mpfr_cmp_si_2exp@plt>

00000000000165c0 <mpfr_cmp_ui_2exp@@Base>:
   165c0:	ldr	x3, [x0, #16]
   165c4:	mov	x4, #0x8000000000000003    	// #-9223372036854775805
   165c8:	cmp	x3, x4
   165cc:	b.gt	16634 <mpfr_cmp_ui_2exp@@Base+0x74>
   165d0:	mov	x2, #0x2                   	// #2
   165d4:	movk	x2, #0x8000, lsl #48
   165d8:	cmp	x3, x2
   165dc:	b.ne	16618 <mpfr_cmp_ui_2exp@@Base+0x58>  // b.any
   165e0:	stp	x29, x30, [sp, #-16]!
   165e4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   165e8:	ldr	x1, [x0, #2592]
   165ec:	add	x0, x0, #0xa20
   165f0:	blr	x1
   165f4:	mrs	x1, tpidr_el0
   165f8:	add	x0, x1, x0
   165fc:	mov	x29, sp
   16600:	ldr	w1, [x0]
   16604:	orr	w1, w1, #0x10
   16608:	str	w1, [x0]
   1660c:	mov	w0, #0x0                   	// #0
   16610:	ldp	x29, x30, [sp], #16
   16614:	ret
   16618:	cmp	x3, x4
   1661c:	b.ne	16628 <mpfr_cmp_ui_2exp@@Base+0x68>  // b.any
   16620:	ldr	w0, [x0, #8]
   16624:	ret
   16628:	cmp	x1, #0x0
   1662c:	csetm	w0, ne  // ne = any
   16630:	ret
   16634:	ldr	w4, [x0, #8]
   16638:	tbnz	w4, #31, 166a8 <mpfr_cmp_ui_2exp@@Base+0xe8>
   1663c:	cbz	x1, 166cc <mpfr_cmp_ui_2exp@@Base+0x10c>
   16640:	cmp	x3, x2
   16644:	b.le	166a8 <mpfr_cmp_ui_2exp@@Base+0xe8>
   16648:	mov	x4, #0xffffffffffffffbe    	// #-66
   1664c:	movk	x4, #0x3fff, lsl #48
   16650:	cmp	x2, x4
   16654:	b.gt	16664 <mpfr_cmp_ui_2exp@@Base+0xa4>
   16658:	add	x4, x2, #0x40
   1665c:	cmp	x3, x4
   16660:	b.gt	166cc <mpfr_cmp_ui_2exp@@Base+0x10c>
   16664:	clz	x4, x1
   16668:	sub	w3, w3, w2
   1666c:	mov	w2, #0x40                  	// #64
   16670:	sub	w2, w2, w4
   16674:	cmp	w3, w2
   16678:	b.gt	166cc <mpfr_cmp_ui_2exp@@Base+0x10c>
   1667c:	b.lt	166a8 <mpfr_cmp_ui_2exp@@Base+0xe8>  // b.tstop
   16680:	ldr	x2, [x0]
   16684:	mov	x3, #0x40                  	// #64
   16688:	ldr	x0, [x0, #24]
   1668c:	sub	x2, x2, #0x1
   16690:	lsl	x1, x1, x4
   16694:	sdiv	x2, x2, x3
   16698:	ldr	x3, [x0, x2, lsl #3]
   1669c:	cmp	x3, x1
   166a0:	b.hi	166cc <mpfr_cmp_ui_2exp@@Base+0x10c>  // b.pmore
   166a4:	b.cs	166bc <mpfr_cmp_ui_2exp@@Base+0xfc>  // b.hs, b.nlast
   166a8:	mov	w0, #0xffffffff            	// #-1
   166ac:	ret
   166b0:	sub	x2, x2, #0x1
   166b4:	ldr	x1, [x0, x2, lsl #3]
   166b8:	cbnz	x1, 166cc <mpfr_cmp_ui_2exp@@Base+0x10c>
   166bc:	cmp	x2, #0x0
   166c0:	b.gt	166b0 <mpfr_cmp_ui_2exp@@Base+0xf0>
   166c4:	mov	w0, #0x0                   	// #0
   166c8:	ret
   166cc:	mov	w0, #0x1                   	// #1
   166d0:	ret

00000000000166d4 <mpfr_cmp_ui@@Base>:
   166d4:	mov	x2, #0x0                   	// #0
   166d8:	b	bfd0 <mpfr_cmp_ui_2exp@plt>

00000000000166dc <mpfr_greater_p@@Base>:
   166dc:	ldr	x4, [x0, #16]
   166e0:	mov	x3, #0x2                   	// #2
   166e4:	movk	x3, #0x8000, lsl #48
   166e8:	cmp	x4, x3
   166ec:	b.eq	1671c <mpfr_greater_p@@Base+0x40>  // b.none
   166f0:	ldr	x2, [x1, #16]
   166f4:	cmp	x2, x3
   166f8:	b.eq	1671c <mpfr_greater_p@@Base+0x40>  // b.none
   166fc:	stp	x29, x30, [sp, #-16]!
   16700:	mov	w2, #0x1                   	// #1
   16704:	mov	x29, sp
   16708:	bl	ca30 <mpfr_cmp3@plt>
   1670c:	cmp	w0, #0x0
   16710:	cset	w0, gt
   16714:	ldp	x29, x30, [sp], #16
   16718:	ret
   1671c:	mov	w0, #0x0                   	// #0
   16720:	ret

0000000000016724 <mpfr_greaterequal_p@@Base>:
   16724:	ldr	x4, [x0, #16]
   16728:	mov	x3, #0x2                   	// #2
   1672c:	movk	x3, #0x8000, lsl #48
   16730:	cmp	x4, x3
   16734:	b.eq	16764 <mpfr_greaterequal_p@@Base+0x40>  // b.none
   16738:	ldr	x2, [x1, #16]
   1673c:	cmp	x2, x3
   16740:	b.eq	16764 <mpfr_greaterequal_p@@Base+0x40>  // b.none
   16744:	stp	x29, x30, [sp, #-16]!
   16748:	mov	w2, #0x1                   	// #1
   1674c:	mov	x29, sp
   16750:	bl	ca30 <mpfr_cmp3@plt>
   16754:	mvn	w0, w0
   16758:	ldp	x29, x30, [sp], #16
   1675c:	lsr	w0, w0, #31
   16760:	ret
   16764:	mov	w0, #0x0                   	// #0
   16768:	ret

000000000001676c <mpfr_less_p@@Base>:
   1676c:	ldr	x4, [x0, #16]
   16770:	mov	x3, #0x2                   	// #2
   16774:	movk	x3, #0x8000, lsl #48
   16778:	cmp	x4, x3
   1677c:	b.eq	167a8 <mpfr_less_p@@Base+0x3c>  // b.none
   16780:	ldr	x2, [x1, #16]
   16784:	cmp	x2, x3
   16788:	b.eq	167a8 <mpfr_less_p@@Base+0x3c>  // b.none
   1678c:	stp	x29, x30, [sp, #-16]!
   16790:	mov	w2, #0x1                   	// #1
   16794:	mov	x29, sp
   16798:	bl	ca30 <mpfr_cmp3@plt>
   1679c:	lsr	w0, w0, #31
   167a0:	ldp	x29, x30, [sp], #16
   167a4:	ret
   167a8:	mov	w0, #0x0                   	// #0
   167ac:	ret

00000000000167b0 <mpfr_lessequal_p@@Base>:
   167b0:	ldr	x4, [x0, #16]
   167b4:	mov	x3, #0x2                   	// #2
   167b8:	movk	x3, #0x8000, lsl #48
   167bc:	cmp	x4, x3
   167c0:	b.eq	167f0 <mpfr_lessequal_p@@Base+0x40>  // b.none
   167c4:	ldr	x2, [x1, #16]
   167c8:	cmp	x2, x3
   167cc:	b.eq	167f0 <mpfr_lessequal_p@@Base+0x40>  // b.none
   167d0:	stp	x29, x30, [sp, #-16]!
   167d4:	mov	w2, #0x1                   	// #1
   167d8:	mov	x29, sp
   167dc:	bl	ca30 <mpfr_cmp3@plt>
   167e0:	cmp	w0, #0x0
   167e4:	cset	w0, le
   167e8:	ldp	x29, x30, [sp], #16
   167ec:	ret
   167f0:	mov	w0, #0x0                   	// #0
   167f4:	ret

00000000000167f8 <mpfr_lessgreater_p@@Base>:
   167f8:	ldr	x4, [x0, #16]
   167fc:	mov	x3, #0x2                   	// #2
   16800:	movk	x3, #0x8000, lsl #48
   16804:	cmp	x4, x3
   16808:	b.eq	16838 <mpfr_lessgreater_p@@Base+0x40>  // b.none
   1680c:	ldr	x2, [x1, #16]
   16810:	cmp	x2, x3
   16814:	b.eq	16838 <mpfr_lessgreater_p@@Base+0x40>  // b.none
   16818:	stp	x29, x30, [sp, #-16]!
   1681c:	mov	w2, #0x1                   	// #1
   16820:	mov	x29, sp
   16824:	bl	ca30 <mpfr_cmp3@plt>
   16828:	cmp	w0, #0x0
   1682c:	cset	w0, ne  // ne = any
   16830:	ldp	x29, x30, [sp], #16
   16834:	ret
   16838:	mov	w0, #0x0                   	// #0
   1683c:	ret

0000000000016840 <mpfr_equal_p@@Base>:
   16840:	ldr	x4, [x0, #16]
   16844:	mov	x3, #0x2                   	// #2
   16848:	movk	x3, #0x8000, lsl #48
   1684c:	cmp	x4, x3
   16850:	b.eq	16880 <mpfr_equal_p@@Base+0x40>  // b.none
   16854:	ldr	x2, [x1, #16]
   16858:	cmp	x2, x3
   1685c:	b.eq	16880 <mpfr_equal_p@@Base+0x40>  // b.none
   16860:	stp	x29, x30, [sp, #-16]!
   16864:	mov	w2, #0x1                   	// #1
   16868:	mov	x29, sp
   1686c:	bl	ca30 <mpfr_cmp3@plt>
   16870:	cmp	w0, #0x0
   16874:	cset	w0, eq  // eq = none
   16878:	ldp	x29, x30, [sp], #16
   1687c:	ret
   16880:	mov	w0, #0x0                   	// #0
   16884:	ret

0000000000016888 <mpfr_unordered_p@@Base>:
   16888:	ldr	x0, [x0, #16]
   1688c:	mov	x2, #0x2                   	// #2
   16890:	movk	x2, #0x8000, lsl #48
   16894:	cmp	x0, x2
   16898:	b.eq	168ac <mpfr_unordered_p@@Base+0x24>  // b.none
   1689c:	ldr	x0, [x1, #16]
   168a0:	cmp	x0, x2
   168a4:	cset	w0, eq  // eq = none
   168a8:	ret
   168ac:	mov	w0, #0x1                   	// #1
   168b0:	b	168a8 <mpfr_unordered_p@@Base+0x20>

00000000000168b4 <mpfr_div_2exp@@Base>:
   168b4:	b	c980 <mpfr_div_2ui@plt>

00000000000168b8 <mpfr_div_2ui@@Base>:
   168b8:	stp	x29, x30, [sp, #-80]!
   168bc:	mov	x29, sp
   168c0:	stp	x19, x20, [sp, #16]
   168c4:	stp	x21, x22, [sp, #32]
   168c8:	mov	x22, x0
   168cc:	mov	w21, w3
   168d0:	stp	x23, x24, [sp, #48]
   168d4:	str	x25, [sp, #64]
   168d8:	cbz	x2, 168ec <mpfr_div_2ui@@Base+0x34>
   168dc:	ldr	x19, [x1, #16]
   168e0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   168e4:	cmp	x19, x0
   168e8:	b.gt	16910 <mpfr_div_2ui@@Base+0x58>
   168ec:	mov	w2, w21
   168f0:	mov	x0, x22
   168f4:	ldp	x19, x20, [sp, #16]
   168f8:	ldp	x21, x22, [sp, #32]
   168fc:	ldp	x23, x24, [sp, #48]
   16900:	ldr	x25, [sp, #64]
   16904:	ldp	x29, x30, [sp], #80
   16908:	ldr	w3, [x1, #8]
   1690c:	b	c730 <mpfr_set4@plt>
   16910:	mov	x20, x2
   16914:	cmp	x1, x22
   16918:	b.eq	1695c <mpfr_div_2ui@@Base+0xa4>  // b.none
   1691c:	ldr	w24, [x1, #8]
   16920:	ldr	x4, [x1]
   16924:	ldr	x5, [x22]
   16928:	ldr	x1, [x1, #24]
   1692c:	str	w24, [x22, #8]
   16930:	cmp	x5, x4
   16934:	ldr	x23, [x22, #24]
   16938:	b.ne	16964 <mpfr_div_2ui@@Base+0xac>  // b.any
   1693c:	cmp	x23, x1
   16940:	b.eq	1695c <mpfr_div_2ui@@Base+0xa4>  // b.none
   16944:	sub	x2, x5, #0x1
   16948:	mov	x0, x23
   1694c:	asr	x2, x2, #6
   16950:	add	x2, x2, #0x1
   16954:	lsl	x2, x2, #3
   16958:	bl	ba90 <memcpy@plt>
   1695c:	mov	w24, #0x0                   	// #0
   16960:	b	16a5c <mpfr_div_2ui@@Base+0x1a4>
   16964:	sub	x4, x4, #0x1
   16968:	sub	x0, x5, #0x1
   1696c:	asr	x4, x4, #6
   16970:	asr	x0, x0, #6
   16974:	b.lt	169ac <mpfr_div_2ui@@Base+0xf4>  // b.tstop
   16978:	add	x2, x4, #0x1
   1697c:	sub	x4, x0, x4
   16980:	add	x0, x23, x4, lsl #3
   16984:	lsl	x24, x4, #3
   16988:	cmp	x0, x1
   1698c:	b.eq	16998 <mpfr_div_2ui@@Base+0xe0>  // b.none
   16990:	lsl	x2, x2, #3
   16994:	bl	ba90 <memcpy@plt>
   16998:	mov	x2, x24
   1699c:	mov	x0, x23
   169a0:	mov	w1, #0x0                   	// #0
   169a4:	bl	c1a0 <memset@plt>
   169a8:	b	1695c <mpfr_div_2ui@@Base+0xa4>
   169ac:	sub	x4, x4, x0
   169b0:	neg	w5, w5
   169b4:	add	x2, x0, #0x1
   169b8:	ands	w5, w5, #0x3f
   169bc:	lsl	x8, x4, #3
   169c0:	add	x0, x1, x4, lsl #3
   169c4:	b.eq	16ae4 <mpfr_div_2ui@@Base+0x22c>  // b.none
   169c8:	sub	w7, w5, #0x1
   169cc:	mov	x6, #0x1                   	// #1
   169d0:	ldr	x5, [x1, x8]
   169d4:	lsl	x6, x6, x7
   169d8:	cmp	w21, #0x0
   169dc:	and	x3, x5, x6
   169e0:	sub	x6, x6, #0x1
   169e4:	and	x5, x6, x5
   169e8:	ccmp	x3, #0x0, #0x4, ne  // ne = any
   169ec:	b.ne	16a10 <mpfr_div_2ui@@Base+0x158>  // b.any
   169f0:	mov	x9, #0xfffffffffffffff8    	// #-8
   169f4:	madd	x9, x4, x9, x0
   169f8:	cmp	x4, #0x0
   169fc:	sub	x4, x4, #0x1
   16a00:	cset	w6, ne  // ne = any
   16a04:	cmp	x5, #0x0
   16a08:	csel	w6, w6, wzr, eq  // eq = none
   16a0c:	cbnz	w6, 16adc <mpfr_div_2ui@@Base+0x224>
   16a10:	mov	x25, #0x2                   	// #2
   16a14:	lsl	x25, x25, x7
   16a18:	cmp	w21, #0x5
   16a1c:	b.eq	16c64 <mpfr_div_2ui@@Base+0x3ac>  // b.none
   16a20:	cbnz	w21, 16c48 <mpfr_div_2ui@@Base+0x390>
   16a24:	cbnz	x3, 16b30 <mpfr_div_2ui@@Base+0x278>
   16a28:	orr	x5, x3, x5
   16a2c:	cmp	x5, #0x0
   16a30:	csneg	w24, wzr, w24, eq  // eq = none
   16a34:	cmp	x23, x0
   16a38:	b.eq	16a4c <mpfr_div_2ui@@Base+0x194>  // b.none
   16a3c:	mov	x1, x0
   16a40:	lsl	x2, x2, #3
   16a44:	mov	x0, x23
   16a48:	bl	ba90 <memcpy@plt>
   16a4c:	ldr	x0, [x23]
   16a50:	neg	x7, x25
   16a54:	and	x7, x0, x7
   16a58:	str	x7, [x23]
   16a5c:	mrs	x2, tpidr_el0
   16a60:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   16a64:	ldr	x1, [x0, #2528]
   16a68:	add	x0, x0, #0x9e0
   16a6c:	blr	x1
   16a70:	mov	x3, #0x1                   	// #1
   16a74:	ldr	x1, [x2, x0]
   16a78:	mov	x0, x20
   16a7c:	sub	x1, x3, x1
   16a80:	add	x1, x1, x19
   16a84:	cmp	x20, x1
   16a88:	b.cs	16bd4 <mpfr_div_2ui@@Base+0x31c>  // b.hs, b.nlast
   16a8c:	sub	x19, x19, x20
   16a90:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   16a94:	tbnz	x0, #63, 16c34 <mpfr_div_2ui@@Base+0x37c>
   16a98:	str	x19, [x22, #16]
   16a9c:	cbz	w24, 16ac0 <mpfr_div_2ui@@Base+0x208>
   16aa0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   16aa4:	ldr	x1, [x0, #2592]
   16aa8:	add	x0, x0, #0xa20
   16aac:	blr	x1
   16ab0:	add	x0, x2, x0
   16ab4:	ldr	w1, [x0]
   16ab8:	orr	w1, w1, #0x8
   16abc:	str	w1, [x0]
   16ac0:	mov	w0, w24
   16ac4:	ldp	x19, x20, [sp, #16]
   16ac8:	ldp	x21, x22, [sp, #32]
   16acc:	ldp	x23, x24, [sp, #48]
   16ad0:	ldr	x25, [sp, #64]
   16ad4:	ldp	x29, x30, [sp], #80
   16ad8:	ret
   16adc:	ldr	x5, [x9, x4, lsl #3]
   16ae0:	b	169f8 <mpfr_div_2ui@@Base+0x140>
   16ae4:	ldur	x6, [x0, #-8]
   16ae8:	cmp	w3, #0x0
   16aec:	and	x5, x6, #0x7fffffffffffffff
   16af0:	and	x3, x6, #0x8000000000000000
   16af4:	ccmp	x6, #0x0, #0x0, ne  // ne = any
   16af8:	b.lt	16c3c <mpfr_div_2ui@@Base+0x384>  // b.tstop
   16afc:	mov	x7, #0xfffffffffffffff8    	// #-8
   16b00:	sub	x6, x4, #0x1
   16b04:	madd	x4, x4, x7, x0
   16b08:	cmp	x6, #0x0
   16b0c:	sub	x6, x6, #0x1
   16b10:	cset	w7, ne  // ne = any
   16b14:	cmp	x5, #0x0
   16b18:	csel	w7, w7, wzr, eq  // eq = none
   16b1c:	cbnz	w7, 16b28 <mpfr_div_2ui@@Base+0x270>
   16b20:	mov	x25, #0x1                   	// #1
   16b24:	b	16a18 <mpfr_div_2ui@@Base+0x160>
   16b28:	ldr	x5, [x4, x6, lsl #3]
   16b2c:	b	16b08 <mpfr_div_2ui@@Base+0x250>
   16b30:	ldr	x3, [x1, x8]
   16b34:	and	x3, x25, x3
   16b38:	orr	x5, x3, x5
   16b3c:	cbnz	x5, 16b48 <mpfr_div_2ui@@Base+0x290>
   16b40:	neg	w24, w24
   16b44:	b	16a34 <mpfr_div_2ui@@Base+0x17c>
   16b48:	ldr	x1, [x1, x8]
   16b4c:	adds	x1, x1, x25
   16b50:	str	x1, [x23]
   16b54:	b.cs	16b9c <mpfr_div_2ui@@Base+0x2e4>  // b.hs, b.nlast
   16b58:	cmp	x23, x0
   16b5c:	b.eq	16a4c <mpfr_div_2ui@@Base+0x194>  // b.none
   16b60:	mov	x1, #0x1                   	// #1
   16b64:	b	16bc8 <mpfr_div_2ui@@Base+0x310>
   16b68:	ldr	x3, [x0, x1, lsl #3]
   16b6c:	add	x3, x3, #0x1
   16b70:	str	x3, [x23, x1, lsl #3]
   16b74:	add	x1, x1, #0x1
   16b78:	cbz	x3, 16ba0 <mpfr_div_2ui@@Base+0x2e8>
   16b7c:	cmp	x23, x0
   16b80:	b.eq	16a4c <mpfr_div_2ui@@Base+0x194>  // b.none
   16b84:	cmp	x2, x1
   16b88:	b.le	16a4c <mpfr_div_2ui@@Base+0x194>
   16b8c:	ldr	x3, [x0, x1, lsl #3]
   16b90:	str	x3, [x23, x1, lsl #3]
   16b94:	add	x1, x1, #0x1
   16b98:	b	16b84 <mpfr_div_2ui@@Base+0x2cc>
   16b9c:	mov	x1, #0x1                   	// #1
   16ba0:	cmp	x2, x1
   16ba4:	b.gt	16b68 <mpfr_div_2ui@@Base+0x2b0>
   16ba8:	add	x2, x23, x2, lsl #3
   16bac:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   16bb0:	add	x19, x19, #0x1
   16bb4:	stur	x0, [x2, #-8]
   16bb8:	b	16a4c <mpfr_div_2ui@@Base+0x194>
   16bbc:	ldr	x3, [x0, x1, lsl #3]
   16bc0:	str	x3, [x23, x1, lsl #3]
   16bc4:	add	x1, x1, #0x1
   16bc8:	cmp	x2, x1
   16bcc:	b.gt	16bbc <mpfr_div_2ui@@Base+0x304>
   16bd0:	b	16a4c <mpfr_div_2ui@@Base+0x194>
   16bd4:	ldr	w0, [x22, #8]
   16bd8:	cbnz	w21, 16bf0 <mpfr_div_2ui@@Base+0x338>
   16bdc:	cmp	x20, x1
   16be0:	b.hi	16c2c <mpfr_div_2ui@@Base+0x374>  // b.pmore
   16be4:	tbz	w0, #31, 16c14 <mpfr_div_2ui@@Base+0x35c>
   16be8:	cmp	w24, #0x0
   16bec:	b.le	16c18 <mpfr_div_2ui@@Base+0x360>
   16bf0:	ldr	w2, [x22, #8]
   16bf4:	mov	w1, w21
   16bf8:	mov	x0, x22
   16bfc:	ldp	x19, x20, [sp, #16]
   16c00:	ldp	x21, x22, [sp, #32]
   16c04:	ldp	x23, x24, [sp, #48]
   16c08:	ldr	x25, [sp, #64]
   16c0c:	ldp	x29, x30, [sp], #80
   16c10:	b	c450 <mpfr_underflow@plt>
   16c14:	tbnz	w24, #31, 16bf0 <mpfr_div_2ui@@Base+0x338>
   16c18:	mov	x0, x22
   16c1c:	bl	bf80 <mpfr_powerof2_raw@plt>
   16c20:	cmp	w0, #0x0
   16c24:	cset	w21, ne  // ne = any
   16c28:	b	16bf0 <mpfr_div_2ui@@Base+0x338>
   16c2c:	mov	w21, w3
   16c30:	b	16bf0 <mpfr_div_2ui@@Base+0x338>
   16c34:	add	x0, x0, x1
   16c38:	b	16a94 <mpfr_div_2ui@@Base+0x1dc>
   16c3c:	cmp	w21, #0x5
   16c40:	mov	x25, #0x1                   	// #1
   16c44:	b.eq	16c64 <mpfr_div_2ui@@Base+0x3ac>  // b.none
   16c48:	cmp	w21, #0x1
   16c4c:	b.eq	16a28 <mpfr_div_2ui@@Base+0x170>  // b.none
   16c50:	add	w4, w21, w24, lsr #31
   16c54:	cmp	w4, #0x3
   16c58:	b.eq	16a28 <mpfr_div_2ui@@Base+0x170>  // b.none
   16c5c:	orr	x5, x3, x5
   16c60:	cbnz	x5, 16b48 <mpfr_div_2ui@@Base+0x290>
   16c64:	mov	w24, #0x0                   	// #0
   16c68:	b	16a34 <mpfr_div_2ui@@Base+0x17c>
   16c6c:	cbnz	x1, 16c78 <mpfr_div_2ui@@Base+0x3c0>
   16c70:	mov	w0, #0x0                   	// #0
   16c74:	ret
   16c78:	sub	x1, x1, #0x1
   16c7c:	ldr	x2, [x0, x1, lsl #3]
   16c80:	cbz	x2, 16c6c <mpfr_div_2ui@@Base+0x3b4>
   16c84:	mov	w0, #0x1                   	// #1
   16c88:	b	16c74 <mpfr_div_2ui@@Base+0x3bc>
   16c8c:	mov	x6, x0
   16c90:	add	x9, x1, #0x8
   16c94:	mov	x0, x3
   16c98:	mov	x5, #0x0                   	// #0
   16c9c:	cmp	x5, x2
   16ca0:	b.ne	16ca8 <mpfr_div_2ui@@Base+0x3f0>  // b.any
   16ca4:	ret
   16ca8:	ldr	x3, [x1, x5, lsl #3]
   16cac:	cbz	w4, 16cb8 <mpfr_div_2ui@@Base+0x400>
   16cb0:	ldr	x7, [x9, x5, lsl #3]
   16cb4:	extr	x3, x7, x3, #1
   16cb8:	ldr	x8, [x6, x5, lsl #3]
   16cbc:	sub	x7, x8, x0
   16cc0:	cmp	x8, x3
   16cc4:	sub	x7, x7, x3
   16cc8:	b.cc	16ce8 <mpfr_div_2ui@@Base+0x430>  // b.lo, b.ul, b.last
   16ccc:	and	w3, w0, #0x1
   16cd0:	cmn	x7, #0x1
   16cd4:	csel	w3, w3, wzr, eq  // eq = none
   16cd8:	and	x0, x3, #0xff
   16cdc:	str	x7, [x6, x5, lsl #3]
   16ce0:	add	x5, x5, #0x1
   16ce4:	b	16c9c <mpfr_div_2ui@@Base+0x3e4>
   16ce8:	mov	x0, #0x1                   	// #1
   16cec:	b	16cdc <mpfr_div_2ui@@Base+0x424>

0000000000016cf0 <mpfr_fdump@@Base>:
   16cf0:	stp	x29, x30, [sp, #-128]!
   16cf4:	mov	x29, sp
   16cf8:	stp	x19, x20, [sp, #16]
   16cfc:	mov	x20, x0
   16d00:	ldr	w0, [x1, #8]
   16d04:	stp	x21, x22, [sp, #32]
   16d08:	mov	x21, x1
   16d0c:	stp	x23, x24, [sp, #48]
   16d10:	stp	x25, x26, [sp, #64]
   16d14:	stp	x27, x28, [sp, #80]
   16d18:	tbz	w0, #31, 16d28 <mpfr_fdump@@Base+0x38>
   16d1c:	mov	x1, x20
   16d20:	mov	w0, #0x2d                  	// #45
   16d24:	bl	be20 <fputc@plt>
   16d28:	ldr	x0, [x21, #16]
   16d2c:	mov	x1, #0x2                   	// #2
   16d30:	movk	x1, #0x8000, lsl #48
   16d34:	cmp	x0, x1
   16d38:	b.ne	16d74 <mpfr_fdump@@Base+0x84>  // b.any
   16d3c:	adrp	x0, 54000 <mpfr_free_pool@@Base+0x2eec>
   16d40:	mov	x1, x20
   16d44:	add	x0, x0, #0xa10
   16d48:	bl	bb40 <fputs@plt>
   16d4c:	mov	x1, x20
   16d50:	mov	w0, #0xa                   	// #10
   16d54:	bl	bda0 <putc@plt>
   16d58:	ldp	x19, x20, [sp, #16]
   16d5c:	ldp	x21, x22, [sp, #32]
   16d60:	ldp	x23, x24, [sp, #48]
   16d64:	ldp	x25, x26, [sp, #64]
   16d68:	ldp	x27, x28, [sp, #80]
   16d6c:	ldp	x29, x30, [sp], #128
   16d70:	ret
   16d74:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   16d78:	cmp	x0, x1
   16d7c:	b.ne	16d90 <mpfr_fdump@@Base+0xa0>  // b.any
   16d80:	adrp	x0, 55000 <mpfr_free_pool@@Base+0x3eec>
   16d84:	mov	x1, x20
   16d88:	add	x0, x0, #0x508
   16d8c:	b	16d48 <mpfr_fdump@@Base+0x58>
   16d90:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   16d94:	cmp	x0, x1
   16d98:	b.ne	16dac <mpfr_fdump@@Base+0xbc>  // b.any
   16d9c:	mov	x1, x20
   16da0:	mov	w0, #0x30                  	// #48
   16da4:	bl	be20 <fputc@plt>
   16da8:	b	16d4c <mpfr_fdump@@Base+0x5c>
   16dac:	ldr	x22, [x21]
   16db0:	mov	x1, x20
   16db4:	ldr	x0, [x21, #24]
   16db8:	sub	x23, x22, #0x1
   16dbc:	str	x0, [sp, #104]
   16dc0:	adrp	x0, 54000 <mpfr_free_pool@@Base+0x2eec>
   16dc4:	add	x0, x0, #0xa16
   16dc8:	bl	bb40 <fputs@plt>
   16dcc:	mov	x0, #0x40                  	// #64
   16dd0:	add	x24, sp, #0x78
   16dd4:	mov	w19, #0x0                   	// #0
   16dd8:	mov	w27, #0x54                  	// #84
   16ddc:	sdiv	x23, x23, x0
   16de0:	mov	w0, #0x1                   	// #1
   16de4:	tbz	x23, #63, 16e4c <mpfr_fdump@@Base+0x15c>
   16de8:	tbz	x22, #63, 16df8 <mpfr_fdump@@Base+0x108>
   16dec:	mov	x1, x20
   16df0:	mov	w0, #0x5d                  	// #93
   16df4:	bl	bda0 <putc@plt>
   16df8:	ldr	x22, [x21, #16]
   16dfc:	mov	x0, #0x4                   	// #4
   16e00:	movk	x0, #0x8000, lsl #48
   16e04:	cmp	x22, x0
   16e08:	b.ne	16ec4 <mpfr_fdump@@Base+0x1d4>  // b.any
   16e0c:	add	x2, x21, #0x20
   16e10:	mov	x0, x20
   16e14:	adrp	x1, 54000 <mpfr_free_pool@@Base+0x2eec>
   16e18:	add	x1, x1, #0xa19
   16e1c:	bl	c5e0 <__gmp_fprintf@plt>
   16e20:	add	x0, sp, #0x78
   16e24:	mov	w1, #0x55                  	// #85
   16e28:	strb	w1, [x0, w19, sxtw]
   16e2c:	add	w19, w19, #0x1
   16e30:	add	x2, sp, #0x78
   16e34:	mov	x0, x20
   16e38:	adrp	x1, 54000 <mpfr_free_pool@@Base+0x2eec>
   16e3c:	add	x1, x1, #0xa23
   16e40:	strb	wzr, [x2, w19, sxtw]
   16e44:	bl	cd80 <fprintf@plt>
   16e48:	b	16d4c <mpfr_fdump@@Base+0x5c>
   16e4c:	ldr	x1, [sp, #104]
   16e50:	ldr	x26, [x1, x23, lsl #3]
   16e54:	cbz	w0, 16e68 <mpfr_fdump@@Base+0x178>
   16e58:	tbnz	x26, #63, 16e68 <mpfr_fdump@@Base+0x178>
   16e5c:	mov	w0, #0x4e                  	// #78
   16e60:	strb	w0, [x24, w19, sxtw]
   16e64:	add	w19, w19, #0x1
   16e68:	sub	x28, x22, #0x40
   16e6c:	mov	x25, #0x8000000000000000    	// #-9223372036854775808
   16e70:	tst	x26, x25
   16e74:	mov	x1, x20
   16e78:	cset	w0, ne  // ne = any
   16e7c:	add	w0, w0, #0x30
   16e80:	bl	bda0 <putc@plt>
   16e84:	subs	x22, x22, #0x1
   16e88:	b.ne	16eac <mpfr_fdump@@Base+0x1bc>  // b.any
   16e8c:	sub	x0, x25, #0x1
   16e90:	tst	x0, x26
   16e94:	b.eq	16eb8 <mpfr_fdump@@Base+0x1c8>  // b.none
   16e98:	mov	x1, x20
   16e9c:	mov	w0, #0x5b                  	// #91
   16ea0:	bl	bda0 <putc@plt>
   16ea4:	strb	w27, [x24, w19, sxtw]
   16ea8:	add	w19, w19, #0x1
   16eac:	lsr	x25, x25, #1
   16eb0:	cmp	x28, x22
   16eb4:	b.ne	16e70 <mpfr_fdump@@Base+0x180>  // b.any
   16eb8:	sub	x23, x23, #0x1
   16ebc:	mov	w0, #0x0                   	// #0
   16ec0:	b	16de4 <mpfr_fdump@@Base+0xf4>
   16ec4:	adrp	x1, 54000 <mpfr_free_pool@@Base+0x2eec>
   16ec8:	add	x1, x1, #0xa1e
   16ecc:	mov	x2, x22
   16ed0:	mov	x0, x20
   16ed4:	bl	cd80 <fprintf@plt>
   16ed8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   16edc:	ldr	x1, [x0, #2528]
   16ee0:	add	x0, x0, #0x9e0
   16ee4:	blr	x1
   16ee8:	mrs	x1, tpidr_el0
   16eec:	ldr	x0, [x1, x0]
   16ef0:	cmp	x22, x0
   16ef4:	b.ge	16f04 <mpfr_fdump@@Base+0x214>  // b.tcont
   16ef8:	add	x0, sp, #0x78
   16efc:	mov	w1, #0x3c                  	// #60
   16f00:	b	16e28 <mpfr_fdump@@Base+0x138>
   16f04:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   16f08:	ldr	x2, [x0, #2560]
   16f0c:	add	x0, x0, #0xa00
   16f10:	blr	x2
   16f14:	ldr	x0, [x1, x0]
   16f18:	cmp	x22, x0
   16f1c:	b.le	16f2c <mpfr_fdump@@Base+0x23c>
   16f20:	add	x0, sp, #0x78
   16f24:	mov	w1, #0x3e                  	// #62
   16f28:	b	16e28 <mpfr_fdump@@Base+0x138>
   16f2c:	cbz	w19, 16d4c <mpfr_fdump@@Base+0x5c>
   16f30:	b	16e30 <mpfr_fdump@@Base+0x140>

0000000000016f34 <mpfr_dump@@Base>:
   16f34:	mov	x1, x0
   16f38:	adrp	x0, 73000 <__gmpfr_l2b@@Base+0x200>
   16f3c:	ldr	x0, [x0, #3992]
   16f40:	ldr	x0, [x0]
   16f44:	b	bc70 <mpfr_fdump@plt>

0000000000016f48 <mpfr_eq@@Base>:
   16f48:	ldr	x3, [x0, #16]
   16f4c:	mov	x5, #0x8000000000000003    	// #-9223372036854775805
   16f50:	cmp	x3, x5
   16f54:	b.le	16fa0 <mpfr_eq@@Base+0x58>
   16f58:	ldr	x4, [x1, #16]
   16f5c:	cmp	x4, x5
   16f60:	b.gt	16fcc <mpfr_eq@@Base+0x84>
   16f64:	ldr	x2, [x1, #16]
   16f68:	mov	x4, #0x2                   	// #2
   16f6c:	movk	x4, #0x8000, lsl #48
   16f70:	cmp	x2, x4
   16f74:	b.eq	16fb0 <mpfr_eq@@Base+0x68>  // b.none
   16f78:	mov	x4, #0x8000000000000003    	// #-9223372036854775805
   16f7c:	cmp	x3, x4
   16f80:	b.ne	16fb8 <mpfr_eq@@Base+0x70>  // b.any
   16f84:	cmp	x2, x3
   16f88:	b.ne	16fb0 <mpfr_eq@@Base+0x68>  // b.any
   16f8c:	ldr	w2, [x0, #8]
   16f90:	ldr	w0, [x1, #8]
   16f94:	cmp	w2, w0
   16f98:	cset	w0, eq  // eq = none
   16f9c:	ret
   16fa0:	mov	x2, #0x2                   	// #2
   16fa4:	movk	x2, #0x8000, lsl #48
   16fa8:	cmp	x3, x2
   16fac:	b.ne	16f64 <mpfr_eq@@Base+0x1c>  // b.any
   16fb0:	mov	w0, #0x0                   	// #0
   16fb4:	b	16f9c <mpfr_eq@@Base+0x54>
   16fb8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   16fbc:	cmp	x3, x0
   16fc0:	b.ne	16fb0 <mpfr_eq@@Base+0x68>  // b.any
   16fc4:	cmp	x2, x3
   16fc8:	b	16f98 <mpfr_eq@@Base+0x50>
   16fcc:	ldr	w6, [x0, #8]
   16fd0:	ldr	w5, [x1, #8]
   16fd4:	cmp	w6, w5
   16fd8:	b.ne	16fb0 <mpfr_eq@@Base+0x68>  // b.any
   16fdc:	cmp	x3, x4
   16fe0:	b.ne	16fb0 <mpfr_eq@@Base+0x68>  // b.any
   16fe4:	ldr	x7, [x0]
   16fe8:	ldr	x6, [x1]
   16fec:	sub	x7, x7, #0x1
   16ff0:	ldr	x5, [x0, #24]
   16ff4:	sub	x6, x6, #0x1
   16ff8:	asr	x7, x7, #6
   16ffc:	asr	x6, x6, #6
   17000:	add	x4, x7, #0x1
   17004:	add	x3, x6, #0x1
   17008:	cmp	x7, x6
   1700c:	ldr	x8, [x1, #24]
   17010:	b.ge	1702c <mpfr_eq@@Base+0xe4>  // b.tcont
   17014:	mov	x0, x4
   17018:	mov	x4, x3
   1701c:	mov	x3, x0
   17020:	mov	x0, x5
   17024:	mov	x5, x8
   17028:	mov	x8, x0
   1702c:	cmp	x4, x3
   17030:	b.le	170a8 <mpfr_eq@@Base+0x160>
   17034:	lsl	x1, x3, #6
   17038:	cmp	x2, x3, lsl #6
   1703c:	b.ls	170a0 <mpfr_eq@@Base+0x158>  // b.plast
   17040:	sub	w0, w4, #0x1
   17044:	sub	x1, x2, x1
   17048:	sub	w0, w0, w3
   1704c:	add	x9, x5, #0x8
   17050:	sxtw	x6, w0
   17054:	cmp	x1, #0x3f
   17058:	ccmp	w0, #0x0, #0x1, hi  // hi = pmore
   1705c:	b.lt	17084 <mpfr_eq@@Base+0x13c>  // b.tstop
   17060:	sub	x6, x6, #0x1
   17064:	ldr	x7, [x9, x6, lsl #3]
   17068:	cbz	x7, 17078 <mpfr_eq@@Base+0x130>
   1706c:	ldr	x0, [x5, w0, sxtw #3]
   17070:	cbz	x0, 170a0 <mpfr_eq@@Base+0x158>
   17074:	b	16fb0 <mpfr_eq@@Base+0x68>
   17078:	sub	w0, w0, #0x1
   1707c:	sub	x1, x1, #0x40
   17080:	b	17054 <mpfr_eq@@Base+0x10c>
   17084:	tbnz	w0, #31, 170a0 <mpfr_eq@@Base+0x158>
   17088:	cmp	x1, #0x3f
   1708c:	ldr	x6, [x5, w0, sxtw #3]
   17090:	b.hi	1706c <mpfr_eq@@Base+0x124>  // b.pmore
   17094:	neg	w1, w1
   17098:	lsr	x1, x6, x1
   1709c:	cbnz	x1, 16fb0 <mpfr_eq@@Base+0x68>
   170a0:	mov	x0, x3
   170a4:	b	170ac <mpfr_eq@@Base+0x164>
   170a8:	mov	x0, x4
   170ac:	sub	x1, x2, #0x1
   170b0:	lsr	x1, x1, #6
   170b4:	add	x1, x1, #0x1
   170b8:	cmp	x1, x0
   170bc:	b.cs	17110 <mpfr_eq@@Base+0x1c8>  // b.hs, b.nlast
   170c0:	mov	x0, x1
   170c4:	sub	x4, x4, x0
   170c8:	sub	x3, x3, x0
   170cc:	add	x4, x5, x4, lsl #3
   170d0:	add	x3, x8, x3, lsl #3
   170d4:	sub	x0, x0, #0x1
   170d8:	cmp	x2, #0x3f
   170dc:	ccmp	x0, #0x0, #0x4, hi  // hi = pmore
   170e0:	b.gt	17120 <mpfr_eq@@Base+0x1d8>
   170e4:	lsl	x0, x0, #3
   170e8:	ands	x2, x2, #0x3f
   170ec:	ldr	x1, [x4, x0]
   170f0:	ldr	x0, [x3, x0]
   170f4:	b.eq	17108 <mpfr_eq@@Base+0x1c0>  // b.none
   170f8:	mov	w3, #0x40                  	// #64
   170fc:	sub	w2, w3, w2
   17100:	lsr	x1, x1, x2
   17104:	lsr	x0, x0, x2
   17108:	cmp	x1, x0
   1710c:	b	16f98 <mpfr_eq@@Base+0x50>
   17110:	lsl	x1, x0, #6
   17114:	cmp	x2, x1
   17118:	csel	x2, x2, x1, ls  // ls = plast
   1711c:	b	170c4 <mpfr_eq@@Base+0x17c>
   17120:	ldr	x5, [x4, x0, lsl #3]
   17124:	ldr	x1, [x3, x0, lsl #3]
   17128:	cmp	x5, x1
   1712c:	b.ne	16fb0 <mpfr_eq@@Base+0x68>  // b.any
   17130:	sub	x2, x2, #0x40
   17134:	b	170d4 <mpfr_eq@@Base+0x18c>

0000000000017138 <mpfr_exp10@@Base>:
   17138:	mov	w3, w2
   1713c:	mov	x2, x1
   17140:	mov	x1, #0xa                   	// #10
   17144:	b	caa0 <mpfr_ui_pow@plt>

0000000000017148 <mpfr_exp2@@Base>:
   17148:	stp	x29, x30, [sp, #-192]!
   1714c:	mov	x29, sp
   17150:	stp	x27, x28, [sp, #80]
   17154:	mov	x27, x1
   17158:	ldr	x1, [x1, #16]
   1715c:	stp	x19, x20, [sp, #16]
   17160:	mov	w20, w2
   17164:	stp	x21, x22, [sp, #32]
   17168:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   1716c:	cmp	x1, x2
   17170:	stp	x23, x24, [sp, #48]
   17174:	mov	x24, x0
   17178:	stp	x25, x26, [sp, #64]
   1717c:	b.gt	1721c <mpfr_exp2@@Base+0xd4>
   17180:	mov	x3, #0x2                   	// #2
   17184:	movk	x3, #0x8000, lsl #48
   17188:	cmp	x1, x3
   1718c:	b.ne	171dc <mpfr_exp2@@Base+0x94>  // b.any
   17190:	str	x1, [x0, #16]
   17194:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   17198:	ldr	x1, [x0, #2592]
   1719c:	add	x0, x0, #0xa20
   171a0:	blr	x1
   171a4:	mrs	x1, tpidr_el0
   171a8:	add	x0, x1, x0
   171ac:	ldr	w1, [x0]
   171b0:	orr	w1, w1, #0x4
   171b4:	str	w1, [x0]
   171b8:	mov	w22, #0x0                   	// #0
   171bc:	mov	w0, w22
   171c0:	ldp	x19, x20, [sp, #16]
   171c4:	ldp	x21, x22, [sp, #32]
   171c8:	ldp	x23, x24, [sp, #48]
   171cc:	ldp	x25, x26, [sp, #64]
   171d0:	ldp	x27, x28, [sp, #80]
   171d4:	ldp	x29, x30, [sp], #192
   171d8:	ret
   171dc:	cmp	x1, x2
   171e0:	b.ne	17204 <mpfr_exp2@@Base+0xbc>  // b.any
   171e4:	ldr	w0, [x27, #8]
   171e8:	cmp	w0, #0x0
   171ec:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   171f0:	csel	x1, x1, x0, gt
   171f4:	mov	w0, #0x1                   	// #1
   171f8:	str	w0, [x24, #8]
   171fc:	str	x1, [x24, #16]
   17200:	b	171b8 <mpfr_exp2@@Base+0x70>
   17204:	mov	w3, w20
   17208:	mov	x2, #0x0                   	// #0
   1720c:	mov	x1, #0x1                   	// #1
   17210:	bl	c680 <mpfr_set_ui_2exp@plt>
   17214:	mov	w22, w0
   17218:	b	171bc <mpfr_exp2@@Base+0x74>
   1721c:	mrs	x19, tpidr_el0
   17220:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   17224:	ldr	x1, [x0, #2528]
   17228:	add	x0, x0, #0x9e0
   1722c:	blr	x1
   17230:	mov	x2, #0x0                   	// #0
   17234:	add	x23, x19, x0
   17238:	ldr	x1, [x19, x0]
   1723c:	mov	x0, x27
   17240:	sub	x1, x1, #0x2
   17244:	bl	c460 <mpfr_cmp_si_2exp@plt>
   17248:	cmp	w0, #0x0
   1724c:	b.gt	17268 <mpfr_exp2@@Base+0x120>
   17250:	cmp	w20, #0x0
   17254:	mov	w2, #0x1                   	// #1
   17258:	mov	x0, x24
   1725c:	csel	w1, w20, w2, ne  // ne = any
   17260:	bl	c450 <mpfr_underflow@plt>
   17264:	b	17214 <mpfr_exp2@@Base+0xcc>
   17268:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1726c:	ldr	x1, [x0, #2560]
   17270:	add	x0, x0, #0xa00
   17274:	blr	x1
   17278:	mov	x2, #0x0                   	// #0
   1727c:	ldr	x1, [x19, x0]
   17280:	add	x28, x19, x0
   17284:	mov	x0, x27
   17288:	bl	c460 <mpfr_cmp_si_2exp@plt>
   1728c:	tbnz	w0, #31, 172a4 <mpfr_exp2@@Base+0x15c>
   17290:	mov	w1, w20
   17294:	mov	x0, x24
   17298:	mov	w2, #0x1                   	// #1
   1729c:	bl	bfc0 <mpfr_overflow@plt>
   172a0:	b	17214 <mpfr_exp2@@Base+0xcc>
   172a4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   172a8:	ldr	x1, [x0, #2592]
   172ac:	add	x0, x0, #0xa20
   172b0:	blr	x1
   172b4:	ldr	w21, [x19, x0]
   172b8:	add	x26, x19, x0
   172bc:	ldr	x0, [x28]
   172c0:	str	x0, [sp, #104]
   172c4:	ldr	x2, [x27, #16]
   172c8:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   172cc:	ldr	x25, [x23]
   172d0:	str	x0, [x23]
   172d4:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   172d8:	str	x0, [x28]
   172dc:	tbz	x2, #63, 1735c <mpfr_exp2@@Base+0x214>
   172e0:	ldr	x0, [x24]
   172e4:	neg	x2, x2
   172e8:	add	x0, x0, #0x1
   172ec:	cmp	x2, x0
   172f0:	b.ls	1735c <mpfr_exp2@@Base+0x214>  // b.plast
   172f4:	adrp	x1, 73000 <__gmpfr_l2b@@Base+0x200>
   172f8:	ldr	w0, [x27, #8]
   172fc:	mov	w4, w20
   17300:	str	wzr, [x26]
   17304:	ldr	x1, [x1, #3928]
   17308:	cmp	w0, #0x0
   1730c:	cset	w3, gt
   17310:	mov	x0, x24
   17314:	bl	c5d0 <mpfr_round_near_x@plt>
   17318:	mov	w22, w0
   1731c:	cbz	w0, 1735c <mpfr_exp2@@Base+0x214>
   17320:	ldr	w0, [x26]
   17324:	str	x25, [x23]
   17328:	orr	w21, w21, w0
   1732c:	str	w21, [x26]
   17330:	ldr	x0, [sp, #104]
   17334:	str	x0, [x28]
   17338:	ldr	x0, [x24, #16]
   1733c:	cmp	x25, x0
   17340:	b.gt	17464 <mpfr_exp2@@Base+0x31c>
   17344:	ldr	x1, [sp, #104]
   17348:	cmp	x1, x0
   1734c:	b.lt	17464 <mpfr_exp2@@Base+0x31c>  // b.tstop
   17350:	orr	w21, w21, #0x8
   17354:	str	w21, [x26]
   17358:	b	171bc <mpfr_exp2@@Base+0x74>
   1735c:	mov	w1, #0x1                   	// #1
   17360:	mov	x0, x27
   17364:	bl	c220 <mpfr_get_si@plt>
   17368:	add	x26, sp, #0x80
   1736c:	ldr	x1, [x27]
   17370:	mov	x23, x0
   17374:	mov	x0, x26
   17378:	bl	cb10 <mpfr_init2@plt>
   1737c:	mov	x1, x27
   17380:	mov	x2, x23
   17384:	mov	x0, x26
   17388:	mov	w3, #0x0                   	// #0
   1738c:	bl	c0e0 <mpfr_sub_si@plt>
   17390:	ldr	x1, [sp, #144]
   17394:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   17398:	cmp	x1, x0
   1739c:	b.ne	17478 <mpfr_exp2@@Base+0x330>  // b.any
   173a0:	mov	w22, #0x0                   	// #0
   173a4:	mov	x0, x24
   173a8:	mov	w3, #0x0                   	// #0
   173ac:	mov	x2, #0x0                   	// #0
   173b0:	mov	x1, #0x1                   	// #1
   173b4:	bl	c680 <mpfr_set_ui_2exp@plt>
   173b8:	mov	x0, x26
   173bc:	bl	c0f0 <mpfr_clear@plt>
   173c0:	cbnz	w20, 175dc <mpfr_exp2@@Base+0x494>
   173c4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   173c8:	ldr	x1, [x0, #2528]
   173cc:	add	x0, x0, #0x9e0
   173d0:	blr	x1
   173d4:	add	x26, x19, x0
   173d8:	ldr	x0, [x19, x0]
   173dc:	sub	x0, x0, #0x1
   173e0:	cmp	x0, x23
   173e4:	b.ne	175dc <mpfr_exp2@@Base+0x494>  // b.any
   173e8:	ldr	x0, [x24, #16]
   173ec:	cbnz	x0, 175dc <mpfr_exp2@@Base+0x494>
   173f0:	mov	x0, x24
   173f4:	bl	bf80 <mpfr_powerof2_raw@plt>
   173f8:	cbz	w0, 175dc <mpfr_exp2@@Base+0x494>
   173fc:	orr	w21, w21, #0x1
   17400:	mov	w22, #0x1                   	// #1
   17404:	ldr	x0, [x26]
   17408:	str	x0, [x24, #16]
   1740c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   17410:	ldr	x1, [x0, #2592]
   17414:	add	x0, x0, #0xa20
   17418:	blr	x1
   1741c:	add	x1, x19, x0
   17420:	str	w21, [x19, x0]
   17424:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   17428:	ldr	x2, [x0, #2528]
   1742c:	add	x0, x0, #0x9e0
   17430:	blr	x2
   17434:	str	x25, [x19, x0]
   17438:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1743c:	ldr	x2, [x0, #2560]
   17440:	add	x0, x0, #0xa00
   17444:	blr	x2
   17448:	ldr	x2, [sp, #104]
   1744c:	str	x2, [x19, x0]
   17450:	ldr	x0, [x24, #16]
   17454:	cmp	x25, x0
   17458:	b.gt	17464 <mpfr_exp2@@Base+0x31c>
   1745c:	cmp	x2, x0
   17460:	b.ge	17628 <mpfr_exp2@@Base+0x4e0>  // b.tcont
   17464:	mov	w2, w20
   17468:	mov	w1, w22
   1746c:	mov	x0, x24
   17470:	bl	cbc0 <mpfr_check_range@plt>
   17474:	b	17214 <mpfr_exp2@@Base+0xcc>
   17478:	ldr	x27, [x24]
   1747c:	add	x22, x27, #0x5
   17480:	cmp	x27, #0x1
   17484:	b.eq	17564 <mpfr_exp2@@Base+0x41c>  // b.none
   17488:	b.gt	174a4 <mpfr_exp2@@Base+0x35c>
   1748c:	adrp	x2, 54000 <mpfr_free_pool@@Base+0x2eec>
   17490:	add	x2, x2, #0xa2c
   17494:	mov	w1, #0x73                  	// #115
   17498:	adrp	x0, 53000 <mpfr_free_pool@@Base+0x1eec>
   1749c:	add	x0, x0, #0x810
   174a0:	bl	cbd0 <mpfr_assert_fail@plt>
   174a4:	sub	x0, x27, #0x1
   174a8:	clz	x1, x0
   174ac:	mov	w0, #0x40                  	// #64
   174b0:	sub	w0, w0, w1
   174b4:	sxtw	x0, w0
   174b8:	add	x22, x22, x0
   174bc:	add	x28, sp, #0xa0
   174c0:	mov	x0, x28
   174c4:	mov	x1, x22
   174c8:	bl	cb10 <mpfr_init2@plt>
   174cc:	mov	x0, #0x40                  	// #64
   174d0:	str	x0, [sp, #112]
   174d4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   174d8:	ldr	x1, [x0, #2576]
   174dc:	add	x0, x0, #0xa10
   174e0:	blr	x1
   174e4:	mov	w2, #0x2                   	// #2
   174e8:	add	x1, x19, x0
   174ec:	mov	x0, x28
   174f0:	bl	c410 <mpfr_cache@plt>
   174f4:	mov	x2, x28
   174f8:	mov	x1, x26
   174fc:	mov	w3, #0x2                   	// #2
   17500:	mov	x0, x28
   17504:	bl	bdd0 <mpfr_mul@plt>
   17508:	ldr	x6, [sp, #176]
   1750c:	mov	x1, x28
   17510:	mov	x0, x28
   17514:	mov	w2, #0x0                   	// #0
   17518:	add	x6, x6, #0x2
   1751c:	sub	x6, x22, x6
   17520:	str	x6, [sp, #120]
   17524:	bl	c7e0 <mpfr_exp@plt>
   17528:	ldr	x0, [sp, #176]
   1752c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   17530:	ldr	x6, [sp, #120]
   17534:	cmp	x0, x1
   17538:	b.gt	1756c <mpfr_exp2@@Base+0x424>
   1753c:	ldr	x1, [sp, #112]
   17540:	mov	x0, #0xfffffffffffffeff    	// #-257
   17544:	movk	x0, #0x7fff, lsl #48
   17548:	sub	x0, x0, x22
   1754c:	cmp	x0, x1
   17550:	b.ge	175b8 <mpfr_exp2@@Base+0x470>  // b.tcont
   17554:	adrp	x2, 54000 <mpfr_free_pool@@Base+0x2eec>
   17558:	mov	w1, #0x86                  	// #134
   1755c:	add	x2, x2, #0xa35
   17560:	b	17498 <mpfr_exp2@@Base+0x350>
   17564:	mov	x0, #0x0                   	// #0
   17568:	b	174b8 <mpfr_exp2@@Base+0x370>
   1756c:	ldr	x1, [sp, #160]
   17570:	cmp	w20, #0x0
   17574:	ldr	x0, [sp, #184]
   17578:	sub	x1, x1, #0x1
   1757c:	cinc	x3, x27, eq  // eq = none
   17580:	mov	x2, x6
   17584:	asr	x1, x1, #6
   17588:	add	x1, x1, #0x1
   1758c:	bl	c400 <mpfr_round_p@plt>
   17590:	cbz	w0, 1753c <mpfr_exp2@@Base+0x3f4>
   17594:	ldr	w3, [sp, #168]
   17598:	mov	w2, w20
   1759c:	mov	x1, x28
   175a0:	mov	x0, x24
   175a4:	bl	c730 <mpfr_set4@plt>
   175a8:	mov	w22, w0
   175ac:	mov	x0, x28
   175b0:	bl	c0f0 <mpfr_clear@plt>
   175b4:	b	173b8 <mpfr_exp2@@Base+0x270>
   175b8:	ldr	x0, [sp, #112]
   175bc:	add	x22, x22, x0
   175c0:	mov	x0, #0x2                   	// #2
   175c4:	mov	x1, x22
   175c8:	sdiv	x0, x22, x0
   175cc:	str	x0, [sp, #112]
   175d0:	mov	x0, x28
   175d4:	bl	bf50 <mpfr_set_prec@plt>
   175d8:	b	174d4 <mpfr_exp2@@Base+0x38c>
   175dc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   175e0:	ldr	x1, [x0, #2592]
   175e4:	add	x0, x0, #0xa20
   175e8:	blr	x1
   175ec:	mov	w3, w20
   175f0:	mov	x1, x24
   175f4:	mov	x2, x23
   175f8:	str	wzr, [x19, x0]
   175fc:	mov	x0, x24
   17600:	bl	bc10 <mpfr_mul_2si@plt>
   17604:	cmp	w0, #0x0
   17608:	csel	w22, w22, w0, eq  // eq = none
   1760c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   17610:	ldr	x1, [x0, #2592]
   17614:	add	x0, x0, #0xa20
   17618:	blr	x1
   1761c:	ldr	w0, [x19, x0]
   17620:	orr	w21, w21, w0
   17624:	b	1740c <mpfr_exp2@@Base+0x2c4>
   17628:	cbz	w22, 171bc <mpfr_exp2@@Base+0x74>
   1762c:	orr	w21, w21, #0x8
   17630:	str	w21, [x1]
   17634:	b	171bc <mpfr_exp2@@Base+0x74>
   17638:	stp	x29, x30, [sp, #-192]!
   1763c:	cmp	w3, #0x3e
   17640:	mov	x29, sp
   17644:	stp	x19, x20, [sp, #16]
   17648:	stp	x21, x22, [sp, #32]
   1764c:	stp	x23, x24, [sp, #48]
   17650:	stp	x25, x26, [sp, #64]
   17654:	stp	x27, x28, [sp, #80]
   17658:	ldr	x28, [x0]
   1765c:	b.ls	17678 <mpfr_exp2@@Base+0x530>  // b.plast
   17660:	adrp	x2, 54000 <mpfr_free_pool@@Base+0x2eec>
   17664:	add	x2, x2, #0xa79
   17668:	mov	w1, #0x34                  	// #52
   1766c:	adrp	x0, 54000 <mpfr_free_pool@@Base+0x2eec>
   17670:	add	x0, x0, #0xa9c
   17674:	bl	cbd0 <mpfr_assert_fail@plt>
   17678:	sxtw	x22, w3
   1767c:	add	w24, w3, #0x1
   17680:	add	x22, x22, #0x1
   17684:	mov	x21, x1
   17688:	lsl	w24, w24, #1
   1768c:	mov	x27, x0
   17690:	lsl	x0, x22, #3
   17694:	mov	x26, x2
   17698:	add	x20, x4, x22, lsl #4
   1769c:	mov	w23, w3
   176a0:	mov	x19, x4
   176a4:	mov	x25, x5
   176a8:	add	x24, x4, w24, sxtw #4
   176ac:	add	x22, x5, x22, lsl #3
   176b0:	mov	x1, #0x0                   	// #0
   176b4:	str	x0, [sp, #104]
   176b8:	mov	x0, x21
   176bc:	bl	bb10 <__gmpz_scan1@plt>
   176c0:	mov	x2, x0
   176c4:	tbz	x0, #63, 176d8 <mpfr_exp2@@Base+0x590>
   176c8:	adrp	x2, 54000 <mpfr_free_pool@@Base+0x2eec>
   176cc:	mov	w1, #0x3d                  	// #61
   176d0:	add	x2, x2, #0xaa3
   176d4:	b	1766c <mpfr_exp2@@Base+0x524>
   176d8:	mov	x1, x21
   176dc:	mov	x0, x21
   176e0:	str	x2, [sp, #112]
   176e4:	bl	c7d0 <__gmpz_tdiv_q_2exp@plt>
   176e8:	ldr	x2, [sp, #112]
   176ec:	mov	x0, x24
   176f0:	mov	x1, x21
   176f4:	sub	x26, x26, x2
   176f8:	bl	c020 <__gmpz_set@plt>
   176fc:	add	x0, x24, #0x10
   17700:	mov	w3, #0x1                   	// #1
   17704:	cmp	w3, w23
   17708:	b.lt	17848 <mpfr_exp2@@Base+0x700>  // b.tstop
   1770c:	mov	x0, x19
   17710:	mov	x1, #0x1                   	// #1
   17714:	bl	bd30 <__gmpz_set_ui@plt>
   17718:	mov	x21, #0x1                   	// #1
   1771c:	mov	x0, x20
   17720:	mov	x1, #0x1                   	// #1
   17724:	bl	bd30 <__gmpz_set_ui@plt>
   17728:	str	xzr, [x25]
   1772c:	ldr	x0, [sp, #104]
   17730:	mov	w7, #0x0                   	// #0
   17734:	mov	x3, #0x0                   	// #0
   17738:	str	xzr, [x25, x0]
   1773c:	lsl	x0, x21, x23
   17740:	str	x0, [sp, #104]
   17744:	ldr	x0, [sp, #104]
   17748:	cmp	x3, x28
   1774c:	sxtw	x4, w7
   17750:	ccmp	x21, x0, #0x2, lt  // lt = tstop
   17754:	b.cc	17870 <mpfr_exp2@@Base+0x728>  // b.lo, b.ul, b.last
   17758:	mov	x23, x4
   1775c:	mov	x25, x4
   17760:	mov	x6, #0x0                   	// #0
   17764:	sub	x23, x23, #0x1
   17768:	cmp	w25, #0x0
   1776c:	b.gt	17a1c <mpfr_exp2@@Base+0x8d4>
   17770:	ldr	w0, [x20, #4]
   17774:	mov	x1, #0xfffffffffffffff8    	// #-8
   17778:	ldr	x2, [x20, #8]
   1777c:	cmp	w0, #0x0
   17780:	cneg	w0, w0, lt  // lt = tstop
   17784:	add	x1, x1, w0, sxtw #3
   17788:	sbfiz	x0, x0, #6, #32
   1778c:	ldr	x2, [x2, x1]
   17790:	clz	x2, x2
   17794:	sub	x0, x0, x2
   17798:	lsl	x2, x28, #1
   1779c:	subs	x22, x0, x28, lsl #1
   177a0:	b.mi	17abc <mpfr_exp2@@Base+0x974>  // b.first
   177a4:	mov	x2, x22
   177a8:	mov	x1, x20
   177ac:	mov	x0, x20
   177b0:	bl	c1c0 <__gmpz_fdiv_q_2exp@plt>
   177b4:	ldr	w2, [x19, #4]
   177b8:	mov	x0, #0xfffffffffffffff8    	// #-8
   177bc:	ldr	x1, [x19, #8]
   177c0:	cmp	w2, #0x0
   177c4:	cneg	w2, w2, lt  // lt = tstop
   177c8:	add	x0, x0, w2, sxtw #3
   177cc:	sbfiz	x2, x2, #6, #32
   177d0:	ldr	x0, [x1, x0]
   177d4:	clz	x0, x0
   177d8:	sub	x0, x2, x0
   177dc:	sub	x2, x0, x28
   177e0:	sub	x22, x22, x2
   177e4:	cmp	x2, #0x0
   177e8:	b.le	17ad0 <mpfr_exp2@@Base+0x988>
   177ec:	mov	x1, x19
   177f0:	mov	x0, x19
   177f4:	bl	c1c0 <__gmpz_fdiv_q_2exp@plt>
   177f8:	mov	x2, x19
   177fc:	mov	x1, x20
   17800:	mov	x0, x20
   17804:	bl	bbb0 <__gmpz_tdiv_q@plt>
   17808:	mov	x1, x20
   1780c:	mov	x0, x27
   17810:	mov	w2, #0x3                   	// #3
   17814:	bl	c2d0 <mpfr_set_z@plt>
   17818:	ldr	x2, [x27, #16]
   1781c:	sub	x21, x21, #0x1
   17820:	ldp	x19, x20, [sp, #16]
   17824:	add	x22, x22, x2
   17828:	ldp	x23, x24, [sp, #48]
   1782c:	msub	x26, x21, x26, x22
   17830:	ldp	x21, x22, [sp, #32]
   17834:	str	x26, [x27, #16]
   17838:	ldp	x25, x26, [sp, #64]
   1783c:	ldp	x27, x28, [sp, #80]
   17840:	ldp	x29, x30, [sp], #192
   17844:	ret
   17848:	sub	x2, x0, #0x10
   1784c:	str	x0, [sp, #112]
   17850:	mov	x1, x2
   17854:	str	w3, [sp, #120]
   17858:	bl	c070 <__gmpz_mul@plt>
   1785c:	ldr	x0, [sp, #112]
   17860:	ldr	w3, [sp, #120]
   17864:	add	x0, x0, #0x10
   17868:	add	w3, w3, #0x1
   1786c:	b	17704 <mpfr_exp2@@Base+0x5bc>
   17870:	add	w0, w7, #0x1
   17874:	add	x21, x21, #0x1
   17878:	mov	x1, x21
   1787c:	str	w7, [sp, #120]
   17880:	sxtw	x5, w0
   17884:	sbfiz	x23, x0, #4, #32
   17888:	str	xzr, [x22, w0, sxtw #3]
   1788c:	add	x0, x19, w0, sxtw #4
   17890:	str	x5, [sp, #112]
   17894:	stp	x3, x4, [sp, #128]
   17898:	bl	bd30 <__gmpz_set_ui@plt>
   1789c:	add	x0, x20, x23
   178a0:	mov	x1, x21
   178a4:	bl	bd30 <__gmpz_set_ui@plt>
   178a8:	ldp	x3, x4, [sp, #128]
   178ac:	sub	x23, x23, #0x10
   178b0:	ldr	w7, [sp, #120]
   178b4:	mov	x6, x24
   178b8:	ldr	x5, [sp, #112]
   178bc:	add	x23, x19, x23
   178c0:	mov	x8, x21
   178c4:	sub	w9, w7, w4
   178c8:	sub	x23, x23, #0x10
   178cc:	tbz	w8, #0, 178d8 <mpfr_exp2@@Base+0x790>
   178d0:	mov	w7, w5
   178d4:	b	17744 <mpfr_exp2@@Base+0x5fc>
   178d8:	add	x11, x20, x5, lsl #4
   178dc:	lsl	x3, x5, #4
   178e0:	mov	x2, x6
   178e4:	mov	x1, x11
   178e8:	mov	x0, x11
   178ec:	str	x3, [sp, #112]
   178f0:	str	w9, [sp, #120]
   178f4:	str	x4, [sp, #128]
   178f8:	stp	x11, x6, [sp, #152]
   178fc:	stp	x5, x8, [sp, #168]
   17900:	str	w7, [sp, #188]
   17904:	bl	c070 <__gmpz_mul@plt>
   17908:	ldr	x4, [sp, #128]
   1790c:	ldr	x3, [sp, #112]
   17910:	lsl	x10, x4, #4
   17914:	add	x1, x20, x4, lsl #4
   17918:	add	x3, x19, x3
   1791c:	mov	x0, x1
   17920:	mov	x2, x3
   17924:	str	x1, [sp, #112]
   17928:	stp	x3, x4, [sp, #128]
   1792c:	str	x10, [sp, #144]
   17930:	bl	c070 <__gmpz_mul@plt>
   17934:	ldr	w9, [sp, #120]
   17938:	ldr	x1, [sp, #112]
   1793c:	lsl	x9, x26, x9
   17940:	mov	x2, x9
   17944:	mov	x0, x1
   17948:	str	x9, [sp, #120]
   1794c:	bl	c290 <__gmpz_mul_2exp@plt>
   17950:	ldr	x1, [sp, #112]
   17954:	ldr	x11, [sp, #152]
   17958:	mov	x0, x1
   1795c:	mov	x2, x11
   17960:	bl	ca50 <__gmpz_add@plt>
   17964:	ldr	x3, [sp, #128]
   17968:	ldr	x10, [sp, #144]
   1796c:	mov	x2, x3
   17970:	add	x1, x19, x10
   17974:	mov	x0, x1
   17978:	bl	c070 <__gmpz_mul@plt>
   1797c:	ldr	x4, [sp, #136]
   17980:	mov	x1, #0xfffffffffffffff8    	// #-8
   17984:	ldr	x2, [x23, #40]
   17988:	ldr	x0, [x22, x4, lsl #3]
   1798c:	ldp	x6, x5, [sp, #160]
   17990:	add	x0, x0, #0x1
   17994:	str	x0, [x22, x4, lsl #3]
   17998:	ldr	w0, [x23, #36]
   1799c:	ldr	x9, [sp, #120]
   179a0:	cmp	w0, #0x0
   179a4:	cneg	w0, w0, lt  // lt = tstop
   179a8:	ldr	w7, [sp, #188]
   179ac:	ldr	x10, [x6, #8]
   179b0:	add	x1, x1, w0, sxtw #3
   179b4:	sbfiz	x0, x0, #6, #32
   179b8:	add	x6, x6, #0x10
   179bc:	ldr	x8, [sp, #176]
   179c0:	ldr	x3, [x2, x1]
   179c4:	mov	x2, #0xfffffffffffffff8    	// #-8
   179c8:	ldur	w1, [x6, #-12]
   179cc:	lsr	x8, x8, #1
   179d0:	clz	x3, x3
   179d4:	cmp	w1, #0x0
   179d8:	sub	x3, x0, x3
   179dc:	cneg	w1, w1, lt  // lt = tstop
   179e0:	add	x3, x3, x9
   179e4:	add	x2, x2, w1, sxtw #3
   179e8:	sbfiz	x1, x1, #6, #32
   179ec:	ldr	x2, [x10, x2]
   179f0:	clz	x0, x2
   179f4:	sub	x1, x1, x0
   179f8:	ldr	x0, [x25, x4, lsl #3]
   179fc:	sub	x3, x3, x1
   17a00:	sub	x3, x3, #0x1
   17a04:	add	x3, x3, x0
   17a08:	str	x3, [x25, x4, lsl #3]
   17a0c:	sub	x4, x4, #0x1
   17a10:	str	x3, [x25, x5, lsl #3]
   17a14:	sub	x5, x5, #0x1
   17a18:	b	178c4 <mpfr_exp2@@Base+0x77c>
   17a1c:	ldr	x2, [x22, x23, lsl #3]
   17a20:	add	x7, x20, x25, lsl #4
   17a24:	lsl	x5, x25, #4
   17a28:	mov	x1, x7
   17a2c:	mov	x0, x7
   17a30:	stp	x5, x6, [sp, #104]
   17a34:	add	x2, x24, x2, lsl #4
   17a38:	str	x7, [sp, #136]
   17a3c:	bl	c070 <__gmpz_mul@plt>
   17a40:	ldr	x5, [sp, #104]
   17a44:	lsl	x4, x23, #4
   17a48:	add	x1, x20, x23, lsl #4
   17a4c:	str	x1, [sp, #104]
   17a50:	add	x5, x19, x5
   17a54:	mov	x0, x1
   17a58:	mov	x2, x5
   17a5c:	stp	x5, x4, [sp, #120]
   17a60:	bl	c070 <__gmpz_mul@plt>
   17a64:	ldr	x0, [x22, x25, lsl #3]
   17a68:	mov	x1, #0x1                   	// #1
   17a6c:	sub	x25, x25, #0x1
   17a70:	lsl	x0, x1, x0
   17a74:	ldp	x1, x6, [sp, #104]
   17a78:	add	x6, x6, x0
   17a7c:	mov	x0, x1
   17a80:	str	x6, [sp, #112]
   17a84:	mul	x2, x6, x26
   17a88:	bl	c290 <__gmpz_mul_2exp@plt>
   17a8c:	ldr	x1, [sp, #104]
   17a90:	ldr	x7, [sp, #136]
   17a94:	mov	x0, x1
   17a98:	mov	x2, x7
   17a9c:	bl	ca50 <__gmpz_add@plt>
   17aa0:	ldp	x5, x4, [sp, #120]
   17aa4:	add	x1, x19, x4
   17aa8:	mov	x2, x5
   17aac:	mov	x0, x1
   17ab0:	bl	c070 <__gmpz_mul@plt>
   17ab4:	ldr	x6, [sp, #112]
   17ab8:	b	17764 <mpfr_exp2@@Base+0x61c>
   17abc:	sub	x2, x2, x0
   17ac0:	mov	x1, x20
   17ac4:	mov	x0, x20
   17ac8:	bl	c290 <__gmpz_mul_2exp@plt>
   17acc:	b	177b4 <mpfr_exp2@@Base+0x66c>
   17ad0:	sub	x2, x28, x0
   17ad4:	mov	x1, x19
   17ad8:	mov	x0, x19
   17adc:	bl	c290 <__gmpz_mul_2exp@plt>
   17ae0:	b	177f8 <mpfr_exp2@@Base+0x6b0>

0000000000017ae4 <mpfr_exp_3@@Base>:
   17ae4:	stp	x29, x30, [sp, #-336]!
   17ae8:	mov	x29, sp
   17aec:	stp	x21, x22, [sp, #32]
   17af0:	mrs	x21, tpidr_el0
   17af4:	stp	x19, x20, [sp, #16]
   17af8:	mov	x19, x1
   17afc:	mov	x20, x0
   17b00:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   17b04:	ldr	x1, [x0, #2592]
   17b08:	add	x0, x0, #0xa20
   17b0c:	blr	x1
   17b10:	ldr	w0, [x21, x0]
   17b14:	str	w0, [sp, #100]
   17b18:	stp	x23, x24, [sp, #48]
   17b1c:	mov	w24, w2
   17b20:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   17b24:	ldr	x1, [x0, #2528]
   17b28:	add	x0, x0, #0x9e0
   17b2c:	blr	x1
   17b30:	add	x1, x21, x0
   17b34:	ldr	x0, [x21, x0]
   17b38:	str	x0, [sp, #168]
   17b3c:	stp	x25, x26, [sp, #64]
   17b40:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   17b44:	ldr	x2, [x0, #2560]
   17b48:	add	x0, x0, #0xa00
   17b4c:	blr	x2
   17b50:	stp	x27, x28, [sp, #80]
   17b54:	ldr	x2, [x21, x0]
   17b58:	str	x2, [sp, #176]
   17b5c:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   17b60:	str	x2, [x1]
   17b64:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   17b68:	str	x1, [x21, x0]
   17b6c:	ldr	x0, [x19]
   17b70:	cmp	x0, #0x1
   17b74:	b.eq	17c2c <mpfr_exp_3@@Base+0x148>  // b.none
   17b78:	b.gt	17b94 <mpfr_exp_3@@Base+0xb0>
   17b7c:	adrp	x2, 54000 <mpfr_free_pool@@Base+0x2eec>
   17b80:	adrp	x0, 54000 <mpfr_free_pool@@Base+0x2eec>
   17b84:	add	x2, x2, #0xabc
   17b88:	add	x0, x0, #0xa9c
   17b8c:	mov	w1, #0xb7                  	// #183
   17b90:	bl	cbd0 <mpfr_assert_fail@plt>
   17b94:	ldr	x0, [x19]
   17b98:	mov	w1, #0x3a                  	// #58
   17b9c:	sub	x0, x0, #0x1
   17ba0:	clz	x0, x0
   17ba4:	subs	w0, w1, w0
   17ba8:	csel	w0, w0, wzr, pl  // pl = nfrst
   17bac:	str	w0, [sp, #104]
   17bb0:	ldr	x1, [x19]
   17bb4:	add	x26, sp, #0x110
   17bb8:	ldr	x0, [x19, #16]
   17bbc:	str	x0, [sp, #120]
   17bc0:	mov	x0, x26
   17bc4:	bl	cb10 <mpfr_init2@plt>
   17bc8:	ldr	w3, [x19, #8]
   17bcc:	mov	x1, x19
   17bd0:	mov	x0, x26
   17bd4:	mov	w2, #0x3                   	// #3
   17bd8:	bl	c730 <mpfr_set4@plt>
   17bdc:	ldr	x0, [sp, #120]
   17be0:	cmp	x0, #0x0
   17be4:	b.le	18198 <mpfr_exp_3@@Base+0x6b4>
   17be8:	mov	x2, x0
   17bec:	mov	x1, x19
   17bf0:	mov	x0, x26
   17bf4:	mov	w3, #0x0                   	// #0
   17bf8:	bl	c980 <mpfr_div_2ui@plt>
   17bfc:	ldr	x0, [sp, #120]
   17c00:	str	x0, [sp, #128]
   17c04:	ldr	x0, [sp, #288]
   17c08:	str	x0, [sp, #120]
   17c0c:	ldr	x19, [x20]
   17c10:	ldr	w0, [sp, #104]
   17c14:	ldrsw	x22, [sp, #104]
   17c18:	add	x0, x19, w0, sxtw
   17c1c:	cmp	x0, #0x1
   17c20:	b.ne	17c34 <mpfr_exp_3@@Base+0x150>  // b.any
   17c24:	mov	x22, #0x0                   	// #0
   17c28:	b	17c6c <mpfr_exp_3@@Base+0x188>
   17c2c:	str	wzr, [sp, #104]
   17c30:	b	17bb0 <mpfr_exp_3@@Base+0xcc>
   17c34:	b.gt	17c50 <mpfr_exp_3@@Base+0x16c>
   17c38:	adrp	x2, 54000 <mpfr_free_pool@@Base+0x2eec>
   17c3c:	adrp	x0, 54000 <mpfr_free_pool@@Base+0x2eec>
   17c40:	add	x2, x2, #0xad4
   17c44:	add	x0, x0, #0xa9c
   17c48:	mov	w1, #0xcb                  	// #203
   17c4c:	bl	cbd0 <mpfr_assert_fail@plt>
   17c50:	ldr	x0, [x20]
   17c54:	add	x22, x22, x0
   17c58:	mov	w0, #0x40                  	// #64
   17c5c:	sub	x22, x22, #0x1
   17c60:	clz	x22, x22
   17c64:	sub	w22, w0, w22
   17c68:	sxtw	x22, w22
   17c6c:	add	x0, x19, x22
   17c70:	str	x0, [sp, #112]
   17c74:	add	x22, x0, #0x22
   17c78:	add	x23, sp, #0xf0
   17c7c:	ldr	x0, [sp, #128]
   17c80:	add	x19, sp, #0x130
   17c84:	add	x27, sp, #0xe0
   17c88:	add	x22, x22, x0
   17c8c:	mov	x0, x23
   17c90:	mov	x1, x22
   17c94:	bl	cb10 <mpfr_init2@plt>
   17c98:	mov	x1, x22
   17c9c:	mov	x0, x19
   17ca0:	bl	cb10 <mpfr_init2@plt>
   17ca4:	mov	x0, x27
   17ca8:	bl	c010 <mpfr_mpz_init@plt>
   17cac:	str	x27, [sp, #160]
   17cb0:	ldr	x1, [sp, #120]
   17cb4:	mov	x0, #0x40                  	// #64
   17cb8:	str	x0, [sp, #136]
   17cbc:	mov	x0, #0x60                  	// #96
   17cc0:	sub	x0, x0, x1
   17cc4:	str	x0, [sp, #192]
   17cc8:	ldr	x0, [sp, #128]
   17ccc:	sub	x0, x0, #0x1
   17cd0:	str	x0, [sp, #200]
   17cd4:	cmp	x22, #0x1
   17cd8:	b.eq	17ee4 <mpfr_exp_3@@Base+0x400>  // b.none
   17cdc:	b.gt	17cf8 <mpfr_exp_3@@Base+0x214>
   17ce0:	adrp	x2, 54000 <mpfr_free_pool@@Base+0x2eec>
   17ce4:	add	x2, x2, #0xaf5
   17ce8:	mov	w1, #0xd8                  	// #216
   17cec:	adrp	x0, 54000 <mpfr_free_pool@@Base+0x2eec>
   17cf0:	add	x0, x0, #0xa9c
   17cf4:	bl	cbd0 <mpfr_assert_fail@plt>
   17cf8:	sub	x22, x22, #0x1
   17cfc:	mov	w1, #0x3a                  	// #58
   17d00:	clz	x22, x22
   17d04:	sub	w22, w1, w22
   17d08:	add	w0, w22, #0x2
   17d0c:	lsl	w28, w0, #1
   17d10:	add	w0, w0, w0, lsl #1
   17d14:	str	w0, [sp, #184]
   17d18:	sbfiz	x0, x0, #4, #32
   17d1c:	str	x0, [sp, #144]
   17d20:	bl	cd90 <mpfr_allocate_func@plt>
   17d24:	mov	x25, x0
   17d28:	mov	x1, #0x0                   	// #0
   17d2c:	ldr	w0, [sp, #184]
   17d30:	cmp	w0, w1
   17d34:	b.gt	17eec <mpfr_exp_3@@Base+0x408>
   17d38:	sbfiz	x0, x28, #3, #32
   17d3c:	str	x0, [sp, #152]
   17d40:	bl	cd90 <mpfr_allocate_func@plt>
   17d44:	mov	x28, x0
   17d48:	mov	x1, x26
   17d4c:	mov	x0, x27
   17d50:	mov	w2, #0x0                   	// #0
   17d54:	bl	ca60 <mpfr_extract@plt>
   17d58:	ldr	x2, [sp, #192]
   17d5c:	add	w3, w22, #0x1
   17d60:	mov	x5, x28
   17d64:	mov	x4, x25
   17d68:	mov	x1, x27
   17d6c:	mov	x0, x19
   17d70:	bl	17638 <mpfr_exp2@@Base+0x4f0>
   17d74:	mov	w3, #0x20                  	// #32
   17d78:	mov	x1, x19
   17d7c:	mov	x0, x19
   17d80:	mov	w2, #0x3                   	// #3
   17d84:	str	w3, [sp, #188]
   17d88:	bl	c490 <mpfr_sqr@plt>
   17d8c:	ldr	w3, [sp, #188]
   17d90:	subs	w3, w3, #0x1
   17d94:	b.ne	17d78 <mpfr_exp_3@@Base+0x294>  // b.any
   17d98:	ldr	w0, [sp, #104]
   17d9c:	mov	w6, #0x1                   	// #1
   17da0:	mov	x7, #0x80                  	// #128
   17da4:	cmp	w0, w22
   17da8:	csel	w0, w0, w22, le
   17dac:	add	w22, w22, w6
   17db0:	str	w0, [sp, #188]
   17db4:	ldr	w0, [sp, #188]
   17db8:	cmp	w6, w0
   17dbc:	b.le	17f04 <mpfr_exp_3@@Base+0x420>
   17dc0:	mov	x22, #0x0                   	// #0
   17dc4:	ldr	w0, [sp, #184]
   17dc8:	cmp	w0, w22
   17dcc:	b.gt	17f94 <mpfr_exp_3@@Base+0x4b0>
   17dd0:	ldr	x1, [sp, #144]
   17dd4:	mov	x0, x25
   17dd8:	bl	ccc0 <mpfr_free_func@plt>
   17ddc:	ldr	x1, [sp, #152]
   17de0:	mov	x0, x28
   17de4:	bl	ccc0 <mpfr_free_func@plt>
   17de8:	ldr	x0, [sp, #128]
   17dec:	cbz	x0, 18010 <mpfr_exp_3@@Base+0x52c>
   17df0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   17df4:	ldr	x1, [x0, #2592]
   17df8:	add	x0, x0, #0xa20
   17dfc:	blr	x1
   17e00:	mov	x22, #0x0                   	// #0
   17e04:	str	wzr, [x21, x0]
   17e08:	ldr	x0, [sp, #200]
   17e0c:	mov	x1, x19
   17e10:	mov	w2, #0x3                   	// #3
   17e14:	cmp	x0, x22
   17e18:	b.gt	17fa4 <mpfr_exp_3@@Base+0x4c0>
   17e1c:	mov	x0, x23
   17e20:	bl	c490 <mpfr_sqr@plt>
   17e24:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   17e28:	ldr	x1, [x0, #2592]
   17e2c:	add	x0, x0, #0xa20
   17e30:	blr	x1
   17e34:	ldr	w0, [x21, x0]
   17e38:	tbz	w0, #1, 17fb4 <mpfr_exp_3@@Base+0x4d0>
   17e3c:	mov	w1, w24
   17e40:	mov	x0, x20
   17e44:	mov	w2, #0x1                   	// #1
   17e48:	bl	bfc0 <mpfr_overflow@plt>
   17e4c:	mov	w28, w0
   17e50:	ldr	w0, [sp, #100]
   17e54:	orr	w0, w0, #0x2
   17e58:	str	w0, [sp, #100]
   17e5c:	mov	x0, x27
   17e60:	bl	c200 <mpfr_mpz_clear@plt>
   17e64:	mov	x0, x19
   17e68:	bl	c0f0 <mpfr_clear@plt>
   17e6c:	mov	x0, x23
   17e70:	bl	c0f0 <mpfr_clear@plt>
   17e74:	mov	x0, x26
   17e78:	bl	c0f0 <mpfr_clear@plt>
   17e7c:	ldp	x19, x20, [sp, #16]
   17e80:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   17e84:	ldr	x1, [x0, #2592]
   17e88:	add	x0, x0, #0xa20
   17e8c:	blr	x1
   17e90:	ldr	w1, [sp, #100]
   17e94:	ldp	x23, x24, [sp, #48]
   17e98:	ldp	x25, x26, [sp, #64]
   17e9c:	str	w1, [x21, x0]
   17ea0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   17ea4:	ldr	x1, [x0, #2528]
   17ea8:	add	x0, x0, #0x9e0
   17eac:	blr	x1
   17eb0:	ldr	x1, [sp, #168]
   17eb4:	str	x1, [x21, x0]
   17eb8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   17ebc:	ldr	x1, [x0, #2560]
   17ec0:	add	x0, x0, #0xa00
   17ec4:	blr	x1
   17ec8:	ldr	x1, [sp, #176]
   17ecc:	str	x1, [x21, x0]
   17ed0:	mov	w0, w28
   17ed4:	ldp	x21, x22, [sp, #32]
   17ed8:	ldp	x27, x28, [sp, #80]
   17edc:	ldp	x29, x30, [sp], #336
   17ee0:	ret
   17ee4:	mov	w22, #0xfffffffa            	// #-6
   17ee8:	b	17d08 <mpfr_exp_3@@Base+0x224>
   17eec:	add	x0, x25, x1, lsl #4
   17ef0:	str	x1, [sp, #152]
   17ef4:	bl	c010 <mpfr_mpz_init@plt>
   17ef8:	ldr	x1, [sp, #152]
   17efc:	add	x1, x1, #0x1
   17f00:	b	17d2c <mpfr_exp_3@@Base+0x248>
   17f04:	ldr	x0, [sp, #160]
   17f08:	mov	w2, w6
   17f0c:	mov	x1, x26
   17f10:	str	w6, [sp, #208]
   17f14:	str	x7, [sp, #216]
   17f18:	bl	ca60 <mpfr_extract@plt>
   17f1c:	ldr	w0, [sp, #228]
   17f20:	ldr	w6, [sp, #208]
   17f24:	ldr	x7, [sp, #216]
   17f28:	cbz	w0, 17f70 <mpfr_exp_3@@Base+0x48c>
   17f2c:	ldr	x1, [sp, #160]
   17f30:	mov	x5, x28
   17f34:	ldr	x0, [sp, #120]
   17f38:	mov	x4, x25
   17f3c:	sub	w3, w22, w6
   17f40:	str	x7, [sp, #208]
   17f44:	sub	x2, x7, x0
   17f48:	mov	x0, x23
   17f4c:	str	w6, [sp, #216]
   17f50:	bl	17638 <mpfr_exp2@@Base+0x4f0>
   17f54:	mov	x2, x23
   17f58:	mov	x1, x19
   17f5c:	mov	x0, x19
   17f60:	mov	w3, #0x3                   	// #3
   17f64:	bl	bdd0 <mpfr_mul@plt>
   17f68:	ldr	w6, [sp, #216]
   17f6c:	ldr	x7, [sp, #208]
   17f70:	cmp	w6, #0x38
   17f74:	b.ne	17f88 <mpfr_exp_3@@Base+0x4a4>  // b.any
   17f78:	adrp	x2, 54000 <mpfr_free_pool@@Base+0x2eec>
   17f7c:	mov	w1, #0xf5                  	// #245
   17f80:	add	x2, x2, #0xb00
   17f84:	b	17cec <mpfr_exp_3@@Base+0x208>
   17f88:	lsl	x7, x7, #1
   17f8c:	add	w6, w6, #0x1
   17f90:	b	17db4 <mpfr_exp_3@@Base+0x2d0>
   17f94:	add	x0, x25, x22, lsl #4
   17f98:	add	x22, x22, #0x1
   17f9c:	bl	c200 <mpfr_mpz_clear@plt>
   17fa0:	b	17dc4 <mpfr_exp_3@@Base+0x2e0>
   17fa4:	mov	x0, x19
   17fa8:	add	x22, x22, #0x1
   17fac:	bl	c490 <mpfr_sqr@plt>
   17fb0:	b	17e08 <mpfr_exp_3@@Base+0x324>
   17fb4:	tbz	w0, #0, 18110 <mpfr_exp_3@@Base+0x62c>
   17fb8:	mov	w3, #0x3                   	// #3
   17fbc:	mov	x1, x19
   17fc0:	mov	x2, #0x1                   	// #1
   17fc4:	mov	x0, x19
   17fc8:	bl	c350 <mpfr_mul_2ui@plt>
   17fcc:	mov	x1, x19
   17fd0:	mov	x0, x23
   17fd4:	mov	w2, #0x3                   	// #3
   17fd8:	bl	c490 <mpfr_sqr@plt>
   17fdc:	ldr	x1, [sp, #256]
   17fe0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   17fe4:	cmp	x1, x0
   17fe8:	b.ne	1811c <mpfr_exp_3@@Base+0x638>  // b.any
   17fec:	cmp	w24, #0x0
   17ff0:	mov	w2, #0x1                   	// #1
   17ff4:	mov	x0, x20
   17ff8:	csel	w1, w24, w2, ne  // ne = any
   17ffc:	bl	c450 <mpfr_underflow@plt>
   18000:	mov	w28, w0
   18004:	ldr	w0, [sp, #100]
   18008:	orr	w0, w0, #0x1
   1800c:	b	17e58 <mpfr_exp_3@@Base+0x374>
   18010:	mov	x28, x19
   18014:	mov	w25, #0x0                   	// #0
   18018:	ldr	x0, [x28, #16]
   1801c:	mov	x22, #0x8000000000000003    	// #-9223372036854775805
   18020:	cmp	x0, x22
   18024:	b.le	18124 <mpfr_exp_3@@Base+0x640>
   18028:	cmp	w24, #0x0
   1802c:	ldr	x1, [x28]
   18030:	cset	w0, eq  // eq = none
   18034:	str	w0, [sp, #184]
   18038:	ldr	x0, [x28, #24]
   1803c:	sub	x1, x1, #0x1
   18040:	ldr	x2, [sp, #112]
   18044:	asr	x1, x1, #6
   18048:	ldr	x3, [x20]
   1804c:	add	x1, x1, #0x1
   18050:	cinc	x3, x3, eq  // eq = none
   18054:	bl	c400 <mpfr_round_p@plt>
   18058:	cbz	w0, 18124 <mpfr_exp_3@@Base+0x640>
   1805c:	ldr	w3, [x28, #8]
   18060:	mov	x1, x28
   18064:	mov	w2, w24
   18068:	mov	x0, x20
   1806c:	bl	c730 <mpfr_set4@plt>
   18070:	mov	w28, w0
   18074:	cbz	w25, 17e5c <mpfr_exp_3@@Base+0x378>
   18078:	ldr	x4, [x20, #16]
   1807c:	cmp	x4, x22
   18080:	b.le	17e5c <mpfr_exp_3@@Base+0x378>
   18084:	mov	x1, x20
   18088:	mov	w3, w24
   1808c:	mov	x0, x20
   18090:	mov	x2, #0xfffffffffffffffe    	// #-2
   18094:	str	x4, [sp, #104]
   18098:	bl	bc10 <mpfr_mul_2si@plt>
   1809c:	mov	w1, w0
   180a0:	cbz	w0, 17e5c <mpfr_exp_3@@Base+0x378>
   180a4:	ldr	w0, [sp, #184]
   180a8:	cmp	w28, #0x0
   180ac:	ccmp	w0, #0x0, #0x4, lt  // lt = tstop
   180b0:	b.eq	180fc <mpfr_exp_3@@Base+0x618>  // b.none
   180b4:	ldr	x2, [x20, #16]
   180b8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   180bc:	ldr	x4, [sp, #104]
   180c0:	cmp	x2, x0
   180c4:	b.ne	180fc <mpfr_exp_3@@Base+0x618>  // b.any
   180c8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   180cc:	ldr	x2, [x0, #2528]
   180d0:	add	x0, x0, #0x9e0
   180d4:	blr	x2
   180d8:	ldr	x0, [x21, x0]
   180dc:	add	x0, x0, #0x1
   180e0:	cmp	x4, x0
   180e4:	b.ne	180fc <mpfr_exp_3@@Base+0x618>  // b.any
   180e8:	mov	w1, #0x2                   	// #2
   180ec:	mov	x0, x20
   180f0:	mov	w2, #0x1                   	// #1
   180f4:	bl	c450 <mpfr_underflow@plt>
   180f8:	mov	w1, w0
   180fc:	ldr	w0, [sp, #100]
   18100:	mov	w28, w1
   18104:	orr	w0, w0, #0x1
   18108:	str	w0, [sp, #100]
   1810c:	b	17e5c <mpfr_exp_3@@Base+0x378>
   18110:	mov	w25, #0x0                   	// #0
   18114:	mov	x28, x23
   18118:	b	18018 <mpfr_exp_3@@Base+0x534>
   1811c:	mov	w25, #0x1                   	// #1
   18120:	b	18114 <mpfr_exp_3@@Base+0x630>
   18124:	ldr	x1, [sp, #112]
   18128:	mov	x0, #0xfffffffffffffeff    	// #-257
   1812c:	movk	x0, #0x7fff, lsl #48
   18130:	sub	x0, x0, x1
   18134:	ldr	x1, [sp, #136]
   18138:	cmp	x0, x1
   1813c:	b.ge	18150 <mpfr_exp_3@@Base+0x66c>  // b.tcont
   18140:	adrp	x2, 54000 <mpfr_free_pool@@Base+0x2eec>
   18144:	mov	w1, #0x146                 	// #326
   18148:	add	x2, x2, #0xb23
   1814c:	b	17cec <mpfr_exp_3@@Base+0x208>
   18150:	ldr	x0, [sp, #112]
   18154:	ldr	x1, [sp, #136]
   18158:	add	x0, x0, x1
   1815c:	str	x0, [sp, #112]
   18160:	mov	x0, #0x2                   	// #2
   18164:	ldr	x1, [sp, #112]
   18168:	add	x22, x1, #0x22
   1816c:	sdiv	x0, x1, x0
   18170:	str	x0, [sp, #136]
   18174:	ldr	x0, [sp, #128]
   18178:	add	x22, x22, x0
   1817c:	mov	x0, x23
   18180:	mov	x1, x22
   18184:	bl	bf50 <mpfr_set_prec@plt>
   18188:	mov	x1, x22
   1818c:	mov	x0, x19
   18190:	bl	bf50 <mpfr_set_prec@plt>
   18194:	b	17cd4 <mpfr_exp_3@@Base+0x1f0>
   18198:	str	xzr, [sp, #128]
   1819c:	b	17c0c <mpfr_exp_3@@Base+0x128>

00000000000181a0 <mpfr_exp@@Base>:
   181a0:	stp	x29, x30, [sp, #-144]!
   181a4:	mov	x29, sp
   181a8:	stp	x19, x20, [sp, #16]
   181ac:	mov	x20, x1
   181b0:	ldr	x1, [x1, #16]
   181b4:	stp	x21, x22, [sp, #32]
   181b8:	mov	w22, w2
   181bc:	stp	x23, x24, [sp, #48]
   181c0:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   181c4:	mov	x21, x0
   181c8:	stp	x25, x26, [sp, #64]
   181cc:	cmp	x1, x2
   181d0:	stp	x27, x28, [sp, #80]
   181d4:	b.gt	18274 <mpfr_exp@@Base+0xd4>
   181d8:	mov	x3, #0x2                   	// #2
   181dc:	movk	x3, #0x8000, lsl #48
   181e0:	cmp	x1, x3
   181e4:	b.ne	18234 <mpfr_exp@@Base+0x94>  // b.any
   181e8:	str	x1, [x0, #16]
   181ec:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   181f0:	ldr	x1, [x0, #2592]
   181f4:	add	x0, x0, #0xa20
   181f8:	blr	x1
   181fc:	mrs	x1, tpidr_el0
   18200:	add	x0, x1, x0
   18204:	ldr	w1, [x0]
   18208:	orr	w1, w1, #0x4
   1820c:	str	w1, [x0]
   18210:	mov	w1, #0x0                   	// #0
   18214:	mov	w0, w1
   18218:	ldp	x19, x20, [sp, #16]
   1821c:	ldp	x21, x22, [sp, #32]
   18220:	ldp	x23, x24, [sp, #48]
   18224:	ldp	x25, x26, [sp, #64]
   18228:	ldp	x27, x28, [sp, #80]
   1822c:	ldp	x29, x30, [sp], #144
   18230:	ret
   18234:	cmp	x1, x2
   18238:	b.ne	1825c <mpfr_exp@@Base+0xbc>  // b.any
   1823c:	ldr	w0, [x20, #8]
   18240:	cmp	w0, #0x0
   18244:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   18248:	csel	x1, x1, x0, gt
   1824c:	mov	w0, #0x1                   	// #1
   18250:	str	w0, [x21, #8]
   18254:	str	x1, [x21, #16]
   18258:	b	18210 <mpfr_exp@@Base+0x70>
   1825c:	mov	w3, w22
   18260:	mov	x2, #0x0                   	// #0
   18264:	mov	x1, #0x1                   	// #1
   18268:	bl	c680 <mpfr_set_ui_2exp@plt>
   1826c:	mov	w1, w0
   18270:	b	18214 <mpfr_exp@@Base+0x74>
   18274:	mrs	x19, tpidr_el0
   18278:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1827c:	ldr	x1, [x0, #2560]
   18280:	add	x0, x0, #0xa00
   18284:	blr	x1
   18288:	add	x1, x19, x0
   1828c:	ldr	x23, [x19, x0]
   18290:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   18294:	ldr	x2, [x0, #2480]
   18298:	add	x0, x0, #0x9b0
   1829c:	blr	x2
   182a0:	add	x24, x19, x0
   182a4:	ldr	x0, [x19, x0]
   182a8:	cmp	x23, x0
   182ac:	b.eq	18398 <mpfr_exp@@Base+0x1f8>  // b.none
   182b0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   182b4:	ldr	x2, [x0, #2592]
   182b8:	add	x0, x0, #0xa20
   182bc:	blr	x2
   182c0:	ldr	w28, [x19, x0]
   182c4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   182c8:	ldr	x2, [x0, #2528]
   182cc:	add	x0, x0, #0x9e0
   182d0:	blr	x2
   182d4:	add	x25, sp, #0x70
   182d8:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   182dc:	mov	w3, #0x0                   	// #0
   182e0:	ldr	x27, [x19, x0]
   182e4:	str	x2, [x19, x0]
   182e8:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   182ec:	str	x0, [x1]
   182f0:	mov	x0, #0x40                  	// #64
   182f4:	mov	x1, #0x20                  	// #32
   182f8:	str	x0, [sp, #112]
   182fc:	add	x0, sp, #0x68
   18300:	str	x1, [x24, #8]
   18304:	add	x1, x24, #0x28
   18308:	str	x1, [x24, #32]
   1830c:	mov	x2, #0x0                   	// #0
   18310:	str	x0, [sp, #136]
   18314:	mov	w0, #0x1                   	// #1
   18318:	str	w0, [x24, #16]
   1831c:	mov	x1, x23
   18320:	str	w0, [sp, #120]
   18324:	mov	x0, x25
   18328:	bl	bb00 <mpfr_set_si_2exp@plt>
   1832c:	add	x26, x24, #0x8
   18330:	adrp	x0, 73000 <__gmpfr_l2b@@Base+0x200>
   18334:	adrp	x1, 73000 <__gmpfr_l2b@@Base+0x200>
   18338:	cmp	x23, #0x0
   1833c:	mov	x2, x25
   18340:	ldr	x0, [x0, #4048]
   18344:	mov	w3, #0x2                   	// #2
   18348:	ldr	x1, [x1, #3984]
   1834c:	csel	x1, x1, x0, lt  // lt = tstop
   18350:	mov	x0, x26
   18354:	bl	bdd0 <mpfr_mul@plt>
   18358:	str	x23, [x24]
   1835c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   18360:	ldr	x1, [x0, #2592]
   18364:	add	x0, x0, #0xa20
   18368:	blr	x1
   1836c:	str	w28, [x19, x0]
   18370:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   18374:	ldr	x1, [x0, #2528]
   18378:	add	x0, x0, #0x9e0
   1837c:	blr	x1
   18380:	str	x27, [x19, x0]
   18384:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   18388:	ldr	x1, [x0, #2560]
   1838c:	add	x0, x0, #0xa00
   18390:	blr	x1
   18394:	str	x23, [x19, x0]
   18398:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1839c:	ldr	x1, [x0, #2480]
   183a0:	add	x0, x0, #0x9b0
   183a4:	blr	x1
   183a8:	add	x23, x19, x0
   183ac:	add	x1, x23, #0x8
   183b0:	mov	x0, x20
   183b4:	mov	w2, #0x1                   	// #1
   183b8:	bl	ca30 <mpfr_cmp3@plt>
   183bc:	tbnz	w0, #31, 183d4 <mpfr_exp@@Base+0x234>
   183c0:	mov	w1, w22
   183c4:	mov	x0, x21
   183c8:	mov	w2, #0x1                   	// #1
   183cc:	bl	bfc0 <mpfr_overflow@plt>
   183d0:	b	1826c <mpfr_exp@@Base+0xcc>
   183d4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   183d8:	ldr	x1, [x0, #2528]
   183dc:	add	x0, x0, #0x9e0
   183e0:	blr	x1
   183e4:	add	x1, x19, x0
   183e8:	ldr	x25, [x19, x0]
   183ec:	ldr	x0, [x23, #48]
   183f0:	cmp	x25, x0
   183f4:	b.eq	18508 <mpfr_exp@@Base+0x368>  // b.none
   183f8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   183fc:	ldr	x2, [x0, #2592]
   18400:	add	x0, x0, #0xa20
   18404:	blr	x2
   18408:	ldr	w28, [x19, x0]
   1840c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   18410:	ldr	x2, [x0, #2560]
   18414:	add	x0, x0, #0xa00
   18418:	blr	x2
   1841c:	add	x24, sp, #0x70
   18420:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   18424:	str	x2, [x1]
   18428:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   1842c:	mov	w3, #0x0                   	// #0
   18430:	ldr	x27, [x19, x0]
   18434:	str	x1, [x19, x0]
   18438:	mov	x0, #0x3f                  	// #63
   1843c:	mov	x1, #0x20                  	// #32
   18440:	str	x0, [sp, #112]
   18444:	add	x0, sp, #0x68
   18448:	str	x1, [x23, #56]
   1844c:	add	x1, x23, #0x58
   18450:	str	x1, [x23, #80]
   18454:	mov	x2, #0x0                   	// #0
   18458:	str	x0, [sp, #136]
   1845c:	mov	w0, #0x1                   	// #1
   18460:	str	w0, [x23, #64]
   18464:	mov	x1, x25
   18468:	str	w0, [sp, #120]
   1846c:	mov	x0, x24
   18470:	bl	bb00 <mpfr_set_si_2exp@plt>
   18474:	add	x26, x23, #0x38
   18478:	mov	x1, x24
   1847c:	mov	w3, #0x0                   	// #0
   18480:	mov	x2, #0x2                   	// #2
   18484:	mov	x0, x24
   18488:	bl	c5c0 <mpfr_sub_ui@plt>
   1848c:	mvn	x2, x25
   18490:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   18494:	ldr	x1, [x0, #2576]
   18498:	add	x0, x0, #0xa10
   1849c:	blr	x1
   184a0:	add	x1, x19, x0
   184a4:	mov	x0, x26
   184a8:	lsr	x2, x2, #63
   184ac:	add	w2, w2, #0x2
   184b0:	bl	c410 <mpfr_cache@plt>
   184b4:	mov	x1, x26
   184b8:	mov	x2, x24
   184bc:	mov	x0, x26
   184c0:	mov	w3, #0x3                   	// #3
   184c4:	bl	bdd0 <mpfr_mul@plt>
   184c8:	str	x25, [x23, #48]
   184cc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   184d0:	ldr	x1, [x0, #2592]
   184d4:	add	x0, x0, #0xa20
   184d8:	blr	x1
   184dc:	str	w28, [x19, x0]
   184e0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   184e4:	ldr	x1, [x0, #2528]
   184e8:	add	x0, x0, #0x9e0
   184ec:	blr	x1
   184f0:	str	x25, [x19, x0]
   184f4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   184f8:	ldr	x1, [x0, #2560]
   184fc:	add	x0, x0, #0xa00
   18500:	blr	x1
   18504:	str	x27, [x19, x0]
   18508:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1850c:	ldr	x1, [x0, #2480]
   18510:	add	x0, x0, #0x9b0
   18514:	blr	x1
   18518:	add	x0, x19, x0
   1851c:	add	x1, x0, #0x38
   18520:	mov	w2, #0x1                   	// #1
   18524:	mov	x0, x20
   18528:	bl	ca30 <mpfr_cmp3@plt>
   1852c:	cmp	w0, #0x0
   18530:	b.gt	1854c <mpfr_exp@@Base+0x3ac>
   18534:	cmp	w22, #0x0
   18538:	mov	w2, #0x1                   	// #1
   1853c:	mov	x0, x21
   18540:	csel	w1, w22, w2, ne  // ne = any
   18544:	bl	c450 <mpfr_underflow@plt>
   18548:	b	1826c <mpfr_exp@@Base+0xcc>
   1854c:	ldr	x0, [x20, #16]
   18550:	ldr	x1, [x21]
   18554:	tbz	x0, #63, 1868c <mpfr_exp@@Base+0x4ec>
   18558:	neg	x0, x0
   1855c:	cmp	x0, x1
   18560:	b.ls	1868c <mpfr_exp@@Base+0x4ec>  // b.plast
   18564:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   18568:	ldr	x1, [x0, #2528]
   1856c:	add	x0, x0, #0x9e0
   18570:	blr	x1
   18574:	add	x1, x19, x0
   18578:	ldr	w20, [x20, #8]
   1857c:	ldr	x24, [x19, x0]
   18580:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   18584:	ldr	x2, [x0, #2560]
   18588:	add	x0, x0, #0xa00
   1858c:	blr	x2
   18590:	str	xzr, [x1]
   18594:	mov	x1, #0x2                   	// #2
   18598:	ldr	x23, [x19, x0]
   1859c:	str	x1, [x19, x0]
   185a0:	mov	w0, #0x1                   	// #1
   185a4:	str	w0, [x21, #8]
   185a8:	tbz	w20, #31, 18654 <mpfr_exp@@Base+0x4b4>
   185ac:	and	w0, w22, #0xfffffffd
   185b0:	cmp	w0, #0x1
   185b4:	b.ne	18654 <mpfr_exp@@Base+0x4b4>  // b.any
   185b8:	mov	x1, #0x0                   	// #0
   185bc:	mov	x0, x21
   185c0:	bl	c150 <mpfr_setmax@plt>
   185c4:	mov	w1, #0xffffffff            	// #-1
   185c8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   185cc:	ldr	x2, [x0, #2528]
   185d0:	add	x0, x0, #0x9e0
   185d4:	blr	x2
   185d8:	str	x24, [x19, x0]
   185dc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   185e0:	ldr	x2, [x0, #2560]
   185e4:	add	x0, x0, #0xa00
   185e8:	blr	x2
   185ec:	str	x23, [x19, x0]
   185f0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   185f4:	ldr	x3, [x0, #2528]
   185f8:	add	x0, x0, #0x9e0
   185fc:	blr	x3
   18600:	ldr	x0, [x19, x0]
   18604:	ldr	x2, [x21, #16]
   18608:	cmp	x2, x0
   1860c:	b.lt	18734 <mpfr_exp@@Base+0x594>  // b.tstop
   18610:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   18614:	ldr	x3, [x0, #2560]
   18618:	add	x0, x0, #0xa00
   1861c:	blr	x3
   18620:	ldr	x0, [x19, x0]
   18624:	cmp	x2, x0
   18628:	b.gt	18734 <mpfr_exp@@Base+0x594>
   1862c:	cbz	w1, 18214 <mpfr_exp@@Base+0x74>
   18630:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   18634:	ldr	x2, [x0, #2592]
   18638:	add	x0, x0, #0xa20
   1863c:	blr	x2
   18640:	add	x19, x19, x0
   18644:	ldr	w0, [x19]
   18648:	orr	w0, w0, #0x8
   1864c:	str	w0, [x19]
   18650:	b	18214 <mpfr_exp@@Base+0x74>
   18654:	mov	x0, x21
   18658:	mov	x1, #0x1                   	// #1
   1865c:	bl	c340 <mpfr_setmin@plt>
   18660:	cmp	w20, #0x0
   18664:	b.le	18684 <mpfr_exp@@Base+0x4e4>
   18668:	cmp	w22, #0x2
   1866c:	ccmp	w22, #0x4, #0x4, ne  // ne = any
   18670:	b.ne	18684 <mpfr_exp@@Base+0x4e4>  // b.any
   18674:	mov	x0, x21
   18678:	bl	c1b0 <mpfr_nextabove@plt>
   1867c:	mov	w1, #0x1                   	// #1
   18680:	b	185c8 <mpfr_exp@@Base+0x428>
   18684:	neg	w1, w20
   18688:	b	185c8 <mpfr_exp@@Base+0x428>
   1868c:	mov	x0, #0x61a7                	// #24999
   18690:	cmp	x1, x0
   18694:	b.le	186b0 <mpfr_exp@@Base+0x510>
   18698:	mov	x1, x20
   1869c:	mov	w2, w22
   186a0:	mov	x0, x21
   186a4:	bl	bea0 <mpfr_exp_3@plt>
   186a8:	mov	w1, w0
   186ac:	b	185f0 <mpfr_exp@@Base+0x450>
   186b0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   186b4:	ldr	x1, [x0, #2592]
   186b8:	add	x0, x0, #0xa20
   186bc:	blr	x1
   186c0:	ldr	w28, [x19, x0]
   186c4:	add	x25, x19, x0
   186c8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   186cc:	ldr	x1, [x0, #2528]
   186d0:	add	x0, x0, #0x9e0
   186d4:	blr	x1
   186d8:	add	x24, x19, x0
   186dc:	mov	w2, w22
   186e0:	ldr	x27, [x19, x0]
   186e4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   186e8:	ldr	x1, [x0, #2560]
   186ec:	add	x0, x0, #0xa00
   186f0:	blr	x1
   186f4:	add	x23, x19, x0
   186f8:	mov	x1, x20
   186fc:	ldr	x26, [x19, x0]
   18700:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   18704:	str	x0, [x24]
   18708:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   1870c:	str	x0, [x23]
   18710:	mov	x0, x21
   18714:	bl	c900 <mpfr_exp_2@plt>
   18718:	mov	w1, w0
   1871c:	ldr	w0, [x25]
   18720:	str	x26, [x23]
   18724:	orr	w0, w0, w28
   18728:	str	x27, [x24]
   1872c:	str	w0, [x25]
   18730:	b	185f0 <mpfr_exp@@Base+0x450>
   18734:	mov	w2, w22
   18738:	mov	x0, x21
   1873c:	bl	cbc0 <mpfr_check_range@plt>
   18740:	b	1826c <mpfr_exp@@Base+0xcc>

0000000000018744 <mpfr_frac@@Base>:
   18744:	stp	x29, x30, [sp, #-160]!
   18748:	mov	x29, sp
   1874c:	stp	x19, x20, [sp, #16]
   18750:	mov	x19, x0
   18754:	ldr	x0, [x1, #16]
   18758:	stp	x21, x22, [sp, #32]
   1875c:	stp	x23, x24, [sp, #48]
   18760:	stp	x25, x26, [sp, #64]
   18764:	mov	x25, x1
   18768:	mov	x1, #0x2                   	// #2
   1876c:	stp	x27, x28, [sp, #80]
   18770:	movk	x1, #0x8000, lsl #48
   18774:	cmp	x0, x1
   18778:	b.ne	187c4 <mpfr_frac@@Base+0x80>  // b.any
   1877c:	str	x0, [x19, #16]
   18780:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   18784:	ldr	x1, [x0, #2592]
   18788:	add	x0, x0, #0xa20
   1878c:	blr	x1
   18790:	mrs	x1, tpidr_el0
   18794:	add	x0, x1, x0
   18798:	ldr	w1, [x0]
   1879c:	orr	w1, w1, #0x4
   187a0:	str	w1, [x0]
   187a4:	mov	w0, #0x0                   	// #0
   187a8:	ldp	x19, x20, [sp, #16]
   187ac:	ldp	x21, x22, [sp, #32]
   187b0:	ldp	x23, x24, [sp, #48]
   187b4:	ldp	x25, x26, [sp, #64]
   187b8:	ldp	x27, x28, [sp, #80]
   187bc:	ldp	x29, x30, [sp], #160
   187c0:	ret
   187c4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   187c8:	cmp	x0, x1
   187cc:	b.ne	187e4 <mpfr_frac@@Base+0xa0>  // b.any
   187d0:	ldr	w0, [x25, #8]
   187d4:	str	w0, [x19, #8]
   187d8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   187dc:	str	x0, [x19, #16]
   187e0:	b	187a4 <mpfr_frac@@Base+0x60>
   187e4:	mov	w22, w2
   187e8:	mov	x0, x25
   187ec:	bl	c1f0 <mpfr_integer_p@plt>
   187f0:	cbnz	w0, 187d0 <mpfr_frac@@Base+0x8c>
   187f4:	ldr	x3, [x25, #16]
   187f8:	cmp	x3, #0x0
   187fc:	b.gt	18818 <mpfr_frac@@Base+0xd4>
   18800:	ldr	w3, [x25, #8]
   18804:	mov	w2, w22
   18808:	mov	x1, x25
   1880c:	mov	x0, x19
   18810:	bl	c730 <mpfr_set4@plt>
   18814:	b	187a8 <mpfr_frac@@Base+0x64>
   18818:	ldr	x20, [x25]
   1881c:	mov	x2, #0x40                  	// #64
   18820:	ldr	x27, [x25, #24]
   18824:	sub	x20, x20, #0x1
   18828:	sdiv	x20, x20, x2
   1882c:	sdiv	x2, x3, x2
   18830:	and	x3, x3, #0x3f
   18834:	sub	x20, x20, x2
   18838:	ldr	x2, [x27, x20, lsl #3]
   1883c:	lsl	x2, x2, x3
   18840:	cbz	x2, 18878 <mpfr_frac@@Base+0x134>
   18844:	clz	x24, x2
   18848:	neg	w0, w24
   1884c:	add	w3, w24, w3
   18850:	cmp	w3, #0x3f
   18854:	lsl	x24, x2, x24
   18858:	sxtw	x23, w0
   1885c:	b.le	188b8 <mpfr_frac@@Base+0x174>
   18860:	adrp	x2, 54000 <mpfr_free_pool@@Base+0x2eec>
   18864:	add	x2, x2, #0xb71
   18868:	mov	w1, #0x50                  	// #80
   1886c:	adrp	x0, 54000 <mpfr_free_pool@@Base+0x2eec>
   18870:	add	x0, x0, #0xb7f
   18874:	bl	cbd0 <mpfr_assert_fail@plt>
   18878:	sub	w3, w3, #0x40
   1887c:	sxtw	x0, w3
   18880:	sub	x20, x20, #0x1
   18884:	ldr	x2, [x27, x20, lsl #3]
   18888:	cbz	x2, 188a0 <mpfr_frac@@Base+0x15c>
   1888c:	tbz	x20, #63, 188a8 <mpfr_frac@@Base+0x164>
   18890:	adrp	x2, 54000 <mpfr_free_pool@@Base+0x2eec>
   18894:	mov	w1, #0x59                  	// #89
   18898:	add	x2, x2, #0xb86
   1889c:	b	1886c <mpfr_frac@@Base+0x128>
   188a0:	sub	x0, x0, #0x40
   188a4:	b	18880 <mpfr_frac@@Base+0x13c>
   188a8:	clz	x1, x2
   188ac:	mov	w3, w1
   188b0:	sub	x23, x0, x1
   188b4:	lsl	x24, x2, x1
   188b8:	ldr	x0, [x19]
   188bc:	mov	x1, #0x40                  	// #64
   188c0:	sub	x0, x0, #0x1
   188c4:	sdiv	x0, x0, x1
   188c8:	cmp	x0, x20
   188cc:	b.ge	1891c <mpfr_frac@@Base+0x1d8>  // b.tcont
   188d0:	add	x1, x20, #0x1
   188d4:	add	x21, sp, #0x80
   188d8:	mov	x0, x21
   188dc:	str	w3, [sp, #108]
   188e0:	lsl	x1, x1, #6
   188e4:	bl	cb10 <mpfr_init2@plt>
   188e8:	ldr	w3, [sp, #108]
   188ec:	ldr	w0, [x25, #8]
   188f0:	ldr	x25, [x21]
   188f4:	str	w0, [x21, #8]
   188f8:	mov	x0, #0x40                  	// #64
   188fc:	sub	x25, x25, #0x1
   18900:	sdiv	x25, x25, x0
   18904:	cmp	x20, x25
   18908:	b.le	18924 <mpfr_frac@@Base+0x1e0>
   1890c:	adrp	x2, 54000 <mpfr_free_pool@@Base+0x2eec>
   18910:	mov	w1, #0x6b                  	// #107
   18914:	add	x2, x2, #0xb8e
   18918:	b	1886c <mpfr_frac@@Base+0x128>
   1891c:	mov	x21, x19
   18920:	b	188ec <mpfr_frac@@Base+0x1a8>
   18924:	sub	x26, x25, x20
   18928:	ldr	x28, [x21, #24]
   1892c:	cbnz	w3, 18a4c <mpfr_frac@@Base+0x308>
   18930:	add	x2, x20, #0x1
   18934:	mov	x1, x27
   18938:	add	x0, x28, x26, lsl #3
   1893c:	bl	bb60 <__gmpn_copyd@plt>
   18940:	cmp	x26, #0x0
   18944:	b.le	18958 <mpfr_frac@@Base+0x214>
   18948:	lsl	x2, x26, #3
   1894c:	mov	x0, x28
   18950:	mov	w1, #0x0                   	// #0
   18954:	bl	c1a0 <memset@plt>
   18958:	mrs	x20, tpidr_el0
   1895c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   18960:	ldr	x1, [x0, #2592]
   18964:	add	x0, x0, #0xa20
   18968:	blr	x1
   1896c:	ldr	w24, [x20, x0]
   18970:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   18974:	ldr	x1, [x0, #2528]
   18978:	add	x0, x0, #0x9e0
   1897c:	blr	x1
   18980:	add	x1, x20, x0
   18984:	ldr	x27, [x20, x0]
   18988:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1898c:	ldr	x2, [x0, #2560]
   18990:	add	x0, x0, #0xa00
   18994:	blr	x2
   18998:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   1899c:	str	x2, [x1]
   189a0:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   189a4:	cmp	x21, x19
   189a8:	ldr	x26, [x20, x0]
   189ac:	str	x1, [x20, x0]
   189b0:	b.eq	18a74 <mpfr_frac@@Base+0x330>  // b.none
   189b4:	ldr	w3, [x21, #8]
   189b8:	mov	w2, w22
   189bc:	mov	x1, x21
   189c0:	str	xzr, [x21, #16]
   189c4:	mov	x0, x19
   189c8:	bl	c730 <mpfr_set4@plt>
   189cc:	str	w0, [sp, #124]
   189d0:	mov	x0, x21
   189d4:	bl	c0f0 <mpfr_clear@plt>
   189d8:	ldr	x0, [x19, #16]
   189dc:	add	x0, x0, x23
   189e0:	str	x0, [x19, #16]
   189e4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   189e8:	ldr	x1, [x0, #2592]
   189ec:	add	x0, x0, #0xa20
   189f0:	blr	x1
   189f4:	add	x2, x20, x0
   189f8:	str	w24, [x20, x0]
   189fc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   18a00:	ldr	x1, [x0, #2528]
   18a04:	add	x0, x0, #0x9e0
   18a08:	blr	x1
   18a0c:	str	x27, [x20, x0]
   18a10:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   18a14:	ldr	x1, [x0, #2560]
   18a18:	add	x0, x0, #0xa00
   18a1c:	blr	x1
   18a20:	ldr	x1, [x19, #16]
   18a24:	str	x26, [x20, x0]
   18a28:	ldr	w0, [sp, #124]
   18a2c:	cmp	x27, x1
   18a30:	b.gt	18ab8 <mpfr_frac@@Base+0x374>
   18a34:	cmp	x26, x1
   18a38:	b.lt	18ab8 <mpfr_frac@@Base+0x374>  // b.tstop
   18a3c:	cbz	w0, 187a8 <mpfr_frac@@Base+0x64>
   18a40:	orr	w1, w24, #0x8
   18a44:	str	w1, [x2]
   18a48:	b	187a8 <mpfr_frac@@Base+0x64>
   18a4c:	cbz	x20, 18a6c <mpfr_frac@@Base+0x328>
   18a50:	mov	x2, x20
   18a54:	mov	x1, x27
   18a58:	add	x0, x28, x26, lsl #3
   18a5c:	bl	bd40 <__gmpn_lshift@plt>
   18a60:	orr	x2, x24, x0
   18a64:	str	x2, [x28, x25, lsl #3]
   18a68:	b	18940 <mpfr_frac@@Base+0x1fc>
   18a6c:	mov	x0, #0x0                   	// #0
   18a70:	b	18a60 <mpfr_frac@@Base+0x31c>
   18a74:	ldr	x4, [x19]
   18a78:	add	x2, x25, #0x1
   18a7c:	ldr	w3, [x19, #8]
   18a80:	add	x6, sp, #0x7c
   18a84:	str	x23, [x19, #16]
   18a88:	mov	w5, w22
   18a8c:	lsl	x2, x2, #6
   18a90:	mov	x1, x28
   18a94:	mov	x0, x28
   18a98:	lsr	w3, w3, #31
   18a9c:	bl	cab0 <mpfr_round_raw@plt>
   18aa0:	cbz	w0, 189e4 <mpfr_frac@@Base+0x2a0>
   18aa4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   18aa8:	str	x0, [x28, x25, lsl #3]
   18aac:	ldr	x0, [x19, #16]
   18ab0:	add	x0, x0, #0x1
   18ab4:	b	189e0 <mpfr_frac@@Base+0x29c>
   18ab8:	mov	w1, w0
   18abc:	mov	w2, w22
   18ac0:	mov	x0, x19
   18ac4:	bl	cbc0 <mpfr_check_range@plt>
   18ac8:	b	187a8 <mpfr_frac@@Base+0x64>

0000000000018acc <mpfr_frexp@@Base>:
   18acc:	stp	x29, x30, [sp, #-80]!
   18ad0:	mov	x29, sp
   18ad4:	stp	x21, x22, [sp, #32]
   18ad8:	mrs	x21, tpidr_el0
   18adc:	mov	x22, x2
   18ae0:	stp	x19, x20, [sp, #16]
   18ae4:	mov	x19, x1
   18ae8:	stp	x25, x26, [sp, #64]
   18aec:	mov	x26, x0
   18af0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   18af4:	ldr	x1, [x0, #2592]
   18af8:	add	x0, x0, #0xa20
   18afc:	blr	x1
   18b00:	stp	x23, x24, [sp, #48]
   18b04:	add	x24, x21, x0
   18b08:	ldr	w23, [x21, x0]
   18b0c:	ldr	x0, [x2, #16]
   18b10:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   18b14:	cmp	x0, x2
   18b18:	b.gt	18b84 <mpfr_frexp@@Base+0xb8>
   18b1c:	mov	x1, #0x2                   	// #2
   18b20:	movk	x1, #0x8000, lsl #48
   18b24:	cmp	x0, x1
   18b28:	b.ne	18b58 <mpfr_frexp@@Base+0x8c>  // b.any
   18b2c:	orr	w23, w23, #0x4
   18b30:	str	w23, [x24]
   18b34:	str	x0, [x19, #16]
   18b38:	mov	w20, #0x0                   	// #0
   18b3c:	mov	w0, w20
   18b40:	ldp	x19, x20, [sp, #16]
   18b44:	ldp	x21, x22, [sp, #32]
   18b48:	ldp	x23, x24, [sp, #48]
   18b4c:	ldp	x25, x26, [sp, #64]
   18b50:	ldp	x29, x30, [sp], #80
   18b54:	ret
   18b58:	ldr	w1, [x22, #8]
   18b5c:	cmp	x0, x2
   18b60:	b.ne	18b70 <mpfr_frexp@@Base+0xa4>  // b.any
   18b64:	str	w1, [x19, #8]
   18b68:	str	x0, [x19, #16]
   18b6c:	b	18b38 <mpfr_frexp@@Base+0x6c>
   18b70:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   18b74:	str	w1, [x19, #8]
   18b78:	str	x0, [x19, #16]
   18b7c:	str	xzr, [x26]
   18b80:	b	18b38 <mpfr_frexp@@Base+0x6c>
   18b84:	mov	w2, w3
   18b88:	mov	w25, w3
   18b8c:	ldr	w3, [x22, #8]
   18b90:	mov	x1, x22
   18b94:	mov	x0, x19
   18b98:	str	wzr, [x24]
   18b9c:	bl	c730 <mpfr_set4@plt>
   18ba0:	mov	w20, w0
   18ba4:	ldr	w0, [x24]
   18ba8:	str	w23, [x24]
   18bac:	tbz	w0, #1, 18c08 <mpfr_frexp@@Base+0x13c>
   18bb0:	ldr	x0, [x22, #16]
   18bb4:	mov	w3, w25
   18bb8:	ldrsw	x1, [x22, #8]
   18bbc:	mov	x2, #0xffffffffffffffff    	// #-1
   18bc0:	add	x0, x0, #0x1
   18bc4:	str	x0, [x26]
   18bc8:	mov	x0, x19
   18bcc:	bl	bb00 <mpfr_set_si_2exp@plt>
   18bd0:	mov	w1, w0
   18bd4:	cbnz	w0, 18be0 <mpfr_frexp@@Base+0x114>
   18bd8:	cbz	w20, 18b3c <mpfr_frexp@@Base+0x70>
   18bdc:	mov	w1, w20
   18be0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   18be4:	ldr	x2, [x0, #2592]
   18be8:	add	x0, x0, #0xa20
   18bec:	blr	x2
   18bf0:	add	x21, x21, x0
   18bf4:	mov	w20, w1
   18bf8:	ldr	w0, [x21]
   18bfc:	orr	w0, w0, #0x8
   18c00:	str	w0, [x21]
   18c04:	b	18b3c <mpfr_frexp@@Base+0x70>
   18c08:	ldr	x0, [x19, #16]
   18c0c:	str	x0, [x26]
   18c10:	str	xzr, [x19, #16]
   18c14:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   18c18:	ldr	x1, [x0, #2528]
   18c1c:	add	x0, x0, #0x9e0
   18c20:	blr	x1
   18c24:	ldr	x0, [x21, x0]
   18c28:	cmp	x0, #0x0
   18c2c:	b.gt	18c58 <mpfr_frexp@@Base+0x18c>
   18c30:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   18c34:	ldr	x1, [x0, #2560]
   18c38:	add	x0, x0, #0xa00
   18c3c:	blr	x1
   18c40:	ldr	x0, [x21, x0]
   18c44:	tbnz	x0, #63, 18c58 <mpfr_frexp@@Base+0x18c>
   18c48:	cbz	w20, 18b3c <mpfr_frexp@@Base+0x70>
   18c4c:	orr	w23, w23, #0x8
   18c50:	str	w23, [x24]
   18c54:	b	18b3c <mpfr_frexp@@Base+0x70>
   18c58:	mov	w2, w25
   18c5c:	mov	w1, w20
   18c60:	mov	x0, x19
   18c64:	ldp	x19, x20, [sp, #16]
   18c68:	ldp	x21, x22, [sp, #32]
   18c6c:	ldp	x23, x24, [sp, #48]
   18c70:	ldp	x25, x26, [sp, #64]
   18c74:	ldp	x29, x30, [sp], #80
   18c78:	b	cbc0 <mpfr_check_range@plt>

0000000000018c7c <mpfr_get_d@@Base>:
   18c7c:	stp	x29, x30, [sp, #-48]!
   18c80:	mov	w5, w1
   18c84:	mov	x6, x0
   18c88:	mov	x29, sp
   18c8c:	stp	x19, x20, [sp, #16]
   18c90:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   18c94:	ldr	x19, [x0, #16]
   18c98:	cmp	x19, x1
   18c9c:	b.gt	18cfc <mpfr_get_d@@Base+0x80>
   18ca0:	mov	x0, #0x2                   	// #2
   18ca4:	movk	x0, #0x8000, lsl #48
   18ca8:	cmp	x19, x0
   18cac:	b.ne	18cc4 <mpfr_get_d@@Base+0x48>  // b.any
   18cb0:	movi	d0, #0x0
   18cb4:	fdiv	d0, d0, d0
   18cb8:	ldp	x19, x20, [sp, #16]
   18cbc:	ldp	x29, x30, [sp], #48
   18cc0:	ret
   18cc4:	ldr	w0, [x6, #8]
   18cc8:	cmp	x19, x1
   18ccc:	b.ne	18cec <mpfr_get_d@@Base+0x70>  // b.any
   18cd0:	tbz	w0, #31, 18ce0 <mpfr_get_d@@Base+0x64>
   18cd4:	adrp	x0, 54000 <mpfr_free_pool@@Base+0x2eec>
   18cd8:	ldr	d0, [x0, #3072]
   18cdc:	b	18cb8 <mpfr_get_d@@Base+0x3c>
   18ce0:	adrp	x0, 54000 <mpfr_free_pool@@Base+0x2eec>
   18ce4:	ldr	d0, [x0, #3080]
   18ce8:	b	18cb8 <mpfr_get_d@@Base+0x3c>
   18cec:	tbz	w0, #31, 18d94 <mpfr_get_d@@Base+0x118>
   18cf0:	adrp	x0, 54000 <mpfr_free_pool@@Base+0x2eec>
   18cf4:	ldr	d0, [x0, #3032]
   18cf8:	b	18cb8 <mpfr_get_d@@Base+0x3c>
   18cfc:	ldr	w20, [x0, #8]
   18d00:	cmp	w5, #0x4
   18d04:	lsr	w3, w20, #31
   18d08:	b.ne	18d28 <mpfr_get_d@@Base+0xac>  // b.any
   18d0c:	tbz	w20, #31, 18de0 <mpfr_get_d@@Base+0x164>
   18d10:	cmn	x19, #0x431
   18d14:	b.lt	18d50 <mpfr_get_d@@Base+0xd4>  // b.tstop
   18d18:	cmp	x19, #0x400
   18d1c:	b.gt	18cd4 <mpfr_get_d@@Base+0x58>
   18d20:	mov	w5, #0x3                   	// #3
   18d24:	b	18df4 <mpfr_get_d@@Base+0x178>
   18d28:	cmn	x19, #0x431
   18d2c:	b.ge	18d9c <mpfr_get_d@@Base+0x120>  // b.tcont
   18d30:	tbz	w20, #31, 18d5c <mpfr_get_d@@Base+0xe0>
   18d34:	cmp	w5, #0x3
   18d38:	b.eq	18d50 <mpfr_get_d@@Base+0xd4>  // b.none
   18d3c:	cbnz	w5, 18cf0 <mpfr_get_d@@Base+0x74>
   18d40:	mov	x2, #0xfffffffffffffbcd    	// #-1075
   18d44:	mov	x1, #0xffffffffffffffff    	// #-1
   18d48:	bl	c460 <mpfr_cmp_si_2exp@plt>
   18d4c:	tbz	w0, #31, 18cf0 <mpfr_get_d@@Base+0x74>
   18d50:	adrp	x0, 54000 <mpfr_free_pool@@Base+0x2eec>
   18d54:	ldr	d0, [x0, #3064]
   18d58:	b	18d6c <mpfr_get_d@@Base+0xf0>
   18d5c:	cmp	w5, #0x2
   18d60:	b.ne	18d7c <mpfr_get_d@@Base+0x100>  // b.any
   18d64:	adrp	x0, 54000 <mpfr_free_pool@@Base+0x2eec>
   18d68:	ldr	d0, [x0, #3040]
   18d6c:	mov	x0, #0x3cb0000000000000    	// #4372995238176751616
   18d70:	fmov	d1, x0
   18d74:	fmul	d0, d0, d1
   18d78:	b	18cb8 <mpfr_get_d@@Base+0x3c>
   18d7c:	cbnz	w5, 18d94 <mpfr_get_d@@Base+0x118>
   18d80:	mov	x2, #0xfffffffffffffbcd    	// #-1075
   18d84:	mov	x1, #0x1                   	// #1
   18d88:	bl	c460 <mpfr_cmp_si_2exp@plt>
   18d8c:	cmp	w0, #0x0
   18d90:	b.gt	18d64 <mpfr_get_d@@Base+0xe8>
   18d94:	movi	d0, #0x0
   18d98:	b	18cb8 <mpfr_get_d@@Base+0x3c>
   18d9c:	cmp	x19, #0x400
   18da0:	b.le	18df4 <mpfr_get_d@@Base+0x178>
   18da4:	tbz	w20, #31, 18dc0 <mpfr_get_d@@Base+0x144>
   18da8:	sub	w5, w5, #0x1
   18dac:	cmp	w5, #0x1
   18db0:	b.hi	18cd4 <mpfr_get_d@@Base+0x58>  // b.pmore
   18db4:	adrp	x0, 54000 <mpfr_free_pool@@Base+0x2eec>
   18db8:	ldr	d0, [x0, #3048]
   18dbc:	b	18cb8 <mpfr_get_d@@Base+0x3c>
   18dc0:	and	w5, w5, #0xfffffffd
   18dc4:	cmp	w5, #0x1
   18dc8:	b.ne	18ce0 <mpfr_get_d@@Base+0x64>  // b.any
   18dcc:	adrp	x0, 54000 <mpfr_free_pool@@Base+0x2eec>
   18dd0:	ldr	d0, [x0, #3056]
   18dd4:	b	18cb8 <mpfr_get_d@@Base+0x3c>
   18dd8:	fmov	d0, #1.000000000000000000e+00
   18ddc:	b	18e30 <mpfr_get_d@@Base+0x1b4>
   18de0:	cmn	x19, #0x431
   18de4:	b.lt	18d64 <mpfr_get_d@@Base+0xe8>  // b.tstop
   18de8:	cmp	x19, #0x400
   18dec:	b.gt	18ce0 <mpfr_get_d@@Base+0x64>
   18df0:	mov	w5, #0x2                   	// #2
   18df4:	cmn	x19, #0x3fd
   18df8:	mov	w4, #0x35                  	// #53
   18dfc:	b.ge	18e04 <mpfr_get_d@@Base+0x188>  // b.tcont
   18e00:	add	w4, w19, #0x432
   18e04:	ldr	x2, [x6]
   18e08:	sxtw	x4, w4
   18e0c:	ldr	x1, [x6, #24]
   18e10:	add	x0, sp, #0x28
   18e14:	bl	c7b0 <mpfr_round_raw_4@plt>
   18e18:	cbnz	w0, 18dd8 <mpfr_get_d@@Base+0x15c>
   18e1c:	ldr	d0, [sp, #40]
   18e20:	mov	x0, #0x3bf0000000000000    	// #4318952042648305664
   18e24:	fmov	d1, x0
   18e28:	ucvtf	d0, d0
   18e2c:	fmul	d0, d0, d1
   18e30:	mov	w0, w19
   18e34:	bl	cc30 <mpfr_scale2@plt>
   18e38:	tbz	w20, #31, 18cb8 <mpfr_get_d@@Base+0x3c>
   18e3c:	fneg	d0, d0
   18e40:	b	18cb8 <mpfr_get_d@@Base+0x3c>

0000000000018e44 <mpfr_get_d1@@Base>:
   18e44:	stp	x29, x30, [sp, #-16]!
   18e48:	mov	x2, x0
   18e4c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   18e50:	ldr	x1, [x0, #2656]
   18e54:	add	x0, x0, #0xa60
   18e58:	blr	x1
   18e5c:	mov	x29, sp
   18e60:	mrs	x1, tpidr_el0
   18e64:	ldp	x29, x30, [sp], #16
   18e68:	ldr	w1, [x1, x0]
   18e6c:	mov	x0, x2
   18e70:	b	bdb0 <mpfr_get_d@plt>

0000000000018e74 <mpfr_get_d_2exp@@Base>:
   18e74:	stp	x29, x30, [sp, #-80]!
   18e78:	mov	x29, sp
   18e7c:	stp	x19, x20, [sp, #16]
   18e80:	mov	x20, x0
   18e84:	mov	x19, x1
   18e88:	ldr	x0, [x1, #16]
   18e8c:	str	x21, [sp, #32]
   18e90:	str	d8, [sp, #40]
   18e94:	mov	x21, #0x8000000000000003    	// #-9223372036854775805
   18e98:	cmp	x0, x21
   18e9c:	b.gt	18f18 <mpfr_get_d_2exp@@Base+0xa4>
   18ea0:	str	xzr, [x20]
   18ea4:	mov	x1, #0x2                   	// #2
   18ea8:	movk	x1, #0x8000, lsl #48
   18eac:	ldr	x0, [x19, #16]
   18eb0:	cmp	x0, x1
   18eb4:	b.ne	18ed8 <mpfr_get_d_2exp@@Base+0x64>  // b.any
   18eb8:	movi	d8, #0x0
   18ebc:	fdiv	d8, d8, d8
   18ec0:	fmov	d0, d8
   18ec4:	ldr	d8, [sp, #40]
   18ec8:	ldp	x19, x20, [sp, #16]
   18ecc:	ldr	x21, [sp, #32]
   18ed0:	ldp	x29, x30, [sp], #80
   18ed4:	ret
   18ed8:	ldr	w1, [x19, #8]
   18edc:	cmp	x0, x21
   18ee0:	b.ne	18f00 <mpfr_get_d_2exp@@Base+0x8c>  // b.any
   18ee4:	adrp	x0, 54000 <mpfr_free_pool@@Base+0x2eec>
   18ee8:	tbz	w1, #31, 18ef4 <mpfr_get_d_2exp@@Base+0x80>
   18eec:	ldr	d8, [x0, #3072]
   18ef0:	b	18ec0 <mpfr_get_d_2exp@@Base+0x4c>
   18ef4:	add	x0, x0, #0xc00
   18ef8:	ldr	d8, [x0, #8]
   18efc:	b	18ec0 <mpfr_get_d_2exp@@Base+0x4c>
   18f00:	movi	d0, #0x0
   18f04:	cmp	w1, #0x0
   18f08:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   18f0c:	fmov	d8, x0
   18f10:	fcsel	d8, d8, d0, lt  // lt = tstop
   18f14:	b	18ec0 <mpfr_get_d_2exp@@Base+0x4c>
   18f18:	ldr	x0, [x19]
   18f1c:	str	x0, [sp, #48]
   18f20:	ldr	w0, [x19, #8]
   18f24:	mov	w1, w2
   18f28:	str	w0, [sp, #56]
   18f2c:	ldr	x0, [x19, #24]
   18f30:	str	xzr, [sp, #64]
   18f34:	str	x0, [sp, #72]
   18f38:	add	x0, sp, #0x30
   18f3c:	bl	bdb0 <mpfr_get_d@plt>
   18f40:	fmov	d8, d0
   18f44:	ldr	x19, [x19, #16]
   18f48:	cmp	x19, x21
   18f4c:	b.le	18fc8 <mpfr_get_d_2exp@@Base+0x154>
   18f50:	fmov	d1, #1.000000000000000000e+00
   18f54:	fcmp	d0, d1
   18f58:	b.ne	18f6c <mpfr_get_d_2exp@@Base+0xf8>  // b.any
   18f5c:	add	x19, x19, #0x1
   18f60:	fmov	d8, #5.000000000000000000e-01
   18f64:	str	x19, [x20]
   18f68:	b	18ec0 <mpfr_get_d_2exp@@Base+0x4c>
   18f6c:	fmov	d0, #-1.000000000000000000e+00
   18f70:	fcmp	d8, d0
   18f74:	b.ne	18f84 <mpfr_get_d_2exp@@Base+0x110>  // b.any
   18f78:	add	x19, x19, #0x1
   18f7c:	fmov	d8, #-5.000000000000000000e-01
   18f80:	b	18f64 <mpfr_get_d_2exp@@Base+0xf0>
   18f84:	fmov	d2, #5.000000000000000000e-01
   18f88:	fcmpe	d8, d2
   18f8c:	b.lt	18f98 <mpfr_get_d_2exp@@Base+0x124>  // b.tstop
   18f90:	fcmpe	d8, d1
   18f94:	b.mi	18f64 <mpfr_get_d_2exp@@Base+0xf0>  // b.first
   18f98:	fmov	d1, #-5.000000000000000000e-01
   18f9c:	fcmpe	d8, d1
   18fa0:	b.hi	18fac <mpfr_get_d_2exp@@Base+0x138>  // b.pmore
   18fa4:	fcmpe	d8, d0
   18fa8:	b.gt	18f64 <mpfr_get_d_2exp@@Base+0xf0>
   18fac:	adrp	x2, 54000 <mpfr_free_pool@@Base+0x2eec>
   18fb0:	mov	w1, #0xad                  	// #173
   18fb4:	add	x2, x2, #0xb97
   18fb8:	adrp	x0, 54000 <mpfr_free_pool@@Base+0x2eec>
   18fbc:	add	x0, x0, #0xbd0
   18fc0:	bl	cbd0 <mpfr_assert_fail@plt>
   18fc4:	b	18f64 <mpfr_get_d_2exp@@Base+0xf0>
   18fc8:	mov	x19, #0x0                   	// #0
   18fcc:	b	18f64 <mpfr_get_d_2exp@@Base+0xf0>

0000000000018fd0 <mpfr_get_exp@@Base>:
   18fd0:	stp	x29, x30, [sp, #-32]!
   18fd4:	mov	x29, sp
   18fd8:	ldr	x1, [x0, #16]
   18fdc:	str	x19, [sp, #16]
   18fe0:	mov	x19, x0
   18fe4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   18fe8:	cmp	x1, x0
   18fec:	b.gt	19008 <mpfr_get_exp@@Base+0x38>
   18ff0:	adrp	x2, 54000 <mpfr_free_pool@@Base+0x2eec>
   18ff4:	adrp	x0, 55000 <mpfr_free_pool@@Base+0x3eec>
   18ff8:	add	x2, x2, #0xc10
   18ffc:	add	x0, x0, #0x4be
   19000:	mov	w1, #0x1d                  	// #29
   19004:	bl	cbd0 <mpfr_assert_fail@plt>
   19008:	ldr	x0, [x19, #16]
   1900c:	ldr	x19, [sp, #16]
   19010:	ldp	x29, x30, [sp], #32
   19014:	ret
   19018:	stp	x29, x30, [sp, #-144]!
   1901c:	cmp	x4, #0x0
   19020:	mov	x29, sp
   19024:	stp	x19, x20, [sp, #16]
   19028:	stp	x21, x22, [sp, #32]
   1902c:	ldr	w22, [x29, #144]
   19030:	stp	x23, x24, [sp, #48]
   19034:	stp	x25, x26, [sp, #64]
   19038:	stp	x27, x28, [sp, #80]
   1903c:	str	x1, [x29, #112]
   19040:	b.le	1905c <mpfr_get_exp@@Base+0x8c>
   19044:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   19048:	add	x2, x2, #0x4c8
   1904c:	mov	w1, #0x62                  	// #98
   19050:	adrp	x0, 55000 <mpfr_free_pool@@Base+0x3eec>
   19054:	add	x0, x0, #0x4cf
   19058:	bl	cbd0 <mpfr_assert_fail@plt>
   1905c:	mov	x24, x0
   19060:	mov	x0, #0xffffffffffffffc0    	// #-64
   19064:	mov	x28, x3
   19068:	mov	x19, x4
   1906c:	mul	x0, x3, x0
   19070:	cmp	x0, x4
   19074:	b.lt	19088 <mpfr_get_exp@@Base+0xb8>  // b.tstop
   19078:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   1907c:	mov	w1, #0x64                  	// #100
   19080:	add	x2, x2, #0x4d9
   19084:	b	19050 <mpfr_get_exp@@Base+0x80>
   19088:	sub	w0, w6, #0x2
   1908c:	adrp	x23, 55000 <mpfr_free_pool@@Base+0x3eec>
   19090:	add	x23, x23, #0x560
   19094:	cmp	w0, #0x23
   19098:	add	x1, x23, #0x25
   1909c:	str	xzr, [x29, #136]
   190a0:	csel	x0, x23, x1, cc  // cc = lo, ul, last
   190a4:	str	x0, [x29, #120]
   190a8:	mov	x26, x2
   190ac:	mov	x25, x5
   190b0:	mov	w20, w6
   190b4:	mov	x21, x7
   190b8:	lsl	x9, x3, #6
   190bc:	add	x4, x4, x3, lsl #6
   190c0:	tbz	x5, #63, 1911c <mpfr_get_exp@@Base+0x14c>
   190c4:	mov	x27, #0x40                  	// #64
   190c8:	mov	x1, x26
   190cc:	add	x6, x29, #0x84
   190d0:	mov	w5, w22
   190d4:	sdiv	x27, x19, x27
   190d8:	neg	x19, x19
   190dc:	mov	x2, x9
   190e0:	mov	w3, #0x0                   	// #0
   190e4:	and	x19, x19, #0x3f
   190e8:	neg	x23, x27
   190ec:	sub	x27, x26, x27, lsl #3
   190f0:	mov	x0, x27
   190f4:	bl	cab0 <mpfr_round_raw@plt>
   190f8:	sxtw	x1, w0
   190fc:	cbnz	w0, 19148 <mpfr_get_exp@@Base+0x178>
   19100:	cbz	x19, 19164 <mpfr_get_exp@@Base+0x194>
   19104:	mov	w3, w19
   19108:	sub	x2, x28, x23
   1910c:	mov	x1, x27
   19110:	mov	x0, x27
   19114:	bl	bd60 <__gmpn_rshift@plt>
   19118:	b	19164 <mpfr_get_exp@@Base+0x194>
   1911c:	cmp	w22, #0x0
   19120:	sub	x2, x9, x5
   19124:	cinc	x3, x4, eq  // eq = none
   19128:	mov	x1, x28
   1912c:	mov	x0, x26
   19130:	stp	x4, x9, [x29, #96]
   19134:	bl	c400 <mpfr_round_p@plt>
   19138:	ldp	x4, x9, [x29, #96]
   1913c:	cbnz	w0, 190c4 <mpfr_get_exp@@Base+0xf4>
   19140:	mov	w0, #0x3                   	// #3
   19144:	b	19248 <mpfr_get_exp@@Base+0x278>
   19148:	lsl	x0, x28, #3
   1914c:	sub	x0, x0, #0x8
   19150:	cbz	x19, 191b4 <mpfr_get_exp@@Base+0x1e4>
   19154:	sub	w19, w19, #0x1
   19158:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   1915c:	lsr	x19, x1, x19
   19160:	str	x19, [x26, x0]
   19164:	add	x1, x21, #0x3
   19168:	cmp	x1, #0x4, lsl #12
   1916c:	b.hi	191c4 <mpfr_get_exp@@Base+0x1f4>  // b.pmore
   19170:	add	x0, x21, #0x12
   19174:	and	x0, x0, #0xfffffffffffffff0
   19178:	sub	sp, sp, x0
   1917c:	mov	x19, sp
   19180:	cmp	w20, #0x0
   19184:	sub	x3, x28, x23
   19188:	cneg	w20, w20, lt  // lt = tstop
   1918c:	add	x2, x26, x23, lsl #3
   19190:	mov	w1, w20
   19194:	mov	x0, x19
   19198:	bl	c670 <__gmpn_get_str@plt>
   1919c:	cmp	x21, x0
   191a0:	b.ls	191d4 <mpfr_get_exp@@Base+0x204>  // b.plast
   191a4:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   191a8:	mov	w1, #0x9d                  	// #157
   191ac:	add	x2, x2, #0x4ed
   191b0:	b	19050 <mpfr_get_exp@@Base+0x80>
   191b4:	str	x1, [x26, x0]
   191b8:	sub	x23, x23, #0x1
   191bc:	stur	xzr, [x27, #-8]
   191c0:	b	19164 <mpfr_get_exp@@Base+0x194>
   191c4:	add	x0, x29, #0x88
   191c8:	bl	be40 <mpfr_tmp_allocate@plt>
   191cc:	mov	x19, x0
   191d0:	b	19180 <mpfr_get_exp@@Base+0x1b0>
   191d4:	ldr	x2, [x29, #112]
   191d8:	sub	x1, x0, x21
   191dc:	str	x1, [x2]
   191e0:	add	x1, x21, #0x1
   191e4:	cmp	x1, x0
   191e8:	b.ne	192a0 <mpfr_get_exp@@Base+0x2d0>  // b.any
   191ec:	ldr	w3, [x29, #132]
   191f0:	cbnz	w3, 19200 <mpfr_get_exp@@Base+0x230>
   191f4:	add	x1, x19, x0
   191f8:	ldurb	w1, [x1, #-1]
   191fc:	cbz	w1, 192a0 <mpfr_get_exp@@Base+0x2d0>
   19200:	cbnz	w22, 19230 <mpfr_get_exp@@Base+0x260>
   19204:	add	x2, x19, x0
   19208:	ldurb	w1, [x2, #-1]
   1920c:	lsl	w1, w1, #1
   19210:	cmp	w1, w20
   19214:	b.ne	19250 <mpfr_get_exp@@Base+0x280>  // b.any
   19218:	cbnz	w3, 19244 <mpfr_get_exp@@Base+0x274>
   1921c:	tbz	x25, #63, 19244 <mpfr_get_exp@@Base+0x274>
   19220:	ldurb	w22, [x2, #-2]
   19224:	and	w1, w22, #0x1
   19228:	mov	w22, #0x3                   	// #3
   1922c:	sub	w22, w22, w1
   19230:	cmp	w22, #0x2
   19234:	ccmp	w22, #0x4, #0x4, ne  // ne = any
   19238:	b.eq	19254 <mpfr_get_exp@@Base+0x284>  // b.none
   1923c:	mov	w0, #0xffffffff            	// #-1
   19240:	b	1929c <mpfr_get_exp@@Base+0x2cc>
   19244:	mov	w0, #0xfffffffd            	// #-3
   19248:	str	w0, [x29, #132]
   1924c:	b	192b0 <mpfr_get_exp@@Base+0x2e0>
   19250:	b.lt	1923c <mpfr_get_exp@@Base+0x26c>  // b.tstop
   19254:	add	x1, x19, x0
   19258:	ldurb	w1, [x1, #-1]
   1925c:	cbz	w1, 19298 <mpfr_get_exp@@Base+0x2c8>
   19260:	cmp	x0, #0x1
   19264:	b.hi	19278 <mpfr_get_exp@@Base+0x2a8>  // b.pmore
   19268:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   1926c:	mov	w1, #0xd2                  	// #210
   19270:	add	x2, x2, #0x4fa
   19274:	b	19050 <mpfr_get_exp@@Base+0x80>
   19278:	sub	x2, x0, #0x2
   1927c:	sub	w20, w20, #0x1
   19280:	add	x2, x19, x2
   19284:	ldrb	w0, [x2]
   19288:	cmp	w0, w20
   1928c:	b.eq	192e0 <mpfr_get_exp@@Base+0x310>  // b.none
   19290:	add	w0, w0, #0x1
   19294:	strb	w0, [x2]
   19298:	mov	w0, #0x1                   	// #1
   1929c:	str	w0, [x29, #132]
   192a0:	mov	x0, #0x0                   	// #0
   192a4:	cmp	x0, x21
   192a8:	b.ne	192e8 <mpfr_get_exp@@Base+0x318>  // b.any
   192ac:	strb	wzr, [x24, x0]
   192b0:	ldr	x0, [x29, #136]
   192b4:	cbz	x0, 192bc <mpfr_get_exp@@Base+0x2ec>
   192b8:	bl	c4a0 <mpfr_tmp_free@plt>
   192bc:	ldr	w0, [x29, #132]
   192c0:	mov	sp, x29
   192c4:	ldp	x19, x20, [sp, #16]
   192c8:	ldp	x21, x22, [sp, #32]
   192cc:	ldp	x23, x24, [sp, #48]
   192d0:	ldp	x25, x26, [sp, #64]
   192d4:	ldp	x27, x28, [sp, #80]
   192d8:	ldp	x29, x30, [sp], #144
   192dc:	ret
   192e0:	strb	wzr, [x2], #-1
   192e4:	b	19284 <mpfr_get_exp@@Base+0x2b4>
   192e8:	ldrb	w1, [x19, x0]
   192ec:	ldr	x2, [x29, #120]
   192f0:	ldrb	w1, [x2, x1]
   192f4:	strb	w1, [x24, x0]
   192f8:	add	x0, x0, #0x1
   192fc:	b	192a4 <mpfr_get_exp@@Base+0x2d4>

0000000000019300 <mpfr_ceil_mul@@Base>:
   19300:	stp	x29, x30, [sp, #-96]!
   19304:	mov	w3, #0x2                   	// #2
   19308:	mov	x29, sp
   1930c:	stp	x19, x20, [sp, #16]
   19310:	mov	w19, w1
   19314:	mov	x1, #0x3f                  	// #63
   19318:	str	x1, [sp, #64]
   1931c:	add	x1, sp, #0x38
   19320:	add	x20, sp, #0x40
   19324:	str	x1, [sp, #88]
   19328:	mov	w1, #0x1                   	// #1
   1932c:	stp	x21, x22, [sp, #32]
   19330:	sxtw	x21, w2
   19334:	mov	x2, #0x0                   	// #0
   19338:	str	w1, [sp, #72]
   1933c:	mov	x1, x0
   19340:	mov	x0, x20
   19344:	bl	bb00 <mpfr_set_si_2exp@plt>
   19348:	sub	w19, w19, #0x2
   1934c:	adrp	x2, 73000 <__gmpfr_l2b@@Base+0x200>
   19350:	mov	w22, #0x2                   	// #2
   19354:	add	x19, x21, w19, sxtw #1
   19358:	mov	w3, w22
   1935c:	ldr	x2, [x2, #4016]
   19360:	mov	x1, x20
   19364:	mov	x0, x20
   19368:	add	x2, x2, x19, lsl #5
   1936c:	bl	bdd0 <mpfr_mul@plt>
   19370:	mov	w1, w22
   19374:	mov	x0, x20
   19378:	bl	c220 <mpfr_get_si@plt>
   1937c:	ldp	x19, x20, [sp, #16]
   19380:	ldp	x21, x22, [sp, #32]
   19384:	ldp	x29, x30, [sp], #96
   19388:	ret

000000000001938c <mpfr_get_str@@Base>:
   1938c:	stp	x29, x30, [sp, #-256]!
   19390:	mov	x29, sp
   19394:	stp	x19, x20, [sp, #16]
   19398:	stp	x21, x22, [sp, #32]
   1939c:	stp	x23, x24, [sp, #48]
   193a0:	stp	x25, x26, [sp, #64]
   193a4:	stp	x27, x28, [sp, #80]
   193a8:	sub	sp, sp, #0x10
   193ac:	str	x1, [x29, #168]
   193b0:	str	w2, [x29, #184]
   193b4:	str	w5, [x29, #224]
   193b8:	str	x0, [x29, #232]
   193bc:	mov	w0, w2
   193c0:	cmn	w0, #0x24
   193c4:	b.lt	19e8c <mpfr_get_str@@Base+0xb00>  // b.tstop
   193c8:	add	w0, w0, #0x1
   193cc:	cmp	w0, #0x2
   193d0:	b.ls	19e8c <mpfr_get_str@@Base+0xb00>  // b.plast
   193d4:	mov	w0, w2
   193d8:	cmp	w0, #0x3e
   193dc:	b.gt	19e8c <mpfr_get_str@@Base+0xb00>
   193e0:	sub	w0, w0, #0x2
   193e4:	adrp	x22, 55000 <mpfr_free_pool@@Base+0x3eec>
   193e8:	add	x22, x22, #0x560
   193ec:	cmp	w0, #0x23
   193f0:	add	x1, x22, #0x25
   193f4:	mov	x25, x4
   193f8:	csel	x0, x22, x1, cc  // cc = lo, ul, last
   193fc:	str	x0, [x29, #200]
   19400:	mov	w0, w2
   19404:	mov	x1, #0x2                   	// #2
   19408:	cmp	w0, #0x0
   1940c:	movk	x1, #0x8000, lsl #48
   19410:	cneg	w0, w0, lt  // lt = tstop
   19414:	str	w0, [x29, #228]
   19418:	mov	w0, w5
   1941c:	cmp	w0, #0x5
   19420:	csel	w0, w0, wzr, ne  // ne = any
   19424:	str	w0, [x29, #224]
   19428:	ldr	x0, [x4, #16]
   1942c:	cmp	x0, x1
   19430:	b.ne	194a0 <mpfr_get_str@@Base+0x114>  // b.any
   19434:	ldr	x0, [x29, #232]
   19438:	cbnz	x0, 19448 <mpfr_get_str@@Base+0xbc>
   1943c:	mov	x0, #0x6                   	// #6
   19440:	bl	cd90 <mpfr_allocate_func@plt>
   19444:	str	x0, [x29, #232]
   19448:	ldr	x0, [x29, #232]
   1944c:	adrp	x1, 54000 <mpfr_free_pool@@Base+0x2eec>
   19450:	add	x1, x1, #0xa10
   19454:	bl	c9a0 <strcpy@plt>
   19458:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1945c:	ldr	x1, [x0, #2592]
   19460:	add	x0, x0, #0xa20
   19464:	blr	x1
   19468:	mrs	x1, tpidr_el0
   1946c:	add	x0, x1, x0
   19470:	ldr	w1, [x0]
   19474:	orr	w1, w1, #0x4
   19478:	str	w1, [x0]
   1947c:	ldr	x0, [x29, #232]
   19480:	mov	sp, x29
   19484:	ldp	x19, x20, [sp, #16]
   19488:	ldp	x21, x22, [sp, #32]
   1948c:	ldp	x23, x24, [sp, #48]
   19490:	ldp	x25, x26, [sp, #64]
   19494:	ldp	x27, x28, [sp, #80]
   19498:	ldp	x29, x30, [sp], #256
   1949c:	ret
   194a0:	ldr	w23, [x4, #8]
   194a4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   194a8:	cmp	x0, x1
   194ac:	lsr	w19, w23, #31
   194b0:	b.ne	194f0 <mpfr_get_str@@Base+0x164>  // b.any
   194b4:	ldr	x0, [x29, #232]
   194b8:	cbnz	x0, 194cc <mpfr_get_str@@Base+0x140>
   194bc:	add	w0, w19, #0x6
   194c0:	sxtw	x0, w0
   194c4:	bl	cd90 <mpfr_allocate_func@plt>
   194c8:	str	x0, [x29, #232]
   194cc:	cmp	w23, #0x0
   194d0:	adrp	x0, 55000 <mpfr_free_pool@@Base+0x3eec>
   194d4:	adrp	x1, 55000 <mpfr_free_pool@@Base+0x3eec>
   194d8:	add	x0, x0, #0x508
   194dc:	add	x1, x1, #0x507
   194e0:	csel	x1, x1, x0, lt  // lt = tstop
   194e4:	ldr	x0, [x29, #232]
   194e8:	bl	c9a0 <strcpy@plt>
   194ec:	b	1947c <mpfr_get_str@@Base+0xf0>
   194f0:	mrs	x20, tpidr_el0
   194f4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   194f8:	ldr	x1, [x0, #2592]
   194fc:	add	x0, x0, #0xa20
   19500:	blr	x1
   19504:	mov	x21, x3
   19508:	ldr	w0, [x20, x0]
   1950c:	str	w0, [x29, #180]
   19510:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   19514:	ldr	x1, [x0, #2528]
   19518:	add	x0, x0, #0x9e0
   1951c:	blr	x1
   19520:	add	x1, x20, x0
   19524:	ldr	x0, [x20, x0]
   19528:	str	x0, [x29, #152]
   1952c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   19530:	ldr	x2, [x0, #2560]
   19534:	add	x0, x0, #0xa00
   19538:	blr	x2
   1953c:	ldr	x2, [x20, x0]
   19540:	str	x2, [x29, #144]
   19544:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   19548:	str	x2, [x1]
   1954c:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   19550:	str	x1, [x20, x0]
   19554:	cbnz	x3, 19580 <mpfr_get_str@@Base+0x1f4>
   19558:	ldr	w0, [x29, #228]
   1955c:	mov	w2, #0x1                   	// #1
   19560:	ldr	w1, [x29, #228]
   19564:	sub	w0, w0, #0x1
   19568:	ldr	x3, [x4]
   1956c:	tst	w0, w1
   19570:	cset	x0, eq  // eq = none
   19574:	sub	x0, x3, x0
   19578:	bl	cc10 <mpfr_ceil_mul@plt>
   1957c:	add	x21, x0, #0x1
   19580:	ldr	x0, [x29, #232]
   19584:	cbnz	x0, 1959c <mpfr_get_str@@Base+0x210>
   19588:	and	x0, x19, #0xff
   1958c:	add	x0, x0, #0x1
   19590:	add	x0, x0, x21
   19594:	bl	cd90 <mpfr_allocate_func@plt>
   19598:	str	x0, [x29, #232]
   1959c:	ldr	x0, [x29, #232]
   195a0:	str	x0, [x29, #216]
   195a4:	tbz	w23, #31, 195b8 <mpfr_get_str@@Base+0x22c>
   195a8:	ldr	x1, [x29, #216]
   195ac:	mov	w0, #0x2d                  	// #45
   195b0:	strb	w0, [x1], #1
   195b4:	str	x1, [x29, #216]
   195b8:	ldr	x28, [x25, #16]
   195bc:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   195c0:	cmp	x28, x0
   195c4:	b.ne	19634 <mpfr_get_str@@Base+0x2a8>  // b.any
   195c8:	ldr	x0, [x29, #216]
   195cc:	mov	x2, x21
   195d0:	mov	w1, #0x30                  	// #48
   195d4:	bl	c1a0 <memset@plt>
   195d8:	ldr	x0, [x29, #216]
   195dc:	strb	wzr, [x0, x21]
   195e0:	ldr	x0, [x29, #168]
   195e4:	str	xzr, [x0]
   195e8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   195ec:	ldr	x1, [x0, #2592]
   195f0:	add	x0, x0, #0xa20
   195f4:	blr	x1
   195f8:	ldr	w1, [x29, #180]
   195fc:	str	w1, [x20, x0]
   19600:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   19604:	ldr	x1, [x0, #2528]
   19608:	add	x0, x0, #0x9e0
   1960c:	blr	x1
   19610:	ldr	x1, [x29, #152]
   19614:	str	x1, [x20, x0]
   19618:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1961c:	ldr	x1, [x0, #2560]
   19620:	add	x0, x0, #0xa00
   19624:	blr	x1
   19628:	ldr	x1, [x29, #144]
   1962c:	str	x1, [x20, x0]
   19630:	b	1947c <mpfr_get_str@@Base+0xf0>
   19634:	ldr	w0, [x29, #228]
   19638:	ldr	x27, [x25, #24]
   1963c:	sub	w3, w0, #0x1
   19640:	ands	w3, w3, w0
   19644:	sub	x0, x28, #0x1
   19648:	b.ne	197f4 <mpfr_get_str@@Base+0x468>  // b.any
   1964c:	ldrsw	x24, [x29, #228]
   19650:	clz	x1, x24
   19654:	mov	w24, #0x3f                  	// #63
   19658:	sub	w1, w24, w1
   1965c:	str	w1, [x29, #208]
   19660:	sxtw	x10, w1
   19664:	sdiv	x19, x0, x10
   19668:	msub	x28, x10, x19, x28
   1966c:	cmp	x28, #0x0
   19670:	b.gt	1967c <mpfr_get_str@@Base+0x2f0>
   19674:	sub	x19, x19, #0x1
   19678:	add	x28, x28, x10
   1967c:	sub	x4, x21, #0x1
   19680:	str	xzr, [x29, #248]
   19684:	madd	x4, x4, x10, x28
   19688:	sub	x7, x4, #0x1
   1968c:	asr	x7, x7, #6
   19690:	add	x24, x7, #0x2
   19694:	add	x22, x7, #0x1
   19698:	lsl	x9, x24, #3
   1969c:	cmp	x9, #0x4, lsl #12
   196a0:	b.hi	19798 <mpfr_get_str@@Base+0x40c>  // b.pmore
   196a4:	add	x0, x9, #0xf
   196a8:	and	x0, x0, #0xfffffffffffffff0
   196ac:	sub	sp, sp, x0
   196b0:	add	x26, sp, #0x10
   196b4:	ldr	x1, [x25, #16]
   196b8:	lsl	x23, x22, #6
   196bc:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   196c0:	sub	x23, x23, x4
   196c4:	cmp	x1, x0
   196c8:	ldr	x2, [x25]
   196cc:	b.eq	196d8 <mpfr_get_str@@Base+0x34c>  // b.none
   196d0:	ldr	w3, [x25, #8]
   196d4:	lsr	w3, w3, #31
   196d8:	ldr	w5, [x29, #224]
   196dc:	add	x6, x29, #0xf0
   196e0:	mov	x1, x27
   196e4:	mov	x0, x26
   196e8:	stp	x9, x10, [x29, #184]
   196ec:	bl	cab0 <mpfr_round_raw@plt>
   196f0:	sxtw	x0, w0
   196f4:	ldr	x9, [x29, #184]
   196f8:	add	x9, x26, x9
   196fc:	stur	x0, [x9, #-8]
   19700:	cbz	x0, 19728 <mpfr_get_str@@Base+0x39c>
   19704:	ldr	x10, [x29, #192]
   19708:	cmp	x10, x28
   1970c:	b.ne	197cc <mpfr_get_str@@Base+0x440>  // b.any
   19710:	ldr	w3, [x29, #208]
   19714:	add	x19, x19, #0x1
   19718:	mov	x2, x24
   1971c:	mov	x1, x26
   19720:	mov	x0, x26
   19724:	bl	bd60 <__gmpn_rshift@plt>
   19728:	cbz	x23, 19754 <mpfr_get_str@@Base+0x3c8>
   1972c:	mov	x2, x22
   19730:	mov	w3, w23
   19734:	mov	x1, x26
   19738:	mov	x0, x26
   1973c:	bl	bd60 <__gmpn_rshift@plt>
   19740:	add	x0, x26, x22, lsl #3
   19744:	ldur	x0, [x0, #-8]
   19748:	cmp	x0, #0x0
   1974c:	cset	x0, eq  // eq = none
   19750:	sub	x22, x22, x0
   19754:	ldr	w1, [x29, #228]
   19758:	mov	x3, x22
   1975c:	ldr	x0, [x29, #216]
   19760:	mov	x2, x26
   19764:	bl	c670 <__gmpn_get_str@plt>
   19768:	mov	x0, #0x0                   	// #0
   1976c:	cmp	x21, x0
   19770:	b.ne	197d4 <mpfr_get_str@@Base+0x448>  // b.any
   19774:	ldr	x0, [x29, #216]
   19778:	add	x19, x19, #0x1
   1977c:	strb	wzr, [x0, x21]
   19780:	ldr	x0, [x29, #168]
   19784:	str	x19, [x0]
   19788:	ldr	x0, [x29, #248]
   1978c:	cbz	x0, 195e8 <mpfr_get_str@@Base+0x25c>
   19790:	bl	c4a0 <mpfr_tmp_free@plt>
   19794:	b	195e8 <mpfr_get_str@@Base+0x25c>
   19798:	mov	x1, x9
   1979c:	add	x0, x29, #0xf8
   197a0:	str	x4, [x29, #136]
   197a4:	str	x10, [x29, #160]
   197a8:	str	w3, [x29, #184]
   197ac:	str	x9, [x29, #192]
   197b0:	bl	be40 <mpfr_tmp_allocate@plt>
   197b4:	ldr	w3, [x29, #184]
   197b8:	mov	x26, x0
   197bc:	ldr	x4, [x29, #136]
   197c0:	ldr	x10, [x29, #160]
   197c4:	ldr	x9, [x29, #192]
   197c8:	b	196b4 <mpfr_get_str@@Base+0x328>
   197cc:	mov	x22, x24
   197d0:	b	19728 <mpfr_get_str@@Base+0x39c>
   197d4:	ldr	x1, [x29, #216]
   197d8:	ldr	x2, [x29, #200]
   197dc:	ldrb	w1, [x1, x0]
   197e0:	ldrb	w1, [x2, x1]
   197e4:	ldr	x2, [x29, #216]
   197e8:	strb	w1, [x2, x0]
   197ec:	add	x0, x0, #0x1
   197f0:	b	1976c <mpfr_get_str@@Base+0x3e0>
   197f4:	tbz	w23, #31, 19818 <mpfr_get_str@@Base+0x48c>
   197f8:	ldr	w1, [x29, #224]
   197fc:	cmp	w1, #0x2
   19800:	b.eq	19880 <mpfr_get_str@@Base+0x4f4>  // b.none
   19804:	ldr	w2, [x29, #224]
   19808:	cmp	w1, #0x3
   1980c:	mov	w1, #0x2                   	// #2
   19810:	csel	w1, w2, w1, ne  // ne = any
   19814:	str	w1, [x29, #224]
   19818:	ldr	w1, [x29, #228]
   1981c:	mov	w2, #0x1                   	// #1
   19820:	bl	cc10 <mpfr_ceil_mul@plt>
   19824:	str	x0, [x29, #208]
   19828:	ldr	w1, [x29, #228]
   1982c:	mov	w2, #0x0                   	// #0
   19830:	mov	x0, x21
   19834:	bl	cc10 <mpfr_ceil_mul@plt>
   19838:	add	x2, x0, #0x1
   1983c:	ldr	x1, [x29, #208]
   19840:	ldr	x3, [x29, #208]
   19844:	sub	x1, x1, x21
   19848:	ldr	x4, [x29, #208]
   1984c:	sub	x3, x21, x3
   19850:	cmp	x21, x4
   19854:	csel	x1, x3, x1, ge  // ge = tcont
   19858:	str	x1, [x29, #200]
   1985c:	cmp	x2, #0x1
   19860:	b.eq	19a0c <mpfr_get_str@@Base+0x680>  // b.none
   19864:	b.gt	19888 <mpfr_get_str@@Base+0x4fc>
   19868:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   1986c:	add	x2, x2, #0x50e
   19870:	mov	w1, #0x983                 	// #2435
   19874:	adrp	x0, 55000 <mpfr_free_pool@@Base+0x3eec>
   19878:	add	x0, x0, #0x4cf
   1987c:	bl	cbd0 <mpfr_assert_fail@plt>
   19880:	mov	w1, #0x3                   	// #3
   19884:	b	19814 <mpfr_get_str@@Base+0x488>
   19888:	clz	x0, x0
   1988c:	mov	w1, #0x40                  	// #64
   19890:	sub	w0, w1, w0
   19894:	add	x0, x2, w0, sxtw
   19898:	str	x0, [x29, #192]
   1989c:	ldr	x0, [x29, #200]
   198a0:	cbz	x0, 198d4 <mpfr_get_str@@Base+0x548>
   198a4:	sub	x0, x0, #0x1
   198a8:	clz	x1, x0
   198ac:	mov	w0, #0x40                  	// #64
   198b0:	sub	w0, w0, w1
   198b4:	mov	w1, #0x3                   	// #3
   198b8:	smull	x0, w0, w1
   198bc:	ldr	x1, [x29, #200]
   198c0:	cmp	x1, #0x1
   198c4:	ldr	x1, [x29, #192]
   198c8:	csel	x0, x0, xzr, ne  // ne = any
   198cc:	add	x0, x1, x0
   198d0:	str	x0, [x29, #192]
   198d4:	mov	x0, #0x40                  	// #64
   198d8:	str	x0, [x29, #136]
   198dc:	add	x0, x29, #0xf8
   198e0:	str	x0, [x29, #160]
   198e4:	add	x0, x29, #0xf0
   198e8:	str	x0, [x29, #112]
   198ec:	ldr	x0, [x29, #192]
   198f0:	str	xzr, [x29, #248]
   198f4:	sub	x1, x0, #0x1
   198f8:	asr	x5, x1, #6
   198fc:	add	x20, x5, #0x1
   19900:	lsl	x23, x20, #3
   19904:	cmp	x23, #0x4, lsl #12
   19908:	b.hi	19a14 <mpfr_get_str@@Base+0x688>  // b.pmore
   1990c:	add	x0, x23, #0xf
   19910:	and	x0, x0, #0xfffffffffffffff0
   19914:	sub	sp, sp, x0
   19918:	add	x19, sp, #0x10
   1991c:	ldr	x28, [x25]
   19920:	ldr	x0, [x29, #208]
   19924:	sub	x28, x28, #0x1
   19928:	asr	x28, x28, #6
   1992c:	cmp	x0, x21
   19930:	add	x24, x28, #0x1
   19934:	b.ne	19a6c <mpfr_get_str@@Base+0x6e0>  // b.any
   19938:	cmp	x20, x24
   1993c:	b.cs	19a30 <mpfr_get_str@@Base+0x6a4>  // b.hs, b.nlast
   19940:	mov	x1, #0x0                   	// #0
   19944:	mov	x0, x27
   19948:	str	x5, [x29, #128]
   1994c:	bl	cb30 <__gmpn_scan1@plt>
   19950:	ldr	x5, [x29, #128]
   19954:	sub	x1, x28, x5
   19958:	cmp	x0, x1, lsl #6
   1995c:	cset	w26, cs  // cs = hs, nlast
   19960:	eor	w22, w26, #0x1
   19964:	cmp	x20, x24
   19968:	sxtw	x22, w22
   1996c:	b.hi	19a38 <mpfr_get_str@@Base+0x6ac>  // b.pmore
   19970:	sub	x1, x28, x5
   19974:	add	x1, x27, x1, lsl #3
   19978:	cmp	x1, x19
   1997c:	b.eq	1998c <mpfr_get_str@@Base+0x600>  // b.none
   19980:	mov	x2, x23
   19984:	mov	x0, x19
   19988:	bl	ba90 <memcpy@plt>
   1998c:	ldr	x0, [x25, #16]
   19990:	sub	x0, x0, x20, lsl #6
   19994:	str	x0, [x29, #240]
   19998:	ldr	w0, [x29, #224]
   1999c:	cmp	w26, #0x0
   199a0:	ldr	w6, [x29, #184]
   199a4:	mov	x2, x19
   199a8:	str	w0, [sp]
   199ac:	mov	x7, x21
   199b0:	ldr	x1, [x29, #168]
   199b4:	csinv	x5, x22, xzr, eq  // eq = none
   199b8:	ldr	x0, [x29, #216]
   199bc:	mov	x3, x20
   199c0:	ldr	x4, [x29, #240]
   199c4:	bl	19018 <mpfr_get_exp@@Base+0x48>
   199c8:	mov	w19, w0
   199cc:	ldr	x0, [x29, #248]
   199d0:	cbz	x0, 199d8 <mpfr_get_str@@Base+0x64c>
   199d4:	bl	c4a0 <mpfr_tmp_free@plt>
   199d8:	cmp	w19, #0x3
   199dc:	b.ne	19de8 <mpfr_get_str@@Base+0xa5c>  // b.any
   199e0:	ldr	x1, [x29, #192]
   199e4:	mov	x0, #0xfffffffffffffeff    	// #-257
   199e8:	movk	x0, #0x7fff, lsl #48
   199ec:	sub	x0, x0, x1
   199f0:	ldr	x1, [x29, #136]
   199f4:	cmp	x0, x1
   199f8:	b.ge	19dbc <mpfr_get_str@@Base+0xa30>  // b.tcont
   199fc:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   19a00:	mov	w1, #0x9f9                 	// #2553
   19a04:	add	x2, x2, #0x519
   19a08:	b	19874 <mpfr_get_str@@Base+0x4e8>
   19a0c:	mov	w0, #0x0                   	// #0
   19a10:	b	19894 <mpfr_get_str@@Base+0x508>
   19a14:	ldr	x0, [x29, #160]
   19a18:	mov	x1, x23
   19a1c:	str	x5, [x29, #128]
   19a20:	bl	be40 <mpfr_tmp_allocate@plt>
   19a24:	mov	x19, x0
   19a28:	ldr	x5, [x29, #128]
   19a2c:	b	1991c <mpfr_get_str@@Base+0x590>
   19a30:	mov	w26, #0x1                   	// #1
   19a34:	b	19960 <mpfr_get_str@@Base+0x5d4>
   19a38:	sub	x28, x5, x28
   19a3c:	add	x0, x19, x28, lsl #3
   19a40:	lsl	x23, x28, #3
   19a44:	cmp	x0, x27
   19a48:	b.eq	19a58 <mpfr_get_str@@Base+0x6cc>  // b.none
   19a4c:	lsl	x2, x24, #3
   19a50:	mov	x1, x27
   19a54:	bl	ba90 <memcpy@plt>
   19a58:	mov	x2, x23
   19a5c:	mov	x0, x19
   19a60:	mov	w1, #0x0                   	// #0
   19a64:	bl	c1a0 <memset@plt>
   19a68:	b	1998c <mpfr_get_str@@Base+0x600>
   19a6c:	ldp	x3, x0, [x29, #200]
   19a70:	str	x5, [x29, #128]
   19a74:	ldr	w2, [x29, #228]
   19a78:	mov	x4, x20
   19a7c:	ldr	x1, [x29, #112]
   19a80:	cmp	x21, x0
   19a84:	mov	x0, x19
   19a88:	b.le	19bd4 <mpfr_get_str@@Base+0x848>
   19a8c:	bl	cc70 <mpfr_mpn_exp@plt>
   19a90:	mov	x22, x0
   19a94:	ldr	x5, [x29, #128]
   19a98:	cmp	x20, x24
   19a9c:	csel	x4, x20, x24, ls  // ls = plast
   19aa0:	sub	x26, x28, x5
   19aa4:	add	x28, x27, x26, lsl #3
   19aa8:	csel	x0, x28, x27, ls  // ls = plast
   19aac:	str	x0, [x29, #128]
   19ab0:	b.cc	19b6c <mpfr_get_str@@Base+0x7e0>  // b.lo, b.ul, b.last
   19ab4:	cmn	x22, #0x1
   19ab8:	cset	w26, eq  // eq = none
   19abc:	add	x5, x20, x4
   19ac0:	cmp	x22, #0x0
   19ac4:	csinc	x22, x22, xzr, gt
   19ac8:	lsl	x28, x5, #3
   19acc:	add	x22, x22, #0x1
   19ad0:	cmp	x28, #0x4, lsl #12
   19ad4:	b.hi	19b9c <mpfr_get_str@@Base+0x810>  // b.pmore
   19ad8:	add	x0, x28, #0xf
   19adc:	and	x0, x0, #0xfffffffffffffff0
   19ae0:	sub	sp, sp, x0
   19ae4:	add	x5, sp, #0x10
   19ae8:	ldr	x3, [x29, #128]
   19aec:	mov	x2, x20
   19af0:	mov	x1, x19
   19af4:	mov	x0, x5
   19af8:	stp	x4, x5, [x29, #120]
   19afc:	bl	c830 <__gmpn_mul@plt>
   19b00:	ldr	x1, [x25, #16]
   19b04:	ldr	x5, [x29, #128]
   19b08:	ldr	x0, [x29, #240]
   19b0c:	add	x0, x0, x1
   19b10:	mov	x1, #0x0                   	// #0
   19b14:	str	x0, [x29, #240]
   19b18:	mov	x0, x5
   19b1c:	bl	cb30 <__gmpn_scan1@plt>
   19b20:	ldp	x4, x5, [x29, #120]
   19b24:	add	x24, x5, x4, lsl #3
   19b28:	add	x5, x5, x28
   19b2c:	cmp	x0, x4, lsl #6
   19b30:	csel	w26, w26, wzr, cs  // cs = hs, nlast
   19b34:	ldur	x0, [x5, #-8]
   19b38:	tbnz	x0, #63, 19bb8 <mpfr_get_str@@Base+0x82c>
   19b3c:	mov	x1, x24
   19b40:	mov	x2, x20
   19b44:	mov	x0, x19
   19b48:	mov	w3, #0x1                   	// #1
   19b4c:	bl	bd40 <__gmpn_lshift@plt>
   19b50:	ldur	x0, [x24, #-8]
   19b54:	ldr	x1, [x19]
   19b58:	orr	x0, x1, x0, lsr #63
   19b5c:	str	x0, [x19]
   19b60:	ldr	x0, [x29, #240]
   19b64:	sub	x0, x0, #0x1
   19b68:	b	19994 <mpfr_get_str@@Base+0x608>
   19b6c:	cmn	x22, #0x1
   19b70:	b.ne	19b94 <mpfr_get_str@@Base+0x808>  // b.any
   19b74:	mov	x0, x27
   19b78:	mov	x1, #0x0                   	// #0
   19b7c:	str	x4, [x29, #120]
   19b80:	bl	cb30 <__gmpn_scan1@plt>
   19b84:	cmp	x0, x26, lsl #6
   19b88:	cset	w26, cs  // cs = hs, nlast
   19b8c:	ldr	x4, [x29, #120]
   19b90:	b	19abc <mpfr_get_str@@Base+0x730>
   19b94:	mov	w26, #0x0                   	// #0
   19b98:	b	19abc <mpfr_get_str@@Base+0x730>
   19b9c:	ldr	x0, [x29, #160]
   19ba0:	mov	x1, x28
   19ba4:	str	x4, [x29, #120]
   19ba8:	bl	be40 <mpfr_tmp_allocate@plt>
   19bac:	mov	x5, x0
   19bb0:	ldr	x4, [x29, #120]
   19bb4:	b	19ae8 <mpfr_get_str@@Base+0x75c>
   19bb8:	cmp	x19, x24
   19bbc:	b.eq	19998 <mpfr_get_str@@Base+0x60c>  // b.none
   19bc0:	mov	x2, x23
   19bc4:	mov	x1, x24
   19bc8:	mov	x0, x19
   19bcc:	bl	ba90 <memcpy@plt>
   19bd0:	b	19998 <mpfr_get_str@@Base+0x60c>
   19bd4:	bl	cc70 <mpfr_mpn_exp@plt>
   19bd8:	str	x0, [x29, #120]
   19bdc:	lsl	x26, x20, #4
   19be0:	cmp	x26, #0x4, lsl #12
   19be4:	b.hi	19d18 <mpfr_get_str@@Base+0x98c>  // b.pmore
   19be8:	sub	sp, sp, x26
   19bec:	add	x22, sp, #0x10
   19bf0:	add	x1, x23, #0x8
   19bf4:	cmp	x1, #0x4, lsl #12
   19bf8:	b.hi	19d2c <mpfr_get_str@@Base+0x9a0>  // b.pmore
   19bfc:	add	x0, x23, #0x17
   19c00:	and	x0, x0, #0xfffffffffffffff0
   19c04:	sub	sp, sp, x0
   19c08:	add	x28, sp, #0x10
   19c0c:	add	x0, x23, #0xf
   19c10:	and	x0, x0, #0xfffffffffffffff0
   19c14:	sub	sp, sp, x0
   19c18:	add	x0, sp, #0x10
   19c1c:	str	x0, [x29, #128]
   19c20:	lsl	x0, x20, #1
   19c24:	str	x0, [x29, #104]
   19c28:	cmp	x24, x20, lsl #1
   19c2c:	b.cc	19d50 <mpfr_get_str@@Base+0x9c4>  // b.lo, b.ul, b.last
   19c30:	sub	x1, x24, x0
   19c34:	add	x1, x27, x1, lsl #3
   19c38:	cmp	x1, x22
   19c3c:	b.eq	19c4c <mpfr_get_str@@Base+0x8c0>  // b.none
   19c40:	mov	x2, x26
   19c44:	mov	x0, x22
   19c48:	bl	ba90 <memcpy@plt>
   19c4c:	ldr	x0, [x29, #120]
   19c50:	cmn	x0, #0x1
   19c54:	b.ne	19d88 <mpfr_get_str@@Base+0x9fc>  // b.any
   19c58:	lsl	x0, x20, #1
   19c5c:	cmp	x0, x24
   19c60:	b.cs	19d90 <mpfr_get_str@@Base+0xa04>  // b.hs, b.nlast
   19c64:	mov	x1, #0x0                   	// #0
   19c68:	mov	x0, x27
   19c6c:	bl	cb30 <__gmpn_scan1@plt>
   19c70:	lsl	x1, x20, #1
   19c74:	sub	x24, x24, x1
   19c78:	cmp	x0, x24, lsl #6
   19c7c:	cset	w26, cs  // cs = hs, nlast
   19c80:	ldr	x1, [x29, #128]
   19c84:	mov	x0, x28
   19c88:	mov	x6, x20
   19c8c:	mov	x5, x19
   19c90:	lsl	x4, x20, #1
   19c94:	mov	x3, x22
   19c98:	mov	x2, #0x0                   	// #0
   19c9c:	bl	bae0 <__gmpn_tdiv_qr@plt>
   19ca0:	ldr	x0, [x25, #16]
   19ca4:	ldr	x1, [x29, #240]
   19ca8:	sub	x0, x0, x1
   19cac:	sub	x0, x0, x20, lsl #7
   19cb0:	str	x0, [x29, #240]
   19cb4:	cbz	w26, 19ccc <mpfr_get_str@@Base+0x940>
   19cb8:	ldr	x0, [x29, #128]
   19cbc:	mov	x1, x20
   19cc0:	bl	c8f0 <__gmpn_popcount@plt>
   19cc4:	cmp	x0, #0x0
   19cc8:	cset	w26, eq  // eq = none
   19ccc:	ldr	x3, [x28, x23]
   19cd0:	cmp	x3, #0x1
   19cd4:	b.ne	19d98 <mpfr_get_str@@Base+0xa0c>  // b.any
   19cd8:	sub	x23, x23, #0x8
   19cdc:	mov	x2, x20
   19ce0:	mov	x1, x28
   19ce4:	mov	x0, x19
   19ce8:	bl	bd60 <__gmpn_rshift@plt>
   19cec:	ldr	x0, [x19, x23]
   19cf0:	orr	x0, x0, #0x8000000000000000
   19cf4:	str	x0, [x19, x23]
   19cf8:	ldr	x0, [x29, #240]
   19cfc:	add	x0, x0, #0x1
   19d00:	str	x0, [x29, #240]
   19d04:	ldr	x0, [x29, #120]
   19d08:	cmn	x0, #0x1
   19d0c:	b.eq	19db4 <mpfr_get_str@@Base+0xa28>  // b.none
   19d10:	add	x22, x0, #0x2
   19d14:	b	19998 <mpfr_get_str@@Base+0x60c>
   19d18:	ldr	x0, [x29, #160]
   19d1c:	mov	x1, x26
   19d20:	bl	be40 <mpfr_tmp_allocate@plt>
   19d24:	mov	x22, x0
   19d28:	b	19bf0 <mpfr_get_str@@Base+0x864>
   19d2c:	ldr	x0, [x29, #160]
   19d30:	bl	be40 <mpfr_tmp_allocate@plt>
   19d34:	mov	x28, x0
   19d38:	cmp	x23, #0x4, lsl #12
   19d3c:	b.ls	19c0c <mpfr_get_str@@Base+0x880>  // b.plast
   19d40:	ldr	x0, [x29, #160]
   19d44:	mov	x1, x23
   19d48:	bl	be40 <mpfr_tmp_allocate@plt>
   19d4c:	b	19c1c <mpfr_get_str@@Base+0x890>
   19d50:	lsl	x0, x20, #1
   19d54:	sub	x0, x0, x24
   19d58:	lsl	x26, x0, #3
   19d5c:	add	x0, x22, x0, lsl #3
   19d60:	cmp	x0, x27
   19d64:	b.eq	19d74 <mpfr_get_str@@Base+0x9e8>  // b.none
   19d68:	lsl	x2, x24, #3
   19d6c:	mov	x1, x27
   19d70:	bl	ba90 <memcpy@plt>
   19d74:	mov	x2, x26
   19d78:	mov	x0, x22
   19d7c:	mov	w1, #0x0                   	// #0
   19d80:	bl	c1a0 <memset@plt>
   19d84:	b	19c4c <mpfr_get_str@@Base+0x8c0>
   19d88:	mov	w26, #0x0                   	// #0
   19d8c:	b	19c80 <mpfr_get_str@@Base+0x8f4>
   19d90:	mov	w26, #0x1                   	// #1
   19d94:	b	19c80 <mpfr_get_str@@Base+0x8f4>
   19d98:	cmp	x19, x28
   19d9c:	b.eq	19d04 <mpfr_get_str@@Base+0x978>  // b.none
   19da0:	mov	x2, x23
   19da4:	mov	x1, x28
   19da8:	mov	x0, x19
   19dac:	bl	ba90 <memcpy@plt>
   19db0:	b	19d04 <mpfr_get_str@@Base+0x978>
   19db4:	mov	x22, #0x2                   	// #2
   19db8:	b	19998 <mpfr_get_str@@Base+0x60c>
   19dbc:	ldr	x1, [x29, #136]
   19dc0:	ldr	x0, [x29, #192]
   19dc4:	add	x0, x0, x1
   19dc8:	str	x0, [x29, #192]
   19dcc:	mov	x0, #0x2                   	// #2
   19dd0:	ldr	x1, [x29, #192]
   19dd4:	sdiv	x0, x1, x0
   19dd8:	str	x0, [x29, #136]
   19ddc:	ldr	x0, [x29, #208]
   19de0:	str	x0, [x29, #208]
   19de4:	b	198ec <mpfr_get_str@@Base+0x560>
   19de8:	cmn	w19, #0x3
   19dec:	b.ne	19e14 <mpfr_get_str@@Base+0xa88>  // b.any
   19df0:	ldp	x1, x0, [x29, #200]
   19df4:	ldr	x2, [x29, #208]
   19df8:	cmp	x21, x2
   19dfc:	ldr	x2, [x29, #200]
   19e00:	sub	x1, x1, #0x1
   19e04:	add	x0, x0, #0x1
   19e08:	csinc	x1, x1, x2, gt
   19e0c:	str	x1, [x29, #200]
   19e10:	b	19de0 <mpfr_get_str@@Base+0xa54>
   19e14:	cbz	w19, 19e24 <mpfr_get_str@@Base+0xa98>
   19e18:	ldr	w0, [x29, #180]
   19e1c:	orr	w0, w0, #0x8
   19e20:	str	w0, [x29, #180]
   19e24:	ldr	x0, [x29, #168]
   19e28:	ldr	x1, [x29, #208]
   19e2c:	ldr	x0, [x0]
   19e30:	ldr	w2, [x29, #180]
   19e34:	add	x0, x0, x1
   19e38:	ldr	x1, [x29, #168]
   19e3c:	str	x0, [x1]
   19e40:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   19e44:	ldr	x1, [x0, #2592]
   19e48:	add	x0, x0, #0xa20
   19e4c:	blr	x1
   19e50:	mrs	x1, tpidr_el0
   19e54:	str	w2, [x1, x0]
   19e58:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   19e5c:	ldr	x2, [x0, #2528]
   19e60:	add	x0, x0, #0x9e0
   19e64:	blr	x2
   19e68:	ldr	x2, [x29, #152]
   19e6c:	str	x2, [x1, x0]
   19e70:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   19e74:	ldr	x2, [x0, #2560]
   19e78:	add	x0, x0, #0xa00
   19e7c:	blr	x2
   19e80:	ldr	x2, [x29, #144]
   19e84:	str	x2, [x1, x0]
   19e88:	b	1947c <mpfr_get_str@@Base+0xf0>
   19e8c:	str	xzr, [x29, #232]
   19e90:	b	1947c <mpfr_get_str@@Base+0xf0>

0000000000019e94 <mpfr_free_str@@Base>:
   19e94:	stp	x29, x30, [sp, #-32]!
   19e98:	mov	x29, sp
   19e9c:	str	x19, [sp, #16]
   19ea0:	mov	x19, x0
   19ea4:	bl	bb30 <strlen@plt>
   19ea8:	add	x1, x0, #0x1
   19eac:	mov	x0, x19
   19eb0:	ldr	x19, [sp, #16]
   19eb4:	ldp	x29, x30, [sp], #32
   19eb8:	b	ccc0 <mpfr_free_func@plt>

0000000000019ebc <mpfr_init@@Base>:
   19ebc:	stp	x29, x30, [sp, #-16]!
   19ec0:	mov	x2, x0
   19ec4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   19ec8:	ldr	x1, [x0, #2544]
   19ecc:	add	x0, x0, #0x9f0
   19ed0:	blr	x1
   19ed4:	mov	x29, sp
   19ed8:	mrs	x1, tpidr_el0
   19edc:	ldp	x29, x30, [sp], #16
   19ee0:	ldr	x1, [x1, x0]
   19ee4:	mov	x0, x2
   19ee8:	b	cb10 <mpfr_init2@plt>

0000000000019eec <__gmpfr_inp_str@@Base>:
   19eec:	stp	x29, x30, [sp, #-112]!
   19ef0:	mov	x29, sp
   19ef4:	stp	x19, x20, [sp, #16]
   19ef8:	stp	x21, x22, [sp, #32]
   19efc:	mov	x22, x0
   19f00:	mov	x21, x1
   19f04:	mov	x0, #0x64                  	// #100
   19f08:	stp	x23, x24, [sp, #48]
   19f0c:	mov	w23, w2
   19f10:	mov	w24, w3
   19f14:	stp	x25, x26, [sp, #64]
   19f18:	mov	x25, #0x0                   	// #0
   19f1c:	stp	x27, x28, [sp, #80]
   19f20:	bl	cd90 <mpfr_allocate_func@plt>
   19f24:	mov	x20, x0
   19f28:	mov	x0, x21
   19f2c:	bl	c330 <getc@plt>
   19f30:	mov	w19, w0
   19f34:	bl	c6c0 <__ctype_b_loc@plt>
   19f38:	mov	x28, x0
   19f3c:	mov	x26, x25
   19f40:	ldr	x0, [x0]
   19f44:	add	x25, x25, #0x1
   19f48:	ldrh	w0, [x0, w19, sxtw #1]
   19f4c:	tbnz	w0, #13, 19f28 <__gmpfr_inp_str@@Base+0x3c>
   19f50:	mov	x27, #0x0                   	// #0
   19f54:	mov	x25, #0x64                  	// #100
   19f58:	add	x2, x20, x27
   19f5c:	cmn	w19, #0x1
   19f60:	b.eq	19fb4 <__gmpfr_inp_str@@Base+0xc8>  // b.none
   19f64:	ldr	x0, [x28]
   19f68:	ldrh	w0, [x0, w19, sxtw #1]
   19f6c:	tbnz	w0, #13, 19fb4 <__gmpfr_inp_str@@Base+0xc8>
   19f70:	strb	w19, [x2]
   19f74:	add	x27, x27, #0x1
   19f78:	mov	x0, x21
   19f7c:	bl	c330 <getc@plt>
   19f80:	mov	w19, w0
   19f84:	cmp	x25, x27
   19f88:	b.hi	19f58 <__gmpfr_inp_str@@Base+0x6c>  // b.pmore
   19f8c:	add	x2, x25, x25, lsl #1
   19f90:	mov	x1, x25
   19f94:	mov	x0, x20
   19f98:	lsr	x2, x2, #1
   19f9c:	str	x2, [sp, #104]
   19fa0:	bl	c250 <mpfr_reallocate_func@plt>
   19fa4:	mov	x20, x0
   19fa8:	ldr	x2, [sp, #104]
   19fac:	mov	x25, x2
   19fb0:	b	19f58 <__gmpfr_inp_str@@Base+0x6c>
   19fb4:	mov	x1, x21
   19fb8:	mov	w0, w19
   19fbc:	str	x2, [sp, #104]
   19fc0:	bl	c7c0 <ungetc@plt>
   19fc4:	ldr	x2, [sp, #104]
   19fc8:	mov	w3, w24
   19fcc:	mov	x1, x20
   19fd0:	mov	x0, x22
   19fd4:	strb	wzr, [x2]
   19fd8:	mov	w2, w23
   19fdc:	bl	c750 <mpfr_set_str@plt>
   19fe0:	mov	w19, w0
   19fe4:	mov	x1, x25
   19fe8:	mov	x0, x20
   19fec:	bl	ccc0 <mpfr_free_func@plt>
   19ff0:	cmn	w19, #0x1
   19ff4:	b.eq	1a018 <__gmpfr_inp_str@@Base+0x12c>  // b.none
   19ff8:	add	x0, x26, x27
   19ffc:	ldp	x19, x20, [sp, #16]
   1a000:	ldp	x21, x22, [sp, #32]
   1a004:	ldp	x23, x24, [sp, #48]
   1a008:	ldp	x25, x26, [sp, #64]
   1a00c:	ldp	x27, x28, [sp, #80]
   1a010:	ldp	x29, x30, [sp], #112
   1a014:	ret
   1a018:	mov	x0, #0x0                   	// #0
   1a01c:	b	19ffc <__gmpfr_inp_str@@Base+0x110>

000000000001a020 <mpfr_integer_p@@Base>:
   1a020:	ldr	x2, [x0, #16]
   1a024:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   1a028:	cmp	x2, x1
   1a02c:	b.gt	1a040 <mpfr_integer_p@@Base+0x20>
   1a030:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1a034:	cmp	x2, x0
   1a038:	cset	w0, eq  // eq = none
   1a03c:	ret
   1a040:	cmp	x2, #0x0
   1a044:	b.le	1a09c <mpfr_integer_p@@Base+0x7c>
   1a048:	ldr	x1, [x0]
   1a04c:	cmp	x2, x1
   1a050:	b.cs	1a0b8 <mpfr_integer_p@@Base+0x98>  // b.hs, b.nlast
   1a054:	sub	x1, x1, #0x1
   1a058:	mov	x3, #0x40                  	// #64
   1a05c:	ldr	x4, [x0, #24]
   1a060:	sdiv	x1, x1, x3
   1a064:	sdiv	x3, x2, x3
   1a068:	subs	x0, x1, x3
   1a06c:	b.pl	1a090 <mpfr_integer_p@@Base+0x70>  // b.nfrst
   1a070:	stp	x29, x30, [sp, #-16]!
   1a074:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   1a078:	adrp	x0, 55000 <mpfr_free_pool@@Base+0x3eec>
   1a07c:	mov	x29, sp
   1a080:	add	x2, x2, #0xb80
   1a084:	add	x0, x0, #0xb88
   1a088:	mov	w1, #0x34                  	// #52
   1a08c:	bl	cbd0 <mpfr_assert_fail@plt>
   1a090:	ldr	x1, [x4, x0, lsl #3]
   1a094:	lsl	x2, x1, x2
   1a098:	cbz	x2, 1a0ac <mpfr_integer_p@@Base+0x8c>
   1a09c:	mov	w0, #0x0                   	// #0
   1a0a0:	ret
   1a0a4:	ldr	x1, [x4, x0, lsl #3]
   1a0a8:	cbnz	x1, 1a09c <mpfr_integer_p@@Base+0x7c>
   1a0ac:	sub	x0, x0, #0x1
   1a0b0:	cmn	x0, #0x1
   1a0b4:	b.ne	1a0a4 <mpfr_integer_p@@Base+0x84>  // b.any
   1a0b8:	mov	w0, #0x1                   	// #1
   1a0bc:	ret

000000000001a0c0 <mpfr_inf_p@@Base>:
   1a0c0:	ldr	x1, [x0, #16]
   1a0c4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   1a0c8:	cmp	x1, x0
   1a0cc:	cset	w0, eq  // eq = none
   1a0d0:	ret

000000000001a0d4 <mpfr_nan_p@@Base>:
   1a0d4:	ldr	x1, [x0, #16]
   1a0d8:	mov	x0, #0x2                   	// #2
   1a0dc:	movk	x0, #0x8000, lsl #48
   1a0e0:	cmp	x1, x0
   1a0e4:	cset	w0, eq  // eq = none
   1a0e8:	ret

000000000001a0ec <mpfr_number_p@@Base>:
   1a0ec:	ldr	x0, [x0, #16]
   1a0f0:	mov	x1, #0x7ffffffffffffffe    	// #9223372036854775806
   1a0f4:	add	x0, x0, x1
   1a0f8:	cmp	x0, #0x1
   1a0fc:	cset	w0, hi  // hi = pmore
   1a100:	ret
   1a104:	stp	x29, x30, [sp, #-96]!
   1a108:	mov	x29, sp
   1a10c:	stp	x19, x20, [sp, #16]
   1a110:	mov	x20, x2
   1a114:	mov	x19, x3
   1a118:	stp	x21, x22, [sp, #32]
   1a11c:	mov	x21, x1
   1a120:	stp	x23, x24, [sp, #48]
   1a124:	mov	x23, x0
   1a128:	stp	x25, x26, [sp, #64]
   1a12c:	mov	x25, x4
   1a130:	add	x4, x3, #0x1
   1a134:	str	x27, [sp, #80]
   1a138:	cmp	x4, x25
   1a13c:	b.ne	1a1e8 <mpfr_number_p@@Base+0xfc>  // b.any
   1a140:	cbnz	x3, 1a184 <mpfr_number_p@@Base+0x98>
   1a144:	mov	x0, x21
   1a148:	mov	x1, #0x3                   	// #3
   1a14c:	bl	bd30 <__gmpz_set_ui@plt>
   1a150:	lsl	x19, x19, #3
   1a154:	mov	x0, x20
   1a158:	add	x1, x19, #0x4
   1a15c:	bl	bd30 <__gmpz_set_ui@plt>
   1a160:	mov	x1, x21
   1a164:	mov	x0, x23
   1a168:	ldp	x19, x20, [sp, #16]
   1a16c:	ldp	x21, x22, [sp, #32]
   1a170:	ldp	x23, x24, [sp, #48]
   1a174:	ldp	x25, x26, [sp, #64]
   1a178:	ldr	x27, [sp, #80]
   1a17c:	ldp	x29, x30, [sp], #96
   1a180:	b	c020 <__gmpz_set@plt>
   1a184:	mov	x0, x21
   1a188:	mov	x1, x3
   1a18c:	bl	bd30 <__gmpz_set_ui@plt>
   1a190:	ldr	w0, [x21, #4]
   1a194:	neg	w0, w0
   1a198:	str	w0, [x21, #4]
   1a19c:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   1a1a0:	cmp	x19, x0
   1a1a4:	b.ls	1a150 <mpfr_number_p@@Base+0x64>  // b.plast
   1a1a8:	mov	x1, x19
   1a1ac:	mov	x0, x20
   1a1b0:	bl	bd30 <__gmpz_set_ui@plt>
   1a1b4:	mov	x1, x20
   1a1b8:	mov	x0, x20
   1a1bc:	mov	x2, #0x1                   	// #1
   1a1c0:	bl	c290 <__gmpz_mul_2exp@plt>
   1a1c4:	mov	x1, x20
   1a1c8:	mov	x0, x20
   1a1cc:	mov	x2, #0x1                   	// #1
   1a1d0:	bl	c3f0 <__gmpz_add_ui@plt>
   1a1d4:	mov	x1, x20
   1a1d8:	mov	x0, x20
   1a1dc:	mov	x2, #0x2                   	// #2
   1a1e0:	bl	c290 <__gmpz_mul_2exp@plt>
   1a1e4:	b	1a160 <mpfr_number_p@@Base+0x74>
   1a1e8:	and	x19, x3, x25
   1a1ec:	lsr	x22, x25, #1
   1a1f0:	add	x22, x22, x3, lsr #1
   1a1f4:	and	x19, x19, #0x1
   1a1f8:	add	x22, x22, x19
   1a1fc:	mov	w24, w5
   1a200:	mov	x4, x22
   1a204:	mov	w5, #0x1                   	// #1
   1a208:	bl	1a104 <mpfr_number_p@@Base+0x18>
   1a20c:	add	x19, x23, #0x10
   1a210:	mov	w5, w24
   1a214:	mov	x4, x25
   1a218:	mov	x3, x22
   1a21c:	add	x26, x20, #0x10
   1a220:	add	x27, x21, #0x10
   1a224:	mov	x2, x26
   1a228:	mov	x1, x27
   1a22c:	mov	x0, x19
   1a230:	bl	1a104 <mpfr_number_p@@Base+0x18>
   1a234:	mov	x2, x26
   1a238:	mov	x1, x23
   1a23c:	mov	x0, x23
   1a240:	bl	c070 <__gmpz_mul@plt>
   1a244:	mov	x2, x21
   1a248:	mov	x1, x19
   1a24c:	mov	x0, x19
   1a250:	bl	c070 <__gmpz_mul@plt>
   1a254:	mov	x2, x19
   1a258:	mov	x1, x23
   1a25c:	mov	x0, x23
   1a260:	bl	ca50 <__gmpz_add@plt>
   1a264:	cbz	w24, 1a278 <mpfr_number_p@@Base+0x18c>
   1a268:	mov	x2, x27
   1a26c:	mov	x1, x21
   1a270:	mov	x0, x21
   1a274:	bl	c070 <__gmpz_mul@plt>
   1a278:	mov	x2, x26
   1a27c:	mov	x1, x20
   1a280:	mov	x0, x20
   1a284:	bl	c070 <__gmpz_mul@plt>
   1a288:	mov	x0, x23
   1a28c:	mov	x1, #0x0                   	// #0
   1a290:	bl	bb10 <__gmpz_scan1@plt>
   1a294:	mov	x22, x0
   1a298:	cbz	x0, 1a318 <mpfr_number_p@@Base+0x22c>
   1a29c:	mov	x0, x20
   1a2a0:	mov	x1, #0x0                   	// #0
   1a2a4:	bl	bb10 <__gmpz_scan1@plt>
   1a2a8:	cmp	x22, x0
   1a2ac:	csel	x22, x22, x0, ls  // ls = plast
   1a2b0:	cbz	w24, 1a2c8 <mpfr_number_p@@Base+0x1dc>
   1a2b4:	mov	x0, x21
   1a2b8:	mov	x1, #0x0                   	// #0
   1a2bc:	bl	bb10 <__gmpz_scan1@plt>
   1a2c0:	cmp	x22, x0
   1a2c4:	csel	x22, x22, x0, ls  // ls = plast
   1a2c8:	cbz	x22, 1a318 <mpfr_number_p@@Base+0x22c>
   1a2cc:	mov	x2, x22
   1a2d0:	mov	x1, x23
   1a2d4:	mov	x0, x23
   1a2d8:	bl	c1c0 <__gmpz_fdiv_q_2exp@plt>
   1a2dc:	mov	x2, x22
   1a2e0:	mov	x1, x20
   1a2e4:	mov	x0, x20
   1a2e8:	bl	c1c0 <__gmpz_fdiv_q_2exp@plt>
   1a2ec:	cbz	w24, 1a318 <mpfr_number_p@@Base+0x22c>
   1a2f0:	mov	x2, x22
   1a2f4:	mov	x1, x21
   1a2f8:	mov	x0, x21
   1a2fc:	ldp	x19, x20, [sp, #16]
   1a300:	ldp	x21, x22, [sp, #32]
   1a304:	ldp	x23, x24, [sp, #48]
   1a308:	ldp	x25, x26, [sp, #64]
   1a30c:	ldr	x27, [sp, #80]
   1a310:	ldp	x29, x30, [sp], #96
   1a314:	b	c1c0 <__gmpz_fdiv_q_2exp@plt>
   1a318:	ldp	x19, x20, [sp, #16]
   1a31c:	ldp	x21, x22, [sp, #32]
   1a320:	ldp	x23, x24, [sp, #48]
   1a324:	ldp	x25, x26, [sp, #64]
   1a328:	ldr	x27, [sp, #80]
   1a32c:	ldp	x29, x30, [sp], #96
   1a330:	ret

000000000001a334 <mpfr_const_log2_internal@@Base>:
   1a334:	stp	x29, x30, [sp, #-336]!
   1a338:	mov	x29, sp
   1a33c:	stp	x19, x20, [sp, #16]
   1a340:	stp	x21, x22, [sp, #32]
   1a344:	stp	x23, x24, [sp, #48]
   1a348:	mov	w24, w1
   1a34c:	stp	x25, x26, [sp, #64]
   1a350:	stp	x27, x28, [sp, #80]
   1a354:	ldr	x21, [x0]
   1a358:	str	x0, [x29, #112]
   1a35c:	cmp	x21, #0x42c
   1a360:	b.hi	1a4f4 <mpfr_const_log2_internal@@Base+0x1c0>  // b.pmore
   1a364:	add	x28, x21, #0x9
   1a368:	sub	x19, x28, #0x1
   1a36c:	asr	x19, x19, #6
   1a370:	add	x19, x19, #0x1
   1a374:	lsl	x0, x19, #1
   1a378:	cmp	x0, #0x10
   1a37c:	b.le	1a508 <mpfr_const_log2_internal@@Base+0x1d4>
   1a380:	lsl	x0, x19, #4
   1a384:	str	x0, [x29, #192]
   1a388:	bl	cd90 <mpfr_allocate_func@plt>
   1a38c:	str	x0, [x29, #200]
   1a390:	add	x23, x29, #0x80
   1a394:	add	x26, x29, #0xa0
   1a398:	mov	w0, #0x1                   	// #1
   1a39c:	ldr	x1, [x29, #200]
   1a3a0:	mov	x20, #0x40                  	// #64
   1a3a4:	str	x28, [x29, #128]
   1a3a8:	str	w0, [x29, #136]
   1a3ac:	add	x19, x1, x19, lsl #3
   1a3b0:	str	x1, [x29, #152]
   1a3b4:	str	x28, [x29, #160]
   1a3b8:	str	w0, [x29, #168]
   1a3bc:	str	x19, [x29, #184]
   1a3c0:	mov	x0, #0x3                   	// #3
   1a3c4:	mov	x1, sp
   1a3c8:	mov	x27, #0x0                   	// #0
   1a3cc:	udiv	x19, x28, x0
   1a3d0:	clz	x0, x19
   1a3d4:	add	x4, x19, #0x1
   1a3d8:	mov	w19, #0x41                  	// #65
   1a3dc:	sub	w19, w19, w0
   1a3e0:	mov	w0, #0x30                  	// #48
   1a3e4:	smsubl	x0, w19, w0, x1
   1a3e8:	mov	sp, x0
   1a3ec:	sbfiz	x0, x19, #4, #32
   1a3f0:	mov	x22, sp
   1a3f4:	str	x0, [x29, #120]
   1a3f8:	add	x25, x22, w19, sxtw #4
   1a3fc:	add	x19, x25, w19, sxtw #4
   1a400:	add	x0, x22, x27
   1a404:	str	x4, [x29, #104]
   1a408:	bl	c010 <mpfr_mpz_init@plt>
   1a40c:	add	x0, x25, x27
   1a410:	bl	c010 <mpfr_mpz_init@plt>
   1a414:	add	x0, x19, x27
   1a418:	bl	c010 <mpfr_mpz_init@plt>
   1a41c:	ldr	x0, [x29, #120]
   1a420:	add	x27, x27, #0x10
   1a424:	ldr	x4, [x29, #104]
   1a428:	cmp	x0, x27
   1a42c:	b.ne	1a400 <mpfr_const_log2_internal@@Base+0xcc>  // b.any
   1a430:	mov	w5, #0x0                   	// #0
   1a434:	mov	x3, #0x0                   	// #0
   1a438:	mov	x2, x19
   1a43c:	mov	x1, x25
   1a440:	mov	x0, x22
   1a444:	bl	1a104 <mpfr_number_p@@Base+0x18>
   1a448:	mov	x1, x22
   1a44c:	mov	w2, #0x0                   	// #0
   1a450:	mov	x0, x23
   1a454:	mov	x27, #0x0                   	// #0
   1a458:	bl	c2d0 <mpfr_set_z@plt>
   1a45c:	mov	x1, x19
   1a460:	mov	w2, #0x0                   	// #0
   1a464:	mov	x0, x26
   1a468:	bl	c2d0 <mpfr_set_z@plt>
   1a46c:	mov	x2, x26
   1a470:	mov	x1, x23
   1a474:	mov	x0, x23
   1a478:	mov	w3, #0x0                   	// #0
   1a47c:	bl	c6b0 <mpfr_div@plt>
   1a480:	add	x0, x22, x27
   1a484:	bl	c200 <mpfr_mpz_clear@plt>
   1a488:	add	x0, x25, x27
   1a48c:	bl	c200 <mpfr_mpz_clear@plt>
   1a490:	add	x0, x19, x27
   1a494:	bl	c200 <mpfr_mpz_clear@plt>
   1a498:	ldr	x0, [x29, #120]
   1a49c:	add	x27, x27, #0x10
   1a4a0:	cmp	x0, x27
   1a4a4:	b.ne	1a480 <mpfr_const_log2_internal@@Base+0x14c>  // b.any
   1a4a8:	mov	x0, #0x93df                	// #37855
   1a4ac:	movk	x0, #0x4, lsl #16
   1a4b0:	cmp	x21, x0
   1a4b4:	b.ls	1a53c <mpfr_const_log2_internal@@Base+0x208>  // b.plast
   1a4b8:	ldr	x1, [x29, #144]
   1a4bc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   1a4c0:	cmp	x1, x0
   1a4c4:	b.gt	1a514 <mpfr_const_log2_internal@@Base+0x1e0>
   1a4c8:	mov	x0, #0xfffffffffffffeff    	// #-257
   1a4cc:	movk	x0, #0x7fff, lsl #48
   1a4d0:	sub	x0, x0, x28
   1a4d4:	cmp	x0, x20
   1a4d8:	b.ge	1a588 <mpfr_const_log2_internal@@Base+0x254>  // b.tcont
   1a4dc:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   1a4e0:	adrp	x0, 55000 <mpfr_free_pool@@Base+0x3eec>
   1a4e4:	add	x2, x2, #0xb94
   1a4e8:	add	x0, x0, #0xbd7
   1a4ec:	mov	w1, #0xb1                  	// #177
   1a4f0:	bl	cbd0 <mpfr_assert_fail@plt>
   1a4f4:	add	x28, x21, #0xa
   1a4f8:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   1a4fc:	cmp	x28, x0
   1a500:	b.lt	1a368 <mpfr_const_log2_internal@@Base+0x34>  // b.tstop
   1a504:	bl	c970 <mpfr_abort_prec_max@plt>
   1a508:	add	x0, x29, #0xd0
   1a50c:	str	xzr, [x29, #192]
   1a510:	b	1a38c <mpfr_const_log2_internal@@Base+0x58>
   1a514:	ldr	x1, [x29, #128]
   1a518:	cmp	w24, #0x0
   1a51c:	ldr	x0, [x29, #152]
   1a520:	sub	x1, x1, #0x1
   1a524:	cinc	x3, x21, eq  // eq = none
   1a528:	sub	x2, x28, #0x2
   1a52c:	asr	x1, x1, #6
   1a530:	add	x1, x1, #0x1
   1a534:	bl	c400 <mpfr_round_p@plt>
   1a538:	cbz	w0, 1a4c8 <mpfr_const_log2_internal@@Base+0x194>
   1a53c:	ldr	w3, [x29, #136]
   1a540:	mov	x1, x23
   1a544:	ldr	x0, [x29, #112]
   1a548:	mov	w2, w24
   1a54c:	bl	c730 <mpfr_set4@plt>
   1a550:	mov	w19, w0
   1a554:	ldr	x1, [x29, #192]
   1a558:	cbz	x1, 1a564 <mpfr_const_log2_internal@@Base+0x230>
   1a55c:	ldr	x0, [x29, #200]
   1a560:	bl	ccc0 <mpfr_free_func@plt>
   1a564:	mov	sp, x29
   1a568:	mov	w0, w19
   1a56c:	ldp	x19, x20, [sp, #16]
   1a570:	ldp	x21, x22, [sp, #32]
   1a574:	ldp	x23, x24, [sp, #48]
   1a578:	ldp	x25, x26, [sp, #64]
   1a57c:	ldp	x27, x28, [sp, #80]
   1a580:	ldp	x29, x30, [sp], #336
   1a584:	ret
   1a588:	add	x28, x28, x20
   1a58c:	mov	x20, #0x2                   	// #2
   1a590:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   1a594:	cmp	x28, x0
   1a598:	ldr	x1, [x29, #192]
   1a59c:	sdiv	x20, x28, x20
   1a5a0:	b.ge	1a504 <mpfr_const_log2_internal@@Base+0x1d0>  // b.tcont
   1a5a4:	sub	x19, x28, #0x1
   1a5a8:	asr	x19, x19, #6
   1a5ac:	add	x19, x19, #0x1
   1a5b0:	lsl	x0, x19, #4
   1a5b4:	str	x0, [x29, #192]
   1a5b8:	cbnz	x1, 1a5ec <mpfr_const_log2_internal@@Base+0x2b8>
   1a5bc:	bl	cd90 <mpfr_allocate_func@plt>
   1a5c0:	str	x0, [x29, #200]
   1a5c4:	mov	w0, #0x1                   	// #1
   1a5c8:	str	x28, [x29, #128]
   1a5cc:	ldr	x1, [x29, #200]
   1a5d0:	str	w0, [x29, #136]
   1a5d4:	str	x1, [x29, #152]
   1a5d8:	str	x28, [x29, #160]
   1a5dc:	add	x19, x1, x19, lsl #3
   1a5e0:	str	w0, [x29, #168]
   1a5e4:	str	x19, [x29, #184]
   1a5e8:	b	1a3c0 <mpfr_const_log2_internal@@Base+0x8c>
   1a5ec:	mov	x2, x0
   1a5f0:	ldr	x0, [x29, #200]
   1a5f4:	bl	c250 <mpfr_reallocate_func@plt>
   1a5f8:	b	1a5c0 <mpfr_const_log2_internal@@Base+0x28c>

000000000001a5fc <mpfr_const_log2@@Base>:
   1a5fc:	stp	x29, x30, [sp, #-16]!
   1a600:	mov	x3, x0
   1a604:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1a608:	ldr	x2, [x0, #2576]
   1a60c:	add	x0, x0, #0xa10
   1a610:	blr	x2
   1a614:	mov	x29, sp
   1a618:	ldp	x29, x30, [sp], #16
   1a61c:	mov	w2, w1
   1a620:	mrs	x1, tpidr_el0
   1a624:	add	x1, x1, x0
   1a628:	mov	x0, x3
   1a62c:	b	c410 <mpfr_cache@plt>

000000000001a630 <mpfr_log@@Base>:
   1a630:	stp	x29, x30, [sp, #-352]!
   1a634:	mov	x29, sp
   1a638:	stp	x23, x24, [sp, #48]
   1a63c:	ldr	x23, [x1, #16]
   1a640:	stp	x19, x20, [sp, #16]
   1a644:	mov	x19, x0
   1a648:	stp	x21, x22, [sp, #32]
   1a64c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   1a650:	cmp	x23, x0
   1a654:	stp	x25, x26, [sp, #64]
   1a658:	mov	x25, x1
   1a65c:	stp	x27, x28, [sp, #80]
   1a660:	b.gt	1a718 <mpfr_log@@Base+0xe8>
   1a664:	mov	x1, #0x2                   	// #2
   1a668:	movk	x1, #0x8000, lsl #48
   1a66c:	cmp	x23, x1
   1a670:	b.ne	1a6a8 <mpfr_log@@Base+0x78>  // b.any
   1a674:	mov	x0, #0x2                   	// #2
   1a678:	movk	x0, #0x8000, lsl #48
   1a67c:	str	x0, [x19, #16]
   1a680:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1a684:	ldr	x1, [x0, #2592]
   1a688:	add	x0, x0, #0xa20
   1a68c:	blr	x1
   1a690:	mrs	x1, tpidr_el0
   1a694:	add	x0, x1, x0
   1a698:	ldr	w1, [x0]
   1a69c:	orr	w1, w1, #0x4
   1a6a0:	str	w1, [x0]
   1a6a4:	b	1a6c4 <mpfr_log@@Base+0x94>
   1a6a8:	cmp	x23, x0
   1a6ac:	b.ne	1a6e8 <mpfr_log@@Base+0xb8>  // b.any
   1a6b0:	ldr	w0, [x25, #8]
   1a6b4:	tbnz	w0, #31, 1a674 <mpfr_log@@Base+0x44>
   1a6b8:	mov	w0, #0x1                   	// #1
   1a6bc:	str	w0, [x19, #8]
   1a6c0:	str	x23, [x19, #16]
   1a6c4:	mov	w21, #0x0                   	// #0
   1a6c8:	mov	w0, w21
   1a6cc:	ldp	x19, x20, [sp, #16]
   1a6d0:	ldp	x21, x22, [sp, #32]
   1a6d4:	ldp	x23, x24, [sp, #48]
   1a6d8:	ldp	x25, x26, [sp, #64]
   1a6dc:	ldp	x27, x28, [sp, #80]
   1a6e0:	ldp	x29, x30, [sp], #352
   1a6e4:	ret
   1a6e8:	str	x0, [x19, #16]
   1a6ec:	mov	w0, #0xffffffff            	// #-1
   1a6f0:	str	w0, [x19, #8]
   1a6f4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1a6f8:	ldr	x1, [x0, #2592]
   1a6fc:	add	x0, x0, #0xa20
   1a700:	blr	x1
   1a704:	mrs	x1, tpidr_el0
   1a708:	add	x0, x1, x0
   1a70c:	ldr	w1, [x0]
   1a710:	orr	w1, w1, #0x20
   1a714:	b	1a6a0 <mpfr_log@@Base+0x70>
   1a718:	ldr	w0, [x1, #8]
   1a71c:	tbnz	w0, #31, 1a674 <mpfr_log@@Base+0x44>
   1a720:	mov	w26, w2
   1a724:	cmp	x23, #0x1
   1a728:	b.ne	1a754 <mpfr_log@@Base+0x124>  // b.any
   1a72c:	mov	x1, x23
   1a730:	mov	x0, x25
   1a734:	mov	x2, #0x0                   	// #0
   1a738:	bl	bfd0 <mpfr_cmp_ui_2exp@plt>
   1a73c:	mov	w21, w0
   1a740:	cbnz	w0, 1a754 <mpfr_log@@Base+0x124>
   1a744:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1a748:	str	w23, [x19, #8]
   1a74c:	str	x0, [x19, #16]
   1a750:	b	1a6c8 <mpfr_log@@Base+0x98>
   1a754:	ldr	x0, [x19]
   1a758:	str	x0, [sp, #96]
   1a75c:	cmp	x0, #0x1
   1a760:	b.eq	1a818 <mpfr_log@@Base+0x1e8>  // b.none
   1a764:	b.gt	1a780 <mpfr_log@@Base+0x150>
   1a768:	adrp	x2, 53000 <mpfr_free_pool@@Base+0x1eec>
   1a76c:	add	x2, x2, #0x85a
   1a770:	mov	w1, #0x70                  	// #112
   1a774:	adrp	x0, 55000 <mpfr_free_pool@@Base+0x3eec>
   1a778:	add	x0, x0, #0xbe4
   1a77c:	bl	cbd0 <mpfr_assert_fail@plt>
   1a780:	ldr	x0, [sp, #96]
   1a784:	sub	x21, x0, #0x1
   1a788:	clz	x0, x21
   1a78c:	mov	w21, #0x40                  	// #64
   1a790:	sub	w21, w21, w0
   1a794:	lsl	w21, w21, #1
   1a798:	sxtw	x21, w21
   1a79c:	ldr	x0, [sp, #96]
   1a7a0:	mrs	x20, tpidr_el0
   1a7a4:	add	x21, x21, x0
   1a7a8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1a7ac:	ldr	x1, [x0, #2592]
   1a7b0:	add	x0, x0, #0xa20
   1a7b4:	blr	x1
   1a7b8:	ldr	w0, [x20, x0]
   1a7bc:	str	w0, [sp, #108]
   1a7c0:	add	x28, x21, #0xa
   1a7c4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1a7c8:	ldr	x1, [x0, #2528]
   1a7cc:	add	x0, x0, #0x9e0
   1a7d0:	blr	x1
   1a7d4:	add	x1, x20, x0
   1a7d8:	ldr	x0, [x20, x0]
   1a7dc:	str	x0, [sp, #112]
   1a7e0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1a7e4:	ldr	x2, [x0, #2560]
   1a7e8:	add	x0, x0, #0xa00
   1a7ec:	blr	x2
   1a7f0:	ldr	x2, [x20, x0]
   1a7f4:	str	x2, [sp, #120]
   1a7f8:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   1a7fc:	str	x2, [x1]
   1a800:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   1a804:	str	x1, [x20, x0]
   1a808:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   1a80c:	cmp	x28, x0
   1a810:	b.lt	1a820 <mpfr_log@@Base+0x1f0>  // b.tstop
   1a814:	bl	c970 <mpfr_abort_prec_max@plt>
   1a818:	mov	x21, #0x0                   	// #0
   1a81c:	b	1a79c <mpfr_log@@Base+0x16c>
   1a820:	add	x21, x21, #0x9
   1a824:	mov	x0, #0x40                  	// #64
   1a828:	sdiv	x21, x21, x0
   1a82c:	add	x21, x21, #0x1
   1a830:	lsl	x0, x21, #1
   1a834:	cmp	x0, #0x10
   1a838:	b.le	1aa08 <mpfr_log@@Base+0x3d8>
   1a83c:	lsl	x0, x21, #4
   1a840:	str	x0, [sp, #208]
   1a844:	bl	cd90 <mpfr_allocate_func@plt>
   1a848:	str	x0, [sp, #216]
   1a84c:	mov	w0, #0x1                   	// #1
   1a850:	str	w0, [sp, #152]
   1a854:	add	x24, sp, #0xb0
   1a858:	str	w0, [sp, #184]
   1a85c:	adrp	x0, 73000 <__gmpfr_l2b@@Base+0x200>
   1a860:	ldr	x1, [sp, #216]
   1a864:	mov	x27, #0x40                  	// #64
   1a868:	ldr	x0, [x0, #3976]
   1a86c:	str	x0, [sp, #128]
   1a870:	adrp	x0, 73000 <__gmpfr_l2b@@Base+0x200>
   1a874:	add	x21, x1, x21, lsl #3
   1a878:	str	x21, [sp, #200]
   1a87c:	add	x21, sp, #0x90
   1a880:	ldr	x0, [x0, #3928]
   1a884:	str	x0, [sp, #136]
   1a888:	str	x28, [sp, #144]
   1a88c:	str	x1, [sp, #168]
   1a890:	str	x28, [sp, #176]
   1a894:	add	x22, x28, #0x3
   1a898:	mov	x1, x25
   1a89c:	mov	w3, #0x0                   	// #0
   1a8a0:	mov	x0, x24
   1a8a4:	asr	x22, x22, #1
   1a8a8:	sub	x22, x22, x23
   1a8ac:	mov	x2, x22
   1a8b0:	bl	bc10 <mpfr_mul_2si@plt>
   1a8b4:	ldr	x1, [sp, #128]
   1a8b8:	mov	x2, x24
   1a8bc:	mov	w3, #0x0                   	// #0
   1a8c0:	mov	x0, x21
   1a8c4:	bl	c6b0 <mpfr_div@plt>
   1a8c8:	ldr	x1, [sp, #136]
   1a8cc:	mov	x2, x21
   1a8d0:	mov	w3, #0x0                   	// #0
   1a8d4:	mov	x0, x24
   1a8d8:	bl	ba80 <mpfr_agm@plt>
   1a8dc:	mov	x1, x24
   1a8e0:	mov	w3, #0x0                   	// #0
   1a8e4:	mov	x2, #0x1                   	// #1
   1a8e8:	mov	x0, x24
   1a8ec:	bl	c350 <mpfr_mul_2ui@plt>
   1a8f0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1a8f4:	ldr	x1, [x0, #2640]
   1a8f8:	add	x0, x0, #0xa50
   1a8fc:	blr	x1
   1a900:	mov	w2, #0x0                   	// #0
   1a904:	add	x1, x20, x0
   1a908:	mov	x0, x21
   1a90c:	bl	c410 <mpfr_cache@plt>
   1a910:	mov	x1, x21
   1a914:	mov	w3, #0x0                   	// #0
   1a918:	mov	x2, x24
   1a91c:	mov	x0, x24
   1a920:	bl	c6b0 <mpfr_div@plt>
   1a924:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1a928:	ldr	x1, [x0, #2576]
   1a92c:	add	x0, x0, #0xa10
   1a930:	blr	x1
   1a934:	mov	w2, #0x0                   	// #0
   1a938:	add	x1, x20, x0
   1a93c:	mov	x0, x21
   1a940:	bl	c410 <mpfr_cache@plt>
   1a944:	mov	x2, x22
   1a948:	mov	x1, x21
   1a94c:	mov	w3, #0x0                   	// #0
   1a950:	mov	x0, x21
   1a954:	bl	c9f0 <mpfr_mul_si@plt>
   1a958:	mov	x1, x24
   1a95c:	mov	x2, x21
   1a960:	mov	x0, x21
   1a964:	mov	w3, #0x0                   	// #0
   1a968:	bl	bbf0 <mpfr_sub@plt>
   1a96c:	ldr	x22, [sp, #160]
   1a970:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   1a974:	cmp	x22, x1
   1a978:	b.le	1aa14 <mpfr_log@@Base+0x3e4>
   1a97c:	ldr	x0, [sp, #192]
   1a980:	cmp	x0, x1
   1a984:	b.le	1aa14 <mpfr_log@@Base+0x3e4>
   1a988:	subs	x0, x0, x22
   1a98c:	csel	x22, x0, xzr, pl  // pl = nfrst
   1a990:	cmp	w26, #0x0
   1a994:	ldr	x0, [sp, #96]
   1a998:	sub	x2, x28, x22
   1a99c:	ldr	x1, [sp, #144]
   1a9a0:	cinc	x3, x0, eq  // eq = none
   1a9a4:	ldr	x0, [sp, #168]
   1a9a8:	sub	x1, x1, #0x1
   1a9ac:	sub	x2, x2, #0x4
   1a9b0:	asr	x1, x1, #6
   1a9b4:	add	x1, x1, #0x1
   1a9b8:	bl	c400 <mpfr_round_p@plt>
   1a9bc:	cbnz	w0, 1aaa8 <mpfr_log@@Base+0x478>
   1a9c0:	sub	x0, x28, #0x1
   1a9c4:	cmp	x28, #0x1
   1a9c8:	clz	x1, x0
   1a9cc:	mov	w0, #0x40                  	// #64
   1a9d0:	sub	w0, w0, w1
   1a9d4:	sxtw	x0, w0
   1a9d8:	csel	x0, x0, xzr, ne  // ne = any
   1a9dc:	add	x0, x22, x0
   1a9e0:	add	x0, x0, x28
   1a9e4:	mov	x1, #0xfffffffffffffeff    	// #-257
   1a9e8:	movk	x1, #0x7fff, lsl #48
   1a9ec:	sub	x1, x1, x0
   1a9f0:	cmp	x1, x27
   1a9f4:	b.ge	1aa34 <mpfr_log@@Base+0x404>  // b.tcont
   1a9f8:	adrp	x2, 53000 <mpfr_free_pool@@Base+0x1eec>
   1a9fc:	mov	w1, #0xb5                  	// #181
   1aa00:	add	x2, x2, #0x952
   1aa04:	b	1a774 <mpfr_log@@Base+0x144>
   1aa08:	add	x0, sp, #0xe0
   1aa0c:	str	xzr, [sp, #208]
   1aa10:	b	1a848 <mpfr_log@@Base+0x218>
   1aa14:	sub	x0, x28, #0x1
   1aa18:	cmp	x28, #0x1
   1aa1c:	clz	x1, x0
   1aa20:	mov	w0, #0x40                  	// #64
   1aa24:	sub	w0, w0, w1
   1aa28:	csel	w0, w0, wzr, ne  // ne = any
   1aa2c:	add	x0, x28, w0, sxtw
   1aa30:	b	1a9e4 <mpfr_log@@Base+0x3b4>
   1aa34:	add	x28, x0, x27
   1aa38:	mov	x27, #0x2                   	// #2
   1aa3c:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   1aa40:	cmp	x28, x0
   1aa44:	ldr	x1, [sp, #208]
   1aa48:	sdiv	x27, x28, x27
   1aa4c:	b.ge	1a814 <mpfr_log@@Base+0x1e4>  // b.tcont
   1aa50:	sub	x22, x28, #0x1
   1aa54:	asr	x22, x22, #6
   1aa58:	add	x22, x22, #0x1
   1aa5c:	lsl	x0, x22, #4
   1aa60:	str	x0, [sp, #208]
   1aa64:	cbnz	x1, 1aa98 <mpfr_log@@Base+0x468>
   1aa68:	bl	cd90 <mpfr_allocate_func@plt>
   1aa6c:	str	x0, [sp, #216]
   1aa70:	mov	w0, #0x1                   	// #1
   1aa74:	str	x28, [sp, #144]
   1aa78:	ldr	x1, [sp, #216]
   1aa7c:	str	w0, [sp, #152]
   1aa80:	str	x1, [sp, #168]
   1aa84:	str	x28, [sp, #176]
   1aa88:	add	x22, x1, x22, lsl #3
   1aa8c:	str	w0, [sp, #184]
   1aa90:	str	x22, [sp, #200]
   1aa94:	b	1a894 <mpfr_log@@Base+0x264>
   1aa98:	mov	x2, x0
   1aa9c:	ldr	x0, [sp, #216]
   1aaa0:	bl	c250 <mpfr_reallocate_func@plt>
   1aaa4:	b	1aa6c <mpfr_log@@Base+0x43c>
   1aaa8:	ldr	w3, [sp, #152]
   1aaac:	mov	x1, x21
   1aab0:	mov	w2, w26
   1aab4:	mov	x0, x19
   1aab8:	bl	c730 <mpfr_set4@plt>
   1aabc:	mov	w21, w0
   1aac0:	ldr	x1, [sp, #208]
   1aac4:	cbz	x1, 1aad0 <mpfr_log@@Base+0x4a0>
   1aac8:	ldr	x0, [sp, #216]
   1aacc:	bl	ccc0 <mpfr_free_func@plt>
   1aad0:	ldr	w2, [sp, #108]
   1aad4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1aad8:	ldr	x1, [x0, #2592]
   1aadc:	add	x0, x0, #0xa20
   1aae0:	blr	x1
   1aae4:	add	x1, x20, x0
   1aae8:	str	w2, [x20, x0]
   1aaec:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1aaf0:	ldr	x2, [x0, #2528]
   1aaf4:	add	x0, x0, #0x9e0
   1aaf8:	blr	x2
   1aafc:	ldr	x2, [sp, #112]
   1ab00:	str	x2, [x20, x0]
   1ab04:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1ab08:	ldr	x2, [x0, #2560]
   1ab0c:	add	x0, x0, #0xa00
   1ab10:	blr	x2
   1ab14:	ldr	x2, [sp, #120]
   1ab18:	str	x2, [x20, x0]
   1ab1c:	ldr	x0, [x19, #16]
   1ab20:	ldr	x2, [sp, #112]
   1ab24:	cmp	x2, x0
   1ab28:	b.gt	1ab4c <mpfr_log@@Base+0x51c>
   1ab2c:	ldr	x2, [sp, #120]
   1ab30:	cmp	x2, x0
   1ab34:	b.lt	1ab4c <mpfr_log@@Base+0x51c>  // b.tstop
   1ab38:	cbz	w21, 1a6c8 <mpfr_log@@Base+0x98>
   1ab3c:	ldr	w0, [sp, #108]
   1ab40:	orr	w0, w0, #0x8
   1ab44:	str	w0, [x1]
   1ab48:	b	1a6c8 <mpfr_log@@Base+0x98>
   1ab4c:	mov	w1, w21
   1ab50:	mov	w2, w26
   1ab54:	mov	x0, x19
   1ab58:	bl	cbc0 <mpfr_check_range@plt>
   1ab5c:	mov	w21, w0
   1ab60:	b	1a6c8 <mpfr_log@@Base+0x98>

000000000001ab64 <mpfr_modf@@Base>:
   1ab64:	stp	x29, x30, [sp, #-48]!
   1ab68:	cmp	x0, x1
   1ab6c:	mov	x29, sp
   1ab70:	stp	x19, x20, [sp, #16]
   1ab74:	stp	x21, x22, [sp, #32]
   1ab78:	b.ne	1ab94 <mpfr_modf@@Base+0x30>  // b.any
   1ab7c:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   1ab80:	adrp	x0, 55000 <mpfr_free_pool@@Base+0x3eec>
   1ab84:	add	x2, x2, #0xbea
   1ab88:	add	x0, x0, #0xbf5
   1ab8c:	mov	w1, #0x2b                  	// #43
   1ab90:	bl	cbd0 <mpfr_assert_fail@plt>
   1ab94:	mov	x20, x2
   1ab98:	mov	x21, x1
   1ab9c:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   1aba0:	mov	x19, x0
   1aba4:	ldr	x1, [x20, #16]
   1aba8:	cmp	x1, x2
   1abac:	b.gt	1ac34 <mpfr_modf@@Base+0xd0>
   1abb0:	mov	x0, #0x2                   	// #2
   1abb4:	movk	x0, #0x8000, lsl #48
   1abb8:	cmp	x1, x0
   1abbc:	b.ne	1ac04 <mpfr_modf@@Base+0xa0>  // b.any
   1abc0:	str	x1, [x19, #16]
   1abc4:	str	x1, [x21, #16]
   1abc8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1abcc:	ldr	x1, [x0, #2592]
   1abd0:	add	x0, x0, #0xa20
   1abd4:	blr	x1
   1abd8:	mrs	x1, tpidr_el0
   1abdc:	add	x0, x1, x0
   1abe0:	ldr	w1, [x0]
   1abe4:	orr	w1, w1, #0x4
   1abe8:	str	w1, [x0]
   1abec:	mov	w1, #0x0                   	// #0
   1abf0:	mov	w0, w1
   1abf4:	ldp	x19, x20, [sp, #16]
   1abf8:	ldp	x21, x22, [sp, #32]
   1abfc:	ldp	x29, x30, [sp], #48
   1ac00:	ret
   1ac04:	ldr	w0, [x20, #8]
   1ac08:	cmp	x1, x2
   1ac0c:	str	w0, [x19, #8]
   1ac10:	ldr	w0, [x20, #8]
   1ac14:	str	w0, [x21, #8]
   1ac18:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1ac1c:	b.ne	1ac2c <mpfr_modf@@Base+0xc8>  // b.any
   1ac20:	str	x1, [x19, #16]
   1ac24:	str	x0, [x21, #16]
   1ac28:	b	1abec <mpfr_modf@@Base+0x88>
   1ac2c:	str	x0, [x19, #16]
   1ac30:	b	1ac24 <mpfr_modf@@Base+0xc0>
   1ac34:	mov	w22, w3
   1ac38:	cmp	x1, #0x0
   1ac3c:	b.gt	1acb4 <mpfr_modf@@Base+0x150>
   1ac40:	cmp	x21, x20
   1ac44:	b.eq	1acac <mpfr_modf@@Base+0x148>  // b.none
   1ac48:	mov	w2, w3
   1ac4c:	ldr	w3, [x20, #8]
   1ac50:	mov	x1, x20
   1ac54:	mov	x0, x21
   1ac58:	bl	c730 <mpfr_set4@plt>
   1ac5c:	mov	w1, w0
   1ac60:	ldr	w0, [x20, #8]
   1ac64:	str	w0, [x19, #8]
   1ac68:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1ac6c:	str	x0, [x19, #16]
   1ac70:	cbz	w1, 1abec <mpfr_modf@@Base+0x88>
   1ac74:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1ac78:	ldr	x2, [x0, #2592]
   1ac7c:	add	x0, x0, #0xa20
   1ac80:	blr	x2
   1ac84:	mrs	x2, tpidr_el0
   1ac88:	cmp	w1, #0x0
   1ac8c:	add	x0, x2, x0
   1ac90:	mov	w1, #0x4                   	// #4
   1ac94:	ldr	w2, [x0]
   1ac98:	orr	w2, w2, #0x8
   1ac9c:	str	w2, [x0]
   1aca0:	mov	w0, #0x8                   	// #8
   1aca4:	csel	w1, w1, w0, gt
   1aca8:	b	1abf0 <mpfr_modf@@Base+0x8c>
   1acac:	mov	w1, #0x0                   	// #0
   1acb0:	b	1ac60 <mpfr_modf@@Base+0xfc>
   1acb4:	ldr	x2, [x20]
   1acb8:	cmp	x1, x2
   1acbc:	b.lt	1ad2c <mpfr_modf@@Base+0x1c8>  // b.tstop
   1acc0:	cmp	x0, x20
   1acc4:	b.eq	1ad24 <mpfr_modf@@Base+0x1c0>  // b.none
   1acc8:	mov	w2, w3
   1accc:	ldr	w3, [x20, #8]
   1acd0:	mov	x1, x20
   1acd4:	bl	c730 <mpfr_set4@plt>
   1acd8:	mov	w1, w0
   1acdc:	ldr	w0, [x20, #8]
   1ace0:	str	w0, [x21, #8]
   1ace4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1ace8:	str	x0, [x21, #16]
   1acec:	cbz	w1, 1abec <mpfr_modf@@Base+0x88>
   1acf0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1acf4:	ldr	x2, [x0, #2592]
   1acf8:	add	x0, x0, #0xa20
   1acfc:	blr	x2
   1ad00:	mrs	x2, tpidr_el0
   1ad04:	cmp	w1, #0x0
   1ad08:	add	x0, x2, x0
   1ad0c:	cset	w1, le
   1ad10:	add	w1, w1, #0x1
   1ad14:	ldr	w2, [x0]
   1ad18:	orr	w2, w2, #0x8
   1ad1c:	str	w2, [x0]
   1ad20:	b	1abf0 <mpfr_modf@@Base+0x8c>
   1ad24:	mov	w1, #0x0                   	// #0
   1ad28:	b	1acdc <mpfr_modf@@Base+0x178>
   1ad2c:	mov	w2, w3
   1ad30:	cmp	x0, x20
   1ad34:	b.eq	1adac <mpfr_modf@@Base+0x248>  // b.none
   1ad38:	mov	x1, x20
   1ad3c:	bl	bfb0 <mpfr_rint_trunc@plt>
   1ad40:	mov	x1, x20
   1ad44:	mov	w19, w0
   1ad48:	mov	w2, w22
   1ad4c:	mov	x0, x21
   1ad50:	bl	bf40 <mpfr_frac@plt>
   1ad54:	mov	w20, w0
   1ad58:	cmp	w19, #0x0
   1ad5c:	cbz	w19, 1ad68 <mpfr_modf@@Base+0x204>
   1ad60:	cset	w19, le
   1ad64:	add	w19, w19, #0x1
   1ad68:	cmp	w20, #0x0
   1ad6c:	cbz	w20, 1ad7c <mpfr_modf@@Base+0x218>
   1ad70:	mov	w1, #0x4                   	// #4
   1ad74:	mov	w20, #0x8                   	// #8
   1ad78:	csel	w20, w1, w20, gt
   1ad7c:	orr	w1, w19, w20
   1ad80:	cbz	w1, 1abf0 <mpfr_modf@@Base+0x8c>
   1ad84:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1ad88:	ldr	x2, [x0, #2592]
   1ad8c:	add	x0, x0, #0xa20
   1ad90:	blr	x2
   1ad94:	mrs	x2, tpidr_el0
   1ad98:	add	x0, x2, x0
   1ad9c:	ldr	w2, [x0]
   1ada0:	orr	w2, w2, #0x8
   1ada4:	str	w2, [x0]
   1ada8:	b	1abf0 <mpfr_modf@@Base+0x8c>
   1adac:	mov	x1, x0
   1adb0:	mov	x0, x21
   1adb4:	bl	bf40 <mpfr_frac@plt>
   1adb8:	mov	w20, w0
   1adbc:	mov	x1, x19
   1adc0:	mov	x0, x19
   1adc4:	mov	w2, w22
   1adc8:	bl	bfb0 <mpfr_rint_trunc@plt>
   1adcc:	mov	w19, w0
   1add0:	b	1ad58 <mpfr_modf@@Base+0x1f4>

000000000001add4 <mpfr_mul_2exp@@Base>:
   1add4:	b	c350 <mpfr_mul_2ui@plt>

000000000001add8 <mpfr_mul_2si@@Base>:
   1add8:	stp	x29, x30, [sp, #-80]!
   1addc:	mov	x29, sp
   1ade0:	stp	x23, x24, [sp, #48]
   1ade4:	ldr	x23, [x1, #16]
   1ade8:	stp	x19, x20, [sp, #16]
   1adec:	mov	w20, w3
   1adf0:	stp	x21, x22, [sp, #32]
   1adf4:	mov	x22, x2
   1adf8:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   1adfc:	str	x25, [sp, #64]
   1ae00:	cmp	x23, x2
   1ae04:	b.gt	1ae28 <mpfr_mul_2si@@Base+0x50>
   1ae08:	ldp	x19, x20, [sp, #16]
   1ae0c:	mov	w2, w3
   1ae10:	ldp	x21, x22, [sp, #32]
   1ae14:	ldp	x23, x24, [sp, #48]
   1ae18:	ldr	x25, [sp, #64]
   1ae1c:	ldp	x29, x30, [sp], #80
   1ae20:	ldr	w3, [x1, #8]
   1ae24:	b	c730 <mpfr_set4@plt>
   1ae28:	mov	x21, x0
   1ae2c:	cmp	x1, x0
   1ae30:	b.eq	1ae74 <mpfr_mul_2si@@Base+0x9c>  // b.none
   1ae34:	ldr	w24, [x1, #8]
   1ae38:	ldr	x4, [x1]
   1ae3c:	ldr	x5, [x0]
   1ae40:	ldr	x1, [x1, #24]
   1ae44:	str	w24, [x0, #8]
   1ae48:	cmp	x5, x4
   1ae4c:	ldr	x19, [x0, #24]
   1ae50:	b.ne	1ae7c <mpfr_mul_2si@@Base+0xa4>  // b.any
   1ae54:	cmp	x19, x1
   1ae58:	b.eq	1ae74 <mpfr_mul_2si@@Base+0x9c>  // b.none
   1ae5c:	sub	x5, x5, #0x1
   1ae60:	mov	x0, x19
   1ae64:	asr	x5, x5, #6
   1ae68:	add	x5, x5, #0x1
   1ae6c:	lsl	x2, x5, #3
   1ae70:	bl	ba90 <memcpy@plt>
   1ae74:	mov	w24, #0x0                   	// #0
   1ae78:	b	1af74 <mpfr_mul_2si@@Base+0x19c>
   1ae7c:	sub	x4, x4, #0x1
   1ae80:	sub	x0, x5, #0x1
   1ae84:	asr	x4, x4, #6
   1ae88:	asr	x0, x0, #6
   1ae8c:	b.lt	1aec4 <mpfr_mul_2si@@Base+0xec>  // b.tstop
   1ae90:	add	x2, x4, #0x1
   1ae94:	sub	x4, x0, x4
   1ae98:	add	x0, x19, x4, lsl #3
   1ae9c:	lsl	x24, x4, #3
   1aea0:	cmp	x1, x0
   1aea4:	b.eq	1aeb0 <mpfr_mul_2si@@Base+0xd8>  // b.none
   1aea8:	lsl	x2, x2, #3
   1aeac:	bl	ba90 <memcpy@plt>
   1aeb0:	mov	x2, x24
   1aeb4:	mov	x0, x19
   1aeb8:	mov	w1, #0x0                   	// #0
   1aebc:	bl	c1a0 <memset@plt>
   1aec0:	b	1ae74 <mpfr_mul_2si@@Base+0x9c>
   1aec4:	sub	x4, x4, x0
   1aec8:	neg	w5, w5
   1aecc:	add	x2, x0, #0x1
   1aed0:	ands	w5, w5, #0x3f
   1aed4:	lsl	x8, x4, #3
   1aed8:	add	x0, x1, x4, lsl #3
   1aedc:	b.eq	1afd8 <mpfr_mul_2si@@Base+0x200>  // b.none
   1aee0:	sub	w7, w5, #0x1
   1aee4:	mov	x6, #0x1                   	// #1
   1aee8:	ldr	x5, [x1, x8]
   1aeec:	lsl	x6, x6, x7
   1aef0:	cmp	w20, #0x0
   1aef4:	and	x3, x5, x6
   1aef8:	sub	x6, x6, #0x1
   1aefc:	and	x5, x6, x5
   1af00:	ccmp	x3, #0x0, #0x4, ne  // ne = any
   1af04:	b.ne	1af28 <mpfr_mul_2si@@Base+0x150>  // b.any
   1af08:	mov	x9, #0xfffffffffffffff8    	// #-8
   1af0c:	madd	x9, x4, x9, x0
   1af10:	cmp	x4, #0x0
   1af14:	sub	x4, x4, #0x1
   1af18:	cset	w6, ne  // ne = any
   1af1c:	cmp	x5, #0x0
   1af20:	csel	w6, w6, wzr, eq  // eq = none
   1af24:	cbnz	w6, 1afd0 <mpfr_mul_2si@@Base+0x1f8>
   1af28:	mov	x25, #0x2                   	// #2
   1af2c:	lsl	x25, x25, x7
   1af30:	cmp	w20, #0x5
   1af34:	b.eq	1b1e0 <mpfr_mul_2si@@Base+0x408>  // b.none
   1af38:	cbnz	w20, 1b1c4 <mpfr_mul_2si@@Base+0x3ec>
   1af3c:	cbnz	x3, 1b024 <mpfr_mul_2si@@Base+0x24c>
   1af40:	orr	x5, x3, x5
   1af44:	cmp	x5, #0x0
   1af48:	csneg	w24, wzr, w24, eq  // eq = none
   1af4c:	cmp	x19, x0
   1af50:	b.eq	1af64 <mpfr_mul_2si@@Base+0x18c>  // b.none
   1af54:	mov	x1, x0
   1af58:	lsl	x2, x2, #3
   1af5c:	mov	x0, x19
   1af60:	bl	ba90 <memcpy@plt>
   1af64:	ldr	x0, [x19]
   1af68:	neg	x7, x25
   1af6c:	and	x7, x0, x7
   1af70:	str	x7, [x19]
   1af74:	mrs	x1, tpidr_el0
   1af78:	tbnz	x22, #63, 1b0c8 <mpfr_mul_2si@@Base+0x2f0>
   1af7c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1af80:	ldr	x2, [x0, #2560]
   1af84:	add	x0, x0, #0xa00
   1af88:	blr	x2
   1af8c:	ldr	x0, [x1, x0]
   1af90:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   1af94:	add	x2, x22, x2
   1af98:	cmp	x2, x0
   1af9c:	b.gt	1afac <mpfr_mul_2si@@Base+0x1d4>
   1afa0:	sub	x0, x0, x22
   1afa4:	cmp	x0, x23
   1afa8:	b.ge	1b170 <mpfr_mul_2si@@Base+0x398>  // b.tcont
   1afac:	ldr	w2, [x21, #8]
   1afb0:	mov	w1, w20
   1afb4:	mov	x0, x21
   1afb8:	ldp	x19, x20, [sp, #16]
   1afbc:	ldp	x21, x22, [sp, #32]
   1afc0:	ldp	x23, x24, [sp, #48]
   1afc4:	ldr	x25, [sp, #64]
   1afc8:	ldp	x29, x30, [sp], #80
   1afcc:	b	bfc0 <mpfr_overflow@plt>
   1afd0:	ldr	x5, [x9, x4, lsl #3]
   1afd4:	b	1af10 <mpfr_mul_2si@@Base+0x138>
   1afd8:	ldur	x6, [x0, #-8]
   1afdc:	cmp	w3, #0x0
   1afe0:	and	x5, x6, #0x7fffffffffffffff
   1afe4:	and	x3, x6, #0x8000000000000000
   1afe8:	ccmp	x6, #0x0, #0x0, ne  // ne = any
   1afec:	b.lt	1b1b8 <mpfr_mul_2si@@Base+0x3e0>  // b.tstop
   1aff0:	mov	x7, #0xfffffffffffffff8    	// #-8
   1aff4:	sub	x6, x4, #0x1
   1aff8:	madd	x4, x4, x7, x0
   1affc:	cmp	x6, #0x0
   1b000:	sub	x6, x6, #0x1
   1b004:	cset	w7, ne  // ne = any
   1b008:	cmp	x5, #0x0
   1b00c:	csel	w7, w7, wzr, eq  // eq = none
   1b010:	cbnz	w7, 1b01c <mpfr_mul_2si@@Base+0x244>
   1b014:	mov	x25, #0x1                   	// #1
   1b018:	b	1af30 <mpfr_mul_2si@@Base+0x158>
   1b01c:	ldr	x5, [x4, x6, lsl #3]
   1b020:	b	1affc <mpfr_mul_2si@@Base+0x224>
   1b024:	ldr	x3, [x1, x8]
   1b028:	and	x3, x25, x3
   1b02c:	orr	x5, x3, x5
   1b030:	cbnz	x5, 1b03c <mpfr_mul_2si@@Base+0x264>
   1b034:	neg	w24, w24
   1b038:	b	1af4c <mpfr_mul_2si@@Base+0x174>
   1b03c:	ldr	x1, [x1, x8]
   1b040:	adds	x1, x1, x25
   1b044:	str	x1, [x19]
   1b048:	b.cs	1b090 <mpfr_mul_2si@@Base+0x2b8>  // b.hs, b.nlast
   1b04c:	cmp	x19, x0
   1b050:	b.eq	1af64 <mpfr_mul_2si@@Base+0x18c>  // b.none
   1b054:	mov	x1, #0x1                   	// #1
   1b058:	b	1b0bc <mpfr_mul_2si@@Base+0x2e4>
   1b05c:	ldr	x3, [x0, x1, lsl #3]
   1b060:	add	x3, x3, #0x1
   1b064:	str	x3, [x19, x1, lsl #3]
   1b068:	add	x1, x1, #0x1
   1b06c:	cbz	x3, 1b094 <mpfr_mul_2si@@Base+0x2bc>
   1b070:	cmp	x19, x0
   1b074:	b.eq	1af64 <mpfr_mul_2si@@Base+0x18c>  // b.none
   1b078:	cmp	x2, x1
   1b07c:	b.le	1af64 <mpfr_mul_2si@@Base+0x18c>
   1b080:	ldr	x3, [x0, x1, lsl #3]
   1b084:	str	x3, [x19, x1, lsl #3]
   1b088:	add	x1, x1, #0x1
   1b08c:	b	1b078 <mpfr_mul_2si@@Base+0x2a0>
   1b090:	mov	x1, #0x1                   	// #1
   1b094:	cmp	x2, x1
   1b098:	b.gt	1b05c <mpfr_mul_2si@@Base+0x284>
   1b09c:	add	x2, x19, x2, lsl #3
   1b0a0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   1b0a4:	add	x23, x23, #0x1
   1b0a8:	stur	x0, [x2, #-8]
   1b0ac:	b	1af64 <mpfr_mul_2si@@Base+0x18c>
   1b0b0:	ldr	x3, [x0, x1, lsl #3]
   1b0b4:	str	x3, [x19, x1, lsl #3]
   1b0b8:	add	x1, x1, #0x1
   1b0bc:	cmp	x2, x1
   1b0c0:	b.gt	1b0b0 <mpfr_mul_2si@@Base+0x2d8>
   1b0c4:	b	1af64 <mpfr_mul_2si@@Base+0x18c>
   1b0c8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1b0cc:	ldr	x2, [x0, #2528]
   1b0d0:	add	x0, x0, #0x9e0
   1b0d4:	blr	x2
   1b0d8:	ldr	x0, [x1, x0]
   1b0dc:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   1b0e0:	add	x2, x22, x2
   1b0e4:	cmp	x2, x0
   1b0e8:	b.lt	1b0f8 <mpfr_mul_2si@@Base+0x320>  // b.tstop
   1b0ec:	sub	x2, x0, x22
   1b0f0:	cmp	x2, x23
   1b0f4:	b.le	1b170 <mpfr_mul_2si@@Base+0x398>
   1b0f8:	ldr	w3, [x21, #8]
   1b0fc:	cbnz	w20, 1b12c <mpfr_mul_2si@@Base+0x354>
   1b100:	mov	x1, #0x4000000000000000    	// #4611686018427387904
   1b104:	add	x1, x22, x1
   1b108:	cmp	x0, x1
   1b10c:	b.gt	1b168 <mpfr_mul_2si@@Base+0x390>
   1b110:	add	x22, x22, #0x1
   1b114:	sub	x0, x0, x22
   1b118:	cmp	x0, x23
   1b11c:	b.gt	1b168 <mpfr_mul_2si@@Base+0x390>
   1b120:	tbz	w3, #31, 1b150 <mpfr_mul_2si@@Base+0x378>
   1b124:	cmp	w24, #0x0
   1b128:	b.le	1b154 <mpfr_mul_2si@@Base+0x37c>
   1b12c:	ldr	w2, [x21, #8]
   1b130:	mov	w1, w20
   1b134:	mov	x0, x21
   1b138:	ldp	x19, x20, [sp, #16]
   1b13c:	ldp	x21, x22, [sp, #32]
   1b140:	ldp	x23, x24, [sp, #48]
   1b144:	ldr	x25, [sp, #64]
   1b148:	ldp	x29, x30, [sp], #80
   1b14c:	b	c450 <mpfr_underflow@plt>
   1b150:	tbnz	w24, #31, 1b12c <mpfr_mul_2si@@Base+0x354>
   1b154:	mov	x0, x21
   1b158:	bl	bf80 <mpfr_powerof2_raw@plt>
   1b15c:	cmp	w0, #0x0
   1b160:	cset	w20, ne  // ne = any
   1b164:	b	1b12c <mpfr_mul_2si@@Base+0x354>
   1b168:	mov	w20, #0x1                   	// #1
   1b16c:	b	1b12c <mpfr_mul_2si@@Base+0x354>
   1b170:	add	x22, x23, x22
   1b174:	str	x22, [x21, #16]
   1b178:	cbz	w24, 1b19c <mpfr_mul_2si@@Base+0x3c4>
   1b17c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1b180:	ldr	x2, [x0, #2592]
   1b184:	add	x0, x0, #0xa20
   1b188:	blr	x2
   1b18c:	add	x0, x1, x0
   1b190:	ldr	w1, [x0]
   1b194:	orr	w1, w1, #0x8
   1b198:	str	w1, [x0]
   1b19c:	mov	w0, w24
   1b1a0:	ldp	x19, x20, [sp, #16]
   1b1a4:	ldp	x21, x22, [sp, #32]
   1b1a8:	ldp	x23, x24, [sp, #48]
   1b1ac:	ldr	x25, [sp, #64]
   1b1b0:	ldp	x29, x30, [sp], #80
   1b1b4:	ret
   1b1b8:	cmp	w20, #0x5
   1b1bc:	mov	x25, #0x1                   	// #1
   1b1c0:	b.eq	1b1e0 <mpfr_mul_2si@@Base+0x408>  // b.none
   1b1c4:	cmp	w20, #0x1
   1b1c8:	b.eq	1af40 <mpfr_mul_2si@@Base+0x168>  // b.none
   1b1cc:	add	w4, w20, w24, lsr #31
   1b1d0:	cmp	w4, #0x3
   1b1d4:	b.eq	1af40 <mpfr_mul_2si@@Base+0x168>  // b.none
   1b1d8:	orr	x5, x3, x5
   1b1dc:	cbnz	x5, 1b03c <mpfr_mul_2si@@Base+0x264>
   1b1e0:	mov	w24, #0x0                   	// #0
   1b1e4:	b	1af4c <mpfr_mul_2si@@Base+0x174>

000000000001b1e8 <mpfr_mul_2ui@@Base>:
   1b1e8:	stp	x29, x30, [sp, #-64]!
   1b1ec:	cmp	x0, x1
   1b1f0:	mov	x29, sp
   1b1f4:	stp	x19, x20, [sp, #16]
   1b1f8:	mov	x19, x0
   1b1fc:	mov	x20, x2
   1b200:	stp	x21, x22, [sp, #32]
   1b204:	mov	w22, w3
   1b208:	str	x23, [sp, #48]
   1b20c:	b.eq	1b290 <mpfr_mul_2ui@@Base+0xa8>  // b.none
   1b210:	mov	w2, w3
   1b214:	ldr	w3, [x1, #8]
   1b218:	bl	c730 <mpfr_set4@plt>
   1b21c:	mov	w21, w0
   1b220:	ldr	x1, [x19, #16]
   1b224:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   1b228:	cmp	x1, x0
   1b22c:	b.le	1b2c4 <mpfr_mul_2ui@@Base+0xdc>
   1b230:	mov	x23, #0x8000000000000001    	// #-9223372036854775807
   1b234:	tbnz	x20, #63, 1b298 <mpfr_mul_2ui@@Base+0xb0>
   1b238:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1b23c:	ldr	x1, [x0, #2560]
   1b240:	add	x0, x0, #0xa00
   1b244:	blr	x1
   1b248:	mrs	x1, tpidr_el0
   1b24c:	ldr	x2, [x19, #16]
   1b250:	ldr	x0, [x1, x0]
   1b254:	mov	x1, #0xc000000000000001    	// #-4611686018427387903
   1b258:	add	x1, x20, x1
   1b25c:	cmp	x1, x0
   1b260:	b.gt	1b270 <mpfr_mul_2ui@@Base+0x88>
   1b264:	sub	x0, x0, x20
   1b268:	cmp	x0, x2
   1b26c:	b.ge	1b2bc <mpfr_mul_2ui@@Base+0xd4>  // b.tcont
   1b270:	ldr	w2, [x19, #8]
   1b274:	mov	w1, w22
   1b278:	mov	x0, x19
   1b27c:	ldp	x19, x20, [sp, #16]
   1b280:	ldp	x21, x22, [sp, #32]
   1b284:	ldr	x23, [sp, #48]
   1b288:	ldp	x29, x30, [sp], #64
   1b28c:	b	bfc0 <mpfr_overflow@plt>
   1b290:	mov	w21, #0x0                   	// #0
   1b294:	b	1b220 <mpfr_mul_2ui@@Base+0x38>
   1b298:	add	x20, x20, x23
   1b29c:	mov	w3, w22
   1b2a0:	mov	x1, x19
   1b2a4:	mov	x0, x19
   1b2a8:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
   1b2ac:	bl	1b1e8 <mpfr_mul_2ui@@Base>
   1b2b0:	cbz	w0, 1b234 <mpfr_mul_2ui@@Base+0x4c>
   1b2b4:	mov	w21, w0
   1b2b8:	b	1b2c4 <mpfr_mul_2ui@@Base+0xdc>
   1b2bc:	add	x20, x20, x2
   1b2c0:	str	x20, [x19, #16]
   1b2c4:	mov	w0, w21
   1b2c8:	ldp	x19, x20, [sp, #16]
   1b2cc:	ldp	x21, x22, [sp, #32]
   1b2d0:	ldr	x23, [sp, #48]
   1b2d4:	ldp	x29, x30, [sp], #64
   1b2d8:	ret

000000000001b2dc <mpfr_neg@@Base>:
   1b2dc:	cmp	x0, x1
   1b2e0:	b.eq	1b2f0 <mpfr_neg@@Base+0x14>  // b.none
   1b2e4:	ldr	w3, [x1, #8]
   1b2e8:	neg	w3, w3
   1b2ec:	b	c730 <mpfr_set4@plt>
   1b2f0:	mov	x3, x0
   1b2f4:	ldr	w0, [x0, #8]
   1b2f8:	neg	w0, w0
   1b2fc:	ldr	x1, [x3, #16]
   1b300:	str	w0, [x3, #8]
   1b304:	mov	x0, #0x2                   	// #2
   1b308:	movk	x0, #0x8000, lsl #48
   1b30c:	cmp	x1, x0
   1b310:	b.ne	1b34c <mpfr_neg@@Base+0x70>  // b.any
   1b314:	stp	x29, x30, [sp, #-16]!
   1b318:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1b31c:	ldr	x1, [x0, #2592]
   1b320:	add	x0, x0, #0xa20
   1b324:	blr	x1
   1b328:	mrs	x1, tpidr_el0
   1b32c:	add	x0, x1, x0
   1b330:	mov	x29, sp
   1b334:	ldr	w1, [x0]
   1b338:	orr	w1, w1, #0x4
   1b33c:	str	w1, [x0]
   1b340:	mov	w0, #0x0                   	// #0
   1b344:	ldp	x29, x30, [sp], #16
   1b348:	ret
   1b34c:	mov	w0, #0x0                   	// #0
   1b350:	ret

000000000001b354 <mpfr_nexttozero@@Base>:
   1b354:	stp	x29, x30, [sp, #-32]!
   1b358:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   1b35c:	mov	x29, sp
   1b360:	stp	x19, x20, [sp, #16]
   1b364:	mov	x19, x0
   1b368:	ldr	x0, [x0, #16]
   1b36c:	cmp	x0, x1
   1b370:	b.gt	1b3f4 <mpfr_nexttozero@@Base+0xa0>
   1b374:	mrs	x20, tpidr_el0
   1b378:	b.ne	1b3a0 <mpfr_nexttozero@@Base+0x4c>  // b.any
   1b37c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1b380:	ldr	x1, [x0, #2560]
   1b384:	add	x0, x0, #0xa00
   1b388:	blr	x1
   1b38c:	ldr	x1, [x20, x0]
   1b390:	mov	x0, x19
   1b394:	ldp	x19, x20, [sp, #16]
   1b398:	ldp	x29, x30, [sp], #32
   1b39c:	b	c150 <mpfr_setmax@plt>
   1b3a0:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   1b3a4:	cmp	x0, x1
   1b3a8:	b.eq	1b3c4 <mpfr_nexttozero@@Base+0x70>  // b.none
   1b3ac:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   1b3b0:	adrp	x0, 55000 <mpfr_free_pool@@Base+0x3eec>
   1b3b4:	add	x2, x2, #0xc4f
   1b3b8:	add	x0, x0, #0xc87
   1b3bc:	mov	w1, #0x2b                  	// #43
   1b3c0:	bl	cbd0 <mpfr_assert_fail@plt>
   1b3c4:	ldr	w0, [x19, #8]
   1b3c8:	neg	w0, w0
   1b3cc:	str	w0, [x19, #8]
   1b3d0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1b3d4:	ldr	x1, [x0, #2528]
   1b3d8:	add	x0, x0, #0x9e0
   1b3dc:	blr	x1
   1b3e0:	ldr	x1, [x20, x0]
   1b3e4:	mov	x0, x19
   1b3e8:	ldp	x19, x20, [sp, #16]
   1b3ec:	ldp	x29, x30, [sp], #32
   1b3f0:	b	c340 <mpfr_setmin@plt>
   1b3f4:	ldr	x2, [x19, #24]
   1b3f8:	mov	x0, #0x1                   	// #1
   1b3fc:	ldr	x3, [x19]
   1b400:	ldr	x4, [x2]
   1b404:	sub	x1, x3, #0x1
   1b408:	neg	w3, w3
   1b40c:	asr	x1, x1, #6
   1b410:	lsl	x3, x0, x3
   1b414:	sub	x5, x4, x3
   1b418:	str	x5, [x2]
   1b41c:	add	x1, x1, #0x1
   1b420:	cmp	x3, x4
   1b424:	b.hi	1b484 <mpfr_nexttozero@@Base+0x130>  // b.pmore
   1b428:	lsl	x1, x1, #3
   1b42c:	sub	x1, x1, #0x8
   1b430:	ldr	x0, [x2, x1]
   1b434:	tbnz	x0, #63, 1b464 <mpfr_nexttozero@@Base+0x110>
   1b438:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1b43c:	ldr	x4, [x0, #2528]
   1b440:	add	x0, x0, #0x9e0
   1b444:	blr	x4
   1b448:	mrs	x4, tpidr_el0
   1b44c:	ldr	x3, [x19, #16]
   1b450:	ldr	x0, [x4, x0]
   1b454:	cmp	x0, x3
   1b458:	b.ne	1b490 <mpfr_nexttozero@@Base+0x13c>  // b.any
   1b45c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1b460:	str	x0, [x19, #16]
   1b464:	ldp	x19, x20, [sp, #16]
   1b468:	ldp	x29, x30, [sp], #32
   1b46c:	ret
   1b470:	ldr	x3, [x2, x0, lsl #3]
   1b474:	sub	x4, x3, #0x1
   1b478:	str	x4, [x2, x0, lsl #3]
   1b47c:	add	x0, x0, #0x1
   1b480:	cbnz	x3, 1b428 <mpfr_nexttozero@@Base+0xd4>
   1b484:	cmp	x1, x0
   1b488:	b.gt	1b470 <mpfr_nexttozero@@Base+0x11c>
   1b48c:	b	1b428 <mpfr_nexttozero@@Base+0xd4>
   1b490:	sub	x3, x3, #0x1
   1b494:	str	x3, [x19, #16]
   1b498:	ldr	x0, [x2, x1]
   1b49c:	orr	x0, x0, #0x8000000000000000
   1b4a0:	str	x0, [x2, x1]
   1b4a4:	b	1b464 <mpfr_nexttozero@@Base+0x110>

000000000001b4a8 <mpfr_nexttoinf@@Base>:
   1b4a8:	stp	x29, x30, [sp, #-16]!
   1b4ac:	mov	x3, x0
   1b4b0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   1b4b4:	mov	x29, sp
   1b4b8:	ldr	x0, [x0, #16]
   1b4bc:	cmp	x0, x1
   1b4c0:	b.gt	1b4f4 <mpfr_nexttoinf@@Base+0x4c>
   1b4c4:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   1b4c8:	cmp	x0, x1
   1b4cc:	b.ne	1b570 <mpfr_nexttoinf@@Base+0xc8>  // b.any
   1b4d0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1b4d4:	ldr	x1, [x0, #2528]
   1b4d8:	add	x0, x0, #0x9e0
   1b4dc:	blr	x1
   1b4e0:	mrs	x1, tpidr_el0
   1b4e4:	ldp	x29, x30, [sp], #16
   1b4e8:	ldr	x1, [x1, x0]
   1b4ec:	mov	x0, x3
   1b4f0:	b	c340 <mpfr_setmin@plt>
   1b4f4:	ldr	x5, [x3, #24]
   1b4f8:	mov	x0, #0x1                   	// #1
   1b4fc:	ldr	x2, [x3]
   1b500:	ldr	x1, [x5]
   1b504:	neg	w4, w2
   1b508:	lsl	x4, x0, x4
   1b50c:	adds	x4, x4, x1
   1b510:	str	x4, [x5]
   1b514:	b.cc	1b570 <mpfr_nexttoinf@@Base+0xc8>  // b.lo, b.ul, b.last
   1b518:	sub	x1, x2, #0x1
   1b51c:	asr	x1, x1, #6
   1b520:	add	x1, x1, x0
   1b524:	cmp	x1, x0
   1b528:	b.gt	1b55c <mpfr_nexttoinf@@Base+0xb4>
   1b52c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1b530:	ldr	x4, [x0, #2560]
   1b534:	add	x0, x0, #0xa00
   1b538:	blr	x4
   1b53c:	mrs	x4, tpidr_el0
   1b540:	ldr	x2, [x3, #16]
   1b544:	ldr	x0, [x4, x0]
   1b548:	cmp	x0, x2
   1b54c:	b.ne	1b578 <mpfr_nexttoinf@@Base+0xd0>  // b.any
   1b550:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   1b554:	str	x0, [x3, #16]
   1b558:	b	1b570 <mpfr_nexttoinf@@Base+0xc8>
   1b55c:	ldr	x2, [x5, x0, lsl #3]
   1b560:	add	x2, x2, #0x1
   1b564:	str	x2, [x5, x0, lsl #3]
   1b568:	add	x0, x0, #0x1
   1b56c:	cbz	x2, 1b524 <mpfr_nexttoinf@@Base+0x7c>
   1b570:	ldp	x29, x30, [sp], #16
   1b574:	ret
   1b578:	add	x1, x5, x1, lsl #3
   1b57c:	add	x2, x2, #0x1
   1b580:	str	x2, [x3, #16]
   1b584:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   1b588:	stur	x0, [x1, #-8]
   1b58c:	b	1b570 <mpfr_nexttoinf@@Base+0xc8>

000000000001b590 <mpfr_nextabove@@Base>:
   1b590:	ldr	x3, [x0, #16]
   1b594:	mov	x2, #0x2                   	// #2
   1b598:	movk	x2, #0x8000, lsl #48
   1b59c:	cmp	x3, x2
   1b5a0:	b.ne	1b5d8 <mpfr_nextabove@@Base+0x48>  // b.any
   1b5a4:	stp	x29, x30, [sp, #-16]!
   1b5a8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1b5ac:	ldr	x1, [x0, #2592]
   1b5b0:	add	x0, x0, #0xa20
   1b5b4:	blr	x1
   1b5b8:	mrs	x1, tpidr_el0
   1b5bc:	add	x0, x1, x0
   1b5c0:	mov	x29, sp
   1b5c4:	ldr	w1, [x0]
   1b5c8:	orr	w1, w1, #0x4
   1b5cc:	str	w1, [x0]
   1b5d0:	ldp	x29, x30, [sp], #16
   1b5d4:	ret
   1b5d8:	ldr	w1, [x0, #8]
   1b5dc:	tbz	w1, #31, 1b5e4 <mpfr_nextabove@@Base+0x54>
   1b5e0:	b	c4f0 <mpfr_nexttozero@plt>
   1b5e4:	b	c700 <mpfr_nexttoinf@plt>

000000000001b5e8 <mpfr_nextbelow@@Base>:
   1b5e8:	ldr	x3, [x0, #16]
   1b5ec:	mov	x2, #0x2                   	// #2
   1b5f0:	movk	x2, #0x8000, lsl #48
   1b5f4:	cmp	x3, x2
   1b5f8:	b.ne	1b630 <mpfr_nextbelow@@Base+0x48>  // b.any
   1b5fc:	stp	x29, x30, [sp, #-16]!
   1b600:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1b604:	ldr	x1, [x0, #2592]
   1b608:	add	x0, x0, #0xa20
   1b60c:	blr	x1
   1b610:	mrs	x1, tpidr_el0
   1b614:	add	x0, x1, x0
   1b618:	mov	x29, sp
   1b61c:	ldr	w1, [x0]
   1b620:	orr	w1, w1, #0x4
   1b624:	str	w1, [x0]
   1b628:	ldp	x29, x30, [sp], #16
   1b62c:	ret
   1b630:	ldr	w1, [x0, #8]
   1b634:	tbz	w1, #31, 1b63c <mpfr_nextbelow@@Base+0x54>
   1b638:	b	c700 <mpfr_nexttoinf@plt>
   1b63c:	b	c4f0 <mpfr_nexttozero@plt>

000000000001b640 <mpfr_nexttoward@@Base>:
   1b640:	stp	x29, x30, [sp, #-32]!
   1b644:	mov	x3, #0x2                   	// #2
   1b648:	movk	x3, #0x8000, lsl #48
   1b64c:	mov	x29, sp
   1b650:	ldr	x4, [x0, #16]
   1b654:	str	x19, [sp, #16]
   1b658:	cmp	x4, x3
   1b65c:	b.ne	1b690 <mpfr_nexttoward@@Base+0x50>  // b.any
   1b660:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1b664:	ldr	x1, [x0, #2592]
   1b668:	add	x0, x0, #0xa20
   1b66c:	blr	x1
   1b670:	mrs	x1, tpidr_el0
   1b674:	add	x0, x1, x0
   1b678:	ldr	w1, [x0]
   1b67c:	orr	w1, w1, #0x4
   1b680:	str	w1, [x0]
   1b684:	ldr	x19, [sp, #16]
   1b688:	ldp	x29, x30, [sp], #32
   1b68c:	ret
   1b690:	ldr	x2, [x1, #16]
   1b694:	mov	x19, x0
   1b698:	cmp	x2, x3
   1b69c:	b.ne	1b6a8 <mpfr_nexttoward@@Base+0x68>  // b.any
   1b6a0:	str	x2, [x0, #16]
   1b6a4:	b	1b660 <mpfr_nexttoward@@Base+0x20>
   1b6a8:	mov	w2, #0x1                   	// #1
   1b6ac:	bl	ca30 <mpfr_cmp3@plt>
   1b6b0:	cmp	w0, #0x0
   1b6b4:	cbz	w0, 1b684 <mpfr_nexttoward@@Base+0x44>
   1b6b8:	mov	x0, x19
   1b6bc:	b.ge	1b6cc <mpfr_nexttoward@@Base+0x8c>  // b.tcont
   1b6c0:	ldr	x19, [sp, #16]
   1b6c4:	ldp	x29, x30, [sp], #32
   1b6c8:	b	c1b0 <mpfr_nextabove@plt>
   1b6cc:	ldr	x19, [sp, #16]
   1b6d0:	ldp	x29, x30, [sp], #32
   1b6d4:	b	be50 <mpfr_nextbelow@plt>

000000000001b6d8 <__gmpfr_out_str@@Base>:
   1b6d8:	stp	x29, x30, [sp, #-80]!
   1b6dc:	mov	x29, sp
   1b6e0:	stp	x19, x20, [sp, #16]
   1b6e4:	stp	x21, x22, [sp, #32]
   1b6e8:	mov	w22, w1
   1b6ec:	sub	w1, w1, #0x2
   1b6f0:	str	x23, [sp, #48]
   1b6f4:	cmp	w1, #0x3c
   1b6f8:	b.ls	1b714 <__gmpfr_out_str@@Base+0x3c>  // b.plast
   1b6fc:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   1b700:	adrp	x0, 55000 <mpfr_free_pool@@Base+0x3eec>
   1b704:	add	x2, x2, #0xc9b
   1b708:	add	x0, x0, #0xcb3
   1b70c:	mov	w1, #0x2c                  	// #44
   1b710:	bl	cbd0 <mpfr_assert_fail@plt>
   1b714:	ldr	x1, [x3, #16]
   1b718:	mov	w5, w4
   1b71c:	mov	x4, #0x8000000000000003    	// #-9223372036854775805
   1b720:	cmp	x1, x4
   1b724:	b.gt	1b7a8 <__gmpfr_out_str@@Base+0xd0>
   1b728:	mov	x2, #0x2                   	// #2
   1b72c:	movk	x2, #0x8000, lsl #48
   1b730:	cmp	x1, x2
   1b734:	b.ne	1b768 <__gmpfr_out_str@@Base+0x90>  // b.any
   1b738:	adrp	x1, 54000 <mpfr_free_pool@@Base+0x2eec>
   1b73c:	add	x1, x1, #0xa10
   1b740:	bl	cd80 <fprintf@plt>
   1b744:	cmp	w0, #0x0
   1b748:	csel	w0, w0, wzr, ge  // ge = tcont
   1b74c:	sxtw	x19, w0
   1b750:	mov	x0, x19
   1b754:	ldp	x19, x20, [sp, #16]
   1b758:	ldp	x21, x22, [sp, #32]
   1b75c:	ldr	x23, [sp, #48]
   1b760:	ldp	x29, x30, [sp], #80
   1b764:	ret
   1b768:	ldr	w3, [x3, #8]
   1b76c:	cmp	x1, x4
   1b770:	b.ne	1b790 <__gmpfr_out_str@@Base+0xb8>  // b.any
   1b774:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   1b778:	adrp	x1, 55000 <mpfr_free_pool@@Base+0x3eec>
   1b77c:	cmp	w3, #0x0
   1b780:	add	x2, x2, #0x507
   1b784:	add	x1, x1, #0x508
   1b788:	csel	x1, x1, x2, gt
   1b78c:	b	1b740 <__gmpfr_out_str@@Base+0x68>
   1b790:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   1b794:	adrp	x1, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   1b798:	cmp	w3, #0x0
   1b79c:	add	x2, x2, #0xc8e
   1b7a0:	add	x1, x1, #0x943
   1b7a4:	b	1b788 <__gmpfr_out_str@@Base+0xb0>
   1b7a8:	mov	x4, x3
   1b7ac:	add	x1, sp, #0x48
   1b7b0:	mov	x3, x2
   1b7b4:	mov	w2, w22
   1b7b8:	mov	x21, x0
   1b7bc:	mov	x0, #0x0                   	// #0
   1b7c0:	bl	c590 <mpfr_get_str@plt>
   1b7c4:	mov	x20, x0
   1b7c8:	bl	bb30 <strlen@plt>
   1b7cc:	add	x19, x0, #0x1
   1b7d0:	ldrb	w0, [x20]
   1b7d4:	cmp	w0, #0x2d
   1b7d8:	b.ne	1b864 <__gmpfr_out_str@@Base+0x18c>  // b.any
   1b7dc:	mov	x1, x21
   1b7e0:	bl	be20 <fputc@plt>
   1b7e4:	cmn	w0, #0x1
   1b7e8:	b.ne	1b808 <__gmpfr_out_str@@Base+0x130>  // b.any
   1b7ec:	mov	w23, #0x1                   	// #1
   1b7f0:	mov	x1, x19
   1b7f4:	mov	x0, x20
   1b7f8:	bl	ccc0 <mpfr_free_func@plt>
   1b7fc:	cbz	w23, 1b874 <__gmpfr_out_str@@Base+0x19c>
   1b800:	mov	x19, #0x0                   	// #0
   1b804:	b	1b750 <__gmpfr_out_str@@Base+0x78>
   1b808:	add	x23, x20, #0x1
   1b80c:	ldrb	w0, [x23]
   1b810:	mov	x1, x21
   1b814:	bl	be20 <fputc@plt>
   1b818:	cmn	w0, #0x1
   1b81c:	b.eq	1b7ec <__gmpfr_out_str@@Base+0x114>  // b.none
   1b820:	bl	bf20 <localeconv@plt>
   1b824:	ldr	x0, [x0]
   1b828:	ldrb	w0, [x0, #1]
   1b82c:	cbnz	w0, 1b86c <__gmpfr_out_str@@Base+0x194>
   1b830:	bl	bf20 <localeconv@plt>
   1b834:	ldr	x0, [x0]
   1b838:	ldrb	w0, [x0]
   1b83c:	mov	x1, x21
   1b840:	bl	be20 <fputc@plt>
   1b844:	cmn	w0, #0x1
   1b848:	b.eq	1b7ec <__gmpfr_out_str@@Base+0x114>  // b.none
   1b84c:	add	x0, x23, #0x1
   1b850:	mov	x1, x21
   1b854:	bl	bb40 <fputs@plt>
   1b858:	cmn	w0, #0x1
   1b85c:	cset	w23, eq  // eq = none
   1b860:	b	1b7f0 <__gmpfr_out_str@@Base+0x118>
   1b864:	mov	x23, x20
   1b868:	b	1b80c <__gmpfr_out_str@@Base+0x134>
   1b86c:	mov	w0, #0x2e                  	// #46
   1b870:	b	1b83c <__gmpfr_out_str@@Base+0x164>
   1b874:	ldr	x2, [sp, #72]
   1b878:	sub	x2, x2, #0x1
   1b87c:	str	x2, [sp, #72]
   1b880:	cbz	x2, 1b750 <__gmpfr_out_str@@Base+0x78>
   1b884:	cmp	w22, #0xb
   1b888:	adrp	x1, 55000 <mpfr_free_pool@@Base+0x3eec>
   1b88c:	adrp	x0, 55000 <mpfr_free_pool@@Base+0x3eec>
   1b890:	add	x1, x1, #0xc96
   1b894:	add	x0, x0, #0xc91
   1b898:	csel	x1, x0, x1, lt  // lt = tstop
   1b89c:	mov	x0, x21
   1b8a0:	bl	cd80 <fprintf@plt>
   1b8a4:	tbnz	w0, #31, 1b800 <__gmpfr_out_str@@Base+0x128>
   1b8a8:	add	x19, x19, w0, sxtw
   1b8ac:	b	1b750 <__gmpfr_out_str@@Base+0x78>

000000000001b8b0 <mpfr_snprintf@@Base>:
   1b8b0:	stp	x29, x30, [sp, #-256]!
   1b8b4:	mov	x29, sp
   1b8b8:	stp	x3, x4, [sp, #216]
   1b8bc:	add	x3, sp, #0x100
   1b8c0:	stp	x3, x3, [sp, #48]
   1b8c4:	add	x3, sp, #0xd0
   1b8c8:	str	x3, [sp, #64]
   1b8cc:	mov	w3, #0xffffffd8            	// #-40
   1b8d0:	str	w3, [sp, #72]
   1b8d4:	mov	w3, #0xffffff80            	// #-128
   1b8d8:	str	w3, [sp, #76]
   1b8dc:	mov	x3, x2
   1b8e0:	stp	x5, x6, [sp, #232]
   1b8e4:	mov	x2, x1
   1b8e8:	mov	x1, x0
   1b8ec:	ldp	x4, x5, [sp, #48]
   1b8f0:	stp	x4, x5, [sp, #16]
   1b8f4:	mov	x0, #0x0                   	// #0
   1b8f8:	ldp	x4, x5, [sp, #64]
   1b8fc:	stp	x4, x5, [sp, #32]
   1b900:	add	x4, sp, #0x10
   1b904:	str	q0, [sp, #80]
   1b908:	str	q1, [sp, #96]
   1b90c:	str	q2, [sp, #112]
   1b910:	str	q3, [sp, #128]
   1b914:	str	q4, [sp, #144]
   1b918:	str	q5, [sp, #160]
   1b91c:	str	q6, [sp, #176]
   1b920:	str	q7, [sp, #192]
   1b924:	str	x7, [sp, #248]
   1b928:	bl	bca0 <mpfr_vasnprintf_aux@plt>
   1b92c:	ldp	x29, x30, [sp], #256
   1b930:	ret

000000000001b934 <__gmpfr_vsnprintf@@Base>:
   1b934:	stp	x29, x30, [sp, #-48]!
   1b938:	mov	x29, sp
   1b93c:	ldp	x4, x5, [x3]
   1b940:	stp	x4, x5, [sp, #16]
   1b944:	ldp	x4, x5, [x3, #16]
   1b948:	mov	x3, x2
   1b94c:	mov	x2, x1
   1b950:	mov	x1, x0
   1b954:	mov	x0, #0x0                   	// #0
   1b958:	stp	x4, x5, [sp, #32]
   1b95c:	add	x4, sp, #0x10
   1b960:	bl	bca0 <mpfr_vasnprintf_aux@plt>
   1b964:	ldp	x29, x30, [sp], #48
   1b968:	ret

000000000001b96c <__gmpfr_vasprintf@@Base>:
   1b96c:	stp	x29, x30, [sp, #-48]!
   1b970:	mov	x29, sp
   1b974:	ldp	x4, x5, [x2]
   1b978:	stp	x4, x5, [sp, #16]
   1b97c:	ldp	x2, x3, [x2, #16]
   1b980:	add	x4, sp, #0x10
   1b984:	stp	x2, x3, [sp, #32]
   1b988:	mov	x3, x1
   1b98c:	mov	x2, #0x0                   	// #0
   1b990:	mov	x1, #0x0                   	// #0
   1b994:	bl	bca0 <mpfr_vasnprintf_aux@plt>
   1b998:	ldp	x29, x30, [sp], #48
   1b99c:	ret

000000000001b9a0 <mpfr_printf@@Base>:
   1b9a0:	stp	x29, x30, [sp, #-304]!
   1b9a4:	mov	x29, sp
   1b9a8:	stp	x1, x2, [sp, #248]
   1b9ac:	add	x1, sp, #0x130
   1b9b0:	stp	x1, x1, [sp, #80]
   1b9b4:	add	x1, sp, #0xf0
   1b9b8:	str	x1, [sp, #96]
   1b9bc:	mov	w1, #0xffffffc8            	// #-56
   1b9c0:	str	w1, [sp, #104]
   1b9c4:	mov	w1, #0xffffff80            	// #-128
   1b9c8:	str	w1, [sp, #108]
   1b9cc:	mov	x1, x0
   1b9d0:	stp	x3, x4, [sp, #264]
   1b9d4:	add	x0, sp, #0x48
   1b9d8:	ldp	x2, x3, [sp, #80]
   1b9dc:	stp	x2, x3, [sp, #32]
   1b9e0:	ldp	x2, x3, [sp, #96]
   1b9e4:	str	x19, [sp, #16]
   1b9e8:	stp	x2, x3, [sp, #48]
   1b9ec:	add	x2, sp, #0x20
   1b9f0:	str	q0, [sp, #112]
   1b9f4:	str	q1, [sp, #128]
   1b9f8:	str	q2, [sp, #144]
   1b9fc:	str	q3, [sp, #160]
   1ba00:	str	q4, [sp, #176]
   1ba04:	str	q5, [sp, #192]
   1ba08:	str	q6, [sp, #208]
   1ba0c:	str	q7, [sp, #224]
   1ba10:	stp	x5, x6, [sp, #280]
   1ba14:	str	x7, [sp, #296]
   1ba18:	bl	c050 <__gmpfr_vasprintf@plt>
   1ba1c:	tbz	w0, #31, 1ba40 <mpfr_printf@@Base+0xa0>
   1ba20:	ldr	x0, [sp, #72]
   1ba24:	cbz	x0, 1ba2c <mpfr_printf@@Base+0x8c>
   1ba28:	bl	c920 <mpfr_free_str@plt>
   1ba2c:	mov	w19, #0xffffffff            	// #-1
   1ba30:	mov	w0, w19
   1ba34:	ldr	x19, [sp, #16]
   1ba38:	ldp	x29, x30, [sp], #304
   1ba3c:	ret
   1ba40:	ldr	x1, [sp, #72]
   1ba44:	adrp	x0, 55000 <mpfr_free_pool@@Base+0x3eec>
   1ba48:	add	x0, x0, #0xcbd
   1ba4c:	bl	cc80 <printf@plt>
   1ba50:	mov	w19, w0
   1ba54:	ldr	x0, [sp, #72]
   1ba58:	bl	c920 <mpfr_free_str@plt>
   1ba5c:	b	1ba30 <mpfr_printf@@Base+0x90>

000000000001ba60 <__gmpfr_vprintf@@Base>:
   1ba60:	stp	x29, x30, [sp, #-80]!
   1ba64:	mov	x29, sp
   1ba68:	ldp	x2, x3, [x1]
   1ba6c:	stp	x2, x3, [sp, #32]
   1ba70:	ldp	x2, x3, [x1, #16]
   1ba74:	mov	x1, x0
   1ba78:	add	x0, sp, #0x48
   1ba7c:	str	x19, [sp, #16]
   1ba80:	stp	x2, x3, [sp, #48]
   1ba84:	add	x2, sp, #0x20
   1ba88:	bl	c050 <__gmpfr_vasprintf@plt>
   1ba8c:	tbz	w0, #31, 1baa4 <__gmpfr_vprintf@@Base+0x44>
   1ba90:	ldr	x0, [sp, #72]
   1ba94:	cbz	x0, 1ba9c <__gmpfr_vprintf@@Base+0x3c>
   1ba98:	bl	c920 <mpfr_free_str@plt>
   1ba9c:	mov	w19, #0xffffffff            	// #-1
   1baa0:	b	1bac0 <__gmpfr_vprintf@@Base+0x60>
   1baa4:	ldr	x1, [sp, #72]
   1baa8:	adrp	x0, 55000 <mpfr_free_pool@@Base+0x3eec>
   1baac:	add	x0, x0, #0xcbd
   1bab0:	bl	cc80 <printf@plt>
   1bab4:	mov	w19, w0
   1bab8:	ldr	x0, [sp, #72]
   1babc:	bl	c920 <mpfr_free_str@plt>
   1bac0:	mov	w0, w19
   1bac4:	ldr	x19, [sp, #16]
   1bac8:	ldp	x29, x30, [sp], #80
   1bacc:	ret

000000000001bad0 <__gmpfr_fprintf@@Base>:
   1bad0:	stp	x29, x30, [sp, #-288]!
   1bad4:	mov	x29, sp
   1bad8:	str	x19, [sp, #16]
   1badc:	mov	x19, x0
   1bae0:	add	x0, sp, #0x120
   1bae4:	stp	x0, x0, [sp, #80]
   1bae8:	add	x0, sp, #0xf0
   1baec:	str	x0, [sp, #96]
   1baf0:	mov	w0, #0xffffffd0            	// #-48
   1baf4:	str	w0, [sp, #104]
   1baf8:	mov	w0, #0xffffff80            	// #-128
   1bafc:	str	w0, [sp, #108]
   1bb00:	add	x0, sp, #0x48
   1bb04:	stp	x2, x3, [sp, #240]
   1bb08:	ldp	x2, x3, [sp, #80]
   1bb0c:	stp	x2, x3, [sp, #32]
   1bb10:	ldp	x2, x3, [sp, #96]
   1bb14:	stp	x2, x3, [sp, #48]
   1bb18:	add	x2, sp, #0x20
   1bb1c:	str	q0, [sp, #112]
   1bb20:	str	q1, [sp, #128]
   1bb24:	str	q2, [sp, #144]
   1bb28:	str	q3, [sp, #160]
   1bb2c:	str	q4, [sp, #176]
   1bb30:	str	q5, [sp, #192]
   1bb34:	str	q6, [sp, #208]
   1bb38:	str	q7, [sp, #224]
   1bb3c:	stp	x4, x5, [sp, #256]
   1bb40:	stp	x6, x7, [sp, #272]
   1bb44:	bl	c050 <__gmpfr_vasprintf@plt>
   1bb48:	tbz	w0, #31, 1bb6c <__gmpfr_fprintf@@Base+0x9c>
   1bb4c:	ldr	x0, [sp, #72]
   1bb50:	cbz	x0, 1bb58 <__gmpfr_fprintf@@Base+0x88>
   1bb54:	bl	c920 <mpfr_free_str@plt>
   1bb58:	mov	w19, #0xffffffff            	// #-1
   1bb5c:	mov	w0, w19
   1bb60:	ldr	x19, [sp, #16]
   1bb64:	ldp	x29, x30, [sp], #288
   1bb68:	ret
   1bb6c:	ldr	x2, [sp, #72]
   1bb70:	mov	x0, x19
   1bb74:	adrp	x1, 55000 <mpfr_free_pool@@Base+0x3eec>
   1bb78:	add	x1, x1, #0xcbd
   1bb7c:	bl	cd80 <fprintf@plt>
   1bb80:	mov	w19, w0
   1bb84:	ldr	x0, [sp, #72]
   1bb88:	bl	c920 <mpfr_free_str@plt>
   1bb8c:	b	1bb5c <__gmpfr_fprintf@@Base+0x8c>

000000000001bb90 <__gmpfr_vfprintf@@Base>:
   1bb90:	stp	x29, x30, [sp, #-80]!
   1bb94:	mov	x29, sp
   1bb98:	ldp	x4, x5, [x2]
   1bb9c:	stp	x4, x5, [sp, #32]
   1bba0:	ldp	x2, x3, [x2, #16]
   1bba4:	str	x19, [sp, #16]
   1bba8:	mov	x19, x0
   1bbac:	add	x0, sp, #0x48
   1bbb0:	stp	x2, x3, [sp, #48]
   1bbb4:	add	x2, sp, #0x20
   1bbb8:	bl	c050 <__gmpfr_vasprintf@plt>
   1bbbc:	tbz	w0, #31, 1bbd4 <__gmpfr_vfprintf@@Base+0x44>
   1bbc0:	ldr	x0, [sp, #72]
   1bbc4:	cbz	x0, 1bbcc <__gmpfr_vfprintf@@Base+0x3c>
   1bbc8:	bl	c920 <mpfr_free_str@plt>
   1bbcc:	mov	w19, #0xffffffff            	// #-1
   1bbd0:	b	1bbf4 <__gmpfr_vfprintf@@Base+0x64>
   1bbd4:	ldr	x2, [sp, #72]
   1bbd8:	mov	x0, x19
   1bbdc:	adrp	x1, 55000 <mpfr_free_pool@@Base+0x3eec>
   1bbe0:	add	x1, x1, #0xcbd
   1bbe4:	bl	cd80 <fprintf@plt>
   1bbe8:	mov	w19, w0
   1bbec:	ldr	x0, [sp, #72]
   1bbf0:	bl	c920 <mpfr_free_str@plt>
   1bbf4:	mov	w0, w19
   1bbf8:	ldr	x19, [sp, #16]
   1bbfc:	ldp	x29, x30, [sp], #80
   1bc00:	ret

000000000001bc04 <mpfr_sprintf@@Base>:
   1bc04:	stp	x29, x30, [sp, #-288]!
   1bc08:	mov	x29, sp
   1bc0c:	str	x19, [sp, #16]
   1bc10:	mov	x19, x0
   1bc14:	add	x0, sp, #0x120
   1bc18:	stp	x0, x0, [sp, #80]
   1bc1c:	add	x0, sp, #0xf0
   1bc20:	str	x0, [sp, #96]
   1bc24:	mov	w0, #0xffffffd0            	// #-48
   1bc28:	str	w0, [sp, #104]
   1bc2c:	mov	w0, #0xffffff80            	// #-128
   1bc30:	str	w0, [sp, #108]
   1bc34:	add	x0, sp, #0x48
   1bc38:	stp	x2, x3, [sp, #240]
   1bc3c:	ldp	x2, x3, [sp, #80]
   1bc40:	stp	x2, x3, [sp, #32]
   1bc44:	ldp	x2, x3, [sp, #96]
   1bc48:	stp	x2, x3, [sp, #48]
   1bc4c:	add	x2, sp, #0x20
   1bc50:	str	q0, [sp, #112]
   1bc54:	str	q1, [sp, #128]
   1bc58:	str	q2, [sp, #144]
   1bc5c:	str	q3, [sp, #160]
   1bc60:	str	q4, [sp, #176]
   1bc64:	str	q5, [sp, #192]
   1bc68:	str	q6, [sp, #208]
   1bc6c:	str	q7, [sp, #224]
   1bc70:	stp	x4, x5, [sp, #256]
   1bc74:	stp	x6, x7, [sp, #272]
   1bc78:	bl	c050 <__gmpfr_vasprintf@plt>
   1bc7c:	tbz	w0, #31, 1bca0 <mpfr_sprintf@@Base+0x9c>
   1bc80:	ldr	x0, [sp, #72]
   1bc84:	cbz	x0, 1bc8c <mpfr_sprintf@@Base+0x88>
   1bc88:	bl	c920 <mpfr_free_str@plt>
   1bc8c:	mov	w19, #0xffffffff            	// #-1
   1bc90:	mov	w0, w19
   1bc94:	ldr	x19, [sp, #16]
   1bc98:	ldp	x29, x30, [sp], #288
   1bc9c:	ret
   1bca0:	ldr	x2, [sp, #72]
   1bca4:	mov	x0, x19
   1bca8:	adrp	x1, 55000 <mpfr_free_pool@@Base+0x3eec>
   1bcac:	add	x1, x1, #0xcbd
   1bcb0:	bl	bd90 <sprintf@plt>
   1bcb4:	mov	w19, w0
   1bcb8:	ldr	x0, [sp, #72]
   1bcbc:	bl	c920 <mpfr_free_str@plt>
   1bcc0:	b	1bc90 <mpfr_sprintf@@Base+0x8c>

000000000001bcc4 <__gmpfr_vsprintf@@Base>:
   1bcc4:	stp	x29, x30, [sp, #-80]!
   1bcc8:	mov	x29, sp
   1bccc:	ldp	x4, x5, [x2]
   1bcd0:	stp	x4, x5, [sp, #32]
   1bcd4:	ldp	x2, x3, [x2, #16]
   1bcd8:	str	x19, [sp, #16]
   1bcdc:	mov	x19, x0
   1bce0:	add	x0, sp, #0x48
   1bce4:	stp	x2, x3, [sp, #48]
   1bce8:	add	x2, sp, #0x20
   1bcec:	bl	c050 <__gmpfr_vasprintf@plt>
   1bcf0:	tbz	w0, #31, 1bd08 <__gmpfr_vsprintf@@Base+0x44>
   1bcf4:	ldr	x0, [sp, #72]
   1bcf8:	cbz	x0, 1bd00 <__gmpfr_vsprintf@@Base+0x3c>
   1bcfc:	bl	c920 <mpfr_free_str@plt>
   1bd00:	mov	w19, #0xffffffff            	// #-1
   1bd04:	b	1bd28 <__gmpfr_vsprintf@@Base+0x64>
   1bd08:	ldr	x2, [sp, #72]
   1bd0c:	mov	x0, x19
   1bd10:	adrp	x1, 55000 <mpfr_free_pool@@Base+0x3eec>
   1bd14:	add	x1, x1, #0xcbd
   1bd18:	bl	bd90 <sprintf@plt>
   1bd1c:	mov	w19, w0
   1bd20:	ldr	x0, [sp, #72]
   1bd24:	bl	c920 <mpfr_free_str@plt>
   1bd28:	mov	w0, w19
   1bd2c:	ldr	x19, [sp, #16]
   1bd30:	ldp	x29, x30, [sp], #80
   1bd34:	ret

000000000001bd38 <mpfr_asprintf@@Base>:
   1bd38:	stp	x29, x30, [sp, #-272]!
   1bd3c:	mov	x29, sp
   1bd40:	stp	x2, x3, [sp, #224]
   1bd44:	add	x2, sp, #0x110
   1bd48:	stp	x2, x2, [sp, #64]
   1bd4c:	add	x2, sp, #0xe0
   1bd50:	str	x2, [sp, #80]
   1bd54:	mov	w2, #0xffffffd0            	// #-48
   1bd58:	str	w2, [sp, #88]
   1bd5c:	mov	w2, #0xffffff80            	// #-128
   1bd60:	str	w2, [sp, #92]
   1bd64:	ldp	x2, x3, [sp, #64]
   1bd68:	stp	x2, x3, [sp, #32]
   1bd6c:	ldp	x2, x3, [sp, #80]
   1bd70:	str	x19, [sp, #16]
   1bd74:	mov	x19, x0
   1bd78:	stp	x2, x3, [sp, #48]
   1bd7c:	add	x2, sp, #0x20
   1bd80:	str	q0, [sp, #96]
   1bd84:	str	q1, [sp, #112]
   1bd88:	str	q2, [sp, #128]
   1bd8c:	str	q3, [sp, #144]
   1bd90:	str	q4, [sp, #160]
   1bd94:	str	q5, [sp, #176]
   1bd98:	str	q6, [sp, #192]
   1bd9c:	str	q7, [sp, #208]
   1bda0:	stp	x4, x5, [sp, #240]
   1bda4:	stp	x6, x7, [sp, #256]
   1bda8:	bl	c050 <__gmpfr_vasprintf@plt>
   1bdac:	tbz	w0, #31, 1bdc0 <mpfr_asprintf@@Base+0x88>
   1bdb0:	ldr	x0, [x19]
   1bdb4:	cbz	x0, 1bdbc <mpfr_asprintf@@Base+0x84>
   1bdb8:	bl	c920 <mpfr_free_str@plt>
   1bdbc:	mov	w0, #0xffffffff            	// #-1
   1bdc0:	ldr	x19, [sp, #16]
   1bdc4:	ldp	x29, x30, [sp], #272
   1bdc8:	ret
   1bdcc:	stp	x29, x30, [sp, #-48]!
   1bdd0:	mov	x29, sp
   1bdd4:	stp	x19, x20, [sp, #16]
   1bdd8:	mov	x19, x0
   1bddc:	and	x20, x1, #0xfffffffffffff000
   1bde0:	str	x21, [sp, #32]
   1bde4:	adds	x20, x20, #0x1, lsl #12
   1bde8:	ldr	x21, [x0, #8]
   1bdec:	ccmp	x1, x20, #0x2, cc  // cc = lo, ul, last
   1bdf0:	ldr	x0, [x0]
   1bdf4:	sub	x21, x21, x0
   1bdf8:	b.ls	1be14 <mpfr_asprintf@@Base+0xdc>  // b.plast
   1bdfc:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   1be00:	adrp	x0, 55000 <mpfr_free_pool@@Base+0x3eec>
   1be04:	add	x2, x2, #0xcc0
   1be08:	add	x0, x0, #0xcd8
   1be0c:	mov	w1, #0x260                 	// #608
   1be10:	bl	cbd0 <mpfr_assert_fail@plt>
   1be14:	ldr	x1, [x19, #16]
   1be18:	mvn	x0, x20
   1be1c:	cmp	x1, x0
   1be20:	b.cc	1be3c <mpfr_asprintf@@Base+0x104>  // b.lo, b.ul, b.last
   1be24:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   1be28:	adrp	x0, 55000 <mpfr_free_pool@@Base+0x3eec>
   1be2c:	add	x2, x2, #0xce4
   1be30:	add	x0, x0, #0xcd8
   1be34:	mov	w1, #0x265                 	// #613
   1be38:	bl	cbd0 <mpfr_assert_fail@plt>
   1be3c:	ldr	x0, [x19]
   1be40:	ldr	x1, [x19, #16]
   1be44:	add	x2, x1, x20
   1be48:	bl	c250 <mpfr_reallocate_func@plt>
   1be4c:	str	x0, [x19]
   1be50:	ldr	x1, [x19, #16]
   1be54:	add	x0, x0, x21
   1be58:	ldr	x21, [sp, #32]
   1be5c:	add	x20, x1, x20
   1be60:	str	x0, [x19, #8]
   1be64:	str	x20, [x19, #16]
   1be68:	ldp	x19, x20, [sp, #16]
   1be6c:	ldp	x29, x30, [sp], #48
   1be70:	ret
   1be74:	stp	x29, x30, [sp, #-32]!
   1be78:	mov	x29, sp
   1be7c:	stp	x19, x20, [sp, #16]
   1be80:	mov	x19, x0
   1be84:	cbnz	x19, 1be94 <mpfr_asprintf@@Base+0x15c>
   1be88:	ldp	x19, x20, [sp, #16]
   1be8c:	ldp	x29, x30, [sp], #32
   1be90:	ret
   1be94:	ldr	x0, [x19]
   1be98:	cbz	x0, 1bea0 <mpfr_asprintf@@Base+0x168>
   1be9c:	bl	c920 <mpfr_free_str@plt>
   1bea0:	ldr	x20, [x19, #8]
   1bea4:	mov	x0, x19
   1bea8:	mov	x1, #0x10                  	// #16
   1beac:	bl	ccc0 <mpfr_free_func@plt>
   1beb0:	mov	x19, x20
   1beb4:	b	1be84 <mpfr_asprintf@@Base+0x14c>
   1beb8:	stp	x29, x30, [sp, #-32]!
   1bebc:	mov	x29, sp
   1bec0:	stp	x19, x20, [sp, #16]
   1bec4:	mov	x19, x1
   1bec8:	mov	x20, x0
   1becc:	ldr	x0, [x0, #8]
   1bed0:	cbnz	x0, 1bec8 <mpfr_asprintf@@Base+0x190>
   1bed4:	mov	x0, #0x10                  	// #16
   1bed8:	bl	cd90 <mpfr_allocate_func@plt>
   1bedc:	str	x0, [x20, #8]
   1bee0:	stp	x19, xzr, [x0]
   1bee4:	mov	x0, x19
   1bee8:	ldp	x19, x20, [sp, #16]
   1beec:	ldp	x29, x30, [sp], #32
   1bef0:	ret
   1bef4:	stp	x29, x30, [sp, #-80]!
   1bef8:	mov	x1, #0x40                  	// #64
   1befc:	mov	x29, sp
   1bf00:	stp	x19, x20, [sp, #16]
   1bf04:	mov	x20, x0
   1bf08:	add	x19, sp, #0x30
   1bf0c:	ldr	x0, [x0]
   1bf10:	stp	x21, x22, [sp, #32]
   1bf14:	cmp	x0, #0x40
   1bf18:	csel	x1, x0, x1, ge  // ge = tcont
   1bf1c:	mov	x0, x19
   1bf20:	bl	cb10 <mpfr_init2@plt>
   1bf24:	ldr	x0, [x20, #16]
   1bf28:	mov	w2, #0x1                   	// #1
   1bf2c:	mov	w1, #0xa                   	// #10
   1bf30:	bl	cc10 <mpfr_ceil_mul@plt>
   1bf34:	sub	x22, x0, #0x1
   1bf38:	mov	x1, x22
   1bf3c:	mov	w3, #0x2                   	// #2
   1bf40:	mov	x2, #0x0                   	// #0
   1bf44:	mov	x21, x0
   1bf48:	mov	x0, x19
   1bf4c:	bl	bb00 <mpfr_set_si_2exp@plt>
   1bf50:	mov	x2, x19
   1bf54:	mov	w3, #0x2                   	// #2
   1bf58:	mov	x1, #0xa                   	// #10
   1bf5c:	mov	x0, x19
   1bf60:	bl	caa0 <mpfr_ui_pow@plt>
   1bf64:	mov	x1, x19
   1bf68:	mov	x0, x20
   1bf6c:	bl	ca40 <mpfr_cmpabs@plt>
   1bf70:	tbz	w0, #31, 1bf78 <mpfr_asprintf@@Base+0x240>
   1bf74:	sub	x22, x21, #0x2
   1bf78:	mov	x0, x19
   1bf7c:	bl	c0f0 <mpfr_clear@plt>
   1bf80:	mov	x0, x22
   1bf84:	ldp	x19, x20, [sp, #16]
   1bf88:	ldp	x21, x22, [sp, #32]
   1bf8c:	ldp	x29, x30, [sp], #80
   1bf90:	ret
   1bf94:	ldr	x2, [x0]
   1bf98:	cmn	x2, #0x1
   1bf9c:	b.eq	1bfb4 <mpfr_asprintf@@Base+0x27c>  // b.none
   1bfa0:	adds	x2, x2, x1
   1bfa4:	ccmp	x2, #0x0, #0x1, cc  // cc = lo, ul, last
   1bfa8:	b.ge	1bfbc <mpfr_asprintf@@Base+0x284>  // b.tcont
   1bfac:	mov	x1, #0xffffffffffffffff    	// #-1
   1bfb0:	str	x1, [x0]
   1bfb4:	mov	w0, #0x1                   	// #1
   1bfb8:	b	1bfc4 <mpfr_asprintf@@Base+0x28c>
   1bfbc:	str	x2, [x0]
   1bfc0:	mov	w0, #0x0                   	// #0
   1bfc4:	ret
   1bfc8:	stp	x29, x30, [sp, #-80]!
   1bfcc:	mov	x29, sp
   1bfd0:	stp	x19, x20, [sp, #16]
   1bfd4:	mov	w20, w1
   1bfd8:	stp	x21, x22, [sp, #32]
   1bfdc:	mov	x21, x2
   1bfe0:	stp	x23, x24, [sp, #48]
   1bfe4:	mov	x24, x0
   1bfe8:	str	x25, [sp, #64]
   1bfec:	mov	x25, x3
   1bff0:	cbz	x4, 1c020 <mpfr_asprintf@@Base+0x2e8>
   1bff4:	ldp	x19, x20, [sp, #16]
   1bff8:	mov	x4, x3
   1bffc:	ldp	x21, x22, [sp, #32]
   1c000:	mov	x3, x2
   1c004:	ldp	x23, x24, [sp, #48]
   1c008:	mov	w2, w1
   1c00c:	ldr	x25, [sp, #64]
   1c010:	mov	x1, x0
   1c014:	ldp	x29, x30, [sp], #80
   1c018:	mov	x0, #0x0                   	// #0
   1c01c:	b	c590 <mpfr_get_str@plt>
   1c020:	and	w1, w1, #0xff
   1c024:	cmp	w20, #0xa
   1c028:	add	w22, w1, #0x2f
   1c02c:	mov	w23, w5
   1c030:	and	w0, w22, #0xff
   1c034:	add	w22, w1, #0x56
   1c038:	and	w22, w22, #0xff
   1c03c:	mov	x19, #0x8                   	// #8
   1c040:	csel	w22, w22, w0, gt
   1c044:	cmp	x21, x19
   1c048:	b.hi	1c0ac <mpfr_asprintf@@Base+0x374>  // b.pmore
   1c04c:	mov	w5, w23
   1c050:	mov	x19, x21
   1c054:	mov	x4, x25
   1c058:	mov	x3, x19
   1c05c:	mov	w2, w20
   1c060:	mov	x1, x24
   1c064:	mov	x0, #0x0                   	// #0
   1c068:	bl	c590 <mpfr_get_str@plt>
   1c06c:	cmp	x21, x19
   1c070:	b.eq	1c0bc <mpfr_asprintf@@Base+0x384>  // b.none
   1c074:	ldrb	w1, [x0]
   1c078:	cmp	w1, #0x2d
   1c07c:	cset	x1, eq  // eq = none
   1c080:	cinc	x2, x0, eq  // eq = none
   1c084:	ldrb	w3, [x2]
   1c088:	cmp	w3, w22
   1c08c:	b.eq	1c0b4 <mpfr_asprintf@@Base+0x37c>  // b.none
   1c090:	add	x1, x19, x1
   1c094:	add	x1, x0, x1
   1c098:	cmp	x2, x1
   1c09c:	b.cc	1c0bc <mpfr_asprintf@@Base+0x384>  // b.lo, b.ul, b.last
   1c0a0:	lsl	x19, x19, #1
   1c0a4:	bl	c920 <mpfr_free_str@plt>
   1c0a8:	b	1c044 <mpfr_asprintf@@Base+0x30c>
   1c0ac:	mov	w5, #0x1                   	// #1
   1c0b0:	b	1c054 <mpfr_asprintf@@Base+0x31c>
   1c0b4:	add	x2, x2, #0x1
   1c0b8:	b	1c084 <mpfr_asprintf@@Base+0x34c>
   1c0bc:	ldp	x19, x20, [sp, #16]
   1c0c0:	ldp	x21, x22, [sp, #32]
   1c0c4:	ldp	x23, x24, [sp, #48]
   1c0c8:	ldr	x25, [sp, #64]
   1c0cc:	ldp	x29, x30, [sp], #80
   1c0d0:	ret
   1c0d4:	stp	x29, x30, [sp, #-96]!
   1c0d8:	mov	x29, sp
   1c0dc:	stp	x19, x20, [sp, #16]
   1c0e0:	mov	x19, x0
   1c0e4:	ldrb	w0, [x2, #32]
   1c0e8:	stp	x21, x22, [sp, #32]
   1c0ec:	mov	x20, x2
   1c0f0:	and	w22, w0, #0xfffffffd
   1c0f4:	stp	x23, x24, [sp, #48]
   1c0f8:	and	w0, w0, #0xffffffdf
   1c0fc:	ldr	w21, [x2, #8]
   1c100:	stp	x25, x26, [sp, #64]
   1c104:	and	w22, w22, #0xff
   1c108:	mov	x26, x1
   1c10c:	and	w25, w0, #0xff
   1c110:	cmp	w0, #0x47
   1c114:	b.ne	1c1e4 <mpfr_asprintf@@Base+0x4ac>  // b.any
   1c118:	ldrb	w24, [x2]
   1c11c:	and	w24, w24, #0x1
   1c120:	ldr	w0, [x26, #8]
   1c124:	tbz	w0, #31, 1c1f0 <mpfr_asprintf@@Base+0x4b8>
   1c128:	mov	w0, #0x2d                  	// #45
   1c12c:	strb	w0, [x19, #16]
   1c130:	mov	x0, #0x1                   	// #1
   1c134:	str	x0, [x19, #56]
   1c138:	cbnz	x3, 1c214 <mpfr_asprintf@@Base+0x4dc>
   1c13c:	ldr	w5, [x20, #28]
   1c140:	cmp	w21, #0x0
   1c144:	ldr	x4, [x20, #16]
   1c148:	sxtw	x2, w21
   1c14c:	mov	w1, #0xa                   	// #10
   1c150:	mov	x3, x26
   1c154:	csinc	x2, xzr, x2, lt  // lt = tstop
   1c158:	add	x0, sp, #0x50
   1c15c:	bl	1bfc8 <mpfr_asprintf@@Base+0x290>
   1c160:	mov	x23, x0
   1c164:	mov	x1, x0
   1c168:	ldr	x0, [x19, #120]
   1c16c:	bl	1beb8 <mpfr_asprintf@@Base+0x180>
   1c170:	ldrsw	x0, [x26, #8]
   1c174:	add	x23, x23, x0, lsr #63
   1c178:	str	x23, [x19, #48]
   1c17c:	cbz	w21, 1c234 <mpfr_asprintf@@Base+0x4fc>
   1c180:	add	x26, x23, #0x1
   1c184:	mov	x0, x26
   1c188:	bl	bb30 <strlen@plt>
   1c18c:	cbz	w24, 1c224 <mpfr_asprintf@@Base+0x4ec>
   1c190:	mov	x1, #0x7fffffff            	// #2147483647
   1c194:	cmp	x0, x1
   1c198:	b.hi	1c318 <mpfr_asprintf@@Base+0x5e0>  // b.pmore
   1c19c:	cbz	x0, 1c234 <mpfr_asprintf@@Base+0x4fc>
   1c1a0:	stp	x26, x0, [x19, #80]
   1c1a4:	cmp	w25, #0x47
   1c1a8:	b.ne	1c1b4 <mpfr_asprintf@@Base+0x47c>  // b.any
   1c1ac:	ldrb	w1, [x20]
   1c1b0:	tbz	w1, #0, 1c1cc <mpfr_asprintf@@Base+0x494>
   1c1b4:	cmp	w21, #0x0
   1c1b8:	b.le	1c1cc <mpfr_asprintf@@Base+0x494>
   1c1bc:	cmp	w21, w0
   1c1c0:	b.le	1c1cc <mpfr_asprintf@@Base+0x494>
   1c1c4:	sub	w0, w21, w0
   1c1c8:	str	w0, [x19, #96]
   1c1cc:	bl	bf20 <localeconv@plt>
   1c1d0:	ldr	x0, [x0]
   1c1d4:	ldrb	w0, [x0, #1]
   1c1d8:	cbz	w0, 1c2f4 <mpfr_asprintf@@Base+0x5bc>
   1c1dc:	mov	w0, #0x2e                  	// #46
   1c1e0:	b	1c300 <mpfr_asprintf@@Base+0x5c8>
   1c1e4:	cmp	w21, #0x0
   1c1e8:	cset	w24, gt
   1c1ec:	b	1c120 <mpfr_asprintf@@Base+0x3e8>
   1c1f0:	ldrb	w0, [x20]
   1c1f4:	mov	w1, #0xa                   	// #10
   1c1f8:	tst	w0, w1
   1c1fc:	b.eq	1c130 <mpfr_asprintf@@Base+0x3f8>  // b.none
   1c200:	tst	x0, #0x8
   1c204:	mov	w1, #0x20                  	// #32
   1c208:	mov	w0, #0x2b                  	// #43
   1c20c:	csel	w0, w0, w1, ne  // ne = any
   1c210:	b	1c12c <mpfr_asprintf@@Base+0x3f4>
   1c214:	ldp	x0, x23, [x3]
   1c218:	str	x0, [sp, #80]
   1c21c:	b	1c170 <mpfr_asprintf@@Base+0x438>
   1c220:	sub	x0, x0, #0x1
   1c224:	ldrb	w1, [x23, x0]
   1c228:	cmp	w1, #0x30
   1c22c:	b.ne	1c190 <mpfr_asprintf@@Base+0x458>  // b.any
   1c230:	cbnz	x0, 1c220 <mpfr_asprintf@@Base+0x4e8>
   1c234:	ldr	x0, [x19, #88]
   1c238:	cbnz	x0, 1c1cc <mpfr_asprintf@@Base+0x494>
   1c23c:	ldrb	w0, [x20]
   1c240:	tbnz	w0, #0, 1c1cc <mpfr_asprintf@@Base+0x494>
   1c244:	ldr	x0, [sp, #80]
   1c248:	mov	x1, #0x3                   	// #3
   1c24c:	mov	x2, #0xa                   	// #10
   1c250:	str	x1, [x19, #112]
   1c254:	subs	x0, x0, #0x1
   1c258:	str	x0, [sp, #80]
   1c25c:	cneg	x0, x0, mi  // mi = first
   1c260:	cmp	x0, #0x9
   1c264:	ldr	x1, [x19, #112]
   1c268:	b.hi	1c308 <mpfr_asprintf@@Base+0x5d0>  // b.pmore
   1c26c:	cmp	x1, #0x3
   1c270:	b.hi	1c27c <mpfr_asprintf@@Base+0x544>  // b.pmore
   1c274:	mov	x0, #0x4                   	// #4
   1c278:	str	x0, [x19, #112]
   1c27c:	ldr	x0, [x19, #112]
   1c280:	add	x0, x0, #0x1
   1c284:	bl	cd90 <mpfr_allocate_func@plt>
   1c288:	mov	x1, x0
   1c28c:	mov	x20, x0
   1c290:	ldr	x0, [x19, #120]
   1c294:	bl	1beb8 <mpfr_asprintf@@Base+0x180>
   1c298:	str	x0, [x19, #104]
   1c29c:	cmp	w22, #0x45
   1c2a0:	add	x3, sp, #0x58
   1c2a4:	mov	w0, #0x65                  	// #101
   1c2a8:	adrp	x1, 55000 <mpfr_free_pool@@Base+0x3eec>
   1c2ac:	csel	w22, w22, w0, eq  // eq = none
   1c2b0:	add	x1, x1, #0xd00
   1c2b4:	mov	x0, x3
   1c2b8:	strb	w22, [sp, #88]
   1c2bc:	strb	wzr, [sp, #89]
   1c2c0:	bl	c180 <strcat@plt>
   1c2c4:	ldr	x2, [sp, #80]
   1c2c8:	mov	x1, x0
   1c2cc:	mov	x0, x20
   1c2d0:	bl	bd90 <sprintf@plt>
   1c2d4:	cmp	w0, #0x0
   1c2d8:	csetm	w0, lt  // lt = tstop
   1c2dc:	ldp	x19, x20, [sp, #16]
   1c2e0:	ldp	x21, x22, [sp, #32]
   1c2e4:	ldp	x23, x24, [sp, #48]
   1c2e8:	ldp	x25, x26, [sp, #64]
   1c2ec:	ldp	x29, x30, [sp], #96
   1c2f0:	ret
   1c2f4:	bl	bf20 <localeconv@plt>
   1c2f8:	ldr	x0, [x0]
   1c2fc:	ldrb	w0, [x0]
   1c300:	strb	w0, [x19, #68]
   1c304:	b	1c244 <mpfr_asprintf@@Base+0x50c>
   1c308:	udiv	x0, x0, x2
   1c30c:	add	x1, x1, #0x1
   1c310:	str	x1, [x19, #112]
   1c314:	b	1c260 <mpfr_asprintf@@Base+0x528>
   1c318:	mov	w0, #0xffffffff            	// #-1
   1c31c:	b	1c2dc <mpfr_asprintf@@Base+0x5a4>
   1c320:	stp	x29, x30, [sp, #-144]!
   1c324:	mov	x29, sp
   1c328:	stp	x25, x26, [sp, #64]
   1c32c:	ldrb	w25, [x2, #32]
   1c330:	stp	x19, x20, [sp, #16]
   1c334:	mov	x19, x0
   1c338:	and	w25, w25, #0xffffffdf
   1c33c:	stp	x21, x22, [sp, #32]
   1c340:	and	w25, w25, #0xff
   1c344:	ldr	w21, [x2, #8]
   1c348:	stp	x23, x24, [sp, #48]
   1c34c:	mov	x20, x1
   1c350:	mov	x22, x2
   1c354:	stp	x27, x28, [sp, #80]
   1c358:	mov	x23, x3
   1c35c:	ldr	w27, [x2, #28]
   1c360:	cmp	w25, #0x47
   1c364:	ldr	x28, [x2, #16]
   1c368:	b.ne	1c418 <mpfr_asprintf@@Base+0x6e0>  // b.any
   1c36c:	ldrb	w24, [x2]
   1c370:	and	w24, w24, #0x1
   1c374:	ldr	w0, [x20, #8]
   1c378:	tbz	w0, #31, 1c420 <mpfr_asprintf@@Base+0x6e8>
   1c37c:	mov	w0, #0x2d                  	// #45
   1c380:	strb	w0, [x19, #16]
   1c384:	ldr	x0, [x20, #16]
   1c388:	cmp	x0, #0x0
   1c38c:	b.gt	1c6bc <mpfr_asprintf@@Base+0x984>
   1c390:	mov	x26, #0x1                   	// #1
   1c394:	str	x26, [x19, #56]
   1c398:	mov	x0, #0x2                   	// #2
   1c39c:	bl	cd90 <mpfr_allocate_func@plt>
   1c3a0:	mov	x1, x0
   1c3a4:	mov	w0, #0x30                  	// #48
   1c3a8:	strh	w0, [x1]
   1c3ac:	ldr	x0, [x19, #120]
   1c3b0:	bl	1beb8 <mpfr_asprintf@@Base+0x180>
   1c3b4:	str	x0, [x19, #48]
   1c3b8:	cbnz	w21, 1c484 <mpfr_asprintf@@Base+0x74c>
   1c3bc:	ldr	x0, [x20]
   1c3c0:	str	x0, [sp, #112]
   1c3c4:	ldr	x0, [x20, #16]
   1c3c8:	str	x0, [sp, #128]
   1c3cc:	ldr	x0, [x20, #24]
   1c3d0:	str	w26, [sp, #120]
   1c3d4:	str	x0, [sp, #136]
   1c3d8:	cmp	w27, #0x4
   1c3dc:	b.ne	1c444 <mpfr_asprintf@@Base+0x70c>  // b.any
   1c3e0:	ldr	x0, [x19, #48]
   1c3e4:	mov	w1, #0x31                  	// #49
   1c3e8:	strb	w1, [x0]
   1c3ec:	ldrb	w0, [x22]
   1c3f0:	tbz	w0, #0, 1c7e4 <mpfr_asprintf@@Base+0xaac>
   1c3f4:	bl	bf20 <localeconv@plt>
   1c3f8:	ldr	x0, [x0]
   1c3fc:	ldrb	w0, [x0, #1]
   1c400:	cbnz	w0, 1c7dc <mpfr_asprintf@@Base+0xaa4>
   1c404:	bl	bf20 <localeconv@plt>
   1c408:	ldr	x0, [x0]
   1c40c:	ldrb	w0, [x0]
   1c410:	strb	w0, [x19, #68]
   1c414:	b	1c7fc <mpfr_asprintf@@Base+0xac4>
   1c418:	mov	w24, #0x1                   	// #1
   1c41c:	b	1c374 <mpfr_asprintf@@Base+0x63c>
   1c420:	ldrb	w0, [x22]
   1c424:	mov	w1, #0xa                   	// #10
   1c428:	tst	w0, w1
   1c42c:	b.eq	1c384 <mpfr_asprintf@@Base+0x64c>  // b.none
   1c430:	tst	x0, #0x8
   1c434:	mov	w1, #0x20                  	// #32
   1c438:	mov	w0, #0x2b                  	// #43
   1c43c:	csel	w0, w0, w1, ne  // ne = any
   1c440:	b	1c380 <mpfr_asprintf@@Base+0x648>
   1c444:	cmp	w27, #0x3
   1c448:	b.ne	1c458 <mpfr_asprintf@@Base+0x720>  // b.any
   1c44c:	ldr	w0, [x20, #8]
   1c450:	tbz	w0, #31, 1c3ec <mpfr_asprintf@@Base+0x6b4>
   1c454:	b	1c3e0 <mpfr_asprintf@@Base+0x6a8>
   1c458:	cmp	w27, #0x2
   1c45c:	b.ne	1c470 <mpfr_asprintf@@Base+0x738>  // b.any
   1c460:	ldr	w0, [x20, #8]
   1c464:	cmp	w0, #0x0
   1c468:	b.gt	1c3e0 <mpfr_asprintf@@Base+0x6a8>
   1c46c:	b	1c3ec <mpfr_asprintf@@Base+0x6b4>
   1c470:	cbnz	w27, 1c3ec <mpfr_asprintf@@Base+0x6b4>
   1c474:	fmov	d0, #5.000000000000000000e-01
   1c478:	add	x0, sp, #0x70
   1c47c:	bl	bd70 <mpfr_cmp_d@plt>
   1c480:	b	1c464 <mpfr_asprintf@@Base+0x72c>
   1c484:	mov	x0, x20
   1c488:	bl	1bef4 <mpfr_asprintf@@Base+0x1bc>
   1c48c:	neg	w1, w21
   1c490:	str	x0, [sp, #104]
   1c494:	sxtw	x26, w1
   1c498:	cmp	x0, w1, sxtw
   1c49c:	b.ge	1c5b8 <mpfr_asprintf@@Base+0x880>  // b.tcont
   1c4a0:	sub	w1, w27, #0x1
   1c4a4:	cmp	w1, #0x4
   1c4a8:	b.hi	1c514 <mpfr_asprintf@@Base+0x7dc>  // b.pmore
   1c4ac:	adrp	x0, 55000 <mpfr_free_pool@@Base+0x3eec>
   1c4b0:	add	x0, x0, #0xe34
   1c4b4:	ldrb	w0, [x0, w1, uxtw]
   1c4b8:	adr	x1, 1c4c4 <mpfr_asprintf@@Base+0x78c>
   1c4bc:	add	x0, x1, w0, sxtb #2
   1c4c0:	br	x0
   1c4c4:	ldr	w20, [x20, #8]
   1c4c8:	lsr	w20, w20, #31
   1c4cc:	cbz	w20, 1c61c <mpfr_asprintf@@Base+0x8e4>
   1c4d0:	mov	x0, #0x1                   	// #1
   1c4d4:	sub	w21, w21, #0x1
   1c4d8:	str	w21, [x19, #72]
   1c4dc:	str	x0, [x19, #88]
   1c4e0:	mov	x0, #0x2                   	// #2
   1c4e4:	bl	cd90 <mpfr_allocate_func@plt>
   1c4e8:	mov	x1, x0
   1c4ec:	mov	w0, #0x31                  	// #49
   1c4f0:	strh	w0, [x1]
   1c4f4:	ldr	x0, [x19, #120]
   1c4f8:	bl	1beb8 <mpfr_asprintf@@Base+0x180>
   1c4fc:	str	x0, [x19, #80]
   1c500:	b	1c3ec <mpfr_asprintf@@Base+0x6b4>
   1c504:	ldr	w0, [x20, #8]
   1c508:	cmp	w0, #0x0
   1c50c:	cset	w20, gt
   1c510:	b	1c4cc <mpfr_asprintf@@Base+0x794>
   1c514:	ldr	x24, [x20]
   1c518:	mov	x0, #0x38                  	// #56
   1c51c:	cmp	x24, #0x38
   1c520:	csel	x24, x24, x0, ge  // ge = tcont
   1c524:	cbz	w27, 1c540 <mpfr_asprintf@@Base+0x808>
   1c528:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   1c52c:	adrp	x0, 55000 <mpfr_free_pool@@Base+0x3eec>
   1c530:	add	x2, x2, #0xd07
   1c534:	add	x0, x0, #0xcd8
   1c538:	mov	w1, #0x58f                 	// #1423
   1c53c:	bl	cbd0 <mpfr_assert_fail@plt>
   1c540:	add	x23, sp, #0x70
   1c544:	add	x1, x24, #0x8
   1c548:	mov	x0, x23
   1c54c:	bl	cb10 <mpfr_init2@plt>
   1c550:	add	x24, x24, #0x8
   1c554:	mov	x0, x23
   1c558:	mov	x1, x24
   1c55c:	bl	bf50 <mpfr_set_prec@plt>
   1c560:	mov	w3, #0x0                   	// #0
   1c564:	mov	x1, x26
   1c568:	mov	x2, #0x0                   	// #0
   1c56c:	mov	x0, x23
   1c570:	bl	bb00 <mpfr_set_si_2exp@plt>
   1c574:	mov	x1, x23
   1c578:	mov	w2, #0x3                   	// #3
   1c57c:	mov	x0, x23
   1c580:	bl	be00 <mpfr_exp10@plt>
   1c584:	mov	w3, #0x0                   	// #0
   1c588:	mov	x2, #0x1                   	// #1
   1c58c:	mov	x1, x23
   1c590:	mov	x0, x23
   1c594:	bl	c980 <mpfr_div_2ui@plt>
   1c598:	mov	x1, x20
   1c59c:	mov	x0, x23
   1c5a0:	bl	ca40 <mpfr_cmpabs@plt>
   1c5a4:	cbz	w0, 1c550 <mpfr_asprintf@@Base+0x818>
   1c5a8:	lsr	w20, w0, #31
   1c5ac:	mov	x0, x23
   1c5b0:	bl	c0f0 <mpfr_clear@plt>
   1c5b4:	b	1c4cc <mpfr_asprintf@@Base+0x794>
   1c5b8:	cbnz	x23, 1c624 <mpfr_asprintf@@Base+0x8ec>
   1c5bc:	add	x0, x0, #0x1
   1c5c0:	mov	w1, #0xa                   	// #10
   1c5c4:	add	x2, x0, w21, sxtw
   1c5c8:	mov	w5, w27
   1c5cc:	mov	x4, x28
   1c5d0:	mov	x3, x20
   1c5d4:	add	x0, sp, #0x68
   1c5d8:	bl	1bfc8 <mpfr_asprintf@@Base+0x290>
   1c5dc:	mov	x23, x0
   1c5e0:	mov	x1, x0
   1c5e4:	ldr	x0, [x19, #120]
   1c5e8:	bl	1beb8 <mpfr_asprintf@@Base+0x180>
   1c5ec:	ldrsw	x0, [x20, #8]
   1c5f0:	ldr	x20, [sp, #104]
   1c5f4:	add	x23, x23, x0, lsr #63
   1c5f8:	cmp	x20, #0x1
   1c5fc:	b.ne	1c630 <mpfr_asprintf@@Base+0x8f8>  // b.any
   1c600:	ldr	x0, [x19, #48]
   1c604:	mov	w1, #0x31                  	// #49
   1c608:	cmp	w25, #0x47
   1c60c:	strb	w1, [x0]
   1c610:	b.ne	1c61c <mpfr_asprintf@@Base+0x8e4>  // b.any
   1c614:	ldrb	w0, [x22]
   1c618:	tbz	w0, #0, 1c7e4 <mpfr_asprintf@@Base+0xaac>
   1c61c:	str	w21, [x19, #72]
   1c620:	b	1c3ec <mpfr_asprintf@@Base+0x6b4>
   1c624:	ldp	x0, x23, [x23]
   1c628:	str	x0, [sp, #104]
   1c62c:	b	1c5ec <mpfr_asprintf@@Base+0x8b4>
   1c630:	neg	w26, w20
   1c634:	str	w26, [x19, #72]
   1c638:	str	x23, [x19, #80]
   1c63c:	mov	x0, x23
   1c640:	bl	bb30 <strlen@plt>
   1c644:	cbnz	w24, 1c658 <mpfr_asprintf@@Base+0x920>
   1c648:	sub	x23, x23, #0x1
   1c64c:	ldrb	w1, [x23, x0]
   1c650:	cmp	w1, #0x30
   1c654:	b.eq	1c684 <mpfr_asprintf@@Base+0x94c>  // b.none
   1c658:	mov	x1, #0x7fffffff            	// #2147483647
   1c65c:	cmp	x0, x1
   1c660:	b.ls	1c68c <mpfr_asprintf@@Base+0x954>  // b.plast
   1c664:	mov	w0, #0xffffffff            	// #-1
   1c668:	ldp	x19, x20, [sp, #16]
   1c66c:	ldp	x21, x22, [sp, #32]
   1c670:	ldp	x23, x24, [sp, #48]
   1c674:	ldp	x25, x26, [sp, #64]
   1c678:	ldp	x27, x28, [sp, #80]
   1c67c:	ldp	x29, x30, [sp], #144
   1c680:	ret
   1c684:	sub	x0, x0, #0x1
   1c688:	b	1c64c <mpfr_asprintf@@Base+0x914>
   1c68c:	str	x0, [x19, #88]
   1c690:	cmp	w25, #0x47
   1c694:	b.ne	1c6a0 <mpfr_asprintf@@Base+0x968>  // b.any
   1c698:	ldrb	w1, [x22]
   1c69c:	tbz	w1, #0, 1c7e4 <mpfr_asprintf@@Base+0xaac>
   1c6a0:	add	x26, x0, w26, sxtw
   1c6a4:	cmp	x26, w21, sxtw
   1c6a8:	b.cs	1c3ec <mpfr_asprintf@@Base+0x6b4>  // b.hs, b.nlast
   1c6ac:	add	w21, w21, w20
   1c6b0:	sub	w0, w21, w0
   1c6b4:	str	w0, [x19, #96]
   1c6b8:	b	1c3ec <mpfr_asprintf@@Base+0x6b4>
   1c6bc:	mov	x0, x20
   1c6c0:	bl	1bef4 <mpfr_asprintf@@Base+0x1bc>
   1c6c4:	str	x0, [sp, #104]
   1c6c8:	mov	x1, #0x7fffffff            	// #2147483647
   1c6cc:	cmp	x0, x1
   1c6d0:	b.gt	1c664 <mpfr_asprintf@@Base+0x92c>
   1c6d4:	cbnz	x23, 1c790 <mpfr_asprintf@@Base+0xa58>
   1c6d8:	add	x0, x0, w21, sxtw
   1c6dc:	mov	w1, #0xa                   	// #10
   1c6e0:	add	x2, x0, #0x1
   1c6e4:	mov	w5, w27
   1c6e8:	mov	x4, x28
   1c6ec:	mov	x3, x20
   1c6f0:	add	x0, sp, #0x68
   1c6f4:	bl	1bfc8 <mpfr_asprintf@@Base+0x290>
   1c6f8:	mov	x23, x0
   1c6fc:	mov	x1, x0
   1c700:	ldr	x0, [x19, #120]
   1c704:	bl	1beb8 <mpfr_asprintf@@Base+0x180>
   1c708:	ldrsw	x0, [x20, #8]
   1c70c:	add	x23, x23, x0, lsr #63
   1c710:	str	x23, [x19, #48]
   1c714:	mov	x0, x23
   1c718:	bl	bb30 <strlen@plt>
   1c71c:	mov	x25, x0
   1c720:	ldr	x0, [sp, #104]
   1c724:	cmp	x0, x25
   1c728:	b.ls	1c79c <mpfr_asprintf@@Base+0xa64>  // b.plast
   1c72c:	sub	w0, w0, w25
   1c730:	str	x25, [x19, #56]
   1c734:	str	w0, [x19, #64]
   1c738:	ldrb	w22, [x22]
   1c73c:	tbz	w22, #4, 1c758 <mpfr_asprintf@@Base+0xa20>
   1c740:	bl	bf20 <localeconv@plt>
   1c744:	ldr	x0, [x0, #8]
   1c748:	ldrb	w0, [x0]
   1c74c:	cbnz	w0, 1c7a4 <mpfr_asprintf@@Base+0xa6c>
   1c750:	mov	w0, #0x0                   	// #0
   1c754:	strb	w0, [x19, #40]
   1c758:	ldr	x2, [x19, #56]
   1c75c:	add	x23, x23, x2
   1c760:	sub	x20, x25, x2
   1c764:	cbnz	w24, 1c804 <mpfr_asprintf@@Base+0xacc>
   1c768:	sub	x0, x20, #0x1
   1c76c:	sub	x3, x2, x25
   1c770:	add	x2, x3, x0
   1c774:	add	x2, x23, x2
   1c778:	ldrb	w0, [x2, x20]
   1c77c:	cmp	w0, #0x30
   1c780:	b.ne	1c874 <mpfr_asprintf@@Base+0xb3c>  // b.any
   1c784:	cbnz	x20, 1c7c4 <mpfr_asprintf@@Base+0xa8c>
   1c788:	tbz	w22, #0, 1c7fc <mpfr_asprintf@@Base+0xac4>
   1c78c:	b	1c3f4 <mpfr_asprintf@@Base+0x6bc>
   1c790:	ldp	x0, x23, [x23]
   1c794:	str	x0, [sp, #104]
   1c798:	b	1c708 <mpfr_asprintf@@Base+0x9d0>
   1c79c:	str	x0, [x19, #56]
   1c7a0:	b	1c738 <mpfr_asprintf@@Base+0xa00>
   1c7a4:	bl	bf20 <localeconv@plt>
   1c7a8:	ldr	x0, [x0, #8]
   1c7ac:	ldrb	w0, [x0, #1]
   1c7b0:	cbnz	w0, 1c750 <mpfr_asprintf@@Base+0xa18>
   1c7b4:	bl	bf20 <localeconv@plt>
   1c7b8:	ldr	x0, [x0, #8]
   1c7bc:	ldrb	w0, [x0]
   1c7c0:	b	1c754 <mpfr_asprintf@@Base+0xa1c>
   1c7c4:	sub	x20, x20, #0x1
   1c7c8:	b	1c778 <mpfr_asprintf@@Base+0xa40>
   1c7cc:	mov	w0, #0x2e                  	// #46
   1c7d0:	b	1c830 <mpfr_asprintf@@Base+0xaf8>
   1c7d4:	mov	w0, #0x2e                  	// #46
   1c7d8:	b	1c860 <mpfr_asprintf@@Base+0xb28>
   1c7dc:	mov	w0, #0x2e                  	// #46
   1c7e0:	b	1c410 <mpfr_asprintf@@Base+0x6d8>
   1c7e4:	ldr	w0, [x19, #72]
   1c7e8:	cbnz	w0, 1c3f4 <mpfr_asprintf@@Base+0x6bc>
   1c7ec:	ldr	x0, [x19, #88]
   1c7f0:	cbnz	x0, 1c3f4 <mpfr_asprintf@@Base+0x6bc>
   1c7f4:	ldr	w0, [x19, #96]
   1c7f8:	cbnz	w0, 1c3f4 <mpfr_asprintf@@Base+0x6bc>
   1c7fc:	mov	w0, #0x0                   	// #0
   1c800:	b	1c668 <mpfr_asprintf@@Base+0x930>
   1c804:	cbz	x20, 1c83c <mpfr_asprintf@@Base+0xb04>
   1c808:	mov	x0, #0x7fffffff            	// #2147483647
   1c80c:	cmp	x20, x0
   1c810:	b.hi	1c664 <mpfr_asprintf@@Base+0x92c>  // b.pmore
   1c814:	bl	bf20 <localeconv@plt>
   1c818:	ldr	x0, [x0]
   1c81c:	ldrb	w0, [x0, #1]
   1c820:	cbnz	w0, 1c7cc <mpfr_asprintf@@Base+0xa94>
   1c824:	bl	bf20 <localeconv@plt>
   1c828:	ldr	x0, [x0]
   1c82c:	ldrb	w0, [x0]
   1c830:	strb	w0, [x19, #68]
   1c834:	stp	x23, x20, [x19, #80]
   1c838:	cbz	w24, 1c788 <mpfr_asprintf@@Base+0xa50>
   1c83c:	cmp	x20, w21, sxtw
   1c840:	b.cs	1c788 <mpfr_asprintf@@Base+0xa50>  // b.hs, b.nlast
   1c844:	bl	bf20 <localeconv@plt>
   1c848:	ldr	x0, [x0]
   1c84c:	ldrb	w0, [x0, #1]
   1c850:	cbnz	w0, 1c7d4 <mpfr_asprintf@@Base+0xa9c>
   1c854:	bl	bf20 <localeconv@plt>
   1c858:	ldr	x0, [x0]
   1c85c:	ldrb	w0, [x0]
   1c860:	strb	w0, [x19, #68]
   1c864:	ldr	x0, [x19, #88]
   1c868:	sub	w21, w21, w0
   1c86c:	str	w21, [x19, #96]
   1c870:	b	1c788 <mpfr_asprintf@@Base+0xa50>
   1c874:	cbnz	x20, 1c808 <mpfr_asprintf@@Base+0xad0>
   1c878:	b	1c788 <mpfr_asprintf@@Base+0xa50>
   1c87c:	stp	x29, x30, [sp, #-48]!
   1c880:	mov	x29, sp
   1c884:	stp	x19, x20, [sp, #16]
   1c888:	mov	x19, x0
   1c88c:	mov	x20, x2
   1c890:	add	x0, x0, #0x18
   1c894:	stp	x21, x22, [sp, #32]
   1c898:	and	w22, w1, #0xff
   1c89c:	mov	x1, x2
   1c8a0:	bl	1bf94 <mpfr_asprintf@@Base+0x25c>
   1c8a4:	cbnz	w0, 1c940 <mpfr_asprintf@@Base+0xc08>
   1c8a8:	mov	w21, w0
   1c8ac:	ldr	x0, [x19, #16]
   1c8b0:	cbz	x0, 1c91c <mpfr_asprintf@@Base+0xbe4>
   1c8b4:	mvn	x1, x20
   1c8b8:	cmp	x0, x1
   1c8bc:	b.cc	1c8d8 <mpfr_asprintf@@Base+0xba0>  // b.lo, b.ul, b.last
   1c8c0:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   1c8c4:	adrp	x0, 55000 <mpfr_free_pool@@Base+0x3eec>
   1c8c8:	add	x2, x2, #0xce4
   1c8cc:	add	x0, x0, #0xcd8
   1c8d0:	mov	w1, #0x29a                 	// #666
   1c8d4:	bl	cbd0 <mpfr_assert_fail@plt>
   1c8d8:	ldp	x0, x1, [x19]
   1c8dc:	ldr	x2, [x19, #16]
   1c8e0:	add	x1, x1, x20
   1c8e4:	add	x0, x0, x2
   1c8e8:	cmp	x1, x0
   1c8ec:	b.cc	1c8fc <mpfr_asprintf@@Base+0xbc4>  // b.lo, b.ul, b.last
   1c8f0:	mov	x1, x20
   1c8f4:	mov	x0, x19
   1c8f8:	bl	1bdcc <mpfr_asprintf@@Base+0x94>
   1c8fc:	cmp	x20, #0x1
   1c900:	ldr	x0, [x19, #8]
   1c904:	b.ne	1c930 <mpfr_asprintf@@Base+0xbf8>  // b.any
   1c908:	strb	w22, [x0]
   1c90c:	ldr	x0, [x19, #8]
   1c910:	add	x1, x0, x20
   1c914:	str	x1, [x19, #8]
   1c918:	strb	wzr, [x0, x20]
   1c91c:	mov	w0, w21
   1c920:	ldp	x19, x20, [sp, #16]
   1c924:	ldp	x21, x22, [sp, #32]
   1c928:	ldp	x29, x30, [sp], #48
   1c92c:	ret
   1c930:	mov	x2, x20
   1c934:	mov	w1, w22
   1c938:	bl	c1a0 <memset@plt>
   1c93c:	b	1c90c <mpfr_asprintf@@Base+0xbd4>
   1c940:	mov	w21, #0x1                   	// #1
   1c944:	b	1c91c <mpfr_asprintf@@Base+0xbe4>
   1c948:	stp	x29, x30, [sp, #-48]!
   1c94c:	mov	x29, sp
   1c950:	stp	x19, x20, [sp, #16]
   1c954:	mov	x19, x0
   1c958:	mov	x20, x2
   1c95c:	add	x0, x0, #0x18
   1c960:	stp	x21, x22, [sp, #32]
   1c964:	mov	x22, x1
   1c968:	mov	x1, x2
   1c96c:	bl	1bf94 <mpfr_asprintf@@Base+0x25c>
   1c970:	cbnz	w0, 1c9f8 <mpfr_asprintf@@Base+0xcc0>
   1c974:	mov	w21, w0
   1c978:	ldr	x0, [x19, #16]
   1c97c:	cbz	x0, 1c9e4 <mpfr_asprintf@@Base+0xcac>
   1c980:	mvn	x1, x20
   1c984:	cmp	x0, x1
   1c988:	b.cc	1c9a4 <mpfr_asprintf@@Base+0xc6c>  // b.lo, b.ul, b.last
   1c98c:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   1c990:	adrp	x0, 55000 <mpfr_free_pool@@Base+0x3eec>
   1c994:	add	x2, x2, #0xd22
   1c998:	add	x0, x0, #0xcd8
   1c99c:	mov	w1, #0x27e                 	// #638
   1c9a0:	bl	cbd0 <mpfr_assert_fail@plt>
   1c9a4:	ldp	x0, x1, [x19]
   1c9a8:	ldr	x2, [x19, #16]
   1c9ac:	add	x1, x1, x20
   1c9b0:	add	x0, x0, x2
   1c9b4:	cmp	x1, x0
   1c9b8:	b.cc	1c9c8 <mpfr_asprintf@@Base+0xc90>  // b.lo, b.ul, b.last
   1c9bc:	mov	x1, x20
   1c9c0:	mov	x0, x19
   1c9c4:	bl	1bdcc <mpfr_asprintf@@Base+0x94>
   1c9c8:	ldr	x0, [x19, #8]
   1c9cc:	mov	x2, x20
   1c9d0:	mov	x1, x22
   1c9d4:	bl	c9d0 <strncat@plt>
   1c9d8:	ldr	x2, [x19, #8]
   1c9dc:	add	x20, x2, x20
   1c9e0:	str	x20, [x19, #8]
   1c9e4:	mov	w0, w21
   1c9e8:	ldp	x19, x20, [sp, #16]
   1c9ec:	ldp	x21, x22, [sp, #32]
   1c9f0:	ldp	x29, x30, [sp], #48
   1c9f4:	ret
   1c9f8:	mov	w21, #0x1                   	// #1
   1c9fc:	b	1c9e4 <mpfr_asprintf@@Base+0xcac>

000000000001ca00 <mpfr_vasnprintf_aux@@Base>:
   1ca00:	sub	sp, sp, #0x280
   1ca04:	stp	x29, x30, [sp, #16]
   1ca08:	add	x29, sp, #0x10
   1ca0c:	str	x0, [x29, #208]
   1ca10:	ldr	x0, [x4, #8]
   1ca14:	str	x0, [x29, #224]
   1ca18:	ldr	x0, [x4, #16]
   1ca1c:	str	x0, [x29, #128]
   1ca20:	ldr	w0, [x4, #28]
   1ca24:	str	x1, [x29, #168]
   1ca28:	str	w0, [x29, #232]
   1ca2c:	stp	x19, x20, [sp, #32]
   1ca30:	mov	x20, x2
   1ca34:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1ca38:	ldr	x1, [x0, #2592]
   1ca3c:	add	x0, x0, #0xa20
   1ca40:	blr	x1
   1ca44:	mrs	x1, tpidr_el0
   1ca48:	mov	x19, x3
   1ca4c:	stp	x21, x22, [sp, #48]
   1ca50:	mov	x22, x4
   1ca54:	ldr	w0, [x1, x0]
   1ca58:	str	w0, [x29, #188]
   1ca5c:	stp	x23, x24, [sp, #64]
   1ca60:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1ca64:	ldr	x2, [x0, #2528]
   1ca68:	add	x0, x0, #0x9e0
   1ca6c:	blr	x2
   1ca70:	add	x2, x1, x0
   1ca74:	ldr	x0, [x1, x0]
   1ca78:	str	x0, [x29, #120]
   1ca7c:	stp	x25, x26, [sp, #80]
   1ca80:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1ca84:	ldr	x3, [x0, #2560]
   1ca88:	add	x0, x0, #0xa00
   1ca8c:	blr	x3
   1ca90:	stp	x27, x28, [sp, #96]
   1ca94:	ldr	w27, [x4, #24]
   1ca98:	ldr	x3, [x1, x0]
   1ca9c:	str	x3, [x29, #112]
   1caa0:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   1caa4:	str	x3, [x2]
   1caa8:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   1caac:	str	x2, [x1, x0]
   1cab0:	ldr	x0, [x29, #208]
   1cab4:	ldr	x26, [x4]
   1cab8:	orr	x0, x0, x20
   1cabc:	str	x0, [x29, #144]
   1cac0:	cbz	x0, 1cb28 <mpfr_vasnprintf_aux@@Base+0x128>
   1cac4:	mov	x0, #0x1000                	// #4096
   1cac8:	bl	cd90 <mpfr_allocate_func@plt>
   1cacc:	str	x0, [x29, #352]
   1cad0:	strb	wzr, [x0]
   1cad4:	ldr	x0, [x29, #352]
   1cad8:	str	x0, [x29, #360]
   1cadc:	mov	x0, #0x1000                	// #4096
   1cae0:	stp	x0, xzr, [x29, #368]
   1cae4:	add	x23, x29, #0x160
   1cae8:	mov	x4, x19
   1caec:	ldp	x0, x1, [x22]
   1caf0:	stp	x0, x1, [x29, #384]
   1caf4:	ldp	x0, x1, [x22, #16]
   1caf8:	stp	x0, x1, [x29, #400]
   1cafc:	ldr	x0, [x29, #208]
   1cb00:	add	x1, x23, #0x18
   1cb04:	str	x1, [x29, #104]
   1cb08:	cmp	x0, #0x0
   1cb0c:	csinc	x0, x20, xzr, eq  // eq = none
   1cb10:	str	x0, [x29, #192]
   1cb14:	mov	w0, #0x0                   	// #0
   1cb18:	ldrb	w1, [x19]
   1cb1c:	cbz	w1, 1cf88 <mpfr_vasnprintf_aux@@Base+0x588>
   1cb20:	mov	x3, x19
   1cb24:	b	1cb34 <mpfr_vasnprintf_aux@@Base+0x134>
   1cb28:	mov	x0, #0x0                   	// #0
   1cb2c:	b	1cae0 <mpfr_vasnprintf_aux@@Base+0xe0>
   1cb30:	add	x3, x3, #0x1
   1cb34:	ldrb	w1, [x3]
   1cb38:	cmp	w1, #0x0
   1cb3c:	cset	w2, ne  // ne = any
   1cb40:	cmp	w1, #0x25
   1cb44:	csel	w2, w2, wzr, ne  // ne = any
   1cb48:	str	w2, [x29, #200]
   1cb4c:	cbnz	w2, 1cb30 <mpfr_vasnprintf_aux@@Base+0x130>
   1cb50:	cbz	w1, 1e654 <mpfr_vasnprintf_aux@@Base+0x1c54>
   1cb54:	ldrb	w1, [x3, #1]
   1cb58:	cmp	w1, #0x25
   1cb5c:	b.eq	1cb98 <mpfr_vasnprintf_aux@@Base+0x198>  // b.none
   1cb60:	adrp	x5, 55000 <mpfr_free_pool@@Base+0x3eec>
   1cb64:	add	x1, x3, #0x1
   1cb68:	add	x5, x5, #0xe3c
   1cb6c:	mov	w2, #0x20                  	// #32
   1cb70:	stp	wzr, wzr, [x29, #152]
   1cb74:	stp	wzr, wzr, [x29, #160]
   1cb78:	str	w2, [x29, #184]
   1cb7c:	ldrb	w2, [x1]
   1cb80:	mov	x19, x1
   1cb84:	cbnz	w2, 1cba4 <mpfr_vasnprintf_aux@@Base+0x1a4>
   1cb88:	mov	w1, #0x0                   	// #0
   1cb8c:	mov	w6, #0x7fffffff            	// #2147483647
   1cb90:	mov	w7, #0xa                   	// #10
   1cb94:	b	1cc48 <mpfr_vasnprintf_aux@@Base+0x248>
   1cb98:	add	x19, x3, #0x2
   1cb9c:	mov	w0, #0x1                   	// #1
   1cba0:	b	1cb18 <mpfr_vasnprintf_aux@@Base+0x118>
   1cba4:	sub	w6, w2, #0x20
   1cba8:	cmp	w6, #0x10
   1cbac:	b.hi	1cb88 <mpfr_vasnprintf_aux@@Base+0x188>  // b.pmore
   1cbb0:	ldrb	w6, [x5, w6, uxtw]
   1cbb4:	adr	x7, 1cbc0 <mpfr_vasnprintf_aux@@Base+0x1c0>
   1cbb8:	add	x6, x7, w6, sxtb #2
   1cbbc:	br	x6
   1cbc0:	str	w2, [x29, #184]
   1cbc4:	add	x1, x1, #0x1
   1cbc8:	b	1cb7c <mpfr_vasnprintf_aux@@Base+0x17c>
   1cbcc:	mov	w2, #0x1                   	// #1
   1cbd0:	str	w2, [x29, #156]
   1cbd4:	b	1cbc4 <mpfr_vasnprintf_aux@@Base+0x1c4>
   1cbd8:	mov	w2, #0x1                   	// #1
   1cbdc:	str	w2, [x29, #164]
   1cbe0:	b	1cbc4 <mpfr_vasnprintf_aux@@Base+0x1c4>
   1cbe4:	mov	w2, #0x1                   	// #1
   1cbe8:	str	w2, [x29, #200]
   1cbec:	b	1cbc4 <mpfr_vasnprintf_aux@@Base+0x1c4>
   1cbf0:	mov	w2, #0x1                   	// #1
   1cbf4:	str	w2, [x29, #152]
   1cbf8:	b	1cbc4 <mpfr_vasnprintf_aux@@Base+0x1c4>
   1cbfc:	mov	w2, #0x1                   	// #1
   1cc00:	str	w2, [x29, #160]
   1cc04:	b	1cbc4 <mpfr_vasnprintf_aux@@Base+0x1c4>
   1cc08:	cmp	w2, #0x2a
   1cc0c:	b.eq	1cc54 <mpfr_vasnprintf_aux@@Base+0x254>  // b.none
   1cc10:	sub	w2, w2, #0x30
   1cc14:	and	w5, w2, #0xff
   1cc18:	cmp	w5, #0x9
   1cc1c:	b.hi	1cc70 <mpfr_vasnprintf_aux@@Base+0x270>  // b.pmore
   1cc20:	mul	w5, w1, w7
   1cc24:	mov	w8, #0xcccc                	// #52428
   1cc28:	movk	w8, #0xccc, lsl #16
   1cc2c:	cmp	w1, w8
   1cc30:	csel	w1, w5, w6, le
   1cc34:	sub	w5, w6, w2
   1cc38:	cmp	w5, w1
   1cc3c:	add	w2, w1, w2
   1cc40:	csel	w1, w2, w6, ge  // ge = tcont
   1cc44:	add	x19, x19, #0x1
   1cc48:	ldrb	w2, [x19]
   1cc4c:	cbnz	w2, 1cc08 <mpfr_vasnprintf_aux@@Base+0x208>
   1cc50:	b	1cc70 <mpfr_vasnprintf_aux@@Base+0x270>
   1cc54:	tbnz	w27, #31, 1cce0 <mpfr_vasnprintf_aux@@Base+0x2e0>
   1cc58:	add	x2, x26, #0xb
   1cc5c:	mov	x1, x26
   1cc60:	and	x26, x2, #0xfffffffffffffff8
   1cc64:	ldr	w1, [x1]
   1cc68:	add	x19, x19, #0x1
   1cc6c:	tbnz	w1, #31, 1cd10 <mpfr_vasnprintf_aux@@Base+0x310>
   1cc70:	str	w1, [x29, #216]
   1cc74:	ldrb	w1, [x19]
   1cc78:	cmp	w1, #0x2e
   1cc7c:	b.ne	1cdd0 <mpfr_vasnprintf_aux@@Base+0x3d0>  // b.any
   1cc80:	add	x19, x19, #0x1
   1cc84:	mov	w21, #0x0                   	// #0
   1cc88:	mov	x6, x19
   1cc8c:	mov	w5, #0x7fffffff            	// #2147483647
   1cc90:	mov	w7, #0xa                   	// #10
   1cc94:	ldrb	w1, [x19]
   1cc98:	cbz	w1, 1cd68 <mpfr_vasnprintf_aux@@Base+0x368>
   1cc9c:	cmp	w1, #0x2a
   1cca0:	b.eq	1cd48 <mpfr_vasnprintf_aux@@Base+0x348>  // b.none
   1cca4:	sub	w1, w1, #0x30
   1cca8:	and	w2, w1, #0xff
   1ccac:	cmp	w2, #0x9
   1ccb0:	b.hi	1cd68 <mpfr_vasnprintf_aux@@Base+0x368>  // b.pmore
   1ccb4:	mul	w2, w21, w7
   1ccb8:	mov	w8, #0xcccc                	// #52428
   1ccbc:	movk	w8, #0xccc, lsl #16
   1ccc0:	cmp	w21, w8
   1ccc4:	csel	w2, w2, w5, le
   1ccc8:	sub	w8, w5, w1
   1cccc:	cmp	w8, w2
   1ccd0:	add	w1, w2, w1
   1ccd4:	csel	w21, w1, w5, ge  // ge = tcont
   1ccd8:	add	x19, x19, #0x1
   1ccdc:	b	1cc94 <mpfr_vasnprintf_aux@@Base+0x294>
   1cce0:	add	w2, w27, #0x8
   1cce4:	cmp	w2, #0x0
   1cce8:	b.le	1cd00 <mpfr_vasnprintf_aux@@Base+0x300>
   1ccec:	add	x5, x26, #0xb
   1ccf0:	mov	x1, x26
   1ccf4:	mov	w27, w2
   1ccf8:	and	x26, x5, #0xfffffffffffffff8
   1ccfc:	b	1cc64 <mpfr_vasnprintf_aux@@Base+0x264>
   1cd00:	ldr	x1, [x29, #224]
   1cd04:	add	x1, x1, w27, sxtw
   1cd08:	mov	w27, w2
   1cd0c:	b	1cc64 <mpfr_vasnprintf_aux@@Base+0x264>
   1cd10:	neg	w2, w1
   1cd14:	str	w2, [x29, #216]
   1cd18:	mov	w2, #0x80000001            	// #-2147483647
   1cd1c:	cmp	w1, w2
   1cd20:	b.ne	1cd3c <mpfr_vasnprintf_aux@@Base+0x33c>  // b.any
   1cd24:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   1cd28:	adrp	x0, 55000 <mpfr_free_pool@@Base+0x3eec>
   1cd2c:	add	x2, x2, #0xd72
   1cd30:	add	x0, x0, #0xcd8
   1cd34:	mov	w1, #0x815                 	// #2069
   1cd38:	bl	cbd0 <mpfr_assert_fail@plt>
   1cd3c:	mov	w1, #0x1                   	// #1
   1cd40:	str	w1, [x29, #200]
   1cd44:	b	1cc74 <mpfr_vasnprintf_aux@@Base+0x274>
   1cd48:	tbnz	w27, #31, 1cda8 <mpfr_vasnprintf_aux@@Base+0x3a8>
   1cd4c:	add	x1, x26, #0xb
   1cd50:	mov	w2, w27
   1cd54:	and	x1, x1, #0xfffffffffffffff8
   1cd58:	ldr	w21, [x26]
   1cd5c:	add	x19, x19, #0x1
   1cd60:	mov	w27, w2
   1cd64:	mov	x26, x1
   1cd68:	cmp	x19, x6
   1cd6c:	csinv	w21, w21, wzr, ne  // ne = any
   1cd70:	ldrb	w1, [x19]
   1cd74:	cmp	w1, #0x5a
   1cd78:	b.hi	1cdd8 <mpfr_vasnprintf_aux@@Base+0x3d8>  // b.pmore
   1cd7c:	cmp	w1, #0x45
   1cd80:	b.ls	1cdf4 <mpfr_vasnprintf_aux@@Base+0x3f4>  // b.plast
   1cd84:	sub	w1, w1, #0x46
   1cd88:	cmp	w1, #0x14
   1cd8c:	b.hi	1cdf4 <mpfr_vasnprintf_aux@@Base+0x3f4>  // b.pmore
   1cd90:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   1cd94:	add	x2, x2, #0xe50
   1cd98:	ldrb	w1, [x2, w1, uxtw]
   1cd9c:	adr	x2, 1cda8 <mpfr_vasnprintf_aux@@Base+0x3a8>
   1cda0:	add	x1, x2, w1, sxtb #2
   1cda4:	br	x1
   1cda8:	add	w2, w27, #0x8
   1cdac:	cmp	w2, #0x0
   1cdb0:	b.le	1cdc0 <mpfr_vasnprintf_aux@@Base+0x3c0>
   1cdb4:	add	x1, x26, #0xb
   1cdb8:	and	x1, x1, #0xfffffffffffffff8
   1cdbc:	b	1cd58 <mpfr_vasnprintf_aux@@Base+0x358>
   1cdc0:	ldr	x5, [x29, #224]
   1cdc4:	mov	x1, x26
   1cdc8:	add	x26, x5, w27, sxtw
   1cdcc:	b	1cd58 <mpfr_vasnprintf_aux@@Base+0x358>
   1cdd0:	mov	w21, #0xffffffff            	// #-1
   1cdd4:	b	1cd70 <mpfr_vasnprintf_aux@@Base+0x370>
   1cdd8:	cmp	w1, #0x6c
   1cddc:	b.eq	1ce40 <mpfr_vasnprintf_aux@@Base+0x440>  // b.none
   1cde0:	b.hi	1cdfc <mpfr_vasnprintf_aux@@Base+0x3fc>  // b.pmore
   1cde4:	cmp	w1, #0x68
   1cde8:	b.eq	1ce18 <mpfr_vasnprintf_aux@@Base+0x418>  // b.none
   1cdec:	cmp	w1, #0x6a
   1cdf0:	b.eq	1ce64 <mpfr_vasnprintf_aux@@Base+0x464>  // b.none
   1cdf4:	mov	w24, #0x0                   	// #0
   1cdf8:	b	1ce2c <mpfr_vasnprintf_aux@@Base+0x42c>
   1cdfc:	cmp	w1, #0x74
   1ce00:	b.eq	1ce70 <mpfr_vasnprintf_aux@@Base+0x470>  // b.none
   1ce04:	cmp	w1, #0x7a
   1ce08:	b.ne	1cdf4 <mpfr_vasnprintf_aux@@Base+0x3f4>  // b.any
   1ce0c:	add	x19, x19, #0x1
   1ce10:	mov	w24, #0x6                   	// #6
   1ce14:	b	1ce2c <mpfr_vasnprintf_aux@@Base+0x42c>
   1ce18:	ldrb	w1, [x19, #1]
   1ce1c:	cmp	w1, #0x68
   1ce20:	b.eq	1ce34 <mpfr_vasnprintf_aux@@Base+0x434>  // b.none
   1ce24:	add	x19, x19, #0x1
   1ce28:	mov	w24, #0x2                   	// #2
   1ce2c:	mov	w28, #0x0                   	// #0
   1ce30:	b	1cf4c <mpfr_vasnprintf_aux@@Base+0x54c>
   1ce34:	add	x19, x19, #0x2
   1ce38:	mov	w24, #0x1                   	// #1
   1ce3c:	b	1ce2c <mpfr_vasnprintf_aux@@Base+0x42c>
   1ce40:	ldrb	w1, [x19, #1]
   1ce44:	cmp	w1, #0x6c
   1ce48:	b.eq	1ce58 <mpfr_vasnprintf_aux@@Base+0x458>  // b.none
   1ce4c:	add	x19, x19, #0x1
   1ce50:	mov	w24, #0x3                   	// #3
   1ce54:	b	1ce2c <mpfr_vasnprintf_aux@@Base+0x42c>
   1ce58:	add	x19, x19, #0x2
   1ce5c:	mov	w24, #0x4                   	// #4
   1ce60:	b	1ce2c <mpfr_vasnprintf_aux@@Base+0x42c>
   1ce64:	add	x19, x19, #0x1
   1ce68:	mov	w24, #0x5                   	// #5
   1ce6c:	b	1ce2c <mpfr_vasnprintf_aux@@Base+0x42c>
   1ce70:	add	x19, x19, #0x1
   1ce74:	mov	w24, #0x7                   	// #7
   1ce78:	b	1ce2c <mpfr_vasnprintf_aux@@Base+0x42c>
   1ce7c:	add	x19, x19, #0x1
   1ce80:	mov	w24, #0x8                   	// #8
   1ce84:	b	1ce2c <mpfr_vasnprintf_aux@@Base+0x42c>
   1ce88:	add	x19, x19, #0x1
   1ce8c:	mov	w24, #0x9                   	// #9
   1ce90:	b	1ce2c <mpfr_vasnprintf_aux@@Base+0x42c>
   1ce94:	add	x19, x19, #0x1
   1ce98:	mov	w24, #0xa                   	// #10
   1ce9c:	b	1ce2c <mpfr_vasnprintf_aux@@Base+0x42c>
   1cea0:	add	x19, x19, #0x1
   1cea4:	mov	w24, #0xb                   	// #11
   1cea8:	b	1ce2c <mpfr_vasnprintf_aux@@Base+0x42c>
   1ceac:	add	x19, x19, #0x1
   1ceb0:	mov	w24, #0xc                   	// #12
   1ceb4:	b	1ce2c <mpfr_vasnprintf_aux@@Base+0x42c>
   1ceb8:	add	x19, x19, #0x1
   1cebc:	mov	w24, #0xd                   	// #13
   1cec0:	b	1ce2c <mpfr_vasnprintf_aux@@Base+0x42c>
   1cec4:	add	x19, x19, #0x1
   1cec8:	mov	w24, #0xe                   	// #14
   1cecc:	b	1ce2c <mpfr_vasnprintf_aux@@Base+0x42c>
   1ced0:	ldrb	w1, [x19, #1]
   1ced4:	add	x2, x19, #0x1
   1ced8:	cmp	w1, #0x55
   1cedc:	b.eq	1d0e8 <mpfr_vasnprintf_aux@@Base+0x6e8>  // b.none
   1cee0:	b.hi	1cf08 <mpfr_vasnprintf_aux@@Base+0x508>  // b.pmore
   1cee4:	cmp	w1, #0x44
   1cee8:	b.eq	1d0d8 <mpfr_vasnprintf_aux@@Base+0x6d8>  // b.none
   1ceec:	cmp	w1, #0x4e
   1cef0:	b.eq	1d108 <mpfr_vasnprintf_aux@@Base+0x708>  // b.none
   1cef4:	cmp	w1, #0x2a
   1cef8:	b.eq	1cf28 <mpfr_vasnprintf_aux@@Base+0x528>  // b.none
   1cefc:	mov	x19, x2
   1cf00:	mov	w24, #0xf                   	// #15
   1cf04:	b	1ce2c <mpfr_vasnprintf_aux@@Base+0x42c>
   1cf08:	cmp	w1, #0x59
   1cf0c:	b.eq	1d0f8 <mpfr_vasnprintf_aux@@Base+0x6f8>  // b.none
   1cf10:	cmp	w1, #0x5a
   1cf14:	b.ne	1cefc <mpfr_vasnprintf_aux@@Base+0x4fc>  // b.any
   1cf18:	add	x19, x19, #0x2
   1cf1c:	mov	w24, #0xf                   	// #15
   1cf20:	mov	w28, #0x1                   	// #1
   1cf24:	b	1cf4c <mpfr_vasnprintf_aux@@Base+0x54c>
   1cf28:	add	x19, x19, #0x2
   1cf2c:	tbnz	w27, #31, 1d0b0 <mpfr_vasnprintf_aux@@Base+0x6b0>
   1cf30:	add	x1, x26, #0xb
   1cf34:	mov	w2, w27
   1cf38:	and	x1, x1, #0xfffffffffffffff8
   1cf3c:	ldr	w28, [x26]
   1cf40:	mov	w27, w2
   1cf44:	mov	x26, x1
   1cf48:	mov	w24, #0xf                   	// #15
   1cf4c:	ldrb	w20, [x19]
   1cf50:	cmp	w20, #0x78
   1cf54:	b.hi	1cb18 <mpfr_vasnprintf_aux@@Base+0x118>  // b.pmore
   1cf58:	cmp	w20, #0x57
   1cf5c:	b.hi	1d110 <mpfr_vasnprintf_aux@@Base+0x710>  // b.pmore
   1cf60:	cmp	w20, #0x41
   1cf64:	b.eq	1cf78 <mpfr_vasnprintf_aux@@Base+0x578>  // b.none
   1cf68:	sub	w1, w20, #0x45
   1cf6c:	and	w1, w1, #0xff
   1cf70:	cmp	w1, #0x2
   1cf74:	b.hi	1cb18 <mpfr_vasnprintf_aux@@Base+0x118>  // b.pmore
   1cf78:	mov	x1, #0x8301                	// #33537
   1cf7c:	lsr	x1, x1, x24
   1cf80:	tbz	w1, #0, 1cb18 <mpfr_vasnprintf_aux@@Base+0x118>
   1cf84:	cbnz	w20, 1d158 <mpfr_vasnprintf_aux@@Base+0x758>
   1cf88:	cmp	x19, x4
   1cf8c:	b.eq	1d018 <mpfr_vasnprintf_aux@@Base+0x618>  // b.none
   1cf90:	sub	x19, x19, x4
   1cf94:	cbz	w0, 1e674 <mpfr_vasnprintf_aux@@Base+0x1c74>
   1cf98:	str	xzr, [x29, #456]
   1cf9c:	add	x1, x19, #0x1
   1cfa0:	cmp	x1, #0x4, lsl #12
   1cfa4:	b.hi	1e65c <mpfr_vasnprintf_aux@@Base+0x1c5c>  // b.pmore
   1cfa8:	add	x0, x19, #0x10
   1cfac:	and	x0, x0, #0xfffffffffffffff0
   1cfb0:	sub	sp, sp, x0
   1cfb4:	add	x5, sp, #0x10
   1cfb8:	mov	x2, x19
   1cfbc:	mov	x1, x4
   1cfc0:	mov	x0, x5
   1cfc4:	bl	cb60 <strncpy@plt>
   1cfc8:	strb	wzr, [x0, x19]
   1cfcc:	mov	x5, x0
   1cfd0:	add	x2, x29, #0x120
   1cfd4:	ldp	x0, x1, [x29, #384]
   1cfd8:	stp	x0, x1, [x29, #288]
   1cfdc:	ldp	x0, x1, [x29, #400]
   1cfe0:	stp	x0, x1, [x29, #304]
   1cfe4:	mov	x1, x5
   1cfe8:	add	x0, x29, #0x1f0
   1cfec:	bl	c0d0 <__gmp_vasprintf@plt>
   1cff0:	tbnz	w0, #31, 1d1dc <mpfr_vasnprintf_aux@@Base+0x7dc>
   1cff4:	ldr	x1, [x29, #496]
   1cff8:	sxtw	x2, w0
   1cffc:	add	x0, x29, #0x160
   1d000:	bl	1c948 <mpfr_asprintf@@Base+0xc10>
   1d004:	ldr	x0, [x29, #496]
   1d008:	bl	c920 <mpfr_free_str@plt>
   1d00c:	ldr	x0, [x29, #456]
   1d010:	cbz	x0, 1d018 <mpfr_vasnprintf_aux@@Base+0x618>
   1d014:	bl	c4a0 <mpfr_tmp_free@plt>
   1d018:	ldr	x0, [x29, #376]
   1d01c:	mov	x1, #0x7fffffff            	// #2147483647
   1d020:	cmp	x0, x1
   1d024:	ccmn	x0, #0x1, #0x4, le
   1d028:	b.ne	1e688 <mpfr_vasnprintf_aux@@Base+0x1c88>  // b.any
   1d02c:	ldr	w0, [x29, #188]
   1d030:	orr	w0, w0, #0x10
   1d034:	str	w0, [x29, #188]
   1d038:	bl	cc90 <__errno_location@plt>
   1d03c:	mov	w1, #0x4b                  	// #75
   1d040:	str	w1, [x0]
   1d044:	ldr	w2, [x29, #188]
   1d048:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1d04c:	ldr	x1, [x0, #2592]
   1d050:	add	x0, x0, #0xa20
   1d054:	blr	x1
   1d058:	mrs	x1, tpidr_el0
   1d05c:	str	w2, [x1, x0]
   1d060:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1d064:	ldr	x2, [x0, #2528]
   1d068:	add	x0, x0, #0x9e0
   1d06c:	blr	x2
   1d070:	ldr	x2, [x29, #120]
   1d074:	str	x2, [x1, x0]
   1d078:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1d07c:	ldr	x2, [x0, #2560]
   1d080:	add	x0, x0, #0xa00
   1d084:	blr	x2
   1d088:	ldr	x2, [x29, #112]
   1d08c:	str	x2, [x1, x0]
   1d090:	ldr	x0, [x29, #208]
   1d094:	cbz	x0, 1e770 <mpfr_vasnprintf_aux@@Base+0x1d70>
   1d098:	str	xzr, [x0]
   1d09c:	ldr	x0, [x29, #352]
   1d0a0:	mov	w19, #0xffffffff            	// #-1
   1d0a4:	ldr	x1, [x29, #368]
   1d0a8:	bl	ccc0 <mpfr_free_func@plt>
   1d0ac:	b	1e6fc <mpfr_vasnprintf_aux@@Base+0x1cfc>
   1d0b0:	add	w2, w27, #0x8
   1d0b4:	cmp	w2, #0x0
   1d0b8:	b.le	1d0c8 <mpfr_vasnprintf_aux@@Base+0x6c8>
   1d0bc:	add	x1, x26, #0xb
   1d0c0:	and	x1, x1, #0xfffffffffffffff8
   1d0c4:	b	1cf3c <mpfr_vasnprintf_aux@@Base+0x53c>
   1d0c8:	ldr	x5, [x29, #224]
   1d0cc:	mov	x1, x26
   1d0d0:	add	x26, x5, w27, sxtw
   1d0d4:	b	1cf3c <mpfr_vasnprintf_aux@@Base+0x53c>
   1d0d8:	add	x19, x19, #0x2
   1d0dc:	mov	w24, #0xf                   	// #15
   1d0e0:	mov	w28, #0x3                   	// #3
   1d0e4:	b	1cf4c <mpfr_vasnprintf_aux@@Base+0x54c>
   1d0e8:	add	x19, x19, #0x2
   1d0ec:	mov	w24, #0xf                   	// #15
   1d0f0:	mov	w28, #0x2                   	// #2
   1d0f4:	b	1cf4c <mpfr_vasnprintf_aux@@Base+0x54c>
   1d0f8:	add	x19, x19, #0x2
   1d0fc:	mov	w24, #0xf                   	// #15
   1d100:	mov	w28, #0x4                   	// #4
   1d104:	b	1cf4c <mpfr_vasnprintf_aux@@Base+0x54c>
   1d108:	add	x19, x19, #0x2
   1d10c:	b	1cf00 <mpfr_vasnprintf_aux@@Base+0x500>
   1d110:	sub	w2, w20, #0x58
   1d114:	cmp	w2, #0x20
   1d118:	b.hi	1cb18 <mpfr_vasnprintf_aux@@Base+0x118>  // b.pmore
   1d11c:	adrp	x1, 55000 <mpfr_free_pool@@Base+0x3eec>
   1d120:	add	x1, x1, #0xe68
   1d124:	ldrh	w1, [x1, w2, uxtw #1]
   1d128:	adr	x2, 1d134 <mpfr_vasnprintf_aux@@Base+0x734>
   1d12c:	add	x1, x2, w1, sxth #2
   1d130:	br	x1
   1d134:	cmp	w24, #0xf
   1d138:	cset	w1, eq  // eq = none
   1d13c:	cbnz	w1, 1d158 <mpfr_vasnprintf_aux@@Base+0x758>
   1d140:	b	1cb18 <mpfr_vasnprintf_aux@@Base+0x118>
   1d144:	cmp	w24, #0x7
   1d148:	b.ls	1d158 <mpfr_vasnprintf_aux@@Base+0x758>  // b.plast
   1d14c:	sub	w1, w24, #0xa
   1d150:	cmp	w1, #0x4
   1d154:	b.hi	1cb18 <mpfr_vasnprintf_aux@@Base+0x118>  // b.pmore
   1d158:	add	x19, x19, #0x1
   1d15c:	cmp	w20, #0x6e
   1d160:	b.ne	1d3e4 <mpfr_vasnprintf_aux@@Base+0x9e4>  // b.any
   1d164:	tbnz	w27, #31, 1d210 <mpfr_vasnprintf_aux@@Base+0x810>
   1d168:	add	x20, x26, #0xf
   1d16c:	mov	w21, w27
   1d170:	and	x20, x20, #0xfffffffffffffff8
   1d174:	ldr	x25, [x26]
   1d178:	sub	x26, x3, x4
   1d17c:	cbz	w0, 1d298 <mpfr_vasnprintf_aux@@Base+0x898>
   1d180:	str	xzr, [x29, #456]
   1d184:	add	x1, x26, #0x1
   1d188:	cmp	x1, #0x4, lsl #12
   1d18c:	b.hi	1d238 <mpfr_vasnprintf_aux@@Base+0x838>  // b.pmore
   1d190:	add	x0, x26, #0x10
   1d194:	and	x0, x0, #0xfffffffffffffff0
   1d198:	sub	sp, sp, x0
   1d19c:	add	x3, sp, #0x10
   1d1a0:	mov	x2, x26
   1d1a4:	mov	x1, x4
   1d1a8:	mov	x0, x3
   1d1ac:	bl	cb60 <strncpy@plt>
   1d1b0:	strb	wzr, [x0, x26]
   1d1b4:	mov	x3, x0
   1d1b8:	add	x2, x29, #0x120
   1d1bc:	ldp	x0, x1, [x29, #384]
   1d1c0:	stp	x0, x1, [x29, #288]
   1d1c4:	ldp	x0, x1, [x29, #400]
   1d1c8:	stp	x0, x1, [x29, #304]
   1d1cc:	mov	x1, x3
   1d1d0:	add	x0, x29, #0x1f0
   1d1d4:	bl	c0d0 <__gmp_vasprintf@plt>
   1d1d8:	tbz	w0, #31, 1d250 <mpfr_vasnprintf_aux@@Base+0x850>
   1d1dc:	ldr	x0, [x29, #456]
   1d1e0:	cbz	x0, 1d1e8 <mpfr_vasnprintf_aux@@Base+0x7e8>
   1d1e4:	bl	c4a0 <mpfr_tmp_free@plt>
   1d1e8:	ldr	x0, [x29, #376]
   1d1ec:	cmn	x0, #0x1
   1d1f0:	b.ne	1d044 <mpfr_vasnprintf_aux@@Base+0x644>  // b.any
   1d1f4:	b	1d02c <mpfr_vasnprintf_aux@@Base+0x62c>
   1d1f8:	cmp	w24, #0x0
   1d1fc:	ccmp	w24, #0x3, #0x4, ne  // ne = any
   1d200:	b.eq	1d158 <mpfr_vasnprintf_aux@@Base+0x758>  // b.none
   1d204:	b	1cb18 <mpfr_vasnprintf_aux@@Base+0x118>
   1d208:	cmp	w24, #0x0
   1d20c:	b	1d138 <mpfr_vasnprintf_aux@@Base+0x738>
   1d210:	add	w21, w27, #0x8
   1d214:	cmp	w21, #0x0
   1d218:	b.le	1d228 <mpfr_vasnprintf_aux@@Base+0x828>
   1d21c:	add	x20, x26, #0xf
   1d220:	and	x20, x20, #0xfffffffffffffff8
   1d224:	b	1d174 <mpfr_vasnprintf_aux@@Base+0x774>
   1d228:	ldr	x1, [x29, #224]
   1d22c:	mov	x20, x26
   1d230:	add	x26, x1, w27, sxtw
   1d234:	b	1d174 <mpfr_vasnprintf_aux@@Base+0x774>
   1d238:	add	x0, x29, #0x1c8
   1d23c:	str	x4, [x29, #216]
   1d240:	bl	be40 <mpfr_tmp_allocate@plt>
   1d244:	mov	x3, x0
   1d248:	ldr	x4, [x29, #216]
   1d24c:	b	1d1a0 <mpfr_vasnprintf_aux@@Base+0x7a0>
   1d250:	ldr	x1, [x29, #496]
   1d254:	sxtw	x2, w0
   1d258:	mov	x0, x23
   1d25c:	bl	1c948 <mpfr_asprintf@@Base+0xc10>
   1d260:	ldr	x0, [x29, #496]
   1d264:	bl	c920 <mpfr_free_str@plt>
   1d268:	ldr	x0, [x29, #456]
   1d26c:	cbz	x0, 1d274 <mpfr_vasnprintf_aux@@Base+0x874>
   1d270:	bl	c4a0 <mpfr_tmp_free@plt>
   1d274:	sub	w24, w24, #0x1
   1d278:	cmp	w24, #0xe
   1d27c:	b.hi	1d3d8 <mpfr_vasnprintf_aux@@Base+0x9d8>  // b.pmore
   1d280:	adrp	x0, 55000 <mpfr_free_pool@@Base+0x3eec>
   1d284:	add	x0, x0, #0xeac
   1d288:	ldrb	w0, [x0, w24, uxtw]
   1d28c:	adr	x1, 1d298 <mpfr_vasnprintf_aux@@Base+0x898>
   1d290:	add	x0, x1, w0, sxtb #2
   1d294:	br	x0
   1d298:	cmp	x3, x4
   1d29c:	b.eq	1d274 <mpfr_vasnprintf_aux@@Base+0x874>  // b.none
   1d2a0:	mov	x2, x26
   1d2a4:	mov	x1, x4
   1d2a8:	mov	x0, x23
   1d2ac:	bl	1c948 <mpfr_asprintf@@Base+0xc10>
   1d2b0:	b	1d274 <mpfr_vasnprintf_aux@@Base+0x874>
   1d2b4:	ldr	x0, [x29, #376]
   1d2b8:	strb	w0, [x25]
   1d2bc:	ldr	x0, [x29, #224]
   1d2c0:	stp	x20, x0, [x22]
   1d2c4:	mov	w27, w21
   1d2c8:	ldr	x0, [x29, #128]
   1d2cc:	str	x0, [x22, #16]
   1d2d0:	ldr	w0, [x29, #232]
   1d2d4:	mov	x26, x20
   1d2d8:	str	w21, [x22, #24]
   1d2dc:	str	w0, [x22, #28]
   1d2e0:	ldp	x0, x1, [x22]
   1d2e4:	stp	x0, x1, [x29, #384]
   1d2e8:	ldp	x0, x1, [x22, #16]
   1d2ec:	stp	x0, x1, [x29, #400]
   1d2f0:	mov	x4, x19
   1d2f4:	mov	w0, #0x0                   	// #0
   1d2f8:	b	1cb18 <mpfr_vasnprintf_aux@@Base+0x118>
   1d2fc:	ldr	x0, [x29, #376]
   1d300:	strh	w0, [x25]
   1d304:	b	1d2bc <mpfr_vasnprintf_aux@@Base+0x8bc>
   1d308:	ldr	x1, [x29, #376]
   1d30c:	mov	x0, x25
   1d310:	bl	c210 <__gmpf_set_ui@plt>
   1d314:	b	1d2bc <mpfr_vasnprintf_aux@@Base+0x8bc>
   1d318:	ldr	x1, [x29, #376]
   1d31c:	mov	x0, x25
   1d320:	mov	x2, #0x1                   	// #1
   1d324:	bl	c5f0 <__gmpq_set_ui@plt>
   1d328:	b	1d2bc <mpfr_vasnprintf_aux@@Base+0x8bc>
   1d32c:	ldr	x0, [x29, #376]
   1d330:	str	x0, [x25]
   1d334:	b	1d2bc <mpfr_vasnprintf_aux@@Base+0x8bc>
   1d338:	tbnz	w21, #31, 1d378 <mpfr_vasnprintf_aux@@Base+0x978>
   1d33c:	add	x1, x20, #0xf
   1d340:	mov	x0, x20
   1d344:	and	x20, x1, #0xfffffffffffffff8
   1d348:	ldr	x1, [x0]
   1d34c:	cmp	x1, #0x0
   1d350:	b.ge	1d3a8 <mpfr_vasnprintf_aux@@Base+0x9a8>  // b.tcont
   1d354:	neg	x1, x1
   1d358:	ldr	x0, [x29, #376]
   1d35c:	str	x0, [x25]
   1d360:	mov	x0, #0x0                   	// #0
   1d364:	add	x0, x0, #0x1
   1d368:	cmp	x1, x0
   1d36c:	b.eq	1d2bc <mpfr_vasnprintf_aux@@Base+0x8bc>  // b.none
   1d370:	str	xzr, [x25, x0, lsl #3]
   1d374:	b	1d364 <mpfr_vasnprintf_aux@@Base+0x964>
   1d378:	add	w1, w21, #0x8
   1d37c:	cmp	w1, #0x0
   1d380:	b.le	1d398 <mpfr_vasnprintf_aux@@Base+0x998>
   1d384:	add	x2, x20, #0xf
   1d388:	mov	x0, x20
   1d38c:	mov	w21, w1
   1d390:	and	x20, x2, #0xfffffffffffffff8
   1d394:	b	1d348 <mpfr_vasnprintf_aux@@Base+0x948>
   1d398:	ldr	x0, [x29, #224]
   1d39c:	add	x0, x0, w21, sxtw
   1d3a0:	mov	w21, w1
   1d3a4:	b	1d348 <mpfr_vasnprintf_aux@@Base+0x948>
   1d3a8:	b.eq	1d2bc <mpfr_vasnprintf_aux@@Base+0x8bc>  // b.none
   1d3ac:	b	1d358 <mpfr_vasnprintf_aux@@Base+0x958>
   1d3b0:	ldr	x1, [x29, #376]
   1d3b4:	mov	x0, x25
   1d3b8:	bl	bd30 <__gmpz_set_ui@plt>
   1d3bc:	b	1d2bc <mpfr_vasnprintf_aux@@Base+0x8bc>
   1d3c0:	ldr	x1, [x29, #376]
   1d3c4:	mov	w3, w28
   1d3c8:	mov	x0, x25
   1d3cc:	mov	x2, #0x0                   	// #0
   1d3d0:	bl	c680 <mpfr_set_ui_2exp@plt>
   1d3d4:	b	1d2bc <mpfr_vasnprintf_aux@@Base+0x8bc>
   1d3d8:	ldr	x0, [x29, #376]
   1d3dc:	str	w0, [x25]
   1d3e0:	b	1d2bc <mpfr_vasnprintf_aux@@Base+0x8bc>
   1d3e4:	cmp	w24, #0xe
   1d3e8:	b.ne	1d604 <mpfr_vasnprintf_aux@@Base+0xc04>  // b.any
   1d3ec:	tbnz	w27, #31, 1d5a8 <mpfr_vasnprintf_aux@@Base+0xba8>
   1d3f0:	add	x24, x26, #0xf
   1d3f4:	mov	w25, w27
   1d3f8:	and	x24, x24, #0xfffffffffffffff8
   1d3fc:	sub	x28, x3, x4
   1d400:	ldr	x27, [x26]
   1d404:	add	x26, x29, #0x180
   1d408:	cbz	w0, 1d5e8 <mpfr_vasnprintf_aux@@Base+0xbe8>
   1d40c:	str	xzr, [x29, #456]
   1d410:	add	x1, x28, #0x1
   1d414:	cmp	x1, #0x4, lsl #12
   1d418:	b.hi	1d5d0 <mpfr_vasnprintf_aux@@Base+0xbd0>  // b.pmore
   1d41c:	add	x0, x28, #0x10
   1d420:	and	x0, x0, #0xfffffffffffffff0
   1d424:	sub	sp, sp, x0
   1d428:	add	x3, sp, #0x10
   1d42c:	mov	x2, x28
   1d430:	mov	x1, x4
   1d434:	mov	x0, x3
   1d438:	bl	cb60 <strncpy@plt>
   1d43c:	strb	wzr, [x0, x28]
   1d440:	mov	x3, x0
   1d444:	add	x2, x29, #0x120
   1d448:	ldp	x0, x1, [x26]
   1d44c:	stp	x0, x1, [x29, #288]
   1d450:	ldp	x0, x1, [x26, #16]
   1d454:	stp	x0, x1, [x29, #304]
   1d458:	mov	x1, x3
   1d45c:	add	x0, x29, #0x1f0
   1d460:	bl	c0d0 <__gmp_vasprintf@plt>
   1d464:	tbnz	w0, #31, 1d1dc <mpfr_vasnprintf_aux@@Base+0x7dc>
   1d468:	ldr	x1, [x29, #496]
   1d46c:	sxtw	x2, w0
   1d470:	mov	x0, x23
   1d474:	bl	1c948 <mpfr_asprintf@@Base+0xc10>
   1d478:	ldr	x0, [x29, #496]
   1d47c:	bl	c920 <mpfr_free_str@plt>
   1d480:	ldr	x0, [x29, #456]
   1d484:	cbz	x0, 1d48c <mpfr_vasnprintf_aux@@Base+0xa8c>
   1d488:	bl	c4a0 <mpfr_tmp_free@plt>
   1d48c:	ldr	x0, [x29, #224]
   1d490:	stp	x24, x0, [x22]
   1d494:	adrp	x8, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   1d498:	ldr	x0, [x29, #128]
   1d49c:	str	x0, [x22, #16]
   1d4a0:	ldr	w0, [x29, #232]
   1d4a4:	add	x8, x8, #0xd57
   1d4a8:	str	w25, [x22, #24]
   1d4ac:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   1d4b0:	str	w0, [x22, #28]
   1d4b4:	add	x2, x2, #0x943
   1d4b8:	ldp	x0, x1, [x22]
   1d4bc:	stp	x0, x1, [x26]
   1d4c0:	adrp	x3, 55000 <mpfr_free_pool@@Base+0x3eec>
   1d4c4:	ldp	x0, x1, [x22, #16]
   1d4c8:	stp	x0, x1, [x26, #16]
   1d4cc:	ldr	w0, [x29, #184]
   1d4d0:	ldr	w1, [x29, #160]
   1d4d4:	add	x3, x3, #0xd40
   1d4d8:	cmp	w0, #0x30
   1d4dc:	ldrb	w0, [x29, #416]
   1d4e0:	csel	x2, x2, x8, eq  // eq = none
   1d4e4:	adrp	x4, 55000 <mpfr_free_pool@@Base+0x3eec>
   1d4e8:	add	x4, x4, #0xd42
   1d4ec:	adrp	x5, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   1d4f0:	bfxil	w0, w1, #0, #1
   1d4f4:	ldr	w1, [x29, #164]
   1d4f8:	add	x5, x5, #0xd3b
   1d4fc:	adrp	x6, 55000 <mpfr_free_pool@@Base+0x3eec>
   1d500:	add	x6, x6, #0xd44
   1d504:	str	w20, [sp]
   1d508:	bfi	w0, w1, #1, #1
   1d50c:	ldr	w1, [x29, #200]
   1d510:	adrp	x7, 55000 <mpfr_free_pool@@Base+0x3eec>
   1d514:	add	x7, x7, #0xd46
   1d518:	mov	x26, x24
   1d51c:	bfi	w0, w1, #2, #1
   1d520:	ldr	w1, [x29, #156]
   1d524:	bfi	w0, w1, #3, #1
   1d528:	ldr	w1, [x29, #152]
   1d52c:	bfi	w0, w1, #4, #1
   1d530:	strb	w0, [x29, #416]
   1d534:	adrp	x1, 55000 <mpfr_free_pool@@Base+0x3eec>
   1d538:	add	x1, x1, #0xd8a
   1d53c:	tst	x0, #0x1
   1d540:	csel	x3, x3, x8, ne  // ne = any
   1d544:	tst	x0, #0x8
   1d548:	csel	x4, x4, x8, ne  // ne = any
   1d54c:	tst	x0, #0x2
   1d550:	csel	x5, x5, x8, ne  // ne = any
   1d554:	tst	x0, #0x4
   1d558:	csel	x6, x6, x8, ne  // ne = any
   1d55c:	tst	x0, #0x10
   1d560:	add	x0, x29, #0x1f0
   1d564:	csel	x7, x7, x8, ne  // ne = any
   1d568:	mov	x20, x0
   1d56c:	bl	bd90 <sprintf@plt>
   1d570:	ldr	w2, [x29, #216]
   1d574:	mov	x4, x27
   1d578:	mov	w3, w21
   1d57c:	mov	x1, x20
   1d580:	add	x0, x29, #0x1c8
   1d584:	mov	w27, w25
   1d588:	bl	c140 <__gmp_asprintf@plt>
   1d58c:	sxtw	x2, w0
   1d590:	ldr	x1, [x29, #456]
   1d594:	mov	x0, x23
   1d598:	bl	1c948 <mpfr_asprintf@@Base+0xc10>
   1d59c:	ldr	x0, [x29, #456]
   1d5a0:	bl	c920 <mpfr_free_str@plt>
   1d5a4:	b	1d2f0 <mpfr_vasnprintf_aux@@Base+0x8f0>
   1d5a8:	add	w25, w27, #0x8
   1d5ac:	cmp	w25, #0x0
   1d5b0:	b.le	1d5c0 <mpfr_vasnprintf_aux@@Base+0xbc0>
   1d5b4:	add	x24, x26, #0xf
   1d5b8:	and	x24, x24, #0xfffffffffffffff8
   1d5bc:	b	1d3fc <mpfr_vasnprintf_aux@@Base+0x9fc>
   1d5c0:	ldr	x1, [x29, #224]
   1d5c4:	mov	x24, x26
   1d5c8:	add	x26, x1, w27, sxtw
   1d5cc:	b	1d3fc <mpfr_vasnprintf_aux@@Base+0x9fc>
   1d5d0:	add	x0, x29, #0x1c8
   1d5d4:	str	x4, [x29, #176]
   1d5d8:	bl	be40 <mpfr_tmp_allocate@plt>
   1d5dc:	mov	x3, x0
   1d5e0:	ldr	x4, [x29, #176]
   1d5e4:	b	1d42c <mpfr_vasnprintf_aux@@Base+0xa2c>
   1d5e8:	cmp	x3, x4
   1d5ec:	b.eq	1d48c <mpfr_vasnprintf_aux@@Base+0xa8c>  // b.none
   1d5f0:	mov	x2, x28
   1d5f4:	mov	x1, x4
   1d5f8:	mov	x0, x23
   1d5fc:	bl	1c948 <mpfr_asprintf@@Base+0xc10>
   1d600:	b	1d48c <mpfr_vasnprintf_aux@@Base+0xa8c>
   1d604:	cmp	w24, #0xf
   1d608:	b.ne	1e4e8 <mpfr_vasnprintf_aux@@Base+0x1ae8>  // b.any
   1d60c:	sub	w1, w20, #0x41
   1d610:	and	w2, w1, #0xff
   1d614:	cmp	w2, #0x26
   1d618:	b.hi	1cb18 <mpfr_vasnprintf_aux@@Base+0x118>  // b.pmore
   1d61c:	mov	x1, #0x71                  	// #113
   1d620:	movk	x1, #0x73, lsl #32
   1d624:	lsr	x1, x1, x2
   1d628:	mvn	x1, x1
   1d62c:	and	w2, w1, #0x1
   1d630:	str	w2, [x29, #136]
   1d634:	tbnz	w1, #0, 1cb18 <mpfr_vasnprintf_aux@@Base+0x118>
   1d638:	tbnz	w27, #31, 1d85c <mpfr_vasnprintf_aux@@Base+0xe5c>
   1d63c:	add	x25, x26, #0xf
   1d640:	str	w27, [x29, #140]
   1d644:	and	x1, x25, #0xfffffffffffffff8
   1d648:	str	x1, [x29, #176]
   1d64c:	sub	x24, x3, x4
   1d650:	ldr	x25, [x26]
   1d654:	cbz	w0, 1d8a4 <mpfr_vasnprintf_aux@@Base+0xea4>
   1d658:	str	xzr, [x29, #456]
   1d65c:	add	x1, x24, #0x1
   1d660:	cmp	x1, #0x4, lsl #12
   1d664:	b.hi	1d88c <mpfr_vasnprintf_aux@@Base+0xe8c>  // b.pmore
   1d668:	add	x0, x24, #0x10
   1d66c:	and	x0, x0, #0xfffffffffffffff0
   1d670:	sub	sp, sp, x0
   1d674:	add	x3, sp, #0x10
   1d678:	mov	x2, x24
   1d67c:	mov	x1, x4
   1d680:	mov	x0, x3
   1d684:	bl	cb60 <strncpy@plt>
   1d688:	strb	wzr, [x0, x24]
   1d68c:	mov	x3, x0
   1d690:	add	x2, x29, #0x120
   1d694:	ldp	x0, x1, [x29, #384]
   1d698:	stp	x0, x1, [x29, #288]
   1d69c:	ldp	x0, x1, [x29, #400]
   1d6a0:	stp	x0, x1, [x29, #304]
   1d6a4:	mov	x1, x3
   1d6a8:	add	x0, x29, #0x1f0
   1d6ac:	bl	c0d0 <__gmp_vasprintf@plt>
   1d6b0:	tbnz	w0, #31, 1d1dc <mpfr_vasnprintf_aux@@Base+0x7dc>
   1d6b4:	ldr	x1, [x29, #496]
   1d6b8:	sxtw	x2, w0
   1d6bc:	mov	x0, x23
   1d6c0:	bl	1c948 <mpfr_asprintf@@Base+0xc10>
   1d6c4:	ldr	x0, [x29, #496]
   1d6c8:	bl	c920 <mpfr_free_str@plt>
   1d6cc:	ldr	x0, [x29, #456]
   1d6d0:	cbz	x0, 1d6d8 <mpfr_vasnprintf_aux@@Base+0xcd8>
   1d6d4:	bl	c4a0 <mpfr_tmp_free@plt>
   1d6d8:	ldr	x0, [x29, #176]
   1d6dc:	str	x0, [x22]
   1d6e0:	ldr	x0, [x29, #224]
   1d6e4:	str	x0, [x22, #8]
   1d6e8:	ldr	x0, [x29, #128]
   1d6ec:	str	x0, [x22, #16]
   1d6f0:	ldr	w0, [x29, #140]
   1d6f4:	str	w0, [x22, #24]
   1d6f8:	ldr	w0, [x29, #232]
   1d6fc:	str	w0, [x22, #28]
   1d700:	ldp	x0, x1, [x22]
   1d704:	stp	x0, x1, [x29, #384]
   1d708:	ldp	x0, x1, [x22, #16]
   1d70c:	stp	x0, x1, [x29, #400]
   1d710:	ldrb	w0, [x29, #456]
   1d714:	ldr	w1, [x29, #160]
   1d718:	str	w21, [x29, #464]
   1d71c:	str	w28, [x29, #484]
   1d720:	bfxil	w0, w1, #0, #1
   1d724:	ldr	w1, [x29, #164]
   1d728:	strb	w20, [x29, #488]
   1d72c:	bfi	w0, w1, #1, #1
   1d730:	ldr	w1, [x29, #200]
   1d734:	bfi	w0, w1, #2, #1
   1d738:	ldr	w1, [x29, #156]
   1d73c:	bfi	w0, w1, #3, #1
   1d740:	ldr	w1, [x29, #152]
   1d744:	bfi	w0, w1, #4, #1
   1d748:	ldr	w1, [x29, #216]
   1d74c:	str	w1, [x29, #460]
   1d750:	and	w26, w0, #0xff
   1d754:	ldr	x1, [x29, #192]
   1d758:	str	x1, [x29, #472]
   1d75c:	mov	w1, #0xf                   	// #15
   1d760:	str	w1, [x29, #480]
   1d764:	ldrb	w1, [x29, #184]
   1d768:	strb	w0, [x29, #456]
   1d76c:	strb	w1, [x29, #489]
   1d770:	tbnz	w0, #2, 1d8c0 <mpfr_vasnprintf_aux@@Base+0xec0>
   1d774:	ldr	w0, [x29, #184]
   1d778:	cmp	w0, #0x30
   1d77c:	cset	w0, eq  // eq = none
   1d780:	str	w0, [x29, #496]
   1d784:	add	x0, x29, #0x208
   1d788:	str	xzr, [x29, #504]
   1d78c:	and	w24, w20, #0xffffffdf
   1d790:	strb	wzr, [x29, #512]
   1d794:	and	w24, w24, #0xff
   1d798:	stp	xzr, xzr, [x0]
   1d79c:	stp	xzr, xzr, [x0, #24]
   1d7a0:	mov	x0, #0x10                  	// #16
   1d7a4:	strb	wzr, [x29, #536]
   1d7a8:	str	wzr, [x29, #560]
   1d7ac:	strb	wzr, [x29, #564]
   1d7b0:	str	wzr, [x29, #568]
   1d7b4:	str	xzr, [x29, #576]
   1d7b8:	str	xzr, [x29, #584]
   1d7bc:	str	wzr, [x29, #592]
   1d7c0:	str	xzr, [x29, #600]
   1d7c4:	str	xzr, [x29, #608]
   1d7c8:	bl	cd90 <mpfr_allocate_func@plt>
   1d7cc:	ldr	x1, [x25, #16]
   1d7d0:	str	x0, [x29, #616]
   1d7d4:	stp	xzr, xzr, [x0]
   1d7d8:	sub	w0, w20, #0x45
   1d7dc:	and	w0, w0, #0xff
   1d7e0:	cmp	w20, #0x41
   1d7e4:	ccmp	w0, #0x2, #0x0, ne  // ne = any
   1d7e8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   1d7ec:	cset	w27, ls  // ls = plast
   1d7f0:	cmp	x1, x0
   1d7f4:	b.gt	1db70 <mpfr_vasnprintf_aux@@Base+0x1170>
   1d7f8:	mov	x2, #0x2                   	// #2
   1d7fc:	movk	x2, #0x8000, lsl #48
   1d800:	cmp	x1, x2
   1d804:	b.ne	1d8c8 <mpfr_vasnprintf_aux@@Base+0xec8>  // b.any
   1d808:	ldr	w0, [x29, #496]
   1d80c:	cmp	w0, #0x1
   1d810:	b.ne	1d818 <mpfr_vasnprintf_aux@@Base+0xe18>  // b.any
   1d814:	str	wzr, [x29, #496]
   1d818:	mov	x0, #0x3                   	// #3
   1d81c:	str	x0, [x29, #552]
   1d820:	mov	x0, #0x4                   	// #4
   1d824:	bl	cd90 <mpfr_allocate_func@plt>
   1d828:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   1d82c:	adrp	x1, 55000 <mpfr_free_pool@@Base+0x3eec>
   1d830:	mov	x20, x0
   1d834:	cmp	w27, #0x0
   1d838:	add	x2, x2, #0xd4c
   1d83c:	add	x1, x1, #0xd48
   1d840:	csel	x1, x1, x2, ne  // ne = any
   1d844:	bl	c9a0 <strcpy@plt>
   1d848:	ldr	x0, [x29, #616]
   1d84c:	mov	x1, x20
   1d850:	bl	1beb8 <mpfr_asprintf@@Base+0x180>
   1d854:	str	x0, [x29, #544]
   1d858:	b	1daa4 <mpfr_vasnprintf_aux@@Base+0x10a4>
   1d85c:	add	w1, w27, #0x8
   1d860:	str	w1, [x29, #140]
   1d864:	cmp	w1, #0x0
   1d868:	b.le	1d87c <mpfr_vasnprintf_aux@@Base+0xe7c>
   1d86c:	add	x25, x26, #0xf
   1d870:	and	x1, x25, #0xfffffffffffffff8
   1d874:	str	x1, [x29, #176]
   1d878:	b	1d64c <mpfr_vasnprintf_aux@@Base+0xc4c>
   1d87c:	ldr	x1, [x29, #224]
   1d880:	str	x26, [x29, #176]
   1d884:	add	x26, x1, w27, sxtw
   1d888:	b	1d64c <mpfr_vasnprintf_aux@@Base+0xc4c>
   1d88c:	add	x0, x29, #0x1c8
   1d890:	str	x4, [x29, #96]
   1d894:	bl	be40 <mpfr_tmp_allocate@plt>
   1d898:	mov	x3, x0
   1d89c:	ldr	x4, [x29, #96]
   1d8a0:	b	1d678 <mpfr_vasnprintf_aux@@Base+0xc78>
   1d8a4:	cmp	x3, x4
   1d8a8:	b.eq	1d6d8 <mpfr_vasnprintf_aux@@Base+0xcd8>  // b.none
   1d8ac:	mov	x2, x24
   1d8b0:	mov	x1, x4
   1d8b4:	mov	x0, x23
   1d8b8:	bl	1c948 <mpfr_asprintf@@Base+0xc10>
   1d8bc:	b	1d6d8 <mpfr_vasnprintf_aux@@Base+0xcd8>
   1d8c0:	mov	w0, #0x2                   	// #2
   1d8c4:	b	1d780 <mpfr_vasnprintf_aux@@Base+0xd80>
   1d8c8:	cmp	x1, x0
   1d8cc:	ldr	w0, [x25, #8]
   1d8d0:	b.ne	1d91c <mpfr_vasnprintf_aux@@Base+0xf1c>  // b.any
   1d8d4:	ldr	w1, [x29, #496]
   1d8d8:	cmp	w1, #0x1
   1d8dc:	b.ne	1d8e4 <mpfr_vasnprintf_aux@@Base+0xee4>  // b.any
   1d8e0:	str	wzr, [x29, #496]
   1d8e4:	tbz	w0, #31, 1d8f0 <mpfr_vasnprintf_aux@@Base+0xef0>
   1d8e8:	mov	w0, #0x2d                  	// #45
   1d8ec:	strb	w0, [x29, #512]
   1d8f0:	mov	x0, #0x3                   	// #3
   1d8f4:	str	x0, [x29, #552]
   1d8f8:	mov	x0, #0x4                   	// #4
   1d8fc:	bl	cd90 <mpfr_allocate_func@plt>
   1d900:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   1d904:	adrp	x1, 55000 <mpfr_free_pool@@Base+0x3eec>
   1d908:	mov	x20, x0
   1d90c:	cmp	w27, #0x0
   1d910:	add	x2, x2, #0xd54
   1d914:	add	x1, x1, #0xd50
   1d918:	b	1d840 <mpfr_vasnprintf_aux@@Base+0xe40>
   1d91c:	tbz	w0, #31, 1d9fc <mpfr_vasnprintf_aux@@Base+0xffc>
   1d920:	mov	w0, #0x2d                  	// #45
   1d924:	strb	w0, [x29, #512]
   1d928:	cmp	w24, #0x41
   1d92c:	b.ne	1d970 <mpfr_vasnprintf_aux@@Base+0xf70>  // b.any
   1d930:	mov	x0, #0x2                   	// #2
   1d934:	str	x0, [x29, #528]
   1d938:	mov	x0, #0x3                   	// #3
   1d93c:	bl	cd90 <mpfr_allocate_func@plt>
   1d940:	mov	x1, x0
   1d944:	cmp	w27, #0x0
   1d948:	mov	w0, #0x30                  	// #48
   1d94c:	mov	w2, #0x78                  	// #120
   1d950:	strb	w0, [x1]
   1d954:	mov	w0, #0x58                  	// #88
   1d958:	csel	w0, w0, w2, ne  // ne = any
   1d95c:	strb	w0, [x1, #1]
   1d960:	strb	wzr, [x1, #2]
   1d964:	ldr	x0, [x29, #616]
   1d968:	bl	1beb8 <mpfr_asprintf@@Base+0x180>
   1d96c:	str	x0, [x29, #520]
   1d970:	mov	x0, #0x1                   	// #1
   1d974:	str	x0, [x29, #552]
   1d978:	mov	x0, #0x2                   	// #2
   1d97c:	bl	cd90 <mpfr_allocate_func@plt>
   1d980:	mov	x1, x0
   1d984:	mov	w0, #0x30                  	// #48
   1d988:	strh	w0, [x1]
   1d98c:	ldr	x0, [x29, #616]
   1d990:	bl	1beb8 <mpfr_asprintf@@Base+0x180>
   1d994:	str	x0, [x29, #544]
   1d998:	cmp	w21, #0x0
   1d99c:	b.le	1da24 <mpfr_vasnprintf_aux@@Base+0x1024>
   1d9a0:	cmp	w24, #0x47
   1d9a4:	b.ne	1d9ac <mpfr_vasnprintf_aux@@Base+0xfac>  // b.any
   1d9a8:	tbz	w26, #0, 1d9ec <mpfr_vasnprintf_aux@@Base+0xfec>
   1d9ac:	bl	bf20 <localeconv@plt>
   1d9b0:	ldr	x0, [x0]
   1d9b4:	ldrb	w0, [x0, #1]
   1d9b8:	cbnz	w0, 1da1c <mpfr_vasnprintf_aux@@Base+0x101c>
   1d9bc:	bl	bf20 <localeconv@plt>
   1d9c0:	ldr	x0, [x0]
   1d9c4:	ldrb	w0, [x0]
   1d9c8:	cmp	w24, #0x47
   1d9cc:	strb	w0, [x29, #564]
   1d9d0:	cset	w0, eq  // eq = none
   1d9d4:	sub	w21, w21, w0
   1d9d8:	str	w21, [x29, #592]
   1d9dc:	mov	w0, #0xffffffdb            	// #-37
   1d9e0:	and	w0, w20, w0
   1d9e4:	cmp	w0, #0x41
   1d9e8:	b.eq	1da54 <mpfr_vasnprintf_aux@@Base+0x1054>  // b.none
   1d9ec:	cmp	w20, #0x62
   1d9f0:	b.ne	1daa4 <mpfr_vasnprintf_aux@@Base+0x10a4>  // b.any
   1d9f4:	mov	x0, #0x3                   	// #3
   1d9f8:	b	1da60 <mpfr_vasnprintf_aux@@Base+0x1060>
   1d9fc:	mov	w0, #0xa                   	// #10
   1da00:	tst	w26, w0
   1da04:	b.eq	1d928 <mpfr_vasnprintf_aux@@Base+0xf28>  // b.none
   1da08:	tst	x26, #0x8
   1da0c:	mov	w0, #0x2b                  	// #43
   1da10:	mov	w1, #0x20                  	// #32
   1da14:	csel	w0, w0, w1, ne  // ne = any
   1da18:	b	1d924 <mpfr_vasnprintf_aux@@Base+0xf24>
   1da1c:	mov	w0, #0x2e                  	// #46
   1da20:	b	1d9c8 <mpfr_vasnprintf_aux@@Base+0xfc8>
   1da24:	tbz	w26, #0, 1d9dc <mpfr_vasnprintf_aux@@Base+0xfdc>
   1da28:	bl	bf20 <localeconv@plt>
   1da2c:	ldr	x0, [x0]
   1da30:	ldrb	w0, [x0, #1]
   1da34:	cbnz	w0, 1da4c <mpfr_vasnprintf_aux@@Base+0x104c>
   1da38:	bl	bf20 <localeconv@plt>
   1da3c:	ldr	x0, [x0]
   1da40:	ldrb	w0, [x0]
   1da44:	strb	w0, [x29, #564]
   1da48:	b	1d9dc <mpfr_vasnprintf_aux@@Base+0xfdc>
   1da4c:	mov	w0, #0x2e                  	// #46
   1da50:	b	1da44 <mpfr_vasnprintf_aux@@Base+0x1044>
   1da54:	cmp	w24, #0x45
   1da58:	cset	x0, eq  // eq = none
   1da5c:	add	x0, x0, #0x3
   1da60:	str	x0, [x29, #608]
   1da64:	add	x0, x0, #0x1
   1da68:	bl	cd90 <mpfr_allocate_func@plt>
   1da6c:	mov	x20, x0
   1da70:	cmp	w24, #0x45
   1da74:	b.ne	1db58 <mpfr_vasnprintf_aux@@Base+0x1158>  // b.any
   1da78:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   1da7c:	adrp	x1, 55000 <mpfr_free_pool@@Base+0x3eec>
   1da80:	cmp	w27, #0x0
   1da84:	add	x2, x2, #0xd5d
   1da88:	add	x1, x1, #0xd58
   1da8c:	csel	x1, x1, x2, ne  // ne = any
   1da90:	bl	c9a0 <strcpy@plt>
   1da94:	ldr	x0, [x29, #616]
   1da98:	mov	x1, x20
   1da9c:	bl	1beb8 <mpfr_asprintf@@Base+0x180>
   1daa0:	str	x0, [x29, #600]
   1daa4:	ldrb	w0, [x29, #512]
   1daa8:	ldr	x2, [x29, #528]
   1daac:	cmp	w0, #0x0
   1dab0:	cset	w0, ne  // ne = any
   1dab4:	tbnz	x2, #63, 1df98 <mpfr_vasnprintf_aux@@Base+0x1598>
   1dab8:	ldr	x4, [x29, #552]
   1dabc:	tbnz	x4, #63, 1df98 <mpfr_vasnprintf_aux@@Base+0x1598>
   1dac0:	ldr	w3, [x29, #560]
   1dac4:	add	w1, w4, w2
   1dac8:	add	w0, w3, w0
   1dacc:	add	w0, w1, w0
   1dad0:	ldrb	w1, [x29, #536]
   1dad4:	cbz	w1, 1daec <mpfr_vasnprintf_aux@@Base+0x10ec>
   1dad8:	sub	x4, x4, #0x1
   1dadc:	mov	x1, #0x3                   	// #3
   1dae0:	add	x3, x4, w3, sxtw
   1dae4:	udiv	x3, x3, x1
   1dae8:	add	w0, w0, w3
   1daec:	ldrb	w1, [x29, #564]
   1daf0:	ldr	x2, [x29, #584]
   1daf4:	cmp	w1, #0x0
   1daf8:	cinc	w0, w0, ne  // ne = any
   1dafc:	ldr	w1, [x29, #568]
   1db00:	tbnz	x2, #63, 1df98 <mpfr_vasnprintf_aux@@Base+0x1598>
   1db04:	ldr	x3, [x29, #608]
   1db08:	add	w2, w1, w2
   1db0c:	ldr	w1, [x29, #592]
   1db10:	tbnz	x3, #63, 1df98 <mpfr_vasnprintf_aux@@Base+0x1598>
   1db14:	add	w1, w1, w3
   1db18:	add	w1, w1, w2
   1db1c:	add	w1, w1, w0
   1db20:	ldr	w0, [x29, #216]
   1db24:	cmp	w1, w0
   1db28:	b.cs	1db38 <mpfr_vasnprintf_aux@@Base+0x1138>  // b.hs, b.nlast
   1db2c:	sub	w1, w0, w1
   1db30:	str	x1, [x29, #504]
   1db34:	mov	x1, x0
   1db38:	ldr	x0, [x29, #192]
   1db3c:	cbnz	x0, 1e1f0 <mpfr_vasnprintf_aux@@Base+0x17f0>
   1db40:	ldr	x0, [x29, #104]
   1db44:	mov	w1, w1
   1db48:	bl	1bf94 <mpfr_asprintf@@Base+0x25c>
   1db4c:	ldr	x0, [x29, #616]
   1db50:	bl	1be74 <mpfr_asprintf@@Base+0x13c>
   1db54:	b	1dfa8 <mpfr_vasnprintf_aux@@Base+0x15a8>
   1db58:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   1db5c:	adrp	x1, 55000 <mpfr_free_pool@@Base+0x3eec>
   1db60:	cmp	w27, #0x0
   1db64:	add	x2, x2, #0xd66
   1db68:	add	x1, x1, #0xd62
   1db6c:	b	1da8c <mpfr_vasnprintf_aux@@Base+0x108c>
   1db70:	mov	x0, #0x4                   	// #4
   1db74:	movk	x0, #0x8000, lsl #48
   1db78:	cmp	x1, x0
   1db7c:	b.ne	1dbcc <mpfr_vasnprintf_aux@@Base+0x11cc>  // b.any
   1db80:	ldr	w0, [x29, #496]
   1db84:	cmp	w0, #0x1
   1db88:	b.ne	1db90 <mpfr_vasnprintf_aux@@Base+0x1190>  // b.any
   1db8c:	str	wzr, [x29, #496]
   1db90:	ldr	w0, [x25, #8]
   1db94:	tbz	w0, #31, 1dba0 <mpfr_vasnprintf_aux@@Base+0x11a0>
   1db98:	mov	w0, #0x2d                  	// #45
   1db9c:	strb	w0, [x29, #512]
   1dba0:	mov	x0, #0x3                   	// #3
   1dba4:	str	x0, [x29, #552]
   1dba8:	mov	x0, #0x4                   	// #4
   1dbac:	bl	cd90 <mpfr_allocate_func@plt>
   1dbb0:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   1dbb4:	adrp	x1, 55000 <mpfr_free_pool@@Base+0x3eec>
   1dbb8:	mov	x20, x0
   1dbbc:	cmp	w27, #0x0
   1dbc0:	add	x2, x2, #0xd6e
   1dbc4:	add	x1, x1, #0xd6a
   1dbc8:	b	1d840 <mpfr_vasnprintf_aux@@Base+0xe40>
   1dbcc:	cmp	w24, #0x41
   1dbd0:	b.eq	1dbdc <mpfr_vasnprintf_aux@@Base+0x11dc>  // b.none
   1dbd4:	cmp	w20, #0x62
   1dbd8:	b.ne	1e074 <mpfr_vasnprintf_aux@@Base+0x1674>  // b.any
   1dbdc:	ldr	w0, [x25, #8]
   1dbe0:	tbz	w0, #31, 1dd00 <mpfr_vasnprintf_aux@@Base+0x1300>
   1dbe4:	mov	w0, #0x2d                  	// #45
   1dbe8:	strb	w0, [x29, #512]
   1dbec:	cmp	w24, #0x41
   1dbf0:	b.ne	1dc34 <mpfr_vasnprintf_aux@@Base+0x1234>  // b.any
   1dbf4:	mov	x0, #0x2                   	// #2
   1dbf8:	str	x0, [x29, #528]
   1dbfc:	mov	x0, #0x3                   	// #3
   1dc00:	bl	cd90 <mpfr_allocate_func@plt>
   1dc04:	mov	x1, x0
   1dc08:	cmp	w20, #0x41
   1dc0c:	mov	w0, #0x30                  	// #48
   1dc10:	mov	w2, #0x78                  	// #120
   1dc14:	strb	w0, [x1]
   1dc18:	mov	w0, #0x58                  	// #88
   1dc1c:	csel	w0, w0, w2, eq  // eq = none
   1dc20:	strb	w0, [x1, #1]
   1dc24:	strb	wzr, [x1, #2]
   1dc28:	ldr	x0, [x29, #616]
   1dc2c:	bl	1beb8 <mpfr_asprintf@@Base+0x180>
   1dc30:	str	x0, [x29, #520]
   1dc34:	mov	x0, #0x1                   	// #1
   1dc38:	str	x0, [x29, #552]
   1dc3c:	cmp	w20, #0x62
   1dc40:	mov	w27, #0x2                   	// #2
   1dc44:	mov	w1, #0x10                  	// #16
   1dc48:	csel	w27, w27, w1, eq  // eq = none
   1dc4c:	cmp	w21, #0x0
   1dc50:	cbz	w21, 1dd50 <mpfr_vasnprintf_aux@@Base+0x1350>
   1dc54:	ldr	x4, [x29, #192]
   1dc58:	sxtw	x2, w21
   1dc5c:	csinc	x2, xzr, x2, lt  // lt = tstop
   1dc60:	mov	w5, w28
   1dc64:	mov	x3, x25
   1dc68:	mov	w1, w27
   1dc6c:	add	x0, x29, #0x148
   1dc70:	bl	1bfc8 <mpfr_asprintf@@Base+0x290>
   1dc74:	mov	x24, x0
   1dc78:	mov	x1, x0
   1dc7c:	ldr	x0, [x29, #616]
   1dc80:	bl	1beb8 <mpfr_asprintf@@Base+0x180>
   1dc84:	ldrsw	x0, [x25, #8]
   1dc88:	cmp	w27, #0x10
   1dc8c:	add	x24, x24, x0, lsr #63
   1dc90:	str	x24, [x29, #544]
   1dc94:	ldr	x0, [x29, #328]
   1dc98:	b.ne	1dd20 <mpfr_vasnprintf_aux@@Base+0x1320>  // b.any
   1dc9c:	mov	x1, #0xe000000000000001    	// #-2305843009213693951
   1dca0:	cmp	x0, x1
   1dca4:	b.gt	1dcc0 <mpfr_vasnprintf_aux@@Base+0x12c0>
   1dca8:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   1dcac:	adrp	x0, 55000 <mpfr_free_pool@@Base+0x3eec>
   1dcb0:	add	x2, x2, #0xd9f
   1dcb4:	add	x0, x0, #0xcd8
   1dcb8:	mov	w1, #0x41f                 	// #1055
   1dcbc:	bl	cbd0 <mpfr_assert_fail@plt>
   1dcc0:	ldr	x0, [x29, #328]
   1dcc4:	sub	x0, x0, #0x1
   1dcc8:	lsl	x0, x0, #2
   1dccc:	str	x0, [x29, #328]
   1dcd0:	cmp	w20, #0x41
   1dcd4:	b.ne	1dfdc <mpfr_vasnprintf_aux@@Base+0x15dc>  // b.any
   1dcd8:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   1dcdc:	mov	x0, x24
   1dce0:	add	x2, x2, #0xebc
   1dce4:	mov	w8, w20
   1dce8:	mov	w3, #0x46                  	// #70
   1dcec:	mov	w4, #0x45                  	// #69
   1dcf0:	mov	w5, #0x44                  	// #68
   1dcf4:	mov	w6, #0x43                  	// #67
   1dcf8:	mov	w7, #0x42                  	// #66
   1dcfc:	b	1def0 <mpfr_vasnprintf_aux@@Base+0x14f0>
   1dd00:	mov	w0, #0xa                   	// #10
   1dd04:	tst	w26, w0
   1dd08:	b.eq	1dbec <mpfr_vasnprintf_aux@@Base+0x11ec>  // b.none
   1dd0c:	tst	x26, #0x8
   1dd10:	mov	w0, #0x2b                  	// #43
   1dd14:	mov	w1, #0x20                  	// #32
   1dd18:	csel	w0, w0, w1, ne  // ne = any
   1dd1c:	b	1dbe8 <mpfr_vasnprintf_aux@@Base+0x11e8>
   1dd20:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   1dd24:	cmp	x0, x1
   1dd28:	b.ne	1dd44 <mpfr_vasnprintf_aux@@Base+0x1344>  // b.any
   1dd2c:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   1dd30:	adrp	x0, 55000 <mpfr_free_pool@@Base+0x3eec>
   1dd34:	add	x2, x2, #0xdcd
   1dd38:	add	x0, x0, #0xcd8
   1dd3c:	mov	w1, #0x428                 	// #1064
   1dd40:	bl	cbd0 <mpfr_assert_fail@plt>
   1dd44:	ldr	x0, [x29, #328]
   1dd48:	sub	x0, x0, #0x1
   1dd4c:	b	1dccc <mpfr_vasnprintf_aux@@Base+0x12cc>
   1dd50:	cmp	w27, #0x2
   1dd54:	b.ne	1e780 <mpfr_vasnprintf_aux@@Base+0x1d80>  // b.any
   1dd58:	cmp	w28, #0x1
   1dd5c:	b.eq	1dd7c <mpfr_vasnprintf_aux@@Base+0x137c>  // b.none
   1dd60:	cmp	w28, #0x3
   1dd64:	b.ne	1dda8 <mpfr_vasnprintf_aux@@Base+0x13a8>  // b.any
   1dd68:	ldr	w1, [x25, #8]
   1dd6c:	cmp	w1, #0x0
   1dd70:	b.le	1ddb8 <mpfr_vasnprintf_aux@@Base+0x13b8>
   1dd74:	cmp	w27, #0x2
   1dd78:	b.ne	1de34 <mpfr_vasnprintf_aux@@Base+0x1434>  // b.any
   1dd7c:	mov	x0, #0x2                   	// #2
   1dd80:	bl	cd90 <mpfr_allocate_func@plt>
   1dd84:	mov	x24, x0
   1dd88:	mov	w0, #0x31                  	// #49
   1dd8c:	mov	x1, x24
   1dd90:	strh	w0, [x24]
   1dd94:	ldr	x0, [x29, #616]
   1dd98:	bl	1beb8 <mpfr_asprintf@@Base+0x180>
   1dd9c:	str	x0, [x29, #544]
   1dda0:	ldr	x0, [x25, #16]
   1dda4:	b	1dd48 <mpfr_vasnprintf_aux@@Base+0x1348>
   1dda8:	cmp	w28, #0x2
   1ddac:	b.ne	1ddb8 <mpfr_vasnprintf_aux@@Base+0x13b8>  // b.any
   1ddb0:	ldr	w1, [x25, #8]
   1ddb4:	tbnz	w1, #31, 1dd74 <mpfr_vasnprintf_aux@@Base+0x1374>
   1ddb8:	ldr	x1, [x25]
   1ddbc:	cmp	x0, x1
   1ddc0:	b.ge	1dd74 <mpfr_vasnprintf_aux@@Base+0x1374>  // b.tcont
   1ddc4:	sub	x1, x1, #0x1
   1ddc8:	mov	w3, w0
   1ddcc:	ldr	x2, [x25, #24]
   1ddd0:	asr	x1, x1, #6
   1ddd4:	neg	w0, w0
   1ddd8:	ldr	x2, [x2, x1, lsl #3]
   1dddc:	mov	x1, #0x1                   	// #1
   1dde0:	lsl	x0, x1, x0
   1dde4:	sub	x0, x0, #0x1
   1dde8:	orr	x1, x2, x0
   1ddec:	cmn	x1, #0x1
   1ddf0:	b.ne	1dd74 <mpfr_vasnprintf_aux@@Base+0x1374>  // b.any
   1ddf4:	cbnz	w28, 1de00 <mpfr_vasnprintf_aux@@Base+0x1400>
   1ddf8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   1ddfc:	lsr	x0, x0, x3
   1de00:	tst	x2, x0
   1de04:	b.eq	1dd74 <mpfr_vasnprintf_aux@@Base+0x1374>  // b.none
   1de08:	mov	x0, #0x2                   	// #2
   1de0c:	bl	cd90 <mpfr_allocate_func@plt>
   1de10:	mov	x24, x0
   1de14:	mov	w0, #0x31                  	// #49
   1de18:	mov	x1, x24
   1de1c:	strh	w0, [x24]
   1de20:	ldr	x0, [x29, #616]
   1de24:	bl	1beb8 <mpfr_asprintf@@Base+0x180>
   1de28:	str	x0, [x29, #544]
   1de2c:	ldr	x0, [x25, #16]
   1de30:	b	1dccc <mpfr_vasnprintf_aux@@Base+0x12cc>
   1de34:	ldr	x0, [x25]
   1de38:	cmp	w28, #0x4
   1de3c:	ldr	x1, [x25, #24]
   1de40:	sub	x0, x0, #0x1
   1de44:	asr	x0, x0, #6
   1de48:	ldr	x1, [x1, x0, lsl #3]
   1de4c:	lsr	x0, x1, #60
   1de50:	mov	w27, w0
   1de54:	b.eq	1deb8 <mpfr_vasnprintf_aux@@Base+0x14b8>  // b.none
   1de58:	cmp	w28, #0x2
   1de5c:	b.ne	1dea8 <mpfr_vasnprintf_aux@@Base+0x14a8>  // b.any
   1de60:	ldr	w1, [x25, #8]
   1de64:	cmp	w1, #0x0
   1de68:	b.gt	1deb8 <mpfr_vasnprintf_aux@@Base+0x14b8>
   1de6c:	mov	x0, #0x2                   	// #2
   1de70:	bl	cd90 <mpfr_allocate_func@plt>
   1de74:	mov	x24, x0
   1de78:	adrp	x0, 55000 <mpfr_free_pool@@Base+0x3eec>
   1de7c:	add	x0, x0, #0xf16
   1de80:	mov	x1, x24
   1de84:	strb	wzr, [x24, #1]
   1de88:	ldrb	w0, [x0, w27, sxtw]
   1de8c:	strb	w0, [x24]
   1de90:	ldr	x0, [x29, #616]
   1de94:	bl	1beb8 <mpfr_asprintf@@Base+0x180>
   1de98:	str	x0, [x29, #544]
   1de9c:	ldr	x0, [x25, #16]
   1dea0:	sub	x0, x0, #0x4
   1dea4:	b	1dccc <mpfr_vasnprintf_aux@@Base+0x12cc>
   1dea8:	cmp	w28, #0x3
   1deac:	b.ne	1dec0 <mpfr_vasnprintf_aux@@Base+0x14c0>  // b.any
   1deb0:	ldr	w1, [x25, #8]
   1deb4:	tbz	w1, #31, 1de6c <mpfr_vasnprintf_aux@@Base+0x146c>
   1deb8:	add	w27, w0, #0x1
   1debc:	b	1de6c <mpfr_vasnprintf_aux@@Base+0x146c>
   1dec0:	cbnz	w28, 1de6c <mpfr_vasnprintf_aux@@Base+0x146c>
   1dec4:	tbz	x1, #59, 1de6c <mpfr_vasnprintf_aux@@Base+0x146c>
   1dec8:	b	1deb8 <mpfr_vasnprintf_aux@@Base+0x14b8>
   1decc:	sub	w1, w1, #0x61
   1ded0:	cmp	w1, #0x5
   1ded4:	b.hi	1deec <mpfr_vasnprintf_aux@@Base+0x14ec>  // b.pmore
   1ded8:	ldrb	w1, [x2, w1, uxtw]
   1dedc:	adr	x9, 1dee8 <mpfr_vasnprintf_aux@@Base+0x14e8>
   1dee0:	add	x1, x9, w1, sxtb #2
   1dee4:	br	x1
   1dee8:	strb	w8, [x0]
   1deec:	add	x0, x0, #0x1
   1def0:	ldrb	w1, [x0]
   1def4:	cbnz	w1, 1decc <mpfr_vasnprintf_aux@@Base+0x14cc>
   1def8:	cbnz	w21, 1dfe4 <mpfr_vasnprintf_aux@@Base+0x15e4>
   1defc:	ldr	x0, [x29, #584]
   1df00:	cbnz	x0, 1e034 <mpfr_vasnprintf_aux@@Base+0x1634>
   1df04:	tbnz	w26, #0, 1e034 <mpfr_vasnprintf_aux@@Base+0x1634>
   1df08:	ldr	x0, [x29, #328]
   1df0c:	mov	x1, #0x3                   	// #3
   1df10:	mov	x3, #0xa                   	// #10
   1df14:	str	x1, [x29, #608]
   1df18:	cmp	x0, #0x0
   1df1c:	cneg	x0, x0, lt  // lt = tstop
   1df20:	add	x2, x1, #0x1
   1df24:	cmp	x0, #0x9
   1df28:	b.hi	1e060 <mpfr_vasnprintf_aux@@Base+0x1660>  // b.pmore
   1df2c:	ldr	w0, [x29, #136]
   1df30:	cbz	w0, 1df38 <mpfr_vasnprintf_aux@@Base+0x1538>
   1df34:	str	x1, [x29, #608]
   1df38:	ldr	x0, [x29, #608]
   1df3c:	add	x0, x0, #0x1
   1df40:	bl	cd90 <mpfr_allocate_func@plt>
   1df44:	mov	x1, x0
   1df48:	mov	x21, x0
   1df4c:	ldr	x0, [x29, #616]
   1df50:	bl	1beb8 <mpfr_asprintf@@Base+0x180>
   1df54:	str	x0, [x29, #600]
   1df58:	cmp	w20, #0x41
   1df5c:	add	x3, x29, #0x150
   1df60:	mov	w1, #0x70                  	// #112
   1df64:	mov	w0, #0x50                  	// #80
   1df68:	csel	w0, w0, w1, eq  // eq = none
   1df6c:	adrp	x1, 55000 <mpfr_free_pool@@Base+0x3eec>
   1df70:	add	x1, x1, #0xdf1
   1df74:	strb	w0, [x29, #336]
   1df78:	mov	x0, x3
   1df7c:	strb	wzr, [x29, #337]
   1df80:	bl	c180 <strcat@plt>
   1df84:	mov	x1, x0
   1df88:	ldr	x2, [x29, #328]
   1df8c:	mov	x0, x21
   1df90:	bl	bd90 <sprintf@plt>
   1df94:	tbz	w0, #31, 1daa4 <mpfr_vasnprintf_aux@@Base+0x10a4>
   1df98:	ldr	x0, [x29, #616]
   1df9c:	bl	1be74 <mpfr_asprintf@@Base+0x13c>
   1dfa0:	mov	x0, #0xffffffffffffffff    	// #-1
   1dfa4:	str	x0, [x29, #376]
   1dfa8:	ldr	w27, [x29, #140]
   1dfac:	ldr	x26, [x29, #176]
   1dfb0:	b	1d2f0 <mpfr_vasnprintf_aux@@Base+0x8f0>
   1dfb4:	strb	w7, [x0]
   1dfb8:	b	1deec <mpfr_vasnprintf_aux@@Base+0x14ec>
   1dfbc:	strb	w6, [x0]
   1dfc0:	b	1deec <mpfr_vasnprintf_aux@@Base+0x14ec>
   1dfc4:	strb	w5, [x0]
   1dfc8:	b	1deec <mpfr_vasnprintf_aux@@Base+0x14ec>
   1dfcc:	strb	w4, [x0]
   1dfd0:	b	1deec <mpfr_vasnprintf_aux@@Base+0x14ec>
   1dfd4:	strb	w3, [x0]
   1dfd8:	b	1deec <mpfr_vasnprintf_aux@@Base+0x14ec>
   1dfdc:	cmp	w20, #0x62
   1dfe0:	b.ne	1def8 <mpfr_vasnprintf_aux@@Base+0x14f8>  // b.any
   1dfe4:	add	x27, x24, #0x1
   1dfe8:	mov	x0, x27
   1dfec:	bl	bb30 <strlen@plt>
   1dff0:	tbz	w21, #31, 1e00c <mpfr_vasnprintf_aux@@Base+0x160c>
   1dff4:	ldrb	w1, [x24, x0]
   1dff8:	cmp	w1, #0x30
   1dffc:	b.ne	1e00c <mpfr_vasnprintf_aux@@Base+0x160c>  // b.any
   1e000:	cbz	x0, 1defc <mpfr_vasnprintf_aux@@Base+0x14fc>
   1e004:	sub	x0, x0, #0x1
   1e008:	b	1dff4 <mpfr_vasnprintf_aux@@Base+0x15f4>
   1e00c:	mov	x1, #0x7fffffff            	// #2147483647
   1e010:	cmp	x0, x1
   1e014:	b.hi	1df98 <mpfr_vasnprintf_aux@@Base+0x1598>  // b.pmore
   1e018:	cbz	x0, 1defc <mpfr_vasnprintf_aux@@Base+0x14fc>
   1e01c:	str	x27, [x29, #576]
   1e020:	cmp	w21, w0
   1e024:	str	x0, [x29, #584]
   1e028:	b.le	1e034 <mpfr_vasnprintf_aux@@Base+0x1634>
   1e02c:	sub	w0, w21, w0
   1e030:	str	w0, [x29, #592]
   1e034:	bl	bf20 <localeconv@plt>
   1e038:	ldr	x0, [x0]
   1e03c:	ldrb	w0, [x0, #1]
   1e040:	cbz	w0, 1e04c <mpfr_vasnprintf_aux@@Base+0x164c>
   1e044:	mov	w0, #0x2e                  	// #46
   1e048:	b	1e058 <mpfr_vasnprintf_aux@@Base+0x1658>
   1e04c:	bl	bf20 <localeconv@plt>
   1e050:	ldr	x0, [x0]
   1e054:	ldrb	w0, [x0]
   1e058:	strb	w0, [x29, #564]
   1e05c:	b	1df08 <mpfr_vasnprintf_aux@@Base+0x1508>
   1e060:	udiv	x0, x0, x3
   1e064:	mov	x1, x2
   1e068:	mov	w2, #0x1                   	// #1
   1e06c:	str	w2, [x29, #136]
   1e070:	b	1df20 <mpfr_vasnprintf_aux@@Base+0x1520>
   1e074:	cmp	w24, #0x46
   1e078:	add	x26, x29, #0x1c8
   1e07c:	add	x27, x29, #0x1f0
   1e080:	add	x20, x29, #0xf0
   1e084:	b.ne	1e0d8 <mpfr_vasnprintf_aux@@Base+0x16d8>  // b.any
   1e088:	mov	w0, #0x6                   	// #6
   1e08c:	cmp	w21, #0x0
   1e090:	csel	w21, w21, w0, ge  // ge = tcont
   1e094:	add	x0, x29, #0x290
   1e098:	str	w21, [x29, #464]
   1e09c:	mov	x3, #0x0                   	// #0
   1e0a0:	ldp	x0, x1, [x0, #-200]
   1e0a4:	stp	x0, x1, [x29, #240]
   1e0a8:	add	x0, x29, #0x290
   1e0ac:	ldp	x0, x1, [x0, #-184]
   1e0b0:	stp	x0, x1, [x29, #256]
   1e0b4:	ldr	x0, [x29, #488]
   1e0b8:	str	x0, [x29, #272]
   1e0bc:	mov	x2, x20
   1e0c0:	mov	x1, x25
   1e0c4:	mov	x0, x27
   1e0c8:	bl	1c320 <mpfr_asprintf@@Base+0x5e8>
   1e0cc:	cmn	w0, #0x1
   1e0d0:	b.ne	1daa4 <mpfr_vasnprintf_aux@@Base+0x10a4>  // b.any
   1e0d4:	b	1df98 <mpfr_vasnprintf_aux@@Base+0x1598>
   1e0d8:	cmp	w24, #0x45
   1e0dc:	b.ne	1e110 <mpfr_vasnprintf_aux@@Base+0x1710>  // b.any
   1e0e0:	ldp	x0, x1, [x26]
   1e0e4:	stp	x0, x1, [x20]
   1e0e8:	mov	x3, #0x0                   	// #0
   1e0ec:	ldp	x0, x1, [x26, #16]
   1e0f0:	stp	x0, x1, [x20, #16]
   1e0f4:	ldr	x0, [x26, #32]
   1e0f8:	str	x0, [x20, #32]
   1e0fc:	mov	x2, x20
   1e100:	mov	x1, x25
   1e104:	mov	x0, x27
   1e108:	bl	1c0d4 <mpfr_asprintf@@Base+0x39c>
   1e10c:	b	1e0cc <mpfr_vasnprintf_aux@@Base+0x16cc>
   1e110:	ldr	x3, [x25]
   1e114:	cmp	w21, #0x0
   1e118:	csinc	w0, w21, wzr, ne  // ne = any
   1e11c:	mov	w21, #0x6                   	// #6
   1e120:	sub	x3, x3, x1
   1e124:	csel	w21, w0, w21, ge  // ge = tcont
   1e128:	cmp	x1, #0x0
   1e12c:	b.le	1e148 <mpfr_vasnprintf_aux@@Base+0x1748>
   1e130:	add	x1, x1, #0x2
   1e134:	mov	x0, #0x3                   	// #3
   1e138:	cmp	x3, #0x0
   1e13c:	csel	x3, x3, xzr, ge  // ge = tcont
   1e140:	udiv	x1, x1, x0
   1e144:	add	x3, x1, x3
   1e148:	add	x7, x29, #0x150
   1e14c:	cmp	x3, w21, sxtw
   1e150:	sxtw	x24, w21
   1e154:	mov	x1, x7
   1e158:	csel	x3, x24, x3, ge  // ge = tcont
   1e15c:	mov	w5, w28
   1e160:	mov	x4, x25
   1e164:	mov	w2, #0xa                   	// #10
   1e168:	mov	x0, #0x0                   	// #0
   1e16c:	str	x7, [x29, #200]
   1e170:	bl	c590 <mpfr_get_str@plt>
   1e174:	mov	x1, x0
   1e178:	ldr	x0, [x29, #616]
   1e17c:	str	x1, [x29, #344]
   1e180:	bl	1beb8 <mpfr_asprintf@@Base+0x180>
   1e184:	ldr	x0, [x29, #336]
   1e188:	ldr	x7, [x29, #200]
   1e18c:	sub	x1, x0, #0x1
   1e190:	cmp	x24, x1
   1e194:	b.gt	1e1c0 <mpfr_vasnprintf_aux@@Base+0x17c0>
   1e198:	sub	w21, w21, #0x1
   1e19c:	str	w21, [x29, #464]
   1e1a0:	mov	x3, x7
   1e1a4:	ldp	x0, x1, [x26]
   1e1a8:	stp	x0, x1, [x20]
   1e1ac:	ldp	x0, x1, [x26, #16]
   1e1b0:	stp	x0, x1, [x20, #16]
   1e1b4:	ldr	x0, [x26, #32]
   1e1b8:	str	x0, [x20, #32]
   1e1bc:	b	1e0fc <mpfr_vasnprintf_aux@@Base+0x16fc>
   1e1c0:	cmn	x1, #0x4
   1e1c4:	b.lt	1e198 <mpfr_vasnprintf_aux@@Base+0x1798>  // b.tstop
   1e1c8:	sub	w21, w21, w0
   1e1cc:	str	w21, [x29, #464]
   1e1d0:	mov	x3, x7
   1e1d4:	ldp	x0, x1, [x26]
   1e1d8:	stp	x0, x1, [x20]
   1e1dc:	ldp	x0, x1, [x26, #16]
   1e1e0:	stp	x0, x1, [x20, #16]
   1e1e4:	ldr	x0, [x26, #32]
   1e1e8:	str	x0, [x20, #32]
   1e1ec:	b	1e0bc <mpfr_vasnprintf_aux@@Base+0x16bc>
   1e1f0:	ldr	w0, [x29, #496]
   1e1f4:	cbnz	w0, 1e20c <mpfr_vasnprintf_aux@@Base+0x180c>
   1e1f8:	ldr	x2, [x29, #504]
   1e1fc:	cbz	x2, 1e20c <mpfr_vasnprintf_aux@@Base+0x180c>
   1e200:	mov	x0, x23
   1e204:	mov	w1, #0x20                  	// #32
   1e208:	bl	1c87c <mpfr_asprintf@@Base+0xb44>
   1e20c:	ldrb	w1, [x29, #512]
   1e210:	cbz	w1, 1e220 <mpfr_vasnprintf_aux@@Base+0x1820>
   1e214:	mov	x0, x23
   1e218:	mov	x2, #0x1                   	// #1
   1e21c:	bl	1c87c <mpfr_asprintf@@Base+0xb44>
   1e220:	ldr	x1, [x29, #520]
   1e224:	cbz	x1, 1e234 <mpfr_vasnprintf_aux@@Base+0x1834>
   1e228:	ldr	x2, [x29, #528]
   1e22c:	mov	x0, x23
   1e230:	bl	1c948 <mpfr_asprintf@@Base+0xc10>
   1e234:	ldr	w0, [x29, #496]
   1e238:	cmp	w0, #0x1
   1e23c:	b.ne	1e254 <mpfr_vasnprintf_aux@@Base+0x1854>  // b.any
   1e240:	ldr	x2, [x29, #504]
   1e244:	cbz	x2, 1e254 <mpfr_vasnprintf_aux@@Base+0x1854>
   1e248:	mov	x0, x23
   1e24c:	mov	w1, #0x30                  	// #48
   1e250:	bl	1c87c <mpfr_asprintf@@Base+0xb44>
   1e254:	ldr	x0, [x29, #544]
   1e258:	cbnz	x0, 1e274 <mpfr_vasnprintf_aux@@Base+0x1874>
   1e25c:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   1e260:	adrp	x0, 55000 <mpfr_free_pool@@Base+0x3eec>
   1e264:	add	x2, x2, #0xdf8
   1e268:	add	x0, x0, #0xcd8
   1e26c:	mov	w1, #0x7a3                 	// #1955
   1e270:	bl	cbd0 <mpfr_assert_fail@plt>
   1e274:	ldrb	w24, [x29, #536]
   1e278:	ldr	x25, [x29, #544]
   1e27c:	ldr	x27, [x29, #552]
   1e280:	cbz	w24, 1e4bc <mpfr_vasnprintf_aux@@Base+0x1abc>
   1e284:	ldrsw	x26, [x29, #560]
   1e288:	mvn	x0, x26
   1e28c:	cmp	x0, x27
   1e290:	b.cc	1e4b0 <mpfr_vasnprintf_aux@@Base+0x1ab0>  // b.lo, b.ul, b.last
   1e294:	add	x26, x26, x27
   1e298:	mov	x21, #0x3                   	// #3
   1e29c:	sub	x20, x26, #0x1
   1e2a0:	udiv	x21, x20, x21
   1e2a4:	mvn	x0, x21
   1e2a8:	cmp	x26, x0
   1e2ac:	b.hi	1e4b0 <mpfr_vasnprintf_aux@@Base+0x1ab0>  // b.pmore
   1e2b0:	ldr	x0, [x29, #104]
   1e2b4:	add	x26, x26, x21
   1e2b8:	mov	x1, x26
   1e2bc:	bl	1bf94 <mpfr_asprintf@@Base+0x25c>
   1e2c0:	cbnz	w0, 1e4b0 <mpfr_vasnprintf_aux@@Base+0x1ab0>
   1e2c4:	ldr	x0, [x29, #368]
   1e2c8:	cbz	x0, 1e374 <mpfr_vasnprintf_aux@@Base+0x1974>
   1e2cc:	mvn	x1, x26
   1e2d0:	cmp	x0, x1
   1e2d4:	b.cc	1e2f0 <mpfr_vasnprintf_aux@@Base+0x18f0>  // b.lo, b.ul, b.last
   1e2d8:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   1e2dc:	adrp	x0, 55000 <mpfr_free_pool@@Base+0x3eec>
   1e2e0:	add	x2, x2, #0xe11
   1e2e4:	add	x0, x0, #0xcd8
   1e2e8:	mov	w1, #0x2d6                 	// #726
   1e2ec:	bl	cbd0 <mpfr_assert_fail@plt>
   1e2f0:	ldp	x0, x1, [x29, #352]
   1e2f4:	ldr	x2, [x29, #368]
   1e2f8:	add	x1, x1, x26
   1e2fc:	add	x0, x0, x2
   1e300:	cmp	x1, x0
   1e304:	b.cc	1e314 <mpfr_vasnprintf_aux@@Base+0x1914>  // b.lo, b.ul, b.last
   1e308:	mov	x1, x26
   1e30c:	mov	x0, x23
   1e310:	bl	1bdcc <mpfr_asprintf@@Base+0x94>
   1e314:	mov	x0, #0x3                   	// #3
   1e318:	udiv	x0, x20, x0
   1e31c:	add	x0, x0, x0, lsl #1
   1e320:	sub	x20, x20, x0
   1e324:	add	x20, x20, #0x1
   1e328:	cmp	x20, x27
   1e32c:	ldr	x0, [x29, #360]
   1e330:	b.hi	1e404 <mpfr_vasnprintf_aux@@Base+0x1a04>  // b.pmore
   1e334:	mov	x1, x25
   1e338:	sub	x26, x27, x20
   1e33c:	add	x25, x25, x20
   1e340:	mov	x2, x20
   1e344:	bl	ba90 <memcpy@plt>
   1e348:	ldr	x0, [x29, #360]
   1e34c:	mov	x27, #0x0                   	// #0
   1e350:	mov	w28, #0x3030                	// #12336
   1e354:	mov	w5, #0x30                  	// #48
   1e358:	add	x20, x0, x20
   1e35c:	str	x20, [x29, #360]
   1e360:	mov	x20, #0x3                   	// #3
   1e364:	cmp	x21, x27
   1e368:	ldr	x0, [x29, #360]
   1e36c:	b.ne	1e42c <mpfr_vasnprintf_aux@@Base+0x1a2c>  // b.any
   1e370:	strb	wzr, [x0]
   1e374:	ldrb	w1, [x29, #564]
   1e378:	cbz	w1, 1e388 <mpfr_vasnprintf_aux@@Base+0x1988>
   1e37c:	mov	x0, x23
   1e380:	mov	x2, #0x1                   	// #1
   1e384:	bl	1c87c <mpfr_asprintf@@Base+0xb44>
   1e388:	ldr	w2, [x29, #568]
   1e38c:	cbz	w2, 1e3a0 <mpfr_vasnprintf_aux@@Base+0x19a0>
   1e390:	sxtw	x2, w2
   1e394:	mov	x0, x23
   1e398:	mov	w1, #0x30                  	// #48
   1e39c:	bl	1c87c <mpfr_asprintf@@Base+0xb44>
   1e3a0:	ldr	x1, [x29, #576]
   1e3a4:	cbz	x1, 1e3b4 <mpfr_vasnprintf_aux@@Base+0x19b4>
   1e3a8:	ldr	x2, [x29, #584]
   1e3ac:	mov	x0, x23
   1e3b0:	bl	1c948 <mpfr_asprintf@@Base+0xc10>
   1e3b4:	ldr	w2, [x29, #592]
   1e3b8:	cbz	w2, 1e3cc <mpfr_vasnprintf_aux@@Base+0x19cc>
   1e3bc:	sxtw	x2, w2
   1e3c0:	mov	x0, x23
   1e3c4:	mov	w1, #0x30                  	// #48
   1e3c8:	bl	1c87c <mpfr_asprintf@@Base+0xb44>
   1e3cc:	ldr	x1, [x29, #600]
   1e3d0:	cbz	x1, 1e3e0 <mpfr_vasnprintf_aux@@Base+0x19e0>
   1e3d4:	ldr	x2, [x29, #608]
   1e3d8:	mov	x0, x23
   1e3dc:	bl	1c948 <mpfr_asprintf@@Base+0xc10>
   1e3e0:	ldr	w0, [x29, #496]
   1e3e4:	cmp	w0, #0x2
   1e3e8:	b.ne	1db4c <mpfr_vasnprintf_aux@@Base+0x114c>  // b.any
   1e3ec:	ldr	x2, [x29, #504]
   1e3f0:	cbz	x2, 1db4c <mpfr_vasnprintf_aux@@Base+0x114c>
   1e3f4:	mov	x0, x23
   1e3f8:	mov	w1, #0x20                  	// #32
   1e3fc:	bl	1c87c <mpfr_asprintf@@Base+0xb44>
   1e400:	b	1db4c <mpfr_vasnprintf_aux@@Base+0x114c>
   1e404:	mov	x2, x27
   1e408:	mov	x1, x25
   1e40c:	bl	ba90 <memcpy@plt>
   1e410:	mov	x26, #0x0                   	// #0
   1e414:	ldr	x0, [x29, #360]
   1e418:	sub	x2, x20, x27
   1e41c:	mov	w1, #0x30                  	// #48
   1e420:	add	x0, x0, x27
   1e424:	bl	c1a0 <memset@plt>
   1e428:	b	1e348 <mpfr_vasnprintf_aux@@Base+0x1948>
   1e42c:	add	x1, x0, #0x1
   1e430:	str	x1, [x29, #360]
   1e434:	strb	w24, [x0]
   1e438:	ldr	x0, [x29, #360]
   1e43c:	cbz	x26, 1e4a4 <mpfr_vasnprintf_aux@@Base+0x1aa4>
   1e440:	cmp	x26, #0x2
   1e444:	b.ls	1e474 <mpfr_vasnprintf_aux@@Base+0x1a74>  // b.plast
   1e448:	ldrh	w1, [x25]
   1e44c:	sub	x26, x26, #0x3
   1e450:	strh	w1, [x0]
   1e454:	add	x25, x25, #0x3
   1e458:	ldurb	w1, [x25, #-1]
   1e45c:	strb	w1, [x0, #2]
   1e460:	ldr	x0, [x29, #360]
   1e464:	add	x27, x27, #0x1
   1e468:	add	x0, x0, #0x3
   1e46c:	str	x0, [x29, #360]
   1e470:	b	1e364 <mpfr_vasnprintf_aux@@Base+0x1964>
   1e474:	mov	x2, x26
   1e478:	mov	x1, x25
   1e47c:	str	w5, [x29, #216]
   1e480:	bl	ba90 <memcpy@plt>
   1e484:	ldr	x0, [x29, #360]
   1e488:	sub	x2, x20, x26
   1e48c:	mov	w1, #0x30                  	// #48
   1e490:	add	x0, x0, x26
   1e494:	bl	c1a0 <memset@plt>
   1e498:	ldr	w5, [x29, #216]
   1e49c:	mov	x26, #0x0                   	// #0
   1e4a0:	b	1e460 <mpfr_vasnprintf_aux@@Base+0x1a60>
   1e4a4:	strh	w28, [x0]
   1e4a8:	strb	w5, [x0, #2]
   1e4ac:	b	1e460 <mpfr_vasnprintf_aux@@Base+0x1a60>
   1e4b0:	mov	x0, #0xffffffffffffffff    	// #-1
   1e4b4:	str	x0, [x29, #376]
   1e4b8:	b	1db4c <mpfr_vasnprintf_aux@@Base+0x114c>
   1e4bc:	mov	x2, x27
   1e4c0:	mov	x1, x25
   1e4c4:	mov	x0, x23
   1e4c8:	bl	1c948 <mpfr_asprintf@@Base+0xc10>
   1e4cc:	ldr	w2, [x29, #560]
   1e4d0:	cbz	w2, 1e374 <mpfr_vasnprintf_aux@@Base+0x1974>
   1e4d4:	sxtw	x2, w2
   1e4d8:	mov	x0, x23
   1e4dc:	mov	w1, #0x30                  	// #48
   1e4e0:	bl	1c87c <mpfr_asprintf@@Base+0xb44>
   1e4e4:	b	1e374 <mpfr_vasnprintf_aux@@Base+0x1974>
   1e4e8:	sub	w24, w24, #0x1
   1e4ec:	cmp	w24, #0xc
   1e4f0:	b.hi	1e5d8 <mpfr_vasnprintf_aux@@Base+0x1bd8>  // b.pmore
   1e4f4:	adrp	x0, 55000 <mpfr_free_pool@@Base+0x3eec>
   1e4f8:	add	x0, x0, #0xec4
   1e4fc:	ldrb	w0, [x0, w24, uxtw]
   1e500:	adr	x1, 1e50c <mpfr_vasnprintf_aux@@Base+0x1b0c>
   1e504:	add	x0, x1, w0, sxtb #2
   1e508:	br	x0
   1e50c:	sub	w0, w20, #0x58
   1e510:	and	w0, w0, #0xff
   1e514:	cmp	w0, #0x20
   1e518:	b.hi	1cb9c <mpfr_vasnprintf_aux@@Base+0x19c>  // b.pmore
   1e51c:	mov	x1, #0x1001                	// #4097
   1e520:	movk	x1, #0x2082, lsl #16
   1e524:	movk	x1, #0x1, lsl #32
   1e528:	lsr	x0, x1, x0
   1e52c:	tbz	w0, #0, 1e53c <mpfr_vasnprintf_aux@@Base+0x1b3c>
   1e530:	tbz	w27, #31, 1e600 <mpfr_vasnprintf_aux@@Base+0x1c00>
   1e534:	add	w27, w27, #0x8
   1e538:	b	1e5d0 <mpfr_vasnprintf_aux@@Base+0x1bd0>
   1e53c:	cmp	w20, #0x63
   1e540:	b.ne	1e554 <mpfr_vasnprintf_aux@@Base+0x1b54>  // b.any
   1e544:	tbnz	w27, #31, 1e62c <mpfr_vasnprintf_aux@@Base+0x1c2c>
   1e548:	add	x26, x26, #0xb
   1e54c:	and	x26, x26, #0xfffffffffffffff8
   1e550:	b	1cb9c <mpfr_vasnprintf_aux@@Base+0x19c>
   1e554:	cmp	w20, #0x73
   1e558:	b.eq	1e544 <mpfr_vasnprintf_aux@@Base+0x1b44>  // b.none
   1e55c:	b	1cb9c <mpfr_vasnprintf_aux@@Base+0x19c>
   1e560:	ldr	w0, [x29, #232]
   1e564:	tbnz	w0, #31, 1e578 <mpfr_vasnprintf_aux@@Base+0x1b78>
   1e568:	add	x26, x26, #0xf
   1e56c:	and	x26, x26, #0xfffffffffffffff0
   1e570:	add	x26, x26, #0x10
   1e574:	b	1cb9c <mpfr_vasnprintf_aux@@Base+0x19c>
   1e578:	ldr	w0, [x29, #232]
   1e57c:	add	w0, w0, #0x10
   1e580:	str	w0, [x29, #232]
   1e584:	cmp	w0, #0x0
   1e588:	b.gt	1e568 <mpfr_vasnprintf_aux@@Base+0x1b68>
   1e58c:	b	1cb9c <mpfr_vasnprintf_aux@@Base+0x19c>
   1e590:	tbnz	w27, #31, 1e5b0 <mpfr_vasnprintf_aux@@Base+0x1bb0>
   1e594:	add	x26, x26, #0xf
   1e598:	mov	w0, w27
   1e59c:	and	x26, x26, #0xfffffffffffffff8
   1e5a0:	add	x26, x26, #0xf
   1e5a4:	mov	w27, w0
   1e5a8:	and	x26, x26, #0xfffffffffffffff8
   1e5ac:	b	1cb9c <mpfr_vasnprintf_aux@@Base+0x19c>
   1e5b0:	add	w0, w27, #0x8
   1e5b4:	cmp	w0, #0x0
   1e5b8:	b.le	1e5c8 <mpfr_vasnprintf_aux@@Base+0x1bc8>
   1e5bc:	add	x26, x26, #0xf
   1e5c0:	and	x26, x26, #0xfffffffffffffff8
   1e5c4:	b	1e5a0 <mpfr_vasnprintf_aux@@Base+0x1ba0>
   1e5c8:	b.eq	1e5a0 <mpfr_vasnprintf_aux@@Base+0x1ba0>  // b.none
   1e5cc:	add	w27, w27, #0x10
   1e5d0:	cmp	w27, #0x0
   1e5d4:	b	1e64c <mpfr_vasnprintf_aux@@Base+0x1c4c>
   1e5d8:	cmp	w20, #0x57
   1e5dc:	b.hi	1e608 <mpfr_vasnprintf_aux@@Base+0x1c08>  // b.pmore
   1e5e0:	cmp	w20, #0x41
   1e5e4:	b.eq	1e5f8 <mpfr_vasnprintf_aux@@Base+0x1bf8>  // b.none
   1e5e8:	sub	w20, w20, #0x45
   1e5ec:	and	w20, w20, #0xff
   1e5f0:	cmp	w20, #0x2
   1e5f4:	b.hi	1cb9c <mpfr_vasnprintf_aux@@Base+0x19c>  // b.pmore
   1e5f8:	ldr	w0, [x29, #232]
   1e5fc:	tbnz	w0, #31, 1e63c <mpfr_vasnprintf_aux@@Base+0x1c3c>
   1e600:	add	x26, x26, #0xf
   1e604:	b	1e54c <mpfr_vasnprintf_aux@@Base+0x1b4c>
   1e608:	sub	w20, w20, #0x58
   1e60c:	cmp	w20, #0x20
   1e610:	b.hi	1cb9c <mpfr_vasnprintf_aux@@Base+0x19c>  // b.pmore
   1e614:	adrp	x0, 55000 <mpfr_free_pool@@Base+0x3eec>
   1e618:	add	x0, x0, #0xed4
   1e61c:	ldrh	w0, [x0, w20, uxtw #1]
   1e620:	adr	x1, 1e62c <mpfr_vasnprintf_aux@@Base+0x1c2c>
   1e624:	add	x0, x1, w0, sxth #2
   1e628:	br	x0
   1e62c:	add	w27, w27, #0x8
   1e630:	cmp	w27, #0x0
   1e634:	b.gt	1e548 <mpfr_vasnprintf_aux@@Base+0x1b48>
   1e638:	b	1cb9c <mpfr_vasnprintf_aux@@Base+0x19c>
   1e63c:	ldr	w0, [x29, #232]
   1e640:	add	w0, w0, #0x10
   1e644:	str	w0, [x29, #232]
   1e648:	cmp	w0, #0x0
   1e64c:	b.gt	1e600 <mpfr_vasnprintf_aux@@Base+0x1c00>
   1e650:	b	1cb9c <mpfr_vasnprintf_aux@@Base+0x19c>
   1e654:	mov	x19, x3
   1e658:	b	1cf88 <mpfr_vasnprintf_aux@@Base+0x588>
   1e65c:	add	x0, x29, #0x1c8
   1e660:	str	x4, [x29, #232]
   1e664:	bl	be40 <mpfr_tmp_allocate@plt>
   1e668:	mov	x5, x0
   1e66c:	ldr	x4, [x29, #232]
   1e670:	b	1cfb8 <mpfr_vasnprintf_aux@@Base+0x5b8>
   1e674:	mov	x2, x19
   1e678:	mov	x1, x4
   1e67c:	add	x0, x29, #0x160
   1e680:	bl	1c948 <mpfr_asprintf@@Base+0xc10>
   1e684:	b	1d018 <mpfr_vasnprintf_aux@@Base+0x618>
   1e688:	ldr	x1, [x29, #208]
   1e68c:	mov	w19, w0
   1e690:	cbz	x1, 1e724 <mpfr_vasnprintf_aux@@Base+0x1d24>
   1e694:	add	w2, w0, #0x1
   1e698:	ldr	x0, [x29, #352]
   1e69c:	sxtw	x2, w2
   1e6a0:	ldr	x1, [x29, #368]
   1e6a4:	bl	c250 <mpfr_reallocate_func@plt>
   1e6a8:	ldr	x1, [x29, #208]
   1e6ac:	str	x0, [x1]
   1e6b0:	ldr	w2, [x29, #188]
   1e6b4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1e6b8:	ldr	x1, [x0, #2592]
   1e6bc:	add	x0, x0, #0xa20
   1e6c0:	blr	x1
   1e6c4:	mrs	x1, tpidr_el0
   1e6c8:	str	w2, [x1, x0]
   1e6cc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1e6d0:	ldr	x2, [x0, #2528]
   1e6d4:	add	x0, x0, #0x9e0
   1e6d8:	blr	x2
   1e6dc:	ldr	x2, [x29, #120]
   1e6e0:	str	x2, [x1, x0]
   1e6e4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1e6e8:	ldr	x2, [x0, #2560]
   1e6ec:	add	x0, x0, #0xa00
   1e6f0:	blr	x2
   1e6f4:	ldr	x2, [x29, #112]
   1e6f8:	str	x2, [x1, x0]
   1e6fc:	sub	sp, x29, #0x10
   1e700:	mov	w0, w19
   1e704:	ldp	x29, x30, [sp, #16]
   1e708:	ldp	x19, x20, [sp, #32]
   1e70c:	ldp	x21, x22, [sp, #48]
   1e710:	ldp	x23, x24, [sp, #64]
   1e714:	ldp	x25, x26, [sp, #80]
   1e718:	ldp	x27, x28, [sp, #96]
   1e71c:	add	sp, sp, #0x280
   1e720:	ret
   1e724:	ldr	x1, [x29, #144]
   1e728:	cbz	x1, 1e6b0 <mpfr_vasnprintf_aux@@Base+0x1cb0>
   1e72c:	ldr	x2, [x29, #192]
   1e730:	sxtw	x20, w0
   1e734:	ldr	x1, [x29, #352]
   1e738:	cmp	x2, w0, sxtw
   1e73c:	b.ls	1e764 <mpfr_vasnprintf_aux@@Base+0x1d64>  // b.plast
   1e740:	ldr	x0, [x29, #168]
   1e744:	mov	x2, x20
   1e748:	bl	cb60 <strncpy@plt>
   1e74c:	ldr	x0, [x29, #168]
   1e750:	strb	wzr, [x0, x20]
   1e754:	ldr	x0, [x29, #352]
   1e758:	ldr	x1, [x29, #368]
   1e75c:	bl	ccc0 <mpfr_free_func@plt>
   1e760:	b	1e6b0 <mpfr_vasnprintf_aux@@Base+0x1cb0>
   1e764:	ldr	x0, [x29, #192]
   1e768:	sub	x20, x0, #0x1
   1e76c:	b	1e740 <mpfr_vasnprintf_aux@@Base+0x1d40>
   1e770:	ldr	x0, [x29, #144]
   1e774:	mov	w19, #0xffffffff            	// #-1
   1e778:	cbz	x0, 1e6fc <mpfr_vasnprintf_aux@@Base+0x1cfc>
   1e77c:	b	1d09c <mpfr_vasnprintf_aux@@Base+0x69c>
   1e780:	cmp	w28, #0x1
   1e784:	b.eq	1de34 <mpfr_vasnprintf_aux@@Base+0x1434>  // b.none
   1e788:	mov	x0, #0x4                   	// #4
   1e78c:	b	1dd60 <mpfr_vasnprintf_aux@@Base+0x1360>

000000000001e790 <mpfr_const_pi_internal@@Base>:
   1e790:	stp	x29, x30, [sp, #-432]!
   1e794:	mov	x2, #0x9                   	// #9
   1e798:	mov	x29, sp
   1e79c:	stp	x27, x28, [sp, #80]
   1e7a0:	ldr	x27, [x0]
   1e7a4:	str	w1, [sp, #116]
   1e7a8:	stp	x19, x20, [sp, #16]
   1e7ac:	add	x1, x27, #0x10
   1e7b0:	stp	x21, x22, [sp, #32]
   1e7b4:	mov	x22, #0x2                   	// #2
   1e7b8:	stp	x23, x24, [sp, #48]
   1e7bc:	stp	x25, x26, [sp, #64]
   1e7c0:	str	x0, [sp, #104]
   1e7c4:	sdiv	x0, x1, x2
   1e7c8:	add	x1, x1, #0x2
   1e7cc:	asr	x0, x0, x22
   1e7d0:	cbnz	x0, 1e7f0 <mpfr_const_pi_internal@@Base+0x60>
   1e7d4:	add	x19, x22, x22, lsl #1
   1e7d8:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   1e7dc:	add	x19, x19, x27
   1e7e0:	add	x24, x19, #0xe
   1e7e4:	cmp	x24, x0
   1e7e8:	b.lt	1e7f8 <mpfr_const_pi_internal@@Base+0x68>  // b.tstop
   1e7ec:	bl	c970 <mpfr_abort_prec_max@plt>
   1e7f0:	add	x22, x22, #0x1
   1e7f4:	b	1e7c4 <mpfr_const_pi_internal@@Base+0x34>
   1e7f8:	add	x19, x19, #0xd
   1e7fc:	mov	x0, #0x40                  	// #64
   1e800:	sdiv	x19, x19, x0
   1e804:	add	x19, x19, #0x1
   1e808:	add	x0, x19, x19, lsl #2
   1e80c:	cmp	x0, #0x10
   1e810:	b.le	1e9f0 <mpfr_const_pi_internal@@Base+0x260>
   1e814:	mov	x0, #0x28                  	// #40
   1e818:	mul	x0, x19, x0
   1e81c:	str	x0, [sp, #288]
   1e820:	bl	cd90 <mpfr_allocate_func@plt>
   1e824:	str	x0, [sp, #296]
   1e828:	add	x21, sp, #0x80
   1e82c:	add	x20, sp, #0xa0
   1e830:	add	x26, sp, #0xe0
   1e834:	ldr	x1, [sp, #296]
   1e838:	mov	w0, #0x1                   	// #1
   1e83c:	mov	x23, #0x40                  	// #64
   1e840:	str	x24, [sp, #128]
   1e844:	str	w0, [sp, #136]
   1e848:	add	x2, x1, x19, lsl #3
   1e84c:	str	x2, [sp, #184]
   1e850:	add	x2, x1, x19, lsl #4
   1e854:	str	x2, [sp, #216]
   1e858:	mov	x2, #0x18                  	// #24
   1e85c:	str	x1, [sp, #152]
   1e860:	str	x24, [sp, #160]
   1e864:	madd	x2, x19, x2, x1
   1e868:	add	x19, x1, x19, lsl #5
   1e86c:	str	x19, [sp, #280]
   1e870:	add	x19, sp, #0xc0
   1e874:	str	w0, [sp, #168]
   1e878:	str	x24, [sp, #192]
   1e87c:	str	w0, [sp, #200]
   1e880:	str	x24, [sp, #224]
   1e884:	str	w0, [sp, #232]
   1e888:	str	x2, [sp, #248]
   1e88c:	str	x24, [sp, #256]
   1e890:	str	w0, [sp, #264]
   1e894:	mov	w3, #0x0                   	// #0
   1e898:	mov	x2, #0x0                   	// #0
   1e89c:	mov	x1, #0x1                   	// #1
   1e8a0:	mov	x0, x21
   1e8a4:	add	x25, sp, #0x100
   1e8a8:	bl	c680 <mpfr_set_ui_2exp@plt>
   1e8ac:	mov	w3, #0x0                   	// #0
   1e8b0:	mov	x2, #0x0                   	// #0
   1e8b4:	mov	x1, #0x1                   	// #1
   1e8b8:	mov	x0, x20
   1e8bc:	mov	x28, #0x0                   	// #0
   1e8c0:	bl	c680 <mpfr_set_ui_2exp@plt>
   1e8c4:	mov	w3, #0x0                   	// #0
   1e8c8:	mov	x2, #0xffffffffffffffff    	// #-1
   1e8cc:	mov	x1, #0x1                   	// #1
   1e8d0:	mov	x0, x19
   1e8d4:	bl	c680 <mpfr_set_ui_2exp@plt>
   1e8d8:	mov	x0, x26
   1e8dc:	mov	w3, #0x0                   	// #0
   1e8e0:	mov	x2, #0xfffffffffffffffe    	// #-2
   1e8e4:	mov	x1, #0x1                   	// #1
   1e8e8:	bl	c680 <mpfr_set_ui_2exp@plt>
   1e8ec:	mov	x2, x19
   1e8f0:	mov	x1, x20
   1e8f4:	mov	w3, #0x0                   	// #0
   1e8f8:	mov	x0, x25
   1e8fc:	bl	c230 <mpfr_add@plt>
   1e900:	mov	w3, #0x0                   	// #0
   1e904:	mov	x1, x25
   1e908:	mov	x2, #0x2                   	// #2
   1e90c:	mov	x0, x25
   1e910:	bl	c980 <mpfr_div_2ui@plt>
   1e914:	mov	x1, x19
   1e918:	mov	w2, #0x0                   	// #0
   1e91c:	mov	x0, x19
   1e920:	bl	c9c0 <mpfr_sqrt@plt>
   1e924:	mov	x2, x19
   1e928:	mov	x1, x21
   1e92c:	mov	w3, #0x0                   	// #0
   1e930:	mov	x0, x21
   1e934:	bl	c230 <mpfr_add@plt>
   1e938:	mov	x1, x21
   1e93c:	mov	w3, #0x0                   	// #0
   1e940:	mov	x2, #0x1                   	// #1
   1e944:	mov	x0, x21
   1e948:	bl	c980 <mpfr_div_2ui@plt>
   1e94c:	mov	x2, x21
   1e950:	mov	x1, x21
   1e954:	mov	w3, #0x0                   	// #0
   1e958:	mov	x0, x20
   1e95c:	bl	bdd0 <mpfr_mul@plt>
   1e960:	mov	x2, x25
   1e964:	mov	x1, x20
   1e968:	mov	w3, #0x0                   	// #0
   1e96c:	mov	x0, x19
   1e970:	bl	bbf0 <mpfr_sub@plt>
   1e974:	mov	x1, x19
   1e978:	mov	w3, #0x0                   	// #0
   1e97c:	mov	x2, #0x1                   	// #1
   1e980:	mov	x0, x19
   1e984:	bl	c350 <mpfr_mul_2ui@plt>
   1e988:	mov	x2, x19
   1e98c:	mov	x1, x20
   1e990:	mov	w3, #0x0                   	// #0
   1e994:	mov	x0, x25
   1e998:	bl	bbf0 <mpfr_sub@plt>
   1e99c:	ldr	x0, [sp, #272]
   1e9a0:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   1e9a4:	mov	x2, x28
   1e9a8:	mov	w3, #0x0                   	// #0
   1e9ac:	cmp	x0, x1
   1e9b0:	mov	x1, x25
   1e9b4:	csneg	x7, x24, x0, eq  // eq = none
   1e9b8:	mov	x0, x25
   1e9bc:	str	x7, [sp, #120]
   1e9c0:	bl	c350 <mpfr_mul_2ui@plt>
   1e9c4:	mov	x2, x25
   1e9c8:	mov	x1, x26
   1e9cc:	mov	x0, x26
   1e9d0:	mov	w3, #0x0                   	// #0
   1e9d4:	bl	bbf0 <mpfr_sub@plt>
   1e9d8:	ldr	x7, [sp, #120]
   1e9dc:	sub	x0, x24, x28
   1e9e0:	cmp	x0, x7
   1e9e4:	b.le	1e9fc <mpfr_const_pi_internal@@Base+0x26c>
   1e9e8:	add	x28, x28, #0x1
   1e9ec:	b	1e8ec <mpfr_const_pi_internal@@Base+0x15c>
   1e9f0:	add	x0, sp, #0x130
   1e9f4:	str	xzr, [sp, #288]
   1e9f8:	b	1e824 <mpfr_const_pi_internal@@Base+0x94>
   1e9fc:	mov	x1, x19
   1ea00:	mov	x2, x26
   1ea04:	mov	x0, x20
   1ea08:	mov	w3, #0x0                   	// #0
   1ea0c:	bl	c6b0 <mpfr_div@plt>
   1ea10:	ldr	x1, [sp, #176]
   1ea14:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   1ea18:	cmp	x1, x0
   1ea1c:	b.gt	1ea50 <mpfr_const_pi_internal@@Base+0x2c0>
   1ea20:	add	x4, x24, x22
   1ea24:	mov	x0, #0xfffffffffffffeff    	// #-257
   1ea28:	movk	x0, #0x7fff, lsl #48
   1ea2c:	sub	x0, x0, x4
   1ea30:	cmp	x0, x23
   1ea34:	b.ge	1eac8 <mpfr_const_pi_internal@@Base+0x338>  // b.tcont
   1ea38:	adrp	x2, 53000 <mpfr_free_pool@@Base+0x1eec>
   1ea3c:	adrp	x0, 55000 <mpfr_free_pool@@Base+0x3eec>
   1ea40:	add	x2, x2, #0x952
   1ea44:	add	x0, x0, #0xf27
   1ea48:	mov	w1, #0x6c                  	// #108
   1ea4c:	bl	cbd0 <mpfr_assert_fail@plt>
   1ea50:	ldr	w0, [sp, #116]
   1ea54:	sub	x2, x24, x28, lsl #1
   1ea58:	ldr	x1, [sp, #160]
   1ea5c:	cmp	w0, #0x0
   1ea60:	ldr	x0, [sp, #184]
   1ea64:	sub	x1, x1, #0x1
   1ea68:	sub	x2, x2, #0x8
   1ea6c:	cinc	x3, x27, eq  // eq = none
   1ea70:	asr	x1, x1, #6
   1ea74:	add	x1, x1, #0x1
   1ea78:	bl	c400 <mpfr_round_p@plt>
   1ea7c:	cbz	w0, 1ea20 <mpfr_const_pi_internal@@Base+0x290>
   1ea80:	ldr	w2, [sp, #116]
   1ea84:	mov	x1, x20
   1ea88:	ldr	w3, [sp, #168]
   1ea8c:	ldr	x0, [sp, #104]
   1ea90:	bl	c730 <mpfr_set4@plt>
   1ea94:	mov	w19, w0
   1ea98:	ldr	x1, [sp, #288]
   1ea9c:	cbz	x1, 1eaa8 <mpfr_const_pi_internal@@Base+0x318>
   1eaa0:	ldr	x0, [sp, #296]
   1eaa4:	bl	ccc0 <mpfr_free_func@plt>
   1eaa8:	mov	w0, w19
   1eaac:	ldp	x19, x20, [sp, #16]
   1eab0:	ldp	x21, x22, [sp, #32]
   1eab4:	ldp	x23, x24, [sp, #48]
   1eab8:	ldp	x25, x26, [sp, #64]
   1eabc:	ldp	x27, x28, [sp, #80]
   1eac0:	ldp	x29, x30, [sp], #432
   1eac4:	ret
   1eac8:	add	x24, x23, x4
   1eacc:	mov	x23, #0x2                   	// #2
   1ead0:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   1ead4:	cmp	x24, x0
   1ead8:	ldr	x1, [sp, #288]
   1eadc:	sdiv	x23, x24, x23
   1eae0:	b.ge	1e7ec <mpfr_const_pi_internal@@Base+0x5c>  // b.tcont
   1eae4:	sub	x0, x24, #0x1
   1eae8:	asr	x2, x0, #6
   1eaec:	mov	x0, #0x28                  	// #40
   1eaf0:	add	x28, x2, #0x1
   1eaf4:	madd	x0, x2, x0, x0
   1eaf8:	str	x0, [sp, #288]
   1eafc:	cbnz	x1, 1eb64 <mpfr_const_pi_internal@@Base+0x3d4>
   1eb00:	bl	cd90 <mpfr_allocate_func@plt>
   1eb04:	str	x0, [sp, #296]
   1eb08:	mov	w0, #0x1                   	// #1
   1eb0c:	str	x24, [sp, #128]
   1eb10:	ldr	x1, [sp, #296]
   1eb14:	str	w0, [sp, #136]
   1eb18:	str	x1, [sp, #152]
   1eb1c:	str	x24, [sp, #160]
   1eb20:	add	x2, x1, x28, lsl #3
   1eb24:	str	x2, [sp, #184]
   1eb28:	add	x2, x1, x28, lsl #4
   1eb2c:	str	x2, [sp, #216]
   1eb30:	mov	x2, #0x18                  	// #24
   1eb34:	str	w0, [sp, #168]
   1eb38:	str	x24, [sp, #192]
   1eb3c:	madd	x2, x28, x2, x1
   1eb40:	add	x28, x1, x28, lsl #5
   1eb44:	str	w0, [sp, #200]
   1eb48:	str	x24, [sp, #224]
   1eb4c:	str	w0, [sp, #232]
   1eb50:	str	x2, [sp, #248]
   1eb54:	str	x24, [sp, #256]
   1eb58:	str	w0, [sp, #264]
   1eb5c:	str	x28, [sp, #280]
   1eb60:	b	1e894 <mpfr_const_pi_internal@@Base+0x104>
   1eb64:	mov	x2, x0
   1eb68:	ldr	x0, [sp, #296]
   1eb6c:	bl	c250 <mpfr_reallocate_func@plt>
   1eb70:	b	1eb04 <mpfr_const_pi_internal@@Base+0x374>

000000000001eb74 <mpfr_const_pi@@Base>:
   1eb74:	stp	x29, x30, [sp, #-16]!
   1eb78:	mov	x3, x0
   1eb7c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1eb80:	ldr	x2, [x0, #2640]
   1eb84:	add	x0, x0, #0xa50
   1eb88:	blr	x2
   1eb8c:	mov	x29, sp
   1eb90:	ldp	x29, x30, [sp], #16
   1eb94:	mov	w2, w1
   1eb98:	mrs	x1, tpidr_el0
   1eb9c:	add	x1, x1, x0
   1eba0:	mov	x0, x3
   1eba4:	b	c410 <mpfr_cache@plt>

000000000001eba8 <mpfr_pow_general@@Base>:
   1eba8:	stp	x29, x30, [sp, #-368]!
   1ebac:	mov	x29, sp
   1ebb0:	stp	x19, x20, [sp, #16]
   1ebb4:	mov	x20, x0
   1ebb8:	ldr	x0, [x0]
   1ebbc:	str	x0, [sp, #128]
   1ebc0:	ldr	x0, [x1]
   1ebc4:	str	x0, [sp, #304]
   1ebc8:	ldr	x0, [x1, #16]
   1ebcc:	str	x0, [sp, #320]
   1ebd0:	ldr	x0, [x1, #24]
   1ebd4:	str	x0, [sp, #328]
   1ebd8:	ldr	w0, [x1, #8]
   1ebdc:	stp	x21, x22, [sp, #32]
   1ebe0:	mov	w21, #0x1                   	// #1
   1ebe4:	mov	w22, w3
   1ebe8:	stp	x23, x24, [sp, #48]
   1ebec:	mov	x24, x5
   1ebf0:	stp	x25, x26, [sp, #64]
   1ebf4:	mov	x25, x2
   1ebf8:	stp	x27, x28, [sp, #80]
   1ebfc:	str	w4, [sp, #164]
   1ec00:	str	w21, [sp, #312]
   1ec04:	tbnz	w0, #31, 1ec38 <mpfr_pow_general@@Base+0x90>
   1ec08:	str	wzr, [sp, #160]
   1ec0c:	ldr	x0, [sp, #128]
   1ec10:	add	x23, x0, #0x9
   1ec14:	cmp	x0, #0x1
   1ec18:	b.eq	1edc0 <mpfr_pow_general@@Base+0x218>  // b.none
   1ec1c:	b.gt	1ec68 <mpfr_pow_general@@Base+0xc0>
   1ec20:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   1ec24:	add	x2, x2, #0xf32
   1ec28:	mov	w1, #0x9f                  	// #159
   1ec2c:	adrp	x0, 55000 <mpfr_free_pool@@Base+0x3eec>
   1ec30:	add	x0, x0, #0xf3b
   1ec34:	bl	cbd0 <mpfr_assert_fail@plt>
   1ec38:	mov	x0, x2
   1ec3c:	bl	cd40 <mpfr_odd_p@plt>
   1ec40:	cbz	w0, 1ec08 <mpfr_pow_general@@Base+0x60>
   1ec44:	str	w21, [sp, #160]
   1ec48:	cmp	w22, #0x2
   1ec4c:	b.eq	1ec60 <mpfr_pow_general@@Base+0xb8>  // b.none
   1ec50:	cmp	w22, #0x3
   1ec54:	b.ne	1ec0c <mpfr_pow_general@@Base+0x64>  // b.any
   1ec58:	mov	w22, #0x2                   	// #2
   1ec5c:	b	1ec0c <mpfr_pow_general@@Base+0x64>
   1ec60:	mov	w22, #0x3                   	// #3
   1ec64:	b	1ec0c <mpfr_pow_general@@Base+0x64>
   1ec68:	ldr	x0, [sp, #128]
   1ec6c:	sub	x0, x0, #0x1
   1ec70:	clz	x1, x0
   1ec74:	mov	w0, #0x40                  	// #64
   1ec78:	sub	w0, w0, w1
   1ec7c:	sxtw	x0, w0
   1ec80:	add	x23, x23, x0
   1ec84:	add	x21, sp, #0xd0
   1ec88:	mov	x0, x21
   1ec8c:	mov	x1, x23
   1ec90:	bl	cb10 <mpfr_init2@plt>
   1ec94:	add	x28, sp, #0xf0
   1ec98:	mov	x0, #0x40                  	// #64
   1ec9c:	add	x26, sp, #0x110
   1eca0:	mov	w27, #0x0                   	// #0
   1eca4:	str	wzr, [sp, #116]
   1eca8:	str	x0, [sp, #144]
   1ecac:	add	x0, sp, #0x130
   1ecb0:	str	x0, [sp, #136]
   1ecb4:	ldr	w2, [x25, #8]
   1ecb8:	mov	x0, x21
   1ecbc:	ldr	x1, [sp, #136]
   1ecc0:	lsr	w2, w2, #31
   1ecc4:	add	w2, w2, #0x2
   1ecc8:	bl	c110 <mpfr_log@plt>
   1eccc:	mov	x2, x21
   1ecd0:	mov	x1, x25
   1ecd4:	mov	x0, x21
   1ecd8:	mov	w3, #0x2                   	// #2
   1ecdc:	bl	bdd0 <mpfr_mul@plt>
   1ece0:	mrs	x0, tpidr_el0
   1ece4:	str	x0, [sp, #104]
   1ece8:	ldr	w0, [sp, #116]
   1ecec:	cbz	w0, 1ed3c <mpfr_pow_general@@Base+0x194>
   1ecf0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1ecf4:	ldr	x1, [x0, #2576]
   1ecf8:	add	x0, x0, #0xa10
   1ecfc:	blr	x1
   1ed00:	mov	w2, #0x3                   	// #3
   1ed04:	ldr	x1, [sp, #104]
   1ed08:	add	x1, x1, x0
   1ed0c:	mov	x0, x28
   1ed10:	bl	c410 <mpfr_cache@plt>
   1ed14:	mov	x2, x26
   1ed18:	mov	x1, x28
   1ed1c:	mov	w3, #0x3                   	// #3
   1ed20:	mov	x0, x28
   1ed24:	bl	bdd0 <mpfr_mul@plt>
   1ed28:	mov	x2, x28
   1ed2c:	mov	x1, x21
   1ed30:	mov	x0, x21
   1ed34:	mov	w3, #0x2                   	// #2
   1ed38:	bl	bbf0 <mpfr_sub@plt>
   1ed3c:	ldr	x4, [sp, #224]
   1ed40:	mov	x0, #0xfffffffffffffffe    	// #-2
   1ed44:	cmn	x4, #0x2
   1ed48:	csel	x4, x4, x0, ge  // ge = tcont
   1ed4c:	ldr	w0, [sp, #116]
   1ed50:	add	x19, x4, #0x3
   1ed54:	cbz	w0, 1ed68 <mpfr_pow_general@@Base+0x1c0>
   1ed58:	ldr	x0, [sp, #288]
   1ed5c:	cmp	x0, x19
   1ed60:	csel	x4, x0, x19, ge  // ge = tcont
   1ed64:	add	x19, x4, #0x1
   1ed68:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1ed6c:	ldr	x1, [x0, #2592]
   1ed70:	add	x0, x0, #0xa20
   1ed74:	blr	x1
   1ed78:	mov	w2, #0x0                   	// #0
   1ed7c:	ldr	x1, [sp, #104]
   1ed80:	add	x3, x1, x0
   1ed84:	str	x3, [sp, #120]
   1ed88:	str	wzr, [x1, x0]
   1ed8c:	mov	x1, x21
   1ed90:	mov	x0, x21
   1ed94:	bl	c7e0 <mpfr_exp@plt>
   1ed98:	ldr	x3, [sp, #120]
   1ed9c:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   1eda0:	ldr	x0, [sp, #224]
   1eda4:	ldr	w1, [x3]
   1eda8:	cmp	x0, x2
   1edac:	b.le	1edc8 <mpfr_pow_general@@Base+0x220>
   1edb0:	tbz	w1, #0, 1ef8c <mpfr_pow_general@@Base+0x3e4>
   1edb4:	ldr	w0, [sp, #116]
   1edb8:	cbz	w0, 1ee08 <mpfr_pow_general@@Base+0x260>
   1edbc:	b	1edd0 <mpfr_pow_general@@Base+0x228>
   1edc0:	mov	x0, #0x0                   	// #0
   1edc4:	b	1ec80 <mpfr_pow_general@@Base+0xd8>
   1edc8:	ldr	w1, [sp, #116]
   1edcc:	cbz	w1, 1ede0 <mpfr_pow_general@@Base+0x238>
   1edd0:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   1edd4:	mov	w1, #0xcd                  	// #205
   1edd8:	add	x2, x2, #0xf41
   1eddc:	b	1ec2c <mpfr_pow_general@@Base+0x84>
   1ede0:	mov	x1, #0x2                   	// #2
   1ede4:	movk	x1, #0x8000, lsl #48
   1ede8:	cmp	x0, x1
   1edec:	b.ne	1ee08 <mpfr_pow_general@@Base+0x260>  // b.any
   1edf0:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   1edf4:	adrp	x0, 55000 <mpfr_free_pool@@Base+0x3eec>
   1edf8:	add	x2, x2, #0xf4d
   1edfc:	add	x0, x0, #0xf3b
   1ee00:	mov	w1, #0xce                  	// #206
   1ee04:	bl	cbd0 <mpfr_assert_fail@plt>
   1ee08:	ldr	x0, [sp, #224]
   1ee0c:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   1ee10:	cmp	x0, x1
   1ee14:	b.ne	1ee88 <mpfr_pow_general@@Base+0x2e0>  // b.any
   1ee18:	cmp	w22, #0x0
   1ee1c:	mov	w2, #0x1                   	// #1
   1ee20:	mov	x0, x20
   1ee24:	csel	w1, w22, w2, ne  // ne = any
   1ee28:	bl	c450 <mpfr_underflow@plt>
   1ee2c:	str	w0, [sp, #96]
   1ee30:	cbz	x24, 1ee44 <mpfr_pow_general@@Base+0x29c>
   1ee34:	ldr	w0, [x24]
   1ee38:	mov	w1, #0x9                   	// #9
   1ee3c:	orr	w0, w0, w1
   1ee40:	str	w0, [x24]
   1ee44:	mov	x0, x21
   1ee48:	bl	c0f0 <mpfr_clear@plt>
   1ee4c:	ldr	w0, [sp, #160]
   1ee50:	cbz	w0, 1ee68 <mpfr_pow_general@@Base+0x2c0>
   1ee54:	mov	w0, #0xffffffff            	// #-1
   1ee58:	str	w0, [x20, #8]
   1ee5c:	ldr	w0, [sp, #96]
   1ee60:	neg	w0, w0
   1ee64:	str	w0, [sp, #96]
   1ee68:	ldr	w0, [sp, #96]
   1ee6c:	ldp	x19, x20, [sp, #16]
   1ee70:	ldp	x21, x22, [sp, #32]
   1ee74:	ldp	x23, x24, [sp, #48]
   1ee78:	ldp	x25, x26, [sp, #64]
   1ee7c:	ldp	x27, x28, [sp, #80]
   1ee80:	ldp	x29, x30, [sp], #368
   1ee84:	ret
   1ee88:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   1ee8c:	cmp	x0, x1
   1ee90:	b.ne	1ef1c <mpfr_pow_general@@Base+0x374>  // b.any
   1ee94:	ldr	w2, [x25, #8]
   1ee98:	mov	x0, x21
   1ee9c:	ldr	x1, [sp, #136]
   1eea0:	mvn	w2, w2
   1eea4:	lsr	w2, w2, #31
   1eea8:	add	w2, w2, #0x2
   1eeac:	bl	c110 <mpfr_log@plt>
   1eeb0:	mov	x1, x25
   1eeb4:	mov	x2, x21
   1eeb8:	mov	w3, #0x3                   	// #3
   1eebc:	mov	x0, x21
   1eec0:	bl	bdd0 <mpfr_mul@plt>
   1eec4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1eec8:	ldr	x1, [x0, #2592]
   1eecc:	add	x0, x0, #0xa20
   1eed0:	blr	x1
   1eed4:	mov	w2, #0x3                   	// #3
   1eed8:	ldr	x1, [sp, #104]
   1eedc:	add	x19, x1, x0
   1eee0:	str	wzr, [x1, x0]
   1eee4:	mov	x1, x21
   1eee8:	mov	x0, x21
   1eeec:	bl	c7e0 <mpfr_exp@plt>
   1eef0:	ldr	w0, [x19]
   1eef4:	tbz	w0, #1, 1ef1c <mpfr_pow_general@@Base+0x374>
   1eef8:	mov	w1, w22
   1eefc:	mov	x0, x20
   1ef00:	mov	w2, #0x1                   	// #1
   1ef04:	bl	bfc0 <mpfr_overflow@plt>
   1ef08:	str	w0, [sp, #96]
   1ef0c:	cbz	x24, 1ee44 <mpfr_pow_general@@Base+0x29c>
   1ef10:	ldr	w0, [x24]
   1ef14:	mov	w1, #0xa                   	// #10
   1ef18:	b	1ee3c <mpfr_pow_general@@Base+0x294>
   1ef1c:	cmp	x23, #0x3f
   1ef20:	b.gt	1ef34 <mpfr_pow_general@@Base+0x38c>
   1ef24:	mov	x23, #0x40                  	// #64
   1ef28:	mov	x0, x21
   1ef2c:	mov	x1, #0x40                  	// #64
   1ef30:	bl	bf50 <mpfr_set_prec@plt>
   1ef34:	mov	x1, x23
   1ef38:	mov	x0, x28
   1ef3c:	bl	cb10 <mpfr_init2@plt>
   1ef40:	mov	x0, x26
   1ef44:	mov	x1, #0x40                  	// #64
   1ef48:	bl	cb10 <mpfr_init2@plt>
   1ef4c:	ldr	x1, [sp, #136]
   1ef50:	mov	w2, #0x0                   	// #0
   1ef54:	mov	x0, x26
   1ef58:	bl	c260 <mpfr_log2@plt>
   1ef5c:	mov	w3, #0x0                   	// #0
   1ef60:	mov	x2, x26
   1ef64:	mov	x1, x25
   1ef68:	mov	x0, x26
   1ef6c:	bl	bdd0 <mpfr_mul@plt>
   1ef70:	mov	x1, x26
   1ef74:	mov	x0, x26
   1ef78:	mov	w2, #0xffffffff            	// #-1
   1ef7c:	bl	c390 <mpfr_rint@plt>
   1ef80:	mov	w0, #0x1                   	// #1
   1ef84:	str	w0, [sp, #116]
   1ef88:	b	1ecb4 <mpfr_pow_general@@Base+0x10c>
   1ef8c:	ldr	x0, [sp, #128]
   1ef90:	cmp	w22, #0x0
   1ef94:	ldr	x1, [sp, #208]
   1ef98:	cinc	x3, x0, eq  // eq = none
   1ef9c:	ldr	x0, [sp, #232]
   1efa0:	sub	x1, x1, #0x1
   1efa4:	sub	x2, x23, x19
   1efa8:	asr	x1, x1, #6
   1efac:	add	x1, x1, #0x1
   1efb0:	bl	c400 <mpfr_round_p@plt>
   1efb4:	cbz	w0, 1f07c <mpfr_pow_general@@Base+0x4d4>
   1efb8:	ldr	w3, [sp, #216]
   1efbc:	mov	w2, w22
   1efc0:	mov	x1, x21
   1efc4:	mov	x0, x20
   1efc8:	bl	c730 <mpfr_set4@plt>
   1efcc:	str	w0, [sp, #96]
   1efd0:	ldr	w0, [sp, #116]
   1efd4:	cbz	w0, 1ee44 <mpfr_pow_general@@Base+0x29c>
   1efd8:	add	x23, sp, #0x110
   1efdc:	mov	w1, #0x0                   	// #0
   1efe0:	mov	x0, x23
   1efe4:	bl	c220 <mpfr_get_si@plt>
   1efe8:	mov	x26, x0
   1efec:	cbnz	w22, 1f048 <mpfr_pow_general@@Base+0x4a0>
   1eff0:	ldr	w0, [sp, #96]
   1eff4:	tbz	w0, #31, 1f048 <mpfr_pow_general@@Base+0x4a0>
   1eff8:	tbz	x26, #63, 1f048 <mpfr_pow_general@@Base+0x4a0>
   1effc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1f000:	ldr	x1, [x0, #2528]
   1f004:	add	x0, x0, #0x9e0
   1f008:	blr	x1
   1f00c:	ldr	x1, [sp, #104]
   1f010:	ldr	x0, [x1, x0]
   1f014:	ldr	x1, [x20, #16]
   1f018:	sub	x0, x0, #0x1
   1f01c:	sub	x0, x0, x26
   1f020:	cmp	x1, x0
   1f024:	b.ne	1f048 <mpfr_pow_general@@Base+0x4a0>  // b.any
   1f028:	mov	x0, x20
   1f02c:	bl	bf80 <mpfr_powerof2_raw@plt>
   1f030:	cbz	w0, 1f048 <mpfr_pow_general@@Base+0x4a0>
   1f034:	ldr	x1, [x20]
   1f038:	cmp	x1, #0x1
   1f03c:	b.le	1f2b8 <mpfr_pow_general@@Base+0x710>
   1f040:	mov	x0, x20
   1f044:	bl	c1b0 <mpfr_nextabove@plt>
   1f048:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1f04c:	ldr	x1, [x0, #2592]
   1f050:	add	x0, x0, #0xa20
   1f054:	blr	x1
   1f058:	mov	w3, w22
   1f05c:	ldr	x1, [sp, #104]
   1f060:	mov	x2, x26
   1f064:	str	wzr, [x1, x0]
   1f068:	mov	x1, x20
   1f06c:	mov	x0, x20
   1f070:	bl	bc10 <mpfr_mul_2si@plt>
   1f074:	mov	w22, w0
   1f078:	b	1f304 <mpfr_pow_general@@Base+0x75c>
   1f07c:	ldr	w0, [sp, #164]
   1f080:	orr	w0, w27, w0
   1f084:	cbnz	w0, 1f094 <mpfr_pow_general@@Base+0x4ec>
   1f088:	ldr	w0, [x25, #8]
   1f08c:	tbz	w0, #31, 1f0bc <mpfr_pow_general@@Base+0x514>
   1f090:	mov	w27, #0x1                   	// #1
   1f094:	ldr	x1, [sp, #144]
   1f098:	mov	x0, #0xfffffffffffffeff    	// #-257
   1f09c:	movk	x0, #0x7fff, lsl #48
   1f0a0:	sub	x0, x0, x23
   1f0a4:	cmp	x0, x1
   1f0a8:	b.ge	1f280 <mpfr_pow_general@@Base+0x6d8>  // b.tcont
   1f0ac:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   1f0b0:	mov	w1, #0x113                 	// #275
   1f0b4:	add	x2, x2, #0xf86
   1f0b8:	b	1ec2c <mpfr_pow_general@@Base+0x84>
   1f0bc:	add	x27, sp, #0xc0
   1f0c0:	mov	x0, x27
   1f0c4:	bl	c010 <mpfr_mpz_init@plt>
   1f0c8:	mov	x1, x25
   1f0cc:	mov	x0, x27
   1f0d0:	bl	cb50 <mpfr_get_z_2exp@plt>
   1f0d4:	mov	x3, x0
   1f0d8:	mov	x1, #0x0                   	// #0
   1f0dc:	mov	x0, x27
   1f0e0:	str	x3, [sp, #120]
   1f0e4:	bl	bb10 <__gmpz_scan1@plt>
   1f0e8:	mov	x2, x0
   1f0ec:	mov	x19, x0
   1f0f0:	mov	x1, x27
   1f0f4:	mov	x0, x27
   1f0f8:	bl	c1c0 <__gmpz_fdiv_q_2exp@plt>
   1f0fc:	ldr	x3, [sp, #120]
   1f100:	add	x0, x3, x19
   1f104:	add	x19, sp, #0xb0
   1f108:	str	x0, [sp, #152]
   1f10c:	mov	x0, x19
   1f110:	bl	c010 <mpfr_mpz_init@plt>
   1f114:	ldr	x1, [sp, #136]
   1f118:	mov	x0, x19
   1f11c:	bl	cb50 <mpfr_get_z_2exp@plt>
   1f120:	mov	x3, x0
   1f124:	mov	x1, #0x0                   	// #0
   1f128:	mov	x0, x19
   1f12c:	str	x3, [sp, #168]
   1f130:	bl	bb10 <__gmpz_scan1@plt>
   1f134:	mov	x2, x0
   1f138:	mov	x1, x19
   1f13c:	mov	x0, x19
   1f140:	str	x2, [sp, #120]
   1f144:	bl	c1c0 <__gmpz_fdiv_q_2exp@plt>
   1f148:	ldr	x2, [sp, #120]
   1f14c:	ldr	x3, [sp, #168]
   1f150:	add	x0, x3, x2
   1f154:	str	x0, [sp, #120]
   1f158:	ldr	x0, [sp, #120]
   1f15c:	tbz	w0, #0, 1f17c <mpfr_pow_general@@Base+0x5d4>
   1f160:	mov	x0, x19
   1f164:	mov	x1, x19
   1f168:	mov	x2, #0x1                   	// #1
   1f16c:	bl	c290 <__gmpz_mul_2exp@plt>
   1f170:	ldr	x0, [sp, #120]
   1f174:	sub	x0, x0, #0x1
   1f178:	str	x0, [sp, #120]
   1f17c:	ldrsw	x1, [sp, #180]
   1f180:	cmp	x1, #0x0
   1f184:	b.gt	1f270 <mpfr_pow_general@@Base+0x6c8>
   1f188:	cset	w1, eq  // eq = none
   1f18c:	cbz	w1, 1f250 <mpfr_pow_general@@Base+0x6a8>
   1f190:	mov	x1, x19
   1f194:	mov	x0, x19
   1f198:	bl	bce0 <__gmpz_sqrt@plt>
   1f19c:	ldr	x0, [sp, #120]
   1f1a0:	mov	x1, #0x2                   	// #2
   1f1a4:	sdiv	x0, x0, x1
   1f1a8:	str	x0, [sp, #120]
   1f1ac:	ldr	x0, [sp, #152]
   1f1b0:	adds	x0, x0, #0x1
   1f1b4:	str	x0, [sp, #152]
   1f1b8:	b.ne	1f158 <mpfr_pow_general@@Base+0x5b0>  // b.any
   1f1bc:	ldr	w1, [sp, #180]
   1f1c0:	mov	x0, #0xfffffffffffffff8    	// #-8
   1f1c4:	ldr	x2, [sp, #184]
   1f1c8:	cmp	w1, #0x0
   1f1cc:	cneg	w1, w1, lt  // lt = tstop
   1f1d0:	add	x5, sp, #0x150
   1f1d4:	str	x5, [sp, #96]
   1f1d8:	add	x0, x0, w1, sxtw #3
   1f1dc:	sbfiz	x1, x1, #6, #32
   1f1e0:	ldr	x0, [x2, x0]
   1f1e4:	clz	x0, x0
   1f1e8:	sub	x1, x1, x0
   1f1ec:	mov	x0, x5
   1f1f0:	bl	cb10 <mpfr_init2@plt>
   1f1f4:	ldr	x5, [sp, #96]
   1f1f8:	mov	x1, x19
   1f1fc:	mov	w2, #0x0                   	// #0
   1f200:	mov	x0, x5
   1f204:	bl	c2d0 <mpfr_set_z@plt>
   1f208:	ldr	x5, [sp, #96]
   1f20c:	mov	w3, #0x0                   	// #0
   1f210:	ldr	x2, [sp, #120]
   1f214:	mov	x1, x5
   1f218:	mov	x0, x5
   1f21c:	bl	bc10 <mpfr_mul_2si@plt>
   1f220:	ldr	x5, [sp, #96]
   1f224:	mov	w3, w22
   1f228:	mov	x2, x27
   1f22c:	mov	x0, x20
   1f230:	mov	x1, x5
   1f234:	str	x5, [sp, #120]
   1f238:	bl	bf70 <mpfr_pow_z@plt>
   1f23c:	str	w0, [sp, #96]
   1f240:	ldr	x5, [sp, #120]
   1f244:	mov	x0, x5
   1f248:	bl	c0f0 <mpfr_clear@plt>
   1f24c:	mov	w1, #0x1                   	// #1
   1f250:	mov	x0, x19
   1f254:	str	w1, [sp, #120]
   1f258:	bl	c200 <mpfr_mpz_clear@plt>
   1f25c:	mov	x0, x27
   1f260:	bl	c200 <mpfr_mpz_clear@plt>
   1f264:	ldr	w1, [sp, #120]
   1f268:	cbz	w1, 1f090 <mpfr_pow_general@@Base+0x4e8>
   1f26c:	b	1efd0 <mpfr_pow_general@@Base+0x428>
   1f270:	ldr	x0, [sp, #184]
   1f274:	bl	cad0 <__gmpn_perfect_square_p@plt>
   1f278:	mov	w1, w0
   1f27c:	b	1f18c <mpfr_pow_general@@Base+0x5e4>
   1f280:	ldr	x0, [sp, #144]
   1f284:	add	x23, x23, x0
   1f288:	mov	x0, #0x2                   	// #2
   1f28c:	mov	x1, x23
   1f290:	sdiv	x0, x23, x0
   1f294:	str	x0, [sp, #144]
   1f298:	mov	x0, x21
   1f29c:	bl	bf50 <mpfr_set_prec@plt>
   1f2a0:	ldr	w0, [sp, #116]
   1f2a4:	cbz	w0, 1ecb4 <mpfr_pow_general@@Base+0x10c>
   1f2a8:	mov	x1, x23
   1f2ac:	mov	x0, x28
   1f2b0:	bl	bf50 <mpfr_set_prec@plt>
   1f2b4:	b	1ecb4 <mpfr_pow_general@@Base+0x10c>
   1f2b8:	add	x25, sp, #0x150
   1f2bc:	add	x1, x1, #0x1
   1f2c0:	mov	x0, x25
   1f2c4:	bl	cb10 <mpfr_init2@plt>
   1f2c8:	ldr	w3, [x20, #8]
   1f2cc:	mov	x1, x20
   1f2d0:	mov	w2, #0x1                   	// #1
   1f2d4:	mov	x0, x25
   1f2d8:	bl	c730 <mpfr_set4@plt>
   1f2dc:	mov	x0, x25
   1f2e0:	bl	c1b0 <mpfr_nextabove@plt>
   1f2e4:	mov	x2, x26
   1f2e8:	mov	x1, x25
   1f2ec:	mov	w3, #0x0                   	// #0
   1f2f0:	mov	x0, x20
   1f2f4:	bl	bc10 <mpfr_mul_2si@plt>
   1f2f8:	mov	w22, w0
   1f2fc:	mov	x0, x25
   1f300:	bl	c0f0 <mpfr_clear@plt>
   1f304:	cbz	w22, 1f348 <mpfr_pow_general@@Base+0x7a0>
   1f308:	cbz	x24, 1f330 <mpfr_pow_general@@Base+0x788>
   1f30c:	ldr	x2, [sp, #104]
   1f310:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1f314:	ldr	x1, [x0, #2592]
   1f318:	add	x0, x0, #0xa20
   1f31c:	blr	x1
   1f320:	ldr	w1, [x24]
   1f324:	ldr	w0, [x2, x0]
   1f328:	orr	w1, w1, w0
   1f32c:	str	w1, [x24]
   1f330:	mov	x1, x23
   1f334:	add	x0, sp, #0xf0
   1f338:	mov	x2, #0x0                   	// #0
   1f33c:	bl	c240 <mpfr_clears@plt>
   1f340:	str	w22, [sp, #96]
   1f344:	b	1ee44 <mpfr_pow_general@@Base+0x29c>
   1f348:	ldr	w22, [sp, #96]
   1f34c:	b	1f330 <mpfr_pow_general@@Base+0x788>

000000000001f350 <mpfr_pow@@Base>:
   1f350:	stp	x29, x30, [sp, #-176]!
   1f354:	mov	x29, sp
   1f358:	stp	x19, x20, [sp, #16]
   1f35c:	ldr	x19, [x1, #16]
   1f360:	stp	x21, x22, [sp, #32]
   1f364:	mov	x21, x0
   1f368:	stp	x23, x24, [sp, #48]
   1f36c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   1f370:	mov	x23, x1
   1f374:	stp	x25, x26, [sp, #64]
   1f378:	mov	x22, x2
   1f37c:	mov	w24, w3
   1f380:	stp	x27, x28, [sp, #80]
   1f384:	cmp	x19, x0
   1f388:	ldr	x20, [x2, #16]
   1f38c:	b.le	1f3d0 <mpfr_pow@@Base+0x80>
   1f390:	cmp	x20, x0
   1f394:	b.gt	1f574 <mpfr_pow@@Base+0x224>
   1f398:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1f39c:	cmp	x20, x0
   1f3a0:	b.eq	1f3dc <mpfr_pow@@Base+0x8c>  // b.none
   1f3a4:	mov	x0, #0x2                   	// #2
   1f3a8:	movk	x0, #0x8000, lsl #48
   1f3ac:	cmp	x20, x0
   1f3b0:	b.ne	1f454 <mpfr_pow@@Base+0x104>  // b.any
   1f3b4:	mov	x0, x23
   1f3b8:	mov	x2, #0x0                   	// #0
   1f3bc:	mov	x1, #0x1                   	// #1
   1f3c0:	bl	bfd0 <mpfr_cmp_ui_2exp@plt>
   1f3c4:	cbz	w0, 1f3dc <mpfr_pow@@Base+0x8c>
   1f3c8:	str	x20, [x21, #16]
   1f3cc:	b	1f40c <mpfr_pow@@Base+0xbc>
   1f3d0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1f3d4:	cmp	x20, x0
   1f3d8:	b.ne	1f3f8 <mpfr_pow@@Base+0xa8>  // b.any
   1f3dc:	mov	w3, w24
   1f3e0:	mov	x0, x21
   1f3e4:	mov	x2, #0x0                   	// #0
   1f3e8:	mov	x1, #0x1                   	// #1
   1f3ec:	bl	c680 <mpfr_set_ui_2exp@plt>
   1f3f0:	mov	w19, w0
   1f3f4:	b	1f434 <mpfr_pow@@Base+0xe4>
   1f3f8:	mov	x0, #0x2                   	// #2
   1f3fc:	movk	x0, #0x8000, lsl #48
   1f400:	cmp	x19, x0
   1f404:	b.ne	1f3a4 <mpfr_pow@@Base+0x54>  // b.any
   1f408:	str	x19, [x21, #16]
   1f40c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1f410:	ldr	x1, [x0, #2592]
   1f414:	add	x0, x0, #0xa20
   1f418:	blr	x1
   1f41c:	mrs	x1, tpidr_el0
   1f420:	add	x0, x1, x0
   1f424:	ldr	w1, [x0]
   1f428:	orr	w1, w1, #0x4
   1f42c:	str	w1, [x0]
   1f430:	mov	w19, #0x0                   	// #0
   1f434:	mov	w0, w19
   1f438:	ldp	x19, x20, [sp, #16]
   1f43c:	ldp	x21, x22, [sp, #32]
   1f440:	ldp	x23, x24, [sp, #48]
   1f444:	ldp	x25, x26, [sp, #64]
   1f448:	ldp	x27, x28, [sp, #80]
   1f44c:	ldp	x29, x30, [sp], #176
   1f450:	ret
   1f454:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   1f458:	cmp	x20, x0
   1f45c:	b.ne	1f4c4 <mpfr_pow@@Base+0x174>  // b.any
   1f460:	cmp	x19, x20
   1f464:	b.ne	1f484 <mpfr_pow@@Base+0x134>  // b.any
   1f468:	ldr	w0, [x22, #8]
   1f46c:	cmp	w0, #0x0
   1f470:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1f474:	csel	x19, x19, x0, gt
   1f478:	str	x19, [x21, #16]
   1f47c:	mov	w0, #0x1                   	// #1
   1f480:	b	1f500 <mpfr_pow@@Base+0x1b0>
   1f484:	adrp	x1, 73000 <__gmpfr_l2b@@Base+0x200>
   1f488:	mov	x0, x23
   1f48c:	ldr	x1, [x1, #3928]
   1f490:	bl	ca40 <mpfr_cmpabs@plt>
   1f494:	ldr	w1, [x22, #8]
   1f498:	mul	w0, w0, w1
   1f49c:	mov	w1, #0x1                   	// #1
   1f4a0:	str	w1, [x21, #8]
   1f4a4:	cmp	w0, #0x0
   1f4a8:	b.le	1f4b4 <mpfr_pow@@Base+0x164>
   1f4ac:	str	x20, [x21, #16]
   1f4b0:	b	1f430 <mpfr_pow@@Base+0xe0>
   1f4b4:	b.eq	1f3dc <mpfr_pow@@Base+0x8c>  // b.none
   1f4b8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1f4bc:	str	x0, [x21, #16]
   1f4c0:	b	1f430 <mpfr_pow@@Base+0xe0>
   1f4c4:	cmp	x19, x0
   1f4c8:	ldr	w0, [x23, #8]
   1f4cc:	b.ne	1f510 <mpfr_pow@@Base+0x1c0>  // b.any
   1f4d0:	tbz	w0, #31, 1f508 <mpfr_pow@@Base+0x1b8>
   1f4d4:	mov	x0, x22
   1f4d8:	bl	cd40 <mpfr_odd_p@plt>
   1f4dc:	cmp	w0, #0x0
   1f4e0:	cset	w0, ne  // ne = any
   1f4e4:	ldr	w1, [x22, #8]
   1f4e8:	cmp	w1, #0x0
   1f4ec:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   1f4f0:	csel	x19, x19, x1, gt
   1f4f4:	str	x19, [x21, #16]
   1f4f8:	cbz	w0, 1f47c <mpfr_pow@@Base+0x12c>
   1f4fc:	mov	w0, #0xffffffff            	// #-1
   1f500:	str	w0, [x21, #8]
   1f504:	b	1f430 <mpfr_pow@@Base+0xe0>
   1f508:	mov	w0, #0x0                   	// #0
   1f50c:	b	1f4e4 <mpfr_pow@@Base+0x194>
   1f510:	tbz	w0, #31, 1f560 <mpfr_pow@@Base+0x210>
   1f514:	mov	x0, x22
   1f518:	bl	cd40 <mpfr_odd_p@plt>
   1f51c:	cmp	w0, #0x0
   1f520:	cset	w2, ne  // ne = any
   1f524:	ldr	w0, [x22, #8]
   1f528:	tbz	w0, #31, 1f568 <mpfr_pow@@Base+0x218>
   1f52c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   1f530:	str	x0, [x21, #16]
   1f534:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1f538:	ldr	x1, [x0, #2592]
   1f53c:	add	x0, x0, #0xa20
   1f540:	blr	x1
   1f544:	mrs	x1, tpidr_el0
   1f548:	add	x0, x1, x0
   1f54c:	ldr	w1, [x0]
   1f550:	orr	w1, w1, #0x20
   1f554:	str	w1, [x0]
   1f558:	cbnz	w2, 1f4fc <mpfr_pow@@Base+0x1ac>
   1f55c:	b	1f47c <mpfr_pow@@Base+0x12c>
   1f560:	mov	w2, #0x0                   	// #0
   1f564:	b	1f524 <mpfr_pow@@Base+0x1d4>
   1f568:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1f56c:	str	x0, [x21, #16]
   1f570:	b	1f558 <mpfr_pow@@Base+0x208>
   1f574:	mov	x0, x2
   1f578:	bl	c1f0 <mpfr_integer_p@plt>
   1f57c:	mov	w25, w0
   1f580:	ldr	w0, [x23, #8]
   1f584:	tbz	w0, #31, 1f59c <mpfr_pow@@Base+0x24c>
   1f588:	cbnz	w25, 1f59c <mpfr_pow@@Base+0x24c>
   1f58c:	mov	x0, #0x2                   	// #2
   1f590:	movk	x0, #0x8000, lsl #48
   1f594:	str	x0, [x21, #16]
   1f598:	b	1f40c <mpfr_pow@@Base+0xbc>
   1f59c:	adrp	x26, 73000 <__gmpfr_l2b@@Base+0x200>
   1f5a0:	mov	x0, x23
   1f5a4:	ldr	x1, [x26, #3928]
   1f5a8:	bl	ca40 <mpfr_cmpabs@plt>
   1f5ac:	mov	w19, w0
   1f5b0:	cbnz	w0, 1f5e8 <mpfr_pow@@Base+0x298>
   1f5b4:	ldr	w0, [x23, #8]
   1f5b8:	tbnz	w0, #31, 1f5d4 <mpfr_pow@@Base+0x284>
   1f5bc:	mov	x1, #0x1                   	// #1
   1f5c0:	mov	w3, w24
   1f5c4:	mov	x0, x21
   1f5c8:	mov	x2, #0x0                   	// #0
   1f5cc:	bl	bb00 <mpfr_set_si_2exp@plt>
   1f5d0:	b	1f3f0 <mpfr_pow@@Base+0xa0>
   1f5d4:	mov	x0, x22
   1f5d8:	bl	cd40 <mpfr_odd_p@plt>
   1f5dc:	cbz	w0, 1f5bc <mpfr_pow@@Base+0x26c>
   1f5e0:	mov	x1, #0xffffffffffffffff    	// #-1
   1f5e4:	b	1f5c0 <mpfr_pow@@Base+0x270>
   1f5e8:	mrs	x20, tpidr_el0
   1f5ec:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1f5f0:	ldr	x1, [x0, #2560]
   1f5f4:	add	x0, x0, #0xa00
   1f5f8:	blr	x1
   1f5fc:	ldr	x1, [x20, x0]
   1f600:	mov	x0, #0x3ffffffe            	// #1073741822
   1f604:	cmp	x1, x0
   1f608:	b.le	1f650 <mpfr_pow@@Base+0x300>
   1f60c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1f610:	ldr	x2, [x0, #2528]
   1f614:	add	x0, x0, #0x9e0
   1f618:	blr	x2
   1f61c:	ldr	x2, [x20, x0]
   1f620:	mov	x0, #0xffffffffc0000001    	// #-1073741823
   1f624:	cmp	x2, x0
   1f628:	b.gt	1f650 <mpfr_pow@@Base+0x300>
   1f62c:	ldr	x0, [x22, #16]
   1f630:	cmp	x0, #0xf
   1f634:	b.gt	1f650 <mpfr_pow@@Base+0x300>
   1f638:	ldr	x0, [x23, #16]
   1f63c:	mov	x3, #0x7ffe                	// #32766
   1f640:	mov	x2, #0xfffd                	// #65533
   1f644:	add	x0, x0, x3
   1f648:	cmp	x0, x2
   1f64c:	b.ls	1fcc8 <mpfr_pow@@Base+0x978>  // b.plast
   1f650:	ldr	w0, [x22, #8]
   1f654:	mul	w0, w19, w0
   1f658:	cmp	w0, #0x0
   1f65c:	b.le	1f7c0 <mpfr_pow@@Base+0x470>
   1f660:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1f664:	ldr	x2, [x0, #2592]
   1f668:	add	x0, x0, #0xa20
   1f66c:	blr	x2
   1f670:	ldr	w0, [x20, x0]
   1f674:	str	w0, [sp, #120]
   1f678:	add	x27, sp, #0x90
   1f67c:	str	x1, [sp, #136]
   1f680:	mov	x1, #0xc000000000000001    	// #-4611686018427387903
   1f684:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1f688:	ldr	x2, [x0, #2528]
   1f68c:	add	x0, x0, #0x9e0
   1f690:	blr	x2
   1f694:	ldr	x2, [x20, x0]
   1f698:	str	x1, [x20, x0]
   1f69c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1f6a0:	ldr	x1, [x0, #2560]
   1f6a4:	add	x0, x0, #0xa00
   1f6a8:	blr	x1
   1f6ac:	str	x2, [sp, #128]
   1f6b0:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   1f6b4:	str	x1, [x20, x0]
   1f6b8:	mov	x0, x27
   1f6bc:	mov	x1, #0x35                  	// #53
   1f6c0:	bl	cb10 <mpfr_init2@plt>
   1f6c4:	ldr	w0, [x23, #8]
   1f6c8:	cmp	w0, #0x0
   1f6cc:	b.le	1f794 <mpfr_pow@@Base+0x444>
   1f6d0:	mov	x1, x23
   1f6d4:	mov	w2, #0x1                   	// #1
   1f6d8:	mov	x0, x27
   1f6dc:	bl	c260 <mpfr_log2@plt>
   1f6e0:	mov	x1, x27
   1f6e4:	mov	x2, x22
   1f6e8:	mov	w3, #0x1                   	// #1
   1f6ec:	mov	x0, x27
   1f6f0:	bl	bdd0 <mpfr_mul@plt>
   1f6f4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1f6f8:	ldr	x1, [x0, #2560]
   1f6fc:	add	x0, x0, #0xa00
   1f700:	blr	x1
   1f704:	add	x3, x20, x0
   1f708:	ldr	x1, [x20, x0]
   1f70c:	mov	x2, #0x0                   	// #0
   1f710:	mov	x0, x27
   1f714:	str	x3, [sp, #104]
   1f718:	bl	c460 <mpfr_cmp_si_2exp@plt>
   1f71c:	mov	w28, w0
   1f720:	mov	x0, x27
   1f724:	bl	c0f0 <mpfr_clear@plt>
   1f728:	ldr	x3, [sp, #104]
   1f72c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1f730:	ldr	x1, [x0, #2592]
   1f734:	add	x0, x0, #0xa20
   1f738:	blr	x1
   1f73c:	ldr	w1, [sp, #120]
   1f740:	str	w1, [x20, x0]
   1f744:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1f748:	ldr	x1, [x0, #2528]
   1f74c:	add	x0, x0, #0x9e0
   1f750:	blr	x1
   1f754:	ldr	x1, [sp, #128]
   1f758:	str	x1, [x20, x0]
   1f75c:	ldr	x0, [sp, #136]
   1f760:	str	x0, [x3]
   1f764:	cmp	w28, #0x0
   1f768:	b.le	1f7c0 <mpfr_pow@@Base+0x470>
   1f76c:	ldr	w0, [x23, #8]
   1f770:	tbz	w0, #31, 1f780 <mpfr_pow@@Base+0x430>
   1f774:	mov	x0, x22
   1f778:	bl	cd40 <mpfr_odd_p@plt>
   1f77c:	cbnz	w0, 1f7b8 <mpfr_pow@@Base+0x468>
   1f780:	mov	w2, #0x1                   	// #1
   1f784:	mov	w1, w24
   1f788:	mov	x0, x21
   1f78c:	bl	bfc0 <mpfr_overflow@plt>
   1f790:	b	1f3f0 <mpfr_pow@@Base+0xa0>
   1f794:	cmp	w19, #0x0
   1f798:	mov	x1, x23
   1f79c:	cset	w2, le
   1f7a0:	mov	x0, x27
   1f7a4:	add	w2, w2, #0x1
   1f7a8:	bl	bdf0 <mpfr_neg@plt>
   1f7ac:	mov	x1, x27
   1f7b0:	mov	w2, #0x1                   	// #1
   1f7b4:	b	1f6d8 <mpfr_pow@@Base+0x388>
   1f7b8:	mov	w2, #0xffffffff            	// #-1
   1f7bc:	b	1f784 <mpfr_pow@@Base+0x434>
   1f7c0:	ldr	w0, [x22, #8]
   1f7c4:	ldr	x1, [x23, #16]
   1f7c8:	tbz	w0, #31, 1f87c <mpfr_pow@@Base+0x52c>
   1f7cc:	cmp	x1, #0x1
   1f7d0:	cset	w0, gt
   1f7d4:	cbz	w0, 1f984 <mpfr_pow@@Base+0x634>
   1f7d8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1f7dc:	ldr	x2, [x0, #2592]
   1f7e0:	add	x0, x0, #0xa20
   1f7e4:	blr	x2
   1f7e8:	ldr	w0, [x20, x0]
   1f7ec:	str	w0, [sp, #120]
   1f7f0:	add	x27, sp, #0x90
   1f7f4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1f7f8:	ldr	x2, [x0, #2528]
   1f7fc:	add	x0, x0, #0x9e0
   1f800:	blr	x2
   1f804:	add	x2, x20, x0
   1f808:	ldr	x0, [x20, x0]
   1f80c:	str	x0, [sp, #128]
   1f810:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1f814:	ldr	x3, [x0, #2560]
   1f818:	add	x0, x0, #0xa00
   1f81c:	blr	x3
   1f820:	ldr	x3, [x20, x0]
   1f824:	str	x3, [sp, #136]
   1f828:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   1f82c:	str	x3, [x2]
   1f830:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   1f834:	str	x2, [x20, x0]
   1f838:	mov	x0, #0x40                  	// #64
   1f83c:	str	x0, [sp, #144]
   1f840:	add	x0, sp, #0x70
   1f844:	str	x0, [sp, #168]
   1f848:	mov	w0, #0x1                   	// #1
   1f84c:	mov	w3, #0x0                   	// #0
   1f850:	mov	x2, #0x0                   	// #0
   1f854:	str	w0, [sp, #152]
   1f858:	mov	x0, x27
   1f85c:	bl	bb00 <mpfr_set_si_2exp@plt>
   1f860:	cbz	w0, 1f888 <mpfr_pow@@Base+0x538>
   1f864:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   1f868:	add	x2, x2, #0xfce
   1f86c:	mov	w1, #0x24b                 	// #587
   1f870:	adrp	x0, 55000 <mpfr_free_pool@@Base+0x3eec>
   1f874:	add	x0, x0, #0xf3b
   1f878:	bl	cbd0 <mpfr_assert_fail@plt>
   1f87c:	lsr	x0, x1, #63
   1f880:	and	w0, w0, #0xff
   1f884:	b	1f7d4 <mpfr_pow@@Base+0x484>
   1f888:	ldr	w0, [x22, #8]
   1f88c:	tbz	w0, #31, 1f8b8 <mpfr_pow@@Base+0x568>
   1f890:	mov	x1, x27
   1f894:	mov	x0, x27
   1f898:	mov	w3, #0x0                   	// #0
   1f89c:	mov	x2, #0x1                   	// #1
   1f8a0:	bl	c5c0 <mpfr_sub_ui@plt>
   1f8a4:	cbz	w0, 1f8b8 <mpfr_pow@@Base+0x568>
   1f8a8:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   1f8ac:	mov	w1, #0x24f                 	// #591
   1f8b0:	add	x2, x2, #0xfce
   1f8b4:	b	1f870 <mpfr_pow@@Base+0x520>
   1f8b8:	mov	x2, x22
   1f8bc:	mov	x1, x27
   1f8c0:	mov	x0, x27
   1f8c4:	mov	w3, #0x2                   	// #2
   1f8c8:	bl	bdd0 <mpfr_mul@plt>
   1f8cc:	ldr	w0, [x22, #8]
   1f8d0:	tbz	w0, #31, 1f8dc <mpfr_pow@@Base+0x58c>
   1f8d4:	mov	x0, x27
   1f8d8:	bl	c1b0 <mpfr_nextabove@plt>
   1f8dc:	mov	w1, #0x2                   	// #2
   1f8e0:	mov	x0, x27
   1f8e4:	bl	c220 <mpfr_get_si@plt>
   1f8e8:	mov	x2, x0
   1f8ec:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1f8f0:	ldr	x1, [x0, #2592]
   1f8f4:	add	x0, x0, #0xa20
   1f8f8:	blr	x1
   1f8fc:	ldr	w1, [sp, #120]
   1f900:	str	w1, [x20, x0]
   1f904:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1f908:	ldr	x3, [x0, #2528]
   1f90c:	add	x0, x0, #0x9e0
   1f910:	blr	x3
   1f914:	ldr	x1, [sp, #128]
   1f918:	str	x1, [x20, x0]
   1f91c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1f920:	ldr	x3, [x0, #2560]
   1f924:	add	x0, x0, #0xa00
   1f928:	blr	x3
   1f92c:	cmp	w24, #0x0
   1f930:	ldr	x3, [sp, #136]
   1f934:	str	x3, [x20, x0]
   1f938:	cset	x0, eq  // eq = none
   1f93c:	add	x0, x0, #0x1
   1f940:	sub	x1, x1, x0
   1f944:	cmp	x1, x2
   1f948:	b.lt	1f984 <mpfr_pow@@Base+0x634>  // b.tstop
   1f94c:	ldr	w0, [x23, #8]
   1f950:	cmp	w24, #0x0
   1f954:	csinc	w24, w24, wzr, ne  // ne = any
   1f958:	tbnz	w0, #31, 1f970 <mpfr_pow@@Base+0x620>
   1f95c:	mov	w2, #0x1                   	// #1
   1f960:	mov	w1, w24
   1f964:	mov	x0, x21
   1f968:	bl	c450 <mpfr_underflow@plt>
   1f96c:	b	1f3f0 <mpfr_pow@@Base+0xa0>
   1f970:	mov	x0, x22
   1f974:	bl	cd40 <mpfr_odd_p@plt>
   1f978:	cbz	w0, 1f95c <mpfr_pow@@Base+0x60c>
   1f97c:	mov	w2, #0xffffffff            	// #-1
   1f980:	b	1f960 <mpfr_pow@@Base+0x610>
   1f984:	cbz	w25, 1fccc <mpfr_pow@@Base+0x97c>
   1f988:	ldr	x0, [x22, #16]
   1f98c:	cmp	x0, #0x100
   1f990:	b.gt	1fccc <mpfr_pow@@Base+0x97c>
   1f994:	add	x20, sp, #0x90
   1f998:	mov	x0, x20
   1f99c:	bl	c010 <mpfr_mpz_init@plt>
   1f9a0:	mov	x1, x22
   1f9a4:	mov	x0, x20
   1f9a8:	mov	w2, #0x0                   	// #0
   1f9ac:	bl	be80 <mpfr_get_z@plt>
   1f9b0:	mov	w3, w24
   1f9b4:	mov	x2, x20
   1f9b8:	mov	x1, x23
   1f9bc:	mov	x0, x21
   1f9c0:	bl	bf70 <mpfr_pow_z@plt>
   1f9c4:	mov	w19, w0
   1f9c8:	mov	x0, x20
   1f9cc:	bl	c200 <mpfr_mpz_clear@plt>
   1f9d0:	b	1f434 <mpfr_pow@@Base+0xe4>
   1f9d4:	mov	w2, w24
   1f9d8:	mov	x1, x23
   1f9dc:	mov	x0, x21
   1f9e0:	str	wzr, [x25]
   1f9e4:	bl	cd30 <mpfr_exp2@plt>
   1f9e8:	mov	w19, w0
   1f9ec:	mov	x0, x23
   1f9f0:	bl	c0f0 <mpfr_clear@plt>
   1f9f4:	tbz	w27, #31, 1fa18 <mpfr_pow@@Base+0x6c8>
   1f9f8:	mov	x0, x22
   1f9fc:	bl	cd40 <mpfr_odd_p@plt>
   1fa00:	cbz	w0, 1fa18 <mpfr_pow@@Base+0x6c8>
   1fa04:	neg	w19, w19
   1fa08:	mov	w2, w24
   1fa0c:	mov	x1, x21
   1fa10:	mov	x0, x21
   1fa14:	bl	bdf0 <mpfr_neg@plt>
   1fa18:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1fa1c:	ldr	x1, [x0, #2592]
   1fa20:	add	x0, x0, #0xa20
   1fa24:	blr	x1
   1fa28:	add	x2, x20, x0
   1fa2c:	ldr	w0, [x20, x0]
   1fa30:	ldr	w1, [sp, #120]
   1fa34:	orr	w1, w1, w0
   1fa38:	str	w1, [x2]
   1fa3c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1fa40:	ldr	x3, [x0, #2528]
   1fa44:	add	x0, x0, #0x9e0
   1fa48:	blr	x3
   1fa4c:	str	w1, [sp, #120]
   1fa50:	ldp	x4, x3, [sp, #128]
   1fa54:	str	x4, [x20, x0]
   1fa58:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1fa5c:	ldr	x5, [x0, #2560]
   1fa60:	add	x0, x0, #0xa00
   1fa64:	blr	x5
   1fa68:	str	x3, [x20, x0]
   1fa6c:	ldr	x0, [x21, #16]
   1fa70:	cmp	x4, x0
   1fa74:	b.gt	1fa80 <mpfr_pow@@Base+0x730>
   1fa78:	cmp	x3, x0
   1fa7c:	b.ge	1fa94 <mpfr_pow@@Base+0x744>  // b.tcont
   1fa80:	mov	w2, w24
   1fa84:	mov	w1, w19
   1fa88:	mov	x0, x21
   1fa8c:	bl	cbc0 <mpfr_check_range@plt>
   1fa90:	b	1f3f0 <mpfr_pow@@Base+0xa0>
   1fa94:	cbz	w19, 1f434 <mpfr_pow@@Base+0xe4>
   1fa98:	orr	w1, w1, #0x8
   1fa9c:	str	w1, [x2]
   1faa0:	b	1f434 <mpfr_pow@@Base+0xe4>
   1faa4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1faa8:	ldr	x1, [x0, #2592]
   1faac:	add	x0, x0, #0xa20
   1fab0:	blr	x1
   1fab4:	ldr	w0, [x20, x0]
   1fab8:	str	w0, [sp, #120]
   1fabc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1fac0:	ldr	x1, [x0, #2528]
   1fac4:	add	x0, x0, #0x9e0
   1fac8:	blr	x1
   1facc:	add	x1, x20, x0
   1fad0:	ldr	x0, [x20, x0]
   1fad4:	str	x0, [sp, #128]
   1fad8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1fadc:	ldr	x2, [x0, #2560]
   1fae0:	add	x0, x0, #0xa00
   1fae4:	blr	x2
   1fae8:	ldr	x2, [x20, x0]
   1faec:	str	x2, [sp, #136]
   1faf0:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   1faf4:	str	x2, [x1]
   1faf8:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   1fafc:	str	x1, [x20, x0]
   1fb00:	cmp	w27, #0x0
   1fb04:	b.le	1fb2c <mpfr_pow@@Base+0x7dc>
   1fb08:	cmp	w19, #0x0
   1fb0c:	ldr	x1, [x23, #16]
   1fb10:	b.gt	1fb1c <mpfr_pow@@Base+0x7cc>
   1fb14:	mov	x0, #0x1                   	// #1
   1fb18:	sub	x1, x0, x1
   1fb1c:	cmp	x1, #0x1
   1fb20:	b.ne	1fb54 <mpfr_pow@@Base+0x804>  // b.any
   1fb24:	mov	x1, #0x0                   	// #0
   1fb28:	b	1fb7c <mpfr_pow@@Base+0x82c>
   1fb2c:	mov	x2, #0x0                   	// #0
   1fb30:	mov	x1, #0xffffffffffffffff    	// #-1
   1fb34:	mov	x0, x23
   1fb38:	bl	c460 <mpfr_cmp_si_2exp@plt>
   1fb3c:	ldr	x2, [x23, #16]
   1fb40:	cmp	w0, #0x0
   1fb44:	mov	x1, #0x1                   	// #1
   1fb48:	sub	x1, x1, x2
   1fb4c:	csel	x1, x1, x2, gt
   1fb50:	b	1fb1c <mpfr_pow@@Base+0x7cc>
   1fb54:	b.gt	1fb68 <mpfr_pow@@Base+0x818>
   1fb58:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   1fb5c:	mov	w1, #0x2aa                 	// #682
   1fb60:	add	x2, x2, #0xfe6
   1fb64:	b	1f870 <mpfr_pow@@Base+0x520>
   1fb68:	sub	x1, x1, #0x1
   1fb6c:	mov	w2, #0x40                  	// #64
   1fb70:	clz	x1, x1
   1fb74:	sub	w1, w2, w1
   1fb78:	sxtw	x1, w1
   1fb7c:	ldr	x2, [x22, #16]
   1fb80:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1fb84:	ldr	x3, [x0, #2592]
   1fb88:	add	x0, x0, #0xa20
   1fb8c:	blr	x3
   1fb90:	str	wzr, [x20, x0]
   1fb94:	add	x27, x20, x0
   1fb98:	adds	x1, x1, x2
   1fb9c:	b.pl	1fc3c <mpfr_pow@@Base+0x8ec>  // b.nfrst
   1fba0:	ldr	x0, [x21]
   1fba4:	neg	x2, x1
   1fba8:	add	x0, x0, #0x1
   1fbac:	cmp	x2, x0
   1fbb0:	b.ls	1fc3c <mpfr_pow@@Base+0x8ec>  // b.plast
   1fbb4:	ldr	w0, [x22, #8]
   1fbb8:	mov	w4, w24
   1fbbc:	ldr	x1, [x26, #3928]
   1fbc0:	cmp	w0, #0x0
   1fbc4:	cset	w3, gt
   1fbc8:	mov	x0, x21
   1fbcc:	eor	w3, w3, w19, lsr #31
   1fbd0:	bl	c5d0 <mpfr_round_near_x@plt>
   1fbd4:	mov	w19, w0
   1fbd8:	cbz	w0, 1fc3c <mpfr_pow@@Base+0x8ec>
   1fbdc:	ldr	w0, [x27]
   1fbe0:	ldr	w1, [sp, #120]
   1fbe4:	orr	w1, w1, w0
   1fbe8:	str	w1, [x27]
   1fbec:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1fbf0:	ldr	x2, [x0, #2528]
   1fbf4:	add	x0, x0, #0x9e0
   1fbf8:	blr	x2
   1fbfc:	str	w1, [sp, #120]
   1fc00:	ldp	x3, x2, [sp, #128]
   1fc04:	str	x3, [x20, x0]
   1fc08:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1fc0c:	ldr	x4, [x0, #2560]
   1fc10:	add	x0, x0, #0xa00
   1fc14:	blr	x4
   1fc18:	str	x2, [x20, x0]
   1fc1c:	ldr	x0, [x21, #16]
   1fc20:	cmp	x3, x0
   1fc24:	b.gt	1fa80 <mpfr_pow@@Base+0x730>
   1fc28:	cmp	x2, x0
   1fc2c:	b.lt	1fa80 <mpfr_pow@@Base+0x730>  // b.tstop
   1fc30:	orr	w1, w1, #0x8
   1fc34:	str	w1, [x27]
   1fc38:	b	1f434 <mpfr_pow@@Base+0xe4>
   1fc3c:	mov	x2, x22
   1fc40:	add	x5, sp, #0x78
   1fc44:	mov	w4, w25
   1fc48:	mov	w3, w24
   1fc4c:	mov	x1, x23
   1fc50:	mov	x0, x21
   1fc54:	bl	c780 <mpfr_pow_general@plt>
   1fc58:	mov	w19, w0
   1fc5c:	ldr	w1, [sp, #120]
   1fc60:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1fc64:	ldr	x2, [x0, #2592]
   1fc68:	add	x0, x0, #0xa20
   1fc6c:	blr	x2
   1fc70:	add	x4, x20, x0
   1fc74:	str	w1, [x20, x0]
   1fc78:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1fc7c:	ldr	x2, [x0, #2528]
   1fc80:	add	x0, x0, #0x9e0
   1fc84:	blr	x2
   1fc88:	ldp	x3, x2, [sp, #128]
   1fc8c:	str	x3, [x20, x0]
   1fc90:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1fc94:	ldr	x5, [x0, #2560]
   1fc98:	add	x0, x0, #0xa00
   1fc9c:	blr	x5
   1fca0:	str	x2, [x20, x0]
   1fca4:	ldr	x0, [x21, #16]
   1fca8:	cmp	x3, x0
   1fcac:	b.gt	1fa80 <mpfr_pow@@Base+0x730>
   1fcb0:	cmp	x2, x0
   1fcb4:	b.lt	1fa80 <mpfr_pow@@Base+0x730>  // b.tstop
   1fcb8:	cbz	w19, 1f434 <mpfr_pow@@Base+0xe4>
   1fcbc:	orr	w1, w1, #0x8
   1fcc0:	str	w1, [x4]
   1fcc4:	b	1f434 <mpfr_pow@@Base+0xe4>
   1fcc8:	cbnz	w25, 1f994 <mpfr_pow@@Base+0x644>
   1fccc:	mov	x0, x23
   1fcd0:	bl	bf80 <mpfr_powerof2_raw@plt>
   1fcd4:	ldr	w27, [x23, #8]
   1fcd8:	cbz	w0, 1faa4 <mpfr_pow@@Base+0x754>
   1fcdc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1fce0:	ldr	x1, [x0, #2592]
   1fce4:	add	x0, x0, #0xa20
   1fce8:	blr	x1
   1fcec:	add	x25, x20, x0
   1fcf0:	ldr	w0, [x20, x0]
   1fcf4:	str	w0, [sp, #120]
   1fcf8:	ldr	x19, [x23, #16]
   1fcfc:	add	x23, sp, #0x90
   1fd00:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1fd04:	ldr	x1, [x0, #2528]
   1fd08:	add	x0, x0, #0x9e0
   1fd0c:	blr	x1
   1fd10:	add	x1, x20, x0
   1fd14:	ldr	x0, [x20, x0]
   1fd18:	str	x0, [sp, #128]
   1fd1c:	sub	x19, x19, #0x1
   1fd20:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1fd24:	ldr	x2, [x0, #2560]
   1fd28:	add	x0, x0, #0xa00
   1fd2c:	blr	x2
   1fd30:	ldr	x2, [x20, x0]
   1fd34:	str	x2, [sp, #136]
   1fd38:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   1fd3c:	str	x2, [x1]
   1fd40:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   1fd44:	str	x1, [x20, x0]
   1fd48:	ldr	x1, [x22]
   1fd4c:	mov	x0, x23
   1fd50:	add	x1, x1, #0x40
   1fd54:	bl	cb10 <mpfr_init2@plt>
   1fd58:	mov	x2, x19
   1fd5c:	mov	x1, x22
   1fd60:	mov	x0, x23
   1fd64:	mov	w3, #0x0                   	// #0
   1fd68:	bl	c9f0 <mpfr_mul_si@plt>
   1fd6c:	cbz	w0, 1f9d4 <mpfr_pow@@Base+0x684>
   1fd70:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   1fd74:	mov	w1, #0x289                 	// #649
   1fd78:	add	x2, x2, #0xfd9
   1fd7c:	b	1f870 <mpfr_pow@@Base+0x520>

000000000001fd80 <mpfr_pow_si@@Base>:
   1fd80:	stp	x29, x30, [sp, #-240]!
   1fd84:	mov	x29, sp
   1fd88:	stp	x19, x20, [sp, #16]
   1fd8c:	stp	x21, x22, [sp, #32]
   1fd90:	stp	x23, x24, [sp, #48]
   1fd94:	stp	x25, x26, [sp, #64]
   1fd98:	stp	x27, x28, [sp, #80]
   1fd9c:	tbnz	x2, #63, 1fdac <mpfr_pow_si@@Base+0x2c>
   1fda0:	bl	bff0 <mpfr_pow_ui@plt>
   1fda4:	mov	w19, w0
   1fda8:	b	1fe04 <mpfr_pow_si@@Base+0x84>
   1fdac:	mov	x27, x1
   1fdb0:	mov	x19, x2
   1fdb4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   1fdb8:	mov	x22, x0
   1fdbc:	ldr	x2, [x27, #16]
   1fdc0:	cmp	x2, x1
   1fdc4:	b.gt	1fe90 <mpfr_pow_si@@Base+0x110>
   1fdc8:	mov	x0, #0x2                   	// #2
   1fdcc:	movk	x0, #0x8000, lsl #48
   1fdd0:	cmp	x2, x0
   1fdd4:	b.ne	1fe24 <mpfr_pow_si@@Base+0xa4>  // b.any
   1fdd8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1fddc:	ldr	x1, [x0, #2592]
   1fde0:	add	x0, x0, #0xa20
   1fde4:	blr	x1
   1fde8:	str	x2, [x22, #16]
   1fdec:	mrs	x1, tpidr_el0
   1fdf0:	add	x0, x1, x0
   1fdf4:	ldr	w1, [x0]
   1fdf8:	orr	w1, w1, #0x4
   1fdfc:	str	w1, [x0]
   1fe00:	mov	w19, #0x0                   	// #0
   1fe04:	mov	w0, w19
   1fe08:	ldp	x19, x20, [sp, #16]
   1fe0c:	ldp	x21, x22, [sp, #32]
   1fe10:	ldp	x23, x24, [sp, #48]
   1fe14:	ldp	x25, x26, [sp, #64]
   1fe18:	ldp	x27, x28, [sp, #80]
   1fe1c:	ldp	x29, x30, [sp], #240
   1fe20:	ret
   1fe24:	ldr	w3, [x27, #8]
   1fe28:	mvn	x19, x19
   1fe2c:	and	x0, x19, #0x1
   1fe30:	cmp	w3, #0x0
   1fe34:	csinc	w19, w0, wzr, le
   1fe38:	cmp	x2, x1
   1fe3c:	b.ne	1fe58 <mpfr_pow_si@@Base+0xd8>  // b.any
   1fe40:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1fe44:	str	x0, [x22, #16]
   1fe48:	cbz	w19, 1fe84 <mpfr_pow_si@@Base+0x104>
   1fe4c:	mov	w0, #0x1                   	// #1
   1fe50:	str	w0, [x22, #8]
   1fe54:	b	1fe00 <mpfr_pow_si@@Base+0x80>
   1fe58:	str	x1, [x22, #16]
   1fe5c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1fe60:	ldr	x1, [x0, #2592]
   1fe64:	add	x0, x0, #0xa20
   1fe68:	blr	x1
   1fe6c:	mrs	x1, tpidr_el0
   1fe70:	add	x0, x1, x0
   1fe74:	ldr	w1, [x0]
   1fe78:	orr	w1, w1, #0x20
   1fe7c:	str	w1, [x0]
   1fe80:	b	1fe48 <mpfr_pow_si@@Base+0xc8>
   1fe84:	mov	w0, #0xffffffff            	// #-1
   1fe88:	str	w0, [x22, #8]
   1fe8c:	b	1fe04 <mpfr_pow_si@@Base+0x84>
   1fe90:	ldrsw	x1, [x27, #8]
   1fe94:	mov	w23, w3
   1fe98:	sub	x2, x2, #0x1
   1fe9c:	mov	x0, x27
   1fea0:	bl	c460 <mpfr_cmp_si_2exp@plt>
   1fea4:	cbnz	w0, 1ff54 <mpfr_pow_si@@Base+0x1d4>
   1fea8:	ldr	x2, [x27, #16]
   1feac:	cmn	x19, #0x1
   1feb0:	cset	w0, eq  // eq = none
   1feb4:	sub	x2, x2, #0x1
   1feb8:	cmp	x2, #0x0
   1febc:	ccmp	w0, #0x0, #0x0, gt
   1fec0:	b.ne	1ff08 <mpfr_pow_si@@Base+0x188>  // b.any
   1fec4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1fec8:	ldr	x1, [x0, #2528]
   1fecc:	add	x0, x0, #0x9e0
   1fed0:	blr	x1
   1fed4:	mrs	x1, tpidr_el0
   1fed8:	ldr	x0, [x1, x0]
   1fedc:	sub	x0, x0, #0x1
   1fee0:	sdiv	x0, x0, x19
   1fee4:	cmp	x0, x2
   1fee8:	b.ge	1ff3c <mpfr_pow_si@@Base+0x1bc>  // b.tcont
   1feec:	mov	x2, #0xbfffffffffffffff    	// #-4611686018427387905
   1fef0:	tbz	w19, #0, 1ff4c <mpfr_pow_si@@Base+0x1cc>
   1fef4:	ldrsw	x1, [x27, #8]
   1fef8:	mov	w3, w23
   1fefc:	mov	x0, x22
   1ff00:	bl	bb00 <mpfr_set_si_2exp@plt>
   1ff04:	b	1fda4 <mpfr_pow_si@@Base+0x24>
   1ff08:	cmp	x2, #0x0
   1ff0c:	ccmp	w0, #0x0, #0x0, lt  // lt = tstop
   1ff10:	b.ne	1ff3c <mpfr_pow_si@@Base+0x1bc>  // b.any
   1ff14:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1ff18:	ldr	x1, [x0, #2560]
   1ff1c:	add	x0, x0, #0xa00
   1ff20:	blr	x1
   1ff24:	mrs	x1, tpidr_el0
   1ff28:	ldr	x0, [x1, x0]
   1ff2c:	sub	x0, x0, #0x1
   1ff30:	sdiv	x0, x0, x19
   1ff34:	cmp	x0, x2
   1ff38:	b.gt	1ff44 <mpfr_pow_si@@Base+0x1c4>
   1ff3c:	mul	x2, x19, x2
   1ff40:	b	1fef0 <mpfr_pow_si@@Base+0x170>
   1ff44:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   1ff48:	b	1fef0 <mpfr_pow_si@@Base+0x170>
   1ff4c:	mov	x1, #0x1                   	// #1
   1ff50:	b	1fef8 <mpfr_pow_si@@Base+0x178>
   1ff54:	neg	x26, x19
   1ff58:	ldr	x1, [x22]
   1ff5c:	clz	x0, x26
   1ff60:	str	x1, [sp, #112]
   1ff64:	mov	w1, #0x40                  	// #64
   1ff68:	sub	w0, w1, w0
   1ff6c:	sxtw	x2, w0
   1ff70:	str	x2, [sp, #136]
   1ff74:	ldr	x2, [sp, #112]
   1ff78:	cmp	x2, #0x1
   1ff7c:	add	x21, x2, w0, sxtw
   1ff80:	add	x21, x21, #0x3
   1ff84:	b.eq	200e8 <mpfr_pow_si@@Base+0x368>  // b.none
   1ff88:	b.gt	1ffa4 <mpfr_pow_si@@Base+0x224>
   1ff8c:	adrp	x2, 54000 <mpfr_free_pool@@Base+0x2eec>
   1ff90:	add	x2, x2, #0xa2c
   1ff94:	mov	w1, #0x9d                  	// #157
   1ff98:	adrp	x0, 55000 <mpfr_free_pool@@Base+0x3eec>
   1ff9c:	add	x0, x0, #0xff1
   1ffa0:	bl	cbd0 <mpfr_assert_fail@plt>
   1ffa4:	ldr	x0, [sp, #112]
   1ffa8:	sub	x0, x0, #0x1
   1ffac:	clz	x0, x0
   1ffb0:	sub	w0, w1, w0
   1ffb4:	sxtw	x0, w0
   1ffb8:	mrs	x20, tpidr_el0
   1ffbc:	add	x21, x21, x0
   1ffc0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1ffc4:	ldr	x1, [x0, #2592]
   1ffc8:	add	x0, x0, #0xa20
   1ffcc:	blr	x1
   1ffd0:	add	x25, sp, #0x90
   1ffd4:	ldr	w24, [x20, x0]
   1ffd8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1ffdc:	ldr	x1, [x0, #2528]
   1ffe0:	add	x0, x0, #0x9e0
   1ffe4:	blr	x1
   1ffe8:	add	x1, x20, x0
   1ffec:	ldr	x0, [x20, x0]
   1fff0:	str	x0, [sp, #96]
   1fff4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   1fff8:	ldr	x2, [x0, #2560]
   1fffc:	add	x0, x0, #0xa00
   20000:	blr	x2
   20004:	ldr	x2, [x20, x0]
   20008:	str	x2, [sp, #104]
   2000c:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   20010:	str	x2, [x1]
   20014:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   20018:	str	x1, [x20, x0]
   2001c:	mov	x0, x25
   20020:	mov	x1, x21
   20024:	bl	cb10 <mpfr_init2@plt>
   20028:	ldr	x0, [x27, #16]
   2002c:	cmp	x0, #0x0
   20030:	b.le	200f0 <mpfr_pow_si@@Base+0x370>
   20034:	ldr	w0, [x27, #8]
   20038:	cmp	w0, #0x0
   2003c:	cset	w0, le
   20040:	add	w0, w0, #0x2
   20044:	str	w0, [sp, #132]
   20048:	mov	x0, #0x40                  	// #64
   2004c:	str	x0, [sp, #120]
   20050:	ldr	w3, [sp, #132]
   20054:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   20058:	ldr	x1, [x0, #2592]
   2005c:	add	x0, x0, #0xa20
   20060:	blr	x1
   20064:	add	x28, x20, x0
   20068:	mov	x2, x27
   2006c:	mov	x1, #0x1                   	// #1
   20070:	str	wzr, [x20, x0]
   20074:	mov	x0, x25
   20078:	bl	c380 <mpfr_ui_div@plt>
   2007c:	ldr	w0, [x28]
   20080:	tbz	w0, #1, 200f8 <mpfr_pow_si@@Base+0x378>
   20084:	mov	x0, x25
   20088:	bl	c0f0 <mpfr_clear@plt>
   2008c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   20090:	ldr	x1, [x0, #2592]
   20094:	add	x0, x0, #0xa20
   20098:	blr	x1
   2009c:	str	w24, [x20, x0]
   200a0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   200a4:	ldr	x1, [x0, #2528]
   200a8:	add	x0, x0, #0x9e0
   200ac:	blr	x1
   200b0:	ldr	x1, [sp, #96]
   200b4:	str	x1, [x20, x0]
   200b8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   200bc:	ldr	x1, [x0, #2560]
   200c0:	add	x0, x0, #0xa00
   200c4:	blr	x1
   200c8:	ldr	x1, [sp, #104]
   200cc:	str	x1, [x20, x0]
   200d0:	tbnz	w26, #0, 20170 <mpfr_pow_si@@Base+0x3f0>
   200d4:	mov	w2, #0x1                   	// #1
   200d8:	mov	w1, w23
   200dc:	mov	x0, x22
   200e0:	bl	bfc0 <mpfr_overflow@plt>
   200e4:	b	1fda4 <mpfr_pow_si@@Base+0x24>
   200e8:	mov	x0, #0x0                   	// #0
   200ec:	b	1ffb8 <mpfr_pow_si@@Base+0x238>
   200f0:	mov	w0, #0x1                   	// #1
   200f4:	b	20044 <mpfr_pow_si@@Base+0x2c4>
   200f8:	mov	w3, w23
   200fc:	mov	x2, x26
   20100:	mov	x1, x25
   20104:	mov	x0, x25
   20108:	str	wzr, [x28]
   2010c:	bl	bff0 <mpfr_pow_ui@plt>
   20110:	ldr	w0, [x28]
   20114:	tbnz	w0, #1, 20084 <mpfr_pow_si@@Base+0x304>
   20118:	tbz	w0, #0, 20288 <mpfr_pow_si@@Base+0x508>
   2011c:	mov	x0, x25
   20120:	bl	c0f0 <mpfr_clear@plt>
   20124:	cbnz	w23, 20234 <mpfr_pow_si@@Base+0x4b4>
   20128:	add	x21, sp, #0xb0
   2012c:	add	x26, sp, #0xd0
   20130:	mov	x0, x21
   20134:	mov	x1, #0x2                   	// #2
   20138:	bl	cb10 <mpfr_init2@plt>
   2013c:	mov	x0, x26
   20140:	mov	x1, #0x40                  	// #64
   20144:	bl	cb10 <mpfr_init2@plt>
   20148:	mov	x1, x19
   2014c:	mov	x0, x26
   20150:	mov	w3, #0x0                   	// #0
   20154:	mov	x2, #0x0                   	// #0
   20158:	bl	bb00 <mpfr_set_si_2exp@plt>
   2015c:	cbz	w0, 20178 <mpfr_pow_si@@Base+0x3f8>
   20160:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   20164:	mov	w1, #0xd8                  	// #216
   20168:	add	x2, x2, #0xfd9
   2016c:	b	1ff98 <mpfr_pow_si@@Base+0x218>
   20170:	ldr	w2, [x27, #8]
   20174:	b	200d8 <mpfr_pow_si@@Base+0x358>
   20178:	mov	x2, x26
   2017c:	mov	x1, x27
   20180:	mov	x5, #0x0                   	// #0
   20184:	mov	w4, #0x1                   	// #1
   20188:	mov	w3, #0x0                   	// #0
   2018c:	mov	x0, x21
   20190:	bl	c780 <mpfr_pow_general@plt>
   20194:	mov	w19, w0
   20198:	mov	x0, x26
   2019c:	bl	c0f0 <mpfr_clear@plt>
   201a0:	ldr	w3, [sp, #184]
   201a4:	mov	x1, x21
   201a8:	mov	w2, #0x0                   	// #0
   201ac:	mov	x0, x22
   201b0:	orr	w24, w24, #0x1
   201b4:	bl	c730 <mpfr_set4@plt>
   201b8:	mov	x0, x21
   201bc:	bl	c0f0 <mpfr_clear@plt>
   201c0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   201c4:	ldr	x1, [x0, #2592]
   201c8:	add	x0, x0, #0xa20
   201cc:	blr	x1
   201d0:	add	x1, x20, x0
   201d4:	str	w24, [x20, x0]
   201d8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   201dc:	ldr	x2, [x0, #2528]
   201e0:	add	x0, x0, #0x9e0
   201e4:	blr	x2
   201e8:	ldr	x2, [sp, #96]
   201ec:	str	x2, [x20, x0]
   201f0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   201f4:	ldr	x2, [x0, #2560]
   201f8:	add	x0, x0, #0xa00
   201fc:	blr	x2
   20200:	ldr	x2, [sp, #104]
   20204:	str	x2, [x20, x0]
   20208:	ldr	x0, [x22, #16]
   2020c:	ldr	x2, [sp, #96]
   20210:	cmp	x2, x0
   20214:	b.gt	20338 <mpfr_pow_si@@Base+0x5b8>
   20218:	ldr	x2, [sp, #104]
   2021c:	cmp	x2, x0
   20220:	b.lt	20338 <mpfr_pow_si@@Base+0x5b8>  // b.tstop
   20224:	cbz	w19, 1fe04 <mpfr_pow_si@@Base+0x84>
   20228:	orr	w24, w24, #0x8
   2022c:	str	w24, [x1]
   20230:	b	1fe04 <mpfr_pow_si@@Base+0x84>
   20234:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   20238:	ldr	x1, [x0, #2528]
   2023c:	add	x0, x0, #0x9e0
   20240:	blr	x1
   20244:	str	w24, [x28]
   20248:	ldr	x1, [sp, #96]
   2024c:	str	x1, [x20, x0]
   20250:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   20254:	ldr	x1, [x0, #2560]
   20258:	add	x0, x0, #0xa00
   2025c:	blr	x1
   20260:	ldr	x1, [sp, #104]
   20264:	str	x1, [x20, x0]
   20268:	tbz	w26, #0, 20280 <mpfr_pow_si@@Base+0x500>
   2026c:	ldr	w2, [x27, #8]
   20270:	mov	w1, w23
   20274:	mov	x0, x22
   20278:	bl	c450 <mpfr_underflow@plt>
   2027c:	b	1fda4 <mpfr_pow_si@@Base+0x24>
   20280:	mov	w2, #0x1                   	// #1
   20284:	b	20270 <mpfr_pow_si@@Base+0x4f0>
   20288:	ldr	x0, [sp, #160]
   2028c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   20290:	cmp	x0, x1
   20294:	b.gt	202c0 <mpfr_pow_si@@Base+0x540>
   20298:	ldr	x1, [sp, #120]
   2029c:	mov	x0, #0xfffffffffffffeff    	// #-257
   202a0:	movk	x0, #0x7fff, lsl #48
   202a4:	sub	x0, x0, x21
   202a8:	cmp	x0, x1
   202ac:	b.ge	20314 <mpfr_pow_si@@Base+0x594>  // b.tcont
   202b0:	adrp	x2, 54000 <mpfr_free_pool@@Base+0x2eec>
   202b4:	mov	w1, #0xed                  	// #237
   202b8:	add	x2, x2, #0xa35
   202bc:	b	1ff98 <mpfr_pow_si@@Base+0x218>
   202c0:	ldp	x0, x1, [sp, #136]
   202c4:	cmp	w23, #0x0
   202c8:	sub	x2, x21, x0
   202cc:	sub	x1, x1, #0x1
   202d0:	ldr	x0, [sp, #112]
   202d4:	asr	x1, x1, #6
   202d8:	sub	x2, x2, #0x2
   202dc:	add	x1, x1, #0x1
   202e0:	cinc	x3, x0, eq  // eq = none
   202e4:	ldr	x0, [sp, #168]
   202e8:	bl	c400 <mpfr_round_p@plt>
   202ec:	cbz	w0, 20298 <mpfr_pow_si@@Base+0x518>
   202f0:	ldr	w3, [sp, #152]
   202f4:	mov	w2, w23
   202f8:	mov	x1, x25
   202fc:	mov	x0, x22
   20300:	bl	c730 <mpfr_set4@plt>
   20304:	mov	w19, w0
   20308:	mov	x0, x25
   2030c:	bl	c0f0 <mpfr_clear@plt>
   20310:	b	201c0 <mpfr_pow_si@@Base+0x440>
   20314:	ldr	x0, [sp, #120]
   20318:	add	x21, x21, x0
   2031c:	mov	x0, #0x2                   	// #2
   20320:	mov	x1, x21
   20324:	sdiv	x0, x21, x0
   20328:	str	x0, [sp, #120]
   2032c:	mov	x0, x25
   20330:	bl	bf50 <mpfr_set_prec@plt>
   20334:	b	20050 <mpfr_pow_si@@Base+0x2d0>
   20338:	mov	w2, w23
   2033c:	mov	w1, w19
   20340:	mov	x0, x22
   20344:	bl	cbc0 <mpfr_check_range@plt>
   20348:	b	1fda4 <mpfr_pow_si@@Base+0x24>

000000000002034c <mpfr_pow_ui@@Base>:
   2034c:	stp	x29, x30, [sp, #-176]!
   20350:	mov	x29, sp
   20354:	stp	x19, x20, [sp, #16]
   20358:	stp	x21, x22, [sp, #32]
   2035c:	stp	x23, x24, [sp, #48]
   20360:	stp	x25, x26, [sp, #64]
   20364:	stp	x27, x28, [sp, #80]
   20368:	cbnz	x2, 2037c <mpfr_pow_ui@@Base+0x30>
   2036c:	mov	x1, #0x1                   	// #1
   20370:	bl	c680 <mpfr_set_ui_2exp@plt>
   20374:	mov	w21, w0
   20378:	b	203d8 <mpfr_pow_ui@@Base+0x8c>
   2037c:	mov	x22, x2
   20380:	mov	w24, w3
   20384:	ldr	x2, [x1, #16]
   20388:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   2038c:	mov	x19, x0
   20390:	mov	x21, x1
   20394:	cmp	x2, x3
   20398:	b.gt	20454 <mpfr_pow_ui@@Base+0x108>
   2039c:	mov	x0, #0x2                   	// #2
   203a0:	movk	x0, #0x8000, lsl #48
   203a4:	cmp	x2, x0
   203a8:	b.ne	203f8 <mpfr_pow_ui@@Base+0xac>  // b.any
   203ac:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   203b0:	ldr	x1, [x0, #2592]
   203b4:	add	x0, x0, #0xa20
   203b8:	blr	x1
   203bc:	str	x2, [x19, #16]
   203c0:	mrs	x1, tpidr_el0
   203c4:	add	x0, x1, x0
   203c8:	ldr	w1, [x0]
   203cc:	orr	w1, w1, #0x4
   203d0:	str	w1, [x0]
   203d4:	mov	w21, #0x0                   	// #0
   203d8:	mov	w0, w21
   203dc:	ldp	x19, x20, [sp, #16]
   203e0:	ldp	x21, x22, [sp, #32]
   203e4:	ldp	x23, x24, [sp, #48]
   203e8:	ldp	x25, x26, [sp, #64]
   203ec:	ldp	x27, x28, [sp, #80]
   203f0:	ldp	x29, x30, [sp], #176
   203f4:	ret
   203f8:	ldr	w0, [x1, #8]
   203fc:	cmp	x2, x3
   20400:	b.ne	2042c <mpfr_pow_ui@@Base+0xe0>  // b.any
   20404:	tbz	w0, #31, 20424 <mpfr_pow_ui@@Base+0xd8>
   20408:	tst	x22, #0x1
   2040c:	mov	w0, #0xffffffff            	// #-1
   20410:	cneg	w0, w0, eq  // eq = none
   20414:	str	w0, [x19, #8]
   20418:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2041c:	str	x0, [x19, #16]
   20420:	b	203d4 <mpfr_pow_ui@@Base+0x88>
   20424:	mov	w0, #0x1                   	// #1
   20428:	b	20414 <mpfr_pow_ui@@Base+0xc8>
   2042c:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   20430:	str	x1, [x19, #16]
   20434:	cmp	w0, #0x0
   20438:	b.gt	20440 <mpfr_pow_ui@@Base+0xf4>
   2043c:	tbnz	w22, #0, 2044c <mpfr_pow_ui@@Base+0x100>
   20440:	mov	w0, #0x1                   	// #1
   20444:	str	w0, [x19, #8]
   20448:	b	203d4 <mpfr_pow_ui@@Base+0x88>
   2044c:	mov	w0, #0xffffffff            	// #-1
   20450:	b	20444 <mpfr_pow_ui@@Base+0xf8>
   20454:	cmp	x22, #0x2
   20458:	b.hi	20480 <mpfr_pow_ui@@Base+0x134>  // b.pmore
   2045c:	cmp	x22, #0x1
   20460:	b.ne	20474 <mpfr_pow_ui@@Base+0x128>  // b.any
   20464:	ldr	w3, [x1, #8]
   20468:	mov	w2, w24
   2046c:	bl	c730 <mpfr_set4@plt>
   20470:	b	20374 <mpfr_pow_ui@@Base+0x28>
   20474:	mov	w2, w24
   20478:	bl	c490 <mpfr_sqr@plt>
   2047c:	b	20374 <mpfr_pow_ui@@Base+0x28>
   20480:	mrs	x20, tpidr_el0
   20484:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   20488:	ldr	x1, [x0, #2592]
   2048c:	add	x0, x0, #0xa20
   20490:	blr	x1
   20494:	ldr	w0, [x20, x0]
   20498:	str	w0, [sp, #120]
   2049c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   204a0:	ldr	x1, [x0, #2528]
   204a4:	add	x0, x0, #0x9e0
   204a8:	blr	x1
   204ac:	add	x1, x20, x0
   204b0:	ldr	x0, [x20, x0]
   204b4:	str	x0, [sp, #96]
   204b8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   204bc:	ldr	x2, [x0, #2560]
   204c0:	add	x0, x0, #0xa00
   204c4:	blr	x2
   204c8:	ldr	x2, [x20, x0]
   204cc:	str	x2, [sp, #104]
   204d0:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   204d4:	str	x2, [x1]
   204d8:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   204dc:	str	x1, [x20, x0]
   204e0:	ldr	x0, [x19]
   204e4:	add	x23, x0, #0x43
   204e8:	cmp	x0, #0x1
   204ec:	b.eq	20690 <mpfr_pow_ui@@Base+0x344>  // b.none
   204f0:	b.gt	2050c <mpfr_pow_ui@@Base+0x1c0>
   204f4:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   204f8:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   204fc:	add	x2, x2, #0xffa
   20500:	add	x0, x0, #0x7d4
   20504:	mov	w1, #0x5e                  	// #94
   20508:	bl	cbd0 <mpfr_assert_fail@plt>
   2050c:	ldr	x0, [x19]
   20510:	sub	x0, x0, #0x1
   20514:	clz	x1, x0
   20518:	mov	w0, #0x40                  	// #64
   2051c:	sub	w0, w0, w1
   20520:	sxtw	x0, w0
   20524:	add	x23, x23, x0
   20528:	add	x27, sp, #0x90
   2052c:	mov	x0, x27
   20530:	mov	x1, x23
   20534:	bl	cb10 <mpfr_init2@plt>
   20538:	mov	x25, #0x40                  	// #64
   2053c:	ldr	w0, [x21, #8]
   20540:	cmp	w0, #0x0
   20544:	cset	w26, le
   20548:	add	w26, w26, #0x2
   2054c:	mov	x1, x22
   20550:	mov	w0, #0x0                   	// #0
   20554:	mov	w6, w0
   20558:	lsr	x1, x1, #1
   2055c:	add	w0, w0, #0x1
   20560:	cbnz	x1, 20554 <mpfr_pow_ui@@Base+0x208>
   20564:	sxtw	x0, w0
   20568:	str	x0, [sp, #112]
   2056c:	mov	x2, x21
   20570:	mov	w3, #0x2                   	// #2
   20574:	str	w6, [sp, #124]
   20578:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2057c:	ldr	x1, [x0, #2592]
   20580:	add	x0, x0, #0xa20
   20584:	blr	x1
   20588:	str	wzr, [x20, x0]
   2058c:	mov	x1, x21
   20590:	mov	x0, x27
   20594:	bl	bdd0 <mpfr_mul@plt>
   20598:	mov	w28, w0
   2059c:	ldr	w6, [sp, #124]
   205a0:	sub	w0, w6, #0x1
   205a4:	lsr	x0, x22, x0
   205a8:	tbz	w0, #0, 205cc <mpfr_pow_ui@@Base+0x280>
   205ac:	mov	w3, w26
   205b0:	mov	x2, x21
   205b4:	mov	x1, x27
   205b8:	mov	x0, x27
   205bc:	str	w6, [sp, #124]
   205c0:	bl	bdd0 <mpfr_mul@plt>
   205c4:	ldr	w6, [sp, #124]
   205c8:	orr	w28, w28, w0
   205cc:	sub	w6, w6, #0x2
   205d0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   205d4:	ldr	x1, [x0, #2592]
   205d8:	add	x0, x0, #0xa20
   205dc:	blr	x1
   205e0:	ldr	w0, [x20, x0]
   205e4:	cmn	w6, #0x1
   205e8:	b.eq	205f8 <mpfr_pow_ui@@Base+0x2ac>  // b.none
   205ec:	mov	w1, #0x27                  	// #39
   205f0:	tst	w0, w1
   205f4:	b.eq	20698 <mpfr_pow_ui@@Base+0x34c>  // b.none
   205f8:	and	w1, w0, #0x2
   205fc:	cbz	w28, 20814 <mpfr_pow_ui@@Base+0x4c8>
   20600:	cbz	w1, 206e8 <mpfr_pow_ui@@Base+0x39c>
   20604:	mov	x0, x27
   20608:	bl	c0f0 <mpfr_clear@plt>
   2060c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   20610:	ldr	x1, [x0, #2592]
   20614:	add	x0, x0, #0xa20
   20618:	blr	x1
   2061c:	ldr	w1, [sp, #120]
   20620:	str	w1, [x20, x0]
   20624:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   20628:	ldr	x1, [x0, #2528]
   2062c:	add	x0, x0, #0x9e0
   20630:	blr	x1
   20634:	ldr	x1, [sp, #96]
   20638:	str	x1, [x20, x0]
   2063c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   20640:	ldr	x1, [x0, #2560]
   20644:	add	x0, x0, #0xa00
   20648:	blr	x1
   2064c:	ldr	x1, [sp, #104]
   20650:	str	x1, [x20, x0]
   20654:	add	x20, sp, #0x80
   20658:	mov	x0, x20
   2065c:	bl	c010 <mpfr_mpz_init@plt>
   20660:	mov	x1, x22
   20664:	mov	x0, x20
   20668:	bl	bd30 <__gmpz_set_ui@plt>
   2066c:	mov	x1, x21
   20670:	mov	w3, w24
   20674:	mov	x2, x20
   20678:	mov	x0, x19
   2067c:	bl	bf70 <mpfr_pow_z@plt>
   20680:	mov	w21, w0
   20684:	mov	x0, x20
   20688:	bl	c200 <mpfr_mpz_clear@plt>
   2068c:	b	203d8 <mpfr_pow_ui@@Base+0x8c>
   20690:	mov	x0, #0x0                   	// #0
   20694:	b	20524 <mpfr_pow_ui@@Base+0x1d8>
   20698:	mov	x2, x27
   2069c:	mov	x1, x27
   206a0:	mov	x0, x27
   206a4:	mov	w3, #0x2                   	// #2
   206a8:	str	w6, [sp, #124]
   206ac:	bl	bdd0 <mpfr_mul@plt>
   206b0:	ldr	w6, [sp, #124]
   206b4:	orr	w28, w28, w0
   206b8:	lsr	x0, x22, x6
   206bc:	tbz	w0, #0, 206e0 <mpfr_pow_ui@@Base+0x394>
   206c0:	mov	w3, w26
   206c4:	mov	x2, x21
   206c8:	mov	x1, x27
   206cc:	mov	x0, x27
   206d0:	str	w6, [sp, #124]
   206d4:	bl	bdd0 <mpfr_mul@plt>
   206d8:	ldr	w6, [sp, #124]
   206dc:	orr	w28, w28, w0
   206e0:	sub	w6, w6, #0x1
   206e4:	b	205d0 <mpfr_pow_ui@@Base+0x284>
   206e8:	tbnz	w0, #0, 20604 <mpfr_pow_ui@@Base+0x2b8>
   206ec:	ldr	x1, [sp, #160]
   206f0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   206f4:	cmp	x1, x0
   206f8:	b.gt	20728 <mpfr_pow_ui@@Base+0x3dc>
   206fc:	mov	x0, #0xfffffffffffffeff    	// #-257
   20700:	movk	x0, #0x7fff, lsl #48
   20704:	sub	x0, x0, x23
   20708:	cmp	x0, x25
   2070c:	b.ge	207f8 <mpfr_pow_ui@@Base+0x4ac>  // b.tcont
   20710:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   20714:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   20718:	add	x2, x2, #0x519
   2071c:	add	x0, x0, #0x7d4
   20720:	mov	w1, #0x86                  	// #134
   20724:	bl	cbd0 <mpfr_assert_fail@plt>
   20728:	ldr	x0, [sp, #112]
   2072c:	sub	x2, x23, #0x1
   20730:	ldr	x1, [sp, #144]
   20734:	sub	x2, x2, x0
   20738:	ldr	x0, [sp, #168]
   2073c:	cmp	w24, #0x0
   20740:	sub	x1, x1, #0x1
   20744:	ldr	x3, [x19]
   20748:	asr	x1, x1, #6
   2074c:	add	x1, x1, #0x1
   20750:	cinc	x3, x3, eq  // eq = none
   20754:	bl	c400 <mpfr_round_p@plt>
   20758:	cbz	w0, 206fc <mpfr_pow_ui@@Base+0x3b0>
   2075c:	ldr	w3, [sp, #152]
   20760:	mov	x1, x27
   20764:	mov	w2, w24
   20768:	mov	x0, x19
   2076c:	bl	c730 <mpfr_set4@plt>
   20770:	mov	w21, w0
   20774:	mov	x0, x27
   20778:	bl	c0f0 <mpfr_clear@plt>
   2077c:	ldr	w2, [sp, #120]
   20780:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   20784:	ldr	x1, [x0, #2592]
   20788:	add	x0, x0, #0xa20
   2078c:	blr	x1
   20790:	add	x1, x20, x0
   20794:	str	w2, [x20, x0]
   20798:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2079c:	ldr	x2, [x0, #2528]
   207a0:	add	x0, x0, #0x9e0
   207a4:	blr	x2
   207a8:	ldr	x2, [sp, #96]
   207ac:	str	x2, [x20, x0]
   207b0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   207b4:	ldr	x2, [x0, #2560]
   207b8:	add	x0, x0, #0xa00
   207bc:	blr	x2
   207c0:	ldr	x2, [sp, #104]
   207c4:	str	x2, [x20, x0]
   207c8:	ldr	x0, [x19, #16]
   207cc:	ldr	x2, [sp, #96]
   207d0:	cmp	x2, x0
   207d4:	b.gt	20820 <mpfr_pow_ui@@Base+0x4d4>
   207d8:	ldr	x2, [sp, #104]
   207dc:	cmp	x2, x0
   207e0:	b.lt	20820 <mpfr_pow_ui@@Base+0x4d4>  // b.tstop
   207e4:	cbz	w21, 203d8 <mpfr_pow_ui@@Base+0x8c>
   207e8:	ldr	w0, [sp, #120]
   207ec:	orr	w0, w0, #0x8
   207f0:	str	w0, [x1]
   207f4:	b	203d8 <mpfr_pow_ui@@Base+0x8c>
   207f8:	add	x23, x23, x25
   207fc:	mov	x25, #0x2                   	// #2
   20800:	mov	x1, x23
   20804:	mov	x0, x27
   20808:	sdiv	x25, x23, x25
   2080c:	bl	bf50 <mpfr_set_prec@plt>
   20810:	b	2054c <mpfr_pow_ui@@Base+0x200>
   20814:	cbnz	w1, 20604 <mpfr_pow_ui@@Base+0x2b8>
   20818:	tbz	w0, #0, 2075c <mpfr_pow_ui@@Base+0x410>
   2081c:	b	20604 <mpfr_pow_ui@@Base+0x2b8>
   20820:	mov	w2, w24
   20824:	mov	w1, w21
   20828:	mov	x0, x19
   2082c:	bl	cbc0 <mpfr_check_range@plt>
   20830:	b	20374 <mpfr_pow_ui@@Base+0x28>

0000000000020834 <mpfr_print_mant_binary@@Base>:
   20834:	stp	x29, x30, [sp, #-80]!
   20838:	mov	x29, sp
   2083c:	stp	x19, x20, [sp, #16]
   20840:	sub	x19, x2, #0x1
   20844:	mov	x20, x2
   20848:	asr	x19, x19, #6
   2084c:	stp	x21, x22, [sp, #32]
   20850:	mov	x22, x19
   20854:	stp	x23, x24, [sp, #48]
   20858:	mov	x24, #0x0                   	// #0
   2085c:	str	x25, [sp, #64]
   20860:	mov	x25, x1
   20864:	mov	x1, x0
   20868:	adrp	x0, 56000 <mpfr_l2b_2_0__tab@@Base+0x488>
   2086c:	add	x0, x0, #0x12
   20870:	bl	cc80 <printf@plt>
   20874:	mov	x23, x24
   20878:	mov	w21, #0x3f                  	// #63
   2087c:	ldr	x0, [x25, x22, lsl #3]
   20880:	add	x23, x23, #0x1
   20884:	lsr	x0, x0, x21
   20888:	and	x0, x0, #0x1
   2088c:	add	w0, w0, #0x30
   20890:	bl	ccb0 <putchar@plt>
   20894:	cmp	x20, x23
   20898:	b.ne	208a4 <mpfr_print_mant_binary@@Base+0x70>  // b.any
   2089c:	mov	w0, #0x5b                  	// #91
   208a0:	bl	ccb0 <putchar@plt>
   208a4:	sub	w21, w21, #0x1
   208a8:	cmn	w21, #0x1
   208ac:	b.ne	2087c <mpfr_print_mant_binary@@Base+0x48>  // b.any
   208b0:	sub	x22, x22, #0x1
   208b4:	mov	w0, #0x2e                  	// #46
   208b8:	bl	ccb0 <putchar@plt>
   208bc:	add	x24, x24, #0x40
   208c0:	cmn	x22, #0x1
   208c4:	b.ne	20874 <mpfr_print_mant_binary@@Base+0x40>  // b.any
   208c8:	add	x19, x19, #0x1
   208cc:	cmp	x20, x19, lsl #6
   208d0:	b.gt	208dc <mpfr_print_mant_binary@@Base+0xa8>
   208d4:	mov	w0, #0x5d                  	// #93
   208d8:	bl	ccb0 <putchar@plt>
   208dc:	ldp	x19, x20, [sp, #16]
   208e0:	mov	w0, #0xa                   	// #10
   208e4:	ldp	x21, x22, [sp, #32]
   208e8:	ldp	x23, x24, [sp, #48]
   208ec:	ldr	x25, [sp, #64]
   208f0:	ldp	x29, x30, [sp], #80
   208f4:	b	ccb0 <putchar@plt>

00000000000208f8 <mpfr_print_rnd_mode@@Base>:
   208f8:	cmp	w0, #0x5
   208fc:	b.hi	20954 <mpfr_print_rnd_mode@@Base+0x5c>  // b.pmore
   20900:	adrp	x1, 56000 <mpfr_l2b_2_0__tab@@Base+0x488>
   20904:	add	x1, x1, #0x40
   20908:	ldrb	w0, [x1, w0, uxtw]
   2090c:	adr	x1, 20918 <mpfr_print_rnd_mode@@Base+0x20>
   20910:	add	x0, x1, w0, sxtb #2
   20914:	br	x0
   20918:	adrp	x0, 56000 <mpfr_l2b_2_0__tab@@Base+0x488>
   2091c:	add	x0, x0, #0x34
   20920:	ret
   20924:	adrp	x0, 5a000 <mpfr_bases@@Base+0x2a8>
   20928:	add	x0, x0, #0x5fb
   2092c:	b	20920 <mpfr_print_rnd_mode@@Base+0x28>
   20930:	adrp	x0, 56000 <mpfr_l2b_2_0__tab@@Base+0x488>
   20934:	add	x0, x0, #0x20
   20938:	b	20920 <mpfr_print_rnd_mode@@Base+0x28>
   2093c:	adrp	x0, 53000 <mpfr_free_pool@@Base+0x1eec>
   20940:	add	x0, x0, #0x849
   20944:	b	20920 <mpfr_print_rnd_mode@@Base+0x28>
   20948:	adrp	x0, 56000 <mpfr_l2b_2_0__tab@@Base+0x488>
   2094c:	add	x0, x0, #0x2a
   20950:	b	20920 <mpfr_print_rnd_mode@@Base+0x28>
   20954:	mov	x0, #0x0                   	// #0
   20958:	b	20920 <mpfr_print_rnd_mode@@Base+0x28>
   2095c:	adrp	x0, 56000 <mpfr_l2b_2_0__tab@@Base+0x488>
   20960:	add	x0, x0, #0x16
   20964:	b	20920 <mpfr_print_rnd_mode@@Base+0x28>

0000000000020968 <mpfr_reldiff@@Base>:
   20968:	stp	x29, x30, [sp, #-96]!
   2096c:	mov	x29, sp
   20970:	stp	x19, x20, [sp, #16]
   20974:	mov	x19, x0
   20978:	mov	x20, x1
   2097c:	ldr	x0, [x1, #16]
   20980:	stp	x21, x22, [sp, #32]
   20984:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   20988:	str	x23, [sp, #48]
   2098c:	mov	x21, x2
   20990:	mov	w22, w3
   20994:	cmp	x0, x1
   20998:	b.le	209e8 <mpfr_reldiff@@Base+0x80>
   2099c:	ldr	x2, [x2, #16]
   209a0:	cmp	x2, x1
   209a4:	b.gt	20a54 <mpfr_reldiff@@Base+0xec>
   209a8:	ldr	x1, [x21, #16]
   209ac:	mov	x2, #0x2                   	// #2
   209b0:	movk	x2, #0x8000, lsl #48
   209b4:	cmp	x1, x2
   209b8:	b.eq	209f8 <mpfr_reldiff@@Base+0x90>  // b.none
   209bc:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   209c0:	cmp	x0, x2
   209c4:	b.ne	20a18 <mpfr_reldiff@@Base+0xb0>  // b.any
   209c8:	cmp	x1, x0
   209cc:	b.ne	209f8 <mpfr_reldiff@@Base+0x90>  // b.any
   209d0:	ldr	w0, [x20, #8]
   209d4:	ldr	w1, [x21, #8]
   209d8:	cmp	w1, w0
   209dc:	b.ne	209f8 <mpfr_reldiff@@Base+0x90>  // b.any
   209e0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   209e4:	b	20a00 <mpfr_reldiff@@Base+0x98>
   209e8:	mov	x1, #0x2                   	// #2
   209ec:	movk	x1, #0x8000, lsl #48
   209f0:	cmp	x0, x1
   209f4:	b.ne	209a8 <mpfr_reldiff@@Base+0x40>  // b.any
   209f8:	mov	x0, #0x2                   	// #2
   209fc:	movk	x0, #0x8000, lsl #48
   20a00:	str	x0, [x19, #16]
   20a04:	ldp	x19, x20, [sp, #16]
   20a08:	ldp	x21, x22, [sp, #32]
   20a0c:	ldr	x23, [sp, #48]
   20a10:	ldp	x29, x30, [sp], #96
   20a14:	ret
   20a18:	cmp	x1, x2
   20a1c:	b.ne	20a30 <mpfr_reldiff@@Base+0xc8>  // b.any
   20a20:	ldr	w0, [x20, #8]
   20a24:	str	w0, [x19, #8]
   20a28:	str	x1, [x19, #16]
   20a2c:	b	20a04 <mpfr_reldiff@@Base+0x9c>
   20a30:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   20a34:	cmp	x0, x1
   20a38:	b.ne	20a54 <mpfr_reldiff@@Base+0xec>  // b.any
   20a3c:	ldrsw	x1, [x21, #8]
   20a40:	mov	w3, w22
   20a44:	mov	x0, x19
   20a48:	mov	x2, #0x0                   	// #0
   20a4c:	bl	bb00 <mpfr_set_si_2exp@plt>
   20a50:	b	20a04 <mpfr_reldiff@@Base+0x9c>
   20a54:	cmp	x20, x19
   20a58:	b.ne	20a80 <mpfr_reldiff@@Base+0x118>  // b.any
   20a5c:	ldr	x1, [x20]
   20a60:	add	x23, sp, #0x40
   20a64:	mov	x0, x23
   20a68:	bl	cb10 <mpfr_init2@plt>
   20a6c:	ldr	w3, [x20, #8]
   20a70:	mov	x1, x20
   20a74:	mov	x0, x23
   20a78:	mov	w2, #0x0                   	// #0
   20a7c:	bl	c730 <mpfr_set4@plt>
   20a80:	mov	x2, x21
   20a84:	mov	w3, w22
   20a88:	mov	x1, x20
   20a8c:	mov	x0, x19
   20a90:	bl	bbf0 <mpfr_sub@plt>
   20a94:	add	x21, sp, #0x40
   20a98:	mov	w2, w22
   20a9c:	mov	x1, x19
   20aa0:	mov	w3, #0x1                   	// #1
   20aa4:	mov	x0, x19
   20aa8:	bl	c730 <mpfr_set4@plt>
   20aac:	cmp	x20, x19
   20ab0:	mov	w3, w22
   20ab4:	csel	x2, x21, x20, eq  // eq = none
   20ab8:	mov	x1, x19
   20abc:	mov	x0, x19
   20ac0:	bl	c6b0 <mpfr_div@plt>
   20ac4:	cmp	x20, x19
   20ac8:	b.ne	20a04 <mpfr_reldiff@@Base+0x9c>  // b.any
   20acc:	mov	x0, x21
   20ad0:	bl	c0f0 <mpfr_clear@plt>
   20ad4:	b	20a04 <mpfr_reldiff@@Base+0x9c>

0000000000020ad8 <mpfr_round_raw@@Base>:
   20ad8:	stp	x29, x30, [sp, #-48]!
   20adc:	mov	x8, x1
   20ae0:	mov	x9, x2
   20ae4:	mov	x29, sp
   20ae8:	stp	x19, x20, [sp, #16]
   20aec:	cmp	w5, #0x5
   20af0:	mov	x19, x0
   20af4:	str	x21, [sp, #32]
   20af8:	b.ne	20e20 <mpfr_round_raw@@Base+0x348>  // b.any
   20afc:	mov	w20, #0x0                   	// #0
   20b00:	mov	w5, #0x1                   	// #1
   20b04:	str	wzr, [x6]
   20b08:	sub	x7, x9, #0x1
   20b0c:	mov	x2, #0x40                  	// #64
   20b10:	and	w10, w4, #0x3f
   20b14:	cmp	x9, x4
   20b18:	sdiv	x2, x4, x2
   20b1c:	asr	x7, x7, #6
   20b20:	add	x7, x7, #0x1
   20b24:	b.gt	20b64 <mpfr_round_raw@@Base+0x8c>
   20b28:	cbz	w10, 20b30 <mpfr_round_raw@@Base+0x58>
   20b2c:	add	x2, x2, #0x1
   20b30:	sub	x0, x2, x7
   20b34:	str	wzr, [x6]
   20b38:	mov	x2, x7
   20b3c:	mov	x1, x8
   20b40:	lsl	x20, x0, #3
   20b44:	add	x0, x19, x0, lsl #3
   20b48:	bl	bb60 <__gmpn_copyd@plt>
   20b4c:	mov	x2, x20
   20b50:	mov	x0, x19
   20b54:	mov	w1, #0x0                   	// #0
   20b58:	bl	c1a0 <memset@plt>
   20b5c:	mov	w20, #0x0                   	// #0
   20b60:	b	20ca4 <mpfr_round_raw@@Base+0x1cc>
   20b64:	cbnz	w20, 20b7c <mpfr_round_raw@@Base+0xa4>
   20b68:	cmp	w5, #0x1
   20b6c:	b.eq	20d70 <mpfr_round_raw@@Base+0x298>  // b.none
   20b70:	add	w0, w3, w5
   20b74:	cmp	w0, #0x3
   20b78:	b.eq	20d70 <mpfr_round_raw@@Base+0x298>  // b.none
   20b7c:	sub	x0, x7, x2
   20b80:	sub	x0, x0, #0x1
   20b84:	cbz	w10, 20e14 <mpfr_round_raw@@Base+0x33c>
   20b88:	neg	w21, w10
   20b8c:	mov	x1, #0x1                   	// #1
   20b90:	add	x2, x2, #0x1
   20b94:	lsl	x21, x1, x21
   20b98:	sub	x1, x21, #0x1
   20b9c:	neg	x21, x21
   20ba0:	ldr	x4, [x8, x0, lsl #3]
   20ba4:	and	x1, x1, x4
   20ba8:	add	w4, w5, #0x1
   20bac:	cmp	w4, #0x1
   20bb0:	b.hi	20ce0 <mpfr_round_raw@@Base+0x208>  // b.pmore
   20bb4:	mov	x4, #0x8000000000000000    	// #-9223372036854775808
   20bb8:	lsr	x4, x4, x10
   20bbc:	tst	x1, x4
   20bc0:	b.eq	20cf4 <mpfr_round_raw@@Base+0x21c>  // b.none
   20bc4:	cmn	w5, #0x1
   20bc8:	b.eq	20c20 <mpfr_round_raw@@Base+0x148>  // b.none
   20bcc:	bic	x1, x1, x4
   20bd0:	cbnz	x1, 20db0 <mpfr_round_raw@@Base+0x2d8>
   20bd4:	cbnz	x0, 20c14 <mpfr_round_raw@@Base+0x13c>
   20bd8:	sub	x4, x7, x2
   20bdc:	eor	x0, x21, x21, lsl #1
   20be0:	add	x1, x8, x4, lsl #3
   20be4:	ldr	x4, [x8, x4, lsl #3]
   20be8:	tst	x0, x4
   20bec:	b.ne	20c20 <mpfr_round_raw@@Base+0x148>  // b.any
   20bf0:	lsl	w3, w3, #2
   20bf4:	sub	w3, w3, #0x2
   20bf8:	str	w3, [x6]
   20bfc:	mov	x0, x19
   20c00:	bl	c5b0 <__gmpn_copyi@plt>
   20c04:	ldr	x0, [x19]
   20c08:	and	x21, x0, x21
   20c0c:	str	x21, [x19]
   20c10:	b	20b5c <mpfr_round_raw@@Base+0x84>
   20c14:	sub	x0, x0, #0x1
   20c18:	ldr	x1, [x8, x0, lsl #3]
   20c1c:	b	20bd0 <mpfr_round_raw@@Base+0xf8>
   20c20:	mov	w0, #0x2                   	// #2
   20c24:	sub	w3, w0, w3, lsl #2
   20c28:	sub	x7, x7, x2
   20c2c:	cmp	w10, #0x0
   20c30:	mov	x0, #0x1                   	// #1
   20c34:	add	x4, x8, x7, lsl #3
   20c38:	ldr	x1, [x8, x7, lsl #3]
   20c3c:	str	w3, [x6]
   20c40:	neg	w3, w10
   20c44:	lsl	x3, x0, x3
   20c48:	csel	x3, x3, x0, ne  // ne = any
   20c4c:	adds	x3, x3, x1
   20c50:	str	x3, [x19]
   20c54:	b.cs	20cd0 <mpfr_round_raw@@Base+0x1f8>  // b.hs, b.nlast
   20c58:	cmp	x4, x19
   20c5c:	b.eq	20c94 <mpfr_round_raw@@Base+0x1bc>  // b.none
   20c60:	cmp	x0, x2
   20c64:	b.ge	20c94 <mpfr_round_raw@@Base+0x1bc>  // b.tcont
   20c68:	ldr	x1, [x4, x0, lsl #3]
   20c6c:	str	x1, [x19, x0, lsl #3]
   20c70:	add	x0, x0, #0x1
   20c74:	b	20c60 <mpfr_round_raw@@Base+0x188>
   20c78:	ldr	x1, [x4, x0, lsl #3]
   20c7c:	add	x1, x1, #0x1
   20c80:	str	x1, [x19, x0, lsl #3]
   20c84:	add	x0, x0, #0x1
   20c88:	cbz	x1, 20cd0 <mpfr_round_raw@@Base+0x1f8>
   20c8c:	cmp	x4, x19
   20c90:	b.ne	20cc4 <mpfr_round_raw@@Base+0x1ec>  // b.any
   20c94:	mov	x20, #0x0                   	// #0
   20c98:	ldr	x0, [x19]
   20c9c:	and	x21, x0, x21
   20ca0:	str	x21, [x19]
   20ca4:	mov	w0, w20
   20ca8:	ldp	x19, x20, [sp, #16]
   20cac:	ldr	x21, [sp, #32]
   20cb0:	ldp	x29, x30, [sp], #48
   20cb4:	ret
   20cb8:	ldr	x1, [x4, x0, lsl #3]
   20cbc:	str	x1, [x19, x0, lsl #3]
   20cc0:	add	x0, x0, #0x1
   20cc4:	cmp	x0, x2
   20cc8:	b.lt	20cb8 <mpfr_round_raw@@Base+0x1e0>  // b.tstop
   20ccc:	b	20c94 <mpfr_round_raw@@Base+0x1bc>
   20cd0:	cmp	x0, x2
   20cd4:	b.lt	20c78 <mpfr_round_raw@@Base+0x1a0>  // b.tstop
   20cd8:	mov	x20, #0x1                   	// #1
   20cdc:	b	20c98 <mpfr_round_raw@@Base+0x1c0>
   20ce0:	cmp	w5, #0x1
   20ce4:	b.eq	20cf4 <mpfr_round_raw@@Base+0x21c>  // b.none
   20ce8:	add	w5, w3, w5
   20cec:	cmp	w5, #0x3
   20cf0:	b.ne	20d24 <mpfr_round_raw@@Base+0x24c>  // b.any
   20cf4:	cbnz	x1, 20da4 <mpfr_round_raw@@Base+0x2cc>
   20cf8:	cbnz	x0, 20d10 <mpfr_round_raw@@Base+0x238>
   20cfc:	mov	w3, #0x0                   	// #0
   20d00:	str	w3, [x6]
   20d04:	sub	x1, x7, x2
   20d08:	add	x1, x8, x1, lsl #3
   20d0c:	b	20bfc <mpfr_round_raw@@Base+0x124>
   20d10:	sub	x0, x0, #0x1
   20d14:	ldr	x1, [x8, x0, lsl #3]
   20d18:	b	20cf4 <mpfr_round_raw@@Base+0x21c>
   20d1c:	sub	x0, x0, #0x1
   20d20:	ldr	x1, [x8, x0, lsl #3]
   20d24:	cbnz	x1, 20dbc <mpfr_round_raw@@Base+0x2e4>
   20d28:	cbnz	x0, 20d1c <mpfr_round_raw@@Base+0x244>
   20d2c:	str	wzr, [x6]
   20d30:	b	20d04 <mpfr_round_raw@@Base+0x22c>
   20d34:	cmp	x0, x2
   20d38:	b.ge	20cd8 <mpfr_round_raw@@Base+0x200>  // b.tcont
   20d3c:	ldr	x1, [x4, x0, lsl #3]
   20d40:	add	x1, x1, #0x1
   20d44:	str	x1, [x19, x0, lsl #3]
   20d48:	add	x0, x0, #0x1
   20d4c:	cbz	x1, 20d34 <mpfr_round_raw@@Base+0x25c>
   20d50:	cmp	x4, x19
   20d54:	b.eq	20c94 <mpfr_round_raw@@Base+0x1bc>  // b.none
   20d58:	cmp	x0, x2
   20d5c:	b.ge	20c94 <mpfr_round_raw@@Base+0x1bc>  // b.tcont
   20d60:	ldr	x1, [x4, x0, lsl #3]
   20d64:	str	x1, [x19, x0, lsl #3]
   20d68:	add	x0, x0, #0x1
   20d6c:	b	20d58 <mpfr_round_raw@@Base+0x280>
   20d70:	cbz	w10, 20d9c <mpfr_round_raw@@Base+0x2c4>
   20d74:	neg	w10, w10
   20d78:	mov	x21, #0x1                   	// #1
   20d7c:	add	x2, x2, #0x1
   20d80:	lsl	x21, x21, x10
   20d84:	neg	x21, x21
   20d88:	sub	x1, x7, x2
   20d8c:	mov	x0, x19
   20d90:	add	x1, x8, x1, lsl #3
   20d94:	bl	c5b0 <__gmpn_copyi@plt>
   20d98:	b	20c98 <mpfr_round_raw@@Base+0x1c0>
   20d9c:	mov	x21, #0xffffffffffffffff    	// #-1
   20da0:	b	20d88 <mpfr_round_raw@@Base+0x2b0>
   20da4:	lsl	w3, w3, #1
   20da8:	sub	w3, w3, #0x1
   20dac:	b	20d00 <mpfr_round_raw@@Base+0x228>
   20db0:	mov	w0, #0x1                   	// #1
   20db4:	sub	w3, w0, w3, lsl #1
   20db8:	b	20c28 <mpfr_round_raw@@Base+0x150>
   20dbc:	sub	x7, x7, x2
   20dc0:	mov	w0, #0x1                   	// #1
   20dc4:	sub	w3, w0, w3, lsl #1
   20dc8:	cmp	w10, #0x0
   20dcc:	mov	x0, #0x1                   	// #1
   20dd0:	add	x4, x8, x7, lsl #3
   20dd4:	ldr	x1, [x8, x7, lsl #3]
   20dd8:	str	w3, [x6]
   20ddc:	neg	w3, w10
   20de0:	lsl	x3, x0, x3
   20de4:	csel	x3, x3, x0, ne  // ne = any
   20de8:	adds	x3, x3, x1
   20dec:	str	x3, [x19]
   20df0:	b.cs	20d34 <mpfr_round_raw@@Base+0x25c>  // b.hs, b.nlast
   20df4:	cmp	x4, x19
   20df8:	b.eq	20c94 <mpfr_round_raw@@Base+0x1bc>  // b.none
   20dfc:	cmp	x0, x2
   20e00:	b.ge	20c94 <mpfr_round_raw@@Base+0x1bc>  // b.tcont
   20e04:	ldr	x1, [x4, x0, lsl #3]
   20e08:	str	x1, [x19, x0, lsl #3]
   20e0c:	add	x0, x0, #0x1
   20e10:	b	20dfc <mpfr_round_raw@@Base+0x324>
   20e14:	mov	x1, #0xffffffffffffffff    	// #-1
   20e18:	mov	x21, x1
   20e1c:	b	20ba0 <mpfr_round_raw@@Base+0xc8>
   20e20:	mov	w20, #0x1                   	// #1
   20e24:	b	20b08 <mpfr_round_raw@@Base+0x30>

0000000000020e28 <mpfr_round_raw_2@@Base>:
   20e28:	and	w5, w4, #0xfffffffb
   20e2c:	cmp	w5, #0x1
   20e30:	ccmp	x1, x3, #0x4, ne  // ne = any
   20e34:	b.le	20ee8 <mpfr_round_raw_2@@Base+0xc0>
   20e38:	add	w2, w2, w4
   20e3c:	cmp	w2, #0x3
   20e40:	b.eq	20ee8 <mpfr_round_raw_2@@Base+0xc0>  // b.none
   20e44:	mov	x2, #0x40                  	// #64
   20e48:	sub	x1, x1, #0x1
   20e4c:	sdiv	x7, x3, x2
   20e50:	asr	x1, x1, #6
   20e54:	add	x8, x1, #0x1
   20e58:	ands	w3, w3, #0x3f
   20e5c:	sub	x1, x1, x7
   20e60:	b.eq	20ef8 <mpfr_round_raw_2@@Base+0xd0>  // b.none
   20e64:	sub	w5, w2, w3
   20e68:	mov	x2, #0x1                   	// #1
   20e6c:	add	x7, x7, #0x1
   20e70:	lsl	x2, x2, x5
   20e74:	sub	x5, x2, #0x1
   20e78:	neg	x2, x2
   20e7c:	ldr	x6, [x0, x1, lsl #3]
   20e80:	and	x5, x5, x6
   20e84:	add	w6, w4, #0x1
   20e88:	cmp	w6, #0x1
   20e8c:	b.hi	20ee0 <mpfr_round_raw_2@@Base+0xb8>  // b.pmore
   20e90:	mov	x6, #0x8000000000000000    	// #-9223372036854775808
   20e94:	lsr	x3, x6, x3
   20e98:	tst	x5, x3
   20e9c:	b.eq	20ee8 <mpfr_round_raw_2@@Base+0xc0>  // b.none
   20ea0:	cmn	w4, #0x1
   20ea4:	b.eq	20ef0 <mpfr_round_raw_2@@Base+0xc8>  // b.none
   20ea8:	bic	x5, x5, x3
   20eac:	cbnz	x5, 20ef0 <mpfr_round_raw_2@@Base+0xc8>
   20eb0:	cbnz	x1, 20ecc <mpfr_round_raw_2@@Base+0xa4>
   20eb4:	sub	x7, x8, x7
   20eb8:	eor	x2, x2, x2, lsl #1
   20ebc:	ldr	x0, [x0, x7, lsl #3]
   20ec0:	tst	x2, x0
   20ec4:	cset	w0, ne  // ne = any
   20ec8:	b	20eec <mpfr_round_raw_2@@Base+0xc4>
   20ecc:	sub	x1, x1, #0x1
   20ed0:	ldr	x5, [x0, x1, lsl #3]
   20ed4:	b	20eac <mpfr_round_raw_2@@Base+0x84>
   20ed8:	sub	x1, x1, #0x1
   20edc:	ldr	x5, [x0, x1, lsl #3]
   20ee0:	cbnz	x5, 20ef0 <mpfr_round_raw_2@@Base+0xc8>
   20ee4:	cbnz	x1, 20ed8 <mpfr_round_raw_2@@Base+0xb0>
   20ee8:	mov	w0, #0x0                   	// #0
   20eec:	ret
   20ef0:	mov	w0, #0x1                   	// #1
   20ef4:	b	20eec <mpfr_round_raw_2@@Base+0xc4>
   20ef8:	mov	x5, #0xffffffffffffffff    	// #-1
   20efc:	mov	x2, x5
   20f00:	b	20e7c <mpfr_round_raw_2@@Base+0x54>

0000000000020f04 <mpfr_round_raw_4@@Base>:
   20f04:	stp	x29, x30, [sp, #-32]!
   20f08:	sub	x6, x2, #0x1
   20f0c:	cmp	w5, #0x5
   20f10:	mov	x29, sp
   20f14:	stp	x19, x20, [sp, #16]
   20f18:	mov	x20, #0x40                  	// #64
   20f1c:	mov	x19, x0
   20f20:	asr	x6, x6, #6
   20f24:	mov	x0, x2
   20f28:	csinc	w5, w5, wzr, ne  // ne = any
   20f2c:	mov	x7, x1
   20f30:	sdiv	x2, x4, x20
   20f34:	add	x6, x6, #0x1
   20f38:	and	w8, w4, #0x3f
   20f3c:	cmp	x0, x4
   20f40:	b.gt	20f7c <mpfr_round_raw_4@@Base+0x78>
   20f44:	cbz	w8, 20f4c <mpfr_round_raw_4@@Base+0x48>
   20f48:	add	x2, x2, #0x1
   20f4c:	sub	x0, x2, x6
   20f50:	mov	x1, x7
   20f54:	mov	x2, x6
   20f58:	lsl	x20, x0, #3
   20f5c:	add	x0, x19, x0, lsl #3
   20f60:	bl	bb60 <__gmpn_copyd@plt>
   20f64:	mov	x2, x20
   20f68:	mov	x0, x19
   20f6c:	mov	w1, #0x0                   	// #0
   20f70:	bl	c1a0 <memset@plt>
   20f74:	mov	w0, #0x0                   	// #0
   20f78:	b	210a8 <mpfr_round_raw_4@@Base+0x1a4>
   20f7c:	cmp	w5, #0x1
   20f80:	b.eq	2112c <mpfr_round_raw_4@@Base+0x228>  // b.none
   20f84:	add	w3, w3, w5
   20f88:	cmp	w3, #0x3
   20f8c:	b.eq	2112c <mpfr_round_raw_4@@Base+0x228>  // b.none
   20f90:	sub	x0, x6, x2
   20f94:	sub	x0, x0, #0x1
   20f98:	cbz	w8, 211b8 <mpfr_round_raw_4@@Base+0x2b4>
   20f9c:	sub	w1, w20, w8
   20fa0:	mov	x20, #0x1                   	// #1
   20fa4:	add	x2, x2, #0x1
   20fa8:	lsl	x20, x20, x1
   20fac:	sub	x1, x20, #0x1
   20fb0:	neg	x20, x20
   20fb4:	ldr	x3, [x7, x0, lsl #3]
   20fb8:	and	x1, x1, x3
   20fbc:	add	w3, w5, #0x1
   20fc0:	cmp	w3, #0x1
   20fc4:	b.hi	210e4 <mpfr_round_raw_4@@Base+0x1e0>  // b.pmore
   20fc8:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
   20fcc:	lsr	x3, x3, x8
   20fd0:	tst	x1, x3
   20fd4:	b.ne	20fe4 <mpfr_round_raw_4@@Base+0xe0>  // b.any
   20fd8:	sub	x1, x6, x2
   20fdc:	add	x1, x7, x1, lsl #3
   20fe0:	b	21010 <mpfr_round_raw_4@@Base+0x10c>
   20fe4:	cmn	w5, #0x1
   20fe8:	b.eq	21030 <mpfr_round_raw_4@@Base+0x12c>  // b.none
   20fec:	bic	x1, x1, x3
   20ff0:	cbnz	x1, 21030 <mpfr_round_raw_4@@Base+0x12c>
   20ff4:	cbnz	x0, 21024 <mpfr_round_raw_4@@Base+0x120>
   20ff8:	sub	x3, x6, x2
   20ffc:	eor	x0, x20, x20, lsl #1
   21000:	add	x1, x7, x3, lsl #3
   21004:	ldr	x3, [x7, x3, lsl #3]
   21008:	tst	x0, x3
   2100c:	b.ne	21030 <mpfr_round_raw_4@@Base+0x12c>  // b.any
   21010:	mov	x0, x19
   21014:	bl	c5b0 <__gmpn_copyi@plt>
   21018:	ldr	x0, [x19]
   2101c:	and	x20, x0, x20
   21020:	b	2115c <mpfr_round_raw_4@@Base+0x258>
   21024:	sub	x0, x0, #0x1
   21028:	ldr	x1, [x7, x0, lsl #3]
   2102c:	b	20ff0 <mpfr_round_raw_4@@Base+0xec>
   21030:	sub	x6, x6, x2
   21034:	neg	w3, w8
   21038:	cmp	w8, #0x0
   2103c:	mov	x0, #0x1                   	// #1
   21040:	lsl	x3, x0, x3
   21044:	csel	x3, x3, x0, ne  // ne = any
   21048:	ldr	x1, [x7, x6, lsl #3]
   2104c:	add	x4, x7, x6, lsl #3
   21050:	adds	x3, x3, x1
   21054:	str	x3, [x19]
   21058:	b.cs	210cc <mpfr_round_raw_4@@Base+0x1c8>  // b.hs, b.nlast
   2105c:	cmp	x4, x19
   21060:	b.eq	21098 <mpfr_round_raw_4@@Base+0x194>  // b.none
   21064:	cmp	x0, x2
   21068:	b.ge	21098 <mpfr_round_raw_4@@Base+0x194>  // b.tcont
   2106c:	ldr	x1, [x4, x0, lsl #3]
   21070:	str	x1, [x19, x0, lsl #3]
   21074:	add	x0, x0, #0x1
   21078:	b	21064 <mpfr_round_raw_4@@Base+0x160>
   2107c:	ldr	x1, [x4, x0, lsl #3]
   21080:	add	x1, x1, #0x1
   21084:	str	x1, [x19, x0, lsl #3]
   21088:	add	x0, x0, #0x1
   2108c:	cbz	x1, 210cc <mpfr_round_raw_4@@Base+0x1c8>
   21090:	cmp	x4, x19
   21094:	b.ne	210c0 <mpfr_round_raw_4@@Base+0x1bc>  // b.any
   21098:	mov	x0, #0x0                   	// #0
   2109c:	ldr	x1, [x19]
   210a0:	and	x20, x1, x20
   210a4:	str	x20, [x19]
   210a8:	ldp	x19, x20, [sp, #16]
   210ac:	ldp	x29, x30, [sp], #32
   210b0:	ret
   210b4:	ldr	x1, [x4, x0, lsl #3]
   210b8:	str	x1, [x19, x0, lsl #3]
   210bc:	add	x0, x0, #0x1
   210c0:	cmp	x0, x2
   210c4:	b.lt	210b4 <mpfr_round_raw_4@@Base+0x1b0>  // b.tstop
   210c8:	b	21098 <mpfr_round_raw_4@@Base+0x194>
   210cc:	cmp	x0, x2
   210d0:	b.lt	2107c <mpfr_round_raw_4@@Base+0x178>  // b.tstop
   210d4:	mov	x0, #0x1                   	// #1
   210d8:	b	2109c <mpfr_round_raw_4@@Base+0x198>
   210dc:	sub	x0, x0, #0x1
   210e0:	ldr	x1, [x7, x0, lsl #3]
   210e4:	cbnz	x1, 2116c <mpfr_round_raw_4@@Base+0x268>
   210e8:	cbnz	x0, 210dc <mpfr_round_raw_4@@Base+0x1d8>
   210ec:	b	20fd8 <mpfr_round_raw_4@@Base+0xd4>
   210f0:	cmp	x0, x2
   210f4:	b.ge	210d4 <mpfr_round_raw_4@@Base+0x1d0>  // b.tcont
   210f8:	ldr	x1, [x4, x0, lsl #3]
   210fc:	add	x1, x1, #0x1
   21100:	str	x1, [x19, x0, lsl #3]
   21104:	add	x0, x0, #0x1
   21108:	cbz	x1, 210f0 <mpfr_round_raw_4@@Base+0x1ec>
   2110c:	cmp	x4, x19
   21110:	b.eq	21098 <mpfr_round_raw_4@@Base+0x194>  // b.none
   21114:	cmp	x0, x2
   21118:	b.ge	21098 <mpfr_round_raw_4@@Base+0x194>  // b.tcont
   2111c:	ldr	x1, [x4, x0, lsl #3]
   21120:	str	x1, [x19, x0, lsl #3]
   21124:	add	x0, x0, #0x1
   21128:	b	21114 <mpfr_round_raw_4@@Base+0x210>
   2112c:	cbz	w8, 21164 <mpfr_round_raw_4@@Base+0x260>
   21130:	neg	w8, w8
   21134:	mov	x20, #0x1                   	// #1
   21138:	add	x2, x2, #0x1
   2113c:	lsl	x20, x20, x8
   21140:	neg	x20, x20
   21144:	sub	x1, x6, x2
   21148:	mov	x0, x19
   2114c:	add	x1, x7, x1, lsl #3
   21150:	bl	c5b0 <__gmpn_copyi@plt>
   21154:	ldr	x8, [x19]
   21158:	and	x20, x8, x20
   2115c:	str	x20, [x19]
   21160:	b	20f74 <mpfr_round_raw_4@@Base+0x70>
   21164:	mov	x20, #0xffffffffffffffff    	// #-1
   21168:	b	21144 <mpfr_round_raw_4@@Base+0x240>
   2116c:	sub	x6, x6, x2
   21170:	neg	w3, w8
   21174:	cmp	w8, #0x0
   21178:	mov	x0, #0x1                   	// #1
   2117c:	lsl	x3, x0, x3
   21180:	csel	x3, x3, x0, ne  // ne = any
   21184:	ldr	x1, [x7, x6, lsl #3]
   21188:	add	x4, x7, x6, lsl #3
   2118c:	adds	x3, x3, x1
   21190:	str	x3, [x19]
   21194:	b.cs	210f0 <mpfr_round_raw_4@@Base+0x1ec>  // b.hs, b.nlast
   21198:	cmp	x4, x19
   2119c:	b.eq	21098 <mpfr_round_raw_4@@Base+0x194>  // b.none
   211a0:	cmp	x0, x2
   211a4:	b.ge	21098 <mpfr_round_raw_4@@Base+0x194>  // b.tcont
   211a8:	ldr	x1, [x4, x0, lsl #3]
   211ac:	str	x1, [x19, x0, lsl #3]
   211b0:	add	x0, x0, #0x1
   211b4:	b	211a0 <mpfr_round_raw_4@@Base+0x29c>
   211b8:	mov	x1, #0xffffffffffffffff    	// #-1
   211bc:	mov	x20, x1
   211c0:	b	20fb4 <mpfr_round_raw_4@@Base+0xb0>

00000000000211c4 <mpfr_prec_round@@Base>:
   211c4:	stp	x29, x30, [sp, #-96]!
   211c8:	mov	x29, sp
   211cc:	stp	x19, x20, [sp, #16]
   211d0:	mov	x19, x0
   211d4:	mov	x0, #0xfffffffffffffefe    	// #-258
   211d8:	stp	x21, x22, [sp, #32]
   211dc:	sub	x21, x1, #0x1
   211e0:	movk	x0, #0x7fff, lsl #48
   211e4:	stp	x23, x24, [sp, #48]
   211e8:	cmp	x21, x0
   211ec:	stp	x25, x26, [sp, #64]
   211f0:	b.ls	2120c <mpfr_prec_round@@Base+0x48>  // b.plast
   211f4:	adrp	x2, 56000 <mpfr_l2b_2_0__tab@@Base+0x488>
   211f8:	adrp	x0, 56000 <mpfr_l2b_2_0__tab@@Base+0x488>
   211fc:	add	x2, x2, #0x46
   21200:	add	x0, x0, #0x94
   21204:	mov	w1, #0x3b                  	// #59
   21208:	bl	cbd0 <mpfr_assert_fail@plt>
   2120c:	ldr	x0, [x19]
   21210:	asr	x21, x21, #6
   21214:	mov	x23, x1
   21218:	mov	w26, w2
   2121c:	sub	x0, x0, #0x1
   21220:	add	x25, x21, #0x1
   21224:	cmp	x21, x0, asr #6
   21228:	b.le	21260 <mpfr_prec_round@@Base+0x9c>
   2122c:	ldr	x0, [x19, #24]
   21230:	ldur	x1, [x0, #-8]
   21234:	cmp	x25, x1
   21238:	b.le	21260 <mpfr_prec_round@@Base+0x9c>
   2123c:	add	x1, x1, #0x1
   21240:	add	x2, x21, #0x2
   21244:	sub	x0, x0, #0x8
   21248:	lsl	x1, x1, #3
   2124c:	lsl	x2, x2, #3
   21250:	bl	c250 <mpfr_reallocate_func@plt>
   21254:	add	x1, x0, #0x8
   21258:	str	x1, [x19, #24]
   2125c:	str	x25, [x0]
   21260:	ldr	x0, [x19, #16]
   21264:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   21268:	cmp	x0, x1
   2126c:	b.gt	212b0 <mpfr_prec_round@@Base+0xec>
   21270:	str	x23, [x19]
   21274:	mov	x1, #0x2                   	// #2
   21278:	movk	x1, #0x8000, lsl #48
   2127c:	cmp	x0, x1
   21280:	b.ne	212a8 <mpfr_prec_round@@Base+0xe4>  // b.any
   21284:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   21288:	ldr	x1, [x0, #2592]
   2128c:	add	x0, x0, #0xa20
   21290:	blr	x1
   21294:	mrs	x1, tpidr_el0
   21298:	add	x0, x1, x0
   2129c:	ldr	w1, [x0]
   212a0:	orr	w1, w1, #0x4
   212a4:	str	w1, [x0]
   212a8:	mov	w0, #0x0                   	// #0
   212ac:	b	21344 <mpfr_prec_round@@Base+0x180>
   212b0:	str	xzr, [x29, #88]
   212b4:	lsl	x20, x25, #3
   212b8:	cmp	x20, #0x4, lsl #12
   212bc:	b.hi	21360 <mpfr_prec_round@@Base+0x19c>  // b.pmore
   212c0:	add	x0, x20, #0xf
   212c4:	and	x0, x0, #0xfffffffffffffff0
   212c8:	sub	sp, sp, x0
   212cc:	mov	x22, sp
   212d0:	ldr	x2, [x19]
   212d4:	add	x6, x29, #0x54
   212d8:	ldr	w3, [x19, #8]
   212dc:	mov	w5, w26
   212e0:	ldr	x24, [x19, #24]
   212e4:	mov	x4, x23
   212e8:	mov	x0, x22
   212ec:	lsr	w3, w3, #31
   212f0:	mov	x1, x24
   212f4:	bl	cab0 <mpfr_round_raw@plt>
   212f8:	str	x23, [x19]
   212fc:	cbz	w0, 213a4 <mpfr_prec_round@@Base+0x1e0>
   21300:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   21304:	ldr	x2, [x0, #2560]
   21308:	add	x0, x0, #0xa00
   2130c:	blr	x2
   21310:	mrs	x2, tpidr_el0
   21314:	ldr	x1, [x19, #16]
   21318:	ldr	x0, [x2, x0]
   2131c:	cmp	x0, x1
   21320:	b.ne	21374 <mpfr_prec_round@@Base+0x1b0>  // b.any
   21324:	ldr	w2, [x19, #8]
   21328:	mov	w1, w26
   2132c:	mov	x0, x19
   21330:	bl	bfc0 <mpfr_overflow@plt>
   21334:	ldr	x0, [x29, #88]
   21338:	cbz	x0, 21340 <mpfr_prec_round@@Base+0x17c>
   2133c:	bl	c4a0 <mpfr_tmp_free@plt>
   21340:	ldr	w0, [x29, #84]
   21344:	mov	sp, x29
   21348:	ldp	x19, x20, [sp, #16]
   2134c:	ldp	x21, x22, [sp, #32]
   21350:	ldp	x23, x24, [sp, #48]
   21354:	ldp	x25, x26, [sp, #64]
   21358:	ldp	x29, x30, [sp], #96
   2135c:	ret
   21360:	mov	x1, x20
   21364:	add	x0, x29, #0x58
   21368:	bl	be40 <mpfr_tmp_allocate@plt>
   2136c:	mov	x22, x0
   21370:	b	212d0 <mpfr_prec_round@@Base+0x10c>
   21374:	add	x20, x24, x20
   21378:	add	x1, x1, #0x1
   2137c:	str	x1, [x19, #16]
   21380:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   21384:	cmp	x25, #0x1
   21388:	stur	x0, [x20, #-8]
   2138c:	b.eq	21334 <mpfr_prec_round@@Base+0x170>  // b.none
   21390:	lsl	x2, x21, #3
   21394:	mov	x0, x24
   21398:	mov	w1, #0x0                   	// #0
   2139c:	bl	c1a0 <memset@plt>
   213a0:	b	21334 <mpfr_prec_round@@Base+0x170>
   213a4:	cmp	x22, x24
   213a8:	b.eq	21334 <mpfr_prec_round@@Base+0x170>  // b.none
   213ac:	mov	x2, x20
   213b0:	mov	x1, x22
   213b4:	mov	x0, x24
   213b8:	bl	ba90 <memcpy@plt>
   213bc:	b	21334 <mpfr_prec_round@@Base+0x170>

00000000000213c0 <mpfr_can_round_raw@@Base>:
   213c0:	stp	x29, x30, [sp, #-176]!
   213c4:	cmp	x6, #0x0
   213c8:	mov	x29, sp
   213cc:	stp	x19, x20, [sp, #16]
   213d0:	stp	x21, x22, [sp, #32]
   213d4:	stp	x23, x24, [sp, #48]
   213d8:	stp	x25, x26, [sp, #64]
   213dc:	stp	x27, x28, [sp, #80]
   213e0:	b.gt	213fc <mpfr_can_round_raw@@Base+0x3c>
   213e4:	adrp	x2, 56000 <mpfr_l2b_2_0__tab@@Base+0x488>
   213e8:	adrp	x0, 56000 <mpfr_l2b_2_0__tab@@Base+0x488>
   213ec:	add	x2, x2, #0xa1
   213f0:	add	x0, x0, #0x94
   213f4:	mov	w1, #0xbf                  	// #191
   213f8:	bl	cbd0 <mpfr_assert_fail@plt>
   213fc:	mov	x21, x0
   21400:	mov	x23, x1
   21404:	mov	x27, x3
   21408:	mov	w22, w4
   2140c:	mov	w19, w5
   21410:	mov	x20, x6
   21414:	lsr	w25, w2, #31
   21418:	cmp	w4, #0x5
   2141c:	b.eq	21b28 <mpfr_can_round_raw@@Base+0x768>  // b.none
   21420:	cbz	w4, 21b28 <mpfr_can_round_raw@@Base+0x768>
   21424:	cmp	w4, #0x1
   21428:	b.eq	2143c <mpfr_can_round_raw@@Base+0x7c>  // b.none
   2142c:	add	w22, w25, w4
   21430:	cmp	w22, #0x3
   21434:	mov	w22, #0x4                   	// #4
   21438:	csinc	w22, w22, wzr, ne  // ne = any
   2143c:	cmp	w19, #0x5
   21440:	b.eq	214a4 <mpfr_can_round_raw@@Base+0xe4>  // b.none
   21444:	cbz	w19, 21460 <mpfr_can_round_raw@@Base+0xa0>
   21448:	cmp	w19, #0x1
   2144c:	b.eq	21460 <mpfr_can_round_raw@@Base+0xa0>  // b.none
   21450:	add	w19, w25, w19
   21454:	cmp	w19, #0x3
   21458:	mov	w19, #0x4                   	// #4
   2145c:	csinc	w19, w19, wzr, ne  // ne = any
   21460:	cmp	w22, #0x0
   21464:	cset	w0, eq  // eq = none
   21468:	str	w0, [x29, #120]
   2146c:	cinc	x0, x20, eq  // eq = none
   21470:	str	x0, [x29, #128]
   21474:	cmp	x0, x27
   21478:	b.le	214ac <mpfr_can_round_raw@@Base+0xec>
   2147c:	mov	w19, #0x0                   	// #0
   21480:	mov	sp, x29
   21484:	mov	w0, w19
   21488:	ldp	x19, x20, [sp, #16]
   2148c:	ldp	x21, x22, [sp, #32]
   21490:	ldp	x23, x24, [sp, #48]
   21494:	ldp	x25, x26, [sp, #64]
   21498:	ldp	x27, x28, [sp, #80]
   2149c:	ldp	x29, x30, [sp], #176
   214a0:	ret
   214a4:	mov	w19, #0x1                   	// #1
   214a8:	b	21460 <mpfr_can_round_raw@@Base+0xa0>
   214ac:	b.ne	214bc <mpfr_can_round_raw@@Base+0xfc>  // b.any
   214b0:	cmp	w22, #0x4
   214b4:	ccmp	w19, #0x1, #0x4, ne  // ne = any
   214b8:	b.eq	2147c <mpfr_can_round_raw@@Base+0xbc>  // b.none
   214bc:	lsl	x24, x23, #6
   214c0:	cmp	x20, x23, lsl #6
   214c4:	b.le	21510 <mpfr_can_round_raw@@Base+0x150>
   214c8:	cmp	w19, #0x0
   214cc:	ccmp	w19, w22, #0x4, ne  // ne = any
   214d0:	b.ne	2147c <mpfr_can_round_raw@@Base+0xbc>  // b.any
   214d4:	cmp	x20, x27
   214d8:	b.ge	2147c <mpfr_can_round_raw@@Base+0xbc>  // b.tcont
   214dc:	cmp	w22, #0x1
   214e0:	b.ne	214ec <mpfr_can_round_raw@@Base+0x12c>  // b.any
   214e4:	mov	w19, #0x1                   	// #1
   214e8:	b	21480 <mpfr_can_round_raw@@Base+0xc0>
   214ec:	add	x20, x20, #0x1
   214f0:	cmp	x20, x27
   214f4:	b.ne	214e4 <mpfr_can_round_raw@@Base+0x124>  // b.any
   214f8:	mov	x1, x23
   214fc:	mov	x0, x21
   21500:	bl	c860 <mpfr_powerof2_raw2@plt>
   21504:	cmp	w0, #0x0
   21508:	cset	w19, eq  // eq = none
   2150c:	b	21480 <mpfr_can_round_raw@@Base+0xc0>
   21510:	cmp	x24, x27
   21514:	b.ge	2160c <mpfr_can_round_raw@@Base+0x24c>  // b.tcont
   21518:	mov	x1, x23
   2151c:	mov	x0, x21
   21520:	bl	c860 <mpfr_powerof2_raw2@plt>
   21524:	cbz	w0, 21554 <mpfr_can_round_raw@@Base+0x194>
   21528:	cmp	w19, #0x1
   2152c:	ccmp	w19, #0x4, #0x4, ne  // ne = any
   21530:	b.ne	2153c <mpfr_can_round_raw@@Base+0x17c>  // b.any
   21534:	cmp	w19, w22
   21538:	b.ne	2147c <mpfr_can_round_raw@@Base+0xbc>  // b.any
   2153c:	cmp	w22, #0x1
   21540:	b.eq	214e4 <mpfr_can_round_raw@@Base+0x124>  // b.none
   21544:	add	x20, x20, #0x1
   21548:	cmp	x20, x27
   2154c:	cset	w19, lt  // lt = tstop
   21550:	b	21480 <mpfr_can_round_raw@@Base+0xc0>
   21554:	cbnz	w19, 215e0 <mpfr_can_round_raw@@Base+0x220>
   21558:	add	x3, x20, #0x1
   2155c:	cmp	x3, x27
   21560:	b.ne	2156c <mpfr_can_round_raw@@Base+0x1ac>  // b.any
   21564:	ldr	x0, [x21]
   21568:	tbnz	w0, #0, 2147c <mpfr_can_round_raw@@Base+0xbc>
   2156c:	cmp	x24, x20
   21570:	b.le	214e4 <mpfr_can_round_raw@@Base+0x124>
   21574:	asr	x0, x20, #6
   21578:	mvn	w2, w20
   2157c:	add	x0, x0, #0x1
   21580:	sub	x0, x23, x0
   21584:	ldr	x1, [x21, x0, lsl #3]
   21588:	lsr	x0, x1, x2
   2158c:	tbz	w0, #0, 214e4 <mpfr_can_round_raw@@Base+0x124>
   21590:	mov	w2, w25
   21594:	mov	x1, x24
   21598:	mov	x0, x21
   2159c:	mov	w4, #0x4                   	// #4
   215a0:	bl	c7f0 <mpfr_round_raw_2@plt>
   215a4:	cbnz	w0, 214e4 <mpfr_can_round_raw@@Base+0x124>
   215a8:	cbz	w22, 2147c <mpfr_can_round_raw@@Base+0xbc>
   215ac:	sub	x1, x20, #0x1
   215b0:	neg	w20, w20
   215b4:	cmp	w22, #0x1
   215b8:	asr	x1, x1, #6
   215bc:	add	x1, x1, #0x1
   215c0:	sub	x23, x23, x1
   215c4:	ldr	x19, [x21, x23, lsl #3]
   215c8:	lsr	x20, x19, x20
   215cc:	mvn	x19, x20
   215d0:	and	w20, w19, #0x1
   215d4:	cset	w19, eq  // eq = none
   215d8:	eor	w19, w19, w20
   215dc:	b	21480 <mpfr_can_round_raw@@Base+0xc0>
   215e0:	cmp	w19, w22
   215e4:	b.eq	214e4 <mpfr_can_round_raw@@Base+0x124>  // b.none
   215e8:	mov	x3, x20
   215ec:	mov	w2, w25
   215f0:	mov	x1, x24
   215f4:	mov	x0, x21
   215f8:	mov	w4, #0x4                   	// #4
   215fc:	bl	c7f0 <mpfr_round_raw_2@plt>
   21600:	cmp	w0, #0x0
   21604:	cset	w19, ne  // ne = any
   21608:	b	21480 <mpfr_can_round_raw@@Base+0xc0>
   2160c:	sub	x3, x20, #0x1
   21610:	neg	w28, w27
   21614:	and	w0, w28, #0x3f
   21618:	sub	x5, x27, #0x1
   2161c:	neg	w24, w20
   21620:	sub	x23, x23, x3, asr #6
   21624:	str	w0, [x29, #140]
   21628:	asr	x0, x3, #6
   2162c:	asr	x5, x5, #6
   21630:	str	x0, [x29, #144]
   21634:	and	w0, w24, #0x3f
   21638:	str	w0, [x29, #152]
   2163c:	str	xzr, [x29, #168]
   21640:	sub	x5, x5, x3, asr #6
   21644:	lsl	x6, x23, #3
   21648:	and	x3, x3, #0xffffffffffffffc0
   2164c:	cmp	x6, #0x4, lsl #12
   21650:	sub	x3, x20, x3
   21654:	add	x24, x5, #0x1
   21658:	b.hi	21708 <mpfr_can_round_raw@@Base+0x348>  // b.pmore
   2165c:	add	x0, x6, #0xf
   21660:	and	x0, x0, #0xfffffffffffffff0
   21664:	sub	sp, sp, x0
   21668:	mov	x26, sp
   2166c:	subs	x28, x23, x24
   21670:	b.le	21694 <mpfr_can_round_raw@@Base+0x2d4>
   21674:	cmp	x26, x21
   21678:	b.eq	21694 <mpfr_can_round_raw@@Base+0x2d4>  // b.none
   2167c:	lsl	x2, x28, #3
   21680:	mov	x1, x21
   21684:	mov	x0, x26
   21688:	stp	x3, x6, [x29, #104]
   2168c:	bl	ba90 <memcpy@plt>
   21690:	ldp	x3, x6, [x29, #104]
   21694:	cbz	w22, 21810 <mpfr_can_round_raw@@Base+0x450>
   21698:	cmp	w22, #0x1
   2169c:	add	x0, x21, x6
   216a0:	lsl	x1, x23, #6
   216a4:	b.ne	21a74 <mpfr_can_round_raw@@Base+0x6b4>  // b.any
   216a8:	mov	w4, w19
   216ac:	mov	w2, w25
   216b0:	stp	x6, x3, [x29, #120]
   216b4:	ldur	x22, [x0, #-8]
   216b8:	mov	x0, x21
   216bc:	bl	c7f0 <mpfr_round_raw_2@plt>
   216c0:	ldrb	w3, [x29, #140]
   216c4:	add	x2, x26, x28, lsl #3
   216c8:	ldr	x10, [x21, x28, lsl #3]
   216cc:	mov	x1, #0x1                   	// #1
   216d0:	lsl	x5, x1, x3
   216d4:	add	x4, x21, x28, lsl #3
   216d8:	adds	x28, x5, x10
   216dc:	str	x28, [x2]
   216e0:	ldp	x6, x3, [x29, #120]
   216e4:	b.cs	217dc <mpfr_can_round_raw@@Base+0x41c>  // b.hs, b.nlast
   216e8:	cmp	x2, x4
   216ec:	b.eq	21740 <mpfr_can_round_raw@@Base+0x380>  // b.none
   216f0:	cmp	x24, x1
   216f4:	b.le	21740 <mpfr_can_round_raw@@Base+0x380>
   216f8:	ldr	x10, [x4, x1, lsl #3]
   216fc:	str	x10, [x2, x1, lsl #3]
   21700:	add	x1, x1, #0x1
   21704:	b	216f0 <mpfr_can_round_raw@@Base+0x330>
   21708:	mov	x1, x6
   2170c:	add	x0, x29, #0xa8
   21710:	stp	x3, x6, [x29, #104]
   21714:	bl	be40 <mpfr_tmp_allocate@plt>
   21718:	mov	x26, x0
   2171c:	ldp	x3, x6, [x29, #104]
   21720:	b	2166c <mpfr_can_round_raw@@Base+0x2ac>
   21724:	ldr	x10, [x4, x1, lsl #3]
   21728:	add	x10, x10, #0x1
   2172c:	str	x10, [x2, x1, lsl #3]
   21730:	add	x1, x1, #0x1
   21734:	cbz	x10, 217dc <mpfr_can_round_raw@@Base+0x41c>
   21738:	cmp	x2, x4
   2173c:	b.ne	217d0 <mpfr_can_round_raw@@Base+0x410>  // b.any
   21740:	mov	x2, #0x0                   	// #0
   21744:	sub	x1, x6, #0x8
   21748:	add	x21, x21, x1
   2174c:	mov	x1, #0x0                   	// #0
   21750:	ldr	x4, [x29, #144]
   21754:	add	x1, x1, #0x1
   21758:	cmp	x1, x4
   2175c:	b.ge	21764 <mpfr_can_round_raw@@Base+0x3a4>  // b.tcont
   21760:	cbnz	x2, 217ec <mpfr_can_round_raw@@Base+0x42c>
   21764:	eor	w1, w2, #0x1
   21768:	cmp	x20, x27
   2176c:	csel	w1, w1, wzr, eq  // eq = none
   21770:	cbnz	w1, 217fc <mpfr_can_round_raw@@Base+0x43c>
   21774:	ldrb	w1, [x29, #152]
   21778:	sxtw	x0, w0
   2177c:	lsr	x1, x22, x1
   21780:	and	x1, x1, #0x1
   21784:	eor	x22, x0, x1
   21788:	cbz	x2, 21af0 <mpfr_can_round_raw@@Base+0x730>
   2178c:	cmp	w19, #0x1
   21790:	b.eq	217fc <mpfr_can_round_raw@@Base+0x43c>  // b.none
   21794:	cmp	w19, #0x4
   21798:	b.ne	21804 <mpfr_can_round_raw@@Base+0x444>  // b.any
   2179c:	cmp	x20, x27
   217a0:	ccmp	x23, x24, #0x0, lt  // lt = tstop
   217a4:	b.ne	217fc <mpfr_can_round_raw@@Base+0x43c>  // b.any
   217a8:	ldr	x0, [x26]
   217ac:	cbnz	x0, 217fc <mpfr_can_round_raw@@Base+0x43c>
   217b0:	mov	w19, #0x1                   	// #1
   217b4:	ldr	x0, [x29, #168]
   217b8:	cbz	x0, 21480 <mpfr_can_round_raw@@Base+0xc0>
   217bc:	bl	c4a0 <mpfr_tmp_free@plt>
   217c0:	b	21480 <mpfr_can_round_raw@@Base+0xc0>
   217c4:	ldr	x10, [x4, x1, lsl #3]
   217c8:	str	x10, [x2, x1, lsl #3]
   217cc:	add	x1, x1, #0x1
   217d0:	cmp	x24, x1
   217d4:	b.gt	217c4 <mpfr_can_round_raw@@Base+0x404>
   217d8:	b	21740 <mpfr_can_round_raw@@Base+0x380>
   217dc:	cmp	x24, x1
   217e0:	b.gt	21724 <mpfr_can_round_raw@@Base+0x364>
   217e4:	mov	x2, #0x1                   	// #1
   217e8:	b	21744 <mpfr_can_round_raw@@Base+0x384>
   217ec:	ldr	x2, [x21, x1, lsl #3]
   217f0:	cmn	x2, #0x1
   217f4:	cset	x2, eq  // eq = none
   217f8:	b	21750 <mpfr_can_round_raw@@Base+0x390>
   217fc:	mov	w19, #0x0                   	// #0
   21800:	b	217b4 <mpfr_can_round_raw@@Base+0x3f4>
   21804:	cmp	x0, x1
   21808:	cset	w19, eq  // eq = none
   2180c:	b	217b4 <mpfr_can_round_raw@@Base+0x3f4>
   21810:	ldrb	w4, [x29, #140]
   21814:	add	x0, x26, x28, lsl #3
   21818:	ldr	x11, [x21, x28, lsl #3]
   2181c:	mov	x1, #0x1                   	// #1
   21820:	lsl	x4, x1, x4
   21824:	add	x2, x21, x28, lsl #3
   21828:	adds	x4, x4, x11
   2182c:	str	x4, [x0]
   21830:	b.cs	21914 <mpfr_can_round_raw@@Base+0x554>  // b.hs, b.nlast
   21834:	cmp	x0, x2
   21838:	b.eq	21870 <mpfr_can_round_raw@@Base+0x4b0>  // b.none
   2183c:	cmp	x24, x1
   21840:	b.le	21870 <mpfr_can_round_raw@@Base+0x4b0>
   21844:	ldr	x4, [x2, x1, lsl #3]
   21848:	str	x4, [x0, x1, lsl #3]
   2184c:	add	x1, x1, #0x1
   21850:	b	2183c <mpfr_can_round_raw@@Base+0x47c>
   21854:	ldr	x4, [x2, x1, lsl #3]
   21858:	add	x4, x4, #0x1
   2185c:	str	x4, [x0, x1, lsl #3]
   21860:	add	x1, x1, #0x1
   21864:	cbz	x4, 21914 <mpfr_can_round_raw@@Base+0x554>
   21868:	cmp	x0, x2
   2186c:	b.ne	21908 <mpfr_can_round_raw@@Base+0x548>  // b.any
   21870:	mov	x11, #0x0                   	// #0
   21874:	sub	x1, x6, #0x8
   21878:	mov	x0, #0x0                   	// #0
   2187c:	add	x1, x21, x1
   21880:	ldr	x2, [x29, #144]
   21884:	add	x0, x0, #0x1
   21888:	cmp	x0, x2
   2188c:	b.ge	21894 <mpfr_can_round_raw@@Base+0x4d4>  // b.tcont
   21890:	cbnz	x11, 21924 <mpfr_can_round_raw@@Base+0x564>
   21894:	add	x0, x26, x6
   21898:	mov	w4, w19
   2189c:	mov	w2, w25
   218a0:	lsl	x1, x23, #6
   218a4:	stp	x11, x6, [x29, #96]
   218a8:	ldur	x22, [x0, #-8]
   218ac:	str	x3, [x29, #112]
   218b0:	ldrb	w0, [x29, #152]
   218b4:	lsr	x22, x22, x0
   218b8:	mov	x0, x26
   218bc:	bl	c7f0 <mpfr_round_raw_2@plt>
   218c0:	and	x22, x22, #0x1
   218c4:	ldp	x11, x6, [x29, #96]
   218c8:	sxtw	x0, w0
   218cc:	eor	x22, x0, x22
   218d0:	ldr	x3, [x29, #112]
   218d4:	cbz	x11, 21aa4 <mpfr_can_round_raw@@Base+0x6e4>
   218d8:	cmp	w19, #0x1
   218dc:	b.eq	217fc <mpfr_can_round_raw@@Base+0x43c>  // b.none
   218e0:	add	x20, x20, #0x1
   218e4:	cmp	w19, #0x4
   218e8:	b.ne	21934 <mpfr_can_round_raw@@Base+0x574>  // b.any
   218ec:	cmp	x20, x27
   218f0:	b.ge	217fc <mpfr_can_round_raw@@Base+0x43c>  // b.tcont
   218f4:	cmp	x23, x24
   218f8:	b	217a4 <mpfr_can_round_raw@@Base+0x3e4>
   218fc:	ldr	x4, [x2, x1, lsl #3]
   21900:	str	x4, [x0, x1, lsl #3]
   21904:	add	x1, x1, #0x1
   21908:	cmp	x24, x1
   2190c:	b.gt	218fc <mpfr_can_round_raw@@Base+0x53c>
   21910:	b	21870 <mpfr_can_round_raw@@Base+0x4b0>
   21914:	cmp	x24, x1
   21918:	b.gt	21854 <mpfr_can_round_raw@@Base+0x494>
   2191c:	mov	x11, #0x1                   	// #1
   21920:	b	21874 <mpfr_can_round_raw@@Base+0x4b4>
   21924:	ldr	x2, [x1, x0, lsl #3]
   21928:	cmn	x2, #0x1
   2192c:	cset	x11, eq  // eq = none
   21930:	b	21880 <mpfr_can_round_raw@@Base+0x4c0>
   21934:	cmp	x20, x27
   21938:	cset	w19, lt  // lt = tstop
   2193c:	b	217b4 <mpfr_can_round_raw@@Base+0x3f4>
   21940:	ldr	x2, [x10, x1, lsl #3]
   21944:	sub	x4, x2, #0x1
   21948:	str	x4, [x0, x1, lsl #3]
   2194c:	add	x1, x1, #0x1
   21950:	cbz	x2, 219ec <mpfr_can_round_raw@@Base+0x62c>
   21954:	cmp	x0, x10
   21958:	b.ne	219e0 <mpfr_can_round_raw@@Base+0x620>  // b.any
   2195c:	mov	x1, #0x0                   	// #0
   21960:	sub	x2, x6, #0x8
   21964:	add	x10, x21, x6
   21968:	mov	x0, #0x0                   	// #0
   2196c:	ldr	x4, [x26, x2]
   21970:	ldr	x5, [x29, #144]
   21974:	cmp	x0, x5
   21978:	cset	w5, lt  // lt = tstop
   2197c:	tst	w5, w1
   21980:	b.ne	219fc <mpfr_can_round_raw@@Base+0x63c>  // b.any
   21984:	ldr	x1, [x29, #144]
   21988:	cmp	x0, x1
   2198c:	b.ne	21a14 <mpfr_can_round_raw@@Base+0x654>  // b.any
   21990:	tbnz	x4, #63, 21a14 <mpfr_can_round_raw@@Base+0x654>
   21994:	cmp	w19, #0x1
   21998:	b.eq	217fc <mpfr_can_round_raw@@Base+0x43c>  // b.none
   2199c:	ldr	w0, [x29, #120]
   219a0:	cmp	w0, #0x0
   219a4:	ccmp	w19, #0x4, #0x0, ne  // ne = any
   219a8:	b.eq	217fc <mpfr_can_round_raw@@Base+0x43c>  // b.none
   219ac:	cbnz	x22, 217fc <mpfr_can_round_raw@@Base+0x43c>
   219b0:	mov	w4, w19
   219b4:	add	x3, x3, #0x1
   219b8:	mov	w2, w25
   219bc:	lsl	x1, x23, #6
   219c0:	mov	x0, x26
   219c4:	bl	c7f0 <mpfr_round_raw_2@plt>
   219c8:	cmp	w0, #0x0
   219cc:	cset	w19, ne  // ne = any
   219d0:	b	217b4 <mpfr_can_round_raw@@Base+0x3f4>
   219d4:	ldr	x2, [x10, x1, lsl #3]
   219d8:	str	x2, [x0, x1, lsl #3]
   219dc:	add	x1, x1, #0x1
   219e0:	cmp	x24, x1
   219e4:	b.gt	219d4 <mpfr_can_round_raw@@Base+0x614>
   219e8:	b	2195c <mpfr_can_round_raw@@Base+0x59c>
   219ec:	cmp	x24, x1
   219f0:	b.gt	21940 <mpfr_can_round_raw@@Base+0x580>
   219f4:	mov	x1, #0x1                   	// #1
   219f8:	b	21960 <mpfr_can_round_raw@@Base+0x5a0>
   219fc:	ldr	x1, [x10, x0, lsl #3]
   21a00:	add	x0, x0, #0x1
   21a04:	cmp	x1, #0x0
   21a08:	sub	x4, x1, #0x1
   21a0c:	cset	x1, eq  // eq = none
   21a10:	b	21970 <mpfr_can_round_raw@@Base+0x5b0>
   21a14:	ldr	x0, [x29, #128]
   21a18:	cmp	x0, x27
   21a1c:	b.ne	21af0 <mpfr_can_round_raw@@Base+0x730>  // b.any
   21a20:	cbnz	w19, 217fc <mpfr_can_round_raw@@Base+0x43c>
   21a24:	ldr	x0, [x21, x2]
   21a28:	ldrb	w1, [x29, #152]
   21a2c:	lsr	x24, x0, x1
   21a30:	tbnz	w24, #0, 217fc <mpfr_can_round_raw@@Base+0x43c>
   21a34:	lsl	x23, x23, #6
   21a38:	mov	w2, w25
   21a3c:	mov	x1, x23
   21a40:	mov	w4, #0x1                   	// #1
   21a44:	mov	x0, x21
   21a48:	str	x3, [x29, #152]
   21a4c:	bl	c7f0 <mpfr_round_raw_2@plt>
   21a50:	mov	w19, w0
   21a54:	ldr	x3, [x29, #152]
   21a58:	mov	w2, w25
   21a5c:	mov	x1, x23
   21a60:	mov	x0, x21
   21a64:	mov	w4, #0x4                   	// #4
   21a68:	bl	c7f0 <mpfr_round_raw_2@plt>
   21a6c:	cmp	w19, w0
   21a70:	b	21808 <mpfr_can_round_raw@@Base+0x448>
   21a74:	ldur	x22, [x0, #-8]
   21a78:	mov	w4, w19
   21a7c:	ldrb	w0, [x29, #152]
   21a80:	mov	w2, w25
   21a84:	stp	x6, x3, [x29, #104]
   21a88:	lsr	x22, x22, x0
   21a8c:	mov	x0, x21
   21a90:	bl	c7f0 <mpfr_round_raw_2@plt>
   21a94:	and	x20, x22, #0x1
   21a98:	ldp	x6, x3, [x29, #104]
   21a9c:	sxtw	x22, w0
   21aa0:	eor	x22, x22, x20
   21aa4:	lsl	x4, x28, #3
   21aa8:	ldrb	w2, [x29, #140]
   21aac:	mov	x1, #0x1                   	// #1
   21ab0:	add	x0, x26, x28, lsl #3
   21ab4:	add	x10, x21, x28, lsl #3
   21ab8:	lsl	x28, x1, x2
   21abc:	ldr	x2, [x21, x4]
   21ac0:	sub	x11, x2, x28
   21ac4:	str	x11, [x26, x4]
   21ac8:	cmp	x28, x2
   21acc:	b.hi	219ec <mpfr_can_round_raw@@Base+0x62c>  // b.pmore
   21ad0:	cmp	x0, x10
   21ad4:	b.eq	2195c <mpfr_can_round_raw@@Base+0x59c>  // b.none
   21ad8:	cmp	x24, x1
   21adc:	b.le	2195c <mpfr_can_round_raw@@Base+0x59c>
   21ae0:	ldr	x2, [x10, x1, lsl #3]
   21ae4:	str	x2, [x0, x1, lsl #3]
   21ae8:	add	x1, x1, #0x1
   21aec:	b	21ad8 <mpfr_can_round_raw@@Base+0x718>
   21af0:	add	x9, x26, x6
   21af4:	ldrb	w1, [x29, #152]
   21af8:	mov	w4, w19
   21afc:	mov	w2, w25
   21b00:	ldur	x0, [x9, #-8]
   21b04:	lsr	x24, x0, x1
   21b08:	lsl	x1, x23, #6
   21b0c:	and	x24, x24, #0x1
   21b10:	mov	x0, x26
   21b14:	bl	c7f0 <mpfr_round_raw_2@plt>
   21b18:	sxtw	x0, w0
   21b1c:	eor	x0, x0, x24
   21b20:	cmp	x0, x22
   21b24:	b	21808 <mpfr_can_round_raw@@Base+0x448>
   21b28:	cmp	w19, #0x5
   21b2c:	mov	w22, #0x0                   	// #0
   21b30:	b.ne	21444 <mpfr_can_round_raw@@Base+0x84>  // b.any
   21b34:	mov	w19, #0x0                   	// #0
   21b38:	b	21460 <mpfr_can_round_raw@@Base+0xa0>

0000000000021b3c <mpfr_can_round@@Base>:
   21b3c:	mov	x6, x4
   21b40:	mov	w5, w3
   21b44:	ldr	x4, [x0, #16]
   21b48:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   21b4c:	cmp	x4, x3
   21b50:	b.le	21b78 <mpfr_can_round@@Base+0x3c>
   21b54:	ldr	x7, [x0]
   21b58:	mov	w4, w2
   21b5c:	ldr	w2, [x0, #8]
   21b60:	mov	x3, x1
   21b64:	ldr	x0, [x0, #24]
   21b68:	sub	x7, x7, #0x1
   21b6c:	asr	x7, x7, #6
   21b70:	add	x1, x7, #0x1
   21b74:	b	c3e0 <mpfr_can_round_raw@plt>
   21b78:	mov	w0, #0x0                   	// #0
   21b7c:	ret

0000000000021b80 <mpfr_set@@Base>:
   21b80:	ldr	w3, [x1, #8]
   21b84:	b	c730 <mpfr_set4@plt>

0000000000021b88 <mpfr_abs@@Base>:
   21b88:	mov	w3, #0x1                   	// #1
   21b8c:	b	c730 <mpfr_set4@plt>

0000000000021b90 <mpfr_set_1_2@@Base>:
   21b90:	stp	x29, x30, [sp, #-64]!
   21b94:	mov	x29, sp
   21b98:	ldr	x4, [x1, #16]
   21b9c:	stp	x19, x20, [sp, #16]
   21ba0:	mov	w20, w3
   21ba4:	stp	x21, x22, [sp, #32]
   21ba8:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   21bac:	cmp	x4, x3
   21bb0:	stp	x23, x24, [sp, #48]
   21bb4:	ldr	x24, [x0]
   21bb8:	b.gt	21bdc <mpfr_set_1_2@@Base+0x4c>
   21bbc:	bl	c280 <mpfr_set@plt>
   21bc0:	mov	w19, w20
   21bc4:	mov	w0, w19
   21bc8:	ldp	x19, x20, [sp, #16]
   21bcc:	ldp	x21, x22, [sp, #32]
   21bd0:	ldp	x23, x24, [sp, #48]
   21bd4:	ldp	x29, x30, [sp], #64
   21bd8:	ret
   21bdc:	mov	x21, x0
   21be0:	mov	x22, x1
   21be4:	mov	w23, w2
   21be8:	cmp	x24, #0x3f
   21bec:	ldr	x6, [x1]
   21bf0:	b.gt	21db8 <mpfr_set_1_2@@Base+0x228>
   21bf4:	ldr	x3, [x22, #24]
   21bf8:	mov	x0, #0x40                  	// #64
   21bfc:	sub	x24, x0, x24
   21c00:	mov	x5, #0x1                   	// #1
   21c04:	sub	w0, w24, #0x1
   21c08:	cmp	x6, #0x40
   21c0c:	lsl	x1, x5, x24
   21c10:	sub	x4, x1, #0x1
   21c14:	lsl	x5, x5, x0
   21c18:	neg	x0, x1
   21c1c:	eor	x4, x4, x5
   21c20:	ldr	x2, [x3]
   21c24:	b.gt	21ca4 <mpfr_set_1_2@@Base+0x114>
   21c28:	and	x5, x5, x2
   21c2c:	and	x4, x4, x2
   21c30:	and	x0, x0, x2
   21c34:	ldr	x2, [x21, #24]
   21c38:	ldr	w19, [x22, #8]
   21c3c:	str	x0, [x2]
   21c40:	ldr	x3, [x22, #16]
   21c44:	mul	w0, w19, w20
   21c48:	str	w19, [x21, #8]
   21c4c:	str	x3, [x21, #16]
   21c50:	cmp	w0, #0x0
   21c54:	b.le	21cbc <mpfr_set_1_2@@Base+0x12c>
   21c58:	cmp	x5, #0x0
   21c5c:	ccmp	x4, #0x0, #0x0, ne  // ne = any
   21c60:	csinc	x4, x4, xzr, ne  // ne = any
   21c64:	csel	x5, x5, xzr, ne  // ne = any
   21c68:	orr	x3, x5, x4
   21c6c:	cbnz	x3, 21cc8 <mpfr_set_1_2@@Base+0x138>
   21c70:	cmp	w0, #0x0
   21c74:	b.le	21e0c <mpfr_set_1_2@@Base+0x27c>
   21c78:	cbz	w20, 21bc0 <mpfr_set_1_2@@Base+0x30>
   21c7c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   21c80:	ldr	x1, [x0, #2592]
   21c84:	add	x0, x0, #0xa20
   21c88:	blr	x1
   21c8c:	mrs	x1, tpidr_el0
   21c90:	add	x0, x1, x0
   21c94:	ldr	w1, [x0]
   21c98:	orr	w1, w1, #0x8
   21c9c:	str	w1, [x0]
   21ca0:	b	21bc0 <mpfr_set_1_2@@Base+0x30>
   21ca4:	ldr	x3, [x3, #8]
   21ca8:	and	x4, x4, x3
   21cac:	and	x5, x3, x5
   21cb0:	orr	x4, x4, x2
   21cb4:	and	x0, x0, x3
   21cb8:	b	21c34 <mpfr_set_1_2@@Base+0xa4>
   21cbc:	sxtw	x3, w20
   21cc0:	orr	x4, x4, x3
   21cc4:	b	21c68 <mpfr_set_1_2@@Base+0xd8>
   21cc8:	cbnz	w23, 21d14 <mpfr_set_1_2@@Base+0x184>
   21ccc:	cbz	x5, 21ce4 <mpfr_set_1_2@@Base+0x154>
   21cd0:	ldr	x0, [x2]
   21cd4:	lsr	x0, x0, x24
   21cd8:	and	x0, x0, #0x1
   21cdc:	orr	x4, x0, x4
   21ce0:	cbnz	x4, 21d28 <mpfr_set_1_2@@Base+0x198>
   21ce4:	cbz	w19, 21bc4 <mpfr_set_1_2@@Base+0x34>
   21ce8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   21cec:	ldr	x1, [x0, #2592]
   21cf0:	add	x0, x0, #0xa20
   21cf4:	blr	x1
   21cf8:	neg	w19, w19
   21cfc:	mrs	x1, tpidr_el0
   21d00:	add	x0, x1, x0
   21d04:	ldr	w1, [x0]
   21d08:	orr	w1, w1, #0x8
   21d0c:	str	w1, [x0]
   21d10:	b	21bc4 <mpfr_set_1_2@@Base+0x34>
   21d14:	cmp	w23, #0x1
   21d18:	b.eq	21ce4 <mpfr_set_1_2@@Base+0x154>  // b.none
   21d1c:	add	w0, w23, w19, lsr #31
   21d20:	cmp	w0, #0x3
   21d24:	b.eq	21ce4 <mpfr_set_1_2@@Base+0x154>  // b.none
   21d28:	ldr	x0, [x2]
   21d2c:	add	x1, x1, x0
   21d30:	str	x1, [x2]
   21d34:	cbnz	x1, 21d6c <mpfr_set_1_2@@Base+0x1dc>
   21d38:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   21d3c:	str	x0, [x2]
   21d40:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   21d44:	ldr	x2, [x0, #2560]
   21d48:	add	x0, x0, #0xa00
   21d4c:	blr	x2
   21d50:	mrs	x2, tpidr_el0
   21d54:	ldr	x1, [x21, #16]
   21d58:	ldr	x0, [x2, x0]
   21d5c:	cmp	x1, x0
   21d60:	b.ge	21d98 <mpfr_set_1_2@@Base+0x208>  // b.tcont
   21d64:	add	x1, x1, #0x1
   21d68:	str	x1, [x21, #16]
   21d6c:	cbz	w19, 21bc4 <mpfr_set_1_2@@Base+0x34>
   21d70:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   21d74:	ldr	x1, [x0, #2592]
   21d78:	add	x0, x0, #0xa20
   21d7c:	blr	x1
   21d80:	mrs	x1, tpidr_el0
   21d84:	add	x0, x1, x0
   21d88:	ldr	w1, [x0]
   21d8c:	orr	w1, w1, #0x8
   21d90:	str	w1, [x0]
   21d94:	b	21bc4 <mpfr_set_1_2@@Base+0x34>
   21d98:	mov	w2, w19
   21d9c:	mov	w1, w23
   21da0:	mov	x0, x21
   21da4:	ldp	x19, x20, [sp, #16]
   21da8:	ldp	x21, x22, [sp, #32]
   21dac:	ldp	x23, x24, [sp, #48]
   21db0:	ldp	x29, x30, [sp], #64
   21db4:	b	bfc0 <mpfr_overflow@plt>
   21db8:	bl	c280 <mpfr_set@plt>
   21dbc:	mov	w19, w0
   21dc0:	cbnz	w23, 21e04 <mpfr_set_1_2@@Base+0x274>
   21dc4:	mul	w0, w0, w20
   21dc8:	cmp	w0, #0x0
   21dcc:	b.le	21e04 <mpfr_set_1_2@@Base+0x274>
   21dd0:	add	x24, x24, #0x1
   21dd4:	mov	x0, x22
   21dd8:	bl	ca20 <mpfr_min_prec@plt>
   21ddc:	cmp	x0, x24
   21de0:	b.ne	21e04 <mpfr_set_1_2@@Base+0x274>  // b.any
   21de4:	mov	x0, x21
   21de8:	cmp	w20, #0x0
   21dec:	b.le	21dfc <mpfr_set_1_2@@Base+0x26c>
   21df0:	bl	be50 <mpfr_nextbelow@plt>
   21df4:	neg	w19, w20
   21df8:	b	21bc4 <mpfr_set_1_2@@Base+0x34>
   21dfc:	bl	c1b0 <mpfr_nextabove@plt>
   21e00:	b	21df4 <mpfr_set_1_2@@Base+0x264>
   21e04:	cbnz	w19, 21bc4 <mpfr_set_1_2@@Base+0x34>
   21e08:	b	21bc0 <mpfr_set_1_2@@Base+0x30>
   21e0c:	mov	w19, #0x0                   	// #0
   21e10:	b	21bc4 <mpfr_set_1_2@@Base+0x34>

0000000000021e14 <mpfr_setmax@@Base>:
   21e14:	ldr	x2, [x0]
   21e18:	str	x1, [x0, #16]
   21e1c:	ldr	x3, [x0, #24]
   21e20:	sub	x1, x2, #0x1
   21e24:	asr	x1, x1, #6
   21e28:	add	x1, x1, #0x1
   21e2c:	lsl	w0, w1, #6
   21e30:	sub	w0, w0, w2
   21e34:	mov	x2, #0xffffffffffffffff    	// #-1
   21e38:	lsl	x0, x2, x0
   21e3c:	str	x0, [x3]
   21e40:	mov	x0, #0x1                   	// #1
   21e44:	cmp	x0, x1
   21e48:	b.lt	21e50 <mpfr_setmax@@Base+0x3c>  // b.tstop
   21e4c:	ret
   21e50:	str	x2, [x3, x0, lsl #3]
   21e54:	add	x0, x0, #0x1
   21e58:	b	21e44 <mpfr_setmax@@Base+0x30>

0000000000021e5c <mpfr_setmin@@Base>:
   21e5c:	mov	x2, x0
   21e60:	ldr	x0, [x0, #24]
   21e64:	str	x1, [x2, #16]
   21e68:	mov	x1, #0x40                  	// #64
   21e6c:	ldr	x2, [x2]
   21e70:	sub	x2, x2, #0x1
   21e74:	sdiv	x2, x2, x1
   21e78:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   21e7c:	lsl	x2, x2, #3
   21e80:	str	x1, [x0, x2]
   21e84:	mov	w1, #0x0                   	// #0
   21e88:	b	c1a0 <memset@plt>

0000000000021e8c <mpfr_set_d@@Base>:
   21e8c:	stp	x29, x30, [sp, #-112]!
   21e90:	fcmp	d0, d0
   21e94:	mov	x29, sp
   21e98:	stp	x19, x20, [sp, #16]
   21e9c:	mov	x19, x0
   21ea0:	stp	x21, x22, [sp, #32]
   21ea4:	stp	x23, x24, [sp, #48]
   21ea8:	b.eq	21ef8 <mpfr_set_d@@Base+0x6c>  // b.none
   21eac:	mov	x0, #0x2                   	// #2
   21eb0:	movk	x0, #0x8000, lsl #48
   21eb4:	str	x0, [x19, #16]
   21eb8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   21ebc:	ldr	x1, [x0, #2592]
   21ec0:	add	x0, x0, #0xa20
   21ec4:	blr	x1
   21ec8:	mrs	x1, tpidr_el0
   21ecc:	add	x0, x1, x0
   21ed0:	ldr	w1, [x0]
   21ed4:	orr	w1, w1, #0x4
   21ed8:	str	w1, [x0]
   21edc:	mov	w1, #0x0                   	// #0
   21ee0:	mov	w0, w1
   21ee4:	ldp	x19, x20, [sp, #16]
   21ee8:	ldp	x21, x22, [sp, #32]
   21eec:	ldp	x23, x24, [sp, #48]
   21ef0:	ldp	x29, x30, [sp], #112
   21ef4:	ret
   21ef8:	fcmp	d0, #0.0
   21efc:	b.ne	21f1c <mpfr_set_d@@Base+0x90>  // b.any
   21f00:	fmov	x1, d0
   21f04:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   21f08:	str	x0, [x19, #16]
   21f0c:	tbz	x1, #63, 21f4c <mpfr_set_d@@Base+0xc0>
   21f10:	mov	w0, #0xffffffff            	// #-1
   21f14:	str	w0, [x19, #8]
   21f18:	b	21edc <mpfr_set_d@@Base+0x50>
   21f1c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   21f20:	fmov	d1, x0
   21f24:	fcmpe	d0, d1
   21f28:	b.gt	21f3c <mpfr_set_d@@Base+0xb0>
   21f2c:	mov	x0, #0xffefffffffffffff    	// #-4503599627370497
   21f30:	fmov	d1, x0
   21f34:	fcmpe	d0, d1
   21f38:	b.pl	21f54 <mpfr_set_d@@Base+0xc8>  // b.nfrst
   21f3c:	fcmpe	d0, #0.0
   21f40:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   21f44:	str	x0, [x19, #16]
   21f48:	b.le	21f10 <mpfr_set_d@@Base+0x84>
   21f4c:	mov	w0, #0x1                   	// #1
   21f50:	b	21f14 <mpfr_set_d@@Base+0x88>
   21f54:	mrs	x20, tpidr_el0
   21f58:	mov	w22, w1
   21f5c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   21f60:	ldr	x1, [x0, #2592]
   21f64:	add	x0, x0, #0xa20
   21f68:	blr	x1
   21f6c:	fmov	x3, d0
   21f70:	ldr	w21, [x20, x0]
   21f74:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   21f78:	ldr	x1, [x0, #2528]
   21f7c:	add	x0, x0, #0x9e0
   21f80:	blr	x1
   21f84:	add	x1, x20, x0
   21f88:	ldr	x24, [x20, x0]
   21f8c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   21f90:	ldr	x2, [x0, #2560]
   21f94:	add	x0, x0, #0xa00
   21f98:	blr	x2
   21f9c:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   21fa0:	str	x2, [x1]
   21fa4:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   21fa8:	ldr	x23, [x20, x0]
   21fac:	str	x1, [x20, x0]
   21fb0:	add	x0, sp, #0x48
   21fb4:	str	x0, [sp, #104]
   21fb8:	mov	x0, #0x35                  	// #53
   21fbc:	ubfiz	x1, x3, #11, #32
   21fc0:	str	x0, [sp, #80]
   21fc4:	ubfx	x0, x3, #52, #11
   21fc8:	ubfx	x3, x3, #32, #20
   21fcc:	orr	x3, x1, x3, lsl #43
   21fd0:	cbz	w0, 2206c <mpfr_set_d@@Base+0x1e0>
   21fd4:	orr	x3, x3, #0x8000000000000000
   21fd8:	sub	w0, w0, #0x3fe
   21fdc:	fcmpe	d0, #0.0
   21fe0:	mov	w2, w22
   21fe4:	sxtw	x0, w0
   21fe8:	str	x3, [sp, #72]
   21fec:	mov	w3, #0x1                   	// #1
   21ff0:	add	x1, sp, #0x50
   21ff4:	str	x0, [sp, #96]
   21ff8:	mov	x0, x19
   21ffc:	cneg	w3, w3, mi  // mi = first
   22000:	bl	c730 <mpfr_set4@plt>
   22004:	mov	w1, w0
   22008:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2200c:	ldr	x2, [x0, #2592]
   22010:	add	x0, x0, #0xa20
   22014:	blr	x2
   22018:	add	x2, x20, x0
   2201c:	str	w21, [x20, x0]
   22020:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   22024:	ldr	x3, [x0, #2528]
   22028:	add	x0, x0, #0x9e0
   2202c:	blr	x3
   22030:	str	x24, [x20, x0]
   22034:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   22038:	ldr	x3, [x0, #2560]
   2203c:	add	x0, x0, #0xa00
   22040:	blr	x3
   22044:	str	x23, [x20, x0]
   22048:	ldr	x0, [x19, #16]
   2204c:	cmp	x24, x0
   22050:	b.gt	22080 <mpfr_set_d@@Base+0x1f4>
   22054:	cmp	x23, x0
   22058:	b.lt	22080 <mpfr_set_d@@Base+0x1f4>  // b.tstop
   2205c:	cbz	w1, 21ee0 <mpfr_set_d@@Base+0x54>
   22060:	orr	w21, w21, #0x8
   22064:	str	w21, [x2]
   22068:	b	21ee0 <mpfr_set_d@@Base+0x54>
   2206c:	clz	x1, x3
   22070:	mov	w0, #0xfffffc03            	// #-1021
   22074:	sub	w0, w0, w1
   22078:	lsl	x3, x3, x1
   2207c:	b	21fdc <mpfr_set_d@@Base+0x150>
   22080:	mov	w2, w22
   22084:	mov	x0, x19
   22088:	bl	cbc0 <mpfr_check_range@plt>
   2208c:	mov	w1, w0
   22090:	b	21ee0 <mpfr_set_d@@Base+0x54>

0000000000022094 <mpfr_set_default_prec@@Base>:
   22094:	stp	x29, x30, [sp, #-16]!
   22098:	sub	x2, x0, #0x1
   2209c:	mov	x1, x0
   220a0:	mov	x29, sp
   220a4:	mov	x0, #0xfffffffffffffefe    	// #-258
   220a8:	movk	x0, #0x7fff, lsl #48
   220ac:	cmp	x2, x0
   220b0:	b.ls	220cc <mpfr_set_default_prec@@Base+0x38>  // b.plast
   220b4:	adrp	x2, 56000 <mpfr_l2b_2_0__tab@@Base+0x488>
   220b8:	adrp	x0, 56000 <mpfr_l2b_2_0__tab@@Base+0x488>
   220bc:	add	x2, x2, #0x46
   220c0:	add	x0, x0, #0xab
   220c4:	mov	w1, #0x20                  	// #32
   220c8:	bl	cbd0 <mpfr_assert_fail@plt>
   220cc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   220d0:	ldr	x2, [x0, #2544]
   220d4:	add	x0, x0, #0x9f0
   220d8:	blr	x2
   220dc:	mrs	x2, tpidr_el0
   220e0:	str	x1, [x2, x0]
   220e4:	ldp	x29, x30, [sp], #16
   220e8:	ret

00000000000220ec <mpfr_get_default_prec@@Base>:
   220ec:	stp	x29, x30, [sp, #-16]!
   220f0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   220f4:	ldr	x1, [x0, #2544]
   220f8:	add	x0, x0, #0x9f0
   220fc:	blr	x1
   22100:	mrs	x1, tpidr_el0
   22104:	mov	x29, sp
   22108:	ldp	x29, x30, [sp], #16
   2210c:	ldr	x0, [x1, x0]
   22110:	ret

0000000000022114 <mpfr_set_exp@@Base>:
   22114:	ldr	x3, [x0, #16]
   22118:	mov	x2, x0
   2211c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   22120:	cmp	x3, x0
   22124:	b.le	2217c <mpfr_set_exp@@Base+0x68>
   22128:	stp	x29, x30, [sp, #-16]!
   2212c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   22130:	ldr	x3, [x0, #2528]
   22134:	add	x0, x0, #0x9e0
   22138:	blr	x3
   2213c:	mrs	x3, tpidr_el0
   22140:	mov	x29, sp
   22144:	ldr	x0, [x3, x0]
   22148:	cmp	x0, x1
   2214c:	b.gt	22184 <mpfr_set_exp@@Base+0x70>
   22150:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   22154:	ldr	x4, [x0, #2560]
   22158:	add	x0, x0, #0xa00
   2215c:	blr	x4
   22160:	ldr	x0, [x3, x0]
   22164:	cmp	x0, x1
   22168:	b.lt	22184 <mpfr_set_exp@@Base+0x70>  // b.tstop
   2216c:	mov	w0, #0x0                   	// #0
   22170:	str	x1, [x2, #16]
   22174:	ldp	x29, x30, [sp], #16
   22178:	ret
   2217c:	mov	w0, #0x1                   	// #1
   22180:	ret
   22184:	mov	w0, #0x1                   	// #1
   22188:	b	22174 <mpfr_set_exp@@Base+0x60>

000000000002218c <mpfr_set_default_rounding_mode@@Base>:
   2218c:	cmp	w0, #0x5
   22190:	b.hi	221c0 <mpfr_set_default_rounding_mode@@Base+0x34>  // b.pmore
   22194:	stp	x29, x30, [sp, #-16]!
   22198:	mov	w1, w0
   2219c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   221a0:	ldr	x2, [x0, #2656]
   221a4:	add	x0, x0, #0xa60
   221a8:	blr	x2
   221ac:	mrs	x2, tpidr_el0
   221b0:	mov	x29, sp
   221b4:	str	w1, [x2, x0]
   221b8:	ldp	x29, x30, [sp], #16
   221bc:	ret
   221c0:	ret

00000000000221c4 <mpfr_get_default_rounding_mode@@Base>:
   221c4:	stp	x29, x30, [sp, #-16]!
   221c8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   221cc:	ldr	x1, [x0, #2656]
   221d0:	add	x0, x0, #0xa60
   221d4:	blr	x1
   221d8:	mrs	x1, tpidr_el0
   221dc:	mov	x29, sp
   221e0:	ldp	x29, x30, [sp], #16
   221e4:	ldr	w0, [x1, x0]
   221e8:	ret

00000000000221ec <mpfr_set_f@@Base>:
   221ec:	stp	x29, x30, [sp, #-112]!
   221f0:	mov	x29, sp
   221f4:	stp	x23, x24, [sp, #48]
   221f8:	mov	x24, x1
   221fc:	ldr	w1, [x1, #4]
   22200:	stp	x19, x20, [sp, #16]
   22204:	mov	x19, x0
   22208:	stp	x21, x22, [sp, #32]
   2220c:	stp	x25, x26, [sp, #64]
   22210:	stp	x27, x28, [sp, #80]
   22214:	cbnz	w1, 2224c <mpfr_set_f@@Base+0x60>
   22218:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2221c:	str	x0, [x19, #16]
   22220:	mov	w0, #0x1                   	// #1
   22224:	str	w0, [x19, #8]
   22228:	mov	sp, x29
   2222c:	mov	w0, w1
   22230:	ldp	x19, x20, [sp, #16]
   22234:	ldp	x21, x22, [sp, #32]
   22238:	ldp	x23, x24, [sp, #48]
   2223c:	ldp	x25, x26, [sp, #64]
   22240:	ldp	x27, x28, [sp, #80]
   22244:	ldp	x29, x30, [sp], #112
   22248:	ret
   2224c:	ldr	w0, [x0, #8]
   22250:	mov	w23, w2
   22254:	mul	w2, w1, w0
   22258:	tbz	w2, #31, 22264 <mpfr_set_f@@Base+0x78>
   2225c:	neg	w0, w0
   22260:	str	w0, [x19, #8]
   22264:	ldr	x26, [x24, #16]
   22268:	cmp	w1, #0x0
   2226c:	cneg	w3, w1, lt  // lt = tstop
   22270:	ldr	x20, [x19]
   22274:	add	x0, x26, w3, sxtw #3
   22278:	sxtw	x28, w3
   2227c:	sbfiz	x1, x3, #3, #32
   22280:	sub	x20, x20, #0x1
   22284:	ldur	x22, [x0, #-8]
   22288:	asr	x20, x20, #6
   2228c:	add	x20, x20, #0x1
   22290:	cmp	x20, w3, sxtw
   22294:	clz	x22, x22
   22298:	ldr	x25, [x19, #24]
   2229c:	b.gt	22394 <mpfr_set_f@@Base+0x1a8>
   222a0:	str	xzr, [x29, #104]
   222a4:	lsl	x21, x28, #6
   222a8:	cmp	x1, #0x4, lsl #12
   222ac:	b.hi	22368 <mpfr_set_f@@Base+0x17c>  // b.pmore
   222b0:	add	x1, x1, #0xf
   222b4:	and	x1, x1, #0xfffffffffffffff0
   222b8:	sub	sp, sp, x1
   222bc:	mov	x27, sp
   222c0:	cbz	x22, 22378 <mpfr_set_f@@Base+0x18c>
   222c4:	mov	w3, w22
   222c8:	mov	x2, x28
   222cc:	mov	x1, x26
   222d0:	mov	x0, x27
   222d4:	bl	bd40 <__gmpn_lshift@plt>
   222d8:	ldr	x4, [x19]
   222dc:	mov	x2, x21
   222e0:	ldr	w3, [x24, #4]
   222e4:	add	x6, x29, #0x64
   222e8:	mov	w5, w23
   222ec:	mov	x1, x27
   222f0:	mov	x0, x25
   222f4:	lsr	w3, w3, #31
   222f8:	bl	cab0 <mpfr_round_raw@plt>
   222fc:	mov	w21, w0
   22300:	cbz	w0, 22310 <mpfr_set_f@@Base+0x124>
   22304:	add	x20, x25, x20, lsl #3
   22308:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   2230c:	stur	x0, [x20, #-8]
   22310:	ldr	x0, [x29, #104]
   22314:	cbz	x0, 2231c <mpfr_set_f@@Base+0x130>
   22318:	bl	c4a0 <mpfr_tmp_free@plt>
   2231c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   22320:	ldr	x2, [x0, #2560]
   22324:	add	x0, x0, #0xa00
   22328:	blr	x2
   2232c:	mov	x4, #0x40                  	// #64
   22330:	mrs	x2, tpidr_el0
   22334:	ldr	x1, [x24, #8]
   22338:	ldr	x3, [x2, x0]
   2233c:	sub	x0, x3, #0x1
   22340:	sdiv	x0, x0, x4
   22344:	add	x0, x0, #0x1
   22348:	cmp	x1, x0
   2234c:	b.le	223e4 <mpfr_set_f@@Base+0x1f8>
   22350:	ldr	w2, [x19, #8]
   22354:	mov	w1, w23
   22358:	mov	x0, x19
   2235c:	bl	bfc0 <mpfr_overflow@plt>
   22360:	mov	w1, w0
   22364:	b	22228 <mpfr_set_f@@Base+0x3c>
   22368:	add	x0, x29, #0x68
   2236c:	bl	be40 <mpfr_tmp_allocate@plt>
   22370:	mov	x27, x0
   22374:	b	222c0 <mpfr_set_f@@Base+0xd4>
   22378:	cmp	x27, x26
   2237c:	b.eq	222d8 <mpfr_set_f@@Base+0xec>  // b.none
   22380:	lsl	x2, x28, #3
   22384:	mov	x1, x26
   22388:	mov	x0, x27
   2238c:	bl	ba90 <memcpy@plt>
   22390:	b	222d8 <mpfr_set_f@@Base+0xec>
   22394:	sub	x20, x20, x28
   22398:	add	x0, x25, x20, lsl #3
   2239c:	cbz	x22, 223cc <mpfr_set_f@@Base+0x1e0>
   223a0:	mov	w3, w22
   223a4:	mov	x2, x28
   223a8:	mov	x1, x26
   223ac:	bl	bd40 <__gmpn_lshift@plt>
   223b0:	lsl	x2, x20, #3
   223b4:	mov	x0, x25
   223b8:	mov	w1, #0x0                   	// #0
   223bc:	mov	w21, #0x0                   	// #0
   223c0:	bl	c1a0 <memset@plt>
   223c4:	str	wzr, [x29, #100]
   223c8:	b	2231c <mpfr_set_f@@Base+0x130>
   223cc:	cmp	x26, x0
   223d0:	b.eq	223b0 <mpfr_set_f@@Base+0x1c4>  // b.none
   223d4:	mov	x2, x1
   223d8:	mov	x1, x26
   223dc:	bl	ba90 <memcpy@plt>
   223e0:	b	223b0 <mpfr_set_f@@Base+0x1c4>
   223e4:	lsl	x1, x1, #6
   223e8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   223ec:	ldr	x4, [x0, #2528]
   223f0:	add	x0, x0, #0x9e0
   223f4:	blr	x4
   223f8:	sub	x22, x1, x22
   223fc:	ldr	w1, [x29, #100]
   22400:	ldr	x0, [x2, x0]
   22404:	add	x21, x22, w21, sxtw
   22408:	str	x21, [x19, #16]
   2240c:	cmp	x21, x0
   22410:	b.lt	22444 <mpfr_set_f@@Base+0x258>  // b.tstop
   22414:	cmp	x3, x21
   22418:	b.lt	22444 <mpfr_set_f@@Base+0x258>  // b.tstop
   2241c:	cbz	w1, 22228 <mpfr_set_f@@Base+0x3c>
   22420:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   22424:	ldr	x3, [x0, #2592]
   22428:	add	x0, x0, #0xa20
   2242c:	blr	x3
   22430:	add	x0, x2, x0
   22434:	ldr	w2, [x0]
   22438:	orr	w2, w2, #0x8
   2243c:	str	w2, [x0]
   22440:	b	22228 <mpfr_set_f@@Base+0x3c>
   22444:	mov	w2, w23
   22448:	mov	x0, x19
   2244c:	bl	cbc0 <mpfr_check_range@plt>
   22450:	b	22360 <mpfr_set_f@@Base+0x174>

0000000000022454 <mpfr_set_prec_raw@@Base>:
   22454:	stp	x29, x30, [sp, #-32]!
   22458:	mov	x29, sp
   2245c:	stp	x19, x20, [sp, #16]
   22460:	mov	x20, x0
   22464:	mov	x19, x1
   22468:	mov	x0, #0xfffffffffffffefe    	// #-258
   2246c:	sub	x1, x1, #0x1
   22470:	movk	x0, #0x7fff, lsl #48
   22474:	cmp	x1, x0
   22478:	b.ls	22494 <mpfr_set_prec_raw@@Base+0x40>  // b.plast
   2247c:	adrp	x2, 56000 <mpfr_l2b_2_0__tab@@Base+0x488>
   22480:	adrp	x0, 56000 <mpfr_l2b_2_0__tab@@Base+0x488>
   22484:	add	x2, x2, #0xba
   22488:	add	x0, x0, #0x102
   2248c:	mov	w1, #0x1c                  	// #28
   22490:	bl	cbd0 <mpfr_assert_fail@plt>
   22494:	ldr	x0, [x20, #24]
   22498:	ldur	x0, [x0, #-8]
   2249c:	cmp	x19, x0, lsl #6
   224a0:	b.le	224bc <mpfr_set_prec_raw@@Base+0x68>
   224a4:	adrp	x2, 56000 <mpfr_l2b_2_0__tab@@Base+0x488>
   224a8:	adrp	x0, 56000 <mpfr_l2b_2_0__tab@@Base+0x488>
   224ac:	add	x2, x2, #0x110
   224b0:	add	x0, x0, #0x102
   224b4:	mov	w1, #0x1d                  	// #29
   224b8:	bl	cbd0 <mpfr_assert_fail@plt>
   224bc:	str	x19, [x20]
   224c0:	ldp	x19, x20, [sp, #16]
   224c4:	ldp	x29, x30, [sp], #32
   224c8:	ret

00000000000224cc <mpfr_get_prec@@Base>:
   224cc:	ldr	x0, [x0]
   224d0:	ret
   224d4:	stp	x29, x30, [sp, #-64]!
   224d8:	mov	x29, sp
   224dc:	stp	x19, x20, [sp, #16]
   224e0:	mov	x20, x0
   224e4:	ldr	w19, [x1, #4]
   224e8:	stp	x21, x22, [sp, #32]
   224ec:	mov	x22, x1
   224f0:	cmp	w19, #0x0
   224f4:	cneg	w19, w19, lt  // lt = tstop
   224f8:	stp	x23, x24, [sp, #48]
   224fc:	sxtw	x19, w19
   22500:	ldr	x21, [x1, #8]
   22504:	str	x19, [x2]
   22508:	ldr	x0, [x21]
   2250c:	cbz	x0, 22580 <mpfr_get_prec@@Base+0xb4>
   22510:	add	x0, x21, x19, lsl #3
   22514:	lsl	x24, x19, #3
   22518:	ldur	x1, [x0, #-8]
   2251c:	lsl	x0, x19, #6
   22520:	clz	x23, x1
   22524:	sub	x1, x0, x23
   22528:	mov	x0, x20
   2252c:	cmp	x1, #0x0
   22530:	csinc	x1, x1, xzr, gt
   22534:	bl	cb10 <mpfr_init2@plt>
   22538:	cbz	x23, 2258c <mpfr_get_prec@@Base+0xc0>
   2253c:	ldr	x0, [x20, #24]
   22540:	mov	w3, w23
   22544:	mov	x2, x19
   22548:	mov	x1, x21
   2254c:	bl	bd40 <__gmpn_lshift@plt>
   22550:	ldr	w1, [x22, #4]
   22554:	mov	w0, #0x1                   	// #1
   22558:	ldp	x21, x22, [sp, #32]
   2255c:	cmp	w1, #0x0
   22560:	cneg	w0, w0, lt  // lt = tstop
   22564:	str	w0, [x20, #8]
   22568:	str	xzr, [x20, #16]
   2256c:	neg	w0, w23
   22570:	ldp	x19, x20, [sp, #16]
   22574:	ldp	x23, x24, [sp, #48]
   22578:	ldp	x29, x30, [sp], #64
   2257c:	ret
   22580:	add	x21, x21, #0x8
   22584:	sub	x19, x19, #0x1
   22588:	b	22508 <mpfr_get_prec@@Base+0x3c>
   2258c:	ldr	x0, [x20, #24]
   22590:	cmp	x0, x21
   22594:	b.eq	22550 <mpfr_get_prec@@Base+0x84>  // b.none
   22598:	mov	x2, x24
   2259c:	mov	x1, x21
   225a0:	bl	ba90 <memcpy@plt>
   225a4:	b	22550 <mpfr_get_prec@@Base+0x84>

00000000000225a8 <mpfr_set_q@@Base>:
   225a8:	stp	x29, x30, [sp, #-208]!
   225ac:	mov	x29, sp
   225b0:	stp	x21, x22, [sp, #32]
   225b4:	mov	w22, w2
   225b8:	ldr	w2, [x1, #4]
   225bc:	stp	x19, x20, [sp, #16]
   225c0:	mov	x20, x0
   225c4:	ldr	w19, [x1, #20]
   225c8:	stp	x23, x24, [sp, #48]
   225cc:	stp	x25, x26, [sp, #64]
   225d0:	stp	x27, x28, [sp, #80]
   225d4:	cbnz	w2, 22644 <mpfr_set_q@@Base+0x9c>
   225d8:	cbnz	w19, 22610 <mpfr_set_q@@Base+0x68>
   225dc:	mov	x0, #0x2                   	// #2
   225e0:	movk	x0, #0x8000, lsl #48
   225e4:	str	x0, [x20, #16]
   225e8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   225ec:	ldr	x1, [x0, #2592]
   225f0:	add	x0, x0, #0xa20
   225f4:	blr	x1
   225f8:	mrs	x1, tpidr_el0
   225fc:	add	x0, x1, x0
   22600:	ldr	w1, [x0]
   22604:	orr	w1, w1, #0x4
   22608:	str	w1, [x0]
   2260c:	b	22624 <mpfr_set_q@@Base+0x7c>
   22610:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   22614:	mov	w19, #0x0                   	// #0
   22618:	str	x0, [x20, #16]
   2261c:	mov	w0, #0x1                   	// #1
   22620:	str	w0, [x20, #8]
   22624:	mov	w0, w19
   22628:	ldp	x19, x20, [sp, #16]
   2262c:	ldp	x21, x22, [sp, #32]
   22630:	ldp	x23, x24, [sp, #48]
   22634:	ldp	x25, x26, [sp, #64]
   22638:	ldp	x27, x28, [sp, #80]
   2263c:	ldp	x29, x30, [sp], #208
   22640:	ret
   22644:	cbnz	w19, 22664 <mpfr_set_q@@Base+0xbc>
   22648:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2264c:	cmp	w2, #0x0
   22650:	str	x0, [x20, #16]
   22654:	mov	w0, #0x1                   	// #1
   22658:	cneg	w0, w0, lt  // lt = tstop
   2265c:	str	w0, [x20, #8]
   22660:	b	22624 <mpfr_set_q@@Base+0x7c>
   22664:	mrs	x21, tpidr_el0
   22668:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2266c:	ldr	x2, [x0, #2592]
   22670:	add	x0, x0, #0xa20
   22674:	blr	x2
   22678:	add	x27, x21, x0
   2267c:	add	x3, x1, #0x10
   22680:	add	x25, sp, #0x90
   22684:	add	x26, sp, #0xb0
   22688:	ldr	w23, [x21, x0]
   2268c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   22690:	ldr	x2, [x0, #2528]
   22694:	add	x0, x0, #0x9e0
   22698:	blr	x2
   2269c:	add	x6, x21, x0
   226a0:	ldr	x4, [x21, x0]
   226a4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   226a8:	ldr	x2, [x0, #2560]
   226ac:	add	x0, x0, #0xa00
   226b0:	blr	x2
   226b4:	add	x5, x21, x0
   226b8:	add	x2, sp, #0x80
   226bc:	ldr	x28, [x21, x0]
   226c0:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   226c4:	str	x0, [x6]
   226c8:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   226cc:	str	x0, [x5]
   226d0:	mov	x0, x25
   226d4:	stp	x5, x6, [sp, #96]
   226d8:	stp	x4, x3, [sp, #112]
   226dc:	bl	224d4 <mpfr_get_prec@@Base+0x8>
   226e0:	add	x2, sp, #0x88
   226e4:	ldr	x3, [sp, #120]
   226e8:	sxtw	x24, w0
   226ec:	mov	x0, x26
   226f0:	mov	x1, x3
   226f4:	bl	224d4 <mpfr_get_prec@@Base+0x8>
   226f8:	mov	w7, w0
   226fc:	ldp	x1, x0, [sp, #128]
   22700:	ldp	x5, x6, [sp, #96]
   22704:	ldr	x4, [sp, #112]
   22708:	sub	x1, x1, x0
   2270c:	str	x1, [sp, #128]
   22710:	mov	x0, #0xffffffffffffff      	// #72057594037927935
   22714:	cmp	x1, x0
   22718:	b.le	22740 <mpfr_set_q@@Base+0x198>
   2271c:	ldr	w2, [x20, #8]
   22720:	mov	w1, w22
   22724:	mov	x0, x20
   22728:	str	x28, [x5]
   2272c:	str	x4, [x6]
   22730:	str	w23, [x27]
   22734:	bl	bfc0 <mpfr_overflow@plt>
   22738:	mov	w19, w0
   2273c:	b	227e4 <mpfr_set_q@@Base+0x23c>
   22740:	mov	x0, #0xff00000000000000    	// #-72057594037927936
   22744:	cmp	x1, x0
   22748:	b.ge	22770 <mpfr_set_q@@Base+0x1c8>  // b.tcont
   2274c:	ldr	w2, [x20, #8]
   22750:	cmp	w22, #0x0
   22754:	csinc	w1, w22, wzr, ne  // ne = any
   22758:	mov	x0, x20
   2275c:	str	x28, [x5]
   22760:	str	x4, [x6]
   22764:	str	w23, [x27]
   22768:	bl	c450 <mpfr_underflow@plt>
   2276c:	b	22738 <mpfr_set_q@@Base+0x190>
   22770:	mov	w3, w22
   22774:	mov	x2, x26
   22778:	mov	x1, x25
   2277c:	mov	x0, x20
   22780:	str	x4, [sp, #96]
   22784:	str	w7, [sp, #104]
   22788:	stp	x6, x5, [sp, #112]
   2278c:	bl	c6b0 <mpfr_div@plt>
   22790:	ldr	w7, [sp, #104]
   22794:	ldr	x2, [sp, #128]
   22798:	mov	w19, w0
   2279c:	mov	w3, w22
   227a0:	mov	x1, x20
   227a4:	mov	x0, x20
   227a8:	add	x2, x24, x2, lsl #6
   227ac:	sub	x2, x2, w7, sxtw
   227b0:	bl	bc10 <mpfr_mul_2si@plt>
   227b4:	ldp	x6, x5, [sp, #112]
   227b8:	str	w23, [x27]
   227bc:	ldr	x4, [sp, #96]
   227c0:	str	x4, [x6]
   227c4:	str	x28, [x5]
   227c8:	cbnz	w0, 22738 <mpfr_set_q@@Base+0x190>
   227cc:	ldr	x0, [x20, #16]
   227d0:	cmp	x4, x0
   227d4:	b.gt	22818 <mpfr_set_q@@Base+0x270>
   227d8:	cmp	x28, x0
   227dc:	b.lt	22818 <mpfr_set_q@@Base+0x270>  // b.tstop
   227e0:	cbnz	w19, 2282c <mpfr_set_q@@Base+0x284>
   227e4:	mov	x0, x26
   227e8:	bl	c0f0 <mpfr_clear@plt>
   227ec:	mov	x0, x25
   227f0:	bl	c0f0 <mpfr_clear@plt>
   227f4:	cbz	w19, 22624 <mpfr_set_q@@Base+0x7c>
   227f8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   227fc:	ldr	x1, [x0, #2592]
   22800:	add	x0, x0, #0xa20
   22804:	blr	x1
   22808:	add	x0, x21, x0
   2280c:	ldr	w1, [x0]
   22810:	orr	w1, w1, #0x8
   22814:	b	22608 <mpfr_set_q@@Base+0x60>
   22818:	mov	w2, w22
   2281c:	mov	w1, w19
   22820:	mov	x0, x20
   22824:	bl	cbc0 <mpfr_check_range@plt>
   22828:	b	22738 <mpfr_set_q@@Base+0x190>
   2282c:	orr	w23, w23, #0x8
   22830:	str	w23, [x27]
   22834:	b	227e4 <mpfr_set_q@@Base+0x23c>

0000000000022838 <mpfr_set_si@@Base>:
   22838:	mov	w3, w2
   2283c:	mov	x2, #0x0                   	// #0
   22840:	b	bb00 <mpfr_set_si_2exp@plt>

0000000000022844 <mpfr_set_str@@Base>:
   22844:	mov	w4, w3
   22848:	ldrb	w3, [x1]
   2284c:	cbz	w3, 2287c <mpfr_set_str@@Base+0x38>
   22850:	stp	x29, x30, [sp, #-32]!
   22854:	mov	w3, w2
   22858:	mov	x29, sp
   2285c:	add	x2, sp, #0x18
   22860:	bl	bc90 <mpfr_strtofr@plt>
   22864:	ldr	x0, [sp, #24]
   22868:	ldrb	w0, [x0]
   2286c:	ldp	x29, x30, [sp], #32
   22870:	cmp	w0, #0x0
   22874:	csetm	w0, ne  // ne = any
   22878:	ret
   2287c:	mov	w0, #0xffffffff            	// #-1
   22880:	ret

0000000000022884 <mpfr_init_set_str@@Base>:
   22884:	stp	x29, x30, [sp, #-48]!
   22888:	mov	x29, sp
   2288c:	stp	x19, x20, [sp, #16]
   22890:	mov	x19, x0
   22894:	mov	x20, x1
   22898:	stp	x21, x22, [sp, #32]
   2289c:	mov	w21, w2
   228a0:	mov	w22, w3
   228a4:	bl	bc50 <mpfr_init@plt>
   228a8:	mov	w3, w22
   228ac:	mov	w2, w21
   228b0:	mov	x1, x20
   228b4:	mov	x0, x19
   228b8:	ldp	x19, x20, [sp, #16]
   228bc:	ldp	x21, x22, [sp, #32]
   228c0:	ldp	x29, x30, [sp], #48
   228c4:	b	c750 <mpfr_set_str@plt>

00000000000228c8 <mpfr_set_str_binary@@Base>:
   228c8:	stp	x29, x30, [sp, #-16]!
   228cc:	mov	x2, x0
   228d0:	mov	x29, sp
   228d4:	ldrb	w4, [x1]
   228d8:	cmp	w4, #0x4e
   228dc:	b.ne	22918 <mpfr_set_str_binary@@Base+0x50>  // b.any
   228e0:	mov	x0, #0x2                   	// #2
   228e4:	movk	x0, #0x8000, lsl #48
   228e8:	str	x0, [x2, #16]
   228ec:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   228f0:	ldr	x1, [x0, #2592]
   228f4:	add	x0, x0, #0xa20
   228f8:	blr	x1
   228fc:	mrs	x1, tpidr_el0
   22900:	add	x0, x1, x0
   22904:	ldr	w1, [x0]
   22908:	orr	w1, w1, #0x4
   2290c:	str	w1, [x0]
   22910:	ldp	x29, x30, [sp], #16
   22914:	ret
   22918:	cmp	w4, #0x2d
   2291c:	mov	w5, #0x2b                  	// #43
   22920:	ccmp	w4, w5, #0x4, ne  // ne = any
   22924:	cset	x4, eq  // eq = none
   22928:	ldrb	w4, [x1, x4]
   2292c:	cmp	w4, #0x49
   22930:	b.ne	22954 <mpfr_set_str_binary@@Base+0x8c>  // b.any
   22934:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   22938:	str	x0, [x2, #16]
   2293c:	ldrb	w0, [x1]
   22940:	cmp	w0, #0x2d
   22944:	mov	w0, #0xffffffff            	// #-1
   22948:	csinc	w0, w0, wzr, eq  // eq = none
   2294c:	str	w0, [x2, #8]
   22950:	b	22910 <mpfr_set_str_binary@@Base+0x48>
   22954:	mov	w4, #0x1                   	// #1
   22958:	mov	w3, #0x2                   	// #2
   2295c:	mov	x2, #0x0                   	// #0
   22960:	bl	bc90 <mpfr_strtofr@plt>
   22964:	cbz	w0, 22910 <mpfr_set_str_binary@@Base+0x48>
   22968:	adrp	x2, 56000 <mpfr_l2b_2_0__tab@@Base+0x488>
   2296c:	adrp	x0, 56000 <mpfr_l2b_2_0__tab@@Base+0x488>
   22970:	add	x2, x2, #0x177
   22974:	add	x0, x0, #0x180
   22978:	mov	w1, #0x36                  	// #54
   2297c:	bl	cbd0 <mpfr_assert_fail@plt>

0000000000022980 <mpfr_set_ui@@Base>:
   22980:	mov	w3, w2
   22984:	mov	x2, #0x0                   	// #0
   22988:	b	c680 <mpfr_set_ui_2exp@plt>

000000000002298c <mpfr_set_z@@Base>:
   2298c:	mov	w3, w2
   22990:	mov	x2, #0x0                   	// #0
   22994:	b	c580 <mpfr_set_z_2exp@plt>

0000000000022998 <mpfr_sqrt@@Base>:
   22998:	stp	x29, x30, [sp, #-192]!
   2299c:	mov	x29, sp
   229a0:	stp	x19, x20, [sp, #16]
   229a4:	ldr	x19, [x1, #16]
   229a8:	stp	x21, x22, [sp, #32]
   229ac:	stp	x23, x24, [sp, #48]
   229b0:	mov	x24, x0
   229b4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   229b8:	stp	x25, x26, [sp, #64]
   229bc:	cmp	x19, x0
   229c0:	mov	x26, x1
   229c4:	stp	x27, x28, [sp, #80]
   229c8:	b.gt	22a64 <mpfr_sqrt@@Base+0xcc>
   229cc:	mov	x1, #0x2                   	// #2
   229d0:	movk	x1, #0x8000, lsl #48
   229d4:	cmp	x19, x1
   229d8:	b.ne	22a34 <mpfr_sqrt@@Base+0x9c>  // b.any
   229dc:	mov	x0, #0x2                   	// #2
   229e0:	movk	x0, #0x8000, lsl #48
   229e4:	str	x0, [x24, #16]
   229e8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   229ec:	ldr	x1, [x0, #2592]
   229f0:	add	x0, x0, #0xa20
   229f4:	blr	x1
   229f8:	mrs	x1, tpidr_el0
   229fc:	add	x0, x1, x0
   22a00:	ldr	w1, [x0]
   22a04:	orr	w1, w1, #0x4
   22a08:	str	w1, [x0]
   22a0c:	mov	w19, #0x0                   	// #0
   22a10:	mov	sp, x29
   22a14:	mov	w0, w19
   22a18:	ldp	x19, x20, [sp, #16]
   22a1c:	ldp	x21, x22, [sp, #32]
   22a20:	ldp	x23, x24, [sp, #48]
   22a24:	ldp	x25, x26, [sp, #64]
   22a28:	ldp	x27, x28, [sp, #80]
   22a2c:	ldp	x29, x30, [sp], #192
   22a30:	ret
   22a34:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   22a38:	cmp	x19, x1
   22a3c:	ldr	w1, [x26, #8]
   22a40:	b.ne	22a50 <mpfr_sqrt@@Base+0xb8>  // b.any
   22a44:	str	w1, [x24, #8]
   22a48:	str	x19, [x24, #16]
   22a4c:	b	22a0c <mpfr_sqrt@@Base+0x74>
   22a50:	tbnz	w1, #31, 229dc <mpfr_sqrt@@Base+0x44>
   22a54:	mov	w1, #0x1                   	// #1
   22a58:	str	w1, [x24, #8]
   22a5c:	str	x0, [x24, #16]
   22a60:	b	22a0c <mpfr_sqrt@@Base+0x74>
   22a64:	ldr	w0, [x1, #8]
   22a68:	tbnz	w0, #31, 229dc <mpfr_sqrt@@Base+0x44>
   22a6c:	mov	w0, #0x1                   	// #1
   22a70:	str	w0, [x24, #8]
   22a74:	ldr	x21, [x24]
   22a78:	mov	w22, w2
   22a7c:	ldr	x0, [x1]
   22a80:	ldr	x23, [x24, #24]
   22a84:	cmp	x21, x0
   22a88:	b.ne	234d0 <mpfr_sqrt@@Base+0xb38>  // b.any
   22a8c:	cmp	x21, #0x3f
   22a90:	b.gt	22d90 <mpfr_sqrt@@Base+0x3f8>
   22a94:	mov	x0, #0x40                  	// #64
   22a98:	sub	x21, x0, x21
   22a9c:	ldr	x0, [x1, #24]
   22aa0:	mov	x4, #0x1                   	// #1
   22aa4:	lsl	x4, x4, x21
   22aa8:	sub	x5, x4, #0x1
   22aac:	ldr	x1, [x0]
   22ab0:	tbz	w19, #0, 22abc <mpfr_sqrt@@Base+0x124>
   22ab4:	lsr	x1, x1, #1
   22ab8:	add	x19, x19, #0x1
   22abc:	mov	x0, #0x2                   	// #2
   22ac0:	lsr	x3, x1, #54
   22ac4:	sub	x3, x3, #0x100
   22ac8:	adrp	x7, 56000 <mpfr_l2b_2_0__tab@@Base+0x488>
   22acc:	add	x7, x7, #0x238
   22ad0:	lsr	x2, x1, #27
   22ad4:	sdiv	x19, x19, x0
   22ad8:	adrp	x0, 57000 <mpfr_l2b_2_0__tab@@Base+0x1488>
   22adc:	add	x0, x0, #0xa38
   22ae0:	mov	x8, #0xfffffffffffffffe    	// #-2
   22ae4:	ldr	x7, [x7, x3, lsl #3]
   22ae8:	ldr	x6, [x0, x3, lsl #3]
   22aec:	mov	x3, x2
   22af0:	madd	x7, x2, x7, x7
   22af4:	lsl	x0, x6, #57
   22af8:	lsl	x6, x6, #11
   22afc:	sub	x0, x0, x7
   22b00:	mov	x7, #0x1fffffffe           	// #8589934590
   22b04:	add	x0, x6, x0, lsr #47
   22b08:	mul	x2, x0, x0
   22b0c:	madd	x2, x3, x2, x2
   22b10:	neg	x2, x2
   22b14:	umulh	x2, x0, x2
   22b18:	lsr	x2, x2, #6
   22b1c:	add	x0, x2, x0, lsl #10
   22b20:	lsr	x2, x1, #31
   22b24:	mul	x2, x2, x0
   22b28:	lsr	x2, x2, #32
   22b2c:	msub	x3, x2, x2, x1
   22b30:	lsl	x6, x2, #1
   22b34:	cmp	x3, x7
   22b38:	b.hi	22c04 <mpfr_sqrt@@Base+0x26c>  // b.pmore
   22b3c:	cmp	x3, x6
   22b40:	b.ls	22b50 <mpfr_sqrt@@Base+0x1b8>  // b.plast
   22b44:	sub	x3, x3, #0x1
   22b48:	add	x2, x2, #0x1
   22b4c:	sub	x3, x3, x6
   22b50:	mul	x0, x0, x3
   22b54:	lsl	x2, x2, #32
   22b58:	mov	x3, #0x1                   	// #1
   22b5c:	add	x0, x2, x0, lsr #32
   22b60:	add	x2, x0, #0x7
   22b64:	and	x2, x2, x5, lsr #1
   22b68:	cmp	x2, #0x7
   22b6c:	b.hi	22ba4 <mpfr_sqrt@@Base+0x20c>  // b.pmore
   22b70:	cmp	x0, #0x0
   22b74:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   22b78:	csel	x0, x0, x2, lt  // lt = tstop
   22b7c:	umulh	x3, x0, x0
   22b80:	mul	x6, x0, x0
   22b84:	negs	x2, x6
   22b88:	sbc	x1, x1, x3
   22b8c:	cbz	x1, 22ba0 <mpfr_sqrt@@Base+0x208>
   22b90:	cmp	x1, #0x1
   22b94:	b.ne	22c14 <mpfr_sqrt@@Base+0x27c>  // b.any
   22b98:	cmp	x2, x0, lsl #1
   22b9c:	b.hi	22c14 <mpfr_sqrt@@Base+0x27c>  // b.pmore
   22ba0:	orr	x3, x2, x1
   22ba4:	sub	w21, w21, #0x1
   22ba8:	mov	x2, #0x1                   	// #1
   22bac:	neg	x7, x4
   22bb0:	lsl	x21, x2, x21
   22bb4:	and	x6, x21, x0
   22bb8:	eor	x21, x5, x21
   22bbc:	and	x1, x21, x0
   22bc0:	orr	x3, x1, x3
   22bc4:	and	x1, x0, x7
   22bc8:	cmp	x3, #0x0
   22bcc:	str	x1, [x23]
   22bd0:	cset	w8, eq  // eq = none
   22bd4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   22bd8:	ldr	x5, [x0, #2560]
   22bdc:	add	x0, x0, #0xa00
   22be0:	blr	x5
   22be4:	mrs	x5, tpidr_el0
   22be8:	ldr	x0, [x5, x0]
   22bec:	cmp	x19, x0
   22bf0:	b.le	22c38 <mpfr_sqrt@@Base+0x2a0>
   22bf4:	mov	w1, w22
   22bf8:	mov	x0, x24
   22bfc:	bl	bfc0 <mpfr_overflow@plt>
   22c00:	b	22ccc <mpfr_sqrt@@Base+0x334>
   22c04:	madd	x3, x2, x8, x3
   22c08:	add	x2, x2, #0x1
   22c0c:	sub	x3, x3, #0x1
   22c10:	b	22b30 <mpfr_sqrt@@Base+0x198>
   22c14:	cmp	x0, x2
   22c18:	sub	x2, x2, x0
   22c1c:	add	x0, x0, #0x1
   22c20:	cset	x3, hi  // hi = pmore
   22c24:	cmp	x2, x0
   22c28:	sub	x2, x2, x0
   22c2c:	cinc	x3, x3, cc  // cc = lo, ul, last
   22c30:	sub	x1, x1, x3
   22c34:	b	22b8c <mpfr_sqrt@@Base+0x1f4>
   22c38:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   22c3c:	ldr	x9, [x0, #2528]
   22c40:	add	x0, x0, #0x9e0
   22c44:	blr	x9
   22c48:	ldr	x0, [x5, x0]
   22c4c:	cmp	x19, x0
   22c50:	b.ge	22cd4 <mpfr_sqrt@@Base+0x33c>  // b.tcont
   22c54:	cbnz	w22, 22c94 <mpfr_sqrt@@Base+0x2fc>
   22c58:	sub	x0, x0, #0x1
   22c5c:	cmp	x19, x0
   22c60:	b.ne	22c88 <mpfr_sqrt@@Base+0x2f0>  // b.any
   22c64:	cmp	x7, x1
   22c68:	b.ne	22c70 <mpfr_sqrt@@Base+0x2d8>  // b.any
   22c6c:	cbnz	x6, 22cd4 <mpfr_sqrt@@Base+0x33c>
   22c70:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   22c74:	cmp	x1, x0
   22c78:	b.ne	22cbc <mpfr_sqrt@@Base+0x324>  // b.any
   22c7c:	cmp	x3, #0x0
   22c80:	cset	w22, eq  // eq = none
   22c84:	b	22cbc <mpfr_sqrt@@Base+0x324>
   22c88:	b.ge	22c70 <mpfr_sqrt@@Base+0x2d8>  // b.tcont
   22c8c:	mov	w22, #0x1                   	// #1
   22c90:	b	22cbc <mpfr_sqrt@@Base+0x324>
   22c94:	cmp	w22, #0x4
   22c98:	ccmp	w22, #0x2, #0x4, ne  // ne = any
   22c9c:	b.ne	22cbc <mpfr_sqrt@@Base+0x324>  // b.any
   22ca0:	sub	x0, x0, #0x1
   22ca4:	cmp	x19, x0
   22ca8:	b.ne	22cbc <mpfr_sqrt@@Base+0x324>  // b.any
   22cac:	cmp	x7, x1
   22cb0:	b.ne	22cbc <mpfr_sqrt@@Base+0x324>  // b.any
   22cb4:	orr	x3, x6, x3
   22cb8:	cbnz	x3, 22cd4 <mpfr_sqrt@@Base+0x33c>
   22cbc:	mov	w1, w22
   22cc0:	mov	x0, x24
   22cc4:	mov	w2, #0x1                   	// #1
   22cc8:	bl	c450 <mpfr_underflow@plt>
   22ccc:	mov	w19, w0
   22cd0:	b	22a10 <mpfr_sqrt@@Base+0x78>
   22cd4:	str	x19, [x24, #16]
   22cd8:	cmp	w8, #0x0
   22cdc:	ccmp	w22, #0x5, #0x4, eq  // eq = none
   22ce0:	b.eq	22a0c <mpfr_sqrt@@Base+0x74>  // b.none
   22ce4:	cbnz	w22, 22d24 <mpfr_sqrt@@Base+0x38c>
   22ce8:	cbz	x6, 22d30 <mpfr_sqrt@@Base+0x398>
   22cec:	ldr	x0, [x23]
   22cf0:	adds	x4, x4, x0
   22cf4:	b.eq	22d58 <mpfr_sqrt@@Base+0x3c0>  // b.none
   22cf8:	str	x4, [x23]
   22cfc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   22d00:	ldr	x1, [x0, #2592]
   22d04:	add	x0, x0, #0xa20
   22d08:	blr	x1
   22d0c:	add	x0, x5, x0
   22d10:	ldr	w1, [x0]
   22d14:	mov	w19, #0x1                   	// #1
   22d18:	orr	w1, w1, #0x8
   22d1c:	str	w1, [x0]
   22d20:	b	22a10 <mpfr_sqrt@@Base+0x78>
   22d24:	and	w0, w22, #0xfffffffd
   22d28:	cmp	w0, #0x1
   22d2c:	b.ne	22cec <mpfr_sqrt@@Base+0x354>  // b.any
   22d30:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   22d34:	ldr	x1, [x0, #2592]
   22d38:	add	x0, x0, #0xa20
   22d3c:	blr	x1
   22d40:	add	x0, x5, x0
   22d44:	ldr	w1, [x0]
   22d48:	mov	w19, #0xffffffff            	// #-1
   22d4c:	orr	w1, w1, #0x8
   22d50:	str	w1, [x0]
   22d54:	b	22a10 <mpfr_sqrt@@Base+0x78>
   22d58:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   22d5c:	str	x0, [x23]
   22d60:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   22d64:	ldr	x1, [x0, #2560]
   22d68:	add	x0, x0, #0xa00
   22d6c:	blr	x1
   22d70:	ldr	x0, [x5, x0]
   22d74:	cmp	x19, x0
   22d78:	b.lt	22d84 <mpfr_sqrt@@Base+0x3ec>  // b.tstop
   22d7c:	mov	w2, #0x1                   	// #1
   22d80:	b	22bf4 <mpfr_sqrt@@Base+0x25c>
   22d84:	add	x19, x19, #0x1
   22d88:	str	x19, [x24, #16]
   22d8c:	b	22cfc <mpfr_sqrt@@Base+0x364>
   22d90:	sub	x1, x21, #0x41
   22d94:	cmp	x1, #0x3e
   22d98:	b.hi	23274 <mpfr_sqrt@@Base+0x8dc>  // b.pmore
   22d9c:	ldr	x0, [x26, #24]
   22da0:	mov	x1, #0x80                  	// #128
   22da4:	sub	x21, x1, x21
   22da8:	ldr	x1, [x0, #8]
   22dac:	tbz	w19, #0, 230c8 <mpfr_sqrt@@Base+0x730>
   22db0:	lsr	x1, x1, #1
   22db4:	str	x1, [x29, #152]
   22db8:	add	x19, x19, #0x1
   22dbc:	ldp	x2, x1, [x0]
   22dc0:	extr	x1, x1, x2, #1
   22dc4:	str	x1, [x29, #144]
   22dc8:	ldr	x0, [x0]
   22dcc:	lsl	x0, x0, #63
   22dd0:	str	x0, [x29, #136]
   22dd4:	ldr	x3, [x29, #152]
   22dd8:	mov	x0, #0x2                   	// #2
   22ddc:	adrp	x6, 56000 <mpfr_l2b_2_0__tab@@Base+0x488>
   22de0:	add	x6, x6, #0x238
   22de4:	sdiv	x19, x19, x0
   22de8:	adrp	x0, 57000 <mpfr_l2b_2_0__tab@@Base+0x1488>
   22dec:	lsr	x5, x3, #54
   22df0:	add	x0, x0, #0xa38
   22df4:	sub	x5, x5, #0x100
   22df8:	lsr	x2, x3, #27
   22dfc:	mov	x25, #0x1                   	// #1
   22e00:	lsl	x25, x25, x21
   22e04:	sub	x20, x25, #0x1
   22e08:	ldr	x4, [x0, x5, lsl #3]
   22e0c:	ldr	x5, [x6, x5, lsl #3]
   22e10:	lsl	x0, x4, #57
   22e14:	lsl	x4, x4, #11
   22e18:	madd	x5, x2, x5, x5
   22e1c:	sub	x0, x0, x5
   22e20:	add	x0, x4, x0, lsr #47
   22e24:	mul	x1, x0, x0
   22e28:	madd	x2, x2, x1, x1
   22e2c:	mov	x1, #0x2000000000000000    	// #2305843009213693952
   22e30:	neg	x2, x2
   22e34:	umulh	x2, x0, x2
   22e38:	lsr	x2, x2, #6
   22e3c:	add	x0, x2, x0, lsl #10
   22e40:	mul	x2, x0, x0
   22e44:	umulh	x2, x2, x3
   22e48:	add	x2, x2, #0x2
   22e4c:	sub	x2, x1, x2, lsr #1
   22e50:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   22e54:	mul	x2, x0, x2
   22e58:	lsl	x0, x0, #33
   22e5c:	add	x2, x0, x2, lsr #29
   22e60:	umulh	x0, x2, x3
   22e64:	adds	x0, x3, x0
   22e68:	csel	x0, x0, x1, mi  // mi = first
   22e6c:	umulh	x1, x0, x0
   22e70:	mul	x5, x0, x0
   22e74:	negs	x4, x5
   22e78:	sbc	x1, x3, x1
   22e7c:	mov	x3, x4
   22e80:	cmp	x1, #0xf
   22e84:	b.ls	22ea4 <mpfr_sqrt@@Base+0x50c>  // b.plast
   22e88:	lsr	x4, x0, #60
   22e8c:	lsl	x6, x0, #4
   22e90:	add	x0, x0, #0x8
   22e94:	subs	x5, x3, x6
   22e98:	sbc	x4, x1, x4
   22e9c:	subs	x3, x5, #0x40
   22ea0:	sbc	x1, x4, xzr
   22ea4:	cmp	x1, #0x7
   22ea8:	b.ls	22ecc <mpfr_sqrt@@Base+0x534>  // b.plast
   22eac:	lsr	x4, x0, #61
   22eb0:	lsl	x6, x0, #3
   22eb4:	add	x0, x0, #0x4
   22eb8:	subs	x5, x3, x6
   22ebc:	sbc	x3, x1, x4
   22ec0:	subs	x4, x5, #0x10
   22ec4:	sbc	x1, x3, xzr
   22ec8:	mov	x3, x4
   22ecc:	cmp	x1, #0x3
   22ed0:	b.ls	22ef0 <mpfr_sqrt@@Base+0x558>  // b.plast
   22ed4:	lsr	x5, x0, #62
   22ed8:	lsl	x6, x0, #2
   22edc:	add	x0, x0, #0x2
   22ee0:	subs	x4, x3, x6
   22ee4:	sbc	x1, x1, x5
   22ee8:	subs	x3, x4, #0x4
   22eec:	sbc	x1, x1, xzr
   22ef0:	cmp	x1, #0x1
   22ef4:	b.hi	230d8 <mpfr_sqrt@@Base+0x740>  // b.pmore
   22ef8:	b.ne	230f8 <mpfr_sqrt@@Base+0x760>  // b.any
   22efc:	cmp	x3, x0, lsl #1
   22f00:	b.hi	230d8 <mpfr_sqrt@@Base+0x740>  // b.pmore
   22f04:	ldr	x4, [x29, #144]
   22f08:	adds	x3, x3, x4
   22f0c:	cinc	x1, x1, cs  // cs = hs, nlast
   22f10:	add	x0, x0, x1, lsr #1
   22f14:	extr	x3, x1, x3, #1
   22f18:	umulh	x4, x2, x3
   22f1c:	adds	x3, x3, x4
   22f20:	cinc	x0, x0, cs  // cs = hs, nlast
   22f24:	cmp	xzr, x1, lsr #1
   22f28:	b.eq	22f34 <mpfr_sqrt@@Base+0x59c>  // b.none
   22f2c:	adds	x3, x2, x3
   22f30:	cinc	x0, x0, cs  // cs = hs, nlast
   22f34:	stp	x3, x0, [x23]
   22f38:	add	x3, x3, #0x1a
   22f3c:	and	x3, x3, x20, lsr #1
   22f40:	cmp	x3, #0x1e
   22f44:	mov	x1, #0x1                   	// #1
   22f48:	b.hi	22fe8 <mpfr_sqrt@@Base+0x650>  // b.pmore
   22f4c:	add	x26, x29, #0xa0
   22f50:	mov	x1, x23
   22f54:	mov	x0, x26
   22f58:	mov	x2, #0x2                   	// #2
   22f5c:	str	xzr, [x29, #128]
   22f60:	bl	c440 <__gmpn_sqr@plt>
   22f64:	mov	x2, x26
   22f68:	add	x1, x29, #0x80
   22f6c:	mov	x3, #0x3                   	// #3
   22f70:	mov	x0, x26
   22f74:	bl	bee0 <__gmpn_sub_n@plt>
   22f78:	ldp	x1, x0, [x23]
   22f7c:	mov	w5, #0x0                   	// #0
   22f80:	ldp	x4, x2, [x29, #160]
   22f84:	ldr	x3, [x29, #176]
   22f88:	extr	x0, x0, x1, #63
   22f8c:	lsl	x1, x1, #1
   22f90:	tbnz	x3, #63, 23100 <mpfr_sqrt@@Base+0x768>
   22f94:	cbz	w5, 22fa0 <mpfr_sqrt@@Base+0x608>
   22f98:	stp	x4, x2, [x29, #160]
   22f9c:	str	x3, [x29, #176]
   22fa0:	ldp	x2, x3, [x29, #160]
   22fa4:	mov	w4, #0x0                   	// #0
   22fa8:	ldr	x6, [x29, #176]
   22fac:	cmp	x6, #0x1
   22fb0:	b.hi	2314c <mpfr_sqrt@@Base+0x7b4>  // b.pmore
   22fb4:	b.eq	23194 <mpfr_sqrt@@Base+0x7fc>  // b.none
   22fb8:	cbz	w4, 22fc4 <mpfr_sqrt@@Base+0x62c>
   22fbc:	stp	x2, x3, [x29, #160]
   22fc0:	str	xzr, [x29, #176]
   22fc4:	lsr	x2, x0, #1
   22fc8:	extr	x0, x0, x1, #1
   22fcc:	orr	x2, x2, #0x8000000000000000
   22fd0:	stp	x0, x2, [x23]
   22fd4:	ldr	x0, [x29, #160]
   22fd8:	ldr	x1, [x29, #176]
   22fdc:	orr	x1, x1, x0
   22fe0:	ldr	x0, [x29, #168]
   22fe4:	orr	x1, x1, x0
   22fe8:	sub	w21, w21, #0x1
   22fec:	mov	x2, #0x1                   	// #1
   22ff0:	ldr	x0, [x23]
   22ff4:	lsl	x21, x2, x21
   22ff8:	eor	x20, x20, x21
   22ffc:	neg	x4, x25
   23000:	and	x20, x20, x0
   23004:	and	x3, x0, x21
   23008:	orr	x20, x20, x1
   2300c:	and	x21, x0, x4
   23010:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   23014:	ldr	x1, [x0, #2560]
   23018:	add	x0, x0, #0xa00
   2301c:	blr	x1
   23020:	str	x21, [x23]
   23024:	mrs	x1, tpidr_el0
   23028:	ldr	x0, [x1, x0]
   2302c:	cmp	x19, x0
   23030:	b.gt	22bf4 <mpfr_sqrt@@Base+0x25c>
   23034:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   23038:	ldr	x5, [x0, #2528]
   2303c:	add	x0, x0, #0x9e0
   23040:	blr	x5
   23044:	ldr	x0, [x1, x0]
   23048:	cmp	x19, x0
   2304c:	b.ge	23078 <mpfr_sqrt@@Base+0x6e0>  // b.tcont
   23050:	cbnz	w22, 231e8 <mpfr_sqrt@@Base+0x850>
   23054:	sub	x0, x0, #0x1
   23058:	cmp	x19, x0
   2305c:	b.ne	231c8 <mpfr_sqrt@@Base+0x830>  // b.any
   23060:	ldr	x0, [x23, #8]
   23064:	cmn	x0, #0x1
   23068:	b.ne	231cc <mpfr_sqrt@@Base+0x834>  // b.any
   2306c:	cmp	x4, x21
   23070:	b.ne	22cbc <mpfr_sqrt@@Base+0x324>  // b.any
   23074:	cbz	x3, 22cbc <mpfr_sqrt@@Base+0x324>
   23078:	str	x19, [x24, #16]
   2307c:	cmp	x20, #0x0
   23080:	ccmp	w22, #0x5, #0x4, ne  // ne = any
   23084:	b.eq	22a0c <mpfr_sqrt@@Base+0x74>  // b.none
   23088:	cbnz	w22, 23220 <mpfr_sqrt@@Base+0x888>
   2308c:	cbz	x3, 2322c <mpfr_sqrt@@Base+0x894>
   23090:	ldr	x0, [x23]
   23094:	add	x25, x25, x0
   23098:	str	x25, [x23]
   2309c:	ldr	x0, [x23, #8]
   230a0:	cmp	x25, #0x0
   230a4:	cinc	x0, x0, eq  // eq = none
   230a8:	cbz	x0, 23244 <mpfr_sqrt@@Base+0x8ac>
   230ac:	str	x0, [x23, #8]
   230b0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   230b4:	ldr	x2, [x0, #2592]
   230b8:	add	x0, x0, #0xa20
   230bc:	blr	x2
   230c0:	add	x0, x1, x0
   230c4:	b	22d10 <mpfr_sqrt@@Base+0x378>
   230c8:	str	x1, [x29, #152]
   230cc:	ldr	x0, [x0]
   230d0:	stp	xzr, x0, [x29, #136]
   230d4:	b	22dd4 <mpfr_sqrt@@Base+0x43c>
   230d8:	lsl	x4, x0, #1
   230dc:	lsr	x5, x0, #63
   230e0:	add	x4, x4, #0x1
   230e4:	add	x0, x0, #0x1
   230e8:	subs	x6, x3, x4
   230ec:	sbc	x1, x1, x5
   230f0:	mov	x3, x6
   230f4:	b	22ef0 <mpfr_sqrt@@Base+0x558>
   230f8:	mov	x1, #0x0                   	// #0
   230fc:	b	22f04 <mpfr_sqrt@@Base+0x56c>
   23100:	cmp	x1, #0x1
   23104:	cset	x5, ls  // ls = plast
   23108:	sub	x0, x0, x5
   2310c:	sub	x5, x1, #0x2
   23110:	sub	x1, x1, #0x1
   23114:	add	x4, x4, x1
   23118:	cmp	x5, x4
   2311c:	cinc	x6, x0, hi  // hi = pmore
   23120:	cset	w1, hi  // hi = pmore
   23124:	add	x2, x2, x6
   23128:	cmp	x0, x2
   2312c:	csel	w1, w1, wzr, eq  // eq = none
   23130:	csinc	w1, w1, wzr, ls  // ls = plast
   23134:	sxtw	x1, w1
   23138:	add	x1, x1, #0x1
   2313c:	add	x3, x3, x1
   23140:	mov	x1, x5
   23144:	mov	w5, #0x1                   	// #1
   23148:	b	22f90 <mpfr_sqrt@@Base+0x5f8>
   2314c:	cmp	x2, x1
   23150:	cset	w5, ls  // ls = plast
   23154:	cmp	x0, x3
   23158:	csel	w4, w5, wzr, eq  // eq = none
   2315c:	and	x5, x5, #0xff
   23160:	csinc	w4, w4, wzr, ls  // ls = plast
   23164:	add	x5, x5, x0
   23168:	sub	x3, x3, x5
   2316c:	sxtw	x4, w4
   23170:	mvn	x4, x4
   23174:	add	x6, x6, x4
   23178:	mvn	x4, x1
   2317c:	add	x1, x1, #0x2
   23180:	add	x2, x2, x4
   23184:	cmp	x1, #0x1
   23188:	mov	w4, #0x1                   	// #1
   2318c:	cinc	x0, x0, ls  // ls = plast
   23190:	b	22fac <mpfr_sqrt@@Base+0x614>
   23194:	cmp	x0, x3
   23198:	b.cc	2314c <mpfr_sqrt@@Base+0x7b4>  // b.lo, b.ul, b.last
   2319c:	b.eq	231b4 <mpfr_sqrt@@Base+0x81c>  // b.none
   231a0:	cbz	w4, 22fc4 <mpfr_sqrt@@Base+0x62c>
   231a4:	str	x3, [x29, #168]
   231a8:	str	x2, [x29, #160]
   231ac:	str	x6, [x29, #176]
   231b0:	b	22fc4 <mpfr_sqrt@@Base+0x62c>
   231b4:	cmp	x2, x1
   231b8:	b.hi	2314c <mpfr_sqrt@@Base+0x7b4>  // b.pmore
   231bc:	cbz	w4, 22fc4 <mpfr_sqrt@@Base+0x62c>
   231c0:	str	x0, [x29, #168]
   231c4:	b	231a8 <mpfr_sqrt@@Base+0x810>
   231c8:	b.lt	22c8c <mpfr_sqrt@@Base+0x2f4>  // b.tstop
   231cc:	ldr	x1, [x23, #8]
   231d0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   231d4:	cmp	x1, x0
   231d8:	b.ne	22cbc <mpfr_sqrt@@Base+0x324>  // b.any
   231dc:	orr	x20, x20, x21
   231e0:	cmp	x20, #0x0
   231e4:	b	22c80 <mpfr_sqrt@@Base+0x2e8>
   231e8:	cmp	w22, #0x4
   231ec:	ccmp	w22, #0x2, #0x4, ne  // ne = any
   231f0:	b.ne	22cbc <mpfr_sqrt@@Base+0x324>  // b.any
   231f4:	sub	x0, x0, #0x1
   231f8:	cmp	x19, x0
   231fc:	b.ne	22cbc <mpfr_sqrt@@Base+0x324>  // b.any
   23200:	ldr	x0, [x23, #8]
   23204:	cmn	x0, #0x1
   23208:	b.ne	22cbc <mpfr_sqrt@@Base+0x324>  // b.any
   2320c:	cmp	x4, x21
   23210:	b.ne	22cbc <mpfr_sqrt@@Base+0x324>  // b.any
   23214:	orr	x0, x3, x20
   23218:	cbnz	x0, 23078 <mpfr_sqrt@@Base+0x6e0>
   2321c:	b	22cbc <mpfr_sqrt@@Base+0x324>
   23220:	and	w0, w22, #0xfffffffd
   23224:	cmp	w0, #0x1
   23228:	b.ne	23090 <mpfr_sqrt@@Base+0x6f8>  // b.any
   2322c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   23230:	ldr	x2, [x0, #2592]
   23234:	add	x0, x0, #0xa20
   23238:	blr	x2
   2323c:	add	x0, x1, x0
   23240:	b	22d44 <mpfr_sqrt@@Base+0x3ac>
   23244:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   23248:	str	x0, [x23, #8]
   2324c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   23250:	ldr	x2, [x0, #2560]
   23254:	add	x0, x0, #0xa00
   23258:	blr	x2
   2325c:	ldr	x0, [x1, x0]
   23260:	cmp	x19, x0
   23264:	b.ge	22d7c <mpfr_sqrt@@Base+0x3e4>  // b.tcont
   23268:	add	x19, x19, #0x1
   2326c:	str	x19, [x24, #16]
   23270:	b	230b0 <mpfr_sqrt@@Base+0x718>
   23274:	cmp	x21, #0x40
   23278:	b.ne	234d0 <mpfr_sqrt@@Base+0xb38>  // b.any
   2327c:	ldr	x0, [x26, #24]
   23280:	ldr	x0, [x0]
   23284:	tbz	w19, #0, 233dc <mpfr_sqrt@@Base+0xa44>
   23288:	lsl	x5, x0, #63
   2328c:	add	x19, x19, #0x1
   23290:	lsr	x0, x0, #1
   23294:	mov	x1, #0x2                   	// #2
   23298:	lsr	x3, x0, #54
   2329c:	sub	x3, x3, #0x100
   232a0:	adrp	x6, 56000 <mpfr_l2b_2_0__tab@@Base+0x488>
   232a4:	add	x6, x6, #0x238
   232a8:	lsr	x2, x0, #27
   232ac:	sdiv	x19, x19, x1
   232b0:	adrp	x1, 57000 <mpfr_l2b_2_0__tab@@Base+0x1488>
   232b4:	add	x1, x1, #0xa38
   232b8:	mov	x7, #0xfffffffffffffffe    	// #-2
   232bc:	ldr	x6, [x6, x3, lsl #3]
   232c0:	ldr	x4, [x1, x3, lsl #3]
   232c4:	mov	x3, x2
   232c8:	madd	x6, x2, x6, x6
   232cc:	lsl	x1, x4, #57
   232d0:	lsl	x4, x4, #11
   232d4:	sub	x1, x1, x6
   232d8:	mov	x6, #0x1fffffffe           	// #8589934590
   232dc:	add	x1, x4, x1, lsr #47
   232e0:	mul	x2, x1, x1
   232e4:	madd	x2, x3, x2, x2
   232e8:	neg	x2, x2
   232ec:	umulh	x2, x1, x2
   232f0:	lsr	x2, x2, #6
   232f4:	add	x1, x2, x1, lsl #10
   232f8:	lsr	x2, x0, #31
   232fc:	mul	x2, x2, x1
   23300:	lsr	x2, x2, #32
   23304:	msub	x3, x2, x2, x0
   23308:	lsl	x4, x2, #1
   2330c:	cmp	x3, x6
   23310:	b.hi	233e4 <mpfr_sqrt@@Base+0xa4c>  // b.pmore
   23314:	cmp	x3, x4
   23318:	b.ls	23328 <mpfr_sqrt@@Base+0x990>  // b.plast
   2331c:	sub	x3, x3, #0x1
   23320:	add	x2, x2, #0x1
   23324:	sub	x3, x3, x4
   23328:	mul	x1, x1, x3
   2332c:	lsl	x2, x2, #32
   23330:	adds	x1, x2, x1, lsr #32
   23334:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   23338:	csel	x1, x1, x2, mi  // mi = first
   2333c:	umulh	x3, x1, x1
   23340:	mul	x4, x1, x1
   23344:	subs	x2, x5, x4
   23348:	sbc	x0, x0, x3
   2334c:	cbz	x0, 23360 <mpfr_sqrt@@Base+0x9c8>
   23350:	cmp	x0, #0x1
   23354:	b.ne	233f4 <mpfr_sqrt@@Base+0xa5c>  // b.any
   23358:	cmp	x2, x1, lsl #1
   2335c:	b.hi	233f4 <mpfr_sqrt@@Base+0xa5c>  // b.pmore
   23360:	cmp	x1, x2
   23364:	and	w0, w0, #0x1
   23368:	cset	w5, cc  // cc = lo, ul, last
   2336c:	str	x1, [x23]
   23370:	orr	w5, w5, w0
   23374:	and	x4, x5, #0xff
   23378:	orr	x4, x4, x2
   2337c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   23380:	ldr	x2, [x0, #2560]
   23384:	add	x0, x0, #0xa00
   23388:	blr	x2
   2338c:	mrs	x2, tpidr_el0
   23390:	ldr	x0, [x2, x0]
   23394:	cmp	x19, x0
   23398:	b.gt	22d7c <mpfr_sqrt@@Base+0x3e4>
   2339c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   233a0:	ldr	x3, [x0, #2528]
   233a4:	add	x0, x0, #0x9e0
   233a8:	blr	x3
   233ac:	ldr	x3, [x2, x0]
   233b0:	cmp	x19, x3
   233b4:	b.ge	2343c <mpfr_sqrt@@Base+0xaa4>  // b.tcont
   233b8:	cbnz	w22, 23418 <mpfr_sqrt@@Base+0xa80>
   233bc:	sub	x3, x3, #0x1
   233c0:	cmp	x19, x3
   233c4:	b.lt	22c8c <mpfr_sqrt@@Base+0x2f4>  // b.tstop
   233c8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   233cc:	cmp	x1, x0
   233d0:	b.ne	22cbc <mpfr_sqrt@@Base+0x324>  // b.any
   233d4:	cmp	x4, #0x0
   233d8:	b	22c80 <mpfr_sqrt@@Base+0x2e8>
   233dc:	mov	x5, #0x0                   	// #0
   233e0:	b	23294 <mpfr_sqrt@@Base+0x8fc>
   233e4:	madd	x3, x2, x7, x3
   233e8:	add	x2, x2, #0x1
   233ec:	sub	x3, x3, #0x1
   233f0:	b	23308 <mpfr_sqrt@@Base+0x970>
   233f4:	cmp	x1, x2
   233f8:	sub	x2, x2, x1
   233fc:	add	x1, x1, #0x1
   23400:	cset	x3, hi  // hi = pmore
   23404:	cmp	x2, x1
   23408:	sub	x2, x2, x1
   2340c:	cinc	x3, x3, cc  // cc = lo, ul, last
   23410:	sub	x0, x0, x3
   23414:	b	2334c <mpfr_sqrt@@Base+0x9b4>
   23418:	cmp	w22, #0x4
   2341c:	ccmp	w22, #0x2, #0x4, ne  // ne = any
   23420:	b.ne	22cbc <mpfr_sqrt@@Base+0x324>  // b.any
   23424:	sub	x3, x3, #0x1
   23428:	cmp	x19, x3
   2342c:	b.ne	22cbc <mpfr_sqrt@@Base+0x324>  // b.any
   23430:	cmn	x1, #0x1
   23434:	b.ne	22cbc <mpfr_sqrt@@Base+0x324>  // b.any
   23438:	cbz	x4, 22cbc <mpfr_sqrt@@Base+0x324>
   2343c:	str	x19, [x24, #16]
   23440:	cmp	x4, #0x0
   23444:	ccmp	w22, #0x5, #0x4, ne  // ne = any
   23448:	b.eq	22a0c <mpfr_sqrt@@Base+0x74>  // b.none
   2344c:	cbnz	w22, 2346c <mpfr_sqrt@@Base+0xad4>
   23450:	cbnz	w5, 23478 <mpfr_sqrt@@Base+0xae0>
   23454:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   23458:	ldr	x1, [x0, #2592]
   2345c:	add	x0, x0, #0xa20
   23460:	blr	x1
   23464:	add	x0, x2, x0
   23468:	b	22d44 <mpfr_sqrt@@Base+0x3ac>
   2346c:	and	w0, w22, #0xfffffffd
   23470:	cmp	w0, #0x1
   23474:	b.eq	23454 <mpfr_sqrt@@Base+0xabc>  // b.none
   23478:	ldr	x0, [x23]
   2347c:	adds	x0, x0, #0x1
   23480:	b.eq	234a0 <mpfr_sqrt@@Base+0xb08>  // b.none
   23484:	str	x0, [x23]
   23488:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2348c:	ldr	x1, [x0, #2592]
   23490:	add	x0, x0, #0xa20
   23494:	blr	x1
   23498:	add	x0, x2, x0
   2349c:	b	22d10 <mpfr_sqrt@@Base+0x378>
   234a0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   234a4:	str	x0, [x23]
   234a8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   234ac:	ldr	x1, [x0, #2560]
   234b0:	add	x0, x0, #0xa00
   234b4:	blr	x1
   234b8:	ldr	x0, [x2, x0]
   234bc:	cmp	x19, x0
   234c0:	b.ge	22d7c <mpfr_sqrt@@Base+0x3e4>  // b.tcont
   234c4:	add	x19, x19, #0x1
   234c8:	str	x19, [x24, #16]
   234cc:	b	23488 <mpfr_sqrt@@Base+0xaf0>
   234d0:	neg	w25, w21
   234d4:	sub	x20, x21, #0x1
   234d8:	and	w25, w25, #0x3f
   234dc:	sub	x19, x0, #0x1
   234e0:	orr	w1, w22, w25
   234e4:	asr	x20, x20, #6
   234e8:	cmp	w1, #0x0
   234ec:	mov	w1, #0x40                  	// #64
   234f0:	csel	w25, w25, w1, ne  // ne = any
   234f4:	add	x20, x20, #0x1
   234f8:	cmp	w25, w1
   234fc:	str	xzr, [x29, #160]
   23500:	cinc	x20, x20, eq  // eq = none
   23504:	asr	x19, x19, #6
   23508:	add	x19, x19, #0x1
   2350c:	cmp	w25, #0x40
   23510:	lsl	x27, x20, #1
   23514:	b.ne	235cc <mpfr_sqrt@@Base+0xc34>  // b.any
   23518:	lsl	x1, x20, #3
   2351c:	cmp	x1, #0x4, lsl #12
   23520:	b.hi	235bc <mpfr_sqrt@@Base+0xc24>  // b.pmore
   23524:	add	x1, x1, #0xf
   23528:	and	x1, x1, #0xfffffffffffffff0
   2352c:	sub	sp, sp, x1
   23530:	mov	x28, sp
   23534:	ldp	x21, x6, [x26, #16]
   23538:	lsl	x1, x27, #3
   2353c:	cmp	x1, #0x4, lsl #12
   23540:	and	w0, w21, #0x1
   23544:	str	w0, [x29, #124]
   23548:	b.hi	235d4 <mpfr_sqrt@@Base+0xc3c>  // b.pmore
   2354c:	sub	sp, sp, x1
   23550:	mov	x21, sp
   23554:	cmp	x27, x19
   23558:	b.lt	23684 <mpfr_sqrt@@Base+0xcec>  // b.tstop
   2355c:	subs	x3, x27, x19
   23560:	b.eq	238dc <mpfr_sqrt@@Base+0xf44>  // b.none
   23564:	lsl	x4, x3, #3
   23568:	mov	x0, x21
   2356c:	mov	x2, x4
   23570:	mov	w1, #0x0                   	// #0
   23574:	stp	x6, x3, [x29, #96]
   23578:	str	x4, [x29, #112]
   2357c:	bl	c1a0 <memset@plt>
   23580:	ldr	w0, [x29, #124]
   23584:	ldp	x6, x3, [x29, #96]
   23588:	cbz	w0, 238e4 <mpfr_sqrt@@Base+0xf4c>
   2358c:	ldr	x4, [x29, #112]
   23590:	mov	x2, x19
   23594:	mov	x1, x6
   23598:	mov	w3, #0x1                   	// #1
   2359c:	sub	x7, x4, #0x8
   235a0:	add	x0, x21, x4
   235a4:	str	x7, [x29, #112]
   235a8:	bl	bd60 <__gmpn_rshift@plt>
   235ac:	ldr	x7, [x29, #112]
   235b0:	str	x0, [x21, x7]
   235b4:	mov	x4, #0x0                   	// #0
   235b8:	b	23604 <mpfr_sqrt@@Base+0xc6c>
   235bc:	add	x0, x29, #0xa0
   235c0:	bl	be40 <mpfr_tmp_allocate@plt>
   235c4:	mov	x28, x0
   235c8:	b	23534 <mpfr_sqrt@@Base+0xb9c>
   235cc:	mov	x28, x23
   235d0:	b	23534 <mpfr_sqrt@@Base+0xb9c>
   235d4:	add	x0, x29, #0xa0
   235d8:	str	x6, [x29, #112]
   235dc:	bl	be40 <mpfr_tmp_allocate@plt>
   235e0:	mov	x21, x0
   235e4:	ldr	x6, [x29, #112]
   235e8:	b	23554 <mpfr_sqrt@@Base+0xbbc>
   235ec:	mov	x2, x19
   235f0:	mov	x1, x6
   235f4:	mov	x0, x21
   235f8:	mov	w3, #0x1                   	// #1
   235fc:	bl	bd60 <__gmpn_rshift@plt>
   23600:	mov	x4, x0
   23604:	mov	x2, x21
   23608:	mov	x3, x27
   2360c:	mov	x1, #0x0                   	// #0
   23610:	mov	x0, x28
   23614:	str	x4, [x29, #112]
   23618:	bl	cd60 <__gmpn_sqrtrem@plt>
   2361c:	ldr	x4, [x29, #112]
   23620:	mov	x3, #0x1                   	// #1
   23624:	ldr	x6, [x28]
   23628:	orr	x4, x0, x4
   2362c:	cmp	x4, #0x0
   23630:	mov	x0, #0xffffffffffffffff    	// #-1
   23634:	cset	x5, ne  // ne = any
   23638:	lsl	x1, x3, x25
   2363c:	cmp	w25, #0x40
   23640:	add	x1, x1, x0
   23644:	csel	x1, x1, x0, ne  // ne = any
   23648:	ldr	w7, [x29, #124]
   2364c:	and	x2, x6, x1
   23650:	bic	x1, x6, x1
   23654:	str	x1, [x28]
   23658:	orr	x5, x5, x2
   2365c:	ldr	x6, [x26, #16]
   23660:	add	x21, x6, w7, sxtw
   23664:	mov	x6, #0x2                   	// #2
   23668:	sdiv	x21, x21, x6
   2366c:	and	w6, w22, #0xfffffffd
   23670:	cmp	w6, #0x1
   23674:	b.eq	236f0 <mpfr_sqrt@@Base+0xd58>  // b.none
   23678:	cbnz	x5, 23720 <mpfr_sqrt@@Base+0xd88>
   2367c:	mov	w19, #0x0                   	// #0
   23680:	b	236f8 <mpfr_sqrt@@Base+0xd60>
   23684:	ldr	w0, [x29, #124]
   23688:	sub	x19, x19, x27
   2368c:	add	x1, x6, x19, lsl #3
   23690:	cbz	w0, 236c8 <mpfr_sqrt@@Base+0xd30>
   23694:	mov	x2, x27
   23698:	mov	x0, x21
   2369c:	mov	w3, #0x1                   	// #1
   236a0:	str	x6, [x29, #112]
   236a4:	bl	bd60 <__gmpn_rshift@plt>
   236a8:	mov	x4, x0
   236ac:	ldr	x6, [x29, #112]
   236b0:	cmp	x4, #0x0
   236b4:	ccmp	x19, #0x0, #0x4, eq  // eq = none
   236b8:	b.eq	23604 <mpfr_sqrt@@Base+0xc6c>  // b.none
   236bc:	sub	x19, x19, #0x1
   236c0:	ldr	x4, [x6, x19, lsl #3]
   236c4:	b	236b0 <mpfr_sqrt@@Base+0xd18>
   236c8:	cmp	x21, x1
   236cc:	b.eq	236e8 <mpfr_sqrt@@Base+0xd50>  // b.none
   236d0:	lsl	x2, x20, #4
   236d4:	mov	x0, x21
   236d8:	str	x6, [x29, #112]
   236dc:	bl	ba90 <memcpy@plt>
   236e0:	mov	x4, #0x0                   	// #0
   236e4:	b	236ac <mpfr_sqrt@@Base+0xd14>
   236e8:	mov	x4, #0x0                   	// #0
   236ec:	b	236b0 <mpfr_sqrt@@Base+0xd18>
   236f0:	cmp	x5, #0x0
   236f4:	csetm	w19, ne  // ne = any
   236f8:	cmp	w25, #0x40
   236fc:	b.ne	237b4 <mpfr_sqrt@@Base+0xe1c>  // b.any
   23700:	add	x1, x28, #0x8
   23704:	cmp	x1, x23
   23708:	b.eq	237b4 <mpfr_sqrt@@Base+0xe1c>  // b.none
   2370c:	sub	x2, x20, #0x1
   23710:	mov	x0, x23
   23714:	lsl	x2, x2, #3
   23718:	bl	ba90 <memcpy@plt>
   2371c:	b	237b4 <mpfr_sqrt@@Base+0xe1c>
   23720:	cmp	w25, #0x40
   23724:	cbnz	w22, 23784 <mpfr_sqrt@@Base+0xdec>
   23728:	b.eq	2375c <mpfr_sqrt@@Base+0xdc4>  // b.none
   2372c:	sub	w5, w25, #0x1
   23730:	lsr	x6, x2, x5
   23734:	tbz	w6, #0, 23754 <mpfr_sqrt@@Base+0xdbc>
   23738:	lsl	x3, x3, x5
   2373c:	cmp	x3, x2
   23740:	b.ne	23794 <mpfr_sqrt@@Base+0xdfc>  // b.any
   23744:	lsr	x1, x1, x25
   23748:	and	x1, x1, #0x1
   2374c:	orr	x1, x1, x4
   23750:	cbnz	x1, 23794 <mpfr_sqrt@@Base+0xdfc>
   23754:	mov	w19, w0
   23758:	b	237b4 <mpfr_sqrt@@Base+0xe1c>
   2375c:	tbz	x2, #63, 2377c <mpfr_sqrt@@Base+0xde4>
   23760:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
   23764:	cmp	x2, x3
   23768:	ldr	x1, [x28, #8]
   2376c:	b.ne	23788 <mpfr_sqrt@@Base+0xdf0>  // b.any
   23770:	and	x1, x1, #0x1
   23774:	orr	x1, x1, x4
   23778:	cbnz	x1, 23788 <mpfr_sqrt@@Base+0xdf0>
   2377c:	mov	w19, w0
   23780:	b	23700 <mpfr_sqrt@@Base+0xd68>
   23784:	b.ne	23794 <mpfr_sqrt@@Base+0xdfc>  // b.any
   23788:	add	x28, x28, #0x8
   2378c:	sub	x20, x20, #0x1
   23790:	mov	w25, #0x0                   	// #0
   23794:	ldr	x0, [x28]
   23798:	mov	x19, #0x1                   	// #1
   2379c:	lsl	x25, x19, x25
   237a0:	adds	x25, x25, x0
   237a4:	str	x25, [x23]
   237a8:	b.cs	2381c <mpfr_sqrt@@Base+0xe84>  // b.hs, b.nlast
   237ac:	cmp	x28, x23
   237b0:	b.ne	23844 <mpfr_sqrt@@Base+0xeac>  // b.any
   237b4:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   237b8:	add	x0, x21, x0
   237bc:	mov	x1, #0x7ffffffffffffffe    	// #9223372036854775806
   237c0:	cmp	x0, x1
   237c4:	b.ls	23850 <mpfr_sqrt@@Base+0xeb8>  // b.plast
   237c8:	adrp	x2, 56000 <mpfr_l2b_2_0__tab@@Base+0x488>
   237cc:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   237d0:	add	x2, x2, #0x18e
   237d4:	add	x0, x0, #0x90a
   237d8:	mov	w1, #0x2b5                 	// #693
   237dc:	bl	cbd0 <mpfr_assert_fail@plt>
   237e0:	ldr	x0, [x28, x19, lsl #3]
   237e4:	add	x0, x0, #0x1
   237e8:	str	x0, [x23, x19, lsl #3]
   237ec:	add	x19, x19, #0x1
   237f0:	cbz	x0, 2381c <mpfr_sqrt@@Base+0xe84>
   237f4:	cmp	x28, x23
   237f8:	b.ne	23810 <mpfr_sqrt@@Base+0xe78>  // b.any
   237fc:	mov	w19, #0x1                   	// #1
   23800:	b	237b4 <mpfr_sqrt@@Base+0xe1c>
   23804:	ldr	x0, [x28, x19, lsl #3]
   23808:	str	x0, [x23, x19, lsl #3]
   2380c:	add	x19, x19, #0x1
   23810:	cmp	x20, x19
   23814:	b.gt	23804 <mpfr_sqrt@@Base+0xe6c>
   23818:	b	237fc <mpfr_sqrt@@Base+0xe64>
   2381c:	cmp	x20, x19
   23820:	b.gt	237e0 <mpfr_sqrt@@Base+0xe48>
   23824:	add	x20, x23, x20, lsl #3
   23828:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   2382c:	add	x21, x21, #0x1
   23830:	stur	x0, [x20, #-8]
   23834:	b	237fc <mpfr_sqrt@@Base+0xe64>
   23838:	ldr	x0, [x28, x19, lsl #3]
   2383c:	str	x0, [x23, x19, lsl #3]
   23840:	add	x19, x19, #0x1
   23844:	cmp	x20, x19
   23848:	b.gt	23838 <mpfr_sqrt@@Base+0xea0>
   2384c:	b	237fc <mpfr_sqrt@@Base+0xe64>
   23850:	ldr	x0, [x29, #160]
   23854:	str	x21, [x24, #16]
   23858:	cbz	x0, 23860 <mpfr_sqrt@@Base+0xec8>
   2385c:	bl	c4a0 <mpfr_tmp_free@plt>
   23860:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   23864:	ldr	x1, [x0, #2528]
   23868:	add	x0, x0, #0x9e0
   2386c:	blr	x1
   23870:	mrs	x1, tpidr_el0
   23874:	ldr	x2, [x24, #16]
   23878:	ldr	x0, [x1, x0]
   2387c:	cmp	x2, x0
   23880:	b.lt	238c8 <mpfr_sqrt@@Base+0xf30>  // b.tstop
   23884:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   23888:	ldr	x3, [x0, #2560]
   2388c:	add	x0, x0, #0xa00
   23890:	blr	x3
   23894:	ldr	x0, [x1, x0]
   23898:	cmp	x2, x0
   2389c:	b.gt	238c8 <mpfr_sqrt@@Base+0xf30>
   238a0:	cbz	w19, 22a10 <mpfr_sqrt@@Base+0x78>
   238a4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   238a8:	ldr	x2, [x0, #2592]
   238ac:	add	x0, x0, #0xa20
   238b0:	blr	x2
   238b4:	add	x0, x1, x0
   238b8:	ldr	w1, [x0]
   238bc:	orr	w1, w1, #0x8
   238c0:	str	w1, [x0]
   238c4:	b	22a10 <mpfr_sqrt@@Base+0x78>
   238c8:	mov	w2, w22
   238cc:	mov	w1, w19
   238d0:	mov	x0, x24
   238d4:	bl	cbc0 <mpfr_check_range@plt>
   238d8:	b	22ccc <mpfr_sqrt@@Base+0x334>
   238dc:	ldr	w0, [x29, #124]
   238e0:	cbnz	w0, 235ec <mpfr_sqrt@@Base+0xc54>
   238e4:	add	x0, x21, x3, lsl #3
   238e8:	cmp	x0, x6
   238ec:	b.eq	235b4 <mpfr_sqrt@@Base+0xc1c>  // b.none
   238f0:	lsl	x2, x19, #3
   238f4:	mov	x1, x6
   238f8:	bl	ba90 <memcpy@plt>
   238fc:	b	235b4 <mpfr_sqrt@@Base+0xc1c>

0000000000023900 <mpfr_sqrt_ui@@Base>:
   23900:	stp	x29, x30, [sp, #-128]!
   23904:	mov	x29, sp
   23908:	stp	x19, x20, [sp, #16]
   2390c:	mov	x19, x0
   23910:	stp	x21, x22, [sp, #32]
   23914:	stp	x23, x24, [sp, #48]
   23918:	stp	x25, x26, [sp, #64]
   2391c:	cbz	x1, 23a14 <mpfr_sqrt_ui@@Base+0x114>
   23920:	clz	x4, x1
   23924:	add	x0, sp, #0x58
   23928:	str	x0, [sp, #120]
   2392c:	mov	w0, #0x1                   	// #1
   23930:	lsl	x1, x1, x4
   23934:	mov	x3, #0x40                  	// #64
   23938:	stp	x1, x3, [sp, #88]
   2393c:	sub	w3, w3, w4
   23940:	mov	w21, w2
   23944:	str	w0, [sp, #104]
   23948:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2394c:	ldr	x1, [x0, #2592]
   23950:	add	x0, x0, #0xa20
   23954:	blr	x1
   23958:	mrs	x1, tpidr_el0
   2395c:	sxtw	x3, w3
   23960:	add	x22, x1, x0
   23964:	str	x3, [sp, #112]
   23968:	ldr	w20, [x1, x0]
   2396c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   23970:	ldr	x5, [x0, #2528]
   23974:	add	x0, x0, #0x9e0
   23978:	blr	x5
   2397c:	add	x26, x1, x0
   23980:	ldr	x24, [x1, x0]
   23984:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   23988:	ldr	x5, [x0, #2560]
   2398c:	add	x0, x0, #0xa00
   23990:	blr	x5
   23994:	add	x25, x1, x0
   23998:	ldr	x23, [x1, x0]
   2399c:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   239a0:	str	x0, [x26]
   239a4:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   239a8:	add	x1, sp, #0x60
   239ac:	str	x0, [x25]
   239b0:	mov	x0, x19
   239b4:	bl	c9c0 <mpfr_sqrt@plt>
   239b8:	ldr	x1, [x19, #16]
   239bc:	str	w20, [x22]
   239c0:	str	x23, [x25]
   239c4:	str	x24, [x26]
   239c8:	cmp	x24, x1
   239cc:	b.gt	239f4 <mpfr_sqrt_ui@@Base+0xf4>
   239d0:	cmp	x23, x1
   239d4:	b.lt	239f4 <mpfr_sqrt_ui@@Base+0xf4>  // b.tstop
   239d8:	cbnz	w0, 23a08 <mpfr_sqrt_ui@@Base+0x108>
   239dc:	ldp	x19, x20, [sp, #16]
   239e0:	ldp	x21, x22, [sp, #32]
   239e4:	ldp	x23, x24, [sp, #48]
   239e8:	ldp	x25, x26, [sp, #64]
   239ec:	ldp	x29, x30, [sp], #128
   239f0:	ret
   239f4:	mov	w1, w0
   239f8:	mov	w2, w21
   239fc:	mov	x0, x19
   23a00:	bl	cbc0 <mpfr_check_range@plt>
   23a04:	b	239dc <mpfr_sqrt_ui@@Base+0xdc>
   23a08:	orr	w20, w20, #0x8
   23a0c:	str	w20, [x22]
   23a10:	b	239dc <mpfr_sqrt_ui@@Base+0xdc>
   23a14:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   23a18:	str	x0, [x19, #16]
   23a1c:	mov	w0, #0x1                   	// #1
   23a20:	str	w0, [x19, #8]
   23a24:	mov	w0, #0x0                   	// #0
   23a28:	b	239dc <mpfr_sqrt_ui@@Base+0xdc>

0000000000023a2c <mpfr_sub1@@Base>:
   23a2c:	stp	x29, x30, [sp, #-160]!
   23a30:	mov	x29, sp
   23a34:	stp	x25, x26, [sp, #64]
   23a38:	mov	x25, x1
   23a3c:	stp	x27, x28, [sp, #80]
   23a40:	mov	x27, x2
   23a44:	mov	x1, x27
   23a48:	add	x2, x29, #0x90
   23a4c:	stp	x19, x20, [sp, #16]
   23a50:	mov	x20, x0
   23a54:	mov	w19, w3
   23a58:	stp	x21, x22, [sp, #32]
   23a5c:	stp	x23, x24, [sp, #48]
   23a60:	str	xzr, [x29, #152]
   23a64:	ldr	x21, [x0]
   23a68:	ldr	x26, [x0, #24]
   23a6c:	mov	x0, x25
   23a70:	bl	be30 <mpfr_cmp2@plt>
   23a74:	cbnz	w0, 23ab8 <mpfr_sub1@@Base+0x8c>
   23a78:	cmp	w19, #0x3
   23a7c:	mov	w22, w0
   23a80:	mov	w0, #0x1                   	// #1
   23a84:	cneg	w0, w0, eq  // eq = none
   23a88:	str	w0, [x20, #8]
   23a8c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   23a90:	str	x0, [x20, #16]
   23a94:	mov	sp, x29
   23a98:	mov	w0, w22
   23a9c:	ldp	x19, x20, [sp, #16]
   23aa0:	ldp	x21, x22, [sp, #32]
   23aa4:	ldp	x23, x24, [sp, #48]
   23aa8:	ldp	x25, x26, [sp, #64]
   23aac:	ldp	x27, x28, [sp, #80]
   23ab0:	ldp	x29, x30, [sp], #160
   23ab4:	ret
   23ab8:	sub	x21, x21, #0x1
   23abc:	cmp	w0, #0x0
   23ac0:	ldr	w0, [x25, #8]
   23ac4:	asr	x21, x21, #6
   23ac8:	add	x21, x21, #0x1
   23acc:	b.ge	23ae0 <mpfr_sub1@@Base+0xb4>  // b.tcont
   23ad0:	mov	x1, x25
   23ad4:	neg	w0, w0
   23ad8:	mov	x25, x27
   23adc:	mov	x27, x1
   23ae0:	str	w0, [x20, #8]
   23ae4:	mov	x1, #0x4                   	// #4
   23ae8:	ldr	x0, [x25, #16]
   23aec:	str	x0, [x29, #136]
   23af0:	movk	x1, #0x8000, lsl #48
   23af4:	cmp	x0, x1
   23af8:	b.eq	23b5c <mpfr_sub1@@Base+0x130>  // b.none
   23afc:	ldr	x0, [x27, #16]
   23b00:	cmp	x0, x1
   23b04:	b.ne	23b6c <mpfr_sub1@@Base+0x140>  // b.any
   23b08:	mov	x1, x27
   23b0c:	mov	x0, x25
   23b10:	bl	cb90 <mpfr_ubf_diff_exp@plt>
   23b14:	ldr	x28, [x20]
   23b18:	str	x0, [x29, #128]
   23b1c:	ldr	x23, [x25]
   23b20:	ldr	x1, [x29, #128]
   23b24:	cmp	x28, x23
   23b28:	csel	x0, x28, x23, ge  // ge = tcont
   23b2c:	add	x0, x0, #0x1
   23b30:	cmp	x0, x1
   23b34:	b.ge	23ecc <mpfr_sub1@@Base+0x4a0>  // b.tcont
   23b38:	cmp	w19, #0x5
   23b3c:	b.ne	23b78 <mpfr_sub1@@Base+0x14c>  // b.any
   23b40:	ldr	w3, [x20, #8]
   23b44:	mov	x1, x25
   23b48:	mov	x0, x20
   23b4c:	mov	w2, #0x1                   	// #1
   23b50:	bl	c730 <mpfr_set4@plt>
   23b54:	mov	w22, w0
   23b58:	b	23a94 <mpfr_sub1@@Base+0x68>
   23b5c:	add	x0, x25, #0x20
   23b60:	bl	bcc0 <mpfr_ubf_zexp2exp@plt>
   23b64:	str	x0, [x29, #136]
   23b68:	b	23b08 <mpfr_sub1@@Base+0xdc>
   23b6c:	ldr	x1, [x29, #136]
   23b70:	sub	x0, x1, x0
   23b74:	b	23b14 <mpfr_sub1@@Base+0xe8>
   23b78:	ldr	x0, [x29, #136]
   23b7c:	cmp	x28, x23
   23b80:	ldr	x7, [x25, #24]
   23b84:	str	x0, [x20, #16]
   23b88:	sub	x0, x28, #0x1
   23b8c:	ldr	x24, [x20, #24]
   23b90:	asr	x3, x0, #6
   23b94:	sub	x0, x23, #0x1
   23b98:	asr	x0, x0, #6
   23b9c:	b.lt	23c34 <mpfr_sub1@@Base+0x208>  // b.tstop
   23ba0:	add	x2, x0, #0x1
   23ba4:	sub	x0, x3, x0
   23ba8:	lsl	x22, x0, #3
   23bac:	add	x0, x24, x0, lsl #3
   23bb0:	cmp	x0, x7
   23bb4:	b.eq	23bc4 <mpfr_sub1@@Base+0x198>  // b.none
   23bb8:	lsl	x2, x2, #3
   23bbc:	mov	x1, x7
   23bc0:	bl	ba90 <memcpy@plt>
   23bc4:	mov	x2, x22
   23bc8:	mov	x0, x24
   23bcc:	mov	w1, #0x0                   	// #0
   23bd0:	bl	c1a0 <memset@plt>
   23bd4:	cmp	w19, #0x1
   23bd8:	b.ne	23e3c <mpfr_sub1@@Base+0x410>  // b.any
   23bdc:	lsl	w0, w21, #6
   23be0:	ldr	x1, [x26]
   23be4:	sub	w28, w0, w28
   23be8:	mov	x0, #0x1                   	// #1
   23bec:	lsl	x28, x0, x28
   23bf0:	sub	x2, x1, x28
   23bf4:	str	x2, [x26]
   23bf8:	cmp	x28, x1
   23bfc:	b.hi	23e98 <mpfr_sub1@@Base+0x46c>  // b.pmore
   23c00:	lsl	x21, x21, #3
   23c04:	sub	x21, x21, #0x8
   23c08:	ldr	x0, [x26, x21]
   23c0c:	tbnz	x0, #63, 23c28 <mpfr_sub1@@Base+0x1fc>
   23c10:	ldr	x0, [x20, #16]
   23c14:	sub	x0, x0, #0x1
   23c18:	str	x0, [x20, #16]
   23c1c:	ldr	x0, [x26, x21]
   23c20:	orr	x0, x0, #0x8000000000000000
   23c24:	str	x0, [x26, x21]
   23c28:	ldr	w0, [x20, #8]
   23c2c:	neg	w22, w0
   23c30:	b	23e4c <mpfr_sub1@@Base+0x420>
   23c34:	sub	x0, x0, x3
   23c38:	neg	w5, w28
   23c3c:	add	x2, x3, #0x1
   23c40:	ands	w5, w5, #0x3f
   23c44:	lsl	x8, x0, #3
   23c48:	add	x1, x7, x0, lsl #3
   23c4c:	b.eq	23cf8 <mpfr_sub1@@Base+0x2cc>  // b.none
   23c50:	ldr	x9, [x7, x8]
   23c54:	sub	w5, w5, #0x1
   23c58:	mov	x6, #0x1                   	// #1
   23c5c:	cmp	w19, #0x0
   23c60:	lsl	x6, x6, x5
   23c64:	and	x10, x9, x6
   23c68:	sub	x6, x6, #0x1
   23c6c:	ccmp	x10, #0x0, #0x4, ne  // ne = any
   23c70:	and	x3, x6, x9
   23c74:	b.ne	23c98 <mpfr_sub1@@Base+0x26c>  // b.any
   23c78:	mov	x9, #0xfffffffffffffff8    	// #-8
   23c7c:	madd	x9, x0, x9, x1
   23c80:	cmp	x0, #0x0
   23c84:	sub	x0, x0, #0x1
   23c88:	cset	w6, ne  // ne = any
   23c8c:	cmp	x3, #0x0
   23c90:	csel	w6, w6, wzr, eq  // eq = none
   23c94:	cbnz	w6, 23cf0 <mpfr_sub1@@Base+0x2c4>
   23c98:	mov	x23, #0x2                   	// #2
   23c9c:	lsl	x23, x23, x5
   23ca0:	cbnz	w19, 23e14 <mpfr_sub1@@Base+0x3e8>
   23ca4:	cbnz	x10, 23d44 <mpfr_sub1@@Base+0x318>
   23ca8:	orr	x3, x10, x3
   23cac:	cbz	x3, 23e34 <mpfr_sub1@@Base+0x408>
   23cb0:	ldr	w0, [x20, #8]
   23cb4:	neg	w22, w0
   23cb8:	cmp	x24, x1
   23cbc:	b.eq	23ccc <mpfr_sub1@@Base+0x2a0>  // b.none
   23cc0:	lsl	x2, x2, #3
   23cc4:	mov	x0, x24
   23cc8:	bl	ba90 <memcpy@plt>
   23ccc:	ldr	x0, [x24]
   23cd0:	neg	x5, x23
   23cd4:	and	x5, x0, x5
   23cd8:	str	x5, [x24]
   23cdc:	cbz	w22, 23bd4 <mpfr_sub1@@Base+0x1a8>
   23ce0:	ldr	w0, [x20, #8]
   23ce4:	cmp	w22, w0, lsl #1
   23ce8:	b.ne	23e4c <mpfr_sub1@@Base+0x420>  // b.any
   23cec:	b	23bdc <mpfr_sub1@@Base+0x1b0>
   23cf0:	ldr	x3, [x9, x0, lsl #3]
   23cf4:	b	23c80 <mpfr_sub1@@Base+0x254>
   23cf8:	ldur	x5, [x1, #-8]
   23cfc:	cmp	w19, #0x0
   23d00:	and	x10, x5, #0x8000000000000000
   23d04:	and	x3, x5, #0x7fffffffffffffff
   23d08:	ccmp	x5, #0x0, #0x0, ne  // ne = any
   23d0c:	b.lt	23e10 <mpfr_sub1@@Base+0x3e4>  // b.tstop
   23d10:	mov	x6, #0xfffffffffffffff8    	// #-8
   23d14:	sub	x5, x0, #0x1
   23d18:	madd	x0, x0, x6, x1
   23d1c:	cmp	x5, #0x0
   23d20:	sub	x5, x5, #0x1
   23d24:	cset	w6, ne  // ne = any
   23d28:	cmp	x3, #0x0
   23d2c:	csel	w6, w6, wzr, eq  // eq = none
   23d30:	cbnz	w6, 23d3c <mpfr_sub1@@Base+0x310>
   23d34:	mov	x23, #0x1                   	// #1
   23d38:	b	23ca0 <mpfr_sub1@@Base+0x274>
   23d3c:	ldr	x3, [x0, x5, lsl #3]
   23d40:	b	23d1c <mpfr_sub1@@Base+0x2f0>
   23d44:	ldr	w0, [x20, #8]
   23d48:	ldr	x5, [x7, x8]
   23d4c:	cbnz	x3, 23d88 <mpfr_sub1@@Base+0x35c>
   23d50:	tst	x23, x5
   23d54:	b.ne	23d64 <mpfr_sub1@@Base+0x338>  // b.any
   23d58:	mov	w22, #0xfffffffe            	// #-2
   23d5c:	mul	w22, w0, w22
   23d60:	b	23cb8 <mpfr_sub1@@Base+0x28c>
   23d64:	lsl	w22, w0, #1
   23d68:	ldr	x0, [x7, x8]
   23d6c:	adds	x0, x23, x0
   23d70:	str	x0, [x24]
   23d74:	b.cs	23dc4 <mpfr_sub1@@Base+0x398>  // b.hs, b.nlast
   23d78:	cmp	x24, x1
   23d7c:	b.eq	23ccc <mpfr_sub1@@Base+0x2a0>  // b.none
   23d80:	mov	x0, #0x1                   	// #1
   23d84:	b	23e04 <mpfr_sub1@@Base+0x3d8>
   23d88:	ldr	w22, [x20, #8]
   23d8c:	b	23d68 <mpfr_sub1@@Base+0x33c>
   23d90:	ldr	x3, [x1, x0, lsl #3]
   23d94:	add	x3, x3, #0x1
   23d98:	str	x3, [x24, x0, lsl #3]
   23d9c:	add	x0, x0, #0x1
   23da0:	cbz	x3, 23dc8 <mpfr_sub1@@Base+0x39c>
   23da4:	cmp	x24, x1
   23da8:	b.eq	23ccc <mpfr_sub1@@Base+0x2a0>  // b.none
   23dac:	cmp	x2, x0
   23db0:	b.le	23ccc <mpfr_sub1@@Base+0x2a0>
   23db4:	ldr	x3, [x1, x0, lsl #3]
   23db8:	str	x3, [x24, x0, lsl #3]
   23dbc:	add	x0, x0, #0x1
   23dc0:	b	23dac <mpfr_sub1@@Base+0x380>
   23dc4:	mov	x0, #0x1                   	// #1
   23dc8:	cmp	x2, x0
   23dcc:	b.gt	23d90 <mpfr_sub1@@Base+0x364>
   23dd0:	add	x2, x24, x2, lsl #3
   23dd4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   23dd8:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
   23ddc:	stur	x0, [x2, #-8]
   23de0:	ldr	x0, [x20, #16]
   23de4:	cmp	x0, x1
   23de8:	b.eq	23ccc <mpfr_sub1@@Base+0x2a0>  // b.none
   23dec:	add	x0, x0, #0x1
   23df0:	str	x0, [x20, #16]
   23df4:	b	23ccc <mpfr_sub1@@Base+0x2a0>
   23df8:	ldr	x3, [x1, x0, lsl #3]
   23dfc:	str	x3, [x24, x0, lsl #3]
   23e00:	add	x0, x0, #0x1
   23e04:	cmp	x2, x0
   23e08:	b.gt	23df8 <mpfr_sub1@@Base+0x3cc>
   23e0c:	b	23ccc <mpfr_sub1@@Base+0x2a0>
   23e10:	mov	x23, #0x1                   	// #1
   23e14:	cmp	w19, #0x1
   23e18:	b.eq	23ca8 <mpfr_sub1@@Base+0x27c>  // b.none
   23e1c:	ldr	w0, [x20, #8]
   23e20:	add	w0, w19, w0, lsr #31
   23e24:	cmp	w0, #0x3
   23e28:	b.eq	23ca8 <mpfr_sub1@@Base+0x27c>  // b.none
   23e2c:	orr	x3, x10, x3
   23e30:	cbnz	x3, 23d88 <mpfr_sub1@@Base+0x35c>
   23e34:	mov	w22, #0x0                   	// #0
   23e38:	b	23cb8 <mpfr_sub1@@Base+0x28c>
   23e3c:	ldr	w22, [x20, #8]
   23e40:	add	w0, w19, w22, lsr #31
   23e44:	cmp	w0, #0x3
   23e48:	b.eq	23bdc <mpfr_sub1@@Base+0x1b0>  // b.none
   23e4c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   23e50:	ldr	x1, [x0, #2560]
   23e54:	add	x0, x0, #0xa00
   23e58:	blr	x1
   23e5c:	mrs	x1, tpidr_el0
   23e60:	ldr	x2, [x20, #16]
   23e64:	ldr	x0, [x1, x0]
   23e68:	cmp	x2, x0
   23e6c:	b.le	23ea4 <mpfr_sub1@@Base+0x478>
   23e70:	ldr	w2, [x20, #8]
   23e74:	mov	w1, w19
   23e78:	mov	x0, x20
   23e7c:	bl	bfc0 <mpfr_overflow@plt>
   23e80:	b	23b54 <mpfr_sub1@@Base+0x128>
   23e84:	ldr	x1, [x26, x0, lsl #3]
   23e88:	sub	x2, x1, #0x1
   23e8c:	str	x2, [x26, x0, lsl #3]
   23e90:	add	x0, x0, #0x1
   23e94:	cbnz	x1, 23c00 <mpfr_sub1@@Base+0x1d4>
   23e98:	cmp	x21, x0
   23e9c:	b.gt	23e84 <mpfr_sub1@@Base+0x458>
   23ea0:	b	23c00 <mpfr_sub1@@Base+0x1d4>
   23ea4:	cbz	w22, 23a94 <mpfr_sub1@@Base+0x68>
   23ea8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   23eac:	ldr	x2, [x0, #2592]
   23eb0:	add	x0, x0, #0xa20
   23eb4:	blr	x2
   23eb8:	add	x0, x1, x0
   23ebc:	ldr	w1, [x0]
   23ec0:	orr	w1, w1, #0x8
   23ec4:	str	w1, [x0]
   23ec8:	b	23a94 <mpfr_sub1@@Base+0x68>
   23ecc:	ldr	x0, [x29, #144]
   23ed0:	sub	x23, x23, #0x1
   23ed4:	neg	w3, w0
   23ed8:	asr	x23, x23, #6
   23edc:	and	x2, x3, #0x3f
   23ee0:	add	x24, x23, #0x1
   23ee4:	add	x2, x2, x0
   23ee8:	mov	x0, #0x40                  	// #64
   23eec:	ands	w3, w3, #0x3f
   23ef0:	sdiv	x0, x2, x0
   23ef4:	str	x0, [x29, #120]
   23ef8:	b.ne	240cc <mpfr_sub1@@Base+0x6a0>  // b.any
   23efc:	ldr	x22, [x25, #24]
   23f00:	cmp	x26, x22
   23f04:	b.ne	23f3c <mpfr_sub1@@Base+0x510>  // b.any
   23f08:	lsl	x23, x24, #3
   23f0c:	cmp	x23, #0x4, lsl #12
   23f10:	b.hi	240b8 <mpfr_sub1@@Base+0x68c>  // b.pmore
   23f14:	add	x0, x23, #0xf
   23f18:	and	x0, x0, #0xfffffffffffffff0
   23f1c:	sub	sp, sp, x0
   23f20:	mov	x22, sp
   23f24:	cmp	x22, x26
   23f28:	b.eq	23f3c <mpfr_sub1@@Base+0x510>  // b.none
   23f2c:	mov	x2, x23
   23f30:	mov	x1, x26
   23f34:	mov	x0, x22
   23f38:	bl	ba90 <memcpy@plt>
   23f3c:	ldr	x0, [x27]
   23f40:	ldr	x3, [x29, #144]
   23f44:	sub	x0, x0, #0x1
   23f48:	ldr	w1, [x29, #128]
   23f4c:	asr	x0, x0, #6
   23f50:	sub	w3, w1, w3
   23f54:	add	x25, x0, #0x1
   23f58:	ands	w3, w3, #0x3f
   23f5c:	b.ne	24134 <mpfr_sub1@@Base+0x708>  // b.any
   23f60:	ldr	x23, [x27, #24]
   23f64:	cmp	x26, x23
   23f68:	b.ne	23f98 <mpfr_sub1@@Base+0x56c>  // b.any
   23f6c:	lsl	x27, x25, #3
   23f70:	cmp	x27, #0x4, lsl #12
   23f74:	b.hi	24120 <mpfr_sub1@@Base+0x6f4>  // b.pmore
   23f78:	add	x0, x27, #0xf
   23f7c:	and	x0, x0, #0xfffffffffffffff0
   23f80:	sub	sp, sp, x0
   23f84:	mov	x23, sp
   23f88:	mov	x2, x27
   23f8c:	mov	x1, x26
   23f90:	mov	x0, x23
   23f94:	bl	ba90 <memcpy@plt>
   23f98:	ldr	x1, [x29, #128]
   23f9c:	ldr	x0, [x29, #144]
   23fa0:	ldr	x2, [x29, #128]
   23fa4:	cmp	x0, x1
   23fa8:	mov	x1, #0x40                  	// #64
   23fac:	b.lt	2418c <mpfr_sub1@@Base+0x760>  // b.tstop
   23fb0:	sub	x0, x0, x2
   23fb4:	add	x0, x0, #0x3f
   23fb8:	sdiv	x27, x0, x1
   23fbc:	ldr	x0, [x29, #120]
   23fc0:	add	x0, x21, x0
   23fc4:	str	x0, [x29, #128]
   23fc8:	cmp	x0, x24
   23fcc:	b.gt	2419c <mpfr_sub1@@Base+0x770>
   23fd0:	sub	x1, x24, x0
   23fd4:	add	x1, x22, x1, lsl #3
   23fd8:	cmp	x1, x26
   23fdc:	b.eq	23fec <mpfr_sub1@@Base+0x5c0>  // b.none
   23fe0:	lsl	x2, x21, #3
   23fe4:	mov	x0, x26
   23fe8:	bl	ba90 <memcpy@plt>
   23fec:	add	x5, x27, x21
   23ff0:	cmp	x5, #0x0
   23ff4:	b.le	24024 <mpfr_sub1@@Base+0x5f8>
   23ff8:	tbnz	x27, #63, 24224 <mpfr_sub1@@Base+0x7f8>
   23ffc:	cmp	x5, x25
   24000:	b.gt	241fc <mpfr_sub1@@Base+0x7d0>
   24004:	sub	x2, x25, x5
   24008:	mov	x3, x21
   2400c:	mov	x1, x26
   24010:	mov	x0, x26
   24014:	add	x2, x23, x2, lsl #3
   24018:	str	x5, [x29, #120]
   2401c:	bl	bee0 <__gmpn_sub_n@plt>
   24020:	ldr	x5, [x29, #120]
   24024:	lsl	w0, w21, #6
   24028:	ldr	x6, [x26]
   2402c:	sub	w28, w0, w28
   24030:	mov	x0, #0xffffffffffffffff    	// #-1
   24034:	cmp	w19, #0x5
   24038:	lsl	x2, x0, x28
   2403c:	bic	x1, x6, x2
   24040:	and	x6, x6, x2
   24044:	str	x6, [x26]
   24048:	b.eq	2457c <mpfr_sub1@@Base+0xb50>  // b.none
   2404c:	cbnz	w19, 242b4 <mpfr_sub1@@Base+0x888>
   24050:	cbz	w28, 242dc <mpfr_sub1@@Base+0x8b0>
   24054:	sub	w3, w28, #0x1
   24058:	mov	x2, #0x1                   	// #1
   2405c:	lsl	x2, x2, x3
   24060:	cmp	x2, x1
   24064:	b.cc	243b4 <mpfr_sub1@@Base+0x988>  // b.lo, b.ul, b.last
   24068:	cbz	x1, 242dc <mpfr_sub1@@Base+0x8b0>
   2406c:	b.hi	242d0 <mpfr_sub1@@Base+0x8a4>  // b.pmore
   24070:	mov	w0, #0x2                   	// #2
   24074:	ldr	x1, [x29, #128]
   24078:	orr	w9, w19, w28
   2407c:	sub	x3, x25, x5
   24080:	mov	w8, #0x0                   	// #0
   24084:	sub	x24, x24, x1
   24088:	mov	x5, #0x8000000000000000    	// #-9223372036854775808
   2408c:	cmp	x24, #0x0
   24090:	ccmp	x3, #0x0, #0x0, le
   24094:	b.gt	242e4 <mpfr_sub1@@Base+0x8b8>
   24098:	cmp	w19, #0x0
   2409c:	ccmp	w0, #0x0, #0x4, eq  // eq = none
   240a0:	b.eq	2457c <mpfr_sub1@@Base+0xb50>  // b.none
   240a4:	lsr	x1, x6, x28
   240a8:	tbz	w1, #0, 244e8 <mpfr_sub1@@Base+0xabc>
   240ac:	tbnz	w0, #31, 24500 <mpfr_sub1@@Base+0xad4>
   240b0:	mov	w19, #0x0                   	// #0
   240b4:	b	243b4 <mpfr_sub1@@Base+0x988>
   240b8:	mov	x1, x23
   240bc:	add	x0, x29, #0x98
   240c0:	bl	be40 <mpfr_tmp_allocate@plt>
   240c4:	mov	x22, x0
   240c8:	b	23f24 <mpfr_sub1@@Base+0x4f8>
   240cc:	add	x23, x23, #0x2
   240d0:	lsl	x1, x23, #3
   240d4:	cmp	x1, #0x4, lsl #12
   240d8:	b.hi	24108 <mpfr_sub1@@Base+0x6dc>  // b.pmore
   240dc:	add	x1, x1, #0xf
   240e0:	and	x1, x1, #0xfffffffffffffff0
   240e4:	sub	sp, sp, x1
   240e8:	mov	x22, sp
   240ec:	ldr	x1, [x25, #24]
   240f0:	mov	x2, x24
   240f4:	add	x0, x22, #0x8
   240f8:	mov	x24, x23
   240fc:	bl	bd60 <__gmpn_rshift@plt>
   24100:	str	x0, [x22]
   24104:	b	23f3c <mpfr_sub1@@Base+0x510>
   24108:	add	x0, x29, #0x98
   2410c:	str	w3, [x29, #112]
   24110:	bl	be40 <mpfr_tmp_allocate@plt>
   24114:	mov	x22, x0
   24118:	ldr	w3, [x29, #112]
   2411c:	b	240ec <mpfr_sub1@@Base+0x6c0>
   24120:	mov	x1, x27
   24124:	add	x0, x29, #0x98
   24128:	bl	be40 <mpfr_tmp_allocate@plt>
   2412c:	mov	x23, x0
   24130:	b	23f88 <mpfr_sub1@@Base+0x55c>
   24134:	add	x0, x0, #0x2
   24138:	str	x0, [x29, #112]
   2413c:	lsl	x1, x0, #3
   24140:	cmp	x1, #0x4, lsl #12
   24144:	b.hi	24174 <mpfr_sub1@@Base+0x748>  // b.pmore
   24148:	add	x1, x1, #0xf
   2414c:	and	x1, x1, #0xfffffffffffffff0
   24150:	sub	sp, sp, x1
   24154:	mov	x23, sp
   24158:	ldr	x1, [x27, #24]
   2415c:	mov	x2, x25
   24160:	add	x0, x23, #0x8
   24164:	bl	bd60 <__gmpn_rshift@plt>
   24168:	str	x0, [x23]
   2416c:	ldr	x25, [x29, #112]
   24170:	b	23f98 <mpfr_sub1@@Base+0x56c>
   24174:	add	x0, x29, #0x98
   24178:	str	w3, [x29, #108]
   2417c:	bl	be40 <mpfr_tmp_allocate@plt>
   24180:	mov	x23, x0
   24184:	ldr	w3, [x29, #108]
   24188:	b	24158 <mpfr_sub1@@Base+0x72c>
   2418c:	sub	x27, x2, x0
   24190:	sdiv	x27, x27, x1
   24194:	neg	x27, x27
   24198:	b	23fbc <mpfr_sub1@@Base+0x590>
   2419c:	ldr	x0, [x29, #120]
   241a0:	cmp	x24, x0
   241a4:	b.le	241e8 <mpfr_sub1@@Base+0x7bc>
   241a8:	ldr	x0, [x29, #128]
   241ac:	mov	w1, #0x0                   	// #0
   241b0:	sub	x2, x0, x24
   241b4:	mov	x0, x26
   241b8:	lsl	x2, x2, #3
   241bc:	str	x2, [x29, #112]
   241c0:	bl	c1a0 <memset@plt>
   241c4:	ldr	x2, [x29, #112]
   241c8:	add	x0, x26, x2
   241cc:	cmp	x0, x22
   241d0:	b.eq	23fec <mpfr_sub1@@Base+0x5c0>  // b.none
   241d4:	ldr	x1, [x29, #120]
   241d8:	sub	x2, x24, x1
   241dc:	mov	x1, x22
   241e0:	lsl	x2, x2, #3
   241e4:	b	23fe8 <mpfr_sub1@@Base+0x5bc>
   241e8:	lsl	x2, x21, #3
   241ec:	mov	x0, x26
   241f0:	mov	w1, #0x0                   	// #0
   241f4:	bl	c1a0 <memset@plt>
   241f8:	b	23fec <mpfr_sub1@@Base+0x5c0>
   241fc:	cmp	x27, x25
   24200:	b.ge	24024 <mpfr_sub1@@Base+0x5f8>  // b.tcont
   24204:	sub	x1, x27, x25
   24208:	sub	x3, x25, x27
   2420c:	add	x1, x1, x21
   24210:	mov	x2, x23
   24214:	str	x5, [x29, #120]
   24218:	add	x1, x26, x1, lsl #3
   2421c:	mov	x0, x1
   24220:	b	2401c <mpfr_sub1@@Base+0x5f0>
   24224:	cmp	x5, x25
   24228:	b.gt	24274 <mpfr_sub1@@Base+0x848>
   2422c:	sub	x2, x25, x5
   24230:	mov	x3, x5
   24234:	mov	x1, x26
   24238:	mov	x0, x26
   2423c:	add	x2, x23, x2, lsl #3
   24240:	str	x5, [x29, #120]
   24244:	bl	bee0 <__gmpn_sub_n@plt>
   24248:	ldr	x5, [x29, #120]
   2424c:	lsl	x3, x5, #3
   24250:	add	x1, x26, x5, lsl #3
   24254:	ldr	x2, [x26, x3]
   24258:	sub	x6, x2, x0
   2425c:	str	x6, [x26, x3]
   24260:	cmp	x0, x2
   24264:	b.ls	24024 <mpfr_sub1@@Base+0x5f8>  // b.plast
   24268:	neg	x27, x27
   2426c:	mov	x0, #0x1                   	// #1
   24270:	b	242a8 <mpfr_sub1@@Base+0x87c>
   24274:	sub	x1, x21, x25
   24278:	mov	x3, x25
   2427c:	add	x1, x1, x27
   24280:	mov	x2, x23
   24284:	str	x5, [x29, #120]
   24288:	add	x1, x26, x1, lsl #3
   2428c:	mov	x0, x1
   24290:	b	24244 <mpfr_sub1@@Base+0x818>
   24294:	ldr	x2, [x1, x0, lsl #3]
   24298:	sub	x3, x2, #0x1
   2429c:	str	x3, [x1, x0, lsl #3]
   242a0:	add	x0, x0, #0x1
   242a4:	cbnz	x2, 24024 <mpfr_sub1@@Base+0x5f8>
   242a8:	cmp	x27, x0
   242ac:	b.gt	24294 <mpfr_sub1@@Base+0x868>
   242b0:	b	24024 <mpfr_sub1@@Base+0x5f8>
   242b4:	ldr	w2, [x20, #8]
   242b8:	add	w2, w19, w2, lsr #31
   242bc:	cmp	w2, #0x3
   242c0:	b.eq	24648 <mpfr_sub1@@Base+0xc1c>  // b.none
   242c4:	cbz	x1, 242dc <mpfr_sub1@@Base+0x8b0>
   242c8:	cmp	w19, #0x1
   242cc:	b.ne	243b4 <mpfr_sub1@@Base+0x988>  // b.any
   242d0:	mov	x23, #0x0                   	// #0
   242d4:	mov	w22, #0xffffffff            	// #-1
   242d8:	b	243cc <mpfr_sub1@@Base+0x9a0>
   242dc:	mov	w0, #0x0                   	// #0
   242e0:	b	24074 <mpfr_sub1@@Base+0x648>
   242e4:	cmp	x24, #0x0
   242e8:	b.le	24354 <mpfr_sub1@@Base+0x928>
   242ec:	sub	x24, x24, #0x1
   242f0:	cmp	x3, #0x0
   242f4:	ldr	x2, [x22, x24, lsl #3]
   242f8:	b.le	24630 <mpfr_sub1@@Base+0xc04>
   242fc:	sub	x7, x3, #0x1
   24300:	cmp	x3, x25
   24304:	b.gt	24634 <mpfr_sub1@@Base+0xc08>
   24308:	ldr	x1, [x23, x7, lsl #3]
   2430c:	cbnz	w0, 2431c <mpfr_sub1@@Base+0x8f0>
   24310:	cmp	x2, x1
   24314:	b.cs	2463c <mpfr_sub1@@Base+0xc10>  // b.hs, b.nlast
   24318:	sub	w0, w8, #0x2
   2431c:	cbnz	w9, 24384 <mpfr_sub1@@Base+0x958>
   24320:	cbnz	w8, 24658 <mpfr_sub1@@Base+0xc2c>
   24324:	tbz	w0, #31, 24364 <mpfr_sub1@@Base+0x938>
   24328:	tbz	x1, #63, 2435c <mpfr_sub1@@Base+0x930>
   2432c:	add	x1, x1, x5
   24330:	cmp	w28, #0x0
   24334:	ccmp	x2, x1, #0x2, le
   24338:	b.hi	24570 <mpfr_sub1@@Base+0xb44>  // b.pmore
   2433c:	cmn	w0, #0x1
   24340:	b.eq	24570 <mpfr_sub1@@Base+0xb44>  // b.none
   24344:	cmp	x2, x1
   24348:	b.cc	24500 <mpfr_sub1@@Base+0xad4>  // b.lo, b.ul, b.last
   2434c:	mov	w0, #0xfffffffe            	// #-2
   24350:	b	24370 <mpfr_sub1@@Base+0x944>
   24354:	mov	x2, #0x0                   	// #0
   24358:	b	242fc <mpfr_sub1@@Base+0x8d0>
   2435c:	add	x2, x2, x5
   24360:	b	24330 <mpfr_sub1@@Base+0x904>
   24364:	tbnz	x1, #63, 2437c <mpfr_sub1@@Base+0x950>
   24368:	add	x1, x1, x5
   2436c:	cbnz	w0, 244c0 <mpfr_sub1@@Base+0xa94>
   24370:	mov	x3, x7
   24374:	mov	w8, #0x1                   	// #1
   24378:	b	2408c <mpfr_sub1@@Base+0x660>
   2437c:	add	x2, x2, x5
   24380:	b	2436c <mpfr_sub1@@Base+0x940>
   24384:	cmp	w0, #0x0
   24388:	b.ge	243a4 <mpfr_sub1@@Base+0x978>  // b.tcont
   2438c:	cmp	w19, #0x1
   24390:	b.eq	24500 <mpfr_sub1@@Base+0xad4>  // b.none
   24394:	cbz	w19, 24330 <mpfr_sub1@@Base+0x904>
   24398:	mov	x23, #0x0                   	// #0
   2439c:	mov	w22, #0x1                   	// #1
   243a0:	b	243cc <mpfr_sub1@@Base+0x9a0>
   243a4:	b.eq	24370 <mpfr_sub1@@Base+0x944>  // b.none
   243a8:	cmp	w19, #0x1
   243ac:	b.eq	242d0 <mpfr_sub1@@Base+0x8a4>  // b.none
   243b0:	cbz	w19, 244c4 <mpfr_sub1@@Base+0xa98>
   243b4:	mov	x22, #0x1                   	// #1
   243b8:	lsl	x28, x22, x28
   243bc:	adds	x28, x6, x28
   243c0:	str	x28, [x26]
   243c4:	b.cs	24554 <mpfr_sub1@@Base+0xb28>  // b.hs, b.nlast
   243c8:	mov	x23, #0x0                   	// #0
   243cc:	lsl	x21, x21, #3
   243d0:	sub	x21, x21, #0x8
   243d4:	ldr	x0, [x26, x21]
   243d8:	tbnz	x0, #63, 243e8 <mpfr_sub1@@Base+0x9bc>
   243dc:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   243e0:	mov	x23, #0x1                   	// #1
   243e4:	str	x0, [x26, x21]
   243e8:	ldr	x0, [x29, #152]
   243ec:	cbz	x0, 243f4 <mpfr_sub1@@Base+0x9c8>
   243f0:	bl	c4a0 <mpfr_tmp_free@plt>
   243f4:	ldr	x0, [x29, #144]
   243f8:	mrs	x21, tpidr_el0
   243fc:	cbz	x0, 245e4 <mpfr_sub1@@Base+0xbb8>
   24400:	sub	x23, x0, x23
   24404:	str	x23, [x29, #144]
   24408:	ldr	x0, [x29, #136]
   2440c:	ldr	x1, [x29, #136]
   24410:	sub	x23, x0, x23
   24414:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   24418:	cmp	x1, x0
   2441c:	b.ne	24454 <mpfr_sub1@@Base+0xa28>  // b.any
   24420:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   24424:	ldr	x1, [x0, #2560]
   24428:	add	x0, x0, #0xa00
   2442c:	blr	x1
   24430:	ldr	x0, [x21, x0]
   24434:	cmp	x0, x23
   24438:	b.lt	24454 <mpfr_sub1@@Base+0xa28>  // b.tstop
   2443c:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   24440:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   24444:	add	x2, x2, #0x238
   24448:	add	x0, x0, #0x26f
   2444c:	mov	w1, #0x298                 	// #664
   24450:	bl	cbd0 <mpfr_assert_fail@plt>
   24454:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   24458:	ldr	x1, [x0, #2528]
   2445c:	add	x0, x0, #0x9e0
   24460:	blr	x1
   24464:	ldr	x0, [x21, x0]
   24468:	cmp	x0, x23
   2446c:	b.le	245a0 <mpfr_sub1@@Base+0xb74>
   24470:	cbnz	w19, 244ac <mpfr_sub1@@Base+0xa80>
   24474:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   24478:	ldr	x1, [x0, #2528]
   2447c:	add	x0, x0, #0x9e0
   24480:	blr	x1
   24484:	ldr	x0, [x21, x0]
   24488:	sub	x0, x0, #0x1
   2448c:	cmp	x0, x23
   24490:	b.gt	24598 <mpfr_sub1@@Base+0xb6c>
   24494:	cmn	w22, #0x1
   24498:	b.eq	244ac <mpfr_sub1@@Base+0xa80>  // b.none
   2449c:	mov	x0, x20
   244a0:	bl	bf80 <mpfr_powerof2_raw@plt>
   244a4:	cmp	w0, #0x0
   244a8:	cset	w19, ne  // ne = any
   244ac:	ldr	w2, [x20, #8]
   244b0:	mov	w1, w19
   244b4:	mov	x0, x20
   244b8:	bl	c450 <mpfr_underflow@plt>
   244bc:	b	23b54 <mpfr_sub1@@Base+0x128>
   244c0:	mov	w0, #0x2                   	// #2
   244c4:	cmp	x2, x1
   244c8:	b.ls	244e0 <mpfr_sub1@@Base+0xab4>  // b.plast
   244cc:	cmp	w0, #0x2
   244d0:	b.eq	240b0 <mpfr_sub1@@Base+0x684>  // b.none
   244d4:	mov	x23, #0x0                   	// #0
   244d8:	mov	w22, #0xffffffff            	// #-1
   244dc:	b	244f8 <mpfr_sub1@@Base+0xacc>
   244e0:	b.cs	24370 <mpfr_sub1@@Base+0x944>  // b.hs, b.nlast
   244e4:	b	244d4 <mpfr_sub1@@Base+0xaa8>
   244e8:	cmp	w0, #0x0
   244ec:	mov	w22, #0xffffffff            	// #-1
   244f0:	csinc	w22, w22, wzr, gt
   244f4:	mov	x23, #0x0                   	// #0
   244f8:	mov	w19, #0x0                   	// #0
   244fc:	b	243cc <mpfr_sub1@@Base+0x9a0>
   24500:	mov	x0, #0x1                   	// #1
   24504:	lsl	x28, x0, x28
   24508:	subs	x1, x6, x28
   2450c:	str	x1, [x26]
   24510:	b.cc	24534 <mpfr_sub1@@Base+0xb08>  // b.lo, b.ul, b.last
   24514:	mov	x23, #0x0                   	// #0
   24518:	mov	w22, #0xffffffff            	// #-1
   2451c:	b	243e8 <mpfr_sub1@@Base+0x9bc>
   24520:	ldr	x1, [x26, x0, lsl #3]
   24524:	sub	x2, x1, #0x1
   24528:	str	x2, [x26, x0, lsl #3]
   2452c:	add	x0, x0, #0x1
   24530:	cbnz	x1, 24514 <mpfr_sub1@@Base+0xae8>
   24534:	cmp	x21, x0
   24538:	b.gt	24520 <mpfr_sub1@@Base+0xaf4>
   2453c:	b	24514 <mpfr_sub1@@Base+0xae8>
   24540:	ldr	x0, [x26, x22, lsl #3]
   24544:	add	x0, x0, #0x1
   24548:	str	x0, [x26, x22, lsl #3]
   2454c:	add	x22, x22, #0x1
   24550:	cbnz	x0, 24398 <mpfr_sub1@@Base+0x96c>
   24554:	cmp	x21, x22
   24558:	b.gt	24540 <mpfr_sub1@@Base+0xb14>
   2455c:	add	x0, x26, x21, lsl #3
   24560:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   24564:	mov	x23, #0x1                   	// #1
   24568:	stur	x1, [x0, #-8]
   2456c:	b	2439c <mpfr_sub1@@Base+0x970>
   24570:	mov	x23, #0x0                   	// #0
   24574:	mov	w22, #0x1                   	// #1
   24578:	b	244f8 <mpfr_sub1@@Base+0xacc>
   2457c:	mov	x23, #0x0                   	// #0
   24580:	mov	w22, #0x0                   	// #0
   24584:	b	243cc <mpfr_sub1@@Base+0x9a0>
   24588:	mov	w22, w0
   2458c:	mov	x23, #0x0                   	// #0
   24590:	mov	w19, #0x1                   	// #1
   24594:	b	243cc <mpfr_sub1@@Base+0x9a0>
   24598:	mov	w19, #0x1                   	// #1
   2459c:	b	244ac <mpfr_sub1@@Base+0xa80>
   245a0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   245a4:	ldr	x1, [x0, #2560]
   245a8:	add	x0, x0, #0xa00
   245ac:	blr	x1
   245b0:	ldr	x0, [x21, x0]
   245b4:	cmp	x0, x23
   245b8:	b.lt	23e70 <mpfr_sub1@@Base+0x444>  // b.tstop
   245bc:	ldr	w0, [x20, #8]
   245c0:	str	x23, [x20, #16]
   245c4:	mul	w22, w22, w0
   245c8:	cbz	w22, 23a94 <mpfr_sub1@@Base+0x68>
   245cc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   245d0:	ldr	x1, [x0, #2592]
   245d4:	add	x0, x0, #0xa20
   245d8:	blr	x1
   245dc:	add	x0, x21, x0
   245e0:	b	23ebc <mpfr_sub1@@Base+0x490>
   245e4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   245e8:	ldr	x1, [x0, #2560]
   245ec:	add	x0, x0, #0xa00
   245f0:	blr	x1
   245f4:	ldr	x0, [x21, x0]
   245f8:	ldr	x1, [x29, #136]
   245fc:	sub	x0, x0, x23
   24600:	cmp	x0, x1
   24604:	b.lt	23e70 <mpfr_sub1@@Base+0x444>  // b.tstop
   24608:	ldr	x0, [x29, #136]
   2460c:	add	x23, x23, x0
   24610:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   24614:	ldr	x1, [x0, #2528]
   24618:	add	x0, x0, #0x9e0
   2461c:	blr	x1
   24620:	ldr	x0, [x21, x0]
   24624:	cmp	x0, x23
   24628:	b.le	245bc <mpfr_sub1@@Base+0xb90>
   2462c:	b	24470 <mpfr_sub1@@Base+0xa44>
   24630:	mov	x7, x3
   24634:	mov	x1, #0x0                   	// #0
   24638:	cbnz	w0, 2431c <mpfr_sub1@@Base+0x8f0>
   2463c:	cmp	x2, x1
   24640:	cset	w0, hi  // hi = pmore
   24644:	b	2431c <mpfr_sub1@@Base+0x8f0>
   24648:	cbnz	x1, 24588 <mpfr_sub1@@Base+0xb5c>
   2464c:	mov	w0, #0x0                   	// #0
   24650:	mov	w19, #0x1                   	// #1
   24654:	b	24074 <mpfr_sub1@@Base+0x648>
   24658:	cmp	w0, #0x0
   2465c:	b.lt	24330 <mpfr_sub1@@Base+0x904>  // b.tstop
   24660:	b.ne	244c4 <mpfr_sub1@@Base+0xa98>  // b.any
   24664:	b	24370 <mpfr_sub1@@Base+0x944>

0000000000024668 <mpfr_sub_ui@@Base>:
   24668:	stp	x29, x30, [sp, #-128]!
   2466c:	mov	x4, x1
   24670:	mov	x29, sp
   24674:	stp	x19, x20, [sp, #16]
   24678:	stp	x21, x22, [sp, #32]
   2467c:	mov	w21, w3
   24680:	stp	x23, x24, [sp, #48]
   24684:	stp	x25, x26, [sp, #64]
   24688:	cbnz	x2, 246b0 <mpfr_sub_ui@@Base+0x48>
   2468c:	mov	w2, w3
   24690:	ldr	w3, [x1, #8]
   24694:	bl	c730 <mpfr_set4@plt>
   24698:	ldp	x19, x20, [sp, #16]
   2469c:	ldp	x21, x22, [sp, #32]
   246a0:	ldp	x23, x24, [sp, #48]
   246a4:	ldp	x25, x26, [sp, #64]
   246a8:	ldp	x29, x30, [sp], #128
   246ac:	ret
   246b0:	mov	x19, x0
   246b4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   246b8:	ldr	x0, [x4, #16]
   246bc:	cmp	x0, x1
   246c0:	b.gt	2471c <mpfr_sub_ui@@Base+0xb4>
   246c4:	mov	x3, #0x2                   	// #2
   246c8:	movk	x3, #0x8000, lsl #48
   246cc:	cmp	x0, x3
   246d0:	b.ne	24704 <mpfr_sub_ui@@Base+0x9c>  // b.any
   246d4:	str	x0, [x19, #16]
   246d8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   246dc:	ldr	x1, [x0, #2592]
   246e0:	add	x0, x0, #0xa20
   246e4:	blr	x1
   246e8:	mrs	x1, tpidr_el0
   246ec:	add	x0, x1, x0
   246f0:	ldr	w1, [x0]
   246f4:	orr	w1, w1, #0x4
   246f8:	str	w1, [x0]
   246fc:	mov	w0, #0x0                   	// #0
   24700:	b	24698 <mpfr_sub_ui@@Base+0x30>
   24704:	cmp	x0, x1
   24708:	b.ne	2471c <mpfr_sub_ui@@Base+0xb4>  // b.any
   2470c:	str	x0, [x19, #16]
   24710:	ldr	w0, [x4, #8]
   24714:	str	w0, [x19, #8]
   24718:	b	246fc <mpfr_sub_ui@@Base+0x94>
   2471c:	clz	x3, x2
   24720:	add	x0, sp, #0x58
   24724:	str	x0, [sp, #120]
   24728:	mov	w0, #0x1                   	// #1
   2472c:	lsl	x2, x2, x3
   24730:	mov	x1, #0x40                  	// #64
   24734:	stp	x2, x1, [sp, #88]
   24738:	sub	w1, w1, w3
   2473c:	mov	w3, w21
   24740:	str	w0, [sp, #104]
   24744:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   24748:	ldr	x2, [x0, #2592]
   2474c:	add	x0, x0, #0xa20
   24750:	blr	x2
   24754:	mrs	x2, tpidr_el0
   24758:	sxtw	x1, w1
   2475c:	add	x22, x2, x0
   24760:	str	x1, [sp, #112]
   24764:	mov	x1, x4
   24768:	ldr	w20, [x2, x0]
   2476c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   24770:	ldr	x5, [x0, #2528]
   24774:	add	x0, x0, #0x9e0
   24778:	blr	x5
   2477c:	add	x26, x2, x0
   24780:	ldr	x24, [x2, x0]
   24784:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   24788:	ldr	x5, [x0, #2560]
   2478c:	add	x0, x0, #0xa00
   24790:	blr	x5
   24794:	add	x25, x2, x0
   24798:	ldr	x23, [x2, x0]
   2479c:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   247a0:	str	x0, [x26]
   247a4:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   247a8:	add	x2, sp, #0x60
   247ac:	str	x0, [x25]
   247b0:	mov	x0, x19
   247b4:	bl	bbf0 <mpfr_sub@plt>
   247b8:	ldr	w1, [x22]
   247bc:	ldr	x2, [x19, #16]
   247c0:	orr	w1, w20, w1
   247c4:	str	x23, [x25]
   247c8:	str	w1, [x22]
   247cc:	cmp	x24, x2
   247d0:	str	x24, [x26]
   247d4:	b.gt	247f0 <mpfr_sub_ui@@Base+0x188>
   247d8:	cmp	x23, x2
   247dc:	b.lt	247f0 <mpfr_sub_ui@@Base+0x188>  // b.tstop
   247e0:	cbz	w0, 24698 <mpfr_sub_ui@@Base+0x30>
   247e4:	orr	w1, w1, #0x8
   247e8:	str	w1, [x22]
   247ec:	b	24698 <mpfr_sub_ui@@Base+0x30>
   247f0:	mov	w1, w0
   247f4:	mov	w2, w21
   247f8:	mov	x0, x19
   247fc:	bl	cbc0 <mpfr_check_range@plt>
   24800:	b	24698 <mpfr_sub_ui@@Base+0x30>

0000000000024804 <mpfr_rint@@Base>:
   24804:	stp	x29, x30, [sp, #-128]!
   24808:	mov	x29, sp
   2480c:	stp	x23, x24, [sp, #48]
   24810:	ldr	x23, [x1, #16]
   24814:	stp	x19, x20, [sp, #16]
   24818:	stp	x21, x22, [sp, #32]
   2481c:	stp	x25, x26, [sp, #64]
   24820:	mov	x26, x0
   24824:	mov	x0, x1
   24828:	stp	x27, x28, [sp, #80]
   2482c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   24830:	cmp	x23, x1
   24834:	b.gt	248b8 <mpfr_rint@@Base+0xb4>
   24838:	mov	x2, #0x2                   	// #2
   2483c:	movk	x2, #0x8000, lsl #48
   24840:	cmp	x23, x2
   24844:	b.ne	24894 <mpfr_rint@@Base+0x90>  // b.any
   24848:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2484c:	ldr	x1, [x0, #2592]
   24850:	add	x0, x0, #0xa20
   24854:	blr	x1
   24858:	str	x23, [x26, #16]
   2485c:	mrs	x1, tpidr_el0
   24860:	add	x0, x1, x0
   24864:	ldr	w1, [x0]
   24868:	orr	w1, w1, #0x4
   2486c:	str	w1, [x0]
   24870:	mov	w21, #0x0                   	// #0
   24874:	mov	w0, w21
   24878:	ldp	x19, x20, [sp, #16]
   2487c:	ldp	x21, x22, [sp, #32]
   24880:	ldp	x23, x24, [sp, #48]
   24884:	ldp	x25, x26, [sp, #64]
   24888:	ldp	x27, x28, [sp, #80]
   2488c:	ldp	x29, x30, [sp], #128
   24890:	ret
   24894:	ldr	w0, [x0, #8]
   24898:	cmp	x23, x1
   2489c:	str	w0, [x26, #8]
   248a0:	b.ne	248ac <mpfr_rint@@Base+0xa8>  // b.any
   248a4:	str	x23, [x26, #16]
   248a8:	b	24870 <mpfr_rint@@Base+0x6c>
   248ac:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   248b0:	str	x0, [x26, #16]
   248b4:	b	24870 <mpfr_rint@@Base+0x6c>
   248b8:	ldr	w24, [x0, #8]
   248bc:	mov	w27, w2
   248c0:	str	w24, [x26, #8]
   248c4:	cmp	w2, #0x3
   248c8:	b.ne	24924 <mpfr_rint@@Base+0x120>  // b.any
   248cc:	lsr	w20, w24, #31
   248d0:	cmp	x23, #0x0
   248d4:	b.gt	24954 <mpfr_rint@@Base+0x150>
   248d8:	cbz	w20, 24b58 <mpfr_rint@@Base+0x354>
   248dc:	sxtw	x1, w24
   248e0:	mov	w3, w27
   248e4:	mov	x0, x26
   248e8:	mov	x2, #0x0                   	// #0
   248ec:	bl	bb00 <mpfr_set_si_2exp@plt>
   248f0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   248f4:	ldr	x1, [x0, #2592]
   248f8:	add	x0, x0, #0xa20
   248fc:	blr	x1
   24900:	mrs	x1, tpidr_el0
   24904:	cmp	w24, #0x0
   24908:	add	x0, x1, x0
   2490c:	ldr	w1, [x0]
   24910:	orr	w1, w1, #0x8
   24914:	str	w1, [x0]
   24918:	b.gt	24b8c <mpfr_rint@@Base+0x388>
   2491c:	mov	w21, #0xfffffffe            	// #-2
   24920:	b	24874 <mpfr_rint@@Base+0x70>
   24924:	cmp	w2, #0x2
   24928:	b.ne	24938 <mpfr_rint@@Base+0x134>  // b.any
   2492c:	cmp	w24, #0x0
   24930:	cset	w20, gt
   24934:	b	248d0 <mpfr_rint@@Base+0xcc>
   24938:	cmp	w2, #0x1
   2493c:	b.eq	24dbc <mpfr_rint@@Base+0x5b8>  // b.none
   24940:	cmp	w2, #0x4
   24944:	b.ne	24dcc <mpfr_rint@@Base+0x5c8>  // b.any
   24948:	cmp	x23, #0x0
   2494c:	b.le	248dc <mpfr_rint@@Base+0xd8>
   24950:	mov	w20, #0x1                   	// #1
   24954:	ldr	x1, [x0]
   24958:	sub	x3, x23, #0x1
   2495c:	ldr	x19, [x26]
   24960:	sub	x1, x1, #0x1
   24964:	ldr	x28, [x0, #24]
   24968:	sub	x2, x19, #0x1
   2496c:	asr	x1, x1, #6
   24970:	str	x23, [x26, #16]
   24974:	add	x22, x1, #0x1
   24978:	asr	x2, x2, #6
   2497c:	neg	w19, w19
   24980:	asr	x0, x3, #6
   24984:	cmp	x22, x3, asr #6
   24988:	add	x6, x2, #0x1
   2498c:	and	w19, w19, #0x3f
   24990:	ldr	x25, [x26, #24]
   24994:	b.le	24ddc <mpfr_rint@@Base+0x5d8>
   24998:	and	x7, x23, #0x3f
   2499c:	add	x4, x0, #0x1
   249a0:	mov	w3, w7
   249a4:	sub	x0, x1, x0
   249a8:	cbz	x7, 249b8 <mpfr_rint@@Base+0x1b4>
   249ac:	ldr	x5, [x28, x0, lsl #3]
   249b0:	lsl	x5, x5, x7
   249b4:	cbnz	x5, 24dec <mpfr_rint@@Base+0x5e8>
   249b8:	cmp	x0, #0x0
   249bc:	b.gt	24b94 <mpfr_rint@@Base+0x390>
   249c0:	mov	w21, #0x0                   	// #0
   249c4:	cmp	x6, x4
   249c8:	b.lt	24ba0 <mpfr_rint@@Base+0x39c>  // b.tstop
   249cc:	sub	x6, x6, x4
   249d0:	sub	x22, x22, x4
   249d4:	cmp	x28, x25
   249d8:	lsl	x7, x6, #3
   249dc:	add	x5, x25, x6, lsl #3
   249e0:	b.eq	24a18 <mpfr_rint@@Base+0x214>  // b.none
   249e4:	add	x1, x28, x22, lsl #3
   249e8:	cmp	x5, x1
   249ec:	b.eq	24a18 <mpfr_rint@@Base+0x214>  // b.none
   249f0:	lsl	x2, x4, #3
   249f4:	mov	x0, x5
   249f8:	stp	x4, x7, [sp, #96]
   249fc:	str	w3, [sp, #116]
   24a00:	str	x6, [sp, #120]
   24a04:	bl	ba90 <memcpy@plt>
   24a08:	ldp	x4, x7, [sp, #96]
   24a0c:	mov	x5, x0
   24a10:	ldr	w3, [sp, #116]
   24a14:	ldr	x6, [sp, #120]
   24a18:	cbz	w3, 24a24 <mpfr_rint@@Base+0x220>
   24a1c:	mov	w0, #0x40                  	// #64
   24a20:	sub	w3, w0, w3
   24a24:	cmp	x6, #0x0
   24a28:	ccmp	w3, w19, #0x0, eq  // eq = none
   24a2c:	b.ge	24cb8 <mpfr_rint@@Base+0x4b4>  // b.tcont
   24a30:	cbnz	w21, 24a50 <mpfr_rint@@Base+0x24c>
   24a34:	mov	x0, #0x1                   	// #1
   24a38:	lsl	x1, x0, x19
   24a3c:	lsl	x3, x0, x3
   24a40:	sub	x3, x1, x3
   24a44:	ldr	x0, [x5]
   24a48:	tst	x3, x0
   24a4c:	cset	w21, ne  // ne = any
   24a50:	cmn	w20, #0x1
   24a54:	b.ne	24ab4 <mpfr_rint@@Base+0x2b0>  // b.any
   24a58:	cmp	w19, #0x0
   24a5c:	cset	w2, eq  // eq = none
   24a60:	cmp	x22, #0x0
   24a64:	ccmp	w2, #0x0, #0x4, eq  // eq = none
   24a68:	b.ne	24d08 <mpfr_rint@@Base+0x504>  // b.any
   24a6c:	cbnz	w27, 24ce0 <mpfr_rint@@Base+0x4dc>
   24a70:	ldr	x1, [x5]
   24a74:	lsr	x0, x1, x19
   24a78:	tbnz	w0, #0, 24ce0 <mpfr_rint@@Base+0x4dc>
   24a7c:	cbz	w19, 24cc0 <mpfr_rint@@Base+0x4bc>
   24a80:	sub	w3, w19, #0x1
   24a84:	mov	x0, #0xffffffffffffffff    	// #-1
   24a88:	lsl	x0, x0, x19
   24a8c:	bic	x0, x1, x0
   24a90:	mov	x1, #0x1                   	// #1
   24a94:	lsl	x1, x1, x3
   24a98:	cmp	x0, x1
   24a9c:	cset	w20, hi  // hi = pmore
   24aa0:	b.ne	24ab4 <mpfr_rint@@Base+0x2b0>  // b.any
   24aa4:	sub	x22, x22, #0x1
   24aa8:	and	x2, x2, #0xff
   24aac:	sub	x22, x22, x2
   24ab0:	tbz	x22, #63, 24cd0 <mpfr_rint@@Base+0x4cc>
   24ab4:	mov	x2, x7
   24ab8:	mov	x0, x25
   24abc:	mov	w1, #0x0                   	// #0
   24ac0:	stp	x5, x4, [sp, #96]
   24ac4:	bl	c1a0 <memset@plt>
   24ac8:	ldp	x5, x4, [sp, #96]
   24acc:	cbz	w19, 24af4 <mpfr_rint@@Base+0x2f0>
   24ad0:	mov	x6, x4
   24ad4:	mov	x25, x5
   24ad8:	mov	x0, #0xffffffffffffffff    	// #-1
   24adc:	mov	x4, x6
   24ae0:	lsl	x1, x0, x19
   24ae4:	mov	x5, x25
   24ae8:	ldr	x0, [x25]
   24aec:	and	x0, x0, x1
   24af0:	str	x0, [x25]
   24af4:	cbz	w21, 24870 <mpfr_rint@@Base+0x6c>
   24af8:	cbz	w20, 24b14 <mpfr_rint@@Base+0x310>
   24afc:	ldr	x0, [x5]
   24b00:	mov	x1, #0x1                   	// #1
   24b04:	lsl	x19, x1, x19
   24b08:	adds	x19, x19, x0
   24b0c:	str	x19, [x5]
   24b10:	b.cs	24d34 <mpfr_rint@@Base+0x530>  // b.hs, b.nlast
   24b14:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   24b18:	ldr	x1, [x0, #2592]
   24b1c:	add	x0, x0, #0xa20
   24b20:	blr	x1
   24b24:	mrs	x1, tpidr_el0
   24b28:	cmp	w20, w24, lsr #31
   24b2c:	add	x0, x1, x0
   24b30:	ldr	w1, [x0]
   24b34:	orr	w1, w1, #0x8
   24b38:	str	w1, [x0]
   24b3c:	b.ne	24874 <mpfr_rint@@Base+0x70>  // b.any
   24b40:	b	24d70 <mpfr_rint@@Base+0x56c>
   24b44:	b.ne	24b58 <mpfr_rint@@Base+0x354>  // b.any
   24b48:	cmn	w27, #0x1
   24b4c:	b.eq	248dc <mpfr_rint@@Base+0xd8>  // b.none
   24b50:	bl	bf80 <mpfr_powerof2_raw@plt>
   24b54:	cbz	w0, 248dc <mpfr_rint@@Base+0xd8>
   24b58:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   24b5c:	str	x0, [x26, #16]
   24b60:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   24b64:	ldr	x1, [x0, #2592]
   24b68:	add	x0, x0, #0xa20
   24b6c:	blr	x1
   24b70:	mrs	x1, tpidr_el0
   24b74:	cmp	w24, #0x0
   24b78:	add	x0, x1, x0
   24b7c:	ldr	w1, [x0]
   24b80:	orr	w1, w1, #0x8
   24b84:	str	w1, [x0]
   24b88:	b.gt	2491c <mpfr_rint@@Base+0x118>
   24b8c:	mov	w21, #0x2                   	// #2
   24b90:	b	24874 <mpfr_rint@@Base+0x70>
   24b94:	sub	x0, x0, #0x1
   24b98:	ldr	x5, [x28, x0, lsl #3]
   24b9c:	b	249b4 <mpfr_rint@@Base+0x1b0>
   24ba0:	sub	x22, x1, x2
   24ba4:	add	x1, x28, x22, lsl #3
   24ba8:	cmp	x1, x25
   24bac:	b.eq	24bc4 <mpfr_rint@@Base+0x3c0>  // b.none
   24bb0:	lsl	x2, x6, #3
   24bb4:	mov	x0, x25
   24bb8:	stp	x1, x6, [sp, #96]
   24bbc:	bl	ba90 <memcpy@plt>
   24bc0:	ldp	x1, x6, [sp, #96]
   24bc4:	cmn	w20, #0x1
   24bc8:	b.ne	24c18 <mpfr_rint@@Base+0x414>  // b.any
   24bcc:	cbnz	w27, 24c60 <mpfr_rint@@Base+0x45c>
   24bd0:	ldr	x2, [x25]
   24bd4:	lsr	x0, x2, x19
   24bd8:	tbnz	w0, #0, 24c60 <mpfr_rint@@Base+0x45c>
   24bdc:	cbz	w19, 24c44 <mpfr_rint@@Base+0x440>
   24be0:	mov	x0, #0xffffffffffffffff    	// #-1
   24be4:	mov	x1, #0x1                   	// #1
   24be8:	lsl	x0, x0, x19
   24bec:	bic	x0, x2, x0
   24bf0:	sub	w2, w19, #0x1
   24bf4:	lsl	x1, x1, x2
   24bf8:	cmp	x0, x1
   24bfc:	cset	w20, hi  // hi = pmore
   24c00:	b.ne	24c18 <mpfr_rint@@Base+0x414>  // b.any
   24c04:	cmp	w19, #0x0
   24c08:	sub	x0, x22, #0x1
   24c0c:	cset	x1, eq  // eq = none
   24c10:	sub	x0, x0, x1
   24c14:	tbz	x0, #63, 24c50 <mpfr_rint@@Base+0x44c>
   24c18:	cbnz	w21, 24da0 <mpfr_rint@@Base+0x59c>
   24c1c:	cbz	w19, 24c30 <mpfr_rint@@Base+0x42c>
   24c20:	ldr	x0, [x25]
   24c24:	neg	w1, w19
   24c28:	lsl	x0, x0, x1
   24c2c:	cbnz	x0, 24d18 <mpfr_rint@@Base+0x514>
   24c30:	sub	x1, x22, #0x1
   24c34:	tbz	x1, #63, 24ca8 <mpfr_rint@@Base+0x4a4>
   24c38:	cbz	w19, 24870 <mpfr_rint@@Base+0x6c>
   24c3c:	mov	w21, #0x0                   	// #0
   24c40:	b	24ad8 <mpfr_rint@@Base+0x2d4>
   24c44:	ldur	x0, [x1, #-8]
   24c48:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   24c4c:	b	24bf8 <mpfr_rint@@Base+0x3f4>
   24c50:	ldr	x1, [x28, x0, lsl #3]
   24c54:	cbnz	x1, 24c98 <mpfr_rint@@Base+0x494>
   24c58:	sub	x0, x0, #0x1
   24c5c:	b	24c14 <mpfr_rint@@Base+0x410>
   24c60:	cbz	w19, 24c7c <mpfr_rint@@Base+0x478>
   24c64:	ldr	x1, [x25]
   24c68:	sub	w0, w19, #0x1
   24c6c:	lsr	x0, x1, x0
   24c70:	tbnz	w0, #0, 24d90 <mpfr_rint@@Base+0x58c>
   24c74:	mov	w20, #0x0                   	// #0
   24c78:	b	24d94 <mpfr_rint@@Base+0x590>
   24c7c:	ldur	x0, [x1, #-8]
   24c80:	tbz	x0, #63, 24db0 <mpfr_rint@@Base+0x5ac>
   24c84:	cbz	w21, 24ca0 <mpfr_rint@@Base+0x49c>
   24c88:	mov	x4, x6
   24c8c:	mov	x5, x25
   24c90:	mov	w20, #0x1                   	// #1
   24c94:	b	24afc <mpfr_rint@@Base+0x2f8>
   24c98:	mov	w20, #0x1                   	// #1
   24c9c:	b	24c18 <mpfr_rint@@Base+0x414>
   24ca0:	mov	w20, #0x1                   	// #1
   24ca4:	b	24c30 <mpfr_rint@@Base+0x42c>
   24ca8:	ldr	x0, [x28, x1, lsl #3]
   24cac:	cbnz	x0, 24d9c <mpfr_rint@@Base+0x598>
   24cb0:	sub	x1, x1, #0x1
   24cb4:	b	24c34 <mpfr_rint@@Base+0x430>
   24cb8:	mov	w19, w3
   24cbc:	b	24a50 <mpfr_rint@@Base+0x24c>
   24cc0:	add	x0, x28, x22, lsl #3
   24cc4:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   24cc8:	ldur	x0, [x0, #-8]
   24ccc:	b	24a98 <mpfr_rint@@Base+0x294>
   24cd0:	ldr	x0, [x28, x22, lsl #3]
   24cd4:	cbnz	x0, 24d10 <mpfr_rint@@Base+0x50c>
   24cd8:	sub	x22, x22, #0x1
   24cdc:	b	24ab0 <mpfr_rint@@Base+0x2ac>
   24ce0:	cbz	w19, 24cf8 <mpfr_rint@@Base+0x4f4>
   24ce4:	ldr	x0, [x5]
   24ce8:	sub	w20, w19, #0x1
   24cec:	lsr	x20, x0, x20
   24cf0:	and	w20, w20, #0x1
   24cf4:	b	24ab4 <mpfr_rint@@Base+0x2b0>
   24cf8:	add	x22, x28, x22, lsl #3
   24cfc:	ldur	x20, [x22, #-8]
   24d00:	lsr	x20, x20, #63
   24d04:	b	24ab4 <mpfr_rint@@Base+0x2b0>
   24d08:	mov	w20, #0x0                   	// #0
   24d0c:	b	24ab4 <mpfr_rint@@Base+0x2b0>
   24d10:	mov	w20, #0x1                   	// #1
   24d14:	b	24ab4 <mpfr_rint@@Base+0x2b0>
   24d18:	mov	w21, #0x1                   	// #1
   24d1c:	b	24ad8 <mpfr_rint@@Base+0x2d4>
   24d20:	ldr	x0, [x5, x1, lsl #3]
   24d24:	add	x0, x0, #0x1
   24d28:	str	x0, [x5, x1, lsl #3]
   24d2c:	add	x1, x1, #0x1
   24d30:	cbnz	x0, 24b14 <mpfr_rint@@Base+0x310>
   24d34:	cmp	x1, x4
   24d38:	b.ne	24d20 <mpfr_rint@@Base+0x51c>  // b.any
   24d3c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   24d40:	ldr	x2, [x0, #2560]
   24d44:	add	x0, x0, #0xa00
   24d48:	blr	x2
   24d4c:	mrs	x2, tpidr_el0
   24d50:	ldr	x0, [x2, x0]
   24d54:	cmp	x23, x0
   24d58:	b.ne	24d78 <mpfr_rint@@Base+0x574>  // b.any
   24d5c:	mov	w2, w24
   24d60:	mov	w1, w27
   24d64:	mov	x0, x26
   24d68:	bl	bfc0 <mpfr_overflow@plt>
   24d6c:	tbz	w0, #31, 24874 <mpfr_rint@@Base+0x70>
   24d70:	neg	w21, w21
   24d74:	b	24874 <mpfr_rint@@Base+0x70>
   24d78:	add	x1, x5, x1, lsl #3
   24d7c:	add	x23, x23, #0x1
   24d80:	str	x23, [x26, #16]
   24d84:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   24d88:	stur	x0, [x1, #-8]
   24d8c:	b	24b14 <mpfr_rint@@Base+0x310>
   24d90:	mov	w20, #0x1                   	// #1
   24d94:	cbz	w21, 24c20 <mpfr_rint@@Base+0x41c>
   24d98:	b	24ad8 <mpfr_rint@@Base+0x2d4>
   24d9c:	mov	w21, #0x1                   	// #1
   24da0:	cbnz	w19, 24ad8 <mpfr_rint@@Base+0x2d4>
   24da4:	mov	x4, x6
   24da8:	mov	x5, x25
   24dac:	b	24af8 <mpfr_rint@@Base+0x2f4>
   24db0:	mov	w20, #0x0                   	// #0
   24db4:	cbz	w21, 24c30 <mpfr_rint@@Base+0x42c>
   24db8:	b	24b14 <mpfr_rint@@Base+0x310>
   24dbc:	cmp	x23, #0x0
   24dc0:	b.le	24b58 <mpfr_rint@@Base+0x354>
   24dc4:	mov	w20, #0x0                   	// #0
   24dc8:	b	24954 <mpfr_rint@@Base+0x150>
   24dcc:	cmp	x23, #0x0
   24dd0:	b.le	24b44 <mpfr_rint@@Base+0x340>
   24dd4:	mov	w20, #0xffffffff            	// #-1
   24dd8:	b	24954 <mpfr_rint@@Base+0x150>
   24ddc:	mov	x4, x22
   24de0:	mov	w21, #0x0                   	// #0
   24de4:	mov	w3, #0x0                   	// #0
   24de8:	b	249c4 <mpfr_rint@@Base+0x1c0>
   24dec:	mov	w21, #0x2                   	// #2
   24df0:	b	249c4 <mpfr_rint@@Base+0x1c0>

0000000000024df4 <mpfr_roundeven@@Base>:
   24df4:	mov	w2, #0x0                   	// #0
   24df8:	b	c390 <mpfr_rint@plt>

0000000000024dfc <mpfr_round@@Base>:
   24dfc:	mov	w2, #0xffffffff            	// #-1
   24e00:	b	c390 <mpfr_rint@plt>

0000000000024e04 <mpfr_trunc@@Base>:
   24e04:	mov	w2, #0x1                   	// #1
   24e08:	b	c390 <mpfr_rint@plt>

0000000000024e0c <mpfr_ceil@@Base>:
   24e0c:	mov	w2, #0x2                   	// #2
   24e10:	b	c390 <mpfr_rint@plt>

0000000000024e14 <mpfr_floor@@Base>:
   24e14:	mov	w2, #0x3                   	// #3
   24e18:	b	c390 <mpfr_rint@plt>

0000000000024e1c <mpfr_rint_roundeven@@Base>:
   24e1c:	stp	x29, x30, [sp, #-96]!
   24e20:	mov	x29, sp
   24e24:	stp	x19, x20, [sp, #16]
   24e28:	mov	x19, x1
   24e2c:	mov	x20, x0
   24e30:	ldr	x1, [x1, #16]
   24e34:	stp	x21, x22, [sp, #32]
   24e38:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   24e3c:	stp	x23, x24, [sp, #48]
   24e40:	mov	w21, w2
   24e44:	cmp	x1, x0
   24e48:	b.gt	24e7c <mpfr_rint_roundeven@@Base+0x60>
   24e4c:	ldr	w3, [x19, #8]
   24e50:	mov	x1, x19
   24e54:	mov	w2, w21
   24e58:	mov	x0, x20
   24e5c:	bl	c730 <mpfr_set4@plt>
   24e60:	mov	w19, w0
   24e64:	mov	w0, w19
   24e68:	ldp	x19, x20, [sp, #16]
   24e6c:	ldp	x21, x22, [sp, #32]
   24e70:	ldp	x23, x24, [sp, #48]
   24e74:	ldp	x29, x30, [sp], #96
   24e78:	ret
   24e7c:	mov	x0, x19
   24e80:	bl	c1f0 <mpfr_integer_p@plt>
   24e84:	cbnz	w0, 24e4c <mpfr_rint_roundeven@@Base+0x30>
   24e88:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   24e8c:	ldr	x1, [x0, #2592]
   24e90:	add	x0, x0, #0xa20
   24e94:	blr	x1
   24e98:	add	x22, sp, #0x40
   24e9c:	mrs	x1, tpidr_el0
   24ea0:	add	x23, x1, x0
   24ea4:	ldr	w24, [x1, x0]
   24ea8:	mov	x0, x22
   24eac:	ldr	x1, [x19]
   24eb0:	bl	cb10 <mpfr_init2@plt>
   24eb4:	str	wzr, [x23]
   24eb8:	mov	x1, x19
   24ebc:	mov	x0, x22
   24ec0:	bl	c310 <mpfr_roundeven@plt>
   24ec4:	ldr	w0, [x23]
   24ec8:	str	w24, [x23]
   24ecc:	tbz	w0, #1, 24ef0 <mpfr_rint_roundeven@@Base+0xd4>
   24ed0:	ldr	w2, [x19, #8]
   24ed4:	mov	w1, w21
   24ed8:	mov	x0, x20
   24edc:	bl	bfc0 <mpfr_overflow@plt>
   24ee0:	mov	w19, w0
   24ee4:	mov	x0, x22
   24ee8:	bl	c0f0 <mpfr_clear@plt>
   24eec:	b	24e64 <mpfr_rint_roundeven@@Base+0x48>
   24ef0:	ldr	w3, [sp, #72]
   24ef4:	mov	w2, w21
   24ef8:	mov	x1, x22
   24efc:	mov	x0, x20
   24f00:	bl	c730 <mpfr_set4@plt>
   24f04:	b	24ee0 <mpfr_rint_roundeven@@Base+0xc4>

0000000000024f08 <mpfr_rint_round@@Base>:
   24f08:	stp	x29, x30, [sp, #-96]!
   24f0c:	mov	x29, sp
   24f10:	stp	x19, x20, [sp, #16]
   24f14:	mov	x19, x1
   24f18:	mov	x20, x0
   24f1c:	ldr	x1, [x1, #16]
   24f20:	stp	x21, x22, [sp, #32]
   24f24:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   24f28:	stp	x23, x24, [sp, #48]
   24f2c:	mov	w21, w2
   24f30:	cmp	x1, x0
   24f34:	b.gt	24f68 <mpfr_rint_round@@Base+0x60>
   24f38:	ldr	w3, [x19, #8]
   24f3c:	mov	x1, x19
   24f40:	mov	w2, w21
   24f44:	mov	x0, x20
   24f48:	bl	c730 <mpfr_set4@plt>
   24f4c:	mov	w19, w0
   24f50:	mov	w0, w19
   24f54:	ldp	x19, x20, [sp, #16]
   24f58:	ldp	x21, x22, [sp, #32]
   24f5c:	ldp	x23, x24, [sp, #48]
   24f60:	ldp	x29, x30, [sp], #96
   24f64:	ret
   24f68:	mov	x0, x19
   24f6c:	bl	c1f0 <mpfr_integer_p@plt>
   24f70:	cbnz	w0, 24f38 <mpfr_rint_round@@Base+0x30>
   24f74:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   24f78:	ldr	x1, [x0, #2592]
   24f7c:	add	x0, x0, #0xa20
   24f80:	blr	x1
   24f84:	add	x22, sp, #0x40
   24f88:	mrs	x1, tpidr_el0
   24f8c:	add	x23, x1, x0
   24f90:	ldr	w24, [x1, x0]
   24f94:	mov	x0, x22
   24f98:	ldr	x1, [x19]
   24f9c:	bl	cb10 <mpfr_init2@plt>
   24fa0:	str	wzr, [x23]
   24fa4:	mov	x1, x19
   24fa8:	mov	x0, x22
   24fac:	bl	c2b0 <mpfr_round@plt>
   24fb0:	ldr	w0, [x23]
   24fb4:	str	w24, [x23]
   24fb8:	tbz	w0, #1, 24fdc <mpfr_rint_round@@Base+0xd4>
   24fbc:	ldr	w2, [x19, #8]
   24fc0:	mov	w1, w21
   24fc4:	mov	x0, x20
   24fc8:	bl	bfc0 <mpfr_overflow@plt>
   24fcc:	mov	w19, w0
   24fd0:	mov	x0, x22
   24fd4:	bl	c0f0 <mpfr_clear@plt>
   24fd8:	b	24f50 <mpfr_rint_round@@Base+0x48>
   24fdc:	ldr	w3, [sp, #72]
   24fe0:	mov	w2, w21
   24fe4:	mov	x1, x22
   24fe8:	mov	x0, x20
   24fec:	bl	c730 <mpfr_set4@plt>
   24ff0:	b	24fcc <mpfr_rint_round@@Base+0xc4>

0000000000024ff4 <mpfr_rint_trunc@@Base>:
   24ff4:	stp	x29, x30, [sp, #-96]!
   24ff8:	mov	x29, sp
   24ffc:	stp	x19, x20, [sp, #16]
   25000:	mov	x19, x1
   25004:	ldr	x1, [x1, #16]
   25008:	stp	x21, x22, [sp, #32]
   2500c:	mov	x21, x0
   25010:	stp	x23, x24, [sp, #48]
   25014:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   25018:	mov	w22, w2
   2501c:	cmp	x1, x0
   25020:	b.gt	25054 <mpfr_rint_trunc@@Base+0x60>
   25024:	ldr	w3, [x19, #8]
   25028:	mov	x1, x19
   2502c:	mov	w2, w22
   25030:	mov	x0, x21
   25034:	bl	c730 <mpfr_set4@plt>
   25038:	mov	w19, w0
   2503c:	mov	w0, w19
   25040:	ldp	x19, x20, [sp, #16]
   25044:	ldp	x21, x22, [sp, #32]
   25048:	ldp	x23, x24, [sp, #48]
   2504c:	ldp	x29, x30, [sp], #96
   25050:	ret
   25054:	mov	x0, x19
   25058:	bl	c1f0 <mpfr_integer_p@plt>
   2505c:	cbnz	w0, 25024 <mpfr_rint_trunc@@Base+0x30>
   25060:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   25064:	ldr	x1, [x0, #2592]
   25068:	add	x0, x0, #0xa20
   2506c:	blr	x1
   25070:	add	x20, sp, #0x40
   25074:	mrs	x1, tpidr_el0
   25078:	add	x23, x1, x0
   2507c:	ldr	w24, [x1, x0]
   25080:	mov	x0, x20
   25084:	ldr	x1, [x19]
   25088:	bl	cb10 <mpfr_init2@plt>
   2508c:	mov	x1, x19
   25090:	mov	x0, x20
   25094:	bl	c480 <mpfr_trunc@plt>
   25098:	str	w24, [x23]
   2509c:	ldr	w3, [sp, #72]
   250a0:	mov	w2, w22
   250a4:	mov	x1, x20
   250a8:	mov	x0, x21
   250ac:	bl	c730 <mpfr_set4@plt>
   250b0:	mov	w19, w0
   250b4:	mov	x0, x20
   250b8:	bl	c0f0 <mpfr_clear@plt>
   250bc:	b	2503c <mpfr_rint_trunc@@Base+0x48>

00000000000250c0 <mpfr_rint_ceil@@Base>:
   250c0:	stp	x29, x30, [sp, #-96]!
   250c4:	mov	x29, sp
   250c8:	stp	x19, x20, [sp, #16]
   250cc:	mov	x19, x1
   250d0:	mov	x20, x0
   250d4:	ldr	x1, [x1, #16]
   250d8:	stp	x21, x22, [sp, #32]
   250dc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   250e0:	stp	x23, x24, [sp, #48]
   250e4:	mov	w21, w2
   250e8:	cmp	x1, x0
   250ec:	b.gt	25120 <mpfr_rint_ceil@@Base+0x60>
   250f0:	ldr	w3, [x19, #8]
   250f4:	mov	x1, x19
   250f8:	mov	w2, w21
   250fc:	mov	x0, x20
   25100:	bl	c730 <mpfr_set4@plt>
   25104:	mov	w19, w0
   25108:	mov	w0, w19
   2510c:	ldp	x19, x20, [sp, #16]
   25110:	ldp	x21, x22, [sp, #32]
   25114:	ldp	x23, x24, [sp, #48]
   25118:	ldp	x29, x30, [sp], #96
   2511c:	ret
   25120:	mov	x0, x19
   25124:	bl	c1f0 <mpfr_integer_p@plt>
   25128:	cbnz	w0, 250f0 <mpfr_rint_ceil@@Base+0x30>
   2512c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   25130:	ldr	x1, [x0, #2592]
   25134:	add	x0, x0, #0xa20
   25138:	blr	x1
   2513c:	add	x22, sp, #0x40
   25140:	mrs	x1, tpidr_el0
   25144:	add	x23, x1, x0
   25148:	ldr	w24, [x1, x0]
   2514c:	mov	x0, x22
   25150:	ldr	x1, [x19]
   25154:	bl	cb10 <mpfr_init2@plt>
   25158:	str	wzr, [x23]
   2515c:	mov	x1, x19
   25160:	mov	x0, x22
   25164:	bl	ca10 <mpfr_ceil@plt>
   25168:	ldr	w0, [x23]
   2516c:	str	w24, [x23]
   25170:	tbz	w0, #1, 25194 <mpfr_rint_ceil@@Base+0xd4>
   25174:	mov	w1, w21
   25178:	mov	x0, x20
   2517c:	mov	w2, #0x1                   	// #1
   25180:	bl	bfc0 <mpfr_overflow@plt>
   25184:	mov	w19, w0
   25188:	mov	x0, x22
   2518c:	bl	c0f0 <mpfr_clear@plt>
   25190:	b	25108 <mpfr_rint_ceil@@Base+0x48>
   25194:	ldr	w3, [sp, #72]
   25198:	mov	w2, w21
   2519c:	mov	x1, x22
   251a0:	mov	x0, x20
   251a4:	bl	c730 <mpfr_set4@plt>
   251a8:	b	25184 <mpfr_rint_ceil@@Base+0xc4>

00000000000251ac <mpfr_rint_floor@@Base>:
   251ac:	stp	x29, x30, [sp, #-96]!
   251b0:	mov	x29, sp
   251b4:	stp	x19, x20, [sp, #16]
   251b8:	mov	x19, x1
   251bc:	mov	x20, x0
   251c0:	ldr	x1, [x1, #16]
   251c4:	stp	x21, x22, [sp, #32]
   251c8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   251cc:	stp	x23, x24, [sp, #48]
   251d0:	mov	w21, w2
   251d4:	cmp	x1, x0
   251d8:	b.gt	2520c <mpfr_rint_floor@@Base+0x60>
   251dc:	ldr	w3, [x19, #8]
   251e0:	mov	x1, x19
   251e4:	mov	w2, w21
   251e8:	mov	x0, x20
   251ec:	bl	c730 <mpfr_set4@plt>
   251f0:	mov	w19, w0
   251f4:	mov	w0, w19
   251f8:	ldp	x19, x20, [sp, #16]
   251fc:	ldp	x21, x22, [sp, #32]
   25200:	ldp	x23, x24, [sp, #48]
   25204:	ldp	x29, x30, [sp], #96
   25208:	ret
   2520c:	mov	x0, x19
   25210:	bl	c1f0 <mpfr_integer_p@plt>
   25214:	cbnz	w0, 251dc <mpfr_rint_floor@@Base+0x30>
   25218:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2521c:	ldr	x1, [x0, #2592]
   25220:	add	x0, x0, #0xa20
   25224:	blr	x1
   25228:	add	x22, sp, #0x40
   2522c:	mrs	x1, tpidr_el0
   25230:	add	x23, x1, x0
   25234:	ldr	w24, [x1, x0]
   25238:	mov	x0, x22
   2523c:	ldr	x1, [x19]
   25240:	bl	cb10 <mpfr_init2@plt>
   25244:	str	wzr, [x23]
   25248:	mov	x1, x19
   2524c:	mov	x0, x22
   25250:	bl	c2a0 <mpfr_floor@plt>
   25254:	ldr	w0, [x23]
   25258:	str	w24, [x23]
   2525c:	tbz	w0, #1, 25280 <mpfr_rint_floor@@Base+0xd4>
   25260:	mov	w1, w21
   25264:	mov	x0, x20
   25268:	mov	w2, #0xffffffff            	// #-1
   2526c:	bl	bfc0 <mpfr_overflow@plt>
   25270:	mov	w19, w0
   25274:	mov	x0, x22
   25278:	bl	c0f0 <mpfr_clear@plt>
   2527c:	b	251f4 <mpfr_rint_floor@@Base+0x48>
   25280:	ldr	w3, [sp, #72]
   25284:	mov	w2, w21
   25288:	mov	x1, x22
   2528c:	mov	x0, x20
   25290:	bl	c730 <mpfr_set4@plt>
   25294:	b	25270 <mpfr_rint_floor@@Base+0xc4>

0000000000025298 <mpfr_ui_div@@Base>:
   25298:	stp	x29, x30, [sp, #-128]!
   2529c:	mov	x5, #0x8000000000000003    	// #-9223372036854775805
   252a0:	mov	x4, x2
   252a4:	mov	x29, sp
   252a8:	stp	x19, x20, [sp, #16]
   252ac:	mov	x19, x0
   252b0:	ldr	x0, [x2, #16]
   252b4:	stp	x21, x22, [sp, #32]
   252b8:	stp	x23, x24, [sp, #48]
   252bc:	cmp	x0, x5
   252c0:	stp	x25, x26, [sp, #64]
   252c4:	b.gt	2537c <mpfr_ui_div@@Base+0xe4>
   252c8:	mov	x3, #0x2                   	// #2
   252cc:	movk	x3, #0x8000, lsl #48
   252d0:	cmp	x0, x3
   252d4:	b.ne	2531c <mpfr_ui_div@@Base+0x84>  // b.any
   252d8:	str	x0, [x19, #16]
   252dc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   252e0:	ldr	x1, [x0, #2592]
   252e4:	add	x0, x0, #0xa20
   252e8:	blr	x1
   252ec:	mrs	x1, tpidr_el0
   252f0:	add	x0, x1, x0
   252f4:	ldr	w1, [x0]
   252f8:	orr	w1, w1, #0x4
   252fc:	str	w1, [x0]
   25300:	mov	w0, #0x0                   	// #0
   25304:	ldp	x19, x20, [sp, #16]
   25308:	ldp	x21, x22, [sp, #32]
   2530c:	ldp	x23, x24, [sp, #48]
   25310:	ldp	x25, x26, [sp, #64]
   25314:	ldp	x29, x30, [sp], #128
   25318:	ret
   2531c:	cmp	x0, x5
   25320:	b.ne	25338 <mpfr_ui_div@@Base+0xa0>  // b.any
   25324:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   25328:	str	x0, [x19, #16]
   2532c:	ldr	w0, [x4, #8]
   25330:	str	w0, [x19, #8]
   25334:	b	25300 <mpfr_ui_div@@Base+0x68>
   25338:	mrs	x6, tpidr_el0
   2533c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   25340:	ldr	x2, [x0, #2592]
   25344:	add	x0, x0, #0xa20
   25348:	blr	x2
   2534c:	add	x2, x6, x0
   25350:	ldr	w0, [x6, x0]
   25354:	cbz	x1, 25370 <mpfr_ui_div@@Base+0xd8>
   25358:	ldr	w1, [x4, #8]
   2535c:	orr	w0, w0, #0x20
   25360:	str	w1, [x19, #8]
   25364:	str	x5, [x19, #16]
   25368:	str	w0, [x2]
   2536c:	b	25300 <mpfr_ui_div@@Base+0x68>
   25370:	orr	w0, w0, #0x4
   25374:	str	x3, [x19, #16]
   25378:	b	25368 <mpfr_ui_div@@Base+0xd0>
   2537c:	cbz	x1, 25324 <mpfr_ui_div@@Base+0x8c>
   25380:	clz	x5, x1
   25384:	add	x0, sp, #0x58
   25388:	str	x0, [sp, #120]
   2538c:	mov	w0, #0x1                   	// #1
   25390:	lsl	x1, x1, x5
   25394:	mov	x4, #0x40                  	// #64
   25398:	stp	x1, x4, [sp, #88]
   2539c:	sub	w4, w4, w5
   253a0:	mov	w22, w3
   253a4:	str	w0, [sp, #104]
   253a8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   253ac:	ldr	x1, [x0, #2592]
   253b0:	add	x0, x0, #0xa20
   253b4:	blr	x1
   253b8:	mrs	x1, tpidr_el0
   253bc:	sxtw	x4, w4
   253c0:	add	x21, x1, x0
   253c4:	str	x4, [sp, #112]
   253c8:	ldr	w20, [x1, x0]
   253cc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   253d0:	ldr	x6, [x0, #2528]
   253d4:	add	x0, x0, #0x9e0
   253d8:	blr	x6
   253dc:	add	x26, x1, x0
   253e0:	ldr	x24, [x1, x0]
   253e4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   253e8:	ldr	x6, [x0, #2560]
   253ec:	add	x0, x0, #0xa00
   253f0:	blr	x6
   253f4:	add	x25, x1, x0
   253f8:	ldr	x23, [x1, x0]
   253fc:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   25400:	str	x0, [x26]
   25404:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   25408:	add	x1, sp, #0x60
   2540c:	str	x0, [x25]
   25410:	mov	x0, x19
   25414:	bl	c6b0 <mpfr_div@plt>
   25418:	ldr	w1, [x21]
   2541c:	ldr	x2, [x19, #16]
   25420:	orr	w1, w20, w1
   25424:	str	x23, [x25]
   25428:	str	w1, [x21]
   2542c:	cmp	x24, x2
   25430:	str	x24, [x26]
   25434:	b.gt	25450 <mpfr_ui_div@@Base+0x1b8>
   25438:	cmp	x23, x2
   2543c:	b.lt	25450 <mpfr_ui_div@@Base+0x1b8>  // b.tstop
   25440:	cbz	w0, 25304 <mpfr_ui_div@@Base+0x6c>
   25444:	orr	w1, w1, #0x8
   25448:	str	w1, [x21]
   2544c:	b	25304 <mpfr_ui_div@@Base+0x6c>
   25450:	mov	w1, w0
   25454:	mov	w2, w22
   25458:	mov	x0, x19
   2545c:	bl	cbc0 <mpfr_check_range@plt>
   25460:	b	25304 <mpfr_ui_div@@Base+0x6c>

0000000000025464 <mpfr_ui_sub@@Base>:
   25464:	stp	x29, x30, [sp, #-128]!
   25468:	mov	x5, x2
   2546c:	mov	x29, sp
   25470:	stp	x19, x20, [sp, #16]
   25474:	stp	x21, x22, [sp, #32]
   25478:	mov	w21, w3
   2547c:	stp	x23, x24, [sp, #48]
   25480:	stp	x25, x26, [sp, #64]
   25484:	cbnz	x1, 254ac <mpfr_ui_sub@@Base+0x48>
   25488:	mov	w2, w3
   2548c:	mov	x1, x5
   25490:	bl	bdf0 <mpfr_neg@plt>
   25494:	ldp	x19, x20, [sp, #16]
   25498:	ldp	x21, x22, [sp, #32]
   2549c:	ldp	x23, x24, [sp, #48]
   254a0:	ldp	x25, x26, [sp, #64]
   254a4:	ldp	x29, x30, [sp], #128
   254a8:	ret
   254ac:	ldr	x6, [x2, #16]
   254b0:	mov	x7, #0x8000000000000003    	// #-9223372036854775805
   254b4:	mov	x19, x0
   254b8:	cmp	x6, x7
   254bc:	b.gt	25528 <mpfr_ui_sub@@Base+0xc4>
   254c0:	mov	x2, #0x2                   	// #2
   254c4:	movk	x2, #0x8000, lsl #48
   254c8:	cmp	x6, x2
   254cc:	b.ne	25500 <mpfr_ui_sub@@Base+0x9c>  // b.any
   254d0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   254d4:	ldr	x1, [x0, #2592]
   254d8:	add	x0, x0, #0xa20
   254dc:	blr	x1
   254e0:	str	x6, [x19, #16]
   254e4:	mrs	x1, tpidr_el0
   254e8:	add	x0, x1, x0
   254ec:	ldr	w1, [x0]
   254f0:	orr	w1, w1, #0x4
   254f4:	str	w1, [x0]
   254f8:	mov	w0, #0x0                   	// #0
   254fc:	b	25494 <mpfr_ui_sub@@Base+0x30>
   25500:	cmp	x6, x7
   25504:	b.ne	2551c <mpfr_ui_sub@@Base+0xb8>  // b.any
   25508:	ldr	w0, [x5, #8]
   2550c:	str	x6, [x19, #16]
   25510:	neg	w0, w0
   25514:	str	w0, [x19, #8]
   25518:	b	254f8 <mpfr_ui_sub@@Base+0x94>
   2551c:	mov	x2, #0x0                   	// #0
   25520:	bl	c680 <mpfr_set_ui_2exp@plt>
   25524:	b	25494 <mpfr_ui_sub@@Base+0x30>
   25528:	mov	x4, x1
   2552c:	add	x0, sp, #0x58
   25530:	clz	x5, x4
   25534:	str	x0, [sp, #120]
   25538:	mov	w0, #0x1                   	// #1
   2553c:	mov	x1, #0x40                  	// #64
   25540:	lsl	x4, x4, x5
   25544:	stp	x4, x1, [sp, #88]
   25548:	sub	w1, w1, w5
   2554c:	str	w0, [sp, #104]
   25550:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   25554:	ldr	x4, [x0, #2592]
   25558:	add	x0, x0, #0xa20
   2555c:	blr	x4
   25560:	mrs	x4, tpidr_el0
   25564:	sxtw	x1, w1
   25568:	add	x22, x4, x0
   2556c:	str	x1, [sp, #112]
   25570:	add	x1, sp, #0x60
   25574:	ldr	w20, [x4, x0]
   25578:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2557c:	ldr	x6, [x0, #2528]
   25580:	add	x0, x0, #0x9e0
   25584:	blr	x6
   25588:	add	x26, x4, x0
   2558c:	ldr	x24, [x4, x0]
   25590:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   25594:	ldr	x6, [x0, #2560]
   25598:	add	x0, x0, #0xa00
   2559c:	blr	x6
   255a0:	add	x25, x4, x0
   255a4:	ldr	x23, [x4, x0]
   255a8:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   255ac:	str	x0, [x26]
   255b0:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   255b4:	str	x0, [x25]
   255b8:	mov	x0, x19
   255bc:	bl	bbf0 <mpfr_sub@plt>
   255c0:	str	x23, [x25]
   255c4:	ldr	w1, [x22]
   255c8:	ldr	x2, [x19, #16]
   255cc:	orr	w1, w20, w1
   255d0:	str	x24, [x26]
   255d4:	str	w1, [x22]
   255d8:	cmp	x24, x2
   255dc:	b.gt	255f8 <mpfr_ui_sub@@Base+0x194>
   255e0:	cmp	x23, x2
   255e4:	b.lt	255f8 <mpfr_ui_sub@@Base+0x194>  // b.tstop
   255e8:	cbz	w0, 25494 <mpfr_ui_sub@@Base+0x30>
   255ec:	orr	w1, w1, #0x8
   255f0:	str	w1, [x22]
   255f4:	b	25494 <mpfr_ui_sub@@Base+0x30>
   255f8:	mov	w1, w0
   255fc:	mov	w2, w21
   25600:	mov	x0, x19
   25604:	bl	cbc0 <mpfr_check_range@plt>
   25608:	b	25494 <mpfr_ui_sub@@Base+0x30>

000000000002560c <mpfr_urandom@@Base>:
   2560c:	stp	x29, x30, [sp, #-128]!
   25610:	mov	x29, sp
   25614:	stp	x25, x26, [sp, #64]
   25618:	mrs	x26, tpidr_el0
   2561c:	mov	x25, x0
   25620:	stp	x27, x28, [sp, #80]
   25624:	mov	x28, x1
   25628:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2562c:	ldr	x1, [x0, #2592]
   25630:	add	x0, x0, #0xa20
   25634:	blr	x1
   25638:	stp	x21, x22, [sp, #32]
   2563c:	mov	w21, w2
   25640:	ldr	w22, [x26, x0]
   25644:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   25648:	ldr	x1, [x0, #2528]
   2564c:	add	x0, x0, #0x9e0
   25650:	blr	x1
   25654:	add	x1, x26, x0
   25658:	ldr	x0, [x26, x0]
   2565c:	stp	x19, x20, [sp, #16]
   25660:	mov	x20, #0x0                   	// #0
   25664:	ldr	x27, [x25, #24]
   25668:	stp	x23, x24, [sp, #48]
   2566c:	mov	x19, #0xc000000000000000    	// #-4611686018427387904
   25670:	str	x0, [sp, #104]
   25674:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   25678:	ldr	x2, [x0, #2560]
   2567c:	add	x0, x0, #0xa00
   25680:	blr	x2
   25684:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   25688:	str	xzr, [x25, #16]
   2568c:	ldr	x23, [x25]
   25690:	str	x2, [x1]
   25694:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   25698:	ldr	x24, [x26, x0]
   2569c:	str	x1, [x26, x0]
   256a0:	mov	w0, #0x1                   	// #1
   256a4:	str	w0, [x25, #8]
   256a8:	mov	x0, x27
   256ac:	mov	x1, x28
   256b0:	mov	x2, #0x8                   	// #8
   256b4:	bl	c8a0 <mpfr_rand_raw@plt>
   256b8:	ldr	x0, [x27]
   256bc:	cbz	x0, 25814 <mpfr_urandom@@Base+0x208>
   256c0:	clz	x0, x0
   256c4:	cmp	x20, x19
   256c8:	sub	w0, w0, #0x38
   256cc:	b.lt	256d4 <mpfr_urandom@@Base+0xc8>  // b.tstop
   256d0:	sub	x20, x20, w0, sxtw
   256d4:	cmp	x23, #0x1
   256d8:	b.ne	257a4 <mpfr_urandom@@Base+0x198>  // b.any
   256dc:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   256e0:	str	x0, [x27]
   256e4:	add	x0, sp, #0x78
   256e8:	mov	x1, x28
   256ec:	mov	x2, #0x1                   	// #1
   256f0:	bl	c8a0 <mpfr_rand_raw@plt>
   256f4:	cmp	w21, #0x2
   256f8:	ccmp	w21, #0x4, #0x4, ne  // ne = any
   256fc:	ldr	x0, [sp, #120]
   25700:	b.eq	2570c <mpfr_urandom@@Base+0x100>  // b.none
   25704:	cbnz	w21, 257f8 <mpfr_urandom@@Base+0x1ec>
   25708:	cbz	x0, 257f8 <mpfr_urandom@@Base+0x1ec>
   2570c:	mov	x0, x25
   25710:	bl	c1b0 <mpfr_nextabove@plt>
   25714:	mov	w1, #0x1                   	// #1
   25718:	ldr	x0, [x25, #16]
   2571c:	add	x20, x20, x0
   25720:	str	x20, [x25, #16]
   25724:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   25728:	ldr	x2, [x0, #2592]
   2572c:	add	x0, x0, #0xa20
   25730:	blr	x2
   25734:	add	x2, x26, x0
   25738:	str	w22, [x26, x0]
   2573c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   25740:	ldr	x3, [x0, #2528]
   25744:	add	x0, x0, #0x9e0
   25748:	blr	x3
   2574c:	ldr	x3, [sp, #104]
   25750:	str	x3, [x26, x0]
   25754:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   25758:	ldr	x3, [x0, #2560]
   2575c:	add	x0, x0, #0xa00
   25760:	blr	x3
   25764:	str	x24, [x26, x0]
   25768:	ldr	x0, [sp, #104]
   2576c:	cmp	x0, x20
   25770:	b.gt	25800 <mpfr_urandom@@Base+0x1f4>
   25774:	cmp	x24, x20
   25778:	b.lt	25800 <mpfr_urandom@@Base+0x1f4>  // b.tstop
   2577c:	orr	w22, w22, #0x8
   25780:	str	w22, [x2]
   25784:	mov	w0, w1
   25788:	ldp	x19, x20, [sp, #16]
   2578c:	ldp	x21, x22, [sp, #32]
   25790:	ldp	x23, x24, [sp, #48]
   25794:	ldp	x25, x26, [sp, #64]
   25798:	ldp	x27, x28, [sp, #80]
   2579c:	ldp	x29, x30, [sp], #128
   257a0:	ret
   257a4:	mov	x0, x27
   257a8:	sub	x2, x23, #0x1
   257ac:	mov	x1, x28
   257b0:	bl	c8a0 <mpfr_rand_raw@plt>
   257b4:	ldr	x19, [x25]
   257b8:	sub	x19, x19, #0x1
   257bc:	asr	x19, x19, #6
   257c0:	add	x19, x19, #0x1
   257c4:	lsl	x0, x19, #6
   257c8:	subs	x3, x0, x23
   257cc:	b.eq	257e0 <mpfr_urandom@@Base+0x1d4>  // b.none
   257d0:	mov	x2, x19
   257d4:	mov	x1, x27
   257d8:	mov	x0, x27
   257dc:	bl	bd40 <__gmpn_lshift@plt>
   257e0:	lsl	x19, x19, #3
   257e4:	sub	x19, x19, #0x8
   257e8:	ldr	x0, [x27, x19]
   257ec:	orr	x0, x0, #0x8000000000000000
   257f0:	str	x0, [x27, x19]
   257f4:	b	256e4 <mpfr_urandom@@Base+0xd8>
   257f8:	mov	w1, #0xffffffff            	// #-1
   257fc:	b	25718 <mpfr_urandom@@Base+0x10c>
   25800:	mov	w2, w21
   25804:	mov	x0, x25
   25808:	bl	cbc0 <mpfr_check_range@plt>
   2580c:	mov	w1, w0
   25810:	b	25784 <mpfr_urandom@@Base+0x178>
   25814:	cmp	x20, x19
   25818:	b.lt	256a8 <mpfr_urandom@@Base+0x9c>  // b.tstop
   2581c:	sub	x20, x20, #0x8
   25820:	b	256a8 <mpfr_urandom@@Base+0x9c>

0000000000025824 <mpfr_rand_raw@@Base>:
   25824:	stp	x29, x30, [sp, #-64]!
   25828:	cmp	x2, #0x0
   2582c:	mov	x29, sp
   25830:	stp	x19, x20, [sp, #16]
   25834:	stp	x21, x22, [sp, #32]
   25838:	b.gt	25854 <mpfr_rand_raw@@Base+0x30>
   2583c:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   25840:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   25844:	add	x2, x2, #0x276
   25848:	add	x0, x0, #0x281
   2584c:	mov	w1, #0x26                  	// #38
   25850:	bl	cbd0 <mpfr_assert_fail@plt>
   25854:	add	x21, sp, #0x30
   25858:	mov	x20, x0
   2585c:	mov	x22, x1
   25860:	mov	x19, x2
   25864:	mov	x0, x21
   25868:	bl	c010 <mpfr_mpz_init@plt>
   2586c:	mov	x1, x22
   25870:	mov	x2, x19
   25874:	mov	x0, x21
   25878:	bl	cda0 <__gmpz_urandomb@plt>
   2587c:	ldr	x1, [sp, #56]
   25880:	cmp	x1, x20
   25884:	b.eq	258a0 <mpfr_rand_raw@@Base+0x7c>  // b.none
   25888:	sub	x2, x19, #0x1
   2588c:	mov	x0, x20
   25890:	asr	x2, x2, #6
   25894:	add	x2, x2, #0x1
   25898:	lsl	x2, x2, #3
   2589c:	bl	ba90 <memcpy@plt>
   258a0:	mov	x0, x21
   258a4:	bl	c200 <mpfr_mpz_clear@plt>
   258a8:	ldp	x19, x20, [sp, #16]
   258ac:	ldp	x21, x22, [sp, #32]
   258b0:	ldp	x29, x30, [sp], #64
   258b4:	ret

00000000000258b8 <mpfr_urandomb@@Base>:
   258b8:	stp	x29, x30, [sp, #-48]!
   258bc:	mov	x29, sp
   258c0:	ldr	x2, [x0]
   258c4:	stp	x19, x20, [sp, #16]
   258c8:	sub	x19, x2, #0x1
   258cc:	stp	x21, x22, [sp, #32]
   258d0:	mov	x21, x0
   258d4:	asr	x19, x19, #6
   258d8:	add	x19, x19, #0x1
   258dc:	ldr	x20, [x0, #24]
   258e0:	mov	w0, #0x1                   	// #1
   258e4:	str	w0, [x21, #8]
   258e8:	lsl	w22, w19, #6
   258ec:	sub	w22, w22, w2
   258f0:	mov	x0, x20
   258f4:	bl	c8a0 <mpfr_rand_raw@plt>
   258f8:	cbz	w22, 25910 <mpfr_urandomb@@Base+0x58>
   258fc:	mov	w3, w22
   25900:	mov	x2, x19
   25904:	mov	x1, x20
   25908:	mov	x0, x20
   2590c:	bl	bd40 <__gmpn_lshift@plt>
   25910:	sub	x1, x20, #0x8
   25914:	mov	x22, #0x0                   	// #0
   25918:	mov	x3, #0xffffffffffffffc0    	// #-64
   2591c:	ldr	x0, [x1, x19, lsl #3]
   25920:	mul	x2, x22, x3
   25924:	cbz	x0, 25990 <mpfr_urandomb@@Base+0xd8>
   25928:	clz	x3, x0
   2592c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   25930:	ldr	x1, [x0, #2528]
   25934:	add	x0, x0, #0x9e0
   25938:	blr	x1
   2593c:	mrs	x1, tpidr_el0
   25940:	sub	x2, x2, x3
   25944:	ldr	x0, [x1, x0]
   25948:	cmp	x0, x2
   2594c:	b.gt	259a8 <mpfr_urandomb@@Base+0xf0>
   25950:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   25954:	ldr	x4, [x0, #2560]
   25958:	add	x0, x0, #0xa00
   2595c:	blr	x4
   25960:	ldr	x0, [x1, x0]
   25964:	cmp	x0, x2
   25968:	b.lt	259a8 <mpfr_urandomb@@Base+0xf0>  // b.tstop
   2596c:	str	x2, [x21, #16]
   25970:	cbz	x3, 259e8 <mpfr_urandomb@@Base+0x130>
   25974:	mov	x2, x19
   25978:	mov	x1, x20
   2597c:	add	x0, x20, x22, lsl #3
   25980:	bl	bd40 <__gmpn_lshift@plt>
   25984:	cbnz	x22, 259fc <mpfr_urandomb@@Base+0x144>
   25988:	mov	w0, #0x0                   	// #0
   2598c:	b	259d8 <mpfr_urandomb@@Base+0x120>
   25990:	add	x22, x22, #0x1
   25994:	subs	x19, x19, #0x1
   25998:	b.ne	2591c <mpfr_urandomb@@Base+0x64>  // b.any
   2599c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   259a0:	str	x0, [x21, #16]
   259a4:	b	25988 <mpfr_urandomb@@Base+0xd0>
   259a8:	mov	x0, #0x2                   	// #2
   259ac:	movk	x0, #0x8000, lsl #48
   259b0:	str	x0, [x21, #16]
   259b4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   259b8:	ldr	x2, [x0, #2592]
   259bc:	add	x0, x0, #0xa20
   259c0:	blr	x2
   259c4:	add	x0, x1, x0
   259c8:	ldr	w1, [x0]
   259cc:	orr	w1, w1, #0x4
   259d0:	str	w1, [x0]
   259d4:	mov	w0, #0x1                   	// #1
   259d8:	ldp	x19, x20, [sp, #16]
   259dc:	ldp	x21, x22, [sp, #32]
   259e0:	ldp	x29, x30, [sp], #48
   259e4:	ret
   259e8:	cbz	x22, 25988 <mpfr_urandomb@@Base+0xd0>
   259ec:	mov	x2, x19
   259f0:	mov	x1, x20
   259f4:	add	x0, x20, x22, lsl #3
   259f8:	bl	bb60 <__gmpn_copyd@plt>
   259fc:	lsl	x2, x22, #3
   25a00:	mov	x0, x20
   25a04:	mov	w1, #0x0                   	// #0
   25a08:	bl	c1a0 <memset@plt>
   25a0c:	b	25988 <mpfr_urandomb@@Base+0xd0>

0000000000025a10 <mpfr_get_z_2exp@@Base>:
   25a10:	stp	x29, x30, [sp, #-48]!
   25a14:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   25a18:	mov	x29, sp
   25a1c:	stp	x19, x20, [sp, #16]
   25a20:	mov	x20, x1
   25a24:	ldr	x1, [x1, #16]
   25a28:	str	x21, [sp, #32]
   25a2c:	mov	x21, x0
   25a30:	cmp	x1, x2
   25a34:	b.gt	25a98 <mpfr_get_z_2exp@@Base+0x88>
   25a38:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   25a3c:	mrs	x19, tpidr_el0
   25a40:	cmp	x1, x0
   25a44:	b.eq	25a68 <mpfr_get_z_2exp@@Base+0x58>  // b.none
   25a48:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   25a4c:	ldr	x1, [x0, #2592]
   25a50:	add	x0, x0, #0xa20
   25a54:	blr	x1
   25a58:	add	x0, x19, x0
   25a5c:	ldr	w1, [x0]
   25a60:	orr	w1, w1, #0x10
   25a64:	str	w1, [x0]
   25a68:	mov	x0, x21
   25a6c:	mov	x1, #0x0                   	// #0
   25a70:	bl	bd30 <__gmpz_set_ui@plt>
   25a74:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   25a78:	ldr	x1, [x0, #2528]
   25a7c:	add	x0, x0, #0x9e0
   25a80:	blr	x1
   25a84:	ldr	x0, [x19, x0]
   25a88:	ldp	x19, x20, [sp, #16]
   25a8c:	ldr	x21, [sp, #32]
   25a90:	ldp	x29, x30, [sp], #48
   25a94:	ret
   25a98:	ldr	x19, [x20]
   25a9c:	mov	x1, #0x7fffffff            	// #2147483647
   25aa0:	sub	x19, x19, #0x1
   25aa4:	asr	x19, x19, #6
   25aa8:	add	x19, x19, #0x1
   25aac:	cmp	x19, x1
   25ab0:	b.le	25acc <mpfr_get_z_2exp@@Base+0xbc>
   25ab4:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   25ab8:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   25abc:	add	x2, x2, #0x28c
   25ac0:	add	x0, x0, #0x29d
   25ac4:	mov	w1, #0x3c                  	// #60
   25ac8:	bl	cbd0 <mpfr_assert_fail@plt>
   25acc:	lsl	x1, x19, #6
   25ad0:	bl	c4d0 <__gmpz_realloc2@plt>
   25ad4:	ldr	x3, [x20]
   25ad8:	neg	w3, w3
   25adc:	ands	w3, w3, #0x3f
   25ae0:	b.eq	25b4c <mpfr_get_z_2exp@@Base+0x13c>  // b.none
   25ae4:	ldr	x0, [x21, #8]
   25ae8:	mov	x2, x19
   25aec:	ldr	x1, [x20, #24]
   25af0:	bl	bd60 <__gmpn_rshift@plt>
   25af4:	ldr	w0, [x20, #8]
   25af8:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   25afc:	ldr	x1, [x20]
   25b00:	cmp	w0, #0x0
   25b04:	ldr	x0, [x20, #16]
   25b08:	cneg	w19, w19, lt  // lt = tstop
   25b0c:	str	w19, [x21, #4]
   25b10:	add	x3, x0, x2
   25b14:	sub	x0, x0, x1
   25b18:	cmp	x3, x1
   25b1c:	b.cs	25a88 <mpfr_get_z_2exp@@Base+0x78>  // b.hs, b.nlast
   25b20:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   25b24:	ldr	x1, [x0, #2592]
   25b28:	add	x0, x0, #0xa20
   25b2c:	blr	x1
   25b30:	mrs	x1, tpidr_el0
   25b34:	add	x0, x1, x0
   25b38:	ldr	w1, [x0]
   25b3c:	orr	w1, w1, #0x10
   25b40:	str	w1, [x0]
   25b44:	mov	x0, x2
   25b48:	b	25a88 <mpfr_get_z_2exp@@Base+0x78>
   25b4c:	ldr	x0, [x21, #8]
   25b50:	ldr	x1, [x20, #24]
   25b54:	cmp	x0, x1
   25b58:	b.eq	25af4 <mpfr_get_z_2exp@@Base+0xe4>  // b.none
   25b5c:	lsl	x2, x19, #3
   25b60:	bl	ba90 <memcpy@plt>
   25b64:	b	25af4 <mpfr_get_z_2exp@@Base+0xe4>

0000000000025b68 <mpfr_swap@@Base>:
   25b68:	ldr	x3, [x0]
   25b6c:	ldr	x2, [x1]
   25b70:	str	x3, [x1]
   25b74:	ldr	w3, [x0, #8]
   25b78:	str	x2, [x0]
   25b7c:	ldr	w2, [x1, #8]
   25b80:	str	w3, [x1, #8]
   25b84:	str	w2, [x0, #8]
   25b88:	ldr	x3, [x0, #16]
   25b8c:	ldr	x2, [x1, #16]
   25b90:	str	x3, [x1, #16]
   25b94:	str	x2, [x0, #16]
   25b98:	ldr	x3, [x0, #24]
   25b9c:	ldr	x2, [x1, #24]
   25ba0:	str	x3, [x1, #24]
   25ba4:	str	x2, [x0, #24]
   25ba8:	ret

0000000000025bac <mpfr_fac_ui@@Base>:
   25bac:	stp	x29, x30, [sp, #-160]!
   25bb0:	cmp	x1, #0x1
   25bb4:	mov	x29, sp
   25bb8:	stp	x19, x20, [sp, #16]
   25bbc:	stp	x21, x22, [sp, #32]
   25bc0:	mov	w22, w2
   25bc4:	stp	x23, x24, [sp, #48]
   25bc8:	stp	x25, x26, [sp, #64]
   25bcc:	stp	x27, x28, [sp, #80]
   25bd0:	b.hi	25c08 <mpfr_fac_ui@@Base+0x5c>  // b.pmore
   25bd4:	mov	w3, w2
   25bd8:	mov	x1, #0x1                   	// #1
   25bdc:	mov	x2, #0x0                   	// #0
   25be0:	bl	c680 <mpfr_set_ui_2exp@plt>
   25be4:	mov	w26, w0
   25be8:	mov	w0, w26
   25bec:	ldp	x19, x20, [sp, #16]
   25bf0:	ldp	x21, x22, [sp, #32]
   25bf4:	ldp	x23, x24, [sp, #48]
   25bf8:	ldp	x25, x26, [sp, #64]
   25bfc:	ldp	x27, x28, [sp, #80]
   25c00:	ldp	x29, x30, [sp], #160
   25c04:	ret
   25c08:	mrs	x20, tpidr_el0
   25c0c:	mov	x24, x1
   25c10:	mov	x21, x0
   25c14:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   25c18:	ldr	x1, [x0, #2592]
   25c1c:	add	x0, x0, #0xa20
   25c20:	blr	x1
   25c24:	sub	x19, x24, #0x1
   25c28:	add	x27, sp, #0x80
   25c2c:	ldr	w0, [x20, x0]
   25c30:	mov	x23, #0x40                  	// #64
   25c34:	str	w0, [sp, #100]
   25c38:	mov	w25, #0x1                   	// #1
   25c3c:	ldr	x28, [x21]
   25c40:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   25c44:	ldr	x1, [x0, #2528]
   25c48:	add	x0, x0, #0x9e0
   25c4c:	blr	x1
   25c50:	add	x1, x20, x0
   25c54:	ldr	x0, [x20, x0]
   25c58:	str	x0, [sp, #104]
   25c5c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   25c60:	ldr	x2, [x0, #2560]
   25c64:	add	x0, x0, #0xa00
   25c68:	blr	x2
   25c6c:	ldr	x2, [x20, x0]
   25c70:	str	x2, [sp, #112]
   25c74:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   25c78:	str	x2, [x1]
   25c7c:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   25c80:	str	x1, [x20, x0]
   25c84:	clz	x0, x19
   25c88:	mov	w19, #0x40                  	// #64
   25c8c:	sub	w19, w19, w0
   25c90:	mov	x0, x27
   25c94:	lsl	w19, w19, #1
   25c98:	add	x19, x28, w19, sxtw
   25c9c:	add	x19, x19, #0x7
   25ca0:	mov	x1, x19
   25ca4:	bl	cb10 <mpfr_init2@plt>
   25ca8:	mov	x2, #0x0                   	// #0
   25cac:	mov	w3, w25
   25cb0:	mov	x0, x27
   25cb4:	mov	x1, #0x1                   	// #1
   25cb8:	bl	c680 <mpfr_set_ui_2exp@plt>
   25cbc:	mov	w26, w0
   25cc0:	mov	x2, #0x2                   	// #2
   25cc4:	mov	w3, w25
   25cc8:	mov	x1, x27
   25ccc:	mov	x0, x27
   25cd0:	str	x2, [sp, #120]
   25cd4:	bl	bad0 <mpfr_mul_ui@plt>
   25cd8:	ldr	x2, [sp, #120]
   25cdc:	cmp	w26, #0x0
   25ce0:	csel	w26, w26, w0, ne  // ne = any
   25ce4:	add	x2, x2, #0x1
   25ce8:	cmp	x24, x2
   25cec:	b.cs	25cc4 <mpfr_fac_ui@@Base+0x118>  // b.hs, b.nlast
   25cf0:	subs	x2, x19, #0x1
   25cf4:	b.eq	25dcc <mpfr_fac_ui@@Base+0x220>  // b.none
   25cf8:	b.gt	25d14 <mpfr_fac_ui@@Base+0x168>
   25cfc:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   25d00:	add	x2, x2, #0x2a9
   25d04:	mov	w1, #0x4d                  	// #77
   25d08:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   25d0c:	add	x0, x0, #0x2b2
   25d10:	bl	cbd0 <mpfr_assert_fail@plt>
   25d14:	clz	x0, x2
   25d18:	mov	w1, #0x40                  	// #64
   25d1c:	sub	w0, w1, w0
   25d20:	sxtw	x0, w0
   25d24:	cbnz	w26, 25dd4 <mpfr_fac_ui@@Base+0x228>
   25d28:	ldr	w3, [sp, #136]
   25d2c:	mov	w2, w22
   25d30:	mov	x1, x27
   25d34:	mov	x0, x21
   25d38:	bl	c730 <mpfr_set4@plt>
   25d3c:	cmp	w26, #0x0
   25d40:	cbnz	w26, 25e30 <mpfr_fac_ui@@Base+0x284>
   25d44:	mov	w26, w0
   25d48:	mov	x0, x27
   25d4c:	bl	c0f0 <mpfr_clear@plt>
   25d50:	ldr	w2, [sp, #100]
   25d54:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   25d58:	ldr	x1, [x0, #2592]
   25d5c:	add	x0, x0, #0xa20
   25d60:	blr	x1
   25d64:	add	x1, x20, x0
   25d68:	str	w2, [x20, x0]
   25d6c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   25d70:	ldr	x2, [x0, #2528]
   25d74:	add	x0, x0, #0x9e0
   25d78:	blr	x2
   25d7c:	ldr	x2, [sp, #104]
   25d80:	str	x2, [x20, x0]
   25d84:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   25d88:	ldr	x2, [x0, #2560]
   25d8c:	add	x0, x0, #0xa00
   25d90:	blr	x2
   25d94:	ldr	x2, [sp, #112]
   25d98:	str	x2, [x20, x0]
   25d9c:	ldr	x0, [x21, #16]
   25da0:	ldr	x2, [sp, #104]
   25da4:	cmp	x2, x0
   25da8:	b.gt	25db8 <mpfr_fac_ui@@Base+0x20c>
   25dac:	ldr	x2, [sp, #112]
   25db0:	cmp	x2, x0
   25db4:	b.ge	25e6c <mpfr_fac_ui@@Base+0x2c0>  // b.tcont
   25db8:	mov	w2, w22
   25dbc:	mov	w1, w26
   25dc0:	mov	x0, x21
   25dc4:	bl	cbc0 <mpfr_check_range@plt>
   25dc8:	b	25be4 <mpfr_fac_ui@@Base+0x38>
   25dcc:	mov	x0, #0x0                   	// #0
   25dd0:	b	25d24 <mpfr_fac_ui@@Base+0x178>
   25dd4:	ldr	x1, [sp, #144]
   25dd8:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   25ddc:	cmp	x1, x3
   25de0:	b.le	25e0c <mpfr_fac_ui@@Base+0x260>
   25de4:	ldr	x1, [sp, #128]
   25de8:	sub	x2, x2, x0
   25dec:	ldr	x0, [sp, #152]
   25df0:	cmp	w22, #0x0
   25df4:	sub	x1, x1, #0x1
   25df8:	cinc	x3, x28, eq  // eq = none
   25dfc:	asr	x1, x1, #6
   25e00:	add	x1, x1, #0x1
   25e04:	bl	c400 <mpfr_round_p@plt>
   25e08:	cbnz	w0, 25d28 <mpfr_fac_ui@@Base+0x17c>
   25e0c:	mov	x0, #0xfffffffffffffeff    	// #-257
   25e10:	movk	x0, #0x7fff, lsl #48
   25e14:	sub	x0, x0, x19
   25e18:	cmp	x0, x23
   25e1c:	b.ge	25e50 <mpfr_fac_ui@@Base+0x2a4>  // b.tcont
   25e20:	adrp	x2, 54000 <mpfr_free_pool@@Base+0x2eec>
   25e24:	mov	w1, #0x64                  	// #100
   25e28:	add	x2, x2, #0xa35
   25e2c:	b	25d08 <mpfr_fac_ui@@Base+0x15c>
   25e30:	ccmp	w0, #0x0, #0x0, lt  // lt = tstop
   25e34:	b.le	25d48 <mpfr_fac_ui@@Base+0x19c>
   25e38:	cmp	w26, #0x0
   25e3c:	ccmp	w0, #0x0, #0x1, gt
   25e40:	b.ge	25d48 <mpfr_fac_ui@@Base+0x19c>  // b.tcont
   25e44:	mov	w0, #0x3                   	// #3
   25e48:	sub	w25, w0, w25
   25e4c:	b	25e0c <mpfr_fac_ui@@Base+0x260>
   25e50:	add	x19, x19, x23
   25e54:	mov	x23, #0x2                   	// #2
   25e58:	mov	x1, x19
   25e5c:	mov	x0, x27
   25e60:	sdiv	x23, x19, x23
   25e64:	bl	bf50 <mpfr_set_prec@plt>
   25e68:	b	25ca8 <mpfr_fac_ui@@Base+0xfc>
   25e6c:	cbz	w26, 25be8 <mpfr_fac_ui@@Base+0x3c>
   25e70:	ldr	w0, [sp, #100]
   25e74:	orr	w0, w0, #0x8
   25e78:	str	w0, [x1]
   25e7c:	b	25be8 <mpfr_fac_ui@@Base+0x3c>

0000000000025e80 <mpfr_cosh@@Base>:
   25e80:	stp	x29, x30, [sp, #-368]!
   25e84:	mov	x29, sp
   25e88:	stp	x21, x22, [sp, #32]
   25e8c:	mov	w21, w2
   25e90:	ldr	x2, [x1, #16]
   25e94:	stp	x19, x20, [sp, #16]
   25e98:	mov	x19, x0
   25e9c:	stp	x23, x24, [sp, #48]
   25ea0:	mov	x24, x1
   25ea4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   25ea8:	stp	x25, x26, [sp, #64]
   25eac:	cmp	x2, x1
   25eb0:	stp	x27, x28, [sp, #80]
   25eb4:	b.gt	25f44 <mpfr_cosh@@Base+0xc4>
   25eb8:	mov	x3, #0x2                   	// #2
   25ebc:	movk	x3, #0x8000, lsl #48
   25ec0:	cmp	x2, x3
   25ec4:	b.ne	25f14 <mpfr_cosh@@Base+0x94>  // b.any
   25ec8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   25ecc:	ldr	x1, [x0, #2592]
   25ed0:	add	x0, x0, #0xa20
   25ed4:	blr	x1
   25ed8:	str	x2, [x19, #16]
   25edc:	mrs	x1, tpidr_el0
   25ee0:	add	x0, x1, x0
   25ee4:	ldr	w1, [x0]
   25ee8:	orr	w1, w1, #0x4
   25eec:	str	w1, [x0]
   25ef0:	mov	w22, #0x0                   	// #0
   25ef4:	mov	w0, w22
   25ef8:	ldp	x19, x20, [sp, #16]
   25efc:	ldp	x21, x22, [sp, #32]
   25f00:	ldp	x23, x24, [sp, #48]
   25f04:	ldp	x25, x26, [sp, #64]
   25f08:	ldp	x27, x28, [sp, #80]
   25f0c:	ldp	x29, x30, [sp], #368
   25f10:	ret
   25f14:	cmp	x2, x1
   25f18:	b.ne	25f2c <mpfr_cosh@@Base+0xac>  // b.any
   25f1c:	mov	w0, #0x1                   	// #1
   25f20:	str	w0, [x19, #8]
   25f24:	str	x2, [x19, #16]
   25f28:	b	25ef0 <mpfr_cosh@@Base+0x70>
   25f2c:	mov	w3, w21
   25f30:	mov	x2, #0x0                   	// #0
   25f34:	mov	x1, #0x1                   	// #1
   25f38:	bl	c680 <mpfr_set_ui_2exp@plt>
   25f3c:	mov	w22, w0
   25f40:	b	25ef4 <mpfr_cosh@@Base+0x74>
   25f44:	mrs	x20, tpidr_el0
   25f48:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   25f4c:	ldr	x1, [x0, #2592]
   25f50:	add	x0, x0, #0xa20
   25f54:	blr	x1
   25f58:	ldr	w23, [x20, x0]
   25f5c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   25f60:	ldr	x1, [x0, #2528]
   25f64:	add	x0, x0, #0x9e0
   25f68:	blr	x1
   25f6c:	add	x1, x20, x0
   25f70:	ldr	x0, [x20, x0]
   25f74:	str	x0, [sp, #104]
   25f78:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   25f7c:	ldr	x3, [x0, #2560]
   25f80:	add	x0, x0, #0xa00
   25f84:	blr	x3
   25f88:	ldr	x3, [x20, x0]
   25f8c:	str	x3, [sp, #112]
   25f90:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   25f94:	str	x3, [x1]
   25f98:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   25f9c:	str	x1, [x20, x0]
   25fa0:	mov	x0, #0xfffffffffffffffe    	// #-2
   25fa4:	mul	x2, x2, x0
   25fa8:	cmp	x2, #0x0
   25fac:	b.gt	25ff8 <mpfr_cosh@@Base+0x178>
   25fb0:	ldr	x0, [x24]
   25fb4:	str	x0, [sp, #128]
   25fb8:	ldr	x0, [x24, #24]
   25fbc:	str	x0, [sp, #152]
   25fc0:	mov	w0, #0x1                   	// #1
   25fc4:	str	w0, [sp, #136]
   25fc8:	ldr	x26, [x19]
   25fcc:	ldr	x0, [x24, #16]
   25fd0:	str	x0, [sp, #144]
   25fd4:	add	x4, x26, #0x3
   25fd8:	cmp	x26, #0x1
   25fdc:	b.ne	2609c <mpfr_cosh@@Base+0x21c>  // b.any
   25fe0:	mov	x0, #0x0                   	// #0
   25fe4:	add	x28, x4, x0
   25fe8:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   25fec:	cmp	x28, x0
   25ff0:	b.lt	260d0 <mpfr_cosh@@Base+0x250>  // b.tstop
   25ff4:	bl	c970 <mpfr_abort_prec_max@plt>
   25ff8:	ldr	x0, [x19]
   25ffc:	add	x0, x0, #0x1
   26000:	cmp	x2, x0
   26004:	b.ls	25fb0 <mpfr_cosh@@Base+0x130>  // b.plast
   26008:	adrp	x1, 73000 <__gmpfr_l2b@@Base+0x200>
   2600c:	mov	w4, w21
   26010:	mov	x0, x19
   26014:	mov	w3, #0x1                   	// #1
   26018:	ldr	x1, [x1, #3928]
   2601c:	bl	c5d0 <mpfr_round_near_x@plt>
   26020:	mov	w22, w0
   26024:	cbz	w0, 25fb0 <mpfr_cosh@@Base+0x130>
   26028:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2602c:	ldr	x1, [x0, #2592]
   26030:	add	x0, x0, #0xa20
   26034:	blr	x1
   26038:	add	x1, x20, x0
   2603c:	str	w23, [x20, x0]
   26040:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   26044:	ldr	x2, [x0, #2528]
   26048:	add	x0, x0, #0x9e0
   2604c:	blr	x2
   26050:	ldr	x2, [sp, #104]
   26054:	str	x2, [x20, x0]
   26058:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2605c:	ldr	x2, [x0, #2560]
   26060:	add	x0, x0, #0xa00
   26064:	blr	x2
   26068:	ldr	x2, [sp, #112]
   2606c:	str	x2, [x20, x0]
   26070:	ldr	x0, [x19, #16]
   26074:	ldr	x2, [sp, #104]
   26078:	cmp	x2, x0
   2607c:	b.gt	262c0 <mpfr_cosh@@Base+0x440>
   26080:	ldr	x2, [sp, #112]
   26084:	cmp	x2, x0
   26088:	b.lt	262c0 <mpfr_cosh@@Base+0x440>  // b.tstop
   2608c:	cbz	w22, 25ef4 <mpfr_cosh@@Base+0x74>
   26090:	orr	w23, w23, #0x8
   26094:	str	w23, [x1]
   26098:	b	25ef4 <mpfr_cosh@@Base+0x74>
   2609c:	b.gt	260b8 <mpfr_cosh@@Base+0x238>
   260a0:	adrp	x2, 54000 <mpfr_free_pool@@Base+0x2eec>
   260a4:	add	x2, x2, #0xa2c
   260a8:	mov	w1, #0x53                  	// #83
   260ac:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   260b0:	add	x0, x0, #0x2cc
   260b4:	bl	cbd0 <mpfr_assert_fail@plt>
   260b8:	sub	x0, x26, #0x1
   260bc:	clz	x1, x0
   260c0:	mov	w0, #0x40                  	// #64
   260c4:	sub	w0, w0, w1
   260c8:	sxtw	x0, w0
   260cc:	b	25fe4 <mpfr_cosh@@Base+0x164>
   260d0:	sub	x22, x28, #0x1
   260d4:	asr	x22, x22, #6
   260d8:	add	x22, x22, #0x1
   260dc:	lsl	x0, x22, #1
   260e0:	cmp	x0, #0x10
   260e4:	b.le	2618c <mpfr_cosh@@Base+0x30c>
   260e8:	lsl	x0, x22, #4
   260ec:	str	x0, [sp, #224]
   260f0:	bl	cd90 <mpfr_allocate_func@plt>
   260f4:	str	x0, [sp, #232]
   260f8:	add	x27, sp, #0xc0
   260fc:	mov	w0, #0x1                   	// #1
   26100:	add	x24, sp, #0xa0
   26104:	ldr	x1, [sp, #232]
   26108:	mov	x25, #0x40                  	// #64
   2610c:	str	x28, [sp, #160]
   26110:	str	w0, [sp, #168]
   26114:	add	x22, x1, x22, lsl #3
   26118:	str	x1, [sp, #184]
   2611c:	str	x28, [sp, #192]
   26120:	str	w0, [sp, #200]
   26124:	add	x0, sp, #0x80
   26128:	str	x0, [sp, #120]
   2612c:	str	x22, [sp, #216]
   26130:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   26134:	ldr	x1, [x0, #2592]
   26138:	add	x0, x0, #0xa20
   2613c:	blr	x1
   26140:	add	x22, x20, x0
   26144:	ldr	x1, [sp, #120]
   26148:	mov	w2, #0x3                   	// #3
   2614c:	str	wzr, [x20, x0]
   26150:	mov	x0, x27
   26154:	bl	c7e0 <mpfr_exp@plt>
   26158:	ldr	w0, [x22]
   2615c:	tbz	w0, #1, 26198 <mpfr_cosh@@Base+0x318>
   26160:	mov	w1, w21
   26164:	mov	x0, x19
   26168:	mov	w2, #0x1                   	// #1
   2616c:	orr	w23, w23, #0x2
   26170:	bl	bfc0 <mpfr_overflow@plt>
   26174:	mov	w22, w0
   26178:	ldr	x1, [sp, #224]
   2617c:	cbz	x1, 26028 <mpfr_cosh@@Base+0x1a8>
   26180:	ldr	x0, [sp, #232]
   26184:	bl	ccc0 <mpfr_free_func@plt>
   26188:	b	26028 <mpfr_cosh@@Base+0x1a8>
   2618c:	add	x0, sp, #0xf0
   26190:	str	xzr, [sp, #224]
   26194:	b	260f4 <mpfr_cosh@@Base+0x274>
   26198:	mov	x2, x27
   2619c:	mov	w3, #0x2                   	// #2
   261a0:	mov	x1, #0x1                   	// #1
   261a4:	mov	x0, x24
   261a8:	bl	c380 <mpfr_ui_div@plt>
   261ac:	mov	x2, x24
   261b0:	mov	x1, x27
   261b4:	mov	w3, #0x2                   	// #2
   261b8:	mov	x0, x24
   261bc:	bl	c230 <mpfr_add@plt>
   261c0:	mov	x1, x24
   261c4:	mov	x2, #0x1                   	// #1
   261c8:	mov	x0, x24
   261cc:	mov	w3, #0x0                   	// #0
   261d0:	bl	c980 <mpfr_div_2ui@plt>
   261d4:	ldr	x1, [sp, #176]
   261d8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   261dc:	sub	x2, x28, #0x3
   261e0:	cmp	x1, x0
   261e4:	b.le	26228 <mpfr_cosh@@Base+0x3a8>
   261e8:	ldr	x1, [sp, #160]
   261ec:	cmp	w21, #0x0
   261f0:	ldr	x0, [sp, #184]
   261f4:	sub	x1, x1, #0x1
   261f8:	cinc	x3, x26, eq  // eq = none
   261fc:	asr	x1, x1, #6
   26200:	add	x1, x1, #0x1
   26204:	bl	c400 <mpfr_round_p@plt>
   26208:	cbz	w0, 26228 <mpfr_cosh@@Base+0x3a8>
   2620c:	ldr	w3, [sp, #168]
   26210:	mov	w2, w21
   26214:	mov	x1, x24
   26218:	mov	x0, x19
   2621c:	bl	c730 <mpfr_set4@plt>
   26220:	mov	w22, w0
   26224:	b	26178 <mpfr_cosh@@Base+0x2f8>
   26228:	mov	x0, #0xfffffffffffffeff    	// #-257
   2622c:	movk	x0, #0x7fff, lsl #48
   26230:	sub	x0, x0, x28
   26234:	cmp	x0, x25
   26238:	b.ge	2624c <mpfr_cosh@@Base+0x3cc>  // b.tcont
   2623c:	adrp	x2, 54000 <mpfr_free_pool@@Base+0x2eec>
   26240:	mov	w1, #0x76                  	// #118
   26244:	add	x2, x2, #0xa35
   26248:	b	260ac <mpfr_cosh@@Base+0x22c>
   2624c:	add	x28, x28, x25
   26250:	mov	x25, #0x2                   	// #2
   26254:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   26258:	cmp	x28, x0
   2625c:	ldr	x1, [sp, #224]
   26260:	sdiv	x25, x28, x25
   26264:	b.ge	25ff4 <mpfr_cosh@@Base+0x174>  // b.tcont
   26268:	sub	x22, x28, #0x1
   2626c:	asr	x22, x22, #6
   26270:	add	x22, x22, #0x1
   26274:	lsl	x0, x22, #4
   26278:	str	x0, [sp, #224]
   2627c:	cbnz	x1, 262b0 <mpfr_cosh@@Base+0x430>
   26280:	bl	cd90 <mpfr_allocate_func@plt>
   26284:	str	x0, [sp, #232]
   26288:	mov	w0, #0x1                   	// #1
   2628c:	str	x28, [sp, #160]
   26290:	ldr	x1, [sp, #232]
   26294:	str	w0, [sp, #168]
   26298:	str	x1, [sp, #184]
   2629c:	str	x28, [sp, #192]
   262a0:	add	x22, x1, x22, lsl #3
   262a4:	str	w0, [sp, #200]
   262a8:	str	x22, [sp, #216]
   262ac:	b	26130 <mpfr_cosh@@Base+0x2b0>
   262b0:	mov	x2, x0
   262b4:	ldr	x0, [sp, #232]
   262b8:	bl	c250 <mpfr_reallocate_func@plt>
   262bc:	b	26284 <mpfr_cosh@@Base+0x404>
   262c0:	mov	w2, w21
   262c4:	mov	w1, w22
   262c8:	mov	x0, x19
   262cc:	bl	cbc0 <mpfr_check_range@plt>
   262d0:	b	25f3c <mpfr_cosh@@Base+0xbc>

00000000000262d4 <mpfr_sinh@@Base>:
   262d4:	stp	x29, x30, [sp, #-368]!
   262d8:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   262dc:	mov	x29, sp
   262e0:	stp	x23, x24, [sp, #48]
   262e4:	mov	w23, w2
   262e8:	ldr	x2, [x1, #16]
   262ec:	stp	x19, x20, [sp, #16]
   262f0:	mov	x20, x0
   262f4:	stp	x21, x22, [sp, #32]
   262f8:	cmp	x2, x3
   262fc:	mov	x22, x1
   26300:	stp	x25, x26, [sp, #64]
   26304:	stp	x27, x28, [sp, #80]
   26308:	b.gt	2638c <mpfr_sinh@@Base+0xb8>
   2630c:	mov	x0, #0x2                   	// #2
   26310:	movk	x0, #0x8000, lsl #48
   26314:	cmp	x2, x0
   26318:	b.ne	26368 <mpfr_sinh@@Base+0x94>  // b.any
   2631c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   26320:	ldr	x1, [x0, #2592]
   26324:	add	x0, x0, #0xa20
   26328:	blr	x1
   2632c:	str	x2, [x20, #16]
   26330:	mrs	x1, tpidr_el0
   26334:	add	x0, x1, x0
   26338:	ldr	w1, [x0]
   2633c:	orr	w1, w1, #0x4
   26340:	str	w1, [x0]
   26344:	mov	w19, #0x0                   	// #0
   26348:	mov	w0, w19
   2634c:	ldp	x19, x20, [sp, #16]
   26350:	ldp	x21, x22, [sp, #32]
   26354:	ldp	x23, x24, [sp, #48]
   26358:	ldp	x25, x26, [sp, #64]
   2635c:	ldp	x27, x28, [sp, #80]
   26360:	ldp	x29, x30, [sp], #368
   26364:	ret
   26368:	ldr	w0, [x1, #8]
   2636c:	cmp	x2, x3
   26370:	b.ne	26380 <mpfr_sinh@@Base+0xac>  // b.any
   26374:	str	x2, [x20, #16]
   26378:	str	w0, [x20, #8]
   2637c:	b	26344 <mpfr_sinh@@Base+0x70>
   26380:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   26384:	str	x1, [x20, #16]
   26388:	b	26378 <mpfr_sinh@@Base+0xa4>
   2638c:	mov	x3, #0xfffffffffffffffe    	// #-2
   26390:	mul	x2, x2, x3
   26394:	cmp	x2, #0x0
   26398:	b.gt	26448 <mpfr_sinh@@Base+0x174>
   2639c:	ldp	x1, x0, [x22, #16]
   263a0:	mrs	x24, tpidr_el0
   263a4:	stp	x1, x0, [sp, #144]
   263a8:	mov	w0, #0x1                   	// #1
   263ac:	str	w0, [sp, #136]
   263b0:	ldr	x2, [x22]
   263b4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   263b8:	ldr	x3, [x0, #2592]
   263bc:	add	x0, x0, #0xa20
   263c0:	blr	x3
   263c4:	ldr	w25, [x24, x0]
   263c8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   263cc:	ldr	x3, [x0, #2528]
   263d0:	add	x0, x0, #0x9e0
   263d4:	blr	x3
   263d8:	add	x3, x24, x0
   263dc:	str	x2, [sp, #128]
   263e0:	ldr	x0, [x24, x0]
   263e4:	str	x0, [sp, #112]
   263e8:	ldr	x19, [x20]
   263ec:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   263f0:	ldr	x4, [x0, #2560]
   263f4:	add	x0, x0, #0xa00
   263f8:	blr	x4
   263fc:	ldr	x4, [x24, x0]
   26400:	cmp	x19, x2
   26404:	str	x4, [sp, #120]
   26408:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   2640c:	str	x4, [x3]
   26410:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   26414:	str	x3, [x24, x0]
   26418:	csel	x2, x19, x2, ge  // ge = tcont
   2641c:	cmp	x2, #0x1
   26420:	b.ne	26474 <mpfr_sinh@@Base+0x1a0>  // b.any
   26424:	mov	x19, #0x0                   	// #0
   26428:	add	x19, x19, x2
   2642c:	add	x19, x19, #0x4
   26430:	tbz	x1, #63, 26438 <mpfr_sinh@@Base+0x164>
   26434:	sub	x19, x19, x1, lsl #1
   26438:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   2643c:	cmp	x19, x0
   26440:	b.lt	264a8 <mpfr_sinh@@Base+0x1d4>  // b.tstop
   26444:	bl	c970 <mpfr_abort_prec_max@plt>
   26448:	ldr	x3, [x0]
   2644c:	add	x2, x2, #0x2
   26450:	add	x3, x3, #0x1
   26454:	cmp	x3, x2
   26458:	b.cs	2639c <mpfr_sinh@@Base+0xc8>  // b.hs, b.nlast
   2645c:	mov	w4, w23
   26460:	mov	w3, #0x1                   	// #1
   26464:	bl	c5d0 <mpfr_round_near_x@plt>
   26468:	mov	w19, w0
   2646c:	cbz	w0, 2639c <mpfr_sinh@@Base+0xc8>
   26470:	b	26348 <mpfr_sinh@@Base+0x74>
   26474:	b.gt	26490 <mpfr_sinh@@Base+0x1bc>
   26478:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2647c:	add	x2, x2, #0x2a9
   26480:	mov	w1, #0x52                  	// #82
   26484:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   26488:	add	x0, x0, #0x327
   2648c:	bl	cbd0 <mpfr_assert_fail@plt>
   26490:	sub	x19, x2, #0x1
   26494:	clz	x0, x19
   26498:	mov	w19, #0x40                  	// #64
   2649c:	sub	w19, w19, w0
   264a0:	sxtw	x19, w19
   264a4:	b	26428 <mpfr_sinh@@Base+0x154>
   264a8:	sub	x21, x19, #0x1
   264ac:	asr	x21, x21, #6
   264b0:	add	x21, x21, #0x1
   264b4:	lsl	x0, x21, #1
   264b8:	cmp	x0, #0x10
   264bc:	b.le	26604 <mpfr_sinh@@Base+0x330>
   264c0:	lsl	x0, x21, #4
   264c4:	str	x0, [sp, #224]
   264c8:	bl	cd90 <mpfr_allocate_func@plt>
   264cc:	str	x0, [sp, #232]
   264d0:	add	x28, sp, #0x80
   264d4:	mov	w0, #0x1                   	// #1
   264d8:	add	x26, sp, #0xc0
   264dc:	ldr	x1, [sp, #232]
   264e0:	str	x19, [sp, #160]
   264e4:	str	w0, [sp, #168]
   264e8:	str	x1, [sp, #184]
   264ec:	add	x21, x1, x21, lsl #3
   264f0:	str	x21, [sp, #216]
   264f4:	add	x21, sp, #0xa0
   264f8:	str	x19, [sp, #192]
   264fc:	str	w0, [sp, #200]
   26500:	mov	x0, #0x40                  	// #64
   26504:	str	x0, [sp, #104]
   26508:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2650c:	ldr	x1, [x0, #2592]
   26510:	add	x0, x0, #0xa20
   26514:	blr	x1
   26518:	add	x27, x24, x0
   2651c:	mov	x1, x28
   26520:	mov	w2, #0x3                   	// #3
   26524:	str	wzr, [x24, x0]
   26528:	mov	x0, x21
   2652c:	bl	c7e0 <mpfr_exp@plt>
   26530:	ldr	w0, [x27]
   26534:	tbz	w0, #1, 266b8 <mpfr_sinh@@Base+0x3e4>
   26538:	mov	w3, #0x3                   	// #3
   2653c:	mov	x1, x28
   26540:	mov	x2, #0x1                   	// #1
   26544:	mov	x0, x26
   26548:	bl	c980 <mpfr_div_2ui@plt>
   2654c:	str	wzr, [x27]
   26550:	mov	x1, x26
   26554:	mov	x0, x21
   26558:	mov	w2, #0x3                   	// #3
   2655c:	bl	bb70 <mpfr_cosh@plt>
   26560:	ldr	w0, [x27]
   26564:	tbz	w0, #1, 26610 <mpfr_sinh@@Base+0x33c>
   26568:	ldr	w2, [x22, #8]
   2656c:	mov	w1, w23
   26570:	mov	x0, x20
   26574:	orr	w25, w25, #0x2
   26578:	bl	bfc0 <mpfr_overflow@plt>
   2657c:	mov	w19, w0
   26580:	ldr	x1, [sp, #224]
   26584:	cbz	x1, 26590 <mpfr_sinh@@Base+0x2bc>
   26588:	ldr	x0, [sp, #232]
   2658c:	bl	ccc0 <mpfr_free_func@plt>
   26590:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   26594:	ldr	x1, [x0, #2592]
   26598:	add	x0, x0, #0xa20
   2659c:	blr	x1
   265a0:	add	x1, x24, x0
   265a4:	str	w25, [x24, x0]
   265a8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   265ac:	ldr	x2, [x0, #2528]
   265b0:	add	x0, x0, #0x9e0
   265b4:	blr	x2
   265b8:	ldr	x2, [sp, #112]
   265bc:	str	x2, [x24, x0]
   265c0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   265c4:	ldr	x2, [x0, #2560]
   265c8:	add	x0, x0, #0xa00
   265cc:	blr	x2
   265d0:	ldr	x2, [sp, #120]
   265d4:	str	x2, [x24, x0]
   265d8:	ldr	x0, [x20, #16]
   265dc:	ldr	x2, [sp, #112]
   265e0:	cmp	x2, x0
   265e4:	b.gt	26804 <mpfr_sinh@@Base+0x530>
   265e8:	ldr	x2, [sp, #120]
   265ec:	cmp	x2, x0
   265f0:	b.lt	26804 <mpfr_sinh@@Base+0x530>  // b.tstop
   265f4:	cbz	w19, 26348 <mpfr_sinh@@Base+0x74>
   265f8:	orr	w25, w25, #0x8
   265fc:	str	w25, [x1]
   26600:	b	26348 <mpfr_sinh@@Base+0x74>
   26604:	add	x0, sp, #0xf0
   26608:	str	xzr, [sp, #224]
   2660c:	b	264cc <mpfr_sinh@@Base+0x1f8>
   26610:	mov	x1, x26
   26614:	mov	w2, #0x3                   	// #3
   26618:	mov	x0, x26
   2661c:	bl	262d4 <mpfr_sinh@@Base>
   26620:	mov	x2, x26
   26624:	mov	x1, x21
   26628:	mov	x0, x21
   2662c:	mov	w3, #0x3                   	// #3
   26630:	str	wzr, [x27]
   26634:	bl	bdd0 <mpfr_mul@plt>
   26638:	ldr	w0, [x27]
   2663c:	tbnz	w0, #1, 26568 <mpfr_sinh@@Base+0x294>
   26640:	mov	x1, x21
   26644:	mov	x0, x21
   26648:	mov	w3, #0x0                   	// #0
   2664c:	mov	x2, #0x1                   	// #1
   26650:	str	wzr, [x27]
   26654:	bl	c350 <mpfr_mul_2ui@plt>
   26658:	ldr	w0, [x27]
   2665c:	tbnz	w0, #1, 26568 <mpfr_sinh@@Base+0x294>
   26660:	ldr	x1, [sp, #176]
   26664:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   26668:	sub	x2, x19, #0x3
   2666c:	cmp	x1, x0
   26670:	b.le	26780 <mpfr_sinh@@Base+0x4ac>
   26674:	ldr	x1, [sp, #160]
   26678:	cmp	w23, #0x0
   2667c:	ldr	x0, [sp, #184]
   26680:	sub	x1, x1, #0x1
   26684:	ldr	x3, [x20]
   26688:	asr	x1, x1, #6
   2668c:	add	x1, x1, #0x1
   26690:	cinc	x3, x3, eq  // eq = none
   26694:	bl	c400 <mpfr_round_p@plt>
   26698:	cbz	w0, 26780 <mpfr_sinh@@Base+0x4ac>
   2669c:	ldr	w3, [x22, #8]
   266a0:	mov	w2, w23
   266a4:	mov	x1, x21
   266a8:	mov	x0, x20
   266ac:	bl	c730 <mpfr_set4@plt>
   266b0:	mov	w19, w0
   266b4:	b	26580 <mpfr_sinh@@Base+0x2ac>
   266b8:	mov	x2, x21
   266bc:	mov	w3, #0x2                   	// #2
   266c0:	mov	x1, #0x1                   	// #1
   266c4:	mov	x0, x26
   266c8:	ldr	x27, [sp, #176]
   266cc:	bl	c380 <mpfr_ui_div@plt>
   266d0:	mov	x2, x26
   266d4:	mov	x1, x21
   266d8:	mov	w3, #0x0                   	// #0
   266dc:	mov	x0, x21
   266e0:	bl	bbf0 <mpfr_sub@plt>
   266e4:	mov	x1, x21
   266e8:	mov	x0, x21
   266ec:	mov	w3, #0x0                   	// #0
   266f0:	mov	x2, #0x1                   	// #1
   266f4:	bl	c980 <mpfr_div_2ui@plt>
   266f8:	ldr	x0, [sp, #176]
   266fc:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   26700:	cmp	x0, x1
   26704:	b.eq	26780 <mpfr_sinh@@Base+0x4ac>  // b.none
   26708:	sub	x27, x27, x0
   2670c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   26710:	adds	x27, x27, #0x2
   26714:	csel	x27, x27, xzr, pl  // pl = nfrst
   26718:	cmp	x0, x1
   2671c:	add	x27, x27, #0x1
   26720:	sub	x27, x19, x27
   26724:	b.le	26754 <mpfr_sinh@@Base+0x480>
   26728:	ldr	x1, [sp, #160]
   2672c:	cmp	w23, #0x0
   26730:	ldr	x0, [sp, #184]
   26734:	sub	x1, x1, #0x1
   26738:	ldr	x3, [x20]
   2673c:	asr	x1, x1, #6
   26740:	mov	x2, x27
   26744:	add	x1, x1, #0x1
   26748:	cinc	x3, x3, eq  // eq = none
   2674c:	bl	c400 <mpfr_round_p@plt>
   26750:	cbnz	w0, 2669c <mpfr_sinh@@Base+0x3c8>
   26754:	ldr	x1, [sp, #104]
   26758:	add	x19, x19, x27
   2675c:	mov	x0, #0xfffffffffffffeff    	// #-257
   26760:	movk	x0, #0x7fff, lsl #48
   26764:	sub	x0, x0, x19
   26768:	cmp	x0, x1
   2676c:	b.ge	26788 <mpfr_sinh@@Base+0x4b4>  // b.tcont
   26770:	adrp	x2, 54000 <mpfr_free_pool@@Base+0x2eec>
   26774:	mov	w1, #0xaf                  	// #175
   26778:	add	x2, x2, #0xa35
   2677c:	b	26484 <mpfr_sinh@@Base+0x1b0>
   26780:	mov	x27, x19
   26784:	b	26754 <mpfr_sinh@@Base+0x480>
   26788:	ldr	x0, [sp, #104]
   2678c:	ldr	x1, [sp, #224]
   26790:	add	x19, x0, x19
   26794:	mov	x0, #0x2                   	// #2
   26798:	sdiv	x0, x19, x0
   2679c:	str	x0, [sp, #104]
   267a0:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   267a4:	cmp	x19, x0
   267a8:	b.ge	26444 <mpfr_sinh@@Base+0x170>  // b.tcont
   267ac:	sub	x27, x19, #0x1
   267b0:	asr	x27, x27, #6
   267b4:	add	x27, x27, #0x1
   267b8:	lsl	x0, x27, #4
   267bc:	str	x0, [sp, #224]
   267c0:	cbnz	x1, 267f4 <mpfr_sinh@@Base+0x520>
   267c4:	bl	cd90 <mpfr_allocate_func@plt>
   267c8:	str	x0, [sp, #232]
   267cc:	mov	w0, #0x1                   	// #1
   267d0:	str	x19, [sp, #160]
   267d4:	ldr	x1, [sp, #232]
   267d8:	str	w0, [sp, #168]
   267dc:	str	x1, [sp, #184]
   267e0:	str	x19, [sp, #192]
   267e4:	add	x27, x1, x27, lsl #3
   267e8:	str	w0, [sp, #200]
   267ec:	str	x27, [sp, #216]
   267f0:	b	26508 <mpfr_sinh@@Base+0x234>
   267f4:	mov	x2, x0
   267f8:	ldr	x0, [sp, #232]
   267fc:	bl	c250 <mpfr_reallocate_func@plt>
   26800:	b	267c8 <mpfr_sinh@@Base+0x4f4>
   26804:	mov	w1, w19
   26808:	mov	w2, w23
   2680c:	mov	x0, x20
   26810:	bl	cbc0 <mpfr_check_range@plt>
   26814:	mov	w19, w0
   26818:	b	26348 <mpfr_sinh@@Base+0x74>

000000000002681c <mpfr_tanh@@Base>:
   2681c:	stp	x29, x30, [sp, #-368]!
   26820:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   26824:	mov	x29, sp
   26828:	stp	x21, x22, [sp, #32]
   2682c:	mov	w21, w2
   26830:	ldr	x2, [x1, #16]
   26834:	stp	x19, x20, [sp, #16]
   26838:	mov	x20, x0
   2683c:	stp	x23, x24, [sp, #48]
   26840:	cmp	x2, x3
   26844:	mov	x23, x1
   26848:	stp	x25, x26, [sp, #64]
   2684c:	stp	x27, x28, [sp, #80]
   26850:	b.gt	268e4 <mpfr_tanh@@Base+0xc8>
   26854:	mov	x1, #0x2                   	// #2
   26858:	movk	x1, #0x8000, lsl #48
   2685c:	cmp	x2, x1
   26860:	b.ne	268b0 <mpfr_tanh@@Base+0x94>  // b.any
   26864:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   26868:	ldr	x1, [x0, #2592]
   2686c:	add	x0, x0, #0xa20
   26870:	blr	x1
   26874:	str	x2, [x20, #16]
   26878:	mrs	x1, tpidr_el0
   2687c:	add	x0, x1, x0
   26880:	ldr	w1, [x0]
   26884:	orr	w1, w1, #0x4
   26888:	str	w1, [x0]
   2688c:	mov	w19, #0x0                   	// #0
   26890:	mov	w0, w19
   26894:	ldp	x19, x20, [sp, #16]
   26898:	ldp	x21, x22, [sp, #32]
   2689c:	ldp	x23, x24, [sp, #48]
   268a0:	ldp	x25, x26, [sp, #64]
   268a4:	ldp	x27, x28, [sp, #80]
   268a8:	ldp	x29, x30, [sp], #368
   268ac:	ret
   268b0:	cmp	x2, x3
   268b4:	b.ne	268d0 <mpfr_tanh@@Base+0xb4>  // b.any
   268b8:	ldrsw	x1, [x23, #8]
   268bc:	mov	w3, w21
   268c0:	mov	x2, #0x0                   	// #0
   268c4:	bl	bb00 <mpfr_set_si_2exp@plt>
   268c8:	mov	w19, w0
   268cc:	b	26890 <mpfr_tanh@@Base+0x74>
   268d0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   268d4:	str	x0, [x20, #16]
   268d8:	ldr	w0, [x23, #8]
   268dc:	str	w0, [x20, #8]
   268e0:	b	2688c <mpfr_tanh@@Base+0x70>
   268e4:	mov	x3, #0xfffffffffffffffe    	// #-2
   268e8:	mul	x2, x2, x3
   268ec:	cmp	x2, #0x0
   268f0:	b.gt	26a7c <mpfr_tanh@@Base+0x260>
   268f4:	ldr	x0, [x23]
   268f8:	str	x0, [sp, #128]
   268fc:	ldr	x0, [x23, #24]
   26900:	str	x0, [sp, #152]
   26904:	ldr	x0, [x23, #16]
   26908:	mrs	x22, tpidr_el0
   2690c:	str	x0, [sp, #144]
   26910:	add	x27, sp, #0x80
   26914:	ldr	x25, [x20]
   26918:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2691c:	ldr	x1, [x0, #2592]
   26920:	add	x0, x0, #0xa20
   26924:	blr	x1
   26928:	ldr	w0, [x22, x0]
   2692c:	mov	w24, #0x1                   	// #1
   26930:	str	w0, [sp, #100]
   26934:	ldr	w19, [x23, #8]
   26938:	str	w24, [sp, #136]
   2693c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   26940:	ldr	x1, [x0, #2528]
   26944:	add	x0, x0, #0x9e0
   26948:	blr	x1
   2694c:	add	x1, x22, x0
   26950:	ldr	x0, [x22, x0]
   26954:	str	x0, [sp, #104]
   26958:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2695c:	ldr	x2, [x0, #2560]
   26960:	add	x0, x0, #0xa00
   26964:	blr	x2
   26968:	ldr	x2, [x22, x0]
   2696c:	str	x2, [sp, #112]
   26970:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   26974:	str	x2, [x1]
   26978:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   2697c:	mov	x2, #0x0                   	// #0
   26980:	str	x1, [x22, x0]
   26984:	mov	x0, x27
   26988:	mov	x1, #0x1fffffffffffffff    	// #2305843009213693951
   2698c:	bl	bfd0 <mpfr_cmp_ui_2exp@plt>
   26990:	tbnz	w0, #31, 26aa8 <mpfr_tanh@@Base+0x28c>
   26994:	mov	x1, #0x1                   	// #1
   26998:	add	x2, sp, #0xf0
   2699c:	add	x0, sp, #0xf8
   269a0:	str	x1, [sp, #160]
   269a4:	str	w1, [sp, #168]
   269a8:	stp	x2, x1, [sp, #184]
   269ac:	str	w24, [sp, #200]
   269b0:	stp	x0, xzr, [sp, #216]
   269b4:	str	x2, [sp, #232]
   269b8:	adrp	x1, 73000 <__gmpfr_l2b@@Base+0x200>
   269bc:	mov	w3, w19
   269c0:	mov	x0, x20
   269c4:	mov	w2, #0x0                   	// #0
   269c8:	ldr	x1, [x1, #3928]
   269cc:	bl	c730 <mpfr_set4@plt>
   269d0:	cmp	w21, #0x1
   269d4:	b.eq	269e4 <mpfr_tanh@@Base+0x1c8>  // b.none
   269d8:	add	w0, w21, w19, lsr #31
   269dc:	cmp	w0, #0x3
   269e0:	b.ne	269f0 <mpfr_tanh@@Base+0x1d4>  // b.any
   269e4:	neg	w19, w19
   269e8:	mov	x0, x20
   269ec:	bl	c4f0 <mpfr_nexttozero@plt>
   269f0:	ldr	x1, [sp, #224]
   269f4:	cbz	x1, 26a00 <mpfr_tanh@@Base+0x1e4>
   269f8:	ldr	x0, [sp, #232]
   269fc:	bl	ccc0 <mpfr_free_func@plt>
   26a00:	ldr	w2, [sp, #100]
   26a04:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   26a08:	ldr	x1, [x0, #2592]
   26a0c:	add	x0, x0, #0xa20
   26a10:	blr	x1
   26a14:	add	x1, x22, x0
   26a18:	str	w2, [x22, x0]
   26a1c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   26a20:	ldr	x2, [x0, #2528]
   26a24:	add	x0, x0, #0x9e0
   26a28:	blr	x2
   26a2c:	ldr	x2, [sp, #104]
   26a30:	str	x2, [x22, x0]
   26a34:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   26a38:	ldr	x2, [x0, #2560]
   26a3c:	add	x0, x0, #0xa00
   26a40:	blr	x2
   26a44:	ldr	x2, [sp, #112]
   26a48:	str	x2, [x22, x0]
   26a4c:	ldr	x0, [x20, #16]
   26a50:	ldr	x2, [sp, #104]
   26a54:	cmp	x2, x0
   26a58:	b.gt	26d1c <mpfr_tanh@@Base+0x500>
   26a5c:	ldr	x2, [sp, #112]
   26a60:	cmp	x2, x0
   26a64:	b.lt	26d1c <mpfr_tanh@@Base+0x500>  // b.tstop
   26a68:	cbz	w19, 26890 <mpfr_tanh@@Base+0x74>
   26a6c:	ldr	w0, [sp, #100]
   26a70:	orr	w0, w0, #0x8
   26a74:	str	w0, [x1]
   26a78:	b	26890 <mpfr_tanh@@Base+0x74>
   26a7c:	ldr	x3, [x0]
   26a80:	add	x2, x2, #0x1
   26a84:	add	x3, x3, #0x1
   26a88:	cmp	x3, x2
   26a8c:	b.cs	268f4 <mpfr_tanh@@Base+0xd8>  // b.hs, b.nlast
   26a90:	mov	w4, w21
   26a94:	mov	w3, #0x0                   	// #0
   26a98:	bl	c5d0 <mpfr_round_near_x@plt>
   26a9c:	mov	w19, w0
   26aa0:	cbz	w0, 268f4 <mpfr_tanh@@Base+0xd8>
   26aa4:	b	26890 <mpfr_tanh@@Base+0x74>
   26aa8:	cmp	x25, #0x1
   26aac:	b.eq	26b10 <mpfr_tanh@@Base+0x2f4>  // b.none
   26ab0:	b.gt	26acc <mpfr_tanh@@Base+0x2b0>
   26ab4:	adrp	x2, 54000 <mpfr_free_pool@@Base+0x2eec>
   26ab8:	add	x2, x2, #0xa2c
   26abc:	mov	w1, #0x60                  	// #96
   26ac0:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   26ac4:	add	x0, x0, #0x32f
   26ac8:	bl	cbd0 <mpfr_assert_fail@plt>
   26acc:	sub	x4, x25, #0x1
   26ad0:	clz	x0, x4
   26ad4:	mov	w4, #0x40                  	// #64
   26ad8:	sub	w4, w4, w0
   26adc:	sxtw	x4, w4
   26ae0:	ldr	x1, [sp, #144]
   26ae4:	add	x4, x4, x25
   26ae8:	add	x0, x4, #0x4
   26aec:	tbz	x1, #63, 26af4 <mpfr_tanh@@Base+0x2d8>
   26af0:	sub	x0, x0, x1
   26af4:	ldr	x4, [sp, #128]
   26af8:	cmp	x4, x0
   26afc:	csel	x28, x4, x0, ge  // ge = tcont
   26b00:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   26b04:	cmp	x28, x0
   26b08:	b.lt	26b18 <mpfr_tanh@@Base+0x2fc>  // b.tstop
   26b0c:	bl	c970 <mpfr_abort_prec_max@plt>
   26b10:	mov	x4, #0x0                   	// #0
   26b14:	b	26ae0 <mpfr_tanh@@Base+0x2c4>
   26b18:	sub	x23, x28, #0x1
   26b1c:	asr	x23, x23, #6
   26b20:	add	x23, x23, #0x1
   26b24:	lsl	x0, x23, #1
   26b28:	cmp	x0, #0x10
   26b2c:	b.le	26c64 <mpfr_tanh@@Base+0x448>
   26b30:	lsl	x0, x23, #4
   26b34:	str	x0, [sp, #224]
   26b38:	bl	cd90 <mpfr_allocate_func@plt>
   26b3c:	str	x0, [sp, #232]
   26b40:	add	x26, sp, #0xa0
   26b44:	mov	w0, #0x1                   	// #1
   26b48:	mov	x24, #0x40                  	// #64
   26b4c:	ldr	x1, [sp, #232]
   26b50:	str	x28, [sp, #160]
   26b54:	str	w0, [sp, #168]
   26b58:	str	x1, [sp, #184]
   26b5c:	add	x23, x1, x23, lsl #3
   26b60:	str	x23, [sp, #216]
   26b64:	add	x23, sp, #0xc0
   26b68:	str	x28, [sp, #192]
   26b6c:	str	w0, [sp, #200]
   26b70:	mov	w3, #0x0                   	// #0
   26b74:	mov	x1, x27
   26b78:	mov	x2, #0x1                   	// #1
   26b7c:	mov	x0, x23
   26b80:	bl	c350 <mpfr_mul_2ui@plt>
   26b84:	mov	x1, x23
   26b88:	mov	x0, x23
   26b8c:	mov	w2, #0x0                   	// #0
   26b90:	bl	c7e0 <mpfr_exp@plt>
   26b94:	ldr	x5, [sp, #208]
   26b98:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   26b9c:	cmp	x5, x0
   26ba0:	b.eq	269b8 <mpfr_tanh@@Base+0x19c>  // b.none
   26ba4:	mov	x1, x23
   26ba8:	mov	w3, #0x3                   	// #3
   26bac:	mov	x2, #0x1                   	// #1
   26bb0:	mov	x0, x26
   26bb4:	str	x5, [sp, #120]
   26bb8:	bl	c2f0 <mpfr_add_ui@plt>
   26bbc:	mov	x1, x23
   26bc0:	mov	w3, #0x2                   	// #2
   26bc4:	mov	x2, #0x1                   	// #1
   26bc8:	mov	x0, x23
   26bcc:	bl	c5c0 <mpfr_sub_ui@plt>
   26bd0:	ldr	x5, [sp, #120]
   26bd4:	mov	x2, x26
   26bd8:	ldr	x0, [sp, #208]
   26bdc:	mov	x1, x23
   26be0:	mov	w3, #0x0                   	// #0
   26be4:	sub	x5, x5, x0
   26be8:	mov	x0, x26
   26bec:	str	x5, [sp, #120]
   26bf0:	bl	c6b0 <mpfr_div@plt>
   26bf4:	ldr	x5, [sp, #120]
   26bf8:	mov	x0, #0x2                   	// #2
   26bfc:	cmp	x5, #0x2
   26c00:	csel	x5, x5, x0, ge  // ge = tcont
   26c04:	add	x2, x5, x0
   26c08:	cmp	x5, x28, asr #1
   26c0c:	sub	x2, x28, x2
   26c10:	b.ge	26c70 <mpfr_tanh@@Base+0x454>  // b.tcont
   26c14:	ldr	x0, [sp, #176]
   26c18:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   26c1c:	cmp	x0, x1
   26c20:	b.le	26c70 <mpfr_tanh@@Base+0x454>
   26c24:	ldr	x1, [sp, #160]
   26c28:	cmp	w21, #0x0
   26c2c:	ldr	x0, [sp, #184]
   26c30:	sub	x1, x1, #0x1
   26c34:	cinc	x3, x25, eq  // eq = none
   26c38:	asr	x1, x1, #6
   26c3c:	add	x1, x1, #0x1
   26c40:	bl	c400 <mpfr_round_p@plt>
   26c44:	cbz	w0, 26c70 <mpfr_tanh@@Base+0x454>
   26c48:	mov	w3, w19
   26c4c:	mov	w2, w21
   26c50:	mov	x1, x26
   26c54:	mov	x0, x20
   26c58:	bl	c730 <mpfr_set4@plt>
   26c5c:	mov	w19, w0
   26c60:	b	269f0 <mpfr_tanh@@Base+0x1d4>
   26c64:	add	x0, sp, #0xf0
   26c68:	str	xzr, [sp, #224]
   26c6c:	b	26b3c <mpfr_tanh@@Base+0x320>
   26c70:	ldr	x0, [sp, #176]
   26c74:	cmp	x0, #0x1
   26c78:	b.eq	269b8 <mpfr_tanh@@Base+0x19c>  // b.none
   26c7c:	mov	x0, #0xfffffffffffffeff    	// #-257
   26c80:	movk	x0, #0x7fff, lsl #48
   26c84:	sub	x0, x0, x28
   26c88:	cmp	x0, x24
   26c8c:	b.ge	26ca0 <mpfr_tanh@@Base+0x484>  // b.tcont
   26c90:	adrp	x2, 54000 <mpfr_free_pool@@Base+0x2eec>
   26c94:	mov	w1, #0x9a                  	// #154
   26c98:	add	x2, x2, #0xa35
   26c9c:	b	26ac0 <mpfr_tanh@@Base+0x2a4>
   26ca0:	add	x28, x28, x24
   26ca4:	mov	x24, #0x2                   	// #2
   26ca8:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   26cac:	cmp	x28, x0
   26cb0:	ldr	x1, [sp, #224]
   26cb4:	sdiv	x24, x28, x24
   26cb8:	b.ge	26b0c <mpfr_tanh@@Base+0x2f0>  // b.tcont
   26cbc:	sub	x0, x28, #0x1
   26cc0:	asr	x0, x0, #6
   26cc4:	add	x0, x0, #0x1
   26cc8:	str	x0, [sp, #120]
   26ccc:	lsl	x0, x0, #4
   26cd0:	str	x0, [sp, #224]
   26cd4:	cbnz	x1, 26d0c <mpfr_tanh@@Base+0x4f0>
   26cd8:	bl	cd90 <mpfr_allocate_func@plt>
   26cdc:	str	x0, [sp, #232]
   26ce0:	mov	w1, #0x1                   	// #1
   26ce4:	ldr	x2, [sp, #120]
   26ce8:	str	x28, [sp, #160]
   26cec:	ldr	x0, [sp, #232]
   26cf0:	str	w1, [sp, #168]
   26cf4:	str	x0, [sp, #184]
   26cf8:	str	x28, [sp, #192]
   26cfc:	add	x0, x0, x2, lsl #3
   26d00:	str	w1, [sp, #200]
   26d04:	str	x0, [sp, #216]
   26d08:	b	26b70 <mpfr_tanh@@Base+0x354>
   26d0c:	mov	x2, x0
   26d10:	ldr	x0, [sp, #232]
   26d14:	bl	c250 <mpfr_reallocate_func@plt>
   26d18:	b	26cdc <mpfr_tanh@@Base+0x4c0>
   26d1c:	mov	w2, w21
   26d20:	mov	w1, w19
   26d24:	mov	x0, x20
   26d28:	bl	cbc0 <mpfr_check_range@plt>
   26d2c:	b	268c8 <mpfr_tanh@@Base+0xac>

0000000000026d30 <mpfr_sinh_cosh@@Base>:
   26d30:	stp	x29, x30, [sp, #-416]!
   26d34:	cmp	x0, x1
   26d38:	mov	x29, sp
   26d3c:	stp	x19, x20, [sp, #16]
   26d40:	stp	x21, x22, [sp, #32]
   26d44:	stp	x23, x24, [sp, #48]
   26d48:	stp	x25, x26, [sp, #64]
   26d4c:	stp	x27, x28, [sp, #80]
   26d50:	b.ne	26d6c <mpfr_sinh_cosh@@Base+0x3c>  // b.any
   26d54:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   26d58:	add	x2, x2, #0x2be
   26d5c:	mov	w1, #0x28                  	// #40
   26d60:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   26d64:	add	x0, x0, #0x2c7
   26d68:	bl	cbd0 <mpfr_assert_fail@plt>
   26d6c:	mov	x20, x0
   26d70:	mov	x21, x1
   26d74:	ldr	x0, [x2, #16]
   26d78:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   26d7c:	mov	x23, x2
   26d80:	cmp	x0, x1
   26d84:	b.gt	26e3c <mpfr_sinh_cosh@@Base+0x10c>
   26d88:	mov	x2, #0x2                   	// #2
   26d8c:	movk	x2, #0x8000, lsl #48
   26d90:	cmp	x0, x2
   26d94:	b.ne	26de4 <mpfr_sinh_cosh@@Base+0xb4>  // b.any
   26d98:	str	x0, [x21, #16]
   26d9c:	str	x0, [x20, #16]
   26da0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   26da4:	ldr	x1, [x0, #2592]
   26da8:	add	x0, x0, #0xa20
   26dac:	blr	x1
   26db0:	mrs	x1, tpidr_el0
   26db4:	add	x0, x1, x0
   26db8:	ldr	w1, [x0]
   26dbc:	orr	w1, w1, #0x4
   26dc0:	str	w1, [x0]
   26dc4:	mov	w0, #0x0                   	// #0
   26dc8:	ldp	x19, x20, [sp, #16]
   26dcc:	ldp	x21, x22, [sp, #32]
   26dd0:	ldp	x23, x24, [sp, #48]
   26dd4:	ldp	x25, x26, [sp, #64]
   26dd8:	ldp	x27, x28, [sp, #80]
   26ddc:	ldp	x29, x30, [sp], #416
   26de0:	ret
   26de4:	cmp	x0, x1
   26de8:	ldr	w1, [x23, #8]
   26dec:	b.ne	26e08 <mpfr_sinh_cosh@@Base+0xd8>  // b.any
   26df0:	str	w1, [x20, #8]
   26df4:	str	x0, [x20, #16]
   26df8:	str	x0, [x21, #16]
   26dfc:	mov	w0, #0x1                   	// #1
   26e00:	str	w0, [x21, #8]
   26e04:	b	26dc4 <mpfr_sinh_cosh@@Base+0x94>
   26e08:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   26e0c:	str	w1, [x20, #8]
   26e10:	str	x0, [x20, #16]
   26e14:	mov	x2, #0x0                   	// #0
   26e18:	mov	x0, x21
   26e1c:	mov	x1, #0x1                   	// #1
   26e20:	bl	c680 <mpfr_set_ui_2exp@plt>
   26e24:	cmp	w0, #0x0
   26e28:	cbz	w0, 26dc8 <mpfr_sinh_cosh@@Base+0x98>
   26e2c:	mov	w0, #0x4                   	// #4
   26e30:	mov	w24, #0x8                   	// #8
   26e34:	csel	w0, w0, w24, gt
   26e38:	b	26dc8 <mpfr_sinh_cosh@@Base+0x98>
   26e3c:	ldr	x1, [x2]
   26e40:	str	x1, [sp, #144]
   26e44:	ldr	x1, [x2, #24]
   26e48:	mrs	x19, tpidr_el0
   26e4c:	str	x1, [sp, #168]
   26e50:	mov	w1, #0x1                   	// #1
   26e54:	str	w1, [sp, #152]
   26e58:	mov	w22, w3
   26e5c:	str	x0, [sp, #160]
   26e60:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   26e64:	ldr	x1, [x0, #2592]
   26e68:	add	x0, x0, #0xa20
   26e6c:	blr	x1
   26e70:	ldr	w0, [x19, x0]
   26e74:	str	w0, [sp, #100]
   26e78:	ldr	x24, [x20]
   26e7c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   26e80:	ldr	x1, [x0, #2528]
   26e84:	add	x0, x0, #0x9e0
   26e88:	blr	x1
   26e8c:	add	x1, x19, x0
   26e90:	ldr	x0, [x19, x0]
   26e94:	str	x0, [sp, #104]
   26e98:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   26e9c:	ldr	x2, [x0, #2560]
   26ea0:	add	x0, x0, #0xa00
   26ea4:	blr	x2
   26ea8:	ldr	x2, [x19, x0]
   26eac:	str	x2, [sp, #112]
   26eb0:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   26eb4:	str	x2, [x1]
   26eb8:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   26ebc:	str	x1, [x19, x0]
   26ec0:	ldr	x0, [x21]
   26ec4:	cmp	x24, x0
   26ec8:	csel	x0, x24, x0, ge  // ge = tcont
   26ecc:	cmp	x0, #0x1
   26ed0:	b.eq	26f14 <mpfr_sinh_cosh@@Base+0x1e4>  // b.none
   26ed4:	b.gt	26ee8 <mpfr_sinh_cosh@@Base+0x1b8>
   26ed8:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   26edc:	mov	w1, #0x60                  	// #96
   26ee0:	add	x2, x2, #0x2d3
   26ee4:	b	26d60 <mpfr_sinh_cosh@@Base+0x30>
   26ee8:	sub	x24, x0, #0x1
   26eec:	clz	x1, x24
   26ef0:	mov	w24, #0x40                  	// #64
   26ef4:	sub	w24, w24, w1
   26ef8:	sxtw	x24, w24
   26efc:	add	x24, x24, x0
   26f00:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   26f04:	add	x25, x24, #0x4
   26f08:	cmp	x25, x0
   26f0c:	b.lt	26f1c <mpfr_sinh_cosh@@Base+0x1ec>  // b.tstop
   26f10:	bl	c970 <mpfr_abort_prec_max@plt>
   26f14:	mov	x24, #0x0                   	// #0
   26f18:	b	26efc <mpfr_sinh_cosh@@Base+0x1cc>
   26f1c:	add	x24, x24, #0x3
   26f20:	mov	x0, #0x40                  	// #64
   26f24:	sdiv	x24, x24, x0
   26f28:	add	x24, x24, #0x1
   26f2c:	add	x0, x24, x24, lsl #1
   26f30:	cmp	x0, #0x10
   26f34:	b.le	270e4 <mpfr_sinh_cosh@@Base+0x3b4>
   26f38:	mov	x0, #0x18                  	// #24
   26f3c:	mul	x0, x24, x0
   26f40:	str	x0, [sp, #272]
   26f44:	bl	cd90 <mpfr_allocate_func@plt>
   26f48:	str	x0, [sp, #280]
   26f4c:	add	x28, sp, #0xf0
   26f50:	mov	w0, #0x1                   	// #1
   26f54:	add	x27, sp, #0xd0
   26f58:	ldr	x1, [sp, #280]
   26f5c:	mov	x26, #0x40                  	// #64
   26f60:	str	x25, [sp, #176]
   26f64:	str	w0, [sp, #184]
   26f68:	add	x2, x1, x24, lsl #3
   26f6c:	add	x24, x1, x24, lsl #4
   26f70:	str	x24, [sp, #264]
   26f74:	add	x24, sp, #0xb0
   26f78:	str	x1, [sp, #200]
   26f7c:	str	x25, [sp, #208]
   26f80:	str	w0, [sp, #216]
   26f84:	str	x2, [sp, #232]
   26f88:	str	x25, [sp, #240]
   26f8c:	str	w0, [sp, #248]
   26f90:	add	x0, sp, #0x90
   26f94:	str	x0, [sp, #128]
   26f98:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   26f9c:	ldr	x1, [x0, #2592]
   26fa0:	add	x0, x0, #0xa20
   26fa4:	blr	x1
   26fa8:	add	x3, x19, x0
   26fac:	ldr	x1, [sp, #128]
   26fb0:	mov	w2, #0x3                   	// #3
   26fb4:	str	wzr, [x19, x0]
   26fb8:	mov	x0, x24
   26fbc:	str	x3, [sp, #120]
   26fc0:	bl	c7e0 <mpfr_exp@plt>
   26fc4:	ldr	x3, [sp, #120]
   26fc8:	ldr	w0, [x3]
   26fcc:	tbz	w0, #1, 270f0 <mpfr_sinh_cosh@@Base+0x3c0>
   26fd0:	mov	w1, w22
   26fd4:	mov	w2, #0x1                   	// #1
   26fd8:	mov	x0, x21
   26fdc:	bl	bfc0 <mpfr_overflow@plt>
   26fe0:	mov	x1, x23
   26fe4:	mov	w24, w0
   26fe8:	mov	w2, w22
   26fec:	mov	x0, x20
   26ff0:	bl	c3b0 <mpfr_sinh@plt>
   26ff4:	mov	w23, w0
   26ff8:	ldr	w0, [sp, #100]
   26ffc:	orr	w0, w0, #0x2
   27000:	str	w0, [sp, #100]
   27004:	ldr	x1, [sp, #272]
   27008:	cbz	x1, 27014 <mpfr_sinh_cosh@@Base+0x2e4>
   2700c:	ldr	x0, [sp, #280]
   27010:	bl	ccc0 <mpfr_free_func@plt>
   27014:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   27018:	ldr	x1, [x0, #2592]
   2701c:	add	x0, x0, #0xa20
   27020:	blr	x1
   27024:	add	x2, x19, x0
   27028:	ldr	w1, [sp, #100]
   2702c:	str	w1, [x19, x0]
   27030:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   27034:	ldr	x1, [x0, #2528]
   27038:	add	x0, x0, #0x9e0
   2703c:	blr	x1
   27040:	ldr	x1, [sp, #104]
   27044:	str	x1, [x19, x0]
   27048:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2704c:	ldr	x1, [x0, #2560]
   27050:	add	x0, x0, #0xa00
   27054:	blr	x1
   27058:	ldr	x1, [sp, #112]
   2705c:	str	x1, [x19, x0]
   27060:	ldr	x1, [x20, #16]
   27064:	ldr	x0, [sp, #104]
   27068:	cmp	x0, x1
   2706c:	b.gt	272f8 <mpfr_sinh_cosh@@Base+0x5c8>
   27070:	ldr	x0, [sp, #112]
   27074:	cmp	x0, x1
   27078:	b.lt	272f8 <mpfr_sinh_cosh@@Base+0x5c8>  // b.tstop
   2707c:	cbnz	w23, 27310 <mpfr_sinh_cosh@@Base+0x5e0>
   27080:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   27084:	ldr	x2, [x0, #2528]
   27088:	add	x0, x0, #0x9e0
   2708c:	blr	x2
   27090:	ldr	x0, [x19, x0]
   27094:	ldr	x1, [x21, #16]
   27098:	cmp	x1, x0
   2709c:	b.lt	270bc <mpfr_sinh_cosh@@Base+0x38c>  // b.tstop
   270a0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   270a4:	ldr	x2, [x0, #2560]
   270a8:	add	x0, x0, #0xa00
   270ac:	blr	x2
   270b0:	ldr	x0, [x19, x0]
   270b4:	cmp	x1, x0
   270b8:	b.le	27320 <mpfr_sinh_cosh@@Base+0x5f0>
   270bc:	mov	w1, w24
   270c0:	mov	w2, w22
   270c4:	mov	x0, x21
   270c8:	bl	cbc0 <mpfr_check_range@plt>
   270cc:	cmp	w23, #0x0
   270d0:	mov	w24, w0
   270d4:	cbnz	w23, 27360 <mpfr_sinh_cosh@@Base+0x630>
   270d8:	cbnz	w24, 2734c <mpfr_sinh_cosh@@Base+0x61c>
   270dc:	orr	w0, w24, w23
   270e0:	b	26dc8 <mpfr_sinh_cosh@@Base+0x98>
   270e4:	add	x0, sp, #0x120
   270e8:	str	xzr, [sp, #272]
   270ec:	b	26f48 <mpfr_sinh_cosh@@Base+0x218>
   270f0:	ldr	x4, [sp, #192]
   270f4:	mov	x2, x24
   270f8:	mov	w3, #0x2                   	// #2
   270fc:	mov	x1, #0x1                   	// #1
   27100:	mov	x0, x28
   27104:	str	x4, [sp, #120]
   27108:	bl	c380 <mpfr_ui_div@plt>
   2710c:	mov	x2, x28
   27110:	mov	x1, x24
   27114:	mov	w3, #0x2                   	// #2
   27118:	mov	x0, x27
   2711c:	bl	c230 <mpfr_add@plt>
   27120:	mov	x2, x28
   27124:	mov	x1, x24
   27128:	mov	w3, #0x0                   	// #0
   2712c:	mov	x0, x24
   27130:	bl	bbf0 <mpfr_sub@plt>
   27134:	mov	x1, x27
   27138:	mov	w3, #0x0                   	// #0
   2713c:	mov	x2, #0x1                   	// #1
   27140:	mov	x0, x27
   27144:	bl	c980 <mpfr_div_2ui@plt>
   27148:	mov	x1, x24
   2714c:	mov	x0, x24
   27150:	mov	w3, #0x0                   	// #0
   27154:	mov	x2, #0x1                   	// #1
   27158:	bl	c980 <mpfr_div_2ui@plt>
   2715c:	ldr	x0, [sp, #192]
   27160:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   27164:	cmp	x0, x1
   27168:	b.eq	27238 <mpfr_sinh_cosh@@Base+0x508>  // b.none
   2716c:	ldr	x4, [sp, #120]
   27170:	sub	x2, x4, x0
   27174:	mov	x4, #0x8000000000000003    	// #-9223372036854775805
   27178:	adds	x2, x2, #0x2
   2717c:	csel	x2, x2, xzr, pl  // pl = nfrst
   27180:	cmp	x0, x4
   27184:	add	x2, x2, #0x1
   27188:	sub	x2, x25, x2
   2718c:	b.le	2723c <mpfr_sinh_cosh@@Base+0x50c>
   27190:	ldr	x1, [sp, #176]
   27194:	cmp	w22, #0x0
   27198:	ldr	x0, [sp, #200]
   2719c:	cset	x6, eq  // eq = none
   271a0:	sub	x1, x1, #0x1
   271a4:	str	x2, [sp, #120]
   271a8:	ldr	x3, [x20]
   271ac:	asr	x1, x1, #6
   271b0:	add	x1, x1, #0x1
   271b4:	str	x6, [sp, #136]
   271b8:	cinc	x3, x3, eq  // eq = none
   271bc:	bl	c400 <mpfr_round_p@plt>
   271c0:	ldr	x2, [sp, #120]
   271c4:	cbz	w0, 2723c <mpfr_sinh_cosh@@Base+0x50c>
   271c8:	ldr	x0, [sp, #224]
   271cc:	mov	x4, #0x8000000000000003    	// #-9223372036854775805
   271d0:	cmp	x0, x4
   271d4:	b.le	2723c <mpfr_sinh_cosh@@Base+0x50c>
   271d8:	ldr	x1, [sp, #208]
   271dc:	ldr	x6, [sp, #136]
   271e0:	sub	x1, x1, #0x1
   271e4:	ldr	x0, [sp, #232]
   271e8:	asr	x1, x1, #6
   271ec:	ldr	x3, [x21]
   271f0:	add	x1, x1, #0x1
   271f4:	add	x3, x6, x3
   271f8:	bl	c400 <mpfr_round_p@plt>
   271fc:	ldr	x2, [sp, #120]
   27200:	cbz	w0, 2723c <mpfr_sinh_cosh@@Base+0x50c>
   27204:	ldr	w3, [x23, #8]
   27208:	mov	x1, x24
   2720c:	mov	w2, w22
   27210:	mov	x0, x20
   27214:	bl	c730 <mpfr_set4@plt>
   27218:	mov	w23, w0
   2721c:	ldr	w3, [sp, #216]
   27220:	mov	w2, w22
   27224:	mov	x1, x27
   27228:	mov	x0, x21
   2722c:	bl	c730 <mpfr_set4@plt>
   27230:	mov	w24, w0
   27234:	b	27004 <mpfr_sinh_cosh@@Base+0x2d4>
   27238:	mov	x2, x25
   2723c:	add	x2, x25, x2
   27240:	mov	x0, #0xfffffffffffffeff    	// #-257
   27244:	movk	x0, #0x7fff, lsl #48
   27248:	sub	x0, x0, x2
   2724c:	cmp	x0, x26
   27250:	b.ge	27264 <mpfr_sinh_cosh@@Base+0x534>  // b.tcont
   27254:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   27258:	mov	w1, #0x94                  	// #148
   2725c:	add	x2, x2, #0x2db
   27260:	b	26d60 <mpfr_sinh_cosh@@Base+0x30>
   27264:	add	x25, x26, x2
   27268:	mov	x26, #0x2                   	// #2
   2726c:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   27270:	cmp	x25, x0
   27274:	ldr	x1, [sp, #272]
   27278:	sdiv	x26, x25, x26
   2727c:	b.ge	26f10 <mpfr_sinh_cosh@@Base+0x1e0>  // b.tcont
   27280:	sub	x0, x25, #0x1
   27284:	asr	x2, x0, #6
   27288:	add	x0, x2, #0x1
   2728c:	str	x0, [sp, #120]
   27290:	mov	x0, #0x18                  	// #24
   27294:	madd	x0, x2, x0, x0
   27298:	str	x0, [sp, #272]
   2729c:	cbnz	x1, 272e8 <mpfr_sinh_cosh@@Base+0x5b8>
   272a0:	bl	cd90 <mpfr_allocate_func@plt>
   272a4:	str	x0, [sp, #280]
   272a8:	mov	w1, #0x1                   	// #1
   272ac:	ldr	x2, [sp, #120]
   272b0:	str	x25, [sp, #176]
   272b4:	ldr	x0, [sp, #280]
   272b8:	str	w1, [sp, #184]
   272bc:	str	x0, [sp, #200]
   272c0:	str	x25, [sp, #208]
   272c4:	add	x2, x0, x2, lsl #3
   272c8:	str	x2, [sp, #232]
   272cc:	ldr	x2, [sp, #120]
   272d0:	str	w1, [sp, #216]
   272d4:	str	x25, [sp, #240]
   272d8:	str	w1, [sp, #248]
   272dc:	add	x0, x0, x2, lsl #4
   272e0:	str	x0, [sp, #264]
   272e4:	b	26f98 <mpfr_sinh_cosh@@Base+0x268>
   272e8:	mov	x2, x0
   272ec:	ldr	x0, [sp, #280]
   272f0:	bl	c250 <mpfr_reallocate_func@plt>
   272f4:	b	272a4 <mpfr_sinh_cosh@@Base+0x574>
   272f8:	mov	w1, w23
   272fc:	mov	w2, w22
   27300:	mov	x0, x20
   27304:	bl	cbc0 <mpfr_check_range@plt>
   27308:	mov	w23, w0
   2730c:	b	27080 <mpfr_sinh_cosh@@Base+0x350>
   27310:	ldr	w0, [sp, #100]
   27314:	orr	w25, w0, #0x8
   27318:	str	w25, [x2]
   2731c:	b	27080 <mpfr_sinh_cosh@@Base+0x350>
   27320:	cbz	w24, 2736c <mpfr_sinh_cosh@@Base+0x63c>
   27324:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   27328:	ldr	x1, [x0, #2592]
   2732c:	add	x0, x0, #0xa20
   27330:	blr	x1
   27334:	add	x19, x19, x0
   27338:	cmp	w23, #0x0
   2733c:	ldr	w1, [x19]
   27340:	orr	w1, w1, #0x8
   27344:	str	w1, [x19]
   27348:	cbnz	w23, 2737c <mpfr_sinh_cosh@@Base+0x64c>
   2734c:	cmp	w24, #0x0
   27350:	mov	w2, #0x4                   	// #4
   27354:	mov	w1, #0x8                   	// #8
   27358:	csel	w24, w2, w1, gt
   2735c:	b	270dc <mpfr_sinh_cosh@@Base+0x3ac>
   27360:	cset	w0, le
   27364:	add	w23, w0, #0x1
   27368:	b	270d8 <mpfr_sinh_cosh@@Base+0x3a8>
   2736c:	cmp	w23, #0x0
   27370:	cbnz	w23, 27388 <mpfr_sinh_cosh@@Base+0x658>
   27374:	mov	w24, w23
   27378:	b	270dc <mpfr_sinh_cosh@@Base+0x3ac>
   2737c:	cset	w0, le
   27380:	add	w23, w0, #0x1
   27384:	b	2734c <mpfr_sinh_cosh@@Base+0x61c>
   27388:	cset	w0, le
   2738c:	add	w23, w0, #0x1
   27390:	b	270dc <mpfr_sinh_cosh@@Base+0x3ac>

0000000000027394 <mpfr_acosh@@Base>:
   27394:	stp	x29, x30, [sp, #-192]!
   27398:	mov	x29, sp
   2739c:	stp	x19, x20, [sp, #16]
   273a0:	mov	x19, x0
   273a4:	ldr	x0, [x1, #16]
   273a8:	stp	x21, x22, [sp, #32]
   273ac:	mov	x22, x1
   273b0:	stp	x23, x24, [sp, #48]
   273b4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   273b8:	cmp	x0, x1
   273bc:	stp	x25, x26, [sp, #64]
   273c0:	stp	x27, x28, [sp, #80]
   273c4:	b.gt	27408 <mpfr_acosh@@Base+0x74>
   273c8:	b.ne	27428 <mpfr_acosh@@Base+0x94>  // b.any
   273cc:	ldr	w1, [x22, #8]
   273d0:	cmp	w1, #0x0
   273d4:	b.le	27428 <mpfr_acosh@@Base+0x94>
   273d8:	str	x0, [x19, #16]
   273dc:	mov	w0, #0x1                   	// #1
   273e0:	str	w0, [x19, #8]
   273e4:	mov	w21, #0x0                   	// #0
   273e8:	mov	w0, w21
   273ec:	ldp	x19, x20, [sp, #16]
   273f0:	ldp	x21, x22, [sp, #32]
   273f4:	ldp	x23, x24, [sp, #48]
   273f8:	ldp	x25, x26, [sp, #64]
   273fc:	ldp	x27, x28, [sp, #80]
   27400:	ldp	x29, x30, [sp], #192
   27404:	ret
   27408:	mov	w23, w2
   2740c:	mov	x0, x22
   27410:	mov	x2, #0x0                   	// #0
   27414:	mov	x1, #0x1                   	// #1
   27418:	bl	bfd0 <mpfr_cmp_ui_2exp@plt>
   2741c:	mov	w21, w0
   27420:	cmp	w0, #0x0
   27424:	b.ge	2745c <mpfr_acosh@@Base+0xc8>  // b.tcont
   27428:	mov	x0, #0x2                   	// #2
   2742c:	movk	x0, #0x8000, lsl #48
   27430:	str	x0, [x19, #16]
   27434:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   27438:	ldr	x1, [x0, #2592]
   2743c:	add	x0, x0, #0xa20
   27440:	blr	x1
   27444:	mrs	x1, tpidr_el0
   27448:	add	x0, x1, x0
   2744c:	ldr	w1, [x0]
   27450:	orr	w1, w1, #0x4
   27454:	str	w1, [x0]
   27458:	b	273e4 <mpfr_acosh@@Base+0x50>
   2745c:	b.ne	27474 <mpfr_acosh@@Base+0xe0>  // b.any
   27460:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   27464:	str	x0, [x19, #16]
   27468:	mov	w0, #0x1                   	// #1
   2746c:	str	w0, [x19, #8]
   27470:	b	273e8 <mpfr_acosh@@Base+0x54>
   27474:	mrs	x20, tpidr_el0
   27478:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2747c:	ldr	x1, [x0, #2592]
   27480:	add	x0, x0, #0xa20
   27484:	blr	x1
   27488:	ldr	x25, [x19]
   2748c:	ldr	w0, [x20, x0]
   27490:	str	w0, [sp, #100]
   27494:	add	x21, x25, #0x4
   27498:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2749c:	ldr	x1, [x0, #2528]
   274a0:	add	x0, x0, #0x9e0
   274a4:	blr	x1
   274a8:	add	x1, x20, x0
   274ac:	ldr	x0, [x20, x0]
   274b0:	str	x0, [sp, #104]
   274b4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   274b8:	ldr	x2, [x0, #2560]
   274bc:	add	x0, x0, #0xa00
   274c0:	blr	x2
   274c4:	ldr	x2, [x20, x0]
   274c8:	str	x2, [sp, #112]
   274cc:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   274d0:	str	x2, [x1]
   274d4:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   274d8:	str	x1, [x20, x0]
   274dc:	cmp	x25, #0x1
   274e0:	b.eq	2760c <mpfr_acosh@@Base+0x278>  // b.none
   274e4:	b.gt	27500 <mpfr_acosh@@Base+0x16c>
   274e8:	adrp	x2, 54000 <mpfr_free_pool@@Base+0x2eec>
   274ec:	add	x2, x2, #0xa2c
   274f0:	mov	w1, #0x53                  	// #83
   274f4:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   274f8:	add	x0, x0, #0x31e
   274fc:	bl	cbd0 <mpfr_assert_fail@plt>
   27500:	sub	x0, x25, #0x1
   27504:	clz	x1, x0
   27508:	mov	w0, #0x40                  	// #64
   2750c:	sub	w0, w0, w1
   27510:	sxtw	x0, w0
   27514:	add	x26, sp, #0xa0
   27518:	mov	x24, #0x40                  	// #64
   2751c:	mov	x28, #0x1                   	// #1
   27520:	add	x21, x21, x0
   27524:	add	x27, sp, #0x80
   27528:	mov	x1, x21
   2752c:	mov	x0, x27
   27530:	bl	cb10 <mpfr_init2@plt>
   27534:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   27538:	ldr	x1, [x0, #2592]
   2753c:	add	x0, x0, #0xa20
   27540:	blr	x1
   27544:	add	x5, x20, x0
   27548:	mov	x2, x22
   2754c:	mov	x1, x22
   27550:	mov	w3, #0x3                   	// #3
   27554:	str	wzr, [x20, x0]
   27558:	mov	x0, x27
   2755c:	str	x5, [sp, #120]
   27560:	bl	bdd0 <mpfr_mul@plt>
   27564:	ldr	x5, [sp, #120]
   27568:	ldr	w0, [x5]
   2756c:	tbz	w0, #1, 27614 <mpfr_acosh@@Base+0x280>
   27570:	mov	w2, #0x0                   	// #0
   27574:	mov	x1, x22
   27578:	mov	x0, x27
   2757c:	bl	c110 <mpfr_log@plt>
   27580:	ldr	x0, [sp, #144]
   27584:	cmp	x0, x21
   27588:	sub	x1, x21, x0
   2758c:	csel	x1, x1, x28, lt  // lt = tstop
   27590:	mov	x0, x26
   27594:	bl	cb10 <mpfr_init2@plt>
   27598:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2759c:	ldr	x1, [x0, #2576]
   275a0:	add	x0, x0, #0xa10
   275a4:	blr	x1
   275a8:	mov	w2, #0x0                   	// #0
   275ac:	add	x1, x20, x0
   275b0:	mov	x0, x26
   275b4:	bl	c410 <mpfr_cache@plt>
   275b8:	mov	x2, x26
   275bc:	mov	x1, x27
   275c0:	mov	w3, #0x0                   	// #0
   275c4:	mov	x0, x27
   275c8:	bl	c230 <mpfr_add@plt>
   275cc:	mov	x0, x26
   275d0:	bl	c0f0 <mpfr_clear@plt>
   275d4:	mov	x2, #0x1                   	// #1
   275d8:	ldr	x1, [sp, #144]
   275dc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   275e0:	cmp	x1, x0
   275e4:	b.gt	276e0 <mpfr_acosh@@Base+0x34c>
   275e8:	mov	x0, #0xfffffffffffffeff    	// #-257
   275ec:	movk	x0, #0x7fff, lsl #48
   275f0:	sub	x0, x0, x21
   275f4:	cmp	x0, x24
   275f8:	b.ge	277a4 <mpfr_acosh@@Base+0x410>  // b.tcont
   275fc:	adrp	x2, 54000 <mpfr_free_pool@@Base+0x2eec>
   27600:	mov	w1, #0x92                  	// #146
   27604:	add	x2, x2, #0xa35
   27608:	b	274f4 <mpfr_acosh@@Base+0x160>
   2760c:	mov	x0, #0x0                   	// #0
   27610:	b	27514 <mpfr_acosh@@Base+0x180>
   27614:	ldr	x5, [sp, #144]
   27618:	mov	x2, #0x1                   	// #1
   2761c:	mov	x1, x27
   27620:	mov	x0, x27
   27624:	mov	w3, #0x3                   	// #3
   27628:	str	x5, [sp, #120]
   2762c:	bl	c5c0 <mpfr_sub_ui@plt>
   27630:	ldr	x2, [sp, #144]
   27634:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   27638:	ldr	x5, [sp, #120]
   2763c:	cmp	x2, x0
   27640:	b.ne	27680 <mpfr_acosh@@Base+0x2ec>  // b.any
   27644:	mov	x1, x22
   27648:	mov	x0, x27
   2764c:	mov	w3, #0x3                   	// #3
   27650:	mov	x2, #0x1                   	// #1
   27654:	bl	c5c0 <mpfr_sub_ui@plt>
   27658:	mov	w3, #0x0                   	// #0
   2765c:	mov	x1, x27
   27660:	mov	x0, x27
   27664:	mov	x2, #0x1                   	// #1
   27668:	bl	c350 <mpfr_mul_2ui@plt>
   2766c:	mov	x1, x27
   27670:	mov	x0, x27
   27674:	mov	w2, #0x0                   	// #0
   27678:	bl	c9c0 <mpfr_sqrt@plt>
   2767c:	b	275d4 <mpfr_acosh@@Base+0x240>
   27680:	sub	x5, x5, x2
   27684:	mov	x1, x27
   27688:	mov	w2, #0x0                   	// #0
   2768c:	mov	x0, x27
   27690:	str	x5, [sp, #120]
   27694:	bl	c9c0 <mpfr_sqrt@plt>
   27698:	mov	w3, #0x0                   	// #0
   2769c:	mov	x2, x22
   276a0:	mov	x1, x27
   276a4:	mov	x0, x27
   276a8:	bl	c230 <mpfr_add@plt>
   276ac:	mov	w2, #0x0                   	// #0
   276b0:	mov	x1, x27
   276b4:	mov	x0, x27
   276b8:	bl	c110 <mpfr_log@plt>
   276bc:	ldr	x5, [sp, #120]
   276c0:	ldr	x0, [sp, #144]
   276c4:	cmp	x5, #0x0
   276c8:	csel	x2, x5, x28, gt
   276cc:	add	x2, x2, #0x3
   276d0:	subs	x2, x2, x0
   276d4:	csinv	x2, x2, xzr, pl  // pl = nfrst
   276d8:	add	x2, x2, #0x1
   276dc:	b	275d8 <mpfr_acosh@@Base+0x244>
   276e0:	ldr	x1, [sp, #128]
   276e4:	cmp	w23, #0x0
   276e8:	ldr	x0, [sp, #152]
   276ec:	sub	x1, x1, #0x1
   276f0:	cinc	x3, x25, eq  // eq = none
   276f4:	sub	x2, x21, x2
   276f8:	asr	x1, x1, #6
   276fc:	add	x1, x1, #0x1
   27700:	bl	c400 <mpfr_round_p@plt>
   27704:	cbz	w0, 275e8 <mpfr_acosh@@Base+0x254>
   27708:	ldr	w3, [sp, #136]
   2770c:	mov	x1, x27
   27710:	mov	w2, w23
   27714:	mov	x0, x19
   27718:	bl	c730 <mpfr_set4@plt>
   2771c:	mov	w21, w0
   27720:	mov	x0, x27
   27724:	bl	c0f0 <mpfr_clear@plt>
   27728:	ldr	w2, [sp, #100]
   2772c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   27730:	ldr	x1, [x0, #2592]
   27734:	add	x0, x0, #0xa20
   27738:	blr	x1
   2773c:	add	x1, x20, x0
   27740:	str	w2, [x20, x0]
   27744:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   27748:	ldr	x2, [x0, #2528]
   2774c:	add	x0, x0, #0x9e0
   27750:	blr	x2
   27754:	ldr	x2, [sp, #104]
   27758:	str	x2, [x20, x0]
   2775c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   27760:	ldr	x2, [x0, #2560]
   27764:	add	x0, x0, #0xa00
   27768:	blr	x2
   2776c:	ldr	x2, [sp, #112]
   27770:	str	x2, [x20, x0]
   27774:	ldr	x0, [x19, #16]
   27778:	ldr	x2, [sp, #104]
   2777c:	cmp	x2, x0
   27780:	b.gt	277c0 <mpfr_acosh@@Base+0x42c>
   27784:	ldr	x2, [sp, #112]
   27788:	cmp	x2, x0
   2778c:	b.lt	277c0 <mpfr_acosh@@Base+0x42c>  // b.tstop
   27790:	cbz	w21, 273e8 <mpfr_acosh@@Base+0x54>
   27794:	ldr	w0, [sp, #100]
   27798:	orr	w0, w0, #0x8
   2779c:	str	w0, [x1]
   277a0:	b	273e8 <mpfr_acosh@@Base+0x54>
   277a4:	add	x21, x21, x24
   277a8:	mov	x24, #0x2                   	// #2
   277ac:	mov	x1, x21
   277b0:	mov	x0, x27
   277b4:	sdiv	x24, x21, x24
   277b8:	bl	bf50 <mpfr_set_prec@plt>
   277bc:	b	27534 <mpfr_acosh@@Base+0x1a0>
   277c0:	mov	w1, w21
   277c4:	mov	w2, w23
   277c8:	mov	x0, x19
   277cc:	bl	cbc0 <mpfr_check_range@plt>
   277d0:	mov	w21, w0
   277d4:	b	273e8 <mpfr_acosh@@Base+0x54>

00000000000277d8 <mpfr_asinh@@Base>:
   277d8:	stp	x29, x30, [sp, #-160]!
   277dc:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   277e0:	mov	x29, sp
   277e4:	stp	x19, x20, [sp, #16]
   277e8:	mov	w20, w2
   277ec:	mov	x19, x1
   277f0:	ldr	x2, [x1, #16]
   277f4:	stp	x21, x22, [sp, #32]
   277f8:	stp	x23, x24, [sp, #48]
   277fc:	cmp	x2, x3
   27800:	stp	x25, x26, [sp, #64]
   27804:	stp	x27, x28, [sp, #80]
   27808:	mov	x27, x0
   2780c:	b.gt	27890 <mpfr_asinh@@Base+0xb8>
   27810:	mov	x0, #0x2                   	// #2
   27814:	movk	x0, #0x8000, lsl #48
   27818:	cmp	x2, x0
   2781c:	b.ne	2786c <mpfr_asinh@@Base+0x94>  // b.any
   27820:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   27824:	ldr	x1, [x0, #2592]
   27828:	add	x0, x0, #0xa20
   2782c:	blr	x1
   27830:	str	x2, [x27, #16]
   27834:	mrs	x1, tpidr_el0
   27838:	add	x0, x1, x0
   2783c:	ldr	w1, [x0]
   27840:	orr	w1, w1, #0x4
   27844:	str	w1, [x0]
   27848:	mov	w21, #0x0                   	// #0
   2784c:	mov	w0, w21
   27850:	ldp	x19, x20, [sp, #16]
   27854:	ldp	x21, x22, [sp, #32]
   27858:	ldp	x23, x24, [sp, #48]
   2785c:	ldp	x25, x26, [sp, #64]
   27860:	ldp	x27, x28, [sp, #80]
   27864:	ldp	x29, x30, [sp], #160
   27868:	ret
   2786c:	ldr	w0, [x1, #8]
   27870:	cmp	x2, x3
   27874:	b.ne	27884 <mpfr_asinh@@Base+0xac>  // b.any
   27878:	str	x2, [x27, #16]
   2787c:	str	w0, [x27, #8]
   27880:	b	27848 <mpfr_asinh@@Base+0x70>
   27884:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   27888:	str	x1, [x27, #16]
   2788c:	b	2787c <mpfr_asinh@@Base+0xa4>
   27890:	mov	x3, #0xfffffffffffffffe    	// #-2
   27894:	mul	x2, x2, x3
   27898:	cmp	x2, #0x0
   2789c:	b.gt	279dc <mpfr_asinh@@Base+0x204>
   278a0:	ldr	x23, [x27]
   278a4:	ldr	w26, [x19, #8]
   278a8:	add	x7, x23, #0x4
   278ac:	cmp	x23, #0x1
   278b0:	b.ne	27a08 <mpfr_asinh@@Base+0x230>  // b.any
   278b4:	mov	x0, #0x0                   	// #0
   278b8:	mrs	x28, tpidr_el0
   278bc:	add	x25, x7, x0
   278c0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   278c4:	ldr	x1, [x0, #2592]
   278c8:	add	x0, x0, #0xa20
   278cc:	blr	x1
   278d0:	add	x24, sp, #0x80
   278d4:	mov	x21, #0x40                  	// #64
   278d8:	ldr	w22, [x28, x0]
   278dc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   278e0:	ldr	x1, [x0, #2528]
   278e4:	add	x0, x0, #0x9e0
   278e8:	blr	x1
   278ec:	add	x1, x28, x0
   278f0:	ldr	x0, [x28, x0]
   278f4:	str	x0, [sp, #104]
   278f8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   278fc:	ldr	x2, [x0, #2560]
   27900:	add	x0, x0, #0xa00
   27904:	blr	x2
   27908:	ldr	x2, [x28, x0]
   2790c:	str	x2, [sp, #112]
   27910:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   27914:	str	x2, [x1]
   27918:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   2791c:	str	x1, [x28, x0]
   27920:	mov	x1, x25
   27924:	mov	x0, x24
   27928:	bl	cb10 <mpfr_init2@plt>
   2792c:	adrp	x1, 73000 <__gmpfr_l2b@@Base+0x200>
   27930:	adrp	x0, 73000 <__gmpfr_l2b@@Base+0x200>
   27934:	cmp	w26, #0x0
   27938:	ldr	x1, [x1, #3944]
   2793c:	ldr	x0, [x0, #4008]
   27940:	csel	x0, x1, x0, lt  // lt = tstop
   27944:	str	x0, [sp, #120]
   27948:	mov	x2, x19
   2794c:	mov	x1, x19
   27950:	mov	w3, #0x3                   	// #3
   27954:	mov	x0, x24
   27958:	bl	bdd0 <mpfr_mul@plt>
   2795c:	mov	w3, #0x3                   	// #3
   27960:	mov	x1, x24
   27964:	mov	x2, #0x1                   	// #1
   27968:	mov	x0, x24
   2796c:	bl	c2f0 <mpfr_add_ui@plt>
   27970:	mov	x1, x24
   27974:	mov	w2, #0x0                   	// #0
   27978:	mov	x0, x24
   2797c:	bl	c9c0 <mpfr_sqrt@plt>
   27980:	ldr	x4, [sp, #120]
   27984:	mov	w3, #0x0                   	// #0
   27988:	mov	x2, x19
   2798c:	mov	x1, x24
   27990:	mov	x0, x24
   27994:	blr	x4
   27998:	mov	w2, #0x0                   	// #0
   2799c:	mov	x1, x24
   279a0:	mov	x0, x24
   279a4:	bl	c110 <mpfr_log@plt>
   279a8:	ldr	x2, [sp, #144]
   279ac:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   279b0:	cmp	x2, x0
   279b4:	b.gt	27a3c <mpfr_asinh@@Base+0x264>
   279b8:	mov	x0, #0xfffffffffffffeff    	// #-257
   279bc:	movk	x0, #0x7fff, lsl #48
   279c0:	sub	x0, x0, x25
   279c4:	cmp	x0, x21
   279c8:	b.ge	27b08 <mpfr_asinh@@Base+0x330>  // b.tcont
   279cc:	adrp	x2, 54000 <mpfr_free_pool@@Base+0x2eec>
   279d0:	mov	w1, #0x6c                  	// #108
   279d4:	add	x2, x2, #0xa35
   279d8:	b	27a18 <mpfr_asinh@@Base+0x240>
   279dc:	ldr	x3, [x0]
   279e0:	add	x2, x2, #0x2
   279e4:	add	x3, x3, #0x1
   279e8:	cmp	x3, x2
   279ec:	b.cs	278a0 <mpfr_asinh@@Base+0xc8>  // b.hs, b.nlast
   279f0:	mov	w4, w20
   279f4:	mov	w3, #0x0                   	// #0
   279f8:	bl	c5d0 <mpfr_round_near_x@plt>
   279fc:	mov	w21, w0
   27a00:	cbz	w0, 278a0 <mpfr_asinh@@Base+0xc8>
   27a04:	b	2784c <mpfr_asinh@@Base+0x74>
   27a08:	b.gt	27a24 <mpfr_asinh@@Base+0x24c>
   27a0c:	adrp	x2, 54000 <mpfr_free_pool@@Base+0x2eec>
   27a10:	add	x2, x2, #0xa2c
   27a14:	mov	w1, #0x50                  	// #80
   27a18:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   27a1c:	add	x0, x0, #0x326
   27a20:	bl	cbd0 <mpfr_assert_fail@plt>
   27a24:	sub	x0, x23, #0x1
   27a28:	clz	x1, x0
   27a2c:	mov	w0, #0x40                  	// #64
   27a30:	sub	w0, w0, w1
   27a34:	sxtw	x0, w0
   27a38:	b	278b8 <mpfr_asinh@@Base+0xe0>
   27a3c:	ldr	x1, [sp, #128]
   27a40:	cmp	w20, #0x0
   27a44:	mov	x0, #0x4                   	// #4
   27a48:	cinc	x3, x23, eq  // eq = none
   27a4c:	subs	x2, x0, x2
   27a50:	sub	x1, x1, #0x1
   27a54:	ldr	x0, [sp, #152]
   27a58:	csel	x2, x2, xzr, pl  // pl = nfrst
   27a5c:	add	x2, x2, #0x1
   27a60:	asr	x1, x1, #6
   27a64:	sub	x2, x25, x2
   27a68:	add	x1, x1, #0x1
   27a6c:	bl	c400 <mpfr_round_p@plt>
   27a70:	cbz	w0, 279b8 <mpfr_asinh@@Base+0x1e0>
   27a74:	mov	w2, w20
   27a78:	mov	x1, x24
   27a7c:	mov	w3, w26
   27a80:	mov	x0, x27
   27a84:	bl	c730 <mpfr_set4@plt>
   27a88:	mov	w21, w0
   27a8c:	mov	x0, x24
   27a90:	bl	c0f0 <mpfr_clear@plt>
   27a94:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   27a98:	ldr	x1, [x0, #2592]
   27a9c:	add	x0, x0, #0xa20
   27aa0:	blr	x1
   27aa4:	add	x1, x28, x0
   27aa8:	str	w22, [x28, x0]
   27aac:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   27ab0:	ldr	x2, [x0, #2528]
   27ab4:	add	x0, x0, #0x9e0
   27ab8:	blr	x2
   27abc:	ldr	x2, [sp, #104]
   27ac0:	str	x2, [x28, x0]
   27ac4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   27ac8:	ldr	x2, [x0, #2560]
   27acc:	add	x0, x0, #0xa00
   27ad0:	blr	x2
   27ad4:	ldr	x2, [sp, #112]
   27ad8:	str	x2, [x28, x0]
   27adc:	ldr	x0, [x27, #16]
   27ae0:	ldr	x2, [sp, #104]
   27ae4:	cmp	x2, x0
   27ae8:	b.gt	27b24 <mpfr_asinh@@Base+0x34c>
   27aec:	ldr	x2, [sp, #112]
   27af0:	cmp	x2, x0
   27af4:	b.lt	27b24 <mpfr_asinh@@Base+0x34c>  // b.tstop
   27af8:	cbz	w21, 2784c <mpfr_asinh@@Base+0x74>
   27afc:	orr	w22, w22, #0x8
   27b00:	str	w22, [x1]
   27b04:	b	2784c <mpfr_asinh@@Base+0x74>
   27b08:	add	x25, x25, x21
   27b0c:	mov	x21, #0x2                   	// #2
   27b10:	mov	x1, x25
   27b14:	mov	x0, x24
   27b18:	sdiv	x21, x25, x21
   27b1c:	bl	bf50 <mpfr_set_prec@plt>
   27b20:	b	27948 <mpfr_asinh@@Base+0x170>
   27b24:	mov	w1, w21
   27b28:	mov	w2, w20
   27b2c:	mov	x0, x27
   27b30:	bl	cbc0 <mpfr_check_range@plt>
   27b34:	mov	w21, w0
   27b38:	b	2784c <mpfr_asinh@@Base+0x74>

0000000000027b3c <mpfr_atanh@@Base>:
   27b3c:	stp	x29, x30, [sp, #-352]!
   27b40:	mov	x29, sp
   27b44:	str	w2, [sp, #136]
   27b48:	ldr	x2, [x1, #16]
   27b4c:	stp	x19, x20, [sp, #16]
   27b50:	mov	x20, #0x8000000000000003    	// #-9223372036854775805
   27b54:	stp	x21, x22, [sp, #32]
   27b58:	cmp	x2, x20
   27b5c:	mov	x21, x0
   27b60:	stp	x23, x24, [sp, #48]
   27b64:	mov	x22, x1
   27b68:	stp	x25, x26, [sp, #64]
   27b6c:	stp	x27, x28, [sp, #80]
   27b70:	b.gt	27be4 <mpfr_atanh@@Base+0xa8>
   27b74:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   27b78:	add	x2, x2, x0
   27b7c:	cmp	x2, #0x1
   27b80:	b.hi	27bb0 <mpfr_atanh@@Base+0x74>  // b.pmore
   27b84:	add	x0, x0, #0x4
   27b88:	str	x0, [x21, #16]
   27b8c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   27b90:	ldr	x1, [x0, #2592]
   27b94:	add	x0, x0, #0xa20
   27b98:	blr	x1
   27b9c:	mrs	x1, tpidr_el0
   27ba0:	add	x0, x1, x0
   27ba4:	ldr	w1, [x0]
   27ba8:	orr	w1, w1, #0x4
   27bac:	b	27c2c <mpfr_atanh@@Base+0xf0>
   27bb0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   27bb4:	str	x0, [x21, #16]
   27bb8:	ldr	w0, [x1, #8]
   27bbc:	str	w0, [x21, #8]
   27bc0:	mov	w19, #0x0                   	// #0
   27bc4:	mov	w0, w19
   27bc8:	ldp	x19, x20, [sp, #16]
   27bcc:	ldp	x21, x22, [sp, #32]
   27bd0:	ldp	x23, x24, [sp, #48]
   27bd4:	ldp	x25, x26, [sp, #64]
   27bd8:	ldp	x27, x28, [sp, #80]
   27bdc:	ldp	x29, x30, [sp], #352
   27be0:	ret
   27be4:	cmp	x2, #0x0
   27be8:	b.le	27c58 <mpfr_atanh@@Base+0x11c>
   27bec:	cmp	x2, #0x1
   27bf0:	mrs	x19, tpidr_el0
   27bf4:	b.ne	27c34 <mpfr_atanh@@Base+0xf8>  // b.any
   27bf8:	mov	x0, x1
   27bfc:	bl	bf80 <mpfr_powerof2_raw@plt>
   27c00:	cbz	w0, 27c34 <mpfr_atanh@@Base+0xf8>
   27c04:	ldr	w0, [x22, #8]
   27c08:	str	w0, [x21, #8]
   27c0c:	str	x20, [x21, #16]
   27c10:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   27c14:	ldr	x1, [x0, #2592]
   27c18:	add	x0, x0, #0xa20
   27c1c:	blr	x1
   27c20:	add	x0, x19, x0
   27c24:	ldr	w1, [x0]
   27c28:	orr	w1, w1, #0x20
   27c2c:	str	w1, [x0]
   27c30:	b	27bc0 <mpfr_atanh@@Base+0x84>
   27c34:	mov	x0, #0x2                   	// #2
   27c38:	movk	x0, #0x8000, lsl #48
   27c3c:	str	x0, [x21, #16]
   27c40:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   27c44:	ldr	x1, [x0, #2592]
   27c48:	add	x0, x0, #0xa20
   27c4c:	blr	x1
   27c50:	add	x0, x19, x0
   27c54:	b	27ba4 <mpfr_atanh@@Base+0x68>
   27c58:	mov	x3, #0xfffffffffffffffe    	// #-2
   27c5c:	mul	x2, x2, x3
   27c60:	cbnz	x2, 27e30 <mpfr_atanh@@Base+0x2f4>
   27c64:	mrs	x23, tpidr_el0
   27c68:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   27c6c:	ldr	x1, [x0, #2592]
   27c70:	add	x0, x0, #0xa20
   27c74:	blr	x1
   27c78:	ldr	x19, [x22]
   27c7c:	str	x19, [sp, #160]
   27c80:	ldr	w0, [x23, x0]
   27c84:	str	w0, [sp, #140]
   27c88:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   27c8c:	ldr	x1, [x0, #2528]
   27c90:	add	x0, x0, #0x9e0
   27c94:	blr	x1
   27c98:	add	x1, x23, x0
   27c9c:	ldr	x0, [x23, x0]
   27ca0:	str	x0, [sp, #144]
   27ca4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   27ca8:	ldr	x2, [x0, #2560]
   27cac:	add	x0, x0, #0xa00
   27cb0:	blr	x2
   27cb4:	ldr	x2, [x23, x0]
   27cb8:	str	x2, [sp, #152]
   27cbc:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   27cc0:	str	x2, [x1]
   27cc4:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   27cc8:	str	x1, [x23, x0]
   27ccc:	ldr	x0, [x22, #24]
   27cd0:	str	x0, [sp, #184]
   27cd4:	mov	w0, #0x1                   	// #1
   27cd8:	str	w0, [sp, #168]
   27cdc:	ldr	x0, [x22, #16]
   27ce0:	str	x0, [sp, #176]
   27ce4:	ldr	x0, [x21]
   27ce8:	str	x0, [sp, #104]
   27cec:	cmp	x19, x0
   27cf0:	csel	x0, x19, x0, ge  // ge = tcont
   27cf4:	cmp	x0, #0x1
   27cf8:	b.ne	27e5c <mpfr_atanh@@Base+0x320>  // b.any
   27cfc:	mov	x19, #0x0                   	// #0
   27d00:	add	x19, x19, x0
   27d04:	add	x20, sp, #0xc0
   27d08:	add	x19, x19, #0x4
   27d0c:	mov	x0, x20
   27d10:	mov	x1, x19
   27d14:	add	x25, sp, #0xe0
   27d18:	bl	cb10 <mpfr_init2@plt>
   27d1c:	add	x26, sp, #0xa0
   27d20:	mov	x0, x25
   27d24:	mov	x1, x19
   27d28:	bl	cb10 <mpfr_init2@plt>
   27d2c:	add	x24, sp, #0x120
   27d30:	mov	x0, #0x40                  	// #64
   27d34:	add	x28, sp, #0x100
   27d38:	str	x0, [sp, #128]
   27d3c:	add	x0, sp, #0x140
   27d40:	str	x0, [sp, #120]
   27d44:	ldr	x0, [sp, #104]
   27d48:	bl	bcf0 <__gmpfr_int_ceil_log2@plt>
   27d4c:	add	w0, w0, #0x1
   27d50:	ldr	x1, [sp, #104]
   27d54:	sxtw	x0, w0
   27d58:	sdiv	x0, x1, x0
   27d5c:	ldr	x1, [sp, #176]
   27d60:	mvn	x0, x0
   27d64:	cmp	x1, x0
   27d68:	b.gt	27f28 <mpfr_atanh@@Base+0x3ec>
   27d6c:	ldr	x27, [sp, #192]
   27d70:	mov	x0, x24
   27d74:	mov	x1, x27
   27d78:	bl	cb10 <mpfr_init2@plt>
   27d7c:	ldr	x0, [sp, #120]
   27d80:	mov	x1, x27
   27d84:	bl	cb10 <mpfr_init2@plt>
   27d88:	mov	x1, x27
   27d8c:	mov	x0, x28
   27d90:	bl	cb10 <mpfr_init2@plt>
   27d94:	ldr	w3, [sp, #168]
   27d98:	mov	x1, x26
   27d9c:	mov	w2, #0x5                   	// #5
   27da0:	mov	x0, x24
   27da4:	bl	c730 <mpfr_set4@plt>
   27da8:	ldr	w3, [sp, #296]
   27dac:	mov	x1, x24
   27db0:	mov	w2, #0x5                   	// #5
   27db4:	mov	x0, x20
   27db8:	bl	c730 <mpfr_set4@plt>
   27dbc:	mov	x2, x26
   27dc0:	mov	x1, x26
   27dc4:	mov	x0, x28
   27dc8:	mov	w3, #0x5                   	// #5
   27dcc:	bl	bdd0 <mpfr_mul@plt>
   27dd0:	mov	x0, #0x3                   	// #3
   27dd4:	mov	x2, x28
   27dd8:	mov	x1, x24
   27ddc:	mov	w3, #0x5                   	// #5
   27de0:	str	x0, [sp, #112]
   27de4:	mov	x0, x24
   27de8:	bl	bdd0 <mpfr_mul@plt>
   27dec:	ldp	x2, x0, [sp, #112]
   27df0:	mov	x1, x24
   27df4:	mov	w3, #0x5                   	// #5
   27df8:	bl	cd00 <mpfr_div_ui@plt>
   27dfc:	ldr	x0, [sp, #208]
   27e00:	ldr	x1, [sp, #336]
   27e04:	sub	x0, x0, x27
   27e08:	cmp	x1, x0
   27e0c:	b.le	27e90 <mpfr_atanh@@Base+0x354>
   27e10:	ldr	x2, [sp, #120]
   27e14:	mov	x1, x20
   27e18:	mov	x0, x20
   27e1c:	mov	w3, #0x5                   	// #5
   27e20:	bl	c230 <mpfr_add@plt>
   27e24:	ldr	x0, [sp, #112]
   27e28:	add	x0, x0, #0x2
   27e2c:	b	27dd4 <mpfr_atanh@@Base+0x298>
   27e30:	ldr	x3, [x0]
   27e34:	add	x2, x2, #0x1
   27e38:	add	x3, x3, #0x1
   27e3c:	cmp	x3, x2
   27e40:	b.cs	27c64 <mpfr_atanh@@Base+0x128>  // b.hs, b.nlast
   27e44:	ldr	w4, [sp, #136]
   27e48:	mov	w3, #0x1                   	// #1
   27e4c:	bl	c5d0 <mpfr_round_near_x@plt>
   27e50:	mov	w19, w0
   27e54:	cbz	w0, 27c64 <mpfr_atanh@@Base+0x128>
   27e58:	b	27bc4 <mpfr_atanh@@Base+0x88>
   27e5c:	b.gt	27e78 <mpfr_atanh@@Base+0x33c>
   27e60:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   27e64:	add	x2, x2, #0x2a9
   27e68:	mov	w1, #0xa1                  	// #161
   27e6c:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   27e70:	add	x0, x0, #0x32e
   27e74:	bl	cbd0 <mpfr_assert_fail@plt>
   27e78:	sub	x19, x0, #0x1
   27e7c:	clz	x1, x19
   27e80:	mov	w19, #0x40                  	// #64
   27e84:	sub	w19, w19, w1
   27e88:	sxtw	x19, w19
   27e8c:	b	27d00 <mpfr_atanh@@Base+0x1c4>
   27e90:	ldr	x0, [sp, #112]
   27e94:	add	x0, x0, #0x8
   27e98:	lsr	x0, x0, #1
   27e9c:	bl	bcf0 <__gmpfr_int_ceil_log2@plt>
   27ea0:	mov	w2, w0
   27ea4:	add	w0, w0, #0x2
   27ea8:	cmp	x27, w0, sxtw
   27eac:	b.gt	27ec0 <mpfr_atanh@@Base+0x384>
   27eb0:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   27eb4:	mov	w1, #0x56                  	// #86
   27eb8:	add	x2, x2, #0x336
   27ebc:	b	27e6c <mpfr_atanh@@Base+0x330>
   27ec0:	mov	x0, x24
   27ec4:	str	w2, [sp, #112]
   27ec8:	bl	c0f0 <mpfr_clear@plt>
   27ecc:	ldr	x0, [sp, #120]
   27ed0:	bl	c0f0 <mpfr_clear@plt>
   27ed4:	mov	x0, x28
   27ed8:	bl	c0f0 <mpfr_clear@plt>
   27edc:	ldr	w2, [sp, #112]
   27ee0:	sub	x2, x19, w2, sxtw
   27ee4:	ldr	x0, [sp, #208]
   27ee8:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   27eec:	cmp	x0, x1
   27ef0:	b.eq	27fd0 <mpfr_atanh@@Base+0x494>  // b.none
   27ef4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   27ef8:	cmp	x0, x1
   27efc:	b.gt	27fa4 <mpfr_atanh@@Base+0x468>
   27f00:	ldr	x1, [sp, #128]
   27f04:	mov	x0, #0xfffffffffffffeff    	// #-257
   27f08:	movk	x0, #0x7fff, lsl #48
   27f0c:	sub	x0, x0, x19
   27f10:	cmp	x0, x1
   27f14:	b.ge	28074 <mpfr_atanh@@Base+0x538>  // b.tcont
   27f18:	adrp	x2, 54000 <mpfr_free_pool@@Base+0x2eec>
   27f1c:	mov	w1, #0xca                  	// #202
   27f20:	add	x2, x2, #0xa35
   27f24:	b	27e6c <mpfr_atanh@@Base+0x330>
   27f28:	mov	x2, x26
   27f2c:	mov	w3, #0x2                   	// #2
   27f30:	mov	x1, #0x1                   	// #1
   27f34:	mov	x0, x25
   27f38:	bl	cae0 <mpfr_ui_sub@plt>
   27f3c:	mov	x1, x26
   27f40:	mov	w3, #0x3                   	// #3
   27f44:	mov	x2, #0x1                   	// #1
   27f48:	mov	x0, x20
   27f4c:	bl	c2f0 <mpfr_add_ui@plt>
   27f50:	mov	w3, #0x0                   	// #0
   27f54:	mov	x2, x25
   27f58:	mov	x1, x20
   27f5c:	mov	x0, x20
   27f60:	bl	c6b0 <mpfr_div@plt>
   27f64:	mov	x1, x20
   27f68:	mov	w2, #0x0                   	// #0
   27f6c:	mov	x0, x20
   27f70:	bl	c110 <mpfr_log@plt>
   27f74:	mov	x2, #0x1                   	// #1
   27f78:	mov	x1, x20
   27f7c:	mov	x0, x20
   27f80:	mov	w3, #0x0                   	// #0
   27f84:	bl	c980 <mpfr_div_2ui@plt>
   27f88:	ldr	x0, [sp, #208]
   27f8c:	mov	x2, #0x4                   	// #4
   27f90:	subs	x2, x2, x0
   27f94:	csel	x2, x2, xzr, pl  // pl = nfrst
   27f98:	add	x2, x2, #0x1
   27f9c:	sub	x2, x19, x2
   27fa0:	b	27ee4 <mpfr_atanh@@Base+0x3a8>
   27fa4:	ldr	w0, [sp, #136]
   27fa8:	ldr	x1, [sp, #192]
   27fac:	cmp	w0, #0x0
   27fb0:	ldr	x0, [sp, #104]
   27fb4:	sub	x1, x1, #0x1
   27fb8:	cinc	x3, x0, eq  // eq = none
   27fbc:	asr	x1, x1, #6
   27fc0:	ldr	x0, [sp, #216]
   27fc4:	add	x1, x1, #0x1
   27fc8:	bl	c400 <mpfr_round_p@plt>
   27fcc:	cbz	w0, 27f00 <mpfr_atanh@@Base+0x3c4>
   27fd0:	ldr	w2, [sp, #136]
   27fd4:	mov	x1, x20
   27fd8:	ldr	w3, [x22, #8]
   27fdc:	mov	x0, x21
   27fe0:	bl	c730 <mpfr_set4@plt>
   27fe4:	mov	w19, w0
   27fe8:	mov	x0, x20
   27fec:	bl	c0f0 <mpfr_clear@plt>
   27ff0:	mov	x0, x25
   27ff4:	bl	c0f0 <mpfr_clear@plt>
   27ff8:	ldr	w2, [sp, #140]
   27ffc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   28000:	ldr	x1, [x0, #2592]
   28004:	add	x0, x0, #0xa20
   28008:	blr	x1
   2800c:	add	x1, x23, x0
   28010:	str	w2, [x23, x0]
   28014:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   28018:	ldr	x2, [x0, #2528]
   2801c:	add	x0, x0, #0x9e0
   28020:	blr	x2
   28024:	ldr	x2, [sp, #144]
   28028:	str	x2, [x23, x0]
   2802c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   28030:	ldr	x2, [x0, #2560]
   28034:	add	x0, x0, #0xa00
   28038:	blr	x2
   2803c:	ldr	x2, [sp, #152]
   28040:	str	x2, [x23, x0]
   28044:	ldr	x0, [x21, #16]
   28048:	ldr	x2, [sp, #144]
   2804c:	cmp	x2, x0
   28050:	b.gt	280a4 <mpfr_atanh@@Base+0x568>
   28054:	ldr	x2, [sp, #152]
   28058:	cmp	x2, x0
   2805c:	b.lt	280a4 <mpfr_atanh@@Base+0x568>  // b.tstop
   28060:	cbz	w19, 27bc4 <mpfr_atanh@@Base+0x88>
   28064:	ldr	w0, [sp, #140]
   28068:	orr	w0, w0, #0x8
   2806c:	str	w0, [x1]
   28070:	b	27bc4 <mpfr_atanh@@Base+0x88>
   28074:	ldr	x0, [sp, #128]
   28078:	add	x19, x19, x0
   2807c:	mov	x0, #0x2                   	// #2
   28080:	mov	x1, x19
   28084:	sdiv	x0, x19, x0
   28088:	str	x0, [sp, #128]
   2808c:	mov	x0, x20
   28090:	bl	bf50 <mpfr_set_prec@plt>
   28094:	mov	x1, x19
   28098:	mov	x0, x25
   2809c:	bl	bf50 <mpfr_set_prec@plt>
   280a0:	b	27d44 <mpfr_atanh@@Base+0x208>
   280a4:	ldr	w2, [sp, #136]
   280a8:	mov	w1, w19
   280ac:	mov	x0, x21
   280b0:	bl	cbc0 <mpfr_check_range@plt>
   280b4:	mov	w19, w0
   280b8:	b	27bc4 <mpfr_atanh@@Base+0x88>
   280bc:	stp	x29, x30, [sp, #-48]!
   280c0:	mov	x29, sp
   280c4:	stp	x19, x20, [sp, #16]
   280c8:	mov	x19, x0
   280cc:	mov	x0, #0x3                   	// #3
   280d0:	ldr	x20, [x19]
   280d4:	str	x21, [sp, #32]
   280d8:	ldr	x21, [x19, #24]
   280dc:	sub	x2, x20, #0x1
   280e0:	neg	w20, w20
   280e4:	asr	x2, x2, #6
   280e8:	add	x2, x2, #0x1
   280ec:	sub	x0, x0, x2
   280f0:	add	x1, x1, x0, lsl #3
   280f4:	mov	x0, x21
   280f8:	bl	c5b0 <__gmpn_copyi@plt>
   280fc:	ldr	x0, [x21]
   28100:	mov	x1, #0x1                   	// #1
   28104:	lsl	x1, x1, x20
   28108:	neg	x1, x1
   2810c:	and	x1, x0, x1
   28110:	str	x1, [x21]
   28114:	ldr	x21, [sp, #32]
   28118:	str	xzr, [x19, #16]
   2811c:	ldp	x19, x20, [sp, #16]
   28120:	ldp	x29, x30, [sp], #48
   28124:	ret

0000000000028128 <mpfr_atan@@Base>:
   28128:	mov	x12, #0x12a0                	// #4768
   2812c:	sub	sp, sp, x12
   28130:	mov	x4, #0x8000000000000003    	// #-9223372036854775805
   28134:	stp	x29, x30, [sp]
   28138:	mov	x29, sp
   2813c:	ldr	x3, [x1, #16]
   28140:	stp	x19, x20, [sp, #16]
   28144:	mov	x20, x0
   28148:	stp	x21, x22, [sp, #32]
   2814c:	cmp	x3, x4
   28150:	mov	w22, w2
   28154:	stp	x23, x24, [sp, #48]
   28158:	stp	x25, x26, [sp, #64]
   2815c:	stp	x27, x28, [sp, #80]
   28160:	str	x1, [sp, #112]
   28164:	b.gt	28330 <mpfr_atan@@Base+0x208>
   28168:	mov	x0, #0x2                   	// #2
   2816c:	movk	x0, #0x8000, lsl #48
   28170:	cmp	x3, x0
   28174:	b.ne	281a8 <mpfr_atan@@Base+0x80>  // b.any
   28178:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2817c:	ldr	x1, [x0, #2592]
   28180:	add	x0, x0, #0xa20
   28184:	blr	x1
   28188:	str	x3, [x20, #16]
   2818c:	mrs	x1, tpidr_el0
   28190:	add	x0, x1, x0
   28194:	ldr	w1, [x0]
   28198:	orr	w1, w1, #0x4
   2819c:	str	w1, [x0]
   281a0:	mov	w19, #0x0                   	// #0
   281a4:	b	282a0 <mpfr_atan@@Base+0x178>
   281a8:	ldr	x0, [sp, #112]
   281ac:	cmp	x3, x4
   281b0:	ldr	w1, [x0, #8]
   281b4:	b.ne	28320 <mpfr_atan@@Base+0x1f8>  // b.any
   281b8:	mrs	x21, tpidr_el0
   281bc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   281c0:	ldr	x3, [x0, #2592]
   281c4:	add	x0, x0, #0xa20
   281c8:	blr	x3
   281cc:	ldr	w23, [x21, x0]
   281d0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   281d4:	ldr	x3, [x0, #2528]
   281d8:	add	x0, x0, #0x9e0
   281dc:	blr	x3
   281e0:	add	x3, x21, x0
   281e4:	ldr	x25, [x21, x0]
   281e8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   281ec:	ldr	x4, [x0, #2560]
   281f0:	add	x0, x0, #0xa00
   281f4:	blr	x4
   281f8:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   281fc:	str	x4, [x3]
   28200:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   28204:	cmp	w1, #0x0
   28208:	ldr	x24, [x21, x0]
   2820c:	str	x3, [x21, x0]
   28210:	b.le	282c8 <mpfr_atan@@Base+0x1a0>
   28214:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   28218:	ldr	x1, [x0, #2640]
   2821c:	add	x0, x0, #0xa50
   28220:	blr	x1
   28224:	add	x1, x21, x0
   28228:	mov	x0, x20
   2822c:	bl	c410 <mpfr_cache@plt>
   28230:	mov	w19, w0
   28234:	mov	x1, x20
   28238:	mov	x2, #0x1                   	// #1
   2823c:	mov	w3, w22
   28240:	mov	x0, x20
   28244:	bl	c980 <mpfr_div_2ui@plt>
   28248:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2824c:	ldr	x1, [x0, #2592]
   28250:	add	x0, x0, #0xa20
   28254:	blr	x1
   28258:	add	x1, x21, x0
   2825c:	str	w23, [x21, x0]
   28260:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   28264:	ldr	x2, [x0, #2528]
   28268:	add	x0, x0, #0x9e0
   2826c:	blr	x2
   28270:	str	x25, [x21, x0]
   28274:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   28278:	ldr	x2, [x0, #2560]
   2827c:	add	x0, x0, #0xa00
   28280:	blr	x2
   28284:	str	x24, [x21, x0]
   28288:	ldr	x0, [x20, #16]
   2828c:	cmp	x25, x0
   28290:	b.gt	284bc <mpfr_atan@@Base+0x394>
   28294:	cmp	x24, x0
   28298:	b.lt	284bc <mpfr_atan@@Base+0x394>  // b.tstop
   2829c:	cbnz	w19, 28314 <mpfr_atan@@Base+0x1ec>
   282a0:	mov	w0, w19
   282a4:	mov	x12, #0x12a0                	// #4768
   282a8:	ldp	x29, x30, [sp]
   282ac:	ldp	x19, x20, [sp, #16]
   282b0:	ldp	x21, x22, [sp, #32]
   282b4:	ldp	x23, x24, [sp, #48]
   282b8:	ldp	x25, x26, [sp, #64]
   282bc:	ldp	x27, x28, [sp, #80]
   282c0:	add	sp, sp, x12
   282c4:	ret
   282c8:	cmp	w2, #0x2
   282cc:	b.eq	2830c <mpfr_atan@@Base+0x1e4>  // b.none
   282d0:	cmp	w2, #0x3
   282d4:	mov	w2, #0x2                   	// #2
   282d8:	csel	w2, w22, w2, ne  // ne = any
   282dc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   282e0:	ldr	x1, [x0, #2640]
   282e4:	add	x0, x0, #0xa50
   282e8:	blr	x1
   282ec:	add	x1, x21, x0
   282f0:	mov	x0, x20
   282f4:	bl	c410 <mpfr_cache@plt>
   282f8:	neg	w19, w0
   282fc:	ldr	w0, [x20, #8]
   28300:	neg	w0, w0
   28304:	str	w0, [x20, #8]
   28308:	b	28234 <mpfr_atan@@Base+0x10c>
   2830c:	mov	w2, #0x3                   	// #3
   28310:	b	282dc <mpfr_atan@@Base+0x1b4>
   28314:	orr	w23, w23, #0x8
   28318:	str	w23, [x1]
   2831c:	b	282a0 <mpfr_atan@@Base+0x178>
   28320:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   28324:	str	w1, [x20, #8]
   28328:	str	x0, [x20, #16]
   2832c:	b	281a0 <mpfr_atan@@Base+0x78>
   28330:	mov	x2, #0xfffffffffffffffe    	// #-2
   28334:	mul	x2, x3, x2
   28338:	cmp	x2, #0x0
   2833c:	b.gt	284d4 <mpfr_atan@@Base+0x3ac>
   28340:	ldr	x0, [sp, #112]
   28344:	mrs	x21, tpidr_el0
   28348:	ldr	x0, [x0]
   2834c:	str	x0, [sp, #320]
   28350:	ldr	x0, [sp, #112]
   28354:	ldr	x0, [x0, #24]
   28358:	str	x0, [sp, #344]
   2835c:	mov	w0, #0x1                   	// #1
   28360:	str	w0, [sp, #328]
   28364:	ldr	x0, [sp, #112]
   28368:	ldr	x0, [x0, #16]
   2836c:	str	x0, [sp, #336]
   28370:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   28374:	ldr	x1, [x0, #2592]
   28378:	add	x0, x0, #0xa20
   2837c:	blr	x1
   28380:	ldr	w0, [x21, x0]
   28384:	str	w0, [sp, #156]
   28388:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2838c:	ldr	x1, [x0, #2528]
   28390:	add	x0, x0, #0x9e0
   28394:	blr	x1
   28398:	add	x1, x21, x0
   2839c:	ldr	x0, [x21, x0]
   283a0:	str	x0, [sp, #160]
   283a4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   283a8:	ldr	x2, [x0, #2560]
   283ac:	add	x0, x0, #0xa00
   283b0:	blr	x2
   283b4:	ldr	x2, [x21, x0]
   283b8:	str	x2, [sp, #168]
   283bc:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   283c0:	str	x2, [x1]
   283c4:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   283c8:	mov	x2, #0x0                   	// #0
   283cc:	str	x1, [x21, x0]
   283d0:	add	x0, sp, #0x140
   283d4:	mov	x1, #0x1                   	// #1
   283d8:	bl	bfd0 <mpfr_cmp_ui_2exp@plt>
   283dc:	str	w0, [sp, #192]
   283e0:	mov	w0, w0
   283e4:	cbnz	w0, 28524 <mpfr_atan@@Base+0x3fc>
   283e8:	ldr	x0, [sp, #112]
   283ec:	ldr	w23, [x0, #8]
   283f0:	cmp	w23, #0x0
   283f4:	b.gt	28500 <mpfr_atan@@Base+0x3d8>
   283f8:	cmp	w22, #0x2
   283fc:	b.eq	28508 <mpfr_atan@@Base+0x3e0>  // b.none
   28400:	cmp	w22, #0x3
   28404:	mov	w2, #0x2                   	// #2
   28408:	csel	w2, w22, w2, ne  // ne = any
   2840c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   28410:	ldr	x1, [x0, #2640]
   28414:	add	x0, x0, #0xa50
   28418:	blr	x1
   2841c:	add	x1, x21, x0
   28420:	mov	x0, x20
   28424:	bl	c410 <mpfr_cache@plt>
   28428:	mov	w19, w0
   2842c:	tbz	w23, #31, 28440 <mpfr_atan@@Base+0x318>
   28430:	neg	w19, w0
   28434:	ldr	w0, [x20, #8]
   28438:	neg	w0, w0
   2843c:	str	w0, [x20, #8]
   28440:	mov	x1, x20
   28444:	mov	x2, #0x2                   	// #2
   28448:	mov	w3, w22
   2844c:	mov	x0, x20
   28450:	bl	c980 <mpfr_div_2ui@plt>
   28454:	ldr	w2, [sp, #156]
   28458:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2845c:	ldr	x1, [x0, #2592]
   28460:	add	x0, x0, #0xa20
   28464:	blr	x1
   28468:	add	x1, x21, x0
   2846c:	str	w2, [x21, x0]
   28470:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   28474:	ldr	x2, [x0, #2528]
   28478:	add	x0, x0, #0x9e0
   2847c:	blr	x2
   28480:	ldr	x2, [sp, #160]
   28484:	str	x2, [x21, x0]
   28488:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2848c:	ldr	x2, [x0, #2560]
   28490:	add	x0, x0, #0xa00
   28494:	blr	x2
   28498:	ldr	x2, [sp, #168]
   2849c:	str	x2, [x21, x0]
   284a0:	ldr	x0, [x20, #16]
   284a4:	ldr	x2, [sp, #160]
   284a8:	cmp	x2, x0
   284ac:	b.gt	284bc <mpfr_atan@@Base+0x394>
   284b0:	ldr	x2, [sp, #168]
   284b4:	cmp	x2, x0
   284b8:	b.ge	28510 <mpfr_atan@@Base+0x3e8>  // b.tcont
   284bc:	mov	w1, w19
   284c0:	mov	w2, w22
   284c4:	mov	x0, x20
   284c8:	bl	cbc0 <mpfr_check_range@plt>
   284cc:	mov	w19, w0
   284d0:	b	282a0 <mpfr_atan@@Base+0x178>
   284d4:	ldr	x3, [x0]
   284d8:	add	x2, x2, #0x1
   284dc:	add	x3, x3, #0x1
   284e0:	cmp	x3, x2
   284e4:	b.cs	28340 <mpfr_atan@@Base+0x218>  // b.hs, b.nlast
   284e8:	mov	w4, w22
   284ec:	mov	w3, #0x0                   	// #0
   284f0:	bl	c5d0 <mpfr_round_near_x@plt>
   284f4:	mov	w19, w0
   284f8:	cbz	w0, 28340 <mpfr_atan@@Base+0x218>
   284fc:	b	282a0 <mpfr_atan@@Base+0x178>
   28500:	mov	w2, w22
   28504:	b	2840c <mpfr_atan@@Base+0x2e4>
   28508:	mov	w2, #0x3                   	// #3
   2850c:	b	2840c <mpfr_atan@@Base+0x2e4>
   28510:	cbz	w19, 282a0 <mpfr_atan@@Base+0x178>
   28514:	ldr	w0, [sp, #156]
   28518:	orr	w0, w0, #0x8
   2851c:	str	w0, [x1]
   28520:	b	282a0 <mpfr_atan@@Base+0x178>
   28524:	ldr	x19, [x20]
   28528:	cmp	x19, #0x1
   2852c:	b.eq	28590 <mpfr_atan@@Base+0x468>  // b.none
   28530:	b.gt	2854c <mpfr_atan@@Base+0x424>
   28534:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   28538:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2853c:	add	x2, x2, #0x340
   28540:	add	x0, x0, #0x35b
   28544:	mov	w1, #0x166                 	// #358
   28548:	bl	cbd0 <mpfr_assert_fail@plt>
   2854c:	ldr	x0, [x20]
   28550:	sub	x0, x0, #0x1
   28554:	clz	x1, x0
   28558:	mov	w0, #0x40                  	// #64
   2855c:	sub	w0, w0, w1
   28560:	sxtw	x0, w0
   28564:	add	x19, x19, x0
   28568:	add	x0, x19, #0x4
   2856c:	add	x21, x19, #0x44
   28570:	mov	x1, x21
   28574:	str	x0, [sp, #120]
   28578:	add	x0, sp, #0x130
   2857c:	bl	c990 <mpfr_mpz_init2@plt>
   28580:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   28584:	cmp	x21, x0
   28588:	b.lt	28598 <mpfr_atan@@Base+0x470>  // b.tstop
   2858c:	bl	c970 <mpfr_abort_prec_max@plt>
   28590:	mov	x0, #0x0                   	// #0
   28594:	b	28564 <mpfr_atan@@Base+0x43c>
   28598:	add	x19, x19, #0x43
   2859c:	mov	x0, #0x40                  	// #64
   285a0:	sdiv	x19, x19, x0
   285a4:	add	x19, x19, #0x1
   285a8:	lsl	x0, x19, #2
   285ac:	cmp	x0, #0x10
   285b0:	b.le	28668 <mpfr_atan@@Base+0x540>
   285b4:	lsl	x0, x19, #5
   285b8:	str	x0, [sp, #480]
   285bc:	bl	cd90 <mpfr_allocate_func@plt>
   285c0:	str	x0, [sp, #488]
   285c4:	mov	w0, #0x1                   	// #1
   285c8:	add	x23, sp, #0x670
   285cc:	str	w0, [sp, #360]
   285d0:	ldr	x1, [sp, #488]
   285d4:	str	w0, [sp, #392]
   285d8:	str	w0, [sp, #424]
   285dc:	mov	w26, #0x0                   	// #0
   285e0:	str	w0, [sp, #456]
   285e4:	mov	x0, #0x40                  	// #64
   285e8:	add	x2, x1, x19, lsl #3
   285ec:	str	x2, [sp, #440]
   285f0:	add	x2, x1, x19, lsl #4
   285f4:	str	x2, [sp, #472]
   285f8:	mov	x2, #0x18                  	// #24
   285fc:	str	x0, [sp, #208]
   28600:	add	x0, sp, #0x470
   28604:	str	x0, [sp, #136]
   28608:	madd	x19, x19, x2, x1
   2860c:	str	x21, [sp, #352]
   28610:	str	x19, [sp, #376]
   28614:	str	x21, [sp, #384]
   28618:	str	x1, [sp, #408]
   2861c:	str	x21, [sp, #416]
   28620:	str	x21, [sp, #448]
   28624:	ldr	x0, [sp, #336]
   28628:	mov	x24, #0x2                   	// #2
   2862c:	cmp	x0, #0x0
   28630:	sub	x24, x24, x0
   28634:	ldr	x0, [sp, #120]
   28638:	csinc	x24, x24, xzr, lt  // lt = tstop
   2863c:	add	x24, x0, x24
   28640:	cmn	x24, #0x2
   28644:	b.eq	286a8 <mpfr_atan@@Base+0x580>  // b.none
   28648:	cmn	x24, #0x1
   2864c:	b.ge	28674 <mpfr_atan@@Base+0x54c>  // b.tcont
   28650:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   28654:	add	x2, x2, #0x362
   28658:	mov	w1, #0x176                 	// #374
   2865c:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   28660:	add	x0, x0, #0x35b
   28664:	bl	cbd0 <mpfr_assert_fail@plt>
   28668:	add	x0, sp, #0x1f0
   2866c:	str	xzr, [sp, #480]
   28670:	b	285c0 <mpfr_atan@@Base+0x498>
   28674:	add	x21, x24, #0x2
   28678:	clz	x0, x21
   2867c:	mov	w21, #0x40                  	// #64
   28680:	sub	w21, w21, w0
   28684:	add	w27, w21, w21, lsl #1
   28688:	add	x24, x24, #0x1
   2868c:	cmp	w27, #0x3
   28690:	b.eq	286f4 <mpfr_atan@@Base+0x5cc>  // b.none
   28694:	b.gt	286b0 <mpfr_atan@@Base+0x588>
   28698:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2869c:	mov	w1, #0x178                 	// #376
   286a0:	add	x2, x2, #0x37d
   286a4:	b	2865c <mpfr_atan@@Base+0x534>
   286a8:	mov	w21, #0x0                   	// #0
   286ac:	b	28684 <mpfr_atan@@Base+0x55c>
   286b0:	sub	w0, w27, #0x3
   286b4:	sxtw	x0, w0
   286b8:	clz	x1, x0
   286bc:	mov	w0, #0x40                  	// #64
   286c0:	sub	w0, w0, w1
   286c4:	sxtw	x0, w0
   286c8:	add	x24, x24, x0
   286cc:	ldr	x0, [x20]
   286d0:	cmp	x0, #0x64
   286d4:	b.le	28910 <mpfr_atan@@Base+0x7e8>
   286d8:	cmp	x24, #0x1
   286dc:	b.eq	28908 <mpfr_atan@@Base+0x7e0>  // b.none
   286e0:	b.gt	286fc <mpfr_atan@@Base+0x5d4>
   286e4:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   286e8:	mov	w1, #0x17f                 	// #383
   286ec:	add	x2, x2, #0x50e
   286f0:	b	2865c <mpfr_atan@@Base+0x534>
   286f4:	mov	x0, #0x0                   	// #0
   286f8:	b	286c8 <mpfr_atan@@Base+0x5a0>
   286fc:	sub	x19, x24, #0x1
   28700:	clz	x0, x19
   28704:	mov	w19, #0x40                  	// #64
   28708:	sub	w19, w19, w0
   2870c:	asr	w19, w19, #1
   28710:	sub	w19, w19, #0x3
   28714:	sxtw	x19, w19
   28718:	lsl	x2, x19, #1
   2871c:	add	x0, x2, #0x9
   28720:	str	x0, [sp, #200]
   28724:	add	x24, x24, x0
   28728:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   2872c:	cmp	x24, x0
   28730:	ldr	x1, [sp, #480]
   28734:	b.ge	2858c <mpfr_atan@@Base+0x464>  // b.tcont
   28738:	sub	x25, x24, #0x1
   2873c:	asr	x25, x25, #6
   28740:	add	x25, x25, #0x1
   28744:	lsl	x0, x25, #5
   28748:	str	x0, [sp, #480]
   2874c:	cbnz	x1, 2891c <mpfr_atan@@Base+0x7f4>
   28750:	bl	cd90 <mpfr_allocate_func@plt>
   28754:	str	x0, [sp, #488]
   28758:	mov	w0, #0x1                   	// #1
   2875c:	str	x24, [sp, #352]
   28760:	ldr	x1, [sp, #488]
   28764:	str	w0, [sp, #360]
   28768:	str	x24, [sp, #384]
   2876c:	str	w0, [sp, #392]
   28770:	add	x2, x1, x25, lsl #3
   28774:	str	x2, [sp, #440]
   28778:	add	x2, x1, x25, lsl #4
   2877c:	str	x2, [sp, #472]
   28780:	mov	x2, #0x18                  	// #24
   28784:	str	x1, [sp, #408]
   28788:	str	x24, [sp, #416]
   2878c:	madd	x25, x25, x2, x1
   28790:	str	w0, [sp, #424]
   28794:	str	x25, [sp, #376]
   28798:	add	x25, x23, w26, sxtw #4
   2879c:	str	x24, [sp, #448]
   287a0:	str	w0, [sp, #456]
   287a4:	add	w0, w27, #0x3
   287a8:	str	w0, [sp, #196]
   287ac:	ldr	w0, [sp, #196]
   287b0:	cmp	w0, w26
   287b4:	b.gt	2892c <mpfr_atan@@Base+0x804>
   287b8:	ldr	w0, [sp, #192]
   287bc:	add	x24, sp, #0x140
   287c0:	add	x27, sp, #0x180
   287c4:	cmp	w0, #0x0
   287c8:	b.le	28944 <mpfr_atan@@Base+0x81c>
   287cc:	mov	x2, x24
   287d0:	mov	x0, x27
   287d4:	mov	w3, #0x0                   	// #0
   287d8:	mov	x1, #0x1                   	// #1
   287dc:	bl	c380 <mpfr_ui_div@plt>
   287e0:	neg	x19, x19
   287e4:	add	x26, sp, #0x1a0
   287e8:	mov	x25, #0x9                   	// #9
   287ec:	str	xzr, [sp, #184]
   287f0:	str	xzr, [sp, #216]
   287f4:	ldr	x0, [sp, #400]
   287f8:	cmp	x0, x19
   287fc:	b.gt	2895c <mpfr_atan@@Base+0x834>
   28800:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   28804:	str	x0, [sp, #368]
   28808:	mov	w0, w21
   2880c:	str	w21, [sp, #152]
   28810:	add	w0, w0, #0x1
   28814:	add	x0, x23, x0, lsl #4
   28818:	str	x0, [sp, #144]
   2881c:	mov	x0, #0x1                   	// #1
   28820:	str	x0, [sp, #128]
   28824:	add	x0, sp, #0x270
   28828:	str	x0, [sp, #240]
   2882c:	ldr	x0, [sp, #400]
   28830:	mov	x21, #0x8000000000000001    	// #-9223372036854775807
   28834:	cmp	x0, x21
   28838:	b.ne	289f8 <mpfr_atan@@Base+0x8d0>  // b.any
   2883c:	add	x19, sp, #0x160
   28840:	add	x2, sp, #0x180
   28844:	mov	x1, x19
   28848:	mov	w3, #0x0                   	// #0
   2884c:	mov	x0, x19
   28850:	bl	c230 <mpfr_add@plt>
   28854:	ldr	x2, [sp, #184]
   28858:	mov	x1, x19
   2885c:	mov	x0, x19
   28860:	mov	w3, #0x0                   	// #0
   28864:	bl	c350 <mpfr_mul_2ui@plt>
   28868:	ldr	w0, [sp, #192]
   2886c:	cmp	w0, #0x0
   28870:	b.le	288c4 <mpfr_atan@@Base+0x79c>
   28874:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   28878:	ldr	x1, [x0, #2640]
   2887c:	add	x0, x0, #0xa50
   28880:	blr	x1
   28884:	add	x21, sp, #0x1a0
   28888:	mrs	x1, tpidr_el0
   2888c:	mov	w2, #0x0                   	// #0
   28890:	add	x1, x1, x0
   28894:	mov	x0, x21
   28898:	bl	c410 <mpfr_cache@plt>
   2889c:	mov	x1, x21
   288a0:	mov	w3, #0x0                   	// #0
   288a4:	mov	x2, #0x1                   	// #1
   288a8:	mov	x0, x21
   288ac:	bl	c980 <mpfr_div_2ui@plt>
   288b0:	mov	x2, x19
   288b4:	mov	x1, x21
   288b8:	mov	x0, x19
   288bc:	mov	w3, #0x0                   	// #0
   288c0:	bl	bbf0 <mpfr_sub@plt>
   288c4:	ldr	x1, [sp, #368]
   288c8:	mov	w0, #0x1                   	// #1
   288cc:	str	w0, [sp, #360]
   288d0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   288d4:	cmp	x1, x0
   288d8:	b.gt	291c8 <mpfr_atan@@Base+0x10a0>
   288dc:	ldr	x1, [sp, #120]
   288e0:	mov	x0, #0xfffffffffffffeff    	// #-257
   288e4:	movk	x0, #0x7fff, lsl #48
   288e8:	sub	x0, x0, x1
   288ec:	ldr	x1, [sp, #208]
   288f0:	cmp	x0, x1
   288f4:	b.ge	292d8 <mpfr_atan@@Base+0x11b0>  // b.tcont
   288f8:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   288fc:	mov	w1, #0x1f6                 	// #502
   28900:	add	x2, x2, #0x38a
   28904:	b	2865c <mpfr_atan@@Base+0x534>
   28908:	mov	x19, #0xfffffffffffffffd    	// #-3
   2890c:	b	28718 <mpfr_atan@@Base+0x5f0>
   28910:	mov	x19, #0x0                   	// #0
   28914:	str	xzr, [sp, #200]
   28918:	b	28728 <mpfr_atan@@Base+0x600>
   2891c:	mov	x2, x0
   28920:	ldr	x0, [sp, #488]
   28924:	bl	c250 <mpfr_reallocate_func@plt>
   28928:	b	28754 <mpfr_atan@@Base+0x62c>
   2892c:	mov	x0, x25
   28930:	mov	x1, x24
   28934:	add	w26, w26, #0x1
   28938:	add	x25, x25, #0x10
   2893c:	bl	c990 <mpfr_mpz_init2@plt>
   28940:	b	287ac <mpfr_atan@@Base+0x684>
   28944:	ldr	w3, [sp, #328]
   28948:	mov	x1, x24
   2894c:	mov	x0, x27
   28950:	mov	w2, #0x0                   	// #0
   28954:	bl	c730 <mpfr_set4@plt>
   28958:	b	287e0 <mpfr_atan@@Base+0x6b8>
   2895c:	sub	x0, x25, x0, lsl #1
   28960:	mov	x1, x27
   28964:	mov	w2, #0x0                   	// #0
   28968:	str	x0, [sp, #216]
   2896c:	mov	x0, x26
   28970:	bl	c490 <mpfr_sqr@plt>
   28974:	mov	w3, #0x0                   	// #0
   28978:	mov	x1, x26
   2897c:	mov	x2, #0x1                   	// #1
   28980:	mov	x0, x26
   28984:	bl	c2f0 <mpfr_add_ui@plt>
   28988:	mov	x1, x26
   2898c:	mov	w2, #0x0                   	// #0
   28990:	mov	x0, x26
   28994:	bl	c9c0 <mpfr_sqrt@plt>
   28998:	mov	w3, #0x0                   	// #0
   2899c:	mov	x1, x26
   289a0:	mov	x0, x26
   289a4:	mov	x2, #0x1                   	// #1
   289a8:	bl	c5c0 <mpfr_sub_ui@plt>
   289ac:	ldr	x0, [sp, #184]
   289b0:	mov	w3, #0x0                   	// #0
   289b4:	cmp	x0, #0x0
   289b8:	ldr	w0, [sp, #192]
   289bc:	ccmp	w0, #0x0, #0x4, eq  // eq = none
   289c0:	b.le	289e4 <mpfr_atan@@Base+0x8bc>
   289c4:	mov	x2, x24
   289c8:	mov	x1, x26
   289cc:	mov	x0, x27
   289d0:	bl	bdd0 <mpfr_mul@plt>
   289d4:	ldr	x0, [sp, #184]
   289d8:	add	x0, x0, #0x1
   289dc:	str	x0, [sp, #184]
   289e0:	b	287f4 <mpfr_atan@@Base+0x6cc>
   289e4:	mov	x2, x27
   289e8:	mov	x1, x26
   289ec:	mov	x0, x27
   289f0:	bl	c6b0 <mpfr_div@plt>
   289f4:	b	289d4 <mpfr_atan@@Base+0x8ac>
   289f8:	ldr	x2, [sp, #128]
   289fc:	add	x19, sp, #0x1a0
   28a00:	mov	w3, #0x0                   	// #0
   28a04:	add	x1, sp, #0x180
   28a08:	mov	x0, x19
   28a0c:	bl	c350 <mpfr_mul_2ui@plt>
   28a10:	mov	x1, x19
   28a14:	mov	x0, x19
   28a18:	mov	w2, #0x1                   	// #1
   28a1c:	bl	c390 <mpfr_rint@plt>
   28a20:	ldr	x0, [sp, #432]
   28a24:	cmp	x0, x21
   28a28:	b.eq	28b44 <mpfr_atan@@Base+0xa1c>  // b.none
   28a2c:	add	x24, sp, #0x130
   28a30:	mov	x1, x19
   28a34:	mov	x0, x24
   28a38:	bl	cb50 <mpfr_get_z_2exp@plt>
   28a3c:	mov	x1, x24
   28a40:	neg	x2, x0
   28a44:	mov	x0, x24
   28a48:	bl	c7d0 <__gmpz_tdiv_q_2exp@plt>
   28a4c:	mov	x1, x24
   28a50:	mov	w2, #0x0                   	// #0
   28a54:	mov	x0, x19
   28a58:	bl	c2d0 <mpfr_set_z@plt>
   28a5c:	ldr	x2, [sp, #128]
   28a60:	mov	x1, x19
   28a64:	mov	x0, x19
   28a68:	mov	w3, #0x0                   	// #0
   28a6c:	bl	c980 <mpfr_div_2ui@plt>
   28a70:	ldr	x0, [sp, #448]
   28a74:	str	x0, [sp, #104]
   28a78:	cmp	x0, #0xc0
   28a7c:	b.gt	28bc0 <mpfr_atan@@Base+0xa98>
   28a80:	ldr	x0, [sp, #128]
   28a84:	sub	x1, x0, #0x1
   28a88:	cmp	x1, #0x7
   28a8c:	b.hi	28bc0 <mpfr_atan@@Base+0xa98>  // b.pmore
   28a90:	cmp	w1, #0x7
   28a94:	b.hi	28bc0 <mpfr_atan@@Base+0xa98>  // b.pmore
   28a98:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   28a9c:	add	x0, x0, #0x3d8
   28aa0:	ldrb	w0, [x0, w1, uxtw]
   28aa4:	adr	x1, 28ab0 <mpfr_atan@@Base+0x988>
   28aa8:	add	x0, x1, w0, sxtb #2
   28aac:	br	x0
   28ab0:	adrp	x1, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   28ab4:	add	x1, x1, #0x3e0
   28ab8:	add	x0, sp, #0x1c0
   28abc:	bl	280bc <mpfr_atanh@@Base+0x580>
   28ac0:	add	x21, sp, #0x1c0
   28ac4:	add	x24, sp, #0x1a0
   28ac8:	mov	x2, x24
   28acc:	mov	x1, x21
   28ad0:	mov	w3, #0x0                   	// #0
   28ad4:	mov	x0, x21
   28ad8:	bl	bdd0 <mpfr_mul@plt>
   28adc:	add	x19, sp, #0x180
   28ae0:	add	x1, sp, #0x160
   28ae4:	mov	x2, x21
   28ae8:	mov	x0, x1
   28aec:	mov	w3, #0x0                   	// #0
   28af0:	bl	c230 <mpfr_add@plt>
   28af4:	mov	x2, x24
   28af8:	mov	x1, x19
   28afc:	mov	w3, #0x0                   	// #0
   28b00:	mov	x0, x21
   28b04:	bl	bbf0 <mpfr_sub@plt>
   28b08:	mov	x2, x24
   28b0c:	mov	x1, x19
   28b10:	mov	w3, #0x0                   	// #0
   28b14:	mov	x0, x19
   28b18:	bl	bdd0 <mpfr_mul@plt>
   28b1c:	mov	x1, x19
   28b20:	mov	w3, #0x0                   	// #0
   28b24:	mov	x2, #0x1                   	// #1
   28b28:	mov	x0, x19
   28b2c:	bl	c2f0 <mpfr_add_ui@plt>
   28b30:	mov	x2, x19
   28b34:	mov	x1, x21
   28b38:	mov	x0, x19
   28b3c:	mov	w3, #0x0                   	// #0
   28b40:	bl	c6b0 <mpfr_div@plt>
   28b44:	ldr	x0, [sp, #128]
   28b48:	lsl	x0, x0, #1
   28b4c:	str	x0, [sp, #128]
   28b50:	ldr	x0, [sp, #144]
   28b54:	sub	x0, x0, #0x10
   28b58:	str	x0, [sp, #144]
   28b5c:	ldr	w0, [sp, #152]
   28b60:	subs	w0, w0, #0x1
   28b64:	str	w0, [sp, #152]
   28b68:	b.ne	2882c <mpfr_atan@@Base+0x704>  // b.any
   28b6c:	b	2883c <mpfr_atan@@Base+0x714>
   28b70:	adrp	x1, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   28b74:	add	x1, x1, #0x3e0
   28b78:	add	x1, x1, #0x18
   28b7c:	b	28ab8 <mpfr_atan@@Base+0x990>
   28b80:	ldr	x0, [sp, #312]
   28b84:	mov	x1, #0x18                  	// #24
   28b88:	ldr	x0, [x0]
   28b8c:	madd	x1, x0, x1, x1
   28b90:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   28b94:	add	x0, x0, #0x3e0
   28b98:	add	x1, x0, x1
   28b9c:	b	28ab8 <mpfr_atan@@Base+0x990>
   28ba0:	ldr	x0, [sp, #312]
   28ba4:	mov	x2, #0x18                  	// #24
   28ba8:	ldr	x1, [x0]
   28bac:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   28bb0:	add	x0, x0, #0x3e0
   28bb4:	add	x1, x1, #0x4
   28bb8:	madd	x1, x1, x2, x0
   28bbc:	b	28ab8 <mpfr_atan@@Base+0x990>
   28bc0:	ldr	w0, [sp, #152]
   28bc4:	mov	x2, x24
   28bc8:	mov	x1, x24
   28bcc:	add	w21, w0, #0x1
   28bd0:	mov	x0, x24
   28bd4:	bl	c070 <__gmpz_mul@plt>
   28bd8:	ldr	x0, [sp, #128]
   28bdc:	ubfiz	x21, x21, #5, #31
   28be0:	mov	x1, #0x0                   	// #0
   28be4:	add	x21, x23, x21
   28be8:	lsl	x26, x0, #1
   28bec:	mov	x0, x24
   28bf0:	bl	bb10 <__gmpz_scan1@plt>
   28bf4:	mov	x19, x0
   28bf8:	cbz	x0, 28c10 <mpfr_atan@@Base+0xae8>
   28bfc:	sub	x26, x26, x19
   28c00:	mov	x2, x0
   28c04:	mov	x1, x24
   28c08:	mov	x0, x24
   28c0c:	bl	c7d0 <__gmpz_tdiv_q_2exp@plt>
   28c10:	mov	x0, x24
   28c14:	mov	x1, #0x1                   	// #1
   28c18:	str	xzr, [sp, #624]
   28c1c:	bl	cbb0 <__gmpz_cmp_ui@plt>
   28c20:	mov	w19, w0
   28c24:	ldrb	w0, [sp, #152]
   28c28:	mov	x27, #0x1                   	// #1
   28c2c:	lsl	x0, x27, x0
   28c30:	str	x0, [sp, #176]
   28c34:	cbz	w19, 28f74 <mpfr_atan@@Base+0xe4c>
   28c38:	ldr	x0, [sp, #144]
   28c3c:	mov	x1, x24
   28c40:	bl	c020 <__gmpz_set@plt>
   28c44:	ldr	x0, [sp, #144]
   28c48:	add	x0, x0, #0x10
   28c4c:	str	x0, [sp, #224]
   28c50:	mov	x24, x0
   28c54:	sub	x2, x24, #0x10
   28c58:	mov	x0, x24
   28c5c:	mov	x1, x2
   28c60:	bl	c070 <__gmpz_mul@plt>
   28c64:	ldr	w0, [sp, #152]
   28c68:	add	w27, w27, #0x1
   28c6c:	add	x24, x24, #0x10
   28c70:	cmp	w0, w27
   28c74:	b.ge	28c54 <mpfr_atan@@Base+0xb2c>  // b.tcont
   28c78:	mov	x28, #0x2                   	// #2
   28c7c:	mov	w19, #0x0                   	// #0
   28c80:	sxtw	x27, w19
   28c84:	lsl	x25, x28, #1
   28c88:	add	x3, x27, #0x1
   28c8c:	sub	x1, x25, #0x1
   28c90:	sub	w19, w19, #0x1
   28c94:	lsl	x24, x3, #4
   28c98:	add	x3, x21, x3, lsl #4
   28c9c:	mov	x0, x3
   28ca0:	str	x3, [sp, #232]
   28ca4:	bl	bd30 <__gmpz_set_ui@plt>
   28ca8:	sub	x4, x25, #0x3
   28cac:	add	x6, x23, x24
   28cb0:	mov	x2, x4
   28cb4:	mov	x0, x6
   28cb8:	add	x1, sp, #0x130
   28cbc:	stp	x6, x4, [sp, #248]
   28cc0:	bl	c190 <__gmpz_mul_ui@plt>
   28cc4:	ldr	x3, [sp, #232]
   28cc8:	sub	x24, x24, #0x10
   28ccc:	add	x25, x23, x24
   28cd0:	mov	x2, x26
   28cd4:	mov	x1, x3
   28cd8:	mov	x0, x25
   28cdc:	bl	c290 <__gmpz_mul_2exp@plt>
   28ce0:	ldr	x6, [sp, #248]
   28ce4:	mov	x1, x25
   28ce8:	mov	x0, x25
   28cec:	mov	x2, x6
   28cf0:	bl	be60 <__gmpz_sub@plt>
   28cf4:	ldr	x3, [sp, #232]
   28cf8:	add	x0, x21, x24
   28cfc:	ldr	x4, [sp, #256]
   28d00:	mov	x1, x3
   28d04:	mov	x24, x25
   28d08:	mov	x2, x4
   28d0c:	bl	c190 <__gmpz_mul_ui@plt>
   28d10:	str	w28, [sp, #232]
   28d14:	ldr	x0, [sp, #136]
   28d18:	asr	w3, w28, #1
   28d1c:	ldr	x25, [sp, #224]
   28d20:	sxtw	x3, w3
   28d24:	sxtw	x6, w19
   28d28:	mov	x7, #0x1                   	// #1
   28d2c:	mov	x4, #0x2                   	// #2
   28d30:	mov	w8, #0x0                   	// #0
   28d34:	str	x7, [x0, x27, lsl #3]
   28d38:	sub	w11, w4, #0x1
   28d3c:	mov	w19, w27
   28d40:	tbz	w3, #0, 28e58 <mpfr_atan@@Base+0xd30>
   28d44:	ldr	x0, [sp, #176]
   28d48:	add	w19, w27, #0x1
   28d4c:	cmp	x0, x28
   28d50:	b.ls	28d5c <mpfr_atan@@Base+0xc34>  // b.plast
   28d54:	add	x28, x28, #0x2
   28d58:	cbz	w8, 28c80 <mpfr_atan@@Base+0xb58>
   28d5c:	sub	w24, w19, #0x1
   28d60:	add	x25, x23, w19, sxtw #4
   28d64:	add	x19, x21, w19, sxtw #4
   28d68:	add	x0, sp, #0x130
   28d6c:	sxtw	x24, w24
   28d70:	sub	x19, x19, #0x10
   28d74:	str	xzr, [sp, #176]
   28d78:	str	x0, [sp, #224]
   28d7c:	add	w0, w24, #0x1
   28d80:	mov	w4, w24
   28d84:	cmp	w0, #0x1
   28d88:	b.gt	290dc <mpfr_atan@@Base+0xfb4>
   28d8c:	ldr	w0, [sp, #1652]
   28d90:	mov	x1, #0xfffffffffffffff8    	// #-8
   28d94:	ldr	x2, [sp, #1656]
   28d98:	cmp	w0, #0x0
   28d9c:	cneg	w0, w0, lt  // lt = tstop
   28da0:	add	x1, x1, w0, sxtw #3
   28da4:	sbfiz	x0, x0, #6, #32
   28da8:	ldr	x2, [x2, x1]
   28dac:	ldr	x1, [sp, #104]
   28db0:	clz	x2, x2
   28db4:	sub	x0, x0, x2
   28db8:	subs	x19, x0, x1, lsl #1
   28dbc:	lsl	x2, x1, #1
   28dc0:	b.mi	2919c <mpfr_atan@@Base+0x1074>  // b.first
   28dc4:	mov	x2, x19
   28dc8:	mov	x1, x23
   28dcc:	mov	x0, x23
   28dd0:	bl	c7d0 <__gmpz_tdiv_q_2exp@plt>
   28dd4:	ldr	w2, [x21, #4]
   28dd8:	mov	x0, #0xfffffffffffffff8    	// #-8
   28ddc:	ldr	x1, [x21, #8]
   28de0:	cmp	w2, #0x0
   28de4:	cneg	w2, w2, lt  // lt = tstop
   28de8:	add	x0, x0, w2, sxtw #3
   28dec:	sbfiz	x2, x2, #6, #32
   28df0:	ldr	x0, [x1, x0]
   28df4:	ldr	x1, [sp, #104]
   28df8:	clz	x0, x0
   28dfc:	sub	x0, x2, x0
   28e00:	sub	x2, x0, x1
   28e04:	sub	x19, x19, x2
   28e08:	tbnz	x2, #63, 291b0 <mpfr_atan@@Base+0x1088>
   28e0c:	mov	x1, x21
   28e10:	mov	x0, x21
   28e14:	bl	c7d0 <__gmpz_tdiv_q_2exp@plt>
   28e18:	mov	x2, x21
   28e1c:	mov	x1, x23
   28e20:	mov	x0, x23
   28e24:	bl	bbb0 <__gmpz_tdiv_q@plt>
   28e28:	mov	x1, x23
   28e2c:	add	x0, sp, #0x1c0
   28e30:	mov	w2, #0x3                   	// #3
   28e34:	bl	c2d0 <mpfr_set_z@plt>
   28e38:	ldr	x0, [sp, #464]
   28e3c:	add	x19, x19, x0
   28e40:	ldr	w0, [sp, #232]
   28e44:	sub	w0, w0, #0x1
   28e48:	sxtw	x0, w0
   28e4c:	msub	x19, x0, x26, x19
   28e50:	str	x19, [sp, #464]
   28e54:	b	28ac0 <mpfr_atan@@Base+0x998>
   28e58:	add	x9, x21, x6, lsl #4
   28e5c:	mov	x1, x24
   28e60:	mov	x2, x9
   28e64:	mov	x0, x24
   28e68:	stp	x9, x6, [sp, #264]
   28e6c:	str	x3, [sp, #280]
   28e70:	str	w8, [sp, #288]
   28e74:	str	w11, [sp, #292]
   28e78:	str	x4, [sp, #296]
   28e7c:	bl	c070 <__gmpz_mul@plt>
   28e80:	mov	x2, x25
   28e84:	mov	x1, x24
   28e88:	mov	x0, x24
   28e8c:	bl	c070 <__gmpz_mul@plt>
   28e90:	add	x10, x21, x27, lsl #4
   28e94:	sub	x1, x24, #0x10
   28e98:	mov	x2, x10
   28e9c:	mov	x0, x1
   28ea0:	stp	x1, x10, [sp, #248]
   28ea4:	bl	c070 <__gmpz_mul@plt>
   28ea8:	ldr	w11, [sp, #292]
   28eac:	ldr	x1, [sp, #248]
   28eb0:	lsl	x2, x26, x11
   28eb4:	mov	x0, x1
   28eb8:	bl	c290 <__gmpz_mul_2exp@plt>
   28ebc:	ldr	x1, [sp, #248]
   28ec0:	mov	x2, x24
   28ec4:	mov	x0, x1
   28ec8:	bl	ca50 <__gmpz_add@plt>
   28ecc:	ldp	x10, x9, [sp, #256]
   28ed0:	mov	x2, x10
   28ed4:	mov	x1, x9
   28ed8:	mov	x0, x9
   28edc:	bl	c070 <__gmpz_mul@plt>
   28ee0:	ldr	x0, [sp, #136]
   28ee4:	mov	x13, #0xfffffffffffffff8    	// #-8
   28ee8:	ldr	w1, [x25, #20]
   28eec:	mov	w12, #0x40                  	// #64
   28ef0:	ldp	x6, x3, [sp, #272]
   28ef4:	cmp	w1, #0x0
   28ef8:	ldr	x4, [sp, #296]
   28efc:	str	x4, [x0, x6, lsl #3]
   28f00:	cneg	w0, w1, lt  // lt = tstop
   28f04:	ldr	w8, [sp, #288]
   28f08:	ldr	x2, [x25, #24]
   28f0c:	add	x1, x13, w0, sxtw #3
   28f10:	cmp	w27, #0x1
   28f14:	mov	w7, #0x1                   	// #1
   28f18:	ldr	x2, [x2, x1]
   28f1c:	lsl	x1, x26, x4
   28f20:	sub	x1, x1, #0x1
   28f24:	clz	x2, x2
   28f28:	smsubl	x0, w0, w12, x2
   28f2c:	add	x1, x1, x0
   28f30:	b.eq	28f44 <mpfr_atan@@Base+0xe1c>  // b.none
   28f34:	ldr	x0, [sp, #240]
   28f38:	sub	w19, w19, #0x2
   28f3c:	ldr	x0, [x0, w19, sxtw #3]
   28f40:	add	x1, x1, x0
   28f44:	ldr	x0, [sp, #240]
   28f48:	lsr	x3, x3, #1
   28f4c:	sub	x27, x27, #0x1
   28f50:	add	x4, x4, #0x1
   28f54:	sub	x24, x24, #0x10
   28f58:	add	x25, x25, #0x10
   28f5c:	str	x1, [x0, x6, lsl #3]
   28f60:	sub	x6, x6, #0x1
   28f64:	ldr	x0, [sp, #104]
   28f68:	cmp	x0, x1
   28f6c:	csel	w8, w8, w7, ge  // ge = tcont
   28f70:	b	28d38 <mpfr_atan@@Base+0xc10>
   28f74:	ldr	x0, [sp, #104]
   28f78:	ldr	x1, [sp, #176]
   28f7c:	udiv	x0, x0, x26
   28f80:	cmp	x1, x0
   28f84:	b.cc	28f90 <mpfr_atan@@Base+0xe68>  // b.lo, b.ul, b.last
   28f88:	add	x0, x0, #0x1
   28f8c:	str	x0, [sp, #176]
   28f90:	mov	x25, #0x2                   	// #2
   28f94:	mov	x24, #0x3                   	// #3
   28f98:	sxtw	x3, w19
   28f9c:	mov	x1, x24
   28fa0:	add	x19, x3, #0x1
   28fa4:	str	x3, [sp, #232]
   28fa8:	lsl	x27, x19, #4
   28fac:	add	x19, x21, x19, lsl #4
   28fb0:	sub	x27, x27, #0x10
   28fb4:	mov	x0, x19
   28fb8:	add	x28, x23, x27
   28fbc:	bl	bd30 <__gmpz_set_ui@plt>
   28fc0:	mov	x2, x26
   28fc4:	mov	x1, x19
   28fc8:	mov	x0, x28
   28fcc:	bl	c290 <__gmpz_mul_2exp@plt>
   28fd0:	sub	x2, x24, #0x2
   28fd4:	mov	x1, x28
   28fd8:	mov	x0, x28
   28fdc:	str	x2, [sp, #224]
   28fe0:	bl	bcb0 <__gmpz_sub_ui@plt>
   28fe4:	add	x27, x21, x27
   28fe8:	ldr	x2, [sp, #224]
   28fec:	mov	x1, x19
   28ff0:	mov	x0, x27
   28ff4:	bl	c190 <__gmpz_mul_ui@plt>
   28ff8:	ldr	x0, [sp, #136]
   28ffc:	asr	w5, w25, #1
   29000:	ldr	x3, [sp, #232]
   29004:	sxtw	x5, w5
   29008:	mov	x1, #0x1                   	// #1
   2900c:	mov	x7, #0x2                   	// #2
   29010:	str	w25, [sp, #232]
   29014:	str	x1, [x0, x3, lsl #3]
   29018:	sub	w8, w7, #0x1
   2901c:	tbz	w5, #0, 29040 <mpfr_atan@@Base+0xf18>
   29020:	ldr	x1, [sp, #176]
   29024:	add	w19, w3, #0x1
   29028:	add	x24, x24, #0x4
   2902c:	add	x0, x25, #0x2
   29030:	cmp	x25, x1
   29034:	b.cs	28d5c <mpfr_atan@@Base+0xc34>  // b.hs, b.nlast
   29038:	mov	x25, x0
   2903c:	b	28f98 <mpfr_atan@@Base+0xe70>
   29040:	sub	x6, x27, #0x10
   29044:	sub	x3, x3, #0x1
   29048:	sub	x19, x28, #0x10
   2904c:	mov	x2, x6
   29050:	mov	x1, x28
   29054:	mov	x0, x28
   29058:	str	x6, [sp, #224]
   2905c:	str	x3, [sp, #248]
   29060:	str	w8, [sp, #256]
   29064:	stp	x5, x7, [sp, #264]
   29068:	bl	c070 <__gmpz_mul@plt>
   2906c:	mov	x2, x27
   29070:	mov	x1, x19
   29074:	mov	x0, x19
   29078:	bl	c070 <__gmpz_mul@plt>
   2907c:	ldr	w8, [sp, #256]
   29080:	mov	x1, x19
   29084:	mov	x0, x19
   29088:	lsl	x2, x26, x8
   2908c:	bl	c290 <__gmpz_mul_2exp@plt>
   29090:	mov	x2, x28
   29094:	mov	x1, x19
   29098:	mov	x0, x19
   2909c:	bl	ca50 <__gmpz_add@plt>
   290a0:	ldr	x6, [sp, #224]
   290a4:	mov	x2, x27
   290a8:	mov	x28, x19
   290ac:	mov	x0, x6
   290b0:	mov	x1, x6
   290b4:	bl	c070 <__gmpz_mul@plt>
   290b8:	ldp	x5, x7, [sp, #264]
   290bc:	ldr	x0, [sp, #136]
   290c0:	ldr	x3, [sp, #248]
   290c4:	ldr	x6, [sp, #224]
   290c8:	lsr	x5, x5, #1
   290cc:	str	x7, [x0, x3, lsl #3]
   290d0:	add	x7, x7, #0x1
   290d4:	mov	x27, x6
   290d8:	b	29018 <mpfr_atan@@Base+0xef0>
   290dc:	sub	x28, x25, #0x10
   290e0:	sub	x27, x19, #0x10
   290e4:	mov	x2, x27
   290e8:	mov	x1, x28
   290ec:	mov	x0, x28
   290f0:	str	w4, [sp, #248]
   290f4:	bl	c070 <__gmpz_mul@plt>
   290f8:	ldr	x0, [sp, #224]
   290fc:	mov	x1, #0x1                   	// #1
   29100:	bl	cbb0 <__gmpz_cmp_ui@plt>
   29104:	ldr	w4, [sp, #248]
   29108:	cbz	w0, 2912c <mpfr_atan@@Base+0x1004>
   2910c:	ldr	x0, [sp, #136]
   29110:	sub	w4, w4, #0x1
   29114:	mov	x1, x28
   29118:	ldr	x2, [x0, w4, sxtw #3]
   2911c:	ldr	x0, [sp, #144]
   29120:	add	x2, x0, x2, lsl #4
   29124:	mov	x0, x28
   29128:	bl	c070 <__gmpz_mul@plt>
   2912c:	sub	x1, x25, #0x20
   29130:	mov	x2, x19
   29134:	mov	x0, x1
   29138:	str	x1, [sp, #248]
   2913c:	bl	c070 <__gmpz_mul@plt>
   29140:	sub	x25, x25, #0x10
   29144:	ldr	x0, [sp, #136]
   29148:	mov	x1, #0x1                   	// #1
   2914c:	ldr	x0, [x0, x24, lsl #3]
   29150:	sub	x24, x24, #0x1
   29154:	lsl	x0, x1, x0
   29158:	ldr	x1, [sp, #176]
   2915c:	add	x0, x1, x0
   29160:	str	x0, [sp, #176]
   29164:	ldr	x1, [sp, #248]
   29168:	mul	x2, x26, x0
   2916c:	mov	x0, x1
   29170:	bl	c290 <__gmpz_mul_2exp@plt>
   29174:	ldr	x1, [sp, #248]
   29178:	mov	x2, x28
   2917c:	mov	x0, x1
   29180:	bl	ca50 <__gmpz_add@plt>
   29184:	mov	x2, x19
   29188:	mov	x1, x27
   2918c:	mov	x0, x27
   29190:	sub	x19, x19, #0x10
   29194:	bl	c070 <__gmpz_mul@plt>
   29198:	b	28d7c <mpfr_atan@@Base+0xc54>
   2919c:	sub	x2, x2, x0
   291a0:	mov	x1, x23
   291a4:	mov	x0, x23
   291a8:	bl	c290 <__gmpz_mul_2exp@plt>
   291ac:	b	28dd4 <mpfr_atan@@Base+0xcac>
   291b0:	ldr	x1, [sp, #104]
   291b4:	sub	x2, x1, x0
   291b8:	mov	x1, x21
   291bc:	mov	x0, x21
   291c0:	bl	c290 <__gmpz_mul_2exp@plt>
   291c4:	b	28e18 <mpfr_atan@@Base+0xcf0>
   291c8:	ldr	x0, [sp, #120]
   291cc:	cmp	w22, #0x0
   291d0:	ldr	x1, [sp, #200]
   291d4:	ldr	x3, [x20]
   291d8:	add	x2, x0, x1
   291dc:	ldr	x0, [sp, #216]
   291e0:	cinc	x3, x3, eq  // eq = none
   291e4:	ldr	x1, [sp, #352]
   291e8:	sub	x2, x2, x0
   291ec:	ldr	x0, [sp, #376]
   291f0:	sub	x1, x1, #0x1
   291f4:	asr	x1, x1, #6
   291f8:	add	x1, x1, #0x1
   291fc:	bl	c400 <mpfr_round_p@plt>
   29200:	cbz	w0, 288dc <mpfr_atan@@Base+0x7b4>
   29204:	ldr	x0, [sp, #112]
   29208:	mov	x1, x19
   2920c:	mov	w2, w22
   29210:	add	x23, sp, #0x670
   29214:	mov	w21, #0x0                   	// #0
   29218:	ldr	w3, [x0, #8]
   2921c:	mov	x0, x20
   29220:	bl	c730 <mpfr_set4@plt>
   29224:	mov	w19, w0
   29228:	mov	x0, x23
   2922c:	bl	c200 <mpfr_mpz_clear@plt>
   29230:	ldr	w0, [sp, #196]
   29234:	add	w21, w21, #0x1
   29238:	add	x23, x23, #0x10
   2923c:	cmp	w0, w21
   29240:	b.ne	29228 <mpfr_atan@@Base+0x1100>  // b.any
   29244:	add	x0, sp, #0x130
   29248:	bl	c200 <mpfr_mpz_clear@plt>
   2924c:	ldr	x1, [sp, #480]
   29250:	cbz	x1, 2925c <mpfr_atan@@Base+0x1134>
   29254:	ldr	x0, [sp, #488]
   29258:	bl	ccc0 <mpfr_free_func@plt>
   2925c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   29260:	ldr	x1, [x0, #2592]
   29264:	add	x0, x0, #0xa20
   29268:	blr	x1
   2926c:	ldr	w3, [sp, #156]
   29270:	mrs	x1, tpidr_el0
   29274:	add	x2, x1, x0
   29278:	str	w3, [x1, x0]
   2927c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   29280:	ldr	x3, [x0, #2528]
   29284:	add	x0, x0, #0x9e0
   29288:	blr	x3
   2928c:	ldr	x3, [sp, #160]
   29290:	str	x3, [x1, x0]
   29294:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   29298:	ldr	x3, [x0, #2560]
   2929c:	add	x0, x0, #0xa00
   292a0:	blr	x3
   292a4:	ldr	x3, [sp, #168]
   292a8:	str	x3, [x1, x0]
   292ac:	ldr	x0, [x20, #16]
   292b0:	ldr	x1, [sp, #160]
   292b4:	cmp	x1, x0
   292b8:	b.gt	284bc <mpfr_atan@@Base+0x394>
   292bc:	cmp	x3, x0
   292c0:	b.lt	284bc <mpfr_atan@@Base+0x394>  // b.tstop
   292c4:	cbz	w19, 282a0 <mpfr_atan@@Base+0x178>
   292c8:	ldr	w0, [sp, #156]
   292cc:	orr	w0, w0, #0x8
   292d0:	str	w0, [x2]
   292d4:	b	282a0 <mpfr_atan@@Base+0x178>
   292d8:	ldr	x0, [sp, #120]
   292dc:	ldr	x1, [sp, #208]
   292e0:	ldr	w26, [sp, #196]
   292e4:	add	x0, x0, x1
   292e8:	str	x0, [sp, #120]
   292ec:	mov	x0, #0x2                   	// #2
   292f0:	ldr	x1, [sp, #120]
   292f4:	sdiv	x0, x1, x0
   292f8:	str	x0, [sp, #208]
   292fc:	b	28624 <mpfr_atan@@Base+0x4fc>

0000000000029300 <mpfr_cmp2@@Base>:
   29300:	stp	x29, x30, [sp, #-144]!
   29304:	mov	x29, sp
   29308:	stp	x21, x22, [sp, #32]
   2930c:	ldr	x21, [x0, #16]
   29310:	stp	x19, x20, [sp, #16]
   29314:	mov	x19, x1
   29318:	stp	x23, x24, [sp, #48]
   2931c:	mov	x20, x0
   29320:	stp	x25, x26, [sp, #64]
   29324:	stp	x27, x28, [sp, #80]
   29328:	mov	x27, x2
   2932c:	str	xzr, [sp, #128]
   29330:	ldr	x2, [x1, #16]
   29334:	mov	x1, #0x4                   	// #4
   29338:	movk	x1, #0x8000, lsl #48
   2933c:	cmp	x21, x1
   29340:	b.eq	29350 <mpfr_cmp2@@Base+0x50>  // b.none
   29344:	sub	x21, x21, x2
   29348:	cmp	x2, x1
   2934c:	b.ne	29360 <mpfr_cmp2@@Base+0x60>  // b.any
   29350:	mov	x1, x19
   29354:	mov	x0, x20
   29358:	bl	cb90 <mpfr_ubf_diff_exp@plt>
   2935c:	mov	x21, x0
   29360:	ldr	x1, [x20]
   29364:	mov	x0, #0x40                  	// #64
   29368:	ldr	x23, [x19, #24]
   2936c:	sub	x1, x1, #0x1
   29370:	ldr	x19, [x19]
   29374:	mov	x22, x21
   29378:	sdiv	x1, x1, x0
   2937c:	cmp	x21, #0x0
   29380:	sub	x19, x19, #0x1
   29384:	ldr	x24, [x20, #24]
   29388:	sdiv	x19, x19, x0
   2938c:	b.lt	29520 <mpfr_cmp2@@Base+0x220>  // b.tstop
   29390:	b.eq	29464 <mpfr_cmp2@@Base+0x164>  // b.none
   29394:	mov	w25, #0x1                   	// #1
   29398:	cmp	x22, #0x3f
   2939c:	b.hi	2954c <mpfr_cmp2@@Base+0x24c>  // b.pmore
   293a0:	mov	x21, #0x0                   	// #0
   293a4:	lsl	x2, x19, #3
   293a8:	ldr	x0, [x23, x2]
   293ac:	lsr	x0, x0, x22
   293b0:	str	x0, [sp, #128]
   293b4:	cbz	x22, 29544 <mpfr_cmp2@@Base+0x244>
   293b8:	ldr	x20, [x23, x2]
   293bc:	neg	w0, w22
   293c0:	lsl	x20, x20, x0
   293c4:	sub	x19, x19, #0x1
   293c8:	sub	x26, x1, #0x1
   293cc:	add	x28, sp, #0x80
   293d0:	ldr	x0, [x24, x1, lsl #3]
   293d4:	add	x4, sp, #0x88
   293d8:	ldr	x1, [sp, #128]
   293dc:	sub	x0, x0, x1
   293e0:	add	x1, sp, #0x78
   293e4:	str	x0, [sp, #136]
   293e8:	mov	x0, #0x0                   	// #0
   293ec:	cmp	x19, #0x0
   293f0:	ccmp	x20, #0x0, #0x0, lt  // lt = tstop
   293f4:	ldr	x3, [sp, #136]
   293f8:	b.eq	29580 <mpfr_cmp2@@Base+0x280>  // b.none
   293fc:	cmp	x0, #0x0
   29400:	ccmp	x3, #0x1, #0x0, eq  // eq = none
   29404:	b.ne	29584 <mpfr_cmp2@@Base+0x284>  // b.any
   29408:	tbnz	x26, #63, 2955c <mpfr_cmp2@@Base+0x25c>
   2940c:	ldr	x0, [x24, x26, lsl #3]
   29410:	stp	x0, x20, [sp, #120]
   29414:	tbnz	x19, #63, 29578 <mpfr_cmp2@@Base+0x278>
   29418:	ldr	x0, [x23, x19, lsl #3]
   2941c:	cbnz	x22, 29564 <mpfr_cmp2@@Base+0x264>
   29420:	add	x0, x0, x20
   29424:	str	x0, [sp, #128]
   29428:	mov	x0, x4
   2942c:	mov	x2, x28
   29430:	mov	x3, #0x1                   	// #1
   29434:	stp	x4, x1, [sp, #96]
   29438:	bl	bee0 <__gmpn_sub_n@plt>
   2943c:	mov	x5, #0x1                   	// #1
   29440:	sub	x26, x26, #0x1
   29444:	sub	x19, x19, #0x1
   29448:	add	x21, x21, #0x40
   2944c:	sub	x0, x5, x0
   29450:	ldp	x4, x1, [sp, #96]
   29454:	b	293ec <mpfr_cmp2@@Base+0xec>
   29458:	sub	x1, x1, #0x1
   2945c:	sub	x19, x19, #0x1
   29460:	add	x21, x21, #0x40
   29464:	cmp	x1, #0x0
   29468:	ccmp	x19, #0x0, #0x1, ge  // ge = tcont
   2946c:	b.lt	29494 <mpfr_cmp2@@Base+0x194>  // b.tstop
   29470:	ldr	x2, [x24, x1, lsl #3]
   29474:	ldr	x0, [x23, x19, lsl #3]
   29478:	cmp	x2, x0
   2947c:	b.eq	29458 <mpfr_cmp2@@Base+0x158>  // b.none
   29480:	ldr	x0, [x24, x1, lsl #3]
   29484:	tbz	x19, #63, 294f0 <mpfr_cmp2@@Base+0x1f0>
   29488:	mov	x23, x24
   2948c:	mov	w25, #0x1                   	// #1
   29490:	b	294a8 <mpfr_cmp2@@Base+0x1a8>
   29494:	tbz	x1, #63, 29480 <mpfr_cmp2@@Base+0x180>
   29498:	mov	w25, #0x0                   	// #0
   2949c:	tbnz	x19, #63, 294bc <mpfr_cmp2@@Base+0x1bc>
   294a0:	mov	x1, x19
   294a4:	mov	w25, #0xffffffff            	// #-1
   294a8:	ldr	x0, [x23, x1, lsl #3]
   294ac:	cbz	x0, 294dc <mpfr_cmp2@@Base+0x1dc>
   294b0:	clz	x0, x0
   294b4:	add	x21, x0, x21
   294b8:	str	x21, [x27]
   294bc:	mov	w0, w25
   294c0:	ldp	x19, x20, [sp, #16]
   294c4:	ldp	x21, x22, [sp, #32]
   294c8:	ldp	x23, x24, [sp, #48]
   294cc:	ldp	x25, x26, [sp, #64]
   294d0:	ldp	x27, x28, [sp, #80]
   294d4:	ldp	x29, x30, [sp], #144
   294d8:	ret
   294dc:	sub	x1, x1, #0x1
   294e0:	cmn	x1, #0x1
   294e4:	b.eq	29640 <mpfr_cmp2@@Base+0x340>  // b.none
   294e8:	add	x21, x21, #0x40
   294ec:	b	294a8 <mpfr_cmp2@@Base+0x1a8>
   294f0:	ldr	x2, [x23, x19, lsl #3]
   294f4:	cmp	x2, x0
   294f8:	b.ls	29650 <mpfr_cmp2@@Base+0x350>  // b.plast
   294fc:	mov	x0, x1
   29500:	mov	x1, x19
   29504:	mov	x19, x0
   29508:	mov	x0, x24
   2950c:	mov	x24, x23
   29510:	mov	x23, x0
   29514:	mov	w25, #0xffffffff            	// #-1
   29518:	mov	x22, #0x0                   	// #0
   2951c:	b	293a4 <mpfr_cmp2@@Base+0xa4>
   29520:	mov	x0, x1
   29524:	mov	x1, x19
   29528:	mov	x19, x0
   2952c:	mov	x0, x24
   29530:	neg	x22, x21
   29534:	mov	x24, x23
   29538:	mov	w25, #0xffffffff            	// #-1
   2953c:	mov	x23, x0
   29540:	b	29398 <mpfr_cmp2@@Base+0x98>
   29544:	mov	x20, #0x0                   	// #0
   29548:	b	293c4 <mpfr_cmp2@@Base+0xc4>
   2954c:	sub	x22, x22, #0x40
   29550:	mov	x21, #0x0                   	// #0
   29554:	mov	x20, #0x0                   	// #0
   29558:	b	293c8 <mpfr_cmp2@@Base+0xc8>
   2955c:	mov	x0, #0x0                   	// #0
   29560:	b	29410 <mpfr_cmp2@@Base+0x110>
   29564:	add	x20, x20, x0, lsr #1
   29568:	str	x20, [sp, #128]
   2956c:	ldr	x20, [x23, x19, lsl #3]
   29570:	lsl	x20, x20, #63
   29574:	b	29428 <mpfr_cmp2@@Base+0x128>
   29578:	mov	x20, #0x0                   	// #0
   2957c:	b	29428 <mpfr_cmp2@@Base+0x128>
   29580:	mov	x20, #0x0                   	// #0
   29584:	cbz	x0, 29598 <mpfr_cmp2@@Base+0x298>
   29588:	sub	x21, x21, #0x1
   2958c:	cbnz	x3, 294b8 <mpfr_cmp2@@Base+0x1b8>
   29590:	mov	w2, #0x40                  	// #64
   29594:	b	295f4 <mpfr_cmp2@@Base+0x2f4>
   29598:	clz	x1, x3
   2959c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   295a0:	add	x21, x1, x21
   295a4:	lsr	x0, x0, x1
   295a8:	cmp	x0, x3
   295ac:	b.ne	294b8 <mpfr_cmp2@@Base+0x1b8>  // b.any
   295b0:	b	29590 <mpfr_cmp2@@Base+0x290>
   295b4:	str	x20, [sp, #128]
   295b8:	tbnz	x19, #63, 295e8 <mpfr_cmp2@@Base+0x2e8>
   295bc:	lsl	x1, x19, #3
   295c0:	ldr	x0, [x23, x1]
   295c4:	lsr	x0, x0, x22
   295c8:	add	x0, x0, x20
   295cc:	str	x0, [sp, #128]
   295d0:	cbz	x22, 295e0 <mpfr_cmp2@@Base+0x2e0>
   295d4:	ldr	x0, [x23, x1]
   295d8:	sub	w20, w2, w22
   295dc:	lsl	x20, x0, x20
   295e0:	sub	x19, x19, #0x1
   295e4:	b	29610 <mpfr_cmp2@@Base+0x310>
   295e8:	mov	x20, #0x0                   	// #0
   295ec:	b	295e0 <mpfr_cmp2@@Base+0x2e0>
   295f0:	sub	x26, x26, #0x1
   295f4:	tbnz	x26, #63, 29648 <mpfr_cmp2@@Base+0x348>
   295f8:	cmp	x19, #0x0
   295fc:	ccmp	x20, #0x0, #0x0, lt  // lt = tstop
   29600:	b.eq	294b8 <mpfr_cmp2@@Base+0x1b8>  // b.none
   29604:	cmp	x22, #0x3f
   29608:	b.ls	295b4 <mpfr_cmp2@@Base+0x2b4>  // b.plast
   2960c:	sub	x22, x22, #0x40
   29610:	ldr	x1, [x24, x26, lsl #3]
   29614:	ldr	x0, [sp, #128]
   29618:	cmp	x1, x0
   2961c:	b.eq	295f0 <mpfr_cmp2@@Base+0x2f0>  // b.none
   29620:	cinc	x21, x21, cc  // cc = lo, ul, last
   29624:	b	294b8 <mpfr_cmp2@@Base+0x1b8>
   29628:	sub	x19, x19, #0x1
   2962c:	tbnz	x19, #63, 294b8 <mpfr_cmp2@@Base+0x1b8>
   29630:	ldr	x0, [x23, x19, lsl #3]
   29634:	cbz	x0, 29628 <mpfr_cmp2@@Base+0x328>
   29638:	add	x21, x21, #0x1
   2963c:	b	294b8 <mpfr_cmp2@@Base+0x1b8>
   29640:	mov	w25, #0x0                   	// #0
   29644:	b	294bc <mpfr_cmp2@@Base+0x1bc>
   29648:	cbnz	x20, 29638 <mpfr_cmp2@@Base+0x338>
   2964c:	b	2962c <mpfr_cmp2@@Base+0x32c>
   29650:	mov	w25, #0x1                   	// #1
   29654:	b	29518 <mpfr_cmp2@@Base+0x218>
   29658:	stp	x29, x30, [sp, #-32]!
   2965c:	cmp	x3, x2
   29660:	mov	x29, sp
   29664:	str	x19, [sp, #16]
   29668:	mov	x19, x3
   2966c:	b.le	29688 <mpfr_cmp2@@Base+0x388>
   29670:	sub	x2, x3, x2
   29674:	bl	c1c0 <__gmpz_fdiv_q_2exp@plt>
   29678:	mov	x0, x19
   2967c:	ldr	x19, [sp, #16]
   29680:	ldp	x29, x30, [sp], #32
   29684:	ret
   29688:	sub	x2, x2, x3
   2968c:	bl	c290 <__gmpz_mul_2exp@plt>
   29690:	b	29678 <mpfr_cmp2@@Base+0x378>
   29694:	stp	x29, x30, [sp, #-32]!
   29698:	mov	x5, #0xfffffffffffffff8    	// #-8
   2969c:	mov	x29, sp
   296a0:	ldr	w3, [x1, #4]
   296a4:	ldr	x4, [x1, #8]
   296a8:	cmp	w3, #0x0
   296ac:	cneg	w3, w3, lt  // lt = tstop
   296b0:	str	x19, [sp, #16]
   296b4:	cmp	x2, #0x0
   296b8:	add	x5, x5, w3, sxtw #3
   296bc:	sbfiz	x3, x3, #6, #32
   296c0:	ldr	x19, [x4, x5]
   296c4:	clz	x19, x19
   296c8:	sub	x19, x3, x19
   296cc:	ccmp	x2, x19, #0x0, ge  // ge = tcont
   296d0:	b.cs	296f0 <mpfr_cmp2@@Base+0x3f0>  // b.hs, b.nlast
   296d4:	sub	x19, x19, x2
   296d8:	mov	x2, x19
   296dc:	bl	c1c0 <__gmpz_fdiv_q_2exp@plt>
   296e0:	mov	x0, x19
   296e4:	ldr	x19, [sp, #16]
   296e8:	ldp	x29, x30, [sp], #32
   296ec:	ret
   296f0:	bl	c020 <__gmpz_set@plt>
   296f4:	mov	x0, #0x0                   	// #0
   296f8:	b	296e4 <mpfr_cmp2@@Base+0x3e4>
   296fc:	stp	x29, x30, [sp, #-240]!
   29700:	mov	x29, sp
   29704:	stp	x23, x24, [sp, #48]
   29708:	mov	x24, x0
   2970c:	ldr	x0, [x1, #16]
   29710:	stp	x19, x20, [sp, #16]
   29714:	neg	x0, x0
   29718:	stp	x21, x22, [sp, #32]
   2971c:	mov	x21, #0x2                   	// #2
   29720:	stp	x25, x26, [sp, #64]
   29724:	sdiv	x0, x2, x0
   29728:	stp	x27, x28, [sp, #80]
   2972c:	mov	x27, x1
   29730:	str	x3, [x29, #144]
   29734:	str	x2, [x29, #168]
   29738:	bl	bfa0 <__gmpfr_isqrt@plt>
   2973c:	cmp	x0, #0x2
   29740:	csel	x21, x0, x21, cs  // cs = hs, nlast
   29744:	str	xzr, [x29, #184]
   29748:	add	x19, x21, #0x1
   2974c:	lsl	x0, x19, #4
   29750:	str	x0, [x29, #136]
   29754:	cmp	x0, #0x4, lsl #12
   29758:	b.hi	29a10 <mpfr_cmp2@@Base+0x710>  // b.pmore
   2975c:	sub	sp, sp, x0
   29760:	mov	x20, sp
   29764:	lsl	x0, x19, #3
   29768:	str	x0, [x29, #160]
   2976c:	cmp	x0, #0x4, lsl #12
   29770:	b.hi	29a24 <mpfr_cmp2@@Base+0x724>  // b.pmore
   29774:	add	x0, x0, #0xf
   29778:	and	x0, x0, #0xfffffffffffffff0
   2977c:	sub	sp, sp, x0
   29780:	mov	x22, sp
   29784:	add	x25, x29, #0xe0
   29788:	add	x26, x29, #0xd0
   2978c:	mov	x0, x25
   29790:	bl	c010 <mpfr_mpz_init@plt>
   29794:	mov	x0, x26
   29798:	add	x19, x29, #0xc0
   2979c:	bl	c010 <mpfr_mpz_init@plt>
   297a0:	mov	x28, #0x1                   	// #1
   297a4:	mov	x0, x19
   297a8:	bl	c010 <mpfr_mpz_init@plt>
   297ac:	mov	x0, x24
   297b0:	mov	x1, #0x0                   	// #0
   297b4:	bl	bd30 <__gmpz_set_ui@plt>
   297b8:	mov	x23, #0x0                   	// #0
   297bc:	ldr	x0, [x29, #168]
   297c0:	sub	x28, x28, x0
   297c4:	ldr	x0, [x29, #144]
   297c8:	str	x28, [x0]
   297cc:	add	x0, x20, x23, lsl #4
   297d0:	add	x23, x23, #0x1
   297d4:	bl	c010 <mpfr_mpz_init@plt>
   297d8:	cmp	x21, x23
   297dc:	b.cs	297cc <mpfr_cmp2@@Base+0x4cc>  // b.hs, b.nlast
   297e0:	add	x23, x20, #0x10
   297e4:	mov	x1, x27
   297e8:	mov	x0, x23
   297ec:	bl	cb50 <mpfr_get_z_2exp@plt>
   297f0:	mov	x2, x0
   297f4:	str	x2, [x22, #8]
   297f8:	mov	x3, x28
   297fc:	mov	x1, x23
   29800:	mov	x0, x23
   29804:	bl	29658 <mpfr_cmp2@@Base+0x358>
   29808:	str	x0, [x22, #8]
   2980c:	mov	x2, x23
   29810:	mov	x1, x23
   29814:	mov	x0, x19
   29818:	bl	c070 <__gmpz_mul@plt>
   2981c:	ldr	x0, [x29, #168]
   29820:	mov	x1, x19
   29824:	sub	x27, x0, #0x1
   29828:	add	x0, x20, #0x20
   2982c:	mov	x2, x27
   29830:	bl	c1c0 <__gmpz_fdiv_q_2exp@plt>
   29834:	add	x0, x20, #0x30
   29838:	mov	x3, #0x3                   	// #3
   2983c:	str	x28, [x22, #16]
   29840:	str	x0, [x29, #152]
   29844:	cmp	x3, x21
   29848:	b.ls	29a38 <mpfr_cmp2@@Base+0x738>  // b.plast
   2984c:	mov	x0, x20
   29850:	mov	x1, #0x1                   	// #1
   29854:	bl	bd30 <__gmpz_set_ui@plt>
   29858:	mov	x23, #0x0                   	// #0
   2985c:	mov	x2, x27
   29860:	mov	x1, x20
   29864:	mov	x0, x20
   29868:	bl	c290 <__gmpz_mul_2exp@plt>
   2986c:	str	x28, [x22]
   29870:	mov	x0, x26
   29874:	mov	x1, #0x1                   	// #1
   29878:	mov	x28, #0x0                   	// #0
   2987c:	bl	bd30 <__gmpz_set_ui@plt>
   29880:	ldr	x0, [x29, #136]
   29884:	sub	x0, x0, #0x20
   29888:	add	x0, x20, x0
   2988c:	str	x0, [x29, #152]
   29890:	ldr	x0, [x29, #160]
   29894:	sub	x0, x0, #0x10
   29898:	add	x0, x22, x0
   2989c:	str	x0, [x29, #128]
   298a0:	ldr	x0, [x29, #136]
   298a4:	sub	x0, x0, #0x10
   298a8:	add	x0, x20, x0
   298ac:	str	x0, [x29, #136]
   298b0:	ldr	x0, [x29, #160]
   298b4:	sub	x0, x0, #0x8
   298b8:	add	x0, x22, x0
   298bc:	str	x0, [x29, #120]
   298c0:	ldr	x0, [x29, #168]
   298c4:	str	x0, [x29, #160]
   298c8:	sub	x0, x21, #0x1
   298cc:	str	x0, [x29, #104]
   298d0:	ldr	x0, [x29, #168]
   298d4:	neg	x0, x0
   298d8:	str	x0, [x29, #96]
   298dc:	ldr	x1, [x29, #160]
   298e0:	mov	x0, #0x1                   	// #1
   298e4:	sub	x3, x0, x1
   298e8:	ldr	x0, [x29, #128]
   298ec:	ldr	x1, [x29, #152]
   298f0:	ldr	x2, [x0]
   298f4:	mov	x0, x19
   298f8:	bl	29658 <mpfr_cmp2@@Base+0x358>
   298fc:	str	x0, [x29, #112]
   29900:	ldr	x2, [x29, #104]
   29904:	sub	x27, x2, #0x1
   29908:	cbnz	x2, 29a9c <mpfr_cmp2@@Base+0x79c>
   2990c:	mov	x2, x26
   29910:	mov	x1, x19
   29914:	mov	x0, x19
   29918:	bl	c070 <__gmpz_mul@plt>
   2991c:	ldr	x0, [x29, #144]
   29920:	mov	x1, x19
   29924:	ldr	x3, [x0]
   29928:	ldr	x0, [x29, #112]
   2992c:	add	x2, x0, x28
   29930:	mov	x0, x19
   29934:	bl	29658 <mpfr_cmp2@@Base+0x358>
   29938:	mov	x2, x19
   2993c:	mov	x1, x24
   29940:	mov	x0, x24
   29944:	bl	ca50 <__gmpz_add@plt>
   29948:	ldr	x2, [x29, #136]
   2994c:	mov	x1, x26
   29950:	mov	x0, x19
   29954:	bl	c070 <__gmpz_mul@plt>
   29958:	ldr	x0, [x29, #120]
   2995c:	mov	x1, #0x1                   	// #1
   29960:	ldr	x27, [x0]
   29964:	mov	x0, x25
   29968:	bl	bd30 <__gmpz_set_ui@plt>
   2996c:	add	x27, x28, x27
   29970:	mov	x28, #0x1                   	// #1
   29974:	add	x2, x23, x28
   29978:	mov	x1, x25
   2997c:	mov	x0, x25
   29980:	add	x28, x28, #0x1
   29984:	bl	c190 <__gmpz_mul_ui@plt>
   29988:	cmp	x21, x28
   2998c:	b.cs	29974 <mpfr_cmp2@@Base+0x674>  // b.hs, b.nlast
   29990:	mov	x0, x19
   29994:	mov	x2, x25
   29998:	mov	x1, x19
   2999c:	bl	beb0 <__gmpz_fdiv_q@plt>
   299a0:	ldr	w0, [x29, #196]
   299a4:	add	x23, x23, x21
   299a8:	cbnz	w0, 29ac4 <mpfr_cmp2@@Base+0x7c4>
   299ac:	mov	x22, #0x0                   	// #0
   299b0:	add	x0, x20, x22, lsl #4
   299b4:	add	x22, x22, #0x1
   299b8:	bl	c200 <mpfr_mpz_clear@plt>
   299bc:	cmp	x21, x22
   299c0:	b.cs	299b0 <mpfr_cmp2@@Base+0x6b0>  // b.hs, b.nlast
   299c4:	ldr	x0, [x29, #184]
   299c8:	cbz	x0, 299d0 <mpfr_cmp2@@Base+0x6d0>
   299cc:	bl	c4a0 <mpfr_tmp_free@plt>
   299d0:	mov	x0, x26
   299d4:	bl	c200 <mpfr_mpz_clear@plt>
   299d8:	mov	x0, x19
   299dc:	bl	c200 <mpfr_mpz_clear@plt>
   299e0:	mov	x0, x25
   299e4:	bl	c200 <mpfr_mpz_clear@plt>
   299e8:	add	x0, x23, #0x4
   299ec:	mov	sp, x29
   299f0:	mul	x0, x0, x23
   299f4:	ldp	x19, x20, [sp, #16]
   299f8:	ldp	x21, x22, [sp, #32]
   299fc:	ldp	x23, x24, [sp, #48]
   29a00:	ldp	x25, x26, [sp, #64]
   29a04:	ldp	x27, x28, [sp, #80]
   29a08:	ldp	x29, x30, [sp], #240
   29a0c:	ret
   29a10:	lsl	x1, x19, #4
   29a14:	add	x0, x29, #0xb8
   29a18:	bl	be40 <mpfr_tmp_allocate@plt>
   29a1c:	mov	x20, x0
   29a20:	b	29764 <mpfr_cmp2@@Base+0x464>
   29a24:	ldr	x1, [x29, #160]
   29a28:	add	x0, x29, #0xb8
   29a2c:	bl	be40 <mpfr_tmp_allocate@plt>
   29a30:	mov	x22, x0
   29a34:	b	29784 <mpfr_cmp2@@Base+0x484>
   29a38:	tbz	w3, #0, 29a88 <mpfr_cmp2@@Base+0x788>
   29a3c:	ldr	x0, [x29, #152]
   29a40:	mov	x2, x23
   29a44:	str	x3, [x29, #128]
   29a48:	sub	x1, x0, #0x10
   29a4c:	mov	x0, x19
   29a50:	bl	c070 <__gmpz_mul@plt>
   29a54:	ldr	x3, [x29, #128]
   29a58:	mov	x2, x27
   29a5c:	ldr	x0, [x29, #152]
   29a60:	mov	x1, x19
   29a64:	str	x3, [x29, #128]
   29a68:	bl	c1c0 <__gmpz_fdiv_q_2exp@plt>
   29a6c:	ldr	x3, [x29, #128]
   29a70:	ldr	x0, [x29, #152]
   29a74:	str	x28, [x22, x3, lsl #3]
   29a78:	add	x3, x3, #0x1
   29a7c:	add	x0, x0, #0x10
   29a80:	str	x0, [x29, #152]
   29a84:	b	29844 <mpfr_cmp2@@Base+0x544>
   29a88:	lsr	x2, x3, #1
   29a8c:	str	x3, [x29, #128]
   29a90:	add	x2, x20, x2, lsl #4
   29a94:	mov	x1, x2
   29a98:	b	29a4c <mpfr_cmp2@@Base+0x74c>
   29a9c:	add	x2, x23, x2
   29aa0:	mov	x1, x19
   29aa4:	mov	x0, x19
   29aa8:	bl	c6a0 <__gmpz_fdiv_q_ui@plt>
   29aac:	add	x2, x20, x27, lsl #4
   29ab0:	mov	x1, x19
   29ab4:	mov	x0, x19
   29ab8:	bl	ca50 <__gmpz_add@plt>
   29abc:	mov	x2, x27
   29ac0:	b	29904 <mpfr_cmp2@@Base+0x604>
   29ac4:	ldr	x2, [x29, #160]
   29ac8:	mov	x1, x19
   29acc:	mov	x0, x26
   29ad0:	bl	29694 <mpfr_cmp2@@Base+0x394>
   29ad4:	add	x28, x27, x0
   29ad8:	ldr	w0, [x29, #212]
   29adc:	cmp	w0, #0x0
   29ae0:	cbz	w0, 29b9c <mpfr_cmp2@@Base+0x89c>
   29ae4:	cneg	w0, w0, lt  // lt = tstop
   29ae8:	mov	x1, #0xfffffffffffffff8    	// #-8
   29aec:	ldr	x2, [x29, #216]
   29af0:	add	x1, x1, w0, sxtw #3
   29af4:	sbfiz	x0, x0, #6, #32
   29af8:	ldr	x1, [x2, x1]
   29afc:	clz	x1, x1
   29b00:	sub	x0, x0, x1
   29b04:	ldr	w1, [x24, #4]
   29b08:	mov	x2, #0xfffffffffffffff8    	// #-8
   29b0c:	ldr	x3, [x24, #8]
   29b10:	cmp	w1, #0x0
   29b14:	cneg	w1, w1, lt  // lt = tstop
   29b18:	ldr	x4, [x29, #168]
   29b1c:	add	x2, x2, w1, sxtw #3
   29b20:	sbfiz	x1, x1, #6, #32
   29b24:	ldr	x3, [x3, x2]
   29b28:	ldr	x2, [x29, #144]
   29b2c:	clz	x3, x3
   29b30:	sub	x1, x1, x3
   29b34:	ldr	x2, [x2]
   29b38:	sub	x2, x4, x2
   29b3c:	sub	x1, x2, x1
   29b40:	add	x1, x1, x28
   29b44:	add	x1, x1, x0
   29b48:	str	x1, [x29, #160]
   29b4c:	ldr	x1, [x29, #96]
   29b50:	add	x0, x28, x0
   29b54:	cmp	x0, x1
   29b58:	b.ls	299ac <mpfr_cmp2@@Base+0x6ac>  // b.plast
   29b5c:	cbz	x23, 298dc <mpfr_cmp2@@Base+0x5dc>
   29b60:	ldr	x1, [x29, #160]
   29b64:	mov	x0, #0x1                   	// #1
   29b68:	mov	x27, #0x0                   	// #0
   29b6c:	sub	x3, x0, x1
   29b70:	ldr	x2, [x22, x27, lsl #3]
   29b74:	add	x1, x20, x27, lsl #4
   29b78:	mov	x0, x1
   29b7c:	str	x3, [x29, #112]
   29b80:	bl	29658 <mpfr_cmp2@@Base+0x358>
   29b84:	str	x0, [x22, x27, lsl #3]
   29b88:	add	x27, x27, #0x1
   29b8c:	cmp	x27, x21
   29b90:	ldr	x3, [x29, #112]
   29b94:	b.ne	29b70 <mpfr_cmp2@@Base+0x870>  // b.any
   29b98:	b	298dc <mpfr_cmp2@@Base+0x5dc>
   29b9c:	mov	x0, #0x1                   	// #1
   29ba0:	b	29b04 <mpfr_cmp2@@Base+0x804>

0000000000029ba4 <mpfr_exp_2@@Base>:
   29ba4:	stp	x29, x30, [sp, #-448]!
   29ba8:	mov	x29, sp
   29bac:	stp	x0, x1, [sp, #128]
   29bb0:	ldr	x0, [sp, #128]
   29bb4:	stp	x21, x22, [sp, #32]
   29bb8:	ldr	x21, [x1, #16]
   29bbc:	stp	x19, x20, [sp, #16]
   29bc0:	stp	x23, x24, [sp, #48]
   29bc4:	cmn	x21, #0x1
   29bc8:	add	x23, sp, #0x110
   29bcc:	stp	x25, x26, [sp, #64]
   29bd0:	stp	x27, x28, [sp, #80]
   29bd4:	str	w2, [sp, #148]
   29bd8:	ldr	x25, [x0]
   29bdc:	b.ge	29c34 <mpfr_exp_2@@Base+0x90>  // b.tcont
   29be0:	mov	x20, #0x0                   	// #0
   29be4:	str	wzr, [sp, #144]
   29be8:	cmp	x25, #0x63
   29bec:	b.gt	29cc4 <mpfr_exp_2@@Base+0x120>
   29bf0:	add	x0, x25, #0x1
   29bf4:	mov	x1, #0x2                   	// #2
   29bf8:	sdiv	x0, x0, x1
   29bfc:	bl	bfa0 <__gmpfr_isqrt@plt>
   29c00:	add	x24, x0, #0x3
   29c04:	sub	x0, x25, #0x1
   29c08:	udiv	x0, x0, x24
   29c0c:	add	x0, x0, #0xa
   29c10:	lsl	x0, x0, #1
   29c14:	cmp	x0, #0x1
   29c18:	b.hi	29cd4 <mpfr_exp_2@@Base+0x130>  // b.pmore
   29c1c:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   29c20:	add	x2, x2, #0x5c0
   29c24:	mov	w1, #0x9f                  	// #159
   29c28:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   29c2c:	add	x0, x0, #0x5d1
   29c30:	bl	cbd0 <mpfr_assert_fail@plt>
   29c34:	adrp	x2, 73000 <__gmpfr_l2b@@Base+0x200>
   29c38:	mov	x0, #0x3f                  	// #63
   29c3c:	str	x0, [sp, #272]
   29c40:	add	x0, sp, #0x130
   29c44:	ldr	x2, [x2, #3984]
   29c48:	str	x0, [sp, #296]
   29c4c:	mov	w0, #0x1                   	// #1
   29c50:	mov	w3, #0x0                   	// #0
   29c54:	str	w0, [sp, #280]
   29c58:	mov	x0, x23
   29c5c:	bl	c6b0 <mpfr_div@plt>
   29c60:	ldr	x0, [sp, #288]
   29c64:	cmp	x0, #0x0
   29c68:	b.le	29be0 <mpfr_exp_2@@Base+0x3c>
   29c6c:	ldr	x1, [sp, #296]
   29c70:	neg	w0, w0
   29c74:	ldr	x20, [x1]
   29c78:	lsr	x20, x20, x0
   29c7c:	ldr	w0, [sp, #280]
   29c80:	cmp	w0, #0x0
   29c84:	b.gt	29cb0 <mpfr_exp_2@@Base+0x10c>
   29c88:	tbz	x20, #63, 29cac <mpfr_exp_2@@Base+0x108>
   29c8c:	mov	x20, #0x8000000000000000    	// #-9223372036854775808
   29c90:	mov	x0, #0x1                   	// #1
   29c94:	sub	x0, x0, x20
   29c98:	clz	x0, x0
   29c9c:	mov	w1, #0x40                  	// #64
   29ca0:	sub	w0, w1, w0
   29ca4:	str	w0, [sp, #144]
   29ca8:	b	29be8 <mpfr_exp_2@@Base+0x44>
   29cac:	neg	x20, x20
   29cb0:	cmp	x20, #0x0
   29cb4:	cbz	x20, 29be0 <mpfr_exp_2@@Base+0x3c>
   29cb8:	b.lt	29c90 <mpfr_exp_2@@Base+0xec>  // b.tstop
   29cbc:	add	x0, x20, #0x1
   29cc0:	b	29c98 <mpfr_exp_2@@Base+0xf4>
   29cc4:	lsl	x0, x25, #2
   29cc8:	bl	c130 <__gmpfr_cuberoot@plt>
   29ccc:	mov	x24, x0
   29cd0:	b	29c04 <mpfr_exp_2@@Base+0x60>
   29cd4:	sub	x0, x0, #0x1
   29cd8:	mov	w19, #0x40                  	// #64
   29cdc:	clz	x0, x0
   29ce0:	cmp	x21, #0x0
   29ce4:	sub	w19, w19, w0
   29ce8:	add	x0, x25, #0xa
   29cec:	sxtw	x19, w19
   29cf0:	add	x19, x19, x24, lsl #1
   29cf4:	add	x19, x19, x0
   29cf8:	b.le	29d00 <mpfr_exp_2@@Base+0x15c>
   29cfc:	add	x19, x19, x21
   29d00:	ldrsw	x0, [sp, #144]
   29d04:	str	x0, [sp, #160]
   29d08:	ldr	w0, [sp, #144]
   29d0c:	add	x22, x19, w0, sxtw
   29d10:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   29d14:	cmp	x22, x0
   29d18:	b.lt	29d20 <mpfr_exp_2@@Base+0x17c>  // b.tstop
   29d1c:	bl	c970 <mpfr_abort_prec_max@plt>
   29d20:	sub	x21, x22, #0x1
   29d24:	asr	x21, x21, #6
   29d28:	add	x21, x21, #0x1
   29d2c:	lsl	x0, x21, #1
   29d30:	cmp	x0, #0x10
   29d34:	b.le	29fdc <mpfr_exp_2@@Base+0x438>
   29d38:	lsl	x0, x21, #4
   29d3c:	str	x0, [sp, #304]
   29d40:	bl	cd90 <mpfr_allocate_func@plt>
   29d44:	str	x0, [sp, #312]
   29d48:	mov	w0, #0x1                   	// #1
   29d4c:	str	x22, [sp, #240]
   29d50:	add	x27, sp, #0xf0
   29d54:	ldr	x1, [sp, #312]
   29d58:	str	x22, [sp, #272]
   29d5c:	add	x22, sp, #0xc0
   29d60:	str	w0, [sp, #248]
   29d64:	str	w0, [sp, #280]
   29d68:	mov	x0, x22
   29d6c:	add	x21, x1, x21, lsl #3
   29d70:	str	x21, [sp, #264]
   29d74:	str	x1, [sp, #296]
   29d78:	bl	c010 <mpfr_mpz_init@plt>
   29d7c:	mov	x0, #0x40                  	// #64
   29d80:	str	x0, [sp, #96]
   29d84:	mrs	x0, tpidr_el0
   29d88:	str	x0, [sp, #152]
   29d8c:	add	x0, sp, #0xb8
   29d90:	str	x0, [sp, #168]
   29d94:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   29d98:	ldr	x1, [x0, #2576]
   29d9c:	add	x0, x0, #0xa10
   29da0:	blr	x1
   29da4:	lsr	x21, x20, #63
   29da8:	ldr	x1, [sp, #152]
   29dac:	add	w21, w21, #0x1
   29db0:	mov	w2, w21
   29db4:	add	x1, x1, x0
   29db8:	mov	x0, x27
   29dbc:	bl	c410 <mpfr_cache@plt>
   29dc0:	cmp	x20, #0x0
   29dc4:	mov	w3, w21
   29dc8:	cneg	x2, x20, lt  // lt = tstop
   29dcc:	mov	x1, x27
   29dd0:	mov	x0, x23
   29dd4:	bl	bad0 <mpfr_mul_ui@plt>
   29dd8:	tbz	x20, #63, 29de8 <mpfr_exp_2@@Base+0x244>
   29ddc:	ldr	w0, [sp, #280]
   29de0:	neg	w0, w0
   29de4:	str	w0, [sp, #280]
   29de8:	ldr	x1, [sp, #136]
   29dec:	mov	x2, x23
   29df0:	mov	x0, x23
   29df4:	mov	w3, #0x2                   	// #2
   29df8:	mov	x21, #0x8000000000000003    	// #-9223372036854775805
   29dfc:	bl	bbf0 <mpfr_sub@plt>
   29e00:	ldr	x0, [sp, #288]
   29e04:	cmp	x0, x21
   29e08:	b.le	2a194 <mpfr_exp_2@@Base+0x5f0>
   29e0c:	ldr	w0, [sp, #280]
   29e10:	tbnz	w0, #31, 29fe8 <mpfr_exp_2@@Base+0x444>
   29e14:	ldr	w0, [sp, #144]
   29e18:	cbz	w0, 29e2c <mpfr_exp_2@@Base+0x288>
   29e1c:	mov	x1, x19
   29e20:	mov	x0, x23
   29e24:	mov	w2, #0x2                   	// #2
   29e28:	bl	ca00 <mpfr_prec_round@plt>
   29e2c:	mov	x2, x24
   29e30:	mov	x1, x23
   29e34:	mov	x0, x23
   29e38:	mov	w3, #0x2                   	// #2
   29e3c:	bl	c980 <mpfr_div_2ui@plt>
   29e40:	cmp	x25, #0x63
   29e44:	b.gt	2a074 <mpfr_exp_2@@Base+0x4d0>
   29e48:	mov	x21, #0x1                   	// #1
   29e4c:	add	x28, sp, #0xd0
   29e50:	sub	x0, x21, x19
   29e54:	add	x26, sp, #0xe0
   29e58:	str	x0, [sp, #184]
   29e5c:	mov	x0, x28
   29e60:	bl	c010 <mpfr_mpz_init@plt>
   29e64:	mov	x0, x26
   29e68:	bl	c010 <mpfr_mpz_init@plt>
   29e6c:	mov	x1, x21
   29e70:	mov	x0, x28
   29e74:	bl	bd30 <__gmpz_set_ui@plt>
   29e78:	mov	x1, x21
   29e7c:	mov	x0, x22
   29e80:	bl	bd30 <__gmpz_set_ui@plt>
   29e84:	mov	x21, #0x0                   	// #0
   29e88:	sub	x2, x19, #0x1
   29e8c:	mov	x1, x22
   29e90:	mov	x0, x22
   29e94:	bl	c290 <__gmpz_mul_2exp@plt>
   29e98:	mov	x1, x23
   29e9c:	mov	x0, x26
   29ea0:	bl	cb50 <mpfr_get_z_2exp@plt>
   29ea4:	str	x0, [sp, #104]
   29ea8:	str	xzr, [sp, #120]
   29eac:	add	x0, x21, #0x1
   29eb0:	mov	x2, x26
   29eb4:	mov	x1, x28
   29eb8:	str	x0, [sp, #112]
   29ebc:	mov	x0, x28
   29ec0:	bl	c070 <__gmpz_mul@plt>
   29ec4:	ldr	x1, [sp, #104]
   29ec8:	mov	x3, #0xfffffffffffffff8    	// #-8
   29ecc:	ldr	x0, [sp, #120]
   29ed0:	ldr	x2, [sp, #200]
   29ed4:	add	x4, x0, x1
   29ed8:	ldr	w0, [sp, #196]
   29edc:	mov	x1, #0xfffffffffffffff8    	// #-8
   29ee0:	ldr	x6, [sp, #216]
   29ee4:	cmp	w0, #0x0
   29ee8:	cneg	w0, w0, lt  // lt = tstop
   29eec:	str	x4, [sp, #120]
   29ef0:	add	x1, x1, w0, sxtw #3
   29ef4:	sbfiz	x0, x0, #6, #32
   29ef8:	ldr	x2, [x2, x1]
   29efc:	ldr	w1, [sp, #212]
   29f00:	clz	x2, x2
   29f04:	cmp	w1, #0x0
   29f08:	sub	x2, x0, x2
   29f0c:	cneg	w1, w1, lt  // lt = tstop
   29f10:	ldr	x0, [sp, #184]
   29f14:	add	x5, x3, w1, sxtw #3
   29f18:	sbfiz	x1, x1, #6, #32
   29f1c:	add	x2, x2, x0
   29f20:	ldr	x5, [x6, x5]
   29f24:	sub	x2, x2, x4
   29f28:	clz	x0, x5
   29f2c:	sub	x1, x1, x0
   29f30:	mov	x0, x28
   29f34:	sub	x2, x2, x1
   29f38:	mov	x1, x28
   29f3c:	sub	x2, x19, x2
   29f40:	bl	29694 <mpfr_cmp2@@Base+0x394>
   29f44:	ldr	x4, [sp, #120]
   29f48:	add	x0, x4, x0
   29f4c:	str	x0, [sp, #120]
   29f50:	add	x0, x21, #0x1
   29f54:	cmp	x0, #0x1
   29f58:	b.ls	29f80 <mpfr_exp_2@@Base+0x3dc>  // b.plast
   29f5c:	tst	x21, x0
   29f60:	b.ne	2a004 <mpfr_exp_2@@Base+0x460>  // b.any
   29f64:	clz	x2, x21
   29f68:	mov	w0, #0x40                  	// #64
   29f6c:	sub	w2, w0, w2
   29f70:	mov	x1, x28
   29f74:	mov	x0, x28
   29f78:	sxtw	x2, w2
   29f7c:	bl	c1c0 <__gmpz_fdiv_q_2exp@plt>
   29f80:	ldr	w0, [sp, #212]
   29f84:	cbz	w0, 2a018 <mpfr_exp_2@@Base+0x474>
   29f88:	mov	x2, x28
   29f8c:	mov	x1, x22
   29f90:	mov	x0, x22
   29f94:	bl	ca50 <__gmpz_add@plt>
   29f98:	ldr	w2, [sp, #212]
   29f9c:	mov	x0, #0xfffffffffffffff8    	// #-8
   29fa0:	ldr	x1, [sp, #216]
   29fa4:	cmp	w2, #0x0
   29fa8:	cneg	w2, w2, lt  // lt = tstop
   29fac:	add	x0, x0, w2, sxtw #3
   29fb0:	sbfiz	x2, x2, #6, #32
   29fb4:	ldr	x0, [x1, x0]
   29fb8:	mov	x1, x26
   29fbc:	clz	x0, x0
   29fc0:	sub	x2, x2, x0
   29fc4:	mov	x0, x26
   29fc8:	bl	29694 <mpfr_cmp2@@Base+0x394>
   29fcc:	ldp	x1, x21, [sp, #104]
   29fd0:	add	x0, x1, x0
   29fd4:	str	x0, [sp, #104]
   29fd8:	b	29eac <mpfr_exp_2@@Base+0x308>
   29fdc:	add	x0, sp, #0x140
   29fe0:	str	xzr, [sp, #304]
   29fe4:	b	29d44 <mpfr_exp_2@@Base+0x1a0>
   29fe8:	sub	x20, x20, #0x1
   29fec:	mov	x2, x27
   29ff0:	mov	x1, x23
   29ff4:	mov	x0, x23
   29ff8:	mov	w3, #0x2                   	// #2
   29ffc:	bl	c230 <mpfr_add@plt>
   2a000:	b	29e00 <mpfr_exp_2@@Base+0x25c>
   2a004:	add	x2, x21, #0x1
   2a008:	mov	x1, x28
   2a00c:	mov	x0, x28
   2a010:	bl	c6a0 <__gmpz_fdiv_q_ui@plt>
   2a014:	b	29f80 <mpfr_exp_2@@Base+0x3dc>
   2a018:	mov	x0, x28
   2a01c:	bl	c200 <mpfr_mpz_clear@plt>
   2a020:	mov	x0, x26
   2a024:	bl	c200 <mpfr_mpz_clear@plt>
   2a028:	ldr	x0, [sp, #112]
   2a02c:	add	x21, x21, #0x2
   2a030:	mul	x28, x21, x0
   2a034:	add	x28, x28, x28, lsl #1
   2a038:	mov	x21, #0x0                   	// #0
   2a03c:	cmp	x21, x24
   2a040:	b.ne	2a090 <mpfr_exp_2@@Base+0x4ec>  // b.any
   2a044:	ldr	x2, [sp, #184]
   2a048:	mov	x1, x22
   2a04c:	mov	x0, x27
   2a050:	mov	w3, #0x0                   	// #0
   2a054:	bl	c580 <mpfr_set_z_2exp@plt>
   2a058:	cmp	x28, #0x1
   2a05c:	b.eq	2a18c <mpfr_exp_2@@Base+0x5e8>  // b.none
   2a060:	b.hi	2a0d0 <mpfr_exp_2@@Base+0x52c>  // b.pmore
   2a064:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2a068:	mov	w1, #0xf5                  	// #245
   2a06c:	add	x2, x2, #0x5d9
   2a070:	b	29c28 <mpfr_exp_2@@Base+0x84>
   2a074:	ldr	x3, [sp, #168]
   2a078:	mov	x2, x19
   2a07c:	mov	x1, x23
   2a080:	mov	x0, x22
   2a084:	bl	296fc <mpfr_cmp2@@Base+0x3fc>
   2a088:	mov	x28, x0
   2a08c:	b	2a038 <mpfr_exp_2@@Base+0x494>
   2a090:	mov	x2, x22
   2a094:	mov	x1, x22
   2a098:	mov	x0, x22
   2a09c:	bl	c070 <__gmpz_mul@plt>
   2a0a0:	ldr	x0, [sp, #184]
   2a0a4:	mov	x1, x22
   2a0a8:	mov	x2, x19
   2a0ac:	add	x21, x21, #0x1
   2a0b0:	lsl	x0, x0, #1
   2a0b4:	str	x0, [sp, #184]
   2a0b8:	mov	x0, x22
   2a0bc:	bl	29694 <mpfr_cmp2@@Base+0x394>
   2a0c0:	ldr	x1, [sp, #184]
   2a0c4:	add	x1, x1, x0
   2a0c8:	str	x1, [sp, #184]
   2a0cc:	b	2a03c <mpfr_exp_2@@Base+0x498>
   2a0d0:	sub	x28, x28, #0x1
   2a0d4:	mov	w2, #0x40                  	// #64
   2a0d8:	clz	x28, x28
   2a0dc:	sub	w28, w2, w28
   2a0e0:	sxtw	x28, w28
   2a0e4:	ldr	x1, [sp, #256]
   2a0e8:	mov	x2, #0xfffffffffffffffe    	// #-2
   2a0ec:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2a0f0:	sub	x2, x2, x24
   2a0f4:	cmp	x1, x0
   2a0f8:	b.le	2a194 <mpfr_exp_2@@Base+0x5f0>
   2a0fc:	ldr	w0, [sp, #148]
   2a100:	sub	x28, x19, x28
   2a104:	ldr	x1, [sp, #240]
   2a108:	cmp	w0, #0x0
   2a10c:	ldr	x0, [sp, #264]
   2a110:	sub	x1, x1, #0x1
   2a114:	add	x2, x28, x2
   2a118:	cinc	x3, x25, eq  // eq = none
   2a11c:	asr	x1, x1, #6
   2a120:	add	x1, x1, #0x1
   2a124:	bl	c400 <mpfr_round_p@plt>
   2a128:	cbz	w0, 2a194 <mpfr_exp_2@@Base+0x5f0>
   2a12c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2a130:	ldr	x1, [x0, #2592]
   2a134:	add	x0, x0, #0xa20
   2a138:	blr	x1
   2a13c:	ldr	w3, [sp, #148]
   2a140:	ldr	x1, [sp, #152]
   2a144:	mov	x2, x20
   2a148:	str	wzr, [x1, x0]
   2a14c:	mov	x1, x27
   2a150:	ldr	x0, [sp, #128]
   2a154:	bl	bc10 <mpfr_mul_2si@plt>
   2a158:	mov	w19, w0
   2a15c:	mov	x0, x22
   2a160:	bl	c200 <mpfr_mpz_clear@plt>
   2a164:	ldr	x1, [sp, #304]
   2a168:	cbnz	x1, 2a240 <mpfr_exp_2@@Base+0x69c>
   2a16c:	mov	w0, w19
   2a170:	ldp	x19, x20, [sp, #16]
   2a174:	ldp	x21, x22, [sp, #32]
   2a178:	ldp	x23, x24, [sp, #48]
   2a17c:	ldp	x25, x26, [sp, #64]
   2a180:	ldp	x27, x28, [sp, #80]
   2a184:	ldp	x29, x30, [sp], #448
   2a188:	ret
   2a18c:	mov	x28, #0x0                   	// #0
   2a190:	b	2a0e4 <mpfr_exp_2@@Base+0x540>
   2a194:	ldr	x1, [sp, #96]
   2a198:	mov	x0, #0xfffffffffffffeff    	// #-257
   2a19c:	movk	x0, #0x7fff, lsl #48
   2a1a0:	sub	x0, x0, x19
   2a1a4:	cmp	x0, x1
   2a1a8:	b.ge	2a1bc <mpfr_exp_2@@Base+0x618>  // b.tcont
   2a1ac:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2a1b0:	mov	w1, #0x102                 	// #258
   2a1b4:	add	x2, x2, #0x5e1
   2a1b8:	b	29c28 <mpfr_exp_2@@Base+0x84>
   2a1bc:	ldr	x0, [sp, #96]
   2a1c0:	ldr	x1, [sp, #304]
   2a1c4:	add	x19, x19, x0
   2a1c8:	mov	x0, #0x2                   	// #2
   2a1cc:	sdiv	x0, x19, x0
   2a1d0:	str	x0, [sp, #96]
   2a1d4:	ldr	x0, [sp, #160]
   2a1d8:	add	x26, x0, x19
   2a1dc:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   2a1e0:	cmp	x26, x0
   2a1e4:	b.ge	29d1c <mpfr_exp_2@@Base+0x178>  // b.tcont
   2a1e8:	sub	x21, x26, #0x1
   2a1ec:	asr	x21, x21, #6
   2a1f0:	add	x21, x21, #0x1
   2a1f4:	lsl	x0, x21, #4
   2a1f8:	str	x0, [sp, #304]
   2a1fc:	cbnz	x1, 2a230 <mpfr_exp_2@@Base+0x68c>
   2a200:	bl	cd90 <mpfr_allocate_func@plt>
   2a204:	str	x0, [sp, #312]
   2a208:	mov	w0, #0x1                   	// #1
   2a20c:	str	x26, [sp, #240]
   2a210:	ldr	x1, [sp, #312]
   2a214:	str	w0, [sp, #248]
   2a218:	str	x26, [sp, #272]
   2a21c:	str	w0, [sp, #280]
   2a220:	add	x21, x1, x21, lsl #3
   2a224:	str	x21, [sp, #264]
   2a228:	str	x1, [sp, #296]
   2a22c:	b	29d94 <mpfr_exp_2@@Base+0x1f0>
   2a230:	mov	x2, x0
   2a234:	ldr	x0, [sp, #312]
   2a238:	bl	c250 <mpfr_reallocate_func@plt>
   2a23c:	b	2a204 <mpfr_exp_2@@Base+0x660>
   2a240:	ldr	x0, [sp, #312]
   2a244:	bl	ccc0 <mpfr_free_func@plt>
   2a248:	b	2a16c <mpfr_exp_2@@Base+0x5c8>

000000000002a24c <mpfr_asin@@Base>:
   2a24c:	stp	x29, x30, [sp, #-144]!
   2a250:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   2a254:	mov	x29, sp
   2a258:	stp	x21, x22, [sp, #32]
   2a25c:	mov	w21, w2
   2a260:	mov	x22, x1
   2a264:	ldr	x2, [x1, #16]
   2a268:	stp	x19, x20, [sp, #16]
   2a26c:	stp	x23, x24, [sp, #48]
   2a270:	cmp	x2, x3
   2a274:	mov	x24, x0
   2a278:	stp	x25, x26, [sp, #64]
   2a27c:	stp	x27, x28, [sp, #80]
   2a280:	b.gt	2a2f8 <mpfr_asin@@Base+0xac>
   2a284:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   2a288:	add	x2, x2, x0
   2a28c:	cmp	x2, #0x1
   2a290:	b.hi	2a2e4 <mpfr_asin@@Base+0x98>  // b.pmore
   2a294:	add	x0, x0, #0x4
   2a298:	str	x0, [x24, #16]
   2a29c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2a2a0:	ldr	x1, [x0, #2592]
   2a2a4:	add	x0, x0, #0xa20
   2a2a8:	blr	x1
   2a2ac:	mrs	x1, tpidr_el0
   2a2b0:	add	x0, x1, x0
   2a2b4:	ldr	w1, [x0]
   2a2b8:	orr	w1, w1, #0x4
   2a2bc:	str	w1, [x0]
   2a2c0:	mov	w19, #0x0                   	// #0
   2a2c4:	mov	w0, w19
   2a2c8:	ldp	x19, x20, [sp, #16]
   2a2cc:	ldp	x21, x22, [sp, #32]
   2a2d0:	ldp	x23, x24, [sp, #48]
   2a2d4:	ldp	x25, x26, [sp, #64]
   2a2d8:	ldp	x27, x28, [sp, #80]
   2a2dc:	ldp	x29, x30, [sp], #144
   2a2e0:	ret
   2a2e4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2a2e8:	str	x0, [x24, #16]
   2a2ec:	ldr	w0, [x1, #8]
   2a2f0:	str	w0, [x24, #8]
   2a2f4:	b	2a2c0 <mpfr_asin@@Base+0x74>
   2a2f8:	mov	x3, #0xfffffffffffffffe    	// #-2
   2a2fc:	mul	x2, x2, x3
   2a300:	cmp	x2, #0x0
   2a304:	b.gt	2a3dc <mpfr_asin@@Base+0x190>
   2a308:	ldr	x1, [x22]
   2a30c:	add	x25, sp, #0x70
   2a310:	mov	x0, x25
   2a314:	mrs	x20, tpidr_el0
   2a318:	bl	cb10 <mpfr_init2@plt>
   2a31c:	mov	x1, x22
   2a320:	mov	w3, #0x1                   	// #1
   2a324:	mov	w2, #0x0                   	// #0
   2a328:	mov	x0, x25
   2a32c:	bl	c730 <mpfr_set4@plt>
   2a330:	mov	x1, #0x1                   	// #1
   2a334:	mov	x0, x25
   2a338:	mov	x2, #0x0                   	// #0
   2a33c:	bl	bfd0 <mpfr_cmp_ui_2exp@plt>
   2a340:	mov	w19, w0
   2a344:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2a348:	ldr	x1, [x0, #2592]
   2a34c:	add	x0, x0, #0xa20
   2a350:	blr	x1
   2a354:	ldr	w23, [x20, x0]
   2a358:	add	x28, x20, x0
   2a35c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2a360:	ldr	x1, [x0, #2528]
   2a364:	add	x0, x0, #0x9e0
   2a368:	blr	x1
   2a36c:	add	x27, x20, x0
   2a370:	ldr	x0, [x20, x0]
   2a374:	str	x0, [sp, #96]
   2a378:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2a37c:	ldr	x1, [x0, #2560]
   2a380:	add	x0, x0, #0xa00
   2a384:	blr	x1
   2a388:	add	x26, x20, x0
   2a38c:	ldr	x0, [x20, x0]
   2a390:	str	x0, [sp, #104]
   2a394:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   2a398:	str	x0, [x27]
   2a39c:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   2a3a0:	str	x0, [x26]
   2a3a4:	tbnz	w19, #31, 2a50c <mpfr_asin@@Base+0x2c0>
   2a3a8:	mov	x0, x25
   2a3ac:	bl	c0f0 <mpfr_clear@plt>
   2a3b0:	cbz	w19, 2a408 <mpfr_asin@@Base+0x1bc>
   2a3b4:	ldr	x0, [sp, #96]
   2a3b8:	str	x0, [x27]
   2a3bc:	ldr	x0, [sp, #104]
   2a3c0:	str	x0, [x26]
   2a3c4:	mov	x0, #0x2                   	// #2
   2a3c8:	orr	w23, w23, #0x4
   2a3cc:	movk	x0, #0x8000, lsl #48
   2a3d0:	str	w23, [x28]
   2a3d4:	str	x0, [x24, #16]
   2a3d8:	b	2a2c0 <mpfr_asin@@Base+0x74>
   2a3dc:	ldr	x3, [x0]
   2a3e0:	add	x2, x2, #0x2
   2a3e4:	add	x3, x3, #0x1
   2a3e8:	cmp	x3, x2
   2a3ec:	b.cs	2a308 <mpfr_asin@@Base+0xbc>  // b.hs, b.nlast
   2a3f0:	mov	w4, w21
   2a3f4:	mov	w3, #0x1                   	// #1
   2a3f8:	bl	c5d0 <mpfr_round_near_x@plt>
   2a3fc:	mov	w19, w0
   2a400:	cbz	w0, 2a308 <mpfr_asin@@Base+0xbc>
   2a404:	b	2a2c4 <mpfr_asin@@Base+0x78>
   2a408:	ldr	w0, [x22, #8]
   2a40c:	cmp	w0, #0x0
   2a410:	b.le	2a4c0 <mpfr_asin@@Base+0x274>
   2a414:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2a418:	ldr	x1, [x0, #2640]
   2a41c:	add	x0, x0, #0xa50
   2a420:	blr	x1
   2a424:	mov	w2, w21
   2a428:	add	x1, x20, x0
   2a42c:	mov	x0, x24
   2a430:	bl	c410 <mpfr_cache@plt>
   2a434:	mov	w19, w0
   2a438:	mov	w3, w21
   2a43c:	mov	x1, x24
   2a440:	mov	x0, x24
   2a444:	mov	x2, #0x1                   	// #1
   2a448:	bl	c980 <mpfr_div_2ui@plt>
   2a44c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2a450:	ldr	x1, [x0, #2592]
   2a454:	add	x0, x0, #0xa20
   2a458:	blr	x1
   2a45c:	add	x1, x20, x0
   2a460:	str	w23, [x20, x0]
   2a464:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2a468:	ldr	x2, [x0, #2528]
   2a46c:	add	x0, x0, #0x9e0
   2a470:	blr	x2
   2a474:	ldr	x2, [sp, #96]
   2a478:	str	x2, [x20, x0]
   2a47c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2a480:	ldr	x2, [x0, #2560]
   2a484:	add	x0, x0, #0xa00
   2a488:	blr	x2
   2a48c:	ldr	x2, [sp, #104]
   2a490:	str	x2, [x20, x0]
   2a494:	ldr	x0, [x24, #16]
   2a498:	ldr	x2, [sp, #96]
   2a49c:	cmp	x2, x0
   2a4a0:	b.gt	2a638 <mpfr_asin@@Base+0x3ec>
   2a4a4:	ldr	x2, [sp, #104]
   2a4a8:	cmp	x2, x0
   2a4ac:	b.lt	2a638 <mpfr_asin@@Base+0x3ec>  // b.tstop
   2a4b0:	cbz	w19, 2a2c4 <mpfr_asin@@Base+0x78>
   2a4b4:	orr	w23, w23, #0x8
   2a4b8:	str	w23, [x1]
   2a4bc:	b	2a2c4 <mpfr_asin@@Base+0x78>
   2a4c0:	cmp	w21, #0x2
   2a4c4:	b.eq	2a504 <mpfr_asin@@Base+0x2b8>  // b.none
   2a4c8:	cmp	w21, #0x3
   2a4cc:	mov	w2, #0x2                   	// #2
   2a4d0:	csel	w2, w21, w2, ne  // ne = any
   2a4d4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2a4d8:	ldr	x1, [x0, #2640]
   2a4dc:	add	x0, x0, #0xa50
   2a4e0:	blr	x1
   2a4e4:	add	x1, x20, x0
   2a4e8:	mov	x0, x24
   2a4ec:	bl	c410 <mpfr_cache@plt>
   2a4f0:	neg	w19, w0
   2a4f4:	ldr	w0, [x24, #8]
   2a4f8:	neg	w0, w0
   2a4fc:	str	w0, [x24, #8]
   2a500:	b	2a438 <mpfr_asin@@Base+0x1ec>
   2a504:	mov	w2, #0x3                   	// #3
   2a508:	b	2a4d4 <mpfr_asin@@Base+0x288>
   2a50c:	mov	x2, x25
   2a510:	mov	x0, x25
   2a514:	mov	w3, #0x3                   	// #3
   2a518:	mov	x1, #0x1                   	// #1
   2a51c:	bl	cae0 <mpfr_ui_sub@plt>
   2a520:	mov	x19, #0x2                   	// #2
   2a524:	ldr	x6, [x24]
   2a528:	mov	x27, #0x40                  	// #64
   2a52c:	ldr	x26, [sp, #128]
   2a530:	add	x6, x6, #0xa
   2a534:	sub	x26, x19, x26
   2a538:	add	x28, x6, x26
   2a53c:	mov	x1, x28
   2a540:	mov	x0, x25
   2a544:	bl	bf50 <mpfr_set_prec@plt>
   2a548:	mov	x1, x22
   2a54c:	mov	w2, #0x0                   	// #0
   2a550:	mov	x0, x25
   2a554:	bl	c490 <mpfr_sqr@plt>
   2a558:	mov	w3, #0x0                   	// #0
   2a55c:	mov	x2, x25
   2a560:	mov	x1, #0x1                   	// #1
   2a564:	mov	x0, x25
   2a568:	bl	cae0 <mpfr_ui_sub@plt>
   2a56c:	mov	x1, x25
   2a570:	mov	w2, #0x0                   	// #0
   2a574:	mov	x0, x25
   2a578:	bl	c9c0 <mpfr_sqrt@plt>
   2a57c:	mov	w3, #0x0                   	// #0
   2a580:	mov	x2, x25
   2a584:	mov	x1, x22
   2a588:	mov	x0, x25
   2a58c:	bl	c6b0 <mpfr_div@plt>
   2a590:	mov	x1, x25
   2a594:	mov	x0, x25
   2a598:	mov	w2, #0x0                   	// #0
   2a59c:	bl	c720 <mpfr_atan@plt>
   2a5a0:	ldr	x0, [sp, #128]
   2a5a4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   2a5a8:	cmp	x0, x1
   2a5ac:	b.gt	2a5dc <mpfr_asin@@Base+0x390>
   2a5b0:	mov	x0, #0xfffffffffffffeff    	// #-257
   2a5b4:	movk	x0, #0x7fff, lsl #48
   2a5b8:	sub	x0, x0, x28
   2a5bc:	cmp	x0, x27
   2a5c0:	b.ge	2a62c <mpfr_asin@@Base+0x3e0>  // b.tcont
   2a5c4:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   2a5c8:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2a5cc:	add	x2, x2, #0x519
   2a5d0:	add	x0, x0, #0x624
   2a5d4:	mov	w1, #0x73                  	// #115
   2a5d8:	bl	cbd0 <mpfr_assert_fail@plt>
   2a5dc:	ldr	x1, [sp, #112]
   2a5e0:	cmp	w21, #0x0
   2a5e4:	ldr	x0, [sp, #136]
   2a5e8:	sub	x1, x1, #0x1
   2a5ec:	ldr	x3, [x24]
   2a5f0:	asr	x1, x1, #6
   2a5f4:	sub	x2, x28, x26
   2a5f8:	add	x1, x1, #0x1
   2a5fc:	cinc	x3, x3, eq  // eq = none
   2a600:	bl	c400 <mpfr_round_p@plt>
   2a604:	cbz	w0, 2a5b0 <mpfr_asin@@Base+0x364>
   2a608:	ldr	w3, [sp, #120]
   2a60c:	mov	w2, w21
   2a610:	mov	x1, x25
   2a614:	mov	x0, x24
   2a618:	bl	c730 <mpfr_set4@plt>
   2a61c:	mov	w19, w0
   2a620:	mov	x0, x25
   2a624:	bl	c0f0 <mpfr_clear@plt>
   2a628:	b	2a44c <mpfr_asin@@Base+0x200>
   2a62c:	add	x28, x28, x27
   2a630:	sdiv	x27, x28, x19
   2a634:	b	2a53c <mpfr_asin@@Base+0x2f0>
   2a638:	mov	w1, w19
   2a63c:	mov	w2, w21
   2a640:	mov	x0, x24
   2a644:	bl	cbc0 <mpfr_check_range@plt>
   2a648:	mov	w19, w0
   2a64c:	b	2a2c4 <mpfr_asin@@Base+0x78>
   2a650:	stp	x29, x30, [sp, #-32]!
   2a654:	mov	x29, sp
   2a658:	str	x19, [sp, #16]
   2a65c:	mov	x19, x0
   2a660:	bl	c010 <mpfr_mpz_init@plt>
   2a664:	add	x0, x19, #0x10
   2a668:	bl	c010 <mpfr_mpz_init@plt>
   2a66c:	add	x0, x19, #0x20
   2a670:	bl	c010 <mpfr_mpz_init@plt>
   2a674:	add	x0, x19, #0x30
   2a678:	bl	c010 <mpfr_mpz_init@plt>
   2a67c:	add	x0, x19, #0x40
   2a680:	bl	c010 <mpfr_mpz_init@plt>
   2a684:	add	x0, x19, #0x50
   2a688:	ldr	x19, [sp, #16]
   2a68c:	ldp	x29, x30, [sp], #32
   2a690:	b	c010 <mpfr_mpz_init@plt>
   2a694:	stp	x29, x30, [sp, #-32]!
   2a698:	mov	x29, sp
   2a69c:	str	x19, [sp, #16]
   2a6a0:	mov	x19, x0
   2a6a4:	bl	c200 <mpfr_mpz_clear@plt>
   2a6a8:	add	x0, x19, #0x10
   2a6ac:	bl	c200 <mpfr_mpz_clear@plt>
   2a6b0:	add	x0, x19, #0x20
   2a6b4:	bl	c200 <mpfr_mpz_clear@plt>
   2a6b8:	add	x0, x19, #0x30
   2a6bc:	bl	c200 <mpfr_mpz_clear@plt>
   2a6c0:	add	x0, x19, #0x40
   2a6c4:	bl	c200 <mpfr_mpz_clear@plt>
   2a6c8:	add	x0, x19, #0x50
   2a6cc:	ldr	x19, [sp, #16]
   2a6d0:	ldp	x29, x30, [sp], #32
   2a6d4:	b	c200 <mpfr_mpz_clear@plt>
   2a6d8:	stp	x29, x30, [sp, #-368]!
   2a6dc:	mov	x29, sp
   2a6e0:	stp	x19, x20, [sp, #16]
   2a6e4:	sub	x19, x2, x1
   2a6e8:	cmp	x19, #0x1
   2a6ec:	stp	x21, x22, [sp, #32]
   2a6f0:	mov	x21, x1
   2a6f4:	stp	x23, x24, [sp, #48]
   2a6f8:	mov	x24, x0
   2a6fc:	mov	x23, x3
   2a700:	stp	x25, x26, [sp, #64]
   2a704:	add	x25, x0, #0x10
   2a708:	add	x26, x0, #0x50
   2a70c:	stp	x27, x28, [sp, #80]
   2a710:	add	x28, x0, #0x40
   2a714:	add	x27, x0, #0x20
   2a718:	str	w4, [sp, #108]
   2a71c:	b.ne	2a7a4 <mpfr_asin@@Base+0x558>  // b.any
   2a720:	mov	x1, x3
   2a724:	bl	bd30 <__gmpz_set_ui@plt>
   2a728:	mov	x2, x24
   2a72c:	mov	x1, x24
   2a730:	mov	x0, x24
   2a734:	add	x21, x21, #0x1
   2a738:	bl	c070 <__gmpz_mul@plt>
   2a73c:	mov	x1, x21
   2a740:	mov	x0, x25
   2a744:	bl	bd30 <__gmpz_set_ui@plt>
   2a748:	mov	x2, x25
   2a74c:	mov	x1, x25
   2a750:	mov	x0, x25
   2a754:	bl	c070 <__gmpz_mul@plt>
   2a758:	mov	x1, x19
   2a75c:	add	x0, x24, #0x30
   2a760:	bl	bd30 <__gmpz_set_ui@plt>
   2a764:	mov	x1, x21
   2a768:	mov	x0, x28
   2a76c:	bl	bd30 <__gmpz_set_ui@plt>
   2a770:	mov	x1, x24
   2a774:	mov	x0, x27
   2a778:	bl	c020 <__gmpz_set@plt>
   2a77c:	mov	x1, x24
   2a780:	mov	x0, x26
   2a784:	bl	c020 <__gmpz_set@plt>
   2a788:	ldp	x19, x20, [sp, #16]
   2a78c:	ldp	x21, x22, [sp, #32]
   2a790:	ldp	x23, x24, [sp, #48]
   2a794:	ldp	x25, x26, [sp, #64]
   2a798:	ldp	x27, x28, [sp, #80]
   2a79c:	ldp	x29, x30, [sp], #368
   2a7a0:	ret
   2a7a4:	add	x6, x2, x1
   2a7a8:	add	x19, sp, #0xb0
   2a7ac:	mov	x22, x2
   2a7b0:	mov	x0, x19
   2a7b4:	lsr	x6, x6, #1
   2a7b8:	add	x20, sp, #0x110
   2a7bc:	str	x6, [sp, #112]
   2a7c0:	bl	2a650 <mpfr_asin@@Base+0x404>
   2a7c4:	mov	x0, x20
   2a7c8:	bl	2a650 <mpfr_asin@@Base+0x404>
   2a7cc:	ldr	x6, [sp, #112]
   2a7d0:	mov	x3, x23
   2a7d4:	mov	x1, x21
   2a7d8:	mov	x0, x19
   2a7dc:	mov	x2, x6
   2a7e0:	mov	w4, #0x1                   	// #1
   2a7e4:	bl	2a6d8 <mpfr_asin@@Base+0x48c>
   2a7e8:	add	x21, sp, #0xa0
   2a7ec:	ldr	x6, [sp, #112]
   2a7f0:	mov	x3, x23
   2a7f4:	mov	x2, x22
   2a7f8:	mov	w4, #0x1                   	// #1
   2a7fc:	mov	x1, x6
   2a800:	mov	x0, x20
   2a804:	add	x23, sp, #0x80
   2a808:	bl	2a6d8 <mpfr_asin@@Base+0x48c>
   2a80c:	mov	x0, x23
   2a810:	add	x22, sp, #0x90
   2a814:	bl	c010 <mpfr_mpz_init@plt>
   2a818:	mov	x0, x22
   2a81c:	bl	c010 <mpfr_mpz_init@plt>
   2a820:	mov	x0, x21
   2a824:	bl	c010 <mpfr_mpz_init@plt>
   2a828:	ldr	w0, [sp, #108]
   2a82c:	cbz	w0, 2a840 <mpfr_asin@@Base+0x5f4>
   2a830:	mov	x2, x20
   2a834:	mov	x1, x19
   2a838:	mov	x0, x24
   2a83c:	bl	c070 <__gmpz_mul@plt>
   2a840:	add	x4, x20, #0x10
   2a844:	mov	x0, x25
   2a848:	mov	x2, x4
   2a84c:	add	x1, x19, #0x10
   2a850:	str	x4, [sp, #120]
   2a854:	add	x25, x19, #0x40
   2a858:	bl	c070 <__gmpz_mul@plt>
   2a85c:	add	x3, x20, #0x40
   2a860:	mov	x1, x25
   2a864:	mov	x2, x3
   2a868:	mov	x0, x28
   2a86c:	str	x3, [sp, #112]
   2a870:	bl	c070 <__gmpz_mul@plt>
   2a874:	add	x2, x20, #0x20
   2a878:	mov	x1, x19
   2a87c:	mov	x0, x23
   2a880:	bl	c070 <__gmpz_mul@plt>
   2a884:	ldr	x4, [sp, #120]
   2a888:	add	x2, x19, #0x20
   2a88c:	mov	x0, x21
   2a890:	mov	x1, x4
   2a894:	bl	c070 <__gmpz_mul@plt>
   2a898:	mov	x0, x27
   2a89c:	mov	x2, x21
   2a8a0:	mov	x1, x23
   2a8a4:	bl	ca50 <__gmpz_add@plt>
   2a8a8:	ldr	w0, [sp, #108]
   2a8ac:	ldr	x3, [sp, #112]
   2a8b0:	cbz	w0, 2a8d8 <mpfr_asin@@Base+0x68c>
   2a8b4:	add	x24, x24, #0x30
   2a8b8:	mov	x2, x3
   2a8bc:	add	x1, x19, #0x30
   2a8c0:	mov	x0, x24
   2a8c4:	bl	c070 <__gmpz_mul@plt>
   2a8c8:	mov	x2, x25
   2a8cc:	add	x1, x20, #0x30
   2a8d0:	mov	x0, x24
   2a8d4:	bl	c320 <__gmpz_addmul@plt>
   2a8d8:	add	x2, x20, #0x50
   2a8dc:	mov	x1, x19
   2a8e0:	mov	x0, x22
   2a8e4:	bl	c070 <__gmpz_mul@plt>
   2a8e8:	add	x2, x19, #0x40
   2a8ec:	mov	x1, x22
   2a8f0:	mov	x0, x22
   2a8f4:	bl	c070 <__gmpz_mul@plt>
   2a8f8:	add	x2, x19, #0x50
   2a8fc:	add	x1, x20, #0x10
   2a900:	mov	x0, x21
   2a904:	bl	c070 <__gmpz_mul@plt>
   2a908:	add	x2, x19, #0x30
   2a90c:	mov	x1, x23
   2a910:	mov	x0, x21
   2a914:	bl	c320 <__gmpz_addmul@plt>
   2a918:	add	x2, x20, #0x40
   2a91c:	mov	x1, x21
   2a920:	mov	x0, x21
   2a924:	bl	c070 <__gmpz_mul@plt>
   2a928:	mov	x2, x21
   2a92c:	mov	x1, x22
   2a930:	mov	x0, x26
   2a934:	bl	ca50 <__gmpz_add@plt>
   2a938:	mov	x0, x19
   2a93c:	bl	2a694 <mpfr_asin@@Base+0x448>
   2a940:	mov	x0, x20
   2a944:	bl	2a694 <mpfr_asin@@Base+0x448>
   2a948:	mov	x0, x23
   2a94c:	bl	c200 <mpfr_mpz_clear@plt>
   2a950:	mov	x0, x22
   2a954:	bl	c200 <mpfr_mpz_clear@plt>
   2a958:	mov	x0, x21
   2a95c:	bl	c200 <mpfr_mpz_clear@plt>
   2a960:	b	2a788 <mpfr_asin@@Base+0x53c>
   2a964:	stp	x29, x30, [sp, #-160]!
   2a968:	mov	x29, sp
   2a96c:	stp	x19, x20, [sp, #16]
   2a970:	mov	x19, x1
   2a974:	sub	x1, x4, x3
   2a978:	stp	x21, x22, [sp, #32]
   2a97c:	mov	x20, x0
   2a980:	mov	x22, x2
   2a984:	stp	x23, x24, [sp, #48]
   2a988:	mov	x21, x3
   2a98c:	mov	x23, x5
   2a990:	stp	x25, x26, [sp, #64]
   2a994:	cmp	x1, #0x1
   2a998:	stp	x27, x28, [sp, #80]
   2a99c:	b.ne	2aa28 <mpfr_asin@@Base+0x7dc>  // b.any
   2a9a0:	cbnz	x3, 2a9dc <mpfr_asin@@Base+0x790>
   2a9a4:	bl	bd30 <__gmpz_set_ui@plt>
   2a9a8:	lsl	x1, x23, #2
   2a9ac:	mov	x0, x19
   2a9b0:	bl	bd30 <__gmpz_set_ui@plt>
   2a9b4:	mov	x1, x20
   2a9b8:	mov	x0, x22
   2a9bc:	bl	c020 <__gmpz_set@plt>
   2a9c0:	ldp	x19, x20, [sp, #16]
   2a9c4:	ldp	x21, x22, [sp, #32]
   2a9c8:	ldp	x23, x24, [sp, #48]
   2a9cc:	ldp	x25, x26, [sp, #64]
   2a9d0:	ldp	x27, x28, [sp, #80]
   2a9d4:	ldp	x29, x30, [sp], #160
   2a9d8:	ret
   2a9dc:	lsl	x1, x3, #1
   2a9e0:	sub	x1, x1, #0x1
   2a9e4:	bl	bd30 <__gmpz_set_ui@plt>
   2a9e8:	mov	x2, #0x3                   	// #3
   2a9ec:	mov	x1, x20
   2a9f0:	mov	x0, x20
   2a9f4:	bl	c3c0 <__gmpz_pow_ui@plt>
   2a9f8:	lsl	x1, x21, #5
   2a9fc:	mov	x0, x19
   2aa00:	bl	bd30 <__gmpz_set_ui@plt>
   2aa04:	mov	x2, x23
   2aa08:	mov	x1, x19
   2aa0c:	mov	x0, x19
   2aa10:	bl	c190 <__gmpz_mul_ui@plt>
   2aa14:	mov	x2, x23
   2aa18:	mov	x1, x19
   2aa1c:	mov	x0, x19
   2aa20:	bl	c190 <__gmpz_mul_ui@plt>
   2aa24:	b	2a9b4 <mpfr_asin@@Base+0x768>
   2aa28:	add	x27, sp, #0x70
   2aa2c:	add	x28, x4, x3
   2aa30:	mov	x26, x4
   2aa34:	add	x25, sp, #0x80
   2aa38:	mov	x0, x27
   2aa3c:	str	w6, [sp, #108]
   2aa40:	bl	c010 <mpfr_mpz_init@plt>
   2aa44:	add	x24, sp, #0x90
   2aa48:	mov	x0, x25
   2aa4c:	bl	c010 <mpfr_mpz_init@plt>
   2aa50:	lsr	x28, x28, #1
   2aa54:	mov	x0, x24
   2aa58:	bl	c010 <mpfr_mpz_init@plt>
   2aa5c:	mov	x5, x23
   2aa60:	mov	x4, x28
   2aa64:	mov	x3, x21
   2aa68:	mov	x2, x22
   2aa6c:	mov	x1, x19
   2aa70:	mov	x0, x20
   2aa74:	mov	w6, #0x1                   	// #1
   2aa78:	bl	2a964 <mpfr_asin@@Base+0x718>
   2aa7c:	mov	x5, x23
   2aa80:	mov	x4, x26
   2aa84:	mov	x3, x28
   2aa88:	mov	w6, #0x1                   	// #1
   2aa8c:	mov	x2, x24
   2aa90:	mov	x1, x25
   2aa94:	mov	x0, x27
   2aa98:	bl	2a964 <mpfr_asin@@Base+0x718>
   2aa9c:	mov	x2, x25
   2aaa0:	mov	x1, x22
   2aaa4:	mov	x0, x22
   2aaa8:	bl	c070 <__gmpz_mul@plt>
   2aaac:	mov	x2, x20
   2aab0:	mov	x1, x24
   2aab4:	mov	x0, x24
   2aab8:	bl	c070 <__gmpz_mul@plt>
   2aabc:	mov	x2, x24
   2aac0:	mov	x1, x22
   2aac4:	mov	x0, x22
   2aac8:	bl	ca50 <__gmpz_add@plt>
   2aacc:	ldr	w7, [sp, #108]
   2aad0:	cbz	w7, 2aae4 <mpfr_asin@@Base+0x898>
   2aad4:	mov	x2, x27
   2aad8:	mov	x1, x20
   2aadc:	mov	x0, x20
   2aae0:	bl	c070 <__gmpz_mul@plt>
   2aae4:	mov	x2, x25
   2aae8:	mov	x1, x19
   2aaec:	mov	x0, x19
   2aaf0:	bl	c070 <__gmpz_mul@plt>
   2aaf4:	mov	x0, x27
   2aaf8:	bl	c200 <mpfr_mpz_clear@plt>
   2aafc:	mov	x0, x25
   2ab00:	bl	c200 <mpfr_mpz_clear@plt>
   2ab04:	mov	x0, x24
   2ab08:	bl	c200 <mpfr_mpz_clear@plt>
   2ab0c:	b	2a9c0 <mpfr_asin@@Base+0x774>

000000000002ab10 <mpfr_const_euler_internal@@Base>:
   2ab10:	stp	x29, x30, [sp, #-320]!
   2ab14:	mov	x29, sp
   2ab18:	str	x0, [sp, #112]
   2ab1c:	ldr	x0, [x0]
   2ab20:	stp	x27, x28, [sp, #80]
   2ab24:	add	x27, sp, #0xc0
   2ab28:	add	x28, x0, #0x18
   2ab2c:	stp	x23, x24, [sp, #48]
   2ab30:	mov	w24, w1
   2ab34:	mov	x1, x28
   2ab38:	stp	x19, x20, [sp, #16]
   2ab3c:	add	x19, sp, #0xe0
   2ab40:	stp	x21, x22, [sp, #32]
   2ab44:	add	x20, sp, #0xa0
   2ab48:	add	x21, sp, #0xb0
   2ab4c:	stp	x25, x26, [sp, #64]
   2ab50:	add	x26, sp, #0x90
   2ab54:	mov	x22, #0x40                  	// #64
   2ab58:	str	x0, [sp, #104]
   2ab5c:	mov	x0, x27
   2ab60:	bl	cb10 <mpfr_init2@plt>
   2ab64:	mov	x0, x19
   2ab68:	bl	2a650 <mpfr_asin@@Base+0x404>
   2ab6c:	mov	x0, x26
   2ab70:	bl	c010 <mpfr_mpz_init@plt>
   2ab74:	mov	x0, x20
   2ab78:	bl	c010 <mpfr_mpz_init@plt>
   2ab7c:	mov	x0, x21
   2ab80:	bl	c010 <mpfr_mpz_init@plt>
   2ab84:	add	x1, x28, #0x5
   2ab88:	mov	x0, x26
   2ab8c:	bl	bd30 <__gmpz_set_ui@plt>
   2ab90:	add	x23, x19, #0x40
   2ab94:	mov	x2, #0x3882                	// #14466
   2ab98:	mov	x1, x26
   2ab9c:	mov	x0, x26
   2aba0:	movk	x2, #0xd, lsl #16
   2aba4:	bl	c190 <__gmpz_mul_ui@plt>
   2aba8:	mov	x2, #0x9680                	// #38528
   2abac:	mov	x1, x26
   2abb0:	movk	x2, #0x98, lsl #16
   2abb4:	mov	x0, x26
   2abb8:	bl	bf30 <__gmpz_cdiv_q_ui@plt>
   2abbc:	ldr	x0, [sp, #152]
   2abc0:	ldr	x25, [x0]
   2abc4:	ldr	w0, [sp, #148]
   2abc8:	cmp	w0, #0x0
   2abcc:	mov	x0, x26
   2abd0:	csel	x25, x25, xzr, ne  // ne = any
   2abd4:	mov	x1, x25
   2abd8:	bl	bd30 <__gmpz_set_ui@plt>
   2abdc:	mov	x2, #0xd882                	// #55426
   2abe0:	mov	x1, x26
   2abe4:	mov	x0, x26
   2abe8:	movk	x2, #0x4b, lsl #16
   2abec:	bl	c190 <__gmpz_mul_ui@plt>
   2abf0:	mov	x2, #0x4240                	// #16960
   2abf4:	mov	x1, x26
   2abf8:	movk	x2, #0xf, lsl #16
   2abfc:	mov	x0, x26
   2ac00:	bl	bf30 <__gmpz_cdiv_q_ui@plt>
   2ac04:	mov	x1, x26
   2ac08:	mov	x0, x26
   2ac0c:	mov	x2, #0x1                   	// #1
   2ac10:	bl	c3f0 <__gmpz_add_ui@plt>
   2ac14:	ldr	x0, [sp, #152]
   2ac18:	mov	x3, x25
   2ac1c:	mov	w4, #0x0                   	// #0
   2ac20:	mov	x1, #0x0                   	// #0
   2ac24:	ldr	x2, [x0]
   2ac28:	ldr	w0, [sp, #148]
   2ac2c:	cmp	w0, #0x0
   2ac30:	mov	x0, x19
   2ac34:	csel	x2, x2, xzr, ne  // ne = any
   2ac38:	bl	2a6d8 <mpfr_asin@@Base+0x48c>
   2ac3c:	add	x12, x19, #0x10
   2ac40:	add	x10, x19, #0x20
   2ac44:	mov	x2, x12
   2ac48:	mov	x1, x10
   2ac4c:	mov	x0, x10
   2ac50:	str	x10, [sp, #120]
   2ac54:	str	x12, [sp, #136]
   2ac58:	bl	ca50 <__gmpz_add@plt>
   2ac5c:	ldr	x10, [sp, #120]
   2ac60:	mov	x2, x23
   2ac64:	mov	x0, x26
   2ac68:	str	x10, [sp, #128]
   2ac6c:	mov	x1, x10
   2ac70:	bl	c070 <__gmpz_mul@plt>
   2ac74:	add	x11, x19, #0x50
   2ac78:	mov	x2, x28
   2ac7c:	mov	x1, x11
   2ac80:	mov	x0, x20
   2ac84:	str	x11, [sp, #120]
   2ac88:	bl	c290 <__gmpz_mul_2exp@plt>
   2ac8c:	mov	x2, x26
   2ac90:	mov	x1, x20
   2ac94:	mov	x0, x21
   2ac98:	bl	bbb0 <__gmpz_tdiv_q@plt>
   2ac9c:	ldr	x11, [sp, #120]
   2aca0:	mov	x5, x25
   2aca4:	lsl	x4, x25, #1
   2aca8:	mov	w6, #0x0                   	// #0
   2acac:	mov	x3, #0x0                   	// #0
   2acb0:	mov	x2, x11
   2acb4:	mov	x1, x23
   2acb8:	add	x0, x19, #0x30
   2acbc:	bl	2a964 <mpfr_asin@@Base+0x718>
   2acc0:	ldr	x12, [sp, #136]
   2acc4:	mov	x0, x26
   2acc8:	mov	x2, x12
   2accc:	mov	x1, x12
   2acd0:	bl	c070 <__gmpz_mul@plt>
   2acd4:	ldr	x11, [sp, #120]
   2acd8:	mov	x1, x26
   2acdc:	mov	x0, x26
   2ace0:	mov	x2, x11
   2ace4:	bl	c070 <__gmpz_mul@plt>
   2ace8:	ldr	x10, [sp, #128]
   2acec:	mov	x0, x20
   2acf0:	mov	x2, x10
   2acf4:	mov	x1, x10
   2acf8:	bl	c070 <__gmpz_mul@plt>
   2acfc:	mov	x2, x23
   2ad00:	mov	x1, x20
   2ad04:	mov	x0, x20
   2ad08:	bl	c070 <__gmpz_mul@plt>
   2ad0c:	mov	x2, x28
   2ad10:	mov	x1, x26
   2ad14:	mov	x0, x26
   2ad18:	bl	c290 <__gmpz_mul_2exp@plt>
   2ad1c:	mov	x2, x20
   2ad20:	mov	x1, x26
   2ad24:	mov	x0, x26
   2ad28:	bl	bbb0 <__gmpz_tdiv_q@plt>
   2ad2c:	mov	x2, x26
   2ad30:	mov	x1, x21
   2ad34:	mov	x0, x21
   2ad38:	bl	be60 <__gmpz_sub@plt>
   2ad3c:	cmp	x25, #0x1
   2ad40:	b.eq	2ae14 <mpfr_const_euler_internal@@Base+0x304>  // b.none
   2ad44:	b.hi	2ad60 <mpfr_const_euler_internal@@Base+0x250>  // b.pmore
   2ad48:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2ad4c:	add	x2, x2, #0x62b
   2ad50:	mov	w1, #0xf9                  	// #249
   2ad54:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2ad58:	add	x0, x0, #0x633
   2ad5c:	bl	cbd0 <mpfr_assert_fail@plt>
   2ad60:	sub	x1, x25, #0x1
   2ad64:	clz	x0, x1
   2ad68:	mov	w1, #0x40                  	// #64
   2ad6c:	sub	w1, w1, w0
   2ad70:	sxtw	x1, w1
   2ad74:	add	x1, x28, x1
   2ad78:	mov	x0, x27
   2ad7c:	bl	bf50 <mpfr_set_prec@plt>
   2ad80:	mov	w3, #0x1                   	// #1
   2ad84:	mov	x1, x25
   2ad88:	mov	x2, #0x0                   	// #0
   2ad8c:	mov	x0, x27
   2ad90:	bl	c680 <mpfr_set_ui_2exp@plt>
   2ad94:	mov	x1, x27
   2ad98:	mov	w2, #0x1                   	// #1
   2ad9c:	mov	x0, x27
   2ada0:	bl	c110 <mpfr_log@plt>
   2ada4:	mov	x2, x28
   2ada8:	mov	x1, x27
   2adac:	mov	w3, #0x1                   	// #1
   2adb0:	mov	x0, x27
   2adb4:	bl	c350 <mpfr_mul_2ui@plt>
   2adb8:	mov	x2, x27
   2adbc:	mov	x1, x21
   2adc0:	mov	w3, #0x1                   	// #1
   2adc4:	mov	x0, x27
   2adc8:	bl	c0b0 <mpfr_z_sub@plt>
   2adcc:	mov	x1, x27
   2add0:	mov	x2, x28
   2add4:	mov	x0, x27
   2add8:	mov	w3, #0x1                   	// #1
   2addc:	bl	c980 <mpfr_div_2ui@plt>
   2ade0:	ldr	x1, [sp, #208]
   2ade4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2ade8:	cmp	x1, x0
   2adec:	b.gt	2ae1c <mpfr_const_euler_internal@@Base+0x30c>
   2adf0:	mov	x0, #0xfffffffffffffeff    	// #-257
   2adf4:	movk	x0, #0x7fff, lsl #48
   2adf8:	sub	x0, x0, x28
   2adfc:	cmp	x0, x22
   2ae00:	b.ge	2aea8 <mpfr_const_euler_internal@@Base+0x398>  // b.tcont
   2ae04:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2ae08:	mov	w1, #0x107                 	// #263
   2ae0c:	add	x2, x2, #0x641
   2ae10:	b	2ad54 <mpfr_const_euler_internal@@Base+0x244>
   2ae14:	mov	x1, #0x0                   	// #0
   2ae18:	b	2ad74 <mpfr_const_euler_internal@@Base+0x264>
   2ae1c:	ldr	x0, [sp, #104]
   2ae20:	cmp	w24, #0x0
   2ae24:	ldr	x1, [sp, #192]
   2ae28:	cinc	x3, x0, eq  // eq = none
   2ae2c:	ldr	x0, [sp, #216]
   2ae30:	sub	x1, x1, #0x1
   2ae34:	sub	x2, x28, #0x3
   2ae38:	asr	x1, x1, #6
   2ae3c:	add	x1, x1, #0x1
   2ae40:	bl	c400 <mpfr_round_p@plt>
   2ae44:	cbz	w0, 2adf0 <mpfr_const_euler_internal@@Base+0x2e0>
   2ae48:	ldr	w3, [sp, #200]
   2ae4c:	mov	w2, w24
   2ae50:	ldr	x0, [sp, #112]
   2ae54:	mov	x1, x27
   2ae58:	bl	c730 <mpfr_set4@plt>
   2ae5c:	mov	w22, w0
   2ae60:	mov	x0, x27
   2ae64:	bl	c0f0 <mpfr_clear@plt>
   2ae68:	mov	x0, x26
   2ae6c:	bl	c200 <mpfr_mpz_clear@plt>
   2ae70:	mov	x0, x20
   2ae74:	bl	c200 <mpfr_mpz_clear@plt>
   2ae78:	mov	x0, x21
   2ae7c:	bl	c200 <mpfr_mpz_clear@plt>
   2ae80:	mov	x0, x19
   2ae84:	bl	2a694 <mpfr_asin@@Base+0x448>
   2ae88:	mov	w0, w22
   2ae8c:	ldp	x19, x20, [sp, #16]
   2ae90:	ldp	x21, x22, [sp, #32]
   2ae94:	ldp	x23, x24, [sp, #48]
   2ae98:	ldp	x25, x26, [sp, #64]
   2ae9c:	ldp	x27, x28, [sp, #80]
   2aea0:	ldp	x29, x30, [sp], #320
   2aea4:	ret
   2aea8:	add	x28, x28, x22
   2aeac:	mov	x22, #0x2                   	// #2
   2aeb0:	sdiv	x22, x28, x22
   2aeb4:	b	2ab84 <mpfr_const_euler_internal@@Base+0x74>

000000000002aeb8 <mpfr_const_euler@@Base>:
   2aeb8:	stp	x29, x30, [sp, #-16]!
   2aebc:	mov	x3, x0
   2aec0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2aec4:	ldr	x2, [x0, #2624]
   2aec8:	add	x0, x0, #0xa40
   2aecc:	blr	x2
   2aed0:	mov	x29, sp
   2aed4:	ldp	x29, x30, [sp], #16
   2aed8:	mov	w2, w1
   2aedc:	mrs	x1, tpidr_el0
   2aee0:	add	x1, x1, x0
   2aee4:	mov	x0, x3
   2aee8:	b	c410 <mpfr_cache@plt>

000000000002aeec <mpfr_cos@@Base>:
   2aeec:	sub	sp, sp, #0x220
   2aef0:	stp	x29, x30, [sp]
   2aef4:	mov	x29, sp
   2aef8:	stp	x27, x28, [sp, #80]
   2aefc:	mov	x28, x1
   2af00:	ldr	x1, [x1, #16]
   2af04:	str	x1, [sp, #112]
   2af08:	stp	x25, x26, [sp, #64]
   2af0c:	mov	w25, w2
   2af10:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   2af14:	ldr	x2, [sp, #112]
   2af18:	stp	x19, x20, [sp, #16]
   2af1c:	stp	x21, x22, [sp, #32]
   2af20:	cmp	x2, x1
   2af24:	mov	x22, x0
   2af28:	stp	x23, x24, [sp, #48]
   2af2c:	b.gt	2afb0 <mpfr_cos@@Base+0xc4>
   2af30:	mov	x1, #0x7ffffffffffffffe    	// #9223372036854775806
   2af34:	add	x1, x2, x1
   2af38:	cmp	x1, #0x1
   2af3c:	b.hi	2af98 <mpfr_cos@@Base+0xac>  // b.pmore
   2af40:	mov	x0, #0x2                   	// #2
   2af44:	mov	w19, #0x0                   	// #0
   2af48:	movk	x0, #0x8000, lsl #48
   2af4c:	str	x0, [x22, #16]
   2af50:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2af54:	ldr	x1, [x0, #2592]
   2af58:	add	x0, x0, #0xa20
   2af5c:	blr	x1
   2af60:	mrs	x1, tpidr_el0
   2af64:	add	x0, x1, x0
   2af68:	ldr	w1, [x0]
   2af6c:	orr	w1, w1, #0x4
   2af70:	str	w1, [x0]
   2af74:	mov	w0, w19
   2af78:	ldp	x29, x30, [sp]
   2af7c:	ldp	x19, x20, [sp, #16]
   2af80:	ldp	x21, x22, [sp, #32]
   2af84:	ldp	x23, x24, [sp, #48]
   2af88:	ldp	x25, x26, [sp, #64]
   2af8c:	ldp	x27, x28, [sp, #80]
   2af90:	add	sp, sp, #0x220
   2af94:	ret
   2af98:	mov	w3, w25
   2af9c:	mov	x2, #0x0                   	// #0
   2afa0:	mov	x1, #0x1                   	// #1
   2afa4:	bl	c680 <mpfr_set_ui_2exp@plt>
   2afa8:	mov	w19, w0
   2afac:	b	2af74 <mpfr_cos@@Base+0x88>
   2afb0:	mrs	x23, tpidr_el0
   2afb4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2afb8:	ldr	x1, [x0, #2592]
   2afbc:	add	x0, x0, #0xa20
   2afc0:	blr	x1
   2afc4:	add	x20, x23, x0
   2afc8:	mov	x2, #0xfffffffffffffffe    	// #-2
   2afcc:	ldr	w0, [x23, x0]
   2afd0:	str	w0, [sp, #156]
   2afd4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2afd8:	ldr	x1, [x0, #2528]
   2afdc:	add	x0, x0, #0x9e0
   2afe0:	blr	x1
   2afe4:	add	x24, x23, x0
   2afe8:	ldr	x0, [x23, x0]
   2afec:	str	x0, [sp, #120]
   2aff0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2aff4:	ldr	x1, [x0, #2560]
   2aff8:	add	x0, x0, #0xa00
   2affc:	blr	x1
   2b000:	add	x21, x23, x0
   2b004:	ldr	x0, [x23, x0]
   2b008:	str	x0, [sp, #128]
   2b00c:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   2b010:	str	x0, [x24]
   2b014:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   2b018:	str	x0, [x21]
   2b01c:	ldr	x0, [sp, #112]
   2b020:	mul	x2, x0, x2
   2b024:	cmp	x2, #0x0
   2b028:	b.le	2b0ac <mpfr_cos@@Base+0x1c0>
   2b02c:	ldr	x0, [x22]
   2b030:	add	x2, x2, #0x1
   2b034:	add	x0, x0, #0x1
   2b038:	cmp	x0, x2
   2b03c:	b.cs	2b0ac <mpfr_cos@@Base+0x1c0>  // b.hs, b.nlast
   2b040:	adrp	x1, 73000 <__gmpfr_l2b@@Base+0x200>
   2b044:	mov	w4, w25
   2b048:	mov	x0, x22
   2b04c:	mov	w3, #0x0                   	// #0
   2b050:	ldr	x1, [x1, #3928]
   2b054:	str	wzr, [x20]
   2b058:	bl	c5d0 <mpfr_round_near_x@plt>
   2b05c:	mov	w19, w0
   2b060:	cbz	w0, 2b0ac <mpfr_cos@@Base+0x1c0>
   2b064:	ldr	w0, [x20]
   2b068:	ldr	w1, [sp, #156]
   2b06c:	ldr	x2, [sp, #120]
   2b070:	orr	w0, w1, w0
   2b074:	ldr	x1, [sp, #120]
   2b078:	str	x1, [x24]
   2b07c:	ldr	x1, [sp, #128]
   2b080:	str	x1, [x21]
   2b084:	ldr	x1, [x22, #16]
   2b088:	str	w0, [x20]
   2b08c:	cmp	x2, x1
   2b090:	b.gt	2b14c <mpfr_cos@@Base+0x260>
   2b094:	ldr	x2, [sp, #128]
   2b098:	cmp	x2, x1
   2b09c:	b.lt	2b14c <mpfr_cos@@Base+0x260>  // b.tstop
   2b0a0:	orr	w0, w0, #0x8
   2b0a4:	str	w0, [x20]
   2b0a8:	b	2af74 <mpfr_cos@@Base+0x88>
   2b0ac:	ldr	x0, [x22]
   2b0b0:	str	x0, [sp, #104]
   2b0b4:	mov	x0, #0x752f                	// #29999
   2b0b8:	ldr	x1, [sp, #104]
   2b0bc:	cmp	x1, x0
   2b0c0:	b.le	2b160 <mpfr_cos@@Base+0x274>
   2b0c4:	mov	w3, w25
   2b0c8:	mov	x2, x28
   2b0cc:	mov	x1, x22
   2b0d0:	mov	x0, #0x0                   	// #0
   2b0d4:	bl	c0a0 <mpfr_sincos_fast@plt>
   2b0d8:	asr	w19, w0, #2
   2b0dc:	cmp	w19, #0x2
   2b0e0:	csinv	w19, w19, wzr, ne  // ne = any
   2b0e4:	ldr	w2, [sp, #156]
   2b0e8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2b0ec:	ldr	x1, [x0, #2592]
   2b0f0:	add	x0, x0, #0xa20
   2b0f4:	blr	x1
   2b0f8:	add	x1, x23, x0
   2b0fc:	str	w2, [x23, x0]
   2b100:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2b104:	ldr	x2, [x0, #2528]
   2b108:	add	x0, x0, #0x9e0
   2b10c:	blr	x2
   2b110:	ldr	x2, [sp, #120]
   2b114:	str	x2, [x23, x0]
   2b118:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2b11c:	ldr	x2, [x0, #2560]
   2b120:	add	x0, x0, #0xa00
   2b124:	blr	x2
   2b128:	ldr	x2, [sp, #128]
   2b12c:	str	x2, [x23, x0]
   2b130:	ldr	x0, [x22, #16]
   2b134:	ldr	x2, [sp, #120]
   2b138:	cmp	x2, x0
   2b13c:	b.gt	2b14c <mpfr_cos@@Base+0x260>
   2b140:	ldr	x2, [sp, #128]
   2b144:	cmp	x2, x0
   2b148:	b.ge	2b81c <mpfr_cos@@Base+0x930>  // b.tcont
   2b14c:	mov	w2, w25
   2b150:	mov	w1, w19
   2b154:	mov	x0, x22
   2b158:	bl	cbc0 <mpfr_check_range@plt>
   2b15c:	b	2afa8 <mpfr_cos@@Base+0xbc>
   2b160:	ldr	x1, [sp, #104]
   2b164:	mov	x0, #0x3                   	// #3
   2b168:	sdiv	x0, x1, x0
   2b16c:	bl	bfa0 <__gmpfr_isqrt@plt>
   2b170:	str	x0, [sp, #192]
   2b174:	ldr	x0, [sp, #104]
   2b178:	cmp	x0, #0x1
   2b17c:	b.eq	2b1f8 <mpfr_cos@@Base+0x30c>  // b.none
   2b180:	b.gt	2b19c <mpfr_cos@@Base+0x2b0>
   2b184:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2b188:	add	x2, x2, #0x685
   2b18c:	mov	w1, #0xb1                  	// #177
   2b190:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2b194:	add	x0, x0, #0x91e
   2b198:	bl	cbd0 <mpfr_assert_fail@plt>
   2b19c:	ldr	x0, [sp, #104]
   2b1a0:	sub	x20, x0, #0x1
   2b1a4:	clz	x0, x20
   2b1a8:	mov	w20, #0x40                  	// #64
   2b1ac:	sub	w20, w20, w0
   2b1b0:	lsl	w20, w20, #1
   2b1b4:	sxtw	x20, w20
   2b1b8:	ldr	x0, [sp, #104]
   2b1bc:	add	x20, x20, x0
   2b1c0:	ldr	x0, [sp, #192]
   2b1c4:	add	x20, x20, x0, lsl #1
   2b1c8:	ldr	x0, [sp, #112]
   2b1cc:	add	x19, x20, #0x4
   2b1d0:	cmp	x0, #0x2
   2b1d4:	b.le	2b230 <mpfr_cos@@Base+0x344>
   2b1d8:	add	x1, x0, x19
   2b1dc:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   2b1e0:	cmp	x1, x0
   2b1e4:	b.le	2b200 <mpfr_cos@@Base+0x314>
   2b1e8:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2b1ec:	mov	w1, #0xb9                  	// #185
   2b1f0:	add	x2, x2, #0x691
   2b1f4:	b	2b190 <mpfr_cos@@Base+0x2a4>
   2b1f8:	mov	x20, #0x0                   	// #0
   2b1fc:	b	2b1b8 <mpfr_cos@@Base+0x2cc>
   2b200:	sub	x1, x1, #0x1
   2b204:	add	x0, sp, #0x170
   2b208:	bl	cb10 <mpfr_init2@plt>
   2b20c:	add	x0, sp, #0x150
   2b210:	mov	x1, x19
   2b214:	bl	cb10 <mpfr_init2@plt>
   2b218:	mov	w0, #0x1                   	// #1
   2b21c:	str	w0, [sp, #152]
   2b220:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   2b224:	cmp	x19, x0
   2b228:	b.lt	2b238 <mpfr_cos@@Base+0x34c>  // b.tstop
   2b22c:	bl	c970 <mpfr_abort_prec_max@plt>
   2b230:	str	wzr, [sp, #152]
   2b234:	b	2b220 <mpfr_cos@@Base+0x334>
   2b238:	add	x20, x20, #0x3
   2b23c:	mov	x0, #0x40                  	// #64
   2b240:	sdiv	x20, x20, x0
   2b244:	add	x20, x20, #0x1
   2b248:	lsl	x0, x20, #1
   2b24c:	cmp	x0, #0x10
   2b250:	b.le	2b3e0 <mpfr_cos@@Base+0x4f4>
   2b254:	lsl	x0, x20, #4
   2b258:	str	x0, [sp, #400]
   2b25c:	bl	cd90 <mpfr_allocate_func@plt>
   2b260:	str	x0, [sp, #408]
   2b264:	mov	w0, #0x1                   	// #1
   2b268:	add	x26, sp, #0xe0
   2b26c:	add	x24, sp, #0x100
   2b270:	ldr	x1, [sp, #408]
   2b274:	add	x27, sp, #0x130
   2b278:	str	w0, [sp, #280]
   2b27c:	str	w0, [sp, #312]
   2b280:	mov	x0, #0x40                  	// #64
   2b284:	add	x20, x1, x20, lsl #3
   2b288:	str	x20, [sp, #328]
   2b28c:	add	x20, sp, #0xf0
   2b290:	str	xzr, [sp, #160]
   2b294:	str	x0, [sp, #168]
   2b298:	add	x0, sp, #0x110
   2b29c:	str	x0, [sp, #144]
   2b2a0:	str	x19, [sp, #272]
   2b2a4:	str	x1, [sp, #296]
   2b2a8:	str	x19, [sp, #304]
   2b2ac:	ldr	w0, [sp, #152]
   2b2b0:	cbz	w0, 2b3ec <mpfr_cos@@Base+0x500>
   2b2b4:	add	x21, sp, #0x170
   2b2b8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2b2bc:	ldr	x1, [x0, #2640]
   2b2c0:	add	x0, x0, #0xa50
   2b2c4:	blr	x1
   2b2c8:	mov	w2, #0x0                   	// #0
   2b2cc:	add	x1, x23, x0
   2b2d0:	mov	x0, x21
   2b2d4:	bl	c410 <mpfr_cache@plt>
   2b2d8:	mov	x1, x21
   2b2dc:	mov	w3, #0x0                   	// #0
   2b2e0:	mov	x2, #0x1                   	// #1
   2b2e4:	mov	x0, x21
   2b2e8:	bl	c350 <mpfr_mul_2ui@plt>
   2b2ec:	add	x4, sp, #0x150
   2b2f0:	mov	x1, x28
   2b2f4:	mov	x2, x21
   2b2f8:	mov	x0, x4
   2b2fc:	mov	w3, #0x0                   	// #0
   2b300:	str	x4, [sp, #136]
   2b304:	bl	cdb0 <mpfr_remainder@plt>
   2b308:	ldr	x1, [sp, #352]
   2b30c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2b310:	cmp	x1, x0
   2b314:	b.eq	2b57c <mpfr_cos@@Base+0x690>  // b.none
   2b318:	ldr	x4, [sp, #136]
   2b31c:	mov	w3, #0x2                   	// #2
   2b320:	mov	x2, x4
   2b324:	mov	x1, x4
   2b328:	ldr	x0, [sp, #144]
   2b32c:	bl	bdd0 <mpfr_mul@plt>
   2b330:	ldr	x0, [sp, #288]
   2b334:	ldr	x1, [sp, #192]
   2b338:	cmp	x0, #0x0
   2b33c:	csel	x2, x0, xzr, ge  // ge = tcont
   2b340:	add	x1, x1, #0x1
   2b344:	add	x1, x1, x2, asr #1
   2b348:	str	x1, [sp, #136]
   2b34c:	lsl	x1, x1, #1
   2b350:	str	x1, [sp, #208]
   2b354:	ldr	x1, [sp, #136]
   2b358:	sub	x0, x0, x1, lsl #1
   2b35c:	str	x0, [sp, #288]
   2b360:	mov	x0, x26
   2b364:	bl	c010 <mpfr_mpz_init@plt>
   2b368:	mov	x0, x24
   2b36c:	bl	c010 <mpfr_mpz_init@plt>
   2b370:	mov	x0, x20
   2b374:	bl	c010 <mpfr_mpz_init@plt>
   2b378:	ldr	x1, [sp, #144]
   2b37c:	mov	x0, x26
   2b380:	bl	cb50 <mpfr_get_z_2exp@plt>
   2b384:	mov	x21, x0
   2b388:	mov	x1, #0x0                   	// #0
   2b38c:	mov	x0, x26
   2b390:	bl	bb10 <__gmpz_scan1@plt>
   2b394:	mov	x2, x0
   2b398:	add	x0, x0, x21
   2b39c:	mov	x1, x26
   2b3a0:	str	x0, [sp, #184]
   2b3a4:	mov	x0, x26
   2b3a8:	bl	c1c0 <__gmpz_fdiv_q_2exp@plt>
   2b3ac:	ldr	x0, [sp, #288]
   2b3b0:	ldr	x21, [sp, #304]
   2b3b4:	neg	x0, x0
   2b3b8:	sdiv	x0, x21, x0
   2b3bc:	cmp	x0, #0x0
   2b3c0:	cinc	x0, x0, eq  // eq = none
   2b3c4:	cmp	x0, #0x1
   2b3c8:	b.eq	2b5a4 <mpfr_cos@@Base+0x6b8>  // b.none
   2b3cc:	b.hi	2b3fc <mpfr_cos@@Base+0x510>  // b.pmore
   2b3d0:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2b3d4:	mov	w1, #0x4e                  	// #78
   2b3d8:	add	x2, x2, #0x6d4
   2b3dc:	b	2b190 <mpfr_cos@@Base+0x2a4>
   2b3e0:	add	x0, sp, #0x1a0
   2b3e4:	str	xzr, [sp, #400]
   2b3e8:	b	2b260 <mpfr_cos@@Base+0x374>
   2b3ec:	mov	x2, x28
   2b3f0:	mov	x1, x28
   2b3f4:	mov	w3, #0x2                   	// #2
   2b3f8:	b	2b328 <mpfr_cos@@Base+0x43c>
   2b3fc:	sub	x0, x0, #0x1
   2b400:	mov	w1, #0x42                  	// #66
   2b404:	clz	x0, x0
   2b408:	sub	w0, w1, w0
   2b40c:	lsl	w0, w0, #1
   2b410:	sxtw	x0, w0
   2b414:	mov	x1, #0x1                   	// #1
   2b418:	str	x0, [sp, #176]
   2b41c:	mov	x0, x24
   2b420:	bl	bd30 <__gmpz_set_ui@plt>
   2b424:	ldr	x0, [sp, #176]
   2b428:	mov	x1, x24
   2b42c:	add	x0, x21, x0
   2b430:	str	x0, [sp, #200]
   2b434:	mov	x2, x0
   2b438:	mov	x0, x24
   2b43c:	bl	c290 <__gmpz_mul_2exp@plt>
   2b440:	mov	x21, #0x1                   	// #1
   2b444:	mov	x1, x24
   2b448:	mov	x0, x20
   2b44c:	bl	c020 <__gmpz_set@plt>
   2b450:	mov	x0, x20
   2b454:	mov	w1, #0x2                   	// #2
   2b458:	bl	cbf0 <__gmpz_sizeinbase@plt>
   2b45c:	mov	x2, x0
   2b460:	ldr	x0, [sp, #176]
   2b464:	cmp	x0, x2
   2b468:	b.le	2b5ac <mpfr_cos@@Base+0x6c0>
   2b46c:	mov	x1, x24
   2b470:	mov	w2, #0x0                   	// #0
   2b474:	mov	x0, x27
   2b478:	bl	c2d0 <mpfr_set_z@plt>
   2b47c:	ldr	x2, [sp, #200]
   2b480:	mov	x1, x27
   2b484:	mov	w3, #0x0                   	// #0
   2b488:	mov	x0, x27
   2b48c:	sub	x21, x21, #0x1
   2b490:	bl	c980 <mpfr_div_2ui@plt>
   2b494:	mov	x0, x26
   2b498:	bl	c200 <mpfr_mpz_clear@plt>
   2b49c:	mov	x0, x24
   2b4a0:	bl	c200 <mpfr_mpz_clear@plt>
   2b4a4:	mov	x0, x20
   2b4a8:	bl	c200 <mpfr_mpz_clear@plt>
   2b4ac:	lsr	x0, x21, #1
   2b4b0:	mov	w21, #0x40                  	// #64
   2b4b4:	clz	x2, x0
   2b4b8:	cmp	x0, #0x0
   2b4bc:	sub	w21, w21, w2
   2b4c0:	mov	x0, #0x1                   	// #1
   2b4c4:	ldr	x2, [sp, #272]
   2b4c8:	str	x0, [sp, #288]
   2b4cc:	ldr	x0, [sp, #296]
   2b4d0:	sub	x2, x2, #0x1
   2b4d4:	mov	w1, #0x1                   	// #1
   2b4d8:	lsl	w21, w21, #1
   2b4dc:	asr	x2, x2, #6
   2b4e0:	csinc	w21, w1, w21, eq  // eq = none
   2b4e4:	str	w1, [sp, #280]
   2b4e8:	mov	w1, #0x0                   	// #0
   2b4ec:	lsl	x2, x2, #3
   2b4f0:	str	x2, [sp, #176]
   2b4f4:	bl	c1a0 <memset@plt>
   2b4f8:	ldr	x2, [sp, #176]
   2b4fc:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   2b500:	ldr	x0, [sp, #296]
   2b504:	mov	x4, #0x0                   	// #0
   2b508:	str	x1, [x0, x2]
   2b50c:	ldr	x0, [sp, #136]
   2b510:	cmp	x4, x0
   2b514:	b.lt	2b67c <mpfr_cos@@Base+0x790>  // b.tstop
   2b518:	ldr	w0, [sp, #152]
   2b51c:	mov	x1, #0x1                   	// #1
   2b520:	add	x21, x1, w21, sxtw #1
   2b524:	cbz	w0, 2b53c <mpfr_cos@@Base+0x650>
   2b528:	ldr	x0, [sp, #136]
   2b52c:	cmp	x0, #0x0
   2b530:	mov	x0, #0x4                   	// #4
   2b534:	csel	x0, x0, x1, eq  // eq = none
   2b538:	add	x21, x21, x0
   2b53c:	sub	x21, x21, #0x1
   2b540:	clz	x0, x21
   2b544:	mov	w21, #0x40                  	// #64
   2b548:	sub	w21, w21, w0
   2b54c:	ldr	x0, [sp, #208]
   2b550:	ldr	x4, [sp, #320]
   2b554:	add	x21, x0, w21, sxtw
   2b558:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2b55c:	cmp	x4, x0
   2b560:	b.gt	2b6cc <mpfr_cos@@Base+0x7e0>
   2b564:	ldr	x0, [sp, #160]
   2b568:	cmp	x0, x4
   2b56c:	b.le	2b57c <mpfr_cos@@Base+0x690>
   2b570:	sub	x0, x0, x4
   2b574:	str	x4, [sp, #160]
   2b578:	add	x19, x19, x0
   2b57c:	ldr	x1, [sp, #168]
   2b580:	mov	x0, #0xfffffffffffffeff    	// #-257
   2b584:	movk	x0, #0x7fff, lsl #48
   2b588:	sub	x0, x0, x19
   2b58c:	cmp	x0, x1
   2b590:	b.ge	2b778 <mpfr_cos@@Base+0x88c>  // b.tcont
   2b594:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2b598:	mov	w1, #0x117                 	// #279
   2b59c:	add	x2, x2, #0x6df
   2b5a0:	b	2b190 <mpfr_cos@@Base+0x2a4>
   2b5a4:	mov	x0, #0x4                   	// #4
   2b5a8:	b	2b414 <mpfr_cos@@Base+0x528>
   2b5ac:	mov	x0, x26
   2b5b0:	mov	w1, #0x2                   	// #2
   2b5b4:	str	x2, [sp, #216]
   2b5b8:	bl	cbf0 <__gmpz_sizeinbase@plt>
   2b5bc:	ldr	x2, [sp, #216]
   2b5c0:	cmp	x0, x2
   2b5c4:	b.le	2b5ec <mpfr_cos@@Base+0x700>
   2b5c8:	sub	x2, x0, x2
   2b5cc:	mov	x1, x26
   2b5d0:	mov	x0, x26
   2b5d4:	str	x2, [sp, #216]
   2b5d8:	bl	c1c0 <__gmpz_fdiv_q_2exp@plt>
   2b5dc:	ldr	x0, [sp, #184]
   2b5e0:	ldr	x2, [sp, #216]
   2b5e4:	add	x0, x0, x2
   2b5e8:	str	x0, [sp, #184]
   2b5ec:	mov	x2, x26
   2b5f0:	mov	x1, x20
   2b5f4:	mov	x0, x20
   2b5f8:	bl	c070 <__gmpz_mul@plt>
   2b5fc:	ldr	x0, [sp, #184]
   2b600:	mov	x1, x20
   2b604:	neg	x2, x0
   2b608:	mov	x0, x20
   2b60c:	bl	c1c0 <__gmpz_fdiv_q_2exp@plt>
   2b610:	mov	x0, #0xffffffff            	// #4294967295
   2b614:	add	x3, x21, #0x1
   2b618:	cmp	x21, x0
   2b61c:	b.hi	2b654 <mpfr_cos@@Base+0x768>  // b.pmore
   2b620:	mul	x2, x3, x21
   2b624:	mov	x1, x20
   2b628:	mov	x0, x20
   2b62c:	bl	c6a0 <__gmpz_fdiv_q_ui@plt>
   2b630:	and	x0, x21, #0x3
   2b634:	mov	x2, x20
   2b638:	cmp	x0, #0x1
   2b63c:	mov	x1, x24
   2b640:	mov	x0, x24
   2b644:	b.ne	2b674 <mpfr_cos@@Base+0x788>  // b.any
   2b648:	bl	be60 <__gmpz_sub@plt>
   2b64c:	add	x21, x21, #0x2
   2b650:	b	2b450 <mpfr_cos@@Base+0x564>
   2b654:	mov	x2, x21
   2b658:	mov	x1, x20
   2b65c:	mov	x0, x20
   2b660:	str	x3, [sp, #216]
   2b664:	bl	c6a0 <__gmpz_fdiv_q_ui@plt>
   2b668:	ldr	x3, [sp, #216]
   2b66c:	mov	x2, x3
   2b670:	b	2b624 <mpfr_cos@@Base+0x738>
   2b674:	bl	ca50 <__gmpz_add@plt>
   2b678:	b	2b64c <mpfr_cos@@Base+0x760>
   2b67c:	mov	x1, x27
   2b680:	mov	w2, #0x2                   	// #2
   2b684:	mov	x0, x27
   2b688:	str	x4, [sp, #176]
   2b68c:	bl	c490 <mpfr_sqr@plt>
   2b690:	ldr	x2, [sp, #144]
   2b694:	mov	x1, x27
   2b698:	ldr	x0, [sp, #320]
   2b69c:	mov	w3, #0x0                   	// #0
   2b6a0:	add	x0, x0, #0x1
   2b6a4:	str	x0, [sp, #320]
   2b6a8:	mov	x0, x27
   2b6ac:	bl	bbf0 <mpfr_sub@plt>
   2b6b0:	ldr	x0, [sp, #320]
   2b6b4:	mov	x5, #0x8000000000000001    	// #-9223372036854775807
   2b6b8:	cmp	x0, x5
   2b6bc:	b.eq	2b57c <mpfr_cos@@Base+0x690>  // b.none
   2b6c0:	ldr	x4, [sp, #176]
   2b6c4:	add	x4, x4, #0x1
   2b6c8:	b	2b50c <mpfr_cos@@Base+0x620>
   2b6cc:	ldr	x0, [sp, #104]
   2b6d0:	cmp	w25, #0x0
   2b6d4:	ldr	x1, [sp, #304]
   2b6d8:	cinc	x3, x0, eq  // eq = none
   2b6dc:	ldr	x0, [sp, #328]
   2b6e0:	sub	x1, x1, #0x1
   2b6e4:	add	x2, x19, x4
   2b6e8:	str	x4, [sp, #136]
   2b6ec:	asr	x1, x1, #6
   2b6f0:	sub	x2, x2, x21
   2b6f4:	add	x1, x1, #0x1
   2b6f8:	bl	c400 <mpfr_round_p@plt>
   2b6fc:	ldr	x4, [sp, #136]
   2b700:	cbnz	w0, 2b734 <mpfr_cos@@Base+0x848>
   2b704:	cmp	x4, #0x1
   2b708:	b.ne	2b564 <mpfr_cos@@Base+0x678>  // b.any
   2b70c:	cmp	x19, x21
   2b710:	b.le	2b564 <mpfr_cos@@Base+0x678>
   2b714:	ldr	x0, [sp, #104]
   2b718:	cmp	w25, #0x0
   2b71c:	sub	x21, x19, x21
   2b720:	cinc	x0, x0, eq  // eq = none
   2b724:	cmp	x21, x0
   2b728:	b.lt	2b564 <mpfr_cos@@Base+0x678>  // b.tstop
   2b72c:	mov	x0, x27
   2b730:	bl	c4f0 <mpfr_nexttozero@plt>
   2b734:	ldr	w3, [sp, #312]
   2b738:	mov	x1, x27
   2b73c:	mov	w2, w25
   2b740:	mov	x0, x22
   2b744:	bl	c730 <mpfr_set4@plt>
   2b748:	mov	w19, w0
   2b74c:	ldr	x1, [sp, #400]
   2b750:	cbz	x1, 2b75c <mpfr_cos@@Base+0x870>
   2b754:	ldr	x0, [sp, #408]
   2b758:	bl	ccc0 <mpfr_free_func@plt>
   2b75c:	ldr	w0, [sp, #152]
   2b760:	cbz	w0, 2b0e4 <mpfr_cos@@Base+0x1f8>
   2b764:	add	x0, sp, #0x150
   2b768:	bl	c0f0 <mpfr_clear@plt>
   2b76c:	add	x0, sp, #0x170
   2b770:	bl	c0f0 <mpfr_clear@plt>
   2b774:	b	2b0e4 <mpfr_cos@@Base+0x1f8>
   2b778:	ldr	x0, [sp, #168]
   2b77c:	ldr	x1, [sp, #400]
   2b780:	add	x19, x19, x0
   2b784:	mov	x0, #0x2                   	// #2
   2b788:	sdiv	x0, x19, x0
   2b78c:	str	x0, [sp, #168]
   2b790:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   2b794:	cmp	x19, x0
   2b798:	b.ge	2b22c <mpfr_cos@@Base+0x340>  // b.tcont
   2b79c:	sub	x21, x19, #0x1
   2b7a0:	asr	x21, x21, #6
   2b7a4:	add	x21, x21, #0x1
   2b7a8:	lsl	x0, x21, #4
   2b7ac:	str	x0, [sp, #400]
   2b7b0:	cbnz	x1, 2b80c <mpfr_cos@@Base+0x920>
   2b7b4:	bl	cd90 <mpfr_allocate_func@plt>
   2b7b8:	str	x0, [sp, #408]
   2b7bc:	mov	w0, #0x1                   	// #1
   2b7c0:	str	w0, [sp, #280]
   2b7c4:	ldr	x1, [sp, #408]
   2b7c8:	str	w0, [sp, #312]
   2b7cc:	ldr	w0, [sp, #152]
   2b7d0:	str	x19, [sp, #272]
   2b7d4:	add	x21, x1, x21, lsl #3
   2b7d8:	str	x1, [sp, #296]
   2b7dc:	str	x19, [sp, #304]
   2b7e0:	str	x21, [sp, #328]
   2b7e4:	cbz	w0, 2b3ec <mpfr_cos@@Base+0x500>
   2b7e8:	mov	x1, x19
   2b7ec:	add	x0, sp, #0x150
   2b7f0:	bl	bf50 <mpfr_set_prec@plt>
   2b7f4:	ldr	x0, [sp, #112]
   2b7f8:	add	x1, x0, x19
   2b7fc:	add	x0, sp, #0x170
   2b800:	sub	x1, x1, #0x1
   2b804:	bl	bf50 <mpfr_set_prec@plt>
   2b808:	b	2b2ac <mpfr_cos@@Base+0x3c0>
   2b80c:	mov	x2, x0
   2b810:	ldr	x0, [sp, #408]
   2b814:	bl	c250 <mpfr_reallocate_func@plt>
   2b818:	b	2b7b8 <mpfr_cos@@Base+0x8cc>
   2b81c:	cbz	w19, 2af74 <mpfr_cos@@Base+0x88>
   2b820:	ldr	w0, [sp, #156]
   2b824:	orr	w0, w0, #0x8
   2b828:	str	w0, [x1]
   2b82c:	b	2af74 <mpfr_cos@@Base+0x88>

000000000002b830 <mpfr_sin@@Base>:
   2b830:	stp	x29, x30, [sp, #-208]!
   2b834:	mov	x29, sp
   2b838:	stp	x23, x24, [sp, #48]
   2b83c:	ldr	x24, [x1, #16]
   2b840:	stp	x19, x20, [sp, #16]
   2b844:	mov	x19, x0
   2b848:	stp	x21, x22, [sp, #32]
   2b84c:	mov	w22, w2
   2b850:	mov	x21, x1
   2b854:	stp	x25, x26, [sp, #64]
   2b858:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   2b85c:	cmp	x24, x2
   2b860:	stp	x27, x28, [sp, #80]
   2b864:	b.gt	2b8dc <mpfr_sin@@Base+0xac>
   2b868:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   2b86c:	add	x24, x24, x0
   2b870:	cmp	x24, #0x1
   2b874:	b.hi	2b8c8 <mpfr_sin@@Base+0x98>  // b.pmore
   2b878:	add	x0, x0, #0x4
   2b87c:	str	x0, [x19, #16]
   2b880:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2b884:	ldr	x1, [x0, #2592]
   2b888:	add	x0, x0, #0xa20
   2b88c:	blr	x1
   2b890:	mrs	x1, tpidr_el0
   2b894:	add	x0, x1, x0
   2b898:	ldr	w1, [x0]
   2b89c:	orr	w1, w1, #0x4
   2b8a0:	str	w1, [x0]
   2b8a4:	mov	w25, #0x0                   	// #0
   2b8a8:	mov	w0, w25
   2b8ac:	ldp	x19, x20, [sp, #16]
   2b8b0:	ldp	x21, x22, [sp, #32]
   2b8b4:	ldp	x23, x24, [sp, #48]
   2b8b8:	ldp	x25, x26, [sp, #64]
   2b8bc:	ldp	x27, x28, [sp, #80]
   2b8c0:	ldp	x29, x30, [sp], #208
   2b8c4:	ret
   2b8c8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2b8cc:	str	x0, [x19, #16]
   2b8d0:	ldr	w0, [x1, #8]
   2b8d4:	str	w0, [x19, #8]
   2b8d8:	b	2b8a4 <mpfr_sin@@Base+0x74>
   2b8dc:	mov	x23, #0xfffffffffffffffe    	// #-2
   2b8e0:	mul	x23, x24, x23
   2b8e4:	cmp	x23, #0x0
   2b8e8:	b.gt	2b9f8 <mpfr_sin@@Base+0x1c8>
   2b8ec:	mrs	x20, tpidr_el0
   2b8f0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2b8f4:	ldr	x1, [x0, #2592]
   2b8f8:	add	x0, x0, #0xa20
   2b8fc:	blr	x1
   2b900:	ldr	x26, [x19]
   2b904:	ldr	w0, [x20, x0]
   2b908:	str	w0, [sp, #136]
   2b90c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2b910:	ldr	x1, [x0, #2528]
   2b914:	add	x0, x0, #0x9e0
   2b918:	blr	x1
   2b91c:	add	x1, x20, x0
   2b920:	ldr	x0, [x20, x0]
   2b924:	str	x0, [sp, #104]
   2b928:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2b92c:	ldr	x2, [x0, #2560]
   2b930:	add	x0, x0, #0xa00
   2b934:	blr	x2
   2b938:	ldr	x2, [x20, x0]
   2b93c:	str	x2, [sp, #112]
   2b940:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   2b944:	str	x2, [x1]
   2b948:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   2b94c:	str	x1, [x20, x0]
   2b950:	mov	x0, #0x752f                	// #29999
   2b954:	cmp	x26, x0
   2b958:	b.le	2ba24 <mpfr_sin@@Base+0x1f4>
   2b95c:	mov	w3, w22
   2b960:	mov	x2, x21
   2b964:	mov	x0, x19
   2b968:	mov	x1, #0x0                   	// #0
   2b96c:	bl	c0a0 <mpfr_sincos_fast@plt>
   2b970:	and	w25, w0, #0x3
   2b974:	cmp	w25, #0x2
   2b978:	csinv	w25, w25, wzr, ne  // ne = any
   2b97c:	ldr	w2, [sp, #136]
   2b980:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2b984:	ldr	x1, [x0, #2592]
   2b988:	add	x0, x0, #0xa20
   2b98c:	blr	x1
   2b990:	add	x1, x20, x0
   2b994:	str	w2, [x20, x0]
   2b998:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2b99c:	ldr	x2, [x0, #2528]
   2b9a0:	add	x0, x0, #0x9e0
   2b9a4:	blr	x2
   2b9a8:	ldr	x2, [sp, #104]
   2b9ac:	str	x2, [x20, x0]
   2b9b0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2b9b4:	ldr	x2, [x0, #2560]
   2b9b8:	add	x0, x0, #0xa00
   2b9bc:	blr	x2
   2b9c0:	ldr	x2, [sp, #112]
   2b9c4:	str	x2, [x20, x0]
   2b9c8:	ldr	x0, [x19, #16]
   2b9cc:	ldr	x2, [sp, #104]
   2b9d0:	cmp	x2, x0
   2b9d4:	b.gt	2bd30 <mpfr_sin@@Base+0x500>
   2b9d8:	ldr	x2, [sp, #112]
   2b9dc:	cmp	x2, x0
   2b9e0:	b.lt	2bd30 <mpfr_sin@@Base+0x500>  // b.tstop
   2b9e4:	cbz	w25, 2b8a8 <mpfr_sin@@Base+0x78>
   2b9e8:	ldr	w0, [sp, #136]
   2b9ec:	orr	w0, w0, #0x8
   2b9f0:	str	w0, [x1]
   2b9f4:	b	2b8a8 <mpfr_sin@@Base+0x78>
   2b9f8:	ldr	x3, [x0]
   2b9fc:	add	x2, x23, #0x2
   2ba00:	add	x3, x3, #0x1
   2ba04:	cmp	x3, x2
   2ba08:	b.cs	2b8ec <mpfr_sin@@Base+0xbc>  // b.hs, b.nlast
   2ba0c:	mov	w4, w22
   2ba10:	mov	w3, #0x0                   	// #0
   2ba14:	bl	c5d0 <mpfr_round_near_x@plt>
   2ba18:	mov	w25, w0
   2ba1c:	cbz	w0, 2b8ec <mpfr_sin@@Base+0xbc>
   2ba20:	b	2b8a8 <mpfr_sin@@Base+0x78>
   2ba24:	cmp	x26, #0x1
   2ba28:	b.eq	2ba90 <mpfr_sin@@Base+0x260>  // b.none
   2ba2c:	b.gt	2ba48 <mpfr_sin@@Base+0x218>
   2ba30:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2ba34:	add	x2, x2, #0x685
   2ba38:	mov	w1, #0x55                  	// #85
   2ba3c:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2ba40:	add	x0, x0, #0x625
   2ba44:	bl	cbd0 <mpfr_assert_fail@plt>
   2ba48:	sub	x4, x26, #0x1
   2ba4c:	clz	x0, x4
   2ba50:	mov	w4, #0x40                  	// #64
   2ba54:	sub	w4, w4, w0
   2ba58:	sxtw	x4, w4
   2ba5c:	add	x4, x4, x26
   2ba60:	add	x28, x4, #0x7
   2ba64:	tbz	x24, #63, 2ba98 <mpfr_sin@@Base+0x268>
   2ba68:	mov	x0, #0xfffffffffffffeff    	// #-257
   2ba6c:	movk	x0, #0x7fff, lsl #48
   2ba70:	sub	x0, x0, x28
   2ba74:	cmp	x0, x23
   2ba78:	add	x28, x28, x23
   2ba7c:	b.ge	2ba98 <mpfr_sin@@Base+0x268>  // b.tcont
   2ba80:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2ba84:	mov	w1, #0x60                  	// #96
   2ba88:	add	x2, x2, #0x722
   2ba8c:	b	2ba3c <mpfr_sin@@Base+0x20c>
   2ba90:	mov	x4, #0x0                   	// #0
   2ba94:	b	2ba5c <mpfr_sin@@Base+0x22c>
   2ba98:	add	x27, sp, #0x90
   2ba9c:	mov	x25, #0x40                  	// #64
   2baa0:	mov	x0, x27
   2baa4:	add	x23, sp, #0xb0
   2baa8:	bl	bc50 <mpfr_init@plt>
   2baac:	mov	x0, x23
   2bab0:	bl	bc50 <mpfr_init@plt>
   2bab4:	cmp	x24, #0x1
   2bab8:	b.le	2bc78 <mpfr_sin@@Base+0x448>
   2babc:	add	x1, x24, x28
   2bac0:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   2bac4:	cmp	x1, x0
   2bac8:	b.le	2badc <mpfr_sin@@Base+0x2ac>
   2bacc:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2bad0:	mov	w1, #0x74                  	// #116
   2bad4:	add	x2, x2, #0x691
   2bad8:	b	2ba3c <mpfr_sin@@Base+0x20c>
   2badc:	sub	x1, x1, #0x1
   2bae0:	mov	x0, x27
   2bae4:	bl	bf50 <mpfr_set_prec@plt>
   2bae8:	mov	x1, x28
   2baec:	mov	x0, x23
   2baf0:	bl	bf50 <mpfr_set_prec@plt>
   2baf4:	mov	w2, #0x0                   	// #0
   2baf8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2bafc:	ldr	x1, [x0, #2640]
   2bb00:	add	x0, x0, #0xa50
   2bb04:	blr	x1
   2bb08:	add	x1, x20, x0
   2bb0c:	mov	x0, x27
   2bb10:	bl	c410 <mpfr_cache@plt>
   2bb14:	mov	x1, x27
   2bb18:	mov	w3, #0x0                   	// #0
   2bb1c:	mov	x2, #0x1                   	// #1
   2bb20:	mov	x0, x27
   2bb24:	bl	c350 <mpfr_mul_2ui@plt>
   2bb28:	mov	x2, x27
   2bb2c:	mov	x1, x21
   2bb30:	mov	w3, #0x0                   	// #0
   2bb34:	mov	x0, x23
   2bb38:	bl	cdb0 <mpfr_remainder@plt>
   2bb3c:	mov	x1, x27
   2bb40:	mov	w3, #0x0                   	// #0
   2bb44:	mov	x2, #0x1                   	// #1
   2bb48:	mov	x0, x27
   2bb4c:	bl	c980 <mpfr_div_2ui@plt>
   2bb50:	ldr	w0, [sp, #184]
   2bb54:	mov	x2, x23
   2bb58:	mov	x1, x27
   2bb5c:	mov	w3, #0x1                   	// #1
   2bb60:	cmp	w0, #0x0
   2bb64:	mov	x0, x27
   2bb68:	b.le	2bc70 <mpfr_sin@@Base+0x440>
   2bb6c:	bl	bbf0 <mpfr_sub@plt>
   2bb70:	ldr	x1, [sp, #192]
   2bb74:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   2bb78:	cmp	x1, x2
   2bb7c:	b.eq	2bc4c <mpfr_sin@@Base+0x41c>  // b.none
   2bb80:	mov	x0, #0x3                   	// #3
   2bb84:	sub	x0, x0, x28
   2bb88:	cmp	x1, x0
   2bb8c:	b.lt	2bc4c <mpfr_sin@@Base+0x41c>  // b.tstop
   2bb90:	ldr	x1, [sp, #160]
   2bb94:	cmp	x1, x2
   2bb98:	b.eq	2bc4c <mpfr_sin@@Base+0x41c>  // b.none
   2bb9c:	cmp	x0, x1
   2bba0:	b.gt	2bc4c <mpfr_sin@@Base+0x41c>
   2bba4:	mov	x3, x23
   2bba8:	mov	w6, #0x1                   	// #1
   2bbac:	ldr	w7, [x3, #8]
   2bbb0:	mov	x1, x28
   2bbb4:	mov	x0, x27
   2bbb8:	str	w7, [sp, #120]
   2bbbc:	str	x3, [sp, #128]
   2bbc0:	str	w6, [sp, #140]
   2bbc4:	bl	bf50 <mpfr_set_prec@plt>
   2bbc8:	ldr	x3, [sp, #128]
   2bbcc:	mov	w2, #0x4                   	// #4
   2bbd0:	mov	x0, x27
   2bbd4:	mov	x1, x3
   2bbd8:	bl	c4c0 <mpfr_cos@plt>
   2bbdc:	mov	x2, x27
   2bbe0:	mov	x1, x27
   2bbe4:	mov	w3, #0x2                   	// #2
   2bbe8:	mov	x0, x27
   2bbec:	bl	bdd0 <mpfr_mul@plt>
   2bbf0:	mov	w3, #0x1                   	// #1
   2bbf4:	mov	x2, x27
   2bbf8:	mov	x1, #0x1                   	// #1
   2bbfc:	mov	x0, x27
   2bc00:	bl	cae0 <mpfr_ui_sub@plt>
   2bc04:	mov	x1, x27
   2bc08:	mov	x0, x27
   2bc0c:	mov	w2, #0x1                   	// #1
   2bc10:	bl	c9c0 <mpfr_sqrt@plt>
   2bc14:	ldr	w7, [sp, #120]
   2bc18:	ldr	w6, [sp, #140]
   2bc1c:	tbz	w7, #31, 2bc2c <mpfr_sin@@Base+0x3fc>
   2bc20:	ldr	w0, [sp, #152]
   2bc24:	neg	w0, w0
   2bc28:	str	w0, [sp, #152]
   2bc2c:	ldr	x0, [sp, #160]
   2bc30:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   2bc34:	cmp	x0, x1
   2bc38:	b.ne	2bc84 <mpfr_sin@@Base+0x454>  // b.any
   2bc3c:	ldr	x0, [x21]
   2bc40:	cmp	x0, x28
   2bc44:	csel	x4, x0, x28, ge  // ge = tcont
   2bc48:	lsl	x28, x4, #1
   2bc4c:	mov	x0, #0xfffffffffffffeff    	// #-257
   2bc50:	movk	x0, #0x7fff, lsl #48
   2bc54:	sub	x0, x0, x28
   2bc58:	cmp	x0, x25
   2bc5c:	b.ge	2bd20 <mpfr_sin@@Base+0x4f0>  // b.tcont
   2bc60:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2bc64:	mov	w1, #0xb9                  	// #185
   2bc68:	add	x2, x2, #0x6df
   2bc6c:	b	2ba3c <mpfr_sin@@Base+0x20c>
   2bc70:	bl	c230 <mpfr_add@plt>
   2bc74:	b	2bb70 <mpfr_sin@@Base+0x340>
   2bc78:	mov	x3, x21
   2bc7c:	mov	w6, #0x0                   	// #0
   2bc80:	b	2bbac <mpfr_sin@@Base+0x37c>
   2bc84:	add	x2, x28, x0, lsl #1
   2bc88:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   2bc8c:	sub	x2, x2, #0x3
   2bc90:	cmp	x0, x1
   2bc94:	sub	x2, x2, w6, sxtw
   2bc98:	b.gt	2bcbc <mpfr_sin@@Base+0x48c>
   2bc9c:	ldr	x0, [x19]
   2bca0:	cmp	x0, x2
   2bca4:	b.gt	2bd14 <mpfr_sin@@Base+0x4e4>
   2bca8:	ldr	x0, [sp, #160]
   2bcac:	cmp	x0, #0x1
   2bcb0:	b.ne	2bc4c <mpfr_sin@@Base+0x41c>  // b.any
   2bcb4:	lsl	x28, x28, #1
   2bcb8:	b	2bc4c <mpfr_sin@@Base+0x41c>
   2bcbc:	ldr	x1, [sp, #144]
   2bcc0:	cmp	w22, #0x0
   2bcc4:	ldr	x0, [sp, #168]
   2bcc8:	sub	x1, x1, #0x1
   2bccc:	cinc	x3, x26, eq  // eq = none
   2bcd0:	str	x2, [sp, #120]
   2bcd4:	asr	x1, x1, #6
   2bcd8:	add	x1, x1, #0x1
   2bcdc:	bl	c400 <mpfr_round_p@plt>
   2bce0:	ldr	x2, [sp, #120]
   2bce4:	cbz	w0, 2bc9c <mpfr_sin@@Base+0x46c>
   2bce8:	ldr	w3, [sp, #152]
   2bcec:	mov	w2, w22
   2bcf0:	mov	x1, x27
   2bcf4:	mov	x0, x19
   2bcf8:	bl	c730 <mpfr_set4@plt>
   2bcfc:	mov	w25, w0
   2bd00:	mov	x0, x27
   2bd04:	bl	c0f0 <mpfr_clear@plt>
   2bd08:	mov	x0, x23
   2bd0c:	bl	c0f0 <mpfr_clear@plt>
   2bd10:	b	2b97c <mpfr_sin@@Base+0x14c>
   2bd14:	sub	x2, x0, x2
   2bd18:	add	x28, x28, x2
   2bd1c:	b	2bca8 <mpfr_sin@@Base+0x478>
   2bd20:	add	x28, x28, x25
   2bd24:	mov	x25, #0x2                   	// #2
   2bd28:	sdiv	x25, x28, x25
   2bd2c:	b	2bab4 <mpfr_sin@@Base+0x284>
   2bd30:	mov	w1, w25
   2bd34:	mov	w2, w22
   2bd38:	mov	x0, x19
   2bd3c:	bl	cbc0 <mpfr_check_range@plt>
   2bd40:	mov	w25, w0
   2bd44:	b	2b8a8 <mpfr_sin@@Base+0x78>

000000000002bd48 <mpfr_tan@@Base>:
   2bd48:	stp	x29, x30, [sp, #-336]!
   2bd4c:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   2bd50:	mov	x29, sp
   2bd54:	stp	x21, x22, [sp, #32]
   2bd58:	mov	w22, w2
   2bd5c:	ldr	x2, [x1, #16]
   2bd60:	stp	x19, x20, [sp, #16]
   2bd64:	mov	x19, x0
   2bd68:	stp	x23, x24, [sp, #48]
   2bd6c:	cmp	x2, x3
   2bd70:	mov	x23, x1
   2bd74:	stp	x25, x26, [sp, #64]
   2bd78:	stp	x27, x28, [sp, #80]
   2bd7c:	b.gt	2bdf4 <mpfr_tan@@Base+0xac>
   2bd80:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   2bd84:	add	x2, x2, x0
   2bd88:	cmp	x2, #0x1
   2bd8c:	b.hi	2bde0 <mpfr_tan@@Base+0x98>  // b.pmore
   2bd90:	add	x0, x0, #0x4
   2bd94:	str	x0, [x19, #16]
   2bd98:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2bd9c:	ldr	x1, [x0, #2592]
   2bda0:	add	x0, x0, #0xa20
   2bda4:	blr	x1
   2bda8:	mrs	x1, tpidr_el0
   2bdac:	add	x0, x1, x0
   2bdb0:	ldr	w1, [x0]
   2bdb4:	orr	w1, w1, #0x4
   2bdb8:	str	w1, [x0]
   2bdbc:	mov	w21, #0x0                   	// #0
   2bdc0:	mov	w0, w21
   2bdc4:	ldp	x19, x20, [sp, #16]
   2bdc8:	ldp	x21, x22, [sp, #32]
   2bdcc:	ldp	x23, x24, [sp, #48]
   2bdd0:	ldp	x25, x26, [sp, #64]
   2bdd4:	ldp	x27, x28, [sp, #80]
   2bdd8:	ldp	x29, x30, [sp], #336
   2bddc:	ret
   2bde0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2bde4:	str	x0, [x19, #16]
   2bde8:	ldr	w0, [x1, #8]
   2bdec:	str	w0, [x19, #8]
   2bdf0:	b	2bdbc <mpfr_tan@@Base+0x74>
   2bdf4:	mov	x3, #0xfffffffffffffffe    	// #-2
   2bdf8:	mul	x2, x2, x3
   2bdfc:	cmp	x2, #0x0
   2be00:	b.gt	2be8c <mpfr_tan@@Base+0x144>
   2be04:	mrs	x20, tpidr_el0
   2be08:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2be0c:	ldr	x1, [x0, #2592]
   2be10:	add	x0, x0, #0xa20
   2be14:	blr	x1
   2be18:	ldr	x24, [x19]
   2be1c:	ldr	w0, [x20, x0]
   2be20:	str	w0, [sp, #108]
   2be24:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2be28:	ldr	x1, [x0, #2528]
   2be2c:	add	x0, x0, #0x9e0
   2be30:	blr	x1
   2be34:	add	x1, x20, x0
   2be38:	ldr	x0, [x20, x0]
   2be3c:	str	x0, [sp, #112]
   2be40:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2be44:	ldr	x2, [x0, #2560]
   2be48:	add	x0, x0, #0xa00
   2be4c:	blr	x2
   2be50:	ldr	x2, [x20, x0]
   2be54:	str	x2, [sp, #120]
   2be58:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   2be5c:	str	x2, [x1]
   2be60:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   2be64:	str	x1, [x20, x0]
   2be68:	cmp	x24, #0x1
   2be6c:	b.ne	2beb8 <mpfr_tan@@Base+0x170>  // b.any
   2be70:	mov	x21, #0x0                   	// #0
   2be74:	add	x21, x21, x24
   2be78:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   2be7c:	add	x27, x21, #0xd
   2be80:	cmp	x27, x0
   2be84:	b.lt	2beec <mpfr_tan@@Base+0x1a4>  // b.tstop
   2be88:	bl	c970 <mpfr_abort_prec_max@plt>
   2be8c:	ldr	x3, [x0]
   2be90:	add	x2, x2, #0x1
   2be94:	add	x3, x3, #0x1
   2be98:	cmp	x3, x2
   2be9c:	b.cs	2be04 <mpfr_tan@@Base+0xbc>  // b.hs, b.nlast
   2bea0:	mov	w4, w22
   2bea4:	mov	w3, #0x1                   	// #1
   2bea8:	bl	c5d0 <mpfr_round_near_x@plt>
   2beac:	mov	w21, w0
   2beb0:	cbz	w0, 2be04 <mpfr_tan@@Base+0xbc>
   2beb4:	b	2bdc0 <mpfr_tan@@Base+0x78>
   2beb8:	b.gt	2bed4 <mpfr_tan@@Base+0x18c>
   2bebc:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2bec0:	add	x2, x2, #0x685
   2bec4:	mov	w1, #0x42                  	// #66
   2bec8:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2becc:	add	x0, x0, #0x35c
   2bed0:	bl	cbd0 <mpfr_assert_fail@plt>
   2bed4:	sub	x21, x24, #0x1
   2bed8:	clz	x0, x21
   2bedc:	mov	w21, #0x40                  	// #64
   2bee0:	sub	w21, w21, w0
   2bee4:	sxtw	x21, w21
   2bee8:	b	2be74 <mpfr_tan@@Base+0x12c>
   2beec:	add	x21, x21, #0xc
   2bef0:	mov	x0, #0x40                  	// #64
   2bef4:	sdiv	x21, x21, x0
   2bef8:	add	x21, x21, #0x1
   2befc:	lsl	x0, x21, #1
   2bf00:	cmp	x0, #0x10
   2bf04:	b.le	2bfbc <mpfr_tan@@Base+0x274>
   2bf08:	lsl	x0, x21, #4
   2bf0c:	str	x0, [sp, #192]
   2bf10:	bl	cd90 <mpfr_allocate_func@plt>
   2bf14:	str	x0, [sp, #200]
   2bf18:	add	x26, sp, #0xa0
   2bf1c:	add	x28, sp, #0x80
   2bf20:	mov	w0, #0x1                   	// #1
   2bf24:	ldr	x1, [sp, #200]
   2bf28:	mov	x25, #0x40                  	// #64
   2bf2c:	str	x27, [sp, #128]
   2bf30:	str	w0, [sp, #136]
   2bf34:	add	x21, x1, x21, lsl #3
   2bf38:	str	x1, [sp, #152]
   2bf3c:	str	x27, [sp, #160]
   2bf40:	str	w0, [sp, #168]
   2bf44:	str	x21, [sp, #184]
   2bf48:	mov	x2, x23
   2bf4c:	mov	x1, x26
   2bf50:	mov	w3, #0x0                   	// #0
   2bf54:	mov	x0, x28
   2bf58:	bl	cce0 <mpfr_sin_cos@plt>
   2bf5c:	mov	x2, x26
   2bf60:	mov	x1, x28
   2bf64:	mov	w3, #0x0                   	// #0
   2bf68:	mov	x0, x26
   2bf6c:	bl	c6b0 <mpfr_div@plt>
   2bf70:	ldr	x1, [sp, #160]
   2bf74:	cmp	w22, #0x0
   2bf78:	ldr	x0, [sp, #184]
   2bf7c:	sub	x1, x1, #0x1
   2bf80:	cinc	x3, x24, eq  // eq = none
   2bf84:	sub	x2, x27, #0x2
   2bf88:	asr	x1, x1, #6
   2bf8c:	add	x1, x1, #0x1
   2bf90:	bl	c400 <mpfr_round_p@plt>
   2bf94:	cbnz	w0, 2c03c <mpfr_tan@@Base+0x2f4>
   2bf98:	mov	x0, #0xfffffffffffffeff    	// #-257
   2bf9c:	movk	x0, #0x7fff, lsl #48
   2bfa0:	sub	x0, x0, x27
   2bfa4:	cmp	x0, x25
   2bfa8:	b.ge	2bfc8 <mpfr_tan@@Base+0x280>  // b.tcont
   2bfac:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2bfb0:	mov	w1, #0x50                  	// #80
   2bfb4:	add	x2, x2, #0x6df
   2bfb8:	b	2bec8 <mpfr_tan@@Base+0x180>
   2bfbc:	add	x0, sp, #0xd0
   2bfc0:	str	xzr, [sp, #192]
   2bfc4:	b	2bf14 <mpfr_tan@@Base+0x1cc>
   2bfc8:	add	x27, x27, x25
   2bfcc:	mov	x0, #0x2                   	// #2
   2bfd0:	ldr	x1, [sp, #192]
   2bfd4:	sdiv	x25, x27, x0
   2bfd8:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   2bfdc:	cmp	x27, x0
   2bfe0:	b.ge	2be88 <mpfr_tan@@Base+0x140>  // b.tcont
   2bfe4:	sub	x21, x27, #0x1
   2bfe8:	asr	x21, x21, #6
   2bfec:	add	x21, x21, #0x1
   2bff0:	lsl	x0, x21, #4
   2bff4:	str	x0, [sp, #192]
   2bff8:	cbnz	x1, 2c02c <mpfr_tan@@Base+0x2e4>
   2bffc:	bl	cd90 <mpfr_allocate_func@plt>
   2c000:	str	x0, [sp, #200]
   2c004:	mov	w0, #0x1                   	// #1
   2c008:	str	x27, [sp, #128]
   2c00c:	ldr	x1, [sp, #200]
   2c010:	str	w0, [sp, #136]
   2c014:	str	x1, [sp, #152]
   2c018:	str	x27, [sp, #160]
   2c01c:	add	x21, x1, x21, lsl #3
   2c020:	str	w0, [sp, #168]
   2c024:	str	x21, [sp, #184]
   2c028:	b	2bf48 <mpfr_tan@@Base+0x200>
   2c02c:	mov	x2, x0
   2c030:	ldr	x0, [sp, #200]
   2c034:	bl	c250 <mpfr_reallocate_func@plt>
   2c038:	b	2c000 <mpfr_tan@@Base+0x2b8>
   2c03c:	ldr	w3, [sp, #168]
   2c040:	mov	x1, x26
   2c044:	mov	w2, w22
   2c048:	mov	x0, x19
   2c04c:	bl	c730 <mpfr_set4@plt>
   2c050:	mov	w21, w0
   2c054:	ldr	x1, [sp, #192]
   2c058:	cbz	x1, 2c064 <mpfr_tan@@Base+0x31c>
   2c05c:	ldr	x0, [sp, #200]
   2c060:	bl	ccc0 <mpfr_free_func@plt>
   2c064:	ldr	w2, [sp, #108]
   2c068:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2c06c:	ldr	x1, [x0, #2592]
   2c070:	add	x0, x0, #0xa20
   2c074:	blr	x1
   2c078:	add	x1, x20, x0
   2c07c:	str	w2, [x20, x0]
   2c080:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2c084:	ldr	x2, [x0, #2528]
   2c088:	add	x0, x0, #0x9e0
   2c08c:	blr	x2
   2c090:	ldr	x2, [sp, #112]
   2c094:	str	x2, [x20, x0]
   2c098:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2c09c:	ldr	x2, [x0, #2560]
   2c0a0:	add	x0, x0, #0xa00
   2c0a4:	blr	x2
   2c0a8:	ldr	x2, [sp, #120]
   2c0ac:	str	x2, [x20, x0]
   2c0b0:	ldr	x0, [x19, #16]
   2c0b4:	ldr	x2, [sp, #112]
   2c0b8:	cmp	x2, x0
   2c0bc:	b.gt	2c0e0 <mpfr_tan@@Base+0x398>
   2c0c0:	ldr	x2, [sp, #120]
   2c0c4:	cmp	x2, x0
   2c0c8:	b.lt	2c0e0 <mpfr_tan@@Base+0x398>  // b.tstop
   2c0cc:	cbz	w21, 2bdc0 <mpfr_tan@@Base+0x78>
   2c0d0:	ldr	w0, [sp, #108]
   2c0d4:	orr	w0, w0, #0x8
   2c0d8:	str	w0, [x1]
   2c0dc:	b	2bdc0 <mpfr_tan@@Base+0x78>
   2c0e0:	mov	w1, w21
   2c0e4:	mov	w2, w22
   2c0e8:	mov	x0, x19
   2c0ec:	bl	cbc0 <mpfr_check_range@plt>
   2c0f0:	mov	w21, w0
   2c0f4:	b	2bdc0 <mpfr_tan@@Base+0x78>

000000000002c0f8 <mpfr_fma@@Base>:
   2c0f8:	stp	x29, x30, [sp, #-352]!
   2c0fc:	mov	x29, sp
   2c100:	stp	x19, x20, [sp, #16]
   2c104:	mov	x20, x0
   2c108:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2c10c:	ldr	x19, [x1, #16]
   2c110:	stp	x21, x22, [sp, #32]
   2c114:	mov	w22, w4
   2c118:	stp	x23, x24, [sp, #48]
   2c11c:	cmp	x19, x0
   2c120:	stp	x25, x26, [sp, #64]
   2c124:	mov	x26, x3
   2c128:	stp	x27, x28, [sp, #80]
   2c12c:	mov	x28, x1
   2c130:	mov	x27, x2
   2c134:	b.le	2c1c0 <mpfr_fma@@Base+0xc8>
   2c138:	ldr	x1, [x2, #16]
   2c13c:	cmp	x1, x0
   2c140:	b.le	2c150 <mpfr_fma@@Base+0x58>
   2c144:	ldr	x5, [x3, #16]
   2c148:	cmp	x5, x0
   2c14c:	b.gt	2c300 <mpfr_fma@@Base+0x208>
   2c150:	ldr	x1, [x27, #16]
   2c154:	mov	x2, #0x2                   	// #2
   2c158:	movk	x2, #0x8000, lsl #48
   2c15c:	cmp	x1, x2
   2c160:	b.eq	2c1d0 <mpfr_fma@@Base+0xd8>  // b.none
   2c164:	ldr	x0, [x26, #16]
   2c168:	cmp	x0, x2
   2c16c:	b.eq	2c1d0 <mpfr_fma@@Base+0xd8>  // b.none
   2c170:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   2c174:	cmp	x19, x2
   2c178:	b.eq	2c834 <mpfr_fma@@Base+0x73c>  // b.none
   2c17c:	cmp	x1, x2
   2c180:	b.ne	2c230 <mpfr_fma@@Base+0x138>  // b.any
   2c184:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   2c188:	cmp	x19, x1
   2c18c:	b.eq	2c1d0 <mpfr_fma@@Base+0xd8>  // b.none
   2c190:	ldr	w2, [x27, #8]
   2c194:	ldr	w1, [x28, #8]
   2c198:	mul	w1, w1, w2
   2c19c:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   2c1a0:	cmp	x0, x2
   2c1a4:	b.ne	2c228 <mpfr_fma@@Base+0x130>  // b.any
   2c1a8:	ldr	w2, [x26, #8]
   2c1ac:	cmp	w1, w2
   2c1b0:	b.ne	2c1d0 <mpfr_fma@@Base+0xd8>  // b.any
   2c1b4:	str	x0, [x20, #16]
   2c1b8:	str	w1, [x20, #8]
   2c1bc:	b	2c200 <mpfr_fma@@Base+0x108>
   2c1c0:	mov	x0, #0x2                   	// #2
   2c1c4:	movk	x0, #0x8000, lsl #48
   2c1c8:	cmp	x19, x0
   2c1cc:	b.ne	2c150 <mpfr_fma@@Base+0x58>  // b.any
   2c1d0:	mov	x0, #0x2                   	// #2
   2c1d4:	movk	x0, #0x8000, lsl #48
   2c1d8:	str	x0, [x20, #16]
   2c1dc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2c1e0:	ldr	x1, [x0, #2592]
   2c1e4:	add	x0, x0, #0xa20
   2c1e8:	blr	x1
   2c1ec:	mrs	x1, tpidr_el0
   2c1f0:	add	x0, x1, x0
   2c1f4:	ldr	w1, [x0]
   2c1f8:	orr	w1, w1, #0x4
   2c1fc:	str	w1, [x0]
   2c200:	mov	w19, #0x0                   	// #0
   2c204:	mov	sp, x29
   2c208:	mov	w0, w19
   2c20c:	ldp	x19, x20, [sp, #16]
   2c210:	ldp	x21, x22, [sp, #32]
   2c214:	ldp	x23, x24, [sp, #48]
   2c218:	ldp	x25, x26, [sp, #64]
   2c21c:	ldp	x27, x28, [sp, #80]
   2c220:	ldp	x29, x30, [sp], #352
   2c224:	ret
   2c228:	str	x2, [x20, #16]
   2c22c:	b	2c1b8 <mpfr_fma@@Base+0xc0>
   2c230:	cmp	x0, x2
   2c234:	b.ne	2c248 <mpfr_fma@@Base+0x150>  // b.any
   2c238:	str	x0, [x20, #16]
   2c23c:	ldr	w0, [x26, #8]
   2c240:	str	w0, [x20, #8]
   2c244:	b	2c200 <mpfr_fma@@Base+0x108>
   2c248:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   2c24c:	cmp	x19, x2
   2c250:	mov	x3, x2
   2c254:	b.eq	2c260 <mpfr_fma@@Base+0x168>  // b.none
   2c258:	cmp	x1, x2
   2c25c:	b.ne	2c2e8 <mpfr_fma@@Base+0x1f0>  // b.any
   2c260:	cmp	x0, x3
   2c264:	b.ne	2c2cc <mpfr_fma@@Base+0x1d4>  // b.any
   2c268:	ldr	w1, [x27, #8]
   2c26c:	cmp	w22, #0x3
   2c270:	ldr	w0, [x28, #8]
   2c274:	mul	w0, w0, w1
   2c278:	b.eq	2c2a0 <mpfr_fma@@Base+0x1a8>  // b.none
   2c27c:	tbz	w0, #31, 2c2bc <mpfr_fma@@Base+0x1c4>
   2c280:	ldr	w1, [x26, #8]
   2c284:	mov	w0, #0xffffffff            	// #-1
   2c288:	cmp	w1, w0
   2c28c:	cneg	w0, w0, gt
   2c290:	str	w0, [x20, #8]
   2c294:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2c298:	str	x0, [x20, #16]
   2c29c:	b	2c200 <mpfr_fma@@Base+0x108>
   2c2a0:	cmp	w0, #0x0
   2c2a4:	b.le	2c2c4 <mpfr_fma@@Base+0x1cc>
   2c2a8:	ldr	w1, [x26, #8]
   2c2ac:	mov	w0, #0x1                   	// #1
   2c2b0:	cmp	w1, w0
   2c2b4:	cneg	w0, w0, lt  // lt = tstop
   2c2b8:	b	2c290 <mpfr_fma@@Base+0x198>
   2c2bc:	mov	w0, #0x1                   	// #1
   2c2c0:	b	2c290 <mpfr_fma@@Base+0x198>
   2c2c4:	mov	w0, #0xffffffff            	// #-1
   2c2c8:	b	2c290 <mpfr_fma@@Base+0x198>
   2c2cc:	ldr	w3, [x26, #8]
   2c2d0:	mov	w2, w22
   2c2d4:	mov	x1, x26
   2c2d8:	mov	x0, x20
   2c2dc:	bl	c730 <mpfr_set4@plt>
   2c2e0:	mov	w19, w0
   2c2e4:	b	2c204 <mpfr_fma@@Base+0x10c>
   2c2e8:	mov	w3, w22
   2c2ec:	mov	x2, x27
   2c2f0:	mov	x1, x28
   2c2f4:	mov	x0, x20
   2c2f8:	bl	bdd0 <mpfr_mul@plt>
   2c2fc:	b	2c2e0 <mpfr_fma@@Base+0x1e8>
   2c300:	add	x19, x19, x1
   2c304:	mrs	x21, tpidr_el0
   2c308:	ldr	x23, [x2]
   2c30c:	add	x25, x29, #0x80
   2c310:	ldr	x1, [x28]
   2c314:	cmp	x1, x23
   2c318:	b.ne	2c4f0 <mpfr_fma@@Base+0x3f8>  // b.any
   2c31c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2c320:	ldr	x2, [x0, #2560]
   2c324:	add	x0, x0, #0xa00
   2c328:	blr	x2
   2c32c:	ldr	x0, [x21, x0]
   2c330:	cmp	x0, x19
   2c334:	b.lt	2c4f0 <mpfr_fma@@Base+0x3f8>  // b.tstop
   2c338:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2c33c:	ldr	x2, [x0, #2528]
   2c340:	add	x0, x0, #0x9e0
   2c344:	blr	x2
   2c348:	ldr	x0, [x21, x0]
   2c34c:	cmp	x0, x19
   2c350:	b.ge	2c4f0 <mpfr_fma@@Base+0x3f8>  // b.tcont
   2c354:	cmp	x1, #0x3f
   2c358:	b.gt	2c448 <mpfr_fma@@Base+0x350>
   2c35c:	ldr	x0, [x3]
   2c360:	cmp	x0, x1
   2c364:	b.ne	2c448 <mpfr_fma@@Base+0x350>  // b.any
   2c368:	ldr	x2, [x20]
   2c36c:	cmp	x2, x0
   2c370:	b.ne	2c448 <mpfr_fma@@Base+0x350>  // b.any
   2c374:	ldr	x0, [x28, #24]
   2c378:	lsl	x2, x2, #1
   2c37c:	ldr	w6, [x27, #8]
   2c380:	cmp	x2, #0x40
   2c384:	ldr	x1, [x0]
   2c388:	ldr	x0, [x27, #24]
   2c38c:	ldr	x3, [x0]
   2c390:	umulh	x0, x1, x3
   2c394:	str	x2, [x29, #128]
   2c398:	str	x2, [x29, #208]
   2c39c:	mul	x1, x1, x3
   2c3a0:	add	x3, x29, #0x70
   2c3a4:	str	x3, [x29, #152]
   2c3a8:	add	x3, x29, #0xa0
   2c3ac:	str	x3, [x29, #232]
   2c3b0:	ldr	w3, [x28, #8]
   2c3b4:	stp	x1, x0, [x29, #112]
   2c3b8:	str	x5, [x29, #224]
   2c3bc:	mul	w3, w3, w6
   2c3c0:	str	w3, [x29, #136]
   2c3c4:	ldr	w3, [x26, #8]
   2c3c8:	str	w3, [x29, #216]
   2c3cc:	ldr	x2, [x26, #24]
   2c3d0:	b.gt	2c424 <mpfr_fma@@Base+0x32c>
   2c3d4:	tbnz	x0, #63, 2c41c <mpfr_fma@@Base+0x324>
   2c3d8:	sub	x19, x19, #0x1
   2c3dc:	lsl	x0, x0, #1
   2c3e0:	str	x0, [x29, #112]
   2c3e4:	str	x19, [x29, #144]
   2c3e8:	ldr	x0, [x2]
   2c3ec:	str	x0, [x29, #160]
   2c3f0:	mov	w3, w22
   2c3f4:	add	x2, x29, #0xd0
   2c3f8:	mov	x1, x25
   2c3fc:	mov	x0, x25
   2c400:	bl	c230 <mpfr_add@plt>
   2c404:	mov	w3, w0
   2c408:	mov	w2, w22
   2c40c:	mov	x1, x25
   2c410:	mov	x0, x20
   2c414:	bl	cb70 <mpfr_set_1_2@plt>
   2c418:	b	2c2e0 <mpfr_fma@@Base+0x1e8>
   2c41c:	str	x0, [x29, #112]
   2c420:	b	2c3e4 <mpfr_fma@@Base+0x2ec>
   2c424:	ldr	x2, [x2]
   2c428:	stp	xzr, x2, [x29, #160]
   2c42c:	tbnz	x0, #63, 2c440 <mpfr_fma@@Base+0x348>
   2c430:	sub	x19, x19, #0x1
   2c434:	extr	x0, x0, x1, #63
   2c438:	lsl	x1, x1, #1
   2c43c:	stp	x1, x0, [x29, #112]
   2c440:	str	x19, [x29, #144]
   2c444:	b	2c3f0 <mpfr_fma@@Base+0x2f8>
   2c448:	sub	x3, x1, #0x1
   2c44c:	asr	x3, x3, #6
   2c450:	add	x3, x3, #0x1
   2c454:	cmp	x3, #0x50
   2c458:	b.gt	2c4f0 <mpfr_fma@@Base+0x3f8>
   2c45c:	mov	x0, sp
   2c460:	lsl	x4, x3, #1
   2c464:	sub	x0, x0, x3, lsl #4
   2c468:	lsl	x23, x3, #4
   2c46c:	mov	sp, x0
   2c470:	lsl	x0, x3, #7
   2c474:	ldr	x2, [x27, #24]
   2c478:	mov	x21, sp
   2c47c:	ldr	x1, [x28, #24]
   2c480:	add	x23, x21, x23
   2c484:	mov	w24, #0x1                   	// #1
   2c488:	str	x4, [x29, #104]
   2c48c:	str	x0, [x29, #128]
   2c490:	mov	x0, x21
   2c494:	str	w24, [x29, #136]
   2c498:	str	x21, [x29, #152]
   2c49c:	bl	c500 <__gmpn_mul_n@plt>
   2c4a0:	ldur	x0, [x23, #-8]
   2c4a4:	tbnz	x0, #63, 2c4c4 <mpfr_fma@@Base+0x3cc>
   2c4a8:	ldr	x4, [x29, #104]
   2c4ac:	mov	w3, w24
   2c4b0:	mov	x1, x21
   2c4b4:	mov	x0, x21
   2c4b8:	sub	x19, x19, #0x1
   2c4bc:	mov	x2, x4
   2c4c0:	bl	bd40 <__gmpn_lshift@plt>
   2c4c4:	ldr	w1, [x27, #8]
   2c4c8:	mov	w3, w22
   2c4cc:	ldr	w0, [x28, #8]
   2c4d0:	mov	x2, x26
   2c4d4:	str	x19, [x29, #144]
   2c4d8:	mul	w0, w0, w1
   2c4dc:	mov	x1, x25
   2c4e0:	str	w0, [x29, #136]
   2c4e4:	mov	x0, x20
   2c4e8:	bl	c230 <mpfr_add@plt>
   2c4ec:	b	2c2e0 <mpfr_fma@@Base+0x1e8>
   2c4f0:	add	x23, x1, x23
   2c4f4:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   2c4f8:	cmp	x23, x0
   2c4fc:	b.lt	2c518 <mpfr_fma@@Base+0x420>  // b.tstop
   2c500:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2c504:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2c508:	add	x2, x2, #0x761
   2c50c:	add	x0, x0, #0x7a5
   2c510:	mov	w1, #0xd5                  	// #213
   2c514:	bl	cbd0 <mpfr_assert_fail@plt>
   2c518:	sub	x0, x23, #0x1
   2c51c:	asr	x0, x0, #6
   2c520:	add	x0, x0, #0x1
   2c524:	cmp	x0, #0x10
   2c528:	b.le	2c664 <mpfr_fma@@Base+0x56c>
   2c52c:	lsl	x0, x0, #3
   2c530:	str	x0, [x29, #208]
   2c534:	bl	cd90 <mpfr_allocate_func@plt>
   2c538:	str	x0, [x29, #216]
   2c53c:	mov	x2, x27
   2c540:	str	x23, [x29, #128]
   2c544:	mov	w3, #0x0                   	// #0
   2c548:	ldr	x0, [x29, #216]
   2c54c:	str	x0, [x29, #152]
   2c550:	mov	w0, #0x1                   	// #1
   2c554:	str	w0, [x29, #136]
   2c558:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2c55c:	ldr	x1, [x0, #2592]
   2c560:	add	x0, x0, #0xa20
   2c564:	blr	x1
   2c568:	ldr	w23, [x21, x0]
   2c56c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2c570:	ldr	x1, [x0, #2528]
   2c574:	add	x0, x0, #0x9e0
   2c578:	blr	x1
   2c57c:	add	x5, x21, x0
   2c580:	ldr	x0, [x21, x0]
   2c584:	stp	x5, x0, [x29, #96]
   2c588:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2c58c:	ldr	x1, [x0, #2560]
   2c590:	add	x0, x0, #0xa00
   2c594:	blr	x1
   2c598:	mov	x1, #0xc000000000000001    	// #-4611686018427387903
   2c59c:	str	x1, [x5]
   2c5a0:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   2c5a4:	ldr	x24, [x21, x0]
   2c5a8:	str	x1, [x21, x0]
   2c5ac:	mov	x1, x28
   2c5b0:	mov	x0, x25
   2c5b4:	bl	bdd0 <mpfr_mul@plt>
   2c5b8:	ldr	x5, [x29, #96]
   2c5bc:	cbz	w0, 2c6bc <mpfr_fma@@Base+0x5c4>
   2c5c0:	ldr	x1, [x29, #144]
   2c5c4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2c5c8:	cmp	x1, x0
   2c5cc:	b.ne	2c670 <mpfr_fma@@Base+0x578>  // b.any
   2c5d0:	ldr	x1, [x29, #208]
   2c5d4:	ldr	w25, [x29, #136]
   2c5d8:	cbz	x1, 2c5e4 <mpfr_fma@@Base+0x4ec>
   2c5dc:	ldr	x0, [x29, #216]
   2c5e0:	bl	ccc0 <mpfr_free_func@plt>
   2c5e4:	ldr	w0, [x26, #8]
   2c5e8:	cmp	w0, w25
   2c5ec:	b.eq	2c610 <mpfr_fma@@Base+0x518>  // b.none
   2c5f0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2c5f4:	ldr	x1, [x0, #2560]
   2c5f8:	add	x0, x0, #0xa00
   2c5fc:	blr	x1
   2c600:	ldr	x0, [x21, x0]
   2c604:	add	x0, x0, #0x2
   2c608:	cmp	x0, x19
   2c60c:	b.ge	2c6f8 <mpfr_fma@@Base+0x600>  // b.tcont
   2c610:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2c614:	ldr	x1, [x0, #2592]
   2c618:	add	x0, x0, #0xa20
   2c61c:	blr	x1
   2c620:	str	w23, [x21, x0]
   2c624:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2c628:	ldr	x1, [x0, #2528]
   2c62c:	add	x0, x0, #0x9e0
   2c630:	blr	x1
   2c634:	mov	w2, w25
   2c638:	ldr	x1, [x29, #104]
   2c63c:	str	x1, [x21, x0]
   2c640:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2c644:	ldr	x1, [x0, #2560]
   2c648:	add	x0, x0, #0xa00
   2c64c:	blr	x1
   2c650:	str	x24, [x21, x0]
   2c654:	mov	w1, w22
   2c658:	mov	x0, x20
   2c65c:	bl	bfc0 <mpfr_overflow@plt>
   2c660:	b	2c2e0 <mpfr_fma@@Base+0x1e8>
   2c664:	add	x0, x29, #0xe0
   2c668:	str	xzr, [x29, #208]
   2c66c:	b	2c538 <mpfr_fma@@Base+0x440>
   2c670:	ldr	x0, [x20]
   2c674:	ldr	x3, [x26]
   2c678:	add	x0, x0, #0x1
   2c67c:	ldr	x1, [x5]
   2c680:	cmp	x0, x3
   2c684:	ldr	x2, [x26, #16]
   2c688:	csel	x0, x0, x3, ge  // ge = tcont
   2c68c:	sub	x2, x2, x1
   2c690:	cmp	x2, x0
   2c694:	b.lt	2c6e8 <mpfr_fma@@Base+0x5f0>  // b.tstop
   2c698:	mov	x0, #0x1                   	// #1
   2c69c:	str	x0, [x29, #128]
   2c6a0:	mov	x0, x25
   2c6a4:	bl	c340 <mpfr_setmin@plt>
   2c6a8:	ldr	w1, [x27, #8]
   2c6ac:	ldr	w0, [x28, #8]
   2c6b0:	mul	w0, w0, w1
   2c6b4:	str	w0, [x29, #136]
   2c6b8:	bl	c300 <mpfr_clear_flags@plt>
   2c6bc:	mov	x1, x25
   2c6c0:	mov	w3, w22
   2c6c4:	mov	x2, x26
   2c6c8:	mov	x0, x20
   2c6cc:	bl	c230 <mpfr_add@plt>
   2c6d0:	mov	w19, w0
   2c6d4:	ldr	x1, [x29, #208]
   2c6d8:	cbz	x1, 2c7a0 <mpfr_fma@@Base+0x6a8>
   2c6dc:	ldr	x0, [x29, #216]
   2c6e0:	bl	ccc0 <mpfr_free_func@plt>
   2c6e4:	b	2c7a0 <mpfr_fma@@Base+0x6a8>
   2c6e8:	ldr	x1, [x29, #208]
   2c6ec:	cbz	x1, 2c6f8 <mpfr_fma@@Base+0x600>
   2c6f0:	ldr	x0, [x29, #216]
   2c6f4:	bl	ccc0 <mpfr_free_func@plt>
   2c6f8:	ldr	x0, [x27]
   2c6fc:	str	xzr, [x29, #112]
   2c700:	ldr	x19, [x28]
   2c704:	sub	x0, x0, #0x1
   2c708:	sub	x19, x19, #0x1
   2c70c:	asr	x0, x0, #6
   2c710:	add	x19, x0, x19, asr #6
   2c714:	add	x19, x19, #0x2
   2c718:	lsl	x1, x19, #3
   2c71c:	cmp	x1, #0x4, lsl #12
   2c720:	b.hi	2c814 <mpfr_fma@@Base+0x71c>  // b.pmore
   2c724:	add	x1, x1, #0xf
   2c728:	and	x1, x1, #0xfffffffffffffff0
   2c72c:	sub	sp, sp, x1
   2c730:	mov	x0, sp
   2c734:	add	x25, x29, #0xa0
   2c738:	str	x0, [x29, #184]
   2c73c:	mov	w0, #0x1                   	// #1
   2c740:	mov	x2, x27
   2c744:	mov	x1, x28
   2c748:	str	w0, [x29, #168]
   2c74c:	mov	x0, x25
   2c750:	lsl	x19, x19, #6
   2c754:	str	x19, [x29, #160]
   2c758:	bl	c000 <mpfr_ubf_mul_exact@plt>
   2c75c:	bl	c300 <mpfr_clear_flags@plt>
   2c760:	mov	x1, x25
   2c764:	mov	w3, w22
   2c768:	mov	x2, x26
   2c76c:	mov	x0, x20
   2c770:	bl	c230 <mpfr_add@plt>
   2c774:	mov	w19, w0
   2c778:	ldr	x1, [x29, #176]
   2c77c:	mov	x0, #0x4                   	// #4
   2c780:	movk	x0, #0x8000, lsl #48
   2c784:	cmp	x1, x0
   2c788:	b.ne	2c794 <mpfr_fma@@Base+0x69c>  // b.any
   2c78c:	add	x0, x25, #0x20
   2c790:	bl	c200 <mpfr_mpz_clear@plt>
   2c794:	ldr	x0, [x29, #112]
   2c798:	cbz	x0, 2c7a0 <mpfr_fma@@Base+0x6a8>
   2c79c:	bl	c4a0 <mpfr_tmp_free@plt>
   2c7a0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2c7a4:	ldr	x1, [x0, #2592]
   2c7a8:	add	x0, x0, #0xa20
   2c7ac:	blr	x1
   2c7b0:	add	x1, x21, x0
   2c7b4:	ldr	w0, [x21, x0]
   2c7b8:	orr	w23, w23, w0
   2c7bc:	str	w23, [x1]
   2c7c0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2c7c4:	ldr	x2, [x0, #2528]
   2c7c8:	add	x0, x0, #0x9e0
   2c7cc:	blr	x2
   2c7d0:	ldr	x2, [x29, #104]
   2c7d4:	str	x2, [x21, x0]
   2c7d8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2c7dc:	ldr	x2, [x0, #2560]
   2c7e0:	add	x0, x0, #0xa00
   2c7e4:	blr	x2
   2c7e8:	str	x24, [x21, x0]
   2c7ec:	ldr	x0, [x20, #16]
   2c7f0:	ldr	x2, [x29, #104]
   2c7f4:	cmp	x2, x0
   2c7f8:	b.gt	2c820 <mpfr_fma@@Base+0x728>
   2c7fc:	cmp	x24, x0
   2c800:	b.lt	2c820 <mpfr_fma@@Base+0x728>  // b.tstop
   2c804:	cbz	w19, 2c204 <mpfr_fma@@Base+0x10c>
   2c808:	orr	w23, w23, #0x8
   2c80c:	str	w23, [x1]
   2c810:	b	2c204 <mpfr_fma@@Base+0x10c>
   2c814:	add	x0, x29, #0x70
   2c818:	bl	be40 <mpfr_tmp_allocate@plt>
   2c81c:	b	2c734 <mpfr_fma@@Base+0x63c>
   2c820:	mov	w2, w22
   2c824:	mov	w1, w19
   2c828:	mov	x0, x20
   2c82c:	bl	cbc0 <mpfr_check_range@plt>
   2c830:	b	2c2e0 <mpfr_fma@@Base+0x1e8>
   2c834:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   2c838:	cmp	x1, x2
   2c83c:	b	2c18c <mpfr_fma@@Base+0x94>

000000000002c840 <mpfr_fms@@Base>:
   2c840:	stp	x29, x30, [sp, #-48]!
   2c844:	mov	x29, sp
   2c848:	ldr	x5, [x3]
   2c84c:	str	x5, [sp, #16]
   2c850:	ldr	w5, [x3, #8]
   2c854:	neg	w5, w5
   2c858:	str	w5, [sp, #24]
   2c85c:	ldp	x5, x3, [x3, #16]
   2c860:	stp	x5, x3, [sp, #32]
   2c864:	add	x3, sp, #0x10
   2c868:	bl	c2e0 <mpfr_fma@plt>
   2c86c:	ldp	x29, x30, [sp], #48
   2c870:	ret

000000000002c874 <mpfr_hypot@@Base>:
   2c874:	stp	x29, x30, [sp, #-256]!
   2c878:	mov	x29, sp
   2c87c:	stp	x27, x28, [sp, #80]
   2c880:	mov	x28, x0
   2c884:	ldr	x0, [x1, #16]
   2c888:	stp	x19, x20, [sp, #16]
   2c88c:	stp	x21, x22, [sp, #32]
   2c890:	stp	x23, x24, [sp, #48]
   2c894:	mov	x23, x1
   2c898:	mov	w24, w3
   2c89c:	stp	x25, x26, [sp, #64]
   2c8a0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   2c8a4:	mov	x25, x2
   2c8a8:	cmp	x0, x1
   2c8ac:	b.le	2c914 <mpfr_hypot@@Base+0xa0>
   2c8b0:	ldr	x2, [x2, #16]
   2c8b4:	cmp	x2, x1
   2c8b8:	b.gt	2c97c <mpfr_hypot@@Base+0x108>
   2c8bc:	ldr	x2, [x25, #16]
   2c8c0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   2c8c4:	cmp	x2, x1
   2c8c8:	b.eq	2c918 <mpfr_hypot@@Base+0xa4>  // b.none
   2c8cc:	mov	x1, #0x2                   	// #2
   2c8d0:	movk	x1, #0x8000, lsl #48
   2c8d4:	cmp	x0, x1
   2c8d8:	mov	x3, x1
   2c8dc:	b.eq	2c8e8 <mpfr_hypot@@Base+0x74>  // b.none
   2c8e0:	cmp	x2, x1
   2c8e4:	b.ne	2c94c <mpfr_hypot@@Base+0xd8>  // b.any
   2c8e8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2c8ec:	ldr	x1, [x0, #2592]
   2c8f0:	add	x0, x0, #0xa20
   2c8f4:	blr	x1
   2c8f8:	str	x3, [x28, #16]
   2c8fc:	mrs	x1, tpidr_el0
   2c900:	add	x0, x1, x0
   2c904:	ldr	w1, [x0]
   2c908:	orr	w1, w1, #0x4
   2c90c:	str	w1, [x0]
   2c910:	b	2c928 <mpfr_hypot@@Base+0xb4>
   2c914:	b.ne	2c8bc <mpfr_hypot@@Base+0x48>  // b.any
   2c918:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2c91c:	str	x0, [x28, #16]
   2c920:	mov	w0, #0x1                   	// #1
   2c924:	str	w0, [x28, #8]
   2c928:	mov	w22, #0x0                   	// #0
   2c92c:	mov	w0, w22
   2c930:	ldp	x19, x20, [sp, #16]
   2c934:	ldp	x21, x22, [sp, #32]
   2c938:	ldp	x23, x24, [sp, #48]
   2c93c:	ldp	x25, x26, [sp, #64]
   2c940:	ldp	x27, x28, [sp, #80]
   2c944:	ldp	x29, x30, [sp], #256
   2c948:	ret
   2c94c:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   2c950:	mov	w2, w24
   2c954:	cmp	x0, x1
   2c958:	mov	w3, #0x1                   	// #1
   2c95c:	b.ne	2c974 <mpfr_hypot@@Base+0x100>  // b.any
   2c960:	mov	x1, x25
   2c964:	mov	x0, x28
   2c968:	bl	c730 <mpfr_set4@plt>
   2c96c:	mov	w22, w0
   2c970:	b	2c92c <mpfr_hypot@@Base+0xb8>
   2c974:	mov	x1, x23
   2c978:	b	2c964 <mpfr_hypot@@Base+0xf0>
   2c97c:	mov	x1, x25
   2c980:	mov	x0, x23
   2c984:	bl	ca40 <mpfr_cmpabs@plt>
   2c988:	tbz	w0, #31, 2c998 <mpfr_hypot@@Base+0x124>
   2c98c:	mov	x0, x23
   2c990:	mov	x23, x25
   2c994:	mov	x25, x0
   2c998:	ldr	x4, [x23]
   2c99c:	cmp	w24, #0x0
   2c9a0:	ldr	x26, [x28]
   2c9a4:	cset	x1, eq  // eq = none
   2c9a8:	ldr	x22, [x23, #16]
   2c9ac:	cmp	x4, x26
   2c9b0:	ldr	x0, [x25, #16]
   2c9b4:	csel	x2, x4, x26, ge  // ge = tcont
   2c9b8:	add	x1, x1, x2
   2c9bc:	cmp	w24, #0x4
   2c9c0:	sub	x0, x22, x0
   2c9c4:	mov	w2, #0x2                   	// #2
   2c9c8:	csel	w24, w24, w2, ne  // ne = any
   2c9cc:	cmp	x0, x1, lsl #1
   2c9d0:	b.ls	2cca4 <mpfr_hypot@@Base+0x430>  // b.plast
   2c9d4:	cmp	w24, w2
   2c9d8:	b.ne	2ca58 <mpfr_hypot@@Base+0x1e4>  // b.any
   2c9dc:	mov	w2, w24
   2c9e0:	mov	x1, x23
   2c9e4:	mov	x0, x28
   2c9e8:	mov	w3, #0x1                   	// #1
   2c9ec:	mrs	x19, tpidr_el0
   2c9f0:	bl	c730 <mpfr_set4@plt>
   2c9f4:	cbnz	w0, 2ca30 <mpfr_hypot@@Base+0x1bc>
   2c9f8:	mov	x0, x28
   2c9fc:	bl	c700 <mpfr_nexttoinf@plt>
   2ca00:	ldr	x1, [x28, #16]
   2ca04:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2ca08:	cmp	x1, x0
   2ca0c:	b.ne	2ca30 <mpfr_hypot@@Base+0x1bc>  // b.any
   2ca10:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2ca14:	ldr	x1, [x0, #2592]
   2ca18:	add	x0, x0, #0xa20
   2ca1c:	blr	x1
   2ca20:	add	x0, x19, x0
   2ca24:	ldr	w1, [x0]
   2ca28:	orr	w1, w1, #0x2
   2ca2c:	str	w1, [x0]
   2ca30:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2ca34:	ldr	x1, [x0, #2592]
   2ca38:	add	x0, x0, #0xa20
   2ca3c:	blr	x1
   2ca40:	add	x0, x19, x0
   2ca44:	mov	w22, #0x1                   	// #1
   2ca48:	ldr	w1, [x0]
   2ca4c:	orr	w1, w1, #0x8
   2ca50:	str	w1, [x0]
   2ca54:	b	2c92c <mpfr_hypot@@Base+0xb8>
   2ca58:	cmp	x4, x26
   2ca5c:	b.gt	2caa0 <mpfr_hypot@@Base+0x22c>
   2ca60:	mov	x1, x23
   2ca64:	mov	w2, w24
   2ca68:	mov	x0, x28
   2ca6c:	mov	w3, #0x1                   	// #1
   2ca70:	bl	c730 <mpfr_set4@plt>
   2ca74:	mov	w22, #0xffffffff            	// #-1
   2ca78:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2ca7c:	ldr	x1, [x0, #2592]
   2ca80:	add	x0, x0, #0xa20
   2ca84:	blr	x1
   2ca88:	mrs	x1, tpidr_el0
   2ca8c:	add	x0, x1, x0
   2ca90:	ldr	w1, [x0]
   2ca94:	orr	w1, w1, #0x8
   2ca98:	str	w1, [x0]
   2ca9c:	b	2c92c <mpfr_hypot@@Base+0xb8>
   2caa0:	mov	w0, #0x1                   	// #1
   2caa4:	sub	x4, x4, #0x1
   2caa8:	ldr	x10, [x23, #24]
   2caac:	str	w0, [x28, #8]
   2cab0:	sub	x0, x26, #0x1
   2cab4:	asr	x4, x4, #6
   2cab8:	str	x22, [x28, #16]
   2cabc:	neg	w9, w26
   2cac0:	asr	x0, x0, #6
   2cac4:	ands	w9, w9, #0x3f
   2cac8:	sub	x4, x4, x0
   2cacc:	add	x2, x0, #0x1
   2cad0:	ldr	x7, [x28, #24]
   2cad4:	lsl	x12, x4, #3
   2cad8:	add	x1, x10, x4, lsl #3
   2cadc:	b.eq	2cb9c <mpfr_hypot@@Base+0x328>  // b.none
   2cae0:	ldr	x0, [x10, x12]
   2cae4:	sub	w9, w9, #0x1
   2cae8:	mov	x3, #0x1                   	// #1
   2caec:	cmp	w24, #0x0
   2caf0:	lsl	x3, x3, x9
   2caf4:	and	x8, x0, x3
   2caf8:	sub	x3, x3, #0x1
   2cafc:	ccmp	x8, #0x0, #0x4, ne  // ne = any
   2cb00:	and	x0, x3, x0
   2cb04:	b.ne	2cb28 <mpfr_hypot@@Base+0x2b4>  // b.any
   2cb08:	mov	x11, #0xfffffffffffffff8    	// #-8
   2cb0c:	madd	x11, x4, x11, x1
   2cb10:	cmp	x4, #0x0
   2cb14:	sub	x4, x4, #0x1
   2cb18:	cset	w3, ne  // ne = any
   2cb1c:	cmp	x0, #0x0
   2cb20:	csel	w3, w3, wzr, eq  // eq = none
   2cb24:	cbnz	w3, 2cb94 <mpfr_hypot@@Base+0x320>
   2cb28:	mov	x19, #0x2                   	// #2
   2cb2c:	lsl	x19, x19, x9
   2cb30:	cmp	w24, #0x5
   2cb34:	b.eq	2cb40 <mpfr_hypot@@Base+0x2cc>  // b.none
   2cb38:	cbnz	w24, 2cfe4 <mpfr_hypot@@Base+0x770>
   2cb3c:	cbnz	x8, 2cff8 <mpfr_hypot@@Base+0x784>
   2cb40:	cmp	x7, x1
   2cb44:	b.eq	2cb58 <mpfr_hypot@@Base+0x2e4>  // b.none
   2cb48:	mov	x0, x7
   2cb4c:	lsl	x2, x2, #3
   2cb50:	bl	ba90 <memcpy@plt>
   2cb54:	mov	x7, x0
   2cb58:	ldr	x0, [x7]
   2cb5c:	neg	x19, x19
   2cb60:	mov	w22, #0xffffffff            	// #-1
   2cb64:	and	x19, x0, x19
   2cb68:	str	x19, [x7]
   2cb6c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2cb70:	ldr	x1, [x0, #2592]
   2cb74:	add	x0, x0, #0xa20
   2cb78:	blr	x1
   2cb7c:	mrs	x1, tpidr_el0
   2cb80:	add	x0, x1, x0
   2cb84:	ldr	w1, [x0]
   2cb88:	orr	w1, w1, #0x8
   2cb8c:	str	w1, [x0]
   2cb90:	b	2c92c <mpfr_hypot@@Base+0xb8>
   2cb94:	ldr	x0, [x11, x4, lsl #3]
   2cb98:	b	2cb10 <mpfr_hypot@@Base+0x29c>
   2cb9c:	ldur	x3, [x1, #-8]
   2cba0:	cmp	w24, #0x0
   2cba4:	and	x8, x3, #0x8000000000000000
   2cba8:	and	x0, x3, #0x7fffffffffffffff
   2cbac:	ccmp	x3, #0x0, #0x0, ne  // ne = any
   2cbb0:	b.lt	2cfd8 <mpfr_hypot@@Base+0x764>  // b.tstop
   2cbb4:	mov	x9, #0xfffffffffffffff8    	// #-8
   2cbb8:	sub	x3, x4, #0x1
   2cbbc:	madd	x4, x4, x9, x1
   2cbc0:	cmp	x3, #0x0
   2cbc4:	sub	x3, x3, #0x1
   2cbc8:	cset	w9, ne  // ne = any
   2cbcc:	cmp	x0, #0x0
   2cbd0:	csel	w9, w9, wzr, eq  // eq = none
   2cbd4:	cbnz	w9, 2cbe0 <mpfr_hypot@@Base+0x36c>
   2cbd8:	mov	x19, #0x1                   	// #1
   2cbdc:	b	2cb30 <mpfr_hypot@@Base+0x2bc>
   2cbe0:	ldr	x0, [x4, x3, lsl #3]
   2cbe4:	b	2cbc0 <mpfr_hypot@@Base+0x34c>
   2cbe8:	ldr	x3, [x1, x0, lsl #3]
   2cbec:	add	x3, x3, #0x1
   2cbf0:	str	x3, [x7, x0, lsl #3]
   2cbf4:	add	x0, x0, #0x1
   2cbf8:	cbz	x3, 2cc38 <mpfr_hypot@@Base+0x3c4>
   2cbfc:	cmp	x7, x1
   2cc00:	b.ne	2cc28 <mpfr_hypot@@Base+0x3b4>  // b.any
   2cc04:	ldr	x0, [x7]
   2cc08:	neg	x19, x19
   2cc0c:	mov	w22, #0x1                   	// #1
   2cc10:	and	x19, x0, x19
   2cc14:	str	x19, [x7]
   2cc18:	b	2cb6c <mpfr_hypot@@Base+0x2f8>
   2cc1c:	ldr	x3, [x1, x0, lsl #3]
   2cc20:	str	x3, [x7, x0, lsl #3]
   2cc24:	add	x0, x0, #0x1
   2cc28:	cmp	x2, x0
   2cc2c:	b.gt	2cc1c <mpfr_hypot@@Base+0x3a8>
   2cc30:	b	2cc04 <mpfr_hypot@@Base+0x390>
   2cc34:	mov	x0, #0x1                   	// #1
   2cc38:	cmp	x2, x0
   2cc3c:	b.gt	2cbe8 <mpfr_hypot@@Base+0x374>
   2cc40:	add	x2, x7, x2, lsl #3
   2cc44:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   2cc48:	stur	x0, [x2, #-8]
   2cc4c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2cc50:	ldr	x2, [x0, #2560]
   2cc54:	add	x0, x0, #0xa00
   2cc58:	blr	x2
   2cc5c:	mrs	x2, tpidr_el0
   2cc60:	ldr	x1, [x28, #16]
   2cc64:	ldr	x0, [x2, x0]
   2cc68:	add	x1, x1, #0x1
   2cc6c:	str	x1, [x28, #16]
   2cc70:	cmp	x1, x0
   2cc74:	b.le	2cc04 <mpfr_hypot@@Base+0x390>
   2cc78:	mov	w1, w24
   2cc7c:	mov	x0, x28
   2cc80:	mov	w2, #0x1                   	// #1
   2cc84:	bl	bfc0 <mpfr_overflow@plt>
   2cc88:	b	2c96c <mpfr_hypot@@Base+0xf8>
   2cc8c:	ldr	x3, [x1, x0, lsl #3]
   2cc90:	str	x3, [x7, x0, lsl #3]
   2cc94:	add	x0, x0, #0x1
   2cc98:	cmp	x2, x0
   2cc9c:	b.gt	2cc8c <mpfr_hypot@@Base+0x418>
   2cca0:	b	2cc04 <mpfr_hypot@@Base+0x390>
   2cca4:	ldr	x0, [x25]
   2cca8:	cmp	x0, x4
   2ccac:	csel	x0, x0, x4, ge  // ge = tcont
   2ccb0:	str	x0, [sp, #128]
   2ccb4:	cmp	x26, #0x1
   2ccb8:	b.eq	2ce84 <mpfr_hypot@@Base+0x610>  // b.none
   2ccbc:	b.gt	2ccd8 <mpfr_hypot@@Base+0x464>
   2ccc0:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   2ccc4:	add	x2, x2, #0xf32
   2ccc8:	mov	w1, #0x8c                  	// #140
   2cccc:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2ccd0:	add	x0, x0, #0x7ab
   2ccd4:	bl	cbd0 <mpfr_assert_fail@plt>
   2ccd8:	sub	x7, x26, #0x1
   2ccdc:	clz	x0, x7
   2cce0:	mov	w7, #0x40                  	// #64
   2cce4:	sub	w7, w7, w0
   2cce8:	sxtw	x7, w7
   2ccec:	add	x7, x7, x26
   2ccf0:	add	x20, sp, #0xa0
   2ccf4:	add	x27, x7, #0x4
   2ccf8:	mov	x0, x20
   2ccfc:	mov	x1, x27
   2cd00:	add	x19, sp, #0xc0
   2cd04:	bl	cb10 <mpfr_init2@plt>
   2cd08:	add	x21, sp, #0xe0
   2cd0c:	mov	x1, x27
   2cd10:	mov	x0, x19
   2cd14:	bl	cb10 <mpfr_init2@plt>
   2cd18:	mov	x1, x27
   2cd1c:	mov	x0, x21
   2cd20:	bl	cb10 <mpfr_init2@plt>
   2cd24:	mrs	x5, tpidr_el0
   2cd28:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2cd2c:	ldr	x1, [x0, #2592]
   2cd30:	add	x0, x0, #0xa20
   2cd34:	blr	x1
   2cd38:	ldr	w0, [x5, x0]
   2cd3c:	str	w0, [sp, #144]
   2cd40:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2cd44:	ldr	x1, [x0, #2528]
   2cd48:	add	x0, x0, #0x9e0
   2cd4c:	blr	x1
   2cd50:	add	x1, x5, x0
   2cd54:	ldr	x0, [x5, x0]
   2cd58:	str	x0, [sp, #112]
   2cd5c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2cd60:	ldr	x2, [x0, #2560]
   2cd64:	add	x0, x0, #0xa00
   2cd68:	blr	x2
   2cd6c:	ldr	x2, [x5, x0]
   2cd70:	str	x2, [sp, #120]
   2cd74:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   2cd78:	str	x2, [x1]
   2cd7c:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   2cd80:	str	x1, [x5, x0]
   2cd84:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   2cd88:	sub	x22, x0, x22
   2cd8c:	mov	x0, #0x40                  	// #64
   2cd90:	str	x0, [sp, #104]
   2cd94:	mov	x2, x22
   2cd98:	mov	x1, x23
   2cd9c:	mov	w3, #0x1                   	// #1
   2cda0:	mov	x0, x19
   2cda4:	str	x5, [sp, #152]
   2cda8:	bl	bc10 <mpfr_mul_2si@plt>
   2cdac:	mov	w13, w0
   2cdb0:	mov	w3, #0x1                   	// #1
   2cdb4:	mov	x2, x22
   2cdb8:	mov	x1, x25
   2cdbc:	mov	x0, x21
   2cdc0:	str	w13, [sp, #136]
   2cdc4:	bl	bc10 <mpfr_mul_2si@plt>
   2cdc8:	ldr	w13, [sp, #136]
   2cdcc:	mov	x1, x19
   2cdd0:	mov	w2, #0x1                   	// #1
   2cdd4:	orr	w13, w13, w0
   2cdd8:	mov	x0, x19
   2cddc:	str	w13, [sp, #148]
   2cde0:	bl	c490 <mpfr_sqr@plt>
   2cde4:	mov	w12, w0
   2cde8:	mov	x3, x19
   2cdec:	mov	x2, x21
   2cdf0:	mov	x1, x21
   2cdf4:	mov	w4, #0x1                   	// #1
   2cdf8:	mov	x0, x20
   2cdfc:	str	w12, [sp, #136]
   2ce00:	bl	c2e0 <mpfr_fma@plt>
   2ce04:	ldr	w12, [sp, #136]
   2ce08:	mov	x1, x20
   2ce0c:	ldr	w13, [sp, #148]
   2ce10:	mov	w2, #0x1                   	// #1
   2ce14:	orr	w12, w12, w0
   2ce18:	mov	x0, x20
   2ce1c:	orr	w12, w12, w13
   2ce20:	str	w12, [sp, #136]
   2ce24:	bl	c9c0 <mpfr_sqrt@plt>
   2ce28:	ldr	w12, [sp, #136]
   2ce2c:	mov	x1, #0x2                   	// #2
   2ce30:	ldr	x5, [sp, #152]
   2ce34:	orr	w12, w0, w12
   2ce38:	ldr	x0, [sp, #128]
   2ce3c:	cmp	x27, x0
   2ce40:	mov	x0, #0x4                   	// #4
   2ce44:	csel	x2, x0, x1, lt  // lt = tstop
   2ce48:	cbz	w12, 2cebc <mpfr_hypot@@Base+0x648>
   2ce4c:	ldr	x0, [sp, #176]
   2ce50:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   2ce54:	cmp	x0, x1
   2ce58:	b.gt	2ce8c <mpfr_hypot@@Base+0x618>
   2ce5c:	ldr	x1, [sp, #104]
   2ce60:	mov	x0, #0xfffffffffffffeff    	// #-257
   2ce64:	movk	x0, #0x7fff, lsl #48
   2ce68:	sub	x0, x0, x27
   2ce6c:	cmp	x0, x1
   2ce70:	b.ge	2cf84 <mpfr_hypot@@Base+0x710>  // b.tcont
   2ce74:	adrp	x2, 54000 <mpfr_free_pool@@Base+0x2eec>
   2ce78:	mov	w1, #0xbd                  	// #189
   2ce7c:	add	x2, x2, #0xa35
   2ce80:	b	2cccc <mpfr_hypot@@Base+0x458>
   2ce84:	mov	x7, #0x0                   	// #0
   2ce88:	b	2ccec <mpfr_hypot@@Base+0x478>
   2ce8c:	ldr	x1, [sp, #160]
   2ce90:	cmp	w24, #0x0
   2ce94:	ldr	x0, [sp, #184]
   2ce98:	sub	x1, x1, #0x1
   2ce9c:	cinc	x3, x26, eq  // eq = none
   2cea0:	sub	x2, x27, x2
   2cea4:	asr	x1, x1, #6
   2cea8:	str	x5, [sp, #136]
   2ceac:	add	x1, x1, #0x1
   2ceb0:	bl	c400 <mpfr_round_p@plt>
   2ceb4:	ldr	x5, [sp, #136]
   2ceb8:	cbz	w0, 2ce5c <mpfr_hypot@@Base+0x5e8>
   2cebc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2cec0:	ldr	x1, [x0, #2592]
   2cec4:	add	x0, x0, #0xa20
   2cec8:	blr	x1
   2cecc:	mov	x2, x22
   2ced0:	add	x23, x5, x0
   2ced4:	mov	x1, x20
   2ced8:	mov	w3, w24
   2cedc:	str	wzr, [x5, x0]
   2cee0:	mov	x0, x28
   2cee4:	str	x5, [sp, #104]
   2cee8:	bl	c4b0 <mpfr_div_2si@plt>
   2ceec:	ldr	w27, [x23]
   2cef0:	mov	w22, w0
   2cef4:	mov	x0, x20
   2cef8:	bl	c0f0 <mpfr_clear@plt>
   2cefc:	mov	x0, x21
   2cf00:	bl	c0f0 <mpfr_clear@plt>
   2cf04:	mov	x0, x19
   2cf08:	bl	c0f0 <mpfr_clear@plt>
   2cf0c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2cf10:	ldr	x1, [x0, #2528]
   2cf14:	add	x0, x0, #0x9e0
   2cf18:	blr	x1
   2cf1c:	ldp	x5, x1, [sp, #104]
   2cf20:	str	x1, [x5, x0]
   2cf24:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2cf28:	ldr	x1, [x0, #2560]
   2cf2c:	add	x0, x0, #0xa00
   2cf30:	blr	x1
   2cf34:	ldr	x1, [sp, #120]
   2cf38:	str	x1, [x5, x0]
   2cf3c:	ldr	w0, [sp, #144]
   2cf40:	tst	x27, #0x2
   2cf44:	ldr	w1, [sp, #144]
   2cf48:	orr	w0, w0, #0x2
   2cf4c:	csel	w26, w0, w1, ne  // ne = any
   2cf50:	str	w26, [x23]
   2cf54:	ldr	x0, [x28, #16]
   2cf58:	ldr	x1, [sp, #112]
   2cf5c:	cmp	x1, x0
   2cf60:	b.gt	2cf70 <mpfr_hypot@@Base+0x6fc>
   2cf64:	ldr	x1, [sp, #120]
   2cf68:	cmp	x1, x0
   2cf6c:	b.ge	2cfc8 <mpfr_hypot@@Base+0x754>  // b.tcont
   2cf70:	mov	w2, w24
   2cf74:	mov	w1, w22
   2cf78:	mov	x0, x28
   2cf7c:	bl	cbc0 <mpfr_check_range@plt>
   2cf80:	b	2c96c <mpfr_hypot@@Base+0xf8>
   2cf84:	ldr	x0, [sp, #104]
   2cf88:	str	x5, [sp, #136]
   2cf8c:	add	x27, x27, x0
   2cf90:	mov	x0, #0x2                   	// #2
   2cf94:	mov	x1, x27
   2cf98:	sdiv	x0, x27, x0
   2cf9c:	str	x0, [sp, #104]
   2cfa0:	mov	x0, x20
   2cfa4:	bl	bf50 <mpfr_set_prec@plt>
   2cfa8:	mov	x1, x27
   2cfac:	mov	x0, x19
   2cfb0:	bl	bf50 <mpfr_set_prec@plt>
   2cfb4:	mov	x1, x27
   2cfb8:	mov	x0, x21
   2cfbc:	bl	bf50 <mpfr_set_prec@plt>
   2cfc0:	ldr	x5, [sp, #136]
   2cfc4:	b	2cd94 <mpfr_hypot@@Base+0x520>
   2cfc8:	cbz	w22, 2c92c <mpfr_hypot@@Base+0xb8>
   2cfcc:	orr	w26, w26, #0x8
   2cfd0:	str	w26, [x23]
   2cfd4:	b	2c92c <mpfr_hypot@@Base+0xb8>
   2cfd8:	cmp	w24, #0x5
   2cfdc:	mov	x19, #0x1                   	// #1
   2cfe0:	b.eq	2cb40 <mpfr_hypot@@Base+0x2cc>  // b.none
   2cfe4:	and	w3, w24, #0xfffffffd
   2cfe8:	cmp	w3, #0x1
   2cfec:	b.eq	2cb40 <mpfr_hypot@@Base+0x2cc>  // b.none
   2cff0:	orr	x0, x0, x8
   2cff4:	cbz	x0, 2cb40 <mpfr_hypot@@Base+0x2cc>
   2cff8:	ldr	x0, [x10, x12]
   2cffc:	adds	x0, x19, x0
   2d000:	str	x0, [x7]
   2d004:	b.cs	2cc34 <mpfr_hypot@@Base+0x3c0>  // b.hs, b.nlast
   2d008:	cmp	x7, x1
   2d00c:	b.eq	2cc04 <mpfr_hypot@@Base+0x390>  // b.none
   2d010:	mov	x0, #0x1                   	// #1
   2d014:	b	2cc98 <mpfr_hypot@@Base+0x424>

000000000002d018 <mpfr_log1p@@Base>:
   2d018:	stp	x29, x30, [sp, #-240]!
   2d01c:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   2d020:	mov	x29, sp
   2d024:	stp	x23, x24, [sp, #48]
   2d028:	mov	w24, w2
   2d02c:	ldr	x2, [x1, #16]
   2d030:	stp	x19, x20, [sp, #16]
   2d034:	mov	x20, x0
   2d038:	stp	x21, x22, [sp, #32]
   2d03c:	cmp	x2, x3
   2d040:	mov	x22, x1
   2d044:	stp	x25, x26, [sp, #64]
   2d048:	stp	x27, x28, [sp, #80]
   2d04c:	b.gt	2d0e0 <mpfr_log1p@@Base+0xc8>
   2d050:	mov	x0, #0x2                   	// #2
   2d054:	movk	x0, #0x8000, lsl #48
   2d058:	cmp	x2, x0
   2d05c:	b.ne	2d0ac <mpfr_log1p@@Base+0x94>  // b.any
   2d060:	str	x0, [x20, #16]
   2d064:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2d068:	ldr	x1, [x0, #2592]
   2d06c:	add	x0, x0, #0xa20
   2d070:	blr	x1
   2d074:	mrs	x1, tpidr_el0
   2d078:	add	x0, x1, x0
   2d07c:	ldr	w1, [x0]
   2d080:	orr	w1, w1, #0x4
   2d084:	str	w1, [x0]
   2d088:	mov	w19, #0x0                   	// #0
   2d08c:	mov	w0, w19
   2d090:	ldp	x19, x20, [sp, #16]
   2d094:	ldp	x21, x22, [sp, #32]
   2d098:	ldp	x23, x24, [sp, #48]
   2d09c:	ldp	x25, x26, [sp, #64]
   2d0a0:	ldp	x27, x28, [sp, #80]
   2d0a4:	ldp	x29, x30, [sp], #240
   2d0a8:	ret
   2d0ac:	ldr	w1, [x1, #8]
   2d0b0:	cmp	x2, x3
   2d0b4:	b.ne	2d0d0 <mpfr_log1p@@Base+0xb8>  // b.any
   2d0b8:	cmp	w1, #0x0
   2d0bc:	b.le	2d060 <mpfr_log1p@@Base+0x48>
   2d0c0:	mov	w0, #0x1                   	// #1
   2d0c4:	str	w0, [x20, #8]
   2d0c8:	str	x2, [x20, #16]
   2d0cc:	b	2d088 <mpfr_log1p@@Base+0x70>
   2d0d0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2d0d4:	str	w1, [x20, #8]
   2d0d8:	str	x0, [x20, #16]
   2d0dc:	b	2d088 <mpfr_log1p@@Base+0x70>
   2d0e0:	tbnz	x2, #63, 2d13c <mpfr_log1p@@Base+0x124>
   2d0e4:	mov	x0, x22
   2d0e8:	mov	x2, #0x0                   	// #0
   2d0ec:	mov	x1, #0xffffffffffffffff    	// #-1
   2d0f0:	mrs	x23, tpidr_el0
   2d0f4:	bl	c460 <mpfr_cmp_si_2exp@plt>
   2d0f8:	mov	w19, w0
   2d0fc:	cmp	w0, #0x0
   2d100:	b.gt	2d1b0 <mpfr_log1p@@Base+0x198>
   2d104:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2d108:	ldr	x1, [x0, #2592]
   2d10c:	add	x0, x0, #0xa20
   2d110:	blr	x1
   2d114:	add	x1, x23, x0
   2d118:	ldr	w0, [x23, x0]
   2d11c:	cbnz	w19, 2d198 <mpfr_log1p@@Base+0x180>
   2d120:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   2d124:	orr	w0, w0, #0x20
   2d128:	str	x2, [x20, #16]
   2d12c:	mov	w2, #0xffffffff            	// #-1
   2d130:	str	w2, [x20, #8]
   2d134:	str	w0, [x1]
   2d138:	b	2d08c <mpfr_log1p@@Base+0x74>
   2d13c:	ldr	w3, [x1, #8]
   2d140:	cmp	w3, #0x0
   2d144:	b.le	2d178 <mpfr_log1p@@Base+0x160>
   2d148:	mvn	x2, x2
   2d14c:	cbz	x2, 2d0e4 <mpfr_log1p@@Base+0xcc>
   2d150:	ldr	x3, [x0]
   2d154:	add	x3, x3, #0x1
   2d158:	cmp	x2, x3
   2d15c:	b.ls	2d0e4 <mpfr_log1p@@Base+0xcc>  // b.plast
   2d160:	mov	w4, w24
   2d164:	mov	w3, #0x0                   	// #0
   2d168:	bl	c5d0 <mpfr_round_near_x@plt>
   2d16c:	mov	w19, w0
   2d170:	cbz	w0, 2d0e4 <mpfr_log1p@@Base+0xcc>
   2d174:	b	2d08c <mpfr_log1p@@Base+0x74>
   2d178:	ldr	x3, [x0]
   2d17c:	neg	x2, x2
   2d180:	add	x3, x3, #0x1
   2d184:	cmp	x2, x3
   2d188:	b.ls	2d0e4 <mpfr_log1p@@Base+0xcc>  // b.plast
   2d18c:	mov	w4, w24
   2d190:	mov	w3, #0x1                   	// #1
   2d194:	b	2d168 <mpfr_log1p@@Base+0x150>
   2d198:	mov	x2, #0x2                   	// #2
   2d19c:	orr	w0, w0, #0x4
   2d1a0:	movk	x2, #0x8000, lsl #48
   2d1a4:	str	w0, [x1]
   2d1a8:	str	x2, [x20, #16]
   2d1ac:	b	2d088 <mpfr_log1p@@Base+0x70>
   2d1b0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2d1b4:	ldr	x1, [x0, #2592]
   2d1b8:	add	x0, x0, #0xa20
   2d1bc:	blr	x1
   2d1c0:	ldr	w0, [x23, x0]
   2d1c4:	str	w0, [sp, #124]
   2d1c8:	ldr	x27, [x20]
   2d1cc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2d1d0:	ldr	x1, [x0, #2528]
   2d1d4:	add	x0, x0, #0x9e0
   2d1d8:	blr	x1
   2d1dc:	add	x1, x23, x0
   2d1e0:	ldr	x0, [x23, x0]
   2d1e4:	str	x0, [sp, #128]
   2d1e8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2d1ec:	ldr	x2, [x0, #2560]
   2d1f0:	add	x0, x0, #0xa00
   2d1f4:	blr	x2
   2d1f8:	ldr	x2, [x23, x0]
   2d1fc:	str	x2, [sp, #136]
   2d200:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   2d204:	str	x2, [x1]
   2d208:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   2d20c:	str	x1, [x23, x0]
   2d210:	cmp	x27, #0x1
   2d214:	b.eq	2d34c <mpfr_log1p@@Base+0x334>  // b.none
   2d218:	b.gt	2d234 <mpfr_log1p@@Base+0x21c>
   2d21c:	adrp	x2, 54000 <mpfr_free_pool@@Base+0x2eec>
   2d220:	add	x2, x2, #0xa2c
   2d224:	mov	w1, #0xb9                  	// #185
   2d228:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2d22c:	add	x0, x0, #0x7b3
   2d230:	bl	cbd0 <mpfr_assert_fail@plt>
   2d234:	sub	x19, x27, #0x1
   2d238:	clz	x0, x19
   2d23c:	mov	w19, #0x40                  	// #64
   2d240:	sub	w19, w19, w0
   2d244:	sxtw	x19, w19
   2d248:	ldr	x0, [x22, #16]
   2d24c:	add	x19, x19, x27
   2d250:	add	x19, x19, #0x6
   2d254:	tbz	x0, #63, 2d25c <mpfr_log1p@@Base+0x244>
   2d258:	sub	x19, x19, x0
   2d25c:	add	x21, sp, #0x90
   2d260:	mov	x1, x19
   2d264:	mov	x0, x21
   2d268:	add	x25, sp, #0xb0
   2d26c:	bl	cb10 <mpfr_init2@plt>
   2d270:	add	x28, sp, #0xd0
   2d274:	mov	x0, #0x40                  	// #64
   2d278:	str	x0, [sp, #112]
   2d27c:	mov	x0, x27
   2d280:	bl	bcf0 <__gmpfr_int_ceil_log2@plt>
   2d284:	add	w0, w0, #0x1
   2d288:	ldr	x1, [x22, #16]
   2d28c:	sxtw	x0, w0
   2d290:	sdiv	x0, x27, x0
   2d294:	neg	x0, x0
   2d298:	cmp	x1, x0
   2d29c:	b.gt	2d3d4 <mpfr_log1p@@Base+0x3bc>
   2d2a0:	ldr	x0, [sp, #144]
   2d2a4:	str	x0, [sp, #104]
   2d2a8:	mov	x26, #0x2                   	// #2
   2d2ac:	mov	x1, x0
   2d2b0:	mov	x0, x25
   2d2b4:	bl	cb10 <mpfr_init2@plt>
   2d2b8:	ldr	x1, [sp, #104]
   2d2bc:	mov	x0, x28
   2d2c0:	bl	cb10 <mpfr_init2@plt>
   2d2c4:	ldr	w3, [x22, #8]
   2d2c8:	mov	x1, x22
   2d2cc:	mov	w2, #0x5                   	// #5
   2d2d0:	mov	x0, x25
   2d2d4:	bl	c730 <mpfr_set4@plt>
   2d2d8:	ldr	w3, [sp, #184]
   2d2dc:	mov	x1, x25
   2d2e0:	mov	x0, x21
   2d2e4:	mov	w2, #0x5                   	// #5
   2d2e8:	bl	c730 <mpfr_set4@plt>
   2d2ec:	mov	x2, x22
   2d2f0:	mov	x1, x25
   2d2f4:	mov	w3, #0x5                   	// #5
   2d2f8:	mov	x0, x25
   2d2fc:	bl	bdd0 <mpfr_mul@plt>
   2d300:	mov	x1, x25
   2d304:	mov	x2, x26
   2d308:	mov	x0, x28
   2d30c:	mov	w3, #0x5                   	// #5
   2d310:	bl	cd00 <mpfr_div_ui@plt>
   2d314:	ldr	x1, [sp, #104]
   2d318:	ldr	x0, [sp, #160]
   2d31c:	sub	x0, x0, x1
   2d320:	ldr	x1, [sp, #224]
   2d324:	cmp	x1, x0
   2d328:	b.le	2d35c <mpfr_log1p@@Base+0x344>
   2d32c:	mov	x2, x28
   2d330:	mov	x1, x21
   2d334:	mov	x0, x21
   2d338:	mov	w3, #0x5                   	// #5
   2d33c:	tbz	w26, #0, 2d354 <mpfr_log1p@@Base+0x33c>
   2d340:	bl	c230 <mpfr_add@plt>
   2d344:	add	x26, x26, #0x1
   2d348:	b	2d2ec <mpfr_log1p@@Base+0x2d4>
   2d34c:	mov	x19, #0x0                   	// #0
   2d350:	b	2d248 <mpfr_log1p@@Base+0x230>
   2d354:	bl	bbf0 <mpfr_sub@plt>
   2d358:	b	2d344 <mpfr_log1p@@Base+0x32c>
   2d35c:	add	x0, x26, #0x4
   2d360:	lsl	x0, x0, #1
   2d364:	bl	bcf0 <__gmpfr_int_ceil_log2@plt>
   2d368:	ldr	x1, [sp, #104]
   2d36c:	sxtw	x26, w0
   2d370:	cmp	x1, w0, sxtw
   2d374:	b.gt	2d388 <mpfr_log1p@@Base+0x370>
   2d378:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2d37c:	mov	w1, #0x56                  	// #86
   2d380:	add	x2, x2, #0x7bb
   2d384:	b	2d228 <mpfr_log1p@@Base+0x210>
   2d388:	mov	x0, x25
   2d38c:	bl	c0f0 <mpfr_clear@plt>
   2d390:	mov	x0, x28
   2d394:	bl	c0f0 <mpfr_clear@plt>
   2d398:	sub	x2, x19, x26
   2d39c:	ldr	x1, [sp, #160]
   2d3a0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2d3a4:	cmp	x1, x0
   2d3a8:	b.gt	2d4a8 <mpfr_log1p@@Base+0x490>
   2d3ac:	ldr	x1, [sp, #112]
   2d3b0:	mov	x0, #0xfffffffffffffeff    	// #-257
   2d3b4:	movk	x0, #0x7fff, lsl #48
   2d3b8:	sub	x0, x0, x19
   2d3bc:	cmp	x0, x1
   2d3c0:	b.ge	2d4e4 <mpfr_log1p@@Base+0x4cc>  // b.tcont
   2d3c4:	adrp	x2, 54000 <mpfr_free_pool@@Base+0x2eec>
   2d3c8:	mov	w1, #0xe7                  	// #231
   2d3cc:	add	x2, x2, #0xa35
   2d3d0:	b	2d228 <mpfr_log1p@@Base+0x210>
   2d3d4:	mov	x1, x22
   2d3d8:	mov	x0, x21
   2d3dc:	mov	w3, #0x0                   	// #0
   2d3e0:	mov	x2, #0x1                   	// #1
   2d3e4:	bl	c2f0 <mpfr_add_ui@plt>
   2d3e8:	cbnz	w0, 2d480 <mpfr_log1p@@Base+0x468>
   2d3ec:	mov	w2, w24
   2d3f0:	mov	x1, x21
   2d3f4:	mov	x0, x20
   2d3f8:	bl	c110 <mpfr_log@plt>
   2d3fc:	mov	w19, w0
   2d400:	mov	x0, x21
   2d404:	bl	c0f0 <mpfr_clear@plt>
   2d408:	ldr	w2, [sp, #124]
   2d40c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2d410:	ldr	x1, [x0, #2592]
   2d414:	add	x0, x0, #0xa20
   2d418:	blr	x1
   2d41c:	add	x1, x23, x0
   2d420:	str	w2, [x23, x0]
   2d424:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2d428:	ldr	x2, [x0, #2528]
   2d42c:	add	x0, x0, #0x9e0
   2d430:	blr	x2
   2d434:	ldr	x2, [sp, #128]
   2d438:	str	x2, [x23, x0]
   2d43c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2d440:	ldr	x2, [x0, #2560]
   2d444:	add	x0, x0, #0xa00
   2d448:	blr	x2
   2d44c:	ldr	x2, [sp, #136]
   2d450:	str	x2, [x23, x0]
   2d454:	ldr	x0, [x20, #16]
   2d458:	ldr	x2, [sp, #128]
   2d45c:	cmp	x2, x0
   2d460:	b.gt	2d508 <mpfr_log1p@@Base+0x4f0>
   2d464:	ldr	x2, [sp, #136]
   2d468:	cmp	x2, x0
   2d46c:	b.lt	2d508 <mpfr_log1p@@Base+0x4f0>  // b.tstop
   2d470:	cbz	w19, 2d08c <mpfr_log1p@@Base+0x74>
   2d474:	ldr	w0, [sp, #124]
   2d478:	orr	w0, w0, #0x8
   2d47c:	b	2d134 <mpfr_log1p@@Base+0x11c>
   2d480:	mov	w2, #0x0                   	// #0
   2d484:	mov	x1, x21
   2d488:	mov	x0, x21
   2d48c:	bl	c110 <mpfr_log@plt>
   2d490:	ldr	x2, [sp, #160]
   2d494:	mov	x0, #0x2                   	// #2
   2d498:	subs	x2, x0, x2
   2d49c:	csel	x2, x2, xzr, pl  // pl = nfrst
   2d4a0:	sub	x2, x19, x2
   2d4a4:	b	2d39c <mpfr_log1p@@Base+0x384>
   2d4a8:	ldr	x1, [sp, #144]
   2d4ac:	cmp	w24, #0x0
   2d4b0:	ldr	x0, [sp, #168]
   2d4b4:	sub	x1, x1, #0x1
   2d4b8:	cinc	x3, x27, eq  // eq = none
   2d4bc:	asr	x1, x1, #6
   2d4c0:	add	x1, x1, #0x1
   2d4c4:	bl	c400 <mpfr_round_p@plt>
   2d4c8:	cbz	w0, 2d3ac <mpfr_log1p@@Base+0x394>
   2d4cc:	ldr	w3, [sp, #152]
   2d4d0:	mov	w2, w24
   2d4d4:	mov	x1, x21
   2d4d8:	mov	x0, x20
   2d4dc:	bl	c730 <mpfr_set4@plt>
   2d4e0:	b	2d3fc <mpfr_log1p@@Base+0x3e4>
   2d4e4:	ldr	x0, [sp, #112]
   2d4e8:	add	x19, x19, x0
   2d4ec:	mov	x0, #0x2                   	// #2
   2d4f0:	mov	x1, x19
   2d4f4:	sdiv	x0, x19, x0
   2d4f8:	str	x0, [sp, #112]
   2d4fc:	mov	x0, x21
   2d500:	bl	bf50 <mpfr_set_prec@plt>
   2d504:	b	2d27c <mpfr_log1p@@Base+0x264>
   2d508:	mov	w1, w19
   2d50c:	mov	w2, w24
   2d510:	mov	x0, x20
   2d514:	bl	cbc0 <mpfr_check_range@plt>
   2d518:	mov	w19, w0
   2d51c:	b	2d08c <mpfr_log1p@@Base+0x74>

000000000002d520 <mpfr_expm1@@Base>:
   2d520:	stp	x29, x30, [sp, #-160]!
   2d524:	mov	x29, sp
   2d528:	stp	x27, x28, [sp, #80]
   2d52c:	ldr	x28, [x1, #16]
   2d530:	stp	x19, x20, [sp, #16]
   2d534:	mov	x19, x0
   2d538:	stp	x21, x22, [sp, #32]
   2d53c:	mov	w21, w2
   2d540:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   2d544:	stp	x23, x24, [sp, #48]
   2d548:	cmp	x28, x2
   2d54c:	mov	x23, x1
   2d550:	stp	x25, x26, [sp, #64]
   2d554:	b.gt	2d600 <mpfr_expm1@@Base+0xe0>
   2d558:	mov	x1, #0x2                   	// #2
   2d55c:	movk	x1, #0x8000, lsl #48
   2d560:	cmp	x28, x1
   2d564:	b.ne	2d5b4 <mpfr_expm1@@Base+0x94>  // b.any
   2d568:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2d56c:	ldr	x1, [x0, #2592]
   2d570:	add	x0, x0, #0xa20
   2d574:	blr	x1
   2d578:	str	x28, [x19, #16]
   2d57c:	mrs	x1, tpidr_el0
   2d580:	add	x0, x1, x0
   2d584:	ldr	w1, [x0]
   2d588:	orr	w1, w1, #0x4
   2d58c:	str	w1, [x0]
   2d590:	mov	w27, #0x0                   	// #0
   2d594:	mov	w0, w27
   2d598:	ldp	x19, x20, [sp, #16]
   2d59c:	ldp	x21, x22, [sp, #32]
   2d5a0:	ldp	x23, x24, [sp, #48]
   2d5a4:	ldp	x25, x26, [sp, #64]
   2d5a8:	ldp	x27, x28, [sp, #80]
   2d5ac:	ldp	x29, x30, [sp], #160
   2d5b0:	ret
   2d5b4:	ldr	w1, [x23, #8]
   2d5b8:	cmp	x28, x2
   2d5bc:	b.ne	2d5f0 <mpfr_expm1@@Base+0xd0>  // b.any
   2d5c0:	cmp	w1, #0x0
   2d5c4:	b.le	2d5d8 <mpfr_expm1@@Base+0xb8>
   2d5c8:	mov	w0, #0x1                   	// #1
   2d5cc:	str	w0, [x19, #8]
   2d5d0:	str	x28, [x19, #16]
   2d5d4:	b	2d590 <mpfr_expm1@@Base+0x70>
   2d5d8:	mov	w3, w21
   2d5dc:	mov	x2, #0x0                   	// #0
   2d5e0:	mov	x1, #0xffffffffffffffff    	// #-1
   2d5e4:	bl	bb00 <mpfr_set_si_2exp@plt>
   2d5e8:	mov	w27, w0
   2d5ec:	b	2d594 <mpfr_expm1@@Base+0x74>
   2d5f0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2d5f4:	str	w1, [x19, #8]
   2d5f8:	str	x0, [x19, #16]
   2d5fc:	b	2d590 <mpfr_expm1@@Base+0x70>
   2d600:	tbnz	x28, #63, 2d76c <mpfr_expm1@@Base+0x24c>
   2d604:	mrs	x20, tpidr_el0
   2d608:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2d60c:	ldr	x1, [x0, #2592]
   2d610:	add	x0, x0, #0xa20
   2d614:	blr	x1
   2d618:	mov	x27, #0x3fffffffffffffff    	// #4611686018427387903
   2d61c:	mov	x25, #0xc000000000000001    	// #-4611686018427387903
   2d620:	add	x22, sp, #0x80
   2d624:	ldr	w24, [x20, x0]
   2d628:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2d62c:	ldr	x1, [x0, #2528]
   2d630:	add	x0, x0, #0x9e0
   2d634:	blr	x1
   2d638:	add	x1, x20, x0
   2d63c:	ldr	x26, [x20, x0]
   2d640:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2d644:	ldr	x2, [x0, #2560]
   2d648:	add	x0, x0, #0xa00
   2d64c:	blr	x2
   2d650:	ldr	x2, [x20, x0]
   2d654:	str	x27, [x20, x0]
   2d658:	ldr	w0, [x23, #8]
   2d65c:	str	x25, [x1]
   2d660:	str	x2, [sp, #96]
   2d664:	tbz	w0, #31, 2d7c8 <mpfr_expm1@@Base+0x2a8>
   2d668:	cmp	x28, #0x5
   2d66c:	b.le	2d7c8 <mpfr_expm1@@Base+0x2a8>
   2d670:	adrp	x2, 73000 <__gmpfr_l2b@@Base+0x200>
   2d674:	mov	x0, #0x40                  	// #64
   2d678:	str	x0, [sp, #128]
   2d67c:	add	x0, sp, #0x78
   2d680:	ldr	x2, [x2, #4048]
   2d684:	mov	w3, #0x2                   	// #2
   2d688:	str	x0, [sp, #152]
   2d68c:	mov	w0, #0x1                   	// #1
   2d690:	mov	x1, x23
   2d694:	str	w0, [sp, #136]
   2d698:	mov	x0, x22
   2d69c:	bl	c6b0 <mpfr_div@plt>
   2d6a0:	mov	x1, x25
   2d6a4:	mov	x0, x22
   2d6a8:	mov	x2, #0x0                   	// #0
   2d6ac:	bl	c460 <mpfr_cmp_si_2exp@plt>
   2d6b0:	cmp	w0, #0x0
   2d6b4:	b.le	2d7c0 <mpfr_expm1@@Base+0x2a0>
   2d6b8:	mov	x0, x22
   2d6bc:	mov	w1, #0x2                   	// #2
   2d6c0:	bl	c220 <mpfr_get_si@plt>
   2d6c4:	tbz	x0, #63, 2d7c8 <mpfr_expm1@@Base+0x2a8>
   2d6c8:	neg	x2, x0
   2d6cc:	ldr	x0, [x19]
   2d6d0:	add	x0, x0, #0x1
   2d6d4:	cmp	x2, x0
   2d6d8:	b.ls	2d7c8 <mpfr_expm1@@Base+0x2a8>  // b.plast
   2d6dc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2d6e0:	ldr	x1, [x0, #2592]
   2d6e4:	add	x0, x0, #0xa20
   2d6e8:	blr	x1
   2d6ec:	mov	w4, w21
   2d6f0:	adrp	x1, 73000 <__gmpfr_l2b@@Base+0x200>
   2d6f4:	add	x25, x20, x0
   2d6f8:	mov	w3, #0x0                   	// #0
   2d6fc:	str	wzr, [x20, x0]
   2d700:	ldr	x1, [x1, #4000]
   2d704:	mov	x0, x19
   2d708:	bl	c5d0 <mpfr_round_near_x@plt>
   2d70c:	mov	w27, w0
   2d710:	cbz	w0, 2d7c8 <mpfr_expm1@@Base+0x2a8>
   2d714:	ldr	w0, [x25]
   2d718:	orr	w24, w24, w0
   2d71c:	str	w24, [x25]
   2d720:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2d724:	ldr	x1, [x0, #2528]
   2d728:	add	x0, x0, #0x9e0
   2d72c:	blr	x1
   2d730:	str	x26, [x20, x0]
   2d734:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2d738:	ldr	x1, [x0, #2560]
   2d73c:	add	x0, x0, #0xa00
   2d740:	blr	x1
   2d744:	ldr	x1, [sp, #96]
   2d748:	str	x1, [x20, x0]
   2d74c:	ldr	x0, [x19, #16]
   2d750:	cmp	x26, x0
   2d754:	b.gt	2d8d4 <mpfr_expm1@@Base+0x3b4>
   2d758:	cmp	x1, x0
   2d75c:	b.lt	2d8d4 <mpfr_expm1@@Base+0x3b4>  // b.tstop
   2d760:	orr	w24, w24, #0x8
   2d764:	str	w24, [x25]
   2d768:	b	2d594 <mpfr_expm1@@Base+0x74>
   2d76c:	ldr	x3, [x0]
   2d770:	ldr	w2, [x1, #8]
   2d774:	add	x3, x3, #0x1
   2d778:	cmp	w2, #0x0
   2d77c:	b.le	2d7a4 <mpfr_expm1@@Base+0x284>
   2d780:	neg	x2, x28
   2d784:	cmp	x2, x3
   2d788:	b.ls	2d604 <mpfr_expm1@@Base+0xe4>  // b.plast
   2d78c:	mov	w4, w21
   2d790:	mov	w3, #0x1                   	// #1
   2d794:	bl	c5d0 <mpfr_round_near_x@plt>
   2d798:	mov	w27, w0
   2d79c:	cbz	w0, 2d604 <mpfr_expm1@@Base+0xe4>
   2d7a0:	b	2d594 <mpfr_expm1@@Base+0x74>
   2d7a4:	mov	x2, #0x1                   	// #1
   2d7a8:	sub	x2, x2, x28
   2d7ac:	cmp	x3, x2
   2d7b0:	b.cs	2d604 <mpfr_expm1@@Base+0xe4>  // b.hs, b.nlast
   2d7b4:	mov	w4, w21
   2d7b8:	mov	w3, #0x0                   	// #0
   2d7bc:	b	2d794 <mpfr_expm1@@Base+0x274>
   2d7c0:	mov	x2, x27
   2d7c4:	b	2d6cc <mpfr_expm1@@Base+0x1ac>
   2d7c8:	ldr	x27, [x19]
   2d7cc:	cmp	x27, #0x1
   2d7d0:	b.eq	2d8e8 <mpfr_expm1@@Base+0x3c8>  // b.none
   2d7d4:	b.gt	2d7f0 <mpfr_expm1@@Base+0x2d0>
   2d7d8:	adrp	x2, 54000 <mpfr_free_pool@@Base+0x2eec>
   2d7dc:	add	x2, x2, #0xa2c
   2d7e0:	mov	w1, #0x72                  	// #114
   2d7e4:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2d7e8:	add	x0, x0, #0x7c1
   2d7ec:	bl	cbd0 <mpfr_assert_fail@plt>
   2d7f0:	sub	x4, x27, #0x1
   2d7f4:	clz	x0, x4
   2d7f8:	mov	w4, #0x40                  	// #64
   2d7fc:	sub	w4, w4, w0
   2d800:	sxtw	x4, w4
   2d804:	add	x4, x4, x27
   2d808:	add	x25, x4, #0x6
   2d80c:	tbz	x28, #63, 2d814 <mpfr_expm1@@Base+0x2f4>
   2d810:	sub	x25, x25, x28
   2d814:	mov	x28, #0x40                  	// #64
   2d818:	mov	x1, x25
   2d81c:	mov	x0, x22
   2d820:	bl	cb10 <mpfr_init2@plt>
   2d824:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2d828:	ldr	x1, [x0, #2592]
   2d82c:	add	x0, x0, #0xa20
   2d830:	blr	x1
   2d834:	add	x3, x20, x0
   2d838:	mov	x1, x23
   2d83c:	mov	w2, #0x0                   	// #0
   2d840:	str	wzr, [x20, x0]
   2d844:	mov	x0, x22
   2d848:	str	x3, [sp, #104]
   2d84c:	bl	c7e0 <mpfr_exp@plt>
   2d850:	ldr	x3, [sp, #104]
   2d854:	ldr	w0, [x3]
   2d858:	tbz	w0, #1, 2d8f0 <mpfr_expm1@@Base+0x3d0>
   2d85c:	mov	w1, w21
   2d860:	mov	x0, x19
   2d864:	mov	w2, #0x1                   	// #1
   2d868:	orr	w24, w24, #0x2
   2d86c:	bl	bfc0 <mpfr_overflow@plt>
   2d870:	mov	w27, w0
   2d874:	mov	x0, x22
   2d878:	bl	c0f0 <mpfr_clear@plt>
   2d87c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2d880:	ldr	x1, [x0, #2592]
   2d884:	add	x0, x0, #0xa20
   2d888:	blr	x1
   2d88c:	add	x1, x20, x0
   2d890:	str	w24, [x20, x0]
   2d894:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2d898:	ldr	x2, [x0, #2528]
   2d89c:	add	x0, x0, #0x9e0
   2d8a0:	blr	x2
   2d8a4:	str	x26, [x20, x0]
   2d8a8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2d8ac:	ldr	x2, [x0, #2560]
   2d8b0:	add	x0, x0, #0xa00
   2d8b4:	blr	x2
   2d8b8:	ldr	x2, [sp, #96]
   2d8bc:	str	x2, [x20, x0]
   2d8c0:	ldr	x0, [x19, #16]
   2d8c4:	cmp	x26, x0
   2d8c8:	b.gt	2d8d4 <mpfr_expm1@@Base+0x3b4>
   2d8cc:	cmp	x2, x0
   2d8d0:	b.ge	2d9ec <mpfr_expm1@@Base+0x4cc>  // b.tcont
   2d8d4:	mov	w2, w21
   2d8d8:	mov	w1, w27
   2d8dc:	mov	x0, x19
   2d8e0:	bl	cbc0 <mpfr_check_range@plt>
   2d8e4:	b	2d5e8 <mpfr_expm1@@Base+0xc8>
   2d8e8:	mov	x4, #0x0                   	// #0
   2d8ec:	b	2d804 <mpfr_expm1@@Base+0x2e4>
   2d8f0:	tbz	w0, #0, 2d924 <mpfr_expm1@@Base+0x404>
   2d8f4:	mov	w3, w21
   2d8f8:	mov	x0, x19
   2d8fc:	mov	x2, #0x0                   	// #0
   2d900:	mov	x1, #0xffffffffffffffff    	// #-1
   2d904:	bl	bb00 <mpfr_set_si_2exp@plt>
   2d908:	sub	w0, w21, #0x1
   2d90c:	cmp	w0, #0x1
   2d910:	b.hi	2d9e4 <mpfr_expm1@@Base+0x4c4>  // b.pmore
   2d914:	mov	x0, x19
   2d918:	mov	w27, #0x1                   	// #1
   2d91c:	bl	c4f0 <mpfr_nexttozero@plt>
   2d920:	b	2d874 <mpfr_expm1@@Base+0x354>
   2d924:	ldr	x5, [sp, #144]
   2d928:	mov	x1, x22
   2d92c:	mov	x2, #0x1                   	// #1
   2d930:	mov	x0, x22
   2d934:	mov	w3, #0x0                   	// #0
   2d938:	str	x5, [sp, #104]
   2d93c:	bl	c5c0 <mpfr_sub_ui@plt>
   2d940:	ldr	x5, [sp, #104]
   2d944:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   2d948:	ldr	x0, [sp, #144]
   2d94c:	subs	x2, x5, x0
   2d950:	csel	x2, x2, xzr, pl  // pl = nfrst
   2d954:	cmp	x0, x1
   2d958:	add	x2, x2, #0x1
   2d95c:	sub	x2, x25, x2
   2d960:	b.le	2d9a4 <mpfr_expm1@@Base+0x484>
   2d964:	ldr	x1, [sp, #128]
   2d968:	cmp	w21, #0x0
   2d96c:	ldr	x0, [sp, #152]
   2d970:	sub	x1, x1, #0x1
   2d974:	cinc	x3, x27, eq  // eq = none
   2d978:	asr	x1, x1, #6
   2d97c:	add	x1, x1, #0x1
   2d980:	bl	c400 <mpfr_round_p@plt>
   2d984:	cbz	w0, 2d9a4 <mpfr_expm1@@Base+0x484>
   2d988:	ldr	w3, [sp, #136]
   2d98c:	mov	w2, w21
   2d990:	mov	x1, x22
   2d994:	mov	x0, x19
   2d998:	bl	c730 <mpfr_set4@plt>
   2d99c:	mov	w27, w0
   2d9a0:	b	2d874 <mpfr_expm1@@Base+0x354>
   2d9a4:	mov	x0, #0xfffffffffffffeff    	// #-257
   2d9a8:	movk	x0, #0x7fff, lsl #48
   2d9ac:	sub	x0, x0, x25
   2d9b0:	cmp	x0, x28
   2d9b4:	b.ge	2d9c8 <mpfr_expm1@@Base+0x4a8>  // b.tcont
   2d9b8:	adrp	x2, 54000 <mpfr_free_pool@@Base+0x2eec>
   2d9bc:	mov	w1, #0xa5                  	// #165
   2d9c0:	add	x2, x2, #0xa35
   2d9c4:	b	2d7e4 <mpfr_expm1@@Base+0x2c4>
   2d9c8:	add	x25, x25, x28
   2d9cc:	mov	x0, #0x2                   	// #2
   2d9d0:	mov	x1, x25
   2d9d4:	sdiv	x28, x25, x0
   2d9d8:	mov	x0, x22
   2d9dc:	bl	bf50 <mpfr_set_prec@plt>
   2d9e0:	b	2d824 <mpfr_expm1@@Base+0x304>
   2d9e4:	mov	w27, #0xffffffff            	// #-1
   2d9e8:	b	2d874 <mpfr_expm1@@Base+0x354>
   2d9ec:	cbz	w27, 2d594 <mpfr_expm1@@Base+0x74>
   2d9f0:	orr	w24, w24, #0x8
   2d9f4:	str	w24, [x1]
   2d9f8:	b	2d594 <mpfr_expm1@@Base+0x74>

000000000002d9fc <mpfr_log2@@Base>:
   2d9fc:	stp	x29, x30, [sp, #-176]!
   2da00:	mov	x29, sp
   2da04:	stp	x27, x28, [sp, #80]
   2da08:	mov	x27, x0
   2da0c:	ldr	x0, [x1, #16]
   2da10:	stp	x19, x20, [sp, #16]
   2da14:	mov	x19, x1
   2da18:	stp	x21, x22, [sp, #32]
   2da1c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   2da20:	cmp	x0, x1
   2da24:	stp	x23, x24, [sp, #48]
   2da28:	stp	x25, x26, [sp, #64]
   2da2c:	b.gt	2dae4 <mpfr_log2@@Base+0xe8>
   2da30:	mov	x2, #0x2                   	// #2
   2da34:	movk	x2, #0x8000, lsl #48
   2da38:	cmp	x0, x2
   2da3c:	b.ne	2da74 <mpfr_log2@@Base+0x78>  // b.any
   2da40:	mov	x0, #0x2                   	// #2
   2da44:	movk	x0, #0x8000, lsl #48
   2da48:	str	x0, [x27, #16]
   2da4c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2da50:	ldr	x1, [x0, #2592]
   2da54:	add	x0, x0, #0xa20
   2da58:	blr	x1
   2da5c:	mrs	x1, tpidr_el0
   2da60:	add	x0, x1, x0
   2da64:	ldr	w1, [x0]
   2da68:	orr	w1, w1, #0x4
   2da6c:	str	w1, [x0]
   2da70:	b	2da90 <mpfr_log2@@Base+0x94>
   2da74:	cmp	x0, x1
   2da78:	b.ne	2dab4 <mpfr_log2@@Base+0xb8>  // b.any
   2da7c:	ldr	w1, [x19, #8]
   2da80:	tbnz	w1, #31, 2da40 <mpfr_log2@@Base+0x44>
   2da84:	str	x0, [x27, #16]
   2da88:	mov	w0, #0x1                   	// #1
   2da8c:	str	w0, [x27, #8]
   2da90:	mov	w23, #0x0                   	// #0
   2da94:	mov	w0, w23
   2da98:	ldp	x19, x20, [sp, #16]
   2da9c:	ldp	x21, x22, [sp, #32]
   2daa0:	ldp	x23, x24, [sp, #48]
   2daa4:	ldp	x25, x26, [sp, #64]
   2daa8:	ldp	x27, x28, [sp, #80]
   2daac:	ldp	x29, x30, [sp], #176
   2dab0:	ret
   2dab4:	mov	w0, #0xffffffff            	// #-1
   2dab8:	str	w0, [x27, #8]
   2dabc:	str	x1, [x27, #16]
   2dac0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2dac4:	ldr	x1, [x0, #2592]
   2dac8:	add	x0, x0, #0xa20
   2dacc:	blr	x1
   2dad0:	mrs	x1, tpidr_el0
   2dad4:	add	x0, x1, x0
   2dad8:	ldr	w1, [x0]
   2dadc:	orr	w1, w1, #0x20
   2dae0:	b	2da6c <mpfr_log2@@Base+0x70>
   2dae4:	ldr	w0, [x19, #8]
   2dae8:	tbnz	w0, #31, 2da40 <mpfr_log2@@Base+0x44>
   2daec:	mov	w20, w2
   2daf0:	mov	x0, x19
   2daf4:	mov	x2, #0x0                   	// #0
   2daf8:	mov	x1, #0x1                   	// #1
   2dafc:	bl	bfd0 <mpfr_cmp_ui_2exp@plt>
   2db00:	mov	w23, w0
   2db04:	cbnz	w0, 2db1c <mpfr_log2@@Base+0x120>
   2db08:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2db0c:	str	x0, [x27, #16]
   2db10:	mov	w0, #0x1                   	// #1
   2db14:	str	w0, [x27, #8]
   2db18:	b	2da94 <mpfr_log2@@Base+0x98>
   2db1c:	ldr	x2, [x19, #16]
   2db20:	mov	x0, x19
   2db24:	mov	x1, #0x1                   	// #1
   2db28:	sub	x2, x2, #0x1
   2db2c:	bl	bfd0 <mpfr_cmp_ui_2exp@plt>
   2db30:	cbnz	w0, 2db54 <mpfr_log2@@Base+0x158>
   2db34:	ldr	x1, [x19, #16]
   2db38:	mov	w3, w20
   2db3c:	mov	x0, x27
   2db40:	mov	x2, #0x0                   	// #0
   2db44:	sub	x1, x1, #0x1
   2db48:	bl	bb00 <mpfr_set_si_2exp@plt>
   2db4c:	mov	w23, w0
   2db50:	b	2da94 <mpfr_log2@@Base+0x98>
   2db54:	mrs	x28, tpidr_el0
   2db58:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2db5c:	ldr	x1, [x0, #2592]
   2db60:	add	x0, x0, #0xa20
   2db64:	blr	x1
   2db68:	ldr	x23, [x27]
   2db6c:	ldr	w22, [x28, x0]
   2db70:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2db74:	ldr	x1, [x0, #2528]
   2db78:	add	x0, x0, #0x9e0
   2db7c:	blr	x1
   2db80:	add	x1, x28, x0
   2db84:	add	x5, x23, #0x3
   2db88:	ldr	x0, [x28, x0]
   2db8c:	str	x0, [sp, #96]
   2db90:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2db94:	ldr	x2, [x0, #2560]
   2db98:	add	x0, x0, #0xa00
   2db9c:	blr	x2
   2dba0:	ldr	x2, [x28, x0]
   2dba4:	str	x2, [sp, #104]
   2dba8:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   2dbac:	str	x2, [x1]
   2dbb0:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   2dbb4:	str	x1, [x28, x0]
   2dbb8:	cmp	x23, #0x1
   2dbbc:	b.eq	2dc94 <mpfr_log2@@Base+0x298>  // b.none
   2dbc0:	b.gt	2dbdc <mpfr_log2@@Base+0x1e0>
   2dbc4:	adrp	x2, 54000 <mpfr_free_pool@@Base+0x2eec>
   2dbc8:	add	x2, x2, #0xa2c
   2dbcc:	mov	w1, #0x6b                  	// #107
   2dbd0:	adrp	x0, 5a000 <mpfr_bases@@Base+0x2a8>
   2dbd4:	add	x0, x0, #0x885
   2dbd8:	bl	cbd0 <mpfr_assert_fail@plt>
   2dbdc:	sub	x0, x23, #0x1
   2dbe0:	clz	x1, x0
   2dbe4:	mov	w0, #0x40                  	// #64
   2dbe8:	sub	w0, w0, w1
   2dbec:	sxtw	x0, w0
   2dbf0:	add	x26, x5, x0
   2dbf4:	add	x25, sp, #0x70
   2dbf8:	mov	x24, #0x40                  	// #64
   2dbfc:	mov	x1, x26
   2dc00:	mov	x0, x25
   2dc04:	add	x21, sp, #0x90
   2dc08:	bl	cb10 <mpfr_init2@plt>
   2dc0c:	mov	x1, x26
   2dc10:	mov	x0, x21
   2dc14:	bl	cb10 <mpfr_init2@plt>
   2dc18:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2dc1c:	ldr	x1, [x0, #2576]
   2dc20:	add	x0, x0, #0xa10
   2dc24:	blr	x1
   2dc28:	mov	w2, #0x3                   	// #3
   2dc2c:	add	x1, x28, x0
   2dc30:	mov	x0, x25
   2dc34:	bl	c410 <mpfr_cache@plt>
   2dc38:	mov	x1, x19
   2dc3c:	mov	w2, #0x0                   	// #0
   2dc40:	mov	x0, x21
   2dc44:	bl	c110 <mpfr_log@plt>
   2dc48:	mov	x2, x25
   2dc4c:	mov	x1, x21
   2dc50:	mov	x0, x25
   2dc54:	mov	w3, #0x0                   	// #0
   2dc58:	bl	c6b0 <mpfr_div@plt>
   2dc5c:	ldr	x0, [sp, #128]
   2dc60:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   2dc64:	sub	x2, x26, #0x3
   2dc68:	cmp	x0, x1
   2dc6c:	b.gt	2dc9c <mpfr_log2@@Base+0x2a0>
   2dc70:	mov	x0, #0xfffffffffffffeff    	// #-257
   2dc74:	movk	x0, #0x7fff, lsl #48
   2dc78:	sub	x0, x0, x26
   2dc7c:	cmp	x0, x24
   2dc80:	b.ge	2dd5c <mpfr_log2@@Base+0x360>  // b.tcont
   2dc84:	adrp	x2, 54000 <mpfr_free_pool@@Base+0x2eec>
   2dc88:	mov	w1, #0x80                  	// #128
   2dc8c:	add	x2, x2, #0xa35
   2dc90:	b	2dbd0 <mpfr_log2@@Base+0x1d4>
   2dc94:	mov	x0, #0x0                   	// #0
   2dc98:	b	2dbf0 <mpfr_log2@@Base+0x1f4>
   2dc9c:	ldr	x1, [sp, #112]
   2dca0:	cmp	w20, #0x0
   2dca4:	ldr	x0, [sp, #136]
   2dca8:	sub	x1, x1, #0x1
   2dcac:	cinc	x3, x23, eq  // eq = none
   2dcb0:	asr	x1, x1, #6
   2dcb4:	add	x1, x1, #0x1
   2dcb8:	bl	c400 <mpfr_round_p@plt>
   2dcbc:	cbz	w0, 2dc70 <mpfr_log2@@Base+0x274>
   2dcc0:	ldr	w3, [sp, #120]
   2dcc4:	mov	w2, w20
   2dcc8:	mov	x1, x25
   2dccc:	mov	x0, x27
   2dcd0:	bl	c730 <mpfr_set4@plt>
   2dcd4:	mov	w23, w0
   2dcd8:	mov	x0, x25
   2dcdc:	bl	c0f0 <mpfr_clear@plt>
   2dce0:	mov	x0, x21
   2dce4:	bl	c0f0 <mpfr_clear@plt>
   2dce8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2dcec:	ldr	x1, [x0, #2592]
   2dcf0:	add	x0, x0, #0xa20
   2dcf4:	blr	x1
   2dcf8:	add	x1, x28, x0
   2dcfc:	str	w22, [x28, x0]
   2dd00:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2dd04:	ldr	x2, [x0, #2528]
   2dd08:	add	x0, x0, #0x9e0
   2dd0c:	blr	x2
   2dd10:	ldr	x2, [sp, #96]
   2dd14:	str	x2, [x28, x0]
   2dd18:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2dd1c:	ldr	x2, [x0, #2560]
   2dd20:	add	x0, x0, #0xa00
   2dd24:	blr	x2
   2dd28:	ldr	x2, [sp, #104]
   2dd2c:	str	x2, [x28, x0]
   2dd30:	ldr	x0, [x27, #16]
   2dd34:	ldr	x2, [sp, #96]
   2dd38:	cmp	x2, x0
   2dd3c:	b.gt	2dd84 <mpfr_log2@@Base+0x388>
   2dd40:	ldr	x2, [sp, #104]
   2dd44:	cmp	x2, x0
   2dd48:	b.lt	2dd84 <mpfr_log2@@Base+0x388>  // b.tstop
   2dd4c:	cbz	w23, 2da94 <mpfr_log2@@Base+0x98>
   2dd50:	orr	w22, w22, #0x8
   2dd54:	str	w22, [x1]
   2dd58:	b	2da94 <mpfr_log2@@Base+0x98>
   2dd5c:	add	x26, x26, x24
   2dd60:	mov	x0, #0x2                   	// #2
   2dd64:	mov	x1, x26
   2dd68:	sdiv	x24, x26, x0
   2dd6c:	mov	x0, x25
   2dd70:	bl	bf50 <mpfr_set_prec@plt>
   2dd74:	mov	x1, x26
   2dd78:	mov	x0, x21
   2dd7c:	bl	bf50 <mpfr_set_prec@plt>
   2dd80:	b	2dc18 <mpfr_log2@@Base+0x21c>
   2dd84:	mov	w2, w20
   2dd88:	mov	w1, w23
   2dd8c:	mov	x0, x27
   2dd90:	bl	cbc0 <mpfr_check_range@plt>
   2dd94:	b	2db4c <mpfr_log2@@Base+0x150>

000000000002dd98 <mpfr_log10@@Base>:
   2dd98:	stp	x29, x30, [sp, #-176]!
   2dd9c:	mov	x29, sp
   2dda0:	stp	x19, x20, [sp, #16]
   2dda4:	mov	x19, x0
   2dda8:	ldr	x0, [x1, #16]
   2ddac:	stp	x21, x22, [sp, #32]
   2ddb0:	mov	x22, x1
   2ddb4:	stp	x23, x24, [sp, #48]
   2ddb8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   2ddbc:	cmp	x0, x1
   2ddc0:	stp	x25, x26, [sp, #64]
   2ddc4:	stp	x27, x28, [sp, #80]
   2ddc8:	b.gt	2de80 <mpfr_log10@@Base+0xe8>
   2ddcc:	mov	x2, #0x2                   	// #2
   2ddd0:	movk	x2, #0x8000, lsl #48
   2ddd4:	cmp	x0, x2
   2ddd8:	b.ne	2de10 <mpfr_log10@@Base+0x78>  // b.any
   2dddc:	mov	x0, #0x2                   	// #2
   2dde0:	movk	x0, #0x8000, lsl #48
   2dde4:	str	x0, [x19, #16]
   2dde8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2ddec:	ldr	x1, [x0, #2592]
   2ddf0:	add	x0, x0, #0xa20
   2ddf4:	blr	x1
   2ddf8:	mrs	x1, tpidr_el0
   2ddfc:	add	x0, x1, x0
   2de00:	ldr	w1, [x0]
   2de04:	orr	w1, w1, #0x4
   2de08:	str	w1, [x0]
   2de0c:	b	2de2c <mpfr_log10@@Base+0x94>
   2de10:	cmp	x0, x1
   2de14:	b.ne	2de50 <mpfr_log10@@Base+0xb8>  // b.any
   2de18:	ldr	w1, [x22, #8]
   2de1c:	tbnz	w1, #31, 2dddc <mpfr_log10@@Base+0x44>
   2de20:	str	x0, [x19, #16]
   2de24:	mov	w0, #0x1                   	// #1
   2de28:	str	w0, [x19, #8]
   2de2c:	mov	w20, #0x0                   	// #0
   2de30:	mov	w0, w20
   2de34:	ldp	x19, x20, [sp, #16]
   2de38:	ldp	x21, x22, [sp, #32]
   2de3c:	ldp	x23, x24, [sp, #48]
   2de40:	ldp	x25, x26, [sp, #64]
   2de44:	ldp	x27, x28, [sp, #80]
   2de48:	ldp	x29, x30, [sp], #176
   2de4c:	ret
   2de50:	mov	w0, #0xffffffff            	// #-1
   2de54:	str	w0, [x19, #8]
   2de58:	str	x1, [x19, #16]
   2de5c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2de60:	ldr	x1, [x0, #2592]
   2de64:	add	x0, x0, #0xa20
   2de68:	blr	x1
   2de6c:	mrs	x1, tpidr_el0
   2de70:	add	x0, x1, x0
   2de74:	ldr	w1, [x0]
   2de78:	orr	w1, w1, #0x20
   2de7c:	b	2de08 <mpfr_log10@@Base+0x70>
   2de80:	ldr	w0, [x22, #8]
   2de84:	tbnz	w0, #31, 2dddc <mpfr_log10@@Base+0x44>
   2de88:	mov	w24, w2
   2de8c:	mov	x0, x22
   2de90:	mov	x2, #0x0                   	// #0
   2de94:	mov	x1, #0x1                   	// #1
   2de98:	bl	bfd0 <mpfr_cmp_ui_2exp@plt>
   2de9c:	mov	w20, w0
   2dea0:	cbnz	w0, 2deb8 <mpfr_log10@@Base+0x120>
   2dea4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2dea8:	str	x0, [x19, #16]
   2deac:	mov	w0, #0x1                   	// #1
   2deb0:	str	w0, [x19, #8]
   2deb4:	b	2de30 <mpfr_log10@@Base+0x98>
   2deb8:	mrs	x21, tpidr_el0
   2debc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2dec0:	ldr	x1, [x0, #2592]
   2dec4:	add	x0, x0, #0xa20
   2dec8:	blr	x1
   2decc:	ldr	x26, [x19]
   2ded0:	ldr	w0, [x21, x0]
   2ded4:	str	w0, [sp, #100]
   2ded8:	add	x20, x26, #0x4
   2dedc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2dee0:	ldr	x1, [x0, #2528]
   2dee4:	add	x0, x0, #0x9e0
   2dee8:	blr	x1
   2deec:	add	x1, x21, x0
   2def0:	ldr	x28, [x21, x0]
   2def4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2def8:	ldr	x2, [x0, #2560]
   2defc:	add	x0, x0, #0xa00
   2df00:	blr	x2
   2df04:	ldr	x2, [x21, x0]
   2df08:	str	x2, [sp, #104]
   2df0c:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   2df10:	str	x2, [x1]
   2df14:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   2df18:	str	x1, [x21, x0]
   2df1c:	cmp	x26, #0x1
   2df20:	b.eq	2e05c <mpfr_log10@@Base+0x2c4>  // b.none
   2df24:	b.gt	2df40 <mpfr_log10@@Base+0x1a8>
   2df28:	adrp	x2, 54000 <mpfr_free_pool@@Base+0x2eec>
   2df2c:	add	x2, x2, #0xa2c
   2df30:	mov	w1, #0x69                  	// #105
   2df34:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2df38:	add	x0, x0, #0x7c9
   2df3c:	bl	cbd0 <mpfr_assert_fail@plt>
   2df40:	sub	x0, x26, #0x1
   2df44:	clz	x1, x0
   2df48:	mov	w0, #0x40                  	// #64
   2df4c:	sub	w0, w0, w1
   2df50:	sxtw	x0, w0
   2df54:	add	x20, x20, x0
   2df58:	add	x27, sp, #0x70
   2df5c:	mov	x25, #0x40                  	// #64
   2df60:	mov	x1, x20
   2df64:	mov	x0, x27
   2df68:	add	x23, sp, #0x90
   2df6c:	bl	cb10 <mpfr_init2@plt>
   2df70:	mov	x1, x20
   2df74:	mov	x0, x23
   2df78:	bl	cb10 <mpfr_init2@plt>
   2df7c:	mov	w3, #0x0                   	// #0
   2df80:	mov	x2, #0x0                   	// #0
   2df84:	mov	x1, #0xa                   	// #10
   2df88:	mov	x0, x27
   2df8c:	bl	c680 <mpfr_set_ui_2exp@plt>
   2df90:	mov	x1, x27
   2df94:	mov	w2, #0x3                   	// #3
   2df98:	mov	x0, x27
   2df9c:	bl	c110 <mpfr_log@plt>
   2dfa0:	mov	x1, x22
   2dfa4:	mov	w2, #0x0                   	// #0
   2dfa8:	mov	x0, x23
   2dfac:	bl	c110 <mpfr_log@plt>
   2dfb0:	mov	x2, x27
   2dfb4:	mov	x1, x23
   2dfb8:	mov	x0, x27
   2dfbc:	mov	w3, #0x0                   	// #0
   2dfc0:	bl	c6b0 <mpfr_div@plt>
   2dfc4:	ldr	x0, [sp, #128]
   2dfc8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   2dfcc:	sub	x2, x20, #0x4
   2dfd0:	cmp	x0, x1
   2dfd4:	b.gt	2e064 <mpfr_log10@@Base+0x2cc>
   2dfd8:	ldr	w0, [sp, #120]
   2dfdc:	cmp	w0, #0x0
   2dfe0:	b.le	2e038 <mpfr_log10@@Base+0x2a0>
   2dfe4:	mov	x0, x27
   2dfe8:	bl	c1f0 <mpfr_integer_p@plt>
   2dfec:	cbz	w0, 2e038 <mpfr_log10@@Base+0x2a0>
   2dff0:	mov	x0, x27
   2dff4:	mov	w1, #0x0                   	// #0
   2dff8:	bl	bed0 <mpfr_fits_ulong_p@plt>
   2dffc:	cbz	w0, 2e038 <mpfr_log10@@Base+0x2a0>
   2e000:	mov	w1, #0x0                   	// #0
   2e004:	mov	x0, x27
   2e008:	bl	bd20 <mpfr_get_ui@plt>
   2e00c:	mov	x2, x0
   2e010:	mov	w3, #0x0                   	// #0
   2e014:	mov	x0, x23
   2e018:	mov	x1, #0xa                   	// #10
   2e01c:	bl	bba0 <mpfr_ui_pow_ui@plt>
   2e020:	cbnz	w0, 2e038 <mpfr_log10@@Base+0x2a0>
   2e024:	mov	x1, x23
   2e028:	mov	x0, x22
   2e02c:	mov	w2, #0x1                   	// #1
   2e030:	bl	ca30 <mpfr_cmp3@plt>
   2e034:	cbz	w0, 2e088 <mpfr_log10@@Base+0x2f0>
   2e038:	mov	x0, #0xfffffffffffffeff    	// #-257
   2e03c:	movk	x0, #0x7fff, lsl #48
   2e040:	sub	x0, x0, x20
   2e044:	cmp	x0, x25
   2e048:	b.ge	2e120 <mpfr_log10@@Base+0x388>  // b.tcont
   2e04c:	adrp	x2, 54000 <mpfr_free_pool@@Base+0x2eec>
   2e050:	mov	w1, #0x88                  	// #136
   2e054:	add	x2, x2, #0xa35
   2e058:	b	2df34 <mpfr_log10@@Base+0x19c>
   2e05c:	mov	x0, #0x0                   	// #0
   2e060:	b	2df54 <mpfr_log10@@Base+0x1bc>
   2e064:	ldr	x1, [sp, #112]
   2e068:	cmp	w24, #0x0
   2e06c:	ldr	x0, [sp, #136]
   2e070:	sub	x1, x1, #0x1
   2e074:	cinc	x3, x26, eq  // eq = none
   2e078:	asr	x1, x1, #6
   2e07c:	add	x1, x1, #0x1
   2e080:	bl	c400 <mpfr_round_p@plt>
   2e084:	cbz	w0, 2dfd8 <mpfr_log10@@Base+0x240>
   2e088:	ldr	w3, [sp, #120]
   2e08c:	mov	x1, x27
   2e090:	mov	w2, w24
   2e094:	mov	x0, x19
   2e098:	bl	c730 <mpfr_set4@plt>
   2e09c:	mov	w20, w0
   2e0a0:	mov	x0, x27
   2e0a4:	bl	c0f0 <mpfr_clear@plt>
   2e0a8:	mov	x0, x23
   2e0ac:	bl	c0f0 <mpfr_clear@plt>
   2e0b0:	ldr	w2, [sp, #100]
   2e0b4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2e0b8:	ldr	x1, [x0, #2592]
   2e0bc:	add	x0, x0, #0xa20
   2e0c0:	blr	x1
   2e0c4:	add	x1, x21, x0
   2e0c8:	str	w2, [x21, x0]
   2e0cc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2e0d0:	ldr	x2, [x0, #2528]
   2e0d4:	add	x0, x0, #0x9e0
   2e0d8:	blr	x2
   2e0dc:	str	x28, [x21, x0]
   2e0e0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2e0e4:	ldr	x2, [x0, #2560]
   2e0e8:	add	x0, x0, #0xa00
   2e0ec:	blr	x2
   2e0f0:	ldr	x2, [sp, #104]
   2e0f4:	str	x2, [x21, x0]
   2e0f8:	ldr	x0, [x19, #16]
   2e0fc:	cmp	x28, x0
   2e100:	b.gt	2e148 <mpfr_log10@@Base+0x3b0>
   2e104:	cmp	x2, x0
   2e108:	b.lt	2e148 <mpfr_log10@@Base+0x3b0>  // b.tstop
   2e10c:	cbz	w20, 2de30 <mpfr_log10@@Base+0x98>
   2e110:	ldr	w0, [sp, #100]
   2e114:	orr	w0, w0, #0x8
   2e118:	str	w0, [x1]
   2e11c:	b	2de30 <mpfr_log10@@Base+0x98>
   2e120:	add	x20, x20, x25
   2e124:	mov	x25, #0x2                   	// #2
   2e128:	mov	x1, x20
   2e12c:	mov	x0, x27
   2e130:	bl	bf50 <mpfr_set_prec@plt>
   2e134:	sdiv	x25, x20, x25
   2e138:	mov	x1, x20
   2e13c:	mov	x0, x23
   2e140:	bl	bf50 <mpfr_set_prec@plt>
   2e144:	b	2df7c <mpfr_log10@@Base+0x1e4>
   2e148:	mov	w1, w20
   2e14c:	mov	w2, w24
   2e150:	mov	x0, x19
   2e154:	bl	cbc0 <mpfr_check_range@plt>
   2e158:	mov	w20, w0
   2e15c:	b	2de30 <mpfr_log10@@Base+0x98>

000000000002e160 <mpfr_ui_pow@@Base>:
   2e160:	stp	x29, x30, [sp, #-144]!
   2e164:	mrs	x4, tpidr_el0
   2e168:	mov	x29, sp
   2e16c:	stp	x19, x20, [sp, #16]
   2e170:	mov	x20, x0
   2e174:	stp	x23, x24, [sp, #48]
   2e178:	mov	x24, x2
   2e17c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2e180:	ldr	x2, [x0, #2592]
   2e184:	add	x0, x0, #0xa20
   2e188:	blr	x2
   2e18c:	add	x23, x4, x0
   2e190:	ldr	w19, [x4, x0]
   2e194:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2e198:	ldr	x2, [x0, #2528]
   2e19c:	add	x0, x0, #0x9e0
   2e1a0:	blr	x2
   2e1a4:	stp	x27, x28, [sp, #80]
   2e1a8:	add	x28, x4, x0
   2e1ac:	stp	x25, x26, [sp, #64]
   2e1b0:	ldr	x26, [x4, x0]
   2e1b4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2e1b8:	ldr	x2, [x0, #2560]
   2e1bc:	add	x0, x0, #0xa00
   2e1c0:	blr	x2
   2e1c4:	add	x27, x4, x0
   2e1c8:	stp	x21, x22, [sp, #32]
   2e1cc:	add	x22, sp, #0x70
   2e1d0:	ldr	x25, [x4, x0]
   2e1d4:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   2e1d8:	str	x0, [x28]
   2e1dc:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   2e1e0:	str	x0, [x27]
   2e1e4:	mov	x0, #0x40                  	// #64
   2e1e8:	str	x0, [sp, #112]
   2e1ec:	add	x0, sp, #0x68
   2e1f0:	str	x0, [sp, #136]
   2e1f4:	mov	w0, #0x1                   	// #1
   2e1f8:	mov	w21, w3
   2e1fc:	mov	x2, #0x0                   	// #0
   2e200:	mov	w3, #0x0                   	// #0
   2e204:	str	w0, [sp, #120]
   2e208:	mov	x0, x22
   2e20c:	bl	c680 <mpfr_set_ui_2exp@plt>
   2e210:	mov	x2, x24
   2e214:	mov	x1, x22
   2e218:	mov	w3, w21
   2e21c:	mov	x0, x20
   2e220:	bl	be10 <mpfr_pow@plt>
   2e224:	str	x25, [x27]
   2e228:	ldr	w1, [x23]
   2e22c:	ldr	x2, [x20, #16]
   2e230:	orr	w1, w19, w1
   2e234:	str	x26, [x28]
   2e238:	str	w1, [x23]
   2e23c:	cmp	x26, x2
   2e240:	b.gt	2e26c <mpfr_ui_pow@@Base+0x10c>
   2e244:	cmp	x25, x2
   2e248:	b.lt	2e26c <mpfr_ui_pow@@Base+0x10c>  // b.tstop
   2e24c:	cbnz	w0, 2e280 <mpfr_ui_pow@@Base+0x120>
   2e250:	ldp	x19, x20, [sp, #16]
   2e254:	ldp	x21, x22, [sp, #32]
   2e258:	ldp	x23, x24, [sp, #48]
   2e25c:	ldp	x25, x26, [sp, #64]
   2e260:	ldp	x27, x28, [sp, #80]
   2e264:	ldp	x29, x30, [sp], #144
   2e268:	ret
   2e26c:	mov	w1, w0
   2e270:	mov	w2, w21
   2e274:	mov	x0, x20
   2e278:	bl	cbc0 <mpfr_check_range@plt>
   2e27c:	b	2e250 <mpfr_ui_pow@@Base+0xf0>
   2e280:	orr	w1, w1, #0x8
   2e284:	str	w1, [x23]
   2e288:	b	2e250 <mpfr_ui_pow@@Base+0xf0>

000000000002e28c <mpfr_ui_pow_ui@@Base>:
   2e28c:	stp	x29, x30, [sp, #-160]!
   2e290:	cmp	x2, #0x1
   2e294:	mov	x29, sp
   2e298:	stp	x19, x20, [sp, #16]
   2e29c:	mov	x20, x0
   2e2a0:	stp	x21, x22, [sp, #32]
   2e2a4:	mov	w22, w3
   2e2a8:	stp	x23, x24, [sp, #48]
   2e2ac:	stp	x25, x26, [sp, #64]
   2e2b0:	stp	x27, x28, [sp, #80]
   2e2b4:	b.hi	2e2fc <mpfr_ui_pow_ui@@Base+0x70>  // b.pmore
   2e2b8:	b.ne	2e2e8 <mpfr_ui_pow_ui@@Base+0x5c>  // b.any
   2e2bc:	mov	x2, #0x0                   	// #0
   2e2c0:	bl	c680 <mpfr_set_ui_2exp@plt>
   2e2c4:	mov	w19, w0
   2e2c8:	mov	w0, w19
   2e2cc:	ldp	x19, x20, [sp, #16]
   2e2d0:	ldp	x21, x22, [sp, #32]
   2e2d4:	ldp	x23, x24, [sp, #48]
   2e2d8:	ldp	x25, x26, [sp, #64]
   2e2dc:	ldp	x27, x28, [sp, #80]
   2e2e0:	ldp	x29, x30, [sp], #160
   2e2e4:	ret
   2e2e8:	mov	w3, w22
   2e2ec:	mov	x0, x20
   2e2f0:	mov	x2, #0x0                   	// #0
   2e2f4:	mov	x1, #0x1                   	// #1
   2e2f8:	b	2e2c0 <mpfr_ui_pow_ui@@Base+0x34>
   2e2fc:	mov	x23, x1
   2e300:	cmp	x1, #0x1
   2e304:	b.hi	2e324 <mpfr_ui_pow_ui@@Base+0x98>  // b.pmore
   2e308:	b.eq	2e2e8 <mpfr_ui_pow_ui@@Base+0x5c>  // b.none
   2e30c:	mov	w0, #0x1                   	// #1
   2e310:	mov	w19, #0x0                   	// #0
   2e314:	str	w0, [x20, #8]
   2e318:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2e31c:	str	x0, [x20, #16]
   2e320:	b	2e2c8 <mpfr_ui_pow_ui@@Base+0x3c>
   2e324:	mov	x24, x2
   2e328:	mov	x0, x2
   2e32c:	mov	w19, #0x0                   	// #0
   2e330:	mov	w26, w19
   2e334:	lsr	x0, x0, #1
   2e338:	add	w19, w19, #0x1
   2e33c:	cbnz	x0, 2e330 <mpfr_ui_pow_ui@@Base+0xa4>
   2e340:	mrs	x21, tpidr_el0
   2e344:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2e348:	ldr	x1, [x0, #2592]
   2e34c:	add	x0, x0, #0xa20
   2e350:	blr	x1
   2e354:	add	x27, sp, #0x80
   2e358:	mov	x25, #0x40                  	// #64
   2e35c:	ldr	w0, [x21, x0]
   2e360:	str	w0, [sp, #120]
   2e364:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2e368:	ldr	x1, [x0, #2528]
   2e36c:	add	x0, x0, #0x9e0
   2e370:	blr	x1
   2e374:	add	x1, x21, x0
   2e378:	ldr	x0, [x21, x0]
   2e37c:	str	x0, [sp, #96]
   2e380:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2e384:	ldr	x2, [x0, #2560]
   2e388:	add	x0, x0, #0xa00
   2e38c:	blr	x2
   2e390:	ldr	x2, [x21, x0]
   2e394:	str	x2, [sp, #104]
   2e398:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   2e39c:	str	x2, [x1]
   2e3a0:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   2e3a4:	str	x1, [x21, x0]
   2e3a8:	ldr	x0, [x20]
   2e3ac:	add	x0, x0, #0x3
   2e3b0:	add	x19, x0, w19, sxtw
   2e3b4:	mov	x0, x27
   2e3b8:	mov	x1, x19
   2e3bc:	bl	cb10 <mpfr_init2@plt>
   2e3c0:	sxtw	x0, w26
   2e3c4:	add	x0, x0, #0x1
   2e3c8:	str	x0, [sp, #112]
   2e3cc:	mov	x1, x23
   2e3d0:	mov	x0, x27
   2e3d4:	mov	w3, #0x2                   	// #2
   2e3d8:	mov	x2, #0x0                   	// #0
   2e3dc:	bl	c680 <mpfr_set_ui_2exp@plt>
   2e3e0:	mov	w28, w0
   2e3e4:	sub	w6, w26, #0x1
   2e3e8:	cmn	w6, #0x1
   2e3ec:	b.ne	2e430 <mpfr_ui_pow_ui@@Base+0x1a4>  // b.any
   2e3f0:	cbz	w28, 2e4b0 <mpfr_ui_pow_ui@@Base+0x224>
   2e3f4:	ldr	x0, [sp, #144]
   2e3f8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   2e3fc:	cmp	x0, x1
   2e400:	b.gt	2e480 <mpfr_ui_pow_ui@@Base+0x1f4>
   2e404:	mov	x0, #0xfffffffffffffeff    	// #-257
   2e408:	movk	x0, #0x7fff, lsl #48
   2e40c:	sub	x0, x0, x19
   2e410:	cmp	x0, x25
   2e414:	b.ge	2e54c <mpfr_ui_pow_ui@@Base+0x2c0>  // b.tcont
   2e418:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   2e41c:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2e420:	add	x2, x2, #0x519
   2e424:	add	x0, x0, #0x7d1
   2e428:	mov	w1, #0x54                  	// #84
   2e42c:	bl	cbd0 <mpfr_assert_fail@plt>
   2e430:	mov	x2, x27
   2e434:	mov	x1, x27
   2e438:	mov	x0, x27
   2e43c:	mov	w3, #0x2                   	// #2
   2e440:	str	w6, [sp, #124]
   2e444:	bl	bdd0 <mpfr_mul@plt>
   2e448:	ldr	w6, [sp, #124]
   2e44c:	orr	w28, w28, w0
   2e450:	lsr	x0, x24, x6
   2e454:	tbz	w0, #0, 2e478 <mpfr_ui_pow_ui@@Base+0x1ec>
   2e458:	mov	x2, x23
   2e45c:	mov	x1, x27
   2e460:	mov	x0, x27
   2e464:	mov	w3, #0x2                   	// #2
   2e468:	str	w6, [sp, #124]
   2e46c:	bl	bad0 <mpfr_mul_ui@plt>
   2e470:	ldr	w6, [sp, #124]
   2e474:	orr	w28, w28, w0
   2e478:	sub	w6, w6, #0x1
   2e47c:	b	2e3e8 <mpfr_ui_pow_ui@@Base+0x15c>
   2e480:	ldr	x0, [sp, #112]
   2e484:	cmp	w22, #0x0
   2e488:	ldr	x1, [sp, #128]
   2e48c:	sub	x2, x19, x0
   2e490:	ldr	x0, [sp, #152]
   2e494:	sub	x1, x1, #0x1
   2e498:	ldr	x3, [x20]
   2e49c:	asr	x1, x1, #6
   2e4a0:	add	x1, x1, #0x1
   2e4a4:	cinc	x3, x3, eq  // eq = none
   2e4a8:	bl	c400 <mpfr_round_p@plt>
   2e4ac:	cbz	w0, 2e404 <mpfr_ui_pow_ui@@Base+0x178>
   2e4b0:	ldr	w3, [sp, #136]
   2e4b4:	mov	x1, x27
   2e4b8:	mov	w2, w22
   2e4bc:	mov	x0, x20
   2e4c0:	bl	c730 <mpfr_set4@plt>
   2e4c4:	mov	w19, w0
   2e4c8:	mov	x0, x27
   2e4cc:	bl	c0f0 <mpfr_clear@plt>
   2e4d0:	ldr	w2, [sp, #120]
   2e4d4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2e4d8:	ldr	x1, [x0, #2592]
   2e4dc:	add	x0, x0, #0xa20
   2e4e0:	blr	x1
   2e4e4:	add	x1, x21, x0
   2e4e8:	str	w2, [x21, x0]
   2e4ec:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2e4f0:	ldr	x2, [x0, #2528]
   2e4f4:	add	x0, x0, #0x9e0
   2e4f8:	blr	x2
   2e4fc:	ldr	x2, [sp, #96]
   2e500:	str	x2, [x21, x0]
   2e504:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2e508:	ldr	x2, [x0, #2560]
   2e50c:	add	x0, x0, #0xa00
   2e510:	blr	x2
   2e514:	ldr	x2, [sp, #104]
   2e518:	str	x2, [x21, x0]
   2e51c:	ldr	x0, [x20, #16]
   2e520:	ldr	x2, [sp, #96]
   2e524:	cmp	x2, x0
   2e528:	b.gt	2e568 <mpfr_ui_pow_ui@@Base+0x2dc>
   2e52c:	ldr	x2, [sp, #104]
   2e530:	cmp	x2, x0
   2e534:	b.lt	2e568 <mpfr_ui_pow_ui@@Base+0x2dc>  // b.tstop
   2e538:	cbz	w19, 2e2c8 <mpfr_ui_pow_ui@@Base+0x3c>
   2e53c:	ldr	w0, [sp, #120]
   2e540:	orr	w0, w0, #0x8
   2e544:	str	w0, [x1]
   2e548:	b	2e2c8 <mpfr_ui_pow_ui@@Base+0x3c>
   2e54c:	add	x19, x19, x25
   2e550:	mov	x0, #0x2                   	// #2
   2e554:	mov	x1, x19
   2e558:	sdiv	x25, x19, x0
   2e55c:	mov	x0, x27
   2e560:	bl	bf50 <mpfr_set_prec@plt>
   2e564:	b	2e3cc <mpfr_ui_pow_ui@@Base+0x140>
   2e568:	mov	w2, w22
   2e56c:	mov	w1, w19
   2e570:	mov	x0, x20
   2e574:	bl	cbc0 <mpfr_check_range@plt>
   2e578:	b	2e2c4 <mpfr_ui_pow_ui@@Base+0x38>

000000000002e57c <mpfr_min@@Base>:
   2e57c:	stp	x29, x30, [sp, #-48]!
   2e580:	mov	x4, #0x8000000000000003    	// #-9223372036854775805
   2e584:	mov	x29, sp
   2e588:	stp	x21, x22, [sp, #32]
   2e58c:	mov	w22, w3
   2e590:	mov	x21, x0
   2e594:	ldr	x3, [x1, #16]
   2e598:	stp	x19, x20, [sp, #16]
   2e59c:	mov	x20, x2
   2e5a0:	mov	x19, x1
   2e5a4:	cmp	x3, x4
   2e5a8:	ldr	x2, [x2, #16]
   2e5ac:	b.le	2e5e4 <mpfr_min@@Base+0x68>
   2e5b0:	cmp	x2, x4
   2e5b4:	b.gt	2e5c8 <mpfr_min@@Base+0x4c>
   2e5b8:	mov	x0, #0x2                   	// #2
   2e5bc:	movk	x0, #0x8000, lsl #48
   2e5c0:	cmp	x2, x0
   2e5c4:	b.eq	2e614 <mpfr_min@@Base+0x98>  // b.none
   2e5c8:	mov	x1, x20
   2e5cc:	mov	x0, x19
   2e5d0:	mov	w2, #0x1                   	// #1
   2e5d4:	bl	ca30 <mpfr_cmp3@plt>
   2e5d8:	cmp	w0, #0x0
   2e5dc:	b.gt	2e5fc <mpfr_min@@Base+0x80>
   2e5e0:	b	2e614 <mpfr_min@@Base+0x98>
   2e5e4:	mov	x4, #0x2                   	// #2
   2e5e8:	movk	x4, #0x8000, lsl #48
   2e5ec:	cmp	x3, x4
   2e5f0:	b.ne	2e60c <mpfr_min@@Base+0x90>  // b.any
   2e5f4:	cmp	x2, x3
   2e5f8:	b.eq	2e658 <mpfr_min@@Base+0xdc>  // b.none
   2e5fc:	ldr	w3, [x20, #8]
   2e600:	mov	w2, w22
   2e604:	mov	x1, x20
   2e608:	b	2e620 <mpfr_min@@Base+0xa4>
   2e60c:	cmp	x2, x4
   2e610:	b.ne	2e628 <mpfr_min@@Base+0xac>  // b.any
   2e614:	ldr	w3, [x19, #8]
   2e618:	mov	w2, w22
   2e61c:	mov	x1, x19
   2e620:	mov	x0, x21
   2e624:	b	2e648 <mpfr_min@@Base+0xcc>
   2e628:	mov	x4, #0x8000000000000001    	// #-9223372036854775807
   2e62c:	cmp	x3, x4
   2e630:	b.ne	2e5c8 <mpfr_min@@Base+0x4c>  // b.any
   2e634:	cmp	x2, x3
   2e638:	b.ne	2e5c8 <mpfr_min@@Base+0x4c>  // b.any
   2e63c:	ldr	w3, [x1, #8]
   2e640:	tbz	w3, #31, 2e5fc <mpfr_min@@Base+0x80>
   2e644:	mov	w2, w22
   2e648:	ldp	x19, x20, [sp, #16]
   2e64c:	ldp	x21, x22, [sp, #32]
   2e650:	ldp	x29, x30, [sp], #48
   2e654:	b	c730 <mpfr_set4@plt>
   2e658:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2e65c:	ldr	x1, [x0, #2592]
   2e660:	add	x0, x0, #0xa20
   2e664:	blr	x1
   2e668:	mrs	x1, tpidr_el0
   2e66c:	add	x0, x1, x0
   2e670:	ldp	x19, x20, [sp, #16]
   2e674:	str	x2, [x21, #16]
   2e678:	ldr	w1, [x0]
   2e67c:	ldp	x21, x22, [sp, #32]
   2e680:	orr	w1, w1, #0x4
   2e684:	str	w1, [x0]
   2e688:	mov	w0, #0x0                   	// #0
   2e68c:	ldp	x29, x30, [sp], #48
   2e690:	ret

000000000002e694 <mpfr_max@@Base>:
   2e694:	stp	x29, x30, [sp, #-48]!
   2e698:	mov	x4, #0x8000000000000003    	// #-9223372036854775805
   2e69c:	mov	x29, sp
   2e6a0:	stp	x21, x22, [sp, #32]
   2e6a4:	mov	w22, w3
   2e6a8:	mov	x21, x0
   2e6ac:	ldr	x3, [x1, #16]
   2e6b0:	stp	x19, x20, [sp, #16]
   2e6b4:	mov	x20, x2
   2e6b8:	mov	x19, x1
   2e6bc:	cmp	x3, x4
   2e6c0:	ldr	x2, [x2, #16]
   2e6c4:	b.le	2e6fc <mpfr_max@@Base+0x68>
   2e6c8:	cmp	x2, x4
   2e6cc:	b.gt	2e6e0 <mpfr_max@@Base+0x4c>
   2e6d0:	mov	x0, #0x2                   	// #2
   2e6d4:	movk	x0, #0x8000, lsl #48
   2e6d8:	cmp	x2, x0
   2e6dc:	b.eq	2e730 <mpfr_max@@Base+0x9c>  // b.none
   2e6e0:	mov	x1, x20
   2e6e4:	mov	x0, x19
   2e6e8:	mov	w2, #0x1                   	// #1
   2e6ec:	bl	ca30 <mpfr_cmp3@plt>
   2e6f0:	cmp	w0, #0x0
   2e6f4:	b.gt	2e730 <mpfr_max@@Base+0x9c>
   2e6f8:	b	2e714 <mpfr_max@@Base+0x80>
   2e6fc:	mov	x4, #0x2                   	// #2
   2e700:	movk	x4, #0x8000, lsl #48
   2e704:	cmp	x3, x4
   2e708:	b.ne	2e728 <mpfr_max@@Base+0x94>  // b.any
   2e70c:	cmp	x2, x3
   2e710:	b.eq	2e770 <mpfr_max@@Base+0xdc>  // b.none
   2e714:	ldr	w3, [x20, #8]
   2e718:	mov	w2, w22
   2e71c:	mov	x1, x20
   2e720:	mov	x0, x21
   2e724:	b	2e760 <mpfr_max@@Base+0xcc>
   2e728:	cmp	x2, x4
   2e72c:	b.ne	2e740 <mpfr_max@@Base+0xac>  // b.any
   2e730:	ldr	w3, [x19, #8]
   2e734:	mov	w2, w22
   2e738:	mov	x1, x19
   2e73c:	b	2e720 <mpfr_max@@Base+0x8c>
   2e740:	mov	x4, #0x8000000000000001    	// #-9223372036854775807
   2e744:	cmp	x3, x4
   2e748:	b.ne	2e6e0 <mpfr_max@@Base+0x4c>  // b.any
   2e74c:	cmp	x2, x3
   2e750:	b.ne	2e6e0 <mpfr_max@@Base+0x4c>  // b.any
   2e754:	ldr	w3, [x1, #8]
   2e758:	tbnz	w3, #31, 2e714 <mpfr_max@@Base+0x80>
   2e75c:	mov	w2, w22
   2e760:	ldp	x19, x20, [sp, #16]
   2e764:	ldp	x21, x22, [sp, #32]
   2e768:	ldp	x29, x30, [sp], #48
   2e76c:	b	c730 <mpfr_set4@plt>
   2e770:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2e774:	ldr	x1, [x0, #2592]
   2e778:	add	x0, x0, #0xa20
   2e77c:	blr	x1
   2e780:	mrs	x1, tpidr_el0
   2e784:	add	x0, x1, x0
   2e788:	ldp	x19, x20, [sp, #16]
   2e78c:	str	x2, [x21, #16]
   2e790:	ldr	w1, [x0]
   2e794:	ldp	x21, x22, [sp, #32]
   2e798:	orr	w1, w1, #0x4
   2e79c:	str	w1, [x0]
   2e7a0:	mov	w0, #0x0                   	// #0
   2e7a4:	ldp	x29, x30, [sp], #48
   2e7a8:	ret

000000000002e7ac <mpfr_dim@@Base>:
   2e7ac:	stp	x29, x30, [sp, #-48]!
   2e7b0:	mov	x29, sp
   2e7b4:	stp	x19, x20, [sp, #16]
   2e7b8:	mov	x20, x1
   2e7bc:	mov	x19, x0
   2e7c0:	ldr	x1, [x1, #16]
   2e7c4:	stp	x21, x22, [sp, #32]
   2e7c8:	mov	x0, #0x2                   	// #2
   2e7cc:	movk	x0, #0x8000, lsl #48
   2e7d0:	cmp	x1, x0
   2e7d4:	mov	x1, x0
   2e7d8:	b.eq	2e7ec <mpfr_dim@@Base+0x40>  // b.none
   2e7dc:	mov	x21, x2
   2e7e0:	ldr	x2, [x2, #16]
   2e7e4:	cmp	x2, x0
   2e7e8:	b.ne	2e828 <mpfr_dim@@Base+0x7c>  // b.any
   2e7ec:	str	x1, [x19, #16]
   2e7f0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2e7f4:	ldr	x1, [x0, #2592]
   2e7f8:	add	x0, x0, #0xa20
   2e7fc:	blr	x1
   2e800:	mrs	x1, tpidr_el0
   2e804:	add	x0, x1, x0
   2e808:	ldr	w1, [x0]
   2e80c:	orr	w1, w1, #0x4
   2e810:	str	w1, [x0]
   2e814:	mov	w0, #0x0                   	// #0
   2e818:	ldp	x19, x20, [sp, #16]
   2e81c:	ldp	x21, x22, [sp, #32]
   2e820:	ldp	x29, x30, [sp], #48
   2e824:	ret
   2e828:	mov	w22, w3
   2e82c:	mov	x1, x21
   2e830:	mov	x0, x20
   2e834:	mov	w2, #0x1                   	// #1
   2e838:	bl	ca30 <mpfr_cmp3@plt>
   2e83c:	cmp	w0, #0x0
   2e840:	b.le	2e864 <mpfr_dim@@Base+0xb8>
   2e844:	mov	w3, w22
   2e848:	mov	x2, x21
   2e84c:	mov	x1, x20
   2e850:	mov	x0, x19
   2e854:	ldp	x19, x20, [sp, #16]
   2e858:	ldp	x21, x22, [sp, #32]
   2e85c:	ldp	x29, x30, [sp], #48
   2e860:	b	bbf0 <mpfr_sub@plt>
   2e864:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2e868:	str	x0, [x19, #16]
   2e86c:	mov	w0, #0x1                   	// #1
   2e870:	str	w0, [x19, #8]
   2e874:	b	2e814 <mpfr_dim@@Base+0x68>

000000000002e878 <mpfr_signbit@@Base>:
   2e878:	ldr	w0, [x0, #8]
   2e87c:	lsr	w0, w0, #31
   2e880:	ret

000000000002e884 <mpfr_copysign@@Base>:
   2e884:	mov	x4, x2
   2e888:	mov	w2, w3
   2e88c:	ldr	w3, [x4, #8]
   2e890:	b	c730 <mpfr_set4@plt>

000000000002e894 <mpfr_setsign@@Base>:
   2e894:	mov	w4, w2
   2e898:	mov	w2, w3
   2e89c:	cmp	w4, #0x0
   2e8a0:	mov	w3, #0x1                   	// #1
   2e8a4:	cneg	w3, w3, ne  // ne = any
   2e8a8:	b	c730 <mpfr_set4@plt>
   2e8ac:	stp	x29, x30, [sp, #-32]!
   2e8b0:	mov	x29, sp
   2e8b4:	ldr	w2, [x1, #4]
   2e8b8:	stp	x19, x20, [sp, #16]
   2e8bc:	mov	x20, x0
   2e8c0:	cmp	w2, #0x0
   2e8c4:	cneg	w2, w2, lt  // lt = tstop
   2e8c8:	mov	x19, x1
   2e8cc:	cmp	w2, #0x1
   2e8d0:	b.le	2e924 <mpfr_setsign@@Base+0x90>
   2e8d4:	mov	x0, #0xfffffffffffffff8    	// #-8
   2e8d8:	ldr	x1, [x1, #8]
   2e8dc:	add	x0, x0, w2, sxtw #3
   2e8e0:	sbfiz	x2, x2, #6, #32
   2e8e4:	ldr	x1, [x1, x0]
   2e8e8:	clz	x1, x1
   2e8ec:	sub	x1, x2, x1
   2e8f0:	mov	x0, x20
   2e8f4:	bl	cb10 <mpfr_init2@plt>
   2e8f8:	mov	x1, x19
   2e8fc:	mov	x0, x20
   2e900:	mov	w2, #0x0                   	// #0
   2e904:	bl	c2d0 <mpfr_set_z@plt>
   2e908:	cbz	w0, 2e92c <mpfr_setsign@@Base+0x98>
   2e90c:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2e910:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2e914:	add	x2, x2, #0x7dd
   2e918:	add	x0, x0, #0x7e4
   2e91c:	mov	w1, #0x31                  	// #49
   2e920:	bl	cbd0 <mpfr_assert_fail@plt>
   2e924:	mov	x1, #0x40                  	// #64
   2e928:	b	2e8f0 <mpfr_setsign@@Base+0x5c>
   2e92c:	ldp	x19, x20, [sp, #16]
   2e930:	ldp	x29, x30, [sp], #32
   2e934:	ret
   2e938:	stp	x29, x30, [sp, #-144]!
   2e93c:	mrs	x5, tpidr_el0
   2e940:	mov	x29, sp
   2e944:	stp	x21, x22, [sp, #32]
   2e948:	mov	x21, x0
   2e94c:	add	x22, sp, #0x70
   2e950:	stp	x25, x26, [sp, #64]
   2e954:	mov	x25, x1
   2e958:	mov	x1, x2
   2e95c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2e960:	ldr	x2, [x0, #2592]
   2e964:	add	x0, x0, #0xa20
   2e968:	blr	x2
   2e96c:	stp	x19, x20, [sp, #16]
   2e970:	ldr	w20, [x5, x0]
   2e974:	mov	x19, x4
   2e978:	stp	x23, x24, [sp, #48]
   2e97c:	add	x24, x5, x0
   2e980:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2e984:	ldr	x2, [x0, #2528]
   2e988:	add	x0, x0, #0x9e0
   2e98c:	blr	x2
   2e990:	add	x4, x5, x0
   2e994:	stp	x27, x28, [sp, #80]
   2e998:	mov	w23, w3
   2e99c:	ldr	x27, [x5, x0]
   2e9a0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2e9a4:	ldr	x2, [x0, #2560]
   2e9a8:	add	x0, x0, #0xa00
   2e9ac:	blr	x2
   2e9b0:	add	x28, x5, x0
   2e9b4:	str	x4, [sp, #104]
   2e9b8:	ldr	x26, [x5, x0]
   2e9bc:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   2e9c0:	str	x0, [x4]
   2e9c4:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   2e9c8:	str	x0, [x28]
   2e9cc:	mov	x0, x22
   2e9d0:	bl	2e8ac <mpfr_setsign@@Base+0x18>
   2e9d4:	mov	w3, w23
   2e9d8:	mov	x2, x22
   2e9dc:	mov	x1, x25
   2e9e0:	mov	x0, x21
   2e9e4:	blr	x19
   2e9e8:	mov	w19, w0
   2e9ec:	ldr	w0, [x24]
   2e9f0:	orr	w20, w20, w0
   2e9f4:	mov	x0, x22
   2e9f8:	bl	c0f0 <mpfr_clear@plt>
   2e9fc:	str	w20, [x24]
   2ea00:	ldr	x4, [sp, #104]
   2ea04:	str	x26, [x28]
   2ea08:	ldr	x0, [x21, #16]
   2ea0c:	str	x27, [x4]
   2ea10:	cmp	x27, x0
   2ea14:	b.gt	2ea44 <mpfr_setsign@@Base+0x1b0>
   2ea18:	cmp	x26, x0
   2ea1c:	b.lt	2ea44 <mpfr_setsign@@Base+0x1b0>  // b.tstop
   2ea20:	cbnz	w19, 2ea5c <mpfr_setsign@@Base+0x1c8>
   2ea24:	mov	w0, w19
   2ea28:	ldp	x19, x20, [sp, #16]
   2ea2c:	ldp	x21, x22, [sp, #32]
   2ea30:	ldp	x23, x24, [sp, #48]
   2ea34:	ldp	x25, x26, [sp, #64]
   2ea38:	ldp	x27, x28, [sp, #80]
   2ea3c:	ldp	x29, x30, [sp], #144
   2ea40:	ret
   2ea44:	mov	w1, w19
   2ea48:	mov	w2, w23
   2ea4c:	mov	x0, x21
   2ea50:	bl	cbc0 <mpfr_check_range@plt>
   2ea54:	mov	w19, w0
   2ea58:	b	2ea24 <mpfr_setsign@@Base+0x190>
   2ea5c:	orr	w20, w20, #0x8
   2ea60:	str	w20, [x24]
   2ea64:	b	2ea24 <mpfr_setsign@@Base+0x190>

000000000002ea68 <mpfr_mul_z@@Base>:
   2ea68:	stp	x29, x30, [sp, #-48]!
   2ea6c:	mov	x29, sp
   2ea70:	stp	x19, x20, [sp, #16]
   2ea74:	mov	x20, x0
   2ea78:	mov	x19, x2
   2ea7c:	mov	x0, x2
   2ea80:	stp	x21, x22, [sp, #32]
   2ea84:	mov	x21, x1
   2ea88:	mov	w22, w3
   2ea8c:	bl	bf10 <__gmpz_fits_slong_p@plt>
   2ea90:	cbz	w0, 2eabc <mpfr_mul_z@@Base+0x54>
   2ea94:	mov	x0, x19
   2ea98:	bl	baa0 <__gmpz_get_si@plt>
   2ea9c:	mov	w3, w22
   2eaa0:	mov	x2, x0
   2eaa4:	mov	x1, x21
   2eaa8:	mov	x0, x20
   2eaac:	ldp	x19, x20, [sp, #16]
   2eab0:	ldp	x21, x22, [sp, #32]
   2eab4:	ldp	x29, x30, [sp], #48
   2eab8:	b	c9f0 <mpfr_mul_si@plt>
   2eabc:	mov	w3, w22
   2eac0:	mov	x2, x19
   2eac4:	mov	x1, x21
   2eac8:	mov	x0, x20
   2eacc:	adrp	x4, 73000 <__gmpfr_l2b@@Base+0x200>
   2ead0:	ldp	x19, x20, [sp, #16]
   2ead4:	ldp	x21, x22, [sp, #32]
   2ead8:	ldp	x29, x30, [sp], #48
   2eadc:	ldr	x4, [x4, #3960]
   2eae0:	b	2e938 <mpfr_setsign@@Base+0xa4>

000000000002eae4 <mpfr_div_z@@Base>:
   2eae4:	stp	x29, x30, [sp, #-48]!
   2eae8:	mov	x29, sp
   2eaec:	stp	x19, x20, [sp, #16]
   2eaf0:	mov	x20, x0
   2eaf4:	mov	x19, x2
   2eaf8:	mov	x0, x2
   2eafc:	stp	x21, x22, [sp, #32]
   2eb00:	mov	x21, x1
   2eb04:	mov	w22, w3
   2eb08:	bl	bf10 <__gmpz_fits_slong_p@plt>
   2eb0c:	cbz	w0, 2eb38 <mpfr_div_z@@Base+0x54>
   2eb10:	mov	x0, x19
   2eb14:	bl	baa0 <__gmpz_get_si@plt>
   2eb18:	mov	w3, w22
   2eb1c:	mov	x2, x0
   2eb20:	mov	x1, x21
   2eb24:	mov	x0, x20
   2eb28:	ldp	x19, x20, [sp, #16]
   2eb2c:	ldp	x21, x22, [sp, #32]
   2eb30:	ldp	x29, x30, [sp], #48
   2eb34:	b	c8b0 <mpfr_div_si@plt>
   2eb38:	mov	w3, w22
   2eb3c:	mov	x2, x19
   2eb40:	mov	x1, x21
   2eb44:	mov	x0, x20
   2eb48:	adrp	x4, 73000 <__gmpfr_l2b@@Base+0x200>
   2eb4c:	ldp	x19, x20, [sp, #16]
   2eb50:	ldp	x21, x22, [sp, #32]
   2eb54:	ldp	x29, x30, [sp], #48
   2eb58:	ldr	x4, [x4, #4040]
   2eb5c:	b	2e938 <mpfr_setsign@@Base+0xa4>
   2eb60:	stp	x29, x30, [sp, #-192]!
   2eb64:	mov	x29, sp
   2eb68:	ldr	w5, [x2, #4]
   2eb6c:	stp	x19, x20, [sp, #16]
   2eb70:	mov	x20, x0
   2eb74:	ldr	w19, [x3, #4]
   2eb78:	stp	x21, x22, [sp, #32]
   2eb7c:	stp	x23, x24, [sp, #48]
   2eb80:	stp	x25, x26, [sp, #64]
   2eb84:	stp	x27, x28, [sp, #80]
   2eb88:	mov	x28, x3
   2eb8c:	cbnz	w5, 2ebec <mpfr_div_z@@Base+0x108>
   2eb90:	cbnz	w19, 2ebc0 <mpfr_div_z@@Base+0xdc>
   2eb94:	mov	x0, #0x2                   	// #2
   2eb98:	movk	x0, #0x8000, lsl #48
   2eb9c:	str	x0, [x20, #16]
   2eba0:	mov	w0, w19
   2eba4:	ldp	x19, x20, [sp, #16]
   2eba8:	ldp	x21, x22, [sp, #32]
   2ebac:	ldp	x23, x24, [sp, #48]
   2ebb0:	ldp	x25, x26, [sp, #64]
   2ebb4:	ldp	x27, x28, [sp, #80]
   2ebb8:	ldp	x29, x30, [sp], #192
   2ebbc:	ret
   2ebc0:	mov	w3, #0x0                   	// #0
   2ebc4:	mov	x2, #0x0                   	// #0
   2ebc8:	bl	bad0 <mpfr_mul_ui@plt>
   2ebcc:	ldr	w0, [x28, #4]
   2ebd0:	tbnz	w0, #31, 2ebdc <mpfr_div_z@@Base+0xf8>
   2ebd4:	mov	w19, #0x0                   	// #0
   2ebd8:	b	2eba0 <mpfr_div_z@@Base+0xbc>
   2ebdc:	ldr	w0, [x20, #8]
   2ebe0:	neg	w0, w0
   2ebe4:	str	w0, [x20, #8]
   2ebe8:	b	2ebd4 <mpfr_div_z@@Base+0xf0>
   2ebec:	mov	x24, x2
   2ebf0:	cbnz	w19, 2ec18 <mpfr_div_z@@Base+0x134>
   2ebf4:	mov	w3, #0x0                   	// #0
   2ebf8:	mov	x2, #0x0                   	// #0
   2ebfc:	bl	cd00 <mpfr_div_ui@plt>
   2ec00:	ldr	w0, [x24, #4]
   2ec04:	tbz	w0, #31, 2ebd4 <mpfr_div_z@@Base+0xf0>
   2ec08:	ldr	w0, [x20, #8]
   2ec0c:	neg	w0, w0
   2ec10:	str	w0, [x20, #8]
   2ec14:	b	2eba0 <mpfr_div_z@@Base+0xbc>
   2ec18:	mrs	x21, tpidr_el0
   2ec1c:	mov	x25, x1
   2ec20:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2ec24:	ldr	x1, [x0, #2592]
   2ec28:	add	x0, x0, #0xa20
   2ec2c:	blr	x1
   2ec30:	add	x26, x21, x0
   2ec34:	add	x27, sp, #0x80
   2ec38:	mov	w22, w4
   2ec3c:	ldr	w23, [x21, x0]
   2ec40:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2ec44:	ldr	x1, [x0, #2528]
   2ec48:	add	x0, x0, #0x9e0
   2ec4c:	blr	x1
   2ec50:	add	x1, x21, x0
   2ec54:	ldr	x0, [x21, x0]
   2ec58:	str	x0, [sp, #104]
   2ec5c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2ec60:	ldr	x2, [x0, #2560]
   2ec64:	add	x0, x0, #0xa00
   2ec68:	blr	x2
   2ec6c:	ldr	x2, [x21, x0]
   2ec70:	cmp	w5, #0x0
   2ec74:	cneg	w5, w5, lt  // lt = tstop
   2ec78:	str	x2, [sp, #112]
   2ec7c:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   2ec80:	str	x2, [x1]
   2ec84:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   2ec88:	str	x1, [x21, x0]
   2ec8c:	mov	x0, #0xfffffffffffffff8    	// #-8
   2ec90:	ldr	x1, [x24, #8]
   2ec94:	add	x0, x0, w5, sxtw #3
   2ec98:	sbfiz	x5, x5, #6, #32
   2ec9c:	ldr	x1, [x1, x0]
   2eca0:	mov	x0, x27
   2eca4:	clz	x1, x1
   2eca8:	sub	x5, x5, x1
   2ecac:	ldr	x1, [x25]
   2ecb0:	add	x1, x5, x1
   2ecb4:	bl	cb10 <mpfr_init2@plt>
   2ecb8:	mov	x2, x24
   2ecbc:	mov	x1, x25
   2ecc0:	mov	x0, x27
   2ecc4:	mov	w3, #0x0                   	// #0
   2ecc8:	bl	c560 <mpfr_mul_z@plt>
   2eccc:	cbz	w0, 2ee34 <mpfr_div_z@@Base+0x350>
   2ecd0:	ldr	x0, [x25, #16]
   2ecd4:	str	x0, [sp, #120]
   2ecd8:	ldr	x0, [x25]
   2ecdc:	str	x0, [sp, #160]
   2ece0:	ldr	w0, [x25, #8]
   2ece4:	mov	x2, x24
   2ece8:	str	w0, [sp, #168]
   2ecec:	add	x1, sp, #0xa0
   2ecf0:	ldr	x0, [x25, #24]
   2ecf4:	mov	w3, #0x0                   	// #0
   2ecf8:	str	wzr, [x26]
   2ecfc:	str	xzr, [sp, #176]
   2ed00:	str	x0, [sp, #184]
   2ed04:	mov	x0, x27
   2ed08:	bl	c560 <mpfr_mul_z@plt>
   2ed0c:	mov	x1, x27
   2ed10:	mov	w3, w22
   2ed14:	mov	x2, x28
   2ed18:	mov	x0, x20
   2ed1c:	bl	cd20 <mpfr_div_z@plt>
   2ed20:	mov	w19, w0
   2ed24:	ldr	w1, [x26]
   2ed28:	mov	w0, #0x27                  	// #39
   2ed2c:	tst	w1, w0
   2ed30:	b.eq	2ed4c <mpfr_div_z@@Base+0x268>  // b.none
   2ed34:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2ed38:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2ed3c:	add	x2, x2, #0x7ed
   2ed40:	add	x0, x0, #0x7e4
   2ed44:	mov	w1, #0xe8                  	// #232
   2ed48:	bl	cbd0 <mpfr_assert_fail@plt>
   2ed4c:	ldr	x0, [x20, #16]
   2ed50:	ldr	x1, [sp, #120]
   2ed54:	add	x28, x1, x0
   2ed58:	str	x28, [x20, #16]
   2ed5c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2ed60:	ldr	x1, [x0, #2528]
   2ed64:	add	x0, x0, #0x9e0
   2ed68:	blr	x1
   2ed6c:	ldr	x0, [x21, x0]
   2ed70:	cmp	x28, x0
   2ed74:	b.ge	2ed90 <mpfr_div_z@@Base+0x2ac>  // b.tcont
   2ed78:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2ed7c:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2ed80:	add	x2, x2, #0x811
   2ed84:	add	x0, x0, #0x7e4
   2ed88:	mov	w1, #0xeb                  	// #235
   2ed8c:	bl	cbd0 <mpfr_assert_fail@plt>
   2ed90:	ldr	x1, [x20, #16]
   2ed94:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2ed98:	cmp	x1, x0
   2ed9c:	b.gt	2edb8 <mpfr_div_z@@Base+0x2d4>
   2eda0:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2eda4:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2eda8:	add	x2, x2, #0x832
   2edac:	add	x0, x0, #0x7e4
   2edb0:	mov	w1, #0xec                  	// #236
   2edb4:	bl	cbd0 <mpfr_assert_fail@plt>
   2edb8:	mov	x0, x27
   2edbc:	bl	c0f0 <mpfr_clear@plt>
   2edc0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2edc4:	ldr	x1, [x0, #2592]
   2edc8:	add	x0, x0, #0xa20
   2edcc:	blr	x1
   2edd0:	add	x1, x21, x0
   2edd4:	str	w23, [x21, x0]
   2edd8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2eddc:	ldr	x2, [x0, #2528]
   2ede0:	add	x0, x0, #0x9e0
   2ede4:	blr	x2
   2ede8:	ldr	x2, [sp, #104]
   2edec:	str	x2, [x21, x0]
   2edf0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2edf4:	ldr	x2, [x0, #2560]
   2edf8:	add	x0, x0, #0xa00
   2edfc:	blr	x2
   2ee00:	ldr	x2, [sp, #112]
   2ee04:	str	x2, [x21, x0]
   2ee08:	ldr	x0, [x20, #16]
   2ee0c:	ldr	x2, [sp, #104]
   2ee10:	cmp	x2, x0
   2ee14:	b.gt	2ee50 <mpfr_div_z@@Base+0x36c>
   2ee18:	ldr	x2, [sp, #112]
   2ee1c:	cmp	x2, x0
   2ee20:	b.lt	2ee50 <mpfr_div_z@@Base+0x36c>  // b.tstop
   2ee24:	cbz	w19, 2eba0 <mpfr_div_z@@Base+0xbc>
   2ee28:	orr	w23, w23, #0x8
   2ee2c:	str	w23, [x1]
   2ee30:	b	2eba0 <mpfr_div_z@@Base+0xbc>
   2ee34:	mov	w3, w22
   2ee38:	mov	x2, x28
   2ee3c:	mov	x1, x27
   2ee40:	mov	x0, x20
   2ee44:	bl	cd20 <mpfr_div_z@plt>
   2ee48:	mov	w19, w0
   2ee4c:	b	2edb8 <mpfr_div_z@@Base+0x2d4>
   2ee50:	mov	w1, w19
   2ee54:	mov	w2, w22
   2ee58:	mov	x0, x20
   2ee5c:	bl	cbc0 <mpfr_check_range@plt>
   2ee60:	mov	w19, w0
   2ee64:	b	2eba0 <mpfr_div_z@@Base+0xbc>

000000000002ee68 <mpfr_add_z@@Base>:
   2ee68:	stp	x29, x30, [sp, #-48]!
   2ee6c:	mov	x29, sp
   2ee70:	stp	x19, x20, [sp, #16]
   2ee74:	mov	x20, x0
   2ee78:	mov	x19, x2
   2ee7c:	mov	x0, x2
   2ee80:	stp	x21, x22, [sp, #32]
   2ee84:	mov	x21, x1
   2ee88:	mov	w22, w3
   2ee8c:	bl	bf10 <__gmpz_fits_slong_p@plt>
   2ee90:	cbz	w0, 2eebc <mpfr_add_z@@Base+0x54>
   2ee94:	mov	x0, x19
   2ee98:	bl	baa0 <__gmpz_get_si@plt>
   2ee9c:	mov	w3, w22
   2eea0:	mov	x2, x0
   2eea4:	mov	x1, x21
   2eea8:	mov	x0, x20
   2eeac:	ldp	x19, x20, [sp, #16]
   2eeb0:	ldp	x21, x22, [sp, #32]
   2eeb4:	ldp	x29, x30, [sp], #48
   2eeb8:	b	c880 <mpfr_add_si@plt>
   2eebc:	mov	w3, w22
   2eec0:	mov	x2, x19
   2eec4:	mov	x1, x21
   2eec8:	mov	x0, x20
   2eecc:	adrp	x4, 73000 <__gmpfr_l2b@@Base+0x200>
   2eed0:	ldp	x19, x20, [sp, #16]
   2eed4:	ldp	x21, x22, [sp, #32]
   2eed8:	ldp	x29, x30, [sp], #48
   2eedc:	ldr	x4, [x4, #4008]
   2eee0:	b	2e938 <mpfr_setsign@@Base+0xa4>

000000000002eee4 <mpfr_sub_z@@Base>:
   2eee4:	stp	x29, x30, [sp, #-48]!
   2eee8:	mov	x29, sp
   2eeec:	stp	x19, x20, [sp, #16]
   2eef0:	mov	x20, x0
   2eef4:	mov	x19, x2
   2eef8:	mov	x0, x2
   2eefc:	stp	x21, x22, [sp, #32]
   2ef00:	mov	x21, x1
   2ef04:	mov	w22, w3
   2ef08:	bl	bf10 <__gmpz_fits_slong_p@plt>
   2ef0c:	cbz	w0, 2ef38 <mpfr_sub_z@@Base+0x54>
   2ef10:	mov	x0, x19
   2ef14:	bl	baa0 <__gmpz_get_si@plt>
   2ef18:	mov	w3, w22
   2ef1c:	mov	x2, x0
   2ef20:	mov	x1, x21
   2ef24:	mov	x0, x20
   2ef28:	ldp	x19, x20, [sp, #16]
   2ef2c:	ldp	x21, x22, [sp, #32]
   2ef30:	ldp	x29, x30, [sp], #48
   2ef34:	b	c0e0 <mpfr_sub_si@plt>
   2ef38:	mov	w3, w22
   2ef3c:	mov	x2, x19
   2ef40:	mov	x1, x21
   2ef44:	mov	x0, x20
   2ef48:	adrp	x4, 73000 <__gmpfr_l2b@@Base+0x200>
   2ef4c:	ldp	x19, x20, [sp, #16]
   2ef50:	ldp	x21, x22, [sp, #32]
   2ef54:	ldp	x29, x30, [sp], #48
   2ef58:	ldr	x4, [x4, #3944]
   2ef5c:	b	2e938 <mpfr_setsign@@Base+0xa4>

000000000002ef60 <mpfr_z_sub@@Base>:
   2ef60:	stp	x29, x30, [sp, #-144]!
   2ef64:	mov	x29, sp
   2ef68:	stp	x19, x20, [sp, #16]
   2ef6c:	mov	x19, x1
   2ef70:	stp	x21, x22, [sp, #32]
   2ef74:	mov	x21, x0
   2ef78:	mov	w22, w3
   2ef7c:	mov	x0, x1
   2ef80:	stp	x23, x24, [sp, #48]
   2ef84:	mov	x24, x2
   2ef88:	stp	x25, x26, [sp, #64]
   2ef8c:	stp	x27, x28, [sp, #80]
   2ef90:	bl	bf10 <__gmpz_fits_slong_p@plt>
   2ef94:	cbz	w0, 2efbc <mpfr_z_sub@@Base+0x5c>
   2ef98:	mov	x0, x19
   2ef9c:	bl	baa0 <__gmpz_get_si@plt>
   2efa0:	mov	w3, w22
   2efa4:	mov	x1, x0
   2efa8:	mov	x2, x24
   2efac:	mov	x0, x21
   2efb0:	bl	c660 <mpfr_si_sub@plt>
   2efb4:	mov	w19, w0
   2efb8:	b	2f07c <mpfr_z_sub@@Base+0x11c>
   2efbc:	mrs	x4, tpidr_el0
   2efc0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2efc4:	ldr	x1, [x0, #2592]
   2efc8:	add	x0, x0, #0xa20
   2efcc:	blr	x1
   2efd0:	add	x25, x4, x0
   2efd4:	add	x23, sp, #0x70
   2efd8:	ldr	w20, [x4, x0]
   2efdc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2efe0:	ldr	x1, [x0, #2528]
   2efe4:	add	x0, x0, #0x9e0
   2efe8:	blr	x1
   2efec:	add	x5, x4, x0
   2eff0:	str	x5, [sp, #104]
   2eff4:	ldr	x27, [x4, x0]
   2eff8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2effc:	ldr	x1, [x0, #2560]
   2f000:	add	x0, x0, #0xa00
   2f004:	blr	x1
   2f008:	add	x28, x4, x0
   2f00c:	mov	x1, x19
   2f010:	ldr	x26, [x4, x0]
   2f014:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   2f018:	str	x0, [x5]
   2f01c:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   2f020:	str	x0, [x28]
   2f024:	mov	x0, x23
   2f028:	bl	2e8ac <mpfr_setsign@@Base+0x18>
   2f02c:	mov	w3, w22
   2f030:	mov	x2, x24
   2f034:	mov	x1, x23
   2f038:	mov	x0, x21
   2f03c:	bl	bbf0 <mpfr_sub@plt>
   2f040:	mov	w19, w0
   2f044:	ldr	w0, [x25]
   2f048:	orr	w20, w20, w0
   2f04c:	mov	x0, x23
   2f050:	bl	c0f0 <mpfr_clear@plt>
   2f054:	str	w20, [x25]
   2f058:	ldr	x5, [sp, #104]
   2f05c:	str	x26, [x28]
   2f060:	ldr	x0, [x21, #16]
   2f064:	str	x27, [x5]
   2f068:	cmp	x27, x0
   2f06c:	b.gt	2f09c <mpfr_z_sub@@Base+0x13c>
   2f070:	cmp	x26, x0
   2f074:	b.lt	2f09c <mpfr_z_sub@@Base+0x13c>  // b.tstop
   2f078:	cbnz	w19, 2f0b0 <mpfr_z_sub@@Base+0x150>
   2f07c:	mov	w0, w19
   2f080:	ldp	x19, x20, [sp, #16]
   2f084:	ldp	x21, x22, [sp, #32]
   2f088:	ldp	x23, x24, [sp, #48]
   2f08c:	ldp	x25, x26, [sp, #64]
   2f090:	ldp	x27, x28, [sp, #80]
   2f094:	ldp	x29, x30, [sp], #144
   2f098:	ret
   2f09c:	mov	w2, w22
   2f0a0:	mov	w1, w19
   2f0a4:	mov	x0, x21
   2f0a8:	bl	cbc0 <mpfr_check_range@plt>
   2f0ac:	b	2efb4 <mpfr_z_sub@@Base+0x54>
   2f0b0:	orr	w20, w20, #0x8
   2f0b4:	str	w20, [x25]
   2f0b8:	b	2f07c <mpfr_z_sub@@Base+0x11c>

000000000002f0bc <mpfr_cmp_z@@Base>:
   2f0bc:	stp	x29, x30, [sp, #-96]!
   2f0c0:	mov	x29, sp
   2f0c4:	stp	x19, x20, [sp, #16]
   2f0c8:	mov	x19, x1
   2f0cc:	ldr	x1, [x0, #16]
   2f0d0:	stp	x21, x22, [sp, #32]
   2f0d4:	mov	x21, x0
   2f0d8:	str	x23, [sp, #48]
   2f0dc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2f0e0:	cmp	x1, x0
   2f0e4:	b.gt	2f120 <mpfr_cmp_z@@Base+0x64>
   2f0e8:	ldr	w0, [x19, #4]
   2f0ec:	mov	x2, #0x0                   	// #0
   2f0f0:	cmp	w0, #0x0
   2f0f4:	cset	x1, gt
   2f0f8:	csinv	x1, x1, xzr, ge  // ge = tcont
   2f0fc:	mov	x0, x21
   2f100:	bl	c460 <mpfr_cmp_si_2exp@plt>
   2f104:	mov	w19, w0
   2f108:	mov	w0, w19
   2f10c:	ldp	x19, x20, [sp, #16]
   2f110:	ldp	x21, x22, [sp, #32]
   2f114:	ldr	x23, [sp, #48]
   2f118:	ldp	x29, x30, [sp], #96
   2f11c:	ret
   2f120:	mov	x0, x19
   2f124:	bl	bf10 <__gmpz_fits_slong_p@plt>
   2f128:	cbz	w0, 2f140 <mpfr_cmp_z@@Base+0x84>
   2f12c:	mov	x0, x19
   2f130:	bl	baa0 <__gmpz_get_si@plt>
   2f134:	mov	x2, #0x0                   	// #0
   2f138:	mov	x1, x0
   2f13c:	b	2f0fc <mpfr_cmp_z@@Base+0x40>
   2f140:	ldr	w2, [x19, #4]
   2f144:	cmp	w2, #0x0
   2f148:	cneg	w2, w2, lt  // lt = tstop
   2f14c:	cmp	w2, #0x1
   2f150:	b.le	2f1e4 <mpfr_cmp_z@@Base+0x128>
   2f154:	mov	x0, #0xfffffffffffffff8    	// #-8
   2f158:	ldr	x1, [x19, #8]
   2f15c:	add	x0, x0, w2, sxtw #3
   2f160:	sbfiz	x2, x2, #6, #32
   2f164:	ldr	x1, [x1, x0]
   2f168:	clz	x1, x1
   2f16c:	sub	x1, x2, x1
   2f170:	add	x20, sp, #0x40
   2f174:	mov	x0, x20
   2f178:	bl	cb10 <mpfr_init2@plt>
   2f17c:	mov	w2, #0x0                   	// #0
   2f180:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2f184:	ldr	x1, [x0, #2592]
   2f188:	add	x0, x0, #0xa20
   2f18c:	blr	x1
   2f190:	mrs	x1, tpidr_el0
   2f194:	add	x22, x1, x0
   2f198:	ldr	w23, [x1, x0]
   2f19c:	mov	x1, x19
   2f1a0:	mov	x0, x20
   2f1a4:	bl	c2d0 <mpfr_set_z@plt>
   2f1a8:	cbz	w0, 2f1c4 <mpfr_cmp_z@@Base+0x108>
   2f1ac:	mov	x1, x20
   2f1b0:	mov	x0, x20
   2f1b4:	mov	w3, #0x1                   	// #1
   2f1b8:	mov	x2, #0x2                   	// #2
   2f1bc:	bl	c980 <mpfr_div_2ui@plt>
   2f1c0:	str	w23, [x22]
   2f1c4:	mov	x1, x20
   2f1c8:	mov	w2, #0x1                   	// #1
   2f1cc:	mov	x0, x21
   2f1d0:	bl	ca30 <mpfr_cmp3@plt>
   2f1d4:	mov	w19, w0
   2f1d8:	mov	x0, x20
   2f1dc:	bl	c0f0 <mpfr_clear@plt>
   2f1e0:	b	2f108 <mpfr_cmp_z@@Base+0x4c>
   2f1e4:	mov	x1, #0x40                  	// #64
   2f1e8:	b	2f170 <mpfr_cmp_z@@Base+0xb4>

000000000002f1ec <mpfr_mul_q@@Base>:
   2f1ec:	mov	w4, w3
   2f1f0:	add	x3, x2, #0x10
   2f1f4:	b	2eb60 <mpfr_div_z@@Base+0x7c>

000000000002f1f8 <mpfr_div_q@@Base>:
   2f1f8:	mov	w4, w3
   2f1fc:	mov	x3, x2
   2f200:	add	x2, x2, #0x10
   2f204:	b	2eb60 <mpfr_div_z@@Base+0x7c>

000000000002f208 <mpfr_add_q@@Base>:
   2f208:	stp	x29, x30, [sp, #-208]!
   2f20c:	mov	x29, sp
   2f210:	stp	x23, x24, [sp, #48]
   2f214:	mov	x24, x2
   2f218:	mov	x23, x1
   2f21c:	ldr	x2, [x1, #16]
   2f220:	stp	x19, x20, [sp, #16]
   2f224:	mov	x19, x0
   2f228:	stp	x21, x22, [sp, #32]
   2f22c:	mov	w22, w3
   2f230:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   2f234:	stp	x25, x26, [sp, #64]
   2f238:	cmp	x2, x3
   2f23c:	stp	x27, x28, [sp, #80]
   2f240:	b.gt	2f314 <mpfr_add_q@@Base+0x10c>
   2f244:	mov	x4, #0x2                   	// #2
   2f248:	movk	x4, #0x8000, lsl #48
   2f24c:	cmp	x2, x4
   2f250:	b.ne	2f2a8 <mpfr_add_q@@Base+0xa0>  // b.any
   2f254:	mov	x0, #0x2                   	// #2
   2f258:	movk	x0, #0x8000, lsl #48
   2f25c:	str	x0, [x19, #16]
   2f260:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2f264:	ldr	x1, [x0, #2592]
   2f268:	add	x0, x0, #0xa20
   2f26c:	blr	x1
   2f270:	mrs	x1, tpidr_el0
   2f274:	add	x0, x1, x0
   2f278:	ldr	w1, [x0]
   2f27c:	orr	w1, w1, #0x4
   2f280:	str	w1, [x0]
   2f284:	mov	w21, #0x0                   	// #0
   2f288:	mov	w0, w21
   2f28c:	ldp	x19, x20, [sp, #16]
   2f290:	ldp	x21, x22, [sp, #32]
   2f294:	ldp	x23, x24, [sp, #48]
   2f298:	ldp	x25, x26, [sp, #64]
   2f29c:	ldp	x27, x28, [sp, #80]
   2f2a0:	ldp	x29, x30, [sp], #208
   2f2a4:	ret
   2f2a8:	cmp	x2, x3
   2f2ac:	b.ne	2f2e8 <mpfr_add_q@@Base+0xe0>  // b.any
   2f2b0:	ldr	w0, [x24, #20]
   2f2b4:	ldr	w1, [x1, #8]
   2f2b8:	cbnz	w0, 2f2d8 <mpfr_add_q@@Base+0xd0>
   2f2bc:	ldr	w2, [x24, #4]
   2f2c0:	cmp	w2, #0x0
   2f2c4:	cset	w0, gt
   2f2c8:	csinv	w0, w0, wzr, ge  // ge = tcont
   2f2cc:	mul	w0, w0, w1
   2f2d0:	cmp	w0, #0x0
   2f2d4:	b.le	2f254 <mpfr_add_q@@Base+0x4c>
   2f2d8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2f2dc:	str	w1, [x19, #8]
   2f2e0:	str	x0, [x19, #16]
   2f2e4:	b	2f284 <mpfr_add_q@@Base+0x7c>
   2f2e8:	ldr	w2, [x24, #4]
   2f2ec:	cbnz	w2, 2f304 <mpfr_add_q@@Base+0xfc>
   2f2f0:	ldr	w3, [x1, #8]
   2f2f4:	mov	w2, w22
   2f2f8:	bl	c730 <mpfr_set4@plt>
   2f2fc:	mov	w21, w0
   2f300:	b	2f288 <mpfr_add_q@@Base+0x80>
   2f304:	mov	w2, w22
   2f308:	mov	x1, x24
   2f30c:	bl	c8e0 <mpfr_set_q@plt>
   2f310:	b	2f2fc <mpfr_add_q@@Base+0xf4>
   2f314:	mrs	x20, tpidr_el0
   2f318:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2f31c:	ldr	x1, [x0, #2592]
   2f320:	add	x0, x0, #0xa20
   2f324:	blr	x1
   2f328:	ldr	x21, [x19]
   2f32c:	add	x26, sp, #0x90
   2f330:	ldr	w0, [x20, x0]
   2f334:	add	x25, sp, #0xb0
   2f338:	str	w0, [sp, #108]
   2f33c:	add	x21, x21, #0xa
   2f340:	mov	x27, #0x40                  	// #64
   2f344:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2f348:	ldr	x1, [x0, #2528]
   2f34c:	add	x0, x0, #0x9e0
   2f350:	blr	x1
   2f354:	add	x1, x20, x0
   2f358:	ldr	x28, [x20, x0]
   2f35c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2f360:	ldr	x2, [x0, #2560]
   2f364:	add	x0, x0, #0xa00
   2f368:	blr	x2
   2f36c:	ldr	x2, [x20, x0]
   2f370:	str	x2, [sp, #112]
   2f374:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   2f378:	str	x2, [x1]
   2f37c:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   2f380:	str	x1, [x20, x0]
   2f384:	mov	x1, x21
   2f388:	mov	x0, x26
   2f38c:	bl	cb10 <mpfr_init2@plt>
   2f390:	mov	x0, x25
   2f394:	mov	x1, x21
   2f398:	bl	cb10 <mpfr_init2@plt>
   2f39c:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2f3a0:	add	x0, x0, #0x86c
   2f3a4:	str	x0, [sp, #120]
   2f3a8:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2f3ac:	add	x0, x0, #0x7e4
   2f3b0:	str	x0, [sp, #128]
   2f3b4:	mov	x1, x24
   2f3b8:	mov	x0, x25
   2f3bc:	mov	w2, #0x0                   	// #0
   2f3c0:	bl	c8e0 <mpfr_set_q@plt>
   2f3c4:	cbnz	w0, 2f460 <mpfr_add_q@@Base+0x258>
   2f3c8:	mov	w3, w22
   2f3cc:	mov	x2, x25
   2f3d0:	mov	x1, x23
   2f3d4:	mov	x0, x19
   2f3d8:	bl	c230 <mpfr_add@plt>
   2f3dc:	mov	w21, w0
   2f3e0:	mov	x0, x26
   2f3e4:	bl	c0f0 <mpfr_clear@plt>
   2f3e8:	mov	x0, x25
   2f3ec:	bl	c0f0 <mpfr_clear@plt>
   2f3f0:	ldr	w2, [sp, #108]
   2f3f4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2f3f8:	ldr	x1, [x0, #2592]
   2f3fc:	add	x0, x0, #0xa20
   2f400:	blr	x1
   2f404:	add	x1, x20, x0
   2f408:	str	w2, [x20, x0]
   2f40c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2f410:	ldr	x2, [x0, #2528]
   2f414:	add	x0, x0, #0x9e0
   2f418:	blr	x2
   2f41c:	str	x28, [x20, x0]
   2f420:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2f424:	ldr	x2, [x0, #2560]
   2f428:	add	x0, x0, #0xa00
   2f42c:	blr	x2
   2f430:	ldr	x2, [sp, #112]
   2f434:	str	x2, [x20, x0]
   2f438:	ldr	x0, [x19, #16]
   2f43c:	cmp	x28, x0
   2f440:	b.gt	2f570 <mpfr_add_q@@Base+0x368>
   2f444:	cmp	x2, x0
   2f448:	b.lt	2f570 <mpfr_add_q@@Base+0x368>  // b.tstop
   2f44c:	cbz	w21, 2f288 <mpfr_add_q@@Base+0x80>
   2f450:	ldr	w0, [sp, #108]
   2f454:	orr	w0, w0, #0x8
   2f458:	str	w0, [x1]
   2f45c:	b	2f288 <mpfr_add_q@@Base+0x80>
   2f460:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2f464:	ldr	x1, [x0, #2592]
   2f468:	add	x0, x0, #0xa20
   2f46c:	blr	x1
   2f470:	add	x4, x20, x0
   2f474:	mov	x2, x25
   2f478:	mov	x1, x23
   2f47c:	mov	w3, #0x0                   	// #0
   2f480:	str	wzr, [x20, x0]
   2f484:	mov	x0, x26
   2f488:	str	x4, [sp, #136]
   2f48c:	bl	c230 <mpfr_add@plt>
   2f490:	ldr	x4, [sp, #136]
   2f494:	ldr	w0, [x4]
   2f498:	tbnz	w0, #1, 2f4a0 <mpfr_add_q@@Base+0x298>
   2f49c:	tbz	w0, #0, 2f4ac <mpfr_add_q@@Base+0x2a4>
   2f4a0:	ldp	x2, x0, [sp, #120]
   2f4a4:	mov	w1, #0x144                 	// #324
   2f4a8:	bl	cbd0 <mpfr_assert_fail@plt>
   2f4ac:	ldr	x1, [sp, #160]
   2f4b0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2f4b4:	cmp	x1, x0
   2f4b8:	b.eq	2f51c <mpfr_add_q@@Base+0x314>  // b.none
   2f4bc:	ldr	x2, [sp, #192]
   2f4c0:	sub	x0, x21, #0x1
   2f4c4:	subs	x2, x2, x1
   2f4c8:	csel	x2, x2, xzr, pl  // pl = nfrst
   2f4cc:	sub	x2, x0, x2
   2f4d0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2f4d4:	cmp	x1, x0
   2f4d8:	b.le	2f51c <mpfr_add_q@@Base+0x314>
   2f4dc:	ldr	x1, [sp, #144]
   2f4e0:	cmp	w22, #0x0
   2f4e4:	ldr	x0, [sp, #168]
   2f4e8:	sub	x1, x1, #0x1
   2f4ec:	ldr	x3, [x19]
   2f4f0:	asr	x1, x1, #6
   2f4f4:	add	x1, x1, #0x1
   2f4f8:	cinc	x3, x3, eq  // eq = none
   2f4fc:	bl	c400 <mpfr_round_p@plt>
   2f500:	cbz	w0, 2f51c <mpfr_add_q@@Base+0x314>
   2f504:	ldr	w3, [sp, #152]
   2f508:	mov	w2, w22
   2f50c:	mov	x1, x26
   2f510:	mov	x0, x19
   2f514:	bl	c730 <mpfr_set4@plt>
   2f518:	b	2f3dc <mpfr_add_q@@Base+0x1d4>
   2f51c:	mov	x0, #0xfffffffffffffeff    	// #-257
   2f520:	movk	x0, #0x7fff, lsl #48
   2f524:	sub	x0, x0, x21
   2f528:	cmp	x0, x27
   2f52c:	b.ge	2f548 <mpfr_add_q@@Base+0x340>  // b.tcont
   2f530:	adrp	x2, 53000 <mpfr_free_pool@@Base+0x1eec>
   2f534:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2f538:	add	x2, x2, #0x952
   2f53c:	add	x0, x0, #0x7e4
   2f540:	mov	w1, #0x153                 	// #339
   2f544:	bl	cbd0 <mpfr_assert_fail@plt>
   2f548:	add	x21, x21, x27
   2f54c:	mov	x27, #0x2                   	// #2
   2f550:	mov	x1, x21
   2f554:	mov	x0, x26
   2f558:	bl	bf50 <mpfr_set_prec@plt>
   2f55c:	sdiv	x27, x21, x27
   2f560:	mov	x1, x21
   2f564:	mov	x0, x25
   2f568:	bl	bf50 <mpfr_set_prec@plt>
   2f56c:	b	2f3b4 <mpfr_add_q@@Base+0x1ac>
   2f570:	mov	w2, w22
   2f574:	mov	w1, w21
   2f578:	mov	x0, x19
   2f57c:	bl	cbc0 <mpfr_check_range@plt>
   2f580:	b	2f2fc <mpfr_add_q@@Base+0xf4>

000000000002f584 <mpfr_sub_q@@Base>:
   2f584:	stp	x29, x30, [sp, #-208]!
   2f588:	mov	x29, sp
   2f58c:	stp	x23, x24, [sp, #48]
   2f590:	mov	x24, x2
   2f594:	mov	x23, x1
   2f598:	ldr	x2, [x1, #16]
   2f59c:	stp	x19, x20, [sp, #16]
   2f5a0:	mov	w20, w3
   2f5a4:	stp	x21, x22, [sp, #32]
   2f5a8:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   2f5ac:	mov	x19, x0
   2f5b0:	stp	x25, x26, [sp, #64]
   2f5b4:	cmp	x2, x3
   2f5b8:	stp	x27, x28, [sp, #80]
   2f5bc:	b.gt	2f6bc <mpfr_sub_q@@Base+0x138>
   2f5c0:	mov	x4, #0x2                   	// #2
   2f5c4:	movk	x4, #0x8000, lsl #48
   2f5c8:	cmp	x2, x4
   2f5cc:	b.ne	2f624 <mpfr_sub_q@@Base+0xa0>  // b.any
   2f5d0:	mov	x0, #0x2                   	// #2
   2f5d4:	movk	x0, #0x8000, lsl #48
   2f5d8:	str	x0, [x19, #16]
   2f5dc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2f5e0:	ldr	x1, [x0, #2592]
   2f5e4:	add	x0, x0, #0xa20
   2f5e8:	blr	x1
   2f5ec:	mrs	x1, tpidr_el0
   2f5f0:	add	x0, x1, x0
   2f5f4:	ldr	w1, [x0]
   2f5f8:	orr	w1, w1, #0x4
   2f5fc:	str	w1, [x0]
   2f600:	mov	w22, #0x0                   	// #0
   2f604:	mov	w0, w22
   2f608:	ldp	x19, x20, [sp, #16]
   2f60c:	ldp	x21, x22, [sp, #32]
   2f610:	ldp	x23, x24, [sp, #48]
   2f614:	ldp	x25, x26, [sp, #64]
   2f618:	ldp	x27, x28, [sp, #80]
   2f61c:	ldp	x29, x30, [sp], #208
   2f620:	ret
   2f624:	cmp	x2, x3
   2f628:	b.ne	2f660 <mpfr_sub_q@@Base+0xdc>  // b.any
   2f62c:	ldr	w0, [x24, #20]
   2f630:	ldr	w1, [x1, #8]
   2f634:	cbnz	w0, 2f650 <mpfr_sub_q@@Base+0xcc>
   2f638:	ldr	w2, [x24, #4]
   2f63c:	cmp	w2, #0x0
   2f640:	cset	w0, gt
   2f644:	csinv	w0, w0, wzr, ge  // ge = tcont
   2f648:	mul	w0, w0, w1
   2f64c:	tbz	w0, #31, 2f5d0 <mpfr_sub_q@@Base+0x4c>
   2f650:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2f654:	str	w1, [x19, #8]
   2f658:	str	x0, [x19, #16]
   2f65c:	b	2f600 <mpfr_sub_q@@Base+0x7c>
   2f660:	ldr	w2, [x24, #4]
   2f664:	cbnz	w2, 2f67c <mpfr_sub_q@@Base+0xf8>
   2f668:	ldr	w3, [x1, #8]
   2f66c:	mov	w2, w20
   2f670:	bl	c730 <mpfr_set4@plt>
   2f674:	mov	w22, w0
   2f678:	b	2f604 <mpfr_sub_q@@Base+0x80>
   2f67c:	cmp	w20, #0x2
   2f680:	b.eq	2f6b4 <mpfr_sub_q@@Base+0x130>  // b.none
   2f684:	cmp	w20, #0x3
   2f688:	mov	w0, #0x2                   	// #2
   2f68c:	csel	w20, w20, w0, ne  // ne = any
   2f690:	mov	x1, x24
   2f694:	mov	w2, w20
   2f698:	mov	x0, x19
   2f69c:	bl	c8e0 <mpfr_set_q@plt>
   2f6a0:	ldr	w1, [x19, #8]
   2f6a4:	neg	w22, w0
   2f6a8:	neg	w1, w1
   2f6ac:	str	w1, [x19, #8]
   2f6b0:	b	2f604 <mpfr_sub_q@@Base+0x80>
   2f6b4:	mov	w20, #0x3                   	// #3
   2f6b8:	b	2f690 <mpfr_sub_q@@Base+0x10c>
   2f6bc:	mrs	x21, tpidr_el0
   2f6c0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2f6c4:	ldr	x1, [x0, #2592]
   2f6c8:	add	x0, x0, #0xa20
   2f6cc:	blr	x1
   2f6d0:	ldr	x22, [x19]
   2f6d4:	add	x26, sp, #0x90
   2f6d8:	ldr	w0, [x21, x0]
   2f6dc:	add	x25, sp, #0xb0
   2f6e0:	str	w0, [sp, #108]
   2f6e4:	add	x22, x22, #0xa
   2f6e8:	mov	x27, #0x40                  	// #64
   2f6ec:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2f6f0:	ldr	x1, [x0, #2528]
   2f6f4:	add	x0, x0, #0x9e0
   2f6f8:	blr	x1
   2f6fc:	add	x1, x21, x0
   2f700:	ldr	x28, [x21, x0]
   2f704:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2f708:	ldr	x2, [x0, #2560]
   2f70c:	add	x0, x0, #0xa00
   2f710:	blr	x2
   2f714:	ldr	x2, [x21, x0]
   2f718:	str	x2, [sp, #112]
   2f71c:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   2f720:	str	x2, [x1]
   2f724:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   2f728:	str	x1, [x21, x0]
   2f72c:	mov	x1, x22
   2f730:	mov	x0, x26
   2f734:	bl	cb10 <mpfr_init2@plt>
   2f738:	mov	x0, x25
   2f73c:	mov	x1, x22
   2f740:	bl	cb10 <mpfr_init2@plt>
   2f744:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2f748:	add	x0, x0, #0x86c
   2f74c:	str	x0, [sp, #120]
   2f750:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2f754:	add	x0, x0, #0x7e4
   2f758:	str	x0, [sp, #128]
   2f75c:	mov	x1, x24
   2f760:	mov	x0, x25
   2f764:	mov	w2, #0x0                   	// #0
   2f768:	bl	c8e0 <mpfr_set_q@plt>
   2f76c:	cbnz	w0, 2f808 <mpfr_sub_q@@Base+0x284>
   2f770:	mov	w3, w20
   2f774:	mov	x2, x25
   2f778:	mov	x1, x23
   2f77c:	mov	x0, x19
   2f780:	bl	bbf0 <mpfr_sub@plt>
   2f784:	mov	w22, w0
   2f788:	mov	x0, x26
   2f78c:	bl	c0f0 <mpfr_clear@plt>
   2f790:	mov	x0, x25
   2f794:	bl	c0f0 <mpfr_clear@plt>
   2f798:	ldr	w2, [sp, #108]
   2f79c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2f7a0:	ldr	x1, [x0, #2592]
   2f7a4:	add	x0, x0, #0xa20
   2f7a8:	blr	x1
   2f7ac:	add	x1, x21, x0
   2f7b0:	str	w2, [x21, x0]
   2f7b4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2f7b8:	ldr	x2, [x0, #2528]
   2f7bc:	add	x0, x0, #0x9e0
   2f7c0:	blr	x2
   2f7c4:	str	x28, [x21, x0]
   2f7c8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2f7cc:	ldr	x2, [x0, #2560]
   2f7d0:	add	x0, x0, #0xa00
   2f7d4:	blr	x2
   2f7d8:	ldr	x2, [sp, #112]
   2f7dc:	str	x2, [x21, x0]
   2f7e0:	ldr	x0, [x19, #16]
   2f7e4:	cmp	x28, x0
   2f7e8:	b.gt	2f7f4 <mpfr_sub_q@@Base+0x270>
   2f7ec:	cmp	x2, x0
   2f7f0:	b.ge	2f90c <mpfr_sub_q@@Base+0x388>  // b.tcont
   2f7f4:	mov	w2, w20
   2f7f8:	mov	w1, w22
   2f7fc:	mov	x0, x19
   2f800:	bl	cbc0 <mpfr_check_range@plt>
   2f804:	b	2f674 <mpfr_sub_q@@Base+0xf0>
   2f808:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2f80c:	ldr	x1, [x0, #2592]
   2f810:	add	x0, x0, #0xa20
   2f814:	blr	x1
   2f818:	add	x4, x21, x0
   2f81c:	mov	x2, x25
   2f820:	mov	x1, x23
   2f824:	mov	w3, #0x0                   	// #0
   2f828:	str	wzr, [x21, x0]
   2f82c:	mov	x0, x26
   2f830:	str	x4, [sp, #136]
   2f834:	bl	bbf0 <mpfr_sub@plt>
   2f838:	ldr	x4, [sp, #136]
   2f83c:	ldr	w0, [x4]
   2f840:	tbnz	w0, #1, 2f848 <mpfr_sub_q@@Base+0x2c4>
   2f844:	tbz	w0, #0, 2f854 <mpfr_sub_q@@Base+0x2d0>
   2f848:	ldp	x2, x0, [sp, #120]
   2f84c:	mov	w1, #0x1a3                 	// #419
   2f850:	bl	cbd0 <mpfr_assert_fail@plt>
   2f854:	ldr	x1, [sp, #160]
   2f858:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2f85c:	cmp	x1, x0
   2f860:	b.le	2f8b8 <mpfr_sub_q@@Base+0x334>
   2f864:	ldr	x3, [x19]
   2f868:	cmp	w20, #0x0
   2f86c:	ldr	x0, [sp, #192]
   2f870:	cinc	x3, x3, eq  // eq = none
   2f874:	sub	x2, x22, #0x1
   2f878:	subs	x0, x0, x1
   2f87c:	ldr	x1, [sp, #144]
   2f880:	csel	x0, x0, xzr, pl  // pl = nfrst
   2f884:	sub	x2, x2, x0
   2f888:	ldr	x0, [sp, #168]
   2f88c:	sub	x1, x1, #0x1
   2f890:	asr	x1, x1, #6
   2f894:	add	x1, x1, #0x1
   2f898:	bl	c400 <mpfr_round_p@plt>
   2f89c:	cbz	w0, 2f8b8 <mpfr_sub_q@@Base+0x334>
   2f8a0:	ldr	w3, [sp, #152]
   2f8a4:	mov	w2, w20
   2f8a8:	mov	x1, x26
   2f8ac:	mov	x0, x19
   2f8b0:	bl	c730 <mpfr_set4@plt>
   2f8b4:	b	2f784 <mpfr_sub_q@@Base+0x200>
   2f8b8:	mov	x0, #0xfffffffffffffeff    	// #-257
   2f8bc:	movk	x0, #0x7fff, lsl #48
   2f8c0:	sub	x0, x0, x22
   2f8c4:	cmp	x0, x27
   2f8c8:	b.ge	2f8e4 <mpfr_sub_q@@Base+0x360>  // b.tcont
   2f8cc:	adrp	x2, 53000 <mpfr_free_pool@@Base+0x1eec>
   2f8d0:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2f8d4:	add	x2, x2, #0x952
   2f8d8:	add	x0, x0, #0x7e4
   2f8dc:	mov	w1, #0x1b3                 	// #435
   2f8e0:	bl	cbd0 <mpfr_assert_fail@plt>
   2f8e4:	add	x22, x22, x27
   2f8e8:	mov	x27, #0x2                   	// #2
   2f8ec:	mov	x1, x22
   2f8f0:	mov	x0, x26
   2f8f4:	bl	bf50 <mpfr_set_prec@plt>
   2f8f8:	sdiv	x27, x22, x27
   2f8fc:	mov	x1, x22
   2f900:	mov	x0, x25
   2f904:	bl	bf50 <mpfr_set_prec@plt>
   2f908:	b	2f75c <mpfr_sub_q@@Base+0x1d8>
   2f90c:	cbz	w22, 2f604 <mpfr_sub_q@@Base+0x80>
   2f910:	ldr	w0, [sp, #108]
   2f914:	orr	w0, w0, #0x8
   2f918:	str	w0, [x1]
   2f91c:	b	2f604 <mpfr_sub_q@@Base+0x80>

000000000002f920 <mpfr_cmp_q@@Base>:
   2f920:	stp	x29, x30, [sp, #-128]!
   2f924:	mov	x29, sp
   2f928:	ldr	w2, [x1, #20]
   2f92c:	stp	x19, x20, [sp, #16]
   2f930:	mov	x20, x0
   2f934:	mov	x19, x1
   2f938:	stp	x21, x22, [sp, #32]
   2f93c:	stp	x23, x24, [sp, #48]
   2f940:	stp	x25, x26, [sp, #64]
   2f944:	str	x27, [sp, #80]
   2f948:	cbnz	w2, 2f9c8 <mpfr_cmp_q@@Base+0xa8>
   2f94c:	add	x21, sp, #0x60
   2f950:	mov	x1, #0x1                   	// #1
   2f954:	mov	x0, x21
   2f958:	bl	cb10 <mpfr_init2@plt>
   2f95c:	mov	w2, #0x0                   	// #0
   2f960:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2f964:	ldr	x1, [x0, #2592]
   2f968:	add	x0, x0, #0xa20
   2f96c:	blr	x1
   2f970:	mrs	x1, tpidr_el0
   2f974:	add	x22, x1, x0
   2f978:	ldr	w23, [x1, x0]
   2f97c:	mov	x1, x19
   2f980:	mov	x0, x21
   2f984:	bl	c8e0 <mpfr_set_q@plt>
   2f988:	mov	x1, x21
   2f98c:	mov	w2, #0x1                   	// #1
   2f990:	mov	x0, x20
   2f994:	str	w23, [x22]
   2f998:	bl	ca30 <mpfr_cmp3@plt>
   2f99c:	mov	w19, w0
   2f9a0:	mov	x0, x21
   2f9a4:	bl	c0f0 <mpfr_clear@plt>
   2f9a8:	mov	w0, w19
   2f9ac:	ldp	x19, x20, [sp, #16]
   2f9b0:	ldp	x21, x22, [sp, #32]
   2f9b4:	ldp	x23, x24, [sp, #48]
   2f9b8:	ldp	x25, x26, [sp, #64]
   2f9bc:	ldr	x27, [sp, #80]
   2f9c0:	ldp	x29, x30, [sp], #128
   2f9c4:	ret
   2f9c8:	ldr	x1, [x20, #16]
   2f9cc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2f9d0:	cmp	x1, x0
   2f9d4:	b.gt	2f9fc <mpfr_cmp_q@@Base+0xdc>
   2f9d8:	ldr	w0, [x19, #4]
   2f9dc:	mov	x2, #0x0                   	// #0
   2f9e0:	cmp	w0, #0x0
   2f9e4:	mov	x0, x20
   2f9e8:	cset	x1, gt
   2f9ec:	csinv	x1, x1, xzr, ge  // ge = tcont
   2f9f0:	bl	c460 <mpfr_cmp_si_2exp@plt>
   2f9f4:	mov	w19, w0
   2f9f8:	b	2f9a8 <mpfr_cmp_q@@Base+0x88>
   2f9fc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2fa00:	ldr	x1, [x0, #2592]
   2fa04:	add	x0, x0, #0xa20
   2fa08:	blr	x1
   2fa0c:	add	x21, sp, #0x60
   2fa10:	mrs	x1, tpidr_el0
   2fa14:	add	x26, x1, x0
   2fa18:	ldr	w27, [x1, x0]
   2fa1c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2fa20:	ldr	x3, [x0, #2528]
   2fa24:	add	x0, x0, #0x9e0
   2fa28:	blr	x3
   2fa2c:	add	x23, x1, x0
   2fa30:	ldr	x25, [x1, x0]
   2fa34:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2fa38:	ldr	x3, [x0, #2560]
   2fa3c:	add	x0, x0, #0xa00
   2fa40:	blr	x3
   2fa44:	add	x22, x1, x0
   2fa48:	cmp	w2, #0x0
   2fa4c:	ldr	x24, [x1, x0]
   2fa50:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   2fa54:	cneg	w2, w2, lt  // lt = tstop
   2fa58:	str	x0, [x23]
   2fa5c:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   2fa60:	str	x0, [x22]
   2fa64:	mov	x0, #0xfffffffffffffff8    	// #-8
   2fa68:	ldr	x1, [x19, #24]
   2fa6c:	add	x0, x0, w2, sxtw #3
   2fa70:	sbfiz	x2, x2, #6, #32
   2fa74:	ldr	x1, [x1, x0]
   2fa78:	mov	x0, x21
   2fa7c:	clz	x1, x1
   2fa80:	sub	x2, x2, x1
   2fa84:	ldr	x1, [x20]
   2fa88:	add	x1, x2, x1
   2fa8c:	bl	cb10 <mpfr_init2@plt>
   2fa90:	add	x2, x19, #0x10
   2fa94:	mov	w3, #0x0                   	// #0
   2fa98:	mov	x1, x20
   2fa9c:	mov	x0, x21
   2faa0:	bl	c560 <mpfr_mul_z@plt>
   2faa4:	mov	x1, x19
   2faa8:	mov	x0, x21
   2faac:	bl	bc30 <mpfr_cmp_z@plt>
   2fab0:	mov	w19, w0
   2fab4:	mov	x0, x21
   2fab8:	bl	c0f0 <mpfr_clear@plt>
   2fabc:	str	x24, [x22]
   2fac0:	str	x25, [x23]
   2fac4:	str	w27, [x26]
   2fac8:	b	2f9a8 <mpfr_cmp_q@@Base+0x88>

000000000002facc <mpfr_cmp_f@@Base>:
   2facc:	stp	x29, x30, [sp, #-128]!
   2fad0:	mov	x29, sp
   2fad4:	ldr	w2, [x1, #4]
   2fad8:	stp	x21, x22, [sp, #32]
   2fadc:	mov	x21, x1
   2fae0:	ldr	x1, [x0, #16]
   2fae4:	stp	x19, x20, [sp, #16]
   2fae8:	mov	x19, x0
   2faec:	stp	x23, x24, [sp, #48]
   2faf0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2faf4:	cmp	x1, x0
   2faf8:	stp	x25, x26, [sp, #64]
   2fafc:	str	x27, [sp, #80]
   2fb00:	b.gt	2fb40 <mpfr_cmp_f@@Base+0x74>
   2fb04:	cmp	w2, #0x0
   2fb08:	mov	x0, x19
   2fb0c:	cset	x1, gt
   2fb10:	mov	x2, #0x0                   	// #0
   2fb14:	csinv	x1, x1, xzr, ge  // ge = tcont
   2fb18:	bl	c460 <mpfr_cmp_si_2exp@plt>
   2fb1c:	mov	w19, w0
   2fb20:	mov	w0, w19
   2fb24:	ldp	x19, x20, [sp, #16]
   2fb28:	ldp	x21, x22, [sp, #32]
   2fb2c:	ldp	x23, x24, [sp, #48]
   2fb30:	ldp	x25, x26, [sp, #64]
   2fb34:	ldr	x27, [sp, #80]
   2fb38:	ldp	x29, x30, [sp], #128
   2fb3c:	ret
   2fb40:	mrs	x3, tpidr_el0
   2fb44:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2fb48:	ldr	x1, [x0, #2592]
   2fb4c:	add	x0, x0, #0xa20
   2fb50:	blr	x1
   2fb54:	add	x26, x3, x0
   2fb58:	add	x20, sp, #0x60
   2fb5c:	ldr	w27, [x3, x0]
   2fb60:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2fb64:	ldr	x1, [x0, #2528]
   2fb68:	add	x0, x0, #0x9e0
   2fb6c:	blr	x1
   2fb70:	add	x23, x3, x0
   2fb74:	ldr	x25, [x3, x0]
   2fb78:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2fb7c:	ldr	x1, [x0, #2560]
   2fb80:	add	x0, x0, #0xa00
   2fb84:	blr	x1
   2fb88:	cmp	w2, #0x0
   2fb8c:	add	x22, x3, x0
   2fb90:	cneg	w2, w2, lt  // lt = tstop
   2fb94:	ldr	x24, [x3, x0]
   2fb98:	lsl	w2, w2, #6
   2fb9c:	add	w2, w2, #0x1
   2fba0:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   2fba4:	str	x0, [x23]
   2fba8:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   2fbac:	sxtw	x1, w2
   2fbb0:	str	x0, [x22]
   2fbb4:	mov	x0, x20
   2fbb8:	bl	cb10 <mpfr_init2@plt>
   2fbbc:	mov	x1, x21
   2fbc0:	mov	w2, #0x0                   	// #0
   2fbc4:	mov	x0, x20
   2fbc8:	bl	bdc0 <mpfr_set_f@plt>
   2fbcc:	mov	x1, x20
   2fbd0:	mov	w2, #0x1                   	// #1
   2fbd4:	mov	x0, x19
   2fbd8:	bl	ca30 <mpfr_cmp3@plt>
   2fbdc:	mov	w19, w0
   2fbe0:	mov	x0, x20
   2fbe4:	bl	c0f0 <mpfr_clear@plt>
   2fbe8:	str	x24, [x22]
   2fbec:	str	x25, [x23]
   2fbf0:	str	w27, [x26]
   2fbf4:	b	2fb20 <mpfr_cmp_f@@Base+0x54>

000000000002fbf8 <mpfr_acos@@Base>:
   2fbf8:	stp	x29, x30, [sp, #-208]!
   2fbfc:	mov	x29, sp
   2fc00:	stp	x27, x28, [sp, #80]
   2fc04:	mov	x28, x0
   2fc08:	ldr	x0, [x1, #16]
   2fc0c:	stp	x19, x20, [sp, #16]
   2fc10:	mov	w20, w2
   2fc14:	stp	x21, x22, [sp, #32]
   2fc18:	mov	x21, x1
   2fc1c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   2fc20:	stp	x23, x24, [sp, #48]
   2fc24:	cmp	x0, x1
   2fc28:	stp	x25, x26, [sp, #64]
   2fc2c:	b.gt	2fd54 <mpfr_acos@@Base+0x15c>
   2fc30:	mov	x1, #0x7ffffffffffffffe    	// #9223372036854775806
   2fc34:	add	x0, x0, x1
   2fc38:	cmp	x0, #0x1
   2fc3c:	mrs	x1, tpidr_el0
   2fc40:	b.hi	2fc78 <mpfr_acos@@Base+0x80>  // b.pmore
   2fc44:	mov	x0, #0x2                   	// #2
   2fc48:	movk	x0, #0x8000, lsl #48
   2fc4c:	str	x0, [x28, #16]
   2fc50:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2fc54:	ldr	x2, [x0, #2592]
   2fc58:	add	x0, x0, #0xa20
   2fc5c:	blr	x2
   2fc60:	add	x0, x1, x0
   2fc64:	mov	w23, #0x0                   	// #0
   2fc68:	ldr	w1, [x0]
   2fc6c:	orr	w1, w1, #0x4
   2fc70:	str	w1, [x0]
   2fc74:	b	2fd28 <mpfr_acos@@Base+0x130>
   2fc78:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2fc7c:	ldr	x3, [x0, #2592]
   2fc80:	add	x0, x0, #0xa20
   2fc84:	blr	x3
   2fc88:	ldr	w19, [x1, x0]
   2fc8c:	add	x21, x1, x0
   2fc90:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2fc94:	ldr	x3, [x0, #2528]
   2fc98:	add	x0, x0, #0x9e0
   2fc9c:	blr	x3
   2fca0:	add	x26, x1, x0
   2fca4:	ldr	x24, [x1, x0]
   2fca8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2fcac:	ldr	x3, [x0, #2560]
   2fcb0:	add	x0, x0, #0xa00
   2fcb4:	blr	x3
   2fcb8:	add	x25, x1, x0
   2fcbc:	ldr	x22, [x1, x0]
   2fcc0:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   2fcc4:	str	x0, [x26]
   2fcc8:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   2fccc:	str	x0, [x25]
   2fcd0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2fcd4:	ldr	x3, [x0, #2640]
   2fcd8:	add	x0, x0, #0xa50
   2fcdc:	blr	x3
   2fce0:	add	x1, x1, x0
   2fce4:	mov	x0, x28
   2fce8:	bl	c410 <mpfr_cache@plt>
   2fcec:	mov	w3, w20
   2fcf0:	mov	w23, w0
   2fcf4:	mov	x1, x28
   2fcf8:	mov	x0, x28
   2fcfc:	mov	x2, #0x1                   	// #1
   2fd00:	bl	c980 <mpfr_div_2ui@plt>
   2fd04:	ldr	x0, [x28, #16]
   2fd08:	str	w19, [x21]
   2fd0c:	str	x22, [x25]
   2fd10:	str	x24, [x26]
   2fd14:	cmp	x24, x0
   2fd18:	b.gt	300a0 <mpfr_acos@@Base+0x4a8>
   2fd1c:	cmp	x22, x0
   2fd20:	b.lt	300a0 <mpfr_acos@@Base+0x4a8>  // b.tstop
   2fd24:	cbnz	w23, 2fd48 <mpfr_acos@@Base+0x150>
   2fd28:	mov	w0, w23
   2fd2c:	ldp	x19, x20, [sp, #16]
   2fd30:	ldp	x21, x22, [sp, #32]
   2fd34:	ldp	x23, x24, [sp, #48]
   2fd38:	ldp	x25, x26, [sp, #64]
   2fd3c:	ldp	x27, x28, [sp, #80]
   2fd40:	ldp	x29, x30, [sp], #208
   2fd44:	ret
   2fd48:	orr	w19, w19, #0x8
   2fd4c:	str	w19, [x21]
   2fd50:	b	2fd28 <mpfr_acos@@Base+0x130>
   2fd54:	ldr	x1, [x21]
   2fd58:	add	x22, sp, #0x70
   2fd5c:	mov	x0, x22
   2fd60:	ldr	w25, [x21, #8]
   2fd64:	bl	cb10 <mpfr_init2@plt>
   2fd68:	mov	w3, #0x1                   	// #1
   2fd6c:	mov	x1, x21
   2fd70:	mov	w2, #0x0                   	// #0
   2fd74:	mov	x0, x22
   2fd78:	bl	c730 <mpfr_set4@plt>
   2fd7c:	mov	x0, x22
   2fd80:	mov	x2, #0x0                   	// #0
   2fd84:	mov	x1, #0x1                   	// #1
   2fd88:	bl	bfd0 <mpfr_cmp_ui_2exp@plt>
   2fd8c:	mov	w23, w0
   2fd90:	tbnz	w0, #31, 2fe0c <mpfr_acos@@Base+0x214>
   2fd94:	mov	x0, x22
   2fd98:	bl	c0f0 <mpfr_clear@plt>
   2fd9c:	cbz	w23, 2fdc4 <mpfr_acos@@Base+0x1cc>
   2fda0:	mov	x0, #0x2                   	// #2
   2fda4:	movk	x0, #0x8000, lsl #48
   2fda8:	str	x0, [x28, #16]
   2fdac:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2fdb0:	ldr	x1, [x0, #2592]
   2fdb4:	add	x0, x0, #0xa20
   2fdb8:	blr	x1
   2fdbc:	mrs	x1, tpidr_el0
   2fdc0:	b	2fc60 <mpfr_acos@@Base+0x68>
   2fdc4:	cmp	w25, #0x0
   2fdc8:	b.le	2fde0 <mpfr_acos@@Base+0x1e8>
   2fdcc:	mov	w0, #0x1                   	// #1
   2fdd0:	str	w0, [x28, #8]
   2fdd4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2fdd8:	str	x0, [x28, #16]
   2fddc:	b	2fd28 <mpfr_acos@@Base+0x130>
   2fde0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2fde4:	ldr	x1, [x0, #2640]
   2fde8:	add	x0, x0, #0xa50
   2fdec:	blr	x1
   2fdf0:	mov	w2, w20
   2fdf4:	mrs	x1, tpidr_el0
   2fdf8:	add	x1, x1, x0
   2fdfc:	mov	x0, x28
   2fe00:	bl	c410 <mpfr_cache@plt>
   2fe04:	mov	w23, w0
   2fe08:	b	2fd28 <mpfr_acos@@Base+0x130>
   2fe0c:	mrs	x19, tpidr_el0
   2fe10:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2fe14:	ldr	x1, [x0, #2592]
   2fe18:	add	x0, x0, #0xa20
   2fe1c:	blr	x1
   2fe20:	mov	w3, #0x3                   	// #3
   2fe24:	mov	x23, #0x1                   	// #1
   2fe28:	ldr	w24, [x19, x0]
   2fe2c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2fe30:	ldr	x1, [x0, #2528]
   2fe34:	add	x0, x0, #0x9e0
   2fe38:	blr	x1
   2fe3c:	add	x1, x19, x0
   2fe40:	ldr	x0, [x19, x0]
   2fe44:	str	x0, [sp, #96]
   2fe48:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2fe4c:	ldr	x2, [x0, #2560]
   2fe50:	add	x0, x0, #0xa00
   2fe54:	blr	x2
   2fe58:	ldr	x2, [x19, x0]
   2fe5c:	str	x2, [sp, #104]
   2fe60:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   2fe64:	str	x2, [x1]
   2fe68:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   2fe6c:	mov	x2, x22
   2fe70:	str	x1, [x19, x0]
   2fe74:	mov	x1, #0x1                   	// #1
   2fe78:	mov	x0, x22
   2fe7c:	bl	cae0 <mpfr_ui_sub@plt>
   2fe80:	ldr	x1, [sp, #128]
   2fe84:	cmp	w25, #0x0
   2fe88:	sub	x23, x23, x1
   2fe8c:	lsl	x0, x23, #1
   2fe90:	mov	x23, #0x2                   	// #2
   2fe94:	sub	x23, x23, x1
   2fe98:	csel	x23, x23, x0, le
   2fe9c:	mov	x0, x22
   2fea0:	bl	c0f0 <mpfr_clear@plt>
   2fea4:	ldr	x0, [x28]
   2fea8:	cmp	x0, #0x1
   2feac:	b.eq	2ffe0 <mpfr_acos@@Base+0x3e8>  // b.none
   2feb0:	b.gt	2fecc <mpfr_acos@@Base+0x2d4>
   2feb4:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   2feb8:	add	x2, x2, #0x50e
   2febc:	mov	w1, #0x60                  	// #96
   2fec0:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   2fec4:	add	x0, x0, #0x8ed
   2fec8:	bl	cbd0 <mpfr_assert_fail@plt>
   2fecc:	sub	x4, x0, #0x1
   2fed0:	clz	x1, x4
   2fed4:	mov	w4, #0x4a                  	// #74
   2fed8:	sub	w4, w4, w1
   2fedc:	sxtw	x4, w4
   2fee0:	add	x4, x23, x4
   2fee4:	add	x26, sp, #0xb0
   2fee8:	add	x27, x4, x0
   2feec:	mov	x25, #0x40                  	// #64
   2fef0:	mov	x1, x27
   2fef4:	mov	x0, x26
   2fef8:	add	x22, sp, #0x90
   2fefc:	bl	cb10 <mpfr_init2@plt>
   2ff00:	mov	x1, x27
   2ff04:	mov	x0, x22
   2ff08:	bl	cb10 <mpfr_init2@plt>
   2ff0c:	mov	x1, x21
   2ff10:	mov	w2, #0x0                   	// #0
   2ff14:	mov	x0, x26
   2ff18:	bl	c490 <mpfr_sqr@plt>
   2ff1c:	mov	w3, #0x0                   	// #0
   2ff20:	mov	x2, x26
   2ff24:	mov	x1, #0x1                   	// #1
   2ff28:	mov	x0, x26
   2ff2c:	bl	cae0 <mpfr_ui_sub@plt>
   2ff30:	mov	x1, x26
   2ff34:	mov	w2, #0x0                   	// #0
   2ff38:	mov	x0, x26
   2ff3c:	bl	c9c0 <mpfr_sqrt@plt>
   2ff40:	mov	w3, #0x0                   	// #0
   2ff44:	mov	x2, x26
   2ff48:	mov	x1, x21
   2ff4c:	mov	x0, x26
   2ff50:	bl	c6b0 <mpfr_div@plt>
   2ff54:	mov	x1, x26
   2ff58:	mov	w2, #0x0                   	// #0
   2ff5c:	mov	x0, x22
   2ff60:	bl	c720 <mpfr_atan@plt>
   2ff64:	mov	w2, #0x0                   	// #0
   2ff68:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   2ff6c:	ldr	x1, [x0, #2640]
   2ff70:	add	x0, x0, #0xa50
   2ff74:	blr	x1
   2ff78:	add	x1, x19, x0
   2ff7c:	mov	x0, x26
   2ff80:	bl	c410 <mpfr_cache@plt>
   2ff84:	mov	x1, x26
   2ff88:	mov	w3, #0x0                   	// #0
   2ff8c:	mov	x2, #0x1                   	// #1
   2ff90:	mov	x0, x26
   2ff94:	bl	c980 <mpfr_div_2ui@plt>
   2ff98:	mov	x1, x26
   2ff9c:	mov	x2, x22
   2ffa0:	mov	x0, x22
   2ffa4:	mov	w3, #0x0                   	// #0
   2ffa8:	bl	bbf0 <mpfr_sub@plt>
   2ffac:	ldr	x0, [sp, #160]
   2ffb0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   2ffb4:	cmp	x0, x1
   2ffb8:	b.gt	2ffe8 <mpfr_acos@@Base+0x3f0>
   2ffbc:	mov	x0, #0xfffffffffffffeff    	// #-257
   2ffc0:	movk	x0, #0x7fff, lsl #48
   2ffc4:	sub	x0, x0, x27
   2ffc8:	cmp	x0, x25
   2ffcc:	b.ge	300b4 <mpfr_acos@@Base+0x4bc>  // b.tcont
   2ffd0:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   2ffd4:	mov	w1, #0x86                  	// #134
   2ffd8:	add	x2, x2, #0x519
   2ffdc:	b	2fec0 <mpfr_acos@@Base+0x2c8>
   2ffe0:	mov	x4, #0xa                   	// #10
   2ffe4:	b	2fee0 <mpfr_acos@@Base+0x2e8>
   2ffe8:	ldr	x1, [sp, #144]
   2ffec:	cmp	w20, #0x0
   2fff0:	ldr	x0, [sp, #168]
   2fff4:	sub	x1, x1, #0x1
   2fff8:	ldr	x3, [x28]
   2fffc:	asr	x1, x1, #6
   30000:	sub	x2, x27, x23
   30004:	add	x1, x1, #0x1
   30008:	cinc	x3, x3, eq  // eq = none
   3000c:	bl	c400 <mpfr_round_p@plt>
   30010:	cbz	w0, 2ffbc <mpfr_acos@@Base+0x3c4>
   30014:	ldr	w3, [sp, #152]
   30018:	mov	w2, w20
   3001c:	mov	x1, x22
   30020:	mov	x0, x28
   30024:	bl	c730 <mpfr_set4@plt>
   30028:	mov	w23, w0
   3002c:	mov	x0, x26
   30030:	bl	c0f0 <mpfr_clear@plt>
   30034:	mov	x0, x22
   30038:	bl	c0f0 <mpfr_clear@plt>
   3003c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   30040:	ldr	x1, [x0, #2592]
   30044:	add	x0, x0, #0xa20
   30048:	blr	x1
   3004c:	add	x1, x19, x0
   30050:	str	w24, [x19, x0]
   30054:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   30058:	ldr	x2, [x0, #2528]
   3005c:	add	x0, x0, #0x9e0
   30060:	blr	x2
   30064:	ldr	x2, [sp, #96]
   30068:	str	x2, [x19, x0]
   3006c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   30070:	ldr	x2, [x0, #2560]
   30074:	add	x0, x0, #0xa00
   30078:	blr	x2
   3007c:	ldr	x2, [sp, #104]
   30080:	str	x2, [x19, x0]
   30084:	ldr	x0, [x28, #16]
   30088:	ldr	x2, [sp, #96]
   3008c:	cmp	x2, x0
   30090:	b.gt	300a0 <mpfr_acos@@Base+0x4a8>
   30094:	ldr	x2, [sp, #104]
   30098:	cmp	x2, x0
   3009c:	b.ge	300dc <mpfr_acos@@Base+0x4e4>  // b.tcont
   300a0:	mov	w2, w20
   300a4:	mov	w1, w23
   300a8:	mov	x0, x28
   300ac:	bl	cbc0 <mpfr_check_range@plt>
   300b0:	b	2fe04 <mpfr_acos@@Base+0x20c>
   300b4:	add	x27, x27, x25
   300b8:	mov	x0, #0x2                   	// #2
   300bc:	mov	x1, x27
   300c0:	sdiv	x25, x27, x0
   300c4:	mov	x0, x26
   300c8:	bl	bf50 <mpfr_set_prec@plt>
   300cc:	mov	x1, x27
   300d0:	mov	x0, x22
   300d4:	bl	bf50 <mpfr_set_prec@plt>
   300d8:	b	2ff0c <mpfr_acos@@Base+0x314>
   300dc:	cbz	w23, 2fd28 <mpfr_acos@@Base+0x130>
   300e0:	orr	w24, w24, #0x8
   300e4:	str	w24, [x1]
   300e8:	b	2fd28 <mpfr_acos@@Base+0x130>
   300ec:	stp	x29, x30, [sp, #-32]!
   300f0:	mov	x5, #0xfffffffffffffff8    	// #-8
   300f4:	mov	x29, sp
   300f8:	ldr	w3, [x1, #4]
   300fc:	ldr	x4, [x1, #8]
   30100:	cmp	w3, #0x0
   30104:	cneg	w3, w3, lt  // lt = tstop
   30108:	add	x5, x5, w3, sxtw #3
   3010c:	sbfiz	x3, x3, #6, #32
   30110:	ldr	x4, [x4, x5]
   30114:	str	x19, [sp, #16]
   30118:	clz	x4, x4
   3011c:	sub	x3, x3, x4
   30120:	cmp	x3, x2
   30124:	sub	x19, x3, x2
   30128:	csel	x19, x19, xzr, gt
   3012c:	mov	x2, x19
   30130:	bl	c1c0 <__gmpz_fdiv_q_2exp@plt>
   30134:	mov	x0, x19
   30138:	ldr	x19, [sp, #16]
   3013c:	ldp	x29, x30, [sp], #32
   30140:	ret
   30144:	mov	x12, #0x1500                	// #5376
   30148:	sub	sp, sp, x12
   3014c:	stp	x29, x30, [sp]
   30150:	mov	x29, sp
   30154:	stp	x25, x26, [sp, #64]
   30158:	mov	x26, x1
   3015c:	ldr	w1, [x3, #4]
   30160:	stp	x19, x20, [sp, #16]
   30164:	stp	x21, x22, [sp, #32]
   30168:	stp	x23, x24, [sp, #48]
   3016c:	mov	x24, x2
   30170:	stp	x27, x28, [sp, #80]
   30174:	stp	x0, x4, [sp, #120]
   30178:	cbnz	w1, 301c8 <mpfr_acos@@Base+0x5d0>
   3017c:	mov	x1, #0x1                   	// #1
   30180:	mov	x28, #0x0                   	// #0
   30184:	bl	bd30 <__gmpz_set_ui@plt>
   30188:	mov	x0, x26
   3018c:	mov	x1, #0x1                   	// #1
   30190:	bl	bd30 <__gmpz_set_ui@plt>
   30194:	mov	x0, x24
   30198:	mov	x1, #0x1                   	// #1
   3019c:	bl	bd30 <__gmpz_set_ui@plt>
   301a0:	mov	x0, x28
   301a4:	mov	x12, #0x1500                	// #5376
   301a8:	ldp	x29, x30, [sp]
   301ac:	ldp	x19, x20, [sp, #16]
   301b0:	ldp	x21, x22, [sp, #32]
   301b4:	ldp	x23, x24, [sp, #48]
   301b8:	ldp	x25, x26, [sp, #64]
   301bc:	ldp	x27, x28, [sp, #80]
   301c0:	add	sp, sp, x12
   301c4:	ret
   301c8:	add	x23, sp, #0xf0
   301cc:	mov	x25, x3
   301d0:	mov	x27, x5
   301d4:	mov	x0, x23
   301d8:	bl	c010 <mpfr_mpz_init@plt>
   301dc:	add	x19, sp, #0x900
   301e0:	mov	x1, #0x0                   	// #0
   301e4:	mov	x0, x25
   301e8:	bl	bb10 <__gmpz_scan1@plt>
   301ec:	mov	x2, x0
   301f0:	mov	x20, x0
   301f4:	mov	x1, x25
   301f8:	mov	x0, x23
   301fc:	bl	c1c0 <__gmpz_fdiv_q_2exp@plt>
   30200:	mov	x2, x23
   30204:	mov	x1, x23
   30208:	mov	x0, x23
   3020c:	bl	c070 <__gmpz_mul@plt>
   30210:	ldr	x0, [sp, #128]
   30214:	mov	x4, #0x1100                	// #4352
   30218:	add	x22, sp, x4
   3021c:	add	x21, sp, #0xd00
   30220:	sub	x20, x0, x20
   30224:	mov	x0, x19
   30228:	bl	c010 <mpfr_mpz_init@plt>
   3022c:	mov	x1, #0x6                   	// #6
   30230:	mov	x0, x19
   30234:	bl	bd30 <__gmpz_set_ui@plt>
   30238:	lsl	x28, x20, #1
   3023c:	mov	x0, x21
   30240:	bl	c010 <mpfr_mpz_init@plt>
   30244:	mov	x1, #0x6                   	// #6
   30248:	mov	x0, x21
   3024c:	bl	bd30 <__gmpz_set_ui@plt>
   30250:	mov	x0, x22
   30254:	bl	c010 <mpfr_mpz_init@plt>
   30258:	mov	x1, x23
   3025c:	mov	x0, x22
   30260:	bl	c020 <__gmpz_set@plt>
   30264:	add	x0, x19, #0x10
   30268:	bl	c010 <mpfr_mpz_init@plt>
   3026c:	add	x0, x21, #0x10
   30270:	bl	c010 <mpfr_mpz_init@plt>
   30274:	add	x0, x22, #0x10
   30278:	str	x0, [sp, #96]
   3027c:	bl	c010 <mpfr_mpz_init@plt>
   30280:	ldr	x0, [sp, #96]
   30284:	mov	x2, x23
   30288:	mov	x1, x23
   3028c:	bl	c070 <__gmpz_mul@plt>
   30290:	ldr	w1, [sp, #4372]
   30294:	mov	x5, #0xfffffffffffffff8    	// #-8
   30298:	ldr	x2, [sp, #4376]
   3029c:	cmp	w1, #0x0
   302a0:	cneg	w1, w1, lt  // lt = tstop
   302a4:	add	x0, x5, w1, sxtw #3
   302a8:	sbfiz	x1, x1, #6, #32
   302ac:	ldr	x0, [x2, x0]
   302b0:	mov	x2, x28
   302b4:	clz	x0, x0
   302b8:	sub	x1, x1, x0
   302bc:	mov	x0, x19
   302c0:	str	x1, [sp, #1800]
   302c4:	mov	x1, x19
   302c8:	bl	c290 <__gmpz_mul_2exp@plt>
   302cc:	mov	x2, x23
   302d0:	mov	x1, x19
   302d4:	mov	x0, x19
   302d8:	bl	be60 <__gmpz_sub@plt>
   302dc:	ldr	w1, [sp, #244]
   302e0:	mov	x0, #0x1                   	// #1
   302e4:	ldr	w4, [x25, #4]
   302e8:	mov	x5, #0xfffffffffffffff8    	// #-8
   302ec:	cmp	w1, #0x0
   302f0:	str	x0, [sp, #256]
   302f4:	cneg	w1, w1, lt  // lt = tstop
   302f8:	cmp	w4, #0x0
   302fc:	ldr	x2, [sp, #248]
   30300:	add	x0, x5, w1, sxtw #3
   30304:	cneg	w4, w4, lt  // lt = tstop
   30308:	sbfiz	x1, x1, #6, #32
   3030c:	add	x6, sp, #0x100
   30310:	add	x9, sp, #0x500
   30314:	ldr	x3, [x2, x0]
   30318:	add	x5, x5, w4, sxtw #3
   3031c:	ldr	x0, [x25, #8]
   30320:	clz	x3, x3
   30324:	sbfiz	x4, x4, #6, #32
   30328:	sub	x3, x1, x3
   3032c:	ldr	x1, [sp, #128]
   30330:	sub	x3, x28, x3
   30334:	ldr	x0, [x0, x5]
   30338:	add	x3, x3, x1
   3033c:	mov	w5, #0x0                   	// #0
   30340:	clz	x0, x0
   30344:	sub	x4, x4, x0
   30348:	lsl	x0, x20, #2
   3034c:	str	x0, [sp, #144]
   30350:	mov	x0, #0x6                   	// #6
   30354:	str	x0, [sp, #112]
   30358:	mov	w0, #0x2                   	// #2
   3035c:	str	w0, [sp, #208]
   30360:	mov	x0, #0x2                   	// #2
   30364:	sub	x3, x3, x4
   30368:	str	x0, [sp, #96]
   3036c:	add	x0, sp, #0x700
   30370:	str	x0, [sp, #136]
   30374:	str	x3, [sp, #768]
   30378:	cmp	x3, x27
   3037c:	sxtw	x4, w5
   30380:	b.lt	304c4 <mpfr_acos@@Base+0x8cc>  // b.tstop
   30384:	add	x6, x6, x4, lsl #3
   30388:	add	x7, x19, x4, lsl #4
   3038c:	add	x4, x21, x4, lsl #4
   30390:	mov	x9, #0x0                   	// #0
   30394:	sub	x6, x6, #0x8
   30398:	sub	x20, x7, #0x10
   3039c:	sub	x3, x4, #0x10
   303a0:	cmp	w5, #0x0
   303a4:	b.gt	30818 <mpfr_acos@@Base+0xc20>
   303a8:	ldr	x0, [sp, #96]
   303ac:	mov	x2, x27
   303b0:	mov	x1, x21
   303b4:	sub	x20, x0, #0x1
   303b8:	ldr	x0, [sp, #128]
   303bc:	madd	x20, x20, x28, x0
   303c0:	ldr	x0, [sp, #120]
   303c4:	bl	300ec <mpfr_acos@@Base+0x4f4>
   303c8:	mov	x3, x0
   303cc:	mov	x2, x27
   303d0:	mov	x1, x19
   303d4:	mov	x0, x19
   303d8:	str	x3, [sp, #96]
   303dc:	bl	300ec <mpfr_acos@@Base+0x4f4>
   303e0:	mov	x28, x0
   303e4:	mov	x2, x25
   303e8:	mov	x1, x19
   303ec:	mov	x0, x26
   303f0:	bl	c070 <__gmpz_mul@plt>
   303f4:	mov	x2, x27
   303f8:	mov	x1, x26
   303fc:	mov	x0, x26
   30400:	bl	300ec <mpfr_acos@@Base+0x4f4>
   30404:	ldr	x3, [sp, #96]
   30408:	add	x28, x28, x0
   3040c:	sub	x28, x20, x28
   30410:	mov	x0, x23
   30414:	add	x28, x28, x3
   30418:	mov	w20, #0x0                   	// #0
   3041c:	bl	c200 <mpfr_mpz_clear@plt>
   30420:	mov	x0, x19
   30424:	bl	c200 <mpfr_mpz_clear@plt>
   30428:	mov	x0, x21
   3042c:	bl	c200 <mpfr_mpz_clear@plt>
   30430:	mov	x0, x22
   30434:	bl	c200 <mpfr_mpz_clear@plt>
   30438:	ldr	w0, [sp, #208]
   3043c:	add	w20, w20, #0x1
   30440:	add	x19, x19, #0x10
   30444:	add	x21, x21, #0x10
   30448:	add	x22, x22, #0x10
   3044c:	cmp	w0, w20
   30450:	b.ne	30420 <mpfr_acos@@Base+0x828>  // b.any
   30454:	ldr	x0, [sp, #120]
   30458:	mov	w1, #0x2                   	// #2
   3045c:	bl	cbf0 <__gmpz_sizeinbase@plt>
   30460:	add	x0, x0, x28
   30464:	cmp	x0, x27
   30468:	b.cs	30484 <mpfr_acos@@Base+0x88c>  // b.hs, b.nlast
   3046c:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   30470:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   30474:	add	x2, x2, #0x8f4
   30478:	add	x0, x0, #0x91a
   3047c:	mov	w1, #0x1be                 	// #446
   30480:	bl	cbd0 <mpfr_assert_fail@plt>
   30484:	ldr	x2, [sp, #120]
   30488:	mov	x0, x24
   3048c:	mov	x1, x2
   30490:	bl	c070 <__gmpz_mul@plt>
   30494:	lsl	x2, x28, #1
   30498:	mov	x1, x24
   3049c:	mov	x0, x24
   304a0:	bl	c290 <__gmpz_mul_2exp@plt>
   304a4:	mov	x2, x26
   304a8:	mov	x1, x26
   304ac:	mov	x0, x24
   304b0:	bl	c910 <__gmpz_submul@plt>
   304b4:	mov	x1, x24
   304b8:	mov	x0, x24
   304bc:	bl	bce0 <__gmpz_sqrt@plt>
   304c0:	b	301a0 <mpfr_acos@@Base+0x5a8>
   304c4:	add	w8, w5, #0x1
   304c8:	add	w20, w5, #0x2
   304cc:	sbfiz	x0, x8, #4, #32
   304d0:	str	x0, [sp, #104]
   304d4:	ldr	w0, [sp, #208]
   304d8:	sxtw	x10, w8
   304dc:	cmp	w20, w0
   304e0:	b.lt	3058c <mpfr_acos@@Base+0x994>  // b.tstop
   304e4:	add	w0, w0, #0x1
   304e8:	str	w0, [sp, #208]
   304ec:	ldr	x0, [sp, #104]
   304f0:	str	w8, [sp, #160]
   304f4:	stp	x10, x6, [sp, #168]
   304f8:	add	x1, x0, #0x10
   304fc:	add	x0, x19, x1
   30500:	str	x1, [sp, #152]
   30504:	stp	x4, x9, [sp, #184]
   30508:	bl	c010 <mpfr_mpz_init@plt>
   3050c:	ldr	x1, [sp, #152]
   30510:	add	x0, x21, x1
   30514:	bl	c010 <mpfr_mpz_init@plt>
   30518:	ldr	x1, [sp, #152]
   3051c:	add	x0, x22, x1
   30520:	str	x0, [sp, #152]
   30524:	bl	c010 <mpfr_mpz_init@plt>
   30528:	ldr	x0, [sp, #104]
   3052c:	add	x2, x22, x0
   30530:	ldr	x0, [sp, #152]
   30534:	mov	x1, x2
   30538:	bl	c070 <__gmpz_mul@plt>
   3053c:	sbfiz	x2, x20, #4, #32
   30540:	mov	x0, #0x1104                	// #4356
   30544:	add	x0, sp, x0
   30548:	mov	x3, #0x1108                	// #4360
   3054c:	add	x3, sp, x3
   30550:	mov	x1, #0xfffffffffffffff8    	// #-8
   30554:	ldp	x10, x6, [sp, #168]
   30558:	ldr	w0, [x0, x2]
   3055c:	ldr	x2, [x3, x2]
   30560:	cmp	w0, #0x0
   30564:	cneg	w0, w0, lt  // lt = tstop
   30568:	ldr	w8, [sp, #160]
   3056c:	ldp	x4, x9, [sp, #184]
   30570:	add	x1, x1, w0, sxtw #3
   30574:	sbfiz	x0, x0, #6, #32
   30578:	ldr	x1, [x2, x1]
   3057c:	clz	x1, x1
   30580:	sub	x0, x0, x1
   30584:	ldr	x1, [sp, #136]
   30588:	str	x0, [x1, w20, sxtw #3]
   3058c:	lsl	x7, x10, #3
   30590:	mov	x0, #0x1                   	// #1
   30594:	stp	x6, x7, [sp, #160]
   30598:	str	x0, [x6, x7]
   3059c:	ldp	x0, x1, [sp, #104]
   305a0:	str	x10, [sp, #176]
   305a4:	str	w8, [sp, #184]
   305a8:	stp	x4, x9, [sp, #192]
   305ac:	add	x3, x21, x0
   305b0:	mov	x20, x3
   305b4:	mov	x0, x3
   305b8:	bl	bd30 <__gmpz_set_ui@plt>
   305bc:	ldr	x0, [sp, #112]
   305c0:	mov	x1, x20
   305c4:	add	x2, x0, #0x1
   305c8:	mov	x0, x20
   305cc:	bl	c190 <__gmpz_mul_ui@plt>
   305d0:	ldr	x0, [sp, #104]
   305d4:	mov	x2, x28
   305d8:	mov	x1, x20
   305dc:	add	x15, x19, x0
   305e0:	str	x15, [sp, #152]
   305e4:	mov	x0, x15
   305e8:	bl	c290 <__gmpz_mul_2exp@plt>
   305ec:	ldr	x15, [sp, #152]
   305f0:	mov	x2, x23
   305f4:	mov	x1, x15
   305f8:	mov	x0, x15
   305fc:	bl	be60 <__gmpz_sub@plt>
   30600:	ldr	x0, [sp, #96]
   30604:	mov	x1, x20
   30608:	lsl	x2, x0, #1
   3060c:	mov	x0, x20
   30610:	bl	c190 <__gmpz_mul_ui@plt>
   30614:	ldr	x0, [sp, #112]
   30618:	mov	x1, x20
   3061c:	sub	x2, x0, #0x1
   30620:	mov	x0, x20
   30624:	bl	c190 <__gmpz_mul_ui@plt>
   30628:	ldp	x7, x10, [sp, #168]
   3062c:	add	x0, sp, #0xd04
   30630:	mov	x2, #0xfffffffffffffff8    	// #-8
   30634:	add	x12, sp, #0x300
   30638:	ldr	w8, [sp, #184]
   3063c:	ldp	x15, x6, [sp, #152]
   30640:	lsl	x1, x10, #4
   30644:	ldp	x4, x9, [sp, #192]
   30648:	ldr	w3, [x0, x1]
   3064c:	cmp	w3, #0x0
   30650:	cneg	w0, w3, lt  // lt = tstop
   30654:	add	x3, sp, #0xd08
   30658:	add	x2, x2, w0, sxtw #3
   3065c:	sbfiz	x0, x0, #6, #32
   30660:	ldr	x1, [x3, x1]
   30664:	ldr	x3, [sp, #1800]
   30668:	ldr	x1, [x1, x2]
   3066c:	ldr	x2, [sp, #144]
   30670:	clz	x1, x1
   30674:	sub	x0, x0, x1
   30678:	sub	x3, x2, x3
   3067c:	sub	x3, x3, #0x1
   30680:	add	x3, x3, x0
   30684:	str	x3, [x12, x7]
   30688:	cbz	w8, 30694 <mpfr_acos@@Base+0xa9c>
   3068c:	ldr	x0, [x9, x4, lsl #3]
   30690:	add	x3, x3, x0
   30694:	ldr	x0, [sp, #96]
   30698:	str	x3, [x9, x10, lsl #3]
   3069c:	mov	x8, #0x1                   	// #1
   306a0:	add	x0, x0, #0x2
   306a4:	str	x0, [sp, #96]
   306a8:	lsr	x10, x0, #1
   306ac:	ldr	x0, [sp, #104]
   306b0:	sub	x20, x0, #0x10
   306b4:	add	x20, x21, x20
   306b8:	mov	w11, w4
   306bc:	add	w5, w4, #0x1
   306c0:	tbz	w10, #0, 306d4 <mpfr_acos@@Base+0xadc>
   306c4:	ldr	x0, [sp, #112]
   306c8:	add	x0, x0, #0x4
   306cc:	str	x0, [sp, #112]
   306d0:	b	30378 <mpfr_acos@@Base+0x780>
   306d4:	add	x2, x22, x8, lsl #4
   306d8:	mov	x1, x15
   306dc:	mov	x0, x15
   306e0:	str	x15, [sp, #104]
   306e4:	str	x8, [sp, #152]
   306e8:	str	x10, [sp, #184]
   306ec:	str	w5, [sp, #192]
   306f0:	str	x4, [sp, #200]
   306f4:	str	w11, [sp, #212]
   306f8:	stp	x12, x6, [sp, #216]
   306fc:	str	x9, [sp, #232]
   30700:	bl	c070 <__gmpz_mul@plt>
   30704:	ldr	x15, [sp, #104]
   30708:	add	x3, x20, #0x10
   3070c:	mov	x2, x3
   30710:	stp	x3, x15, [sp, #168]
   30714:	sub	x7, x15, #0x10
   30718:	mov	x1, x7
   3071c:	mov	x0, x7
   30720:	str	x7, [sp, #104]
   30724:	bl	c070 <__gmpz_mul@plt>
   30728:	ldr	x8, [sp, #152]
   3072c:	ldr	x7, [sp, #104]
   30730:	lsl	x14, x28, x8
   30734:	mov	x2, x14
   30738:	mov	x1, x7
   3073c:	mov	x0, x7
   30740:	stp	x14, x8, [sp, #152]
   30744:	bl	c290 <__gmpz_mul_2exp@plt>
   30748:	ldr	x7, [sp, #104]
   3074c:	ldr	x15, [sp, #176]
   30750:	mov	x1, x7
   30754:	mov	x0, x7
   30758:	mov	x2, x15
   3075c:	bl	ca50 <__gmpz_add@plt>
   30760:	ldr	x3, [sp, #168]
   30764:	mov	x1, x20
   30768:	mov	x0, x20
   3076c:	mov	x2, x3
   30770:	bl	c070 <__gmpz_mul@plt>
   30774:	ldp	x12, x6, [sp, #216]
   30778:	mov	x13, #0xfffffffffffffff8    	// #-8
   3077c:	ldr	x4, [sp, #200]
   30780:	ldr	x2, [x20, #24]
   30784:	ldr	x0, [x6, x4, lsl #3]
   30788:	ldp	x14, x8, [sp, #152]
   3078c:	add	x0, x0, #0x1
   30790:	str	x0, [x6, x4, lsl #3]
   30794:	ldr	w0, [x20, #20]
   30798:	ldr	w5, [sp, #192]
   3079c:	cmp	w0, #0x0
   307a0:	cneg	w0, w0, lt  // lt = tstop
   307a4:	cmp	w5, #0x1
   307a8:	ldr	x7, [sp, #104]
   307ac:	add	x1, x13, w0, sxtw #3
   307b0:	sbfiz	x0, x0, #6, #32
   307b4:	ldr	x10, [sp, #184]
   307b8:	ldr	x3, [x2, x1]
   307bc:	ldr	x9, [sp, #232]
   307c0:	clz	x3, x3
   307c4:	sub	x3, x0, x3
   307c8:	ldr	x0, [sp, #136]
   307cc:	add	x3, x3, x14
   307d0:	ldr	x0, [x0, x8, lsl #3]
   307d4:	sub	x3, x3, x0
   307d8:	ldr	x0, [x12, x4, lsl #3]
   307dc:	sub	x3, x3, #0x1
   307e0:	add	x3, x3, x0
   307e4:	str	x3, [x12, x4, lsl #3]
   307e8:	b.eq	307fc <mpfr_acos@@Base+0xc04>  // b.none
   307ec:	ldr	w11, [sp, #212]
   307f0:	sub	w11, w11, #0x1
   307f4:	ldr	x0, [x9, w11, sxtw #3]
   307f8:	add	x3, x3, x0
   307fc:	lsr	x10, x10, #1
   30800:	add	x8, x8, #0x1
   30804:	mov	x15, x7
   30808:	sub	x20, x20, #0x10
   3080c:	str	x3, [x9, x4, lsl #3]
   30810:	sub	x4, x4, #0x1
   30814:	b	306b8 <mpfr_acos@@Base+0xac0>
   30818:	ldr	x2, [x6]
   3081c:	sub	w5, w5, #0x1
   30820:	mov	x1, x7
   30824:	mov	x0, x7
   30828:	stp	x4, x6, [sp, #104]
   3082c:	add	x2, x22, x2, lsl #4
   30830:	str	x7, [sp, #144]
   30834:	str	w5, [sp, #152]
   30838:	stp	x9, x3, [sp, #160]
   3083c:	bl	c070 <__gmpz_mul@plt>
   30840:	mov	x1, x20
   30844:	ldr	x4, [sp, #104]
   30848:	mov	x0, x20
   3084c:	mov	x2, x4
   30850:	bl	c070 <__gmpz_mul@plt>
   30854:	ldr	x6, [sp, #112]
   30858:	mov	x1, #0x1                   	// #1
   3085c:	ldr	x9, [sp, #160]
   30860:	str	x6, [sp, #136]
   30864:	ldr	x0, [x6, #8]
   30868:	lsl	x0, x1, x0
   3086c:	add	x9, x9, x0
   30870:	mov	x1, x20
   30874:	mov	x0, x20
   30878:	str	x9, [sp, #112]
   3087c:	mul	x2, x28, x9
   30880:	bl	c290 <__gmpz_mul_2exp@plt>
   30884:	ldr	x7, [sp, #144]
   30888:	mov	x1, x20
   3088c:	mov	x0, x20
   30890:	mov	x2, x7
   30894:	bl	ca50 <__gmpz_add@plt>
   30898:	ldr	x4, [sp, #104]
   3089c:	ldr	x3, [sp, #168]
   308a0:	mov	x2, x4
   308a4:	str	x3, [sp, #104]
   308a8:	mov	x1, x3
   308ac:	mov	x0, x3
   308b0:	bl	c070 <__gmpz_mul@plt>
   308b4:	ldp	x3, x9, [sp, #104]
   308b8:	mov	x7, x20
   308bc:	ldr	w5, [sp, #152]
   308c0:	ldr	x6, [sp, #136]
   308c4:	mov	x4, x3
   308c8:	b	30394 <mpfr_acos@@Base+0x79c>
   308cc:	stp	x29, x30, [sp, #-304]!
   308d0:	mov	x29, sp
   308d4:	str	x1, [sp, #120]
   308d8:	ldr	x1, [x2]
   308dc:	stp	x21, x22, [sp, #32]
   308e0:	add	x22, sp, #0x110
   308e4:	stp	x27, x28, [sp, #80]
   308e8:	mov	x27, x0
   308ec:	add	x28, sp, #0xd0
   308f0:	ldr	x0, [x0]
   308f4:	stp	x19, x20, [sp, #16]
   308f8:	add	x20, sp, #0xb0
   308fc:	stp	x23, x24, [sp, #48]
   30900:	add	x24, sp, #0xa0
   30904:	add	x19, sp, #0xc0
   30908:	stp	x25, x26, [sp, #64]
   3090c:	mov	x26, x2
   30910:	add	x23, sp, #0xe0
   30914:	str	x0, [sp, #104]
   30918:	mov	x0, x22
   3091c:	bl	cb10 <mpfr_init2@plt>
   30920:	add	x21, sp, #0xf0
   30924:	mov	x0, x24
   30928:	bl	c010 <mpfr_mpz_init@plt>
   3092c:	mov	x0, x20
   30930:	bl	c010 <mpfr_mpz_init@plt>
   30934:	mov	x0, x19
   30938:	bl	c010 <mpfr_mpz_init@plt>
   3093c:	mov	x0, x28
   30940:	bl	c010 <mpfr_mpz_init@plt>
   30944:	mov	x0, x23
   30948:	bl	c010 <mpfr_mpz_init@plt>
   3094c:	mov	x0, x21
   30950:	add	x25, sp, #0x100
   30954:	bl	c010 <mpfr_mpz_init@plt>
   30958:	mov	x0, x25
   3095c:	bl	c010 <mpfr_mpz_init@plt>
   30960:	ldr	w3, [x26, #8]
   30964:	mov	w2, #0x0                   	// #0
   30968:	mov	x1, x26
   3096c:	mov	x0, x22
   30970:	mov	x26, #0x1                   	// #1
   30974:	bl	c730 <mpfr_set4@plt>
   30978:	mov	x0, x24
   3097c:	mov	x1, #0x1                   	// #1
   30980:	bl	bd30 <__gmpz_set_ui@plt>
   30984:	mov	x0, x20
   30988:	mov	x1, #0x0                   	// #0
   3098c:	bl	bd30 <__gmpz_set_ui@plt>
   30990:	mov	x0, x19
   30994:	mov	x1, #0x1                   	// #1
   30998:	bl	bd30 <__gmpz_set_ui@plt>
   3099c:	str	xzr, [sp, #112]
   309a0:	ldr	x1, [sp, #104]
   309a4:	mov	x0, #0x2                   	// #2
   309a8:	sdiv	x0, x1, x0
   309ac:	stp	xzr, x0, [sp, #128]
   309b0:	mov	x0, x22
   309b4:	bl	c7a0 <mpfr_sgn@plt>
   309b8:	cbz	w0, 309c8 <mpfr_acos@@Base+0xdd0>
   309bc:	ldr	x0, [sp, #104]
   309c0:	cmp	x0, x26
   309c4:	b.ge	30aac <mpfr_acos@@Base+0xeb4>  // b.tcont
   309c8:	ldr	x1, [sp, #128]
   309cc:	mov	x0, #0xb                   	// #11
   309d0:	mov	x26, #0x0                   	// #0
   309d4:	mul	x0, x1, x0
   309d8:	cmp	x0, #0x1
   309dc:	b.hi	30d10 <mpfr_acos@@Base+0x1118>  // b.pmore
   309e0:	mov	x1, x20
   309e4:	mov	x0, x27
   309e8:	mov	w2, #0x0                   	// #0
   309ec:	bl	c2d0 <mpfr_set_z@plt>
   309f0:	mov	x2, x24
   309f4:	mov	x1, x27
   309f8:	mov	x0, x27
   309fc:	mov	w3, #0x0                   	// #0
   30a00:	bl	cd20 <mpfr_div_z@plt>
   30a04:	ldr	x2, [sp, #112]
   30a08:	mov	x1, x27
   30a0c:	mov	w3, #0x0                   	// #0
   30a10:	mov	x0, x27
   30a14:	bl	c980 <mpfr_div_2ui@plt>
   30a18:	ldr	x0, [sp, #120]
   30a1c:	mov	x1, x19
   30a20:	mov	w2, #0x0                   	// #0
   30a24:	bl	c2d0 <mpfr_set_z@plt>
   30a28:	ldr	x1, [sp, #120]
   30a2c:	mov	x2, x24
   30a30:	mov	w3, #0x0                   	// #0
   30a34:	mov	x0, x1
   30a38:	bl	cd20 <mpfr_div_z@plt>
   30a3c:	ldp	x2, x1, [sp, #112]
   30a40:	mov	w3, #0x0                   	// #0
   30a44:	mov	x0, x1
   30a48:	bl	c980 <mpfr_div_2ui@plt>
   30a4c:	mov	x0, x24
   30a50:	bl	c200 <mpfr_mpz_clear@plt>
   30a54:	mov	x0, x20
   30a58:	bl	c200 <mpfr_mpz_clear@plt>
   30a5c:	mov	x0, x19
   30a60:	bl	c200 <mpfr_mpz_clear@plt>
   30a64:	mov	x0, x28
   30a68:	bl	c200 <mpfr_mpz_clear@plt>
   30a6c:	mov	x0, x23
   30a70:	bl	c200 <mpfr_mpz_clear@plt>
   30a74:	mov	x0, x21
   30a78:	bl	c200 <mpfr_mpz_clear@plt>
   30a7c:	mov	x0, x25
   30a80:	bl	c200 <mpfr_mpz_clear@plt>
   30a84:	mov	x0, x22
   30a88:	bl	c0f0 <mpfr_clear@plt>
   30a8c:	mov	w0, w26
   30a90:	ldp	x19, x20, [sp, #16]
   30a94:	ldp	x21, x22, [sp, #32]
   30a98:	ldp	x23, x24, [sp, #48]
   30a9c:	ldp	x25, x26, [sp, #64]
   30aa0:	ldp	x27, x28, [sp, #80]
   30aa4:	ldp	x29, x30, [sp], #304
   30aa8:	ret
   30aac:	ldr	x0, [sp, #136]
   30ab0:	cmp	x0, x26
   30ab4:	lsl	x0, x26, #1
   30ab8:	str	x0, [sp, #144]
   30abc:	b.ge	30b60 <mpfr_acos@@Base+0xf68>  // b.tcont
   30ac0:	mov	x1, x22
   30ac4:	mov	x0, x23
   30ac8:	bl	cb50 <mpfr_get_z_2exp@plt>
   30acc:	sub	x2, x26, #0x1
   30ad0:	mov	x1, #0x1                   	// #1
   30ad4:	sub	x2, x2, x0
   30ad8:	mov	x0, x28
   30adc:	str	x2, [sp, #152]
   30ae0:	bl	bd30 <__gmpz_set_ui@plt>
   30ae4:	mov	x0, x21
   30ae8:	mov	x1, #0x1                   	// #1
   30aec:	bl	bd30 <__gmpz_set_ui@plt>
   30af0:	ldr	x2, [sp, #152]
   30af4:	mov	x0, x21
   30af8:	mov	x1, x21
   30afc:	bl	c290 <__gmpz_mul_2exp@plt>
   30b00:	ldr	x2, [sp, #152]
   30b04:	mov	w0, #0x1                   	// #1
   30b08:	str	w0, [sp, #280]
   30b0c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   30b10:	str	x0, [sp, #288]
   30b14:	ldr	x0, [sp, #112]
   30b18:	cmp	x26, #0x1
   30b1c:	add	x3, x0, x2
   30b20:	b.ne	30bc8 <mpfr_acos@@Base+0xfd0>  // b.any
   30b24:	mov	x1, x28
   30b28:	mov	x0, x24
   30b2c:	str	x2, [sp, #112]
   30b30:	bl	c160 <__gmpz_swap@plt>
   30b34:	mov	x1, x23
   30b38:	mov	x0, x20
   30b3c:	bl	c160 <__gmpz_swap@plt>
   30b40:	mov	x1, x21
   30b44:	mov	x0, x19
   30b48:	bl	c160 <__gmpz_swap@plt>
   30b4c:	ldr	x0, [sp, #128]
   30b50:	ldr	x26, [sp, #144]
   30b54:	add	x0, x0, #0x1
   30b58:	str	x0, [sp, #128]
   30b5c:	b	309b0 <mpfr_acos@@Base+0xdb8>
   30b60:	mov	w3, #0x0                   	// #0
   30b64:	mov	x2, x26
   30b68:	mov	x1, x22
   30b6c:	mov	x0, x22
   30b70:	bl	c350 <mpfr_mul_2ui@plt>
   30b74:	mov	x1, x22
   30b78:	mov	x0, x25
   30b7c:	mov	w2, #0x1                   	// #1
   30b80:	bl	be80 <mpfr_get_z@plt>
   30b84:	ldr	w0, [sp, #260]
   30b88:	cbz	w0, 30b4c <mpfr_acos@@Base+0xf54>
   30b8c:	mov	x2, x25
   30b90:	mov	x1, x22
   30b94:	mov	w3, #0x0                   	// #0
   30b98:	mov	x0, x22
   30b9c:	bl	bde0 <mpfr_sub_z@plt>
   30ba0:	ldr	x5, [sp, #104]
   30ba4:	lsl	x0, x26, #1
   30ba8:	mov	x2, x21
   30bac:	sub	x4, x0, #0x1
   30bb0:	mov	x3, x25
   30bb4:	mov	x1, x23
   30bb8:	mov	x0, x28
   30bbc:	bl	30144 <mpfr_acos@@Base+0x54c>
   30bc0:	mov	x2, x0
   30bc4:	b	30b14 <mpfr_acos@@Base+0xf1c>
   30bc8:	mov	x2, x19
   30bcc:	mov	x1, x20
   30bd0:	mov	x0, x25
   30bd4:	str	x3, [sp, #152]
   30bd8:	bl	ca50 <__gmpz_add@plt>
   30bdc:	mov	x2, x21
   30be0:	mov	x1, x19
   30be4:	mov	x0, x19
   30be8:	bl	c070 <__gmpz_mul@plt>
   30bec:	mov	x2, x23
   30bf0:	mov	x1, x21
   30bf4:	mov	x0, x21
   30bf8:	bl	ca50 <__gmpz_add@plt>
   30bfc:	mov	x2, x23
   30c00:	mov	x1, x20
   30c04:	mov	x0, x23
   30c08:	bl	c070 <__gmpz_mul@plt>
   30c0c:	mov	x2, x21
   30c10:	mov	x1, x25
   30c14:	mov	x0, x25
   30c18:	bl	c070 <__gmpz_mul@plt>
   30c1c:	mov	x2, x23
   30c20:	mov	x1, x25
   30c24:	mov	x0, x20
   30c28:	bl	be60 <__gmpz_sub@plt>
   30c2c:	mov	x2, x19
   30c30:	mov	x1, x20
   30c34:	mov	x0, x20
   30c38:	bl	be60 <__gmpz_sub@plt>
   30c3c:	mov	x2, x23
   30c40:	mov	x1, x19
   30c44:	mov	x0, x19
   30c48:	bl	be60 <__gmpz_sub@plt>
   30c4c:	mov	x2, x28
   30c50:	mov	x1, x24
   30c54:	mov	x0, x24
   30c58:	bl	c070 <__gmpz_mul@plt>
   30c5c:	ldr	x2, [sp, #104]
   30c60:	mov	x1, x24
   30c64:	mov	x0, x24
   30c68:	bl	300ec <mpfr_acos@@Base+0x4f4>
   30c6c:	mov	x6, x0
   30c70:	ldr	w1, [sp, #180]
   30c74:	mov	x0, #0xfffffffffffffff8    	// #-8
   30c78:	ldr	x2, [sp, #184]
   30c7c:	cmp	w1, #0x0
   30c80:	cneg	w1, w1, lt  // lt = tstop
   30c84:	str	x6, [sp, #112]
   30c88:	ldr	x5, [sp, #200]
   30c8c:	add	x0, x0, w1, sxtw #3
   30c90:	sbfiz	x1, x1, #6, #32
   30c94:	ldr	x4, [x2, x0]
   30c98:	mov	x0, #0xfffffffffffffff8    	// #-8
   30c9c:	ldr	w2, [sp, #196]
   30ca0:	clz	x4, x4
   30ca4:	cmp	w2, #0x0
   30ca8:	sub	x1, x1, x4
   30cac:	cneg	w2, w2, lt  // lt = tstop
   30cb0:	add	x0, x0, w2, sxtw #3
   30cb4:	sbfiz	x2, x2, #6, #32
   30cb8:	ldr	x0, [x5, x0]
   30cbc:	clz	x0, x0
   30cc0:	sub	x2, x2, x0
   30cc4:	ldr	x0, [sp, #104]
   30cc8:	cmp	x1, x2
   30ccc:	csel	x1, x1, x2, ls  // ls = plast
   30cd0:	subs	x2, x1, x0
   30cd4:	mov	x1, x20
   30cd8:	csel	x26, x2, xzr, hi  // hi = pmore
   30cdc:	mov	x0, x20
   30ce0:	mov	x2, x26
   30ce4:	bl	c1c0 <__gmpz_fdiv_q_2exp@plt>
   30ce8:	mov	x2, x26
   30cec:	mov	x0, x19
   30cf0:	mov	x1, x19
   30cf4:	bl	c1c0 <__gmpz_fdiv_q_2exp@plt>
   30cf8:	ldr	x6, [sp, #112]
   30cfc:	ldr	x3, [sp, #152]
   30d00:	sub	x2, x6, x26
   30d04:	add	x0, x2, x3
   30d08:	str	x0, [sp, #112]
   30d0c:	b	30b4c <mpfr_acos@@Base+0xf54>
   30d10:	add	x0, x0, #0x1
   30d14:	add	x26, x26, #0x1
   30d18:	lsr	x0, x0, #1
   30d1c:	b	309d8 <mpfr_acos@@Base+0xde0>

0000000000030d20 <mpfr_sincos_fast@@Base>:
   30d20:	stp	x29, x30, [sp, #-416]!
   30d24:	cmp	x0, x1
   30d28:	mov	x29, sp
   30d2c:	stp	x19, x20, [sp, #16]
   30d30:	stp	x21, x22, [sp, #32]
   30d34:	stp	x23, x24, [sp, #48]
   30d38:	stp	x25, x26, [sp, #64]
   30d3c:	stp	x27, x28, [sp, #80]
   30d40:	b.ne	30d5c <mpfr_sincos_fast@@Base+0x3c>  // b.any
   30d44:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   30d48:	add	x2, x2, #0x924
   30d4c:	mov	w1, #0x247                 	// #583
   30d50:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   30d54:	add	x0, x0, #0x91a
   30d58:	bl	cbd0 <mpfr_assert_fail@plt>
   30d5c:	mov	x24, x0
   30d60:	mov	x23, x1
   30d64:	mov	x21, x2
   30d68:	mov	w27, w3
   30d6c:	cbnz	x0, 30d90 <mpfr_sincos_fast@@Base+0x70>
   30d70:	ldr	x0, [x1]
   30d74:	cmp	x0, #0x1
   30d78:	b.eq	30dcc <mpfr_sincos_fast@@Base+0xac>  // b.none
   30d7c:	b.gt	30da8 <mpfr_sincos_fast@@Base+0x88>
   30d80:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   30d84:	mov	w1, #0x24e                 	// #590
   30d88:	add	x2, x2, #0x92b
   30d8c:	b	30d50 <mpfr_sincos_fast@@Base+0x30>
   30d90:	ldr	x0, [x0]
   30d94:	cbz	x1, 30d74 <mpfr_sincos_fast@@Base+0x54>
   30d98:	ldr	x1, [x1]
   30d9c:	cmp	x0, x1
   30da0:	csel	x0, x0, x1, ge  // ge = tcont
   30da4:	b	30d74 <mpfr_sincos_fast@@Base+0x54>
   30da8:	sub	x19, x0, #0x1
   30dac:	clz	x1, x19
   30db0:	mov	w19, #0x49                  	// #73
   30db4:	sub	w19, w19, w1
   30db8:	add	x19, x0, w19, sxtw
   30dbc:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   30dc0:	cmp	x19, x0
   30dc4:	b.lt	30dd4 <mpfr_sincos_fast@@Base+0xb4>  // b.tstop
   30dc8:	bl	c970 <mpfr_abort_prec_max@plt>
   30dcc:	mov	w19, #0x9                   	// #9
   30dd0:	b	30db8 <mpfr_sincos_fast@@Base+0x98>
   30dd4:	sub	x20, x19, #0x1
   30dd8:	asr	x20, x20, #6
   30ddc:	add	x20, x20, #0x1
   30de0:	lsl	x0, x20, #1
   30de4:	cmp	x0, #0x10
   30de8:	b.le	30e98 <mpfr_sincos_fast@@Base+0x178>
   30dec:	lsl	x0, x20, #4
   30df0:	str	x0, [sp, #272]
   30df4:	bl	cd90 <mpfr_allocate_func@plt>
   30df8:	str	x0, [sp, #280]
   30dfc:	mov	w0, #0x1                   	// #1
   30e00:	add	x25, sp, #0xd0
   30e04:	add	x22, sp, #0xb0
   30e08:	ldr	x1, [sp, #280]
   30e0c:	add	x26, sp, #0x90
   30e10:	add	x28, sp, #0xf0
   30e14:	str	w0, [sp, #184]
   30e18:	str	w0, [sp, #216]
   30e1c:	mov	x0, #0x40                  	// #64
   30e20:	add	x20, x1, x20, lsl #3
   30e24:	str	x0, [sp, #104]
   30e28:	add	x0, sp, #0x88
   30e2c:	str	x0, [sp, #112]
   30e30:	str	x19, [sp, #176]
   30e34:	str	x1, [sp, #200]
   30e38:	str	x19, [sp, #208]
   30e3c:	str	x20, [sp, #232]
   30e40:	ldr	w0, [x21, #8]
   30e44:	cmp	w0, #0x0
   30e48:	b.le	30ea4 <mpfr_sincos_fast@@Base+0x184>
   30e4c:	mov	x1, #0xed51                	// #60753
   30e50:	mov	x0, x21
   30e54:	mov	x2, #0xffffffffffffffe1    	// #-31
   30e58:	movk	x1, #0x6487, lsl #16
   30e5c:	bl	bfd0 <mpfr_cmp_ui_2exp@plt>
   30e60:	cmp	w0, #0x0
   30e64:	b.gt	30ea4 <mpfr_sincos_fast@@Base+0x184>
   30e68:	mov	x2, x21
   30e6c:	mov	x1, x25
   30e70:	mov	x0, x22
   30e74:	bl	308cc <mpfr_acos@@Base+0xcd4>
   30e78:	sxtw	x20, w0
   30e7c:	ldr	x4, [sp, #224]
   30e80:	cbnz	x24, 31034 <mpfr_sincos_fast@@Base+0x314>
   30e84:	cbnz	x23, 310a8 <mpfr_sincos_fast@@Base+0x388>
   30e88:	cbnz	x24, 31170 <mpfr_sincos_fast@@Base+0x450>
   30e8c:	mov	w19, #0x0                   	// #0
   30e90:	mov	w20, #0x0                   	// #0
   30e94:	b	311a4 <mpfr_sincos_fast@@Base+0x484>
   30e98:	add	x0, sp, #0x120
   30e9c:	str	xzr, [sp, #272]
   30ea0:	b	30df8 <mpfr_sincos_fast@@Base+0xd8>
   30ea4:	ldr	w0, [x21, #8]
   30ea8:	tbz	w0, #31, 30f08 <mpfr_sincos_fast@@Base+0x1e8>
   30eac:	mov	x1, #0xffffffffffff12af    	// #-60753
   30eb0:	mov	x0, x21
   30eb4:	mov	x2, #0xffffffffffffffe1    	// #-31
   30eb8:	movk	x1, #0x9b78, lsl #16
   30ebc:	bl	c460 <mpfr_cmp_si_2exp@plt>
   30ec0:	tbnz	w0, #31, 30f08 <mpfr_sincos_fast@@Base+0x1e8>
   30ec4:	ldr	x0, [x21]
   30ec8:	str	x0, [sp, #144]
   30ecc:	mov	w0, #0x1                   	// #1
   30ed0:	str	w0, [sp, #152]
   30ed4:	ldr	x0, [x21, #16]
   30ed8:	str	x0, [sp, #160]
   30edc:	ldr	x0, [x21, #24]
   30ee0:	mov	x2, x26
   30ee4:	mov	x1, x25
   30ee8:	str	x0, [sp, #168]
   30eec:	mov	x0, x22
   30ef0:	bl	308cc <mpfr_acos@@Base+0xcd4>
   30ef4:	sxtw	x20, w0
   30ef8:	ldr	w0, [sp, #184]
   30efc:	neg	w0, w0
   30f00:	str	w0, [sp, #184]
   30f04:	b	30e7c <mpfr_sincos_fast@@Base+0x15c>
   30f08:	mov	x1, x19
   30f0c:	mov	x0, x26
   30f10:	bl	cb10 <mpfr_init2@plt>
   30f14:	ldr	x0, [x21, #16]
   30f18:	cmp	x0, #0x0
   30f1c:	add	x1, x0, x19
   30f20:	csel	x1, x1, x19, gt
   30f24:	mov	x0, x28
   30f28:	bl	cb10 <mpfr_init2@plt>
   30f2c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   30f30:	ldr	x1, [x0, #2640]
   30f34:	add	x0, x0, #0xa50
   30f38:	blr	x1
   30f3c:	mov	w2, #0x0                   	// #0
   30f40:	mrs	x1, tpidr_el0
   30f44:	add	x1, x1, x0
   30f48:	mov	x0, x28
   30f4c:	bl	c410 <mpfr_cache@plt>
   30f50:	mov	x1, x28
   30f54:	mov	w3, #0x0                   	// #0
   30f58:	mov	x2, #0x1                   	// #1
   30f5c:	mov	x0, x28
   30f60:	bl	c980 <mpfr_div_2ui@plt>
   30f64:	ldr	x1, [sp, #112]
   30f68:	mov	x3, x28
   30f6c:	mov	x2, x21
   30f70:	mov	x0, x26
   30f74:	mov	w4, #0x0                   	// #0
   30f78:	bl	c5a0 <mpfr_remquo@plt>
   30f7c:	ldr	w0, [sp, #152]
   30f80:	tbz	w0, #31, 3102c <mpfr_sincos_fast@@Base+0x30c>
   30f84:	mov	x1, x26
   30f88:	mov	x0, x26
   30f8c:	mov	w2, #0x0                   	// #0
   30f90:	bl	bdf0 <mpfr_neg@plt>
   30f94:	mov	w3, #0x1                   	// #1
   30f98:	mov	x2, x26
   30f9c:	mov	x1, x25
   30fa0:	mov	x0, x22
   30fa4:	str	w3, [sp, #120]
   30fa8:	bl	308cc <mpfr_acos@@Base+0xcd4>
   30fac:	sxtw	x0, w0
   30fb0:	ldr	w3, [sp, #120]
   30fb4:	add	x20, x0, #0x1
   30fb8:	cbz	w3, 30fcc <mpfr_sincos_fast@@Base+0x2ac>
   30fbc:	mov	x1, x22
   30fc0:	mov	x0, x22
   30fc4:	mov	w2, #0x0                   	// #0
   30fc8:	bl	bdf0 <mpfr_neg@plt>
   30fcc:	ldr	x0, [sp, #136]
   30fd0:	tbz	w0, #1, 30ff4 <mpfr_sincos_fast@@Base+0x2d4>
   30fd4:	mov	x1, x22
   30fd8:	mov	w2, #0x0                   	// #0
   30fdc:	mov	x0, x22
   30fe0:	bl	bdf0 <mpfr_neg@plt>
   30fe4:	mov	x1, x25
   30fe8:	mov	x0, x25
   30fec:	mov	w2, #0x0                   	// #0
   30ff0:	bl	bdf0 <mpfr_neg@plt>
   30ff4:	ldr	x0, [sp, #136]
   30ff8:	tbz	w0, #0, 31018 <mpfr_sincos_fast@@Base+0x2f8>
   30ffc:	mov	w2, #0x0                   	// #0
   31000:	mov	x1, x22
   31004:	mov	x0, x22
   31008:	bl	bdf0 <mpfr_neg@plt>
   3100c:	mov	x1, x25
   31010:	mov	x0, x22
   31014:	bl	c530 <mpfr_swap@plt>
   31018:	mov	x0, x26
   3101c:	bl	c0f0 <mpfr_clear@plt>
   31020:	mov	x0, x28
   31024:	bl	c0f0 <mpfr_clear@plt>
   31028:	b	30e7c <mpfr_sincos_fast@@Base+0x15c>
   3102c:	mov	w3, #0x0                   	// #0
   31030:	b	30f98 <mpfr_sincos_fast@@Base+0x278>
   31034:	ldr	x2, [sp, #192]
   31038:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3103c:	cmp	x2, x0
   31040:	b.gt	3106c <mpfr_sincos_fast@@Base+0x34c>
   31044:	ldr	x1, [sp, #104]
   31048:	mov	x0, #0xfffffffffffffeff    	// #-257
   3104c:	movk	x0, #0x7fff, lsl #48
   31050:	sub	x0, x0, x19
   31054:	cmp	x0, x1
   31058:	b.ge	310f4 <mpfr_sincos_fast@@Base+0x3d4>  // b.tcont
   3105c:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   31060:	mov	w1, #0x28f                 	// #655
   31064:	add	x2, x2, #0xb94
   31068:	b	30d50 <mpfr_sincos_fast@@Base+0x30>
   3106c:	ldr	x1, [sp, #176]
   31070:	cmp	w27, #0x0
   31074:	ldr	x0, [sp, #200]
   31078:	sub	x1, x1, #0x1
   3107c:	ldr	x3, [x24]
   31080:	sub	x2, x20, x2
   31084:	asr	x1, x1, #6
   31088:	sub	x2, x19, x2
   3108c:	cinc	x3, x3, eq  // eq = none
   31090:	add	x1, x1, #0x1
   31094:	str	x4, [sp, #120]
   31098:	bl	c400 <mpfr_round_p@plt>
   3109c:	ldr	x4, [sp, #120]
   310a0:	cbnz	w0, 30e84 <mpfr_sincos_fast@@Base+0x164>
   310a4:	b	31044 <mpfr_sincos_fast@@Base+0x324>
   310a8:	ldr	x1, [sp, #224]
   310ac:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   310b0:	cmp	x1, x0
   310b4:	b.le	31044 <mpfr_sincos_fast@@Base+0x324>
   310b8:	ldr	x1, [sp, #208]
   310bc:	cmp	w27, #0x0
   310c0:	ldr	x0, [sp, #232]
   310c4:	sub	x1, x1, #0x1
   310c8:	ldr	x3, [x23]
   310cc:	sub	x2, x20, x4
   310d0:	asr	x1, x1, #6
   310d4:	sub	x2, x19, x2
   310d8:	cinc	x3, x3, eq  // eq = none
   310dc:	add	x1, x1, #0x1
   310e0:	bl	c400 <mpfr_round_p@plt>
   310e4:	cbz	w0, 31044 <mpfr_sincos_fast@@Base+0x324>
   310e8:	cbnz	x24, 31170 <mpfr_sincos_fast@@Base+0x450>
   310ec:	mov	w19, #0x0                   	// #0
   310f0:	b	3118c <mpfr_sincos_fast@@Base+0x46c>
   310f4:	ldr	x0, [sp, #104]
   310f8:	ldr	x1, [sp, #272]
   310fc:	add	x19, x19, x0
   31100:	mov	x0, #0x2                   	// #2
   31104:	sdiv	x0, x19, x0
   31108:	str	x0, [sp, #104]
   3110c:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   31110:	cmp	x19, x0
   31114:	b.ge	30dc8 <mpfr_sincos_fast@@Base+0xa8>  // b.tcont
   31118:	sub	x20, x19, #0x1
   3111c:	asr	x20, x20, #6
   31120:	add	x20, x20, #0x1
   31124:	lsl	x0, x20, #4
   31128:	str	x0, [sp, #272]
   3112c:	cbnz	x1, 31160 <mpfr_sincos_fast@@Base+0x440>
   31130:	bl	cd90 <mpfr_allocate_func@plt>
   31134:	str	x0, [sp, #280]
   31138:	mov	w0, #0x1                   	// #1
   3113c:	str	x19, [sp, #176]
   31140:	ldr	x1, [sp, #280]
   31144:	str	w0, [sp, #184]
   31148:	str	x1, [sp, #200]
   3114c:	str	x19, [sp, #208]
   31150:	add	x20, x1, x20, lsl #3
   31154:	str	w0, [sp, #216]
   31158:	str	x20, [sp, #232]
   3115c:	b	30e40 <mpfr_sincos_fast@@Base+0x120>
   31160:	mov	x2, x0
   31164:	ldr	x0, [sp, #280]
   31168:	bl	c250 <mpfr_reallocate_func@plt>
   3116c:	b	31134 <mpfr_sincos_fast@@Base+0x414>
   31170:	ldr	w3, [sp, #184]
   31174:	mov	w2, w27
   31178:	mov	x1, x22
   3117c:	mov	x0, x24
   31180:	bl	c730 <mpfr_set4@plt>
   31184:	mov	w19, w0
   31188:	cbz	x23, 30e90 <mpfr_sincos_fast@@Base+0x170>
   3118c:	ldr	w3, [sp, #216]
   31190:	mov	w2, w27
   31194:	mov	x1, x25
   31198:	mov	x0, x23
   3119c:	bl	c730 <mpfr_set4@plt>
   311a0:	mov	w20, w0
   311a4:	ldr	x1, [sp, #272]
   311a8:	cbz	x1, 311b4 <mpfr_sincos_fast@@Base+0x494>
   311ac:	ldr	x0, [sp, #280]
   311b0:	bl	ccc0 <mpfr_free_func@plt>
   311b4:	cmp	w19, #0x0
   311b8:	cbz	w19, 311c4 <mpfr_sincos_fast@@Base+0x4a4>
   311bc:	cset	w19, le
   311c0:	add	w19, w19, #0x1
   311c4:	cmp	w20, #0x0
   311c8:	cbz	w20, 311d8 <mpfr_sincos_fast@@Base+0x4b8>
   311cc:	mov	w0, #0x4                   	// #4
   311d0:	mov	w20, #0x8                   	// #8
   311d4:	csel	w20, w0, w20, gt
   311d8:	orr	w0, w19, w20
   311dc:	ldp	x19, x20, [sp, #16]
   311e0:	ldp	x21, x22, [sp, #32]
   311e4:	ldp	x23, x24, [sp, #48]
   311e8:	ldp	x25, x26, [sp, #64]
   311ec:	ldp	x27, x28, [sp, #80]
   311f0:	ldp	x29, x30, [sp], #416
   311f4:	ret

00000000000311f8 <mpfr_sin_cos@@Base>:
   311f8:	stp	x29, x30, [sp, #-208]!
   311fc:	cmp	x0, x1
   31200:	mov	x29, sp
   31204:	stp	x19, x20, [sp, #16]
   31208:	stp	x21, x22, [sp, #32]
   3120c:	stp	x23, x24, [sp, #48]
   31210:	stp	x25, x26, [sp, #64]
   31214:	stp	x27, x28, [sp, #80]
   31218:	b.ne	31234 <mpfr_sin_cos@@Base+0x3c>  // b.any
   3121c:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   31220:	add	x2, x2, #0x933
   31224:	mov	w1, #0x28                  	// #40
   31228:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   3122c:	add	x0, x0, #0x91a
   31230:	bl	cbd0 <mpfr_assert_fail@plt>
   31234:	mov	x21, x0
   31238:	mov	x22, x1
   3123c:	ldr	x0, [x2, #16]
   31240:	str	x0, [sp, #96]
   31244:	mov	x27, x2
   31248:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3124c:	ldr	x1, [sp, #96]
   31250:	cmp	x1, x0
   31254:	b.gt	312f8 <mpfr_sin_cos@@Base+0x100>
   31258:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   3125c:	add	x28, x1, x0
   31260:	cmp	x28, #0x1
   31264:	b.hi	312bc <mpfr_sin_cos@@Base+0xc4>  // b.pmore
   31268:	add	x0, x0, #0x4
   3126c:	str	x0, [x21, #16]
   31270:	str	x0, [x22, #16]
   31274:	mov	w5, #0x0                   	// #0
   31278:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3127c:	ldr	x1, [x0, #2592]
   31280:	add	x0, x0, #0xa20
   31284:	blr	x1
   31288:	mrs	x1, tpidr_el0
   3128c:	add	x0, x1, x0
   31290:	ldr	w1, [x0]
   31294:	orr	w1, w1, #0x4
   31298:	str	w1, [x0]
   3129c:	mov	w0, w5
   312a0:	ldp	x19, x20, [sp, #16]
   312a4:	ldp	x21, x22, [sp, #32]
   312a8:	ldp	x23, x24, [sp, #48]
   312ac:	ldp	x25, x26, [sp, #64]
   312b0:	ldp	x27, x28, [sp, #80]
   312b4:	ldp	x29, x30, [sp], #208
   312b8:	ret
   312bc:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   312c0:	str	x0, [x21, #16]
   312c4:	ldr	w0, [x27, #8]
   312c8:	mov	x2, #0x0                   	// #0
   312cc:	str	w0, [x21, #8]
   312d0:	mov	x1, #0x1                   	// #1
   312d4:	mov	x0, x22
   312d8:	bl	c680 <mpfr_set_ui_2exp@plt>
   312dc:	mov	w5, w0
   312e0:	cmp	w0, #0x0
   312e4:	cbz	w0, 3129c <mpfr_sin_cos@@Base+0xa4>
   312e8:	mov	w5, #0x4                   	// #4
   312ec:	mov	w0, #0x8                   	// #8
   312f0:	csel	w5, w5, w0, gt
   312f4:	b	3129c <mpfr_sin_cos@@Base+0xa4>
   312f8:	mrs	x20, tpidr_el0
   312fc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   31300:	ldr	x1, [x0, #2592]
   31304:	add	x0, x0, #0xa20
   31308:	blr	x1
   3130c:	mov	w23, w3
   31310:	ldr	w26, [x20, x0]
   31314:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   31318:	ldr	x1, [x0, #2528]
   3131c:	add	x0, x0, #0x9e0
   31320:	blr	x1
   31324:	add	x1, x20, x0
   31328:	ldr	x0, [x20, x0]
   3132c:	str	x0, [sp, #104]
   31330:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   31334:	ldr	x2, [x0, #2560]
   31338:	add	x0, x0, #0xa00
   3133c:	blr	x2
   31340:	ldr	x2, [x20, x0]
   31344:	str	x2, [sp, #112]
   31348:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   3134c:	str	x2, [x1]
   31350:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   31354:	str	x1, [x20, x0]
   31358:	ldr	x1, [x21]
   3135c:	ldr	x0, [x22]
   31360:	cmp	x0, x1
   31364:	csel	x25, x0, x1, ge  // ge = tcont
   31368:	cmp	x25, #0x1
   3136c:	b.eq	31548 <mpfr_sin_cos@@Base+0x350>  // b.none
   31370:	b.gt	31384 <mpfr_sin_cos@@Base+0x18c>
   31374:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   31378:	mov	w1, #0x47                  	// #71
   3137c:	add	x2, x2, #0x50e
   31380:	b	31228 <mpfr_sin_cos@@Base+0x30>
   31384:	sub	x19, x25, #0x1
   31388:	clz	x2, x19
   3138c:	mov	w19, #0x40                  	// #64
   31390:	sub	w19, w19, w2
   31394:	sxtw	x19, w19
   31398:	ldr	x2, [sp, #96]
   3139c:	add	x19, x19, x25
   313a0:	add	x19, x19, #0xd
   313a4:	tbz	x2, #63, 315bc <mpfr_sin_cos@@Base+0x3c4>
   313a8:	mov	x24, #0xfffffffffffffffe    	// #-2
   313ac:	cmp	x21, x27
   313b0:	mul	x24, x2, x24
   313b4:	b.eq	31550 <mpfr_sin_cos@@Base+0x358>  // b.none
   313b8:	add	x2, x24, #0x2
   313bc:	add	x1, x1, #0x1
   313c0:	cmp	x1, x2
   313c4:	b.cs	315b8 <mpfr_sin_cos@@Base+0x3c0>  // b.hs, b.nlast
   313c8:	mov	w4, w23
   313cc:	mov	x1, x27
   313d0:	mov	x0, x21
   313d4:	mov	w3, #0x0                   	// #0
   313d8:	bl	c5d0 <mpfr_round_near_x@plt>
   313dc:	mov	w5, w0
   313e0:	cbz	w0, 315b8 <mpfr_sin_cos@@Base+0x3c0>
   313e4:	ldr	x0, [x22]
   313e8:	add	x2, x24, #0x1
   313ec:	add	x0, x0, #0x1
   313f0:	cmp	x0, x2
   313f4:	b.cs	315b8 <mpfr_sin_cos@@Base+0x3c0>  // b.hs, b.nlast
   313f8:	adrp	x1, 73000 <__gmpfr_l2b@@Base+0x200>
   313fc:	mov	w4, w23
   31400:	mov	x0, x22
   31404:	mov	w3, #0x0                   	// #0
   31408:	ldr	x1, [x1, #3928]
   3140c:	str	w5, [sp, #120]
   31410:	bl	c5d0 <mpfr_round_near_x@plt>
   31414:	mov	w6, w0
   31418:	ldr	w5, [sp, #120]
   3141c:	cbz	w0, 315b8 <mpfr_sin_cos@@Base+0x3c0>
   31420:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   31424:	ldr	x1, [x0, #2592]
   31428:	add	x0, x0, #0xa20
   3142c:	blr	x1
   31430:	ldr	w0, [x20, x0]
   31434:	orr	w26, w26, w0
   31438:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3143c:	ldr	x1, [x0, #2592]
   31440:	add	x0, x0, #0xa20
   31444:	blr	x1
   31448:	add	x1, x20, x0
   3144c:	str	w26, [x20, x0]
   31450:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   31454:	ldr	x2, [x0, #2528]
   31458:	add	x0, x0, #0x9e0
   3145c:	blr	x2
   31460:	ldr	x2, [sp, #104]
   31464:	str	x2, [x20, x0]
   31468:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3146c:	ldr	x2, [x0, #2560]
   31470:	add	x0, x0, #0xa00
   31474:	blr	x2
   31478:	ldr	x2, [sp, #112]
   3147c:	str	x2, [x20, x0]
   31480:	ldr	x0, [x21, #16]
   31484:	ldr	x2, [sp, #104]
   31488:	cmp	x2, x0
   3148c:	b.gt	31948 <mpfr_sin_cos@@Base+0x750>
   31490:	ldr	x2, [sp, #112]
   31494:	cmp	x2, x0
   31498:	b.lt	31948 <mpfr_sin_cos@@Base+0x750>  // b.tstop
   3149c:	cbnz	w5, 31968 <mpfr_sin_cos@@Base+0x770>
   314a0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   314a4:	ldr	x2, [x0, #2528]
   314a8:	add	x0, x0, #0x9e0
   314ac:	blr	x2
   314b0:	ldr	x0, [x20, x0]
   314b4:	ldr	x1, [x22, #16]
   314b8:	cmp	x1, x0
   314bc:	b.lt	314dc <mpfr_sin_cos@@Base+0x2e4>  // b.tstop
   314c0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   314c4:	ldr	x2, [x0, #2560]
   314c8:	add	x0, x0, #0xa00
   314cc:	blr	x2
   314d0:	ldr	x0, [x20, x0]
   314d4:	cmp	x1, x0
   314d8:	b.le	31974 <mpfr_sin_cos@@Base+0x77c>
   314dc:	mov	w1, w6
   314e0:	mov	w2, w23
   314e4:	mov	x0, x22
   314e8:	str	w5, [sp, #96]
   314ec:	bl	cbc0 <mpfr_check_range@plt>
   314f0:	mov	w6, w0
   314f4:	ldr	w5, [sp, #96]
   314f8:	cmp	w5, #0x0
   314fc:	cbz	w5, 31508 <mpfr_sin_cos@@Base+0x310>
   31500:	cset	w0, le
   31504:	add	w5, w0, #0x1
   31508:	cmp	w6, #0x0
   3150c:	cbz	w6, 3151c <mpfr_sin_cos@@Base+0x324>
   31510:	mov	w6, #0x4                   	// #4
   31514:	mov	w0, #0x8                   	// #8
   31518:	csel	w6, w6, w0, gt
   3151c:	orr	w5, w5, w6
   31520:	cbz	w5, 3129c <mpfr_sin_cos@@Base+0xa4>
   31524:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   31528:	ldr	x1, [x0, #2592]
   3152c:	add	x0, x0, #0xa20
   31530:	blr	x1
   31534:	add	x0, x20, x0
   31538:	ldr	w1, [x0]
   3153c:	orr	w1, w1, #0x8
   31540:	str	w1, [x0]
   31544:	b	3129c <mpfr_sin_cos@@Base+0xa4>
   31548:	mov	x19, #0x0                   	// #0
   3154c:	b	31398 <mpfr_sin_cos@@Base+0x1a0>
   31550:	add	x2, x24, #0x1
   31554:	add	x0, x0, #0x1
   31558:	cmp	x0, x2
   3155c:	b.cs	315b8 <mpfr_sin_cos@@Base+0x3c0>  // b.hs, b.nlast
   31560:	adrp	x1, 73000 <__gmpfr_l2b@@Base+0x200>
   31564:	mov	w4, w23
   31568:	mov	x0, x22
   3156c:	mov	w3, #0x0                   	// #0
   31570:	ldr	x1, [x1, #3928]
   31574:	bl	c5d0 <mpfr_round_near_x@plt>
   31578:	mov	w6, w0
   3157c:	cbz	w0, 315b8 <mpfr_sin_cos@@Base+0x3c0>
   31580:	ldr	x0, [x21]
   31584:	add	x2, x24, #0x2
   31588:	add	x0, x0, #0x1
   3158c:	cmp	x0, x2
   31590:	b.cs	315b8 <mpfr_sin_cos@@Base+0x3c0>  // b.hs, b.nlast
   31594:	mov	w4, w23
   31598:	mov	x1, x21
   3159c:	mov	x0, x21
   315a0:	mov	w3, #0x0                   	// #0
   315a4:	str	w6, [sp, #120]
   315a8:	bl	c5d0 <mpfr_round_near_x@plt>
   315ac:	ldr	w6, [sp, #120]
   315b0:	mov	w5, w0
   315b4:	cbnz	w0, 31420 <mpfr_sin_cos@@Base+0x228>
   315b8:	add	x19, x19, x24
   315bc:	mov	x0, #0x752f                	// #29999
   315c0:	cmp	x25, x0
   315c4:	b.le	31628 <mpfr_sin_cos@@Base+0x430>
   315c8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   315cc:	ldr	x1, [x0, #2592]
   315d0:	add	x0, x0, #0xa20
   315d4:	blr	x1
   315d8:	str	w26, [x20, x0]
   315dc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   315e0:	ldr	x1, [x0, #2528]
   315e4:	add	x0, x0, #0x9e0
   315e8:	blr	x1
   315ec:	mov	w3, w23
   315f0:	ldr	x1, [sp, #104]
   315f4:	str	x1, [x20, x0]
   315f8:	mov	x2, x27
   315fc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   31600:	ldr	x1, [x0, #2560]
   31604:	add	x0, x0, #0xa00
   31608:	blr	x1
   3160c:	ldr	x1, [sp, #112]
   31610:	str	x1, [x20, x0]
   31614:	mov	x1, x22
   31618:	mov	x0, x21
   3161c:	bl	c0a0 <mpfr_sincos_fast@plt>
   31620:	mov	w5, w0
   31624:	b	3129c <mpfr_sin_cos@@Base+0xa4>
   31628:	add	x28, sp, #0x90
   3162c:	add	x25, sp, #0xb0
   31630:	mov	x0, x28
   31634:	bl	bc50 <mpfr_init@plt>
   31638:	mov	x0, x25
   3163c:	bl	bc50 <mpfr_init@plt>
   31640:	mov	x0, #0x40                  	// #64
   31644:	str	x0, [sp, #120]
   31648:	ldr	x0, [sp, #96]
   3164c:	cmp	x0, #0x1
   31650:	b.le	31890 <mpfr_sin_cos@@Base+0x698>
   31654:	add	x1, x0, x19
   31658:	mov	x0, x28
   3165c:	sub	x1, x1, #0x1
   31660:	bl	bf50 <mpfr_set_prec@plt>
   31664:	mov	x1, x19
   31668:	mov	x0, x25
   3166c:	bl	bf50 <mpfr_set_prec@plt>
   31670:	mov	w2, #0x0                   	// #0
   31674:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   31678:	ldr	x1, [x0, #2640]
   3167c:	add	x0, x0, #0xa50
   31680:	blr	x1
   31684:	add	x1, x20, x0
   31688:	mov	x0, x28
   3168c:	bl	c410 <mpfr_cache@plt>
   31690:	mov	x1, x28
   31694:	mov	w3, #0x0                   	// #0
   31698:	mov	x2, #0x1                   	// #1
   3169c:	mov	x0, x28
   316a0:	bl	c350 <mpfr_mul_2ui@plt>
   316a4:	mov	x2, x28
   316a8:	mov	x1, x27
   316ac:	mov	w3, #0x0                   	// #0
   316b0:	mov	x0, x25
   316b4:	bl	cdb0 <mpfr_remainder@plt>
   316b8:	mov	x1, x28
   316bc:	mov	w3, #0x0                   	// #0
   316c0:	mov	x2, #0x1                   	// #1
   316c4:	mov	x0, x28
   316c8:	bl	c980 <mpfr_div_2ui@plt>
   316cc:	ldr	w0, [sp, #184]
   316d0:	mov	x2, x25
   316d4:	mov	x1, x28
   316d8:	mov	w3, #0x1                   	// #1
   316dc:	cmp	w0, #0x0
   316e0:	mov	x0, x28
   316e4:	b.le	31888 <mpfr_sin_cos@@Base+0x690>
   316e8:	bl	bbf0 <mpfr_sub@plt>
   316ec:	ldr	x1, [sp, #192]
   316f0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   316f4:	cmp	x1, x0
   316f8:	b.eq	31860 <mpfr_sin_cos@@Base+0x668>  // b.none
   316fc:	mov	x0, #0x3                   	// #3
   31700:	sub	x0, x0, x19
   31704:	cmp	x1, x0
   31708:	b.lt	31860 <mpfr_sin_cos@@Base+0x668>  // b.tstop
   3170c:	ldr	x1, [sp, #160]
   31710:	cmp	x0, x1
   31714:	b.gt	31860 <mpfr_sin_cos@@Base+0x668>
   31718:	mov	x3, x25
   3171c:	mov	w24, #0x1                   	// #1
   31720:	ldr	w0, [x3, #8]
   31724:	mov	x1, x19
   31728:	str	w0, [sp, #132]
   3172c:	mov	x0, x28
   31730:	str	x3, [sp, #136]
   31734:	bl	bf50 <mpfr_set_prec@plt>
   31738:	ldr	x3, [sp, #136]
   3173c:	mov	w2, #0x1                   	// #1
   31740:	mov	x0, x28
   31744:	mov	x1, x3
   31748:	bl	c4c0 <mpfr_cos@plt>
   3174c:	ldr	x0, [sp, #160]
   31750:	sub	x2, x19, #0x3
   31754:	cmp	w24, #0x0
   31758:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   3175c:	add	x2, x2, x0
   31760:	csel	x2, x2, x19, ne  // ne = any
   31764:	cmp	x0, x1
   31768:	b.le	31860 <mpfr_sin_cos@@Base+0x668>
   3176c:	cmp	w23, #0x0
   31770:	ldr	x1, [sp, #144]
   31774:	cset	x0, eq  // eq = none
   31778:	str	x0, [sp, #136]
   3177c:	ldr	x0, [sp, #168]
   31780:	sub	x1, x1, #0x1
   31784:	ldr	x3, [x22]
   31788:	asr	x1, x1, #6
   3178c:	add	x1, x1, #0x1
   31790:	cinc	x3, x3, eq  // eq = none
   31794:	bl	c400 <mpfr_round_p@plt>
   31798:	cbz	w0, 31860 <mpfr_sin_cos@@Base+0x668>
   3179c:	ldr	x1, [sp, #144]
   317a0:	mov	x0, x25
   317a4:	add	w24, w24, #0x1
   317a8:	bl	bf50 <mpfr_set_prec@plt>
   317ac:	add	w24, w24, w24, lsl #1
   317b0:	mov	x1, x28
   317b4:	mov	x0, x25
   317b8:	bl	c530 <mpfr_swap@plt>
   317bc:	mov	x1, x25
   317c0:	mov	w2, #0x2                   	// #2
   317c4:	mov	x0, x28
   317c8:	bl	c490 <mpfr_sqr@plt>
   317cc:	mov	w3, #0x0                   	// #0
   317d0:	mov	x2, x28
   317d4:	mov	x1, #0x1                   	// #1
   317d8:	mov	x0, x28
   317dc:	bl	cae0 <mpfr_ui_sub@plt>
   317e0:	mov	x1, x28
   317e4:	mov	w2, #0x0                   	// #0
   317e8:	mov	x0, x28
   317ec:	bl	c9c0 <mpfr_sqrt@plt>
   317f0:	ldr	w1, [sp, #132]
   317f4:	sxtw	x2, w24
   317f8:	ldr	x0, [sp, #160]
   317fc:	sub	x2, x2, x0
   31800:	tbz	w1, #31, 31810 <mpfr_sin_cos@@Base+0x618>
   31804:	ldr	w1, [sp, #152]
   31808:	neg	w1, w1
   3180c:	str	w1, [sp, #152]
   31810:	add	x24, x0, x19
   31814:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   31818:	sub	x24, x24, x2
   3181c:	cmp	x0, x1
   31820:	b.gt	3189c <mpfr_sin_cos@@Base+0x6a4>
   31824:	ldr	x2, [x21]
   31828:	cmp	x2, x24
   3182c:	b.gt	31918 <mpfr_sin_cos@@Base+0x720>
   31830:	ldr	x0, [sp, #160]
   31834:	cmp	x0, #0x1
   31838:	b.ne	31860 <mpfr_sin_cos@@Base+0x668>  // b.any
   3183c:	ldr	x0, [sp, #144]
   31840:	ldr	x1, [sp, #168]
   31844:	sub	x0, x0, #0x1
   31848:	asr	x0, x0, #6
   3184c:	ldr	x1, [x1, x0, lsl #3]
   31850:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   31854:	cmp	x1, x0
   31858:	b.ne	31860 <mpfr_sin_cos@@Base+0x668>  // b.any
   3185c:	lsl	x19, x19, #1
   31860:	ldr	x1, [sp, #120]
   31864:	mov	x0, #0xfffffffffffffeff    	// #-257
   31868:	movk	x0, #0x7fff, lsl #48
   3186c:	sub	x0, x0, x19
   31870:	cmp	x0, x1
   31874:	b.ge	31924 <mpfr_sin_cos@@Base+0x72c>  // b.tcont
   31878:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   3187c:	mov	w1, #0xd2                  	// #210
   31880:	add	x2, x2, #0x6df
   31884:	b	31228 <mpfr_sin_cos@@Base+0x30>
   31888:	bl	c230 <mpfr_add@plt>
   3188c:	b	316ec <mpfr_sin_cos@@Base+0x4f4>
   31890:	mov	x3, x27
   31894:	mov	w24, #0x0                   	// #0
   31898:	b	31720 <mpfr_sin_cos@@Base+0x528>
   3189c:	ldp	x0, x1, [sp, #136]
   318a0:	mov	x2, x24
   318a4:	ldr	x3, [x21]
   318a8:	add	x3, x0, x3
   318ac:	sub	x1, x1, #0x1
   318b0:	ldr	x0, [sp, #168]
   318b4:	asr	x1, x1, #6
   318b8:	add	x1, x1, #0x1
   318bc:	bl	c400 <mpfr_round_p@plt>
   318c0:	cbz	w0, 31824 <mpfr_sin_cos@@Base+0x62c>
   318c4:	ldr	w3, [sp, #152]
   318c8:	mov	w2, w23
   318cc:	mov	x1, x28
   318d0:	mov	x0, x21
   318d4:	bl	c730 <mpfr_set4@plt>
   318d8:	mov	w5, w0
   318dc:	ldr	w3, [sp, #184]
   318e0:	mov	w2, w23
   318e4:	mov	x1, x25
   318e8:	mov	x0, x22
   318ec:	str	w5, [sp, #120]
   318f0:	bl	c730 <mpfr_set4@plt>
   318f4:	mov	w6, w0
   318f8:	mov	x0, x28
   318fc:	str	w6, [sp, #96]
   31900:	bl	c0f0 <mpfr_clear@plt>
   31904:	mov	x0, x25
   31908:	bl	c0f0 <mpfr_clear@plt>
   3190c:	ldr	w6, [sp, #96]
   31910:	ldr	w5, [sp, #120]
   31914:	b	31438 <mpfr_sin_cos@@Base+0x240>
   31918:	sub	x2, x2, x24
   3191c:	add	x19, x19, x2
   31920:	b	31830 <mpfr_sin_cos@@Base+0x638>
   31924:	ldr	x0, [sp, #120]
   31928:	add	x19, x19, x0
   3192c:	mov	x0, #0x2                   	// #2
   31930:	mov	x1, x19
   31934:	sdiv	x0, x19, x0
   31938:	str	x0, [sp, #120]
   3193c:	mov	x0, x28
   31940:	bl	bf50 <mpfr_set_prec@plt>
   31944:	b	31648 <mpfr_sin_cos@@Base+0x450>
   31948:	mov	w1, w5
   3194c:	mov	w2, w23
   31950:	mov	x0, x21
   31954:	str	w6, [sp, #96]
   31958:	bl	cbc0 <mpfr_check_range@plt>
   3195c:	mov	w5, w0
   31960:	ldr	w6, [sp, #96]
   31964:	b	314a0 <mpfr_sin_cos@@Base+0x2a8>
   31968:	orr	w26, w26, #0x8
   3196c:	str	w26, [x1]
   31970:	b	314a0 <mpfr_sin_cos@@Base+0x2a8>
   31974:	cbz	w6, 314f8 <mpfr_sin_cos@@Base+0x300>
   31978:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3197c:	ldr	x1, [x0, #2592]
   31980:	add	x0, x0, #0xa20
   31984:	blr	x1
   31988:	add	x0, x20, x0
   3198c:	ldr	w1, [x0]
   31990:	orr	w1, w1, #0x8
   31994:	str	w1, [x0]
   31998:	b	314f8 <mpfr_sin_cos@@Base+0x300>

000000000003199c <mpfr_set_nan@@Base>:
   3199c:	stp	x29, x30, [sp, #-16]!
   319a0:	mov	x1, #0x2                   	// #2
   319a4:	movk	x1, #0x8000, lsl #48
   319a8:	mov	x29, sp
   319ac:	str	x1, [x0, #16]
   319b0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   319b4:	ldr	x1, [x0, #2592]
   319b8:	add	x0, x0, #0xa20
   319bc:	blr	x1
   319c0:	mrs	x1, tpidr_el0
   319c4:	add	x0, x1, x0
   319c8:	ldr	w1, [x0]
   319cc:	orr	w1, w1, #0x4
   319d0:	str	w1, [x0]
   319d4:	ldp	x29, x30, [sp], #16
   319d8:	ret

00000000000319dc <mpfr_set_inf@@Base>:
   319dc:	cmp	w1, #0x0
   319e0:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   319e4:	str	x2, [x0, #16]
   319e8:	mov	w2, #0xffffffff            	// #-1
   319ec:	cneg	w2, w2, ge  // ge = tcont
   319f0:	str	w2, [x0, #8]
   319f4:	ret

00000000000319f8 <mpfr_set_zero@@Base>:
   319f8:	cmp	w1, #0x0
   319fc:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   31a00:	mov	w1, #0xffffffff            	// #-1
   31a04:	csinc	w1, w1, wzr, lt  // lt = tstop
   31a08:	str	w1, [x0, #8]
   31a0c:	str	x2, [x0, #16]
   31a10:	ret

0000000000031a14 <mpfr_powerof2_raw2@@Base>:
   31a14:	sub	x1, x1, #0x1
   31a18:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   31a1c:	ldr	x3, [x0, x1, lsl #3]
   31a20:	cmp	x3, x2
   31a24:	b.ne	31a44 <mpfr_powerof2_raw2@@Base+0x30>  // b.any
   31a28:	cmp	x1, #0x0
   31a2c:	b.gt	31a38 <mpfr_powerof2_raw2@@Base+0x24>
   31a30:	mov	w0, #0x1                   	// #1
   31a34:	ret
   31a38:	sub	x1, x1, #0x1
   31a3c:	ldr	x2, [x0, x1, lsl #3]
   31a40:	cbz	x2, 31a28 <mpfr_powerof2_raw2@@Base+0x14>
   31a44:	mov	w0, #0x0                   	// #0
   31a48:	b	31a34 <mpfr_powerof2_raw2@@Base+0x20>

0000000000031a4c <mpfr_powerof2_raw@@Base>:
   31a4c:	ldr	x1, [x0]
   31a50:	ldr	x0, [x0, #24]
   31a54:	sub	x1, x1, #0x1
   31a58:	asr	x1, x1, #6
   31a5c:	add	x1, x1, #0x1
   31a60:	b	c860 <mpfr_powerof2_raw2@plt>
   31a64:	stp	x29, x30, [sp, #-304]!
   31a68:	mov	x29, sp
   31a6c:	stp	x25, x26, [sp, #64]
   31a70:	mrs	x25, tpidr_el0
   31a74:	stp	x19, x20, [sp, #16]
   31a78:	mov	w19, w5
   31a7c:	stp	x21, x22, [sp, #32]
   31a80:	mov	x21, x2
   31a84:	mov	x22, x0
   31a88:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   31a8c:	ldr	x2, [x0, #2592]
   31a90:	add	x0, x0, #0xa20
   31a94:	blr	x2
   31a98:	add	x20, x25, x0
   31a9c:	stp	x23, x24, [sp, #48]
   31aa0:	mov	x24, x3
   31aa4:	mov	x2, x1
   31aa8:	mov	x23, x4
   31aac:	add	x1, sp, #0x5c
   31ab0:	mov	w3, #0x3                   	// #3
   31ab4:	str	wzr, [x25, x0]
   31ab8:	mov	x0, x24
   31abc:	bl	c120 <mpfr_lgamma@plt>
   31ac0:	ldr	w1, [x20]
   31ac4:	cbnz	w0, 31ae0 <mpfr_powerof2_raw@@Base+0x94>
   31ac8:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   31acc:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   31ad0:	add	x2, x2, #0x93a
   31ad4:	add	x0, x0, #0x945
   31ad8:	mov	w1, #0x4b                  	// #75
   31adc:	bl	cbd0 <mpfr_assert_fail@plt>
   31ae0:	ldr	w3, [x24, #8]
   31ae4:	tbz	w1, #1, 31b48 <mpfr_powerof2_raw@@Base+0xfc>
   31ae8:	ldr	w0, [x21]
   31aec:	cmp	w3, #0x0
   31af0:	ldr	w2, [sp, #92]
   31af4:	b.le	31b2c <mpfr_powerof2_raw@@Base+0xe0>
   31af8:	orr	w0, w0, #0x2
   31afc:	str	w0, [x21]
   31b00:	mov	w1, w19
   31b04:	mov	x0, x22
   31b08:	bl	bfc0 <mpfr_overflow@plt>
   31b0c:	mov	w19, w0
   31b10:	mov	w0, w19
   31b14:	ldp	x19, x20, [sp, #16]
   31b18:	ldp	x21, x22, [sp, #32]
   31b1c:	ldp	x23, x24, [sp, #48]
   31b20:	ldp	x25, x26, [sp, #64]
   31b24:	ldp	x29, x30, [sp], #304
   31b28:	ret
   31b2c:	cmp	w19, #0x0
   31b30:	orr	w0, w0, #0x1
   31b34:	str	w0, [x21]
   31b38:	csinc	w1, w19, wzr, ne  // ne = any
   31b3c:	mov	x0, x22
   31b40:	bl	c450 <mpfr_underflow@plt>
   31b44:	b	31b0c <mpfr_powerof2_raw@@Base+0xc0>
   31b48:	mov	x1, x24
   31b4c:	mov	w2, #0x0                   	// #0
   31b50:	mov	x0, x23
   31b54:	bl	c730 <mpfr_set4@plt>
   31b58:	mov	x0, x23
   31b5c:	bl	c1b0 <mpfr_nextabove@plt>
   31b60:	ldr	w0, [sp, #92]
   31b64:	tbz	w0, #31, 31b7c <mpfr_powerof2_raw@@Base+0x130>
   31b68:	cmp	w19, #0x2
   31b6c:	b.eq	31b90 <mpfr_powerof2_raw@@Base+0x144>  // b.none
   31b70:	cmp	w19, #0x3
   31b74:	mov	w0, #0x2                   	// #2
   31b78:	csel	w19, w19, w0, ne  // ne = any
   31b7c:	ldr	x26, [x22]
   31b80:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   31b84:	cmp	x26, x0
   31b88:	b.lt	31b98 <mpfr_powerof2_raw@@Base+0x14c>  // b.tstop
   31b8c:	bl	c970 <mpfr_abort_prec_max@plt>
   31b90:	mov	w19, #0x3                   	// #3
   31b94:	b	31b7c <mpfr_powerof2_raw@@Base+0x130>
   31b98:	sub	x20, x26, #0x1
   31b9c:	asr	x20, x20, #6
   31ba0:	add	x20, x20, #0x1
   31ba4:	lsl	x0, x20, #1
   31ba8:	cmp	x0, #0x10
   31bac:	b.le	31cc8 <mpfr_powerof2_raw@@Base+0x27c>
   31bb0:	lsl	x0, x20, #4
   31bb4:	str	x0, [sp, #160]
   31bb8:	bl	cd90 <mpfr_allocate_func@plt>
   31bbc:	str	x0, [sp, #168]
   31bc0:	mov	w0, #0x1                   	// #1
   31bc4:	str	x26, [sp, #96]
   31bc8:	mov	w2, w19
   31bcc:	ldr	x1, [sp, #168]
   31bd0:	str	w0, [sp, #104]
   31bd4:	str	x1, [sp, #120]
   31bd8:	str	x26, [sp, #128]
   31bdc:	add	x20, x1, x20, lsl #3
   31be0:	str	w0, [sp, #136]
   31be4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   31be8:	ldr	x1, [x0, #2592]
   31bec:	add	x0, x0, #0xa20
   31bf0:	blr	x1
   31bf4:	add	x26, x25, x0
   31bf8:	str	wzr, [x25, x0]
   31bfc:	add	x25, sp, #0x60
   31c00:	mov	x1, x24
   31c04:	mov	x0, x25
   31c08:	str	x20, [sp, #152]
   31c0c:	bl	c7e0 <mpfr_exp@plt>
   31c10:	mov	w2, w19
   31c14:	mov	w20, w0
   31c18:	add	x0, sp, #0x80
   31c1c:	ldr	w24, [x26]
   31c20:	mov	x1, x23
   31c24:	mov	x19, x0
   31c28:	str	wzr, [x26]
   31c2c:	bl	c7e0 <mpfr_exp@plt>
   31c30:	mov	x1, x19
   31c34:	ldr	w26, [x26]
   31c38:	mov	w23, w0
   31c3c:	mov	x0, x25
   31c40:	bl	caf0 <mpfr_equal_p@plt>
   31c44:	mov	w19, w0
   31c48:	cbz	w0, 31cb4 <mpfr_powerof2_raw@@Base+0x268>
   31c4c:	cmp	w24, w26
   31c50:	b.ne	31cd4 <mpfr_powerof2_raw@@Base+0x288>  // b.any
   31c54:	cmp	w20, #0x0
   31c58:	ccmp	w23, #0x0, #0x4, gt
   31c5c:	b.gt	31c84 <mpfr_powerof2_raw@@Base+0x238>
   31c60:	cmp	w20, #0x0
   31c64:	ccmp	w23, #0x0, #0x0, lt  // lt = tstop
   31c68:	b.lt	31c84 <mpfr_powerof2_raw@@Base+0x238>  // b.tstop
   31c6c:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   31c70:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   31c74:	add	x2, x2, #0x94f
   31c78:	add	x0, x0, #0x945
   31c7c:	mov	w1, #0x69                  	// #105
   31c80:	bl	cbd0 <mpfr_assert_fail@plt>
   31c84:	ldr	w3, [sp, #92]
   31c88:	mov	x1, x25
   31c8c:	mov	x0, x22
   31c90:	mov	w2, #0x0                   	// #0
   31c94:	bl	c730 <mpfr_set4@plt>
   31c98:	ldr	w0, [sp, #92]
   31c9c:	tbz	w0, #31, 31ca4 <mpfr_powerof2_raw@@Base+0x258>
   31ca0:	neg	w20, w20
   31ca4:	ldr	w0, [x21]
   31ca8:	mov	w19, w20
   31cac:	orr	w24, w0, w24
   31cb0:	str	w24, [x21]
   31cb4:	ldr	x1, [sp, #160]
   31cb8:	cbz	x1, 31b10 <mpfr_powerof2_raw@@Base+0xc4>
   31cbc:	ldr	x0, [sp, #168]
   31cc0:	bl	ccc0 <mpfr_free_func@plt>
   31cc4:	b	31b10 <mpfr_powerof2_raw@@Base+0xc4>
   31cc8:	add	x0, sp, #0xb0
   31ccc:	str	xzr, [sp, #160]
   31cd0:	b	31bbc <mpfr_powerof2_raw@@Base+0x170>
   31cd4:	mov	w19, #0x0                   	// #0
   31cd8:	b	31cb4 <mpfr_powerof2_raw@@Base+0x268>
   31cdc:	stp	x29, x30, [sp, #-416]!
   31ce0:	mov	x29, sp
   31ce4:	stp	x23, x24, [sp, #48]
   31ce8:	mov	x24, x1
   31cec:	mov	x1, #0x1                   	// #1
   31cf0:	stp	x19, x20, [sp, #16]
   31cf4:	add	x20, sp, #0x100
   31cf8:	add	x19, sp, #0x120
   31cfc:	stp	x21, x22, [sp, #32]
   31d00:	add	x23, sp, #0x140
   31d04:	add	x21, sp, #0x160
   31d08:	stp	x25, x26, [sp, #64]
   31d0c:	add	x26, sp, #0x180
   31d10:	stp	x27, x28, [sp, #80]
   31d14:	str	d8, [sp, #96]
   31d18:	str	x0, [sp, #160]
   31d1c:	mov	x0, x24
   31d20:	str	w2, [sp, #172]
   31d24:	mov	x2, #0x0                   	// #0
   31d28:	bl	bfd0 <mpfr_cmp_ui_2exp@plt>
   31d2c:	mov	w22, w0
   31d30:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   31d34:	ldr	x1, [x0, #2592]
   31d38:	add	x0, x0, #0xa20
   31d3c:	blr	x1
   31d40:	mrs	x1, tpidr_el0
   31d44:	str	x1, [sp, #112]
   31d48:	ldr	x2, [sp, #112]
   31d4c:	ldr	w0, [x1, x0]
   31d50:	str	w0, [sp, #232]
   31d54:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   31d58:	ldr	x1, [x0, #2528]
   31d5c:	add	x0, x0, #0x9e0
   31d60:	blr	x1
   31d64:	ldr	x1, [sp, #112]
   31d68:	add	x1, x1, x0
   31d6c:	ldr	x0, [x2, x0]
   31d70:	str	x0, [sp, #240]
   31d74:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   31d78:	ldr	x2, [x0, #2560]
   31d7c:	add	x0, x0, #0xa00
   31d80:	blr	x2
   31d84:	ldr	x2, [sp, #112]
   31d88:	ldr	x2, [x2, x0]
   31d8c:	str	x2, [sp, #248]
   31d90:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   31d94:	str	x2, [x1]
   31d98:	ldr	x2, [sp, #112]
   31d9c:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   31da0:	str	x1, [x2, x0]
   31da4:	mov	x1, #0x1                   	// #1
   31da8:	ldr	x0, [sp, #160]
   31dac:	ldr	x0, [x0]
   31db0:	str	x0, [sp, #136]
   31db4:	mov	x0, x20
   31db8:	bl	cb10 <mpfr_init2@plt>
   31dbc:	mov	x0, x19
   31dc0:	mov	x1, #0x1                   	// #1
   31dc4:	bl	cb10 <mpfr_init2@plt>
   31dc8:	mov	x0, x23
   31dcc:	mov	x1, #0x1                   	// #1
   31dd0:	bl	cb10 <mpfr_init2@plt>
   31dd4:	mov	x0, x21
   31dd8:	mov	x1, #0x1                   	// #1
   31ddc:	bl	cb10 <mpfr_init2@plt>
   31de0:	mov	x0, x26
   31de4:	mov	x1, #0x1                   	// #1
   31de8:	bl	cb10 <mpfr_init2@plt>
   31dec:	ldr	x0, [sp, #136]
   31df0:	tbz	w22, #31, 321bc <mpfr_powerof2_raw@@Base+0x770>
   31df4:	cmp	x0, #0x1
   31df8:	b.eq	31e54 <mpfr_powerof2_raw@@Base+0x408>  // b.none
   31dfc:	b.gt	31e18 <mpfr_powerof2_raw@@Base+0x3cc>
   31e00:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   31e04:	add	x2, x2, #0x685
   31e08:	mov	w1, #0x14a                 	// #330
   31e0c:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   31e10:	add	x0, x0, #0x945
   31e14:	bl	cbd0 <mpfr_assert_fail@plt>
   31e18:	ldr	x0, [sp, #136]
   31e1c:	sub	x5, x0, #0x1
   31e20:	clz	x0, x5
   31e24:	mov	w5, #0x40                  	// #64
   31e28:	sub	w5, w5, w0
   31e2c:	sxtw	x5, w5
   31e30:	ldr	x0, [sp, #136]
   31e34:	add	x0, x5, x0
   31e38:	cmp	x0, #0x1
   31e3c:	b.eq	32008 <mpfr_powerof2_raw@@Base+0x5bc>  // b.none
   31e40:	b.gt	31e5c <mpfr_powerof2_raw@@Base+0x410>
   31e44:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   31e48:	mov	w1, #0x14b                 	// #331
   31e4c:	add	x2, x2, #0x92b
   31e50:	b	31e0c <mpfr_powerof2_raw@@Base+0x3c0>
   31e54:	mov	x5, #0x0                   	// #0
   31e58:	b	31e30 <mpfr_powerof2_raw@@Base+0x3e4>
   31e5c:	sub	x5, x0, #0x1
   31e60:	clz	x1, x5
   31e64:	mov	w5, #0x4e                  	// #78
   31e68:	sub	w5, w5, w1
   31e6c:	add	x27, x0, w5, sxtw
   31e70:	mov	x22, #0x40                  	// #64
   31e74:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
   31e78:	mov	x1, x27
   31e7c:	mov	x0, x20
   31e80:	bl	bf50 <mpfr_set_prec@plt>
   31e84:	mov	x1, x27
   31e88:	mov	x0, x19
   31e8c:	bl	bf50 <mpfr_set_prec@plt>
   31e90:	mov	x1, x27
   31e94:	mov	x0, x23
   31e98:	bl	bf50 <mpfr_set_prec@plt>
   31e9c:	mov	x1, x27
   31ea0:	mov	x0, x21
   31ea4:	bl	bf50 <mpfr_set_prec@plt>
   31ea8:	mov	x1, #0x2                   	// #2
   31eac:	mov	w3, #0x3                   	// #3
   31eb0:	mov	x2, x24
   31eb4:	mov	x0, x20
   31eb8:	bl	cae0 <mpfr_ui_sub@plt>
   31ebc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   31ec0:	ldr	x1, [x0, #2640]
   31ec4:	add	x0, x0, #0xa50
   31ec8:	blr	x1
   31ecc:	mov	w2, #0x0                   	// #0
   31ed0:	ldr	x1, [sp, #112]
   31ed4:	add	x1, x1, x0
   31ed8:	mov	x0, x19
   31edc:	bl	c410 <mpfr_cache@plt>
   31ee0:	mov	x1, x20
   31ee4:	mov	x0, x23
   31ee8:	mov	w2, #0x0                   	// #0
   31eec:	bl	c690 <mpfr_lngamma@plt>
   31ef0:	ldr	x0, [sp, #336]
   31ef4:	cmp	x0, x25
   31ef8:	b.eq	32010 <mpfr_powerof2_raw@@Base+0x5c4>  // b.none
   31efc:	ldr	d8, [sp, #272]
   31f00:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   31f04:	ldr	d0, [x0, #2552]
   31f08:	scvtf	d1, d8
   31f0c:	fmul	d0, d1, d0
   31f10:	bl	c9e0 <__gmpfr_ceil_log2@plt>
   31f14:	fmov	x1, d8
   31f18:	ldr	x2, [sp, #336]
   31f1c:	add	x7, x1, x0
   31f20:	add	x7, x7, #0x1
   31f24:	sub	x28, x7, x2
   31f28:	mov	w3, #0x0                   	// #0
   31f2c:	mov	x2, x19
   31f30:	mov	x1, x20
   31f34:	mov	x0, x20
   31f38:	bl	bdd0 <mpfr_mul@plt>
   31f3c:	ldr	x4, [sp, #272]
   31f40:	mov	x1, x20
   31f44:	mov	w2, #0x0                   	// #0
   31f48:	mov	x0, x20
   31f4c:	str	x4, [sp, #120]
   31f50:	bl	c4e0 <mpfr_sin@plt>
   31f54:	ldr	x4, [sp, #120]
   31f58:	mov	x1, x24
   31f5c:	ldr	x0, [sp, #272]
   31f60:	mov	w3, #0x0                   	// #0
   31f64:	mov	x2, #0x1                   	// #1
   31f68:	sub	x4, x4, x0
   31f6c:	mov	x0, x21
   31f70:	adds	x4, x4, #0x3
   31f74:	csinv	x4, x4, xzr, pl  // pl = nfrst
   31f78:	str	x4, [sp, #120]
   31f7c:	bl	c5c0 <mpfr_sub_ui@plt>
   31f80:	mov	x2, x19
   31f84:	mov	x1, x21
   31f88:	mov	w3, #0x0                   	// #0
   31f8c:	mov	x0, x21
   31f90:	bl	bdd0 <mpfr_mul@plt>
   31f94:	mov	x2, x20
   31f98:	mov	x1, x21
   31f9c:	mov	w3, #0x0                   	// #0
   31fa0:	mov	x0, x21
   31fa4:	bl	c6b0 <mpfr_div@plt>
   31fa8:	mov	w3, #0x1                   	// #1
   31fac:	mov	x1, x21
   31fb0:	mov	w2, #0x0                   	// #0
   31fb4:	mov	x0, x21
   31fb8:	bl	c730 <mpfr_set4@plt>
   31fbc:	mov	x1, x21
   31fc0:	mov	x0, x21
   31fc4:	mov	w2, #0x0                   	// #0
   31fc8:	bl	c110 <mpfr_log@plt>
   31fcc:	ldr	x4, [sp, #120]
   31fd0:	add	x0, x4, #0x5
   31fd4:	cmp	x0, x27
   31fd8:	b.lt	32018 <mpfr_powerof2_raw@@Base+0x5cc>  // b.tstop
   31fdc:	add	x4, x4, #0x6
   31fe0:	add	x27, x27, x4
   31fe4:	mov	x0, #0xfffffffffffffeff    	// #-257
   31fe8:	movk	x0, #0x7fff, lsl #48
   31fec:	sub	x0, x0, x27
   31ff0:	cmp	x0, x22
   31ff4:	b.ge	321ac <mpfr_powerof2_raw@@Base+0x760>  // b.tcont
   31ff8:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   31ffc:	mov	w1, #0x1a5                 	// #421
   32000:	add	x2, x2, #0xb94
   32004:	b	31e0c <mpfr_powerof2_raw@@Base+0x3c0>
   32008:	mov	w5, #0xe                   	// #14
   3200c:	b	31e6c <mpfr_powerof2_raw@@Base+0x420>
   32010:	mov	x28, #0x0                   	// #0
   32014:	b	31f28 <mpfr_powerof2_raw@@Base+0x4dc>
   32018:	ldr	x0, [sp, #368]
   3201c:	add	x4, x4, #0x4
   32020:	cmp	x0, x25
   32024:	b.eq	32030 <mpfr_powerof2_raw@@Base+0x5e4>  // b.none
   32028:	sub	x4, x4, x0
   3202c:	add	x4, x4, #0x1
   32030:	cmp	x4, #0x0
   32034:	csinv	x4, x4, xzr, ge  // ge = tcont
   32038:	cmp	x0, x25
   3203c:	add	x4, x4, #0x1
   32040:	ldr	x6, [sp, #336]
   32044:	b.eq	3204c <mpfr_powerof2_raw@@Base+0x600>  // b.none
   32048:	add	x4, x4, x0
   3204c:	mov	x1, x21
   32050:	mov	x2, x23
   32054:	mov	x0, x20
   32058:	mov	w3, #0x0                   	// #0
   3205c:	stp	x6, x4, [sp, #120]
   32060:	bl	bbf0 <mpfr_sub@plt>
   32064:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   32068:	ldr	x1, [sp, #272]
   3206c:	cmp	x1, x0
   32070:	b.le	31fe4 <mpfr_powerof2_raw@@Base+0x598>
   32074:	ldp	x6, x4, [sp, #120]
   32078:	cmp	x28, #0x0
   3207c:	mov	x0, #0xffffffffffffffff    	// #-1
   32080:	csel	x2, x28, x0, ge  // ge = tcont
   32084:	add	x2, x2, #0x1
   32088:	add	x2, x6, x2
   3208c:	cmp	x2, x4
   32090:	csel	x2, x2, x4, ge  // ge = tcont
   32094:	sub	x2, x2, x1
   32098:	adds	x2, x2, #0x1
   3209c:	csel	x2, x2, x0, pl  // pl = nfrst
   320a0:	ldr	w0, [sp, #172]
   320a4:	ldr	x1, [sp, #256]
   320a8:	cmp	w0, #0x0
   320ac:	ldr	x0, [sp, #136]
   320b0:	sub	x1, x1, #0x1
   320b4:	add	x2, x2, #0x1
   320b8:	cinc	x3, x0, eq  // eq = none
   320bc:	asr	x1, x1, #6
   320c0:	ldr	x0, [sp, #280]
   320c4:	sub	x2, x27, x2
   320c8:	add	x1, x1, #0x1
   320cc:	bl	c400 <mpfr_round_p@plt>
   320d0:	cbz	w0, 31fe4 <mpfr_powerof2_raw@@Base+0x598>
   320d4:	ldr	w2, [sp, #172]
   320d8:	mov	x1, x20
   320dc:	ldr	w3, [sp, #264]
   320e0:	ldr	x0, [sp, #160]
   320e4:	bl	c730 <mpfr_set4@plt>
   320e8:	mov	w25, w0
   320ec:	mov	x0, x20
   320f0:	bl	c0f0 <mpfr_clear@plt>
   320f4:	mov	x0, x19
   320f8:	bl	c0f0 <mpfr_clear@plt>
   320fc:	mov	x0, x23
   32100:	bl	c0f0 <mpfr_clear@plt>
   32104:	mov	x0, x21
   32108:	bl	c0f0 <mpfr_clear@plt>
   3210c:	mov	x0, x26
   32110:	bl	c0f0 <mpfr_clear@plt>
   32114:	ldr	w1, [sp, #232]
   32118:	ldr	x3, [sp, #240]
   3211c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   32120:	ldr	x2, [x0, #2592]
   32124:	add	x0, x0, #0xa20
   32128:	blr	x2
   3212c:	ldr	x2, [sp, #112]
   32130:	add	x4, x2, x0
   32134:	str	w1, [x2, x0]
   32138:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3213c:	ldr	x2, [x0, #2528]
   32140:	add	x0, x0, #0x9e0
   32144:	blr	x2
   32148:	ldr	x2, [sp, #112]
   3214c:	str	x3, [x2, x0]
   32150:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   32154:	ldr	x5, [x0, #2560]
   32158:	add	x0, x0, #0xa00
   3215c:	blr	x5
   32160:	ldr	x5, [sp, #112]
   32164:	ldr	x2, [sp, #248]
   32168:	str	x2, [x5, x0]
   3216c:	ldr	x0, [sp, #160]
   32170:	ldr	x0, [x0, #16]
   32174:	cmp	x3, x0
   32178:	b.gt	32a34 <mpfr_powerof2_raw@@Base+0xfe8>
   3217c:	cmp	x2, x0
   32180:	b.lt	32a34 <mpfr_powerof2_raw@@Base+0xfe8>  // b.tstop
   32184:	cbnz	w25, 32a4c <mpfr_powerof2_raw@@Base+0x1000>
   32188:	mov	w0, w25
   3218c:	ldr	d8, [sp, #96]
   32190:	ldp	x19, x20, [sp, #16]
   32194:	ldp	x21, x22, [sp, #32]
   32198:	ldp	x23, x24, [sp, #48]
   3219c:	ldp	x25, x26, [sp, #64]
   321a0:	ldp	x27, x28, [sp, #80]
   321a4:	ldp	x29, x30, [sp], #416
   321a8:	ret
   321ac:	add	x27, x27, x22
   321b0:	mov	x0, #0x2                   	// #2
   321b4:	sdiv	x22, x27, x0
   321b8:	b	31e78 <mpfr_powerof2_raw@@Base+0x42c>
   321bc:	cmp	x0, #0x1
   321c0:	b.eq	32214 <mpfr_powerof2_raw@@Base+0x7c8>  // b.none
   321c4:	b.gt	321d8 <mpfr_powerof2_raw@@Base+0x78c>
   321c8:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   321cc:	mov	w1, #0x1b0                 	// #432
   321d0:	add	x2, x2, #0x685
   321d4:	b	31e0c <mpfr_powerof2_raw@@Base+0x3c0>
   321d8:	ldr	x0, [sp, #136]
   321dc:	sub	x22, x0, #0x1
   321e0:	clz	x0, x22
   321e4:	mov	w22, #0x40                  	// #64
   321e8:	sub	w22, w22, w0
   321ec:	sxtw	x22, w22
   321f0:	ldr	x0, [sp, #136]
   321f4:	add	x0, x22, x0
   321f8:	cmp	x0, #0x1
   321fc:	b.eq	325fc <mpfr_powerof2_raw@@Base+0xbb0>  // b.none
   32200:	b.gt	3221c <mpfr_powerof2_raw@@Base+0x7d0>
   32204:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   32208:	mov	w1, #0x1b1                 	// #433
   3220c:	add	x2, x2, #0x92b
   32210:	b	31e0c <mpfr_powerof2_raw@@Base+0x3c0>
   32214:	mov	x22, #0x0                   	// #0
   32218:	b	321f0 <mpfr_powerof2_raw@@Base+0x7a4>
   3221c:	sub	x22, x0, #0x1
   32220:	clz	x1, x22
   32224:	mov	w22, #0x4d                  	// #77
   32228:	sub	w22, w22, w1
   3222c:	add	x22, x0, w22, sxtw
   32230:	mov	x0, #0x40                  	// #64
   32234:	mov	x1, #0x35                  	// #53
   32238:	str	x0, [sp, #176]
   3223c:	mov	x0, x20
   32240:	bl	bf50 <mpfr_set_prec@plt>
   32244:	cmp	x22, #0x64
   32248:	b.gt	32604 <mpfr_powerof2_raw@@Base+0xbb8>
   3224c:	mov	w3, #0x0                   	// #0
   32250:	mov	x2, #0xfffffffffffffff6    	// #-10
   32254:	mov	x1, #0x266                 	// #614
   32258:	mov	x0, x20
   3225c:	bl	c680 <mpfr_set_ui_2exp@plt>
   32260:	mov	w3, #0x2                   	// #2
   32264:	mov	x2, #0xfffffffffffffffc    	// #-4
   32268:	mov	x1, #0x4                   	// #4
   3226c:	mov	x0, x20
   32270:	bl	c680 <mpfr_set_ui_2exp@plt>
   32274:	mov	w3, #0x2                   	// #2
   32278:	mov	x2, x22
   3227c:	mov	x1, x20
   32280:	mov	x0, x20
   32284:	bl	bad0 <mpfr_mul_ui@plt>
   32288:	mov	x1, x20
   3228c:	mov	x0, x24
   32290:	mov	w2, #0x1                   	// #1
   32294:	bl	ca30 <mpfr_cmp3@plt>
   32298:	tbz	w0, #31, 32690 <mpfr_powerof2_raw@@Base+0xc44>
   3229c:	mov	x2, x24
   322a0:	mov	w3, #0x2                   	// #2
   322a4:	mov	x1, x20
   322a8:	mov	x0, x20
   322ac:	bl	bbf0 <mpfr_sub@plt>
   322b0:	mov	w1, #0x2                   	// #2
   322b4:	mov	x0, x20
   322b8:	bl	bd20 <mpfr_get_ui@plt>
   322bc:	cmp	x0, #0x3
   322c0:	mov	x1, #0x3                   	// #3
   322c4:	csel	x0, x0, x1, cs  // cs = hs, nlast
   322c8:	mov	x1, x22
   322cc:	str	x0, [sp, #152]
   322d0:	mov	x0, x20
   322d4:	bl	bf50 <mpfr_set_prec@plt>
   322d8:	mov	x1, x22
   322dc:	mov	x0, x19
   322e0:	bl	bf50 <mpfr_set_prec@plt>
   322e4:	mov	x25, #0xfffffffffffffff9    	// #-7
   322e8:	mov	x1, x22
   322ec:	mov	x0, x23
   322f0:	bl	bf50 <mpfr_set_prec@plt>
   322f4:	mov	x28, #0xfffffffffffffffa    	// #-6
   322f8:	mov	x1, x22
   322fc:	mov	x0, x21
   32300:	bl	bf50 <mpfr_set_prec@plt>
   32304:	mov	x1, x22
   32308:	mov	x0, x26
   3230c:	bl	bf50 <mpfr_set_prec@plt>
   32310:	ldr	x2, [sp, #152]
   32314:	mov	w3, #0x0                   	// #0
   32318:	mov	x1, x24
   3231c:	mov	x0, x26
   32320:	bl	c2f0 <mpfr_add_ui@plt>
   32324:	mov	x1, x26
   32328:	mov	w2, #0x0                   	// #0
   3232c:	mov	x0, x20
   32330:	bl	c110 <mpfr_log@plt>
   32334:	mov	x1, x26
   32338:	mov	w3, #0x0                   	// #0
   3233c:	mov	x2, #0x1                   	// #1
   32340:	mov	x0, x19
   32344:	bl	c350 <mpfr_mul_2ui@plt>
   32348:	mov	x1, x19
   3234c:	mov	w3, #0x0                   	// #0
   32350:	mov	x2, #0x1                   	// #1
   32354:	mov	x0, x19
   32358:	bl	c5c0 <mpfr_sub_ui@plt>
   3235c:	mov	x2, x19
   32360:	mov	x1, x20
   32364:	mov	w3, #0x0                   	// #0
   32368:	mov	x0, x20
   3236c:	bl	bdd0 <mpfr_mul@plt>
   32370:	mov	x1, x20
   32374:	mov	w3, #0x0                   	// #0
   32378:	mov	x2, #0x1                   	// #1
   3237c:	mov	x0, x20
   32380:	bl	c980 <mpfr_div_2ui@plt>
   32384:	mov	x2, x26
   32388:	mov	x1, x20
   3238c:	mov	w3, #0x0                   	// #0
   32390:	mov	x0, x20
   32394:	bl	bbf0 <mpfr_sub@plt>
   32398:	mov	x2, x26
   3239c:	mov	w3, #0x0                   	// #0
   323a0:	mov	x1, #0x1                   	// #1
   323a4:	mov	x0, x23
   323a8:	bl	c380 <mpfr_ui_div@plt>
   323ac:	mov	x1, x23
   323b0:	mov	w3, #0x0                   	// #0
   323b4:	mov	x2, #0xc                   	// #12
   323b8:	mov	x0, x19
   323bc:	bl	cd00 <mpfr_div_ui@plt>
   323c0:	ldr	w3, [sp, #296]
   323c4:	mov	x1, x19
   323c8:	mov	w2, #0x0                   	// #0
   323cc:	mov	x0, x21
   323d0:	bl	c730 <mpfr_set4@plt>
   323d4:	mov	x2, x21
   323d8:	mov	x1, x20
   323dc:	mov	w3, #0x0                   	// #0
   323e0:	mov	x0, x20
   323e4:	bl	c230 <mpfr_add@plt>
   323e8:	mov	x2, x23
   323ec:	mov	x1, x23
   323f0:	mov	x0, x23
   323f4:	mov	w3, #0x0                   	// #0
   323f8:	bl	bdd0 <mpfr_mul@plt>
   323fc:	mov	x0, #0x2                   	// #2
   32400:	str	x0, [sp, #120]
   32404:	ldr	x0, [sp, #368]
   32408:	ldr	x1, [sp, #272]
   3240c:	add	x0, x22, x0
   32410:	cmp	x0, x1
   32414:	b.ge	32698 <mpfr_powerof2_raw@@Base+0xc4c>  // b.tcont
   32418:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3241c:	ldr	x1, [x0, #2640]
   32420:	add	x0, x0, #0xa50
   32424:	blr	x1
   32428:	mov	w2, #0x0                   	// #0
   3242c:	ldr	x1, [sp, #112]
   32430:	mov	x25, #0x2                   	// #2
   32434:	add	x1, x1, x0
   32438:	mov	x0, x21
   3243c:	bl	c410 <mpfr_cache@plt>
   32440:	mov	x1, x21
   32444:	mov	w3, #0x0                   	// #0
   32448:	mov	x2, #0x1                   	// #1
   3244c:	mov	x0, x21
   32450:	bl	c350 <mpfr_mul_2ui@plt>
   32454:	ldr	w3, [x24, #8]
   32458:	mov	x1, x24
   3245c:	mov	x0, x19
   32460:	mov	w2, #0x0                   	// #0
   32464:	bl	c730 <mpfr_set4@plt>
   32468:	str	x25, [sp, #128]
   3246c:	add	x25, x25, #0x1
   32470:	ldr	x1, [sp, #152]
   32474:	mul	x0, x25, x25
   32478:	cmp	x0, x1
   3247c:	b.cc	32468 <mpfr_powerof2_raw@@Base+0xa1c>  // b.lo, b.ul, b.last
   32480:	lsl	x0, x25, #5
   32484:	mov	x27, #0x2                   	// #2
   32488:	str	x0, [sp, #208]
   3248c:	bl	cd90 <mpfr_allocate_func@plt>
   32490:	str	x0, [sp, #144]
   32494:	ldr	x0, [sp, #128]
   32498:	cmp	x0, x27
   3249c:	b.cs	327dc <mpfr_powerof2_raw@@Base+0xd90>  // b.hs, b.nlast
   324a0:	ldr	x0, [sp, #144]
   324a4:	mov	x1, x24
   324a8:	mov	w2, #0x0                   	// #0
   324ac:	mov	x27, #0x3                   	// #3
   324b0:	add	x0, x0, #0x40
   324b4:	bl	c490 <mpfr_sqr@plt>
   324b8:	ldr	x0, [sp, #144]
   324bc:	add	x28, x0, #0x60
   324c0:	ldr	x0, [sp, #128]
   324c4:	cmp	x0, x27
   324c8:	b.cs	327f4 <mpfr_powerof2_raw@@Base+0xda8>  // b.hs, b.nlast
   324cc:	lsl	x0, x25, #4
   324d0:	str	x0, [sp, #192]
   324d4:	bl	cd90 <mpfr_allocate_func@plt>
   324d8:	mov	x25, x0
   324dc:	mov	x27, #0x0                   	// #0
   324e0:	add	x0, x25, x27, lsl #4
   324e4:	bl	c010 <mpfr_mpz_init@plt>
   324e8:	ldr	x0, [sp, #128]
   324ec:	add	x27, x27, #0x1
   324f0:	cmp	x0, x27
   324f4:	b.cs	324e0 <mpfr_powerof2_raw@@Base+0xa94>  // b.hs, b.nlast
   324f8:	mov	x28, #0x1                   	// #1
   324fc:	ldr	x0, [sp, #128]
   32500:	ldr	x1, [sp, #152]
   32504:	add	x0, x28, x0
   32508:	str	x0, [sp, #200]
   3250c:	cmp	x0, x1
   32510:	b.ls	32834 <mpfr_powerof2_raw@@Base+0xde8>  // b.plast
   32514:	mov	x27, #0x0                   	// #0
   32518:	add	x0, x25, x27, lsl #4
   3251c:	bl	c200 <mpfr_mpz_clear@plt>
   32520:	ldr	x0, [sp, #128]
   32524:	add	x27, x27, #0x1
   32528:	cmp	x0, x27
   3252c:	b.cs	32518 <mpfr_powerof2_raw@@Base+0xacc>  // b.hs, b.nlast
   32530:	ldr	x1, [sp, #192]
   32534:	mov	x0, x25
   32538:	mov	x25, #0x2                   	// #2
   3253c:	bl	ccc0 <mpfr_free_func@plt>
   32540:	ldr	x0, [sp, #128]
   32544:	cmp	x0, x25
   32548:	b.cs	32938 <mpfr_powerof2_raw@@Base+0xeec>  // b.hs, b.nlast
   3254c:	ldr	x0, [sp, #144]
   32550:	ldr	x1, [sp, #208]
   32554:	bl	ccc0 <mpfr_free_func@plt>
   32558:	ldr	x0, [sp, #152]
   3255c:	mov	w3, #0x0                   	// #0
   32560:	cmp	x0, x28
   32564:	b.hi	3294c <mpfr_powerof2_raw@@Base+0xf00>  // b.pmore
   32568:	mov	x2, x19
   3256c:	mov	x1, x19
   32570:	mov	x0, x19
   32574:	bl	bdd0 <mpfr_mul@plt>
   32578:	mov	w3, #0x0                   	// #0
   3257c:	mov	x2, x19
   32580:	mov	x1, x21
   32584:	mov	x0, x21
   32588:	bl	c6b0 <mpfr_div@plt>
   3258c:	mov	x27, #0x8000000000000003    	// #-9223372036854775805
   32590:	mov	x1, x20
   32594:	mov	x0, x20
   32598:	mov	w2, #0x0                   	// #0
   3259c:	ldr	x25, [sp, #272]
   325a0:	bl	c7e0 <mpfr_exp@plt>
   325a4:	ldr	x0, [sp, #272]
   325a8:	cmp	x0, x27
   325ac:	b.ne	32978 <mpfr_powerof2_raw@@Base+0xf2c>  // b.any
   325b0:	ldr	w5, [sp, #172]
   325b4:	mov	x4, x19
   325b8:	ldr	x0, [sp, #160]
   325bc:	mov	x3, x20
   325c0:	add	x2, sp, #0xe8
   325c4:	mov	x1, x24
   325c8:	bl	31a64 <mpfr_powerof2_raw@@Base+0x18>
   325cc:	mov	w25, w0
   325d0:	cbnz	w0, 320ec <mpfr_powerof2_raw@@Base+0x6a0>
   325d4:	ldr	x1, [sp, #176]
   325d8:	mov	x0, #0xfffffffffffffeff    	// #-257
   325dc:	movk	x0, #0x7fff, lsl #48
   325e0:	sub	x0, x0, x22
   325e4:	cmp	x0, x1
   325e8:	b.ge	32a20 <mpfr_powerof2_raw@@Base+0xfd4>  // b.tcont
   325ec:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   325f0:	mov	w1, #0x2b8                 	// #696
   325f4:	add	x2, x2, #0xb94
   325f8:	b	31e0c <mpfr_powerof2_raw@@Base+0x3c0>
   325fc:	mov	w22, #0xd                   	// #13
   32600:	b	3222c <mpfr_powerof2_raw@@Base+0x7e0>
   32604:	cmp	x22, #0x1f4
   32608:	b.gt	3261c <mpfr_powerof2_raw@@Base+0xbd0>
   3260c:	mov	w3, #0x0                   	// #0
   32610:	mov	x2, #0xfffffffffffffff6    	// #-10
   32614:	mov	x1, #0x333                 	// #819
   32618:	b	32258 <mpfr_powerof2_raw@@Base+0x80c>
   3261c:	cmp	x22, #0x3e8
   32620:	b.gt	32634 <mpfr_powerof2_raw@@Base+0xbe8>
   32624:	mov	w3, #0x0                   	// #0
   32628:	mov	x2, #0xfffffffffffffff6    	// #-10
   3262c:	mov	x1, #0x533                 	// #1331
   32630:	b	32258 <mpfr_powerof2_raw@@Base+0x80c>
   32634:	cmp	x22, #0x7d0
   32638:	b.gt	3264c <mpfr_powerof2_raw@@Base+0xc00>
   3263c:	mov	w3, #0x0                   	// #0
   32640:	mov	x2, #0xfffffffffffffff6    	// #-10
   32644:	mov	x1, #0x6cd                 	// #1741
   32648:	b	32258 <mpfr_powerof2_raw@@Base+0x80c>
   3264c:	mov	x0, #0x1388                	// #5000
   32650:	cmp	x22, x0
   32654:	b.gt	32668 <mpfr_powerof2_raw@@Base+0xc1c>
   32658:	mov	w3, #0x0                   	// #0
   3265c:	mov	x2, #0xfffffffffffffff6    	// #-10
   32660:	mov	x1, #0x8cd                 	// #2253
   32664:	b	32258 <mpfr_powerof2_raw@@Base+0x80c>
   32668:	mov	x0, #0x2710                	// #10000
   3266c:	mov	w3, #0x0                   	// #0
   32670:	cmp	x22, x0
   32674:	b.gt	32684 <mpfr_powerof2_raw@@Base+0xc38>
   32678:	mov	x2, #0xfffffffffffffff6    	// #-10
   3267c:	mov	x1, #0xd9a                 	// #3482
   32680:	b	32258 <mpfr_powerof2_raw@@Base+0x80c>
   32684:	mov	x2, #0xffffffffffffffff    	// #-1
   32688:	mov	x1, #0x9                   	// #9
   3268c:	b	32258 <mpfr_powerof2_raw@@Base+0x80c>
   32690:	mov	x0, #0x3                   	// #3
   32694:	b	322c8 <mpfr_powerof2_raw@@Base+0x87c>
   32698:	mov	x2, x23
   3269c:	mov	x1, x19
   326a0:	mov	x0, x19
   326a4:	mov	w3, #0x0                   	// #0
   326a8:	bl	bdd0 <mpfr_mul@plt>
   326ac:	ldr	x1, [sp, #120]
   326b0:	mov	x2, #0x80000000            	// #2147483648
   326b4:	ldr	x0, [sp, #120]
   326b8:	cmp	x1, x2
   326bc:	lsl	x27, x1, #1
   326c0:	sub	x0, x0, #0x1
   326c4:	b.hi	32760 <mpfr_powerof2_raw@@Base+0xd14>  // b.pmore
   326c8:	lsl	x27, x1, #2
   326cc:	mov	w3, #0x0                   	// #0
   326d0:	sub	x2, x27, #0x6
   326d4:	mov	x1, x19
   326d8:	mul	x2, x2, x0
   326dc:	mov	x0, x19
   326e0:	bl	bad0 <mpfr_mul_ui@plt>
   326e4:	ldr	x0, [sp, #120]
   326e8:	sub	x2, x27, #0x2
   326ec:	mov	w3, #0x0                   	// #0
   326f0:	mov	x1, x19
   326f4:	mul	x2, x2, x0
   326f8:	mov	x0, x19
   326fc:	bl	cd00 <mpfr_div_ui@plt>
   32700:	ldr	x0, [sp, #120]
   32704:	add	x2, x27, #0x2
   32708:	mov	w3, #0x0                   	// #0
   3270c:	mul	x2, x2, x0
   32710:	mov	x1, x19
   32714:	mov	x0, x19
   32718:	bl	cd00 <mpfr_div_ui@plt>
   3271c:	sub	x25, x25, #0x2
   32720:	ldr	x0, [sp, #120]
   32724:	bl	c8c0 <mpfr_bernoulli_cache@plt>
   32728:	mov	x2, x0
   3272c:	mov	x1, x19
   32730:	mov	w3, #0x0                   	// #0
   32734:	mov	x0, x21
   32738:	bl	c560 <mpfr_mul_z@plt>
   3273c:	mov	x2, x21
   32740:	mov	x1, x20
   32744:	mov	x0, x20
   32748:	mov	w3, #0x0                   	// #0
   3274c:	bl	c230 <mpfr_add@plt>
   32750:	ldr	x0, [sp, #120]
   32754:	add	x0, x0, #0x1
   32758:	str	x0, [sp, #120]
   3275c:	b	32404 <mpfr_powerof2_raw@@Base+0x9b8>
   32760:	mov	x0, #0xfffffffffffffffb    	// #-5
   32764:	mov	x1, x19
   32768:	sub	x2, x0, x25
   3276c:	mov	w3, #0x0                   	// #0
   32770:	mov	x0, x19
   32774:	bl	bad0 <mpfr_mul_ui@plt>
   32778:	sub	x2, x28, x25
   3277c:	mov	x1, x19
   32780:	mov	w3, #0x0                   	// #0
   32784:	mov	x0, x19
   32788:	bl	bad0 <mpfr_mul_ui@plt>
   3278c:	mov	x2, x27
   32790:	mov	x1, x19
   32794:	mov	w3, #0x0                   	// #0
   32798:	mov	x0, x19
   3279c:	bl	cd00 <mpfr_div_ui@plt>
   327a0:	mov	x0, #0xfffffffffffffffc    	// #-4
   327a4:	mov	x1, x19
   327a8:	sub	x2, x0, x25
   327ac:	mov	w3, #0x0                   	// #0
   327b0:	mov	x0, x19
   327b4:	bl	cd00 <mpfr_div_ui@plt>
   327b8:	mov	x2, x27
   327bc:	mov	w3, #0x0                   	// #0
   327c0:	mov	x1, x19
   327c4:	mov	x0, x19
   327c8:	bl	cd00 <mpfr_div_ui@plt>
   327cc:	mov	x0, #0xfffffffffffffffe    	// #-2
   327d0:	mov	w3, #0x0                   	// #0
   327d4:	sub	x2, x0, x25
   327d8:	b	32710 <mpfr_powerof2_raw@@Base+0xcc4>
   327dc:	ldr	x0, [sp, #144]
   327e0:	mov	x1, x22
   327e4:	add	x0, x0, x27, lsl #5
   327e8:	add	x27, x27, #0x1
   327ec:	bl	cb10 <mpfr_init2@plt>
   327f0:	b	32494 <mpfr_powerof2_raw@@Base+0xa48>
   327f4:	tbnz	w27, #0, 3281c <mpfr_powerof2_raw@@Base+0xdd0>
   327f8:	ldr	x0, [sp, #144]
   327fc:	lsr	x1, x27, #1
   32800:	mov	w2, #0x0                   	// #0
   32804:	add	x1, x0, x1, lsl #5
   32808:	mov	x0, x28
   3280c:	bl	c490 <mpfr_sqr@plt>
   32810:	add	x27, x27, #0x1
   32814:	add	x28, x28, #0x20
   32818:	b	324c0 <mpfr_powerof2_raw@@Base+0xa74>
   3281c:	mov	x2, x24
   32820:	sub	x1, x28, #0x20
   32824:	mov	x0, x28
   32828:	mov	w3, #0x0                   	// #0
   3282c:	bl	bdd0 <mpfr_mul@plt>
   32830:	b	32810 <mpfr_powerof2_raw@@Base+0xdc4>
   32834:	mov	x1, #0x1                   	// #1
   32838:	mov	x0, x25
   3283c:	bl	bd30 <__gmpz_set_ui@plt>
   32840:	mov	x27, #0x0                   	// #0
   32844:	mov	x1, x25
   32848:	ldr	x0, [sp, #128]
   3284c:	cmp	x0, x27
   32850:	b.ne	32890 <mpfr_powerof2_raw@@Base+0xe44>  // b.any
   32854:	mov	x1, x25
   32858:	mov	x0, x23
   3285c:	mov	w2, #0x0                   	// #0
   32860:	bl	c2d0 <mpfr_set_z@plt>
   32864:	mov	x0, #0x0                   	// #0
   32868:	ldr	x1, [sp, #128]
   3286c:	cmp	x1, x0
   32870:	b.ne	328f8 <mpfr_powerof2_raw@@Base+0xeac>  // b.any
   32874:	mov	x2, x23
   32878:	mov	x1, x19
   3287c:	mov	x0, x19
   32880:	mov	w3, #0x0                   	// #0
   32884:	bl	bdd0 <mpfr_mul@plt>
   32888:	ldr	x28, [sp, #200]
   3288c:	b	324fc <mpfr_powerof2_raw@@Base+0xab0>
   32890:	add	x0, x1, #0x10
   32894:	str	x0, [sp, #184]
   32898:	str	x1, [sp, #216]
   3289c:	bl	c020 <__gmpz_set@plt>
   328a0:	ldr	x1, [sp, #216]
   328a4:	add	x27, x27, #0x1
   328a8:	mov	x2, x28
   328ac:	cmp	x25, x1
   328b0:	b.ne	328cc <mpfr_powerof2_raw@@Base+0xe80>  // b.any
   328b4:	mov	x1, x25
   328b8:	mov	x0, x25
   328bc:	bl	c190 <__gmpz_mul_ui@plt>
   328c0:	add	x28, x28, #0x1
   328c4:	ldr	x1, [sp, #184]
   328c8:	b	32848 <mpfr_powerof2_raw@@Base+0xdfc>
   328cc:	mov	x0, x1
   328d0:	str	x1, [sp, #216]
   328d4:	bl	c190 <__gmpz_mul_ui@plt>
   328d8:	ldr	x1, [sp, #216]
   328dc:	sub	x2, x1, #0x10
   328e0:	mov	x0, x1
   328e4:	str	x2, [sp, #216]
   328e8:	bl	ca50 <__gmpz_add@plt>
   328ec:	ldr	x2, [sp, #216]
   328f0:	mov	x1, x2
   328f4:	b	328a8 <mpfr_powerof2_raw@@Base+0xe5c>
   328f8:	ldr	x1, [sp, #144]
   328fc:	add	x27, x0, #0x1
   32900:	cmp	x0, #0x0
   32904:	mov	w3, #0x0                   	// #0
   32908:	add	x2, x25, x27, lsl #4
   3290c:	mov	x0, x26
   32910:	add	x1, x1, x27, lsl #5
   32914:	csel	x1, x1, x24, ne  // ne = any
   32918:	bl	c560 <mpfr_mul_z@plt>
   3291c:	mov	x2, x26
   32920:	mov	x1, x23
   32924:	mov	x0, x23
   32928:	mov	w3, #0x0                   	// #0
   3292c:	bl	c230 <mpfr_add@plt>
   32930:	mov	x0, x27
   32934:	b	32868 <mpfr_powerof2_raw@@Base+0xe1c>
   32938:	ldr	x0, [sp, #144]
   3293c:	add	x0, x0, x25, lsl #5
   32940:	add	x25, x25, #0x1
   32944:	bl	c0f0 <mpfr_clear@plt>
   32948:	b	32540 <mpfr_powerof2_raw@@Base+0xaf4>
   3294c:	mov	x2, x28
   32950:	mov	x1, x24
   32954:	mov	x0, x23
   32958:	bl	c2f0 <mpfr_add_ui@plt>
   3295c:	mov	x2, x23
   32960:	mov	x1, x19
   32964:	mov	x0, x19
   32968:	mov	w3, #0x0                   	// #0
   3296c:	add	x28, x28, #0x1
   32970:	bl	bdd0 <mpfr_mul@plt>
   32974:	b	32558 <mpfr_powerof2_raw@@Base+0xb0c>
   32978:	mov	x1, x21
   3297c:	mov	w2, #0x0                   	// #0
   32980:	mov	x0, x19
   32984:	bl	c9c0 <mpfr_sqrt@plt>
   32988:	mov	x2, x19
   3298c:	mov	w3, #0x0                   	// #0
   32990:	mov	x1, x20
   32994:	mov	x0, x20
   32998:	bl	bdd0 <mpfr_mul@plt>
   3299c:	ldr	x1, [sp, #120]
   329a0:	mov	x0, #0x5                   	// #5
   329a4:	udiv	x0, x1, x0
   329a8:	add	x0, x0, x0, lsl #1
   329ac:	add	x0, x0, #0x12
   329b0:	bl	bcf0 <__gmpfr_int_ceil_log2@plt>
   329b4:	ldr	d0, [sp, #152]
   329b8:	fmov	d2, #2.000000000000000000e+00
   329bc:	add	w0, w0, #0x2
   329c0:	ucvtf	d1, d0
   329c4:	fmov	d0, #2.500000000000000000e+00
   329c8:	add	x25, x25, w0, sxtw
   329cc:	fmadd	d0, d1, d2, d0
   329d0:	bl	c9e0 <__gmpfr_ceil_log2@plt>
   329d4:	cmp	x25, x0
   329d8:	add	x2, x0, #0x1
   329dc:	ldr	x0, [sp, #272]
   329e0:	csinc	x2, x2, x25, lt  // lt = tstop
   329e4:	cmp	x0, x27
   329e8:	b.le	325d4 <mpfr_powerof2_raw@@Base+0xb88>
   329ec:	ldr	w0, [sp, #172]
   329f0:	sub	x2, x22, x2
   329f4:	ldr	x1, [sp, #256]
   329f8:	cmp	w0, #0x0
   329fc:	ldr	x0, [sp, #136]
   32a00:	sub	x1, x1, #0x1
   32a04:	cinc	x3, x0, eq  // eq = none
   32a08:	asr	x1, x1, #6
   32a0c:	ldr	x0, [sp, #280]
   32a10:	add	x1, x1, #0x1
   32a14:	bl	c400 <mpfr_round_p@plt>
   32a18:	cbnz	w0, 320d4 <mpfr_powerof2_raw@@Base+0x688>
   32a1c:	b	325d4 <mpfr_powerof2_raw@@Base+0xb88>
   32a20:	ldr	x0, [sp, #176]
   32a24:	add	x22, x22, x0
   32a28:	mov	x0, #0x2                   	// #2
   32a2c:	sdiv	x0, x22, x0
   32a30:	b	32234 <mpfr_powerof2_raw@@Base+0x7e8>
   32a34:	ldr	w2, [sp, #172]
   32a38:	mov	w1, w25
   32a3c:	ldr	x0, [sp, #160]
   32a40:	bl	cbc0 <mpfr_check_range@plt>
   32a44:	mov	w25, w0
   32a48:	b	32188 <mpfr_powerof2_raw@@Base+0x73c>
   32a4c:	orr	w1, w1, #0x8
   32a50:	str	w1, [x4]
   32a54:	b	32188 <mpfr_powerof2_raw@@Base+0x73c>

0000000000032a58 <mpfr_gamma@@Base>:
   32a58:	stp	x29, x30, [sp, #-448]!
   32a5c:	mov	x29, sp
   32a60:	stp	x19, x20, [sp, #16]
   32a64:	mov	x19, x1
   32a68:	ldr	x1, [x1, #16]
   32a6c:	stp	x21, x22, [sp, #32]
   32a70:	mov	w22, w2
   32a74:	stp	x23, x24, [sp, #48]
   32a78:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   32a7c:	mov	x21, x0
   32a80:	stp	x25, x26, [sp, #64]
   32a84:	cmp	x1, x2
   32a88:	stp	x27, x28, [sp, #80]
   32a8c:	b.gt	32b38 <mpfr_gamma@@Base+0xe0>
   32a90:	mov	x0, #0x2                   	// #2
   32a94:	movk	x0, #0x8000, lsl #48
   32a98:	cmp	x1, x0
   32a9c:	b.ne	32ac8 <mpfr_gamma@@Base+0x70>  // b.any
   32aa0:	str	x0, [x21, #16]
   32aa4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   32aa8:	ldr	x1, [x0, #2592]
   32aac:	add	x0, x0, #0xa20
   32ab0:	blr	x1
   32ab4:	mrs	x1, tpidr_el0
   32ab8:	add	x0, x1, x0
   32abc:	ldr	w1, [x0]
   32ac0:	orr	w1, w1, #0x4
   32ac4:	b	32b30 <mpfr_gamma@@Base+0xd8>
   32ac8:	ldr	w3, [x19, #8]
   32acc:	cmp	x1, x2
   32ad0:	b.ne	32b08 <mpfr_gamma@@Base+0xb0>  // b.any
   32ad4:	tbnz	w3, #31, 32aa0 <mpfr_gamma@@Base+0x48>
   32ad8:	mov	w0, #0x1                   	// #1
   32adc:	str	w0, [x21, #8]
   32ae0:	str	x1, [x21, #16]
   32ae4:	mov	w3, #0x0                   	// #0
   32ae8:	mov	w0, w3
   32aec:	ldp	x19, x20, [sp, #16]
   32af0:	ldp	x21, x22, [sp, #32]
   32af4:	ldp	x23, x24, [sp, #48]
   32af8:	ldp	x25, x26, [sp, #64]
   32afc:	ldp	x27, x28, [sp, #80]
   32b00:	ldp	x29, x30, [sp], #448
   32b04:	ret
   32b08:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   32b0c:	ldr	x1, [x0, #2592]
   32b10:	add	x0, x0, #0xa20
   32b14:	blr	x1
   32b18:	str	w3, [x21, #8]
   32b1c:	mrs	x1, tpidr_el0
   32b20:	str	x2, [x21, #16]
   32b24:	add	x0, x1, x0
   32b28:	ldr	w1, [x0]
   32b2c:	orr	w1, w1, #0x20
   32b30:	str	w1, [x0]
   32b34:	b	32ae4 <mpfr_gamma@@Base+0x8c>
   32b38:	ldr	x2, [x19]
   32b3c:	ldr	x0, [x0]
   32b40:	cmp	x0, x2
   32b44:	csel	x0, x0, x2, ge  // ge = tcont
   32b48:	mov	x2, #0xfffffffffffffffe    	// #-2
   32b4c:	mul	x0, x0, x2
   32b50:	cmp	x1, x0
   32b54:	b.gt	32cec <mpfr_gamma@@Base+0x294>
   32b58:	mrs	x20, tpidr_el0
   32b5c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   32b60:	ldr	x2, [x0, #2592]
   32b64:	add	x0, x0, #0xa20
   32b68:	blr	x2
   32b6c:	ldr	w24, [x19, #8]
   32b70:	ldr	w0, [x20, x0]
   32b74:	str	w0, [sp, #152]
   32b78:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   32b7c:	ldr	x2, [x0, #2528]
   32b80:	add	x0, x0, #0x9e0
   32b84:	blr	x2
   32b88:	add	x2, x20, x0
   32b8c:	ldr	x0, [x20, x0]
   32b90:	str	x0, [sp, #160]
   32b94:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   32b98:	ldr	x3, [x0, #2560]
   32b9c:	add	x0, x0, #0xa00
   32ba0:	blr	x3
   32ba4:	ldr	x3, [x20, x0]
   32ba8:	str	x3, [sp, #168]
   32bac:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   32bb0:	str	x3, [x2]
   32bb4:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   32bb8:	str	x2, [x20, x0]
   32bbc:	mov	x0, #0x2                   	// #2
   32bc0:	movk	x0, #0xc000, lsl #48
   32bc4:	cmp	x1, x0
   32bc8:	b.ne	32cc0 <mpfr_gamma@@Base+0x268>  // b.any
   32bcc:	cmp	w24, #0x0
   32bd0:	b.le	32cc0 <mpfr_gamma@@Base+0x268>
   32bd4:	and	w0, w22, #0xfffffffd
   32bd8:	cmp	w0, #0x1
   32bdc:	b.ne	32cc0 <mpfr_gamma@@Base+0x268>  // b.any
   32be0:	mov	x0, x19
   32be4:	bl	bf80 <mpfr_powerof2_raw@plt>
   32be8:	cmp	w0, #0x0
   32bec:	cset	w23, ne  // ne = any
   32bf0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   32bf4:	ldr	x1, [x0, #2592]
   32bf8:	add	x0, x0, #0xa20
   32bfc:	blr	x1
   32c00:	mov	w3, w22
   32c04:	add	x25, x20, x0
   32c08:	mov	x2, x19
   32c0c:	mov	x1, #0x1                   	// #1
   32c10:	str	wzr, [x20, x0]
   32c14:	mov	x0, x21
   32c18:	bl	c380 <mpfr_ui_div@plt>
   32c1c:	mov	w3, w0
   32c20:	cbnz	w0, 32cc8 <mpfr_gamma@@Base+0x270>
   32c24:	tst	w22, #0xfffffffd
   32c28:	b.eq	32ce4 <mpfr_gamma@@Base+0x28c>  // b.none
   32c2c:	cmp	w24, #0x0
   32c30:	ccmp	w22, #0x1, #0x0, lt  // lt = tstop
   32c34:	b.eq	32ce4 <mpfr_gamma@@Base+0x28c>  // b.none
   32c38:	cmp	w24, #0x0
   32c3c:	ccmp	w22, #0x4, #0x0, gt
   32c40:	b.eq	32ce4 <mpfr_gamma@@Base+0x28c>  // b.none
   32c44:	mov	x0, x21
   32c48:	bl	be50 <mpfr_nextbelow@plt>
   32c4c:	mov	w3, #0xffffffff            	// #-1
   32c50:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   32c54:	ldr	x2, [x0, #2592]
   32c58:	add	x0, x0, #0xa20
   32c5c:	blr	x2
   32c60:	ldr	w1, [sp, #152]
   32c64:	add	x5, x20, x0
   32c68:	str	w1, [x20, x0]
   32c6c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   32c70:	ldr	x2, [x0, #2528]
   32c74:	add	x0, x0, #0x9e0
   32c78:	blr	x2
   32c7c:	ldp	x4, x2, [sp, #160]
   32c80:	str	x4, [x20, x0]
   32c84:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   32c88:	ldr	x6, [x0, #2560]
   32c8c:	add	x0, x0, #0xa00
   32c90:	blr	x6
   32c94:	str	x2, [x20, x0]
   32c98:	ldr	x0, [x21, #16]
   32c9c:	cmp	x4, x0
   32ca0:	b.gt	32cac <mpfr_gamma@@Base+0x254>
   32ca4:	cmp	x2, x0
   32ca8:	b.ge	337f0 <mpfr_gamma@@Base+0xd98>  // b.tcont
   32cac:	mov	w2, w22
   32cb0:	mov	w1, w3
   32cb4:	mov	x0, x21
   32cb8:	bl	cbc0 <mpfr_check_range@plt>
   32cbc:	b	32d3c <mpfr_gamma@@Base+0x2e4>
   32cc0:	mov	w23, #0x0                   	// #0
   32cc4:	b	32bf0 <mpfr_gamma@@Base+0x198>
   32cc8:	ldr	w1, [x25]
   32ccc:	tbz	w1, #1, 32c50 <mpfr_gamma@@Base+0x1f8>
   32cd0:	cbnz	w23, 32c50 <mpfr_gamma@@Base+0x1f8>
   32cd4:	ldr	w0, [sp, #152]
   32cd8:	orr	w0, w0, w1
   32cdc:	str	w0, [sp, #152]
   32ce0:	b	32c50 <mpfr_gamma@@Base+0x1f8>
   32ce4:	mov	w3, #0x1                   	// #1
   32ce8:	b	32c50 <mpfr_gamma@@Base+0x1f8>
   32cec:	mov	x0, x19
   32cf0:	bl	c1f0 <mpfr_integer_p@plt>
   32cf4:	mov	w23, w0
   32cf8:	cbz	w0, 32d10 <mpfr_gamma@@Base+0x2b8>
   32cfc:	ldr	w0, [x19, #8]
   32d00:	tbz	w0, #31, 32d10 <mpfr_gamma@@Base+0x2b8>
   32d04:	mov	x0, #0x2                   	// #2
   32d08:	movk	x0, #0x8000, lsl #48
   32d0c:	b	32aa0 <mpfr_gamma@@Base+0x48>
   32d10:	mov	x0, x19
   32d14:	mov	x2, #0x0                   	// #0
   32d18:	mov	x1, #0x1                   	// #1
   32d1c:	bl	bfd0 <mpfr_cmp_ui_2exp@plt>
   32d20:	mov	w24, w0
   32d24:	cbnz	w0, 32d44 <mpfr_gamma@@Base+0x2ec>
   32d28:	mov	w3, w22
   32d2c:	mov	x0, x21
   32d30:	mov	x2, #0x0                   	// #0
   32d34:	mov	x1, #0x1                   	// #1
   32d38:	bl	c680 <mpfr_set_ui_2exp@plt>
   32d3c:	mov	w3, w0
   32d40:	b	32ae8 <mpfr_gamma@@Base+0x90>
   32d44:	mrs	x20, tpidr_el0
   32d48:	cbz	w23, 32f58 <mpfr_gamma@@Base+0x500>
   32d4c:	mov	x0, x19
   32d50:	mov	w1, #0x0                   	// #0
   32d54:	bl	bed0 <mpfr_fits_ulong_p@plt>
   32d58:	cbz	w0, 32f58 <mpfr_gamma@@Base+0x500>
   32d5c:	mov	w1, #0x0                   	// #0
   32d60:	mov	x0, x19
   32d64:	ldr	x25, [x21]
   32d68:	bl	bd20 <mpfr_get_ui@plt>
   32d6c:	mov	x1, #0x68d8                	// #26840
   32d70:	movk	x1, #0x2ab, lsl #16
   32d74:	cmp	x0, x1
   32d78:	b.hi	32f58 <mpfr_gamma@@Base+0x500>  // b.pmore
   32d7c:	sub	x23, x0, #0x1
   32d80:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   32d84:	ldr	x1, [x0, #2592]
   32d88:	add	x0, x0, #0xa20
   32d8c:	blr	x1
   32d90:	ldr	w28, [x20, x0]
   32d94:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   32d98:	ldr	x1, [x0, #2528]
   32d9c:	add	x0, x0, #0x9e0
   32da0:	blr	x1
   32da4:	add	x1, x20, x0
   32da8:	add	x27, sp, #0x110
   32dac:	ldr	x0, [x20, x0]
   32db0:	str	x0, [sp, #96]
   32db4:	add	x26, sp, #0x130
   32db8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   32dbc:	ldr	x2, [x0, #2560]
   32dc0:	add	x0, x0, #0xa00
   32dc4:	blr	x2
   32dc8:	ldr	x2, [x20, x0]
   32dcc:	str	x2, [sp, #104]
   32dd0:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   32dd4:	str	x2, [x1]
   32dd8:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   32ddc:	str	x1, [x20, x0]
   32de0:	mov	x0, x27
   32de4:	mov	x1, #0x26                  	// #38
   32de8:	bl	cb10 <mpfr_init2@plt>
   32dec:	mov	x0, x26
   32df0:	mov	x1, #0x26                  	// #38
   32df4:	bl	cb10 <mpfr_init2@plt>
   32df8:	mov	w3, #0x1                   	// #1
   32dfc:	mov	x2, #0x0                   	// #0
   32e00:	mov	x1, x23
   32e04:	mov	x0, x27
   32e08:	bl	c680 <mpfr_set_ui_2exp@plt>
   32e0c:	mov	x0, x26
   32e10:	adrp	x1, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   32e14:	add	x1, x1, #0x984
   32e18:	bl	c3d0 <mpfr_set_str_binary@plt>
   32e1c:	mov	x2, x26
   32e20:	mov	x1, x27
   32e24:	mov	w3, #0x1                   	// #1
   32e28:	mov	x0, x27
   32e2c:	bl	c6b0 <mpfr_div@plt>
   32e30:	mov	x1, x27
   32e34:	mov	w3, #0x1                   	// #1
   32e38:	mov	x2, x23
   32e3c:	mov	x0, x27
   32e40:	bl	bff0 <mpfr_pow_ui@plt>
   32e44:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   32e48:	ldr	x1, [x0, #2640]
   32e4c:	add	x0, x0, #0xa50
   32e50:	blr	x1
   32e54:	mov	w2, #0x1                   	// #1
   32e58:	add	x1, x20, x0
   32e5c:	mov	x0, x26
   32e60:	bl	c410 <mpfr_cache@plt>
   32e64:	mov	w3, #0x1                   	// #1
   32e68:	lsl	x2, x23, #1
   32e6c:	mov	x1, x26
   32e70:	mov	x0, x26
   32e74:	bl	bad0 <mpfr_mul_ui@plt>
   32e78:	mov	x1, x26
   32e7c:	mov	w2, #0x1                   	// #1
   32e80:	mov	x0, x26
   32e84:	bl	c9c0 <mpfr_sqrt@plt>
   32e88:	mov	w3, #0x1                   	// #1
   32e8c:	mov	x2, x26
   32e90:	mov	x1, x27
   32e94:	mov	x0, x27
   32e98:	bl	bdd0 <mpfr_mul@plt>
   32e9c:	mov	w2, #0x1                   	// #1
   32ea0:	mov	x1, x27
   32ea4:	mov	x0, x27
   32ea8:	bl	c260 <mpfr_log2@plt>
   32eac:	mov	w1, #0x2                   	// #2
   32eb0:	mov	x0, x27
   32eb4:	bl	bd20 <mpfr_get_ui@plt>
   32eb8:	mov	x1, x0
   32ebc:	mov	x0, #0x2                   	// #2
   32ec0:	cmp	x23, x0
   32ec4:	b.cs	32f48 <mpfr_gamma@@Base+0x4f0>  // b.hs, b.nlast
   32ec8:	mov	x0, x27
   32ecc:	str	x1, [sp, #112]
   32ed0:	bl	c0f0 <mpfr_clear@plt>
   32ed4:	mov	x0, x26
   32ed8:	bl	c0f0 <mpfr_clear@plt>
   32edc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   32ee0:	ldr	x1, [x0, #2592]
   32ee4:	add	x0, x0, #0xa20
   32ee8:	blr	x1
   32eec:	str	w28, [x20, x0]
   32ef0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   32ef4:	ldr	x1, [x0, #2528]
   32ef8:	add	x0, x0, #0x9e0
   32efc:	blr	x1
   32f00:	ldr	x1, [sp, #96]
   32f04:	str	x1, [x20, x0]
   32f08:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   32f0c:	ldr	x1, [x0, #2560]
   32f10:	add	x0, x0, #0xa00
   32f14:	blr	x1
   32f18:	ldr	x1, [sp, #104]
   32f1c:	str	x1, [x20, x0]
   32f20:	ldr	x1, [sp, #112]
   32f24:	cmp	w22, #0x0
   32f28:	cinc	x25, x25, eq  // eq = none
   32f2c:	cmp	x25, x1
   32f30:	b.cc	32f58 <mpfr_gamma@@Base+0x500>  // b.lo, b.ul, b.last
   32f34:	mov	w2, w22
   32f38:	mov	x1, x23
   32f3c:	mov	x0, x21
   32f40:	bl	c770 <mpfr_fac_ui@plt>
   32f44:	b	32d3c <mpfr_gamma@@Base+0x2e4>
   32f48:	udiv	x2, x23, x0
   32f4c:	lsl	x0, x0, #1
   32f50:	sub	x1, x1, x2
   32f54:	b	32ec0 <mpfr_gamma@@Base+0x468>
   32f58:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   32f5c:	ldr	x1, [x0, #2592]
   32f60:	add	x0, x0, #0xa20
   32f64:	blr	x1
   32f68:	add	x26, x20, x0
   32f6c:	ldr	w0, [x20, x0]
   32f70:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   32f74:	str	w0, [sp, #152]
   32f78:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   32f7c:	ldr	x1, [x0, #2528]
   32f80:	add	x0, x0, #0x9e0
   32f84:	blr	x1
   32f88:	add	x2, x20, x0
   32f8c:	ldr	x3, [x20, x0]
   32f90:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   32f94:	ldr	x1, [x0, #2560]
   32f98:	add	x0, x0, #0xa00
   32f9c:	blr	x1
   32fa0:	add	x1, x20, x0
   32fa4:	str	x4, [x2]
   32fa8:	ldr	x0, [x20, x0]
   32fac:	mov	x4, #0x3fffffffffffffff    	// #4611686018427387903
   32fb0:	str	x4, [x1]
   32fb4:	cmp	w24, #0x0
   32fb8:	stp	x3, x0, [sp, #160]
   32fbc:	b.le	33150 <mpfr_gamma@@Base+0x6f8>
   32fc0:	ldr	x4, [x19, #16]
   32fc4:	cmp	x4, #0x19
   32fc8:	b.gt	32fe8 <mpfr_gamma@@Base+0x590>
   32fcc:	str	x0, [x1]
   32fd0:	str	x3, [x2]
   32fd4:	mov	w2, w22
   32fd8:	mov	x1, x19
   32fdc:	mov	x0, x21
   32fe0:	bl	31cdc <mpfr_powerof2_raw@@Base+0x290>
   32fe4:	b	32d3c <mpfr_gamma@@Base+0x2e4>
   32fe8:	add	x2, sp, #0x140
   32fec:	str	x2, [sp, #200]
   32ff0:	str	x2, [sp, #312]
   32ff4:	add	x2, sp, #0x148
   32ff8:	add	x25, sp, #0x110
   32ffc:	mov	x1, #0x35                  	// #53
   33000:	add	x0, sp, #0x150
   33004:	add	x23, sp, #0xb0
   33008:	mov	w24, #0x1                   	// #1
   3300c:	str	x1, [sp, #176]
   33010:	str	w24, [sp, #184]
   33014:	add	x27, sp, #0xf0
   33018:	str	x1, [sp, #240]
   3301c:	str	w24, [sp, #248]
   33020:	str	x2, [sp, #264]
   33024:	str	x1, [sp, #272]
   33028:	adrp	x1, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   3302c:	add	x1, x1, #0x9ac
   33030:	str	w24, [sp, #280]
   33034:	stp	x0, xzr, [sp, #296]
   33038:	mov	x0, x25
   3303c:	bl	c3d0 <mpfr_set_str_binary@plt>
   33040:	mov	w3, w24
   33044:	mov	x2, x25
   33048:	mov	x1, x19
   3304c:	mov	x0, x23
   33050:	bl	bdd0 <mpfr_mul@plt>
   33054:	mov	w3, w24
   33058:	mov	x1, x19
   3305c:	mov	x2, #0x2                   	// #2
   33060:	mov	x0, x27
   33064:	bl	c5c0 <mpfr_sub_ui@plt>
   33068:	mov	w3, w24
   3306c:	mov	x1, x23
   33070:	mov	x2, x27
   33074:	mov	x0, x23
   33078:	bl	be10 <mpfr_pow@plt>
   3307c:	mov	w3, w24
   33080:	mov	x1, x23
   33084:	mov	x2, x25
   33088:	mov	x0, x23
   3308c:	bl	bdd0 <mpfr_mul@plt>
   33090:	mov	w3, w24
   33094:	mov	x1, x23
   33098:	mov	x2, x25
   3309c:	mov	x0, x23
   330a0:	bl	bdd0 <mpfr_mul@plt>
   330a4:	mov	w3, w24
   330a8:	mov	x1, x23
   330ac:	mov	x2, x19
   330b0:	mov	x0, x23
   330b4:	bl	bdd0 <mpfr_mul@plt>
   330b8:	str	wzr, [x26]
   330bc:	mov	x1, x23
   330c0:	mov	w3, w24
   330c4:	mov	x0, x23
   330c8:	mov	x2, #0x1                   	// #1
   330cc:	bl	c350 <mpfr_mul_2ui@plt>
   330d0:	ldr	w24, [x26]
   330d4:	ldr	x1, [sp, #304]
   330d8:	ldr	x23, [sp, #192]
   330dc:	cbz	x1, 330e8 <mpfr_gamma@@Base+0x690>
   330e0:	ldr	x0, [sp, #312]
   330e4:	bl	ccc0 <mpfr_free_func@plt>
   330e8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   330ec:	ldr	x1, [x0, #2592]
   330f0:	add	x0, x0, #0xa20
   330f4:	blr	x1
   330f8:	ldr	w1, [sp, #152]
   330fc:	str	w1, [x20, x0]
   33100:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   33104:	ldr	x1, [x0, #2528]
   33108:	add	x0, x0, #0x9e0
   3310c:	blr	x1
   33110:	ldr	x1, [sp, #160]
   33114:	str	x1, [x20, x0]
   33118:	ldr	x1, [sp, #168]
   3311c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   33120:	ldr	x2, [x0, #2560]
   33124:	add	x0, x0, #0xa00
   33128:	blr	x2
   3312c:	str	x1, [x20, x0]
   33130:	tbnz	w24, #1, 3313c <mpfr_gamma@@Base+0x6e4>
   33134:	cmp	x1, x23
   33138:	b.ge	32fd4 <mpfr_gamma@@Base+0x57c>  // b.tcont
   3313c:	mov	w1, w22
   33140:	mov	x0, x21
   33144:	mov	w2, #0x1                   	// #1
   33148:	bl	bfc0 <mpfr_overflow@plt>
   3314c:	b	32d3c <mpfr_gamma@@Base+0x2e4>
   33150:	ldr	w0, [x19, #8]
   33154:	add	x23, sp, #0x110
   33158:	add	x24, sp, #0xb0
   3315c:	add	x25, sp, #0xf0
   33160:	tbz	w0, #31, 333e0 <mpfr_gamma@@Base+0x988>
   33164:	mov	x0, x24
   33168:	mov	x1, #0x35                  	// #53
   3316c:	bl	cb10 <mpfr_init2@plt>
   33170:	mov	x0, x25
   33174:	mov	x1, #0x35                  	// #53
   33178:	bl	cb10 <mpfr_init2@plt>
   3317c:	mov	x0, x23
   33180:	mov	x1, #0x35                  	// #53
   33184:	bl	cb10 <mpfr_init2@plt>
   33188:	mov	w3, #0x3                   	// #3
   3318c:	mov	x2, x19
   33190:	mov	x1, #0x2                   	// #2
   33194:	mov	x0, x24
   33198:	bl	cae0 <mpfr_ui_sub@plt>
   3319c:	mov	x1, x24
   331a0:	mov	w2, #0x3                   	// #3
   331a4:	mov	x0, x24
   331a8:	bl	c110 <mpfr_log@plt>
   331ac:	mov	x1, x24
   331b0:	mov	w3, #0x3                   	// #3
   331b4:	mov	x2, #0x1                   	// #1
   331b8:	mov	x0, x24
   331bc:	bl	c5c0 <mpfr_sub_ui@plt>
   331c0:	mov	x2, x19
   331c4:	mov	w3, #0x2                   	// #2
   331c8:	mov	x1, x24
   331cc:	mov	x0, x24
   331d0:	bl	bdd0 <mpfr_mul@plt>
   331d4:	ldr	x26, [x19]
   331d8:	ldr	x0, [x19, #16]
   331dc:	add	x1, x26, #0x2
   331e0:	cmp	x0, #0x1
   331e4:	sub	x1, x1, x0
   331e8:	csinc	x26, x1, x26, le
   331ec:	mov	x0, x25
   331f0:	add	x26, x26, #0x11
   331f4:	mov	x1, x26
   331f8:	bl	bf50 <mpfr_set_prec@plt>
   331fc:	mov	x1, x26
   33200:	mov	x0, x23
   33204:	bl	bf50 <mpfr_set_prec@plt>
   33208:	mov	x1, #0x2                   	// #2
   3320c:	mov	w3, #0x0                   	// #0
   33210:	mov	x2, x19
   33214:	mov	x0, x25
   33218:	bl	cae0 <mpfr_ui_sub@plt>
   3321c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   33220:	ldr	x1, [x0, #2640]
   33224:	add	x0, x0, #0xa50
   33228:	blr	x1
   3322c:	mov	w2, #0x0                   	// #0
   33230:	add	x1, x20, x0
   33234:	mov	x0, x23
   33238:	bl	c410 <mpfr_cache@plt>
   3323c:	mov	w3, #0x0                   	// #0
   33240:	mov	x2, x25
   33244:	mov	x1, x23
   33248:	mov	x0, x23
   3324c:	bl	bdd0 <mpfr_mul@plt>
   33250:	mov	x1, x23
   33254:	mov	x0, x25
   33258:	mov	w2, #0x0                   	// #0
   3325c:	bl	c4e0 <mpfr_sin@plt>
   33260:	ldr	x0, [sp, #256]
   33264:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   33268:	cmp	x0, x1
   3326c:	b.ge	3328c <mpfr_gamma@@Base+0x834>  // b.tcont
   33270:	mov	x1, #0x2                   	// #2
   33274:	movk	x1, #0x8000, lsl #48
   33278:	cmp	x0, x1
   3327c:	b.ne	33284 <mpfr_gamma@@Base+0x82c>  // b.any
   33280:	bl	bd10 <mpfr_set_erangeflag@plt>
   33284:	mov	w27, #0x0                   	// #0
   33288:	b	33290 <mpfr_gamma@@Base+0x838>
   3328c:	ldr	w27, [sp, #248]
   33290:	mov	x1, x25
   33294:	mov	w3, #0x1                   	// #1
   33298:	mov	w2, #0x0                   	// #0
   3329c:	mov	x0, x25
   332a0:	bl	c730 <mpfr_set4@plt>
   332a4:	mov	x1, x23
   332a8:	mov	w3, #0x2                   	// #2
   332ac:	mov	x2, #0x3                   	// #3
   332b0:	mov	x0, x23
   332b4:	bl	bad0 <mpfr_mul_ui@plt>
   332b8:	mov	x1, x23
   332bc:	mov	w3, #0x2                   	// #2
   332c0:	mov	x2, #0x1                   	// #1
   332c4:	mov	x0, x23
   332c8:	bl	c2f0 <mpfr_add_ui@plt>
   332cc:	ldr	x2, [sp, #240]
   332d0:	mov	w3, #0x2                   	// #2
   332d4:	mov	x1, x23
   332d8:	mov	x0, x23
   332dc:	bl	c980 <mpfr_div_2ui@plt>
   332e0:	mov	x1, x25
   332e4:	mov	x0, x23
   332e8:	mov	w2, #0x1                   	// #1
   332ec:	bl	ca30 <mpfr_cmp3@plt>
   332f0:	tbz	w0, #31, 333d8 <mpfr_gamma@@Base+0x980>
   332f4:	mov	x2, x23
   332f8:	mov	x1, x25
   332fc:	mov	w3, #0x1                   	// #1
   33300:	mov	x0, x25
   33304:	bl	bbf0 <mpfr_sub@plt>
   33308:	mov	w3, #0x2                   	// #2
   3330c:	mov	x2, x25
   33310:	mov	x1, #0xc                   	// #12
   33314:	mov	x0, x25
   33318:	bl	c380 <mpfr_ui_div@plt>
   3331c:	mov	x1, x25
   33320:	mov	w2, #0x2                   	// #2
   33324:	mov	x0, x25
   33328:	bl	c260 <mpfr_log2@plt>
   3332c:	mov	x2, x24
   33330:	mov	x1, x25
   33334:	mov	w3, #0x2                   	// #2
   33338:	mov	x0, x24
   3333c:	bl	c230 <mpfr_add@plt>
   33340:	ldr	x1, [sp, #160]
   33344:	mov	x0, x24
   33348:	mov	x2, #0x0                   	// #0
   3334c:	sub	x1, x1, #0x2
   33350:	bl	c460 <mpfr_cmp_si_2exp@plt>
   33354:	cmp	w0, #0x0
   33358:	cset	w26, le
   3335c:	mov	x0, x24
   33360:	bl	c0f0 <mpfr_clear@plt>
   33364:	mov	x0, x25
   33368:	bl	c0f0 <mpfr_clear@plt>
   3336c:	mov	x0, x23
   33370:	bl	c0f0 <mpfr_clear@plt>
   33374:	cbz	w26, 333e0 <mpfr_gamma@@Base+0x988>
   33378:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3337c:	ldr	x1, [x0, #2592]
   33380:	add	x0, x0, #0xa20
   33384:	blr	x1
   33388:	neg	w2, w27
   3338c:	ldr	w1, [sp, #152]
   33390:	str	w1, [x20, x0]
   33394:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   33398:	ldr	x1, [x0, #2528]
   3339c:	add	x0, x0, #0x9e0
   333a0:	blr	x1
   333a4:	ldr	x1, [sp, #160]
   333a8:	str	x1, [x20, x0]
   333ac:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   333b0:	ldr	x1, [x0, #2560]
   333b4:	add	x0, x0, #0xa00
   333b8:	blr	x1
   333bc:	cmp	w22, #0x0
   333c0:	ldr	x1, [sp, #168]
   333c4:	str	x1, [x20, x0]
   333c8:	csel	w1, w22, w26, ne  // ne = any
   333cc:	mov	x0, x21
   333d0:	bl	c450 <mpfr_underflow@plt>
   333d4:	b	32d3c <mpfr_gamma@@Base+0x2e4>
   333d8:	mov	w26, #0x0                   	// #0
   333dc:	b	3335c <mpfr_gamma@@Base+0x904>
   333e0:	ldr	w2, [x19, #8]
   333e4:	ldr	x0, [x19]
   333e8:	cmp	w2, #0x0
   333ec:	ldr	x27, [x21]
   333f0:	ldr	x1, [x19, #16]
   333f4:	b.le	33440 <mpfr_gamma@@Base+0x9e8>
   333f8:	sub	x2, x0, x1
   333fc:	cmp	x27, x2
   33400:	csel	x27, x27, x2, ge  // ge = tcont
   33404:	add	x2, x0, #0x2
   33408:	cmp	x1, #0x1
   3340c:	sub	x2, x2, x1
   33410:	csinc	x0, x2, x0, le
   33414:	cmp	x27, x0
   33418:	csel	x27, x27, x0, ge  // ge = tcont
   3341c:	cmp	x27, #0x1
   33420:	b.eq	33498 <mpfr_gamma@@Base+0xa40>  // b.none
   33424:	b.gt	33454 <mpfr_gamma@@Base+0x9fc>
   33428:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   3342c:	add	x2, x2, #0x9e2
   33430:	mov	w1, #0x18f                 	// #399
   33434:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   33438:	add	x0, x0, #0xdcf
   3343c:	bl	cbd0 <mpfr_assert_fail@plt>
   33440:	add	x2, x0, #0x1
   33444:	cmp	x1, #0x0
   33448:	b.gt	333fc <mpfr_gamma@@Base+0x9a4>
   3344c:	sub	x2, x2, x1
   33450:	b	333fc <mpfr_gamma@@Base+0x9a4>
   33454:	sub	x0, x27, #0x1
   33458:	clz	x1, x0
   3345c:	mov	w0, #0x40                  	// #64
   33460:	sub	w0, w0, w1
   33464:	sxtw	x0, w0
   33468:	add	x27, x27, x0
   3346c:	add	x26, x27, #0x14
   33470:	add	x27, x27, #0x13
   33474:	clz	x0, x27
   33478:	mov	w27, #0x40                  	// #64
   3347c:	sub	w27, w27, w0
   33480:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   33484:	add	x27, x26, w27, sxtw
   33488:	add	x28, x27, #0x14
   3348c:	cmp	x28, x0
   33490:	b.lt	334a0 <mpfr_gamma@@Base+0xa48>  // b.tstop
   33494:	bl	c970 <mpfr_abort_prec_max@plt>
   33498:	mov	x0, #0x0                   	// #0
   3349c:	b	33468 <mpfr_gamma@@Base+0xa10>
   334a0:	add	x27, x27, #0x13
   334a4:	asr	x27, x27, #6
   334a8:	add	x27, x27, #0x1
   334ac:	lsl	x0, x27, #2
   334b0:	cmp	x0, #0x10
   334b4:	b.le	33684 <mpfr_gamma@@Base+0xc2c>
   334b8:	lsl	x0, x27, #5
   334bc:	str	x0, [sp, #304]
   334c0:	bl	cd90 <mpfr_allocate_func@plt>
   334c4:	str	x0, [sp, #312]
   334c8:	mov	w1, #0x1                   	// #1
   334cc:	str	x28, [sp, #176]
   334d0:	ldr	x0, [sp, #312]
   334d4:	str	w1, [sp, #184]
   334d8:	str	x0, [sp, #200]
   334dc:	str	x28, [sp, #208]
   334e0:	add	x2, x0, x27, lsl #3
   334e4:	str	x2, [sp, #264]
   334e8:	add	x2, x0, x27, lsl #4
   334ec:	str	x2, [sp, #296]
   334f0:	mov	x2, #0x18                  	// #24
   334f4:	str	w1, [sp, #216]
   334f8:	str	x28, [sp, #240]
   334fc:	madd	x27, x27, x2, x0
   33500:	add	x0, sp, #0x88
   33504:	str	x0, [sp, #104]
   33508:	str	x27, [sp, #232]
   3350c:	add	x27, sp, #0xd0
   33510:	str	w1, [sp, #248]
   33514:	str	x28, [sp, #272]
   33518:	str	w1, [sp, #280]
   3351c:	bl	c010 <mpfr_mpz_init@plt>
   33520:	mov	x0, #0x40                  	// #64
   33524:	mov	w1, #0x1                   	// #1
   33528:	mov	w28, w1
   3352c:	str	x0, [sp, #96]
   33530:	add	x0, sp, #0x98
   33534:	str	x0, [sp, #112]
   33538:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   3353c:	cmp	x26, x0
   33540:	ldr	x1, [sp, #304]
   33544:	b.ge	33494 <mpfr_gamma@@Base+0xa3c>  // b.tcont
   33548:	sub	x3, x26, #0x1
   3354c:	asr	x3, x3, #6
   33550:	add	x3, x3, #0x1
   33554:	str	x3, [sp, #120]
   33558:	lsl	x0, x3, #5
   3355c:	str	x0, [sp, #304]
   33560:	cbnz	x1, 33690 <mpfr_gamma@@Base+0xc38>
   33564:	bl	cd90 <mpfr_allocate_func@plt>
   33568:	str	x0, [sp, #312]
   3356c:	mov	x2, x19
   33570:	ldr	x3, [sp, #120]
   33574:	str	x26, [sp, #176]
   33578:	ldr	x0, [sp, #312]
   3357c:	str	w28, [sp, #184]
   33580:	str	x0, [sp, #200]
   33584:	str	x26, [sp, #208]
   33588:	add	x1, x0, x3, lsl #3
   3358c:	str	x1, [sp, #264]
   33590:	add	x1, x0, x3, lsl #4
   33594:	str	x1, [sp, #296]
   33598:	mov	x1, #0x18                  	// #24
   3359c:	str	w28, [sp, #216]
   335a0:	str	x26, [sp, #240]
   335a4:	madd	x3, x3, x1, x0
   335a8:	mov	x1, #0x2                   	// #2
   335ac:	mov	x0, x24
   335b0:	str	x3, [sp, #232]
   335b4:	mov	w3, #0x0                   	// #0
   335b8:	str	w28, [sp, #248]
   335bc:	str	x26, [sp, #272]
   335c0:	str	w28, [sp, #280]
   335c4:	bl	cae0 <mpfr_ui_sub@plt>
   335c8:	mov	x1, x24
   335cc:	mov	w2, #0x0                   	// #0
   335d0:	mov	x0, x25
   335d4:	bl	32a58 <mpfr_gamma@@Base>
   335d8:	mov	w2, #0x0                   	// #0
   335dc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   335e0:	ldr	x1, [x0, #2640]
   335e4:	add	x0, x0, #0xa50
   335e8:	blr	x1
   335ec:	add	x1, x20, x0
   335f0:	mov	x0, x23
   335f4:	bl	c410 <mpfr_cache@plt>
   335f8:	mov	x2, x24
   335fc:	mov	x1, x23
   33600:	mov	w3, #0x0                   	// #0
   33604:	mov	x0, x27
   33608:	bl	bdd0 <mpfr_mul@plt>
   3360c:	ldr	x4, [sp, #224]
   33610:	mov	x1, x27
   33614:	mov	x0, x27
   33618:	mov	w2, #0x0                   	// #0
   3361c:	str	x4, [sp, #120]
   33620:	bl	c4e0 <mpfr_sin@plt>
   33624:	ldr	x0, [sp, #256]
   33628:	mov	x5, #0x8000000000000003    	// #-9223372036854775805
   3362c:	ldr	x4, [sp, #120]
   33630:	cmp	x0, x5
   33634:	b.ne	336a0 <mpfr_gamma@@Base+0xc48>  // b.any
   33638:	ldr	x2, [sp, #112]
   3363c:	mov	x3, x25
   33640:	mov	w5, w22
   33644:	mov	x4, x23
   33648:	mov	x1, x19
   3364c:	mov	x0, x21
   33650:	bl	31a64 <mpfr_powerof2_raw@@Base+0x18>
   33654:	mov	w3, w0
   33658:	cbnz	w0, 33768 <mpfr_gamma@@Base+0xd10>
   3365c:	ldr	x1, [sp, #96]
   33660:	mov	x0, #0xfffffffffffffeff    	// #-257
   33664:	movk	x0, #0x7fff, lsl #48
   33668:	sub	x0, x0, x26
   3366c:	cmp	x0, x1
   33670:	b.ge	337fc <mpfr_gamma@@Base+0xda4>  // b.tcont
   33674:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   33678:	mov	w1, #0x1d2                 	// #466
   3367c:	add	x2, x2, #0x38a
   33680:	b	33434 <mpfr_gamma@@Base+0x9dc>
   33684:	add	x0, sp, #0x140
   33688:	str	xzr, [sp, #304]
   3368c:	b	334c4 <mpfr_gamma@@Base+0xa6c>
   33690:	mov	x2, x0
   33694:	ldr	x0, [sp, #312]
   33698:	bl	c250 <mpfr_reallocate_func@plt>
   3369c:	b	33568 <mpfr_gamma@@Base+0xb10>
   336a0:	ldr	x2, [sp, #224]
   336a4:	add	x4, x4, #0x1
   336a8:	mov	x1, x19
   336ac:	mov	w3, #0x0                   	// #0
   336b0:	sub	x4, x4, x2
   336b4:	mov	x0, x24
   336b8:	mov	x2, #0x1                   	// #1
   336bc:	str	x4, [sp, #120]
   336c0:	bl	c5c0 <mpfr_sub_ui@plt>
   336c4:	mov	x2, x24
   336c8:	mov	x1, x23
   336cc:	mov	w3, #0x0                   	// #0
   336d0:	mov	x0, x24
   336d4:	bl	bdd0 <mpfr_mul@plt>
   336d8:	mov	x2, x25
   336dc:	mov	x1, x27
   336e0:	mov	w3, #0x0                   	// #0
   336e4:	mov	x0, x27
   336e8:	bl	bdd0 <mpfr_mul@plt>
   336ec:	mov	x2, x27
   336f0:	mov	x1, x24
   336f4:	mov	x0, x27
   336f8:	mov	w3, #0x0                   	// #0
   336fc:	bl	c6b0 <mpfr_div@plt>
   33700:	ldr	x4, [sp, #120]
   33704:	mov	x2, #0x2                   	// #2
   33708:	ldr	x0, [sp, #224]
   3370c:	cmp	x4, #0x2
   33710:	csel	x2, x4, x2, ge  // ge = tcont
   33714:	mov	x5, #0x8000000000000003    	// #-9223372036854775805
   33718:	add	x2, x2, #0x4
   3371c:	cmp	x0, x5
   33720:	b.le	3365c <mpfr_gamma@@Base+0xc04>
   33724:	ldr	x1, [sp, #208]
   33728:	cmp	w22, #0x0
   3372c:	ldr	x0, [sp, #232]
   33730:	sub	x1, x1, #0x1
   33734:	ldr	x3, [x21]
   33738:	asr	x1, x1, #6
   3373c:	sub	x2, x26, x2
   33740:	add	x1, x1, #0x1
   33744:	cinc	x3, x3, eq  // eq = none
   33748:	bl	c400 <mpfr_round_p@plt>
   3374c:	cbz	w0, 3365c <mpfr_gamma@@Base+0xc04>
   33750:	ldr	w3, [sp, #216]
   33754:	mov	w2, w22
   33758:	mov	x1, x27
   3375c:	mov	x0, x21
   33760:	bl	c730 <mpfr_set4@plt>
   33764:	mov	w3, w0
   33768:	ldr	x1, [sp, #304]
   3376c:	cbz	x1, 33780 <mpfr_gamma@@Base+0xd28>
   33770:	ldr	x0, [sp, #312]
   33774:	str	w3, [sp, #96]
   33778:	bl	ccc0 <mpfr_free_func@plt>
   3377c:	ldr	w3, [sp, #96]
   33780:	ldr	x0, [sp, #104]
   33784:	str	w3, [sp, #96]
   33788:	bl	c200 <mpfr_mpz_clear@plt>
   3378c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   33790:	ldr	x2, [x0, #2592]
   33794:	add	x0, x0, #0xa20
   33798:	blr	x2
   3379c:	ldr	w1, [sp, #152]
   337a0:	add	x5, x20, x0
   337a4:	str	w1, [x20, x0]
   337a8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   337ac:	ldr	x2, [x0, #2528]
   337b0:	add	x0, x0, #0x9e0
   337b4:	blr	x2
   337b8:	ldp	x4, x2, [sp, #160]
   337bc:	str	x4, [x20, x0]
   337c0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   337c4:	ldr	x3, [x0, #2560]
   337c8:	add	x0, x0, #0xa00
   337cc:	blr	x3
   337d0:	str	x2, [x20, x0]
   337d4:	ldr	x0, [x21, #16]
   337d8:	ldr	w3, [sp, #96]
   337dc:	cmp	x4, x0
   337e0:	b.gt	32cac <mpfr_gamma@@Base+0x254>
   337e4:	cmp	x2, x0
   337e8:	b.lt	32cac <mpfr_gamma@@Base+0x254>  // b.tstop
   337ec:	cbz	w3, 32ae8 <mpfr_gamma@@Base+0x90>
   337f0:	orr	w1, w1, #0x8
   337f4:	str	w1, [x5]
   337f8:	b	32ae8 <mpfr_gamma@@Base+0x90>
   337fc:	ldr	x0, [sp, #96]
   33800:	add	x26, x26, x0
   33804:	mov	x0, #0x2                   	// #2
   33808:	sdiv	x0, x26, x0
   3380c:	str	x0, [sp, #96]
   33810:	b	33538 <mpfr_gamma@@Base+0xae0>

0000000000033814 <mpfr_set_ld@@Base>:
   33814:	stp	x29, x30, [sp, #-208]!
   33818:	mov	x29, sp
   3381c:	stp	x19, x20, [sp, #16]
   33820:	str	q0, [sp, #96]
   33824:	ldp	x20, x19, [sp, #96]
   33828:	stp	x21, x22, [sp, #32]
   3382c:	stp	x23, x24, [sp, #48]
   33830:	mov	x23, x0
   33834:	mov	w0, #0x7fff                	// #32767
   33838:	stp	x25, x26, [sp, #64]
   3383c:	mov	w25, w1
   33840:	ubfx	x1, x19, #48, #15
   33844:	stp	x27, x28, [sp, #80]
   33848:	cmp	w1, w0
   3384c:	b.ne	338bc <mpfr_set_ld@@Base+0xa8>  // b.any
   33850:	lsr	x1, x20, #32
   33854:	orr	w0, w20, w1
   33858:	ubfx	x1, x19, #32, #16
   3385c:	orr	w1, w1, w19
   33860:	orr	w0, w0, w1
   33864:	cbz	w0, 338bc <mpfr_set_ld@@Base+0xa8>
   33868:	mov	x0, #0x2                   	// #2
   3386c:	movk	x0, #0x8000, lsl #48
   33870:	str	x0, [x23, #16]
   33874:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   33878:	ldr	x1, [x0, #2592]
   3387c:	add	x0, x0, #0xa20
   33880:	blr	x1
   33884:	mrs	x1, tpidr_el0
   33888:	add	x0, x1, x0
   3388c:	ldr	w1, [x0]
   33890:	orr	w1, w1, #0x4
   33894:	str	w1, [x0]
   33898:	mov	w19, #0x0                   	// #0
   3389c:	mov	w0, w19
   338a0:	ldp	x19, x20, [sp, #16]
   338a4:	ldp	x21, x22, [sp, #32]
   338a8:	ldp	x23, x24, [sp, #48]
   338ac:	ldp	x25, x26, [sp, #64]
   338b0:	ldp	x27, x28, [sp, #80]
   338b4:	ldp	x29, x30, [sp], #208
   338b8:	ret
   338bc:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   338c0:	add	x0, x0, #0xa00
   338c4:	stp	x20, x19, [sp, #96]
   338c8:	ldr	q1, [x0]
   338cc:	ldr	q0, [sp, #96]
   338d0:	bl	51da0 <mpfr_free_pool@@Base+0xc8c>
   338d4:	cmp	w0, #0x0
   338d8:	b.le	338ec <mpfr_set_ld@@Base+0xd8>
   338dc:	mov	w1, #0x1                   	// #1
   338e0:	mov	x0, x23
   338e4:	bl	c640 <mpfr_set_inf@plt>
   338e8:	b	33898 <mpfr_set_ld@@Base+0x84>
   338ec:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   338f0:	add	x0, x0, #0xa10
   338f4:	stp	x20, x19, [sp, #96]
   338f8:	ldr	q1, [x0]
   338fc:	ldr	q0, [sp, #96]
   33900:	bl	51ee8 <mpfr_free_pool@@Base+0xdd4>
   33904:	tbz	w0, #31, 33910 <mpfr_set_ld@@Base+0xfc>
   33908:	mov	w1, #0xffffffff            	// #-1
   3390c:	b	338e0 <mpfr_set_ld@@Base+0xcc>
   33910:	movi	v1.2d, #0x0
   33914:	stp	x20, x19, [sp, #96]
   33918:	ldr	q0, [sp, #96]
   3391c:	bl	51c98 <mpfr_free_pool@@Base+0xb84>
   33920:	cbnz	w0, 33944 <mpfr_set_ld@@Base+0x130>
   33924:	stp	x20, x19, [sp, #96]
   33928:	ldr	q0, [sp, #96]
   3392c:	bl	53440 <mpfr_free_pool@@Base+0x232c>
   33930:	mov	w1, w25
   33934:	mov	x0, x23
   33938:	bl	bec0 <mpfr_set_d@plt>
   3393c:	mov	w19, w0
   33940:	b	3389c <mpfr_set_ld@@Base+0x88>
   33944:	add	x21, sp, #0x90
   33948:	mov	x1, #0x71                  	// #113
   3394c:	mov	x0, x21
   33950:	add	x26, sp, #0xb0
   33954:	bl	cb10 <mpfr_init2@plt>
   33958:	mrs	x24, tpidr_el0
   3395c:	mov	x0, x26
   33960:	mov	x1, #0x35                  	// #53
   33964:	bl	cb10 <mpfr_init2@plt>
   33968:	stp	x20, x19, [sp, #120]
   3396c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   33970:	ldr	x1, [x0, #2592]
   33974:	add	x0, x0, #0xa20
   33978:	blr	x1
   3397c:	ldr	w0, [x24, x0]
   33980:	str	w0, [sp, #116]
   33984:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   33988:	ldr	x1, [x0, #2528]
   3398c:	add	x0, x0, #0x9e0
   33990:	blr	x1
   33994:	add	x1, x24, x0
   33998:	ldr	x27, [x24, x0]
   3399c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   339a0:	ldr	x2, [x0, #2560]
   339a4:	add	x0, x0, #0xa00
   339a8:	blr	x2
   339ac:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   339b0:	str	x2, [x1]
   339b4:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   339b8:	ldr	x28, [x24, x0]
   339bc:	str	x1, [x24, x0]
   339c0:	ldp	x20, x19, [sp, #120]
   339c4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   339c8:	mov	w22, #0x0                   	// #0
   339cc:	str	x0, [sp, #160]
   339d0:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   339d4:	add	x0, x0, #0xa20
   339d8:	stp	x20, x19, [sp, #96]
   339dc:	ldr	q1, [x0]
   339e0:	ldr	q0, [sp, #96]
   339e4:	bl	51da0 <mpfr_free_pool@@Base+0xc8c>
   339e8:	cmp	w0, #0x0
   339ec:	b.gt	33a0c <mpfr_set_ld@@Base+0x1f8>
   339f0:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   339f4:	add	x0, x0, #0xa30
   339f8:	stp	x20, x19, [sp, #96]
   339fc:	ldr	q1, [x0]
   33a00:	ldr	q0, [sp, #96]
   33a04:	bl	51ee8 <mpfr_free_pool@@Base+0xdd4>
   33a08:	tbz	w0, #31, 33c44 <mpfr_set_ld@@Base+0x430>
   33a0c:	movi	v1.2d, #0x0
   33a10:	stp	x20, x19, [sp, #96]
   33a14:	ldr	q0, [sp, #96]
   33a18:	bl	51da0 <mpfr_free_pool@@Base+0xc8c>
   33a1c:	tbz	w0, #31, 3406c <mpfr_set_ld@@Base+0x858>
   33a20:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   33a24:	add	x0, x0, #0xa40
   33a28:	stp	x20, x19, [sp, #96]
   33a2c:	ldr	q1, [x0]
   33a30:	ldr	q0, [sp, #96]
   33a34:	bl	51ee8 <mpfr_free_pool@@Base+0xdd4>
   33a38:	cmp	w0, #0x0
   33a3c:	b.gt	33a78 <mpfr_set_ld@@Base+0x264>
   33a40:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   33a44:	add	x0, x0, #0xa50
   33a48:	stp	x20, x19, [sp, #96]
   33a4c:	add	w22, w22, #0x2, lsl #12
   33a50:	ldr	q1, [x0]
   33a54:	ldr	q0, [sp, #96]
   33a58:	bl	52028 <mpfr_free_pool@@Base+0xf14>
   33a5c:	str	q0, [sp, #96]
   33a60:	mov	x1, x21
   33a64:	mov	x0, x21
   33a68:	mov	w3, #0x1                   	// #1
   33a6c:	mov	x2, #0x2000                	// #8192
   33a70:	ldp	x20, x19, [sp, #96]
   33a74:	bl	c4b0 <mpfr_div_2si@plt>
   33a78:	movi	v1.2d, #0x0
   33a7c:	stp	x20, x19, [sp, #96]
   33a80:	ldr	q0, [sp, #96]
   33a84:	bl	51da0 <mpfr_free_pool@@Base+0xc8c>
   33a88:	tbz	w0, #31, 34088 <mpfr_set_ld@@Base+0x874>
   33a8c:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   33a90:	add	x0, x0, #0xa60
   33a94:	stp	x20, x19, [sp, #96]
   33a98:	ldr	q1, [x0]
   33a9c:	ldr	q0, [sp, #96]
   33aa0:	bl	51ee8 <mpfr_free_pool@@Base+0xdd4>
   33aa4:	cmp	w0, #0x0
   33aa8:	b.gt	33ae4 <mpfr_set_ld@@Base+0x2d0>
   33aac:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   33ab0:	add	x0, x0, #0xa70
   33ab4:	stp	x20, x19, [sp, #96]
   33ab8:	add	w22, w22, #0x1, lsl #12
   33abc:	ldr	q1, [x0]
   33ac0:	ldr	q0, [sp, #96]
   33ac4:	bl	52028 <mpfr_free_pool@@Base+0xf14>
   33ac8:	str	q0, [sp, #96]
   33acc:	mov	x1, x21
   33ad0:	mov	x0, x21
   33ad4:	mov	w3, #0x1                   	// #1
   33ad8:	mov	x2, #0x1000                	// #4096
   33adc:	ldp	x20, x19, [sp, #96]
   33ae0:	bl	c4b0 <mpfr_div_2si@plt>
   33ae4:	movi	v1.2d, #0x0
   33ae8:	stp	x20, x19, [sp, #96]
   33aec:	ldr	q0, [sp, #96]
   33af0:	bl	51da0 <mpfr_free_pool@@Base+0xc8c>
   33af4:	tbz	w0, #31, 340a4 <mpfr_set_ld@@Base+0x890>
   33af8:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   33afc:	add	x0, x0, #0xa80
   33b00:	stp	x20, x19, [sp, #96]
   33b04:	ldr	q1, [x0]
   33b08:	ldr	q0, [sp, #96]
   33b0c:	bl	51ee8 <mpfr_free_pool@@Base+0xdd4>
   33b10:	cmp	w0, #0x0
   33b14:	b.gt	33b50 <mpfr_set_ld@@Base+0x33c>
   33b18:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   33b1c:	add	x0, x0, #0xa90
   33b20:	stp	x20, x19, [sp, #96]
   33b24:	add	w22, w22, #0x800
   33b28:	ldr	q1, [x0]
   33b2c:	ldr	q0, [sp, #96]
   33b30:	bl	52028 <mpfr_free_pool@@Base+0xf14>
   33b34:	str	q0, [sp, #96]
   33b38:	mov	x1, x21
   33b3c:	mov	x0, x21
   33b40:	mov	w3, #0x1                   	// #1
   33b44:	mov	x2, #0x800                 	// #2048
   33b48:	ldp	x20, x19, [sp, #96]
   33b4c:	bl	c4b0 <mpfr_div_2si@plt>
   33b50:	movi	v1.2d, #0x0
   33b54:	stp	x20, x19, [sp, #96]
   33b58:	ldr	q0, [sp, #96]
   33b5c:	bl	51da0 <mpfr_free_pool@@Base+0xc8c>
   33b60:	tbz	w0, #31, 340c0 <mpfr_set_ld@@Base+0x8ac>
   33b64:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   33b68:	add	x0, x0, #0xaa0
   33b6c:	stp	x20, x19, [sp, #96]
   33b70:	ldr	q1, [x0]
   33b74:	ldr	q0, [sp, #96]
   33b78:	bl	51ee8 <mpfr_free_pool@@Base+0xdd4>
   33b7c:	cmp	w0, #0x0
   33b80:	b.gt	33bbc <mpfr_set_ld@@Base+0x3a8>
   33b84:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   33b88:	add	x0, x0, #0xab0
   33b8c:	stp	x20, x19, [sp, #96]
   33b90:	add	w22, w22, #0x400
   33b94:	ldr	q1, [x0]
   33b98:	ldr	q0, [sp, #96]
   33b9c:	bl	52028 <mpfr_free_pool@@Base+0xf14>
   33ba0:	str	q0, [sp, #96]
   33ba4:	mov	x1, x21
   33ba8:	mov	x0, x21
   33bac:	mov	w3, #0x1                   	// #1
   33bb0:	mov	x2, #0x400                 	// #1024
   33bb4:	ldp	x20, x19, [sp, #96]
   33bb8:	bl	c4b0 <mpfr_div_2si@plt>
   33bbc:	movi	v1.2d, #0x0
   33bc0:	stp	x20, x19, [sp, #96]
   33bc4:	ldr	q0, [sp, #96]
   33bc8:	bl	51da0 <mpfr_free_pool@@Base+0xc8c>
   33bcc:	cmp	w0, #0x0
   33bd0:	eor	x1, x19, #0x8000000000000000
   33bd4:	csel	x0, x1, x19, lt  // lt = tstop
   33bd8:	adrp	x1, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   33bdc:	add	x1, x1, #0xac0
   33be0:	stp	x20, x0, [sp, #96]
   33be4:	ldr	q1, [x1]
   33be8:	ldr	q0, [sp, #96]
   33bec:	bl	51da0 <mpfr_free_pool@@Base+0xc8c>
   33bf0:	tbnz	w0, #31, 33c2c <mpfr_set_ld@@Base+0x418>
   33bf4:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   33bf8:	add	x0, x0, #0xad0
   33bfc:	stp	x20, x19, [sp, #96]
   33c00:	add	w22, w22, #0x200
   33c04:	ldr	q1, [x0]
   33c08:	ldr	q0, [sp, #96]
   33c0c:	bl	52028 <mpfr_free_pool@@Base+0xf14>
   33c10:	str	q0, [sp, #96]
   33c14:	mov	x1, x21
   33c18:	mov	x0, x21
   33c1c:	mov	w3, #0x1                   	// #1
   33c20:	mov	x2, #0x200                 	// #512
   33c24:	ldp	x20, x19, [sp, #96]
   33c28:	bl	c4b0 <mpfr_div_2si@plt>
   33c2c:	movi	v1.2d, #0x0
   33c30:	stp	x20, x19, [sp, #96]
   33c34:	ldr	q0, [sp, #96]
   33c38:	bl	51c98 <mpfr_free_pool@@Base+0xb84>
   33c3c:	cbnz	w0, 339d0 <mpfr_set_ld@@Base+0x1bc>
   33c40:	b	33f20 <mpfr_set_ld@@Base+0x70c>
   33c44:	movi	v1.2d, #0x0
   33c48:	stp	x20, x19, [sp, #96]
   33c4c:	ldr	q0, [sp, #96]
   33c50:	bl	51da0 <mpfr_free_pool@@Base+0xc8c>
   33c54:	cmp	w0, #0x0
   33c58:	eor	x1, x19, #0x8000000000000000
   33c5c:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   33c60:	add	x0, x0, #0xab0
   33c64:	csel	x1, x1, x19, lt  // lt = tstop
   33c68:	stp	x20, x1, [sp, #96]
   33c6c:	ldr	q1, [x0]
   33c70:	ldr	q0, [sp, #96]
   33c74:	str	x1, [sp, #136]
   33c78:	bl	51ee8 <mpfr_free_pool@@Base+0xdd4>
   33c7c:	tbz	w0, #31, 33e8c <mpfr_set_ld@@Base+0x678>
   33c80:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   33c84:	add	x0, x0, #0xa50
   33c88:	ldr	x1, [sp, #136]
   33c8c:	stp	x20, x1, [sp, #96]
   33c90:	ldr	q1, [x0]
   33c94:	ldr	q0, [sp, #96]
   33c98:	bl	51ee8 <mpfr_free_pool@@Base+0xdd4>
   33c9c:	cmp	w0, #0x0
   33ca0:	b.gt	33cdc <mpfr_set_ld@@Base+0x4c8>
   33ca4:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   33ca8:	add	x0, x0, #0xae0
   33cac:	stp	x20, x19, [sp, #96]
   33cb0:	sub	w22, w22, #0x2, lsl #12
   33cb4:	ldr	q1, [x0]
   33cb8:	ldr	q0, [sp, #96]
   33cbc:	bl	52028 <mpfr_free_pool@@Base+0xf14>
   33cc0:	str	q0, [sp, #96]
   33cc4:	mov	x1, x21
   33cc8:	mov	x0, x21
   33ccc:	mov	w3, #0x1                   	// #1
   33cd0:	mov	x2, #0x2000                	// #8192
   33cd4:	ldp	x20, x19, [sp, #96]
   33cd8:	bl	bc10 <mpfr_mul_2si@plt>
   33cdc:	movi	v1.2d, #0x0
   33ce0:	stp	x20, x19, [sp, #96]
   33ce4:	ldr	q0, [sp, #96]
   33ce8:	bl	51da0 <mpfr_free_pool@@Base+0xc8c>
   33cec:	tbz	w0, #31, 34004 <mpfr_set_ld@@Base+0x7f0>
   33cf0:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   33cf4:	add	x0, x0, #0xaf0
   33cf8:	stp	x20, x19, [sp, #96]
   33cfc:	ldr	q1, [x0]
   33d00:	ldr	q0, [sp, #96]
   33d04:	bl	51da0 <mpfr_free_pool@@Base+0xc8c>
   33d08:	tbnz	w0, #31, 33d44 <mpfr_set_ld@@Base+0x530>
   33d0c:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   33d10:	add	x0, x0, #0xb00
   33d14:	stp	x20, x19, [sp, #96]
   33d18:	sub	w22, w22, #0x1, lsl #12
   33d1c:	ldr	q1, [x0]
   33d20:	ldr	q0, [sp, #96]
   33d24:	bl	52028 <mpfr_free_pool@@Base+0xf14>
   33d28:	str	q0, [sp, #96]
   33d2c:	mov	x1, x21
   33d30:	mov	x0, x21
   33d34:	mov	w3, #0x1                   	// #1
   33d38:	mov	x2, #0x1000                	// #4096
   33d3c:	ldp	x20, x19, [sp, #96]
   33d40:	bl	bc10 <mpfr_mul_2si@plt>
   33d44:	movi	v1.2d, #0x0
   33d48:	stp	x20, x19, [sp, #96]
   33d4c:	ldr	q0, [sp, #96]
   33d50:	bl	51da0 <mpfr_free_pool@@Base+0xc8c>
   33d54:	tbz	w0, #31, 34024 <mpfr_set_ld@@Base+0x810>
   33d58:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   33d5c:	add	x0, x0, #0xb10
   33d60:	stp	x20, x19, [sp, #96]
   33d64:	ldr	q1, [x0]
   33d68:	ldr	q0, [sp, #96]
   33d6c:	bl	51da0 <mpfr_free_pool@@Base+0xc8c>
   33d70:	tbnz	w0, #31, 33dac <mpfr_set_ld@@Base+0x598>
   33d74:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   33d78:	add	x0, x0, #0xb20
   33d7c:	stp	x20, x19, [sp, #96]
   33d80:	sub	w22, w22, #0x800
   33d84:	ldr	q1, [x0]
   33d88:	ldr	q0, [sp, #96]
   33d8c:	bl	52028 <mpfr_free_pool@@Base+0xf14>
   33d90:	str	q0, [sp, #96]
   33d94:	mov	x1, x21
   33d98:	mov	x0, x21
   33d9c:	mov	w3, #0x1                   	// #1
   33da0:	mov	x2, #0x800                 	// #2048
   33da4:	ldp	x20, x19, [sp, #96]
   33da8:	bl	bc10 <mpfr_mul_2si@plt>
   33dac:	movi	v1.2d, #0x0
   33db0:	stp	x20, x19, [sp, #96]
   33db4:	ldr	q0, [sp, #96]
   33db8:	bl	51da0 <mpfr_free_pool@@Base+0xc8c>
   33dbc:	tbz	w0, #31, 34044 <mpfr_set_ld@@Base+0x830>
   33dc0:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   33dc4:	add	x0, x0, #0xb30
   33dc8:	stp	x20, x19, [sp, #96]
   33dcc:	ldr	q1, [x0]
   33dd0:	ldr	q0, [sp, #96]
   33dd4:	bl	51da0 <mpfr_free_pool@@Base+0xc8c>
   33dd8:	tbnz	w0, #31, 33e14 <mpfr_set_ld@@Base+0x600>
   33ddc:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   33de0:	add	x0, x0, #0xb40
   33de4:	stp	x20, x19, [sp, #96]
   33de8:	sub	w22, w22, #0x400
   33dec:	ldr	q1, [x0]
   33df0:	ldr	q0, [sp, #96]
   33df4:	bl	52028 <mpfr_free_pool@@Base+0xf14>
   33df8:	str	q0, [sp, #96]
   33dfc:	mov	x1, x21
   33e00:	mov	x0, x21
   33e04:	mov	w3, #0x1                   	// #1
   33e08:	mov	x2, #0x400                 	// #1024
   33e0c:	ldp	x20, x19, [sp, #96]
   33e10:	bl	bc10 <mpfr_mul_2si@plt>
   33e14:	movi	v1.2d, #0x0
   33e18:	stp	x20, x19, [sp, #96]
   33e1c:	ldr	q0, [sp, #96]
   33e20:	bl	51da0 <mpfr_free_pool@@Base+0xc8c>
   33e24:	cmp	w0, #0x0
   33e28:	eor	x1, x19, #0x8000000000000000
   33e2c:	csel	x0, x1, x19, lt  // lt = tstop
   33e30:	adrp	x1, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   33e34:	add	x1, x1, #0xad0
   33e38:	stp	x20, x0, [sp, #96]
   33e3c:	ldr	q1, [x1]
   33e40:	ldr	q0, [sp, #96]
   33e44:	bl	51ee8 <mpfr_free_pool@@Base+0xdd4>
   33e48:	cmp	w0, #0x0
   33e4c:	b.gt	33c2c <mpfr_set_ld@@Base+0x418>
   33e50:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   33e54:	add	x0, x0, #0xac0
   33e58:	stp	x20, x19, [sp, #96]
   33e5c:	sub	w22, w22, #0x200
   33e60:	ldr	q1, [x0]
   33e64:	ldr	q0, [sp, #96]
   33e68:	bl	52028 <mpfr_free_pool@@Base+0xf14>
   33e6c:	str	q0, [sp, #96]
   33e70:	mov	x1, x21
   33e74:	mov	x0, x21
   33e78:	mov	w3, #0x1                   	// #1
   33e7c:	mov	x2, #0x200                 	// #512
   33e80:	ldp	x20, x19, [sp, #96]
   33e84:	bl	bc10 <mpfr_mul_2si@plt>
   33e88:	b	33c2c <mpfr_set_ld@@Base+0x418>
   33e8c:	stp	x20, x19, [sp, #96]
   33e90:	ldr	q0, [sp, #96]
   33e94:	bl	53440 <mpfr_free_pool@@Base+0x232c>
   33e98:	mov	w1, #0x1                   	// #1
   33e9c:	mov	x0, x26
   33ea0:	bl	bec0 <mpfr_set_d@plt>
   33ea4:	mov	x2, x26
   33ea8:	mov	x1, x21
   33eac:	mov	x0, x21
   33eb0:	mov	w3, #0x1                   	// #1
   33eb4:	bl	c230 <mpfr_add@plt>
   33eb8:	cbz	w0, 33fb4 <mpfr_set_ld@@Base+0x7a0>
   33ebc:	mov	x0, x21
   33ec0:	bl	cc20 <mpfr_number_p@plt>
   33ec4:	cbz	w0, 33f20 <mpfr_set_ld@@Base+0x70c>
   33ec8:	ldr	x0, [x23]
   33ecc:	ldr	x2, [sp, #144]
   33ed0:	add	x1, x0, #0x1
   33ed4:	cmp	x2, x1
   33ed8:	b.eq	33ee8 <mpfr_set_ld@@Base+0x6d4>  // b.none
   33edc:	mov	x0, x21
   33ee0:	bl	bf50 <mpfr_set_prec@plt>
   33ee4:	b	339c0 <mpfr_set_ld@@Base+0x1ac>
   33ee8:	ldr	x2, [sp, #168]
   33eec:	mvn	w1, w0
   33ef0:	mov	x0, #0x1                   	// #1
   33ef4:	lsl	x0, x0, x1
   33ef8:	sxtw	x0, w0
   33efc:	ldr	x3, [x2]
   33f00:	cbnz	w25, 33f18 <mpfr_set_ld@@Base+0x704>
   33f04:	ldrsw	x4, [sp, #152]
   33f08:	and	x1, x0, x3
   33f0c:	cmp	x1, x4, lsr #63
   33f10:	cset	w25, eq  // eq = none
   33f14:	add	w25, w25, #0x2
   33f18:	orr	x0, x0, x3
   33f1c:	str	x0, [x2]
   33f20:	mov	x1, x21
   33f24:	sxtw	x2, w22
   33f28:	mov	w3, w25
   33f2c:	mov	x0, x23
   33f30:	bl	bc10 <mpfr_mul_2si@plt>
   33f34:	mov	w19, w0
   33f38:	mov	x0, x21
   33f3c:	bl	c0f0 <mpfr_clear@plt>
   33f40:	mov	x0, x26
   33f44:	bl	c0f0 <mpfr_clear@plt>
   33f48:	ldr	w2, [sp, #116]
   33f4c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   33f50:	ldr	x1, [x0, #2592]
   33f54:	add	x0, x0, #0xa20
   33f58:	blr	x1
   33f5c:	add	x1, x24, x0
   33f60:	str	w2, [x24, x0]
   33f64:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   33f68:	ldr	x2, [x0, #2528]
   33f6c:	add	x0, x0, #0x9e0
   33f70:	blr	x2
   33f74:	str	x27, [x24, x0]
   33f78:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   33f7c:	ldr	x2, [x0, #2560]
   33f80:	add	x0, x0, #0xa00
   33f84:	blr	x2
   33f88:	str	x28, [x24, x0]
   33f8c:	ldr	x0, [x23, #16]
   33f90:	cmp	x27, x0
   33f94:	b.gt	33ff0 <mpfr_set_ld@@Base+0x7dc>
   33f98:	cmp	x28, x0
   33f9c:	b.lt	33ff0 <mpfr_set_ld@@Base+0x7dc>  // b.tstop
   33fa0:	cbz	w19, 3389c <mpfr_set_ld@@Base+0x88>
   33fa4:	ldr	w0, [sp, #116]
   33fa8:	orr	w0, w0, #0x8
   33fac:	str	w0, [x1]
   33fb0:	b	3389c <mpfr_set_ld@@Base+0x88>
   33fb4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   33fb8:	ldr	x1, [x0, #2656]
   33fbc:	add	x0, x0, #0xa60
   33fc0:	blr	x1
   33fc4:	ldr	w1, [x24, x0]
   33fc8:	mov	x0, x26
   33fcc:	bl	bdb0 <mpfr_get_d@plt>
   33fd0:	bl	532f0 <mpfr_free_pool@@Base+0x21dc>
   33fd4:	stp	x20, x19, [sp, #96]
   33fd8:	mov	v1.16b, v0.16b
   33fdc:	ldr	q0, [sp, #96]
   33fe0:	bl	52810 <mpfr_free_pool@@Base+0x16fc>
   33fe4:	str	q0, [sp, #96]
   33fe8:	ldp	x20, x19, [sp, #96]
   33fec:	b	33c2c <mpfr_set_ld@@Base+0x418>
   33ff0:	mov	w2, w25
   33ff4:	mov	w1, w19
   33ff8:	mov	x0, x23
   33ffc:	bl	cbc0 <mpfr_check_range@plt>
   34000:	b	3393c <mpfr_set_ld@@Base+0x128>
   34004:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   34008:	add	x0, x0, #0xa70
   3400c:	stp	x20, x19, [sp, #96]
   34010:	ldr	q1, [x0]
   34014:	ldr	q0, [sp, #96]
   34018:	bl	51ee8 <mpfr_free_pool@@Base+0xdd4>
   3401c:	cmp	w0, #0x0
   34020:	b.le	33d0c <mpfr_set_ld@@Base+0x4f8>
   34024:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   34028:	add	x0, x0, #0xa90
   3402c:	stp	x20, x19, [sp, #96]
   34030:	ldr	q1, [x0]
   34034:	ldr	q0, [sp, #96]
   34038:	bl	51ee8 <mpfr_free_pool@@Base+0xdd4>
   3403c:	cmp	w0, #0x0
   34040:	b.le	33d74 <mpfr_set_ld@@Base+0x560>
   34044:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   34048:	add	x0, x0, #0xab0
   3404c:	stp	x20, x19, [sp, #96]
   34050:	ldr	q1, [x0]
   34054:	ldr	q0, [sp, #96]
   34058:	bl	51ee8 <mpfr_free_pool@@Base+0xdd4>
   3405c:	cmp	w0, #0x0
   34060:	b.le	33ddc <mpfr_set_ld@@Base+0x5c8>
   34064:	mov	x0, x19
   34068:	b	33e30 <mpfr_set_ld@@Base+0x61c>
   3406c:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   34070:	add	x0, x0, #0xae0
   34074:	stp	x20, x19, [sp, #96]
   34078:	ldr	q1, [x0]
   3407c:	ldr	q0, [sp, #96]
   34080:	bl	51da0 <mpfr_free_pool@@Base+0xc8c>
   34084:	tbz	w0, #31, 33a40 <mpfr_set_ld@@Base+0x22c>
   34088:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   3408c:	add	x0, x0, #0xb00
   34090:	stp	x20, x19, [sp, #96]
   34094:	ldr	q1, [x0]
   34098:	ldr	q0, [sp, #96]
   3409c:	bl	51da0 <mpfr_free_pool@@Base+0xc8c>
   340a0:	tbz	w0, #31, 33aac <mpfr_set_ld@@Base+0x298>
   340a4:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   340a8:	add	x0, x0, #0xb20
   340ac:	stp	x20, x19, [sp, #96]
   340b0:	ldr	q1, [x0]
   340b4:	ldr	q0, [sp, #96]
   340b8:	bl	51da0 <mpfr_free_pool@@Base+0xc8c>
   340bc:	tbz	w0, #31, 33b18 <mpfr_set_ld@@Base+0x304>
   340c0:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   340c4:	add	x0, x0, #0xb40
   340c8:	stp	x20, x19, [sp, #96]
   340cc:	ldr	q1, [x0]
   340d0:	ldr	q0, [sp, #96]
   340d4:	bl	51da0 <mpfr_free_pool@@Base+0xc8c>
   340d8:	tbz	w0, #31, 33b84 <mpfr_set_ld@@Base+0x370>
   340dc:	mov	x0, x19
   340e0:	b	33bd8 <mpfr_set_ld@@Base+0x3c4>

00000000000340e4 <mpfr_get_ld@@Base>:
   340e4:	stp	x29, x30, [sp, #-208]!
   340e8:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   340ec:	mov	x29, sp
   340f0:	ldr	x3, [x0, #16]
   340f4:	stp	x19, x20, [sp, #16]
   340f8:	stp	x21, x22, [sp, #32]
   340fc:	cmp	x3, x2
   34100:	stp	x23, x24, [sp, #48]
   34104:	stp	x25, x26, [sp, #64]
   34108:	stp	x27, x28, [sp, #80]
   3410c:	str	d8, [sp, #96]
   34110:	b.gt	3414c <mpfr_get_ld@@Base+0x68>
   34114:	bl	bdb0 <mpfr_get_d@plt>
   34118:	bl	532f0 <mpfr_free_pool@@Base+0x21dc>
   3411c:	str	q0, [sp, #112]
   34120:	ldp	x26, x19, [sp, #112]
   34124:	stp	x26, x19, [sp, #112]
   34128:	ldr	d8, [sp, #96]
   3412c:	ldp	x19, x20, [sp, #16]
   34130:	ldp	x21, x22, [sp, #32]
   34134:	ldp	x23, x24, [sp, #48]
   34138:	ldp	x25, x26, [sp, #64]
   3413c:	ldp	x27, x28, [sp, #80]
   34140:	ldr	q0, [sp, #112]
   34144:	ldp	x29, x30, [sp], #208
   34148:	ret
   3414c:	mrs	x21, tpidr_el0
   34150:	mov	w20, w1
   34154:	mov	x19, x0
   34158:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3415c:	ldr	x1, [x0, #2592]
   34160:	add	x0, x0, #0xa20
   34164:	blr	x1
   34168:	add	x27, sp, #0x90
   3416c:	add	x28, sp, #0xb0
   34170:	ldr	w24, [x21, x0]
   34174:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   34178:	ldr	x1, [x0, #2528]
   3417c:	add	x0, x0, #0x9e0
   34180:	blr	x1
   34184:	add	x1, x21, x0
   34188:	mov	x26, #0x0                   	// #0
   3418c:	ldr	x23, [x21, x0]
   34190:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   34194:	ldr	x2, [x0, #2560]
   34198:	add	x0, x0, #0xa00
   3419c:	blr	x2
   341a0:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   341a4:	str	x2, [x1]
   341a8:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   341ac:	ldr	x22, [x21, x0]
   341b0:	str	x1, [x21, x0]
   341b4:	mov	x0, x27
   341b8:	mov	x1, #0x71                  	// #113
   341bc:	bl	cb10 <mpfr_init2@plt>
   341c0:	mov	x0, x28
   341c4:	mov	x1, #0x71                  	// #113
   341c8:	bl	cb10 <mpfr_init2@plt>
   341cc:	ldr	w3, [x19, #8]
   341d0:	mov	w2, w20
   341d4:	mov	x1, x19
   341d8:	mov	x0, x27
   341dc:	mov	x19, #0x0                   	// #0
   341e0:	bl	c730 <mpfr_set4@plt>
   341e4:	ldr	w25, [sp, #152]
   341e8:	mov	w0, #0x1                   	// #1
   341ec:	str	w0, [sp, #152]
   341f0:	ldr	x20, [sp, #160]
   341f4:	str	xzr, [sp, #160]
   341f8:	mov	x0, x27
   341fc:	mov	w1, #0x0                   	// #0
   34200:	bl	bdb0 <mpfr_get_d@plt>
   34204:	fmov	d8, d0
   34208:	bl	532f0 <mpfr_free_pool@@Base+0x21dc>
   3420c:	stp	x26, x19, [sp, #112]
   34210:	mov	v1.16b, v0.16b
   34214:	ldr	q0, [sp, #112]
   34218:	bl	51170 <mpfr_free_pool@@Base+0x5c>
   3421c:	str	q0, [sp, #112]
   34220:	fmov	d0, d8
   34224:	mov	w1, #0x0                   	// #0
   34228:	mov	x0, x28
   3422c:	ldp	x26, x19, [sp, #112]
   34230:	bl	bec0 <mpfr_set_d@plt>
   34234:	mov	x2, x28
   34238:	mov	x1, x27
   3423c:	mov	x0, x27
   34240:	mov	w3, #0x0                   	// #0
   34244:	bl	bbf0 <mpfr_sub@plt>
   34248:	ldr	x0, [sp, #160]
   3424c:	mov	x4, #0x8000000000000001    	// #-9223372036854775807
   34250:	cmp	x0, x4
   34254:	b.ne	341f8 <mpfr_get_ld@@Base+0x114>  // b.any
   34258:	mov	x0, x28
   3425c:	bl	c0f0 <mpfr_clear@plt>
   34260:	mov	x0, x27
   34264:	bl	c0f0 <mpfr_clear@plt>
   34268:	cbnz	x20, 342d0 <mpfr_get_ld@@Base+0x1ec>
   3426c:	tbz	w25, #31, 34274 <mpfr_get_ld@@Base+0x190>
   34270:	eor	x19, x19, #0x8000000000000000
   34274:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   34278:	ldr	x1, [x0, #2592]
   3427c:	add	x0, x0, #0xa20
   34280:	blr	x1
   34284:	str	w24, [x21, x0]
   34288:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3428c:	ldr	x1, [x0, #2528]
   34290:	add	x0, x0, #0x9e0
   34294:	blr	x1
   34298:	str	x23, [x21, x0]
   3429c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   342a0:	ldr	x1, [x0, #2560]
   342a4:	add	x0, x0, #0xa00
   342a8:	blr	x1
   342ac:	str	x22, [x21, x0]
   342b0:	b	34124 <mpfr_get_ld@@Base+0x40>
   342b4:	stp	x26, x19, [sp, #112]
   342b8:	sub	x20, x20, #0x1
   342bc:	ldr	q1, [sp, #112]
   342c0:	mov	v0.16b, v1.16b
   342c4:	bl	51170 <mpfr_free_pool@@Base+0x5c>
   342c8:	str	q0, [sp, #112]
   342cc:	ldp	x26, x19, [sp, #112]
   342d0:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   342d4:	add	x0, x0, #0xb60
   342d8:	stp	x26, x19, [sp, #112]
   342dc:	ldr	q0, [sp, #112]
   342e0:	ldr	q1, [x0]
   342e4:	bl	51ee8 <mpfr_free_pool@@Base+0xdd4>
   342e8:	tbnz	w0, #31, 342b4 <mpfr_get_ld@@Base+0x1d0>
   342ec:	cmp	x20, #0x0
   342f0:	b.gt	3433c <mpfr_get_ld@@Base+0x258>
   342f4:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   342f8:	neg	x20, x20
   342fc:	add	x0, x0, #0xb70
   34300:	ldr	q1, [x0]
   34304:	tbz	w20, #0, 34324 <mpfr_get_ld@@Base+0x240>
   34308:	stp	x26, x19, [sp, #112]
   3430c:	ldr	q0, [sp, #112]
   34310:	str	q1, [sp, #128]
   34314:	bl	52028 <mpfr_free_pool@@Base+0xf14>
   34318:	str	q0, [sp, #112]
   3431c:	ldp	x26, x19, [sp, #112]
   34320:	ldr	q1, [sp, #128]
   34324:	asr	x20, x20, #1
   34328:	cbz	x20, 3426c <mpfr_get_ld@@Base+0x188>
   3432c:	mov	v0.16b, v1.16b
   34330:	bl	52028 <mpfr_free_pool@@Base+0xf14>
   34334:	mov	v1.16b, v0.16b
   34338:	b	34304 <mpfr_get_ld@@Base+0x220>
   3433c:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   34340:	add	x0, x0, #0xb80
   34344:	b	34300 <mpfr_get_ld@@Base+0x21c>

0000000000034348 <mpfr_get_ld_2exp@@Base>:
   34348:	stp	x29, x30, [sp, #-96]!
   3434c:	mov	x29, sp
   34350:	ldr	x4, [x1, #16]
   34354:	stp	x19, x20, [sp, #16]
   34358:	str	x21, [sp, #32]
   3435c:	mov	x21, #0x8000000000000003    	// #-9223372036854775805
   34360:	cmp	x4, x21
   34364:	b.gt	34388 <mpfr_get_ld_2exp@@Base+0x40>
   34368:	bl	cc60 <mpfr_get_d_2exp@plt>
   3436c:	bl	532f0 <mpfr_free_pool@@Base+0x21dc>
   34370:	str	q0, [sp, #48]
   34374:	ldp	x19, x20, [sp, #16]
   34378:	ldr	x21, [sp, #32]
   3437c:	ldr	q0, [sp, #48]
   34380:	ldp	x29, x30, [sp], #96
   34384:	ret
   34388:	mov	x19, x1
   3438c:	mov	x20, x0
   34390:	mov	w1, w2
   34394:	str	xzr, [sp, #80]
   34398:	ldr	x0, [x19]
   3439c:	str	x0, [sp, #64]
   343a0:	ldr	w0, [x19, #8]
   343a4:	str	w0, [sp, #72]
   343a8:	ldr	x0, [x19, #24]
   343ac:	str	x0, [sp, #88]
   343b0:	add	x0, sp, #0x40
   343b4:	bl	c610 <mpfr_get_ld@plt>
   343b8:	ldr	x19, [x19, #16]
   343bc:	str	q0, [sp, #48]
   343c0:	cmp	x19, x21
   343c4:	b.le	344a4 <mpfr_get_ld_2exp@@Base+0x15c>
   343c8:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   343cc:	add	x0, x0, #0xb60
   343d0:	ldr	q1, [x0]
   343d4:	bl	51c98 <mpfr_free_pool@@Base+0xb84>
   343d8:	cbnz	w0, 343f8 <mpfr_get_ld_2exp@@Base+0xb0>
   343dc:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   343e0:	add	x19, x19, #0x1
   343e4:	add	x0, x0, #0xb70
   343e8:	ldr	q0, [x0]
   343ec:	str	q0, [sp, #48]
   343f0:	str	x19, [x20]
   343f4:	b	34374 <mpfr_get_ld_2exp@@Base+0x2c>
   343f8:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   343fc:	add	x0, x0, #0xb90
   34400:	ldr	q0, [sp, #48]
   34404:	ldr	q1, [x0]
   34408:	bl	51c98 <mpfr_free_pool@@Base+0xb84>
   3440c:	cbnz	w0, 34420 <mpfr_get_ld_2exp@@Base+0xd8>
   34410:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   34414:	add	x19, x19, #0x1
   34418:	add	x0, x0, #0xba0
   3441c:	b	343e8 <mpfr_get_ld_2exp@@Base+0xa0>
   34420:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   34424:	add	x0, x0, #0xb70
   34428:	ldr	q0, [sp, #48]
   3442c:	ldr	q1, [x0]
   34430:	bl	51da0 <mpfr_free_pool@@Base+0xc8c>
   34434:	tbnz	w0, #31, 34450 <mpfr_get_ld_2exp@@Base+0x108>
   34438:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   3443c:	add	x0, x0, #0xb60
   34440:	ldr	q0, [sp, #48]
   34444:	ldr	q1, [x0]
   34448:	bl	51ee8 <mpfr_free_pool@@Base+0xdd4>
   3444c:	tbnz	w0, #31, 343f0 <mpfr_get_ld_2exp@@Base+0xa8>
   34450:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   34454:	add	x0, x0, #0xba0
   34458:	ldr	q0, [sp, #48]
   3445c:	ldr	q1, [x0]
   34460:	bl	51ee8 <mpfr_free_pool@@Base+0xdd4>
   34464:	cmp	w0, #0x0
   34468:	b.gt	34488 <mpfr_get_ld_2exp@@Base+0x140>
   3446c:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   34470:	add	x0, x0, #0xb90
   34474:	ldr	q0, [sp, #48]
   34478:	ldr	q1, [x0]
   3447c:	bl	51da0 <mpfr_free_pool@@Base+0xc8c>
   34480:	cmp	w0, #0x0
   34484:	b.gt	343f0 <mpfr_get_ld_2exp@@Base+0xa8>
   34488:	adrp	x2, 54000 <mpfr_free_pool@@Base+0x2eec>
   3448c:	mov	w1, #0x10e                 	// #270
   34490:	add	x2, x2, #0xb97
   34494:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   34498:	add	x0, x0, #0xb50
   3449c:	bl	cbd0 <mpfr_assert_fail@plt>
   344a0:	b	343f0 <mpfr_get_ld_2exp@@Base+0xa8>
   344a4:	mov	x19, #0x0                   	// #0
   344a8:	b	343f0 <mpfr_get_ld_2exp@@Base+0xa8>

00000000000344ac <mpfr_cbrt@@Base>:
   344ac:	stp	x29, x30, [sp, #-128]!
   344b0:	mov	x29, sp
   344b4:	stp	x19, x20, [sp, #16]
   344b8:	mov	x20, x0
   344bc:	mov	x19, x1
   344c0:	ldr	x0, [x1, #16]
   344c4:	stp	x21, x22, [sp, #32]
   344c8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   344cc:	stp	x23, x24, [sp, #48]
   344d0:	cmp	x0, x1
   344d4:	stp	x25, x26, [sp, #64]
   344d8:	stp	x27, x28, [sp, #80]
   344dc:	b.gt	3455c <mpfr_cbrt@@Base+0xb0>
   344e0:	mov	x2, #0x2                   	// #2
   344e4:	movk	x2, #0x8000, lsl #48
   344e8:	cmp	x0, x2
   344ec:	b.ne	3453c <mpfr_cbrt@@Base+0x90>  // b.any
   344f0:	str	x0, [x20, #16]
   344f4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   344f8:	ldr	x1, [x0, #2592]
   344fc:	add	x0, x0, #0xa20
   34500:	blr	x1
   34504:	mrs	x1, tpidr_el0
   34508:	add	x0, x1, x0
   3450c:	ldr	w1, [x0]
   34510:	orr	w1, w1, #0x4
   34514:	str	w1, [x0]
   34518:	mov	w19, #0x0                   	// #0
   3451c:	mov	w0, w19
   34520:	ldp	x19, x20, [sp, #16]
   34524:	ldp	x21, x22, [sp, #32]
   34528:	ldp	x23, x24, [sp, #48]
   3452c:	ldp	x25, x26, [sp, #64]
   34530:	ldp	x27, x28, [sp, #80]
   34534:	ldp	x29, x30, [sp], #128
   34538:	ret
   3453c:	cmp	x0, x1
   34540:	ldr	w1, [x19, #8]
   34544:	b.ne	34554 <mpfr_cbrt@@Base+0xa8>  // b.any
   34548:	str	w1, [x20, #8]
   3454c:	str	x0, [x20, #16]
   34550:	b	34518 <mpfr_cbrt@@Base+0x6c>
   34554:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   34558:	b	34548 <mpfr_cbrt@@Base+0x9c>
   3455c:	mrs	x23, tpidr_el0
   34560:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   34564:	ldr	x1, [x0, #2592]
   34568:	add	x0, x0, #0xa20
   3456c:	blr	x1
   34570:	mov	w22, w2
   34574:	add	x26, sp, #0x70
   34578:	ldr	w24, [x23, x0]
   3457c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   34580:	ldr	x1, [x0, #2528]
   34584:	add	x0, x0, #0x9e0
   34588:	blr	x1
   3458c:	add	x1, x23, x0
   34590:	ldr	x27, [x23, x0]
   34594:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   34598:	ldr	x2, [x0, #2560]
   3459c:	add	x0, x0, #0xa00
   345a0:	blr	x2
   345a4:	ldr	x2, [x23, x0]
   345a8:	str	x2, [sp, #96]
   345ac:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   345b0:	str	x2, [x1]
   345b4:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   345b8:	str	x1, [x23, x0]
   345bc:	mov	x0, x26
   345c0:	bl	c010 <mpfr_mpz_init@plt>
   345c4:	mov	x1, x19
   345c8:	mov	x0, x26
   345cc:	bl	cb50 <mpfr_get_z_2exp@plt>
   345d0:	ldr	w25, [x19, #8]
   345d4:	mov	x21, x0
   345d8:	tbz	w25, #31, 345e8 <mpfr_cbrt@@Base+0x13c>
   345dc:	ldr	w0, [sp, #116]
   345e0:	neg	w0, w0
   345e4:	str	w0, [sp, #116]
   345e8:	mov	x28, #0x3                   	// #3
   345ec:	sdiv	x28, x21, x28
   345f0:	add	x28, x28, x28, lsl #1
   345f4:	subs	x28, x21, x28
   345f8:	b.pl	34600 <mpfr_cbrt@@Base+0x154>  // b.nfrst
   345fc:	add	x28, x28, #0x3
   34600:	ldr	w2, [sp, #116]
   34604:	mov	x1, #0xfffffffffffffff8    	// #-8
   34608:	ldr	x19, [x20]
   3460c:	cmp	w2, #0x0
   34610:	cneg	w0, w2, lt  // lt = tstop
   34614:	cmp	w22, #0x0
   34618:	ldr	x2, [sp, #120]
   3461c:	add	x1, x1, w0, sxtw #3
   34620:	cinc	x19, x19, eq  // eq = none
   34624:	sbfiz	x0, x0, #6, #32
   34628:	ldr	x1, [x2, x1]
   3462c:	add	x2, x19, x19, lsl #1
   34630:	clz	x1, x1
   34634:	sub	x0, x0, x1
   34638:	sub	x2, x2, x0
   3463c:	mov	x0, #0x3                   	// #3
   34640:	sub	x2, x2, x28
   34644:	sdiv	x2, x2, x0
   34648:	add	x2, x2, x2, lsl #1
   3464c:	adds	x2, x2, x28
   34650:	b.mi	347b0 <mpfr_cbrt@@Base+0x304>  // b.first
   34654:	mov	x1, x26
   34658:	mov	x0, x26
   3465c:	str	x2, [sp, #104]
   34660:	bl	c290 <__gmpz_mul_2exp@plt>
   34664:	ldr	x2, [sp, #104]
   34668:	sub	x21, x21, x2
   3466c:	mov	x1, x26
   34670:	mov	x2, #0x3                   	// #3
   34674:	mov	x0, x26
   34678:	bl	c370 <__gmpz_root@plt>
   3467c:	ldr	w1, [sp, #116]
   34680:	mov	x2, #0xfffffffffffffff8    	// #-8
   34684:	ldr	x4, [sp, #120]
   34688:	cmp	w1, #0x0
   3468c:	cneg	w1, w1, lt  // lt = tstop
   34690:	add	x2, x2, w1, sxtw #3
   34694:	sbfiz	x1, x1, #6, #32
   34698:	ldr	x28, [x4, x2]
   3469c:	clz	x28, x28
   346a0:	sub	x28, x1, x28
   346a4:	sub	x28, x28, x19
   346a8:	cmp	x28, #0x0
   346ac:	b.gt	347cc <mpfr_cbrt@@Base+0x320>
   346b0:	cmp	w0, #0x0
   346b4:	cset	w19, eq  // eq = none
   346b8:	cbz	w19, 34704 <mpfr_cbrt@@Base+0x258>
   346bc:	tbz	w25, #31, 346d4 <mpfr_cbrt@@Base+0x228>
   346c0:	cmp	w22, #0x2
   346c4:	b.eq	34808 <mpfr_cbrt@@Base+0x35c>  // b.none
   346c8:	cmp	w22, #0x3
   346cc:	mov	w0, #0x2                   	// #2
   346d0:	csel	w22, w22, w0, ne  // ne = any
   346d4:	cmp	w22, #0x2
   346d8:	ccmp	w22, #0x4, #0x4, ne  // ne = any
   346dc:	b.eq	346f4 <mpfr_cbrt@@Base+0x248>  // b.none
   346e0:	cbnz	w22, 34810 <mpfr_cbrt@@Base+0x364>
   346e4:	mov	x0, x26
   346e8:	mov	x1, #0x0                   	// #0
   346ec:	bl	c060 <__gmpz_tstbit@plt>
   346f0:	cbz	w0, 34810 <mpfr_cbrt@@Base+0x364>
   346f4:	mov	x1, x26
   346f8:	mov	x0, x26
   346fc:	mov	x2, #0x1                   	// #1
   34700:	bl	c3f0 <__gmpz_add_ui@plt>
   34704:	mov	x1, x26
   34708:	mov	x0, x20
   3470c:	mov	w2, #0x0                   	// #0
   34710:	bl	c2d0 <mpfr_set_z@plt>
   34714:	add	w19, w19, w0
   34718:	mov	x0, #0x3                   	// #3
   3471c:	sdiv	x21, x21, x0
   34720:	ldr	x0, [x20, #16]
   34724:	add	x21, x0, x21
   34728:	str	x21, [x20, #16]
   3472c:	tbz	w25, #31, 34740 <mpfr_cbrt@@Base+0x294>
   34730:	ldr	w0, [x20, #8]
   34734:	neg	w19, w19
   34738:	neg	w0, w0
   3473c:	str	w0, [x20, #8]
   34740:	mov	x0, x26
   34744:	bl	c200 <mpfr_mpz_clear@plt>
   34748:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3474c:	ldr	x1, [x0, #2592]
   34750:	add	x0, x0, #0xa20
   34754:	blr	x1
   34758:	add	x1, x23, x0
   3475c:	str	w24, [x23, x0]
   34760:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   34764:	ldr	x2, [x0, #2528]
   34768:	add	x0, x0, #0x9e0
   3476c:	blr	x2
   34770:	str	x27, [x23, x0]
   34774:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   34778:	ldr	x2, [x0, #2560]
   3477c:	add	x0, x0, #0xa00
   34780:	blr	x2
   34784:	ldr	x2, [sp, #96]
   34788:	str	x2, [x23, x0]
   3478c:	ldr	x0, [x20, #16]
   34790:	cmp	x27, x0
   34794:	b.gt	34818 <mpfr_cbrt@@Base+0x36c>
   34798:	cmp	x2, x0
   3479c:	b.lt	34818 <mpfr_cbrt@@Base+0x36c>  // b.tstop
   347a0:	cbz	w19, 3451c <mpfr_cbrt@@Base+0x70>
   347a4:	orr	w24, w24, #0x8
   347a8:	str	w24, [x1]
   347ac:	b	3451c <mpfr_cbrt@@Base+0x70>
   347b0:	cbz	x28, 3466c <mpfr_cbrt@@Base+0x1c0>
   347b4:	mov	x2, x28
   347b8:	mov	x1, x26
   347bc:	mov	x0, x26
   347c0:	sub	x21, x21, x28
   347c4:	bl	c290 <__gmpz_mul_2exp@plt>
   347c8:	b	3466c <mpfr_cbrt@@Base+0x1c0>
   347cc:	cbz	w0, 34800 <mpfr_cbrt@@Base+0x354>
   347d0:	mov	x0, x26
   347d4:	mov	x1, #0x0                   	// #0
   347d8:	bl	bb10 <__gmpz_scan1@plt>
   347dc:	cmp	x0, x28
   347e0:	cset	w19, lt  // lt = tstop
   347e4:	mov	x2, x28
   347e8:	add	x28, x28, x28, lsl #1
   347ec:	mov	x1, x26
   347f0:	mov	x0, x26
   347f4:	add	x21, x21, x28
   347f8:	bl	c1c0 <__gmpz_fdiv_q_2exp@plt>
   347fc:	b	346b8 <mpfr_cbrt@@Base+0x20c>
   34800:	mov	w19, #0x1                   	// #1
   34804:	b	347e4 <mpfr_cbrt@@Base+0x338>
   34808:	mov	w22, #0x3                   	// #3
   3480c:	b	346d4 <mpfr_cbrt@@Base+0x228>
   34810:	mov	w19, #0xffffffff            	// #-1
   34814:	b	34704 <mpfr_cbrt@@Base+0x258>
   34818:	mov	w1, w19
   3481c:	mov	w2, w22
   34820:	mov	x0, x20
   34824:	bl	cbc0 <mpfr_check_range@plt>
   34828:	mov	w19, w0
   3482c:	b	3451c <mpfr_cbrt@@Base+0x70>

0000000000034830 <mpfr_fits_sshort_p@@Base>:
   34830:	stp	x29, x30, [sp, #-112]!
   34834:	mov	x29, sp
   34838:	stp	x19, x20, [sp, #16]
   3483c:	mov	x20, x0
   34840:	ldr	x0, [x0, #16]
   34844:	stp	x21, x22, [sp, #32]
   34848:	mov	w22, w1
   3484c:	stp	x23, x24, [sp, #48]
   34850:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   34854:	cmp	x0, x1
   34858:	str	x25, [sp, #64]
   3485c:	b.gt	34888 <mpfr_fits_sshort_p@@Base+0x58>
   34860:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   34864:	cmp	x0, x1
   34868:	cset	w19, eq  // eq = none
   3486c:	mov	w0, w19
   34870:	ldp	x19, x20, [sp, #16]
   34874:	ldp	x21, x22, [sp, #32]
   34878:	ldp	x23, x24, [sp, #48]
   3487c:	ldr	x25, [sp, #64]
   34880:	ldp	x29, x30, [sp], #112
   34884:	ret
   34888:	cmp	x0, #0x0
   3488c:	b.le	34948 <mpfr_fits_sshort_p@@Base+0x118>
   34890:	ldr	w24, [x20, #8]
   34894:	lsr	w3, w24, #31
   34898:	add	w3, w3, #0xf
   3489c:	sub	w1, w3, #0x1
   348a0:	cmp	x0, w1, sxtw
   348a4:	b.le	34948 <mpfr_fits_sshort_p@@Base+0x118>
   348a8:	add	w1, w3, #0x1
   348ac:	cmp	x0, w1, sxtw
   348b0:	b.ge	34950 <mpfr_fits_sshort_p@@Base+0x120>  // b.tcont
   348b4:	mrs	x23, tpidr_el0
   348b8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   348bc:	ldr	x1, [x0, #2592]
   348c0:	add	x0, x0, #0xa20
   348c4:	blr	x1
   348c8:	sxtw	x19, w3
   348cc:	add	x21, sp, #0x50
   348d0:	mov	x1, x19
   348d4:	ldr	w25, [x23, x0]
   348d8:	mov	x0, x21
   348dc:	bl	cb10 <mpfr_init2@plt>
   348e0:	ldr	w3, [x20, #8]
   348e4:	cmp	w22, #0x5
   348e8:	mov	w2, #0x4                   	// #4
   348ec:	mov	x1, x20
   348f0:	csel	w2, w22, w2, ne  // ne = any
   348f4:	mov	x0, x21
   348f8:	bl	c730 <mpfr_set4@plt>
   348fc:	tbz	w24, #31, 34938 <mpfr_fits_sshort_p@@Base+0x108>
   34900:	mov	x0, x21
   34904:	mov	x2, #0x0                   	// #0
   34908:	mov	x1, #0xffffffffffff8000    	// #-32768
   3490c:	bl	c460 <mpfr_cmp_si_2exp@plt>
   34910:	mvn	w19, w0
   34914:	lsr	w19, w19, #31
   34918:	mov	x0, x21
   3491c:	bl	c0f0 <mpfr_clear@plt>
   34920:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   34924:	ldr	x1, [x0, #2592]
   34928:	add	x0, x0, #0xa20
   3492c:	blr	x1
   34930:	str	w25, [x23, x0]
   34934:	b	3486c <mpfr_fits_sshort_p@@Base+0x3c>
   34938:	ldr	x0, [sp, #96]
   3493c:	cmp	x0, x19
   34940:	cset	w19, eq  // eq = none
   34944:	b	34918 <mpfr_fits_sshort_p@@Base+0xe8>
   34948:	mov	w19, #0x1                   	// #1
   3494c:	b	3486c <mpfr_fits_sshort_p@@Base+0x3c>
   34950:	mov	w19, #0x0                   	// #0
   34954:	b	3486c <mpfr_fits_sshort_p@@Base+0x3c>

0000000000034958 <mpfr_fits_sint_p@@Base>:
   34958:	stp	x29, x30, [sp, #-112]!
   3495c:	mov	x29, sp
   34960:	stp	x19, x20, [sp, #16]
   34964:	mov	x20, x0
   34968:	ldr	x0, [x0, #16]
   3496c:	stp	x21, x22, [sp, #32]
   34970:	mov	w22, w1
   34974:	stp	x23, x24, [sp, #48]
   34978:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   3497c:	cmp	x0, x1
   34980:	str	x25, [sp, #64]
   34984:	b.gt	349b0 <mpfr_fits_sint_p@@Base+0x58>
   34988:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   3498c:	cmp	x0, x1
   34990:	cset	w19, eq  // eq = none
   34994:	mov	w0, w19
   34998:	ldp	x19, x20, [sp, #16]
   3499c:	ldp	x21, x22, [sp, #32]
   349a0:	ldp	x23, x24, [sp, #48]
   349a4:	ldr	x25, [sp, #64]
   349a8:	ldp	x29, x30, [sp], #112
   349ac:	ret
   349b0:	cmp	x0, #0x0
   349b4:	b.le	34a70 <mpfr_fits_sint_p@@Base+0x118>
   349b8:	ldr	w24, [x20, #8]
   349bc:	lsr	w3, w24, #31
   349c0:	add	w3, w3, #0x1f
   349c4:	sub	w1, w3, #0x1
   349c8:	cmp	x0, w1, sxtw
   349cc:	b.le	34a70 <mpfr_fits_sint_p@@Base+0x118>
   349d0:	add	w1, w3, #0x1
   349d4:	cmp	x0, w1, sxtw
   349d8:	b.ge	34a78 <mpfr_fits_sint_p@@Base+0x120>  // b.tcont
   349dc:	mrs	x23, tpidr_el0
   349e0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   349e4:	ldr	x1, [x0, #2592]
   349e8:	add	x0, x0, #0xa20
   349ec:	blr	x1
   349f0:	sxtw	x19, w3
   349f4:	add	x21, sp, #0x50
   349f8:	mov	x1, x19
   349fc:	ldr	w25, [x23, x0]
   34a00:	mov	x0, x21
   34a04:	bl	cb10 <mpfr_init2@plt>
   34a08:	ldr	w3, [x20, #8]
   34a0c:	cmp	w22, #0x5
   34a10:	mov	w2, #0x4                   	// #4
   34a14:	mov	x1, x20
   34a18:	csel	w2, w22, w2, ne  // ne = any
   34a1c:	mov	x0, x21
   34a20:	bl	c730 <mpfr_set4@plt>
   34a24:	tbz	w24, #31, 34a60 <mpfr_fits_sint_p@@Base+0x108>
   34a28:	mov	x0, x21
   34a2c:	mov	x2, #0x0                   	// #0
   34a30:	mov	x1, #0xffffffff80000000    	// #-2147483648
   34a34:	bl	c460 <mpfr_cmp_si_2exp@plt>
   34a38:	mvn	w19, w0
   34a3c:	lsr	w19, w19, #31
   34a40:	mov	x0, x21
   34a44:	bl	c0f0 <mpfr_clear@plt>
   34a48:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   34a4c:	ldr	x1, [x0, #2592]
   34a50:	add	x0, x0, #0xa20
   34a54:	blr	x1
   34a58:	str	w25, [x23, x0]
   34a5c:	b	34994 <mpfr_fits_sint_p@@Base+0x3c>
   34a60:	ldr	x0, [sp, #96]
   34a64:	cmp	x0, x19
   34a68:	cset	w19, eq  // eq = none
   34a6c:	b	34a40 <mpfr_fits_sint_p@@Base+0xe8>
   34a70:	mov	w19, #0x1                   	// #1
   34a74:	b	34994 <mpfr_fits_sint_p@@Base+0x3c>
   34a78:	mov	w19, #0x0                   	// #0
   34a7c:	b	34994 <mpfr_fits_sint_p@@Base+0x3c>

0000000000034a80 <mpfr_fits_slong_p@@Base>:
   34a80:	stp	x29, x30, [sp, #-112]!
   34a84:	mov	x29, sp
   34a88:	stp	x19, x20, [sp, #16]
   34a8c:	mov	x20, x0
   34a90:	ldr	x0, [x0, #16]
   34a94:	stp	x21, x22, [sp, #32]
   34a98:	mov	w22, w1
   34a9c:	stp	x23, x24, [sp, #48]
   34aa0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   34aa4:	cmp	x0, x1
   34aa8:	str	x25, [sp, #64]
   34aac:	b.gt	34ad8 <mpfr_fits_slong_p@@Base+0x58>
   34ab0:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   34ab4:	cmp	x0, x1
   34ab8:	cset	w19, eq  // eq = none
   34abc:	mov	w0, w19
   34ac0:	ldp	x19, x20, [sp, #16]
   34ac4:	ldp	x21, x22, [sp, #32]
   34ac8:	ldp	x23, x24, [sp, #48]
   34acc:	ldr	x25, [sp, #64]
   34ad0:	ldp	x29, x30, [sp], #112
   34ad4:	ret
   34ad8:	cmp	x0, #0x0
   34adc:	b.le	34b98 <mpfr_fits_slong_p@@Base+0x118>
   34ae0:	ldr	w24, [x20, #8]
   34ae4:	lsr	w3, w24, #31
   34ae8:	add	w3, w3, #0x3f
   34aec:	sub	w1, w3, #0x1
   34af0:	cmp	x0, w1, sxtw
   34af4:	b.le	34b98 <mpfr_fits_slong_p@@Base+0x118>
   34af8:	add	w1, w3, #0x1
   34afc:	cmp	x0, w1, sxtw
   34b00:	b.ge	34ba0 <mpfr_fits_slong_p@@Base+0x120>  // b.tcont
   34b04:	mrs	x23, tpidr_el0
   34b08:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   34b0c:	ldr	x1, [x0, #2592]
   34b10:	add	x0, x0, #0xa20
   34b14:	blr	x1
   34b18:	sxtw	x19, w3
   34b1c:	add	x21, sp, #0x50
   34b20:	mov	x1, x19
   34b24:	ldr	w25, [x23, x0]
   34b28:	mov	x0, x21
   34b2c:	bl	cb10 <mpfr_init2@plt>
   34b30:	ldr	w3, [x20, #8]
   34b34:	cmp	w22, #0x5
   34b38:	mov	w2, #0x4                   	// #4
   34b3c:	mov	x1, x20
   34b40:	csel	w2, w22, w2, ne  // ne = any
   34b44:	mov	x0, x21
   34b48:	bl	c730 <mpfr_set4@plt>
   34b4c:	tbz	w24, #31, 34b88 <mpfr_fits_slong_p@@Base+0x108>
   34b50:	mov	x0, x21
   34b54:	mov	x2, #0x0                   	// #0
   34b58:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   34b5c:	bl	c460 <mpfr_cmp_si_2exp@plt>
   34b60:	mvn	w19, w0
   34b64:	lsr	w19, w19, #31
   34b68:	mov	x0, x21
   34b6c:	bl	c0f0 <mpfr_clear@plt>
   34b70:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   34b74:	ldr	x1, [x0, #2592]
   34b78:	add	x0, x0, #0xa20
   34b7c:	blr	x1
   34b80:	str	w25, [x23, x0]
   34b84:	b	34abc <mpfr_fits_slong_p@@Base+0x3c>
   34b88:	ldr	x0, [sp, #96]
   34b8c:	cmp	x0, x19
   34b90:	cset	w19, eq  // eq = none
   34b94:	b	34b68 <mpfr_fits_slong_p@@Base+0xe8>
   34b98:	mov	w19, #0x1                   	// #1
   34b9c:	b	34abc <mpfr_fits_slong_p@@Base+0x3c>
   34ba0:	mov	w19, #0x0                   	// #0
   34ba4:	b	34abc <mpfr_fits_slong_p@@Base+0x3c>

0000000000034ba8 <mpfr_fits_ushort_p@@Base>:
   34ba8:	stp	x29, x30, [sp, #-96]!
   34bac:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   34bb0:	mov	x29, sp
   34bb4:	stp	x19, x20, [sp, #16]
   34bb8:	mov	w19, w1
   34bbc:	ldr	x1, [x0, #16]
   34bc0:	stp	x21, x22, [sp, #32]
   34bc4:	str	x23, [sp, #48]
   34bc8:	cmp	x1, x2
   34bcc:	b.gt	34bf4 <mpfr_fits_ushort_p@@Base+0x4c>
   34bd0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   34bd4:	cmp	x1, x0
   34bd8:	cset	w19, eq  // eq = none
   34bdc:	mov	w0, w19
   34be0:	ldp	x19, x20, [sp, #16]
   34be4:	ldp	x21, x22, [sp, #32]
   34be8:	ldr	x23, [sp, #48]
   34bec:	ldp	x29, x30, [sp], #96
   34bf0:	ret
   34bf4:	ldr	w2, [x0, #8]
   34bf8:	mov	x20, x0
   34bfc:	tbz	w2, #31, 34c2c <mpfr_fits_ushort_p@@Base+0x84>
   34c00:	cmp	x1, #0x0
   34c04:	b.gt	34cb0 <mpfr_fits_ushort_p@@Base+0x108>
   34c08:	cbz	w19, 34c1c <mpfr_fits_ushort_p@@Base+0x74>
   34c0c:	sub	w19, w19, #0x1
   34c10:	cmp	w19, #0x1
   34c14:	cset	w19, ls  // ls = plast
   34c18:	b	34bdc <mpfr_fits_ushort_p@@Base+0x34>
   34c1c:	cbnz	x1, 34ca8 <mpfr_fits_ushort_p@@Base+0x100>
   34c20:	bl	bf80 <mpfr_powerof2_raw@plt>
   34c24:	mov	w19, w0
   34c28:	b	34bdc <mpfr_fits_ushort_p@@Base+0x34>
   34c2c:	cmp	x1, #0xf
   34c30:	b.le	34ca8 <mpfr_fits_ushort_p@@Base+0x100>
   34c34:	cmp	x1, #0x10
   34c38:	b.ne	34cb0 <mpfr_fits_ushort_p@@Base+0x108>  // b.any
   34c3c:	mrs	x22, tpidr_el0
   34c40:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   34c44:	ldr	x2, [x0, #2592]
   34c48:	add	x0, x0, #0xa20
   34c4c:	blr	x2
   34c50:	add	x21, sp, #0x40
   34c54:	ldr	w23, [x22, x0]
   34c58:	mov	x0, x21
   34c5c:	bl	cb10 <mpfr_init2@plt>
   34c60:	ldr	w3, [x20, #8]
   34c64:	cmp	w19, #0x5
   34c68:	mov	x1, x20
   34c6c:	mov	x0, x21
   34c70:	mov	w2, #0x2                   	// #2
   34c74:	csel	w2, w19, w2, ne  // ne = any
   34c78:	bl	c730 <mpfr_set4@plt>
   34c7c:	ldr	x0, [sp, #80]
   34c80:	cmp	x0, #0x10
   34c84:	mov	x0, x21
   34c88:	cset	w19, eq  // eq = none
   34c8c:	bl	c0f0 <mpfr_clear@plt>
   34c90:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   34c94:	ldr	x1, [x0, #2592]
   34c98:	add	x0, x0, #0xa20
   34c9c:	blr	x1
   34ca0:	str	w23, [x22, x0]
   34ca4:	b	34bdc <mpfr_fits_ushort_p@@Base+0x34>
   34ca8:	mov	w19, #0x1                   	// #1
   34cac:	b	34bdc <mpfr_fits_ushort_p@@Base+0x34>
   34cb0:	mov	w19, #0x0                   	// #0
   34cb4:	b	34bdc <mpfr_fits_ushort_p@@Base+0x34>

0000000000034cb8 <mpfr_fits_uint_p@@Base>:
   34cb8:	stp	x29, x30, [sp, #-96]!
   34cbc:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   34cc0:	mov	x29, sp
   34cc4:	stp	x19, x20, [sp, #16]
   34cc8:	mov	w19, w1
   34ccc:	ldr	x1, [x0, #16]
   34cd0:	stp	x21, x22, [sp, #32]
   34cd4:	str	x23, [sp, #48]
   34cd8:	cmp	x1, x2
   34cdc:	b.gt	34d04 <mpfr_fits_uint_p@@Base+0x4c>
   34ce0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   34ce4:	cmp	x1, x0
   34ce8:	cset	w19, eq  // eq = none
   34cec:	mov	w0, w19
   34cf0:	ldp	x19, x20, [sp, #16]
   34cf4:	ldp	x21, x22, [sp, #32]
   34cf8:	ldr	x23, [sp, #48]
   34cfc:	ldp	x29, x30, [sp], #96
   34d00:	ret
   34d04:	ldr	w2, [x0, #8]
   34d08:	mov	x20, x0
   34d0c:	tbz	w2, #31, 34d3c <mpfr_fits_uint_p@@Base+0x84>
   34d10:	cmp	x1, #0x0
   34d14:	b.gt	34dc0 <mpfr_fits_uint_p@@Base+0x108>
   34d18:	cbz	w19, 34d2c <mpfr_fits_uint_p@@Base+0x74>
   34d1c:	sub	w19, w19, #0x1
   34d20:	cmp	w19, #0x1
   34d24:	cset	w19, ls  // ls = plast
   34d28:	b	34cec <mpfr_fits_uint_p@@Base+0x34>
   34d2c:	cbnz	x1, 34db8 <mpfr_fits_uint_p@@Base+0x100>
   34d30:	bl	bf80 <mpfr_powerof2_raw@plt>
   34d34:	mov	w19, w0
   34d38:	b	34cec <mpfr_fits_uint_p@@Base+0x34>
   34d3c:	cmp	x1, #0x1f
   34d40:	b.le	34db8 <mpfr_fits_uint_p@@Base+0x100>
   34d44:	cmp	x1, #0x20
   34d48:	b.ne	34dc0 <mpfr_fits_uint_p@@Base+0x108>  // b.any
   34d4c:	mrs	x22, tpidr_el0
   34d50:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   34d54:	ldr	x2, [x0, #2592]
   34d58:	add	x0, x0, #0xa20
   34d5c:	blr	x2
   34d60:	add	x21, sp, #0x40
   34d64:	ldr	w23, [x22, x0]
   34d68:	mov	x0, x21
   34d6c:	bl	cb10 <mpfr_init2@plt>
   34d70:	ldr	w3, [x20, #8]
   34d74:	cmp	w19, #0x5
   34d78:	mov	x1, x20
   34d7c:	mov	x0, x21
   34d80:	mov	w2, #0x2                   	// #2
   34d84:	csel	w2, w19, w2, ne  // ne = any
   34d88:	bl	c730 <mpfr_set4@plt>
   34d8c:	ldr	x0, [sp, #80]
   34d90:	cmp	x0, #0x20
   34d94:	mov	x0, x21
   34d98:	cset	w19, eq  // eq = none
   34d9c:	bl	c0f0 <mpfr_clear@plt>
   34da0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   34da4:	ldr	x1, [x0, #2592]
   34da8:	add	x0, x0, #0xa20
   34dac:	blr	x1
   34db0:	str	w23, [x22, x0]
   34db4:	b	34cec <mpfr_fits_uint_p@@Base+0x34>
   34db8:	mov	w19, #0x1                   	// #1
   34dbc:	b	34cec <mpfr_fits_uint_p@@Base+0x34>
   34dc0:	mov	w19, #0x0                   	// #0
   34dc4:	b	34cec <mpfr_fits_uint_p@@Base+0x34>

0000000000034dc8 <mpfr_fits_ulong_p@@Base>:
   34dc8:	stp	x29, x30, [sp, #-96]!
   34dcc:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   34dd0:	mov	x29, sp
   34dd4:	stp	x19, x20, [sp, #16]
   34dd8:	mov	w19, w1
   34ddc:	ldr	x1, [x0, #16]
   34de0:	stp	x21, x22, [sp, #32]
   34de4:	str	x23, [sp, #48]
   34de8:	cmp	x1, x2
   34dec:	b.gt	34e14 <mpfr_fits_ulong_p@@Base+0x4c>
   34df0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   34df4:	cmp	x1, x0
   34df8:	cset	w19, eq  // eq = none
   34dfc:	mov	w0, w19
   34e00:	ldp	x19, x20, [sp, #16]
   34e04:	ldp	x21, x22, [sp, #32]
   34e08:	ldr	x23, [sp, #48]
   34e0c:	ldp	x29, x30, [sp], #96
   34e10:	ret
   34e14:	ldr	w2, [x0, #8]
   34e18:	mov	x20, x0
   34e1c:	tbz	w2, #31, 34e4c <mpfr_fits_ulong_p@@Base+0x84>
   34e20:	cmp	x1, #0x0
   34e24:	b.gt	34ed0 <mpfr_fits_ulong_p@@Base+0x108>
   34e28:	cbz	w19, 34e3c <mpfr_fits_ulong_p@@Base+0x74>
   34e2c:	sub	w19, w19, #0x1
   34e30:	cmp	w19, #0x1
   34e34:	cset	w19, ls  // ls = plast
   34e38:	b	34dfc <mpfr_fits_ulong_p@@Base+0x34>
   34e3c:	cbnz	x1, 34ec8 <mpfr_fits_ulong_p@@Base+0x100>
   34e40:	bl	bf80 <mpfr_powerof2_raw@plt>
   34e44:	mov	w19, w0
   34e48:	b	34dfc <mpfr_fits_ulong_p@@Base+0x34>
   34e4c:	cmp	x1, #0x3f
   34e50:	b.le	34ec8 <mpfr_fits_ulong_p@@Base+0x100>
   34e54:	cmp	x1, #0x40
   34e58:	b.ne	34ed0 <mpfr_fits_ulong_p@@Base+0x108>  // b.any
   34e5c:	mrs	x22, tpidr_el0
   34e60:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   34e64:	ldr	x2, [x0, #2592]
   34e68:	add	x0, x0, #0xa20
   34e6c:	blr	x2
   34e70:	add	x21, sp, #0x40
   34e74:	ldr	w23, [x22, x0]
   34e78:	mov	x0, x21
   34e7c:	bl	cb10 <mpfr_init2@plt>
   34e80:	ldr	w3, [x20, #8]
   34e84:	cmp	w19, #0x5
   34e88:	mov	x1, x20
   34e8c:	mov	x0, x21
   34e90:	mov	w2, #0x2                   	// #2
   34e94:	csel	w2, w19, w2, ne  // ne = any
   34e98:	bl	c730 <mpfr_set4@plt>
   34e9c:	ldr	x0, [sp, #80]
   34ea0:	cmp	x0, #0x40
   34ea4:	mov	x0, x21
   34ea8:	cset	w19, eq  // eq = none
   34eac:	bl	c0f0 <mpfr_clear@plt>
   34eb0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   34eb4:	ldr	x1, [x0, #2592]
   34eb8:	add	x0, x0, #0xa20
   34ebc:	blr	x1
   34ec0:	str	w23, [x22, x0]
   34ec4:	b	34dfc <mpfr_fits_ulong_p@@Base+0x34>
   34ec8:	mov	w19, #0x1                   	// #1
   34ecc:	b	34dfc <mpfr_fits_ulong_p@@Base+0x34>
   34ed0:	mov	w19, #0x0                   	// #0
   34ed4:	b	34dfc <mpfr_fits_ulong_p@@Base+0x34>

0000000000034ed8 <mpfr_fits_uintmax_p@@Base>:
   34ed8:	stp	x29, x30, [sp, #-96]!
   34edc:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   34ee0:	mov	x29, sp
   34ee4:	stp	x19, x20, [sp, #16]
   34ee8:	mov	w19, w1
   34eec:	ldr	x1, [x0, #16]
   34ef0:	stp	x21, x22, [sp, #32]
   34ef4:	str	x23, [sp, #48]
   34ef8:	cmp	x1, x2
   34efc:	b.gt	34f24 <mpfr_fits_uintmax_p@@Base+0x4c>
   34f00:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   34f04:	cmp	x1, x0
   34f08:	cset	w19, eq  // eq = none
   34f0c:	mov	w0, w19
   34f10:	ldp	x19, x20, [sp, #16]
   34f14:	ldp	x21, x22, [sp, #32]
   34f18:	ldr	x23, [sp, #48]
   34f1c:	ldp	x29, x30, [sp], #96
   34f20:	ret
   34f24:	ldr	w2, [x0, #8]
   34f28:	mov	x20, x0
   34f2c:	tbz	w2, #31, 34f5c <mpfr_fits_uintmax_p@@Base+0x84>
   34f30:	cmp	x1, #0x0
   34f34:	b.gt	34fe0 <mpfr_fits_uintmax_p@@Base+0x108>
   34f38:	cbz	w19, 34f4c <mpfr_fits_uintmax_p@@Base+0x74>
   34f3c:	sub	w19, w19, #0x1
   34f40:	cmp	w19, #0x1
   34f44:	cset	w19, ls  // ls = plast
   34f48:	b	34f0c <mpfr_fits_uintmax_p@@Base+0x34>
   34f4c:	cbnz	x1, 34fd8 <mpfr_fits_uintmax_p@@Base+0x100>
   34f50:	bl	bf80 <mpfr_powerof2_raw@plt>
   34f54:	mov	w19, w0
   34f58:	b	34f0c <mpfr_fits_uintmax_p@@Base+0x34>
   34f5c:	cmp	x1, #0x3f
   34f60:	b.le	34fd8 <mpfr_fits_uintmax_p@@Base+0x100>
   34f64:	cmp	x1, #0x40
   34f68:	b.ne	34fe0 <mpfr_fits_uintmax_p@@Base+0x108>  // b.any
   34f6c:	mrs	x22, tpidr_el0
   34f70:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   34f74:	ldr	x2, [x0, #2592]
   34f78:	add	x0, x0, #0xa20
   34f7c:	blr	x2
   34f80:	add	x21, sp, #0x40
   34f84:	ldr	w23, [x22, x0]
   34f88:	mov	x0, x21
   34f8c:	bl	cb10 <mpfr_init2@plt>
   34f90:	ldr	w3, [x20, #8]
   34f94:	cmp	w19, #0x5
   34f98:	mov	x1, x20
   34f9c:	mov	x0, x21
   34fa0:	mov	w2, #0x2                   	// #2
   34fa4:	csel	w2, w19, w2, ne  // ne = any
   34fa8:	bl	c730 <mpfr_set4@plt>
   34fac:	ldr	x0, [sp, #80]
   34fb0:	cmp	x0, #0x40
   34fb4:	mov	x0, x21
   34fb8:	cset	w19, eq  // eq = none
   34fbc:	bl	c0f0 <mpfr_clear@plt>
   34fc0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   34fc4:	ldr	x1, [x0, #2592]
   34fc8:	add	x0, x0, #0xa20
   34fcc:	blr	x1
   34fd0:	str	w23, [x22, x0]
   34fd4:	b	34f0c <mpfr_fits_uintmax_p@@Base+0x34>
   34fd8:	mov	w19, #0x1                   	// #1
   34fdc:	b	34f0c <mpfr_fits_uintmax_p@@Base+0x34>
   34fe0:	mov	w19, #0x0                   	// #0
   34fe4:	b	34f0c <mpfr_fits_uintmax_p@@Base+0x34>

0000000000034fe8 <mpfr_fits_intmax_p@@Base>:
   34fe8:	stp	x29, x30, [sp, #-144]!
   34fec:	mov	x29, sp
   34ff0:	stp	x19, x20, [sp, #16]
   34ff4:	mov	x20, x0
   34ff8:	ldr	x0, [x0, #16]
   34ffc:	stp	x21, x22, [sp, #32]
   35000:	stp	x23, x24, [sp, #48]
   35004:	mov	w24, w1
   35008:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   3500c:	str	x25, [sp, #64]
   35010:	cmp	x0, x1
   35014:	b.gt	35040 <mpfr_fits_intmax_p@@Base+0x58>
   35018:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   3501c:	cmp	x0, x1
   35020:	cset	w19, eq  // eq = none
   35024:	mov	w0, w19
   35028:	ldp	x19, x20, [sp, #16]
   3502c:	ldp	x21, x22, [sp, #32]
   35030:	ldp	x23, x24, [sp, #48]
   35034:	ldr	x25, [sp, #64]
   35038:	ldp	x29, x30, [sp], #144
   3503c:	ret
   35040:	cmp	x0, #0x0
   35044:	b.le	35128 <mpfr_fits_intmax_p@@Base+0x140>
   35048:	ldr	w25, [x20, #8]
   3504c:	lsr	w3, w25, #31
   35050:	add	w3, w3, #0x3f
   35054:	sub	w1, w3, #0x1
   35058:	cmp	x0, w1, sxtw
   3505c:	b.le	35128 <mpfr_fits_intmax_p@@Base+0x140>
   35060:	add	w1, w3, #0x1
   35064:	cmp	x0, w1, sxtw
   35068:	b.ge	35130 <mpfr_fits_intmax_p@@Base+0x148>  // b.tcont
   3506c:	mrs	x22, tpidr_el0
   35070:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   35074:	ldr	x1, [x0, #2592]
   35078:	add	x0, x0, #0xa20
   3507c:	blr	x1
   35080:	sxtw	x19, w3
   35084:	add	x21, sp, #0x50
   35088:	mov	x1, x19
   3508c:	ldr	w23, [x22, x0]
   35090:	mov	x0, x21
   35094:	bl	cb10 <mpfr_init2@plt>
   35098:	ldr	w3, [x20, #8]
   3509c:	cmp	w24, #0x5
   350a0:	mov	w2, #0x4                   	// #4
   350a4:	mov	x1, x20
   350a8:	csel	w2, w24, w2, ne  // ne = any
   350ac:	mov	x0, x21
   350b0:	bl	c730 <mpfr_set4@plt>
   350b4:	tbz	w25, #31, 35118 <mpfr_fits_intmax_p@@Base+0x130>
   350b8:	add	x20, sp, #0x70
   350bc:	mov	x1, x19
   350c0:	mov	x0, x20
   350c4:	bl	cb10 <mpfr_init2@plt>
   350c8:	mov	w2, #0x0                   	// #0
   350cc:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   350d0:	mov	x0, x20
   350d4:	bl	c100 <__gmpfr_set_sj@plt>
   350d8:	mov	x1, x20
   350dc:	mov	x0, x21
   350e0:	mov	w2, #0x1                   	// #1
   350e4:	bl	ca30 <mpfr_cmp3@plt>
   350e8:	mvn	w19, w0
   350ec:	mov	x0, x20
   350f0:	lsr	w19, w19, #31
   350f4:	bl	c0f0 <mpfr_clear@plt>
   350f8:	mov	x0, x21
   350fc:	bl	c0f0 <mpfr_clear@plt>
   35100:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   35104:	ldr	x1, [x0, #2592]
   35108:	add	x0, x0, #0xa20
   3510c:	blr	x1
   35110:	str	w23, [x22, x0]
   35114:	b	35024 <mpfr_fits_intmax_p@@Base+0x3c>
   35118:	ldr	x0, [sp, #96]
   3511c:	cmp	x0, x19
   35120:	cset	w19, eq  // eq = none
   35124:	b	350f8 <mpfr_fits_intmax_p@@Base+0x110>
   35128:	mov	w19, #0x1                   	// #1
   3512c:	b	35024 <mpfr_fits_intmax_p@@Base+0x3c>
   35130:	mov	w19, #0x0                   	// #0
   35134:	b	35024 <mpfr_fits_intmax_p@@Base+0x3c>

0000000000035138 <mpfr_get_si@@Base>:
   35138:	stp	x29, x30, [sp, #-128]!
   3513c:	mov	x29, sp
   35140:	stp	x21, x22, [sp, #32]
   35144:	mov	x21, x0
   35148:	stp	x19, x20, [sp, #16]
   3514c:	stp	x23, x24, [sp, #48]
   35150:	mov	w24, w1
   35154:	stp	x25, x26, [sp, #64]
   35158:	str	x27, [sp, #80]
   3515c:	bl	c820 <mpfr_fits_slong_p@plt>
   35160:	ldr	x2, [x21, #16]
   35164:	cbnz	w0, 351d4 <mpfr_get_si@@Base+0x9c>
   35168:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3516c:	ldr	x1, [x0, #2592]
   35170:	add	x0, x0, #0xa20
   35174:	blr	x1
   35178:	mrs	x1, tpidr_el0
   3517c:	add	x0, x1, x0
   35180:	ldr	w1, [x0]
   35184:	orr	w1, w1, #0x10
   35188:	str	w1, [x0]
   3518c:	mov	x0, #0x2                   	// #2
   35190:	movk	x0, #0x8000, lsl #48
   35194:	cmp	x2, x0
   35198:	b.ne	351c0 <mpfr_get_si@@Base+0x88>  // b.any
   3519c:	mov	x19, #0x0                   	// #0
   351a0:	mov	x0, x19
   351a4:	ldp	x19, x20, [sp, #16]
   351a8:	ldp	x21, x22, [sp, #32]
   351ac:	ldp	x23, x24, [sp, #48]
   351b0:	ldp	x25, x26, [sp, #64]
   351b4:	ldr	x27, [sp, #80]
   351b8:	ldp	x29, x30, [sp], #128
   351bc:	ret
   351c0:	ldr	w0, [x21, #8]
   351c4:	mov	x19, #0x7fffffffffffffff    	// #9223372036854775807
   351c8:	cmp	w0, #0x0
   351cc:	cinv	x19, x19, lt  // lt = tstop
   351d0:	b	351a0 <mpfr_get_si@@Base+0x68>
   351d4:	mov	x26, #0x8000000000000001    	// #-9223372036854775807
   351d8:	cmp	x2, x26
   351dc:	b.eq	3519c <mpfr_get_si@@Base+0x64>  // b.none
   351e0:	mrs	x20, tpidr_el0
   351e4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   351e8:	ldr	x1, [x0, #2592]
   351ec:	add	x0, x0, #0xa20
   351f0:	blr	x1
   351f4:	add	x27, x20, x0
   351f8:	add	x25, sp, #0x60
   351fc:	ldr	w19, [x20, x0]
   35200:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   35204:	ldr	x1, [x0, #2528]
   35208:	add	x0, x0, #0x9e0
   3520c:	blr	x1
   35210:	add	x1, x20, x0
   35214:	ldr	x23, [x20, x0]
   35218:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3521c:	ldr	x2, [x0, #2560]
   35220:	add	x0, x0, #0xa00
   35224:	blr	x2
   35228:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   3522c:	str	x2, [x1]
   35230:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   35234:	ldr	x22, [x20, x0]
   35238:	str	x1, [x20, x0]
   3523c:	mov	x0, x25
   35240:	mov	x1, #0x3f                  	// #63
   35244:	bl	cb10 <mpfr_init2@plt>
   35248:	mov	w2, w24
   3524c:	mov	x1, x21
   35250:	mov	x0, x25
   35254:	bl	c390 <mpfr_rint@plt>
   35258:	ldr	x1, [sp, #112]
   3525c:	ldr	w24, [x27]
   35260:	cmp	x1, x26
   35264:	orr	w24, w19, w24
   35268:	b.eq	352e8 <mpfr_get_si@@Base+0x1b0>  // b.none
   3526c:	ldr	x0, [sp, #96]
   35270:	neg	w1, w1
   35274:	ldr	x2, [sp, #120]
   35278:	sub	x0, x0, #0x1
   3527c:	asr	x0, x0, #6
   35280:	ldr	x19, [x2, x0, lsl #3]
   35284:	ldr	w0, [x21, #8]
   35288:	lsr	x19, x19, x1
   3528c:	cmp	w0, #0x0
   35290:	b.gt	352a0 <mpfr_get_si@@Base+0x168>
   35294:	cmp	x19, #0x0
   35298:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3529c:	csneg	x19, x0, x19, lt  // lt = tstop
   352a0:	mov	x0, x25
   352a4:	bl	c0f0 <mpfr_clear@plt>
   352a8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   352ac:	ldr	x1, [x0, #2592]
   352b0:	add	x0, x0, #0xa20
   352b4:	blr	x1
   352b8:	str	w24, [x20, x0]
   352bc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   352c0:	ldr	x1, [x0, #2528]
   352c4:	add	x0, x0, #0x9e0
   352c8:	blr	x1
   352cc:	str	x23, [x20, x0]
   352d0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   352d4:	ldr	x1, [x0, #2560]
   352d8:	add	x0, x0, #0xa00
   352dc:	blr	x1
   352e0:	str	x22, [x20, x0]
   352e4:	b	351a0 <mpfr_get_si@@Base+0x68>
   352e8:	mov	x19, #0x0                   	// #0
   352ec:	b	352a0 <mpfr_get_si@@Base+0x168>

00000000000352f0 <mpfr_get_ui@@Base>:
   352f0:	stp	x29, x30, [sp, #-128]!
   352f4:	mov	x29, sp
   352f8:	stp	x19, x20, [sp, #16]
   352fc:	mov	x20, x0
   35300:	stp	x21, x22, [sp, #32]
   35304:	stp	x23, x24, [sp, #48]
   35308:	stp	x25, x26, [sp, #64]
   3530c:	mov	w25, w1
   35310:	str	x27, [sp, #80]
   35314:	bl	bed0 <mpfr_fits_ulong_p@plt>
   35318:	ldr	x2, [x20, #16]
   3531c:	cbnz	w0, 3538c <mpfr_get_ui@@Base+0x9c>
   35320:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   35324:	ldr	x1, [x0, #2592]
   35328:	add	x0, x0, #0xa20
   3532c:	blr	x1
   35330:	mrs	x1, tpidr_el0
   35334:	add	x0, x1, x0
   35338:	ldr	w1, [x0]
   3533c:	orr	w1, w1, #0x10
   35340:	str	w1, [x0]
   35344:	mov	x0, #0x2                   	// #2
   35348:	movk	x0, #0x8000, lsl #48
   3534c:	cmp	x2, x0
   35350:	b.ne	35378 <mpfr_get_ui@@Base+0x88>  // b.any
   35354:	mov	x20, #0x0                   	// #0
   35358:	mov	x0, x20
   3535c:	ldp	x19, x20, [sp, #16]
   35360:	ldp	x21, x22, [sp, #32]
   35364:	ldp	x23, x24, [sp, #48]
   35368:	ldp	x25, x26, [sp, #64]
   3536c:	ldr	x27, [sp, #80]
   35370:	ldp	x29, x30, [sp], #128
   35374:	ret
   35378:	ldrsw	x20, [x20, #8]
   3537c:	mov	x0, #0x0                   	// #0
   35380:	cmp	x20, x0
   35384:	csetm	x20, ge  // ge = tcont
   35388:	b	35358 <mpfr_get_ui@@Base+0x68>
   3538c:	mov	x26, #0x8000000000000001    	// #-9223372036854775807
   35390:	cmp	x2, x26
   35394:	b.eq	35354 <mpfr_get_ui@@Base+0x64>  // b.none
   35398:	mrs	x19, tpidr_el0
   3539c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   353a0:	ldr	x1, [x0, #2592]
   353a4:	add	x0, x0, #0xa20
   353a8:	blr	x1
   353ac:	add	x27, x19, x0
   353b0:	add	x24, sp, #0x60
   353b4:	ldr	w23, [x19, x0]
   353b8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   353bc:	ldr	x1, [x0, #2528]
   353c0:	add	x0, x0, #0x9e0
   353c4:	blr	x1
   353c8:	add	x1, x19, x0
   353cc:	ldr	x22, [x19, x0]
   353d0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   353d4:	ldr	x2, [x0, #2560]
   353d8:	add	x0, x0, #0xa00
   353dc:	blr	x2
   353e0:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   353e4:	str	x2, [x1]
   353e8:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   353ec:	ldr	x21, [x19, x0]
   353f0:	str	x1, [x19, x0]
   353f4:	mov	x0, x24
   353f8:	mov	x1, #0x40                  	// #64
   353fc:	bl	cb10 <mpfr_init2@plt>
   35400:	mov	x1, x20
   35404:	mov	w2, w25
   35408:	mov	x0, x24
   3540c:	bl	c390 <mpfr_rint@plt>
   35410:	ldr	x1, [sp, #112]
   35414:	ldr	w0, [x27]
   35418:	cmp	x1, x26
   3541c:	orr	w23, w23, w0
   35420:	b.eq	35488 <mpfr_get_ui@@Base+0x198>  // b.none
   35424:	ldr	x0, [sp, #96]
   35428:	neg	w1, w1
   3542c:	ldr	x2, [sp, #120]
   35430:	sub	x0, x0, #0x1
   35434:	asr	x0, x0, #6
   35438:	ldr	x20, [x2, x0, lsl #3]
   3543c:	lsr	x20, x20, x1
   35440:	mov	x0, x24
   35444:	bl	c0f0 <mpfr_clear@plt>
   35448:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3544c:	ldr	x1, [x0, #2592]
   35450:	add	x0, x0, #0xa20
   35454:	blr	x1
   35458:	str	w23, [x19, x0]
   3545c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   35460:	ldr	x1, [x0, #2528]
   35464:	add	x0, x0, #0x9e0
   35468:	blr	x1
   3546c:	str	x22, [x19, x0]
   35470:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   35474:	ldr	x1, [x0, #2560]
   35478:	add	x0, x0, #0xa00
   3547c:	blr	x1
   35480:	str	x21, [x19, x0]
   35484:	b	35358 <mpfr_get_ui@@Base+0x68>
   35488:	mov	x20, #0x0                   	// #0
   3548c:	b	35440 <mpfr_get_ui@@Base+0x150>
   35490:	sub	sp, sp, #0x310
   35494:	stp	x29, x30, [sp]
   35498:	mov	x29, sp
   3549c:	stp	x23, x24, [sp, #48]
   354a0:	mov	x23, x1
   354a4:	str	w2, [sp, #232]
   354a8:	ldr	x2, [x0]
   354ac:	str	x2, [sp, #152]
   354b0:	ldr	x2, [x23]
   354b4:	stp	x19, x20, [sp, #16]
   354b8:	ldr	x1, [x1, #16]
   354bc:	stp	x21, x22, [sp, #32]
   354c0:	stp	x25, x26, [sp, #64]
   354c4:	cmp	x1, #0x3
   354c8:	stp	x27, x28, [sp, #80]
   354cc:	str	x2, [sp, #144]
   354d0:	str	x0, [sp, #192]
   354d4:	stp	d8, d9, [sp, #96]
   354d8:	stp	d10, d11, [sp, #112]
   354dc:	b.gt	355e0 <mpfr_get_ui@@Base+0x2f0>
   354e0:	ldr	x0, [sp, #152]
   354e4:	cmp	x0, #0x1
   354e8:	b.ne	3564c <mpfr_get_ui@@Base+0x35c>  // b.any
   354ec:	mov	x21, #0x0                   	// #0
   354f0:	ldr	x0, [sp, #152]
   354f4:	add	x26, sp, #0x170
   354f8:	ldr	x1, [x23, #16]
   354fc:	add	x21, x21, x0
   35500:	ldr	x0, [sp, #144]
   35504:	add	x25, sp, #0x280
   35508:	add	x22, sp, #0x1b0
   3550c:	add	x24, sp, #0x130
   35510:	cmp	x1, x0
   35514:	add	x21, x21, #0xa
   35518:	csel	x1, x1, x0, ge  // ge = tcont
   3551c:	mov	x0, x26
   35520:	bl	cb10 <mpfr_init2@plt>
   35524:	adrp	x0, 73000 <__gmpfr_l2b@@Base+0x200>
   35528:	mov	x1, x23
   3552c:	mov	w3, #0x0                   	// #0
   35530:	ldr	x2, [x0, #3928]
   35534:	mov	x0, x26
   35538:	bl	bbf0 <mpfr_sub@plt>
   3553c:	mov	x0, #0x1                   	// #1
   35540:	add	x2, sp, #0x200
   35544:	str	x0, [sp, #240]
   35548:	add	x1, sp, #0x218
   3554c:	str	w0, [sp, #248]
   35550:	stp	x2, x0, [sp, #264]
   35554:	str	w0, [sp, #280]
   35558:	str	x0, [sp, #304]
   3555c:	str	w0, [sp, #312]
   35560:	str	x0, [sp, #336]
   35564:	str	w0, [sp, #344]
   35568:	mov	x0, #0x40                  	// #64
   3556c:	str	x0, [sp, #176]
   35570:	add	x0, sp, #0x1d0
   35574:	stp	xzr, x2, [sp, #496]
   35578:	add	x2, sp, #0x208
   3557c:	str	x0, [sp, #160]
   35580:	add	x0, x25, #0x10
   35584:	str	x0, [sp, #200]
   35588:	str	x2, [sp, #296]
   3558c:	add	x2, sp, #0x210
   35590:	str	x2, [sp, #328]
   35594:	str	x1, [sp, #360]
   35598:	sub	x0, x21, #0x3
   3559c:	mov	x19, #0x2                   	// #2
   355a0:	str	x0, [sp, #208]
   355a4:	ldr	x1, [sp, #384]
   355a8:	sdiv	x0, x0, x19
   355ac:	neg	x0, x0
   355b0:	cmp	x1, x0
   355b4:	b.gt	35788 <mpfr_get_ui@@Base+0x498>
   355b8:	ldr	x1, [sp, #144]
   355bc:	add	x0, x21, x19
   355c0:	add	x20, x21, #0x3
   355c4:	cmp	x0, x1
   355c8:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   355cc:	csel	x20, x20, x1, ge  // ge = tcont
   355d0:	cmp	x20, x0
   355d4:	ldr	x1, [sp, #496]
   355d8:	b.lt	35684 <mpfr_get_ui@@Base+0x394>  // b.tstop
   355dc:	bl	c970 <mpfr_abort_prec_max@plt>
   355e0:	sub	x1, x1, #0x1
   355e4:	mov	x3, #0x1                   	// #1
   355e8:	cmp	x1, #0x3f
   355ec:	lsl	x2, x3, x1
   355f0:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   355f4:	csel	x2, x2, x1, lt  // lt = tstop
   355f8:	ldr	x1, [sp, #152]
   355fc:	add	x1, x1, x3
   35600:	cmp	x2, x1
   35604:	b.ls	354e0 <mpfr_get_ui@@Base+0x1f0>  // b.plast
   35608:	adrp	x1, 73000 <__gmpfr_l2b@@Base+0x200>
   3560c:	ldr	w4, [sp, #232]
   35610:	ldr	x1, [x1, #3928]
   35614:	bl	c5d0 <mpfr_round_near_x@plt>
   35618:	mov	w19, w0
   3561c:	cbz	w0, 354e0 <mpfr_get_ui@@Base+0x1f0>
   35620:	mov	w0, w19
   35624:	ldp	x29, x30, [sp]
   35628:	ldp	x19, x20, [sp, #16]
   3562c:	ldp	x21, x22, [sp, #32]
   35630:	ldp	x23, x24, [sp, #48]
   35634:	ldp	x25, x26, [sp, #64]
   35638:	ldp	x27, x28, [sp, #80]
   3563c:	ldp	d8, d9, [sp, #96]
   35640:	ldp	d10, d11, [sp, #112]
   35644:	add	sp, sp, #0x310
   35648:	ret
   3564c:	b.gt	35668 <mpfr_get_ui@@Base+0x378>
   35650:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   35654:	add	x2, x2, #0xbb0
   35658:	mov	w1, #0xb6                  	// #182
   3565c:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   35660:	add	x0, x0, #0xbbc
   35664:	bl	cbd0 <mpfr_assert_fail@plt>
   35668:	ldr	x0, [sp, #152]
   3566c:	sub	x21, x0, #0x1
   35670:	clz	x0, x21
   35674:	mov	w21, #0x40                  	// #64
   35678:	sub	w21, w21, w0
   3567c:	sxtw	x21, w21
   35680:	b	354f0 <mpfr_get_ui@@Base+0x200>
   35684:	sub	x19, x20, #0x1
   35688:	asr	x19, x19, #6
   3568c:	add	x19, x19, #0x1
   35690:	lsl	x0, x19, #5
   35694:	str	x0, [sp, #496]
   35698:	cbnz	x1, 35778 <mpfr_get_ui@@Base+0x488>
   3569c:	bl	cd90 <mpfr_allocate_func@plt>
   356a0:	str	x0, [sp, #504]
   356a4:	mov	w0, #0x1                   	// #1
   356a8:	str	w0, [sp, #248]
   356ac:	mov	w3, #0x0                   	// #0
   356b0:	ldr	x1, [sp, #504]
   356b4:	str	w0, [sp, #280]
   356b8:	str	w0, [sp, #312]
   356bc:	str	w0, [sp, #344]
   356c0:	adrp	x0, 73000 <__gmpfr_l2b@@Base+0x200>
   356c4:	add	x2, x1, x19, lsl #3
   356c8:	str	x2, [sp, #296]
   356cc:	add	x2, x1, x19, lsl #4
   356d0:	str	x2, [sp, #328]
   356d4:	mov	x2, #0x18                  	// #24
   356d8:	str	x1, [sp, #264]
   356dc:	str	x20, [sp, #240]
   356e0:	madd	x19, x19, x2, x1
   356e4:	mov	x2, x26
   356e8:	ldr	x1, [x0, #3928]
   356ec:	mov	x0, x24
   356f0:	str	x20, [sp, #272]
   356f4:	str	x20, [sp, #304]
   356f8:	str	x20, [sp, #336]
   356fc:	str	x19, [sp, #360]
   35700:	bl	c6b0 <mpfr_div@plt>
   35704:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   35708:	ldr	x1, [x0, #2624]
   3570c:	add	x0, x0, #0xa40
   35710:	blr	x1
   35714:	add	x19, sp, #0x150
   35718:	mrs	x1, tpidr_el0
   3571c:	mov	w2, #0x0                   	// #0
   35720:	add	x1, x1, x0
   35724:	mov	x0, x19
   35728:	bl	c410 <mpfr_cache@plt>
   3572c:	mov	x2, x19
   35730:	mov	x1, x24
   35734:	mov	x0, x24
   35738:	mov	w3, #0x0                   	// #0
   3573c:	bl	c230 <mpfr_add@plt>
   35740:	ldr	x1, [sp, #320]
   35744:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   35748:	cmp	x1, x0
   3574c:	b.gt	35e30 <mpfr_get_ui@@Base+0xb40>
   35750:	ldr	x1, [sp, #176]
   35754:	mov	x0, #0xfffffffffffffeff    	// #-257
   35758:	movk	x0, #0x7fff, lsl #48
   3575c:	sub	x0, x0, x21
   35760:	cmp	x0, x1
   35764:	b.ge	35e94 <mpfr_get_ui@@Base+0xba4>  // b.tcont
   35768:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   3576c:	mov	w1, #0x112                 	// #274
   35770:	add	x2, x2, #0xbcb
   35774:	b	3565c <mpfr_get_ui@@Base+0x36c>
   35778:	mov	x2, x0
   3577c:	ldr	x0, [sp, #504]
   35780:	bl	c250 <mpfr_reallocate_func@plt>
   35784:	b	356a0 <mpfr_get_ui@@Base+0x3b0>
   35788:	scvtf	d10, x21
   3578c:	mov	x0, x23
   35790:	mov	w1, #0x0                   	// #0
   35794:	bl	bdb0 <mpfr_get_d@plt>
   35798:	fmov	d8, d0
   3579c:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   357a0:	ldr	d11, [x0, #3224]
   357a4:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   357a8:	ldr	d1, [x0, #3232]
   357ac:	fmadd	d9, d10, d11, d1
   357b0:	bl	bd50 <__gmpfr_floor_log2@plt>
   357b4:	scvtf	d0, x0
   357b8:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   357bc:	ldr	d1, [x0, #3240]
   357c0:	fmsub	d1, d0, d11, d1
   357c4:	fmov	d0, #1.000000000000000000e+00
   357c8:	fmadd	d1, d1, d8, d9
   357cc:	fcmpe	d1, #0.0
   357d0:	b.hi	35804 <mpfr_get_ui@@Base+0x514>  // b.pmore
   357d4:	fsub	d0, d10, d0
   357d8:	mov	w20, #0x0                   	// #0
   357dc:	fdiv	d0, d0, d8
   357e0:	bl	bbc0 <__gmpfr_ceil_exp2@plt>
   357e4:	fcvtzs	w19, d0
   357e8:	add	w19, w19, #0x1
   357ec:	cmp	x21, #0x1
   357f0:	b.gt	35838 <mpfr_get_ui@@Base+0x548>
   357f4:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   357f8:	mov	w1, #0xef                  	// #239
   357fc:	add	x2, x2, #0xbc3
   35800:	b	3565c <mpfr_get_ui@@Base+0x36c>
   35804:	fcvtzs	w20, d1
   35808:	fmov	d1, #2.000000000000000000e+00
   3580c:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   35810:	sdiv	w20, w20, w19
   35814:	add	w20, w20, #0x1
   35818:	scvtf	d2, w20
   3581c:	fmadd	d8, d2, d1, d8
   35820:	fsub	d8, d8, d0
   35824:	ldr	d0, [x0, #3248]
   35828:	fdiv	d8, d8, d0
   3582c:	fcvtzs	w19, d8
   35830:	add	w19, w19, #0x1
   35834:	b	357ec <mpfr_get_ui@@Base+0x4fc>
   35838:	sub	x27, x21, #0x1
   3583c:	mov	x28, #0x0                   	// #0
   35840:	clz	x0, x27
   35844:	mov	w27, #0x40                  	// #64
   35848:	sub	w27, w27, w0
   3584c:	ldr	x0, [sp, #144]
   35850:	add	w27, w27, w27, lsl #1
   35854:	asr	w27, w27, #1
   35858:	add	w27, w27, #0x4
   3585c:	add	x27, x21, w27, sxtw
   35860:	cmp	x0, x27
   35864:	csel	x27, x0, x27, ge  // ge = tcont
   35868:	add	w0, w20, #0x1
   3586c:	sbfiz	x0, x0, #5, #32
   35870:	str	x0, [sp, #184]
   35874:	bl	cd90 <mpfr_allocate_func@plt>
   35878:	str	x0, [sp, #136]
   3587c:	add	x28, x28, #0x1
   35880:	cmp	w20, w28
   35884:	b.ge	35ae4 <mpfr_get_ui@@Base+0x7f4>  // b.tcont
   35888:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   3588c:	cmp	x27, x0
   35890:	ldr	x1, [sp, #496]
   35894:	b.ge	355dc <mpfr_get_ui@@Base+0x2ec>  // b.tcont
   35898:	sub	x28, x27, #0x1
   3589c:	asr	x28, x28, #6
   358a0:	add	x28, x28, #0x1
   358a4:	lsl	x0, x28, #5
   358a8:	str	x0, [sp, #496]
   358ac:	cbnz	x1, 35af8 <mpfr_get_ui@@Base+0x808>
   358b0:	bl	cd90 <mpfr_allocate_func@plt>
   358b4:	str	x0, [sp, #504]
   358b8:	mov	w0, #0x1                   	// #1
   358bc:	str	x27, [sp, #240]
   358c0:	cmp	w20, #0x0
   358c4:	ldr	x1, [sp, #504]
   358c8:	str	w0, [sp, #248]
   358cc:	str	x1, [sp, #264]
   358d0:	str	x27, [sp, #272]
   358d4:	add	x2, x1, x28, lsl #3
   358d8:	str	x2, [sp, #296]
   358dc:	add	x2, x1, x28, lsl #4
   358e0:	str	x2, [sp, #328]
   358e4:	mov	x2, #0x18                  	// #24
   358e8:	str	w0, [sp, #280]
   358ec:	str	x27, [sp, #304]
   358f0:	madd	x28, x28, x2, x1
   358f4:	str	w0, [sp, #312]
   358f8:	str	x27, [sp, #336]
   358fc:	str	w0, [sp, #344]
   35900:	str	x28, [sp, #360]
   35904:	b.le	35958 <mpfr_get_ui@@Base+0x668>
   35908:	ldr	x0, [sp, #136]
   3590c:	add	x27, x0, #0x20
   35910:	ldr	x1, [x0, #32]
   35914:	mov	x0, x25
   35918:	bl	cb10 <mpfr_init2@plt>
   3591c:	adrp	x0, 73000 <__gmpfr_l2b@@Base+0x200>
   35920:	mov	w3, #0x0                   	// #0
   35924:	mov	x2, #0xc                   	// #12
   35928:	ldr	x1, [x0, #3928]
   3592c:	mov	x0, x27
   35930:	mov	x27, #0x2                   	// #2
   35934:	bl	cd00 <mpfr_div_ui@plt>
   35938:	ldr	x0, [sp, #136]
   3593c:	add	x0, x0, #0x40
   35940:	str	x0, [sp, #168]
   35944:	mov	x28, x0
   35948:	cmp	w20, w27
   3594c:	b.ge	35b08 <mpfr_get_ui@@Base+0x818>  // b.tcont
   35950:	mov	x0, x25
   35954:	bl	c0f0 <mpfr_clear@plt>
   35958:	ldr	x28, [sp, #304]
   3595c:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   35960:	cmp	x28, x0
   35964:	b.ge	355dc <mpfr_get_ui@@Base+0x2ec>  // b.tcont
   35968:	sub	x27, x28, #0x1
   3596c:	asr	x27, x27, #6
   35970:	add	x27, x27, #0x1
   35974:	lsl	x0, x27, #1
   35978:	cmp	x0, #0x10
   3597c:	b.le	35bc8 <mpfr_get_ui@@Base+0x8d8>
   35980:	lsl	x0, x27, #4
   35984:	str	x0, [sp, #640]
   35988:	bl	cd90 <mpfr_allocate_func@plt>
   3598c:	str	x0, [sp, #648]
   35990:	mov	w0, #0x1                   	// #1
   35994:	str	w0, [sp, #440]
   35998:	mov	w2, #0x0                   	// #0
   3599c:	str	w0, [sp, #472]
   359a0:	ldr	x0, [sp, #160]
   359a4:	str	x28, [sp, #432]
   359a8:	ldr	x1, [sp, #648]
   359ac:	str	x1, [sp, #456]
   359b0:	str	x28, [sp, #464]
   359b4:	mov	x28, #0x0                   	// #0
   359b8:	add	x27, x1, x27, lsl #3
   359bc:	mov	x1, x23
   359c0:	str	x27, [sp, #488]
   359c4:	bl	bdf0 <mpfr_neg@plt>
   359c8:	ldr	x2, [sp, #160]
   359cc:	sxtw	x27, w19
   359d0:	mov	x1, x27
   359d4:	mov	w3, #0x0                   	// #0
   359d8:	mov	x0, x22
   359dc:	bl	caa0 <mpfr_ui_pow@plt>
   359e0:	mov	x1, x22
   359e4:	mov	w3, #0x0                   	// #0
   359e8:	mov	x2, #0x1                   	// #1
   359ec:	mov	x0, x22
   359f0:	bl	c980 <mpfr_div_2ui@plt>
   359f4:	ldr	w3, [sp, #440]
   359f8:	mov	x1, x22
   359fc:	mov	x0, x24
   35a00:	mov	w2, #0x0                   	// #0
   35a04:	bl	c730 <mpfr_set4@plt>
   35a08:	add	x28, x28, #0x1
   35a0c:	mov	w3, #0x0                   	// #0
   35a10:	sub	w0, w19, w28
   35a14:	cmp	w0, #0x1
   35a18:	b.gt	35bd4 <mpfr_get_ui@@Base+0x8e4>
   35a1c:	adrp	x0, 73000 <__gmpfr_l2b@@Base+0x200>
   35a20:	mov	x1, x24
   35a24:	ldr	x2, [x0, #3928]
   35a28:	mov	x0, x24
   35a2c:	bl	c230 <mpfr_add@plt>
   35a30:	ldr	x1, [sp, #640]
   35a34:	cbz	x1, 35a40 <mpfr_get_ui@@Base+0x750>
   35a38:	ldr	x0, [sp, #648]
   35a3c:	bl	ccc0 <mpfr_free_func@plt>
   35a40:	cbnz	w20, 35bfc <mpfr_get_ui@@Base+0x90c>
   35a44:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   35a48:	str	x0, [sp, #256]
   35a4c:	mov	w0, #0x1                   	// #1
   35a50:	str	w0, [sp, #248]
   35a54:	adrp	x0, 73000 <__gmpfr_l2b@@Base+0x200>
   35a58:	add	x19, sp, #0x110
   35a5c:	mov	x2, x26
   35a60:	mov	w3, #0x0                   	// #0
   35a64:	ldr	x1, [x0, #3928]
   35a68:	mov	x0, x19
   35a6c:	bl	c6b0 <mpfr_div@plt>
   35a70:	add	x0, sp, #0x150
   35a74:	mov	x1, x27
   35a78:	mov	x2, x26
   35a7c:	mov	x27, x0
   35a80:	mov	w3, #0x0                   	// #0
   35a84:	bl	caa0 <mpfr_ui_pow@plt>
   35a88:	mov	x1, x19
   35a8c:	mov	x2, x27
   35a90:	mov	x0, x19
   35a94:	mov	w3, #0x0                   	// #0
   35a98:	bl	c6b0 <mpfr_div@plt>
   35a9c:	mov	x2, x19
   35aa0:	mov	x19, #0x0                   	// #0
   35aa4:	mov	x1, x24
   35aa8:	mov	w3, #0x0                   	// #0
   35aac:	mov	x0, x24
   35ab0:	bl	c230 <mpfr_add@plt>
   35ab4:	add	x2, sp, #0xf0
   35ab8:	mov	x1, x24
   35abc:	mov	x0, x24
   35ac0:	mov	w3, #0x0                   	// #0
   35ac4:	bl	c230 <mpfr_add@plt>
   35ac8:	add	x19, x19, #0x1
   35acc:	cmp	w20, w19
   35ad0:	b.ge	35e20 <mpfr_get_ui@@Base+0xb30>  // b.tcont
   35ad4:	ldr	x0, [sp, #136]
   35ad8:	ldr	x1, [sp, #184]
   35adc:	bl	ccc0 <mpfr_free_func@plt>
   35ae0:	b	35740 <mpfr_get_ui@@Base+0x450>
   35ae4:	ldr	x0, [sp, #136]
   35ae8:	mov	x1, x27
   35aec:	add	x0, x0, x28, lsl #5
   35af0:	bl	cb10 <mpfr_init2@plt>
   35af4:	b	3587c <mpfr_get_ui@@Base+0x58c>
   35af8:	mov	x2, x0
   35afc:	ldr	x0, [sp, #504]
   35b00:	bl	c250 <mpfr_reallocate_func@plt>
   35b04:	b	358b4 <mpfr_get_ui@@Base+0x5c4>
   35b08:	sub	x1, x27, #0x1
   35b0c:	mov	w3, #0x0                   	// #0
   35b10:	mov	x2, #0x0                   	// #0
   35b14:	mov	x0, x25
   35b18:	bl	c680 <mpfr_set_ui_2exp@plt>
   35b1c:	mov	x0, #0xc                   	// #12
   35b20:	mov	x1, x25
   35b24:	mov	w3, #0x0                   	// #0
   35b28:	mul	x2, x27, x0
   35b2c:	mov	x0, x25
   35b30:	add	x2, x2, #0x6
   35b34:	bl	cd00 <mpfr_div_ui@plt>
   35b38:	ldr	x6, [sp, #168]
   35b3c:	sub	w4, w27, #0x1
   35b40:	cmp	w4, #0x1
   35b44:	b.ne	35b74 <mpfr_get_ui@@Base+0x884>  // b.any
   35b48:	mov	x0, x28
   35b4c:	mov	x1, x25
   35b50:	mov	w3, #0x0                   	// #0
   35b54:	mov	x2, #0x18                  	// #24
   35b58:	bl	cd00 <mpfr_div_ui@plt>
   35b5c:	add	x27, x27, #0x1
   35b60:	ldr	w0, [x28, #8]
   35b64:	add	x28, x28, #0x20
   35b68:	neg	w0, w0
   35b6c:	stur	w0, [x28, #-24]
   35b70:	b	35948 <mpfr_get_ui@@Base+0x658>
   35b74:	lsl	w2, w4, #1
   35b78:	mov	x1, x25
   35b7c:	mov	w3, #0x0                   	// #0
   35b80:	mov	x0, x25
   35b84:	str	x6, [sp, #216]
   35b88:	madd	w2, w2, w4, w4
   35b8c:	str	w4, [sp, #224]
   35b90:	lsl	w2, w2, #3
   35b94:	sxtw	x2, w2
   35b98:	bl	cd00 <mpfr_div_ui@plt>
   35b9c:	ldr	x6, [sp, #216]
   35ba0:	mov	x1, x25
   35ba4:	mov	x0, x25
   35ba8:	mov	w3, #0x0                   	// #0
   35bac:	mov	x2, x6
   35bb0:	bl	c230 <mpfr_add@plt>
   35bb4:	ldr	x6, [sp, #216]
   35bb8:	ldr	w4, [sp, #224]
   35bbc:	add	x6, x6, #0x20
   35bc0:	sub	w4, w4, #0x1
   35bc4:	b	35b40 <mpfr_get_ui@@Base+0x850>
   35bc8:	str	xzr, [sp, #640]
   35bcc:	ldr	x0, [sp, #200]
   35bd0:	b	3598c <mpfr_get_ui@@Base+0x69c>
   35bd4:	ldr	x2, [sp, #160]
   35bd8:	sub	x1, x27, x28
   35bdc:	mov	x0, x22
   35be0:	bl	caa0 <mpfr_ui_pow@plt>
   35be4:	mov	x2, x22
   35be8:	mov	x1, x24
   35bec:	mov	x0, x24
   35bf0:	mov	w3, #0x0                   	// #0
   35bf4:	bl	c230 <mpfr_add@plt>
   35bf8:	b	35a08 <mpfr_get_ui@@Base+0x718>
   35bfc:	mul	w19, w19, w19
   35c00:	ldr	x28, [sp, #240]
   35c04:	sxtw	x0, w19
   35c08:	str	x0, [sp, #216]
   35c0c:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   35c10:	cmp	x28, x0
   35c14:	b.ge	355dc <mpfr_get_ui@@Base+0x2ec>  // b.tcont
   35c18:	sub	x19, x28, #0x1
   35c1c:	asr	x19, x19, #6
   35c20:	add	x19, x19, #0x1
   35c24:	add	x0, x19, x19, lsl #1
   35c28:	cmp	x0, #0x10
   35c2c:	b.le	35d38 <mpfr_get_ui@@Base+0xa48>
   35c30:	mov	x0, #0x18                  	// #24
   35c34:	mul	x0, x19, x0
   35c38:	str	x0, [sp, #640]
   35c3c:	bl	cd90 <mpfr_allocate_func@plt>
   35c40:	str	x0, [sp, #648]
   35c44:	mov	w5, #0x1                   	// #1
   35c48:	str	w5, [sp, #408]
   35c4c:	mov	w2, #0x0                   	// #0
   35c50:	ldr	x0, [sp, #648]
   35c54:	str	x0, [sp, #424]
   35c58:	str	w5, [sp, #440]
   35c5c:	str	w5, [sp, #472]
   35c60:	add	x1, x0, x19, lsl #3
   35c64:	add	x19, x0, x19, lsl #4
   35c68:	ldr	x0, [sp, #184]
   35c6c:	str	x19, [sp, #488]
   35c70:	str	x28, [sp, #400]
   35c74:	sub	x4, x0, #0x20
   35c78:	str	x28, [sp, #432]
   35c7c:	ldr	x0, [sp, #136]
   35c80:	str	x28, [sp, #464]
   35c84:	sub	w28, w20, #0x1
   35c88:	str	x1, [sp, #456]
   35c8c:	add	x19, x0, x4
   35c90:	mov	x0, x22
   35c94:	mov	x1, x19
   35c98:	lsl	w28, w28, #1
   35c9c:	ldr	w3, [x19, #8]
   35ca0:	bl	c730 <mpfr_set4@plt>
   35ca4:	mov	x4, x19
   35ca8:	add	x19, sp, #0x190
   35cac:	sxtw	x0, w28
   35cb0:	mov	w5, #0x1                   	// #1
   35cb4:	str	x0, [sp, #168]
   35cb8:	cmp	w20, w5
   35cbc:	b.gt	35d44 <mpfr_get_ui@@Base+0xa54>
   35cc0:	mov	x2, x23
   35cc4:	mov	x1, x22
   35cc8:	mov	w3, #0x0                   	// #0
   35ccc:	mov	x0, x22
   35cd0:	bl	bdd0 <mpfr_mul@plt>
   35cd4:	adrp	x0, 73000 <__gmpfr_l2b@@Base+0x200>
   35cd8:	mov	w3, #0x0                   	// #0
   35cdc:	mov	x1, x23
   35ce0:	ldr	x2, [x0, #3928]
   35ce4:	mov	x0, x19
   35ce8:	bl	c230 <mpfr_add@plt>
   35cec:	mov	x1, x19
   35cf0:	mov	w2, #0x0                   	// #0
   35cf4:	mov	x0, x19
   35cf8:	bl	bdf0 <mpfr_neg@plt>
   35cfc:	ldr	x0, [sp, #160]
   35d00:	mov	x2, x19
   35d04:	mov	x1, x27
   35d08:	mov	w3, #0x0                   	// #0
   35d0c:	bl	caa0 <mpfr_ui_pow@plt>
   35d10:	ldr	x2, [sp, #160]
   35d14:	mov	x1, x22
   35d18:	add	x0, sp, #0xf0
   35d1c:	mov	w3, #0x0                   	// #0
   35d20:	bl	bdd0 <mpfr_mul@plt>
   35d24:	ldr	x1, [sp, #640]
   35d28:	cbz	x1, 35a54 <mpfr_get_ui@@Base+0x764>
   35d2c:	ldr	x0, [sp, #648]
   35d30:	bl	ccc0 <mpfr_free_func@plt>
   35d34:	b	35a54 <mpfr_get_ui@@Base+0x764>
   35d38:	str	xzr, [sp, #640]
   35d3c:	ldr	x0, [sp, #200]
   35d40:	b	35c40 <mpfr_get_ui@@Base+0x950>
   35d44:	ldr	x2, [sp, #168]
   35d48:	mov	x1, x23
   35d4c:	mov	w3, #0x0                   	// #0
   35d50:	mov	x0, x19
   35d54:	str	x4, [sp, #224]
   35d58:	str	w5, [sp, #236]
   35d5c:	bl	c2f0 <mpfr_add_ui@plt>
   35d60:	mov	x2, x19
   35d64:	mov	x1, x22
   35d68:	mov	w3, #0x0                   	// #0
   35d6c:	mov	x0, x22
   35d70:	bl	bdd0 <mpfr_mul@plt>
   35d74:	ldr	x0, [sp, #168]
   35d78:	mov	x1, x23
   35d7c:	mov	w3, #0x0                   	// #0
   35d80:	sub	x2, x0, #0x1
   35d84:	mov	x0, x19
   35d88:	bl	c2f0 <mpfr_add_ui@plt>
   35d8c:	mov	x2, x19
   35d90:	mov	x1, x22
   35d94:	mov	w3, #0x0                   	// #0
   35d98:	mov	x0, x22
   35d9c:	bl	bdd0 <mpfr_mul@plt>
   35da0:	ldr	x2, [sp, #216]
   35da4:	mov	x1, x22
   35da8:	mov	w3, #0x0                   	// #0
   35dac:	mov	x0, x22
   35db0:	bl	cd00 <mpfr_div_ui@plt>
   35db4:	ldr	x4, [sp, #224]
   35db8:	mov	w3, #0x0                   	// #0
   35dbc:	mov	x1, x22
   35dc0:	mov	x0, x22
   35dc4:	sub	x28, x4, #0x20
   35dc8:	mov	x2, x28
   35dcc:	bl	c230 <mpfr_add@plt>
   35dd0:	mov	x1, x28
   35dd4:	mov	x0, x22
   35dd8:	bl	ca40 <mpfr_cmpabs@plt>
   35ddc:	cmp	w0, #0x0
   35de0:	ldr	w5, [sp, #236]
   35de4:	ldr	x4, [sp, #224]
   35de8:	b.le	35e08 <mpfr_get_ui@@Base+0xb18>
   35dec:	ldur	w3, [x4, #-24]
   35df0:	mov	x1, x28
   35df4:	mov	x0, x22
   35df8:	mov	w2, #0x0                   	// #0
   35dfc:	str	w5, [sp, #224]
   35e00:	bl	c730 <mpfr_set4@plt>
   35e04:	ldr	w5, [sp, #224]
   35e08:	ldr	x0, [sp, #168]
   35e0c:	add	w5, w5, #0x1
   35e10:	mov	x4, x28
   35e14:	sub	x0, x0, #0x2
   35e18:	str	x0, [sp, #168]
   35e1c:	b	35cb8 <mpfr_get_ui@@Base+0x9c8>
   35e20:	ldr	x0, [sp, #136]
   35e24:	add	x0, x0, x19, lsl #5
   35e28:	bl	c0f0 <mpfr_clear@plt>
   35e2c:	b	35ac8 <mpfr_get_ui@@Base+0x7d8>
   35e30:	ldr	w0, [sp, #232]
   35e34:	ldr	x1, [sp, #304]
   35e38:	cmp	w0, #0x0
   35e3c:	ldr	x0, [sp, #152]
   35e40:	sub	x1, x1, #0x1
   35e44:	ldr	x2, [sp, #208]
   35e48:	cinc	x3, x0, eq  // eq = none
   35e4c:	ldr	x0, [sp, #328]
   35e50:	asr	x1, x1, #6
   35e54:	add	x1, x1, #0x1
   35e58:	bl	c400 <mpfr_round_p@plt>
   35e5c:	cbz	w0, 35750 <mpfr_get_ui@@Base+0x460>
   35e60:	ldr	w2, [sp, #232]
   35e64:	add	x1, sp, #0x130
   35e68:	ldr	w3, [sp, #312]
   35e6c:	ldr	x0, [sp, #192]
   35e70:	bl	c730 <mpfr_set4@plt>
   35e74:	mov	w19, w0
   35e78:	ldr	x1, [sp, #496]
   35e7c:	cbz	x1, 35e88 <mpfr_get_ui@@Base+0xb98>
   35e80:	ldr	x0, [sp, #504]
   35e84:	bl	ccc0 <mpfr_free_func@plt>
   35e88:	mov	x0, x26
   35e8c:	bl	c0f0 <mpfr_clear@plt>
   35e90:	b	35620 <mpfr_get_ui@@Base+0x330>
   35e94:	ldr	x0, [sp, #176]
   35e98:	add	x21, x21, x0
   35e9c:	mov	x0, #0x2                   	// #2
   35ea0:	sdiv	x0, x21, x0
   35ea4:	str	x0, [sp, #176]
   35ea8:	b	35598 <mpfr_get_ui@@Base+0x2a8>
   35eac:	stp	x29, x30, [sp, #-96]!
   35eb0:	mov	x29, sp
   35eb4:	str	x25, [sp, #64]
   35eb8:	add	x25, sp, #0x50
   35ebc:	stp	x19, x20, [sp, #16]
   35ec0:	mov	x19, x3
   35ec4:	mov	w20, w5
   35ec8:	stp	x21, x22, [sp, #32]
   35ecc:	mov	x22, x4
   35ed0:	mov	x21, x0
   35ed4:	mov	x0, x25
   35ed8:	stp	x23, x24, [sp, #48]
   35edc:	mov	x23, x2
   35ee0:	mov	x24, x1
   35ee4:	bl	c010 <mpfr_mpz_init@plt>
   35ee8:	mov	w2, #0x3                   	// #3
   35eec:	mov	x1, x23
   35ef0:	mov	x0, x25
   35ef4:	bl	be80 <mpfr_get_z@plt>
   35ef8:	mov	x0, x25
   35efc:	mov	x1, #0x0                   	// #0
   35f00:	bl	c060 <__gmpz_tstbit@plt>
   35f04:	cbnz	w0, 3604c <mpfr_get_ui@@Base+0xd5c>
   35f08:	mov	w3, w20
   35f0c:	mov	x2, x23
   35f10:	mov	x1, x22
   35f14:	mov	x0, x19
   35f18:	bl	bdd0 <mpfr_mul@plt>
   35f1c:	cmp	w20, #0x3
   35f20:	b.ne	35f2c <mpfr_get_ui@@Base+0xc3c>  // b.any
   35f24:	mov	x0, x22
   35f28:	bl	c1b0 <mpfr_nextabove@plt>
   35f2c:	mov	w3, #0x0                   	// #0
   35f30:	mov	x2, #0x1                   	// #1
   35f34:	mov	x1, x19
   35f38:	mov	x0, x19
   35f3c:	bl	c980 <mpfr_div_2ui@plt>
   35f40:	mov	w23, #0x5                   	// #5
   35f44:	mov	x0, x25
   35f48:	mov	x1, #0x1                   	// #1
   35f4c:	sub	w23, w23, w20
   35f50:	bl	c060 <__gmpz_tstbit@plt>
   35f54:	cbnz	w0, 36078 <mpfr_get_ui@@Base+0xd88>
   35f58:	mov	w2, w20
   35f5c:	mov	x1, x19
   35f60:	mov	x0, x19
   35f64:	bl	c4e0 <mpfr_sin@plt>
   35f68:	mov	x0, x25
   35f6c:	bl	c200 <mpfr_mpz_clear@plt>
   35f70:	mov	w2, w20
   35f74:	mov	x1, x24
   35f78:	mov	x0, x21
   35f7c:	bl	35490 <mpfr_get_ui@@Base+0x1a0>
   35f80:	mov	w3, w20
   35f84:	mov	x2, x19
   35f88:	mov	x1, x21
   35f8c:	mov	x0, x21
   35f90:	bl	bdd0 <mpfr_mul@plt>
   35f94:	mov	w2, w20
   35f98:	mov	x1, x21
   35f9c:	mov	x0, x21
   35fa0:	bl	c110 <mpfr_log@plt>
   35fa4:	mov	w2, w20
   35fa8:	mov	x1, x24
   35fac:	mov	x0, x19
   35fb0:	bl	c690 <mpfr_lngamma@plt>
   35fb4:	mov	w3, w20
   35fb8:	mov	x2, x19
   35fbc:	mov	x1, x21
   35fc0:	mov	x0, x21
   35fc4:	bl	c230 <mpfr_add@plt>
   35fc8:	mov	w3, w23
   35fcc:	mov	x1, x22
   35fd0:	mov	x2, #0x1                   	// #1
   35fd4:	mov	x0, x19
   35fd8:	bl	c350 <mpfr_mul_2ui@plt>
   35fdc:	mov	w2, w23
   35fe0:	mov	x1, x19
   35fe4:	mov	x0, x19
   35fe8:	bl	c110 <mpfr_log@plt>
   35fec:	mov	w3, w23
   35ff0:	mov	x2, x24
   35ff4:	mov	x1, x19
   35ff8:	mov	x0, x19
   35ffc:	bl	bdd0 <mpfr_mul@plt>
   36000:	mov	w3, w20
   36004:	mov	x2, x19
   36008:	mov	x1, x21
   3600c:	mov	x0, x21
   36010:	bl	bbf0 <mpfr_sub@plt>
   36014:	mov	w2, w20
   36018:	mov	x1, x21
   3601c:	mov	x0, x21
   36020:	bl	c7e0 <mpfr_exp@plt>
   36024:	cmp	w20, #0x3
   36028:	b.ne	36034 <mpfr_get_ui@@Base+0xd44>  // b.any
   3602c:	mov	x0, x22
   36030:	bl	be50 <mpfr_nextbelow@plt>
   36034:	ldp	x19, x20, [sp, #16]
   36038:	ldp	x21, x22, [sp, #32]
   3603c:	ldp	x23, x24, [sp, #48]
   36040:	ldr	x25, [sp, #64]
   36044:	ldp	x29, x30, [sp], #96
   36048:	ret
   3604c:	cmp	w20, #0x3
   36050:	b.ne	3605c <mpfr_get_ui@@Base+0xd6c>  // b.any
   36054:	mov	x0, x22
   36058:	bl	c1b0 <mpfr_nextabove@plt>
   3605c:	mov	x2, x23
   36060:	mov	x1, x22
   36064:	mov	x0, x19
   36068:	mov	w3, #0x5                   	// #5
   3606c:	sub	w3, w3, w20
   36070:	bl	bdd0 <mpfr_mul@plt>
   36074:	b	35f2c <mpfr_get_ui@@Base+0xc3c>
   36078:	mov	w2, w23
   3607c:	mov	x1, x19
   36080:	mov	x0, x19
   36084:	bl	c4e0 <mpfr_sin@plt>
   36088:	mov	x1, x19
   3608c:	mov	x0, x19
   36090:	mov	w3, #0x1                   	// #1
   36094:	mov	w2, #0x0                   	// #0
   36098:	bl	c730 <mpfr_set4@plt>
   3609c:	b	35f68 <mpfr_get_ui@@Base+0xc78>

00000000000360a0 <mpfr_zeta@@Base>:
   360a0:	sub	sp, sp, #0x200
   360a4:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   360a8:	stp	x29, x30, [sp]
   360ac:	mov	x29, sp
   360b0:	stp	x21, x22, [sp, #32]
   360b4:	mov	x22, x1
   360b8:	mov	w21, w2
   360bc:	ldr	x1, [x1, #16]
   360c0:	stp	x19, x20, [sp, #16]
   360c4:	stp	x23, x24, [sp, #48]
   360c8:	cmp	x1, x3
   360cc:	mov	x23, x0
   360d0:	stp	x25, x26, [sp, #64]
   360d4:	stp	x27, x28, [sp, #80]
   360d8:	b.gt	3615c <mpfr_zeta@@Base+0xbc>
   360dc:	mov	x2, #0x2                   	// #2
   360e0:	movk	x2, #0x8000, lsl #48
   360e4:	cmp	x1, x2
   360e8:	b.ne	3611c <mpfr_zeta@@Base+0x7c>  // b.any
   360ec:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   360f0:	ldr	x1, [x0, #2592]
   360f4:	add	x0, x0, #0xa20
   360f8:	blr	x1
   360fc:	str	x2, [x23, #16]
   36100:	mrs	x1, tpidr_el0
   36104:	add	x0, x1, x0
   36108:	ldr	w1, [x0]
   3610c:	orr	w1, w1, #0x4
   36110:	str	w1, [x0]
   36114:	mov	w19, #0x0                   	// #0
   36118:	b	36298 <mpfr_zeta@@Base+0x1f8>
   3611c:	cmp	x1, x3
   36120:	b.ne	36148 <mpfr_zeta@@Base+0xa8>  // b.any
   36124:	ldr	w1, [x22, #8]
   36128:	cmp	w1, #0x0
   3612c:	b.le	360ec <mpfr_zeta@@Base+0x4c>
   36130:	mov	w3, #0x0                   	// #0
   36134:	mov	x2, #0x0                   	// #0
   36138:	mov	x1, #0x1                   	// #1
   3613c:	bl	c680 <mpfr_set_ui_2exp@plt>
   36140:	mov	w19, w0
   36144:	b	36298 <mpfr_zeta@@Base+0x1f8>
   36148:	mov	x2, #0xffffffffffffffff    	// #-1
   3614c:	mov	w3, w21
   36150:	mov	x1, x2
   36154:	bl	bb00 <mpfr_set_si_2exp@plt>
   36158:	b	36140 <mpfr_zeta@@Base+0xa0>
   3615c:	ldr	x0, [x0]
   36160:	add	x2, x1, #0x1
   36164:	ldr	w24, [x22, #8]
   36168:	neg	x0, x0
   3616c:	cmp	x2, x0
   36170:	b.ge	362bc <mpfr_zeta@@Base+0x21c>  // b.tcont
   36174:	mrs	x20, tpidr_el0
   36178:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3617c:	ldr	x1, [x0, #2592]
   36180:	add	x0, x0, #0xa20
   36184:	blr	x1
   36188:	mov	w3, w21
   3618c:	ldr	w22, [x20, x0]
   36190:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   36194:	ldr	x1, [x0, #2528]
   36198:	add	x0, x0, #0x9e0
   3619c:	blr	x1
   361a0:	add	x1, x20, x0
   361a4:	ldr	x25, [x20, x0]
   361a8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   361ac:	ldr	x2, [x0, #2560]
   361b0:	add	x0, x0, #0xa00
   361b4:	blr	x2
   361b8:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   361bc:	str	x2, [x1]
   361c0:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   361c4:	mov	x2, #0xffffffffffffffff    	// #-1
   361c8:	ldr	x26, [x20, x0]
   361cc:	str	x1, [x20, x0]
   361d0:	mov	x1, x2
   361d4:	mov	x0, x23
   361d8:	bl	bb00 <mpfr_set_si_2exp@plt>
   361dc:	cmp	w21, #0x4
   361e0:	b.eq	36204 <mpfr_zeta@@Base+0x164>  // b.none
   361e4:	sub	w0, w21, #0x1
   361e8:	cmp	w0, #0x1
   361ec:	b.hi	36208 <mpfr_zeta@@Base+0x168>  // b.pmore
   361f0:	tbz	w24, #31, 36bd0 <mpfr_zeta@@Base+0xb30>
   361f4:	mov	x0, x23
   361f8:	bl	c1b0 <mpfr_nextabove@plt>
   361fc:	mov	w19, #0x1                   	// #1
   36200:	b	3623c <mpfr_zeta@@Base+0x19c>
   36204:	mov	w21, #0x3                   	// #3
   36208:	cmp	w24, #0x0
   3620c:	ccmp	w21, #0x3, #0x0, gt
   36210:	b.ne	36228 <mpfr_zeta@@Base+0x188>  // b.any
   36214:	mov	w21, #0x3                   	// #3
   36218:	mov	x0, x23
   3621c:	bl	be50 <mpfr_nextbelow@plt>
   36220:	mov	w19, #0xffffffff            	// #-1
   36224:	b	3623c <mpfr_zeta@@Base+0x19c>
   36228:	cmp	w21, #0x3
   3622c:	b.eq	36220 <mpfr_zeta@@Base+0x180>  // b.none
   36230:	cmp	w24, #0x0
   36234:	mov	w0, #0xffffffff            	// #-1
   36238:	cneg	w19, w0, gt
   3623c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   36240:	ldr	x1, [x0, #2592]
   36244:	add	x0, x0, #0xa20
   36248:	blr	x1
   3624c:	add	x1, x20, x0
   36250:	str	w22, [x20, x0]
   36254:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   36258:	ldr	x2, [x0, #2528]
   3625c:	add	x0, x0, #0x9e0
   36260:	blr	x2
   36264:	str	x25, [x20, x0]
   36268:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3626c:	ldr	x2, [x0, #2560]
   36270:	add	x0, x0, #0xa00
   36274:	blr	x2
   36278:	str	x26, [x20, x0]
   3627c:	ldr	x0, [x23, #16]
   36280:	cmp	x25, x0
   36284:	b.gt	3643c <mpfr_zeta@@Base+0x39c>
   36288:	cmp	x26, x0
   3628c:	b.lt	3643c <mpfr_zeta@@Base+0x39c>  // b.tstop
   36290:	orr	w22, w22, #0x8
   36294:	str	w22, [x1]
   36298:	mov	w0, w19
   3629c:	ldp	x29, x30, [sp]
   362a0:	ldp	x19, x20, [sp, #16]
   362a4:	ldp	x21, x22, [sp, #32]
   362a8:	ldp	x23, x24, [sp, #48]
   362ac:	ldp	x25, x26, [sp, #64]
   362b0:	ldp	x27, x28, [sp, #80]
   362b4:	add	sp, sp, #0x200
   362b8:	ret
   362bc:	tbz	w24, #31, 362f8 <mpfr_zeta@@Base+0x258>
   362c0:	ldp	x2, x3, [x22]
   362c4:	stp	x2, x3, [sp, #368]
   362c8:	sub	x1, x1, #0x1
   362cc:	ldp	x2, x3, [x22, #16]
   362d0:	stp	x2, x3, [sp, #384]
   362d4:	add	x0, sp, #0x170
   362d8:	str	x1, [sp, #384]
   362dc:	bl	c1f0 <mpfr_integer_p@plt>
   362e0:	cbz	w0, 362f8 <mpfr_zeta@@Base+0x258>
   362e4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   362e8:	str	x0, [x23, #16]
   362ec:	mov	w0, #0x1                   	// #1
   362f0:	str	w0, [x23, #8]
   362f4:	b	36114 <mpfr_zeta@@Base+0x74>
   362f8:	adrp	x20, 73000 <__gmpfr_l2b@@Base+0x200>
   362fc:	mov	x0, x22
   36300:	mov	w2, #0x1                   	// #1
   36304:	mrs	x25, tpidr_el0
   36308:	ldr	x1, [x20, #3928]
   3630c:	bl	ca30 <mpfr_cmp3@plt>
   36310:	str	x20, [sp, #160]
   36314:	mov	w19, w0
   36318:	cbnz	w0, 36350 <mpfr_zeta@@Base+0x2b0>
   3631c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   36320:	str	x0, [x23, #16]
   36324:	mov	w0, #0x1                   	// #1
   36328:	str	w0, [x23, #8]
   3632c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   36330:	ldr	x1, [x0, #2592]
   36334:	add	x0, x0, #0xa20
   36338:	blr	x1
   3633c:	add	x0, x25, x0
   36340:	ldr	w1, [x0]
   36344:	orr	w1, w1, #0x20
   36348:	str	w1, [x0]
   3634c:	b	36298 <mpfr_zeta@@Base+0x1f8>
   36350:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   36354:	ldr	x1, [x0, #2592]
   36358:	add	x0, x0, #0xa20
   3635c:	blr	x1
   36360:	ldr	w0, [x25, x0]
   36364:	str	w0, [sp, #116]
   36368:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3636c:	ldr	x1, [x0, #2528]
   36370:	add	x0, x0, #0x9e0
   36374:	blr	x1
   36378:	add	x1, x25, x0
   3637c:	ldr	x0, [x25, x0]
   36380:	str	x0, [sp, #128]
   36384:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   36388:	ldr	x2, [x0, #2560]
   3638c:	add	x0, x0, #0xa00
   36390:	blr	x2
   36394:	ldr	x2, [x25, x0]
   36398:	str	x2, [sp, #136]
   3639c:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   363a0:	str	x2, [x1]
   363a4:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   363a8:	str	x1, [x25, x0]
   363ac:	ldr	w1, [x22, #8]
   363b0:	ldr	x0, [x22, #16]
   363b4:	cmp	w1, #0x0
   363b8:	b.le	36450 <mpfr_zeta@@Base+0x3b0>
   363bc:	tbnz	x0, #63, 36450 <mpfr_zeta@@Base+0x3b0>
   363c0:	mov	w2, w21
   363c4:	mov	x1, x22
   363c8:	mov	x0, x23
   363cc:	bl	35490 <mpfr_get_ui@@Base+0x1a0>
   363d0:	mov	w19, w0
   363d4:	ldr	w2, [sp, #116]
   363d8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   363dc:	ldr	x1, [x0, #2592]
   363e0:	add	x0, x0, #0xa20
   363e4:	blr	x1
   363e8:	add	x1, x25, x0
   363ec:	str	w2, [x25, x0]
   363f0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   363f4:	ldr	x2, [x0, #2528]
   363f8:	add	x0, x0, #0x9e0
   363fc:	blr	x2
   36400:	ldr	x2, [sp, #128]
   36404:	str	x2, [x25, x0]
   36408:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3640c:	ldr	x2, [x0, #2560]
   36410:	add	x0, x0, #0xa00
   36414:	blr	x2
   36418:	ldr	x2, [sp, #136]
   3641c:	str	x2, [x25, x0]
   36420:	ldr	x0, [x23, #16]
   36424:	ldr	x2, [sp, #128]
   36428:	cmp	x2, x0
   3642c:	b.gt	3643c <mpfr_zeta@@Base+0x39c>
   36430:	ldr	x2, [sp, #136]
   36434:	cmp	x2, x0
   36438:	b.ge	36bbc <mpfr_zeta@@Base+0xb1c>  // b.tcont
   3643c:	mov	w2, w21
   36440:	mov	w1, w19
   36444:	mov	x0, x23
   36448:	bl	cbc0 <mpfr_check_range@plt>
   3644c:	b	36140 <mpfr_zeta@@Base+0xa0>
   36450:	ldr	x27, [x22]
   36454:	cmp	x0, #0x0
   36458:	add	x26, sp, #0x170
   3645c:	csneg	x0, xzr, x0, gt
   36460:	mov	x3, x26
   36464:	mov	x4, #0x0                   	// #0
   36468:	add	x20, sp, #0x150
   3646c:	add	x19, sp, #0x130
   36470:	add	x27, x27, #0x2
   36474:	mov	x2, x20
   36478:	ldr	x1, [x23]
   3647c:	add	x27, x27, x0
   36480:	mov	x0, #0x40                  	// #64
   36484:	str	x1, [sp, #96]
   36488:	mov	x1, x19
   3648c:	bl	ccf0 <mpfr_inits2@plt>
   36490:	mov	x0, x22
   36494:	mov	x2, #0x0                   	// #0
   36498:	mov	x1, #0x1                   	// #1
   3649c:	bl	bfd0 <mpfr_cmp_ui_2exp@plt>
   364a0:	mov	w3, #0x2                   	// #2
   364a4:	tbnz	w0, #31, 36628 <mpfr_zeta@@Base+0x588>
   364a8:	mov	x1, x22
   364ac:	mov	x0, x19
   364b0:	mov	x2, #0x1                   	// #1
   364b4:	bl	c5c0 <mpfr_sub_ui@plt>
   364b8:	ldr	x0, [sp, #96]
   364bc:	mov	w3, #0x2                   	// #2
   364c0:	mov	x1, #0x1                   	// #1
   364c4:	mov	x2, #0xfffffffffffffff2    	// #-14
   364c8:	sub	x2, x2, x0
   364cc:	mov	x0, x20
   364d0:	bl	c680 <mpfr_set_ui_2exp@plt>
   364d4:	ldr	x0, [sp, #96]
   364d8:	mov	w3, #0x2                   	// #2
   364dc:	ldr	x1, [sp, #320]
   364e0:	add	x24, x0, #0xe
   364e4:	add	x0, x0, #0xd
   364e8:	cmp	x0, x1
   364ec:	b.ge	3663c <mpfr_zeta@@Base+0x59c>  // b.tcont
   364f0:	mov	x1, x19
   364f4:	mov	x0, x19
   364f8:	mov	x2, #0x1                   	// #1
   364fc:	bl	c350 <mpfr_mul_2ui@plt>
   36500:	mov	x1, x20
   36504:	mov	w3, #0x2                   	// #2
   36508:	mov	x2, #0x1                   	// #1
   3650c:	mov	x0, x20
   36510:	bl	c2f0 <mpfr_add_ui@plt>
   36514:	mov	x2, x20
   36518:	mov	x1, x19
   3651c:	mov	w3, #0x2                   	// #2
   36520:	mov	x0, x19
   36524:	bl	bdd0 <mpfr_mul@plt>
   36528:	mov	x1, x19
   3652c:	mov	x0, x26
   36530:	mov	w3, #0x2                   	// #2
   36534:	mov	x2, #0x1                   	// #1
   36538:	bl	c2f0 <mpfr_add_ui@plt>
   3653c:	ldr	x0, [sp, #384]
   36540:	cmp	x0, #0x3
   36544:	b.gt	36650 <mpfr_zeta@@Base+0x5b0>
   36548:	mov	x0, x19
   3654c:	mov	w3, #0x2                   	// #2
   36550:	mov	x2, #0x0                   	// #0
   36554:	mov	x1, #0x8                   	// #8
   36558:	bl	c680 <mpfr_set_ui_2exp@plt>
   3655c:	mov	x2, x24
   36560:	mov	x1, x19
   36564:	mov	w3, #0x2                   	// #2
   36568:	mov	x0, x19
   3656c:	bl	c980 <mpfr_div_2ui@plt>
   36570:	mov	x1, x19
   36574:	mov	w3, #0x2                   	// #2
   36578:	mov	x2, #0x1                   	// #1
   3657c:	mov	x0, x19
   36580:	bl	c2f0 <mpfr_add_ui@plt>
   36584:	mov	x2, x20
   36588:	mov	x1, x19
   3658c:	mov	w3, #0x2                   	// #2
   36590:	mov	x0, x19
   36594:	bl	bdd0 <mpfr_mul@plt>
   36598:	mov	x1, x26
   3659c:	mov	w3, #0x2                   	// #2
   365a0:	mov	x2, #0xd                   	// #13
   365a4:	mov	x0, x20
   365a8:	bl	c2f0 <mpfr_add_ui@plt>
   365ac:	mov	w3, #0x2                   	// #2
   365b0:	mov	x2, x19
   365b4:	mov	x1, x20
   365b8:	mov	x0, x20
   365bc:	bl	bdd0 <mpfr_mul@plt>
   365c0:	mov	x1, x19
   365c4:	mov	w2, #0x2                   	// #2
   365c8:	mov	x0, x19
   365cc:	bl	c490 <mpfr_sqr@plt>
   365d0:	mov	x2, x19
   365d4:	mov	x1, x20
   365d8:	mov	w3, #0x2                   	// #2
   365dc:	mov	x0, x20
   365e0:	bl	bdd0 <mpfr_mul@plt>
   365e4:	ldr	x0, [sp, #352]
   365e8:	mov	x1, x20
   365ec:	mov	x2, x26
   365f0:	mov	x3, #0x0                   	// #0
   365f4:	str	x0, [sp, #144]
   365f8:	mov	x0, x19
   365fc:	bl	c240 <mpfr_clears@plt>
   36600:	ldr	x0, [sp, #96]
   36604:	ldr	x1, [sp, #144]
   36608:	add	x0, x0, x1
   3660c:	cmp	x0, x27
   36610:	csel	x27, x0, x27, ge  // ge = tcont
   36614:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   36618:	add	x24, x27, #0xa
   3661c:	cmp	x24, x0
   36620:	b.lt	36668 <mpfr_zeta@@Base+0x5c8>  // b.tstop
   36624:	bl	c970 <mpfr_abort_prec_max@plt>
   36628:	mov	x2, x22
   3662c:	mov	x0, x19
   36630:	mov	x1, #0x1                   	// #1
   36634:	bl	cae0 <mpfr_ui_sub@plt>
   36638:	b	364b8 <mpfr_zeta@@Base+0x418>
   3663c:	mov	x2, x24
   36640:	mov	x0, x19
   36644:	mov	x1, #0x1                   	// #1
   36648:	bl	c680 <mpfr_set_ui_2exp@plt>
   3664c:	b	36500 <mpfr_zeta@@Base+0x460>
   36650:	ldr	w3, [sp, #376]
   36654:	mov	x1, x26
   36658:	mov	x0, x19
   3665c:	mov	w2, #0x2                   	// #2
   36660:	bl	c730 <mpfr_set4@plt>
   36664:	b	3655c <mpfr_zeta@@Base+0x4bc>
   36668:	add	x27, x27, #0x9
   3666c:	mov	x0, #0x40                  	// #64
   36670:	sdiv	x27, x27, x0
   36674:	add	x27, x27, #0x1
   36678:	lsl	x0, x27, #2
   3667c:	cmp	x0, #0x10
   36680:	b.le	36810 <mpfr_zeta@@Base+0x770>
   36684:	lsl	x0, x27, #5
   36688:	str	x0, [sp, #368]
   3668c:	bl	cd90 <mpfr_allocate_func@plt>
   36690:	str	x0, [sp, #376]
   36694:	ldr	x1, [sp, #376]
   36698:	mov	w0, #0x1                   	// #1
   3669c:	add	x28, sp, #0xf0
   366a0:	add	x26, sp, #0xb0
   366a4:	str	w0, [sp, #184]
   366a8:	add	x2, x1, x27, lsl #3
   366ac:	stp	x2, x24, [sp, #232]
   366b0:	add	x2, x1, x27, lsl #4
   366b4:	str	x2, [sp, #264]
   366b8:	mov	x2, #0x18                  	// #24
   366bc:	str	w0, [sp, #216]
   366c0:	madd	x27, x27, x2, x1
   366c4:	str	w0, [sp, #248]
   366c8:	str	w0, [sp, #280]
   366cc:	mov	x0, #0x40                  	// #64
   366d0:	str	x27, [sp, #296]
   366d4:	add	x27, sp, #0xd0
   366d8:	str	x0, [sp, #120]
   366dc:	add	x0, sp, #0x110
   366e0:	str	x0, [sp, #104]
   366e4:	str	x24, [sp, #176]
   366e8:	stp	x1, x24, [sp, #200]
   366ec:	str	x24, [sp, #272]
   366f0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   366f4:	ldr	x1, [x0, #2640]
   366f8:	add	x0, x0, #0xa50
   366fc:	blr	x1
   36700:	add	x0, x25, x0
   36704:	mov	x1, x0
   36708:	str	x0, [sp, #152]
   3670c:	ldr	x0, [sp, #104]
   36710:	mov	w2, #0x3                   	// #3
   36714:	bl	c410 <mpfr_cache@plt>
   36718:	ldr	x0, [sp, #160]
   3671c:	mov	w3, #0x0                   	// #0
   36720:	mov	x2, x22
   36724:	ldr	x1, [x0, #3928]
   36728:	mov	x0, x27
   3672c:	bl	bbf0 <mpfr_sub@plt>
   36730:	mov	x1, x27
   36734:	mov	x0, x28
   36738:	mov	w2, #0x0                   	// #0
   3673c:	bl	c840 <mpfr_gamma@plt>
   36740:	ldr	x6, [sp, #256]
   36744:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   36748:	cmp	x6, x0
   3674c:	b.ne	36948 <mpfr_zeta@@Base+0x8a8>  // b.any
   36750:	ldr	x4, [sp, #104]
   36754:	mov	x1, x27
   36758:	mov	x3, x28
   3675c:	mov	x2, x22
   36760:	mov	x0, x26
   36764:	mov	w5, #0x3                   	// #3
   36768:	str	x6, [sp, #152]
   3676c:	bl	35eac <mpfr_get_ui@@Base+0xbbc>
   36770:	ldr	x6, [sp, #152]
   36774:	ldr	x1, [sp, #192]
   36778:	cmp	x1, x6
   3677c:	b.eq	367a0 <mpfr_zeta@@Base+0x700>  // b.none
   36780:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   36784:	ldr	x2, [x0, #2560]
   36788:	add	x0, x0, #0xa00
   3678c:	blr	x2
   36790:	add	x7, x25, x0
   36794:	ldr	x0, [x25, x0]
   36798:	cmp	x1, x0
   3679c:	b.ne	3681c <mpfr_zeta@@Base+0x77c>  // b.any
   367a0:	mov	w3, #0x0                   	// #0
   367a4:	mov	x1, x22
   367a8:	mov	x2, #0x2                   	// #2
   367ac:	mov	x0, x27
   367b0:	bl	c980 <mpfr_div_2ui@plt>
   367b4:	mov	x1, x27
   367b8:	mov	w2, #0x0                   	// #0
   367bc:	mov	x0, x27
   367c0:	bl	bf40 <mpfr_frac@plt>
   367c4:	mov	x2, #0xffffffffffffffff    	// #-1
   367c8:	mov	x0, x27
   367cc:	mov	x1, x2
   367d0:	bl	c460 <mpfr_cmp_si_2exp@plt>
   367d4:	cmp	w0, #0x0
   367d8:	mov	w1, w21
   367dc:	mov	x0, x23
   367e0:	mov	w2, #0xffffffff            	// #-1
   367e4:	cneg	w2, w2, le
   367e8:	bl	bfc0 <mpfr_overflow@plt>
   367ec:	mov	w19, w0
   367f0:	ldr	w0, [sp, #116]
   367f4:	orr	w0, w0, #0x2
   367f8:	str	w0, [sp, #116]
   367fc:	ldr	x1, [sp, #368]
   36800:	cbz	x1, 363d4 <mpfr_zeta@@Base+0x334>
   36804:	ldr	x0, [sp, #376]
   36808:	bl	ccc0 <mpfr_free_func@plt>
   3680c:	b	363d4 <mpfr_zeta@@Base+0x334>
   36810:	add	x26, x26, #0x10
   36814:	stp	xzr, x26, [sp, #368]
   36818:	b	36694 <mpfr_zeta@@Base+0x5f4>
   3681c:	ldr	x1, [sp, #176]
   36820:	mov	x0, x19
   36824:	str	x6, [sp, #152]
   36828:	str	x7, [sp, #168]
   3682c:	bl	cb10 <mpfr_init2@plt>
   36830:	ldr	x4, [sp, #104]
   36834:	mov	x0, x19
   36838:	mov	x3, x28
   3683c:	mov	x2, x22
   36840:	mov	x1, x27
   36844:	mov	w5, #0x2                   	// #2
   36848:	bl	35eac <mpfr_get_ui@@Base+0xbbc>
   3684c:	ldr	x6, [sp, #152]
   36850:	ldr	x0, [sp, #320]
   36854:	cmp	x0, x6
   36858:	b.eq	36aec <mpfr_zeta@@Base+0xa4c>  // b.none
   3685c:	ldr	x7, [sp, #168]
   36860:	ldr	x1, [x7]
   36864:	cmp	x0, x1
   36868:	b.eq	36aec <mpfr_zeta@@Base+0xa4c>  // b.none
   3686c:	ldr	x1, [sp, #96]
   36870:	mov	x0, x20
   36874:	bl	cb10 <mpfr_init2@plt>
   36878:	ldr	w3, [sp, #184]
   3687c:	mov	w2, w21
   36880:	mov	x1, x26
   36884:	mov	x0, x20
   36888:	bl	c730 <mpfr_set4@plt>
   3688c:	ldr	x1, [sp, #96]
   36890:	mov	w2, w21
   36894:	mov	x0, x19
   36898:	bl	ca00 <mpfr_prec_round@plt>
   3689c:	mov	x1, x19
   368a0:	mov	w2, #0x1                   	// #1
   368a4:	mov	x0, x20
   368a8:	bl	ca30 <mpfr_cmp3@plt>
   368ac:	mov	w1, w0
   368b0:	mov	x0, x19
   368b4:	str	w1, [sp, #152]
   368b8:	bl	c0f0 <mpfr_clear@plt>
   368bc:	mov	x0, x20
   368c0:	bl	c0f0 <mpfr_clear@plt>
   368c4:	ldr	w1, [sp, #152]
   368c8:	cbnz	w1, 36aec <mpfr_zeta@@Base+0xa4c>
   368cc:	mov	w3, #0x0                   	// #0
   368d0:	mov	x1, x22
   368d4:	mov	x2, #0x2                   	// #2
   368d8:	mov	x0, x27
   368dc:	bl	c980 <mpfr_div_2ui@plt>
   368e0:	mov	x1, x27
   368e4:	mov	w2, #0x0                   	// #0
   368e8:	mov	x0, x27
   368ec:	bl	bf40 <mpfr_frac@plt>
   368f0:	mov	x2, #0xffffffffffffffff    	// #-1
   368f4:	mov	x0, x27
   368f8:	mov	x1, x2
   368fc:	bl	c460 <mpfr_cmp_si_2exp@plt>
   36900:	cmp	w0, #0x0
   36904:	b.le	36918 <mpfr_zeta@@Base+0x878>
   36908:	mov	w2, w21
   3690c:	mov	x1, x26
   36910:	mov	x0, x26
   36914:	bl	bdf0 <mpfr_neg@plt>
   36918:	mov	w3, w21
   3691c:	mov	x1, x26
   36920:	mov	x0, x26
   36924:	mov	x2, #0x1                   	// #1
   36928:	bl	c350 <mpfr_mul_2ui@plt>
   3692c:	ldr	w3, [sp, #184]
   36930:	mov	w2, w21
   36934:	mov	x1, x26
   36938:	mov	x0, x23
   3693c:	bl	c730 <mpfr_set4@plt>
   36940:	mov	w19, w0
   36944:	b	367fc <mpfr_zeta@@Base+0x75c>
   36948:	mov	x1, x27
   3694c:	mov	w2, #0x0                   	// #0
   36950:	mov	x0, x26
   36954:	bl	35490 <mpfr_get_ui@@Base+0x1a0>
   36958:	mov	x2, x28
   3695c:	mov	x1, x26
   36960:	mov	w3, #0x0                   	// #0
   36964:	mov	x0, x26
   36968:	bl	bdd0 <mpfr_mul@plt>
   3696c:	ldr	x1, [sp, #104]
   36970:	mov	w3, #0x0                   	// #0
   36974:	mov	x2, #0x1                   	// #1
   36978:	mov	x0, x28
   3697c:	bl	c350 <mpfr_mul_2ui@plt>
   36980:	mov	x1, x27
   36984:	mov	w2, #0x0                   	// #0
   36988:	mov	x0, x27
   3698c:	bl	bdf0 <mpfr_neg@plt>
   36990:	mov	x2, x27
   36994:	mov	x1, x28
   36998:	mov	w3, #0x0                   	// #0
   3699c:	mov	x0, x28
   369a0:	bl	be10 <mpfr_pow@plt>
   369a4:	mov	x2, x28
   369a8:	mov	x1, x26
   369ac:	mov	w3, #0x0                   	// #0
   369b0:	mov	x0, x26
   369b4:	bl	bdd0 <mpfr_mul@plt>
   369b8:	mov	x1, x26
   369bc:	mov	w3, #0x0                   	// #0
   369c0:	mov	x2, #0x1                   	// #1
   369c4:	mov	x0, x26
   369c8:	bl	c350 <mpfr_mul_2ui@plt>
   369cc:	ldr	x2, [sp, #104]
   369d0:	mov	x1, x22
   369d4:	mov	w3, #0x0                   	// #0
   369d8:	mov	x0, x28
   369dc:	bl	bdd0 <mpfr_mul@plt>
   369e0:	ldr	x0, [sp, #104]
   369e4:	mov	x1, x28
   369e8:	mov	w3, #0x0                   	// #0
   369ec:	mov	x2, #0x1                   	// #1
   369f0:	bl	c980 <mpfr_div_2ui@plt>
   369f4:	ldr	x1, [sp, #104]
   369f8:	mov	x0, x28
   369fc:	mov	w2, #0x0                   	// #0
   36a00:	bl	c4e0 <mpfr_sin@plt>
   36a04:	ldr	x1, [sp, #256]
   36a08:	tbz	x1, #63, 36a98 <mpfr_zeta@@Base+0x9f8>
   36a0c:	mov	x2, #0xfffffffffffffeff    	// #-257
   36a10:	neg	x0, x1
   36a14:	movk	x2, #0x7fff, lsl #48
   36a18:	sub	x2, x2, x24
   36a1c:	cmp	x0, x2
   36a20:	b.lt	36a3c <mpfr_zeta@@Base+0x99c>  // b.tstop
   36a24:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   36a28:	add	x2, x2, #0xc0e
   36a2c:	mov	w1, #0x281                 	// #641
   36a30:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   36a34:	add	x0, x0, #0xbbc
   36a38:	bl	cbd0 <mpfr_assert_fail@plt>
   36a3c:	sub	x1, x24, x1
   36a40:	mov	x0, x20
   36a44:	bl	cb10 <mpfr_init2@plt>
   36a48:	ldr	x1, [sp, #152]
   36a4c:	mov	w2, #0x3                   	// #3
   36a50:	mov	x0, x20
   36a54:	bl	c410 <mpfr_cache@plt>
   36a58:	mov	x2, x20
   36a5c:	mov	x1, x22
   36a60:	mov	w3, #0x0                   	// #0
   36a64:	mov	x0, x20
   36a68:	bl	bdd0 <mpfr_mul@plt>
   36a6c:	mov	x1, x20
   36a70:	mov	w3, #0x0                   	// #0
   36a74:	mov	x2, #0x1                   	// #1
   36a78:	mov	x0, x20
   36a7c:	bl	c980 <mpfr_div_2ui@plt>
   36a80:	mov	x1, x20
   36a84:	mov	w2, #0x0                   	// #0
   36a88:	mov	x0, x28
   36a8c:	bl	c4e0 <mpfr_sin@plt>
   36a90:	mov	x0, x20
   36a94:	bl	c0f0 <mpfr_clear@plt>
   36a98:	mov	x1, x26
   36a9c:	mov	x2, x28
   36aa0:	mov	x0, x26
   36aa4:	mov	w3, #0x0                   	// #0
   36aa8:	bl	bdd0 <mpfr_mul@plt>
   36aac:	ldr	x1, [sp, #192]
   36ab0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   36ab4:	cmp	x1, x0
   36ab8:	b.le	36aec <mpfr_zeta@@Base+0xa4c>
   36abc:	ldr	x0, [sp, #96]
   36ac0:	cmp	w21, #0x0
   36ac4:	ldr	x1, [sp, #176]
   36ac8:	cinc	x3, x0, eq  // eq = none
   36acc:	ldr	x0, [sp, #144]
   36ad0:	sub	x1, x1, #0x1
   36ad4:	sub	x2, x24, x0
   36ad8:	asr	x1, x1, #6
   36adc:	ldr	x0, [sp, #200]
   36ae0:	add	x1, x1, #0x1
   36ae4:	bl	c400 <mpfr_round_p@plt>
   36ae8:	cbnz	w0, 3692c <mpfr_zeta@@Base+0x88c>
   36aec:	ldr	x1, [sp, #120]
   36af0:	mov	x0, #0xfffffffffffffeff    	// #-257
   36af4:	movk	x0, #0x7fff, lsl #48
   36af8:	sub	x0, x0, x24
   36afc:	cmp	x0, x1
   36b00:	b.ge	36b14 <mpfr_zeta@@Base+0xa74>  // b.tcont
   36b04:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   36b08:	mov	w1, #0x290                 	// #656
   36b0c:	add	x2, x2, #0xc50
   36b10:	b	36a30 <mpfr_zeta@@Base+0x990>
   36b14:	ldr	x0, [sp, #120]
   36b18:	ldr	x1, [sp, #368]
   36b1c:	add	x24, x24, x0
   36b20:	mov	x0, #0x2                   	// #2
   36b24:	sdiv	x0, x24, x0
   36b28:	str	x0, [sp, #120]
   36b2c:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   36b30:	cmp	x24, x0
   36b34:	b.ge	36624 <mpfr_zeta@@Base+0x584>  // b.tcont
   36b38:	sub	x3, x24, #0x1
   36b3c:	asr	x3, x3, #6
   36b40:	add	x3, x3, #0x1
   36b44:	str	x3, [sp, #152]
   36b48:	lsl	x0, x3, #5
   36b4c:	str	x0, [sp, #368]
   36b50:	cbnz	x1, 36bac <mpfr_zeta@@Base+0xb0c>
   36b54:	bl	cd90 <mpfr_allocate_func@plt>
   36b58:	str	x0, [sp, #376]
   36b5c:	mov	w0, #0x1                   	// #1
   36b60:	ldr	x3, [sp, #152]
   36b64:	str	x24, [sp, #176]
   36b68:	ldr	x1, [sp, #376]
   36b6c:	str	w0, [sp, #184]
   36b70:	str	x1, [sp, #200]
   36b74:	str	x24, [sp, #208]
   36b78:	add	x2, x1, x3, lsl #3
   36b7c:	str	x2, [sp, #232]
   36b80:	add	x2, x1, x3, lsl #4
   36b84:	str	x2, [sp, #264]
   36b88:	mov	x2, #0x18                  	// #24
   36b8c:	str	w0, [sp, #216]
   36b90:	str	x24, [sp, #240]
   36b94:	madd	x3, x3, x2, x1
   36b98:	str	w0, [sp, #248]
   36b9c:	str	x24, [sp, #272]
   36ba0:	str	w0, [sp, #280]
   36ba4:	str	x3, [sp, #296]
   36ba8:	b	366f0 <mpfr_zeta@@Base+0x650>
   36bac:	mov	x2, x0
   36bb0:	ldr	x0, [sp, #376]
   36bb4:	bl	c250 <mpfr_reallocate_func@plt>
   36bb8:	b	36b58 <mpfr_zeta@@Base+0xab8>
   36bbc:	cbz	w19, 36298 <mpfr_zeta@@Base+0x1f8>
   36bc0:	ldr	w0, [sp, #116]
   36bc4:	orr	w0, w0, #0x8
   36bc8:	str	w0, [x1]
   36bcc:	b	36298 <mpfr_zeta@@Base+0x1f8>
   36bd0:	cmp	w21, #0x2
   36bd4:	b.eq	361fc <mpfr_zeta@@Base+0x15c>  // b.none
   36bd8:	mov	w21, #0x1                   	// #1
   36bdc:	b	36230 <mpfr_zeta@@Base+0x190>

0000000000036be0 <mpfr_cmp_d@@Base>:
   36be0:	stp	x29, x30, [sp, #-144]!
   36be4:	mov	x29, sp
   36be8:	stp	x21, x22, [sp, #32]
   36bec:	mov	x21, x0
   36bf0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   36bf4:	ldr	x1, [x0, #2592]
   36bf8:	add	x0, x0, #0xa20
   36bfc:	blr	x1
   36c00:	mrs	x1, tpidr_el0
   36c04:	stp	x19, x20, [sp, #16]
   36c08:	add	x20, x1, x0
   36c0c:	stp	x23, x24, [sp, #48]
   36c10:	add	x19, sp, #0x70
   36c14:	mov	w24, #0x1                   	// #1
   36c18:	str	x27, [sp, #80]
   36c1c:	ldr	w27, [x1, x0]
   36c20:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   36c24:	ldr	x2, [x0, #2528]
   36c28:	add	x0, x0, #0x9e0
   36c2c:	blr	x2
   36c30:	add	x23, x1, x0
   36c34:	stp	x25, x26, [sp, #64]
   36c38:	ldr	x26, [x1, x0]
   36c3c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   36c40:	ldr	x2, [x0, #2560]
   36c44:	add	x0, x0, #0xa00
   36c48:	blr	x2
   36c4c:	add	x22, x1, x0
   36c50:	str	w24, [sp, #120]
   36c54:	ldr	x25, [x1, x0]
   36c58:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   36c5c:	str	x0, [x23]
   36c60:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   36c64:	str	x0, [x22]
   36c68:	mov	x0, #0x35                  	// #53
   36c6c:	str	x0, [sp, #112]
   36c70:	add	x0, sp, #0x68
   36c74:	mov	w1, #0x0                   	// #0
   36c78:	str	x0, [sp, #136]
   36c7c:	mov	x0, x19
   36c80:	bl	bec0 <mpfr_set_d@plt>
   36c84:	mov	w2, w24
   36c88:	mov	x1, x19
   36c8c:	mov	x0, x21
   36c90:	str	wzr, [x20]
   36c94:	bl	ca30 <mpfr_cmp3@plt>
   36c98:	ldr	w1, [x20]
   36c9c:	orr	w1, w1, w27
   36ca0:	ldr	x27, [sp, #80]
   36ca4:	str	w1, [x20]
   36ca8:	ldp	x19, x20, [sp, #16]
   36cac:	str	x25, [x22]
   36cb0:	ldp	x21, x22, [sp, #32]
   36cb4:	str	x26, [x23]
   36cb8:	ldp	x23, x24, [sp, #48]
   36cbc:	ldp	x25, x26, [sp, #64]
   36cc0:	ldp	x29, x30, [sp], #144
   36cc4:	ret

0000000000036cc8 <mpfr_erf@@Base>:
   36cc8:	sub	sp, sp, #0x220
   36ccc:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   36cd0:	stp	x29, x30, [sp]
   36cd4:	mov	x29, sp
   36cd8:	stp	x21, x22, [sp, #32]
   36cdc:	mov	w22, w2
   36ce0:	mov	x21, x0
   36ce4:	ldr	x2, [x1, #16]
   36ce8:	stp	x19, x20, [sp, #16]
   36cec:	mov	x20, x1
   36cf0:	stp	x23, x24, [sp, #48]
   36cf4:	cmp	x2, x3
   36cf8:	stp	x25, x26, [sp, #64]
   36cfc:	stp	x27, x28, [sp, #80]
   36d00:	stp	d8, d9, [sp, #96]
   36d04:	str	d10, [sp, #112]
   36d08:	b.gt	36da4 <mpfr_erf@@Base+0xdc>
   36d0c:	mov	x4, #0x2                   	// #2
   36d10:	movk	x4, #0x8000, lsl #48
   36d14:	cmp	x2, x4
   36d18:	b.ne	36d74 <mpfr_erf@@Base+0xac>  // b.any
   36d1c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   36d20:	ldr	x1, [x0, #2592]
   36d24:	add	x0, x0, #0xa20
   36d28:	blr	x1
   36d2c:	mov	w19, #0x0                   	// #0
   36d30:	mrs	x1, tpidr_el0
   36d34:	str	x2, [x21, #16]
   36d38:	add	x0, x1, x0
   36d3c:	ldr	w1, [x0]
   36d40:	orr	w1, w1, #0x4
   36d44:	str	w1, [x0]
   36d48:	mov	w0, w19
   36d4c:	ldr	d10, [sp, #112]
   36d50:	ldp	x29, x30, [sp]
   36d54:	ldp	x19, x20, [sp, #16]
   36d58:	ldp	x21, x22, [sp, #32]
   36d5c:	ldp	x23, x24, [sp, #48]
   36d60:	ldp	x25, x26, [sp, #64]
   36d64:	ldp	x27, x28, [sp, #80]
   36d68:	ldp	d8, d9, [sp, #96]
   36d6c:	add	sp, sp, #0x220
   36d70:	ret
   36d74:	cmp	x2, x3
   36d78:	b.ne	36d94 <mpfr_erf@@Base+0xcc>  // b.any
   36d7c:	ldrsw	x1, [x1, #8]
   36d80:	mov	w3, #0x0                   	// #0
   36d84:	mov	x2, #0x0                   	// #0
   36d88:	bl	bb00 <mpfr_set_si_2exp@plt>
   36d8c:	mov	w19, w0
   36d90:	b	36d48 <mpfr_erf@@Base+0x80>
   36d94:	ldr	w3, [x1, #8]
   36d98:	mov	w2, #0x0                   	// #0
   36d9c:	bl	c730 <mpfr_set4@plt>
   36da0:	b	36d8c <mpfr_erf@@Base+0xc4>
   36da4:	mrs	x23, tpidr_el0
   36da8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   36dac:	ldr	x1, [x0, #2592]
   36db0:	add	x0, x0, #0xa20
   36db4:	blr	x1
   36db8:	mov	x19, #0x2                   	// #2
   36dbc:	ldr	w0, [x23, x0]
   36dc0:	str	w0, [sp, #156]
   36dc4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   36dc8:	ldr	x1, [x0, #2528]
   36dcc:	add	x0, x0, #0x9e0
   36dd0:	blr	x1
   36dd4:	add	x1, x23, x0
   36dd8:	ldr	x0, [x23, x0]
   36ddc:	str	x0, [sp, #160]
   36de0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   36de4:	ldr	x3, [x0, #2560]
   36de8:	add	x0, x0, #0xa00
   36dec:	blr	x3
   36df0:	ldr	x3, [x23, x0]
   36df4:	str	x3, [sp, #168]
   36df8:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   36dfc:	str	x3, [x1]
   36e00:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   36e04:	str	x1, [x23, x0]
   36e08:	ldr	x1, [x21]
   36e0c:	sdiv	x0, x1, x19
   36e10:	neg	x0, x0
   36e14:	cmp	x2, x0
   36e18:	b.ge	36f9c <mpfr_erf@@Base+0x2d4>  // b.tcont
   36e1c:	add	x25, sp, #0x170
   36e20:	add	x1, x1, #0x11
   36e24:	mov	x0, x25
   36e28:	bl	cb10 <mpfr_init2@plt>
   36e2c:	ldr	x1, [x21]
   36e30:	add	x24, sp, #0x190
   36e34:	mov	x0, x24
   36e38:	add	x1, x1, #0x11
   36e3c:	bl	cb10 <mpfr_init2@plt>
   36e40:	mov	w3, w19
   36e44:	mov	x2, x20
   36e48:	mov	x1, x20
   36e4c:	mov	x0, x25
   36e50:	bl	bdd0 <mpfr_mul@plt>
   36e54:	mov	w3, w19
   36e58:	mov	x1, x25
   36e5c:	mov	x2, #0x3                   	// #3
   36e60:	mov	x0, x25
   36e64:	bl	cd00 <mpfr_div_ui@plt>
   36e68:	mov	x1, #0x1                   	// #1
   36e6c:	mov	w3, #0x1                   	// #1
   36e70:	mov	x2, x25
   36e74:	mov	x0, x25
   36e78:	bl	cae0 <mpfr_ui_sub@plt>
   36e7c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   36e80:	ldr	x1, [x0, #2640]
   36e84:	add	x0, x0, #0xa50
   36e88:	blr	x1
   36e8c:	add	x26, x23, x0
   36e90:	mov	w2, w19
   36e94:	mov	x1, x26
   36e98:	mov	x0, x24
   36e9c:	bl	c410 <mpfr_cache@plt>
   36ea0:	mov	w2, w19
   36ea4:	mov	x1, x24
   36ea8:	mov	x0, x24
   36eac:	bl	c9c0 <mpfr_sqrt@plt>
   36eb0:	mov	x2, x24
   36eb4:	mov	x1, x25
   36eb8:	mov	w3, #0x1                   	// #1
   36ebc:	mov	x0, x25
   36ec0:	bl	c6b0 <mpfr_div@plt>
   36ec4:	mov	x1, x25
   36ec8:	mov	w3, #0x1                   	// #1
   36ecc:	mov	x2, #0x1                   	// #1
   36ed0:	mov	x0, x25
   36ed4:	bl	c350 <mpfr_mul_2ui@plt>
   36ed8:	mov	w3, #0x1                   	// #1
   36edc:	mov	x2, x20
   36ee0:	mov	x1, x25
   36ee4:	mov	x0, x25
   36ee8:	bl	bdd0 <mpfr_mul@plt>
   36eec:	mov	x1, x26
   36ef0:	mov	w2, #0x3                   	// #3
   36ef4:	mov	x0, x24
   36ef8:	bl	c410 <mpfr_cache@plt>
   36efc:	mov	x1, x24
   36f00:	mov	w2, #0x3                   	// #3
   36f04:	mov	x0, x24
   36f08:	bl	c9c0 <mpfr_sqrt@plt>
   36f0c:	mov	x1, x24
   36f10:	mov	w3, #0x3                   	// #3
   36f14:	mov	x2, #0x1                   	// #1
   36f18:	mov	x0, x24
   36f1c:	bl	c980 <mpfr_div_2ui@plt>
   36f20:	ldr	w0, [x20, #8]
   36f24:	mov	x2, x24
   36f28:	mov	x1, x20
   36f2c:	cmp	w0, #0x0
   36f30:	mov	x0, x24
   36f34:	cset	w3, le
   36f38:	add	w3, w3, #0x2
   36f3c:	bl	c6b0 <mpfr_div@plt>
   36f40:	ldr	x1, [x21]
   36f44:	mov	w2, w22
   36f48:	mov	x0, x25
   36f4c:	bl	ca00 <mpfr_prec_round@plt>
   36f50:	mov	w19, w0
   36f54:	ldr	x1, [x21]
   36f58:	mov	w2, w22
   36f5c:	mov	x0, x24
   36f60:	bl	ca00 <mpfr_prec_round@plt>
   36f64:	cmp	w19, #0x0
   36f68:	b.lt	37598 <mpfr_erf@@Base+0x8d0>  // b.tstop
   36f6c:	cset	w1, gt
   36f70:	cmp	w0, #0x0
   36f74:	b.lt	36f84 <mpfr_erf@@Base+0x2bc>  // b.tstop
   36f78:	cset	w0, gt
   36f7c:	cmp	w0, w1
   36f80:	b.eq	3759c <mpfr_erf@@Base+0x8d4>  // b.none
   36f84:	mov	w26, #0x0                   	// #0
   36f88:	mov	x0, x25
   36f8c:	bl	c0f0 <mpfr_clear@plt>
   36f90:	mov	x0, x24
   36f94:	bl	c0f0 <mpfr_clear@plt>
   36f98:	cbnz	w26, 37040 <mpfr_erf@@Base+0x378>
   36f9c:	adrp	x2, 73000 <__gmpfr_l2b@@Base+0x200>
   36fa0:	mov	x0, #0x35                  	// #53
   36fa4:	add	x19, sp, #0xd0
   36fa8:	str	x0, [sp, #208]
   36fac:	ldr	x2, [x2, #4048]
   36fb0:	add	x0, sp, #0xc8
   36fb4:	mov	w24, #0x1                   	// #1
   36fb8:	mov	x1, x20
   36fbc:	mov	w3, w24
   36fc0:	str	w24, [sp, #216]
   36fc4:	str	x0, [sp, #232]
   36fc8:	mov	x0, x19
   36fcc:	bl	c6b0 <mpfr_div@plt>
   36fd0:	mov	w3, w24
   36fd4:	mov	x2, x20
   36fd8:	mov	x1, x19
   36fdc:	mov	x0, x19
   36fe0:	bl	bdd0 <mpfr_mul@plt>
   36fe4:	ldr	x1, [x21]
   36fe8:	mov	x0, x19
   36fec:	mov	x2, #0x0                   	// #0
   36ff0:	add	x1, x1, #0x1
   36ff4:	bl	bfd0 <mpfr_cmp_ui_2exp@plt>
   36ff8:	cmp	w0, #0x0
   36ffc:	b.le	370e8 <mpfr_erf@@Base+0x420>
   37000:	ldr	w19, [x20, #8]
   37004:	cmp	w19, #0x0
   37008:	b.gt	370bc <mpfr_erf@@Base+0x3f4>
   3700c:	cmp	w22, #0x2
   37010:	b.eq	370c4 <mpfr_erf@@Base+0x3fc>  // b.none
   37014:	cmp	w22, #0x3
   37018:	mov	w3, #0x2                   	// #2
   3701c:	csel	w3, w22, w3, ne  // ne = any
   37020:	tst	w3, #0xfffffffd
   37024:	b.eq	37030 <mpfr_erf@@Base+0x368>  // b.none
   37028:	cmp	w3, #0x4
   3702c:	b.ne	370cc <mpfr_erf@@Base+0x404>  // b.any
   37030:	sxtw	x1, w19
   37034:	mov	x0, x21
   37038:	mov	x2, #0x0                   	// #0
   3703c:	bl	bb00 <mpfr_set_si_2exp@plt>
   37040:	ldr	w2, [sp, #156]
   37044:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   37048:	ldr	x1, [x0, #2592]
   3704c:	add	x0, x0, #0xa20
   37050:	blr	x1
   37054:	add	x1, x23, x0
   37058:	str	w2, [x23, x0]
   3705c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   37060:	ldr	x2, [x0, #2528]
   37064:	add	x0, x0, #0x9e0
   37068:	blr	x2
   3706c:	ldr	x2, [sp, #160]
   37070:	str	x2, [x23, x0]
   37074:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   37078:	ldr	x2, [x0, #2560]
   3707c:	add	x0, x0, #0xa00
   37080:	blr	x2
   37084:	ldr	x2, [sp, #168]
   37088:	str	x2, [x23, x0]
   3708c:	ldr	x0, [x21, #16]
   37090:	ldr	x2, [sp, #160]
   37094:	cmp	x2, x0
   37098:	b.gt	37584 <mpfr_erf@@Base+0x8bc>
   3709c:	ldr	x2, [sp, #168]
   370a0:	cmp	x2, x0
   370a4:	b.lt	37584 <mpfr_erf@@Base+0x8bc>  // b.tstop
   370a8:	cbz	w19, 36d48 <mpfr_erf@@Base+0x80>
   370ac:	ldr	w0, [sp, #156]
   370b0:	orr	w0, w0, #0x8
   370b4:	str	w0, [x1]
   370b8:	b	36d48 <mpfr_erf@@Base+0x80>
   370bc:	mov	w3, w22
   370c0:	b	37020 <mpfr_erf@@Base+0x358>
   370c4:	mov	w3, #0x3                   	// #3
   370c8:	b	37020 <mpfr_erf@@Base+0x358>
   370cc:	mov	x0, x21
   370d0:	mov	x1, #0x0                   	// #0
   370d4:	bl	c150 <mpfr_setmax@plt>
   370d8:	neg	w19, w19
   370dc:	ldr	w0, [x20, #8]
   370e0:	str	w0, [x21, #8]
   370e4:	b	37040 <mpfr_erf@@Base+0x378>
   370e8:	mov	x0, x20
   370ec:	mov	w1, #0x0                   	// #0
   370f0:	bl	bdb0 <mpfr_get_d@plt>
   370f4:	fmul	d8, d0, d0
   370f8:	ldr	x0, [x21]
   370fc:	str	x0, [sp, #128]
   37100:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   37104:	ldr	d1, [x0, #3224]
   37108:	ldr	x0, [sp, #128]
   3710c:	fdiv	d1, d8, d1
   37110:	cmp	x0, #0x1
   37114:	fcvtzs	x19, d1
   37118:	add	x19, x19, x0
   3711c:	add	x19, x19, #0x8
   37120:	b.eq	3716c <mpfr_erf@@Base+0x4a4>  // b.none
   37124:	b.gt	37140 <mpfr_erf@@Base+0x478>
   37128:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   3712c:	add	x2, x2, #0x62b
   37130:	mov	w1, #0xc6                  	// #198
   37134:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   37138:	add	x0, x0, #0xcb8
   3713c:	bl	cbd0 <mpfr_assert_fail@plt>
   37140:	ldr	x0, [sp, #128]
   37144:	sub	x0, x0, #0x1
   37148:	clz	x1, x0
   3714c:	mov	w0, #0x40                  	// #64
   37150:	sub	w0, w0, w1
   37154:	sxtw	x0, w0
   37158:	add	x19, x19, x0
   3715c:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   37160:	cmp	x19, x0
   37164:	b.lt	37174 <mpfr_erf@@Base+0x4ac>  // b.tstop
   37168:	bl	c970 <mpfr_abort_prec_max@plt>
   3716c:	mov	x0, #0x0                   	// #0
   37170:	b	37158 <mpfr_erf@@Base+0x490>
   37174:	sub	x24, x19, #0x1
   37178:	asr	x24, x24, #6
   3717c:	add	x24, x24, #0x1
   37180:	lsl	x0, x24, #2
   37184:	cmp	x0, #0x10
   37188:	b.le	37348 <mpfr_erf@@Base+0x680>
   3718c:	lsl	x0, x24, #5
   37190:	str	x0, [sp, #400]
   37194:	bl	cd90 <mpfr_allocate_func@plt>
   37198:	str	x0, [sp, #408]
   3719c:	mov	w0, #0x1                   	// #1
   371a0:	str	w0, [sp, #248]
   371a4:	ldr	x1, [sp, #408]
   371a8:	str	w0, [sp, #280]
   371ac:	str	w0, [sp, #312]
   371b0:	str	w0, [sp, #344]
   371b4:	mov	x0, #0x40                  	// #64
   371b8:	add	x2, x1, x24, lsl #3
   371bc:	str	x2, [sp, #296]
   371c0:	add	x2, x1, x24, lsl #4
   371c4:	str	x0, [sp, #136]
   371c8:	add	x0, sp, #0xf0
   371cc:	str	x2, [sp, #328]
   371d0:	mov	x2, #0x18                  	// #24
   371d4:	str	x0, [sp, #176]
   371d8:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   371dc:	str	x19, [sp, #240]
   371e0:	madd	x24, x24, x2, x1
   371e4:	str	x1, [sp, #264]
   371e8:	ldr	d10, [x0, #3328]
   371ec:	str	x24, [sp, #360]
   371f0:	add	x24, sp, #0x110
   371f4:	str	x19, [sp, #272]
   371f8:	str	x19, [sp, #304]
   371fc:	str	x19, [sp, #336]
   37200:	ldr	x0, [sp, #176]
   37204:	mov	x2, x20
   37208:	mov	x1, x20
   3720c:	mov	w3, #0x2                   	// #2
   37210:	add	x26, sp, #0x130
   37214:	add	x25, sp, #0x170
   37218:	bl	bdd0 <mpfr_mul@plt>
   3721c:	mov	w27, #0x1                   	// #1
   37220:	mov	w3, #0x0                   	// #0
   37224:	mov	x2, #0x0                   	// #0
   37228:	mov	x1, #0x1                   	// #1
   3722c:	mov	x0, x24
   37230:	bl	c680 <mpfr_set_ui_2exp@plt>
   37234:	mov	w3, #0x0                   	// #0
   37238:	mov	x2, #0x0                   	// #0
   3723c:	mov	x1, #0x1                   	// #1
   37240:	mov	x0, x26
   37244:	bl	c680 <mpfr_set_ui_2exp@plt>
   37248:	mov	x0, x25
   3724c:	mov	x1, #0x35                  	// #53
   37250:	bl	cb10 <mpfr_init2@plt>
   37254:	str	w27, [sp, #376]
   37258:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3725c:	str	x0, [sp, #384]
   37260:	add	x0, sp, #0x150
   37264:	str	x0, [sp, #144]
   37268:	neg	x0, x19
   3726c:	str	x0, [sp, #184]
   37270:	ldr	x1, [sp, #176]
   37274:	mov	x2, x26
   37278:	mov	w3, #0x2                   	// #2
   3727c:	mov	x0, x26
   37280:	bl	bdd0 <mpfr_mul@plt>
   37284:	mov	w2, w27
   37288:	mov	x1, x26
   3728c:	mov	w3, #0x2                   	// #2
   37290:	mov	x0, x26
   37294:	bl	cd00 <mpfr_div_ui@plt>
   37298:	ldr	x0, [sp, #144]
   3729c:	lsl	w2, w27, #1
   372a0:	add	w2, w2, #0x1
   372a4:	mov	x1, x26
   372a8:	mov	w3, #0x2                   	// #2
   372ac:	bl	cd00 <mpfr_div_ui@plt>
   372b0:	mov	x1, x24
   372b4:	mov	x0, x24
   372b8:	mov	w3, #0x0                   	// #0
   372bc:	ldr	x2, [sp, #144]
   372c0:	ldr	x28, [sp, #288]
   372c4:	tbz	w27, #0, 37354 <mpfr_erf@@Base+0x68c>
   372c8:	bl	bbf0 <mpfr_sub@plt>
   372cc:	ldr	x1, [sp, #288]
   372d0:	ucvtf	d9, w27
   372d4:	ldr	x0, [sp, #352]
   372d8:	sub	x2, x28, x1
   372dc:	mov	w3, #0x2                   	// #2
   372e0:	sub	x28, x0, x1
   372e4:	ldr	x0, [sp, #184]
   372e8:	cmp	x28, x0
   372ec:	b.ge	372f8 <mpfr_erf@@Base+0x630>  // b.tcont
   372f0:	fcmpe	d8, d9
   372f4:	b.ls	37398 <mpfr_erf@@Base+0x6d0>  // b.plast
   372f8:	mov	x1, x25
   372fc:	mov	x0, x25
   37300:	bl	bc10 <mpfr_mul_2si@plt>
   37304:	fmov	d0, #8.000000000000000000e+00
   37308:	fmov	d1, #1.000000000000000000e+00
   3730c:	cmp	x28, #0x0
   37310:	fmadd	d1, d9, d0, d1
   37314:	b.gt	37360 <mpfr_erf@@Base+0x698>
   37318:	mov	x0, x28
   3731c:	cmn	x0, #0xf
   37320:	b.lt	3738c <mpfr_erf@@Base+0x6c4>  // b.tstop
   37324:	neg	x0, x28
   37328:	fmov	d0, #5.000000000000000000e-01
   3732c:	and	x0, x0, #0xfffffffffffffff0
   37330:	add	x28, x0, x28
   37334:	add	x28, x28, #0x1
   37338:	cmp	x28, #0x1
   3733c:	b.eq	3736c <mpfr_erf@@Base+0x6a4>  // b.none
   37340:	fmul	d1, d1, d0
   37344:	b	37334 <mpfr_erf@@Base+0x66c>
   37348:	add	x0, sp, #0x1a0
   3734c:	str	xzr, [sp, #400]
   37350:	b	37198 <mpfr_erf@@Base+0x4d0>
   37354:	bl	c230 <mpfr_add@plt>
   37358:	b	372cc <mpfr_erf@@Base+0x604>
   3735c:	fadd	d1, d1, d1
   37360:	sub	x28, x28, #0x1
   37364:	cmn	x28, #0x1
   37368:	b.ne	3735c <mpfr_erf@@Base+0x694>  // b.any
   3736c:	fmov	d0, #5.000000000000000000e-01
   37370:	mov	x1, x25
   37374:	mov	x0, x25
   37378:	mov	w2, #0x2                   	// #2
   3737c:	fadd	d0, d1, d0
   37380:	add	w27, w27, #0x1
   37384:	bl	c430 <mpfr_add_d@plt>
   37388:	b	37270 <mpfr_erf@@Base+0x5a8>
   3738c:	fmul	d1, d1, d10
   37390:	add	x0, x0, #0x10
   37394:	b	3731c <mpfr_erf@@Base+0x654>
   37398:	mov	x1, x20
   3739c:	mov	x2, x24
   373a0:	mov	x0, x24
   373a4:	bl	bdd0 <mpfr_mul@plt>
   373a8:	ldr	x0, [sp, #288]
   373ac:	mov	w2, #0x1                   	// #1
   373b0:	add	x0, x0, #0x1
   373b4:	str	x0, [sp, #288]
   373b8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   373bc:	ldr	x1, [x0, #2640]
   373c0:	add	x0, x0, #0xa50
   373c4:	blr	x1
   373c8:	add	x1, x23, x0
   373cc:	mov	x0, x26
   373d0:	bl	c410 <mpfr_cache@plt>
   373d4:	mov	x1, x26
   373d8:	mov	w2, #0x1                   	// #1
   373dc:	mov	x0, x26
   373e0:	bl	c9c0 <mpfr_sqrt@plt>
   373e4:	mov	x2, x26
   373e8:	mov	x1, x24
   373ec:	mov	w3, #0x0                   	// #0
   373f0:	mov	x0, x24
   373f4:	bl	c6b0 <mpfr_div@plt>
   373f8:	mov	x1, x25
   373fc:	mov	w3, #0x2                   	// #2
   37400:	mov	x2, #0x2                   	// #2
   37404:	mov	x0, x25
   37408:	bl	c350 <mpfr_mul_2ui@plt>
   3740c:	mov	x1, x25
   37410:	mov	x0, x25
   37414:	mov	w3, #0x2                   	// #2
   37418:	mov	x2, #0xb                   	// #11
   3741c:	bl	c2f0 <mpfr_add_ui@plt>
   37420:	ldr	x1, [sp, #384]
   37424:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   37428:	cmp	x1, x0
   3742c:	b.ne	37448 <mpfr_erf@@Base+0x780>  // b.any
   37430:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   37434:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   37438:	add	x2, x2, #0xcbe
   3743c:	add	x0, x0, #0xcb8
   37440:	mov	w1, #0xf7                  	// #247
   37444:	bl	cbd0 <mpfr_assert_fail@plt>
   37448:	mov	x0, x25
   3744c:	ldr	x26, [sp, #384]
   37450:	bl	c0f0 <mpfr_clear@plt>
   37454:	ldr	x1, [sp, #288]
   37458:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3745c:	cmp	x1, x0
   37460:	b.gt	3748c <mpfr_erf@@Base+0x7c4>
   37464:	ldr	x1, [sp, #136]
   37468:	mov	x0, #0xfffffffffffffeff    	// #-257
   3746c:	movk	x0, #0x7fff, lsl #48
   37470:	sub	x0, x0, x19
   37474:	cmp	x0, x1
   37478:	b.ge	374e4 <mpfr_erf@@Base+0x81c>  // b.tcont
   3747c:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   37480:	mov	w1, #0xff                  	// #255
   37484:	add	x2, x2, #0x6df
   37488:	b	37134 <mpfr_erf@@Base+0x46c>
   3748c:	ldr	x0, [sp, #128]
   37490:	cmp	w22, #0x0
   37494:	ldr	x1, [sp, #272]
   37498:	cinc	x3, x0, eq  // eq = none
   3749c:	ldr	x0, [sp, #296]
   374a0:	sub	x1, x1, #0x1
   374a4:	sub	x2, x19, x26
   374a8:	asr	x1, x1, #6
   374ac:	add	x1, x1, #0x1
   374b0:	bl	c400 <mpfr_round_p@plt>
   374b4:	cbz	w0, 37464 <mpfr_erf@@Base+0x79c>
   374b8:	ldr	w3, [sp, #280]
   374bc:	mov	x1, x24
   374c0:	mov	w2, w22
   374c4:	mov	x0, x21
   374c8:	bl	c730 <mpfr_set4@plt>
   374cc:	mov	w19, w0
   374d0:	ldr	x1, [sp, #400]
   374d4:	cbz	x1, 37040 <mpfr_erf@@Base+0x378>
   374d8:	ldr	x0, [sp, #408]
   374dc:	bl	ccc0 <mpfr_free_func@plt>
   374e0:	b	37040 <mpfr_erf@@Base+0x378>
   374e4:	ldr	x0, [sp, #136]
   374e8:	ldr	x1, [sp, #400]
   374ec:	add	x19, x19, x0
   374f0:	mov	x0, #0x2                   	// #2
   374f4:	sdiv	x0, x19, x0
   374f8:	str	x0, [sp, #136]
   374fc:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   37500:	cmp	x19, x0
   37504:	b.ge	37168 <mpfr_erf@@Base+0x4a0>  // b.tcont
   37508:	sub	x25, x19, #0x1
   3750c:	asr	x25, x25, #6
   37510:	add	x25, x25, #0x1
   37514:	lsl	x0, x25, #5
   37518:	str	x0, [sp, #400]
   3751c:	cbnz	x1, 37574 <mpfr_erf@@Base+0x8ac>
   37520:	bl	cd90 <mpfr_allocate_func@plt>
   37524:	str	x0, [sp, #408]
   37528:	mov	w0, #0x1                   	// #1
   3752c:	str	x19, [sp, #240]
   37530:	ldr	x1, [sp, #408]
   37534:	str	w0, [sp, #248]
   37538:	str	x1, [sp, #264]
   3753c:	str	x19, [sp, #272]
   37540:	add	x2, x1, x25, lsl #3
   37544:	str	x2, [sp, #296]
   37548:	add	x2, x1, x25, lsl #4
   3754c:	str	x2, [sp, #328]
   37550:	mov	x2, #0x18                  	// #24
   37554:	str	w0, [sp, #280]
   37558:	str	x19, [sp, #304]
   3755c:	madd	x25, x25, x2, x1
   37560:	str	w0, [sp, #312]
   37564:	str	x19, [sp, #336]
   37568:	str	w0, [sp, #344]
   3756c:	str	x25, [sp, #360]
   37570:	b	37200 <mpfr_erf@@Base+0x538>
   37574:	mov	x2, x0
   37578:	ldr	x0, [sp, #408]
   3757c:	bl	c250 <mpfr_reallocate_func@plt>
   37580:	b	37524 <mpfr_erf@@Base+0x85c>
   37584:	mov	w2, w22
   37588:	mov	w1, w19
   3758c:	mov	x0, x21
   37590:	bl	cbc0 <mpfr_check_range@plt>
   37594:	b	36d8c <mpfr_erf@@Base+0xc4>
   37598:	tbz	w0, #31, 36f84 <mpfr_erf@@Base+0x2bc>
   3759c:	mov	x1, x24
   375a0:	mov	x0, x25
   375a4:	mov	w2, #0x1                   	// #1
   375a8:	bl	ca30 <mpfr_cmp3@plt>
   375ac:	cbnz	w0, 36f84 <mpfr_erf@@Base+0x2bc>
   375b0:	ldr	w3, [sp, #408]
   375b4:	mov	w2, w22
   375b8:	mov	x1, x24
   375bc:	mov	x0, x21
   375c0:	mov	w26, #0x1                   	// #1
   375c4:	bl	c730 <mpfr_set4@plt>
   375c8:	b	36f88 <mpfr_erf@@Base+0x2c0>

00000000000375cc <mpfr_inits@@Base>:
   375cc:	stp	x29, x30, [sp, #-112]!
   375d0:	mov	x29, sp
   375d4:	stp	x1, x2, [sp, #56]
   375d8:	add	x1, sp, #0x70
   375dc:	stp	x1, x1, [sp, #16]
   375e0:	add	x1, sp, #0x30
   375e4:	str	x1, [sp, #32]
   375e8:	mov	w1, #0xffffffc8            	// #-56
   375ec:	str	w1, [sp, #40]
   375f0:	str	wzr, [sp, #44]
   375f4:	stp	x3, x4, [sp, #72]
   375f8:	stp	x5, x6, [sp, #88]
   375fc:	str	x7, [sp, #104]
   37600:	cbnz	x0, 3760c <mpfr_inits@@Base+0x40>
   37604:	ldp	x29, x30, [sp], #112
   37608:	ret
   3760c:	bl	bc50 <mpfr_init@plt>
   37610:	ldr	w1, [sp, #40]
   37614:	ldr	x0, [sp, #16]
   37618:	tbnz	w1, #31, 37630 <mpfr_inits@@Base+0x64>
   3761c:	add	x1, x0, #0xf
   37620:	and	x1, x1, #0xfffffffffffffff8
   37624:	str	x1, [sp, #16]
   37628:	ldr	x0, [x0]
   3762c:	b	37600 <mpfr_inits@@Base+0x34>
   37630:	add	w2, w1, #0x8
   37634:	str	w2, [sp, #40]
   37638:	cmp	w2, #0x0
   3763c:	b.gt	3761c <mpfr_inits@@Base+0x50>
   37640:	ldr	x0, [sp, #24]
   37644:	add	x0, x0, w1, sxtw
   37648:	b	37628 <mpfr_inits@@Base+0x5c>

000000000003764c <mpfr_inits2@@Base>:
   3764c:	stp	x29, x30, [sp, #-112]!
   37650:	mov	x29, sp
   37654:	str	x19, [sp, #16]
   37658:	mov	x19, x0
   3765c:	mov	x0, x1
   37660:	add	x1, sp, #0x70
   37664:	stp	x1, x1, [sp, #32]
   37668:	add	x1, sp, #0x40
   3766c:	str	x1, [sp, #48]
   37670:	mov	w1, #0xffffffd0            	// #-48
   37674:	str	w1, [sp, #56]
   37678:	str	wzr, [sp, #60]
   3767c:	stp	x2, x3, [sp, #64]
   37680:	stp	x4, x5, [sp, #80]
   37684:	stp	x6, x7, [sp, #96]
   37688:	cbnz	x0, 37698 <mpfr_inits2@@Base+0x4c>
   3768c:	ldr	x19, [sp, #16]
   37690:	ldp	x29, x30, [sp], #112
   37694:	ret
   37698:	mov	x1, x19
   3769c:	bl	cb10 <mpfr_init2@plt>
   376a0:	ldr	w0, [sp, #56]
   376a4:	ldr	x1, [sp, #32]
   376a8:	tbnz	w0, #31, 376c0 <mpfr_inits2@@Base+0x74>
   376ac:	add	x0, x1, #0xf
   376b0:	and	x0, x0, #0xfffffffffffffff8
   376b4:	str	x0, [sp, #32]
   376b8:	ldr	x0, [x1]
   376bc:	b	37688 <mpfr_inits2@@Base+0x3c>
   376c0:	add	w2, w0, #0x8
   376c4:	str	w2, [sp, #56]
   376c8:	cmp	w2, #0x0
   376cc:	b.gt	376ac <mpfr_inits2@@Base+0x60>
   376d0:	ldr	x1, [sp, #40]
   376d4:	add	x1, x1, w0, sxtw
   376d8:	b	376b8 <mpfr_inits2@@Base+0x6c>

00000000000376dc <mpfr_clears@@Base>:
   376dc:	stp	x29, x30, [sp, #-112]!
   376e0:	mov	x29, sp
   376e4:	stp	x1, x2, [sp, #56]
   376e8:	add	x1, sp, #0x70
   376ec:	stp	x1, x1, [sp, #16]
   376f0:	add	x1, sp, #0x30
   376f4:	str	x1, [sp, #32]
   376f8:	mov	w1, #0xffffffc8            	// #-56
   376fc:	str	w1, [sp, #40]
   37700:	str	wzr, [sp, #44]
   37704:	stp	x3, x4, [sp, #72]
   37708:	stp	x5, x6, [sp, #88]
   3770c:	str	x7, [sp, #104]
   37710:	cbnz	x0, 3771c <mpfr_clears@@Base+0x40>
   37714:	ldp	x29, x30, [sp], #112
   37718:	ret
   3771c:	bl	c0f0 <mpfr_clear@plt>
   37720:	ldr	w1, [sp, #40]
   37724:	ldr	x0, [sp, #16]
   37728:	tbnz	w1, #31, 37740 <mpfr_clears@@Base+0x64>
   3772c:	add	x1, x0, #0xf
   37730:	and	x1, x1, #0xfffffffffffffff8
   37734:	str	x1, [sp, #16]
   37738:	ldr	x0, [x0]
   3773c:	b	37710 <mpfr_clears@@Base+0x34>
   37740:	add	w2, w1, #0x8
   37744:	str	w2, [sp, #40]
   37748:	cmp	w2, #0x0
   3774c:	b.gt	3772c <mpfr_clears@@Base+0x50>
   37750:	ldr	x0, [sp, #24]
   37754:	add	x0, x0, w1, sxtw
   37758:	b	37738 <mpfr_clears@@Base+0x5c>

000000000003775c <mpfr_sgn@@Base>:
   3775c:	ldr	x1, [x0, #16]
   37760:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   37764:	cmp	x1, x2
   37768:	b.gt	377c0 <mpfr_sgn@@Base+0x64>
   3776c:	mov	x3, #0x8000000000000001    	// #-9223372036854775807
   37770:	mov	w2, #0x0                   	// #0
   37774:	cmp	x1, x3
   37778:	b.eq	377c4 <mpfr_sgn@@Base+0x68>  // b.none
   3777c:	add	x3, x3, #0x1
   37780:	cmp	x1, x3
   37784:	b.ne	377c0 <mpfr_sgn@@Base+0x64>  // b.any
   37788:	stp	x29, x30, [sp, #-16]!
   3778c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   37790:	ldr	x1, [x0, #2592]
   37794:	add	x0, x0, #0xa20
   37798:	blr	x1
   3779c:	mrs	x1, tpidr_el0
   377a0:	add	x0, x1, x0
   377a4:	mov	x29, sp
   377a8:	ldr	w1, [x0]
   377ac:	orr	w1, w1, #0x10
   377b0:	str	w1, [x0]
   377b4:	mov	w0, w2
   377b8:	ldp	x29, x30, [sp], #16
   377bc:	ret
   377c0:	ldr	w2, [x0, #8]
   377c4:	mov	w0, w2
   377c8:	ret

00000000000377cc <mpfr_check@@Base>:
   377cc:	ldr	w1, [x0, #8]
   377d0:	cmp	w1, #0x1
   377d4:	ccmn	w1, #0x1, #0x4, ne  // ne = any
   377d8:	b.ne	378d0 <mpfr_check@@Base+0x104>  // b.any
   377dc:	ldr	x1, [x0]
   377e0:	mov	x2, #0xfffffffffffffefe    	// #-258
   377e4:	movk	x2, #0x7fff, lsl #48
   377e8:	sub	x4, x1, #0x1
   377ec:	cmp	x4, x2
   377f0:	b.hi	378d0 <mpfr_check@@Base+0x104>  // b.pmore
   377f4:	ldr	x2, [x0, #24]
   377f8:	cbz	x2, 378d0 <mpfr_check@@Base+0x104>
   377fc:	ldur	x3, [x2, #-8]
   37800:	cmp	x3, #0x0
   37804:	b.le	378d0 <mpfr_check@@Base+0x104>
   37808:	cmp	x1, x3, lsl #6
   3780c:	b.gt	378d0 <mpfr_check@@Base+0x104>
   37810:	mov	x5, x2
   37814:	add	x3, x2, x3, lsl #3
   37818:	ldr	x6, [x5], #8
   3781c:	cmp	x5, x3
   37820:	b.ne	37818 <mpfr_check@@Base+0x4c>  // b.any
   37824:	ldr	x3, [x0, #16]
   37828:	mov	x5, #0x8000000000000003    	// #-9223372036854775805
   3782c:	cmp	x3, x5
   37830:	b.gt	37850 <mpfr_check@@Base+0x84>
   37834:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   37838:	add	x0, x3, x0
   3783c:	cmp	x0, #0x1
   37840:	b.ls	378c8 <mpfr_check@@Base+0xfc>  // b.plast
   37844:	cmp	x3, x5
   37848:	cset	w0, eq  // eq = none
   3784c:	ret
   37850:	asr	x4, x4, #6
   37854:	ldr	x0, [x2, x4, lsl #3]
   37858:	tbz	x0, #63, 378d0 <mpfr_check@@Base+0x104>
   3785c:	ands	x1, x1, #0x3f
   37860:	b.eq	3787c <mpfr_check@@Base+0xb0>  // b.none
   37864:	ldr	x2, [x2]
   37868:	neg	w1, w1
   3786c:	mov	x0, #0xffffffffffffffff    	// #-1
   37870:	lsl	x1, x0, x1
   37874:	bics	xzr, x2, x1
   37878:	b.ne	378d0 <mpfr_check@@Base+0x104>  // b.any
   3787c:	stp	x29, x30, [sp, #-16]!
   37880:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   37884:	ldr	x1, [x0, #2528]
   37888:	add	x0, x0, #0x9e0
   3788c:	blr	x1
   37890:	mrs	x1, tpidr_el0
   37894:	mov	x29, sp
   37898:	ldr	x0, [x1, x0]
   3789c:	cmp	x3, x0
   378a0:	b.lt	378d8 <mpfr_check@@Base+0x10c>  // b.tstop
   378a4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   378a8:	ldr	x2, [x0, #2560]
   378ac:	add	x0, x0, #0xa00
   378b0:	blr	x2
   378b4:	ldr	x0, [x1, x0]
   378b8:	cmp	x3, x0
   378bc:	cset	w0, le
   378c0:	ldp	x29, x30, [sp], #16
   378c4:	ret
   378c8:	mov	w0, #0x1                   	// #1
   378cc:	ret
   378d0:	mov	w0, #0x0                   	// #0
   378d4:	ret
   378d8:	mov	w0, #0x0                   	// #0
   378dc:	b	378c0 <mpfr_check@@Base+0xf4>

00000000000378e0 <mpfr_get_version@@Base>:
   378e0:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   378e4:	add	x0, x0, #0xd08
   378e8:	ret

00000000000378ec <mpfr_mpn_exp@@Base>:
   378ec:	stp	x29, x30, [sp, #-224]!
   378f0:	cmp	x3, #0x0
   378f4:	mov	x29, sp
   378f8:	stp	x19, x20, [sp, #16]
   378fc:	stp	x21, x22, [sp, #32]
   37900:	stp	x23, x24, [sp, #48]
   37904:	stp	x25, x26, [sp, #64]
   37908:	stp	x27, x28, [sp, #80]
   3790c:	mov	x28, x0
   37910:	str	x1, [x29, #120]
   37914:	str	x3, [x29, #192]
   37918:	b.gt	37934 <mpfr_mpn_exp@@Base+0x48>
   3791c:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   37920:	add	x2, x2, #0xd0e
   37924:	mov	w1, #0x36                  	// #54
   37928:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   3792c:	add	x0, x0, #0xd14
   37930:	bl	cbd0 <mpfr_assert_fail@plt>
   37934:	sub	w0, w2, #0x2
   37938:	cmp	w0, #0x3c
   3793c:	b.ls	37950 <mpfr_mpn_exp@@Base+0x64>  // b.plast
   37940:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   37944:	mov	w1, #0x37                  	// #55
   37948:	add	x2, x2, #0xd1e
   3794c:	b	37928 <mpfr_mpn_exp@@Base+0x3c>
   37950:	sxtw	x2, w2
   37954:	mov	x1, #0x40                  	// #64
   37958:	clz	x0, x2
   3795c:	str	xzr, [x29, #216]
   37960:	mov	x19, x0
   37964:	sub	x1, x1, x0
   37968:	lsl	x0, x2, x0
   3796c:	str	x1, [x29, #160]
   37970:	str	x0, [x29, #176]
   37974:	lsl	x25, x4, #4
   37978:	mov	x20, x4
   3797c:	neg	x19, x19
   37980:	cmp	x25, #0x4, lsl #12
   37984:	b.hi	37a40 <mpfr_mpn_exp@@Base+0x154>  // b.pmore
   37988:	sub	sp, sp, x25
   3798c:	mov	x22, sp
   37990:	lsl	x0, x20, #3
   37994:	str	x0, [x29, #184]
   37998:	sub	x23, x0, #0x8
   3799c:	sub	x21, x20, #0x1
   379a0:	ldr	x0, [x29, #176]
   379a4:	lsl	x2, x21, #3
   379a8:	str	x0, [x28, x23]
   379ac:	mov	w1, #0x0                   	// #0
   379b0:	mov	x0, x28
   379b4:	sub	x19, x19, x21, lsl #6
   379b8:	bl	c1a0 <memset@plt>
   379bc:	mov	x21, #0x40                  	// #64
   379c0:	ldr	x0, [x29, #192]
   379c4:	mov	x2, x25
   379c8:	mov	w1, #0x0                   	// #0
   379cc:	add	x23, x22, x23
   379d0:	clz	x0, x0
   379d4:	sub	x21, x21, x0
   379d8:	mov	x0, x22
   379dc:	bl	c1a0 <memset@plt>
   379e0:	mov	w24, w21
   379e4:	lsl	x0, x20, #6
   379e8:	str	x0, [x29, #152]
   379ec:	sub	x0, x25, #0x8
   379f0:	str	x0, [x29, #168]
   379f4:	lsl	x0, x20, #3
   379f8:	sub	w26, w21, #0x2
   379fc:	add	x27, x22, x0
   37a00:	stp	wzr, wzr, [x29, #200]
   37a04:	cmn	w26, #0x1
   37a08:	b.ne	37a54 <mpfr_mpn_exp@@Base+0x168>  // b.any
   37a0c:	ldr	x0, [x29, #216]
   37a10:	add	w20, w24, #0x3
   37a14:	cbz	x0, 37a1c <mpfr_mpn_exp@@Base+0x130>
   37a18:	bl	c4a0 <mpfr_tmp_free@plt>
   37a1c:	ldr	x0, [x29, #120]
   37a20:	cmp	x21, w24, uxtw
   37a24:	ldr	w1, [x29, #200]
   37a28:	str	x19, [x0]
   37a2c:	ldr	w0, [x29, #204]
   37a30:	add	w19, w1, w0, asr #1
   37a34:	add	w19, w19, w20
   37a38:	csinv	x19, x19, xzr, ne  // ne = any
   37a3c:	b	37aa0 <mpfr_mpn_exp@@Base+0x1b4>
   37a40:	mov	x1, x25
   37a44:	add	x0, x29, #0xd8
   37a48:	bl	be40 <mpfr_tmp_allocate@plt>
   37a4c:	mov	x22, x0
   37a50:	b	37990 <mpfr_mpn_exp@@Base+0xa4>
   37a54:	mov	x1, #0x0                   	// #0
   37a58:	mov	x0, x28
   37a5c:	bl	cb30 <__gmpn_scan1@plt>
   37a60:	lsr	x25, x0, #6
   37a64:	add	x0, x22, x25, lsl #4
   37a68:	str	x0, [x29, #144]
   37a6c:	sub	x0, x20, x25
   37a70:	add	x1, x28, x25, lsl #3
   37a74:	mov	x2, x0
   37a78:	str	x0, [x29, #136]
   37a7c:	add	x0, x22, x25, lsl #4
   37a80:	bl	c440 <__gmpn_sqr@plt>
   37a84:	mov	x0, #0x4000000000000000    	// #4611686018427387904
   37a88:	cmn	x19, x0
   37a8c:	b.pl	37ac4 <mpfr_mpn_exp@@Base+0x1d8>  // b.nfrst
   37a90:	ldr	x0, [x29, #216]
   37a94:	mov	x19, #0xfffffffffffffffe    	// #-2
   37a98:	cbz	x0, 37aa0 <mpfr_mpn_exp@@Base+0x1b4>
   37a9c:	bl	c4a0 <mpfr_tmp_free@plt>
   37aa0:	mov	sp, x29
   37aa4:	mov	x0, x19
   37aa8:	ldp	x19, x20, [sp, #16]
   37aac:	ldp	x21, x22, [sp, #32]
   37ab0:	ldp	x23, x24, [sp, #48]
   37ab4:	ldp	x25, x26, [sp, #64]
   37ab8:	ldp	x27, x28, [sp, #80]
   37abc:	ldp	x29, x30, [sp], #224
   37ac0:	ret
   37ac4:	ldr	x0, [x29, #152]
   37ac8:	lsl	x19, x19, #1
   37acc:	adds	x4, x0, x19
   37ad0:	cset	x0, cs  // cs = hs, nlast
   37ad4:	tbnz	x19, #63, 37c10 <mpfr_mpn_exp@@Base+0x324>
   37ad8:	cbnz	x0, 37a90 <mpfr_mpn_exp@@Base+0x1a4>
   37adc:	mov	x19, x4
   37ae0:	tbnz	x4, #63, 37a90 <mpfr_mpn_exp@@Base+0x1a4>
   37ae4:	ldr	x0, [x29, #168]
   37ae8:	mov	w1, w24
   37aec:	stp	x1, x4, [x29, #104]
   37af0:	add	x0, x22, x0
   37af4:	str	x0, [x29, #128]
   37af8:	ldr	x0, [x29, #168]
   37afc:	ldr	x0, [x22, x0]
   37b00:	tbnz	x0, #63, 37c18 <mpfr_mpn_exp@@Base+0x32c>
   37b04:	mov	x2, x20
   37b08:	mov	x1, x27
   37b0c:	mov	w3, #0x1                   	// #1
   37b10:	mov	x0, x28
   37b14:	bl	bd40 <__gmpn_lshift@plt>
   37b18:	mov	x1, x23
   37b1c:	mov	x0, x23
   37b20:	mov	w3, #0x1                   	// #1
   37b24:	mov	x2, #0x1                   	// #1
   37b28:	bl	bd40 <__gmpn_lshift@plt>
   37b2c:	ldr	x1, [x28]
   37b30:	ldr	x4, [x29, #112]
   37b34:	orr	x1, x1, x0
   37b38:	mov	w0, w24
   37b3c:	str	x1, [x28]
   37b40:	cmp	x0, x21
   37b44:	ldr	w0, [x29, #204]
   37b48:	sub	x19, x4, #0x1
   37b4c:	cinc	w0, w0, ne  // ne = any
   37b50:	str	w0, [x29, #204]
   37b54:	mov	w0, w24
   37b58:	cmp	x0, x21
   37b5c:	b.ne	37b84 <mpfr_mpn_exp@@Base+0x298>  // b.any
   37b60:	cmp	x20, x25, lsl #1
   37b64:	b.cc	37b84 <mpfr_mpn_exp@@Base+0x298>  // b.lo, b.ul, b.last
   37b68:	ldr	x0, [x29, #144]
   37b6c:	mov	x1, #0x0                   	// #0
   37b70:	bl	cb30 <__gmpn_scan1@plt>
   37b74:	ldr	x1, [x29, #136]
   37b78:	sub	x25, x1, x25
   37b7c:	cmp	x0, x25, lsl #6
   37b80:	csel	w24, w24, w26, cs  // cs = hs, nlast
   37b84:	ldr	x0, [x29, #192]
   37b88:	asr	x0, x0, x26
   37b8c:	tbz	w0, #0, 37c08 <mpfr_mpn_exp@@Base+0x31c>
   37b90:	ldr	x3, [x29, #176]
   37b94:	mov	x1, x28
   37b98:	mov	x2, x20
   37b9c:	mov	x0, x23
   37ba0:	mov	w25, w24
   37ba4:	bl	cdd0 <__gmpn_mul_1@plt>
   37ba8:	ldr	x1, [x29, #128]
   37bac:	str	x0, [x1]
   37bb0:	ldr	x1, [x29, #160]
   37bb4:	add	x19, x19, x1
   37bb8:	tbnz	x0, #63, 37c34 <mpfr_mpn_exp@@Base+0x348>
   37bbc:	mov	x2, x20
   37bc0:	mov	x1, x27
   37bc4:	mov	w3, #0x1                   	// #1
   37bc8:	mov	x0, x28
   37bcc:	bl	bd40 <__gmpn_lshift@plt>
   37bd0:	sub	x19, x19, #0x1
   37bd4:	mov	x1, x23
   37bd8:	mov	x0, x23
   37bdc:	mov	w3, #0x1                   	// #1
   37be0:	mov	x2, #0x1                   	// #1
   37be4:	bl	bd40 <__gmpn_lshift@plt>
   37be8:	ldr	x1, [x28]
   37bec:	orr	x1, x1, x0
   37bf0:	str	x1, [x28]
   37bf4:	cmp	x25, x21
   37bf8:	b.ne	37c08 <mpfr_mpn_exp@@Base+0x31c>  // b.any
   37bfc:	ldr	x0, [x23]
   37c00:	cmp	x0, #0x0
   37c04:	csel	w24, w24, w26, eq  // eq = none
   37c08:	sub	w26, w26, #0x1
   37c0c:	b	37a04 <mpfr_mpn_exp@@Base+0x118>
   37c10:	mov	x19, x4
   37c14:	b	37ae4 <mpfr_mpn_exp@@Base+0x1f8>
   37c18:	cmp	x27, x28
   37c1c:	b.eq	37b54 <mpfr_mpn_exp@@Base+0x268>  // b.none
   37c20:	ldr	x2, [x29, #184]
   37c24:	mov	x1, x27
   37c28:	mov	x0, x28
   37c2c:	bl	ba90 <memcpy@plt>
   37c30:	b	37b54 <mpfr_mpn_exp@@Base+0x268>
   37c34:	cmp	x27, x28
   37c38:	b.eq	37c4c <mpfr_mpn_exp@@Base+0x360>  // b.none
   37c3c:	ldr	x2, [x29, #184]
   37c40:	mov	x1, x27
   37c44:	mov	x0, x28
   37c48:	bl	ba90 <memcpy@plt>
   37c4c:	ldr	w0, [x29, #200]
   37c50:	cmp	x25, x21
   37c54:	cinc	w0, w0, ne  // ne = any
   37c58:	str	w0, [x29, #200]
   37c5c:	b	37bf4 <mpfr_mpn_exp@@Base+0x308>

0000000000037c60 <mpfr_tmp_allocate@@Base>:
   37c60:	stp	x29, x30, [sp, #-48]!
   37c64:	mov	x29, sp
   37c68:	stp	x19, x20, [sp, #16]
   37c6c:	mov	x20, x0
   37c70:	mov	x0, #0x18                  	// #24
   37c74:	str	x21, [sp, #32]
   37c78:	mov	x21, x1
   37c7c:	bl	cd90 <mpfr_allocate_func@plt>
   37c80:	mov	x19, x0
   37c84:	mov	x0, x21
   37c88:	bl	cd90 <mpfr_allocate_func@plt>
   37c8c:	stp	x0, x21, [x19]
   37c90:	ldr	x0, [x20]
   37c94:	ldr	x21, [sp, #32]
   37c98:	str	x0, [x19, #16]
   37c9c:	str	x19, [x20]
   37ca0:	ldr	x0, [x19]
   37ca4:	ldp	x19, x20, [sp, #16]
   37ca8:	ldp	x29, x30, [sp], #48
   37cac:	ret

0000000000037cb0 <mpfr_tmp_free@@Base>:
   37cb0:	stp	x29, x30, [sp, #-32]!
   37cb4:	mov	x29, sp
   37cb8:	stp	x19, x20, [sp, #16]
   37cbc:	mov	x19, x0
   37cc0:	cbnz	x19, 37cd0 <mpfr_tmp_free@@Base+0x20>
   37cc4:	ldp	x19, x20, [sp, #16]
   37cc8:	ldp	x29, x30, [sp], #32
   37ccc:	ret
   37cd0:	ldp	x0, x1, [x19]
   37cd4:	bl	ccc0 <mpfr_free_func@plt>
   37cd8:	ldr	x20, [x19, #16]
   37cdc:	mov	x0, x19
   37ce0:	mov	x1, #0x18                  	// #24
   37ce4:	bl	ccc0 <mpfr_free_func@plt>
   37ce8:	mov	x19, x20
   37cec:	b	37cc0 <mpfr_tmp_free@@Base+0x10>
   37cf0:	stp	x29, x30, [sp, #-176]!
   37cf4:	mov	x29, sp
   37cf8:	stp	x21, x22, [sp, #32]
   37cfc:	mov	x21, x0
   37d00:	ldr	w0, [sp, #184]
   37d04:	str	x1, [sp, #96]
   37d08:	mov	x22, x7
   37d0c:	stp	x19, x20, [sp, #16]
   37d10:	mov	x19, x5
   37d14:	sxtw	x1, w0
   37d18:	add	w0, w0, #0x1
   37d1c:	stp	x23, x24, [sp, #48]
   37d20:	mov	x24, x6
   37d24:	sub	x0, x2, w0, sxtw
   37d28:	stp	x0, x1, [sp, #128]
   37d2c:	ldr	x1, [sp, #96]
   37d30:	stp	x25, x26, [sp, #64]
   37d34:	sub	x1, x1, #0x1
   37d38:	str	x1, [sp, #104]
   37d3c:	stp	x27, x28, [sp, #80]
   37d40:	add	x1, x21, x1, lsl #3
   37d44:	stp	x2, x3, [sp, #112]
   37d48:	str	x1, [sp, #144]
   37d4c:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   37d50:	add	x0, x0, x1
   37d54:	str	x4, [sp, #152]
   37d58:	str	x0, [sp, #160]
   37d5c:	mov	x25, #0x0                   	// #0
   37d60:	mov	x20, #0x8000000000000000    	// #-9223372036854775808
   37d64:	ldr	x0, [sp, #152]
   37d68:	cmp	x25, x0
   37d6c:	b.ne	37dcc <mpfr_tmp_free@@Base+0x11c>  // b.any
   37d70:	ldr	x0, [sp, #144]
   37d74:	ldr	x3, [sp, #104]
   37d78:	ldr	x1, [x0]
   37d7c:	mov	x0, #0x0                   	// #0
   37d80:	asr	x2, x1, #63
   37d84:	ldr	x1, [x21, x3, lsl #3]
   37d88:	cmp	x1, x2
   37d8c:	b.ne	38088 <mpfr_tmp_free@@Base+0x3d8>  // b.any
   37d90:	sub	x3, x3, #0x1
   37d94:	add	x0, x0, #0x40
   37d98:	cmn	x3, #0x1
   37d9c:	b.ne	37d84 <mpfr_tmp_free@@Base+0xd4>  // b.any
   37da0:	cbnz	x2, 38094 <mpfr_tmp_free@@Base+0x3e4>
   37da4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   37da8:	cmp	x20, x0
   37dac:	b.eq	38190 <mpfr_tmp_free@@Base+0x4e0>  // b.none
   37db0:	ldr	x0, [sp, #160]
   37db4:	cmp	x0, x20
   37db8:	b.le	38184 <mpfr_tmp_free@@Base+0x4d4>
   37dbc:	adrp	x2, 5a000 <mpfr_bases@@Base+0x2a8>
   37dc0:	mov	w1, #0x200                 	// #512
   37dc4:	add	x2, x2, #0x595
   37dc8:	b	38164 <mpfr_tmp_free@@Base+0x4b4>
   37dcc:	ldr	x0, [sp, #120]
   37dd0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   37dd4:	ldr	x0, [x0, x25, lsl #3]
   37dd8:	ldr	x4, [x0, #16]
   37ddc:	cmp	x4, x1
   37de0:	b.le	37e14 <mpfr_tmp_free@@Base+0x164>
   37de4:	ldr	x2, [x0]
   37de8:	ldr	x7, [x0, #24]
   37dec:	sub	x6, x2, #0x1
   37df0:	asr	x6, x6, #6
   37df4:	add	x26, x6, #0x1
   37df8:	sub	x0, x4, x26, lsl #6
   37dfc:	subs	x1, x0, x19
   37e00:	b.pl	37ed4 <mpfr_tmp_free@@Base+0x224>  // b.nfrst
   37e04:	cmp	x4, x19
   37e08:	b.gt	37e1c <mpfr_tmp_free@@Base+0x16c>
   37e0c:	cmp	x4, x20
   37e10:	csel	x20, x20, x4, le
   37e14:	add	x25, x25, #0x1
   37e18:	b	37d64 <mpfr_tmp_free@@Base+0xb4>
   37e1c:	sub	x0, x19, x0
   37e20:	mov	x1, #0x40                  	// #64
   37e24:	sub	x2, x4, x2
   37e28:	cmp	x2, x19
   37e2c:	sdiv	x1, x0, x1
   37e30:	csel	x20, x20, x19, ge  // ge = tcont
   37e34:	cmp	x4, x24
   37e38:	sub	x26, x26, x1
   37e3c:	add	x7, x7, x1, lsl #3
   37e40:	b.le	37ecc <mpfr_tmp_free@@Base+0x21c>
   37e44:	sub	x4, x4, x24
   37e48:	mov	x1, #0x40                  	// #64
   37e4c:	and	w23, w4, #0x3f
   37e50:	sdiv	x1, x4, x1
   37e54:	sub	x26, x26, x1
   37e58:	ands	x1, x0, #0x3f
   37e5c:	b.eq	37f5c <mpfr_tmp_free@@Base+0x2ac>  // b.none
   37e60:	negs	x5, x0
   37e64:	mov	x2, x26
   37e68:	and	x5, x5, #0x3f
   37e6c:	mov	x0, x22
   37e70:	csneg	x27, x1, x5, mi  // mi = first
   37e74:	mov	x1, x7
   37e78:	mov	w3, w27
   37e7c:	bl	bd60 <__gmpn_rshift@plt>
   37e80:	add	w4, w23, w27
   37e84:	cmp	w4, #0x3f
   37e88:	b.ls	37e94 <mpfr_tmp_free@@Base+0x1e4>  // b.plast
   37e8c:	sub	x26, x26, #0x1
   37e90:	sub	w4, w4, #0x40
   37e94:	cbz	w4, 37ebc <mpfr_tmp_free@@Base+0x20c>
   37e98:	lsl	x0, x26, #3
   37e9c:	mov	w1, #0x40                  	// #64
   37ea0:	sub	x0, x0, #0x8
   37ea4:	sub	w4, w1, w4
   37ea8:	mov	x1, #0xffffffffffffffff    	// #-1
   37eac:	lsl	x4, x1, x4
   37eb0:	ldr	x1, [x22, x0]
   37eb4:	bic	x4, x1, x4
   37eb8:	str	x4, [x22, x0]
   37ebc:	mov	x7, x22
   37ec0:	mov	x27, x21
   37ec4:	ldr	x28, [sp, #96]
   37ec8:	b	37f68 <mpfr_tmp_free@@Base+0x2b8>
   37ecc:	mov	w23, #0x0                   	// #0
   37ed0:	b	37e58 <mpfr_tmp_free@@Base+0x1a8>
   37ed4:	ldr	x0, [sp, #96]
   37ed8:	asr	x5, x1, #6
   37edc:	sub	x28, x0, x1, asr #6
   37ee0:	cmp	x28, #0x0
   37ee4:	b.le	37e14 <mpfr_tmp_free@@Base+0x164>
   37ee8:	add	x27, x21, x5, lsl #3
   37eec:	cmp	x4, x24
   37ef0:	b.le	37f54 <mpfr_tmp_free@@Base+0x2a4>
   37ef4:	sub	x4, x4, x24
   37ef8:	mov	x0, #0x40                  	// #64
   37efc:	sdiv	x0, x4, x0
   37f00:	sub	x26, x26, x0
   37f04:	cmp	x26, #0x0
   37f08:	b.le	37e14 <mpfr_tmp_free@@Base+0x164>
   37f0c:	and	w23, w4, #0x3f
   37f10:	ands	x9, x1, #0x3f
   37f14:	b.eq	37f64 <mpfr_tmp_free@@Base+0x2b4>  // b.none
   37f18:	mov	w3, w9
   37f1c:	mov	x2, x26
   37f20:	mov	x1, x7
   37f24:	mov	x0, x22
   37f28:	str	x9, [sp, #168]
   37f2c:	bl	bd40 <__gmpn_lshift@plt>
   37f30:	ldr	x9, [sp, #168]
   37f34:	subs	w23, w23, w9
   37f38:	b.pl	37fec <mpfr_tmp_free@@Base+0x33c>  // b.nfrst
   37f3c:	add	w23, w23, #0x40
   37f40:	mov	x7, x22
   37f44:	str	x0, [x22, x26, lsl #3]
   37f48:	add	x26, x26, #0x1
   37f4c:	sub	x26, x26, #0x1
   37f50:	b	37f6c <mpfr_tmp_free@@Base+0x2bc>
   37f54:	mov	w23, #0x0                   	// #0
   37f58:	b	37f10 <mpfr_tmp_free@@Base+0x260>
   37f5c:	ldr	x28, [sp, #96]
   37f60:	mov	x27, x21
   37f64:	cbnz	w23, 37f4c <mpfr_tmp_free@@Base+0x29c>
   37f68:	mov	w23, #0x0                   	// #0
   37f6c:	ldr	x0, [sp, #120]
   37f70:	ldr	x0, [x0, x25, lsl #3]
   37f74:	ldr	w0, [x0, #8]
   37f78:	cmp	w0, #0x0
   37f7c:	b.le	38014 <mpfr_tmp_free@@Base+0x364>
   37f80:	cbz	x26, 38198 <mpfr_tmp_free@@Base+0x4e8>
   37f84:	mov	x3, x26
   37f88:	mov	x2, x7
   37f8c:	mov	x1, x27
   37f90:	mov	x0, x27
   37f94:	str	x7, [sp, #168]
   37f98:	bl	c630 <__gmpn_add_n@plt>
   37f9c:	cbz	w23, 37fc0 <mpfr_tmp_free@@Base+0x310>
   37fa0:	ldr	x7, [sp, #168]
   37fa4:	mov	w1, #0x40                  	// #64
   37fa8:	sub	w4, w1, w23
   37fac:	mov	x1, #0xffffffffffffffff    	// #-1
   37fb0:	lsl	x4, x1, x4
   37fb4:	ldr	x1, [x7, x26, lsl #3]
   37fb8:	bic	x4, x1, x4
   37fbc:	add	x0, x0, x4
   37fc0:	cmp	x26, x28
   37fc4:	b.ge	37e14 <mpfr_tmp_free@@Base+0x164>  // b.tcont
   37fc8:	lsl	x1, x26, #3
   37fcc:	add	x2, x27, x26, lsl #3
   37fd0:	ldr	x3, [x27, x1]
   37fd4:	adds	x0, x0, x3
   37fd8:	str	x0, [x27, x1]
   37fdc:	b.cc	37e14 <mpfr_tmp_free@@Base+0x164>  // b.lo, b.ul, b.last
   37fe0:	sub	x6, x28, x26
   37fe4:	mov	x0, #0x1                   	// #1
   37fe8:	b	38008 <mpfr_tmp_free@@Base+0x358>
   37fec:	mov	x7, x22
   37ff0:	b	37f64 <mpfr_tmp_free@@Base+0x2b4>
   37ff4:	ldr	x1, [x2, x0, lsl #3]
   37ff8:	add	x1, x1, #0x1
   37ffc:	str	x1, [x2, x0, lsl #3]
   38000:	add	x0, x0, #0x1
   38004:	cbnz	x1, 37e14 <mpfr_tmp_free@@Base+0x164>
   38008:	cmp	x6, x0
   3800c:	b.gt	37ff4 <mpfr_tmp_free@@Base+0x344>
   38010:	b	37e14 <mpfr_tmp_free@@Base+0x164>
   38014:	cbz	x26, 381a4 <mpfr_tmp_free@@Base+0x4f4>
   38018:	mov	x2, x7
   3801c:	mov	x3, x26
   38020:	mov	x1, x27
   38024:	mov	x0, x27
   38028:	str	x7, [sp, #168]
   3802c:	bl	bee0 <__gmpn_sub_n@plt>
   38030:	ldr	x7, [sp, #168]
   38034:	cbnz	w23, 381ac <mpfr_tmp_free@@Base+0x4fc>
   38038:	cmp	x26, x28
   3803c:	b.ge	37e14 <mpfr_tmp_free@@Base+0x164>  // b.tcont
   38040:	lsl	x3, x26, #3
   38044:	add	x1, x27, x26, lsl #3
   38048:	ldr	x2, [x27, x3]
   3804c:	sub	x4, x2, x0
   38050:	str	x4, [x27, x3]
   38054:	cmp	x0, x2
   38058:	b.ls	37e14 <mpfr_tmp_free@@Base+0x164>  // b.plast
   3805c:	sub	x6, x28, x26
   38060:	mov	x0, #0x1                   	// #1
   38064:	b	3807c <mpfr_tmp_free@@Base+0x3cc>
   38068:	ldr	x2, [x1, x0, lsl #3]
   3806c:	sub	x3, x2, #0x1
   38070:	str	x3, [x1, x0, lsl #3]
   38074:	add	x0, x0, #0x1
   38078:	cbnz	x2, 37e14 <mpfr_tmp_free@@Base+0x164>
   3807c:	cmp	x6, x0
   38080:	b.gt	38068 <mpfr_tmp_free@@Base+0x3b8>
   38084:	b	37e14 <mpfr_tmp_free@@Base+0x164>
   38088:	eor	x1, x1, x2
   3808c:	clz	x1, x1
   38090:	add	x0, x0, x1
   38094:	ldr	x1, [sp, #112]
   38098:	ldr	x2, [sp, #136]
   3809c:	add	x24, x19, x1
   380a0:	sub	x1, x24, x0
   380a4:	add	x24, x2, x20
   380a8:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   380ac:	cmp	x20, x2
   380b0:	b.eq	380cc <mpfr_tmp_free@@Base+0x41c>  // b.none
   380b4:	cmp	x1, x24
   380b8:	b.lt	38104 <mpfr_tmp_free@@Base+0x454>  // b.tstop
   380bc:	ldr	x3, [sp, #192]
   380c0:	sub	x2, x1, x24
   380c4:	cmp	x2, x3
   380c8:	b.cc	38104 <mpfr_tmp_free@@Base+0x454>  // b.lo, b.ul, b.last
   380cc:	ldr	x2, [sp, #200]
   380d0:	cbz	x2, 380e8 <mpfr_tmp_free@@Base+0x438>
   380d4:	str	x1, [x2]
   380d8:	ldr	x1, [sp, #208]
   380dc:	str	x19, [x1]
   380e0:	ldr	x1, [sp, #216]
   380e4:	str	x20, [x1]
   380e8:	ldp	x19, x20, [sp, #16]
   380ec:	ldp	x21, x22, [sp, #32]
   380f0:	ldp	x23, x24, [sp, #48]
   380f4:	ldp	x25, x26, [sp, #64]
   380f8:	ldp	x27, x28, [sp, #80]
   380fc:	ldp	x29, x30, [sp], #176
   38100:	ret
   38104:	subs	x24, x24, x1
   38108:	sub	x0, x0, #0x2
   3810c:	csel	x24, x24, xzr, pl  // pl = nfrst
   38110:	sub	x24, x0, x24
   38114:	ldr	x1, [sp, #96]
   38118:	asr	x2, x24, #6
   3811c:	ands	x3, x24, #0x3f
   38120:	lsl	x25, x2, #3
   38124:	add	x0, x21, x2, lsl #3
   38128:	sub	x2, x1, x2
   3812c:	mov	x1, x21
   38130:	b.eq	38170 <mpfr_tmp_free@@Base+0x4c0>  // b.none
   38134:	bl	bd40 <__gmpn_lshift@plt>
   38138:	mov	x2, x25
   3813c:	mov	x0, x21
   38140:	mov	w1, #0x0                   	// #0
   38144:	bl	c1a0 <memset@plt>
   38148:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3814c:	add	x0, x24, x0
   38150:	cmp	x0, x19
   38154:	b.le	38178 <mpfr_tmp_free@@Base+0x4c8>
   38158:	adrp	x2, 5a000 <mpfr_bases@@Base+0x2a8>
   3815c:	add	x2, x2, #0x560
   38160:	mov	w1, #0x1f3                 	// #499
   38164:	adrp	x0, 5a000 <mpfr_bases@@Base+0x2a8>
   38168:	add	x0, x0, #0x58f
   3816c:	bl	cbd0 <mpfr_assert_fail@plt>
   38170:	bl	bb60 <__gmpn_copyd@plt>
   38174:	b	38138 <mpfr_tmp_free@@Base+0x488>
   38178:	sub	x19, x19, x24
   3817c:	mov	x24, x20
   38180:	b	37d5c <mpfr_tmp_free@@Base+0xac>
   38184:	ldr	x0, [sp, #128]
   38188:	sub	x19, x20, x0
   3818c:	b	3817c <mpfr_tmp_free@@Base+0x4cc>
   38190:	mov	x0, #0x0                   	// #0
   38194:	b	380e8 <mpfr_tmp_free@@Base+0x438>
   38198:	mov	x0, #0x0                   	// #0
   3819c:	cbnz	w23, 37fa4 <mpfr_tmp_free@@Base+0x2f4>
   381a0:	b	37fc8 <mpfr_tmp_free@@Base+0x318>
   381a4:	mov	x0, #0x0                   	// #0
   381a8:	cbz	w23, 38040 <mpfr_tmp_free@@Base+0x390>
   381ac:	mov	w1, #0x40                  	// #64
   381b0:	sub	w4, w1, w23
   381b4:	mov	x1, #0xffffffffffffffff    	// #-1
   381b8:	lsl	x4, x1, x4
   381bc:	ldr	x1, [x7, x26, lsl #3]
   381c0:	bic	x4, x1, x4
   381c4:	add	x0, x0, x4
   381c8:	b	38038 <mpfr_tmp_free@@Base+0x388>
   381cc:	stp	x29, x30, [sp, #-256]!
   381d0:	sub	x5, x5, #0x1
   381d4:	clz	x5, x5
   381d8:	mov	x29, sp
   381dc:	stp	x21, x22, [sp, #32]
   381e0:	str	x0, [x29, #200]
   381e4:	ldr	x21, [x0, #24]
   381e8:	mov	w0, #0x40                  	// #64
   381ec:	sub	w0, w0, w5
   381f0:	str	w0, [x29, #172]
   381f4:	ldr	x0, [x29, #200]
   381f8:	stp	x23, x24, [sp, #48]
   381fc:	mov	w24, #0x41                  	// #65
   38200:	sub	w5, w24, w5
   38204:	stp	x19, x20, [sp, #16]
   38208:	mov	w19, w3
   3820c:	ldr	x0, [x0]
   38210:	str	x0, [x29, #208]
   38214:	sxtw	x0, w5
   38218:	str	x0, [x29, #112]
   3821c:	ldrsw	x0, [x29, #172]
   38220:	str	x0, [x29, #144]
   38224:	ldr	x0, [x29, #208]
   38228:	stp	x25, x26, [sp, #64]
   3822c:	stp	x2, x1, [x29, #120]
   38230:	add	x20, x0, w5, sxtw
   38234:	ldr	w0, [x29, #172]
   38238:	stp	x27, x28, [sp, #80]
   3823c:	sub	sp, sp, #0x30
   38240:	add	x20, x20, w0, sxtw
   38244:	str	x4, [x29, #216]
   38248:	add	x20, x20, #0x1
   3824c:	str	xzr, [x29, #232]
   38250:	ldr	x0, [x29, #208]
   38254:	asr	x20, x20, #6
   38258:	add	x20, x20, #0x1
   3825c:	lsl	x22, x20, #6
   38260:	sub	x0, x22, x0
   38264:	sub	x24, x22, w5, sxtw
   38268:	sub	x0, x0, #0x1
   3826c:	asr	x0, x0, #6
   38270:	str	x0, [x29, #136]
   38274:	add	x26, x0, #0x1
   38278:	add	x0, x24, #0x3e
   3827c:	asr	x0, x0, #6
   38280:	add	x0, x0, #0x1
   38284:	str	x0, [x29, #160]
   38288:	add	x1, x20, x0
   3828c:	add	x1, x1, x26
   38290:	lsl	x1, x1, #3
   38294:	cmp	x1, #0x4, lsl #12
   38298:	b.hi	383ac <mpfr_tmp_free@@Base+0x6fc>  // b.pmore
   3829c:	add	x1, x1, #0xf
   382a0:	and	x1, x1, #0xfffffffffffffff0
   382a4:	sub	sp, sp, x1
   382a8:	add	x0, sp, #0x30
   382ac:	str	x0, [x29, #176]
   382b0:	lsl	x25, x20, #3
   382b4:	ldr	x0, [x29, #160]
   382b8:	mov	x2, x25
   382bc:	ldr	x1, [x29, #176]
   382c0:	add	x23, x1, x0, lsl #3
   382c4:	mov	w1, #0x0                   	// #0
   382c8:	mov	x0, x23
   382cc:	bl	c1a0 <memset@plt>
   382d0:	ldr	x1, [x29, #216]
   382d4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   382d8:	add	x0, x24, x0
   382dc:	cmp	x0, x1
   382e0:	b.le	382fc <mpfr_tmp_free@@Base+0x64c>
   382e4:	adrp	x2, 5a000 <mpfr_bases@@Base+0x2a8>
   382e8:	adrp	x0, 5a000 <mpfr_bases@@Base+0x2a8>
   382ec:	add	x2, x2, #0x5c5
   382f0:	add	x0, x0, #0x58f
   382f4:	mov	w1, #0x278                 	// #632
   382f8:	bl	cbd0 <mpfr_assert_fail@plt>
   382fc:	add	x0, x29, #0xd8
   38300:	str	x0, [sp, #40]
   38304:	add	x0, x29, #0xf0
   38308:	str	x0, [sp, #32]
   3830c:	add	x0, x29, #0xf8
   38310:	str	x0, [sp, #24]
   38314:	ldr	x0, [x29, #208]
   38318:	mov	x2, x22
   3831c:	ldp	x4, x3, [x29, #120]
   38320:	add	x0, x0, #0x3
   38324:	str	x0, [sp, #16]
   38328:	mov	x1, x20
   3832c:	ldr	w0, [x29, #172]
   38330:	ldr	x7, [x29, #176]
   38334:	str	w0, [sp, #8]
   38338:	ldr	x6, [x29, #216]
   3833c:	ldr	x0, [x29, #160]
   38340:	str	x0, [sp]
   38344:	sub	x5, x6, x24
   38348:	mov	x0, x23
   3834c:	str	x5, [x29, #240]
   38350:	bl	37cf0 <mpfr_tmp_free@@Base+0x40>
   38354:	str	x0, [x29, #152]
   38358:	cbnz	x0, 383b8 <mpfr_tmp_free@@Base+0x708>
   3835c:	ldr	x1, [x29, #200]
   38360:	cmp	w19, #0x3
   38364:	mov	w0, #0xffffffff            	// #-1
   38368:	cneg	w0, w0, ne  // ne = any
   3836c:	str	w0, [x1, #8]
   38370:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   38374:	str	x0, [x1, #16]
   38378:	ldr	x0, [x29, #232]
   3837c:	cbz	x0, 38384 <mpfr_tmp_free@@Base+0x6d4>
   38380:	bl	c4a0 <mpfr_tmp_free@plt>
   38384:	mov	w24, #0x0                   	// #0
   38388:	mov	sp, x29
   3838c:	mov	w0, w24
   38390:	ldp	x19, x20, [sp, #16]
   38394:	ldp	x21, x22, [sp, #32]
   38398:	ldp	x23, x24, [sp, #48]
   3839c:	ldp	x25, x26, [sp, #64]
   383a0:	ldp	x27, x28, [sp, #80]
   383a4:	ldp	x29, x30, [sp], #256
   383a8:	ret
   383ac:	add	x0, x29, #0xe8
   383b0:	bl	be40 <mpfr_tmp_allocate@plt>
   383b4:	b	382ac <mpfr_tmp_free@@Base+0x5fc>
   383b8:	add	x25, x23, x25
   383bc:	mov	w22, #0x1                   	// #1
   383c0:	ldp	x2, x20, [x29, #240]
   383c4:	ldur	x24, [x25, #-8]
   383c8:	ldr	x0, [x29, #208]
   383cc:	sub	x20, x20, x0
   383d0:	lsr	x0, x24, #63
   383d4:	str	x0, [x29, #192]
   383d8:	cmp	x0, #0x0
   383dc:	cneg	w22, w22, ne  // ne = any
   383e0:	cmp	w19, #0x5
   383e4:	b.ne	38428 <mpfr_tmp_free@@Base+0x778>  // b.any
   383e8:	cmp	x2, x20
   383ec:	b.ge	38af4 <mpfr_tmp_free@@Base+0xe44>  // b.tcont
   383f0:	sub	x2, x20, x2
   383f4:	asr	x0, x2, #6
   383f8:	ands	x2, x2, #0x3f
   383fc:	b.eq	38418 <mpfr_tmp_free@@Base+0x768>  // b.none
   38400:	ldr	x25, [x23, x0, lsl #3]
   38404:	sub	w2, w2, #0x1
   38408:	lsr	x2, x25, x2
   3840c:	and	w25, w2, #0x1
   38410:	mov	w24, #0x0                   	// #0
   38414:	b	387dc <mpfr_tmp_free@@Base+0xb2c>
   38418:	add	x0, x23, x0, lsl #3
   3841c:	ldur	x25, [x0, #-8]
   38420:	lsr	x25, x25, #63
   38424:	b	38410 <mpfr_tmp_free@@Base+0x760>
   38428:	cmp	x2, x20
   3842c:	ldr	x6, [x29, #216]
   38430:	b.ge	3879c <mpfr_tmp_free@@Base+0xaec>  // b.tcont
   38434:	sub	x11, x20, x2
   38438:	and	x3, x11, #0x3f
   3843c:	asr	x1, x11, #6
   38440:	mov	w7, w3
   38444:	lsl	x5, x1, #3
   38448:	ldr	x0, [x23, x5]
   3844c:	lsr	x4, x0, x3
   38450:	and	x4, x4, #0x1
   38454:	str	x4, [x29, #184]
   38458:	cbz	x3, 384b4 <mpfr_tmp_free@@Base+0x804>
   3845c:	sub	w10, w3, #0x1
   38460:	lsr	x10, x0, x10
   38464:	and	x28, x10, #0x1
   38468:	mov	x4, #0x8000000000000000    	// #-9223372036854775808
   3846c:	cmp	x6, x4
   38470:	b.ne	3852c <mpfr_tmp_free@@Base+0x87c>  // b.any
   38474:	cbz	x28, 3848c <mpfr_tmp_free@@Base+0x7dc>
   38478:	ldr	w2, [x29, #184]
   3847c:	cmp	w19, #0x0
   38480:	eor	w2, w2, #0x1
   38484:	csel	w2, w2, wzr, eq  // eq = none
   38488:	cbz	w2, 3857c <mpfr_tmp_free@@Base+0x8cc>
   3848c:	tst	x11, #0x3e
   38490:	b.eq	384c4 <mpfr_tmp_free@@Base+0x814>  // b.none
   38494:	sub	w3, w3, #0x1
   38498:	mov	x2, #0xffffffffffffffff    	// #-1
   3849c:	lsl	x3, x2, x3
   384a0:	bics	xzr, x0, x3
   384a4:	cset	w24, ne  // ne = any
   384a8:	cbnz	w24, 38508 <mpfr_tmp_free@@Base+0x858>
   384ac:	mov	w24, #0x0                   	// #0
   384b0:	b	384ec <mpfr_tmp_free@@Base+0x83c>
   384b4:	add	x4, x23, x5
   384b8:	ldur	x10, [x4, #-8]
   384bc:	lsr	x28, x10, #63
   384c0:	b	38468 <mpfr_tmp_free@@Base+0x7b8>
   384c4:	cbnz	x3, 384ac <mpfr_tmp_free@@Base+0x7fc>
   384c8:	add	x0, x23, x5
   384cc:	sub	x1, x1, #0x1
   384d0:	ldur	x0, [x0, #-8]
   384d4:	tst	x0, #0x7fffffffffffffff
   384d8:	b	384a4 <mpfr_tmp_free@@Base+0x7f4>
   384dc:	sub	x1, x1, #0x1
   384e0:	ldr	x0, [x23, x1, lsl #3]
   384e4:	cmp	x0, #0x0
   384e8:	cset	w24, ne  // ne = any
   384ec:	eor	w0, w24, #0x1
   384f0:	cmp	x1, #0x0
   384f4:	and	w0, w0, #0x1
   384f8:	ccmp	w0, #0x0, #0x4, gt
   384fc:	b.ne	384dc <mpfr_tmp_free@@Base+0x82c>  // b.any
   38500:	tst	w0, w28
   38504:	b.ne	38968 <mpfr_tmp_free@@Base+0xcb8>  // b.any
   38508:	sub	w1, w19, #0x1
   3850c:	cmp	w1, #0x3
   38510:	b.hi	3894c <mpfr_tmp_free@@Base+0xc9c>  // b.pmore
   38514:	adrp	x0, 5a000 <mpfr_bases@@Base+0x2a8>
   38518:	add	x0, x0, #0x608
   3851c:	ldrh	w0, [x0, w1, uxtw #1]
   38520:	adr	x1, 3852c <mpfr_tmp_free@@Base+0x87c>
   38524:	add	x0, x1, w0, sxth #2
   38528:	br	x0
   3852c:	ldr	x4, [x29, #144]
   38530:	add	x4, x4, x6
   38534:	sub	x4, x20, x4
   38538:	cbnz	x3, 38584 <mpfr_tmp_free@@Base+0x8d4>
   3853c:	add	x0, x23, x5
   38540:	sub	x1, x1, #0x1
   38544:	mov	w7, #0x40                  	// #64
   38548:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
   3854c:	ldur	x0, [x0, #-8]
   38550:	sxtw	x5, w7
   38554:	cmp	x4, w7, sxtw
   38558:	b.ge	385d0 <mpfr_tmp_free@@Base+0x920>  // b.tcont
   3855c:	sub	w4, w7, w4
   38560:	lsr	x0, x0, x4
   38564:	lsr	x3, x3, x4
   38568:	mov	x4, #0x0                   	// #0
   3856c:	ands	x0, x0, x3
   38570:	b.ne	385d8 <mpfr_tmp_free@@Base+0x928>  // b.any
   38574:	cbz	x28, 385f4 <mpfr_tmp_free@@Base+0x944>
   38578:	cbz	w19, 38614 <mpfr_tmp_free@@Base+0x964>
   3857c:	mov	w24, #0x1                   	// #1
   38580:	b	38508 <mpfr_tmp_free@@Base+0x858>
   38584:	cmp	x3, #0x1
   38588:	b.ne	385ac <mpfr_tmp_free@@Base+0x8fc>  // b.any
   3858c:	cmp	x11, #0x3f
   38590:	b.le	385c0 <mpfr_tmp_free@@Base+0x910>
   38594:	add	x0, x23, x5
   38598:	sub	x1, x1, #0x1
   3859c:	mov	w7, #0x41                  	// #65
   385a0:	mov	x3, #0xffffffffffffffff    	// #-1
   385a4:	ldur	x0, [x0, #-8]
   385a8:	b	38550 <mpfr_tmp_free@@Base+0x8a0>
   385ac:	sub	w5, w3, #0x1
   385b0:	mov	x3, #0x1                   	// #1
   385b4:	lsl	x3, x3, x5
   385b8:	sub	x3, x3, #0x1
   385bc:	b	38550 <mpfr_tmp_free@@Base+0x8a0>
   385c0:	mov	w7, #0x41                  	// #65
   385c4:	mov	x3, #0xffffffffffffffff    	// #-1
   385c8:	mov	x0, #0x0                   	// #0
   385cc:	b	38550 <mpfr_tmp_free@@Base+0x8a0>
   385d0:	sub	x4, x4, x5
   385d4:	b	3856c <mpfr_tmp_free@@Base+0x8bc>
   385d8:	cmp	x3, x0
   385dc:	b.ne	3857c <mpfr_tmp_free@@Base+0x8cc>  // b.any
   385e0:	cbnz	x28, 3861c <mpfr_tmp_free@@Base+0x96c>
   385e4:	cbnz	w19, 3857c <mpfr_tmp_free@@Base+0x8cc>
   385e8:	mov	w27, #0x2                   	// #2
   385ec:	mov	x0, #0xffffffffffffffff    	// #-1
   385f0:	b	385fc <mpfr_tmp_free@@Base+0x94c>
   385f4:	mov	x0, x28
   385f8:	mov	w27, #0x1                   	// #1
   385fc:	cmp	w27, #0x0
   38600:	ccmp	x4, #0x0, #0x4, ne  // ne = any
   38604:	b.ne	38624 <mpfr_tmp_free@@Base+0x974>  // b.any
   38608:	mov	w24, #0x1                   	// #1
   3860c:	cbnz	w27, 3862c <mpfr_tmp_free@@Base+0x97c>
   38610:	b	38508 <mpfr_tmp_free@@Base+0x858>
   38614:	mov	w27, #0x2                   	// #2
   38618:	b	385fc <mpfr_tmp_free@@Base+0x94c>
   3861c:	mov	w27, #0x1                   	// #1
   38620:	b	385ec <mpfr_tmp_free@@Base+0x93c>
   38624:	cbnz	x1, 38760 <mpfr_tmp_free@@Base+0xab0>
   38628:	cbnz	x0, 3857c <mpfr_tmp_free@@Base+0x8cc>
   3862c:	lsl	x0, x26, #6
   38630:	str	x0, [x29, #104]
   38634:	ldr	x0, [x29, #144]
   38638:	add	x3, x0, x6
   3863c:	cmp	x2, x3
   38640:	b.gt	389ac <mpfr_tmp_free@@Base+0xcfc>
   38644:	sub	x3, x3, x2
   38648:	add	x3, x3, #0x2
   3864c:	asr	x2, x3, #6
   38650:	ands	x3, x3, #0x3f
   38654:	b.eq	38980 <mpfr_tmp_free@@Base+0xcd0>  // b.none
   38658:	ldr	x0, [x29, #136]
   3865c:	mov	w5, #0x40                  	// #64
   38660:	mov	x1, x23
   38664:	sub	w3, w5, w3
   38668:	sub	x24, x0, x2
   3866c:	add	x2, x2, #0x1
   38670:	str	w3, [x29, #144]
   38674:	add	x0, x25, x24, lsl #3
   38678:	bl	bd40 <__gmpn_lshift@plt>
   3867c:	ldr	w3, [x29, #144]
   38680:	sxtw	x3, w3
   38684:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   38688:	ldr	x1, [x29, #240]
   3868c:	add	x3, x3, x24, lsl #6
   38690:	add	x0, x3, x0
   38694:	cmp	x0, x1
   38698:	b.le	386bc <mpfr_tmp_free@@Base+0xa0c>
   3869c:	adrp	x2, 5a000 <mpfr_bases@@Base+0x2a8>
   386a0:	mov	w1, #0x3de                 	// #990
   386a4:	add	x2, x2, #0x560
   386a8:	adrp	x0, 5a000 <mpfr_bases@@Base+0x2a8>
   386ac:	add	x0, x0, #0x58f
   386b0:	str	x3, [x29, #144]
   386b4:	bl	cbd0 <mpfr_assert_fail@plt>
   386b8:	ldr	x3, [x29, #144]
   386bc:	ldr	x5, [x29, #240]
   386c0:	sub	x5, x5, x3
   386c4:	lsl	x2, x24, #3
   386c8:	mov	w1, #0x0                   	// #0
   386cc:	mov	x0, x25
   386d0:	str	x5, [x29, #144]
   386d4:	bl	c1a0 <memset@plt>
   386d8:	stp	xzr, xzr, [sp, #32]
   386dc:	mov	x0, #0x1                   	// #1
   386e0:	ldp	x4, x3, [x29, #120]
   386e4:	stp	x0, xzr, [sp, #16]
   386e8:	ldr	w0, [x29, #172]
   386ec:	ldr	x5, [x29, #144]
   386f0:	str	w0, [sp, #8]
   386f4:	ldr	x7, [x29, #176]
   386f8:	lsl	x2, x26, #6
   386fc:	ldr	x6, [x29, #216]
   38700:	mov	x1, x26
   38704:	ldr	x0, [x29, #160]
   38708:	str	x0, [sp]
   3870c:	mov	x0, x25
   38710:	bl	37cf0 <mpfr_tmp_free@@Base+0x40>
   38714:	cbz	x0, 389f0 <mpfr_tmp_free@@Base+0xd40>
   38718:	add	x25, x25, x26, lsl #3
   3871c:	mov	w0, #0xffffffff            	// #-1
   38720:	ldur	x1, [x25, #-8]
   38724:	cmn	x1, #0x1
   38728:	cneg	w0, w0, gt
   3872c:	cmp	w19, #0x3
   38730:	b.ne	38a08 <mpfr_tmp_free@@Base+0xd58>  // b.any
   38734:	cmp	w0, #0x0
   38738:	csetm	w24, ne  // ne = any
   3873c:	cmp	w27, #0x2
   38740:	b.ne	38ad4 <mpfr_tmp_free@@Base+0xe24>  // b.any
   38744:	cmp	x28, #0x0
   38748:	mov	w25, #0x1                   	// #1
   3874c:	cneg	w1, w25, ne  // ne = any
   38750:	cmp	w0, w1
   38754:	b.ne	38ad4 <mpfr_tmp_free@@Base+0xe24>  // b.any
   38758:	sub	w25, w25, w28
   3875c:	b	387dc <mpfr_tmp_free@@Base+0xb2c>
   38760:	sub	x1, x1, #0x1
   38764:	cmp	x4, #0x3f
   38768:	ldr	x3, [x23, x1, lsl #3]
   3876c:	b.gt	3878c <mpfr_tmp_free@@Base+0xadc>
   38770:	mov	w1, #0x40                  	// #64
   38774:	sub	w4, w1, w4
   38778:	lsr	x3, x3, x4
   3877c:	lsr	x0, x0, x4
   38780:	cmp	x3, x0
   38784:	b.ne	3857c <mpfr_tmp_free@@Base+0x8cc>  // b.any
   38788:	b	3862c <mpfr_tmp_free@@Base+0x97c>
   3878c:	cmp	x0, x3
   38790:	sub	x4, x4, #0x40
   38794:	csel	w27, w27, wzr, eq  // eq = none
   38798:	b	385fc <mpfr_tmp_free@@Base+0x94c>
   3879c:	b.ne	387c4 <mpfr_tmp_free@@Base+0xb14>  // b.any
   387a0:	ldr	x0, [x23]
   387a4:	and	x0, x0, #0x1
   387a8:	str	x0, [x29, #184]
   387ac:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   387b0:	cmp	x6, x0
   387b4:	cset	w24, ne  // ne = any
   387b8:	mov	x28, #0x0                   	// #0
   387bc:	mov	w27, w24
   387c0:	b	3860c <mpfr_tmp_free@@Base+0x95c>
   387c4:	str	xzr, [x29, #184]
   387c8:	b	387ac <mpfr_tmp_free@@Base+0xafc>
   387cc:	mov	w25, w24
   387d0:	eor	w0, w25, #0x1
   387d4:	tst	w0, w24
   387d8:	csinv	w24, w24, wzr, eq  // eq = none
   387dc:	ldr	x0, [x29, #200]
   387e0:	mov	x6, #0x40                  	// #64
   387e4:	ldr	x2, [x29, #240]
   387e8:	str	w22, [x0, #8]
   387ec:	ldr	x0, [x29, #208]
   387f0:	sub	x27, x0, #0x1
   387f4:	ldr	w0, [x29, #208]
   387f8:	asr	x27, x27, #6
   387fc:	add	x26, x27, #0x1
   38800:	lsl	w22, w26, #6
   38804:	sub	w22, w22, w0
   38808:	ldr	x0, [x29, #152]
   3880c:	negs	x5, x0
   38810:	and	x0, x0, #0x3f
   38814:	and	x5, x5, #0x3f
   38818:	csneg	x5, x0, x5, mi  // mi = first
   3881c:	cmp	x2, x20
   38820:	b.ge	38b18 <mpfr_tmp_free@@Base+0xe68>  // b.tcont
   38824:	sub	x28, x20, x2
   38828:	sdiv	x28, x28, x6
   3882c:	cbz	x0, 38afc <mpfr_tmp_free@@Base+0xe4c>
   38830:	ldr	x20, [x29, #248]
   38834:	mov	w3, w5
   38838:	mov	x0, x21
   3883c:	str	x5, [x29, #184]
   38840:	sub	x20, x20, x2
   38844:	mov	x2, x26
   38848:	sdiv	x20, x20, x6
   3884c:	sub	x20, x20, x27
   38850:	add	x1, x23, x20, lsl #3
   38854:	bl	bd40 <__gmpn_lshift@plt>
   38858:	cmp	x28, x20
   3885c:	b.eq	38880 <mpfr_tmp_free@@Base+0xbd0>  // b.none
   38860:	ldr	x5, [x29, #184]
   38864:	mov	x6, #0x40                  	// #64
   38868:	sub	w6, w6, w5
   3886c:	ldr	x5, [x23, x28, lsl #3]
   38870:	lsr	x6, x5, x6
   38874:	ldr	x5, [x21]
   38878:	orr	x5, x5, x6
   3887c:	str	x5, [x21]
   38880:	ldr	x0, [x29, #208]
   38884:	cmp	x0, #0x1
   38888:	b.ne	38b8c <mpfr_tmp_free@@Base+0xedc>  // b.any
   3888c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   38890:	str	x0, [x21]
   38894:	ldr	w0, [x29, #208]
   38898:	sub	w21, w0, w25
   3889c:	sxtw	x25, w25
   388a0:	ldr	x0, [x29, #192]
   388a4:	sxtw	x21, w21
   388a8:	cmp	x0, #0x0
   388ac:	csel	x21, x25, x21, eq  // eq = none
   388b0:	ldr	x25, [x29, #248]
   388b4:	add	x25, x25, x21
   388b8:	str	x25, [x29, #248]
   388bc:	ldr	x1, [x29, #200]
   388c0:	ldr	x0, [x29, #248]
   388c4:	str	x0, [x1, #16]
   388c8:	ldr	x0, [x29, #232]
   388cc:	cbz	x0, 388d4 <mpfr_tmp_free@@Base+0xc24>
   388d0:	bl	c4a0 <mpfr_tmp_free@plt>
   388d4:	ldr	x0, [x29, #200]
   388d8:	ldr	x2, [x0, #16]
   388dc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   388e0:	ldr	x1, [x0, #2528]
   388e4:	add	x0, x0, #0x9e0
   388e8:	blr	x1
   388ec:	mrs	x1, tpidr_el0
   388f0:	ldr	x0, [x1, x0]
   388f4:	cmp	x2, x0
   388f8:	b.lt	38918 <mpfr_tmp_free@@Base+0xc68>  // b.tstop
   388fc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   38900:	ldr	x3, [x0, #2560]
   38904:	add	x0, x0, #0xa00
   38908:	blr	x3
   3890c:	ldr	x0, [x1, x0]
   38910:	cmp	x2, x0
   38914:	b.le	38d80 <mpfr_tmp_free@@Base+0x10d0>
   38918:	ldr	x0, [x29, #200]
   3891c:	mov	w1, w24
   38920:	mov	w2, w19
   38924:	bl	cbc0 <mpfr_check_range@plt>
   38928:	mov	w24, w0
   3892c:	b	38388 <mpfr_tmp_free@@Base+0x6d8>
   38930:	ldr	w0, [x29, #192]
   38934:	and	w25, w24, w0
   38938:	b	387d0 <mpfr_tmp_free@@Base+0xb20>
   3893c:	ldr	w0, [x29, #192]
   38940:	eor	w25, w0, #0x1
   38944:	and	w25, w25, w24
   38948:	b	387d0 <mpfr_tmp_free@@Base+0xb20>
   3894c:	cbz	w19, 38970 <mpfr_tmp_free@@Base+0xcc0>
   38950:	adrp	x2, 5a000 <mpfr_bases@@Base+0x2a8>
   38954:	adrp	x0, 5a000 <mpfr_bases@@Base+0x2a8>
   38958:	add	x2, x2, #0x5f4
   3895c:	add	x0, x0, #0x58f
   38960:	mov	w1, #0x390                 	// #912
   38964:	bl	cbd0 <mpfr_assert_fail@plt>
   38968:	mov	x28, #0x0                   	// #0
   3896c:	mov	w24, #0x1                   	// #1
   38970:	mov	w25, w28
   38974:	b	387d0 <mpfr_tmp_free@@Base+0xb20>
   38978:	mov	w25, #0x0                   	// #0
   3897c:	b	387d0 <mpfr_tmp_free@@Base+0xb20>
   38980:	sub	x24, x26, x2
   38984:	cmp	x24, #0x0
   38988:	b.le	389a4 <mpfr_tmp_free@@Base+0xcf4>
   3898c:	add	x0, x25, x24, lsl #3
   38990:	cmp	x0, x23
   38994:	b.eq	389a4 <mpfr_tmp_free@@Base+0xcf4>  // b.none
   38998:	lsl	x2, x2, #3
   3899c:	mov	x1, x23
   389a0:	bl	ba90 <memcpy@plt>
   389a4:	mov	w3, #0x0                   	// #0
   389a8:	b	38680 <mpfr_tmp_free@@Base+0x9d0>
   389ac:	ldr	x1, [x29, #112]
   389b0:	lsl	x0, x26, #6
   389b4:	sub	x24, x0, x1
   389b8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   389bc:	add	x0, x24, x0
   389c0:	cmp	x6, x0
   389c4:	b.ge	389e0 <mpfr_tmp_free@@Base+0xd30>  // b.tcont
   389c8:	adrp	x2, 5a000 <mpfr_bases@@Base+0x2a8>
   389cc:	adrp	x0, 5a000 <mpfr_bases@@Base+0x2a8>
   389d0:	add	x2, x2, #0x5c5
   389d4:	add	x0, x0, #0x58f
   389d8:	mov	w1, #0x3ec                 	// #1004
   389dc:	bl	cbd0 <mpfr_assert_fail@plt>
   389e0:	ldr	x3, [x29, #216]
   389e4:	sub	x5, x3, x24
   389e8:	mov	x24, x26
   389ec:	b	386c4 <mpfr_tmp_free@@Base+0xa14>
   389f0:	cmp	w27, #0x1
   389f4:	b.eq	38ab4 <mpfr_tmp_free@@Base+0xe04>  // b.none
   389f8:	ldr	x1, [x29, #184]
   389fc:	mov	w0, #0xffffffff            	// #-1
   38a00:	cmp	x1, #0x0
   38a04:	cneg	w0, w0, ne  // ne = any
   38a08:	cmp	w19, #0x1
   38a0c:	cset	w4, eq  // eq = none
   38a10:	cmp	w22, #0x0
   38a14:	cset	w2, gt
   38a18:	cmp	w4, #0x0
   38a1c:	ccmp	w2, #0x0, #0x4, ne  // ne = any
   38a20:	b.ne	38734 <mpfr_tmp_free@@Base+0xa84>  // b.any
   38a24:	cmp	w19, #0x4
   38a28:	lsr	w3, w22, #31
   38a2c:	cset	w1, eq  // eq = none
   38a30:	cmp	w1, #0x0
   38a34:	ccmp	w3, #0x0, #0x4, ne  // ne = any
   38a38:	b.ne	38734 <mpfr_tmp_free@@Base+0xa84>  // b.any
   38a3c:	cmp	w19, #0x2
   38a40:	b.eq	38a5c <mpfr_tmp_free@@Base+0xdac>  // b.none
   38a44:	cmp	w4, #0x0
   38a48:	ccmp	w3, #0x0, #0x4, ne  // ne = any
   38a4c:	b.ne	38a5c <mpfr_tmp_free@@Base+0xdac>  // b.any
   38a50:	cmp	w2, #0x0
   38a54:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   38a58:	b.eq	38abc <mpfr_tmp_free@@Base+0xe0c>  // b.none
   38a5c:	cmp	w0, #0x0
   38a60:	cset	w24, ne  // ne = any
   38a64:	cmp	w27, #0x2
   38a68:	b.eq	38744 <mpfr_tmp_free@@Base+0xa94>  // b.none
   38a6c:	cmp	w22, #0x0
   38a70:	ccmp	w19, #0x1, #0x0, gt
   38a74:	b.eq	38adc <mpfr_tmp_free@@Base+0xe2c>  // b.none
   38a78:	cmp	w22, #0x0
   38a7c:	ccmp	w19, #0x4, #0x0, lt  // lt = tstop
   38a80:	b.eq	38adc <mpfr_tmp_free@@Base+0xe2c>  // b.none
   38a84:	cmp	w19, #0x2
   38a88:	b.eq	38aa4 <mpfr_tmp_free@@Base+0xdf4>  // b.none
   38a8c:	cmp	w22, #0x0
   38a90:	ccmp	w19, #0x1, #0x0, lt  // lt = tstop
   38a94:	b.eq	38aa4 <mpfr_tmp_free@@Base+0xdf4>  // b.none
   38a98:	cmp	w22, #0x0
   38a9c:	ccmp	w19, #0x4, #0x0, gt
   38aa0:	b.ne	38aec <mpfr_tmp_free@@Base+0xe3c>  // b.any
   38aa4:	cmp	w0, #0x1
   38aa8:	b.ne	38aec <mpfr_tmp_free@@Base+0xe3c>  // b.any
   38aac:	add	w25, w28, #0x1
   38ab0:	b	387dc <mpfr_tmp_free@@Base+0xb2c>
   38ab4:	mov	w0, #0x0                   	// #0
   38ab8:	b	3872c <mpfr_tmp_free@@Base+0xa7c>
   38abc:	cmp	w27, #0x1
   38ac0:	b.ne	38acc <mpfr_tmp_free@@Base+0xe1c>  // b.any
   38ac4:	neg	w24, w0
   38ac8:	b	38a6c <mpfr_tmp_free@@Base+0xdbc>
   38acc:	mov	w24, w0
   38ad0:	b	38744 <mpfr_tmp_free@@Base+0xa94>
   38ad4:	cmp	w19, #0x3
   38ad8:	b.ne	38a6c <mpfr_tmp_free@@Base+0xdbc>  // b.any
   38adc:	cmn	w0, #0x1
   38ae0:	b.ne	38a98 <mpfr_tmp_free@@Base+0xde8>  // b.any
   38ae4:	sub	w25, w28, #0x1
   38ae8:	b	387dc <mpfr_tmp_free@@Base+0xb2c>
   38aec:	mov	w25, w28
   38af0:	b	387dc <mpfr_tmp_free@@Base+0xb2c>
   38af4:	mov	w25, #0x0                   	// #0
   38af8:	b	38410 <mpfr_tmp_free@@Base+0x760>
   38afc:	add	x1, x23, x28, lsl #3
   38b00:	cmp	x1, x21
   38b04:	b.eq	38880 <mpfr_tmp_free@@Base+0xbd0>  // b.none
   38b08:	lsl	x2, x26, #3
   38b0c:	mov	x0, x21
   38b10:	bl	ba90 <memcpy@plt>
   38b14:	b	38880 <mpfr_tmp_free@@Base+0xbd0>
   38b18:	ldr	x1, [x29, #248]
   38b1c:	sub	x1, x1, x2
   38b20:	add	x20, x1, #0x3f
   38b24:	sdiv	x20, x20, x6
   38b28:	cbz	x0, 38b64 <mpfr_tmp_free@@Base+0xeb4>
   38b2c:	sub	x0, x26, x20
   38b30:	mov	w3, w5
   38b34:	mov	x2, x20
   38b38:	mov	x1, x23
   38b3c:	add	x0, x21, x0, lsl #3
   38b40:	bl	bd40 <__gmpn_lshift@plt>
   38b44:	cmp	x26, x20
   38b48:	b.le	38880 <mpfr_tmp_free@@Base+0xbd0>
   38b4c:	sub	x2, x26, x20
   38b50:	mov	x0, x21
   38b54:	mov	w1, #0x0                   	// #0
   38b58:	lsl	x2, x2, #3
   38b5c:	bl	c1a0 <memset@plt>
   38b60:	b	38880 <mpfr_tmp_free@@Base+0xbd0>
   38b64:	cmp	x1, #0x0
   38b68:	b.le	38b44 <mpfr_tmp_free@@Base+0xe94>
   38b6c:	sub	x0, x26, x20
   38b70:	add	x0, x21, x0, lsl #3
   38b74:	cmp	x0, x23
   38b78:	b.eq	38b44 <mpfr_tmp_free@@Base+0xe94>  // b.none
   38b7c:	lsl	x2, x20, #3
   38b80:	mov	x1, x23
   38b84:	bl	ba90 <memcpy@plt>
   38b88:	b	38b44 <mpfr_tmp_free@@Base+0xe94>
   38b8c:	ldr	x0, [x29, #192]
   38b90:	lsl	x5, x26, #3
   38b94:	mov	x2, #0x1                   	// #1
   38b98:	sub	x5, x5, #0x8
   38b9c:	lsl	x3, x2, x22
   38ba0:	ldr	x1, [x21]
   38ba4:	cbz	x0, 38c8c <mpfr_tmp_free@@Base+0xfdc>
   38ba8:	neg	x0, x3
   38bac:	cmp	w25, #0x2
   38bb0:	bic	x0, x0, x1
   38bb4:	b.eq	38c4c <mpfr_tmp_free@@Base+0xf9c>  // b.none
   38bb8:	sub	w2, w2, w25
   38bbc:	sxtw	x2, w2
   38bc0:	lsl	x22, x2, x22
   38bc4:	adds	x0, x0, x22
   38bc8:	str	x0, [x21]
   38bcc:	b.cs	38bdc <mpfr_tmp_free@@Base+0xf2c>  // b.hs, b.nlast
   38bd0:	cmp	x22, #0x0
   38bd4:	ccmp	w25, #0x0, #0x0, eq  // eq = none
   38bd8:	b.ge	38c3c <mpfr_tmp_free@@Base+0xf8c>  // b.tcont
   38bdc:	cmp	x26, #0x1
   38be0:	b.eq	38c20 <mpfr_tmp_free@@Base+0xf70>  // b.none
   38be4:	add	x1, x21, #0x8
   38be8:	ldr	x0, [x1]
   38bec:	sub	x27, x27, #0x1
   38bf0:	cbz	x0, 38c14 <mpfr_tmp_free@@Base+0xf64>
   38bf4:	neg	x0, x0
   38bf8:	str	x0, [x1]
   38bfc:	cbz	x27, 388bc <mpfr_tmp_free@@Base+0xc0c>
   38c00:	add	x1, x1, #0x8
   38c04:	mov	x2, x27
   38c08:	mov	x0, x1
   38c0c:	bl	be90 <__gmpn_com@plt>
   38c10:	b	388bc <mpfr_tmp_free@@Base+0xc0c>
   38c14:	cbz	x27, 38c20 <mpfr_tmp_free@@Base+0xf70>
   38c18:	add	x1, x1, #0x8
   38c1c:	b	38be8 <mpfr_tmp_free@@Base+0xf38>
   38c20:	ldr	x0, [x21, x5]
   38c24:	orr	x0, x0, #0x8000000000000000
   38c28:	str	x0, [x21, x5]
   38c2c:	ldr	x0, [x29, #248]
   38c30:	add	x0, x0, #0x1
   38c34:	str	x0, [x29, #248]
   38c38:	b	388bc <mpfr_tmp_free@@Base+0xc0c>
   38c3c:	cmp	x26, #0x1
   38c40:	b.eq	388bc <mpfr_tmp_free@@Base+0xc0c>  // b.none
   38c44:	add	x1, x21, #0x8
   38c48:	b	38c04 <mpfr_tmp_free@@Base+0xf54>
   38c4c:	sub	x3, x0, x3
   38c50:	str	x3, [x21]
   38c54:	cbnz	x0, 38c78 <mpfr_tmp_free@@Base+0xfc8>
   38c58:	ldr	x1, [x21, x2, lsl #3]
   38c5c:	add	x3, x21, x2, lsl #3
   38c60:	add	x2, x2, #0x1
   38c64:	cmn	x1, #0x1
   38c68:	b.eq	38c58 <mpfr_tmp_free@@Base+0xfa8>  // b.none
   38c6c:	mov	x0, #0xfffffffffffffffe    	// #-2
   38c70:	sub	x0, x0, x1
   38c74:	str	x0, [x3]
   38c78:	cmp	x2, x26
   38c7c:	b.ge	38d44 <mpfr_tmp_free@@Base+0x1094>  // b.tcont
   38c80:	add	x1, x21, x2, lsl #3
   38c84:	sub	x2, x26, x2
   38c88:	b	38c08 <mpfr_tmp_free@@Base+0xf58>
   38c8c:	neg	x0, x3
   38c90:	cmp	w25, #0x0
   38c94:	and	x0, x0, x1
   38c98:	str	x0, [x21]
   38c9c:	b.le	38d2c <mpfr_tmp_free@@Base+0x107c>
   38ca0:	sxtw	x25, w25
   38ca4:	lsl	x22, x25, x22
   38ca8:	cbz	x22, 38cf0 <mpfr_tmp_free@@Base+0x1040>
   38cac:	adds	x0, x0, x22
   38cb0:	str	x0, [x21]
   38cb4:	b.cs	38cdc <mpfr_tmp_free@@Base+0x102c>  // b.hs, b.nlast
   38cb8:	ldr	x1, [x29, #192]
   38cbc:	ldr	x0, [x21, x5]
   38cc0:	cbz	x1, 388bc <mpfr_tmp_free@@Base+0xc0c>
   38cc4:	b	38c24 <mpfr_tmp_free@@Base+0xf74>
   38cc8:	ldr	x0, [x21, x2, lsl #3]
   38ccc:	add	x0, x0, #0x1
   38cd0:	str	x0, [x21, x2, lsl #3]
   38cd4:	add	x2, x2, #0x1
   38cd8:	cbnz	x0, 38cb8 <mpfr_tmp_free@@Base+0x1008>
   38cdc:	cmp	x26, x2
   38ce0:	b.gt	38cc8 <mpfr_tmp_free@@Base+0x1018>
   38ce4:	mov	x0, #0x1                   	// #1
   38ce8:	str	x0, [x29, #192]
   38cec:	b	38cb8 <mpfr_tmp_free@@Base+0x1008>
   38cf0:	ldr	x0, [x21, #8]
   38cf4:	add	x0, x0, #0x1
   38cf8:	str	x0, [x21, #8]
   38cfc:	cbnz	x0, 38cb8 <mpfr_tmp_free@@Base+0x1008>
   38d00:	mov	x0, #0x2                   	// #2
   38d04:	b	38d1c <mpfr_tmp_free@@Base+0x106c>
   38d08:	ldr	x1, [x21, x0, lsl #3]
   38d0c:	add	x1, x1, #0x1
   38d10:	str	x1, [x21, x0, lsl #3]
   38d14:	add	x0, x0, #0x1
   38d18:	cbnz	x1, 38cb8 <mpfr_tmp_free@@Base+0x1008>
   38d1c:	sub	x1, x0, #0x1
   38d20:	cmp	x1, x27
   38d24:	b.lt	38d08 <mpfr_tmp_free@@Base+0x1058>  // b.tstop
   38d28:	b	38ce4 <mpfr_tmp_free@@Base+0x1034>
   38d2c:	cmn	w25, #0x1
   38d30:	b.ne	388bc <mpfr_tmp_free@@Base+0xc0c>  // b.any
   38d34:	sub	x1, x0, x3
   38d38:	str	x1, [x21]
   38d3c:	cmp	x3, x0
   38d40:	b.hi	38d74 <mpfr_tmp_free@@Base+0x10c4>  // b.pmore
   38d44:	ldr	x0, [x21, x5]
   38d48:	tbnz	x0, #63, 388bc <mpfr_tmp_free@@Base+0xc0c>
   38d4c:	orr	x0, x0, #0x8000000000000000
   38d50:	str	x0, [x21, x5]
   38d54:	ldr	x0, [x29, #248]
   38d58:	sub	x0, x0, #0x1
   38d5c:	b	38c34 <mpfr_tmp_free@@Base+0xf84>
   38d60:	ldr	x0, [x21, x2, lsl #3]
   38d64:	sub	x1, x0, #0x1
   38d68:	str	x1, [x21, x2, lsl #3]
   38d6c:	add	x2, x2, #0x1
   38d70:	cbnz	x0, 38d44 <mpfr_tmp_free@@Base+0x1094>
   38d74:	cmp	x26, x2
   38d78:	b.gt	38d60 <mpfr_tmp_free@@Base+0x10b0>
   38d7c:	b	38d44 <mpfr_tmp_free@@Base+0x1094>
   38d80:	cbz	w24, 38388 <mpfr_tmp_free@@Base+0x6d8>
   38d84:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   38d88:	ldr	x2, [x0, #2592]
   38d8c:	add	x0, x0, #0xa20
   38d90:	blr	x2
   38d94:	add	x0, x1, x0
   38d98:	ldr	w1, [x0]
   38d9c:	orr	w1, w1, #0x8
   38da0:	str	w1, [x0]
   38da4:	b	38388 <mpfr_tmp_free@@Base+0x6d8>

0000000000038da8 <mpfr_sum@@Base>:
   38da8:	mov	x8, x2
   38dac:	mov	x6, x0
   38db0:	mov	x7, x1
   38db4:	mov	w2, w3
   38db8:	cmp	x8, #0x2
   38dbc:	b.hi	38df8 <mpfr_sum@@Base+0x50>  // b.pmore
   38dc0:	cbnz	x8, 38ddc <mpfr_sum@@Base+0x34>
   38dc4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   38dc8:	str	x0, [x6, #16]
   38dcc:	mov	w0, #0x1                   	// #1
   38dd0:	str	w0, [x6, #8]
   38dd4:	mov	w0, #0x0                   	// #0
   38dd8:	ret
   38ddc:	cmp	x8, #0x1
   38de0:	ldr	x1, [x1]
   38de4:	b.ne	38df0 <mpfr_sum@@Base+0x48>  // b.any
   38de8:	ldr	w3, [x1, #8]
   38dec:	b	c730 <mpfr_set4@plt>
   38df0:	ldr	x2, [x7, #8]
   38df4:	b	c230 <mpfr_add@plt>
   38df8:	mov	x12, #0x2                   	// #2
   38dfc:	stp	x29, x30, [sp, #-16]!
   38e00:	mov	w0, #0x0                   	// #0
   38e04:	mov	w1, #0x0                   	// #0
   38e08:	mov	x5, #0x0                   	// #0
   38e0c:	mov	x9, #0x0                   	// #0
   38e10:	mov	x4, #0x8000000000000000    	// #-9223372036854775808
   38e14:	mov	x11, #0x8000000000000003    	// #-9223372036854775805
   38e18:	movk	x12, #0x8000, lsl #48
   38e1c:	mov	w13, #0xffffffff            	// #-1
   38e20:	mov	x29, sp
   38e24:	ldr	x10, [x7, x9, lsl #3]
   38e28:	ldr	x3, [x10, #16]
   38e2c:	cmp	x3, x11
   38e30:	b.gt	38ed0 <mpfr_sum@@Base+0x128>
   38e34:	cmp	x3, x12
   38e38:	b.ne	38e78 <mpfr_sum@@Base+0xd0>  // b.any
   38e3c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   38e40:	ldr	x1, [x0, #2592]
   38e44:	add	x0, x0, #0xa20
   38e48:	blr	x1
   38e4c:	str	x12, [x6, #16]
   38e50:	mrs	x1, tpidr_el0
   38e54:	add	x0, x1, x0
   38e58:	ldr	w1, [x0]
   38e5c:	orr	w1, w1, #0x4
   38e60:	str	w1, [x0]
   38e64:	mov	w0, #0x0                   	// #0
   38e68:	ldp	x29, x30, [sp], #16
   38e6c:	ret
   38e70:	mov	x9, x3
   38e74:	b	38e24 <mpfr_sum@@Base+0x7c>
   38e78:	cmp	x3, x11
   38e7c:	b.ne	38eb0 <mpfr_sum@@Base+0x108>  // b.any
   38e80:	ldr	w3, [x10, #8]
   38e84:	cbz	w1, 38ee0 <mpfr_sum@@Base+0x138>
   38e88:	cmp	w3, w1
   38e8c:	b.ne	38e3c <mpfr_sum@@Base+0x94>  // b.any
   38e90:	add	x3, x9, #0x1
   38e94:	cmp	x8, x3
   38e98:	b.ne	38e70 <mpfr_sum@@Base+0xc8>  // b.any
   38e9c:	cbz	w1, 38ef0 <mpfr_sum@@Base+0x148>
   38ea0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   38ea4:	str	w1, [x6, #8]
   38ea8:	str	x0, [x6, #16]
   38eac:	b	38e64 <mpfr_sum@@Base+0xbc>
   38eb0:	cbnz	x5, 38e90 <mpfr_sum@@Base+0xe8>
   38eb4:	ldr	w3, [x10, #8]
   38eb8:	cbz	w0, 38ee8 <mpfr_sum@@Base+0x140>
   38ebc:	cmp	w3, w0
   38ec0:	b.eq	38e90 <mpfr_sum@@Base+0xe8>  // b.none
   38ec4:	cmp	w2, #0x3
   38ec8:	cneg	w0, w13, ne  // ne = any
   38ecc:	b	38e90 <mpfr_sum@@Base+0xe8>
   38ed0:	cmp	x4, x3
   38ed4:	add	x5, x5, #0x1
   38ed8:	csel	x4, x4, x3, ge  // ge = tcont
   38edc:	b	38e90 <mpfr_sum@@Base+0xe8>
   38ee0:	mov	w1, w3
   38ee4:	b	38e90 <mpfr_sum@@Base+0xe8>
   38ee8:	mov	w0, w3
   38eec:	b	38e90 <mpfr_sum@@Base+0xe8>
   38ef0:	cbnz	x5, 38f04 <mpfr_sum@@Base+0x15c>
   38ef4:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   38ef8:	str	w0, [x6, #8]
   38efc:	str	x1, [x6, #16]
   38f00:	b	38e64 <mpfr_sum@@Base+0xbc>
   38f04:	cmp	x5, #0x2
   38f08:	b.hi	38f90 <mpfr_sum@@Base+0x1e8>  // b.pmore
   38f0c:	mov	x4, #0xffffffffffffffff    	// #-1
   38f10:	mov	x0, #0x0                   	// #0
   38f14:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   38f18:	ldr	x1, [x7, x0, lsl #3]
   38f1c:	ldr	x8, [x1, #16]
   38f20:	cmp	x8, x3
   38f24:	b.le	38f6c <mpfr_sum@@Base+0x1c4>
   38f28:	cmp	x5, #0x1
   38f2c:	b.ne	38f48 <mpfr_sum@@Base+0x1a0>  // b.any
   38f30:	ldp	x29, x30, [sp], #16
   38f34:	mov	x0, x6
   38f38:	ldr	w3, [x1, #8]
   38f3c:	b	38dec <mpfr_sum@@Base+0x44>
   38f40:	mov	x0, x1
   38f44:	b	38f18 <mpfr_sum@@Base+0x170>
   38f48:	cmn	x4, #0x1
   38f4c:	b.eq	38f68 <mpfr_sum@@Base+0x1c0>  // b.none
   38f50:	mov	w3, w2
   38f54:	mov	x0, x6
   38f58:	mov	x2, x1
   38f5c:	ldp	x29, x30, [sp], #16
   38f60:	ldr	x1, [x7, x4, lsl #3]
   38f64:	b	38df4 <mpfr_sum@@Base+0x4c>
   38f68:	mov	x4, x0
   38f6c:	add	x1, x0, #0x1
   38f70:	cmp	x9, x0
   38f74:	b.ne	38f40 <mpfr_sum@@Base+0x198>  // b.any
   38f78:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   38f7c:	adrp	x0, 5a000 <mpfr_bases@@Base+0x2a8>
   38f80:	add	x2, x2, #0x943
   38f84:	add	x0, x0, #0x58f
   38f88:	mov	w1, #0x564                 	// #1380
   38f8c:	bl	cbd0 <mpfr_assert_fail@plt>
   38f90:	ldp	x29, x30, [sp], #16
   38f94:	mov	w3, w2
   38f98:	mov	x1, x7
   38f9c:	mov	x2, x8
   38fa0:	mov	x0, x6
   38fa4:	b	381cc <mpfr_tmp_free@@Base+0x51c>
   38fa8:	stp	x29, x30, [sp, #-32]!
   38fac:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   38fb0:	ldr	x1, [x0, #2640]
   38fb4:	add	x0, x0, #0xa50
   38fb8:	blr	x1
   38fbc:	mov	x29, sp
   38fc0:	str	x19, [sp, #16]
   38fc4:	mrs	x19, tpidr_el0
   38fc8:	add	x0, x19, x0
   38fcc:	bl	bef0 <mpfr_clear_cache@plt>
   38fd0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   38fd4:	ldr	x1, [x0, #2576]
   38fd8:	add	x0, x0, #0xa10
   38fdc:	blr	x1
   38fe0:	add	x0, x19, x0
   38fe4:	bl	bef0 <mpfr_clear_cache@plt>
   38fe8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   38fec:	ldr	x1, [x0, #2624]
   38ff0:	add	x0, x0, #0xa40
   38ff4:	blr	x1
   38ff8:	add	x0, x19, x0
   38ffc:	bl	bef0 <mpfr_clear_cache@plt>
   39000:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   39004:	ldr	x1, [x0, #2608]
   39008:	add	x0, x0, #0xa30
   3900c:	blr	x1
   39010:	add	x0, x19, x0
   39014:	ldr	x19, [sp, #16]
   39018:	ldp	x29, x30, [sp], #32
   3901c:	b	bef0 <mpfr_clear_cache@plt>

0000000000039020 <mpfr_free_cache@@Base>:
   39020:	stp	x29, x30, [sp, #-16]!
   39024:	mov	x29, sp
   39028:	bl	c030 <mpfr_bernoulli_freecache@plt>
   3902c:	bl	c2c0 <mpfr_free_pool@plt>
   39030:	ldp	x29, x30, [sp], #16
   39034:	b	38fa8 <mpfr_sum@@Base+0x200>

0000000000039038 <mpfr_free_cache2@@Base>:
   39038:	tbz	w0, #0, 39054 <mpfr_free_cache2@@Base+0x1c>
   3903c:	stp	x29, x30, [sp, #-16]!
   39040:	mov	x29, sp
   39044:	bl	c030 <mpfr_bernoulli_freecache@plt>
   39048:	bl	c2c0 <mpfr_free_pool@plt>
   3904c:	ldp	x29, x30, [sp], #16
   39050:	b	38fa8 <mpfr_sum@@Base+0x200>
   39054:	ret

0000000000039058 <mpfr_mp_memory_cleanup@@Base>:
   39058:	stp	x29, x30, [sp, #-16]!
   3905c:	mov	x29, sp
   39060:	bl	bb90 <mpfr_free_cache@plt>
   39064:	mov	w0, #0x0                   	// #0
   39068:	ldp	x29, x30, [sp], #16
   3906c:	ret

0000000000039070 <mpfr_add_si@@Base>:
   39070:	tbnz	x2, #63, 39078 <mpfr_add_si@@Base+0x8>
   39074:	b	c2f0 <mpfr_add_ui@plt>
   39078:	neg	x2, x2
   3907c:	b	c5c0 <mpfr_sub_ui@plt>

0000000000039080 <mpfr_sub_si@@Base>:
   39080:	tbnz	x2, #63, 39088 <mpfr_sub_si@@Base+0x8>
   39084:	b	c5c0 <mpfr_sub_ui@plt>
   39088:	neg	x2, x2
   3908c:	b	c2f0 <mpfr_add_ui@plt>

0000000000039090 <mpfr_si_sub@@Base>:
   39090:	tbnz	x1, #63, 39098 <mpfr_si_sub@@Base+0x8>
   39094:	b	cae0 <mpfr_ui_sub@plt>
   39098:	stp	x29, x30, [sp, #-32]!
   3909c:	mov	x6, x2
   390a0:	cmp	w3, #0x2
   390a4:	mov	x29, sp
   390a8:	str	x19, [sp, #16]
   390ac:	neg	x2, x1
   390b0:	mov	x19, x0
   390b4:	b.eq	390f0 <mpfr_si_sub@@Base+0x60>  // b.none
   390b8:	cmp	w3, #0x3
   390bc:	mov	w0, #0x2                   	// #2
   390c0:	csel	w4, w3, w0, ne  // ne = any
   390c4:	mov	x1, x6
   390c8:	mov	w3, w4
   390cc:	mov	x0, x19
   390d0:	bl	c2f0 <mpfr_add_ui@plt>
   390d4:	ldr	w1, [x19, #8]
   390d8:	neg	w0, w0
   390dc:	neg	w1, w1
   390e0:	str	w1, [x19, #8]
   390e4:	ldr	x19, [sp, #16]
   390e8:	ldp	x29, x30, [sp], #32
   390ec:	ret
   390f0:	mov	w4, #0x3                   	// #3
   390f4:	b	390c4 <mpfr_si_sub@@Base+0x34>

00000000000390f8 <mpfr_mul_si@@Base>:
   390f8:	tbnz	x2, #63, 39100 <mpfr_mul_si@@Base+0x8>
   390fc:	b	bad0 <mpfr_mul_ui@plt>
   39100:	stp	x29, x30, [sp, #-32]!
   39104:	mov	x6, x1
   39108:	neg	x2, x2
   3910c:	mov	x29, sp
   39110:	str	x19, [sp, #16]
   39114:	cmp	w3, #0x2
   39118:	mov	x19, x0
   3911c:	b.eq	39158 <mpfr_mul_si@@Base+0x60>  // b.none
   39120:	cmp	w3, #0x3
   39124:	mov	w0, #0x2                   	// #2
   39128:	csel	w4, w3, w0, ne  // ne = any
   3912c:	mov	x1, x6
   39130:	mov	w3, w4
   39134:	mov	x0, x19
   39138:	bl	bad0 <mpfr_mul_ui@plt>
   3913c:	ldr	w1, [x19, #8]
   39140:	neg	w0, w0
   39144:	neg	w1, w1
   39148:	str	w1, [x19, #8]
   3914c:	ldr	x19, [sp, #16]
   39150:	ldp	x29, x30, [sp], #32
   39154:	ret
   39158:	mov	w4, #0x3                   	// #3
   3915c:	b	3912c <mpfr_mul_si@@Base+0x34>

0000000000039160 <mpfr_div_si@@Base>:
   39160:	tbnz	x2, #63, 39168 <mpfr_div_si@@Base+0x8>
   39164:	b	cd00 <mpfr_div_ui@plt>
   39168:	stp	x29, x30, [sp, #-32]!
   3916c:	mov	x6, x1
   39170:	neg	x2, x2
   39174:	mov	x29, sp
   39178:	str	x19, [sp, #16]
   3917c:	cmp	w3, #0x2
   39180:	mov	x19, x0
   39184:	b.eq	391c0 <mpfr_div_si@@Base+0x60>  // b.none
   39188:	cmp	w3, #0x3
   3918c:	mov	w0, #0x2                   	// #2
   39190:	csel	w4, w3, w0, ne  // ne = any
   39194:	mov	x1, x6
   39198:	mov	w3, w4
   3919c:	mov	x0, x19
   391a0:	bl	cd00 <mpfr_div_ui@plt>
   391a4:	ldr	w1, [x19, #8]
   391a8:	neg	w0, w0
   391ac:	neg	w1, w1
   391b0:	str	w1, [x19, #8]
   391b4:	ldr	x19, [sp, #16]
   391b8:	ldp	x29, x30, [sp], #32
   391bc:	ret
   391c0:	mov	w4, #0x3                   	// #3
   391c4:	b	39194 <mpfr_div_si@@Base+0x34>

00000000000391c8 <mpfr_si_div@@Base>:
   391c8:	tbnz	x1, #63, 391d0 <mpfr_si_div@@Base+0x8>
   391cc:	b	c380 <mpfr_ui_div@plt>
   391d0:	stp	x29, x30, [sp, #-32]!
   391d4:	mov	x6, x2
   391d8:	neg	x1, x1
   391dc:	mov	x29, sp
   391e0:	str	x19, [sp, #16]
   391e4:	cmp	w3, #0x2
   391e8:	mov	x19, x0
   391ec:	b.eq	39228 <mpfr_si_div@@Base+0x60>  // b.none
   391f0:	cmp	w3, #0x3
   391f4:	mov	w0, #0x2                   	// #2
   391f8:	csel	w4, w3, w0, ne  // ne = any
   391fc:	mov	w3, w4
   39200:	mov	x2, x6
   39204:	mov	x0, x19
   39208:	bl	c380 <mpfr_ui_div@plt>
   3920c:	ldr	w1, [x19, #8]
   39210:	neg	w0, w0
   39214:	neg	w1, w1
   39218:	str	w1, [x19, #8]
   3921c:	ldr	x19, [sp, #16]
   39220:	ldp	x29, x30, [sp], #32
   39224:	ret
   39228:	mov	w4, #0x3                   	// #3
   3922c:	b	391fc <mpfr_si_div@@Base+0x34>

0000000000039230 <mpfr_cmp_ld@@Base>:
   39230:	stp	x29, x30, [sp, #-128]!
   39234:	mov	x29, sp
   39238:	stp	x19, x20, [sp, #16]
   3923c:	mrs	x19, tpidr_el0
   39240:	add	x20, sp, #0x60
   39244:	stp	x21, x22, [sp, #32]
   39248:	mov	x21, x0
   3924c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   39250:	ldr	x1, [x0, #2592]
   39254:	add	x0, x0, #0xa20
   39258:	blr	x1
   3925c:	ldr	w22, [x19, x0]
   39260:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   39264:	ldr	x1, [x0, #2528]
   39268:	add	x0, x0, #0x9e0
   3926c:	blr	x1
   39270:	add	x1, x19, x0
   39274:	str	x25, [sp, #64]
   39278:	ldr	x25, [x19, x0]
   3927c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   39280:	ldr	x2, [x0, #2560]
   39284:	add	x0, x0, #0xa00
   39288:	blr	x2
   3928c:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   39290:	stp	x23, x24, [sp, #48]
   39294:	str	x2, [x1]
   39298:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   3929c:	str	q0, [sp, #80]
   392a0:	ldr	x24, [x19, x0]
   392a4:	str	x1, [x19, x0]
   392a8:	mov	x0, x20
   392ac:	mov	x1, #0x71                  	// #113
   392b0:	bl	cb10 <mpfr_init2@plt>
   392b4:	ldr	q0, [sp, #80]
   392b8:	mov	x0, x20
   392bc:	mov	w1, #0x0                   	// #0
   392c0:	bl	bac0 <mpfr_set_ld@plt>
   392c4:	cbz	w0, 392e4 <mpfr_cmp_ld@@Base+0xb4>
   392c8:	mov	x0, x20
   392cc:	mov	x1, #0x832                 	// #2098
   392d0:	bl	bf50 <mpfr_set_prec@plt>
   392d4:	ldr	q0, [sp, #80]
   392d8:	mov	x0, x20
   392dc:	mov	w1, #0x0                   	// #0
   392e0:	bl	bac0 <mpfr_set_ld@plt>
   392e4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   392e8:	ldr	x1, [x0, #2592]
   392ec:	add	x0, x0, #0xa20
   392f0:	blr	x1
   392f4:	add	x23, x19, x0
   392f8:	mov	x1, x20
   392fc:	mov	w2, #0x1                   	// #1
   39300:	str	wzr, [x19, x0]
   39304:	mov	x0, x21
   39308:	bl	ca30 <mpfr_cmp3@plt>
   3930c:	mov	w21, w0
   39310:	ldr	w0, [x23]
   39314:	orr	w22, w22, w0
   39318:	mov	x0, x20
   3931c:	bl	c0f0 <mpfr_clear@plt>
   39320:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   39324:	ldr	x1, [x0, #2528]
   39328:	add	x0, x0, #0x9e0
   3932c:	blr	x1
   39330:	str	x25, [x19, x0]
   39334:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   39338:	ldr	x1, [x0, #2560]
   3933c:	add	x0, x0, #0xa00
   39340:	blr	x1
   39344:	str	x24, [x19, x0]
   39348:	ldp	x19, x20, [sp, #16]
   3934c:	mov	w0, w21
   39350:	ldr	x25, [sp, #64]
   39354:	str	w22, [x23]
   39358:	ldp	x21, x22, [sp, #32]
   3935c:	ldp	x23, x24, [sp, #48]
   39360:	ldp	x29, x30, [sp], #128
   39364:	ret

0000000000039368 <mpfr_set_si_2exp@@Base>:
   39368:	stp	x29, x30, [sp, #-112]!
   3936c:	mov	x29, sp
   39370:	stp	x19, x20, [sp, #16]
   39374:	mov	x19, x0
   39378:	stp	x21, x22, [sp, #32]
   3937c:	stp	x23, x24, [sp, #48]
   39380:	stp	x25, x26, [sp, #64]
   39384:	str	x27, [sp, #80]
   39388:	cbnz	x1, 393c0 <mpfr_set_si_2exp@@Base+0x58>
   3938c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   39390:	mov	w1, #0x0                   	// #0
   39394:	str	x0, [x19, #16]
   39398:	mov	w0, #0x1                   	// #1
   3939c:	str	w0, [x19, #8]
   393a0:	mov	w0, w1
   393a4:	ldp	x19, x20, [sp, #16]
   393a8:	ldp	x21, x22, [sp, #32]
   393ac:	ldp	x23, x24, [sp, #48]
   393b0:	ldp	x25, x26, [sp, #64]
   393b4:	ldr	x27, [sp, #80]
   393b8:	ldp	x29, x30, [sp], #112
   393bc:	ret
   393c0:	ldr	x0, [x0]
   393c4:	mov	x23, #0x40                  	// #64
   393c8:	cmp	x1, #0x0
   393cc:	mov	x22, x1
   393d0:	sub	x0, x0, #0x1
   393d4:	cneg	x1, x1, lt  // lt = tstop
   393d8:	ldr	x25, [x19, #24]
   393dc:	clz	x27, x1
   393e0:	sdiv	x0, x0, x23
   393e4:	str	wzr, [sp, #108]
   393e8:	lsl	x1, x1, x27
   393ec:	mov	x20, x2
   393f0:	mov	w24, w3
   393f4:	lsl	x26, x0, #3
   393f8:	add	x21, x25, x0, lsl #3
   393fc:	mov	x2, x26
   39400:	mov	x0, x25
   39404:	str	x1, [x25, x26]
   39408:	mov	w1, #0x0                   	// #0
   3940c:	bl	c1a0 <memset@plt>
   39410:	cmp	x22, #0x0
   39414:	mov	w0, #0x1                   	// #1
   39418:	ldr	x4, [x19]
   3941c:	cneg	w0, w0, lt  // lt = tstop
   39420:	str	w0, [x19, #8]
   39424:	sub	w0, w23, w27
   39428:	sxtw	x2, w0
   3942c:	add	x20, x20, w0, sxtw
   39430:	cmp	x4, w0, sxtw
   39434:	b.ge	39460 <mpfr_set_si_2exp@@Base+0xf8>  // b.tcont
   39438:	add	x6, sp, #0x6c
   3943c:	mov	w5, w24
   39440:	lsr	x3, x22, #63
   39444:	mov	x1, x21
   39448:	mov	x0, x21
   3944c:	bl	cab0 <mpfr_round_raw@plt>
   39450:	cbz	w0, 39460 <mpfr_set_si_2exp@@Base+0xf8>
   39454:	add	x20, x20, #0x1
   39458:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3945c:	str	x0, [x25, x26]
   39460:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   39464:	ldr	x2, [x0, #2528]
   39468:	add	x0, x0, #0x9e0
   3946c:	blr	x2
   39470:	str	x20, [x19, #16]
   39474:	mrs	x2, tpidr_el0
   39478:	ldr	w1, [sp, #108]
   3947c:	ldr	x0, [x2, x0]
   39480:	cmp	x0, x20
   39484:	b.gt	394cc <mpfr_set_si_2exp@@Base+0x164>
   39488:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3948c:	ldr	x3, [x0, #2560]
   39490:	add	x0, x0, #0xa00
   39494:	blr	x3
   39498:	ldr	x0, [x2, x0]
   3949c:	cmp	x0, x20
   394a0:	b.lt	394cc <mpfr_set_si_2exp@@Base+0x164>  // b.tstop
   394a4:	cbz	w1, 393a0 <mpfr_set_si_2exp@@Base+0x38>
   394a8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   394ac:	ldr	x3, [x0, #2592]
   394b0:	add	x0, x0, #0xa20
   394b4:	blr	x3
   394b8:	add	x0, x2, x0
   394bc:	ldr	w2, [x0]
   394c0:	orr	w2, w2, #0x8
   394c4:	str	w2, [x0]
   394c8:	b	393a0 <mpfr_set_si_2exp@@Base+0x38>
   394cc:	mov	w2, w24
   394d0:	mov	x0, x19
   394d4:	bl	cbc0 <mpfr_check_range@plt>
   394d8:	mov	w1, w0
   394dc:	b	393a0 <mpfr_set_si_2exp@@Base+0x38>

00000000000394e0 <__gmpfr_set_uj_2exp@@Base>:
   394e0:	stp	x29, x30, [sp, #-80]!
   394e4:	mov	x29, sp
   394e8:	str	x19, [sp, #16]
   394ec:	mov	x19, x0
   394f0:	mov	x0, x1
   394f4:	cbnz	x1, 39518 <__gmpfr_set_uj_2exp@@Base+0x38>
   394f8:	mov	w0, #0x1                   	// #1
   394fc:	str	w0, [x19, #8]
   39500:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   39504:	str	x0, [x19, #16]
   39508:	mov	w0, #0x0                   	// #0
   3950c:	ldr	x19, [sp, #16]
   39510:	ldp	x29, x30, [sp], #80
   39514:	ret
   39518:	clz	x4, x0
   3951c:	mov	x5, #0x40                  	// #64
   39520:	mov	w1, w3
   39524:	add	x3, sp, #0x28
   39528:	lsl	x0, x0, x4
   3952c:	stp	x0, x5, [sp, #40]
   39530:	sub	x5, x5, x4
   39534:	add	x4, x5, x2
   39538:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3953c:	ldr	x2, [x0, #2528]
   39540:	add	x0, x0, #0x9e0
   39544:	blr	x2
   39548:	mrs	x2, tpidr_el0
   3954c:	str	x3, [sp, #72]
   39550:	mov	w3, #0x1                   	// #1
   39554:	str	w3, [sp, #56]
   39558:	ldr	x0, [x2, x0]
   3955c:	cmp	x4, x0
   39560:	b.ge	3959c <__gmpfr_set_uj_2exp@@Base+0xbc>  // b.tcont
   39564:	cbnz	w1, 39584 <__gmpfr_set_uj_2exp@@Base+0xa4>
   39568:	add	x4, x4, #0x1
   3956c:	cmp	x0, x4
   39570:	b.gt	39594 <__gmpfr_set_uj_2exp@@Base+0xb4>
   39574:	add	x0, sp, #0x30
   39578:	bl	bf80 <mpfr_powerof2_raw@plt>
   3957c:	cmp	w0, #0x0
   39580:	cset	w1, ne  // ne = any
   39584:	mov	x0, x19
   39588:	mov	w2, #0x1                   	// #1
   3958c:	bl	c450 <mpfr_underflow@plt>
   39590:	b	3950c <__gmpfr_set_uj_2exp@@Base+0x2c>
   39594:	mov	w1, w3
   39598:	b	39584 <__gmpfr_set_uj_2exp@@Base+0xa4>
   3959c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   395a0:	ldr	x5, [x0, #2560]
   395a4:	add	x0, x0, #0xa00
   395a8:	blr	x5
   395ac:	ldr	x0, [x2, x0]
   395b0:	cmp	x4, x0
   395b4:	b.le	395c8 <__gmpfr_set_uj_2exp@@Base+0xe8>
   395b8:	mov	w2, w3
   395bc:	mov	x0, x19
   395c0:	bl	bfc0 <mpfr_overflow@plt>
   395c4:	b	3950c <__gmpfr_set_uj_2exp@@Base+0x2c>
   395c8:	mov	w2, w1
   395cc:	mov	x0, x19
   395d0:	add	x1, sp, #0x30
   395d4:	str	x4, [sp, #64]
   395d8:	bl	c730 <mpfr_set4@plt>
   395dc:	b	3950c <__gmpfr_set_uj_2exp@@Base+0x2c>

00000000000395e0 <__gmpfr_set_uj@@Base>:
   395e0:	mov	w3, w2
   395e4:	mov	x2, #0x0                   	// #0
   395e8:	b	c080 <__gmpfr_set_uj_2exp@plt>

00000000000395ec <__gmpfr_set_sj_2exp@@Base>:
   395ec:	tbnz	x1, #63, 395f4 <__gmpfr_set_sj_2exp@@Base+0x8>
   395f0:	b	c080 <__gmpfr_set_uj_2exp@plt>
   395f4:	stp	x29, x30, [sp, #-32]!
   395f8:	mov	x6, x2
   395fc:	neg	x1, x1
   39600:	mov	x29, sp
   39604:	str	x19, [sp, #16]
   39608:	cmp	w3, #0x2
   3960c:	mov	x19, x0
   39610:	b.eq	3964c <__gmpfr_set_sj_2exp@@Base+0x60>  // b.none
   39614:	cmp	w3, #0x3
   39618:	mov	w0, #0x2                   	// #2
   3961c:	csel	w4, w3, w0, ne  // ne = any
   39620:	mov	w3, w4
   39624:	mov	x2, x6
   39628:	mov	x0, x19
   3962c:	bl	c080 <__gmpfr_set_uj_2exp@plt>
   39630:	ldr	w1, [x19, #8]
   39634:	neg	w0, w0
   39638:	neg	w1, w1
   3963c:	str	w1, [x19, #8]
   39640:	ldr	x19, [sp, #16]
   39644:	ldp	x29, x30, [sp], #32
   39648:	ret
   3964c:	mov	w4, #0x3                   	// #3
   39650:	b	39620 <__gmpfr_set_sj_2exp@@Base+0x34>

0000000000039654 <__gmpfr_set_sj@@Base>:
   39654:	mov	w3, w2
   39658:	mov	x2, #0x0                   	// #0
   3965c:	b	c9b0 <__gmpfr_set_sj_2exp@plt>

0000000000039660 <__gmpfr_mpfr_get_sj@@Base>:
   39660:	stp	x29, x30, [sp, #-112]!
   39664:	mov	x29, sp
   39668:	stp	x19, x20, [sp, #16]
   3966c:	mov	x19, x0
   39670:	stp	x21, x22, [sp, #32]
   39674:	stp	x23, x24, [sp, #48]
   39678:	str	x25, [sp, #64]
   3967c:	mov	w25, w1
   39680:	bl	bc40 <mpfr_fits_intmax_p@plt>
   39684:	ldr	x2, [x19, #16]
   39688:	cbnz	w0, 396f4 <__gmpfr_mpfr_get_sj@@Base+0x94>
   3968c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   39690:	ldr	x1, [x0, #2592]
   39694:	add	x0, x0, #0xa20
   39698:	blr	x1
   3969c:	mrs	x1, tpidr_el0
   396a0:	add	x0, x1, x0
   396a4:	ldr	w1, [x0]
   396a8:	orr	w1, w1, #0x10
   396ac:	str	w1, [x0]
   396b0:	mov	x0, #0x2                   	// #2
   396b4:	movk	x0, #0x8000, lsl #48
   396b8:	cmp	x2, x0
   396bc:	b.ne	396e0 <__gmpfr_mpfr_get_sj@@Base+0x80>  // b.any
   396c0:	mov	x19, #0x0                   	// #0
   396c4:	mov	x0, x19
   396c8:	ldp	x19, x20, [sp, #16]
   396cc:	ldp	x21, x22, [sp, #32]
   396d0:	ldp	x23, x24, [sp, #48]
   396d4:	ldr	x25, [sp, #64]
   396d8:	ldp	x29, x30, [sp], #112
   396dc:	ret
   396e0:	ldr	w0, [x19, #8]
   396e4:	mov	x19, #0x7fffffffffffffff    	// #9223372036854775807
   396e8:	cmp	w0, #0x0
   396ec:	cinv	x19, x19, lt  // lt = tstop
   396f0:	b	396c4 <__gmpfr_mpfr_get_sj@@Base+0x64>
   396f4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   396f8:	cmp	x2, x0
   396fc:	b.eq	396c0 <__gmpfr_mpfr_get_sj@@Base+0x60>  // b.none
   39700:	mrs	x24, tpidr_el0
   39704:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   39708:	ldr	x1, [x0, #2592]
   3970c:	add	x0, x0, #0xa20
   39710:	blr	x1
   39714:	add	x20, sp, #0x50
   39718:	ldr	w21, [x24, x0]
   3971c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   39720:	ldr	x1, [x0, #2528]
   39724:	add	x0, x0, #0x9e0
   39728:	blr	x1
   3972c:	add	x1, x24, x0
   39730:	ldr	x23, [x24, x0]
   39734:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   39738:	ldr	x2, [x0, #2560]
   3973c:	add	x0, x0, #0xa00
   39740:	blr	x2
   39744:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   39748:	str	x2, [x1]
   3974c:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   39750:	ldr	x22, [x24, x0]
   39754:	str	x1, [x24, x0]
   39758:	mov	x0, x20
   3975c:	mov	x1, #0x3f                  	// #63
   39760:	bl	cb10 <mpfr_init2@plt>
   39764:	mov	x1, x19
   39768:	mov	w2, w25
   3976c:	mov	x0, x20
   39770:	bl	c390 <mpfr_rint@plt>
   39774:	ldr	x0, [sp, #96]
   39778:	mov	x1, #0x7ffffffffffffffe    	// #9223372036854775806
   3977c:	add	x0, x0, x1
   39780:	cmp	x0, #0x1
   39784:	b.hi	397a0 <__gmpfr_mpfr_get_sj@@Base+0x140>  // b.pmore
   39788:	adrp	x2, 5a000 <mpfr_bases@@Base+0x2a8>
   3978c:	adrp	x0, 5a000 <mpfr_bases@@Base+0x2a8>
   39790:	add	x2, x2, #0x610
   39794:	add	x0, x0, #0x687
   39798:	mov	w1, #0x3e                  	// #62
   3979c:	bl	cbd0 <mpfr_assert_fail@plt>
   397a0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   397a4:	ldr	x1, [x0, #2592]
   397a8:	add	x0, x0, #0xa20
   397ac:	blr	x1
   397b0:	ldr	w0, [x24, x0]
   397b4:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   397b8:	orr	w21, w21, w0
   397bc:	ldr	x0, [sp, #96]
   397c0:	cmp	x0, x1
   397c4:	b.eq	398e0 <__gmpfr_mpfr_get_sj@@Base+0x280>  // b.none
   397c8:	mov	w1, w0
   397cc:	sxtw	x0, w0
   397d0:	cmp	x0, #0x40
   397d4:	ldr	x3, [sp, #104]
   397d8:	b.le	397f4 <__gmpfr_mpfr_get_sj@@Base+0x194>
   397dc:	adrp	x2, 5a000 <mpfr_bases@@Base+0x2a8>
   397e0:	adrp	x0, 5a000 <mpfr_bases@@Base+0x2a8>
   397e4:	add	x2, x2, #0x690
   397e8:	add	x0, x0, #0x687
   397ec:	mov	w1, #0x4b                  	// #75
   397f0:	bl	cbd0 <mpfr_assert_fail@plt>
   397f4:	ldr	w2, [sp, #88]
   397f8:	b.ne	39878 <__gmpfr_mpfr_get_sj@@Base+0x218>  // b.any
   397fc:	tbnz	w2, #31, 39864 <__gmpfr_mpfr_get_sj@@Base+0x204>
   39800:	mov	x19, #0x8000000000000000    	// #-9223372036854775808
   39804:	adrp	x2, 5a000 <mpfr_bases@@Base+0x2a8>
   39808:	mov	w1, #0x53                  	// #83
   3980c:	add	x2, x2, #0x6ad
   39810:	adrp	x0, 5a000 <mpfr_bases@@Base+0x2a8>
   39814:	add	x0, x0, #0x687
   39818:	bl	cbd0 <mpfr_assert_fail@plt>
   3981c:	mov	x0, x20
   39820:	bl	c0f0 <mpfr_clear@plt>
   39824:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   39828:	ldr	x1, [x0, #2592]
   3982c:	add	x0, x0, #0xa20
   39830:	blr	x1
   39834:	str	w21, [x24, x0]
   39838:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3983c:	ldr	x1, [x0, #2528]
   39840:	add	x0, x0, #0x9e0
   39844:	blr	x1
   39848:	str	x23, [x24, x0]
   3984c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   39850:	ldr	x1, [x0, #2560]
   39854:	add	x0, x0, #0xa00
   39858:	blr	x1
   3985c:	str	x22, [x24, x0]
   39860:	b	396c4 <__gmpfr_mpfr_get_sj@@Base+0x64>
   39864:	mov	x0, x20
   39868:	mov	x19, #0x8000000000000000    	// #-9223372036854775808
   3986c:	bl	bf80 <mpfr_powerof2_raw@plt>
   39870:	cbnz	w0, 3981c <__gmpfr_mpfr_get_sj@@Base+0x1bc>
   39874:	b	39800 <__gmpfr_mpfr_get_sj@@Base+0x1a0>
   39878:	ldr	x0, [sp, #80]
   3987c:	cmp	w2, #0x0
   39880:	mov	x19, #0x0                   	// #0
   39884:	sub	x0, x0, #0x1
   39888:	sbfx	x0, x0, #6, #32
   3988c:	b.gt	398d0 <__gmpfr_mpfr_get_sj@@Base+0x270>
   39890:	cmp	w0, #0x0
   39894:	ccmp	w1, #0x0, #0x4, ge  // ge = tcont
   39898:	b.le	3981c <__gmpfr_mpfr_get_sj@@Base+0x1bc>
   3989c:	ldr	x2, [x3, x0, lsl #3]
   398a0:	sub	w1, w1, #0x40
   398a4:	neg	w4, w1
   398a8:	sub	x0, x0, #0x1
   398ac:	lsr	x2, x2, x4
   398b0:	sub	x19, x19, x2
   398b4:	b	39890 <__gmpfr_mpfr_get_sj@@Base+0x230>
   398b8:	ldr	x2, [x3, x0, lsl #3]
   398bc:	sub	w1, w1, #0x40
   398c0:	neg	w4, w1
   398c4:	sub	x0, x0, #0x1
   398c8:	lsr	x2, x2, x4
   398cc:	add	x19, x19, x2
   398d0:	cmp	w0, #0x0
   398d4:	ccmp	w1, #0x0, #0x4, ge  // ge = tcont
   398d8:	b.gt	398b8 <__gmpfr_mpfr_get_sj@@Base+0x258>
   398dc:	b	3981c <__gmpfr_mpfr_get_sj@@Base+0x1bc>
   398e0:	mov	x19, #0x0                   	// #0
   398e4:	b	3981c <__gmpfr_mpfr_get_sj@@Base+0x1bc>

00000000000398e8 <__gmpfr_mpfr_get_uj@@Base>:
   398e8:	stp	x29, x30, [sp, #-112]!
   398ec:	mov	x29, sp
   398f0:	stp	x19, x20, [sp, #16]
   398f4:	mov	x20, x0
   398f8:	stp	x21, x22, [sp, #32]
   398fc:	stp	x23, x24, [sp, #48]
   39900:	str	x25, [sp, #64]
   39904:	mov	w25, w1
   39908:	bl	c090 <mpfr_fits_uintmax_p@plt>
   3990c:	ldr	x2, [x20, #16]
   39910:	cbnz	w0, 3997c <__gmpfr_mpfr_get_uj@@Base+0x94>
   39914:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   39918:	ldr	x1, [x0, #2592]
   3991c:	add	x0, x0, #0xa20
   39920:	blr	x1
   39924:	mrs	x1, tpidr_el0
   39928:	add	x0, x1, x0
   3992c:	ldr	w1, [x0]
   39930:	orr	w1, w1, #0x10
   39934:	str	w1, [x0]
   39938:	mov	x0, #0x2                   	// #2
   3993c:	movk	x0, #0x8000, lsl #48
   39940:	cmp	x2, x0
   39944:	b.ne	39968 <__gmpfr_mpfr_get_uj@@Base+0x80>  // b.any
   39948:	mov	x20, #0x0                   	// #0
   3994c:	mov	x0, x20
   39950:	ldp	x19, x20, [sp, #16]
   39954:	ldp	x21, x22, [sp, #32]
   39958:	ldp	x23, x24, [sp, #48]
   3995c:	ldr	x25, [sp, #64]
   39960:	ldp	x29, x30, [sp], #112
   39964:	ret
   39968:	ldrsw	x20, [x20, #8]
   3996c:	mov	x0, #0x0                   	// #0
   39970:	cmp	x20, x0
   39974:	csetm	x20, ge  // ge = tcont
   39978:	b	3994c <__gmpfr_mpfr_get_uj@@Base+0x64>
   3997c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   39980:	cmp	x2, x0
   39984:	b.eq	39948 <__gmpfr_mpfr_get_uj@@Base+0x60>  // b.none
   39988:	mrs	x19, tpidr_el0
   3998c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   39990:	ldr	x1, [x0, #2592]
   39994:	add	x0, x0, #0xa20
   39998:	blr	x1
   3999c:	add	x22, sp, #0x50
   399a0:	ldr	w21, [x19, x0]
   399a4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   399a8:	ldr	x1, [x0, #2528]
   399ac:	add	x0, x0, #0x9e0
   399b0:	blr	x1
   399b4:	add	x1, x19, x0
   399b8:	ldr	x24, [x19, x0]
   399bc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   399c0:	ldr	x2, [x0, #2560]
   399c4:	add	x0, x0, #0xa00
   399c8:	blr	x2
   399cc:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   399d0:	str	x2, [x1]
   399d4:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   399d8:	ldr	x23, [x19, x0]
   399dc:	str	x1, [x19, x0]
   399e0:	mov	x0, x22
   399e4:	mov	x1, #0x40                  	// #64
   399e8:	bl	cb10 <mpfr_init2@plt>
   399ec:	mov	x1, x20
   399f0:	mov	w2, w25
   399f4:	mov	x0, x22
   399f8:	bl	c390 <mpfr_rint@plt>
   399fc:	ldr	x0, [sp, #96]
   39a00:	mov	x1, #0x7ffffffffffffffe    	// #9223372036854775806
   39a04:	add	x0, x0, x1
   39a08:	cmp	x0, #0x1
   39a0c:	b.hi	39a28 <__gmpfr_mpfr_get_uj@@Base+0x140>  // b.pmore
   39a10:	adrp	x2, 5a000 <mpfr_bases@@Base+0x2a8>
   39a14:	adrp	x0, 5a000 <mpfr_bases@@Base+0x2a8>
   39a18:	add	x2, x2, #0x610
   39a1c:	add	x0, x0, #0x6de
   39a20:	mov	w1, #0x3c                  	// #60
   39a24:	bl	cbd0 <mpfr_assert_fail@plt>
   39a28:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   39a2c:	ldr	x1, [x0, #2592]
   39a30:	add	x0, x0, #0xa20
   39a34:	blr	x1
   39a38:	ldr	w0, [x19, x0]
   39a3c:	ldr	x1, [sp, #96]
   39a40:	orr	w21, w21, w0
   39a44:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   39a48:	cmp	x1, x0
   39a4c:	b.eq	39b1c <__gmpfr_mpfr_get_uj@@Base+0x234>  // b.none
   39a50:	ldr	w0, [sp, #88]
   39a54:	cmp	w0, #0x0
   39a58:	b.gt	39a74 <__gmpfr_mpfr_get_uj@@Base+0x18c>
   39a5c:	adrp	x2, 5a000 <mpfr_bases@@Base+0x2a8>
   39a60:	adrp	x0, 5a000 <mpfr_bases@@Base+0x2a8>
   39a64:	add	x2, x2, #0x6e7
   39a68:	add	x0, x0, #0x6de
   39a6c:	mov	w1, #0x47                  	// #71
   39a70:	bl	cbd0 <mpfr_assert_fail@plt>
   39a74:	ldp	x0, x3, [sp, #96]
   39a78:	mov	w2, w0
   39a7c:	cmp	w0, #0x40
   39a80:	b.le	39a9c <__gmpfr_mpfr_get_uj@@Base+0x1b4>
   39a84:	adrp	x2, 5a000 <mpfr_bases@@Base+0x2a8>
   39a88:	adrp	x0, 5a000 <mpfr_bases@@Base+0x2a8>
   39a8c:	add	x2, x2, #0x6ff
   39a90:	add	x0, x0, #0x6de
   39a94:	mov	w1, #0x4a                  	// #74
   39a98:	bl	cbd0 <mpfr_assert_fail@plt>
   39a9c:	ldr	x0, [sp, #80]
   39aa0:	mov	x20, #0x0                   	// #0
   39aa4:	sub	x0, x0, #0x1
   39aa8:	sbfx	x0, x0, #6, #32
   39aac:	tbz	w0, #31, 39af8 <__gmpfr_mpfr_get_uj@@Base+0x210>
   39ab0:	mov	x0, x22
   39ab4:	bl	c0f0 <mpfr_clear@plt>
   39ab8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   39abc:	ldr	x1, [x0, #2592]
   39ac0:	add	x0, x0, #0xa20
   39ac4:	blr	x1
   39ac8:	str	w21, [x19, x0]
   39acc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   39ad0:	ldr	x1, [x0, #2528]
   39ad4:	add	x0, x0, #0x9e0
   39ad8:	blr	x1
   39adc:	str	x24, [x19, x0]
   39ae0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   39ae4:	ldr	x1, [x0, #2560]
   39ae8:	add	x0, x0, #0xa00
   39aec:	blr	x1
   39af0:	str	x23, [x19, x0]
   39af4:	b	3994c <__gmpfr_mpfr_get_uj@@Base+0x64>
   39af8:	ldr	x1, [x3, x0, lsl #3]
   39afc:	subs	w2, w2, #0x40
   39b00:	neg	w5, w2
   39b04:	sub	x0, x0, #0x1
   39b08:	mov	x4, x1
   39b0c:	lsr	x1, x1, x5
   39b10:	csel	x1, x1, x4, ne  // ne = any
   39b14:	add	x20, x20, x1
   39b18:	b	39aac <__gmpfr_mpfr_get_uj@@Base+0x1c4>
   39b1c:	mov	x20, #0x0                   	// #0
   39b20:	b	39ab0 <__gmpfr_mpfr_get_uj@@Base+0x1c8>

0000000000039b24 <mpfr_get_z@@Base>:
   39b24:	stp	x29, x30, [sp, #-112]!
   39b28:	mov	x29, sp
   39b2c:	ldr	x3, [x1, #16]
   39b30:	stp	x19, x20, [sp, #16]
   39b34:	stp	x21, x22, [sp, #32]
   39b38:	mov	x21, x0
   39b3c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   39b40:	stp	x23, x24, [sp, #48]
   39b44:	cmp	x3, x0
   39b48:	stp	x25, x26, [sp, #64]
   39b4c:	b.gt	39bac <mpfr_get_z@@Base+0x88>
   39b50:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   39b54:	cmp	x3, x0
   39b58:	b.eq	39b80 <mpfr_get_z@@Base+0x5c>  // b.none
   39b5c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   39b60:	ldr	x1, [x0, #2592]
   39b64:	add	x0, x0, #0xa20
   39b68:	blr	x1
   39b6c:	mrs	x1, tpidr_el0
   39b70:	add	x0, x1, x0
   39b74:	ldr	w1, [x0]
   39b78:	orr	w1, w1, #0x10
   39b7c:	str	w1, [x0]
   39b80:	mov	w20, #0x0                   	// #0
   39b84:	mov	x0, x21
   39b88:	mov	x1, #0x0                   	// #0
   39b8c:	bl	bd30 <__gmpz_set_ui@plt>
   39b90:	mov	w0, w20
   39b94:	ldp	x19, x20, [sp, #16]
   39b98:	ldp	x21, x22, [sp, #32]
   39b9c:	ldp	x23, x24, [sp, #48]
   39ba0:	ldp	x25, x26, [sp, #64]
   39ba4:	ldp	x29, x30, [sp], #112
   39ba8:	ret
   39bac:	mrs	x19, tpidr_el0
   39bb0:	mov	x20, x1
   39bb4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   39bb8:	ldr	x1, [x0, #2592]
   39bbc:	add	x0, x0, #0xa20
   39bc0:	blr	x1
   39bc4:	mov	w26, w2
   39bc8:	ldr	w25, [x19, x0]
   39bcc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   39bd0:	ldr	x1, [x0, #2528]
   39bd4:	add	x0, x0, #0x9e0
   39bd8:	blr	x1
   39bdc:	add	x1, x19, x0
   39be0:	ldr	x24, [x19, x0]
   39be4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   39be8:	ldr	x2, [x0, #2560]
   39bec:	add	x0, x0, #0xa00
   39bf0:	blr	x2
   39bf4:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   39bf8:	str	x2, [x1]
   39bfc:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   39c00:	ldr	x23, [x19, x0]
   39c04:	str	x1, [x19, x0]
   39c08:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   39c0c:	cmp	x3, x0
   39c10:	b.lt	39c2c <mpfr_get_z@@Base+0x108>  // b.tstop
   39c14:	adrp	x2, 5a000 <mpfr_bases@@Base+0x2a8>
   39c18:	adrp	x0, 5a000 <mpfr_bases@@Base+0x2a8>
   39c1c:	add	x2, x2, #0x718
   39c20:	add	x0, x0, #0x75d
   39c24:	mov	w1, #0x31                  	// #49
   39c28:	bl	cbd0 <mpfr_assert_fail@plt>
   39c2c:	cmp	x3, #0x0
   39c30:	add	x22, sp, #0x50
   39c34:	csinc	x1, x3, xzr, gt
   39c38:	mov	x0, x22
   39c3c:	bl	cb10 <mpfr_init2@plt>
   39c40:	mov	x1, x20
   39c44:	mov	w2, w26
   39c48:	mov	x0, x22
   39c4c:	bl	c390 <mpfr_rint@plt>
   39c50:	cmp	w0, #0x1
   39c54:	mov	w20, w0
   39c58:	ccmn	w0, #0x1, #0x4, ne  // ne = any
   39c5c:	b.ne	39c78 <mpfr_get_z@@Base+0x154>  // b.any
   39c60:	adrp	x2, 5a000 <mpfr_bases@@Base+0x2a8>
   39c64:	adrp	x0, 5a000 <mpfr_bases@@Base+0x2a8>
   39c68:	add	x2, x2, #0x765
   39c6c:	add	x0, x0, #0x75d
   39c70:	mov	w1, #0x35                  	// #53
   39c74:	bl	cbd0 <mpfr_assert_fail@plt>
   39c78:	ldr	x0, [sp, #96]
   39c7c:	mov	x1, #0x7ffffffffffffffe    	// #9223372036854775806
   39c80:	add	x0, x0, x1
   39c84:	cmp	x0, #0x1
   39c88:	b.hi	39ca4 <mpfr_get_z@@Base+0x180>  // b.pmore
   39c8c:	adrp	x2, 5a000 <mpfr_bases@@Base+0x2a8>
   39c90:	adrp	x0, 5a000 <mpfr_bases@@Base+0x2a8>
   39c94:	add	x2, x2, #0x77d
   39c98:	add	x0, x0, #0x75d
   39c9c:	mov	w1, #0x37                  	// #55
   39ca0:	bl	cbd0 <mpfr_assert_fail@plt>
   39ca4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   39ca8:	ldr	x1, [x0, #2592]
   39cac:	add	x0, x0, #0xa20
   39cb0:	blr	x1
   39cb4:	ldr	w0, [x19, x0]
   39cb8:	mov	x1, x22
   39cbc:	orr	w25, w25, w0
   39cc0:	mov	x0, x21
   39cc4:	bl	cb50 <mpfr_get_z_2exp@plt>
   39cc8:	mov	x2, x0
   39ccc:	tbnz	x0, #63, 39d24 <mpfr_get_z@@Base+0x200>
   39cd0:	mov	x1, x21
   39cd4:	mov	x0, x21
   39cd8:	bl	c290 <__gmpz_mul_2exp@plt>
   39cdc:	mov	x0, x22
   39ce0:	bl	c0f0 <mpfr_clear@plt>
   39ce4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   39ce8:	ldr	x1, [x0, #2592]
   39cec:	add	x0, x0, #0xa20
   39cf0:	blr	x1
   39cf4:	str	w25, [x19, x0]
   39cf8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   39cfc:	ldr	x1, [x0, #2528]
   39d00:	add	x0, x0, #0x9e0
   39d04:	blr	x1
   39d08:	str	x24, [x19, x0]
   39d0c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   39d10:	ldr	x1, [x0, #2560]
   39d14:	add	x0, x0, #0xa00
   39d18:	blr	x1
   39d1c:	str	x23, [x19, x0]
   39d20:	b	39b90 <mpfr_get_z@@Base+0x6c>
   39d24:	neg	x2, x0
   39d28:	mov	x1, x21
   39d2c:	mov	x0, x21
   39d30:	bl	c1c0 <__gmpz_fdiv_q_2exp@plt>
   39d34:	b	39cdc <mpfr_get_z@@Base+0x1b8>

0000000000039d38 <mpfr_zero_p@@Base>:
   39d38:	ldr	x1, [x0, #16]
   39d3c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   39d40:	cmp	x1, x0
   39d44:	cset	w0, eq  // eq = none
   39d48:	ret

0000000000039d4c <mpfr_clear_cache@@Base>:
   39d4c:	ldr	x1, [x0]
   39d50:	cbz	x1, 39d78 <mpfr_clear_cache@@Base+0x2c>
   39d54:	stp	x29, x30, [sp, #-32]!
   39d58:	mov	x29, sp
   39d5c:	str	x19, [sp, #16]
   39d60:	mov	x19, x0
   39d64:	bl	c0f0 <mpfr_clear@plt>
   39d68:	str	xzr, [x19]
   39d6c:	ldr	x19, [sp, #16]
   39d70:	ldp	x29, x30, [sp], #32
   39d74:	ret
   39d78:	ret

0000000000039d7c <mpfr_cache@@Base>:
   39d7c:	stp	x29, x30, [sp, #-96]!
   39d80:	mov	x29, sp
   39d84:	stp	x21, x22, [sp, #32]
   39d88:	mrs	x22, tpidr_el0
   39d8c:	mov	w21, w2
   39d90:	stp	x19, x20, [sp, #16]
   39d94:	mov	x20, x0
   39d98:	stp	x27, x28, [sp, #80]
   39d9c:	mov	x27, x1
   39da0:	ldr	x19, [x0]
   39da4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   39da8:	ldr	x1, [x0, #2592]
   39dac:	add	x0, x0, #0xa20
   39db0:	blr	x1
   39db4:	stp	x23, x24, [sp, #48]
   39db8:	ldr	w23, [x22, x0]
   39dbc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   39dc0:	ldr	x1, [x0, #2528]
   39dc4:	add	x0, x0, #0x9e0
   39dc8:	blr	x1
   39dcc:	add	x1, x22, x0
   39dd0:	stp	x25, x26, [sp, #64]
   39dd4:	ldr	x24, [x22, x0]
   39dd8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   39ddc:	ldr	x2, [x0, #2560]
   39de0:	add	x0, x0, #0xa00
   39de4:	blr	x2
   39de8:	ldr	x28, [x27]
   39dec:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   39df0:	str	x2, [x1]
   39df4:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   39df8:	ldr	x25, [x22, x0]
   39dfc:	str	x1, [x22, x0]
   39e00:	cmp	x19, x28
   39e04:	b.le	39e40 <mpfr_cache@@Base+0xc4>
   39e08:	cbnz	x28, 39ef8 <mpfr_cache@@Base+0x17c>
   39e0c:	mov	x1, x19
   39e10:	mov	x0, x27
   39e14:	bl	cb10 <mpfr_init2@plt>
   39e18:	cmp	x28, x19
   39e1c:	mov	x0, x27
   39e20:	csel	x28, x28, x19, ge  // ge = tcont
   39e24:	mov	x1, x28
   39e28:	bl	bf50 <mpfr_set_prec@plt>
   39e2c:	ldr	x2, [x27, #40]
   39e30:	mov	x0, x27
   39e34:	mov	w1, #0x0                   	// #0
   39e38:	blr	x2
   39e3c:	str	w0, [x27, #32]
   39e40:	ldr	w0, [x27, #8]
   39e44:	cmp	w0, #0x0
   39e48:	b.gt	39e64 <mpfr_cache@@Base+0xe8>
   39e4c:	adrp	x2, 5a000 <mpfr_bases@@Base+0x2a8>
   39e50:	adrp	x0, 5a000 <mpfr_bases@@Base+0x2a8>
   39e54:	add	x2, x2, #0x7f4
   39e58:	add	x0, x0, #0x813
   39e5c:	mov	w1, #0x76                  	// #118
   39e60:	bl	cbd0 <mpfr_assert_fail@plt>
   39e64:	ldr	x3, [x20]
   39e68:	sub	x4, x28, #0x1
   39e6c:	ldp	x0, x6, [x27, #16]
   39e70:	asr	x4, x4, #6
   39e74:	ldr	w19, [x27, #8]
   39e78:	cmp	x28, x3
   39e7c:	str	w19, [x20, #8]
   39e80:	str	x0, [x20, #16]
   39e84:	sub	x0, x3, #0x1
   39e88:	ldr	x26, [x20, #24]
   39e8c:	asr	x0, x0, #6
   39e90:	b.gt	39f08 <mpfr_cache@@Base+0x18c>
   39e94:	add	x2, x4, #0x1
   39e98:	sub	x4, x0, x4
   39e9c:	add	x0, x26, x4, lsl #3
   39ea0:	lsl	x19, x4, #3
   39ea4:	cmp	x0, x6
   39ea8:	b.eq	39eb8 <mpfr_cache@@Base+0x13c>  // b.none
   39eac:	lsl	x2, x2, #3
   39eb0:	mov	x1, x6
   39eb4:	bl	ba90 <memcpy@plt>
   39eb8:	mov	x2, x19
   39ebc:	mov	w19, #0x0                   	// #0
   39ec0:	mov	x0, x26
   39ec4:	mov	w1, #0x0                   	// #0
   39ec8:	bl	c1a0 <memset@plt>
   39ecc:	ldr	w26, [x27, #32]
   39ed0:	cbz	w26, 3a10c <mpfr_cache@@Base+0x390>
   39ed4:	sub	w1, w21, #0x1
   39ed8:	cmp	w1, #0x3
   39edc:	b.hi	3a19c <mpfr_cache@@Base+0x420>  // b.pmore
   39ee0:	adrp	x0, 5a000 <mpfr_bases@@Base+0x2a8>
   39ee4:	add	x0, x0, #0x81c
   39ee8:	ldrh	w0, [x0, w1, uxtw #1]
   39eec:	adr	x1, 39ef8 <mpfr_cache@@Base+0x17c>
   39ef0:	add	x0, x1, w0, sxth #2
   39ef4:	br	x0
   39ef8:	mov	x0, #0xa                   	// #10
   39efc:	sdiv	x0, x28, x0
   39f00:	add	x28, x28, x0
   39f04:	b	39e18 <mpfr_cache@@Base+0x9c>
   39f08:	sub	x4, x4, x0
   39f0c:	neg	w3, w3
   39f10:	add	x2, x0, #0x1
   39f14:	ands	w3, w3, #0x3f
   39f18:	lsl	x8, x4, #3
   39f1c:	add	x1, x6, x4, lsl #3
   39f20:	b.eq	39fc0 <mpfr_cache@@Base+0x244>  // b.none
   39f24:	sub	w0, w3, #0x1
   39f28:	mov	x5, #0x1                   	// #1
   39f2c:	ldr	x3, [x6, x8]
   39f30:	lsl	x5, x5, x0
   39f34:	cmp	w21, #0x0
   39f38:	and	x7, x3, x5
   39f3c:	sub	x5, x5, #0x1
   39f40:	and	x3, x5, x3
   39f44:	ccmp	x7, #0x0, #0x4, ne  // ne = any
   39f48:	b.ne	39f6c <mpfr_cache@@Base+0x1f0>  // b.any
   39f4c:	mov	x9, #0xfffffffffffffff8    	// #-8
   39f50:	madd	x9, x4, x9, x1
   39f54:	cmp	x4, #0x0
   39f58:	sub	x4, x4, #0x1
   39f5c:	cset	w5, ne  // ne = any
   39f60:	cmp	x3, #0x0
   39f64:	csel	w5, w5, wzr, eq  // eq = none
   39f68:	cbnz	w5, 39fb8 <mpfr_cache@@Base+0x23c>
   39f6c:	mov	x28, #0x2                   	// #2
   39f70:	lsl	x28, x28, x0
   39f74:	cmp	w21, #0x5
   39f78:	b.eq	3a204 <mpfr_cache@@Base+0x488>  // b.none
   39f7c:	cbnz	w21, 3a1e8 <mpfr_cache@@Base+0x46c>
   39f80:	cbnz	x7, 3a00c <mpfr_cache@@Base+0x290>
   39f84:	orr	x3, x7, x3
   39f88:	cmp	x3, #0x0
   39f8c:	csneg	w19, wzr, w19, eq  // eq = none
   39f90:	cmp	x26, x1
   39f94:	b.eq	39fa4 <mpfr_cache@@Base+0x228>  // b.none
   39f98:	lsl	x2, x2, #3
   39f9c:	mov	x0, x26
   39fa0:	bl	ba90 <memcpy@plt>
   39fa4:	ldr	x1, [x26]
   39fa8:	neg	x0, x28
   39fac:	and	x0, x1, x0
   39fb0:	str	x0, [x26]
   39fb4:	b	39ecc <mpfr_cache@@Base+0x150>
   39fb8:	ldr	x3, [x9, x4, lsl #3]
   39fbc:	b	39f54 <mpfr_cache@@Base+0x1d8>
   39fc0:	ldur	x0, [x1, #-8]
   39fc4:	cmp	w21, #0x0
   39fc8:	and	x7, x0, #0x8000000000000000
   39fcc:	and	x3, x0, #0x7fffffffffffffff
   39fd0:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   39fd4:	b.lt	3a1dc <mpfr_cache@@Base+0x460>  // b.tstop
   39fd8:	mov	x5, #0xfffffffffffffff8    	// #-8
   39fdc:	sub	x0, x4, #0x1
   39fe0:	madd	x4, x4, x5, x1
   39fe4:	cmp	x0, #0x0
   39fe8:	sub	x0, x0, #0x1
   39fec:	cset	w5, ne  // ne = any
   39ff0:	cmp	x3, #0x0
   39ff4:	csel	w5, w5, wzr, eq  // eq = none
   39ff8:	cbnz	w5, 3a004 <mpfr_cache@@Base+0x288>
   39ffc:	mov	x28, #0x1                   	// #1
   3a000:	b	39f74 <mpfr_cache@@Base+0x1f8>
   3a004:	ldr	x3, [x4, x0, lsl #3]
   3a008:	b	39fe4 <mpfr_cache@@Base+0x268>
   3a00c:	cbnz	x3, 3a034 <mpfr_cache@@Base+0x2b8>
   3a010:	ldr	w0, [x27, #32]
   3a014:	cmp	w0, #0x0
   3a018:	cbnz	w0, 3a030 <mpfr_cache@@Base+0x2b4>
   3a01c:	ldr	x0, [x6, x8]
   3a020:	tst	x28, x0
   3a024:	b.ne	3a034 <mpfr_cache@@Base+0x2b8>  // b.any
   3a028:	neg	w19, w19
   3a02c:	b	39f90 <mpfr_cache@@Base+0x214>
   3a030:	b.ge	3a028 <mpfr_cache@@Base+0x2ac>  // b.tcont
   3a034:	ldr	x0, [x6, x8]
   3a038:	adds	x0, x0, x28
   3a03c:	str	x0, [x26]
   3a040:	b.cs	3a088 <mpfr_cache@@Base+0x30c>  // b.hs, b.nlast
   3a044:	cmp	x26, x1
   3a048:	b.eq	39fa4 <mpfr_cache@@Base+0x228>  // b.none
   3a04c:	mov	x0, #0x1                   	// #1
   3a050:	b	3a0e8 <mpfr_cache@@Base+0x36c>
   3a054:	ldr	x3, [x1, x0, lsl #3]
   3a058:	add	x3, x3, #0x1
   3a05c:	str	x3, [x26, x0, lsl #3]
   3a060:	add	x0, x0, #0x1
   3a064:	cbz	x3, 3a08c <mpfr_cache@@Base+0x310>
   3a068:	cmp	x26, x1
   3a06c:	b.eq	39fa4 <mpfr_cache@@Base+0x228>  // b.none
   3a070:	cmp	x2, x0
   3a074:	b.le	39fa4 <mpfr_cache@@Base+0x228>
   3a078:	ldr	x3, [x1, x0, lsl #3]
   3a07c:	str	x3, [x26, x0, lsl #3]
   3a080:	add	x0, x0, #0x1
   3a084:	b	3a070 <mpfr_cache@@Base+0x2f4>
   3a088:	mov	x0, #0x1                   	// #1
   3a08c:	cmp	x2, x0
   3a090:	b.gt	3a054 <mpfr_cache@@Base+0x2d8>
   3a094:	add	x2, x26, x2, lsl #3
   3a098:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3a09c:	stur	x0, [x2, #-8]
   3a0a0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3a0a4:	ldr	x2, [x0, #2560]
   3a0a8:	add	x0, x0, #0xa00
   3a0ac:	blr	x2
   3a0b0:	ldr	x1, [x20, #16]
   3a0b4:	ldr	x0, [x22, x0]
   3a0b8:	add	x1, x1, #0x1
   3a0bc:	str	x1, [x20, #16]
   3a0c0:	cmp	x1, x0
   3a0c4:	b.le	39fa4 <mpfr_cache@@Base+0x228>
   3a0c8:	mov	w2, w19
   3a0cc:	mov	w1, w21
   3a0d0:	mov	x0, x20
   3a0d4:	bl	bfc0 <mpfr_overflow@plt>
   3a0d8:	b	39fa4 <mpfr_cache@@Base+0x228>
   3a0dc:	ldr	x3, [x1, x0, lsl #3]
   3a0e0:	str	x3, [x26, x0, lsl #3]
   3a0e4:	add	x0, x0, #0x1
   3a0e8:	cmp	x2, x0
   3a0ec:	b.gt	3a0dc <mpfr_cache@@Base+0x360>
   3a0f0:	b	39fa4 <mpfr_cache@@Base+0x228>
   3a0f4:	cbnz	w19, 3a10c <mpfr_cache@@Base+0x390>
   3a0f8:	cmp	w26, #0x0
   3a0fc:	b.le	3a1a8 <mpfr_cache@@Base+0x42c>
   3a100:	mov	x0, x20
   3a104:	bl	be50 <mpfr_nextbelow@plt>
   3a108:	neg	w19, w26
   3a10c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3a110:	ldr	x1, [x0, #2592]
   3a114:	add	x0, x0, #0xa20
   3a118:	blr	x1
   3a11c:	add	x1, x22, x0
   3a120:	str	w23, [x22, x0]
   3a124:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3a128:	ldr	x2, [x0, #2528]
   3a12c:	add	x0, x0, #0x9e0
   3a130:	blr	x2
   3a134:	str	x24, [x22, x0]
   3a138:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3a13c:	ldr	x2, [x0, #2560]
   3a140:	add	x0, x0, #0xa00
   3a144:	blr	x2
   3a148:	str	x25, [x22, x0]
   3a14c:	ldr	x0, [x20, #16]
   3a150:	cmp	x24, x0
   3a154:	b.gt	3a160 <mpfr_cache@@Base+0x3e4>
   3a158:	cmp	x25, x0
   3a15c:	b.ge	3a1b0 <mpfr_cache@@Base+0x434>  // b.tcont
   3a160:	mov	w2, w21
   3a164:	mov	w1, w19
   3a168:	mov	x0, x20
   3a16c:	ldp	x19, x20, [sp, #16]
   3a170:	ldp	x21, x22, [sp, #32]
   3a174:	ldp	x23, x24, [sp, #48]
   3a178:	ldp	x25, x26, [sp, #64]
   3a17c:	ldp	x27, x28, [sp, #80]
   3a180:	ldp	x29, x30, [sp], #96
   3a184:	b	cbc0 <mpfr_check_range@plt>
   3a188:	cbnz	w19, 3a10c <mpfr_cache@@Base+0x390>
   3a18c:	tbz	w26, #31, 3a1a8 <mpfr_cache@@Base+0x42c>
   3a190:	mov	x0, x20
   3a194:	bl	c1b0 <mpfr_nextabove@plt>
   3a198:	b	3a108 <mpfr_cache@@Base+0x38c>
   3a19c:	cmp	w19, #0x0
   3a1a0:	csel	w19, w19, w26, ne  // ne = any
   3a1a4:	b	3a10c <mpfr_cache@@Base+0x390>
   3a1a8:	mov	w19, w26
   3a1ac:	b	3a10c <mpfr_cache@@Base+0x390>
   3a1b0:	cbz	w19, 3a1bc <mpfr_cache@@Base+0x440>
   3a1b4:	orr	w23, w23, #0x8
   3a1b8:	str	w23, [x1]
   3a1bc:	mov	w0, w19
   3a1c0:	ldp	x19, x20, [sp, #16]
   3a1c4:	ldp	x21, x22, [sp, #32]
   3a1c8:	ldp	x23, x24, [sp, #48]
   3a1cc:	ldp	x25, x26, [sp, #64]
   3a1d0:	ldp	x27, x28, [sp, #80]
   3a1d4:	ldp	x29, x30, [sp], #96
   3a1d8:	ret
   3a1dc:	cmp	w21, #0x5
   3a1e0:	mov	x28, #0x1                   	// #1
   3a1e4:	b.eq	3a204 <mpfr_cache@@Base+0x488>  // b.none
   3a1e8:	cmp	w21, #0x1
   3a1ec:	b.eq	39f84 <mpfr_cache@@Base+0x208>  // b.none
   3a1f0:	add	w0, w21, w19, lsr #31
   3a1f4:	cmp	w0, #0x3
   3a1f8:	b.eq	39f84 <mpfr_cache@@Base+0x208>  // b.none
   3a1fc:	orr	x3, x7, x3
   3a200:	cbnz	x3, 3a034 <mpfr_cache@@Base+0x2b8>
   3a204:	mov	w19, #0x0                   	// #0
   3a208:	b	39f90 <mpfr_cache@@Base+0x214>

000000000003a20c <mpfr_sqr@@Base>:
   3a20c:	stp	x29, x30, [sp, #-144]!
   3a210:	mov	x29, sp
   3a214:	stp	x19, x20, [sp, #16]
   3a218:	ldr	x20, [x1, #16]
   3a21c:	stp	x21, x22, [sp, #32]
   3a220:	mov	x21, x0
   3a224:	stp	x23, x24, [sp, #48]
   3a228:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3a22c:	cmp	x20, x0
   3a230:	stp	x25, x26, [sp, #64]
   3a234:	stp	x27, x28, [sp, #80]
   3a238:	b.gt	3a2c0 <mpfr_sqr@@Base+0xb4>
   3a23c:	mov	x1, #0x2                   	// #2
   3a240:	movk	x1, #0x8000, lsl #48
   3a244:	cmp	x20, x1
   3a248:	b.ne	3a29c <mpfr_sqr@@Base+0x90>  // b.any
   3a24c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3a250:	ldr	x1, [x0, #2592]
   3a254:	add	x0, x0, #0xa20
   3a258:	blr	x1
   3a25c:	str	x20, [x21, #16]
   3a260:	mrs	x1, tpidr_el0
   3a264:	add	x0, x1, x0
   3a268:	ldr	w1, [x0]
   3a26c:	orr	w1, w1, #0x4
   3a270:	str	w1, [x0]
   3a274:	mov	w1, #0x0                   	// #0
   3a278:	mov	sp, x29
   3a27c:	mov	w0, w1
   3a280:	ldp	x19, x20, [sp, #16]
   3a284:	ldp	x21, x22, [sp, #32]
   3a288:	ldp	x23, x24, [sp, #48]
   3a28c:	ldp	x25, x26, [sp, #64]
   3a290:	ldp	x27, x28, [sp, #80]
   3a294:	ldp	x29, x30, [sp], #144
   3a298:	ret
   3a29c:	mov	w1, #0x1                   	// #1
   3a2a0:	str	w1, [x21, #8]
   3a2a4:	cmp	x20, x0
   3a2a8:	b.ne	3a2b4 <mpfr_sqr@@Base+0xa8>  // b.any
   3a2ac:	str	x20, [x21, #16]
   3a2b0:	b	3a274 <mpfr_sqr@@Base+0x68>
   3a2b4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3a2b8:	str	x0, [x21, #16]
   3a2bc:	b	3a274 <mpfr_sqr@@Base+0x68>
   3a2c0:	mov	w19, w2
   3a2c4:	mov	x25, x1
   3a2c8:	ldr	x2, [x1]
   3a2cc:	lsl	x20, x20, #1
   3a2d0:	ldr	x27, [x21]
   3a2d4:	cmp	x2, #0x40
   3a2d8:	cset	w0, le
   3a2dc:	cmp	x27, #0x3f
   3a2e0:	ccmp	w0, #0x0, #0x4, le
   3a2e4:	b.eq	3a4e0 <mpfr_sqr@@Base+0x2d4>  // b.none
   3a2e8:	ldr	x0, [x1, #24]
   3a2ec:	mov	x4, #0x40                  	// #64
   3a2f0:	sub	x24, x4, x27
   3a2f4:	mov	x6, #0x1                   	// #1
   3a2f8:	ldr	x8, [x21, #24]
   3a2fc:	lsl	x6, x6, x24
   3a300:	ldr	x1, [x0]
   3a304:	sub	x3, x6, #0x1
   3a308:	umulh	x0, x1, x1
   3a30c:	mul	x1, x1, x1
   3a310:	tbnz	x0, #63, 3a320 <mpfr_sqr@@Base+0x114>
   3a314:	sub	x20, x20, #0x1
   3a318:	extr	x0, x0, x1, #63
   3a31c:	lsl	x1, x1, #1
   3a320:	sub	w4, w24, #0x1
   3a324:	mov	x2, #0x1                   	// #1
   3a328:	lsl	x4, x2, x4
   3a32c:	eor	x3, x3, x4
   3a330:	and	x7, x4, x0
   3a334:	and	x3, x3, x0
   3a338:	neg	x4, x6
   3a33c:	orr	x3, x3, x1
   3a340:	and	x5, x0, x4
   3a344:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3a348:	ldr	x1, [x0, #2560]
   3a34c:	add	x0, x0, #0xa00
   3a350:	blr	x1
   3a354:	mrs	x1, tpidr_el0
   3a358:	str	x5, [x8]
   3a35c:	str	w2, [x21, #8]
   3a360:	ldr	x0, [x1, x0]
   3a364:	cmp	x0, x20
   3a368:	b.ge	3a37c <mpfr_sqr@@Base+0x170>  // b.tcont
   3a36c:	mov	w1, w19
   3a370:	mov	x0, x21
   3a374:	bl	bfc0 <mpfr_overflow@plt>
   3a378:	b	3ab24 <mpfr_sqr@@Base+0x918>
   3a37c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3a380:	ldr	x9, [x0, #2528]
   3a384:	add	x0, x0, #0x9e0
   3a388:	blr	x9
   3a38c:	ldr	x0, [x1, x0]
   3a390:	cmp	x20, x0
   3a394:	b.ge	3a40c <mpfr_sqr@@Base+0x200>  // b.tcont
   3a398:	sub	x0, x0, #0x1
   3a39c:	cmp	x20, x0
   3a3a0:	b.ne	3a3d8 <mpfr_sqr@@Base+0x1cc>  // b.any
   3a3a4:	cmp	x4, x5
   3a3a8:	b.ne	3a3d0 <mpfr_sqr@@Base+0x1c4>  // b.any
   3a3ac:	cmp	w19, #0x0
   3a3b0:	ccmp	x7, #0x0, #0x4, eq  // eq = none
   3a3b4:	b.ne	3a40c <mpfr_sqr@@Base+0x200>  // b.any
   3a3b8:	cmp	w19, #0x4
   3a3bc:	b.eq	3a3c8 <mpfr_sqr@@Base+0x1bc>  // b.none
   3a3c0:	cmp	w19, #0x2
   3a3c4:	b.ne	3a3d0 <mpfr_sqr@@Base+0x1c4>  // b.any
   3a3c8:	orr	x0, x7, x3
   3a3cc:	cbnz	x0, 3a40c <mpfr_sqr@@Base+0x200>
   3a3d0:	cbz	w19, 3a3e0 <mpfr_sqr@@Base+0x1d4>
   3a3d4:	b	3a3f8 <mpfr_sqr@@Base+0x1ec>
   3a3d8:	cbnz	w19, 3a3f8 <mpfr_sqr@@Base+0x1ec>
   3a3dc:	b.lt	3ac24 <mpfr_sqr@@Base+0xa18>  // b.tstop
   3a3e0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3a3e4:	cmp	x5, x0
   3a3e8:	b.ne	3a7d8 <mpfr_sqr@@Base+0x5cc>  // b.any
   3a3ec:	orr	x3, x7, x3
   3a3f0:	cmp	x3, #0x0
   3a3f4:	cset	w19, eq  // eq = none
   3a3f8:	mov	w1, w19
   3a3fc:	mov	x0, x21
   3a400:	mov	w2, #0x1                   	// #1
   3a404:	bl	c450 <mpfr_underflow@plt>
   3a408:	b	3ab24 <mpfr_sqr@@Base+0x918>
   3a40c:	str	x20, [x21, #16]
   3a410:	orr	x0, x7, x3
   3a414:	cbz	x0, 3a274 <mpfr_sqr@@Base+0x68>
   3a418:	cmp	w19, #0x5
   3a41c:	b.eq	3a274 <mpfr_sqr@@Base+0x68>  // b.none
   3a420:	cbnz	w19, 3a474 <mpfr_sqr@@Base+0x268>
   3a424:	cbz	x7, 3a480 <mpfr_sqr@@Base+0x274>
   3a428:	ldr	x4, [x8]
   3a42c:	lsr	x4, x4, x24
   3a430:	and	x4, x4, #0x1
   3a434:	orr	x3, x4, x3
   3a438:	cbz	x3, 3a480 <mpfr_sqr@@Base+0x274>
   3a43c:	ldr	x0, [x8]
   3a440:	adds	x6, x6, x0
   3a444:	b.eq	3a4a8 <mpfr_sqr@@Base+0x29c>  // b.none
   3a448:	str	x6, [x8]
   3a44c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3a450:	ldr	x2, [x0, #2592]
   3a454:	add	x0, x0, #0xa20
   3a458:	blr	x2
   3a45c:	add	x0, x1, x0
   3a460:	ldr	w1, [x0]
   3a464:	orr	w1, w1, #0x8
   3a468:	str	w1, [x0]
   3a46c:	mov	w1, #0x1                   	// #1
   3a470:	b	3a278 <mpfr_sqr@@Base+0x6c>
   3a474:	and	w0, w19, #0xfffffffd
   3a478:	cmp	w0, #0x1
   3a47c:	b.ne	3a43c <mpfr_sqr@@Base+0x230>  // b.any
   3a480:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3a484:	ldr	x2, [x0, #2592]
   3a488:	add	x0, x0, #0xa20
   3a48c:	blr	x2
   3a490:	add	x0, x1, x0
   3a494:	ldr	w1, [x0]
   3a498:	orr	w1, w1, #0x8
   3a49c:	str	w1, [x0]
   3a4a0:	mov	w1, #0xffffffff            	// #-1
   3a4a4:	b	3a278 <mpfr_sqr@@Base+0x6c>
   3a4a8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3a4ac:	str	x0, [x8]
   3a4b0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3a4b4:	ldr	x2, [x0, #2560]
   3a4b8:	add	x0, x0, #0xa00
   3a4bc:	blr	x2
   3a4c0:	ldr	x0, [x1, x0]
   3a4c4:	cmp	x20, x0
   3a4c8:	b.lt	3a4d4 <mpfr_sqr@@Base+0x2c8>  // b.tstop
   3a4cc:	mov	w2, #0x1                   	// #1
   3a4d0:	b	3a36c <mpfr_sqr@@Base+0x160>
   3a4d4:	add	x20, x20, #0x1
   3a4d8:	str	x20, [x21, #16]
   3a4dc:	b	3a44c <mpfr_sqr@@Base+0x240>
   3a4e0:	sub	x1, x27, #0x41
   3a4e4:	cmp	x1, #0x3e
   3a4e8:	b.hi	3a728 <mpfr_sqr@@Base+0x51c>  // b.pmore
   3a4ec:	sub	x0, x2, #0x41
   3a4f0:	cmp	x0, #0x3f
   3a4f4:	b.hi	3aac8 <mpfr_sqr@@Base+0x8bc>  // b.pmore
   3a4f8:	ldr	x1, [x25, #24]
   3a4fc:	mov	x0, #0x80                  	// #128
   3a500:	sub	x4, x0, x27
   3a504:	mov	x8, #0x1                   	// #1
   3a508:	ldr	x7, [x21, #24]
   3a50c:	lsl	x9, x8, x4
   3a510:	ldp	x2, x0, [x1]
   3a514:	umulh	x10, x0, x2
   3a518:	lsl	x6, x10, #1
   3a51c:	sub	x3, x9, #0x1
   3a520:	umulh	x11, x0, x0
   3a524:	add	x10, x11, x10, lsr #63
   3a528:	mul	x5, x0, x0
   3a52c:	adds	x5, x5, x6
   3a530:	add	x1, x5, #0x2
   3a534:	cinc	x10, x10, cs  // cs = hs, nlast
   3a538:	and	x1, x1, x3, lsr #2
   3a53c:	mov	x6, x5
   3a540:	cmp	x1, #0x2
   3a544:	b.hi	3a664 <mpfr_sqr@@Base+0x458>  // b.pmore
   3a548:	mul	x0, x0, x2
   3a54c:	umulh	x1, x2, x2
   3a550:	adds	x1, x0, x1
   3a554:	mul	x8, x2, x2
   3a558:	cset	x5, cs  // cs = hs, nlast
   3a55c:	adds	x5, x6, x5
   3a560:	cinc	x10, x10, cs  // cs = hs, nlast
   3a564:	adds	x0, x0, x1
   3a568:	cset	x6, cs  // cs = hs, nlast
   3a56c:	adds	x5, x5, x6
   3a570:	mov	x6, x5
   3a574:	cinc	x10, x10, cs  // cs = hs, nlast
   3a578:	tbnz	x10, #63, 3a58c <mpfr_sqr@@Base+0x380>
   3a57c:	sub	x20, x20, #0x1
   3a580:	extr	x10, x10, x6, #63
   3a584:	extr	x6, x6, x0, #63
   3a588:	lsl	x0, x0, #1
   3a58c:	sub	w5, w4, #0x1
   3a590:	orr	x0, x8, x0
   3a594:	mov	x2, #0x1                   	// #1
   3a598:	neg	x8, x9
   3a59c:	lsl	x5, x2, x5
   3a5a0:	eor	x1, x3, x5
   3a5a4:	and	x1, x1, x6
   3a5a8:	and	x12, x6, x8
   3a5ac:	orr	x1, x1, x0
   3a5b0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3a5b4:	ldr	x3, [x0, #2560]
   3a5b8:	add	x0, x0, #0xa00
   3a5bc:	blr	x3
   3a5c0:	mrs	x3, tpidr_el0
   3a5c4:	stp	x12, x10, [x7]
   3a5c8:	and	x11, x5, x6
   3a5cc:	str	w2, [x21, #8]
   3a5d0:	ldr	x0, [x3, x0]
   3a5d4:	cmp	x0, x20
   3a5d8:	b.lt	3a36c <mpfr_sqr@@Base+0x160>  // b.tstop
   3a5dc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3a5e0:	ldr	x2, [x0, #2528]
   3a5e4:	add	x0, x0, #0x9e0
   3a5e8:	blr	x2
   3a5ec:	ldr	x0, [x3, x0]
   3a5f0:	cmp	x20, x0
   3a5f4:	b.ge	3a66c <mpfr_sqr@@Base+0x460>  // b.tcont
   3a5f8:	sub	x0, x0, #0x1
   3a5fc:	cmp	x20, x0
   3a600:	b.ne	3a638 <mpfr_sqr@@Base+0x42c>  // b.any
   3a604:	cmn	x10, #0x1
   3a608:	b.ne	3ac64 <mpfr_sqr@@Base+0xa58>  // b.any
   3a60c:	cmp	x8, x12
   3a610:	b.ne	3a638 <mpfr_sqr@@Base+0x42c>  // b.any
   3a614:	cmp	w19, #0x0
   3a618:	ccmp	x11, #0x0, #0x4, eq  // eq = none
   3a61c:	b.ne	3a66c <mpfr_sqr@@Base+0x460>  // b.any
   3a620:	cmp	w19, #0x4
   3a624:	b.eq	3a630 <mpfr_sqr@@Base+0x424>  // b.none
   3a628:	cmp	w19, #0x2
   3a62c:	b.ne	3a638 <mpfr_sqr@@Base+0x42c>  // b.any
   3a630:	orr	x2, x11, x1
   3a634:	cbnz	x2, 3a66c <mpfr_sqr@@Base+0x460>
   3a638:	cbnz	w19, 3a3f8 <mpfr_sqr@@Base+0x1ec>
   3a63c:	cmp	x20, x0
   3a640:	b.lt	3ac24 <mpfr_sqr@@Base+0xa18>  // b.tstop
   3a644:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3a648:	cmp	x10, x0
   3a64c:	b.ne	3a7d8 <mpfr_sqr@@Base+0x5cc>  // b.any
   3a650:	orr	x5, x5, x8
   3a654:	and	x5, x5, x6
   3a658:	orr	x1, x5, x1
   3a65c:	cmp	x1, #0x0
   3a660:	b	3a3f4 <mpfr_sqr@@Base+0x1e8>
   3a664:	mov	x0, x8
   3a668:	b	3a578 <mpfr_sqr@@Base+0x36c>
   3a66c:	str	x20, [x21, #16]
   3a670:	orr	x0, x11, x1
   3a674:	cbz	x0, 3a274 <mpfr_sqr@@Base+0x68>
   3a678:	cmp	w19, #0x5
   3a67c:	b.eq	3a274 <mpfr_sqr@@Base+0x68>  // b.none
   3a680:	cbnz	w19, 3a6d4 <mpfr_sqr@@Base+0x4c8>
   3a684:	cbz	x11, 3a6e0 <mpfr_sqr@@Base+0x4d4>
   3a688:	ldr	x0, [x7]
   3a68c:	lsr	x0, x0, x4
   3a690:	and	x0, x0, #0x1
   3a694:	orr	x1, x0, x1
   3a698:	cbz	x1, 3a6e0 <mpfr_sqr@@Base+0x4d4>
   3a69c:	ldr	x0, [x7]
   3a6a0:	add	x9, x9, x0
   3a6a4:	str	x9, [x7]
   3a6a8:	ldr	x0, [x7, #8]
   3a6ac:	cmp	x9, #0x0
   3a6b0:	cinc	x0, x0, eq  // eq = none
   3a6b4:	cbz	x0, 3a6f8 <mpfr_sqr@@Base+0x4ec>
   3a6b8:	str	x0, [x7, #8]
   3a6bc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3a6c0:	ldr	x1, [x0, #2592]
   3a6c4:	add	x0, x0, #0xa20
   3a6c8:	blr	x1
   3a6cc:	add	x0, x3, x0
   3a6d0:	b	3a460 <mpfr_sqr@@Base+0x254>
   3a6d4:	and	w0, w19, #0xfffffffd
   3a6d8:	cmp	w0, #0x1
   3a6dc:	b.ne	3a69c <mpfr_sqr@@Base+0x490>  // b.any
   3a6e0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3a6e4:	ldr	x1, [x0, #2592]
   3a6e8:	add	x0, x0, #0xa20
   3a6ec:	blr	x1
   3a6f0:	add	x0, x3, x0
   3a6f4:	b	3a494 <mpfr_sqr@@Base+0x288>
   3a6f8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3a6fc:	str	x0, [x7, #8]
   3a700:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3a704:	ldr	x1, [x0, #2560]
   3a708:	add	x0, x0, #0xa00
   3a70c:	blr	x1
   3a710:	ldr	x0, [x3, x0]
   3a714:	cmp	x20, x0
   3a718:	b.ge	3a4cc <mpfr_sqr@@Base+0x2c0>  // b.tcont
   3a71c:	add	x20, x20, #0x1
   3a720:	str	x20, [x21, #16]
   3a724:	b	3a6bc <mpfr_sqr@@Base+0x4b0>
   3a728:	cmp	x27, #0x40
   3a72c:	ccmp	w0, #0x0, #0x4, eq  // eq = none
   3a730:	b.eq	3a83c <mpfr_sqr@@Base+0x630>  // b.none
   3a734:	ldr	x0, [x25, #24]
   3a738:	ldr	x5, [x21, #24]
   3a73c:	ldr	x1, [x0]
   3a740:	umulh	x4, x1, x1
   3a744:	mul	x1, x1, x1
   3a748:	tbnz	x4, #63, 3a758 <mpfr_sqr@@Base+0x54c>
   3a74c:	sub	x20, x20, #0x1
   3a750:	extr	x4, x4, x1, #63
   3a754:	lsl	x1, x1, #1
   3a758:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3a75c:	ldr	x3, [x0, #2560]
   3a760:	add	x0, x0, #0xa00
   3a764:	blr	x3
   3a768:	str	x4, [x5]
   3a76c:	mrs	x3, tpidr_el0
   3a770:	mov	w2, #0x1                   	// #1
   3a774:	str	w2, [x21, #8]
   3a778:	ldr	x0, [x3, x0]
   3a77c:	cmp	x0, x20
   3a780:	b.lt	3a36c <mpfr_sqr@@Base+0x160>  // b.tstop
   3a784:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3a788:	ldr	x2, [x0, #2528]
   3a78c:	add	x0, x0, #0x9e0
   3a790:	blr	x2
   3a794:	ldr	x0, [x3, x0]
   3a798:	cmp	x20, x0
   3a79c:	b.ge	3a7e0 <mpfr_sqr@@Base+0x5d4>  // b.tcont
   3a7a0:	sub	x0, x0, #0x1
   3a7a4:	cmp	x20, x0
   3a7a8:	b.ne	3a7c0 <mpfr_sqr@@Base+0x5b4>  // b.any
   3a7ac:	cmn	x4, #0x1
   3a7b0:	b.ne	3ac74 <mpfr_sqr@@Base+0xa68>  // b.any
   3a7b4:	cmp	w19, #0x4
   3a7b8:	ccmp	w19, #0x2, #0x4, ne  // ne = any
   3a7bc:	b.eq	3a7e0 <mpfr_sqr@@Base+0x5d4>  // b.none
   3a7c0:	cbnz	w19, 3a3f8 <mpfr_sqr@@Base+0x1ec>
   3a7c4:	cmp	x20, x0
   3a7c8:	b.lt	3ac24 <mpfr_sqr@@Base+0xa18>  // b.tstop
   3a7cc:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3a7d0:	cmp	x4, x0
   3a7d4:	b.eq	3a65c <mpfr_sqr@@Base+0x450>  // b.none
   3a7d8:	mov	w19, #0x0                   	// #0
   3a7dc:	b	3a3f8 <mpfr_sqr@@Base+0x1ec>
   3a7e0:	str	x20, [x21, #16]
   3a7e4:	cbz	x1, 3a274 <mpfr_sqr@@Base+0x68>
   3a7e8:	cmp	w19, #0x5
   3a7ec:	b.eq	3a274 <mpfr_sqr@@Base+0x68>  // b.none
   3a7f0:	cbnz	w19, 3a820 <mpfr_sqr@@Base+0x614>
   3a7f4:	tbz	x1, #63, 3a6e0 <mpfr_sqr@@Base+0x4d4>
   3a7f8:	ldr	x0, [x5]
   3a7fc:	and	x1, x1, #0x7fffffffffffffff
   3a800:	and	x0, x0, #0x1
   3a804:	orr	x1, x0, x1
   3a808:	cbz	x1, 3a6e0 <mpfr_sqr@@Base+0x4d4>
   3a80c:	ldr	x0, [x5]
   3a810:	adds	x0, x0, #0x1
   3a814:	b.eq	3a830 <mpfr_sqr@@Base+0x624>  // b.none
   3a818:	str	x0, [x5]
   3a81c:	b	3a6bc <mpfr_sqr@@Base+0x4b0>
   3a820:	and	w0, w19, #0xfffffffd
   3a824:	cmp	w0, #0x1
   3a828:	b.ne	3a80c <mpfr_sqr@@Base+0x600>  // b.any
   3a82c:	b	3a6e0 <mpfr_sqr@@Base+0x4d4>
   3a830:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3a834:	str	x0, [x5]
   3a838:	b	3a700 <mpfr_sqr@@Base+0x4f4>
   3a83c:	sub	x0, x27, #0x81
   3a840:	cmp	x0, #0x3e
   3a844:	b.hi	3aac8 <mpfr_sqr@@Base+0x8bc>  // b.pmore
   3a848:	sub	x0, x2, #0x81
   3a84c:	cmp	x0, #0x3f
   3a850:	b.hi	3aac8 <mpfr_sqr@@Base+0x8bc>  // b.pmore
   3a854:	ldr	x1, [x25, #24]
   3a858:	mov	x24, #0xc0                  	// #192
   3a85c:	sub	x24, x24, x27
   3a860:	mov	x7, #0x1                   	// #1
   3a864:	ldr	x22, [x21, #24]
   3a868:	lsl	x23, x7, x24
   3a86c:	ldp	x0, x3, [x1]
   3a870:	sub	x26, x23, #0x1
   3a874:	ldr	x4, [x1, #16]
   3a878:	umulh	x5, x4, x0
   3a87c:	umulh	x2, x4, x3
   3a880:	umulh	x6, x4, x4
   3a884:	mul	x0, x4, x3
   3a888:	mul	x4, x4, x4
   3a88c:	adds	x0, x0, x5
   3a890:	cinc	x2, x2, cs  // cs = hs, nlast
   3a894:	add	x8, x6, x2, lsr #63
   3a898:	extr	x2, x2, x0, #63
   3a89c:	adds	x2, x2, x4
   3a8a0:	umulh	x4, x3, x3
   3a8a4:	lsl	x3, x0, #1
   3a8a8:	cset	x6, cs  // cs = hs, nlast
   3a8ac:	adds	x3, x3, x4
   3a8b0:	cinc	x5, x2, cs  // cs = hs, nlast
   3a8b4:	cset	w0, cs  // cs = hs, nlast
   3a8b8:	cmp	x5, #0x0
   3a8bc:	ccmp	w0, #0x0, #0x4, eq  // eq = none
   3a8c0:	add	x0, x3, #0x4
   3a8c4:	cinc	x6, x6, ne  // ne = any
   3a8c8:	and	x0, x0, x26, lsr #2
   3a8cc:	add	x6, x6, x8
   3a8d0:	cmp	x0, #0x4
   3a8d4:	b.hi	3a9f4 <mpfr_sqr@@Base+0x7e8>  // b.pmore
   3a8d8:	add	x0, x29, #0x60
   3a8dc:	mov	x2, #0x3                   	// #3
   3a8e0:	bl	c440 <__gmpn_sqr@plt>
   3a8e4:	ldp	x1, x0, [x29, #96]
   3a8e8:	ldp	x7, x3, [x29, #112]
   3a8ec:	ldp	x5, x6, [x29, #128]
   3a8f0:	orr	x0, x0, x1
   3a8f4:	tbnz	x6, #63, 3a90c <mpfr_sqr@@Base+0x700>
   3a8f8:	sub	x20, x20, #0x1
   3a8fc:	extr	x6, x6, x5, #63
   3a900:	extr	x5, x5, x3, #63
   3a904:	extr	x3, x3, x7, #63
   3a908:	lsl	x7, x7, #1
   3a90c:	sub	w1, w24, #0x1
   3a910:	orr	x0, x0, x7
   3a914:	mov	x2, #0x1                   	// #1
   3a918:	neg	x9, x23
   3a91c:	lsl	x1, x2, x1
   3a920:	eor	x7, x26, x1
   3a924:	and	x7, x7, x3
   3a928:	and	x10, x3, x9
   3a92c:	orr	x7, x7, x0
   3a930:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3a934:	ldr	x8, [x0, #2560]
   3a938:	add	x0, x0, #0xa00
   3a93c:	blr	x8
   3a940:	mrs	x8, tpidr_el0
   3a944:	stp	x10, x5, [x22]
   3a948:	and	x4, x1, x3
   3a94c:	str	x6, [x22, #16]
   3a950:	ldr	x0, [x8, x0]
   3a954:	str	w2, [x21, #8]
   3a958:	cmp	x0, x20
   3a95c:	b.lt	3a36c <mpfr_sqr@@Base+0x160>  // b.tstop
   3a960:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3a964:	ldr	x2, [x0, #2528]
   3a968:	add	x0, x0, #0x9e0
   3a96c:	blr	x2
   3a970:	ldr	x0, [x8, x0]
   3a974:	cmp	x20, x0
   3a978:	b.ge	3a9fc <mpfr_sqr@@Base+0x7f0>  // b.tcont
   3a97c:	sub	x0, x0, #0x1
   3a980:	cmp	x20, x0
   3a984:	b.ne	3a9c4 <mpfr_sqr@@Base+0x7b8>  // b.any
   3a988:	cmn	x6, #0x1
   3a98c:	b.ne	3ac6c <mpfr_sqr@@Base+0xa60>  // b.any
   3a990:	cmn	x5, #0x1
   3a994:	b.ne	3a9c4 <mpfr_sqr@@Base+0x7b8>  // b.any
   3a998:	cmp	x9, x10
   3a99c:	b.ne	3a9c4 <mpfr_sqr@@Base+0x7b8>  // b.any
   3a9a0:	cmp	w19, #0x0
   3a9a4:	ccmp	x4, #0x0, #0x4, eq  // eq = none
   3a9a8:	b.ne	3a9fc <mpfr_sqr@@Base+0x7f0>  // b.any
   3a9ac:	cmp	w19, #0x4
   3a9b0:	b.eq	3a9bc <mpfr_sqr@@Base+0x7b0>  // b.none
   3a9b4:	cmp	w19, #0x2
   3a9b8:	b.ne	3a9c4 <mpfr_sqr@@Base+0x7b8>  // b.any
   3a9bc:	orr	x2, x4, x7
   3a9c0:	cbnz	x2, 3a9fc <mpfr_sqr@@Base+0x7f0>
   3a9c4:	cbnz	w19, 3a3f8 <mpfr_sqr@@Base+0x1ec>
   3a9c8:	cmp	x20, x0
   3a9cc:	b.lt	3ac24 <mpfr_sqr@@Base+0xa18>  // b.tstop
   3a9d0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3a9d4:	cmp	x6, x0
   3a9d8:	b.ne	3a7d8 <mpfr_sqr@@Base+0x5cc>  // b.any
   3a9dc:	orr	x1, x1, x9
   3a9e0:	and	x3, x1, x3
   3a9e4:	orr	x5, x3, x5
   3a9e8:	orr	x5, x5, x7
   3a9ec:	cmp	x5, #0x0
   3a9f0:	b	3a3f4 <mpfr_sqr@@Base+0x1e8>
   3a9f4:	mov	x0, x7
   3a9f8:	b	3a8f4 <mpfr_sqr@@Base+0x6e8>
   3a9fc:	str	x20, [x21, #16]
   3aa00:	orr	x0, x4, x7
   3aa04:	cbz	x0, 3a274 <mpfr_sqr@@Base+0x68>
   3aa08:	cmp	w19, #0x5
   3aa0c:	b.eq	3a274 <mpfr_sqr@@Base+0x68>  // b.none
   3aa10:	cbnz	w19, 3aa74 <mpfr_sqr@@Base+0x868>
   3aa14:	cbz	x4, 3aa80 <mpfr_sqr@@Base+0x874>
   3aa18:	ldr	x5, [x22]
   3aa1c:	lsr	x5, x5, x24
   3aa20:	and	x5, x5, #0x1
   3aa24:	orr	x5, x5, x7
   3aa28:	cbz	x5, 3aa80 <mpfr_sqr@@Base+0x874>
   3aa2c:	ldr	x0, [x22]
   3aa30:	add	x23, x23, x0
   3aa34:	ldr	x0, [x22, #8]
   3aa38:	cmp	x23, #0x0
   3aa3c:	cinc	x0, x0, eq  // eq = none
   3aa40:	stp	x23, x0, [x22]
   3aa44:	orr	x23, x23, x0
   3aa48:	ldr	x0, [x22, #16]
   3aa4c:	cmp	x23, #0x0
   3aa50:	cinc	x0, x0, eq  // eq = none
   3aa54:	cbz	x0, 3aa98 <mpfr_sqr@@Base+0x88c>
   3aa58:	str	x0, [x22, #16]
   3aa5c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3aa60:	ldr	x1, [x0, #2592]
   3aa64:	add	x0, x0, #0xa20
   3aa68:	blr	x1
   3aa6c:	add	x0, x8, x0
   3aa70:	b	3a460 <mpfr_sqr@@Base+0x254>
   3aa74:	and	w0, w19, #0xfffffffd
   3aa78:	cmp	w0, #0x1
   3aa7c:	b.ne	3aa2c <mpfr_sqr@@Base+0x820>  // b.any
   3aa80:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3aa84:	ldr	x1, [x0, #2592]
   3aa88:	add	x0, x0, #0xa20
   3aa8c:	blr	x1
   3aa90:	add	x0, x8, x0
   3aa94:	b	3a494 <mpfr_sqr@@Base+0x288>
   3aa98:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3aa9c:	str	x0, [x22, #16]
   3aaa0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3aaa4:	ldr	x1, [x0, #2560]
   3aaa8:	add	x0, x0, #0xa00
   3aaac:	blr	x1
   3aab0:	ldr	x0, [x8, x0]
   3aab4:	cmp	x20, x0
   3aab8:	b.ge	3a4cc <mpfr_sqr@@Base+0x2c0>  // b.tcont
   3aabc:	add	x20, x20, #0x1
   3aac0:	str	x20, [x21, #16]
   3aac4:	b	3aa5c <mpfr_sqr@@Base+0x850>
   3aac8:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   3aacc:	lsl	x23, x2, #1
   3aad0:	cmp	x0, x2, lsl #1
   3aad4:	b.hi	3aaf0 <mpfr_sqr@@Base+0x8e4>  // b.pmore
   3aad8:	adrp	x2, 5a000 <mpfr_bases@@Base+0x2a8>
   3aadc:	adrp	x0, 5a000 <mpfr_bases@@Base+0x2a8>
   3aae0:	add	x2, x2, #0x824
   3aae4:	add	x0, x0, #0x870
   3aae8:	mov	w1, #0x22a                 	// #554
   3aaec:	bl	cbd0 <mpfr_assert_fail@plt>
   3aaf0:	sub	x22, x2, #0x1
   3aaf4:	sub	x26, x23, #0x1
   3aaf8:	asr	x22, x22, #6
   3aafc:	asr	x26, x26, #6
   3ab00:	add	x22, x22, #0x1
   3ab04:	add	x26, x26, #0x1
   3ab08:	cmp	x22, #0x14
   3ab0c:	b.le	3ab2c <mpfr_sqr@@Base+0x920>
   3ab10:	mov	w3, w19
   3ab14:	mov	x2, x25
   3ab18:	mov	x1, x25
   3ab1c:	mov	x0, x21
   3ab20:	bl	bdd0 <mpfr_mul@plt>
   3ab24:	mov	w1, w0
   3ab28:	b	3a278 <mpfr_sqr@@Base+0x6c>
   3ab2c:	mov	x0, sp
   3ab30:	lsl	x24, x22, #4
   3ab34:	sub	x0, x0, x22, lsl #4
   3ab38:	mov	x2, x22
   3ab3c:	mov	sp, x0
   3ab40:	lsl	x22, x22, #1
   3ab44:	ldr	x1, [x25, #24]
   3ab48:	mov	x28, sp
   3ab4c:	add	x24, x28, x24
   3ab50:	sub	x22, x22, x26
   3ab54:	bl	c440 <__gmpn_sqr@plt>
   3ab58:	add	x22, x28, x22, lsl #3
   3ab5c:	ldur	x0, [x24, #-8]
   3ab60:	lsr	x24, x0, #63
   3ab64:	tbnz	x0, #63, 3ab7c <mpfr_sqr@@Base+0x970>
   3ab68:	mov	x2, x26
   3ab6c:	mov	x1, x22
   3ab70:	mov	x0, x22
   3ab74:	mov	w3, #0x1                   	// #1
   3ab78:	bl	bd40 <__gmpn_lshift@plt>
   3ab7c:	ldr	x0, [x21, #24]
   3ab80:	add	x6, x29, #0x60
   3ab84:	mov	w5, w19
   3ab88:	mov	x4, x27
   3ab8c:	mov	x2, x23
   3ab90:	mov	x1, x22
   3ab94:	mov	w3, #0x0                   	// #0
   3ab98:	bl	cab0 <mpfr_round_raw@plt>
   3ab9c:	cbz	w0, 3abb8 <mpfr_sqr@@Base+0x9ac>
   3aba0:	ldr	x1, [x21]
   3aba4:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
   3aba8:	ldr	x2, [x21, #24]
   3abac:	sub	x1, x1, #0x1
   3abb0:	asr	x1, x1, #6
   3abb4:	str	x3, [x2, x1, lsl #3]
   3abb8:	add	x0, x24, w0, sxtw
   3abbc:	mrs	x3, tpidr_el0
   3abc0:	sub	x2, x20, #0x1
   3abc4:	add	x2, x0, x2
   3abc8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3abcc:	ldr	x1, [x0, #2560]
   3abd0:	add	x0, x0, #0xa00
   3abd4:	blr	x1
   3abd8:	ldr	x0, [x3, x0]
   3abdc:	cmp	x0, x2
   3abe0:	b.lt	3a4cc <mpfr_sqr@@Base+0x2c0>  // b.tstop
   3abe4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3abe8:	ldr	x1, [x0, #2528]
   3abec:	add	x0, x0, #0x9e0
   3abf0:	blr	x1
   3abf4:	ldr	x0, [x3, x0]
   3abf8:	cmp	x0, x2
   3abfc:	b.le	3ac2c <mpfr_sqr@@Base+0xa20>
   3ac00:	cbnz	w19, 3a3f8 <mpfr_sqr@@Base+0x1ec>
   3ac04:	add	x20, x24, x20
   3ac08:	cmp	x0, x20
   3ac0c:	b.gt	3ac24 <mpfr_sqr@@Base+0xa18>
   3ac10:	mov	x0, x25
   3ac14:	bl	bf80 <mpfr_powerof2_raw@plt>
   3ac18:	cmp	w0, #0x0
   3ac1c:	cset	w19, ne  // ne = any
   3ac20:	b	3a3f8 <mpfr_sqr@@Base+0x1ec>
   3ac24:	mov	w19, #0x1                   	// #1
   3ac28:	b	3a3f8 <mpfr_sqr@@Base+0x1ec>
   3ac2c:	ldr	w1, [x29, #96]
   3ac30:	mov	w0, #0x1                   	// #1
   3ac34:	str	w0, [x21, #8]
   3ac38:	str	x2, [x21, #16]
   3ac3c:	cbz	w1, 3a278 <mpfr_sqr@@Base+0x6c>
   3ac40:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3ac44:	ldr	x2, [x0, #2592]
   3ac48:	add	x0, x0, #0xa20
   3ac4c:	blr	x2
   3ac50:	add	x0, x3, x0
   3ac54:	ldr	w2, [x0]
   3ac58:	orr	w2, w2, #0x8
   3ac5c:	str	w2, [x0]
   3ac60:	b	3a278 <mpfr_sqr@@Base+0x6c>
   3ac64:	cbz	w19, 3a644 <mpfr_sqr@@Base+0x438>
   3ac68:	b	3a3f8 <mpfr_sqr@@Base+0x1ec>
   3ac6c:	cbz	w19, 3a9d0 <mpfr_sqr@@Base+0x7c4>
   3ac70:	b	3a3f8 <mpfr_sqr@@Base+0x1ec>
   3ac74:	cbz	w19, 3a7cc <mpfr_sqr@@Base+0x5c0>
   3ac78:	b	3a3f8 <mpfr_sqr@@Base+0x1ec>

000000000003ac7c <__gmpfr_int_ceil_log2@@Base>:
   3ac7c:	cmp	x0, #0x1
   3ac80:	b.eq	3acbc <__gmpfr_int_ceil_log2@@Base+0x40>  // b.none
   3ac84:	b.hi	3aca8 <__gmpfr_int_ceil_log2@@Base+0x2c>  // b.pmore
   3ac88:	stp	x29, x30, [sp, #-16]!
   3ac8c:	adrp	x2, 5a000 <mpfr_bases@@Base+0x2a8>
   3ac90:	adrp	x0, 5a000 <mpfr_bases@@Base+0x2a8>
   3ac94:	mov	x29, sp
   3ac98:	add	x2, x2, #0x876
   3ac9c:	add	x0, x0, #0x87c
   3aca0:	mov	w1, #0x24                  	// #36
   3aca4:	bl	cbd0 <mpfr_assert_fail@plt>
   3aca8:	sub	x0, x0, #0x1
   3acac:	mov	w1, #0x40                  	// #64
   3acb0:	clz	x0, x0
   3acb4:	sub	w0, w1, w0
   3acb8:	ret
   3acbc:	mov	w0, #0x0                   	// #0
   3acc0:	ret

000000000003acc4 <__gmpfr_isqrt@@Base>:
   3acc4:	mov	x1, x0
   3acc8:	mov	x2, x0
   3accc:	mov	x0, #0x1                   	// #1
   3acd0:	cmp	x2, #0x1
   3acd4:	b.hi	3ad0c <__gmpfr_isqrt@@Base+0x48>  // b.pmore
   3acd8:	udiv	x2, x1, x0
   3acdc:	add	x0, x2, x0
   3ace0:	lsr	x0, x0, #1
   3ace4:	mul	x3, x0, x0
   3ace8:	cmp	x3, x1
   3acec:	b.hi	3acd8 <__gmpfr_isqrt@@Base+0x14>  // b.pmore
   3acf0:	add	x2, x0, #0x2
   3acf4:	mul	x2, x2, x0
   3acf8:	cmp	x3, x2
   3acfc:	b.hi	3ad08 <__gmpfr_isqrt@@Base+0x44>  // b.pmore
   3ad00:	cmp	x2, x1
   3ad04:	b.cc	3acd8 <__gmpfr_isqrt@@Base+0x14>  // b.lo, b.ul, b.last
   3ad08:	ret
   3ad0c:	lsr	x2, x2, #2
   3ad10:	lsl	x0, x0, #1
   3ad14:	b	3acd0 <__gmpfr_isqrt@@Base+0xc>

000000000003ad18 <__gmpfr_cuberoot@@Base>:
   3ad18:	mov	x2, x0
   3ad1c:	mov	x3, x0
   3ad20:	mov	x0, #0x1                   	// #1
   3ad24:	cmp	x3, #0x3
   3ad28:	lsl	x4, x0, #1
   3ad2c:	b.hi	3adb0 <__gmpfr_cuberoot@@Base+0x98>  // b.pmore
   3ad30:	cmp	x2, #0xff
   3ad34:	b.ls	3ad6c <__gmpfr_cuberoot@@Base+0x54>  // b.plast
   3ad38:	mul	x1, x0, x0
   3ad3c:	mov	x0, #0x3                   	// #3
   3ad40:	udiv	x1, x2, x1
   3ad44:	add	x1, x1, x4
   3ad48:	udiv	x1, x1, x0
   3ad4c:	mul	x3, x1, x1
   3ad50:	udiv	x3, x2, x3
   3ad54:	add	x1, x3, x1, lsl #1
   3ad58:	udiv	x1, x1, x0
   3ad5c:	mul	x3, x1, x1
   3ad60:	udiv	x3, x2, x3
   3ad64:	add	x1, x3, x1, lsl #1
   3ad68:	udiv	x0, x1, x0
   3ad6c:	mov	x5, #0x3                   	// #3
   3ad70:	mul	x1, x0, x0
   3ad74:	udiv	x1, x2, x1
   3ad78:	add	x0, x1, x0, lsl #1
   3ad7c:	udiv	x0, x0, x5
   3ad80:	mul	x3, x0, x0
   3ad84:	mul	x3, x3, x0
   3ad88:	cmp	x3, x2
   3ad8c:	b.hi	3ad70 <__gmpfr_cuberoot@@Base+0x58>  // b.pmore
   3ad90:	add	x4, x0, #0x1
   3ad94:	mul	x1, x4, x4
   3ad98:	mul	x1, x1, x4
   3ad9c:	cmp	x3, x1
   3ada0:	b.hi	3adac <__gmpfr_cuberoot@@Base+0x94>  // b.pmore
   3ada4:	cmp	x1, x2
   3ada8:	b.ls	3ad70 <__gmpfr_cuberoot@@Base+0x58>  // b.plast
   3adac:	ret
   3adb0:	lsr	x3, x3, #3
   3adb4:	mov	x0, x4
   3adb8:	b	3ad24 <__gmpfr_cuberoot@@Base+0xc>
   3adbc:	mov	x3, #0x0                   	// #0
   3adc0:	ldrb	w5, [x1, x3]
   3adc4:	cbz	w5, 3adf8 <__gmpfr_cuberoot@@Base+0xe0>
   3adc8:	ldrb	w2, [x0, x3]
   3adcc:	sub	w4, w2, #0x41
   3add0:	and	w4, w4, #0xff
   3add4:	cmp	w4, #0x19
   3add8:	b.hi	3ade4 <__gmpfr_cuberoot@@Base+0xcc>  // b.pmore
   3addc:	add	w2, w2, #0x20
   3ade0:	and	w2, w2, #0xff
   3ade4:	add	x3, x3, #0x1
   3ade8:	cmp	w2, w5
   3adec:	b.eq	3adc0 <__gmpfr_cuberoot@@Base+0xa8>  // b.none
   3adf0:	mov	w0, #0x1                   	// #1
   3adf4:	ret
   3adf8:	mov	w0, #0x0                   	// #0
   3adfc:	b	3adf4 <__gmpfr_cuberoot@@Base+0xdc>
   3ae00:	stp	x29, x30, [sp, #-208]!
   3ae04:	mov	x29, sp
   3ae08:	stp	x25, x26, [sp, #64]
   3ae0c:	mov	x25, x0
   3ae10:	mov	w26, w2
   3ae14:	ldr	x0, [x0]
   3ae18:	stp	x0, xzr, [x29, #184]
   3ae1c:	sub	x0, x0, #0x1
   3ae20:	stp	x21, x22, [sp, #32]
   3ae24:	mov	x21, x1
   3ae28:	clz	x1, x0
   3ae2c:	mov	w0, #0x40                  	// #64
   3ae30:	sub	w0, w0, w1
   3ae34:	stp	x19, x20, [sp, #16]
   3ae38:	ldr	x1, [x29, #184]
   3ae3c:	sxtw	x0, w0
   3ae40:	stp	x23, x24, [sp, #48]
   3ae44:	cmp	x1, #0x1
   3ae48:	csel	x0, x0, xzr, ne  // ne = any
   3ae4c:	stp	x27, x28, [sp, #80]
   3ae50:	add	x0, x1, x0
   3ae54:	str	x0, [x29, #168]
   3ae58:	mov	x0, #0x40                  	// #64
   3ae5c:	str	x0, [x29, #136]
   3ae60:	add	x0, x29, #0xc0
   3ae64:	str	x0, [x29, #128]
   3ae68:	adrp	x0, 5a000 <mpfr_bases@@Base+0x2a8>
   3ae6c:	add	x0, x0, #0x8d4
   3ae70:	str	x0, [x29, #120]
   3ae74:	add	x0, x29, #0xc8
   3ae78:	str	x0, [x29, #112]
   3ae7c:	ldr	x0, [x29, #168]
   3ae80:	sub	x0, x0, #0x1
   3ae84:	asr	x0, x0, #6
   3ae88:	add	x22, x0, #0x1
   3ae8c:	add	x0, x0, #0x2
   3ae90:	str	x0, [x29, #152]
   3ae94:	lsl	x1, x22, #6
   3ae98:	str	x1, [x29, #176]
   3ae9c:	lsl	x24, x0, #4
   3aea0:	cmp	x24, #0x4, lsl #12
   3aea4:	b.hi	3afc4 <__gmpfr_cuberoot@@Base+0x2ac>  // b.pmore
   3aea8:	sub	sp, sp, x24
   3aeac:	mov	x27, sp
   3aeb0:	ldr	w3, [x21, #4]
   3aeb4:	lsl	x0, x22, #3
   3aeb8:	ldr	x1, [x29, #120]
   3aebc:	str	x0, [x29, #144]
   3aec0:	sub	w0, w3, #0x2
   3aec4:	add	x23, x27, x22, lsl #3
   3aec8:	ldr	x4, [x29, #120]
   3aecc:	sbfiz	x2, x0, #3, #32
   3aed0:	add	x0, x1, w0, sxtw #3
   3aed4:	ldr	w2, [x4, x2]
   3aed8:	ldr	w1, [x0, #4]
   3aedc:	lsl	x0, x22, #6
   3aee0:	sub	x4, x1, #0x1
   3aee4:	udiv	x19, x0, x1
   3aee8:	msub	x0, x19, x1, x0
   3aeec:	madd	x0, x0, x2, x4
   3aef0:	udiv	x0, x0, x1
   3aef4:	madd	x19, x19, x2, x0
   3aef8:	ldp	x1, x0, [x21, #16]
   3aefc:	add	x19, x19, #0x1
   3af00:	cmp	x19, x0
   3af04:	csel	x19, x19, x0, ls  // ls = plast
   3af08:	mov	x0, x23
   3af0c:	mov	x2, x19
   3af10:	bl	bc00 <__gmpn_set_str@plt>
   3af14:	add	x1, x23, x0, lsl #3
   3af18:	mov	x2, x0
   3af1c:	ldr	x0, [x21, #24]
   3af20:	ldur	x1, [x1, #-8]
   3af24:	cmp	x0, x19
   3af28:	cset	w20, eq  // eq = none
   3af2c:	subs	x28, x22, x2
   3af30:	clz	x3, x1
   3af34:	str	x3, [x29, #160]
   3af38:	b.mi	3afd8 <__gmpfr_cuberoot@@Base+0x2c0>  // b.first
   3af3c:	cbz	x3, 3b6a4 <__gmpfr_cuberoot@@Base+0x98c>
   3af40:	mov	x1, x23
   3af44:	add	x0, x23, x28, lsl #3
   3af48:	bl	bd40 <__gmpn_lshift@plt>
   3af4c:	cbnz	x28, 3b6b4 <__gmpfr_cuberoot@@Base+0x99c>
   3af50:	ldr	x0, [x29, #160]
   3af54:	add	x7, x0, x28, lsl #6
   3af58:	neg	x28, x7
   3af5c:	ldr	w0, [x21, #4]
   3af60:	sub	w2, w0, #0x1
   3af64:	ands	w1, w2, w0
   3af68:	str	w1, [x29, #160]
   3af6c:	ldr	x1, [x21, #40]
   3af70:	b.ne	3b1c8 <__gmpfr_cuberoot@@Base+0x4b0>  // b.any
   3af74:	sxtw	x0, w0
   3af78:	clz	x2, x0
   3af7c:	mov	w0, #0x3f                  	// #63
   3af80:	sub	w0, w0, w2
   3af84:	tbnz	x1, #63, 3b038 <__gmpfr_cuberoot@@Base+0x320>
   3af88:	cmp	x19, #0x0
   3af8c:	b.gt	3b098 <__gmpfr_cuberoot@@Base+0x380>
   3af90:	sub	x19, x1, x19
   3af94:	cmp	x19, x1
   3af98:	b.cc	3afa4 <__gmpfr_cuberoot@@Base+0x28c>  // b.lo, b.ul, b.last
   3af9c:	cmp	x19, #0x0
   3afa0:	b.ge	3b6c8 <__gmpfr_cuberoot@@Base+0x9b0>  // b.tcont
   3afa4:	ldr	w0, [x21]
   3afa8:	mov	w1, w26
   3afac:	mov	w2, #0x1                   	// #1
   3afb0:	cmp	w0, #0x0
   3afb4:	mov	x0, x25
   3afb8:	cneg	w2, w2, ne  // ne = any
   3afbc:	bl	bfc0 <mpfr_overflow@plt>
   3afc0:	b	3b090 <__gmpfr_cuberoot@@Base+0x378>
   3afc4:	ldr	x0, [x29, #128]
   3afc8:	mov	x1, x24
   3afcc:	bl	be40 <mpfr_tmp_allocate@plt>
   3afd0:	mov	x27, x0
   3afd4:	b	3aeb0 <__gmpfr_cuberoot@@Base+0x198>
   3afd8:	cbz	x3, 3b008 <__gmpfr_cuberoot@@Base+0x2f0>
   3afdc:	mov	w0, #0x40                  	// #64
   3afe0:	mov	x1, x23
   3afe4:	sub	w3, w0, w3
   3afe8:	mov	x0, x23
   3afec:	bl	bd60 <__gmpn_rshift@plt>
   3aff0:	cmp	x0, #0x0
   3aff4:	csel	w20, w20, wzr, eq  // eq = none
   3aff8:	ldr	x1, [x29, #160]
   3affc:	mov	x0, #0x40                  	// #64
   3b000:	sub	x28, x0, x1
   3b004:	b	3af5c <__gmpfr_cuberoot@@Base+0x244>
   3b008:	cmp	x0, x19
   3b00c:	b.ne	3b030 <__gmpfr_cuberoot@@Base+0x318>  // b.any
   3b010:	ldr	x0, [x23]
   3b014:	cmp	x0, #0x0
   3b018:	cset	w20, eq  // eq = none
   3b01c:	sub	x2, x2, #0x1
   3b020:	add	x1, x23, #0x8
   3b024:	mov	x0, x23
   3b028:	bl	c5b0 <__gmpn_copyi@plt>
   3b02c:	b	3aff8 <__gmpfr_cuberoot@@Base+0x2e0>
   3b030:	mov	w20, #0x0                   	// #0
   3b034:	b	3b01c <__gmpfr_cuberoot@@Base+0x304>
   3b038:	cmp	x19, #0x0
   3b03c:	b.le	3b098 <__gmpfr_cuberoot@@Base+0x380>
   3b040:	sub	x19, x19, x1
   3b044:	neg	x1, x1
   3b048:	cmp	x19, x1
   3b04c:	b.cc	3b06c <__gmpfr_cuberoot@@Base+0x354>  // b.lo, b.ul, b.last
   3b050:	tbnz	x19, #63, 3b06c <__gmpfr_cuberoot@@Base+0x354>
   3b054:	neg	x19, x19
   3b058:	sxtw	x2, w0
   3b05c:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   3b060:	sdiv	x1, x1, x2
   3b064:	cmp	x1, x19
   3b068:	b.lt	3b0a8 <__gmpfr_cuberoot@@Base+0x390>  // b.tstop
   3b06c:	ldr	w0, [x21]
   3b070:	cmp	w26, #0x0
   3b074:	mov	w2, #0x1                   	// #1
   3b078:	csel	w26, w26, w2, ne  // ne = any
   3b07c:	cmp	w0, #0x0
   3b080:	mov	w1, w26
   3b084:	cneg	w2, w2, ne  // ne = any
   3b088:	mov	x0, x25
   3b08c:	bl	c450 <mpfr_underflow@plt>
   3b090:	str	w0, [x29, #200]
   3b094:	b	3b61c <__gmpfr_cuberoot@@Base+0x904>
   3b098:	sub	x19, x1, x19
   3b09c:	cmp	x19, #0x0
   3b0a0:	b.gt	3b6cc <__gmpfr_cuberoot@@Base+0x9b4>
   3b0a4:	b.ne	3b058 <__gmpfr_cuberoot@@Base+0x340>  // b.any
   3b0a8:	sxtw	x0, w0
   3b0ac:	mul	x0, x0, x19
   3b0b0:	ldr	x19, [x21, #48]
   3b0b4:	tbnz	x0, #63, 3b148 <__gmpfr_cuberoot@@Base+0x430>
   3b0b8:	tbnz	x19, #63, 3b178 <__gmpfr_cuberoot@@Base+0x460>
   3b0bc:	adds	x19, x0, x19
   3b0c0:	b.mi	3afa4 <__gmpfr_cuberoot@@Base+0x28c>  // b.first
   3b0c4:	cmp	x28, #0x0
   3b0c8:	ccmp	x19, #0x0, #0x1, ge  // ge = tcont
   3b0cc:	b.lt	3b180 <__gmpfr_cuberoot@@Base+0x468>  // b.tstop
   3b0d0:	add	x7, x28, x19
   3b0d4:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   3b0d8:	cmp	x7, x0
   3b0dc:	b.cs	3afa4 <__gmpfr_cuberoot@@Base+0x28c>  // b.hs, b.nlast
   3b0e0:	mov	x28, x7
   3b0e4:	cbnz	w20, 3b564 <__gmpfr_cuberoot@@Base+0x84c>
   3b0e8:	ldr	x0, [x29, #176]
   3b0ec:	cmp	w26, #0x0
   3b0f0:	ldr	w1, [x29, #160]
   3b0f4:	sub	x2, x0, w1, sxtw
   3b0f8:	mov	x1, x22
   3b0fc:	ldr	x0, [x29, #184]
   3b100:	sub	x2, x2, #0x1
   3b104:	cinc	x3, x0, eq  // eq = none
   3b108:	mov	x0, x23
   3b10c:	bl	c400 <mpfr_round_p@plt>
   3b110:	cbnz	w0, 3b564 <__gmpfr_cuberoot@@Base+0x84c>
   3b114:	ldr	x1, [x29, #168]
   3b118:	mov	x0, #0xfffffffffffffeff    	// #-257
   3b11c:	movk	x0, #0x7fff, lsl #48
   3b120:	sub	x0, x0, x1
   3b124:	ldr	x1, [x29, #136]
   3b128:	cmp	x0, x1
   3b12c:	b.ge	3b540 <__gmpfr_cuberoot@@Base+0x828>  // b.tcont
   3b130:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   3b134:	adrp	x0, 5a000 <mpfr_bases@@Base+0x2a8>
   3b138:	add	x2, x2, #0x519
   3b13c:	add	x0, x0, #0x88c
   3b140:	mov	w1, #0x372                 	// #882
   3b144:	bl	cbd0 <mpfr_assert_fail@plt>
   3b148:	tbz	x19, #63, 3b178 <__gmpfr_cuberoot@@Base+0x460>
   3b14c:	neg	x0, x0
   3b150:	sub	x19, x0, x19
   3b154:	cmp	x19, x0
   3b158:	b.cc	3b06c <__gmpfr_cuberoot@@Base+0x354>  // b.lo, b.ul, b.last
   3b15c:	tbz	x19, #63, 3b170 <__gmpfr_cuberoot@@Base+0x458>
   3b160:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3b164:	cmp	x19, x0
   3b168:	b.eq	3b0c4 <__gmpfr_cuberoot@@Base+0x3ac>  // b.none
   3b16c:	b	3b06c <__gmpfr_cuberoot@@Base+0x354>
   3b170:	neg	x19, x19
   3b174:	b	3b0c4 <__gmpfr_cuberoot@@Base+0x3ac>
   3b178:	add	x19, x19, x0
   3b17c:	b	3b0c4 <__gmpfr_cuberoot@@Base+0x3ac>
   3b180:	cmp	x28, #0x0
   3b184:	ccmp	x19, #0x0, #0x0, lt  // lt = tstop
   3b188:	b.ge	3b1c0 <__gmpfr_cuberoot@@Base+0x4a8>  // b.tcont
   3b18c:	neg	x7, x28
   3b190:	sub	x19, x7, x19
   3b194:	cmp	x19, x7
   3b198:	b.cc	3b06c <__gmpfr_cuberoot@@Base+0x354>  // b.lo, b.ul, b.last
   3b19c:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   3b1a0:	cmp	x19, x0
   3b1a4:	b.cc	3b1b8 <__gmpfr_cuberoot@@Base+0x4a0>  // b.lo, b.ul, b.last
   3b1a8:	b.ne	3b06c <__gmpfr_cuberoot@@Base+0x354>  // b.any
   3b1ac:	mov	x28, #0x2                   	// #2
   3b1b0:	movk	x28, #0x8000, lsl #48
   3b1b4:	b	3b0e4 <__gmpfr_cuberoot@@Base+0x3cc>
   3b1b8:	neg	x28, x19
   3b1bc:	b	3b0e4 <__gmpfr_cuberoot@@Base+0x3cc>
   3b1c0:	add	x28, x28, x19
   3b1c4:	b	3b0e4 <__gmpfr_cuberoot@@Base+0x3cc>
   3b1c8:	cmp	x1, x19
   3b1cc:	b.le	3b34c <__gmpfr_cuberoot@@Base+0x634>
   3b1d0:	lsl	x1, x22, #4
   3b1d4:	add	x1, x1, #0x8
   3b1d8:	cmp	x1, #0x4, lsl #12
   3b1dc:	b.hi	3b2f4 <__gmpfr_cuberoot@@Base+0x5dc>  // b.pmore
   3b1e0:	add	x1, x1, #0xf
   3b1e4:	and	x1, x1, #0xfffffffffffffff0
   3b1e8:	sub	sp, sp, x1
   3b1ec:	mov	x6, sp
   3b1f0:	ldr	w2, [x21, #4]
   3b1f4:	mov	x4, x22
   3b1f8:	ldr	x1, [x29, #112]
   3b1fc:	mov	x0, x27
   3b200:	ldr	x3, [x21, #40]
   3b204:	str	x6, [x29, #104]
   3b208:	sub	x3, x3, x19
   3b20c:	bl	cc70 <mpfr_mpn_exp@plt>
   3b210:	str	w0, [x29, #160]
   3b214:	mov	x19, x0
   3b218:	cmn	w0, #0x2
   3b21c:	b.eq	3afa4 <__gmpfr_cuberoot@@Base+0x28c>  // b.none
   3b220:	ldr	x6, [x29, #104]
   3b224:	cmn	w0, #0x1
   3b228:	and	w20, w20, #0x1
   3b22c:	mov	x1, x23
   3b230:	mov	x0, x6
   3b234:	csel	w20, w20, wzr, eq  // eq = none
   3b238:	mov	x3, x22
   3b23c:	mov	x2, x27
   3b240:	bl	c500 <__gmpn_mul_n@plt>
   3b244:	ldr	w4, [x29, #160]
   3b248:	cmn	w19, #0x1
   3b24c:	ldr	x1, [x29, #200]
   3b250:	csel	w4, w4, wzr, ne  // ne = any
   3b254:	add	w0, w4, #0x1
   3b258:	str	w0, [x29, #160]
   3b25c:	ldr	x0, [x29, #176]
   3b260:	ldr	x6, [x29, #104]
   3b264:	add	x0, x1, x0
   3b268:	tbnz	x1, #63, 3b270 <__gmpfr_cuberoot@@Base+0x558>
   3b26c:	tbnz	x0, #63, 3afa4 <__gmpfr_cuberoot@@Base+0x28c>
   3b270:	str	x0, [x29, #200]
   3b274:	ldr	x1, [x29, #200]
   3b278:	tbnz	x28, #63, 3b304 <__gmpfr_cuberoot@@Base+0x5ec>
   3b27c:	tbnz	x1, #63, 3b33c <__gmpfr_cuberoot@@Base+0x624>
   3b280:	add	x7, x28, x1
   3b284:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   3b288:	cmp	x7, x0
   3b28c:	b.cs	3afa4 <__gmpfr_cuberoot@@Base+0x28c>  // b.hs, b.nlast
   3b290:	mov	x28, x7
   3b294:	add	x24, x6, x24
   3b298:	ldur	x0, [x24, #-24]
   3b29c:	tbnz	x0, #63, 3b2c4 <__gmpfr_cuberoot@@Base+0x5ac>
   3b2a0:	ldp	x0, x2, [x29, #144]
   3b2a4:	mov	w3, #0x1                   	// #1
   3b2a8:	str	x6, [x29, #104]
   3b2ac:	sub	x28, x28, #0x1
   3b2b0:	sub	x1, x0, #0x8
   3b2b4:	add	x1, x6, x1
   3b2b8:	mov	x0, x1
   3b2bc:	bl	bd40 <__gmpn_lshift@plt>
   3b2c0:	ldr	x6, [x29, #104]
   3b2c4:	cbz	w20, 3b344 <__gmpfr_cuberoot@@Base+0x62c>
   3b2c8:	mov	x0, x6
   3b2cc:	mov	x1, #0x0                   	// #0
   3b2d0:	str	x6, [x29, #152]
   3b2d4:	bl	cb30 <__gmpn_scan1@plt>
   3b2d8:	ldr	x1, [x29, #176]
   3b2dc:	ldr	x6, [x29, #152]
   3b2e0:	cmp	x0, x1
   3b2e4:	cset	w20, cs  // cs = hs, nlast
   3b2e8:	ldr	x0, [x29, #144]
   3b2ec:	add	x23, x6, x0
   3b2f0:	b	3b0e4 <__gmpfr_cuberoot@@Base+0x3cc>
   3b2f4:	ldr	x0, [x29, #128]
   3b2f8:	bl	be40 <mpfr_tmp_allocate@plt>
   3b2fc:	mov	x6, x0
   3b300:	b	3b1f0 <__gmpfr_cuberoot@@Base+0x4d8>
   3b304:	tbz	x1, #63, 3b33c <__gmpfr_cuberoot@@Base+0x624>
   3b308:	neg	x7, x28
   3b30c:	sub	x1, x7, x1
   3b310:	cmp	x1, x7
   3b314:	b.cc	3b06c <__gmpfr_cuberoot@@Base+0x354>  // b.lo, b.ul, b.last
   3b318:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   3b31c:	cmp	x1, x0
   3b320:	b.cc	3b334 <__gmpfr_cuberoot@@Base+0x61c>  // b.lo, b.ul, b.last
   3b324:	b.ne	3b06c <__gmpfr_cuberoot@@Base+0x354>  // b.any
   3b328:	mov	x28, #0x2                   	// #2
   3b32c:	movk	x28, #0x8000, lsl #48
   3b330:	b	3b294 <__gmpfr_cuberoot@@Base+0x57c>
   3b334:	neg	x28, x1
   3b338:	b	3b294 <__gmpfr_cuberoot@@Base+0x57c>
   3b33c:	add	x28, x28, x1
   3b340:	b	3b294 <__gmpfr_cuberoot@@Base+0x57c>
   3b344:	mov	w20, #0x0                   	// #0
   3b348:	b	3b2e8 <__gmpfr_cuberoot@@Base+0x5d0>
   3b34c:	b.ge	3b538 <__gmpfr_cuberoot@@Base+0x820>  // b.tcont
   3b350:	add	x1, x22, x22, lsl #1
   3b354:	lsl	x0, x22, #1
   3b358:	add	x1, x1, #0x1
   3b35c:	str	x0, [x29, #160]
   3b360:	lsl	x1, x1, #3
   3b364:	cmp	x1, #0x4, lsl #12
   3b368:	b.hi	3b4a4 <__gmpfr_cuberoot@@Base+0x78c>  // b.pmore
   3b36c:	add	x1, x1, #0xf
   3b370:	and	x1, x1, #0xfffffffffffffff0
   3b374:	sub	sp, sp, x1
   3b378:	mov	x9, sp
   3b37c:	mov	w1, #0x0                   	// #0
   3b380:	lsl	x2, x22, #3
   3b384:	mov	x0, x27
   3b388:	str	x9, [x29, #104]
   3b38c:	bl	c1a0 <memset@plt>
   3b390:	ldr	x1, [x21, #40]
   3b394:	ldr	x9, [x29, #104]
   3b398:	tbnz	x19, #63, 3b4b4 <__gmpfr_cuberoot@@Base+0x79c>
   3b39c:	cmp	x1, #0x0
   3b3a0:	b.gt	3b4e8 <__gmpfr_cuberoot@@Base+0x7d0>
   3b3a4:	sub	x1, x19, x1
   3b3a8:	cmp	x1, x19
   3b3ac:	b.cc	3b06c <__gmpfr_cuberoot@@Base+0x354>  // b.lo, b.ul, b.last
   3b3b0:	tbnz	x1, #63, 3b06c <__gmpfr_cuberoot@@Base+0x354>
   3b3b4:	str	x1, [x29, #200]
   3b3b8:	ldr	w2, [x21, #4]
   3b3bc:	sub	x19, x24, #0x10
   3b3c0:	ldr	x1, [x29, #112]
   3b3c4:	sub	x24, x24, #0x8
   3b3c8:	ldr	x3, [x29, #200]
   3b3cc:	add	x24, x9, x24
   3b3d0:	mov	x4, x22
   3b3d4:	mov	x0, x24
   3b3d8:	str	x9, [x29, #104]
   3b3dc:	bl	cc70 <mpfr_mpn_exp@plt>
   3b3e0:	cmn	w0, #0x2
   3b3e4:	b.eq	3b06c <__gmpfr_cuberoot@@Base+0x354>  // b.none
   3b3e8:	ldr	x1, [x29, #200]
   3b3ec:	cmn	w0, #0x1
   3b3f0:	csel	w10, w0, wzr, ne  // ne = any
   3b3f4:	lsl	x0, x22, #6
   3b3f8:	csel	w20, w20, wzr, eq  // eq = none
   3b3fc:	add	x0, x1, x0
   3b400:	ldr	x9, [x29, #104]
   3b404:	tbnz	x1, #63, 3b40c <__gmpfr_cuberoot@@Base+0x6f4>
   3b408:	tbnz	x0, #63, 3b06c <__gmpfr_cuberoot@@Base+0x354>
   3b40c:	str	x0, [x29, #200]
   3b410:	ldr	x1, [x29, #200]
   3b414:	tbnz	x28, #63, 3b4f4 <__gmpfr_cuberoot@@Base+0x7dc>
   3b418:	cmp	x1, #0x0
   3b41c:	b.gt	3b530 <__gmpfr_cuberoot@@Base+0x818>
   3b420:	sub	x1, x28, x1
   3b424:	cmp	x1, x28
   3b428:	b.cc	3afa4 <__gmpfr_cuberoot@@Base+0x28c>  // b.lo, b.ul, b.last
   3b42c:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   3b430:	cmp	x1, x0
   3b434:	b.cs	3afa4 <__gmpfr_cuberoot@@Base+0x28c>  // b.hs, b.nlast
   3b438:	mov	x28, x1
   3b43c:	ldr	x0, [x29, #144]
   3b440:	mov	x1, x9
   3b444:	ldr	x4, [x29, #160]
   3b448:	add	x23, x9, x0
   3b44c:	mov	x0, x23
   3b450:	mov	x6, x22
   3b454:	mov	x5, x24
   3b458:	mov	x3, x27
   3b45c:	mov	x2, #0x0                   	// #0
   3b460:	str	w10, [x29, #104]
   3b464:	str	x9, [x29, #160]
   3b468:	bl	bae0 <__gmpn_tdiv_qr@plt>
   3b46c:	ldr	w10, [x29, #104]
   3b470:	ldr	x9, [x29, #160]
   3b474:	add	w0, w10, #0x1
   3b478:	str	w0, [x29, #160]
   3b47c:	ldr	x19, [x9, x19]
   3b480:	cbz	w20, 3b494 <__gmpfr_cuberoot@@Base+0x77c>
   3b484:	mov	x1, x22
   3b488:	mov	x0, x9
   3b48c:	bl	c8f0 <__gmpn_popcount@plt>
   3b490:	cbz	x0, 3b674 <__gmpfr_cuberoot@@Base+0x95c>
   3b494:	cmp	x19, #0x1
   3b498:	b.ne	3b0e8 <__gmpfr_cuberoot@@Base+0x3d0>  // b.any
   3b49c:	mov	w20, #0x0                   	// #0
   3b4a0:	b	3b688 <__gmpfr_cuberoot@@Base+0x970>
   3b4a4:	ldr	x0, [x29, #128]
   3b4a8:	bl	be40 <mpfr_tmp_allocate@plt>
   3b4ac:	mov	x9, x0
   3b4b0:	b	3b37c <__gmpfr_cuberoot@@Base+0x664>
   3b4b4:	cmp	x1, #0x0
   3b4b8:	b.le	3b4e8 <__gmpfr_cuberoot@@Base+0x7d0>
   3b4bc:	sub	x1, x1, x19
   3b4c0:	neg	x19, x19
   3b4c4:	cmp	x1, x19
   3b4c8:	b.cc	3afa4 <__gmpfr_cuberoot@@Base+0x28c>  // b.lo, b.ul, b.last
   3b4cc:	tbz	x1, #63, 3b4e0 <__gmpfr_cuberoot@@Base+0x7c8>
   3b4d0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3b4d4:	cmp	x1, x0
   3b4d8:	b.eq	3b3b4 <__gmpfr_cuberoot@@Base+0x69c>  // b.none
   3b4dc:	b	3afa4 <__gmpfr_cuberoot@@Base+0x28c>
   3b4e0:	neg	x1, x1
   3b4e4:	b	3b3b4 <__gmpfr_cuberoot@@Base+0x69c>
   3b4e8:	sub	x19, x19, x1
   3b4ec:	str	x19, [x29, #200]
   3b4f0:	b	3b3b8 <__gmpfr_cuberoot@@Base+0x6a0>
   3b4f4:	cmp	x1, #0x0
   3b4f8:	b.le	3b530 <__gmpfr_cuberoot@@Base+0x818>
   3b4fc:	sub	x1, x1, x28
   3b500:	neg	x7, x28
   3b504:	cmp	x1, x7
   3b508:	b.cc	3b06c <__gmpfr_cuberoot@@Base+0x354>  // b.lo, b.ul, b.last
   3b50c:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   3b510:	cmp	x1, x0
   3b514:	b.cc	3b528 <__gmpfr_cuberoot@@Base+0x810>  // b.lo, b.ul, b.last
   3b518:	b.ne	3b06c <__gmpfr_cuberoot@@Base+0x354>  // b.any
   3b51c:	mov	x28, #0x2                   	// #2
   3b520:	movk	x28, #0x8000, lsl #48
   3b524:	b	3b43c <__gmpfr_cuberoot@@Base+0x724>
   3b528:	neg	x28, x1
   3b52c:	b	3b43c <__gmpfr_cuberoot@@Base+0x724>
   3b530:	sub	x28, x28, x1
   3b534:	b	3b43c <__gmpfr_cuberoot@@Base+0x724>
   3b538:	str	wzr, [x29, #160]
   3b53c:	b	3b0e4 <__gmpfr_cuberoot@@Base+0x3cc>
   3b540:	ldr	x1, [x29, #136]
   3b544:	ldr	x0, [x29, #168]
   3b548:	add	x0, x0, x1
   3b54c:	str	x0, [x29, #168]
   3b550:	mov	x0, #0x2                   	// #2
   3b554:	ldr	x1, [x29, #168]
   3b558:	sdiv	x0, x1, x0
   3b55c:	str	x0, [x29, #136]
   3b560:	b	3ae7c <__gmpfr_cuberoot@@Base+0x164>
   3b564:	ldp	x2, x4, [x29, #176]
   3b568:	add	x6, x29, #0xc8
   3b56c:	ldr	w3, [x21]
   3b570:	mov	w5, w26
   3b574:	ldr	x0, [x25, #24]
   3b578:	mov	x1, x23
   3b57c:	bl	cab0 <mpfr_round_raw@plt>
   3b580:	cbz	w0, 3b5a0 <__gmpfr_cuberoot@@Base+0x888>
   3b584:	ldr	x0, [x25]
   3b588:	add	x28, x28, #0x1
   3b58c:	ldr	x1, [x25, #24]
   3b590:	sub	x0, x0, #0x1
   3b594:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   3b598:	asr	x0, x0, #6
   3b59c:	str	x2, [x1, x0, lsl #3]
   3b5a0:	ldr	w1, [x21]
   3b5a4:	mov	w0, #0x1                   	// #1
   3b5a8:	cmp	w1, #0x0
   3b5ac:	cneg	w0, w0, ne  // ne = any
   3b5b0:	str	w0, [x25, #8]
   3b5b4:	ldr	x0, [x29, #176]
   3b5b8:	add	x23, x28, x0
   3b5bc:	tbnz	x28, #63, 3b5c4 <__gmpfr_cuberoot@@Base+0x8ac>
   3b5c0:	tbnz	x23, #63, 3afa4 <__gmpfr_cuberoot@@Base+0x28c>
   3b5c4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3b5c8:	ldr	x2, [x0, #2528]
   3b5cc:	add	x0, x0, #0x9e0
   3b5d0:	blr	x2
   3b5d4:	str	x23, [x25, #16]
   3b5d8:	mrs	x2, tpidr_el0
   3b5dc:	ldr	w1, [x29, #200]
   3b5e0:	ldr	x0, [x2, x0]
   3b5e4:	cmp	x0, x23
   3b5e8:	b.gt	3b608 <__gmpfr_cuberoot@@Base+0x8f0>
   3b5ec:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3b5f0:	ldr	x3, [x0, #2560]
   3b5f4:	add	x0, x0, #0xa00
   3b5f8:	blr	x3
   3b5fc:	ldr	x0, [x2, x0]
   3b600:	cmp	x0, x23
   3b604:	b.ge	3b64c <__gmpfr_cuberoot@@Base+0x934>  // b.tcont
   3b608:	mov	w2, w26
   3b60c:	mov	x0, x25
   3b610:	bl	cbc0 <mpfr_check_range@plt>
   3b614:	mov	w1, w0
   3b618:	str	w1, [x29, #200]
   3b61c:	ldr	x0, [x29, #192]
   3b620:	cbz	x0, 3b628 <__gmpfr_cuberoot@@Base+0x910>
   3b624:	bl	c4a0 <mpfr_tmp_free@plt>
   3b628:	ldr	w0, [x29, #200]
   3b62c:	mov	sp, x29
   3b630:	ldp	x19, x20, [sp, #16]
   3b634:	ldp	x21, x22, [sp, #32]
   3b638:	ldp	x23, x24, [sp, #48]
   3b63c:	ldp	x25, x26, [sp, #64]
   3b640:	ldp	x27, x28, [sp, #80]
   3b644:	ldp	x29, x30, [sp], #208
   3b648:	ret
   3b64c:	cbz	w1, 3b618 <__gmpfr_cuberoot@@Base+0x900>
   3b650:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3b654:	ldr	x3, [x0, #2592]
   3b658:	add	x0, x0, #0xa20
   3b65c:	blr	x3
   3b660:	add	x0, x2, x0
   3b664:	ldr	w2, [x0]
   3b668:	orr	w2, w2, #0x8
   3b66c:	str	w2, [x0]
   3b670:	b	3b618 <__gmpfr_cuberoot@@Base+0x900>
   3b674:	cmp	x19, #0x1
   3b678:	b.ne	3b0e4 <__gmpfr_cuberoot@@Base+0x3cc>  // b.any
   3b67c:	ldr	x20, [x23]
   3b680:	and	x20, x20, #0x1
   3b684:	sub	w20, w19, w20
   3b688:	ldr	x2, [x29, #152]
   3b68c:	mov	x1, x23
   3b690:	mov	x0, x23
   3b694:	add	x28, x28, #0x1
   3b698:	mov	w3, #0x1                   	// #1
   3b69c:	bl	bd60 <__gmpn_rshift@plt>
   3b6a0:	b	3b0e4 <__gmpfr_cuberoot@@Base+0x3cc>
   3b6a4:	cbz	x28, 3af50 <__gmpfr_cuberoot@@Base+0x238>
   3b6a8:	mov	x1, x23
   3b6ac:	add	x0, x23, x28, lsl #3
   3b6b0:	bl	bb60 <__gmpn_copyd@plt>
   3b6b4:	lsl	x2, x28, #3
   3b6b8:	mov	x0, x23
   3b6bc:	mov	w1, #0x0                   	// #0
   3b6c0:	bl	c1a0 <memset@plt>
   3b6c4:	b	3af50 <__gmpfr_cuberoot@@Base+0x238>
   3b6c8:	b.eq	3b0a8 <__gmpfr_cuberoot@@Base+0x390>  // b.none
   3b6cc:	sxtw	x2, w0
   3b6d0:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
   3b6d4:	udiv	x1, x1, x2
   3b6d8:	cmp	x1, x19
   3b6dc:	b.gt	3b0a8 <__gmpfr_cuberoot@@Base+0x390>
   3b6e0:	b	3afa4 <__gmpfr_cuberoot@@Base+0x28c>

000000000003b6e4 <mpfr_strtofr@@Base>:
   3b6e4:	stp	x29, x30, [sp, #-160]!
   3b6e8:	mov	x29, sp
   3b6ec:	stp	x19, x20, [sp, #16]
   3b6f0:	stp	x21, x22, [sp, #32]
   3b6f4:	mov	x22, x0
   3b6f8:	sub	w0, w3, #0x2
   3b6fc:	stp	x23, x24, [sp, #48]
   3b700:	cmp	w0, #0x3c
   3b704:	ccmp	w3, #0x0, #0x4, hi  // hi = pmore
   3b708:	stp	x25, x26, [sp, #64]
   3b70c:	stp	x27, x28, [sp, #80]
   3b710:	b.eq	3b72c <mpfr_strtofr@@Base+0x48>  // b.none
   3b714:	adrp	x2, 5a000 <mpfr_bases@@Base+0x2a8>
   3b718:	adrp	x0, 5a000 <mpfr_bases@@Base+0x2a8>
   3b71c:	add	x2, x2, #0x896
   3b720:	add	x0, x0, #0x88c
   3b724:	mov	w1, #0x3b0                 	// #944
   3b728:	bl	cbd0 <mpfr_assert_fail@plt>
   3b72c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3b730:	str	x0, [x22, #16]
   3b734:	mov	w0, #0x1                   	// #1
   3b738:	str	w0, [x22, #8]
   3b73c:	mov	x25, x1
   3b740:	mov	x21, x2
   3b744:	mov	w20, w3
   3b748:	mov	w23, w4
   3b74c:	bl	bf20 <localeconv@plt>
   3b750:	ldr	x0, [x0]
   3b754:	ldrb	w0, [x0, #1]
   3b758:	cbnz	w0, 3b814 <mpfr_strtofr@@Base+0x130>
   3b75c:	bl	bf20 <localeconv@plt>
   3b760:	ldr	x0, [x0]
   3b764:	ldrb	w26, [x0]
   3b768:	str	xzr, [sp, #112]
   3b76c:	bl	c6c0 <__ctype_b_loc@plt>
   3b770:	ldr	x1, [x0]
   3b774:	mov	x19, x25
   3b778:	mov	x24, x0
   3b77c:	ldrb	w0, [x19]
   3b780:	ldrb	w6, [x19]
   3b784:	ldrh	w0, [x1, x0, lsl #1]
   3b788:	tbnz	w0, #13, 3b81c <mpfr_strtofr@@Base+0x138>
   3b78c:	cmp	w6, #0x2d
   3b790:	adrp	x1, 5a000 <mpfr_bases@@Base+0x2a8>
   3b794:	cset	w0, eq  // eq = none
   3b798:	cmp	w6, #0x2b
   3b79c:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   3b7a0:	str	w0, [sp, #104]
   3b7a4:	cset	x0, ne  // ne = any
   3b7a8:	add	x1, x1, #0x8bd
   3b7ac:	add	x19, x19, x0
   3b7b0:	mov	x0, x19
   3b7b4:	bl	3adbc <__gmpfr_cuberoot@@Base+0xa4>
   3b7b8:	cbnz	w0, 3b824 <mpfr_strtofr@@Base+0x140>
   3b7bc:	add	x19, x19, #0x5
   3b7c0:	ldrb	w0, [x19]
   3b7c4:	cmp	w0, #0x28
   3b7c8:	b.ne	3b7e0 <mpfr_strtofr@@Base+0xfc>  // b.any
   3b7cc:	add	x1, x19, #0x1
   3b7d0:	ldrb	w2, [x1]
   3b7d4:	cmp	w2, #0x29
   3b7d8:	b.ne	3b848 <mpfr_strtofr@@Base+0x164>  // b.any
   3b7dc:	add	x19, x1, #0x1
   3b7e0:	mrs	x2, tpidr_el0
   3b7e4:	mov	x0, #0x2                   	// #2
   3b7e8:	movk	x0, #0x8000, lsl #48
   3b7ec:	str	x0, [x22, #16]
   3b7f0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3b7f4:	ldr	x1, [x0, #2592]
   3b7f8:	add	x0, x0, #0xa20
   3b7fc:	blr	x1
   3b800:	ldr	w1, [x2, x0]
   3b804:	orr	w1, w1, #0x4
   3b808:	str	w1, [x2, x0]
   3b80c:	mov	w20, #0x0                   	// #0
   3b810:	b	3bc2c <mpfr_strtofr@@Base+0x548>
   3b814:	mov	w26, #0x2e                  	// #46
   3b818:	b	3b768 <mpfr_strtofr@@Base+0x84>
   3b81c:	add	x19, x19, #0x1
   3b820:	b	3b77c <mpfr_strtofr@@Base+0x98>
   3b824:	cmp	w20, #0x10
   3b828:	b.gt	3b87c <mpfr_strtofr@@Base+0x198>
   3b82c:	adrp	x1, 55000 <mpfr_free_pool@@Base+0x3eec>
   3b830:	mov	x0, x19
   3b834:	add	x1, x1, #0xd4c
   3b838:	bl	3adbc <__gmpfr_cuberoot@@Base+0xa4>
   3b83c:	cbnz	w0, 3b87c <mpfr_strtofr@@Base+0x198>
   3b840:	add	x19, x19, #0x3
   3b844:	b	3b7c0 <mpfr_strtofr@@Base+0xdc>
   3b848:	and	w0, w2, #0xffffffdf
   3b84c:	sub	w0, w0, #0x41
   3b850:	and	w0, w0, #0xff
   3b854:	cmp	w0, #0x19
   3b858:	b.ls	3b874 <mpfr_strtofr@@Base+0x190>  // b.plast
   3b85c:	sub	w0, w2, #0x30
   3b860:	and	w0, w0, #0xff
   3b864:	cmp	w0, #0x9
   3b868:	b.ls	3b874 <mpfr_strtofr@@Base+0x190>  // b.plast
   3b86c:	cmp	w2, #0x5f
   3b870:	b.ne	3b7e0 <mpfr_strtofr@@Base+0xfc>  // b.any
   3b874:	add	x1, x1, #0x1
   3b878:	b	3b7d0 <mpfr_strtofr@@Base+0xec>
   3b87c:	adrp	x1, 5a000 <mpfr_bases@@Base+0x2a8>
   3b880:	mov	x0, x19
   3b884:	add	x1, x1, #0x8c3
   3b888:	bl	3adbc <__gmpfr_cuberoot@@Base+0xa4>
   3b88c:	cbnz	w0, 3b8b0 <mpfr_strtofr@@Base+0x1cc>
   3b890:	add	x19, x19, #0x5
   3b894:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3b898:	cmp	w6, #0x2d
   3b89c:	str	x0, [x22, #16]
   3b8a0:	mov	w0, #0xffffffff            	// #-1
   3b8a4:	csinc	w0, w0, wzr, eq  // eq = none
   3b8a8:	str	w0, [x22, #8]
   3b8ac:	b	3b80c <mpfr_strtofr@@Base+0x128>
   3b8b0:	cmp	w20, #0x10
   3b8b4:	b.gt	3b9a4 <mpfr_strtofr@@Base+0x2c0>
   3b8b8:	adrp	x1, 5a000 <mpfr_bases@@Base+0x2a8>
   3b8bc:	mov	x0, x19
   3b8c0:	add	x1, x1, #0x8c9
   3b8c4:	bl	3adbc <__gmpfr_cuberoot@@Base+0xa4>
   3b8c8:	cbnz	w0, 3b8d4 <mpfr_strtofr@@Base+0x1f0>
   3b8cc:	add	x19, x19, #0x8
   3b8d0:	b	3b894 <mpfr_strtofr@@Base+0x1b0>
   3b8d4:	adrp	x1, 55000 <mpfr_free_pool@@Base+0x3eec>
   3b8d8:	mov	x0, x19
   3b8dc:	add	x1, x1, #0xd54
   3b8e0:	bl	3adbc <__gmpfr_cuberoot@@Base+0xa4>
   3b8e4:	cbnz	w0, 3b8f0 <mpfr_strtofr@@Base+0x20c>
   3b8e8:	add	x19, x19, #0x3
   3b8ec:	b	3b894 <mpfr_strtofr@@Base+0x1b0>
   3b8f0:	tst	w20, #0xffffffef
   3b8f4:	b.ne	3b9a4 <mpfr_strtofr@@Base+0x2c0>  // b.any
   3b8f8:	ldrb	w0, [x19]
   3b8fc:	cmp	w0, #0x30
   3b900:	b.ne	3b9a4 <mpfr_strtofr@@Base+0x2c0>  // b.any
   3b904:	ldrb	w0, [x19, #1]
   3b908:	and	w0, w0, #0xffffffdf
   3b90c:	and	w0, w0, #0xff
   3b910:	cmp	w0, #0x58
   3b914:	b.ne	3b9a4 <mpfr_strtofr@@Base+0x2c0>  // b.any
   3b918:	mov	x28, x19
   3b91c:	add	x19, x19, #0x2
   3b920:	mov	w20, #0x10                  	// #16
   3b924:	tst	w20, #0xfffffffd
   3b928:	b.ne	3b958 <mpfr_strtofr@@Base+0x274>  // b.any
   3b92c:	ldrb	w0, [x19]
   3b930:	cmp	w0, #0x30
   3b934:	b.ne	3b9ac <mpfr_strtofr@@Base+0x2c8>  // b.any
   3b938:	ldrb	w0, [x19, #1]
   3b93c:	and	w0, w0, #0xffffffdf
   3b940:	and	w0, w0, #0xff
   3b944:	cmp	w0, #0x42
   3b948:	b.ne	3b9ac <mpfr_strtofr@@Base+0x2c8>  // b.any
   3b94c:	mov	x28, x19
   3b950:	add	x19, x19, #0x2
   3b954:	mov	w20, #0x2                   	// #2
   3b958:	mov	x0, x19
   3b95c:	str	w20, [sp, #108]
   3b960:	bl	bb30 <strlen@plt>
   3b964:	add	x0, x0, #0x1
   3b968:	str	x0, [sp, #136]
   3b96c:	bl	cd90 <mpfr_allocate_func@plt>
   3b970:	str	x0, [sp, #112]
   3b974:	ldr	x3, [sp, #112]
   3b978:	mov	w4, #0x0                   	// #0
   3b97c:	stp	xzr, xzr, [sp, #144]
   3b980:	mov	x27, x19
   3b984:	ldrb	w2, [x27], #1
   3b988:	cmp	w2, #0x2e
   3b98c:	ccmp	w2, w26, #0x4, ne  // ne = any
   3b990:	b.ne	3b9c4 <mpfr_strtofr@@Base+0x2e0>  // b.any
   3b994:	cbnz	w4, 3ba20 <mpfr_strtofr@@Base+0x33c>
   3b998:	mov	w4, #0x1                   	// #1
   3b99c:	mov	x19, x27
   3b9a0:	b	3b980 <mpfr_strtofr@@Base+0x29c>
   3b9a4:	mov	x28, #0x0                   	// #0
   3b9a8:	b	3b924 <mpfr_strtofr@@Base+0x240>
   3b9ac:	cmp	w20, #0x0
   3b9b0:	mov	w0, #0xa                   	// #10
   3b9b4:	csel	w20, w20, w0, ne  // ne = any
   3b9b8:	b	3b958 <mpfr_strtofr@@Base+0x274>
   3b9bc:	mov	x28, #0x0                   	// #0
   3b9c0:	b	3b974 <mpfr_strtofr@@Base+0x290>
   3b9c4:	sub	w0, w2, #0x30
   3b9c8:	cmp	w0, #0x9
   3b9cc:	b.ls	3b9ec <mpfr_strtofr@@Base+0x308>  // b.plast
   3b9d0:	sub	w0, w2, #0x61
   3b9d4:	cmp	w0, #0x19
   3b9d8:	b.hi	3ba0c <mpfr_strtofr@@Base+0x328>  // b.pmore
   3b9dc:	sub	w0, w2, #0x3d
   3b9e0:	sub	w1, w2, #0x57
   3b9e4:	cmp	w20, #0x25
   3b9e8:	csel	w0, w1, w0, lt  // lt = tstop
   3b9ec:	cmp	w20, w0
   3b9f0:	b.le	3ba20 <mpfr_strtofr@@Base+0x33c>
   3b9f4:	strb	w0, [x3], #1
   3b9f8:	cbnz	w4, 3b99c <mpfr_strtofr@@Base+0x2b8>
   3b9fc:	ldr	x0, [sp, #144]
   3ba00:	add	x0, x0, #0x1
   3ba04:	str	x0, [sp, #144]
   3ba08:	b	3b99c <mpfr_strtofr@@Base+0x2b8>
   3ba0c:	sub	w0, w2, #0x41
   3ba10:	cmp	w0, #0x19
   3ba14:	b.hi	3ba20 <mpfr_strtofr@@Base+0x33c>  // b.pmore
   3ba18:	sub	w0, w2, #0x37
   3ba1c:	b	3b9ec <mpfr_strtofr@@Base+0x308>
   3ba20:	ldr	x0, [sp, #112]
   3ba24:	sub	x3, x3, x0
   3ba28:	str	x3, [sp, #128]
   3ba2c:	cbnz	x3, 3ba8c <mpfr_strtofr@@Base+0x3a8>
   3ba30:	mov	x19, x28
   3ba34:	cbnz	x28, 3b9bc <mpfr_strtofr@@Base+0x2d8>
   3ba38:	mov	x19, x25
   3ba3c:	mov	w20, #0xffffffff            	// #-1
   3ba40:	ldr	x0, [sp, #112]
   3ba44:	cbz	x0, 3bbfc <mpfr_strtofr@@Base+0x518>
   3ba48:	cmp	w20, #0x1
   3ba4c:	b.eq	3bc0c <mpfr_strtofr@@Base+0x528>  // b.none
   3ba50:	ldr	x1, [sp, #136]
   3ba54:	bl	ccc0 <mpfr_free_func@plt>
   3ba58:	cmn	w20, #0x1
   3ba5c:	b.eq	3b80c <mpfr_strtofr@@Base+0x128>  // b.none
   3ba60:	cmp	w20, #0x2
   3ba64:	b.ne	3bc2c <mpfr_strtofr@@Base+0x548>  // b.any
   3ba68:	ldr	w0, [sp, #104]
   3ba6c:	mov	w1, w23
   3ba70:	mov	w2, #0x1                   	// #1
   3ba74:	cmp	w0, #0x0
   3ba78:	mov	x0, x22
   3ba7c:	cneg	w2, w2, ne  // ne = any
   3ba80:	bl	bfc0 <mpfr_overflow@plt>
   3ba84:	mov	w20, w0
   3ba88:	b	3bc2c <mpfr_strtofr@@Base+0x548>
   3ba8c:	cmp	w2, #0x40
   3ba90:	b.eq	3baa8 <mpfr_strtofr@@Base+0x3c4>  // b.none
   3ba94:	cmp	w20, #0xa
   3ba98:	b.gt	3bb7c <mpfr_strtofr@@Base+0x498>
   3ba9c:	and	w0, w2, #0xffffffdf
   3baa0:	cmp	w0, #0x45
   3baa4:	b.ne	3bb7c <mpfr_strtofr@@Base+0x498>  // b.any
   3baa8:	ldrb	w1, [x27]
   3baac:	ldr	x0, [x24]
   3bab0:	ldrh	w0, [x0, x1, lsl #1]
   3bab4:	tbnz	w0, #13, 3bb7c <mpfr_strtofr@@Base+0x498>
   3bab8:	add	x1, sp, #0x60
   3babc:	mov	x0, x27
   3bac0:	mov	w2, #0xa                   	// #10
   3bac4:	bl	c6e0 <strtol@plt>
   3bac8:	ldr	x1, [sp, #96]
   3bacc:	cmp	x27, x1
   3bad0:	csel	x19, x19, x1, eq  // eq = none
   3bad4:	ldr	x1, [sp, #144]
   3bad8:	tbnz	x0, #63, 3bb48 <mpfr_strtofr@@Base+0x464>
   3badc:	tbnz	x1, #63, 3bb70 <mpfr_strtofr@@Base+0x48c>
   3bae0:	adds	x1, x0, x1
   3bae4:	mov	w20, #0x1                   	// #1
   3bae8:	b.pl	3baf4 <mpfr_strtofr@@Base+0x410>  // b.nfrst
   3baec:	mov	x1, x0
   3baf0:	mov	w20, #0x2                   	// #2
   3baf4:	str	x1, [sp, #144]
   3baf8:	ldr	x0, [sp, #112]
   3bafc:	ldr	x1, [sp, #128]
   3bb00:	cbz	x1, 3bb0c <mpfr_strtofr@@Base+0x428>
   3bb04:	ldrb	w2, [x0]
   3bb08:	cbz	w2, 3bbcc <mpfr_strtofr@@Base+0x4e8>
   3bb0c:	ldr	x1, [sp, #128]
   3bb10:	cbz	x1, 3bb20 <mpfr_strtofr@@Base+0x43c>
   3bb14:	sub	x2, x1, #0x1
   3bb18:	ldrb	w3, [x0, x2]
   3bb1c:	cbz	w3, 3bbe8 <mpfr_strtofr@@Base+0x504>
   3bb20:	str	x0, [sp, #120]
   3bb24:	cbnz	x1, 3ba40 <mpfr_strtofr@@Base+0x35c>
   3bb28:	ldr	w20, [sp, #104]
   3bb2c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3bb30:	str	x0, [x22, #16]
   3bb34:	cbz	w20, 3bbf0 <mpfr_strtofr@@Base+0x50c>
   3bb38:	mov	w0, #0xffffffff            	// #-1
   3bb3c:	mov	w20, #0x0                   	// #0
   3bb40:	str	w0, [x22, #8]
   3bb44:	b	3ba40 <mpfr_strtofr@@Base+0x35c>
   3bb48:	tbz	x1, #63, 3bb70 <mpfr_strtofr@@Base+0x48c>
   3bb4c:	neg	x0, x0
   3bb50:	mov	w20, #0x3                   	// #3
   3bb54:	sub	x1, x0, x1
   3bb58:	cmp	x0, x1
   3bb5c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3bb60:	csinc	w20, w20, wzr, hi  // hi = pmore
   3bb64:	cmp	x1, #0x0
   3bb68:	csneg	x1, x0, x1, lt  // lt = tstop
   3bb6c:	b	3baf4 <mpfr_strtofr@@Base+0x410>
   3bb70:	add	x1, x0, x1
   3bb74:	mov	w20, #0x1                   	// #1
   3bb78:	b	3baf4 <mpfr_strtofr@@Base+0x410>
   3bb7c:	cmp	w20, #0x2
   3bb80:	ccmp	w20, #0x10, #0x4, ne  // ne = any
   3bb84:	b.ne	3bbc4 <mpfr_strtofr@@Base+0x4e0>  // b.any
   3bb88:	and	w2, w2, #0xffffffdf
   3bb8c:	cmp	w2, #0x50
   3bb90:	b.ne	3bbc4 <mpfr_strtofr@@Base+0x4e0>  // b.any
   3bb94:	ldrb	w1, [x27]
   3bb98:	ldr	x0, [x24]
   3bb9c:	ldrh	w0, [x0, x1, lsl #1]
   3bba0:	tbnz	w0, #13, 3bbc4 <mpfr_strtofr@@Base+0x4e0>
   3bba4:	add	x1, sp, #0x60
   3bba8:	mov	x0, x27
   3bbac:	mov	w2, #0xa                   	// #10
   3bbb0:	bl	c6e0 <strtol@plt>
   3bbb4:	ldr	x1, [sp, #96]
   3bbb8:	str	x0, [sp, #152]
   3bbbc:	cmp	x27, x1
   3bbc0:	csel	x19, x19, x1, eq  // eq = none
   3bbc4:	mov	w20, #0x1                   	// #1
   3bbc8:	b	3baf8 <mpfr_strtofr@@Base+0x414>
   3bbcc:	ldr	x2, [sp, #144]
   3bbd0:	sub	x1, x1, #0x1
   3bbd4:	add	x0, x0, #0x1
   3bbd8:	str	x1, [sp, #128]
   3bbdc:	sub	x2, x2, #0x1
   3bbe0:	str	x2, [sp, #144]
   3bbe4:	b	3bafc <mpfr_strtofr@@Base+0x418>
   3bbe8:	str	x2, [sp, #128]
   3bbec:	b	3bb0c <mpfr_strtofr@@Base+0x428>
   3bbf0:	mov	w0, #0x1                   	// #1
   3bbf4:	str	w0, [x22, #8]
   3bbf8:	b	3ba40 <mpfr_strtofr@@Base+0x35c>
   3bbfc:	cmn	w20, #0x1
   3bc00:	b.eq	3b80c <mpfr_strtofr@@Base+0x128>  // b.none
   3bc04:	cmp	w20, #0x1
   3bc08:	b.ne	3ba60 <mpfr_strtofr@@Base+0x37c>  // b.any
   3bc0c:	add	x1, sp, #0x68
   3bc10:	mov	w2, w23
   3bc14:	mov	x0, x22
   3bc18:	bl	3ae00 <__gmpfr_cuberoot@@Base+0xe8>
   3bc1c:	mov	w20, w0
   3bc20:	ldr	x0, [sp, #112]
   3bc24:	ldr	x1, [sp, #136]
   3bc28:	bl	ccc0 <mpfr_free_func@plt>
   3bc2c:	cbz	x21, 3bc34 <mpfr_strtofr@@Base+0x550>
   3bc30:	str	x19, [x21]
   3bc34:	mov	w0, w20
   3bc38:	ldp	x19, x20, [sp, #16]
   3bc3c:	ldp	x21, x22, [sp, #32]
   3bc40:	ldp	x23, x24, [sp, #48]
   3bc44:	ldp	x25, x26, [sp, #64]
   3bc48:	ldp	x27, x28, [sp, #80]
   3bc4c:	ldp	x29, x30, [sp], #160
   3bc50:	ret
   3bc54:	stp	x29, x30, [sp, #-272]!
   3bc58:	mov	x29, sp
   3bc5c:	stp	x19, x20, [sp, #16]
   3bc60:	mov	x20, x1
   3bc64:	ldr	w19, [x2, #4]
   3bc68:	mov	x1, #0x1                   	// #1
   3bc6c:	stp	x21, x22, [sp, #32]
   3bc70:	mov	x22, x0
   3bc74:	mov	x0, x2
   3bc78:	stp	x23, x24, [sp, #48]
   3bc7c:	mov	x24, x2
   3bc80:	stp	x25, x26, [sp, #64]
   3bc84:	mov	w25, w3
   3bc88:	stp	x27, x28, [sp, #80]
   3bc8c:	str	w4, [sp, #140]
   3bc90:	bl	bc80 <__gmpz_cmpabs_ui@plt>
   3bc94:	cbnz	w0, 3bcd0 <mpfr_strtofr@@Base+0x5ec>
   3bc98:	ldr	w3, [x20, #8]
   3bc9c:	mov	w2, w25
   3bca0:	mov	x1, x20
   3bca4:	mov	x0, x22
   3bca8:	bl	c730 <mpfr_set4@plt>
   3bcac:	mov	w19, w0
   3bcb0:	mov	w0, w19
   3bcb4:	ldp	x19, x20, [sp, #16]
   3bcb8:	ldp	x21, x22, [sp, #32]
   3bcbc:	ldp	x23, x24, [sp, #48]
   3bcc0:	ldp	x25, x26, [sp, #64]
   3bcc4:	ldp	x27, x28, [sp, #80]
   3bcc8:	ldp	x29, x30, [sp], #272
   3bccc:	ret
   3bcd0:	ldp	x0, x1, [x24]
   3bcd4:	stp	x0, x1, [sp, #160]
   3bcd8:	cmp	w19, #0x0
   3bcdc:	ldr	x0, [x24, #8]
   3bce0:	cneg	w19, w19, lt  // lt = tstop
   3bce4:	str	x0, [sp, #112]
   3bce8:	str	w19, [sp, #164]
   3bcec:	add	x0, x0, w19, sxtw #3
   3bcf0:	sbfiz	x19, x19, #6, #32
   3bcf4:	ldur	x0, [x0, #-8]
   3bcf8:	clz	x0, x0
   3bcfc:	sub	x0, x19, x0
   3bd00:	str	x0, [sp, #104]
   3bd04:	ldr	x0, [x20, #16]
   3bd08:	cmp	x0, #0x0
   3bd0c:	b.gt	3be9c <mpfr_strtofr@@Base+0x7b8>
   3bd10:	ldr	w0, [x20, #8]
   3bd14:	cmp	w0, #0x0
   3bd18:	b.gt	3bea8 <mpfr_strtofr@@Base+0x7c4>
   3bd1c:	mov	w26, #0x3                   	// #3
   3bd20:	mov	w27, #0x2                   	// #2
   3bd24:	ldr	w0, [sp, #140]
   3bd28:	ldr	x19, [x22]
   3bd2c:	cbz	w0, 3bd7c <mpfr_strtofr@@Base+0x698>
   3bd30:	ldr	x0, [sp, #104]
   3bd34:	add	x21, x19, #0x3
   3bd38:	cmp	x19, #0x1
   3bd3c:	add	x21, x21, x0
   3bd40:	b.eq	3beb4 <mpfr_strtofr@@Base+0x7d0>  // b.none
   3bd44:	b.gt	3bd60 <mpfr_strtofr@@Base+0x67c>
   3bd48:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   3bd4c:	adrp	x0, 5a000 <mpfr_bases@@Base+0x2a8>
   3bd50:	add	x2, x2, #0xffa
   3bd54:	add	x0, x0, #0xabc
   3bd58:	mov	w1, #0x42                  	// #66
   3bd5c:	bl	cbd0 <mpfr_assert_fail@plt>
   3bd60:	ldr	x19, [x22]
   3bd64:	sub	x19, x19, #0x1
   3bd68:	clz	x0, x19
   3bd6c:	mov	w19, #0x40                  	// #64
   3bd70:	sub	w19, w19, w0
   3bd74:	sxtw	x19, w19
   3bd78:	add	x19, x21, x19
   3bd7c:	add	x21, sp, #0xb0
   3bd80:	mov	x1, x19
   3bd84:	mov	x0, x21
   3bd88:	bl	cb10 <mpfr_init2@plt>
   3bd8c:	mov	x0, #0x40                  	// #64
   3bd90:	str	x0, [sp, #120]
   3bd94:	mrs	x0, tpidr_el0
   3bd98:	str	x0, [sp, #128]
   3bd9c:	ldr	x0, [sp, #104]
   3bda0:	sub	x0, x0, #0x2
   3bda4:	str	x0, [sp, #152]
   3bda8:	add	x0, sp, #0xa0
   3bdac:	str	x0, [sp, #144]
   3bdb0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3bdb4:	ldr	x1, [x0, #2592]
   3bdb8:	add	x0, x0, #0xa20
   3bdbc:	blr	x1
   3bdc0:	mov	w3, w27
   3bdc4:	ldr	x1, [sp, #128]
   3bdc8:	mov	x2, x20
   3bdcc:	str	wzr, [x1, x0]
   3bdd0:	mov	x1, x20
   3bdd4:	mov	x0, x21
   3bdd8:	bl	bdd0 <mpfr_mul@plt>
   3bddc:	mov	w23, w0
   3bde0:	ldp	x0, x1, [sp, #144]
   3bde4:	bl	c060 <__gmpz_tstbit@plt>
   3bde8:	cbz	w0, 3be04 <mpfr_strtofr@@Base+0x720>
   3bdec:	mov	w3, w26
   3bdf0:	mov	x2, x20
   3bdf4:	mov	x1, x21
   3bdf8:	mov	x0, x21
   3bdfc:	bl	bdd0 <mpfr_mul@plt>
   3be00:	orr	w23, w23, w0
   3be04:	ldr	x0, [sp, #104]
   3be08:	sub	x28, x0, #0x3
   3be0c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3be10:	ldr	x1, [x0, #2592]
   3be14:	add	x0, x0, #0xa20
   3be18:	blr	x1
   3be1c:	ldr	x1, [sp, #128]
   3be20:	cmn	x28, #0x1
   3be24:	ldr	w1, [x1, x0]
   3be28:	b.eq	3be38 <mpfr_strtofr@@Base+0x754>  // b.none
   3be2c:	mov	w0, #0x27                  	// #39
   3be30:	tst	w1, w0
   3be34:	b.eq	3bebc <mpfr_strtofr@@Base+0x7d8>  // b.none
   3be38:	ldr	w0, [sp, #140]
   3be3c:	cmp	w23, #0x0
   3be40:	and	w2, w1, #0x2
   3be44:	eor	w0, w0, #0x1
   3be48:	and	w0, w0, #0x1
   3be4c:	csinc	w0, w0, wzr, ne  // ne = any
   3be50:	cbnz	w0, 3bf74 <mpfr_strtofr@@Base+0x890>
   3be54:	cbnz	w2, 3bf78 <mpfr_strtofr@@Base+0x894>
   3be58:	tbnz	w1, #0, 3c03c <mpfr_strtofr@@Base+0x958>
   3be5c:	ldr	x1, [sp, #192]
   3be60:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3be64:	cmp	x1, x0
   3be68:	b.gt	3bf04 <mpfr_strtofr@@Base+0x820>
   3be6c:	ldr	x1, [sp, #120]
   3be70:	mov	x0, #0xfffffffffffffeff    	// #-257
   3be74:	movk	x0, #0x7fff, lsl #48
   3be78:	sub	x0, x0, x19
   3be7c:	cmp	x0, x1
   3be80:	b.ge	3bf50 <mpfr_strtofr@@Base+0x86c>  // b.tcont
   3be84:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   3be88:	add	x2, x2, #0x519
   3be8c:	mov	w1, #0x64                  	// #100
   3be90:	adrp	x0, 5a000 <mpfr_bases@@Base+0x2a8>
   3be94:	add	x0, x0, #0xabc
   3be98:	bl	cbd0 <mpfr_assert_fail@plt>
   3be9c:	mov	w26, #0x1                   	// #1
   3bea0:	mov	w27, #0x3                   	// #3
   3bea4:	b	3bd24 <mpfr_strtofr@@Base+0x640>
   3bea8:	mov	w26, #0x2                   	// #2
   3beac:	mov	w27, w26
   3beb0:	b	3bd24 <mpfr_strtofr@@Base+0x640>
   3beb4:	mov	x19, #0x0                   	// #0
   3beb8:	b	3bd78 <mpfr_strtofr@@Base+0x694>
   3bebc:	mov	x1, x21
   3bec0:	mov	w3, w27
   3bec4:	mov	x2, x21
   3bec8:	mov	x0, x21
   3becc:	bl	bdd0 <mpfr_mul@plt>
   3bed0:	orr	w23, w23, w0
   3bed4:	ldr	x0, [sp, #144]
   3bed8:	mov	x1, x28
   3bedc:	bl	c060 <__gmpz_tstbit@plt>
   3bee0:	cbz	w0, 3befc <mpfr_strtofr@@Base+0x818>
   3bee4:	mov	w3, w26
   3bee8:	mov	x2, x20
   3beec:	mov	x1, x21
   3bef0:	mov	x0, x21
   3bef4:	bl	bdd0 <mpfr_mul@plt>
   3bef8:	orr	w23, w23, w0
   3befc:	sub	x28, x28, #0x1
   3bf00:	b	3be0c <mpfr_strtofr@@Base+0x728>
   3bf04:	ldr	x0, [sp, #104]
   3bf08:	sub	x2, x19, #0x1
   3bf0c:	ldr	x1, [sp, #176]
   3bf10:	sub	x2, x2, x0
   3bf14:	ldr	x0, [sp, #200]
   3bf18:	cmp	w25, #0x0
   3bf1c:	sub	x1, x1, #0x1
   3bf20:	ldr	x3, [x22]
   3bf24:	asr	x1, x1, #6
   3bf28:	add	x1, x1, #0x1
   3bf2c:	cinc	x3, x3, eq  // eq = none
   3bf30:	bl	c400 <mpfr_round_p@plt>
   3bf34:	cbz	w0, 3be6c <mpfr_strtofr@@Base+0x788>
   3bf38:	ldr	w3, [sp, #184]
   3bf3c:	mov	w2, w25
   3bf40:	mov	x1, x21
   3bf44:	mov	x0, x22
   3bf48:	bl	c730 <mpfr_set4@plt>
   3bf4c:	b	3bf94 <mpfr_strtofr@@Base+0x8b0>
   3bf50:	ldr	x0, [sp, #120]
   3bf54:	add	x19, x19, x0
   3bf58:	mov	x0, #0x2                   	// #2
   3bf5c:	mov	x1, x19
   3bf60:	sdiv	x0, x19, x0
   3bf64:	str	x0, [sp, #120]
   3bf68:	mov	x0, x21
   3bf6c:	bl	bf50 <mpfr_set_prec@plt>
   3bf70:	b	3bdb0 <mpfr_strtofr@@Base+0x6cc>
   3bf74:	cbz	w2, 3c038 <mpfr_strtofr@@Base+0x954>
   3bf78:	ldr	x0, [sp, #112]
   3bf7c:	ldr	x0, [x0]
   3bf80:	tbz	w0, #0, 3bf9c <mpfr_strtofr@@Base+0x8b8>
   3bf84:	ldr	w2, [x20, #8]
   3bf88:	mov	w1, w25
   3bf8c:	mov	x0, x22
   3bf90:	bl	bfc0 <mpfr_overflow@plt>
   3bf94:	mov	w19, w0
   3bf98:	b	3c004 <mpfr_strtofr@@Base+0x920>
   3bf9c:	mov	w2, #0x1                   	// #1
   3bfa0:	b	3bf88 <mpfr_strtofr@@Base+0x8a4>
   3bfa4:	mov	x2, x25
   3bfa8:	mov	x1, x20
   3bfac:	mov	x5, #0x0                   	// #0
   3bfb0:	mov	w4, #0x1                   	// #1
   3bfb4:	mov	w3, #0x0                   	// #0
   3bfb8:	mov	x0, x23
   3bfbc:	bl	c780 <mpfr_pow_general@plt>
   3bfc0:	mov	w19, w0
   3bfc4:	mov	x0, x25
   3bfc8:	bl	c0f0 <mpfr_clear@plt>
   3bfcc:	ldr	w3, [sp, #216]
   3bfd0:	mov	x1, x23
   3bfd4:	mov	w2, #0x0                   	// #0
   3bfd8:	mov	x0, x22
   3bfdc:	bl	c730 <mpfr_set4@plt>
   3bfe0:	mov	x0, x23
   3bfe4:	bl	c0f0 <mpfr_clear@plt>
   3bfe8:	ldr	x2, [sp, #128]
   3bfec:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3bff0:	ldr	x1, [x0, #2592]
   3bff4:	add	x0, x0, #0xa20
   3bff8:	blr	x1
   3bffc:	mov	w1, #0x9                   	// #9
   3c000:	str	w1, [x2, x0]
   3c004:	mov	x0, x21
   3c008:	bl	c0f0 <mpfr_clear@plt>
   3c00c:	b	3bcb0 <mpfr_strtofr@@Base+0x5cc>
   3c010:	ldr	x0, [sp, #112]
   3c014:	ldr	x0, [x0]
   3c018:	tbz	w0, #0, 3c030 <mpfr_strtofr@@Base+0x94c>
   3c01c:	ldr	w2, [x20, #8]
   3c020:	mov	w1, w25
   3c024:	mov	x0, x22
   3c028:	bl	c450 <mpfr_underflow@plt>
   3c02c:	b	3bf94 <mpfr_strtofr@@Base+0x8b0>
   3c030:	mov	w2, #0x1                   	// #1
   3c034:	b	3c020 <mpfr_strtofr@@Base+0x93c>
   3c038:	tbz	w1, #0, 3bf38 <mpfr_strtofr@@Base+0x854>
   3c03c:	cbnz	w25, 3c010 <mpfr_strtofr@@Base+0x92c>
   3c040:	add	x23, sp, #0xd0
   3c044:	mov	x1, #0x2                   	// #2
   3c048:	mov	x0, x23
   3c04c:	bl	cb10 <mpfr_init2@plt>
   3c050:	ldr	w1, [x24, #4]
   3c054:	add	x25, sp, #0xf0
   3c058:	mov	x0, x25
   3c05c:	cmp	w1, #0x0
   3c060:	cneg	w1, w1, lt  // lt = tstop
   3c064:	lsl	w1, w1, #6
   3c068:	sxtw	x1, w1
   3c06c:	bl	cb10 <mpfr_init2@plt>
   3c070:	mov	x1, x24
   3c074:	mov	x0, x25
   3c078:	mov	w2, #0x0                   	// #0
   3c07c:	bl	c2d0 <mpfr_set_z@plt>
   3c080:	cbz	w0, 3bfa4 <mpfr_strtofr@@Base+0x8c0>
   3c084:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   3c088:	mov	w1, #0x85                  	// #133
   3c08c:	add	x2, x2, #0xfd9
   3c090:	b	3be90 <mpfr_strtofr@@Base+0x7ac>

000000000003c094 <mpfr_pow_z@@Base>:
   3c094:	stp	x29, x30, [sp, #-224]!
   3c098:	mov	x29, sp
   3c09c:	stp	x23, x24, [sp, #48]
   3c0a0:	mov	x24, x1
   3c0a4:	ldr	w1, [x2, #4]
   3c0a8:	stp	x19, x20, [sp, #16]
   3c0ac:	stp	x21, x22, [sp, #32]
   3c0b0:	stp	x25, x26, [sp, #64]
   3c0b4:	stp	x27, x28, [sp, #80]
   3c0b8:	cbnz	w1, 3c0d0 <mpfr_pow_z@@Base+0x3c>
   3c0bc:	mov	x2, #0x0                   	// #0
   3c0c0:	mov	x1, #0x1                   	// #1
   3c0c4:	bl	c680 <mpfr_set_ui_2exp@plt>
   3c0c8:	mov	w23, w0
   3c0cc:	b	3c124 <mpfr_pow_z@@Base+0x90>
   3c0d0:	mov	x25, x2
   3c0d4:	mov	x19, x0
   3c0d8:	ldr	x2, [x24, #16]
   3c0dc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3c0e0:	cmp	x2, x0
   3c0e4:	b.gt	3c1c8 <mpfr_pow_z@@Base+0x134>
   3c0e8:	mov	x3, #0x2                   	// #2
   3c0ec:	movk	x3, #0x8000, lsl #48
   3c0f0:	cmp	x2, x3
   3c0f4:	b.ne	3c144 <mpfr_pow_z@@Base+0xb0>  // b.any
   3c0f8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3c0fc:	ldr	x1, [x0, #2592]
   3c100:	add	x0, x0, #0xa20
   3c104:	blr	x1
   3c108:	str	x2, [x19, #16]
   3c10c:	mrs	x1, tpidr_el0
   3c110:	add	x0, x1, x0
   3c114:	ldr	w1, [x0]
   3c118:	orr	w1, w1, #0x4
   3c11c:	str	w1, [x0]
   3c120:	mov	w23, #0x0                   	// #0
   3c124:	mov	w0, w23
   3c128:	ldp	x19, x20, [sp, #16]
   3c12c:	ldp	x21, x22, [sp, #32]
   3c130:	ldp	x23, x24, [sp, #48]
   3c134:	ldp	x25, x26, [sp, #64]
   3c138:	ldp	x27, x28, [sp, #80]
   3c13c:	ldp	x29, x30, [sp], #224
   3c140:	ret
   3c144:	ldr	w3, [x24, #8]
   3c148:	cmp	x2, x0
   3c14c:	b.ne	3c17c <mpfr_pow_z@@Base+0xe8>  // b.any
   3c150:	cmp	w1, #0x0
   3c154:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3c158:	csel	x2, x2, x0, gt
   3c15c:	str	x2, [x19, #16]
   3c160:	tbz	w3, #31, 3c194 <mpfr_pow_z@@Base+0x100>
   3c164:	ldr	x0, [x25, #8]
   3c168:	ldr	x0, [x0]
   3c16c:	tbz	w0, #0, 3c194 <mpfr_pow_z@@Base+0x100>
   3c170:	mov	w0, #0xffffffff            	// #-1
   3c174:	str	w0, [x19, #8]
   3c178:	b	3c120 <mpfr_pow_z@@Base+0x8c>
   3c17c:	cmp	w1, #0x0
   3c180:	b.le	3c19c <mpfr_pow_z@@Base+0x108>
   3c184:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3c188:	str	x0, [x19, #16]
   3c18c:	cmp	w3, #0x0
   3c190:	b.le	3c164 <mpfr_pow_z@@Base+0xd0>
   3c194:	mov	w0, #0x1                   	// #1
   3c198:	b	3c174 <mpfr_pow_z@@Base+0xe0>
   3c19c:	str	x0, [x19, #16]
   3c1a0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3c1a4:	ldr	x1, [x0, #2592]
   3c1a8:	add	x0, x0, #0xa20
   3c1ac:	blr	x1
   3c1b0:	mrs	x1, tpidr_el0
   3c1b4:	add	x0, x1, x0
   3c1b8:	ldr	w1, [x0]
   3c1bc:	orr	w1, w1, #0x20
   3c1c0:	str	w1, [x0]
   3c1c4:	b	3c18c <mpfr_pow_z@@Base+0xf8>
   3c1c8:	mrs	x21, tpidr_el0
   3c1cc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3c1d0:	ldr	x1, [x0, #2592]
   3c1d4:	add	x0, x0, #0xa20
   3c1d8:	blr	x1
   3c1dc:	add	x26, x21, x0
   3c1e0:	mov	w20, w3
   3c1e4:	sub	x2, x2, #0x1
   3c1e8:	ldr	w22, [x21, x0]
   3c1ec:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3c1f0:	ldr	x1, [x0, #2528]
   3c1f4:	add	x0, x0, #0x9e0
   3c1f8:	blr	x1
   3c1fc:	add	x1, x21, x0
   3c200:	ldr	x0, [x21, x0]
   3c204:	str	x0, [sp, #96]
   3c208:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3c20c:	ldr	x3, [x0, #2560]
   3c210:	add	x0, x0, #0xa00
   3c214:	blr	x3
   3c218:	ldr	x3, [x21, x0]
   3c21c:	str	x3, [sp, #104]
   3c220:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   3c224:	str	x3, [x1]
   3c228:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   3c22c:	str	x1, [x21, x0]
   3c230:	ldrsw	x1, [x24, #8]
   3c234:	mov	x0, x24
   3c238:	bl	c460 <mpfr_cmp_si_2exp@plt>
   3c23c:	mov	w23, w0
   3c240:	ldr	w0, [x25, #4]
   3c244:	cbnz	w23, 3c3c4 <mpfr_pow_z@@Base+0x330>
   3c248:	cmp	w0, #0x0
   3c24c:	ldr	x0, [x25, #8]
   3c250:	cset	w1, ne  // ne = any
   3c254:	ldr	x27, [x24, #16]
   3c258:	ldr	x0, [x0]
   3c25c:	tst	w1, w0
   3c260:	b.eq	3c374 <mpfr_pow_z@@Base+0x2e0>  // b.none
   3c264:	ldrsw	x1, [x24, #8]
   3c268:	mov	w3, w20
   3c26c:	mov	x2, #0x0                   	// #0
   3c270:	add	x26, sp, #0xc0
   3c274:	mov	x0, x19
   3c278:	bl	bb00 <mpfr_set_si_2exp@plt>
   3c27c:	mov	x0, x26
   3c280:	bl	c010 <mpfr_mpz_init@plt>
   3c284:	sub	x2, x27, #0x1
   3c288:	mov	x1, x25
   3c28c:	mov	x0, x26
   3c290:	bl	c710 <__gmpz_mul_si@plt>
   3c294:	mov	x1, x26
   3c298:	mov	x0, x26
   3c29c:	mov	x2, #0x1                   	// #1
   3c2a0:	bl	c3f0 <__gmpz_add_ui@plt>
   3c2a4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3c2a8:	ldr	x1, [x0, #2528]
   3c2ac:	add	x0, x0, #0x9e0
   3c2b0:	blr	x1
   3c2b4:	ldr	x1, [x21, x0]
   3c2b8:	mov	x0, x26
   3c2bc:	bl	c890 <__gmpz_cmp_si@plt>
   3c2c0:	tbz	w0, #31, 3c37c <mpfr_pow_z@@Base+0x2e8>
   3c2c4:	ldr	w2, [x19, #8]
   3c2c8:	cmp	w20, #0x0
   3c2cc:	csinc	w20, w20, wzr, ne  // ne = any
   3c2d0:	mov	x0, x19
   3c2d4:	mov	w1, w20
   3c2d8:	bl	c450 <mpfr_underflow@plt>
   3c2dc:	mov	w23, w0
   3c2e0:	mov	x0, x26
   3c2e4:	bl	c200 <mpfr_mpz_clear@plt>
   3c2e8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3c2ec:	ldr	x1, [x0, #2592]
   3c2f0:	add	x0, x0, #0xa20
   3c2f4:	blr	x1
   3c2f8:	ldr	w0, [x21, x0]
   3c2fc:	orr	w22, w22, w0
   3c300:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3c304:	ldr	x1, [x0, #2592]
   3c308:	add	x0, x0, #0xa20
   3c30c:	blr	x1
   3c310:	add	x1, x21, x0
   3c314:	str	w22, [x21, x0]
   3c318:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3c31c:	ldr	x2, [x0, #2528]
   3c320:	add	x0, x0, #0x9e0
   3c324:	blr	x2
   3c328:	ldr	x2, [sp, #96]
   3c32c:	str	x2, [x21, x0]
   3c330:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3c334:	ldr	x2, [x0, #2560]
   3c338:	add	x0, x0, #0xa00
   3c33c:	blr	x2
   3c340:	ldr	x2, [sp, #104]
   3c344:	str	x2, [x21, x0]
   3c348:	ldr	x0, [x19, #16]
   3c34c:	ldr	x2, [sp, #96]
   3c350:	cmp	x2, x0
   3c354:	b.gt	3c744 <mpfr_pow_z@@Base+0x6b0>
   3c358:	ldr	x2, [sp, #104]
   3c35c:	cmp	x2, x0
   3c360:	b.lt	3c744 <mpfr_pow_z@@Base+0x6b0>  // b.tstop
   3c364:	cbz	w23, 3c124 <mpfr_pow_z@@Base+0x90>
   3c368:	orr	w22, w22, #0x8
   3c36c:	str	w22, [x1]
   3c370:	b	3c124 <mpfr_pow_z@@Base+0x90>
   3c374:	mov	x1, #0x1                   	// #1
   3c378:	b	3c268 <mpfr_pow_z@@Base+0x1d4>
   3c37c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3c380:	ldr	x1, [x0, #2560]
   3c384:	add	x0, x0, #0xa00
   3c388:	blr	x1
   3c38c:	ldr	x1, [x21, x0]
   3c390:	mov	x0, x26
   3c394:	bl	c890 <__gmpz_cmp_si@plt>
   3c398:	cmp	w0, #0x0
   3c39c:	b.le	3c3b4 <mpfr_pow_z@@Base+0x320>
   3c3a0:	ldr	w2, [x19, #8]
   3c3a4:	mov	w1, w20
   3c3a8:	mov	x0, x19
   3c3ac:	bl	bfc0 <mpfr_overflow@plt>
   3c3b0:	b	3c2dc <mpfr_pow_z@@Base+0x248>
   3c3b4:	mov	x0, x26
   3c3b8:	bl	baa0 <__gmpz_get_si@plt>
   3c3bc:	str	x0, [x19, #16]
   3c3c0:	b	3c2e0 <mpfr_pow_z@@Base+0x24c>
   3c3c4:	cmp	w0, #0x0
   3c3c8:	b.le	3c3f0 <mpfr_pow_z@@Base+0x35c>
   3c3cc:	mov	w3, w20
   3c3d0:	mov	x2, x25
   3c3d4:	mov	x1, x24
   3c3d8:	mov	x0, x19
   3c3dc:	mov	w4, #0x1                   	// #1
   3c3e0:	bl	3bc54 <mpfr_strtofr@@Base+0x570>
   3c3e4:	mov	w23, w0
   3c3e8:	ldr	w0, [x26]
   3c3ec:	b	3c2fc <mpfr_pow_z@@Base+0x268>
   3c3f0:	neg	w0, w0
   3c3f4:	mov	x1, #0xfffffffffffffff8    	// #-8
   3c3f8:	ldr	x2, [x25, #8]
   3c3fc:	add	x1, x1, w0, sxtw #3
   3c400:	sbfiz	x0, x0, #6, #32
   3c404:	ldr	x1, [x2, x1]
   3c408:	clz	x1, x1
   3c40c:	sub	x0, x0, x1
   3c410:	str	x0, [sp, #120]
   3c414:	ldr	x0, [x19]
   3c418:	ldr	x1, [sp, #120]
   3c41c:	cmp	x0, #0x1
   3c420:	add	x23, x1, x0
   3c424:	add	x23, x23, #0x3
   3c428:	b.eq	3c544 <mpfr_pow_z@@Base+0x4b0>  // b.none
   3c42c:	b.gt	3c448 <mpfr_pow_z@@Base+0x3b4>
   3c430:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   3c434:	add	x2, x2, #0x2a9
   3c438:	mov	w1, #0x118                 	// #280
   3c43c:	adrp	x0, 5a000 <mpfr_bases@@Base+0x2a8>
   3c440:	add	x0, x0, #0xabc
   3c444:	bl	cbd0 <mpfr_assert_fail@plt>
   3c448:	sub	x0, x0, #0x1
   3c44c:	mov	w1, #0x40                  	// #64
   3c450:	clz	x0, x0
   3c454:	sub	w0, w1, w0
   3c458:	sxtw	x0, w0
   3c45c:	add	x23, x23, x0
   3c460:	add	x28, sp, #0x80
   3c464:	mov	x0, x28
   3c468:	mov	x1, x23
   3c46c:	bl	cb10 <mpfr_init2@plt>
   3c470:	ldr	x0, [x24, #16]
   3c474:	cmp	x0, #0x0
   3c478:	b.le	3c54c <mpfr_pow_z@@Base+0x4b8>
   3c47c:	ldr	w0, [x24, #8]
   3c480:	cmp	w0, #0x0
   3c484:	cset	w26, le
   3c488:	add	w0, w26, #0x2
   3c48c:	mov	x26, #0x40                  	// #64
   3c490:	str	w0, [sp, #116]
   3c494:	ldr	w3, [sp, #116]
   3c498:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3c49c:	ldr	x1, [x0, #2592]
   3c4a0:	add	x0, x0, #0xa20
   3c4a4:	blr	x1
   3c4a8:	add	x27, x21, x0
   3c4ac:	mov	x2, x24
   3c4b0:	mov	x1, #0x1                   	// #1
   3c4b4:	str	wzr, [x21, x0]
   3c4b8:	mov	x0, x28
   3c4bc:	bl	c380 <mpfr_ui_div@plt>
   3c4c0:	ldr	w0, [x27]
   3c4c4:	tbz	w0, #1, 3c554 <mpfr_pow_z@@Base+0x4c0>
   3c4c8:	mov	x0, x28
   3c4cc:	bl	c0f0 <mpfr_clear@plt>
   3c4d0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3c4d4:	ldr	x1, [x0, #2592]
   3c4d8:	add	x0, x0, #0xa20
   3c4dc:	blr	x1
   3c4e0:	str	w22, [x21, x0]
   3c4e4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3c4e8:	ldr	x1, [x0, #2528]
   3c4ec:	add	x0, x0, #0x9e0
   3c4f0:	blr	x1
   3c4f4:	ldr	x1, [sp, #96]
   3c4f8:	str	x1, [x21, x0]
   3c4fc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3c500:	ldr	x1, [x0, #2560]
   3c504:	add	x0, x0, #0xa00
   3c508:	blr	x1
   3c50c:	ldr	x1, [sp, #104]
   3c510:	str	x1, [x21, x0]
   3c514:	ldr	w0, [x25, #4]
   3c518:	cmp	w0, #0x0
   3c51c:	ldr	x0, [x25, #8]
   3c520:	cset	w1, ne  // ne = any
   3c524:	ldr	x0, [x0]
   3c528:	tst	w1, w0
   3c52c:	b.ne	3c5e0 <mpfr_pow_z@@Base+0x54c>  // b.any
   3c530:	mov	w2, #0x1                   	// #1
   3c534:	mov	w1, w20
   3c538:	mov	x0, x19
   3c53c:	bl	bfc0 <mpfr_overflow@plt>
   3c540:	b	3c0c8 <mpfr_pow_z@@Base+0x34>
   3c544:	mov	x0, #0x0                   	// #0
   3c548:	b	3c45c <mpfr_pow_z@@Base+0x3c8>
   3c54c:	mov	w0, #0x1                   	// #1
   3c550:	b	3c48c <mpfr_pow_z@@Base+0x3f8>
   3c554:	mov	w3, w20
   3c558:	mov	x2, x25
   3c55c:	mov	x1, x28
   3c560:	mov	x0, x28
   3c564:	mov	w4, #0x0                   	// #0
   3c568:	str	wzr, [x27]
   3c56c:	bl	3bc54 <mpfr_strtofr@@Base+0x570>
   3c570:	ldr	w0, [x27]
   3c574:	tbnz	w0, #1, 3c4c8 <mpfr_pow_z@@Base+0x434>
   3c578:	tbz	w0, #0, 3c6a0 <mpfr_pow_z@@Base+0x60c>
   3c57c:	mov	x0, x28
   3c580:	bl	c0f0 <mpfr_clear@plt>
   3c584:	cbnz	w20, 3c634 <mpfr_pow_z@@Base+0x5a0>
   3c588:	add	x26, sp, #0xa0
   3c58c:	mov	x1, #0x2                   	// #2
   3c590:	mov	x0, x26
   3c594:	bl	cb10 <mpfr_init2@plt>
   3c598:	ldr	w1, [x25, #4]
   3c59c:	add	x27, sp, #0xc0
   3c5a0:	mov	x0, x27
   3c5a4:	cmp	w1, #0x0
   3c5a8:	cneg	w1, w1, lt  // lt = tstop
   3c5ac:	lsl	w1, w1, #6
   3c5b0:	sxtw	x1, w1
   3c5b4:	bl	cb10 <mpfr_init2@plt>
   3c5b8:	mov	x1, x25
   3c5bc:	mov	x0, x27
   3c5c0:	mov	w2, #0x0                   	// #0
   3c5c4:	bl	c2d0 <mpfr_set_z@plt>
   3c5c8:	mov	w20, w0
   3c5cc:	cbz	w0, 3c5e8 <mpfr_pow_z@@Base+0x554>
   3c5d0:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   3c5d4:	mov	w1, #0x155                 	// #341
   3c5d8:	add	x2, x2, #0xfd9
   3c5dc:	b	3c43c <mpfr_pow_z@@Base+0x3a8>
   3c5e0:	ldr	w2, [x24, #8]
   3c5e4:	b	3c534 <mpfr_pow_z@@Base+0x4a0>
   3c5e8:	mov	x2, x27
   3c5ec:	mov	x1, x24
   3c5f0:	mov	x5, #0x0                   	// #0
   3c5f4:	mov	w4, #0x1                   	// #1
   3c5f8:	mov	w3, #0x0                   	// #0
   3c5fc:	mov	x0, x26
   3c600:	bl	c780 <mpfr_pow_general@plt>
   3c604:	mov	w23, w0
   3c608:	mov	x0, x27
   3c60c:	bl	c0f0 <mpfr_clear@plt>
   3c610:	ldr	w3, [sp, #168]
   3c614:	mov	x1, x26
   3c618:	mov	w2, #0x0                   	// #0
   3c61c:	mov	x0, x19
   3c620:	orr	w22, w22, #0x1
   3c624:	bl	c730 <mpfr_set4@plt>
   3c628:	mov	x0, x26
   3c62c:	bl	c0f0 <mpfr_clear@plt>
   3c630:	b	3c300 <mpfr_pow_z@@Base+0x26c>
   3c634:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3c638:	ldr	x1, [x0, #2528]
   3c63c:	add	x0, x0, #0x9e0
   3c640:	blr	x1
   3c644:	ldr	x1, [sp, #96]
   3c648:	str	x1, [x21, x0]
   3c64c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3c650:	ldr	x1, [x0, #2560]
   3c654:	add	x0, x0, #0xa00
   3c658:	blr	x1
   3c65c:	ldr	x1, [sp, #104]
   3c660:	str	x1, [x21, x0]
   3c664:	ldr	w0, [x25, #4]
   3c668:	cmp	w0, #0x0
   3c66c:	ldr	x0, [x25, #8]
   3c670:	cset	w1, ne  // ne = any
   3c674:	ldr	x0, [x0]
   3c678:	str	w22, [x27]
   3c67c:	tst	w1, w0
   3c680:	b.eq	3c698 <mpfr_pow_z@@Base+0x604>  // b.none
   3c684:	ldr	w2, [x24, #8]
   3c688:	mov	w1, w20
   3c68c:	mov	x0, x19
   3c690:	bl	c450 <mpfr_underflow@plt>
   3c694:	b	3c0c8 <mpfr_pow_z@@Base+0x34>
   3c698:	mov	w2, #0x1                   	// #1
   3c69c:	b	3c688 <mpfr_pow_z@@Base+0x5f4>
   3c6a0:	ldr	x0, [sp, #144]
   3c6a4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   3c6a8:	cmp	x0, x1
   3c6ac:	b.gt	3c6d4 <mpfr_pow_z@@Base+0x640>
   3c6b0:	mov	x0, #0xfffffffffffffeff    	// #-257
   3c6b4:	movk	x0, #0x7fff, lsl #48
   3c6b8:	sub	x0, x0, x23
   3c6bc:	cmp	x0, x26
   3c6c0:	b.ge	3c728 <mpfr_pow_z@@Base+0x694>  // b.tcont
   3c6c4:	adrp	x2, 54000 <mpfr_free_pool@@Base+0x2eec>
   3c6c8:	mov	w1, #0x169                 	// #361
   3c6cc:	add	x2, x2, #0xa35
   3c6d0:	b	3c43c <mpfr_pow_z@@Base+0x3a8>
   3c6d4:	ldp	x0, x1, [sp, #120]
   3c6d8:	cmp	w20, #0x0
   3c6dc:	ldr	x3, [x19]
   3c6e0:	cinc	x3, x3, eq  // eq = none
   3c6e4:	sub	x2, x23, x0
   3c6e8:	sub	x1, x1, #0x1
   3c6ec:	ldr	x0, [sp, #152]
   3c6f0:	asr	x1, x1, #6
   3c6f4:	sub	x2, x2, #0x2
   3c6f8:	add	x1, x1, #0x1
   3c6fc:	bl	c400 <mpfr_round_p@plt>
   3c700:	cbz	w0, 3c6b0 <mpfr_pow_z@@Base+0x61c>
   3c704:	ldr	w3, [sp, #136]
   3c708:	mov	w2, w20
   3c70c:	mov	x1, x28
   3c710:	mov	x0, x19
   3c714:	bl	c730 <mpfr_set4@plt>
   3c718:	mov	w23, w0
   3c71c:	mov	x0, x28
   3c720:	bl	c0f0 <mpfr_clear@plt>
   3c724:	b	3c300 <mpfr_pow_z@@Base+0x26c>
   3c728:	add	x23, x23, x26
   3c72c:	mov	x0, #0x2                   	// #2
   3c730:	mov	x1, x23
   3c734:	sdiv	x26, x23, x0
   3c738:	mov	x0, x28
   3c73c:	bl	bf50 <mpfr_set_prec@plt>
   3c740:	b	3c494 <mpfr_pow_z@@Base+0x400>
   3c744:	mov	w2, w20
   3c748:	mov	w1, w23
   3c74c:	mov	x0, x19
   3c750:	bl	cbc0 <mpfr_check_range@plt>
   3c754:	b	3c0c8 <mpfr_pow_z@@Base+0x34>
   3c758:	stp	x29, x30, [sp, #-64]!
   3c75c:	lsl	x4, x3, #3
   3c760:	sub	x5, x4, #0x8
   3c764:	mov	x29, sp
   3c768:	stp	x19, x20, [sp, #16]
   3c76c:	mov	x20, x2
   3c770:	mov	x19, #0x1                   	// #1
   3c774:	stp	x21, x22, [sp, #32]
   3c778:	mov	x21, x3
   3c77c:	add	x22, x0, x5
   3c780:	ldr	x3, [x1, x5]
   3c784:	add	x1, x1, x4
   3c788:	ldr	x2, [x20], #-8
   3c78c:	str	x23, [sp, #48]
   3c790:	umulh	x6, x3, x2
   3c794:	str	x6, [x0, x4]
   3c798:	mul	x3, x3, x2
   3c79c:	str	x3, [x0, x5]
   3c7a0:	sub	x23, x1, #0x8
   3c7a4:	cmp	x19, x21
   3c7a8:	b.lt	3c7c0 <mpfr_pow_z@@Base+0x72c>  // b.tstop
   3c7ac:	ldp	x19, x20, [sp, #16]
   3c7b0:	ldp	x21, x22, [sp, #32]
   3c7b4:	ldr	x23, [sp, #48]
   3c7b8:	ldp	x29, x30, [sp], #64
   3c7bc:	ret
   3c7c0:	add	x19, x19, #0x1
   3c7c4:	sub	x1, x1, #0x10
   3c7c8:	mov	x2, x19
   3c7cc:	mov	x0, x22
   3c7d0:	ldr	x3, [x20, x19, lsl #3]
   3c7d4:	bl	cd70 <__gmpn_addmul_1@plt>
   3c7d8:	str	x0, [x22, x19, lsl #3]
   3c7dc:	mov	x1, x23
   3c7e0:	b	3c7a0 <mpfr_pow_z@@Base+0x70c>

000000000003c7e4 <mpfr_mulhigh_n@@Base>:
   3c7e4:	stp	x29, x30, [sp, #-112]!
   3c7e8:	cmp	x3, #0x10
   3c7ec:	mov	x29, sp
   3c7f0:	stp	x19, x20, [sp, #16]
   3c7f4:	mov	x20, x0
   3c7f8:	mov	x19, x3
   3c7fc:	stp	x21, x22, [sp, #32]
   3c800:	stp	x23, x24, [sp, #48]
   3c804:	mov	x24, x1
   3c808:	stp	x25, x26, [sp, #64]
   3c80c:	mov	x25, x2
   3c810:	stp	x27, x28, [sp, #80]
   3c814:	b.hi	3c85c <mpfr_mulhigh_n@@Base+0x78>  // b.pmore
   3c818:	adrp	x0, 5a000 <mpfr_bases@@Base+0x2a8>
   3c81c:	add	x0, x0, #0xac4
   3c820:	ldrsh	x21, [x0, x3, lsl #1]
   3c824:	cmp	x21, #0x0
   3c828:	b.ge	3c86c <mpfr_mulhigh_n@@Base+0x88>  // b.tcont
   3c82c:	mov	x4, x19
   3c830:	mov	x3, x25
   3c834:	mov	x2, x19
   3c838:	mov	x1, x24
   3c83c:	mov	x0, x20
   3c840:	ldp	x19, x20, [sp, #16]
   3c844:	ldp	x21, x22, [sp, #32]
   3c848:	ldp	x23, x24, [sp, #48]
   3c84c:	ldp	x25, x26, [sp, #64]
   3c850:	ldp	x27, x28, [sp, #80]
   3c854:	ldp	x29, x30, [sp], #112
   3c858:	b	c830 <__gmpn_mul@plt>
   3c85c:	mov	x21, #0x4                   	// #4
   3c860:	sdiv	x21, x3, x21
   3c864:	add	x21, x21, x21, lsl #1
   3c868:	b	3c824 <mpfr_mulhigh_n@@Base+0x40>
   3c86c:	b.ne	3c89c <mpfr_mulhigh_n@@Base+0xb8>  // b.any
   3c870:	mov	x3, x19
   3c874:	mov	x2, x25
   3c878:	mov	x1, x24
   3c87c:	mov	x0, x20
   3c880:	ldp	x19, x20, [sp, #16]
   3c884:	ldp	x21, x22, [sp, #32]
   3c888:	ldp	x23, x24, [sp, #48]
   3c88c:	ldp	x25, x26, [sp, #64]
   3c890:	ldp	x27, x28, [sp, #80]
   3c894:	ldp	x29, x30, [sp], #112
   3c898:	b	3c758 <mpfr_pow_z@@Base+0x6c4>
   3c89c:	mov	x0, #0x2100                	// #8448
   3c8a0:	cmp	x19, x0
   3c8a4:	b.le	3c8d4 <mpfr_mulhigh_n@@Base+0xf0>
   3c8a8:	mov	x3, x19
   3c8ac:	mov	x2, x25
   3c8b0:	mov	x1, x24
   3c8b4:	mov	x0, x20
   3c8b8:	ldp	x19, x20, [sp, #16]
   3c8bc:	ldp	x21, x22, [sp, #32]
   3c8c0:	ldp	x23, x24, [sp, #48]
   3c8c4:	ldp	x25, x26, [sp, #64]
   3c8c8:	ldp	x27, x28, [sp, #80]
   3c8cc:	ldp	x29, x30, [sp], #112
   3c8d0:	b	c500 <__gmpn_mul_n@plt>
   3c8d4:	sub	x23, x19, x21
   3c8d8:	mov	x3, x21
   3c8dc:	add	x27, x20, x19, lsl #3
   3c8e0:	lsl	x28, x21, #3
   3c8e4:	add	x2, x25, x23, lsl #3
   3c8e8:	add	x1, x24, x23, lsl #3
   3c8ec:	add	x0, x20, x23, lsl #4
   3c8f0:	bl	c500 <__gmpn_mul_n@plt>
   3c8f4:	mov	x3, x23
   3c8f8:	mov	x2, x25
   3c8fc:	add	x1, x24, x21, lsl #3
   3c900:	mov	x0, x20
   3c904:	bl	3c7e4 <mpfr_mulhigh_n@@Base>
   3c908:	lsl	x26, x23, #3
   3c90c:	add	x4, x23, #0x1
   3c910:	sub	x26, x26, #0x8
   3c914:	sub	x27, x27, #0x8
   3c918:	add	x26, x20, x26
   3c91c:	mov	x3, x4
   3c920:	mov	x2, x26
   3c924:	mov	x1, x27
   3c928:	mov	x0, x27
   3c92c:	str	x4, [sp, #104]
   3c930:	bl	c630 <__gmpn_add_n@plt>
   3c934:	mov	x3, x23
   3c938:	mov	x22, x0
   3c93c:	add	x2, x25, x28
   3c940:	mov	x1, x24
   3c944:	mov	x0, x20
   3c948:	bl	3c7e4 <mpfr_mulhigh_n@@Base>
   3c94c:	ldr	x4, [sp, #104]
   3c950:	add	x19, x19, x23
   3c954:	mov	x2, x26
   3c958:	mov	x1, x27
   3c95c:	mov	x0, x27
   3c960:	mov	x3, x4
   3c964:	bl	c630 <__gmpn_add_n@plt>
   3c968:	add	x0, x22, x0
   3c96c:	lsl	x1, x19, #3
   3c970:	add	x19, x20, x19, lsl #3
   3c974:	ldr	x2, [x20, x1]
   3c978:	adds	x0, x0, x2
   3c97c:	str	x0, [x20, x1]
   3c980:	b.cs	3c9c0 <mpfr_mulhigh_n@@Base+0x1dc>  // b.hs, b.nlast
   3c984:	ldp	x19, x20, [sp, #16]
   3c988:	ldp	x21, x22, [sp, #32]
   3c98c:	ldp	x23, x24, [sp, #48]
   3c990:	ldp	x25, x26, [sp, #64]
   3c994:	ldp	x27, x28, [sp, #80]
   3c998:	ldp	x29, x30, [sp], #112
   3c99c:	ret
   3c9a0:	ldr	x1, [x19, x0, lsl #3]
   3c9a4:	add	x1, x1, #0x1
   3c9a8:	str	x1, [x19, x0, lsl #3]
   3c9ac:	add	x0, x0, #0x1
   3c9b0:	cbnz	x1, 3c984 <mpfr_mulhigh_n@@Base+0x1a0>
   3c9b4:	cmp	x21, x0
   3c9b8:	b.gt	3c9a0 <mpfr_mulhigh_n@@Base+0x1bc>
   3c9bc:	b	3c984 <mpfr_mulhigh_n@@Base+0x1a0>
   3c9c0:	mov	x0, #0x1                   	// #1
   3c9c4:	b	3c9b4 <mpfr_mulhigh_n@@Base+0x1d0>

000000000003c9c8 <mpfr_sqrhigh_n@@Base>:
   3c9c8:	stp	x29, x30, [sp, #-80]!
   3c9cc:	cmp	x2, #0x10
   3c9d0:	mov	x29, sp
   3c9d4:	stp	x19, x20, [sp, #16]
   3c9d8:	mov	x20, x0
   3c9dc:	mov	x19, x2
   3c9e0:	stp	x21, x22, [sp, #32]
   3c9e4:	mov	x21, x1
   3c9e8:	stp	x23, x24, [sp, #48]
   3c9ec:	str	x25, [sp, #64]
   3c9f0:	b.hi	3ca2c <mpfr_sqrhigh_n@@Base+0x64>  // b.pmore
   3c9f4:	adrp	x0, 5a000 <mpfr_bases@@Base+0x2a8>
   3c9f8:	add	x0, x0, #0xac4
   3c9fc:	ldrsh	x22, [x0, x2, lsl #1]
   3ca00:	cmp	x22, #0x0
   3ca04:	b.ge	3ca3c <mpfr_sqrhigh_n@@Base+0x74>  // b.tcont
   3ca08:	mov	x2, x19
   3ca0c:	mov	x1, x21
   3ca10:	mov	x0, x20
   3ca14:	ldp	x19, x20, [sp, #16]
   3ca18:	ldp	x21, x22, [sp, #32]
   3ca1c:	ldp	x23, x24, [sp, #48]
   3ca20:	ldr	x25, [sp, #64]
   3ca24:	ldp	x29, x30, [sp], #80
   3ca28:	b	c440 <__gmpn_sqr@plt>
   3ca2c:	add	x22, x2, #0x4
   3ca30:	mov	x0, #0x2                   	// #2
   3ca34:	sdiv	x22, x22, x0
   3ca38:	b	3ca00 <mpfr_sqrhigh_n@@Base+0x38>
   3ca3c:	b.ne	3ca68 <mpfr_sqrhigh_n@@Base+0xa0>  // b.any
   3ca40:	mov	x3, x19
   3ca44:	mov	x2, x21
   3ca48:	mov	x1, x21
   3ca4c:	mov	x0, x20
   3ca50:	ldp	x19, x20, [sp, #16]
   3ca54:	ldp	x21, x22, [sp, #32]
   3ca58:	ldp	x23, x24, [sp, #48]
   3ca5c:	ldr	x25, [sp, #64]
   3ca60:	ldp	x29, x30, [sp], #80
   3ca64:	b	3c758 <mpfr_pow_z@@Base+0x6c4>
   3ca68:	sub	x24, x19, x22
   3ca6c:	mov	x2, x22
   3ca70:	add	x25, x24, #0x1
   3ca74:	lsl	x23, x24, #3
   3ca78:	add	x1, x21, x24, lsl #3
   3ca7c:	add	x0, x20, x24, lsl #4
   3ca80:	sub	x23, x23, #0x8
   3ca84:	bl	c440 <__gmpn_sqr@plt>
   3ca88:	add	x23, x20, x23
   3ca8c:	add	x2, x21, x22, lsl #3
   3ca90:	mov	x1, x21
   3ca94:	mov	x3, x24
   3ca98:	mov	x0, x20
   3ca9c:	bl	bd00 <mpfr_mulhigh_n@plt>
   3caa0:	mov	x2, x25
   3caa4:	mov	x1, x23
   3caa8:	mov	w3, #0x1                   	// #1
   3caac:	mov	x0, x23
   3cab0:	bl	bd40 <__gmpn_lshift@plt>
   3cab4:	mov	x21, x0
   3cab8:	add	x1, x20, x19, lsl #3
   3cabc:	add	x19, x19, x24
   3cac0:	sub	x1, x1, #0x8
   3cac4:	mov	x2, x23
   3cac8:	mov	x0, x1
   3cacc:	mov	x3, x25
   3cad0:	bl	c630 <__gmpn_add_n@plt>
   3cad4:	add	x0, x21, x0
   3cad8:	lsl	x1, x19, #3
   3cadc:	add	x19, x20, x19, lsl #3
   3cae0:	ldr	x2, [x20, x1]
   3cae4:	adds	x0, x0, x2
   3cae8:	str	x0, [x20, x1]
   3caec:	b.cs	3cb28 <mpfr_sqrhigh_n@@Base+0x160>  // b.hs, b.nlast
   3caf0:	ldp	x19, x20, [sp, #16]
   3caf4:	ldp	x21, x22, [sp, #32]
   3caf8:	ldp	x23, x24, [sp, #48]
   3cafc:	ldr	x25, [sp, #64]
   3cb00:	ldp	x29, x30, [sp], #80
   3cb04:	ret
   3cb08:	ldr	x1, [x19, x0, lsl #3]
   3cb0c:	add	x1, x1, #0x1
   3cb10:	str	x1, [x19, x0, lsl #3]
   3cb14:	add	x0, x0, #0x1
   3cb18:	cbnz	x1, 3caf0 <mpfr_sqrhigh_n@@Base+0x128>
   3cb1c:	cmp	x22, x0
   3cb20:	b.gt	3cb08 <mpfr_sqrhigh_n@@Base+0x140>
   3cb24:	b	3caf0 <mpfr_sqrhigh_n@@Base+0x128>
   3cb28:	mov	x0, #0x1                   	// #1
   3cb2c:	b	3cb1c <mpfr_sqrhigh_n@@Base+0x154>

000000000003cb30 <mpfr_divhigh_n@@Base>:
   3cb30:	stp	x29, x30, [sp, #-128]!
   3cb34:	cmp	x3, #0x10
   3cb38:	mov	x29, sp
   3cb3c:	stp	x19, x20, [sp, #16]
   3cb40:	mov	x20, x0
   3cb44:	stp	x21, x22, [sp, #32]
   3cb48:	mov	x21, x1
   3cb4c:	stp	x23, x24, [sp, #48]
   3cb50:	mov	x24, x3
   3cb54:	stp	x25, x26, [sp, #64]
   3cb58:	mov	x26, x2
   3cb5c:	stp	x27, x28, [sp, #80]
   3cb60:	b.hi	3cba8 <mpfr_divhigh_n@@Base+0x78>  // b.pmore
   3cb64:	adrp	x0, 5a000 <mpfr_bases@@Base+0x2a8>
   3cb68:	add	x0, x0, #0xac4
   3cb6c:	add	x0, x0, #0x22
   3cb70:	ldrsh	x22, [x0, x3, lsl #1]
   3cb74:	cbnz	x22, 3ce8c <mpfr_divhigh_n@@Base+0x35c>
   3cb78:	lsl	x22, x24, #3
   3cb7c:	add	x25, x21, x24, lsl #3
   3cb80:	mov	x0, x24
   3cb84:	subs	x0, x0, #0x1
   3cb88:	b.pl	3cbb8 <mpfr_divhigh_n@@Base+0x88>  // b.nfrst
   3cb8c:	mov	x3, x24
   3cb90:	mov	x2, x26
   3cb94:	mov	x1, x25
   3cb98:	mov	x0, x25
   3cb9c:	mov	x19, #0x1                   	// #1
   3cba0:	bl	bee0 <__gmpn_sub_n@plt>
   3cba4:	b	3cbd0 <mpfr_divhigh_n@@Base+0xa0>
   3cba8:	mov	x22, #0x3                   	// #3
   3cbac:	sdiv	x22, x3, x22
   3cbb0:	lsl	x22, x22, #1
   3cbb4:	b	3cb74 <mpfr_divhigh_n@@Base+0x44>
   3cbb8:	ldr	x2, [x25, x0, lsl #3]
   3cbbc:	ldr	x1, [x26, x0, lsl #3]
   3cbc0:	cmp	x2, x1
   3cbc4:	b.eq	3cb84 <mpfr_divhigh_n@@Base+0x54>  // b.none
   3cbc8:	b.hi	3cb8c <mpfr_divhigh_n@@Base+0x5c>  // b.pmore
   3cbcc:	mov	x19, #0x0                   	// #0
   3cbd0:	add	x1, x26, x22
   3cbd4:	cmp	x24, #0x1
   3cbd8:	ldur	x23, [x1, #-8]
   3cbdc:	mvn	x5, x23
   3cbe0:	and	x0, x23, #0xffffffff
   3cbe4:	lsr	x3, x23, #32
   3cbe8:	b.ne	3cca4 <mpfr_divhigh_n@@Base+0x174>  // b.any
   3cbec:	udiv	x4, x5, x3
   3cbf0:	msub	x5, x4, x3, x5
   3cbf4:	mul	x6, x0, x4
   3cbf8:	lsl	x5, x5, #32
   3cbfc:	orr	x2, x5, #0xffffffff
   3cc00:	cmp	x6, x2
   3cc04:	b.ls	3cc94 <mpfr_divhigh_n@@Base+0x164>  // b.plast
   3cc08:	sub	x1, x4, #0x1
   3cc0c:	adds	x2, x23, x2
   3cc10:	b.cs	3cc24 <mpfr_divhigh_n@@Base+0xf4>  // b.hs, b.nlast
   3cc14:	cmp	x6, x2
   3cc18:	b.ls	3cc24 <mpfr_divhigh_n@@Base+0xf4>  // b.plast
   3cc1c:	sub	x1, x4, #0x2
   3cc20:	add	x2, x2, x23
   3cc24:	sub	x2, x2, x6
   3cc28:	udiv	x4, x2, x3
   3cc2c:	msub	x2, x4, x3, x2
   3cc30:	mul	x0, x0, x4
   3cc34:	lsl	x2, x2, #32
   3cc38:	orr	x2, x2, #0xffffffff
   3cc3c:	cmp	x0, x2
   3cc40:	b.ls	3cc9c <mpfr_divhigh_n@@Base+0x16c>  // b.plast
   3cc44:	sub	x3, x4, #0x1
   3cc48:	adds	x2, x23, x2
   3cc4c:	b.cs	3cc5c <mpfr_divhigh_n@@Base+0x12c>  // b.hs, b.nlast
   3cc50:	cmp	x0, x2
   3cc54:	b.ls	3cc5c <mpfr_divhigh_n@@Base+0x12c>  // b.plast
   3cc58:	sub	x3, x4, #0x2
   3cc5c:	ldr	x0, [x21, x22]
   3cc60:	orr	x1, x3, x1, lsl #32
   3cc64:	umulh	x1, x0, x1
   3cc68:	add	x1, x0, x1
   3cc6c:	str	x1, [x20]
   3cc70:	mov	sp, x29
   3cc74:	mov	x0, x19
   3cc78:	ldp	x19, x20, [sp, #16]
   3cc7c:	ldp	x21, x22, [sp, #32]
   3cc80:	ldp	x23, x24, [sp, #48]
   3cc84:	ldp	x25, x26, [sp, #64]
   3cc88:	ldp	x27, x28, [sp, #80]
   3cc8c:	ldp	x29, x30, [sp], #128
   3cc90:	ret
   3cc94:	mov	x1, x4
   3cc98:	b	3cc24 <mpfr_divhigh_n@@Base+0xf4>
   3cc9c:	mov	x3, x4
   3cca0:	b	3cc5c <mpfr_divhigh_n@@Base+0x12c>
   3cca4:	ldur	x27, [x1, #-16]
   3cca8:	udiv	x1, x5, x3
   3ccac:	msub	x5, x1, x3, x5
   3ccb0:	mul	x6, x0, x1
   3ccb4:	lsl	x5, x5, #32
   3ccb8:	orr	x4, x5, #0xffffffff
   3ccbc:	cmp	x6, x4
   3ccc0:	b.ls	3cd7c <mpfr_divhigh_n@@Base+0x24c>  // b.plast
   3ccc4:	sub	x2, x1, #0x1
   3ccc8:	adds	x4, x23, x4
   3cccc:	b.cs	3cce0 <mpfr_divhigh_n@@Base+0x1b0>  // b.hs, b.nlast
   3ccd0:	cmp	x6, x4
   3ccd4:	b.ls	3cce0 <mpfr_divhigh_n@@Base+0x1b0>  // b.plast
   3ccd8:	sub	x2, x1, #0x2
   3ccdc:	add	x4, x4, x23
   3cce0:	sub	x4, x4, x6
   3cce4:	udiv	x1, x4, x3
   3cce8:	msub	x4, x1, x3, x4
   3ccec:	mul	x0, x0, x1
   3ccf0:	lsl	x4, x4, #32
   3ccf4:	orr	x4, x4, #0xffffffff
   3ccf8:	cmp	x0, x4
   3ccfc:	b.ls	3cd84 <mpfr_divhigh_n@@Base+0x254>  // b.plast
   3cd00:	sub	x3, x1, #0x1
   3cd04:	adds	x4, x23, x4
   3cd08:	b.cs	3cd18 <mpfr_divhigh_n@@Base+0x1e8>  // b.hs, b.nlast
   3cd0c:	cmp	x0, x4
   3cd10:	b.ls	3cd18 <mpfr_divhigh_n@@Base+0x1e8>  // b.plast
   3cd14:	sub	x3, x1, #0x2
   3cd18:	orr	x2, x3, x2, lsl #32
   3cd1c:	mul	x0, x23, x2
   3cd20:	adds	x0, x27, x0
   3cd24:	b.cc	3cd48 <mpfr_divhigh_n@@Base+0x218>  // b.lo, b.ul, b.last
   3cd28:	cmp	x23, x0
   3cd2c:	sub	x2, x2, #0x1
   3cd30:	cset	x1, ls  // ls = plast
   3cd34:	sub	x0, x0, x23
   3cd38:	sub	x2, x2, x1
   3cd3c:	neg	x1, x1
   3cd40:	and	x1, x1, x23
   3cd44:	sub	x0, x0, x1
   3cd48:	umulh	x1, x27, x2
   3cd4c:	adds	x0, x1, x0
   3cd50:	b.cs	3cd8c <mpfr_divhigh_n@@Base+0x25c>  // b.hs, b.nlast
   3cd54:	mov	x28, x2
   3cd58:	add	x4, x25, x22
   3cd5c:	sub	x5, x25, #0x8
   3cd60:	cmp	x24, #0x1
   3cd64:	b.gt	3cdb0 <mpfr_divhigh_n@@Base+0x280>
   3cd68:	ldr	x0, [x21, x22]
   3cd6c:	umulh	x2, x0, x28
   3cd70:	add	x2, x0, x2
   3cd74:	str	x2, [x20]
   3cd78:	b	3cc70 <mpfr_divhigh_n@@Base+0x140>
   3cd7c:	mov	x2, x1
   3cd80:	b	3cce0 <mpfr_divhigh_n@@Base+0x1b0>
   3cd84:	mov	x3, x1
   3cd88:	b	3cd18 <mpfr_divhigh_n@@Base+0x1e8>
   3cd8c:	sub	x28, x2, #0x1
   3cd90:	cmp	x23, x0
   3cd94:	b.hi	3cd58 <mpfr_divhigh_n@@Base+0x228>  // b.pmore
   3cd98:	mul	x1, x27, x2
   3cd9c:	sub	x2, x2, #0x2
   3cda0:	cmp	x27, x1
   3cda4:	ccmp	x23, x0, #0x0, hi  // hi = pmore
   3cda8:	csel	x28, x2, x28, cc  // cc = lo, ul, last
   3cdac:	b	3cd58 <mpfr_divhigh_n@@Base+0x228>
   3cdb0:	ldur	x0, [x4, #-8]
   3cdb4:	cmp	x23, x0
   3cdb8:	b.cc	3ce84 <mpfr_divhigh_n@@Base+0x354>  // b.lo, b.ul, b.last
   3cdbc:	ldur	x2, [x4, #-16]
   3cdc0:	b.ne	3cdcc <mpfr_divhigh_n@@Base+0x29c>  // b.any
   3cdc4:	cmp	x27, x2
   3cdc8:	b.ls	3ce84 <mpfr_divhigh_n@@Base+0x354>  // b.plast
   3cdcc:	mul	x1, x0, x28
   3cdd0:	umulh	x25, x0, x28
   3cdd4:	adds	x7, x1, x2
   3cdd8:	adc	x25, x25, x0
   3cddc:	mul	x6, x27, x25
   3cde0:	msub	x2, x23, x25, x2
   3cde4:	ldur	x0, [x4, #-24]
   3cde8:	subs	x1, x0, x27
   3cdec:	sbc	x2, x2, x23
   3cdf0:	umulh	x0, x27, x25
   3cdf4:	subs	x3, x1, x6
   3cdf8:	sbc	x2, x2, x0
   3cdfc:	cmp	x7, x2
   3ce00:	csetm	x0, ls  // ls = plast
   3ce04:	cinc	x25, x25, hi  // hi = pmore
   3ce08:	and	x1, x23, x0
   3ce0c:	and	x0, x27, x0
   3ce10:	adds	x6, x3, x0
   3ce14:	adc	x2, x2, x1
   3ce18:	cmp	x23, x2
   3ce1c:	b.hi	3ce2c <mpfr_divhigh_n@@Base+0x2fc>  // b.pmore
   3ce20:	ccmp	x27, x6, #0x0, cs  // cs = hs, nlast
   3ce24:	cset	x0, ls  // ls = plast
   3ce28:	add	x25, x25, x0
   3ce2c:	mov	x1, x26
   3ce30:	mov	x0, x5
   3ce34:	mov	x3, x25
   3ce38:	mov	x2, x24
   3ce3c:	stp	x4, x5, [x29, #96]
   3ce40:	bl	c550 <__gmpn_submul_1@plt>
   3ce44:	ldp	x4, x5, [x29, #96]
   3ce48:	ldur	x1, [x4, #-8]
   3ce4c:	cmp	x0, x1
   3ce50:	b.ls	3ce70 <mpfr_divhigh_n@@Base+0x340>  // b.plast
   3ce54:	mov	x1, x5
   3ce58:	mov	x0, x5
   3ce5c:	mov	x3, x24
   3ce60:	mov	x2, x26
   3ce64:	bl	c630 <__gmpn_add_n@plt>
   3ce68:	sub	x25, x25, #0x1
   3ce6c:	ldp	x4, x5, [x29, #96]
   3ce70:	sub	x24, x24, #0x1
   3ce74:	add	x26, x26, #0x8
   3ce78:	sub	x4, x4, #0x8
   3ce7c:	str	x25, [x20, x24, lsl #3]
   3ce80:	b	3cd60 <mpfr_divhigh_n@@Base+0x230>
   3ce84:	mov	x25, #0xffffffffffffffff    	// #-1
   3ce88:	b	3ce2c <mpfr_divhigh_n@@Base+0x2fc>
   3ce8c:	cmp	x22, x24
   3ce90:	lsl	x3, x22, #1
   3ce94:	b.ne	3ceb8 <mpfr_divhigh_n@@Base+0x388>  // b.any
   3ce98:	mov	x5, x22
   3ce9c:	mov	x4, x26
   3cea0:	mov	x2, x21
   3cea4:	mov	x0, x20
   3cea8:	mov	x1, #0x0                   	// #0
   3ceac:	bl	cd50 <__gmpn_divrem@plt>
   3ceb0:	mov	x19, x0
   3ceb4:	b	3cc70 <mpfr_divhigh_n@@Base+0x140>
   3ceb8:	sub	x25, x24, x22
   3cebc:	mov	x5, x22
   3cec0:	mov	x1, #0x0                   	// #0
   3cec4:	str	xzr, [x29, #120]
   3cec8:	add	x23, x20, x25, lsl #3
   3cecc:	add	x4, x26, x25, lsl #3
   3ced0:	add	x2, x21, x25, lsl #4
   3ced4:	mov	x0, x23
   3ced8:	bl	cd50 <__gmpn_divrem@plt>
   3cedc:	str	x0, [x29, #104]
   3cee0:	lsl	x28, x25, #4
   3cee4:	lsl	x27, x25, #3
   3cee8:	cmp	x28, #0x4, lsl #12
   3ceec:	b.hi	3cf50 <mpfr_divhigh_n@@Base+0x420>  // b.pmore
   3cef0:	sub	sp, sp, x28
   3cef4:	mov	x19, sp
   3cef8:	mov	x0, x19
   3cefc:	mov	x3, x25
   3cf00:	mov	x2, x26
   3cf04:	add	x1, x20, x22, lsl #3
   3cf08:	bl	bd00 <mpfr_mulhigh_n@plt>
   3cf0c:	lsl	x28, x22, #3
   3cf10:	add	x1, x21, x24, lsl #3
   3cf14:	add	x2, x19, x27
   3cf18:	mov	x0, x1
   3cf1c:	mov	x3, x25
   3cf20:	str	x1, [x29, #96]
   3cf24:	bl	bee0 <__gmpn_sub_n@plt>
   3cf28:	mov	x19, x0
   3cf2c:	ldp	x1, x0, [x29, #96]
   3cf30:	cbz	x0, 3cf48 <mpfr_divhigh_n@@Base+0x418>
   3cf34:	mov	x3, x25
   3cf38:	mov	x2, x26
   3cf3c:	mov	x0, x1
   3cf40:	bl	bee0 <__gmpn_sub_n@plt>
   3cf44:	add	x19, x19, x0
   3cf48:	add	x1, x21, x27
   3cf4c:	b	3cf9c <mpfr_divhigh_n@@Base+0x46c>
   3cf50:	mov	x1, x28
   3cf54:	add	x0, x29, #0x78
   3cf58:	bl	be40 <mpfr_tmp_allocate@plt>
   3cf5c:	mov	x19, x0
   3cf60:	b	3cef8 <mpfr_divhigh_n@@Base+0x3c8>
   3cf64:	ldr	x0, [x23]
   3cf68:	sub	x2, x0, #0x1
   3cf6c:	str	x2, [x23]
   3cf70:	cbz	x0, 3d000 <mpfr_divhigh_n@@Base+0x4d0>
   3cf74:	mov	x0, #0x0                   	// #0
   3cf78:	ldr	x2, [x29, #104]
   3cf7c:	mov	x3, x24
   3cf80:	sub	x0, x2, x0
   3cf84:	mov	x2, x26
   3cf88:	stp	x1, x0, [x29, #96]
   3cf8c:	mov	x0, x1
   3cf90:	bl	c630 <__gmpn_add_n@plt>
   3cf94:	ldr	x1, [x29, #96]
   3cf98:	sub	x19, x19, x0
   3cf9c:	cbnz	x19, 3cf64 <mpfr_divhigh_n@@Base+0x434>
   3cfa0:	add	x1, x21, x28
   3cfa4:	mov	x3, x25
   3cfa8:	add	x2, x26, x28
   3cfac:	mov	x0, x20
   3cfb0:	bl	3cb30 <mpfr_divhigh_n@@Base>
   3cfb4:	ldr	x1, [x20, x27]
   3cfb8:	adds	x0, x0, x1
   3cfbc:	str	x0, [x20, x27]
   3cfc0:	b.cs	3d02c <mpfr_divhigh_n@@Base+0x4fc>  // b.hs, b.nlast
   3cfc4:	ldr	x0, [x29, #104]
   3cfc8:	add	x19, x0, x19
   3cfcc:	ldr	x0, [x29, #120]
   3cfd0:	cbz	x0, 3cc70 <mpfr_divhigh_n@@Base+0x140>
   3cfd4:	bl	c4a0 <mpfr_tmp_free@plt>
   3cfd8:	b	3cc70 <mpfr_divhigh_n@@Base+0x140>
   3cfdc:	ldr	x2, [x23, x0, lsl #3]
   3cfe0:	sub	x3, x2, #0x1
   3cfe4:	str	x3, [x23, x0, lsl #3]
   3cfe8:	add	x0, x0, #0x1
   3cfec:	cbnz	x2, 3cf74 <mpfr_divhigh_n@@Base+0x444>
   3cff0:	cmp	x22, x0
   3cff4:	b.gt	3cfdc <mpfr_divhigh_n@@Base+0x4ac>
   3cff8:	mov	x0, #0x1                   	// #1
   3cffc:	b	3cf78 <mpfr_divhigh_n@@Base+0x448>
   3d000:	mov	x0, #0x1                   	// #1
   3d004:	b	3cff0 <mpfr_divhigh_n@@Base+0x4c0>
   3d008:	ldr	x1, [x23, x0, lsl #3]
   3d00c:	add	x1, x1, #0x1
   3d010:	str	x1, [x23, x0, lsl #3]
   3d014:	add	x0, x0, #0x1
   3d018:	cbnz	x1, 3cfc4 <mpfr_divhigh_n@@Base+0x494>
   3d01c:	cmp	x22, x0
   3d020:	b.gt	3d008 <mpfr_divhigh_n@@Base+0x4d8>
   3d024:	mov	x19, #0x1                   	// #1
   3d028:	b	3cfc4 <mpfr_divhigh_n@@Base+0x494>
   3d02c:	mov	x0, #0x1                   	// #1
   3d030:	b	3d01c <mpfr_divhigh_n@@Base+0x4ec>

000000000003d034 <mpfr_get_f@@Base>:
   3d034:	stp	x29, x30, [sp, #-128]!
   3d038:	mov	x29, sp
   3d03c:	ldr	x4, [x1, #16]
   3d040:	stp	x19, x20, [sp, #16]
   3d044:	mov	x20, x0
   3d048:	stp	x21, x22, [sp, #32]
   3d04c:	mov	x21, x1
   3d050:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   3d054:	stp	x23, x24, [sp, #48]
   3d058:	cmp	x4, x1
   3d05c:	stp	x25, x26, [sp, #64]
   3d060:	stp	x27, x28, [sp, #80]
   3d064:	b.gt	3d124 <mpfr_get_f@@Base+0xf0>
   3d068:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   3d06c:	cmp	x4, x1
   3d070:	b.ne	3d0a0 <mpfr_get_f@@Base+0x6c>  // b.any
   3d074:	mov	x1, #0x0                   	// #0
   3d078:	bl	c210 <__gmpf_set_ui@plt>
   3d07c:	mov	w26, #0x0                   	// #0
   3d080:	mov	w0, w26
   3d084:	ldp	x19, x20, [sp, #16]
   3d088:	ldp	x21, x22, [sp, #32]
   3d08c:	ldp	x23, x24, [sp, #48]
   3d090:	ldp	x25, x26, [sp, #64]
   3d094:	ldp	x27, x28, [sp, #80]
   3d098:	ldp	x29, x30, [sp], #128
   3d09c:	ret
   3d0a0:	mrs	x2, tpidr_el0
   3d0a4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3d0a8:	ldr	x1, [x0, #2592]
   3d0ac:	add	x0, x0, #0xa20
   3d0b0:	blr	x1
   3d0b4:	add	x1, x2, x0
   3d0b8:	ldr	w0, [x2, x0]
   3d0bc:	mov	x2, #0x2                   	// #2
   3d0c0:	movk	x2, #0x8000, lsl #48
   3d0c4:	cmp	x4, x2
   3d0c8:	orr	w0, w0, #0x10
   3d0cc:	str	w0, [x1]
   3d0d0:	b.eq	3d07c <mpfr_get_f@@Base+0x48>  // b.none
   3d0d4:	ldr	x2, [x20, #16]
   3d0d8:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   3d0dc:	ldr	w1, [x20]
   3d0e0:	mov	x3, #0xffffffffffffffff    	// #-1
   3d0e4:	str	w1, [x20, #4]
   3d0e8:	str	x0, [x20, #8]
   3d0ec:	mov	x0, #0x0                   	// #0
   3d0f0:	cmp	w1, w0
   3d0f4:	b.gt	3d118 <mpfr_get_f@@Base+0xe4>
   3d0f8:	ldr	w0, [x21, #8]
   3d0fc:	cmp	w0, #0x0
   3d100:	b.gt	3d300 <mpfr_get_f@@Base+0x2cc>
   3d104:	mov	x1, x20
   3d108:	mov	x0, x20
   3d10c:	mov	w26, #0x1                   	// #1
   3d110:	bl	c760 <__gmpf_neg@plt>
   3d114:	b	3d080 <mpfr_get_f@@Base+0x4c>
   3d118:	str	x3, [x2, x0, lsl #3]
   3d11c:	add	x0, x0, #0x1
   3d120:	b	3d0f0 <mpfr_get_f@@Base+0xbc>
   3d124:	negs	x3, x4
   3d128:	and	x4, x4, #0x3f
   3d12c:	and	x3, x3, #0x3f
   3d130:	ldr	w22, [x0]
   3d134:	csneg	x3, x4, x3, mi  // mi = first
   3d138:	mov	w26, w2
   3d13c:	ldr	x28, [x0, #16]
   3d140:	cmp	x3, #0x0
   3d144:	ldr	x0, [x21]
   3d148:	mov	w25, #0x40                  	// #64
   3d14c:	sub	w2, w25, w3
   3d150:	sbfiz	x1, x22, #6, #32
   3d154:	csneg	w3, w2, w3, gt
   3d158:	sxtw	x24, w22
   3d15c:	add	x2, x0, w3, sxtw
   3d160:	sxtw	x19, w3
   3d164:	cmp	x2, x1
   3d168:	b.gt	3d230 <mpfr_get_f@@Base+0x1fc>
   3d16c:	sub	x2, x0, #0x1
   3d170:	asr	x2, x2, #6
   3d174:	add	x2, x2, #0x1
   3d178:	cmp	x24, x2
   3d17c:	b.ge	3d198 <mpfr_get_f@@Base+0x164>  // b.tcont
   3d180:	adrp	x2, 5a000 <mpfr_bases@@Base+0x2a8>
   3d184:	add	x2, x2, #0xb08
   3d188:	mov	w1, #0x61                  	// #97
   3d18c:	adrp	x0, 5a000 <mpfr_bases@@Base+0x2a8>
   3d190:	add	x0, x0, #0xb11
   3d194:	bl	cbd0 <mpfr_assert_fail@plt>
   3d198:	sub	x24, x24, x2
   3d19c:	ldr	x1, [x21, #24]
   3d1a0:	add	x0, x28, x24, lsl #3
   3d1a4:	cbz	w3, 3d21c <mpfr_get_f@@Base+0x1e8>
   3d1a8:	bl	bd60 <__gmpn_rshift@plt>
   3d1ac:	cmp	x24, #0x0
   3d1b0:	ccmp	x0, #0x0, #0x4, le
   3d1b4:	b.eq	3d1c8 <mpfr_get_f@@Base+0x194>  // b.none
   3d1b8:	adrp	x2, 5a000 <mpfr_bases@@Base+0x2a8>
   3d1bc:	mov	w1, #0x68                  	// #104
   3d1c0:	add	x2, x2, #0xb19
   3d1c4:	b	3d18c <mpfr_get_f@@Base+0x158>
   3d1c8:	cmp	x24, #0x0
   3d1cc:	b.le	3d1f0 <mpfr_get_f@@Base+0x1bc>
   3d1d0:	sub	x24, x24, #0x1
   3d1d4:	str	x0, [x28, x24, lsl #3]
   3d1d8:	cmp	x24, #0x0
   3d1dc:	b.le	3d1f0 <mpfr_get_f@@Base+0x1bc>
   3d1e0:	lsl	x2, x24, #3
   3d1e4:	mov	x0, x28
   3d1e8:	mov	w1, #0x0                   	// #0
   3d1ec:	bl	c1a0 <memset@plt>
   3d1f0:	ldr	x0, [x21, #16]
   3d1f4:	mov	w26, #0x0                   	// #0
   3d1f8:	add	x19, x19, x0
   3d1fc:	mov	x0, #0x40                  	// #64
   3d200:	sdiv	x19, x19, x0
   3d204:	str	x19, [x20, #8]
   3d208:	ldr	w0, [x21, #8]
   3d20c:	tbz	w0, #31, 3d214 <mpfr_get_f@@Base+0x1e0>
   3d210:	neg	w22, w22
   3d214:	str	w22, [x20, #4]
   3d218:	b	3d080 <mpfr_get_f@@Base+0x4c>
   3d21c:	cmp	x0, x1
   3d220:	b.eq	3d1d8 <mpfr_get_f@@Base+0x1a4>  // b.none
   3d224:	lsl	x2, x2, #3
   3d228:	bl	ba90 <memcpy@plt>
   3d22c:	b	3d1d8 <mpfr_get_f@@Base+0x1a4>
   3d230:	add	x23, sp, #0x60
   3d234:	sub	x1, x1, x19
   3d238:	mov	x0, x23
   3d23c:	bl	cb10 <mpfr_init2@plt>
   3d240:	ldr	x27, [sp, #96]
   3d244:	sub	x27, x27, #0x1
   3d248:	asr	x27, x27, #6
   3d24c:	add	x27, x27, #0x1
   3d250:	cmp	x24, x27
   3d254:	b.eq	3d268 <mpfr_get_f@@Base+0x234>  // b.none
   3d258:	adrp	x2, 5a000 <mpfr_bases@@Base+0x2a8>
   3d25c:	mov	w1, #0x7c                  	// #124
   3d260:	add	x2, x2, #0xb2c
   3d264:	b	3d18c <mpfr_get_f@@Base+0x158>
   3d268:	ldr	w3, [x21, #8]
   3d26c:	mov	w2, w26
   3d270:	mov	x1, x21
   3d274:	mov	x0, x23
   3d278:	bl	c730 <mpfr_set4@plt>
   3d27c:	mov	w26, w0
   3d280:	ldr	x0, [sp, #112]
   3d284:	negs	x19, x0
   3d288:	and	x0, x0, #0x3f
   3d28c:	and	x19, x19, #0x3f
   3d290:	csneg	x19, x0, x19, mi  // mi = first
   3d294:	cmp	x19, #0x0
   3d298:	b.gt	3d2dc <mpfr_get_f@@Base+0x2a8>
   3d29c:	ldr	x1, [sp, #120]
   3d2a0:	cbz	x0, 3d2e4 <mpfr_get_f@@Base+0x2b0>
   3d2a4:	neg	w19, w19
   3d2a8:	ldr	x1, [sp, #120]
   3d2ac:	mov	w3, w19
   3d2b0:	mov	x2, x27
   3d2b4:	mov	x0, x28
   3d2b8:	bl	bd60 <__gmpn_rshift@plt>
   3d2bc:	ldr	x3, [sp, #112]
   3d2c0:	mov	x0, x23
   3d2c4:	add	x19, x3, w19, sxtw
   3d2c8:	mov	x3, #0x40                  	// #64
   3d2cc:	sdiv	x19, x19, x3
   3d2d0:	str	x19, [x20, #8]
   3d2d4:	bl	c0f0 <mpfr_clear@plt>
   3d2d8:	b	3d208 <mpfr_get_f@@Base+0x1d4>
   3d2dc:	sub	w19, w25, w19
   3d2e0:	b	3d2a8 <mpfr_get_f@@Base+0x274>
   3d2e4:	cmp	x1, x28
   3d2e8:	b.eq	3d2f8 <mpfr_get_f@@Base+0x2c4>  // b.none
   3d2ec:	lsl	x2, x24, #3
   3d2f0:	mov	x0, x28
   3d2f4:	bl	ba90 <memcpy@plt>
   3d2f8:	mov	w19, #0x0                   	// #0
   3d2fc:	b	3d2bc <mpfr_get_f@@Base+0x288>
   3d300:	mov	w26, #0xffffffff            	// #-1
   3d304:	b	3d080 <mpfr_get_f@@Base+0x4c>

000000000003d308 <mpfr_round_p@@Base>:
   3d308:	cmp	x2, #0x0
   3d30c:	lsl	x4, x1, #6
   3d310:	ccmp	x2, x3, #0x0, gt
   3d314:	b.ls	3d45c <mpfr_round_p@@Base+0x154>  // b.plast
   3d318:	cmp	x4, x3
   3d31c:	b.le	3d45c <mpfr_round_p@@Base+0x154>
   3d320:	mov	x7, #0x40                  	// #64
   3d324:	cmp	x4, x2
   3d328:	csel	x2, x4, x2, ls  // ls = plast
   3d32c:	sub	x1, x1, #0x1
   3d330:	sdiv	x9, x3, x7
   3d334:	negs	x6, x3
   3d338:	and	x6, x6, #0x3f
   3d33c:	and	x3, x3, #0x3f
   3d340:	csneg	x3, x3, x6, mi  // mi = first
   3d344:	sub	w6, w7, w3
   3d348:	sub	x1, x1, x9
   3d34c:	cmp	w6, #0x40
   3d350:	sdiv	x3, x2, x7
   3d354:	add	x8, x0, x1, lsl #3
   3d358:	ldr	x5, [x0, x1, lsl #3]
   3d35c:	mov	x0, #0x1                   	// #1
   3d360:	lsl	x4, x0, x6
   3d364:	sub	x4, x4, #0x1
   3d368:	csinv	x4, x4, xzr, ne  // ne = any
   3d36c:	subs	x3, x3, x9
   3d370:	and	x5, x4, x5
   3d374:	b.ne	3d3a4 <mpfr_round_p@@Base+0x9c>  // b.any
   3d378:	negs	x0, x2
   3d37c:	and	x2, x2, #0x3f
   3d380:	and	x0, x0, #0x3f
   3d384:	csneg	x2, x2, x0, mi  // mi = first
   3d388:	sub	w7, w7, w2
   3d38c:	lsr	x5, x5, x7
   3d390:	cmp	x5, #0x0
   3d394:	lsr	x4, x4, x7
   3d398:	ccmp	x4, x5, #0x4, ne  // ne = any
   3d39c:	cset	w0, ne  // ne = any
   3d3a0:	ret
   3d3a4:	sub	x1, x8, #0x8
   3d3a8:	cbnz	x5, 3d3fc <mpfr_round_p@@Base+0xf4>
   3d3ac:	mov	x0, x1
   3d3b0:	sub	x3, x8, x3, lsl #3
   3d3b4:	cmp	x0, x3
   3d3b8:	b.ne	3d3ec <mpfr_round_p@@Base+0xe4>  // b.any
   3d3bc:	negs	x1, x2
   3d3c0:	and	x2, x2, #0x3f
   3d3c4:	and	x1, x1, #0x3f
   3d3c8:	csneg	x2, x2, x1, mi  // mi = first
   3d3cc:	mov	w1, #0x40                  	// #64
   3d3d0:	sub	w2, w1, w2
   3d3d4:	cmp	w2, w1
   3d3d8:	b.eq	3d45c <mpfr_round_p@@Base+0x154>  // b.none
   3d3dc:	ldr	x0, [x0]
   3d3e0:	lsr	x2, x0, x2
   3d3e4:	cmp	x2, #0x0
   3d3e8:	b	3d39c <mpfr_round_p@@Base+0x94>
   3d3ec:	ldr	x1, [x0], #-8
   3d3f0:	cbz	x1, 3d3b4 <mpfr_round_p@@Base+0xac>
   3d3f4:	mov	w0, #0x1                   	// #1
   3d3f8:	b	3d3a0 <mpfr_round_p@@Base+0x98>
   3d3fc:	cmp	x4, x5
   3d400:	b.ne	3d3a0 <mpfr_round_p@@Base+0x98>  // b.any
   3d404:	mov	x0, x1
   3d408:	sub	x3, x8, x3, lsl #3
   3d40c:	cmp	x0, x3
   3d410:	b.ne	3d44c <mpfr_round_p@@Base+0x144>  // b.any
   3d414:	negs	x1, x2
   3d418:	and	x2, x2, #0x3f
   3d41c:	and	x1, x1, #0x3f
   3d420:	csneg	x1, x2, x1, mi  // mi = first
   3d424:	mov	w2, #0x40                  	// #64
   3d428:	sub	w2, w2, w1
   3d42c:	cmp	w2, #0x40
   3d430:	b.eq	3d45c <mpfr_round_p@@Base+0x154>  // b.none
   3d434:	ldr	x1, [x0]
   3d438:	mov	x0, #0xffffffffffffffff    	// #-1
   3d43c:	lsr	x1, x1, x2
   3d440:	lsr	x2, x0, x2
   3d444:	cmp	x1, x2
   3d448:	b	3d39c <mpfr_round_p@@Base+0x94>
   3d44c:	ldr	x1, [x0], #-8
   3d450:	cmn	x1, #0x1
   3d454:	b.eq	3d40c <mpfr_round_p@@Base+0x104>  // b.none
   3d458:	b	3d3f4 <mpfr_round_p@@Base+0xec>
   3d45c:	mov	w0, #0x0                   	// #0
   3d460:	b	3d3a0 <mpfr_round_p@@Base+0x98>

000000000003d464 <mpfr_erfc@@Base>:
   3d464:	stp	x29, x30, [sp, #-272]!
   3d468:	mov	x29, sp
   3d46c:	stp	x19, x20, [sp, #16]
   3d470:	mov	x19, x1
   3d474:	ldr	x1, [x1, #16]
   3d478:	stp	x21, x22, [sp, #32]
   3d47c:	stp	x23, x24, [sp, #48]
   3d480:	mov	x23, x0
   3d484:	stp	x25, x26, [sp, #64]
   3d488:	stp	x27, x28, [sp, #80]
   3d48c:	mov	w27, w2
   3d490:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   3d494:	cmp	x1, x2
   3d498:	b.gt	3d534 <mpfr_erfc@@Base+0xd0>
   3d49c:	mov	x3, #0x2                   	// #2
   3d4a0:	movk	x3, #0x8000, lsl #48
   3d4a4:	cmp	x1, x3
   3d4a8:	b.ne	3d4f8 <mpfr_erfc@@Base+0x94>  // b.any
   3d4ac:	str	x1, [x0, #16]
   3d4b0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3d4b4:	ldr	x1, [x0, #2592]
   3d4b8:	add	x0, x0, #0xa20
   3d4bc:	blr	x1
   3d4c0:	mrs	x1, tpidr_el0
   3d4c4:	mov	w20, #0x0                   	// #0
   3d4c8:	add	x0, x1, x0
   3d4cc:	ldr	w1, [x0]
   3d4d0:	orr	w1, w1, #0x4
   3d4d4:	str	w1, [x0]
   3d4d8:	mov	w0, w20
   3d4dc:	ldp	x19, x20, [sp, #16]
   3d4e0:	ldp	x21, x22, [sp, #32]
   3d4e4:	ldp	x23, x24, [sp, #48]
   3d4e8:	ldp	x25, x26, [sp, #64]
   3d4ec:	ldp	x27, x28, [sp, #80]
   3d4f0:	ldp	x29, x30, [sp], #272
   3d4f4:	ret
   3d4f8:	cmp	x1, x2
   3d4fc:	b.ne	3d524 <mpfr_erfc@@Base+0xc0>  // b.any
   3d500:	ldr	w1, [x19, #8]
   3d504:	mov	w3, w27
   3d508:	mov	x2, #0x0                   	// #0
   3d50c:	cmp	w1, #0x0
   3d510:	cset	x1, le
   3d514:	lsl	x1, x1, #1
   3d518:	bl	c680 <mpfr_set_ui_2exp@plt>
   3d51c:	mov	w20, w0
   3d520:	b	3d4d8 <mpfr_erfc@@Base+0x74>
   3d524:	mov	w3, w27
   3d528:	mov	x2, #0x0                   	// #0
   3d52c:	mov	x1, #0x1                   	// #1
   3d530:	b	3d518 <mpfr_erfc@@Base+0xb4>
   3d534:	ldr	w0, [x19, #8]
   3d538:	mrs	x26, tpidr_el0
   3d53c:	cmp	w0, #0x0
   3d540:	b.le	3d5ac <mpfr_erfc@@Base+0x148>
   3d544:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3d548:	ldr	x1, [x0, #2528]
   3d54c:	add	x0, x0, #0x9e0
   3d550:	blr	x1
   3d554:	ldr	x1, [x26, x0]
   3d558:	mov	x0, #0xffffffffc0000001    	// #-1073741823
   3d55c:	cmp	x1, x0
   3d560:	b.ge	3d594 <mpfr_erfc@@Base+0x130>  // b.tcont
   3d564:	mov	x1, #0x2646                	// #9798
   3d568:	mov	x0, x19
   3d56c:	mov	x2, #0x0                   	// #0
   3d570:	movk	x1, #0x6a91, lsl #16
   3d574:	bl	bfd0 <mpfr_cmp_ui_2exp@plt>
   3d578:	tbnz	w0, #31, 3d5ac <mpfr_erfc@@Base+0x148>
   3d57c:	cmp	w27, #0x0
   3d580:	mov	w2, #0x1                   	// #1
   3d584:	mov	x0, x23
   3d588:	csel	w1, w27, w2, ne  // ne = any
   3d58c:	bl	c450 <mpfr_underflow@plt>
   3d590:	b	3d51c <mpfr_erfc@@Base+0xb8>
   3d594:	mov	x0, x19
   3d598:	mov	x2, #0x0                   	// #0
   3d59c:	mov	x1, #0x6a92                	// #27282
   3d5a0:	bl	bfd0 <mpfr_cmp_ui_2exp@plt>
   3d5a4:	tbnz	w0, #31, 3d564 <mpfr_erfc@@Base+0x100>
   3d5a8:	b	3d57c <mpfr_erfc@@Base+0x118>
   3d5ac:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3d5b0:	ldr	x1, [x0, #2592]
   3d5b4:	add	x0, x0, #0xa20
   3d5b8:	blr	x1
   3d5bc:	ldr	w0, [x26, x0]
   3d5c0:	str	w0, [sp, #108]
   3d5c4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3d5c8:	ldr	x1, [x0, #2528]
   3d5cc:	add	x0, x0, #0x9e0
   3d5d0:	blr	x1
   3d5d4:	add	x1, x26, x0
   3d5d8:	ldr	x0, [x26, x0]
   3d5dc:	str	x0, [sp, #112]
   3d5e0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3d5e4:	ldr	x2, [x0, #2560]
   3d5e8:	add	x0, x0, #0xa00
   3d5ec:	blr	x2
   3d5f0:	ldr	x2, [x26, x0]
   3d5f4:	str	x2, [sp, #120]
   3d5f8:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   3d5fc:	str	x2, [x1]
   3d600:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   3d604:	str	x1, [x26, x0]
   3d608:	ldr	w0, [x19, #8]
   3d60c:	tbz	w0, #31, 3d808 <mpfr_erfc@@Base+0x3a4>
   3d610:	ldr	x0, [x23]
   3d614:	ldr	x20, [x19, #16]
   3d618:	cmp	x0, #0x7
   3d61c:	b.gt	3d644 <mpfr_erfc@@Base+0x1e0>
   3d620:	cmp	x20, #0x1
   3d624:	b.gt	3d674 <mpfr_erfc@@Base+0x210>
   3d628:	mov	x0, x19
   3d62c:	mov	x2, #0x0                   	// #0
   3d630:	mov	x1, #0xfffffffffffffff7    	// #-9
   3d634:	bl	c460 <mpfr_cmp_si_2exp@plt>
   3d638:	cmp	w0, #0x0
   3d63c:	b.gt	3d65c <mpfr_erfc@@Base+0x1f8>
   3d640:	b	3d674 <mpfr_erfc@@Base+0x210>
   3d644:	cmp	x0, #0x19
   3d648:	b.gt	3d654 <mpfr_erfc@@Base+0x1f0>
   3d64c:	cmp	x20, #0x2
   3d650:	b	3d624 <mpfr_erfc@@Base+0x1c0>
   3d654:	cmp	x0, #0x78
   3d658:	b.le	3d628 <mpfr_erfc@@Base+0x1c4>
   3d65c:	mov	x0, x19
   3d660:	mov	x2, #0x0                   	// #0
   3d664:	mov	x1, #0xffffffffffff956e    	// #-27282
   3d668:	bl	c460 <mpfr_cmp_si_2exp@plt>
   3d66c:	cmp	w0, #0x0
   3d670:	b.gt	3d73c <mpfr_erfc@@Base+0x2d8>
   3d674:	mov	x1, #0x2                   	// #2
   3d678:	mov	x0, x23
   3d67c:	mov	w3, #0x0                   	// #0
   3d680:	mov	x2, #0x0                   	// #0
   3d684:	bl	c680 <mpfr_set_ui_2exp@plt>
   3d688:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3d68c:	ldr	x1, [x0, #2592]
   3d690:	add	x0, x0, #0xa20
   3d694:	blr	x1
   3d698:	add	x0, x26, x0
   3d69c:	ldr	w1, [x0]
   3d6a0:	orr	w1, w1, #0x8
   3d6a4:	str	w1, [x0]
   3d6a8:	and	w0, w27, #0xfffffffd
   3d6ac:	cmp	w0, #0x1
   3d6b0:	b.ne	3dd80 <mpfr_erfc@@Base+0x91c>  // b.any
   3d6b4:	mov	w20, #0xffffffff            	// #-1
   3d6b8:	mov	x0, x23
   3d6bc:	bl	be50 <mpfr_nextbelow@plt>
   3d6c0:	ldr	w2, [sp, #108]
   3d6c4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3d6c8:	ldr	x1, [x0, #2592]
   3d6cc:	add	x0, x0, #0xa20
   3d6d0:	blr	x1
   3d6d4:	add	x1, x26, x0
   3d6d8:	str	w2, [x26, x0]
   3d6dc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3d6e0:	ldr	x2, [x0, #2528]
   3d6e4:	add	x0, x0, #0x9e0
   3d6e8:	blr	x2
   3d6ec:	ldr	x2, [sp, #112]
   3d6f0:	str	x2, [x26, x0]
   3d6f4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3d6f8:	ldr	x2, [x0, #2560]
   3d6fc:	add	x0, x0, #0xa00
   3d700:	blr	x2
   3d704:	ldr	x2, [sp, #120]
   3d708:	str	x2, [x26, x0]
   3d70c:	ldr	x0, [x23, #16]
   3d710:	ldr	x2, [sp, #112]
   3d714:	cmp	x2, x0
   3d718:	b.gt	3dd88 <mpfr_erfc@@Base+0x924>
   3d71c:	ldr	x2, [sp, #120]
   3d720:	cmp	x2, x0
   3d724:	b.lt	3dd88 <mpfr_erfc@@Base+0x924>  // b.tstop
   3d728:	cbz	w20, 3d4d8 <mpfr_erfc@@Base+0x74>
   3d72c:	ldr	w0, [sp, #108]
   3d730:	orr	w0, w0, #0x8
   3d734:	str	w0, [x1]
   3d738:	b	3d4d8 <mpfr_erfc@@Base+0x74>
   3d73c:	cmp	x20, #0x2
   3d740:	b.le	3d808 <mpfr_erfc@@Base+0x3a4>
   3d744:	add	x21, sp, #0xd0
   3d748:	add	x20, sp, #0xf0
   3d74c:	mov	x0, x21
   3d750:	mov	x1, #0x20                  	// #32
   3d754:	bl	cb10 <mpfr_init2@plt>
   3d758:	mov	x0, x20
   3d75c:	mov	x1, #0x20                  	// #32
   3d760:	bl	cb10 <mpfr_init2@plt>
   3d764:	mov	x0, x21
   3d768:	adrp	x1, 5a000 <mpfr_bases@@Base+0x2a8>
   3d76c:	add	x1, x1, #0xb35
   3d770:	bl	c3d0 <mpfr_set_str_binary@plt>
   3d774:	mov	x1, x19
   3d778:	mov	w2, #0x1                   	// #1
   3d77c:	mov	x0, x20
   3d780:	bl	c490 <mpfr_sqr@plt>
   3d784:	mov	w3, #0x1                   	// #1
   3d788:	mov	x2, x20
   3d78c:	mov	x1, x21
   3d790:	mov	x0, x21
   3d794:	bl	bdd0 <mpfr_mul@plt>
   3d798:	mov	x1, x19
   3d79c:	mov	w2, #0x1                   	// #1
   3d7a0:	mov	x0, x20
   3d7a4:	bl	bdf0 <mpfr_neg@plt>
   3d7a8:	mov	x1, x20
   3d7ac:	mov	w2, #0x1                   	// #1
   3d7b0:	mov	x0, x20
   3d7b4:	bl	c260 <mpfr_log2@plt>
   3d7b8:	mov	x2, x20
   3d7bc:	mov	x1, x21
   3d7c0:	mov	w3, #0x1                   	// #1
   3d7c4:	mov	x0, x21
   3d7c8:	bl	c230 <mpfr_add@plt>
   3d7cc:	ldr	x1, [x23]
   3d7d0:	mov	w3, #0x2                   	// #2
   3d7d4:	mov	x2, #0x0                   	// #0
   3d7d8:	mov	x0, x20
   3d7dc:	bl	bb00 <mpfr_set_si_2exp@plt>
   3d7e0:	mov	x1, x20
   3d7e4:	mov	w2, #0x1                   	// #1
   3d7e8:	mov	x0, x21
   3d7ec:	bl	ca30 <mpfr_cmp3@plt>
   3d7f0:	mov	w22, w0
   3d7f4:	mov	x0, x21
   3d7f8:	bl	c0f0 <mpfr_clear@plt>
   3d7fc:	mov	x0, x20
   3d800:	bl	c0f0 <mpfr_clear@plt>
   3d804:	tbz	w22, #31, 3d674 <mpfr_erfc@@Base+0x210>
   3d808:	ldr	x2, [x19, #16]
   3d80c:	mvn	x2, x2
   3d810:	cmp	x2, #0x0
   3d814:	b.gt	3d8a0 <mpfr_erfc@@Base+0x43c>
   3d818:	ldr	x21, [x23]
   3d81c:	cmp	x21, #0x1
   3d820:	b.ne	3d8d8 <mpfr_erfc@@Base+0x474>  // b.any
   3d824:	mov	x0, #0x0                   	// #0
   3d828:	add	x21, x21, x0
   3d82c:	ldr	x0, [x19, #16]
   3d830:	add	x21, x21, #0x3
   3d834:	cmp	x0, #0x0
   3d838:	b.le	3d840 <mpfr_erfc@@Base+0x3dc>
   3d83c:	add	x21, x21, x0, lsl #1
   3d840:	add	x24, sp, #0x90
   3d844:	mov	x1, x21
   3d848:	mov	x0, x24
   3d84c:	add	x20, sp, #0xb0
   3d850:	bl	cb10 <mpfr_init2@plt>
   3d854:	add	x25, sp, #0xd0
   3d858:	add	x22, sp, #0xf0
   3d85c:	mov	x0, #0x40                  	// #64
   3d860:	str	x0, [sp, #128]
   3d864:	ldr	w0, [x19, #8]
   3d868:	cmp	w0, #0x0
   3d86c:	b.le	3dc84 <mpfr_erfc@@Base+0x820>
   3d870:	ldr	x1, [x19, #16]
   3d874:	cmp	x21, #0x1
   3d878:	sub	x1, x1, #0x1
   3d87c:	lsl	x1, x1, #1
   3d880:	b.eq	3dc38 <mpfr_erfc@@Base+0x7d4>  // b.none
   3d884:	b.gt	3d910 <mpfr_erfc@@Base+0x4ac>
   3d888:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   3d88c:	add	x2, x2, #0x50e
   3d890:	mov	w1, #0xee                  	// #238
   3d894:	adrp	x0, 5a000 <mpfr_bases@@Base+0x2a8>
   3d898:	add	x0, x0, #0xb57
   3d89c:	bl	cbd0 <mpfr_assert_fail@plt>
   3d8a0:	ldr	x0, [x23]
   3d8a4:	add	x0, x0, #0x1
   3d8a8:	cmp	x2, x0
   3d8ac:	b.ls	3d818 <mpfr_erfc@@Base+0x3b4>  // b.plast
   3d8b0:	adrp	x1, 73000 <__gmpfr_l2b@@Base+0x200>
   3d8b4:	ldr	w3, [x19, #8]
   3d8b8:	mov	w4, w27
   3d8bc:	mov	x0, x23
   3d8c0:	ldr	x1, [x1, #3928]
   3d8c4:	lsr	w3, w3, #31
   3d8c8:	bl	c5d0 <mpfr_round_near_x@plt>
   3d8cc:	mov	w20, w0
   3d8d0:	cbz	w0, 3d818 <mpfr_erfc@@Base+0x3b4>
   3d8d4:	b	3d6c0 <mpfr_erfc@@Base+0x25c>
   3d8d8:	b.gt	3d8f4 <mpfr_erfc@@Base+0x490>
   3d8dc:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   3d8e0:	adrp	x0, 5a000 <mpfr_bases@@Base+0x2a8>
   3d8e4:	add	x2, x2, #0xffa
   3d8e8:	add	x0, x0, #0xb57
   3d8ec:	mov	w1, #0xe2                  	// #226
   3d8f0:	bl	cbd0 <mpfr_assert_fail@plt>
   3d8f4:	ldr	x0, [x23]
   3d8f8:	sub	x0, x0, #0x1
   3d8fc:	clz	x1, x0
   3d900:	mov	w0, #0x40                  	// #64
   3d904:	sub	w0, w0, w1
   3d908:	sxtw	x0, w0
   3d90c:	b	3d828 <mpfr_erfc@@Base+0x3c4>
   3d910:	sub	x0, x21, #0x1
   3d914:	clz	x2, x0
   3d918:	mov	w0, #0x40                  	// #64
   3d91c:	sub	w0, w0, w2
   3d920:	sxtw	x0, w0
   3d924:	cmp	x1, x0
   3d928:	b.lt	3dc84 <mpfr_erfc@@Base+0x820>  // b.tstop
   3d92c:	ldr	x0, [sp, #144]
   3d930:	str	x0, [sp, #136]
   3d934:	mov	x28, #0x1                   	// #1
   3d938:	mov	x1, x0
   3d93c:	mov	x0, x20
   3d940:	bl	cb10 <mpfr_init2@plt>
   3d944:	ldr	x1, [sp, #136]
   3d948:	mov	x0, x25
   3d94c:	bl	cb10 <mpfr_init2@plt>
   3d950:	mov	x0, x22
   3d954:	mov	x1, #0x1f                  	// #31
   3d958:	bl	cb10 <mpfr_init2@plt>
   3d95c:	mov	x2, x19
   3d960:	mov	x1, x19
   3d964:	mov	w3, #0x3                   	// #3
   3d968:	mov	x0, x25
   3d96c:	bl	bdd0 <mpfr_mul@plt>
   3d970:	mov	x2, x25
   3d974:	mov	w3, #0x2                   	// #2
   3d978:	mov	x1, #0x1                   	// #1
   3d97c:	mov	x0, x25
   3d980:	bl	c380 <mpfr_ui_div@plt>
   3d984:	mov	x1, x25
   3d988:	mov	w3, #0x2                   	// #2
   3d98c:	mov	x2, #0x1                   	// #1
   3d990:	mov	x0, x25
   3d994:	bl	c980 <mpfr_div_2ui@plt>
   3d998:	mov	w3, #0x0                   	// #0
   3d99c:	mov	x2, #0x0                   	// #0
   3d9a0:	mov	x1, #0x1                   	// #1
   3d9a4:	mov	x0, x20
   3d9a8:	bl	c680 <mpfr_set_ui_2exp@plt>
   3d9ac:	ldr	w3, [sp, #184]
   3d9b0:	mov	x1, x20
   3d9b4:	mov	x0, x24
   3d9b8:	mov	w2, #0x0                   	// #0
   3d9bc:	bl	c730 <mpfr_set4@plt>
   3d9c0:	mov	w0, #0x1                   	// #1
   3d9c4:	str	w0, [sp, #248]
   3d9c8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3d9cc:	str	x0, [sp, #256]
   3d9d0:	lsl	x2, x28, #1
   3d9d4:	mov	x1, x20
   3d9d8:	sub	x2, x2, #0x1
   3d9dc:	mov	w3, #0x2                   	// #2
   3d9e0:	mov	x0, x20
   3d9e4:	bl	bad0 <mpfr_mul_ui@plt>
   3d9e8:	mov	x2, x25
   3d9ec:	mov	x1, x20
   3d9f0:	mov	w3, #0x2                   	// #2
   3d9f4:	mov	x0, x20
   3d9f8:	bl	bdd0 <mpfr_mul@plt>
   3d9fc:	ldr	x2, [sp, #160]
   3da00:	mov	x1, x22
   3da04:	ldr	x0, [sp, #192]
   3da08:	mov	w3, #0x2                   	// #2
   3da0c:	sub	x2, x2, x0
   3da10:	mov	x0, x22
   3da14:	bl	bc10 <mpfr_mul_2si@plt>
   3da18:	mov	x0, #0xe                   	// #14
   3da1c:	mov	x1, x22
   3da20:	mov	w3, #0x2                   	// #2
   3da24:	mul	x2, x28, x0
   3da28:	mov	x0, x22
   3da2c:	bl	c2f0 <mpfr_add_ui@plt>
   3da30:	ldr	x2, [sp, #160]
   3da34:	mov	x1, x22
   3da38:	ldr	x0, [sp, #192]
   3da3c:	mov	w3, #0x2                   	// #2
   3da40:	sub	x2, x2, x0
   3da44:	mov	x0, x22
   3da48:	bl	c4b0 <mpfr_div_2si@plt>
   3da4c:	ldr	x1, [sp, #136]
   3da50:	ldr	x0, [sp, #192]
   3da54:	add	x0, x1, x0
   3da58:	ldr	x1, [sp, #160]
   3da5c:	cmp	x0, x1
   3da60:	b.gt	3dc40 <mpfr_erfc@@Base+0x7dc>
   3da64:	mov	x1, x22
   3da68:	mov	w3, #0x2                   	// #2
   3da6c:	mov	x2, #0x1                   	// #1
   3da70:	mov	x0, x22
   3da74:	bl	c2f0 <mpfr_add_ui@plt>
   3da78:	mov	x2, x19
   3da7c:	mov	x1, x19
   3da80:	mov	w3, #0x2                   	// #2
   3da84:	mov	x0, x20
   3da88:	bl	bdd0 <mpfr_mul@plt>
   3da8c:	mov	x1, x22
   3da90:	mov	w3, #0x2                   	// #2
   3da94:	mov	x2, #0x3                   	// #3
   3da98:	mov	x0, x22
   3da9c:	bl	c980 <mpfr_div_2ui@plt>
   3daa0:	mov	x2, x20
   3daa4:	mov	x1, x22
   3daa8:	mov	w3, #0x2                   	// #2
   3daac:	mov	x0, x22
   3dab0:	bl	c230 <mpfr_add@plt>
   3dab4:	mov	w3, #0x2                   	// #2
   3dab8:	mov	x1, x22
   3dabc:	mov	x2, #0x3                   	// #3
   3dac0:	mov	x0, x22
   3dac4:	bl	c350 <mpfr_mul_2ui@plt>
   3dac8:	mov	x1, x20
   3dacc:	mov	w2, #0x2                   	// #2
   3dad0:	mov	x0, x20
   3dad4:	bl	c7e0 <mpfr_exp@plt>
   3dad8:	mov	x1, x20
   3dadc:	mov	w3, #0x0                   	// #0
   3dae0:	mov	x2, x19
   3dae4:	mov	x0, x20
   3dae8:	bl	bdd0 <mpfr_mul@plt>
   3daec:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3daf0:	ldr	x1, [x0, #2640]
   3daf4:	add	x0, x0, #0xa50
   3daf8:	blr	x1
   3dafc:	add	x28, x26, x0
   3db00:	mov	x1, x28
   3db04:	mov	w2, #0x1                   	// #1
   3db08:	mov	x0, x25
   3db0c:	bl	c410 <mpfr_cache@plt>
   3db10:	mov	x1, x25
   3db14:	mov	w2, #0x0                   	// #0
   3db18:	mov	x0, x25
   3db1c:	bl	c9c0 <mpfr_sqrt@plt>
   3db20:	mov	x2, x25
   3db24:	mov	x1, x20
   3db28:	mov	w3, #0x0                   	// #0
   3db2c:	mov	x0, x20
   3db30:	bl	bdd0 <mpfr_mul@plt>
   3db34:	mov	x1, x24
   3db38:	mov	x2, x20
   3db3c:	mov	x0, x24
   3db40:	mov	w3, #0x0                   	// #0
   3db44:	bl	c6b0 <mpfr_div@plt>
   3db48:	ldr	x1, [sp, #160]
   3db4c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3db50:	cmp	x1, x0
   3db54:	b.ne	3dc68 <mpfr_erfc@@Base+0x804>  // b.any
   3db58:	mov	w3, #0x3                   	// #3
   3db5c:	mov	x2, x19
   3db60:	mov	x1, x19
   3db64:	mov	x0, x20
   3db68:	bl	bdd0 <mpfr_mul@plt>
   3db6c:	mov	x1, x20
   3db70:	mov	w2, #0x2                   	// #2
   3db74:	mov	x0, x20
   3db78:	bl	bdf0 <mpfr_neg@plt>
   3db7c:	mov	x1, x20
   3db80:	mov	w2, #0x2                   	// #2
   3db84:	mov	x0, x20
   3db88:	bl	c7e0 <mpfr_exp@plt>
   3db8c:	mov	x1, x28
   3db90:	mov	w2, #0x3                   	// #3
   3db94:	mov	x0, x25
   3db98:	mov	x28, #0x0                   	// #0
   3db9c:	bl	c410 <mpfr_cache@plt>
   3dba0:	mov	x2, x19
   3dba4:	mov	x1, x25
   3dba8:	mov	w3, #0x3                   	// #3
   3dbac:	mov	x0, x25
   3dbb0:	bl	bdd0 <mpfr_mul@plt>
   3dbb4:	mov	x2, x25
   3dbb8:	mov	x1, x20
   3dbbc:	mov	x0, x24
   3dbc0:	mov	w3, #0x0                   	// #0
   3dbc4:	bl	c6b0 <mpfr_div@plt>
   3dbc8:	mov	x0, x20
   3dbcc:	bl	c0f0 <mpfr_clear@plt>
   3dbd0:	mov	x0, x25
   3dbd4:	bl	c0f0 <mpfr_clear@plt>
   3dbd8:	mov	x0, x22
   3dbdc:	bl	c0f0 <mpfr_clear@plt>
   3dbe0:	cbnz	x28, 3dcc4 <mpfr_erfc@@Base+0x860>
   3dbe4:	mov	x0, x24
   3dbe8:	bl	c0f0 <mpfr_clear@plt>
   3dbec:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3dbf0:	ldr	x1, [x0, #2592]
   3dbf4:	add	x0, x0, #0xa20
   3dbf8:	blr	x1
   3dbfc:	ldr	w1, [sp, #108]
   3dc00:	str	w1, [x26, x0]
   3dc04:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3dc08:	ldr	x1, [x0, #2528]
   3dc0c:	add	x0, x0, #0x9e0
   3dc10:	blr	x1
   3dc14:	ldr	x1, [sp, #112]
   3dc18:	str	x1, [x26, x0]
   3dc1c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3dc20:	ldr	x1, [x0, #2560]
   3dc24:	add	x0, x0, #0xa00
   3dc28:	blr	x1
   3dc2c:	ldr	x1, [sp, #120]
   3dc30:	str	x1, [x26, x0]
   3dc34:	b	3d57c <mpfr_erfc@@Base+0x118>
   3dc38:	mov	x0, #0x0                   	// #0
   3dc3c:	b	3d924 <mpfr_erfc@@Base+0x4c0>
   3dc40:	mov	x2, x20
   3dc44:	mov	x1, x24
   3dc48:	mov	x0, x24
   3dc4c:	mov	w3, #0x0                   	// #0
   3dc50:	tbz	w28, #0, 3dc60 <mpfr_erfc@@Base+0x7fc>
   3dc54:	bl	bbf0 <mpfr_sub@plt>
   3dc58:	add	x28, x28, #0x1
   3dc5c:	b	3d9d0 <mpfr_erfc@@Base+0x56c>
   3dc60:	bl	c230 <mpfr_add@plt>
   3dc64:	b	3dc58 <mpfr_erfc@@Base+0x7f4>
   3dc68:	mov	x1, x22
   3dc6c:	mov	x0, x22
   3dc70:	mov	w3, #0x2                   	// #2
   3dc74:	mov	x2, #0x7                   	// #7
   3dc78:	bl	c2f0 <mpfr_add_ui@plt>
   3dc7c:	ldr	x28, [sp, #256]
   3dc80:	b	3dbc8 <mpfr_erfc@@Base+0x764>
   3dc84:	mov	x1, x19
   3dc88:	mov	w2, #0x0                   	// #0
   3dc8c:	mov	x0, x24
   3dc90:	bl	c270 <mpfr_erf@plt>
   3dc94:	mov	x2, x24
   3dc98:	mov	x0, x24
   3dc9c:	mov	w3, #0x0                   	// #0
   3dca0:	mov	x1, #0x1                   	// #1
   3dca4:	ldr	x28, [sp, #160]
   3dca8:	bl	cae0 <mpfr_ui_sub@plt>
   3dcac:	ldr	x2, [sp, #160]
   3dcb0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3dcb4:	cmp	x2, x0
   3dcb8:	b.ne	3dcfc <mpfr_erfc@@Base+0x898>  // b.any
   3dcbc:	lsl	x21, x21, #1
   3dcc0:	mov	x28, x21
   3dcc4:	ldr	x1, [sp, #160]
   3dcc8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3dccc:	cmp	x1, x0
   3dcd0:	b.gt	3dd0c <mpfr_erfc@@Base+0x8a8>
   3dcd4:	ldr	x1, [sp, #128]
   3dcd8:	mov	x0, #0xfffffffffffffeff    	// #-257
   3dcdc:	movk	x0, #0x7fff, lsl #48
   3dce0:	sub	x0, x0, x21
   3dce4:	cmp	x0, x1
   3dce8:	b.ge	3dd5c <mpfr_erfc@@Base+0x8f8>  // b.tcont
   3dcec:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   3dcf0:	mov	w1, #0x10a                 	// #266
   3dcf4:	add	x2, x2, #0x519
   3dcf8:	b	3d894 <mpfr_erfc@@Base+0x430>
   3dcfc:	subs	x28, x28, x2
   3dd00:	csel	x28, x28, xzr, pl  // pl = nfrst
   3dd04:	add	x28, x28, #0x1
   3dd08:	b	3dcc4 <mpfr_erfc@@Base+0x860>
   3dd0c:	ldr	x1, [sp, #144]
   3dd10:	cmp	w27, #0x0
   3dd14:	ldr	x0, [sp, #168]
   3dd18:	sub	x1, x1, #0x1
   3dd1c:	ldr	x3, [x23]
   3dd20:	asr	x1, x1, #6
   3dd24:	sub	x2, x21, x28
   3dd28:	add	x1, x1, #0x1
   3dd2c:	cinc	x3, x3, eq  // eq = none
   3dd30:	bl	c400 <mpfr_round_p@plt>
   3dd34:	cbz	w0, 3dcd4 <mpfr_erfc@@Base+0x870>
   3dd38:	ldr	w3, [sp, #152]
   3dd3c:	mov	w2, w27
   3dd40:	mov	x1, x24
   3dd44:	mov	x0, x23
   3dd48:	bl	c730 <mpfr_set4@plt>
   3dd4c:	mov	w20, w0
   3dd50:	mov	x0, x24
   3dd54:	bl	c0f0 <mpfr_clear@plt>
   3dd58:	b	3d6c0 <mpfr_erfc@@Base+0x25c>
   3dd5c:	ldr	x0, [sp, #128]
   3dd60:	add	x21, x21, x0
   3dd64:	mov	x0, #0x2                   	// #2
   3dd68:	mov	x1, x21
   3dd6c:	sdiv	x0, x21, x0
   3dd70:	str	x0, [sp, #128]
   3dd74:	mov	x0, x24
   3dd78:	bl	bf50 <mpfr_set_prec@plt>
   3dd7c:	b	3d864 <mpfr_erfc@@Base+0x400>
   3dd80:	mov	w20, #0x1                   	// #1
   3dd84:	b	3d6c0 <mpfr_erfc@@Base+0x25c>
   3dd88:	mov	w2, w27
   3dd8c:	mov	w1, w20
   3dd90:	mov	x0, x23
   3dd94:	bl	cbc0 <mpfr_check_range@plt>
   3dd98:	b	3d51c <mpfr_erfc@@Base+0xb8>
   3dd9c:	stp	x29, x30, [sp, #-80]!
   3dda0:	mov	x29, sp
   3dda4:	stp	x19, x20, [sp, #16]
   3dda8:	mrs	x19, tpidr_el0
   3ddac:	mov	x20, x0
   3ddb0:	stp	x23, x24, [sp, #48]
   3ddb4:	mov	w24, w1
   3ddb8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3ddbc:	ldr	x1, [x0, #2592]
   3ddc0:	add	x0, x0, #0xa20
   3ddc4:	blr	x1
   3ddc8:	ldr	w23, [x19, x0]
   3ddcc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3ddd0:	ldr	x1, [x0, #2528]
   3ddd4:	add	x0, x0, #0x9e0
   3ddd8:	blr	x1
   3dddc:	add	x1, x19, x0
   3dde0:	stp	x21, x22, [sp, #32]
   3dde4:	mov	w22, w3
   3dde8:	stp	x25, x26, [sp, #64]
   3ddec:	ldr	x26, [x19, x0]
   3ddf0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3ddf4:	ldr	x3, [x0, #2560]
   3ddf8:	add	x0, x0, #0xa00
   3ddfc:	blr	x3
   3de00:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   3de04:	str	x3, [x1]
   3de08:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   3de0c:	ldr	x25, [x19, x0]
   3de10:	str	x1, [x19, x0]
   3de14:	cbz	w2, 3dee8 <mpfr_erfc@@Base+0xa84>
   3de18:	cmp	w22, #0x2
   3de1c:	b.eq	3dee0 <mpfr_erfc@@Base+0xa7c>  // b.none
   3de20:	cmp	w22, #0x3
   3de24:	mov	w2, #0x2                   	// #2
   3de28:	csel	w2, w22, w2, ne  // ne = any
   3de2c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3de30:	ldr	x1, [x0, #2640]
   3de34:	add	x0, x0, #0xa50
   3de38:	blr	x1
   3de3c:	add	x1, x19, x0
   3de40:	mov	x0, x20
   3de44:	bl	c410 <mpfr_cache@plt>
   3de48:	neg	w21, w0
   3de4c:	ldr	w0, [x20, #8]
   3de50:	neg	w0, w0
   3de54:	str	w0, [x20, #8]
   3de58:	mov	x1, x20
   3de5c:	sxtw	x2, w24
   3de60:	mov	w3, w22
   3de64:	mov	x0, x20
   3de68:	bl	c980 <mpfr_div_2ui@plt>
   3de6c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3de70:	ldr	x1, [x0, #2592]
   3de74:	add	x0, x0, #0xa20
   3de78:	blr	x1
   3de7c:	add	x1, x19, x0
   3de80:	str	w23, [x19, x0]
   3de84:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3de88:	ldr	x2, [x0, #2528]
   3de8c:	add	x0, x0, #0x9e0
   3de90:	blr	x2
   3de94:	str	x26, [x19, x0]
   3de98:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3de9c:	ldr	x2, [x0, #2560]
   3dea0:	add	x0, x0, #0xa00
   3dea4:	blr	x2
   3dea8:	str	x25, [x19, x0]
   3deac:	ldr	x0, [x20, #16]
   3deb0:	cmp	x26, x0
   3deb4:	b.gt	3df10 <mpfr_erfc@@Base+0xaac>
   3deb8:	cmp	x25, x0
   3debc:	b.lt	3df10 <mpfr_erfc@@Base+0xaac>  // b.tstop
   3dec0:	cbnz	w21, 3df34 <mpfr_erfc@@Base+0xad0>
   3dec4:	mov	w0, w21
   3dec8:	ldp	x19, x20, [sp, #16]
   3decc:	ldp	x21, x22, [sp, #32]
   3ded0:	ldp	x23, x24, [sp, #48]
   3ded4:	ldp	x25, x26, [sp, #64]
   3ded8:	ldp	x29, x30, [sp], #80
   3dedc:	ret
   3dee0:	mov	w2, #0x3                   	// #3
   3dee4:	b	3de2c <mpfr_erfc@@Base+0x9c8>
   3dee8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3deec:	ldr	x1, [x0, #2640]
   3def0:	add	x0, x0, #0xa50
   3def4:	blr	x1
   3def8:	mov	w2, w22
   3defc:	add	x1, x19, x0
   3df00:	mov	x0, x20
   3df04:	bl	c410 <mpfr_cache@plt>
   3df08:	mov	w21, w0
   3df0c:	b	3de58 <mpfr_erfc@@Base+0x9f4>
   3df10:	mov	w2, w22
   3df14:	mov	w1, w21
   3df18:	mov	x0, x20
   3df1c:	ldp	x19, x20, [sp, #16]
   3df20:	ldp	x21, x22, [sp, #32]
   3df24:	ldp	x23, x24, [sp, #48]
   3df28:	ldp	x25, x26, [sp, #64]
   3df2c:	ldp	x29, x30, [sp], #80
   3df30:	b	cbc0 <mpfr_check_range@plt>
   3df34:	orr	w23, w23, #0x8
   3df38:	str	w23, [x1]
   3df3c:	b	3dec4 <mpfr_erfc@@Base+0xa60>

000000000003df40 <mpfr_atan2@@Base>:
   3df40:	stp	x29, x30, [sp, #-192]!
   3df44:	mov	x29, sp
   3df48:	stp	x21, x22, [sp, #32]
   3df4c:	ldr	x21, [x2, #16]
   3df50:	stp	x19, x20, [sp, #16]
   3df54:	mov	x19, x0
   3df58:	stp	x23, x24, [sp, #48]
   3df5c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3df60:	mov	x24, x1
   3df64:	stp	x25, x26, [sp, #64]
   3df68:	mov	w20, w3
   3df6c:	mov	x25, x2
   3df70:	stp	x27, x28, [sp, #80]
   3df74:	cmp	x21, x0
   3df78:	b.le	3e020 <mpfr_atan2@@Base+0xe0>
   3df7c:	ldr	x1, [x1, #16]
   3df80:	cmp	x1, x0
   3df84:	b.gt	3e2d8 <mpfr_atan2@@Base+0x398>
   3df88:	ldr	x0, [x24, #16]
   3df8c:	mov	x1, #0x2                   	// #2
   3df90:	movk	x1, #0x8000, lsl #48
   3df94:	cmp	x0, x1
   3df98:	b.eq	3e030 <mpfr_atan2@@Base+0xf0>  // b.none
   3df9c:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   3dfa0:	cmp	x0, x1
   3dfa4:	b.ne	3e0a8 <mpfr_atan2@@Base+0x168>  // b.any
   3dfa8:	ldr	w1, [x25, #8]
   3dfac:	ldr	w0, [x24, #8]
   3dfb0:	tbz	w1, #31, 3e098 <mpfr_atan2@@Base+0x158>
   3dfb4:	mrs	x1, tpidr_el0
   3dfb8:	tbz	w0, #31, 3e070 <mpfr_atan2@@Base+0x130>
   3dfbc:	cmp	w20, #0x2
   3dfc0:	b.eq	3e068 <mpfr_atan2@@Base+0x128>  // b.none
   3dfc4:	cmp	w20, #0x3
   3dfc8:	mov	w0, #0x2                   	// #2
   3dfcc:	csel	w20, w20, w0, ne  // ne = any
   3dfd0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3dfd4:	ldr	x2, [x0, #2640]
   3dfd8:	add	x0, x0, #0xa50
   3dfdc:	blr	x2
   3dfe0:	add	x1, x1, x0
   3dfe4:	mov	w2, w20
   3dfe8:	mov	x0, x19
   3dfec:	bl	c410 <mpfr_cache@plt>
   3dff0:	neg	w22, w0
   3dff4:	ldr	w1, [x19, #8]
   3dff8:	neg	w1, w1
   3dffc:	str	w1, [x19, #8]
   3e000:	mov	w0, w22
   3e004:	ldp	x19, x20, [sp, #16]
   3e008:	ldp	x21, x22, [sp, #32]
   3e00c:	ldp	x23, x24, [sp, #48]
   3e010:	ldp	x25, x26, [sp, #64]
   3e014:	ldp	x27, x28, [sp, #80]
   3e018:	ldp	x29, x30, [sp], #192
   3e01c:	ret
   3e020:	mov	x0, #0x2                   	// #2
   3e024:	movk	x0, #0x8000, lsl #48
   3e028:	cmp	x21, x0
   3e02c:	b.ne	3df88 <mpfr_atan2@@Base+0x48>  // b.any
   3e030:	mov	x0, #0x2                   	// #2
   3e034:	movk	x0, #0x8000, lsl #48
   3e038:	str	x0, [x19, #16]
   3e03c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3e040:	ldr	x1, [x0, #2592]
   3e044:	add	x0, x0, #0xa20
   3e048:	blr	x1
   3e04c:	mrs	x1, tpidr_el0
   3e050:	add	x0, x1, x0
   3e054:	ldr	w1, [x0]
   3e058:	orr	w1, w1, #0x4
   3e05c:	str	w1, [x0]
   3e060:	mov	w22, #0x0                   	// #0
   3e064:	b	3e000 <mpfr_atan2@@Base+0xc0>
   3e068:	mov	w20, #0x3                   	// #3
   3e06c:	b	3dfd0 <mpfr_atan2@@Base+0x90>
   3e070:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3e074:	ldr	x2, [x0, #2640]
   3e078:	add	x0, x0, #0xa50
   3e07c:	blr	x2
   3e080:	add	x1, x1, x0
   3e084:	mov	w2, w20
   3e088:	mov	x0, x19
   3e08c:	bl	c410 <mpfr_cache@plt>
   3e090:	mov	w22, w0
   3e094:	b	3e000 <mpfr_atan2@@Base+0xc0>
   3e098:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   3e09c:	str	w0, [x19, #8]
   3e0a0:	str	x1, [x19, #16]
   3e0a4:	b	3e060 <mpfr_atan2@@Base+0x120>
   3e0a8:	cmp	x21, x1
   3e0ac:	b.ne	3e0cc <mpfr_atan2@@Base+0x18c>  // b.any
   3e0b0:	ldr	w2, [x24, #8]
   3e0b4:	mov	w3, w20
   3e0b8:	mov	w1, #0x1                   	// #1
   3e0bc:	lsr	w2, w2, #31
   3e0c0:	mov	x0, x19
   3e0c4:	bl	3dd9c <mpfr_erfc@@Base+0x938>
   3e0c8:	b	3e090 <mpfr_atan2@@Base+0x150>
   3e0cc:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   3e0d0:	cmp	x0, x1
   3e0d4:	b.ne	3dfa8 <mpfr_atan2@@Base+0x68>  // b.any
   3e0d8:	cmp	x21, x0
   3e0dc:	b.ne	3e0b0 <mpfr_atan2@@Base+0x170>  // b.any
   3e0e0:	ldr	w0, [x25, #8]
   3e0e4:	cmp	w0, #0x0
   3e0e8:	b.le	3e100 <mpfr_atan2@@Base+0x1c0>
   3e0ec:	ldr	w2, [x24, #8]
   3e0f0:	mov	w3, w20
   3e0f4:	mov	w1, #0x2                   	// #2
   3e0f8:	lsr	w2, w2, #31
   3e0fc:	b	3e0c0 <mpfr_atan2@@Base+0x180>
   3e100:	mrs	x27, tpidr_el0
   3e104:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3e108:	ldr	x1, [x0, #2592]
   3e10c:	add	x0, x0, #0xa20
   3e110:	blr	x1
   3e114:	ldr	x6, [x19]
   3e118:	add	x28, sp, #0xa0
   3e11c:	ldr	w23, [x27, x0]
   3e120:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3e124:	ldr	x1, [x0, #2528]
   3e128:	add	x0, x0, #0x9e0
   3e12c:	blr	x1
   3e130:	add	x1, x27, x0
   3e134:	add	x25, x6, #0xa
   3e138:	ldr	x26, [x27, x0]
   3e13c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3e140:	ldr	x2, [x0, #2560]
   3e144:	add	x0, x0, #0xa00
   3e148:	blr	x2
   3e14c:	ldr	x2, [x27, x0]
   3e150:	str	x2, [sp, #104]
   3e154:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   3e158:	str	x2, [x1]
   3e15c:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   3e160:	mov	x22, #0x40                  	// #64
   3e164:	str	x1, [x27, x0]
   3e168:	mov	x1, x25
   3e16c:	mov	x0, x28
   3e170:	bl	cb10 <mpfr_init2@plt>
   3e174:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3e178:	ldr	x1, [x0, #2640]
   3e17c:	add	x0, x0, #0xa50
   3e180:	blr	x1
   3e184:	mov	w2, #0x0                   	// #0
   3e188:	add	x1, x27, x0
   3e18c:	mov	x0, x28
   3e190:	bl	c410 <mpfr_cache@plt>
   3e194:	mov	x1, x28
   3e198:	mov	w3, #0x0                   	// #0
   3e19c:	mov	x2, #0x3                   	// #3
   3e1a0:	mov	x0, x28
   3e1a4:	bl	bad0 <mpfr_mul_ui@plt>
   3e1a8:	mov	x1, x28
   3e1ac:	mov	x0, x28
   3e1b0:	mov	w3, #0x0                   	// #0
   3e1b4:	mov	x2, #0x2                   	// #2
   3e1b8:	bl	c980 <mpfr_div_2ui@plt>
   3e1bc:	ldr	x0, [sp, #176]
   3e1c0:	cmp	x0, x21
   3e1c4:	b.gt	3e1f4 <mpfr_atan2@@Base+0x2b4>
   3e1c8:	mov	x0, #0xfffffffffffffeff    	// #-257
   3e1cc:	movk	x0, #0x7fff, lsl #48
   3e1d0:	sub	x0, x0, x25
   3e1d4:	cmp	x0, x22
   3e1d8:	b.ge	3e2bc <mpfr_atan2@@Base+0x37c>  // b.tcont
   3e1dc:	adrp	x2, 5a000 <mpfr_bases@@Base+0x2a8>
   3e1e0:	add	x2, x2, #0xb5e
   3e1e4:	mov	w1, #0x88                  	// #136
   3e1e8:	adrp	x0, 5a000 <mpfr_bases@@Base+0x2a8>
   3e1ec:	add	x0, x0, #0xba6
   3e1f0:	bl	cbd0 <mpfr_assert_fail@plt>
   3e1f4:	ldr	x2, [sp, #160]
   3e1f8:	cmp	w20, #0x0
   3e1fc:	ldr	x0, [sp, #184]
   3e200:	sub	x1, x2, #0x1
   3e204:	ldr	x3, [x19]
   3e208:	asr	x1, x1, #6
   3e20c:	sub	x2, x2, #0x2
   3e210:	add	x1, x1, #0x1
   3e214:	cinc	x3, x3, eq  // eq = none
   3e218:	bl	c400 <mpfr_round_p@plt>
   3e21c:	cbz	w0, 3e1c8 <mpfr_atan2@@Base+0x288>
   3e220:	ldr	w0, [x24, #8]
   3e224:	tbz	w0, #31, 3e234 <mpfr_atan2@@Base+0x2f4>
   3e228:	ldr	w0, [sp, #168]
   3e22c:	neg	w0, w0
   3e230:	str	w0, [sp, #168]
   3e234:	ldr	w3, [sp, #168]
   3e238:	mov	w2, w20
   3e23c:	mov	x1, x28
   3e240:	mov	x0, x19
   3e244:	bl	c730 <mpfr_set4@plt>
   3e248:	mov	w22, w0
   3e24c:	mov	x0, x28
   3e250:	bl	c0f0 <mpfr_clear@plt>
   3e254:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3e258:	ldr	x1, [x0, #2592]
   3e25c:	add	x0, x0, #0xa20
   3e260:	blr	x1
   3e264:	add	x1, x27, x0
   3e268:	str	w23, [x27, x0]
   3e26c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3e270:	ldr	x2, [x0, #2528]
   3e274:	add	x0, x0, #0x9e0
   3e278:	blr	x2
   3e27c:	str	x26, [x27, x0]
   3e280:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3e284:	ldr	x2, [x0, #2560]
   3e288:	add	x0, x0, #0xa00
   3e28c:	blr	x2
   3e290:	ldr	x2, [sp, #104]
   3e294:	str	x2, [x27, x0]
   3e298:	ldr	x0, [x19, #16]
   3e29c:	cmp	x26, x0
   3e2a0:	b.gt	3e4e0 <mpfr_atan2@@Base+0x5a0>
   3e2a4:	cmp	x2, x0
   3e2a8:	b.lt	3e4e0 <mpfr_atan2@@Base+0x5a0>  // b.tstop
   3e2ac:	cbz	w22, 3e000 <mpfr_atan2@@Base+0xc0>
   3e2b0:	orr	w23, w23, #0x8
   3e2b4:	str	w23, [x1]
   3e2b8:	b	3e000 <mpfr_atan2@@Base+0xc0>
   3e2bc:	add	x25, x25, x22
   3e2c0:	mov	x0, #0x2                   	// #2
   3e2c4:	mov	x1, x25
   3e2c8:	sdiv	x22, x25, x0
   3e2cc:	mov	x0, x28
   3e2d0:	bl	bf50 <mpfr_set_prec@plt>
   3e2d4:	b	3e174 <mpfr_atan2@@Base+0x234>
   3e2d8:	ldr	w0, [x2, #8]
   3e2dc:	mrs	x21, tpidr_el0
   3e2e0:	cmp	w0, #0x0
   3e2e4:	b.le	3e364 <mpfr_atan2@@Base+0x424>
   3e2e8:	mov	x0, x2
   3e2ec:	bl	bf80 <mpfr_powerof2_raw@plt>
   3e2f0:	cbz	w0, 3e364 <mpfr_atan2@@Base+0x424>
   3e2f4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3e2f8:	ldr	x1, [x0, #2592]
   3e2fc:	add	x0, x0, #0xa20
   3e300:	blr	x1
   3e304:	add	x23, sp, #0xa0
   3e308:	ldr	x1, [x24]
   3e30c:	add	x22, x21, x0
   3e310:	ldr	w26, [x21, x0]
   3e314:	mov	x0, x23
   3e318:	bl	cb10 <mpfr_init2@plt>
   3e31c:	ldr	x2, [x25, #16]
   3e320:	mov	x1, x24
   3e324:	mov	x0, x23
   3e328:	mov	w3, #0x0                   	// #0
   3e32c:	sub	x2, x2, #0x1
   3e330:	bl	c4b0 <mpfr_div_2si@plt>
   3e334:	cbnz	w0, 3e358 <mpfr_atan2@@Base+0x418>
   3e338:	mov	w2, w20
   3e33c:	mov	x1, x23
   3e340:	mov	x0, x19
   3e344:	bl	c720 <mpfr_atan@plt>
   3e348:	mov	w22, w0
   3e34c:	mov	x0, x23
   3e350:	bl	c0f0 <mpfr_clear@plt>
   3e354:	b	3e000 <mpfr_atan2@@Base+0xc0>
   3e358:	mov	x0, x23
   3e35c:	bl	c0f0 <mpfr_clear@plt>
   3e360:	str	w26, [x22]
   3e364:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3e368:	ldr	x1, [x0, #2592]
   3e36c:	add	x0, x0, #0xa20
   3e370:	blr	x1
   3e374:	ldr	w0, [x21, x0]
   3e378:	str	w0, [sp, #104]
   3e37c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3e380:	ldr	x1, [x0, #2528]
   3e384:	add	x0, x0, #0x9e0
   3e388:	blr	x1
   3e38c:	add	x1, x21, x0
   3e390:	ldr	x28, [x21, x0]
   3e394:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3e398:	ldr	x2, [x0, #2560]
   3e39c:	add	x0, x0, #0xa00
   3e3a0:	blr	x2
   3e3a4:	ldr	x2, [x21, x0]
   3e3a8:	str	x2, [sp, #112]
   3e3ac:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   3e3b0:	str	x2, [x1]
   3e3b4:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   3e3b8:	str	x1, [x21, x0]
   3e3bc:	ldr	x0, [x19]
   3e3c0:	add	x22, x0, #0x3
   3e3c4:	cmp	x0, #0x1
   3e3c8:	b.eq	3e4f4 <mpfr_atan2@@Base+0x5b4>  // b.none
   3e3cc:	b.gt	3e3e8 <mpfr_atan2@@Base+0x4a8>
   3e3d0:	adrp	x2, 5a000 <mpfr_bases@@Base+0x2a8>
   3e3d4:	adrp	x0, 5a000 <mpfr_bases@@Base+0x2a8>
   3e3d8:	add	x2, x2, #0xbae
   3e3dc:	add	x0, x0, #0xba6
   3e3e0:	mov	w1, #0xb7                  	// #183
   3e3e4:	bl	cbd0 <mpfr_assert_fail@plt>
   3e3e8:	ldr	x0, [x19]
   3e3ec:	sub	x0, x0, #0x1
   3e3f0:	clz	x1, x0
   3e3f4:	mov	w0, #0x40                  	// #64
   3e3f8:	sub	w0, w0, w1
   3e3fc:	sxtw	x0, w0
   3e400:	add	x22, x22, x0
   3e404:	add	x23, sp, #0x80
   3e408:	mov	x0, x23
   3e40c:	mov	x1, x22
   3e410:	bl	cb10 <mpfr_init2@plt>
   3e414:	ldr	w0, [x25, #8]
   3e418:	cmp	w0, #0x0
   3e41c:	b.le	3e614 <mpfr_atan2@@Base+0x6d4>
   3e420:	mov	x27, #0xfffffffffffffeff    	// #-257
   3e424:	mov	x26, #0x40                  	// #64
   3e428:	movk	x27, #0x7fff, lsl #48
   3e42c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3e430:	ldr	x1, [x0, #2592]
   3e434:	add	x0, x0, #0xa20
   3e438:	blr	x1
   3e43c:	add	x4, x21, x0
   3e440:	mov	x1, x24
   3e444:	mov	x2, x25
   3e448:	mov	w3, #0x0                   	// #0
   3e44c:	str	wzr, [x21, x0]
   3e450:	mov	x0, x23
   3e454:	str	x4, [sp, #120]
   3e458:	bl	c6b0 <mpfr_div@plt>
   3e45c:	ldr	x4, [sp, #120]
   3e460:	ldr	w1, [x4]
   3e464:	cbnz	w0, 3e4fc <mpfr_atan2@@Base+0x5bc>
   3e468:	mov	w2, w20
   3e46c:	mov	x1, x23
   3e470:	mov	x0, x19
   3e474:	bl	c720 <mpfr_atan@plt>
   3e478:	mov	w22, w0
   3e47c:	mov	x0, x23
   3e480:	bl	c0f0 <mpfr_clear@plt>
   3e484:	ldr	w2, [sp, #104]
   3e488:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3e48c:	ldr	x1, [x0, #2592]
   3e490:	add	x0, x0, #0xa20
   3e494:	blr	x1
   3e498:	add	x1, x21, x0
   3e49c:	str	w2, [x21, x0]
   3e4a0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3e4a4:	ldr	x2, [x0, #2528]
   3e4a8:	add	x0, x0, #0x9e0
   3e4ac:	blr	x2
   3e4b0:	str	x28, [x21, x0]
   3e4b4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3e4b8:	ldr	x2, [x0, #2560]
   3e4bc:	add	x0, x0, #0xa00
   3e4c0:	blr	x2
   3e4c4:	ldr	x2, [sp, #112]
   3e4c8:	str	x2, [x21, x0]
   3e4cc:	ldr	x0, [x19, #16]
   3e4d0:	cmp	x28, x0
   3e4d4:	b.gt	3e4e0 <mpfr_atan2@@Base+0x5a0>
   3e4d8:	cmp	x2, x0
   3e4dc:	b.ge	3e784 <mpfr_atan2@@Base+0x844>  // b.tcont
   3e4e0:	mov	w2, w20
   3e4e4:	mov	w1, w22
   3e4e8:	mov	x0, x19
   3e4ec:	bl	cbc0 <mpfr_check_range@plt>
   3e4f0:	b	3e090 <mpfr_atan2@@Base+0x150>
   3e4f4:	mov	x0, #0x0                   	// #0
   3e4f8:	b	3e400 <mpfr_atan2@@Base+0x4c0>
   3e4fc:	tbz	w1, #0, 3e578 <mpfr_atan2@@Base+0x638>
   3e500:	cbnz	w20, 3e514 <mpfr_atan2@@Base+0x5d4>
   3e504:	ldr	x1, [sp, #144]
   3e508:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3e50c:	cmp	x1, x0
   3e510:	cset	w20, eq  // eq = none
   3e514:	mov	x0, x23
   3e518:	ldr	w22, [sp, #136]
   3e51c:	bl	c0f0 <mpfr_clear@plt>
   3e520:	mov	w2, w22
   3e524:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3e528:	ldr	x1, [x0, #2592]
   3e52c:	add	x0, x0, #0xa20
   3e530:	blr	x1
   3e534:	ldr	w1, [sp, #104]
   3e538:	str	w1, [x21, x0]
   3e53c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3e540:	ldr	x1, [x0, #2528]
   3e544:	add	x0, x0, #0x9e0
   3e548:	blr	x1
   3e54c:	str	x28, [x21, x0]
   3e550:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3e554:	ldr	x1, [x0, #2560]
   3e558:	add	x0, x0, #0xa00
   3e55c:	blr	x1
   3e560:	ldr	x1, [sp, #112]
   3e564:	str	x1, [x21, x0]
   3e568:	mov	w1, w20
   3e56c:	mov	x0, x19
   3e570:	bl	c450 <mpfr_underflow@plt>
   3e574:	b	3e090 <mpfr_atan2@@Base+0x150>
   3e578:	mov	x1, x23
   3e57c:	mov	x0, x23
   3e580:	mov	w2, #0x0                   	// #0
   3e584:	bl	c720 <mpfr_atan@plt>
   3e588:	ldr	x0, [sp, #144]
   3e58c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   3e590:	cmp	x0, x1
   3e594:	b.gt	3e5b4 <mpfr_atan2@@Base+0x674>
   3e598:	sub	x0, x27, x22
   3e59c:	cmp	x0, x26
   3e5a0:	b.ge	3e5f8 <mpfr_atan2@@Base+0x6b8>  // b.tcont
   3e5a4:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   3e5a8:	mov	w1, #0xef                  	// #239
   3e5ac:	add	x2, x2, #0x519
   3e5b0:	b	3e1e8 <mpfr_atan2@@Base+0x2a8>
   3e5b4:	ldr	x1, [sp, #128]
   3e5b8:	cmp	w20, #0x0
   3e5bc:	ldr	x0, [sp, #152]
   3e5c0:	sub	x1, x1, #0x1
   3e5c4:	ldr	x3, [x19]
   3e5c8:	asr	x1, x1, #6
   3e5cc:	sub	x2, x22, #0x2
   3e5d0:	add	x1, x1, #0x1
   3e5d4:	cinc	x3, x3, eq  // eq = none
   3e5d8:	bl	c400 <mpfr_round_p@plt>
   3e5dc:	cbz	w0, 3e598 <mpfr_atan2@@Base+0x658>
   3e5e0:	ldr	w3, [sp, #136]
   3e5e4:	mov	w2, w20
   3e5e8:	mov	x1, x23
   3e5ec:	mov	x0, x19
   3e5f0:	bl	c730 <mpfr_set4@plt>
   3e5f4:	b	3e478 <mpfr_atan2@@Base+0x538>
   3e5f8:	add	x22, x22, x26
   3e5fc:	mov	x0, #0x2                   	// #2
   3e600:	mov	x1, x22
   3e604:	sdiv	x26, x22, x0
   3e608:	mov	x0, x23
   3e60c:	bl	bf50 <mpfr_set_prec@plt>
   3e610:	b	3e42c <mpfr_atan2@@Base+0x4ec>
   3e614:	mov	x27, #0x40                  	// #64
   3e618:	add	x26, sp, #0xa0
   3e61c:	mov	x1, x22
   3e620:	mov	x0, x26
   3e624:	bl	cb10 <mpfr_init2@plt>
   3e628:	mov	w3, #0x0                   	// #0
   3e62c:	mov	x2, x25
   3e630:	mov	x1, x24
   3e634:	mov	x0, x23
   3e638:	bl	c6b0 <mpfr_div@plt>
   3e63c:	mov	x1, x23
   3e640:	mov	w0, #0x1                   	// #1
   3e644:	mov	w2, #0x0                   	// #0
   3e648:	str	w0, [sp, #136]
   3e64c:	mov	x0, x23
   3e650:	bl	c720 <mpfr_atan@plt>
   3e654:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3e658:	ldr	x1, [x0, #2640]
   3e65c:	add	x0, x0, #0xa50
   3e660:	blr	x1
   3e664:	mov	w2, #0x0                   	// #0
   3e668:	add	x1, x21, x0
   3e66c:	mov	x0, x26
   3e670:	bl	c410 <mpfr_cache@plt>
   3e674:	ldr	x4, [sp, #144]
   3e678:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3e67c:	cmp	x4, x0
   3e680:	b.ne	3e69c <mpfr_atan2@@Base+0x75c>  // b.any
   3e684:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3e688:	ldr	x1, [x0, #2528]
   3e68c:	add	x0, x0, #0x9e0
   3e690:	blr	x1
   3e694:	ldr	x4, [x21, x0]
   3e698:	sub	x4, x4, #0x1
   3e69c:	mov	x2, x23
   3e6a0:	mov	x1, x26
   3e6a4:	mov	x0, x23
   3e6a8:	mov	w3, #0x0                   	// #0
   3e6ac:	str	x4, [sp, #120]
   3e6b0:	bl	bbf0 <mpfr_sub@plt>
   3e6b4:	ldr	w0, [x24, #8]
   3e6b8:	ldr	x4, [sp, #120]
   3e6bc:	tbz	w0, #31, 3e6cc <mpfr_atan2@@Base+0x78c>
   3e6c0:	ldr	w0, [sp, #136]
   3e6c4:	neg	w0, w0
   3e6c8:	str	w0, [sp, #136]
   3e6cc:	ldr	x0, [sp, #144]
   3e6d0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   3e6d4:	ldr	x2, [sp, #176]
   3e6d8:	sub	x4, x4, x0
   3e6dc:	add	x4, x4, #0x1
   3e6e0:	sub	x2, x2, x0
   3e6e4:	subs	x2, x2, #0x1
   3e6e8:	csinv	x2, x2, xzr, pl  // pl = nfrst
   3e6ec:	cmp	x2, x4
   3e6f0:	csel	x2, x2, x4, ge  // ge = tcont
   3e6f4:	cmp	x0, x1
   3e6f8:	add	x2, x2, #0x2
   3e6fc:	b.gt	3e724 <mpfr_atan2@@Base+0x7e4>
   3e700:	mov	x0, #0xfffffffffffffeff    	// #-257
   3e704:	movk	x0, #0x7fff, lsl #48
   3e708:	sub	x0, x0, x22
   3e70c:	cmp	x0, x27
   3e710:	b.ge	3e75c <mpfr_atan2@@Base+0x81c>  // b.tcont
   3e714:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   3e718:	mov	w1, #0x10b                 	// #267
   3e71c:	add	x2, x2, #0x519
   3e720:	b	3e1e8 <mpfr_atan2@@Base+0x2a8>
   3e724:	ldr	x1, [sp, #128]
   3e728:	cmp	w20, #0x0
   3e72c:	ldr	x0, [sp, #152]
   3e730:	sub	x1, x1, #0x1
   3e734:	ldr	x3, [x19]
   3e738:	asr	x1, x1, #6
   3e73c:	sub	x2, x22, x2
   3e740:	add	x1, x1, #0x1
   3e744:	cinc	x3, x3, eq  // eq = none
   3e748:	bl	c400 <mpfr_round_p@plt>
   3e74c:	cbz	w0, 3e700 <mpfr_atan2@@Base+0x7c0>
   3e750:	mov	x0, x26
   3e754:	bl	c0f0 <mpfr_clear@plt>
   3e758:	b	3e5e0 <mpfr_atan2@@Base+0x6a0>
   3e75c:	add	x22, x22, x27
   3e760:	mov	x27, #0x2                   	// #2
   3e764:	mov	x1, x22
   3e768:	mov	x0, x23
   3e76c:	bl	bf50 <mpfr_set_prec@plt>
   3e770:	sdiv	x27, x22, x27
   3e774:	mov	x1, x22
   3e778:	mov	x0, x26
   3e77c:	bl	bf50 <mpfr_set_prec@plt>
   3e780:	b	3e628 <mpfr_atan2@@Base+0x6e8>
   3e784:	cbz	w22, 3e000 <mpfr_atan2@@Base+0xc0>
   3e788:	ldr	w0, [sp, #104]
   3e78c:	orr	w0, w0, #0x8
   3e790:	str	w0, [x1]
   3e794:	b	3e000 <mpfr_atan2@@Base+0xc0>

000000000003e798 <mpfr_subnormalize@@Base>:
   3e798:	stp	x29, x30, [sp, #-112]!
   3e79c:	mov	x29, sp
   3e7a0:	stp	x25, x26, [sp, #64]
   3e7a4:	mov	w26, w1
   3e7a8:	ldr	x1, [x0, #16]
   3e7ac:	stp	x19, x20, [sp, #16]
   3e7b0:	stp	x21, x22, [sp, #32]
   3e7b4:	stp	x23, x24, [sp, #48]
   3e7b8:	mov	x24, x0
   3e7bc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3e7c0:	cmp	x1, x0
   3e7c4:	b.le	3e7f8 <mpfr_subnormalize@@Base+0x60>
   3e7c8:	mrs	x21, tpidr_el0
   3e7cc:	mov	w22, w2
   3e7d0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3e7d4:	ldr	x2, [x0, #2528]
   3e7d8:	add	x0, x0, #0x9e0
   3e7dc:	blr	x2
   3e7e0:	ldr	x2, [x21, x0]
   3e7e4:	ldr	x0, [x24]
   3e7e8:	add	x0, x2, x0
   3e7ec:	sub	x0, x0, #0x1
   3e7f0:	cmp	x1, x0
   3e7f4:	b.lt	3e848 <mpfr_subnormalize@@Base+0xb0>  // b.tstop
   3e7f8:	cbnz	w26, 3e81c <mpfr_subnormalize@@Base+0x84>
   3e7fc:	mov	w19, #0x0                   	// #0
   3e800:	mov	w0, w19
   3e804:	ldp	x19, x20, [sp, #16]
   3e808:	ldp	x21, x22, [sp, #32]
   3e80c:	ldp	x23, x24, [sp, #48]
   3e810:	ldp	x25, x26, [sp, #64]
   3e814:	ldp	x29, x30, [sp], #112
   3e818:	ret
   3e81c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3e820:	ldr	x1, [x0, #2592]
   3e824:	add	x0, x0, #0xa20
   3e828:	blr	x1
   3e82c:	mrs	x1, tpidr_el0
   3e830:	add	x0, x1, x0
   3e834:	ldr	w1, [x0]
   3e838:	orr	w1, w1, #0x8
   3e83c:	str	w1, [x0]
   3e840:	mov	w19, w26
   3e844:	b	3e800 <mpfr_subnormalize@@Base+0x68>
   3e848:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3e84c:	ldr	x3, [x0, #2592]
   3e850:	add	x0, x0, #0xa20
   3e854:	blr	x3
   3e858:	add	x20, x21, x0
   3e85c:	ldr	w19, [x24, #8]
   3e860:	cmp	x1, x2
   3e864:	ldr	w0, [x20]
   3e868:	orr	w0, w0, #0x1
   3e86c:	str	w0, [x20]
   3e870:	b.ne	3e98c <mpfr_subnormalize@@Base+0x1f4>  // b.any
   3e874:	mov	x0, x24
   3e878:	bl	bf80 <mpfr_powerof2_raw@plt>
   3e87c:	cbz	w0, 3e894 <mpfr_subnormalize@@Base+0xfc>
   3e880:	cbz	w26, 3e7fc <mpfr_subnormalize@@Base+0x64>
   3e884:	ldr	w0, [x20]
   3e888:	orr	w0, w0, #0x8
   3e88c:	str	w0, [x20]
   3e890:	b	3e840 <mpfr_subnormalize@@Base+0xa8>
   3e894:	cbnz	w22, 3e92c <mpfr_subnormalize@@Base+0x194>
   3e898:	ldr	x0, [x24]
   3e89c:	ldr	x2, [x24, #24]
   3e8a0:	sub	x0, x0, #0x1
   3e8a4:	asr	x0, x0, #6
   3e8a8:	ldr	x1, [x2, x0, lsl #3]
   3e8ac:	tbz	x1, #62, 3e944 <mpfr_subnormalize@@Base+0x1ac>
   3e8b0:	and	x1, x1, #0x3fffffffffffffff
   3e8b4:	cbnz	x1, 3e8dc <mpfr_subnormalize@@Base+0x144>
   3e8b8:	sub	x0, x0, #0x1
   3e8bc:	cmn	x0, #0x1
   3e8c0:	b.ne	3e924 <mpfr_subnormalize@@Base+0x18c>  // b.any
   3e8c4:	cmp	w26, #0x0
   3e8c8:	ccmp	w19, #0x0, #0x4, gt
   3e8cc:	b.gt	3e944 <mpfr_subnormalize@@Base+0x1ac>
   3e8d0:	cmp	w26, #0x0
   3e8d4:	ccmp	w19, #0x0, #0x0, lt  // lt = tstop
   3e8d8:	b.lt	3e944 <mpfr_subnormalize@@Base+0x1ac>  // b.tstop
   3e8dc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3e8e0:	ldr	x1, [x0, #2528]
   3e8e4:	add	x0, x0, #0x9e0
   3e8e8:	blr	x1
   3e8ec:	ldr	x1, [x21, x0]
   3e8f0:	mov	x0, x24
   3e8f4:	add	x1, x1, #0x1
   3e8f8:	bl	c340 <mpfr_setmin@plt>
   3e8fc:	cbz	w19, 3e800 <mpfr_subnormalize@@Base+0x68>
   3e900:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3e904:	ldr	x1, [x0, #2592]
   3e908:	add	x0, x0, #0xa20
   3e90c:	blr	x1
   3e910:	add	x0, x21, x0
   3e914:	ldr	w1, [x0]
   3e918:	orr	w1, w1, #0x8
   3e91c:	str	w1, [x0]
   3e920:	b	3e800 <mpfr_subnormalize@@Base+0x68>
   3e924:	ldr	x1, [x2, x0, lsl #3]
   3e928:	b	3e8b4 <mpfr_subnormalize@@Base+0x11c>
   3e92c:	cmp	w22, #0x1
   3e930:	b.eq	3e944 <mpfr_subnormalize@@Base+0x1ac>  // b.none
   3e934:	ldr	w2, [x24, #8]
   3e938:	add	w22, w22, w2, lsr #31
   3e93c:	cmp	w22, #0x3
   3e940:	b.ne	3e8dc <mpfr_subnormalize@@Base+0x144>  // b.any
   3e944:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3e948:	ldr	x1, [x0, #2528]
   3e94c:	add	x0, x0, #0x9e0
   3e950:	blr	x1
   3e954:	ldr	x1, [x21, x0]
   3e958:	mov	x0, x24
   3e95c:	bl	c340 <mpfr_setmin@plt>
   3e960:	cbz	w19, 3e800 <mpfr_subnormalize@@Base+0x68>
   3e964:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3e968:	ldr	x1, [x0, #2592]
   3e96c:	add	x0, x0, #0xa20
   3e970:	blr	x1
   3e974:	add	x0, x21, x0
   3e978:	neg	w19, w19
   3e97c:	ldr	w1, [x0]
   3e980:	orr	w1, w1, #0x8
   3e984:	str	w1, [x0]
   3e988:	b	3e800 <mpfr_subnormalize@@Base+0x68>
   3e98c:	mov	x20, #0x1                   	// #1
   3e990:	sub	x2, x20, x2
   3e994:	add	x23, sp, #0x50
   3e998:	add	x1, x2, x1
   3e99c:	mov	x0, x23
   3e9a0:	bl	cb10 <mpfr_init2@plt>
   3e9a4:	str	w19, [sp, #88]
   3e9a8:	ldr	x1, [x24]
   3e9ac:	ldp	x0, x5, [x24, #16]
   3e9b0:	sub	x3, x1, #0x1
   3e9b4:	ldr	x4, [sp, #80]
   3e9b8:	str	x0, [sp, #96]
   3e9bc:	asr	x3, x3, #6
   3e9c0:	sub	x0, x4, #0x1
   3e9c4:	cmp	x1, x4
   3e9c8:	ldr	x25, [sp, #104]
   3e9cc:	asr	x0, x0, #6
   3e9d0:	b.gt	3ea88 <mpfr_subnormalize@@Base+0x2f0>
   3e9d4:	add	x2, x3, x20
   3e9d8:	sub	x3, x0, x3
   3e9dc:	add	x0, x25, x3, lsl #3
   3e9e0:	lsl	x19, x3, #3
   3e9e4:	cmp	x5, x0
   3e9e8:	b.eq	3e9f8 <mpfr_subnormalize@@Base+0x260>  // b.none
   3e9ec:	lsl	x2, x2, #3
   3e9f0:	mov	x1, x5
   3e9f4:	bl	ba90 <memcpy@plt>
   3e9f8:	mov	x2, x19
   3e9fc:	mov	w19, #0x0                   	// #0
   3ea00:	mov	x0, x25
   3ea04:	mov	w1, #0x0                   	// #0
   3ea08:	bl	c1a0 <memset@plt>
   3ea0c:	cbz	w26, 3ea58 <mpfr_subnormalize@@Base+0x2c0>
   3ea10:	cbnz	w22, 3ec44 <mpfr_subnormalize@@Base+0x4ac>
   3ea14:	cmp	w19, #0x2
   3ea18:	ccmn	w19, #0x2, #0x4, ne  // ne = any
   3ea1c:	b.ne	3ec44 <mpfr_subnormalize@@Base+0x4ac>  // b.any
   3ea20:	tbnz	w19, #31, 3ecb0 <mpfr_subnormalize@@Base+0x518>
   3ea24:	tbnz	w26, #31, 3ea58 <mpfr_subnormalize@@Base+0x2c0>
   3ea28:	cmp	w19, #0x0
   3ea2c:	b.le	3ea58 <mpfr_subnormalize@@Base+0x2c0>
   3ea30:	mov	w1, #0x1                   	// #1
   3ea34:	ldr	w2, [x24, #8]
   3ea38:	cmp	w2, #0x0
   3ea3c:	cset	w0, gt
   3ea40:	csinv	w0, w0, wzr, ge  // ge = tcont
   3ea44:	cmp	w1, w0
   3ea48:	mov	x0, x23
   3ea4c:	b.ne	3ec3c <mpfr_subnormalize@@Base+0x4a4>  // b.any
   3ea50:	bl	c4f0 <mpfr_nexttozero@plt>
   3ea54:	neg	w19, w19
   3ea58:	ldr	w3, [sp, #88]
   3ea5c:	mov	w2, w22
   3ea60:	mov	x1, x23
   3ea64:	mov	x0, x24
   3ea68:	bl	c730 <mpfr_set4@plt>
   3ea6c:	cbz	w0, 3ec50 <mpfr_subnormalize@@Base+0x4b8>
   3ea70:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   3ea74:	adrp	x0, 5a000 <mpfr_bases@@Base+0x2a8>
   3ea78:	add	x2, x2, #0xfce
   3ea7c:	add	x0, x0, #0xbc9
   3ea80:	mov	w1, #0xa0                  	// #160
   3ea84:	bl	cbd0 <mpfr_assert_fail@plt>
   3ea88:	sub	x3, x3, x0
   3ea8c:	neg	w4, w4
   3ea90:	add	x2, x0, #0x1
   3ea94:	ands	w4, w4, #0x3f
   3ea98:	lsl	x6, x3, #3
   3ea9c:	add	x1, x5, x3, lsl #3
   3eaa0:	b.eq	3eb3c <mpfr_subnormalize@@Base+0x3a4>  // b.none
   3eaa4:	ldr	x0, [x5, x6]
   3eaa8:	sub	w4, w4, #0x1
   3eaac:	cmp	w22, #0x0
   3eab0:	lsl	x20, x20, x4
   3eab4:	and	x9, x0, x20
   3eab8:	sub	x20, x20, #0x1
   3eabc:	ccmp	x9, #0x0, #0x4, ne  // ne = any
   3eac0:	and	x0, x20, x0
   3eac4:	b.ne	3eae8 <mpfr_subnormalize@@Base+0x350>  // b.any
   3eac8:	mov	x8, #0xfffffffffffffff8    	// #-8
   3eacc:	madd	x8, x3, x8, x1
   3ead0:	cmp	x3, #0x0
   3ead4:	sub	x3, x3, #0x1
   3ead8:	cset	w7, ne  // ne = any
   3eadc:	cmp	x0, #0x0
   3eae0:	csel	w7, w7, wzr, eq  // eq = none
   3eae4:	cbnz	w7, 3eb34 <mpfr_subnormalize@@Base+0x39c>
   3eae8:	mov	x20, #0x2                   	// #2
   3eaec:	lsl	x20, x20, x4
   3eaf0:	cmp	w22, #0x5
   3eaf4:	b.eq	3eca8 <mpfr_subnormalize@@Base+0x510>  // b.none
   3eaf8:	cbnz	w22, 3ec8c <mpfr_subnormalize@@Base+0x4f4>
   3eafc:	cbnz	x9, 3eb88 <mpfr_subnormalize@@Base+0x3f0>
   3eb00:	orr	x0, x9, x0
   3eb04:	cmp	x0, #0x0
   3eb08:	csneg	w19, wzr, w19, eq  // eq = none
   3eb0c:	cmp	x25, x1
   3eb10:	b.eq	3eb20 <mpfr_subnormalize@@Base+0x388>  // b.none
   3eb14:	lsl	x2, x2, #3
   3eb18:	mov	x0, x25
   3eb1c:	bl	ba90 <memcpy@plt>
   3eb20:	ldr	x4, [x25]
   3eb24:	neg	x20, x20
   3eb28:	and	x4, x4, x20
   3eb2c:	str	x4, [x25]
   3eb30:	b	3ea0c <mpfr_subnormalize@@Base+0x274>
   3eb34:	ldr	x0, [x8, x3, lsl #3]
   3eb38:	b	3ead0 <mpfr_subnormalize@@Base+0x338>
   3eb3c:	ldur	x4, [x1, #-8]
   3eb40:	cmp	w22, #0x0
   3eb44:	and	x9, x4, #0x8000000000000000
   3eb48:	and	x0, x4, #0x7fffffffffffffff
   3eb4c:	ccmp	x4, #0x0, #0x0, ne  // ne = any
   3eb50:	b.lt	3ec84 <mpfr_subnormalize@@Base+0x4ec>  // b.tstop
   3eb54:	mov	x7, #0xfffffffffffffff8    	// #-8
   3eb58:	sub	x4, x3, #0x1
   3eb5c:	madd	x3, x3, x7, x1
   3eb60:	cmp	x4, #0x0
   3eb64:	sub	x4, x4, #0x1
   3eb68:	cset	w7, ne  // ne = any
   3eb6c:	cmp	x0, #0x0
   3eb70:	csel	w7, w7, wzr, eq  // eq = none
   3eb74:	cbnz	w7, 3eb80 <mpfr_subnormalize@@Base+0x3e8>
   3eb78:	mov	x20, #0x1                   	// #1
   3eb7c:	b	3eaf0 <mpfr_subnormalize@@Base+0x358>
   3eb80:	ldr	x0, [x3, x4, lsl #3]
   3eb84:	b	3eb60 <mpfr_subnormalize@@Base+0x3c8>
   3eb88:	ldr	x3, [x5, x6]
   3eb8c:	cbnz	x0, 3eba8 <mpfr_subnormalize@@Base+0x410>
   3eb90:	tst	x3, x20
   3eb94:	b.ne	3eba4 <mpfr_subnormalize@@Base+0x40c>  // b.any
   3eb98:	mov	w0, #0xfffffffe            	// #-2
   3eb9c:	mul	w19, w19, w0
   3eba0:	b	3eb0c <mpfr_subnormalize@@Base+0x374>
   3eba4:	lsl	w19, w19, #1
   3eba8:	ldr	x0, [x5, x6]
   3ebac:	adds	x0, x0, x20
   3ebb0:	str	x0, [x25]
   3ebb4:	b.cs	3ebfc <mpfr_subnormalize@@Base+0x464>  // b.hs, b.nlast
   3ebb8:	cmp	x25, x1
   3ebbc:	b.eq	3eb20 <mpfr_subnormalize@@Base+0x388>  // b.none
   3ebc0:	mov	x0, #0x1                   	// #1
   3ebc4:	b	3ec30 <mpfr_subnormalize@@Base+0x498>
   3ebc8:	ldr	x3, [x1, x0, lsl #3]
   3ebcc:	add	x3, x3, #0x1
   3ebd0:	str	x3, [x25, x0, lsl #3]
   3ebd4:	add	x0, x0, #0x1
   3ebd8:	cbz	x3, 3ec00 <mpfr_subnormalize@@Base+0x468>
   3ebdc:	cmp	x25, x1
   3ebe0:	b.eq	3eb20 <mpfr_subnormalize@@Base+0x388>  // b.none
   3ebe4:	cmp	x2, x0
   3ebe8:	b.le	3eb20 <mpfr_subnormalize@@Base+0x388>
   3ebec:	ldr	x3, [x1, x0, lsl #3]
   3ebf0:	str	x3, [x25, x0, lsl #3]
   3ebf4:	add	x0, x0, #0x1
   3ebf8:	b	3ebe4 <mpfr_subnormalize@@Base+0x44c>
   3ebfc:	mov	x0, #0x1                   	// #1
   3ec00:	cmp	x2, x0
   3ec04:	b.gt	3ebc8 <mpfr_subnormalize@@Base+0x430>
   3ec08:	add	x2, x25, x2, lsl #3
   3ec0c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3ec10:	stur	x0, [x2, #-8]
   3ec14:	ldr	x0, [sp, #96]
   3ec18:	add	x0, x0, #0x1
   3ec1c:	str	x0, [sp, #96]
   3ec20:	b	3eb20 <mpfr_subnormalize@@Base+0x388>
   3ec24:	ldr	x3, [x1, x0, lsl #3]
   3ec28:	str	x3, [x25, x0, lsl #3]
   3ec2c:	add	x0, x0, #0x1
   3ec30:	cmp	x2, x0
   3ec34:	b.gt	3ec24 <mpfr_subnormalize@@Base+0x48c>
   3ec38:	b	3eb20 <mpfr_subnormalize@@Base+0x388>
   3ec3c:	bl	c700 <mpfr_nexttoinf@plt>
   3ec40:	b	3ea54 <mpfr_subnormalize@@Base+0x2bc>
   3ec44:	cmp	w19, #0x0
   3ec48:	csel	w19, w19, w26, ne  // ne = any
   3ec4c:	b	3ea58 <mpfr_subnormalize@@Base+0x2c0>
   3ec50:	ldr	x1, [x24, #16]
   3ec54:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3ec58:	cmp	x1, x0
   3ec5c:	b.gt	3ec78 <mpfr_subnormalize@@Base+0x4e0>
   3ec60:	adrp	x2, 5a000 <mpfr_bases@@Base+0x2a8>
   3ec64:	adrp	x0, 5a000 <mpfr_bases@@Base+0x2a8>
   3ec68:	add	x2, x2, #0xbd5
   3ec6c:	add	x0, x0, #0xbc9
   3ec70:	mov	w1, #0xa1                  	// #161
   3ec74:	bl	cbd0 <mpfr_assert_fail@plt>
   3ec78:	mov	x0, x23
   3ec7c:	bl	c0f0 <mpfr_clear@plt>
   3ec80:	b	3e8fc <mpfr_subnormalize@@Base+0x164>
   3ec84:	cmp	w22, #0x5
   3ec88:	b.eq	3eca8 <mpfr_subnormalize@@Base+0x510>  // b.none
   3ec8c:	cmp	w22, #0x1
   3ec90:	b.eq	3eb00 <mpfr_subnormalize@@Base+0x368>  // b.none
   3ec94:	add	w3, w22, w19, lsr #31
   3ec98:	cmp	w3, #0x3
   3ec9c:	b.eq	3eb00 <mpfr_subnormalize@@Base+0x368>  // b.none
   3eca0:	orr	x0, x9, x0
   3eca4:	cbnz	x0, 3eba8 <mpfr_subnormalize@@Base+0x410>
   3eca8:	mov	w19, #0x0                   	// #0
   3ecac:	b	3eb0c <mpfr_subnormalize@@Base+0x374>
   3ecb0:	tbz	w26, #31, 3ea58 <mpfr_subnormalize@@Base+0x2c0>
   3ecb4:	mov	w1, #0xffffffff            	// #-1
   3ecb8:	b	3ea34 <mpfr_subnormalize@@Base+0x29c>
   3ecbc:	stp	x29, x30, [sp, #-128]!
   3ecc0:	mov	x29, sp
   3ecc4:	stp	x19, x20, [sp, #16]
   3ecc8:	mov	x20, x1
   3eccc:	mov	x19, x3
   3ecd0:	stp	x21, x22, [sp, #32]
   3ecd4:	mov	x22, x2
   3ecd8:	stp	x23, x24, [sp, #48]
   3ecdc:	mov	x23, x0
   3ece0:	stp	x25, x26, [sp, #64]
   3ece4:	mov	x25, x4
   3ece8:	add	x4, x3, #0x1
   3ecec:	cmp	x4, x25
   3ecf0:	b.ne	3ed78 <mpfr_subnormalize@@Base+0x5e0>  // b.any
   3ecf4:	cbnz	x3, 3ed34 <mpfr_subnormalize@@Base+0x59c>
   3ecf8:	mov	x0, x20
   3ecfc:	mov	x1, #0x1                   	// #1
   3ed00:	bl	bd30 <__gmpz_set_ui@plt>
   3ed04:	mov	x0, x22
   3ed08:	mov	x1, #0x1                   	// #1
   3ed0c:	bl	bd30 <__gmpz_set_ui@plt>
   3ed10:	mov	x1, x20
   3ed14:	mov	x0, x23
   3ed18:	bl	c020 <__gmpz_set@plt>
   3ed1c:	ldp	x19, x20, [sp, #16]
   3ed20:	ldp	x21, x22, [sp, #32]
   3ed24:	ldp	x23, x24, [sp, #48]
   3ed28:	ldp	x25, x26, [sp, #64]
   3ed2c:	ldp	x29, x30, [sp], #128
   3ed30:	ret
   3ed34:	lsl	x21, x3, #1
   3ed38:	mov	x0, x20
   3ed3c:	sub	x1, x21, #0x1
   3ed40:	bl	bd30 <__gmpz_set_ui@plt>
   3ed44:	mov	x2, x19
   3ed48:	mov	x1, x20
   3ed4c:	mov	x0, x20
   3ed50:	bl	c190 <__gmpz_mul_ui@plt>
   3ed54:	add	x1, x21, #0x1
   3ed58:	mov	x0, x22
   3ed5c:	mov	x2, #0x2                   	// #2
   3ed60:	bl	c570 <__gmpz_ui_pow_ui@plt>
   3ed64:	mov	x1, x22
   3ed68:	mov	x0, x22
   3ed6c:	mov	x2, #0x1                   	// #1
   3ed70:	bl	c290 <__gmpz_mul_2exp@plt>
   3ed74:	b	3ed10 <mpfr_subnormalize@@Base+0x578>
   3ed78:	add	x19, x3, x25
   3ed7c:	add	x21, sp, #0x50
   3ed80:	add	x26, sp, #0x60
   3ed84:	add	x24, sp, #0x70
   3ed88:	lsr	x19, x19, #1
   3ed8c:	mov	x4, x19
   3ed90:	bl	3ecbc <mpfr_subnormalize@@Base+0x524>
   3ed94:	mov	x0, x21
   3ed98:	bl	c010 <mpfr_mpz_init@plt>
   3ed9c:	mov	x0, x26
   3eda0:	bl	c010 <mpfr_mpz_init@plt>
   3eda4:	mov	x0, x24
   3eda8:	bl	c010 <mpfr_mpz_init@plt>
   3edac:	mov	x4, x25
   3edb0:	mov	x3, x19
   3edb4:	mov	x2, x24
   3edb8:	mov	x1, x26
   3edbc:	mov	x0, x21
   3edc0:	bl	3ecbc <mpfr_subnormalize@@Base+0x524>
   3edc4:	mov	x2, x24
   3edc8:	mov	x1, x23
   3edcc:	mov	x0, x23
   3edd0:	bl	c070 <__gmpz_mul@plt>
   3edd4:	mov	x2, x20
   3edd8:	mov	x1, x21
   3eddc:	mov	x0, x21
   3ede0:	bl	c070 <__gmpz_mul@plt>
   3ede4:	mov	x2, x21
   3ede8:	mov	x1, x23
   3edec:	mov	x0, x23
   3edf0:	bl	ca50 <__gmpz_add@plt>
   3edf4:	mov	x2, x26
   3edf8:	mov	x1, x20
   3edfc:	mov	x0, x20
   3ee00:	bl	c070 <__gmpz_mul@plt>
   3ee04:	mov	x2, x24
   3ee08:	mov	x1, x22
   3ee0c:	mov	x0, x22
   3ee10:	bl	c070 <__gmpz_mul@plt>
   3ee14:	mov	x0, x21
   3ee18:	bl	c200 <mpfr_mpz_clear@plt>
   3ee1c:	mov	x0, x26
   3ee20:	bl	c200 <mpfr_mpz_clear@plt>
   3ee24:	mov	x0, x24
   3ee28:	bl	c200 <mpfr_mpz_clear@plt>
   3ee2c:	b	3ed1c <mpfr_subnormalize@@Base+0x584>

000000000003ee30 <mpfr_const_catalan_internal@@Base>:
   3ee30:	stp	x29, x30, [sp, #-400]!
   3ee34:	mov	x29, sp
   3ee38:	stp	x21, x22, [sp, #32]
   3ee3c:	ldr	x22, [x0]
   3ee40:	stp	x19, x20, [sp, #16]
   3ee44:	stp	x23, x24, [sp, #48]
   3ee48:	cmp	x22, #0x1
   3ee4c:	stp	x25, x26, [sp, #64]
   3ee50:	stp	x27, x28, [sp, #80]
   3ee54:	str	x0, [sp, #96]
   3ee58:	str	w1, [sp, #108]
   3ee5c:	b.eq	3eea8 <mpfr_const_catalan_internal@@Base+0x78>  // b.none
   3ee60:	b.gt	3ee7c <mpfr_const_catalan_internal@@Base+0x4c>
   3ee64:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   3ee68:	add	x2, x2, #0x483
   3ee6c:	mov	w1, #0x74                  	// #116
   3ee70:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   3ee74:	add	x0, x0, #0x48c
   3ee78:	bl	cbd0 <mpfr_assert_fail@plt>
   3ee7c:	sub	x19, x22, #0x1
   3ee80:	clz	x0, x19
   3ee84:	mov	w19, #0x40                  	// #64
   3ee88:	sub	w19, w19, w0
   3ee8c:	sxtw	x19, w19
   3ee90:	add	x19, x19, x22
   3ee94:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   3ee98:	add	x21, x19, #0x7
   3ee9c:	cmp	x21, x0
   3eea0:	b.lt	3eeb0 <mpfr_const_catalan_internal@@Base+0x80>  // b.tstop
   3eea4:	bl	c970 <mpfr_abort_prec_max@plt>
   3eea8:	mov	x19, #0x0                   	// #0
   3eeac:	b	3ee90 <mpfr_const_catalan_internal@@Base+0x60>
   3eeb0:	add	x19, x19, #0x6
   3eeb4:	mov	x0, #0x40                  	// #64
   3eeb8:	sdiv	x19, x19, x0
   3eebc:	add	x19, x19, #0x1
   3eec0:	add	x0, x19, x19, lsl #1
   3eec4:	cmp	x0, #0x10
   3eec8:	b.le	3f070 <mpfr_const_catalan_internal@@Base+0x240>
   3eecc:	mov	x0, #0x18                  	// #24
   3eed0:	mul	x0, x19, x0
   3eed4:	str	x0, [sp, #256]
   3eed8:	bl	cd90 <mpfr_allocate_func@plt>
   3eedc:	str	x0, [sp, #264]
   3eee0:	mov	w0, #0x1                   	// #1
   3eee4:	add	x27, sp, #0x80
   3eee8:	str	x21, [sp, #160]
   3eeec:	ldr	x1, [sp, #264]
   3eef0:	str	w0, [sp, #168]
   3eef4:	str	x1, [sp, #184]
   3eef8:	add	x25, sp, #0x90
   3eefc:	str	x21, [sp, #192]
   3ef00:	add	x20, sp, #0xa0
   3ef04:	add	x2, x1, x19, lsl #3
   3ef08:	add	x19, x1, x19, lsl #4
   3ef0c:	str	x19, [sp, #248]
   3ef10:	add	x19, sp, #0x70
   3ef14:	str	w0, [sp, #200]
   3ef18:	add	x23, sp, #0xc0
   3ef1c:	str	x2, [sp, #216]
   3ef20:	add	x28, sp, #0xe0
   3ef24:	str	x21, [sp, #224]
   3ef28:	mov	x24, #0x40                  	// #64
   3ef2c:	str	w0, [sp, #232]
   3ef30:	mov	x0, x19
   3ef34:	bl	c010 <mpfr_mpz_init@plt>
   3ef38:	mov	x0, x27
   3ef3c:	bl	c010 <mpfr_mpz_init@plt>
   3ef40:	mov	x0, x25
   3ef44:	bl	c010 <mpfr_mpz_init@plt>
   3ef48:	mov	w2, #0x2                   	// #2
   3ef4c:	mov	x1, #0x3                   	// #3
   3ef50:	mov	x0, x20
   3ef54:	bl	c8d0 <mpfr_sqrt_ui@plt>
   3ef58:	mov	w3, #0x2                   	// #2
   3ef5c:	mov	x1, x20
   3ef60:	mov	x2, #0x2                   	// #2
   3ef64:	mov	x0, x20
   3ef68:	bl	c2f0 <mpfr_add_ui@plt>
   3ef6c:	mov	x1, x20
   3ef70:	mov	w2, #0x2                   	// #2
   3ef74:	mov	x0, x20
   3ef78:	bl	c110 <mpfr_log@plt>
   3ef7c:	mov	w2, #0x2                   	// #2
   3ef80:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3ef84:	ldr	x1, [x0, #2640]
   3ef88:	add	x0, x0, #0xa50
   3ef8c:	blr	x1
   3ef90:	mrs	x1, tpidr_el0
   3ef94:	add	x1, x1, x0
   3ef98:	mov	x0, x23
   3ef9c:	bl	c410 <mpfr_cache@plt>
   3efa0:	mov	x2, x23
   3efa4:	mov	x1, x20
   3efa8:	mov	w3, #0x0                   	// #0
   3efac:	mov	x0, x20
   3efb0:	bl	bdd0 <mpfr_mul@plt>
   3efb4:	sub	x4, x21, #0x1
   3efb8:	mov	x3, #0x0                   	// #0
   3efbc:	mov	x2, x25
   3efc0:	mov	x1, x27
   3efc4:	asr	x4, x4, #1
   3efc8:	mov	x0, x19
   3efcc:	bl	3ecbc <mpfr_subnormalize@@Base+0x524>
   3efd0:	mov	x1, x19
   3efd4:	mov	x0, x19
   3efd8:	mov	x2, #0x3                   	// #3
   3efdc:	bl	c190 <__gmpz_mul_ui@plt>
   3efe0:	mov	x1, x19
   3efe4:	mov	w2, #0x2                   	// #2
   3efe8:	mov	x0, x23
   3efec:	bl	c2d0 <mpfr_set_z@plt>
   3eff0:	mov	x1, x25
   3eff4:	mov	w2, #0x3                   	// #3
   3eff8:	mov	x0, x28
   3effc:	bl	c2d0 <mpfr_set_z@plt>
   3f000:	mov	x2, x28
   3f004:	mov	x1, x23
   3f008:	mov	w3, #0x0                   	// #0
   3f00c:	mov	x0, x23
   3f010:	bl	c6b0 <mpfr_div@plt>
   3f014:	mov	x2, x23
   3f018:	mov	x1, x20
   3f01c:	mov	w3, #0x0                   	// #0
   3f020:	mov	x0, x20
   3f024:	bl	c230 <mpfr_add@plt>
   3f028:	mov	x1, x20
   3f02c:	mov	x0, x20
   3f030:	mov	w3, #0x0                   	// #0
   3f034:	mov	x2, #0x3                   	// #3
   3f038:	bl	c980 <mpfr_div_2ui@plt>
   3f03c:	ldr	x1, [sp, #176]
   3f040:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3f044:	cmp	x1, x0
   3f048:	b.gt	3f07c <mpfr_const_catalan_internal@@Base+0x24c>
   3f04c:	mov	x0, #0xfffffffffffffeff    	// #-257
   3f050:	movk	x0, #0x7fff, lsl #48
   3f054:	sub	x0, x0, x21
   3f058:	cmp	x0, x24
   3f05c:	b.ge	3f108 <mpfr_const_catalan_internal@@Base+0x2d8>  // b.tcont
   3f060:	adrp	x2, 53000 <mpfr_free_pool@@Base+0x1eec>
   3f064:	mov	w1, #0x8d                  	// #141
   3f068:	add	x2, x2, #0x952
   3f06c:	b	3ee70 <mpfr_const_catalan_internal@@Base+0x40>
   3f070:	add	x0, sp, #0x110
   3f074:	str	xzr, [sp, #256]
   3f078:	b	3eedc <mpfr_const_catalan_internal@@Base+0xac>
   3f07c:	ldr	w0, [sp, #108]
   3f080:	sub	x2, x21, #0x5
   3f084:	ldr	x1, [sp, #160]
   3f088:	cmp	w0, #0x0
   3f08c:	ldr	x0, [sp, #184]
   3f090:	sub	x1, x1, #0x1
   3f094:	cinc	x3, x22, eq  // eq = none
   3f098:	asr	x1, x1, #6
   3f09c:	add	x1, x1, #0x1
   3f0a0:	bl	c400 <mpfr_round_p@plt>
   3f0a4:	cbz	w0, 3f04c <mpfr_const_catalan_internal@@Base+0x21c>
   3f0a8:	ldr	w2, [sp, #108]
   3f0ac:	mov	x1, x20
   3f0b0:	ldr	w3, [sp, #168]
   3f0b4:	ldr	x0, [sp, #96]
   3f0b8:	bl	c730 <mpfr_set4@plt>
   3f0bc:	mov	w20, w0
   3f0c0:	ldr	x1, [sp, #256]
   3f0c4:	cbz	x1, 3f0d0 <mpfr_const_catalan_internal@@Base+0x2a0>
   3f0c8:	ldr	x0, [sp, #264]
   3f0cc:	bl	ccc0 <mpfr_free_func@plt>
   3f0d0:	mov	x0, x19
   3f0d4:	bl	c200 <mpfr_mpz_clear@plt>
   3f0d8:	mov	x0, x27
   3f0dc:	bl	c200 <mpfr_mpz_clear@plt>
   3f0e0:	mov	x0, x25
   3f0e4:	bl	c200 <mpfr_mpz_clear@plt>
   3f0e8:	mov	w0, w20
   3f0ec:	ldp	x19, x20, [sp, #16]
   3f0f0:	ldp	x21, x22, [sp, #32]
   3f0f4:	ldp	x23, x24, [sp, #48]
   3f0f8:	ldp	x25, x26, [sp, #64]
   3f0fc:	ldp	x27, x28, [sp, #80]
   3f100:	ldp	x29, x30, [sp], #400
   3f104:	ret
   3f108:	add	x21, x21, x24
   3f10c:	mov	x24, #0x2                   	// #2
   3f110:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   3f114:	cmp	x21, x0
   3f118:	ldr	x1, [sp, #256]
   3f11c:	sdiv	x24, x21, x24
   3f120:	b.ge	3eea4 <mpfr_const_catalan_internal@@Base+0x74>  // b.tcont
   3f124:	sub	x0, x21, #0x1
   3f128:	asr	x2, x0, #6
   3f12c:	mov	x0, #0x18                  	// #24
   3f130:	add	x26, x2, #0x1
   3f134:	madd	x0, x2, x0, x0
   3f138:	str	x0, [sp, #256]
   3f13c:	cbnz	x1, 3f180 <mpfr_const_catalan_internal@@Base+0x350>
   3f140:	bl	cd90 <mpfr_allocate_func@plt>
   3f144:	str	x0, [sp, #264]
   3f148:	mov	w0, #0x1                   	// #1
   3f14c:	str	x21, [sp, #160]
   3f150:	ldr	x1, [sp, #264]
   3f154:	str	w0, [sp, #168]
   3f158:	str	x1, [sp, #184]
   3f15c:	str	x21, [sp, #192]
   3f160:	add	x2, x1, x26, lsl #3
   3f164:	add	x26, x1, x26, lsl #4
   3f168:	str	w0, [sp, #200]
   3f16c:	str	x2, [sp, #216]
   3f170:	str	x21, [sp, #224]
   3f174:	str	w0, [sp, #232]
   3f178:	str	x26, [sp, #248]
   3f17c:	b	3ef48 <mpfr_const_catalan_internal@@Base+0x118>
   3f180:	mov	x2, x0
   3f184:	ldr	x0, [sp, #264]
   3f188:	bl	c250 <mpfr_reallocate_func@plt>
   3f18c:	b	3f144 <mpfr_const_catalan_internal@@Base+0x314>

000000000003f190 <mpfr_const_catalan@@Base>:
   3f190:	stp	x29, x30, [sp, #-16]!
   3f194:	mov	x3, x0
   3f198:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3f19c:	ldr	x2, [x0, #2608]
   3f1a0:	add	x0, x0, #0xa30
   3f1a4:	blr	x2
   3f1a8:	mov	x29, sp
   3f1ac:	ldp	x29, x30, [sp], #16
   3f1b0:	mov	w2, w1
   3f1b4:	mrs	x1, tpidr_el0
   3f1b8:	add	x1, x1, x0
   3f1bc:	mov	x0, x3
   3f1c0:	b	c410 <mpfr_cache@plt>
   3f1c4:	stp	x29, x30, [sp, #-416]!
   3f1c8:	mov	x29, sp
   3f1cc:	stp	x19, x20, [sp, #16]
   3f1d0:	mov	x20, x0
   3f1d4:	ldr	x0, [x1]
   3f1d8:	str	x0, [sp, #144]
   3f1dc:	ldr	x0, [x1, #24]
   3f1e0:	stp	x21, x22, [sp, #32]
   3f1e4:	mov	x22, x1
   3f1e8:	ldr	x19, [x20]
   3f1ec:	stp	x23, x24, [sp, #48]
   3f1f0:	mov	w24, w3
   3f1f4:	ldr	x1, [x1, #16]
   3f1f8:	stp	x25, x26, [sp, #64]
   3f1fc:	add	x19, x19, #0xa
   3f200:	stp	x27, x28, [sp, #80]
   3f204:	mov	x26, x2
   3f208:	cmp	x1, #0x0
   3f20c:	stp	x1, x0, [sp, #160]
   3f210:	mov	w0, #0x1                   	// #1
   3f214:	str	w0, [sp, #152]
   3f218:	b.le	3f238 <mpfr_const_catalan@@Base+0xa8>
   3f21c:	sub	x0, x1, #0x1
   3f220:	cmp	x1, #0x1
   3f224:	clz	x2, x0
   3f228:	mov	w0, #0x40                  	// #64
   3f22c:	sub	w0, w0, w2
   3f230:	csel	w0, w0, wzr, ne  // ne = any
   3f234:	add	x19, x19, w0, sxtw
   3f238:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   3f23c:	cmp	x19, x0
   3f240:	b.lt	3f248 <mpfr_const_catalan@@Base+0xb8>  // b.tstop
   3f244:	bl	c970 <mpfr_abort_prec_max@plt>
   3f248:	sub	x0, x19, #0x1
   3f24c:	asr	x0, x0, #6
   3f250:	add	x0, x0, #0x1
   3f254:	cmp	x0, #0x10
   3f258:	b.le	3f3b8 <mpfr_const_catalan@@Base+0x228>
   3f25c:	lsl	x0, x0, #3
   3f260:	str	x0, [sp, #272]
   3f264:	bl	cd90 <mpfr_allocate_func@plt>
   3f268:	str	x0, [sp, #280]
   3f26c:	mrs	x21, tpidr_el0
   3f270:	add	x28, sp, #0x90
   3f274:	add	x23, sp, #0xb0
   3f278:	ldr	x0, [sp, #280]
   3f27c:	str	x0, [sp, #200]
   3f280:	mov	w0, #0x1                   	// #1
   3f284:	str	w0, [sp, #184]
   3f288:	add	x25, sp, #0xd0
   3f28c:	add	x27, sp, #0xf0
   3f290:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3f294:	ldr	x1, [x0, #2592]
   3f298:	add	x0, x0, #0xa20
   3f29c:	blr	x1
   3f2a0:	ldr	w0, [x21, x0]
   3f2a4:	str	w0, [sp, #136]
   3f2a8:	str	x19, [sp, #176]
   3f2ac:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3f2b0:	ldr	x1, [x0, #2528]
   3f2b4:	add	x0, x0, #0x9e0
   3f2b8:	blr	x1
   3f2bc:	add	x1, x21, x0
   3f2c0:	ldr	x0, [x21, x0]
   3f2c4:	str	x0, [sp, #112]
   3f2c8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3f2cc:	ldr	x2, [x0, #2560]
   3f2d0:	add	x0, x0, #0xa00
   3f2d4:	blr	x2
   3f2d8:	ldr	x2, [x21, x0]
   3f2dc:	str	x2, [sp, #120]
   3f2e0:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   3f2e4:	str	x2, [x1]
   3f2e8:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   3f2ec:	str	x1, [x21, x0]
   3f2f0:	mov	x0, #0x40                  	// #64
   3f2f4:	str	x0, [sp, #104]
   3f2f8:	mov	x1, x28
   3f2fc:	mov	w2, #0x0                   	// #0
   3f300:	mov	x0, x23
   3f304:	bl	c110 <mpfr_log@plt>
   3f308:	mov	x2, x26
   3f30c:	mov	x1, x23
   3f310:	mov	w3, #0x0                   	// #0
   3f314:	mov	x0, x23
   3f318:	bl	cd00 <mpfr_div_ui@plt>
   3f31c:	ldr	x3, [sp, #192]
   3f320:	mov	x1, x23
   3f324:	mov	x0, x23
   3f328:	mov	w2, #0x0                   	// #0
   3f32c:	str	x3, [sp, #128]
   3f330:	bl	c7e0 <mpfr_exp@plt>
   3f334:	ldr	x3, [sp, #128]
   3f338:	cmn	x3, #0x1
   3f33c:	b.lt	3f3c4 <mpfr_const_catalan@@Base+0x234>  // b.tstop
   3f340:	add	w2, w3, #0x3
   3f344:	ldr	x3, [x20]
   3f348:	cmp	w24, #0x0
   3f34c:	ldr	x1, [sp, #192]
   3f350:	cset	x4, eq  // eq = none
   3f354:	cinc	x3, x3, eq  // eq = none
   3f358:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3f35c:	cmp	x1, x0
   3f360:	b.gt	3f3d4 <mpfr_const_catalan@@Base+0x244>
   3f364:	ldr	x1, [x20]
   3f368:	mov	x0, x25
   3f36c:	add	x1, x4, x1
   3f370:	bl	cb10 <mpfr_init2@plt>
   3f374:	ldr	x1, [x22]
   3f378:	mov	x0, x27
   3f37c:	bl	cb10 <mpfr_init2@plt>
   3f380:	ldr	w3, [sp, #184]
   3f384:	mov	x1, x23
   3f388:	mov	w2, #0x0                   	// #0
   3f38c:	mov	x0, x25
   3f390:	bl	c730 <mpfr_set4@plt>
   3f394:	mov	w3, #0x0                   	// #0
   3f398:	mov	x2, x26
   3f39c:	mov	x1, x25
   3f3a0:	mov	x0, x27
   3f3a4:	bl	bff0 <mpfr_pow_ui@plt>
   3f3a8:	mov	w3, w0
   3f3ac:	cbz	w0, 3f4c8 <mpfr_const_catalan@@Base+0x338>
   3f3b0:	mov	w1, #0x0                   	// #0
   3f3b4:	b	3f4f8 <mpfr_const_catalan@@Base+0x368>
   3f3b8:	add	x0, sp, #0x120
   3f3bc:	str	xzr, [sp, #272]
   3f3c0:	b	3f268 <mpfr_const_catalan@@Base+0xd8>
   3f3c4:	cmn	x3, #0x2
   3f3c8:	cset	w2, eq  // eq = none
   3f3cc:	add	w2, w2, #0x1
   3f3d0:	b	3f344 <mpfr_const_catalan@@Base+0x1b4>
   3f3d4:	ldr	x1, [sp, #176]
   3f3d8:	sub	x2, x19, w2, uxtw
   3f3dc:	ldr	x0, [sp, #200]
   3f3e0:	sub	x1, x1, #0x1
   3f3e4:	str	x4, [sp, #128]
   3f3e8:	asr	x1, x1, #6
   3f3ec:	add	x1, x1, #0x1
   3f3f0:	bl	c400 <mpfr_round_p@plt>
   3f3f4:	ldr	x4, [sp, #128]
   3f3f8:	cbz	w0, 3f364 <mpfr_const_catalan@@Base+0x1d4>
   3f3fc:	ldr	w3, [x22, #8]
   3f400:	mov	w2, w24
   3f404:	mov	x1, x23
   3f408:	mov	x0, x20
   3f40c:	bl	c730 <mpfr_set4@plt>
   3f410:	mov	w3, w0
   3f414:	ldr	x1, [sp, #272]
   3f418:	cbz	x1, 3f42c <mpfr_const_catalan@@Base+0x29c>
   3f41c:	ldr	x0, [sp, #280]
   3f420:	str	w3, [sp, #104]
   3f424:	bl	ccc0 <mpfr_free_func@plt>
   3f428:	ldr	w3, [sp, #104]
   3f42c:	ldr	w2, [sp, #136]
   3f430:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3f434:	ldr	x1, [x0, #2592]
   3f438:	add	x0, x0, #0xa20
   3f43c:	blr	x1
   3f440:	add	x1, x21, x0
   3f444:	str	w2, [x21, x0]
   3f448:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3f44c:	ldr	x2, [x0, #2528]
   3f450:	add	x0, x0, #0x9e0
   3f454:	blr	x2
   3f458:	ldr	x2, [sp, #112]
   3f45c:	str	x2, [x21, x0]
   3f460:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3f464:	ldr	x2, [x0, #2560]
   3f468:	add	x0, x0, #0xa00
   3f46c:	blr	x2
   3f470:	ldr	x2, [sp, #120]
   3f474:	str	x2, [x21, x0]
   3f478:	ldr	x0, [x20, #16]
   3f47c:	ldr	x2, [sp, #112]
   3f480:	cmp	x2, x0
   3f484:	b.gt	3f494 <mpfr_const_catalan@@Base+0x304>
   3f488:	ldr	x2, [sp, #120]
   3f48c:	cmp	x2, x0
   3f490:	b.ge	3f5b8 <mpfr_const_catalan@@Base+0x428>  // b.tcont
   3f494:	mov	w1, w3
   3f498:	mov	w2, w24
   3f49c:	mov	x0, x20
   3f4a0:	bl	cbc0 <mpfr_check_range@plt>
   3f4a4:	mov	w3, w0
   3f4a8:	mov	w0, w3
   3f4ac:	ldp	x19, x20, [sp, #16]
   3f4b0:	ldp	x21, x22, [sp, #32]
   3f4b4:	ldp	x23, x24, [sp, #48]
   3f4b8:	ldp	x25, x26, [sp, #64]
   3f4bc:	ldp	x27, x28, [sp, #80]
   3f4c0:	ldp	x29, x30, [sp], #416
   3f4c4:	ret
   3f4c8:	mov	x1, x28
   3f4cc:	mov	x0, x27
   3f4d0:	bl	caf0 <mpfr_equal_p@plt>
   3f4d4:	mov	w3, w0
   3f4d8:	cbz	w0, 3f3b0 <mpfr_const_catalan@@Base+0x220>
   3f4dc:	ldr	w3, [x22, #8]
   3f4e0:	mov	x1, x25
   3f4e4:	mov	w2, w24
   3f4e8:	mov	x0, x20
   3f4ec:	bl	c730 <mpfr_set4@plt>
   3f4f0:	mov	w3, w0
   3f4f4:	mov	w1, #0x1                   	// #1
   3f4f8:	mov	x0, x27
   3f4fc:	str	w1, [sp, #128]
   3f500:	str	w3, [sp, #140]
   3f504:	bl	c0f0 <mpfr_clear@plt>
   3f508:	mov	x0, x25
   3f50c:	bl	c0f0 <mpfr_clear@plt>
   3f510:	ldr	w1, [sp, #128]
   3f514:	ldr	w3, [sp, #140]
   3f518:	cbnz	w1, 3f414 <mpfr_const_catalan@@Base+0x284>
   3f51c:	ldr	x1, [sp, #104]
   3f520:	mov	x0, #0xfffffffffffffeff    	// #-257
   3f524:	movk	x0, #0x7fff, lsl #48
   3f528:	sub	x0, x0, x19
   3f52c:	cmp	x0, x1
   3f530:	b.ge	3f54c <mpfr_const_catalan@@Base+0x3bc>  // b.tcont
   3f534:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   3f538:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   3f53c:	add	x2, x2, #0xb94
   3f540:	add	x0, x0, #0x49c
   3f544:	mov	w1, #0x11d                 	// #285
   3f548:	bl	cbd0 <mpfr_assert_fail@plt>
   3f54c:	ldr	x0, [sp, #104]
   3f550:	ldr	x1, [sp, #272]
   3f554:	add	x19, x19, x0
   3f558:	mov	x0, #0x2                   	// #2
   3f55c:	sdiv	x0, x19, x0
   3f560:	str	x0, [sp, #104]
   3f564:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   3f568:	cmp	x19, x0
   3f56c:	b.ge	3f244 <mpfr_const_catalan@@Base+0xb4>  // b.tcont
   3f570:	sub	x0, x19, #0x1
   3f574:	asr	x0, x0, #6
   3f578:	add	x0, x0, #0x1
   3f57c:	lsl	x0, x0, #3
   3f580:	str	x0, [sp, #272]
   3f584:	cbnz	x1, 3f5a8 <mpfr_const_catalan@@Base+0x418>
   3f588:	bl	cd90 <mpfr_allocate_func@plt>
   3f58c:	str	x0, [sp, #280]
   3f590:	str	x19, [sp, #176]
   3f594:	ldr	x0, [sp, #280]
   3f598:	str	x0, [sp, #200]
   3f59c:	mov	w0, #0x1                   	// #1
   3f5a0:	str	w0, [sp, #184]
   3f5a4:	b	3f2f8 <mpfr_const_catalan@@Base+0x168>
   3f5a8:	mov	x2, x0
   3f5ac:	ldr	x0, [sp, #280]
   3f5b0:	bl	c250 <mpfr_reallocate_func@plt>
   3f5b4:	b	3f58c <mpfr_const_catalan@@Base+0x3fc>
   3f5b8:	cbz	w3, 3f4a8 <mpfr_const_catalan@@Base+0x318>
   3f5bc:	ldr	w0, [sp, #136]
   3f5c0:	orr	w0, w0, #0x8
   3f5c4:	str	w0, [x1]
   3f5c8:	b	3f4a8 <mpfr_const_catalan@@Base+0x318>

000000000003f5cc <mpfr_rootn_ui@@Base>:
   3f5cc:	stp	x29, x30, [sp, #-128]!
   3f5d0:	cmp	x2, #0x1
   3f5d4:	mov	x29, sp
   3f5d8:	stp	x19, x20, [sp, #16]
   3f5dc:	mov	x20, x0
   3f5e0:	mov	x19, x1
   3f5e4:	stp	x21, x22, [sp, #32]
   3f5e8:	mov	w21, w3
   3f5ec:	stp	x23, x24, [sp, #48]
   3f5f0:	stp	x25, x26, [sp, #64]
   3f5f4:	stp	x27, x28, [sp, #80]
   3f5f8:	mov	x28, x2
   3f5fc:	b.hi	3f66c <mpfr_rootn_ui@@Base+0xa0>  // b.pmore
   3f600:	cbnz	x2, 3f658 <mpfr_rootn_ui@@Base+0x8c>
   3f604:	mov	x0, #0x2                   	// #2
   3f608:	movk	x0, #0x8000, lsl #48
   3f60c:	str	x0, [x20, #16]
   3f610:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3f614:	ldr	x1, [x0, #2592]
   3f618:	add	x0, x0, #0xa20
   3f61c:	blr	x1
   3f620:	mrs	x1, tpidr_el0
   3f624:	add	x0, x1, x0
   3f628:	ldr	w1, [x0]
   3f62c:	orr	w1, w1, #0x4
   3f630:	str	w1, [x0]
   3f634:	mov	w19, #0x0                   	// #0
   3f638:	mov	w0, w19
   3f63c:	ldp	x19, x20, [sp, #16]
   3f640:	ldp	x21, x22, [sp, #32]
   3f644:	ldp	x23, x24, [sp, #48]
   3f648:	ldp	x25, x26, [sp, #64]
   3f64c:	ldp	x27, x28, [sp, #80]
   3f650:	ldp	x29, x30, [sp], #128
   3f654:	ret
   3f658:	mov	w2, w3
   3f65c:	ldr	w3, [x1, #8]
   3f660:	bl	c730 <mpfr_set4@plt>
   3f664:	mov	w19, w0
   3f668:	b	3f638 <mpfr_rootn_ui@@Base+0x6c>
   3f66c:	ldr	x0, [x19, #16]
   3f670:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   3f674:	cmp	x0, x1
   3f678:	b.gt	3f6d4 <mpfr_rootn_ui@@Base+0x108>
   3f67c:	mov	x2, #0x2                   	// #2
   3f680:	movk	x2, #0x8000, lsl #48
   3f684:	cmp	x0, x2
   3f688:	b.eq	3f604 <mpfr_rootn_ui@@Base+0x38>  // b.none
   3f68c:	cmp	x0, x1
   3f690:	ldr	w0, [x19, #8]
   3f694:	b.ne	3f6b0 <mpfr_rootn_ui@@Base+0xe4>  // b.any
   3f698:	tbz	w0, #31, 3f6a0 <mpfr_rootn_ui@@Base+0xd4>
   3f69c:	tbz	w28, #0, 3f604 <mpfr_rootn_ui@@Base+0x38>
   3f6a0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   3f6a4:	str	x1, [x20, #16]
   3f6a8:	str	w0, [x20, #8]
   3f6ac:	b	3f634 <mpfr_rootn_ui@@Base+0x68>
   3f6b0:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   3f6b4:	str	x1, [x20, #16]
   3f6b8:	cmp	w0, #0x0
   3f6bc:	b.gt	3f6c4 <mpfr_rootn_ui@@Base+0xf8>
   3f6c0:	tbnz	w28, #0, 3f6cc <mpfr_rootn_ui@@Base+0x100>
   3f6c4:	mov	w0, #0x1                   	// #1
   3f6c8:	b	3f6a8 <mpfr_rootn_ui@@Base+0xdc>
   3f6cc:	mov	w0, #0xffffffff            	// #-1
   3f6d0:	b	3f6a8 <mpfr_rootn_ui@@Base+0xdc>
   3f6d4:	ldr	w0, [x19, #8]
   3f6d8:	tbz	w0, #31, 3f6e0 <mpfr_rootn_ui@@Base+0x114>
   3f6dc:	tbz	w2, #0, 3f604 <mpfr_rootn_ui@@Base+0x38>
   3f6e0:	adrp	x1, 73000 <__gmpfr_l2b@@Base+0x200>
   3f6e4:	mov	x0, x19
   3f6e8:	ldr	x1, [x1, #3928]
   3f6ec:	bl	ca40 <mpfr_cmpabs@plt>
   3f6f0:	cbnz	w0, 3f708 <mpfr_rootn_ui@@Base+0x13c>
   3f6f4:	ldr	w3, [x19, #8]
   3f6f8:	mov	w2, w21
   3f6fc:	mov	x1, x19
   3f700:	mov	x0, x20
   3f704:	b	3f660 <mpfr_rootn_ui@@Base+0x94>
   3f708:	cmp	x28, #0x64
   3f70c:	b.ls	3f728 <mpfr_rootn_ui@@Base+0x15c>  // b.plast
   3f710:	mov	w3, w21
   3f714:	mov	x2, x28
   3f718:	mov	x1, x19
   3f71c:	mov	x0, x20
   3f720:	bl	3f1c4 <mpfr_const_catalan@@Base+0x34>
   3f724:	b	3f664 <mpfr_rootn_ui@@Base+0x98>
   3f728:	mrs	x23, tpidr_el0
   3f72c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3f730:	ldr	x1, [x0, #2592]
   3f734:	add	x0, x0, #0xa20
   3f738:	blr	x1
   3f73c:	add	x26, sp, #0x70
   3f740:	ldr	w24, [x23, x0]
   3f744:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3f748:	ldr	x1, [x0, #2528]
   3f74c:	add	x0, x0, #0x9e0
   3f750:	blr	x1
   3f754:	add	x1, x23, x0
   3f758:	ldr	x0, [x23, x0]
   3f75c:	str	x0, [sp, #96]
   3f760:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3f764:	ldr	x2, [x0, #2560]
   3f768:	add	x0, x0, #0xa00
   3f76c:	blr	x2
   3f770:	ldr	x2, [x23, x0]
   3f774:	str	x2, [sp, #104]
   3f778:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   3f77c:	str	x2, [x1]
   3f780:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   3f784:	str	x1, [x23, x0]
   3f788:	mov	x0, x26
   3f78c:	bl	c010 <mpfr_mpz_init@plt>
   3f790:	mov	x1, x19
   3f794:	mov	x0, x26
   3f798:	bl	cb50 <mpfr_get_z_2exp@plt>
   3f79c:	ldr	w25, [x19, #8]
   3f7a0:	mov	x22, x0
   3f7a4:	tbz	w25, #31, 3f7b4 <mpfr_rootn_ui@@Base+0x1e8>
   3f7a8:	ldr	w0, [sp, #116]
   3f7ac:	neg	w0, w0
   3f7b0:	str	w0, [sp, #116]
   3f7b4:	sdiv	x19, x22, x28
   3f7b8:	msub	x5, x19, x28, x22
   3f7bc:	tbz	x5, #63, 3f7c4 <mpfr_rootn_ui@@Base+0x1f8>
   3f7c0:	add	x5, x5, x28
   3f7c4:	ldr	w1, [sp, #116]
   3f7c8:	mov	x0, #0xfffffffffffffff8    	// #-8
   3f7cc:	ldr	x2, [x20]
   3f7d0:	cmp	w1, #0x0
   3f7d4:	cneg	w4, w1, lt  // lt = tstop
   3f7d8:	cmp	w21, #0x0
   3f7dc:	ldr	x1, [sp, #120]
   3f7e0:	add	x0, x0, w4, sxtw #3
   3f7e4:	cinc	x27, x2, eq  // eq = none
   3f7e8:	sbfiz	x4, x4, #6, #32
   3f7ec:	ldr	x1, [x1, x0]
   3f7f0:	mul	x0, x27, x28
   3f7f4:	clz	x1, x1
   3f7f8:	sub	x2, x4, x1
   3f7fc:	add	x2, x2, x5
   3f800:	cmp	x2, x0
   3f804:	b.cs	3f97c <mpfr_rootn_ui@@Base+0x3b0>  // b.hs, b.nlast
   3f808:	sub	x19, x1, x5
   3f80c:	sub	x4, x0, x4
   3f810:	add	x19, x19, x4
   3f814:	udiv	x19, x19, x28
   3f818:	madd	x19, x19, x28, x5
   3f81c:	mov	x1, x26
   3f820:	mov	x0, x26
   3f824:	mov	x2, x19
   3f828:	bl	c290 <__gmpz_mul_2exp@plt>
   3f82c:	mov	x2, x28
   3f830:	mov	x1, x26
   3f834:	mov	x0, x26
   3f838:	bl	c370 <__gmpz_root@plt>
   3f83c:	ldr	w2, [sp, #116]
   3f840:	mov	x1, #0xfffffffffffffff8    	// #-8
   3f844:	ldr	x4, [sp, #120]
   3f848:	cmp	w2, #0x0
   3f84c:	cneg	w2, w2, lt  // lt = tstop
   3f850:	sub	x22, x22, x19
   3f854:	add	x1, x1, w2, sxtw #3
   3f858:	sbfiz	x2, x2, #6, #32
   3f85c:	ldr	x1, [x4, x1]
   3f860:	clz	x1, x1
   3f864:	sub	x2, x2, x1
   3f868:	sub	x27, x2, x27
   3f86c:	cmp	x27, #0x0
   3f870:	b.gt	3f984 <mpfr_rootn_ui@@Base+0x3b8>
   3f874:	cmp	w0, #0x0
   3f878:	cset	w19, eq  // eq = none
   3f87c:	cbz	w19, 3f8c8 <mpfr_rootn_ui@@Base+0x2fc>
   3f880:	tbz	w25, #31, 3f898 <mpfr_rootn_ui@@Base+0x2cc>
   3f884:	cmp	w21, #0x2
   3f888:	b.eq	3f9bc <mpfr_rootn_ui@@Base+0x3f0>  // b.none
   3f88c:	cmp	w21, #0x3
   3f890:	mov	w0, #0x2                   	// #2
   3f894:	csel	w21, w21, w0, ne  // ne = any
   3f898:	cmp	w21, #0x2
   3f89c:	ccmp	w21, #0x4, #0x4, ne  // ne = any
   3f8a0:	b.eq	3f8b8 <mpfr_rootn_ui@@Base+0x2ec>  // b.none
   3f8a4:	cbnz	w21, 3f9c4 <mpfr_rootn_ui@@Base+0x3f8>
   3f8a8:	mov	x0, x26
   3f8ac:	mov	x1, #0x0                   	// #0
   3f8b0:	bl	c060 <__gmpz_tstbit@plt>
   3f8b4:	cbz	w0, 3f9c4 <mpfr_rootn_ui@@Base+0x3f8>
   3f8b8:	mov	x1, x26
   3f8bc:	mov	x0, x26
   3f8c0:	mov	x2, #0x1                   	// #1
   3f8c4:	bl	c3f0 <__gmpz_add_ui@plt>
   3f8c8:	mov	x1, x26
   3f8cc:	mov	x0, x20
   3f8d0:	mov	w2, #0x0                   	// #0
   3f8d4:	bl	c2d0 <mpfr_set_z@plt>
   3f8d8:	sdiv	x22, x22, x28
   3f8dc:	add	w19, w19, w0
   3f8e0:	ldr	x28, [x20, #16]
   3f8e4:	add	x22, x28, x22
   3f8e8:	str	x22, [x20, #16]
   3f8ec:	tbz	w25, #31, 3f900 <mpfr_rootn_ui@@Base+0x334>
   3f8f0:	ldr	w0, [x20, #8]
   3f8f4:	neg	w19, w19
   3f8f8:	neg	w0, w0
   3f8fc:	str	w0, [x20, #8]
   3f900:	mov	x0, x26
   3f904:	bl	c200 <mpfr_mpz_clear@plt>
   3f908:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3f90c:	ldr	x1, [x0, #2592]
   3f910:	add	x0, x0, #0xa20
   3f914:	blr	x1
   3f918:	add	x1, x23, x0
   3f91c:	str	w24, [x23, x0]
   3f920:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3f924:	ldr	x2, [x0, #2528]
   3f928:	add	x0, x0, #0x9e0
   3f92c:	blr	x2
   3f930:	ldr	x2, [sp, #96]
   3f934:	str	x2, [x23, x0]
   3f938:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3f93c:	ldr	x2, [x0, #2560]
   3f940:	add	x0, x0, #0xa00
   3f944:	blr	x2
   3f948:	ldr	x2, [sp, #104]
   3f94c:	str	x2, [x23, x0]
   3f950:	ldr	x0, [x20, #16]
   3f954:	ldr	x2, [sp, #96]
   3f958:	cmp	x2, x0
   3f95c:	b.gt	3f9cc <mpfr_rootn_ui@@Base+0x400>
   3f960:	ldr	x2, [sp, #104]
   3f964:	cmp	x2, x0
   3f968:	b.lt	3f9cc <mpfr_rootn_ui@@Base+0x400>  // b.tstop
   3f96c:	cbz	w19, 3f638 <mpfr_rootn_ui@@Base+0x6c>
   3f970:	orr	w24, w24, #0x8
   3f974:	str	w24, [x1]
   3f978:	b	3f638 <mpfr_rootn_ui@@Base+0x6c>
   3f97c:	mov	x19, #0x0                   	// #0
   3f980:	b	3f818 <mpfr_rootn_ui@@Base+0x24c>
   3f984:	cbz	w0, 3f9b4 <mpfr_rootn_ui@@Base+0x3e8>
   3f988:	mov	x0, x26
   3f98c:	mov	x1, #0x0                   	// #0
   3f990:	bl	bb10 <__gmpz_scan1@plt>
   3f994:	cmp	x0, x27
   3f998:	cset	w19, lt  // lt = tstop
   3f99c:	mov	x2, x27
   3f9a0:	mov	x1, x26
   3f9a4:	mov	x0, x26
   3f9a8:	madd	x22, x27, x28, x22
   3f9ac:	bl	c1c0 <__gmpz_fdiv_q_2exp@plt>
   3f9b0:	b	3f87c <mpfr_rootn_ui@@Base+0x2b0>
   3f9b4:	mov	w19, #0x1                   	// #1
   3f9b8:	b	3f99c <mpfr_rootn_ui@@Base+0x3d0>
   3f9bc:	mov	w21, #0x3                   	// #3
   3f9c0:	b	3f898 <mpfr_rootn_ui@@Base+0x2cc>
   3f9c4:	mov	w19, #0xffffffff            	// #-1
   3f9c8:	b	3f8c8 <mpfr_rootn_ui@@Base+0x2fc>
   3f9cc:	mov	w2, w21
   3f9d0:	mov	w1, w19
   3f9d4:	mov	x0, x20
   3f9d8:	bl	cbc0 <mpfr_check_range@plt>
   3f9dc:	b	3f664 <mpfr_rootn_ui@@Base+0x98>

000000000003f9e0 <mpfr_root@@Base>:
   3f9e0:	mov	x4, x0
   3f9e4:	cmp	x2, #0x1
   3f9e8:	b.hi	3fa40 <mpfr_root@@Base+0x60>  // b.pmore
   3f9ec:	cbnz	x2, 3fa34 <mpfr_root@@Base+0x54>
   3f9f0:	stp	x29, x30, [sp, #-16]!
   3f9f4:	mov	x0, #0x2                   	// #2
   3f9f8:	movk	x0, #0x8000, lsl #48
   3f9fc:	mov	x29, sp
   3fa00:	str	x0, [x4, #16]
   3fa04:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3fa08:	ldr	x1, [x0, #2592]
   3fa0c:	add	x0, x0, #0xa20
   3fa10:	blr	x1
   3fa14:	mrs	x1, tpidr_el0
   3fa18:	add	x0, x1, x0
   3fa1c:	ldr	w1, [x0]
   3fa20:	orr	w1, w1, #0x4
   3fa24:	str	w1, [x0]
   3fa28:	mov	w0, #0x0                   	// #0
   3fa2c:	ldp	x29, x30, [sp], #16
   3fa30:	ret
   3fa34:	mov	w2, w3
   3fa38:	ldr	w3, [x1, #8]
   3fa3c:	b	c730 <mpfr_set4@plt>
   3fa40:	ldr	x6, [x1, #16]
   3fa44:	mov	x7, #0x8000000000000001    	// #-9223372036854775807
   3fa48:	cmp	x6, x7
   3fa4c:	b.ne	3fa64 <mpfr_root@@Base+0x84>  // b.any
   3fa50:	ldr	w0, [x1, #8]
   3fa54:	str	w0, [x4, #8]
   3fa58:	mov	w0, #0x0                   	// #0
   3fa5c:	str	x6, [x4, #16]
   3fa60:	ret
   3fa64:	b	c740 <mpfr_rootn_ui@plt>

000000000003fa68 <mpfr_sec@@Base>:
   3fa68:	stp	x29, x30, [sp, #-144]!
   3fa6c:	mov	x29, sp
   3fa70:	stp	x21, x22, [sp, #32]
   3fa74:	mov	w22, w2
   3fa78:	mov	x21, x0
   3fa7c:	ldr	x2, [x1, #16]
   3fa80:	stp	x19, x20, [sp, #16]
   3fa84:	stp	x23, x24, [sp, #48]
   3fa88:	stp	x25, x26, [sp, #64]
   3fa8c:	stp	x27, x28, [sp, #80]
   3fa90:	str	x1, [sp, #96]
   3fa94:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   3fa98:	cmp	x2, x1
   3fa9c:	b.gt	3fb1c <mpfr_sec@@Base+0xb4>
   3faa0:	mov	x1, #0x7ffffffffffffffe    	// #9223372036854775806
   3faa4:	add	x2, x2, x1
   3faa8:	cmp	x2, #0x1
   3faac:	b.hi	3fb04 <mpfr_sec@@Base+0x9c>  // b.pmore
   3fab0:	mov	x0, #0x2                   	// #2
   3fab4:	mov	w19, #0x0                   	// #0
   3fab8:	movk	x0, #0x8000, lsl #48
   3fabc:	str	x0, [x21, #16]
   3fac0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3fac4:	ldr	x1, [x0, #2592]
   3fac8:	add	x0, x0, #0xa20
   3facc:	blr	x1
   3fad0:	mrs	x1, tpidr_el0
   3fad4:	add	x0, x1, x0
   3fad8:	ldr	w1, [x0]
   3fadc:	orr	w1, w1, #0x4
   3fae0:	str	w1, [x0]
   3fae4:	mov	w0, w19
   3fae8:	ldp	x19, x20, [sp, #16]
   3faec:	ldp	x21, x22, [sp, #32]
   3faf0:	ldp	x23, x24, [sp, #48]
   3faf4:	ldp	x25, x26, [sp, #64]
   3faf8:	ldp	x27, x28, [sp, #80]
   3fafc:	ldp	x29, x30, [sp], #144
   3fb00:	ret
   3fb04:	mov	w3, w22
   3fb08:	mov	x2, #0x0                   	// #0
   3fb0c:	mov	x1, #0x1                   	// #1
   3fb10:	bl	c680 <mpfr_set_ui_2exp@plt>
   3fb14:	mov	w19, w0
   3fb18:	b	3fae4 <mpfr_sec@@Base+0x7c>
   3fb1c:	mrs	x20, tpidr_el0
   3fb20:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3fb24:	ldr	x1, [x0, #2592]
   3fb28:	add	x0, x0, #0xa20
   3fb2c:	blr	x1
   3fb30:	ldr	w23, [x20, x0]
   3fb34:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3fb38:	ldr	x1, [x0, #2528]
   3fb3c:	add	x0, x0, #0x9e0
   3fb40:	blr	x1
   3fb44:	add	x1, x20, x0
   3fb48:	ldr	x28, [x20, x0]
   3fb4c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3fb50:	ldr	x3, [x0, #2560]
   3fb54:	add	x0, x0, #0xa00
   3fb58:	blr	x3
   3fb5c:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   3fb60:	str	x3, [x1]
   3fb64:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   3fb68:	ldr	x27, [x20, x0]
   3fb6c:	str	x1, [x20, x0]
   3fb70:	mov	x0, #0xfffffffffffffffe    	// #-2
   3fb74:	mul	x2, x2, x0
   3fb78:	cmp	x2, #0x0
   3fb7c:	b.gt	3fc38 <mpfr_sec@@Base+0x1d0>
   3fb80:	ldr	x25, [x21]
   3fb84:	cmp	x25, #0x1
   3fb88:	b.ne	3fccc <mpfr_sec@@Base+0x264>  // b.any
   3fb8c:	mov	x19, #0x0                   	// #0
   3fb90:	add	x19, x19, x25
   3fb94:	mov	x24, #0x40                  	// #64
   3fb98:	add	x19, x19, #0x3
   3fb9c:	add	x26, sp, #0x70
   3fba0:	mov	x1, x19
   3fba4:	mov	x0, x26
   3fba8:	bl	cb10 <mpfr_init2@plt>
   3fbac:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3fbb0:	ldr	x1, [x0, #2592]
   3fbb4:	add	x0, x0, #0xa20
   3fbb8:	blr	x1
   3fbbc:	add	x1, x20, x0
   3fbc0:	str	x1, [sp, #104]
   3fbc4:	mov	w2, #0x1                   	// #1
   3fbc8:	ldr	x1, [sp, #96]
   3fbcc:	str	wzr, [x20, x0]
   3fbd0:	mov	x0, x26
   3fbd4:	bl	c4c0 <mpfr_cos@plt>
   3fbd8:	ldr	x0, [sp, #104]
   3fbdc:	ldr	w0, [x0]
   3fbe0:	tbz	w0, #1, 3fd00 <mpfr_sec@@Base+0x298>
   3fbe4:	ldr	w19, [sp, #120]
   3fbe8:	mov	x0, x26
   3fbec:	bl	c0f0 <mpfr_clear@plt>
   3fbf0:	ldr	x0, [sp, #104]
   3fbf4:	mov	w2, w19
   3fbf8:	str	w23, [x0]
   3fbfc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3fc00:	ldr	x1, [x0, #2528]
   3fc04:	add	x0, x0, #0x9e0
   3fc08:	blr	x1
   3fc0c:	str	x28, [x20, x0]
   3fc10:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3fc14:	ldr	x1, [x0, #2560]
   3fc18:	add	x0, x0, #0xa00
   3fc1c:	blr	x1
   3fc20:	cmp	w22, #0x0
   3fc24:	str	x27, [x20, x0]
   3fc28:	csinc	w1, w22, wzr, ne  // ne = any
   3fc2c:	mov	x0, x21
   3fc30:	bl	c450 <mpfr_underflow@plt>
   3fc34:	b	3fb14 <mpfr_sec@@Base+0xac>
   3fc38:	ldr	x0, [x21]
   3fc3c:	add	x0, x0, #0x1
   3fc40:	cmp	x2, x0
   3fc44:	b.ls	3fb80 <mpfr_sec@@Base+0x118>  // b.plast
   3fc48:	adrp	x1, 73000 <__gmpfr_l2b@@Base+0x200>
   3fc4c:	mov	w4, w22
   3fc50:	mov	x0, x21
   3fc54:	mov	w3, #0x1                   	// #1
   3fc58:	ldr	x1, [x1, #3928]
   3fc5c:	bl	c5d0 <mpfr_round_near_x@plt>
   3fc60:	mov	w19, w0
   3fc64:	cbz	w0, 3fb80 <mpfr_sec@@Base+0x118>
   3fc68:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3fc6c:	ldr	x1, [x0, #2592]
   3fc70:	add	x0, x0, #0xa20
   3fc74:	blr	x1
   3fc78:	add	x1, x20, x0
   3fc7c:	str	w23, [x20, x0]
   3fc80:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3fc84:	ldr	x2, [x0, #2528]
   3fc88:	add	x0, x0, #0x9e0
   3fc8c:	blr	x2
   3fc90:	str	x28, [x20, x0]
   3fc94:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3fc98:	ldr	x2, [x0, #2560]
   3fc9c:	add	x0, x0, #0xa00
   3fca0:	blr	x2
   3fca4:	str	x27, [x20, x0]
   3fca8:	ldr	x0, [x21, #16]
   3fcac:	cmp	x28, x0
   3fcb0:	b.gt	3fdb0 <mpfr_sec@@Base+0x348>
   3fcb4:	cmp	x27, x0
   3fcb8:	b.lt	3fdb0 <mpfr_sec@@Base+0x348>  // b.tstop
   3fcbc:	cbz	w19, 3fae4 <mpfr_sec@@Base+0x7c>
   3fcc0:	orr	w23, w23, #0x8
   3fcc4:	str	w23, [x1]
   3fcc8:	b	3fae4 <mpfr_sec@@Base+0x7c>
   3fccc:	b.gt	3fce8 <mpfr_sec@@Base+0x280>
   3fcd0:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   3fcd4:	add	x2, x2, #0x685
   3fcd8:	mov	w1, #0x43                  	// #67
   3fcdc:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   3fce0:	add	x0, x0, #0x4a3
   3fce4:	bl	cbd0 <mpfr_assert_fail@plt>
   3fce8:	sub	x19, x25, #0x1
   3fcec:	clz	x0, x19
   3fcf0:	mov	w19, #0x40                  	// #64
   3fcf4:	sub	w19, w19, w0
   3fcf8:	sxtw	x19, w19
   3fcfc:	b	3fb90 <mpfr_sec@@Base+0x128>
   3fd00:	mov	x1, #0x1                   	// #1
   3fd04:	mov	x2, x26
   3fd08:	mov	x0, x26
   3fd0c:	mov	w3, #0x0                   	// #0
   3fd10:	bl	c380 <mpfr_ui_div@plt>
   3fd14:	ldr	x0, [sp, #128]
   3fd18:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   3fd1c:	cmp	x0, x1
   3fd20:	b.gt	3fd48 <mpfr_sec@@Base+0x2e0>
   3fd24:	mov	x0, #0xfffffffffffffeff    	// #-257
   3fd28:	movk	x0, #0x7fff, lsl #48
   3fd2c:	sub	x0, x0, x19
   3fd30:	cmp	x0, x24
   3fd34:	b.ge	3fd94 <mpfr_sec@@Base+0x32c>  // b.tcont
   3fd38:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   3fd3c:	mov	w1, #0x5f                  	// #95
   3fd40:	add	x2, x2, #0x6df
   3fd44:	b	3fcdc <mpfr_sec@@Base+0x274>
   3fd48:	ldr	x1, [sp, #112]
   3fd4c:	cmp	w22, #0x0
   3fd50:	ldr	x0, [sp, #136]
   3fd54:	sub	x1, x1, #0x1
   3fd58:	cinc	x3, x25, eq  // eq = none
   3fd5c:	sub	x2, x19, #0x2
   3fd60:	asr	x1, x1, #6
   3fd64:	add	x1, x1, #0x1
   3fd68:	bl	c400 <mpfr_round_p@plt>
   3fd6c:	cbz	w0, 3fd24 <mpfr_sec@@Base+0x2bc>
   3fd70:	ldr	w3, [sp, #120]
   3fd74:	mov	w2, w22
   3fd78:	mov	x1, x26
   3fd7c:	mov	x0, x21
   3fd80:	bl	c730 <mpfr_set4@plt>
   3fd84:	mov	w19, w0
   3fd88:	mov	x0, x26
   3fd8c:	bl	c0f0 <mpfr_clear@plt>
   3fd90:	b	3fc68 <mpfr_sec@@Base+0x200>
   3fd94:	add	x19, x19, x24
   3fd98:	mov	x24, #0x2                   	// #2
   3fd9c:	mov	x1, x19
   3fda0:	mov	x0, x26
   3fda4:	sdiv	x24, x19, x24
   3fda8:	bl	bf50 <mpfr_set_prec@plt>
   3fdac:	b	3fbac <mpfr_sec@@Base+0x144>
   3fdb0:	mov	w2, w22
   3fdb4:	mov	w1, w19
   3fdb8:	mov	x0, x21
   3fdbc:	bl	cbc0 <mpfr_check_range@plt>
   3fdc0:	b	3fb14 <mpfr_sec@@Base+0xac>

000000000003fdc4 <mpfr_csc@@Base>:
   3fdc4:	stp	x29, x30, [sp, #-144]!
   3fdc8:	mov	x29, sp
   3fdcc:	stp	x21, x22, [sp, #32]
   3fdd0:	mrs	x21, tpidr_el0
   3fdd4:	mov	x22, x0
   3fdd8:	stp	x25, x26, [sp, #64]
   3fddc:	mov	x26, x1
   3fde0:	ldr	x1, [x1, #16]
   3fde4:	stp	x19, x20, [sp, #16]
   3fde8:	stp	x23, x24, [sp, #48]
   3fdec:	mov	w23, w2
   3fdf0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3fdf4:	ldr	x2, [x0, #2592]
   3fdf8:	add	x0, x0, #0xa20
   3fdfc:	blr	x2
   3fe00:	stp	x27, x28, [sp, #80]
   3fe04:	add	x2, x21, x0
   3fe08:	ldr	w19, [x21, x0]
   3fe0c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3fe10:	cmp	x1, x0
   3fe14:	b.gt	3fe7c <mpfr_csc@@Base+0xb8>
   3fe18:	mov	x3, #0x2                   	// #2
   3fe1c:	movk	x3, #0x8000, lsl #48
   3fe20:	cmp	x1, x3
   3fe24:	b.ne	3fe58 <mpfr_csc@@Base+0x94>  // b.any
   3fe28:	str	x1, [x22, #16]
   3fe2c:	orr	w19, w19, #0x4
   3fe30:	mov	w20, #0x0                   	// #0
   3fe34:	str	w19, [x2]
   3fe38:	mov	w0, w20
   3fe3c:	ldp	x19, x20, [sp, #16]
   3fe40:	ldp	x21, x22, [sp, #32]
   3fe44:	ldp	x23, x24, [sp, #48]
   3fe48:	ldp	x25, x26, [sp, #64]
   3fe4c:	ldp	x27, x28, [sp, #80]
   3fe50:	ldp	x29, x30, [sp], #144
   3fe54:	ret
   3fe58:	cmp	x1, x0
   3fe5c:	b.ne	3fe68 <mpfr_csc@@Base+0xa4>  // b.any
   3fe60:	str	x3, [x22, #16]
   3fe64:	b	3fe2c <mpfr_csc@@Base+0x68>
   3fe68:	ldr	w1, [x26, #8]
   3fe6c:	orr	w19, w19, #0x20
   3fe70:	str	w1, [x22, #8]
   3fe74:	str	x0, [x22, #16]
   3fe78:	b	3fe30 <mpfr_csc@@Base+0x6c>
   3fe7c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3fe80:	ldr	x2, [x0, #2528]
   3fe84:	add	x0, x0, #0x9e0
   3fe88:	blr	x2
   3fe8c:	add	x2, x21, x0
   3fe90:	ldr	x27, [x21, x0]
   3fe94:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3fe98:	ldr	x3, [x0, #2560]
   3fe9c:	add	x0, x0, #0xa00
   3fea0:	blr	x3
   3fea4:	ldr	x3, [x21, x0]
   3fea8:	str	x3, [sp, #96]
   3feac:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   3feb0:	ldr	x24, [x22]
   3feb4:	str	x3, [x2]
   3feb8:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   3febc:	str	x2, [x21, x0]
   3fec0:	ldr	x0, [x26]
   3fec4:	mov	x2, #0xfffffffffffffffe    	// #-2
   3fec8:	cmp	x0, x24
   3fecc:	csel	x0, x0, x24, ge  // ge = tcont
   3fed0:	mul	x0, x0, x2
   3fed4:	cmp	x1, x0
   3fed8:	b.gt	3ffdc <mpfr_csc@@Base+0x218>
   3fedc:	ldr	w24, [x26, #8]
   3fee0:	mov	w3, w23
   3fee4:	mov	x2, x26
   3fee8:	mov	x0, x22
   3feec:	mov	x1, #0x1                   	// #1
   3fef0:	bl	c380 <mpfr_ui_div@plt>
   3fef4:	mov	w20, w0
   3fef8:	cbnz	w0, 3ff48 <mpfr_csc@@Base+0x184>
   3fefc:	cmp	w23, #0x4
   3ff00:	b.ne	3ff24 <mpfr_csc@@Base+0x160>  // b.any
   3ff04:	cmp	w24, #0x0
   3ff08:	b.gt	3ff38 <mpfr_csc@@Base+0x174>
   3ff0c:	tbz	w24, #31, 3ff18 <mpfr_csc@@Base+0x154>
   3ff10:	mov	x0, x22
   3ff14:	bl	be50 <mpfr_nextbelow@plt>
   3ff18:	mov	w20, #0xffffffff            	// #-1
   3ff1c:	mov	w23, #0x3                   	// #3
   3ff20:	b	3ff48 <mpfr_csc@@Base+0x184>
   3ff24:	cmp	w23, #0x2
   3ff28:	b.ne	3ffcc <mpfr_csc@@Base+0x208>  // b.any
   3ff2c:	cmp	w24, #0x0
   3ff30:	mov	w20, #0x1                   	// #1
   3ff34:	b.le	3ff48 <mpfr_csc@@Base+0x184>
   3ff38:	mov	w20, #0x1                   	// #1
   3ff3c:	mov	w23, #0x2                   	// #2
   3ff40:	mov	x0, x22
   3ff44:	bl	c1b0 <mpfr_nextabove@plt>
   3ff48:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3ff4c:	ldr	x1, [x0, #2592]
   3ff50:	add	x0, x0, #0xa20
   3ff54:	blr	x1
   3ff58:	ldr	w0, [x21, x0]
   3ff5c:	orr	w19, w19, w0
   3ff60:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3ff64:	ldr	x1, [x0, #2592]
   3ff68:	add	x0, x0, #0xa20
   3ff6c:	blr	x1
   3ff70:	add	x1, x21, x0
   3ff74:	str	w19, [x21, x0]
   3ff78:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3ff7c:	ldr	x2, [x0, #2528]
   3ff80:	add	x0, x0, #0x9e0
   3ff84:	blr	x2
   3ff88:	str	x27, [x21, x0]
   3ff8c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   3ff90:	ldr	x2, [x0, #2560]
   3ff94:	add	x0, x0, #0xa00
   3ff98:	blr	x2
   3ff9c:	ldr	x2, [sp, #96]
   3ffa0:	str	x2, [x21, x0]
   3ffa4:	ldr	x0, [x22, #16]
   3ffa8:	cmp	x27, x0
   3ffac:	b.gt	3ffb8 <mpfr_csc@@Base+0x1f4>
   3ffb0:	cmp	x2, x0
   3ffb4:	b.ge	4017c <mpfr_csc@@Base+0x3b8>  // b.tcont
   3ffb8:	mov	w2, w23
   3ffbc:	mov	w1, w20
   3ffc0:	mov	x0, x22
   3ffc4:	bl	cbc0 <mpfr_check_range@plt>
   3ffc8:	b	400bc <mpfr_csc@@Base+0x2f8>
   3ffcc:	neg	w20, w24
   3ffd0:	cmp	w23, #0x3
   3ffd4:	b.ne	3ff48 <mpfr_csc@@Base+0x184>  // b.any
   3ffd8:	b	3ff0c <mpfr_csc@@Base+0x148>
   3ffdc:	cmp	x24, #0x1
   3ffe0:	b.eq	400c4 <mpfr_csc@@Base+0x300>  // b.none
   3ffe4:	b.gt	40000 <mpfr_csc@@Base+0x23c>
   3ffe8:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   3ffec:	add	x2, x2, #0x685
   3fff0:	mov	w1, #0x43                  	// #67
   3fff4:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   3fff8:	add	x0, x0, #0x4a3
   3fffc:	bl	cbd0 <mpfr_assert_fail@plt>
   40000:	sub	x20, x24, #0x1
   40004:	clz	x0, x20
   40008:	mov	w20, #0x40                  	// #64
   4000c:	sub	w20, w20, w0
   40010:	sxtw	x20, w20
   40014:	add	x20, x24, x20
   40018:	mov	x25, #0x40                  	// #64
   4001c:	add	x20, x20, #0x3
   40020:	add	x28, sp, #0x70
   40024:	mov	x1, x20
   40028:	mov	x0, x28
   4002c:	bl	cb10 <mpfr_init2@plt>
   40030:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   40034:	ldr	x1, [x0, #2592]
   40038:	add	x0, x0, #0xa20
   4003c:	blr	x1
   40040:	add	x1, x21, x0
   40044:	mov	w2, #0x1                   	// #1
   40048:	str	wzr, [x21, x0]
   4004c:	mov	x0, x28
   40050:	str	x1, [sp, #104]
   40054:	mov	x1, x26
   40058:	bl	c4e0 <mpfr_sin@plt>
   4005c:	ldr	x0, [sp, #104]
   40060:	ldr	w0, [x0]
   40064:	tbz	w0, #1, 400cc <mpfr_csc@@Base+0x308>
   40068:	ldr	w20, [sp, #120]
   4006c:	mov	x0, x28
   40070:	bl	c0f0 <mpfr_clear@plt>
   40074:	ldr	x0, [sp, #104]
   40078:	mov	w2, w20
   4007c:	str	w19, [x0]
   40080:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   40084:	ldr	x1, [x0, #2528]
   40088:	add	x0, x0, #0x9e0
   4008c:	blr	x1
   40090:	str	x27, [x21, x0]
   40094:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   40098:	ldr	x1, [x0, #2560]
   4009c:	add	x0, x0, #0xa00
   400a0:	blr	x1
   400a4:	cmp	w23, #0x0
   400a8:	ldr	x1, [sp, #96]
   400ac:	str	x1, [x21, x0]
   400b0:	csinc	w1, w23, wzr, ne  // ne = any
   400b4:	mov	x0, x22
   400b8:	bl	c450 <mpfr_underflow@plt>
   400bc:	mov	w20, w0
   400c0:	b	3fe38 <mpfr_csc@@Base+0x74>
   400c4:	mov	x20, #0x0                   	// #0
   400c8:	b	40014 <mpfr_csc@@Base+0x250>
   400cc:	mov	x1, #0x1                   	// #1
   400d0:	mov	x2, x28
   400d4:	mov	x0, x28
   400d8:	mov	w3, #0x0                   	// #0
   400dc:	bl	c380 <mpfr_ui_div@plt>
   400e0:	ldr	x0, [sp, #128]
   400e4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   400e8:	cmp	x0, x1
   400ec:	b.gt	40114 <mpfr_csc@@Base+0x350>
   400f0:	mov	x0, #0xfffffffffffffeff    	// #-257
   400f4:	movk	x0, #0x7fff, lsl #48
   400f8:	sub	x0, x0, x20
   400fc:	cmp	x0, x25
   40100:	b.ge	40160 <mpfr_csc@@Base+0x39c>  // b.tcont
   40104:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   40108:	mov	w1, #0x5f                  	// #95
   4010c:	add	x2, x2, #0x6df
   40110:	b	3fff4 <mpfr_csc@@Base+0x230>
   40114:	ldr	x1, [sp, #112]
   40118:	cmp	w23, #0x0
   4011c:	ldr	x0, [sp, #136]
   40120:	sub	x1, x1, #0x1
   40124:	cinc	x3, x24, eq  // eq = none
   40128:	sub	x2, x20, #0x2
   4012c:	asr	x1, x1, #6
   40130:	add	x1, x1, #0x1
   40134:	bl	c400 <mpfr_round_p@plt>
   40138:	cbz	w0, 400f0 <mpfr_csc@@Base+0x32c>
   4013c:	ldr	w3, [sp, #120]
   40140:	mov	w2, w23
   40144:	mov	x1, x28
   40148:	mov	x0, x22
   4014c:	bl	c730 <mpfr_set4@plt>
   40150:	mov	w20, w0
   40154:	mov	x0, x28
   40158:	bl	c0f0 <mpfr_clear@plt>
   4015c:	b	3ff60 <mpfr_csc@@Base+0x19c>
   40160:	add	x20, x20, x25
   40164:	mov	x25, #0x2                   	// #2
   40168:	mov	x1, x20
   4016c:	mov	x0, x28
   40170:	sdiv	x25, x20, x25
   40174:	bl	bf50 <mpfr_set_prec@plt>
   40178:	b	40030 <mpfr_csc@@Base+0x26c>
   4017c:	cbz	w20, 3fe38 <mpfr_csc@@Base+0x74>
   40180:	orr	w19, w19, #0x8
   40184:	str	w19, [x1]
   40188:	b	3fe38 <mpfr_csc@@Base+0x74>

000000000004018c <mpfr_cot@@Base>:
   4018c:	stp	x29, x30, [sp, #-144]!
   40190:	mov	x29, sp
   40194:	stp	x23, x24, [sp, #48]
   40198:	mrs	x23, tpidr_el0
   4019c:	stp	x25, x26, [sp, #64]
   401a0:	mov	x26, x1
   401a4:	ldr	x1, [x1, #16]
   401a8:	stp	x19, x20, [sp, #16]
   401ac:	mov	x19, x0
   401b0:	stp	x21, x22, [sp, #32]
   401b4:	mov	w21, w2
   401b8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   401bc:	ldr	x2, [x0, #2592]
   401c0:	add	x0, x0, #0xa20
   401c4:	blr	x2
   401c8:	stp	x27, x28, [sp, #80]
   401cc:	add	x2, x23, x0
   401d0:	ldr	w20, [x23, x0]
   401d4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   401d8:	cmp	x1, x0
   401dc:	b.gt	40244 <mpfr_cot@@Base+0xb8>
   401e0:	mov	x3, #0x2                   	// #2
   401e4:	movk	x3, #0x8000, lsl #48
   401e8:	cmp	x1, x3
   401ec:	b.ne	40220 <mpfr_cot@@Base+0x94>  // b.any
   401f0:	str	x1, [x19, #16]
   401f4:	orr	w20, w20, #0x4
   401f8:	mov	w22, #0x0                   	// #0
   401fc:	str	w20, [x2]
   40200:	mov	w0, w22
   40204:	ldp	x19, x20, [sp, #16]
   40208:	ldp	x21, x22, [sp, #32]
   4020c:	ldp	x23, x24, [sp, #48]
   40210:	ldp	x25, x26, [sp, #64]
   40214:	ldp	x27, x28, [sp, #80]
   40218:	ldp	x29, x30, [sp], #144
   4021c:	ret
   40220:	cmp	x1, x0
   40224:	b.ne	40230 <mpfr_cot@@Base+0xa4>  // b.any
   40228:	str	x3, [x19, #16]
   4022c:	b	401f4 <mpfr_cot@@Base+0x68>
   40230:	ldr	w1, [x26, #8]
   40234:	orr	w20, w20, #0x20
   40238:	str	w1, [x19, #8]
   4023c:	str	x0, [x19, #16]
   40240:	b	401f8 <mpfr_cot@@Base+0x6c>
   40244:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   40248:	ldr	x2, [x0, #2528]
   4024c:	add	x0, x0, #0x9e0
   40250:	blr	x2
   40254:	add	x2, x23, x0
   40258:	ldr	x27, [x23, x0]
   4025c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   40260:	ldr	x3, [x0, #2560]
   40264:	add	x0, x0, #0xa00
   40268:	blr	x3
   4026c:	add	x22, x23, x0
   40270:	ldr	x0, [x23, x0]
   40274:	str	x0, [sp, #96]
   40278:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   4027c:	ldr	x24, [x19]
   40280:	str	x0, [x2]
   40284:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   40288:	str	x0, [x22]
   4028c:	ldr	x0, [x26]
   40290:	mov	x2, #0xfffffffffffffffe    	// #-2
   40294:	cmp	x0, x24
   40298:	csel	x0, x0, x24, ge  // ge = tcont
   4029c:	mul	x0, x0, x2
   402a0:	cmp	x1, x0
   402a4:	b.ge	40414 <mpfr_cot@@Base+0x288>  // b.tcont
   402a8:	mov	x0, #0x2                   	// #2
   402ac:	ldr	w24, [x26, #8]
   402b0:	movk	x0, #0xc000, lsl #48
   402b4:	cmp	x1, x0
   402b8:	b.ne	4030c <mpfr_cot@@Base+0x180>  // b.any
   402bc:	mov	x0, x26
   402c0:	bl	bf80 <mpfr_powerof2_raw@plt>
   402c4:	cbz	w0, 4030c <mpfr_cot@@Base+0x180>
   402c8:	ldr	x2, [x22]
   402cc:	sxtw	x1, w24
   402d0:	mov	x0, x19
   402d4:	mov	w3, #0x0                   	// #0
   402d8:	mov	w25, #0x1                   	// #1
   402dc:	bl	bb00 <mpfr_set_si_2exp@plt>
   402e0:	cmp	w21, #0x4
   402e4:	b.ne	40330 <mpfr_cot@@Base+0x1a4>  // b.any
   402e8:	cmp	w24, #0x0
   402ec:	b.gt	4040c <mpfr_cot@@Base+0x280>
   402f0:	mov	w21, #0x3                   	// #3
   402f4:	cmp	w24, #0x0
   402f8:	b.le	40304 <mpfr_cot@@Base+0x178>
   402fc:	mov	x0, x19
   40300:	bl	be50 <mpfr_nextbelow@plt>
   40304:	mov	w22, #0xffffffff            	// #-1
   40308:	b	40354 <mpfr_cot@@Base+0x1c8>
   4030c:	mov	w3, w21
   40310:	mov	x2, x26
   40314:	mov	x0, x19
   40318:	mov	x1, #0x1                   	// #1
   4031c:	bl	c380 <mpfr_ui_div@plt>
   40320:	mov	w22, w0
   40324:	cbnz	w0, 4036c <mpfr_cot@@Base+0x1e0>
   40328:	mov	w25, #0x0                   	// #0
   4032c:	b	402e0 <mpfr_cot@@Base+0x154>
   40330:	cmp	w21, #0x2
   40334:	b.eq	403ec <mpfr_cot@@Base+0x260>  // b.none
   40338:	cmp	w24, #0x0
   4033c:	ccmp	w21, #0x1, #0x0, lt  // lt = tstop
   40340:	b.eq	40404 <mpfr_cot@@Base+0x278>  // b.none
   40344:	and	w0, w21, #0xfffffffd
   40348:	mov	w22, w24
   4034c:	cmp	w0, #0x1
   40350:	b.eq	402f4 <mpfr_cot@@Base+0x168>  // b.none
   40354:	cbz	w25, 4036c <mpfr_cot@@Base+0x1e0>
   40358:	mov	w3, w21
   4035c:	mov	x1, x19
   40360:	mov	x0, x19
   40364:	mov	x2, #0x1                   	// #1
   40368:	bl	c350 <mpfr_mul_2ui@plt>
   4036c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   40370:	ldr	x1, [x0, #2592]
   40374:	add	x0, x0, #0xa20
   40378:	blr	x1
   4037c:	ldr	w0, [x23, x0]
   40380:	orr	w20, w20, w0
   40384:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   40388:	ldr	x1, [x0, #2592]
   4038c:	add	x0, x0, #0xa20
   40390:	blr	x1
   40394:	add	x1, x23, x0
   40398:	str	w20, [x23, x0]
   4039c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   403a0:	ldr	x2, [x0, #2528]
   403a4:	add	x0, x0, #0x9e0
   403a8:	blr	x2
   403ac:	str	x27, [x23, x0]
   403b0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   403b4:	ldr	x2, [x0, #2560]
   403b8:	add	x0, x0, #0xa00
   403bc:	blr	x2
   403c0:	ldr	x2, [sp, #96]
   403c4:	str	x2, [x23, x0]
   403c8:	ldr	x0, [x19, #16]
   403cc:	cmp	x27, x0
   403d0:	b.gt	405b4 <mpfr_cot@@Base+0x428>
   403d4:	cmp	x2, x0
   403d8:	b.lt	405b4 <mpfr_cot@@Base+0x428>  // b.tstop
   403dc:	cbz	w22, 40200 <mpfr_cot@@Base+0x74>
   403e0:	orr	w20, w20, #0x8
   403e4:	str	w20, [x1]
   403e8:	b	40200 <mpfr_cot@@Base+0x74>
   403ec:	mov	w22, #0x1                   	// #1
   403f0:	tbz	w24, #31, 40354 <mpfr_cot@@Base+0x1c8>
   403f4:	mov	x0, x19
   403f8:	bl	c1b0 <mpfr_nextabove@plt>
   403fc:	mov	w22, #0x1                   	// #1
   40400:	b	40354 <mpfr_cot@@Base+0x1c8>
   40404:	mov	w21, #0x1                   	// #1
   40408:	b	403f4 <mpfr_cot@@Base+0x268>
   4040c:	mov	w21, #0x2                   	// #2
   40410:	b	403fc <mpfr_cot@@Base+0x270>
   40414:	cmp	x24, #0x1
   40418:	b.eq	404fc <mpfr_cot@@Base+0x370>  // b.none
   4041c:	b.gt	40438 <mpfr_cot@@Base+0x2ac>
   40420:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   40424:	add	x2, x2, #0x685
   40428:	mov	w1, #0x43                  	// #67
   4042c:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   40430:	add	x0, x0, #0x4a3
   40434:	bl	cbd0 <mpfr_assert_fail@plt>
   40438:	sub	x22, x24, #0x1
   4043c:	clz	x0, x22
   40440:	mov	w22, #0x40                  	// #64
   40444:	sub	w22, w22, w0
   40448:	sxtw	x22, w22
   4044c:	add	x22, x24, x22
   40450:	mov	x25, #0x40                  	// #64
   40454:	add	x22, x22, #0x3
   40458:	add	x28, sp, #0x70
   4045c:	mov	x1, x22
   40460:	mov	x0, x28
   40464:	bl	cb10 <mpfr_init2@plt>
   40468:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4046c:	ldr	x1, [x0, #2592]
   40470:	add	x0, x0, #0xa20
   40474:	blr	x1
   40478:	add	x1, x23, x0
   4047c:	mov	w2, #0x1                   	// #1
   40480:	str	wzr, [x23, x0]
   40484:	mov	x0, x28
   40488:	str	x1, [sp, #104]
   4048c:	mov	x1, x26
   40490:	bl	bc60 <mpfr_tan@plt>
   40494:	ldr	x0, [sp, #104]
   40498:	ldr	w0, [x0]
   4049c:	tbz	w0, #1, 40504 <mpfr_cot@@Base+0x378>
   404a0:	ldr	w22, [sp, #120]
   404a4:	mov	x0, x28
   404a8:	bl	c0f0 <mpfr_clear@plt>
   404ac:	ldr	x0, [sp, #104]
   404b0:	mov	w2, w22
   404b4:	str	w20, [x0]
   404b8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   404bc:	ldr	x1, [x0, #2528]
   404c0:	add	x0, x0, #0x9e0
   404c4:	blr	x1
   404c8:	str	x27, [x23, x0]
   404cc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   404d0:	ldr	x1, [x0, #2560]
   404d4:	add	x0, x0, #0xa00
   404d8:	blr	x1
   404dc:	cmp	w21, #0x0
   404e0:	ldr	x1, [sp, #96]
   404e4:	str	x1, [x23, x0]
   404e8:	csinc	w1, w21, wzr, ne  // ne = any
   404ec:	mov	x0, x19
   404f0:	bl	c450 <mpfr_underflow@plt>
   404f4:	mov	w22, w0
   404f8:	b	40200 <mpfr_cot@@Base+0x74>
   404fc:	mov	x22, #0x0                   	// #0
   40500:	b	4044c <mpfr_cot@@Base+0x2c0>
   40504:	mov	x1, #0x1                   	// #1
   40508:	mov	x2, x28
   4050c:	mov	x0, x28
   40510:	mov	w3, #0x0                   	// #0
   40514:	bl	c380 <mpfr_ui_div@plt>
   40518:	ldr	x0, [sp, #128]
   4051c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   40520:	cmp	x0, x1
   40524:	b.gt	4054c <mpfr_cot@@Base+0x3c0>
   40528:	mov	x0, #0xfffffffffffffeff    	// #-257
   4052c:	movk	x0, #0x7fff, lsl #48
   40530:	sub	x0, x0, x22
   40534:	cmp	x0, x25
   40538:	b.ge	40598 <mpfr_cot@@Base+0x40c>  // b.tcont
   4053c:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   40540:	mov	w1, #0x5f                  	// #95
   40544:	add	x2, x2, #0x6df
   40548:	b	4042c <mpfr_cot@@Base+0x2a0>
   4054c:	ldr	x1, [sp, #112]
   40550:	cmp	w21, #0x0
   40554:	ldr	x0, [sp, #136]
   40558:	sub	x1, x1, #0x1
   4055c:	cinc	x3, x24, eq  // eq = none
   40560:	sub	x2, x22, #0x2
   40564:	asr	x1, x1, #6
   40568:	add	x1, x1, #0x1
   4056c:	bl	c400 <mpfr_round_p@plt>
   40570:	cbz	w0, 40528 <mpfr_cot@@Base+0x39c>
   40574:	ldr	w3, [sp, #120]
   40578:	mov	w2, w21
   4057c:	mov	x1, x28
   40580:	mov	x0, x19
   40584:	bl	c730 <mpfr_set4@plt>
   40588:	mov	w22, w0
   4058c:	mov	x0, x28
   40590:	bl	c0f0 <mpfr_clear@plt>
   40594:	b	40384 <mpfr_cot@@Base+0x1f8>
   40598:	add	x22, x22, x25
   4059c:	mov	x25, #0x2                   	// #2
   405a0:	mov	x1, x22
   405a4:	mov	x0, x28
   405a8:	sdiv	x25, x22, x25
   405ac:	bl	bf50 <mpfr_set_prec@plt>
   405b0:	b	40468 <mpfr_cot@@Base+0x2dc>
   405b4:	mov	w2, w21
   405b8:	mov	w1, w22
   405bc:	mov	x0, x19
   405c0:	bl	cbc0 <mpfr_check_range@plt>
   405c4:	b	404f4 <mpfr_cot@@Base+0x368>

00000000000405c8 <mpfr_eint@@Base>:
   405c8:	sub	sp, sp, #0x260
   405cc:	stp	x29, x30, [sp]
   405d0:	mov	x29, sp
   405d4:	stp	x23, x24, [sp, #48]
   405d8:	mov	x23, x0
   405dc:	ldr	x0, [x1, #16]
   405e0:	stp	x19, x20, [sp, #16]
   405e4:	mov	x20, x1
   405e8:	stp	x21, x22, [sp, #32]
   405ec:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   405f0:	cmp	x0, x1
   405f4:	stp	x25, x26, [sp, #64]
   405f8:	stp	x27, x28, [sp, #80]
   405fc:	str	w2, [sp, #128]
   40600:	b.gt	406c8 <mpfr_eint@@Base+0x100>
   40604:	mov	x2, #0x2                   	// #2
   40608:	movk	x2, #0x8000, lsl #48
   4060c:	cmp	x0, x2
   40610:	b.ne	40640 <mpfr_eint@@Base+0x78>  // b.any
   40614:	str	x0, [x23, #16]
   40618:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4061c:	ldr	x1, [x0, #2592]
   40620:	add	x0, x0, #0xa20
   40624:	blr	x1
   40628:	mrs	x1, tpidr_el0
   4062c:	add	x0, x1, x0
   40630:	ldr	w1, [x0]
   40634:	orr	w1, w1, #0x4
   40638:	str	w1, [x0]
   4063c:	b	40660 <mpfr_eint@@Base+0x98>
   40640:	cmp	x0, x1
   40644:	b.ne	40698 <mpfr_eint@@Base+0xd0>  // b.any
   40648:	ldr	w1, [x20, #8]
   4064c:	cmp	w1, #0x0
   40650:	b.le	40688 <mpfr_eint@@Base+0xc0>
   40654:	str	x0, [x23, #16]
   40658:	mov	w0, #0x1                   	// #1
   4065c:	str	w0, [x23, #8]
   40660:	mov	w20, #0x0                   	// #0
   40664:	mov	w0, w20
   40668:	ldp	x29, x30, [sp]
   4066c:	ldp	x19, x20, [sp, #16]
   40670:	ldp	x21, x22, [sp, #32]
   40674:	ldp	x23, x24, [sp, #48]
   40678:	ldp	x25, x26, [sp, #64]
   4067c:	ldp	x27, x28, [sp, #80]
   40680:	add	sp, sp, #0x260
   40684:	ret
   40688:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4068c:	str	x0, [x23, #16]
   40690:	mov	w0, #0xffffffff            	// #-1
   40694:	b	4065c <mpfr_eint@@Base+0x94>
   40698:	mov	w0, #0xffffffff            	// #-1
   4069c:	str	w0, [x23, #8]
   406a0:	str	x1, [x23, #16]
   406a4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   406a8:	ldr	x1, [x0, #2592]
   406ac:	add	x0, x0, #0xa20
   406b0:	blr	x1
   406b4:	mrs	x1, tpidr_el0
   406b8:	add	x0, x1, x0
   406bc:	ldr	w1, [x0]
   406c0:	orr	w1, w1, #0x20
   406c4:	b	40638 <mpfr_eint@@Base+0x70>
   406c8:	ldr	x1, [x20]
   406cc:	str	x1, [sp, #336]
   406d0:	ldr	x1, [x20, #24]
   406d4:	mrs	x21, tpidr_el0
   406d8:	str	x1, [sp, #360]
   406dc:	mov	w1, #0x1                   	// #1
   406e0:	str	w1, [sp, #344]
   406e4:	str	x0, [sp, #352]
   406e8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   406ec:	ldr	x1, [x0, #2592]
   406f0:	add	x0, x0, #0xa20
   406f4:	blr	x1
   406f8:	ldr	w0, [x21, x0]
   406fc:	str	w0, [sp, #132]
   40700:	ldr	x22, [x23]
   40704:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   40708:	ldr	x1, [x0, #2528]
   4070c:	add	x0, x0, #0x9e0
   40710:	blr	x1
   40714:	add	x1, x21, x0
   40718:	ldr	x0, [x21, x0]
   4071c:	str	x0, [sp, #136]
   40720:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   40724:	ldr	x2, [x0, #2560]
   40728:	add	x0, x0, #0xa00
   4072c:	blr	x2
   40730:	ldr	x2, [x21, x0]
   40734:	str	x2, [sp, #144]
   40738:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   4073c:	str	x2, [x1]
   40740:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   40744:	str	x1, [x21, x0]
   40748:	cmp	x22, #0x1
   4074c:	b.eq	40880 <mpfr_eint@@Base+0x2b8>  // b.none
   40750:	b.gt	4076c <mpfr_eint@@Base+0x1a4>
   40754:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   40758:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   4075c:	add	x2, x2, #0xffa
   40760:	add	x0, x0, #0x4b1
   40764:	mov	w1, #0xfa                  	// #250
   40768:	bl	cbd0 <mpfr_assert_fail@plt>
   4076c:	ldr	x0, [x23]
   40770:	sub	x0, x0, #0x1
   40774:	clz	x1, x0
   40778:	mov	w0, #0x40                  	// #64
   4077c:	sub	w0, w0, w1
   40780:	lsl	w0, w0, #1
   40784:	sxtw	x0, w0
   40788:	add	x19, sp, #0x110
   4078c:	add	x22, x22, x0
   40790:	mov	x1, #0x40                  	// #64
   40794:	mov	x0, x19
   40798:	add	x25, sp, #0x130
   4079c:	bl	cb10 <mpfr_init2@plt>
   407a0:	mov	x0, x25
   407a4:	mov	x1, #0x40                  	// #64
   407a8:	bl	cb10 <mpfr_init2@plt>
   407ac:	add	x22, x22, #0x6
   407b0:	ldr	w0, [x20, #8]
   407b4:	cmp	w0, #0x0
   407b8:	b.le	40888 <mpfr_eint@@Base+0x2c0>
   407bc:	mov	x1, x20
   407c0:	mov	w2, #0x2                   	// #2
   407c4:	mov	x0, x19
   407c8:	bl	c110 <mpfr_log@plt>
   407cc:	mov	x2, x19
   407d0:	mov	x1, x20
   407d4:	mov	w3, #0x3                   	// #3
   407d8:	mov	x0, x25
   407dc:	bl	bbf0 <mpfr_sub@plt>
   407e0:	adrp	x2, 73000 <__gmpfr_l2b@@Base+0x200>
   407e4:	mov	x1, x25
   407e8:	mov	x0, x25
   407ec:	mov	w3, #0x3                   	// #3
   407f0:	ldr	x2, [x2, #4048]
   407f4:	bl	c6b0 <mpfr_div@plt>
   407f8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   407fc:	ldr	x1, [x0, #2560]
   40800:	add	x0, x0, #0xa00
   40804:	blr	x1
   40808:	mov	x2, #0x0                   	// #0
   4080c:	ldr	x1, [x21, x0]
   40810:	add	x24, x21, x0
   40814:	mov	x0, x25
   40818:	bl	bfd0 <mpfr_cmp_ui_2exp@plt>
   4081c:	tbnz	w0, #31, 40888 <mpfr_eint@@Base+0x2c0>
   40820:	mov	x0, x19
   40824:	bl	c0f0 <mpfr_clear@plt>
   40828:	mov	x0, x25
   4082c:	bl	c0f0 <mpfr_clear@plt>
   40830:	mov	w2, #0x1                   	// #1
   40834:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   40838:	ldr	x1, [x0, #2592]
   4083c:	add	x0, x0, #0xa20
   40840:	blr	x1
   40844:	ldr	w1, [sp, #132]
   40848:	str	w1, [x21, x0]
   4084c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   40850:	ldr	x1, [x0, #2528]
   40854:	add	x0, x0, #0x9e0
   40858:	blr	x1
   4085c:	ldr	x1, [sp, #136]
   40860:	str	x1, [x21, x0]
   40864:	ldr	w1, [sp, #128]
   40868:	ldr	x0, [sp, #144]
   4086c:	str	x0, [x24]
   40870:	mov	x0, x23
   40874:	bl	bfc0 <mpfr_overflow@plt>
   40878:	mov	w20, w0
   4087c:	b	40664 <mpfr_eint@@Base+0x9c>
   40880:	mov	x0, #0x0                   	// #0
   40884:	b	40788 <mpfr_eint@@Base+0x1c0>
   40888:	ldr	w0, [x20, #8]
   4088c:	tbz	w0, #31, 40938 <mpfr_eint@@Base+0x370>
   40890:	ldr	x0, [x20, #16]
   40894:	cmp	x0, #0x0
   40898:	b.le	409b0 <mpfr_eint@@Base+0x3e8>
   4089c:	adrp	x2, 73000 <__gmpfr_l2b@@Base+0x200>
   408a0:	mov	x1, x20
   408a4:	mov	x0, x25
   408a8:	mov	w3, #0x2                   	// #2
   408ac:	ldr	x2, [x2, #3984]
   408b0:	bl	c6b0 <mpfr_div@plt>
   408b4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   408b8:	ldr	x1, [x0, #2528]
   408bc:	add	x0, x0, #0x9e0
   408c0:	blr	x1
   408c4:	mov	x2, #0x0                   	// #0
   408c8:	ldr	x1, [x21, x0]
   408cc:	add	x24, x21, x0
   408d0:	mov	x0, x25
   408d4:	bl	c460 <mpfr_cmp_si_2exp@plt>
   408d8:	tbz	w0, #31, 40938 <mpfr_eint@@Base+0x370>
   408dc:	mov	x0, x19
   408e0:	bl	c0f0 <mpfr_clear@plt>
   408e4:	mov	x0, x25
   408e8:	bl	c0f0 <mpfr_clear@plt>
   408ec:	mov	w2, #0xffffffff            	// #-1
   408f0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   408f4:	ldr	x1, [x0, #2592]
   408f8:	add	x0, x0, #0xa20
   408fc:	blr	x1
   40900:	ldr	w1, [sp, #132]
   40904:	str	w1, [x21, x0]
   40908:	ldr	x0, [sp, #136]
   4090c:	str	x0, [x24]
   40910:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   40914:	ldr	x1, [x0, #2560]
   40918:	add	x0, x0, #0xa00
   4091c:	blr	x1
   40920:	ldr	x1, [sp, #144]
   40924:	str	x1, [x21, x0]
   40928:	ldr	w1, [sp, #128]
   4092c:	mov	x0, x23
   40930:	bl	c450 <mpfr_underflow@plt>
   40934:	b	40878 <mpfr_eint@@Base+0x2b0>
   40938:	ldr	w0, [x20, #8]
   4093c:	cmp	w0, #0x0
   40940:	b.le	409b0 <mpfr_eint@@Base+0x3e8>
   40944:	ldr	x0, [x20, #16]
   40948:	cmn	x0, #0x1
   4094c:	b.ne	409b0 <mpfr_eint@@Base+0x3e8>  // b.any
   40950:	add	x24, sp, #0x1d0
   40954:	mov	x1, #0x20                  	// #32
   40958:	mov	x0, x24
   4095c:	bl	cb10 <mpfr_init2@plt>
   40960:	mov	x1, #0xa54b                	// #42315
   40964:	mov	w3, #0x0                   	// #0
   40968:	mov	x2, #0xffffffffffffffe0    	// #-32
   4096c:	movk	x1, #0x5f5c, lsl #16
   40970:	mov	x0, x24
   40974:	bl	c680 <mpfr_set_ui_2exp@plt>
   40978:	mov	x1, x20
   4097c:	mov	x2, x24
   40980:	mov	x0, x24
   40984:	mov	w3, #0x0                   	// #0
   40988:	bl	bbf0 <mpfr_sub@plt>
   4098c:	ldr	x0, [sp, #480]
   40990:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   40994:	cmp	x0, x1
   40998:	b.eq	40b78 <mpfr_eint@@Base+0x5b0>  // b.none
   4099c:	cmp	x0, #0x0
   409a0:	csneg	x0, xzr, x0, ge  // ge = tcont
   409a4:	add	x22, x22, x0
   409a8:	mov	x0, x24
   409ac:	bl	c0f0 <mpfr_clear@plt>
   409b0:	mov	x1, x22
   409b4:	mov	x0, x19
   409b8:	bl	bf50 <mpfr_set_prec@plt>
   409bc:	add	x26, sp, #0x1d0
   409c0:	mov	x0, x25
   409c4:	mov	x1, x22
   409c8:	bl	bf50 <mpfr_set_prec@plt>
   409cc:	mov	x0, #0x40                  	// #64
   409d0:	str	x0, [sp, #168]
   409d4:	add	x0, sp, #0x150
   409d8:	str	x0, [sp, #184]
   409dc:	add	x0, x26, #0x10
   409e0:	str	x0, [sp, #192]
   409e4:	ldr	x0, [x20, #16]
   409e8:	cmp	x0, #0x0
   409ec:	b.le	40c0c <mpfr_eint@@Base+0x644>
   409f0:	scvtf	d0, x0
   409f4:	fmov	d2, #5.000000000000000000e-01
   409f8:	scvtf	d1, x22
   409fc:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   40a00:	fmadd	d0, d0, d2, d1
   40a04:	ldr	d2, [x0, #3224]
   40a08:	fmov	d1, #1.000000000000000000e+00
   40a0c:	ldr	x0, [sp, #184]
   40a10:	fmadd	d0, d0, d2, d1
   40a14:	bl	bd70 <mpfr_cmp_d@plt>
   40a18:	cmp	w0, #0x0
   40a1c:	b.le	40c0c <mpfr_eint@@Base+0x644>
   40a20:	ldr	x0, [sp, #272]
   40a24:	add	x27, sp, #0x1b0
   40a28:	str	x0, [sp, #96]
   40a2c:	add	x28, sp, #0x190
   40a30:	mov	x1, x0
   40a34:	mov	x0, x27
   40a38:	bl	cb10 <mpfr_init2@plt>
   40a3c:	mov	x24, #0x1                   	// #1
   40a40:	ldr	x1, [sp, #96]
   40a44:	mov	x0, x28
   40a48:	bl	cb10 <mpfr_init2@plt>
   40a4c:	mov	x0, x26
   40a50:	mov	x1, #0x1f                  	// #31
   40a54:	bl	cb10 <mpfr_init2@plt>
   40a58:	mov	x2, x20
   40a5c:	mov	w3, #0x0                   	// #0
   40a60:	mov	x1, #0x1                   	// #1
   40a64:	mov	x0, x28
   40a68:	bl	c380 <mpfr_ui_div@plt>
   40a6c:	mov	w3, #0x0                   	// #0
   40a70:	mov	x2, #0x0                   	// #0
   40a74:	mov	x1, #0x1                   	// #1
   40a78:	mov	x0, x27
   40a7c:	bl	c680 <mpfr_set_ui_2exp@plt>
   40a80:	ldr	w3, [sp, #440]
   40a84:	mov	x1, x27
   40a88:	mov	x0, x19
   40a8c:	mov	w2, #0x0                   	// #0
   40a90:	bl	c730 <mpfr_set4@plt>
   40a94:	mov	w0, #0x1                   	// #1
   40a98:	str	w0, [sp, #472]
   40a9c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   40aa0:	str	x0, [sp, #480]
   40aa4:	ldr	x1, [sp, #96]
   40aa8:	mov	x2, x28
   40aac:	ldr	x0, [sp, #448]
   40ab0:	mov	w3, #0x0                   	// #0
   40ab4:	add	x0, x1, x0
   40ab8:	ldr	x1, [sp, #288]
   40abc:	cmp	x0, x1
   40ac0:	b.gt	40b80 <mpfr_eint@@Base+0x5b8>
   40ac4:	mov	x1, x19
   40ac8:	mov	x0, x19
   40acc:	bl	bdd0 <mpfr_mul@plt>
   40ad0:	mov	x1, x20
   40ad4:	mov	w2, #0x0                   	// #0
   40ad8:	mov	x0, x27
   40adc:	bl	c7e0 <mpfr_exp@plt>
   40ae0:	mov	x2, x27
   40ae4:	mov	x1, x19
   40ae8:	mov	w3, #0x0                   	// #0
   40aec:	mov	x0, x19
   40af0:	bl	bdd0 <mpfr_mul@plt>
   40af4:	mov	x1, x26
   40af8:	mov	w3, #0x2                   	// #2
   40afc:	mov	x2, #0x2                   	// #2
   40b00:	mov	x0, x26
   40b04:	bl	c350 <mpfr_mul_2ui@plt>
   40b08:	mov	x1, x26
   40b0c:	mov	w3, #0x2                   	// #2
   40b10:	mov	x2, #0x8                   	// #8
   40b14:	mov	x0, x26
   40b18:	bl	c2f0 <mpfr_add_ui@plt>
   40b1c:	mov	x0, x27
   40b20:	ldr	x24, [sp, #480]
   40b24:	bl	c0f0 <mpfr_clear@plt>
   40b28:	mov	x0, x28
   40b2c:	bl	c0f0 <mpfr_clear@plt>
   40b30:	mov	x0, x26
   40b34:	bl	c0f0 <mpfr_clear@plt>
   40b38:	ldr	x1, [sp, #288]
   40b3c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   40b40:	cmp	x1, x0
   40b44:	b.gt	410d8 <mpfr_eint@@Base+0xb10>
   40b48:	ldr	x1, [sp, #168]
   40b4c:	mov	x0, #0xfffffffffffffeff    	// #-257
   40b50:	movk	x0, #0x7fff, lsl #48
   40b54:	sub	x0, x0, x22
   40b58:	cmp	x0, x1
   40b5c:	b.ge	411ac <mpfr_eint@@Base+0xbe4>  // b.tcont
   40b60:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   40b64:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   40b68:	add	x2, x2, #0x519
   40b6c:	add	x0, x0, #0x4b1
   40b70:	mov	w1, #0x159                 	// #345
   40b74:	bl	cbd0 <mpfr_assert_fail@plt>
   40b78:	mov	x0, #0x20                  	// #32
   40b7c:	b	409a4 <mpfr_eint@@Base+0x3dc>
   40b80:	mov	x1, x27
   40b84:	mov	x0, x27
   40b88:	bl	bdd0 <mpfr_mul@plt>
   40b8c:	mov	x2, x24
   40b90:	mov	x1, x27
   40b94:	mov	x0, x27
   40b98:	mov	w3, #0x0                   	// #0
   40b9c:	bl	bad0 <mpfr_mul_ui@plt>
   40ba0:	ldr	x2, [sp, #288]
   40ba4:	mov	x1, x26
   40ba8:	ldr	x0, [sp, #448]
   40bac:	mov	w3, #0x2                   	// #2
   40bb0:	sub	x2, x2, x0
   40bb4:	mov	x0, x26
   40bb8:	bl	bc10 <mpfr_mul_2si@plt>
   40bbc:	mov	x0, #0x6                   	// #6
   40bc0:	mov	x1, x26
   40bc4:	mov	w3, #0x2                   	// #2
   40bc8:	mul	x2, x24, x0
   40bcc:	mov	x0, x26
   40bd0:	add	x24, x24, #0x1
   40bd4:	bl	c2f0 <mpfr_add_ui@plt>
   40bd8:	ldr	x2, [sp, #288]
   40bdc:	mov	x1, x26
   40be0:	ldr	x0, [sp, #448]
   40be4:	mov	w3, #0x2                   	// #2
   40be8:	sub	x2, x2, x0
   40bec:	mov	x0, x26
   40bf0:	bl	c4b0 <mpfr_div_2si@plt>
   40bf4:	mov	x2, x27
   40bf8:	mov	x1, x19
   40bfc:	mov	x0, x19
   40c00:	mov	w3, #0x0                   	// #0
   40c04:	bl	c230 <mpfr_add@plt>
   40c08:	b	40aa4 <mpfr_eint@@Base+0x4dc>
   40c0c:	ldr	x0, [sp, #272]
   40c10:	str	x0, [sp, #96]
   40c14:	ldr	x1, [x20, #16]
   40c18:	neg	x0, x0
   40c1c:	cmp	x1, x0
   40c20:	b.gt	40d00 <mpfr_eint@@Base+0x738>
   40c24:	ldr	w3, [x20, #8]
   40c28:	mov	x1, x20
   40c2c:	mov	x0, x19
   40c30:	mov	w2, #0x0                   	// #0
   40c34:	bl	c730 <mpfr_set4@plt>
   40c38:	str	xzr, [sp, #96]
   40c3c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   40c40:	ldr	x1, [x0, #2624]
   40c44:	add	x0, x0, #0xa40
   40c48:	blr	x1
   40c4c:	mov	w2, #0x0                   	// #0
   40c50:	add	x1, x21, x0
   40c54:	mov	x0, x25
   40c58:	ldr	x24, [sp, #288]
   40c5c:	bl	c410 <mpfr_cache@plt>
   40c60:	mov	x1, x19
   40c64:	mov	x2, x25
   40c68:	mov	x0, x19
   40c6c:	mov	w3, #0x0                   	// #0
   40c70:	bl	c230 <mpfr_add@plt>
   40c74:	ldr	x0, [sp, #96]
   40c78:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   40c7c:	adds	x24, x24, x0
   40c80:	csinv	x24, x24, xzr, pl  // pl = nfrst
   40c84:	add	x0, x24, #0x2
   40c88:	ldr	x24, [sp, #288]
   40c8c:	cmp	x24, x1
   40c90:	b.ne	40c98 <mpfr_eint@@Base+0x6d0>  // b.any
   40c94:	ldr	x24, [sp, #320]
   40c98:	subs	x0, x0, x24
   40c9c:	ldr	x1, [sp, #184]
   40ca0:	csel	x27, x0, xzr, pl  // pl = nfrst
   40ca4:	mov	w2, #0x0                   	// #0
   40ca8:	mov	x0, x25
   40cac:	add	x24, x24, #0x1
   40cb0:	bl	c110 <mpfr_log@plt>
   40cb4:	add	x24, x24, x27
   40cb8:	mov	x1, x19
   40cbc:	mov	x2, x25
   40cc0:	mov	x0, x19
   40cc4:	mov	w3, #0x0                   	// #0
   40cc8:	bl	c230 <mpfr_add@plt>
   40ccc:	ldr	x0, [sp, #320]
   40cd0:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   40cd4:	cmp	x0, x1
   40cd8:	b.eq	40ce4 <mpfr_eint@@Base+0x71c>  // b.none
   40cdc:	cmp	x24, x0
   40ce0:	csel	x24, x24, x0, ge  // ge = tcont
   40ce4:	ldr	x2, [sp, #288]
   40ce8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   40cec:	cmp	x2, x0
   40cf0:	b.eq	410d0 <mpfr_eint@@Base+0xb08>  // b.none
   40cf4:	subs	x24, x24, x2
   40cf8:	csel	x24, x24, xzr, pl  // pl = nfrst
   40cfc:	b	40b38 <mpfr_eint@@Base+0x570>
   40d00:	add	x0, sp, #0xe0
   40d04:	add	x24, sp, #0xf0
   40d08:	str	x0, [sp, #120]
   40d0c:	bl	c010 <mpfr_mpz_init@plt>
   40d10:	mov	x0, x24
   40d14:	bl	c010 <mpfr_mpz_init@plt>
   40d18:	add	x0, sp, #0x100
   40d1c:	str	x0, [sp, #160]
   40d20:	bl	c010 <mpfr_mpz_init@plt>
   40d24:	add	x0, sp, #0xd0
   40d28:	str	x0, [sp, #104]
   40d2c:	bl	c010 <mpfr_mpz_init@plt>
   40d30:	ldr	x0, [sp, #192]
   40d34:	mov	x1, #0x1f                  	// #31
   40d38:	stp	x0, x1, [sp, #392]
   40d3c:	add	x2, x26, #0x18
   40d40:	stp	xzr, x0, [sp, #464]
   40d44:	mov	w0, #0x1                   	// #1
   40d48:	str	w0, [sp, #376]
   40d4c:	str	w0, [sp, #408]
   40d50:	str	w0, [sp, #440]
   40d54:	ldr	x0, [sp, #104]
   40d58:	str	x1, [sp, #368]
   40d5c:	stp	x2, x1, [sp, #424]
   40d60:	add	x1, x26, #0x20
   40d64:	str	x1, [sp, #456]
   40d68:	mov	x1, x20
   40d6c:	bl	cb50 <mpfr_get_z_2exp@plt>
   40d70:	mov	x28, x0
   40d74:	ldr	x2, [x20]
   40d78:	ldr	x0, [sp, #96]
   40d7c:	cmp	x0, x2
   40d80:	b.ge	40d98 <mpfr_eint@@Base+0x7d0>  // b.tcont
   40d84:	ldr	x1, [sp, #104]
   40d88:	sub	x2, x2, x0
   40d8c:	add	x28, x28, x2
   40d90:	mov	x0, x1
   40d94:	bl	c7d0 <__gmpz_tdiv_q_2exp@plt>
   40d98:	ldr	x0, [sp, #104]
   40d9c:	mov	x1, #0x0                   	// #0
   40da0:	bl	bb10 <__gmpz_scan1@plt>
   40da4:	mov	x2, x0
   40da8:	ldr	x1, [sp, #104]
   40dac:	mov	x27, x0
   40db0:	mov	x0, x1
   40db4:	bl	c7d0 <__gmpz_tdiv_q_2exp@plt>
   40db8:	add	x0, x28, x27
   40dbc:	mov	x1, #0x1                   	// #1
   40dc0:	str	x0, [sp, #152]
   40dc4:	mov	x0, x24
   40dc8:	bl	bd30 <__gmpz_set_ui@plt>
   40dcc:	add	x27, sp, #0x170
   40dd0:	ldr	x2, [sp, #96]
   40dd4:	mov	x1, x24
   40dd8:	mov	x0, x24
   40ddc:	add	x28, sp, #0x190
   40de0:	bl	c290 <__gmpz_mul_2exp@plt>
   40de4:	mov	w0, #0x1                   	// #1
   40de8:	str	w0, [sp, #376]
   40dec:	str	w0, [sp, #440]
   40df0:	mov	x0, #0x1                   	// #1
   40df4:	str	x0, [sp, #112]
   40df8:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   40dfc:	ldr	x0, [sp, #96]
   40e00:	str	x1, [sp, #384]
   40e04:	str	x1, [sp, #448]
   40e08:	sub	x0, x0, #0x1
   40e0c:	str	x0, [sp, #176]
   40e10:	ldr	x2, [sp, #176]
   40e14:	mov	x1, x27
   40e18:	mov	w3, #0x2                   	// #2
   40e1c:	mov	x0, x27
   40e20:	bl	c350 <mpfr_mul_2ui@plt>
   40e24:	ldr	w0, [sp, #244]
   40e28:	mov	x2, x24
   40e2c:	mov	x1, x27
   40e30:	mov	w3, #0x2                   	// #2
   40e34:	tbnz	w0, #31, 40f98 <mpfr_eint@@Base+0x9d0>
   40e38:	mov	x0, x27
   40e3c:	bl	c510 <mpfr_add_z@plt>
   40e40:	ldr	w0, [sp, #212]
   40e44:	mov	x1, #0xfffffffffffffff8    	// #-8
   40e48:	ldr	x2, [sp, #216]
   40e4c:	cmp	w0, #0x0
   40e50:	cneg	w0, w0, lt  // lt = tstop
   40e54:	mov	w3, #0x2                   	// #2
   40e58:	add	x1, x1, w0, sxtw #3
   40e5c:	sbfiz	x0, x0, #6, #32
   40e60:	ldr	x2, [x2, x1]
   40e64:	mov	x1, x27
   40e68:	clz	x2, x2
   40e6c:	sub	x2, x0, x2
   40e70:	ldr	x0, [sp, #176]
   40e74:	sub	x2, x2, x0
   40e78:	ldr	x0, [sp, #152]
   40e7c:	add	x2, x2, x0
   40e80:	mov	x0, x27
   40e84:	bl	bc10 <mpfr_mul_2si@plt>
   40e88:	ldr	x2, [sp, #112]
   40e8c:	mov	x1, x27
   40e90:	mov	w3, #0x2                   	// #2
   40e94:	mov	x0, x27
   40e98:	bl	cd00 <mpfr_div_ui@plt>
   40e9c:	mov	x1, x27
   40ea0:	mov	w3, #0x2                   	// #2
   40ea4:	mov	x2, #0x1                   	// #1
   40ea8:	mov	x0, x27
   40eac:	bl	c2f0 <mpfr_add_ui@plt>
   40eb0:	ldr	x2, [sp, #104]
   40eb4:	mov	x0, x24
   40eb8:	mov	x1, x24
   40ebc:	bl	c070 <__gmpz_mul@plt>
   40ec0:	ldr	x0, [sp, #152]
   40ec4:	tbz	x0, #63, 40fa4 <mpfr_eint@@Base+0x9dc>
   40ec8:	neg	x2, x0
   40ecc:	mov	x1, x24
   40ed0:	mov	x0, x24
   40ed4:	bl	c7d0 <__gmpz_tdiv_q_2exp@plt>
   40ed8:	ldr	x2, [sp, #112]
   40edc:	mov	x1, x24
   40ee0:	mov	x0, x24
   40ee4:	bl	c0c0 <__gmpz_tdiv_q_ui@plt>
   40ee8:	ldr	x2, [sp, #112]
   40eec:	mov	x1, x24
   40ef0:	ldr	x0, [sp, #160]
   40ef4:	bl	c0c0 <__gmpz_tdiv_q_ui@plt>
   40ef8:	ldr	x1, [sp, #120]
   40efc:	ldr	x2, [sp, #160]
   40f00:	mov	x0, x1
   40f04:	bl	ca50 <__gmpz_add@plt>
   40f08:	ldr	x2, [sp, #112]
   40f0c:	mov	x1, x27
   40f10:	mov	w3, #0x2                   	// #2
   40f14:	mov	x0, x28
   40f18:	bl	cd00 <mpfr_div_ui@plt>
   40f1c:	mov	x1, x28
   40f20:	mov	w3, #0x2                   	// #2
   40f24:	mov	x2, #0x1                   	// #1
   40f28:	mov	x0, x28
   40f2c:	bl	c2f0 <mpfr_add_ui@plt>
   40f30:	add	x5, sp, #0x1b0
   40f34:	mov	x2, x28
   40f38:	mov	x1, x5
   40f3c:	mov	x0, x5
   40f40:	mov	w3, #0x2                   	// #2
   40f44:	str	x5, [sp, #200]
   40f48:	bl	c230 <mpfr_add@plt>
   40f4c:	ldr	w0, [sp, #244]
   40f50:	ldr	x5, [sp, #200]
   40f54:	cmp	w0, #0x0
   40f58:	cbz	w0, 40fb8 <mpfr_eint@@Base+0x9f0>
   40f5c:	cneg	w1, w0, lt  // lt = tstop
   40f60:	mov	x2, #0xfffffffffffffff8    	// #-8
   40f64:	ldr	x3, [sp, #248]
   40f68:	add	x2, x2, w1, sxtw #3
   40f6c:	sbfiz	x1, x1, #6, #32
   40f70:	ldr	x2, [x3, x2]
   40f74:	clz	x2, x2
   40f78:	sub	x1, x1, x2
   40f7c:	ldr	x2, [sp, #448]
   40f80:	cmp	x2, x1
   40f84:	b.gt	40fc0 <mpfr_eint@@Base+0x9f8>
   40f88:	ldr	x0, [sp, #112]
   40f8c:	add	x0, x0, #0x1
   40f90:	str	x0, [sp, #112]
   40f94:	b	40e10 <mpfr_eint@@Base+0x848>
   40f98:	mov	x0, x27
   40f9c:	bl	bde0 <mpfr_sub_z@plt>
   40fa0:	b	40e40 <mpfr_eint@@Base+0x878>
   40fa4:	ldr	x2, [sp, #152]
   40fa8:	mov	x1, x24
   40fac:	mov	x0, x24
   40fb0:	bl	c290 <__gmpz_mul_2exp@plt>
   40fb4:	b	40ed8 <mpfr_eint@@Base+0x910>
   40fb8:	mov	x1, #0x0                   	// #0
   40fbc:	b	40f7c <mpfr_eint@@Base+0x9b4>
   40fc0:	cmp	w0, #0x0
   40fc4:	mov	x2, x24
   40fc8:	cneg	w0, w0, lt  // lt = tstop
   40fcc:	mov	x1, x27
   40fd0:	mov	w3, #0x2                   	// #2
   40fd4:	str	x5, [sp, #152]
   40fd8:	str	w0, [sp, #244]
   40fdc:	mov	x0, x27
   40fe0:	bl	c510 <mpfr_add_z@plt>
   40fe4:	ldr	x2, [sp, #112]
   40fe8:	mov	x1, x27
   40fec:	mov	w3, #0x2                   	// #2
   40ff0:	mov	x0, x27
   40ff4:	bl	cd00 <mpfr_div_ui@plt>
   40ff8:	mov	x1, x20
   40ffc:	mov	w3, #0x1                   	// #1
   41000:	mov	w2, #0x2                   	// #2
   41004:	mov	x0, x28
   41008:	bl	c730 <mpfr_set4@plt>
   4100c:	mov	x2, x28
   41010:	mov	x1, x27
   41014:	mov	w3, #0x2                   	// #2
   41018:	mov	x0, x27
   4101c:	bl	bdd0 <mpfr_mul@plt>
   41020:	ldr	x1, [sp, #112]
   41024:	mov	x2, x28
   41028:	mov	x0, x28
   4102c:	mov	w3, #0x3                   	// #3
   41030:	bl	cae0 <mpfr_ui_sub@plt>
   41034:	ldr	w0, [sp, #408]
   41038:	tbnz	w0, #31, 4109c <mpfr_eint@@Base+0xad4>
   4103c:	mov	x2, x28
   41040:	mov	x1, x27
   41044:	mov	w3, #0x2                   	// #2
   41048:	mov	x0, x27
   4104c:	bl	c6b0 <mpfr_div@plt>
   41050:	ldr	x5, [sp, #152]
   41054:	mov	w3, #0x2                   	// #2
   41058:	mov	x2, x27
   4105c:	mov	x1, x5
   41060:	mov	x0, x5
   41064:	bl	c230 <mpfr_add@plt>
   41068:	ldr	x1, [sp, #120]
   4106c:	mov	w2, #0x0                   	// #0
   41070:	mov	x0, x19
   41074:	bl	c2d0 <mpfr_set_z@plt>
   41078:	ldr	x2, [sp, #96]
   4107c:	mov	x1, x19
   41080:	mov	x0, x19
   41084:	mov	w3, #0x0                   	// #0
   41088:	bl	c980 <mpfr_div_2ui@plt>
   4108c:	ldr	x0, [sp, #288]
   41090:	ldr	x1, [sp, #448]
   41094:	sub	x0, x1, x0
   41098:	str	x0, [sp, #96]
   4109c:	ldr	x1, [sp, #464]
   410a0:	cbz	x1, 410ac <mpfr_eint@@Base+0xae4>
   410a4:	ldr	x0, [sp, #472]
   410a8:	bl	ccc0 <mpfr_free_func@plt>
   410ac:	ldr	x0, [sp, #120]
   410b0:	bl	c200 <mpfr_mpz_clear@plt>
   410b4:	mov	x0, x24
   410b8:	bl	c200 <mpfr_mpz_clear@plt>
   410bc:	ldr	x0, [sp, #160]
   410c0:	bl	c200 <mpfr_mpz_clear@plt>
   410c4:	ldr	x0, [sp, #104]
   410c8:	bl	c200 <mpfr_mpz_clear@plt>
   410cc:	b	40c3c <mpfr_eint@@Base+0x674>
   410d0:	mov	x24, x22
   410d4:	b	40b38 <mpfr_eint@@Base+0x570>
   410d8:	ldr	w0, [sp, #128]
   410dc:	sub	x2, x22, x24
   410e0:	ldr	x1, [sp, #272]
   410e4:	cmp	w0, #0x0
   410e8:	ldr	x0, [sp, #296]
   410ec:	sub	x1, x1, #0x1
   410f0:	ldr	x3, [x23]
   410f4:	asr	x1, x1, #6
   410f8:	add	x1, x1, #0x1
   410fc:	cinc	x3, x3, eq  // eq = none
   41100:	bl	c400 <mpfr_round_p@plt>
   41104:	cbz	w0, 40b48 <mpfr_eint@@Base+0x580>
   41108:	ldr	w2, [sp, #128]
   4110c:	mov	x1, x19
   41110:	ldr	w3, [sp, #280]
   41114:	mov	x0, x23
   41118:	bl	c730 <mpfr_set4@plt>
   4111c:	mov	w20, w0
   41120:	mov	x0, x19
   41124:	bl	c0f0 <mpfr_clear@plt>
   41128:	mov	x0, x25
   4112c:	bl	c0f0 <mpfr_clear@plt>
   41130:	ldr	w2, [sp, #132]
   41134:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   41138:	ldr	x1, [x0, #2592]
   4113c:	add	x0, x0, #0xa20
   41140:	blr	x1
   41144:	add	x1, x21, x0
   41148:	str	w2, [x21, x0]
   4114c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   41150:	ldr	x2, [x0, #2528]
   41154:	add	x0, x0, #0x9e0
   41158:	blr	x2
   4115c:	ldr	x2, [sp, #136]
   41160:	str	x2, [x21, x0]
   41164:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   41168:	ldr	x2, [x0, #2560]
   4116c:	add	x0, x0, #0xa00
   41170:	blr	x2
   41174:	ldr	x2, [sp, #144]
   41178:	str	x2, [x21, x0]
   4117c:	ldr	x0, [x23, #16]
   41180:	ldr	x2, [sp, #136]
   41184:	cmp	x2, x0
   41188:	b.gt	411dc <mpfr_eint@@Base+0xc14>
   4118c:	ldr	x2, [sp, #144]
   41190:	cmp	x2, x0
   41194:	b.lt	411dc <mpfr_eint@@Base+0xc14>  // b.tstop
   41198:	cbz	w20, 40664 <mpfr_eint@@Base+0x9c>
   4119c:	ldr	w0, [sp, #132]
   411a0:	orr	w0, w0, #0x8
   411a4:	str	w0, [x1]
   411a8:	b	40664 <mpfr_eint@@Base+0x9c>
   411ac:	ldr	x0, [sp, #168]
   411b0:	add	x22, x22, x0
   411b4:	mov	x0, #0x2                   	// #2
   411b8:	mov	x1, x22
   411bc:	sdiv	x0, x22, x0
   411c0:	str	x0, [sp, #168]
   411c4:	mov	x0, x19
   411c8:	bl	bf50 <mpfr_set_prec@plt>
   411cc:	mov	x1, x22
   411d0:	mov	x0, x25
   411d4:	bl	bf50 <mpfr_set_prec@plt>
   411d8:	b	409e4 <mpfr_eint@@Base+0x41c>
   411dc:	ldr	w2, [sp, #128]
   411e0:	mov	w1, w20
   411e4:	mov	x0, x23
   411e8:	bl	cbc0 <mpfr_check_range@plt>
   411ec:	b	40878 <mpfr_eint@@Base+0x2b0>

00000000000411f0 <mpfr_sech@@Base>:
   411f0:	stp	x29, x30, [sp, #-144]!
   411f4:	mov	x29, sp
   411f8:	stp	x21, x22, [sp, #32]
   411fc:	mov	w22, w2
   41200:	mov	x21, x0
   41204:	ldr	x2, [x1, #16]
   41208:	stp	x19, x20, [sp, #16]
   4120c:	stp	x23, x24, [sp, #48]
   41210:	stp	x25, x26, [sp, #64]
   41214:	stp	x27, x28, [sp, #80]
   41218:	str	x1, [sp, #96]
   4121c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   41220:	cmp	x2, x1
   41224:	b.gt	412b8 <mpfr_sech@@Base+0xc8>
   41228:	mov	x3, #0x2                   	// #2
   4122c:	movk	x3, #0x8000, lsl #48
   41230:	cmp	x2, x3
   41234:	b.ne	41284 <mpfr_sech@@Base+0x94>  // b.any
   41238:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4123c:	ldr	x1, [x0, #2592]
   41240:	add	x0, x0, #0xa20
   41244:	blr	x1
   41248:	str	x2, [x21, #16]
   4124c:	mrs	x1, tpidr_el0
   41250:	add	x0, x1, x0
   41254:	ldr	w1, [x0]
   41258:	orr	w1, w1, #0x4
   4125c:	str	w1, [x0]
   41260:	mov	w19, #0x0                   	// #0
   41264:	mov	w0, w19
   41268:	ldp	x19, x20, [sp, #16]
   4126c:	ldp	x21, x22, [sp, #32]
   41270:	ldp	x23, x24, [sp, #48]
   41274:	ldp	x25, x26, [sp, #64]
   41278:	ldp	x27, x28, [sp, #80]
   4127c:	ldp	x29, x30, [sp], #144
   41280:	ret
   41284:	cmp	x2, x1
   41288:	b.ne	412a0 <mpfr_sech@@Base+0xb0>  // b.any
   4128c:	mov	w0, #0x1                   	// #1
   41290:	str	w0, [x21, #8]
   41294:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   41298:	str	x0, [x21, #16]
   4129c:	b	41260 <mpfr_sech@@Base+0x70>
   412a0:	mov	w3, w22
   412a4:	mov	x2, #0x0                   	// #0
   412a8:	mov	x1, #0x1                   	// #1
   412ac:	bl	c680 <mpfr_set_ui_2exp@plt>
   412b0:	mov	w19, w0
   412b4:	b	41264 <mpfr_sech@@Base+0x74>
   412b8:	mrs	x20, tpidr_el0
   412bc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   412c0:	ldr	x1, [x0, #2592]
   412c4:	add	x0, x0, #0xa20
   412c8:	blr	x1
   412cc:	ldr	w23, [x20, x0]
   412d0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   412d4:	ldr	x1, [x0, #2528]
   412d8:	add	x0, x0, #0x9e0
   412dc:	blr	x1
   412e0:	add	x1, x20, x0
   412e4:	ldr	x28, [x20, x0]
   412e8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   412ec:	ldr	x3, [x0, #2560]
   412f0:	add	x0, x0, #0xa00
   412f4:	blr	x3
   412f8:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   412fc:	str	x3, [x1]
   41300:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   41304:	ldr	x27, [x20, x0]
   41308:	str	x1, [x20, x0]
   4130c:	mov	x0, #0xfffffffffffffffe    	// #-2
   41310:	mul	x2, x2, x0
   41314:	cmp	x2, #0x0
   41318:	b.gt	413d4 <mpfr_sech@@Base+0x1e4>
   4131c:	ldr	x25, [x21]
   41320:	cmp	x25, #0x1
   41324:	b.ne	4146c <mpfr_sech@@Base+0x27c>  // b.any
   41328:	mov	x19, #0x0                   	// #0
   4132c:	add	x19, x19, x25
   41330:	mov	x24, #0x40                  	// #64
   41334:	add	x19, x19, #0x3
   41338:	add	x26, sp, #0x70
   4133c:	mov	x1, x19
   41340:	mov	x0, x26
   41344:	bl	cb10 <mpfr_init2@plt>
   41348:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4134c:	ldr	x1, [x0, #2592]
   41350:	add	x0, x0, #0xa20
   41354:	blr	x1
   41358:	add	x1, x20, x0
   4135c:	str	x1, [sp, #104]
   41360:	mov	w2, #0x1                   	// #1
   41364:	ldr	x1, [sp, #96]
   41368:	str	wzr, [x20, x0]
   4136c:	mov	x0, x26
   41370:	bl	bb70 <mpfr_cosh@plt>
   41374:	ldr	x0, [sp, #104]
   41378:	ldr	w0, [x0]
   4137c:	tbz	w0, #1, 414a0 <mpfr_sech@@Base+0x2b0>
   41380:	ldr	w19, [sp, #120]
   41384:	mov	x0, x26
   41388:	bl	c0f0 <mpfr_clear@plt>
   4138c:	ldr	x0, [sp, #104]
   41390:	mov	w2, w19
   41394:	str	w23, [x0]
   41398:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4139c:	ldr	x1, [x0, #2528]
   413a0:	add	x0, x0, #0x9e0
   413a4:	blr	x1
   413a8:	str	x28, [x20, x0]
   413ac:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   413b0:	ldr	x1, [x0, #2560]
   413b4:	add	x0, x0, #0xa00
   413b8:	blr	x1
   413bc:	cmp	w22, #0x0
   413c0:	str	x27, [x20, x0]
   413c4:	csinc	w1, w22, wzr, ne  // ne = any
   413c8:	mov	x0, x21
   413cc:	bl	c450 <mpfr_underflow@plt>
   413d0:	b	412b0 <mpfr_sech@@Base+0xc0>
   413d4:	ldr	x0, [x21]
   413d8:	add	x2, x2, #0x1
   413dc:	add	x0, x0, #0x1
   413e0:	cmp	x0, x2
   413e4:	b.cs	4131c <mpfr_sech@@Base+0x12c>  // b.hs, b.nlast
   413e8:	adrp	x1, 73000 <__gmpfr_l2b@@Base+0x200>
   413ec:	mov	w4, w22
   413f0:	mov	x0, x21
   413f4:	mov	w3, #0x0                   	// #0
   413f8:	ldr	x1, [x1, #3928]
   413fc:	bl	c5d0 <mpfr_round_near_x@plt>
   41400:	mov	w19, w0
   41404:	cbz	w0, 4131c <mpfr_sech@@Base+0x12c>
   41408:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4140c:	ldr	x1, [x0, #2592]
   41410:	add	x0, x0, #0xa20
   41414:	blr	x1
   41418:	add	x1, x20, x0
   4141c:	str	w23, [x20, x0]
   41420:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   41424:	ldr	x2, [x0, #2528]
   41428:	add	x0, x0, #0x9e0
   4142c:	blr	x2
   41430:	str	x28, [x20, x0]
   41434:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   41438:	ldr	x2, [x0, #2560]
   4143c:	add	x0, x0, #0xa00
   41440:	blr	x2
   41444:	str	x27, [x20, x0]
   41448:	ldr	x0, [x21, #16]
   4144c:	cmp	x28, x0
   41450:	b.gt	41550 <mpfr_sech@@Base+0x360>
   41454:	cmp	x27, x0
   41458:	b.lt	41550 <mpfr_sech@@Base+0x360>  // b.tstop
   4145c:	cbz	w19, 41264 <mpfr_sech@@Base+0x74>
   41460:	orr	w23, w23, #0x8
   41464:	str	w23, [x1]
   41468:	b	41264 <mpfr_sech@@Base+0x74>
   4146c:	b.gt	41488 <mpfr_sech@@Base+0x298>
   41470:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   41474:	add	x2, x2, #0x685
   41478:	mov	w1, #0x43                  	// #67
   4147c:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   41480:	add	x0, x0, #0x4a3
   41484:	bl	cbd0 <mpfr_assert_fail@plt>
   41488:	sub	x19, x25, #0x1
   4148c:	clz	x0, x19
   41490:	mov	w19, #0x40                  	// #64
   41494:	sub	w19, w19, w0
   41498:	sxtw	x19, w19
   4149c:	b	4132c <mpfr_sech@@Base+0x13c>
   414a0:	mov	x1, #0x1                   	// #1
   414a4:	mov	x2, x26
   414a8:	mov	x0, x26
   414ac:	mov	w3, #0x0                   	// #0
   414b0:	bl	c380 <mpfr_ui_div@plt>
   414b4:	ldr	x0, [sp, #128]
   414b8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   414bc:	cmp	x0, x1
   414c0:	b.gt	414e8 <mpfr_sech@@Base+0x2f8>
   414c4:	mov	x0, #0xfffffffffffffeff    	// #-257
   414c8:	movk	x0, #0x7fff, lsl #48
   414cc:	sub	x0, x0, x19
   414d0:	cmp	x0, x24
   414d4:	b.ge	41534 <mpfr_sech@@Base+0x344>  // b.tcont
   414d8:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   414dc:	mov	w1, #0x5f                  	// #95
   414e0:	add	x2, x2, #0x6df
   414e4:	b	4147c <mpfr_sech@@Base+0x28c>
   414e8:	ldr	x1, [sp, #112]
   414ec:	cmp	w22, #0x0
   414f0:	ldr	x0, [sp, #136]
   414f4:	sub	x1, x1, #0x1
   414f8:	cinc	x3, x25, eq  // eq = none
   414fc:	sub	x2, x19, #0x2
   41500:	asr	x1, x1, #6
   41504:	add	x1, x1, #0x1
   41508:	bl	c400 <mpfr_round_p@plt>
   4150c:	cbz	w0, 414c4 <mpfr_sech@@Base+0x2d4>
   41510:	ldr	w3, [sp, #120]
   41514:	mov	w2, w22
   41518:	mov	x1, x26
   4151c:	mov	x0, x21
   41520:	bl	c730 <mpfr_set4@plt>
   41524:	mov	w19, w0
   41528:	mov	x0, x26
   4152c:	bl	c0f0 <mpfr_clear@plt>
   41530:	b	41408 <mpfr_sech@@Base+0x218>
   41534:	add	x19, x19, x24
   41538:	mov	x24, #0x2                   	// #2
   4153c:	mov	x1, x19
   41540:	mov	x0, x26
   41544:	sdiv	x24, x19, x24
   41548:	bl	bf50 <mpfr_set_prec@plt>
   4154c:	b	41348 <mpfr_sech@@Base+0x158>
   41550:	mov	w2, w22
   41554:	mov	w1, w19
   41558:	mov	x0, x21
   4155c:	bl	cbc0 <mpfr_check_range@plt>
   41560:	b	412b0 <mpfr_sech@@Base+0xc0>

0000000000041564 <mpfr_csch@@Base>:
   41564:	stp	x29, x30, [sp, #-144]!
   41568:	mov	x29, sp
   4156c:	stp	x23, x24, [sp, #48]
   41570:	mov	x23, x1
   41574:	ldr	x1, [x1, #16]
   41578:	stp	x19, x20, [sp, #16]
   4157c:	mov	x20, x0
   41580:	stp	x21, x22, [sp, #32]
   41584:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   41588:	cmp	x1, x0
   4158c:	stp	x25, x26, [sp, #64]
   41590:	stp	x27, x28, [sp, #80]
   41594:	b.gt	41638 <mpfr_csch@@Base+0xd4>
   41598:	mov	x2, #0x2                   	// #2
   4159c:	movk	x2, #0x8000, lsl #48
   415a0:	cmp	x1, x2
   415a4:	b.ne	415d4 <mpfr_csch@@Base+0x70>  // b.any
   415a8:	str	x1, [x20, #16]
   415ac:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   415b0:	ldr	x1, [x0, #2592]
   415b4:	add	x0, x0, #0xa20
   415b8:	blr	x1
   415bc:	mrs	x1, tpidr_el0
   415c0:	add	x0, x1, x0
   415c4:	ldr	w1, [x0]
   415c8:	orr	w1, w1, #0x4
   415cc:	str	w1, [x0]
   415d0:	b	415ec <mpfr_csch@@Base+0x88>
   415d4:	ldr	w2, [x23, #8]
   415d8:	cmp	x1, x0
   415dc:	str	w2, [x20, #8]
   415e0:	b.ne	41610 <mpfr_csch@@Base+0xac>  // b.any
   415e4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   415e8:	str	x0, [x20, #16]
   415ec:	mov	w19, #0x0                   	// #0
   415f0:	mov	w0, w19
   415f4:	ldp	x19, x20, [sp, #16]
   415f8:	ldp	x21, x22, [sp, #32]
   415fc:	ldp	x23, x24, [sp, #48]
   41600:	ldp	x25, x26, [sp, #64]
   41604:	ldp	x27, x28, [sp, #80]
   41608:	ldp	x29, x30, [sp], #144
   4160c:	ret
   41610:	str	x0, [x20, #16]
   41614:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   41618:	ldr	x1, [x0, #2592]
   4161c:	add	x0, x0, #0xa20
   41620:	blr	x1
   41624:	mrs	x1, tpidr_el0
   41628:	add	x0, x1, x0
   4162c:	ldr	w1, [x0]
   41630:	orr	w1, w1, #0x20
   41634:	b	415cc <mpfr_csch@@Base+0x68>
   41638:	mrs	x22, tpidr_el0
   4163c:	mov	w21, w2
   41640:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   41644:	ldr	x2, [x0, #2592]
   41648:	add	x0, x0, #0xa20
   4164c:	blr	x2
   41650:	ldr	x25, [x20]
   41654:	ldr	w24, [x22, x0]
   41658:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4165c:	ldr	x2, [x0, #2528]
   41660:	add	x0, x0, #0x9e0
   41664:	blr	x2
   41668:	add	x2, x22, x0
   4166c:	ldr	x28, [x22, x0]
   41670:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   41674:	ldr	x3, [x0, #2560]
   41678:	add	x0, x0, #0xa00
   4167c:	blr	x3
   41680:	ldr	x3, [x22, x0]
   41684:	str	x3, [sp, #96]
   41688:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   4168c:	str	x3, [x2]
   41690:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   41694:	str	x2, [x22, x0]
   41698:	ldr	x0, [x23]
   4169c:	mov	x2, #0xfffffffffffffffe    	// #-2
   416a0:	cmp	x0, x25
   416a4:	csel	x0, x0, x25, ge  // ge = tcont
   416a8:	mul	x0, x0, x2
   416ac:	cmp	x1, x0
   416b0:	b.gt	417d0 <mpfr_csch@@Base+0x26c>
   416b4:	ldr	w25, [x23, #8]
   416b8:	mov	w3, w21
   416bc:	mov	x2, x23
   416c0:	mov	x0, x20
   416c4:	mov	x1, #0x1                   	// #1
   416c8:	bl	c380 <mpfr_ui_div@plt>
   416cc:	mov	w19, w0
   416d0:	cbnz	w0, 4173c <mpfr_csch@@Base+0x1d8>
   416d4:	cmp	w21, #0x4
   416d8:	b.ne	41700 <mpfr_csch@@Base+0x19c>  // b.any
   416dc:	cmp	w25, #0x0
   416e0:	b.gt	417c4 <mpfr_csch@@Base+0x260>
   416e4:	mov	w21, #0x3                   	// #3
   416e8:	cmp	w25, #0x0
   416ec:	b.le	416f8 <mpfr_csch@@Base+0x194>
   416f0:	mov	x0, x20
   416f4:	bl	be50 <mpfr_nextbelow@plt>
   416f8:	mov	w19, #0xffffffff            	// #-1
   416fc:	b	4173c <mpfr_csch@@Base+0x1d8>
   41700:	cmp	w21, #0x2
   41704:	b.eq	41728 <mpfr_csch@@Base+0x1c4>  // b.none
   41708:	cmp	w25, #0x0
   4170c:	ccmp	w21, #0x1, #0x0, lt  // lt = tstop
   41710:	b.eq	417bc <mpfr_csch@@Base+0x258>  // b.none
   41714:	and	w0, w21, #0xfffffffd
   41718:	mov	w19, w25
   4171c:	cmp	w0, #0x1
   41720:	b.ne	4173c <mpfr_csch@@Base+0x1d8>  // b.any
   41724:	b	416e8 <mpfr_csch@@Base+0x184>
   41728:	mov	w19, #0x1                   	// #1
   4172c:	tbz	w25, #31, 4173c <mpfr_csch@@Base+0x1d8>
   41730:	mov	w19, #0x1                   	// #1
   41734:	mov	x0, x20
   41738:	bl	c1b0 <mpfr_nextabove@plt>
   4173c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   41740:	ldr	x1, [x0, #2592]
   41744:	add	x0, x0, #0xa20
   41748:	blr	x1
   4174c:	ldr	w0, [x22, x0]
   41750:	orr	w24, w24, w0
   41754:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   41758:	ldr	x1, [x0, #2592]
   4175c:	add	x0, x0, #0xa20
   41760:	blr	x1
   41764:	add	x1, x22, x0
   41768:	str	w24, [x22, x0]
   4176c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   41770:	ldr	x2, [x0, #2528]
   41774:	add	x0, x0, #0x9e0
   41778:	blr	x2
   4177c:	str	x28, [x22, x0]
   41780:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   41784:	ldr	x2, [x0, #2560]
   41788:	add	x0, x0, #0xa00
   4178c:	blr	x2
   41790:	ldr	x2, [sp, #96]
   41794:	str	x2, [x22, x0]
   41798:	ldr	x0, [x20, #16]
   4179c:	cmp	x28, x0
   417a0:	b.gt	41970 <mpfr_csch@@Base+0x40c>
   417a4:	cmp	x2, x0
   417a8:	b.lt	41970 <mpfr_csch@@Base+0x40c>  // b.tstop
   417ac:	cbz	w19, 415f0 <mpfr_csch@@Base+0x8c>
   417b0:	orr	w24, w24, #0x8
   417b4:	str	w24, [x1]
   417b8:	b	415f0 <mpfr_csch@@Base+0x8c>
   417bc:	mov	w21, #0x1                   	// #1
   417c0:	b	41730 <mpfr_csch@@Base+0x1cc>
   417c4:	mov	w19, #0x1                   	// #1
   417c8:	mov	w21, #0x2                   	// #2
   417cc:	b	4173c <mpfr_csch@@Base+0x1d8>
   417d0:	cmp	x25, #0x1
   417d4:	b.eq	418b8 <mpfr_csch@@Base+0x354>  // b.none
   417d8:	b.gt	417f4 <mpfr_csch@@Base+0x290>
   417dc:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   417e0:	add	x2, x2, #0x685
   417e4:	mov	w1, #0x43                  	// #67
   417e8:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   417ec:	add	x0, x0, #0x4a3
   417f0:	bl	cbd0 <mpfr_assert_fail@plt>
   417f4:	sub	x19, x25, #0x1
   417f8:	clz	x0, x19
   417fc:	mov	w19, #0x40                  	// #64
   41800:	sub	w19, w19, w0
   41804:	sxtw	x19, w19
   41808:	add	x19, x25, x19
   4180c:	mov	x26, #0x40                  	// #64
   41810:	add	x19, x19, #0x3
   41814:	add	x27, sp, #0x70
   41818:	mov	x1, x19
   4181c:	mov	x0, x27
   41820:	bl	cb10 <mpfr_init2@plt>
   41824:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   41828:	ldr	x1, [x0, #2592]
   4182c:	add	x0, x0, #0xa20
   41830:	blr	x1
   41834:	add	x1, x22, x0
   41838:	mov	w2, #0x1                   	// #1
   4183c:	str	wzr, [x22, x0]
   41840:	mov	x0, x27
   41844:	str	x1, [sp, #104]
   41848:	mov	x1, x23
   4184c:	bl	c3b0 <mpfr_sinh@plt>
   41850:	ldr	x0, [sp, #104]
   41854:	ldr	w0, [x0]
   41858:	tbz	w0, #1, 418c0 <mpfr_csch@@Base+0x35c>
   4185c:	ldr	w19, [sp, #120]
   41860:	mov	x0, x27
   41864:	bl	c0f0 <mpfr_clear@plt>
   41868:	ldr	x0, [sp, #104]
   4186c:	mov	w2, w19
   41870:	str	w24, [x0]
   41874:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   41878:	ldr	x1, [x0, #2528]
   4187c:	add	x0, x0, #0x9e0
   41880:	blr	x1
   41884:	str	x28, [x22, x0]
   41888:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4188c:	ldr	x1, [x0, #2560]
   41890:	add	x0, x0, #0xa00
   41894:	blr	x1
   41898:	cmp	w21, #0x0
   4189c:	ldr	x1, [sp, #96]
   418a0:	str	x1, [x22, x0]
   418a4:	csinc	w1, w21, wzr, ne  // ne = any
   418a8:	mov	x0, x20
   418ac:	bl	c450 <mpfr_underflow@plt>
   418b0:	mov	w19, w0
   418b4:	b	415f0 <mpfr_csch@@Base+0x8c>
   418b8:	mov	x19, #0x0                   	// #0
   418bc:	b	41808 <mpfr_csch@@Base+0x2a4>
   418c0:	mov	x1, #0x1                   	// #1
   418c4:	mov	x2, x27
   418c8:	mov	x0, x27
   418cc:	mov	w3, #0x0                   	// #0
   418d0:	bl	c380 <mpfr_ui_div@plt>
   418d4:	ldr	x0, [sp, #128]
   418d8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   418dc:	cmp	x0, x1
   418e0:	b.gt	41908 <mpfr_csch@@Base+0x3a4>
   418e4:	mov	x0, #0xfffffffffffffeff    	// #-257
   418e8:	movk	x0, #0x7fff, lsl #48
   418ec:	sub	x0, x0, x19
   418f0:	cmp	x0, x26
   418f4:	b.ge	41954 <mpfr_csch@@Base+0x3f0>  // b.tcont
   418f8:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   418fc:	mov	w1, #0x5f                  	// #95
   41900:	add	x2, x2, #0x6df
   41904:	b	417e8 <mpfr_csch@@Base+0x284>
   41908:	ldr	x1, [sp, #112]
   4190c:	cmp	w21, #0x0
   41910:	ldr	x0, [sp, #136]
   41914:	sub	x1, x1, #0x1
   41918:	cinc	x3, x25, eq  // eq = none
   4191c:	sub	x2, x19, #0x2
   41920:	asr	x1, x1, #6
   41924:	add	x1, x1, #0x1
   41928:	bl	c400 <mpfr_round_p@plt>
   4192c:	cbz	w0, 418e4 <mpfr_csch@@Base+0x380>
   41930:	ldr	w3, [sp, #120]
   41934:	mov	w2, w21
   41938:	mov	x1, x27
   4193c:	mov	x0, x20
   41940:	bl	c730 <mpfr_set4@plt>
   41944:	mov	w19, w0
   41948:	mov	x0, x27
   4194c:	bl	c0f0 <mpfr_clear@plt>
   41950:	b	41754 <mpfr_csch@@Base+0x1f0>
   41954:	add	x19, x19, x26
   41958:	mov	x26, #0x2                   	// #2
   4195c:	mov	x1, x19
   41960:	mov	x0, x27
   41964:	sdiv	x26, x19, x26
   41968:	bl	bf50 <mpfr_set_prec@plt>
   4196c:	b	41824 <mpfr_csch@@Base+0x2c0>
   41970:	mov	w2, w21
   41974:	mov	w1, w19
   41978:	mov	x0, x20
   4197c:	bl	cbc0 <mpfr_check_range@plt>
   41980:	b	418b0 <mpfr_csch@@Base+0x34c>

0000000000041984 <mpfr_coth@@Base>:
   41984:	stp	x29, x30, [sp, #-144]!
   41988:	mov	x29, sp
   4198c:	stp	x23, x24, [sp, #48]
   41990:	mov	x23, x1
   41994:	ldr	x1, [x1, #16]
   41998:	stp	x19, x20, [sp, #16]
   4199c:	mov	w20, w2
   419a0:	stp	x21, x22, [sp, #32]
   419a4:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   419a8:	mov	x22, x0
   419ac:	stp	x25, x26, [sp, #64]
   419b0:	cmp	x1, x2
   419b4:	stp	x27, x28, [sp, #80]
   419b8:	b.gt	41a70 <mpfr_coth@@Base+0xec>
   419bc:	mov	x3, #0x2                   	// #2
   419c0:	movk	x3, #0x8000, lsl #48
   419c4:	cmp	x1, x3
   419c8:	b.ne	41a18 <mpfr_coth@@Base+0x94>  // b.any
   419cc:	str	x1, [x0, #16]
   419d0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   419d4:	ldr	x1, [x0, #2592]
   419d8:	add	x0, x0, #0xa20
   419dc:	blr	x1
   419e0:	mrs	x1, tpidr_el0
   419e4:	add	x0, x1, x0
   419e8:	ldr	w1, [x0]
   419ec:	orr	w1, w1, #0x4
   419f0:	mov	w19, #0x0                   	// #0
   419f4:	str	w1, [x0]
   419f8:	mov	w0, w19
   419fc:	ldp	x19, x20, [sp, #16]
   41a00:	ldp	x21, x22, [sp, #32]
   41a04:	ldp	x23, x24, [sp, #48]
   41a08:	ldp	x25, x26, [sp, #64]
   41a0c:	ldp	x27, x28, [sp, #80]
   41a10:	ldp	x29, x30, [sp], #144
   41a14:	ret
   41a18:	ldr	w3, [x23, #8]
   41a1c:	cmp	x1, x2
   41a20:	b.ne	41a44 <mpfr_coth@@Base+0xc0>  // b.any
   41a24:	cmp	w3, #0x0
   41a28:	mov	x1, #0xffffffffffffffff    	// #-1
   41a2c:	mov	w3, w20
   41a30:	cneg	x1, x1, gt
   41a34:	mov	x2, #0x0                   	// #0
   41a38:	bl	bb00 <mpfr_set_si_2exp@plt>
   41a3c:	mov	w19, w0
   41a40:	b	419f8 <mpfr_coth@@Base+0x74>
   41a44:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   41a48:	ldr	x1, [x0, #2592]
   41a4c:	add	x0, x0, #0xa20
   41a50:	blr	x1
   41a54:	str	w3, [x22, #8]
   41a58:	mrs	x1, tpidr_el0
   41a5c:	str	x2, [x22, #16]
   41a60:	add	x0, x1, x0
   41a64:	ldr	w1, [x0]
   41a68:	orr	w1, w1, #0x20
   41a6c:	b	419f0 <mpfr_coth@@Base+0x6c>
   41a70:	mrs	x21, tpidr_el0
   41a74:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   41a78:	ldr	x2, [x0, #2592]
   41a7c:	add	x0, x0, #0xa20
   41a80:	blr	x2
   41a84:	ldr	x25, [x22]
   41a88:	ldr	w24, [x21, x0]
   41a8c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   41a90:	ldr	x2, [x0, #2528]
   41a94:	add	x0, x0, #0x9e0
   41a98:	blr	x2
   41a9c:	add	x2, x21, x0
   41aa0:	ldr	x28, [x21, x0]
   41aa4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   41aa8:	ldr	x3, [x0, #2560]
   41aac:	add	x0, x0, #0xa00
   41ab0:	blr	x3
   41ab4:	ldr	x3, [x21, x0]
   41ab8:	str	x3, [sp, #96]
   41abc:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   41ac0:	str	x3, [x2]
   41ac4:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   41ac8:	str	x2, [x21, x0]
   41acc:	ldr	x0, [x23]
   41ad0:	mov	x2, #0xfffffffffffffffe    	// #-2
   41ad4:	cmp	x0, x25
   41ad8:	csel	x0, x0, x25, ge  // ge = tcont
   41adc:	mul	x0, x0, x2
   41ae0:	cmp	x1, x0
   41ae4:	b.ge	41be8 <mpfr_coth@@Base+0x264>  // b.tcont
   41ae8:	ldr	w25, [x23, #8]
   41aec:	mov	w3, w20
   41af0:	mov	x2, x23
   41af4:	mov	x0, x22
   41af8:	mov	x1, #0x1                   	// #1
   41afc:	bl	c380 <mpfr_ui_div@plt>
   41b00:	mov	w19, w0
   41b04:	cbnz	w0, 41b54 <mpfr_coth@@Base+0x1d0>
   41b08:	cmp	w20, #0x4
   41b0c:	b.ne	41b30 <mpfr_coth@@Base+0x1ac>  // b.any
   41b10:	cmp	w25, #0x0
   41b14:	b.gt	41b44 <mpfr_coth@@Base+0x1c0>
   41b18:	tbz	w25, #31, 41b24 <mpfr_coth@@Base+0x1a0>
   41b1c:	mov	x0, x22
   41b20:	bl	be50 <mpfr_nextbelow@plt>
   41b24:	mov	w19, #0xffffffff            	// #-1
   41b28:	mov	w20, #0x3                   	// #3
   41b2c:	b	41b54 <mpfr_coth@@Base+0x1d0>
   41b30:	cmp	w20, #0x2
   41b34:	b.ne	41bd8 <mpfr_coth@@Base+0x254>  // b.any
   41b38:	cmp	w25, #0x0
   41b3c:	mov	w19, #0x1                   	// #1
   41b40:	b.le	41b54 <mpfr_coth@@Base+0x1d0>
   41b44:	mov	w19, #0x1                   	// #1
   41b48:	mov	w20, #0x2                   	// #2
   41b4c:	mov	x0, x22
   41b50:	bl	c1b0 <mpfr_nextabove@plt>
   41b54:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   41b58:	ldr	x1, [x0, #2592]
   41b5c:	add	x0, x0, #0xa20
   41b60:	blr	x1
   41b64:	ldr	w0, [x21, x0]
   41b68:	orr	w24, w24, w0
   41b6c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   41b70:	ldr	x1, [x0, #2592]
   41b74:	add	x0, x0, #0xa20
   41b78:	blr	x1
   41b7c:	add	x1, x21, x0
   41b80:	str	w24, [x21, x0]
   41b84:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   41b88:	ldr	x2, [x0, #2528]
   41b8c:	add	x0, x0, #0x9e0
   41b90:	blr	x2
   41b94:	str	x28, [x21, x0]
   41b98:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   41b9c:	ldr	x2, [x0, #2560]
   41ba0:	add	x0, x0, #0xa00
   41ba4:	blr	x2
   41ba8:	ldr	x2, [sp, #96]
   41bac:	str	x2, [x21, x0]
   41bb0:	ldr	x0, [x22, #16]
   41bb4:	cmp	x28, x0
   41bb8:	b.gt	41bc4 <mpfr_coth@@Base+0x240>
   41bbc:	cmp	x2, x0
   41bc0:	b.ge	41dd8 <mpfr_coth@@Base+0x454>  // b.tcont
   41bc4:	mov	w2, w20
   41bc8:	mov	w1, w19
   41bcc:	mov	x0, x22
   41bd0:	bl	cbc0 <mpfr_check_range@plt>
   41bd4:	b	41a3c <mpfr_coth@@Base+0xb8>
   41bd8:	neg	w19, w25
   41bdc:	cmp	w20, #0x3
   41be0:	b.ne	41b54 <mpfr_coth@@Base+0x1d0>  // b.any
   41be4:	b	41b18 <mpfr_coth@@Base+0x194>
   41be8:	cmp	x25, #0x1
   41bec:	b.eq	41ccc <mpfr_coth@@Base+0x348>  // b.none
   41bf0:	b.gt	41c0c <mpfr_coth@@Base+0x288>
   41bf4:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   41bf8:	add	x2, x2, #0x685
   41bfc:	mov	w1, #0x43                  	// #67
   41c00:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   41c04:	add	x0, x0, #0x4a3
   41c08:	bl	cbd0 <mpfr_assert_fail@plt>
   41c0c:	sub	x19, x25, #0x1
   41c10:	clz	x0, x19
   41c14:	mov	w19, #0x40                  	// #64
   41c18:	sub	w19, w19, w0
   41c1c:	sxtw	x19, w19
   41c20:	add	x19, x25, x19
   41c24:	mov	x26, #0x40                  	// #64
   41c28:	add	x19, x19, #0x3
   41c2c:	add	x27, sp, #0x70
   41c30:	mov	x1, x19
   41c34:	mov	x0, x27
   41c38:	bl	cb10 <mpfr_init2@plt>
   41c3c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   41c40:	ldr	x1, [x0, #2592]
   41c44:	add	x0, x0, #0xa20
   41c48:	blr	x1
   41c4c:	add	x1, x21, x0
   41c50:	mov	w2, #0x1                   	// #1
   41c54:	str	wzr, [x21, x0]
   41c58:	mov	x0, x27
   41c5c:	str	x1, [sp, #104]
   41c60:	mov	x1, x23
   41c64:	bl	bb80 <mpfr_tanh@plt>
   41c68:	ldr	x0, [sp, #104]
   41c6c:	ldr	w0, [x0]
   41c70:	tbz	w0, #1, 41cd4 <mpfr_coth@@Base+0x350>
   41c74:	ldr	w19, [sp, #120]
   41c78:	mov	x0, x27
   41c7c:	bl	c0f0 <mpfr_clear@plt>
   41c80:	ldr	x0, [sp, #104]
   41c84:	mov	w2, w19
   41c88:	str	w24, [x0]
   41c8c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   41c90:	ldr	x1, [x0, #2528]
   41c94:	add	x0, x0, #0x9e0
   41c98:	blr	x1
   41c9c:	str	x28, [x21, x0]
   41ca0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   41ca4:	ldr	x1, [x0, #2560]
   41ca8:	add	x0, x0, #0xa00
   41cac:	blr	x1
   41cb0:	cmp	w20, #0x0
   41cb4:	ldr	x1, [sp, #96]
   41cb8:	str	x1, [x21, x0]
   41cbc:	csinc	w1, w20, wzr, ne  // ne = any
   41cc0:	mov	x0, x22
   41cc4:	bl	c450 <mpfr_underflow@plt>
   41cc8:	b	41a3c <mpfr_coth@@Base+0xb8>
   41ccc:	mov	x19, #0x0                   	// #0
   41cd0:	b	41c20 <mpfr_coth@@Base+0x29c>
   41cd4:	mov	x1, #0x1                   	// #1
   41cd8:	mov	x2, x27
   41cdc:	mov	x0, x27
   41ce0:	mov	w3, #0x0                   	// #0
   41ce4:	bl	c380 <mpfr_ui_div@plt>
   41ce8:	ldr	x0, [sp, #128]
   41cec:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   41cf0:	cmp	x0, x1
   41cf4:	b.gt	41d4c <mpfr_coth@@Base+0x3c8>
   41cf8:	ldr	x0, [sp, #128]
   41cfc:	cmp	x0, #0x1
   41d00:	b.ne	41d98 <mpfr_coth@@Base+0x414>  // b.any
   41d04:	ldrsw	x2, [sp, #120]
   41d08:	mov	x1, x27
   41d0c:	mov	x0, x27
   41d10:	mov	w3, #0x0                   	// #0
   41d14:	bl	c0e0 <mpfr_sub_si@plt>
   41d18:	ldr	x0, [sp, #128]
   41d1c:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   41d20:	cmp	x0, x1
   41d24:	b.eq	41d34 <mpfr_coth@@Base+0x3b0>  // b.none
   41d28:	neg	x1, x25
   41d2c:	cmp	x0, x1
   41d30:	b.gt	41d98 <mpfr_coth@@Base+0x414>
   41d34:	ldrsw	x2, [sp, #120]
   41d38:	mov	x1, x27
   41d3c:	mov	x0, x27
   41d40:	mov	w3, #0x0                   	// #0
   41d44:	bl	c880 <mpfr_add_si@plt>
   41d48:	b	41d74 <mpfr_coth@@Base+0x3f0>
   41d4c:	ldr	x1, [sp, #112]
   41d50:	cmp	w20, #0x0
   41d54:	ldr	x0, [sp, #136]
   41d58:	sub	x1, x1, #0x1
   41d5c:	cinc	x3, x25, eq  // eq = none
   41d60:	sub	x2, x19, #0x2
   41d64:	asr	x1, x1, #6
   41d68:	add	x1, x1, #0x1
   41d6c:	bl	c400 <mpfr_round_p@plt>
   41d70:	cbz	w0, 41cf8 <mpfr_coth@@Base+0x374>
   41d74:	ldr	w3, [sp, #120]
   41d78:	mov	w2, w20
   41d7c:	mov	x1, x27
   41d80:	mov	x0, x22
   41d84:	bl	c730 <mpfr_set4@plt>
   41d88:	mov	w19, w0
   41d8c:	mov	x0, x27
   41d90:	bl	c0f0 <mpfr_clear@plt>
   41d94:	b	41b6c <mpfr_coth@@Base+0x1e8>
   41d98:	mov	x0, #0xfffffffffffffeff    	// #-257
   41d9c:	movk	x0, #0x7fff, lsl #48
   41da0:	sub	x0, x0, x19
   41da4:	cmp	x0, x26
   41da8:	b.ge	41dbc <mpfr_coth@@Base+0x438>  // b.tcont
   41dac:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   41db0:	mov	w1, #0x5f                  	// #95
   41db4:	add	x2, x2, #0x6df
   41db8:	b	41c00 <mpfr_coth@@Base+0x27c>
   41dbc:	add	x19, x19, x26
   41dc0:	mov	x26, #0x2                   	// #2
   41dc4:	mov	x1, x19
   41dc8:	mov	x0, x27
   41dcc:	sdiv	x26, x19, x26
   41dd0:	bl	bf50 <mpfr_set_prec@plt>
   41dd4:	b	41c3c <mpfr_coth@@Base+0x2b8>
   41dd8:	cbz	w19, 419f8 <mpfr_coth@@Base+0x74>
   41ddc:	orr	w24, w24, #0x8
   41de0:	str	w24, [x1]
   41de4:	b	419f8 <mpfr_coth@@Base+0x74>

0000000000041de8 <mpfr_round_near_x@@Base>:
   41de8:	stp	x29, x30, [sp, #-96]!
   41dec:	cmp	w4, #0x5
   41df0:	mov	x29, sp
   41df4:	stp	x19, x20, [sp, #16]
   41df8:	mov	w20, w3
   41dfc:	ldr	x3, [x0]
   41e00:	stp	x21, x22, [sp, #32]
   41e04:	csinc	w22, w4, wzr, ne  // ne = any
   41e08:	stp	x23, x24, [sp, #48]
   41e0c:	stp	x25, x26, [sp, #64]
   41e10:	mov	x25, x0
   41e14:	add	x0, x3, #0x1
   41e18:	str	x27, [sp, #80]
   41e1c:	cmp	x0, x2
   41e20:	b.cc	41e48 <mpfr_round_near_x@@Base+0x60>  // b.lo, b.ul, b.last
   41e24:	mov	w23, #0x0                   	// #0
   41e28:	mov	w0, w23
   41e2c:	ldp	x19, x20, [sp, #16]
   41e30:	ldp	x21, x22, [sp, #32]
   41e34:	ldp	x23, x24, [sp, #48]
   41e38:	ldp	x25, x26, [sp, #64]
   41e3c:	ldr	x27, [sp, #80]
   41e40:	ldp	x29, x30, [sp], #96
   41e44:	ret
   41e48:	mov	x27, x1
   41e4c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   41e50:	ldr	x1, [x0, #2592]
   41e54:	add	x0, x0, #0xa20
   41e58:	blr	x1
   41e5c:	mrs	x19, tpidr_el0
   41e60:	ldr	x1, [x27]
   41e64:	ldr	w21, [x19, x0]
   41e68:	cmp	x1, x2
   41e6c:	b.cs	41f50 <mpfr_round_near_x@@Base+0x168>  // b.hs, b.nlast
   41e70:	ldr	x2, [x27]
   41e74:	ldr	x26, [x25]
   41e78:	sub	x7, x2, #0x1
   41e7c:	ldp	x0, x1, [x27, #16]
   41e80:	asr	x7, x7, #6
   41e84:	ldr	w23, [x27, #8]
   41e88:	cmp	x2, x26
   41e8c:	str	w23, [x25, #8]
   41e90:	str	x0, [x25, #16]
   41e94:	sub	x0, x26, #0x1
   41e98:	ldr	x24, [x25, #24]
   41e9c:	asr	x0, x0, #6
   41ea0:	b.gt	41f74 <mpfr_round_near_x@@Base+0x18c>
   41ea4:	add	x2, x7, #0x1
   41ea8:	sub	x7, x0, x7
   41eac:	add	x0, x24, x7, lsl #3
   41eb0:	lsl	x26, x7, #3
   41eb4:	cmp	x0, x1
   41eb8:	b.eq	41ec4 <mpfr_round_near_x@@Base+0xdc>  // b.none
   41ebc:	lsl	x2, x2, #3
   41ec0:	bl	ba90 <memcpy@plt>
   41ec4:	mov	x2, x26
   41ec8:	mov	x0, x24
   41ecc:	mov	w1, #0x0                   	// #0
   41ed0:	bl	c1a0 <memset@plt>
   41ed4:	cbnz	w20, 4218c <mpfr_round_near_x@@Base+0x3a4>
   41ed8:	cmp	w22, #0x1
   41edc:	b.eq	41eec <mpfr_round_near_x@@Base+0x104>  // b.none
   41ee0:	add	w22, w22, w23, lsr #31
   41ee4:	cmp	w22, #0x3
   41ee8:	b.ne	41f2c <mpfr_round_near_x@@Base+0x144>  // b.any
   41eec:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   41ef0:	ldr	x1, [x0, #2592]
   41ef4:	add	x0, x0, #0xa20
   41ef8:	blr	x1
   41efc:	add	x20, x19, x0
   41f00:	str	w21, [x19, x0]
   41f04:	mov	x0, x25
   41f08:	bl	c4f0 <mpfr_nexttozero@plt>
   41f0c:	neg	w23, w23
   41f10:	ldr	x1, [x25, #16]
   41f14:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   41f18:	cmp	x1, x0
   41f1c:	b.ne	41f2c <mpfr_round_near_x@@Base+0x144>  // b.any
   41f20:	ldr	w0, [x20]
   41f24:	orr	w0, w0, #0x1
   41f28:	str	w0, [x20]
   41f2c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   41f30:	ldr	x1, [x0, #2592]
   41f34:	add	x0, x0, #0xa20
   41f38:	blr	x1
   41f3c:	add	x0, x19, x0
   41f40:	ldr	w1, [x0]
   41f44:	orr	w1, w1, #0x8
   41f48:	str	w1, [x0]
   41f4c:	b	41e28 <mpfr_round_near_x@@Base+0x40>
   41f50:	ldr	x0, [x27, #24]
   41f54:	cmp	w22, #0x0
   41f58:	sub	x1, x1, #0x1
   41f5c:	cinc	x3, x3, eq  // eq = none
   41f60:	asr	x1, x1, #6
   41f64:	add	x1, x1, #0x1
   41f68:	bl	c400 <mpfr_round_p@plt>
   41f6c:	cbnz	w0, 41e70 <mpfr_round_near_x@@Base+0x88>
   41f70:	b	41e24 <mpfr_round_near_x@@Base+0x3c>
   41f74:	sub	x7, x7, x0
   41f78:	neg	w26, w26
   41f7c:	add	x2, x0, #0x1
   41f80:	ands	w26, w26, #0x3f
   41f84:	lsl	x8, x7, #3
   41f88:	add	x0, x1, x7, lsl #3
   41f8c:	b.eq	42030 <mpfr_round_near_x@@Base+0x248>  // b.none
   41f90:	ldr	x5, [x1, x8]
   41f94:	sub	w26, w26, #0x1
   41f98:	mov	x6, #0x1                   	// #1
   41f9c:	cmp	w22, #0x0
   41fa0:	lsl	x6, x6, x26
   41fa4:	and	x3, x5, x6
   41fa8:	sub	x6, x6, #0x1
   41fac:	ccmp	x3, #0x0, #0x4, ne  // ne = any
   41fb0:	and	x5, x6, x5
   41fb4:	b.ne	41fd8 <mpfr_round_near_x@@Base+0x1f0>  // b.any
   41fb8:	mov	x6, #0xfffffffffffffff8    	// #-8
   41fbc:	madd	x6, x7, x6, x0
   41fc0:	cmp	x7, #0x0
   41fc4:	sub	x7, x7, #0x1
   41fc8:	cset	w4, ne  // ne = any
   41fcc:	cmp	x5, #0x0
   41fd0:	csel	w4, w4, wzr, eq  // eq = none
   41fd4:	cbnz	w4, 42028 <mpfr_round_near_x@@Base+0x240>
   41fd8:	mov	x4, #0x2                   	// #2
   41fdc:	lsl	x26, x4, x26
   41fe0:	cbnz	w22, 42168 <mpfr_round_near_x@@Base+0x380>
   41fe4:	cbnz	x3, 4207c <mpfr_round_near_x@@Base+0x294>
   41fe8:	orr	x5, x3, x5
   41fec:	cmp	x5, #0x0
   41ff0:	csneg	w27, wzr, w23, eq  // eq = none
   41ff4:	cmp	x24, x0
   41ff8:	b.eq	4200c <mpfr_round_near_x@@Base+0x224>  // b.none
   41ffc:	mov	x1, x0
   42000:	lsl	x2, x2, #3
   42004:	mov	x0, x24
   42008:	bl	ba90 <memcpy@plt>
   4200c:	ldr	x0, [x24]
   42010:	neg	x26, x26
   42014:	and	x26, x0, x26
   42018:	str	x26, [x24]
   4201c:	cbz	w27, 41ed4 <mpfr_round_near_x@@Base+0xec>
   42020:	mov	w23, w27
   42024:	b	41f2c <mpfr_round_near_x@@Base+0x144>
   42028:	ldr	x5, [x6, x7, lsl #3]
   4202c:	b	41fc0 <mpfr_round_near_x@@Base+0x1d8>
   42030:	ldur	x4, [x0, #-8]
   42034:	cmp	w22, #0x0
   42038:	and	x3, x4, #0x8000000000000000
   4203c:	and	x5, x4, #0x7fffffffffffffff
   42040:	ccmp	x4, #0x0, #0x0, ne  // ne = any
   42044:	b.lt	42164 <mpfr_round_near_x@@Base+0x37c>  // b.tstop
   42048:	mov	x6, #0xfffffffffffffff8    	// #-8
   4204c:	sub	x4, x7, #0x1
   42050:	madd	x7, x7, x6, x0
   42054:	cmp	x4, #0x0
   42058:	sub	x4, x4, #0x1
   4205c:	cset	w6, ne  // ne = any
   42060:	cmp	x5, #0x0
   42064:	csel	w6, w6, wzr, eq  // eq = none
   42068:	cbnz	w6, 42074 <mpfr_round_near_x@@Base+0x28c>
   4206c:	mov	x26, #0x1                   	// #1
   42070:	b	41fe0 <mpfr_round_near_x@@Base+0x1f8>
   42074:	ldr	x5, [x7, x4, lsl #3]
   42078:	b	42054 <mpfr_round_near_x@@Base+0x26c>
   4207c:	cbnz	x5, 4208c <mpfr_round_near_x@@Base+0x2a4>
   42080:	cbnz	w20, 4208c <mpfr_round_near_x@@Base+0x2a4>
   42084:	neg	w27, w23
   42088:	b	41ff4 <mpfr_round_near_x@@Base+0x20c>
   4208c:	ldr	x1, [x1, x8]
   42090:	adds	x1, x26, x1
   42094:	str	x1, [x24]
   42098:	b.cs	420f8 <mpfr_round_near_x@@Base+0x310>  // b.hs, b.nlast
   4209c:	cmp	x24, x0
   420a0:	b.eq	420c8 <mpfr_round_near_x@@Base+0x2e0>  // b.none
   420a4:	mov	x1, #0x1                   	// #1
   420a8:	b	42158 <mpfr_round_near_x@@Base+0x370>
   420ac:	ldr	x3, [x0, x1, lsl #3]
   420b0:	add	x3, x3, #0x1
   420b4:	str	x3, [x24, x1, lsl #3]
   420b8:	add	x1, x1, #0x1
   420bc:	cbz	x3, 420fc <mpfr_round_near_x@@Base+0x314>
   420c0:	cmp	x24, x0
   420c4:	b.ne	420ec <mpfr_round_near_x@@Base+0x304>  // b.any
   420c8:	ldr	x0, [x24]
   420cc:	neg	x26, x26
   420d0:	mov	w27, w23
   420d4:	and	x26, x0, x26
   420d8:	str	x26, [x24]
   420dc:	b	4201c <mpfr_round_near_x@@Base+0x234>
   420e0:	ldr	x3, [x0, x1, lsl #3]
   420e4:	str	x3, [x24, x1, lsl #3]
   420e8:	add	x1, x1, #0x1
   420ec:	cmp	x2, x1
   420f0:	b.gt	420e0 <mpfr_round_near_x@@Base+0x2f8>
   420f4:	b	420c8 <mpfr_round_near_x@@Base+0x2e0>
   420f8:	mov	x1, #0x1                   	// #1
   420fc:	cmp	x2, x1
   42100:	b.gt	420ac <mpfr_round_near_x@@Base+0x2c4>
   42104:	add	x2, x24, x2, lsl #3
   42108:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   4210c:	stur	x0, [x2, #-8]
   42110:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   42114:	ldr	x2, [x0, #2560]
   42118:	add	x0, x0, #0xa00
   4211c:	blr	x2
   42120:	ldr	x1, [x25, #16]
   42124:	ldr	x0, [x19, x0]
   42128:	add	x1, x1, #0x1
   4212c:	str	x1, [x25, #16]
   42130:	cmp	x1, x0
   42134:	b.le	420c8 <mpfr_round_near_x@@Base+0x2e0>
   42138:	mov	w2, w23
   4213c:	mov	w1, w22
   42140:	mov	x0, x25
   42144:	bl	bfc0 <mpfr_overflow@plt>
   42148:	b	420c8 <mpfr_round_near_x@@Base+0x2e0>
   4214c:	ldr	x3, [x0, x1, lsl #3]
   42150:	str	x3, [x24, x1, lsl #3]
   42154:	add	x1, x1, #0x1
   42158:	cmp	x2, x1
   4215c:	b.gt	4214c <mpfr_round_near_x@@Base+0x364>
   42160:	b	420c8 <mpfr_round_near_x@@Base+0x2e0>
   42164:	mov	x26, #0x1                   	// #1
   42168:	cmp	w22, #0x1
   4216c:	b.eq	41fe8 <mpfr_round_near_x@@Base+0x200>  // b.none
   42170:	add	w4, w22, w23, lsr #31
   42174:	cmp	w4, #0x3
   42178:	b.eq	41fe8 <mpfr_round_near_x@@Base+0x200>  // b.none
   4217c:	orr	x5, x3, x5
   42180:	cbnz	x5, 4208c <mpfr_round_near_x@@Base+0x2a4>
   42184:	mov	w27, #0x0                   	// #0
   42188:	b	41ff4 <mpfr_round_near_x@@Base+0x20c>
   4218c:	cmp	w22, #0x4
   42190:	b.eq	421ac <mpfr_round_near_x@@Base+0x3c4>  // b.none
   42194:	mvn	w4, w23
   42198:	add	w22, w22, w4, lsr #31
   4219c:	cmp	w22, #0x3
   421a0:	b.eq	421ac <mpfr_round_near_x@@Base+0x3c4>  // b.none
   421a4:	neg	w23, w23
   421a8:	b	41f2c <mpfr_round_near_x@@Base+0x144>
   421ac:	mov	x0, x25
   421b0:	bl	c700 <mpfr_nexttoinf@plt>
   421b4:	ldr	x1, [x25, #16]
   421b8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   421bc:	cmp	x1, x0
   421c0:	b.ne	41f2c <mpfr_round_near_x@@Base+0x144>  // b.any
   421c4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   421c8:	ldr	x1, [x0, #2592]
   421cc:	add	x0, x0, #0xa20
   421d0:	blr	x1
   421d4:	add	x0, x19, x0
   421d8:	ldr	w1, [x0]
   421dc:	orr	w1, w1, #0x2
   421e0:	str	w1, [x0]
   421e4:	b	41f2c <mpfr_round_near_x@@Base+0x144>

00000000000421e8 <mpfr_custom_get_size@@Base>:
   421e8:	sub	x0, x0, #0x1
   421ec:	asr	x0, x0, #6
   421f0:	add	x0, x0, #0x1
   421f4:	lsl	x0, x0, #3
   421f8:	ret

00000000000421fc <mpfr_custom_init@@Base>:
   421fc:	ret

0000000000042200 <mpfr_custom_get_significand@@Base>:
   42200:	ldr	x0, [x0, #24]
   42204:	ret

0000000000042208 <mpfr_custom_get_exp@@Base>:
   42208:	ldr	x0, [x0, #16]
   4220c:	ret

0000000000042210 <mpfr_custom_move@@Base>:
   42210:	str	x1, [x0, #24]
   42214:	ret

0000000000042218 <mpfr_custom_init_set@@Base>:
   42218:	tbnz	w1, #31, 4223c <mpfr_custom_init_set@@Base+0x24>
   4221c:	mov	w5, w1
   42220:	mov	w1, #0x1                   	// #1
   42224:	cmp	w5, #0x3
   42228:	b.ne	42260 <mpfr_custom_init_set@@Base+0x48>  // b.any
   4222c:	str	x3, [x0]
   42230:	str	w1, [x0, #8]
   42234:	stp	x2, x4, [x0, #16]
   42238:	ret
   4223c:	neg	w5, w1
   42240:	cmn	w1, #0x3
   42244:	mov	w1, #0xffffffff            	// #-1
   42248:	b.eq	4222c <mpfr_custom_init_set@@Base+0x14>  // b.none
   4224c:	cmp	w5, #0x1
   42250:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   42254:	mov	x5, #0x8000000000000001    	// #-9223372036854775807
   42258:	csel	x2, x2, x5, eq  // eq = none
   4225c:	b	4222c <mpfr_custom_init_set@@Base+0x14>
   42260:	cbnz	w5, 4224c <mpfr_custom_init_set@@Base+0x34>
   42264:	mov	x2, #0x2                   	// #2
   42268:	movk	x2, #0x8000, lsl #48
   4226c:	b	4222c <mpfr_custom_init_set@@Base+0x14>

0000000000042270 <mpfr_custom_get_kind@@Base>:
   42270:	ldr	x1, [x0, #16]
   42274:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   42278:	cmp	x1, x2
   4227c:	b.le	4228c <mpfr_custom_get_kind@@Base+0x1c>
   42280:	ldr	w0, [x0, #8]
   42284:	add	w0, w0, w0, lsl #1
   42288:	ret
   4228c:	b.ne	42298 <mpfr_custom_get_kind@@Base+0x28>  // b.any
   42290:	ldr	w0, [x0, #8]
   42294:	b	42288 <mpfr_custom_get_kind@@Base+0x18>
   42298:	mov	x2, #0x2                   	// #2
   4229c:	movk	x2, #0x8000, lsl #48
   422a0:	cmp	x1, x2
   422a4:	b.eq	422b4 <mpfr_custom_get_kind@@Base+0x44>  // b.none
   422a8:	ldr	w0, [x0, #8]
   422ac:	lsl	w0, w0, #1
   422b0:	b	42288 <mpfr_custom_get_kind@@Base+0x18>
   422b4:	mov	w0, #0x0                   	// #0
   422b8:	b	42288 <mpfr_custom_get_kind@@Base+0x18>
   422bc:	ldr	x3, [x0, #16]
   422c0:	cmp	x3, #0x0
   422c4:	b.le	42310 <mpfr_custom_get_kind@@Base+0xa0>
   422c8:	ldr	x2, [x0]
   422cc:	cmp	x3, x2
   422d0:	b.gt	42310 <mpfr_custom_get_kind@@Base+0xa0>
   422d4:	sub	x1, x2, #0x1
   422d8:	mov	x2, #0x40                  	// #64
   422dc:	and	x1, x1, #0xffffffffffffffc0
   422e0:	add	x1, x1, #0x40
   422e4:	sub	x1, x1, x3
   422e8:	ldr	x3, [x0, #24]
   422ec:	negs	x0, x1
   422f0:	sdiv	x2, x1, x2
   422f4:	and	x0, x0, #0x3f
   422f8:	and	x1, x1, #0x3f
   422fc:	csneg	x1, x1, x0, mi  // mi = first
   42300:	ldr	x0, [x3, x2, lsl #3]
   42304:	lsr	x0, x0, x1
   42308:	and	w0, w0, #0x1
   4230c:	ret
   42310:	mov	w0, #0x0                   	// #0
   42314:	b	4230c <mpfr_custom_get_kind@@Base+0x9c>

0000000000042318 <mpfr_lngamma@@Base>:
   42318:	stp	x29, x30, [sp, #-48]!
   4231c:	mov	x29, sp
   42320:	stp	x19, x20, [sp, #16]
   42324:	mov	x19, x1
   42328:	mov	x20, x0
   4232c:	ldr	x1, [x1, #16]
   42330:	str	x21, [sp, #32]
   42334:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   42338:	cmp	x1, x0
   4233c:	b.le	4237c <mpfr_lngamma@@Base+0x64>
   42340:	ldr	w0, [x19, #8]
   42344:	mov	w21, w2
   42348:	tbz	w0, #31, 42360 <mpfr_lngamma@@Base+0x48>
   4234c:	mov	x0, x19
   42350:	bl	c1f0 <mpfr_integer_p@plt>
   42354:	cbnz	w0, 4237c <mpfr_lngamma@@Base+0x64>
   42358:	ldr	w0, [x19, #8]
   4235c:	tbnz	w0, #31, 42410 <mpfr_lngamma@@Base+0xf8>
   42360:	mov	w2, w21
   42364:	mov	x1, x19
   42368:	mov	x0, x20
   4236c:	ldp	x19, x20, [sp, #16]
   42370:	ldr	x21, [sp, #32]
   42374:	ldp	x29, x30, [sp], #48
   42378:	b	42428 <mpfr_lngamma@@Base+0x110>
   4237c:	ldr	x0, [x19, #16]
   42380:	mov	x1, #0x2                   	// #2
   42384:	movk	x1, #0x8000, lsl #48
   42388:	cmp	x0, x1
   4238c:	b.ne	423bc <mpfr_lngamma@@Base+0xa4>  // b.any
   42390:	str	x0, [x20, #16]
   42394:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   42398:	ldr	x1, [x0, #2592]
   4239c:	add	x0, x0, #0xa20
   423a0:	blr	x1
   423a4:	mrs	x1, tpidr_el0
   423a8:	add	x0, x1, x0
   423ac:	ldr	w1, [x0]
   423b0:	orr	w1, w1, #0x4
   423b4:	str	w1, [x0]
   423b8:	b	423fc <mpfr_lngamma@@Base+0xe4>
   423bc:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   423c0:	cmp	x0, x1
   423c4:	b.eq	423ec <mpfr_lngamma@@Base+0xd4>  // b.none
   423c8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   423cc:	ldr	x1, [x0, #2592]
   423d0:	add	x0, x0, #0xa20
   423d4:	blr	x1
   423d8:	mrs	x1, tpidr_el0
   423dc:	add	x0, x1, x0
   423e0:	ldr	w1, [x0]
   423e4:	orr	w1, w1, #0x20
   423e8:	str	w1, [x0]
   423ec:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   423f0:	str	x0, [x20, #16]
   423f4:	mov	w0, #0x1                   	// #1
   423f8:	str	w0, [x20, #8]
   423fc:	mov	w0, #0x0                   	// #0
   42400:	ldp	x19, x20, [sp, #16]
   42404:	ldr	x21, [sp, #32]
   42408:	ldp	x29, x30, [sp], #48
   4240c:	ret
   42410:	mov	x0, x19
   42414:	bl	422bc <mpfr_custom_get_kind@@Base+0x4c>
   42418:	cbnz	w0, 42360 <mpfr_lngamma@@Base+0x48>
   4241c:	mov	x0, #0x2                   	// #2
   42420:	movk	x0, #0x8000, lsl #48
   42424:	b	42390 <mpfr_lngamma@@Base+0x78>
   42428:	stp	x29, x30, [sp, #-400]!
   4242c:	mov	x29, sp
   42430:	stp	x21, x22, [sp, #32]
   42434:	mov	x22, x1
   42438:	mov	x1, #0x1                   	// #1
   4243c:	stp	x19, x20, [sp, #16]
   42440:	stp	x23, x24, [sp, #48]
   42444:	stp	x25, x26, [sp, #64]
   42448:	stp	x27, x28, [sp, #80]
   4244c:	str	d8, [sp, #96]
   42450:	str	x0, [sp, #120]
   42454:	mov	x0, x22
   42458:	str	w2, [sp, #136]
   4245c:	mov	x2, #0x0                   	// #0
   42460:	bl	bfd0 <mpfr_cmp_ui_2exp@plt>
   42464:	mov	w25, w0
   42468:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4246c:	ldr	x1, [x0, #2592]
   42470:	add	x0, x0, #0xa20
   42474:	blr	x1
   42478:	mrs	x1, tpidr_el0
   4247c:	str	x1, [sp, #112]
   42480:	add	x21, x1, x0
   42484:	ldr	w0, [x1, x0]
   42488:	str	w0, [sp, #140]
   4248c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   42490:	ldr	x1, [x0, #2528]
   42494:	add	x0, x0, #0x9e0
   42498:	blr	x1
   4249c:	ldr	x1, [sp, #112]
   424a0:	add	x19, x1, x0
   424a4:	ldr	x0, [x1, x0]
   424a8:	str	x0, [sp, #144]
   424ac:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   424b0:	ldr	x1, [x0, #2560]
   424b4:	add	x0, x0, #0xa00
   424b8:	blr	x1
   424bc:	ldr	x1, [sp, #112]
   424c0:	add	x20, x1, x0
   424c4:	ldr	x0, [x1, x0]
   424c8:	str	x0, [sp, #152]
   424cc:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   424d0:	str	x0, [x19]
   424d4:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   424d8:	str	x0, [x20]
   424dc:	cbnz	w25, 42570 <mpfr_lngamma@@Base+0x258>
   424e0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   424e4:	ldr	x1, [x0, #2592]
   424e8:	add	x0, x0, #0xa20
   424ec:	blr	x1
   424f0:	ldr	w2, [sp, #140]
   424f4:	ldr	x1, [sp, #112]
   424f8:	mov	w27, #0x0                   	// #0
   424fc:	str	w2, [x1, x0]
   42500:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   42504:	ldr	x1, [x0, #2528]
   42508:	add	x0, x0, #0x9e0
   4250c:	blr	x1
   42510:	ldr	x1, [sp, #112]
   42514:	ldr	x2, [sp, #144]
   42518:	str	x2, [x1, x0]
   4251c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   42520:	ldr	x1, [x0, #2560]
   42524:	add	x0, x0, #0xa00
   42528:	blr	x1
   4252c:	ldr	x1, [sp, #112]
   42530:	ldr	x2, [sp, #152]
   42534:	str	x2, [x1, x0]
   42538:	mov	w0, #0x1                   	// #1
   4253c:	ldr	x1, [sp, #120]
   42540:	str	w0, [x1, #8]
   42544:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   42548:	str	x0, [x1, #16]
   4254c:	mov	w0, w27
   42550:	ldr	d8, [sp, #96]
   42554:	ldp	x19, x20, [sp, #16]
   42558:	ldp	x21, x22, [sp, #32]
   4255c:	ldp	x23, x24, [sp, #48]
   42560:	ldp	x25, x26, [sp, #64]
   42564:	ldp	x27, x28, [sp, #80]
   42568:	ldp	x29, x30, [sp], #400
   4256c:	ret
   42570:	cmp	w25, #0x0
   42574:	b.le	4270c <mpfr_lngamma@@Base+0x3f4>
   42578:	mov	x0, x22
   4257c:	mov	x2, #0x0                   	// #0
   42580:	mov	x1, #0x2                   	// #2
   42584:	bl	bfd0 <mpfr_cmp_ui_2exp@plt>
   42588:	cbz	w0, 424e0 <mpfr_lngamma@@Base+0x1c8>
   4258c:	ldr	x0, [sp, #120]
   42590:	ldr	x1, [x0]
   42594:	ldr	x0, [x22, #16]
   42598:	add	x2, x1, #0x1
   4259c:	cmp	x2, x0
   425a0:	b.ge	4270c <mpfr_lngamma@@Base+0x3f4>  // b.tcont
   425a4:	cmp	x1, #0x34
   425a8:	add	x23, sp, #0x110
   425ac:	mov	x0, #0x34                  	// #52
   425b0:	csel	x1, x1, x0, ge  // ge = tcont
   425b4:	add	x1, x1, #0xa
   425b8:	mov	x0, x23
   425bc:	bl	cb10 <mpfr_init2@plt>
   425c0:	mov	x1, x22
   425c4:	mov	w2, #0x2                   	// #2
   425c8:	mov	x0, x23
   425cc:	bl	c110 <mpfr_log@plt>
   425d0:	mov	x1, x23
   425d4:	mov	w3, #0x2                   	// #2
   425d8:	mov	x2, #0x1                   	// #1
   425dc:	mov	x0, x23
   425e0:	bl	c5c0 <mpfr_sub_ui@plt>
   425e4:	mov	x1, x22
   425e8:	mov	x2, x23
   425ec:	mov	x0, x23
   425f0:	mov	w3, #0x2                   	// #2
   425f4:	bl	bdd0 <mpfr_mul@plt>
   425f8:	ldr	x0, [sp, #288]
   425fc:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   42600:	cmp	x0, x1
   42604:	b.ne	4263c <mpfr_lngamma@@Base+0x324>  // b.any
   42608:	mov	x0, x23
   4260c:	bl	c0f0 <mpfr_clear@plt>
   42610:	ldp	w1, w0, [sp, #136]
   42614:	str	w0, [x21]
   42618:	ldr	x0, [sp, #144]
   4261c:	str	x0, [x19]
   42620:	ldr	x0, [sp, #152]
   42624:	str	x0, [x20]
   42628:	ldr	x0, [sp, #120]
   4262c:	mov	w2, #0x1                   	// #1
   42630:	bl	bfc0 <mpfr_overflow@plt>
   42634:	mov	w27, w0
   42638:	b	4254c <mpfr_lngamma@@Base+0x234>
   4263c:	ldr	x2, [sp, #272]
   42640:	sub	x3, x0, x2
   42644:	cmp	x3, #0x3d
   42648:	b.le	42704 <mpfr_lngamma@@Base+0x3ec>
   4264c:	cmp	x0, x1
   42650:	b.le	42704 <mpfr_lngamma@@Base+0x3ec>
   42654:	ldr	w0, [sp, #136]
   42658:	sub	x1, x2, #0x1
   4265c:	sub	x2, x2, #0x3
   42660:	cmp	w0, #0x0
   42664:	asr	x1, x1, #6
   42668:	ldr	x0, [sp, #120]
   4266c:	add	x1, x1, #0x1
   42670:	ldr	x3, [x0]
   42674:	ldr	x0, [sp, #296]
   42678:	cinc	x3, x3, eq  // eq = none
   4267c:	bl	c400 <mpfr_round_p@plt>
   42680:	cbz	w0, 42704 <mpfr_lngamma@@Base+0x3ec>
   42684:	ldr	w2, [sp, #136]
   42688:	mov	x1, x23
   4268c:	ldr	w3, [sp, #280]
   42690:	ldr	x0, [sp, #120]
   42694:	bl	c730 <mpfr_set4@plt>
   42698:	mov	w27, w0
   4269c:	mov	x0, x23
   426a0:	bl	c0f0 <mpfr_clear@plt>
   426a4:	ldr	w0, [sp, #140]
   426a8:	str	w0, [x21]
   426ac:	ldr	x0, [sp, #144]
   426b0:	str	x0, [x19]
   426b4:	ldr	x0, [sp, #152]
   426b8:	str	x0, [x20]
   426bc:	ldr	x0, [sp, #120]
   426c0:	ldr	x1, [sp, #144]
   426c4:	ldr	x0, [x0, #16]
   426c8:	cmp	x1, x0
   426cc:	b.gt	42958 <mpfr_lngamma@@Base+0x640>
   426d0:	ldr	x1, [sp, #152]
   426d4:	cmp	x1, x0
   426d8:	b.lt	42958 <mpfr_lngamma@@Base+0x640>  // b.tstop
   426dc:	cbz	w27, 4254c <mpfr_lngamma@@Base+0x234>
   426e0:	ldr	x2, [sp, #112]
   426e4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   426e8:	ldr	x1, [x0, #2592]
   426ec:	add	x0, x0, #0xa20
   426f0:	blr	x1
   426f4:	ldr	w1, [sp, #140]
   426f8:	orr	w1, w1, #0x8
   426fc:	str	w1, [x2, x0]
   42700:	b	4254c <mpfr_lngamma@@Base+0x234>
   42704:	mov	x0, x23
   42708:	bl	c0f0 <mpfr_clear@plt>
   4270c:	ldr	x0, [sp, #120]
   42710:	add	x23, sp, #0x130
   42714:	ldr	x1, [x22, #16]
   42718:	add	x21, sp, #0x150
   4271c:	ldr	x19, [x0]
   42720:	add	x24, sp, #0x170
   42724:	neg	x0, x19
   42728:	cmp	x1, x0
   4272c:	b.gt	429e8 <mpfr_lngamma@@Base+0x6d0>
   42730:	mov	x26, #0xfffffffffffffeff    	// #-257
   42734:	add	x19, x19, #0xe
   42738:	mov	x20, #0x40                  	// #64
   4273c:	movk	x26, #0x7fff, lsl #48
   42740:	mov	x0, x23
   42744:	mov	x1, x19
   42748:	bl	cb10 <mpfr_init2@plt>
   4274c:	ldr	w0, [x22, #8]
   42750:	cmp	w0, #0x0
   42754:	b.le	4296c <mpfr_lngamma@@Base+0x654>
   42758:	mov	x1, x22
   4275c:	mov	x0, x23
   42760:	mov	w2, #0x2                   	// #2
   42764:	bl	c110 <mpfr_log@plt>
   42768:	ldr	x1, [sp, #304]
   4276c:	mov	x0, x21
   42770:	bl	cb10 <mpfr_init2@plt>
   42774:	mov	x1, x23
   42778:	mov	w2, #0x3                   	// #3
   4277c:	mov	x0, x23
   42780:	bl	bdf0 <mpfr_neg@plt>
   42784:	ldr	w3, [sp, #312]
   42788:	mov	x1, x23
   4278c:	mov	w2, #0x3                   	// #3
   42790:	mov	x0, x21
   42794:	bl	c730 <mpfr_set4@plt>
   42798:	mov	x0, x21
   4279c:	bl	c1b0 <mpfr_nextabove@plt>
   427a0:	ldr	x1, [sp, #304]
   427a4:	mov	x0, x24
   427a8:	bl	cb10 <mpfr_init2@plt>
   427ac:	ldr	w0, [x22, #8]
   427b0:	cmp	w0, #0x0
   427b4:	cset	w2, le
   427b8:	add	w2, w2, #0x2
   427bc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   427c0:	ldr	x1, [x0, #2624]
   427c4:	add	x0, x0, #0xa40
   427c8:	blr	x1
   427cc:	ldr	x1, [sp, #112]
   427d0:	add	x27, x1, x0
   427d4:	mov	x0, x24
   427d8:	mov	x1, x27
   427dc:	bl	c410 <mpfr_cache@plt>
   427e0:	mov	x2, x22
   427e4:	mov	x1, x24
   427e8:	mov	w3, #0x3                   	// #3
   427ec:	mov	x0, x24
   427f0:	bl	bdd0 <mpfr_mul@plt>
   427f4:	mov	w3, #0x3                   	// #3
   427f8:	mov	x2, x24
   427fc:	mov	x1, x23
   42800:	mov	x0, x23
   42804:	bl	bbf0 <mpfr_sub@plt>
   42808:	ldr	w0, [x22, #8]
   4280c:	mov	x1, x27
   42810:	cmp	w0, #0x0
   42814:	mov	x0, x24
   42818:	cset	w2, gt
   4281c:	add	w2, w2, #0x2
   42820:	bl	c410 <mpfr_cache@plt>
   42824:	mov	x2, x22
   42828:	mov	x1, x24
   4282c:	mov	w3, #0x2                   	// #2
   42830:	mov	x0, x24
   42834:	bl	bdd0 <mpfr_mul@plt>
   42838:	mov	x2, x24
   4283c:	mov	x1, x21
   42840:	mov	w3, #0x3                   	// #3
   42844:	mov	x0, x21
   42848:	bl	bbf0 <mpfr_sub@plt>
   4284c:	mov	x2, x22
   42850:	mov	x1, x22
   42854:	mov	w3, #0x2                   	// #2
   42858:	mov	x0, x24
   4285c:	bl	bdd0 <mpfr_mul@plt>
   42860:	mov	w3, #0x2                   	// #2
   42864:	mov	x2, x24
   42868:	mov	x1, x21
   4286c:	mov	x0, x21
   42870:	bl	c230 <mpfr_add@plt>
   42874:	ldr	x0, [sp, #120]
   42878:	ldr	w2, [sp, #136]
   4287c:	ldr	x1, [x0]
   42880:	mov	x0, x23
   42884:	bl	ca00 <mpfr_prec_round@plt>
   42888:	mov	w27, w0
   4288c:	ldr	x0, [sp, #120]
   42890:	ldr	w2, [sp, #136]
   42894:	ldr	x1, [x0]
   42898:	mov	x0, x21
   4289c:	bl	ca00 <mpfr_prec_round@plt>
   428a0:	cmp	w27, #0x0
   428a4:	b.lt	435ec <mpfr_lngamma@@Base+0x12d4>  // b.tstop
   428a8:	cset	w1, gt
   428ac:	cmp	w0, #0x0
   428b0:	b.lt	428c0 <mpfr_lngamma@@Base+0x5a8>  // b.tstop
   428b4:	cset	w0, gt
   428b8:	cmp	w0, w1
   428bc:	b.eq	435f0 <mpfr_lngamma@@Base+0x12d8>  // b.none
   428c0:	mov	w28, #0x0                   	// #0
   428c4:	mov	x0, x23
   428c8:	bl	c0f0 <mpfr_clear@plt>
   428cc:	mov	x0, x21
   428d0:	bl	c0f0 <mpfr_clear@plt>
   428d4:	mov	x0, x24
   428d8:	bl	c0f0 <mpfr_clear@plt>
   428dc:	cbz	w28, 429a8 <mpfr_lngamma@@Base+0x690>
   428e0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   428e4:	ldr	x1, [x0, #2592]
   428e8:	add	x0, x0, #0xa20
   428ec:	blr	x1
   428f0:	ldr	w3, [sp, #140]
   428f4:	ldr	x2, [sp, #112]
   428f8:	ldr	x1, [sp, #112]
   428fc:	str	w3, [x2, x0]
   42900:	add	x1, x1, x0
   42904:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   42908:	ldr	x2, [x0, #2528]
   4290c:	add	x0, x0, #0x9e0
   42910:	blr	x2
   42914:	ldr	x2, [sp, #112]
   42918:	ldr	x3, [sp, #144]
   4291c:	str	x3, [x2, x0]
   42920:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   42924:	ldr	x2, [x0, #2560]
   42928:	add	x0, x0, #0xa00
   4292c:	blr	x2
   42930:	ldr	x2, [sp, #112]
   42934:	ldr	x3, [sp, #152]
   42938:	str	x3, [x2, x0]
   4293c:	ldr	x0, [sp, #120]
   42940:	ldr	x2, [sp, #144]
   42944:	ldr	x0, [x0, #16]
   42948:	cmp	x2, x0
   4294c:	b.gt	42958 <mpfr_lngamma@@Base+0x640>
   42950:	cmp	x3, x0
   42954:	b.ge	435d8 <mpfr_lngamma@@Base+0x12c0>  // b.tcont
   42958:	ldr	w2, [sp, #136]
   4295c:	mov	w1, w27
   42960:	ldr	x0, [sp, #120]
   42964:	bl	cbc0 <mpfr_check_range@plt>
   42968:	b	42634 <mpfr_lngamma@@Base+0x31c>
   4296c:	ldr	x1, [x22]
   42970:	mov	x0, x21
   42974:	bl	cb10 <mpfr_init2@plt>
   42978:	mov	x1, x22
   4297c:	mov	x0, x21
   42980:	mov	w2, #0x0                   	// #0
   42984:	bl	bdf0 <mpfr_neg@plt>
   42988:	mov	x1, x21
   4298c:	mov	x0, x23
   42990:	mov	w2, #0x2                   	// #2
   42994:	bl	c110 <mpfr_log@plt>
   42998:	ldr	x1, [sp, #304]
   4299c:	mov	x0, x21
   429a0:	bl	bf50 <mpfr_set_prec@plt>
   429a4:	b	42774 <mpfr_lngamma@@Base+0x45c>
   429a8:	sub	x0, x26, x19
   429ac:	cmp	x0, x20
   429b0:	b.ge	429cc <mpfr_lngamma@@Base+0x6b4>  // b.tcont
   429b4:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   429b8:	add	x2, x2, #0x519
   429bc:	mov	w1, #0x131                 	// #305
   429c0:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   429c4:	add	x0, x0, #0x945
   429c8:	bl	cbd0 <mpfr_assert_fail@plt>
   429cc:	ldr	x0, [x22, #16]
   429d0:	add	x19, x19, x20
   429d4:	mov	x20, #0x2                   	// #2
   429d8:	neg	x0, x0
   429dc:	sdiv	x20, x19, x20
   429e0:	cmp	x0, x19
   429e4:	b.ge	42740 <mpfr_lngamma@@Base+0x428>  // b.tcont
   429e8:	ldr	x0, [sp, #120]
   429ec:	add	x20, sp, #0xf0
   429f0:	mov	x1, #0x1                   	// #1
   429f4:	add	x19, sp, #0x110
   429f8:	ldr	x0, [x0]
   429fc:	str	x0, [sp, #168]
   42a00:	mov	x0, x20
   42a04:	bl	cb10 <mpfr_init2@plt>
   42a08:	mov	x0, x19
   42a0c:	mov	x1, #0x1                   	// #1
   42a10:	bl	cb10 <mpfr_init2@plt>
   42a14:	mov	x0, x23
   42a18:	mov	x1, #0x1                   	// #1
   42a1c:	bl	cb10 <mpfr_init2@plt>
   42a20:	mov	x0, x21
   42a24:	mov	x1, #0x1                   	// #1
   42a28:	bl	cb10 <mpfr_init2@plt>
   42a2c:	mov	x0, x24
   42a30:	mov	x1, #0x1                   	// #1
   42a34:	bl	cb10 <mpfr_init2@plt>
   42a38:	ldr	x0, [sp, #168]
   42a3c:	tbz	w25, #31, 42d74 <mpfr_lngamma@@Base+0xa5c>
   42a40:	cmp	x0, #0x1
   42a44:	b.eq	42a98 <mpfr_lngamma@@Base+0x780>  // b.none
   42a48:	b.gt	42a5c <mpfr_lngamma@@Base+0x744>
   42a4c:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   42a50:	mov	w1, #0x14a                 	// #330
   42a54:	add	x2, x2, #0x685
   42a58:	b	429c0 <mpfr_lngamma@@Base+0x6a8>
   42a5c:	ldr	x0, [sp, #168]
   42a60:	sub	x5, x0, #0x1
   42a64:	clz	x0, x5
   42a68:	mov	w5, #0x40                  	// #64
   42a6c:	sub	w5, w5, w0
   42a70:	sxtw	x5, w5
   42a74:	ldr	x0, [sp, #168]
   42a78:	add	x0, x5, x0
   42a7c:	cmp	x0, #0x1
   42a80:	b.eq	42c4c <mpfr_lngamma@@Base+0x934>  // b.none
   42a84:	b.gt	42aa0 <mpfr_lngamma@@Base+0x788>
   42a88:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   42a8c:	mov	w1, #0x14b                 	// #331
   42a90:	add	x2, x2, #0x92b
   42a94:	b	429c0 <mpfr_lngamma@@Base+0x6a8>
   42a98:	mov	x5, #0x0                   	// #0
   42a9c:	b	42a74 <mpfr_lngamma@@Base+0x75c>
   42aa0:	sub	x5, x0, #0x1
   42aa4:	clz	x1, x5
   42aa8:	mov	w5, #0x4e                  	// #78
   42aac:	sub	w5, w5, w1
   42ab0:	add	x27, x0, w5, sxtw
   42ab4:	mov	x25, #0x40                  	// #64
   42ab8:	mov	x26, #0x8000000000000001    	// #-9223372036854775807
   42abc:	mov	x1, x27
   42ac0:	mov	x0, x20
   42ac4:	bl	bf50 <mpfr_set_prec@plt>
   42ac8:	mov	x1, x27
   42acc:	mov	x0, x19
   42ad0:	bl	bf50 <mpfr_set_prec@plt>
   42ad4:	mov	x1, x27
   42ad8:	mov	x0, x23
   42adc:	bl	bf50 <mpfr_set_prec@plt>
   42ae0:	mov	x1, x27
   42ae4:	mov	x0, x21
   42ae8:	bl	bf50 <mpfr_set_prec@plt>
   42aec:	mov	x1, #0x2                   	// #2
   42af0:	mov	w3, #0x3                   	// #3
   42af4:	mov	x2, x22
   42af8:	mov	x0, x20
   42afc:	bl	cae0 <mpfr_ui_sub@plt>
   42b00:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   42b04:	ldr	x1, [x0, #2640]
   42b08:	add	x0, x0, #0xa50
   42b0c:	blr	x1
   42b10:	mov	w2, #0x0                   	// #0
   42b14:	ldr	x1, [sp, #112]
   42b18:	add	x1, x1, x0
   42b1c:	mov	x0, x19
   42b20:	bl	c410 <mpfr_cache@plt>
   42b24:	mov	x1, x20
   42b28:	mov	x0, x23
   42b2c:	mov	w2, #0x0                   	// #0
   42b30:	bl	c690 <mpfr_lngamma@plt>
   42b34:	ldr	x0, [sp, #320]
   42b38:	cmp	x0, x26
   42b3c:	b.eq	42c54 <mpfr_lngamma@@Base+0x93c>  // b.none
   42b40:	ldr	d8, [sp, #256]
   42b44:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   42b48:	ldr	d0, [x0, #2552]
   42b4c:	scvtf	d1, d8
   42b50:	fmul	d0, d1, d0
   42b54:	bl	c9e0 <__gmpfr_ceil_log2@plt>
   42b58:	fmov	x1, d8
   42b5c:	ldr	x7, [sp, #320]
   42b60:	add	x2, x1, x0
   42b64:	add	x2, x2, #0x1
   42b68:	sub	x28, x2, x7
   42b6c:	mov	w3, #0x0                   	// #0
   42b70:	mov	x2, x19
   42b74:	mov	x1, x20
   42b78:	mov	x0, x20
   42b7c:	bl	bdd0 <mpfr_mul@plt>
   42b80:	ldr	x4, [sp, #256]
   42b84:	mov	x1, x20
   42b88:	mov	w2, #0x0                   	// #0
   42b8c:	mov	x0, x20
   42b90:	str	x4, [sp, #128]
   42b94:	bl	c4e0 <mpfr_sin@plt>
   42b98:	ldr	x4, [sp, #128]
   42b9c:	mov	x1, x22
   42ba0:	ldr	x0, [sp, #256]
   42ba4:	mov	w3, #0x0                   	// #0
   42ba8:	mov	x2, #0x1                   	// #1
   42bac:	sub	x4, x4, x0
   42bb0:	mov	x0, x21
   42bb4:	adds	x4, x4, #0x3
   42bb8:	csinv	x4, x4, xzr, pl  // pl = nfrst
   42bbc:	str	x4, [sp, #128]
   42bc0:	bl	c5c0 <mpfr_sub_ui@plt>
   42bc4:	mov	x2, x19
   42bc8:	mov	x1, x21
   42bcc:	mov	w3, #0x0                   	// #0
   42bd0:	mov	x0, x21
   42bd4:	bl	bdd0 <mpfr_mul@plt>
   42bd8:	mov	x2, x20
   42bdc:	mov	x1, x21
   42be0:	mov	w3, #0x0                   	// #0
   42be4:	mov	x0, x21
   42be8:	bl	c6b0 <mpfr_div@plt>
   42bec:	mov	w3, #0x1                   	// #1
   42bf0:	mov	x1, x21
   42bf4:	mov	w2, #0x0                   	// #0
   42bf8:	mov	x0, x21
   42bfc:	bl	c730 <mpfr_set4@plt>
   42c00:	mov	x1, x21
   42c04:	mov	x0, x21
   42c08:	mov	w2, #0x0                   	// #0
   42c0c:	bl	c110 <mpfr_log@plt>
   42c10:	ldr	x4, [sp, #128]
   42c14:	add	x0, x4, #0x5
   42c18:	cmp	x0, x27
   42c1c:	b.lt	42c5c <mpfr_lngamma@@Base+0x944>  // b.tstop
   42c20:	add	x4, x4, #0x6
   42c24:	add	x27, x27, x4
   42c28:	mov	x0, #0xfffffffffffffeff    	// #-257
   42c2c:	movk	x0, #0x7fff, lsl #48
   42c30:	sub	x0, x0, x27
   42c34:	cmp	x0, x25
   42c38:	b.ge	42d64 <mpfr_lngamma@@Base+0xa4c>  // b.tcont
   42c3c:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   42c40:	mov	w1, #0x1a5                 	// #421
   42c44:	add	x2, x2, #0xb94
   42c48:	b	429c0 <mpfr_lngamma@@Base+0x6a8>
   42c4c:	mov	w5, #0xe                   	// #14
   42c50:	b	42ab0 <mpfr_lngamma@@Base+0x798>
   42c54:	mov	x28, #0x0                   	// #0
   42c58:	b	42b6c <mpfr_lngamma@@Base+0x854>
   42c5c:	ldr	x0, [sp, #352]
   42c60:	add	x4, x4, #0x4
   42c64:	cmp	x0, x26
   42c68:	b.eq	42c74 <mpfr_lngamma@@Base+0x95c>  // b.none
   42c6c:	sub	x4, x4, x0
   42c70:	add	x4, x4, #0x1
   42c74:	cmp	x4, #0x0
   42c78:	csinv	x4, x4, xzr, ge  // ge = tcont
   42c7c:	cmp	x0, x26
   42c80:	add	x4, x4, #0x1
   42c84:	ldr	x6, [sp, #320]
   42c88:	b.eq	42c90 <mpfr_lngamma@@Base+0x978>  // b.none
   42c8c:	add	x4, x4, x0
   42c90:	mov	x1, x21
   42c94:	mov	x2, x23
   42c98:	mov	x0, x20
   42c9c:	mov	w3, #0x0                   	// #0
   42ca0:	str	x6, [sp, #128]
   42ca4:	str	x4, [sp, #160]
   42ca8:	bl	bbf0 <mpfr_sub@plt>
   42cac:	ldr	x1, [sp, #256]
   42cb0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   42cb4:	cmp	x1, x0
   42cb8:	b.le	42c28 <mpfr_lngamma@@Base+0x910>
   42cbc:	cmp	x28, #0x0
   42cc0:	mov	x0, #0xffffffffffffffff    	// #-1
   42cc4:	ldr	x6, [sp, #128]
   42cc8:	csel	x2, x28, x0, ge  // ge = tcont
   42ccc:	ldr	x4, [sp, #160]
   42cd0:	add	x2, x2, #0x1
   42cd4:	add	x2, x6, x2
   42cd8:	cmp	x2, x4
   42cdc:	csel	x2, x2, x4, ge  // ge = tcont
   42ce0:	sub	x2, x2, x1
   42ce4:	adds	x2, x2, #0x1
   42ce8:	csel	x2, x2, x0, pl  // pl = nfrst
   42cec:	ldr	w0, [sp, #136]
   42cf0:	ldr	x1, [sp, #240]
   42cf4:	cmp	w0, #0x0
   42cf8:	ldr	x0, [sp, #168]
   42cfc:	sub	x1, x1, #0x1
   42d00:	add	x2, x2, #0x1
   42d04:	cinc	x3, x0, eq  // eq = none
   42d08:	asr	x1, x1, #6
   42d0c:	ldr	x0, [sp, #264]
   42d10:	sub	x2, x27, x2
   42d14:	add	x1, x1, #0x1
   42d18:	bl	c400 <mpfr_round_p@plt>
   42d1c:	cbz	w0, 42c28 <mpfr_lngamma@@Base+0x910>
   42d20:	ldr	w2, [sp, #136]
   42d24:	mov	x1, x20
   42d28:	ldr	w3, [sp, #248]
   42d2c:	ldr	x0, [sp, #120]
   42d30:	bl	c730 <mpfr_set4@plt>
   42d34:	mov	w27, w0
   42d38:	mov	x0, x20
   42d3c:	bl	c0f0 <mpfr_clear@plt>
   42d40:	mov	x0, x19
   42d44:	bl	c0f0 <mpfr_clear@plt>
   42d48:	mov	x0, x23
   42d4c:	bl	c0f0 <mpfr_clear@plt>
   42d50:	mov	x0, x21
   42d54:	bl	c0f0 <mpfr_clear@plt>
   42d58:	mov	x0, x24
   42d5c:	bl	c0f0 <mpfr_clear@plt>
   42d60:	b	428e0 <mpfr_lngamma@@Base+0x5c8>
   42d64:	add	x27, x27, x25
   42d68:	mov	x0, #0x2                   	// #2
   42d6c:	sdiv	x25, x27, x0
   42d70:	b	42abc <mpfr_lngamma@@Base+0x7a4>
   42d74:	cmp	x0, #0x1
   42d78:	b.eq	42dcc <mpfr_lngamma@@Base+0xab4>  // b.none
   42d7c:	b.gt	42d90 <mpfr_lngamma@@Base+0xa78>
   42d80:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   42d84:	mov	w1, #0x1b0                 	// #432
   42d88:	add	x2, x2, #0x685
   42d8c:	b	429c0 <mpfr_lngamma@@Base+0x6a8>
   42d90:	ldr	x0, [sp, #168]
   42d94:	sub	x25, x0, #0x1
   42d98:	clz	x0, x25
   42d9c:	mov	w25, #0x40                  	// #64
   42da0:	sub	w25, w25, w0
   42da4:	sxtw	x25, w25
   42da8:	ldr	x0, [sp, #168]
   42dac:	add	x0, x25, x0
   42db0:	cmp	x0, #0x1
   42db4:	b.eq	4321c <mpfr_lngamma@@Base+0xf04>  // b.none
   42db8:	b.gt	42dd4 <mpfr_lngamma@@Base+0xabc>
   42dbc:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   42dc0:	mov	w1, #0x1b1                 	// #433
   42dc4:	add	x2, x2, #0x92b
   42dc8:	b	429c0 <mpfr_lngamma@@Base+0x6a8>
   42dcc:	mov	x25, #0x0                   	// #0
   42dd0:	b	42da8 <mpfr_lngamma@@Base+0xa90>
   42dd4:	sub	x25, x0, #0x1
   42dd8:	clz	x1, x25
   42ddc:	mov	w25, #0x4d                  	// #77
   42de0:	sub	w25, w25, w1
   42de4:	add	x25, x0, w25, sxtw
   42de8:	mov	x0, #0x40                  	// #64
   42dec:	mov	x1, #0x35                  	// #53
   42df0:	str	x0, [sp, #192]
   42df4:	mov	x0, x20
   42df8:	bl	bf50 <mpfr_set_prec@plt>
   42dfc:	cmp	x25, #0x64
   42e00:	b.gt	43224 <mpfr_lngamma@@Base+0xf0c>
   42e04:	mov	w3, #0x0                   	// #0
   42e08:	mov	x2, #0xfffffffffffffff6    	// #-10
   42e0c:	mov	x1, #0x266                 	// #614
   42e10:	mov	x0, x20
   42e14:	bl	c680 <mpfr_set_ui_2exp@plt>
   42e18:	mov	w3, #0x2                   	// #2
   42e1c:	mov	x2, #0xfffffffffffffffc    	// #-4
   42e20:	mov	x1, #0x4                   	// #4
   42e24:	mov	x0, x20
   42e28:	bl	c680 <mpfr_set_ui_2exp@plt>
   42e2c:	mov	w3, #0x2                   	// #2
   42e30:	mov	x2, x25
   42e34:	mov	x1, x20
   42e38:	mov	x0, x20
   42e3c:	bl	bad0 <mpfr_mul_ui@plt>
   42e40:	mov	x1, x20
   42e44:	mov	x0, x22
   42e48:	mov	w2, #0x1                   	// #1
   42e4c:	bl	ca30 <mpfr_cmp3@plt>
   42e50:	tbz	w0, #31, 432b0 <mpfr_lngamma@@Base+0xf98>
   42e54:	mov	x2, x22
   42e58:	mov	w3, #0x2                   	// #2
   42e5c:	mov	x1, x20
   42e60:	mov	x0, x20
   42e64:	bl	bbf0 <mpfr_sub@plt>
   42e68:	mov	w1, #0x2                   	// #2
   42e6c:	mov	x0, x20
   42e70:	bl	bd20 <mpfr_get_ui@plt>
   42e74:	cmp	x0, #0x3
   42e78:	mov	x1, #0x3                   	// #3
   42e7c:	csel	x0, x0, x1, cs  // cs = hs, nlast
   42e80:	mov	x1, x25
   42e84:	str	x0, [sp, #184]
   42e88:	mov	x0, x20
   42e8c:	bl	bf50 <mpfr_set_prec@plt>
   42e90:	mov	x1, x25
   42e94:	mov	x0, x19
   42e98:	bl	bf50 <mpfr_set_prec@plt>
   42e9c:	mov	x26, #0xfffffffffffffff9    	// #-7
   42ea0:	mov	x1, x25
   42ea4:	mov	x0, x23
   42ea8:	bl	bf50 <mpfr_set_prec@plt>
   42eac:	mov	x28, #0xfffffffffffffffa    	// #-6
   42eb0:	mov	x1, x25
   42eb4:	mov	x0, x21
   42eb8:	bl	bf50 <mpfr_set_prec@plt>
   42ebc:	mov	x1, x25
   42ec0:	mov	x0, x24
   42ec4:	bl	bf50 <mpfr_set_prec@plt>
   42ec8:	ldr	x2, [sp, #184]
   42ecc:	mov	w3, #0x0                   	// #0
   42ed0:	mov	x1, x22
   42ed4:	mov	x0, x24
   42ed8:	bl	c2f0 <mpfr_add_ui@plt>
   42edc:	mov	x1, x24
   42ee0:	mov	w2, #0x0                   	// #0
   42ee4:	mov	x0, x20
   42ee8:	bl	c110 <mpfr_log@plt>
   42eec:	mov	x1, x24
   42ef0:	mov	w3, #0x0                   	// #0
   42ef4:	mov	x2, #0x1                   	// #1
   42ef8:	mov	x0, x19
   42efc:	bl	c350 <mpfr_mul_2ui@plt>
   42f00:	mov	x1, x19
   42f04:	mov	w3, #0x0                   	// #0
   42f08:	mov	x2, #0x1                   	// #1
   42f0c:	mov	x0, x19
   42f10:	bl	c5c0 <mpfr_sub_ui@plt>
   42f14:	mov	x2, x19
   42f18:	mov	x1, x20
   42f1c:	mov	w3, #0x0                   	// #0
   42f20:	mov	x0, x20
   42f24:	bl	bdd0 <mpfr_mul@plt>
   42f28:	mov	x1, x20
   42f2c:	mov	w3, #0x0                   	// #0
   42f30:	mov	x2, #0x1                   	// #1
   42f34:	mov	x0, x20
   42f38:	bl	c980 <mpfr_div_2ui@plt>
   42f3c:	mov	x2, x24
   42f40:	mov	x1, x20
   42f44:	mov	w3, #0x0                   	// #0
   42f48:	mov	x0, x20
   42f4c:	bl	bbf0 <mpfr_sub@plt>
   42f50:	mov	x2, x24
   42f54:	mov	w3, #0x0                   	// #0
   42f58:	mov	x1, #0x1                   	// #1
   42f5c:	mov	x0, x23
   42f60:	bl	c380 <mpfr_ui_div@plt>
   42f64:	mov	x1, x23
   42f68:	mov	w3, #0x0                   	// #0
   42f6c:	mov	x2, #0xc                   	// #12
   42f70:	mov	x0, x19
   42f74:	bl	cd00 <mpfr_div_ui@plt>
   42f78:	ldr	w3, [sp, #280]
   42f7c:	mov	x1, x19
   42f80:	mov	w2, #0x0                   	// #0
   42f84:	mov	x0, x21
   42f88:	bl	c730 <mpfr_set4@plt>
   42f8c:	mov	x2, x21
   42f90:	mov	x1, x20
   42f94:	mov	w3, #0x0                   	// #0
   42f98:	mov	x0, x20
   42f9c:	bl	c230 <mpfr_add@plt>
   42fa0:	mov	x2, x23
   42fa4:	mov	x1, x23
   42fa8:	mov	x0, x23
   42fac:	mov	w3, #0x0                   	// #0
   42fb0:	bl	bdd0 <mpfr_mul@plt>
   42fb4:	mov	x0, #0x2                   	// #2
   42fb8:	str	x0, [sp, #128]
   42fbc:	ldr	x0, [sp, #352]
   42fc0:	ldr	x1, [sp, #256]
   42fc4:	add	x0, x25, x0
   42fc8:	cmp	x0, x1
   42fcc:	b.ge	432b8 <mpfr_lngamma@@Base+0xfa0>  // b.tcont
   42fd0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   42fd4:	ldr	x1, [x0, #2640]
   42fd8:	add	x0, x0, #0xa50
   42fdc:	blr	x1
   42fe0:	mov	w2, #0x0                   	// #0
   42fe4:	ldr	x1, [sp, #112]
   42fe8:	mov	x26, #0x2                   	// #2
   42fec:	add	x1, x1, x0
   42ff0:	mov	x0, x21
   42ff4:	bl	c410 <mpfr_cache@plt>
   42ff8:	mov	x1, x21
   42ffc:	mov	w3, #0x0                   	// #0
   43000:	mov	x2, #0x1                   	// #1
   43004:	mov	x0, x21
   43008:	bl	c350 <mpfr_mul_2ui@plt>
   4300c:	ldr	w3, [x22, #8]
   43010:	mov	x1, x22
   43014:	mov	x0, x19
   43018:	mov	w2, #0x0                   	// #0
   4301c:	bl	c730 <mpfr_set4@plt>
   43020:	str	x26, [sp, #160]
   43024:	add	x26, x26, #0x1
   43028:	ldr	x1, [sp, #184]
   4302c:	mul	x0, x26, x26
   43030:	cmp	x0, x1
   43034:	b.cc	43020 <mpfr_lngamma@@Base+0xd08>  // b.lo, b.ul, b.last
   43038:	lsl	x0, x26, #5
   4303c:	mov	x27, #0x2                   	// #2
   43040:	str	x0, [sp, #224]
   43044:	bl	cd90 <mpfr_allocate_func@plt>
   43048:	str	x0, [sp, #176]
   4304c:	ldr	x0, [sp, #160]
   43050:	cmp	x0, x27
   43054:	b.cs	433fc <mpfr_lngamma@@Base+0x10e4>  // b.hs, b.nlast
   43058:	ldr	x0, [sp, #176]
   4305c:	mov	x1, x22
   43060:	mov	w2, #0x0                   	// #0
   43064:	mov	x27, #0x3                   	// #3
   43068:	add	x0, x0, #0x40
   4306c:	bl	c490 <mpfr_sqr@plt>
   43070:	ldr	x0, [sp, #176]
   43074:	add	x28, x0, #0x60
   43078:	ldr	x0, [sp, #160]
   4307c:	cmp	x0, x27
   43080:	b.cs	43414 <mpfr_lngamma@@Base+0x10fc>  // b.hs, b.nlast
   43084:	lsl	x0, x26, #4
   43088:	str	x0, [sp, #208]
   4308c:	bl	cd90 <mpfr_allocate_func@plt>
   43090:	mov	x27, x0
   43094:	mov	x26, #0x0                   	// #0
   43098:	add	x0, x27, x26, lsl #4
   4309c:	bl	c010 <mpfr_mpz_init@plt>
   430a0:	ldr	x0, [sp, #160]
   430a4:	add	x26, x26, #0x1
   430a8:	cmp	x0, x26
   430ac:	b.cs	43098 <mpfr_lngamma@@Base+0xd80>  // b.hs, b.nlast
   430b0:	mov	x28, #0x1                   	// #1
   430b4:	ldr	x0, [sp, #160]
   430b8:	ldr	x1, [sp, #184]
   430bc:	add	x0, x28, x0
   430c0:	str	x0, [sp, #216]
   430c4:	cmp	x0, x1
   430c8:	b.ls	43454 <mpfr_lngamma@@Base+0x113c>  // b.plast
   430cc:	mov	x26, #0x0                   	// #0
   430d0:	add	x0, x27, x26, lsl #4
   430d4:	bl	c200 <mpfr_mpz_clear@plt>
   430d8:	ldr	x0, [sp, #160]
   430dc:	add	x26, x26, #0x1
   430e0:	cmp	x0, x26
   430e4:	b.cs	430d0 <mpfr_lngamma@@Base+0xdb8>  // b.hs, b.nlast
   430e8:	ldr	x1, [sp, #208]
   430ec:	mov	x0, x27
   430f0:	mov	x26, #0x2                   	// #2
   430f4:	bl	ccc0 <mpfr_free_func@plt>
   430f8:	ldr	x0, [sp, #160]
   430fc:	cmp	x0, x26
   43100:	b.cs	43550 <mpfr_lngamma@@Base+0x1238>  // b.hs, b.nlast
   43104:	ldr	x0, [sp, #176]
   43108:	ldr	x1, [sp, #224]
   4310c:	bl	ccc0 <mpfr_free_func@plt>
   43110:	ldr	x0, [sp, #184]
   43114:	mov	w3, #0x0                   	// #0
   43118:	cmp	x0, x28
   4311c:	b.hi	43564 <mpfr_lngamma@@Base+0x124c>  // b.pmore
   43120:	mov	x2, x19
   43124:	mov	x1, x19
   43128:	mov	x0, x19
   4312c:	bl	bdd0 <mpfr_mul@plt>
   43130:	mov	w3, #0x0                   	// #0
   43134:	mov	x2, x19
   43138:	mov	x1, x21
   4313c:	mov	x0, x21
   43140:	bl	c6b0 <mpfr_div@plt>
   43144:	mov	x1, x21
   43148:	mov	w2, #0x0                   	// #0
   4314c:	mov	x0, x19
   43150:	bl	c110 <mpfr_log@plt>
   43154:	mov	x1, x19
   43158:	mov	w3, #0x0                   	// #0
   4315c:	mov	x2, #0x1                   	// #1
   43160:	mov	x0, x19
   43164:	bl	c980 <mpfr_div_2ui@plt>
   43168:	ldr	d0, [sp, #184]
   4316c:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   43170:	ldr	x26, [sp, #288]
   43174:	ucvtf	d1, d0
   43178:	ldr	d2, [x0, #1272]
   4317c:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   43180:	ldr	d0, [x0, #1280]
   43184:	fmadd	d0, d1, d2, d0
   43188:	bl	c9e0 <__gmpfr_ceil_log2@plt>
   4318c:	add	x26, x26, x0
   43190:	ldr	d0, [sp, #128]
   43194:	fmov	d2, #2.000000000000000000e+00
   43198:	mov	x0, #0x4048000000000000    	// #4631952216750555136
   4319c:	ldr	x27, [sp, #256]
   431a0:	ucvtf	d1, d0
   431a4:	fmov	d0, x0
   431a8:	fmadd	d0, d1, d2, d0
   431ac:	bl	c9e0 <__gmpfr_ceil_log2@plt>
   431b0:	add	x27, x27, x0
   431b4:	mov	x2, x19
   431b8:	mov	x1, x20
   431bc:	mov	x0, x20
   431c0:	mov	w3, #0x0                   	// #0
   431c4:	bl	c230 <mpfr_add@plt>
   431c8:	ldr	x1, [sp, #256]
   431cc:	cmp	x26, x27
   431d0:	csel	x2, x26, x27, ge  // ge = tcont
   431d4:	add	x0, x26, #0x1
   431d8:	csel	x0, x2, x0, ne  // ne = any
   431dc:	mov	x2, #0x1                   	// #1
   431e0:	sub	x2, x2, x1
   431e4:	add	x2, x2, x0
   431e8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   431ec:	cmp	x1, x0
   431f0:	b.gt	43590 <mpfr_lngamma@@Base+0x1278>
   431f4:	ldr	x1, [sp, #192]
   431f8:	mov	x0, #0xfffffffffffffeff    	// #-257
   431fc:	movk	x0, #0x7fff, lsl #48
   43200:	sub	x0, x0, x25
   43204:	cmp	x0, x1
   43208:	b.ge	435c4 <mpfr_lngamma@@Base+0x12ac>  // b.tcont
   4320c:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   43210:	mov	w1, #0x2b8                 	// #696
   43214:	add	x2, x2, #0xb94
   43218:	b	429c0 <mpfr_lngamma@@Base+0x6a8>
   4321c:	mov	w25, #0xd                   	// #13
   43220:	b	42de4 <mpfr_lngamma@@Base+0xacc>
   43224:	cmp	x25, #0x1f4
   43228:	b.gt	4323c <mpfr_lngamma@@Base+0xf24>
   4322c:	mov	w3, #0x0                   	// #0
   43230:	mov	x2, #0xfffffffffffffff6    	// #-10
   43234:	mov	x1, #0x333                 	// #819
   43238:	b	42e10 <mpfr_lngamma@@Base+0xaf8>
   4323c:	cmp	x25, #0x3e8
   43240:	b.gt	43254 <mpfr_lngamma@@Base+0xf3c>
   43244:	mov	w3, #0x0                   	// #0
   43248:	mov	x2, #0xfffffffffffffff6    	// #-10
   4324c:	mov	x1, #0x533                 	// #1331
   43250:	b	42e10 <mpfr_lngamma@@Base+0xaf8>
   43254:	cmp	x25, #0x7d0
   43258:	b.gt	4326c <mpfr_lngamma@@Base+0xf54>
   4325c:	mov	w3, #0x0                   	// #0
   43260:	mov	x2, #0xfffffffffffffff6    	// #-10
   43264:	mov	x1, #0x6cd                 	// #1741
   43268:	b	42e10 <mpfr_lngamma@@Base+0xaf8>
   4326c:	mov	x0, #0x1388                	// #5000
   43270:	cmp	x25, x0
   43274:	b.gt	43288 <mpfr_lngamma@@Base+0xf70>
   43278:	mov	w3, #0x0                   	// #0
   4327c:	mov	x2, #0xfffffffffffffff6    	// #-10
   43280:	mov	x1, #0x8cd                 	// #2253
   43284:	b	42e10 <mpfr_lngamma@@Base+0xaf8>
   43288:	mov	x0, #0x2710                	// #10000
   4328c:	mov	w3, #0x0                   	// #0
   43290:	cmp	x25, x0
   43294:	b.gt	432a4 <mpfr_lngamma@@Base+0xf8c>
   43298:	mov	x2, #0xfffffffffffffff6    	// #-10
   4329c:	mov	x1, #0xd9a                 	// #3482
   432a0:	b	42e10 <mpfr_lngamma@@Base+0xaf8>
   432a4:	mov	x2, #0xffffffffffffffff    	// #-1
   432a8:	mov	x1, #0x9                   	// #9
   432ac:	b	42e10 <mpfr_lngamma@@Base+0xaf8>
   432b0:	mov	x0, #0x3                   	// #3
   432b4:	b	42e80 <mpfr_lngamma@@Base+0xb68>
   432b8:	mov	x2, x23
   432bc:	mov	x1, x19
   432c0:	mov	x0, x19
   432c4:	mov	w3, #0x0                   	// #0
   432c8:	bl	bdd0 <mpfr_mul@plt>
   432cc:	ldr	x1, [sp, #128]
   432d0:	mov	x2, #0x80000000            	// #2147483648
   432d4:	ldr	x0, [sp, #128]
   432d8:	cmp	x1, x2
   432dc:	lsl	x27, x1, #1
   432e0:	sub	x0, x0, #0x1
   432e4:	b.hi	43380 <mpfr_lngamma@@Base+0x1068>  // b.pmore
   432e8:	lsl	x27, x1, #2
   432ec:	mov	w3, #0x0                   	// #0
   432f0:	sub	x2, x27, #0x6
   432f4:	mov	x1, x19
   432f8:	mul	x2, x2, x0
   432fc:	mov	x0, x19
   43300:	bl	bad0 <mpfr_mul_ui@plt>
   43304:	ldr	x0, [sp, #128]
   43308:	sub	x2, x27, #0x2
   4330c:	mov	w3, #0x0                   	// #0
   43310:	mov	x1, x19
   43314:	mul	x2, x2, x0
   43318:	mov	x0, x19
   4331c:	bl	cd00 <mpfr_div_ui@plt>
   43320:	ldr	x0, [sp, #128]
   43324:	add	x2, x27, #0x2
   43328:	mov	w3, #0x0                   	// #0
   4332c:	mul	x2, x2, x0
   43330:	mov	x1, x19
   43334:	mov	x0, x19
   43338:	bl	cd00 <mpfr_div_ui@plt>
   4333c:	sub	x26, x26, #0x2
   43340:	ldr	x0, [sp, #128]
   43344:	bl	c8c0 <mpfr_bernoulli_cache@plt>
   43348:	mov	x2, x0
   4334c:	mov	x1, x19
   43350:	mov	w3, #0x0                   	// #0
   43354:	mov	x0, x21
   43358:	bl	c560 <mpfr_mul_z@plt>
   4335c:	mov	x2, x21
   43360:	mov	x1, x20
   43364:	mov	x0, x20
   43368:	mov	w3, #0x0                   	// #0
   4336c:	bl	c230 <mpfr_add@plt>
   43370:	ldr	x0, [sp, #128]
   43374:	add	x0, x0, #0x1
   43378:	str	x0, [sp, #128]
   4337c:	b	42fbc <mpfr_lngamma@@Base+0xca4>
   43380:	mov	x0, #0xfffffffffffffffb    	// #-5
   43384:	mov	x1, x19
   43388:	sub	x2, x0, x26
   4338c:	mov	w3, #0x0                   	// #0
   43390:	mov	x0, x19
   43394:	bl	bad0 <mpfr_mul_ui@plt>
   43398:	sub	x2, x28, x26
   4339c:	mov	x1, x19
   433a0:	mov	w3, #0x0                   	// #0
   433a4:	mov	x0, x19
   433a8:	bl	bad0 <mpfr_mul_ui@plt>
   433ac:	mov	x2, x27
   433b0:	mov	x1, x19
   433b4:	mov	w3, #0x0                   	// #0
   433b8:	mov	x0, x19
   433bc:	bl	cd00 <mpfr_div_ui@plt>
   433c0:	mov	x0, #0xfffffffffffffffc    	// #-4
   433c4:	mov	x1, x19
   433c8:	sub	x2, x0, x26
   433cc:	mov	w3, #0x0                   	// #0
   433d0:	mov	x0, x19
   433d4:	bl	cd00 <mpfr_div_ui@plt>
   433d8:	mov	x2, x27
   433dc:	mov	w3, #0x0                   	// #0
   433e0:	mov	x1, x19
   433e4:	mov	x0, x19
   433e8:	bl	cd00 <mpfr_div_ui@plt>
   433ec:	mov	x0, #0xfffffffffffffffe    	// #-2
   433f0:	mov	w3, #0x0                   	// #0
   433f4:	sub	x2, x0, x26
   433f8:	b	43330 <mpfr_lngamma@@Base+0x1018>
   433fc:	ldr	x0, [sp, #176]
   43400:	mov	x1, x25
   43404:	add	x0, x0, x27, lsl #5
   43408:	add	x27, x27, #0x1
   4340c:	bl	cb10 <mpfr_init2@plt>
   43410:	b	4304c <mpfr_lngamma@@Base+0xd34>
   43414:	tbnz	w27, #0, 4343c <mpfr_lngamma@@Base+0x1124>
   43418:	ldr	x0, [sp, #176]
   4341c:	lsr	x1, x27, #1
   43420:	mov	w2, #0x0                   	// #0
   43424:	add	x1, x0, x1, lsl #5
   43428:	mov	x0, x28
   4342c:	bl	c490 <mpfr_sqr@plt>
   43430:	add	x27, x27, #0x1
   43434:	add	x28, x28, #0x20
   43438:	b	43078 <mpfr_lngamma@@Base+0xd60>
   4343c:	mov	x2, x22
   43440:	sub	x1, x28, #0x20
   43444:	mov	x0, x28
   43448:	mov	w3, #0x0                   	// #0
   4344c:	bl	bdd0 <mpfr_mul@plt>
   43450:	b	43430 <mpfr_lngamma@@Base+0x1118>
   43454:	mov	x1, #0x1                   	// #1
   43458:	mov	x0, x27
   4345c:	bl	bd30 <__gmpz_set_ui@plt>
   43460:	mov	x26, #0x0                   	// #0
   43464:	mov	x1, x27
   43468:	ldr	x0, [sp, #160]
   4346c:	cmp	x0, x26
   43470:	b.ne	434b0 <mpfr_lngamma@@Base+0x1198>  // b.any
   43474:	mov	x1, x27
   43478:	mov	x0, x23
   4347c:	mov	w2, #0x0                   	// #0
   43480:	bl	c2d0 <mpfr_set_z@plt>
   43484:	mov	x0, #0x0                   	// #0
   43488:	ldr	x1, [sp, #160]
   4348c:	cmp	x1, x0
   43490:	b.ne	43510 <mpfr_lngamma@@Base+0x11f8>  // b.any
   43494:	mov	x2, x23
   43498:	mov	x1, x19
   4349c:	mov	x0, x19
   434a0:	mov	w3, #0x0                   	// #0
   434a4:	bl	bdd0 <mpfr_mul@plt>
   434a8:	ldr	x28, [sp, #216]
   434ac:	b	430b4 <mpfr_lngamma@@Base+0xd9c>
   434b0:	add	x0, x1, #0x10
   434b4:	str	x0, [sp, #200]
   434b8:	str	x1, [sp, #232]
   434bc:	bl	c020 <__gmpz_set@plt>
   434c0:	ldr	x1, [sp, #232]
   434c4:	add	x26, x26, #0x1
   434c8:	mov	x2, x28
   434cc:	mov	x0, x1
   434d0:	cmp	x1, x27
   434d4:	b.ne	434e8 <mpfr_lngamma@@Base+0x11d0>  // b.any
   434d8:	bl	c190 <__gmpz_mul_ui@plt>
   434dc:	add	x28, x28, #0x1
   434e0:	ldr	x1, [sp, #200]
   434e4:	b	43468 <mpfr_lngamma@@Base+0x1150>
   434e8:	str	x1, [sp, #232]
   434ec:	bl	c190 <__gmpz_mul_ui@plt>
   434f0:	ldr	x1, [sp, #232]
   434f4:	sub	x2, x1, #0x10
   434f8:	mov	x0, x1
   434fc:	str	x2, [sp, #232]
   43500:	bl	ca50 <__gmpz_add@plt>
   43504:	ldr	x2, [sp, #232]
   43508:	mov	x1, x2
   4350c:	b	434c8 <mpfr_lngamma@@Base+0x11b0>
   43510:	ldr	x1, [sp, #176]
   43514:	add	x26, x0, #0x1
   43518:	cmp	x0, #0x0
   4351c:	mov	w3, #0x0                   	// #0
   43520:	add	x2, x27, x26, lsl #4
   43524:	mov	x0, x24
   43528:	add	x1, x1, x26, lsl #5
   4352c:	csel	x1, x1, x22, ne  // ne = any
   43530:	bl	c560 <mpfr_mul_z@plt>
   43534:	mov	x2, x24
   43538:	mov	x1, x23
   4353c:	mov	x0, x23
   43540:	mov	w3, #0x0                   	// #0
   43544:	bl	c230 <mpfr_add@plt>
   43548:	mov	x0, x26
   4354c:	b	43488 <mpfr_lngamma@@Base+0x1170>
   43550:	ldr	x0, [sp, #176]
   43554:	add	x0, x0, x26, lsl #5
   43558:	add	x26, x26, #0x1
   4355c:	bl	c0f0 <mpfr_clear@plt>
   43560:	b	430f8 <mpfr_lngamma@@Base+0xde0>
   43564:	mov	x2, x28
   43568:	mov	x1, x22
   4356c:	mov	x0, x23
   43570:	bl	c2f0 <mpfr_add_ui@plt>
   43574:	mov	x2, x23
   43578:	mov	x1, x19
   4357c:	mov	x0, x19
   43580:	mov	w3, #0x0                   	// #0
   43584:	add	x28, x28, #0x1
   43588:	bl	bdd0 <mpfr_mul@plt>
   4358c:	b	43110 <mpfr_lngamma@@Base+0xdf8>
   43590:	ldr	w0, [sp, #136]
   43594:	sub	x2, x25, x2
   43598:	ldr	x1, [sp, #240]
   4359c:	cmp	w0, #0x0
   435a0:	ldr	x0, [sp, #168]
   435a4:	sub	x1, x1, #0x1
   435a8:	cinc	x3, x0, eq  // eq = none
   435ac:	asr	x1, x1, #6
   435b0:	ldr	x0, [sp, #264]
   435b4:	add	x1, x1, #0x1
   435b8:	bl	c400 <mpfr_round_p@plt>
   435bc:	cbnz	w0, 42d20 <mpfr_lngamma@@Base+0xa08>
   435c0:	b	431f4 <mpfr_lngamma@@Base+0xedc>
   435c4:	ldr	x0, [sp, #192]
   435c8:	add	x25, x25, x0
   435cc:	mov	x0, #0x2                   	// #2
   435d0:	sdiv	x0, x25, x0
   435d4:	b	42dec <mpfr_lngamma@@Base+0xad4>
   435d8:	cbz	w27, 4254c <mpfr_lngamma@@Base+0x234>
   435dc:	ldr	w0, [sp, #140]
   435e0:	orr	w0, w0, #0x8
   435e4:	str	w0, [x1]
   435e8:	b	4254c <mpfr_lngamma@@Base+0x234>
   435ec:	tbz	w0, #31, 428c0 <mpfr_lngamma@@Base+0x5a8>
   435f0:	mov	x1, x21
   435f4:	mov	x0, x23
   435f8:	mov	w2, #0x1                   	// #1
   435fc:	bl	ca30 <mpfr_cmp3@plt>
   43600:	cbnz	w0, 428c0 <mpfr_lngamma@@Base+0x5a8>
   43604:	ldr	w2, [sp, #136]
   43608:	mov	x1, x21
   4360c:	ldr	w3, [sp, #344]
   43610:	mov	w28, #0x1                   	// #1
   43614:	ldr	x0, [sp, #120]
   43618:	bl	c730 <mpfr_set4@plt>
   4361c:	b	428c4 <mpfr_lngamma@@Base+0x5ac>

0000000000043620 <mpfr_lgamma@@Base>:
   43620:	stp	x29, x30, [sp, #-192]!
   43624:	mov	x29, sp
   43628:	stp	x19, x20, [sp, #16]
   4362c:	mov	x20, x0
   43630:	mov	x19, x1
   43634:	stp	x21, x22, [sp, #32]
   43638:	mov	w22, #0x1                   	// #1
   4363c:	mov	x21, x2
   43640:	stp	x23, x24, [sp, #48]
   43644:	mov	x24, #0x8000000000000003    	// #-9223372036854775805
   43648:	stp	x25, x26, [sp, #64]
   4364c:	stp	x27, x28, [sp, #80]
   43650:	ldr	x0, [x2, #16]
   43654:	str	w22, [x1]
   43658:	cmp	x0, x24
   4365c:	b.gt	43708 <mpfr_lgamma@@Base+0xe8>
   43660:	mov	x1, #0x2                   	// #2
   43664:	movk	x1, #0x8000, lsl #48
   43668:	cmp	x0, x1
   4366c:	b.ne	4369c <mpfr_lgamma@@Base+0x7c>  // b.any
   43670:	str	x0, [x20, #16]
   43674:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   43678:	ldr	x1, [x0, #2592]
   4367c:	add	x0, x0, #0xa20
   43680:	blr	x1
   43684:	mrs	x1, tpidr_el0
   43688:	add	x0, x1, x0
   4368c:	ldr	w1, [x0]
   43690:	orr	w1, w1, #0x4
   43694:	str	w1, [x0]
   43698:	b	436e4 <mpfr_lgamma@@Base+0xc4>
   4369c:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   436a0:	cmp	x0, x1
   436a4:	b.ne	436cc <mpfr_lgamma@@Base+0xac>  // b.any
   436a8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   436ac:	ldr	x1, [x0, #2592]
   436b0:	add	x0, x0, #0xa20
   436b4:	blr	x1
   436b8:	mrs	x1, tpidr_el0
   436bc:	add	x0, x1, x0
   436c0:	ldr	w1, [x0]
   436c4:	orr	w1, w1, #0x20
   436c8:	str	w1, [x0]
   436cc:	ldr	w0, [x21, #8]
   436d0:	str	w0, [x19]
   436d4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   436d8:	str	x0, [x20, #16]
   436dc:	mov	w0, #0x1                   	// #1
   436e0:	str	w0, [x20, #8]
   436e4:	mov	w19, #0x0                   	// #0
   436e8:	mov	w0, w19
   436ec:	ldp	x19, x20, [sp, #16]
   436f0:	ldp	x21, x22, [sp, #32]
   436f4:	ldp	x23, x24, [sp, #48]
   436f8:	ldp	x25, x26, [sp, #64]
   436fc:	ldp	x27, x28, [sp, #80]
   43700:	ldp	x29, x30, [sp], #192
   43704:	ret
   43708:	ldr	w0, [x2, #8]
   4370c:	mov	w23, w3
   43710:	tbz	w0, #31, 43a08 <mpfr_lgamma@@Base+0x3e8>
   43714:	mov	x0, x2
   43718:	bl	c1f0 <mpfr_integer_p@plt>
   4371c:	cbz	w0, 4374c <mpfr_lgamma@@Base+0x12c>
   43720:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   43724:	ldr	x1, [x0, #2592]
   43728:	add	x0, x0, #0xa20
   4372c:	blr	x1
   43730:	str	w22, [x20, #8]
   43734:	mrs	x1, tpidr_el0
   43738:	str	x24, [x20, #16]
   4373c:	add	x0, x1, x0
   43740:	ldr	w1, [x0]
   43744:	orr	w1, w1, #0x20
   43748:	b	43694 <mpfr_lgamma@@Base+0x74>
   4374c:	mov	x0, x21
   43750:	bl	422bc <mpfr_custom_get_kind@@Base+0x4c>
   43754:	cbnz	w0, 43760 <mpfr_lgamma@@Base+0x140>
   43758:	mov	w0, #0xffffffff            	// #-1
   4375c:	str	w0, [x19]
   43760:	ldr	x22, [x20]
   43764:	ldr	x1, [x21, #16]
   43768:	neg	x0, x22
   4376c:	cmp	x1, x0
   43770:	b.ge	43a08 <mpfr_lgamma@@Base+0x3e8>  // b.tcont
   43774:	mrs	x28, tpidr_el0
   43778:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4377c:	ldr	x1, [x0, #2592]
   43780:	add	x0, x0, #0xa20
   43784:	blr	x1
   43788:	add	x22, x22, #0xe
   4378c:	add	x27, sp, #0x80
   43790:	add	x25, sp, #0xa0
   43794:	ldr	w24, [x28, x0]
   43798:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4379c:	ldr	x1, [x0, #2528]
   437a0:	add	x0, x0, #0x9e0
   437a4:	blr	x1
   437a8:	add	x1, x28, x0
   437ac:	ldr	x0, [x28, x0]
   437b0:	str	x0, [sp, #104]
   437b4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   437b8:	ldr	x2, [x0, #2560]
   437bc:	add	x0, x0, #0xa00
   437c0:	blr	x2
   437c4:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   437c8:	str	x2, [x1]
   437cc:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   437d0:	ldr	x26, [x28, x0]
   437d4:	str	x1, [x28, x0]
   437d8:	mov	x1, x22
   437dc:	mov	x0, x27
   437e0:	bl	cb10 <mpfr_init2@plt>
   437e4:	mov	x1, x22
   437e8:	mov	x0, x25
   437ec:	bl	cb10 <mpfr_init2@plt>
   437f0:	mov	x1, x21
   437f4:	mov	w2, #0x2                   	// #2
   437f8:	mov	x0, x27
   437fc:	bl	bdf0 <mpfr_neg@plt>
   43800:	mov	x1, x27
   43804:	mov	w2, #0x2                   	// #2
   43808:	mov	x0, x27
   4380c:	bl	c110 <mpfr_log@plt>
   43810:	mov	x1, x27
   43814:	mov	w2, #0x3                   	// #3
   43818:	mov	x0, x27
   4381c:	bl	bdf0 <mpfr_neg@plt>
   43820:	mov	x1, x21
   43824:	mov	w2, #0x3                   	// #3
   43828:	mov	x0, x25
   4382c:	bl	bdf0 <mpfr_neg@plt>
   43830:	mov	x1, x25
   43834:	mov	w2, #0x3                   	// #3
   43838:	mov	x0, x25
   4383c:	bl	c110 <mpfr_log@plt>
   43840:	mov	x1, x25
   43844:	mov	w2, #0x2                   	// #2
   43848:	mov	x0, x25
   4384c:	bl	bdf0 <mpfr_neg@plt>
   43850:	mov	x2, x21
   43854:	mov	x1, x25
   43858:	mov	w3, #0x2                   	// #2
   4385c:	mov	x0, x25
   43860:	bl	bbf0 <mpfr_sub@plt>
   43864:	ldr	x1, [x20]
   43868:	mov	w2, w23
   4386c:	mov	x0, x27
   43870:	bl	ca00 <mpfr_prec_round@plt>
   43874:	mov	w19, w0
   43878:	ldr	x1, [x20]
   4387c:	mov	w2, w23
   43880:	mov	x0, x25
   43884:	bl	ca00 <mpfr_prec_round@plt>
   43888:	tbnz	w19, #31, 43a1c <mpfr_lgamma@@Base+0x3fc>
   4388c:	tbnz	w0, #31, 43a20 <mpfr_lgamma@@Base+0x400>
   43890:	cmp	w19, #0x0
   43894:	cset	w1, gt
   43898:	cmp	w0, #0x0
   4389c:	cset	w0, gt
   438a0:	cmp	w1, w0
   438a4:	b.ne	43a20 <mpfr_lgamma@@Base+0x400>  // b.any
   438a8:	mov	x1, x25
   438ac:	mov	x0, x27
   438b0:	bl	caf0 <mpfr_equal_p@plt>
   438b4:	cbz	w0, 43a20 <mpfr_lgamma@@Base+0x400>
   438b8:	ldr	w3, [sp, #168]
   438bc:	mov	x1, x25
   438c0:	mov	w2, w23
   438c4:	mov	x0, x20
   438c8:	bl	c730 <mpfr_set4@plt>
   438cc:	mov	w1, #0x1                   	// #1
   438d0:	mov	x0, x27
   438d4:	str	w1, [sp, #124]
   438d8:	bl	c0f0 <mpfr_clear@plt>
   438dc:	mov	x0, x25
   438e0:	bl	c0f0 <mpfr_clear@plt>
   438e4:	ldr	w1, [sp, #124]
   438e8:	cbz	w1, 43970 <mpfr_lgamma@@Base+0x350>
   438ec:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   438f0:	ldr	x1, [x0, #2592]
   438f4:	add	x0, x0, #0xa20
   438f8:	blr	x1
   438fc:	add	x1, x28, x0
   43900:	str	w24, [x28, x0]
   43904:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   43908:	ldr	x2, [x0, #2528]
   4390c:	add	x0, x0, #0x9e0
   43910:	blr	x2
   43914:	ldr	x2, [sp, #104]
   43918:	str	x2, [x28, x0]
   4391c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   43920:	ldr	x2, [x0, #2560]
   43924:	add	x0, x0, #0xa00
   43928:	blr	x2
   4392c:	str	x26, [x28, x0]
   43930:	ldr	x0, [x20, #16]
   43934:	ldr	x2, [sp, #104]
   43938:	cmp	x2, x0
   4393c:	b.gt	43958 <mpfr_lgamma@@Base+0x338>
   43940:	cmp	x26, x0
   43944:	b.lt	43958 <mpfr_lgamma@@Base+0x338>  // b.tstop
   43948:	cbz	w19, 436e8 <mpfr_lgamma@@Base+0xc8>
   4394c:	orr	w24, w24, #0x8
   43950:	str	w24, [x1]
   43954:	b	436e8 <mpfr_lgamma@@Base+0xc8>
   43958:	mov	w2, w23
   4395c:	mov	w1, w19
   43960:	mov	x0, x20
   43964:	bl	cbc0 <mpfr_check_range@plt>
   43968:	mov	w19, w0
   4396c:	b	436e8 <mpfr_lgamma@@Base+0xc8>
   43970:	ldr	x0, [x21, #16]
   43974:	ldr	x1, [sp, #112]
   43978:	add	x0, x22, x0
   4397c:	cmp	x0, x1
   43980:	b.gt	439c8 <mpfr_lgamma@@Base+0x3a8>
   43984:	cmp	x22, #0x1
   43988:	b.eq	439c0 <mpfr_lgamma@@Base+0x3a0>  // b.none
   4398c:	b.gt	439a8 <mpfr_lgamma@@Base+0x388>
   43990:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   43994:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   43998:	add	x2, x2, #0x92b
   4399c:	add	x0, x0, #0x945
   439a0:	mov	w1, #0x35d                 	// #861
   439a4:	bl	cbd0 <mpfr_assert_fail@plt>
   439a8:	sub	x0, x22, #0x1
   439ac:	clz	x1, x0
   439b0:	mov	w0, #0x43                  	// #67
   439b4:	sub	w0, w0, w1
   439b8:	add	x22, x22, w0, sxtw
   439bc:	b	437d8 <mpfr_lgamma@@Base+0x1b8>
   439c0:	mov	w0, #0x3                   	// #3
   439c4:	b	439b8 <mpfr_lgamma@@Base+0x398>
   439c8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   439cc:	ldr	x1, [x0, #2592]
   439d0:	add	x0, x0, #0xa20
   439d4:	blr	x1
   439d8:	str	w24, [x28, x0]
   439dc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   439e0:	ldr	x1, [x0, #2528]
   439e4:	add	x0, x0, #0x9e0
   439e8:	blr	x1
   439ec:	ldr	x1, [sp, #104]
   439f0:	str	x1, [x28, x0]
   439f4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   439f8:	ldr	x1, [x0, #2560]
   439fc:	add	x0, x0, #0xa00
   43a00:	blr	x1
   43a04:	str	x26, [x28, x0]
   43a08:	mov	w2, w23
   43a0c:	mov	x1, x21
   43a10:	mov	x0, x20
   43a14:	bl	42428 <mpfr_lngamma@@Base+0x110>
   43a18:	b	43968 <mpfr_lgamma@@Base+0x348>
   43a1c:	tbnz	w0, #31, 438a8 <mpfr_lgamma@@Base+0x288>
   43a20:	ldr	x0, [sp, #144]
   43a24:	mov	w1, #0x0                   	// #0
   43a28:	str	x0, [sp, #112]
   43a2c:	b	438d0 <mpfr_lgamma@@Base+0x2b0>

0000000000043a30 <mpfr_zeta_ui@@Base>:
   43a30:	stp	x29, x30, [sp, #-272]!
   43a34:	mov	x29, sp
   43a38:	stp	x19, x20, [sp, #16]
   43a3c:	stp	x21, x22, [sp, #32]
   43a40:	mov	w22, w2
   43a44:	stp	x23, x24, [sp, #48]
   43a48:	stp	x25, x26, [sp, #64]
   43a4c:	stp	x27, x28, [sp, #80]
   43a50:	cbnz	x1, 43a6c <mpfr_zeta_ui@@Base+0x3c>
   43a54:	mov	w3, w2
   43a58:	mov	x2, #0xffffffffffffffff    	// #-1
   43a5c:	mov	x1, x2
   43a60:	bl	bb00 <mpfr_set_si_2exp@plt>
   43a64:	mov	w19, w0
   43a68:	b	43ac0 <mpfr_zeta_ui@@Base+0x90>
   43a6c:	mov	x24, x1
   43a70:	mov	x21, x0
   43a74:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   43a78:	ldr	x1, [x0, #2592]
   43a7c:	add	x0, x0, #0xa20
   43a80:	blr	x1
   43a84:	mrs	x1, tpidr_el0
   43a88:	str	x1, [sp, #96]
   43a8c:	add	x1, x1, x0
   43a90:	cmp	x24, #0x1
   43a94:	ldr	x2, [sp, #96]
   43a98:	ldr	w0, [x2, x0]
   43a9c:	str	w0, [sp, #124]
   43aa0:	b.ne	43ae0 <mpfr_zeta_ui@@Base+0xb0>  // b.any
   43aa4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   43aa8:	str	x0, [x21, #16]
   43aac:	ldr	w0, [sp, #124]
   43ab0:	mov	w19, #0x0                   	// #0
   43ab4:	str	w24, [x21, #8]
   43ab8:	orr	w0, w0, #0x20
   43abc:	str	w0, [x1]
   43ac0:	mov	w0, w19
   43ac4:	ldp	x19, x20, [sp, #16]
   43ac8:	ldp	x21, x22, [sp, #32]
   43acc:	ldp	x23, x24, [sp, #48]
   43ad0:	ldp	x25, x26, [sp, #64]
   43ad4:	ldp	x27, x28, [sp, #80]
   43ad8:	ldp	x29, x30, [sp], #272
   43adc:	ret
   43ae0:	cmp	w22, #0x4
   43ae4:	mov	w0, #0x2                   	// #2
   43ae8:	csel	w22, w22, w0, ne  // ne = any
   43aec:	ldr	x2, [sp, #96]
   43af0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   43af4:	ldr	x1, [x0, #2528]
   43af8:	add	x0, x0, #0x9e0
   43afc:	blr	x1
   43b00:	ldr	x1, [sp, #96]
   43b04:	ldr	x20, [x21]
   43b08:	add	x1, x1, x0
   43b0c:	ldr	x0, [x2, x0]
   43b10:	str	x0, [sp, #144]
   43b14:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   43b18:	ldr	x2, [x0, #2560]
   43b1c:	add	x0, x0, #0xa00
   43b20:	blr	x2
   43b24:	ldr	x2, [sp, #96]
   43b28:	cmp	x20, x24
   43b2c:	ldr	x2, [x2, x0]
   43b30:	str	x2, [sp, #152]
   43b34:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   43b38:	str	x2, [x1]
   43b3c:	ldr	x2, [sp, #96]
   43b40:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   43b44:	str	x1, [x2, x0]
   43b48:	b.hi	43c4c <mpfr_zeta_ui@@Base+0x21c>  // b.pmore
   43b4c:	cmp	x24, #0x2
   43b50:	b.ne	43bf4 <mpfr_zeta_ui@@Base+0x1c4>  // b.any
   43b54:	mov	w3, w22
   43b58:	mov	x0, x21
   43b5c:	mov	x2, #0xfffffffffffffffd    	// #-3
   43b60:	mov	x1, #0xd                   	// #13
   43b64:	bl	c680 <mpfr_set_ui_2exp@plt>
   43b68:	mov	w19, w0
   43b6c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   43b70:	ldr	x1, [x0, #2592]
   43b74:	add	x0, x0, #0xa20
   43b78:	blr	x1
   43b7c:	ldr	w3, [sp, #124]
   43b80:	ldr	x2, [sp, #96]
   43b84:	ldr	x1, [sp, #96]
   43b88:	str	w3, [x2, x0]
   43b8c:	add	x1, x1, x0
   43b90:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   43b94:	ldr	x2, [x0, #2528]
   43b98:	add	x0, x0, #0x9e0
   43b9c:	blr	x2
   43ba0:	ldr	x2, [sp, #96]
   43ba4:	ldr	x3, [sp, #144]
   43ba8:	str	x3, [x2, x0]
   43bac:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   43bb0:	ldr	x2, [x0, #2560]
   43bb4:	add	x0, x0, #0xa00
   43bb8:	blr	x2
   43bbc:	ldr	x2, [sp, #96]
   43bc0:	ldr	x3, [sp, #152]
   43bc4:	str	x3, [x2, x0]
   43bc8:	ldr	x0, [x21, #16]
   43bcc:	ldr	x2, [sp, #144]
   43bd0:	cmp	x2, x0
   43bd4:	b.gt	44178 <mpfr_zeta_ui@@Base+0x748>
   43bd8:	cmp	x3, x0
   43bdc:	b.lt	44178 <mpfr_zeta_ui@@Base+0x748>  // b.tstop
   43be0:	cbz	w19, 43ac0 <mpfr_zeta_ui@@Base+0x90>
   43be4:	ldr	w0, [sp, #124]
   43be8:	orr	w0, w0, #0x8
   43bec:	str	w0, [x1]
   43bf0:	b	43ac0 <mpfr_zeta_ui@@Base+0x90>
   43bf4:	and	w0, w22, #0xfffffffd
   43bf8:	cmp	w0, #0x1
   43bfc:	b.eq	43c0c <mpfr_zeta_ui@@Base+0x1dc>  // b.none
   43c00:	cmp	w22, #0x0
   43c04:	ccmp	x20, x24, #0x2, eq  // eq = none
   43c08:	b.cs	43c28 <mpfr_zeta_ui@@Base+0x1f8>  // b.hs, b.nlast
   43c0c:	mov	w3, w22
   43c10:	mov	x0, x21
   43c14:	mov	x2, #0x0                   	// #0
   43c18:	mov	x1, #0x1                   	// #1
   43c1c:	bl	c680 <mpfr_set_ui_2exp@plt>
   43c20:	mov	w19, #0xffffffff            	// #-1
   43c24:	b	43b6c <mpfr_zeta_ui@@Base+0x13c>
   43c28:	mov	w3, w22
   43c2c:	mov	x0, x21
   43c30:	mov	x2, #0x0                   	// #0
   43c34:	mov	x1, #0x1                   	// #1
   43c38:	bl	c680 <mpfr_set_ui_2exp@plt>
   43c3c:	mov	x0, x21
   43c40:	mov	w19, #0x1                   	// #1
   43c44:	bl	c1b0 <mpfr_nextabove@plt>
   43c48:	b	43b6c <mpfr_zeta_ui@@Base+0x13c>
   43c4c:	add	x25, sp, #0xf0
   43c50:	mov	x1, #0x1f                  	// #31
   43c54:	mov	x0, x25
   43c58:	bl	cb10 <mpfr_init2@plt>
   43c5c:	mov	x0, #0x2                   	// #2
   43c60:	sdiv	x0, x20, x0
   43c64:	cmp	x0, x24
   43c68:	b.hi	43cf4 <mpfr_zeta_ui@@Base+0x2c4>  // b.pmore
   43c6c:	mov	x0, x25
   43c70:	adrp	x1, 5b000 <mpfr_bases@@Base+0x12a8>
   43c74:	add	x1, x1, #0x508
   43c78:	bl	c3d0 <mpfr_set_str_binary@plt>
   43c7c:	mov	w3, #0x1                   	// #1
   43c80:	mov	x2, x24
   43c84:	mov	x1, x25
   43c88:	mov	x0, x25
   43c8c:	bl	bad0 <mpfr_mul_ui@plt>
   43c90:	add	x1, x20, #0x2
   43c94:	mov	x0, x25
   43c98:	mov	x2, #0x0                   	// #0
   43c9c:	bl	bfd0 <mpfr_cmp_ui_2exp@plt>
   43ca0:	tbnz	w0, #31, 43cf4 <mpfr_zeta_ui@@Base+0x2c4>
   43ca4:	mov	x0, x25
   43ca8:	bl	c0f0 <mpfr_clear@plt>
   43cac:	mov	w3, #0x1                   	// #1
   43cb0:	mov	x2, #0x0                   	// #0
   43cb4:	mov	x1, #0x1                   	// #1
   43cb8:	mov	x0, x21
   43cbc:	bl	c680 <mpfr_set_ui_2exp@plt>
   43cc0:	mov	x2, x24
   43cc4:	mov	x1, x21
   43cc8:	mov	w3, #0x1                   	// #1
   43ccc:	mov	x0, x21
   43cd0:	bl	c980 <mpfr_div_2ui@plt>
   43cd4:	mov	x1, x21
   43cd8:	mov	x0, x21
   43cdc:	mov	w3, #0x1                   	// #1
   43ce0:	mov	x2, #0x1                   	// #1
   43ce4:	bl	c2f0 <mpfr_add_ui@plt>
   43ce8:	cmp	w22, #0x2
   43cec:	b.ne	43c20 <mpfr_zeta_ui@@Base+0x1f0>  // b.any
   43cf0:	b	43c3c <mpfr_zeta_ui@@Base+0x20c>
   43cf4:	add	x23, sp, #0xd0
   43cf8:	add	x27, sp, #0xb0
   43cfc:	mov	x0, x23
   43d00:	bl	c010 <mpfr_mpz_init@plt>
   43d04:	mov	x0, x27
   43d08:	add	x19, sp, #0xc0
   43d0c:	bl	c010 <mpfr_mpz_init@plt>
   43d10:	add	x26, sp, #0xe0
   43d14:	mov	x0, x19
   43d18:	bl	c010 <mpfr_mpz_init@plt>
   43d1c:	mov	x0, x26
   43d20:	bl	c010 <mpfr_mpz_init@plt>
   43d24:	cmp	x20, #0x1
   43d28:	b.eq	43d78 <mpfr_zeta_ui@@Base+0x348>  // b.none
   43d2c:	b.gt	43d48 <mpfr_zeta_ui@@Base+0x318>
   43d30:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   43d34:	add	x2, x2, #0x529
   43d38:	mov	w1, #0x6e                  	// #110
   43d3c:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   43d40:	add	x0, x0, #0x531
   43d44:	bl	cbd0 <mpfr_assert_fail@plt>
   43d48:	sub	x0, x20, #0x1
   43d4c:	clz	x1, x0
   43d50:	mov	w0, #0x40                  	// #64
   43d54:	sub	w0, w0, w1
   43d58:	add	x0, x20, w0, sxtw
   43d5c:	cmp	x0, #0x1
   43d60:	b.eq	43ee4 <mpfr_zeta_ui@@Base+0x4b4>  // b.none
   43d64:	b.gt	43d80 <mpfr_zeta_ui@@Base+0x350>
   43d68:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   43d6c:	mov	w1, #0x70                  	// #112
   43d70:	add	x2, x2, #0x529
   43d74:	b	43d3c <mpfr_zeta_ui@@Base+0x30c>
   43d78:	mov	w0, #0x0                   	// #0
   43d7c:	b	43d58 <mpfr_zeta_ui@@Base+0x328>
   43d80:	sub	x1, x0, #0x1
   43d84:	clz	x2, x1
   43d88:	mov	w1, #0x4f                  	// #79
   43d8c:	sub	w1, w1, w2
   43d90:	add	x28, x0, w1, sxtw
   43d94:	mov	x0, #0x40                  	// #64
   43d98:	str	x0, [sp, #128]
   43d9c:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   43da0:	scvtf	d0, x28
   43da4:	mov	x1, x28
   43da8:	ldr	d1, [x0, #1352]
   43dac:	fmul	d0, d0, d1
   43db0:	fcvtzu	d0, d0
   43db4:	fmov	x0, d0
   43db8:	str	d0, [sp, #104]
   43dbc:	add	x0, x0, #0x1
   43dc0:	str	x0, [sp, #136]
   43dc4:	fmov	x0, d0
   43dc8:	add	x0, x0, #0x5
   43dcc:	str	x0, [sp, #112]
   43dd0:	mov	x0, x25
   43dd4:	bl	bf50 <mpfr_set_prec@plt>
   43dd8:	mov	x0, x23
   43ddc:	mov	x1, #0x0                   	// #0
   43de0:	bl	bd30 <__gmpz_set_ui@plt>
   43de4:	mov	x0, x19
   43de8:	mov	x1, #0x1                   	// #1
   43dec:	bl	bd30 <__gmpz_set_ui@plt>
   43df0:	ldr	x0, [sp, #136]
   43df4:	mov	x1, x19
   43df8:	lsl	x2, x0, #1
   43dfc:	mov	x0, x19
   43e00:	sub	x2, x2, #0x1
   43e04:	bl	c290 <__gmpz_mul_2exp@plt>
   43e08:	mov	x1, x19
   43e0c:	mov	x0, x27
   43e10:	bl	c020 <__gmpz_set@plt>
   43e14:	ldr	x20, [sp, #136]
   43e18:	sub	x3, x24, #0x1
   43e1c:	cbnz	x20, 43eec <mpfr_zeta_ui@@Base+0x4bc>
   43e20:	mov	x2, x3
   43e24:	mov	x1, x23
   43e28:	mov	x0, x19
   43e2c:	str	x3, [sp, #104]
   43e30:	bl	c1c0 <__gmpz_fdiv_q_2exp@plt>
   43e34:	ldr	x3, [sp, #104]
   43e38:	mov	x2, x19
   43e3c:	ldr	x0, [sp, #112]
   43e40:	str	x0, [sp, #104]
   43e44:	mov	x1, x23
   43e48:	str	x3, [sp, #136]
   43e4c:	add	x0, x0, #0x1
   43e50:	str	x0, [sp, #112]
   43e54:	mov	x0, x23
   43e58:	bl	ca50 <__gmpz_add@plt>
   43e5c:	ldr	x3, [sp, #136]
   43e60:	mov	x0, x19
   43e64:	mov	x1, x19
   43e68:	mov	x2, x3
   43e6c:	bl	c1c0 <__gmpz_fdiv_q_2exp@plt>
   43e70:	ldr	w0, [sp, #196]
   43e74:	ldr	x3, [sp, #136]
   43e78:	cmp	w0, #0x0
   43e7c:	b.gt	43e38 <mpfr_zeta_ui@@Base+0x408>
   43e80:	mov	x2, x28
   43e84:	mov	x1, x23
   43e88:	mov	x0, x23
   43e8c:	bl	c290 <__gmpz_mul_2exp@plt>
   43e90:	mov	x2, x27
   43e94:	mov	x1, x23
   43e98:	mov	x0, x23
   43e9c:	bl	bbb0 <__gmpz_tdiv_q@plt>
   43ea0:	mov	x1, x23
   43ea4:	mov	w2, #0x0                   	// #0
   43ea8:	mov	x0, x25
   43eac:	bl	c2d0 <mpfr_set_z@plt>
   43eb0:	mov	x2, x28
   43eb4:	mov	x1, x25
   43eb8:	mov	x0, x25
   43ebc:	mov	w3, #0x0                   	// #0
   43ec0:	bl	c980 <mpfr_div_2ui@plt>
   43ec4:	ldr	x0, [sp, #112]
   43ec8:	cmp	x0, #0x1
   43ecc:	b.eq	440bc <mpfr_zeta_ui@@Base+0x68c>  // b.none
   43ed0:	b.hi	440a8 <mpfr_zeta_ui@@Base+0x678>  // b.pmore
   43ed4:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   43ed8:	mov	w1, #0xdc                  	// #220
   43edc:	add	x2, x2, #0x53b
   43ee0:	b	43d3c <mpfr_zeta_ui@@Base+0x30c>
   43ee4:	mov	w1, #0xf                   	// #15
   43ee8:	b	43d90 <mpfr_zeta_ui@@Base+0x360>
   43eec:	clz	x0, x20
   43ef0:	mov	x1, #0x40                  	// #64
   43ef4:	sub	x1, x1, x0
   43ef8:	mul	x1, x1, x24
   43efc:	cmp	x1, #0x80
   43f00:	b.ls	43ff4 <mpfr_zeta_ui@@Base+0x5c4>  // b.plast
   43f04:	mov	x1, #0x3f                  	// #63
   43f08:	sub	x0, x1, x0
   43f0c:	mov	w1, #0x2                   	// #2
   43f10:	mul	x2, x0, x24
   43f14:	mov	x0, x27
   43f18:	str	x2, [sp, #160]
   43f1c:	bl	cbf0 <__gmpz_sizeinbase@plt>
   43f20:	ldr	x2, [sp, #160]
   43f24:	add	x2, x2, #0x1
   43f28:	cmp	x0, x2
   43f2c:	b.cs	43fd0 <mpfr_zeta_ui@@Base+0x5a0>  // b.hs, b.nlast
   43f30:	mov	x0, x26
   43f34:	mov	x1, #0x0                   	// #0
   43f38:	bl	bd30 <__gmpz_set_ui@plt>
   43f3c:	mov	x2, x26
   43f40:	mov	x1, x23
   43f44:	mov	x0, x23
   43f48:	tbz	w20, #0, 44064 <mpfr_zeta_ui@@Base+0x634>
   43f4c:	bl	ca50 <__gmpz_add@plt>
   43f50:	lsl	x3, x20, #1
   43f54:	mov	x0, #0xf334                	// #62260
   43f58:	movk	x0, #0xb504, lsl #16
   43f5c:	sub	x3, x3, #0x1
   43f60:	cmp	x20, x0
   43f64:	b.hi	4406c <mpfr_zeta_ui@@Base+0x63c>  // b.pmore
   43f68:	mul	x2, x20, x3
   43f6c:	mov	x1, x19
   43f70:	mov	x0, x19
   43f74:	bl	c190 <__gmpz_mul_ui@plt>
   43f78:	mov	x1, x19
   43f7c:	mov	x0, x19
   43f80:	mov	x2, #0x1                   	// #1
   43f84:	bl	c1c0 <__gmpz_fdiv_q_2exp@plt>
   43f88:	ldr	x0, [sp, #104]
   43f8c:	ldr	x1, [sp, #136]
   43f90:	add	x2, x0, #0x2
   43f94:	add	x3, x0, x20
   43f98:	sub	x2, x2, x20
   43f9c:	mov	x0, #0xffffffff            	// #4294967295
   43fa0:	cmp	x1, x0
   43fa4:	b.hi	4408c <mpfr_zeta_ui@@Base+0x65c>  // b.pmore
   43fa8:	mul	x2, x2, x3
   43fac:	mov	x1, x19
   43fb0:	mov	x0, x19
   43fb4:	bl	c600 <__gmpz_divexact_ui@plt>
   43fb8:	sub	x20, x20, #0x1
   43fbc:	mov	x2, x19
   43fc0:	mov	x1, x27
   43fc4:	mov	x0, x27
   43fc8:	bl	ca50 <__gmpz_add@plt>
   43fcc:	b	43e18 <mpfr_zeta_ui@@Base+0x3e8>
   43fd0:	mov	x2, x24
   43fd4:	mov	x1, x20
   43fd8:	mov	x0, x26
   43fdc:	bl	c570 <__gmpz_ui_pow_ui@plt>
   43fe0:	mov	x2, x26
   43fe4:	mov	x1, x27
   43fe8:	mov	x0, x26
   43fec:	bl	bbb0 <__gmpz_tdiv_q@plt>
   43ff0:	b	43f3c <mpfr_zeta_ui@@Base+0x50c>
   43ff4:	mov	x0, #0xffffffffffffffff    	// #-1
   43ff8:	mov	x2, x20
   43ffc:	udiv	x0, x0, x20
   44000:	str	x0, [sp, #160]
   44004:	ldr	x0, [sp, #160]
   44008:	cmp	x0, x2
   4400c:	b.ls	4401c <mpfr_zeta_ui@@Base+0x5ec>  // b.plast
   44010:	mul	x2, x2, x20
   44014:	subs	x3, x3, #0x1
   44018:	b.ne	44004 <mpfr_zeta_ui@@Base+0x5d4>  // b.any
   4401c:	mov	x1, x27
   44020:	str	x3, [sp, #168]
   44024:	mov	x0, x26
   44028:	bl	c0c0 <__gmpz_tdiv_q_ui@plt>
   4402c:	ldr	x3, [sp, #168]
   44030:	cbz	x3, 43f3c <mpfr_zeta_ui@@Base+0x50c>
   44034:	sub	x3, x3, #0x1
   44038:	mov	x2, x20
   4403c:	cbz	x3, 4404c <mpfr_zeta_ui@@Base+0x61c>
   44040:	ldr	x0, [sp, #160]
   44044:	cmp	x0, x2
   44048:	b.hi	44058 <mpfr_zeta_ui@@Base+0x628>  // b.pmore
   4404c:	mov	x1, x26
   44050:	str	x3, [sp, #168]
   44054:	b	44024 <mpfr_zeta_ui@@Base+0x5f4>
   44058:	mul	x2, x2, x20
   4405c:	sub	x3, x3, #0x1
   44060:	b	4403c <mpfr_zeta_ui@@Base+0x60c>
   44064:	bl	be60 <__gmpz_sub@plt>
   44068:	b	43f50 <mpfr_zeta_ui@@Base+0x520>
   4406c:	mov	x2, x20
   44070:	mov	x1, x19
   44074:	mov	x0, x19
   44078:	str	x3, [sp, #160]
   4407c:	bl	c190 <__gmpz_mul_ui@plt>
   44080:	ldr	x3, [sp, #160]
   44084:	mov	x2, x3
   44088:	b	43f6c <mpfr_zeta_ui@@Base+0x53c>
   4408c:	mov	x1, x19
   44090:	mov	x0, x19
   44094:	str	x3, [sp, #160]
   44098:	bl	c600 <__gmpz_divexact_ui@plt>
   4409c:	ldr	x3, [sp, #160]
   440a0:	mov	x2, x3
   440a4:	b	43fac <mpfr_zeta_ui@@Base+0x57c>
   440a8:	ldr	x0, [sp, #104]
   440ac:	mov	w20, #0x40                  	// #64
   440b0:	clz	x0, x0
   440b4:	sub	w20, w20, w0
   440b8:	sxtw	x20, w20
   440bc:	ldr	x1, [sp, #256]
   440c0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   440c4:	cmp	x1, x0
   440c8:	b.gt	440f4 <mpfr_zeta_ui@@Base+0x6c4>
   440cc:	ldr	x1, [sp, #128]
   440d0:	mov	x0, #0xfffffffffffffeff    	// #-257
   440d4:	movk	x0, #0x7fff, lsl #48
   440d8:	sub	x0, x0, x28
   440dc:	cmp	x0, x1
   440e0:	b.ge	44164 <mpfr_zeta_ui@@Base+0x734>  // b.tcont
   440e4:	adrp	x2, 53000 <mpfr_free_pool@@Base+0x1eec>
   440e8:	mov	w1, #0xe1                  	// #225
   440ec:	add	x2, x2, #0x952
   440f0:	b	43d3c <mpfr_zeta_ui@@Base+0x30c>
   440f4:	ldr	x1, [sp, #240]
   440f8:	cmp	w22, #0x0
   440fc:	ldr	x0, [sp, #264]
   44100:	sub	x1, x1, #0x1
   44104:	ldr	x3, [x21]
   44108:	asr	x1, x1, #6
   4410c:	sub	x2, x28, x20
   44110:	add	x1, x1, #0x1
   44114:	cinc	x3, x3, eq  // eq = none
   44118:	bl	c400 <mpfr_round_p@plt>
   4411c:	cbz	w0, 440cc <mpfr_zeta_ui@@Base+0x69c>
   44120:	mov	x0, x27
   44124:	bl	c200 <mpfr_mpz_clear@plt>
   44128:	mov	x0, x19
   4412c:	bl	c200 <mpfr_mpz_clear@plt>
   44130:	mov	x0, x26
   44134:	bl	c200 <mpfr_mpz_clear@plt>
   44138:	mov	x0, x23
   4413c:	bl	c200 <mpfr_mpz_clear@plt>
   44140:	ldr	w3, [sp, #248]
   44144:	mov	w2, w22
   44148:	mov	x1, x25
   4414c:	mov	x0, x21
   44150:	bl	c730 <mpfr_set4@plt>
   44154:	mov	w19, w0
   44158:	mov	x0, x25
   4415c:	bl	c0f0 <mpfr_clear@plt>
   44160:	b	43b6c <mpfr_zeta_ui@@Base+0x13c>
   44164:	ldr	x0, [sp, #128]
   44168:	add	x28, x28, x0
   4416c:	mov	x0, #0x2                   	// #2
   44170:	sdiv	x0, x28, x0
   44174:	b	43d98 <mpfr_zeta_ui@@Base+0x368>
   44178:	mov	w2, w22
   4417c:	mov	w1, w19
   44180:	mov	x0, x21
   44184:	bl	cbc0 <mpfr_check_range@plt>
   44188:	b	43a64 <mpfr_zeta_ui@@Base+0x34>

000000000004418c <mpfr_jn@@Base>:
   4418c:	sub	sp, sp, #0x290
   44190:	cmp	x1, #0x0
   44194:	stp	x29, x30, [sp]
   44198:	mov	x29, sp
   4419c:	stp	x19, x20, [sp, #16]
   441a0:	mov	x19, x2
   441a4:	ldr	x2, [x2, #16]
   441a8:	stp	x21, x22, [sp, #32]
   441ac:	stp	x23, x24, [sp, #48]
   441b0:	stp	x25, x26, [sp, #64]
   441b4:	stp	x27, x28, [sp, #80]
   441b8:	mov	x27, x0
   441bc:	str	x1, [sp, #112]
   441c0:	cneg	x1, x1, lt  // lt = tstop
   441c4:	str	x1, [sp, #120]
   441c8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   441cc:	str	w3, [sp, #160]
   441d0:	cmp	x2, x1
   441d4:	b.gt	442a8 <mpfr_jn@@Base+0x11c>
   441d8:	mov	x4, #0x2                   	// #2
   441dc:	movk	x4, #0x8000, lsl #48
   441e0:	cmp	x2, x4
   441e4:	b.ne	44238 <mpfr_jn@@Base+0xac>  // b.any
   441e8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   441ec:	ldr	x1, [x0, #2592]
   441f0:	add	x0, x0, #0xa20
   441f4:	blr	x1
   441f8:	str	x2, [x27, #16]
   441fc:	mrs	x1, tpidr_el0
   44200:	add	x0, x1, x0
   44204:	ldr	w1, [x0]
   44208:	orr	w1, w1, #0x4
   4420c:	str	w1, [x0]
   44210:	mov	w21, #0x0                   	// #0
   44214:	mov	w0, w21
   44218:	ldp	x29, x30, [sp]
   4421c:	ldp	x19, x20, [sp, #16]
   44220:	ldp	x21, x22, [sp, #32]
   44224:	ldp	x23, x24, [sp, #48]
   44228:	ldp	x25, x26, [sp, #64]
   4422c:	ldp	x27, x28, [sp, #80]
   44230:	add	sp, sp, #0x290
   44234:	ret
   44238:	cmp	x2, x1
   4423c:	b.ne	44254 <mpfr_jn@@Base+0xc8>  // b.any
   44240:	mov	w0, #0x1                   	// #1
   44244:	str	w0, [x27, #8]
   44248:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4424c:	str	x0, [x27, #16]
   44250:	b	44210 <mpfr_jn@@Base+0x84>
   44254:	ldr	x1, [sp, #112]
   44258:	cbnz	x1, 44270 <mpfr_jn@@Base+0xe4>
   4425c:	mov	x2, #0x0                   	// #0
   44260:	mov	x1, #0x1                   	// #1
   44264:	bl	c680 <mpfr_set_ui_2exp@plt>
   44268:	mov	w21, w0
   4426c:	b	44214 <mpfr_jn@@Base+0x88>
   44270:	ldr	x1, [sp, #120]
   44274:	tbz	w1, #0, 44240 <mpfr_jn@@Base+0xb4>
   44278:	ldr	x1, [sp, #112]
   4427c:	cmp	x1, #0x0
   44280:	b.le	44298 <mpfr_jn@@Base+0x10c>
   44284:	ldr	w3, [x19, #8]
   44288:	mov	x1, x19
   4428c:	ldr	w2, [sp, #160]
   44290:	bl	c730 <mpfr_set4@plt>
   44294:	b	44268 <mpfr_jn@@Base+0xdc>
   44298:	ldr	w2, [sp, #160]
   4429c:	mov	x1, x19
   442a0:	bl	bdf0 <mpfr_neg@plt>
   442a4:	b	44268 <mpfr_jn@@Base+0xdc>
   442a8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   442ac:	ldr	x1, [x0, #2592]
   442b0:	add	x0, x0, #0xa20
   442b4:	blr	x1
   442b8:	mrs	x1, tpidr_el0
   442bc:	str	x1, [sp, #104]
   442c0:	add	x1, x1, x0
   442c4:	ldr	x3, [sp, #104]
   442c8:	ldr	x4, [sp, #104]
   442cc:	ldr	w0, [x3, x0]
   442d0:	str	w0, [sp, #164]
   442d4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   442d8:	ldr	x3, [x0, #2528]
   442dc:	add	x0, x0, #0x9e0
   442e0:	blr	x3
   442e4:	ldr	x3, [sp, #104]
   442e8:	add	x3, x3, x0
   442ec:	ldr	x0, [x4, x0]
   442f0:	str	x0, [sp, #168]
   442f4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   442f8:	ldr	x4, [x0, #2560]
   442fc:	add	x0, x0, #0xa00
   44300:	blr	x4
   44304:	ldr	x4, [sp, #104]
   44308:	ldr	x4, [x4, x0]
   4430c:	str	x4, [sp, #184]
   44310:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   44314:	str	x4, [x3]
   44318:	ldr	x4, [sp, #104]
   4431c:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   44320:	str	x3, [x4, x0]
   44324:	ldr	x3, [sp, #112]
   44328:	ldr	x0, [x27]
   4432c:	cbnz	x3, 443f4 <mpfr_jn@@Base+0x268>
   44330:	mov	x1, #0xfffffffffffffffe    	// #-2
   44334:	mul	x2, x2, x1
   44338:	cmp	x2, #0x0
   4433c:	b.le	444e4 <mpfr_jn@@Base+0x358>
   44340:	add	x2, x2, #0x2
   44344:	add	x0, x0, #0x1
   44348:	cmp	x0, x2
   4434c:	b.cs	444e4 <mpfr_jn@@Base+0x358>  // b.hs, b.nlast
   44350:	adrp	x1, 73000 <__gmpfr_l2b@@Base+0x200>
   44354:	ldr	w4, [sp, #160]
   44358:	mov	x0, x27
   4435c:	ldr	x1, [x1, #3928]
   44360:	bl	c5d0 <mpfr_round_near_x@plt>
   44364:	mov	w21, w0
   44368:	cbz	w0, 444e4 <mpfr_jn@@Base+0x358>
   4436c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   44370:	ldr	x1, [x0, #2592]
   44374:	add	x0, x0, #0xa20
   44378:	blr	x1
   4437c:	ldr	w3, [sp, #164]
   44380:	ldr	x2, [sp, #104]
   44384:	ldr	x1, [sp, #104]
   44388:	str	w3, [x2, x0]
   4438c:	add	x1, x1, x0
   44390:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   44394:	ldr	x2, [x0, #2528]
   44398:	add	x0, x0, #0x9e0
   4439c:	blr	x2
   443a0:	ldr	x2, [sp, #104]
   443a4:	ldr	x3, [sp, #168]
   443a8:	str	x3, [x2, x0]
   443ac:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   443b0:	ldr	x2, [x0, #2560]
   443b4:	add	x0, x0, #0xa00
   443b8:	blr	x2
   443bc:	ldr	x2, [sp, #104]
   443c0:	ldr	x3, [sp, #184]
   443c4:	str	x3, [x2, x0]
   443c8:	ldr	x0, [x27, #16]
   443cc:	ldr	x2, [sp, #168]
   443d0:	cmp	x2, x0
   443d4:	b.gt	443e0 <mpfr_jn@@Base+0x254>
   443d8:	cmp	x3, x0
   443dc:	b.ge	45430 <mpfr_jn@@Base+0x12a4>  // b.tcont
   443e0:	ldr	w2, [sp, #160]
   443e4:	mov	w1, w21
   443e8:	mov	x0, x27
   443ec:	bl	cbc0 <mpfr_check_range@plt>
   443f0:	b	44268 <mpfr_jn@@Base+0xdc>
   443f4:	ldr	x3, [sp, #112]
   443f8:	cmp	x3, #0x1
   443fc:	b.ne	444e4 <mpfr_jn@@Base+0x358>  // b.any
   44400:	str	wzr, [x1]
   44404:	mov	x1, #0xfffffffffffffffe    	// #-2
   44408:	mul	x2, x2, x1
   4440c:	cmp	x2, #0x0
   44410:	b.le	444e4 <mpfr_jn@@Base+0x358>
   44414:	add	x2, x2, #0x3
   44418:	add	x0, x0, #0x1
   4441c:	cmp	x0, x2
   44420:	b.cs	444e4 <mpfr_jn@@Base+0x358>  // b.hs, b.nlast
   44424:	ldr	w4, [sp, #160]
   44428:	mov	x1, x19
   4442c:	mov	x0, x27
   44430:	mov	w3, #0x0                   	// #0
   44434:	bl	c5d0 <mpfr_round_near_x@plt>
   44438:	mov	w20, w0
   4443c:	cbz	w0, 444e4 <mpfr_jn@@Base+0x358>
   44440:	ldr	w3, [sp, #160]
   44444:	mov	x1, x27
   44448:	ldr	x2, [sp, #112]
   4444c:	mov	x0, x27
   44450:	bl	c980 <mpfr_div_2ui@plt>
   44454:	mov	w21, w0
   44458:	ldr	w0, [sp, #160]
   4445c:	cbnz	w0, 444d8 <mpfr_jn@@Base+0x34c>
   44460:	ldr	x1, [x27, #16]
   44464:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   44468:	cmp	x1, x0
   4446c:	b.ne	444d8 <mpfr_jn@@Base+0x34c>  // b.any
   44470:	cbnz	w21, 4448c <mpfr_jn@@Base+0x300>
   44474:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   44478:	add	x2, x2, #0x550
   4447c:	mov	w1, #0xa6                  	// #166
   44480:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   44484:	add	x0, x0, #0x55b
   44488:	b	44ddc <mpfr_jn@@Base+0xc50>
   4448c:	ldr	w0, [sp, #112]
   44490:	cmp	w20, #0x0
   44494:	cneg	w1, w0, lt  // lt = tstop
   44498:	ldr	w0, [x19, #8]
   4449c:	cmp	w0, w1
   444a0:	b.eq	444b0 <mpfr_jn@@Base+0x324>  // b.none
   444a4:	neg	w21, w21
   444a8:	mov	x0, x27
   444ac:	bl	c700 <mpfr_nexttoinf@plt>
   444b0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   444b4:	ldr	x1, [x0, #2592]
   444b8:	add	x0, x0, #0xa20
   444bc:	blr	x1
   444c0:	ldr	x1, [sp, #104]
   444c4:	ldr	w0, [x1, x0]
   444c8:	ldr	w1, [sp, #164]
   444cc:	orr	w0, w1, w0
   444d0:	str	w0, [sp, #164]
   444d4:	b	4436c <mpfr_jn@@Base+0x1e0>
   444d8:	cmp	w21, #0x0
   444dc:	csel	w21, w21, w20, ne  // ne = any
   444e0:	b	444b0 <mpfr_jn@@Base+0x324>
   444e4:	ldr	x1, [x27]
   444e8:	mov	x0, #0x2                   	// #2
   444ec:	mov	x2, #0x0                   	// #0
   444f0:	add	x23, sp, #0x160
   444f4:	sdiv	x1, x1, x0
   444f8:	ldr	x0, [x19]
   444fc:	str	x0, [sp, #224]
   44500:	mov	w0, #0x1                   	// #1
   44504:	str	w0, [sp, #232]
   44508:	ldr	x0, [x19, #16]
   4450c:	str	x0, [sp, #240]
   44510:	ldr	x0, [x19, #24]
   44514:	add	x1, x1, #0x3
   44518:	str	x0, [sp, #248]
   4451c:	add	x0, sp, #0xe0
   44520:	bl	bfd0 <mpfr_cmp_ui_2exp@plt>
   44524:	cmp	w0, #0x0
   44528:	add	x0, sp, #0x200
   4452c:	str	x0, [sp, #128]
   44530:	b.le	44b80 <mpfr_jn@@Base+0x9f4>
   44534:	add	x20, sp, #0x120
   44538:	mov	x0, x20
   4453c:	bl	bc50 <mpfr_init@plt>
   44540:	ldr	x26, [x27]
   44544:	cmp	x26, #0x1
   44548:	b.eq	44854 <mpfr_jn@@Base+0x6c8>  // b.none
   4454c:	b.gt	44568 <mpfr_jn@@Base+0x3dc>
   44550:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   44554:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   44558:	add	x2, x2, #0x560
   4455c:	add	x0, x0, #0x57a
   44560:	mov	w1, #0x36                  	// #54
   44564:	bl	cbd0 <mpfr_assert_fail@plt>
   44568:	ldr	x0, [x27]
   4456c:	sub	x0, x0, #0x1
   44570:	clz	x1, x0
   44574:	mov	w0, #0x40                  	// #64
   44578:	sub	w0, w0, w1
   4457c:	sxtw	x0, w0
   44580:	add	x26, x26, x0
   44584:	add	x28, sp, #0x1c0
   44588:	ldr	x0, [sp, #112]
   4458c:	add	x26, x26, #0x4
   44590:	add	x24, sp, #0x1e0
   44594:	lsl	x0, x0, #1
   44598:	add	x0, x0, #0x1
   4459c:	str	x0, [sp, #208]
   445a0:	ldr	x0, [sp, #112]
   445a4:	lsl	x0, x0, #2
   445a8:	str	x0, [sp, #216]
   445ac:	mov	x0, #0x40                  	// #64
   445b0:	str	x0, [sp, #192]
   445b4:	add	x0, sp, #0x1a0
   445b8:	str	x0, [sp, #152]
   445bc:	mov	x1, x26
   445c0:	mov	x0, x20
   445c4:	add	x22, sp, #0x100
   445c8:	bl	bf50 <mpfr_set_prec@plt>
   445cc:	mov	x1, x26
   445d0:	mov	x0, x22
   445d4:	bl	cb10 <mpfr_init2@plt>
   445d8:	add	x21, sp, #0x180
   445dc:	add	x0, sp, #0x140
   445e0:	mov	x1, x26
   445e4:	str	x0, [sp, #136]
   445e8:	bl	cb10 <mpfr_init2@plt>
   445ec:	mov	x1, x26
   445f0:	mov	x0, x23
   445f4:	bl	cb10 <mpfr_init2@plt>
   445f8:	mov	x1, x26
   445fc:	mov	x0, x21
   44600:	bl	cb10 <mpfr_init2@plt>
   44604:	ldr	x0, [sp, #152]
   44608:	mov	x1, x26
   4460c:	bl	cb10 <mpfr_init2@plt>
   44610:	mov	x0, x28
   44614:	mov	x1, #0x1f                  	// #31
   44618:	bl	cb10 <mpfr_init2@plt>
   4461c:	mov	x0, x24
   44620:	mov	x1, #0x1f                  	// #31
   44624:	bl	cb10 <mpfr_init2@plt>
   44628:	ldr	x0, [sp, #128]
   4462c:	mov	x1, #0x1f                  	// #31
   44630:	bl	cb10 <mpfr_init2@plt>
   44634:	mov	x2, x19
   44638:	mov	x1, x20
   4463c:	mov	x0, x22
   44640:	mov	w3, #0x0                   	// #0
   44644:	bl	cce0 <mpfr_sin_cos@plt>
   44648:	ldr	w0, [x19, #8]
   4464c:	tbz	w0, #31, 44660 <mpfr_jn@@Base+0x4d4>
   44650:	mov	x1, x22
   44654:	mov	x0, x22
   44658:	mov	w2, #0x0                   	// #0
   4465c:	bl	bdf0 <mpfr_neg@plt>
   44660:	mov	x2, x20
   44664:	mov	x1, x22
   44668:	mov	w3, #0x0                   	// #0
   4466c:	mov	x0, x21
   44670:	bl	c230 <mpfr_add@plt>
   44674:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
   44678:	mov	x2, x20
   4467c:	mov	w3, #0x0                   	// #0
   44680:	mov	x1, x22
   44684:	mov	x0, x20
   44688:	bl	bbf0 <mpfr_sub@plt>
   4468c:	mov	x1, x21
   44690:	mov	x0, x22
   44694:	bl	c530 <mpfr_swap@plt>
   44698:	ldr	w0, [x19, #8]
   4469c:	mov	x2, x19
   446a0:	mov	w3, #0x0                   	// #0
   446a4:	mov	x1, #0xffffffffffffffff    	// #-1
   446a8:	cmp	w0, #0x0
   446ac:	ldr	x0, [sp, #152]
   446b0:	cneg	x1, x1, gt
   446b4:	bl	c940 <mpfr_si_div@plt>
   446b8:	ldr	x1, [sp, #152]
   446bc:	mov	w3, #0x0                   	// #0
   446c0:	mov	x2, #0x3                   	// #3
   446c4:	mov	x0, x1
   446c8:	bl	c980 <mpfr_div_2ui@plt>
   446cc:	ldr	x0, [sp, #136]
   446d0:	mov	w3, #0x0                   	// #0
   446d4:	mov	x2, #0x0                   	// #0
   446d8:	mov	x1, #0x1                   	// #1
   446dc:	bl	c680 <mpfr_set_ui_2exp@plt>
   446e0:	str	x25, [sp, #368]
   446e4:	mov	w0, #0x1                   	// #1
   446e8:	mov	w3, #0x0                   	// #0
   446ec:	mov	x2, #0x0                   	// #0
   446f0:	mov	x1, #0x1                   	// #1
   446f4:	str	w0, [sp, #360]
   446f8:	mov	x0, x21
   446fc:	bl	c680 <mpfr_set_ui_2exp@plt>
   44700:	str	wzr, [sp, #200]
   44704:	mov	w0, #0x1                   	// #1
   44708:	str	w0, [sp, #456]
   4470c:	str	w0, [sp, #488]
   44710:	ldr	x0, [sp, #208]
   44714:	str	x0, [sp, #176]
   44718:	mov	x0, #0x1                   	// #1
   4471c:	str	x0, [sp, #144]
   44720:	str	x25, [sp, #464]
   44724:	str	x25, [sp, #496]
   44728:	mov	w25, #0x0                   	// #0
   4472c:	ldr	x2, [sp, #176]
   44730:	mov	x1, x21
   44734:	mov	w3, #0x0                   	// #0
   44738:	mov	x0, x21
   4473c:	bl	c9f0 <mpfr_mul_si@plt>
   44740:	ldr	x1, [sp, #176]
   44744:	mov	w3, #0x0                   	// #0
   44748:	ldr	x0, [sp, #216]
   4474c:	sub	x2, x0, x1
   44750:	mov	x1, x21
   44754:	mov	x0, x21
   44758:	bl	c9f0 <mpfr_mul_si@plt>
   4475c:	ldr	x2, [sp, #144]
   44760:	mov	x1, x21
   44764:	mov	w3, #0x0                   	// #0
   44768:	mov	x0, x21
   4476c:	bl	cd00 <mpfr_div_ui@plt>
   44770:	ldr	x2, [sp, #152]
   44774:	mov	x1, x21
   44778:	mov	w3, #0x0                   	// #0
   4477c:	mov	x0, x21
   44780:	bl	bdd0 <mpfr_mul@plt>
   44784:	ldr	w0, [sp, #392]
   44788:	mov	x2, #0x6                   	// #6
   4478c:	mov	x1, x21
   44790:	cmp	w0, #0x0
   44794:	ldr	x0, [sp, #144]
   44798:	cset	w3, le
   4479c:	add	w3, w3, #0x2
   447a0:	mul	x2, x0, x2
   447a4:	mov	x0, x28
   447a8:	bl	bad0 <mpfr_mul_ui@plt>
   447ac:	mov	x1, x28
   447b0:	mov	w3, #0x1                   	// #1
   447b4:	mov	w2, #0x0                   	// #0
   447b8:	mov	x0, x28
   447bc:	bl	c730 <mpfr_set4@plt>
   447c0:	ldr	x0, [sp, #128]
   447c4:	mov	x1, x21
   447c8:	mov	w3, #0x1                   	// #1
   447cc:	mov	w2, #0x2                   	// #2
   447d0:	bl	c730 <mpfr_set4@plt>
   447d4:	ldr	x1, [sp, #128]
   447d8:	mov	x2, x26
   447dc:	mov	w3, #0x2                   	// #2
   447e0:	mov	x0, x1
   447e4:	bl	c350 <mpfr_mul_2ui@plt>
   447e8:	ldr	x1, [sp, #128]
   447ec:	mov	x2, x28
   447f0:	mov	w3, #0x2                   	// #2
   447f4:	mov	x0, x1
   447f8:	bl	c230 <mpfr_add@plt>
   447fc:	cmp	w25, #0x1
   44800:	b.le	44864 <mpfr_jn@@Base+0x6d8>
   44804:	mov	x2, x26
   44808:	mov	x1, x24
   4480c:	mov	w3, #0x2                   	// #2
   44810:	mov	x0, x24
   44814:	bl	c980 <mpfr_div_2ui@plt>
   44818:	ldr	w0, [sp, #392]
   4481c:	mov	x2, x21
   44820:	mov	x1, x24
   44824:	mov	w3, #0x2                   	// #2
   44828:	cmp	w0, #0x0
   4482c:	mov	x0, x24
   44830:	b.le	4485c <mpfr_jn@@Base+0x6d0>
   44834:	bl	c230 <mpfr_add@plt>
   44838:	mov	x2, x26
   4483c:	mov	x1, x24
   44840:	mov	x0, x24
   44844:	mov	w3, #0x2                   	// #2
   44848:	bl	c350 <mpfr_mul_2ui@plt>
   4484c:	add	w25, w25, #0x1
   44850:	b	448a0 <mpfr_jn@@Base+0x714>
   44854:	mov	x0, #0x0                   	// #0
   44858:	b	44580 <mpfr_jn@@Base+0x3f4>
   4485c:	bl	bbf0 <mpfr_sub@plt>
   44860:	b	44838 <mpfr_jn@@Base+0x6ac>
   44864:	ldr	x1, [sp, #144]
   44868:	mov	x2, x21
   4486c:	ldr	x0, [sp, #144]
   44870:	mov	w3, #0x0                   	// #0
   44874:	and	x0, x0, #0x2
   44878:	tbz	w1, #0, 44910 <mpfr_jn@@Base+0x784>
   4487c:	mov	x1, x23
   44880:	cbnz	x0, 44904 <mpfr_jn@@Base+0x778>
   44884:	mov	x0, x23
   44888:	bl	c230 <mpfr_add@plt>
   4488c:	ldr	x0, [sp, #368]
   44890:	ldr	x1, [sp, #528]
   44894:	cmp	x1, x0
   44898:	b.le	4484c <mpfr_jn@@Base+0x6c0>
   4489c:	mov	w25, #0x0                   	// #0
   448a0:	mov	x2, x28
   448a4:	mov	x1, x24
   448a8:	mov	x0, x24
   448ac:	mov	w3, #0x2                   	// #2
   448b0:	bl	c230 <mpfr_add@plt>
   448b4:	ldr	x0, [sp, #144]
   448b8:	cmp	w25, #0x1
   448bc:	add	x0, x0, #0x1
   448c0:	str	x0, [sp, #144]
   448c4:	b.gt	4495c <mpfr_jn@@Base+0x7d0>
   448c8:	ldr	w0, [x19, #8]
   448cc:	cmp	w0, #0x0
   448d0:	b.gt	44938 <mpfr_jn@@Base+0x7ac>
   448d4:	ldr	w0, [x19, #8]
   448d8:	tbz	w0, #31, 4495c <mpfr_jn@@Base+0x7d0>
   448dc:	ldr	x0, [sp, #144]
   448e0:	mov	x1, #0x2                   	// #2
   448e4:	mov	x2, #0x0                   	// #0
   448e8:	sdiv	x1, x0, x1
   448ec:	mov	x0, x19
   448f0:	neg	x1, x1
   448f4:	bl	c460 <mpfr_cmp_si_2exp@plt>
   448f8:	cmp	w0, #0x0
   448fc:	b.gt	44950 <mpfr_jn@@Base+0x7c4>
   44900:	b	4495c <mpfr_jn@@Base+0x7d0>
   44904:	mov	x0, x23
   44908:	bl	bbf0 <mpfr_sub@plt>
   4490c:	b	4488c <mpfr_jn@@Base+0x700>
   44910:	ldr	x1, [sp, #136]
   44914:	cbnz	x0, 4492c <mpfr_jn@@Base+0x7a0>
   44918:	mov	x0, x1
   4491c:	bl	c230 <mpfr_add@plt>
   44920:	ldr	x0, [sp, #336]
   44924:	ldr	x1, [sp, #528]
   44928:	b	44894 <mpfr_jn@@Base+0x708>
   4492c:	mov	x0, x1
   44930:	bl	bbf0 <mpfr_sub@plt>
   44934:	b	44920 <mpfr_jn@@Base+0x794>
   44938:	ldr	x0, [sp, #144]
   4493c:	mov	x2, #0x0                   	// #0
   44940:	asr	x1, x0, #1
   44944:	mov	x0, x19
   44948:	bl	bfd0 <mpfr_cmp_ui_2exp@plt>
   4494c:	tbz	w0, #31, 448d4 <mpfr_jn@@Base+0x748>
   44950:	mov	w0, #0x1                   	// #1
   44954:	mov	w25, #0x2                   	// #2
   44958:	str	w0, [sp, #200]
   4495c:	ldr	x0, [sp, #176]
   44960:	cmp	w25, #0x4
   44964:	add	x0, x0, #0x2
   44968:	str	x0, [sp, #176]
   4496c:	b.ne	4472c <mpfr_jn@@Base+0x5a0>  // b.any
   44970:	ldr	x0, [sp, #112]
   44974:	mov	w3, #0x0                   	// #0
   44978:	and	x0, x0, #0x1
   4497c:	str	x0, [sp, #144]
   44980:	ldr	x0, [sp, #112]
   44984:	tbnz	w0, #0, 44cec <mpfr_jn@@Base+0xb60>
   44988:	mov	x2, x23
   4498c:	mov	x1, x20
   44990:	mov	x0, x20
   44994:	bl	bdd0 <mpfr_mul@plt>
   44998:	ldr	x2, [sp, #136]
   4499c:	mov	x1, x22
   449a0:	mov	w3, #0x0                   	// #0
   449a4:	mov	x0, x22
   449a8:	bl	bdd0 <mpfr_mul@plt>
   449ac:	ldr	x25, [sp, #272]
   449b0:	mov	x2, x20
   449b4:	ldr	x0, [sp, #304]
   449b8:	mov	x1, x22
   449bc:	mov	w3, #0x0                   	// #0
   449c0:	cmp	x25, x0
   449c4:	csel	x25, x25, x0, ge  // ge = tcont
   449c8:	mov	x0, x22
   449cc:	bl	bbf0 <mpfr_sub@plt>
   449d0:	ldr	x0, [sp, #112]
   449d4:	tbz	w0, #1, 449e8 <mpfr_jn@@Base+0x85c>
   449d8:	mov	x1, x22
   449dc:	mov	x0, x22
   449e0:	mov	w2, #0x0                   	// #0
   449e4:	bl	bdf0 <mpfr_neg@plt>
   449e8:	ldr	x0, [sp, #272]
   449ec:	ldr	x3, [sp, #336]
   449f0:	cmp	x0, x25
   449f4:	ldr	x2, [sp, #368]
   449f8:	csel	x0, x0, x25, ge  // ge = tcont
   449fc:	add	x4, x3, #0x2
   44a00:	add	x25, x0, #0x2
   44a04:	cmp	x3, x2
   44a08:	add	x1, x2, #0x2
   44a0c:	ldr	x2, [sp, #496]
   44a10:	csel	x1, x1, x4, lt  // lt = tstop
   44a14:	add	x3, x2, #0x2
   44a18:	cmp	x0, x2
   44a1c:	csel	x25, x25, x3, gt
   44a20:	add	x0, x1, #0x1
   44a24:	cmp	x1, x25
   44a28:	mov	w2, #0x0                   	// #0
   44a2c:	csinc	x25, x0, x25, gt
   44a30:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   44a34:	ldr	x1, [x0, #2640]
   44a38:	add	x0, x0, #0xa50
   44a3c:	blr	x1
   44a40:	ldr	x1, [sp, #104]
   44a44:	add	x1, x1, x0
   44a48:	mov	x0, x20
   44a4c:	bl	c410 <mpfr_cache@plt>
   44a50:	mov	x2, x19
   44a54:	mov	x1, x20
   44a58:	mov	w3, #0x0                   	// #0
   44a5c:	mov	x0, x20
   44a60:	bl	bdd0 <mpfr_mul@plt>
   44a64:	ldr	w0, [x19, #8]
   44a68:	mov	w3, #0x0                   	// #0
   44a6c:	mov	x2, x20
   44a70:	mov	x1, #0xffffffffffffffff    	// #-1
   44a74:	cmp	w0, #0x0
   44a78:	mov	x0, x20
   44a7c:	cneg	x1, x1, gt
   44a80:	bl	c940 <mpfr_si_div@plt>
   44a84:	mov	x1, x20
   44a88:	mov	w2, #0x0                   	// #0
   44a8c:	mov	x0, x20
   44a90:	bl	c9c0 <mpfr_sqrt@plt>
   44a94:	ldr	w0, [sp, #264]
   44a98:	mov	x2, x22
   44a9c:	ldr	w1, [sp, #296]
   44aa0:	cmp	w1, w0
   44aa4:	mov	x1, x20
   44aa8:	cset	w3, ne  // ne = any
   44aac:	mov	x0, x28
   44ab0:	add	w3, w3, #0x2
   44ab4:	bl	bdd0 <mpfr_mul@plt>
   44ab8:	mov	x1, x28
   44abc:	mov	w3, #0x1                   	// #1
   44ac0:	mov	w2, #0x2                   	// #2
   44ac4:	mov	x0, x28
   44ac8:	bl	c730 <mpfr_set4@plt>
   44acc:	mov	x1, x28
   44ad0:	mov	w3, #0x2                   	// #2
   44ad4:	mov	x2, #0x3                   	// #3
   44ad8:	mov	x0, x28
   44adc:	bl	bad0 <mpfr_mul_ui@plt>
   44ae0:	ldr	x0, [sp, #304]
   44ae4:	mov	w3, #0x0                   	// #0
   44ae8:	mov	x2, x22
   44aec:	mov	x1, x20
   44af0:	add	x25, x25, x0
   44af4:	mov	x0, x20
   44af8:	bl	bdd0 <mpfr_mul@plt>
   44afc:	ldr	x0, [sp, #304]
   44b00:	ldr	x2, [sp, #464]
   44b04:	add	x1, x0, #0x1
   44b08:	cmp	x2, x0
   44b0c:	add	x0, x25, #0x1
   44b10:	csinc	x2, x1, x2, le
   44b14:	cmp	x25, x2
   44b18:	csinc	x25, x0, x2, gt
   44b1c:	mov	x0, x22
   44b20:	bl	c0f0 <mpfr_clear@plt>
   44b24:	ldr	x0, [sp, #136]
   44b28:	bl	c0f0 <mpfr_clear@plt>
   44b2c:	mov	x0, x23
   44b30:	bl	c0f0 <mpfr_clear@plt>
   44b34:	mov	x0, x21
   44b38:	bl	c0f0 <mpfr_clear@plt>
   44b3c:	ldr	x0, [sp, #152]
   44b40:	bl	c0f0 <mpfr_clear@plt>
   44b44:	mov	x0, x28
   44b48:	bl	c0f0 <mpfr_clear@plt>
   44b4c:	mov	x0, x24
   44b50:	bl	c0f0 <mpfr_clear@plt>
   44b54:	ldr	x0, [sp, #128]
   44b58:	bl	c0f0 <mpfr_clear@plt>
   44b5c:	ldr	x0, [sp, #304]
   44b60:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   44b64:	sub	x2, x25, x0
   44b68:	cmp	x0, x1
   44b6c:	b.gt	44d38 <mpfr_jn@@Base+0xbac>
   44b70:	ldr	w0, [sp, #200]
   44b74:	cbz	w0, 44db0 <mpfr_jn@@Base+0xc24>
   44b78:	mov	x0, x20
   44b7c:	bl	c0f0 <mpfr_clear@plt>
   44b80:	ldr	x0, [sp, #128]
   44b84:	mov	x1, #0x20                  	// #32
   44b88:	ldr	x2, [sp, #128]
   44b8c:	add	x0, x0, #0x10
   44b90:	str	x1, [sp, #352]
   44b94:	add	x2, x2, #0x18
   44b98:	stp	x0, x1, [sp, #376]
   44b9c:	stp	x2, x1, [sp, #408]
   44ba0:	str	x0, [sp, #520]
   44ba4:	mov	w0, #0x1                   	// #1
   44ba8:	ldr	x1, [sp, #128]
   44bac:	str	w0, [sp, #360]
   44bb0:	str	w0, [sp, #392]
   44bb4:	str	w0, [sp, #424]
   44bb8:	add	x28, x1, #0x20
   44bbc:	ldr	x0, [sp, #120]
   44bc0:	str	x28, [sp, #440]
   44bc4:	str	xzr, [sp, #512]
   44bc8:	cbz	x0, 44e3c <mpfr_jn@@Base+0xcb0>
   44bcc:	mov	x0, x23
   44bd0:	adrp	x1, 5b000 <mpfr_bases@@Base+0x12a8>
   44bd4:	add	x1, x1, #0x587
   44bd8:	bl	c3d0 <mpfr_set_str_binary@plt>
   44bdc:	ldr	w0, [x19, #8]
   44be0:	cmp	w0, #0x0
   44be4:	b.le	44e14 <mpfr_jn@@Base+0xc88>
   44be8:	mov	x2, x19
   44bec:	mov	x1, x23
   44bf0:	mov	x0, x23
   44bf4:	mov	w3, #0x2                   	// #2
   44bf8:	bl	bdd0 <mpfr_mul@plt>
   44bfc:	ldr	x2, [sp, #120]
   44c00:	mov	x1, x23
   44c04:	mov	x0, x23
   44c08:	mov	w3, #0x2                   	// #2
   44c0c:	bl	cd00 <mpfr_div_ui@plt>
   44c10:	ldr	x0, [sp, #368]
   44c14:	tbz	x0, #63, 44c2c <mpfr_jn@@Base+0xaa0>
   44c18:	ldr	x1, [sp, #168]
   44c1c:	ldr	x2, [sp, #120]
   44c20:	neg	x1, x1
   44c24:	cmp	x1, x2
   44c28:	b.cc	44c4c <mpfr_jn@@Base+0xac0>  // b.lo, b.ul, b.last
   44c2c:	ldr	x2, [sp, #120]
   44c30:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   44c34:	cmp	x2, x1
   44c38:	b.hi	44e3c <mpfr_jn@@Base+0xcb0>  // b.pmore
   44c3c:	ldr	x1, [sp, #168]
   44c40:	sdiv	x1, x1, x2
   44c44:	cmp	x0, x1
   44c48:	b.ge	44e3c <mpfr_jn@@Base+0xcb0>  // b.tcont
   44c4c:	ldr	x1, [sp, #512]
   44c50:	cbz	x1, 44c5c <mpfr_jn@@Base+0xad0>
   44c54:	ldr	x0, [sp, #520]
   44c58:	bl	ccc0 <mpfr_free_func@plt>
   44c5c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   44c60:	ldr	x1, [x0, #2592]
   44c64:	add	x0, x0, #0xa20
   44c68:	blr	x1
   44c6c:	ldr	w2, [sp, #164]
   44c70:	ldr	x1, [sp, #104]
   44c74:	str	w2, [x1, x0]
   44c78:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   44c7c:	ldr	x1, [x0, #2528]
   44c80:	add	x0, x0, #0x9e0
   44c84:	blr	x1
   44c88:	ldr	x1, [sp, #104]
   44c8c:	ldr	x2, [sp, #168]
   44c90:	str	x2, [x1, x0]
   44c94:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   44c98:	ldr	x1, [x0, #2560]
   44c9c:	add	x0, x0, #0xa00
   44ca0:	blr	x1
   44ca4:	ldr	x1, [sp, #104]
   44ca8:	ldr	x2, [sp, #184]
   44cac:	str	x2, [x1, x0]
   44cb0:	mov	w2, #0x1                   	// #1
   44cb4:	ldr	w0, [sp, #160]
   44cb8:	cmp	w0, #0x0
   44cbc:	csel	w0, w0, w2, ne  // ne = any
   44cc0:	str	w0, [sp, #160]
   44cc4:	ldr	x0, [sp, #112]
   44cc8:	tbz	w0, #0, 44cdc <mpfr_jn@@Base+0xb50>
   44ccc:	ldr	w2, [x19, #8]
   44cd0:	cmp	x0, #0x0
   44cd4:	b.gt	44cdc <mpfr_jn@@Base+0xb50>
   44cd8:	neg	w2, w2
   44cdc:	ldr	w1, [sp, #160]
   44ce0:	mov	x0, x27
   44ce4:	bl	c450 <mpfr_underflow@plt>
   44ce8:	b	44268 <mpfr_jn@@Base+0xdc>
   44cec:	ldr	x2, [sp, #136]
   44cf0:	mov	x1, x20
   44cf4:	mov	x0, x20
   44cf8:	bl	bdd0 <mpfr_mul@plt>
   44cfc:	mov	x2, x23
   44d00:	mov	x1, x22
   44d04:	mov	x0, x22
   44d08:	mov	w3, #0x0                   	// #0
   44d0c:	bl	bdd0 <mpfr_mul@plt>
   44d10:	ldr	x25, [sp, #272]
   44d14:	mov	x2, x20
   44d18:	ldr	x0, [sp, #304]
   44d1c:	mov	x1, x22
   44d20:	mov	w3, #0x0                   	// #0
   44d24:	cmp	x25, x0
   44d28:	csel	x25, x25, x0, ge  // ge = tcont
   44d2c:	mov	x0, x22
   44d30:	bl	c230 <mpfr_add@plt>
   44d34:	b	449d0 <mpfr_jn@@Base+0x844>
   44d38:	ldr	w0, [sp, #160]
   44d3c:	sub	x2, x26, x2
   44d40:	ldr	x1, [sp, #288]
   44d44:	cmp	w0, #0x0
   44d48:	ldr	x0, [sp, #312]
   44d4c:	sub	x1, x1, #0x1
   44d50:	ldr	x3, [x27]
   44d54:	asr	x1, x1, #6
   44d58:	add	x1, x1, #0x1
   44d5c:	cinc	x3, x3, eq  // eq = none
   44d60:	bl	c400 <mpfr_round_p@plt>
   44d64:	cbz	w0, 44b70 <mpfr_jn@@Base+0x9e4>
   44d68:	ldr	w0, [x19, #8]
   44d6c:	cmp	w0, #0x0
   44d70:	b.gt	44d7c <mpfr_jn@@Base+0xbf0>
   44d74:	ldr	x0, [sp, #144]
   44d78:	cbnz	x0, 44df8 <mpfr_jn@@Base+0xc6c>
   44d7c:	ldr	w2, [sp, #160]
   44d80:	mov	x1, x20
   44d84:	ldr	w3, [sp, #296]
   44d88:	mov	x0, x27
   44d8c:	bl	c730 <mpfr_set4@plt>
   44d90:	mov	w21, w0
   44d94:	mov	x0, x20
   44d98:	bl	c0f0 <mpfr_clear@plt>
   44d9c:	ldr	w0, [sp, #160]
   44da0:	cmp	w0, #0x5
   44da4:	b.ne	44e0c <mpfr_jn@@Base+0xc80>  // b.any
   44da8:	mov	w21, #0x1                   	// #1
   44dac:	b	4436c <mpfr_jn@@Base+0x1e0>
   44db0:	ldr	x1, [sp, #192]
   44db4:	mov	x0, #0xfffffffffffffeff    	// #-257
   44db8:	movk	x0, #0x7fff, lsl #48
   44dbc:	sub	x0, x0, x26
   44dc0:	cmp	x0, x1
   44dc4:	b.ge	44de0 <mpfr_jn@@Base+0xc54>  // b.tcont
   44dc8:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   44dcc:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   44dd0:	add	x2, x2, #0xb94
   44dd4:	add	x0, x0, #0x57a
   44dd8:	mov	w1, #0x106                 	// #262
   44ddc:	bl	cbd0 <mpfr_assert_fail@plt>
   44de0:	ldr	x0, [sp, #192]
   44de4:	add	x26, x26, x0
   44de8:	mov	x0, #0x2                   	// #2
   44dec:	sdiv	x0, x26, x0
   44df0:	str	x0, [sp, #192]
   44df4:	b	445bc <mpfr_jn@@Base+0x430>
   44df8:	ldr	w2, [sp, #160]
   44dfc:	mov	x1, x20
   44e00:	mov	x0, x27
   44e04:	bl	bdf0 <mpfr_neg@plt>
   44e08:	b	44d90 <mpfr_jn@@Base+0xc04>
   44e0c:	cbz	w21, 44b80 <mpfr_jn@@Base+0x9f4>
   44e10:	b	4436c <mpfr_jn@@Base+0x1e0>
   44e14:	mov	w3, #0x3                   	// #3
   44e18:	mov	x2, x19
   44e1c:	mov	x1, x23
   44e20:	mov	x0, x23
   44e24:	bl	bdd0 <mpfr_mul@plt>
   44e28:	mov	x1, x23
   44e2c:	mov	x0, x23
   44e30:	mov	w2, #0x2                   	// #2
   44e34:	bl	bdf0 <mpfr_neg@plt>
   44e38:	b	44bfc <mpfr_jn@@Base+0xa70>
   44e3c:	add	x21, sp, #0x1c0
   44e40:	mov	x1, #0x20                  	// #32
   44e44:	mov	x0, x21
   44e48:	add	x20, sp, #0x1e0
   44e4c:	bl	cb10 <mpfr_init2@plt>
   44e50:	mov	x0, x20
   44e54:	mov	x1, #0x20                  	// #32
   44e58:	bl	cb10 <mpfr_init2@plt>
   44e5c:	ldr	x0, [sp, #120]
   44e60:	cbnz	x0, 44f88 <mpfr_jn@@Base+0xdfc>
   44e64:	mov	x1, x19
   44e68:	mov	x0, x21
   44e6c:	mov	w3, #0x1                   	// #1
   44e70:	mov	w2, #0x0                   	// #0
   44e74:	bl	c730 <mpfr_set4@plt>
   44e78:	mov	x0, x20
   44e7c:	adrp	x1, 5a000 <mpfr_bases@@Base+0x2a8>
   44e80:	add	x1, x1, #0xb35
   44e84:	bl	c3d0 <mpfr_set_str_binary@plt>
   44e88:	mov	x2, x20
   44e8c:	mov	w3, #0x0                   	// #0
   44e90:	mov	x1, x21
   44e94:	mov	x0, x21
   44e98:	bl	bdd0 <mpfr_mul@plt>
   44e9c:	mov	x0, x21
   44ea0:	mov	w1, #0x0                   	// #0
   44ea4:	bl	bed0 <mpfr_fits_ulong_p@plt>
   44ea8:	cbz	w0, 44ffc <mpfr_jn@@Base+0xe70>
   44eac:	mov	x0, x21
   44eb0:	mov	w1, #0x0                   	// #0
   44eb4:	bl	bd20 <mpfr_get_ui@plt>
   44eb8:	str	x0, [sp, #128]
   44ebc:	mov	x0, x21
   44ec0:	bl	c0f0 <mpfr_clear@plt>
   44ec4:	mov	x0, x20
   44ec8:	bl	c0f0 <mpfr_clear@plt>
   44ecc:	ldr	x1, [sp, #128]
   44ed0:	mov	x0, #0xfffffffffffffe7d    	// #-387
   44ed4:	ldr	x21, [x27]
   44ed8:	movk	x0, #0x7fff, lsl #48
   44edc:	mov	x20, #0xfffffffffffffe7e    	// #-386
   44ee0:	cmp	x1, x0
   44ee4:	movk	x20, #0x7fff, lsl #48
   44ee8:	csel	x22, x1, x20, ls  // ls = plast
   44eec:	cmp	x21, #0x1
   44ef0:	b.eq	45004 <mpfr_jn@@Base+0xe78>  // b.none
   44ef4:	b.gt	44f10 <mpfr_jn@@Base+0xd84>
   44ef8:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   44efc:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   44f00:	add	x2, x2, #0x560
   44f04:	add	x0, x0, #0x55b
   44f08:	mov	w1, #0xed                  	// #237
   44f0c:	bl	cbd0 <mpfr_assert_fail@plt>
   44f10:	ldr	x0, [x27]
   44f14:	sub	x20, x0, #0x1
   44f18:	clz	x0, x20
   44f1c:	mov	w20, #0x40                  	// #64
   44f20:	sub	w20, w20, w0
   44f24:	lsl	w20, w20, #1
   44f28:	sxtw	x20, w20
   44f2c:	add	x20, x21, x20
   44f30:	mov	x0, #0xfffffffffffffefe    	// #-258
   44f34:	add	x20, x20, #0x3
   44f38:	movk	x0, #0x7fff, lsl #48
   44f3c:	add	x20, x20, x22
   44f40:	add	x21, sp, #0x1a0
   44f44:	cmp	x20, x0
   44f48:	add	x0, x0, #0x1
   44f4c:	csel	x20, x20, x0, ls  // ls = plast
   44f50:	mov	x0, #0x40                  	// #64
   44f54:	str	x0, [sp, #136]
   44f58:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   44f5c:	add	x0, x0, #0x5a9
   44f60:	str	wzr, [sp, #144]
   44f64:	str	x0, [sp, #200]
   44f68:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   44f6c:	add	x0, x0, #0x55b
   44f70:	str	x0, [sp, #176]
   44f74:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   44f78:	cmp	x20, x0
   44f7c:	ldr	x1, [sp, #512]
   44f80:	b.lt	4500c <mpfr_jn@@Base+0xe80>  // b.tstop
   44f84:	bl	c970 <mpfr_abort_prec_max@plt>
   44f88:	ldr	x2, [sp, #120]
   44f8c:	mov	w3, #0x0                   	// #0
   44f90:	mov	x1, x19
   44f94:	mov	x0, x21
   44f98:	bl	cd00 <mpfr_div_ui@plt>
   44f9c:	mov	x1, x21
   44fa0:	mov	x0, x21
   44fa4:	mov	w2, #0x0                   	// #0
   44fa8:	bl	c490 <mpfr_sqr@plt>
   44fac:	mov	w3, #0x0                   	// #0
   44fb0:	mov	x1, x21
   44fb4:	mov	x0, x21
   44fb8:	mov	x2, #0x1                   	// #1
   44fbc:	bl	c2f0 <mpfr_add_ui@plt>
   44fc0:	mov	x1, x21
   44fc4:	mov	x0, x21
   44fc8:	mov	w2, #0x0                   	// #0
   44fcc:	bl	c9c0 <mpfr_sqrt@plt>
   44fd0:	mov	x1, x21
   44fd4:	mov	x0, x21
   44fd8:	mov	w3, #0x0                   	// #0
   44fdc:	mov	x2, #0x1                   	// #1
   44fe0:	bl	c5c0 <mpfr_sub_ui@plt>
   44fe4:	ldr	x2, [sp, #120]
   44fe8:	mov	x1, x21
   44fec:	mov	x0, x21
   44ff0:	mov	w3, #0x0                   	// #0
   44ff4:	bl	bad0 <mpfr_mul_ui@plt>
   44ff8:	b	44e78 <mpfr_jn@@Base+0xcec>
   44ffc:	mov	x0, #0xffffffffffffffff    	// #-1
   45000:	b	44eb8 <mpfr_jn@@Base+0xd2c>
   45004:	mov	x20, #0x0                   	// #0
   45008:	b	44f2c <mpfr_jn@@Base+0xda0>
   4500c:	sub	x0, x20, #0x1
   45010:	asr	x2, x0, #6
   45014:	mov	x0, #0x18                  	// #24
   45018:	add	x22, x2, #0x1
   4501c:	madd	x0, x2, x0, x0
   45020:	str	x0, [sp, #512]
   45024:	cbnz	x1, 451ac <mpfr_jn@@Base+0x1020>
   45028:	bl	cd90 <mpfr_allocate_func@plt>
   4502c:	str	x0, [sp, #520]
   45030:	mov	w0, #0x1                   	// #1
   45034:	str	w0, [sp, #360]
   45038:	mov	w3, #0x0                   	// #0
   4503c:	ldr	x1, [sp, #520]
   45040:	str	x1, [sp, #376]
   45044:	str	w0, [sp, #392]
   45048:	str	w0, [sp, #424]
   4504c:	add	x2, x1, x22, lsl #3
   45050:	add	x22, x1, x22, lsl #4
   45054:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   45058:	ldr	x1, [x0, #2592]
   4505c:	add	x0, x0, #0xa20
   45060:	blr	x1
   45064:	str	x2, [sp, #408]
   45068:	ldr	x1, [sp, #104]
   4506c:	str	x22, [sp, #440]
   45070:	ldr	x2, [sp, #120]
   45074:	add	x22, x1, x0
   45078:	str	wzr, [x1, x0]
   4507c:	mov	x1, x19
   45080:	mov	x0, x21
   45084:	str	x20, [sp, #352]
   45088:	str	x20, [sp, #384]
   4508c:	str	x20, [sp, #416]
   45090:	bl	bff0 <mpfr_pow_ui@plt>
   45094:	mov	x2, x19
   45098:	mov	x1, x19
   4509c:	mov	w3, #0x0                   	// #0
   450a0:	mov	x0, x23
   450a4:	bl	bdd0 <mpfr_mul@plt>
   450a8:	ldr	w0, [x22]
   450ac:	mov	w1, #0x2f                  	// #47
   450b0:	and	w0, w0, w1
   450b4:	mov	w1, #0x2                   	// #2
   450b8:	str	w0, [x22]
   450bc:	mov	x0, x23
   450c0:	bl	bd20 <mpfr_get_ui@plt>
   450c4:	str	x0, [sp, #192]
   450c8:	ldr	w0, [x22]
   450cc:	tbz	w0, #4, 450e0 <mpfr_jn@@Base+0xf54>
   450d0:	ldr	x0, [sp, #176]
   450d4:	mov	w1, #0xfc                  	// #252
   450d8:	ldr	x2, [sp, #200]
   450dc:	bl	cbd0 <mpfr_assert_fail@plt>
   450e0:	mov	w3, #0x0                   	// #0
   450e4:	mov	x1, x23
   450e8:	mov	x2, #0x2                   	// #2
   450ec:	mov	x0, x23
   450f0:	bl	c980 <mpfr_div_2ui@plt>
   450f4:	add	x22, sp, #0x180
   450f8:	ldr	x1, [sp, #120]
   450fc:	mov	w2, #0x0                   	// #0
   45100:	mov	x0, x22
   45104:	bl	c770 <mpfr_fac_ui@plt>
   45108:	mov	x2, x22
   4510c:	mov	x1, x21
   45110:	mov	x0, x21
   45114:	mov	w3, #0x0                   	// #0
   45118:	bl	c6b0 <mpfr_div@plt>
   4511c:	ldr	x0, [sp, #120]
   45120:	cbz	x0, 45138 <mpfr_jn@@Base+0xfac>
   45124:	mov	x2, x0
   45128:	mov	x1, x21
   4512c:	mov	x0, x21
   45130:	mov	w3, #0x0                   	// #0
   45134:	bl	c980 <mpfr_div_2ui@plt>
   45138:	ldr	w3, [sp, #424]
   4513c:	mov	x1, x21
   45140:	mov	x0, x22
   45144:	mov	w2, #0x0                   	// #0
   45148:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
   4514c:	mov	x26, #0xc000000000000001    	// #-4611686018427387903
   45150:	mov	x24, #0x1                   	// #1
   45154:	bl	c730 <mpfr_set4@plt>
   45158:	str	x25, [sp, #152]
   4515c:	ldr	x28, [sp, #400]
   45160:	cmp	x28, x25
   45164:	csel	x28, x28, x26, ne  // ne = any
   45168:	mov	w3, #0x0                   	// #0
   4516c:	mov	x2, x23
   45170:	mov	x1, x21
   45174:	mov	x0, x21
   45178:	bl	bdd0 <mpfr_mul@plt>
   4517c:	mov	x1, x21
   45180:	mov	x0, x21
   45184:	mov	w2, #0x0                   	// #0
   45188:	bl	bdf0 <mpfr_neg@plt>
   4518c:	ldr	x1, [sp, #120]
   45190:	mvn	x0, x24
   45194:	cmp	x1, x0
   45198:	b.ls	451bc <mpfr_jn@@Base+0x1030>  // b.plast
   4519c:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   451a0:	mov	w1, #0x10f                 	// #271
   451a4:	add	x2, x2, #0x5c8
   451a8:	b	44480 <mpfr_jn@@Base+0x2f4>
   451ac:	mov	x2, x0
   451b0:	ldr	x0, [sp, #520]
   451b4:	bl	c250 <mpfr_reallocate_func@plt>
   451b8:	b	4502c <mpfr_jn@@Base+0xea0>
   451bc:	ldr	x0, [sp, #120]
   451c0:	mov	w3, #0x0                   	// #0
   451c4:	add	x25, x24, x0
   451c8:	umulh	x0, x25, x24
   451cc:	cbnz	x0, 4525c <mpfr_jn@@Base+0x10d0>
   451d0:	mul	x2, x25, x24
   451d4:	mov	x1, x21
   451d8:	mov	x0, x21
   451dc:	bl	cd00 <mpfr_div_ui@plt>
   451e0:	ldr	x1, [sp, #152]
   451e4:	mov	x2, x21
   451e8:	ldr	x0, [sp, #400]
   451ec:	mov	w3, #0x0                   	// #0
   451f0:	ldr	x6, [sp, #432]
   451f4:	cmp	x0, x1
   451f8:	mov	x1, x22
   451fc:	mov	x0, x22
   45200:	csel	x6, x6, x26, ne  // ne = any
   45204:	str	x6, [sp, #208]
   45208:	bl	c230 <mpfr_add@plt>
   4520c:	ldr	x0, [sp, #152]
   45210:	ldr	x1, [sp, #400]
   45214:	ldr	x6, [sp, #208]
   45218:	cmp	x1, x0
   4521c:	csel	x1, x1, x26, ne  // ne = any
   45220:	ldr	x0, [sp, #432]
   45224:	cmp	x6, x1
   45228:	csel	x6, x6, x1, ge  // ge = tcont
   4522c:	cmp	x28, x6
   45230:	add	x0, x20, x0
   45234:	csel	x28, x28, x6, ge  // ge = tcont
   45238:	cmp	x0, x1
   4523c:	b.gt	45254 <mpfr_jn@@Base+0x10c8>
   45240:	ldr	x2, [sp, #192]
   45244:	lsl	x0, x24, #1
   45248:	udiv	x0, x2, x0
   4524c:	cmp	x25, x0
   45250:	b.hi	45278 <mpfr_jn@@Base+0x10ec>  // b.pmore
   45254:	add	x24, x24, #0x1
   45258:	b	45168 <mpfr_jn@@Base+0xfdc>
   4525c:	mov	x2, x24
   45260:	mov	x1, x21
   45264:	mov	x0, x21
   45268:	bl	cd00 <mpfr_div_ui@plt>
   4526c:	mov	x2, x25
   45270:	mov	w3, #0x0                   	// #0
   45274:	b	451d4 <mpfr_jn@@Base+0x1048>
   45278:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4527c:	ldr	x2, [x0, #2592]
   45280:	add	x0, x0, #0xa20
   45284:	blr	x2
   45288:	sub	x28, x28, x1
   4528c:	ldr	x2, [sp, #104]
   45290:	cmn	x24, #0x1
   45294:	ldr	w25, [x2, x0]
   45298:	b.eq	45378 <mpfr_jn@@Base+0x11ec>  // b.none
   4529c:	cmn	x24, #0x2
   452a0:	b.cc	452b4 <mpfr_jn@@Base+0x1128>  // b.lo, b.ul, b.last
   452a4:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   452a8:	mov	w1, #0x128                 	// #296
   452ac:	add	x2, x2, #0x5f6
   452b0:	b	44480 <mpfr_jn@@Base+0x2f4>
   452b4:	add	x4, x24, #0x1
   452b8:	mov	w26, #0x41                  	// #65
   452bc:	clz	x4, x4
   452c0:	sub	w26, w26, w4
   452c4:	lsl	w26, w26, #1
   452c8:	sxtw	x26, w26
   452cc:	mov	x0, #0xfffffffffffffeff    	// #-257
   452d0:	movk	x0, #0x7fff, lsl #48
   452d4:	sub	x0, x0, x26
   452d8:	tbnz	x28, #63, 452e4 <mpfr_jn@@Base+0x1158>
   452dc:	cmp	x28, x0
   452e0:	b.le	452f8 <mpfr_jn@@Base+0x116c>
   452e4:	ldr	x0, [sp, #176]
   452e8:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   452ec:	mov	w1, #0x12a                 	// #298
   452f0:	add	x2, x2, #0x602
   452f4:	bl	cbd0 <mpfr_assert_fail@plt>
   452f8:	ldr	x1, [sp, #400]
   452fc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   45300:	add	x26, x26, x28
   45304:	cmp	x1, x0
   45308:	b.le	453a0 <mpfr_jn@@Base+0x1214>
   4530c:	ldr	w0, [sp, #160]
   45310:	sub	x2, x20, x26
   45314:	ldr	x1, [sp, #384]
   45318:	cmp	w0, #0x0
   4531c:	ldr	x0, [sp, #408]
   45320:	sub	x1, x1, #0x1
   45324:	ldr	x3, [x27]
   45328:	asr	x1, x1, #6
   4532c:	add	x1, x1, #0x1
   45330:	cinc	x3, x3, eq  // eq = none
   45334:	bl	c400 <mpfr_round_p@plt>
   45338:	cbz	w0, 453a0 <mpfr_jn@@Base+0x1214>
   4533c:	tbnz	w25, #0, 45380 <mpfr_jn@@Base+0x11f4>
   45340:	tbnz	w25, #1, 45380 <mpfr_jn@@Base+0x11f4>
   45344:	ldr	x0, [sp, #112]
   45348:	tbnz	x0, #63, 45414 <mpfr_jn@@Base+0x1288>
   4534c:	ldr	w2, [sp, #160]
   45350:	mov	x1, x22
   45354:	ldr	w3, [sp, #392]
   45358:	mov	x0, x27
   4535c:	bl	c730 <mpfr_set4@plt>
   45360:	ldr	x1, [sp, #512]
   45364:	mov	w21, w0
   45368:	cbz	x1, 4436c <mpfr_jn@@Base+0x1e0>
   4536c:	ldr	x0, [sp, #520]
   45370:	bl	ccc0 <mpfr_free_func@plt>
   45374:	b	4436c <mpfr_jn@@Base+0x1e0>
   45378:	mov	x26, #0x2                   	// #2
   4537c:	b	452cc <mpfr_jn@@Base+0x1140>
   45380:	ldr	w0, [sp, #144]
   45384:	cbz	w0, 45398 <mpfr_jn@@Base+0x120c>
   45388:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   4538c:	mov	w1, #0x137                 	// #311
   45390:	add	x2, x2, #0x662
   45394:	b	44480 <mpfr_jn@@Base+0x2f4>
   45398:	mov	w0, #0x1                   	// #1
   4539c:	str	w0, [sp, #144]
   453a0:	ldr	x0, [sp, #128]
   453a4:	cmp	x26, x0
   453a8:	mov	x0, #0xfffffffffffffeff    	// #-257
   453ac:	movk	x0, #0x7fff, lsl #48
   453b0:	b.ls	453dc <mpfr_jn@@Base+0x1250>  // b.plast
   453b4:	ldr	x1, [sp, #128]
   453b8:	sub	x26, x26, x1
   453bc:	sub	x1, x0, x20
   453c0:	cmp	x26, x1
   453c4:	b.ls	453d8 <mpfr_jn@@Base+0x124c>  // b.plast
   453c8:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   453cc:	mov	w1, #0x13e                 	// #318
   453d0:	add	x2, x2, #0x66e
   453d4:	b	44480 <mpfr_jn@@Base+0x2f4>
   453d8:	add	x20, x20, x26
   453dc:	ldr	x1, [sp, #136]
   453e0:	sub	x0, x0, x20
   453e4:	cmp	x0, x1
   453e8:	b.ge	453fc <mpfr_jn@@Base+0x1270>  // b.tcont
   453ec:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   453f0:	mov	w1, #0x13f                 	// #319
   453f4:	add	x2, x2, #0x519
   453f8:	b	44480 <mpfr_jn@@Base+0x2f4>
   453fc:	ldr	x0, [sp, #136]
   45400:	mov	x24, #0x2                   	// #2
   45404:	add	x20, x20, x0
   45408:	sdiv	x0, x20, x24
   4540c:	str	x0, [sp, #136]
   45410:	b	44f74 <mpfr_jn@@Base+0xde8>
   45414:	ldr	x0, [sp, #112]
   45418:	tbz	w0, #0, 4534c <mpfr_jn@@Base+0x11c0>
   4541c:	ldr	w2, [sp, #160]
   45420:	mov	x1, x22
   45424:	mov	x0, x27
   45428:	bl	bdf0 <mpfr_neg@plt>
   4542c:	b	45360 <mpfr_jn@@Base+0x11d4>
   45430:	cbz	w21, 44214 <mpfr_jn@@Base+0x88>
   45434:	ldr	w0, [sp, #164]
   45438:	orr	w0, w0, #0x8
   4543c:	str	w0, [x1]
   45440:	b	44214 <mpfr_jn@@Base+0x88>

0000000000045444 <mpfr_j0@@Base>:
   45444:	mov	w3, w2
   45448:	mov	x2, x1
   4544c:	mov	x1, #0x0                   	// #0
   45450:	b	cca0 <mpfr_jn@plt>

0000000000045454 <mpfr_j1@@Base>:
   45454:	mov	w3, w2
   45458:	mov	x2, x1
   4545c:	mov	x1, #0x1                   	// #1
   45460:	b	cca0 <mpfr_jn@plt>

0000000000045464 <mpfr_yn@@Base>:
   45464:	sub	sp, sp, #0x200
   45468:	cmp	x1, #0x0
   4546c:	stp	x29, x30, [sp]
   45470:	mov	x29, sp
   45474:	stp	x19, x20, [sp, #16]
   45478:	mov	x20, x0
   4547c:	cneg	x0, x1, lt  // lt = tstop
   45480:	stp	x1, x0, [sp, #104]
   45484:	ldr	x1, [x2, #16]
   45488:	stp	x21, x22, [sp, #32]
   4548c:	mov	x21, x2
   45490:	stp	x23, x24, [sp, #48]
   45494:	stp	x25, x26, [sp, #64]
   45498:	stp	x27, x28, [sp, #80]
   4549c:	mov	x27, #0x8000000000000003    	// #-9223372036854775805
   454a0:	cmp	x1, x27
   454a4:	str	w3, [sp, #152]
   454a8:	b.gt	45580 <mpfr_yn@@Base+0x11c>
   454ac:	mov	x0, #0x2                   	// #2
   454b0:	movk	x0, #0x8000, lsl #48
   454b4:	cmp	x1, x0
   454b8:	b.ne	454e8 <mpfr_yn@@Base+0x84>  // b.any
   454bc:	str	x0, [x20, #16]
   454c0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   454c4:	ldr	x1, [x0, #2592]
   454c8:	add	x0, x0, #0xa20
   454cc:	blr	x1
   454d0:	mrs	x1, tpidr_el0
   454d4:	add	x0, x1, x0
   454d8:	ldr	w1, [x0]
   454dc:	orr	w1, w1, #0x4
   454e0:	str	w1, [x0]
   454e4:	b	4550c <mpfr_yn@@Base+0xa8>
   454e8:	cmp	x1, x27
   454ec:	b.ne	45534 <mpfr_yn@@Base+0xd0>  // b.any
   454f0:	ldr	w1, [x2, #8]
   454f4:	cmp	w1, #0x0
   454f8:	b.le	454bc <mpfr_yn@@Base+0x58>
   454fc:	mov	w0, #0x1                   	// #1
   45500:	str	w0, [x20, #8]
   45504:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   45508:	str	x0, [x20, #16]
   4550c:	mov	w26, #0x0                   	// #0
   45510:	mov	w0, w26
   45514:	ldp	x29, x30, [sp]
   45518:	ldp	x19, x20, [sp, #16]
   4551c:	ldp	x21, x22, [sp, #32]
   45520:	ldp	x23, x24, [sp, #48]
   45524:	ldp	x25, x26, [sp, #64]
   45528:	ldp	x27, x28, [sp, #80]
   4552c:	add	sp, sp, #0x200
   45530:	ret
   45534:	ldr	x0, [sp, #104]
   45538:	str	x27, [x20, #16]
   4553c:	tbz	x0, #63, 45578 <mpfr_yn@@Base+0x114>
   45540:	ldr	x1, [sp, #104]
   45544:	mov	w0, #0x1                   	// #1
   45548:	tst	x1, #0x1
   4554c:	cneg	w0, w0, eq  // eq = none
   45550:	str	w0, [x20, #8]
   45554:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   45558:	ldr	x1, [x0, #2592]
   4555c:	add	x0, x0, #0xa20
   45560:	blr	x1
   45564:	mrs	x1, tpidr_el0
   45568:	add	x0, x1, x0
   4556c:	ldr	w1, [x0]
   45570:	orr	w1, w1, #0x20
   45574:	b	454e0 <mpfr_yn@@Base+0x7c>
   45578:	mov	w0, #0xffffffff            	// #-1
   4557c:	b	45550 <mpfr_yn@@Base+0xec>
   45580:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   45584:	ldr	x2, [x0, #2592]
   45588:	add	x0, x0, #0xa20
   4558c:	blr	x2
   45590:	mrs	x2, tpidr_el0
   45594:	str	x2, [sp, #96]
   45598:	add	x22, x2, x0
   4559c:	ldr	w0, [x2, x0]
   455a0:	str	w0, [sp, #156]
   455a4:	ldr	w0, [x21, #8]
   455a8:	tbz	w0, #31, 455c8 <mpfr_yn@@Base+0x164>
   455ac:	mov	x0, #0x2                   	// #2
   455b0:	movk	x0, #0x8000, lsl #48
   455b4:	str	x0, [x20, #16]
   455b8:	ldr	w0, [sp, #156]
   455bc:	orr	w0, w0, #0x4
   455c0:	str	w0, [x22]
   455c4:	b	4550c <mpfr_yn@@Base+0xa8>
   455c8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   455cc:	ldr	x2, [x0, #2528]
   455d0:	add	x0, x0, #0x9e0
   455d4:	blr	x2
   455d8:	ldr	x2, [sp, #96]
   455dc:	ldr	x19, [x20]
   455e0:	add	x24, x2, x0
   455e4:	ldr	x0, [x2, x0]
   455e8:	str	x0, [sp, #168]
   455ec:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   455f0:	ldr	x2, [x0, #2560]
   455f4:	add	x0, x0, #0xa00
   455f8:	blr	x2
   455fc:	ldr	x2, [sp, #96]
   45600:	add	x23, x2, x0
   45604:	ldr	x0, [x2, x0]
   45608:	str	x0, [sp, #176]
   4560c:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   45610:	str	x0, [x24]
   45614:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   45618:	str	x0, [x23]
   4561c:	ldr	x0, [sp, #104]
   45620:	cbnz	x0, 45c00 <mpfr_yn@@Base+0x79c>
   45624:	mov	x24, #0x2                   	// #2
   45628:	sdiv	x0, x19, x24
   4562c:	neg	x0, x0
   45630:	cmp	x1, x0
   45634:	b.ge	45880 <mpfr_yn@@Base+0x41c>  // b.tcont
   45638:	add	x27, sp, #0x180
   4563c:	add	x19, x19, #0xa
   45640:	add	x25, sp, #0x1a0
   45644:	mov	x1, x19
   45648:	mov	x0, x27
   4564c:	bl	cb10 <mpfr_init2@plt>
   45650:	add	x22, sp, #0x1c0
   45654:	mov	x1, x19
   45658:	mov	x0, x25
   4565c:	bl	cb10 <mpfr_init2@plt>
   45660:	add	x23, sp, #0x1e0
   45664:	mov	x1, x19
   45668:	mov	x0, x22
   4566c:	bl	cb10 <mpfr_init2@plt>
   45670:	mov	x1, x19
   45674:	mov	x0, x23
   45678:	bl	cb10 <mpfr_init2@plt>
   4567c:	mov	x1, x21
   45680:	mov	w2, #0x3                   	// #3
   45684:	mov	x0, x23
   45688:	bl	c110 <mpfr_log@plt>
   4568c:	ldr	w3, [sp, #488]
   45690:	mov	x1, x23
   45694:	mov	w2, w24
   45698:	mov	x0, x25
   4569c:	bl	c730 <mpfr_set4@plt>
   456a0:	mov	x0, x25
   456a4:	bl	c1b0 <mpfr_nextabove@plt>
   456a8:	mov	w2, #0x3                   	// #3
   456ac:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   456b0:	ldr	x1, [x0, #2624]
   456b4:	add	x0, x0, #0xa40
   456b8:	blr	x1
   456bc:	ldr	x1, [sp, #96]
   456c0:	add	x1, x1, x0
   456c4:	mov	x0, x22
   456c8:	bl	c410 <mpfr_cache@plt>
   456cc:	mov	x2, x22
   456d0:	mov	x1, x23
   456d4:	mov	w3, #0x3                   	// #3
   456d8:	mov	x0, x27
   456dc:	bl	c230 <mpfr_add@plt>
   456e0:	mov	x0, x22
   456e4:	bl	c1b0 <mpfr_nextabove@plt>
   456e8:	mov	x1, x25
   456ec:	mov	w3, w24
   456f0:	mov	x2, x22
   456f4:	mov	x0, x25
   456f8:	bl	c230 <mpfr_add@plt>
   456fc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   45700:	ldr	x1, [x0, #2576]
   45704:	add	x0, x0, #0xa10
   45708:	blr	x1
   4570c:	mov	w2, w24
   45710:	ldr	x1, [sp, #96]
   45714:	add	x1, x1, x0
   45718:	mov	x0, x22
   4571c:	bl	c410 <mpfr_cache@plt>
   45720:	mov	x2, x22
   45724:	mov	x1, x27
   45728:	mov	w3, #0x3                   	// #3
   4572c:	mov	x0, x27
   45730:	bl	bbf0 <mpfr_sub@plt>
   45734:	mov	x0, x22
   45738:	bl	be50 <mpfr_nextbelow@plt>
   4573c:	mov	x1, x25
   45740:	mov	w3, w24
   45744:	mov	x2, x22
   45748:	mov	x0, x25
   4574c:	bl	bbf0 <mpfr_sub@plt>
   45750:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   45754:	ldr	x1, [x0, #2640]
   45758:	add	x0, x0, #0xa50
   4575c:	blr	x1
   45760:	mov	w2, w24
   45764:	ldr	x1, [sp, #96]
   45768:	add	x1, x1, x0
   4576c:	mov	x0, x22
   45770:	bl	c410 <mpfr_cache@plt>
   45774:	mov	x2, x22
   45778:	mov	x1, x27
   4577c:	mov	w3, #0x3                   	// #3
   45780:	mov	x0, x27
   45784:	bl	c6b0 <mpfr_div@plt>
   45788:	mov	x0, x22
   4578c:	bl	be50 <mpfr_nextbelow@plt>
   45790:	mov	x2, x22
   45794:	mov	x1, x25
   45798:	mov	w3, #0x3                   	// #3
   4579c:	mov	x0, x25
   457a0:	bl	c6b0 <mpfr_div@plt>
   457a4:	mov	x1, x27
   457a8:	mov	w3, #0x3                   	// #3
   457ac:	mov	x2, #0x1                   	// #1
   457b0:	mov	x0, x27
   457b4:	bl	c350 <mpfr_mul_2ui@plt>
   457b8:	mov	w3, w24
   457bc:	mov	x1, x25
   457c0:	mov	x2, #0x1                   	// #1
   457c4:	mov	x0, x25
   457c8:	bl	c350 <mpfr_mul_2ui@plt>
   457cc:	mov	w3, w24
   457d0:	mov	x2, x21
   457d4:	mov	x1, x21
   457d8:	mov	x0, x22
   457dc:	bl	bdd0 <mpfr_mul@plt>
   457e0:	mov	x1, x22
   457e4:	mov	w2, #0x3                   	// #3
   457e8:	mov	x0, x22
   457ec:	bl	bdf0 <mpfr_neg@plt>
   457f0:	mov	x1, x22
   457f4:	mov	w3, #0x3                   	// #3
   457f8:	mov	x2, #0x1                   	// #1
   457fc:	mov	x0, x22
   45800:	bl	c980 <mpfr_div_2ui@plt>
   45804:	mov	w3, w24
   45808:	mov	x2, x23
   4580c:	mov	x1, x22
   45810:	mov	x0, x22
   45814:	bl	bdd0 <mpfr_mul@plt>
   45818:	mov	w3, w24
   4581c:	mov	x2, x22
   45820:	mov	x1, x25
   45824:	mov	x0, x25
   45828:	bl	c230 <mpfr_add@plt>
   4582c:	ldr	w2, [sp, #152]
   45830:	mov	x0, x27
   45834:	ldr	x1, [x20]
   45838:	bl	ca00 <mpfr_prec_round@plt>
   4583c:	mov	w26, w0
   45840:	ldr	w2, [sp, #152]
   45844:	mov	x0, x25
   45848:	ldr	x1, [x20]
   4584c:	bl	ca00 <mpfr_prec_round@plt>
   45850:	cmp	w26, w0
   45854:	b.eq	45bd4 <mpfr_yn@@Base+0x770>  // b.none
   45858:	mov	w19, #0x0                   	// #0
   4585c:	mov	x0, x27
   45860:	bl	c0f0 <mpfr_clear@plt>
   45864:	mov	x0, x25
   45868:	bl	c0f0 <mpfr_clear@plt>
   4586c:	mov	x0, x22
   45870:	bl	c0f0 <mpfr_clear@plt>
   45874:	mov	x0, x23
   45878:	bl	c0f0 <mpfr_clear@plt>
   4587c:	cbnz	w19, 462a8 <mpfr_yn@@Base+0xe44>
   45880:	ldr	x1, [x20]
   45884:	mov	x0, #0x2                   	// #2
   45888:	mov	x2, #0x0                   	// #0
   4588c:	add	x19, sp, #0x180
   45890:	add	x23, sp, #0x1a0
   45894:	add	x24, sp, #0x160
   45898:	sdiv	x1, x1, x0
   4589c:	mov	x0, x21
   458a0:	add	x1, x1, #0x3
   458a4:	bl	bfd0 <mpfr_cmp_ui_2exp@plt>
   458a8:	cmp	w0, #0x0
   458ac:	add	x0, sp, #0x140
   458b0:	str	x0, [sp, #128]
   458b4:	b.le	46074 <mpfr_yn@@Base+0xc10>
   458b8:	add	x22, sp, #0x100
   458bc:	mov	x0, x22
   458c0:	bl	bc50 <mpfr_init@plt>
   458c4:	ldr	x26, [x20]
   458c8:	cmp	x26, #0x1
   458cc:	b.eq	45d48 <mpfr_yn@@Base+0x8e4>  // b.none
   458d0:	b.gt	458ec <mpfr_yn@@Base+0x488>
   458d4:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   458d8:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   458dc:	add	x2, x2, #0x560
   458e0:	add	x0, x0, #0x57a
   458e4:	mov	w1, #0x36                  	// #54
   458e8:	bl	cbd0 <mpfr_assert_fail@plt>
   458ec:	ldr	x0, [x20]
   458f0:	sub	x0, x0, #0x1
   458f4:	clz	x1, x0
   458f8:	mov	w0, #0x40                  	// #64
   458fc:	sub	w0, w0, w1
   45900:	sxtw	x0, w0
   45904:	add	x26, x26, x0
   45908:	add	x25, sp, #0xe0
   4590c:	ldr	x0, [sp, #104]
   45910:	add	x26, x26, #0x4
   45914:	lsl	x0, x0, #1
   45918:	add	x0, x0, #0x1
   4591c:	str	x0, [sp, #200]
   45920:	ldr	x0, [sp, #104]
   45924:	lsl	x0, x0, #2
   45928:	str	x0, [sp, #208]
   4592c:	mov	x0, #0x40                  	// #64
   45930:	str	x0, [sp, #184]
   45934:	add	x0, sp, #0x120
   45938:	str	x0, [sp, #120]
   4593c:	add	x0, sp, #0x1e0
   45940:	str	x0, [sp, #144]
   45944:	mov	x1, x26
   45948:	mov	x0, x22
   4594c:	bl	bf50 <mpfr_set_prec@plt>
   45950:	add	x27, sp, #0x1c0
   45954:	mov	x1, x26
   45958:	mov	x0, x25
   4595c:	bl	cb10 <mpfr_init2@plt>
   45960:	ldr	x0, [sp, #120]
   45964:	mov	x1, x26
   45968:	bl	cb10 <mpfr_init2@plt>
   4596c:	ldr	x0, [sp, #128]
   45970:	mov	x1, x26
   45974:	bl	cb10 <mpfr_init2@plt>
   45978:	mov	x1, x26
   4597c:	mov	x0, x24
   45980:	bl	cb10 <mpfr_init2@plt>
   45984:	mov	x1, x26
   45988:	mov	x0, x19
   4598c:	bl	cb10 <mpfr_init2@plt>
   45990:	mov	x0, x23
   45994:	mov	x1, #0x1f                  	// #31
   45998:	bl	cb10 <mpfr_init2@plt>
   4599c:	mov	x0, x27
   459a0:	mov	x1, #0x1f                  	// #31
   459a4:	bl	cb10 <mpfr_init2@plt>
   459a8:	ldr	x0, [sp, #144]
   459ac:	mov	x1, #0x1f                  	// #31
   459b0:	bl	cb10 <mpfr_init2@plt>
   459b4:	mov	x2, x21
   459b8:	mov	x1, x22
   459bc:	mov	x0, x25
   459c0:	mov	w3, #0x0                   	// #0
   459c4:	bl	cce0 <mpfr_sin_cos@plt>
   459c8:	ldr	w0, [x21, #8]
   459cc:	tbz	w0, #31, 459e0 <mpfr_yn@@Base+0x57c>
   459d0:	mov	x1, x25
   459d4:	mov	x0, x25
   459d8:	mov	w2, #0x0                   	// #0
   459dc:	bl	bdf0 <mpfr_neg@plt>
   459e0:	mov	x2, x22
   459e4:	mov	x1, x25
   459e8:	mov	w3, #0x0                   	// #0
   459ec:	mov	x0, x24
   459f0:	bl	c230 <mpfr_add@plt>
   459f4:	mov	x28, #0x8000000000000001    	// #-9223372036854775807
   459f8:	mov	x2, x22
   459fc:	mov	w3, #0x0                   	// #0
   45a00:	mov	x1, x25
   45a04:	mov	x0, x22
   45a08:	bl	bbf0 <mpfr_sub@plt>
   45a0c:	mov	x1, x24
   45a10:	mov	x0, x25
   45a14:	bl	c530 <mpfr_swap@plt>
   45a18:	ldr	w0, [x21, #8]
   45a1c:	mov	x2, x21
   45a20:	mov	w3, #0x0                   	// #0
   45a24:	mov	x1, #0xffffffffffffffff    	// #-1
   45a28:	cmp	w0, #0x0
   45a2c:	mov	x0, x19
   45a30:	cneg	x1, x1, gt
   45a34:	bl	c940 <mpfr_si_div@plt>
   45a38:	mov	x1, x19
   45a3c:	mov	w3, #0x0                   	// #0
   45a40:	mov	x2, #0x3                   	// #3
   45a44:	mov	x0, x19
   45a48:	bl	c980 <mpfr_div_2ui@plt>
   45a4c:	ldr	x0, [sp, #120]
   45a50:	mov	w3, #0x0                   	// #0
   45a54:	mov	x2, #0x0                   	// #0
   45a58:	mov	x1, #0x1                   	// #1
   45a5c:	bl	c680 <mpfr_set_ui_2exp@plt>
   45a60:	str	x28, [sp, #336]
   45a64:	mov	w0, #0x1                   	// #1
   45a68:	mov	w3, #0x0                   	// #0
   45a6c:	mov	x2, #0x0                   	// #0
   45a70:	mov	x1, #0x1                   	// #1
   45a74:	str	w0, [sp, #328]
   45a78:	mov	x0, x24
   45a7c:	bl	c680 <mpfr_set_ui_2exp@plt>
   45a80:	str	wzr, [sp, #192]
   45a84:	mov	w0, #0x1                   	// #1
   45a88:	str	w0, [sp, #424]
   45a8c:	str	w0, [sp, #456]
   45a90:	ldr	x0, [sp, #200]
   45a94:	str	x0, [sp, #160]
   45a98:	mov	x0, #0x1                   	// #1
   45a9c:	str	x0, [sp, #136]
   45aa0:	str	x28, [sp, #432]
   45aa4:	str	x28, [sp, #464]
   45aa8:	mov	w28, #0x0                   	// #0
   45aac:	ldr	x2, [sp, #160]
   45ab0:	mov	x1, x24
   45ab4:	mov	w3, #0x0                   	// #0
   45ab8:	mov	x0, x24
   45abc:	bl	c9f0 <mpfr_mul_si@plt>
   45ac0:	ldr	x1, [sp, #160]
   45ac4:	mov	w3, #0x0                   	// #0
   45ac8:	ldr	x0, [sp, #208]
   45acc:	sub	x2, x0, x1
   45ad0:	mov	x1, x24
   45ad4:	mov	x0, x24
   45ad8:	bl	c9f0 <mpfr_mul_si@plt>
   45adc:	ldr	x2, [sp, #136]
   45ae0:	mov	x1, x24
   45ae4:	mov	w3, #0x0                   	// #0
   45ae8:	mov	x0, x24
   45aec:	bl	cd00 <mpfr_div_ui@plt>
   45af0:	mov	x2, x19
   45af4:	mov	x1, x24
   45af8:	mov	w3, #0x0                   	// #0
   45afc:	mov	x0, x24
   45b00:	bl	bdd0 <mpfr_mul@plt>
   45b04:	ldr	w0, [sp, #360]
   45b08:	mov	x1, #0x6                   	// #6
   45b0c:	cmp	w0, #0x0
   45b10:	ldr	x0, [sp, #136]
   45b14:	cset	w3, le
   45b18:	add	w3, w3, #0x2
   45b1c:	mul	x2, x0, x1
   45b20:	mov	x1, x24
   45b24:	mov	x0, x23
   45b28:	bl	bad0 <mpfr_mul_ui@plt>
   45b2c:	mov	x1, x23
   45b30:	mov	w3, #0x1                   	// #1
   45b34:	mov	w2, #0x0                   	// #0
   45b38:	mov	x0, x23
   45b3c:	bl	c730 <mpfr_set4@plt>
   45b40:	ldr	x0, [sp, #144]
   45b44:	mov	x1, x24
   45b48:	mov	w3, #0x1                   	// #1
   45b4c:	mov	w2, #0x2                   	// #2
   45b50:	bl	c730 <mpfr_set4@plt>
   45b54:	ldr	x1, [sp, #144]
   45b58:	mov	x2, x26
   45b5c:	mov	w3, #0x2                   	// #2
   45b60:	mov	x0, x1
   45b64:	bl	c350 <mpfr_mul_2ui@plt>
   45b68:	ldr	x1, [sp, #144]
   45b6c:	mov	x2, x23
   45b70:	mov	w3, #0x2                   	// #2
   45b74:	mov	x0, x1
   45b78:	bl	c230 <mpfr_add@plt>
   45b7c:	cmp	w28, #0x1
   45b80:	b.le	45d58 <mpfr_yn@@Base+0x8f4>
   45b84:	mov	x2, x26
   45b88:	mov	x1, x27
   45b8c:	mov	w3, #0x2                   	// #2
   45b90:	mov	x0, x27
   45b94:	bl	c980 <mpfr_div_2ui@plt>
   45b98:	ldr	w0, [sp, #360]
   45b9c:	mov	x2, x24
   45ba0:	mov	x1, x27
   45ba4:	mov	w3, #0x2                   	// #2
   45ba8:	cmp	w0, #0x0
   45bac:	mov	x0, x27
   45bb0:	b.le	45d50 <mpfr_yn@@Base+0x8ec>
   45bb4:	bl	c230 <mpfr_add@plt>
   45bb8:	mov	x2, x26
   45bbc:	mov	x1, x27
   45bc0:	mov	x0, x27
   45bc4:	mov	w3, #0x2                   	// #2
   45bc8:	bl	c350 <mpfr_mul_2ui@plt>
   45bcc:	add	w28, w28, #0x1
   45bd0:	b	45d94 <mpfr_yn@@Base+0x930>
   45bd4:	mov	x1, x25
   45bd8:	mov	x0, x27
   45bdc:	bl	caf0 <mpfr_equal_p@plt>
   45be0:	cbz	w0, 45858 <mpfr_yn@@Base+0x3f4>
   45be4:	ldr	w2, [sp, #152]
   45be8:	mov	x1, x25
   45bec:	ldr	w3, [sp, #424]
   45bf0:	mov	x0, x20
   45bf4:	mov	w19, #0x1                   	// #1
   45bf8:	bl	c730 <mpfr_set4@plt>
   45bfc:	b	4585c <mpfr_yn@@Base+0x3f8>
   45c00:	ldr	x0, [sp, #104]
   45c04:	cmp	x0, #0x1
   45c08:	b.ne	45880 <mpfr_yn@@Base+0x41c>  // b.any
   45c0c:	add	x1, x1, #0x1
   45c10:	neg	x0, x19
   45c14:	cmp	x1, x0
   45c18:	b.ge	45880 <mpfr_yn@@Base+0x41c>  // b.tcont
   45c1c:	add	x25, sp, #0x1e0
   45c20:	add	x19, x19, #0xa
   45c24:	mov	x1, x19
   45c28:	mov	x0, x25
   45c2c:	bl	cb10 <mpfr_init2@plt>
   45c30:	mov	w2, #0x2                   	// #2
   45c34:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   45c38:	ldr	x1, [x0, #2640]
   45c3c:	add	x0, x0, #0xa50
   45c40:	blr	x1
   45c44:	ldr	x1, [sp, #96]
   45c48:	add	x1, x1, x0
   45c4c:	mov	x0, x25
   45c50:	bl	c410 <mpfr_cache@plt>
   45c54:	mov	x2, x21
   45c58:	mov	x1, x25
   45c5c:	mov	w3, #0x2                   	// #2
   45c60:	mov	x0, x25
   45c64:	bl	bdd0 <mpfr_mul@plt>
   45c68:	str	wzr, [x22]
   45c6c:	ldr	w3, [sp, #104]
   45c70:	mov	x2, x25
   45c74:	mov	x0, x25
   45c78:	mov	x1, #0x2                   	// #2
   45c7c:	bl	c380 <mpfr_ui_div@plt>
   45c80:	ldr	w0, [x22]
   45c84:	tbz	w0, #1, 45cbc <mpfr_yn@@Base+0x858>
   45c88:	mov	x0, x25
   45c8c:	bl	c0f0 <mpfr_clear@plt>
   45c90:	ldp	w1, w0, [sp, #152]
   45c94:	str	w0, [x22]
   45c98:	ldr	x0, [sp, #168]
   45c9c:	str	x0, [x24]
   45ca0:	ldr	x0, [sp, #176]
   45ca4:	mov	w2, #0xffffffff            	// #-1
   45ca8:	str	x0, [x23]
   45cac:	mov	x0, x20
   45cb0:	bl	bfc0 <mpfr_overflow@plt>
   45cb4:	mov	w26, w0
   45cb8:	b	45510 <mpfr_yn@@Base+0xac>
   45cbc:	mov	x1, x25
   45cc0:	mov	w2, #0x0                   	// #0
   45cc4:	mov	x0, x25
   45cc8:	bl	bdf0 <mpfr_neg@plt>
   45ccc:	ldr	x0, [sp, #496]
   45cd0:	ldr	x1, [sp, #480]
   45cd4:	add	x3, x0, #0x2
   45cd8:	cmp	x3, x1
   45cdc:	sub	x2, x1, x0
   45ce0:	mov	x3, #0x3                   	// #3
   45ce4:	csinc	x2, x3, x2, ge  // ge = tcont
   45ce8:	cmp	x0, x27
   45cec:	b.gt	45cfc <mpfr_yn@@Base+0x898>
   45cf0:	mov	w19, #0x0                   	// #0
   45cf4:	mov	x0, x25
   45cf8:	b	45878 <mpfr_yn@@Base+0x414>
   45cfc:	ldr	w0, [sp, #152]
   45d00:	sub	x1, x1, #0x1
   45d04:	ldr	x3, [x20]
   45d08:	cmp	w0, #0x0
   45d0c:	ldr	x0, [sp, #504]
   45d10:	asr	x1, x1, #6
   45d14:	sub	x2, x19, x2
   45d18:	add	x1, x1, #0x1
   45d1c:	cinc	x3, x3, eq  // eq = none
   45d20:	bl	c400 <mpfr_round_p@plt>
   45d24:	cbz	w0, 45cf0 <mpfr_yn@@Base+0x88c>
   45d28:	ldr	w2, [sp, #152]
   45d2c:	mov	x1, x25
   45d30:	ldr	w3, [sp, #488]
   45d34:	mov	x0, x20
   45d38:	bl	c730 <mpfr_set4@plt>
   45d3c:	ldr	w19, [sp, #104]
   45d40:	mov	w26, w0
   45d44:	b	45cf4 <mpfr_yn@@Base+0x890>
   45d48:	mov	x0, #0x0                   	// #0
   45d4c:	b	45904 <mpfr_yn@@Base+0x4a0>
   45d50:	bl	bbf0 <mpfr_sub@plt>
   45d54:	b	45bb8 <mpfr_yn@@Base+0x754>
   45d58:	ldr	x1, [sp, #136]
   45d5c:	mov	x2, x24
   45d60:	ldr	x0, [sp, #136]
   45d64:	mov	w3, #0x0                   	// #0
   45d68:	and	x0, x0, #0x2
   45d6c:	tbz	w1, #0, 45e04 <mpfr_yn@@Base+0x9a0>
   45d70:	ldr	x1, [sp, #128]
   45d74:	cbnz	x0, 45df8 <mpfr_yn@@Base+0x994>
   45d78:	mov	x0, x1
   45d7c:	bl	c230 <mpfr_add@plt>
   45d80:	ldr	x0, [sp, #336]
   45d84:	ldr	x1, [sp, #496]
   45d88:	cmp	x1, x0
   45d8c:	b.le	45bcc <mpfr_yn@@Base+0x768>
   45d90:	mov	w28, #0x0                   	// #0
   45d94:	mov	x2, x23
   45d98:	mov	x1, x27
   45d9c:	mov	x0, x27
   45da0:	mov	w3, #0x2                   	// #2
   45da4:	bl	c230 <mpfr_add@plt>
   45da8:	ldr	x0, [sp, #136]
   45dac:	cmp	w28, #0x1
   45db0:	add	x0, x0, #0x1
   45db4:	str	x0, [sp, #136]
   45db8:	b.gt	45e50 <mpfr_yn@@Base+0x9ec>
   45dbc:	ldr	w0, [x21, #8]
   45dc0:	cmp	w0, #0x0
   45dc4:	b.gt	45e2c <mpfr_yn@@Base+0x9c8>
   45dc8:	ldr	w0, [x21, #8]
   45dcc:	tbz	w0, #31, 45e50 <mpfr_yn@@Base+0x9ec>
   45dd0:	ldr	x0, [sp, #136]
   45dd4:	mov	x1, #0x2                   	// #2
   45dd8:	mov	x2, #0x0                   	// #0
   45ddc:	sdiv	x1, x0, x1
   45de0:	mov	x0, x21
   45de4:	neg	x1, x1
   45de8:	bl	c460 <mpfr_cmp_si_2exp@plt>
   45dec:	cmp	w0, #0x0
   45df0:	b.gt	45e44 <mpfr_yn@@Base+0x9e0>
   45df4:	b	45e50 <mpfr_yn@@Base+0x9ec>
   45df8:	mov	x0, x1
   45dfc:	bl	bbf0 <mpfr_sub@plt>
   45e00:	b	45d80 <mpfr_yn@@Base+0x91c>
   45e04:	ldr	x1, [sp, #120]
   45e08:	cbnz	x0, 45e20 <mpfr_yn@@Base+0x9bc>
   45e0c:	mov	x0, x1
   45e10:	bl	c230 <mpfr_add@plt>
   45e14:	ldr	x0, [sp, #304]
   45e18:	ldr	x1, [sp, #496]
   45e1c:	b	45d88 <mpfr_yn@@Base+0x924>
   45e20:	mov	x0, x1
   45e24:	bl	bbf0 <mpfr_sub@plt>
   45e28:	b	45e14 <mpfr_yn@@Base+0x9b0>
   45e2c:	ldr	x0, [sp, #136]
   45e30:	mov	x2, #0x0                   	// #0
   45e34:	asr	x1, x0, #1
   45e38:	mov	x0, x21
   45e3c:	bl	bfd0 <mpfr_cmp_ui_2exp@plt>
   45e40:	tbz	w0, #31, 45dc8 <mpfr_yn@@Base+0x964>
   45e44:	mov	w0, #0x1                   	// #1
   45e48:	mov	w28, #0x2                   	// #2
   45e4c:	str	w0, [sp, #192]
   45e50:	ldr	x0, [sp, #160]
   45e54:	cmp	w28, #0x4
   45e58:	add	x0, x0, #0x2
   45e5c:	str	x0, [sp, #160]
   45e60:	b.ne	45aac <mpfr_yn@@Base+0x648>  // b.any
   45e64:	ldr	x0, [sp, #104]
   45e68:	mov	w3, #0x0                   	// #0
   45e6c:	and	x0, x0, #0x1
   45e70:	str	x0, [sp, #136]
   45e74:	ldr	x0, [sp, #104]
   45e78:	tbnz	w0, #0, 461e8 <mpfr_yn@@Base+0xd84>
   45e7c:	ldr	x2, [sp, #120]
   45e80:	mov	x1, x22
   45e84:	mov	x0, x22
   45e88:	bl	bdd0 <mpfr_mul@plt>
   45e8c:	ldr	x2, [sp, #128]
   45e90:	mov	x1, x25
   45e94:	mov	w3, #0x0                   	// #0
   45e98:	mov	x0, x25
   45e9c:	bl	bdd0 <mpfr_mul@plt>
   45ea0:	ldr	x28, [sp, #240]
   45ea4:	mov	x2, x22
   45ea8:	ldr	x0, [sp, #272]
   45eac:	mov	x1, x25
   45eb0:	mov	w3, #0x0                   	// #0
   45eb4:	cmp	x28, x0
   45eb8:	csel	x28, x28, x0, ge  // ge = tcont
   45ebc:	mov	x0, x25
   45ec0:	bl	c230 <mpfr_add@plt>
   45ec4:	ldr	x0, [sp, #104]
   45ec8:	tbz	w0, #1, 45edc <mpfr_yn@@Base+0xa78>
   45ecc:	mov	x1, x25
   45ed0:	mov	x0, x25
   45ed4:	mov	w2, #0x0                   	// #0
   45ed8:	bl	bdf0 <mpfr_neg@plt>
   45edc:	ldr	x0, [sp, #240]
   45ee0:	ldr	x3, [sp, #304]
   45ee4:	cmp	x0, x28
   45ee8:	ldr	x2, [sp, #336]
   45eec:	csel	x0, x0, x28, ge  // ge = tcont
   45ef0:	add	x4, x3, #0x2
   45ef4:	add	x28, x0, #0x2
   45ef8:	cmp	x3, x2
   45efc:	add	x1, x2, #0x2
   45f00:	ldr	x2, [sp, #464]
   45f04:	csel	x1, x1, x4, lt  // lt = tstop
   45f08:	add	x3, x2, #0x2
   45f0c:	cmp	x0, x2
   45f10:	csel	x28, x28, x3, gt
   45f14:	add	x0, x1, #0x1
   45f18:	cmp	x1, x28
   45f1c:	mov	w2, #0x0                   	// #0
   45f20:	csinc	x28, x0, x28, gt
   45f24:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   45f28:	ldr	x1, [x0, #2640]
   45f2c:	add	x0, x0, #0xa50
   45f30:	blr	x1
   45f34:	ldr	x1, [sp, #96]
   45f38:	add	x1, x1, x0
   45f3c:	mov	x0, x22
   45f40:	bl	c410 <mpfr_cache@plt>
   45f44:	mov	x2, x21
   45f48:	mov	x1, x22
   45f4c:	mov	w3, #0x0                   	// #0
   45f50:	mov	x0, x22
   45f54:	bl	bdd0 <mpfr_mul@plt>
   45f58:	ldr	w0, [x21, #8]
   45f5c:	mov	w3, #0x0                   	// #0
   45f60:	mov	x2, x22
   45f64:	mov	x1, #0xffffffffffffffff    	// #-1
   45f68:	cmp	w0, #0x0
   45f6c:	mov	x0, x22
   45f70:	cneg	x1, x1, gt
   45f74:	bl	c940 <mpfr_si_div@plt>
   45f78:	mov	x1, x22
   45f7c:	mov	w2, #0x0                   	// #0
   45f80:	mov	x0, x22
   45f84:	bl	c9c0 <mpfr_sqrt@plt>
   45f88:	ldr	w0, [sp, #232]
   45f8c:	mov	x2, x25
   45f90:	ldr	w1, [sp, #264]
   45f94:	cmp	w1, w0
   45f98:	mov	x1, x22
   45f9c:	cset	w3, ne  // ne = any
   45fa0:	mov	x0, x23
   45fa4:	add	w3, w3, #0x2
   45fa8:	bl	bdd0 <mpfr_mul@plt>
   45fac:	mov	x1, x23
   45fb0:	mov	w3, #0x1                   	// #1
   45fb4:	mov	w2, #0x2                   	// #2
   45fb8:	mov	x0, x23
   45fbc:	bl	c730 <mpfr_set4@plt>
   45fc0:	mov	x1, x23
   45fc4:	mov	w3, #0x2                   	// #2
   45fc8:	mov	x2, #0x3                   	// #3
   45fcc:	mov	x0, x23
   45fd0:	bl	bad0 <mpfr_mul_ui@plt>
   45fd4:	ldr	x0, [sp, #272]
   45fd8:	mov	w3, #0x0                   	// #0
   45fdc:	mov	x2, x25
   45fe0:	mov	x1, x22
   45fe4:	add	x28, x28, x0
   45fe8:	mov	x0, x22
   45fec:	bl	bdd0 <mpfr_mul@plt>
   45ff0:	ldr	x0, [sp, #272]
   45ff4:	ldr	x2, [sp, #432]
   45ff8:	add	x1, x0, #0x1
   45ffc:	cmp	x2, x0
   46000:	add	x0, x28, #0x1
   46004:	csinc	x2, x1, x2, le
   46008:	cmp	x28, x2
   4600c:	csinc	x28, x0, x2, gt
   46010:	mov	x0, x25
   46014:	bl	c0f0 <mpfr_clear@plt>
   46018:	ldr	x0, [sp, #120]
   4601c:	bl	c0f0 <mpfr_clear@plt>
   46020:	ldr	x0, [sp, #128]
   46024:	bl	c0f0 <mpfr_clear@plt>
   46028:	mov	x0, x24
   4602c:	bl	c0f0 <mpfr_clear@plt>
   46030:	mov	x0, x19
   46034:	bl	c0f0 <mpfr_clear@plt>
   46038:	mov	x0, x23
   4603c:	bl	c0f0 <mpfr_clear@plt>
   46040:	mov	x0, x27
   46044:	bl	c0f0 <mpfr_clear@plt>
   46048:	ldr	x0, [sp, #144]
   4604c:	bl	c0f0 <mpfr_clear@plt>
   46050:	ldr	x0, [sp, #272]
   46054:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   46058:	sub	x2, x28, x0
   4605c:	cmp	x0, x1
   46060:	b.gt	46234 <mpfr_yn@@Base+0xdd0>
   46064:	ldr	w0, [sp, #192]
   46068:	cbz	w0, 46330 <mpfr_yn@@Base+0xecc>
   4606c:	mov	x0, x22
   46070:	bl	c0f0 <mpfr_clear@plt>
   46074:	ldr	x0, [sp, #128]
   46078:	bl	bc50 <mpfr_init@plt>
   4607c:	mov	x0, x24
   46080:	bl	bc50 <mpfr_init@plt>
   46084:	mov	x0, x19
   46088:	bl	bc50 <mpfr_init@plt>
   4608c:	mov	x0, x23
   46090:	bl	bc50 <mpfr_init@plt>
   46094:	ldr	x24, [x20]
   46098:	cmp	x24, #0x1
   4609c:	b.eq	46394 <mpfr_yn@@Base+0xf30>  // b.none
   460a0:	b.gt	460bc <mpfr_yn@@Base+0xc58>
   460a4:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   460a8:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   460ac:	add	x2, x2, #0x560
   460b0:	add	x0, x0, #0x6b8
   460b4:	mov	w1, #0x14c                 	// #332
   460b8:	bl	cbd0 <mpfr_assert_fail@plt>
   460bc:	ldr	x0, [x20]
   460c0:	sub	x0, x0, #0x1
   460c4:	clz	x1, x0
   460c8:	mov	w0, #0x40                  	// #64
   460cc:	sub	w0, w0, w1
   460d0:	lsl	w0, w0, #1
   460d4:	sxtw	x0, w0
   460d8:	add	x24, x24, x0
   460dc:	mov	x1, #0x40                  	// #64
   460e0:	ldr	x0, [sp, #112]
   460e4:	add	x24, x24, #0xd
   460e8:	add	x25, sp, #0x140
   460ec:	add	x0, x0, #0x1
   460f0:	add	x0, x0, x0, lsl #1
   460f4:	stp	x1, x0, [sp, #120]
   460f8:	sub	x0, x0, #0x1
   460fc:	clz	x0, x0
   46100:	sub	w0, w1, w0
   46104:	sxtw	x0, w0
   46108:	str	x0, [sp, #160]
   4610c:	mov	x1, x24
   46110:	mov	x0, x25
   46114:	add	x26, sp, #0x160
   46118:	bl	bf50 <mpfr_set_prec@plt>
   4611c:	mov	x1, x24
   46120:	mov	x0, x26
   46124:	bl	bf50 <mpfr_set_prec@plt>
   46128:	mov	x1, x24
   4612c:	mov	x0, x19
   46130:	bl	bf50 <mpfr_set_prec@plt>
   46134:	mov	x1, x24
   46138:	mov	x0, x23
   4613c:	bl	bf50 <mpfr_set_prec@plt>
   46140:	mov	x2, x21
   46144:	mov	x1, x21
   46148:	mov	w3, #0x0                   	// #0
   4614c:	mov	x0, x25
   46150:	bl	bdd0 <mpfr_mul@plt>
   46154:	mov	x1, x25
   46158:	mov	w3, #0x0                   	// #0
   4615c:	mov	x2, #0x2                   	// #2
   46160:	mov	x0, x25
   46164:	bl	c980 <mpfr_div_2ui@plt>
   46168:	ldr	x2, [sp, #112]
   4616c:	mov	x1, x21
   46170:	mov	w3, #0x0                   	// #0
   46174:	mov	x0, x19
   46178:	bl	bff0 <mpfr_pow_ui@plt>
   4617c:	ldr	x2, [sp, #112]
   46180:	mov	x1, x19
   46184:	mov	x0, x19
   46188:	mov	w3, #0x0                   	// #0
   4618c:	bl	c4b0 <mpfr_div_2si@plt>
   46190:	ldr	x0, [sp, #104]
   46194:	cbnz	x0, 4639c <mpfr_yn@@Base+0xf38>
   46198:	mov	w0, #0x1                   	// #1
   4619c:	mov	x22, #0x0                   	// #0
   461a0:	str	w0, [sp, #360]
   461a4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   461a8:	str	x0, [sp, #368]
   461ac:	mov	x2, x19
   461b0:	mov	x1, x26
   461b4:	mov	x0, x26
   461b8:	mov	w3, #0x0                   	// #0
   461bc:	bl	c6b0 <mpfr_div@plt>
   461c0:	ldr	x0, [sp, #128]
   461c4:	cmp	x0, #0x1
   461c8:	b.eq	464b0 <mpfr_yn@@Base+0x104c>  // b.none
   461cc:	b.hi	4646c <mpfr_yn@@Base+0x1008>  // b.pmore
   461d0:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   461d4:	add	x2, x2, #0x6bd
   461d8:	mov	w1, #0x167                 	// #359
   461dc:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   461e0:	add	x0, x0, #0x6b8
   461e4:	b	4635c <mpfr_yn@@Base+0xef8>
   461e8:	ldr	x2, [sp, #128]
   461ec:	mov	x1, x22
   461f0:	mov	x0, x22
   461f4:	bl	bdd0 <mpfr_mul@plt>
   461f8:	ldr	x2, [sp, #120]
   461fc:	mov	x1, x25
   46200:	mov	x0, x25
   46204:	mov	w3, #0x0                   	// #0
   46208:	bl	bdd0 <mpfr_mul@plt>
   4620c:	ldr	x28, [sp, #240]
   46210:	mov	x2, x25
   46214:	ldr	x0, [sp, #272]
   46218:	mov	x1, x22
   4621c:	mov	w3, #0x0                   	// #0
   46220:	cmp	x28, x0
   46224:	csel	x28, x28, x0, ge  // ge = tcont
   46228:	mov	x0, x25
   4622c:	bl	bbf0 <mpfr_sub@plt>
   46230:	b	45ec4 <mpfr_yn@@Base+0xa60>
   46234:	ldr	w0, [sp, #152]
   46238:	sub	x2, x26, x2
   4623c:	ldr	x1, [sp, #256]
   46240:	cmp	w0, #0x0
   46244:	ldr	x0, [sp, #280]
   46248:	sub	x1, x1, #0x1
   4624c:	ldr	x3, [x20]
   46250:	asr	x1, x1, #6
   46254:	add	x1, x1, #0x1
   46258:	cinc	x3, x3, eq  // eq = none
   4625c:	bl	c400 <mpfr_round_p@plt>
   46260:	cbz	w0, 46064 <mpfr_yn@@Base+0xc00>
   46264:	ldr	w0, [x21, #8]
   46268:	cmp	w0, #0x0
   4626c:	b.gt	46278 <mpfr_yn@@Base+0xe14>
   46270:	ldr	x0, [sp, #136]
   46274:	cbnz	x0, 46378 <mpfr_yn@@Base+0xf14>
   46278:	ldr	w2, [sp, #152]
   4627c:	mov	x1, x22
   46280:	ldr	w3, [sp, #264]
   46284:	mov	x0, x20
   46288:	bl	c730 <mpfr_set4@plt>
   4628c:	mov	w26, w0
   46290:	mov	x0, x22
   46294:	bl	c0f0 <mpfr_clear@plt>
   46298:	ldr	w0, [sp, #152]
   4629c:	cmp	w0, #0x5
   462a0:	b.ne	4638c <mpfr_yn@@Base+0xf28>  // b.any
   462a4:	mov	w26, #0x1                   	// #1
   462a8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   462ac:	ldr	x1, [x0, #2592]
   462b0:	add	x0, x0, #0xa20
   462b4:	blr	x1
   462b8:	ldr	w3, [sp, #156]
   462bc:	ldr	x2, [sp, #96]
   462c0:	ldr	x1, [sp, #96]
   462c4:	str	w3, [x2, x0]
   462c8:	add	x1, x1, x0
   462cc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   462d0:	ldr	x2, [x0, #2528]
   462d4:	add	x0, x0, #0x9e0
   462d8:	blr	x2
   462dc:	ldr	x2, [sp, #96]
   462e0:	ldr	x3, [sp, #168]
   462e4:	str	x3, [x2, x0]
   462e8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   462ec:	ldr	x2, [x0, #2560]
   462f0:	add	x0, x0, #0xa00
   462f4:	blr	x2
   462f8:	ldr	x2, [sp, #96]
   462fc:	ldr	x3, [sp, #176]
   46300:	str	x3, [x2, x0]
   46304:	ldr	x0, [x20, #16]
   46308:	ldr	x2, [sp, #168]
   4630c:	cmp	x2, x0
   46310:	b.gt	4631c <mpfr_yn@@Base+0xeb8>
   46314:	cmp	x3, x0
   46318:	b.ge	469d8 <mpfr_yn@@Base+0x1574>  // b.tcont
   4631c:	ldr	w2, [sp, #152]
   46320:	mov	w1, w26
   46324:	mov	x0, x20
   46328:	bl	cbc0 <mpfr_check_range@plt>
   4632c:	b	45cb4 <mpfr_yn@@Base+0x850>
   46330:	ldr	x1, [sp, #184]
   46334:	mov	x0, #0xfffffffffffffeff    	// #-257
   46338:	movk	x0, #0x7fff, lsl #48
   4633c:	sub	x0, x0, x26
   46340:	cmp	x0, x1
   46344:	b.ge	46360 <mpfr_yn@@Base+0xefc>  // b.tcont
   46348:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   4634c:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   46350:	add	x2, x2, #0xb94
   46354:	add	x0, x0, #0x57a
   46358:	mov	w1, #0x106                 	// #262
   4635c:	bl	cbd0 <mpfr_assert_fail@plt>
   46360:	ldr	x0, [sp, #184]
   46364:	add	x26, x26, x0
   46368:	mov	x0, #0x2                   	// #2
   4636c:	sdiv	x0, x26, x0
   46370:	str	x0, [sp, #184]
   46374:	b	45944 <mpfr_yn@@Base+0x4e0>
   46378:	ldr	w2, [sp, #152]
   4637c:	mov	x1, x22
   46380:	mov	x0, x20
   46384:	bl	bdf0 <mpfr_neg@plt>
   46388:	b	4628c <mpfr_yn@@Base+0xe28>
   4638c:	cbz	w26, 46074 <mpfr_yn@@Base+0xc10>
   46390:	b	462a8 <mpfr_yn@@Base+0xe44>
   46394:	mov	x0, #0x0                   	// #0
   46398:	b	460d8 <mpfr_yn@@Base+0xc74>
   4639c:	ldr	x0, [sp, #112]
   463a0:	add	x28, sp, #0x1e0
   463a4:	sub	x22, x0, #0x1
   463a8:	mov	x0, x28
   463ac:	bl	c010 <mpfr_mpz_init@plt>
   463b0:	mov	x0, x28
   463b4:	mov	x1, #0x1                   	// #1
   463b8:	bl	bd30 <__gmpz_set_ui@plt>
   463bc:	mov	x0, x26
   463c0:	mov	w3, #0x0                   	// #0
   463c4:	mov	x2, #0x0                   	// #0
   463c8:	mov	x1, #0x1                   	// #1
   463cc:	bl	c680 <mpfr_set_ui_2exp@plt>
   463d0:	ldr	x27, [sp, #368]
   463d4:	cbnz	x22, 4640c <mpfr_yn@@Base+0xfa8>
   463d8:	mov	x1, x28
   463dc:	mov	x0, x28
   463e0:	bl	bce0 <__gmpz_sqrt@plt>
   463e4:	mov	x2, x28
   463e8:	mov	x1, x26
   463ec:	mov	w3, #0x0                   	// #0
   463f0:	mov	x0, x26
   463f4:	bl	cd20 <mpfr_div_z@plt>
   463f8:	mov	x0, x28
   463fc:	bl	c200 <mpfr_mpz_clear@plt>
   46400:	ldr	x22, [sp, #368]
   46404:	sub	x22, x27, x22
   46408:	b	461ac <mpfr_yn@@Base+0xd48>
   4640c:	mov	w3, #0x0                   	// #0
   46410:	mov	x2, x25
   46414:	mov	x1, x26
   46418:	mov	x0, x26
   4641c:	bl	bdd0 <mpfr_mul@plt>
   46420:	ldr	x0, [sp, #112]
   46424:	mov	x1, x28
   46428:	sub	x2, x0, x22
   4642c:	mov	x0, x28
   46430:	bl	c190 <__gmpz_mul_ui@plt>
   46434:	mov	x2, x22
   46438:	mov	x1, x28
   4643c:	mov	x0, x28
   46440:	bl	c190 <__gmpz_mul_ui@plt>
   46444:	mov	x2, x28
   46448:	mov	x1, x26
   4644c:	mov	x0, x26
   46450:	mov	w3, #0x0                   	// #0
   46454:	bl	c510 <mpfr_add_z@plt>
   46458:	sub	x22, x22, #0x1
   4645c:	ldr	x0, [sp, #368]
   46460:	cmp	x27, x0
   46464:	csel	x27, x27, x0, ge  // ge = tcont
   46468:	b	463d4 <mpfr_yn@@Base+0xf70>
   4646c:	ldr	x4, [sp, #160]
   46470:	add	x4, x22, x4
   46474:	add	x0, x4, #0x1
   46478:	mov	w2, #0x0                   	// #0
   4647c:	mov	x1, x25
   46480:	str	x0, [sp, #136]
   46484:	mov	x0, x25
   46488:	bl	bdf0 <mpfr_neg@plt>
   4648c:	mov	x0, x25
   46490:	mov	w1, #0x2                   	// #2
   46494:	bl	bd20 <mpfr_get_ui@plt>
   46498:	cmn	x0, #0x4
   4649c:	b.ls	464b8 <mpfr_yn@@Base+0x1054>  // b.plast
   464a0:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   464a4:	mov	w1, #0x5d                  	// #93
   464a8:	add	x2, x2, #0x6d0
   464ac:	b	461dc <mpfr_yn@@Base+0xd78>
   464b0:	mov	x4, #0x0                   	// #0
   464b4:	b	46470 <mpfr_yn@@Base+0x100c>
   464b8:	add	x0, x0, #0x2
   464bc:	add	x26, sp, #0x100
   464c0:	str	x0, [sp, #144]
   464c4:	mov	x0, x26
   464c8:	bl	c010 <mpfr_mpz_init@plt>
   464cc:	add	x22, sp, #0x120
   464d0:	mov	x1, #0x0                   	// #0
   464d4:	mov	x0, x26
   464d8:	bl	bd30 <__gmpz_set_ui@plt>
   464dc:	mov	x27, #0x1                   	// #1
   464e0:	mov	x0, x22
   464e4:	bl	c010 <mpfr_mpz_init@plt>
   464e8:	mov	x0, x22
   464ec:	mov	x1, #0x1                   	// #1
   464f0:	bl	bd30 <__gmpz_set_ui@plt>
   464f4:	ldr	x0, [sp, #112]
   464f8:	cmp	x0, x27
   464fc:	b.cs	466e8 <mpfr_yn@@Base+0x1284>  // b.hs, b.nlast
   46500:	ldr	x1, [sp, #416]
   46504:	add	x6, sp, #0x1c0
   46508:	mov	x28, x6
   4650c:	mov	x0, x6
   46510:	mov	x27, #0x1                   	// #1
   46514:	bl	cb10 <mpfr_init2@plt>
   46518:	ldr	x1, [sp, #416]
   4651c:	add	x8, sp, #0x1e0
   46520:	mov	x0, x8
   46524:	str	x8, [sp, #184]
   46528:	bl	cb10 <mpfr_init2@plt>
   4652c:	ldr	x1, [sp, #112]
   46530:	mov	x0, x28
   46534:	mov	w2, #0x0                   	// #0
   46538:	bl	c770 <mpfr_fac_ui@plt>
   4653c:	mov	x2, x28
   46540:	mov	x1, x19
   46544:	mov	x0, x28
   46548:	mov	w3, #0x0                   	// #0
   4654c:	bl	c6b0 <mpfr_div@plt>
   46550:	ldr	x8, [sp, #184]
   46554:	mov	x1, x28
   46558:	mov	x2, x26
   4655c:	mov	w3, #0x0                   	// #0
   46560:	mov	x0, x8
   46564:	bl	c560 <mpfr_mul_z@plt>
   46568:	ldr	x8, [sp, #184]
   4656c:	mov	x2, x22
   46570:	mov	x0, x23
   46574:	mov	w3, #0x0                   	// #0
   46578:	mov	x1, x8
   4657c:	bl	cd20 <mpfr_div_z@plt>
   46580:	ldr	x8, [sp, #184]
   46584:	mov	x6, x28
   46588:	ldr	x4, [sp, #432]
   4658c:	mov	x28, x8
   46590:	mov	x1, x6
   46594:	mov	x2, x25
   46598:	mov	x0, x6
   4659c:	mov	w3, #0x0                   	// #0
   465a0:	str	x6, [sp, #184]
   465a4:	str	x4, [sp, #216]
   465a8:	bl	bdd0 <mpfr_mul@plt>
   465ac:	ldr	x6, [sp, #184]
   465b0:	mov	x2, x27
   465b4:	mov	w3, #0x0                   	// #0
   465b8:	str	x6, [sp, #192]
   465bc:	mov	x1, x6
   465c0:	mov	x0, x6
   465c4:	bl	cd00 <mpfr_div_ui@plt>
   465c8:	ldr	x0, [sp, #112]
   465cc:	mov	w3, #0x0                   	// #0
   465d0:	ldr	x6, [sp, #192]
   465d4:	add	x8, x0, x27
   465d8:	mov	x2, x8
   465dc:	str	x8, [sp, #184]
   465e0:	mov	x1, x6
   465e4:	mov	x0, x6
   465e8:	bl	cd00 <mpfr_div_ui@plt>
   465ec:	mov	x2, x27
   465f0:	mov	x1, x26
   465f4:	mov	x0, x26
   465f8:	bl	c190 <__gmpz_mul_ui@plt>
   465fc:	ldr	x8, [sp, #184]
   46600:	mov	x1, x26
   46604:	mov	x0, x26
   46608:	mov	x2, x8
   4660c:	bl	c190 <__gmpz_mul_ui@plt>
   46610:	ldr	x8, [sp, #184]
   46614:	lsl	x10, x27, #1
   46618:	mov	x1, x22
   4661c:	mov	x0, x26
   46620:	add	x2, x27, x8
   46624:	str	x10, [sp, #208]
   46628:	bl	ccd0 <__gmpz_addmul_ui@plt>
   4662c:	mov	x2, x27
   46630:	mov	x1, x22
   46634:	mov	x0, x22
   46638:	bl	c190 <__gmpz_mul_ui@plt>
   4663c:	ldr	x8, [sp, #184]
   46640:	mov	x1, x22
   46644:	mov	x0, x22
   46648:	str	x8, [sp, #200]
   4664c:	mov	x2, x8
   46650:	bl	c190 <__gmpz_mul_ui@plt>
   46654:	ldr	x6, [sp, #192]
   46658:	mov	x2, x26
   4665c:	mov	w3, #0x0                   	// #0
   46660:	mov	x0, x28
   46664:	mov	x1, x6
   46668:	bl	c560 <mpfr_mul_z@plt>
   4666c:	mov	x2, x22
   46670:	mov	x1, x28
   46674:	mov	w3, #0x0                   	// #0
   46678:	mov	x0, x28
   4667c:	bl	cd20 <mpfr_div_z@plt>
   46680:	ldr	x9, [sp, #496]
   46684:	mov	x2, x28
   46688:	mov	x1, x23
   4668c:	mov	x0, x23
   46690:	mov	w3, #0x0                   	// #0
   46694:	str	x9, [sp, #184]
   46698:	bl	c230 <mpfr_add@plt>
   4669c:	ldp	x9, x6, [sp, #184]
   466a0:	ldr	x1, [sp, #432]
   466a4:	ldr	x4, [sp, #216]
   466a8:	ldr	x2, [sp, #480]
   466ac:	cmp	x9, x1
   466b0:	ldr	x0, [sp, #496]
   466b4:	csel	x9, x9, x1, ge  // ge = tcont
   466b8:	cmp	x4, x9
   466bc:	add	x0, x0, x2
   466c0:	csel	x4, x4, x9, ge  // ge = tcont
   466c4:	cmp	x1, x0
   466c8:	b.le	466e0 <mpfr_yn@@Base+0x127c>
   466cc:	ldp	x8, x10, [sp, #200]
   466d0:	ldr	x0, [sp, #144]
   466d4:	udiv	x10, x0, x10
   466d8:	cmp	x8, x10
   466dc:	b.hi	46720 <mpfr_yn@@Base+0x12bc>  // b.pmore
   466e0:	add	x27, x27, #0x1
   466e4:	b	46590 <mpfr_yn@@Base+0x112c>
   466e8:	mov	x2, x27
   466ec:	mov	x1, x26
   466f0:	mov	x0, x26
   466f4:	bl	c190 <__gmpz_mul_ui@plt>
   466f8:	mov	x2, x22
   466fc:	mov	x1, x26
   46700:	mov	x0, x26
   46704:	bl	ca50 <__gmpz_add@plt>
   46708:	mov	x2, x27
   4670c:	mov	x1, x22
   46710:	mov	x0, x22
   46714:	add	x27, x27, #0x1
   46718:	bl	c190 <__gmpz_mul_ui@plt>
   4671c:	b	464f4 <mpfr_yn@@Base+0x1090>
   46720:	mov	x0, x6
   46724:	str	x4, [sp, #144]
   46728:	bl	c0f0 <mpfr_clear@plt>
   4672c:	mov	x0, x28
   46730:	bl	c0f0 <mpfr_clear@plt>
   46734:	mov	x0, x26
   46738:	bl	c200 <mpfr_mpz_clear@plt>
   4673c:	mov	x0, x22
   46740:	bl	c200 <mpfr_mpz_clear@plt>
   46744:	ldr	x4, [sp, #144]
   46748:	cmn	x27, #0x1
   4674c:	ldr	x22, [sp, #432]
   46750:	sub	x22, x4, x22
   46754:	b.eq	4693c <mpfr_yn@@Base+0x14d8>  // b.none
   46758:	cmn	x27, #0x2
   4675c:	b.cc	46770 <mpfr_yn@@Base+0x130c>  // b.lo, b.ul, b.last
   46760:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   46764:	mov	w1, #0x92                  	// #146
   46768:	add	x2, x2, #0x5f6
   4676c:	b	461dc <mpfr_yn@@Base+0xd78>
   46770:	add	x4, x27, #0x1
   46774:	mov	w0, #0x40                  	// #64
   46778:	clz	x4, x4
   4677c:	sub	w4, w0, w4
   46780:	lsl	w4, w4, #1
   46784:	add	w4, w4, #0x3
   46788:	sxtw	x4, w4
   4678c:	ldr	x0, [sp, #136]
   46790:	add	x27, sp, #0x160
   46794:	ldr	x28, [sp, #368]
   46798:	add	x22, x22, x4
   4679c:	mov	x2, x23
   467a0:	mov	x1, x27
   467a4:	add	x28, x0, x28
   467a8:	mov	w3, #0x0                   	// #0
   467ac:	mov	x0, x27
   467b0:	bl	c230 <mpfr_add@plt>
   467b4:	ldr	x4, [sp, #432]
   467b8:	mov	w3, #0x0                   	// #0
   467bc:	ldr	x0, [sp, #368]
   467c0:	add	x22, x22, x4
   467c4:	cmp	x28, x22
   467c8:	add	x4, x28, #0x1
   467cc:	csinc	x22, x4, x22, ge  // ge = tcont
   467d0:	mov	x1, x21
   467d4:	subs	x22, x22, x0
   467d8:	mov	x2, #0x1                   	// #1
   467dc:	csel	x22, x22, xzr, pl  // pl = nfrst
   467e0:	mov	x0, x19
   467e4:	add	x22, x22, #0x1
   467e8:	bl	c980 <mpfr_div_2ui@plt>
   467ec:	mov	x1, x19
   467f0:	mov	w2, #0x0                   	// #0
   467f4:	mov	x0, x19
   467f8:	bl	c110 <mpfr_log@plt>
   467fc:	mov	w2, #0x0                   	// #0
   46800:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   46804:	ldr	x1, [x0, #2624]
   46808:	add	x0, x0, #0xa40
   4680c:	blr	x1
   46810:	ldr	x1, [sp, #96]
   46814:	add	x1, x1, x0
   46818:	mov	x0, x23
   4681c:	bl	c410 <mpfr_cache@plt>
   46820:	ldr	x0, [sp, #400]
   46824:	mov	x2, x23
   46828:	ldr	x28, [sp, #432]
   4682c:	mov	x1, x19
   46830:	mov	w3, #0x0                   	// #0
   46834:	cmp	x28, x0
   46838:	csel	x28, x28, x0, ge  // ge = tcont
   4683c:	mov	x0, x19
   46840:	bl	c230 <mpfr_add@plt>
   46844:	ldr	x0, [sp, #400]
   46848:	mov	x1, x19
   4684c:	mov	w3, #0x0                   	// #0
   46850:	mov	x2, #0x1                   	// #1
   46854:	sub	x28, x28, x0
   46858:	mov	x0, x19
   4685c:	bl	c350 <mpfr_mul_2ui@plt>
   46860:	add	x28, x28, #0x4
   46864:	ldr	x1, [sp, #112]
   46868:	mov	x2, x21
   4686c:	mov	w3, #0x0                   	// #0
   46870:	mov	x0, x23
   46874:	bl	cca0 <mpfr_jn@plt>
   46878:	mov	x2, x23
   4687c:	mov	x1, x19
   46880:	mov	w3, #0x0                   	// #0
   46884:	mov	x0, x19
   46888:	bl	bdd0 <mpfr_mul@plt>
   4688c:	ldr	x2, [sp, #368]
   46890:	mov	x1, x19
   46894:	ldr	x0, [sp, #400]
   46898:	add	x22, x22, x2
   4689c:	mov	w3, #0x0                   	// #0
   468a0:	mov	x2, x27
   468a4:	add	x28, x28, x0
   468a8:	mov	x0, x19
   468ac:	bl	bbf0 <mpfr_sub@plt>
   468b0:	add	x2, x28, #0x1
   468b4:	cmp	x22, x28
   468b8:	csinc	x22, x2, x22, le
   468bc:	ldr	x2, [sp, #400]
   468c0:	subs	x22, x22, x2
   468c4:	mov	w2, #0x0                   	// #0
   468c8:	csel	x22, x22, xzr, pl  // pl = nfrst
   468cc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   468d0:	ldr	x1, [x0, #2640]
   468d4:	add	x0, x0, #0xa50
   468d8:	blr	x1
   468dc:	ldr	x1, [sp, #96]
   468e0:	add	x1, x1, x0
   468e4:	mov	x0, x25
   468e8:	bl	c410 <mpfr_cache@plt>
   468ec:	mov	x2, x25
   468f0:	mov	x1, x19
   468f4:	mov	x0, x19
   468f8:	mov	w3, #0x0                   	// #0
   468fc:	bl	c6b0 <mpfr_div@plt>
   46900:	ldr	x1, [sp, #400]
   46904:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   46908:	add	x2, x22, #0x2
   4690c:	cmp	x1, x0
   46910:	b.gt	46944 <mpfr_yn@@Base+0x14e0>
   46914:	ldr	x1, [sp, #120]
   46918:	mov	x0, #0xfffffffffffffeff    	// #-257
   4691c:	movk	x0, #0x7fff, lsl #48
   46920:	sub	x0, x0, x24
   46924:	cmp	x0, x1
   46928:	b.ge	469c0 <mpfr_yn@@Base+0x155c>  // b.tcont
   4692c:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   46930:	mov	w1, #0x196                 	// #406
   46934:	add	x2, x2, #0x519
   46938:	b	461dc <mpfr_yn@@Base+0xd78>
   4693c:	mov	x4, #0x3                   	// #3
   46940:	b	4678c <mpfr_yn@@Base+0x1328>
   46944:	ldr	w0, [sp, #152]
   46948:	sub	x2, x24, x2
   4694c:	ldr	x1, [sp, #384]
   46950:	cmp	w0, #0x0
   46954:	ldr	x0, [sp, #408]
   46958:	sub	x1, x1, #0x1
   4695c:	ldr	x3, [x20]
   46960:	asr	x1, x1, #6
   46964:	add	x1, x1, #0x1
   46968:	cinc	x3, x3, eq  // eq = none
   4696c:	bl	c400 <mpfr_round_p@plt>
   46970:	cbz	w0, 46914 <mpfr_yn@@Base+0x14b0>
   46974:	ldr	x0, [sp, #104]
   46978:	ldr	w3, [sp, #392]
   4697c:	tbz	x0, #63, 46988 <mpfr_yn@@Base+0x1524>
   46980:	tbz	w0, #0, 46988 <mpfr_yn@@Base+0x1524>
   46984:	neg	w3, w3
   46988:	ldr	w2, [sp, #152]
   4698c:	mov	x1, x19
   46990:	mov	x0, x20
   46994:	bl	c730 <mpfr_set4@plt>
   46998:	mov	w26, w0
   4699c:	mov	x0, x25
   469a0:	bl	c0f0 <mpfr_clear@plt>
   469a4:	mov	x0, x27
   469a8:	bl	c0f0 <mpfr_clear@plt>
   469ac:	mov	x0, x19
   469b0:	bl	c0f0 <mpfr_clear@plt>
   469b4:	mov	x0, x23
   469b8:	bl	c0f0 <mpfr_clear@plt>
   469bc:	b	462a8 <mpfr_yn@@Base+0xe44>
   469c0:	ldr	x0, [sp, #120]
   469c4:	mov	x26, #0x2                   	// #2
   469c8:	add	x24, x24, x0
   469cc:	sdiv	x0, x24, x26
   469d0:	str	x0, [sp, #120]
   469d4:	b	4610c <mpfr_yn@@Base+0xca8>
   469d8:	cbz	w26, 45510 <mpfr_yn@@Base+0xac>
   469dc:	ldr	w0, [sp, #156]
   469e0:	orr	w0, w0, #0x8
   469e4:	str	w0, [x1]
   469e8:	b	45510 <mpfr_yn@@Base+0xac>

00000000000469ec <mpfr_y0@@Base>:
   469ec:	mov	w3, w2
   469f0:	mov	x2, x1
   469f4:	mov	x1, #0x0                   	// #0
   469f8:	b	c650 <mpfr_yn@plt>

00000000000469fc <mpfr_y1@@Base>:
   469fc:	mov	w3, w2
   46a00:	mov	x2, x1
   46a04:	mov	x1, #0x1                   	// #1
   46a08:	b	c650 <mpfr_yn@plt>
   46a0c:	stp	x29, x30, [sp, #-176]!
   46a10:	mov	x29, sp
   46a14:	stp	x21, x22, [sp, #32]
   46a18:	mov	x22, x1
   46a1c:	stp	x27, x28, [sp, #80]
   46a20:	mov	x27, x0
   46a24:	ldr	w0, [x3, #8]
   46a28:	ldr	x1, [x3, #16]
   46a2c:	stp	x19, x20, [sp, #16]
   46a30:	stp	x23, x24, [sp, #48]
   46a34:	mov	x23, x4
   46a38:	stp	x25, x26, [sp, #64]
   46a3c:	mov	x25, x3
   46a40:	stp	w0, w5, [sp, #108]
   46a44:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   46a48:	cmp	x1, x0
   46a4c:	b.le	46a90 <mpfr_y1@@Base+0x94>
   46a50:	ldr	x1, [x4, #16]
   46a54:	cmp	x1, x0
   46a58:	b.gt	46afc <mpfr_y1@@Base+0x100>
   46a5c:	ldr	x0, [x23, #16]
   46a60:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
   46a64:	add	x0, x0, x1
   46a68:	cmp	x0, #0x1
   46a6c:	b.ls	46aa8 <mpfr_y1@@Base+0xac>  // b.plast
   46a70:	cbz	x22, 46a78 <mpfr_y1@@Base+0x7c>
   46a74:	str	xzr, [x22]
   46a78:	ldp	w3, w2, [sp, #108]
   46a7c:	mov	x1, x25
   46a80:	mov	x0, x27
   46a84:	bl	c730 <mpfr_set4@plt>
   46a88:	mov	w3, w0
   46a8c:	b	46adc <mpfr_y1@@Base+0xe0>
   46a90:	mov	x2, #0x2                   	// #2
   46a94:	movk	x2, #0x8000, lsl #48
   46a98:	cmp	x1, x2
   46a9c:	b.eq	46aa8 <mpfr_y1@@Base+0xac>  // b.none
   46aa0:	cmp	x1, x0
   46aa4:	b.ne	46a5c <mpfr_y1@@Base+0x60>  // b.any
   46aa8:	mov	x0, #0x2                   	// #2
   46aac:	mov	w3, #0x0                   	// #0
   46ab0:	movk	x0, #0x8000, lsl #48
   46ab4:	str	x0, [x27, #16]
   46ab8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   46abc:	ldr	x1, [x0, #2592]
   46ac0:	add	x0, x0, #0xa20
   46ac4:	blr	x1
   46ac8:	mrs	x1, tpidr_el0
   46acc:	add	x0, x1, x0
   46ad0:	ldr	w1, [x0]
   46ad4:	orr	w1, w1, #0x4
   46ad8:	str	w1, [x0]
   46adc:	mov	w0, w3
   46ae0:	ldp	x19, x20, [sp, #16]
   46ae4:	ldp	x21, x22, [sp, #32]
   46ae8:	ldp	x23, x24, [sp, #48]
   46aec:	ldp	x25, x26, [sp, #64]
   46af0:	ldp	x27, x28, [sp, #80]
   46af4:	ldp	x29, x30, [sp], #176
   46af8:	ret
   46afc:	add	x21, sp, #0x80
   46b00:	mov	w24, w2
   46b04:	add	x19, sp, #0x90
   46b08:	mov	x0, x21
   46b0c:	bl	c010 <mpfr_mpz_init@plt>
   46b10:	add	x20, sp, #0xa0
   46b14:	mov	x0, x19
   46b18:	bl	c010 <mpfr_mpz_init@plt>
   46b1c:	mov	x0, x20
   46b20:	bl	c010 <mpfr_mpz_init@plt>
   46b24:	mov	x1, x25
   46b28:	mov	x0, x21
   46b2c:	bl	cb50 <mpfr_get_z_2exp@plt>
   46b30:	mov	x26, x0
   46b34:	mov	x1, x23
   46b38:	mov	x0, x19
   46b3c:	bl	cb50 <mpfr_get_z_2exp@plt>
   46b40:	mov	x25, x0
   46b44:	ldr	w2, [sp, #108]
   46b48:	mov	w0, #0xffffffff            	// #-1
   46b4c:	ldr	w1, [x23, #8]
   46b50:	cmp	w1, w2
   46b54:	ldr	w1, [sp, #132]
   46b58:	cneg	w0, w0, eq  // eq = none
   46b5c:	str	w0, [sp, #116]
   46b60:	cmp	w1, #0x0
   46b64:	mov	x0, x19
   46b68:	cneg	w1, w1, lt  // lt = tstop
   46b6c:	str	w1, [sp, #132]
   46b70:	ldr	w1, [sp, #148]
   46b74:	cmp	w1, #0x0
   46b78:	cneg	w1, w1, lt  // lt = tstop
   46b7c:	str	w1, [sp, #148]
   46b80:	mov	x1, #0x0                   	// #0
   46b84:	bl	bb10 <__gmpz_scan1@plt>
   46b88:	mov	x2, x0
   46b8c:	add	x25, x25, x0
   46b90:	mov	x1, x19
   46b94:	mov	x0, x19
   46b98:	bl	c1c0 <__gmpz_fdiv_q_2exp@plt>
   46b9c:	cmp	x26, x25
   46ba0:	b.gt	46cc0 <mpfr_y1@@Base+0x2c4>
   46ba4:	mov	w1, #0x2                   	// #2
   46ba8:	mov	x0, x21
   46bac:	bl	cbf0 <__gmpz_sizeinbase@plt>
   46bb0:	add	x23, x0, x26
   46bb4:	mov	w1, #0x2                   	// #2
   46bb8:	mov	x0, x19
   46bbc:	bl	cbf0 <__gmpz_sizeinbase@plt>
   46bc0:	add	x0, x0, x25
   46bc4:	cmp	x23, x0
   46bc8:	b.ge	46c8c <mpfr_y1@@Base+0x290>  // b.tcont
   46bcc:	mov	w28, #0x1                   	// #1
   46bd0:	mov	x1, x21
   46bd4:	mov	x0, x20
   46bd8:	bl	c020 <__gmpz_set@plt>
   46bdc:	mov	x0, x21
   46be0:	mov	x1, #0x0                   	// #0
   46be4:	bl	bd30 <__gmpz_set_ui@plt>
   46be8:	cbnz	w24, 46cb8 <mpfr_y1@@Base+0x2bc>
   46bec:	mov	x0, x21
   46bf0:	mov	x1, #0x0                   	// #0
   46bf4:	bl	c060 <__gmpz_tstbit@plt>
   46bf8:	mov	w23, w0
   46bfc:	cbz	x22, 46c1c <mpfr_y1@@Base+0x220>
   46c00:	mov	x1, x21
   46c04:	mov	x2, #0x3f                  	// #63
   46c08:	mov	x0, x21
   46c0c:	bl	bab0 <__gmpz_tdiv_r_2exp@plt>
   46c10:	mov	x0, x21
   46c14:	bl	baa0 <__gmpz_get_si@plt>
   46c18:	str	x0, [x22]
   46c1c:	ldr	w3, [sp, #164]
   46c20:	cbnz	w3, 46dac <mpfr_y1@@Base+0x3b0>
   46c24:	mov	w0, #0x1                   	// #1
   46c28:	str	w0, [x27, #8]
   46c2c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   46c30:	str	x0, [x27, #16]
   46c34:	ldr	w0, [sp, #108]
   46c38:	tbz	w0, #31, 46c54 <mpfr_y1@@Base+0x258>
   46c3c:	mov	x1, x27
   46c40:	mov	x0, x27
   46c44:	mov	w2, #0x0                   	// #0
   46c48:	str	w3, [sp, #108]
   46c4c:	bl	bdf0 <mpfr_neg@plt>
   46c50:	ldr	w3, [sp, #108]
   46c54:	cbz	x22, 46c68 <mpfr_y1@@Base+0x26c>
   46c58:	ldrsw	x1, [sp, #116]
   46c5c:	ldr	x0, [x22]
   46c60:	mul	x0, x0, x1
   46c64:	str	x0, [x22]
   46c68:	mov	x0, x21
   46c6c:	str	w3, [sp, #108]
   46c70:	bl	c200 <mpfr_mpz_clear@plt>
   46c74:	mov	x0, x19
   46c78:	bl	c200 <mpfr_mpz_clear@plt>
   46c7c:	mov	x0, x20
   46c80:	bl	c200 <mpfr_mpz_clear@plt>
   46c84:	ldr	w3, [sp, #108]
   46c88:	b	46adc <mpfr_y1@@Base+0xe0>
   46c8c:	sub	x2, x25, x26
   46c90:	mov	x1, x19
   46c94:	mov	x0, x19
   46c98:	bl	c290 <__gmpz_mul_2exp@plt>
   46c9c:	mov	x3, x19
   46ca0:	mov	x2, x21
   46ca4:	mov	x1, x20
   46ca8:	mov	x0, x21
   46cac:	mov	w28, #0x0                   	// #0
   46cb0:	bl	bb50 <__gmpz_tdiv_qr@plt>
   46cb4:	b	46be8 <mpfr_y1@@Base+0x1ec>
   46cb8:	mov	w23, #0x0                   	// #0
   46cbc:	b	46bfc <mpfr_y1@@Base+0x200>
   46cc0:	cbz	x22, 46d54 <mpfr_y1@@Base+0x358>
   46cc4:	mov	x2, #0x3f                  	// #63
   46cc8:	mov	x1, x19
   46ccc:	mov	x0, x19
   46cd0:	bl	c290 <__gmpz_mul_2exp@plt>
   46cd4:	mov	x0, x20
   46cd8:	mov	x1, #0x2                   	// #2
   46cdc:	bl	bd30 <__gmpz_set_ui@plt>
   46ce0:	mov	x3, x19
   46ce4:	sub	x2, x26, x25
   46ce8:	mov	x1, x20
   46cec:	mov	x0, x20
   46cf0:	bl	cc50 <__gmpz_powm_ui@plt>
   46cf4:	mov	x2, x21
   46cf8:	mov	x1, x20
   46cfc:	mov	x0, x20
   46d00:	bl	c070 <__gmpz_mul@plt>
   46d04:	mov	x2, x19
   46d08:	mov	x1, x20
   46d0c:	mov	x0, x20
   46d10:	bl	c930 <__gmpz_mod@plt>
   46d14:	cbz	x22, 46d60 <mpfr_y1@@Base+0x364>
   46d18:	mov	x1, x19
   46d1c:	mov	x0, x19
   46d20:	mov	x2, #0x3f                  	// #63
   46d24:	bl	c1c0 <__gmpz_fdiv_q_2exp@plt>
   46d28:	mov	x3, x19
   46d2c:	mov	x2, x20
   46d30:	mov	x1, x20
   46d34:	mov	x0, x21
   46d38:	bl	bb50 <__gmpz_tdiv_qr@plt>
   46d3c:	mov	w28, #0x0                   	// #0
   46d40:	mov	x0, x21
   46d44:	bl	baa0 <__gmpz_get_si@plt>
   46d48:	and	w23, w0, #0x1
   46d4c:	str	x0, [x22]
   46d50:	b	46c1c <mpfr_y1@@Base+0x220>
   46d54:	cbnz	w24, 46cd4 <mpfr_y1@@Base+0x2d8>
   46d58:	mov	x2, #0x1                   	// #1
   46d5c:	b	46cc8 <mpfr_y1@@Base+0x2cc>
   46d60:	cbnz	w24, 46da0 <mpfr_y1@@Base+0x3a4>
   46d64:	mov	x2, #0x1                   	// #1
   46d68:	mov	x1, x19
   46d6c:	mov	x0, x19
   46d70:	bl	c1c0 <__gmpz_fdiv_q_2exp@plt>
   46d74:	mov	x1, x19
   46d78:	mov	x0, x20
   46d7c:	bl	bf60 <__gmpz_cmpabs@plt>
   46d80:	tbnz	w0, #31, 46da0 <mpfr_y1@@Base+0x3a4>
   46d84:	mov	x2, x19
   46d88:	mov	x1, x20
   46d8c:	mov	x0, x20
   46d90:	mov	w28, #0x0                   	// #0
   46d94:	mov	w23, #0x1                   	// #1
   46d98:	bl	be60 <__gmpz_sub@plt>
   46d9c:	b	46c1c <mpfr_y1@@Base+0x220>
   46da0:	mov	w28, #0x0                   	// #0
   46da4:	mov	w23, #0x0                   	// #0
   46da8:	b	46c1c <mpfr_y1@@Base+0x220>
   46dac:	cbnz	w24, 46e54 <mpfr_y1@@Base+0x458>
   46db0:	mov	x1, x20
   46db4:	mov	x0, x20
   46db8:	mov	x2, #0x1                   	// #1
   46dbc:	bl	c290 <__gmpz_mul_2exp@plt>
   46dc0:	cbz	w28, 46e04 <mpfr_y1@@Base+0x408>
   46dc4:	mov	w1, #0x2                   	// #2
   46dc8:	mov	x0, x20
   46dcc:	bl	cbf0 <__gmpz_sizeinbase@plt>
   46dd0:	add	x2, x0, x26
   46dd4:	mov	w1, #0x2                   	// #2
   46dd8:	mov	x0, x19
   46ddc:	str	x2, [sp, #120]
   46de0:	bl	cbf0 <__gmpz_sizeinbase@plt>
   46de4:	add	x0, x0, x25
   46de8:	ldr	x2, [sp, #120]
   46dec:	cmp	x2, x0
   46df0:	b.lt	46e14 <mpfr_y1@@Base+0x418>  // b.tstop
   46df4:	sub	x2, x25, x26
   46df8:	mov	x1, x19
   46dfc:	mov	x0, x19
   46e00:	bl	c290 <__gmpz_mul_2exp@plt>
   46e04:	mov	x1, x19
   46e08:	mov	x0, x20
   46e0c:	bl	bf60 <__gmpz_cmpabs@plt>
   46e10:	mov	w24, w0
   46e14:	mov	x1, x20
   46e18:	mov	x0, x20
   46e1c:	mov	x2, #0x1                   	// #1
   46e20:	bl	c1c0 <__gmpz_fdiv_q_2exp@plt>
   46e24:	cmp	w24, #0x0
   46e28:	b.gt	46e34 <mpfr_y1@@Base+0x438>
   46e2c:	b.ne	46e54 <mpfr_y1@@Base+0x458>  // b.any
   46e30:	cbz	w23, 46e54 <mpfr_y1@@Base+0x458>
   46e34:	mov	x2, x19
   46e38:	mov	x1, x20
   46e3c:	mov	x0, x20
   46e40:	bl	be60 <__gmpz_sub@plt>
   46e44:	cbz	x22, 46e54 <mpfr_y1@@Base+0x458>
   46e48:	ldr	x0, [x22]
   46e4c:	add	x0, x0, #0x1
   46e50:	str	x0, [x22]
   46e54:	ldr	w0, [sp, #108]
   46e58:	tbz	w0, #31, 46e68 <mpfr_y1@@Base+0x46c>
   46e5c:	ldr	w0, [sp, #164]
   46e60:	neg	w0, w0
   46e64:	str	w0, [sp, #164]
   46e68:	ldr	w3, [sp, #112]
   46e6c:	cmp	x26, x25
   46e70:	csel	x2, x26, x25, le
   46e74:	mov	x1, x20
   46e78:	mov	x0, x27
   46e7c:	bl	c580 <mpfr_set_z_2exp@plt>
   46e80:	mov	w3, w0
   46e84:	b	46c54 <mpfr_y1@@Base+0x258>

0000000000046e88 <mpfr_remainder@@Base>:
   46e88:	mov	w5, w3
   46e8c:	mov	x4, x2
   46e90:	mov	x3, x1
   46e94:	mov	w2, #0x0                   	// #0
   46e98:	mov	x1, #0x0                   	// #0
   46e9c:	b	46a0c <mpfr_y1@@Base+0x10>

0000000000046ea0 <mpfr_remquo@@Base>:
   46ea0:	mov	w5, w4
   46ea4:	mov	x4, x3
   46ea8:	mov	x3, x2
   46eac:	mov	w2, #0x0                   	// #0
   46eb0:	b	46a0c <mpfr_y1@@Base+0x10>

0000000000046eb4 <mpfr_fmod@@Base>:
   46eb4:	mov	w5, w3
   46eb8:	mov	x4, x2
   46ebc:	mov	x3, x1
   46ec0:	mov	w2, #0x1                   	// #1
   46ec4:	mov	x1, #0x0                   	// #0
   46ec8:	b	46a0c <mpfr_y1@@Base+0x10>

0000000000046ecc <mpfr_fmodquo@@Base>:
   46ecc:	mov	w5, w4
   46ed0:	mov	x4, x3
   46ed4:	mov	x3, x2
   46ed8:	mov	w2, #0x1                   	// #1
   46edc:	b	46a0c <mpfr_y1@@Base+0x10>

0000000000046ee0 <mpfr_get_patches@@Base>:
   46ee0:	adrp	x0, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   46ee4:	add	x0, x0, #0xd57
   46ee8:	ret

0000000000046eec <mpfr_add_d@@Base>:
   46eec:	stp	x29, x30, [sp, #-144]!
   46ef0:	mrs	x4, tpidr_el0
   46ef4:	mov	x29, sp
   46ef8:	stp	x19, x20, [sp, #16]
   46efc:	mov	x20, x0
   46f00:	stp	x23, x24, [sp, #48]
   46f04:	mov	x24, x1
   46f08:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   46f0c:	ldr	x1, [x0, #2592]
   46f10:	add	x0, x0, #0xa20
   46f14:	blr	x1
   46f18:	ldr	w19, [x4, x0]
   46f1c:	add	x23, sp, #0x70
   46f20:	stp	x21, x22, [sp, #32]
   46f24:	add	x22, x4, x0
   46f28:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   46f2c:	ldr	x1, [x0, #2528]
   46f30:	add	x0, x0, #0x9e0
   46f34:	blr	x1
   46f38:	stp	x27, x28, [sp, #80]
   46f3c:	add	x28, x4, x0
   46f40:	mov	w21, w2
   46f44:	stp	x25, x26, [sp, #64]
   46f48:	ldr	x26, [x4, x0]
   46f4c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   46f50:	ldr	x1, [x0, #2560]
   46f54:	add	x0, x0, #0xa00
   46f58:	blr	x1
   46f5c:	add	x27, x4, x0
   46f60:	mov	w1, w2
   46f64:	ldr	x25, [x4, x0]
   46f68:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   46f6c:	str	x0, [x28]
   46f70:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   46f74:	str	x0, [x27]
   46f78:	mov	x0, #0x35                  	// #53
   46f7c:	str	x0, [sp, #112]
   46f80:	add	x0, sp, #0x68
   46f84:	str	x0, [sp, #136]
   46f88:	mov	w0, #0x1                   	// #1
   46f8c:	str	w0, [sp, #120]
   46f90:	mov	x0, x23
   46f94:	bl	bec0 <mpfr_set_d@plt>
   46f98:	str	wzr, [x22]
   46f9c:	mov	x2, x23
   46fa0:	mov	x1, x24
   46fa4:	mov	w3, w21
   46fa8:	mov	x0, x20
   46fac:	bl	c230 <mpfr_add@plt>
   46fb0:	str	x25, [x27]
   46fb4:	ldr	w1, [x22]
   46fb8:	ldr	x2, [x20, #16]
   46fbc:	orr	w1, w19, w1
   46fc0:	str	x26, [x28]
   46fc4:	str	w1, [x22]
   46fc8:	cmp	x26, x2
   46fcc:	b.gt	46ff8 <mpfr_add_d@@Base+0x10c>
   46fd0:	cmp	x25, x2
   46fd4:	b.lt	46ff8 <mpfr_add_d@@Base+0x10c>  // b.tstop
   46fd8:	cbnz	w0, 4700c <mpfr_add_d@@Base+0x120>
   46fdc:	ldp	x19, x20, [sp, #16]
   46fe0:	ldp	x21, x22, [sp, #32]
   46fe4:	ldp	x23, x24, [sp, #48]
   46fe8:	ldp	x25, x26, [sp, #64]
   46fec:	ldp	x27, x28, [sp, #80]
   46ff0:	ldp	x29, x30, [sp], #144
   46ff4:	ret
   46ff8:	mov	w1, w0
   46ffc:	mov	w2, w21
   47000:	mov	x0, x20
   47004:	bl	cbc0 <mpfr_check_range@plt>
   47008:	b	46fdc <mpfr_add_d@@Base+0xf0>
   4700c:	orr	w1, w1, #0x8
   47010:	str	w1, [x22]
   47014:	b	46fdc <mpfr_add_d@@Base+0xf0>

0000000000047018 <mpfr_sub_d@@Base>:
   47018:	stp	x29, x30, [sp, #-144]!
   4701c:	mrs	x4, tpidr_el0
   47020:	mov	x29, sp
   47024:	stp	x19, x20, [sp, #16]
   47028:	mov	x20, x0
   4702c:	stp	x23, x24, [sp, #48]
   47030:	mov	x24, x1
   47034:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   47038:	ldr	x1, [x0, #2592]
   4703c:	add	x0, x0, #0xa20
   47040:	blr	x1
   47044:	ldr	w19, [x4, x0]
   47048:	add	x23, sp, #0x70
   4704c:	stp	x21, x22, [sp, #32]
   47050:	add	x22, x4, x0
   47054:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   47058:	ldr	x1, [x0, #2528]
   4705c:	add	x0, x0, #0x9e0
   47060:	blr	x1
   47064:	stp	x27, x28, [sp, #80]
   47068:	add	x28, x4, x0
   4706c:	mov	w21, w2
   47070:	stp	x25, x26, [sp, #64]
   47074:	ldr	x26, [x4, x0]
   47078:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4707c:	ldr	x1, [x0, #2560]
   47080:	add	x0, x0, #0xa00
   47084:	blr	x1
   47088:	add	x27, x4, x0
   4708c:	mov	w1, w2
   47090:	ldr	x25, [x4, x0]
   47094:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   47098:	str	x0, [x28]
   4709c:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   470a0:	str	x0, [x27]
   470a4:	mov	x0, #0x35                  	// #53
   470a8:	str	x0, [sp, #112]
   470ac:	add	x0, sp, #0x68
   470b0:	str	x0, [sp, #136]
   470b4:	mov	w0, #0x1                   	// #1
   470b8:	str	w0, [sp, #120]
   470bc:	mov	x0, x23
   470c0:	bl	bec0 <mpfr_set_d@plt>
   470c4:	str	wzr, [x22]
   470c8:	mov	x2, x23
   470cc:	mov	x1, x24
   470d0:	mov	w3, w21
   470d4:	mov	x0, x20
   470d8:	bl	bbf0 <mpfr_sub@plt>
   470dc:	str	x25, [x27]
   470e0:	ldr	w1, [x22]
   470e4:	ldr	x2, [x20, #16]
   470e8:	orr	w1, w19, w1
   470ec:	str	x26, [x28]
   470f0:	str	w1, [x22]
   470f4:	cmp	x26, x2
   470f8:	b.gt	47124 <mpfr_sub_d@@Base+0x10c>
   470fc:	cmp	x25, x2
   47100:	b.lt	47124 <mpfr_sub_d@@Base+0x10c>  // b.tstop
   47104:	cbnz	w0, 47138 <mpfr_sub_d@@Base+0x120>
   47108:	ldp	x19, x20, [sp, #16]
   4710c:	ldp	x21, x22, [sp, #32]
   47110:	ldp	x23, x24, [sp, #48]
   47114:	ldp	x25, x26, [sp, #64]
   47118:	ldp	x27, x28, [sp, #80]
   4711c:	ldp	x29, x30, [sp], #144
   47120:	ret
   47124:	mov	w1, w0
   47128:	mov	w2, w21
   4712c:	mov	x0, x20
   47130:	bl	cbc0 <mpfr_check_range@plt>
   47134:	b	47108 <mpfr_sub_d@@Base+0xf0>
   47138:	orr	w1, w1, #0x8
   4713c:	str	w1, [x22]
   47140:	b	47108 <mpfr_sub_d@@Base+0xf0>

0000000000047144 <mpfr_d_sub@@Base>:
   47144:	stp	x29, x30, [sp, #-144]!
   47148:	mrs	x4, tpidr_el0
   4714c:	mov	x29, sp
   47150:	stp	x19, x20, [sp, #16]
   47154:	mov	x20, x0
   47158:	stp	x23, x24, [sp, #48]
   4715c:	mov	x24, x1
   47160:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   47164:	ldr	x1, [x0, #2592]
   47168:	add	x0, x0, #0xa20
   4716c:	blr	x1
   47170:	ldr	w19, [x4, x0]
   47174:	add	x23, sp, #0x70
   47178:	stp	x21, x22, [sp, #32]
   4717c:	add	x22, x4, x0
   47180:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   47184:	ldr	x1, [x0, #2528]
   47188:	add	x0, x0, #0x9e0
   4718c:	blr	x1
   47190:	stp	x27, x28, [sp, #80]
   47194:	add	x28, x4, x0
   47198:	mov	w21, w2
   4719c:	stp	x25, x26, [sp, #64]
   471a0:	ldr	x26, [x4, x0]
   471a4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   471a8:	ldr	x1, [x0, #2560]
   471ac:	add	x0, x0, #0xa00
   471b0:	blr	x1
   471b4:	add	x27, x4, x0
   471b8:	mov	w1, w2
   471bc:	ldr	x25, [x4, x0]
   471c0:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   471c4:	str	x0, [x28]
   471c8:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   471cc:	str	x0, [x27]
   471d0:	mov	x0, #0x35                  	// #53
   471d4:	str	x0, [sp, #112]
   471d8:	add	x0, sp, #0x68
   471dc:	str	x0, [sp, #136]
   471e0:	mov	w0, #0x1                   	// #1
   471e4:	str	w0, [sp, #120]
   471e8:	mov	x0, x23
   471ec:	bl	bec0 <mpfr_set_d@plt>
   471f0:	str	wzr, [x22]
   471f4:	mov	x2, x24
   471f8:	mov	x1, x23
   471fc:	mov	w3, w21
   47200:	mov	x0, x20
   47204:	bl	bbf0 <mpfr_sub@plt>
   47208:	str	x25, [x27]
   4720c:	ldr	w1, [x22]
   47210:	ldr	x2, [x20, #16]
   47214:	orr	w1, w19, w1
   47218:	str	x26, [x28]
   4721c:	str	w1, [x22]
   47220:	cmp	x26, x2
   47224:	b.gt	47250 <mpfr_d_sub@@Base+0x10c>
   47228:	cmp	x25, x2
   4722c:	b.lt	47250 <mpfr_d_sub@@Base+0x10c>  // b.tstop
   47230:	cbnz	w0, 47264 <mpfr_d_sub@@Base+0x120>
   47234:	ldp	x19, x20, [sp, #16]
   47238:	ldp	x21, x22, [sp, #32]
   4723c:	ldp	x23, x24, [sp, #48]
   47240:	ldp	x25, x26, [sp, #64]
   47244:	ldp	x27, x28, [sp, #80]
   47248:	ldp	x29, x30, [sp], #144
   4724c:	ret
   47250:	mov	w1, w0
   47254:	mov	w2, w21
   47258:	mov	x0, x20
   4725c:	bl	cbc0 <mpfr_check_range@plt>
   47260:	b	47234 <mpfr_d_sub@@Base+0xf0>
   47264:	orr	w1, w1, #0x8
   47268:	str	w1, [x22]
   4726c:	b	47234 <mpfr_d_sub@@Base+0xf0>

0000000000047270 <mpfr_mul_d@@Base>:
   47270:	stp	x29, x30, [sp, #-144]!
   47274:	mrs	x4, tpidr_el0
   47278:	mov	x29, sp
   4727c:	stp	x19, x20, [sp, #16]
   47280:	mov	x20, x0
   47284:	stp	x23, x24, [sp, #48]
   47288:	mov	x24, x1
   4728c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   47290:	ldr	x1, [x0, #2592]
   47294:	add	x0, x0, #0xa20
   47298:	blr	x1
   4729c:	ldr	w19, [x4, x0]
   472a0:	add	x23, sp, #0x70
   472a4:	stp	x21, x22, [sp, #32]
   472a8:	add	x22, x4, x0
   472ac:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   472b0:	ldr	x1, [x0, #2528]
   472b4:	add	x0, x0, #0x9e0
   472b8:	blr	x1
   472bc:	stp	x27, x28, [sp, #80]
   472c0:	add	x28, x4, x0
   472c4:	mov	w21, w2
   472c8:	stp	x25, x26, [sp, #64]
   472cc:	ldr	x26, [x4, x0]
   472d0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   472d4:	ldr	x1, [x0, #2560]
   472d8:	add	x0, x0, #0xa00
   472dc:	blr	x1
   472e0:	add	x27, x4, x0
   472e4:	mov	w1, w2
   472e8:	ldr	x25, [x4, x0]
   472ec:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   472f0:	str	x0, [x28]
   472f4:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   472f8:	str	x0, [x27]
   472fc:	mov	x0, #0x35                  	// #53
   47300:	str	x0, [sp, #112]
   47304:	add	x0, sp, #0x68
   47308:	str	x0, [sp, #136]
   4730c:	mov	w0, #0x1                   	// #1
   47310:	str	w0, [sp, #120]
   47314:	mov	x0, x23
   47318:	bl	bec0 <mpfr_set_d@plt>
   4731c:	str	wzr, [x22]
   47320:	mov	x2, x23
   47324:	mov	x1, x24
   47328:	mov	w3, w21
   4732c:	mov	x0, x20
   47330:	bl	bdd0 <mpfr_mul@plt>
   47334:	str	x25, [x27]
   47338:	ldr	w1, [x22]
   4733c:	ldr	x2, [x20, #16]
   47340:	orr	w1, w19, w1
   47344:	str	x26, [x28]
   47348:	str	w1, [x22]
   4734c:	cmp	x26, x2
   47350:	b.gt	4737c <mpfr_mul_d@@Base+0x10c>
   47354:	cmp	x25, x2
   47358:	b.lt	4737c <mpfr_mul_d@@Base+0x10c>  // b.tstop
   4735c:	cbnz	w0, 47390 <mpfr_mul_d@@Base+0x120>
   47360:	ldp	x19, x20, [sp, #16]
   47364:	ldp	x21, x22, [sp, #32]
   47368:	ldp	x23, x24, [sp, #48]
   4736c:	ldp	x25, x26, [sp, #64]
   47370:	ldp	x27, x28, [sp, #80]
   47374:	ldp	x29, x30, [sp], #144
   47378:	ret
   4737c:	mov	w1, w0
   47380:	mov	w2, w21
   47384:	mov	x0, x20
   47388:	bl	cbc0 <mpfr_check_range@plt>
   4738c:	b	47360 <mpfr_mul_d@@Base+0xf0>
   47390:	orr	w1, w1, #0x8
   47394:	str	w1, [x22]
   47398:	b	47360 <mpfr_mul_d@@Base+0xf0>

000000000004739c <mpfr_div_d@@Base>:
   4739c:	stp	x29, x30, [sp, #-144]!
   473a0:	mrs	x4, tpidr_el0
   473a4:	mov	x29, sp
   473a8:	stp	x19, x20, [sp, #16]
   473ac:	mov	x20, x0
   473b0:	stp	x23, x24, [sp, #48]
   473b4:	mov	x24, x1
   473b8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   473bc:	ldr	x1, [x0, #2592]
   473c0:	add	x0, x0, #0xa20
   473c4:	blr	x1
   473c8:	ldr	w19, [x4, x0]
   473cc:	add	x23, sp, #0x70
   473d0:	stp	x21, x22, [sp, #32]
   473d4:	add	x22, x4, x0
   473d8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   473dc:	ldr	x1, [x0, #2528]
   473e0:	add	x0, x0, #0x9e0
   473e4:	blr	x1
   473e8:	stp	x27, x28, [sp, #80]
   473ec:	add	x28, x4, x0
   473f0:	mov	w21, w2
   473f4:	stp	x25, x26, [sp, #64]
   473f8:	ldr	x26, [x4, x0]
   473fc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   47400:	ldr	x1, [x0, #2560]
   47404:	add	x0, x0, #0xa00
   47408:	blr	x1
   4740c:	add	x27, x4, x0
   47410:	mov	w1, w2
   47414:	ldr	x25, [x4, x0]
   47418:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   4741c:	str	x0, [x28]
   47420:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   47424:	str	x0, [x27]
   47428:	mov	x0, #0x35                  	// #53
   4742c:	str	x0, [sp, #112]
   47430:	add	x0, sp, #0x68
   47434:	str	x0, [sp, #136]
   47438:	mov	w0, #0x1                   	// #1
   4743c:	str	w0, [sp, #120]
   47440:	mov	x0, x23
   47444:	bl	bec0 <mpfr_set_d@plt>
   47448:	str	wzr, [x22]
   4744c:	mov	x2, x23
   47450:	mov	x1, x24
   47454:	mov	w3, w21
   47458:	mov	x0, x20
   4745c:	bl	c6b0 <mpfr_div@plt>
   47460:	str	x25, [x27]
   47464:	ldr	w1, [x22]
   47468:	ldr	x2, [x20, #16]
   4746c:	orr	w1, w19, w1
   47470:	str	x26, [x28]
   47474:	str	w1, [x22]
   47478:	cmp	x26, x2
   4747c:	b.gt	474a8 <mpfr_div_d@@Base+0x10c>
   47480:	cmp	x25, x2
   47484:	b.lt	474a8 <mpfr_div_d@@Base+0x10c>  // b.tstop
   47488:	cbnz	w0, 474bc <mpfr_div_d@@Base+0x120>
   4748c:	ldp	x19, x20, [sp, #16]
   47490:	ldp	x21, x22, [sp, #32]
   47494:	ldp	x23, x24, [sp, #48]
   47498:	ldp	x25, x26, [sp, #64]
   4749c:	ldp	x27, x28, [sp, #80]
   474a0:	ldp	x29, x30, [sp], #144
   474a4:	ret
   474a8:	mov	w1, w0
   474ac:	mov	w2, w21
   474b0:	mov	x0, x20
   474b4:	bl	cbc0 <mpfr_check_range@plt>
   474b8:	b	4748c <mpfr_div_d@@Base+0xf0>
   474bc:	orr	w1, w1, #0x8
   474c0:	str	w1, [x22]
   474c4:	b	4748c <mpfr_div_d@@Base+0xf0>

00000000000474c8 <mpfr_d_div@@Base>:
   474c8:	stp	x29, x30, [sp, #-144]!
   474cc:	mrs	x4, tpidr_el0
   474d0:	mov	x29, sp
   474d4:	stp	x19, x20, [sp, #16]
   474d8:	mov	x20, x0
   474dc:	stp	x23, x24, [sp, #48]
   474e0:	mov	x24, x1
   474e4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   474e8:	ldr	x1, [x0, #2592]
   474ec:	add	x0, x0, #0xa20
   474f0:	blr	x1
   474f4:	ldr	w19, [x4, x0]
   474f8:	add	x23, sp, #0x70
   474fc:	stp	x21, x22, [sp, #32]
   47500:	add	x22, x4, x0
   47504:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   47508:	ldr	x1, [x0, #2528]
   4750c:	add	x0, x0, #0x9e0
   47510:	blr	x1
   47514:	stp	x27, x28, [sp, #80]
   47518:	add	x28, x4, x0
   4751c:	mov	w21, w2
   47520:	stp	x25, x26, [sp, #64]
   47524:	ldr	x26, [x4, x0]
   47528:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4752c:	ldr	x1, [x0, #2560]
   47530:	add	x0, x0, #0xa00
   47534:	blr	x1
   47538:	add	x27, x4, x0
   4753c:	mov	w1, w2
   47540:	ldr	x25, [x4, x0]
   47544:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   47548:	str	x0, [x28]
   4754c:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   47550:	str	x0, [x27]
   47554:	mov	x0, #0x35                  	// #53
   47558:	str	x0, [sp, #112]
   4755c:	add	x0, sp, #0x68
   47560:	str	x0, [sp, #136]
   47564:	mov	w0, #0x1                   	// #1
   47568:	str	w0, [sp, #120]
   4756c:	mov	x0, x23
   47570:	bl	bec0 <mpfr_set_d@plt>
   47574:	str	wzr, [x22]
   47578:	mov	x2, x24
   4757c:	mov	x1, x23
   47580:	mov	w3, w21
   47584:	mov	x0, x20
   47588:	bl	c6b0 <mpfr_div@plt>
   4758c:	str	x25, [x27]
   47590:	ldr	w1, [x22]
   47594:	ldr	x2, [x20, #16]
   47598:	orr	w1, w19, w1
   4759c:	str	x26, [x28]
   475a0:	str	w1, [x22]
   475a4:	cmp	x26, x2
   475a8:	b.gt	475d4 <mpfr_d_div@@Base+0x10c>
   475ac:	cmp	x25, x2
   475b0:	b.lt	475d4 <mpfr_d_div@@Base+0x10c>  // b.tstop
   475b4:	cbnz	w0, 475e8 <mpfr_d_div@@Base+0x120>
   475b8:	ldp	x19, x20, [sp, #16]
   475bc:	ldp	x21, x22, [sp, #32]
   475c0:	ldp	x23, x24, [sp, #48]
   475c4:	ldp	x25, x26, [sp, #64]
   475c8:	ldp	x27, x28, [sp, #80]
   475cc:	ldp	x29, x30, [sp], #144
   475d0:	ret
   475d4:	mov	w1, w0
   475d8:	mov	w2, w21
   475dc:	mov	x0, x20
   475e0:	bl	cbc0 <mpfr_check_range@plt>
   475e4:	b	475b8 <mpfr_d_div@@Base+0xf0>
   475e8:	orr	w1, w1, #0x8
   475ec:	str	w1, [x22]
   475f0:	b	475b8 <mpfr_d_div@@Base+0xf0>
   475f4:	stp	x29, x30, [sp, #-272]!
   475f8:	mov	x29, sp
   475fc:	stp	x27, x28, [sp, #80]
   47600:	ldr	x27, [x0]
   47604:	stp	x19, x20, [sp, #16]
   47608:	mov	x20, x1
   4760c:	stp	x21, x22, [sp, #32]
   47610:	cmp	x27, #0x1
   47614:	stp	x23, x24, [sp, #48]
   47618:	stp	x25, x26, [sp, #64]
   4761c:	str	x0, [sp, #96]
   47620:	str	w2, [sp, #108]
   47624:	b.eq	47828 <mpfr_d_div@@Base+0x360>  // b.none
   47628:	b.gt	47644 <mpfr_d_div@@Base+0x17c>
   4762c:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   47630:	add	x2, x2, #0x6fb
   47634:	mov	w1, #0x31                  	// #49
   47638:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   4763c:	add	x0, x0, #0x706
   47640:	bl	cbd0 <mpfr_assert_fail@plt>
   47644:	sub	x19, x27, #0x1
   47648:	clz	x0, x19
   4764c:	mov	w19, #0x40                  	// #64
   47650:	sub	w19, w19, w0
   47654:	sxtw	x19, w19
   47658:	add	x19, x19, x27
   4765c:	add	x21, sp, #0x90
   47660:	add	x19, x19, #0x4
   47664:	mov	x0, x21
   47668:	mov	x1, x19
   4766c:	add	x22, sp, #0xb0
   47670:	bl	cb10 <mpfr_init2@plt>
   47674:	add	x28, sp, #0xd0
   47678:	mov	x1, x19
   4767c:	mov	x0, x22
   47680:	mov	x24, #0x40                  	// #64
   47684:	bl	cb10 <mpfr_init2@plt>
   47688:	mov	x1, x19
   4768c:	mov	x0, x28
   47690:	add	x23, sp, #0xf0
   47694:	bl	cb10 <mpfr_init2@plt>
   47698:	mov	x1, x19
   4769c:	mov	x0, x23
   476a0:	bl	cb10 <mpfr_init2@plt>
   476a4:	mov	x1, x20
   476a8:	mov	w2, #0x2                   	// #2
   476ac:	mov	x0, x22
   476b0:	bl	c490 <mpfr_sqr@plt>
   476b4:	ldr	w3, [x20, #8]
   476b8:	mov	x1, x20
   476bc:	mov	w2, #0x2                   	// #2
   476c0:	mov	x0, x28
   476c4:	mov	x25, #0x1                   	// #1
   476c8:	mov	x26, #0x2                   	// #2
   476cc:	bl	c730 <mpfr_set4@plt>
   476d0:	ldr	w3, [x20, #8]
   476d4:	mov	x1, x20
   476d8:	mov	x0, x21
   476dc:	mov	w2, #0x2                   	// #2
   476e0:	bl	c730 <mpfr_set4@plt>
   476e4:	ldr	x4, [sp, #160]
   476e8:	mov	x6, #0x0                   	// #0
   476ec:	mov	x2, x28
   476f0:	mov	x1, x22
   476f4:	mov	w3, #0x2                   	// #2
   476f8:	mov	x0, x28
   476fc:	str	w25, [sp, #124]
   47700:	stp	x4, x6, [sp, #128]
   47704:	bl	bdd0 <mpfr_mul@plt>
   47708:	mov	x2, x26
   4770c:	mov	x1, x28
   47710:	mov	w3, #0x2                   	// #2
   47714:	mov	x0, x28
   47718:	str	w26, [sp, #120]
   4771c:	bl	cd00 <mpfr_div_ui@plt>
   47720:	mov	x2, x26
   47724:	mov	x1, x28
   47728:	mov	w3, #0x2                   	// #2
   4772c:	mov	x0, x28
   47730:	bl	cd00 <mpfr_div_ui@plt>
   47734:	add	x2, x26, #0x1
   47738:	mov	x1, x28
   4773c:	mov	w3, #0x2                   	// #2
   47740:	mov	x0, x28
   47744:	str	x2, [sp, #112]
   47748:	bl	cd00 <mpfr_div_ui@plt>
   4774c:	ldr	x2, [sp, #112]
   47750:	mov	x1, x28
   47754:	mov	w3, #0x2                   	// #2
   47758:	mov	x0, x28
   4775c:	add	x26, x26, #0x2
   47760:	bl	cd00 <mpfr_div_ui@plt>
   47764:	mov	x0, x25
   47768:	bl	c8c0 <mpfr_bernoulli_cache@plt>
   4776c:	mov	x1, x28
   47770:	mov	x2, x0
   47774:	mov	w3, #0x0                   	// #0
   47778:	mov	x0, x23
   4777c:	bl	c560 <mpfr_mul_z@plt>
   47780:	mov	x2, x23
   47784:	mov	x1, x21
   47788:	mov	x0, x21
   4778c:	mov	w3, #0x0                   	// #0
   47790:	bl	c230 <mpfr_add@plt>
   47794:	ldp	x4, x6, [sp, #128]
   47798:	add	x0, x25, x25, lsl #2
   4779c:	ldr	x1, [sp, #256]
   477a0:	add	x0, x0, #0x8
   477a4:	ldr	w9, [sp, #124]
   477a8:	add	x25, x25, #0x1
   477ac:	add	x0, x0, x1
   477b0:	add	x4, x4, x6
   477b4:	cmp	x0, x4
   477b8:	csel	x0, x0, x4, ge  // ge = tcont
   477bc:	ldr	x4, [sp, #160]
   477c0:	subs	x0, x0, x4
   477c4:	sub	x2, x4, x19
   477c8:	csinv	x0, x0, xzr, pl  // pl = nfrst
   477cc:	cmp	x1, x2
   477d0:	add	x6, x0, #0x2
   477d4:	b.gt	476ec <mpfr_d_div@@Base+0x224>
   477d8:	mov	w1, #0x6                   	// #6
   477dc:	ldr	x2, [x20, #16]
   477e0:	mul	w9, w9, w1
   477e4:	sub	x2, x2, w9, sxtw
   477e8:	sub	x2, x2, #0x4
   477ec:	cmp	x2, x6
   477f0:	b.gt	477f8 <mpfr_d_div@@Base+0x330>
   477f4:	add	x2, x0, #0x3
   477f8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   477fc:	cmp	x4, x0
   47800:	b.gt	47830 <mpfr_d_div@@Base+0x368>
   47804:	mov	x0, #0xfffffffffffffeff    	// #-257
   47808:	movk	x0, #0x7fff, lsl #48
   4780c:	sub	x0, x0, x19
   47810:	cmp	x0, x24
   47814:	b.ge	478a8 <mpfr_d_div@@Base+0x3e0>  // b.tcont
   47818:	adrp	x2, 53000 <mpfr_free_pool@@Base+0x1eec>
   4781c:	mov	w1, #0x5e                  	// #94
   47820:	add	x2, x2, #0x952
   47824:	b	47638 <mpfr_d_div@@Base+0x170>
   47828:	mov	x19, #0x0                   	// #0
   4782c:	b	47658 <mpfr_d_div@@Base+0x190>
   47830:	ldr	w0, [sp, #108]
   47834:	sub	x2, x19, x2
   47838:	ldr	x1, [sp, #144]
   4783c:	cmp	w0, #0x0
   47840:	ldr	x0, [sp, #168]
   47844:	sub	x1, x1, #0x1
   47848:	cinc	x3, x27, eq  // eq = none
   4784c:	asr	x1, x1, #6
   47850:	add	x1, x1, #0x1
   47854:	bl	c400 <mpfr_round_p@plt>
   47858:	cbz	w0, 47804 <mpfr_d_div@@Base+0x33c>
   4785c:	ldr	w2, [sp, #108]
   47860:	mov	x1, x21
   47864:	ldr	w3, [sp, #152]
   47868:	ldr	x0, [sp, #96]
   4786c:	bl	c730 <mpfr_set4@plt>
   47870:	mov	x3, x23
   47874:	mov	x2, x28
   47878:	mov	x1, x22
   4787c:	mov	x0, x21
   47880:	mov	x4, #0x0                   	// #0
   47884:	bl	c240 <mpfr_clears@plt>
   47888:	ldr	w0, [sp, #120]
   4788c:	ldp	x19, x20, [sp, #16]
   47890:	ldp	x21, x22, [sp, #32]
   47894:	ldp	x23, x24, [sp, #48]
   47898:	ldp	x25, x26, [sp, #64]
   4789c:	ldp	x27, x28, [sp, #80]
   478a0:	ldp	x29, x30, [sp], #272
   478a4:	ret
   478a8:	add	x19, x19, x24
   478ac:	mov	x0, x21
   478b0:	mov	x1, x19
   478b4:	bl	bf50 <mpfr_set_prec@plt>
   478b8:	mov	x1, x19
   478bc:	mov	x0, x22
   478c0:	mov	x24, #0x2                   	// #2
   478c4:	bl	bf50 <mpfr_set_prec@plt>
   478c8:	mov	x1, x19
   478cc:	mov	x0, x28
   478d0:	sdiv	x24, x19, x24
   478d4:	bl	bf50 <mpfr_set_prec@plt>
   478d8:	mov	x1, x19
   478dc:	mov	x0, x23
   478e0:	bl	bf50 <mpfr_set_prec@plt>
   478e4:	b	476a4 <mpfr_d_div@@Base+0x1dc>

00000000000478e8 <mpfr_li2@@Base>:
   478e8:	stp	x29, x30, [sp, #-352]!
   478ec:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   478f0:	mov	x29, sp
   478f4:	stp	x23, x24, [sp, #48]
   478f8:	mov	w24, w2
   478fc:	mov	x23, x0
   47900:	ldr	x2, [x1, #16]
   47904:	stp	x19, x20, [sp, #16]
   47908:	stp	x21, x22, [sp, #32]
   4790c:	cmp	x2, x3
   47910:	stp	x25, x26, [sp, #64]
   47914:	mov	x25, x1
   47918:	stp	x27, x28, [sp, #80]
   4791c:	b.gt	479a8 <mpfr_li2@@Base+0xc0>
   47920:	mov	x0, #0x2                   	// #2
   47924:	movk	x0, #0x8000, lsl #48
   47928:	cmp	x2, x0
   4792c:	b.ne	4797c <mpfr_li2@@Base+0x94>  // b.any
   47930:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   47934:	ldr	x1, [x0, #2592]
   47938:	add	x0, x0, #0xa20
   4793c:	blr	x1
   47940:	str	x2, [x23, #16]
   47944:	mrs	x1, tpidr_el0
   47948:	add	x0, x1, x0
   4794c:	ldr	w1, [x0]
   47950:	orr	w1, w1, #0x4
   47954:	str	w1, [x0]
   47958:	mov	w27, #0x0                   	// #0
   4795c:	mov	w0, w27
   47960:	ldp	x19, x20, [sp, #16]
   47964:	ldp	x21, x22, [sp, #32]
   47968:	ldp	x23, x24, [sp, #48]
   4796c:	ldp	x25, x26, [sp, #64]
   47970:	ldp	x27, x28, [sp, #80]
   47974:	ldp	x29, x30, [sp], #352
   47978:	ret
   4797c:	cmp	x2, x3
   47980:	b.ne	47994 <mpfr_li2@@Base+0xac>  // b.any
   47984:	mov	w0, #0xffffffff            	// #-1
   47988:	str	w0, [x23, #8]
   4798c:	str	x2, [x23, #16]
   47990:	b	47958 <mpfr_li2@@Base+0x70>
   47994:	ldr	w0, [x1, #8]
   47998:	str	w0, [x23, #8]
   4799c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   479a0:	str	x0, [x23, #16]
   479a4:	b	47958 <mpfr_li2@@Base+0x70>
   479a8:	ldr	w3, [x1, #8]
   479ac:	ldr	x4, [x0]
   479b0:	cmp	w3, #0x0
   479b4:	b.le	47b08 <mpfr_li2@@Base+0x220>
   479b8:	tbnz	x2, #63, 47ae0 <mpfr_li2@@Base+0x1f8>
   479bc:	mrs	x22, tpidr_el0
   479c0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   479c4:	ldr	x1, [x0, #2592]
   479c8:	add	x0, x0, #0xa20
   479cc:	blr	x1
   479d0:	ldr	w0, [x22, x0]
   479d4:	str	w0, [sp, #108]
   479d8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   479dc:	ldr	x1, [x0, #2528]
   479e0:	add	x0, x0, #0x9e0
   479e4:	blr	x1
   479e8:	add	x1, x22, x0
   479ec:	ldr	x0, [x22, x0]
   479f0:	str	x0, [sp, #112]
   479f4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   479f8:	ldr	x2, [x0, #2560]
   479fc:	add	x0, x0, #0xa00
   47a00:	blr	x2
   47a04:	ldr	x2, [x22, x0]
   47a08:	str	x2, [sp, #120]
   47a0c:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   47a10:	str	x2, [x1]
   47a14:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   47a18:	str	x1, [x22, x0]
   47a1c:	ldr	x0, [x23]
   47a20:	str	x0, [sp, #128]
   47a24:	cmp	x0, #0x1
   47a28:	b.ne	47b2c <mpfr_li2@@Base+0x244>  // b.any
   47a2c:	mov	x20, #0x0                   	// #0
   47a30:	ldr	x0, [sp, #128]
   47a34:	add	x21, sp, #0x140
   47a38:	add	x20, x20, x0
   47a3c:	mov	x0, x25
   47a40:	add	x20, x20, #0xd
   47a44:	bl	c7a0 <mpfr_sgn@plt>
   47a48:	cmp	w0, #0x0
   47a4c:	b.le	47d28 <mpfr_li2@@Base+0x440>
   47a50:	mov	x0, x25
   47a54:	mov	x2, #0xffffffffffffffff    	// #-1
   47a58:	mov	x1, #0x1                   	// #1
   47a5c:	bl	bfd0 <mpfr_cmp_ui_2exp@plt>
   47a60:	cmp	w0, #0x0
   47a64:	b.gt	47d28 <mpfr_li2@@Base+0x440>
   47a68:	mov	x26, #0x40                  	// #64
   47a6c:	mov	x28, #0x8000000000000001    	// #-9223372036854775807
   47a70:	mov	x1, x20
   47a74:	mov	x0, x21
   47a78:	add	x19, sp, #0x120
   47a7c:	bl	cb10 <mpfr_init2@plt>
   47a80:	mov	x1, x20
   47a84:	mov	x0, x19
   47a88:	bl	cb10 <mpfr_init2@plt>
   47a8c:	mov	w3, #0x0                   	// #0
   47a90:	mov	x2, x25
   47a94:	mov	x1, #0x1                   	// #1
   47a98:	mov	x0, x21
   47a9c:	bl	cae0 <mpfr_ui_sub@plt>
   47aa0:	mov	x1, x21
   47aa4:	mov	x0, x21
   47aa8:	mov	w2, #0x2                   	// #2
   47aac:	bl	c110 <mpfr_log@plt>
   47ab0:	ldr	x0, [sp, #336]
   47ab4:	cmp	x0, x28
   47ab8:	b.ne	47b64 <mpfr_li2@@Base+0x27c>  // b.any
   47abc:	mov	x0, #0xfffffffffffffeff    	// #-257
   47ac0:	movk	x0, #0x7fff, lsl #48
   47ac4:	sub	x0, x0, x20
   47ac8:	cmp	x0, x26
   47acc:	b.ge	47d00 <mpfr_li2@@Base+0x418>  // b.tcont
   47ad0:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   47ad4:	mov	w1, #0x12a                 	// #298
   47ad8:	add	x2, x2, #0x6df
   47adc:	b	47b3c <mpfr_li2@@Base+0x254>
   47ae0:	mov	x3, #0x1                   	// #1
   47ae4:	sub	x2, x3, x2
   47ae8:	add	x4, x4, x3
   47aec:	cmp	x4, x2
   47af0:	b.cs	479bc <mpfr_li2@@Base+0xd4>  // b.hs, b.nlast
   47af4:	mov	w4, w24
   47af8:	bl	c5d0 <mpfr_round_near_x@plt>
   47afc:	mov	w27, w0
   47b00:	cbz	w0, 479bc <mpfr_li2@@Base+0xd4>
   47b04:	b	4795c <mpfr_li2@@Base+0x74>
   47b08:	tbz	x2, #63, 479bc <mpfr_li2@@Base+0xd4>
   47b0c:	add	x4, x4, #0x1
   47b10:	mov	x3, #0x2                   	// #2
   47b14:	sub	x2, x3, x2
   47b18:	cmp	x4, x2
   47b1c:	b.cs	479bc <mpfr_li2@@Base+0xd4>  // b.hs, b.nlast
   47b20:	mov	w4, w24
   47b24:	mov	w3, #0x0                   	// #0
   47b28:	b	47af8 <mpfr_li2@@Base+0x210>
   47b2c:	b.gt	47b48 <mpfr_li2@@Base+0x260>
   47b30:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   47b34:	add	x2, x2, #0x70c
   47b38:	mov	w1, #0x106                 	// #262
   47b3c:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   47b40:	add	x0, x0, #0x706
   47b44:	bl	cbd0 <mpfr_assert_fail@plt>
   47b48:	ldr	x0, [sp, #128]
   47b4c:	sub	x20, x0, #0x1
   47b50:	clz	x0, x20
   47b54:	mov	w20, #0x40                  	// #64
   47b58:	sub	w20, w20, w0
   47b5c:	sxtw	x20, w20
   47b60:	b	47a30 <mpfr_li2@@Base+0x148>
   47b64:	mov	x1, x21
   47b68:	mov	w2, #0x0                   	// #0
   47b6c:	mov	x0, x21
   47b70:	bl	bdf0 <mpfr_neg@plt>
   47b74:	mov	x1, x21
   47b78:	mov	x0, x19
   47b7c:	mov	w2, #0x2                   	// #2
   47b80:	ldr	x27, [sp, #336]
   47b84:	bl	475f4 <mpfr_d_div@@Base+0x12c>
   47b88:	cmp	w0, #0x0
   47b8c:	cbz	w0, 47cf8 <mpfr_li2@@Base+0x410>
   47b90:	b.gt	47ba4 <mpfr_li2@@Base+0x2bc>
   47b94:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   47b98:	mov	w1, #0x11c                 	// #284
   47b9c:	add	x2, x2, #0x715
   47ba0:	b	47b3c <mpfr_li2@@Base+0x254>
   47ba4:	sxtw	x0, w0
   47ba8:	mov	w4, #0x41                  	// #65
   47bac:	clz	x0, x0
   47bb0:	sub	w4, w4, w0
   47bb4:	sxtw	x4, w4
   47bb8:	mov	x1, x21
   47bbc:	mov	w2, #0x2                   	// #2
   47bc0:	mov	x0, x21
   47bc4:	str	x4, [sp, #136]
   47bc8:	bl	c490 <mpfr_sqr@plt>
   47bcc:	mov	x1, x21
   47bd0:	mov	w3, #0x2                   	// #2
   47bd4:	mov	x2, #0x2                   	// #2
   47bd8:	mov	x0, x21
   47bdc:	bl	c980 <mpfr_div_2ui@plt>
   47be0:	mov	x2, x21
   47be4:	mov	x1, x19
   47be8:	mov	x0, x19
   47bec:	mov	w3, #0x0                   	// #0
   47bf0:	bl	bbf0 <mpfr_sub@plt>
   47bf4:	ldr	x0, [sp, #304]
   47bf8:	cmp	x27, #0x0
   47bfc:	csinv	x2, xzr, x27, ge  // ge = tcont
   47c00:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   47c04:	cmp	x0, x1
   47c08:	b.le	47abc <mpfr_li2@@Base+0x1d4>
   47c0c:	ldr	x4, [sp, #136]
   47c10:	ldr	x1, [sp, #288]
   47c14:	cmp	x4, x2
   47c18:	csel	x4, x4, x2, ge  // ge = tcont
   47c1c:	subs	x2, x4, x0
   47c20:	sub	x1, x1, #0x1
   47c24:	ldr	x0, [sp, #128]
   47c28:	csinv	x2, x2, xzr, pl  // pl = nfrst
   47c2c:	cmp	w24, #0x0
   47c30:	add	x2, x2, #0x2
   47c34:	cinc	x3, x0, eq  // eq = none
   47c38:	asr	x1, x1, #6
   47c3c:	ldr	x0, [sp, #312]
   47c40:	sub	x2, x20, x2
   47c44:	add	x1, x1, #0x1
   47c48:	bl	c400 <mpfr_round_p@plt>
   47c4c:	cbz	w0, 47abc <mpfr_li2@@Base+0x1d4>
   47c50:	ldr	w3, [sp, #296]
   47c54:	mov	w2, w24
   47c58:	mov	x1, x19
   47c5c:	mov	x0, x23
   47c60:	bl	c730 <mpfr_set4@plt>
   47c64:	mov	w27, w0
   47c68:	mov	x0, x21
   47c6c:	bl	c0f0 <mpfr_clear@plt>
   47c70:	mov	x0, x19
   47c74:	bl	c0f0 <mpfr_clear@plt>
   47c78:	ldr	w2, [sp, #108]
   47c7c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   47c80:	ldr	x1, [x0, #2592]
   47c84:	add	x0, x0, #0xa20
   47c88:	blr	x1
   47c8c:	add	x1, x22, x0
   47c90:	str	w2, [x22, x0]
   47c94:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   47c98:	ldr	x2, [x0, #2528]
   47c9c:	add	x0, x0, #0x9e0
   47ca0:	blr	x2
   47ca4:	ldr	x2, [sp, #112]
   47ca8:	str	x2, [x22, x0]
   47cac:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   47cb0:	ldr	x2, [x0, #2560]
   47cb4:	add	x0, x0, #0xa00
   47cb8:	blr	x2
   47cbc:	ldr	x2, [sp, #120]
   47cc0:	str	x2, [x22, x0]
   47cc4:	ldr	x0, [x23, #16]
   47cc8:	ldr	x2, [sp, #112]
   47ccc:	cmp	x2, x0
   47cd0:	b.gt	47ce0 <mpfr_li2@@Base+0x3f8>
   47cd4:	ldr	x2, [sp, #120]
   47cd8:	cmp	x2, x0
   47cdc:	b.ge	48fc0 <mpfr_li2@@Base+0x16d8>  // b.tcont
   47ce0:	mov	w1, w27
   47ce4:	mov	w2, w24
   47ce8:	mov	x0, x23
   47cec:	bl	cbc0 <mpfr_check_range@plt>
   47cf0:	mov	w27, w0
   47cf4:	b	4795c <mpfr_li2@@Base+0x74>
   47cf8:	mov	x4, #0x1                   	// #1
   47cfc:	b	47bb8 <mpfr_li2@@Base+0x2d0>
   47d00:	add	x20, x20, x26
   47d04:	mov	x0, #0x2                   	// #2
   47d08:	mov	x1, x20
   47d0c:	sdiv	x26, x20, x0
   47d10:	mov	x0, x21
   47d14:	bl	bf50 <mpfr_set_prec@plt>
   47d18:	mov	x1, x20
   47d1c:	mov	x0, x19
   47d20:	bl	bf50 <mpfr_set_prec@plt>
   47d24:	b	47a8c <mpfr_li2@@Base+0x1a4>
   47d28:	mov	x0, x25
   47d2c:	mov	x2, #0x0                   	// #0
   47d30:	mov	x1, #0x1                   	// #1
   47d34:	bl	bfd0 <mpfr_cmp_ui_2exp@plt>
   47d38:	cbnz	w0, 47e2c <mpfr_li2@@Base+0x544>
   47d3c:	mov	x25, #0xfffffffffffffeff    	// #-257
   47d40:	mov	x19, #0x40                  	// #64
   47d44:	mov	x26, #0x8000000000000003    	// #-9223372036854775805
   47d48:	movk	x25, #0x7fff, lsl #48
   47d4c:	mov	x1, x20
   47d50:	mov	x0, x21
   47d54:	bl	cb10 <mpfr_init2@plt>
   47d58:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   47d5c:	ldr	x1, [x0, #2640]
   47d60:	add	x0, x0, #0xa50
   47d64:	blr	x1
   47d68:	mov	w2, #0x2                   	// #2
   47d6c:	add	x1, x22, x0
   47d70:	mov	x0, x21
   47d74:	bl	c410 <mpfr_cache@plt>
   47d78:	mov	x1, x21
   47d7c:	mov	w2, #0x0                   	// #0
   47d80:	mov	x0, x21
   47d84:	bl	c490 <mpfr_sqr@plt>
   47d88:	mov	x1, x21
   47d8c:	mov	x0, x21
   47d90:	mov	w3, #0x0                   	// #0
   47d94:	mov	x2, #0x6                   	// #6
   47d98:	bl	cd00 <mpfr_div_ui@plt>
   47d9c:	ldr	x0, [sp, #336]
   47da0:	cmp	x0, x26
   47da4:	b.gt	47dc4 <mpfr_li2@@Base+0x4dc>
   47da8:	sub	x0, x25, x20
   47dac:	cmp	x0, x19
   47db0:	b.ge	47e10 <mpfr_li2@@Base+0x528>  // b.tcont
   47db4:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   47db8:	mov	w1, #0x147                 	// #327
   47dbc:	add	x2, x2, #0x6df
   47dc0:	b	47b3c <mpfr_li2@@Base+0x254>
   47dc4:	ldr	x0, [sp, #128]
   47dc8:	cmp	w24, #0x0
   47dcc:	ldr	x1, [sp, #320]
   47dd0:	cinc	x3, x0, eq  // eq = none
   47dd4:	ldr	x0, [sp, #344]
   47dd8:	sub	x1, x1, #0x1
   47ddc:	sub	x2, x20, #0x4
   47de0:	asr	x1, x1, #6
   47de4:	add	x1, x1, #0x1
   47de8:	bl	c400 <mpfr_round_p@plt>
   47dec:	cbz	w0, 47da8 <mpfr_li2@@Base+0x4c0>
   47df0:	ldr	w3, [sp, #328]
   47df4:	mov	w2, w24
   47df8:	mov	x1, x21
   47dfc:	mov	x0, x23
   47e00:	bl	c730 <mpfr_set4@plt>
   47e04:	mov	w27, w0
   47e08:	mov	x0, x21
   47e0c:	b	47c74 <mpfr_li2@@Base+0x38c>
   47e10:	add	x20, x20, x19
   47e14:	mov	x19, #0x2                   	// #2
   47e18:	mov	x1, x20
   47e1c:	mov	x0, x21
   47e20:	sdiv	x19, x20, x19
   47e24:	bl	bf50 <mpfr_set_prec@plt>
   47e28:	b	47d58 <mpfr_li2@@Base+0x470>
   47e2c:	mov	x2, #0x0                   	// #0
   47e30:	mov	x0, x25
   47e34:	mov	x1, #0x2                   	// #2
   47e38:	bl	bfd0 <mpfr_cmp_ui_2exp@plt>
   47e3c:	add	x19, sp, #0x120
   47e40:	mov	x2, #0x0                   	// #0
   47e44:	tbnz	w0, #31, 482ec <mpfr_li2@@Base+0xa04>
   47e48:	mov	x0, x25
   47e4c:	mov	x1, #0x26                  	// #38
   47e50:	bl	bfd0 <mpfr_cmp_ui_2exp@plt>
   47e54:	tbz	w0, #31, 47f14 <mpfr_li2@@Base+0x62c>
   47e58:	mov	x1, x20
   47e5c:	mov	x0, x19
   47e60:	add	x26, sp, #0x100
   47e64:	bl	cb10 <mpfr_init2@plt>
   47e68:	mov	x27, #0x40                  	// #64
   47e6c:	mov	x1, x20
   47e70:	mov	x0, x26
   47e74:	bl	cb10 <mpfr_init2@plt>
   47e78:	mov	x1, x20
   47e7c:	mov	x0, x21
   47e80:	bl	cb10 <mpfr_init2@plt>
   47e84:	mov	w3, #0x0                   	// #0
   47e88:	mov	x2, x25
   47e8c:	mov	x1, #0x1                   	// #1
   47e90:	mov	x0, x21
   47e94:	bl	c380 <mpfr_ui_div@plt>
   47e98:	mov	x1, x21
   47e9c:	mov	w2, #0x0                   	// #0
   47ea0:	mov	x0, x21
   47ea4:	bl	bdf0 <mpfr_neg@plt>
   47ea8:	mov	x1, x21
   47eac:	mov	w2, #0x3                   	// #3
   47eb0:	mov	x0, x19
   47eb4:	bl	c790 <mpfr_log1p@plt>
   47eb8:	mov	x1, x19
   47ebc:	mov	w2, #0x2                   	// #2
   47ec0:	mov	x0, x19
   47ec4:	bl	bdf0 <mpfr_neg@plt>
   47ec8:	mov	x1, x19
   47ecc:	mov	w2, #0x0                   	// #0
   47ed0:	mov	x0, x26
   47ed4:	ldr	x28, [sp, #304]
   47ed8:	bl	475f4 <mpfr_d_div@@Base+0x12c>
   47edc:	mov	w5, w0
   47ee0:	mov	x1, x26
   47ee4:	mov	x0, x26
   47ee8:	mov	w2, #0x0                   	// #0
   47eec:	str	w5, [sp, #136]
   47ef0:	bl	bdf0 <mpfr_neg@plt>
   47ef4:	ldr	w5, [sp, #136]
   47ef8:	cmp	w5, #0x0
   47efc:	cbz	w5, 48200 <mpfr_li2@@Base+0x918>
   47f00:	b.gt	4809c <mpfr_li2@@Base+0x7b4>
   47f04:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   47f08:	mov	w1, #0x16d                 	// #365
   47f0c:	add	x2, x2, #0x715
   47f10:	b	47b3c <mpfr_li2@@Base+0x254>
   47f14:	ldr	x27, [x23]
   47f18:	mov	x0, x25
   47f1c:	mov	x2, #0x0                   	// #0
   47f20:	mov	x1, #0x26                  	// #38
   47f24:	add	x26, x27, #0x14
   47f28:	bl	bfd0 <mpfr_cmp_ui_2exp@plt>
   47f2c:	tbz	w0, #31, 47f48 <mpfr_li2@@Base+0x660>
   47f30:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   47f34:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   47f38:	add	x2, x2, #0x721
   47f3c:	add	x0, x0, #0x706
   47f40:	mov	w1, #0x82                  	// #130
   47f44:	bl	cbd0 <mpfr_assert_fail@plt>
   47f48:	mov	x1, x26
   47f4c:	mov	x0, x19
   47f50:	bl	cb10 <mpfr_init2@plt>
   47f54:	mov	x1, x26
   47f58:	mov	x0, x21
   47f5c:	bl	cb10 <mpfr_init2@plt>
   47f60:	mov	x1, x25
   47f64:	mov	w2, #0x0                   	// #0
   47f68:	mov	x0, x19
   47f6c:	bl	c110 <mpfr_log@plt>
   47f70:	mov	x1, x19
   47f74:	mov	w2, #0x0                   	// #0
   47f78:	mov	x0, x19
   47f7c:	bl	c490 <mpfr_sqr@plt>
   47f80:	mov	x1, x19
   47f84:	mov	w3, #0x0                   	// #0
   47f88:	mov	x2, #0x1                   	// #1
   47f8c:	mov	x0, x19
   47f90:	bl	c980 <mpfr_div_2ui@plt>
   47f94:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   47f98:	ldr	x1, [x0, #2640]
   47f9c:	add	x0, x0, #0xa50
   47fa0:	blr	x1
   47fa4:	mov	w2, #0x0                   	// #0
   47fa8:	add	x1, x22, x0
   47fac:	mov	x0, x21
   47fb0:	bl	c410 <mpfr_cache@plt>
   47fb4:	mov	x1, x21
   47fb8:	mov	w2, #0x0                   	// #0
   47fbc:	mov	x0, x21
   47fc0:	bl	c490 <mpfr_sqr@plt>
   47fc4:	mov	x1, x21
   47fc8:	mov	x0, x21
   47fcc:	mov	w3, #0x0                   	// #0
   47fd0:	mov	x2, #0x3                   	// #3
   47fd4:	bl	cd00 <mpfr_div_ui@plt>
   47fd8:	ldr	x1, [sp, #304]
   47fdc:	ldr	x0, [sp, #336]
   47fe0:	cmp	x1, x0
   47fe4:	b.gt	48000 <mpfr_li2@@Base+0x718>
   47fe8:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   47fec:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   47ff0:	add	x2, x2, #0x78f
   47ff4:	add	x0, x0, #0x706
   47ff8:	mov	w1, #0x90                  	// #144
   47ffc:	bl	cbd0 <mpfr_assert_fail@plt>
   48000:	mov	x1, x21
   48004:	mov	x2, x19
   48008:	mov	x0, x19
   4800c:	mov	w3, #0x0                   	// #0
   48010:	bl	bbf0 <mpfr_sub@plt>
   48014:	ldr	x0, [sp, #304]
   48018:	ldr	x1, [x25, #16]
   4801c:	sub	x26, x26, x0
   48020:	cmp	x1, x26
   48024:	b.ge	48044 <mpfr_li2@@Base+0x75c>  // b.tcont
   48028:	mov	w27, #0x0                   	// #0
   4802c:	mov	x0, x19
   48030:	bl	c0f0 <mpfr_clear@plt>
   48034:	mov	x0, x21
   48038:	bl	c0f0 <mpfr_clear@plt>
   4803c:	cbz	w27, 47e58 <mpfr_li2@@Base+0x570>
   48040:	b	47c78 <mpfr_li2@@Base+0x390>
   48044:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   48048:	cmp	x0, x1
   4804c:	b.le	48028 <mpfr_li2@@Base+0x740>
   48050:	ldr	x1, [sp, #288]
   48054:	cmp	w24, #0x0
   48058:	ldr	x0, [sp, #312]
   4805c:	sub	x1, x1, #0x1
   48060:	ldr	x3, [x23]
   48064:	asr	x1, x1, #6
   48068:	add	x2, x27, #0x10
   4806c:	add	x1, x1, #0x1
   48070:	cinc	x3, x3, eq  // eq = none
   48074:	bl	c400 <mpfr_round_p@plt>
   48078:	cbz	w0, 48028 <mpfr_li2@@Base+0x740>
   4807c:	ldr	w3, [sp, #296]
   48080:	mov	w2, w24
   48084:	mov	x1, x19
   48088:	mov	x0, x23
   4808c:	bl	c730 <mpfr_set4@plt>
   48090:	cmp	w24, #0x5
   48094:	csinc	w27, w0, wzr, ne  // ne = any
   48098:	b	4802c <mpfr_li2@@Base+0x744>
   4809c:	sxtw	x5, w5
   480a0:	mov	w0, #0x41                  	// #65
   480a4:	clz	x5, x5
   480a8:	sub	w5, w0, w5
   480ac:	sxtw	x5, w5
   480b0:	mov	x1, x19
   480b4:	mov	w2, #0x0                   	// #0
   480b8:	mov	x0, x19
   480bc:	str	x5, [sp, #176]
   480c0:	bl	c490 <mpfr_sqr@plt>
   480c4:	mov	x1, x19
   480c8:	mov	w3, #0x0                   	// #0
   480cc:	mov	x2, #0x2                   	// #2
   480d0:	mov	x0, x19
   480d4:	bl	c980 <mpfr_div_2ui@plt>
   480d8:	mov	w3, #0x0                   	// #0
   480dc:	mov	x2, x19
   480e0:	mov	x1, x26
   480e4:	mov	x0, x26
   480e8:	bl	c230 <mpfr_add@plt>
   480ec:	cmp	x28, #0x0
   480f0:	mov	x10, #0x3                   	// #3
   480f4:	sub	x0, x10, x28
   480f8:	mov	x9, #0x4                   	// #4
   480fc:	ldr	x8, [sp, #272]
   48100:	csel	x9, x0, x9, lt  // lt = tstop
   48104:	ldr	x7, [sp, #304]
   48108:	mov	x1, x25
   4810c:	mov	w2, #0x2                   	// #2
   48110:	mov	x0, x19
   48114:	stp	x8, x7, [sp, #152]
   48118:	str	x9, [sp, #168]
   4811c:	bl	c110 <mpfr_log@plt>
   48120:	mov	x1, x19
   48124:	mov	w2, #0x0                   	// #0
   48128:	mov	x0, x19
   4812c:	bl	c490 <mpfr_sqr@plt>
   48130:	mov	x1, x19
   48134:	mov	w3, #0x0                   	// #0
   48138:	mov	x2, #0x1                   	// #1
   4813c:	mov	x0, x19
   48140:	bl	c980 <mpfr_div_2ui@plt>
   48144:	mov	w3, #0x0                   	// #0
   48148:	mov	x1, x26
   4814c:	mov	x2, x19
   48150:	mov	x0, x26
   48154:	bl	bbf0 <mpfr_sub@plt>
   48158:	ldr	x4, [sp, #272]
   4815c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   48160:	ldr	x1, [x0, #2640]
   48164:	add	x0, x0, #0xa50
   48168:	blr	x1
   4816c:	ldr	x6, [sp, #304]
   48170:	add	x1, x22, x0
   48174:	mov	w2, #0x2                   	// #2
   48178:	mov	x0, x19
   4817c:	stp	x4, x6, [sp, #136]
   48180:	bl	c410 <mpfr_cache@plt>
   48184:	mov	x1, x19
   48188:	mov	w2, #0x0                   	// #0
   4818c:	mov	x0, x19
   48190:	bl	c490 <mpfr_sqr@plt>
   48194:	mov	x10, #0x3                   	// #3
   48198:	mov	x1, x19
   4819c:	mov	x2, x10
   481a0:	mov	w3, #0x0                   	// #0
   481a4:	mov	x0, x19
   481a8:	bl	cd00 <mpfr_div_ui@plt>
   481ac:	mov	w3, #0x0                   	// #0
   481b0:	mov	x2, x19
   481b4:	mov	x1, x26
   481b8:	mov	x0, x26
   481bc:	bl	c230 <mpfr_add@plt>
   481c0:	ldr	x3, [sp, #272]
   481c4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   481c8:	ldp	x4, x6, [sp, #136]
   481cc:	cmp	x3, x0
   481d0:	ldp	x8, x7, [sp, #152]
   481d4:	ldp	x9, x5, [sp, #168]
   481d8:	b.gt	48208 <mpfr_li2@@Base+0x920>
   481dc:	mov	x0, #0xfffffffffffffeff    	// #-257
   481e0:	movk	x0, #0x7fff, lsl #48
   481e4:	sub	x0, x0, x20
   481e8:	cmp	x0, x27
   481ec:	b.ge	482b8 <mpfr_li2@@Base+0x9d0>  // b.tcont
   481f0:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   481f4:	mov	w1, #0x189                 	// #393
   481f8:	add	x2, x2, #0x6df
   481fc:	b	47b3c <mpfr_li2@@Base+0x254>
   48200:	mov	x5, #0x1                   	// #1
   48204:	b	480b0 <mpfr_li2@@Base+0x7c8>
   48208:	add	x0, x7, x9
   4820c:	mov	x1, #0xffffffffffffffff    	// #-1
   48210:	cmp	x0, x5
   48214:	csel	x5, x0, x5, ge  // ge = tcont
   48218:	add	x0, x6, #0x3
   4821c:	subs	x5, x5, x8
   48220:	csel	x5, x5, x1, pl  // pl = nfrst
   48224:	add	x5, x5, #0x2
   48228:	add	x5, x8, x5
   4822c:	cmp	x0, x5
   48230:	csel	x0, x0, x5, ge  // ge = tcont
   48234:	subs	x0, x0, x4
   48238:	csel	x0, x0, x1, pl  // pl = nfrst
   4823c:	add	x0, x0, #0x2
   48240:	add	x2, x4, x0
   48244:	mov	x0, #0x2                   	// #2
   48248:	cmp	x2, #0x2
   4824c:	csel	x2, x2, x0, ge  // ge = tcont
   48250:	subs	x2, x2, x3
   48254:	csel	x2, x2, x1, pl  // pl = nfrst
   48258:	cmp	w24, #0x0
   4825c:	add	x2, x2, x0
   48260:	ldr	x0, [sp, #128]
   48264:	sub	x2, x20, x2
   48268:	ldr	x1, [sp, #256]
   4826c:	cinc	x3, x0, eq  // eq = none
   48270:	ldr	x0, [sp, #280]
   48274:	sub	x1, x1, #0x1
   48278:	asr	x1, x1, #6
   4827c:	add	x1, x1, #0x1
   48280:	bl	c400 <mpfr_round_p@plt>
   48284:	cbz	w0, 481dc <mpfr_li2@@Base+0x8f4>
   48288:	ldr	w3, [sp, #264]
   4828c:	mov	w2, w24
   48290:	mov	x1, x26
   48294:	mov	x0, x23
   48298:	bl	c730 <mpfr_set4@plt>
   4829c:	mov	w27, w0
   482a0:	mov	x2, x21
   482a4:	mov	x1, x19
   482a8:	mov	x0, x26
   482ac:	mov	x3, #0x0                   	// #0
   482b0:	bl	c240 <mpfr_clears@plt>
   482b4:	b	47c78 <mpfr_li2@@Base+0x390>
   482b8:	add	x20, x20, x27
   482bc:	mov	x0, #0x2                   	// #2
   482c0:	mov	x1, x20
   482c4:	sdiv	x27, x20, x0
   482c8:	mov	x0, x19
   482cc:	bl	bf50 <mpfr_set_prec@plt>
   482d0:	mov	x1, x20
   482d4:	mov	x0, x26
   482d8:	bl	bf50 <mpfr_set_prec@plt>
   482dc:	mov	x1, x20
   482e0:	mov	x0, x21
   482e4:	bl	bf50 <mpfr_set_prec@plt>
   482e8:	b	47e84 <mpfr_li2@@Base+0x59c>
   482ec:	mov	x0, x25
   482f0:	mov	x1, #0x1                   	// #1
   482f4:	bl	bfd0 <mpfr_cmp_ui_2exp@plt>
   482f8:	cmp	w0, #0x0
   482fc:	b.le	48590 <mpfr_li2@@Base+0xca8>
   48300:	add	x28, sp, #0xe0
   48304:	mov	x1, x20
   48308:	mov	x0, x28
   4830c:	add	x26, sp, #0x100
   48310:	bl	cb10 <mpfr_init2@plt>
   48314:	mov	x27, #0x40                  	// #64
   48318:	mov	x1, x20
   4831c:	mov	x0, x26
   48320:	bl	cb10 <mpfr_init2@plt>
   48324:	mov	x1, x20
   48328:	mov	x0, x19
   4832c:	bl	cb10 <mpfr_init2@plt>
   48330:	mov	x1, x20
   48334:	mov	x0, x21
   48338:	bl	cb10 <mpfr_init2@plt>
   4833c:	mov	x1, x25
   48340:	mov	w2, #0x2                   	// #2
   48344:	mov	x0, x19
   48348:	bl	c110 <mpfr_log@plt>
   4834c:	mov	x1, x19
   48350:	mov	w2, #0x0                   	// #0
   48354:	mov	x0, x28
   48358:	bl	475f4 <mpfr_d_div@@Base+0x12c>
   4835c:	ldr	x7, [sp, #240]
   48360:	mov	w6, w0
   48364:	mov	x1, x19
   48368:	mov	w2, #0x0                   	// #0
   4836c:	mov	x0, x26
   48370:	str	x7, [sp, #144]
   48374:	str	w6, [sp, #152]
   48378:	bl	c490 <mpfr_sqr@plt>
   4837c:	mov	x1, x26
   48380:	mov	w3, #0x0                   	// #0
   48384:	mov	x2, #0x2                   	// #2
   48388:	mov	x0, x26
   4838c:	bl	c980 <mpfr_div_2ui@plt>
   48390:	mov	x2, x26
   48394:	mov	x1, x28
   48398:	mov	w3, #0x0                   	// #0
   4839c:	mov	x0, x28
   483a0:	bl	c230 <mpfr_add@plt>
   483a4:	mov	w3, #0x0                   	// #0
   483a8:	mov	x1, x25
   483ac:	mov	x2, #0x1                   	// #1
   483b0:	mov	x0, x21
   483b4:	bl	c5c0 <mpfr_sub_ui@plt>
   483b8:	mov	x1, x21
   483bc:	mov	w2, #0x2                   	// #2
   483c0:	mov	x0, x26
   483c4:	bl	c110 <mpfr_log@plt>
   483c8:	ldr	x4, [sp, #272]
   483cc:	mov	x2, x26
   483d0:	mov	x1, x19
   483d4:	mov	w3, #0x0                   	// #0
   483d8:	mov	x0, x26
   483dc:	str	x4, [sp, #136]
   483e0:	bl	bdd0 <mpfr_mul@plt>
   483e4:	mov	x1, x28
   483e8:	mov	w3, #0x0                   	// #0
   483ec:	mov	x2, x26
   483f0:	mov	x0, x28
   483f4:	bl	bbf0 <mpfr_sub@plt>
   483f8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   483fc:	ldr	x1, [x0, #2640]
   48400:	add	x0, x0, #0xa50
   48404:	blr	x1
   48408:	mov	w2, #0x2                   	// #2
   4840c:	add	x1, x22, x0
   48410:	mov	x0, x26
   48414:	bl	c410 <mpfr_cache@plt>
   48418:	mov	x1, x26
   4841c:	mov	w2, #0x0                   	// #0
   48420:	mov	x0, x26
   48424:	bl	c490 <mpfr_sqr@plt>
   48428:	mov	x1, x26
   4842c:	mov	w3, #0x0                   	// #0
   48430:	mov	x2, #0x6                   	// #6
   48434:	mov	x0, x26
   48438:	bl	cd00 <mpfr_div_ui@plt>
   4843c:	mov	x2, x26
   48440:	mov	x1, x28
   48444:	mov	x0, x28
   48448:	mov	w3, #0x0                   	// #0
   4844c:	bl	c230 <mpfr_add@plt>
   48450:	ldr	w6, [sp, #152]
   48454:	ldp	x4, x7, [sp, #136]
   48458:	cmp	w6, #0x0
   4845c:	cbz	w6, 484d8 <mpfr_li2@@Base+0xbf0>
   48460:	b.gt	48474 <mpfr_li2@@Base+0xb8c>
   48464:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   48468:	mov	w1, #0x1b8                 	// #440
   4846c:	add	x2, x2, #0x715
   48470:	b	47b3c <mpfr_li2@@Base+0x254>
   48474:	sxtw	x1, w6
   48478:	clz	x0, x1
   4847c:	mov	w1, #0x41                  	// #65
   48480:	sub	w1, w1, w0
   48484:	sxtw	x1, w1
   48488:	sub	x1, x1, x7
   4848c:	mov	x0, #0x1                   	// #1
   48490:	sub	x2, x0, x4
   48494:	cmp	x1, x2
   48498:	b.le	484a4 <mpfr_li2@@Base+0xbbc>
   4849c:	tbnz	w6, #31, 48464 <mpfr_li2@@Base+0xb7c>
   484a0:	mov	x2, x1
   484a4:	ldr	x1, [sp, #240]
   484a8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   484ac:	cmp	x1, x0
   484b0:	b.gt	484e0 <mpfr_li2@@Base+0xbf8>
   484b4:	mov	x0, #0xfffffffffffffeff    	// #-257
   484b8:	movk	x0, #0x7fff, lsl #48
   484bc:	sub	x0, x0, x20
   484c0:	cmp	x0, x27
   484c4:	b.ge	48550 <mpfr_li2@@Base+0xc68>  // b.tcont
   484c8:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   484cc:	mov	w1, #0x1bd                 	// #445
   484d0:	add	x2, x2, #0x6df
   484d4:	b	47b3c <mpfr_li2@@Base+0x254>
   484d8:	mov	x1, #0x1                   	// #1
   484dc:	b	48488 <mpfr_li2@@Base+0xba0>
   484e0:	ldr	x0, [sp, #128]
   484e4:	cmp	w24, #0x0
   484e8:	ldr	x1, [sp, #224]
   484ec:	cinc	x3, x0, eq  // eq = none
   484f0:	mov	x0, #0x5                   	// #5
   484f4:	cmp	x2, #0x5
   484f8:	csel	x2, x2, x0, ge  // ge = tcont
   484fc:	sub	x1, x1, #0x1
   48500:	ldr	x0, [sp, #248]
   48504:	add	x2, x2, #0x2
   48508:	asr	x1, x1, #6
   4850c:	sub	x2, x20, x2
   48510:	add	x1, x1, #0x1
   48514:	bl	c400 <mpfr_round_p@plt>
   48518:	cbz	w0, 484b4 <mpfr_li2@@Base+0xbcc>
   4851c:	ldr	w3, [sp, #232]
   48520:	mov	w2, w24
   48524:	mov	x1, x28
   48528:	mov	x0, x23
   4852c:	bl	c730 <mpfr_set4@plt>
   48530:	mov	w27, w0
   48534:	mov	x3, x21
   48538:	mov	x2, x19
   4853c:	mov	x1, x26
   48540:	mov	x0, x28
   48544:	mov	x4, #0x0                   	// #0
   48548:	bl	c240 <mpfr_clears@plt>
   4854c:	b	47c78 <mpfr_li2@@Base+0x390>
   48550:	add	x20, x20, x27
   48554:	mov	x0, #0x2                   	// #2
   48558:	mov	x1, x20
   4855c:	sdiv	x27, x20, x0
   48560:	mov	x0, x28
   48564:	bl	bf50 <mpfr_set_prec@plt>
   48568:	mov	x1, x20
   4856c:	mov	x0, x26
   48570:	bl	bf50 <mpfr_set_prec@plt>
   48574:	mov	x1, x20
   48578:	mov	x0, x19
   4857c:	bl	bf50 <mpfr_set_prec@plt>
   48580:	mov	x1, x20
   48584:	mov	x0, x21
   48588:	bl	bf50 <mpfr_set_prec@plt>
   4858c:	b	4833c <mpfr_li2@@Base+0xa54>
   48590:	mov	x0, x25
   48594:	mov	x2, #0xffffffffffffffff    	// #-1
   48598:	mov	x1, #0x1                   	// #1
   4859c:	bl	bfd0 <mpfr_cmp_ui_2exp@plt>
   485a0:	cmp	w0, #0x0
   485a4:	b.le	4889c <mpfr_li2@@Base+0xfb4>
   485a8:	add	x26, sp, #0xe0
   485ac:	mov	x1, x20
   485b0:	mov	x0, x26
   485b4:	add	x28, sp, #0x100
   485b8:	bl	cb10 <mpfr_init2@plt>
   485bc:	mov	x27, #0x40                  	// #64
   485c0:	mov	x1, x20
   485c4:	mov	x0, x28
   485c8:	bl	cb10 <mpfr_init2@plt>
   485cc:	mov	x1, x20
   485d0:	mov	x0, x19
   485d4:	bl	cb10 <mpfr_init2@plt>
   485d8:	mov	x1, x20
   485dc:	mov	x0, x21
   485e0:	bl	cb10 <mpfr_init2@plt>
   485e4:	mov	x1, x25
   485e8:	mov	w2, #0x3                   	// #3
   485ec:	mov	x0, x28
   485f0:	bl	c110 <mpfr_log@plt>
   485f4:	mov	x1, x28
   485f8:	mov	w2, #0x0                   	// #0
   485fc:	mov	x0, x28
   48600:	bl	bdf0 <mpfr_neg@plt>
   48604:	mov	x1, x28
   48608:	mov	w2, #0x0                   	// #0
   4860c:	mov	x0, x26
   48610:	bl	475f4 <mpfr_d_div@@Base+0x12c>
   48614:	mov	w4, w0
   48618:	mov	x1, x26
   4861c:	mov	x0, x26
   48620:	mov	w2, #0x0                   	// #0
   48624:	str	w4, [sp, #136]
   48628:	bl	bdf0 <mpfr_neg@plt>
   4862c:	ldr	w4, [sp, #136]
   48630:	cmp	w4, #0x0
   48634:	cbz	w4, 4879c <mpfr_li2@@Base+0xeb4>
   48638:	b.gt	4864c <mpfr_li2@@Base+0xd64>
   4863c:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   48640:	mov	w1, #0x1dc                 	// #476
   48644:	add	x2, x2, #0x715
   48648:	b	47b3c <mpfr_li2@@Base+0x254>
   4864c:	sxtw	x4, w4
   48650:	mov	w0, #0x41                  	// #65
   48654:	clz	x4, x4
   48658:	sub	w4, w0, w4
   4865c:	sxtw	x4, w4
   48660:	ldr	x11, [sp, #240]
   48664:	mov	w3, #0x0                   	// #0
   48668:	mov	x2, x25
   4866c:	mov	x1, #0x1                   	// #1
   48670:	mov	x0, x21
   48674:	stp	x11, x4, [sp, #168]
   48678:	bl	cae0 <mpfr_ui_sub@plt>
   4867c:	mov	x1, x21
   48680:	mov	w2, #0x2                   	// #2
   48684:	mov	x0, x19
   48688:	bl	c110 <mpfr_log@plt>
   4868c:	mov	x2, x28
   48690:	mov	x1, x19
   48694:	mov	w3, #0x0                   	// #0
   48698:	mov	x0, x19
   4869c:	bl	bdd0 <mpfr_mul@plt>
   486a0:	mov	w3, #0x0                   	// #0
   486a4:	mov	x2, x19
   486a8:	mov	x1, x26
   486ac:	mov	x0, x26
   486b0:	bl	c230 <mpfr_add@plt>
   486b4:	ldr	x10, [sp, #240]
   486b8:	mov	x1, x28
   486bc:	ldr	x8, [sp, #304]
   486c0:	mov	w2, #0x0                   	// #0
   486c4:	mov	x0, x28
   486c8:	stp	x10, x8, [sp, #152]
   486cc:	bl	c490 <mpfr_sqr@plt>
   486d0:	mov	x1, x28
   486d4:	mov	w3, #0x0                   	// #0
   486d8:	mov	x2, #0x2                   	// #2
   486dc:	mov	x0, x28
   486e0:	bl	c980 <mpfr_div_2ui@plt>
   486e4:	mov	w3, #0x0                   	// #0
   486e8:	mov	x1, x26
   486ec:	mov	x2, x28
   486f0:	mov	x0, x26
   486f4:	bl	c230 <mpfr_add@plt>
   486f8:	ldr	x6, [sp, #240]
   486fc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   48700:	ldr	x1, [x0, #2640]
   48704:	add	x0, x0, #0xa50
   48708:	blr	x1
   4870c:	ldr	x9, [sp, #272]
   48710:	add	x1, x22, x0
   48714:	mov	w2, #0x2                   	// #2
   48718:	mov	x0, x28
   4871c:	stp	x6, x9, [sp, #136]
   48720:	bl	c410 <mpfr_cache@plt>
   48724:	mov	x1, x28
   48728:	mov	w2, #0x0                   	// #0
   4872c:	mov	x0, x28
   48730:	bl	c490 <mpfr_sqr@plt>
   48734:	mov	x1, x28
   48738:	mov	w3, #0x0                   	// #0
   4873c:	mov	x2, #0x6                   	// #6
   48740:	mov	x0, x28
   48744:	bl	cd00 <mpfr_div_ui@plt>
   48748:	mov	x1, x26
   4874c:	mov	x2, x28
   48750:	mov	x0, x26
   48754:	mov	w3, #0x0                   	// #0
   48758:	bl	c230 <mpfr_add@plt>
   4875c:	ldr	x1, [sp, #240]
   48760:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   48764:	ldp	x6, x9, [sp, #136]
   48768:	cmp	x1, x0
   4876c:	ldp	x10, x8, [sp, #152]
   48770:	ldp	x11, x4, [sp, #168]
   48774:	b.gt	487a4 <mpfr_li2@@Base+0xebc>
   48778:	mov	x0, #0xfffffffffffffeff    	// #-257
   4877c:	movk	x0, #0x7fff, lsl #48
   48780:	sub	x0, x0, x20
   48784:	cmp	x0, x27
   48788:	b.ge	4885c <mpfr_li2@@Base+0xf74>  // b.tcont
   4878c:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   48790:	mov	w1, #0x1f5                 	// #501
   48794:	add	x2, x2, #0x6df
   48798:	b	47b3c <mpfr_li2@@Base+0x254>
   4879c:	mov	x4, #0x1                   	// #1
   487a0:	b	48660 <mpfr_li2@@Base+0xd78>
   487a4:	mov	x0, #0x1                   	// #1
   487a8:	sub	x0, x0, x8
   487ac:	mov	x3, #0x3                   	// #3
   487b0:	cmp	x0, x3
   487b4:	csel	x0, x0, x3, ge  // ge = tcont
   487b8:	sub	x4, x4, x11
   487bc:	cmp	x0, x4
   487c0:	csel	x4, x0, x4, ge  // ge = tcont
   487c4:	add	x0, x9, #0x2
   487c8:	add	x4, x4, #0x2
   487cc:	sub	x4, x4, x10
   487d0:	cmp	x0, x4
   487d4:	csel	x4, x0, x4, ge  // ge = tcont
   487d8:	mov	x0, #0xffffffffffffffff    	// #-1
   487dc:	subs	x4, x4, x6
   487e0:	csel	x4, x4, x0, pl  // pl = nfrst
   487e4:	add	x4, x4, #0x2
   487e8:	add	x2, x6, x4
   487ec:	cmp	x2, x3
   487f0:	csel	x2, x2, x3, ge  // ge = tcont
   487f4:	subs	x2, x2, x1
   487f8:	ldr	x1, [sp, #224]
   487fc:	csel	x2, x2, x0, pl  // pl = nfrst
   48800:	cmp	w24, #0x0
   48804:	add	x2, x2, #0x2
   48808:	add	x1, x1, x0
   4880c:	sub	x2, x20, x2
   48810:	ldr	x0, [sp, #128]
   48814:	asr	x1, x1, #6
   48818:	add	x1, x1, #0x1
   4881c:	cinc	x3, x0, eq  // eq = none
   48820:	ldr	x0, [sp, #248]
   48824:	bl	c400 <mpfr_round_p@plt>
   48828:	cbz	w0, 48778 <mpfr_li2@@Base+0xe90>
   4882c:	ldr	w3, [sp, #232]
   48830:	mov	w2, w24
   48834:	mov	x1, x26
   48838:	mov	x0, x23
   4883c:	bl	c730 <mpfr_set4@plt>
   48840:	mov	w27, w0
   48844:	mov	x3, x21
   48848:	mov	x2, x19
   4884c:	mov	x1, x28
   48850:	mov	x0, x26
   48854:	mov	x4, #0x0                   	// #0
   48858:	b	48548 <mpfr_li2@@Base+0xc60>
   4885c:	add	x20, x20, x27
   48860:	mov	x0, #0x2                   	// #2
   48864:	mov	x1, x20
   48868:	sdiv	x27, x20, x0
   4886c:	mov	x0, x26
   48870:	bl	bf50 <mpfr_set_prec@plt>
   48874:	mov	x1, x20
   48878:	mov	x0, x28
   4887c:	bl	bf50 <mpfr_set_prec@plt>
   48880:	mov	x1, x20
   48884:	mov	x0, x19
   48888:	bl	bf50 <mpfr_set_prec@plt>
   4888c:	mov	x1, x20
   48890:	mov	x0, x21
   48894:	bl	bf50 <mpfr_set_prec@plt>
   48898:	b	485e4 <mpfr_li2@@Base+0xcfc>
   4889c:	mov	x0, x25
   488a0:	mov	x2, #0x0                   	// #0
   488a4:	mov	x1, #0xffffffffffffffff    	// #-1
   488a8:	bl	c460 <mpfr_cmp_si_2exp@plt>
   488ac:	tbnz	w0, #31, 48a68 <mpfr_li2@@Base+0x1180>
   488b0:	add	x26, sp, #0x100
   488b4:	mov	x1, x20
   488b8:	mov	x0, x26
   488bc:	mov	x27, #0x40                  	// #64
   488c0:	bl	cb10 <mpfr_init2@plt>
   488c4:	mov	x1, x20
   488c8:	mov	x0, x19
   488cc:	bl	cb10 <mpfr_init2@plt>
   488d0:	mov	x1, x20
   488d4:	mov	x0, x21
   488d8:	bl	cb10 <mpfr_init2@plt>
   488dc:	mov	x1, x25
   488e0:	mov	w2, #0x0                   	// #0
   488e4:	mov	x0, x21
   488e8:	bl	bdf0 <mpfr_neg@plt>
   488ec:	mov	x1, x21
   488f0:	mov	w2, #0x0                   	// #0
   488f4:	mov	x0, x19
   488f8:	bl	c790 <mpfr_log1p@plt>
   488fc:	mov	x1, x19
   48900:	mov	w2, #0x0                   	// #0
   48904:	mov	x0, x26
   48908:	bl	475f4 <mpfr_d_div@@Base+0x12c>
   4890c:	mov	w4, w0
   48910:	mov	x1, x26
   48914:	mov	x0, x26
   48918:	mov	w2, #0x0                   	// #0
   4891c:	str	w4, [sp, #136]
   48920:	bl	bdf0 <mpfr_neg@plt>
   48924:	ldr	w4, [sp, #136]
   48928:	ldr	x5, [sp, #304]
   4892c:	cmp	w4, #0x0
   48930:	cbz	w4, 489dc <mpfr_li2@@Base+0x10f4>
   48934:	b.gt	48948 <mpfr_li2@@Base+0x1060>
   48938:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   4893c:	mov	w1, #0x214                 	// #532
   48940:	add	x2, x2, #0x715
   48944:	b	47b3c <mpfr_li2@@Base+0x254>
   48948:	sxtw	x4, w4
   4894c:	mov	w0, #0x41                  	// #65
   48950:	clz	x4, x4
   48954:	sub	w4, w0, w4
   48958:	sxtw	x4, w4
   4895c:	ldr	x6, [sp, #272]
   48960:	mov	x1, x19
   48964:	mov	w2, #0x0                   	// #0
   48968:	mov	x0, x19
   4896c:	stp	x6, x4, [sp, #136]
   48970:	str	x5, [sp, #152]
   48974:	bl	c490 <mpfr_sqr@plt>
   48978:	mov	x1, x19
   4897c:	mov	w3, #0x0                   	// #0
   48980:	mov	x2, #0x2                   	// #2
   48984:	mov	x0, x19
   48988:	bl	c980 <mpfr_div_2ui@plt>
   4898c:	mov	x1, x26
   48990:	mov	x2, x19
   48994:	mov	x0, x26
   48998:	mov	w3, #0x0                   	// #0
   4899c:	bl	bbf0 <mpfr_sub@plt>
   489a0:	ldr	x0, [sp, #272]
   489a4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   489a8:	ldp	x6, x4, [sp, #136]
   489ac:	cmp	x0, x1
   489b0:	ldr	x5, [sp, #152]
   489b4:	b.gt	489e4 <mpfr_li2@@Base+0x10fc>
   489b8:	mov	x0, #0xfffffffffffffeff    	// #-257
   489bc:	movk	x0, #0x7fff, lsl #48
   489c0:	sub	x0, x0, x20
   489c4:	cmp	x0, x27
   489c8:	b.ge	48a34 <mpfr_li2@@Base+0x114c>  // b.tcont
   489cc:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   489d0:	mov	w1, #0x21e                 	// #542
   489d4:	add	x2, x2, #0x6df
   489d8:	b	47b3c <mpfr_li2@@Base+0x254>
   489dc:	mov	x4, #0x1                   	// #1
   489e0:	b	4895c <mpfr_li2@@Base+0x1074>
   489e4:	neg	x2, x5
   489e8:	mov	x0, #0x3                   	// #3
   489ec:	cmp	x2, #0x3
   489f0:	sub	x4, x4, x6
   489f4:	csel	x2, x2, x0, ge  // ge = tcont
   489f8:	ldr	x0, [sp, #128]
   489fc:	cmp	x2, x4
   48a00:	ldr	x1, [sp, #256]
   48a04:	csel	x4, x2, x4, ge  // ge = tcont
   48a08:	cmp	w24, #0x0
   48a0c:	add	x2, x4, #0x2
   48a10:	cinc	x3, x0, eq  // eq = none
   48a14:	sub	x1, x1, #0x1
   48a18:	ldr	x0, [sp, #280]
   48a1c:	asr	x1, x1, #6
   48a20:	sub	x2, x20, x2
   48a24:	add	x1, x1, #0x1
   48a28:	bl	c400 <mpfr_round_p@plt>
   48a2c:	cbz	w0, 489b8 <mpfr_li2@@Base+0x10d0>
   48a30:	b	48288 <mpfr_li2@@Base+0x9a0>
   48a34:	add	x20, x20, x27
   48a38:	mov	x0, #0x2                   	// #2
   48a3c:	mov	x1, x20
   48a40:	sdiv	x27, x20, x0
   48a44:	mov	x0, x26
   48a48:	bl	bf50 <mpfr_set_prec@plt>
   48a4c:	mov	x1, x20
   48a50:	mov	x0, x19
   48a54:	bl	bf50 <mpfr_set_prec@plt>
   48a58:	mov	x1, x20
   48a5c:	mov	x0, x21
   48a60:	bl	bf50 <mpfr_set_prec@plt>
   48a64:	b	488dc <mpfr_li2@@Base+0xff4>
   48a68:	mov	x0, x25
   48a6c:	mov	x2, #0x0                   	// #0
   48a70:	mov	x1, #0xfffffffffffffff9    	// #-7
   48a74:	bl	c460 <mpfr_cmp_si_2exp@plt>
   48a78:	cmp	w0, #0x0
   48a7c:	b.le	48bb8 <mpfr_li2@@Base+0x12d0>
   48a80:	add	x26, sp, #0xc0
   48a84:	mov	x1, x20
   48a88:	mov	x0, x26
   48a8c:	add	x28, sp, #0xe0
   48a90:	bl	cb10 <mpfr_init2@plt>
   48a94:	mov	x27, #0x40                  	// #64
   48a98:	mov	x1, x20
   48a9c:	mov	x0, x28
   48aa0:	bl	cb10 <mpfr_init2@plt>
   48aa4:	add	x0, sp, #0x100
   48aa8:	mov	x1, x20
   48aac:	str	x0, [sp, #136]
   48ab0:	bl	cb10 <mpfr_init2@plt>
   48ab4:	mov	x1, x20
   48ab8:	mov	x0, x19
   48abc:	bl	cb10 <mpfr_init2@plt>
   48ac0:	mov	x1, x20
   48ac4:	mov	x0, x21
   48ac8:	bl	cb10 <mpfr_init2@plt>
   48acc:	mov	w3, #0x0                   	// #0
   48ad0:	mov	x2, x25
   48ad4:	mov	x1, #0x1                   	// #1
   48ad8:	mov	x0, x21
   48adc:	bl	c380 <mpfr_ui_div@plt>
   48ae0:	mov	x1, x21
   48ae4:	mov	w2, #0x0                   	// #0
   48ae8:	mov	x0, x21
   48aec:	bl	bdf0 <mpfr_neg@plt>
   48af0:	mov	x1, x21
   48af4:	mov	w2, #0x0                   	// #0
   48af8:	mov	x0, x28
   48afc:	bl	c790 <mpfr_log1p@plt>
   48b00:	mov	x1, x28
   48b04:	mov	w2, #0x0                   	// #0
   48b08:	mov	x0, x26
   48b0c:	bl	475f4 <mpfr_d_div@@Base+0x12c>
   48b10:	mov	w4, w0
   48b14:	mov	w3, #0x0                   	// #0
   48b18:	mov	x2, x25
   48b1c:	mov	x1, #0x1                   	// #1
   48b20:	mov	x0, x21
   48b24:	str	w4, [sp, #144]
   48b28:	bl	cae0 <mpfr_ui_sub@plt>
   48b2c:	mov	x1, x21
   48b30:	mov	w2, #0x2                   	// #2
   48b34:	mov	x0, x28
   48b38:	bl	c110 <mpfr_log@plt>
   48b3c:	mov	x1, x25
   48b40:	mov	w2, #0x0                   	// #0
   48b44:	mov	x0, x21
   48b48:	bl	bdf0 <mpfr_neg@plt>
   48b4c:	ldr	x0, [sp, #136]
   48b50:	mov	x1, x21
   48b54:	mov	w2, #0x2                   	// #2
   48b58:	bl	c110 <mpfr_log@plt>
   48b5c:	ldr	x1, [sp, #136]
   48b60:	mov	x2, x28
   48b64:	mov	w3, #0x0                   	// #0
   48b68:	mov	x0, x19
   48b6c:	bl	bdd0 <mpfr_mul@plt>
   48b70:	mov	x1, x19
   48b74:	mov	w3, #0x0                   	// #0
   48b78:	mov	x2, #0x1                   	// #1
   48b7c:	mov	x0, x19
   48b80:	bl	c980 <mpfr_div_2ui@plt>
   48b84:	mov	x2, x19
   48b88:	mov	x1, x26
   48b8c:	mov	x0, x26
   48b90:	mov	w3, #0x0                   	// #0
   48b94:	bl	bbf0 <mpfr_sub@plt>
   48b98:	ldr	w4, [sp, #144]
   48b9c:	cmp	w4, #0x0
   48ba0:	cbz	w4, 48ea4 <mpfr_li2@@Base+0x15bc>
   48ba4:	b.gt	48d54 <mpfr_li2@@Base+0x146c>
   48ba8:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   48bac:	mov	w1, #0x24d                 	// #589
   48bb0:	add	x2, x2, #0x8f4
   48bb4:	b	47b3c <mpfr_li2@@Base+0x254>
   48bb8:	ldr	x27, [x23]
   48bbc:	mov	x0, x25
   48bc0:	mov	x2, #0x0                   	// #0
   48bc4:	mov	x1, #0xfffffffffffffff9    	// #-7
   48bc8:	add	x26, x27, #0x14
   48bcc:	bl	c460 <mpfr_cmp_si_2exp@plt>
   48bd0:	cmp	w0, #0x0
   48bd4:	b.le	48bf0 <mpfr_li2@@Base+0x1308>
   48bd8:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   48bdc:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   48be0:	add	x2, x2, #0x7b3
   48be4:	add	x0, x0, #0x706
   48be8:	mov	w1, #0xb4                  	// #180
   48bec:	bl	cbd0 <mpfr_assert_fail@plt>
   48bf0:	mov	x1, x26
   48bf4:	mov	x0, x19
   48bf8:	bl	cb10 <mpfr_init2@plt>
   48bfc:	mov	x1, x26
   48c00:	mov	x0, x21
   48c04:	bl	cb10 <mpfr_init2@plt>
   48c08:	mov	x1, x25
   48c0c:	mov	w2, #0x0                   	// #0
   48c10:	mov	x0, x19
   48c14:	bl	bdf0 <mpfr_neg@plt>
   48c18:	mov	x1, x19
   48c1c:	mov	w2, #0x0                   	// #0
   48c20:	mov	x0, x19
   48c24:	bl	c110 <mpfr_log@plt>
   48c28:	mov	x1, x19
   48c2c:	mov	w2, #0x0                   	// #0
   48c30:	mov	x0, x19
   48c34:	bl	c490 <mpfr_sqr@plt>
   48c38:	mov	x1, x19
   48c3c:	mov	w3, #0x0                   	// #0
   48c40:	mov	x2, #0x1                   	// #1
   48c44:	mov	x0, x19
   48c48:	bl	c980 <mpfr_div_2ui@plt>
   48c4c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   48c50:	ldr	x1, [x0, #2640]
   48c54:	add	x0, x0, #0xa50
   48c58:	blr	x1
   48c5c:	mov	w2, #0x0                   	// #0
   48c60:	add	x1, x22, x0
   48c64:	mov	x0, x21
   48c68:	bl	c410 <mpfr_cache@plt>
   48c6c:	mov	x1, x21
   48c70:	mov	w2, #0x0                   	// #0
   48c74:	mov	x0, x21
   48c78:	bl	c490 <mpfr_sqr@plt>
   48c7c:	mov	x1, x21
   48c80:	mov	x0, x21
   48c84:	mov	w3, #0x0                   	// #0
   48c88:	mov	x2, #0x6                   	// #6
   48c8c:	bl	cd00 <mpfr_div_ui@plt>
   48c90:	ldr	x1, [sp, #304]
   48c94:	ldr	x0, [sp, #336]
   48c98:	cmp	x1, x0
   48c9c:	b.ge	48cb8 <mpfr_li2@@Base+0x13d0>  // b.tcont
   48ca0:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   48ca4:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   48ca8:	add	x2, x2, #0x8cf
   48cac:	add	x0, x0, #0x706
   48cb0:	mov	w1, #0xc0                  	// #192
   48cb4:	bl	cbd0 <mpfr_assert_fail@plt>
   48cb8:	mov	x2, x21
   48cbc:	mov	x1, x19
   48cc0:	mov	x0, x19
   48cc4:	mov	w3, #0x0                   	// #0
   48cc8:	bl	c230 <mpfr_add@plt>
   48ccc:	ldr	x1, [sp, #304]
   48cd0:	add	x0, x27, #0x12
   48cd4:	ldr	x2, [x25, #16]
   48cd8:	sub	x0, x0, x1
   48cdc:	cmp	x2, x0
   48ce0:	b.ge	48d00 <mpfr_li2@@Base+0x1418>  // b.tcont
   48ce4:	mov	w27, #0x0                   	// #0
   48ce8:	mov	x0, x19
   48cec:	bl	c0f0 <mpfr_clear@plt>
   48cf0:	mov	x0, x21
   48cf4:	bl	c0f0 <mpfr_clear@plt>
   48cf8:	cbz	w27, 48a80 <mpfr_li2@@Base+0x1198>
   48cfc:	b	47c78 <mpfr_li2@@Base+0x390>
   48d00:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   48d04:	cmp	x1, x0
   48d08:	b.le	48ce4 <mpfr_li2@@Base+0x13fc>
   48d0c:	ldr	x1, [sp, #288]
   48d10:	cmp	w24, #0x0
   48d14:	ldr	x0, [sp, #312]
   48d18:	sub	x1, x1, #0x1
   48d1c:	ldr	x3, [x23]
   48d20:	asr	x1, x1, #6
   48d24:	add	x2, x27, #0x10
   48d28:	add	x1, x1, #0x1
   48d2c:	cinc	x3, x3, eq  // eq = none
   48d30:	bl	c400 <mpfr_round_p@plt>
   48d34:	cbz	w0, 48ce4 <mpfr_li2@@Base+0x13fc>
   48d38:	mov	w2, w24
   48d3c:	mov	x1, x19
   48d40:	mov	x0, x23
   48d44:	bl	bdf0 <mpfr_neg@plt>
   48d48:	cmp	w24, #0x5
   48d4c:	csinc	w27, w0, wzr, ne  // ne = any
   48d50:	b	48ce8 <mpfr_li2@@Base+0x1400>
   48d54:	sxtw	x5, w4
   48d58:	mov	w0, #0x41                  	// #65
   48d5c:	clz	x5, x5
   48d60:	sub	w5, w0, w5
   48d64:	sxtw	x5, w5
   48d68:	ldr	x10, [sp, #208]
   48d6c:	sub	x5, x5, x10
   48d70:	cmp	x5, #0x2
   48d74:	b.le	48eac <mpfr_li2@@Base+0x15c4>
   48d78:	tbnz	w4, #31, 48ba8 <mpfr_li2@@Base+0x12c0>
   48d7c:	add	x5, x5, #0x1
   48d80:	ldr	x1, [sp, #136]
   48d84:	mov	w2, #0x0                   	// #0
   48d88:	mov	x0, x19
   48d8c:	stp	x10, x5, [sp, #176]
   48d90:	bl	c490 <mpfr_sqr@plt>
   48d94:	mov	x1, x19
   48d98:	mov	w3, #0x0                   	// #0
   48d9c:	mov	x2, #0x2                   	// #2
   48da0:	mov	x0, x19
   48da4:	bl	c980 <mpfr_div_2ui@plt>
   48da8:	mov	w3, #0x0                   	// #0
   48dac:	mov	x2, x19
   48db0:	mov	x1, x26
   48db4:	mov	x0, x26
   48db8:	bl	bbf0 <mpfr_sub@plt>
   48dbc:	ldr	x9, [sp, #208]
   48dc0:	mov	x1, x28
   48dc4:	ldr	x8, [sp, #304]
   48dc8:	mov	w2, #0x0                   	// #0
   48dcc:	mov	x0, x19
   48dd0:	stp	x9, x8, [sp, #160]
   48dd4:	bl	c490 <mpfr_sqr@plt>
   48dd8:	mov	x1, x19
   48ddc:	mov	w3, #0x0                   	// #0
   48de0:	mov	x2, #0x2                   	// #2
   48de4:	mov	x0, x19
   48de8:	bl	c980 <mpfr_div_2ui@plt>
   48dec:	mov	w3, #0x0                   	// #0
   48df0:	mov	x1, x26
   48df4:	mov	x2, x19
   48df8:	mov	x0, x26
   48dfc:	bl	c230 <mpfr_add@plt>
   48e00:	ldr	x4, [sp, #208]
   48e04:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   48e08:	ldr	x1, [x0, #2640]
   48e0c:	add	x0, x0, #0xa50
   48e10:	blr	x1
   48e14:	ldr	x6, [sp, #304]
   48e18:	add	x1, x22, x0
   48e1c:	mov	w2, #0x2                   	// #2
   48e20:	mov	x0, x19
   48e24:	stp	x4, x6, [sp, #144]
   48e28:	bl	c410 <mpfr_cache@plt>
   48e2c:	mov	x1, x19
   48e30:	mov	w2, #0x0                   	// #0
   48e34:	mov	x0, x19
   48e38:	bl	c490 <mpfr_sqr@plt>
   48e3c:	mov	x1, x19
   48e40:	mov	w3, #0x0                   	// #0
   48e44:	mov	x2, #0x6                   	// #6
   48e48:	mov	x0, x19
   48e4c:	bl	cd00 <mpfr_div_ui@plt>
   48e50:	mov	x2, x19
   48e54:	mov	x1, x26
   48e58:	mov	x0, x26
   48e5c:	mov	w3, #0x0                   	// #0
   48e60:	bl	bbf0 <mpfr_sub@plt>
   48e64:	ldr	x2, [sp, #208]
   48e68:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   48e6c:	ldp	x4, x6, [sp, #144]
   48e70:	cmp	x2, x0
   48e74:	ldp	x9, x8, [sp, #160]
   48e78:	ldp	x10, x5, [sp, #176]
   48e7c:	b.gt	48eb4 <mpfr_li2@@Base+0x15cc>
   48e80:	mov	x0, #0xfffffffffffffeff    	// #-257
   48e84:	movk	x0, #0x7fff, lsl #48
   48e88:	sub	x0, x0, x20
   48e8c:	cmp	x0, x27
   48e90:	b.ge	48f74 <mpfr_li2@@Base+0x168c>  // b.tcont
   48e94:	adrp	x2, 59000 <mpfr_l2b_2_0__tab@@Base+0x3488>
   48e98:	mov	w1, #0x266                 	// #614
   48e9c:	add	x2, x2, #0x6df
   48ea0:	b	47b3c <mpfr_li2@@Base+0x254>
   48ea4:	mov	x5, #0x1                   	// #1
   48ea8:	b	48d68 <mpfr_li2@@Base+0x1480>
   48eac:	mov	x5, #0x4                   	// #4
   48eb0:	b	48d80 <mpfr_li2@@Base+0x1498>
   48eb4:	add	x5, x10, x5
   48eb8:	add	x1, x8, #0x3
   48ebc:	cmp	x1, x5
   48ec0:	mov	x3, #0xffffffffffffffff    	// #-1
   48ec4:	csel	x1, x1, x5, ge  // ge = tcont
   48ec8:	subs	x1, x1, x9
   48ecc:	csel	x1, x1, x3, pl  // pl = nfrst
   48ed0:	add	x5, x1, #0x2
   48ed4:	add	x1, x6, #0x3
   48ed8:	add	x5, x9, x5
   48edc:	cmp	x1, x5
   48ee0:	csel	x1, x1, x5, ge  // ge = tcont
   48ee4:	subs	x1, x1, x4
   48ee8:	csel	x1, x1, x3, pl  // pl = nfrst
   48eec:	add	x1, x1, #0x2
   48ef0:	add	x0, x4, x1
   48ef4:	mov	x1, #0x3                   	// #3
   48ef8:	cmp	x0, #0x3
   48efc:	csel	x0, x0, x1, ge  // ge = tcont
   48f00:	subs	x0, x0, x2
   48f04:	csel	x0, x0, x3, pl  // pl = nfrst
   48f08:	cmp	w24, #0x0
   48f0c:	add	x0, x0, #0x2
   48f10:	add	x2, x2, x0
   48f14:	ldr	x0, [sp, #128]
   48f18:	sub	x2, x20, x2
   48f1c:	ldr	x1, [sp, #192]
   48f20:	add	x1, x1, x3
   48f24:	cinc	x3, x0, eq  // eq = none
   48f28:	ldr	x0, [sp, #216]
   48f2c:	asr	x1, x1, #6
   48f30:	add	x1, x1, #0x1
   48f34:	bl	c400 <mpfr_round_p@plt>
   48f38:	cbz	w0, 48e80 <mpfr_li2@@Base+0x1598>
   48f3c:	ldr	w3, [sp, #200]
   48f40:	mov	w2, w24
   48f44:	mov	x1, x26
   48f48:	mov	x0, x23
   48f4c:	bl	c730 <mpfr_set4@plt>
   48f50:	mov	w27, w0
   48f54:	ldr	x2, [sp, #136]
   48f58:	mov	x4, x21
   48f5c:	mov	x3, x19
   48f60:	mov	x1, x28
   48f64:	mov	x0, x26
   48f68:	mov	x5, #0x0                   	// #0
   48f6c:	bl	c240 <mpfr_clears@plt>
   48f70:	b	47c78 <mpfr_li2@@Base+0x390>
   48f74:	add	x20, x20, x27
   48f78:	mov	x0, #0x2                   	// #2
   48f7c:	mov	x1, x20
   48f80:	sdiv	x27, x20, x0
   48f84:	mov	x0, x26
   48f88:	bl	bf50 <mpfr_set_prec@plt>
   48f8c:	mov	x1, x20
   48f90:	mov	x0, x28
   48f94:	bl	bf50 <mpfr_set_prec@plt>
   48f98:	ldr	x0, [sp, #136]
   48f9c:	mov	x1, x20
   48fa0:	bl	bf50 <mpfr_set_prec@plt>
   48fa4:	mov	x1, x20
   48fa8:	mov	x0, x19
   48fac:	bl	bf50 <mpfr_set_prec@plt>
   48fb0:	mov	x1, x20
   48fb4:	mov	x0, x21
   48fb8:	bl	bf50 <mpfr_set_prec@plt>
   48fbc:	b	48acc <mpfr_li2@@Base+0x11e4>
   48fc0:	cbz	w27, 4795c <mpfr_li2@@Base+0x74>
   48fc4:	ldr	w0, [sp, #108]
   48fc8:	orr	w0, w0, #0x8
   48fcc:	str	w0, [x1]
   48fd0:	b	4795c <mpfr_li2@@Base+0x74>
   48fd4:	stp	x29, x30, [sp, #-176]!
   48fd8:	sub	x3, x3, #0x1
   48fdc:	mov	x29, sp
   48fe0:	stp	x19, x20, [sp, #16]
   48fe4:	sub	x19, x1, #0x1
   48fe8:	asr	x3, x3, #6
   48fec:	asr	x19, x19, #6
   48ff0:	stp	x21, x22, [sp, #32]
   48ff4:	mov	w20, w4
   48ff8:	stp	x23, x24, [sp, #48]
   48ffc:	cmp	x19, x3
   49000:	mov	x23, x2
   49004:	stp	x25, x26, [sp, #64]
   49008:	stp	x27, x28, [sp, #80]
   4900c:	mov	x27, x0
   49010:	add	x0, x19, #0x1
   49014:	stp	x0, x1, [x29, #136]
   49018:	b.ge	4909c <mpfr_li2@@Base+0x17b4>  // b.tcont
   4901c:	sub	x3, x3, x19
   49020:	mov	x25, x0
   49024:	add	x23, x2, x3, lsl #3
   49028:	ldr	x0, [x29, #144]
   4902c:	cmp	x0, #0xb
   49030:	b.ne	490a4 <mpfr_li2@@Base+0x17bc>  // b.any
   49034:	add	x23, x23, x25, lsl #3
   49038:	mov	w4, #0x34                  	// #52
   4903c:	sub	w4, w4, w20
   49040:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   49044:	add	x2, x2, #0x912
   49048:	ldur	x20, [x23, #-8]
   4904c:	lsr	x20, x20, x4
   49050:	lsr	x1, x20, #4
   49054:	and	x20, x20, #0xf
   49058:	and	x0, x1, #0x3f0
   4905c:	orr	x20, x0, x20
   49060:	add	x1, x2, x1, lsl #1
   49064:	add	x20, x2, x20
   49068:	ldrsh	x1, [x1, #128]
   4906c:	ldurb	w0, [x20, #-128]
   49070:	add	x0, x0, x1
   49074:	lsl	x0, x0, #53
   49078:	str	x0, [x27]
   4907c:	mov	sp, x29
   49080:	ldp	x19, x20, [sp, #16]
   49084:	ldp	x21, x22, [sp, #32]
   49088:	ldp	x23, x24, [sp, #48]
   4908c:	ldp	x25, x26, [sp, #64]
   49090:	ldp	x27, x28, [sp, #80]
   49094:	ldp	x29, x30, [sp], #176
   49098:	ret
   4909c:	add	x25, x3, #0x1
   490a0:	b	49028 <mpfr_li2@@Base+0x1740>
   490a4:	ldr	x0, [x29, #144]
   490a8:	mov	w4, w20
   490ac:	cmp	x0, #0x11
   490b0:	asr	x1, x0, #1
   490b4:	mov	x0, #0xb                   	// #11
   490b8:	add	x1, x1, #0x2
   490bc:	csel	x1, x1, x0, gt
   490c0:	sub	x0, x1, #0x1
   490c4:	add	x3, x1, #0x1
   490c8:	add	x3, x3, w20, sxtw
   490cc:	lsl	x8, x1, #1
   490d0:	asr	x0, x0, #6
   490d4:	sub	x22, x8, #0x1
   490d8:	add	x24, x0, #0x1
   490dc:	sub	x0, x19, x0
   490e0:	str	x0, [x29, #152]
   490e4:	sub	x0, x3, #0x3
   490e8:	sub	x3, x3, #0x1
   490ec:	add	x21, x8, w20, sxtw
   490f0:	asr	x0, x0, #6
   490f4:	str	x0, [x29, #120]
   490f8:	asr	x3, x3, #6
   490fc:	str	x8, [x29, #104]
   49100:	add	x3, x3, #0x1
   49104:	asr	x21, x21, #6
   49108:	ldr	x0, [x29, #152]
   4910c:	cmp	x25, x3
   49110:	csel	x3, x25, x3, le
   49114:	add	x21, x21, #0x1
   49118:	sub	x2, x25, x3
   4911c:	asr	x22, x22, #6
   49120:	add	x19, x27, x0, lsl #3
   49124:	lsl	x3, x3, #6
   49128:	add	x2, x23, x2, lsl #3
   4912c:	lsl	x26, x0, #3
   49130:	mov	x0, x19
   49134:	bl	48fd4 <mpfr_li2@@Base+0x16ec>
   49138:	ldr	x0, [x29, #120]
   4913c:	str	xzr, [x29, #168]
   49140:	add	x22, x22, #0x1
   49144:	sub	x0, x21, x0
   49148:	str	x0, [x29, #128]
   4914c:	add	x0, x0, x24
   49150:	str	x0, [x29, #112]
   49154:	lsl	x0, x24, #1
   49158:	str	x0, [x29, #96]
   4915c:	ldr	x0, [x29, #112]
   49160:	ldr	x8, [x29, #104]
   49164:	lsl	x1, x0, #3
   49168:	cmp	x1, #0x4, lsl #12
   4916c:	b.hi	49250 <mpfr_li2@@Base+0x1968>  // b.pmore
   49170:	add	x1, x1, #0xf
   49174:	and	x1, x1, #0xfffffffffffffff0
   49178:	sub	sp, sp, x1
   4917c:	mov	x28, sp
   49180:	cmp	x8, #0x40
   49184:	b.gt	49268 <mpfr_li2@@Base+0x1980>
   49188:	ldr	w0, [x27, #4]
   4918c:	add	x10, x28, #0x8
   49190:	mul	x0, x0, x0
   49194:	str	x0, [x28, #8]
   49198:	add	x0, x25, x22
   4919c:	str	x0, [x29, #104]
   491a0:	lsl	x1, x0, #3
   491a4:	cmp	x1, #0x4, lsl #12
   491a8:	b.hi	492b0 <mpfr_li2@@Base+0x19c8>  // b.pmore
   491ac:	add	x1, x1, #0xf
   491b0:	and	x1, x1, #0xfffffffffffffff0
   491b4:	sub	sp, sp, x1
   491b8:	mov	x8, sp
   491bc:	cmp	x22, #0x1
   491c0:	b.ne	492c8 <mpfr_li2@@Base+0x19e0>  // b.any
   491c4:	ldr	x0, [x10]
   491c8:	ldr	x1, [x23]
   491cc:	umulh	x2, x0, x1
   491d0:	mul	x0, x0, x1
   491d4:	stp	x0, x2, [x8]
   491d8:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
   491dc:	ldr	x0, [x29, #104]
   491e0:	lsr	x3, x3, x20
   491e4:	sub	x1, x0, x21
   491e8:	lsl	x0, x21, #3
   491ec:	sub	x0, x0, #0x8
   491f0:	lsl	x4, x1, #3
   491f4:	add	x1, x8, x1, lsl #3
   491f8:	ldr	x2, [x1, x0]
   491fc:	ands	x22, x2, x3
   49200:	b.ne	492ec <mpfr_li2@@Base+0x1a04>  // b.any
   49204:	orr	x2, x2, x3
   49208:	orr	x2, x2, #0x8000000000000000
   4920c:	str	x2, [x1, x0]
   49210:	mov	x0, #0x0                   	// #0
   49214:	ldr	x2, [x1, x0, lsl #3]
   49218:	mvn	x2, x2
   4921c:	str	x2, [x1, x0, lsl #3]
   49220:	add	x0, x0, #0x1
   49224:	cmp	x0, x21
   49228:	b.ne	49214 <mpfr_li2@@Base+0x192c>  // b.any
   4922c:	ldr	x0, [x29, #128]
   49230:	cmp	x0, #0x1
   49234:	b.eq	4932c <mpfr_li2@@Base+0x1a44>  // b.none
   49238:	ldr	x2, [x29, #128]
   4923c:	mov	x4, x24
   49240:	mov	x3, x19
   49244:	mov	x0, x28
   49248:	bl	c830 <__gmpn_mul@plt>
   4924c:	b	49340 <mpfr_li2@@Base+0x1a58>
   49250:	add	x0, x29, #0xa8
   49254:	str	x8, [x29, #104]
   49258:	bl	be40 <mpfr_tmp_allocate@plt>
   4925c:	mov	x28, x0
   49260:	ldr	x8, [x29, #104]
   49264:	b	49180 <mpfr_li2@@Base+0x1898>
   49268:	cmp	x24, #0x1
   4926c:	b.ne	49288 <mpfr_li2@@Base+0x19a0>  // b.any
   49270:	ldr	x0, [x27, x26]
   49274:	umulh	x1, x0, x0
   49278:	mov	x10, x28
   4927c:	mul	x0, x0, x0
   49280:	stp	x0, x1, [x28]
   49284:	b	49198 <mpfr_li2@@Base+0x18b0>
   49288:	mov	x0, x28
   4928c:	mov	x3, x24
   49290:	mov	x2, x19
   49294:	mov	x1, x19
   49298:	bl	c500 <__gmpn_mul_n@plt>
   4929c:	lsl	x0, x24, #1
   492a0:	add	x10, x28, #0x8
   492a4:	cmp	x0, x22
   492a8:	csel	x10, x10, x28, gt
   492ac:	b	49198 <mpfr_li2@@Base+0x18b0>
   492b0:	add	x0, x29, #0xa8
   492b4:	str	x10, [x29, #96]
   492b8:	bl	be40 <mpfr_tmp_allocate@plt>
   492bc:	mov	x8, x0
   492c0:	ldr	x10, [x29, #96]
   492c4:	b	491bc <mpfr_li2@@Base+0x18d4>
   492c8:	mov	x0, x8
   492cc:	mov	x4, x25
   492d0:	mov	x3, x23
   492d4:	mov	x2, x22
   492d8:	mov	x1, x10
   492dc:	str	x8, [x29, #96]
   492e0:	bl	c830 <__gmpn_mul@plt>
   492e4:	ldr	x8, [x29, #96]
   492e8:	b	491d8 <mpfr_li2@@Base+0x18f0>
   492ec:	eor	x2, x2, x22
   492f0:	str	x2, [x1, x0]
   492f4:	ldr	x0, [x8, x4]
   492f8:	add	x0, x0, #0x1
   492fc:	str	x0, [x8, x4]
   49300:	cbnz	x0, 4922c <mpfr_li2@@Base+0x1944>
   49304:	mov	x0, #0x1                   	// #1
   49308:	b	49320 <mpfr_li2@@Base+0x1a38>
   4930c:	ldr	x2, [x1, x0, lsl #3]
   49310:	add	x2, x2, #0x1
   49314:	str	x2, [x1, x0, lsl #3]
   49318:	add	x0, x0, #0x1
   4931c:	cbnz	x2, 4922c <mpfr_li2@@Base+0x1944>
   49320:	cmp	x21, x0
   49324:	b.gt	4930c <mpfr_li2@@Base+0x1a24>
   49328:	b	4922c <mpfr_li2@@Base+0x1944>
   4932c:	ldr	x0, [x1]
   49330:	ldr	x1, [x27, x26]
   49334:	umulh	x2, x0, x1
   49338:	mul	x0, x0, x1
   4933c:	stp	x0, x2, [x28]
   49340:	cmp	w20, #0x1
   49344:	ldr	x1, [x29, #120]
   49348:	ldr	x0, [x29, #136]
   4934c:	sub	x21, x0, x1
   49350:	ldr	x0, [x29, #112]
   49354:	sub	x23, x0, x21
   49358:	add	x23, x28, x23, lsl #3
   4935c:	b.ne	49374 <mpfr_li2@@Base+0x1a8c>  // b.any
   49360:	sub	x1, x23, #0x8
   49364:	mov	w3, w20
   49368:	add	x2, x21, #0x1
   4936c:	mov	x0, x1
   49370:	bl	bd40 <__gmpn_lshift@plt>
   49374:	ldr	x0, [x29, #136]
   49378:	ldr	x2, [x23]
   4937c:	lsl	x1, x0, #6
   49380:	ldr	x0, [x29, #144]
   49384:	sub	x25, x1, x0
   49388:	cmp	x25, #0x0
   4938c:	b.le	4940c <mpfr_li2@@Base+0x1b24>
   49390:	sub	w0, w25, #0x1
   49394:	mov	x1, #0x1                   	// #1
   49398:	lsl	x0, x1, x0
   4939c:	and	x0, x0, x2
   493a0:	adds	x0, x0, x2
   493a4:	str	x0, [x23]
   493a8:	b.cs	49404 <mpfr_li2@@Base+0x1b1c>  // b.hs, b.nlast
   493ac:	mov	x2, #0x0                   	// #0
   493b0:	mov	x0, #0xffffffffffffffff    	// #-1
   493b4:	lsl	x1, x0, x25
   493b8:	ldr	x0, [x23]
   493bc:	and	x0, x0, x1
   493c0:	str	x0, [x23]
   493c4:	cbz	x2, 49420 <mpfr_li2@@Base+0x1b38>
   493c8:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   493cc:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   493d0:	add	x2, x2, #0x8fe
   493d4:	add	x0, x0, #0x906
   493d8:	mov	w1, #0x17e                 	// #382
   493dc:	bl	cbd0 <mpfr_assert_fail@plt>
   493e0:	ldr	x1, [x23, x0, lsl #3]
   493e4:	add	x1, x1, #0x1
   493e8:	str	x1, [x23, x0, lsl #3]
   493ec:	add	x0, x0, #0x1
   493f0:	cbnz	x1, 493ac <mpfr_li2@@Base+0x1ac4>
   493f4:	cmp	x21, x0
   493f8:	b.ne	493e0 <mpfr_li2@@Base+0x1af8>  // b.any
   493fc:	mov	x2, #0x1                   	// #1
   49400:	b	493b0 <mpfr_li2@@Base+0x1ac8>
   49404:	mov	x0, x1
   49408:	b	493f4 <mpfr_li2@@Base+0x1b0c>
   4940c:	ldur	x1, [x23, #-8]
   49410:	lsr	x1, x1, #63
   49414:	adds	x1, x1, x2
   49418:	str	x1, [x23]
   4941c:	b.cs	494b8 <mpfr_li2@@Base+0x1bd0>  // b.hs, b.nlast
   49420:	ldr	x0, [x29, #152]
   49424:	add	x28, x23, x26
   49428:	sub	x20, x21, x0
   4942c:	cbnz	x22, 494c0 <mpfr_li2@@Base+0x1bd8>
   49430:	cmp	x0, #0x0
   49434:	b.le	49450 <mpfr_li2@@Base+0x1b68>
   49438:	cmp	x27, x23
   4943c:	b.eq	49450 <mpfr_li2@@Base+0x1b68>  // b.none
   49440:	mov	x2, x26
   49444:	mov	x1, x23
   49448:	mov	x0, x27
   4944c:	bl	ba90 <memcpy@plt>
   49450:	cbz	x20, 49488 <mpfr_li2@@Base+0x1ba0>
   49454:	mov	x3, x20
   49458:	mov	x2, x28
   4945c:	mov	x1, x19
   49460:	mov	x0, x19
   49464:	bl	c630 <__gmpn_add_n@plt>
   49468:	cbz	x0, 49488 <mpfr_li2@@Base+0x1ba0>
   4946c:	cmp	x24, x20
   49470:	b.le	495c8 <mpfr_li2@@Base+0x1ce0>
   49474:	ldr	x0, [x19, x20, lsl #3]
   49478:	add	x0, x0, #0x1
   4947c:	str	x0, [x19, x20, lsl #3]
   49480:	add	x20, x20, #0x1
   49484:	cbz	x0, 4946c <mpfr_li2@@Base+0x1b84>
   49488:	ldr	x0, [x29, #168]
   4948c:	cbz	x0, 4907c <mpfr_li2@@Base+0x1794>
   49490:	bl	c4a0 <mpfr_tmp_free@plt>
   49494:	b	4907c <mpfr_li2@@Base+0x1794>
   49498:	ldr	x1, [x23, x0, lsl #3]
   4949c:	add	x1, x1, #0x1
   494a0:	str	x1, [x23, x0, lsl #3]
   494a4:	add	x0, x0, #0x1
   494a8:	cbnz	x1, 49420 <mpfr_li2@@Base+0x1b38>
   494ac:	cmp	x21, x0
   494b0:	b.ne	49498 <mpfr_li2@@Base+0x1bb0>  // b.any
   494b4:	b	493c8 <mpfr_li2@@Base+0x1ae0>
   494b8:	mov	x0, #0x1                   	// #1
   494bc:	b	494ac <mpfr_li2@@Base+0x1bc4>
   494c0:	cbnz	x20, 4953c <mpfr_li2@@Base+0x1c54>
   494c4:	ldr	x0, [x29, #152]
   494c8:	cmp	x0, #0x0
   494cc:	b.le	49488 <mpfr_li2@@Base+0x1ba0>
   494d0:	mov	x0, #0x0                   	// #0
   494d4:	ldr	x1, [x23, x0, lsl #3]
   494d8:	mvn	x1, x1
   494dc:	str	x1, [x27, x0, lsl #3]
   494e0:	ldr	x1, [x29, #152]
   494e4:	add	x0, x0, #0x1
   494e8:	cmp	x1, x0
   494ec:	b.ne	494d4 <mpfr_li2@@Base+0x1bec>  // b.any
   494f0:	ldr	x0, [x27]
   494f4:	add	x0, x0, #0x1
   494f8:	str	x0, [x27]
   494fc:	cbz	x0, 49594 <mpfr_li2@@Base+0x1cac>
   49500:	mov	x0, #0x0                   	// #0
   49504:	ldr	x1, [x27, x26]
   49508:	sub	x2, x1, #0x1
   4950c:	str	x2, [x27, x26]
   49510:	cbz	x1, 495c0 <mpfr_li2@@Base+0x1cd8>
   49514:	mov	x1, #0x0                   	// #0
   49518:	subs	x1, x0, x1
   4951c:	b.eq	49488 <mpfr_li2@@Base+0x1ba0>  // b.none
   49520:	ldr	x2, [x27]
   49524:	mov	x0, #0x1                   	// #1
   49528:	lsl	x25, x0, x25
   4952c:	sub	x3, x2, x25
   49530:	str	x3, [x27]
   49534:	cmp	x25, x2
   49538:	b.hi	495e4 <mpfr_li2@@Base+0x1cfc>  // b.pmore
   4953c:	mov	x3, x20
   49540:	mov	x2, x28
   49544:	mov	x1, x19
   49548:	mov	x0, x19
   4954c:	bl	bee0 <__gmpn_sub_n@plt>
   49550:	cbz	x0, 494c4 <mpfr_li2@@Base+0x1bdc>
   49554:	ldr	x0, [x19, x20, lsl #3]
   49558:	sub	x1, x0, #0x1
   4955c:	str	x1, [x19, x20, lsl #3]
   49560:	add	x20, x20, #0x1
   49564:	cbz	x0, 49554 <mpfr_li2@@Base+0x1c6c>
   49568:	b	494c4 <mpfr_li2@@Base+0x1bdc>
   4956c:	ldr	x1, [x27, x0, lsl #3]
   49570:	add	x1, x1, #0x1
   49574:	str	x1, [x27, x0, lsl #3]
   49578:	add	x0, x0, #0x1
   4957c:	cbnz	x1, 49500 <mpfr_li2@@Base+0x1c18>
   49580:	ldr	x1, [x29, #136]
   49584:	cmp	x1, x0
   49588:	b.gt	4956c <mpfr_li2@@Base+0x1c84>
   4958c:	mov	x0, #0x1                   	// #1
   49590:	b	49504 <mpfr_li2@@Base+0x1c1c>
   49594:	mov	x0, #0x1                   	// #1
   49598:	b	49580 <mpfr_li2@@Base+0x1c98>
   4959c:	ldr	x2, [x19, x1, lsl #3]
   495a0:	sub	x3, x2, #0x1
   495a4:	str	x3, [x19, x1, lsl #3]
   495a8:	add	x1, x1, #0x1
   495ac:	cbnz	x2, 49514 <mpfr_li2@@Base+0x1c2c>
   495b0:	cmp	x24, x1
   495b4:	b.gt	4959c <mpfr_li2@@Base+0x1cb4>
   495b8:	mov	x1, #0x1                   	// #1
   495bc:	b	49518 <mpfr_li2@@Base+0x1c30>
   495c0:	mov	x1, #0x1                   	// #1
   495c4:	b	495b0 <mpfr_li2@@Base+0x1cc8>
   495c8:	mov	x1, #0x1                   	// #1
   495cc:	b	49520 <mpfr_li2@@Base+0x1c38>
   495d0:	ldr	x2, [x27, x0, lsl #3]
   495d4:	sub	x3, x2, #0x1
   495d8:	str	x3, [x27, x0, lsl #3]
   495dc:	add	x0, x0, #0x1
   495e0:	cbnz	x2, 4953c <mpfr_li2@@Base+0x1c54>
   495e4:	ldr	x2, [x29, #136]
   495e8:	cmp	x2, x0
   495ec:	b.gt	495d0 <mpfr_li2@@Base+0x1ce8>
   495f0:	cmp	x1, #0x1
   495f4:	b.eq	49488 <mpfr_li2@@Base+0x1ba0>  // b.none
   495f8:	b	4953c <mpfr_li2@@Base+0x1c54>

00000000000495fc <mpfr_rec_sqrt@@Base>:
   495fc:	stp	x29, x30, [sp, #-144]!
   49600:	mov	x29, sp
   49604:	stp	x19, x20, [sp, #16]
   49608:	ldr	x20, [x1, #16]
   4960c:	stp	x21, x22, [sp, #32]
   49610:	stp	x23, x24, [sp, #48]
   49614:	stp	x25, x26, [sp, #64]
   49618:	stp	x27, x28, [sp, #80]
   4961c:	mov	x27, x1
   49620:	mov	x28, x0
   49624:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   49628:	cmp	x20, x1
   4962c:	b.gt	496ec <mpfr_rec_sqrt@@Base+0xf0>
   49630:	mov	x0, #0x2                   	// #2
   49634:	movk	x0, #0x8000, lsl #48
   49638:	cmp	x20, x0
   4963c:	b.ne	49698 <mpfr_rec_sqrt@@Base+0x9c>  // b.any
   49640:	mov	x0, #0x2                   	// #2
   49644:	movk	x0, #0x8000, lsl #48
   49648:	str	x0, [x28, #16]
   4964c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   49650:	ldr	x1, [x0, #2592]
   49654:	add	x0, x0, #0xa20
   49658:	blr	x1
   4965c:	mrs	x1, tpidr_el0
   49660:	add	x0, x1, x0
   49664:	ldr	w1, [x0]
   49668:	orr	w1, w1, #0x4
   4966c:	str	w1, [x0]
   49670:	mov	w1, #0x0                   	// #0
   49674:	mov	sp, x29
   49678:	mov	w0, w1
   4967c:	ldp	x19, x20, [sp, #16]
   49680:	ldp	x21, x22, [sp, #32]
   49684:	ldp	x23, x24, [sp, #48]
   49688:	ldp	x25, x26, [sp, #64]
   4968c:	ldp	x27, x28, [sp, #80]
   49690:	ldp	x29, x30, [sp], #144
   49694:	ret
   49698:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4969c:	cmp	x20, x0
   496a0:	b.ne	496d4 <mpfr_rec_sqrt@@Base+0xd8>  // b.any
   496a4:	mov	w0, #0x1                   	// #1
   496a8:	str	w0, [x28, #8]
   496ac:	str	x1, [x28, #16]
   496b0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   496b4:	ldr	x1, [x0, #2592]
   496b8:	add	x0, x0, #0xa20
   496bc:	blr	x1
   496c0:	mrs	x1, tpidr_el0
   496c4:	add	x0, x1, x0
   496c8:	ldr	w1, [x0]
   496cc:	orr	w1, w1, #0x20
   496d0:	b	4966c <mpfr_rec_sqrt@@Base+0x70>
   496d4:	ldr	w1, [x27, #8]
   496d8:	tbnz	w1, #31, 49640 <mpfr_rec_sqrt@@Base+0x44>
   496dc:	mov	w1, #0x1                   	// #1
   496e0:	str	w1, [x28, #8]
   496e4:	str	x0, [x28, #16]
   496e8:	b	49670 <mpfr_rec_sqrt@@Base+0x74>
   496ec:	ldr	w0, [x27, #8]
   496f0:	tbnz	w0, #31, 49640 <mpfr_rec_sqrt@@Base+0x44>
   496f4:	ldr	x24, [x28]
   496f8:	and	x1, x20, #0x1
   496fc:	str	x1, [x29, #120]
   49700:	eor	x1, x1, #0x1
   49704:	sub	x25, x24, #0x1
   49708:	str	x1, [x29, #112]
   4970c:	mov	w0, #0x1                   	// #1
   49710:	mov	w22, w2
   49714:	asr	x25, x25, #6
   49718:	ldr	w19, [x29, #112]
   4971c:	add	x1, x25, #0x1
   49720:	ldr	x26, [x27]
   49724:	lsl	x10, x1, #6
   49728:	str	w0, [x28, #8]
   4972c:	add	x0, x24, #0xb
   49730:	cmp	x10, x0
   49734:	csel	x23, x10, x0, ge  // ge = tcont
   49738:	add	x0, x29, #0x88
   4973c:	stp	x0, x1, [x29, #96]
   49740:	sub	x0, x23, #0x1
   49744:	str	xzr, [x29, #136]
   49748:	cmp	x27, x28
   4974c:	asr	x0, x0, #6
   49750:	add	x21, x0, #0x1
   49754:	ccmp	x25, x0, #0x1, ne  // ne = any
   49758:	b.ge	498ec <mpfr_rec_sqrt@@Base+0x2f0>  // b.tcont
   4975c:	lsl	x1, x21, #3
   49760:	cmp	x1, #0x4, lsl #12
   49764:	b.hi	498dc <mpfr_rec_sqrt@@Base+0x2e0>  // b.pmore
   49768:	add	x1, x1, #0xf
   4976c:	and	x1, x1, #0xfffffffffffffff0
   49770:	sub	sp, sp, x1
   49774:	mov	x20, sp
   49778:	ldr	x2, [x27, #24]
   4977c:	mov	x3, x26
   49780:	mov	x1, x23
   49784:	mov	x0, x20
   49788:	mov	w4, w19
   4978c:	bl	48fd4 <mpfr_li2@@Base+0x16ec>
   49790:	cmp	w22, #0x0
   49794:	mov	x1, x21
   49798:	cinc	x3, x24, eq  // eq = none
   4979c:	cmp	x23, x26
   497a0:	cset	x2, lt  // lt = tstop
   497a4:	mov	x0, x20
   497a8:	sub	x2, x23, x2
   497ac:	bl	c400 <mpfr_round_p@plt>
   497b0:	cbnz	w0, 49808 <mpfr_rec_sqrt@@Base+0x20c>
   497b4:	ldr	x0, [x29, #120]
   497b8:	cbz	x0, 4991c <mpfr_rec_sqrt@@Base+0x320>
   497bc:	ldr	x2, [x27, #16]
   497c0:	mov	x0, x27
   497c4:	mov	x1, #0x1                   	// #1
   497c8:	sub	x2, x2, #0x1
   497cc:	bl	bfd0 <mpfr_cmp_ui_2exp@plt>
   497d0:	cbnz	w0, 4991c <mpfr_rec_sqrt@@Base+0x320>
   497d4:	lsl	x0, x21, #6
   497d8:	mov	x1, #0x1                   	// #1
   497dc:	ldr	x2, [x20]
   497e0:	sub	x0, x0, x23
   497e4:	lsl	x0, x1, x0
   497e8:	adds	x0, x0, x2
   497ec:	str	x0, [x20]
   497f0:	b.cs	49914 <mpfr_rec_sqrt@@Base+0x318>  // b.hs, b.nlast
   497f4:	add	x21, x20, x21, lsl #3
   497f8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   497fc:	stur	x0, [x21, #-8]
   49800:	ldr	w0, [x29, #112]
   49804:	add	w19, w0, #0x2
   49808:	ldr	x0, [x28, #24]
   4980c:	mov	x1, x20
   49810:	add	x6, x29, #0x84
   49814:	mov	w5, w22
   49818:	mov	x4, x24
   4981c:	mov	x2, x23
   49820:	mov	w3, #0x0                   	// #0
   49824:	bl	cab0 <mpfr_round_raw@plt>
   49828:	ldr	x1, [x27, #16]
   4982c:	sxtw	x19, w19
   49830:	sub	x1, x1, #0x1
   49834:	sub	x19, x19, x1
   49838:	mov	x1, #0x2                   	// #2
   4983c:	sdiv	x19, x19, x1
   49840:	str	x19, [x28, #16]
   49844:	cbz	w0, 49864 <mpfr_rec_sqrt@@Base+0x268>
   49848:	ldr	x0, [x28, #24]
   4984c:	add	x19, x19, #0x1
   49850:	ldr	x1, [x29, #104]
   49854:	str	x19, [x28, #16]
   49858:	add	x23, x0, x1, lsl #3
   4985c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   49860:	stur	x0, [x23, #-8]
   49864:	ldr	x0, [x29, #136]
   49868:	cbz	x0, 49870 <mpfr_rec_sqrt@@Base+0x274>
   4986c:	bl	c4a0 <mpfr_tmp_free@plt>
   49870:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   49874:	ldr	x2, [x0, #2528]
   49878:	add	x0, x0, #0x9e0
   4987c:	blr	x2
   49880:	ldr	w1, [x29, #132]
   49884:	mrs	x2, tpidr_el0
   49888:	ldr	x3, [x28, #16]
   4988c:	ldr	x0, [x2, x0]
   49890:	cmp	x3, x0
   49894:	b.lt	49930 <mpfr_rec_sqrt@@Base+0x334>  // b.tstop
   49898:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4989c:	ldr	x4, [x0, #2560]
   498a0:	add	x0, x0, #0xa00
   498a4:	blr	x4
   498a8:	ldr	x0, [x2, x0]
   498ac:	cmp	x3, x0
   498b0:	b.gt	49930 <mpfr_rec_sqrt@@Base+0x334>
   498b4:	cbz	w1, 49674 <mpfr_rec_sqrt@@Base+0x78>
   498b8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   498bc:	ldr	x3, [x0, #2592]
   498c0:	add	x0, x0, #0xa20
   498c4:	blr	x3
   498c8:	add	x0, x2, x0
   498cc:	ldr	w2, [x0]
   498d0:	orr	w2, w2, #0x8
   498d4:	str	w2, [x0]
   498d8:	b	49674 <mpfr_rec_sqrt@@Base+0x78>
   498dc:	ldr	x0, [x29, #96]
   498e0:	bl	be40 <mpfr_tmp_allocate@plt>
   498e4:	mov	x20, x0
   498e8:	b	49778 <mpfr_rec_sqrt@@Base+0x17c>
   498ec:	ldr	x20, [x28, #24]
   498f0:	b	49778 <mpfr_rec_sqrt@@Base+0x17c>
   498f4:	ldr	x1, [x20, x0, lsl #3]
   498f8:	add	x1, x1, #0x1
   498fc:	str	x1, [x20, x0, lsl #3]
   49900:	add	x0, x0, #0x1
   49904:	cbnz	x1, 497f4 <mpfr_rec_sqrt@@Base+0x1f8>
   49908:	cmp	x21, x0
   4990c:	b.gt	498f4 <mpfr_rec_sqrt@@Base+0x2f8>
   49910:	b	497f4 <mpfr_rec_sqrt@@Base+0x1f8>
   49914:	mov	x0, x1
   49918:	b	49908 <mpfr_rec_sqrt@@Base+0x30c>
   4991c:	ldr	x0, [x29, #136]
   49920:	cbz	x0, 49928 <mpfr_rec_sqrt@@Base+0x32c>
   49924:	bl	c4a0 <mpfr_tmp_free@plt>
   49928:	add	x23, x23, #0x40
   4992c:	b	49740 <mpfr_rec_sqrt@@Base+0x144>
   49930:	mov	w2, w22
   49934:	mov	x0, x28
   49938:	bl	cbc0 <mpfr_check_range@plt>
   4993c:	mov	w1, w0
   49940:	b	49674 <mpfr_rec_sqrt@@Base+0x78>

0000000000049944 <mpfr_min_prec@@Base>:
   49944:	stp	x29, x30, [sp, #-32]!
   49948:	mov	x29, sp
   4994c:	ldr	x1, [x0, #16]
   49950:	str	x19, [sp, #16]
   49954:	mov	x19, x0
   49958:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4995c:	cmp	x1, x0
   49960:	b.le	49990 <mpfr_min_prec@@Base+0x4c>
   49964:	ldr	x0, [x19, #24]
   49968:	mov	x1, #0x0                   	// #0
   4996c:	bl	cb30 <__gmpn_scan1@plt>
   49970:	ldr	x1, [x19]
   49974:	sub	x1, x1, #0x1
   49978:	and	x1, x1, #0xffffffffffffffc0
   4997c:	add	x1, x1, #0x40
   49980:	sub	x0, x1, x0
   49984:	ldr	x19, [sp, #16]
   49988:	ldp	x29, x30, [sp], #32
   4998c:	ret
   49990:	mov	x0, #0x0                   	// #0
   49994:	b	49984 <mpfr_min_prec@@Base+0x40>

0000000000049998 <mpfr_buildopt_tls_p@@Base>:
   49998:	mov	w0, #0x1                   	// #1
   4999c:	ret

00000000000499a0 <mpfr_buildopt_float128_p@@Base>:
   499a0:	mov	w0, #0x0                   	// #0
   499a4:	ret

00000000000499a8 <mpfr_buildopt_decimal_p@@Base>:
   499a8:	mov	w0, #0x0                   	// #0
   499ac:	ret

00000000000499b0 <mpfr_buildopt_gmpinternals_p@@Base>:
   499b0:	mov	w0, #0x0                   	// #0
   499b4:	ret

00000000000499b8 <mpfr_buildopt_sharedcache_p@@Base>:
   499b8:	mov	w0, #0x0                   	// #0
   499bc:	ret

00000000000499c0 <mpfr_buildopt_tune_case@@Base>:
   499c0:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   499c4:	add	x0, x0, #0xd92
   499c8:	ret

00000000000499cc <mpfr_digamma@@Base>:
   499cc:	stp	x29, x30, [sp, #-400]!
   499d0:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   499d4:	mov	x29, sp
   499d8:	stp	x21, x22, [sp, #32]
   499dc:	mov	x22, x1
   499e0:	ldr	x1, [x1, #16]
   499e4:	stp	x19, x20, [sp, #16]
   499e8:	mov	x19, x0
   499ec:	stp	x23, x24, [sp, #48]
   499f0:	cmp	x1, x3
   499f4:	stp	x25, x26, [sp, #64]
   499f8:	stp	x27, x28, [sp, #80]
   499fc:	b.gt	49ab0 <mpfr_digamma@@Base+0xe4>
   49a00:	mov	x0, #0x2                   	// #2
   49a04:	movk	x0, #0x8000, lsl #48
   49a08:	cmp	x1, x0
   49a0c:	mov	x2, x0
   49a10:	b.ne	49a3c <mpfr_digamma@@Base+0x70>  // b.any
   49a14:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   49a18:	ldr	x1, [x0, #2592]
   49a1c:	add	x0, x0, #0xa20
   49a20:	blr	x1
   49a24:	str	x2, [x19, #16]
   49a28:	mrs	x1, tpidr_el0
   49a2c:	add	x0, x1, x0
   49a30:	ldr	w1, [x0]
   49a34:	orr	w1, w1, #0x4
   49a38:	b	49aa8 <mpfr_digamma@@Base+0xdc>
   49a3c:	ldr	w0, [x22, #8]
   49a40:	cmp	x1, x3
   49a44:	b.ne	49a7c <mpfr_digamma@@Base+0xb0>  // b.any
   49a48:	cmp	w0, #0x0
   49a4c:	b.le	49a14 <mpfr_digamma@@Base+0x48>
   49a50:	str	w0, [x19, #8]
   49a54:	str	x1, [x19, #16]
   49a58:	mov	w22, #0x0                   	// #0
   49a5c:	mov	w0, w22
   49a60:	ldp	x19, x20, [sp, #16]
   49a64:	ldp	x21, x22, [sp, #32]
   49a68:	ldp	x23, x24, [sp, #48]
   49a6c:	ldp	x25, x26, [sp, #64]
   49a70:	ldp	x27, x28, [sp, #80]
   49a74:	ldp	x29, x30, [sp], #400
   49a78:	ret
   49a7c:	neg	w0, w0
   49a80:	str	w0, [x19, #8]
   49a84:	str	x3, [x19, #16]
   49a88:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   49a8c:	ldr	x1, [x0, #2592]
   49a90:	add	x0, x0, #0xa20
   49a94:	blr	x1
   49a98:	mrs	x1, tpidr_el0
   49a9c:	add	x0, x1, x0
   49aa0:	ldr	w1, [x0]
   49aa4:	orr	w1, w1, #0x20
   49aa8:	str	w1, [x0]
   49aac:	b	49a58 <mpfr_digamma@@Base+0x8c>
   49ab0:	ldr	w0, [x22, #8]
   49ab4:	mov	w20, w2
   49ab8:	mrs	x26, tpidr_el0
   49abc:	tbz	w0, #31, 49af0 <mpfr_digamma@@Base+0x124>
   49ac0:	mov	x0, x22
   49ac4:	bl	c1f0 <mpfr_integer_p@plt>
   49ac8:	cbz	w0, 49af0 <mpfr_digamma@@Base+0x124>
   49acc:	mov	x0, #0x2                   	// #2
   49ad0:	movk	x0, #0x8000, lsl #48
   49ad4:	str	x0, [x19, #16]
   49ad8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   49adc:	ldr	x1, [x0, #2592]
   49ae0:	add	x0, x0, #0xa20
   49ae4:	blr	x1
   49ae8:	add	x0, x26, x0
   49aec:	b	49a30 <mpfr_digamma@@Base+0x64>
   49af0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   49af4:	ldr	x1, [x0, #2592]
   49af8:	add	x0, x0, #0xa20
   49afc:	blr	x1
   49b00:	ldr	w0, [x26, x0]
   49b04:	str	w0, [sp, #132]
   49b08:	ldr	w21, [x22, #8]
   49b0c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   49b10:	ldr	x1, [x0, #2528]
   49b14:	add	x0, x0, #0x9e0
   49b18:	blr	x1
   49b1c:	add	x1, x26, x0
   49b20:	ldr	x0, [x26, x0]
   49b24:	str	x0, [sp, #160]
   49b28:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   49b2c:	ldr	x2, [x0, #2560]
   49b30:	add	x0, x0, #0xa00
   49b34:	blr	x2
   49b38:	ldr	x2, [x26, x0]
   49b3c:	str	x2, [sp, #168]
   49b40:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   49b44:	str	x2, [x1]
   49b48:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   49b4c:	str	x1, [x26, x0]
   49b50:	ldr	x0, [x22, #16]
   49b54:	cmn	x0, #0x2
   49b58:	b.ge	49c8c <mpfr_digamma@@Base+0x2c0>  // b.tcont
   49b5c:	ldr	x2, [x22]
   49b60:	ldr	x1, [x19]
   49b64:	cmp	x1, x2
   49b68:	csel	x1, x1, x2, ge  // ge = tcont
   49b6c:	mov	x2, #0xfffffffffffffffe    	// #-2
   49b70:	mul	x1, x1, x2
   49b74:	cmp	x0, x1
   49b78:	b.gt	49c90 <mpfr_digamma@@Base+0x2c4>
   49b7c:	mov	x2, x22
   49b80:	mov	w3, w20
   49b84:	mov	x0, x19
   49b88:	mov	x1, #0xffffffffffffffff    	// #-1
   49b8c:	bl	c940 <mpfr_si_div@plt>
   49b90:	mov	w22, w0
   49b94:	cbnz	w0, 49bb0 <mpfr_digamma@@Base+0x1e4>
   49b98:	cmp	w20, #0x4
   49b9c:	b.ne	49c50 <mpfr_digamma@@Base+0x284>  // b.any
   49ba0:	cmp	w21, #0x0
   49ba4:	b.gt	49c60 <mpfr_digamma@@Base+0x294>
   49ba8:	mov	w22, #0x1                   	// #1
   49bac:	mov	w20, #0x2                   	// #2
   49bb0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   49bb4:	ldr	x1, [x0, #2592]
   49bb8:	add	x0, x0, #0xa20
   49bbc:	blr	x1
   49bc0:	ldr	w0, [x26, x0]
   49bc4:	ldr	w1, [sp, #132]
   49bc8:	orr	w0, w1, w0
   49bcc:	str	w0, [sp, #132]
   49bd0:	ldr	w2, [sp, #132]
   49bd4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   49bd8:	ldr	x1, [x0, #2592]
   49bdc:	add	x0, x0, #0xa20
   49be0:	blr	x1
   49be4:	add	x1, x26, x0
   49be8:	str	w2, [x26, x0]
   49bec:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   49bf0:	ldr	x2, [x0, #2528]
   49bf4:	add	x0, x0, #0x9e0
   49bf8:	blr	x2
   49bfc:	ldr	x2, [sp, #160]
   49c00:	str	x2, [x26, x0]
   49c04:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   49c08:	ldr	x2, [x0, #2560]
   49c0c:	add	x0, x0, #0xa00
   49c10:	blr	x2
   49c14:	ldr	x2, [sp, #168]
   49c18:	str	x2, [x26, x0]
   49c1c:	ldr	x0, [x19, #16]
   49c20:	ldr	x2, [sp, #160]
   49c24:	cmp	x2, x0
   49c28:	b.gt	49c38 <mpfr_digamma@@Base+0x26c>
   49c2c:	ldr	x2, [sp, #168]
   49c30:	cmp	x2, x0
   49c34:	b.ge	4a1f0 <mpfr_digamma@@Base+0x824>  // b.tcont
   49c38:	mov	w1, w22
   49c3c:	mov	w2, w20
   49c40:	mov	x0, x19
   49c44:	bl	cbc0 <mpfr_check_range@plt>
   49c48:	mov	w22, w0
   49c4c:	b	49a5c <mpfr_digamma@@Base+0x90>
   49c50:	cmp	w20, #0x1
   49c54:	b.ne	49c74 <mpfr_digamma@@Base+0x2a8>  // b.any
   49c58:	cmp	w21, #0x0
   49c5c:	b.gt	49ba8 <mpfr_digamma@@Base+0x1dc>
   49c60:	mov	x0, x19
   49c64:	mov	w22, #0xffffffff            	// #-1
   49c68:	mov	w20, #0x3                   	// #3
   49c6c:	bl	be50 <mpfr_nextbelow@plt>
   49c70:	b	49bb0 <mpfr_digamma@@Base+0x1e4>
   49c74:	cmp	w20, #0x2
   49c78:	mov	w22, #0x1                   	// #1
   49c7c:	b.eq	49bb0 <mpfr_digamma@@Base+0x1e4>  // b.none
   49c80:	cmp	w20, #0x3
   49c84:	b.ne	49bb0 <mpfr_digamma@@Base+0x1e4>  // b.any
   49c88:	b	49c60 <mpfr_digamma@@Base+0x294>
   49c8c:	tbz	w21, #31, 49ca8 <mpfr_digamma@@Base+0x2dc>
   49c90:	mov	x1, x22
   49c94:	mov	w2, w20
   49c98:	mov	x0, x19
   49c9c:	bl	4a204 <mpfr_digamma@@Base+0x838>
   49ca0:	mov	w22, w0
   49ca4:	b	49bd0 <mpfr_digamma@@Base+0x204>
   49ca8:	tbnz	x0, #63, 49c90 <mpfr_digamma@@Base+0x2c4>
   49cac:	ldr	x1, [x22]
   49cb0:	add	x21, sp, #0xd0
   49cb4:	ldr	x23, [x19]
   49cb8:	cmp	x0, x1
   49cbc:	csinc	x1, x0, x1, gt
   49cc0:	str	x1, [sp, #136]
   49cc4:	add	x23, x23, #0xa
   49cc8:	cmp	x0, x23
   49ccc:	b.le	49d54 <mpfr_digamma@@Base+0x388>
   49cd0:	mov	x1, x23
   49cd4:	mov	x0, x21
   49cd8:	bl	cb10 <mpfr_init2@plt>
   49cdc:	mov	x1, x22
   49ce0:	mov	x0, x21
   49ce4:	mov	w2, #0x1                   	// #1
   49ce8:	bl	c110 <mpfr_log@plt>
   49cec:	ldr	x1, [sp, #224]
   49cf0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   49cf4:	cmp	x1, x0
   49cf8:	b.le	49d4c <mpfr_digamma@@Base+0x380>
   49cfc:	ldr	x1, [sp, #208]
   49d00:	cmp	w20, #0x0
   49d04:	ldr	x0, [sp, #232]
   49d08:	sub	x1, x1, #0x1
   49d0c:	ldr	x2, [x19]
   49d10:	asr	x1, x1, #6
   49d14:	add	x1, x1, #0x1
   49d18:	cinc	x3, x2, eq  // eq = none
   49d1c:	add	x2, x2, #0xa
   49d20:	bl	c400 <mpfr_round_p@plt>
   49d24:	cbz	w0, 49d4c <mpfr_digamma@@Base+0x380>
   49d28:	ldr	w3, [sp, #216]
   49d2c:	mov	w2, w20
   49d30:	mov	x1, x21
   49d34:	mov	x0, x19
   49d38:	bl	c730 <mpfr_set4@plt>
   49d3c:	mov	w22, w0
   49d40:	mov	x0, x21
   49d44:	bl	c0f0 <mpfr_clear@plt>
   49d48:	b	49bd0 <mpfr_digamma@@Base+0x204>
   49d4c:	mov	x0, x21
   49d50:	bl	c0f0 <mpfr_clear@plt>
   49d54:	ldr	x1, [sp, #136]
   49d58:	add	x25, sp, #0x110
   49d5c:	mov	x0, x25
   49d60:	add	x24, sp, #0x130
   49d64:	bl	cb10 <mpfr_init2@plt>
   49d68:	mov	x1, x23
   49d6c:	mov	x0, x21
   49d70:	bl	cb10 <mpfr_init2@plt>
   49d74:	add	x0, sp, #0xf0
   49d78:	mov	x1, x23
   49d7c:	str	x0, [sp, #112]
   49d80:	bl	cb10 <mpfr_init2@plt>
   49d84:	mov	x0, #0x40                  	// #64
   49d88:	str	x0, [sp, #152]
   49d8c:	add	x27, x23, #0x3
   49d90:	mov	x0, #0x4                   	// #4
   49d94:	ldr	w3, [x22, #8]
   49d98:	mov	x1, x22
   49d9c:	mov	w2, #0x0                   	// #0
   49da0:	mov	x28, #0x0                   	// #0
   49da4:	sdiv	x27, x27, x0
   49da8:	mov	x0, #0x2                   	// #2
   49dac:	cmp	x27, #0x2
   49db0:	csel	x27, x27, x0, cs  // cs = hs, nlast
   49db4:	mov	x0, x25
   49db8:	bl	c730 <mpfr_set4@plt>
   49dbc:	mov	w0, #0x1                   	// #1
   49dc0:	str	w0, [sp, #248]
   49dc4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   49dc8:	str	x0, [sp, #256]
   49dcc:	mov	x1, x27
   49dd0:	mov	x0, x25
   49dd4:	mov	x2, #0x0                   	// #0
   49dd8:	bl	bfd0 <mpfr_cmp_ui_2exp@plt>
   49ddc:	tbnz	w0, #31, 49fec <mpfr_digamma@@Base+0x620>
   49de0:	str	xzr, [sp, #104]
   49de4:	cmp	x28, #0x1
   49de8:	b.hi	4a058 <mpfr_digamma@@Base+0x68c>  // b.pmore
   49dec:	ldr	x0, [sp, #208]
   49df0:	str	x0, [sp, #144]
   49df4:	ldr	w0, [sp, #280]
   49df8:	cmp	w0, #0x0
   49dfc:	b.le	49e0c <mpfr_digamma@@Base+0x440>
   49e00:	ldr	x0, [sp, #288]
   49e04:	cmp	x0, #0x1
   49e08:	b.gt	49e24 <mpfr_digamma@@Base+0x458>
   49e0c:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   49e10:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   49e14:	add	x2, x2, #0xd9a
   49e18:	add	x0, x0, #0xdcd
   49e1c:	mov	w1, #0x27                  	// #39
   49e20:	bl	cbd0 <mpfr_assert_fail@plt>
   49e24:	ldr	x1, [sp, #144]
   49e28:	mov	x0, x24
   49e2c:	add	x28, sp, #0x150
   49e30:	add	x27, sp, #0x170
   49e34:	bl	cb10 <mpfr_init2@plt>
   49e38:	ldr	x1, [sp, #144]
   49e3c:	mov	x0, x28
   49e40:	bl	cb10 <mpfr_init2@plt>
   49e44:	ldr	x1, [sp, #144]
   49e48:	mov	x0, x27
   49e4c:	bl	cb10 <mpfr_init2@plt>
   49e50:	mov	x1, x25
   49e54:	mov	w2, #0x0                   	// #0
   49e58:	mov	x0, x21
   49e5c:	bl	c110 <mpfr_log@plt>
   49e60:	mov	x2, x25
   49e64:	mov	w3, #0x0                   	// #0
   49e68:	mov	x1, #0x1                   	// #1
   49e6c:	mov	x0, x24
   49e70:	bl	c380 <mpfr_ui_div@plt>
   49e74:	mov	x1, x24
   49e78:	mov	w3, #0x0                   	// #0
   49e7c:	mov	x2, #0x1                   	// #1
   49e80:	mov	x0, x24
   49e84:	bl	c980 <mpfr_div_2ui@plt>
   49e88:	mov	x2, x24
   49e8c:	mov	x1, x21
   49e90:	mov	w3, #0x0                   	// #0
   49e94:	mov	x0, x21
   49e98:	bl	bbf0 <mpfr_sub@plt>
   49e9c:	mov	x2, x25
   49ea0:	mov	x1, x25
   49ea4:	mov	w3, #0x1                   	// #1
   49ea8:	mov	x0, x27
   49eac:	bl	bdd0 <mpfr_mul@plt>
   49eb0:	mov	x2, x27
   49eb4:	mov	w3, #0x2                   	// #2
   49eb8:	mov	x1, #0x1                   	// #1
   49ebc:	mov	x0, x27
   49ec0:	bl	c380 <mpfr_ui_div@plt>
   49ec4:	mov	x0, x24
   49ec8:	mov	w3, #0x0                   	// #0
   49ecc:	mov	x2, #0x0                   	// #0
   49ed0:	mov	x1, #0x1                   	// #1
   49ed4:	bl	c680 <mpfr_set_ui_2exp@plt>
   49ed8:	mov	x0, #0x1                   	// #1
   49edc:	mov	x4, #0x2                   	// #2
   49ee0:	str	x0, [sp, #120]
   49ee4:	mov	x2, x27
   49ee8:	mov	x1, x24
   49eec:	mov	w3, #0x2                   	// #2
   49ef0:	mov	x0, x24
   49ef4:	str	x4, [sp, #200]
   49ef8:	bl	bdd0 <mpfr_mul@plt>
   49efc:	ldr	x0, [sp, #120]
   49f00:	mov	x1, x24
   49f04:	mov	w3, #0x2                   	// #2
   49f08:	lsl	x5, x0, #1
   49f0c:	mov	x0, x24
   49f10:	mov	x2, x5
   49f14:	str	x5, [sp, #176]
   49f18:	bl	cd00 <mpfr_div_ui@plt>
   49f1c:	ldr	x5, [sp, #176]
   49f20:	mov	x1, x24
   49f24:	mov	w3, #0x2                   	// #2
   49f28:	mov	x0, x24
   49f2c:	add	x2, x5, #0x1
   49f30:	bl	cd00 <mpfr_div_ui@plt>
   49f34:	ldr	x5, [sp, #176]
   49f38:	mov	x1, x24
   49f3c:	mov	w3, #0x2                   	// #2
   49f40:	mov	x0, x28
   49f44:	mov	x2, x5
   49f48:	bl	cd00 <mpfr_div_ui@plt>
   49f4c:	ldr	x0, [sp, #120]
   49f50:	bl	c8c0 <mpfr_bernoulli_cache@plt>
   49f54:	mov	x2, x0
   49f58:	mov	x1, x28
   49f5c:	mov	x0, x28
   49f60:	mov	w3, #0x2                   	// #2
   49f64:	bl	c560 <mpfr_mul_z@plt>
   49f68:	ldr	x0, [sp, #144]
   49f6c:	ldr	x6, [sp, #224]
   49f70:	ldr	x5, [sp, #352]
   49f74:	stp	x5, x6, [sp, #184]
   49f78:	sub	x0, x6, x0
   49f7c:	cmp	x5, x0
   49f80:	ldr	x4, [sp, #200]
   49f84:	b.lt	4a084 <mpfr_digamma@@Base+0x6b8>  // b.tstop
   49f88:	mov	x2, x28
   49f8c:	mov	x1, x21
   49f90:	mov	x0, x21
   49f94:	mov	w3, #0x0                   	// #0
   49f98:	str	x4, [sp, #176]
   49f9c:	bl	bbf0 <mpfr_sub@plt>
   49fa0:	ldr	x6, [sp, #192]
   49fa4:	ldr	x0, [sp, #224]
   49fa8:	ldp	x4, x5, [sp, #176]
   49fac:	cmp	x6, x0
   49fb0:	b.le	49fbc <mpfr_digamma@@Base+0x5f0>
   49fb4:	sub	w0, w6, w0
   49fb8:	lsl	x4, x4, x0
   49fbc:	ldr	x0, [sp, #120]
   49fc0:	mov	x1, #0xa                   	// #10
   49fc4:	add	x4, x4, #0x1
   49fc8:	mul	x0, x0, x1
   49fcc:	add	x0, x0, #0x4
   49fd0:	cmp	x6, x5
   49fd4:	b.gt	4a070 <mpfr_digamma@@Base+0x6a4>
   49fd8:	add	x4, x4, x0
   49fdc:	ldr	x0, [sp, #120]
   49fe0:	add	x0, x0, #0x1
   49fe4:	str	x0, [sp, #120]
   49fe8:	b	49ee4 <mpfr_digamma@@Base+0x518>
   49fec:	mov	x2, x25
   49ff0:	mov	w3, #0x0                   	// #0
   49ff4:	mov	x1, #0x1                   	// #1
   49ff8:	mov	x0, x21
   49ffc:	bl	c380 <mpfr_ui_div@plt>
   4a000:	add	x28, x28, #0x1
   4a004:	ldr	x1, [sp, #112]
   4a008:	mov	x2, x21
   4a00c:	mov	w3, #0x0                   	// #0
   4a010:	mov	x0, x1
   4a014:	bl	c230 <mpfr_add@plt>
   4a018:	mov	x1, x25
   4a01c:	mov	x0, x25
   4a020:	mov	w3, #0x1                   	// #1
   4a024:	mov	x2, #0x1                   	// #1
   4a028:	bl	c2f0 <mpfr_add_ui@plt>
   4a02c:	cbz	w0, 49dcc <mpfr_digamma@@Base+0x400>
   4a030:	ldr	x0, [sp, #136]
   4a034:	mov	w2, #0x1                   	// #1
   4a038:	add	x0, x0, #0x1
   4a03c:	str	x0, [sp, #136]
   4a040:	mov	x1, x0
   4a044:	mov	x0, x25
   4a048:	bl	ca00 <mpfr_prec_round@plt>
   4a04c:	mov	x0, x25
   4a050:	bl	c1b0 <mpfr_nextabove@plt>
   4a054:	b	49dcc <mpfr_digamma@@Base+0x400>
   4a058:	ldr	x0, [sp, #104]
   4a05c:	add	x28, x28, #0x1
   4a060:	add	x0, x0, #0x1
   4a064:	lsr	x28, x28, #1
   4a068:	str	x0, [sp, #104]
   4a06c:	b	49de4 <mpfr_digamma@@Base+0x418>
   4a070:	add	x0, x0, #0x1
   4a074:	mov	x1, #0x2                   	// #2
   4a078:	add	x5, x5, #0x1
   4a07c:	sdiv	x0, x0, x1
   4a080:	b	49fd0 <mpfr_digamma@@Base+0x604>
   4a084:	mov	x0, x24
   4a088:	str	x4, [sp, #120]
   4a08c:	bl	c0f0 <mpfr_clear@plt>
   4a090:	mov	x0, x28
   4a094:	bl	c0f0 <mpfr_clear@plt>
   4a098:	mov	x0, x27
   4a09c:	bl	c0f0 <mpfr_clear@plt>
   4a0a0:	ldr	x4, [sp, #120]
   4a0a4:	mov	x27, #0x0                   	// #0
   4a0a8:	cmp	x4, #0x1
   4a0ac:	b.gt	4a154 <mpfr_digamma@@Base+0x788>
   4a0b0:	ldr	x2, [sp, #112]
   4a0b4:	mov	x1, x21
   4a0b8:	mov	x0, x21
   4a0bc:	mov	w3, #0x0                   	// #0
   4a0c0:	ldr	x28, [sp, #224]
   4a0c4:	bl	bbf0 <mpfr_sub@plt>
   4a0c8:	ldr	x0, [sp, #224]
   4a0cc:	cmp	x28, x0
   4a0d0:	b.le	4a0dc <mpfr_digamma@@Base+0x710>
   4a0d4:	sub	x28, x28, x0
   4a0d8:	add	x27, x27, x28
   4a0dc:	ldr	x1, [sp, #256]
   4a0e0:	cmp	x0, x1
   4a0e4:	b.ge	4a0f8 <mpfr_digamma@@Base+0x72c>  // b.tcont
   4a0e8:	ldr	x2, [sp, #104]
   4a0ec:	sub	x1, x1, x0
   4a0f0:	add	x1, x2, x1
   4a0f4:	str	x1, [sp, #104]
   4a0f8:	ldr	x1, [sp, #104]
   4a0fc:	add	x2, x27, #0x2
   4a100:	ldr	x3, [sp, #104]
   4a104:	cmp	x27, x1
   4a108:	add	x1, x27, #0x1
   4a10c:	csinc	x2, x2, x3, eq  // eq = none
   4a110:	cmp	x27, x3
   4a114:	csel	x2, x2, x1, le
   4a118:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   4a11c:	cmp	x0, x1
   4a120:	b.gt	4a164 <mpfr_digamma@@Base+0x798>
   4a124:	ldr	x1, [sp, #152]
   4a128:	mov	x0, #0xfffffffffffffeff    	// #-257
   4a12c:	movk	x0, #0x7fff, lsl #48
   4a130:	sub	x0, x0, x23
   4a134:	cmp	x0, x1
   4a138:	b.ge	4a1c0 <mpfr_digamma@@Base+0x7f4>  // b.tcont
   4a13c:	adrp	x2, 53000 <mpfr_free_pool@@Base+0x1eec>
   4a140:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   4a144:	add	x2, x2, #0x952
   4a148:	add	x0, x0, #0xdcd
   4a14c:	mov	w1, #0x11a                 	// #282
   4a150:	bl	cbd0 <mpfr_assert_fail@plt>
   4a154:	add	x4, x4, #0x1
   4a158:	add	x27, x27, #0x1
   4a15c:	asr	x4, x4, #1
   4a160:	b	4a0a8 <mpfr_digamma@@Base+0x6dc>
   4a164:	ldr	x1, [sp, #208]
   4a168:	cmp	w20, #0x0
   4a16c:	ldr	x0, [sp, #232]
   4a170:	sub	x1, x1, #0x1
   4a174:	ldr	x3, [x19]
   4a178:	asr	x1, x1, #6
   4a17c:	sub	x2, x23, x2
   4a180:	add	x1, x1, #0x1
   4a184:	cinc	x3, x3, eq  // eq = none
   4a188:	bl	c400 <mpfr_round_p@plt>
   4a18c:	cbz	w0, 4a124 <mpfr_digamma@@Base+0x758>
   4a190:	ldr	w3, [sp, #216]
   4a194:	mov	w2, w20
   4a198:	mov	x1, x21
   4a19c:	mov	x0, x19
   4a1a0:	bl	c730 <mpfr_set4@plt>
   4a1a4:	mov	w22, w0
   4a1a8:	mov	x0, x21
   4a1ac:	bl	c0f0 <mpfr_clear@plt>
   4a1b0:	ldr	x0, [sp, #112]
   4a1b4:	bl	c0f0 <mpfr_clear@plt>
   4a1b8:	mov	x0, x25
   4a1bc:	b	49d44 <mpfr_digamma@@Base+0x378>
   4a1c0:	ldr	x0, [sp, #152]
   4a1c4:	add	x23, x23, x0
   4a1c8:	mov	x0, #0x2                   	// #2
   4a1cc:	mov	x1, x23
   4a1d0:	sdiv	x0, x23, x0
   4a1d4:	str	x0, [sp, #152]
   4a1d8:	mov	x0, x21
   4a1dc:	bl	bf50 <mpfr_set_prec@plt>
   4a1e0:	ldr	x0, [sp, #112]
   4a1e4:	mov	x1, x23
   4a1e8:	bl	bf50 <mpfr_set_prec@plt>
   4a1ec:	b	49d8c <mpfr_digamma@@Base+0x3c0>
   4a1f0:	cbz	w22, 49a5c <mpfr_digamma@@Base+0x90>
   4a1f4:	ldr	w0, [sp, #132]
   4a1f8:	orr	w0, w0, #0x8
   4a1fc:	str	w0, [x1]
   4a200:	b	49a5c <mpfr_digamma@@Base+0x90>
   4a204:	stp	x29, x30, [sp, #-224]!
   4a208:	mov	x29, sp
   4a20c:	stp	x23, x24, [sp, #48]
   4a210:	mov	x24, x1
   4a214:	mov	x23, x0
   4a218:	ldr	x1, [x1, #16]
   4a21c:	stp	x19, x20, [sp, #16]
   4a220:	stp	x21, x22, [sp, #32]
   4a224:	stp	x25, x26, [sp, #64]
   4a228:	mov	w25, w2
   4a22c:	stp	x27, x28, [sp, #80]
   4a230:	ldr	x19, [x0]
   4a234:	ldr	x0, [x24]
   4a238:	tbz	x1, #63, 4a280 <mpfr_digamma@@Base+0x8b4>
   4a23c:	add	x0, x0, #0x1
   4a240:	sub	x1, x0, x1
   4a244:	add	x20, sp, #0xa0
   4a248:	mov	x0, x20
   4a24c:	bl	cb10 <mpfr_init2@plt>
   4a250:	mov	x2, x24
   4a254:	mov	x0, x20
   4a258:	mov	w3, #0x0                   	// #0
   4a25c:	mov	x1, #0x1                   	// #1
   4a260:	bl	cae0 <mpfr_ui_sub@plt>
   4a264:	cbz	w0, 4a290 <mpfr_digamma@@Base+0x8c4>
   4a268:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   4a26c:	add	x2, x2, #0xdd7
   4a270:	mov	w1, #0x88                  	// #136
   4a274:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   4a278:	add	x0, x0, #0xdcd
   4a27c:	bl	cbd0 <mpfr_assert_fail@plt>
   4a280:	cmp	x1, x0
   4a284:	b.gt	4a244 <mpfr_digamma@@Base+0x878>
   4a288:	add	x1, x0, #0x1
   4a28c:	b	4a244 <mpfr_digamma@@Base+0x878>
   4a290:	mov	x1, x20
   4a294:	mov	w3, #0x0                   	// #0
   4a298:	mov	x2, #0x1                   	// #1
   4a29c:	mov	x0, x20
   4a2a0:	bl	c350 <mpfr_mul_2ui@plt>
   4a2a4:	mov	x0, x20
   4a2a8:	bl	c1f0 <mpfr_integer_p@plt>
   4a2ac:	mov	x1, x20
   4a2b0:	mov	w21, w0
   4a2b4:	mov	w3, #0x0                   	// #0
   4a2b8:	mov	x0, x20
   4a2bc:	mov	x2, #0x1                   	// #1
   4a2c0:	bl	c980 <mpfr_div_2ui@plt>
   4a2c4:	cbz	w21, 4a304 <mpfr_digamma@@Base+0x938>
   4a2c8:	mov	w2, w25
   4a2cc:	mov	x1, x20
   4a2d0:	mov	x0, x23
   4a2d4:	bl	ca80 <mpfr_digamma@plt>
   4a2d8:	mov	w19, w0
   4a2dc:	mov	x0, x20
   4a2e0:	bl	c0f0 <mpfr_clear@plt>
   4a2e4:	mov	w0, w19
   4a2e8:	ldp	x19, x20, [sp, #16]
   4a2ec:	ldp	x21, x22, [sp, #32]
   4a2f0:	ldp	x23, x24, [sp, #48]
   4a2f4:	ldp	x25, x26, [sp, #64]
   4a2f8:	ldp	x27, x28, [sp, #80]
   4a2fc:	ldp	x29, x30, [sp], #224
   4a300:	ret
   4a304:	add	x19, x19, #0xa
   4a308:	add	x22, sp, #0x80
   4a30c:	mov	x1, x19
   4a310:	mov	x0, x22
   4a314:	add	x21, sp, #0xc0
   4a318:	bl	cb10 <mpfr_init2@plt>
   4a31c:	mov	x0, x21
   4a320:	mov	x1, x19
   4a324:	mov	x28, #0xfffffffffffffeff    	// #-257
   4a328:	bl	cb10 <mpfr_init2@plt>
   4a32c:	mrs	x0, tpidr_el0
   4a330:	mov	x26, #0x40                  	// #64
   4a334:	mov	x27, #0x8000000000000003    	// #-9223372036854775805
   4a338:	movk	x28, #0x7fff, lsl #48
   4a33c:	str	x0, [sp, #104]
   4a340:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4a344:	ldr	x1, [x0, #2640]
   4a348:	add	x0, x0, #0xa50
   4a34c:	blr	x1
   4a350:	mov	w2, #0x0                   	// #0
   4a354:	ldr	x1, [sp, #104]
   4a358:	add	x1, x1, x0
   4a35c:	mov	x0, x21
   4a360:	bl	c410 <mpfr_cache@plt>
   4a364:	mov	x2, x24
   4a368:	mov	x1, x21
   4a36c:	mov	w3, #0x0                   	// #0
   4a370:	mov	x0, x22
   4a374:	bl	bdd0 <mpfr_mul@plt>
   4a378:	ldr	x3, [sp, #144]
   4a37c:	mov	x1, x22
   4a380:	mov	w2, #0x0                   	// #0
   4a384:	mov	x0, x22
   4a388:	sub	x3, x3, x19
   4a38c:	str	x3, [sp, #112]
   4a390:	bl	baf0 <mpfr_cot@plt>
   4a394:	ldr	x3, [sp, #112]
   4a398:	mov	x2, x21
   4a39c:	ldr	x0, [sp, #144]
   4a3a0:	mov	x1, x22
   4a3a4:	cmp	x0, #0x0
   4a3a8:	add	x4, x3, x0, lsl #1
   4a3ac:	add	x3, x3, #0x2
   4a3b0:	add	x4, x4, #0x2
   4a3b4:	csel	x3, x3, x4, le
   4a3b8:	sub	x4, x19, x0
   4a3bc:	add	x4, x4, x3
   4a3c0:	mov	x0, x22
   4a3c4:	mov	w3, #0x0                   	// #0
   4a3c8:	str	x4, [sp, #112]
   4a3cc:	bl	bdd0 <mpfr_mul@plt>
   4a3d0:	ldr	x4, [sp, #112]
   4a3d4:	mov	x1, x20
   4a3d8:	mov	w2, #0x0                   	// #0
   4a3dc:	mov	x0, x21
   4a3e0:	add	x4, x4, #0x1
   4a3e4:	str	x4, [sp, #120]
   4a3e8:	bl	ca80 <mpfr_digamma@plt>
   4a3ec:	ldr	x5, [sp, #208]
   4a3f0:	mov	x1, x21
   4a3f4:	mov	x2, x22
   4a3f8:	mov	x0, x21
   4a3fc:	mov	w3, #0x0                   	// #0
   4a400:	str	x5, [sp, #112]
   4a404:	bl	bbf0 <mpfr_sub@plt>
   4a408:	ldr	x1, [sp, #144]
   4a40c:	ldr	x0, [sp, #208]
   4a410:	ldp	x5, x4, [sp, #112]
   4a414:	cmp	x0, x1
   4a418:	b.ge	4a424 <mpfr_digamma@@Base+0xa58>  // b.tcont
   4a41c:	sub	x1, x1, x0
   4a420:	add	x4, x4, x1
   4a424:	sub	x2, x5, x0
   4a428:	sub	x2, x2, #0x1
   4a42c:	cmp	x2, x4
   4a430:	b.gt	4a438 <mpfr_digamma@@Base+0xa6c>
   4a434:	add	x2, x4, #0x1
   4a438:	cmp	x0, x27
   4a43c:	b.gt	4a45c <mpfr_digamma@@Base+0xa90>
   4a440:	sub	x0, x28, x19
   4a444:	cmp	x0, x26
   4a448:	b.ge	4a4b8 <mpfr_digamma@@Base+0xaec>  // b.tcont
   4a44c:	adrp	x2, 53000 <mpfr_free_pool@@Base+0x1eec>
   4a450:	mov	w1, #0xb4                  	// #180
   4a454:	add	x2, x2, #0x952
   4a458:	b	4a274 <mpfr_digamma@@Base+0x8a8>
   4a45c:	ldr	x1, [sp, #192]
   4a460:	cmp	w25, #0x0
   4a464:	ldr	x0, [sp, #216]
   4a468:	sub	x1, x1, #0x1
   4a46c:	ldr	x3, [x23]
   4a470:	add	x2, x2, #0x1
   4a474:	asr	x1, x1, #6
   4a478:	sub	x2, x19, x2
   4a47c:	cinc	x3, x3, eq  // eq = none
   4a480:	add	x1, x1, #0x1
   4a484:	bl	c400 <mpfr_round_p@plt>
   4a488:	cbz	w0, 4a440 <mpfr_digamma@@Base+0xa74>
   4a48c:	ldr	w3, [sp, #200]
   4a490:	mov	w2, w25
   4a494:	mov	x1, x21
   4a498:	mov	x0, x23
   4a49c:	bl	c730 <mpfr_set4@plt>
   4a4a0:	mov	w19, w0
   4a4a4:	mov	x0, x22
   4a4a8:	bl	c0f0 <mpfr_clear@plt>
   4a4ac:	mov	x0, x21
   4a4b0:	bl	c0f0 <mpfr_clear@plt>
   4a4b4:	b	4a2dc <mpfr_digamma@@Base+0x910>
   4a4b8:	add	x19, x19, x26
   4a4bc:	mov	x0, #0x2                   	// #2
   4a4c0:	mov	x1, x19
   4a4c4:	sdiv	x26, x19, x0
   4a4c8:	mov	x0, x22
   4a4cc:	bl	bf50 <mpfr_set_prec@plt>
   4a4d0:	mov	x1, x19
   4a4d4:	mov	x0, x21
   4a4d8:	bl	bf50 <mpfr_set_prec@plt>
   4a4dc:	b	4a340 <mpfr_digamma@@Base+0x974>
   4a4e0:	sub	sp, sp, #0x200
   4a4e4:	mov	x2, #0x108                 	// #264
   4a4e8:	stp	x29, x30, [sp]
   4a4ec:	mov	x29, sp
   4a4f0:	stp	x23, x24, [sp, #48]
   4a4f4:	mov	x23, x1
   4a4f8:	adrp	x1, 5b000 <mpfr_bases@@Base+0x12a8>
   4a4fc:	add	x1, x1, #0xde8
   4a500:	stp	x19, x20, [sp, #16]
   4a504:	mov	x19, x0
   4a508:	add	x20, sp, #0xf8
   4a50c:	stp	x21, x22, [sp, #32]
   4a510:	mov	x0, x20
   4a514:	stp	x25, x26, [sp, #64]
   4a518:	add	x26, x19, x23, lsl #4
   4a51c:	stp	x27, x28, [sp, #80]
   4a520:	bl	ba90 <memcpy@plt>
   4a524:	mov	x0, x26
   4a528:	bl	c010 <mpfr_mpz_init@plt>
   4a52c:	cbnz	x23, 4a55c <mpfr_digamma@@Base+0xb90>
   4a530:	mov	x0, x19
   4a534:	mov	x1, #0x1                   	// #1
   4a538:	bl	bd30 <__gmpz_set_ui@plt>
   4a53c:	ldp	x29, x30, [sp]
   4a540:	ldp	x19, x20, [sp, #16]
   4a544:	ldp	x21, x22, [sp, #32]
   4a548:	ldp	x23, x24, [sp, #48]
   4a54c:	ldp	x25, x26, [sp, #64]
   4a550:	ldp	x27, x28, [sp, #80]
   4a554:	add	sp, sp, #0x200
   4a558:	ret
   4a55c:	add	x24, sp, #0xa8
   4a560:	lsl	x21, x23, #1
   4a564:	mov	x0, x24
   4a568:	bl	c010 <mpfr_mpz_init@plt>
   4a56c:	mov	x0, x24
   4a570:	mov	x1, #0x6                   	// #6
   4a574:	bl	bd30 <__gmpz_set_ui@plt>
   4a578:	mov	x19, #0x5                   	// #5
   4a57c:	add	x0, x21, #0x1
   4a580:	str	x0, [sp, #96]
   4a584:	ldr	x0, [sp, #96]
   4a588:	cmp	x0, x19
   4a58c:	b.cs	4a854 <mpfr_digamma@@Base+0xe88>  // b.hs, b.nlast
   4a590:	cmp	x21, #0x40
   4a594:	b.hi	4a8a0 <mpfr_digamma@@Base+0xed4>  // b.pmore
   4a598:	lsl	x0, x21, #2
   4a59c:	ldr	x20, [x20, x0]
   4a5a0:	lsl	x23, x23, #2
   4a5a4:	add	x0, x23, #0x3
   4a5a8:	add	x19, sp, #0x88
   4a5ac:	add	x23, sp, #0x78
   4a5b0:	str	x0, [sp, #104]
   4a5b4:	mov	x0, x23
   4a5b8:	bl	c010 <mpfr_mpz_init@plt>
   4a5bc:	add	x22, sp, #0x98
   4a5c0:	mov	x0, x19
   4a5c4:	bl	c010 <mpfr_mpz_init@plt>
   4a5c8:	mov	x28, #0x4                   	// #4
   4a5cc:	mov	x0, x22
   4a5d0:	bl	c010 <mpfr_mpz_init@plt>
   4a5d4:	mov	x0, x22
   4a5d8:	mov	x1, #0x1                   	// #1
   4a5dc:	bl	bd30 <__gmpz_set_ui@plt>
   4a5e0:	mov	x2, x20
   4a5e4:	mov	x1, x22
   4a5e8:	mov	x0, x22
   4a5ec:	bl	c290 <__gmpz_mul_2exp@plt>
   4a5f0:	mov	x2, x21
   4a5f4:	mov	x0, x19
   4a5f8:	mov	x1, #0x3                   	// #3
   4a5fc:	bl	c570 <__gmpz_ui_pow_ui@plt>
   4a600:	mov	x2, x19
   4a604:	mov	x1, x22
   4a608:	mov	x0, x23
   4a60c:	bl	beb0 <__gmpz_fdiv_q@plt>
   4a610:	ldr	w0, [sp, #140]
   4a614:	cmp	w0, #0x0
   4a618:	b.gt	4a94c <mpfr_digamma@@Base+0xf80>
   4a61c:	sub	x25, x21, #0x1
   4a620:	mov	x1, x28
   4a624:	mov	x2, x25
   4a628:	mov	x0, x19
   4a62c:	bl	c570 <__gmpz_ui_pow_ui@plt>
   4a630:	add	x27, sp, #0xd8
   4a634:	mov	x2, x25
   4a638:	mov	x1, x19
   4a63c:	mov	x0, x19
   4a640:	bl	c190 <__gmpz_mul_ui@plt>
   4a644:	mov	x2, x19
   4a648:	mov	x1, x22
   4a64c:	mov	x0, x19
   4a650:	bl	c800 <__gmpz_cdiv_q@plt>
   4a654:	mov	x2, x19
   4a658:	mov	x1, x23
   4a65c:	mov	x0, x23
   4a660:	bl	ca50 <__gmpz_add@plt>
   4a664:	mov	x2, x22
   4a668:	mov	x1, x23
   4a66c:	mov	x0, x23
   4a670:	bl	ca50 <__gmpz_add@plt>
   4a674:	mov	x2, x21
   4a678:	mov	x1, x22
   4a67c:	mov	x0, x22
   4a680:	bl	bbe0 <__gmpz_cdiv_q_2exp@plt>
   4a684:	mov	x2, x22
   4a688:	mov	x1, x23
   4a68c:	mov	x0, x23
   4a690:	bl	ca50 <__gmpz_add@plt>
   4a694:	mov	x1, x21
   4a698:	mov	x0, x19
   4a69c:	bl	c040 <__gmpz_fac_ui@plt>
   4a6a0:	add	x25, sp, #0xb8
   4a6a4:	mov	x2, x19
   4a6a8:	mov	x1, x23
   4a6ac:	mov	x0, x23
   4a6b0:	bl	c070 <__gmpz_mul@plt>
   4a6b4:	mov	x2, x24
   4a6b8:	mov	x1, x23
   4a6bc:	mov	x0, x23
   4a6c0:	bl	c070 <__gmpz_mul@plt>
   4a6c4:	mov	x2, #0x1                   	// #1
   4a6c8:	mov	x1, x23
   4a6cc:	mov	x0, x23
   4a6d0:	bl	c290 <__gmpz_mul_2exp@plt>
   4a6d4:	mov	x1, x20
   4a6d8:	mov	x0, x27
   4a6dc:	bl	cb10 <mpfr_init2@plt>
   4a6e0:	mov	x1, x23
   4a6e4:	mov	w2, #0x1                   	// #1
   4a6e8:	mov	x0, x27
   4a6ec:	bl	c2d0 <mpfr_set_z@plt>
   4a6f0:	mov	w3, #0x1                   	// #1
   4a6f4:	mov	x2, x20
   4a6f8:	mov	x1, x27
   4a6fc:	mov	x0, x27
   4a700:	bl	c980 <mpfr_div_2ui@plt>
   4a704:	mov	x1, x20
   4a708:	mov	x0, x25
   4a70c:	bl	cb10 <mpfr_init2@plt>
   4a710:	mov	w2, #0x2                   	// #2
   4a714:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4a718:	ldr	x1, [x0, #2640]
   4a71c:	add	x0, x0, #0xa50
   4a720:	blr	x1
   4a724:	mrs	x1, tpidr_el0
   4a728:	add	x1, x1, x0
   4a72c:	mov	x0, x25
   4a730:	bl	c410 <mpfr_cache@plt>
   4a734:	mov	x1, x25
   4a738:	mov	w3, #0x2                   	// #2
   4a73c:	mov	x2, #0x1                   	// #1
   4a740:	mov	x0, x25
   4a744:	bl	c350 <mpfr_mul_2ui@plt>
   4a748:	mov	x2, x21
   4a74c:	mov	x1, x25
   4a750:	mov	w3, #0x2                   	// #2
   4a754:	mov	x0, x25
   4a758:	bl	bff0 <mpfr_pow_ui@plt>
   4a75c:	mov	x2, x25
   4a760:	mov	x1, x27
   4a764:	mov	x0, x27
   4a768:	mov	w3, #0x1                   	// #1
   4a76c:	bl	c6b0 <mpfr_div@plt>
   4a770:	ldr	x0, [sp, #104]
   4a774:	add	x28, x0, x28
   4a778:	mov	x0, #0x0                   	// #0
   4a77c:	cmp	x28, #0x1
   4a780:	b.hi	4a984 <mpfr_digamma@@Base+0xfb8>  // b.pmore
   4a784:	cmp	x20, x0
   4a788:	b.ls	4a994 <mpfr_digamma@@Base+0xfc8>  // b.plast
   4a78c:	ldr	x28, [sp, #216]
   4a790:	sub	x28, x28, #0x1
   4a794:	and	x28, x28, #0xffffffffffffffc0
   4a798:	add	x28, x28, #0x40
   4a79c:	sub	x1, x28, x20
   4a7a0:	add	x1, x1, x0
   4a7a4:	ldr	x0, [sp, #240]
   4a7a8:	bl	cb30 <__gmpn_scan1@plt>
   4a7ac:	sub	x28, x28, x0
   4a7b0:	ldr	x0, [sp, #232]
   4a7b4:	cmp	x0, x28
   4a7b8:	cset	w28, cc  // cc = lo, ul, last
   4a7bc:	mov	x1, x27
   4a7c0:	mov	x0, x26
   4a7c4:	mov	w2, #0x2                   	// #2
   4a7c8:	bl	be80 <mpfr_get_z@plt>
   4a7cc:	tbnz	w21, #1, 4a7dc <mpfr_digamma@@Base+0xe10>
   4a7d0:	ldr	w0, [x26, #4]
   4a7d4:	neg	w0, w0
   4a7d8:	str	w0, [x26, #4]
   4a7dc:	ldr	x2, [sp, #96]
   4a7e0:	mov	x1, x19
   4a7e4:	mov	x0, x19
   4a7e8:	bl	c190 <__gmpz_mul_ui@plt>
   4a7ec:	mov	x2, x24
   4a7f0:	mov	x1, x19
   4a7f4:	mov	x0, x19
   4a7f8:	bl	bfe0 <__gmpz_divexact@plt>
   4a7fc:	mov	x2, x19
   4a800:	mov	x1, x26
   4a804:	mov	x0, x26
   4a808:	bl	c070 <__gmpz_mul@plt>
   4a80c:	mov	x1, #0x1                   	// #1
   4a810:	mov	x0, x24
   4a814:	bl	bd30 <__gmpz_set_ui@plt>
   4a818:	mov	x0, x25
   4a81c:	bl	c0f0 <mpfr_clear@plt>
   4a820:	mov	x0, x27
   4a824:	bl	c0f0 <mpfr_clear@plt>
   4a828:	mov	x0, x23
   4a82c:	bl	c200 <mpfr_mpz_clear@plt>
   4a830:	mov	x0, x19
   4a834:	bl	c200 <mpfr_mpz_clear@plt>
   4a838:	mov	x0, x22
   4a83c:	bl	c200 <mpfr_mpz_clear@plt>
   4a840:	cbnz	w28, 4a99c <mpfr_digamma@@Base+0xfd0>
   4a844:	mov	x0, #0xa                   	// #10
   4a848:	sdiv	x0, x20, x0
   4a84c:	add	x20, x20, x0
   4a850:	b	4a5b4 <mpfr_digamma@@Base+0xbe8>
   4a854:	sub	x1, x19, #0x1
   4a858:	udiv	x0, x21, x1
   4a85c:	msub	x0, x0, x1, x21
   4a860:	cbnz	x0, 4a898 <mpfr_digamma@@Base+0xecc>
   4a864:	mov	x0, #0x3                   	// #3
   4a868:	b	4a87c <mpfr_digamma@@Base+0xeb0>
   4a86c:	udiv	x1, x19, x0
   4a870:	msub	x1, x1, x0, x19
   4a874:	cbz	x1, 4a898 <mpfr_digamma@@Base+0xecc>
   4a878:	add	x0, x0, #0x2
   4a87c:	mul	x1, x0, x0
   4a880:	cmp	x19, x1
   4a884:	b.cs	4a86c <mpfr_digamma@@Base+0xea0>  // b.hs, b.nlast
   4a888:	mov	x2, x19
   4a88c:	mov	x1, x24
   4a890:	mov	x0, x24
   4a894:	bl	c190 <__gmpz_mul_ui@plt>
   4a898:	add	x19, x19, #0x2
   4a89c:	b	4a584 <mpfr_digamma@@Base+0xbb8>
   4a8a0:	ucvtf	d0, x21
   4a8a4:	fmov	d1, #7.000000000000000000e+00
   4a8a8:	add	x19, sp, #0xd8
   4a8ac:	fmul	d0, d0, d1
   4a8b0:	bl	c9e0 <__gmpfr_ceil_log2@plt>
   4a8b4:	add	x20, x0, #0x1
   4a8b8:	mov	x1, #0x35                  	// #53
   4a8bc:	mov	x0, x19
   4a8c0:	bl	cb10 <mpfr_init2@plt>
   4a8c4:	asr	x20, x20, #1
   4a8c8:	mov	x1, #0x1f2c                	// #7980
   4a8cc:	mov	w3, #0x2                   	// #2
   4a8d0:	mov	x2, #0xffffffffffffffe0    	// #-32
   4a8d4:	movk	x1, #0xefd, lsl #16
   4a8d8:	mov	x0, x19
   4a8dc:	bl	c680 <mpfr_set_ui_2exp@plt>
   4a8e0:	mov	w3, #0x2                   	// #2
   4a8e4:	mov	x2, x21
   4a8e8:	mov	x1, x19
   4a8ec:	mov	x0, x19
   4a8f0:	bl	bad0 <mpfr_mul_ui@plt>
   4a8f4:	add	x20, x20, #0xe
   4a8f8:	mov	x1, x19
   4a8fc:	mov	w2, #0x2                   	// #2
   4a900:	mov	x0, x19
   4a904:	bl	c260 <mpfr_log2@plt>
   4a908:	mov	x2, x21
   4a90c:	mov	w3, #0x2                   	// #2
   4a910:	mov	x1, x19
   4a914:	mov	x0, x19
   4a918:	bl	bad0 <mpfr_mul_ui@plt>
   4a91c:	mov	w1, #0x2                   	// #2
   4a920:	mov	x0, x19
   4a924:	bl	bd20 <mpfr_get_ui@plt>
   4a928:	mov	x25, x0
   4a92c:	mov	x0, x19
   4a930:	bl	c0f0 <mpfr_clear@plt>
   4a934:	mov	x0, x24
   4a938:	mov	w1, #0x2                   	// #2
   4a93c:	bl	cbf0 <__gmpz_sizeinbase@plt>
   4a940:	add	x0, x0, x25
   4a944:	add	x20, x20, x0
   4a948:	b	4a5a0 <mpfr_digamma@@Base+0xbd4>
   4a94c:	mov	x1, x28
   4a950:	mov	x2, x21
   4a954:	mov	x0, x19
   4a958:	bl	c570 <__gmpz_ui_pow_ui@plt>
   4a95c:	mov	x2, x19
   4a960:	mov	x1, x22
   4a964:	mov	x0, x19
   4a968:	bl	beb0 <__gmpz_fdiv_q@plt>
   4a96c:	mov	x2, x19
   4a970:	mov	x1, x23
   4a974:	mov	x0, x23
   4a978:	add	x28, x28, #0x1
   4a97c:	bl	ca50 <__gmpz_add@plt>
   4a980:	b	4a610 <mpfr_digamma@@Base+0xc44>
   4a984:	add	x28, x28, #0x1
   4a988:	add	x0, x0, #0x1
   4a98c:	lsr	x28, x28, #1
   4a990:	b	4a77c <mpfr_digamma@@Base+0xdb0>
   4a994:	mov	w28, #0x0                   	// #0
   4a998:	b	4a7bc <mpfr_digamma@@Base+0xdf0>
   4a99c:	mov	x0, x24
   4a9a0:	bl	c200 <mpfr_mpz_clear@plt>
   4a9a4:	b	4a53c <mpfr_digamma@@Base+0xb70>

000000000004a9a8 <mpfr_bernoulli_cache@@Base>:
   4a9a8:	stp	x29, x30, [sp, #-48]!
   4a9ac:	mov	x29, sp
   4a9b0:	stp	x19, x20, [sp, #16]
   4a9b4:	mrs	x20, tpidr_el0
   4a9b8:	mov	x19, x0
   4a9bc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4a9c0:	ldr	x1, [x0, #2496]
   4a9c4:	add	x0, x0, #0x9c0
   4a9c8:	blr	x1
   4a9cc:	stp	x21, x22, [sp, #32]
   4a9d0:	add	x21, x20, x0
   4a9d4:	ldr	x0, [x20, x0]
   4a9d8:	cmp	x0, x19
   4a9dc:	b.hi	4aa40 <mpfr_bernoulli_cache@@Base+0x98>  // b.pmore
   4a9e0:	ldr	x1, [x21, #8]
   4a9e4:	cbnz	x1, 4aa6c <mpfr_bernoulli_cache@@Base+0xc4>
   4a9e8:	add	x0, x19, x19, lsr #2
   4a9ec:	mov	x1, #0x10                  	// #16
   4a9f0:	cmp	x0, #0x10
   4a9f4:	csel	x0, x0, x1, cs  // cs = hs, nlast
   4a9f8:	str	x0, [x21, #8]
   4a9fc:	lsl	x0, x0, #4
   4aa00:	bl	cd90 <mpfr_allocate_func@plt>
   4aa04:	str	xzr, [x21]
   4aa08:	str	x0, [x21, #16]
   4aa0c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4aa10:	ldr	x1, [x0, #2496]
   4aa14:	add	x0, x0, #0x9c0
   4aa18:	blr	x1
   4aa1c:	ldr	x21, [x20, x0]
   4aa20:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4aa24:	ldr	x1, [x0, #2496]
   4aa28:	add	x0, x0, #0x9c0
   4aa2c:	blr	x1
   4aa30:	cmp	x21, x19
   4aa34:	b.ls	4aa90 <mpfr_bernoulli_cache@@Base+0xe8>  // b.plast
   4aa38:	add	x1, x19, #0x1
   4aa3c:	str	x1, [x20, x0]
   4aa40:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4aa44:	ldr	x1, [x0, #2496]
   4aa48:	add	x0, x0, #0x9c0
   4aa4c:	blr	x1
   4aa50:	add	x0, x20, x0
   4aa54:	ldp	x21, x22, [sp, #32]
   4aa58:	ldr	x0, [x0, #16]
   4aa5c:	add	x0, x0, x19, lsl #4
   4aa60:	ldp	x19, x20, [sp, #16]
   4aa64:	ldp	x29, x30, [sp], #48
   4aa68:	ret
   4aa6c:	cmp	x1, x19
   4aa70:	b.hi	4aa0c <mpfr_bernoulli_cache@@Base+0x64>  // b.pmore
   4aa74:	ldr	x0, [x21, #16]
   4aa78:	add	x22, x19, x19, lsr #2
   4aa7c:	lsl	x1, x1, #4
   4aa80:	lsl	x2, x22, #4
   4aa84:	bl	c250 <mpfr_reallocate_func@plt>
   4aa88:	stp	x22, x0, [x21, #8]
   4aa8c:	b	4aa0c <mpfr_bernoulli_cache@@Base+0x64>
   4aa90:	add	x0, x20, x0
   4aa94:	mov	x1, x21
   4aa98:	add	x21, x21, #0x1
   4aa9c:	ldr	x0, [x0, #16]
   4aaa0:	bl	4a4e0 <mpfr_digamma@@Base+0xb14>
   4aaa4:	b	4aa20 <mpfr_bernoulli_cache@@Base+0x78>

000000000004aaa8 <mpfr_bernoulli_freecache@@Base>:
   4aaa8:	stp	x29, x30, [sp, #-48]!
   4aaac:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4aab0:	ldr	x1, [x0, #2496]
   4aab4:	add	x0, x0, #0x9c0
   4aab8:	blr	x1
   4aabc:	mov	x29, sp
   4aac0:	str	x21, [sp, #32]
   4aac4:	mrs	x21, tpidr_el0
   4aac8:	add	x0, x21, x0
   4aacc:	stp	x19, x20, [sp, #16]
   4aad0:	ldr	x0, [x0, #16]
   4aad4:	cbnz	x0, 4ab34 <mpfr_bernoulli_freecache@@Base+0x8c>
   4aad8:	ldp	x19, x20, [sp, #16]
   4aadc:	ldr	x21, [sp, #32]
   4aae0:	ldp	x29, x30, [sp], #48
   4aae4:	ret
   4aae8:	add	x0, x2, x20, lsl #4
   4aaec:	add	x20, x20, #0x1
   4aaf0:	bl	c200 <mpfr_mpz_clear@plt>
   4aaf4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4aaf8:	ldr	x1, [x0, #2496]
   4aafc:	add	x0, x0, #0x9c0
   4ab00:	blr	x1
   4ab04:	add	x19, x21, x0
   4ab08:	ldr	x0, [x21, x0]
   4ab0c:	ldr	x2, [x19, #16]
   4ab10:	cmp	x0, x20
   4ab14:	b.hi	4aae8 <mpfr_bernoulli_freecache@@Base+0x40>  // b.pmore
   4ab18:	ldr	x1, [x19, #8]
   4ab1c:	mov	x0, x2
   4ab20:	lsl	x1, x1, #4
   4ab24:	bl	ccc0 <mpfr_free_func@plt>
   4ab28:	stp	xzr, xzr, [x19]
   4ab2c:	str	xzr, [x19, #16]
   4ab30:	b	4aad8 <mpfr_bernoulli_freecache@@Base+0x30>
   4ab34:	mov	x20, #0x0                   	// #0
   4ab38:	b	4aaf4 <mpfr_bernoulli_freecache@@Base+0x4c>

000000000004ab3c <mpfr_regular_p@@Base>:
   4ab3c:	ldr	x1, [x0, #16]
   4ab40:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4ab44:	cmp	x1, x0
   4ab48:	cset	w0, gt
   4ab4c:	ret

000000000004ab50 <mpfr_set_flt@@Base>:
   4ab50:	fcvt	d0, s0
   4ab54:	b	bec0 <mpfr_set_d@plt>

000000000004ab58 <mpfr_get_flt@@Base>:
   4ab58:	stp	x29, x30, [sp, #-48]!
   4ab5c:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   4ab60:	mov	x29, sp
   4ab64:	stp	x19, x20, [sp, #16]
   4ab68:	ldr	x19, [x0, #16]
   4ab6c:	cmp	x19, x2
   4ab70:	b.gt	4ab80 <mpfr_get_flt@@Base+0x28>
   4ab74:	bl	bdb0 <mpfr_get_d@plt>
   4ab78:	fcvt	s0, d0
   4ab7c:	b	4abd0 <mpfr_get_flt@@Base+0x78>
   4ab80:	ldr	w20, [x0, #8]
   4ab84:	mov	x6, x0
   4ab88:	mov	w5, w1
   4ab8c:	cmp	w1, #0x4
   4ab90:	lsr	w3, w20, #31
   4ab94:	b.ne	4abb4 <mpfr_get_flt@@Base+0x5c>  // b.any
   4ab98:	tbz	w20, #31, 4ac8c <mpfr_get_flt@@Base+0x134>
   4ab9c:	cmn	x19, #0x94
   4aba0:	b.lt	4abec <mpfr_get_flt@@Base+0x94>  // b.tstop
   4aba4:	cmp	x19, #0x80
   4aba8:	b.gt	4ac4c <mpfr_get_flt@@Base+0xf4>
   4abac:	mov	w5, #0x3                   	// #3
   4abb0:	b	4aca0 <mpfr_get_flt@@Base+0x148>
   4abb4:	cmn	x19, #0x94
   4abb8:	b.ge	4ac34 <mpfr_get_flt@@Base+0xdc>  // b.tcont
   4abbc:	tbz	w20, #31, 4abf8 <mpfr_get_flt@@Base+0xa0>
   4abc0:	cmp	w1, #0x3
   4abc4:	b.eq	4abec <mpfr_get_flt@@Base+0x94>  // b.none
   4abc8:	cbz	w1, 4abdc <mpfr_get_flt@@Base+0x84>
   4abcc:	movi	v0.2s, #0x80, lsl #24
   4abd0:	ldp	x19, x20, [sp, #16]
   4abd4:	ldp	x29, x30, [sp], #48
   4abd8:	ret
   4abdc:	mov	x2, #0xffffffffffffff6a    	// #-150
   4abe0:	mov	x1, #0xffffffffffffffff    	// #-1
   4abe4:	bl	c460 <mpfr_cmp_si_2exp@plt>
   4abe8:	tbz	w0, #31, 4abcc <mpfr_get_flt@@Base+0x74>
   4abec:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   4abf0:	ldr	s0, [x0, #3828]
   4abf4:	b	4ac04 <mpfr_get_flt@@Base+0xac>
   4abf8:	cmp	w1, #0x2
   4abfc:	b.ne	4ac10 <mpfr_get_flt@@Base+0xb8>  // b.any
   4ac00:	movi	v0.2s, #0x80, lsl #16
   4ac04:	movi	v1.2s, #0x34, lsl #24
   4ac08:	fmul	s0, s0, s1
   4ac0c:	b	4abd0 <mpfr_get_flt@@Base+0x78>
   4ac10:	cbz	w1, 4ac1c <mpfr_get_flt@@Base+0xc4>
   4ac14:	movi	v0.2s, #0x0
   4ac18:	b	4abd0 <mpfr_get_flt@@Base+0x78>
   4ac1c:	mov	x2, #0xffffffffffffff6a    	// #-150
   4ac20:	mov	x1, #0x1                   	// #1
   4ac24:	bl	c460 <mpfr_cmp_si_2exp@plt>
   4ac28:	cmp	w0, #0x0
   4ac2c:	b.gt	4ac00 <mpfr_get_flt@@Base+0xa8>
   4ac30:	b	4ac14 <mpfr_get_flt@@Base+0xbc>
   4ac34:	cmp	x19, #0x80
   4ac38:	b.le	4aca0 <mpfr_get_flt@@Base+0x148>
   4ac3c:	tbz	w20, #31, 4ac58 <mpfr_get_flt@@Base+0x100>
   4ac40:	sub	w5, w1, #0x1
   4ac44:	cmp	w5, #0x1
   4ac48:	b.ls	4ac78 <mpfr_get_flt@@Base+0x120>  // b.plast
   4ac4c:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   4ac50:	ldr	d0, [x0, #3832]
   4ac54:	b	4ab78 <mpfr_get_flt@@Base+0x20>
   4ac58:	and	w5, w1, #0xfffffffd
   4ac5c:	cmp	w5, #0x1
   4ac60:	b.eq	4ac80 <mpfr_get_flt@@Base+0x128>  // b.none
   4ac64:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   4ac68:	ldr	d0, [x0, #3840]
   4ac6c:	b	4ab78 <mpfr_get_flt@@Base+0x20>
   4ac70:	fmov	d0, #1.000000000000000000e+00
   4ac74:	b	4acdc <mpfr_get_flt@@Base+0x184>
   4ac78:	mvni	v0.2s, #0x80, lsl #16
   4ac7c:	b	4abd0 <mpfr_get_flt@@Base+0x78>
   4ac80:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   4ac84:	ldr	s0, [x0, #3824]
   4ac88:	b	4abd0 <mpfr_get_flt@@Base+0x78>
   4ac8c:	cmn	x19, #0x94
   4ac90:	b.lt	4ac00 <mpfr_get_flt@@Base+0xa8>  // b.tstop
   4ac94:	cmp	x19, #0x80
   4ac98:	b.gt	4ac64 <mpfr_get_flt@@Base+0x10c>
   4ac9c:	mov	w5, #0x2                   	// #2
   4aca0:	cmn	x19, #0x7d
   4aca4:	mov	w4, #0x18                  	// #24
   4aca8:	b.ge	4acb0 <mpfr_get_flt@@Base+0x158>  // b.tcont
   4acac:	add	w4, w19, #0x95
   4acb0:	ldr	x2, [x6]
   4acb4:	sxtw	x4, w4
   4acb8:	ldr	x1, [x6, #24]
   4acbc:	add	x0, sp, #0x28
   4acc0:	bl	c7b0 <mpfr_round_raw_4@plt>
   4acc4:	cbnz	w0, 4ac70 <mpfr_get_flt@@Base+0x118>
   4acc8:	ldr	d0, [sp, #40]
   4accc:	mov	x0, #0x3bf0000000000000    	// #4318952042648305664
   4acd0:	fmov	d1, x0
   4acd4:	ucvtf	d0, d0
   4acd8:	fmul	d0, d0, d1
   4acdc:	mov	w0, w19
   4ace0:	bl	cc30 <mpfr_scale2@plt>
   4ace4:	tbz	w20, #31, 4ab78 <mpfr_get_flt@@Base+0x20>
   4ace8:	fneg	d0, d0
   4acec:	b	4ab78 <mpfr_get_flt@@Base+0x20>

000000000004acf0 <mpfr_scale2@@Base>:
   4acf0:	fmov	d1, #1.000000000000000000e+00
   4acf4:	fcmp	d0, d1
   4acf8:	b.ne	4ad04 <mpfr_scale2@@Base+0x14>  // b.any
   4acfc:	add	w0, w0, #0x1
   4ad00:	fmov	d0, #5.000000000000000000e-01
   4ad04:	fmov	x1, d0
   4ad08:	and	w2, w0, #0xffff
   4ad0c:	cmn	w0, #0x3fd
   4ad10:	ubfx	x0, x1, #52, #11
   4ad14:	b.ge	4ad40 <mpfr_scale2@@Base+0x50>  // b.tcont
   4ad18:	add	w0, w0, #0x34
   4ad1c:	add	w2, w2, w0
   4ad20:	mov	x0, #0x3cb0000000000000    	// #4372995238176751616
   4ad24:	fmov	d0, x0
   4ad28:	bfi	x1, x2, #52, #11
   4ad2c:	fmov	d1, x1
   4ad30:	fmul	d0, d0, d1
   4ad34:	fmov	x1, d0
   4ad38:	fmov	d0, x1
   4ad3c:	ret
   4ad40:	add	w2, w2, w0
   4ad44:	bfi	x1, x2, #52, #11
   4ad48:	b	4ad38 <mpfr_scale2@@Base+0x48>

000000000004ad4c <mpfr_set_z_2exp@@Base>:
   4ad4c:	stp	x29, x30, [sp, #-112]!
   4ad50:	mov	x29, sp
   4ad54:	ldr	w4, [x1, #4]
   4ad58:	stp	x19, x20, [sp, #16]
   4ad5c:	cmp	w4, #0x0
   4ad60:	stp	x21, x22, [sp, #32]
   4ad64:	stp	x23, x24, [sp, #48]
   4ad68:	mov	x24, x0
   4ad6c:	mov	x0, x2
   4ad70:	stp	x25, x26, [sp, #64]
   4ad74:	mov	w25, w3
   4ad78:	stp	x27, x28, [sp, #80]
   4ad7c:	b.lt	4adb4 <mpfr_set_z_2exp@@Base+0x68>  // b.tstop
   4ad80:	mov	w26, #0x1                   	// #1
   4ad84:	b.ne	4adb8 <mpfr_set_z_2exp@@Base+0x6c>  // b.any
   4ad88:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4ad8c:	str	w26, [x24, #8]
   4ad90:	str	x0, [x24, #16]
   4ad94:	mov	w0, w4
   4ad98:	ldp	x19, x20, [sp, #16]
   4ad9c:	ldp	x21, x22, [sp, #32]
   4ada0:	ldp	x23, x24, [sp, #48]
   4ada4:	ldp	x25, x26, [sp, #64]
   4ada8:	ldp	x27, x28, [sp, #80]
   4adac:	ldp	x29, x30, [sp], #112
   4adb0:	ret
   4adb4:	mov	w26, #0xffffffff            	// #-1
   4adb8:	cmp	w4, #0x0
   4adbc:	cneg	w4, w4, lt  // lt = tstop
   4adc0:	sxtw	x2, w4
   4adc4:	tbnz	x0, #63, 4ae00 <mpfr_set_z_2exp@@Base+0xb4>
   4adc8:	add	x5, x2, x0, asr #6
   4adcc:	mov	x3, #0x100000000000000     	// #72057594037927936
   4add0:	cmp	x5, x3
   4add4:	b.le	4ae00 <mpfr_set_z_2exp@@Base+0xb4>
   4add8:	mov	w2, w26
   4addc:	mov	w1, w25
   4ade0:	mov	x0, x24
   4ade4:	ldp	x19, x20, [sp, #16]
   4ade8:	ldp	x21, x22, [sp, #32]
   4adec:	ldp	x23, x24, [sp, #48]
   4adf0:	ldp	x25, x26, [sp, #64]
   4adf4:	ldp	x27, x28, [sp, #80]
   4adf8:	ldp	x29, x30, [sp], #112
   4adfc:	b	bfc0 <mpfr_overflow@plt>
   4ae00:	ldr	x28, [x1, #8]
   4ae04:	mrs	x19, tpidr_el0
   4ae08:	ldr	x27, [x24]
   4ae0c:	mov	w5, #0x40                  	// #64
   4ae10:	add	x1, x28, w4, sxtw #3
   4ae14:	sub	x27, x27, #0x1
   4ae18:	smaddl	x4, w4, w5, x0
   4ae1c:	ldr	x22, [x24, #24]
   4ae20:	asr	x27, x27, #6
   4ae24:	ldur	x20, [x1, #-8]
   4ae28:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4ae2c:	ldr	x1, [x0, #2560]
   4ae30:	add	x0, x0, #0xa00
   4ae34:	blr	x1
   4ae38:	ldr	x0, [x19, x0]
   4ae3c:	clz	x21, x20
   4ae40:	sub	x20, x4, x21
   4ae44:	add	x27, x27, #0x1
   4ae48:	cmp	x0, x20
   4ae4c:	sub	x23, x2, x27
   4ae50:	b.lt	4add8 <mpfr_set_z_2exp@@Base+0x8c>  // b.tstop
   4ae54:	add	x0, x20, #0x1
   4ae58:	str	x0, [sp, #96]
   4ae5c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4ae60:	ldr	x1, [x0, #2528]
   4ae64:	add	x0, x0, #0x9e0
   4ae68:	blr	x1
   4ae6c:	ldr	x0, [x19, x0]
   4ae70:	add	x1, x20, #0x1
   4ae74:	cmp	x1, x0
   4ae78:	b.ge	4aea8 <mpfr_set_z_2exp@@Base+0x15c>  // b.tcont
   4ae7c:	cmp	w25, #0x0
   4ae80:	mov	w2, w26
   4ae84:	csinc	w1, w25, wzr, ne  // ne = any
   4ae88:	mov	x0, x24
   4ae8c:	ldp	x19, x20, [sp, #16]
   4ae90:	ldp	x21, x22, [sp, #32]
   4ae94:	ldp	x23, x24, [sp, #48]
   4ae98:	ldp	x25, x26, [sp, #64]
   4ae9c:	ldp	x27, x28, [sp, #80]
   4aea0:	ldp	x29, x30, [sp], #112
   4aea4:	b	c450 <mpfr_underflow@plt>
   4aea8:	lsl	x1, x23, #3
   4aeac:	tbnz	x23, #63, 4b0ac <mpfr_set_z_2exp@@Base+0x360>
   4aeb0:	add	x1, x28, x1
   4aeb4:	cbz	x21, 4afdc <mpfr_set_z_2exp@@Base+0x290>
   4aeb8:	mov	w3, w21
   4aebc:	mov	x2, x27
   4aec0:	mov	x0, x22
   4aec4:	str	x1, [sp, #104]
   4aec8:	bl	bd40 <__gmpn_lshift@plt>
   4aecc:	mov	w5, #0x40                  	// #64
   4aed0:	ldr	x1, [sp, #104]
   4aed4:	cbz	x23, 4aef0 <mpfr_set_z_2exp@@Base+0x1a4>
   4aed8:	ldur	x0, [x1, #-8]
   4aedc:	sub	w5, w5, w21
   4aee0:	lsr	x0, x0, x5
   4aee4:	ldr	x5, [x22]
   4aee8:	orr	x5, x5, x0
   4aeec:	str	x5, [x22]
   4aef0:	ldr	x0, [x24]
   4aef4:	mov	x1, #0x1                   	// #1
   4aef8:	neg	w0, w0
   4aefc:	ands	w0, w0, #0x3f
   4af00:	b.eq	4aff4 <mpfr_set_z_2exp@@Base+0x2a8>  // b.none
   4af04:	ldr	x3, [x22]
   4af08:	sub	w0, w0, #0x1
   4af0c:	lsl	x1, x1, x0
   4af10:	and	x2, x1, x3
   4af14:	sub	x1, x1, #0x1
   4af18:	and	x5, x1, x3
   4af1c:	mov	x1, #0x2                   	// #2
   4af20:	lsl	x1, x1, x0
   4af24:	neg	x0, x1
   4af28:	and	x0, x0, x3
   4af2c:	str	x0, [x22]
   4af30:	mov	w0, w21
   4af34:	cmp	x5, #0x0
   4af38:	ccmp	x23, #0x0, #0x4, eq  // eq = none
   4af3c:	b.le	4af78 <mpfr_set_z_2exp@@Base+0x22c>
   4af40:	sub	x23, x23, #0x1
   4af44:	ldr	x5, [x28, x23, lsl #3]
   4af48:	cbz	w0, 4af5c <mpfr_set_z_2exp@@Base+0x210>
   4af4c:	neg	w0, w0
   4af50:	mov	x3, #0xffffffffffffffff    	// #-1
   4af54:	lsl	x0, x3, x0
   4af58:	bic	x5, x5, x0
   4af5c:	cbnz	x5, 4af78 <mpfr_set_z_2exp@@Base+0x22c>
   4af60:	cbz	x23, 4af78 <mpfr_set_z_2exp@@Base+0x22c>
   4af64:	sub	x23, x23, #0x1
   4af68:	cmp	x23, #0x0
   4af6c:	ldr	x5, [x28, x23, lsl #3]
   4af70:	ccmp	x5, #0x0, #0x0, gt
   4af74:	b.eq	4af64 <mpfr_set_z_2exp@@Base+0x218>  // b.none
   4af78:	cbnz	w25, 4b024 <mpfr_set_z_2exp@@Base+0x2d8>
   4af7c:	cbz	x2, 4af90 <mpfr_set_z_2exp@@Base+0x244>
   4af80:	ldr	x0, [x22]
   4af84:	and	x0, x1, x0
   4af88:	orr	x0, x0, x5
   4af8c:	cbnz	x0, 4b040 <mpfr_set_z_2exp@@Base+0x2f4>
   4af90:	orr	x1, x2, x5
   4af94:	cmp	x1, #0x0
   4af98:	csetm	w4, ne  // ne = any
   4af9c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4afa0:	ldr	x1, [x0, #2528]
   4afa4:	add	x0, x0, #0x9e0
   4afa8:	blr	x1
   4afac:	ldr	x0, [x19, x0]
   4afb0:	cmp	x0, x20
   4afb4:	b.le	4b0f4 <mpfr_set_z_2exp@@Base+0x3a8>
   4afb8:	orr	w4, w4, w25
   4afbc:	cbnz	w4, 4afd0 <mpfr_set_z_2exp@@Base+0x284>
   4afc0:	mov	x0, x24
   4afc4:	bl	bf80 <mpfr_powerof2_raw@plt>
   4afc8:	cmp	w0, #0x0
   4afcc:	cset	w25, ne  // ne = any
   4afd0:	mov	w2, w26
   4afd4:	mov	w1, w25
   4afd8:	b	4ae88 <mpfr_set_z_2exp@@Base+0x13c>
   4afdc:	cmp	x1, x22
   4afe0:	b.eq	4aef0 <mpfr_set_z_2exp@@Base+0x1a4>  // b.none
   4afe4:	lsl	x2, x27, #3
   4afe8:	mov	x0, x22
   4afec:	bl	ba90 <memcpy@plt>
   4aff0:	b	4aef0 <mpfr_set_z_2exp@@Base+0x1a4>
   4aff4:	cbz	x23, 4b018 <mpfr_set_z_2exp@@Base+0x2cc>
   4aff8:	sub	x23, x23, #0x1
   4affc:	mov	x4, #0x8000000000000000    	// #-9223372036854775808
   4b000:	lsr	x4, x4, x21
   4b004:	ldr	x5, [x28, x23, lsl #3]
   4b008:	and	x2, x5, x4
   4b00c:	sub	x4, x4, #0x1
   4b010:	and	x5, x4, x5
   4b014:	b	4af34 <mpfr_set_z_2exp@@Base+0x1e8>
   4b018:	mov	x5, #0x0                   	// #0
   4b01c:	mov	x2, #0x0                   	// #0
   4b020:	b	4af34 <mpfr_set_z_2exp@@Base+0x1e8>
   4b024:	cmp	w25, #0x1
   4b028:	b.eq	4af90 <mpfr_set_z_2exp@@Base+0x244>  // b.none
   4b02c:	add	w0, w25, w26, lsr #31
   4b030:	cmp	w0, #0x3
   4b034:	b.eq	4af90 <mpfr_set_z_2exp@@Base+0x244>  // b.none
   4b038:	orr	x0, x2, x5
   4b03c:	b	4af8c <mpfr_set_z_2exp@@Base+0x240>
   4b040:	ldr	x0, [x22]
   4b044:	adds	x1, x1, x0
   4b048:	str	x1, [x22]
   4b04c:	b.cs	4b0a4 <mpfr_set_z_2exp@@Base+0x358>  // b.hs, b.nlast
   4b050:	mov	w4, #0x1                   	// #1
   4b054:	b	4af9c <mpfr_set_z_2exp@@Base+0x250>
   4b058:	ldr	x1, [x22, x0, lsl #3]
   4b05c:	add	x1, x1, #0x1
   4b060:	str	x1, [x22, x0, lsl #3]
   4b064:	add	x0, x0, #0x1
   4b068:	cbnz	x1, 4b050 <mpfr_set_z_2exp@@Base+0x304>
   4b06c:	cmp	x27, x0
   4b070:	b.gt	4b058 <mpfr_set_z_2exp@@Base+0x30c>
   4b074:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4b078:	ldr	x1, [x0, #2560]
   4b07c:	add	x0, x0, #0xa00
   4b080:	blr	x1
   4b084:	ldr	x0, [x19, x0]
   4b088:	cmp	x0, x20
   4b08c:	b.eq	4add8 <mpfr_set_z_2exp@@Base+0x8c>  // b.none
   4b090:	add	x22, x22, x27, lsl #3
   4b094:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   4b098:	ldr	x20, [sp, #96]
   4b09c:	stur	x0, [x22, #-8]
   4b0a0:	b	4b050 <mpfr_set_z_2exp@@Base+0x304>
   4b0a4:	mov	x0, #0x1                   	// #1
   4b0a8:	b	4b06c <mpfr_set_z_2exp@@Base+0x320>
   4b0ac:	sub	x0, x22, x1
   4b0b0:	cbz	x21, 4b0dc <mpfr_set_z_2exp@@Base+0x390>
   4b0b4:	mov	w3, w21
   4b0b8:	mov	x1, x28
   4b0bc:	bl	bd40 <__gmpn_lshift@plt>
   4b0c0:	mov	x2, #0xfffffffffffffff8    	// #-8
   4b0c4:	mov	x0, x22
   4b0c8:	mov	w1, #0x0                   	// #0
   4b0cc:	mul	x2, x23, x2
   4b0d0:	bl	c1a0 <memset@plt>
   4b0d4:	mov	w4, #0x0                   	// #0
   4b0d8:	b	4af9c <mpfr_set_z_2exp@@Base+0x250>
   4b0dc:	cmp	x0, x28
   4b0e0:	b.eq	4b0c0 <mpfr_set_z_2exp@@Base+0x374>  // b.none
   4b0e4:	lsl	x2, x2, #3
   4b0e8:	mov	x1, x28
   4b0ec:	bl	ba90 <memcpy@plt>
   4b0f0:	b	4b0c0 <mpfr_set_z_2exp@@Base+0x374>
   4b0f4:	mul	w4, w26, w4
   4b0f8:	str	w26, [x24, #8]
   4b0fc:	str	x20, [x24, #16]
   4b100:	cbz	w4, 4ad94 <mpfr_set_z_2exp@@Base+0x48>
   4b104:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4b108:	ldr	x1, [x0, #2592]
   4b10c:	add	x0, x0, #0xa20
   4b110:	blr	x1
   4b114:	add	x0, x19, x0
   4b118:	ldr	w1, [x0]
   4b11c:	orr	w1, w1, #0x8
   4b120:	str	w1, [x0]
   4b124:	b	4ad94 <mpfr_set_z_2exp@@Base+0x48>

000000000004b128 <mpfr_ai@@Base>:
   4b128:	sub	sp, sp, #0x240
   4b12c:	stp	x29, x30, [sp]
   4b130:	mov	x29, sp
   4b134:	str	x0, [sp, #96]
   4b138:	ldr	x0, [x1, #16]
   4b13c:	stp	x19, x20, [sp, #16]
   4b140:	stp	x21, x22, [sp, #32]
   4b144:	stp	x23, x24, [sp, #48]
   4b148:	stp	x25, x26, [sp, #64]
   4b14c:	stp	x27, x28, [sp, #80]
   4b150:	mov	x28, x1
   4b154:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   4b158:	str	w2, [sp, #136]
   4b15c:	cmp	x0, x1
   4b160:	b.gt	4b1e8 <mpfr_ai@@Base+0xc0>
   4b164:	mov	x2, #0x2                   	// #2
   4b168:	movk	x2, #0x8000, lsl #48
   4b16c:	cmp	x0, x2
   4b170:	b.ne	4b1c8 <mpfr_ai@@Base+0xa0>  // b.any
   4b174:	ldr	x1, [sp, #96]
   4b178:	str	x0, [x1, #16]
   4b17c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4b180:	ldr	x1, [x0, #2592]
   4b184:	add	x0, x0, #0xa20
   4b188:	blr	x1
   4b18c:	mrs	x1, tpidr_el0
   4b190:	add	x0, x1, x0
   4b194:	ldr	w1, [x0]
   4b198:	orr	w1, w1, #0x4
   4b19c:	str	w1, [x0]
   4b1a0:	mov	w3, #0x0                   	// #0
   4b1a4:	mov	w0, w3
   4b1a8:	ldp	x29, x30, [sp]
   4b1ac:	ldp	x19, x20, [sp, #16]
   4b1b0:	ldp	x21, x22, [sp, #32]
   4b1b4:	ldp	x23, x24, [sp, #48]
   4b1b8:	ldp	x25, x26, [sp, #64]
   4b1bc:	ldp	x27, x28, [sp, #80]
   4b1c0:	add	sp, sp, #0x240
   4b1c4:	ret
   4b1c8:	cmp	x0, x1
   4b1cc:	b.ne	4b1e8 <mpfr_ai@@Base+0xc0>  // b.any
   4b1d0:	ldr	x1, [sp, #96]
   4b1d4:	mov	w0, #0x1                   	// #1
   4b1d8:	str	w0, [x1, #8]
   4b1dc:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4b1e0:	str	x0, [x1, #16]
   4b1e4:	b	4b1a0 <mpfr_ai@@Base+0x78>
   4b1e8:	mrs	x20, tpidr_el0
   4b1ec:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4b1f0:	ldr	x1, [x0, #2592]
   4b1f4:	add	x0, x0, #0xa20
   4b1f8:	blr	x1
   4b1fc:	add	x19, sp, #0x100
   4b200:	add	x21, sp, #0x120
   4b204:	ldr	w0, [x20, x0]
   4b208:	str	w0, [sp, #140]
   4b20c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4b210:	ldr	x1, [x0, #2528]
   4b214:	add	x0, x0, #0x9e0
   4b218:	blr	x1
   4b21c:	add	x1, x20, x0
   4b220:	ldr	x0, [x20, x0]
   4b224:	str	x0, [sp, #152]
   4b228:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4b22c:	ldr	x2, [x0, #2560]
   4b230:	add	x0, x0, #0xa00
   4b234:	blr	x2
   4b238:	ldr	x2, [x20, x0]
   4b23c:	str	x2, [sp, #144]
   4b240:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   4b244:	str	x2, [x1]
   4b248:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   4b24c:	str	x1, [x20, x0]
   4b250:	mov	x0, x19
   4b254:	mov	x1, #0x20                  	// #32
   4b258:	bl	cb10 <mpfr_init2@plt>
   4b25c:	mov	x0, x21
   4b260:	mov	x1, #0x20                  	// #32
   4b264:	bl	cb10 <mpfr_init2@plt>
   4b268:	ldr	w3, [x28, #8]
   4b26c:	mov	x1, x28
   4b270:	mov	w2, #0x0                   	// #0
   4b274:	mov	x0, x19
   4b278:	bl	c730 <mpfr_set4@plt>
   4b27c:	mov	w3, #0x0                   	// #0
   4b280:	mov	x2, #0x0                   	// #0
   4b284:	mov	x1, #0x51f                 	// #1311
   4b288:	mov	x0, x21
   4b28c:	bl	c680 <mpfr_set_ui_2exp@plt>
   4b290:	ldr	x0, [sp, #96]
   4b294:	mov	w3, #0x0                   	// #0
   4b298:	mov	x1, x21
   4b29c:	ldr	x2, [x0]
   4b2a0:	mov	x0, x21
   4b2a4:	bl	bad0 <mpfr_mul_ui@plt>
   4b2a8:	ldr	w0, [x28, #8]
   4b2ac:	mov	w3, #0x0                   	// #0
   4b2b0:	tbz	w0, #31, 4b490 <mpfr_ai@@Base+0x368>
   4b2b4:	mov	x1, x19
   4b2b8:	mov	x0, x19
   4b2bc:	mov	x2, #0xffffffffffffcccd    	// #-13107
   4b2c0:	bl	c9f0 <mpfr_mul_si@plt>
   4b2c4:	mov	x2, x21
   4b2c8:	mov	x1, x19
   4b2cc:	mov	w3, #0x0                   	// #0
   4b2d0:	mov	x0, x19
   4b2d4:	bl	c230 <mpfr_add@plt>
   4b2d8:	mov	x0, x21
   4b2dc:	bl	c0f0 <mpfr_clear@plt>
   4b2e0:	mov	x1, #0x100000              	// #1048576
   4b2e4:	mov	x2, #0x0                   	// #0
   4b2e8:	mov	x0, x19
   4b2ec:	bl	bfd0 <mpfr_cmp_ui_2exp@plt>
   4b2f0:	mov	w21, w0
   4b2f4:	mov	x0, x19
   4b2f8:	bl	c0f0 <mpfr_clear@plt>
   4b2fc:	ldr	x2, [sp, #144]
   4b300:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4b304:	ldr	x1, [x0, #2592]
   4b308:	add	x0, x0, #0xa20
   4b30c:	blr	x1
   4b310:	ldr	w1, [sp, #140]
   4b314:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   4b318:	str	w1, [x20, x0]
   4b31c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4b320:	ldr	x1, [x0, #2560]
   4b324:	add	x0, x0, #0xa00
   4b328:	blr	x1
   4b32c:	add	x1, x20, x0
   4b330:	str	x2, [x20, x0]
   4b334:	cmp	w21, #0x0
   4b338:	ldr	x0, [sp, #96]
   4b33c:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   4b340:	ldr	x19, [x0]
   4b344:	b.le	4bdc8 <mpfr_ai@@Base+0xca0>
   4b348:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4b34c:	ldr	x4, [x0, #2528]
   4b350:	add	x0, x0, #0x9e0
   4b354:	blr	x4
   4b358:	str	x3, [x20, x0]
   4b35c:	add	x20, sp, #0x1c0
   4b360:	add	x0, x19, #0xb
   4b364:	add	x21, sp, #0x1e0
   4b368:	str	x2, [x1]
   4b36c:	mov	x1, #0x20                  	// #32
   4b370:	str	x0, [sp, #104]
   4b374:	mov	x0, x20
   4b378:	bl	cb10 <mpfr_init2@plt>
   4b37c:	mov	x0, x21
   4b380:	mov	x1, #0x20                  	// #32
   4b384:	bl	cb10 <mpfr_init2@plt>
   4b388:	mov	x1, x28
   4b38c:	mov	w3, #0x1                   	// #1
   4b390:	mov	w2, #0x2                   	// #2
   4b394:	mov	x0, x20
   4b398:	bl	c730 <mpfr_set4@plt>
   4b39c:	mov	w3, #0x2                   	// #2
   4b3a0:	mov	x1, x20
   4b3a4:	mov	x2, #0x3                   	// #3
   4b3a8:	mov	x0, x20
   4b3ac:	bl	bff0 <mpfr_pow_ui@plt>
   4b3b0:	mov	x1, x20
   4b3b4:	mov	w2, #0x2                   	// #2
   4b3b8:	mov	x0, x20
   4b3bc:	bl	c9c0 <mpfr_sqrt@plt>
   4b3c0:	mov	w3, #0x2                   	// #2
   4b3c4:	mov	w2, #0xa                   	// #10
   4b3c8:	mov	x0, x21
   4b3cc:	adrp	x1, 5b000 <mpfr_bases@@Base+0x12a8>
   4b3d0:	add	x1, x1, #0xf08
   4b3d4:	bl	c750 <mpfr_set_str@plt>
   4b3d8:	mov	x2, x21
   4b3dc:	mov	x1, x20
   4b3e0:	mov	x0, x21
   4b3e4:	mov	w3, #0x2                   	// #2
   4b3e8:	bl	bdd0 <mpfr_mul@plt>
   4b3ec:	ldr	x0, [x28, #16]
   4b3f0:	cmp	x0, #0x0
   4b3f4:	b.le	4b4a4 <mpfr_ai@@Base+0x37c>
   4b3f8:	mov	w1, #0x2                   	// #2
   4b3fc:	mov	x0, x21
   4b400:	bl	bd20 <mpfr_get_ui@plt>
   4b404:	ldr	x1, [x28, #16]
   4b408:	mov	x2, #0x4                   	// #4
   4b40c:	sub	x1, x1, #0x1
   4b410:	sdiv	x1, x1, x2
   4b414:	mvn	x1, x1
   4b418:	add	x0, x1, x0
   4b41c:	str	x0, [sp, #160]
   4b420:	ldr	x20, [x28, #16]
   4b424:	ldr	x0, [sp, #160]
   4b428:	add	x25, x0, #0x6
   4b42c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4b430:	cmp	x20, x0
   4b434:	b.eq	4b4ac <mpfr_ai@@Base+0x384>  // b.none
   4b438:	ldr	w0, [x28, #8]
   4b43c:	cmp	w0, #0x0
   4b440:	b.le	4b4b4 <mpfr_ai@@Base+0x38c>
   4b444:	cmp	x20, #0x0
   4b448:	b.le	4b4bc <mpfr_ai@@Base+0x394>
   4b44c:	asr	x20, x20, #2
   4b450:	mov	x0, x21
   4b454:	add	x20, x20, #0x3
   4b458:	mov	w1, #0x2                   	// #2
   4b45c:	bl	bd20 <mpfr_get_ui@plt>
   4b460:	add	x0, x20, x0
   4b464:	str	x0, [sp, #120]
   4b468:	add	x0, x19, #0xb
   4b46c:	cmp	x0, #0x1
   4b470:	b.eq	4b520 <mpfr_ai@@Base+0x3f8>  // b.none
   4b474:	b.gt	4b4c4 <mpfr_ai@@Base+0x39c>
   4b478:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   4b47c:	add	x2, x2, #0x50e
   4b480:	mov	w1, #0x182                 	// #386
   4b484:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   4b488:	add	x0, x0, #0xf1c
   4b48c:	bl	cbd0 <mpfr_assert_fail@plt>
   4b490:	mov	x1, x19
   4b494:	mov	x0, x19
   4b498:	mov	x2, #0x4ccd                	// #19661
   4b49c:	bl	bad0 <mpfr_mul_ui@plt>
   4b4a0:	b	4b2c4 <mpfr_ai@@Base+0x19c>
   4b4a4:	str	xzr, [sp, #160]
   4b4a8:	b	4b420 <mpfr_ai@@Base+0x2f8>
   4b4ac:	mov	x0, #0x2                   	// #2
   4b4b0:	b	4b464 <mpfr_ai@@Base+0x33c>
   4b4b4:	mov	x0, #0xa                   	// #10
   4b4b8:	b	4b464 <mpfr_ai@@Base+0x33c>
   4b4bc:	mov	x0, #0x3                   	// #3
   4b4c0:	b	4b464 <mpfr_ai@@Base+0x33c>
   4b4c4:	add	x19, x19, #0xa
   4b4c8:	clz	x0, x19
   4b4cc:	mov	w19, #0x40                  	// #64
   4b4d0:	sub	w19, w19, w0
   4b4d4:	sxtw	x19, w19
   4b4d8:	ldr	x0, [sp, #104]
   4b4dc:	mov	x21, #0x0                   	// #0
   4b4e0:	add	x27, x0, x19
   4b4e4:	ldr	x0, [sp, #120]
   4b4e8:	add	x27, x27, x0
   4b4ec:	ldr	x0, [sp, #104]
   4b4f0:	add	x27, x27, x25
   4b4f4:	bl	bfa0 <__gmpfr_isqrt@plt>
   4b4f8:	mov	x19, x0
   4b4fc:	add	x0, x0, #0x1
   4b500:	lsl	x0, x0, #5
   4b504:	bl	cd90 <mpfr_allocate_func@plt>
   4b508:	mov	x20, x0
   4b50c:	cbnz	x0, 4b528 <mpfr_ai@@Base+0x400>
   4b510:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   4b514:	mov	w1, #0x189                 	// #393
   4b518:	add	x2, x2, #0xf21
   4b51c:	b	4b484 <mpfr_ai@@Base+0x35c>
   4b520:	mov	x19, #0x0                   	// #0
   4b524:	b	4b4d8 <mpfr_ai@@Base+0x3b0>
   4b528:	add	x0, x20, x21, lsl #5
   4b52c:	add	x21, x21, #0x1
   4b530:	bl	bc50 <mpfr_init@plt>
   4b534:	cmp	x19, x21
   4b538:	b.cs	4b528 <mpfr_ai@@Base+0x400>  // b.hs, b.nlast
   4b53c:	add	x22, sp, #0x140
   4b540:	add	x23, sp, #0x160
   4b544:	mov	x0, x22
   4b548:	bl	bc50 <mpfr_init@plt>
   4b54c:	mov	x0, x23
   4b550:	add	x21, sp, #0x180
   4b554:	bl	bc50 <mpfr_init@plt>
   4b558:	add	x24, sp, #0x1a0
   4b55c:	mov	x0, x21
   4b560:	bl	bc50 <mpfr_init@plt>
   4b564:	mov	x0, x24
   4b568:	bl	bc50 <mpfr_init@plt>
   4b56c:	add	x0, sp, #0x200
   4b570:	str	x0, [sp, #192]
   4b574:	bl	bc50 <mpfr_init@plt>
   4b578:	add	x0, sp, #0x220
   4b57c:	bl	bc50 <mpfr_init@plt>
   4b580:	mov	x0, #0x40                  	// #64
   4b584:	str	x24, [sp, #128]
   4b588:	str	x0, [sp, #184]
   4b58c:	mov	x24, #0x0                   	// #0
   4b590:	add	x0, x20, x24, lsl #5
   4b594:	mov	x1, x27
   4b598:	add	x24, x24, #0x1
   4b59c:	bl	bf50 <mpfr_set_prec@plt>
   4b5a0:	cmp	x24, x19
   4b5a4:	b.ls	4b590 <mpfr_ai@@Base+0x468>  // b.plast
   4b5a8:	mov	x1, x27
   4b5ac:	mov	x0, x22
   4b5b0:	bl	bf50 <mpfr_set_prec@plt>
   4b5b4:	add	x24, x20, #0x20
   4b5b8:	mov	x1, x27
   4b5bc:	mov	x0, x23
   4b5c0:	bl	bf50 <mpfr_set_prec@plt>
   4b5c4:	mov	x1, x27
   4b5c8:	mov	x0, x21
   4b5cc:	bl	bf50 <mpfr_set_prec@plt>
   4b5d0:	ldr	x0, [sp, #128]
   4b5d4:	mov	x1, x27
   4b5d8:	bl	bf50 <mpfr_set_prec@plt>
   4b5dc:	mov	w3, #0x0                   	// #0
   4b5e0:	mov	x2, #0x0                   	// #0
   4b5e4:	mov	x1, #0x1                   	// #1
   4b5e8:	mov	x0, x23
   4b5ec:	bl	c680 <mpfr_set_ui_2exp@plt>
   4b5f0:	ldr	w3, [x28, #8]
   4b5f4:	mov	x1, x28
   4b5f8:	mov	w2, #0x0                   	// #0
   4b5fc:	mov	x0, x21
   4b600:	bl	c730 <mpfr_set4@plt>
   4b604:	mov	w3, #0x2                   	// #2
   4b608:	mov	x2, #0x0                   	// #0
   4b60c:	mov	x1, #0x1                   	// #1
   4b610:	mov	x0, x20
   4b614:	bl	c680 <mpfr_set_ui_2exp@plt>
   4b618:	mov	x1, x21
   4b61c:	mov	w2, #0x2                   	// #2
   4b620:	mov	x0, x24
   4b624:	bl	c490 <mpfr_sqr@plt>
   4b628:	ldr	w0, [x28, #8]
   4b62c:	mov	x2, x28
   4b630:	mov	x1, x24
   4b634:	cmp	w0, #0x0
   4b638:	mov	x0, x24
   4b63c:	cset	w3, le
   4b640:	add	w3, w3, #0x2
   4b644:	bl	bdd0 <mpfr_mul@plt>
   4b648:	ldr	w0, [x28, #8]
   4b64c:	tbz	w0, #31, 4b65c <mpfr_ai@@Base+0x534>
   4b650:	ldr	w0, [x24, #8]
   4b654:	neg	w0, w0
   4b658:	str	w0, [x24, #8]
   4b65c:	mov	x0, x24
   4b660:	mov	w1, #0x2                   	// #2
   4b664:	bl	bd20 <mpfr_get_ui@plt>
   4b668:	str	x0, [sp, #216]
   4b66c:	ldr	w0, [x28, #8]
   4b670:	tbz	w0, #31, 4b680 <mpfr_ai@@Base+0x558>
   4b674:	ldr	w0, [x24, #8]
   4b678:	neg	w0, w0
   4b67c:	str	w0, [x24, #8]
   4b680:	add	x26, x20, #0x40
   4b684:	mov	x25, #0x2                   	// #2
   4b688:	b	4b6ac <mpfr_ai@@Base+0x584>
   4b68c:	tbnz	w25, #0, 4b830 <mpfr_ai@@Base+0x708>
   4b690:	lsr	x1, x25, #1
   4b694:	mov	x0, x26
   4b698:	mov	w2, #0x0                   	// #0
   4b69c:	add	x1, x20, x1, lsl #5
   4b6a0:	bl	c490 <mpfr_sqr@plt>
   4b6a4:	add	x25, x25, #0x1
   4b6a8:	add	x26, x26, #0x20
   4b6ac:	cmp	x19, x25
   4b6b0:	b.cs	4b68c <mpfr_ai@@Base+0x564>  // b.hs, b.nlast
   4b6b4:	ldr	x0, [sp, #192]
   4b6b8:	add	x24, sp, #0x220
   4b6bc:	mov	x1, x24
   4b6c0:	mov	x2, x27
   4b6c4:	bl	bc20 <mpfr_gamma_one_and_two_third@plt>
   4b6c8:	mov	w3, #0x0                   	// #0
   4b6cc:	mov	x2, #0x0                   	// #0
   4b6d0:	mov	x1, #0x9                   	// #9
   4b6d4:	mov	x0, x23
   4b6d8:	bl	c680 <mpfr_set_ui_2exp@plt>
   4b6dc:	mov	x1, x23
   4b6e0:	mov	w2, #0x0                   	// #0
   4b6e4:	mov	x0, x23
   4b6e8:	bl	cdc0 <mpfr_cbrt@plt>
   4b6ec:	mov	x2, x24
   4b6f0:	mov	x1, x23
   4b6f4:	mov	w3, #0x0                   	// #0
   4b6f8:	mov	x0, x23
   4b6fc:	bl	bdd0 <mpfr_mul@plt>
   4b700:	mov	x24, #0x0                   	// #0
   4b704:	mov	x2, x23
   4b708:	mov	w3, #0x0                   	// #0
   4b70c:	mov	x1, #0x1                   	// #1
   4b710:	mov	x0, x23
   4b714:	bl	c380 <mpfr_ui_div@plt>
   4b718:	mov	w3, #0x0                   	// #0
   4b71c:	mov	x2, #0x0                   	// #0
   4b720:	mov	x1, #0x3                   	// #3
   4b724:	mov	x0, x21
   4b728:	bl	c680 <mpfr_set_ui_2exp@plt>
   4b72c:	mov	x1, x21
   4b730:	mov	w2, #0x0                   	// #0
   4b734:	mov	x0, x21
   4b738:	bl	cdc0 <mpfr_cbrt@plt>
   4b73c:	ldr	x2, [sp, #192]
   4b740:	mov	w3, #0x0                   	// #0
   4b744:	mov	x1, x21
   4b748:	mov	x0, x21
   4b74c:	bl	bdd0 <mpfr_mul@plt>
   4b750:	mov	x1, x21
   4b754:	mov	w2, #0x0                   	// #0
   4b758:	mov	x0, x21
   4b75c:	bl	bdf0 <mpfr_neg@plt>
   4b760:	mov	x2, x21
   4b764:	mov	x1, x28
   4b768:	mov	x0, x21
   4b76c:	mov	w3, #0x0                   	// #0
   4b770:	bl	c6b0 <mpfr_div@plt>
   4b774:	str	xzr, [sp, #168]
   4b778:	mov	w0, #0x1                   	// #1
   4b77c:	str	w0, [sp, #424]
   4b780:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4b784:	str	x0, [sp, #432]
   4b788:	add	x0, x19, x19, lsl #1
   4b78c:	sub	x0, x0, #0x3
   4b790:	str	x0, [sp, #232]
   4b794:	lsl	x0, x19, #5
   4b798:	str	x0, [sp, #224]
   4b79c:	sub	x0, x0, #0x20
   4b7a0:	add	x0, x20, x0
   4b7a4:	str	x0, [sp, #176]
   4b7a8:	lsl	x0, x19, #5
   4b7ac:	add	x0, x20, x0
   4b7b0:	str	x0, [sp, #200]
   4b7b4:	sub	x0, x19, x19, lsl #2
   4b7b8:	str	x0, [sp, #240]
   4b7bc:	sub	x0, x19, #0x1
   4b7c0:	str	x0, [sp, #208]
   4b7c4:	ldr	x0, [sp, #232]
   4b7c8:	mov	w2, #0x0                   	// #0
   4b7cc:	add	x24, x24, x0
   4b7d0:	ldr	x0, [sp, #176]
   4b7d4:	mov	x1, x0
   4b7d8:	ldr	w3, [x0, #8]
   4b7dc:	mov	x0, x22
   4b7e0:	bl	c730 <mpfr_set4@plt>
   4b7e4:	sub	x0, x19, #0x2
   4b7e8:	mov	x3, x24
   4b7ec:	mov	x26, x0
   4b7f0:	str	x0, [sp, #112]
   4b7f4:	mov	w4, #0x0                   	// #0
   4b7f8:	sub	x2, x3, #0x1
   4b7fc:	sub	x25, x3, #0x3
   4b800:	mov	x1, x22
   4b804:	mov	x0, x22
   4b808:	bl	bf00 <mpfr_div_ui2@plt>
   4b80c:	add	x2, x20, x26, lsl #5
   4b810:	mov	x1, x22
   4b814:	mov	x0, x22
   4b818:	mov	w3, #0x0                   	// #0
   4b81c:	bl	c230 <mpfr_add@plt>
   4b820:	cbz	x26, 4b848 <mpfr_ai@@Base+0x720>
   4b824:	sub	x26, x26, #0x1
   4b828:	mov	x3, x25
   4b82c:	b	4b7f4 <mpfr_ai@@Base+0x6cc>
   4b830:	mov	x2, x24
   4b834:	sub	x1, x26, #0x20
   4b838:	mov	x0, x26
   4b83c:	mov	w3, #0x0                   	// #0
   4b840:	bl	bdd0 <mpfr_mul@plt>
   4b844:	b	4b6a4 <mpfr_ai@@Base+0x57c>
   4b848:	ldr	x0, [sp, #240]
   4b84c:	mov	x2, x23
   4b850:	mov	x1, x22
   4b854:	mov	w3, #0x0                   	// #0
   4b858:	add	x25, x0, #0x3
   4b85c:	mov	x0, x22
   4b860:	bl	bdd0 <mpfr_mul@plt>
   4b864:	add	x24, x24, x25
   4b868:	ldr	x1, [sp, #128]
   4b86c:	mov	x2, x22
   4b870:	mov	w3, #0x0                   	// #0
   4b874:	mov	x0, x1
   4b878:	bl	c230 <mpfr_add@plt>
   4b87c:	ldr	x2, [sp, #200]
   4b880:	mov	x1, x23
   4b884:	mov	x0, x23
   4b888:	mov	w3, #0x0                   	// #0
   4b88c:	bl	bdd0 <mpfr_mul@plt>
   4b890:	ldr	x0, [sp, #208]
   4b894:	cmp	x26, x0
   4b898:	b.ls	4b904 <mpfr_ai@@Base+0x7dc>  // b.plast
   4b89c:	ldr	x0, [sp, #176]
   4b8a0:	sub	x24, x24, #0x2
   4b8a4:	mov	w2, #0x0                   	// #0
   4b8a8:	mov	x1, x0
   4b8ac:	ldr	w3, [x0, #8]
   4b8b0:	mov	x0, x22
   4b8b4:	bl	c730 <mpfr_set4@plt>
   4b8b8:	mov	x3, x24
   4b8bc:	sub	x2, x3, #0x1
   4b8c0:	sub	x26, x3, #0x3
   4b8c4:	mov	x1, x22
   4b8c8:	mov	x0, x22
   4b8cc:	mov	w4, #0x0                   	// #0
   4b8d0:	bl	bf00 <mpfr_div_ui2@plt>
   4b8d4:	ldr	x0, [sp, #112]
   4b8d8:	mov	x1, x22
   4b8dc:	mov	w3, #0x0                   	// #0
   4b8e0:	add	x2, x20, x0, lsl #5
   4b8e4:	mov	x0, x22
   4b8e8:	bl	c230 <mpfr_add@plt>
   4b8ec:	ldr	x0, [sp, #112]
   4b8f0:	cbz	x0, 4b928 <mpfr_ai@@Base+0x800>
   4b8f4:	sub	x0, x0, #0x1
   4b8f8:	mov	x3, x26
   4b8fc:	str	x0, [sp, #112]
   4b900:	b	4b8bc <mpfr_ai@@Base+0x794>
   4b904:	add	x2, x24, #0x2
   4b908:	add	x24, x24, #0x3
   4b90c:	mov	x3, x24
   4b910:	mov	x1, x23
   4b914:	mov	x0, x23
   4b918:	mov	w4, #0x0                   	// #0
   4b91c:	add	x26, x26, #0x1
   4b920:	bl	bf00 <mpfr_div_ui2@plt>
   4b924:	b	4b890 <mpfr_ai@@Base+0x768>
   4b928:	mov	x2, x21
   4b92c:	mov	x1, x22
   4b930:	mov	w3, #0x0                   	// #0
   4b934:	mov	x0, x22
   4b938:	bl	bdd0 <mpfr_mul@plt>
   4b93c:	add	x25, x24, x25
   4b940:	ldr	x1, [sp, #128]
   4b944:	mov	x2, x22
   4b948:	mov	w3, #0x0                   	// #0
   4b94c:	mov	x0, x1
   4b950:	bl	c230 <mpfr_add@plt>
   4b954:	ldr	x2, [sp, #200]
   4b958:	mov	x1, x21
   4b95c:	mov	x0, x21
   4b960:	mov	w3, #0x0                   	// #0
   4b964:	bl	bdd0 <mpfr_mul@plt>
   4b968:	mov	x5, #0x0                   	// #0
   4b96c:	add	x24, x25, #0x2
   4b970:	mov	x26, x25
   4b974:	add	x25, x25, #0x3
   4b978:	mov	x0, x21
   4b97c:	mov	x3, x25
   4b980:	mov	x2, x24
   4b984:	mov	x1, x21
   4b988:	mov	w4, #0x0                   	// #0
   4b98c:	str	x5, [sp, #248]
   4b990:	bl	bf00 <mpfr_div_ui2@plt>
   4b994:	ldr	x5, [sp, #248]
   4b998:	ldr	x0, [sp, #208]
   4b99c:	add	x5, x5, #0x1
   4b9a0:	cmp	x0, x5
   4b9a4:	b.cs	4b96c <mpfr_ai@@Base+0x844>  // b.hs, b.nlast
   4b9a8:	ldr	x0, [sp, #368]
   4b9ac:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   4b9b0:	cmp	x0, x1
   4b9b4:	b.eq	4ba28 <mpfr_ai@@Base+0x900>  // b.none
   4b9b8:	ldr	x1, [sp, #104]
   4b9bc:	add	x0, x0, x1
   4b9c0:	ldr	x1, [sp, #432]
   4b9c4:	add	x0, x0, #0x3
   4b9c8:	cmp	x0, x1
   4b9cc:	cset	w1, lt  // lt = tstop
   4b9d0:	ldr	x0, [sp, #400]
   4b9d4:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   4b9d8:	cmp	x0, x2
   4b9dc:	b.eq	4ba30 <mpfr_ai@@Base+0x908>  // b.none
   4b9e0:	ldr	x2, [sp, #104]
   4b9e4:	add	x0, x2, x0
   4b9e8:	ldr	x2, [sp, #432]
   4b9ec:	add	x0, x0, #0x3
   4b9f0:	cmp	x0, x2
   4b9f4:	cset	w0, lt  // lt = tstop
   4b9f8:	tst	w1, w0
   4b9fc:	b.eq	4ba18 <mpfr_ai@@Base+0x8f0>  // b.none
   4ba00:	add	x1, x26, #0x5
   4ba04:	add	x0, x26, #0x4
   4ba08:	mul	x0, x0, x1
   4ba0c:	ldr	x1, [sp, #216]
   4ba10:	cmp	x1, x0, lsr #1
   4ba14:	b.ls	4ba38 <mpfr_ai@@Base+0x910>  // b.plast
   4ba18:	ldr	x0, [sp, #168]
   4ba1c:	add	x0, x0, #0x1
   4ba20:	str	x0, [sp, #168]
   4ba24:	b	4b7c4 <mpfr_ai@@Base+0x69c>
   4ba28:	mov	w1, #0x1                   	// #1
   4ba2c:	b	4b9d0 <mpfr_ai@@Base+0x8a8>
   4ba30:	mov	w0, #0x1                   	// #1
   4ba34:	b	4b9f8 <mpfr_ai@@Base+0x8d0>
   4ba38:	mov	w0, #0x45                  	// #69
   4ba3c:	clz	x25, x19
   4ba40:	sub	w25, w0, w25
   4ba44:	cmp	x19, #0x0
   4ba48:	mov	w0, #0x5                   	// #5
   4ba4c:	csel	w25, w25, w0, ne  // ne = any
   4ba50:	ldr	x0, [sp, #168]
   4ba54:	cbz	x0, 4bb28 <mpfr_ai@@Base+0xa00>
   4ba58:	add	x0, x0, #0x1
   4ba5c:	cmp	x0, #0x1
   4ba60:	b.hi	4ba74 <mpfr_ai@@Base+0x94c>  // b.pmore
   4ba64:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   4ba68:	mov	w1, #0x206                 	// #518
   4ba6c:	add	x2, x2, #0xf32
   4ba70:	b	4b484 <mpfr_ai@@Base+0x35c>
   4ba74:	ldr	x0, [sp, #168]
   4ba78:	mov	w1, #0x40                  	// #64
   4ba7c:	clz	x0, x0
   4ba80:	sub	w0, w1, w0
   4ba84:	add	w25, w25, w0
   4ba88:	ldr	x0, [sp, #160]
   4ba8c:	ldr	x1, [sp, #432]
   4ba90:	sub	x0, x0, x1
   4ba94:	add	x25, x0, w25, sxtw
   4ba98:	cmp	x27, x25
   4ba9c:	b.le	4bb30 <mpfr_ai@@Base+0xa08>
   4baa0:	ldr	x0, [sp, #104]
   4baa4:	sub	x2, x27, x25
   4baa8:	sub	x2, x2, #0x1
   4baac:	add	x0, x0, x25
   4bab0:	cmp	x27, x0
   4bab4:	ldr	x0, [sp, #104]
   4bab8:	csel	x27, x2, x0, le
   4babc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4bac0:	cmp	x1, x0
   4bac4:	b.gt	4bb38 <mpfr_ai@@Base+0xa10>
   4bac8:	mov	x1, #0x0                   	// #0
   4bacc:	add	x0, x20, x1, lsl #5
   4bad0:	str	x1, [sp, #168]
   4bad4:	bl	c0f0 <mpfr_clear@plt>
   4bad8:	ldr	x1, [sp, #168]
   4badc:	add	x1, x1, #0x1
   4bae0:	cmp	x19, x1
   4bae4:	b.cs	4bacc <mpfr_ai@@Base+0x9a4>  // b.hs, b.nlast
   4bae8:	ldr	x0, [sp, #224]
   4baec:	add	x1, x0, #0x20
   4baf0:	mov	x0, x20
   4baf4:	bl	ccc0 <mpfr_free_func@plt>
   4baf8:	mov	x0, x24
   4bafc:	bl	bfa0 <__gmpfr_isqrt@plt>
   4bb00:	mov	x19, x0
   4bb04:	add	x0, x0, #0x1
   4bb08:	lsl	x0, x0, #5
   4bb0c:	bl	cd90 <mpfr_allocate_func@plt>
   4bb10:	mov	x20, x0
   4bb14:	cbnz	x0, 4bc90 <mpfr_ai@@Base+0xb68>
   4bb18:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   4bb1c:	mov	w1, #0x222                 	// #546
   4bb20:	add	x2, x2, #0xf21
   4bb24:	b	4b484 <mpfr_ai@@Base+0x35c>
   4bb28:	mov	w0, #0x0                   	// #0
   4bb2c:	b	4ba84 <mpfr_ai@@Base+0x95c>
   4bb30:	mov	x27, #0x0                   	// #0
   4bb34:	b	4babc <mpfr_ai@@Base+0x994>
   4bb38:	ldr	w0, [sp, #136]
   4bb3c:	mov	x2, x27
   4bb40:	ldr	x1, [sp, #416]
   4bb44:	cmp	w0, #0x0
   4bb48:	ldr	x0, [sp, #96]
   4bb4c:	sub	x1, x1, #0x1
   4bb50:	asr	x1, x1, #6
   4bb54:	ldr	x3, [x0]
   4bb58:	add	x1, x1, #0x1
   4bb5c:	ldr	x0, [sp, #440]
   4bb60:	cinc	x3, x3, eq  // eq = none
   4bb64:	bl	c400 <mpfr_round_p@plt>
   4bb68:	cbz	w0, 4bac8 <mpfr_ai@@Base+0x9a0>
   4bb6c:	ldr	w2, [sp, #136]
   4bb70:	ldr	w3, [sp, #424]
   4bb74:	ldr	x0, [sp, #96]
   4bb78:	ldr	x1, [sp, #128]
   4bb7c:	bl	c730 <mpfr_set4@plt>
   4bb80:	mov	w3, w0
   4bb84:	add	x0, sp, #0x1c0
   4bb88:	str	w3, [sp, #104]
   4bb8c:	bl	c0f0 <mpfr_clear@plt>
   4bb90:	add	x0, sp, #0x1e0
   4bb94:	bl	c0f0 <mpfr_clear@plt>
   4bb98:	ldr	w3, [sp, #104]
   4bb9c:	ldr	x0, [sp, #112]
   4bba0:	str	w3, [sp, #104]
   4bba4:	add	x0, x20, x0, lsl #5
   4bba8:	bl	c0f0 <mpfr_clear@plt>
   4bbac:	ldr	x0, [sp, #112]
   4bbb0:	ldr	w3, [sp, #104]
   4bbb4:	add	x0, x0, #0x1
   4bbb8:	str	x0, [sp, #112]
   4bbbc:	cmp	x19, x0
   4bbc0:	b.cs	4bb9c <mpfr_ai@@Base+0xa74>  // b.hs, b.nlast
   4bbc4:	add	x1, x19, #0x1
   4bbc8:	mov	x0, x20
   4bbcc:	str	w3, [sp, #104]
   4bbd0:	lsl	x1, x1, #5
   4bbd4:	bl	ccc0 <mpfr_free_func@plt>
   4bbd8:	mov	x0, x22
   4bbdc:	bl	c0f0 <mpfr_clear@plt>
   4bbe0:	add	x0, sp, #0x160
   4bbe4:	bl	c0f0 <mpfr_clear@plt>
   4bbe8:	mov	x0, x21
   4bbec:	bl	c0f0 <mpfr_clear@plt>
   4bbf0:	ldr	x0, [sp, #128]
   4bbf4:	bl	c0f0 <mpfr_clear@plt>
   4bbf8:	add	x0, sp, #0x200
   4bbfc:	bl	c0f0 <mpfr_clear@plt>
   4bc00:	add	x0, sp, #0x220
   4bc04:	bl	c0f0 <mpfr_clear@plt>
   4bc08:	ldr	w3, [sp, #140]
   4bc0c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4bc10:	ldr	x1, [x0, #2592]
   4bc14:	add	x0, x0, #0xa20
   4bc18:	blr	x1
   4bc1c:	mrs	x1, tpidr_el0
   4bc20:	add	x2, x1, x0
   4bc24:	str	w3, [x1, x0]
   4bc28:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4bc2c:	ldr	x3, [x0, #2528]
   4bc30:	add	x0, x0, #0x9e0
   4bc34:	blr	x3
   4bc38:	ldr	x3, [sp, #152]
   4bc3c:	str	x3, [x1, x0]
   4bc40:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4bc44:	ldr	x3, [x0, #2560]
   4bc48:	add	x0, x0, #0xa00
   4bc4c:	blr	x3
   4bc50:	ldr	x3, [sp, #144]
   4bc54:	str	x3, [x1, x0]
   4bc58:	ldr	x0, [sp, #96]
   4bc5c:	ldr	x1, [sp, #152]
   4bc60:	ldr	x0, [x0, #16]
   4bc64:	ldr	w3, [sp, #104]
   4bc68:	cmp	x1, x0
   4bc6c:	b.gt	4bfb8 <mpfr_ai@@Base+0xe90>
   4bc70:	ldr	x1, [sp, #144]
   4bc74:	cmp	x1, x0
   4bc78:	b.lt	4bfb8 <mpfr_ai@@Base+0xe90>  // b.tstop
   4bc7c:	cbz	w3, 4b1a4 <mpfr_ai@@Base+0x7c>
   4bc80:	ldr	w0, [sp, #140]
   4bc84:	orr	w0, w0, #0x8
   4bc88:	str	w0, [x2]
   4bc8c:	b	4b1a4 <mpfr_ai@@Base+0x7c>
   4bc90:	ldr	x0, [sp, #112]
   4bc94:	add	x0, x20, x0, lsl #5
   4bc98:	bl	bc50 <mpfr_init@plt>
   4bc9c:	ldr	x0, [sp, #112]
   4bca0:	add	x0, x0, #0x1
   4bca4:	str	x0, [sp, #112]
   4bca8:	cmp	x19, x0
   4bcac:	b.cs	4bc90 <mpfr_ai@@Base+0xb68>  // b.hs, b.nlast
   4bcb0:	cbnz	x27, 4bd10 <mpfr_ai@@Base+0xbe8>
   4bcb4:	ldr	x0, [sp, #120]
   4bcb8:	cmp	x24, #0x1
   4bcbc:	lsl	x0, x0, #1
   4bcc0:	str	x0, [sp, #120]
   4bcc4:	ldr	x0, [sp, #104]
   4bcc8:	add	x25, x0, #0x6
   4bccc:	b.eq	4bcf8 <mpfr_ai@@Base+0xbd0>  // b.none
   4bcd0:	b.hi	4bce4 <mpfr_ai@@Base+0xbbc>  // b.pmore
   4bcd4:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   4bcd8:	mov	w1, #0x22b                 	// #555
   4bcdc:	add	x2, x2, #0xf3c
   4bce0:	b	4b484 <mpfr_ai@@Base+0x35c>
   4bce4:	add	x26, x26, #0x1
   4bce8:	mov	w27, #0x40                  	// #64
   4bcec:	clz	x26, x26
   4bcf0:	sub	w27, w27, w26
   4bcf4:	sxtw	x27, w27
   4bcf8:	ldr	x1, [sp, #120]
   4bcfc:	add	x27, x25, x27
   4bd00:	ldr	x0, [sp, #160]
   4bd04:	add	x25, x0, x1
   4bd08:	add	x27, x27, x25
   4bd0c:	b	4b58c <mpfr_ai@@Base+0x464>
   4bd10:	ldr	x0, [sp, #104]
   4bd14:	cmp	x0, x27
   4bd18:	b.le	4bd28 <mpfr_ai@@Base+0xc00>
   4bd1c:	add	x25, x0, x25
   4bd20:	add	x27, x25, #0x1
   4bd24:	b	4b58c <mpfr_ai@@Base+0x464>
   4bd28:	ldr	x1, [sp, #104]
   4bd2c:	mov	x0, #0xfffffffffffffeff    	// #-257
   4bd30:	movk	x0, #0x7fff, lsl #48
   4bd34:	sub	x0, x0, x1
   4bd38:	ldr	x1, [sp, #184]
   4bd3c:	cmp	x0, x1
   4bd40:	b.ge	4bd54 <mpfr_ai@@Base+0xc2c>  // b.tcont
   4bd44:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   4bd48:	mov	w1, #0x238                 	// #568
   4bd4c:	add	x2, x2, #0x519
   4bd50:	b	4b484 <mpfr_ai@@Base+0x35c>
   4bd54:	ldr	x0, [sp, #104]
   4bd58:	mov	x27, #0x2                   	// #2
   4bd5c:	ldr	x1, [sp, #184]
   4bd60:	cmp	x24, #0x1
   4bd64:	add	x0, x0, x1
   4bd68:	str	x0, [sp, #104]
   4bd6c:	sdiv	x0, x0, x27
   4bd70:	str	x0, [sp, #184]
   4bd74:	b.eq	4bdc0 <mpfr_ai@@Base+0xc98>  // b.none
   4bd78:	b.hi	4bd8c <mpfr_ai@@Base+0xc64>  // b.pmore
   4bd7c:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   4bd80:	mov	w1, #0x23c                 	// #572
   4bd84:	add	x2, x2, #0xf3c
   4bd88:	b	4b484 <mpfr_ai@@Base+0x35c>
   4bd8c:	add	x26, x26, #0x1
   4bd90:	clz	x0, x26
   4bd94:	mov	w26, #0x42                  	// #66
   4bd98:	sub	w26, w26, w0
   4bd9c:	sxtw	x26, w26
   4bda0:	ldr	x0, [sp, #104]
   4bda4:	ldr	x25, [sp, #432]
   4bda8:	add	x27, x0, x26
   4bdac:	ldr	x0, [sp, #160]
   4bdb0:	add	x27, x27, x0
   4bdb4:	sub	x27, x27, x25
   4bdb8:	add	x27, x27, #0x6
   4bdbc:	b	4b58c <mpfr_ai@@Base+0x464>
   4bdc0:	mov	x26, x27
   4bdc4:	b	4bda0 <mpfr_ai@@Base+0xc78>
   4bdc8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4bdcc:	ldr	x4, [x0, #2528]
   4bdd0:	add	x0, x0, #0x9e0
   4bdd4:	blr	x4
   4bdd8:	str	x2, [x1]
   4bddc:	ldr	x1, [x28, #16]
   4bde0:	str	x3, [x20, x0]
   4bde4:	mov	x0, #0xfffffffffffffeff    	// #-257
   4bde8:	add	x23, sp, #0x200
   4bdec:	movk	x0, #0x7fff, lsl #48
   4bdf0:	add	x27, sp, #0x220
   4bdf4:	sub	x19, x0, x19
   4bdf8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4bdfc:	cmp	x1, x0
   4be00:	b.ne	4bff0 <mpfr_ai@@Base+0xec8>  // b.any
   4be04:	cmp	x19, #0x2
   4be08:	b.gt	4be24 <mpfr_ai@@Base+0xcfc>
   4be0c:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   4be10:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   4be14:	add	x2, x2, #0xf44
   4be18:	add	x0, x0, #0xf1c
   4be1c:	mov	w1, #0x52                  	// #82
   4be20:	bl	cbd0 <mpfr_assert_fail@plt>
   4be24:	ldr	x0, [sp, #96]
   4be28:	mov	x22, #0xfffffffffffffeff    	// #-257
   4be2c:	mov	x25, #0x40                  	// #64
   4be30:	mov	x21, #0x8000000000000003    	// #-9223372036854775805
   4be34:	movk	x22, #0x7fff, lsl #48
   4be38:	mov	x19, #0x2                   	// #2
   4be3c:	ldr	x24, [x0]
   4be40:	mov	x0, x23
   4be44:	add	x24, x24, #0x3
   4be48:	mov	x1, x24
   4be4c:	bl	cb10 <mpfr_init2@plt>
   4be50:	mov	x1, x24
   4be54:	mov	x0, x27
   4be58:	bl	cb10 <mpfr_init2@plt>
   4be5c:	mov	x2, x24
   4be60:	mov	x1, x27
   4be64:	mov	x0, x23
   4be68:	bl	bc20 <mpfr_gamma_one_and_two_third@plt>
   4be6c:	mov	w3, #0x0                   	// #0
   4be70:	mov	x2, #0x0                   	// #0
   4be74:	mov	x1, #0x9                   	// #9
   4be78:	mov	x0, x23
   4be7c:	bl	c680 <mpfr_set_ui_2exp@plt>
   4be80:	mov	x1, x23
   4be84:	mov	w2, #0x0                   	// #0
   4be88:	mov	x0, x23
   4be8c:	bl	cdc0 <mpfr_cbrt@plt>
   4be90:	mov	x2, x27
   4be94:	mov	x1, x23
   4be98:	mov	w3, #0x0                   	// #0
   4be9c:	mov	x0, x23
   4bea0:	bl	bdd0 <mpfr_mul@plt>
   4bea4:	mov	x2, x23
   4bea8:	mov	x0, x23
   4beac:	mov	w3, #0x0                   	// #0
   4beb0:	mov	x1, #0x1                   	// #1
   4beb4:	bl	c380 <mpfr_ui_div@plt>
   4beb8:	ldr	x0, [sp, #528]
   4bebc:	cmp	x0, x21
   4bec0:	b.gt	4bee0 <mpfr_ai@@Base+0xdb8>
   4bec4:	sub	x0, x22, x24
   4bec8:	cmp	x0, x25
   4becc:	b.ge	4bfd0 <mpfr_ai@@Base+0xea8>  // b.tcont
   4bed0:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   4bed4:	mov	w1, #0x63                  	// #99
   4bed8:	add	x2, x2, #0x519
   4bedc:	b	4b484 <mpfr_ai@@Base+0x35c>
   4bee0:	ldr	w0, [sp, #136]
   4bee4:	sub	x2, x24, #0x3
   4bee8:	ldr	x1, [sp, #512]
   4beec:	cmp	w0, #0x0
   4bef0:	ldr	x0, [sp, #96]
   4bef4:	sub	x1, x1, #0x1
   4bef8:	asr	x1, x1, #6
   4befc:	ldr	x3, [x0]
   4bf00:	add	x1, x1, #0x1
   4bf04:	ldr	x0, [sp, #536]
   4bf08:	cinc	x3, x3, eq  // eq = none
   4bf0c:	bl	c400 <mpfr_round_p@plt>
   4bf10:	cbz	w0, 4bec4 <mpfr_ai@@Base+0xd9c>
   4bf14:	ldr	w2, [sp, #136]
   4bf18:	mov	x1, x23
   4bf1c:	ldr	w3, [sp, #520]
   4bf20:	ldr	x0, [sp, #96]
   4bf24:	bl	c730 <mpfr_set4@plt>
   4bf28:	mov	w3, w0
   4bf2c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4bf30:	ldr	x1, [x0, #2592]
   4bf34:	add	x0, x0, #0xa20
   4bf38:	blr	x1
   4bf3c:	add	x19, x20, x0
   4bf40:	ldr	w1, [sp, #140]
   4bf44:	str	w1, [x20, x0]
   4bf48:	str	w3, [sp, #104]
   4bf4c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4bf50:	ldr	x1, [x0, #2528]
   4bf54:	add	x0, x0, #0x9e0
   4bf58:	blr	x1
   4bf5c:	add	x22, x20, x0
   4bf60:	ldr	x1, [sp, #152]
   4bf64:	str	x1, [x20, x0]
   4bf68:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4bf6c:	ldr	x1, [x0, #2560]
   4bf70:	add	x0, x0, #0xa00
   4bf74:	blr	x1
   4bf78:	add	x21, x20, x0
   4bf7c:	ldr	x1, [sp, #144]
   4bf80:	str	x1, [x20, x0]
   4bf84:	mov	x0, x23
   4bf88:	bl	c0f0 <mpfr_clear@plt>
   4bf8c:	mov	x0, x27
   4bf90:	bl	c0f0 <mpfr_clear@plt>
   4bf94:	ldr	x0, [sp, #96]
   4bf98:	ldr	x1, [x22]
   4bf9c:	ldr	x0, [x0, #16]
   4bfa0:	ldr	w3, [sp, #104]
   4bfa4:	cmp	x0, x1
   4bfa8:	b.lt	4bfb8 <mpfr_ai@@Base+0xe90>  // b.tstop
   4bfac:	ldr	x1, [x21]
   4bfb0:	cmp	x0, x1
   4bfb4:	b.le	4bfdc <mpfr_ai@@Base+0xeb4>
   4bfb8:	ldr	w2, [sp, #136]
   4bfbc:	mov	w1, w3
   4bfc0:	ldr	x0, [sp, #96]
   4bfc4:	bl	cbc0 <mpfr_check_range@plt>
   4bfc8:	mov	w3, w0
   4bfcc:	b	4b1a4 <mpfr_ai@@Base+0x7c>
   4bfd0:	add	x24, x24, x25
   4bfd4:	sdiv	x25, x24, x19
   4bfd8:	b	4be5c <mpfr_ai@@Base+0xd34>
   4bfdc:	cbz	w3, 4b1a4 <mpfr_ai@@Base+0x7c>
   4bfe0:	ldr	w0, [x19]
   4bfe4:	orr	w0, w0, #0x8
   4bfe8:	str	w0, [x19]
   4bfec:	b	4b1a4 <mpfr_ai@@Base+0x7c>
   4bff0:	cmp	x19, #0xa
   4bff4:	b.gt	4c010 <mpfr_ai@@Base+0xee8>
   4bff8:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   4bffc:	adrp	x0, 5b000 <mpfr_bases@@Base+0x12a8>
   4c000:	add	x2, x2, #0xf94
   4c004:	add	x0, x0, #0xf1c
   4c008:	mov	w1, #0x7c                  	// #124
   4c00c:	bl	cbd0 <mpfr_assert_fail@plt>
   4c010:	ldr	x0, [sp, #96]
   4c014:	mov	x1, #0x20                  	// #32
   4c018:	ldr	x19, [x0]
   4c01c:	add	x0, sp, #0x1c0
   4c020:	str	x0, [sp, #104]
   4c024:	bl	cb10 <mpfr_init2@plt>
   4c028:	add	x0, sp, #0x1e0
   4c02c:	mov	x1, #0x20                  	// #32
   4c030:	str	x0, [sp, #120]
   4c034:	bl	cb10 <mpfr_init2@plt>
   4c038:	ldr	x0, [sp, #104]
   4c03c:	mov	x1, x28
   4c040:	mov	w3, #0x1                   	// #1
   4c044:	mov	w2, #0x2                   	// #2
   4c048:	add	x22, x19, #0xb
   4c04c:	bl	c730 <mpfr_set4@plt>
   4c050:	ldr	x1, [sp, #104]
   4c054:	mov	w3, #0x2                   	// #2
   4c058:	mov	x2, #0x3                   	// #3
   4c05c:	mov	x0, x1
   4c060:	bl	bff0 <mpfr_pow_ui@plt>
   4c064:	ldr	x1, [sp, #104]
   4c068:	mov	w2, #0x2                   	// #2
   4c06c:	mov	x0, x1
   4c070:	bl	c9c0 <mpfr_sqrt@plt>
   4c074:	ldr	x0, [sp, #120]
   4c078:	mov	w3, #0x2                   	// #2
   4c07c:	mov	w2, #0xa                   	// #10
   4c080:	adrp	x1, 5b000 <mpfr_bases@@Base+0x12a8>
   4c084:	add	x1, x1, #0xf08
   4c088:	bl	c750 <mpfr_set_str@plt>
   4c08c:	ldr	x1, [sp, #104]
   4c090:	mov	w3, #0x2                   	// #2
   4c094:	ldr	x2, [sp, #120]
   4c098:	mov	x0, x2
   4c09c:	bl	bdd0 <mpfr_mul@plt>
   4c0a0:	ldr	x0, [x28, #16]
   4c0a4:	cmp	x0, #0x0
   4c0a8:	b.le	4c130 <mpfr_ai@@Base+0x1008>
   4c0ac:	ldr	x0, [sp, #120]
   4c0b0:	mov	w1, #0x2                   	// #2
   4c0b4:	bl	bd20 <mpfr_get_ui@plt>
   4c0b8:	ldr	x1, [x28, #16]
   4c0bc:	mov	x2, #0x4                   	// #4
   4c0c0:	sub	x1, x1, #0x1
   4c0c4:	sdiv	x1, x1, x2
   4c0c8:	mvn	x1, x1
   4c0cc:	add	x0, x1, x0
   4c0d0:	str	x0, [sp, #160]
   4c0d4:	ldr	x21, [x28, #16]
   4c0d8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4c0dc:	cmp	x21, x0
   4c0e0:	b.eq	4c138 <mpfr_ai@@Base+0x1010>  // b.none
   4c0e4:	ldr	w0, [x28, #8]
   4c0e8:	cmp	w0, #0x0
   4c0ec:	b.le	4c140 <mpfr_ai@@Base+0x1018>
   4c0f0:	cmp	x21, #0x0
   4c0f4:	b.le	4c148 <mpfr_ai@@Base+0x1020>
   4c0f8:	ldr	x0, [sp, #120]
   4c0fc:	asr	x21, x21, #2
   4c100:	add	x21, x21, #0x3
   4c104:	mov	w1, #0x2                   	// #2
   4c108:	bl	bd20 <mpfr_get_ui@plt>
   4c10c:	add	x0, x21, x0
   4c110:	str	x0, [sp, #112]
   4c114:	cmp	x22, #0x1
   4c118:	b.eq	4c198 <mpfr_ai@@Base+0x1070>  // b.none
   4c11c:	b.gt	4c150 <mpfr_ai@@Base+0x1028>
   4c120:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   4c124:	mov	w1, #0xab                  	// #171
   4c128:	add	x2, x2, #0x50e
   4c12c:	b	4b484 <mpfr_ai@@Base+0x35c>
   4c130:	str	xzr, [sp, #160]
   4c134:	b	4c0d4 <mpfr_ai@@Base+0xfac>
   4c138:	mov	x0, #0x2                   	// #2
   4c13c:	b	4c110 <mpfr_ai@@Base+0xfe8>
   4c140:	mov	x0, #0xa                   	// #10
   4c144:	b	4c110 <mpfr_ai@@Base+0xfe8>
   4c148:	mov	x0, #0x3                   	// #3
   4c14c:	b	4c110 <mpfr_ai@@Base+0xfe8>
   4c150:	add	x19, x19, #0xa
   4c154:	clz	x0, x19
   4c158:	mov	w19, #0x45                  	// #69
   4c15c:	sub	w19, w19, w0
   4c160:	sxtw	x19, w19
   4c164:	ldr	x1, [sp, #112]
   4c168:	ldr	x0, [sp, #160]
   4c16c:	add	x0, x0, x1
   4c170:	add	x19, x0, x19
   4c174:	mov	x0, #0xfffffffffffffeff    	// #-257
   4c178:	movk	x0, #0x7fff, lsl #48
   4c17c:	sub	x0, x0, x22
   4c180:	cmp	x19, x0
   4c184:	b.le	4c1a0 <mpfr_ai@@Base+0x1078>
   4c188:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   4c18c:	mov	w1, #0xac                  	// #172
   4c190:	add	x2, x2, #0xfe5
   4c194:	b	4b484 <mpfr_ai@@Base+0x35c>
   4c198:	mov	x19, #0x5                   	// #5
   4c19c:	b	4c164 <mpfr_ai@@Base+0x103c>
   4c1a0:	add	x26, sp, #0x160
   4c1a4:	add	x21, sp, #0x180
   4c1a8:	mov	x0, x26
   4c1ac:	bl	bc50 <mpfr_init@plt>
   4c1b0:	mov	x0, x21
   4c1b4:	bl	bc50 <mpfr_init@plt>
   4c1b8:	mov	x0, x23
   4c1bc:	bl	bc50 <mpfr_init@plt>
   4c1c0:	mov	x0, x27
   4c1c4:	add	x24, sp, #0x1a0
   4c1c8:	bl	bc50 <mpfr_init@plt>
   4c1cc:	add	x25, sp, #0x140
   4c1d0:	mov	x0, x24
   4c1d4:	bl	bc50 <mpfr_init@plt>
   4c1d8:	mov	x0, x25
   4c1dc:	add	x19, x22, x19
   4c1e0:	bl	bc50 <mpfr_init@plt>
   4c1e4:	mov	x0, #0x40                  	// #64
   4c1e8:	str	x0, [sp, #168]
   4c1ec:	mov	x1, x19
   4c1f0:	mov	x0, x26
   4c1f4:	bl	bf50 <mpfr_set_prec@plt>
   4c1f8:	mov	x1, x19
   4c1fc:	mov	x0, x21
   4c200:	bl	bf50 <mpfr_set_prec@plt>
   4c204:	mov	x1, x19
   4c208:	mov	x0, x24
   4c20c:	bl	bf50 <mpfr_set_prec@plt>
   4c210:	mov	x1, x19
   4c214:	mov	x0, x25
   4c218:	bl	bf50 <mpfr_set_prec@plt>
   4c21c:	mov	x1, x28
   4c220:	mov	w2, #0x2                   	// #2
   4c224:	mov	x0, x24
   4c228:	bl	c490 <mpfr_sqr@plt>
   4c22c:	ldr	w0, [x28, #8]
   4c230:	mov	x2, x28
   4c234:	mov	x1, x24
   4c238:	cmp	w0, #0x0
   4c23c:	mov	x0, x24
   4c240:	cset	w3, le
   4c244:	add	w3, w3, #0x2
   4c248:	bl	bdd0 <mpfr_mul@plt>
   4c24c:	ldr	w0, [x28, #8]
   4c250:	tbz	w0, #31, 4c260 <mpfr_ai@@Base+0x1138>
   4c254:	ldr	w0, [sp, #424]
   4c258:	neg	w0, w0
   4c25c:	str	w0, [sp, #424]
   4c260:	mov	x0, x24
   4c264:	mov	w1, #0x2                   	// #2
   4c268:	bl	bd20 <mpfr_get_ui@plt>
   4c26c:	str	x0, [sp, #176]
   4c270:	ldr	w0, [x28, #8]
   4c274:	tbz	w0, #31, 4c284 <mpfr_ai@@Base+0x115c>
   4c278:	ldr	w0, [sp, #424]
   4c27c:	neg	w0, w0
   4c280:	str	w0, [sp, #424]
   4c284:	mov	x2, x19
   4c288:	mov	x1, x27
   4c28c:	mov	x0, x23
   4c290:	bl	bc20 <mpfr_gamma_one_and_two_third@plt>
   4c294:	mov	w3, #0x0                   	// #0
   4c298:	mov	x2, #0x0                   	// #0
   4c29c:	mov	x1, #0x9                   	// #9
   4c2a0:	mov	x0, x26
   4c2a4:	bl	c680 <mpfr_set_ui_2exp@plt>
   4c2a8:	mov	x1, x26
   4c2ac:	mov	w2, #0x0                   	// #0
   4c2b0:	mov	x0, x26
   4c2b4:	bl	cdc0 <mpfr_cbrt@plt>
   4c2b8:	mov	x2, x27
   4c2bc:	mov	x1, x26
   4c2c0:	mov	w3, #0x0                   	// #0
   4c2c4:	mov	x0, x26
   4c2c8:	bl	bdd0 <mpfr_mul@plt>
   4c2cc:	mov	x2, x26
   4c2d0:	mov	w3, #0x0                   	// #0
   4c2d4:	mov	x1, #0x1                   	// #1
   4c2d8:	mov	x0, x26
   4c2dc:	bl	c380 <mpfr_ui_div@plt>
   4c2e0:	mov	w3, #0x0                   	// #0
   4c2e4:	mov	x2, #0x0                   	// #0
   4c2e8:	mov	x1, #0x3                   	// #3
   4c2ec:	mov	x0, x21
   4c2f0:	bl	c680 <mpfr_set_ui_2exp@plt>
   4c2f4:	mov	x1, x21
   4c2f8:	mov	w2, #0x0                   	// #0
   4c2fc:	mov	x0, x21
   4c300:	bl	cdc0 <mpfr_cbrt@plt>
   4c304:	mov	w3, #0x0                   	// #0
   4c308:	mov	x2, x23
   4c30c:	mov	x1, x21
   4c310:	mov	x0, x21
   4c314:	bl	bdd0 <mpfr_mul@plt>
   4c318:	mov	x1, x21
   4c31c:	mov	w2, #0x0                   	// #0
   4c320:	mov	x0, x21
   4c324:	bl	bdf0 <mpfr_neg@plt>
   4c328:	mov	x2, x21
   4c32c:	mov	x1, x28
   4c330:	mov	w3, #0x0                   	// #0
   4c334:	mov	x0, x21
   4c338:	bl	c6b0 <mpfr_div@plt>
   4c33c:	mov	x2, x21
   4c340:	mov	x1, x26
   4c344:	mov	x0, x25
   4c348:	mov	w3, #0x0                   	// #0
   4c34c:	bl	c230 <mpfr_add@plt>
   4c350:	mov	x0, #0x2                   	// #2
   4c354:	str	x0, [sp, #128]
   4c358:	mov	x2, x24
   4c35c:	mov	x1, x26
   4c360:	mov	w3, #0x0                   	// #0
   4c364:	mov	x0, x26
   4c368:	bl	bdd0 <mpfr_mul@plt>
   4c36c:	mov	x2, x24
   4c370:	mov	x1, x21
   4c374:	mov	w3, #0x0                   	// #0
   4c378:	mov	x0, x21
   4c37c:	bl	bdd0 <mpfr_mul@plt>
   4c380:	ldr	x0, [sp, #128]
   4c384:	mov	x1, x26
   4c388:	mov	w4, #0x0                   	// #0
   4c38c:	add	x7, x0, #0x1
   4c390:	mov	x2, x0
   4c394:	mov	x3, x7
   4c398:	mov	x0, x26
   4c39c:	str	x7, [sp, #184]
   4c3a0:	bl	bf00 <mpfr_div_ui2@plt>
   4c3a4:	ldr	x0, [sp, #128]
   4c3a8:	mov	w4, #0x0                   	// #0
   4c3ac:	ldr	x7, [sp, #184]
   4c3b0:	add	x6, x0, #0x2
   4c3b4:	mov	x3, x6
   4c3b8:	mov	x1, x21
   4c3bc:	mov	x2, x7
   4c3c0:	mov	x0, x21
   4c3c4:	str	x6, [sp, #192]
   4c3c8:	bl	bf00 <mpfr_div_ui2@plt>
   4c3cc:	ldr	x0, [sp, #128]
   4c3d0:	mov	x2, x26
   4c3d4:	mov	x1, x25
   4c3d8:	mov	w3, #0x0                   	// #0
   4c3dc:	add	x7, x0, #0x3
   4c3e0:	mov	x0, x25
   4c3e4:	str	x7, [sp, #184]
   4c3e8:	bl	c230 <mpfr_add@plt>
   4c3ec:	mov	x1, x25
   4c3f0:	mov	x2, x21
   4c3f4:	mov	x0, x25
   4c3f8:	mov	w3, #0x0                   	// #0
   4c3fc:	bl	c230 <mpfr_add@plt>
   4c400:	ldr	x0, [sp, #368]
   4c404:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   4c408:	ldp	x7, x6, [sp, #184]
   4c40c:	cmp	x0, x1
   4c410:	b.eq	4c490 <mpfr_ai@@Base+0x1368>  // b.none
   4c414:	ldr	x1, [sp, #336]
   4c418:	add	x0, x0, x22
   4c41c:	add	x0, x0, #0x2
   4c420:	cmp	x0, x1
   4c424:	cset	w1, lt  // lt = tstop
   4c428:	ldr	x0, [sp, #400]
   4c42c:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   4c430:	cmp	x0, x2
   4c434:	b.eq	4c498 <mpfr_ai@@Base+0x1370>  // b.none
   4c438:	ldr	x2, [sp, #336]
   4c43c:	add	x0, x22, x0
   4c440:	add	x0, x0, #0x2
   4c444:	cmp	x0, x2
   4c448:	cset	w0, lt  // lt = tstop
   4c44c:	tst	w1, w0
   4c450:	b.eq	4c488 <mpfr_ai@@Base+0x1360>  // b.none
   4c454:	ldr	x0, [sp, #128]
   4c458:	add	x1, x0, #0x4
   4c45c:	ldr	x0, [sp, #176]
   4c460:	mul	x1, x1, x7
   4c464:	cmp	x0, x1, lsr #1
   4c468:	b.hi	4c488 <mpfr_ai@@Base+0x1360>  // b.pmore
   4c46c:	cmp	x7, #0x1
   4c470:	b.eq	4c55c <mpfr_ai@@Base+0x1434>  // b.none
   4c474:	b.hi	4c4a0 <mpfr_ai@@Base+0x1378>  // b.pmore
   4c478:	adrp	x2, 5c000 <mpfr_bases@@Base+0x22a8>
   4c47c:	mov	w1, #0xf0                  	// #240
   4c480:	add	x2, x2, #0x2b
   4c484:	b	4b484 <mpfr_ai@@Base+0x35c>
   4c488:	str	x7, [sp, #128]
   4c48c:	b	4c358 <mpfr_ai@@Base+0x1230>
   4c490:	mov	w1, #0x1                   	// #1
   4c494:	b	4c428 <mpfr_ai@@Base+0x1300>
   4c498:	mov	w0, #0x1                   	// #1
   4c49c:	b	4c44c <mpfr_ai@@Base+0x1324>
   4c4a0:	clz	x0, x6
   4c4a4:	mov	w4, #0x44                  	// #68
   4c4a8:	sub	w4, w4, w0
   4c4ac:	sxtw	x0, w4
   4c4b0:	ldr	x2, [sp, #160]
   4c4b4:	ldr	x1, [sp, #336]
   4c4b8:	sub	x4, x2, x1
   4c4bc:	add	x4, x4, x0
   4c4c0:	cmp	x19, x4
   4c4c4:	b.le	4c710 <mpfr_ai@@Base+0x15e8>
   4c4c8:	add	x0, x22, x4
   4c4cc:	sub	x2, x19, x4
   4c4d0:	cmp	x19, x0
   4c4d4:	sub	x2, x2, #0x1
   4c4d8:	csel	x19, x2, x22, le
   4c4dc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4c4e0:	cmp	x1, x0
   4c4e4:	b.le	4c52c <mpfr_ai@@Base+0x1404>
   4c4e8:	ldr	w0, [sp, #136]
   4c4ec:	mov	x2, x19
   4c4f0:	ldr	x1, [sp, #320]
   4c4f4:	cmp	w0, #0x0
   4c4f8:	ldr	x0, [sp, #96]
   4c4fc:	sub	x1, x1, #0x1
   4c500:	str	x6, [sp, #128]
   4c504:	asr	x1, x1, #6
   4c508:	stp	x7, x4, [sp, #176]
   4c50c:	add	x1, x1, #0x1
   4c510:	ldr	x3, [x0]
   4c514:	ldr	x0, [sp, #344]
   4c518:	cinc	x3, x3, eq  // eq = none
   4c51c:	bl	c400 <mpfr_round_p@plt>
   4c520:	ldr	x6, [sp, #128]
   4c524:	ldp	x7, x4, [sp, #176]
   4c528:	cbnz	w0, 4c630 <mpfr_ai@@Base+0x1508>
   4c52c:	cbnz	x19, 4c594 <mpfr_ai@@Base+0x146c>
   4c530:	ldr	x0, [sp, #112]
   4c534:	add	x1, x22, #0x5
   4c538:	cmp	x7, #0x1
   4c53c:	lsl	x0, x0, #1
   4c540:	str	x0, [sp, #112]
   4c544:	b.eq	4c58c <mpfr_ai@@Base+0x1464>  // b.none
   4c548:	b.hi	4c564 <mpfr_ai@@Base+0x143c>  // b.pmore
   4c54c:	adrp	x2, 5c000 <mpfr_bases@@Base+0x22a8>
   4c550:	mov	w1, #0x109                 	// #265
   4c554:	add	x2, x2, #0x2b
   4c558:	b	4b484 <mpfr_ai@@Base+0x35c>
   4c55c:	mov	x0, #0x4                   	// #4
   4c560:	b	4c4b0 <mpfr_ai@@Base+0x1388>
   4c564:	clz	x0, x6
   4c568:	mov	w6, #0x40                  	// #64
   4c56c:	sub	w6, w6, w0
   4c570:	sxtw	x6, w6
   4c574:	ldr	x2, [sp, #112]
   4c578:	add	x6, x1, x6
   4c57c:	ldr	x0, [sp, #160]
   4c580:	add	x19, x0, x2
   4c584:	add	x19, x19, x6
   4c588:	b	4c1ec <mpfr_ai@@Base+0x10c4>
   4c58c:	mov	x6, #0x0                   	// #0
   4c590:	b	4c574 <mpfr_ai@@Base+0x144c>
   4c594:	cmp	x19, x22
   4c598:	b.ge	4c5a8 <mpfr_ai@@Base+0x1480>  // b.tcont
   4c59c:	add	x19, x22, x4
   4c5a0:	add	x19, x19, #0x1
   4c5a4:	b	4c1ec <mpfr_ai@@Base+0x10c4>
   4c5a8:	ldr	x1, [sp, #168]
   4c5ac:	mov	x0, #0xfffffffffffffeff    	// #-257
   4c5b0:	movk	x0, #0x7fff, lsl #48
   4c5b4:	sub	x0, x0, x22
   4c5b8:	cmp	x0, x1
   4c5bc:	b.ge	4c5d0 <mpfr_ai@@Base+0x14a8>  // b.tcont
   4c5c0:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   4c5c4:	mov	w1, #0x116                 	// #278
   4c5c8:	add	x2, x2, #0x519
   4c5cc:	b	4b484 <mpfr_ai@@Base+0x35c>
   4c5d0:	ldr	x0, [sp, #168]
   4c5d4:	cmp	x7, #0x1
   4c5d8:	add	x22, x22, x0
   4c5dc:	mov	x0, #0x2                   	// #2
   4c5e0:	sdiv	x1, x22, x0
   4c5e4:	str	x1, [sp, #168]
   4c5e8:	b.eq	4c610 <mpfr_ai@@Base+0x14e8>  // b.none
   4c5ec:	b.hi	4c600 <mpfr_ai@@Base+0x14d8>  // b.pmore
   4c5f0:	adrp	x2, 5c000 <mpfr_bases@@Base+0x22a8>
   4c5f4:	mov	w1, #0x11a                 	// #282
   4c5f8:	add	x2, x2, #0x2b
   4c5fc:	b	4b484 <mpfr_ai@@Base+0x35c>
   4c600:	clz	x6, x6
   4c604:	mov	w0, #0x42                  	// #66
   4c608:	sub	w0, w0, w6
   4c60c:	sxtw	x0, w0
   4c610:	ldr	x1, [sp, #336]
   4c614:	mov	x19, #0x5                   	// #5
   4c618:	add	x0, x22, x0
   4c61c:	sub	x19, x19, x1
   4c620:	ldr	x1, [sp, #160]
   4c624:	add	x0, x0, x1
   4c628:	add	x19, x19, x0
   4c62c:	b	4c1ec <mpfr_ai@@Base+0x10c4>
   4c630:	ldr	w2, [sp, #136]
   4c634:	mov	x1, x25
   4c638:	ldr	w3, [sp, #328]
   4c63c:	ldr	x0, [sp, #96]
   4c640:	bl	c730 <mpfr_set4@plt>
   4c644:	mov	w3, w0
   4c648:	mov	x0, x26
   4c64c:	str	w3, [sp, #112]
   4c650:	bl	c0f0 <mpfr_clear@plt>
   4c654:	mov	x0, x21
   4c658:	bl	c0f0 <mpfr_clear@plt>
   4c65c:	mov	x0, x23
   4c660:	bl	c0f0 <mpfr_clear@plt>
   4c664:	mov	x0, x27
   4c668:	bl	c0f0 <mpfr_clear@plt>
   4c66c:	mov	x0, x24
   4c670:	bl	c0f0 <mpfr_clear@plt>
   4c674:	mov	x0, x25
   4c678:	bl	c0f0 <mpfr_clear@plt>
   4c67c:	ldr	x0, [sp, #104]
   4c680:	bl	c0f0 <mpfr_clear@plt>
   4c684:	ldr	x0, [sp, #120]
   4c688:	bl	c0f0 <mpfr_clear@plt>
   4c68c:	ldr	w2, [sp, #140]
   4c690:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4c694:	ldr	x1, [x0, #2592]
   4c698:	add	x0, x0, #0xa20
   4c69c:	blr	x1
   4c6a0:	add	x1, x20, x0
   4c6a4:	str	w2, [x20, x0]
   4c6a8:	ldr	w3, [sp, #112]
   4c6ac:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4c6b0:	ldr	x2, [x0, #2528]
   4c6b4:	add	x0, x0, #0x9e0
   4c6b8:	blr	x2
   4c6bc:	ldr	x2, [sp, #152]
   4c6c0:	str	x2, [x20, x0]
   4c6c4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4c6c8:	ldr	x2, [x0, #2560]
   4c6cc:	add	x0, x0, #0xa00
   4c6d0:	blr	x2
   4c6d4:	ldr	x2, [sp, #144]
   4c6d8:	str	x2, [x20, x0]
   4c6dc:	ldr	x0, [sp, #96]
   4c6e0:	ldr	x2, [sp, #152]
   4c6e4:	ldr	x0, [x0, #16]
   4c6e8:	cmp	x2, x0
   4c6ec:	b.gt	4bfb8 <mpfr_ai@@Base+0xe90>
   4c6f0:	ldr	x2, [sp, #144]
   4c6f4:	cmp	x2, x0
   4c6f8:	b.lt	4bfb8 <mpfr_ai@@Base+0xe90>  // b.tstop
   4c6fc:	cbz	w3, 4b1a4 <mpfr_ai@@Base+0x7c>
   4c700:	ldr	w0, [sp, #140]
   4c704:	orr	w0, w0, #0x8
   4c708:	str	w0, [x1]
   4c70c:	b	4b1a4 <mpfr_ai@@Base+0x7c>
   4c710:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4c714:	mov	x19, #0x0                   	// #0
   4c718:	cmp	x1, x0
   4c71c:	b.gt	4c4e8 <mpfr_ai@@Base+0x13c0>
   4c720:	b	4c530 <mpfr_ai@@Base+0x1408>

000000000004c724 <mpfr_div_ui2@@Base>:
   4c724:	stp	x29, x30, [sp, #-48]!
   4c728:	mov	x29, sp
   4c72c:	stp	x19, x20, [sp, #16]
   4c730:	mov	x19, x3
   4c734:	ldr	w3, [x1, #8]
   4c738:	stp	x21, x22, [sp, #32]
   4c73c:	mov	x22, x2
   4c740:	mov	x20, x0
   4c744:	mov	w21, w4
   4c748:	mov	w2, w4
   4c74c:	bl	c730 <mpfr_set4@plt>
   4c750:	umulh	x0, x19, x22
   4c754:	cbnz	x0, 4c77c <mpfr_div_ui2@@Base+0x58>
   4c758:	mul	x19, x19, x22
   4c75c:	mov	w3, w21
   4c760:	mov	x2, x19
   4c764:	mov	x1, x20
   4c768:	mov	x0, x20
   4c76c:	ldp	x19, x20, [sp, #16]
   4c770:	ldp	x21, x22, [sp, #32]
   4c774:	ldp	x29, x30, [sp], #48
   4c778:	b	cd00 <mpfr_div_ui@plt>
   4c77c:	mov	w3, w21
   4c780:	mov	x2, x22
   4c784:	mov	x1, x20
   4c788:	mov	x0, x20
   4c78c:	bl	cd00 <mpfr_div_ui@plt>
   4c790:	b	4c75c <mpfr_div_ui2@@Base+0x38>

000000000004c794 <mpfr_gamma_one_and_two_third@@Base>:
   4c794:	stp	x29, x30, [sp, #-304]!
   4c798:	mov	x29, sp
   4c79c:	stp	x19, x20, [sp, #16]
   4c7a0:	add	x19, x2, #0x4
   4c7a4:	add	x20, sp, #0xd0
   4c7a8:	stp	x21, x22, [sp, #32]
   4c7ac:	add	x22, sp, #0x90
   4c7b0:	mov	x21, x2
   4c7b4:	stp	x23, x24, [sp, #48]
   4c7b8:	mov	x24, x1
   4c7bc:	mov	x1, x19
   4c7c0:	stp	x25, x26, [sp, #64]
   4c7c4:	stp	x27, x28, [sp, #80]
   4c7c8:	add	x28, sp, #0xf0
   4c7cc:	str	x0, [sp, #104]
   4c7d0:	mov	x0, x22
   4c7d4:	bl	cb10 <mpfr_init2@plt>
   4c7d8:	mov	x1, x19
   4c7dc:	mov	x0, x24
   4c7e0:	bl	bf50 <mpfr_set_prec@plt>
   4c7e4:	add	x19, sp, #0xb0
   4c7e8:	add	x0, x21, #0xd
   4c7ec:	str	x0, [sp, #96]
   4c7f0:	mov	x1, x0
   4c7f4:	mov	x0, x19
   4c7f8:	bl	cb10 <mpfr_init2@plt>
   4c7fc:	add	x1, x21, #0xd
   4c800:	mov	x0, x20
   4c804:	bl	cb10 <mpfr_init2@plt>
   4c808:	add	x1, x21, #0x8
   4c80c:	mov	x0, x28
   4c810:	bl	cb10 <mpfr_init2@plt>
   4c814:	ldr	x0, [sp, #104]
   4c818:	add	x1, x21, #0x6
   4c81c:	bl	bf50 <mpfr_set_prec@plt>
   4c820:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4c824:	ldr	x1, [x0, #2640]
   4c828:	add	x0, x0, #0xa50
   4c82c:	blr	x1
   4c830:	mov	w2, #0x0                   	// #0
   4c834:	mrs	x1, tpidr_el0
   4c838:	str	x1, [sp, #120]
   4c83c:	add	x1, x1, x0
   4c840:	mov	x0, x19
   4c844:	bl	c410 <mpfr_cache@plt>
   4c848:	mov	x1, x19
   4c84c:	mov	w2, #0x0                   	// #0
   4c850:	mov	x0, x19
   4c854:	bl	c490 <mpfr_sqr@plt>
   4c858:	mov	x1, x19
   4c85c:	mov	w2, #0x0                   	// #0
   4c860:	mov	x0, x19
   4c864:	bl	c490 <mpfr_sqr@plt>
   4c868:	mov	x1, x19
   4c86c:	mov	x0, x19
   4c870:	mov	w3, #0x0                   	// #0
   4c874:	mov	x2, #0xc                   	// #12
   4c878:	bl	bad0 <mpfr_mul_ui@plt>
   4c87c:	add	x1, x21, #0x17
   4c880:	add	x21, x21, #0x20
   4c884:	cmp	x21, #0x9
   4c888:	b.ls	4ca88 <mpfr_gamma_one_and_two_third@@Base+0x2f4>  // b.plast
   4c88c:	ldr	x0, [sp, #96]
   4c890:	cmn	x0, #0x9
   4c894:	b.ge	4c8b0 <mpfr_gamma_one_and_two_third@@Base+0x11c>  // b.tcont
   4c898:	adrp	x2, 5c000 <mpfr_bases@@Base+0x22a8>
   4c89c:	adrp	x0, 5c000 <mpfr_bases@@Base+0x22a8>
   4c8a0:	add	x2, x2, #0x33
   4c8a4:	add	x0, x0, #0x47
   4c8a8:	mov	w1, #0x69                  	// #105
   4c8ac:	bl	cbd0 <mpfr_assert_fail@plt>
   4c8b0:	ldr	x2, [sp, #96]
   4c8b4:	mov	x0, #0xa                   	// #10
   4c8b8:	sdiv	x0, x2, x0
   4c8bc:	mov	w2, #0x40                  	// #64
   4c8c0:	add	x0, x0, #0x1
   4c8c4:	clz	x0, x0
   4c8c8:	sub	w0, w2, w0
   4c8cc:	sxtw	x0, w0
   4c8d0:	add	x21, x1, x0
   4c8d4:	add	x27, sp, #0x110
   4c8d8:	mov	x1, x21
   4c8dc:	mov	x0, x27
   4c8e0:	bl	cb10 <mpfr_init2@plt>
   4c8e4:	mov	x25, #0x3                   	// #3
   4c8e8:	mov	x1, x21
   4c8ec:	mov	x0, x20
   4c8f0:	bl	bf50 <mpfr_set_prec@plt>
   4c8f4:	mov	x21, #0x2                   	// #2
   4c8f8:	mov	w3, #0x0                   	// #0
   4c8fc:	mov	x2, #0x0                   	// #0
   4c900:	mov	x1, #0x1                   	// #1
   4c904:	mov	x0, x27
   4c908:	bl	c680 <mpfr_set_ui_2exp@plt>
   4c90c:	mov	x23, #0x1                   	// #1
   4c910:	ldr	w3, [sp, #280]
   4c914:	mov	x1, x27
   4c918:	mov	x0, x20
   4c91c:	mov	w2, #0x0                   	// #0
   4c920:	bl	c730 <mpfr_set4@plt>
   4c924:	ldr	w3, [sp, #280]
   4c928:	sub	x6, x21, #0x1
   4c92c:	add	x5, x21, #0x1
   4c930:	add	x0, x21, #0x3
   4c934:	mov	w2, #0x0                   	// #0
   4c938:	mov	x1, x27
   4c93c:	str	x0, [sp, #112]
   4c940:	mov	x0, x27
   4c944:	stp	x5, x6, [sp, #128]
   4c948:	bl	c730 <mpfr_set4@plt>
   4c94c:	add	x26, x21, #0x2
   4c950:	ldp	x5, x6, [sp, #128]
   4c954:	umulh	x0, x21, x6
   4c958:	mul	x2, x6, x21
   4c95c:	cbz	x0, 4c97c <mpfr_gamma_one_and_two_third@@Base+0x1e8>
   4c960:	mov	x2, x6
   4c964:	mov	x1, x27
   4c968:	mov	x0, x27
   4c96c:	mov	w3, #0x0                   	// #0
   4c970:	bl	bad0 <mpfr_mul_ui@plt>
   4c974:	ldr	x5, [sp, #128]
   4c978:	mov	x2, x21
   4c97c:	umulh	x0, x5, x2
   4c980:	cbnz	x0, 4ca90 <mpfr_gamma_one_and_two_third@@Base+0x2fc>
   4c984:	mul	x5, x5, x2
   4c988:	umulh	x0, x26, x5
   4c98c:	cbnz	x0, 4caac <mpfr_gamma_one_and_two_third@@Base+0x318>
   4c990:	mul	x26, x26, x5
   4c994:	add	x0, x21, #0x3
   4c998:	umulh	x0, x0, x26
   4c99c:	cbnz	x0, 4cac4 <mpfr_gamma_one_and_two_third@@Base+0x330>
   4c9a0:	add	x0, x21, #0x3
   4c9a4:	mul	x0, x0, x26
   4c9a8:	str	x0, [sp, #112]
   4c9ac:	ldr	x2, [sp, #112]
   4c9b0:	mov	x1, x27
   4c9b4:	mov	w3, #0x0                   	// #0
   4c9b8:	mov	x0, x27
   4c9bc:	sub	x26, x25, #0x1
   4c9c0:	bl	bad0 <mpfr_mul_ui@plt>
   4c9c4:	ldr	w3, [sp, #280]
   4c9c8:	sub	x5, x25, #0x2
   4c9cc:	mov	w2, #0x0                   	// #0
   4c9d0:	mov	x1, x27
   4c9d4:	mov	x0, x27
   4c9d8:	str	x5, [sp, #112]
   4c9dc:	bl	c730 <mpfr_set4@plt>
   4c9e0:	umulh	x0, x23, x23
   4c9e4:	mul	x2, x23, x23
   4c9e8:	ldr	x5, [sp, #112]
   4c9ec:	cbz	x0, 4ca0c <mpfr_gamma_one_and_two_third@@Base+0x278>
   4c9f0:	mov	x2, x23
   4c9f4:	mov	x1, x27
   4c9f8:	mov	x0, x27
   4c9fc:	mov	w3, #0x0                   	// #0
   4ca00:	bl	cd00 <mpfr_div_ui@plt>
   4ca04:	ldr	x5, [sp, #112]
   4ca08:	mov	x2, x23
   4ca0c:	umulh	x0, x5, x2
   4ca10:	cbnz	x0, 4cadc <mpfr_gamma_one_and_two_third@@Base+0x348>
   4ca14:	mul	x5, x5, x2
   4ca18:	umulh	x0, x26, x5
   4ca1c:	cbnz	x0, 4caf8 <mpfr_gamma_one_and_two_third@@Base+0x364>
   4ca20:	mul	x26, x26, x5
   4ca24:	umulh	x0, x25, x26
   4ca28:	mul	x2, x26, x25
   4ca2c:	cbz	x0, 4ca48 <mpfr_gamma_one_and_two_third@@Base+0x2b4>
   4ca30:	mov	x2, x26
   4ca34:	mov	x1, x27
   4ca38:	mov	x0, x27
   4ca3c:	mov	w3, #0x0                   	// #0
   4ca40:	bl	cd00 <mpfr_div_ui@plt>
   4ca44:	mov	x2, x25
   4ca48:	mov	x0, #0x50                  	// #80
   4ca4c:	umulh	x0, x2, x0
   4ca50:	cbnz	x0, 4cb10 <mpfr_gamma_one_and_two_third@@Base+0x37c>
   4ca54:	mov	x0, #0x50                  	// #80
   4ca58:	mul	x2, x2, x0
   4ca5c:	mov	x0, #0xa0                  	// #160
   4ca60:	umulh	x0, x2, x0
   4ca64:	cbz	x0, 4cb24 <mpfr_gamma_one_and_two_third@@Base+0x390>
   4ca68:	mov	x1, x27
   4ca6c:	mov	x0, x27
   4ca70:	mov	w3, #0x0                   	// #0
   4ca74:	bl	cd00 <mpfr_div_ui@plt>
   4ca78:	mov	x2, #0xa0                  	// #160
   4ca7c:	mov	x0, #0xa0                  	// #160
   4ca80:	mul	x2, x2, x0
   4ca84:	b	4cb48 <mpfr_gamma_one_and_two_third@@Base+0x3b4>
   4ca88:	mov	x0, #0x0                   	// #0
   4ca8c:	b	4c8d0 <mpfr_gamma_one_and_two_third@@Base+0x13c>
   4ca90:	mov	x1, x27
   4ca94:	mov	x0, x27
   4ca98:	mov	w3, #0x0                   	// #0
   4ca9c:	str	x5, [sp, #128]
   4caa0:	bl	bad0 <mpfr_mul_ui@plt>
   4caa4:	ldr	x5, [sp, #128]
   4caa8:	b	4c988 <mpfr_gamma_one_and_two_third@@Base+0x1f4>
   4caac:	mov	x2, x5
   4cab0:	mov	x1, x27
   4cab4:	mov	x0, x27
   4cab8:	mov	w3, #0x0                   	// #0
   4cabc:	bl	bad0 <mpfr_mul_ui@plt>
   4cac0:	b	4c994 <mpfr_gamma_one_and_two_third@@Base+0x200>
   4cac4:	mov	x2, x26
   4cac8:	mov	x1, x27
   4cacc:	mov	x0, x27
   4cad0:	mov	w3, #0x0                   	// #0
   4cad4:	bl	bad0 <mpfr_mul_ui@plt>
   4cad8:	b	4c9ac <mpfr_gamma_one_and_two_third@@Base+0x218>
   4cadc:	mov	x1, x27
   4cae0:	mov	x0, x27
   4cae4:	mov	w3, #0x0                   	// #0
   4cae8:	str	x5, [sp, #112]
   4caec:	bl	cd00 <mpfr_div_ui@plt>
   4caf0:	ldr	x5, [sp, #112]
   4caf4:	b	4ca18 <mpfr_gamma_one_and_two_third@@Base+0x284>
   4caf8:	mov	x2, x5
   4cafc:	mov	x1, x27
   4cb00:	mov	x0, x27
   4cb04:	mov	w3, #0x0                   	// #0
   4cb08:	bl	cd00 <mpfr_div_ui@plt>
   4cb0c:	b	4ca24 <mpfr_gamma_one_and_two_third@@Base+0x290>
   4cb10:	mov	x1, x27
   4cb14:	mov	x0, x27
   4cb18:	mov	w3, #0x0                   	// #0
   4cb1c:	bl	cd00 <mpfr_div_ui@plt>
   4cb20:	mov	x2, #0x50                  	// #80
   4cb24:	mov	x0, #0xa0                  	// #160
   4cb28:	mul	x2, x2, x0
   4cb2c:	umulh	x0, x2, x0
   4cb30:	cbz	x0, 4ca7c <mpfr_gamma_one_and_two_third@@Base+0x2e8>
   4cb34:	mov	x1, x27
   4cb38:	mov	x0, x27
   4cb3c:	mov	w3, #0x0                   	// #0
   4cb40:	bl	cd00 <mpfr_div_ui@plt>
   4cb44:	mov	x2, #0xa0                  	// #160
   4cb48:	mov	x1, x27
   4cb4c:	mov	w3, #0x0                   	// #0
   4cb50:	mov	x0, x27
   4cb54:	bl	cd00 <mpfr_div_ui@plt>
   4cb58:	ldr	w0, [sp, #280]
   4cb5c:	mov	x1, x20
   4cb60:	mov	x2, x27
   4cb64:	mov	w3, #0x0                   	// #0
   4cb68:	neg	w0, w0
   4cb6c:	str	w0, [sp, #280]
   4cb70:	mov	x0, x20
   4cb74:	bl	c230 <mpfr_add@plt>
   4cb78:	ldr	x0, [sp, #96]
   4cb7c:	add	x23, x23, #0x1
   4cb80:	ldr	x1, [sp, #288]
   4cb84:	add	x21, x21, #0x6
   4cb88:	add	x25, x25, #0x3
   4cb8c:	add	x1, x0, x1
   4cb90:	ldr	x0, [sp, #224]
   4cb94:	add	x0, x0, #0x7
   4cb98:	cmp	x1, x0
   4cb9c:	b.gt	4c924 <mpfr_gamma_one_and_two_third@@Base+0x190>
   4cba0:	mov	x0, x27
   4cba4:	bl	c0f0 <mpfr_clear@plt>
   4cba8:	mov	x2, x20
   4cbac:	mov	x1, x19
   4cbb0:	mov	x0, x19
   4cbb4:	mov	w3, #0x0                   	// #0
   4cbb8:	bl	bdd0 <mpfr_mul@plt>
   4cbbc:	mov	w3, #0x0                   	// #0
   4cbc0:	mov	x0, x20
   4cbc4:	mov	x2, #0x0                   	// #0
   4cbc8:	mov	x1, #0xa                   	// #10
   4cbcc:	bl	c680 <mpfr_set_ui_2exp@plt>
   4cbd0:	mov	x1, x20
   4cbd4:	mov	x0, x20
   4cbd8:	mov	w2, #0x0                   	// #0
   4cbdc:	bl	c9c0 <mpfr_sqrt@plt>
   4cbe0:	mov	w3, #0x0                   	// #0
   4cbe4:	mov	x2, x20
   4cbe8:	mov	x1, x19
   4cbec:	mov	x0, x19
   4cbf0:	bl	c6b0 <mpfr_div@plt>
   4cbf4:	mov	x1, x19
   4cbf8:	mov	x0, x28
   4cbfc:	mov	w2, #0x0                   	// #0
   4cc00:	bl	c9c0 <mpfr_sqrt@plt>
   4cc04:	ldr	x0, [sp, #104]
   4cc08:	mov	x1, x28
   4cc0c:	mov	w2, #0x0                   	// #0
   4cc10:	bl	cdc0 <mpfr_cbrt@plt>
   4cc14:	mov	x0, x19
   4cc18:	bl	c0f0 <mpfr_clear@plt>
   4cc1c:	mov	x0, x20
   4cc20:	bl	c0f0 <mpfr_clear@plt>
   4cc24:	mov	x0, x28
   4cc28:	bl	c0f0 <mpfr_clear@plt>
   4cc2c:	mov	w3, #0x0                   	// #0
   4cc30:	mov	x0, x22
   4cc34:	mov	x2, #0x0                   	// #0
   4cc38:	mov	x1, #0x3                   	// #3
   4cc3c:	bl	c680 <mpfr_set_ui_2exp@plt>
   4cc40:	mov	x1, x22
   4cc44:	mov	x0, x22
   4cc48:	mov	w2, #0x0                   	// #0
   4cc4c:	bl	c9c0 <mpfr_sqrt@plt>
   4cc50:	ldr	x1, [sp, #104]
   4cc54:	mov	x2, x22
   4cc58:	mov	w3, #0x0                   	// #0
   4cc5c:	mov	x0, x22
   4cc60:	bl	bdd0 <mpfr_mul@plt>
   4cc64:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4cc68:	ldr	x1, [x0, #2640]
   4cc6c:	add	x0, x0, #0xa50
   4cc70:	blr	x1
   4cc74:	mov	w2, #0x0                   	// #0
   4cc78:	ldr	x1, [sp, #120]
   4cc7c:	add	x1, x1, x0
   4cc80:	mov	x0, x24
   4cc84:	bl	c410 <mpfr_cache@plt>
   4cc88:	mov	x1, x24
   4cc8c:	mov	x0, x24
   4cc90:	mov	w3, #0x0                   	// #0
   4cc94:	mov	x2, #0x1                   	// #1
   4cc98:	bl	c350 <mpfr_mul_2ui@plt>
   4cc9c:	mov	x2, x22
   4cca0:	mov	x1, x24
   4cca4:	mov	w3, #0x0                   	// #0
   4cca8:	mov	x0, x24
   4ccac:	bl	c6b0 <mpfr_div@plt>
   4ccb0:	mov	x0, x22
   4ccb4:	bl	c0f0 <mpfr_clear@plt>
   4ccb8:	ldp	x19, x20, [sp, #16]
   4ccbc:	ldp	x21, x22, [sp, #32]
   4ccc0:	ldp	x23, x24, [sp, #48]
   4ccc4:	ldp	x25, x26, [sp, #64]
   4ccc8:	ldp	x27, x28, [sp, #80]
   4cccc:	ldp	x29, x30, [sp], #304
   4ccd0:	ret

000000000004ccd4 <mpfr_grandom@@Base>:
   4ccd4:	stp	x29, x30, [sp, #-432]!
   4ccd8:	mov	x29, sp
   4ccdc:	stp	x19, x20, [sp, #16]
   4cce0:	stp	x21, x22, [sp, #32]
   4cce4:	stp	x23, x24, [sp, #48]
   4cce8:	stp	x25, x26, [sp, #64]
   4ccec:	stp	x27, x28, [sp, #80]
   4ccf0:	stp	x1, x2, [sp, #96]
   4ccf4:	str	x0, [sp, #128]
   4ccf8:	str	w3, [sp, #160]
   4ccfc:	ldr	x0, [x0]
   4cd00:	cbz	x1, 4cd10 <mpfr_grandom@@Base+0x3c>
   4cd04:	ldr	x1, [x1]
   4cd08:	cmp	x0, x1
   4cd0c:	csel	x0, x0, x1, ge  // ge = tcont
   4cd10:	add	x0, x0, #0xb
   4cd14:	add	x19, sp, #0xd0
   4cd18:	add	x20, sp, #0xe0
   4cd1c:	str	x0, [sp, #120]
   4cd20:	mov	x0, x19
   4cd24:	bl	c010 <mpfr_mpz_init@plt>
   4cd28:	mov	x0, x20
   4cd2c:	add	x26, sp, #0xb0
   4cd30:	bl	c010 <mpfr_mpz_init@plt>
   4cd34:	add	x25, sp, #0x120
   4cd38:	mov	x0, x26
   4cd3c:	bl	c010 <mpfr_mpz_init@plt>
   4cd40:	add	x0, sp, #0xc0
   4cd44:	str	x0, [sp, #112]
   4cd48:	bl	c010 <mpfr_mpz_init@plt>
   4cd4c:	add	x21, sp, #0x100
   4cd50:	add	x0, sp, #0xf0
   4cd54:	str	x0, [sp, #136]
   4cd58:	bl	c010 <mpfr_mpz_init@plt>
   4cd5c:	add	x22, sp, #0x110
   4cd60:	mov	x0, x25
   4cd64:	bl	c010 <mpfr_mpz_init@plt>
   4cd68:	mov	x0, x21
   4cd6c:	bl	c010 <mpfr_mpz_init@plt>
   4cd70:	mov	x0, x22
   4cd74:	add	x28, sp, #0x130
   4cd78:	bl	c010 <mpfr_mpz_init@plt>
   4cd7c:	add	x23, sp, #0x150
   4cd80:	mov	x0, x28
   4cd84:	mov	x1, #0x1                   	// #1
   4cd88:	bl	cb10 <mpfr_init2@plt>
   4cd8c:	add	x27, sp, #0x170
   4cd90:	mov	x0, x23
   4cd94:	mov	x1, #0x1                   	// #1
   4cd98:	bl	cb10 <mpfr_init2@plt>
   4cd9c:	mov	x0, x27
   4cda0:	mov	x1, #0x1                   	// #1
   4cda4:	bl	cb10 <mpfr_init2@plt>
   4cda8:	ldr	x0, [sp, #96]
   4cdac:	cbz	x0, 4cdbc <mpfr_grandom@@Base+0xe8>
   4cdb0:	add	x0, sp, #0x190
   4cdb4:	mov	x1, #0x1                   	// #1
   4cdb8:	bl	cb10 <mpfr_init2@plt>
   4cdbc:	mov	x0, x19
   4cdc0:	mov	x1, #0x0                   	// #0
   4cdc4:	bl	bd30 <__gmpz_set_ui@plt>
   4cdc8:	mov	x0, x20
   4cdcc:	mov	x1, #0x0                   	// #0
   4cdd0:	bl	bd30 <__gmpz_set_ui@plt>
   4cdd4:	ldr	x0, [sp, #120]
   4cdd8:	lsl	x0, x0, #1
   4cddc:	str	x0, [sp, #144]
   4cde0:	ldr	x1, [sp, #104]
   4cde4:	mov	x0, x19
   4cde8:	ldr	x2, [sp, #120]
   4cdec:	bl	cda0 <__gmpz_urandomb@plt>
   4cdf0:	ldr	x1, [sp, #104]
   4cdf4:	mov	x0, x20
   4cdf8:	ldr	x2, [sp, #120]
   4cdfc:	bl	cda0 <__gmpz_urandomb@plt>
   4ce00:	mov	x2, x19
   4ce04:	mov	x1, x19
   4ce08:	mov	x0, x21
   4ce0c:	bl	c070 <__gmpz_mul@plt>
   4ce10:	mov	x2, x20
   4ce14:	mov	x1, x20
   4ce18:	mov	x0, x22
   4ce1c:	bl	c070 <__gmpz_mul@plt>
   4ce20:	mov	x2, x22
   4ce24:	mov	x1, x21
   4ce28:	mov	x0, x25
   4ce2c:	bl	ca50 <__gmpz_add@plt>
   4ce30:	mov	w1, #0x2                   	// #2
   4ce34:	mov	x0, x25
   4ce38:	bl	cbf0 <__gmpz_sizeinbase@plt>
   4ce3c:	ldr	x1, [sp, #144]
   4ce40:	cmp	x0, x1
   4ce44:	b.hi	4cde0 <mpfr_grandom@@Base+0x10c>  // b.pmore
   4ce48:	ldr	x24, [sp, #120]
   4ce4c:	mov	x1, x19
   4ce50:	mov	x0, x21
   4ce54:	mov	x2, #0x1                   	// #1
   4ce58:	bl	c3f0 <__gmpz_add_ui@plt>
   4ce5c:	mov	x1, x20
   4ce60:	mov	x0, x22
   4ce64:	mov	x2, #0x1                   	// #1
   4ce68:	bl	c3f0 <__gmpz_add_ui@plt>
   4ce6c:	mov	x2, x21
   4ce70:	mov	x1, x21
   4ce74:	mov	x0, x21
   4ce78:	bl	c070 <__gmpz_mul@plt>
   4ce7c:	mov	x2, x22
   4ce80:	mov	x1, x22
   4ce84:	mov	x0, x22
   4ce88:	bl	c070 <__gmpz_mul@plt>
   4ce8c:	mov	x2, x22
   4ce90:	mov	x1, x21
   4ce94:	mov	x0, x25
   4ce98:	bl	ca50 <__gmpz_add@plt>
   4ce9c:	mov	x0, x25
   4cea0:	mov	w1, #0x2                   	// #2
   4cea4:	bl	cbf0 <__gmpz_sizeinbase@plt>
   4cea8:	cmp	x0, x24, lsl #1
   4ceac:	lsl	x3, x24, #1
   4ceb0:	b.ls	4cedc <mpfr_grandom@@Base+0x208>  // b.plast
   4ceb4:	add	x1, x3, #0x1
   4ceb8:	cmp	x0, x1
   4cebc:	b.ne	4d0cc <mpfr_grandom@@Base+0x3f8>  // b.any
   4cec0:	mov	x0, x25
   4cec4:	mov	x1, #0x0                   	// #0
   4cec8:	str	x3, [sp, #152]
   4cecc:	bl	bb10 <__gmpz_scan1@plt>
   4ced0:	ldr	x3, [sp, #152]
   4ced4:	cmp	x0, x3
   4ced8:	b.ne	4d0cc <mpfr_grandom@@Base+0x3f8>  // b.any
   4cedc:	mov	x2, x19
   4cee0:	mov	x1, x19
   4cee4:	mov	x0, x21
   4cee8:	bl	c070 <__gmpz_mul@plt>
   4ceec:	mov	x2, x20
   4cef0:	mov	x1, x20
   4cef4:	mov	x0, x22
   4cef8:	bl	c070 <__gmpz_mul@plt>
   4cefc:	mov	x2, x22
   4cf00:	mov	x1, x21
   4cf04:	mov	x0, x25
   4cf08:	bl	ca50 <__gmpz_add@plt>
   4cf0c:	ldr	x1, [sp, #104]
   4cf10:	mov	x2, #0x2                   	// #2
   4cf14:	mov	x0, x26
   4cf18:	bl	cda0 <__gmpz_urandomb@plt>
   4cf1c:	mov	x1, #0x0                   	// #0
   4cf20:	mov	x0, x26
   4cf24:	bl	c060 <__gmpz_tstbit@plt>
   4cf28:	str	w0, [sp, #152]
   4cf2c:	mov	x1, #0x1                   	// #1
   4cf30:	mov	x0, x26
   4cf34:	bl	c060 <__gmpz_tstbit@plt>
   4cf38:	str	w0, [sp, #164]
   4cf3c:	add	x0, sp, #0x190
   4cf40:	str	x0, [sp, #120]
   4cf44:	lsl	x1, x24, #1
   4cf48:	mov	x0, x28
   4cf4c:	bl	bf50 <mpfr_set_prec@plt>
   4cf50:	mov	x1, x24
   4cf54:	mov	x0, x23
   4cf58:	bl	bf50 <mpfr_set_prec@plt>
   4cf5c:	mov	x1, x25
   4cf60:	mov	w2, #0x0                   	// #0
   4cf64:	mov	x0, x28
   4cf68:	bl	c2d0 <mpfr_set_z@plt>
   4cf6c:	mov	x0, #0xfffffffffffffffe    	// #-2
   4cf70:	mov	w3, #0x0                   	// #0
   4cf74:	mov	x1, x28
   4cf78:	mul	x2, x24, x0
   4cf7c:	mov	x0, x28
   4cf80:	bl	bc10 <mpfr_mul_2si@plt>
   4cf84:	mov	x1, x28
   4cf88:	mov	w2, #0x0                   	// #0
   4cf8c:	mov	x0, x23
   4cf90:	bl	c110 <mpfr_log@plt>
   4cf94:	mov	x1, x23
   4cf98:	mov	w2, #0x0                   	// #0
   4cf9c:	mov	x0, x23
   4cfa0:	bl	bdf0 <mpfr_neg@plt>
   4cfa4:	mov	x1, x23
   4cfa8:	mov	w3, #0x0                   	// #0
   4cfac:	mov	x2, #0x1                   	// #1
   4cfb0:	mov	x0, x23
   4cfb4:	bl	bc10 <mpfr_mul_2si@plt>
   4cfb8:	mov	w3, #0x0                   	// #0
   4cfbc:	mov	x2, x28
   4cfc0:	mov	x1, x23
   4cfc4:	mov	x0, x23
   4cfc8:	bl	c6b0 <mpfr_div@plt>
   4cfcc:	mov	w2, #0x0                   	// #0
   4cfd0:	mov	x1, x23
   4cfd4:	mov	x0, x23
   4cfd8:	bl	c9c0 <mpfr_sqrt@plt>
   4cfdc:	mov	x1, x24
   4cfe0:	mov	x0, x27
   4cfe4:	bl	bf50 <mpfr_set_prec@plt>
   4cfe8:	mov	x2, x19
   4cfec:	mov	x1, x23
   4cff0:	mov	w3, #0x0                   	// #0
   4cff4:	mov	x0, x27
   4cff8:	bl	c560 <mpfr_mul_z@plt>
   4cffc:	mov	x2, x24
   4d000:	mov	x1, x27
   4d004:	mov	x0, x27
   4d008:	mov	w3, #0x0                   	// #0
   4d00c:	bl	c980 <mpfr_div_2ui@plt>
   4d010:	ldr	w0, [sp, #152]
   4d014:	cbz	w0, 4d028 <mpfr_grandom@@Base+0x354>
   4d018:	mov	x1, x27
   4d01c:	mov	x0, x27
   4d020:	mov	w2, #0x0                   	// #0
   4d024:	bl	bdf0 <mpfr_neg@plt>
   4d028:	ldr	x0, [sp, #384]
   4d02c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   4d030:	cmp	x0, x1
   4d034:	b.gt	4d180 <mpfr_grandom@@Base+0x4ac>
   4d038:	mov	x1, x19
   4d03c:	mov	x0, x19
   4d040:	mov	x2, #0x20                  	// #32
   4d044:	bl	c290 <__gmpz_mul_2exp@plt>
   4d048:	mov	x1, x20
   4d04c:	mov	x0, x20
   4d050:	mov	x2, #0x20                  	// #32
   4d054:	bl	c290 <__gmpz_mul_2exp@plt>
   4d058:	ldr	x1, [sp, #104]
   4d05c:	mov	x0, x26
   4d060:	mov	x2, #0x20                  	// #32
   4d064:	add	x24, x24, #0x20
   4d068:	bl	cda0 <__gmpz_urandomb@plt>
   4d06c:	ldp	x1, x0, [sp, #104]
   4d070:	mov	x2, #0x20                  	// #32
   4d074:	bl	cda0 <__gmpz_urandomb@plt>
   4d078:	mov	x2, x26
   4d07c:	mov	x1, x19
   4d080:	mov	x0, x19
   4d084:	bl	ca50 <__gmpz_add@plt>
   4d088:	ldr	x2, [sp, #112]
   4d08c:	mov	x1, x20
   4d090:	mov	x0, x20
   4d094:	bl	ca50 <__gmpz_add@plt>
   4d098:	mov	x2, x19
   4d09c:	mov	x1, x19
   4d0a0:	mov	x0, x21
   4d0a4:	bl	c070 <__gmpz_mul@plt>
   4d0a8:	mov	x2, x20
   4d0ac:	mov	x1, x20
   4d0b0:	mov	x0, x22
   4d0b4:	bl	c070 <__gmpz_mul@plt>
   4d0b8:	mov	x2, x22
   4d0bc:	mov	x1, x21
   4d0c0:	mov	x0, x25
   4d0c4:	bl	ca50 <__gmpz_add@plt>
   4d0c8:	b	4cf44 <mpfr_grandom@@Base+0x270>
   4d0cc:	mov	x1, x19
   4d0d0:	mov	x0, x19
   4d0d4:	mov	x2, #0x20                  	// #32
   4d0d8:	str	x3, [sp, #152]
   4d0dc:	bl	c290 <__gmpz_mul_2exp@plt>
   4d0e0:	add	x24, x24, #0x20
   4d0e4:	mov	x1, x20
   4d0e8:	mov	x0, x20
   4d0ec:	mov	x2, #0x20                  	// #32
   4d0f0:	bl	c290 <__gmpz_mul_2exp@plt>
   4d0f4:	ldr	x1, [sp, #104]
   4d0f8:	mov	x0, x26
   4d0fc:	mov	x2, #0x20                  	// #32
   4d100:	bl	cda0 <__gmpz_urandomb@plt>
   4d104:	ldp	x1, x0, [sp, #104]
   4d108:	mov	x2, #0x20                  	// #32
   4d10c:	bl	cda0 <__gmpz_urandomb@plt>
   4d110:	mov	x2, x26
   4d114:	mov	x1, x19
   4d118:	mov	x0, x19
   4d11c:	bl	ca50 <__gmpz_add@plt>
   4d120:	ldr	x2, [sp, #112]
   4d124:	mov	x1, x20
   4d128:	mov	x0, x20
   4d12c:	bl	ca50 <__gmpz_add@plt>
   4d130:	mov	x2, x19
   4d134:	mov	x1, x19
   4d138:	mov	x0, x21
   4d13c:	bl	c070 <__gmpz_mul@plt>
   4d140:	mov	x2, x20
   4d144:	mov	x1, x20
   4d148:	mov	x0, x22
   4d14c:	bl	c070 <__gmpz_mul@plt>
   4d150:	mov	x2, x22
   4d154:	mov	x1, x21
   4d158:	mov	x0, x25
   4d15c:	bl	ca50 <__gmpz_add@plt>
   4d160:	mov	x0, x25
   4d164:	mov	w1, #0x2                   	// #2
   4d168:	bl	cbf0 <__gmpz_sizeinbase@plt>
   4d16c:	ldr	x3, [sp, #152]
   4d170:	add	x3, x3, #0x40
   4d174:	cmp	x0, x3
   4d178:	b.ls	4ce4c <mpfr_grandom@@Base+0x178>  // b.plast
   4d17c:	b	4cde0 <mpfr_grandom@@Base+0x10c>
   4d180:	ldr	w0, [sp, #160]
   4d184:	sub	x2, x24, #0x2
   4d188:	ldr	x1, [sp, #368]
   4d18c:	cmp	w0, #0x0
   4d190:	cset	x0, eq  // eq = none
   4d194:	str	x0, [sp, #144]
   4d198:	sub	x0, x24, #0x2
   4d19c:	str	x0, [sp, #168]
   4d1a0:	ldr	x0, [sp, #128]
   4d1a4:	sub	x1, x1, #0x1
   4d1a8:	asr	x1, x1, #6
   4d1ac:	ldr	x3, [x0]
   4d1b0:	add	x1, x1, #0x1
   4d1b4:	ldr	x0, [sp, #392]
   4d1b8:	cinc	x3, x3, eq  // eq = none
   4d1bc:	bl	c400 <mpfr_round_p@plt>
   4d1c0:	cbz	w0, 4d038 <mpfr_grandom@@Base+0x364>
   4d1c4:	ldr	x0, [sp, #96]
   4d1c8:	cbz	x0, 4d258 <mpfr_grandom@@Base+0x584>
   4d1cc:	ldr	x0, [sp, #120]
   4d1d0:	mov	x1, x24
   4d1d4:	bl	bf50 <mpfr_set_prec@plt>
   4d1d8:	ldr	x0, [sp, #120]
   4d1dc:	mov	x2, x20
   4d1e0:	mov	x1, x23
   4d1e4:	mov	w3, #0x0                   	// #0
   4d1e8:	bl	c560 <mpfr_mul_z@plt>
   4d1ec:	ldr	x1, [sp, #120]
   4d1f0:	mov	x2, x24
   4d1f4:	mov	w3, #0x0                   	// #0
   4d1f8:	mov	x0, x1
   4d1fc:	bl	c980 <mpfr_div_2ui@plt>
   4d200:	ldr	w0, [sp, #164]
   4d204:	cbz	w0, 4d218 <mpfr_grandom@@Base+0x544>
   4d208:	ldr	x1, [sp, #120]
   4d20c:	mov	w2, #0x0                   	// #0
   4d210:	mov	x0, x1
   4d214:	bl	bdf0 <mpfr_neg@plt>
   4d218:	ldr	x0, [sp, #416]
   4d21c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   4d220:	cmp	x0, x1
   4d224:	b.le	4d038 <mpfr_grandom@@Base+0x364>
   4d228:	ldr	x0, [sp, #96]
   4d22c:	ldr	x1, [sp, #400]
   4d230:	ldr	x3, [x0]
   4d234:	sub	x1, x1, #0x1
   4d238:	ldr	x0, [sp, #144]
   4d23c:	asr	x1, x1, #6
   4d240:	ldr	x2, [sp, #168]
   4d244:	add	x3, x0, x3
   4d248:	ldr	x0, [sp, #424]
   4d24c:	add	x1, x1, #0x1
   4d250:	bl	c400 <mpfr_round_p@plt>
   4d254:	cbz	w0, 4d038 <mpfr_grandom@@Base+0x364>
   4d258:	ldr	w2, [sp, #160]
   4d25c:	mov	x1, x27
   4d260:	ldr	w3, [sp, #376]
   4d264:	ldr	x0, [sp, #128]
   4d268:	bl	c730 <mpfr_set4@plt>
   4d26c:	mov	w5, w0
   4d270:	ldr	x0, [sp, #96]
   4d274:	mrs	x4, tpidr_el0
   4d278:	cbz	x0, 4d440 <mpfr_grandom@@Base+0x76c>
   4d27c:	ldr	w2, [sp, #160]
   4d280:	add	x1, sp, #0x190
   4d284:	ldr	w3, [sp, #408]
   4d288:	str	w5, [sp, #104]
   4d28c:	str	x4, [sp, #120]
   4d290:	bl	c730 <mpfr_set4@plt>
   4d294:	mov	w24, w0
   4d298:	ldr	x0, [sp, #96]
   4d29c:	ldr	x4, [sp, #120]
   4d2a0:	ldr	x1, [x0, #16]
   4d2a4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4d2a8:	ldr	x2, [x0, #2528]
   4d2ac:	add	x0, x0, #0x9e0
   4d2b0:	blr	x2
   4d2b4:	ldr	x0, [x4, x0]
   4d2b8:	ldr	w5, [sp, #104]
   4d2bc:	cmp	x1, x0
   4d2c0:	b.lt	4d3f4 <mpfr_grandom@@Base+0x720>  // b.tstop
   4d2c4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4d2c8:	ldr	x2, [x0, #2560]
   4d2cc:	add	x0, x0, #0xa00
   4d2d0:	blr	x2
   4d2d4:	ldr	x0, [x4, x0]
   4d2d8:	cmp	x1, x0
   4d2dc:	b.gt	4d3f4 <mpfr_grandom@@Base+0x720>
   4d2e0:	cbnz	w24, 4d41c <mpfr_grandom@@Base+0x748>
   4d2e4:	ldr	x0, [sp, #128]
   4d2e8:	ldr	x1, [x0, #16]
   4d2ec:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4d2f0:	ldr	x2, [x0, #2528]
   4d2f4:	add	x0, x0, #0x9e0
   4d2f8:	blr	x2
   4d2fc:	ldr	x0, [x4, x0]
   4d300:	cmp	x1, x0
   4d304:	b.lt	4d324 <mpfr_grandom@@Base+0x650>  // b.tstop
   4d308:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4d30c:	ldr	x2, [x0, #2560]
   4d310:	add	x0, x0, #0xa00
   4d314:	blr	x2
   4d318:	ldr	x0, [x4, x0]
   4d31c:	cmp	x1, x0
   4d320:	b.le	4d448 <mpfr_grandom@@Base+0x774>
   4d324:	ldr	w2, [sp, #160]
   4d328:	mov	w1, w5
   4d32c:	ldr	x0, [sp, #128]
   4d330:	bl	cbc0 <mpfr_check_range@plt>
   4d334:	mov	w5, w0
   4d338:	ldr	x0, [sp, #96]
   4d33c:	cbz	x0, 4d350 <mpfr_grandom@@Base+0x67c>
   4d340:	add	x0, sp, #0x190
   4d344:	str	w5, [sp, #96]
   4d348:	bl	c0f0 <mpfr_clear@plt>
   4d34c:	ldr	w5, [sp, #96]
   4d350:	mov	x0, x27
   4d354:	str	w5, [sp, #96]
   4d358:	bl	c0f0 <mpfr_clear@plt>
   4d35c:	mov	x0, x23
   4d360:	bl	c0f0 <mpfr_clear@plt>
   4d364:	mov	x0, x28
   4d368:	bl	c0f0 <mpfr_clear@plt>
   4d36c:	mov	x0, x22
   4d370:	bl	c200 <mpfr_mpz_clear@plt>
   4d374:	mov	x0, x21
   4d378:	bl	c200 <mpfr_mpz_clear@plt>
   4d37c:	mov	x0, x25
   4d380:	bl	c200 <mpfr_mpz_clear@plt>
   4d384:	ldr	x0, [sp, #136]
   4d388:	bl	c200 <mpfr_mpz_clear@plt>
   4d38c:	ldr	x0, [sp, #112]
   4d390:	bl	c200 <mpfr_mpz_clear@plt>
   4d394:	mov	x0, x26
   4d398:	bl	c200 <mpfr_mpz_clear@plt>
   4d39c:	mov	x0, x20
   4d3a0:	bl	c200 <mpfr_mpz_clear@plt>
   4d3a4:	mov	x0, x19
   4d3a8:	bl	c200 <mpfr_mpz_clear@plt>
   4d3ac:	ldr	w5, [sp, #96]
   4d3b0:	cmp	w5, #0x0
   4d3b4:	cbz	w5, 4d3c0 <mpfr_grandom@@Base+0x6ec>
   4d3b8:	cset	w5, le
   4d3bc:	add	w5, w5, #0x1
   4d3c0:	cmp	w24, #0x0
   4d3c4:	cbz	w24, 4d3d4 <mpfr_grandom@@Base+0x700>
   4d3c8:	mov	w24, #0x4                   	// #4
   4d3cc:	mov	w1, #0x8                   	// #8
   4d3d0:	csel	w24, w24, w1, gt
   4d3d4:	orr	w0, w5, w24
   4d3d8:	ldp	x19, x20, [sp, #16]
   4d3dc:	ldp	x21, x22, [sp, #32]
   4d3e0:	ldp	x23, x24, [sp, #48]
   4d3e4:	ldp	x25, x26, [sp, #64]
   4d3e8:	ldp	x27, x28, [sp, #80]
   4d3ec:	ldp	x29, x30, [sp], #432
   4d3f0:	ret
   4d3f4:	ldr	w2, [sp, #160]
   4d3f8:	mov	w1, w24
   4d3fc:	ldr	x0, [sp, #96]
   4d400:	str	w5, [sp, #104]
   4d404:	str	x4, [sp, #120]
   4d408:	bl	cbc0 <mpfr_check_range@plt>
   4d40c:	mov	w24, w0
   4d410:	ldr	w5, [sp, #104]
   4d414:	ldr	x4, [sp, #120]
   4d418:	b	4d2e4 <mpfr_grandom@@Base+0x610>
   4d41c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4d420:	ldr	x1, [x0, #2592]
   4d424:	add	x0, x0, #0xa20
   4d428:	blr	x1
   4d42c:	add	x0, x4, x0
   4d430:	ldr	w1, [x0]
   4d434:	orr	w1, w1, #0x8
   4d438:	str	w1, [x0]
   4d43c:	b	4d2e4 <mpfr_grandom@@Base+0x610>
   4d440:	mov	w24, #0x0                   	// #0
   4d444:	b	4d2e4 <mpfr_grandom@@Base+0x610>
   4d448:	cbz	w5, 4d338 <mpfr_grandom@@Base+0x664>
   4d44c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4d450:	ldr	x1, [x0, #2592]
   4d454:	add	x0, x0, #0xa20
   4d458:	blr	x1
   4d45c:	add	x4, x4, x0
   4d460:	ldr	w1, [x4]
   4d464:	orr	w1, w1, #0x8
   4d468:	str	w1, [x4]
   4d46c:	b	4d338 <mpfr_grandom@@Base+0x664>

000000000004d470 <__gmpfr_fpif_export@@Base>:
   4d470:	cbnz	x0, 4d47c <__gmpfr_fpif_export@@Base+0xc>
   4d474:	mov	w0, #0xffffffff            	// #-1
   4d478:	ret
   4d47c:	stp	x29, x30, [sp, #-96]!
   4d480:	mov	x29, sp
   4d484:	stp	x23, x24, [sp, #48]
   4d488:	mov	x24, x1
   4d48c:	ldr	x1, [x1]
   4d490:	stp	x21, x22, [sp, #32]
   4d494:	mov	x21, x0
   4d498:	cmp	x1, #0xf8
   4d49c:	stp	x19, x20, [sp, #16]
   4d4a0:	asr	x0, x1, #3
   4d4a4:	cset	x22, gt
   4d4a8:	add	x0, x0, #0xb
   4d4ac:	stp	x25, x26, [sp, #64]
   4d4b0:	add	x22, x0, x22, lsl #3
   4d4b4:	mov	x0, x22
   4d4b8:	bl	cd90 <mpfr_allocate_func@plt>
   4d4bc:	mov	x19, x0
   4d4c0:	cbz	x0, 4d564 <__gmpfr_fpif_export@@Base+0xf4>
   4d4c4:	ldr	x20, [x24]
   4d4c8:	str	x20, [sp, #88]
   4d4cc:	cmp	x20, #0xf8
   4d4d0:	b.le	4d580 <__gmpfr_fpif_export@@Base+0x110>
   4d4d4:	sub	x0, x20, #0xf9
   4d4d8:	mov	x25, #0x0                   	// #0
   4d4dc:	lsr	x0, x0, #8
   4d4e0:	add	x25, x25, #0x1
   4d4e4:	cbnz	x0, 4d4dc <__gmpfr_fpif_export@@Base+0x6c>
   4d4e8:	add	x23, x25, #0x1
   4d4ec:	cmp	x22, x23
   4d4f0:	b.cs	4d50c <__gmpfr_fpif_export@@Base+0x9c>  // b.hs, b.nlast
   4d4f4:	mov	x0, x19
   4d4f8:	mov	x2, x23
   4d4fc:	mov	x1, x22
   4d500:	bl	c250 <mpfr_reallocate_func@plt>
   4d504:	mov	x19, x0
   4d508:	cbz	x0, 4d594 <__gmpfr_fpif_export@@Base+0x124>
   4d50c:	cmp	x20, #0xf8
   4d510:	b.le	4d588 <__gmpfr_fpif_export@@Base+0x118>
   4d514:	mov	x0, x19
   4d518:	sub	w1, w25, #0x1
   4d51c:	sub	x20, x20, #0xf9
   4d520:	mov	x2, x25
   4d524:	str	x20, [sp, #88]
   4d528:	strb	w1, [x0], #1
   4d52c:	add	x1, sp, #0x58
   4d530:	bl	ba90 <memcpy@plt>
   4d534:	cmp	x22, x23
   4d538:	mov	x3, x21
   4d53c:	csel	x22, x22, x23, cs  // cs = hs, nlast
   4d540:	mov	x1, x23
   4d544:	mov	x0, x19
   4d548:	mov	x2, #0x1                   	// #1
   4d54c:	bl	c950 <fwrite@plt>
   4d550:	cmp	w0, #0x1
   4d554:	b.eq	4d59c <__gmpfr_fpif_export@@Base+0x12c>  // b.none
   4d558:	mov	x1, x22
   4d55c:	mov	x0, x19
   4d560:	bl	ccc0 <mpfr_free_func@plt>
   4d564:	mov	w0, #0xffffffff            	// #-1
   4d568:	ldp	x19, x20, [sp, #16]
   4d56c:	ldp	x21, x22, [sp, #32]
   4d570:	ldp	x23, x24, [sp, #48]
   4d574:	ldp	x25, x26, [sp, #64]
   4d578:	ldp	x29, x30, [sp], #96
   4d57c:	ret
   4d580:	mov	x25, #0x0                   	// #0
   4d584:	b	4d4e8 <__gmpfr_fpif_export@@Base+0x78>
   4d588:	add	w20, w20, #0x7
   4d58c:	strb	w20, [x19]
   4d590:	b	4d534 <__gmpfr_fpif_export@@Base+0xc4>
   4d594:	mov	x23, #0x0                   	// #0
   4d598:	b	4d534 <__gmpfr_fpif_export@@Base+0xc4>
   4d59c:	ldr	x0, [x24, #16]
   4d5a0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   4d5a4:	cmp	x0, x1
   4d5a8:	b.le	4d638 <__gmpfr_fpif_export@@Base+0x1c8>
   4d5ac:	add	x1, x0, #0x2f
   4d5b0:	cmp	x1, #0x5e
   4d5b4:	b.ls	4d634 <__gmpfr_fpif_export@@Base+0x1c4>  // b.plast
   4d5b8:	mov	x2, #0xffffffffffffffd1    	// #-47
   4d5bc:	cmp	x0, #0x0
   4d5c0:	sub	x1, x2, x0
   4d5c4:	add	x2, x0, x2
   4d5c8:	csel	x2, x2, x1, ge  // ge = tcont
   4d5cc:	mov	x20, #0x0                   	// #0
   4d5d0:	str	x2, [sp, #88]
   4d5d4:	lsl	x1, x2, #1
   4d5d8:	lsr	x1, x1, #8
   4d5dc:	add	x20, x20, #0x1
   4d5e0:	cbnz	x1, 4d5d8 <__gmpfr_fpif_export@@Base+0x168>
   4d5e4:	cmp	x20, #0x10
   4d5e8:	b.ls	4d604 <__gmpfr_fpif_export@@Base+0x194>  // b.plast
   4d5ec:	adrp	x2, 5c000 <mpfr_bases@@Base+0x22a8>
   4d5f0:	adrp	x0, 5c000 <mpfr_bases@@Base+0x22a8>
   4d5f4:	add	x2, x2, #0x57
   4d5f8:	add	x0, x0, #0x6b
   4d5fc:	mov	w1, #0x139                 	// #313
   4d600:	bl	cbd0 <mpfr_assert_fail@plt>
   4d604:	lsl	w1, w20, #3
   4d608:	sub	w3, w1, #0x1
   4d60c:	mov	x1, #0x1                   	// #1
   4d610:	lsl	x1, x1, x3
   4d614:	tbz	x0, #63, 4d620 <__gmpfr_fpif_export@@Base+0x1b0>
   4d618:	orr	x2, x2, x1
   4d61c:	str	x2, [sp, #88]
   4d620:	add	x25, x20, #0x1
   4d624:	cmp	x22, x25
   4d628:	b.cc	4d640 <__gmpfr_fpif_export@@Base+0x1d0>  // b.lo, b.ul, b.last
   4d62c:	mov	x23, x19
   4d630:	b	4d658 <__gmpfr_fpif_export@@Base+0x1e8>
   4d634:	str	x1, [sp, #88]
   4d638:	mov	x20, #0x0                   	// #0
   4d63c:	b	4d620 <__gmpfr_fpif_export@@Base+0x1b0>
   4d640:	mov	x2, x25
   4d644:	mov	x1, x22
   4d648:	mov	x0, x19
   4d64c:	bl	c250 <mpfr_reallocate_func@plt>
   4d650:	mov	x23, x0
   4d654:	cbz	x0, 4d558 <__gmpfr_fpif_export@@Base+0xe8>
   4d658:	ldr	x0, [x24, #16]
   4d65c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   4d660:	cmp	x0, x1
   4d664:	b.le	4d784 <__gmpfr_fpif_export@@Base+0x314>
   4d668:	cbnz	x20, 4d678 <__gmpfr_fpif_export@@Base+0x208>
   4d66c:	ldr	x0, [sp, #88]
   4d670:	strb	w0, [x23]
   4d674:	b	4d690 <__gmpfr_fpif_export@@Base+0x220>
   4d678:	mov	x0, x23
   4d67c:	add	w1, w20, #0x5e
   4d680:	mov	x2, x20
   4d684:	strb	w1, [x0], #1
   4d688:	add	x1, sp, #0x58
   4d68c:	bl	ba90 <memcpy@plt>
   4d690:	ldr	w0, [x24, #8]
   4d694:	tbz	w0, #31, 4d6a4 <__gmpfr_fpif_export@@Base+0x234>
   4d698:	ldrb	w0, [x23]
   4d69c:	orr	w0, w0, #0xffffff80
   4d6a0:	strb	w0, [x23]
   4d6a4:	cmp	x22, x25
   4d6a8:	mov	x3, x21
   4d6ac:	csel	x26, x22, x25, cs  // cs = hs, nlast
   4d6b0:	mov	x1, x25
   4d6b4:	mov	x0, x23
   4d6b8:	mov	x2, #0x1                   	// #1
   4d6bc:	bl	c950 <fwrite@plt>
   4d6c0:	cmp	w0, #0x1
   4d6c4:	b.ne	4d778 <__gmpfr_fpif_export@@Base+0x308>  // b.any
   4d6c8:	ldr	x1, [x24, #16]
   4d6cc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4d6d0:	cmp	x1, x0
   4d6d4:	b.le	4d7e0 <__gmpfr_fpif_export@@Base+0x370>
   4d6d8:	adrp	x0, 73000 <__gmpfr_l2b@@Base+0x200>
   4d6dc:	ldr	x19, [x24]
   4d6e0:	ldr	x0, [x0, #4032]
   4d6e4:	add	x19, x19, #0x7
   4d6e8:	asr	x19, x19, #3
   4d6ec:	ldr	w22, [x0]
   4d6f0:	cmp	x26, x19
   4d6f4:	asr	w22, w22, #3
   4d6f8:	sxtw	x22, w22
   4d6fc:	sub	x25, x22, #0x1
   4d700:	add	x25, x25, x19
   4d704:	udiv	x20, x19, x22
   4d708:	udiv	x25, x25, x22
   4d70c:	msub	x20, x20, x22, x19
   4d710:	b.cs	4d72c <__gmpfr_fpif_export@@Base+0x2bc>  // b.hs, b.nlast
   4d714:	mov	x0, x23
   4d718:	mov	x2, x19
   4d71c:	mov	x1, x26
   4d720:	bl	c250 <mpfr_reallocate_func@plt>
   4d724:	mov	x23, x0
   4d728:	cbz	x0, 4d7d8 <__gmpfr_fpif_export@@Base+0x368>
   4d72c:	ldr	x2, [x24, #24]
   4d730:	mov	x0, #0x0                   	// #0
   4d734:	add	x2, x2, #0x7
   4d738:	cmp	x20, x0
   4d73c:	b.ne	4d7ac <__gmpfr_fpif_export@@Base+0x33c>  // b.any
   4d740:	cmp	x20, #0x0
   4d744:	add	x20, x23, x20
   4d748:	cset	x0, ne  // ne = any
   4d74c:	cmp	x25, x0
   4d750:	b.hi	4d7c0 <__gmpfr_fpif_export@@Base+0x350>  // b.pmore
   4d754:	cmp	x26, x19
   4d758:	mov	x3, x21
   4d75c:	csel	x26, x26, x19, cs  // cs = hs, nlast
   4d760:	mov	x1, x19
   4d764:	mov	x0, x23
   4d768:	mov	x2, #0x1                   	// #1
   4d76c:	bl	c950 <fwrite@plt>
   4d770:	cmp	w0, #0x1
   4d774:	b.eq	4d7e0 <__gmpfr_fpif_export@@Base+0x370>  // b.none
   4d778:	mov	x1, x26
   4d77c:	mov	x0, x23
   4d780:	b	4d560 <__gmpfr_fpif_export@@Base+0xf0>
   4d784:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   4d788:	cmp	x0, x2
   4d78c:	b.ne	4d798 <__gmpfr_fpif_export@@Base+0x328>  // b.any
   4d790:	mov	w0, #0x77                  	// #119
   4d794:	b	4d670 <__gmpfr_fpif_export@@Base+0x200>
   4d798:	cmp	x0, x1
   4d79c:	mov	w0, #0x78                  	// #120
   4d7a0:	mov	w1, #0x79                  	// #121
   4d7a4:	csel	w0, w0, w1, eq  // eq = none
   4d7a8:	b	4d670 <__gmpfr_fpif_export@@Base+0x200>
   4d7ac:	neg	x1, x0
   4d7b0:	ldrb	w1, [x2, x1]
   4d7b4:	strb	w1, [x23, x0]
   4d7b8:	add	x0, x0, #0x1
   4d7bc:	b	4d738 <__gmpfr_fpif_export@@Base+0x2c8>
   4d7c0:	ldr	x1, [x24, #24]
   4d7c4:	ldr	x1, [x1, x0, lsl #3]
   4d7c8:	add	x0, x0, #0x1
   4d7cc:	str	x1, [x20]
   4d7d0:	add	x20, x20, x22
   4d7d4:	b	4d74c <__gmpfr_fpif_export@@Base+0x2dc>
   4d7d8:	mov	x19, #0x0                   	// #0
   4d7dc:	b	4d754 <__gmpfr_fpif_export@@Base+0x2e4>
   4d7e0:	mov	x0, x23
   4d7e4:	mov	x1, x26
   4d7e8:	bl	ccc0 <mpfr_free_func@plt>
   4d7ec:	mov	w0, #0x0                   	// #0
   4d7f0:	b	4d568 <__gmpfr_fpif_export@@Base+0xf8>

000000000004d7f4 <__gmpfr_fpif_import@@Base>:
   4d7f4:	cbnz	x1, 4d800 <__gmpfr_fpif_import@@Base+0xc>
   4d7f8:	mov	w0, #0xffffffff            	// #-1
   4d7fc:	ret
   4d800:	stp	x29, x30, [sp, #-80]!
   4d804:	mov	x2, #0x1                   	// #1
   4d808:	mov	x3, x1
   4d80c:	mov	x29, sp
   4d810:	stp	x23, x24, [sp, #48]
   4d814:	add	x24, sp, #0x48
   4d818:	mov	x23, x0
   4d81c:	mov	x0, x24
   4d820:	stp	x19, x20, [sp, #16]
   4d824:	stp	x21, x22, [sp, #32]
   4d828:	mov	x22, x1
   4d82c:	mov	x1, x2
   4d830:	bl	c6f0 <fread@plt>
   4d834:	mov	x2, x0
   4d838:	cmp	x0, #0x1
   4d83c:	b.ne	4d9ec <__gmpfr_fpif_import@@Base+0x1f8>  // b.any
   4d840:	ldrb	w19, [sp, #72]
   4d844:	cmp	x19, #0x7
   4d848:	b.ls	4d994 <__gmpfr_fpif_import@@Base+0x1a0>  // b.plast
   4d84c:	sub	x19, x19, #0x7
   4d850:	mov	x1, x19
   4d854:	mov	x0, x23
   4d858:	bl	bf50 <mpfr_set_prec@plt>
   4d85c:	mov	x2, #0x1                   	// #1
   4d860:	mov	x3, x22
   4d864:	mov	x1, x2
   4d868:	mov	x0, x24
   4d86c:	bl	c6f0 <fread@plt>
   4d870:	mov	x2, x0
   4d874:	cmp	x0, #0x1
   4d878:	b.ne	4da6c <__gmpfr_fpif_import@@Base+0x278>  // b.any
   4d87c:	ldrsb	w0, [sp, #72]
   4d880:	ldrb	w3, [sp, #72]
   4d884:	cmp	w0, #0x0
   4d888:	cneg	w0, w2, lt  // lt = tstop
   4d88c:	str	w0, [x23, #8]
   4d890:	and	w0, w3, #0x7f
   4d894:	and	x3, x3, #0x7f
   4d898:	sub	x1, x3, #0x5f
   4d89c:	cmp	x1, #0x17
   4d8a0:	b.hi	4da04 <__gmpfr_fpif_import@@Base+0x210>  // b.pmore
   4d8a4:	sub	x20, x3, #0x5e
   4d8a8:	cmp	x20, #0x8
   4d8ac:	b.hi	4da6c <__gmpfr_fpif_import@@Base+0x278>  // b.pmore
   4d8b0:	mov	x3, x22
   4d8b4:	mov	x1, x20
   4d8b8:	mov	x0, x24
   4d8bc:	bl	c6f0 <fread@plt>
   4d8c0:	mov	x21, x0
   4d8c4:	cmp	x0, #0x1
   4d8c8:	b.ne	4da6c <__gmpfr_fpif_import@@Base+0x278>  // b.any
   4d8cc:	mov	x1, x24
   4d8d0:	mov	x2, x20
   4d8d4:	add	x0, sp, #0x40
   4d8d8:	str	xzr, [sp, #64]
   4d8dc:	bl	ba90 <memcpy@plt>
   4d8e0:	lsl	w3, w20, #3
   4d8e4:	ldr	x0, [sp, #64]
   4d8e8:	sub	w3, w3, #0x1
   4d8ec:	lsl	x3, x21, x3
   4d8f0:	and	x1, x3, x0
   4d8f4:	bic	x3, x0, x3
   4d8f8:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   4d8fc:	add	x3, x3, #0x2f
   4d900:	cmp	x3, x0
   4d904:	b.hi	4da6c <__gmpfr_fpif_import@@Base+0x278>  // b.pmore
   4d908:	cbz	x1, 4d910 <__gmpfr_fpif_import@@Base+0x11c>
   4d90c:	neg	x3, x3
   4d910:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4d914:	ldr	x1, [x0, #2528]
   4d918:	add	x0, x0, #0x9e0
   4d91c:	blr	x1
   4d920:	mrs	x1, tpidr_el0
   4d924:	ldr	x0, [x1, x0]
   4d928:	cmp	x0, x3
   4d92c:	b.gt	4da6c <__gmpfr_fpif_import@@Base+0x278>
   4d930:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4d934:	ldr	x2, [x0, #2560]
   4d938:	add	x0, x0, #0xa00
   4d93c:	blr	x2
   4d940:	ldr	x0, [x1, x0]
   4d944:	cmp	x3, x0
   4d948:	b.gt	4da6c <__gmpfr_fpif_import@@Base+0x278>
   4d94c:	add	x19, x19, #0x7
   4d950:	str	x3, [x23, #16]
   4d954:	asr	x19, x19, #3
   4d958:	mov	x0, x19
   4d95c:	bl	cd90 <mpfr_allocate_func@plt>
   4d960:	mov	x20, x0
   4d964:	cbz	x0, 4da6c <__gmpfr_fpif_import@@Base+0x278>
   4d968:	mov	x3, x22
   4d96c:	mov	x1, x19
   4d970:	mov	x2, #0x1                   	// #1
   4d974:	bl	c6f0 <fread@plt>
   4d978:	mov	w21, w0
   4d97c:	cmp	w0, #0x1
   4d980:	b.eq	4da78 <__gmpfr_fpif_import@@Base+0x284>  // b.none
   4d984:	mov	x1, x19
   4d988:	mov	x0, x20
   4d98c:	bl	ccc0 <mpfr_free_func@plt>
   4d990:	b	4da6c <__gmpfr_fpif_import@@Base+0x278>
   4d994:	add	x19, x19, #0x1
   4d998:	mov	x3, x22
   4d99c:	mov	x1, x19
   4d9a0:	mov	x0, x24
   4d9a4:	bl	c6f0 <fread@plt>
   4d9a8:	cmp	x0, #0x1
   4d9ac:	b.ne	4d9ec <__gmpfr_fpif_import@@Base+0x1f8>  // b.any
   4d9b0:	cmp	x19, #0x8
   4d9b4:	b.ne	4d9c0 <__gmpfr_fpif_import@@Base+0x1cc>  // b.any
   4d9b8:	ldrsb	w0, [sp, #79]
   4d9bc:	tbnz	w0, #31, 4d9ec <__gmpfr_fpif_import@@Base+0x1f8>
   4d9c0:	mov	x2, x19
   4d9c4:	mov	x1, x24
   4d9c8:	add	x0, sp, #0x40
   4d9cc:	str	xzr, [sp, #64]
   4d9d0:	bl	ba90 <memcpy@plt>
   4d9d4:	ldr	x19, [sp, #64]
   4d9d8:	adds	x19, x19, #0xf9
   4d9dc:	b.eq	4d9ec <__gmpfr_fpif_import@@Base+0x1f8>  // b.none
   4d9e0:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   4d9e4:	cmp	x19, x0
   4d9e8:	b.lt	4d850 <__gmpfr_fpif_import@@Base+0x5c>  // b.tstop
   4d9ec:	mov	w0, #0xffffffff            	// #-1
   4d9f0:	ldp	x19, x20, [sp, #16]
   4d9f4:	ldp	x21, x22, [sp, #32]
   4d9f8:	ldp	x23, x24, [sp, #48]
   4d9fc:	ldp	x29, x30, [sp], #80
   4da00:	ret
   4da04:	cmp	w0, #0x77
   4da08:	b.ne	4da1c <__gmpfr_fpif_import@@Base+0x228>  // b.any
   4da0c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4da10:	str	x0, [x23, #16]
   4da14:	mov	w0, #0x0                   	// #0
   4da18:	b	4d9f0 <__gmpfr_fpif_import@@Base+0x1fc>
   4da1c:	cmp	x3, #0x78
   4da20:	b.ne	4da2c <__gmpfr_fpif_import@@Base+0x238>  // b.any
   4da24:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4da28:	b	4da10 <__gmpfr_fpif_import@@Base+0x21c>
   4da2c:	cmp	x3, #0x79
   4da30:	b.ne	4da40 <__gmpfr_fpif_import@@Base+0x24c>  // b.any
   4da34:	mov	x0, #0x2                   	// #2
   4da38:	movk	x0, #0x8000, lsl #48
   4da3c:	b	4da10 <__gmpfr_fpif_import@@Base+0x21c>
   4da40:	cmp	x3, #0x5e
   4da44:	b.gt	4da6c <__gmpfr_fpif_import@@Base+0x278>
   4da48:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4da4c:	ldr	x1, [x0, #2528]
   4da50:	add	x0, x0, #0x9e0
   4da54:	blr	x1
   4da58:	sub	x3, x3, #0x2f
   4da5c:	mrs	x1, tpidr_el0
   4da60:	ldr	x0, [x1, x0]
   4da64:	cmp	x3, x0
   4da68:	b.ge	4d930 <__gmpfr_fpif_import@@Base+0x13c>  // b.tcont
   4da6c:	mov	x0, x23
   4da70:	bl	bbd0 <mpfr_set_nan@plt>
   4da74:	b	4d9ec <__gmpfr_fpif_import@@Base+0x1f8>
   4da78:	ldr	x0, [x23]
   4da7c:	add	x0, x0, #0x7
   4da80:	asr	x1, x0, #3
   4da84:	cmp	x19, x0, asr #3
   4da88:	b.cc	4db18 <__gmpfr_fpif_import@@Base+0x324>  // b.lo, b.ul, b.last
   4da8c:	adrp	x0, 73000 <__gmpfr_l2b@@Base+0x200>
   4da90:	ldr	x0, [x0, #4032]
   4da94:	ldr	w0, [x0]
   4da98:	asr	w0, w0, #3
   4da9c:	sxtw	x0, w0
   4daa0:	udiv	x2, x1, x0
   4daa4:	msub	x2, x2, x0, x1
   4daa8:	cbnz	x2, 4dad0 <__gmpfr_fpif_import@@Base+0x2dc>
   4daac:	cmp	x2, #0x0
   4dab0:	cset	x3, ne  // ne = any
   4dab4:	cmp	x1, x2
   4dab8:	b.hi	4db00 <__gmpfr_fpif_import@@Base+0x30c>  // b.pmore
   4dabc:	mov	w21, #0x0                   	// #0
   4dac0:	mov	x0, x20
   4dac4:	bl	ccc0 <mpfr_free_func@plt>
   4dac8:	cbz	w21, 4da14 <__gmpfr_fpif_import@@Base+0x220>
   4dacc:	b	4da6c <__gmpfr_fpif_import@@Base+0x278>
   4dad0:	ldr	x3, [x23, #24]
   4dad4:	str	xzr, [x3]
   4dad8:	mov	x3, #0x0                   	// #0
   4dadc:	ldr	x4, [x23, #24]
   4dae0:	add	x4, x4, #0x7
   4dae4:	neg	x5, x3
   4dae8:	ldrb	w6, [x20, x3]
   4daec:	add	x3, x3, #0x1
   4daf0:	cmp	x2, x3
   4daf4:	strb	w6, [x4, x5]
   4daf8:	b.ne	4dae4 <__gmpfr_fpif_import@@Base+0x2f0>  // b.any
   4dafc:	b	4daac <__gmpfr_fpif_import@@Base+0x2b8>
   4db00:	ldr	x4, [x23, #24]
   4db04:	ldr	x5, [x20, x2]
   4db08:	add	x2, x2, x0
   4db0c:	str	x5, [x4, x3, lsl #3]
   4db10:	add	x3, x3, #0x1
   4db14:	b	4dab4 <__gmpfr_fpif_import@@Base+0x2c0>
   4db18:	mov	x1, #0x0                   	// #0
   4db1c:	b	4dac0 <__gmpfr_fpif_import@@Base+0x2cc>

000000000004db20 <mpfr_round_nearest_away_begin@@Base>:
   4db20:	stp	x29, x30, [sp, #-112]!
   4db24:	mov	x29, sp
   4db28:	stp	x21, x22, [sp, #32]
   4db2c:	mrs	x21, tpidr_el0
   4db30:	stp	x19, x20, [sp, #16]
   4db34:	mov	x19, x0
   4db38:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4db3c:	ldr	x1, [x0, #2528]
   4db40:	add	x0, x0, #0x9e0
   4db44:	blr	x1
   4db48:	ldr	x1, [x21, x0]
   4db4c:	stp	x23, x24, [sp, #48]
   4db50:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   4db54:	str	x25, [sp, #64]
   4db58:	cmp	x1, x0
   4db5c:	b.gt	4db78 <mpfr_round_nearest_away_begin@@Base+0x58>
   4db60:	adrp	x2, 5c000 <mpfr_bases@@Base+0x22a8>
   4db64:	adrp	x0, 5c000 <mpfr_bases@@Base+0x22a8>
   4db68:	add	x2, x2, #0x72
   4db6c:	add	x0, x0, #0xcb
   4db70:	mov	w1, #0x4d                  	// #77
   4db74:	bl	cbd0 <mpfr_assert_fail@plt>
   4db78:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4db7c:	ldr	x1, [x0, #2592]
   4db80:	add	x0, x0, #0xa20
   4db84:	blr	x1
   4db88:	ldr	w25, [x21, x0]
   4db8c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4db90:	ldr	x1, [x0, #2528]
   4db94:	add	x0, x0, #0x9e0
   4db98:	blr	x1
   4db9c:	add	x1, x21, x0
   4dba0:	ldr	x20, [x19]
   4dba4:	ldr	x24, [x21, x0]
   4dba8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4dbac:	ldr	x2, [x0, #2560]
   4dbb0:	add	x0, x0, #0xa00
   4dbb4:	blr	x2
   4dbb8:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   4dbbc:	str	x2, [x1]
   4dbc0:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   4dbc4:	add	x22, x20, #0x1
   4dbc8:	ldr	x23, [x21, x0]
   4dbcc:	str	x1, [x21, x0]
   4dbd0:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   4dbd4:	cmp	x22, x0
   4dbd8:	b.lt	4dbf4 <mpfr_round_nearest_away_begin@@Base+0xd4>  // b.tstop
   4dbdc:	adrp	x2, 5a000 <mpfr_bases@@Base+0x2a8>
   4dbe0:	adrp	x0, 5c000 <mpfr_bases@@Base+0x22a8>
   4dbe4:	add	x2, x2, #0x725
   4dbe8:	add	x0, x0, #0xcb
   4dbec:	mov	w1, #0x54                  	// #84
   4dbf0:	bl	cbd0 <mpfr_assert_fail@plt>
   4dbf4:	mov	x0, #0x40                  	// #64
   4dbf8:	sdiv	x20, x20, x0
   4dbfc:	add	x0, x20, #0x9
   4dc00:	add	x20, x20, #0x1
   4dc04:	lsl	x0, x0, #3
   4dc08:	bl	cd90 <mpfr_allocate_func@plt>
   4dc0c:	ldr	x1, [x19, #24]
   4dc10:	mov	w2, #0x0                   	// #0
   4dc14:	ldr	w3, [x19, #8]
   4dc18:	stp	x20, x1, [x0]
   4dc1c:	ldr	x1, [x19, #16]
   4dc20:	str	x1, [x0, #16]
   4dc24:	ldr	x1, [x19]
   4dc28:	str	x1, [x0, #32]
   4dc2c:	mov	w1, #0x1                   	// #1
   4dc30:	str	w3, [x0, #24]
   4dc34:	str	w25, [x0, #40]
   4dc38:	stp	x24, x23, [x0, #48]
   4dc3c:	str	w1, [sp, #88]
   4dc40:	add	x1, x0, #0x40
   4dc44:	mov	x0, #0x2                   	// #2
   4dc48:	str	x22, [sp, #80]
   4dc4c:	movk	x0, #0x8000, lsl #48
   4dc50:	stp	x0, x1, [sp, #96]
   4dc54:	mov	x1, x19
   4dc58:	add	x0, sp, #0x50
   4dc5c:	bl	c730 <mpfr_set4@plt>
   4dc60:	ldp	x0, x1, [sp, #80]
   4dc64:	stp	x0, x1, [x19]
   4dc68:	ldp	x0, x1, [sp, #96]
   4dc6c:	stp	x0, x1, [x19, #16]
   4dc70:	ldp	x19, x20, [sp, #16]
   4dc74:	ldp	x21, x22, [sp, #32]
   4dc78:	ldp	x23, x24, [sp, #48]
   4dc7c:	ldr	x25, [sp, #64]
   4dc80:	ldp	x29, x30, [sp], #112
   4dc84:	ret

000000000004dc88 <mpfr_round_nearest_away_end@@Base>:
   4dc88:	stp	x29, x30, [sp, #-112]!
   4dc8c:	mov	x6, #0x8000000000000003    	// #-9223372036854775805
   4dc90:	mov	x29, sp
   4dc94:	ldp	x4, x5, [x0]
   4dc98:	stp	x4, x5, [sp, #80]
   4dc9c:	ldp	x5, x2, [x0, #16]
   4dca0:	stp	x19, x20, [sp, #16]
   4dca4:	mov	w19, w1
   4dca8:	stp	x21, x22, [sp, #32]
   4dcac:	mov	x20, x0
   4dcb0:	add	x1, sp, #0x50
   4dcb4:	stp	x23, x24, [sp, #48]
   4dcb8:	ldur	w3, [x2, #-40]
   4dcbc:	stp	x25, x26, [sp, #64]
   4dcc0:	sub	x23, x2, #0x40
   4dcc4:	ldur	w26, [x2, #-24]
   4dcc8:	ldur	x22, [x2, #-64]
   4dccc:	cmp	x6, x5
   4dcd0:	ldur	x4, [x2, #-32]
   4dcd4:	ldp	x25, x24, [x2, #-16]
   4dcd8:	str	w3, [x0, #8]
   4dcdc:	ldur	x3, [x2, #-48]
   4dce0:	str	x3, [x0, #16]
   4dce4:	ldur	x3, [x2, #-56]
   4dce8:	str	x4, [x0]
   4dcec:	str	x3, [x0, #24]
   4dcf0:	stp	x5, x2, [sp, #96]
   4dcf4:	ldr	w3, [sp, #88]
   4dcf8:	b.lt	4dd80 <mpfr_round_nearest_away_end@@Base+0xf8>  // b.tstop
   4dcfc:	mov	w2, #0x0                   	// #0
   4dd00:	bl	c730 <mpfr_set4@plt>
   4dd04:	mrs	x21, tpidr_el0
   4dd08:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4dd0c:	ldr	x1, [x0, #2592]
   4dd10:	add	x0, x0, #0xa20
   4dd14:	blr	x1
   4dd18:	add	x0, x21, x0
   4dd1c:	ldr	w1, [x0]
   4dd20:	orr	w26, w1, w26
   4dd24:	str	w26, [x0]
   4dd28:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4dd2c:	ldr	x1, [x0, #2528]
   4dd30:	add	x0, x0, #0x9e0
   4dd34:	blr	x1
   4dd38:	str	x25, [x21, x0]
   4dd3c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4dd40:	ldr	x1, [x0, #2560]
   4dd44:	add	x0, x0, #0xa00
   4dd48:	blr	x1
   4dd4c:	str	x24, [x21, x0]
   4dd50:	cbnz	w19, 4de1c <mpfr_round_nearest_away_end@@Base+0x194>
   4dd54:	ldr	x0, [x20, #16]
   4dd58:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   4dd5c:	cmp	x0, x1
   4dd60:	b.ge	4ddb4 <mpfr_round_nearest_away_end@@Base+0x12c>  // b.tcont
   4dd64:	mov	x1, #0x2                   	// #2
   4dd68:	movk	x1, #0x8000, lsl #48
   4dd6c:	cmp	x0, x1
   4dd70:	b.ne	4dd78 <mpfr_round_nearest_away_end@@Base+0xf0>  // b.any
   4dd74:	bl	bd10 <mpfr_set_erangeflag@plt>
   4dd78:	mov	x1, #0xffffffffffffffff    	// #-1
   4dd7c:	b	4ddc4 <mpfr_round_nearest_away_end@@Base+0x13c>
   4dd80:	ldr	x2, [x2]
   4dd84:	mvn	w4, w4
   4dd88:	lsr	x4, x2, x4
   4dd8c:	tbz	w4, #0, 4dcfc <mpfr_round_nearest_away_end@@Base+0x74>
   4dd90:	cmp	w19, #0x0
   4dd94:	cbnz	w19, 4dda8 <mpfr_round_nearest_away_end@@Base+0x120>
   4dd98:	mov	w2, #0x4                   	// #4
   4dd9c:	bl	c730 <mpfr_set4@plt>
   4dda0:	mov	w19, w0
   4dda4:	b	4dd04 <mpfr_round_nearest_away_end@@Base+0x7c>
   4dda8:	cset	w2, gt
   4ddac:	add	w2, w2, #0x2
   4ddb0:	b	4dd9c <mpfr_round_nearest_away_end@@Base+0x114>
   4ddb4:	ldr	w0, [x20, #8]
   4ddb8:	mov	x1, #0x1                   	// #1
   4ddbc:	cmp	w0, #0x1
   4ddc0:	cneg	x1, x1, lt  // lt = tstop
   4ddc4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4ddc8:	ldr	x2, [x0, #2528]
   4ddcc:	add	x0, x0, #0x9e0
   4ddd0:	blr	x2
   4ddd4:	ldr	x2, [x21, x0]
   4ddd8:	mov	x0, x20
   4dddc:	sub	x2, x2, #0x2
   4dde0:	bl	c460 <mpfr_cmp_si_2exp@plt>
   4dde4:	cbnz	w0, 4de1c <mpfr_round_nearest_away_end@@Base+0x194>
   4dde8:	ldr	x0, [x20, #16]
   4ddec:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   4ddf0:	cmp	x0, x1
   4ddf4:	b.ge	4de14 <mpfr_round_nearest_away_end@@Base+0x18c>  // b.tcont
   4ddf8:	mov	x1, #0x2                   	// #2
   4ddfc:	movk	x1, #0x8000, lsl #48
   4de00:	cmp	x0, x1
   4de04:	b.ne	4de0c <mpfr_round_nearest_away_end@@Base+0x184>  // b.any
   4de08:	bl	bd10 <mpfr_set_erangeflag@plt>
   4de0c:	mov	w19, #0x0                   	// #0
   4de10:	b	4de1c <mpfr_round_nearest_away_end@@Base+0x194>
   4de14:	ldr	w19, [x20, #8]
   4de18:	neg	w19, w19
   4de1c:	mov	x0, x23
   4de20:	add	x1, x22, #0x8
   4de24:	lsl	x1, x1, #3
   4de28:	bl	ccc0 <mpfr_free_func@plt>
   4de2c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4de30:	ldr	x2, [x0, #2528]
   4de34:	add	x0, x0, #0x9e0
   4de38:	blr	x2
   4de3c:	ldr	x0, [x21, x0]
   4de40:	ldr	x1, [x20, #16]
   4de44:	cmp	x1, x0
   4de48:	b.lt	4de88 <mpfr_round_nearest_away_end@@Base+0x200>  // b.tstop
   4de4c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4de50:	ldr	x2, [x0, #2560]
   4de54:	add	x0, x0, #0xa00
   4de58:	blr	x2
   4de5c:	ldr	x0, [x21, x0]
   4de60:	cmp	x1, x0
   4de64:	b.gt	4de88 <mpfr_round_nearest_away_end@@Base+0x200>
   4de68:	cbnz	w19, 4dea0 <mpfr_round_nearest_away_end@@Base+0x218>
   4de6c:	mov	w0, w19
   4de70:	ldp	x19, x20, [sp, #16]
   4de74:	ldp	x21, x22, [sp, #32]
   4de78:	ldp	x23, x24, [sp, #48]
   4de7c:	ldp	x25, x26, [sp, #64]
   4de80:	ldp	x29, x30, [sp], #112
   4de84:	ret
   4de88:	mov	w1, w19
   4de8c:	mov	x0, x20
   4de90:	mov	w2, #0x0                   	// #0
   4de94:	bl	cbc0 <mpfr_check_range@plt>
   4de98:	mov	w19, w0
   4de9c:	b	4de6c <mpfr_round_nearest_away_end@@Base+0x1e4>
   4dea0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4dea4:	ldr	x1, [x0, #2592]
   4dea8:	add	x0, x0, #0xa20
   4deac:	blr	x1
   4deb0:	add	x0, x21, x0
   4deb4:	ldr	w1, [x0]
   4deb8:	orr	w1, w1, #0x8
   4debc:	str	w1, [x0]
   4dec0:	b	4de6c <mpfr_round_nearest_away_end@@Base+0x1e4>
   4dec4:	stp	x29, x30, [sp, #-48]!
   4dec8:	mov	x29, sp
   4decc:	stp	x19, x20, [sp, #16]
   4ded0:	mov	x19, x1
   4ded4:	mov	x20, x2
   4ded8:	str	x21, [sp, #32]
   4dedc:	mov	x21, x0
   4dee0:	mov	x0, x1
   4dee4:	bl	c870 <mpfr_random_deviate_reset@plt>
   4dee8:	mov	x2, x21
   4deec:	mov	x0, x19
   4def0:	mov	x1, #0x1                   	// #1
   4def4:	bl	c3a0 <mpfr_random_deviate_tstbit@plt>
   4def8:	cbnz	w0, 4df34 <mpfr_round_nearest_away_end@@Base+0x2ac>
   4defc:	mov	x0, x20
   4df00:	bl	c870 <mpfr_random_deviate_reset@plt>
   4df04:	mov	x2, x21
   4df08:	mov	x1, x19
   4df0c:	mov	x0, x20
   4df10:	bl	cac0 <mpfr_random_deviate_less@plt>
   4df14:	cbz	w0, 4df38 <mpfr_round_nearest_away_end@@Base+0x2b0>
   4df18:	mov	x0, x19
   4df1c:	bl	c870 <mpfr_random_deviate_reset@plt>
   4df20:	mov	x2, x21
   4df24:	mov	x1, x20
   4df28:	mov	x0, x19
   4df2c:	bl	cac0 <mpfr_random_deviate_less@plt>
   4df30:	cbnz	w0, 4defc <mpfr_round_nearest_away_end@@Base+0x274>
   4df34:	mov	w0, #0x1                   	// #1
   4df38:	ldp	x19, x20, [sp, #16]
   4df3c:	ldr	x21, [sp, #32]
   4df40:	ldp	x29, x30, [sp], #48
   4df44:	ret

000000000004df48 <mpfr_nrandom@@Base>:
   4df48:	stp	x29, x30, [sp, #-208]!
   4df4c:	mov	x29, sp
   4df50:	stp	x23, x24, [sp, #48]
   4df54:	add	x23, sp, #0x70
   4df58:	stp	x19, x20, [sp, #16]
   4df5c:	mov	x20, x1
   4df60:	stp	x21, x22, [sp, #32]
   4df64:	add	x21, sp, #0x90
   4df68:	add	x22, sp, #0xb0
   4df6c:	stp	x25, x26, [sp, #64]
   4df70:	mov	w26, w2
   4df74:	stp	x27, x28, [sp, #80]
   4df78:	str	x0, [sp, #96]
   4df7c:	mov	x0, x23
   4df80:	bl	c1e0 <mpfr_random_deviate_init@plt>
   4df84:	mov	x0, x21
   4df88:	bl	c1e0 <mpfr_random_deviate_init@plt>
   4df8c:	mov	x0, x22
   4df90:	bl	c1e0 <mpfr_random_deviate_init@plt>
   4df94:	mov	x19, #0x0                   	// #0
   4df98:	mov	x2, x22
   4df9c:	mov	x1, x21
   4dfa0:	mov	x0, x20
   4dfa4:	bl	4dec4 <mpfr_round_nearest_away_end@@Base+0x23c>
   4dfa8:	cbnz	w0, 4dfd4 <mpfr_nrandom@@Base+0x8c>
   4dfac:	sub	x27, x19, #0x1
   4dfb0:	mov	x24, #0x0                   	// #0
   4dfb4:	cmp	x19, x24
   4dfb8:	b.ne	4e020 <mpfr_nrandom@@Base+0xd8>  // b.any
   4dfbc:	add	x24, x19, #0x1
   4dfc0:	mov	x0, x23
   4dfc4:	mov	x25, #0x0                   	// #0
   4dfc8:	bl	c870 <mpfr_random_deviate_reset@plt>
   4dfcc:	lsl	x24, x24, #1
   4dfd0:	b	4e0e0 <mpfr_nrandom@@Base+0x198>
   4dfd4:	adds	x0, x19, #0x1
   4dfd8:	b.ne	4dff4 <mpfr_nrandom@@Base+0xac>  // b.any
   4dfdc:	adrp	x2, 5c000 <mpfr_bases@@Base+0x22a8>
   4dfe0:	add	x2, x2, #0xd3
   4dfe4:	mov	w1, #0x5b                  	// #91
   4dfe8:	adrp	x0, 5c000 <mpfr_bases@@Base+0x22a8>
   4dfec:	add	x0, x0, #0xdc
   4dff0:	bl	cbd0 <mpfr_assert_fail@plt>
   4dff4:	mov	x19, x0
   4dff8:	b	4df98 <mpfr_nrandom@@Base+0x50>
   4dffc:	mov	x2, x22
   4e000:	mov	x1, x21
   4e004:	mov	x0, x20
   4e008:	sub	x25, x25, #0x1
   4e00c:	bl	4dec4 <mpfr_round_nearest_away_end@@Base+0x23c>
   4e010:	cbz	w0, 4df94 <mpfr_nrandom@@Base+0x4c>
   4e014:	cbnz	x25, 4dffc <mpfr_nrandom@@Base+0xb4>
   4e018:	add	x24, x24, #0x1
   4e01c:	b	4dfb4 <mpfr_nrandom@@Base+0x6c>
   4e020:	mov	x25, x27
   4e024:	b	4e014 <mpfr_nrandom@@Base+0xcc>
   4e028:	mov	w28, #0x1                   	// #1
   4e02c:	mov	w27, #0x0                   	// #0
   4e030:	cbnz	x19, 4e0c8 <mpfr_nrandom@@Base+0x180>
   4e034:	mov	x1, x24
   4e038:	mov	x0, x20
   4e03c:	bl	c360 <__gmp_urandomm_ui@plt>
   4e040:	cbz	x0, 4e0d0 <mpfr_nrandom@@Base+0x188>
   4e044:	cmp	x0, #0x1
   4e048:	cset	w3, ne  // ne = any
   4e04c:	mov	x0, x22
   4e050:	str	w3, [sp, #108]
   4e054:	bl	c870 <mpfr_random_deviate_reset@plt>
   4e058:	cmp	w28, #0x0
   4e05c:	mov	x2, x20
   4e060:	csel	x1, x23, x21, ne  // ne = any
   4e064:	mov	x0, x22
   4e068:	bl	cac0 <mpfr_random_deviate_less@plt>
   4e06c:	cbz	w0, 4e0d0 <mpfr_nrandom@@Base+0x188>
   4e070:	ldr	w3, [sp, #108]
   4e074:	cbz	x19, 4e090 <mpfr_nrandom@@Base+0x148>
   4e078:	mov	x1, x24
   4e07c:	mov	x0, x20
   4e080:	bl	c360 <__gmp_urandomm_ui@plt>
   4e084:	cbz	x0, 4e0d0 <mpfr_nrandom@@Base+0x188>
   4e088:	cmp	x0, #0x1
   4e08c:	cset	w3, ne  // ne = any
   4e090:	cbnz	w3, 4e0b0 <mpfr_nrandom@@Base+0x168>
   4e094:	mov	x0, x21
   4e098:	bl	c870 <mpfr_random_deviate_reset@plt>
   4e09c:	mov	x2, x20
   4e0a0:	mov	x1, x23
   4e0a4:	mov	x0, x21
   4e0a8:	bl	cac0 <mpfr_random_deviate_less@plt>
   4e0ac:	cbz	w0, 4e0d0 <mpfr_nrandom@@Base+0x188>
   4e0b0:	mov	x1, x22
   4e0b4:	mov	x0, x21
   4e0b8:	add	w27, w27, #0x1
   4e0bc:	mov	w28, #0x0                   	// #0
   4e0c0:	bl	c620 <mpfr_random_deviate_swap@plt>
   4e0c4:	b	4e030 <mpfr_nrandom@@Base+0xe8>
   4e0c8:	mov	w3, #0x0                   	// #0
   4e0cc:	b	4e04c <mpfr_nrandom@@Base+0x104>
   4e0d0:	tbnz	w27, #0, 4df94 <mpfr_nrandom@@Base+0x4c>
   4e0d4:	add	x25, x25, #0x1
   4e0d8:	cmp	x25, x19
   4e0dc:	b.hi	4e0fc <mpfr_nrandom@@Base+0x1b4>  // b.pmore
   4e0e0:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   4e0e4:	cmp	x19, x0
   4e0e8:	b.ls	4e028 <mpfr_nrandom@@Base+0xe0>  // b.plast
   4e0ec:	adrp	x2, 5c000 <mpfr_bases@@Base+0x22a8>
   4e0f0:	mov	w1, #0x8b                  	// #139
   4e0f4:	add	x2, x2, #0xe6
   4e0f8:	b	4dfe8 <mpfr_nrandom@@Base+0xa0>
   4e0fc:	mov	x0, x22
   4e100:	bl	be70 <mpfr_random_deviate_clear@plt>
   4e104:	mov	x0, x21
   4e108:	bl	be70 <mpfr_random_deviate_clear@plt>
   4e10c:	mov	x0, x20
   4e110:	mov	x1, #0x1                   	// #1
   4e114:	bl	cba0 <__gmp_urandomb_ui@plt>
   4e118:	ldr	x3, [sp, #96]
   4e11c:	mov	w5, w26
   4e120:	mov	x4, x20
   4e124:	mov	x2, x23
   4e128:	mov	x1, x19
   4e12c:	bl	bb20 <mpfr_random_deviate_value@plt>
   4e130:	mov	w19, w0
   4e134:	mov	x0, x23
   4e138:	bl	be70 <mpfr_random_deviate_clear@plt>
   4e13c:	mov	w0, w19
   4e140:	ldp	x19, x20, [sp, #16]
   4e144:	ldp	x21, x22, [sp, #32]
   4e148:	ldp	x23, x24, [sp, #48]
   4e14c:	ldp	x25, x26, [sp, #64]
   4e150:	ldp	x27, x28, [sp, #80]
   4e154:	ldp	x29, x30, [sp], #208
   4e158:	ret
   4e15c:	stp	x29, x30, [sp, #-64]!
   4e160:	cmn	x1, #0x21
   4e164:	mov	x29, sp
   4e168:	stp	x19, x20, [sp, #16]
   4e16c:	stp	x21, x22, [sp, #32]
   4e170:	str	x23, [sp, #48]
   4e174:	b.ls	4e190 <mpfr_nrandom@@Base+0x248>  // b.plast
   4e178:	adrp	x2, 5c000 <mpfr_bases@@Base+0x22a8>
   4e17c:	adrp	x0, 5c000 <mpfr_bases@@Base+0x22a8>
   4e180:	add	x2, x2, #0x105
   4e184:	add	x0, x0, #0x130
   4e188:	mov	w1, #0x82                  	// #130
   4e18c:	bl	cbd0 <mpfr_assert_fail@plt>
   4e190:	mov	x20, x0
   4e194:	mov	x19, x1
   4e198:	ldr	x0, [x0]
   4e19c:	cmp	x0, x1
   4e1a0:	b.cs	4e21c <mpfr_nrandom@@Base+0x2d4>  // b.hs, b.nlast
   4e1a4:	mov	x22, x2
   4e1a8:	mov	x23, x3
   4e1ac:	cbz	x0, 4e1fc <mpfr_nrandom@@Base+0x2b4>
   4e1b0:	cbnz	x23, 4e230 <mpfr_nrandom@@Base+0x2e8>
   4e1b4:	add	x21, x20, #0x10
   4e1b8:	ldr	x0, [x20]
   4e1bc:	cmp	x19, x0
   4e1c0:	b.ls	4e21c <mpfr_nrandom@@Base+0x2d4>  // b.plast
   4e1c4:	mov	x0, x22
   4e1c8:	mov	x1, #0x20                  	// #32
   4e1cc:	bl	cba0 <__gmp_urandomb_ui@plt>
   4e1d0:	mov	x23, x0
   4e1d4:	ldr	x0, [x20]
   4e1d8:	cmp	x0, #0x20
   4e1dc:	b.ne	4e294 <mpfr_nrandom@@Base+0x34c>  // b.any
   4e1e0:	mov	x1, x23
   4e1e4:	mov	x0, x21
   4e1e8:	bl	bd30 <__gmpz_set_ui@plt>
   4e1ec:	ldr	x0, [x20]
   4e1f0:	add	x0, x0, #0x20
   4e1f4:	str	x0, [x20]
   4e1f8:	b	4e1b8 <mpfr_nrandom@@Base+0x270>
   4e1fc:	mov	x0, x2
   4e200:	mov	x1, #0x20                  	// #32
   4e204:	bl	cba0 <__gmp_urandomb_ui@plt>
   4e208:	str	x0, [x20, #8]
   4e20c:	mov	x0, #0x20                  	// #32
   4e210:	str	x0, [x20]
   4e214:	cmp	x19, x0
   4e218:	b.hi	4e1b0 <mpfr_nrandom@@Base+0x268>  // b.pmore
   4e21c:	ldp	x19, x20, [sp, #16]
   4e220:	ldp	x21, x22, [sp, #32]
   4e224:	ldr	x23, [sp, #48]
   4e228:	ldp	x29, x30, [sp], #64
   4e22c:	ret
   4e230:	mov	x21, x20
   4e234:	add	x19, x19, #0x1f
   4e238:	and	x19, x19, #0xffffffffffffffe0
   4e23c:	mov	x1, x22
   4e240:	ldr	x0, [x21], #16
   4e244:	cmp	x0, #0x20
   4e248:	sub	x19, x19, x0
   4e24c:	mov	x2, x19
   4e250:	csel	x0, x21, x23, eq  // eq = none
   4e254:	bl	cda0 <__gmpz_urandomb@plt>
   4e258:	ldr	x0, [x20]
   4e25c:	cmp	x0, #0x20
   4e260:	b.ls	4e284 <mpfr_nrandom@@Base+0x33c>  // b.plast
   4e264:	mov	x2, x19
   4e268:	mov	x1, x21
   4e26c:	mov	x0, x21
   4e270:	bl	c290 <__gmpz_mul_2exp@plt>
   4e274:	mov	x2, x23
   4e278:	mov	x1, x21
   4e27c:	mov	x0, x21
   4e280:	bl	ca50 <__gmpz_add@plt>
   4e284:	ldr	x0, [x20]
   4e288:	add	x19, x0, x19
   4e28c:	str	x19, [x20]
   4e290:	b	4e21c <mpfr_nrandom@@Base+0x2d4>
   4e294:	mov	x1, x21
   4e298:	mov	x0, x21
   4e29c:	mov	x2, #0x20                  	// #32
   4e2a0:	bl	c290 <__gmpz_mul_2exp@plt>
   4e2a4:	mov	x2, x23
   4e2a8:	mov	x1, x21
   4e2ac:	mov	x0, x21
   4e2b0:	bl	c3f0 <__gmpz_add_ui@plt>
   4e2b4:	b	4e1ec <mpfr_nrandom@@Base+0x2a4>

000000000004e2b8 <mpfr_random_deviate_init@@Base>:
   4e2b8:	stp	x29, x30, [sp, #-32]!
   4e2bc:	mov	x29, sp
   4e2c0:	str	x19, [sp, #16]
   4e2c4:	mov	x19, x0
   4e2c8:	add	x0, x0, #0x10
   4e2cc:	bl	c010 <mpfr_mpz_init@plt>
   4e2d0:	str	xzr, [x19]
   4e2d4:	ldr	x19, [sp, #16]
   4e2d8:	ldp	x29, x30, [sp], #32
   4e2dc:	ret

000000000004e2e0 <mpfr_random_deviate_reset@@Base>:
   4e2e0:	str	xzr, [x0]
   4e2e4:	ret

000000000004e2e8 <mpfr_random_deviate_clear@@Base>:
   4e2e8:	add	x0, x0, #0x10
   4e2ec:	b	c200 <mpfr_mpz_clear@plt>

000000000004e2f0 <mpfr_random_deviate_swap@@Base>:
   4e2f0:	ldr	x3, [x1]
   4e2f4:	add	x0, x0, #0x10
   4e2f8:	ldur	x2, [x0, #-16]
   4e2fc:	stur	x3, [x0, #-16]
   4e300:	str	x2, [x1]
   4e304:	add	x1, x1, #0x10
   4e308:	ldur	x3, [x1, #-8]
   4e30c:	ldur	x2, [x0, #-8]
   4e310:	stur	x3, [x0, #-8]
   4e314:	stur	x2, [x1, #-8]
   4e318:	b	c160 <__gmpz_swap@plt>

000000000004e31c <mpfr_random_deviate_tstbit@@Base>:
   4e31c:	cbz	x1, 4e37c <mpfr_random_deviate_tstbit@@Base+0x60>
   4e320:	stp	x29, x30, [sp, #-32]!
   4e324:	mov	x3, #0x0                   	// #0
   4e328:	mov	x29, sp
   4e32c:	stp	x19, x20, [sp, #16]
   4e330:	mov	x20, x1
   4e334:	mov	x19, x0
   4e338:	bl	4e15c <mpfr_nrandom@@Base+0x214>
   4e33c:	cmp	x20, #0x20
   4e340:	b.hi	4e364 <mpfr_random_deviate_tstbit@@Base+0x48>  // b.pmore
   4e344:	mov	w0, #0x20                  	// #32
   4e348:	sub	w20, w0, w20
   4e34c:	ldr	x0, [x19, #8]
   4e350:	lsr	x0, x0, x20
   4e354:	and	w0, w0, #0x1
   4e358:	ldp	x19, x20, [sp, #16]
   4e35c:	ldp	x29, x30, [sp], #32
   4e360:	ret
   4e364:	mov	x0, x19
   4e368:	ldr	x1, [x0], #16
   4e36c:	sub	x1, x1, x20
   4e370:	ldp	x19, x20, [sp, #16]
   4e374:	ldp	x29, x30, [sp], #32
   4e378:	b	c060 <__gmpz_tstbit@plt>
   4e37c:	mov	w0, #0x0                   	// #0
   4e380:	ret

000000000004e384 <mpfr_random_deviate_less@@Base>:
   4e384:	cmp	x0, x1
   4e388:	b.eq	4e434 <mpfr_random_deviate_less@@Base+0xb0>  // b.none
   4e38c:	stp	x29, x30, [sp, #-64]!
   4e390:	mov	x3, #0x0                   	// #0
   4e394:	mov	x29, sp
   4e398:	stp	x19, x20, [sp, #16]
   4e39c:	mov	x20, x0
   4e3a0:	mov	x19, x1
   4e3a4:	mov	x1, #0x20                  	// #32
   4e3a8:	stp	x21, x22, [sp, #32]
   4e3ac:	mov	x21, x2
   4e3b0:	str	x23, [sp, #48]
   4e3b4:	bl	4e15c <mpfr_nrandom@@Base+0x214>
   4e3b8:	mov	x0, x19
   4e3bc:	mov	x1, #0x20                  	// #32
   4e3c0:	mov	x2, x21
   4e3c4:	mov	x3, #0x0                   	// #0
   4e3c8:	bl	4e15c <mpfr_nrandom@@Base+0x214>
   4e3cc:	ldr	x0, [x19, #8]
   4e3d0:	ldr	x1, [x20, #8]
   4e3d4:	cmp	x1, x0
   4e3d8:	b.eq	4e3f4 <mpfr_random_deviate_less@@Base+0x70>  // b.none
   4e3dc:	cset	w0, cc  // cc = lo, ul, last
   4e3e0:	ldp	x19, x20, [sp, #16]
   4e3e4:	ldp	x21, x22, [sp, #32]
   4e3e8:	ldr	x23, [sp, #48]
   4e3ec:	ldp	x29, x30, [sp], #64
   4e3f0:	ret
   4e3f4:	mov	x22, #0x21                  	// #33
   4e3f8:	mov	x2, x21
   4e3fc:	mov	x1, x22
   4e400:	mov	x0, x20
   4e404:	bl	c3a0 <mpfr_random_deviate_tstbit@plt>
   4e408:	mov	w23, w0
   4e40c:	mov	x2, x21
   4e410:	mov	x1, x22
   4e414:	mov	x0, x19
   4e418:	bl	c3a0 <mpfr_random_deviate_tstbit@plt>
   4e41c:	cmp	w23, w0
   4e420:	b.eq	4e42c <mpfr_random_deviate_less@@Base+0xa8>  // b.none
   4e424:	cset	w0, lt  // lt = tstop
   4e428:	b	4e3e0 <mpfr_random_deviate_less@@Base+0x5c>
   4e42c:	add	x22, x22, #0x1
   4e430:	b	4e3f8 <mpfr_random_deviate_less@@Base+0x74>
   4e434:	mov	w0, #0x0                   	// #0
   4e438:	ret

000000000004e43c <mpfr_random_deviate_value@@Base>:
   4e43c:	stp	x29, x30, [sp, #-112]!
   4e440:	mov	x29, sp
   4e444:	stp	x19, x20, [sp, #16]
   4e448:	mov	x19, x2
   4e44c:	stp	x21, x22, [sp, #32]
   4e450:	mov	x22, x1
   4e454:	stp	x23, x24, [sp, #48]
   4e458:	mov	x24, x3
   4e45c:	mov	x23, x4
   4e460:	stp	x25, x26, [sp, #64]
   4e464:	mov	w26, w0
   4e468:	mov	w25, w5
   4e46c:	stp	x27, x28, [sp, #80]
   4e470:	ldr	x21, [x3]
   4e474:	cbnz	x1, 4e5f4 <mpfr_random_deviate_value@@Base+0x1b8>
   4e478:	mov	x2, x4
   4e47c:	mov	x0, x19
   4e480:	mov	x3, #0x0                   	// #0
   4e484:	mov	x1, #0x20                  	// #32
   4e488:	bl	4e15c <mpfr_nrandom@@Base+0x214>
   4e48c:	ldr	x2, [x19, #8]
   4e490:	cbz	x2, 4e580 <mpfr_random_deviate_value@@Base+0x144>
   4e494:	clz	x20, x2
   4e498:	mov	w28, #0xffffffff            	// #-1
   4e49c:	sub	w20, w20, #0x1f
   4e4a0:	sxtw	x20, w20
   4e4a4:	add	x27, sp, #0x60
   4e4a8:	mov	x0, x27
   4e4ac:	bl	c010 <mpfr_mpz_init@plt>
   4e4b0:	cmp	w28, #0x1
   4e4b4:	b.ne	4e60c <mpfr_random_deviate_value@@Base+0x1d0>  // b.any
   4e4b8:	add	x21, x21, #0x1
   4e4bc:	cmp	x21, x20
   4e4c0:	b.hi	4e628 <mpfr_random_deviate_value@@Base+0x1ec>  // b.pmore
   4e4c4:	cbnz	x22, 4e640 <mpfr_random_deviate_value@@Base+0x204>
   4e4c8:	ldr	x1, [x19, #8]
   4e4cc:	mov	x0, x27
   4e4d0:	bl	bd30 <__gmpz_set_ui@plt>
   4e4d4:	ldr	x2, [x19]
   4e4d8:	cmp	x2, #0x20
   4e4dc:	b.ls	4e500 <mpfr_random_deviate_value@@Base+0xc4>  // b.plast
   4e4e0:	sub	x2, x2, #0x20
   4e4e4:	mov	x1, x27
   4e4e8:	mov	x0, x27
   4e4ec:	bl	c290 <__gmpz_mul_2exp@plt>
   4e4f0:	add	x2, x19, #0x10
   4e4f4:	mov	x1, x27
   4e4f8:	mov	x0, x27
   4e4fc:	bl	ca50 <__gmpz_add@plt>
   4e500:	mov	x0, x27
   4e504:	mov	x1, #0x0                   	// #0
   4e508:	bl	bf90 <__gmpz_setbit@plt>
   4e50c:	cbz	w26, 4e51c <mpfr_random_deviate_value@@Base+0xe0>
   4e510:	ldr	w0, [sp, #100]
   4e514:	neg	w0, w0
   4e518:	str	w0, [sp, #100]
   4e51c:	ldr	x0, [x19]
   4e520:	tbz	x0, #63, 4e53c <mpfr_random_deviate_value@@Base+0x100>
   4e524:	adrp	x2, 5c000 <mpfr_bases@@Base+0x22a8>
   4e528:	adrp	x0, 5c000 <mpfr_bases@@Base+0x22a8>
   4e52c:	add	x2, x2, #0x193
   4e530:	add	x0, x0, #0x130
   4e534:	mov	w1, #0x177                 	// #375
   4e538:	bl	cbd0 <mpfr_assert_fail@plt>
   4e53c:	ldr	x2, [x19]
   4e540:	mov	w3, w25
   4e544:	mov	x1, x27
   4e548:	mov	x0, x24
   4e54c:	neg	x2, x2
   4e550:	bl	c580 <mpfr_set_z_2exp@plt>
   4e554:	mov	w19, w0
   4e558:	mov	x0, x27
   4e55c:	bl	c200 <mpfr_mpz_clear@plt>
   4e560:	mov	w0, w19
   4e564:	ldp	x19, x20, [sp, #16]
   4e568:	ldp	x21, x22, [sp, #32]
   4e56c:	ldp	x23, x24, [sp, #48]
   4e570:	ldp	x25, x26, [sp, #64]
   4e574:	ldp	x27, x28, [sp, #80]
   4e578:	ldp	x29, x30, [sp], #112
   4e57c:	ret
   4e580:	mov	x2, x23
   4e584:	mov	x3, #0x0                   	// #0
   4e588:	mov	x1, #0x40                  	// #64
   4e58c:	mov	x0, x19
   4e590:	bl	4e15c <mpfr_nrandom@@Base+0x214>
   4e594:	ldr	w0, [x19, #20]
   4e598:	ldr	x20, [x19]
   4e59c:	cbz	w0, 4e5e4 <mpfr_random_deviate_value@@Base+0x1a8>
   4e5a0:	mov	w1, #0x2                   	// #2
   4e5a4:	add	x0, x19, #0x10
   4e5a8:	bl	cbf0 <__gmpz_sizeinbase@plt>
   4e5ac:	sub	x0, x20, x0
   4e5b0:	add	x20, x0, #0x1
   4e5b4:	mov	x1, #0x100                 	// #256
   4e5b8:	add	x0, x0, #0x2
   4e5bc:	movk	x1, #0x8000, lsl #48
   4e5c0:	mov	w28, #0xffffffff            	// #-1
   4e5c4:	cmp	x0, x1
   4e5c8:	b.ls	4e4a4 <mpfr_random_deviate_value@@Base+0x68>  // b.plast
   4e5cc:	adrp	x2, 5c000 <mpfr_bases@@Base+0x22a8>
   4e5d0:	adrp	x0, 5c000 <mpfr_bases@@Base+0x22a8>
   4e5d4:	add	x2, x2, #0x141
   4e5d8:	add	x0, x0, #0x130
   4e5dc:	mov	w1, #0xf1                  	// #241
   4e5e0:	bl	cbd0 <mpfr_assert_fail@plt>
   4e5e4:	mov	x2, x23
   4e5e8:	add	x1, x20, #0x1
   4e5ec:	mov	x3, #0x0                   	// #0
   4e5f0:	b	4e58c <mpfr_random_deviate_value@@Base+0x150>
   4e5f4:	clz	x1, x1
   4e5f8:	mov	w20, #0x3f                  	// #63
   4e5fc:	sub	w20, w20, w1
   4e600:	mov	w28, #0x1                   	// #1
   4e604:	sxtw	x20, w20
   4e608:	b	4e4a4 <mpfr_random_deviate_value@@Base+0x68>
   4e60c:	cmn	w28, #0x1
   4e610:	b.ne	4e4c4 <mpfr_random_deviate_value@@Base+0x88>  // b.any
   4e614:	add	x20, x20, x21
   4e618:	cmn	x20, #0x1
   4e61c:	b.eq	4e4c4 <mpfr_random_deviate_value@@Base+0x88>  // b.none
   4e620:	add	x1, x20, #0x1
   4e624:	b	4e62c <mpfr_random_deviate_value@@Base+0x1f0>
   4e628:	sub	x1, x21, x20
   4e62c:	mov	x3, x27
   4e630:	mov	x2, x23
   4e634:	mov	x0, x19
   4e638:	bl	4e15c <mpfr_nrandom@@Base+0x214>
   4e63c:	b	4e4c4 <mpfr_random_deviate_value@@Base+0x88>
   4e640:	mov	x0, x27
   4e644:	mov	x1, x22
   4e648:	bl	bd30 <__gmpz_set_ui@plt>
   4e64c:	ldr	x0, [x19]
   4e650:	cbz	x0, 4e4d4 <mpfr_random_deviate_value@@Base+0x98>
   4e654:	mov	x1, x27
   4e658:	mov	x0, x27
   4e65c:	mov	x2, #0x20                  	// #32
   4e660:	bl	c290 <__gmpz_mul_2exp@plt>
   4e664:	ldr	x2, [x19, #8]
   4e668:	mov	x1, x27
   4e66c:	mov	x0, x27
   4e670:	bl	c3f0 <__gmpz_add_ui@plt>
   4e674:	b	4e4d4 <mpfr_random_deviate_value@@Base+0x98>

000000000004e678 <mpfr_erandom@@Base>:
   4e678:	stp	x29, x30, [sp, #-176]!
   4e67c:	mov	x29, sp
   4e680:	stp	x21, x22, [sp, #32]
   4e684:	add	x21, sp, #0x50
   4e688:	add	x22, sp, #0x90
   4e68c:	stp	x19, x20, [sp, #16]
   4e690:	mov	x20, x1
   4e694:	add	x19, sp, #0x70
   4e698:	stp	x23, x24, [sp, #48]
   4e69c:	mov	x24, x0
   4e6a0:	mov	x0, x21
   4e6a4:	str	x25, [sp, #64]
   4e6a8:	mov	w25, w2
   4e6ac:	bl	c1e0 <mpfr_random_deviate_init@plt>
   4e6b0:	mov	x23, #0x0                   	// #0
   4e6b4:	mov	x0, x19
   4e6b8:	bl	c1e0 <mpfr_random_deviate_init@plt>
   4e6bc:	mov	x0, x22
   4e6c0:	bl	c1e0 <mpfr_random_deviate_init@plt>
   4e6c4:	mov	x0, x19
   4e6c8:	bl	c870 <mpfr_random_deviate_reset@plt>
   4e6cc:	mov	x2, x20
   4e6d0:	mov	x1, x21
   4e6d4:	mov	x0, x19
   4e6d8:	bl	cac0 <mpfr_random_deviate_less@plt>
   4e6dc:	cbz	w0, 4e740 <mpfr_erandom@@Base+0xc8>
   4e6e0:	mov	x0, x22
   4e6e4:	bl	c870 <mpfr_random_deviate_reset@plt>
   4e6e8:	mov	x2, x20
   4e6ec:	mov	x1, x19
   4e6f0:	mov	x0, x22
   4e6f4:	bl	cac0 <mpfr_random_deviate_less@plt>
   4e6f8:	cbz	w0, 4e720 <mpfr_erandom@@Base+0xa8>
   4e6fc:	mov	x0, x19
   4e700:	bl	c870 <mpfr_random_deviate_reset@plt>
   4e704:	mov	x2, x20
   4e708:	mov	x1, x22
   4e70c:	b	4e6d4 <mpfr_erandom@@Base+0x5c>
   4e710:	mov	x0, x21
   4e714:	add	x23, x23, #0x1
   4e718:	bl	c870 <mpfr_random_deviate_reset@plt>
   4e71c:	b	4e6c4 <mpfr_erandom@@Base+0x4c>
   4e720:	cmn	x23, #0x1
   4e724:	b.ne	4e710 <mpfr_erandom@@Base+0x98>  // b.any
   4e728:	adrp	x2, 5c000 <mpfr_bases@@Base+0x22a8>
   4e72c:	adrp	x0, 5c000 <mpfr_bases@@Base+0x22a8>
   4e730:	add	x2, x2, #0x1b2
   4e734:	add	x0, x0, #0x1bb
   4e738:	mov	w1, #0x61                  	// #97
   4e73c:	bl	cbd0 <mpfr_assert_fail@plt>
   4e740:	mov	x0, x22
   4e744:	bl	be70 <mpfr_random_deviate_clear@plt>
   4e748:	mov	x0, x19
   4e74c:	bl	be70 <mpfr_random_deviate_clear@plt>
   4e750:	mov	w5, w25
   4e754:	mov	x4, x20
   4e758:	mov	x3, x24
   4e75c:	mov	x2, x21
   4e760:	mov	x1, x23
   4e764:	mov	w0, #0x0                   	// #0
   4e768:	bl	bb20 <mpfr_random_deviate_value@plt>
   4e76c:	mov	w19, w0
   4e770:	mov	x0, x21
   4e774:	bl	be70 <mpfr_random_deviate_clear@plt>
   4e778:	mov	w0, w19
   4e77c:	ldp	x19, x20, [sp, #16]
   4e780:	ldp	x21, x22, [sp, #32]
   4e784:	ldp	x23, x24, [sp, #48]
   4e788:	ldr	x25, [sp, #64]
   4e78c:	ldp	x29, x30, [sp], #176
   4e790:	ret
   4e794:	stp	x29, x30, [sp, #-256]!
   4e798:	mov	x29, sp
   4e79c:	stp	x19, x20, [sp, #16]
   4e7a0:	str	x0, [x29, #104]
   4e7a4:	ldr	x20, [x0]
   4e7a8:	stp	x25, x26, [sp, #64]
   4e7ac:	mov	x25, x1
   4e7b0:	ldr	x0, [x2]
   4e7b4:	stp	x21, x22, [sp, #32]
   4e7b8:	mov	x22, x4
   4e7bc:	ldr	x19, [x1]
   4e7c0:	sub	x0, x0, #0x1
   4e7c4:	ldr	x26, [x3]
   4e7c8:	sub	x19, x19, #0x1
   4e7cc:	asr	x0, x0, #6
   4e7d0:	stp	x23, x24, [sp, #48]
   4e7d4:	add	x19, x0, x19, asr #6
   4e7d8:	ldr	x0, [x4]
   4e7dc:	sub	x26, x26, #0x1
   4e7e0:	add	x19, x19, #0x2
   4e7e4:	stp	x27, x28, [sp, #80]
   4e7e8:	sub	x0, x0, #0x1
   4e7ec:	str	w6, [x29, #100]
   4e7f0:	lsl	x28, x19, #3
   4e7f4:	asr	x0, x0, #6
   4e7f8:	str	xzr, [x29, #120]
   4e7fc:	add	x26, x0, x26, asr #6
   4e800:	mov	x24, x2
   4e804:	mov	x23, x3
   4e808:	mov	w21, w5
   4e80c:	cmp	x28, #0x4, lsl #12
   4e810:	add	x26, x26, #0x2
   4e814:	b.hi	4e9b0 <mpfr_erandom@@Base+0x338>  // b.pmore
   4e818:	add	x0, x28, #0xf
   4e81c:	and	x0, x0, #0xfffffffffffffff0
   4e820:	sub	sp, sp, x0
   4e824:	mov	x0, sp
   4e828:	lsl	x1, x19, #6
   4e82c:	str	x1, [x29, #160]
   4e830:	str	x0, [x29, #184]
   4e834:	mov	w0, #0x1                   	// #1
   4e838:	str	w0, [x29, #168]
   4e83c:	lsl	x1, x26, #3
   4e840:	cmp	x1, #0x4, lsl #12
   4e844:	b.hi	4e9c0 <mpfr_erandom@@Base+0x348>  // b.pmore
   4e848:	add	x1, x1, #0xf
   4e84c:	and	x1, x1, #0xfffffffffffffff0
   4e850:	sub	sp, sp, x1
   4e854:	mov	x0, sp
   4e858:	lsl	x26, x26, #6
   4e85c:	add	x27, x29, #0xa0
   4e860:	str	x0, [x29, #232]
   4e864:	mov	w0, #0x1                   	// #1
   4e868:	mov	x2, x24
   4e86c:	mov	x1, x25
   4e870:	str	x26, [x29, #208]
   4e874:	add	x26, x29, #0xd0
   4e878:	str	w0, [x29, #216]
   4e87c:	mov	x0, x27
   4e880:	bl	c000 <mpfr_ubf_mul_exact@plt>
   4e884:	mov	x0, x26
   4e888:	mov	x2, x22
   4e88c:	mov	x1, x23
   4e890:	bl	c000 <mpfr_ubf_mul_exact@plt>
   4e894:	ldr	w0, [x29, #100]
   4e898:	cbz	w0, 4e8a8 <mpfr_erandom@@Base+0x230>
   4e89c:	ldr	w0, [x29, #216]
   4e8a0:	neg	w0, w0
   4e8a4:	str	w0, [x29, #216]
   4e8a8:	ldr	x0, [x25]
   4e8ac:	cmp	x0, x20
   4e8b0:	b.ne	4e9dc <mpfr_erandom@@Base+0x364>  // b.any
   4e8b4:	ldr	x0, [x24]
   4e8b8:	cmp	x0, x20
   4e8bc:	b.ne	4e9dc <mpfr_erandom@@Base+0x364>  // b.any
   4e8c0:	ldr	x0, [x23]
   4e8c4:	cmp	x0, x20
   4e8c8:	b.ne	4e9dc <mpfr_erandom@@Base+0x364>  // b.any
   4e8cc:	ldr	x0, [x22]
   4e8d0:	cmp	x0, x20
   4e8d4:	b.ne	4e9dc <mpfr_erandom@@Base+0x364>  // b.any
   4e8d8:	lsl	x22, x20, #1
   4e8dc:	sub	x0, x22, #0x1
   4e8e0:	asr	x0, x0, #6
   4e8e4:	add	x0, x0, #0x1
   4e8e8:	cmp	x0, x19
   4e8ec:	b.ne	4e9dc <mpfr_erandom@@Base+0x364>  // b.any
   4e8f0:	cmp	x28, #0x4, lsl #12
   4e8f4:	b.hi	4e9cc <mpfr_erandom@@Base+0x354>  // b.pmore
   4e8f8:	add	x4, x28, #0xf
   4e8fc:	and	x4, x4, #0xfffffffffffffff0
   4e900:	sub	sp, sp, x4
   4e904:	mov	x0, sp
   4e908:	add	x19, x29, #0x80
   4e90c:	stp	x0, x22, [x29, #152]
   4e910:	mov	w0, #0x1                   	// #1
   4e914:	mov	w3, w21
   4e918:	mov	x2, x26
   4e91c:	mov	x1, x27
   4e920:	str	x22, [x29, #128]
   4e924:	str	w0, [x29, #136]
   4e928:	mov	x0, x19
   4e92c:	str	x22, [x29, #208]
   4e930:	bl	c230 <mpfr_add@plt>
   4e934:	mov	w3, w0
   4e938:	mov	w2, w21
   4e93c:	ldr	x0, [x29, #104]
   4e940:	mov	x1, x19
   4e944:	bl	cb70 <mpfr_set_1_2@plt>
   4e948:	ldr	x1, [x29, #176]
   4e94c:	mov	w19, w0
   4e950:	mov	x0, #0x4                   	// #4
   4e954:	movk	x0, #0x8000, lsl #48
   4e958:	mov	x20, x0
   4e95c:	cmp	x1, x0
   4e960:	b.ne	4e96c <mpfr_erandom@@Base+0x2f4>  // b.any
   4e964:	add	x0, x27, #0x20
   4e968:	bl	c200 <mpfr_mpz_clear@plt>
   4e96c:	ldr	x0, [x29, #224]
   4e970:	cmp	x0, x20
   4e974:	b.ne	4e980 <mpfr_erandom@@Base+0x308>  // b.any
   4e978:	add	x0, x26, #0x20
   4e97c:	bl	c200 <mpfr_mpz_clear@plt>
   4e980:	ldr	x0, [x29, #120]
   4e984:	cbz	x0, 4e98c <mpfr_erandom@@Base+0x314>
   4e988:	bl	c4a0 <mpfr_tmp_free@plt>
   4e98c:	mov	sp, x29
   4e990:	mov	w0, w19
   4e994:	ldp	x19, x20, [sp, #16]
   4e998:	ldp	x21, x22, [sp, #32]
   4e99c:	ldp	x23, x24, [sp, #48]
   4e9a0:	ldp	x25, x26, [sp, #64]
   4e9a4:	ldp	x27, x28, [sp, #80]
   4e9a8:	ldp	x29, x30, [sp], #256
   4e9ac:	ret
   4e9b0:	mov	x1, x28
   4e9b4:	add	x0, x29, #0x78
   4e9b8:	bl	be40 <mpfr_tmp_allocate@plt>
   4e9bc:	b	4e828 <mpfr_erandom@@Base+0x1b0>
   4e9c0:	add	x0, x29, #0x78
   4e9c4:	bl	be40 <mpfr_tmp_allocate@plt>
   4e9c8:	b	4e858 <mpfr_erandom@@Base+0x1e0>
   4e9cc:	mov	x1, x28
   4e9d0:	add	x0, x29, #0x78
   4e9d4:	bl	be40 <mpfr_tmp_allocate@plt>
   4e9d8:	b	4e908 <mpfr_erandom@@Base+0x290>
   4e9dc:	ldr	x0, [x29, #104]
   4e9e0:	mov	w3, w21
   4e9e4:	mov	x2, x26
   4e9e8:	mov	x1, x27
   4e9ec:	bl	c230 <mpfr_add@plt>
   4e9f0:	b	4e948 <mpfr_erandom@@Base+0x2d0>

000000000004e9f4 <mpfr_fmma@@Base>:
   4e9f4:	mov	w6, #0x0                   	// #0
   4e9f8:	b	4e794 <mpfr_erandom@@Base+0x11c>

000000000004e9fc <mpfr_fmms@@Base>:
   4e9fc:	mov	w6, #0x1                   	// #1
   4ea00:	b	4e794 <mpfr_erandom@@Base+0x11c>
   4ea04:	sub	sp, sp, #0x90
   4ea08:	stp	x29, x30, [sp, #16]
   4ea0c:	add	x29, sp, #0x10
   4ea10:	stp	x19, x20, [sp, #32]
   4ea14:	mov	x20, x3
   4ea18:	mov	x19, x4
   4ea1c:	stp	x21, x22, [sp, #48]
   4ea20:	mov	x21, x0
   4ea24:	mov	x22, x2
   4ea28:	stp	x23, x24, [sp, #64]
   4ea2c:	mov	x24, x1
   4ea30:	stp	x25, x26, [sp, #80]
   4ea34:	mov	x25, x7
   4ea38:	stp	x27, x28, [sp, #96]
   4ea3c:	mov	x27, x5
   4ea40:	add	x5, x4, #0x1
   4ea44:	mov	x28, x6
   4ea48:	cmp	x5, x27
   4ea4c:	b.ne	4eaa4 <mpfr_fmms@@Base+0xa8>  // b.any
   4ea50:	cmp	x4, #0x1
   4ea54:	b.eq	4ea5c <mpfr_fmms@@Base+0x60>  // b.none
   4ea58:	neg	x28, x6
   4ea5c:	mov	x1, x28
   4ea60:	mov	x0, x21
   4ea64:	bl	cc00 <__gmpz_set_si@plt>
   4ea68:	str	x25, [x24]
   4ea6c:	mov	x1, x19
   4ea70:	mov	x0, x22
   4ea74:	bl	bd30 <__gmpz_set_ui@plt>
   4ea78:	mov	x1, x21
   4ea7c:	mov	x0, x20
   4ea80:	bl	c020 <__gmpz_set@plt>
   4ea84:	ldp	x29, x30, [sp, #16]
   4ea88:	ldp	x19, x20, [sp, #32]
   4ea8c:	ldp	x21, x22, [sp, #48]
   4ea90:	ldp	x23, x24, [sp, #64]
   4ea94:	ldp	x25, x26, [sp, #80]
   4ea98:	ldp	x27, x28, [sp, #96]
   4ea9c:	add	sp, sp, #0x90
   4eaa0:	ret
   4eaa4:	lsr	x8, x27, #1
   4eaa8:	and	x19, x4, x27
   4eaac:	add	x8, x8, x4, lsr #1
   4eab0:	mov	w5, #0x1                   	// #1
   4eab4:	and	x19, x19, #0x1
   4eab8:	str	w5, [sp]
   4eabc:	add	x19, x8, x19
   4eac0:	add	x23, x3, #0x10
   4eac4:	add	x26, x2, #0x10
   4eac8:	mov	x5, x19
   4eacc:	bl	4ea04 <mpfr_fmms@@Base+0x8>
   4ead0:	add	x9, x21, #0x10
   4ead4:	ldr	w0, [sp, #144]
   4ead8:	mov	x7, x25
   4eadc:	mov	x6, x28
   4eae0:	mov	x5, x27
   4eae4:	mov	x4, x19
   4eae8:	mov	x3, x23
   4eaec:	str	w0, [sp]
   4eaf0:	mov	x2, x26
   4eaf4:	mov	x0, x9
   4eaf8:	add	x1, sp, #0x88
   4eafc:	str	x9, [sp, #120]
   4eb00:	bl	4ea04 <mpfr_fmms@@Base+0x8>
   4eb04:	mov	x2, x21
   4eb08:	mov	x1, x23
   4eb0c:	mov	x0, x23
   4eb10:	bl	c070 <__gmpz_mul@plt>
   4eb14:	mov	x2, x22
   4eb18:	mov	x1, x23
   4eb1c:	mov	x0, x23
   4eb20:	bl	c070 <__gmpz_mul@plt>
   4eb24:	mov	x2, x26
   4eb28:	mov	x1, x20
   4eb2c:	mov	x0, x20
   4eb30:	bl	c070 <__gmpz_mul@plt>
   4eb34:	ldr	x2, [sp, #136]
   4eb38:	mov	x1, x20
   4eb3c:	mov	x0, x20
   4eb40:	bl	c290 <__gmpz_mul_2exp@plt>
   4eb44:	mov	x0, x20
   4eb48:	mov	x2, x23
   4eb4c:	mov	x1, x20
   4eb50:	bl	ca50 <__gmpz_add@plt>
   4eb54:	ldr	w0, [sp, #144]
   4eb58:	ldr	x9, [sp, #120]
   4eb5c:	cbz	w0, 4eb70 <mpfr_fmms@@Base+0x174>
   4eb60:	mov	x2, x9
   4eb64:	mov	x1, x21
   4eb68:	mov	x0, x21
   4eb6c:	bl	c070 <__gmpz_mul@plt>
   4eb70:	ldr	x0, [x24]
   4eb74:	mov	x2, x26
   4eb78:	ldr	x1, [sp, #136]
   4eb7c:	add	x0, x0, x1
   4eb80:	str	x0, [x24]
   4eb84:	mov	x1, x22
   4eb88:	mov	x0, x22
   4eb8c:	bl	c070 <__gmpz_mul@plt>
   4eb90:	b	4ea84 <mpfr_fmms@@Base+0x88>

000000000004eb94 <mpfr_log_ui@@Base>:
   4eb94:	stp	x29, x30, [sp, #-432]!
   4eb98:	cmp	x1, #0x2
   4eb9c:	mov	x29, sp
   4eba0:	stp	x19, x20, [sp, #16]
   4eba4:	mov	x19, x0
   4eba8:	stp	x21, x22, [sp, #32]
   4ebac:	stp	x23, x24, [sp, #48]
   4ebb0:	stp	x25, x26, [sp, #64]
   4ebb4:	mov	x26, x1
   4ebb8:	stp	x27, x28, [sp, #80]
   4ebbc:	sub	sp, sp, #0x10
   4ebc0:	str	w2, [x29, #132]
   4ebc4:	b.hi	4ec68 <mpfr_log_ui@@Base+0xd4>  // b.pmore
   4ebc8:	cbnz	x1, 4ec28 <mpfr_log_ui@@Base+0x94>
   4ebcc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4ebd0:	str	x0, [x19, #16]
   4ebd4:	mov	w0, #0xffffffff            	// #-1
   4ebd8:	str	w0, [x19, #8]
   4ebdc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4ebe0:	ldr	x1, [x0, #2592]
   4ebe4:	add	x0, x0, #0xa20
   4ebe8:	blr	x1
   4ebec:	mrs	x1, tpidr_el0
   4ebf0:	add	x0, x1, x0
   4ebf4:	ldr	w1, [x0]
   4ebf8:	orr	w1, w1, #0x20
   4ebfc:	str	w1, [x0]
   4ec00:	mov	w20, #0x0                   	// #0
   4ec04:	mov	sp, x29
   4ec08:	mov	w0, w20
   4ec0c:	ldp	x19, x20, [sp, #16]
   4ec10:	ldp	x21, x22, [sp, #32]
   4ec14:	ldp	x23, x24, [sp, #48]
   4ec18:	ldp	x25, x26, [sp, #64]
   4ec1c:	ldp	x27, x28, [sp, #80]
   4ec20:	ldp	x29, x30, [sp], #432
   4ec24:	ret
   4ec28:	cmp	x1, #0x1
   4ec2c:	b.ne	4ec40 <mpfr_log_ui@@Base+0xac>  // b.any
   4ec30:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4ec34:	str	w1, [x19, #8]
   4ec38:	str	x0, [x19, #16]
   4ec3c:	b	4ec00 <mpfr_log_ui@@Base+0x6c>
   4ec40:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4ec44:	ldr	x1, [x0, #2576]
   4ec48:	add	x0, x0, #0xa10
   4ec4c:	blr	x1
   4ec50:	mrs	x1, tpidr_el0
   4ec54:	add	x1, x1, x0
   4ec58:	mov	x0, x19
   4ec5c:	bl	c410 <mpfr_cache@plt>
   4ec60:	mov	w20, w0
   4ec64:	b	4ec04 <mpfr_log_ui@@Base+0x70>
   4ec68:	add	x20, x29, #0xb0
   4ec6c:	mov	x0, x20
   4ec70:	bl	c010 <mpfr_mpz_init@plt>
   4ec74:	mov	x1, x26
   4ec78:	mov	x0, x20
   4ec7c:	bl	bd30 <__gmpz_set_ui@plt>
   4ec80:	mov	x2, #0x3                   	// #3
   4ec84:	mov	x1, x20
   4ec88:	mov	x0, x20
   4ec8c:	bl	c190 <__gmpz_mul_ui@plt>
   4ec90:	mov	w1, #0x2                   	// #2
   4ec94:	mov	x0, x20
   4ec98:	bl	cbf0 <__gmpz_sizeinbase@plt>
   4ec9c:	sub	x24, x0, #0x2
   4eca0:	str	x0, [x29, #144]
   4eca4:	mov	x0, x20
   4eca8:	bl	c200 <mpfr_mpz_clear@plt>
   4ecac:	cmp	x24, #0x3f
   4ecb0:	b.hi	4ecc0 <mpfr_log_ui@@Base+0x12c>  // b.pmore
   4ecb4:	mov	x0, #0x1                   	// #1
   4ecb8:	lsl	x0, x0, x24
   4ecbc:	sub	x26, x26, x0
   4ecc0:	ldr	x21, [x19]
   4ecc4:	mov	x23, x26
   4ecc8:	cmp	x21, #0x1
   4eccc:	b.eq	4ed1c <mpfr_log_ui@@Base+0x188>  // b.none
   4ecd0:	b.gt	4ecec <mpfr_log_ui@@Base+0x158>
   4ecd4:	adrp	x2, 54000 <mpfr_free_pool@@Base+0x2eec>
   4ecd8:	adrp	x0, 5c000 <mpfr_bases@@Base+0x22a8>
   4ecdc:	add	x2, x2, #0xabc
   4ece0:	add	x0, x0, #0x1c5
   4ece4:	mov	w1, #0x95                  	// #149
   4ece8:	bl	cbd0 <mpfr_assert_fail@plt>
   4ecec:	ldr	x0, [x19]
   4ecf0:	sub	x0, x0, #0x1
   4ecf4:	clz	x1, x0
   4ecf8:	mov	w0, #0x40                  	// #64
   4ecfc:	sub	w0, w0, w1
   4ed00:	sxtw	x0, w0
   4ed04:	add	x21, x21, x0
   4ed08:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   4ed0c:	add	x20, x21, #0xa
   4ed10:	cmp	x20, x0
   4ed14:	b.lt	4ed24 <mpfr_log_ui@@Base+0x190>  // b.tstop
   4ed18:	bl	c970 <mpfr_abort_prec_max@plt>
   4ed1c:	mov	x0, #0x0                   	// #0
   4ed20:	b	4ed04 <mpfr_log_ui@@Base+0x170>
   4ed24:	add	x21, x21, #0x9
   4ed28:	mov	x0, #0x40                  	// #64
   4ed2c:	sdiv	x21, x21, x0
   4ed30:	add	x21, x21, #0x1
   4ed34:	lsl	x0, x21, #1
   4ed38:	cmp	x0, #0x10
   4ed3c:	b.le	4f00c <mpfr_log_ui@@Base+0x478>
   4ed40:	lsl	x0, x21, #4
   4ed44:	str	x0, [x29, #288]
   4ed48:	bl	cd90 <mpfr_allocate_func@plt>
   4ed4c:	str	x0, [x29, #296]
   4ed50:	mrs	x22, tpidr_el0
   4ed54:	mov	w0, #0x1                   	// #1
   4ed58:	str	w0, [x29, #200]
   4ed5c:	ldr	x1, [x29, #296]
   4ed60:	str	x1, [x29, #216]
   4ed64:	str	w0, [x29, #232]
   4ed68:	str	x20, [x29, #192]
   4ed6c:	add	x21, x1, x21, lsl #3
   4ed70:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4ed74:	ldr	x1, [x0, #2592]
   4ed78:	add	x0, x0, #0xa20
   4ed7c:	blr	x1
   4ed80:	ldr	w0, [x22, x0]
   4ed84:	str	w0, [x29, #128]
   4ed88:	str	x20, [x29, #224]
   4ed8c:	str	x21, [x29, #248]
   4ed90:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4ed94:	ldr	x1, [x0, #2528]
   4ed98:	add	x0, x0, #0x9e0
   4ed9c:	blr	x1
   4eda0:	add	x1, x22, x0
   4eda4:	ldr	x0, [x22, x0]
   4eda8:	str	x0, [x29, #120]
   4edac:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4edb0:	ldr	x2, [x0, #2560]
   4edb4:	add	x0, x0, #0xa00
   4edb8:	blr	x2
   4edbc:	ldr	x2, [x22, x0]
   4edc0:	str	x2, [x29, #112]
   4edc4:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   4edc8:	str	x2, [x1]
   4edcc:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   4edd0:	str	x1, [x22, x0]
   4edd4:	cbnz	x26, 4f028 <mpfr_log_ui@@Base+0x494>
   4edd8:	mov	x26, x24
   4eddc:	mov	x0, #0x40                  	// #64
   4ede0:	str	x0, [x29, #136]
   4ede4:	ldr	x0, [x29, #144]
   4ede8:	mov	w1, #0x41                  	// #65
   4edec:	add	x0, x0, #0x3
   4edf0:	clz	x0, x0
   4edf4:	sub	w0, w1, w0
   4edf8:	str	w0, [x29, #100]
   4edfc:	add	x27, x29, #0x100
   4ee00:	mov	x1, #0x20                  	// #32
   4ee04:	mov	x0, x27
   4ee08:	bl	cb10 <mpfr_init2@plt>
   4ee0c:	cmp	x23, #0x0
   4ee10:	mov	w3, #0x2                   	// #2
   4ee14:	cneg	x1, x23, lt  // lt = tstop
   4ee18:	mov	x0, x27
   4ee1c:	mov	x2, #0x0                   	// #0
   4ee20:	mov	x28, #0x0                   	// #0
   4ee24:	bl	c680 <mpfr_set_ui_2exp@plt>
   4ee28:	mov	x1, x27
   4ee2c:	mov	x0, x27
   4ee30:	mov	w2, #0x2                   	// #2
   4ee34:	bl	c260 <mpfr_log2@plt>
   4ee38:	mov	x2, x27
   4ee3c:	mov	x1, x26
   4ee40:	mov	x0, x27
   4ee44:	mov	w3, #0x3                   	// #3
   4ee48:	bl	cae0 <mpfr_ui_sub@plt>
   4ee4c:	mov	x2, x27
   4ee50:	mov	w3, #0x2                   	// #2
   4ee54:	mov	x1, x20
   4ee58:	mov	x0, x27
   4ee5c:	bl	c380 <mpfr_ui_div@plt>
   4ee60:	mov	w1, #0x2                   	// #2
   4ee64:	mov	x0, x27
   4ee68:	bl	bd20 <mpfr_get_ui@plt>
   4ee6c:	cmp	x0, #0x2
   4ee70:	mov	x5, #0x2                   	// #2
   4ee74:	csel	x25, x0, x5, cs  // cs = hs, nlast
   4ee78:	sub	x21, x25, #0x1
   4ee7c:	mov	w0, #0x41                  	// #65
   4ee80:	clz	x21, x21
   4ee84:	sub	w21, w0, w21
   4ee88:	mov	x0, x27
   4ee8c:	bl	c0f0 <mpfr_clear@plt>
   4ee90:	mov	x1, sp
   4ee94:	mov	w0, #0x30                  	// #48
   4ee98:	smsubl	x0, w21, w0, x1
   4ee9c:	mov	sp, x0
   4eea0:	add	x0, sp, #0x10
   4eea4:	str	x0, [x29, #152]
   4eea8:	sbfiz	x0, x21, #4, #32
   4eeac:	str	x0, [x29, #104]
   4eeb0:	ldr	x0, [x29, #152]
   4eeb4:	add	x27, x0, w21, sxtw #4
   4eeb8:	add	x21, x27, w21, sxtw #4
   4eebc:	ldr	x0, [x29, #152]
   4eec0:	add	x0, x0, x28
   4eec4:	bl	c010 <mpfr_mpz_init@plt>
   4eec8:	add	x0, x27, x28
   4eecc:	bl	c010 <mpfr_mpz_init@plt>
   4eed0:	add	x0, x21, x28
   4eed4:	bl	c010 <mpfr_mpz_init@plt>
   4eed8:	ldr	x0, [x29, #104]
   4eedc:	add	x28, x28, #0x10
   4eee0:	cmp	x28, x0
   4eee4:	b.ne	4eebc <mpfr_log_ui@@Base+0x328>  // b.any
   4eee8:	str	wzr, [sp]
   4eeec:	mov	x5, x25
   4eef0:	mov	x7, x26
   4eef4:	mov	x6, x23
   4eef8:	ldr	x0, [x29, #152]
   4eefc:	mov	x3, x21
   4ef00:	mov	x4, #0x1                   	// #1
   4ef04:	add	x25, x29, #0xc0
   4ef08:	mov	x2, x27
   4ef0c:	add	x1, x29, #0xa8
   4ef10:	bl	4ea04 <mpfr_fmms@@Base+0x8>
   4ef14:	mov	x1, x21
   4ef18:	mov	w2, #0x0                   	// #0
   4ef1c:	mov	x0, x25
   4ef20:	bl	c2d0 <mpfr_set_z@plt>
   4ef24:	add	x4, x29, #0xe0
   4ef28:	mov	x1, x27
   4ef2c:	mov	x28, x4
   4ef30:	mov	x0, x4
   4ef34:	mov	w2, #0x0                   	// #0
   4ef38:	bl	c2d0 <mpfr_set_z@plt>
   4ef3c:	ldr	x2, [x29, #168]
   4ef40:	mov	x1, x28
   4ef44:	mov	x0, x28
   4ef48:	mov	w3, #0x0                   	// #0
   4ef4c:	bl	c350 <mpfr_mul_2ui@plt>
   4ef50:	mov	x1, x25
   4ef54:	mov	x2, x28
   4ef58:	mov	w3, #0x0                   	// #0
   4ef5c:	mov	x0, x25
   4ef60:	bl	c6b0 <mpfr_div@plt>
   4ef64:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4ef68:	ldr	x1, [x0, #2576]
   4ef6c:	add	x0, x0, #0xa10
   4ef70:	blr	x1
   4ef74:	mov	w2, #0x0                   	// #0
   4ef78:	add	x1, x22, x0
   4ef7c:	mov	x0, x28
   4ef80:	bl	c410 <mpfr_cache@plt>
   4ef84:	mov	x1, x28
   4ef88:	mov	x2, x24
   4ef8c:	mov	x0, x28
   4ef90:	mov	w3, #0x0                   	// #0
   4ef94:	bl	bad0 <mpfr_mul_ui@plt>
   4ef98:	mov	x2, x28
   4ef9c:	mov	x28, #0x0                   	// #0
   4efa0:	mov	x1, x25
   4efa4:	mov	x0, x25
   4efa8:	mov	w3, #0x0                   	// #0
   4efac:	bl	c230 <mpfr_add@plt>
   4efb0:	ldr	x0, [x29, #152]
   4efb4:	add	x0, x0, x28
   4efb8:	bl	c200 <mpfr_mpz_clear@plt>
   4efbc:	add	x0, x27, x28
   4efc0:	bl	c200 <mpfr_mpz_clear@plt>
   4efc4:	add	x0, x21, x28
   4efc8:	bl	c200 <mpfr_mpz_clear@plt>
   4efcc:	ldr	x0, [x29, #104]
   4efd0:	add	x28, x28, #0x10
   4efd4:	cmp	x0, x28
   4efd8:	b.ne	4efb0 <mpfr_log_ui@@Base+0x41c>  // b.any
   4efdc:	cmn	x24, #0x5
   4efe0:	b.eq	4f070 <mpfr_log_ui@@Base+0x4dc>  // b.none
   4efe4:	ldr	x0, [x29, #144]
   4efe8:	add	x0, x0, #0x4
   4efec:	cmp	x0, #0x1
   4eff0:	b.hi	4f034 <mpfr_log_ui@@Base+0x4a0>  // b.pmore
   4eff4:	adrp	x2, 5c000 <mpfr_bases@@Base+0x22a8>
   4eff8:	add	x2, x2, #0x1ce
   4effc:	mov	w1, #0xda                  	// #218
   4f000:	adrp	x0, 5c000 <mpfr_bases@@Base+0x22a8>
   4f004:	add	x0, x0, #0x1c5
   4f008:	bl	cbd0 <mpfr_assert_fail@plt>
   4f00c:	add	x0, x29, #0x130
   4f010:	str	xzr, [x29, #288]
   4f014:	b	4ed4c <mpfr_log_ui@@Base+0x1b8>
   4f018:	sdiv	x23, x23, x0
   4f01c:	sub	x26, x26, #0x1
   4f020:	tbz	w23, #0, 4f018 <mpfr_log_ui@@Base+0x484>
   4f024:	b	4eddc <mpfr_log_ui@@Base+0x248>
   4f028:	mov	x26, x24
   4f02c:	mov	x0, #0x2                   	// #2
   4f030:	b	4f020 <mpfr_log_ui@@Base+0x48c>
   4f034:	ldr	w2, [x29, #100]
   4f038:	ldr	x1, [x29, #208]
   4f03c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4f040:	cmp	x1, x0
   4f044:	b.gt	4f078 <mpfr_log_ui@@Base+0x4e4>
   4f048:	ldr	x1, [x29, #136]
   4f04c:	mov	x0, #0xfffffffffffffeff    	// #-257
   4f050:	movk	x0, #0x7fff, lsl #48
   4f054:	sub	x0, x0, x20
   4f058:	cmp	x0, x1
   4f05c:	b.ge	4f14c <mpfr_log_ui@@Base+0x5b8>  // b.tcont
   4f060:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   4f064:	mov	w1, #0xde                  	// #222
   4f068:	add	x2, x2, #0xb94
   4f06c:	b	4f000 <mpfr_log_ui@@Base+0x46c>
   4f070:	mov	w2, #0x1                   	// #1
   4f074:	b	4f038 <mpfr_log_ui@@Base+0x4a4>
   4f078:	ldr	w0, [x29, #132]
   4f07c:	sub	x2, x20, w2, uxtw
   4f080:	ldr	x1, [x29, #192]
   4f084:	cmp	w0, #0x0
   4f088:	ldr	x0, [x29, #216]
   4f08c:	sub	x1, x1, #0x1
   4f090:	ldr	x3, [x19]
   4f094:	asr	x1, x1, #6
   4f098:	add	x1, x1, #0x1
   4f09c:	cinc	x3, x3, eq  // eq = none
   4f0a0:	bl	c400 <mpfr_round_p@plt>
   4f0a4:	cbz	w0, 4f048 <mpfr_log_ui@@Base+0x4b4>
   4f0a8:	ldr	w2, [x29, #132]
   4f0ac:	mov	x1, x25
   4f0b0:	ldr	w3, [x29, #200]
   4f0b4:	mov	x0, x19
   4f0b8:	bl	c730 <mpfr_set4@plt>
   4f0bc:	mov	w20, w0
   4f0c0:	ldr	x1, [x29, #288]
   4f0c4:	cbz	x1, 4f0d0 <mpfr_log_ui@@Base+0x53c>
   4f0c8:	ldr	x0, [x29, #296]
   4f0cc:	bl	ccc0 <mpfr_free_func@plt>
   4f0d0:	ldr	w2, [x29, #128]
   4f0d4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4f0d8:	ldr	x1, [x0, #2592]
   4f0dc:	add	x0, x0, #0xa20
   4f0e0:	blr	x1
   4f0e4:	add	x1, x22, x0
   4f0e8:	str	w2, [x22, x0]
   4f0ec:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4f0f0:	ldr	x2, [x0, #2528]
   4f0f4:	add	x0, x0, #0x9e0
   4f0f8:	blr	x2
   4f0fc:	ldr	x2, [x29, #120]
   4f100:	str	x2, [x22, x0]
   4f104:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4f108:	ldr	x2, [x0, #2560]
   4f10c:	add	x0, x0, #0xa00
   4f110:	blr	x2
   4f114:	ldr	x2, [x29, #112]
   4f118:	str	x2, [x22, x0]
   4f11c:	ldr	x0, [x19, #16]
   4f120:	ldr	x2, [x29, #120]
   4f124:	cmp	x2, x0
   4f128:	b.gt	4f1c8 <mpfr_log_ui@@Base+0x634>
   4f12c:	ldr	x2, [x29, #112]
   4f130:	cmp	x2, x0
   4f134:	b.lt	4f1c8 <mpfr_log_ui@@Base+0x634>  // b.tstop
   4f138:	cbz	w20, 4ec04 <mpfr_log_ui@@Base+0x70>
   4f13c:	ldr	w0, [x29, #128]
   4f140:	orr	w0, w0, #0x8
   4f144:	str	w0, [x1]
   4f148:	b	4ec04 <mpfr_log_ui@@Base+0x70>
   4f14c:	ldr	x0, [x29, #136]
   4f150:	ldr	x1, [x29, #288]
   4f154:	add	x20, x20, x0
   4f158:	mov	x0, #0x2                   	// #2
   4f15c:	sdiv	x0, x20, x0
   4f160:	str	x0, [x29, #136]
   4f164:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   4f168:	cmp	x20, x0
   4f16c:	b.ge	4ed18 <mpfr_log_ui@@Base+0x184>  // b.tcont
   4f170:	sub	x21, x20, #0x1
   4f174:	asr	x21, x21, #6
   4f178:	add	x21, x21, #0x1
   4f17c:	lsl	x0, x21, #4
   4f180:	str	x0, [x29, #288]
   4f184:	cbnz	x1, 4f1b8 <mpfr_log_ui@@Base+0x624>
   4f188:	bl	cd90 <mpfr_allocate_func@plt>
   4f18c:	str	x0, [x29, #296]
   4f190:	mov	w0, #0x1                   	// #1
   4f194:	str	x20, [x29, #192]
   4f198:	ldr	x1, [x29, #296]
   4f19c:	str	w0, [x29, #200]
   4f1a0:	str	x1, [x29, #216]
   4f1a4:	str	x20, [x29, #224]
   4f1a8:	add	x21, x1, x21, lsl #3
   4f1ac:	str	w0, [x29, #232]
   4f1b0:	str	x21, [x29, #248]
   4f1b4:	b	4edfc <mpfr_log_ui@@Base+0x268>
   4f1b8:	mov	x2, x0
   4f1bc:	ldr	x0, [x29, #296]
   4f1c0:	bl	c250 <mpfr_reallocate_func@plt>
   4f1c4:	b	4f18c <mpfr_log_ui@@Base+0x5f8>
   4f1c8:	ldr	w2, [x29, #132]
   4f1cc:	mov	w1, w20
   4f1d0:	mov	x0, x19
   4f1d4:	bl	cbc0 <mpfr_check_range@plt>
   4f1d8:	b	4ec60 <mpfr_log_ui@@Base+0xcc>

000000000004f1dc <mpfr_gamma_inc@@Base>:
   4f1dc:	sub	sp, sp, #0x2c0
   4f1e0:	stp	x29, x30, [sp]
   4f1e4:	mov	x29, sp
   4f1e8:	stp	x21, x22, [sp, #32]
   4f1ec:	mov	x21, x0
   4f1f0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4f1f4:	ldr	x22, [x1, #16]
   4f1f8:	stp	x19, x20, [sp, #16]
   4f1fc:	mov	x19, x1
   4f200:	stp	x23, x24, [sp, #48]
   4f204:	mov	x20, x2
   4f208:	mov	w23, w3
   4f20c:	stp	x25, x26, [sp, #64]
   4f210:	cmp	x22, x0
   4f214:	stp	x27, x28, [sp, #80]
   4f218:	b.le	4f260 <mpfr_gamma_inc@@Base+0x84>
   4f21c:	ldr	x1, [x2, #16]
   4f220:	cmp	x1, x0
   4f224:	b.gt	4f3e0 <mpfr_gamma_inc@@Base+0x204>
   4f228:	ldr	x0, [x20, #16]
   4f22c:	mov	x24, #0x2                   	// #2
   4f230:	movk	x24, #0x8000, lsl #48
   4f234:	cmp	x0, x24
   4f238:	b.eq	4f270 <mpfr_gamma_inc@@Base+0x94>  // b.none
   4f23c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   4f240:	cmp	x22, x1
   4f244:	b.eq	4f2a4 <mpfr_gamma_inc@@Base+0xc8>  // b.none
   4f248:	cmp	x0, x1
   4f24c:	b.ne	4f33c <mpfr_gamma_inc@@Base+0x160>  // b.any
   4f250:	ldr	w0, [x20, #8]
   4f254:	cmp	w0, #0x0
   4f258:	b.gt	4f2c8 <mpfr_gamma_inc@@Base+0xec>
   4f25c:	b	4f270 <mpfr_gamma_inc@@Base+0x94>
   4f260:	mov	x0, #0x2                   	// #2
   4f264:	movk	x0, #0x8000, lsl #48
   4f268:	cmp	x22, x0
   4f26c:	b.ne	4f228 <mpfr_gamma_inc@@Base+0x4c>  // b.any
   4f270:	mov	x0, #0x2                   	// #2
   4f274:	movk	x0, #0x8000, lsl #48
   4f278:	str	x0, [x21, #16]
   4f27c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4f280:	ldr	x1, [x0, #2592]
   4f284:	add	x0, x0, #0xa20
   4f288:	blr	x1
   4f28c:	mrs	x1, tpidr_el0
   4f290:	add	x0, x1, x0
   4f294:	ldr	w1, [x0]
   4f298:	orr	w1, w1, #0x4
   4f29c:	str	w1, [x0]
   4f2a0:	b	4f2d8 <mpfr_gamma_inc@@Base+0xfc>
   4f2a4:	ldr	w1, [x19, #8]
   4f2a8:	cmp	x0, x22
   4f2ac:	b.ne	4f300 <mpfr_gamma_inc@@Base+0x124>  // b.any
   4f2b0:	ldr	w0, [x20, #8]
   4f2b4:	cmp	w1, #0x0
   4f2b8:	b.le	4f2c4 <mpfr_gamma_inc@@Base+0xe8>
   4f2bc:	cmp	w0, #0x0
   4f2c0:	b.gt	4f270 <mpfr_gamma_inc@@Base+0x94>
   4f2c4:	tbnz	w0, #31, 4f270 <mpfr_gamma_inc@@Base+0x94>
   4f2c8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4f2cc:	str	x0, [x21, #16]
   4f2d0:	mov	w0, #0x1                   	// #1
   4f2d4:	str	w0, [x21, #8]
   4f2d8:	mov	w19, #0x0                   	// #0
   4f2dc:	mov	w0, w19
   4f2e0:	ldp	x29, x30, [sp]
   4f2e4:	ldp	x19, x20, [sp, #16]
   4f2e8:	ldp	x21, x22, [sp, #32]
   4f2ec:	ldp	x23, x24, [sp, #48]
   4f2f0:	ldp	x25, x26, [sp, #64]
   4f2f4:	ldp	x27, x28, [sp, #80]
   4f2f8:	add	sp, sp, #0x2c0
   4f2fc:	ret
   4f300:	cmp	w1, #0x0
   4f304:	b.le	4f310 <mpfr_gamma_inc@@Base+0x134>
   4f308:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4f30c:	b	4f2cc <mpfr_gamma_inc@@Base+0xf0>
   4f310:	mov	x0, x20
   4f314:	bl	c7a0 <mpfr_sgn@plt>
   4f318:	tbz	w0, #31, 4f324 <mpfr_gamma_inc@@Base+0x148>
   4f31c:	str	x24, [x21, #16]
   4f320:	b	4f27c <mpfr_gamma_inc@@Base+0xa0>
   4f324:	mov	x0, x20
   4f328:	mov	x2, #0x0                   	// #0
   4f32c:	mov	x1, #0x1                   	// #1
   4f330:	bl	bfd0 <mpfr_cmp_ui_2exp@plt>
   4f334:	tbz	w0, #31, 4f2c8 <mpfr_gamma_inc@@Base+0xec>
   4f338:	b	4f308 <mpfr_gamma_inc@@Base+0x12c>
   4f33c:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   4f340:	cmp	x22, x1
   4f344:	b.eq	4f368 <mpfr_gamma_inc@@Base+0x18c>  // b.none
   4f348:	cmp	x0, x1
   4f34c:	b.ne	4f3e0 <mpfr_gamma_inc@@Base+0x204>  // b.any
   4f350:	mov	w2, w23
   4f354:	mov	x1, x19
   4f358:	mov	x0, x21
   4f35c:	bl	c840 <mpfr_gamma@plt>
   4f360:	mov	w19, w0
   4f364:	b	4f2dc <mpfr_gamma_inc@@Base+0x100>
   4f368:	mov	x0, x20
   4f36c:	bl	c7a0 <mpfr_sgn@plt>
   4f370:	tbnz	w0, #31, 4f31c <mpfr_gamma_inc@@Base+0x140>
   4f374:	ldr	x1, [x20, #16]
   4f378:	cmp	x1, x22
   4f37c:	b.eq	4f350 <mpfr_gamma_inc@@Base+0x174>  // b.none
   4f380:	ldr	x0, [x20]
   4f384:	str	x0, [sp, #560]
   4f388:	ldr	x0, [x20, #24]
   4f38c:	str	x0, [sp, #584]
   4f390:	ldr	w0, [x20, #8]
   4f394:	cmp	w23, #0x2
   4f398:	str	x1, [sp, #576]
   4f39c:	neg	w0, w0
   4f3a0:	str	w0, [sp, #568]
   4f3a4:	b.eq	4f3d8 <mpfr_gamma_inc@@Base+0x1fc>  // b.none
   4f3a8:	cmp	w23, #0x3
   4f3ac:	mov	w0, #0x2                   	// #2
   4f3b0:	csel	w23, w23, w0, ne  // ne = any
   4f3b4:	add	x1, sp, #0x230
   4f3b8:	mov	w2, w23
   4f3bc:	mov	x0, x21
   4f3c0:	bl	ca70 <mpfr_eint@plt>
   4f3c4:	ldr	w1, [x21, #8]
   4f3c8:	neg	w19, w0
   4f3cc:	neg	w1, w1
   4f3d0:	str	w1, [x21, #8]
   4f3d4:	b	4f2dc <mpfr_gamma_inc@@Base+0x100>
   4f3d8:	mov	w23, #0x3                   	// #3
   4f3dc:	b	4f3b4 <mpfr_gamma_inc@@Base+0x1d8>
   4f3e0:	ldr	w0, [x20, #8]
   4f3e4:	tbnz	w0, #31, 4f270 <mpfr_gamma_inc@@Base+0x94>
   4f3e8:	mov	x0, x19
   4f3ec:	bl	c1f0 <mpfr_integer_p@plt>
   4f3f0:	mrs	x22, tpidr_el0
   4f3f4:	ldr	x1, [x21]
   4f3f8:	cbz	w0, 4f98c <mpfr_gamma_inc@@Base+0x7b0>
   4f3fc:	ldr	w0, [x19, #8]
   4f400:	tbz	w0, #31, 4f98c <mpfr_gamma_inc@@Base+0x7b0>
   4f404:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4f408:	ldr	x2, [x0, #2592]
   4f40c:	add	x0, x0, #0xa20
   4f410:	blr	x2
   4f414:	ldr	w0, [x22, x0]
   4f418:	str	w0, [sp, #120]
   4f41c:	add	x25, x1, #0xa
   4f420:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4f424:	ldr	x2, [x0, #2528]
   4f428:	add	x0, x0, #0x9e0
   4f42c:	blr	x2
   4f430:	add	x2, x22, x0
   4f434:	ldr	x0, [x22, x0]
   4f438:	str	x0, [sp, #128]
   4f43c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4f440:	ldr	x3, [x0, #2560]
   4f444:	add	x0, x0, #0xa00
   4f448:	blr	x3
   4f44c:	ldr	x3, [x22, x0]
   4f450:	str	x3, [sp, #136]
   4f454:	ldr	x3, [x19]
   4f458:	str	x3, [sp, #352]
   4f45c:	ldr	x3, [x19, #24]
   4f460:	str	x3, [sp, #376]
   4f464:	mov	w3, #0x1                   	// #1
   4f468:	str	w3, [sp, #360]
   4f46c:	ldr	x3, [x19, #16]
   4f470:	str	x3, [sp, #368]
   4f474:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   4f478:	str	x3, [x2]
   4f47c:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   4f480:	str	x2, [x22, x0]
   4f484:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   4f488:	cmp	x25, x0
   4f48c:	b.lt	4f494 <mpfr_gamma_inc@@Base+0x2b8>  // b.tstop
   4f490:	bl	c970 <mpfr_abort_prec_max@plt>
   4f494:	add	x24, x1, #0x9
   4f498:	mov	x1, #0x40                  	// #64
   4f49c:	sdiv	x24, x24, x1
   4f4a0:	add	x24, x24, #0x1
   4f4a4:	lsl	x0, x24, #1
   4f4a8:	cmp	x0, #0x10
   4f4ac:	b.le	4f6ec <mpfr_gamma_inc@@Base+0x510>
   4f4b0:	lsl	x0, x24, #4
   4f4b4:	str	x0, [sp, #560]
   4f4b8:	bl	cd90 <mpfr_allocate_func@plt>
   4f4bc:	str	x0, [sp, #568]
   4f4c0:	add	x26, sp, #0x120
   4f4c4:	mov	w0, #0x1                   	// #1
   4f4c8:	add	x28, sp, #0x160
   4f4cc:	ldr	x1, [sp, #568]
   4f4d0:	str	x25, [sp, #288]
   4f4d4:	str	w0, [sp, #296]
   4f4d8:	str	x1, [sp, #312]
   4f4dc:	add	x24, x1, x24, lsl #3
   4f4e0:	str	x24, [sp, #344]
   4f4e4:	add	x24, sp, #0x140
   4f4e8:	str	x25, [sp, #320]
   4f4ec:	str	w0, [sp, #328]
   4f4f0:	mov	x0, #0x40                  	// #64
   4f4f4:	str	x0, [sp, #112]
   4f4f8:	ldr	x0, [x19, #16]
   4f4fc:	add	x1, x0, #0x2
   4f500:	cmp	x1, x25
   4f504:	b.lt	4f50c <mpfr_gamma_inc@@Base+0x330>  // b.tstop
   4f508:	add	x25, x0, #0x3
   4f50c:	mov	x2, x20
   4f510:	mov	w3, #0x0                   	// #0
   4f514:	mov	x1, #0x1                   	// #1
   4f518:	mov	x0, x24
   4f51c:	bl	c380 <mpfr_ui_div@plt>
   4f520:	ldr	w3, [sp, #328]
   4f524:	mov	x1, x24
   4f528:	mov	x0, x26
   4f52c:	mov	w2, #0x0                   	// #0
   4f530:	bl	c730 <mpfr_set4@plt>
   4f534:	ldr	x27, [sp, #304]
   4f538:	mov	x4, #0x1                   	// #1
   4f53c:	stp	x27, x27, [sp, #96]
   4f540:	mov	x1, x4
   4f544:	mov	x0, x28
   4f548:	mov	x2, #0x0                   	// #0
   4f54c:	str	x4, [sp, #144]
   4f550:	bl	bfd0 <mpfr_cmp_ui_2exp@plt>
   4f554:	cmp	w0, #0x0
   4f558:	ldr	x4, [sp, #144]
   4f55c:	b.le	4f5b0 <mpfr_gamma_inc@@Base+0x3d4>
   4f560:	mov	w3, #0x0                   	// #0
   4f564:	mov	x2, x4
   4f568:	mov	x1, x24
   4f56c:	mov	x0, x24
   4f570:	str	x4, [sp, #144]
   4f574:	bl	bad0 <mpfr_mul_ui@plt>
   4f578:	mov	x1, x24
   4f57c:	mov	w2, #0x0                   	// #0
   4f580:	mov	x0, x24
   4f584:	bl	bdf0 <mpfr_neg@plt>
   4f588:	mov	x1, x24
   4f58c:	mov	x2, x20
   4f590:	mov	x0, x24
   4f594:	mov	w3, #0x0                   	// #0
   4f598:	bl	c6b0 <mpfr_div@plt>
   4f59c:	ldr	x0, [sp, #336]
   4f5a0:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   4f5a4:	ldr	x4, [sp, #144]
   4f5a8:	cmp	x0, x1
   4f5ac:	b.ne	4f6f8 <mpfr_gamma_inc@@Base+0x51c>  // b.any
   4f5b0:	cmp	x4, #0x1
   4f5b4:	b.ne	4f750 <mpfr_gamma_inc@@Base+0x574>  // b.any
   4f5b8:	mov	x4, #0x0                   	// #0
   4f5bc:	ldr	x1, [sp, #104]
   4f5c0:	sub	x0, x4, #0x1
   4f5c4:	add	x6, sp, #0x180
   4f5c8:	mov	w2, #0x0                   	// #0
   4f5cc:	add	x0, x0, x1
   4f5d0:	ldr	x1, [sp, #96]
   4f5d4:	add	x4, x1, x4, lsl #1
   4f5d8:	add	x1, x4, #0x1
   4f5dc:	add	x4, x4, #0x2
   4f5e0:	cmp	x0, x1
   4f5e4:	mov	x1, x6
   4f5e8:	csinc	x0, x4, x0, lt  // lt = tstop
   4f5ec:	sub	x4, x0, x27
   4f5f0:	stp	x6, x4, [sp, #96]
   4f5f4:	ldr	x0, [x20]
   4f5f8:	str	x0, [sp, #384]
   4f5fc:	ldr	x0, [x20, #24]
   4f600:	str	x0, [sp, #408]
   4f604:	ldr	w0, [x20, #8]
   4f608:	neg	w0, w0
   4f60c:	str	w0, [sp, #392]
   4f610:	ldr	x0, [x20, #16]
   4f614:	str	x0, [sp, #400]
   4f618:	mov	x0, x24
   4f61c:	bl	c7e0 <mpfr_exp@plt>
   4f620:	mov	x1, x26
   4f624:	mov	x2, x24
   4f628:	mov	x0, x26
   4f62c:	mov	w3, #0x0                   	// #0
   4f630:	bl	bdd0 <mpfr_mul@plt>
   4f634:	ldr	x0, [sp, #304]
   4f638:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   4f63c:	ldp	x6, x4, [sp, #96]
   4f640:	cmp	x0, x1
   4f644:	b.ne	4f650 <mpfr_gamma_inc@@Base+0x474>  // b.any
   4f648:	ldr	x0, [sp, #336]
   4f64c:	add	x27, x27, x0
   4f650:	cmp	x4, #0x2
   4f654:	mov	x0, #0x2                   	// #2
   4f658:	csel	x4, x4, x0, ge  // ge = tcont
   4f65c:	mov	x1, x6
   4f660:	add	x4, x4, x0
   4f664:	mov	w2, #0x0                   	// #0
   4f668:	mov	x0, x24
   4f66c:	str	x4, [sp, #104]
   4f670:	bl	ca70 <mpfr_eint@plt>
   4f674:	mov	x1, x24
   4f678:	mov	w2, #0x0                   	// #0
   4f67c:	mov	x0, x24
   4f680:	bl	bdf0 <mpfr_neg@plt>
   4f684:	ldr	x0, [sp, #304]
   4f688:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   4f68c:	ldr	x6, [sp, #336]
   4f690:	cmp	x0, x1
   4f694:	csel	x27, x27, x0, eq  // eq = none
   4f698:	mov	x1, x24
   4f69c:	mov	x2, x26
   4f6a0:	mov	x0, x26
   4f6a4:	mov	w3, #0x0                   	// #0
   4f6a8:	str	x6, [sp, #96]
   4f6ac:	bl	bbf0 <mpfr_sub@plt>
   4f6b0:	ldr	x0, [sp, #304]
   4f6b4:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   4f6b8:	ldp	x6, x4, [sp, #96]
   4f6bc:	cmp	x0, x1
   4f6c0:	b.ne	4f784 <mpfr_gamma_inc@@Base+0x5a8>  // b.any
   4f6c4:	ldr	x1, [sp, #112]
   4f6c8:	mov	x0, #0xfffffffffffffeff    	// #-257
   4f6cc:	movk	x0, #0x7fff, lsl #48
   4f6d0:	sub	x0, x0, x25
   4f6d4:	cmp	x0, x1
   4f6d8:	b.ge	4f90c <mpfr_gamma_inc@@Base+0x730>  // b.tcont
   4f6dc:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   4f6e0:	mov	w1, #0x1ee                 	// #494
   4f6e4:	add	x2, x2, #0xb94
   4f6e8:	b	4f760 <mpfr_gamma_inc@@Base+0x584>
   4f6ec:	add	x0, sp, #0x240
   4f6f0:	str	xzr, [sp, #560]
   4f6f4:	b	4f4bc <mpfr_gamma_inc@@Base+0x2e0>
   4f6f8:	ldr	x1, [sp, #96]
   4f6fc:	mov	x2, x24
   4f700:	mov	w3, #0x0                   	// #0
   4f704:	str	x4, [sp, #144]
   4f708:	cmp	x1, x0
   4f70c:	csel	x0, x1, x0, ge  // ge = tcont
   4f710:	mov	x1, x26
   4f714:	str	x0, [sp, #96]
   4f718:	mov	x0, x26
   4f71c:	bl	c230 <mpfr_add@plt>
   4f720:	ldr	x27, [sp, #304]
   4f724:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4f728:	ldr	x4, [sp, #144]
   4f72c:	cmp	x27, x0
   4f730:	b.ne	4f738 <mpfr_gamma_inc@@Base+0x55c>  // b.any
   4f734:	ldr	x27, [sp, #336]
   4f738:	add	x4, x4, #0x1
   4f73c:	ldr	x0, [sp, #104]
   4f740:	cmp	x0, x27
   4f744:	csel	x0, x0, x27, ge  // ge = tcont
   4f748:	str	x0, [sp, #104]
   4f74c:	b	4f540 <mpfr_gamma_inc@@Base+0x364>
   4f750:	b.hi	4f76c <mpfr_gamma_inc@@Base+0x590>  // b.pmore
   4f754:	adrp	x2, 5c000 <mpfr_bases@@Base+0x22a8>
   4f758:	add	x2, x2, #0x1da
   4f75c:	mov	w1, #0x1a2                 	// #418
   4f760:	adrp	x0, 5c000 <mpfr_bases@@Base+0x22a8>
   4f764:	add	x0, x0, #0x1e2
   4f768:	bl	cbd0 <mpfr_assert_fail@plt>
   4f76c:	sub	x4, x4, #0x1
   4f770:	clz	x0, x4
   4f774:	mov	w4, #0x40                  	// #64
   4f778:	sub	w4, w4, w0
   4f77c:	sxtw	x4, w4
   4f780:	b	4f5bc <mpfr_gamma_inc@@Base+0x3e0>
   4f784:	add	x4, x4, x27
   4f788:	sub	x1, x6, #0x1
   4f78c:	cmp	x4, x1
   4f790:	b.lt	4f798 <mpfr_gamma_inc@@Base+0x5bc>  // b.tstop
   4f794:	add	x6, x4, #0x1
   4f798:	sub	x6, x6, x0
   4f79c:	mov	x1, x28
   4f7a0:	mov	w2, #0x0                   	// #0
   4f7a4:	mov	x0, x24
   4f7a8:	str	x6, [sp, #96]
   4f7ac:	bl	c840 <mpfr_gamma@plt>
   4f7b0:	mov	x2, x28
   4f7b4:	mov	x1, x24
   4f7b8:	mov	w3, #0x0                   	// #0
   4f7bc:	mov	x0, x24
   4f7c0:	bl	bdd0 <mpfr_mul@plt>
   4f7c4:	mov	x2, x24
   4f7c8:	mov	x1, x26
   4f7cc:	mov	w3, #0x0                   	// #0
   4f7d0:	mov	x0, x26
   4f7d4:	bl	c6b0 <mpfr_div@plt>
   4f7d8:	ldr	x6, [sp, #96]
   4f7dc:	mov	x0, #0x4                   	// #4
   4f7e0:	mov	w3, #0x0                   	// #0
   4f7e4:	mov	x2, #0x0                   	// #0
   4f7e8:	cmp	x6, #0x1
   4f7ec:	mov	x1, #0xffffffffffffffff    	// #-1
   4f7f0:	csinc	x0, x0, x6, le
   4f7f4:	mov	x27, x0
   4f7f8:	mov	x0, x24
   4f7fc:	bl	bb00 <mpfr_set_si_2exp@plt>
   4f800:	mov	x2, x28
   4f804:	mov	x1, x24
   4f808:	mov	x0, x24
   4f80c:	mov	w3, #0x0                   	// #0
   4f810:	bl	be10 <mpfr_pow@plt>
   4f814:	ldr	w0, [sp, #328]
   4f818:	tbz	w0, #31, 4f82c <mpfr_gamma_inc@@Base+0x650>
   4f81c:	mov	x1, x26
   4f820:	mov	x0, x26
   4f824:	mov	w2, #0x0                   	// #0
   4f828:	bl	bdf0 <mpfr_neg@plt>
   4f82c:	ldr	x1, [sp, #304]
   4f830:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4f834:	cmp	x1, x0
   4f838:	b.le	4f6c4 <mpfr_gamma_inc@@Base+0x4e8>
   4f83c:	ldr	x1, [sp, #288]
   4f840:	cmp	w23, #0x0
   4f844:	ldr	x0, [sp, #312]
   4f848:	sub	x1, x1, #0x1
   4f84c:	ldr	x3, [x21]
   4f850:	asr	x1, x1, #6
   4f854:	sub	x2, x25, x27
   4f858:	add	x1, x1, #0x1
   4f85c:	cinc	x3, x3, eq  // eq = none
   4f860:	bl	c400 <mpfr_round_p@plt>
   4f864:	cbz	w0, 4f6c4 <mpfr_gamma_inc@@Base+0x4e8>
   4f868:	ldr	w3, [sp, #296]
   4f86c:	mov	x1, x26
   4f870:	mov	w2, w23
   4f874:	mov	x0, x21
   4f878:	bl	c730 <mpfr_set4@plt>
   4f87c:	mov	w19, w0
   4f880:	ldr	x1, [sp, #560]
   4f884:	cbz	x1, 4f890 <mpfr_gamma_inc@@Base+0x6b4>
   4f888:	ldr	x0, [sp, #568]
   4f88c:	bl	ccc0 <mpfr_free_func@plt>
   4f890:	ldr	w2, [sp, #120]
   4f894:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4f898:	ldr	x1, [x0, #2592]
   4f89c:	add	x0, x0, #0xa20
   4f8a0:	blr	x1
   4f8a4:	add	x1, x22, x0
   4f8a8:	str	w2, [x22, x0]
   4f8ac:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4f8b0:	ldr	x2, [x0, #2528]
   4f8b4:	add	x0, x0, #0x9e0
   4f8b8:	blr	x2
   4f8bc:	ldr	x2, [sp, #128]
   4f8c0:	str	x2, [x22, x0]
   4f8c4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4f8c8:	ldr	x2, [x0, #2560]
   4f8cc:	add	x0, x0, #0xa00
   4f8d0:	blr	x2
   4f8d4:	ldr	x2, [sp, #136]
   4f8d8:	str	x2, [x22, x0]
   4f8dc:	ldr	x0, [x21, #16]
   4f8e0:	ldr	x2, [sp, #128]
   4f8e4:	cmp	x2, x0
   4f8e8:	b.gt	4feec <mpfr_gamma_inc@@Base+0xd10>
   4f8ec:	ldr	x2, [sp, #136]
   4f8f0:	cmp	x2, x0
   4f8f4:	b.lt	4feec <mpfr_gamma_inc@@Base+0xd10>  // b.tstop
   4f8f8:	cbz	w19, 4f2dc <mpfr_gamma_inc@@Base+0x100>
   4f8fc:	ldr	w0, [sp, #120]
   4f900:	orr	w0, w0, #0x8
   4f904:	str	w0, [x1]
   4f908:	b	4f2dc <mpfr_gamma_inc@@Base+0x100>
   4f90c:	ldr	x0, [sp, #112]
   4f910:	ldr	x1, [sp, #560]
   4f914:	add	x25, x25, x0
   4f918:	mov	x0, #0x2                   	// #2
   4f91c:	sdiv	x0, x25, x0
   4f920:	str	x0, [sp, #112]
   4f924:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   4f928:	cmp	x25, x0
   4f92c:	b.ge	4f490 <mpfr_gamma_inc@@Base+0x2b4>  // b.tcont
   4f930:	sub	x0, x25, #0x1
   4f934:	asr	x0, x0, #6
   4f938:	add	x0, x0, #0x1
   4f93c:	mov	x27, x0
   4f940:	lsl	x0, x0, #4
   4f944:	str	x0, [sp, #560]
   4f948:	cbnz	x1, 4f97c <mpfr_gamma_inc@@Base+0x7a0>
   4f94c:	bl	cd90 <mpfr_allocate_func@plt>
   4f950:	str	x0, [sp, #568]
   4f954:	mov	w1, #0x1                   	// #1
   4f958:	str	x25, [sp, #288]
   4f95c:	ldr	x0, [sp, #568]
   4f960:	str	w1, [sp, #296]
   4f964:	str	x0, [sp, #312]
   4f968:	str	x25, [sp, #320]
   4f96c:	add	x0, x0, x27, lsl #3
   4f970:	str	w1, [sp, #328]
   4f974:	str	x0, [sp, #344]
   4f978:	b	4f4f8 <mpfr_gamma_inc@@Base+0x31c>
   4f97c:	mov	x2, x0
   4f980:	ldr	x0, [sp, #568]
   4f984:	bl	c250 <mpfr_reallocate_func@plt>
   4f988:	b	4f950 <mpfr_gamma_inc@@Base+0x774>
   4f98c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4f990:	ldr	x2, [x0, #2592]
   4f994:	add	x0, x0, #0xa20
   4f998:	blr	x2
   4f99c:	ldr	w0, [x22, x0]
   4f9a0:	str	w0, [sp, #112]
   4f9a4:	add	x25, x1, #0xd
   4f9a8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4f9ac:	ldr	x2, [x0, #2528]
   4f9b0:	add	x0, x0, #0x9e0
   4f9b4:	blr	x2
   4f9b8:	add	x2, x22, x0
   4f9bc:	ldr	x0, [x22, x0]
   4f9c0:	str	x0, [sp, #120]
   4f9c4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4f9c8:	ldr	x3, [x0, #2560]
   4f9cc:	add	x0, x0, #0xa00
   4f9d0:	blr	x3
   4f9d4:	ldr	x3, [x22, x0]
   4f9d8:	str	x3, [sp, #128]
   4f9dc:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   4f9e0:	str	x3, [x2]
   4f9e4:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   4f9e8:	str	x2, [x22, x0]
   4f9ec:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   4f9f0:	cmp	x25, x0
   4f9f4:	b.ge	4f490 <mpfr_gamma_inc@@Base+0x2b4>  // b.tcont
   4f9f8:	add	x24, x1, #0xc
   4f9fc:	mov	x1, #0x40                  	// #64
   4fa00:	sdiv	x24, x24, x1
   4fa04:	add	x24, x24, #0x1
   4fa08:	lsl	x0, x24, #1
   4fa0c:	cmp	x0, #0x10
   4fa10:	b.le	4fc30 <mpfr_gamma_inc@@Base+0xa54>
   4fa14:	lsl	x0, x24, #4
   4fa18:	str	x0, [sp, #416]
   4fa1c:	bl	cd90 <mpfr_allocate_func@plt>
   4fa20:	str	x0, [sp, #424]
   4fa24:	add	x28, sp, #0xe0
   4fa28:	mov	w0, #0x1                   	// #1
   4fa2c:	add	x27, sp, #0x100
   4fa30:	ldr	x1, [sp, #424]
   4fa34:	str	x25, [sp, #160]
   4fa38:	str	w0, [sp, #168]
   4fa3c:	str	x1, [sp, #184]
   4fa40:	add	x24, x1, x24, lsl #3
   4fa44:	mov	x1, #0x2                   	// #2
   4fa48:	str	x25, [sp, #192]
   4fa4c:	str	w0, [sp, #200]
   4fa50:	mov	x0, x28
   4fa54:	str	x24, [sp, #216]
   4fa58:	bl	cb10 <mpfr_init2@plt>
   4fa5c:	mov	x0, #0x40                  	// #64
   4fa60:	str	x0, [sp, #104]
   4fa64:	ldr	x0, [x19, #16]
   4fa68:	ldr	x1, [x19]
   4fa6c:	cmp	x0, #0x0
   4fa70:	b.gt	4fc3c <mpfr_gamma_inc@@Base+0xa60>
   4fa74:	mov	x2, #0x1                   	// #1
   4fa78:	sub	x0, x2, x0
   4fa7c:	mov	x2, #0xfffffffffffffeff    	// #-257
   4fa80:	movk	x2, #0x7fff, lsl #48
   4fa84:	sub	x1, x2, x1
   4fa88:	cmp	x0, x1
   4fa8c:	b.le	4faa8 <mpfr_gamma_inc@@Base+0x8cc>
   4fa90:	adrp	x2, 5c000 <mpfr_bases@@Base+0x22a8>
   4fa94:	adrp	x0, 5c000 <mpfr_bases@@Base+0x22a8>
   4fa98:	add	x2, x2, #0x1ee
   4fa9c:	add	x0, x0, #0x1e2
   4faa0:	mov	w1, #0xd2                  	// #210
   4faa4:	bl	cbd0 <mpfr_assert_fail@plt>
   4faa8:	ldr	x1, [x19, #16]
   4faac:	mov	x0, #0x1                   	// #1
   4fab0:	sub	x1, x0, x1
   4fab4:	ldr	x0, [x19]
   4fab8:	add	x1, x1, x0
   4fabc:	add	x1, x1, #0x1
   4fac0:	mov	x0, x28
   4fac4:	bl	bf50 <mpfr_set_prec@plt>
   4fac8:	add	x24, sp, #0xc0
   4facc:	ldr	x0, [x19, #16]
   4fad0:	mov	x2, x19
   4fad4:	mov	w3, #0x4                   	// #4
   4fad8:	mov	x1, #0x1                   	// #1
   4fadc:	cmp	x0, #0x0
   4fae0:	add	x26, sp, #0xa0
   4fae4:	csinc	x0, x0, xzr, gt
   4fae8:	str	x0, [sp, #136]
   4faec:	mov	x0, x24
   4faf0:	bl	c380 <mpfr_ui_div@plt>
   4faf4:	ldr	w3, [sp, #200]
   4faf8:	mov	x1, x24
   4fafc:	mov	x0, x26
   4fb00:	mov	w2, #0x4                   	// #4
   4fb04:	bl	c730 <mpfr_set4@plt>
   4fb08:	ldr	w0, [x19, #8]
   4fb0c:	tbz	w0, #31, 4fb30 <mpfr_gamma_inc@@Base+0x954>
   4fb10:	mov	x0, x27
   4fb14:	mov	x1, #0x20                  	// #32
   4fb18:	bl	cb10 <mpfr_init2@plt>
   4fb1c:	mov	x1, x26
   4fb20:	mov	x0, x27
   4fb24:	mov	w3, #0x1                   	// #1
   4fb28:	mov	w2, #0x2                   	// #2
   4fb2c:	bl	c730 <mpfr_set4@plt>
   4fb30:	mov	x0, #0x1                   	// #1
   4fb34:	mov	x2, x20
   4fb38:	mov	x1, x24
   4fb3c:	mov	w3, #0x2                   	// #2
   4fb40:	str	x0, [sp, #96]
   4fb44:	mov	x0, x24
   4fb48:	bl	bdd0 <mpfr_mul@plt>
   4fb4c:	ldr	x2, [sp, #96]
   4fb50:	mov	x1, x19
   4fb54:	mov	w3, #0x1                   	// #1
   4fb58:	mov	x0, x28
   4fb5c:	bl	c2f0 <mpfr_add_ui@plt>
   4fb60:	mov	x2, x28
   4fb64:	mov	x1, x24
   4fb68:	mov	w3, #0x4                   	// #4
   4fb6c:	mov	x0, x24
   4fb70:	bl	c6b0 <mpfr_div@plt>
   4fb74:	mov	x2, x24
   4fb78:	mov	x1, x26
   4fb7c:	mov	x0, x26
   4fb80:	mov	w3, #0x1                   	// #1
   4fb84:	bl	c230 <mpfr_add@plt>
   4fb88:	ldr	x4, [sp, #176]
   4fb8c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4fb90:	cmp	x4, x0
   4fb94:	b.ne	4fb9c <mpfr_gamma_inc@@Base+0x9c0>  // b.any
   4fb98:	ldr	x4, [sp, #208]
   4fb9c:	ldr	w0, [x19, #8]
   4fba0:	tbz	w0, #31, 4fbcc <mpfr_gamma_inc@@Base+0x9f0>
   4fba4:	ldr	w0, [sp, #200]
   4fba8:	mov	x2, x24
   4fbac:	str	x4, [sp, #144]
   4fbb0:	mov	x1, x27
   4fbb4:	cmp	w0, #0x0
   4fbb8:	mov	w3, #0x2                   	// #2
   4fbbc:	mov	x0, x27
   4fbc0:	b.le	4fc48 <mpfr_gamma_inc@@Base+0xa6c>
   4fbc4:	bl	c230 <mpfr_add@plt>
   4fbc8:	ldr	x4, [sp, #144]
   4fbcc:	ldr	x0, [sp, #208]
   4fbd0:	ldr	x2, [sp, #240]
   4fbd4:	add	x0, x25, x0
   4fbd8:	cmp	x0, x4
   4fbdc:	b.gt	4fbfc <mpfr_gamma_inc@@Base+0xa20>
   4fbe0:	ldr	w0, [sp, #232]
   4fbe4:	cmp	w0, #0x0
   4fbe8:	b.le	4fbfc <mpfr_gamma_inc@@Base+0xa20>
   4fbec:	ldr	x0, [x20, #16]
   4fbf0:	add	x0, x0, #0x1
   4fbf4:	cmp	x0, x2
   4fbf8:	b.lt	4fc50 <mpfr_gamma_inc@@Base+0xa74>  // b.tstop
   4fbfc:	ldr	x0, [sp, #136]
   4fc00:	str	x2, [sp, #144]
   4fc04:	cmp	x0, x2
   4fc08:	b.ge	4fc24 <mpfr_gamma_inc@@Base+0xa48>  // b.tcont
   4fc0c:	ldr	x1, [sp, #224]
   4fc10:	mov	x0, x28
   4fc14:	add	x1, x1, #0x1
   4fc18:	bl	bf50 <mpfr_set_prec@plt>
   4fc1c:	ldr	x2, [sp, #144]
   4fc20:	str	x2, [sp, #136]
   4fc24:	ldr	x0, [sp, #96]
   4fc28:	add	x0, x0, #0x1
   4fc2c:	b	4fb34 <mpfr_gamma_inc@@Base+0x958>
   4fc30:	add	x0, sp, #0x1b0
   4fc34:	str	xzr, [sp, #416]
   4fc38:	b	4fa20 <mpfr_gamma_inc@@Base+0x844>
   4fc3c:	cmp	x1, x0
   4fc40:	csel	x1, x1, x0, ge  // ge = tcont
   4fc44:	b	4fabc <mpfr_gamma_inc@@Base+0x8e0>
   4fc48:	bl	bbf0 <mpfr_sub@plt>
   4fc4c:	b	4fbc8 <mpfr_gamma_inc@@Base+0x9ec>
   4fc50:	ldr	w0, [x19, #8]
   4fc54:	tbz	w0, #31, 4fd04 <mpfr_gamma_inc@@Base+0xb28>
   4fc58:	ldr	x0, [sp, #176]
   4fc5c:	ldr	x1, [sp, #272]
   4fc60:	sub	x0, x1, x0
   4fc64:	str	x0, [sp, #136]
   4fc68:	mov	x0, x27
   4fc6c:	bl	c0f0 <mpfr_clear@plt>
   4fc70:	mov	x1, x20
   4fc74:	mov	w2, #0x1                   	// #1
   4fc78:	mov	x0, x24
   4fc7c:	bl	c7e0 <mpfr_exp@plt>
   4fc80:	mov	x2, x24
   4fc84:	mov	x1, x26
   4fc88:	mov	w3, #0x1                   	// #1
   4fc8c:	mov	x0, x26
   4fc90:	bl	c6b0 <mpfr_div@plt>
   4fc94:	mov	x2, x19
   4fc98:	mov	x1, x20
   4fc9c:	mov	w3, #0x1                   	// #1
   4fca0:	mov	x0, x24
   4fca4:	bl	be10 <mpfr_pow@plt>
   4fca8:	mov	x1, x26
   4fcac:	mov	x2, x24
   4fcb0:	mov	w3, #0x1                   	// #1
   4fcb4:	mov	x0, x26
   4fcb8:	bl	bdd0 <mpfr_mul@plt>
   4fcbc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4fcc0:	ldr	x1, [x0, #2592]
   4fcc4:	add	x0, x0, #0xa20
   4fcc8:	blr	x1
   4fccc:	add	x3, x22, x0
   4fcd0:	mov	x1, x19
   4fcd4:	mov	w2, #0x1                   	// #1
   4fcd8:	str	wzr, [x22, x0]
   4fcdc:	mov	x0, x24
   4fce0:	str	x3, [sp, #144]
   4fce4:	bl	c840 <mpfr_gamma@plt>
   4fce8:	ldr	x3, [sp, #144]
   4fcec:	ldr	w0, [x3]
   4fcf0:	tbz	w0, #1, 4fd0c <mpfr_gamma_inc@@Base+0xb30>
   4fcf4:	adrp	x2, 5c000 <mpfr_bases@@Base+0x22a8>
   4fcf8:	mov	w1, #0x122                 	// #290
   4fcfc:	add	x2, x2, #0x251
   4fd00:	b	4f760 <mpfr_gamma_inc@@Base+0x584>
   4fd04:	str	xzr, [sp, #136]
   4fd08:	b	4fc70 <mpfr_gamma_inc@@Base+0xa94>
   4fd0c:	ldr	x6, [sp, #176]
   4fd10:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4fd14:	ldr	x4, [sp, #208]
   4fd18:	cmp	x6, x0
   4fd1c:	b.ne	4fd34 <mpfr_gamma_inc@@Base+0xb58>  // b.any
   4fd20:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4fd24:	ldr	x1, [x0, #2528]
   4fd28:	add	x0, x0, #0x9e0
   4fd2c:	blr	x1
   4fd30:	ldr	x6, [x22, x0]
   4fd34:	mov	x2, x26
   4fd38:	mov	x1, x24
   4fd3c:	mov	x0, x26
   4fd40:	mov	w3, #0x1                   	// #1
   4fd44:	stp	x6, x4, [sp, #144]
   4fd48:	bl	bbf0 <mpfr_sub@plt>
   4fd4c:	ldr	x5, [sp, #176]
   4fd50:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4fd54:	ldp	x6, x4, [sp, #144]
   4fd58:	cmp	x5, x0
   4fd5c:	ldr	x0, [sp, #136]
   4fd60:	add	x1, x0, #0x1
   4fd64:	ldr	x0, [sp, #96]
   4fd68:	csel	x2, x4, x5, eq  // eq = none
   4fd6c:	lsl	x0, x0, #1
   4fd70:	cmn	x0, #0x6
   4fd74:	b.eq	4fdf4 <mpfr_gamma_inc@@Base+0xc18>  // b.none
   4fd78:	add	x3, x0, #0x7
   4fd7c:	cmp	x3, #0x1
   4fd80:	b.hi	4fd94 <mpfr_gamma_inc@@Base+0xbb8>  // b.pmore
   4fd84:	adrp	x2, 5c000 <mpfr_bases@@Base+0x22a8>
   4fd88:	mov	w1, #0x12e                 	// #302
   4fd8c:	add	x2, x2, #0x27b
   4fd90:	b	4f760 <mpfr_gamma_inc@@Base+0x584>
   4fd94:	add	x0, x0, #0x6
   4fd98:	mov	w3, #0x40                  	// #64
   4fd9c:	clz	x0, x0
   4fda0:	sub	w0, w3, w0
   4fda4:	sxtw	x0, w0
   4fda8:	add	x0, x1, x0
   4fdac:	add	x0, x0, x6
   4fdb0:	cmp	x4, x0
   4fdb4:	b.ne	4fdfc <mpfr_gamma_inc@@Base+0xc20>  // b.any
   4fdb8:	sub	x4, x4, x2
   4fdbc:	add	x4, x4, #0x2
   4fdc0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4fdc4:	cmp	x5, x0
   4fdc8:	b.gt	4fe28 <mpfr_gamma_inc@@Base+0xc4c>
   4fdcc:	ldr	x1, [sp, #104]
   4fdd0:	mov	x0, #0xfffffffffffffeff    	// #-257
   4fdd4:	movk	x0, #0x7fff, lsl #48
   4fdd8:	sub	x0, x0, x25
   4fddc:	cmp	x0, x1
   4fde0:	b.ge	4ff00 <mpfr_gamma_inc@@Base+0xd24>  // b.tcont
   4fde4:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   4fde8:	mov	w1, #0x148                 	// #328
   4fdec:	add	x2, x2, #0xb94
   4fdf0:	b	4f760 <mpfr_gamma_inc@@Base+0x584>
   4fdf4:	mov	x0, #0x0                   	// #0
   4fdf8:	b	4fda8 <mpfr_gamma_inc@@Base+0xbcc>
   4fdfc:	csel	x4, x4, x0, ge  // ge = tcont
   4fe00:	cmp	x2, #0x0
   4fe04:	ccmp	x2, x4, #0x0, le
   4fe08:	b.lt	4fe14 <mpfr_gamma_inc@@Base+0xc38>  // b.tstop
   4fe0c:	cmp	x2, x4
   4fe10:	b.ge	4fe20 <mpfr_gamma_inc@@Base+0xc44>  // b.tcont
   4fe14:	sub	x4, x4, x2
   4fe18:	add	x4, x4, #0x1
   4fe1c:	b	4fdc0 <mpfr_gamma_inc@@Base+0xbe4>
   4fe20:	mov	x4, #0x2                   	// #2
   4fe24:	b	4fdc0 <mpfr_gamma_inc@@Base+0xbe4>
   4fe28:	ldr	x1, [sp, #160]
   4fe2c:	cmp	w23, #0x0
   4fe30:	ldr	x0, [sp, #184]
   4fe34:	sub	x1, x1, #0x1
   4fe38:	ldr	x3, [x21]
   4fe3c:	asr	x1, x1, #6
   4fe40:	sub	x2, x25, x4
   4fe44:	add	x1, x1, #0x1
   4fe48:	cinc	x3, x3, eq  // eq = none
   4fe4c:	bl	c400 <mpfr_round_p@plt>
   4fe50:	cbz	w0, 4fdcc <mpfr_gamma_inc@@Base+0xbf0>
   4fe54:	mov	x0, x28
   4fe58:	bl	c0f0 <mpfr_clear@plt>
   4fe5c:	ldr	w3, [sp, #168]
   4fe60:	mov	x1, x26
   4fe64:	mov	w2, w23
   4fe68:	mov	x0, x21
   4fe6c:	bl	c730 <mpfr_set4@plt>
   4fe70:	mov	w19, w0
   4fe74:	ldr	x1, [sp, #416]
   4fe78:	cbz	x1, 4fe84 <mpfr_gamma_inc@@Base+0xca8>
   4fe7c:	ldr	x0, [sp, #424]
   4fe80:	bl	ccc0 <mpfr_free_func@plt>
   4fe84:	ldr	w2, [sp, #112]
   4fe88:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4fe8c:	ldr	x1, [x0, #2592]
   4fe90:	add	x0, x0, #0xa20
   4fe94:	blr	x1
   4fe98:	add	x1, x22, x0
   4fe9c:	str	w2, [x22, x0]
   4fea0:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4fea4:	ldr	x2, [x0, #2528]
   4fea8:	add	x0, x0, #0x9e0
   4feac:	blr	x2
   4feb0:	ldr	x2, [sp, #120]
   4feb4:	str	x2, [x22, x0]
   4feb8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   4febc:	ldr	x2, [x0, #2560]
   4fec0:	add	x0, x0, #0xa00
   4fec4:	blr	x2
   4fec8:	ldr	x2, [sp, #128]
   4fecc:	str	x2, [x22, x0]
   4fed0:	ldr	x0, [x21, #16]
   4fed4:	ldr	x2, [sp, #120]
   4fed8:	cmp	x2, x0
   4fedc:	b.gt	4feec <mpfr_gamma_inc@@Base+0xd10>
   4fee0:	ldr	x2, [sp, #128]
   4fee4:	cmp	x2, x0
   4fee8:	b.ge	4ff7c <mpfr_gamma_inc@@Base+0xda0>  // b.tcont
   4feec:	mov	w2, w23
   4fef0:	mov	w1, w19
   4fef4:	mov	x0, x21
   4fef8:	bl	cbc0 <mpfr_check_range@plt>
   4fefc:	b	4f360 <mpfr_gamma_inc@@Base+0x184>
   4ff00:	ldr	x0, [sp, #104]
   4ff04:	ldr	x1, [sp, #416]
   4ff08:	add	x25, x25, x0
   4ff0c:	mov	x0, #0x2                   	// #2
   4ff10:	sdiv	x0, x25, x0
   4ff14:	str	x0, [sp, #104]
   4ff18:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   4ff1c:	cmp	x25, x0
   4ff20:	b.ge	4f490 <mpfr_gamma_inc@@Base+0x2b4>  // b.tcont
   4ff24:	sub	x24, x25, #0x1
   4ff28:	asr	x24, x24, #6
   4ff2c:	add	x24, x24, #0x1
   4ff30:	lsl	x0, x24, #4
   4ff34:	str	x0, [sp, #416]
   4ff38:	cbnz	x1, 4ff6c <mpfr_gamma_inc@@Base+0xd90>
   4ff3c:	bl	cd90 <mpfr_allocate_func@plt>
   4ff40:	str	x0, [sp, #424]
   4ff44:	mov	w1, #0x1                   	// #1
   4ff48:	str	x25, [sp, #160]
   4ff4c:	ldr	x0, [sp, #424]
   4ff50:	str	w1, [sp, #168]
   4ff54:	str	x0, [sp, #184]
   4ff58:	str	x25, [sp, #192]
   4ff5c:	add	x24, x0, x24, lsl #3
   4ff60:	str	w1, [sp, #200]
   4ff64:	str	x24, [sp, #216]
   4ff68:	b	4fa64 <mpfr_gamma_inc@@Base+0x888>
   4ff6c:	mov	x2, x0
   4ff70:	ldr	x0, [sp, #424]
   4ff74:	bl	c250 <mpfr_reallocate_func@plt>
   4ff78:	b	4ff40 <mpfr_gamma_inc@@Base+0xd64>
   4ff7c:	cbz	w19, 4f2dc <mpfr_gamma_inc@@Base+0x100>
   4ff80:	ldr	w0, [sp, #112]
   4ff84:	b	4f900 <mpfr_gamma_inc@@Base+0x724>
   4ff88:	stp	x29, x30, [sp, #-128]!
   4ff8c:	mov	x29, sp
   4ff90:	stp	x19, x20, [sp, #16]
   4ff94:	mov	x20, x1
   4ff98:	mov	x19, x0
   4ff9c:	stp	x21, x22, [sp, #32]
   4ffa0:	stp	x23, x24, [sp, #48]
   4ffa4:	stp	x25, x26, [sp, #64]
   4ffa8:	bl	c010 <mpfr_mpz_init@plt>
   4ffac:	mov	x0, #0x4                   	// #4
   4ffb0:	ldr	x1, [x20, #16]
   4ffb4:	movk	x0, #0x8000, lsl #48
   4ffb8:	cmp	x1, x0
   4ffbc:	b.ne	4ffe4 <mpfr_gamma_inc@@Base+0xe08>  // b.any
   4ffc0:	add	x1, x20, #0x20
   4ffc4:	mov	x0, x19
   4ffc8:	bl	c020 <__gmpz_set@plt>
   4ffcc:	ldp	x19, x20, [sp, #16]
   4ffd0:	ldp	x21, x22, [sp, #32]
   4ffd4:	ldp	x23, x24, [sp, #48]
   4ffd8:	ldp	x25, x26, [sp, #64]
   4ffdc:	ldp	x29, x30, [sp], #128
   4ffe0:	ret
   4ffe4:	mov	x0, #0x40                  	// #64
   4ffe8:	str	x0, [sp, #96]
   4ffec:	add	x0, sp, #0x58
   4fff0:	str	x0, [sp, #120]
   4fff4:	mov	w0, #0x1                   	// #1
   4fff8:	str	w0, [sp, #104]
   4fffc:	add	x20, sp, #0x60
   50000:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   50004:	ldr	x2, [x0, #2592]
   50008:	add	x0, x0, #0xa20
   5000c:	blr	x2
   50010:	mrs	x2, tpidr_el0
   50014:	add	x25, x2, x0
   50018:	ldr	w26, [x2, x0]
   5001c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   50020:	ldr	x3, [x0, #2528]
   50024:	add	x0, x0, #0x9e0
   50028:	blr	x3
   5002c:	add	x22, x2, x0
   50030:	ldr	x24, [x2, x0]
   50034:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   50038:	ldr	x3, [x0, #2560]
   5003c:	add	x0, x0, #0xa00
   50040:	blr	x3
   50044:	add	x21, x2, x0
   50048:	mov	w3, #0x0                   	// #0
   5004c:	ldr	x23, [x2, x0]
   50050:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   50054:	str	x0, [x22]
   50058:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   5005c:	mov	x2, #0x0                   	// #0
   50060:	str	x0, [x21]
   50064:	mov	x0, x20
   50068:	bl	bb00 <mpfr_set_si_2exp@plt>
   5006c:	mov	x1, x20
   50070:	mov	x0, x19
   50074:	mov	w2, #0x0                   	// #0
   50078:	bl	be80 <mpfr_get_z@plt>
   5007c:	str	x23, [x21]
   50080:	str	x24, [x22]
   50084:	str	w26, [x25]
   50088:	b	4ffcc <mpfr_gamma_inc@@Base+0xdf0>

000000000005008c <mpfr_ubf_mul_exact@@Base>:
   5008c:	stp	x29, x30, [sp, #-96]!
   50090:	mov	x29, sp
   50094:	stp	x19, x20, [sp, #16]
   50098:	mov	x19, x0
   5009c:	ldr	w0, [x1, #8]
   500a0:	stp	x21, x22, [sp, #32]
   500a4:	mov	x21, x1
   500a8:	ldr	w1, [x2, #8]
   500ac:	stp	x23, x24, [sp, #48]
   500b0:	mov	x20, x2
   500b4:	mul	w0, w0, w1
   500b8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   500bc:	str	w0, [x19, #8]
   500c0:	ldr	x0, [x21, #16]
   500c4:	cmp	x0, x1
   500c8:	b.le	50110 <mpfr_ubf_mul_exact@@Base+0x84>
   500cc:	ldr	x2, [x2, #16]
   500d0:	cmp	x2, x1
   500d4:	b.gt	5013c <mpfr_ubf_mul_exact@@Base+0xb0>
   500d8:	ldr	x2, [x20, #16]
   500dc:	mov	x1, #0x2                   	// #2
   500e0:	movk	x1, #0x8000, lsl #48
   500e4:	cmp	x2, x1
   500e8:	b.eq	50120 <mpfr_ubf_mul_exact@@Base+0x94>  // b.none
   500ec:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   500f0:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   500f4:	cmp	x0, x3
   500f8:	b.ne	5012c <mpfr_ubf_mul_exact@@Base+0xa0>  // b.any
   500fc:	cmp	x2, x1
   50100:	b.eq	50120 <mpfr_ubf_mul_exact@@Base+0x94>  // b.none
   50104:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   50108:	str	x0, [x19, #16]
   5010c:	b	501fc <mpfr_ubf_mul_exact@@Base+0x170>
   50110:	mov	x1, #0x2                   	// #2
   50114:	movk	x1, #0x8000, lsl #48
   50118:	cmp	x0, x1
   5011c:	b.ne	500d8 <mpfr_ubf_mul_exact@@Base+0x4c>  // b.any
   50120:	mov	x0, #0x2                   	// #2
   50124:	movk	x0, #0x8000, lsl #48
   50128:	b	50108 <mpfr_ubf_mul_exact@@Base+0x7c>
   5012c:	cmp	x2, x3
   50130:	b.ne	501f8 <mpfr_ubf_mul_exact@@Base+0x16c>  // b.any
   50134:	cmp	x0, x1
   50138:	b	50100 <mpfr_ubf_mul_exact@@Base+0x74>
   5013c:	ldr	x0, [x20]
   50140:	ldr	x2, [x21]
   50144:	sub	x0, x0, #0x1
   50148:	ldr	x22, [x19, #24]
   5014c:	sub	x2, x2, #0x1
   50150:	asr	x0, x0, #6
   50154:	asr	x3, x2, #6
   50158:	orr	x2, x0, x2, asr #6
   5015c:	ldr	x1, [x20, #24]
   50160:	ldr	x5, [x21, #24]
   50164:	cbnz	x2, 50210 <mpfr_ubf_mul_exact@@Base+0x184>
   50168:	ldr	x2, [x1]
   5016c:	ldr	x0, [x5]
   50170:	umulh	x1, x0, x2
   50174:	mul	x0, x0, x2
   50178:	stp	x0, x1, [x22]
   5017c:	tbnz	x1, #63, 50264 <mpfr_ubf_mul_exact@@Base+0x1d8>
   50180:	extr	x1, x1, x0, #63
   50184:	lsl	x0, x0, #1
   50188:	stp	x0, x1, [x22]
   5018c:	mov	w2, #0x1                   	// #1
   50190:	ldr	x1, [x21, #16]
   50194:	mov	x3, #0x4                   	// #4
   50198:	movk	x3, #0x8000, lsl #48
   5019c:	sxtw	x22, w2
   501a0:	cmp	x1, x3
   501a4:	b.eq	5026c <mpfr_ubf_mul_exact@@Base+0x1e0>  // b.none
   501a8:	ldr	x0, [x20, #16]
   501ac:	cmp	x0, x3
   501b0:	b.eq	5026c <mpfr_ubf_mul_exact@@Base+0x1e0>  // b.none
   501b4:	add	x1, x1, x0
   501b8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   501bc:	ldr	x2, [x0, #2528]
   501c0:	add	x0, x0, #0x9e0
   501c4:	blr	x2
   501c8:	mrs	x2, tpidr_el0
   501cc:	sub	x1, x1, x22
   501d0:	ldr	x0, [x2, x0]
   501d4:	cmp	x0, x1
   501d8:	b.gt	5026c <mpfr_ubf_mul_exact@@Base+0x1e0>
   501dc:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   501e0:	ldr	x3, [x0, #2560]
   501e4:	add	x0, x0, #0xa00
   501e8:	blr	x3
   501ec:	ldr	x0, [x2, x0]
   501f0:	cmp	x0, x1
   501f4:	b.lt	5026c <mpfr_ubf_mul_exact@@Base+0x1e0>  // b.tstop
   501f8:	str	x1, [x19, #16]
   501fc:	ldp	x19, x20, [sp, #16]
   50200:	ldp	x21, x22, [sp, #32]
   50204:	ldp	x23, x24, [sp, #48]
   50208:	ldp	x29, x30, [sp], #96
   5020c:	ret
   50210:	add	x24, x3, #0x1
   50214:	add	x23, x0, #0x1
   50218:	cmp	x3, x0
   5021c:	b.lt	50254 <mpfr_ubf_mul_exact@@Base+0x1c8>  // b.tstop
   50220:	mov	x3, x1
   50224:	mov	x4, x23
   50228:	mov	x2, x24
   5022c:	mov	x1, x5
   50230:	mov	x0, x22
   50234:	bl	c830 <__gmpn_mul@plt>
   50238:	tbnz	x0, #63, 50264 <mpfr_ubf_mul_exact@@Base+0x1d8>
   5023c:	add	x2, x24, x23
   50240:	mov	x1, x22
   50244:	mov	x0, x22
   50248:	mov	w3, #0x1                   	// #1
   5024c:	bl	bd40 <__gmpn_lshift@plt>
   50250:	b	5018c <mpfr_ubf_mul_exact@@Base+0x100>
   50254:	mov	x4, x24
   50258:	mov	x3, x5
   5025c:	mov	x2, x23
   50260:	b	50230 <mpfr_ubf_mul_exact@@Base+0x1a4>
   50264:	mov	w2, #0x0                   	// #0
   50268:	b	50190 <mpfr_ubf_mul_exact@@Base+0x104>
   5026c:	add	x23, x19, #0x20
   50270:	mov	x0, x23
   50274:	bl	c010 <mpfr_mpz_init@plt>
   50278:	add	x0, sp, #0x40
   5027c:	mov	x1, x21
   50280:	mov	x21, x0
   50284:	bl	4ff88 <mpfr_gamma_inc@@Base+0xdac>
   50288:	add	x2, sp, #0x50
   5028c:	mov	x1, x20
   50290:	mov	x0, x2
   50294:	mov	x20, x2
   50298:	bl	4ff88 <mpfr_gamma_inc@@Base+0xdac>
   5029c:	mov	x2, x20
   502a0:	mov	x1, x21
   502a4:	mov	x0, x23
   502a8:	bl	ca50 <__gmpz_add@plt>
   502ac:	mov	x0, x21
   502b0:	bl	c200 <mpfr_mpz_clear@plt>
   502b4:	mov	x0, x20
   502b8:	bl	c200 <mpfr_mpz_clear@plt>
   502bc:	mov	x0, x23
   502c0:	mov	x2, x22
   502c4:	mov	x1, x23
   502c8:	bl	bcb0 <__gmpz_sub_ui@plt>
   502cc:	mov	x0, #0x4                   	// #4
   502d0:	b	50124 <mpfr_ubf_mul_exact@@Base+0x98>

00000000000502d4 <mpfr_ubf_exp_less_p@@Base>:
   502d4:	stp	x29, x30, [sp, #-80]!
   502d8:	mov	x29, sp
   502dc:	stp	x19, x20, [sp, #16]
   502e0:	add	x20, sp, #0x30
   502e4:	add	x19, sp, #0x40
   502e8:	str	x21, [sp, #32]
   502ec:	mov	x21, x1
   502f0:	mov	x1, x0
   502f4:	mov	x0, x20
   502f8:	bl	4ff88 <mpfr_gamma_inc@@Base+0xdac>
   502fc:	mov	x1, x21
   50300:	mov	x0, x19
   50304:	bl	4ff88 <mpfr_gamma_inc@@Base+0xdac>
   50308:	mov	x1, x19
   5030c:	mov	x0, x20
   50310:	bl	c960 <__gmpz_cmp@plt>
   50314:	mov	w21, w0
   50318:	mov	x0, x20
   5031c:	bl	c200 <mpfr_mpz_clear@plt>
   50320:	mov	x0, x19
   50324:	bl	c200 <mpfr_mpz_clear@plt>
   50328:	lsr	w0, w21, #31
   5032c:	ldp	x19, x20, [sp, #16]
   50330:	ldr	x21, [sp, #32]
   50334:	ldp	x29, x30, [sp], #80
   50338:	ret

000000000005033c <mpfr_ubf_zexp2exp@@Base>:
   5033c:	stp	x29, x30, [sp, #-112]!
   50340:	mov	x29, sp
   50344:	ldr	w1, [x0, #4]
   50348:	stp	x19, x20, [sp, #16]
   5034c:	stp	x21, x22, [sp, #32]
   50350:	stp	x23, x24, [sp, #48]
   50354:	stp	x25, x26, [sp, #64]
   50358:	cbz	w1, 50424 <mpfr_ubf_zexp2exp@@Base+0xe8>
   5035c:	mov	x20, x0
   50360:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   50364:	ldr	x2, [x0, #2592]
   50368:	add	x0, x0, #0xa20
   5036c:	blr	x2
   50370:	mrs	x2, tpidr_el0
   50374:	add	x19, sp, #0x50
   50378:	add	x25, x2, x0
   5037c:	ldr	w26, [x2, x0]
   50380:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   50384:	ldr	x3, [x0, #2528]
   50388:	add	x0, x0, #0x9e0
   5038c:	blr	x3
   50390:	add	x22, x2, x0
   50394:	ldr	x24, [x2, x0]
   50398:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   5039c:	ldr	x3, [x0, #2560]
   503a0:	add	x0, x0, #0xa00
   503a4:	blr	x3
   503a8:	cmp	w1, #0x0
   503ac:	add	x21, x2, x0
   503b0:	cneg	w1, w1, lt  // lt = tstop
   503b4:	ldr	x23, [x2, x0]
   503b8:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   503bc:	str	x0, [x22]
   503c0:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   503c4:	sbfiz	x1, x1, #6, #32
   503c8:	str	x0, [x21]
   503cc:	mov	x0, x19
   503d0:	bl	cb10 <mpfr_init2@plt>
   503d4:	mov	x1, x20
   503d8:	mov	w2, #0x0                   	// #0
   503dc:	mov	x0, x19
   503e0:	bl	c2d0 <mpfr_set_z@plt>
   503e4:	mov	w1, #0x1                   	// #1
   503e8:	mov	x0, x19
   503ec:	bl	c220 <mpfr_get_si@plt>
   503f0:	mov	x20, x0
   503f4:	mov	x0, x19
   503f8:	bl	c0f0 <mpfr_clear@plt>
   503fc:	str	x23, [x21]
   50400:	str	x24, [x22]
   50404:	str	w26, [x25]
   50408:	mov	x0, x20
   5040c:	ldp	x19, x20, [sp, #16]
   50410:	ldp	x21, x22, [sp, #32]
   50414:	ldp	x23, x24, [sp, #48]
   50418:	ldp	x25, x26, [sp, #64]
   5041c:	ldp	x29, x30, [sp], #112
   50420:	ret
   50424:	mov	x20, #0x0                   	// #0
   50428:	b	50408 <mpfr_ubf_zexp2exp@@Base+0xcc>

000000000005042c <mpfr_ubf_diff_exp@@Base>:
   5042c:	stp	x29, x30, [sp, #-80]!
   50430:	mov	x29, sp
   50434:	stp	x19, x20, [sp, #16]
   50438:	add	x19, sp, #0x30
   5043c:	add	x20, sp, #0x40
   50440:	str	x21, [sp, #32]
   50444:	mov	x21, x1
   50448:	mov	x1, x0
   5044c:	mov	x0, x19
   50450:	bl	4ff88 <mpfr_gamma_inc@@Base+0xdac>
   50454:	mov	x1, x21
   50458:	mov	x0, x20
   5045c:	bl	4ff88 <mpfr_gamma_inc@@Base+0xdac>
   50460:	mov	x2, x20
   50464:	mov	x1, x19
   50468:	mov	x0, x19
   5046c:	bl	be60 <__gmpz_sub@plt>
   50470:	mov	x0, x20
   50474:	bl	c200 <mpfr_mpz_clear@plt>
   50478:	mov	x0, x19
   5047c:	bl	bcc0 <mpfr_ubf_zexp2exp@plt>
   50480:	mov	x20, x0
   50484:	mov	x0, x19
   50488:	bl	c200 <mpfr_mpz_clear@plt>
   5048c:	mov	x0, x20
   50490:	ldp	x19, x20, [sp, #16]
   50494:	ldr	x21, [sp, #32]
   50498:	ldp	x29, x30, [sp], #80
   5049c:	ret

00000000000504a0 <mpfr_beta@@Base>:
   504a0:	stp	x29, x30, [sp, #-400]!
   504a4:	mov	x29, sp
   504a8:	stp	x21, x22, [sp, #32]
   504ac:	mov	x21, x1
   504b0:	mov	x22, x2
   504b4:	mov	x1, x2
   504b8:	stp	x19, x20, [sp, #16]
   504bc:	mov	x20, x0
   504c0:	mov	x0, x21
   504c4:	stp	x23, x24, [sp, #48]
   504c8:	mov	w24, w3
   504cc:	stp	x25, x26, [sp, #64]
   504d0:	stp	x27, x28, [sp, #80]
   504d4:	bl	ca90 <mpfr_less_p@plt>
   504d8:	cbz	w0, 504f8 <mpfr_beta@@Base+0x58>
   504dc:	mov	w3, w24
   504e0:	mov	x2, x21
   504e4:	mov	x1, x22
   504e8:	mov	x0, x20
   504ec:	bl	504a0 <mpfr_beta@@Base>
   504f0:	mov	w19, w0
   504f4:	b	50620 <mpfr_beta@@Base+0x180>
   504f8:	ldr	x23, [x21, #16]
   504fc:	mov	w19, w0
   50500:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   50504:	cmp	x23, x0
   50508:	b.le	5057c <mpfr_beta@@Base+0xdc>
   5050c:	ldr	x1, [x22, #16]
   50510:	cmp	x1, x0
   50514:	b.gt	507fc <mpfr_beta@@Base+0x35c>
   50518:	ldr	x0, [x22, #16]
   5051c:	mov	x26, #0x2                   	// #2
   50520:	movk	x26, #0x8000, lsl #48
   50524:	cmp	x0, x26
   50528:	b.eq	5058c <mpfr_beta@@Base+0xec>  // b.none
   5052c:	mov	x25, #0x8000000000000003    	// #-9223372036854775805
   50530:	cmp	x23, x25
   50534:	b.eq	505b4 <mpfr_beta@@Base+0x114>  // b.none
   50538:	cmp	x0, x25
   5053c:	b.eq	5071c <mpfr_beta@@Base+0x27c>  // b.none
   50540:	mov	x0, x21
   50544:	mrs	x23, tpidr_el0
   50548:	bl	c7a0 <mpfr_sgn@plt>
   5054c:	cbz	w0, 50760 <mpfr_beta@@Base+0x2c0>
   50550:	ldr	w0, [x22, #8]
   50554:	str	x25, [x20, #16]
   50558:	str	w0, [x20, #8]
   5055c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   50560:	ldr	x1, [x0, #2592]
   50564:	add	x0, x0, #0xa20
   50568:	blr	x1
   5056c:	add	x0, x23, x0
   50570:	ldr	w1, [x0]
   50574:	orr	w1, w1, #0x20
   50578:	b	5061c <mpfr_beta@@Base+0x17c>
   5057c:	mov	x0, #0x2                   	// #2
   50580:	movk	x0, #0x8000, lsl #48
   50584:	cmp	x23, x0
   50588:	b.ne	50518 <mpfr_beta@@Base+0x78>  // b.any
   5058c:	mov	x0, #0x2                   	// #2
   50590:	movk	x0, #0x8000, lsl #48
   50594:	str	x0, [x20, #16]
   50598:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   5059c:	ldr	x1, [x0, #2592]
   505a0:	add	x0, x0, #0xa20
   505a4:	blr	x1
   505a8:	mrs	x1, tpidr_el0
   505ac:	add	x0, x1, x0
   505b0:	b	50614 <mpfr_beta@@Base+0x174>
   505b4:	ldr	w1, [x21, #8]
   505b8:	cmp	w1, #0x0
   505bc:	b.le	50714 <mpfr_beta@@Base+0x274>
   505c0:	mov	x0, x22
   505c4:	bl	c7a0 <mpfr_sgn@plt>
   505c8:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   505cc:	cmp	w0, #0x0
   505d0:	b.le	505e0 <mpfr_beta@@Base+0x140>
   505d4:	str	x1, [x20, #16]
   505d8:	mov	w0, #0x1                   	// #1
   505dc:	b	50750 <mpfr_beta@@Base+0x2b0>
   505e0:	ldr	x0, [x22, #16]
   505e4:	mrs	x21, tpidr_el0
   505e8:	and	x0, x0, #0xfffffffffffffffd
   505ec:	cmp	x0, x1
   505f0:	b.ne	50640 <mpfr_beta@@Base+0x1a0>  // b.any
   505f4:	mov	x0, #0x2                   	// #2
   505f8:	movk	x0, #0x8000, lsl #48
   505fc:	str	x0, [x20, #16]
   50600:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   50604:	ldr	x1, [x0, #2592]
   50608:	add	x0, x0, #0xa20
   5060c:	blr	x1
   50610:	add	x0, x21, x0
   50614:	ldr	w1, [x0]
   50618:	orr	w1, w1, #0x4
   5061c:	str	w1, [x0]
   50620:	mov	w0, w19
   50624:	ldp	x19, x20, [sp, #16]
   50628:	ldp	x21, x22, [sp, #32]
   5062c:	ldp	x23, x24, [sp, #48]
   50630:	ldp	x25, x26, [sp, #64]
   50634:	ldp	x27, x28, [sp, #80]
   50638:	ldp	x29, x30, [sp], #400
   5063c:	ret
   50640:	mov	x0, x22
   50644:	bl	c1f0 <mpfr_integer_p@plt>
   50648:	cbnz	w0, 505f4 <mpfr_beta@@Base+0x154>
   5064c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   50650:	ldr	x1, [x0, #2592]
   50654:	add	x0, x0, #0xa20
   50658:	blr	x1
   5065c:	ldr	w28, [x21, x0]
   50660:	add	x27, x21, x0
   50664:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   50668:	ldr	x1, [x0, #2528]
   5066c:	add	x0, x0, #0x9e0
   50670:	blr	x1
   50674:	add	x25, x21, x0
   50678:	add	x19, sp, #0x100
   5067c:	ldr	x26, [x21, x0]
   50680:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   50684:	ldr	x1, [x0, #2560]
   50688:	add	x0, x0, #0xa00
   5068c:	blr	x1
   50690:	add	x24, x21, x0
   50694:	mov	x1, #0x1                   	// #1
   50698:	ldr	x21, [x21, x0]
   5069c:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   506a0:	str	x0, [x25]
   506a4:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   506a8:	str	x0, [x24]
   506ac:	mov	x0, x19
   506b0:	bl	cb10 <mpfr_init2@plt>
   506b4:	mov	w3, #0x0                   	// #0
   506b8:	mov	x2, #0x0                   	// #0
   506bc:	mov	x1, #0x1                   	// #1
   506c0:	mov	x0, x19
   506c4:	bl	c680 <mpfr_set_ui_2exp@plt>
   506c8:	add	x1, sp, #0xe0
   506cc:	mov	x3, x19
   506d0:	mov	x2, x22
   506d4:	mov	w4, #0x3                   	// #3
   506d8:	mov	x0, x19
   506dc:	bl	cd10 <mpfr_fmodquo@plt>
   506e0:	mov	x0, x19
   506e4:	bl	c0f0 <mpfr_clear@plt>
   506e8:	str	x21, [x24]
   506ec:	ldr	x1, [sp, #224]
   506f0:	mov	w0, #0x1                   	// #1
   506f4:	str	x26, [x25]
   506f8:	str	w28, [x27]
   506fc:	tst	x1, #0x1
   50700:	str	x23, [x20, #16]
   50704:	cneg	w0, w0, ne  // ne = any
   50708:	str	w0, [x20, #8]
   5070c:	mov	w19, #0x0                   	// #0
   50710:	b	50620 <mpfr_beta@@Base+0x180>
   50714:	cmp	x0, x23
   50718:	b.ne	507fc <mpfr_beta@@Base+0x35c>  // b.any
   5071c:	mov	x0, x21
   50720:	bl	c7a0 <mpfr_sgn@plt>
   50724:	cmp	w0, #0x0
   50728:	b.le	5058c <mpfr_beta@@Base+0xec>
   5072c:	mov	x0, x21
   50730:	bl	c1f0 <mpfr_integer_p@plt>
   50734:	cbz	w0, 5058c <mpfr_beta@@Base+0xec>
   50738:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   5073c:	str	x0, [x20, #16]
   50740:	mov	x0, x21
   50744:	bl	cd40 <mpfr_odd_p@plt>
   50748:	cbz	w0, 50758 <mpfr_beta@@Base+0x2b8>
   5074c:	mov	w0, #0xffffffff            	// #-1
   50750:	str	w0, [x20, #8]
   50754:	b	50620 <mpfr_beta@@Base+0x180>
   50758:	mov	w0, #0x1                   	// #1
   5075c:	b	50708 <mpfr_beta@@Base+0x268>
   50760:	mov	x0, x22
   50764:	bl	c7a0 <mpfr_sgn@plt>
   50768:	mov	w19, w0
   5076c:	cbz	w0, 507b4 <mpfr_beta@@Base+0x314>
   50770:	mov	x0, x22
   50774:	bl	c1f0 <mpfr_integer_p@plt>
   50778:	mov	w19, w0
   5077c:	cbz	w0, 507a8 <mpfr_beta@@Base+0x308>
   50780:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   50784:	ldr	x1, [x0, #2592]
   50788:	add	x0, x0, #0xa20
   5078c:	blr	x1
   50790:	add	x0, x23, x0
   50794:	str	x26, [x20, #16]
   50798:	ldr	w1, [x0]
   5079c:	orr	w1, w1, #0x4
   507a0:	str	w1, [x0]
   507a4:	b	5070c <mpfr_beta@@Base+0x26c>
   507a8:	ldr	w0, [x21, #8]
   507ac:	str	x25, [x20, #16]
   507b0:	b	50558 <mpfr_beta@@Base+0xb8>
   507b4:	ldr	w2, [x21, #8]
   507b8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   507bc:	ldr	x1, [x0, #2592]
   507c0:	add	x0, x0, #0xa20
   507c4:	blr	x1
   507c8:	ldr	w3, [x22, #8]
   507cc:	add	x1, x23, x0
   507d0:	ldr	w0, [x23, x0]
   507d4:	cmp	w2, w3
   507d8:	b.ne	507f0 <mpfr_beta@@Base+0x350>  // b.any
   507dc:	orr	w0, w0, #0x20
   507e0:	str	w2, [x20, #8]
   507e4:	str	x25, [x20, #16]
   507e8:	str	w0, [x1]
   507ec:	b	50620 <mpfr_beta@@Base+0x180>
   507f0:	orr	w0, w0, #0x4
   507f4:	str	x26, [x20, #16]
   507f8:	b	507e8 <mpfr_beta@@Base+0x348>
   507fc:	mov	x0, x22
   50800:	bl	c1f0 <mpfr_integer_p@plt>
   50804:	str	w0, [sp, #128]
   50808:	mov	w0, w0
   5080c:	cbz	w0, 50950 <mpfr_beta@@Base+0x4b0>
   50810:	ldr	w0, [x22, #8]
   50814:	tbz	w0, #31, 50950 <mpfr_beta@@Base+0x4b0>
   50818:	ldr	w0, [x21, #8]
   5081c:	tbnz	w0, #31, 5058c <mpfr_beta@@Base+0xec>
   50820:	mov	x1, x22
   50824:	mov	x0, x21
   50828:	bl	ca40 <mpfr_cmpabs@plt>
   5082c:	cmp	w0, #0x0
   50830:	b.gt	5058c <mpfr_beta@@Base+0xec>
   50834:	mov	x0, x21
   50838:	bl	c1f0 <mpfr_integer_p@plt>
   5083c:	cbz	w0, 5058c <mpfr_beta@@Base+0xec>
   50840:	mov	x1, x22
   50844:	mov	x0, x21
   50848:	bl	ca40 <mpfr_cmpabs@plt>
   5084c:	cbnz	w0, 50868 <mpfr_beta@@Base+0x3c8>
   50850:	mov	w3, w24
   50854:	mov	x2, x21
   50858:	mov	x0, x20
   5085c:	mov	x1, #0x1                   	// #1
   50860:	bl	c380 <mpfr_ui_div@plt>
   50864:	b	504f0 <mpfr_beta@@Base+0x50>
   50868:	ldr	x0, [x21, #16]
   5086c:	add	x23, sp, #0xa0
   50870:	ldr	x1, [x22, #16]
   50874:	cmp	x1, x0
   50878:	csel	x1, x1, x0, ge  // ge = tcont
   5087c:	mov	x0, x23
   50880:	bl	cb10 <mpfr_init2@plt>
   50884:	mov	x2, x22
   50888:	mov	x1, x21
   5088c:	mov	x0, x23
   50890:	mov	w3, #0x0                   	// #0
   50894:	bl	c230 <mpfr_add@plt>
   50898:	cbz	w0, 508b4 <mpfr_beta@@Base+0x414>
   5089c:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   508a0:	add	x2, x2, #0xdd7
   508a4:	mov	w1, #0xc6                  	// #198
   508a8:	adrp	x0, 5c000 <mpfr_bases@@Base+0x22a8>
   508ac:	add	x0, x0, #0x287
   508b0:	bl	cbd0 <mpfr_assert_fail@plt>
   508b4:	mov	x2, x23
   508b8:	mov	x0, x23
   508bc:	mov	w3, #0x0                   	// #0
   508c0:	mov	x1, #0x1                   	// #1
   508c4:	bl	cae0 <mpfr_ui_sub@plt>
   508c8:	cbz	w0, 508dc <mpfr_beta@@Base+0x43c>
   508cc:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   508d0:	mov	w1, #0xc8                  	// #200
   508d4:	add	x2, x2, #0xdd7
   508d8:	b	508a8 <mpfr_beta@@Base+0x408>
   508dc:	mov	x0, x21
   508e0:	bl	cd40 <mpfr_odd_p@plt>
   508e4:	cbz	w0, 50934 <mpfr_beta@@Base+0x494>
   508e8:	cmp	w24, #0x2
   508ec:	b.eq	5092c <mpfr_beta@@Base+0x48c>  // b.none
   508f0:	cmp	w24, #0x3
   508f4:	mov	w0, #0x2                   	// #2
   508f8:	csel	w24, w24, w0, ne  // ne = any
   508fc:	mov	w3, w24
   50900:	mov	x2, x23
   50904:	mov	x1, x21
   50908:	mov	x0, x20
   5090c:	bl	504a0 <mpfr_beta@@Base>
   50910:	neg	w19, w0
   50914:	ldr	w0, [x20, #8]
   50918:	neg	w0, w0
   5091c:	str	w0, [x20, #8]
   50920:	mov	x0, x23
   50924:	bl	c0f0 <mpfr_clear@plt>
   50928:	b	50620 <mpfr_beta@@Base+0x180>
   5092c:	mov	w24, #0x3                   	// #3
   50930:	b	508fc <mpfr_beta@@Base+0x45c>
   50934:	mov	w3, w24
   50938:	mov	x2, x23
   5093c:	mov	x1, x21
   50940:	mov	x0, x20
   50944:	bl	504a0 <mpfr_beta@@Base>
   50948:	mov	w19, w0
   5094c:	b	50920 <mpfr_beta@@Base+0x480>
   50950:	mov	x0, x21
   50954:	mrs	x25, tpidr_el0
   50958:	bl	c1f0 <mpfr_integer_p@plt>
   5095c:	cbz	w0, 50994 <mpfr_beta@@Base+0x4f4>
   50960:	ldr	w0, [x21, #8]
   50964:	tbz	w0, #31, 50994 <mpfr_beta@@Base+0x4f4>
   50968:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   5096c:	ldr	x1, [x0, #2592]
   50970:	add	x0, x0, #0xa20
   50974:	blr	x1
   50978:	ldr	w1, [x25, x0]
   5097c:	mov	x2, #0x2                   	// #2
   50980:	movk	x2, #0x8000, lsl #48
   50984:	str	x2, [x20, #16]
   50988:	orr	w1, w1, #0x4
   5098c:	str	w1, [x25, x0]
   50990:	b	50620 <mpfr_beta@@Base+0x180>
   50994:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   50998:	ldr	x1, [x0, #2592]
   5099c:	add	x0, x0, #0xa20
   509a0:	blr	x1
   509a4:	add	x28, x25, x0
   509a8:	ldr	w0, [x25, x0]
   509ac:	str	w0, [sp, #108]
   509b0:	ldr	x3, [x22]
   509b4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   509b8:	ldr	x1, [x0, #2528]
   509bc:	add	x0, x0, #0x9e0
   509c0:	blr	x1
   509c4:	add	x23, x25, x0
   509c8:	ldr	x0, [x25, x0]
   509cc:	str	x0, [sp, #112]
   509d0:	ldr	x2, [x21, #16]
   509d4:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   509d8:	ldr	x1, [x0, #2560]
   509dc:	add	x0, x0, #0xa00
   509e0:	blr	x1
   509e4:	add	x26, x25, x0
   509e8:	ldr	x0, [x25, x0]
   509ec:	str	x0, [sp, #120]
   509f0:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   509f4:	str	x0, [x23]
   509f8:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   509fc:	str	x0, [x26]
   50a00:	ldr	x0, [x22, #16]
   50a04:	cmp	x0, x2
   50a08:	csel	x1, x0, x2, ge  // ge = tcont
   50a0c:	sub	x0, x0, x3
   50a10:	ldr	x3, [x21]
   50a14:	add	x1, x1, #0x1
   50a18:	sub	x2, x2, x3
   50a1c:	cmp	x0, x2
   50a20:	csel	x0, x0, x2, le
   50a24:	sub	x1, x1, x0
   50a28:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   50a2c:	cmp	x1, x0
   50a30:	b.cc	50a60 <mpfr_beta@@Base+0x5c0>  // b.lo, b.ul, b.last
   50a34:	ldr	x0, [sp, #112]
   50a38:	str	x0, [x23]
   50a3c:	ldr	x0, [sp, #120]
   50a40:	str	x0, [x26]
   50a44:	mov	x0, #0x2                   	// #2
   50a48:	movk	x0, #0x8000, lsl #48
   50a4c:	str	x0, [x20, #16]
   50a50:	ldr	w0, [sp, #108]
   50a54:	orr	w0, w0, #0x4
   50a58:	str	w0, [x28]
   50a5c:	b	50620 <mpfr_beta@@Base+0x180>
   50a60:	add	x27, sp, #0xa0
   50a64:	mov	x0, x27
   50a68:	bl	cb10 <mpfr_init2@plt>
   50a6c:	mov	x1, x21
   50a70:	mov	x2, x22
   50a74:	mov	x0, x27
   50a78:	mov	w3, #0x0                   	// #0
   50a7c:	bl	c230 <mpfr_add@plt>
   50a80:	mov	w19, w0
   50a84:	ldr	x1, [sp, #176]
   50a88:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   50a8c:	cmp	x1, x0
   50a90:	b.ne	50ac8 <mpfr_beta@@Base+0x628>  // b.any
   50a94:	mov	x0, x27
   50a98:	bl	c0f0 <mpfr_clear@plt>
   50a9c:	ldr	w0, [sp, #108]
   50aa0:	mov	w1, w24
   50aa4:	str	w0, [x28]
   50aa8:	mov	w2, #0x1                   	// #1
   50aac:	ldr	x0, [sp, #112]
   50ab0:	str	x0, [x23]
   50ab4:	ldr	x0, [sp, #120]
   50ab8:	str	x0, [x26]
   50abc:	mov	x0, x20
   50ac0:	bl	c450 <mpfr_underflow@plt>
   50ac4:	b	504f0 <mpfr_beta@@Base+0x50>
   50ac8:	cbz	w19, 50adc <mpfr_beta@@Base+0x63c>
   50acc:	adrp	x2, 5b000 <mpfr_bases@@Base+0x12a8>
   50ad0:	mov	w1, #0xf7                  	// #247
   50ad4:	add	x2, x2, #0xdd7
   50ad8:	b	508a8 <mpfr_beta@@Base+0x408>
   50adc:	mov	x0, x27
   50ae0:	bl	c7a0 <mpfr_sgn@plt>
   50ae4:	cmp	w0, #0x0
   50ae8:	b.gt	50b2c <mpfr_beta@@Base+0x68c>
   50aec:	ldr	w0, [sp, #128]
   50af0:	cbnz	w0, 50b2c <mpfr_beta@@Base+0x68c>
   50af4:	mov	x0, x27
   50af8:	bl	c1f0 <mpfr_integer_p@plt>
   50afc:	cbz	w0, 50b2c <mpfr_beta@@Base+0x68c>
   50b00:	mov	x0, x27
   50b04:	bl	c0f0 <mpfr_clear@plt>
   50b08:	ldr	w0, [sp, #108]
   50b0c:	str	w0, [x28]
   50b10:	ldr	x0, [sp, #112]
   50b14:	str	x0, [x23]
   50b18:	ldr	x0, [sp, #120]
   50b1c:	str	x0, [x26]
   50b20:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   50b24:	str	x0, [x20, #16]
   50b28:	b	505d8 <mpfr_beta@@Base+0x138>
   50b2c:	ldr	x0, [x20]
   50b30:	cmp	x0, #0x1
   50b34:	b.eq	50b70 <mpfr_beta@@Base+0x6d0>  // b.none
   50b38:	b.gt	50b4c <mpfr_beta@@Base+0x6ac>
   50b3c:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   50b40:	mov	w1, #0x108                 	// #264
   50b44:	add	x2, x2, #0x50e
   50b48:	b	508a8 <mpfr_beta@@Base+0x408>
   50b4c:	sub	x23, x0, #0x1
   50b50:	clz	x1, x23
   50b54:	mov	w23, #0x40                  	// #64
   50b58:	sub	w23, w23, w1
   50b5c:	add	x23, x0, w23, sxtw
   50b60:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   50b64:	cmp	x23, x0
   50b68:	b.lt	50b78 <mpfr_beta@@Base+0x6d8>  // b.tstop
   50b6c:	bl	c970 <mpfr_abort_prec_max@plt>
   50b70:	mov	w23, #0x0                   	// #0
   50b74:	b	50b5c <mpfr_beta@@Base+0x6bc>
   50b78:	sub	x26, x23, #0x1
   50b7c:	asr	x26, x26, #6
   50b80:	add	x26, x26, #0x1
   50b84:	lsl	x0, x26, #1
   50b88:	cmp	x0, #0x10
   50b8c:	b.le	50d4c <mpfr_beta@@Base+0x8ac>
   50b90:	lsl	x0, x26, #4
   50b94:	str	x0, [sp, #256]
   50b98:	bl	cd90 <mpfr_allocate_func@plt>
   50b9c:	str	x0, [sp, #264]
   50ba0:	mov	w0, #0x1                   	// #1
   50ba4:	add	x28, sp, #0xe0
   50ba8:	str	w0, [sp, #200]
   50bac:	ldr	x1, [sp, #264]
   50bb0:	str	w0, [sp, #232]
   50bb4:	mov	x0, #0x40                  	// #64
   50bb8:	str	x0, [sp, #128]
   50bbc:	adrp	x0, 5c000 <mpfr_bases@@Base+0x22a8>
   50bc0:	add	x0, x0, #0x28e
   50bc4:	add	x26, x1, x26, lsl #3
   50bc8:	str	x26, [sp, #248]
   50bcc:	add	x26, sp, #0xc0
   50bd0:	str	x0, [sp, #144]
   50bd4:	str	x23, [sp, #192]
   50bd8:	str	x1, [sp, #216]
   50bdc:	str	x23, [sp, #224]
   50be0:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   50be4:	cmp	x23, x0
   50be8:	ldr	x1, [sp, #256]
   50bec:	b.ge	50b6c <mpfr_beta@@Base+0x6cc>  // b.tcont
   50bf0:	sub	x0, x23, #0x1
   50bf4:	asr	x0, x0, #6
   50bf8:	add	x0, x0, #0x1
   50bfc:	str	x0, [sp, #136]
   50c00:	lsl	x0, x0, #4
   50c04:	str	x0, [sp, #256]
   50c08:	cbnz	x1, 50d58 <mpfr_beta@@Base+0x8b8>
   50c0c:	bl	cd90 <mpfr_allocate_func@plt>
   50c10:	str	x0, [sp, #264]
   50c14:	mov	w1, #0x1                   	// #1
   50c18:	ldr	x2, [sp, #136]
   50c1c:	str	x23, [sp, #192]
   50c20:	ldr	x0, [sp, #264]
   50c24:	str	x0, [sp, #216]
   50c28:	str	w1, [sp, #200]
   50c2c:	str	x23, [sp, #224]
   50c30:	add	x0, x0, x2, lsl #3
   50c34:	mov	w2, #0x0                   	// #0
   50c38:	str	w1, [sp, #232]
   50c3c:	mov	x1, x21
   50c40:	str	x0, [sp, #248]
   50c44:	mov	x0, x26
   50c48:	bl	c840 <mpfr_gamma@plt>
   50c4c:	mov	w4, w0
   50c50:	mov	x1, x22
   50c54:	mov	w2, #0x0                   	// #0
   50c58:	mov	x0, x28
   50c5c:	str	w4, [sp, #136]
   50c60:	bl	c840 <mpfr_gamma@plt>
   50c64:	ldr	w4, [sp, #136]
   50c68:	mov	w3, #0x0                   	// #0
   50c6c:	mov	x2, x28
   50c70:	mov	x1, x26
   50c74:	orr	w4, w0, w4
   50c78:	mov	x0, x26
   50c7c:	str	w4, [sp, #152]
   50c80:	bl	bdd0 <mpfr_mul@plt>
   50c84:	mov	w3, w0
   50c88:	mov	x1, x27
   50c8c:	mov	w2, #0x0                   	// #0
   50c90:	mov	x0, x28
   50c94:	str	w3, [sp, #136]
   50c98:	bl	c840 <mpfr_gamma@plt>
   50c9c:	ldr	w3, [sp, #136]
   50ca0:	mov	x1, x26
   50ca4:	ldr	w4, [sp, #152]
   50ca8:	mov	x2, x28
   50cac:	orr	w3, w3, w0
   50cb0:	mov	x0, x26
   50cb4:	orr	w4, w3, w4
   50cb8:	mov	w3, #0x0                   	// #0
   50cbc:	str	w4, [sp, #136]
   50cc0:	bl	c6b0 <mpfr_div@plt>
   50cc4:	ldr	w4, [sp, #136]
   50cc8:	mov	x1, #0x2                   	// #2
   50ccc:	movk	x1, #0x8000, lsl #48
   50cd0:	orr	w4, w0, w4
   50cd4:	ldr	x0, [sp, #208]
   50cd8:	cmp	x0, x1
   50cdc:	b.ne	50d68 <mpfr_beta@@Base+0x8c8>  // b.any
   50ce0:	mov	x0, x27
   50ce4:	bl	c0f0 <mpfr_clear@plt>
   50ce8:	ldr	x1, [sp, #256]
   50cec:	cbz	x1, 50cf8 <mpfr_beta@@Base+0x858>
   50cf0:	ldr	x0, [sp, #264]
   50cf4:	bl	ccc0 <mpfr_free_func@plt>
   50cf8:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   50cfc:	ldr	x1, [x0, #2528]
   50d00:	add	x0, x0, #0x9e0
   50d04:	blr	x1
   50d08:	ldr	x1, [sp, #112]
   50d0c:	str	x1, [x25, x0]
   50d10:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   50d14:	ldr	x1, [x0, #2560]
   50d18:	add	x0, x0, #0xa00
   50d1c:	blr	x1
   50d20:	ldr	x1, [sp, #120]
   50d24:	str	x1, [x25, x0]
   50d28:	mov	x0, #0x2                   	// #2
   50d2c:	movk	x0, #0x8000, lsl #48
   50d30:	str	x0, [x20, #16]
   50d34:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   50d38:	ldr	x1, [x0, #2592]
   50d3c:	add	x0, x0, #0xa20
   50d40:	blr	x1
   50d44:	ldr	w1, [sp, #108]
   50d48:	b	50988 <mpfr_beta@@Base+0x4e8>
   50d4c:	add	x0, sp, #0x110
   50d50:	str	xzr, [sp, #256]
   50d54:	b	50b9c <mpfr_beta@@Base+0x6fc>
   50d58:	mov	x2, x0
   50d5c:	ldr	x0, [sp, #264]
   50d60:	bl	c250 <mpfr_reallocate_func@plt>
   50d64:	b	50c10 <mpfr_beta@@Base+0x770>
   50d68:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   50d6c:	cmp	x0, x1
   50d70:	b.gt	50d90 <mpfr_beta@@Base+0x8f0>
   50d74:	ldr	x2, [sp, #144]
   50d78:	mov	w1, #0x129                 	// #297
   50d7c:	adrp	x0, 5c000 <mpfr_bases@@Base+0x22a8>
   50d80:	add	x0, x0, #0x287
   50d84:	str	w4, [sp, #136]
   50d88:	bl	cbd0 <mpfr_assert_fail@plt>
   50d8c:	ldr	w4, [sp, #136]
   50d90:	cbz	w4, 50e10 <mpfr_beta@@Base+0x970>
   50d94:	ldr	x1, [sp, #192]
   50d98:	cmp	w24, #0x0
   50d9c:	ldr	x0, [sp, #216]
   50da0:	sub	x1, x1, #0x1
   50da4:	ldr	x3, [x20]
   50da8:	asr	x1, x1, #6
   50dac:	sub	x2, x23, #0x3
   50db0:	add	x1, x1, #0x1
   50db4:	cinc	x3, x3, eq  // eq = none
   50db8:	bl	c400 <mpfr_round_p@plt>
   50dbc:	cbnz	w0, 50e10 <mpfr_beta@@Base+0x970>
   50dc0:	mov	x0, x21
   50dc4:	mov	x2, #0x0                   	// #0
   50dc8:	mov	x1, #0x1                   	// #1
   50dcc:	bl	bfd0 <mpfr_cmp_ui_2exp@plt>
   50dd0:	cbnz	w0, 50eec <mpfr_beta@@Base+0xa4c>
   50dd4:	ldr	x4, [x22, #16]
   50dd8:	mov	x0, x22
   50ddc:	mov	x1, #0x1                   	// #1
   50de0:	str	x4, [sp, #152]
   50de4:	sub	x2, x4, #0x1
   50de8:	str	x2, [sp, #136]
   50dec:	bl	bfd0 <mpfr_cmp_ui_2exp@plt>
   50df0:	ldr	x2, [sp, #136]
   50df4:	ldr	x4, [sp, #152]
   50df8:	cbnz	w0, 50eb8 <mpfr_beta@@Base+0xa18>
   50dfc:	mov	x1, #0x1                   	// #1
   50e00:	sub	x2, x1, x4
   50e04:	mov	w3, #0x0                   	// #0
   50e08:	mov	x0, x26
   50e0c:	bl	c680 <mpfr_set_ui_2exp@plt>
   50e10:	ldr	w3, [sp, #200]
   50e14:	mov	x1, x26
   50e18:	mov	w2, w24
   50e1c:	mov	x0, x20
   50e20:	bl	c730 <mpfr_set4@plt>
   50e24:	mov	w19, w0
   50e28:	ldr	x1, [sp, #256]
   50e2c:	cbz	x1, 50e38 <mpfr_beta@@Base+0x998>
   50e30:	ldr	x0, [sp, #264]
   50e34:	bl	ccc0 <mpfr_free_func@plt>
   50e38:	mov	x0, x27
   50e3c:	bl	c0f0 <mpfr_clear@plt>
   50e40:	ldr	w2, [sp, #108]
   50e44:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   50e48:	ldr	x1, [x0, #2592]
   50e4c:	add	x0, x0, #0xa20
   50e50:	blr	x1
   50e54:	add	x1, x25, x0
   50e58:	str	w2, [x25, x0]
   50e5c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   50e60:	ldr	x2, [x0, #2528]
   50e64:	add	x0, x0, #0x9e0
   50e68:	blr	x2
   50e6c:	ldr	x2, [sp, #112]
   50e70:	str	x2, [x25, x0]
   50e74:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   50e78:	ldr	x2, [x0, #2560]
   50e7c:	add	x0, x0, #0xa00
   50e80:	blr	x2
   50e84:	ldr	x2, [sp, #120]
   50e88:	str	x2, [x25, x0]
   50e8c:	ldr	x0, [x20, #16]
   50e90:	ldr	x2, [sp, #112]
   50e94:	cmp	x2, x0
   50e98:	b.gt	50fa0 <mpfr_beta@@Base+0xb00>
   50e9c:	ldr	x2, [sp, #120]
   50ea0:	cmp	x2, x0
   50ea4:	b.lt	50fa0 <mpfr_beta@@Base+0xb00>  // b.tstop
   50ea8:	cbz	w19, 50620 <mpfr_beta@@Base+0x180>
   50eac:	ldr	w0, [sp, #108]
   50eb0:	orr	w0, w0, #0x8
   50eb4:	b	507e8 <mpfr_beta@@Base+0x348>
   50eb8:	mov	x0, x22
   50ebc:	mov	x1, #0xffffffffffffffff    	// #-1
   50ec0:	str	x4, [sp, #136]
   50ec4:	bl	c460 <mpfr_cmp_si_2exp@plt>
   50ec8:	ldr	x4, [sp, #136]
   50ecc:	cbnz	w0, 50eec <mpfr_beta@@Base+0xa4c>
   50ed0:	mov	x2, #0x1                   	// #1
   50ed4:	sub	x2, x2, x4
   50ed8:	mov	w3, #0x0                   	// #0
   50edc:	mov	x0, x26
   50ee0:	mov	x1, #0xffffffffffffffff    	// #-1
   50ee4:	bl	bb00 <mpfr_set_si_2exp@plt>
   50ee8:	b	50e10 <mpfr_beta@@Base+0x970>
   50eec:	mov	x0, x22
   50ef0:	mov	x2, #0x0                   	// #0
   50ef4:	mov	x1, #0x1                   	// #1
   50ef8:	bl	bfd0 <mpfr_cmp_ui_2exp@plt>
   50efc:	cbnz	w0, 50f2c <mpfr_beta@@Base+0xa8c>
   50f00:	ldr	x2, [x21, #16]
   50f04:	mov	x0, x21
   50f08:	mov	x1, #0x1                   	// #1
   50f0c:	sub	x2, x2, #0x1
   50f10:	bl	bfd0 <mpfr_cmp_ui_2exp@plt>
   50f14:	cbnz	w0, 50f2c <mpfr_beta@@Base+0xa8c>
   50f18:	ldr	x2, [x21, #16]
   50f1c:	mov	x1, #0x1                   	// #1
   50f20:	mov	w3, #0x0                   	// #0
   50f24:	sub	x2, x1, x2
   50f28:	b	50e08 <mpfr_beta@@Base+0x968>
   50f2c:	mov	x0, x21
   50f30:	mov	x2, #0x0                   	// #0
   50f34:	mov	x1, #0x2                   	// #2
   50f38:	bl	bfd0 <mpfr_cmp_ui_2exp@plt>
   50f3c:	cbnz	w0, 50f60 <mpfr_beta@@Base+0xac0>
   50f40:	mov	x2, #0xffffffffffffffff    	// #-1
   50f44:	mov	x0, x22
   50f48:	mov	x1, x2
   50f4c:	bl	c460 <mpfr_cmp_si_2exp@plt>
   50f50:	cbnz	w0, 50f60 <mpfr_beta@@Base+0xac0>
   50f54:	mov	w3, #0x0                   	// #0
   50f58:	mov	x2, #0x2                   	// #2
   50f5c:	b	50edc <mpfr_beta@@Base+0xa3c>
   50f60:	ldr	x1, [sp, #128]
   50f64:	mov	x0, #0xfffffffffffffeff    	// #-257
   50f68:	movk	x0, #0x7fff, lsl #48
   50f6c:	sub	x0, x0, x23
   50f70:	cmp	x0, x1
   50f74:	b.ge	50f88 <mpfr_beta@@Base+0xae8>  // b.tcont
   50f78:	adrp	x2, 55000 <mpfr_free_pool@@Base+0x3eec>
   50f7c:	mov	w1, #0x151                 	// #337
   50f80:	add	x2, x2, #0x519
   50f84:	b	508a8 <mpfr_beta@@Base+0x408>
   50f88:	ldr	x0, [sp, #128]
   50f8c:	add	x23, x23, x0
   50f90:	mov	x0, #0x2                   	// #2
   50f94:	sdiv	x0, x23, x0
   50f98:	str	x0, [sp, #128]
   50f9c:	b	50be0 <mpfr_beta@@Base+0x740>
   50fa0:	mov	w2, w24
   50fa4:	mov	w1, w19
   50fa8:	mov	x0, x20
   50fac:	bl	cbc0 <mpfr_check_range@plt>
   50fb0:	b	504f0 <mpfr_beta@@Base+0x50>

0000000000050fb4 <mpfr_odd_p@@Base>:
   50fb4:	ldr	x2, [x0, #16]
   50fb8:	cmp	x2, #0x0
   50fbc:	b.le	51028 <mpfr_odd_p@@Base+0x74>
   50fc0:	ldr	x1, [x0]
   50fc4:	cmp	x2, x1
   50fc8:	b.gt	51028 <mpfr_odd_p@@Base+0x74>
   50fcc:	sub	x1, x1, #0x1
   50fd0:	mov	x3, #0x40                  	// #64
   50fd4:	and	x1, x1, #0xffffffffffffffc0
   50fd8:	add	x1, x1, #0x40
   50fdc:	sub	x1, x1, x2
   50fe0:	cmn	x1, #0x3f
   50fe4:	sdiv	x3, x1, x3
   50fe8:	b.ge	5100c <mpfr_odd_p@@Base+0x58>  // b.tcont
   50fec:	stp	x29, x30, [sp, #-16]!
   50ff0:	adrp	x2, 5c000 <mpfr_bases@@Base+0x22a8>
   50ff4:	adrp	x0, 5c000 <mpfr_bases@@Base+0x22a8>
   50ff8:	mov	x29, sp
   50ffc:	add	x2, x2, #0x2d2
   51000:	add	x0, x0, #0x2da
   51004:	mov	w1, #0x3c                  	// #60
   51008:	bl	cbd0 <mpfr_assert_fail@plt>
   5100c:	ldr	x1, [x0, #24]
   51010:	ands	x2, x2, #0x3f
   51014:	ldr	x0, [x1, x3, lsl #3]
   51018:	b.ne	51030 <mpfr_odd_p@@Base+0x7c>  // b.any
   5101c:	mvn	x0, x0
   51020:	and	w0, w0, #0x1
   51024:	cbz	w0, 51050 <mpfr_odd_p@@Base+0x9c>
   51028:	mov	w0, #0x0                   	// #0
   5102c:	ret
   51030:	sub	w2, w2, #0x1
   51034:	lsl	x0, x0, x2
   51038:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   5103c:	cmp	x0, x2
   51040:	cset	w0, ne  // ne = any
   51044:	b	51024 <mpfr_odd_p@@Base+0x70>
   51048:	ldr	x0, [x1, x3, lsl #3]
   5104c:	cbnz	x0, 51028 <mpfr_odd_p@@Base+0x74>
   51050:	subs	x3, x3, #0x1
   51054:	b.pl	51048 <mpfr_odd_p@@Base+0x94>  // b.nfrst
   51058:	mov	w0, #0x1                   	// #1
   5105c:	ret

0000000000051060 <mpfr_get_q@@Base>:
   51060:	stp	x29, x30, [sp, #-32]!
   51064:	mov	x29, sp
   51068:	stp	x19, x20, [sp, #16]
   5106c:	mov	x20, x1
   51070:	mov	x19, x0
   51074:	mov	x1, #0x1                   	// #1
   51078:	add	x0, x0, #0x10
   5107c:	bl	bd30 <__gmpz_set_ui@plt>
   51080:	ldr	x0, [x20, #16]
   51084:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   51088:	cmp	x0, x1
   5108c:	b.gt	510d4 <mpfr_get_q@@Base+0x74>
   51090:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   51094:	cmp	x0, x1
   51098:	b.eq	510c0 <mpfr_get_q@@Base+0x60>  // b.none
   5109c:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   510a0:	ldr	x1, [x0, #2592]
   510a4:	add	x0, x0, #0xa20
   510a8:	blr	x1
   510ac:	mrs	x1, tpidr_el0
   510b0:	add	x0, x1, x0
   510b4:	ldr	w1, [x0]
   510b8:	orr	w1, w1, #0x10
   510bc:	str	w1, [x0]
   510c0:	mov	x0, x19
   510c4:	mov	x1, #0x0                   	// #0
   510c8:	ldp	x19, x20, [sp, #16]
   510cc:	ldp	x29, x30, [sp], #32
   510d0:	b	bd30 <__gmpz_set_ui@plt>
   510d4:	mov	x1, x20
   510d8:	mov	x0, x19
   510dc:	bl	cb50 <mpfr_get_z_2exp@plt>
   510e0:	mov	x2, x0
   510e4:	tbnz	x0, #63, 510fc <mpfr_get_q@@Base+0x9c>
   510e8:	mov	x1, x19
   510ec:	mov	x0, x19
   510f0:	ldp	x19, x20, [sp, #16]
   510f4:	ldp	x29, x30, [sp], #32
   510f8:	b	c290 <__gmpz_mul_2exp@plt>
   510fc:	neg	x2, x0
   51100:	mov	x1, x19
   51104:	mov	x0, x19
   51108:	ldp	x19, x20, [sp, #16]
   5110c:	ldp	x29, x30, [sp], #32
   51110:	b	cb80 <__gmpq_div_2exp@plt>

0000000000051114 <mpfr_free_pool@@Base>:
   51114:	stp	x29, x30, [sp, #-32]!
   51118:	mov	x29, sp
   5111c:	stp	x19, x20, [sp, #16]
   51120:	mrs	x20, tpidr_el0
   51124:	mov	x19, #0x0                   	// #0
   51128:	adrp	x0, 74000 <mpfr_agm@@Base+0x5e674>
   5112c:	ldr	x1, [x0, #2512]
   51130:	add	x0, x0, #0x9d0
   51134:	blr	x1
   51138:	add	x1, x20, x0
   5113c:	ldr	w0, [x20, x0]
   51140:	cmp	w0, w19
   51144:	b.gt	51158 <mpfr_free_pool@@Base+0x44>
   51148:	ldp	x19, x20, [sp, #16]
   5114c:	str	wzr, [x1]
   51150:	ldp	x29, x30, [sp], #32
   51154:	ret
   51158:	add	x0, x1, #0x8
   5115c:	add	x0, x0, x19, lsl #4
   51160:	add	x19, x19, #0x1
   51164:	bl	c6d0 <__gmpz_clear@plt>
   51168:	b	51128 <mpfr_free_pool@@Base+0x14>
   5116c:	nop
   51170:	stp	x29, x30, [sp, #-48]!
   51174:	mov	x29, sp
   51178:	str	q0, [sp, #16]
   5117c:	str	q1, [sp, #32]
   51180:	ldp	x6, x1, [sp, #16]
   51184:	ldp	x0, x3, [sp, #32]
   51188:	mrs	x15, fpcr
   5118c:	lsr	x7, x1, #63
   51190:	mov	x10, x0
   51194:	ubfiz	x4, x3, #3, #48
   51198:	lsr	x5, x3, #63
   5119c:	mov	x12, x7
   511a0:	ubfiz	x2, x1, #3, #48
   511a4:	orr	x4, x4, x0, lsr #61
   511a8:	ubfx	x8, x1, #48, #15
   511ac:	ubfx	x0, x3, #48, #15
   511b0:	and	w7, w7, #0xff
   511b4:	mov	x16, x12
   511b8:	cmp	x12, x5
   511bc:	and	w11, w5, #0xff
   511c0:	orr	x2, x2, x6, lsr #61
   511c4:	mov	x1, x8
   511c8:	lsl	x9, x6, #3
   511cc:	mov	x3, x0
   511d0:	lsl	x13, x10, #3
   511d4:	b.eq	51380 <mpfr_free_pool@@Base+0x26c>  // b.none
   511d8:	sub	w0, w8, w0
   511dc:	cmp	w0, #0x0
   511e0:	b.le	5132c <mpfr_free_pool@@Base+0x218>
   511e4:	cbz	x3, 513e0 <mpfr_free_pool@@Base+0x2cc>
   511e8:	orr	x4, x4, #0x8000000000000
   511ec:	mov	x3, #0x7fff                	// #32767
   511f0:	cmp	x1, x3
   511f4:	b.eq	515e4 <mpfr_free_pool@@Base+0x4d0>  // b.none
   511f8:	cmp	w0, #0x74
   511fc:	b.gt	51668 <mpfr_free_pool@@Base+0x554>
   51200:	cmp	w0, #0x3f
   51204:	b.gt	517c8 <mpfr_free_pool@@Base+0x6b4>
   51208:	mov	w3, #0x40                  	// #64
   5120c:	sub	w3, w3, w0
   51210:	lsr	x6, x13, x0
   51214:	lsl	x13, x13, x3
   51218:	cmp	x13, #0x0
   5121c:	cset	x5, ne  // ne = any
   51220:	lsl	x3, x4, x3
   51224:	orr	x3, x3, x6
   51228:	lsr	x0, x4, x0
   5122c:	orr	x3, x3, x5
   51230:	sub	x2, x2, x0
   51234:	subs	x9, x9, x3
   51238:	sbc	x2, x2, xzr
   5123c:	and	x3, x2, #0x7ffffffffffff
   51240:	tbz	x2, #51, 51420 <mpfr_free_pool@@Base+0x30c>
   51244:	cbz	x3, 5164c <mpfr_free_pool@@Base+0x538>
   51248:	clz	x0, x3
   5124c:	sub	w0, w0, #0xc
   51250:	neg	w2, w0
   51254:	lsl	x4, x3, x0
   51258:	lsl	x3, x9, x0
   5125c:	lsr	x9, x9, x2
   51260:	orr	x2, x9, x4
   51264:	cmp	x1, w0, sxtw
   51268:	sxtw	x4, w0
   5126c:	b.gt	5162c <mpfr_free_pool@@Base+0x518>
   51270:	sub	w1, w0, w1
   51274:	add	w0, w1, #0x1
   51278:	cmp	w0, #0x3f
   5127c:	b.gt	51790 <mpfr_free_pool@@Base+0x67c>
   51280:	mov	w1, #0x40                  	// #64
   51284:	sub	w1, w1, w0
   51288:	lsr	x4, x3, x0
   5128c:	lsl	x3, x3, x1
   51290:	cmp	x3, #0x0
   51294:	lsl	x9, x2, x1
   51298:	cset	x1, ne  // ne = any
   5129c:	orr	x9, x9, x4
   512a0:	lsr	x2, x2, x0
   512a4:	orr	x9, x9, x1
   512a8:	orr	x8, x9, x2
   512ac:	cbz	x8, 51434 <mpfr_free_pool@@Base+0x320>
   512b0:	and	x0, x9, #0x7
   512b4:	mov	x1, #0x0                   	// #0
   512b8:	mov	w5, #0x1                   	// #1
   512bc:	cbz	x0, 51678 <mpfr_free_pool@@Base+0x564>
   512c0:	and	x3, x15, #0xc00000
   512c4:	cmp	x3, #0x400, lsl #12
   512c8:	b.eq	515bc <mpfr_free_pool@@Base+0x4a8>  // b.none
   512cc:	cmp	x3, #0x800, lsl #12
   512d0:	b.eq	5159c <mpfr_free_pool@@Base+0x488>  // b.none
   512d4:	cbz	x3, 515c8 <mpfr_free_pool@@Base+0x4b4>
   512d8:	and	x3, x2, #0x8000000000000
   512dc:	mov	w0, #0x10                  	// #16
   512e0:	cbz	w5, 512e8 <mpfr_free_pool@@Base+0x1d4>
   512e4:	orr	w0, w0, #0x8
   512e8:	cbz	x3, 51600 <mpfr_free_pool@@Base+0x4ec>
   512ec:	add	x1, x1, #0x1
   512f0:	mov	x3, #0x7fff                	// #32767
   512f4:	cmp	x1, x3
   512f8:	b.eq	514e4 <mpfr_free_pool@@Base+0x3d0>  // b.none
   512fc:	and	w1, w1, #0x7fff
   51300:	extr	x8, x2, x9, #3
   51304:	ubfx	x2, x2, #3, #48
   51308:	mov	x5, #0x0                   	// #0
   5130c:	orr	w1, w1, w7, lsl #15
   51310:	bfxil	x5, x2, #0, #48
   51314:	fmov	d0, x8
   51318:	bfi	x5, x1, #48, #16
   5131c:	fmov	v0.d[1], x5
   51320:	cbnz	w0, 51540 <mpfr_free_pool@@Base+0x42c>
   51324:	ldp	x29, x30, [sp], #48
   51328:	ret
   5132c:	mov	x14, x5
   51330:	b.eq	5144c <mpfr_free_pool@@Base+0x338>  // b.none
   51334:	cbnz	x8, 516d0 <mpfr_free_pool@@Base+0x5bc>
   51338:	orr	x1, x2, x9
   5133c:	cbz	x1, 513fc <mpfr_free_pool@@Base+0x2e8>
   51340:	cmn	w0, #0x1
   51344:	b.eq	51aec <mpfr_free_pool@@Base+0x9d8>  // b.none
   51348:	mov	x1, #0x7fff                	// #32767
   5134c:	mvn	w0, w0
   51350:	cmp	x3, x1
   51354:	b.ne	516e4 <mpfr_free_pool@@Base+0x5d0>  // b.any
   51358:	orr	x0, x4, x13
   5135c:	cbnz	x0, 51a44 <mpfr_free_pool@@Base+0x930>
   51360:	mov	x16, x14
   51364:	nop
   51368:	mov	x4, #0x0                   	// #0
   5136c:	fmov	d0, x4
   51370:	lsl	x16, x16, #63
   51374:	orr	x5, x16, #0x7fff000000000000
   51378:	fmov	v0.d[1], x5
   5137c:	b	51324 <mpfr_free_pool@@Base+0x210>
   51380:	sub	w5, w8, w0
   51384:	cmp	w5, #0x0
   51388:	b.le	51554 <mpfr_free_pool@@Base+0x440>
   5138c:	cbz	x0, 51494 <mpfr_free_pool@@Base+0x380>
   51390:	orr	x4, x4, #0x8000000000000
   51394:	mov	x0, #0x7fff                	// #32767
   51398:	cmp	x1, x0
   5139c:	b.eq	515e4 <mpfr_free_pool@@Base+0x4d0>  // b.none
   513a0:	cmp	w5, #0x74
   513a4:	b.gt	51778 <mpfr_free_pool@@Base+0x664>
   513a8:	cmp	w5, #0x3f
   513ac:	b.gt	51878 <mpfr_free_pool@@Base+0x764>
   513b0:	mov	w0, #0x40                  	// #64
   513b4:	sub	w0, w0, w5
   513b8:	lsr	x6, x13, x5
   513bc:	lsl	x13, x13, x0
   513c0:	cmp	x13, #0x0
   513c4:	lsl	x0, x4, x0
   513c8:	cset	x3, ne  // ne = any
   513cc:	orr	x0, x0, x6
   513d0:	lsr	x4, x4, x5
   513d4:	orr	x0, x0, x3
   513d8:	add	x2, x2, x4
   513dc:	b	51784 <mpfr_free_pool@@Base+0x670>
   513e0:	orr	x3, x4, x13
   513e4:	cbz	x3, 51754 <mpfr_free_pool@@Base+0x640>
   513e8:	subs	w0, w0, #0x1
   513ec:	b.ne	511ec <mpfr_free_pool@@Base+0xd8>  // b.any
   513f0:	subs	x9, x9, x13
   513f4:	sbc	x2, x2, x4
   513f8:	b	5123c <mpfr_free_pool@@Base+0x128>
   513fc:	mov	x0, #0x7fff                	// #32767
   51400:	cmp	x3, x0
   51404:	b.eq	51b38 <mpfr_free_pool@@Base+0xa24>  // b.none
   51408:	mov	w7, w11
   5140c:	mov	x2, x4
   51410:	mov	x9, x13
   51414:	mov	x1, x3
   51418:	mov	x12, x5
   5141c:	nop
   51420:	orr	x8, x9, x2
   51424:	and	x0, x9, #0x7
   51428:	mov	w5, #0x0                   	// #0
   5142c:	cbnz	x1, 512bc <mpfr_free_pool@@Base+0x1a8>
   51430:	cbnz	x8, 512b0 <mpfr_free_pool@@Base+0x19c>
   51434:	mov	x2, #0x0                   	// #0
   51438:	mov	x1, #0x0                   	// #0
   5143c:	mov	w0, #0x0                   	// #0
   51440:	and	x2, x2, #0xffffffffffff
   51444:	and	w1, w1, #0x7fff
   51448:	b	51308 <mpfr_free_pool@@Base+0x1f4>
   5144c:	add	x5, x8, #0x1
   51450:	tst	x5, #0x7ffe
   51454:	b.ne	51724 <mpfr_free_pool@@Base+0x610>  // b.any
   51458:	orr	x5, x2, x9
   5145c:	orr	x8, x4, x13
   51460:	cbnz	x1, 518e4 <mpfr_free_pool@@Base+0x7d0>
   51464:	cbz	x5, 5198c <mpfr_free_pool@@Base+0x878>
   51468:	cbz	x8, 519a0 <mpfr_free_pool@@Base+0x88c>
   5146c:	subs	x5, x9, x13
   51470:	cmp	x9, x13
   51474:	sbc	x3, x2, x4
   51478:	tbz	x3, #51, 51b6c <mpfr_free_pool@@Base+0xa58>
   5147c:	subs	x9, x13, x9
   51480:	mov	w7, w11
   51484:	sbc	x2, x4, x2
   51488:	mov	x12, x14
   5148c:	orr	x8, x9, x2
   51490:	b	512ac <mpfr_free_pool@@Base+0x198>
   51494:	orr	x0, x4, x13
   51498:	cbz	x0, 5196c <mpfr_free_pool@@Base+0x858>
   5149c:	subs	w5, w5, #0x1
   514a0:	b.ne	51394 <mpfr_free_pool@@Base+0x280>  // b.any
   514a4:	adds	x9, x9, x13
   514a8:	adc	x2, x4, x2
   514ac:	nop
   514b0:	tbz	x2, #51, 51420 <mpfr_free_pool@@Base+0x30c>
   514b4:	add	x1, x1, #0x1
   514b8:	mov	x0, #0x7fff                	// #32767
   514bc:	cmp	x1, x0
   514c0:	b.eq	519ac <mpfr_free_pool@@Base+0x898>  // b.none
   514c4:	and	x0, x9, #0x1
   514c8:	and	x3, x2, #0xfff7ffffffffffff
   514cc:	orr	x9, x0, x9, lsr #1
   514d0:	mov	w5, #0x0                   	// #0
   514d4:	orr	x9, x9, x2, lsl #63
   514d8:	lsr	x2, x3, #1
   514dc:	and	x0, x9, #0x7
   514e0:	b	512bc <mpfr_free_pool@@Base+0x1a8>
   514e4:	and	x3, x15, #0xc00000
   514e8:	cbz	x3, 51520 <mpfr_free_pool@@Base+0x40c>
   514ec:	cmp	x3, #0x400, lsl #12
   514f0:	b.eq	51518 <mpfr_free_pool@@Base+0x404>  // b.none
   514f4:	cmp	x3, #0x800, lsl #12
   514f8:	csel	w12, w12, wzr, eq  // eq = none
   514fc:	cbnz	w12, 51520 <mpfr_free_pool@@Base+0x40c>
   51500:	mov	w1, #0x14                  	// #20
   51504:	mov	x2, #0x1fffffffffffffff    	// #2305843009213693951
   51508:	orr	w0, w0, w1
   5150c:	mov	x8, #0xffffffffffffffff    	// #-1
   51510:	mov	x1, #0x7ffe                	// #32766
   51514:	b	51440 <mpfr_free_pool@@Base+0x32c>
   51518:	cbnz	x12, 51500 <mpfr_free_pool@@Base+0x3ec>
   5151c:	nop
   51520:	mov	w1, #0x14                  	// #20
   51524:	and	x16, x7, #0xff
   51528:	orr	w0, w0, w1
   5152c:	mov	x4, #0x0                   	// #0
   51530:	fmov	d0, x4
   51534:	lsl	x16, x16, #63
   51538:	orr	x5, x16, #0x7fff000000000000
   5153c:	fmov	v0.d[1], x5
   51540:	str	q0, [sp, #16]
   51544:	bl	53750 <mpfr_free_pool@@Base+0x263c>
   51548:	ldr	q0, [sp, #16]
   5154c:	ldp	x29, x30, [sp], #48
   51550:	ret
   51554:	b.eq	51694 <mpfr_free_pool@@Base+0x580>  // b.none
   51558:	cbnz	x8, 51818 <mpfr_free_pool@@Base+0x704>
   5155c:	orr	x0, x2, x9
   51560:	cbz	x0, 51a84 <mpfr_free_pool@@Base+0x970>
   51564:	cmn	w5, #0x1
   51568:	b.eq	51be4 <mpfr_free_pool@@Base+0xad0>  // b.none
   5156c:	mov	x0, #0x7fff                	// #32767
   51570:	mvn	w5, w5
   51574:	cmp	x3, x0
   51578:	b.ne	5182c <mpfr_free_pool@@Base+0x718>  // b.any
   5157c:	orr	x0, x4, x13
   51580:	cbz	x0, 51368 <mpfr_free_pool@@Base+0x254>
   51584:	lsr	x5, x4, #50
   51588:	mov	x9, x13
   5158c:	eor	x5, x5, #0x1
   51590:	mov	x2, x4
   51594:	and	w5, w5, #0x1
   51598:	b	515f8 <mpfr_free_pool@@Base+0x4e4>
   5159c:	mov	w0, #0x10                  	// #16
   515a0:	cbz	x12, 515ac <mpfr_free_pool@@Base+0x498>
   515a4:	adds	x9, x9, #0x8
   515a8:	cinc	x2, x2, cs  // cs = hs, nlast
   515ac:	and	x3, x2, #0x8000000000000
   515b0:	cbz	w5, 512e8 <mpfr_free_pool@@Base+0x1d4>
   515b4:	orr	w0, w0, #0x8
   515b8:	b	512e8 <mpfr_free_pool@@Base+0x1d4>
   515bc:	mov	w0, #0x10                  	// #16
   515c0:	cbnz	x12, 515ac <mpfr_free_pool@@Base+0x498>
   515c4:	b	515a4 <mpfr_free_pool@@Base+0x490>
   515c8:	and	x3, x9, #0xf
   515cc:	mov	w0, #0x10                  	// #16
   515d0:	cmp	x3, #0x4
   515d4:	b.eq	515ac <mpfr_free_pool@@Base+0x498>  // b.none
   515d8:	adds	x9, x9, #0x4
   515dc:	cinc	x2, x2, cs  // cs = hs, nlast
   515e0:	b	515ac <mpfr_free_pool@@Base+0x498>
   515e4:	orr	x0, x2, x9
   515e8:	cbz	x0, 51368 <mpfr_free_pool@@Base+0x254>
   515ec:	lsr	x5, x2, #50
   515f0:	eor	x5, x5, #0x1
   515f4:	and	w5, w5, #0x1
   515f8:	mov	w0, w5
   515fc:	mov	x1, #0x7fff                	// #32767
   51600:	mov	x3, #0x7fff                	// #32767
   51604:	extr	x8, x2, x9, #3
   51608:	cmp	x1, x3
   5160c:	lsr	x2, x2, #3
   51610:	b.ne	51440 <mpfr_free_pool@@Base+0x32c>  // b.any
   51614:	orr	x1, x8, x2
   51618:	cbz	x1, 51c84 <mpfr_free_pool@@Base+0xb70>
   5161c:	orr	x2, x2, #0x800000000000
   51620:	mov	w1, #0x7fff                	// #32767
   51624:	and	x2, x2, #0xffffffffffff
   51628:	b	51308 <mpfr_free_pool@@Base+0x1f4>
   5162c:	mov	x9, x3
   51630:	and	x2, x2, #0xfff7ffffffffffff
   51634:	sub	x1, x1, x4
   51638:	orr	x8, x9, x2
   5163c:	and	x0, x9, #0x7
   51640:	mov	w5, #0x0                   	// #0
   51644:	cbz	x1, 51430 <mpfr_free_pool@@Base+0x31c>
   51648:	b	512bc <mpfr_free_pool@@Base+0x1a8>
   5164c:	clz	x2, x9
   51650:	add	w0, w2, #0x34
   51654:	cmp	w0, #0x3f
   51658:	b.le	51250 <mpfr_free_pool@@Base+0x13c>
   5165c:	sub	w2, w2, #0xc
   51660:	lsl	x2, x9, x2
   51664:	b	51264 <mpfr_free_pool@@Base+0x150>
   51668:	orr	x4, x4, x13
   5166c:	cmp	x4, #0x0
   51670:	cset	x3, ne  // ne = any
   51674:	b	51234 <mpfr_free_pool@@Base+0x120>
   51678:	and	x3, x2, #0x8000000000000
   5167c:	mov	w0, #0x0                   	// #0
   51680:	cbz	w5, 512e8 <mpfr_free_pool@@Base+0x1d4>
   51684:	mov	w0, #0x0                   	// #0
   51688:	tbz	w15, #11, 512e8 <mpfr_free_pool@@Base+0x1d4>
   5168c:	orr	w0, w0, #0x8
   51690:	b	512e8 <mpfr_free_pool@@Base+0x1d4>
   51694:	add	x0, x8, #0x1
   51698:	tst	x0, #0x7ffe
   5169c:	b.ne	518a4 <mpfr_free_pool@@Base+0x790>  // b.any
   516a0:	orr	x0, x2, x9
   516a4:	cbnz	x8, 51a60 <mpfr_free_pool@@Base+0x94c>
   516a8:	orr	x8, x4, x13
   516ac:	cbz	x0, 51ab4 <mpfr_free_pool@@Base+0x9a0>
   516b0:	cbz	x8, 519a0 <mpfr_free_pool@@Base+0x88c>
   516b4:	adds	x9, x9, x13
   516b8:	adc	x2, x4, x2
   516bc:	tbz	x2, #51, 5148c <mpfr_free_pool@@Base+0x378>
   516c0:	and	x2, x2, #0xfff7ffffffffffff
   516c4:	and	x0, x9, #0x7
   516c8:	mov	x1, #0x1                   	// #1
   516cc:	b	512bc <mpfr_free_pool@@Base+0x1a8>
   516d0:	mov	x1, #0x7fff                	// #32767
   516d4:	neg	w0, w0
   516d8:	orr	x2, x2, #0x8000000000000
   516dc:	cmp	x3, x1
   516e0:	b.eq	51358 <mpfr_free_pool@@Base+0x244>  // b.none
   516e4:	cmp	w0, #0x74
   516e8:	b.gt	517f4 <mpfr_free_pool@@Base+0x6e0>
   516ec:	cmp	w0, #0x3f
   516f0:	b.gt	51a10 <mpfr_free_pool@@Base+0x8fc>
   516f4:	mov	w1, #0x40                  	// #64
   516f8:	sub	w1, w1, w0
   516fc:	lsr	x5, x9, x0
   51700:	lsl	x9, x9, x1
   51704:	cmp	x9, #0x0
   51708:	lsl	x9, x2, x1
   5170c:	cset	x1, ne  // ne = any
   51710:	orr	x9, x9, x5
   51714:	lsr	x0, x2, x0
   51718:	orr	x9, x9, x1
   5171c:	sub	x4, x4, x0
   51720:	b	51800 <mpfr_free_pool@@Base+0x6ec>
   51724:	subs	x5, x9, x13
   51728:	cmp	x9, x13
   5172c:	sbc	x3, x2, x4
   51730:	tbnz	x3, #51, 518cc <mpfr_free_pool@@Base+0x7b8>
   51734:	orr	x8, x5, x3
   51738:	cbnz	x8, 519f8 <mpfr_free_pool@@Base+0x8e4>
   5173c:	and	x15, x15, #0xc00000
   51740:	mov	x2, #0x0                   	// #0
   51744:	cmp	x15, #0x800, lsl #12
   51748:	mov	x1, #0x0                   	// #0
   5174c:	cset	w7, eq  // eq = none
   51750:	b	51440 <mpfr_free_pool@@Base+0x32c>
   51754:	mov	x0, #0x7fff                	// #32767
   51758:	cmp	x8, x0
   5175c:	b.ne	51420 <mpfr_free_pool@@Base+0x30c>  // b.any
   51760:	orr	x0, x2, x9
   51764:	cbnz	x0, 515ec <mpfr_free_pool@@Base+0x4d8>
   51768:	mov	x2, #0x0                   	// #0
   5176c:	mov	x8, #0x0                   	// #0
   51770:	mov	w0, #0x0                   	// #0
   51774:	b	51614 <mpfr_free_pool@@Base+0x500>
   51778:	orr	x4, x4, x13
   5177c:	cmp	x4, #0x0
   51780:	cset	x0, ne  // ne = any
   51784:	adds	x9, x0, x9
   51788:	cinc	x2, x2, cs  // cs = hs, nlast
   5178c:	b	514b0 <mpfr_free_pool@@Base+0x39c>
   51790:	mov	w4, #0x80                  	// #128
   51794:	sub	w4, w4, w0
   51798:	cmp	w0, #0x40
   5179c:	sub	w9, w1, #0x3f
   517a0:	lsl	x0, x2, x4
   517a4:	orr	x0, x3, x0
   517a8:	csel	x3, x0, x3, ne  // ne = any
   517ac:	lsr	x9, x2, x9
   517b0:	cmp	x3, #0x0
   517b4:	mov	x2, #0x0                   	// #0
   517b8:	cset	x0, ne  // ne = any
   517bc:	orr	x9, x0, x9
   517c0:	mov	x8, x9
   517c4:	b	512ac <mpfr_free_pool@@Base+0x198>
   517c8:	mov	w5, #0x80                  	// #128
   517cc:	sub	w5, w5, w0
   517d0:	subs	w0, w0, #0x40
   517d4:	lsl	x5, x4, x5
   517d8:	orr	x5, x13, x5
   517dc:	csel	x13, x5, x13, ne  // ne = any
   517e0:	lsr	x4, x4, x0
   517e4:	cmp	x13, #0x0
   517e8:	cset	x3, ne  // ne = any
   517ec:	orr	x3, x3, x4
   517f0:	b	51234 <mpfr_free_pool@@Base+0x120>
   517f4:	orr	x2, x2, x9
   517f8:	cmp	x2, #0x0
   517fc:	cset	x9, ne  // ne = any
   51800:	subs	x9, x13, x9
   51804:	mov	w7, w11
   51808:	sbc	x2, x4, xzr
   5180c:	mov	x1, x3
   51810:	mov	x12, x14
   51814:	b	5123c <mpfr_free_pool@@Base+0x128>
   51818:	mov	x0, #0x7fff                	// #32767
   5181c:	neg	w5, w5
   51820:	orr	x2, x2, #0x8000000000000
   51824:	cmp	x3, x0
   51828:	b.eq	5157c <mpfr_free_pool@@Base+0x468>  // b.none
   5182c:	cmp	w5, #0x74
   51830:	b.gt	51a00 <mpfr_free_pool@@Base+0x8ec>
   51834:	cmp	w5, #0x3f
   51838:	b.gt	51ac0 <mpfr_free_pool@@Base+0x9ac>
   5183c:	mov	w1, #0x40                  	// #64
   51840:	sub	w1, w1, w5
   51844:	lsr	x6, x9, x5
   51848:	lsl	x9, x9, x1
   5184c:	cmp	x9, #0x0
   51850:	cset	x0, ne  // ne = any
   51854:	lsl	x9, x2, x1
   51858:	orr	x9, x9, x6
   5185c:	lsr	x5, x2, x5
   51860:	orr	x9, x9, x0
   51864:	add	x4, x4, x5
   51868:	adds	x9, x9, x13
   5186c:	mov	x1, x3
   51870:	cinc	x2, x4, cs  // cs = hs, nlast
   51874:	b	514b0 <mpfr_free_pool@@Base+0x39c>
   51878:	mov	w0, #0x80                  	// #128
   5187c:	sub	w0, w0, w5
   51880:	subs	w5, w5, #0x40
   51884:	lsl	x0, x4, x0
   51888:	orr	x0, x13, x0
   5188c:	csel	x13, x0, x13, ne  // ne = any
   51890:	lsr	x4, x4, x5
   51894:	cmp	x13, #0x0
   51898:	cset	x0, ne  // ne = any
   5189c:	orr	x0, x0, x4
   518a0:	b	51784 <mpfr_free_pool@@Base+0x670>
   518a4:	mov	x1, #0x7fff                	// #32767
   518a8:	cmp	x0, x1
   518ac:	b.eq	51b08 <mpfr_free_pool@@Base+0x9f4>  // b.none
   518b0:	adds	x9, x9, x13
   518b4:	mov	x1, x0
   518b8:	adc	x2, x4, x2
   518bc:	ubfx	x0, x9, #1, #3
   518c0:	extr	x9, x2, x9, #1
   518c4:	lsr	x2, x2, #1
   518c8:	b	512bc <mpfr_free_pool@@Base+0x1a8>
   518cc:	cmp	x13, x9
   518d0:	mov	w7, w11
   518d4:	sbc	x3, x4, x2
   518d8:	sub	x9, x13, x9
   518dc:	mov	x12, x14
   518e0:	b	51244 <mpfr_free_pool@@Base+0x130>
   518e4:	mov	x12, #0x7fff                	// #32767
   518e8:	cmp	x1, x12
   518ec:	b.eq	51918 <mpfr_free_pool@@Base+0x804>  // b.none
   518f0:	cmp	x3, x12
   518f4:	b.eq	51b48 <mpfr_free_pool@@Base+0xa34>  // b.none
   518f8:	cbnz	x5, 51930 <mpfr_free_pool@@Base+0x81c>
   518fc:	mov	w5, w0
   51900:	cbnz	x8, 51c28 <mpfr_free_pool@@Base+0xb14>
   51904:	mov	w7, #0x0                   	// #0
   51908:	mov	x2, #0xffffffffffff        	// #281474976710655
   5190c:	mov	w0, #0x1                   	// #1
   51910:	mov	x8, #0xffffffffffffffff    	// #-1
   51914:	b	5161c <mpfr_free_pool@@Base+0x508>
   51918:	cbz	x5, 51c44 <mpfr_free_pool@@Base+0xb30>
   5191c:	lsr	x0, x2, #50
   51920:	cmp	x3, x1
   51924:	eor	x0, x0, #0x1
   51928:	and	w0, w0, #0x1
   5192c:	b.eq	51b48 <mpfr_free_pool@@Base+0xa34>  // b.none
   51930:	cbz	x8, 51b64 <mpfr_free_pool@@Base+0xa50>
   51934:	bfi	x6, x2, #61, #3
   51938:	lsr	x3, x2, #3
   5193c:	tbz	x2, #50, 51958 <mpfr_free_pool@@Base+0x844>
   51940:	lsr	x1, x4, #3
   51944:	tbnz	x4, #50, 51958 <mpfr_free_pool@@Base+0x844>
   51948:	mov	x6, x10
   5194c:	mov	w7, w11
   51950:	bfi	x6, x4, #61, #3
   51954:	mov	x3, x1
   51958:	extr	x2, x3, x6, #61
   5195c:	bfi	x6, x2, #61, #3
   51960:	lsr	x2, x2, #3
   51964:	mov	x8, x6
   51968:	b	51614 <mpfr_free_pool@@Base+0x500>
   5196c:	mov	x0, #0x7fff                	// #32767
   51970:	cmp	x8, x0
   51974:	b.ne	51420 <mpfr_free_pool@@Base+0x30c>  // b.any
   51978:	orr	x0, x2, x9
   5197c:	cbz	x0, 51768 <mpfr_free_pool@@Base+0x654>
   51980:	lsr	x5, x2, #50
   51984:	eor	w5, w5, #0x1
   51988:	b	515f8 <mpfr_free_pool@@Base+0x4e4>
   5198c:	cbz	x8, 51aa0 <mpfr_free_pool@@Base+0x98c>
   51990:	mov	w7, w11
   51994:	mov	x2, x4
   51998:	mov	x9, x13
   5199c:	mov	x12, x14
   519a0:	mov	x1, #0x0                   	// #0
   519a4:	mov	x3, #0x0                   	// #0
   519a8:	b	51684 <mpfr_free_pool@@Base+0x570>
   519ac:	ands	x3, x15, #0xc00000
   519b0:	b.eq	51a3c <mpfr_free_pool@@Base+0x928>  // b.none
   519b4:	cmp	x3, #0x400, lsl #12
   519b8:	eor	w0, w7, #0x1
   519bc:	cset	w1, eq  // eq = none
   519c0:	tst	w1, w0
   519c4:	b.ne	51c60 <mpfr_free_pool@@Base+0xb4c>  // b.any
   519c8:	cmp	x3, #0x800, lsl #12
   519cc:	b.eq	51c0c <mpfr_free_pool@@Base+0xaf8>  // b.none
   519d0:	cmp	x3, #0x400, lsl #12
   519d4:	mov	w0, #0x14                  	// #20
   519d8:	b.ne	514e8 <mpfr_free_pool@@Base+0x3d4>  // b.any
   519dc:	mov	x2, #0xffffffffffffffff    	// #-1
   519e0:	mov	x1, #0x7ffe                	// #32766
   519e4:	mov	x9, x2
   519e8:	mov	w5, #0x0                   	// #0
   519ec:	mov	w0, #0x14                  	// #20
   519f0:	cbnz	x12, 515ac <mpfr_free_pool@@Base+0x498>
   519f4:	b	515a4 <mpfr_free_pool@@Base+0x490>
   519f8:	mov	x9, x5
   519fc:	b	51244 <mpfr_free_pool@@Base+0x130>
   51a00:	orr	x2, x2, x9
   51a04:	cmp	x2, #0x0
   51a08:	cset	x9, ne  // ne = any
   51a0c:	b	51868 <mpfr_free_pool@@Base+0x754>
   51a10:	mov	w1, #0x80                  	// #128
   51a14:	sub	w1, w1, w0
   51a18:	subs	w0, w0, #0x40
   51a1c:	lsl	x1, x2, x1
   51a20:	orr	x1, x9, x1
   51a24:	csel	x9, x1, x9, ne  // ne = any
   51a28:	lsr	x2, x2, x0
   51a2c:	cmp	x9, #0x0
   51a30:	cset	x9, ne  // ne = any
   51a34:	orr	x9, x9, x2
   51a38:	b	51800 <mpfr_free_pool@@Base+0x6ec>
   51a3c:	mov	w0, #0x14                  	// #20
   51a40:	b	5152c <mpfr_free_pool@@Base+0x418>
   51a44:	lsr	x5, x4, #50
   51a48:	mov	w7, w11
   51a4c:	eor	x5, x5, #0x1
   51a50:	mov	x9, x13
   51a54:	and	w5, w5, #0x1
   51a58:	mov	x2, x4
   51a5c:	b	515f8 <mpfr_free_pool@@Base+0x4e4>
   51a60:	mov	x8, #0x7fff                	// #32767
   51a64:	cmp	x1, x8
   51a68:	b.eq	51b88 <mpfr_free_pool@@Base+0xa74>  // b.none
   51a6c:	cmp	x3, x8
   51a70:	b.eq	51bfc <mpfr_free_pool@@Base+0xae8>  // b.none
   51a74:	cbnz	x0, 51ba0 <mpfr_free_pool@@Base+0xa8c>
   51a78:	mov	x2, x4
   51a7c:	mov	x9, x13
   51a80:	b	515f8 <mpfr_free_pool@@Base+0x4e4>
   51a84:	mov	x0, #0x7fff                	// #32767
   51a88:	cmp	x3, x0
   51a8c:	b.eq	51c38 <mpfr_free_pool@@Base+0xb24>  // b.none
   51a90:	mov	x2, x4
   51a94:	mov	x9, x13
   51a98:	mov	x1, x3
   51a9c:	b	51420 <mpfr_free_pool@@Base+0x30c>
   51aa0:	and	x15, x15, #0xc00000
   51aa4:	mov	x2, #0x0                   	// #0
   51aa8:	cmp	x15, #0x800, lsl #12
   51aac:	cset	w7, eq  // eq = none
   51ab0:	b	51440 <mpfr_free_pool@@Base+0x32c>
   51ab4:	mov	x2, x4
   51ab8:	mov	x9, x13
   51abc:	b	512ac <mpfr_free_pool@@Base+0x198>
   51ac0:	mov	w0, #0x80                  	// #128
   51ac4:	sub	w0, w0, w5
   51ac8:	subs	w5, w5, #0x40
   51acc:	lsl	x0, x2, x0
   51ad0:	orr	x0, x9, x0
   51ad4:	csel	x9, x0, x9, ne  // ne = any
   51ad8:	lsr	x2, x2, x5
   51adc:	cmp	x9, #0x0
   51ae0:	cset	x9, ne  // ne = any
   51ae4:	orr	x9, x9, x2
   51ae8:	b	51868 <mpfr_free_pool@@Base+0x754>
   51aec:	cmp	x13, x9
   51af0:	mov	w7, w11
   51af4:	sbc	x2, x4, x2
   51af8:	sub	x9, x13, x9
   51afc:	mov	x1, x3
   51b00:	mov	x12, x5
   51b04:	b	5123c <mpfr_free_pool@@Base+0x128>
   51b08:	ands	x3, x15, #0xc00000
   51b0c:	b.eq	51a3c <mpfr_free_pool@@Base+0x928>  // b.none
   51b10:	cmp	x3, #0x400, lsl #12
   51b14:	eor	w0, w7, #0x1
   51b18:	csel	w0, w0, wzr, eq  // eq = none
   51b1c:	cbnz	w0, 51c60 <mpfr_free_pool@@Base+0xb4c>
   51b20:	cmp	x3, #0x800, lsl #12
   51b24:	b.ne	519d0 <mpfr_free_pool@@Base+0x8bc>  // b.any
   51b28:	cbz	x12, 51c10 <mpfr_free_pool@@Base+0xafc>
   51b2c:	mov	w0, #0x14                  	// #20
   51b30:	mov	x16, #0x1                   	// #1
   51b34:	b	5152c <mpfr_free_pool@@Base+0x418>
   51b38:	orr	x0, x4, x13
   51b3c:	cbnz	x0, 51a44 <mpfr_free_pool@@Base+0x930>
   51b40:	mov	w7, w11
   51b44:	b	51768 <mpfr_free_pool@@Base+0x654>
   51b48:	cbz	x8, 51c54 <mpfr_free_pool@@Base+0xb40>
   51b4c:	tst	x4, #0x4000000000000
   51b50:	csinc	w0, w0, wzr, ne  // ne = any
   51b54:	cbnz	x5, 51934 <mpfr_free_pool@@Base+0x820>
   51b58:	mov	w7, w11
   51b5c:	mov	x2, x4
   51b60:	mov	x9, x13
   51b64:	mov	w5, w0
   51b68:	b	515f8 <mpfr_free_pool@@Base+0x4e4>
   51b6c:	orr	x8, x5, x3
   51b70:	cbz	x8, 51aa0 <mpfr_free_pool@@Base+0x98c>
   51b74:	and	x0, x5, #0x7
   51b78:	mov	x9, x5
   51b7c:	mov	x2, x3
   51b80:	mov	w5, #0x1                   	// #1
   51b84:	b	512bc <mpfr_free_pool@@Base+0x1a8>
   51b88:	cbz	x0, 51bf4 <mpfr_free_pool@@Base+0xae0>
   51b8c:	lsr	x5, x2, #50
   51b90:	cmp	x3, x1
   51b94:	eor	x5, x5, #0x1
   51b98:	and	w5, w5, #0x1
   51b9c:	b.eq	51c6c <mpfr_free_pool@@Base+0xb58>  // b.none
   51ba0:	orr	x13, x4, x13
   51ba4:	cbz	x13, 515f8 <mpfr_free_pool@@Base+0x4e4>
   51ba8:	bfi	x6, x2, #61, #3
   51bac:	lsr	x0, x2, #3
   51bb0:	tbz	x2, #50, 51bcc <mpfr_free_pool@@Base+0xab8>
   51bb4:	lsr	x1, x4, #3
   51bb8:	tbnz	x4, #50, 51bcc <mpfr_free_pool@@Base+0xab8>
   51bbc:	and	x6, x10, #0x1fffffffffffffff
   51bc0:	mov	w7, w11
   51bc4:	orr	x6, x6, x4, lsl #61
   51bc8:	mov	x0, x1
   51bcc:	extr	x2, x0, x6, #61
   51bd0:	mov	w0, w5
   51bd4:	bfi	x6, x2, #61, #3
   51bd8:	lsr	x2, x2, #3
   51bdc:	mov	x8, x6
   51be0:	b	51614 <mpfr_free_pool@@Base+0x500>
   51be4:	adds	x9, x9, x13
   51be8:	mov	x1, x3
   51bec:	adc	x2, x4, x2
   51bf0:	b	514b0 <mpfr_free_pool@@Base+0x39c>
   51bf4:	cmp	x3, x1
   51bf8:	b.ne	51a78 <mpfr_free_pool@@Base+0x964>  // b.any
   51bfc:	orr	x1, x4, x13
   51c00:	cbnz	x1, 51c74 <mpfr_free_pool@@Base+0xb60>
   51c04:	cbz	x0, 51768 <mpfr_free_pool@@Base+0x654>
   51c08:	b	515f8 <mpfr_free_pool@@Base+0x4e4>
   51c0c:	cbnz	x16, 51b2c <mpfr_free_pool@@Base+0xa18>
   51c10:	mov	x2, #0xffffffffffffffff    	// #-1
   51c14:	mov	w7, #0x0                   	// #0
   51c18:	mov	x9, x2
   51c1c:	mov	x1, #0x7ffe                	// #32766
   51c20:	mov	w0, #0x14                  	// #20
   51c24:	b	512ec <mpfr_free_pool@@Base+0x1d8>
   51c28:	mov	w7, w11
   51c2c:	mov	x2, x4
   51c30:	mov	x9, x13
   51c34:	b	515f8 <mpfr_free_pool@@Base+0x4e4>
   51c38:	orr	x0, x4, x13
   51c3c:	cbz	x0, 51768 <mpfr_free_pool@@Base+0x654>
   51c40:	b	51584 <mpfr_free_pool@@Base+0x470>
   51c44:	cmp	x3, x1
   51c48:	b.eq	51b48 <mpfr_free_pool@@Base+0xa34>  // b.none
   51c4c:	mov	w5, #0x0                   	// #0
   51c50:	b	51900 <mpfr_free_pool@@Base+0x7ec>
   51c54:	cbnz	x5, 51b64 <mpfr_free_pool@@Base+0xa50>
   51c58:	mov	w5, w0
   51c5c:	b	51900 <mpfr_free_pool@@Base+0x7ec>
   51c60:	mov	w0, #0x14                  	// #20
   51c64:	mov	x16, #0x0                   	// #0
   51c68:	b	5152c <mpfr_free_pool@@Base+0x418>
   51c6c:	orr	x1, x4, x13
   51c70:	cbz	x1, 515f8 <mpfr_free_pool@@Base+0x4e4>
   51c74:	tst	x4, #0x4000000000000
   51c78:	csinc	w5, w5, wzr, ne  // ne = any
   51c7c:	cbnz	x0, 51ba8 <mpfr_free_pool@@Base+0xa94>
   51c80:	b	51a78 <mpfr_free_pool@@Base+0x964>
   51c84:	mov	x8, #0x0                   	// #0
   51c88:	mov	w1, #0x7fff                	// #32767
   51c8c:	mov	x2, #0x0                   	// #0
   51c90:	b	51308 <mpfr_free_pool@@Base+0x1f4>
   51c94:	nop
   51c98:	stp	x29, x30, [sp, #-48]!
   51c9c:	mov	x29, sp
   51ca0:	str	q0, [sp, #16]
   51ca4:	str	q1, [sp, #32]
   51ca8:	ldp	x6, x1, [sp, #16]
   51cac:	ldp	x7, x0, [sp, #32]
   51cb0:	mrs	x2, fpcr
   51cb4:	ubfx	x4, x1, #48, #15
   51cb8:	lsr	x2, x1, #63
   51cbc:	lsr	x3, x0, #63
   51cc0:	ubfx	x9, x0, #0, #48
   51cc4:	mov	x5, #0x7fff                	// #32767
   51cc8:	mov	x10, x6
   51ccc:	cmp	x4, x5
   51cd0:	and	w2, w2, #0xff
   51cd4:	ubfx	x1, x1, #0, #48
   51cd8:	and	w3, w3, #0xff
   51cdc:	ubfx	x0, x0, #48, #15
   51ce0:	b.eq	51d14 <mpfr_free_pool@@Base+0xc00>  // b.none
   51ce4:	cmp	x0, x5
   51ce8:	b.eq	51d00 <mpfr_free_pool@@Base+0xbec>  // b.none
   51cec:	cmp	x4, x0
   51cf0:	mov	w0, #0x1                   	// #1
   51cf4:	b.eq	51d2c <mpfr_free_pool@@Base+0xc18>  // b.none
   51cf8:	ldp	x29, x30, [sp], #48
   51cfc:	ret
   51d00:	orr	x8, x9, x7
   51d04:	cbnz	x8, 51d90 <mpfr_free_pool@@Base+0xc7c>
   51d08:	mov	w0, #0x1                   	// #1
   51d0c:	ldp	x29, x30, [sp], #48
   51d10:	ret
   51d14:	orr	x5, x1, x6
   51d18:	cbnz	x5, 51d60 <mpfr_free_pool@@Base+0xc4c>
   51d1c:	cmp	x0, x4
   51d20:	b.ne	51d08 <mpfr_free_pool@@Base+0xbf4>  // b.any
   51d24:	orr	x8, x9, x7
   51d28:	cbnz	x8, 51d90 <mpfr_free_pool@@Base+0xc7c>
   51d2c:	cmp	x1, x9
   51d30:	mov	w0, #0x1                   	// #1
   51d34:	ccmp	x6, x7, #0x0, eq  // eq = none
   51d38:	b.ne	51cf8 <mpfr_free_pool@@Base+0xbe4>  // b.any
   51d3c:	cmp	w2, w3
   51d40:	mov	w0, #0x0                   	// #0
   51d44:	b.eq	51cf8 <mpfr_free_pool@@Base+0xbe4>  // b.none
   51d48:	mov	w0, #0x1                   	// #1
   51d4c:	cbnz	x4, 51cf8 <mpfr_free_pool@@Base+0xbe4>
   51d50:	orr	x1, x1, x10
   51d54:	cmp	x1, #0x0
   51d58:	cset	w0, ne  // ne = any
   51d5c:	b	51cf8 <mpfr_free_pool@@Base+0xbe4>
   51d60:	tst	x1, #0x800000000000
   51d64:	b.ne	51d7c <mpfr_free_pool@@Base+0xc68>  // b.any
   51d68:	mov	w0, #0x1                   	// #1
   51d6c:	bl	53750 <mpfr_free_pool@@Base+0x263c>
   51d70:	mov	w0, #0x1                   	// #1
   51d74:	ldp	x29, x30, [sp], #48
   51d78:	ret
   51d7c:	cmp	x0, x4
   51d80:	mov	w0, #0x1                   	// #1
   51d84:	b.ne	51cf8 <mpfr_free_pool@@Base+0xbe4>  // b.any
   51d88:	orr	x8, x9, x7
   51d8c:	cbz	x8, 51cf8 <mpfr_free_pool@@Base+0xbe4>
   51d90:	tst	x9, #0x800000000000
   51d94:	b.eq	51d68 <mpfr_free_pool@@Base+0xc54>  // b.none
   51d98:	b	51d08 <mpfr_free_pool@@Base+0xbf4>
   51d9c:	nop
   51da0:	stp	x29, x30, [sp, #-48]!
   51da4:	mov	x29, sp
   51da8:	str	q0, [sp, #16]
   51dac:	str	q1, [sp, #32]
   51db0:	ldp	x8, x1, [sp, #16]
   51db4:	ldp	x9, x0, [sp, #32]
   51db8:	mrs	x2, fpcr
   51dbc:	ubfx	x4, x1, #48, #15
   51dc0:	ubfx	x10, x1, #0, #48
   51dc4:	lsr	x2, x1, #63
   51dc8:	mov	x7, #0x7fff                	// #32767
   51dcc:	mov	x5, x8
   51dd0:	cmp	x4, x7
   51dd4:	ubfx	x11, x0, #0, #48
   51dd8:	ubfx	x6, x0, #48, #15
   51ddc:	lsr	x1, x0, #63
   51de0:	mov	x3, x9
   51de4:	b.eq	51e20 <mpfr_free_pool@@Base+0xd0c>  // b.none
   51de8:	cmp	x6, x7
   51dec:	b.eq	51e30 <mpfr_free_pool@@Base+0xd1c>  // b.none
   51df0:	cbnz	x4, 51e58 <mpfr_free_pool@@Base+0xd44>
   51df4:	orr	x5, x10, x8
   51df8:	cmp	x5, #0x0
   51dfc:	cset	w0, eq  // eq = none
   51e00:	cbnz	x6, 51e0c <mpfr_free_pool@@Base+0xcf8>
   51e04:	orr	x3, x11, x9
   51e08:	cbz	x3, 51e78 <mpfr_free_pool@@Base+0xd64>
   51e0c:	cbz	w0, 51e3c <mpfr_free_pool@@Base+0xd28>
   51e10:	cmp	x1, #0x0
   51e14:	csinv	w0, w0, wzr, ne  // ne = any
   51e18:	ldp	x29, x30, [sp], #48
   51e1c:	ret
   51e20:	orr	x0, x10, x8
   51e24:	cbnz	x0, 51e84 <mpfr_free_pool@@Base+0xd70>
   51e28:	cmp	x6, x4
   51e2c:	b.ne	51e58 <mpfr_free_pool@@Base+0xd44>  // b.any
   51e30:	orr	x3, x11, x3
   51e34:	cbnz	x3, 51e84 <mpfr_free_pool@@Base+0xd70>
   51e38:	cbz	x4, 51e68 <mpfr_free_pool@@Base+0xd54>
   51e3c:	cmp	x2, x1
   51e40:	b.eq	51e98 <mpfr_free_pool@@Base+0xd84>  // b.none
   51e44:	cmp	x2, #0x0
   51e48:	mov	w0, #0xffffffff            	// #-1
   51e4c:	cneg	w0, w0, eq  // eq = none
   51e50:	ldp	x29, x30, [sp], #48
   51e54:	ret
   51e58:	cbnz	x6, 51e3c <mpfr_free_pool@@Base+0xd28>
   51e5c:	orr	x3, x11, x3
   51e60:	cbnz	x3, 51e3c <mpfr_free_pool@@Base+0xd28>
   51e64:	b	51e44 <mpfr_free_pool@@Base+0xd30>
   51e68:	orr	x5, x10, x5
   51e6c:	cmp	x5, #0x0
   51e70:	cset	w0, eq  // eq = none
   51e74:	b	51e0c <mpfr_free_pool@@Base+0xcf8>
   51e78:	mov	w0, #0x0                   	// #0
   51e7c:	cbz	x5, 51e18 <mpfr_free_pool@@Base+0xd04>
   51e80:	b	51e44 <mpfr_free_pool@@Base+0xd30>
   51e84:	mov	w0, #0x1                   	// #1
   51e88:	bl	53750 <mpfr_free_pool@@Base+0x263c>
   51e8c:	mov	w0, #0xfffffffe            	// #-2
   51e90:	ldp	x29, x30, [sp], #48
   51e94:	ret
   51e98:	cmp	x4, x6
   51e9c:	b.gt	51e44 <mpfr_free_pool@@Base+0xd30>
   51ea0:	b.lt	51ed8 <mpfr_free_pool@@Base+0xdc4>  // b.tstop
   51ea4:	cmp	x10, x11
   51ea8:	b.hi	51e44 <mpfr_free_pool@@Base+0xd30>  // b.pmore
   51eac:	cset	w0, eq  // eq = none
   51eb0:	cmp	w0, #0x0
   51eb4:	ccmp	x8, x9, #0x0, ne  // ne = any
   51eb8:	b.hi	51e44 <mpfr_free_pool@@Base+0xd30>  // b.pmore
   51ebc:	cmp	x10, x11
   51ec0:	b.cc	51ed8 <mpfr_free_pool@@Base+0xdc4>  // b.lo, b.ul, b.last
   51ec4:	cmp	w0, #0x0
   51ec8:	mov	w0, #0x0                   	// #0
   51ecc:	ccmp	x8, x9, #0x2, ne  // ne = any
   51ed0:	b.cs	51e18 <mpfr_free_pool@@Base+0xd04>  // b.hs, b.nlast
   51ed4:	nop
   51ed8:	cmp	x2, #0x0
   51edc:	mov	w0, #0x1                   	// #1
   51ee0:	cneg	w0, w0, eq  // eq = none
   51ee4:	b	51e18 <mpfr_free_pool@@Base+0xd04>
   51ee8:	stp	x29, x30, [sp, #-48]!
   51eec:	mov	x29, sp
   51ef0:	str	q0, [sp, #16]
   51ef4:	str	q1, [sp, #32]
   51ef8:	ldp	x8, x1, [sp, #16]
   51efc:	ldp	x9, x0, [sp, #32]
   51f00:	mrs	x2, fpcr
   51f04:	ubfx	x4, x1, #48, #15
   51f08:	ubfx	x10, x1, #0, #48
   51f0c:	lsr	x2, x1, #63
   51f10:	mov	x5, #0x7fff                	// #32767
   51f14:	mov	x6, x8
   51f18:	cmp	x4, x5
   51f1c:	ubfx	x11, x0, #0, #48
   51f20:	ubfx	x7, x0, #48, #15
   51f24:	lsr	x1, x0, #63
   51f28:	mov	x3, x9
   51f2c:	b.eq	51f64 <mpfr_free_pool@@Base+0xe50>  // b.none
   51f30:	cmp	x7, x5
   51f34:	b.eq	51f74 <mpfr_free_pool@@Base+0xe60>  // b.none
   51f38:	cbnz	x4, 51fa0 <mpfr_free_pool@@Base+0xe8c>
   51f3c:	orr	x6, x10, x8
   51f40:	cmp	x6, #0x0
   51f44:	cset	w0, eq  // eq = none
   51f48:	cbnz	x7, 51f8c <mpfr_free_pool@@Base+0xe78>
   51f4c:	orr	x3, x11, x9
   51f50:	cbnz	x3, 51f8c <mpfr_free_pool@@Base+0xe78>
   51f54:	mov	w0, #0x0                   	// #0
   51f58:	cbnz	x6, 51fb4 <mpfr_free_pool@@Base+0xea0>
   51f5c:	ldp	x29, x30, [sp], #48
   51f60:	ret
   51f64:	orr	x0, x10, x8
   51f68:	cbnz	x0, 51fc8 <mpfr_free_pool@@Base+0xeb4>
   51f6c:	cmp	x7, x4
   51f70:	b.ne	51fa0 <mpfr_free_pool@@Base+0xe8c>  // b.any
   51f74:	orr	x3, x11, x3
   51f78:	cbnz	x3, 51fc8 <mpfr_free_pool@@Base+0xeb4>
   51f7c:	cbnz	x4, 51fac <mpfr_free_pool@@Base+0xe98>
   51f80:	orr	x6, x10, x6
   51f84:	cmp	x6, #0x0
   51f88:	cset	w0, eq  // eq = none
   51f8c:	cbz	w0, 51fac <mpfr_free_pool@@Base+0xe98>
   51f90:	cmp	x1, #0x0
   51f94:	csinv	w0, w0, wzr, ne  // ne = any
   51f98:	ldp	x29, x30, [sp], #48
   51f9c:	ret
   51fa0:	cbnz	x7, 51fac <mpfr_free_pool@@Base+0xe98>
   51fa4:	orr	x3, x11, x3
   51fa8:	cbz	x3, 51fb4 <mpfr_free_pool@@Base+0xea0>
   51fac:	cmp	x2, x1
   51fb0:	b.eq	51fdc <mpfr_free_pool@@Base+0xec8>  // b.none
   51fb4:	cmp	x2, #0x0
   51fb8:	mov	w0, #0xffffffff            	// #-1
   51fbc:	cneg	w0, w0, eq  // eq = none
   51fc0:	ldp	x29, x30, [sp], #48
   51fc4:	ret
   51fc8:	mov	w0, #0x1                   	// #1
   51fcc:	bl	53750 <mpfr_free_pool@@Base+0x263c>
   51fd0:	mov	w0, #0x2                   	// #2
   51fd4:	ldp	x29, x30, [sp], #48
   51fd8:	ret
   51fdc:	cmp	x4, x7
   51fe0:	b.gt	51fb4 <mpfr_free_pool@@Base+0xea0>
   51fe4:	b.lt	52018 <mpfr_free_pool@@Base+0xf04>  // b.tstop
   51fe8:	cmp	x10, x11
   51fec:	b.hi	51fb4 <mpfr_free_pool@@Base+0xea0>  // b.pmore
   51ff0:	cset	w0, eq  // eq = none
   51ff4:	cmp	w0, #0x0
   51ff8:	ccmp	x8, x9, #0x0, ne  // ne = any
   51ffc:	b.hi	51fb4 <mpfr_free_pool@@Base+0xea0>  // b.pmore
   52000:	cmp	x10, x11
   52004:	b.cc	52018 <mpfr_free_pool@@Base+0xf04>  // b.lo, b.ul, b.last
   52008:	cmp	w0, #0x0
   5200c:	mov	w0, #0x0                   	// #0
   52010:	ccmp	x8, x9, #0x2, ne  // ne = any
   52014:	b.cs	51f5c <mpfr_free_pool@@Base+0xe48>  // b.hs, b.nlast
   52018:	cmp	x2, #0x0
   5201c:	mov	w0, #0x1                   	// #1
   52020:	cneg	w0, w0, eq  // eq = none
   52024:	b	51f5c <mpfr_free_pool@@Base+0xe48>
   52028:	stp	x29, x30, [sp, #-80]!
   5202c:	mov	x29, sp
   52030:	str	q0, [sp, #48]
   52034:	str	q1, [sp, #64]
   52038:	ldp	x1, x0, [sp, #48]
   5203c:	ldp	x6, x2, [sp, #64]
   52040:	mrs	x11, fpcr
   52044:	lsr	x3, x0, #63
   52048:	ubfx	x7, x0, #0, #48
   5204c:	and	w12, w3, #0xff
   52050:	mov	x14, x3
   52054:	ubfx	x3, x0, #48, #15
   52058:	cbz	w3, 52400 <mpfr_free_pool@@Base+0x12ec>
   5205c:	mov	w4, #0x7fff                	// #32767
   52060:	cmp	w3, w4
   52064:	b.eq	524a4 <mpfr_free_pool@@Base+0x1390>  // b.none
   52068:	and	x3, x3, #0xffff
   5206c:	extr	x4, x7, x1, #61
   52070:	mov	x18, #0xffffffffffffc001    	// #-16383
   52074:	orr	x7, x4, #0x8000000000000
   52078:	add	x3, x3, x18
   5207c:	lsl	x5, x1, #3
   52080:	mov	x16, #0x0                   	// #0
   52084:	mov	x1, #0x0                   	// #0
   52088:	mov	w0, #0x0                   	// #0
   5208c:	lsr	x8, x2, #63
   52090:	ubfx	x4, x2, #0, #48
   52094:	and	w15, w8, #0xff
   52098:	mov	x13, x8
   5209c:	ubfx	x9, x2, #48, #15
   520a0:	cbz	w9, 52460 <mpfr_free_pool@@Base+0x134c>
   520a4:	mov	w8, #0x7fff                	// #32767
   520a8:	cmp	w9, w8
   520ac:	b.eq	52130 <mpfr_free_pool@@Base+0x101c>  // b.none
   520b0:	and	x9, x9, #0xffff
   520b4:	mov	x17, #0xffffffffffffc001    	// #-16383
   520b8:	add	x9, x9, x17
   520bc:	extr	x2, x4, x6, #61
   520c0:	add	x9, x9, x3
   520c4:	lsl	x6, x6, #3
   520c8:	orr	x4, x2, #0x8000000000000
   520cc:	mov	x2, #0x0                   	// #0
   520d0:	eor	w8, w12, w15
   520d4:	cmp	x1, #0xa
   520d8:	and	w10, w8, #0xff
   520dc:	add	x3, x9, #0x1
   520e0:	and	x8, x8, #0xff
   520e4:	b.le	52168 <mpfr_free_pool@@Base+0x1054>
   520e8:	cmp	x1, #0xb
   520ec:	b.eq	52800 <mpfr_free_pool@@Base+0x16ec>  // b.none
   520f0:	mov	w15, w12
   520f4:	mov	x13, x14
   520f8:	mov	w10, w15
   520fc:	cmp	x16, #0x2
   52100:	b.eq	524c4 <mpfr_free_pool@@Base+0x13b0>  // b.none
   52104:	mov	x4, x7
   52108:	mov	x6, x5
   5210c:	mov	x2, x16
   52110:	mov	x8, x13
   52114:	cmp	x2, #0x3
   52118:	b.ne	52184 <mpfr_free_pool@@Base+0x1070>  // b.any
   5211c:	orr	x4, x4, #0x800000000000
   52120:	mov	x5, x6
   52124:	and	x4, x4, #0xffffffffffff
   52128:	mov	w1, #0x7fff                	// #32767
   5212c:	b	52198 <mpfr_free_pool@@Base+0x1084>
   52130:	mov	x8, #0x7fff                	// #32767
   52134:	orr	x2, x4, x6
   52138:	add	x9, x3, x8
   5213c:	cbnz	x2, 521bc <mpfr_free_pool@@Base+0x10a8>
   52140:	eor	w8, w12, w15
   52144:	orr	x1, x1, #0x2
   52148:	and	w10, w8, #0xff
   5214c:	cmp	x1, #0xa
   52150:	add	x3, x3, #0x8, lsl #12
   52154:	and	x8, x8, #0xff
   52158:	mov	x6, #0x0                   	// #0
   5215c:	b.gt	52774 <mpfr_free_pool@@Base+0x1660>
   52160:	mov	x4, #0x0                   	// #0
   52164:	mov	x2, #0x2                   	// #2
   52168:	cmp	x1, #0x2
   5216c:	b.gt	521e4 <mpfr_free_pool@@Base+0x10d0>
   52170:	sub	x1, x1, #0x1
   52174:	cmp	x1, #0x1
   52178:	b.hi	52220 <mpfr_free_pool@@Base+0x110c>  // b.pmore
   5217c:	cmp	x2, #0x2
   52180:	b.eq	524c4 <mpfr_free_pool@@Base+0x13b0>  // b.none
   52184:	cmp	x2, #0x1
   52188:	b.ne	52380 <mpfr_free_pool@@Base+0x126c>  // b.any
   5218c:	mov	w1, #0x0                   	// #0
   52190:	mov	x4, #0x0                   	// #0
   52194:	mov	x5, #0x0                   	// #0
   52198:	mov	x3, #0x0                   	// #0
   5219c:	orr	w1, w1, w10, lsl #15
   521a0:	bfxil	x3, x4, #0, #48
   521a4:	fmov	d0, x5
   521a8:	bfi	x3, x1, #48, #16
   521ac:	fmov	v0.d[1], x3
   521b0:	cbnz	w0, 525f0 <mpfr_free_pool@@Base+0x14dc>
   521b4:	ldp	x29, x30, [sp], #80
   521b8:	ret
   521bc:	tst	x4, #0x800000000000
   521c0:	eor	w8, w12, w15
   521c4:	orr	x1, x1, #0x3
   521c8:	csinc	w0, w0, wzr, ne  // ne = any
   521cc:	and	w10, w8, #0xff
   521d0:	add	x3, x3, #0x8, lsl #12
   521d4:	cmp	x1, #0xa
   521d8:	and	x8, x8, #0xff
   521dc:	mov	x2, #0x3                   	// #3
   521e0:	b.gt	527f4 <mpfr_free_pool@@Base+0x16e0>
   521e4:	mov	x12, #0x1                   	// #1
   521e8:	mov	x14, #0x530                 	// #1328
   521ec:	lsl	x1, x12, x1
   521f0:	tst	x1, x14
   521f4:	b.ne	523f4 <mpfr_free_pool@@Base+0x12e0>  // b.any
   521f8:	mov	x14, #0x240                 	// #576
   521fc:	tst	x1, x14
   52200:	b.ne	523dc <mpfr_free_pool@@Base+0x12c8>  // b.any
   52204:	mov	x12, #0x88                  	// #136
   52208:	tst	x1, x12
   5220c:	b.eq	52220 <mpfr_free_pool@@Base+0x110c>  // b.none
   52210:	mov	x7, x4
   52214:	mov	x5, x6
   52218:	mov	x16, x2
   5221c:	b	520f8 <mpfr_free_pool@@Base+0xfe4>
   52220:	lsr	x13, x5, #32
   52224:	and	x12, x6, #0xffffffff
   52228:	and	x15, x5, #0xffffffff
   5222c:	lsr	x6, x6, #32
   52230:	and	x18, x4, #0xffffffff
   52234:	lsr	x2, x4, #32
   52238:	mul	x4, x13, x12
   5223c:	stp	x21, x22, [sp, #32]
   52240:	lsr	x22, x7, #32
   52244:	and	x5, x7, #0xffffffff
   52248:	mul	x16, x12, x15
   5224c:	madd	x7, x6, x15, x4
   52250:	stp	x19, x20, [sp, #16]
   52254:	mul	x1, x13, x18
   52258:	mul	x17, x15, x18
   5225c:	and	x30, x16, #0xffffffff
   52260:	madd	x15, x2, x15, x1
   52264:	add	x16, x7, x16, lsr #32
   52268:	mul	x21, x22, x12
   5226c:	cmp	x4, x16
   52270:	mul	x20, x22, x18
   52274:	mov	x14, #0x100000000           	// #4294967296
   52278:	mul	x19, x13, x6
   5227c:	add	x15, x15, x17, lsr #32
   52280:	mul	x12, x12, x5
   52284:	and	x17, x17, #0xffffffff
   52288:	mul	x18, x5, x18
   5228c:	add	x4, x19, x14
   52290:	madd	x7, x6, x5, x21
   52294:	csel	x19, x4, x19, hi  // hi = pmore
   52298:	madd	x5, x2, x5, x20
   5229c:	cmp	x1, x15
   522a0:	mul	x13, x13, x2
   522a4:	add	x17, x17, x15, lsl #32
   522a8:	mul	x6, x6, x22
   522ac:	add	x7, x7, x12, lsr #32
   522b0:	add	x5, x5, x18, lsr #32
   522b4:	add	x4, x13, x14
   522b8:	mul	x2, x2, x22
   522bc:	csel	x13, x4, x13, hi  // hi = pmore
   522c0:	and	x1, x18, #0xffffffff
   522c4:	cmp	x21, x7
   522c8:	add	x4, x6, x14
   522cc:	add	x30, x30, x16, lsl #32
   522d0:	csel	x6, x4, x6, hi  // hi = pmore
   522d4:	add	x13, x13, x15, lsr #32
   522d8:	cmp	x20, x5
   522dc:	add	x1, x1, x5, lsl #32
   522e0:	add	x16, x17, x16, lsr #32
   522e4:	add	x14, x2, x14
   522e8:	csel	x2, x14, x2, hi  // hi = pmore
   522ec:	add	x16, x19, x16
   522f0:	adds	x1, x1, x13
   522f4:	and	x12, x12, #0xffffffff
   522f8:	cset	x13, cs  // cs = hs, nlast
   522fc:	cmp	x16, x17
   52300:	cset	x4, cc  // cc = lo, ul, last
   52304:	add	x12, x12, x7, lsl #32
   52308:	adds	x1, x1, x4
   5230c:	lsr	x5, x5, #32
   52310:	cset	x4, cs  // cs = hs, nlast
   52314:	cmp	x13, #0x0
   52318:	ccmp	x4, #0x0, #0x0, eq  // eq = none
   5231c:	add	x7, x6, x7, lsr #32
   52320:	cinc	x5, x5, ne  // ne = any
   52324:	adds	x6, x16, x12
   52328:	cset	x4, cs  // cs = hs, nlast
   5232c:	adds	x1, x1, x7
   52330:	cset	x7, cs  // cs = hs, nlast
   52334:	adds	x4, x1, x4
   52338:	cset	x1, cs  // cs = hs, nlast
   5233c:	cmp	x7, #0x0
   52340:	orr	x30, x30, x6, lsl #13
   52344:	ccmp	x1, #0x0, #0x0, eq  // eq = none
   52348:	cinc	x1, x2, ne  // ne = any
   5234c:	cmp	x30, #0x0
   52350:	add	x1, x1, x5
   52354:	cset	x2, ne  // ne = any
   52358:	orr	x6, x2, x6, lsr #51
   5235c:	orr	x6, x6, x4, lsl #13
   52360:	extr	x4, x1, x4, #51
   52364:	tbz	x1, #39, 52678 <mpfr_free_pool@@Base+0x1564>
   52368:	ldp	x19, x20, [sp, #16]
   5236c:	and	x1, x6, #0x1
   52370:	ldp	x21, x22, [sp, #32]
   52374:	orr	x6, x1, x6, lsr #1
   52378:	orr	x6, x6, x4, lsl #63
   5237c:	lsr	x4, x4, #1
   52380:	mov	x1, #0x3fff                	// #16383
   52384:	add	x2, x3, x1
   52388:	cmp	x2, #0x0
   5238c:	b.le	52524 <mpfr_free_pool@@Base+0x1410>
   52390:	tst	x6, #0x7
   52394:	b.eq	523b4 <mpfr_free_pool@@Base+0x12a0>  // b.none
   52398:	and	x1, x11, #0xc00000
   5239c:	orr	w0, w0, #0x10
   523a0:	cmp	x1, #0x400, lsl #12
   523a4:	b.eq	5276c <mpfr_free_pool@@Base+0x1658>  // b.none
   523a8:	cmp	x1, #0x800, lsl #12
   523ac:	b.eq	52714 <mpfr_free_pool@@Base+0x1600>  // b.none
   523b0:	cbz	x1, 526fc <mpfr_free_pool@@Base+0x15e8>
   523b4:	tbz	x4, #52, 523c0 <mpfr_free_pool@@Base+0x12ac>
   523b8:	and	x4, x4, #0xffefffffffffffff
   523bc:	add	x2, x3, #0x4, lsl #12
   523c0:	mov	x1, #0x7ffe                	// #32766
   523c4:	cmp	x2, x1
   523c8:	b.gt	5264c <mpfr_free_pool@@Base+0x1538>
   523cc:	and	w1, w2, #0x7fff
   523d0:	extr	x5, x4, x6, #3
   523d4:	ubfx	x4, x4, #3, #48
   523d8:	b	52198 <mpfr_free_pool@@Base+0x1084>
   523dc:	mov	w0, w12
   523e0:	mov	w10, #0x0                   	// #0
   523e4:	mov	x4, #0xffffffffffff        	// #281474976710655
   523e8:	mov	x5, #0xffffffffffffffff    	// #-1
   523ec:	mov	w1, #0x7fff                	// #32767
   523f0:	b	52198 <mpfr_free_pool@@Base+0x1084>
   523f4:	mov	w15, w10
   523f8:	mov	x13, x8
   523fc:	b	520f8 <mpfr_free_pool@@Base+0xfe4>
   52400:	orr	x5, x7, x1
   52404:	cbz	x5, 5250c <mpfr_free_pool@@Base+0x13f8>
   52408:	cbz	x7, 52628 <mpfr_free_pool@@Base+0x1514>
   5240c:	clz	x0, x7
   52410:	sub	x4, x0, #0xf
   52414:	add	w5, w4, #0x3
   52418:	mov	w3, #0x3d                  	// #61
   5241c:	sub	w3, w3, w4
   52420:	lsl	x4, x7, x5
   52424:	lsr	x3, x1, x3
   52428:	orr	x7, x3, x4
   5242c:	lsl	x5, x1, x5
   52430:	lsr	x8, x2, #63
   52434:	mov	x3, #0xffffffffffffc011    	// #-16367
   52438:	ubfx	x4, x2, #0, #48
   5243c:	sub	x3, x3, x0
   52440:	and	w15, w8, #0xff
   52444:	mov	x13, x8
   52448:	ubfx	x9, x2, #48, #15
   5244c:	mov	x1, #0x0                   	// #0
   52450:	mov	x16, #0x0                   	// #0
   52454:	mov	w0, #0x0                   	// #0
   52458:	cbnz	w9, 520a4 <mpfr_free_pool@@Base+0xf90>
   5245c:	nop
   52460:	orr	x2, x4, x6
   52464:	cbz	x2, 524d4 <mpfr_free_pool@@Base+0x13c0>
   52468:	cbz	x4, 52604 <mpfr_free_pool@@Base+0x14f0>
   5246c:	clz	x9, x4
   52470:	sub	x2, x9, #0xf
   52474:	add	w10, w2, #0x3
   52478:	mov	w8, #0x3d                  	// #61
   5247c:	sub	w8, w8, w2
   52480:	lsl	x2, x4, x10
   52484:	lsr	x8, x6, x8
   52488:	orr	x4, x8, x2
   5248c:	lsl	x6, x6, x10
   52490:	sub	x9, x3, x9
   52494:	mov	x10, #0xffffffffffffc011    	// #-16367
   52498:	mov	x2, #0x0                   	// #0
   5249c:	add	x9, x9, x10
   524a0:	b	520d0 <mpfr_free_pool@@Base+0xfbc>
   524a4:	orr	x5, x7, x1
   524a8:	cbnz	x5, 524ec <mpfr_free_pool@@Base+0x13d8>
   524ac:	mov	x7, #0x0                   	// #0
   524b0:	mov	x1, #0x8                   	// #8
   524b4:	mov	x3, #0x7fff                	// #32767
   524b8:	mov	x16, #0x2                   	// #2
   524bc:	mov	w0, #0x0                   	// #0
   524c0:	b	5208c <mpfr_free_pool@@Base+0xf78>
   524c4:	mov	w1, #0x7fff                	// #32767
   524c8:	mov	x4, #0x0                   	// #0
   524cc:	mov	x5, #0x0                   	// #0
   524d0:	b	52198 <mpfr_free_pool@@Base+0x1084>
   524d4:	orr	x1, x1, #0x1
   524d8:	mov	x9, x3
   524dc:	mov	x4, #0x0                   	// #0
   524e0:	mov	x6, #0x0                   	// #0
   524e4:	mov	x2, #0x1                   	// #1
   524e8:	b	520d0 <mpfr_free_pool@@Base+0xfbc>
   524ec:	lsr	x0, x7, #47
   524f0:	mov	x5, x1
   524f4:	eor	x0, x0, #0x1
   524f8:	mov	x1, #0xc                   	// #12
   524fc:	and	w0, w0, #0x1
   52500:	mov	x3, #0x7fff                	// #32767
   52504:	mov	x16, #0x3                   	// #3
   52508:	b	5208c <mpfr_free_pool@@Base+0xf78>
   5250c:	mov	x7, #0x0                   	// #0
   52510:	mov	x1, #0x4                   	// #4
   52514:	mov	x3, #0x0                   	// #0
   52518:	mov	x16, #0x1                   	// #1
   5251c:	mov	w0, #0x0                   	// #0
   52520:	b	5208c <mpfr_free_pool@@Base+0xf78>
   52524:	mov	x1, #0x1                   	// #1
   52528:	sub	x2, x1, x2
   5252c:	cmp	x2, #0x74
   52530:	b.gt	525a8 <mpfr_free_pool@@Base+0x1494>
   52534:	cmp	x2, #0x3f
   52538:	b.le	52688 <mpfr_free_pool@@Base+0x1574>
   5253c:	mov	w1, #0x80                  	// #128
   52540:	sub	w1, w1, w2
   52544:	cmp	x2, #0x40
   52548:	sub	w2, w2, #0x40
   5254c:	lsl	x1, x4, x1
   52550:	orr	x1, x6, x1
   52554:	csel	x6, x1, x6, ne  // ne = any
   52558:	lsr	x2, x4, x2
   5255c:	cmp	x6, #0x0
   52560:	cset	x5, ne  // ne = any
   52564:	orr	x5, x5, x2
   52568:	ands	x2, x5, #0x7
   5256c:	b.eq	526bc <mpfr_free_pool@@Base+0x15a8>  // b.none
   52570:	mov	x2, #0x0                   	// #0
   52574:	and	x11, x11, #0xc00000
   52578:	orr	w0, w0, #0x10
   5257c:	cmp	x11, #0x400, lsl #12
   52580:	b.eq	527cc <mpfr_free_pool@@Base+0x16b8>  // b.none
   52584:	cmp	x11, #0x800, lsl #12
   52588:	b.eq	527e0 <mpfr_free_pool@@Base+0x16cc>  // b.none
   5258c:	cbz	x11, 52724 <mpfr_free_pool@@Base+0x1610>
   52590:	tbnz	x2, #51, 5273c <mpfr_free_pool@@Base+0x1628>
   52594:	ubfx	x4, x2, #3, #48
   52598:	extr	x5, x2, x5, #3
   5259c:	orr	w0, w0, #0x8
   525a0:	mov	w1, #0x0                   	// #0
   525a4:	b	525d8 <mpfr_free_pool@@Base+0x14c4>
   525a8:	orr	x5, x6, x4
   525ac:	cbz	x5, 525cc <mpfr_free_pool@@Base+0x14b8>
   525b0:	and	x11, x11, #0xc00000
   525b4:	orr	w0, w0, #0x10
   525b8:	cmp	x11, #0x400, lsl #12
   525bc:	sub	x5, x1, x8
   525c0:	b.eq	525cc <mpfr_free_pool@@Base+0x14b8>  // b.none
   525c4:	cmp	x11, #0x800, lsl #12
   525c8:	csel	x5, x8, xzr, eq  // eq = none
   525cc:	orr	w0, w0, #0x8
   525d0:	mov	w1, #0x0                   	// #0
   525d4:	mov	x4, #0x0                   	// #0
   525d8:	mov	x3, #0x0                   	// #0
   525dc:	fmov	d0, x5
   525e0:	bfxil	x3, x4, #0, #48
   525e4:	bfi	x3, x1, #48, #15
   525e8:	bfi	x3, x10, #63, #1
   525ec:	fmov	v0.d[1], x3
   525f0:	str	q0, [sp, #48]
   525f4:	bl	53750 <mpfr_free_pool@@Base+0x263c>
   525f8:	ldr	q0, [sp, #48]
   525fc:	ldp	x29, x30, [sp], #80
   52600:	ret
   52604:	clz	x9, x6
   52608:	add	x2, x9, #0x31
   5260c:	add	x9, x9, #0x40
   52610:	cmp	x2, #0x3c
   52614:	b.le	52474 <mpfr_free_pool@@Base+0x1360>
   52618:	sub	w2, w2, #0x3d
   5261c:	lsl	x4, x6, x2
   52620:	mov	x6, #0x0                   	// #0
   52624:	b	52490 <mpfr_free_pool@@Base+0x137c>
   52628:	clz	x3, x1
   5262c:	add	x4, x3, #0x31
   52630:	add	x0, x3, #0x40
   52634:	cmp	x4, #0x3c
   52638:	b.le	52414 <mpfr_free_pool@@Base+0x1300>
   5263c:	sub	w4, w4, #0x3d
   52640:	mov	x5, #0x0                   	// #0
   52644:	lsl	x7, x1, x4
   52648:	b	52430 <mpfr_free_pool@@Base+0x131c>
   5264c:	and	x5, x11, #0xc00000
   52650:	cmp	x5, #0x400, lsl #12
   52654:	b.eq	52750 <mpfr_free_pool@@Base+0x163c>  // b.none
   52658:	cmp	x5, #0x800, lsl #12
   5265c:	b.eq	526e0 <mpfr_free_pool@@Base+0x15cc>  // b.none
   52660:	cbz	x5, 526d4 <mpfr_free_pool@@Base+0x15c0>
   52664:	mov	x4, #0xffffffffffff        	// #281474976710655
   52668:	mov	x5, #0xffffffffffffffff    	// #-1
   5266c:	mov	w2, #0x14                  	// #20
   52670:	orr	w0, w0, w2
   52674:	b	525d8 <mpfr_free_pool@@Base+0x14c4>
   52678:	mov	x3, x9
   5267c:	ldp	x19, x20, [sp, #16]
   52680:	ldp	x21, x22, [sp, #32]
   52684:	b	52380 <mpfr_free_pool@@Base+0x126c>
   52688:	mov	w1, #0x40                  	// #64
   5268c:	sub	w1, w1, w2
   52690:	lsr	x3, x6, x2
   52694:	lsl	x6, x6, x1
   52698:	cmp	x6, #0x0
   5269c:	lsl	x5, x4, x1
   526a0:	cset	x1, ne  // ne = any
   526a4:	orr	x5, x5, x3
   526a8:	lsr	x2, x4, x2
   526ac:	orr	x5, x5, x1
   526b0:	tst	x5, #0x7
   526b4:	b.ne	52574 <mpfr_free_pool@@Base+0x1460>  // b.any
   526b8:	tbnz	x2, #51, 527ec <mpfr_free_pool@@Base+0x16d8>
   526bc:	ubfx	x4, x2, #3, #48
   526c0:	extr	x5, x2, x5, #3
   526c4:	mov	w1, #0x0                   	// #0
   526c8:	tbz	w11, #11, 52198 <mpfr_free_pool@@Base+0x1084>
   526cc:	orr	w0, w0, #0x8
   526d0:	b	525d8 <mpfr_free_pool@@Base+0x14c4>
   526d4:	mov	w1, #0x7fff                	// #32767
   526d8:	mov	x4, #0x0                   	// #0
   526dc:	b	5266c <mpfr_free_pool@@Base+0x1558>
   526e0:	cmp	x8, #0x0
   526e4:	mov	w2, #0x7fff                	// #32767
   526e8:	mov	x4, #0xffffffffffff        	// #281474976710655
   526ec:	csel	w1, w1, w2, eq  // eq = none
   526f0:	csel	x4, x4, xzr, eq  // eq = none
   526f4:	csetm	x5, eq  // eq = none
   526f8:	b	5266c <mpfr_free_pool@@Base+0x1558>
   526fc:	and	x1, x6, #0xf
   52700:	cmp	x1, #0x4
   52704:	b.eq	523b4 <mpfr_free_pool@@Base+0x12a0>  // b.none
   52708:	adds	x6, x6, #0x4
   5270c:	cinc	x4, x4, cs  // cs = hs, nlast
   52710:	b	523b4 <mpfr_free_pool@@Base+0x12a0>
   52714:	cbz	x8, 523b4 <mpfr_free_pool@@Base+0x12a0>
   52718:	adds	x6, x6, #0x8
   5271c:	cinc	x4, x4, cs  // cs = hs, nlast
   52720:	b	523b4 <mpfr_free_pool@@Base+0x12a0>
   52724:	and	x1, x5, #0xf
   52728:	cmp	x1, #0x4
   5272c:	b.eq	52738 <mpfr_free_pool@@Base+0x1624>  // b.none
   52730:	adds	x5, x5, #0x4
   52734:	cinc	x2, x2, cs  // cs = hs, nlast
   52738:	tbz	x2, #51, 52594 <mpfr_free_pool@@Base+0x1480>
   5273c:	orr	w0, w0, #0x8
   52740:	mov	w1, #0x1                   	// #1
   52744:	mov	x4, #0x0                   	// #0
   52748:	mov	x5, #0x0                   	// #0
   5274c:	b	525d8 <mpfr_free_pool@@Base+0x14c4>
   52750:	cmp	x8, #0x0
   52754:	mov	w2, #0x7fff                	// #32767
   52758:	mov	x4, #0xffffffffffff        	// #281474976710655
   5275c:	csel	w1, w1, w2, ne  // ne = any
   52760:	csel	x4, x4, xzr, ne  // ne = any
   52764:	csetm	x5, ne  // ne = any
   52768:	b	5266c <mpfr_free_pool@@Base+0x1558>
   5276c:	cbnz	x8, 523b4 <mpfr_free_pool@@Base+0x12a0>
   52770:	b	52718 <mpfr_free_pool@@Base+0x1604>
   52774:	mov	x4, #0x2                   	// #2
   52778:	cmp	x1, #0xf
   5277c:	b.ne	527a0 <mpfr_free_pool@@Base+0x168c>  // b.any
   52780:	tbz	x7, #47, 527b8 <mpfr_free_pool@@Base+0x16a4>
   52784:	tbnz	x2, #47, 527b8 <mpfr_free_pool@@Base+0x16a4>
   52788:	orr	x4, x2, #0x800000000000
   5278c:	mov	w10, w15
   52790:	and	x4, x4, #0xffffffffffff
   52794:	mov	x5, x6
   52798:	mov	w1, #0x7fff                	// #32767
   5279c:	b	52198 <mpfr_free_pool@@Base+0x1084>
   527a0:	cmp	x1, #0xb
   527a4:	b.ne	520f0 <mpfr_free_pool@@Base+0xfdc>  // b.any
   527a8:	mov	x7, x2
   527ac:	mov	x5, x6
   527b0:	mov	x16, x4
   527b4:	b	520f8 <mpfr_free_pool@@Base+0xfe4>
   527b8:	orr	x4, x7, #0x800000000000
   527bc:	mov	w10, w12
   527c0:	and	x4, x4, #0xffffffffffff
   527c4:	mov	w1, #0x7fff                	// #32767
   527c8:	b	52198 <mpfr_free_pool@@Base+0x1084>
   527cc:	cbnz	x8, 52738 <mpfr_free_pool@@Base+0x1624>
   527d0:	adds	x5, x5, #0x8
   527d4:	cinc	x2, x2, cs  // cs = hs, nlast
   527d8:	tbnz	x2, #51, 5273c <mpfr_free_pool@@Base+0x1628>
   527dc:	b	52594 <mpfr_free_pool@@Base+0x1480>
   527e0:	cbnz	x8, 527d0 <mpfr_free_pool@@Base+0x16bc>
   527e4:	tbnz	x2, #51, 5273c <mpfr_free_pool@@Base+0x1628>
   527e8:	b	52594 <mpfr_free_pool@@Base+0x1480>
   527ec:	orr	w0, w0, #0x10
   527f0:	b	5273c <mpfr_free_pool@@Base+0x1628>
   527f4:	mov	x2, x4
   527f8:	mov	x4, #0x3                   	// #3
   527fc:	b	52778 <mpfr_free_pool@@Base+0x1664>
   52800:	mov	w10, w15
   52804:	mov	x8, x13
   52808:	b	52114 <mpfr_free_pool@@Base+0x1000>
   5280c:	nop
   52810:	stp	x29, x30, [sp, #-48]!
   52814:	mov	x29, sp
   52818:	str	q0, [sp, #16]
   5281c:	str	q1, [sp, #32]
   52820:	ldp	x5, x1, [sp, #16]
   52824:	ldp	x0, x2, [sp, #32]
   52828:	mrs	x12, fpcr
   5282c:	mov	x9, x0
   52830:	ubfx	x0, x2, #48, #15
   52834:	lsr	x6, x1, #63
   52838:	ubfx	x7, x1, #48, #15
   5283c:	ubfiz	x3, x1, #3, #48
   52840:	mov	x13, x0
   52844:	lsr	x4, x2, #63
   52848:	ubfiz	x2, x2, #3, #48
   5284c:	mov	x11, x6
   52850:	and	w8, w6, #0xff
   52854:	mov	x14, x6
   52858:	sub	w0, w7, w0
   5285c:	mov	x1, x7
   52860:	orr	x3, x3, x5, lsr #61
   52864:	mov	x7, #0x7fff                	// #32767
   52868:	and	w4, w4, #0xff
   5286c:	cmp	x13, x7
   52870:	orr	x2, x2, x9, lsr #61
   52874:	lsl	x6, x5, #3
   52878:	lsl	x10, x9, #3
   5287c:	b.eq	529ec <mpfr_free_pool@@Base+0x18d8>  // b.none
   52880:	eor	w4, w4, #0x1
   52884:	and	x4, x4, #0xff
   52888:	cmp	x11, x4
   5288c:	b.eq	52a84 <mpfr_free_pool@@Base+0x1970>  // b.none
   52890:	cmp	w0, #0x0
   52894:	b.le	52a08 <mpfr_free_pool@@Base+0x18f4>
   52898:	cbnz	x13, 52b74 <mpfr_free_pool@@Base+0x1a60>
   5289c:	orr	x4, x2, x10
   528a0:	cbz	x4, 52d54 <mpfr_free_pool@@Base+0x1c40>
   528a4:	subs	w0, w0, #0x1
   528a8:	b.eq	53028 <mpfr_free_pool@@Base+0x1f14>  // b.none
   528ac:	mov	x4, #0x7fff                	// #32767
   528b0:	cmp	x1, x4
   528b4:	b.eq	52d28 <mpfr_free_pool@@Base+0x1c14>  // b.none
   528b8:	cmp	w0, #0x74
   528bc:	b.gt	52d44 <mpfr_free_pool@@Base+0x1c30>
   528c0:	cmp	w0, #0x3f
   528c4:	b.gt	52eec <mpfr_free_pool@@Base+0x1dd8>
   528c8:	mov	w4, #0x40                  	// #64
   528cc:	sub	w4, w4, w0
   528d0:	lsr	x7, x10, x0
   528d4:	lsl	x10, x10, x4
   528d8:	cmp	x10, #0x0
   528dc:	lsl	x4, x2, x4
   528e0:	cset	x5, ne  // ne = any
   528e4:	orr	x4, x4, x7
   528e8:	lsr	x2, x2, x0
   528ec:	orr	x4, x4, x5
   528f0:	sub	x3, x3, x2
   528f4:	subs	x6, x6, x4
   528f8:	sbc	x3, x3, xzr
   528fc:	and	x5, x3, #0x7ffffffffffff
   52900:	tbz	x3, #51, 52b00 <mpfr_free_pool@@Base+0x19ec>
   52904:	cbz	x5, 52d0c <mpfr_free_pool@@Base+0x1bf8>
   52908:	clz	x0, x5
   5290c:	sub	w0, w0, #0xc
   52910:	neg	w3, w0
   52914:	lsl	x2, x5, x0
   52918:	lsl	x5, x6, x0
   5291c:	lsr	x6, x6, x3
   52920:	orr	x3, x6, x2
   52924:	cmp	x1, w0, sxtw
   52928:	sxtw	x2, w0
   5292c:	b.gt	52cec <mpfr_free_pool@@Base+0x1bd8>
   52930:	sub	w1, w0, w1
   52934:	add	w0, w1, #0x1
   52938:	cmp	w0, #0x3f
   5293c:	b.gt	52eb4 <mpfr_free_pool@@Base+0x1da0>
   52940:	mov	w1, #0x40                  	// #64
   52944:	sub	w1, w1, w0
   52948:	lsr	x2, x5, x0
   5294c:	lsl	x5, x5, x1
   52950:	cmp	x5, #0x0
   52954:	lsl	x6, x3, x1
   52958:	cset	x1, ne  // ne = any
   5295c:	orr	x6, x6, x2
   52960:	lsr	x3, x3, x0
   52964:	orr	x6, x6, x1
   52968:	orr	x7, x6, x3
   5296c:	cbz	x7, 52b14 <mpfr_free_pool@@Base+0x1a00>
   52970:	and	x0, x6, #0x7
   52974:	mov	x1, #0x0                   	// #0
   52978:	mov	w4, #0x1                   	// #1
   5297c:	cbz	x0, 52d78 <mpfr_free_pool@@Base+0x1c64>
   52980:	and	x2, x12, #0xc00000
   52984:	cmp	x2, #0x400, lsl #12
   52988:	b.eq	52cc4 <mpfr_free_pool@@Base+0x1bb0>  // b.none
   5298c:	cmp	x2, #0x800, lsl #12
   52990:	b.eq	52ca4 <mpfr_free_pool@@Base+0x1b90>  // b.none
   52994:	cbz	x2, 52cd0 <mpfr_free_pool@@Base+0x1bbc>
   52998:	and	x2, x3, #0x8000000000000
   5299c:	mov	w0, #0x10                  	// #16
   529a0:	cbz	w4, 529a8 <mpfr_free_pool@@Base+0x1894>
   529a4:	orr	w0, w0, #0x8
   529a8:	cbz	x2, 52a58 <mpfr_free_pool@@Base+0x1944>
   529ac:	add	x1, x1, #0x1
   529b0:	mov	x2, #0x7fff                	// #32767
   529b4:	cmp	x1, x2
   529b8:	b.eq	52bcc <mpfr_free_pool@@Base+0x1ab8>  // b.none
   529bc:	ubfx	x7, x3, #3, #48
   529c0:	extr	x5, x3, x6, #3
   529c4:	and	w1, w1, #0x7fff
   529c8:	mov	x3, #0x0                   	// #0
   529cc:	orr	w1, w1, w8, lsl #15
   529d0:	bfxil	x3, x7, #0, #48
   529d4:	fmov	d0, x5
   529d8:	bfi	x3, x1, #48, #16
   529dc:	fmov	v0.d[1], x3
   529e0:	cbnz	w0, 52c28 <mpfr_free_pool@@Base+0x1b14>
   529e4:	ldp	x29, x30, [sp], #48
   529e8:	ret
   529ec:	orr	x7, x2, x10
   529f0:	cbz	x7, 52880 <mpfr_free_pool@@Base+0x176c>
   529f4:	and	x4, x4, #0xff
   529f8:	cmp	x11, x4
   529fc:	b.eq	52c3c <mpfr_free_pool@@Base+0x1b28>  // b.none
   52a00:	cmp	w0, #0x0
   52a04:	b.gt	52b74 <mpfr_free_pool@@Base+0x1a60>
   52a08:	cbz	w0, 52b2c <mpfr_free_pool@@Base+0x1a18>
   52a0c:	mov	w8, w4
   52a10:	cbnz	x1, 52e48 <mpfr_free_pool@@Base+0x1d34>
   52a14:	orr	x1, x3, x6
   52a18:	cbz	x1, 52ae0 <mpfr_free_pool@@Base+0x19cc>
   52a1c:	cmn	w0, #0x1
   52a20:	b.eq	53188 <mpfr_free_pool@@Base+0x2074>  // b.none
   52a24:	mov	x1, #0x7fff                	// #32767
   52a28:	mvn	w0, w0
   52a2c:	cmp	x13, x1
   52a30:	b.ne	52e5c <mpfr_free_pool@@Base+0x1d48>  // b.any
   52a34:	orr	x0, x2, x10
   52a38:	and	x11, x8, #0xff
   52a3c:	cbz	x0, 52dc0 <mpfr_free_pool@@Base+0x1cac>
   52a40:	lsr	x0, x2, #50
   52a44:	mov	x6, x10
   52a48:	eor	x0, x0, #0x1
   52a4c:	mov	x3, x2
   52a50:	and	w0, w0, #0x1
   52a54:	mov	x1, #0x7fff                	// #32767
   52a58:	mov	x2, #0x7fff                	// #32767
   52a5c:	extr	x5, x3, x6, #3
   52a60:	lsr	x7, x3, #3
   52a64:	cmp	x1, x2
   52a68:	b.ne	52b20 <mpfr_free_pool@@Base+0x1a0c>  // b.any
   52a6c:	orr	x1, x7, x5
   52a70:	cbz	x1, 532dc <mpfr_free_pool@@Base+0x21c8>
   52a74:	orr	x7, x7, #0x800000000000
   52a78:	mov	w1, #0x7fff                	// #32767
   52a7c:	and	x7, x7, #0xffffffffffff
   52a80:	b	529c8 <mpfr_free_pool@@Base+0x18b4>
   52a84:	cmp	w0, #0x0
   52a88:	b.le	52c3c <mpfr_free_pool@@Base+0x1b28>
   52a8c:	cbz	x13, 52b7c <mpfr_free_pool@@Base+0x1a68>
   52a90:	orr	x2, x2, #0x8000000000000
   52a94:	mov	x4, #0x7fff                	// #32767
   52a98:	cmp	x1, x4
   52a9c:	b.eq	52d28 <mpfr_free_pool@@Base+0x1c14>  // b.none
   52aa0:	cmp	w0, #0x74
   52aa4:	b.gt	52e9c <mpfr_free_pool@@Base+0x1d88>
   52aa8:	cmp	w0, #0x3f
   52aac:	b.gt	52f38 <mpfr_free_pool@@Base+0x1e24>
   52ab0:	mov	w4, #0x40                  	// #64
   52ab4:	sub	w4, w4, w0
   52ab8:	lsr	x7, x10, x0
   52abc:	lsl	x10, x10, x4
   52ac0:	cmp	x10, #0x0
   52ac4:	lsl	x4, x2, x4
   52ac8:	cset	x5, ne  // ne = any
   52acc:	orr	x4, x4, x7
   52ad0:	lsr	x2, x2, x0
   52ad4:	orr	x0, x4, x5
   52ad8:	add	x3, x3, x2
   52adc:	b	52ea8 <mpfr_free_pool@@Base+0x1d94>
   52ae0:	mov	x0, #0x7fff                	// #32767
   52ae4:	cmp	x13, x0
   52ae8:	b.eq	53114 <mpfr_free_pool@@Base+0x2000>  // b.none
   52aec:	mov	x3, x2
   52af0:	mov	x6, x10
   52af4:	mov	x1, x13
   52af8:	mov	x14, x4
   52afc:	nop
   52b00:	orr	x7, x6, x3
   52b04:	and	x0, x6, #0x7
   52b08:	mov	w4, #0x0                   	// #0
   52b0c:	cbnz	x1, 5297c <mpfr_free_pool@@Base+0x1868>
   52b10:	cbnz	x7, 52970 <mpfr_free_pool@@Base+0x185c>
   52b14:	mov	x5, #0x0                   	// #0
   52b18:	mov	x1, #0x0                   	// #0
   52b1c:	mov	w0, #0x0                   	// #0
   52b20:	and	x7, x7, #0xffffffffffff
   52b24:	and	w1, w1, #0x7fff
   52b28:	b	529c8 <mpfr_free_pool@@Base+0x18b4>
   52b2c:	add	x7, x1, #0x1
   52b30:	tst	x7, #0x7ffe
   52b34:	b.ne	52e18 <mpfr_free_pool@@Base+0x1d04>  // b.any
   52b38:	orr	x11, x3, x6
   52b3c:	orr	x7, x2, x10
   52b40:	cbnz	x1, 52fa8 <mpfr_free_pool@@Base+0x1e94>
   52b44:	cbz	x11, 53034 <mpfr_free_pool@@Base+0x1f20>
   52b48:	cbz	x7, 53048 <mpfr_free_pool@@Base+0x1f34>
   52b4c:	subs	x9, x6, x10
   52b50:	cmp	x6, x10
   52b54:	sbc	x5, x3, x2
   52b58:	tbz	x5, #51, 531f0 <mpfr_free_pool@@Base+0x20dc>
   52b5c:	subs	x6, x10, x6
   52b60:	mov	w8, w4
   52b64:	sbc	x3, x2, x3
   52b68:	mov	x14, x4
   52b6c:	orr	x7, x6, x3
   52b70:	b	5296c <mpfr_free_pool@@Base+0x1858>
   52b74:	orr	x2, x2, #0x8000000000000
   52b78:	b	528ac <mpfr_free_pool@@Base+0x1798>
   52b7c:	orr	x4, x2, x10
   52b80:	cbz	x4, 52d54 <mpfr_free_pool@@Base+0x1c40>
   52b84:	subs	w0, w0, #0x1
   52b88:	b.ne	52a94 <mpfr_free_pool@@Base+0x1980>  // b.any
   52b8c:	adds	x6, x6, x10
   52b90:	adc	x3, x2, x3
   52b94:	nop
   52b98:	tbz	x3, #51, 52b00 <mpfr_free_pool@@Base+0x19ec>
   52b9c:	add	x1, x1, #0x1
   52ba0:	mov	x0, #0x7fff                	// #32767
   52ba4:	cmp	x1, x0
   52ba8:	b.eq	53054 <mpfr_free_pool@@Base+0x1f40>  // b.none
   52bac:	and	x0, x6, #0x1
   52bb0:	and	x2, x3, #0xfff7ffffffffffff
   52bb4:	orr	x6, x0, x6, lsr #1
   52bb8:	mov	w4, #0x0                   	// #0
   52bbc:	orr	x6, x6, x3, lsl #63
   52bc0:	lsr	x3, x2, #1
   52bc4:	and	x0, x6, #0x7
   52bc8:	b	5297c <mpfr_free_pool@@Base+0x1868>
   52bcc:	and	x2, x12, #0xc00000
   52bd0:	cbz	x2, 52c08 <mpfr_free_pool@@Base+0x1af4>
   52bd4:	cmp	x2, #0x400, lsl #12
   52bd8:	b.eq	52c04 <mpfr_free_pool@@Base+0x1af0>  // b.none
   52bdc:	cmp	x2, #0x800, lsl #12
   52be0:	and	w14, w14, #0x1
   52be4:	csel	w14, w14, wzr, eq  // eq = none
   52be8:	cbnz	w14, 52c08 <mpfr_free_pool@@Base+0x1af4>
   52bec:	mov	w1, #0x14                  	// #20
   52bf0:	mov	x5, #0xffffffffffffffff    	// #-1
   52bf4:	orr	w0, w0, w1
   52bf8:	mov	x7, #0x1fffffffffffffff    	// #2305843009213693951
   52bfc:	mov	x1, #0x7ffe                	// #32766
   52c00:	b	52b20 <mpfr_free_pool@@Base+0x1a0c>
   52c04:	cbnz	x14, 52bec <mpfr_free_pool@@Base+0x1ad8>
   52c08:	mov	w1, #0x14                  	// #20
   52c0c:	and	x11, x8, #0xff
   52c10:	orr	w0, w0, w1
   52c14:	mov	x2, #0x0                   	// #0
   52c18:	fmov	d0, x2
   52c1c:	lsl	x11, x11, #63
   52c20:	orr	x3, x11, #0x7fff000000000000
   52c24:	fmov	v0.d[1], x3
   52c28:	str	q0, [sp, #16]
   52c2c:	bl	53750 <mpfr_free_pool@@Base+0x263c>
   52c30:	ldr	q0, [sp, #16]
   52c34:	ldp	x29, x30, [sp], #48
   52c38:	ret
   52c3c:	cbz	w0, 52dd8 <mpfr_free_pool@@Base+0x1cc4>
   52c40:	cbz	x1, 52d94 <mpfr_free_pool@@Base+0x1c80>
   52c44:	mov	x1, #0x7fff                	// #32767
   52c48:	neg	w0, w0
   52c4c:	orr	x3, x3, #0x8000000000000
   52c50:	cmp	x13, x1
   52c54:	b.eq	52db4 <mpfr_free_pool@@Base+0x1ca0>  // b.none
   52c58:	cmp	w0, #0x74
   52c5c:	b.gt	530a8 <mpfr_free_pool@@Base+0x1f94>
   52c60:	cmp	w0, #0x3f
   52c64:	b.gt	5315c <mpfr_free_pool@@Base+0x2048>
   52c68:	mov	w1, #0x40                  	// #64
   52c6c:	sub	w1, w1, w0
   52c70:	lsr	x4, x6, x0
   52c74:	lsl	x6, x6, x1
   52c78:	cmp	x6, #0x0
   52c7c:	lsl	x6, x3, x1
   52c80:	cset	x1, ne  // ne = any
   52c84:	orr	x6, x6, x4
   52c88:	lsr	x0, x3, x0
   52c8c:	orr	x6, x6, x1
   52c90:	add	x2, x2, x0
   52c94:	adds	x6, x6, x10
   52c98:	mov	x1, x13
   52c9c:	cinc	x3, x2, cs  // cs = hs, nlast
   52ca0:	b	52b98 <mpfr_free_pool@@Base+0x1a84>
   52ca4:	mov	w0, #0x10                  	// #16
   52ca8:	cbz	x14, 52cb4 <mpfr_free_pool@@Base+0x1ba0>
   52cac:	adds	x6, x6, #0x8
   52cb0:	cinc	x3, x3, cs  // cs = hs, nlast
   52cb4:	and	x2, x3, #0x8000000000000
   52cb8:	cbz	w4, 529a8 <mpfr_free_pool@@Base+0x1894>
   52cbc:	orr	w0, w0, #0x8
   52cc0:	b	529a8 <mpfr_free_pool@@Base+0x1894>
   52cc4:	mov	w0, #0x10                  	// #16
   52cc8:	cbnz	x14, 52cb4 <mpfr_free_pool@@Base+0x1ba0>
   52ccc:	b	52cac <mpfr_free_pool@@Base+0x1b98>
   52cd0:	and	x2, x6, #0xf
   52cd4:	mov	w0, #0x10                  	// #16
   52cd8:	cmp	x2, #0x4
   52cdc:	b.eq	52cb4 <mpfr_free_pool@@Base+0x1ba0>  // b.none
   52ce0:	adds	x6, x6, #0x4
   52ce4:	cinc	x3, x3, cs  // cs = hs, nlast
   52ce8:	b	52cb4 <mpfr_free_pool@@Base+0x1ba0>
   52cec:	mov	x6, x5
   52cf0:	and	x3, x3, #0xfff7ffffffffffff
   52cf4:	sub	x1, x1, x2
   52cf8:	orr	x7, x6, x3
   52cfc:	and	x0, x6, #0x7
   52d00:	mov	w4, #0x0                   	// #0
   52d04:	cbz	x1, 52b10 <mpfr_free_pool@@Base+0x19fc>
   52d08:	b	5297c <mpfr_free_pool@@Base+0x1868>
   52d0c:	clz	x3, x6
   52d10:	add	w0, w3, #0x34
   52d14:	cmp	w0, #0x3f
   52d18:	b.le	52910 <mpfr_free_pool@@Base+0x17fc>
   52d1c:	sub	w3, w3, #0xc
   52d20:	lsl	x3, x6, x3
   52d24:	b	52924 <mpfr_free_pool@@Base+0x1810>
   52d28:	orr	x0, x3, x6
   52d2c:	cbz	x0, 52dc0 <mpfr_free_pool@@Base+0x1cac>
   52d30:	lsr	x0, x3, #50
   52d34:	mov	x1, #0x7fff                	// #32767
   52d38:	eor	x0, x0, #0x1
   52d3c:	and	w0, w0, #0x1
   52d40:	b	52a58 <mpfr_free_pool@@Base+0x1944>
   52d44:	orr	x2, x2, x10
   52d48:	cmp	x2, #0x0
   52d4c:	cset	x4, ne  // ne = any
   52d50:	b	528f4 <mpfr_free_pool@@Base+0x17e0>
   52d54:	mov	x0, #0x7fff                	// #32767
   52d58:	cmp	x1, x0
   52d5c:	b.ne	52b00 <mpfr_free_pool@@Base+0x19ec>  // b.any
   52d60:	orr	x0, x3, x6
   52d64:	cbnz	x0, 52d30 <mpfr_free_pool@@Base+0x1c1c>
   52d68:	mov	x5, #0x0                   	// #0
   52d6c:	mov	x7, #0x0                   	// #0
   52d70:	mov	w0, #0x0                   	// #0
   52d74:	b	52a6c <mpfr_free_pool@@Base+0x1958>
   52d78:	and	x2, x3, #0x8000000000000
   52d7c:	mov	w0, #0x0                   	// #0
   52d80:	cbz	w4, 529a8 <mpfr_free_pool@@Base+0x1894>
   52d84:	mov	w0, #0x0                   	// #0
   52d88:	tbz	w12, #11, 529a8 <mpfr_free_pool@@Base+0x1894>
   52d8c:	orr	w0, w0, #0x8
   52d90:	b	529a8 <mpfr_free_pool@@Base+0x1894>
   52d94:	orr	x1, x3, x6
   52d98:	cbz	x1, 53120 <mpfr_free_pool@@Base+0x200c>
   52d9c:	cmn	w0, #0x1
   52da0:	b.eq	53270 <mpfr_free_pool@@Base+0x215c>  // b.none
   52da4:	mov	x1, #0x7fff                	// #32767
   52da8:	mvn	w0, w0
   52dac:	cmp	x13, x1
   52db0:	b.ne	52c58 <mpfr_free_pool@@Base+0x1b44>  // b.any
   52db4:	orr	x0, x2, x10
   52db8:	cbnz	x0, 52a40 <mpfr_free_pool@@Base+0x192c>
   52dbc:	nop
   52dc0:	mov	x2, #0x0                   	// #0
   52dc4:	fmov	d0, x2
   52dc8:	lsl	x0, x11, #63
   52dcc:	orr	x3, x0, #0x7fff000000000000
   52dd0:	fmov	v0.d[1], x3
   52dd4:	b	529e4 <mpfr_free_pool@@Base+0x18d0>
   52dd8:	add	x7, x1, #0x1
   52ddc:	tst	x7, #0x7ffe
   52de0:	b.ne	52f64 <mpfr_free_pool@@Base+0x1e50>  // b.any
   52de4:	orr	x11, x3, x6
   52de8:	cbnz	x1, 530ec <mpfr_free_pool@@Base+0x1fd8>
   52dec:	orr	x7, x2, x10
   52df0:	cbz	x11, 53150 <mpfr_free_pool@@Base+0x203c>
   52df4:	cbz	x7, 53048 <mpfr_free_pool@@Base+0x1f34>
   52df8:	adds	x6, x6, x10
   52dfc:	adc	x3, x2, x3
   52e00:	tbz	x3, #51, 52968 <mpfr_free_pool@@Base+0x1854>
   52e04:	and	x3, x3, #0xfff7ffffffffffff
   52e08:	and	x0, x6, #0x7
   52e0c:	mov	w4, #0x0                   	// #0
   52e10:	mov	x1, #0x1                   	// #1
   52e14:	b	5297c <mpfr_free_pool@@Base+0x1868>
   52e18:	subs	x9, x6, x10
   52e1c:	cmp	x6, x10
   52e20:	sbc	x5, x3, x2
   52e24:	tbnz	x5, #51, 52f90 <mpfr_free_pool@@Base+0x1e7c>
   52e28:	orr	x7, x9, x5
   52e2c:	cbnz	x7, 530a0 <mpfr_free_pool@@Base+0x1f8c>
   52e30:	and	x12, x12, #0xc00000
   52e34:	mov	x5, #0x0                   	// #0
   52e38:	cmp	x12, #0x800, lsl #12
   52e3c:	mov	x1, #0x0                   	// #0
   52e40:	cset	w8, eq  // eq = none
   52e44:	b	52b20 <mpfr_free_pool@@Base+0x1a0c>
   52e48:	mov	x1, #0x7fff                	// #32767
   52e4c:	neg	w0, w0
   52e50:	orr	x3, x3, #0x8000000000000
   52e54:	cmp	x13, x1
   52e58:	b.eq	52a34 <mpfr_free_pool@@Base+0x1920>  // b.none
   52e5c:	cmp	w0, #0x74
   52e60:	b.gt	52f18 <mpfr_free_pool@@Base+0x1e04>
   52e64:	cmp	w0, #0x3f
   52e68:	b.gt	530b8 <mpfr_free_pool@@Base+0x1fa4>
   52e6c:	mov	w1, #0x40                  	// #64
   52e70:	sub	w1, w1, w0
   52e74:	lsr	x5, x6, x0
   52e78:	lsl	x6, x6, x1
   52e7c:	cmp	x6, #0x0
   52e80:	lsl	x6, x3, x1
   52e84:	cset	x1, ne  // ne = any
   52e88:	orr	x6, x6, x5
   52e8c:	lsr	x0, x3, x0
   52e90:	orr	x6, x6, x1
   52e94:	sub	x2, x2, x0
   52e98:	b	52f24 <mpfr_free_pool@@Base+0x1e10>
   52e9c:	orr	x2, x2, x10
   52ea0:	cmp	x2, #0x0
   52ea4:	cset	x0, ne  // ne = any
   52ea8:	adds	x6, x0, x6
   52eac:	cinc	x3, x3, cs  // cs = hs, nlast
   52eb0:	b	52b98 <mpfr_free_pool@@Base+0x1a84>
   52eb4:	mov	w2, #0x80                  	// #128
   52eb8:	sub	w2, w2, w0
   52ebc:	cmp	w0, #0x40
   52ec0:	sub	w6, w1, #0x3f
   52ec4:	lsl	x0, x3, x2
   52ec8:	orr	x0, x5, x0
   52ecc:	csel	x5, x0, x5, ne  // ne = any
   52ed0:	lsr	x6, x3, x6
   52ed4:	cmp	x5, #0x0
   52ed8:	mov	x3, #0x0                   	// #0
   52edc:	cset	x0, ne  // ne = any
   52ee0:	orr	x6, x0, x6
   52ee4:	mov	x7, x6
   52ee8:	b	5296c <mpfr_free_pool@@Base+0x1858>
   52eec:	mov	w5, #0x80                  	// #128
   52ef0:	sub	w5, w5, w0
   52ef4:	subs	w0, w0, #0x40
   52ef8:	lsl	x5, x2, x5
   52efc:	orr	x5, x10, x5
   52f00:	csel	x10, x5, x10, ne  // ne = any
   52f04:	lsr	x2, x2, x0
   52f08:	cmp	x10, #0x0
   52f0c:	cset	x4, ne  // ne = any
   52f10:	orr	x4, x4, x2
   52f14:	b	528f4 <mpfr_free_pool@@Base+0x17e0>
   52f18:	orr	x3, x3, x6
   52f1c:	cmp	x3, #0x0
   52f20:	cset	x6, ne  // ne = any
   52f24:	subs	x6, x10, x6
   52f28:	mov	x1, x13
   52f2c:	sbc	x3, x2, xzr
   52f30:	mov	x14, x4
   52f34:	b	528fc <mpfr_free_pool@@Base+0x17e8>
   52f38:	mov	w4, #0x80                  	// #128
   52f3c:	sub	w4, w4, w0
   52f40:	subs	w0, w0, #0x40
   52f44:	lsl	x4, x2, x4
   52f48:	orr	x4, x10, x4
   52f4c:	csel	x10, x4, x10, ne  // ne = any
   52f50:	lsr	x2, x2, x0
   52f54:	cmp	x10, #0x0
   52f58:	cset	x0, ne  // ne = any
   52f5c:	orr	x0, x0, x2
   52f60:	b	52ea8 <mpfr_free_pool@@Base+0x1d94>
   52f64:	mov	x0, #0x7fff                	// #32767
   52f68:	cmp	x7, x0
   52f6c:	b.eq	531a0 <mpfr_free_pool@@Base+0x208c>  // b.none
   52f70:	adds	x6, x6, x10
   52f74:	mov	x1, x7
   52f78:	adc	x3, x2, x3
   52f7c:	mov	w4, #0x0                   	// #0
   52f80:	ubfx	x0, x6, #1, #3
   52f84:	extr	x6, x3, x6, #1
   52f88:	lsr	x3, x3, #1
   52f8c:	b	5297c <mpfr_free_pool@@Base+0x1868>
   52f90:	cmp	x10, x6
   52f94:	mov	w8, w4
   52f98:	sbc	x5, x2, x3
   52f9c:	sub	x6, x10, x6
   52fa0:	mov	x14, x4
   52fa4:	b	52904 <mpfr_free_pool@@Base+0x17f0>
   52fa8:	mov	x12, #0x7fff                	// #32767
   52fac:	cmp	x1, x12
   52fb0:	b.eq	52fd8 <mpfr_free_pool@@Base+0x1ec4>  // b.none
   52fb4:	cmp	x13, x12
   52fb8:	b.eq	531cc <mpfr_free_pool@@Base+0x20b8>  // b.none
   52fbc:	cbnz	x11, 52ff0 <mpfr_free_pool@@Base+0x1edc>
   52fc0:	cbnz	x7, 531dc <mpfr_free_pool@@Base+0x20c8>
   52fc4:	mov	x5, #0xffffffffffffffff    	// #-1
   52fc8:	mov	x7, #0xffffffffffff        	// #281474976710655
   52fcc:	mov	w0, #0x1                   	// #1
   52fd0:	mov	w8, #0x0                   	// #0
   52fd4:	b	52a74 <mpfr_free_pool@@Base+0x1960>
   52fd8:	cbz	x11, 531c4 <mpfr_free_pool@@Base+0x20b0>
   52fdc:	lsr	x0, x3, #50
   52fe0:	cmp	x13, x1
   52fe4:	eor	x0, x0, #0x1
   52fe8:	and	w0, w0, #0x1
   52fec:	b.eq	531cc <mpfr_free_pool@@Base+0x20b8>  // b.none
   52ff0:	cbz	x7, 52a54 <mpfr_free_pool@@Base+0x1940>
   52ff4:	bfi	x5, x3, #61, #3
   52ff8:	lsr	x7, x3, #3
   52ffc:	tbz	x3, #50, 53018 <mpfr_free_pool@@Base+0x1f04>
   53000:	lsr	x1, x2, #3
   53004:	tbnz	x2, #50, 53018 <mpfr_free_pool@@Base+0x1f04>
   53008:	mov	x5, x9
   5300c:	mov	w8, w4
   53010:	bfi	x5, x2, #61, #3
   53014:	mov	x7, x1
   53018:	extr	x7, x7, x5, #61
   5301c:	bfi	x5, x7, #61, #3
   53020:	lsr	x7, x7, #3
   53024:	b	52a6c <mpfr_free_pool@@Base+0x1958>
   53028:	subs	x6, x6, x10
   5302c:	sbc	x3, x3, x2
   53030:	b	528fc <mpfr_free_pool@@Base+0x17e8>
   53034:	cbz	x7, 5313c <mpfr_free_pool@@Base+0x2028>
   53038:	mov	x3, x2
   5303c:	mov	x6, x10
   53040:	mov	w8, w4
   53044:	mov	x14, x4
   53048:	mov	x1, #0x0                   	// #0
   5304c:	mov	x2, #0x0                   	// #0
   53050:	b	52d84 <mpfr_free_pool@@Base+0x1c70>
   53054:	ands	x2, x12, #0xc00000
   53058:	b.eq	530e4 <mpfr_free_pool@@Base+0x1fd0>  // b.none
   5305c:	cmp	x2, #0x400, lsl #12
   53060:	eor	w0, w8, #0x1
   53064:	cset	w1, eq  // eq = none
   53068:	tst	w1, w0
   5306c:	b.ne	531b8 <mpfr_free_pool@@Base+0x20a4>  // b.any
   53070:	cmp	x2, #0x800, lsl #12
   53074:	b.eq	5320c <mpfr_free_pool@@Base+0x20f8>  // b.none
   53078:	cmp	x2, #0x400, lsl #12
   5307c:	mov	w0, #0x14                  	// #20
   53080:	b.ne	52bd0 <mpfr_free_pool@@Base+0x1abc>  // b.any
   53084:	mov	x3, #0xffffffffffffffff    	// #-1
   53088:	mov	x1, #0x7ffe                	// #32766
   5308c:	mov	x6, x3
   53090:	mov	w4, #0x0                   	// #0
   53094:	mov	w0, #0x14                  	// #20
   53098:	cbnz	x14, 52cb4 <mpfr_free_pool@@Base+0x1ba0>
   5309c:	b	52cac <mpfr_free_pool@@Base+0x1b98>
   530a0:	mov	x6, x9
   530a4:	b	52904 <mpfr_free_pool@@Base+0x17f0>
   530a8:	orr	x3, x3, x6
   530ac:	cmp	x3, #0x0
   530b0:	cset	x6, ne  // ne = any
   530b4:	b	52c94 <mpfr_free_pool@@Base+0x1b80>
   530b8:	mov	w1, #0x80                  	// #128
   530bc:	sub	w1, w1, w0
   530c0:	subs	w0, w0, #0x40
   530c4:	lsl	x1, x3, x1
   530c8:	orr	x1, x6, x1
   530cc:	csel	x6, x1, x6, ne  // ne = any
   530d0:	lsr	x3, x3, x0
   530d4:	cmp	x6, #0x0
   530d8:	cset	x6, ne  // ne = any
   530dc:	orr	x6, x6, x3
   530e0:	b	52f24 <mpfr_free_pool@@Base+0x1e10>
   530e4:	mov	w0, #0x14                  	// #20
   530e8:	b	52c14 <mpfr_free_pool@@Base+0x1b00>
   530ec:	mov	x7, #0x7fff                	// #32767
   530f0:	cmp	x1, x7
   530f4:	b.eq	53228 <mpfr_free_pool@@Base+0x2114>  // b.none
   530f8:	cmp	x13, x7
   530fc:	b.eq	5328c <mpfr_free_pool@@Base+0x2178>  // b.none
   53100:	cbnz	x11, 53240 <mpfr_free_pool@@Base+0x212c>
   53104:	mov	x3, x2
   53108:	mov	x6, x10
   5310c:	mov	x1, #0x7fff                	// #32767
   53110:	b	52a58 <mpfr_free_pool@@Base+0x1944>
   53114:	orr	x0, x2, x10
   53118:	cbz	x0, 52d68 <mpfr_free_pool@@Base+0x1c54>
   5311c:	b	52a40 <mpfr_free_pool@@Base+0x192c>
   53120:	mov	x0, #0x7fff                	// #32767
   53124:	cmp	x13, x0
   53128:	b.eq	53114 <mpfr_free_pool@@Base+0x2000>  // b.none
   5312c:	mov	x3, x2
   53130:	mov	x6, x10
   53134:	mov	x1, x13
   53138:	b	52b00 <mpfr_free_pool@@Base+0x19ec>
   5313c:	and	x12, x12, #0xc00000
   53140:	mov	x5, #0x0                   	// #0
   53144:	cmp	x12, #0x800, lsl #12
   53148:	cset	w8, eq  // eq = none
   5314c:	b	52b20 <mpfr_free_pool@@Base+0x1a0c>
   53150:	mov	x3, x2
   53154:	mov	x6, x10
   53158:	b	5296c <mpfr_free_pool@@Base+0x1858>
   5315c:	mov	w1, #0x80                  	// #128
   53160:	sub	w1, w1, w0
   53164:	subs	w0, w0, #0x40
   53168:	lsl	x1, x3, x1
   5316c:	orr	x1, x6, x1
   53170:	csel	x6, x1, x6, ne  // ne = any
   53174:	lsr	x3, x3, x0
   53178:	cmp	x6, #0x0
   5317c:	cset	x6, ne  // ne = any
   53180:	orr	x6, x6, x3
   53184:	b	52c94 <mpfr_free_pool@@Base+0x1b80>
   53188:	cmp	x10, x6
   5318c:	mov	x1, x13
   53190:	sbc	x3, x2, x3
   53194:	sub	x6, x10, x6
   53198:	mov	x14, x4
   5319c:	b	528fc <mpfr_free_pool@@Base+0x17e8>
   531a0:	ands	x2, x12, #0xc00000
   531a4:	b.eq	530e4 <mpfr_free_pool@@Base+0x1fd0>  // b.none
   531a8:	cmp	x2, #0x400, lsl #12
   531ac:	eor	w0, w8, #0x1
   531b0:	csel	w0, w0, wzr, eq  // eq = none
   531b4:	cbz	w0, 53070 <mpfr_free_pool@@Base+0x1f5c>
   531b8:	mov	w0, #0x14                  	// #20
   531bc:	mov	x11, #0x0                   	// #0
   531c0:	b	52c14 <mpfr_free_pool@@Base+0x1b00>
   531c4:	cmp	x13, x1
   531c8:	b.ne	52fc0 <mpfr_free_pool@@Base+0x1eac>  // b.any
   531cc:	cbz	x7, 53280 <mpfr_free_pool@@Base+0x216c>
   531d0:	tst	x2, #0x4000000000000
   531d4:	csinc	w0, w0, wzr, ne  // ne = any
   531d8:	cbnz	x11, 52ff4 <mpfr_free_pool@@Base+0x1ee0>
   531dc:	mov	w8, w4
   531e0:	mov	x3, x2
   531e4:	mov	x6, x10
   531e8:	mov	x1, #0x7fff                	// #32767
   531ec:	b	52a58 <mpfr_free_pool@@Base+0x1944>
   531f0:	orr	x7, x9, x5
   531f4:	cbz	x7, 5313c <mpfr_free_pool@@Base+0x2028>
   531f8:	mov	x3, x5
   531fc:	and	x0, x9, #0x7
   53200:	mov	x6, x9
   53204:	mov	w4, #0x1                   	// #1
   53208:	b	5297c <mpfr_free_pool@@Base+0x1868>
   5320c:	cbnz	x11, 532a0 <mpfr_free_pool@@Base+0x218c>
   53210:	mov	x3, #0xffffffffffffffff    	// #-1
   53214:	mov	w8, #0x0                   	// #0
   53218:	mov	x6, x3
   5321c:	mov	x1, #0x7ffe                	// #32766
   53220:	mov	w0, #0x14                  	// #20
   53224:	b	529ac <mpfr_free_pool@@Base+0x1898>
   53228:	cbz	x11, 532ac <mpfr_free_pool@@Base+0x2198>
   5322c:	lsr	x0, x3, #50
   53230:	cmp	x13, x1
   53234:	eor	x0, x0, #0x1
   53238:	and	w0, w0, #0x1
   5323c:	b.eq	532cc <mpfr_free_pool@@Base+0x21b8>  // b.none
   53240:	orr	x10, x2, x10
   53244:	cbz	x10, 52a54 <mpfr_free_pool@@Base+0x1940>
   53248:	bfi	x5, x3, #61, #3
   5324c:	lsr	x7, x3, #3
   53250:	tbz	x3, #50, 53018 <mpfr_free_pool@@Base+0x1f04>
   53254:	lsr	x1, x2, #3
   53258:	tbnz	x2, #50, 53018 <mpfr_free_pool@@Base+0x1f04>
   5325c:	and	x5, x9, #0x1fffffffffffffff
   53260:	mov	w8, w4
   53264:	orr	x5, x5, x2, lsl #61
   53268:	mov	x7, x1
   5326c:	b	53018 <mpfr_free_pool@@Base+0x1f04>
   53270:	adds	x6, x6, x10
   53274:	mov	x1, x13
   53278:	adc	x3, x2, x3
   5327c:	b	52b98 <mpfr_free_pool@@Base+0x1a84>
   53280:	cbz	x11, 52fc4 <mpfr_free_pool@@Base+0x1eb0>
   53284:	mov	x1, #0x7fff                	// #32767
   53288:	b	52a58 <mpfr_free_pool@@Base+0x1944>
   5328c:	orr	x1, x2, x10
   53290:	cbnz	x1, 532bc <mpfr_free_pool@@Base+0x21a8>
   53294:	cbz	x11, 52d68 <mpfr_free_pool@@Base+0x1c54>
   53298:	mov	x1, #0x7fff                	// #32767
   5329c:	b	52a58 <mpfr_free_pool@@Base+0x1944>
   532a0:	mov	w0, #0x14                  	// #20
   532a4:	mov	x11, #0x1                   	// #1
   532a8:	b	52c14 <mpfr_free_pool@@Base+0x1b00>
   532ac:	cmp	x13, x1
   532b0:	b.ne	53104 <mpfr_free_pool@@Base+0x1ff0>  // b.any
   532b4:	orr	x1, x2, x10
   532b8:	cbz	x1, 52d68 <mpfr_free_pool@@Base+0x1c54>
   532bc:	tst	x2, #0x4000000000000
   532c0:	csinc	w0, w0, wzr, ne  // ne = any
   532c4:	cbnz	x11, 53248 <mpfr_free_pool@@Base+0x2134>
   532c8:	b	53104 <mpfr_free_pool@@Base+0x1ff0>
   532cc:	orr	x1, x2, x10
   532d0:	cbnz	x1, 532bc <mpfr_free_pool@@Base+0x21a8>
   532d4:	mov	x1, #0x7fff                	// #32767
   532d8:	b	52a58 <mpfr_free_pool@@Base+0x1944>
   532dc:	mov	x5, #0x0                   	// #0
   532e0:	mov	w1, #0x7fff                	// #32767
   532e4:	mov	x7, #0x0                   	// #0
   532e8:	b	529c8 <mpfr_free_pool@@Base+0x18b4>
   532ec:	nop
   532f0:	mrs	x0, fpcr
   532f4:	fmov	x0, d0
   532f8:	ubfx	x1, x0, #52, #11
   532fc:	lsr	x4, x0, #63
   53300:	add	x2, x1, #0x1
   53304:	and	w4, w4, #0xff
   53308:	tst	x2, #0x7fe
   5330c:	ubfx	x0, x0, #0, #52
   53310:	b.eq	53344 <mpfr_free_pool@@Base+0x2230>  // b.none
   53314:	lsr	x5, x0, #4
   53318:	mov	x3, #0x0                   	// #0
   5331c:	and	x5, x5, #0xffffffffffff
   53320:	mov	w2, #0x3c00                	// #15360
   53324:	add	w1, w1, w2
   53328:	lsl	x0, x0, #60
   5332c:	bfxil	x3, x5, #0, #48
   53330:	fmov	d0, x0
   53334:	bfi	x3, x1, #48, #15
   53338:	bfi	x3, x4, #63, #1
   5333c:	fmov	v0.d[1], x3
   53340:	ret
   53344:	cbnz	x1, 53398 <mpfr_free_pool@@Base+0x2284>
   53348:	cbz	x0, 533e4 <mpfr_free_pool@@Base+0x22d0>
   5334c:	clz	x2, x0
   53350:	cmp	w2, #0xe
   53354:	b.gt	53430 <mpfr_free_pool@@Base+0x231c>
   53358:	add	w1, w2, #0x31
   5335c:	mov	w5, #0xf                   	// #15
   53360:	sub	w5, w5, w2
   53364:	lsr	x5, x0, x5
   53368:	lsl	x0, x0, x1
   5336c:	and	x5, x5, #0xffffffffffff
   53370:	mov	w1, #0x3c0c                	// #15372
   53374:	mov	x3, #0x0                   	// #0
   53378:	sub	w1, w1, w2
   5337c:	and	w1, w1, #0x7fff
   53380:	bfxil	x3, x5, #0, #48
   53384:	fmov	d0, x0
   53388:	bfi	x3, x1, #48, #15
   5338c:	bfi	x3, x4, #63, #1
   53390:	fmov	v0.d[1], x3
   53394:	ret
   53398:	cbz	x0, 53408 <mpfr_free_pool@@Base+0x22f4>
   5339c:	lsr	x1, x0, #4
   533a0:	mov	x3, #0x0                   	// #0
   533a4:	orr	x1, x1, #0x800000000000
   533a8:	lsl	x2, x0, #60
   533ac:	fmov	d0, x2
   533b0:	bfxil	x3, x1, #0, #48
   533b4:	orr	x3, x3, #0x7fff000000000000
   533b8:	bfi	x3, x4, #63, #1
   533bc:	fmov	v0.d[1], x3
   533c0:	tbnz	x0, #51, 5342c <mpfr_free_pool@@Base+0x2318>
   533c4:	stp	x29, x30, [sp, #-32]!
   533c8:	mov	w0, #0x1                   	// #1
   533cc:	mov	x29, sp
   533d0:	str	q0, [sp, #16]
   533d4:	bl	53750 <mpfr_free_pool@@Base+0x263c>
   533d8:	ldr	q0, [sp, #16]
   533dc:	ldp	x29, x30, [sp], #32
   533e0:	ret
   533e4:	mov	x5, #0x0                   	// #0
   533e8:	mov	x3, #0x0                   	// #0
   533ec:	bfxil	x3, x5, #0, #48
   533f0:	mov	w1, #0x0                   	// #0
   533f4:	fmov	d0, x0
   533f8:	bfi	x3, x1, #48, #15
   533fc:	bfi	x3, x4, #63, #1
   53400:	fmov	v0.d[1], x3
   53404:	ret
   53408:	mov	x5, #0x0                   	// #0
   5340c:	mov	x3, #0x0                   	// #0
   53410:	bfxil	x3, x5, #0, #48
   53414:	mov	w1, #0x7fff                	// #32767
   53418:	fmov	d0, x0
   5341c:	bfi	x3, x1, #48, #15
   53420:	bfi	x3, x4, #63, #1
   53424:	fmov	v0.d[1], x3
   53428:	ret
   5342c:	ret
   53430:	sub	w5, w2, #0xf
   53434:	lsl	x5, x0, x5
   53438:	mov	x0, #0x0                   	// #0
   5343c:	b	5336c <mpfr_free_pool@@Base+0x2258>
   53440:	stp	x29, x30, [sp, #-48]!
   53444:	mov	x29, sp
   53448:	str	x19, [sp, #16]
   5344c:	str	q0, [sp, #32]
   53450:	ldp	x3, x0, [sp, #32]
   53454:	mrs	x6, fpcr
   53458:	ubfx	x2, x0, #48, #15
   5345c:	lsr	x4, x0, #63
   53460:	add	x1, x2, #0x1
   53464:	ubfiz	x0, x0, #3, #48
   53468:	tst	x1, #0x7ffe
   5346c:	and	w4, w4, #0xff
   53470:	orr	x0, x0, x3, lsr #61
   53474:	lsl	x5, x3, #3
   53478:	b.eq	534f8 <mpfr_free_pool@@Base+0x23e4>  // b.none
   5347c:	mov	x1, #0xffffffffffffc400    	// #-15360
   53480:	add	x2, x2, x1
   53484:	cmp	x2, #0x7fe
   53488:	b.le	5353c <mpfr_free_pool@@Base+0x2428>
   5348c:	ands	x0, x6, #0xc00000
   53490:	b.eq	535d4 <mpfr_free_pool@@Base+0x24c0>  // b.none
   53494:	cmp	x0, #0x400, lsl #12
   53498:	b.eq	53708 <mpfr_free_pool@@Base+0x25f4>  // b.none
   5349c:	cmp	x0, #0x800, lsl #12
   534a0:	csel	w7, w4, wzr, eq  // eq = none
   534a4:	cbnz	w7, 535d4 <mpfr_free_pool@@Base+0x24c0>
   534a8:	mov	x1, #0xffffffffffffffff    	// #-1
   534ac:	mov	x2, #0x7fe                 	// #2046
   534b0:	mov	w0, #0x14                  	// #20
   534b4:	b.ne	53580 <mpfr_free_pool@@Base+0x246c>  // b.any
   534b8:	cmp	w4, #0x0
   534bc:	add	x3, x1, #0x8
   534c0:	csel	x1, x3, x1, ne  // ne = any
   534c4:	and	x3, x1, #0x80000000000000
   534c8:	cbnz	w7, 53588 <mpfr_free_pool@@Base+0x2474>
   534cc:	cbnz	x3, 53590 <mpfr_free_pool@@Base+0x247c>
   534d0:	lsr	x1, x1, #3
   534d4:	and	w3, w2, #0x7ff
   534d8:	and	x4, x4, #0xff
   534dc:	bfi	x1, x3, #52, #12
   534e0:	orr	x19, x1, x4, lsl #63
   534e4:	bl	53750 <mpfr_free_pool@@Base+0x263c>
   534e8:	fmov	d0, x19
   534ec:	ldr	x19, [sp, #16]
   534f0:	ldp	x29, x30, [sp], #48
   534f4:	ret
   534f8:	orr	x1, x0, x5
   534fc:	cbnz	x2, 53530 <mpfr_free_pool@@Base+0x241c>
   53500:	cbnz	x1, 535ac <mpfr_free_pool@@Base+0x2498>
   53504:	mov	w0, #0x0                   	// #0
   53508:	and	w2, w2, #0x7ff
   5350c:	mov	x1, #0x0                   	// #0
   53510:	and	x4, x4, #0xff
   53514:	bfi	x1, x2, #52, #12
   53518:	orr	x19, x1, x4, lsl #63
   5351c:	cbnz	w0, 534e4 <mpfr_free_pool@@Base+0x23d0>
   53520:	fmov	d0, x19
   53524:	ldr	x19, [sp, #16]
   53528:	ldp	x29, x30, [sp], #48
   5352c:	ret
   53530:	cbnz	x1, 535e0 <mpfr_free_pool@@Base+0x24cc>
   53534:	mov	x2, #0x7ff                 	// #2047
   53538:	b	53504 <mpfr_free_pool@@Base+0x23f0>
   5353c:	cmp	x2, #0x0
   53540:	b.le	53608 <mpfr_free_pool@@Base+0x24f4>
   53544:	cmp	xzr, x3, lsl #7
   53548:	mov	w7, #0x0                   	// #0
   5354c:	cset	x1, ne  // ne = any
   53550:	orr	x5, x1, x5, lsr #60
   53554:	orr	x1, x5, x0, lsl #4
   53558:	mov	w0, #0x0                   	// #0
   5355c:	tst	x5, #0x7
   53560:	b.eq	536c0 <mpfr_free_pool@@Base+0x25ac>  // b.none
   53564:	and	x3, x6, #0xc00000
   53568:	cmp	x3, #0x400, lsl #12
   5356c:	b.eq	535c4 <mpfr_free_pool@@Base+0x24b0>  // b.none
   53570:	cmp	x3, #0x800, lsl #12
   53574:	mov	w0, #0x10                  	// #16
   53578:	b.eq	534b8 <mpfr_free_pool@@Base+0x23a4>  // b.none
   5357c:	cbz	x3, 536cc <mpfr_free_pool@@Base+0x25b8>
   53580:	and	x3, x1, #0x80000000000000
   53584:	cbz	w7, 5358c <mpfr_free_pool@@Base+0x2478>
   53588:	orr	w0, w0, #0x8
   5358c:	cbz	x3, 536c0 <mpfr_free_pool@@Base+0x25ac>
   53590:	cmp	x2, #0x7fe
   53594:	add	x2, x2, #0x1
   53598:	b.eq	53668 <mpfr_free_pool@@Base+0x2554>  // b.none
   5359c:	mov	x3, #0x1fefffffffffffff    	// #2301339409586323455
   535a0:	and	w2, w2, #0x7ff
   535a4:	and	x1, x3, x1, lsr #3
   535a8:	b	53510 <mpfr_free_pool@@Base+0x23fc>
   535ac:	and	x3, x6, #0xc00000
   535b0:	mov	w7, #0x1                   	// #1
   535b4:	cmp	x3, #0x400, lsl #12
   535b8:	mov	x2, #0x0                   	// #0
   535bc:	mov	x1, #0x1                   	// #1
   535c0:	b.ne	53570 <mpfr_free_pool@@Base+0x245c>  // b.any
   535c4:	cbnz	w4, 535cc <mpfr_free_pool@@Base+0x24b8>
   535c8:	add	x1, x1, #0x8
   535cc:	mov	w0, #0x10                  	// #16
   535d0:	b	534c4 <mpfr_free_pool@@Base+0x23b0>
   535d4:	mov	x2, #0x7ff                 	// #2047
   535d8:	mov	w0, #0x14                  	// #20
   535dc:	b	53508 <mpfr_free_pool@@Base+0x23f4>
   535e0:	mov	x3, #0x7fff                	// #32767
   535e4:	extr	x1, x0, x5, #60
   535e8:	lsr	x0, x0, #50
   535ec:	cmp	x2, x3
   535f0:	lsr	x1, x1, #3
   535f4:	eor	w0, w0, #0x1
   535f8:	orr	x1, x1, #0x8000000000000
   535fc:	csel	w0, w0, wzr, eq  // eq = none
   53600:	mov	w2, #0x7ff                 	// #2047
   53604:	b	53510 <mpfr_free_pool@@Base+0x23fc>
   53608:	cmn	x2, #0x34
   5360c:	b.lt	535ac <mpfr_free_pool@@Base+0x2498>  // b.tstop
   53610:	mov	x3, #0x3d                  	// #61
   53614:	sub	x7, x3, x2
   53618:	orr	x0, x0, #0x8000000000000
   5361c:	cmp	x7, #0x3f
   53620:	b.le	536e0 <mpfr_free_pool@@Base+0x25cc>
   53624:	add	w1, w2, #0x43
   53628:	cmp	x7, #0x40
   5362c:	mov	w3, #0xfffffffd            	// #-3
   53630:	sub	w2, w3, w2
   53634:	lsl	x1, x0, x1
   53638:	orr	x1, x5, x1
   5363c:	csel	x5, x1, x5, ne  // ne = any
   53640:	lsr	x0, x0, x2
   53644:	cmp	x5, #0x0
   53648:	cset	x1, ne  // ne = any
   5364c:	orr	x1, x1, x0
   53650:	cmp	x1, #0x0
   53654:	cset	w7, ne  // ne = any
   53658:	tst	x1, #0x7
   5365c:	b.eq	536a4 <mpfr_free_pool@@Base+0x2590>  // b.none
   53660:	mov	x2, #0x0                   	// #0
   53664:	b	53564 <mpfr_free_pool@@Base+0x2450>
   53668:	mov	w3, w2
   5366c:	ands	x1, x6, #0xc00000
   53670:	b.eq	53698 <mpfr_free_pool@@Base+0x2584>  // b.none
   53674:	cmp	x1, #0x400, lsl #12
   53678:	b.eq	53720 <mpfr_free_pool@@Base+0x260c>  // b.none
   5367c:	cmp	x1, #0x800, lsl #12
   53680:	mov	w5, #0x7fe                 	// #2046
   53684:	csel	w1, w4, wzr, eq  // eq = none
   53688:	mov	x2, #0x1fffffffffffffff    	// #2305843009213693951
   5368c:	cmp	w1, #0x0
   53690:	csel	w3, w3, w5, ne  // ne = any
   53694:	csel	x1, xzr, x2, ne  // ne = any
   53698:	mov	w2, #0x14                  	// #20
   5369c:	orr	w0, w0, w2
   536a0:	b	534d8 <mpfr_free_pool@@Base+0x23c4>
   536a4:	and	x3, x1, #0x80000000000000
   536a8:	cbnz	x1, 53738 <mpfr_free_pool@@Base+0x2624>
   536ac:	nop
   536b0:	mov	w0, #0x0                   	// #0
   536b4:	mov	x2, #0x1                   	// #1
   536b8:	cbnz	x3, 5359c <mpfr_free_pool@@Base+0x2488>
   536bc:	mov	x2, #0x0                   	// #0
   536c0:	lsr	x1, x1, #3
   536c4:	and	w2, w2, #0x7ff
   536c8:	b	53510 <mpfr_free_pool@@Base+0x23fc>
   536cc:	and	x3, x1, #0xf
   536d0:	cmp	x3, #0x4
   536d4:	add	x3, x1, #0x4
   536d8:	csel	x1, x3, x1, ne  // ne = any
   536dc:	b	534c4 <mpfr_free_pool@@Base+0x23b0>
   536e0:	add	w1, w2, #0x3
   536e4:	sub	w2, w3, w2
   536e8:	lsl	x3, x5, x1
   536ec:	cmp	x3, #0x0
   536f0:	cset	x3, ne  // ne = any
   536f4:	lsr	x2, x5, x2
   536f8:	orr	x2, x2, x3
   536fc:	lsl	x0, x0, x1
   53700:	orr	x1, x0, x2
   53704:	b	53650 <mpfr_free_pool@@Base+0x253c>
   53708:	cbz	w4, 535d4 <mpfr_free_pool@@Base+0x24c0>
   5370c:	mov	x1, #0xffffffffffffffff    	// #-1
   53710:	mov	x2, #0x7fe                 	// #2046
   53714:	mov	w7, #0x0                   	// #0
   53718:	mov	w0, #0x14                  	// #20
   5371c:	b	534c4 <mpfr_free_pool@@Base+0x23b0>
   53720:	cmp	w4, #0x0
   53724:	mov	w1, #0x7fe                 	// #2046
   53728:	csel	w3, w2, w1, eq  // eq = none
   5372c:	mov	x2, #0x1fffffffffffffff    	// #2305843009213693951
   53730:	csel	x1, xzr, x2, eq  // eq = none
   53734:	b	53698 <mpfr_free_pool@@Base+0x2584>
   53738:	tbz	w6, #11, 536b0 <mpfr_free_pool@@Base+0x259c>
   5373c:	mov	w0, #0x0                   	// #0
   53740:	mov	x2, #0x0                   	// #0
   53744:	orr	w0, w0, #0x8
   53748:	b	5358c <mpfr_free_pool@@Base+0x2478>
   5374c:	nop
   53750:	tbz	w0, #0, 53760 <mpfr_free_pool@@Base+0x264c>
   53754:	movi	v1.2s, #0x0
   53758:	fdiv	s0, s1, s1
   5375c:	mrs	x1, fpsr
   53760:	tbz	w0, #1, 53774 <mpfr_free_pool@@Base+0x2660>
   53764:	fmov	s1, #1.000000000000000000e+00
   53768:	movi	v2.2s, #0x0
   5376c:	fdiv	s0, s1, s2
   53770:	mrs	x1, fpsr
   53774:	tbz	w0, #2, 53794 <mpfr_free_pool@@Base+0x2680>
   53778:	mov	w2, #0xc5ae                	// #50606
   5377c:	mov	w1, #0x7f7fffff            	// #2139095039
   53780:	movk	w2, #0x749d, lsl #16
   53784:	fmov	s1, w1
   53788:	fmov	s2, w2
   5378c:	fadd	s0, s1, s2
   53790:	mrs	x1, fpsr
   53794:	tbz	w0, #3, 537a4 <mpfr_free_pool@@Base+0x2690>
   53798:	movi	v1.2s, #0x80, lsl #16
   5379c:	fmul	s0, s1, s1
   537a0:	mrs	x1, fpsr
   537a4:	tbz	w0, #4, 537bc <mpfr_free_pool@@Base+0x26a8>
   537a8:	mov	w0, #0x7f7fffff            	// #2139095039
   537ac:	fmov	s2, #1.000000000000000000e+00
   537b0:	fmov	s1, w0
   537b4:	fsub	s0, s1, s2
   537b8:	mrs	x0, fpsr
   537bc:	ret

Disassembly of section .fini:

00000000000537c0 <.fini>:
   537c0:	stp	x29, x30, [sp, #-16]!
   537c4:	mov	x29, sp
   537c8:	ldp	x29, x30, [sp], #16
   537cc:	ret
