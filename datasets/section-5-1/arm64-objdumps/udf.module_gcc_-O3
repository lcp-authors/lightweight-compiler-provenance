
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//udf.module_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <read_string>:
       0:	stp	x29, x30, [sp, #-64]!
       4:	mov	x29, sp
       8:	str	x23, [sp, #48]
       c:	cbz	x1, 194 <read_string+0x194>
      10:	stp	x19, x20, [sp, #16]
      14:	mov	x20, x1
      18:	mov	x23, x2
      1c:	ldrb	w1, [x0]
      20:	mov	x19, x0
      24:	mov	w0, #0xf7                  	// #247
      28:	sub	w2, w1, #0x8
      2c:	tst	w2, w0
      30:	b.ne	190 <read_string+0x190>  // b.any
      34:	stp	x21, x22, [sp, #32]
      38:	cmp	w1, #0x8
      3c:	mov	x21, #0x0                   	// #0
      40:	mov	x22, #0x0                   	// #0
      44:	b.eq	1f0 <read_string+0x1f0>  // b.none
      48:	cmp	w1, #0x10
      4c:	b.eq	238 <read_string+0x238>  // b.none
      50:	lsl	x0, x21, #2
      54:	add	x0, x0, #0x1
      58:	cbz	x23, 1b0 <read_string+0x1b0>
      5c:	sub	x0, x21, #0x1
      60:	mov	x1, x23
      64:	cbz	x21, 10c <read_string+0x10c>
      68:	mov	x6, x22
      6c:	mov	w2, #0x0                   	// #0
      70:	mov	w9, #0xffff2800            	// #-55296
      74:	mov	w8, #0xffff2400            	// #-56320
      78:	mov	w10, #0x3f                  	// #63
      7c:	mov	w11, #0x2400                	// #9216
      80:	b	e4 <read_string+0xe4>
      84:	add	w4, w3, w8
      88:	cmp	w4, #0x3ff
      8c:	b.hi	130 <read_string+0x130>  // b.pmore
      90:	add	w4, w2, w9
      94:	mov	x6, x5
      98:	add	x1, x1, #0x4
      9c:	mov	w2, #0x0                   	// #0
      a0:	add	w3, w3, w4, lsl #10
      a4:	add	w3, w3, w11
      a8:	and	w4, w3, #0x3f
      ac:	lsr	w7, w3, #18
      b0:	ubfx	x5, x3, #12, #6
      b4:	ubfx	x3, x3, #6, #6
      b8:	orr	w7, w7, #0xfffffff0
      bc:	orr	w5, w5, #0xffffff80
      c0:	orr	w3, w3, #0xffffff80
      c4:	orr	w4, w4, #0xffffff80
      c8:	sturb	w7, [x1, #-4]
      cc:	sturb	w5, [x1, #-3]
      d0:	sturb	w3, [x1, #-2]
      d4:	sturb	w4, [x1, #-1]
      d8:	sub	x0, x0, #0x1
      dc:	cmn	x0, #0x1
      e0:	b.eq	10c <read_string+0x10c>  // b.none
      e4:	mov	x5, x6
      e8:	ldrh	w3, [x5], #2
      ec:	cbnz	w2, 84 <read_string+0x84>
      f0:	cmp	w3, #0x7f
      f4:	b.hi	13c <read_string+0x13c>  // b.pmore
      f8:	strb	w3, [x1], #1
      fc:	sub	x0, x0, #0x1
     100:	mov	x6, x5
     104:	cmn	x0, #0x1
     108:	b.ne	e4 <read_string+0xe4>  // b.any
     10c:	strb	wzr, [x1]
     110:	mov	x0, x22
     114:	bl	0 <grub_free>
     118:	mov	x0, x23
     11c:	ldp	x19, x20, [sp, #16]
     120:	ldp	x21, x22, [sp, #32]
     124:	ldr	x23, [sp, #48]
     128:	ldp	x29, x30, [sp], #64
     12c:	ret
     130:	mov	w2, #0x0                   	// #0
     134:	strb	w10, [x1], #1
     138:	b	d8 <read_string+0xd8>
     13c:	cmp	w3, #0x7ff
     140:	b.hi	16c <read_string+0x16c>  // b.pmore
     144:	mov	x4, x1
     148:	lsr	w7, w3, #6
     14c:	orr	w7, w7, #0xffffffc0
     150:	and	w3, w3, #0x3f
     154:	orr	w3, w3, #0xffffff80
     158:	mov	x6, x5
     15c:	strb	w7, [x4], #2
     160:	strb	w3, [x1, #1]
     164:	mov	x1, x4
     168:	b	d8 <read_string+0xd8>
     16c:	add	w4, w3, w9
     170:	cmp	w4, #0x3ff
     174:	b.ls	28c <read_string+0x28c>  // b.plast
     178:	add	w4, w3, w8
     17c:	cmp	w4, #0x3ff
     180:	b.hi	1c0 <read_string+0x1c0>  // b.pmore
     184:	mov	x6, x5
     188:	strb	w10, [x1], #1
     18c:	b	d8 <read_string+0xd8>
     190:	ldp	x19, x20, [sp, #16]
     194:	mov	x23, #0x0                   	// #0
     198:	mov	x0, x23
     19c:	ldr	x23, [sp, #48]
     1a0:	ldp	x29, x30, [sp], #64
     1a4:	ret
     1a8:	mov	x0, #0x1                   	// #1
     1ac:	nop
     1b0:	bl	0 <grub_malloc>
     1b4:	mov	x23, x0
     1b8:	cbz	x0, 110 <read_string+0x110>
     1bc:	b	5c <read_string+0x5c>
     1c0:	lsr	w7, w3, #12
     1c4:	ubfx	x4, x3, #6, #6
     1c8:	and	w3, w3, #0x3f
     1cc:	mov	x6, x5
     1d0:	orr	w4, w4, #0xffffff80
     1d4:	orr	w5, w7, #0xffffffe0
     1d8:	orr	w3, w3, #0xffffff80
     1dc:	add	x1, x1, #0x3
     1e0:	sturb	w5, [x1, #-3]
     1e4:	sturb	w4, [x1, #-2]
     1e8:	sturb	w3, [x1, #-1]
     1ec:	b	d8 <read_string+0xd8>
     1f0:	sub	x21, x20, #0x1
     1f4:	lsl	x0, x21, #1
     1f8:	bl	0 <grub_malloc>
     1fc:	mov	x22, x0
     200:	cbz	x0, 298 <read_string+0x298>
     204:	mov	w3, #0x0                   	// #0
     208:	mov	x0, #0x0                   	// #0
     20c:	cbz	x21, 22c <read_string+0x22c>
     210:	add	w3, w3, #0x1
     214:	mov	x1, x0
     218:	mov	w0, w3
     21c:	cmp	x21, w3, uxtw
     220:	ldrb	w2, [x19, w3, uxtw]
     224:	strh	w2, [x22, x1, lsl #1]
     228:	b.hi	210 <read_string+0x210>  // b.pmore
     22c:	ldrb	w1, [x19]
     230:	cmp	w1, #0x10
     234:	b.ne	50 <read_string+0x50>  // b.any
     238:	sub	x20, x20, #0x1
     23c:	and	x0, x20, #0xfffffffffffffffe
     240:	bl	0 <grub_malloc>
     244:	lsr	x21, x20, #1
     248:	mov	x22, x0
     24c:	cbz	x0, 298 <read_string+0x298>
     250:	cbz	x21, 2a8 <read_string+0x2a8>
     254:	mov	w4, #0x1                   	// #1
     258:	mov	w1, #0x0                   	// #0
     25c:	mov	x0, #0x0                   	// #0
     260:	add	w1, w1, #0x1
     264:	ldrb	w3, [x19, w4, uxtw]
     268:	add	w4, w4, #0x2
     26c:	lsl	w2, w1, #1
     270:	cmp	x21, w1, uxtw
     274:	ldrb	w2, [x19, w2, uxtw]
     278:	orr	w3, w2, w3, lsl #8
     27c:	strh	w3, [x22, x0, lsl #1]
     280:	mov	w0, w1
     284:	b.hi	260 <read_string+0x260>  // b.pmore
     288:	b	50 <read_string+0x50>
     28c:	mov	w2, w3
     290:	mov	x6, x5
     294:	b	d8 <read_string+0xd8>
     298:	mov	x23, #0x0                   	// #0
     29c:	ldp	x19, x20, [sp, #16]
     2a0:	ldp	x21, x22, [sp, #32]
     2a4:	b	198 <read_string+0x198>
     2a8:	cbz	x23, 1a8 <read_string+0x1a8>
     2ac:	mov	x1, x23
     2b0:	b	10c <read_string+0x10c>
     2b4:	nop

00000000000002b8 <grub_udf_dir_iter>:
     2b8:	stp	x29, x30, [sp, #-112]!
     2bc:	mov	x29, sp
     2c0:	stp	x19, x20, [sp, #16]
     2c4:	mov	w19, w1
     2c8:	mov	x20, x2
     2cc:	mov	w1, #0x0                   	// #0
     2d0:	mov	x2, #0x10                  	// #16
     2d4:	and	w19, w19, #0xff
     2d8:	stp	x21, x22, [sp, #32]
     2dc:	mov	x21, x0
     2e0:	mov	x22, x3
     2e4:	add	x0, sp, #0x48
     2e8:	bl	0 <grub_memset>
     2ec:	ldrb	w1, [sp, #72]
     2f0:	cmp	w19, #0x2
     2f4:	cset	w4, eq  // eq = none
     2f8:	ldrh	w2, [x20, #12]
     2fc:	bfxil	w1, w4, #0, #1
     300:	strb	w1, [sp, #72]
     304:	cmp	w2, #0x105
     308:	add	x1, x20, #0x60
     30c:	b.eq	344 <grub_udf_dir_iter+0x8c>  // b.none
     310:	cmp	w2, #0x10a
     314:	b.eq	340 <grub_udf_dir_iter+0x88>  // b.none
     318:	mov	x0, x20
     31c:	bl	0 <grub_free>
     320:	ldp	x4, x2, [x22]
     324:	add	x1, sp, #0x48
     328:	mov	x0, x21
     32c:	blr	x4
     330:	ldp	x19, x20, [sp, #16]
     334:	ldp	x21, x22, [sp, #32]
     338:	ldp	x29, x30, [sp], #112
     33c:	ret
     340:	add	x1, x20, #0x68
     344:	ldrh	w0, [x1]
     348:	and	w2, w0, #0xf000
     34c:	cmp	w2, #0x1, lsl #12
     350:	b.ne	318 <grub_udf_dir_iter+0x60>  // b.any
     354:	ldrh	w4, [x1, #2]
     358:	and	w2, w0, #0xfff
     35c:	ldrb	w8, [x1, #4]
     360:	ldrb	w5, [x1, #5]
     364:	ldrb	w9, [x1, #6]
     368:	ldrb	w10, [x1, #7]
     36c:	ldrb	w1, [x1, #8]
     370:	tbnz	w0, #11, 4dc <grub_udf_dir_iter+0x224>
     374:	sub	w2, w2, w2, lsl #4
     378:	lsl	w2, w2, #2
     37c:	adrp	x3, 0 <read_string>
     380:	adrp	x6, 0 <read_string>
     384:	sub	w0, w4, #0x76d
     388:	ldr	x3, [x3]
     38c:	and	w0, w0, #0xffff
     390:	ldr	x11, [x6]
     394:	cmp	w0, #0x89
     398:	ldp	x6, x7, [x3]
     39c:	stp	x6, x7, [sp, #88]
     3a0:	ldr	w6, [x11, #8]
     3a4:	ldr	x0, [x11]
     3a8:	str	x0, [sp, #56]
     3ac:	ldr	x0, [x3, #16]
     3b0:	str	w6, [sp, #64]
     3b4:	str	x0, [sp, #104]
     3b8:	b.hi	458 <grub_udf_dir_iter+0x1a0>  // b.pmore
     3bc:	sub	w7, w8, #0x1
     3c0:	and	w0, w7, #0xff
     3c4:	cmp	w0, #0xb
     3c8:	b.hi	458 <grub_udf_dir_iter+0x1a0>  // b.pmore
     3cc:	sub	w0, w4, #0x1
     3d0:	add	x6, sp, #0x58
     3d4:	add	x13, sp, #0x38
     3d8:	sub	w3, w4, #0x7b5
     3dc:	asr	w0, w0, #2
     3e0:	mov	w15, #0x1f80                	// #8064
     3e4:	sub	w0, w0, #0x1ed
     3e8:	mov	w14, #0xec00                	// #60416
     3ec:	ldrh	w11, [x6, w7, sxtw #1]
     3f0:	movk	w15, #0x786, lsl #16
     3f4:	sub	w3, w3, w0, lsl #2
     3f8:	movk	w14, #0x5a4, lsl #16
     3fc:	mov	w12, #0x3380                	// #13184
     400:	ldrb	w13, [x13, w7, sxtw]
     404:	sub	w6, w5, #0x1
     408:	movk	w12, #0x1e1, lsl #16
     40c:	mov	w7, #0x5180                	// #20864
     410:	madd	w0, w0, w15, w14
     414:	movk	w7, #0x1, lsl #16
     418:	madd	w0, w3, w12, w0
     41c:	cmp	w3, #0x3
     420:	mul	w6, w6, w7
     424:	ccmp	w8, #0x2, #0x0, eq  // eq = none
     428:	madd	w0, w11, w7, w0
     42c:	b.hi	478 <grub_udf_dir_iter+0x1c0>  // b.pmore
     430:	add	w6, w0, w6
     434:	cmp	w5, w13
     438:	b.ls	488 <grub_udf_dir_iter+0x1d0>  // b.plast
     43c:	cbz	w3, 458 <grub_udf_dir_iter+0x1a0>
     440:	mov	x0, #0x0                   	// #0
     444:	mov	w3, #0x1d02                	// #7426
     448:	bfi	x0, x8, #16, #8
     44c:	bfi	x0, x5, #24, #8
     450:	cmp	w3, w0, lsr #16
     454:	b.eq	488 <grub_udf_dir_iter+0x1d0>  // b.none
     458:	ldr	w0, [sp, #76]
     45c:	mov	w3, #0x0                   	// #0
     460:	ldrb	w1, [sp, #72]
     464:	add	w2, w2, w0
     468:	str	w2, [sp, #76]
     46c:	bfi	w1, w3, #1, #1
     470:	strb	w1, [sp, #72]
     474:	b	318 <grub_udf_dir_iter+0x60>
     478:	add	w0, w0, w7
     47c:	cmp	w5, w13
     480:	add	w6, w0, w6
     484:	b.hi	440 <grub_udf_dir_iter+0x188>  // b.pmore
     488:	cbz	w5, 458 <grub_udf_dir_iter+0x1a0>
     48c:	cmp	w9, #0x17
     490:	b.hi	458 <grub_udf_dir_iter+0x1a0>  // b.pmore
     494:	cmp	w10, #0x3b
     498:	b.hi	458 <grub_udf_dir_iter+0x1a0>  // b.pmore
     49c:	cmp	w1, #0x3c
     4a0:	b.hi	458 <grub_udf_dir_iter+0x1a0>  // b.pmore
     4a4:	mov	w3, #0xe10                 	// #3600
     4a8:	lsl	w0, w10, #4
     4ac:	sub	w0, w0, w10
     4b0:	cmp	w4, #0x7bc
     4b4:	madd	w6, w9, w3, w6
     4b8:	add	w6, w6, w0, lsl #2
     4bc:	add	w0, w1, w6
     4c0:	ccmp	w0, #0x0, #0x0, hi  // hi = pmore
     4c4:	b.lt	458 <grub_udf_dir_iter+0x1a0>  // b.tstop
     4c8:	cmp	w4, #0x7a7
     4cc:	ccmp	w0, #0x0, #0x4, ls  // ls = plast
     4d0:	b.gt	458 <grub_udf_dir_iter+0x1a0>
     4d4:	mov	w3, #0x1                   	// #1
     4d8:	b	460 <grub_udf_dir_iter+0x1a8>
     4dc:	orr	w2, w2, #0xfffff000
     4e0:	cmn	w2, #0x7ff
     4e4:	sub	w2, w2, w2, lsl #4
     4e8:	lsl	w2, w2, #2
     4ec:	csel	w2, w2, wzr, ne  // ne = any
     4f0:	b	37c <grub_udf_dir_iter+0xc4>
     4f4:	nop
	...

0000000000000508 <grub_udf_close>:
     508:	stp	x29, x30, [sp, #-32]!
     50c:	mov	x29, sp
     510:	str	x19, [sp, #16]
     514:	ldr	x19, [x0, #80]
     518:	cbz	x19, 52c <grub_udf_close+0x24>
     51c:	ldr	x0, [x19]
     520:	bl	0 <grub_free>
     524:	mov	x0, x19
     528:	bl	0 <grub_free>
     52c:	adrp	x0, 0 <read_string>
     530:	ldr	x0, [x0]
     534:	ldr	x0, [x0]
     538:	bl	0 <grub_dl_unref>
     53c:	mov	w0, #0x0                   	// #0
     540:	ldr	x19, [sp, #16]
     544:	ldp	x29, x30, [sp], #32
     548:	ret
     54c:	nop
	...

0000000000000558 <grub_udf_mount>:
     558:	sub	sp, sp, #0x240
     55c:	stp	x29, x30, [sp]
     560:	mov	x29, sp
     564:	stp	x19, x20, [sp, #16]
     568:	mov	x20, x0
     56c:	mov	x0, #0xbe0                 	// #3040
     570:	stp	x21, x22, [sp, #32]
     574:	bl	0 <grub_malloc>
     578:	mov	x22, x0
     57c:	cbz	x0, 628 <grub_udf_mount+0xd0>
     580:	adrp	x0, 0 <read_string>
     584:	stp	x23, x24, [sp, #48]
     588:	mov	w21, #0x0                   	// #0
     58c:	ldr	x23, [x0]
     590:	str	x20, [x22]
     594:	ldr	w1, [x23]
     598:	mov	x19, x23
     59c:	cbnz	w1, 5ac <grub_udf_mount+0x54>
     5a0:	b	5fc <grub_udf_mount+0xa4>
     5a4:	ldr	w1, [x19, #4]!
     5a8:	cbz	w1, 5fc <grub_udf_mount+0xa4>
     5ac:	add	x4, sp, #0x60
     5b0:	mov	x0, x20
     5b4:	lsl	w1, w1, w21
     5b8:	mov	x3, #0x18                  	// #24
     5bc:	mov	x2, #0x0                   	// #0
     5c0:	bl	0 <grub_disk_read>
     5c4:	cbnz	w0, 608 <grub_udf_mount+0xb0>
     5c8:	ldrh	w1, [sp, #96]
     5cc:	cmp	w1, #0x2
     5d0:	b.ne	5a4 <grub_udf_mount+0x4c>  // b.any
     5d4:	ldr	w0, [x19]
     5d8:	ldr	w1, [sp, #108]
     5dc:	cmp	w1, w0
     5e0:	b.ne	5a4 <grub_udf_mount+0x4c>  // b.any
     5e4:	ldr	w24, [sp, #116]
     5e8:	stp	x25, x26, [sp, #64]
     5ec:	str	x27, [sp, #80]
     5f0:	cbnz	w24, 640 <grub_udf_mount+0xe8>
     5f4:	ldp	x25, x26, [sp, #64]
     5f8:	ldr	x27, [sp, #80]
     5fc:	add	w21, w21, #0x1
     600:	cmp	w21, #0x4
     604:	b.ne	594 <grub_udf_mount+0x3c>  // b.any
     608:	adrp	x1, 0 <read_string>
     60c:	mov	w0, #0x9                   	// #9
     610:	ldr	x1, [x1]
     614:	bl	0 <grub_error>
     618:	mov	x0, x22
     61c:	bl	0 <grub_free>
     620:	ldp	x23, x24, [sp, #48]
     624:	mov	x22, #0x0                   	// #0
     628:	mov	x0, x22
     62c:	ldp	x29, x30, [sp]
     630:	ldp	x19, x20, [sp, #16]
     634:	ldp	x21, x22, [sp, #32]
     638:	add	sp, sp, #0x240
     63c:	ret
     640:	add	w0, w21, #0x9
     644:	mov	w23, #0x7fff                	// #32767
     648:	str	w21, [x22, #3032]
     64c:	mov	w25, #0x7ff                 	// #2047
     650:	asr	w23, w23, w0
     654:	add	w23, w23, #0x1
     658:	asr	w25, w25, w0
     65c:	add	x19, sp, #0x61
     660:	add	w25, w25, #0x1
     664:	add	x4, sp, #0x60
     668:	mov	x0, x20
     66c:	adrp	x26, 0 <read_string>
     670:	adrp	x27, 0 <read_string>
     674:	mov	x3, #0x7                   	// #7
     678:	mov	x2, #0x0                   	// #0
     67c:	lsl	w1, w23, w21
     680:	bl	0 <grub_disk_read>
     684:	cbnz	w0, 6e8 <grub_udf_mount+0x190>
     688:	ldr	x1, [x26]
     68c:	mov	x0, x19
     690:	mov	x2, #0x5                   	// #5
     694:	bl	0 <grub_memcmp>
     698:	cbz	w0, 76c <grub_udf_mount+0x214>
     69c:	ldr	x1, [x27]
     6a0:	mov	x0, x19
     6a4:	mov	x2, #0x5                   	// #5
     6a8:	bl	0 <grub_memcmp>
     6ac:	cbz	w0, 76c <grub_udf_mount+0x214>
     6b0:	adrp	x1, 0 <read_string>
     6b4:	mov	x0, x19
     6b8:	mov	x2, #0x5                   	// #5
     6bc:	ldr	x1, [x1]
     6c0:	bl	0 <grub_memcmp>
     6c4:	cbnz	w0, 704 <grub_udf_mount+0x1ac>
     6c8:	add	w23, w23, w25
     6cc:	add	x4, sp, #0x60
     6d0:	mov	x0, x20
     6d4:	mov	x3, #0x7                   	// #7
     6d8:	mov	x2, #0x0                   	// #0
     6dc:	lsl	w1, w23, w21
     6e0:	bl	0 <grub_disk_read>
     6e4:	cbz	w0, 688 <grub_udf_mount+0x130>
     6e8:	adrp	x1, 0 <read_string>
     6ec:	mov	w0, #0x9                   	// #9
     6f0:	ldr	x1, [x1]
     6f4:	bl	0 <grub_error>
     6f8:	ldp	x25, x26, [sp, #64]
     6fc:	ldr	x27, [sp, #80]
     700:	b	618 <grub_udf_mount+0xc0>
     704:	adrp	x1, 0 <read_string>
     708:	mov	x0, x19
     70c:	mov	x2, #0x5                   	// #5
     710:	ldr	x1, [x1]
     714:	bl	0 <grub_memcmp>
     718:	cbz	w0, 6c8 <grub_udf_mount+0x170>
     71c:	adrp	x1, 0 <read_string>
     720:	mov	x0, x19
     724:	mov	x2, #0x5                   	// #5
     728:	ldr	x1, [x1]
     72c:	bl	0 <grub_memcmp>
     730:	cbz	w0, 6c8 <grub_udf_mount+0x170>
     734:	adrp	x1, 0 <read_string>
     738:	mov	x0, x19
     73c:	mov	x2, #0x5                   	// #5
     740:	ldr	x1, [x1]
     744:	bl	0 <grub_memcmp>
     748:	cbz	w0, 6c8 <grub_udf_mount+0x170>
     74c:	adrp	x1, 0 <read_string>
     750:	mov	x0, x19
     754:	mov	x2, #0x5                   	// #5
     758:	ldr	x1, [x1]
     75c:	bl	0 <grub_memcmp>
     760:	cbnz	w0, 6e8 <grub_udf_mount+0x190>
     764:	add	w23, w23, w25
     768:	b	6cc <grub_udf_mount+0x174>
     76c:	add	x27, x22, #0x208
     770:	add	x26, x22, #0x3c0
     774:	mov	w25, #0xc4                  	// #196
     778:	str	xzr, [x22, #3024]
     77c:	nop
     780:	add	x4, sp, #0x60
     784:	mov	x0, x20
     788:	lsl	w23, w24, w21
     78c:	mov	x3, #0x10                  	// #16
     790:	mov	x1, x23
     794:	mov	x2, #0x0                   	// #0
     798:	bl	0 <grub_disk_read>
     79c:	mov	w19, w0
     7a0:	cbnz	w0, 6e8 <grub_udf_mount+0x190>
     7a4:	ldrh	w0, [sp, #96]
     7a8:	cmp	w0, #0x1
     7ac:	b.eq	814 <grub_udf_mount+0x2bc>  // b.none
     7b0:	cmp	w0, #0x5
     7b4:	b.eq	7d4 <grub_udf_mount+0x27c>  // b.none
     7b8:	cmp	w0, #0x6
     7bc:	b.eq	838 <grub_udf_mount+0x2e0>  // b.none
     7c0:	cmp	w0, #0x8
     7c4:	b.hi	a2c <grub_udf_mount+0x4d4>  // b.pmore
     7c8:	b.eq	994 <grub_udf_mount+0x43c>  // b.none
     7cc:	add	w24, w24, #0x1
     7d0:	b	780 <grub_udf_mount+0x228>
     7d4:	ldr	w4, [x22, #3024]
     7d8:	cmp	w4, #0x1
     7dc:	b.gt	a48 <grub_udf_mount+0x4f0>
     7e0:	smaddl	x4, w4, w25, x22
     7e4:	mov	x1, x23
     7e8:	mov	x0, x20
     7ec:	mov	x3, #0xc4                  	// #196
     7f0:	add	x4, x4, #0xa08
     7f4:	mov	x2, #0x0                   	// #0
     7f8:	bl	0 <grub_disk_read>
     7fc:	cbnz	w0, 6e8 <grub_udf_mount+0x190>
     800:	ldr	w0, [x22, #3024]
     804:	add	w24, w24, #0x1
     808:	add	w0, w0, #0x1
     80c:	str	w0, [x22, #3024]
     810:	b	780 <grub_udf_mount+0x228>
     814:	mov	x1, x23
     818:	add	x4, x22, #0x8
     81c:	mov	x0, x20
     820:	mov	x3, #0x200                 	// #512
     824:	mov	x2, #0x0                   	// #0
     828:	bl	0 <grub_disk_read>
     82c:	cbnz	w0, 6e8 <grub_udf_mount+0x190>
     830:	add	w24, w24, #0x1
     834:	b	780 <grub_udf_mount+0x228>
     838:	mov	x1, x23
     83c:	mov	x4, x27
     840:	mov	x0, x20
     844:	mov	x3, #0x800                 	// #2048
     848:	mov	x2, #0x0                   	// #0
     84c:	bl	0 <grub_disk_read>
     850:	cbnz	w0, 6e8 <grub_udf_mount+0x190>
     854:	ldr	w1, [x22, #788]
     858:	ldr	w0, [x22, #3028]
     85c:	add	w2, w0, w1
     860:	cmp	w2, #0x6
     864:	b.hi	b14 <grub_udf_mount+0x5bc>  // b.pmore
     868:	cmp	w1, #0x0
     86c:	b.le	7cc <grub_udf_mount+0x274>
     870:	ldrb	w2, [x26]
     874:	cmp	w2, #0x1
     878:	b.ne	978 <grub_udf_mount+0x420>  // b.any
     87c:	add	x2, x22, w0, sxtw #3
     880:	add	w3, w0, #0x1
     884:	str	w3, [x22, #3028]
     888:	cmp	w1, #0x1
     88c:	str	x26, [x2, #2960]
     890:	ldrb	w4, [x26, #1]
     894:	add	x3, x26, x4
     898:	b.eq	7cc <grub_udf_mount+0x274>  // b.none
     89c:	ldrb	w4, [x26, x4]
     8a0:	cmp	w4, #0x1
     8a4:	b.ne	978 <grub_udf_mount+0x420>  // b.any
     8a8:	add	w4, w0, #0x2
     8ac:	str	w4, [x22, #3028]
     8b0:	str	x3, [x2, #2968]
     8b4:	cmp	w1, #0x2
     8b8:	ldrb	w5, [x3, #1]
     8bc:	add	x4, x3, x5
     8c0:	b.eq	7cc <grub_udf_mount+0x274>  // b.none
     8c4:	ldrb	w3, [x3, x5]
     8c8:	cmp	w3, #0x1
     8cc:	b.ne	978 <grub_udf_mount+0x420>  // b.any
     8d0:	add	w3, w0, #0x3
     8d4:	str	w3, [x22, #3028]
     8d8:	str	x4, [x2, #2976]
     8dc:	cmp	w1, #0x3
     8e0:	ldrb	w5, [x4, #1]
     8e4:	add	x3, x4, x5
     8e8:	b.eq	7cc <grub_udf_mount+0x274>  // b.none
     8ec:	ldrb	w4, [x4, x5]
     8f0:	cmp	w4, #0x1
     8f4:	b.ne	978 <grub_udf_mount+0x420>  // b.any
     8f8:	add	w4, w0, #0x4
     8fc:	str	w4, [x22, #3028]
     900:	str	x3, [x2, #2984]
     904:	cmp	w1, #0x4
     908:	ldrb	w5, [x3, #1]
     90c:	add	x4, x3, x5
     910:	b.eq	7cc <grub_udf_mount+0x274>  // b.none
     914:	ldrb	w3, [x3, x5]
     918:	cmp	w3, #0x1
     91c:	b.ne	978 <grub_udf_mount+0x420>  // b.any
     920:	add	w3, w0, #0x5
     924:	str	w3, [x22, #3028]
     928:	str	x4, [x2, #2992]
     92c:	cmp	w1, #0x5
     930:	ldrb	w5, [x4, #1]
     934:	add	x3, x4, x5
     938:	b.eq	7cc <grub_udf_mount+0x274>  // b.none
     93c:	ldrb	w4, [x4, x5]
     940:	cmp	w4, #0x1
     944:	b.ne	978 <grub_udf_mount+0x420>  // b.any
     948:	add	w4, w0, #0x6
     94c:	str	w4, [x22, #3028]
     950:	str	x3, [x2, #3000]
     954:	cmp	w1, #0x6
     958:	ldrb	w1, [x3, #1]
     95c:	add	x3, x3, x1
     960:	b.eq	7cc <grub_udf_mount+0x274>  // b.none
     964:	ldrb	w1, [x3]
     968:	cmp	w1, #0x1
     96c:	b.ne	978 <grub_udf_mount+0x420>  // b.any
     970:	add	w0, w0, #0x7
     974:	str	w0, [x22, #3028]
     978:	adrp	x1, 0 <read_string>
     97c:	mov	w0, #0x9                   	// #9
     980:	ldr	x1, [x1]
     984:	bl	0 <grub_error>
     988:	ldp	x25, x26, [sp, #64]
     98c:	ldr	x27, [sp, #80]
     990:	b	618 <grub_udf_mount+0xc0>
     994:	ldr	w8, [x22, #3028]
     998:	cmp	w8, #0x0
     99c:	b.le	b30 <grub_udf_mount+0x5d8>
     9a0:	ldr	w1, [x22, #3024]
     9a4:	sub	w6, w8, #0x1
     9a8:	add	x0, x22, #0xb98
     9ac:	mov	w7, #0x2                   	// #2
     9b0:	cmp	w1, #0x1
     9b4:	add	x6, x0, w6, uxtw #3
     9b8:	csinc	w7, w7, wzr, gt
     9bc:	add	x0, x22, #0xb90
     9c0:	b	9d0 <grub_udf_mount+0x478>
     9c4:	add	x0, x0, #0x8
     9c8:	cmp	x0, x6
     9cc:	b.eq	a70 <grub_udf_mount+0x518>  // b.none
     9d0:	cmp	w1, #0x0
     9d4:	mov	w3, #0x0                   	// #0
     9d8:	b.le	a08 <grub_udf_mount+0x4b0>
     9dc:	ldr	x4, [x0]
     9e0:	ldrh	w3, [x22, #2590]
     9e4:	ldrh	w2, [x4, #4]
     9e8:	cmp	w3, w2
     9ec:	b.eq	a64 <grub_udf_mount+0x50c>  // b.none
     9f0:	cmp	w1, #0x1
     9f4:	b.eq	af4 <grub_udf_mount+0x59c>  // b.none
     9f8:	ldrh	w5, [x22, #2786]
     9fc:	mov	w3, w7
     a00:	cmp	w5, w2
     a04:	b.eq	afc <grub_udf_mount+0x5a4>  // b.none
     a08:	cmp	w1, w3
     a0c:	b.ne	9c4 <grub_udf_mount+0x46c>  // b.any
     a10:	adrp	x1, 0 <read_string>
     a14:	mov	w0, #0x9                   	// #9
     a18:	ldr	x1, [x1]
     a1c:	bl	0 <grub_error>
     a20:	ldp	x25, x26, [sp, #64]
     a24:	ldr	x27, [sp, #80]
     a28:	b	618 <grub_udf_mount+0xc0>
     a2c:	adrp	x1, 0 <read_string>
     a30:	mov	w0, #0x9                   	// #9
     a34:	ldr	x1, [x1]
     a38:	bl	0 <grub_error>
     a3c:	ldp	x25, x26, [sp, #64]
     a40:	ldr	x27, [sp, #80]
     a44:	b	618 <grub_udf_mount+0xc0>
     a48:	adrp	x1, 0 <read_string>
     a4c:	mov	w0, #0x9                   	// #9
     a50:	ldr	x1, [x1]
     a54:	bl	0 <grub_error>
     a58:	ldp	x25, x26, [sp, #64]
     a5c:	ldr	x27, [sp, #80]
     a60:	b	618 <grub_udf_mount+0xc0>
     a64:	mov	w3, #0x0                   	// #0
     a68:	strh	w3, [x4, #4]
     a6c:	b	a08 <grub_udf_mount+0x4b0>
     a70:	ldrh	w0, [x22, #776]
     a74:	cmp	w8, w0
     a78:	b.le	b30 <grub_udf_mount+0x5d8>
     a7c:	add	x0, x22, w0, sxtw #3
     a80:	ldr	w2, [x22, #772]
     a84:	ldr	x0, [x0, #2960]
     a88:	ldrh	w1, [x0, #4]
     a8c:	add	x0, x1, x1, lsl #1
     a90:	add	x0, x1, x0, lsl #4
     a94:	add	x0, x22, x0, lsl #2
     a98:	ldr	w19, [x0, #2756]
     a9c:	add	w19, w19, w2
     aa0:	adrp	x0, 0 <read_string>
     aa4:	ldr	x0, [x0]
     aa8:	ldr	w0, [x0]
     aac:	cbnz	w0, b08 <grub_udf_mount+0x5b0>
     ab0:	add	x4, sp, #0x60
     ab4:	mov	x0, x20
     ab8:	lsl	w1, w19, w21
     abc:	mov	x3, #0x1e0                 	// #480
     ac0:	mov	x2, #0x0                   	// #0
     ac4:	bl	0 <grub_disk_read>
     ac8:	cbnz	w0, b44 <grub_udf_mount+0x5ec>
     acc:	ldrh	w0, [sp, #96]
     ad0:	cmp	w0, #0x100
     ad4:	b.ne	b50 <grub_udf_mount+0x5f8>  // b.any
     ad8:	add	x0, x22, #0xbc0
     adc:	ldp	x2, x3, [sp, #496]
     ae0:	stp	x2, x3, [x0]
     ae4:	ldp	x23, x24, [sp, #48]
     ae8:	ldp	x25, x26, [sp, #64]
     aec:	ldr	x27, [sp, #80]
     af0:	b	628 <grub_udf_mount+0xd0>
     af4:	mov	w3, w7
     af8:	b	a08 <grub_udf_mount+0x4b0>
     afc:	mov	w3, #0x1                   	// #1
     b00:	strh	w3, [x4, #4]
     b04:	b	a08 <grub_udf_mount+0x4b0>
     b08:	ldp	x25, x26, [sp, #64]
     b0c:	ldr	x27, [sp, #80]
     b10:	b	618 <grub_udf_mount+0xc0>
     b14:	adrp	x1, 0 <read_string>
     b18:	mov	w0, #0x9                   	// #9
     b1c:	ldr	x1, [x1]
     b20:	bl	0 <grub_error>
     b24:	ldp	x25, x26, [sp, #64]
     b28:	ldr	x27, [sp, #80]
     b2c:	b	618 <grub_udf_mount+0xc0>
     b30:	adrp	x1, 0 <read_string>
     b34:	mov	w0, #0x9                   	// #9
     b38:	ldr	x1, [x1]
     b3c:	bl	0 <grub_error>
     b40:	b	aa0 <grub_udf_mount+0x548>
     b44:	ldp	x25, x26, [sp, #64]
     b48:	ldr	x27, [sp, #80]
     b4c:	b	608 <grub_udf_mount+0xb0>
     b50:	adrp	x1, 0 <read_string>
     b54:	mov	w0, #0x9                   	// #9
     b58:	ldr	x1, [x1]
     b5c:	bl	0 <grub_error>
     b60:	ldp	x25, x26, [sp, #64]
     b64:	ldr	x27, [sp, #80]
     b68:	b	618 <grub_udf_mount+0xc0>
     b6c:	nop
	...

0000000000000bf8 <grub_udf_read_symlink>:
     bf8:	sub	sp, sp, #0x80
     bfc:	stp	x29, x30, [sp, #32]
     c00:	add	x29, sp, #0x20
     c04:	stp	x25, x26, [sp, #96]
     c08:	ldur	x25, [x0, #68]
     c0c:	stp	x21, x22, [sp, #64]
     c10:	cmp	x25, #0x3
     c14:	b.ls	d68 <grub_udf_read_symlink+0x170>  // b.plast
     c18:	stp	x19, x20, [sp, #48]
     c1c:	mov	x19, x0
     c20:	mov	x0, x25
     c24:	bl	0 <grub_malloc>
     c28:	mov	x26, x0
     c2c:	cbz	x0, d64 <grub_udf_read_symlink+0x16c>
     c30:	ldrh	w0, [x19, #46]
     c34:	and	w0, w0, #0x7
     c38:	cmp	w0, #0x2
     c3c:	b.eq	ddc <grub_udf_read_symlink+0x1e4>  // b.none
     c40:	cmp	w0, #0x3
     c44:	b.ne	d84 <grub_udf_read_symlink+0x18c>  // b.any
     c48:	ldrh	w0, [x19, #12]
     c4c:	cmp	w0, #0x105
     c50:	b.eq	e84 <grub_udf_read_symlink+0x28c>  // b.none
     c54:	ldr	w1, [x19, #220]
     c58:	add	x19, x19, #0xe4
     c5c:	add	x1, x19, x1
     c60:	mov	x2, x25
     c64:	mov	x0, x26
     c68:	bl	0 <grub_memmove>
     c6c:	mov	x0, x25
     c70:	tbnz	x0, #63, dc8 <grub_udf_read_symlink+0x1d0>
     c74:	lsl	x0, x25, #1
     c78:	add	x0, x0, #0x1
     c7c:	bl	0 <grub_malloc>
     c80:	mov	x21, x0
     c84:	cbz	x0, eb0 <grub_udf_read_symlink+0x2b8>
     c88:	stp	x27, x28, [sp, #112]
     c8c:	add	x27, x26, x25
     c90:	cmp	x26, x27
     c94:	b.cs	e98 <grub_udf_read_symlink+0x2a0>  // b.hs, b.nlast
     c98:	mov	x19, x26
     c9c:	add	x22, x0, #0x1
     ca0:	mov	x1, #0x0                   	// #0
     ca4:	stp	x23, x24, [sp, #80]
     ca8:	mov	w24, #0x2e2e                	// #11822
     cac:	mov	w23, #0x2f                  	// #47
     cb0:	ldrb	w2, [x19, #2]
     cb4:	cbnz	w2, d1c <grub_udf_read_symlink+0x124>
     cb8:	ldrb	w2, [x19, #3]
     cbc:	cbnz	w2, d1c <grub_udf_read_symlink+0x124>
     cc0:	ldrb	w2, [x19, #1]
     cc4:	add	w20, w2, #0x4
     cc8:	sxtw	x20, w20
     ccc:	add	x1, x1, x20
     cd0:	cmp	x1, x25
     cd4:	b.hi	d1c <grub_udf_read_symlink+0x124>  // b.pmore
     cd8:	ldrb	w1, [x19]
     cdc:	cmp	w1, #0x3
     ce0:	b.eq	e5c <grub_udf_read_symlink+0x264>  // b.none
     ce4:	b.hi	df0 <grub_udf_read_symlink+0x1f8>  // b.pmore
     ce8:	cmp	w1, #0x1
     cec:	b.eq	e7c <grub_udf_read_symlink+0x284>  // b.none
     cf0:	cmp	w1, #0x2
     cf4:	b.ne	d1c <grub_udf_read_symlink+0x124>  // b.any
     cf8:	mov	x0, x22
     cfc:	strb	w23, [x21]
     d00:	add	x19, x19, x20
     d04:	cmp	x19, x27
     d08:	b.cs	e94 <grub_udf_read_symlink+0x29c>  // b.hs, b.nlast
     d0c:	sub	x1, x19, x26
     d10:	add	x2, x1, #0x4
     d14:	cmp	x2, x25
     d18:	b.ls	cb0 <grub_udf_read_symlink+0xb8>  // b.plast
     d1c:	mov	x0, x26
     d20:	bl	0 <grub_free>
     d24:	mov	x0, x21
     d28:	bl	0 <grub_free>
     d2c:	adrp	x1, 0 <read_string>
     d30:	mov	x21, #0x0                   	// #0
     d34:	mov	w0, #0x9                   	// #9
     d38:	ldr	x1, [x1]
     d3c:	bl	0 <grub_error>
     d40:	mov	x0, x21
     d44:	ldp	x29, x30, [sp, #32]
     d48:	ldp	x19, x20, [sp, #48]
     d4c:	ldp	x21, x22, [sp, #64]
     d50:	ldp	x23, x24, [sp, #80]
     d54:	ldp	x25, x26, [sp, #96]
     d58:	ldp	x27, x28, [sp, #112]
     d5c:	add	sp, sp, #0x80
     d60:	ret
     d64:	ldp	x19, x20, [sp, #48]
     d68:	mov	x21, #0x0                   	// #0
     d6c:	mov	x0, x21
     d70:	ldp	x29, x30, [sp, #32]
     d74:	ldp	x21, x22, [sp, #64]
     d78:	ldp	x25, x26, [sp, #96]
     d7c:	add	sp, sp, #0x80
     d80:	ret
     d84:	ldr	x2, [x19]
     d88:	adrp	x4, 0 <read_string>
     d8c:	ldur	x3, [x19, #68]
     d90:	mov	x1, x19
     d94:	ldr	x0, [x2]
     d98:	str	xzr, [sp, #16]
     d9c:	ldr	x7, [x4]
     da0:	mov	x6, x26
     da4:	ldr	w2, [x2, #3032]
     da8:	mov	x5, x25
     dac:	str	x3, [sp]
     db0:	mov	x4, #0x0                   	// #0
     db4:	str	w2, [sp, #8]
     db8:	mov	x3, #0x0                   	// #0
     dbc:	mov	x2, #0x0                   	// #0
     dc0:	bl	0 <grub_fshelp_read_file>
     dc4:	tbz	x0, #63, c74 <grub_udf_read_symlink+0x7c>
     dc8:	mov	x0, x26
     dcc:	mov	x21, #0x0                   	// #0
     dd0:	bl	0 <grub_free>
     dd4:	ldp	x19, x20, [sp, #48]
     dd8:	b	d6c <grub_udf_read_symlink+0x174>
     ddc:	adrp	x1, 0 <read_string>
     de0:	mov	w0, #0x9                   	// #9
     de4:	ldr	x1, [x1]
     de8:	bl	0 <grub_error>
     dec:	b	c74 <grub_udf_read_symlink+0x7c>
     df0:	cmp	w1, #0x4
     df4:	b.eq	e38 <grub_udf_read_symlink+0x240>  // b.none
     df8:	cmp	w1, #0x5
     dfc:	b.ne	d1c <grub_udf_read_symlink+0x124>  // b.any
     e00:	cmp	x21, x0
     e04:	mov	x28, x21
     e08:	b.eq	e14 <grub_udf_read_symlink+0x21c>  // b.none
     e0c:	mov	x28, x0
     e10:	strb	w23, [x28], #1
     e14:	mov	x2, x28
     e18:	sub	x1, x20, #0x4
     e1c:	add	x0, x19, #0x4
     e20:	bl	0 <read_string>
     e24:	cbz	x0, d1c <grub_udf_read_symlink+0x124>
     e28:	mov	x0, x28
     e2c:	bl	0 <grub_strlen>
     e30:	add	x0, x28, x0
     e34:	b	d00 <grub_udf_read_symlink+0x108>
     e38:	cmp	x21, x0
     e3c:	mov	x1, x21
     e40:	b.eq	e4c <grub_udf_read_symlink+0x254>  // b.none
     e44:	mov	x1, x0
     e48:	strb	w23, [x1], #1
     e4c:	mov	x0, x1
     e50:	mov	w1, #0x2e                  	// #46
     e54:	strb	w1, [x0], #1
     e58:	b	d00 <grub_udf_read_symlink+0x108>
     e5c:	cmp	x21, x0
     e60:	mov	x1, x21
     e64:	b.eq	e70 <grub_udf_read_symlink+0x278>  // b.none
     e68:	mov	x1, x0
     e6c:	strb	w23, [x1], #1
     e70:	mov	x0, x1
     e74:	strh	w24, [x0], #2
     e78:	b	d00 <grub_udf_read_symlink+0x108>
     e7c:	cbz	w2, cf8 <grub_udf_read_symlink+0x100>
     e80:	b	d1c <grub_udf_read_symlink+0x124>
     e84:	ldr	w1, [x19, #180]
     e88:	add	x19, x19, #0xbc
     e8c:	add	x1, x19, x1
     e90:	b	c60 <grub_udf_read_symlink+0x68>
     e94:	ldp	x23, x24, [sp, #80]
     e98:	strb	wzr, [x0]
     e9c:	mov	x0, x26
     ea0:	bl	0 <grub_free>
     ea4:	ldp	x19, x20, [sp, #48]
     ea8:	ldp	x27, x28, [sp, #112]
     eac:	b	d6c <grub_udf_read_symlink+0x174>
     eb0:	mov	x0, x26
     eb4:	bl	0 <grub_free>
     eb8:	ldp	x19, x20, [sp, #48]
     ebc:	b	d6c <grub_udf_read_symlink+0x174>
	...

0000000000000ed8 <grub_udf_uuid>:
     ed8:	sub	sp, sp, #0x80
     edc:	stp	x29, x30, [sp, #32]
     ee0:	add	x29, sp, #0x20
     ee4:	ldr	x0, [x0]
     ee8:	stp	x21, x22, [sp, #64]
     eec:	mov	x22, x1
     ef0:	bl	558 <grub_udf_mount>
     ef4:	cbz	x0, 1054 <grub_udf_uuid+0x17c>
     ef8:	stp	x19, x20, [sp, #48]
     efc:	mov	x19, x0
     f00:	ldrb	w0, [x0, #80]
     f04:	cbnz	w0, 1004 <grub_udf_uuid+0x12c>
     f08:	mov	x0, #0x1                   	// #1
     f0c:	bl	0 <grub_malloc>
     f10:	mov	x20, x0
     f14:	cbz	x0, 1028 <grub_udf_uuid+0x150>
     f18:	str	x23, [sp, #80]
     f1c:	strb	wzr, [x0]
     f20:	mov	x0, x20
     f24:	bl	0 <grub_strlen>
     f28:	mov	x23, x0
     f2c:	cmp	x0, #0x7
     f30:	b.ls	1124 <grub_udf_uuid+0x24c>  // b.plast
     f34:	mov	x0, #0x11                  	// #17
     f38:	bl	0 <grub_malloc>
     f3c:	mov	x21, x0
     f40:	cbz	x0, 1124 <grub_udf_uuid+0x24c>
     f44:	mov	x2, #0x11                  	// #17
     f48:	mov	w1, #0x0                   	// #0
     f4c:	add	x0, sp, #0x68
     f50:	bl	0 <grub_memset>
     f54:	mov	x2, #0x10                  	// #16
     f58:	cmp	x23, x2
     f5c:	csel	x2, x23, x2, ls  // ls = plast
     f60:	add	x0, sp, #0x68
     f64:	mov	x1, x20
     f68:	bl	0 <grub_memmove>
     f6c:	ldrb	w3, [sp, #104]
     f70:	ldrb	w4, [sp, #105]
     f74:	sub	w0, w3, #0x30
     f78:	cmp	w0, #0x9
     f7c:	b.ls	f94 <grub_udf_uuid+0xbc>  // b.plast
     f80:	and	w0, w3, #0xffffffdf
     f84:	sub	w0, w0, #0x41
     f88:	and	w0, w0, #0xff
     f8c:	cmp	w0, #0x5
     f90:	b.hi	112c <grub_udf_uuid+0x254>  // b.pmore
     f94:	sub	w0, w4, #0x30
     f98:	ldrb	w5, [sp, #106]
     f9c:	cmp	w0, #0x9
     fa0:	b.ls	107c <grub_udf_uuid+0x1a4>  // b.plast
     fa4:	and	w0, w4, #0xffffffdf
     fa8:	sub	w0, w0, #0x41
     fac:	and	w0, w0, #0xff
     fb0:	cmp	w0, #0x5
     fb4:	b.ls	107c <grub_udf_uuid+0x1a4>  // b.plast
     fb8:	ldrb	w6, [sp, #107]
     fbc:	ldrb	w7, [sp, #108]
     fc0:	ldrb	w0, [sp, #109]
     fc4:	ldrb	w1, [sp, #110]
     fc8:	ldrb	w8, [sp, #111]
     fcc:	adrp	x2, 0 <read_string>
     fd0:	str	w0, [sp]
     fd4:	str	w1, [sp, #8]
     fd8:	mov	x0, x21
     fdc:	ldr	x2, [x2]
     fe0:	str	w8, [sp, #16]
     fe4:	mov	x1, #0x11                  	// #17
     fe8:	bl	0 <grub_snprintf>
     fec:	nop
     ff0:	str	x21, [x22]
     ff4:	mov	x0, x20
     ff8:	bl	0 <grub_free>
     ffc:	ldr	x23, [sp, #80]
    1000:	b	102c <grub_udf_uuid+0x154>
    1004:	ldrb	w1, [x19, #207]
    1008:	mov	x3, #0x7f                  	// #127
    100c:	add	x0, x19, #0x50
    1010:	mov	x2, #0x0                   	// #0
    1014:	cmp	x1, x3
    1018:	csel	x1, x1, x3, ls  // ls = plast
    101c:	bl	0 <read_string>
    1020:	mov	x20, x0
    1024:	cbnz	x0, 1074 <grub_udf_uuid+0x19c>
    1028:	str	xzr, [x22]
    102c:	mov	x0, x19
    1030:	bl	0 <grub_free>
    1034:	adrp	x0, 0 <read_string>
    1038:	ldp	x29, x30, [sp, #32]
    103c:	ldr	x0, [x0]
    1040:	ldp	x19, x20, [sp, #48]
    1044:	ldr	w0, [x0]
    1048:	ldp	x21, x22, [sp, #64]
    104c:	add	sp, sp, #0x80
    1050:	ret
    1054:	adrp	x0, 0 <read_string>
    1058:	str	xzr, [x22]
    105c:	ldp	x29, x30, [sp, #32]
    1060:	ldr	x0, [x0]
    1064:	ldp	x21, x22, [sp, #64]
    1068:	ldr	w0, [x0]
    106c:	add	sp, sp, #0x80
    1070:	ret
    1074:	str	x23, [sp, #80]
    1078:	b	f20 <grub_udf_uuid+0x48>
    107c:	sub	w0, w5, #0x30
    1080:	ldrb	w6, [sp, #107]
    1084:	cmp	w0, #0x9
    1088:	b.ls	10b4 <grub_udf_uuid+0x1dc>  // b.plast
    108c:	and	w0, w5, #0xffffffdf
    1090:	sub	w0, w0, #0x41
    1094:	and	w0, w0, #0xff
    1098:	cmp	w0, #0x5
    109c:	b.ls	10b4 <grub_udf_uuid+0x1dc>  // b.plast
    10a0:	ldrb	w7, [sp, #108]
    10a4:	ldrb	w0, [sp, #109]
    10a8:	ldrb	w1, [sp, #110]
    10ac:	ldrb	w8, [sp, #111]
    10b0:	b	fcc <grub_udf_uuid+0xf4>
    10b4:	sub	w0, w6, #0x30
    10b8:	ldrb	w7, [sp, #108]
    10bc:	cmp	w0, #0x9
    10c0:	b.ls	10e8 <grub_udf_uuid+0x210>  // b.plast
    10c4:	and	w0, w6, #0xffffffdf
    10c8:	sub	w0, w0, #0x41
    10cc:	and	w0, w0, #0xff
    10d0:	cmp	w0, #0x5
    10d4:	b.ls	10e8 <grub_udf_uuid+0x210>  // b.plast
    10d8:	ldrb	w0, [sp, #109]
    10dc:	ldrb	w1, [sp, #110]
    10e0:	ldrb	w8, [sp, #111]
    10e4:	b	fcc <grub_udf_uuid+0xf4>
    10e8:	sub	w0, w7, #0x30
    10ec:	cmp	w0, #0x9
    10f0:	b.hi	1134 <grub_udf_uuid+0x25c>  // b.pmore
    10f4:	ldrb	w0, [sp, #109]
    10f8:	sub	w1, w0, #0x30
    10fc:	cmp	w1, #0x9
    1100:	b.ls	114c <grub_udf_uuid+0x274>  // b.plast
    1104:	and	w1, w0, #0xffffffdf
    1108:	sub	w1, w1, #0x41
    110c:	and	w1, w1, #0xff
    1110:	cmp	w1, #0x5
    1114:	b.ls	114c <grub_udf_uuid+0x274>  // b.plast
    1118:	ldrb	w1, [sp, #110]
    111c:	ldrb	w8, [sp, #111]
    1120:	b	fcc <grub_udf_uuid+0xf4>
    1124:	mov	x21, #0x0                   	// #0
    1128:	b	ff0 <grub_udf_uuid+0x118>
    112c:	ldrb	w5, [sp, #106]
    1130:	b	fb8 <grub_udf_uuid+0xe0>
    1134:	and	w0, w7, #0xffffffdf
    1138:	sub	w0, w0, #0x41
    113c:	and	w0, w0, #0xff
    1140:	cmp	w0, #0x5
    1144:	b.ls	10f4 <grub_udf_uuid+0x21c>  // b.plast
    1148:	b	10d8 <grub_udf_uuid+0x200>
    114c:	ldrb	w1, [sp, #110]
    1150:	ldrb	w8, [sp, #111]
    1154:	sub	w2, w1, #0x30
    1158:	cmp	w2, #0x9
    115c:	b.ls	1174 <grub_udf_uuid+0x29c>  // b.plast
    1160:	and	w2, w1, #0xffffffdf
    1164:	sub	w2, w2, #0x41
    1168:	and	w2, w2, #0xff
    116c:	cmp	w2, #0x5
    1170:	b.hi	fcc <grub_udf_uuid+0xf4>  // b.pmore
    1174:	sub	w2, w8, #0x30
    1178:	cmp	w2, #0x9
    117c:	b.ls	1194 <grub_udf_uuid+0x2bc>  // b.plast
    1180:	and	w2, w8, #0xffffffdf
    1184:	sub	w2, w2, #0x41
    1188:	and	w2, w2, #0xff
    118c:	cmp	w2, #0x5
    1190:	b.hi	fcc <grub_udf_uuid+0xf4>  // b.pmore
    1194:	ldrb	w0, [sp, #112]
    1198:	sub	w1, w0, #0x30
    119c:	cmp	w1, #0x9
    11a0:	b.ls	11b8 <grub_udf_uuid+0x2e0>  // b.plast
    11a4:	and	w0, w0, #0xffffffdf
    11a8:	sub	w0, w0, #0x41
    11ac:	and	w0, w0, #0xff
    11b0:	cmp	w0, #0x5
    11b4:	b.hi	1478 <grub_udf_uuid+0x5a0>  // b.pmore
    11b8:	ldrb	w0, [sp, #113]
    11bc:	sub	w1, w0, #0x30
    11c0:	cmp	w1, #0x9
    11c4:	b.ls	11dc <grub_udf_uuid+0x304>  // b.plast
    11c8:	and	w0, w0, #0xffffffdf
    11cc:	sub	w0, w0, #0x41
    11d0:	and	w0, w0, #0xff
    11d4:	cmp	w0, #0x5
    11d8:	b.hi	1478 <grub_udf_uuid+0x5a0>  // b.pmore
    11dc:	ldrb	w0, [sp, #114]
    11e0:	sub	w1, w0, #0x30
    11e4:	cmp	w1, #0x9
    11e8:	b.ls	1200 <grub_udf_uuid+0x328>  // b.plast
    11ec:	and	w0, w0, #0xffffffdf
    11f0:	sub	w0, w0, #0x41
    11f4:	and	w0, w0, #0xff
    11f8:	cmp	w0, #0x5
    11fc:	b.hi	1478 <grub_udf_uuid+0x5a0>  // b.pmore
    1200:	ldrb	w0, [sp, #115]
    1204:	sub	w1, w0, #0x30
    1208:	cmp	w1, #0x9
    120c:	b.ls	1224 <grub_udf_uuid+0x34c>  // b.plast
    1210:	and	w0, w0, #0xffffffdf
    1214:	sub	w0, w0, #0x41
    1218:	and	w0, w0, #0xff
    121c:	cmp	w0, #0x5
    1220:	b.hi	1478 <grub_udf_uuid+0x5a0>  // b.pmore
    1224:	ldrb	w0, [sp, #116]
    1228:	sub	w1, w0, #0x30
    122c:	cmp	w1, #0x9
    1230:	b.ls	1248 <grub_udf_uuid+0x370>  // b.plast
    1234:	and	w0, w0, #0xffffffdf
    1238:	sub	w0, w0, #0x41
    123c:	and	w0, w0, #0xff
    1240:	cmp	w0, #0x5
    1244:	b.hi	1478 <grub_udf_uuid+0x5a0>  // b.pmore
    1248:	ldrb	w0, [sp, #117]
    124c:	sub	w1, w0, #0x30
    1250:	cmp	w1, #0x9
    1254:	b.ls	126c <grub_udf_uuid+0x394>  // b.plast
    1258:	and	w0, w0, #0xffffffdf
    125c:	sub	w0, w0, #0x41
    1260:	and	w0, w0, #0xff
    1264:	cmp	w0, #0x5
    1268:	b.hi	1478 <grub_udf_uuid+0x5a0>  // b.pmore
    126c:	ldrb	w0, [sp, #118]
    1270:	sub	w1, w0, #0x30
    1274:	cmp	w1, #0x9
    1278:	b.ls	1290 <grub_udf_uuid+0x3b8>  // b.plast
    127c:	and	w0, w0, #0xffffffdf
    1280:	sub	w0, w0, #0x41
    1284:	and	w0, w0, #0xff
    1288:	cmp	w0, #0x5
    128c:	b.hi	1478 <grub_udf_uuid+0x5a0>  // b.pmore
    1290:	ldrb	w0, [sp, #119]
    1294:	sub	w1, w0, #0x30
    1298:	cmp	w1, #0x9
    129c:	b.ls	12b4 <grub_udf_uuid+0x3dc>  // b.plast
    12a0:	and	w0, w0, #0xffffffdf
    12a4:	sub	w0, w0, #0x41
    12a8:	and	w0, w0, #0xff
    12ac:	cmp	w0, #0x5
    12b0:	b.hi	1478 <grub_udf_uuid+0x5a0>  // b.pmore
    12b4:	sub	w1, w3, #0x41
    12b8:	add	w0, w3, #0x20
    12bc:	cmp	w1, #0x1a
    12c0:	and	w0, w0, #0xff
    12c4:	csel	w3, w0, w3, cc  // cc = lo, ul, last
    12c8:	strb	w3, [x21]
    12cc:	ldrb	w0, [sp, #105]
    12d0:	sub	w2, w0, #0x41
    12d4:	add	w1, w0, #0x20
    12d8:	cmp	w2, #0x19
    12dc:	and	w1, w1, #0xff
    12e0:	csel	w0, w0, w1, hi  // hi = pmore
    12e4:	strb	w0, [x21, #1]
    12e8:	ldrb	w0, [sp, #106]
    12ec:	sub	w2, w0, #0x41
    12f0:	add	w1, w0, #0x20
    12f4:	cmp	w2, #0x19
    12f8:	and	w1, w1, #0xff
    12fc:	csel	w0, w0, w1, hi  // hi = pmore
    1300:	strb	w0, [x21, #2]
    1304:	ldrb	w0, [sp, #107]
    1308:	sub	w2, w0, #0x41
    130c:	add	w1, w0, #0x20
    1310:	cmp	w2, #0x19
    1314:	and	w1, w1, #0xff
    1318:	csel	w0, w0, w1, hi  // hi = pmore
    131c:	strb	w0, [x21, #3]
    1320:	ldrb	w0, [sp, #108]
    1324:	sub	w2, w0, #0x41
    1328:	add	w1, w0, #0x20
    132c:	cmp	w2, #0x19
    1330:	and	w1, w1, #0xff
    1334:	csel	w0, w0, w1, hi  // hi = pmore
    1338:	strb	w0, [x21, #4]
    133c:	ldrb	w0, [sp, #109]
    1340:	sub	w2, w0, #0x41
    1344:	add	w1, w0, #0x20
    1348:	cmp	w2, #0x19
    134c:	and	w1, w1, #0xff
    1350:	csel	w0, w0, w1, hi  // hi = pmore
    1354:	strb	w0, [x21, #5]
    1358:	ldrb	w0, [sp, #110]
    135c:	sub	w2, w0, #0x41
    1360:	add	w1, w0, #0x20
    1364:	cmp	w2, #0x19
    1368:	and	w1, w1, #0xff
    136c:	csel	w0, w0, w1, hi  // hi = pmore
    1370:	strb	w0, [x21, #6]
    1374:	ldrb	w0, [sp, #111]
    1378:	sub	w2, w0, #0x41
    137c:	add	w1, w0, #0x20
    1380:	cmp	w2, #0x19
    1384:	and	w1, w1, #0xff
    1388:	csel	w0, w0, w1, hi  // hi = pmore
    138c:	strb	w0, [x21, #7]
    1390:	ldrb	w0, [sp, #112]
    1394:	sub	w2, w0, #0x41
    1398:	add	w1, w0, #0x20
    139c:	cmp	w2, #0x19
    13a0:	and	w1, w1, #0xff
    13a4:	csel	w0, w0, w1, hi  // hi = pmore
    13a8:	strb	w0, [x21, #8]
    13ac:	ldrb	w0, [sp, #113]
    13b0:	sub	w2, w0, #0x41
    13b4:	add	w1, w0, #0x20
    13b8:	cmp	w2, #0x19
    13bc:	and	w1, w1, #0xff
    13c0:	csel	w0, w0, w1, hi  // hi = pmore
    13c4:	strb	w0, [x21, #9]
    13c8:	ldrb	w0, [sp, #114]
    13cc:	sub	w2, w0, #0x41
    13d0:	add	w1, w0, #0x20
    13d4:	cmp	w2, #0x19
    13d8:	and	w1, w1, #0xff
    13dc:	csel	w0, w0, w1, hi  // hi = pmore
    13e0:	strb	w0, [x21, #10]
    13e4:	ldrb	w0, [sp, #115]
    13e8:	sub	w2, w0, #0x41
    13ec:	add	w1, w0, #0x20
    13f0:	cmp	w2, #0x19
    13f4:	and	w1, w1, #0xff
    13f8:	csel	w0, w0, w1, hi  // hi = pmore
    13fc:	strb	w0, [x21, #11]
    1400:	ldrb	w0, [sp, #116]
    1404:	sub	w2, w0, #0x41
    1408:	add	w1, w0, #0x20
    140c:	cmp	w2, #0x19
    1410:	and	w1, w1, #0xff
    1414:	csel	w0, w0, w1, hi  // hi = pmore
    1418:	strb	w0, [x21, #12]
    141c:	ldrb	w0, [sp, #117]
    1420:	sub	w2, w0, #0x41
    1424:	add	w1, w0, #0x20
    1428:	cmp	w2, #0x19
    142c:	and	w1, w1, #0xff
    1430:	csel	w0, w0, w1, hi  // hi = pmore
    1434:	strb	w0, [x21, #13]
    1438:	ldrb	w0, [sp, #118]
    143c:	sub	w2, w0, #0x41
    1440:	add	w1, w0, #0x20
    1444:	cmp	w2, #0x19
    1448:	and	w1, w1, #0xff
    144c:	csel	w0, w0, w1, hi  // hi = pmore
    1450:	strb	w0, [x21, #14]
    1454:	ldrb	w0, [sp, #119]
    1458:	strb	wzr, [x21, #16]
    145c:	sub	w2, w0, #0x41
    1460:	add	w1, w0, #0x20
    1464:	cmp	w2, #0x19
    1468:	and	w1, w1, #0xff
    146c:	csel	w0, w0, w1, hi  // hi = pmore
    1470:	strb	w0, [x21, #15]
    1474:	b	ff0 <grub_udf_uuid+0x118>
    1478:	sub	w1, w3, #0x41
    147c:	add	w0, w3, #0x20
    1480:	cmp	w1, #0x1a
    1484:	and	w0, w0, #0xff
    1488:	csel	w3, w0, w3, cc  // cc = lo, ul, last
    148c:	strb	w3, [x21]
    1490:	adrp	x2, 0 <read_string>
    1494:	add	x0, x21, #0x8
    1498:	ldrb	w3, [sp, #105]
    149c:	mov	x1, #0x9                   	// #9
    14a0:	ldr	x2, [x2]
    14a4:	sub	w5, w3, #0x41
    14a8:	add	w4, w3, #0x20
    14ac:	cmp	w5, #0x19
    14b0:	and	w4, w4, #0xff
    14b4:	csel	w3, w3, w4, hi  // hi = pmore
    14b8:	strb	w3, [x21, #1]
    14bc:	ldrb	w3, [sp, #106]
    14c0:	sub	w5, w3, #0x41
    14c4:	add	w4, w3, #0x20
    14c8:	cmp	w5, #0x19
    14cc:	and	w4, w4, #0xff
    14d0:	csel	w3, w3, w4, hi  // hi = pmore
    14d4:	strb	w3, [x21, #2]
    14d8:	ldrb	w3, [sp, #107]
    14dc:	sub	w5, w3, #0x41
    14e0:	add	w4, w3, #0x20
    14e4:	cmp	w5, #0x19
    14e8:	and	w4, w4, #0xff
    14ec:	csel	w3, w3, w4, hi  // hi = pmore
    14f0:	strb	w3, [x21, #3]
    14f4:	ldrb	w3, [sp, #108]
    14f8:	sub	w5, w3, #0x41
    14fc:	add	w4, w3, #0x20
    1500:	cmp	w5, #0x19
    1504:	and	w4, w4, #0xff
    1508:	csel	w3, w3, w4, hi  // hi = pmore
    150c:	strb	w3, [x21, #4]
    1510:	ldrb	w3, [sp, #109]
    1514:	sub	w5, w3, #0x41
    1518:	add	w4, w3, #0x20
    151c:	cmp	w5, #0x19
    1520:	and	w4, w4, #0xff
    1524:	csel	w3, w3, w4, hi  // hi = pmore
    1528:	strb	w3, [x21, #5]
    152c:	ldrb	w3, [sp, #110]
    1530:	sub	w5, w3, #0x41
    1534:	add	w4, w3, #0x20
    1538:	cmp	w5, #0x19
    153c:	and	w4, w4, #0xff
    1540:	csel	w3, w3, w4, hi  // hi = pmore
    1544:	strb	w3, [x21, #6]
    1548:	ldrb	w3, [sp, #111]
    154c:	sub	w5, w3, #0x41
    1550:	add	w4, w3, #0x20
    1554:	cmp	w5, #0x19
    1558:	and	w4, w4, #0xff
    155c:	csel	w3, w3, w4, hi  // hi = pmore
    1560:	strb	w3, [x21, #7]
    1564:	ldrb	w6, [sp, #115]
    1568:	ldrb	w5, [sp, #114]
    156c:	ldrb	w4, [sp, #113]
    1570:	ldrb	w3, [sp, #112]
    1574:	bl	0 <grub_snprintf>
    1578:	b	ff0 <grub_udf_uuid+0x118>
    157c:	nop
	...

0000000000001598 <grub_udf_read_icb>:
    1598:	stp	x29, x30, [sp, #-48]!
    159c:	mov	x29, sp
    15a0:	stp	x19, x20, [sp, #16]
    15a4:	mov	x19, x0
    15a8:	mov	x20, x1
    15ac:	ldrh	w0, [x1, #8]
    15b0:	ldr	w1, [x19, #3028]
    15b4:	stp	x21, x22, [sp, #32]
    15b8:	mov	x21, x2
    15bc:	cmp	w0, w1
    15c0:	b.ge	1664 <grub_udf_read_icb+0xcc>  // b.tcont
    15c4:	add	x0, x19, w0, sxtw #3
    15c8:	ldr	w3, [x20, #4]
    15cc:	ldr	x0, [x0, #2960]
    15d0:	ldrh	w2, [x0, #4]
    15d4:	add	x0, x2, x2, lsl #1
    15d8:	add	x0, x2, x0, lsl #4
    15dc:	add	x0, x19, x0, lsl #2
    15e0:	ldr	w1, [x0, #2756]
    15e4:	add	w1, w1, w3
    15e8:	adrp	x0, 0 <read_string>
    15ec:	ldr	x22, [x0]
    15f0:	ldr	w0, [x22]
    15f4:	cbz	w0, 1608 <grub_udf_read_icb+0x70>
    15f8:	ldp	x19, x20, [sp, #16]
    15fc:	ldp	x21, x22, [sp, #32]
    1600:	ldp	x29, x30, [sp], #48
    1604:	ret
    1608:	ldr	w2, [x19, #3032]
    160c:	mov	w3, #0x1                   	// #1
    1610:	ldr	x0, [x19]
    1614:	add	w5, w2, #0x9
    1618:	lsl	w1, w1, w2
    161c:	add	x4, x21, #0xc
    1620:	lsl	w3, w3, w5
    1624:	mov	x2, #0x0                   	// #0
    1628:	sxtw	x3, w3
    162c:	bl	0 <grub_disk_read>
    1630:	cbnz	w0, 167c <grub_udf_read_icb+0xe4>
    1634:	ldrh	w1, [x21, #12]
    1638:	mov	w2, #0x10a                 	// #266
    163c:	cmp	w1, #0x105
    1640:	ccmp	w1, w2, #0x4, ne  // ne = any
    1644:	b.ne	1690 <grub_udf_read_icb+0xf8>  // b.any
    1648:	ldrh	w1, [x20, #8]
    164c:	str	x19, [x21]
    1650:	str	w1, [x21, #8]
    1654:	ldp	x19, x20, [sp, #16]
    1658:	ldp	x21, x22, [sp, #32]
    165c:	ldp	x29, x30, [sp], #48
    1660:	ret
    1664:	adrp	x1, 0 <read_string>
    1668:	mov	w0, #0x9                   	// #9
    166c:	ldr	x1, [x1]
    1670:	bl	0 <grub_error>
    1674:	mov	w1, #0x0                   	// #0
    1678:	b	15e8 <grub_udf_read_icb+0x50>
    167c:	ldr	w0, [x22]
    1680:	ldp	x19, x20, [sp, #16]
    1684:	ldp	x21, x22, [sp, #32]
    1688:	ldp	x29, x30, [sp], #48
    168c:	ret
    1690:	adrp	x1, 0 <read_string>
    1694:	mov	w0, #0x9                   	// #9
    1698:	ldp	x19, x20, [sp, #16]
    169c:	ldp	x21, x22, [sp, #32]
    16a0:	ldp	x29, x30, [sp], #48
    16a4:	ldr	x1, [x1]
    16a8:	b	0 <grub_error>
    16ac:	nop
	...

00000000000016c8 <grub_udf_open>:
    16c8:	stp	x29, x30, [sp, #-80]!
    16cc:	adrp	x2, 0 <read_string>
    16d0:	mov	x29, sp
    16d4:	stp	x23, x24, [sp, #48]
    16d8:	ldr	x23, [x2]
    16dc:	stp	x21, x22, [sp, #32]
    16e0:	mov	x21, x0
    16e4:	mov	x22, x1
    16e8:	stp	x19, x20, [sp, #16]
    16ec:	ldr	x0, [x23]
    16f0:	bl	0 <grub_dl_ref>
    16f4:	ldr	x0, [x21, #8]
    16f8:	ldr	x0, [x0]
    16fc:	bl	558 <grub_udf_mount>
    1700:	mov	x19, x0
    1704:	cbz	x0, 17a0 <grub_udf_open+0xd8>
    1708:	ldr	w2, [x0, #3032]
    170c:	mov	w24, #0x1                   	// #1
    1710:	add	w2, w2, #0x9
    1714:	lsl	w2, w24, w2
    1718:	sxtw	x2, w2
    171c:	add	x0, x2, #0x10
    1720:	bl	0 <grub_malloc>
    1724:	mov	x20, x0
    1728:	cbz	x0, 17a0 <grub_udf_open+0xd8>
    172c:	mov	x2, x0
    1730:	add	x1, x19, #0xbc0
    1734:	mov	x0, x19
    1738:	bl	1598 <grub_udf_read_icb>
    173c:	cbnz	w0, 17a4 <grub_udf_open+0xdc>
    1740:	adrp	x2, 0 <read_string>
    1744:	adrp	x1, 0 <read_string>
    1748:	mov	x0, x22
    174c:	mov	w5, w24
    1750:	ldr	x4, [x2]
    1754:	add	x2, sp, #0x48
    1758:	ldr	x3, [x1]
    175c:	mov	x1, x20
    1760:	bl	0 <grub_fshelp_find_file>
    1764:	mov	w22, w0
    1768:	cbnz	w0, 17a4 <grub_udf_open+0xdc>
    176c:	ldr	x1, [sp, #72]
    1770:	str	x1, [x21, #80]
    1774:	str	xzr, [x21, #24]
    1778:	mov	x0, x20
    177c:	ldur	x1, [x1, #68]
    1780:	str	x1, [x21, #64]
    1784:	bl	0 <grub_free>
    1788:	mov	w0, w22
    178c:	ldp	x19, x20, [sp, #16]
    1790:	ldp	x21, x22, [sp, #32]
    1794:	ldp	x23, x24, [sp, #48]
    1798:	ldp	x29, x30, [sp], #80
    179c:	ret
    17a0:	mov	x20, #0x0                   	// #0
    17a4:	ldr	x0, [x23]
    17a8:	bl	0 <grub_dl_unref>
    17ac:	mov	x0, x19
    17b0:	bl	0 <grub_free>
    17b4:	mov	x0, x20
    17b8:	bl	0 <grub_free>
    17bc:	adrp	x0, 0 <read_string>
    17c0:	ldp	x19, x20, [sp, #16]
    17c4:	ldr	x0, [x0]
    17c8:	ldp	x23, x24, [sp, #48]
    17cc:	ldr	w22, [x0]
    17d0:	mov	w0, w22
    17d4:	ldp	x21, x22, [sp, #32]
    17d8:	ldp	x29, x30, [sp], #80
    17dc:	ret
	...

0000000000001800 <grub_udf_label>:
    1800:	stp	x29, x30, [sp, #-32]!
    1804:	mov	x29, sp
    1808:	ldr	x0, [x0]
    180c:	stp	x19, x20, [sp, #16]
    1810:	mov	x20, x1
    1814:	bl	558 <grub_udf_mount>
    1818:	cbz	x0, 187c <grub_udf_label+0x7c>
    181c:	mov	x19, x0
    1820:	ldrb	w0, [x0, #604]
    1824:	cbz	w0, 1868 <grub_udf_label+0x68>
    1828:	ldrb	w1, [x19, #731]
    182c:	mov	x3, #0x7f                  	// #127
    1830:	add	x0, x19, #0x25c
    1834:	mov	x2, #0x0                   	// #0
    1838:	cmp	x1, x3
    183c:	csel	x1, x1, x3, ls  // ls = plast
    1840:	bl	0 <read_string>
    1844:	str	x0, [x20]
    1848:	mov	x0, x19
    184c:	bl	0 <grub_free>
    1850:	adrp	x0, 0 <read_string>
    1854:	ldp	x19, x20, [sp, #16]
    1858:	ldr	x0, [x0]
    185c:	ldp	x29, x30, [sp], #32
    1860:	ldr	w0, [x0]
    1864:	ret
    1868:	mov	x0, #0x1                   	// #1
    186c:	bl	0 <grub_malloc>
    1870:	cbz	x0, 1844 <grub_udf_label+0x44>
    1874:	strb	wzr, [x0]
    1878:	b	1844 <grub_udf_label+0x44>
    187c:	adrp	x0, 0 <read_string>
    1880:	str	xzr, [x20]
    1884:	ldp	x19, x20, [sp, #16]
    1888:	ldr	x0, [x0]
    188c:	ldp	x29, x30, [sp], #32
    1890:	ldr	w0, [x0]
    1894:	ret
	...

00000000000018a0 <grub_udf_read_block>:
    18a0:	stp	x29, x30, [sp, #-64]!
    18a4:	mov	x29, sp
    18a8:	stp	x19, x20, [sp, #16]
    18ac:	mov	x20, x0
    18b0:	ldrh	w0, [x0, #12]
    18b4:	cmp	w0, #0x105
    18b8:	b.eq	18e4 <grub_udf_read_block+0x44>  // b.none
    18bc:	cmp	w0, #0x10a
    18c0:	b.eq	1ac8 <grub_udf_read_block+0x228>  // b.none
    18c4:	adrp	x1, 0 <read_string>
    18c8:	mov	w0, #0x9                   	// #9
    18cc:	ldr	x1, [x1]
    18d0:	bl	0 <grub_error>
    18d4:	mov	x0, #0x0                   	// #0
    18d8:	ldp	x19, x20, [sp, #16]
    18dc:	ldp	x29, x30, [sp], #64
    18e0:	ret
    18e4:	ldp	w0, w5, [x20, #180]
    18e8:	add	x2, x20, #0xbc
    18ec:	stp	x21, x22, [sp, #32]
    18f0:	add	x2, x2, x0
    18f4:	ldr	x3, [x20]
    18f8:	ldrh	w0, [x20, #46]
    18fc:	ldr	w19, [x3, #732]
    1900:	tst	x0, #0x7
    1904:	mul	x19, x19, x1
    1908:	b.ne	19fc <grub_udf_read_block+0x15c>  // b.any
    190c:	cmp	x5, #0x7
    1910:	b.le	1c14 <grub_udf_read_block+0x374>
    1914:	mov	x21, #0x0                   	// #0
    1918:	stp	x23, x24, [sp, #48]
    191c:	adrp	x23, 0 <read_string>
    1920:	ldr	w1, [x2]
    1924:	and	w22, w1, #0x3fffffff
    1928:	lsr	w1, w1, #30
    192c:	cmp	w1, #0x3
    1930:	b.eq	1958 <grub_udf_read_block+0xb8>  // b.none
    1934:	cmp	x22, x19
    1938:	b.hi	1b4c <grub_udf_read_block+0x2ac>  // b.pmore
    193c:	sub	x19, x19, x22
    1940:	add	x2, x2, #0x8
    1944:	sub	x5, x5, #0x8
    1948:	cmp	x5, #0x7
    194c:	b.gt	1920 <grub_udf_read_block+0x80>
    1950:	ldp	x23, x24, [sp, #48]
    1954:	b	19e0 <grub_udf_read_block+0x140>
    1958:	ldr	x1, [x20]
    195c:	ldrh	w0, [x20, #8]
    1960:	ldr	w3, [x1, #3028]
    1964:	cmp	w0, w3
    1968:	b.ge	1b0c <grub_udf_read_block+0x26c>  // b.tcont
    196c:	add	x0, x1, w0, sxtw #3
    1970:	ldr	w3, [x2, #4]
    1974:	ldr	x0, [x0, #2960]
    1978:	ldrh	w2, [x0, #4]
    197c:	add	x0, x2, x2, lsl #1
    1980:	add	x0, x2, x0, lsl #4
    1984:	add	x0, x1, x0, lsl #2
    1988:	ldr	w24, [x0, #2756]
    198c:	add	w24, w24, w3
    1990:	cbz	x21, 1af4 <grub_udf_read_block+0x254>
    1994:	ldr	x0, [x1]
    1998:	and	x3, x22, #0x3fffffff
    199c:	ldr	w1, [x1, #3032]
    19a0:	mov	x4, x21
    19a4:	mov	x2, #0x0                   	// #0
    19a8:	lsl	x1, x24, x1
    19ac:	bl	0 <grub_disk_read>
    19b0:	cbnz	w0, 1950 <grub_udf_read_block+0xb0>
    19b4:	ldrh	w0, [x21]
    19b8:	cmp	w0, #0x102
    19bc:	b.ne	19cc <grub_udf_read_block+0x12c>  // b.any
    19c0:	ldr	w5, [x21, #20]
    19c4:	add	x2, x21, #0x18
    19c8:	b	1948 <grub_udf_read_block+0xa8>
    19cc:	adrp	x1, 0 <read_string>
    19d0:	mov	w0, #0x9                   	// #9
    19d4:	ldr	x1, [x1]
    19d8:	bl	0 <grub_error>
    19dc:	ldp	x23, x24, [sp, #48]
    19e0:	mov	x0, x21
    19e4:	bl	0 <grub_free>
    19e8:	mov	x0, #0x0                   	// #0
    19ec:	ldp	x19, x20, [sp, #16]
    19f0:	ldp	x21, x22, [sp, #32]
    19f4:	ldp	x29, x30, [sp], #64
    19f8:	ret
    19fc:	cmp	x5, #0xf
    1a00:	b.le	1c14 <grub_udf_read_block+0x374>
    1a04:	ldr	w1, [x2]
    1a08:	mov	x21, #0x0                   	// #0
    1a0c:	stp	x23, x24, [sp, #48]
    1a10:	adrp	x23, 0 <read_string>
    1a14:	and	w22, w1, #0x3fffffff
    1a18:	lsr	w1, w1, #30
    1a1c:	cmp	w1, #0x3
    1a20:	b.eq	1a54 <grub_udf_read_block+0x1b4>  // b.none
    1a24:	cmp	x22, x19
    1a28:	b.hi	1bb0 <grub_udf_read_block+0x310>  // b.pmore
    1a2c:	sub	x19, x19, x22
    1a30:	add	x2, x2, #0x10
    1a34:	sub	x5, x5, #0x10
    1a38:	cmp	x5, #0xf
    1a3c:	b.le	1950 <grub_udf_read_block+0xb0>
    1a40:	ldr	w1, [x2]
    1a44:	and	w22, w1, #0x3fffffff
    1a48:	lsr	w1, w1, #30
    1a4c:	cmp	w1, #0x3
    1a50:	b.ne	1a24 <grub_udf_read_block+0x184>  // b.any
    1a54:	ldr	x1, [x20]
    1a58:	ldrh	w0, [x2, #8]
    1a5c:	ldr	w3, [x1, #3028]
    1a60:	cmp	w0, w3
    1a64:	b.ge	1b24 <grub_udf_read_block+0x284>  // b.tcont
    1a68:	add	x0, x1, w0, sxtw #3
    1a6c:	ldr	w3, [x2, #4]
    1a70:	ldr	x0, [x0, #2960]
    1a74:	ldrh	w2, [x0, #4]
    1a78:	add	x0, x2, x2, lsl #1
    1a7c:	add	x0, x2, x0, lsl #4
    1a80:	add	x0, x1, x0, lsl #2
    1a84:	ldr	w24, [x0, #2756]
    1a88:	add	w24, w24, w3
    1a8c:	cbz	x21, 1adc <grub_udf_read_block+0x23c>
    1a90:	ldr	x0, [x1]
    1a94:	and	x3, x22, #0x3fffffff
    1a98:	ldr	w1, [x1, #3032]
    1a9c:	mov	x4, x21
    1aa0:	mov	x2, #0x0                   	// #0
    1aa4:	lsl	x1, x24, x1
    1aa8:	bl	0 <grub_disk_read>
    1aac:	cbnz	w0, 1950 <grub_udf_read_block+0xb0>
    1ab0:	ldrh	w0, [x21]
    1ab4:	cmp	w0, #0x102
    1ab8:	b.ne	19cc <grub_udf_read_block+0x12c>  // b.any
    1abc:	ldr	w5, [x21, #20]
    1ac0:	add	x2, x21, #0x18
    1ac4:	b	1a38 <grub_udf_read_block+0x198>
    1ac8:	ldp	w0, w5, [x20, #220]
    1acc:	add	x2, x20, #0xe4
    1ad0:	stp	x21, x22, [sp, #32]
    1ad4:	add	x2, x2, x0
    1ad8:	b	18f4 <grub_udf_read_block+0x54>
    1adc:	ldr	w0, [x1, #732]
    1ae0:	bl	0 <grub_malloc>
    1ae4:	mov	x21, x0
    1ae8:	cbz	x0, 1b3c <grub_udf_read_block+0x29c>
    1aec:	ldr	x1, [x20]
    1af0:	b	1a90 <grub_udf_read_block+0x1f0>
    1af4:	ldr	w0, [x1, #732]
    1af8:	bl	0 <grub_malloc>
    1afc:	mov	x21, x0
    1b00:	cbz	x0, 1b3c <grub_udf_read_block+0x29c>
    1b04:	ldr	x1, [x20]
    1b08:	b	1994 <grub_udf_read_block+0xf4>
    1b0c:	ldr	x1, [x23]
    1b10:	mov	w0, #0x9                   	// #9
    1b14:	mov	x24, #0x0                   	// #0
    1b18:	bl	0 <grub_error>
    1b1c:	ldr	x1, [x20]
    1b20:	b	1990 <grub_udf_read_block+0xf0>
    1b24:	ldr	x1, [x23]
    1b28:	mov	w0, #0x9                   	// #9
    1b2c:	mov	x24, #0x0                   	// #0
    1b30:	bl	0 <grub_error>
    1b34:	ldr	x1, [x20]
    1b38:	b	1a8c <grub_udf_read_block+0x1ec>
    1b3c:	mov	x0, #0x0                   	// #0
    1b40:	ldp	x21, x22, [sp, #32]
    1b44:	ldp	x23, x24, [sp, #48]
    1b48:	b	18d8 <grub_udf_read_block+0x38>
    1b4c:	ldr	w22, [x2, #4]
    1b50:	mov	x0, x21
    1b54:	bl	0 <grub_free>
    1b58:	tst	w22, #0xc0000000
    1b5c:	b.ne	1b3c <grub_udf_read_block+0x29c>  // b.any
    1b60:	ldr	x1, [x20]
    1b64:	ldrh	w0, [x20, #8]
    1b68:	ldr	w2, [x1, #3028]
    1b6c:	cmp	w0, w2
    1b70:	b.ge	1c1c <grub_udf_read_block+0x37c>  // b.tcont
    1b74:	add	x0, x1, w0, sxtw #3
    1b78:	ldr	x0, [x0, #2960]
    1b7c:	ldrh	w2, [x0, #4]
    1b80:	add	x0, x2, x2, lsl #1
    1b84:	add	x0, x2, x0, lsl #4
    1b88:	add	x0, x1, x0, lsl #2
    1b8c:	ldr	w0, [x0, #2756]
    1b90:	add	w0, w22, w0
    1b94:	ldr	w1, [x1, #3032]
    1b98:	ldp	x21, x22, [sp, #32]
    1b9c:	add	w1, w1, #0x9
    1ba0:	ldp	x23, x24, [sp, #48]
    1ba4:	lsr	x19, x19, x1
    1ba8:	add	x0, x19, x0
    1bac:	b	18d8 <grub_udf_read_block+0x38>
    1bb0:	ldr	w22, [x2, #4]
    1bb4:	mov	x0, x21
    1bb8:	ldrh	w21, [x2, #8]
    1bbc:	bl	0 <grub_free>
    1bc0:	tst	w22, #0xc0000000
    1bc4:	b.ne	1b3c <grub_udf_read_block+0x29c>  // b.any
    1bc8:	ldr	x0, [x20]
    1bcc:	ldr	w1, [x0, #3028]
    1bd0:	cmp	w21, w1
    1bd4:	b.ge	1c38 <grub_udf_read_block+0x398>  // b.tcont
    1bd8:	add	x21, x0, w21, sxtw #3
    1bdc:	ldr	x1, [x21, #2960]
    1be0:	ldrh	w2, [x1, #4]
    1be4:	add	x1, x2, x2, lsl #1
    1be8:	add	x1, x2, x1, lsl #4
    1bec:	add	x1, x0, x1, lsl #2
    1bf0:	ldr	w1, [x1, #2756]
    1bf4:	add	w22, w22, w1
    1bf8:	ldr	w0, [x0, #3032]
    1bfc:	ldp	x23, x24, [sp, #48]
    1c00:	add	w0, w0, #0x9
    1c04:	lsr	x0, x19, x0
    1c08:	add	x0, x0, x22
    1c0c:	ldp	x21, x22, [sp, #32]
    1c10:	b	18d8 <grub_udf_read_block+0x38>
    1c14:	mov	x21, #0x0                   	// #0
    1c18:	b	19e0 <grub_udf_read_block+0x140>
    1c1c:	adrp	x1, 0 <read_string>
    1c20:	mov	w0, #0x9                   	// #9
    1c24:	ldr	x1, [x1]
    1c28:	bl	0 <grub_error>
    1c2c:	mov	x0, #0x0                   	// #0
    1c30:	ldr	x1, [x20]
    1c34:	b	1b94 <grub_udf_read_block+0x2f4>
    1c38:	adrp	x1, 0 <read_string>
    1c3c:	mov	w0, #0x9                   	// #9
    1c40:	mov	x22, #0x0                   	// #0
    1c44:	ldr	x1, [x1]
    1c48:	bl	0 <grub_error>
    1c4c:	ldr	x0, [x20]
    1c50:	b	1bf8 <grub_udf_read_block+0x358>
    1c54:	nop
	...

0000000000001c70 <grub_udf_read>:
    1c70:	sub	sp, sp, #0x40
    1c74:	mov	x3, x0
    1c78:	mov	x0, x1
    1c7c:	stp	x29, x30, [sp, #32]
    1c80:	add	x29, sp, #0x20
    1c84:	ldr	x1, [x3, #80]
    1c88:	ldr	x4, [x3, #24]
    1c8c:	str	x19, [sp, #48]
    1c90:	mov	x19, x2
    1c94:	ldrh	w2, [x1, #46]
    1c98:	and	w2, w2, #0x7
    1c9c:	cmp	w2, #0x2
    1ca0:	b.eq	1ce4 <grub_udf_read+0x74>  // b.none
    1ca4:	cmp	w2, #0x3
    1ca8:	b.ne	1d08 <grub_udf_read+0x98>  // b.any
    1cac:	ldrh	w2, [x1, #12]
    1cb0:	cmp	w2, #0x105
    1cb4:	b.eq	1d50 <grub_udf_read+0xe0>  // b.none
    1cb8:	ldr	w3, [x1, #220]
    1cbc:	add	x2, x1, #0xe4
    1cc0:	add	x2, x2, x3
    1cc4:	add	x1, x2, x4
    1cc8:	mov	x2, x19
    1ccc:	bl	0 <grub_memmove>
    1cd0:	mov	x0, x19
    1cd4:	ldp	x29, x30, [sp, #32]
    1cd8:	ldr	x19, [sp, #48]
    1cdc:	add	sp, sp, #0x40
    1ce0:	ret
    1ce4:	adrp	x1, 0 <read_string>
    1ce8:	mov	w0, #0x9                   	// #9
    1cec:	ldr	x1, [x1]
    1cf0:	bl	0 <grub_error>
    1cf4:	mov	x0, #0x0                   	// #0
    1cf8:	ldp	x29, x30, [sp, #32]
    1cfc:	ldr	x19, [sp, #48]
    1d00:	add	sp, sp, #0x40
    1d04:	ret
    1d08:	ldr	x8, [x1]
    1d0c:	mov	x6, x0
    1d10:	ldr	x2, [x3, #88]
    1d14:	adrp	x5, 0 <read_string>
    1d18:	ldr	x0, [x8]
    1d1c:	str	xzr, [sp, #16]
    1d20:	ldr	x7, [x5]
    1d24:	mov	x5, x19
    1d28:	ldr	w8, [x8, #3032]
    1d2c:	str	w8, [sp, #8]
    1d30:	ldur	x8, [x1, #68]
    1d34:	ldr	x3, [x3, #96]
    1d38:	str	x8, [sp]
    1d3c:	bl	0 <grub_fshelp_read_file>
    1d40:	ldp	x29, x30, [sp, #32]
    1d44:	ldr	x19, [sp, #48]
    1d48:	add	sp, sp, #0x40
    1d4c:	ret
    1d50:	ldr	w3, [x1, #180]
    1d54:	add	x2, x1, #0xbc
    1d58:	add	x2, x2, x3
    1d5c:	b	1cc4 <grub_udf_read+0x54>
	...

0000000000001d70 <grub_udf_iterate_dir.part.0>:
    1d70:	sub	sp, sp, #0x1b0
    1d74:	stp	x29, x30, [sp, #32]
    1d78:	add	x29, sp, #0x20
    1d7c:	stp	x21, x22, [sp, #64]
    1d80:	mov	x21, x1
    1d84:	ldur	x1, [x0, #68]
    1d88:	cbz	x1, 1e80 <grub_udf_iterate_dir.part.0+0x110>
    1d8c:	mov	x22, x2
    1d90:	stp	x19, x20, [sp, #48]
    1d94:	mov	x19, #0x0                   	// #0
    1d98:	stp	x23, x24, [sp, #80]
    1d9c:	add	x24, x0, #0xe4
    1da0:	adrp	x23, 0 <read_string>
    1da4:	stp	x25, x26, [sp, #96]
    1da8:	mov	x25, x0
    1dac:	str	x27, [sp, #112]
    1db0:	b	1e14 <grub_udf_iterate_dir.part.0+0xa4>
    1db4:	ldrh	w0, [x25, #12]
    1db8:	cmp	w0, #0x105
    1dbc:	b.eq	1f9c <grub_udf_iterate_dir.part.0+0x22c>  // b.none
    1dc0:	ldr	w1, [x25, #220]
    1dc4:	add	x1, x24, x1
    1dc8:	add	x1, x1, x19
    1dcc:	add	x0, sp, #0x88
    1dd0:	mov	x2, #0x26                  	// #38
    1dd4:	bl	0 <grub_memmove>
    1dd8:	ldrh	w0, [sp, #136]
    1ddc:	cmp	w0, #0x101
    1de0:	b.ne	205c <grub_udf_iterate_dir.part.0+0x2ec>  // b.any
    1de4:	ldrb	w0, [sp, #154]
    1de8:	ldrh	w20, [sp, #172]
    1dec:	add	x20, x20, #0x26
    1df0:	add	x20, x20, x19
    1df4:	tbz	w0, #2, 1ec8 <grub_udf_iterate_dir.part.0+0x158>
    1df8:	ldrb	w19, [sp, #155]
    1dfc:	ldur	x1, [x25, #68]
    1e00:	add	x19, x19, #0x3
    1e04:	add	x19, x19, x20
    1e08:	and	x19, x19, #0xfffffffffffffffc
    1e0c:	cmp	x19, x1
    1e10:	b.cs	1e70 <grub_udf_iterate_dir.part.0+0x100>  // b.hs, b.nlast
    1e14:	ldrh	w3, [x25, #46]
    1e18:	and	w3, w3, #0x7
    1e1c:	cmp	w3, #0x2
    1e20:	b.eq	1e94 <grub_udf_iterate_dir.part.0+0x124>  // b.none
    1e24:	cmp	w3, #0x3
    1e28:	b.eq	1db4 <grub_udf_iterate_dir.part.0+0x44>  // b.none
    1e2c:	ldr	x2, [x25]
    1e30:	add	x6, sp, #0x88
    1e34:	ldr	x7, [x23]
    1e38:	mov	x4, x19
    1e3c:	ldr	x0, [x2]
    1e40:	str	xzr, [sp, #16]
    1e44:	mov	x5, #0x26                  	// #38
    1e48:	mov	x3, #0x0                   	// #0
    1e4c:	ldr	w8, [x2, #3032]
    1e50:	mov	x2, #0x0                   	// #0
    1e54:	str	x1, [sp]
    1e58:	mov	x1, x25
    1e5c:	str	w8, [sp, #8]
    1e60:	bl	0 <grub_fshelp_read_file>
    1e64:	cmp	x0, #0x26
    1e68:	b.eq	1dd8 <grub_udf_iterate_dir.part.0+0x68>  // b.none
    1e6c:	nop
    1e70:	ldp	x19, x20, [sp, #48]
    1e74:	ldp	x23, x24, [sp, #80]
    1e78:	ldp	x25, x26, [sp, #96]
    1e7c:	ldr	x27, [sp, #112]
    1e80:	mov	w0, #0x0                   	// #0
    1e84:	ldp	x29, x30, [sp, #32]
    1e88:	ldp	x21, x22, [sp, #64]
    1e8c:	add	sp, sp, #0x1b0
    1e90:	ret
    1e94:	adrp	x1, 0 <read_string>
    1e98:	mov	w0, #0x9                   	// #9
    1e9c:	ldr	x1, [x1]
    1ea0:	bl	0 <grub_error>
    1ea4:	ldp	x19, x20, [sp, #48]
    1ea8:	mov	w0, #0x0                   	// #0
    1eac:	ldp	x23, x24, [sp, #80]
    1eb0:	ldp	x25, x26, [sp, #96]
    1eb4:	ldr	x27, [sp, #112]
    1eb8:	ldp	x29, x30, [sp, #32]
    1ebc:	ldp	x21, x22, [sp, #64]
    1ec0:	add	sp, sp, #0x1b0
    1ec4:	ret
    1ec8:	ldr	x0, [x25]
    1ecc:	mov	w19, #0x1                   	// #1
    1ed0:	ldr	w0, [x0, #3032]
    1ed4:	add	w0, w0, #0x9
    1ed8:	lsl	w0, w19, w0
    1edc:	sxtw	x0, w0
    1ee0:	add	x0, x0, #0x10
    1ee4:	bl	0 <grub_malloc>
    1ee8:	mov	x26, x0
    1eec:	cbz	x0, 1e70 <grub_udf_iterate_dir.part.0+0x100>
    1ef0:	mov	x2, x0
    1ef4:	add	x1, sp, #0x9c
    1ef8:	ldr	x0, [x25]
    1efc:	bl	1598 <grub_udf_read_icb>
    1f00:	cbnz	w0, 1e70 <grub_udf_iterate_dir.part.0+0x100>
    1f04:	ldrb	w1, [sp, #154]
    1f08:	tbz	w1, #3, 1f40 <grub_udf_iterate_dir.part.0+0x1d0>
    1f0c:	adrp	x0, 0 <read_string>
    1f10:	mov	x2, x26
    1f14:	mov	x3, x22
    1f18:	mov	w1, #0x2                   	// #2
    1f1c:	ldr	x0, [x0]
    1f20:	blr	x21
    1f24:	cbz	w0, 1df8 <grub_udf_iterate_dir.part.0+0x88>
    1f28:	mov	w0, #0x1                   	// #1
    1f2c:	ldp	x19, x20, [sp, #48]
    1f30:	ldp	x23, x24, [sp, #80]
    1f34:	ldp	x25, x26, [sp, #96]
    1f38:	ldr	x27, [sp, #112]
    1f3c:	b	1eb8 <grub_udf_iterate_dir.part.0+0x148>
    1f40:	ldrb	w2, [x26, #39]
    1f44:	ubfx	x1, x1, #1, #1
    1f48:	ldrh	w0, [x25, #46]
    1f4c:	mov	w19, #0x3                   	// #3
    1f50:	cmp	w2, #0xc
    1f54:	ldrb	w27, [sp, #155]
    1f58:	and	w0, w0, #0x7
    1f5c:	csinc	w19, w19, w1, eq  // eq = none
    1f60:	cmp	w0, #0x2
    1f64:	b.eq	202c <grub_udf_iterate_dir.part.0+0x2bc>  // b.none
    1f68:	cmp	w0, #0x3
    1f6c:	b.ne	1fac <grub_udf_iterate_dir.part.0+0x23c>  // b.any
    1f70:	ldrh	w0, [x25, #12]
    1f74:	cmp	w0, #0x105
    1f78:	b.eq	2044 <grub_udf_iterate_dir.part.0+0x2d4>  // b.none
    1f7c:	ldr	w1, [x25, #220]
    1f80:	add	x1, x24, x1
    1f84:	add	x1, x1, x20
    1f88:	mov	x2, x27
    1f8c:	add	x0, sp, #0xb0
    1f90:	bl	0 <grub_memmove>
    1f94:	mov	x1, x27
    1f98:	b	1fec <grub_udf_iterate_dir.part.0+0x27c>
    1f9c:	ldr	w0, [x25, #180]
    1fa0:	add	x1, x25, #0xbc
    1fa4:	add	x1, x1, x0
    1fa8:	b	1dc8 <grub_udf_iterate_dir.part.0+0x58>
    1fac:	ldr	x1, [x25]
    1fb0:	mov	x5, x27
    1fb4:	ldr	x7, [x23]
    1fb8:	add	x6, sp, #0xb0
    1fbc:	ldr	x0, [x1]
    1fc0:	str	xzr, [sp, #16]
    1fc4:	mov	x4, x20
    1fc8:	mov	x3, #0x0                   	// #0
    1fcc:	ldr	w1, [x1, #3032]
    1fd0:	ldur	x2, [x25, #68]
    1fd4:	str	x2, [sp]
    1fd8:	str	w1, [sp, #8]
    1fdc:	mov	x1, x25
    1fe0:	mov	x2, #0x0                   	// #0
    1fe4:	bl	0 <grub_fshelp_read_file>
    1fe8:	mov	x1, x0
    1fec:	ldrb	w0, [sp, #155]
    1ff0:	cmp	x0, x1
    1ff4:	b.ne	1ea4 <grub_udf_iterate_dir.part.0+0x134>  // b.any
    1ff8:	add	x0, sp, #0xb0
    1ffc:	mov	x2, #0x0                   	// #0
    2000:	bl	0 <read_string>
    2004:	mov	x27, x0
    2008:	cbz	x0, 2054 <grub_udf_iterate_dir.part.0+0x2e4>
    200c:	mov	x2, x26
    2010:	mov	w1, w19
    2014:	mov	x3, x22
    2018:	blr	x21
    201c:	cbnz	w0, 2070 <grub_udf_iterate_dir.part.0+0x300>
    2020:	mov	x0, x27
    2024:	bl	0 <grub_free>
    2028:	b	1df8 <grub_udf_iterate_dir.part.0+0x88>
    202c:	adrp	x1, 0 <read_string>
    2030:	mov	w0, #0x9                   	// #9
    2034:	ldr	x1, [x1]
    2038:	bl	0 <grub_error>
    203c:	mov	x1, #0x0                   	// #0
    2040:	b	1fec <grub_udf_iterate_dir.part.0+0x27c>
    2044:	ldr	w0, [x25, #180]
    2048:	add	x1, x25, #0xbc
    204c:	add	x1, x1, x0
    2050:	b	1f84 <grub_udf_iterate_dir.part.0+0x214>
    2054:	bl	0 <grub_print_error>
    2058:	b	2020 <grub_udf_iterate_dir.part.0+0x2b0>
    205c:	adrp	x1, 0 <read_string>
    2060:	mov	w0, #0x9                   	// #9
    2064:	ldr	x1, [x1]
    2068:	bl	0 <grub_error>
    206c:	b	1ea4 <grub_udf_iterate_dir.part.0+0x134>
    2070:	mov	x0, x27
    2074:	bl	0 <grub_free>
    2078:	b	1f28 <grub_udf_iterate_dir.part.0+0x1b8>
    207c:	nop
	...

00000000000020a0 <grub_udf_iterate_dir>:
    20a0:	stp	x29, x30, [sp, #-64]!
    20a4:	mov	x29, sp
    20a8:	stp	x19, x20, [sp, #16]
    20ac:	mov	x19, x0
    20b0:	mov	x20, x1
    20b4:	ldr	x0, [x0]
    20b8:	stp	x21, x22, [sp, #32]
    20bc:	mov	w21, #0x1                   	// #1
    20c0:	mov	x22, x2
    20c4:	ldr	w3, [x0, #3032]
    20c8:	add	w3, w3, #0x9
    20cc:	lsl	w3, w21, w3
    20d0:	sxtw	x3, w3
    20d4:	add	x0, x3, #0x10
    20d8:	bl	0 <grub_malloc>
    20dc:	cbz	x0, 215c <grub_udf_iterate_dir+0xbc>
    20e0:	ldr	x2, [x19]
    20e4:	mov	x1, x19
    20e8:	ldr	w3, [x2, #3032]
    20ec:	str	x23, [sp, #48]
    20f0:	mov	x23, x0
    20f4:	add	w3, w3, #0x9
    20f8:	lsl	w3, w21, w3
    20fc:	sxtw	x3, w3
    2100:	add	x2, x3, #0x10
    2104:	bl	0 <grub_memmove>
    2108:	adrp	x0, 0 <read_string>
    210c:	mov	x2, x23
    2110:	mov	x3, x22
    2114:	mov	w1, #0x2                   	// #2
    2118:	ldr	x0, [x0]
    211c:	blr	x20
    2120:	cbnz	w0, 2144 <grub_udf_iterate_dir+0xa4>
    2124:	mov	x2, x22
    2128:	mov	x1, x20
    212c:	mov	x0, x19
    2130:	ldp	x19, x20, [sp, #16]
    2134:	ldp	x21, x22, [sp, #32]
    2138:	ldr	x23, [sp, #48]
    213c:	ldp	x29, x30, [sp], #64
    2140:	b	1d70 <grub_udf_iterate_dir.part.0>
    2144:	mov	w0, w21
    2148:	ldp	x19, x20, [sp, #16]
    214c:	ldp	x21, x22, [sp, #32]
    2150:	ldr	x23, [sp, #48]
    2154:	ldp	x29, x30, [sp], #64
    2158:	ret
    215c:	mov	w0, #0x0                   	// #0
    2160:	ldp	x19, x20, [sp, #16]
    2164:	ldp	x21, x22, [sp, #32]
    2168:	ldp	x29, x30, [sp], #64
    216c:	ret
	...

0000000000002178 <grub_udf_dir>:
    2178:	stp	x29, x30, [sp, #-96]!
    217c:	adrp	x4, 0 <read_string>
    2180:	mov	x29, sp
    2184:	stp	x21, x22, [sp, #32]
    2188:	mov	x21, x1
    218c:	ldr	x22, [x4]
    2190:	stp	x19, x20, [sp, #16]
    2194:	mov	x19, x0
    2198:	stp	xzr, x2, [sp, #72]
    219c:	ldr	x0, [x22]
    21a0:	str	x3, [sp, #88]
    21a4:	bl	0 <grub_dl_ref>
    21a8:	ldr	x0, [x19]
    21ac:	bl	558 <grub_udf_mount>
    21b0:	mov	x19, x0
    21b4:	cbz	x0, 2228 <grub_udf_dir+0xb0>
    21b8:	ldr	w0, [x0, #3032]
    21bc:	stp	x23, x24, [sp, #48]
    21c0:	mov	w23, #0x1                   	// #1
    21c4:	add	w0, w0, #0x9
    21c8:	lsl	w0, w23, w0
    21cc:	sxtw	x0, w0
    21d0:	add	x0, x0, #0x10
    21d4:	bl	0 <grub_malloc>
    21d8:	mov	x20, x0
    21dc:	cbz	x0, 2224 <grub_udf_dir+0xac>
    21e0:	mov	x2, x0
    21e4:	add	x1, x19, #0xbc0
    21e8:	mov	x0, x19
    21ec:	bl	1598 <grub_udf_read_icb>
    21f0:	cbnz	w0, 221c <grub_udf_dir+0xa4>
    21f4:	adrp	x2, 0 <read_string>
    21f8:	adrp	x1, 0 <read_string>
    21fc:	mov	x0, x21
    2200:	mov	w5, #0x2                   	// #2
    2204:	ldr	x4, [x2]
    2208:	add	x2, sp, #0x48
    220c:	ldr	x3, [x1]
    2210:	mov	x1, x20
    2214:	bl	0 <grub_fshelp_find_file>
    2218:	cbz	w0, 2260 <grub_udf_dir+0xe8>
    221c:	ldp	x23, x24, [sp, #48]
    2220:	b	222c <grub_udf_dir+0xb4>
    2224:	ldp	x23, x24, [sp, #48]
    2228:	mov	x20, #0x0                   	// #0
    222c:	mov	x0, x20
    2230:	bl	0 <grub_free>
    2234:	mov	x0, x19
    2238:	bl	0 <grub_free>
    223c:	ldr	x0, [x22]
    2240:	bl	0 <grub_dl_unref>
    2244:	adrp	x0, 0 <read_string>
    2248:	ldp	x19, x20, [sp, #16]
    224c:	ldr	x0, [x0]
    2250:	ldp	x21, x22, [sp, #32]
    2254:	ldr	w0, [x0]
    2258:	ldp	x29, x30, [sp], #96
    225c:	ret
    2260:	ldr	x24, [sp, #72]
    2264:	ldr	x0, [x24]
    2268:	ldr	w0, [x0, #3032]
    226c:	add	w0, w0, #0x9
    2270:	lsl	w0, w23, w0
    2274:	sxtw	x0, w0
    2278:	add	x0, x0, #0x10
    227c:	bl	0 <grub_malloc>
    2280:	mov	x21, x0
    2284:	cbz	x0, 22d8 <grub_udf_dir+0x160>
    2288:	ldr	x2, [x24]
    228c:	mov	x1, x24
    2290:	ldr	w2, [x2, #3032]
    2294:	add	w2, w2, #0x9
    2298:	lsl	w2, w23, w2
    229c:	sxtw	x2, w2
    22a0:	add	x2, x2, #0x10
    22a4:	bl	0 <grub_memmove>
    22a8:	adrp	x0, 0 <read_string>
    22ac:	mov	x2, x21
    22b0:	add	x3, sp, #0x50
    22b4:	mov	w1, #0x2                   	// #2
    22b8:	ldr	x0, [x0]
    22bc:	bl	2b8 <grub_udf_dir_iter>
    22c0:	cbnz	w0, 22d8 <grub_udf_dir+0x160>
    22c4:	adrp	x1, 0 <read_string>
    22c8:	add	x2, sp, #0x50
    22cc:	mov	x0, x24
    22d0:	ldr	x1, [x1]
    22d4:	bl	1d70 <grub_udf_iterate_dir.part.0>
    22d8:	ldr	x0, [sp, #72]
    22dc:	cmp	x0, x20
    22e0:	b.eq	221c <grub_udf_dir+0xa4>  // b.none
    22e4:	bl	0 <grub_free>
    22e8:	ldp	x23, x24, [sp, #48]
    22ec:	b	222c <grub_udf_dir+0xb4>
	...

0000000000002320 <grub_mod_init>:
    2320:	stp	x29, x30, [sp, #-32]!
    2324:	adrp	x2, 0 <read_string>
    2328:	adrp	x1, 0 <read_string>
    232c:	mov	x29, sp
    2330:	str	x19, [sp, #16]
    2334:	mov	x19, x0
    2338:	ldr	x0, [x2]
    233c:	ldr	x1, [x1]
    2340:	add	x1, x1, #0x10
    2344:	bl	0 <grub_list_push>
    2348:	adrp	x0, 0 <read_string>
    234c:	ldr	x0, [x0]
    2350:	str	x19, [x0]
    2354:	ldr	x19, [sp, #16]
    2358:	ldp	x29, x30, [sp], #32
    235c:	ret
	...

0000000000002378 <grub_mod_fini>:
    2378:	adrp	x0, 0 <read_string>
    237c:	ldr	x0, [x0]
    2380:	add	x0, x0, #0x10
    2384:	b	0 <grub_list_remove>
	...
