
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-backlight_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000211cd0 <_start>:
  211cd0:	mov	x29, #0x0                   	// #0
  211cd4:	mov	x30, #0x0                   	// #0
  211cd8:	mov	x5, x0
  211cdc:	ldr	x1, [sp]
  211ce0:	add	x2, sp, #0x8
  211ce4:	mov	x6, sp
  211ce8:	movz	x0, #0x0, lsl #48
  211cec:	movk	x0, #0x0, lsl #32
  211cf0:	movk	x0, #0x21, lsl #16
  211cf4:	movk	x0, #0x1e20
  211cf8:	movz	x3, #0x0, lsl #48
  211cfc:	movk	x3, #0x0, lsl #32
  211d00:	movk	x3, #0x21, lsl #16
  211d04:	movk	x3, #0x34a0
  211d08:	movz	x4, #0x0, lsl #48
  211d0c:	movk	x4, #0x0, lsl #32
  211d10:	movk	x4, #0x21, lsl #16
  211d14:	movk	x4, #0x3520
  211d18:	bl	213570 <__libc_start_main@plt>
  211d1c:	bl	213580 <abort@plt>

0000000000211d20 <call_weak_fn>:
  211d20:	adrp	x0, 223000 <safe_atollu@plt+0xf790>
  211d24:	ldr	x0, [x0, #2656]
  211d28:	cbz	x0, 211d30 <call_weak_fn+0x10>
  211d2c:	b	213590 <__gmon_start__@plt>
  211d30:	ret

0000000000211d34 <deregister_tm_clones>:
  211d34:	adrp	x0, 233000 <_DYNAMIC+0xf770>
  211d38:	add	x0, x0, #0xc18
  211d3c:	adrp	x1, 233000 <_DYNAMIC+0xf770>
  211d40:	add	x1, x1, #0xc18
  211d44:	cmp	x0, x1
  211d48:	b.eq	211d7c <deregister_tm_clones+0x48>  // b.none
  211d4c:	stp	x29, x30, [sp, #-32]!
  211d50:	mov	x29, sp
  211d54:	adrp	x0, 201000 <__FRAME_END__-0xbd8>
  211d58:	ldr	x0, [x0, #1040]
  211d5c:	str	x0, [sp, #24]
  211d60:	mov	x1, x0
  211d64:	cbz	x1, 211d74 <deregister_tm_clones+0x40>
  211d68:	adrp	x0, 233000 <_DYNAMIC+0xf770>
  211d6c:	add	x0, x0, #0xc18
  211d70:	blr	x1
  211d74:	ldp	x29, x30, [sp], #32
  211d78:	ret
  211d7c:	ret

0000000000211d80 <register_tm_clones>:
  211d80:	adrp	x0, 233000 <_DYNAMIC+0xf770>
  211d84:	add	x0, x0, #0xc18
  211d88:	adrp	x1, 233000 <_DYNAMIC+0xf770>
  211d8c:	add	x1, x1, #0xc18
  211d90:	sub	x0, x0, x1
  211d94:	lsr	x1, x0, #63
  211d98:	add	x0, x1, x0, asr #3
  211d9c:	cmp	xzr, x0, asr #1
  211da0:	b.eq	211dd8 <register_tm_clones+0x58>  // b.none
  211da4:	stp	x29, x30, [sp, #-32]!
  211da8:	mov	x29, sp
  211dac:	asr	x1, x0, #1
  211db0:	adrp	x0, 201000 <__FRAME_END__-0xbd8>
  211db4:	ldr	x0, [x0, #1048]
  211db8:	str	x0, [sp, #24]
  211dbc:	mov	x2, x0
  211dc0:	cbz	x2, 211dd0 <register_tm_clones+0x50>
  211dc4:	adrp	x0, 233000 <_DYNAMIC+0xf770>
  211dc8:	add	x0, x0, #0xc18
  211dcc:	blr	x2
  211dd0:	ldp	x29, x30, [sp], #32
  211dd4:	ret
  211dd8:	ret

0000000000211ddc <__do_global_dtors_aux>:
  211ddc:	adrp	x0, 233000 <_DYNAMIC+0xf770>
  211de0:	ldrb	w0, [x0, #3096]
  211de4:	cbnz	w0, 211e08 <__do_global_dtors_aux+0x2c>
  211de8:	stp	x29, x30, [sp, #-16]!
  211dec:	mov	x29, sp
  211df0:	bl	211d34 <deregister_tm_clones>
  211df4:	adrp	x0, 233000 <_DYNAMIC+0xf770>
  211df8:	mov	w1, #0x1                   	// #1
  211dfc:	strb	w1, [x0, #3096]
  211e00:	ldp	x29, x30, [sp], #16
  211e04:	ret
  211e08:	ret

0000000000211e0c <frame_dummy>:
  211e0c:	stp	x29, x30, [sp, #-16]!
  211e10:	mov	x29, sp
  211e14:	bl	211d80 <register_tm_clones>
  211e18:	ldp	x29, x30, [sp], #16
  211e1c:	ret

0000000000211e20 <main>:
  211e20:	stp	x29, x30, [sp, #-32]!
  211e24:	stp	x20, x19, [sp, #16]
  211e28:	mov	x29, sp
  211e2c:	mov	x19, x1
  211e30:	mov	w20, w0
  211e34:	bl	211e6c <save_argc_argv>
  211e38:	mov	w0, w20
  211e3c:	mov	x1, x19
  211e40:	bl	211e80 <run>
  211e44:	mov	w19, w0
  211e48:	bl	2135a0 <ask_password_agent_close@plt>
  211e4c:	bl	2135b0 <polkit_agent_close@plt>
  211e50:	bl	2135c0 <pager_close@plt>
  211e54:	bl	2135d0 <mac_selinux_finish@plt>
  211e58:	bl	212730 <static_destruct>
  211e5c:	lsr	w0, w19, #31
  211e60:	ldp	x20, x19, [sp, #16]
  211e64:	ldp	x29, x30, [sp], #32
  211e68:	ret

0000000000211e6c <save_argc_argv>:
  211e6c:	adrp	x8, 233000 <_DYNAMIC+0xf770>
  211e70:	adrp	x9, 233000 <_DYNAMIC+0xf770>
  211e74:	str	w0, [x8, #3104]
  211e78:	str	x1, [x9, #3112]
  211e7c:	ret

0000000000211e80 <run>:
  211e80:	stp	x29, x30, [sp, #-48]!
  211e84:	stp	x22, x21, [sp, #16]
  211e88:	stp	x20, x19, [sp, #32]
  211e8c:	mov	x29, sp
  211e90:	sub	sp, sp, #0x90
  211e94:	cmp	w0, #0x3
  211e98:	stp	xzr, xzr, [x29, #-16]
  211e9c:	stp	xzr, xzr, [x29, #-32]
  211ea0:	b.ne	21204c <run+0x1cc>  // b.any
  211ea4:	mov	x19, x1
  211ea8:	bl	2135e0 <log_setup_service@plt>
  211eac:	mov	w0, #0x12                  	// #18
  211eb0:	bl	2135f0 <umask@plt>
  211eb4:	adrp	x0, 201000 <__FRAME_END__-0xbd8>
  211eb8:	add	x0, x0, #0x873
  211ebc:	mov	w1, #0x1ed                 	// #493
  211ec0:	bl	213600 <mkdir_p@plt>
  211ec4:	tbnz	w0, #31, 2120c0 <run+0x240>
  211ec8:	ldr	x22, [x19, #16]
  211ecc:	mov	w1, #0x3a                  	// #58
  211ed0:	mov	x0, x22
  211ed4:	bl	213610 <strchr@plt>
  211ed8:	cbz	x0, 212104 <run+0x284>
  211edc:	mov	x21, x0
  211ee0:	sub	x1, x0, x22
  211ee4:	mov	x0, x22
  211ee8:	bl	213620 <strnlen@plt>
  211eec:	add	x8, x0, #0x10
  211ef0:	and	x8, x8, #0xfffffffffffffff0
  211ef4:	mov	x9, sp
  211ef8:	sub	x20, x9, x8
  211efc:	mov	x2, x0
  211f00:	mov	sp, x20
  211f04:	strb	wzr, [x20, x0]
  211f08:	mov	x0, x20
  211f0c:	mov	x1, x22
  211f10:	bl	213630 <memcpy@plt>
  211f14:	adrp	x8, 201000 <__FRAME_END__-0xbd8>
  211f18:	add	x8, x8, #0xb50
  211f1c:	ldr	q0, [x8]
  211f20:	ldr	x8, [x8, #16]
  211f24:	sub	x0, x29, #0x50
  211f28:	mov	x1, x20
  211f2c:	add	x21, x21, #0x1
  211f30:	stur	q0, [x29, #-80]
  211f34:	stur	x8, [x29, #-64]
  211f38:	bl	213640 <strv_find@plt>
  211f3c:	cbz	x0, 212144 <run+0x2c4>
  211f40:	sub	x0, x29, #0x8
  211f44:	mov	x1, x20
  211f48:	mov	x2, x21
  211f4c:	bl	213650 <sd_device_new_from_subsystem_sysname@plt>
  211f50:	tbnz	w0, #31, 212184 <run+0x304>
  211f54:	ldur	x0, [x29, #-8]
  211f58:	sub	x1, x29, #0x2c
  211f5c:	bl	2127c4 <get_max_brightness>
  211f60:	tbnz	w0, #31, 212544 <run+0x6c4>
  211f64:	mov	x0, x20
  211f68:	bl	213660 <cescape@plt>
  211f6c:	stur	x0, [x29, #-16]
  211f70:	cbz	x0, 2121e0 <run+0x360>
  211f74:	mov	x0, x21
  211f78:	bl	213660 <cescape@plt>
  211f7c:	stur	x0, [x29, #-24]
  211f80:	cbz	x0, 2121f8 <run+0x378>
  211f84:	ldur	x0, [x29, #-8]
  211f88:	adrp	x1, 201000 <__FRAME_END__-0xbd8>
  211f8c:	add	x1, x1, #0xb38
  211f90:	sub	x2, x29, #0x28
  211f94:	bl	213670 <sd_device_get_property_value@plt>
  211f98:	tbnz	w0, #31, 212210 <run+0x390>
  211f9c:	ldur	x0, [x29, #-40]
  211fa0:	bl	213660 <cescape@plt>
  211fa4:	stur	x0, [x29, #-32]
  211fa8:	cbz	x0, 212388 <run+0x508>
  211fac:	ldp	x9, x12, [x29, #-32]
  211fb0:	ldur	x11, [x29, #-16]
  211fb4:	adrp	x8, 201000 <__FRAME_END__-0xbd8>
  211fb8:	adrp	x10, 201000 <__FRAME_END__-0xbd8>
  211fbc:	mov	x21, xzr
  211fc0:	mov	x20, xzr
  211fc4:	add	x8, x8, #0x6f2
  211fc8:	add	x10, x10, #0xb40
  211fcc:	sub	x22, x29, #0x80
  211fd0:	stp	x8, x9, [x29, #-128]
  211fd4:	stp	x10, x11, [x29, #-112]
  211fd8:	stp	x10, x12, [x29, #-96]
  211fdc:	ldr	x0, [x22, x21]
  211fe0:	cbz	x0, 211ff8 <run+0x178>
  211fe4:	bl	213680 <strlen@plt>
  211fe8:	add	x21, x21, #0x8
  211fec:	cmp	x21, #0x30
  211ff0:	add	x20, x0, x20
  211ff4:	b.ne	211fdc <run+0x15c>  // b.any
  211ff8:	add	x20, x20, #0x1
  211ffc:	mov	x0, x20
  212000:	bl	2129c4 <size_multiply_overflow>
  212004:	tbnz	w0, #0, 2126d0 <run+0x850>
  212008:	cmp	x20, #0x400, lsl #12
  21200c:	b.hi	2126dc <run+0x85c>  // b.pmore
  212010:	add	x9, x20, #0xf
  212014:	mov	x8, sp
  212018:	and	x9, x9, #0xfffffffffffffff0
  21201c:	sub	x20, x8, x9
  212020:	mov	sp, x20
  212024:	mov	x21, xzr
  212028:	sub	x22, x29, #0x80
  21202c:	mov	x0, x20
  212030:	ldr	x1, [x22, x21]
  212034:	cbz	x1, 2122a4 <run+0x424>
  212038:	bl	213690 <stpcpy@plt>
  21203c:	add	x21, x21, #0x8
  212040:	cmp	x21, #0x30
  212044:	b.ne	212030 <run+0x1b0>  // b.any
  212048:	b	2122a4 <run+0x424>
  21204c:	mov	w0, wzr
  212050:	bl	2136a0 <log_get_max_level_realm@plt>
  212054:	cmp	w0, #0x3
  212058:	b.lt	212084 <run+0x204>  // b.tstop
  21205c:	adrp	x2, 201000 <__FRAME_END__-0xbd8>
  212060:	adrp	x4, 201000 <__FRAME_END__-0xbd8>
  212064:	adrp	x5, 201000 <__FRAME_END__-0xbd8>
  212068:	add	x2, x2, #0x7fd
  21206c:	add	x4, x4, #0xa21
  212070:	add	x5, x5, #0xaa0
  212074:	mov	w0, #0x3                   	// #3
  212078:	mov	w3, #0x136                 	// #310
  21207c:	mov	w1, wzr
  212080:	bl	2136b0 <log_internal_realm@plt>
  212084:	mov	w19, #0xffffffea            	// #-22
  212088:	sub	x0, x29, #0x20
  21208c:	bl	2127ac <freep>
  212090:	sub	x0, x29, #0x18
  212094:	bl	2127ac <freep>
  212098:	sub	x0, x29, #0x10
  21209c:	bl	2127ac <freep>
  2120a0:	sub	x0, x29, #0x8
  2120a4:	bl	212790 <sd_device_unrefp>
  2120a8:	mov	w0, w19
  2120ac:	mov	sp, x29
  2120b0:	ldp	x20, x19, [sp, #32]
  2120b4:	ldp	x22, x21, [sp, #16]
  2120b8:	ldp	x29, x30, [sp], #48
  2120bc:	ret
  2120c0:	mov	w20, w0
  2120c4:	mov	w0, wzr
  2120c8:	bl	2136a0 <log_get_max_level_realm@plt>
  2120cc:	cmp	w0, #0x3
  2120d0:	b.lt	212134 <run+0x2b4>  // b.tstop
  2120d4:	adrp	x2, 201000 <__FRAME_END__-0xbd8>
  2120d8:	adrp	x4, 201000 <__FRAME_END__-0xbd8>
  2120dc:	adrp	x5, 201000 <__FRAME_END__-0xbd8>
  2120e0:	add	x2, x2, #0x7fd
  2120e4:	add	x4, x4, #0xa21
  2120e8:	add	x5, x5, #0x712
  2120ec:	mov	w0, #0x3                   	// #3
  2120f0:	mov	w3, #0x140                 	// #320
  2120f4:	mov	w1, w20
  2120f8:	bl	2136b0 <log_internal_realm@plt>
  2120fc:	mov	w19, w0
  212100:	b	212088 <run+0x208>
  212104:	bl	2136a0 <log_get_max_level_realm@plt>
  212108:	cmp	w0, #0x3
  21210c:	b.lt	212084 <run+0x204>  // b.tstop
  212110:	adrp	x2, 201000 <__FRAME_END__-0xbd8>
  212114:	adrp	x4, 201000 <__FRAME_END__-0xbd8>
  212118:	adrp	x5, 201000 <__FRAME_END__-0xbd8>
  21211c:	add	x2, x2, #0x7fd
  212120:	add	x4, x4, #0xa21
  212124:	add	x5, x5, #0x48d
  212128:	mov	w0, #0x3                   	// #3
  21212c:	mov	w3, #0x144                 	// #324
  212130:	b	21207c <run+0x1fc>
  212134:	mov	w8, wzr
  212138:	neg	w9, w20
  21213c:	sub	w19, w8, w9, uxtb
  212140:	b	212088 <run+0x208>
  212144:	bl	2136a0 <log_get_max_level_realm@plt>
  212148:	cmp	w0, #0x3
  21214c:	b.lt	212084 <run+0x204>  // b.tstop
  212150:	adrp	x2, 201000 <__FRAME_END__-0xbd8>
  212154:	adrp	x4, 201000 <__FRAME_END__-0xbd8>
  212158:	adrp	x5, 201000 <__FRAME_END__-0xbd8>
  21215c:	add	x2, x2, #0x7fd
  212160:	add	x4, x4, #0xa21
  212164:	add	x5, x5, #0x514
  212168:	mov	w0, #0x3                   	// #3
  21216c:	mov	w3, #0x14d                 	// #333
  212170:	mov	w1, wzr
  212174:	mov	x6, x20
  212178:	mov	x7, x21
  21217c:	bl	2136b0 <log_internal_realm@plt>
  212180:	b	212084 <run+0x204>
  212184:	mov	w22, w0
  212188:	mov	w0, wzr
  21218c:	bl	2136a0 <log_get_max_level_realm@plt>
  212190:	cmp	w0, #0x3
  212194:	b.lt	2121d0 <run+0x350>  // b.tstop
  212198:	adrp	x2, 201000 <__FRAME_END__-0xbd8>
  21219c:	adrp	x4, 201000 <__FRAME_END__-0xbd8>
  2121a0:	adrp	x5, 201000 <__FRAME_END__-0xbd8>
  2121a4:	add	x2, x2, #0x7fd
  2121a8:	add	x4, x4, #0xa21
  2121ac:	add	x5, x5, #0x6c0
  2121b0:	mov	w0, #0x3                   	// #3
  2121b4:	mov	w3, #0x153                 	// #339
  2121b8:	mov	w1, w22
  2121bc:	mov	x6, x20
  2121c0:	mov	x7, x21
  2121c4:	bl	2136b0 <log_internal_realm@plt>
  2121c8:	mov	w19, w0
  2121cc:	b	212088 <run+0x208>
  2121d0:	mov	w8, wzr
  2121d4:	neg	w9, w22
  2121d8:	sub	w19, w8, w9, uxtb
  2121dc:	b	212088 <run+0x208>
  2121e0:	adrp	x1, 201000 <__FRAME_END__-0xbd8>
  2121e4:	adrp	x3, 201000 <__FRAME_END__-0xbd8>
  2121e8:	add	x1, x1, #0x7fd
  2121ec:	add	x3, x3, #0xa21
  2121f0:	mov	w2, #0x15d                 	// #349
  2121f4:	b	21239c <run+0x51c>
  2121f8:	adrp	x1, 201000 <__FRAME_END__-0xbd8>
  2121fc:	adrp	x3, 201000 <__FRAME_END__-0xbd8>
  212200:	add	x1, x1, #0x7fd
  212204:	add	x3, x3, #0xa21
  212208:	mov	w2, #0x161                 	// #353
  21220c:	b	21239c <run+0x51c>
  212210:	ldp	x11, x9, [x29, #-24]
  212214:	adrp	x8, 201000 <__FRAME_END__-0xbd8>
  212218:	adrp	x10, 201000 <__FRAME_END__-0xbd8>
  21221c:	mov	x21, xzr
  212220:	mov	x20, xzr
  212224:	add	x8, x8, #0x6f2
  212228:	add	x10, x10, #0xb40
  21222c:	sub	x22, x29, #0x80
  212230:	stp	x8, x9, [x29, #-128]
  212234:	stp	x10, x11, [x29, #-112]
  212238:	ldr	x0, [x22, x21]
  21223c:	cbz	x0, 212254 <run+0x3d4>
  212240:	bl	213680 <strlen@plt>
  212244:	add	x21, x21, #0x8
  212248:	cmp	x21, #0x20
  21224c:	add	x20, x0, x20
  212250:	b.ne	212238 <run+0x3b8>  // b.any
  212254:	add	x20, x20, #0x1
  212258:	mov	x0, x20
  21225c:	bl	2129c4 <size_multiply_overflow>
  212260:	tbnz	w0, #0, 212700 <run+0x880>
  212264:	cmp	x20, #0x400, lsl #12
  212268:	b.hi	21270c <run+0x88c>  // b.pmore
  21226c:	add	x9, x20, #0xf
  212270:	mov	x8, sp
  212274:	and	x9, x9, #0xfffffffffffffff0
  212278:	sub	x20, x8, x9
  21227c:	mov	sp, x20
  212280:	mov	x21, xzr
  212284:	sub	x22, x29, #0x80
  212288:	mov	x0, x20
  21228c:	ldr	x1, [x22, x21]
  212290:	cbz	x1, 2122a4 <run+0x424>
  212294:	bl	213690 <stpcpy@plt>
  212298:	add	x21, x21, #0x8
  21229c:	cmp	x21, #0x20
  2122a0:	b.ne	21228c <run+0x40c>  // b.any
  2122a4:	strb	wzr, [x0]
  2122a8:	ldr	x19, [x19, #8]
  2122ac:	adrp	x1, 201000 <__FRAME_END__-0xbd8>
  2122b0:	add	x1, x1, #0xac5
  2122b4:	mov	x0, x19
  2122b8:	bl	2136c0 <strcmp@plt>
  2122bc:	cbz	w0, 212314 <run+0x494>
  2122c0:	adrp	x1, 201000 <__FRAME_END__-0xbd8>
  2122c4:	add	x1, x1, #0x911
  2122c8:	mov	x0, x19
  2122cc:	bl	2136c0 <strcmp@plt>
  2122d0:	cbz	w0, 2123a8 <run+0x528>
  2122d4:	mov	w0, wzr
  2122d8:	bl	2136a0 <log_get_max_level_realm@plt>
  2122dc:	cmp	w0, #0x3
  2122e0:	b.lt	212084 <run+0x204>  // b.tstop
  2122e4:	adrp	x2, 201000 <__FRAME_END__-0xbd8>
  2122e8:	adrp	x4, 201000 <__FRAME_END__-0xbd8>
  2122ec:	adrp	x5, 201000 <__FRAME_END__-0xbd8>
  2122f0:	add	x2, x2, #0x7fd
  2122f4:	add	x4, x4, #0xa21
  2122f8:	add	x5, x5, #0x97e
  2122fc:	mov	w0, #0x3                   	// #3
  212300:	mov	w3, #0x1ac                 	// #428
  212304:	mov	w1, wzr
  212308:	mov	x6, x19
  21230c:	bl	2136b0 <log_internal_realm@plt>
  212310:	b	212084 <run+0x204>
  212314:	stur	xzr, [x29, #-128]
  212318:	bl	2136d0 <shall_restore_state@plt>
  21231c:	cbz	w0, 2123e4 <run+0x564>
  212320:	ldur	x0, [x29, #-8]
  212324:	bl	2129cc <validate_device>
  212328:	cbz	w0, 2123e4 <run+0x564>
  21232c:	ldur	x0, [x29, #-8]
  212330:	bl	212cb4 <shall_clamp>
  212334:	mov	w21, w0
  212338:	sub	x1, x29, #0x80
  21233c:	mov	x0, x20
  212340:	bl	2136e0 <read_one_line_file@plt>
  212344:	cbz	w0, 212354 <run+0x4d4>
  212348:	mov	w22, w0
  21234c:	cmn	w0, #0x2
  212350:	b.ne	212484 <run+0x604>  // b.any
  212354:	tbz	w21, #0, 21247c <run+0x5fc>
  212358:	ldur	x0, [x29, #-8]
  21235c:	adrp	x1, 201000 <__FRAME_END__-0xbd8>
  212360:	add	x1, x1, #0xb42
  212364:	sub	x2, x29, #0x88
  212368:	bl	2136f0 <sd_device_get_sysattr_value@plt>
  21236c:	tbnz	w0, #31, 21254c <run+0x6cc>
  212370:	ldur	x0, [x29, #-136]
  212374:	bl	213700 <strdup@plt>
  212378:	stur	x0, [x29, #-128]
  21237c:	cbz	x0, 2125b8 <run+0x738>
  212380:	mov	w20, wzr
  212384:	b	2125d8 <run+0x758>
  212388:	adrp	x1, 201000 <__FRAME_END__-0xbd8>
  21238c:	adrp	x3, 201000 <__FRAME_END__-0xbd8>
  212390:	add	x1, x1, #0x7fd
  212394:	add	x3, x3, #0xa21
  212398:	mov	w2, #0x166                 	// #358
  21239c:	bl	213710 <log_oom_internal@plt>
  2123a0:	mov	w19, w0
  2123a4:	b	212088 <run+0x208>
  2123a8:	ldur	x0, [x29, #-8]
  2123ac:	bl	2129cc <validate_device>
  2123b0:	cbz	w0, 2123fc <run+0x57c>
  2123b4:	ldur	x0, [x29, #-8]
  2123b8:	adrp	x1, 201000 <__FRAME_END__-0xbd8>
  2123bc:	add	x1, x1, #0xb42
  2123c0:	sub	x2, x29, #0x80
  2123c4:	bl	2136f0 <sd_device_get_sysattr_value@plt>
  2123c8:	tbnz	w0, #31, 212410 <run+0x590>
  2123cc:	ldur	x1, [x29, #-128]
  2123d0:	mov	x0, x20
  2123d4:	bl	2130b4 <write_string_file>
  2123d8:	tbnz	w0, #31, 2124c8 <run+0x648>
  2123dc:	mov	w8, #0x1                   	// #1
  2123e0:	b	212540 <run+0x6c0>
  2123e4:	mov	w19, wzr
  2123e8:	mov	w20, #0x1                   	// #1
  2123ec:	sub	x0, x29, #0x80
  2123f0:	bl	2127ac <freep>
  2123f4:	cbnz	w20, 212088 <run+0x208>
  2123f8:	b	212544 <run+0x6c4>
  2123fc:	mov	x0, x20
  212400:	bl	213720 <unlink@plt>
  212404:	mov	w8, wzr
  212408:	mov	w19, wzr
  21240c:	b	212540 <run+0x6c0>
  212410:	ldur	x20, [x29, #-8]
  212414:	mov	w19, w0
  212418:	stur	xzr, [x29, #-136]
  21241c:	cbz	x20, 212430 <run+0x5b0>
  212420:	mov	w0, wzr
  212424:	bl	2136a0 <log_get_max_level_realm@plt>
  212428:	cmp	w0, #0x3
  21242c:	b.ge	212690 <run+0x810>  // b.tcont
  212430:	ldur	x6, [x29, #-136]
  212434:	adrp	x8, 201000 <__FRAME_END__-0xbd8>
  212438:	add	x8, x8, #0x860
  21243c:	adrp	x2, 201000 <__FRAME_END__-0xbd8>
  212440:	cmp	x6, #0x0
  212444:	csel	x5, xzr, x8, eq  // eq = none
  212448:	adrp	x8, 201000 <__FRAME_END__-0xbd8>
  21244c:	add	x8, x8, #0x788
  212450:	adrp	x4, 201000 <__FRAME_END__-0xbd8>
  212454:	add	x2, x2, #0x7fd
  212458:	add	x4, x4, #0xa21
  21245c:	stp	xzr, x8, [sp, #-16]!
  212460:	mov	w0, #0x3                   	// #3
  212464:	mov	w3, #0x1a5                 	// #421
  212468:	mov	w1, w19
  21246c:	mov	x7, xzr
  212470:	bl	213730 <log_object_internal@plt>
  212474:	add	sp, sp, #0x10
  212478:	b	212538 <run+0x6b8>
  21247c:	mov	w19, wzr
  212480:	b	2125d4 <run+0x754>
  212484:	tbz	w22, #31, 2125dc <run+0x75c>
  212488:	mov	w0, wzr
  21248c:	bl	2136a0 <log_get_max_level_realm@plt>
  212490:	cmp	w0, #0x3
  212494:	b.lt	212680 <run+0x800>  // b.tstop
  212498:	adrp	x2, 201000 <__FRAME_END__-0xbd8>
  21249c:	adrp	x4, 201000 <__FRAME_END__-0xbd8>
  2124a0:	adrp	x5, 201000 <__FRAME_END__-0xbd8>
  2124a4:	add	x2, x2, #0x7fd
  2124a8:	add	x4, x4, #0xa21
  2124ac:	add	x5, x5, #0x546
  2124b0:	mov	w0, #0x3                   	// #3
  2124b4:	mov	w3, #0x192                 	// #402
  2124b8:	mov	w1, w22
  2124bc:	mov	x6, x20
  2124c0:	bl	2136b0 <log_internal_realm@plt>
  2124c4:	b	212678 <run+0x7f8>
  2124c8:	ldur	x21, [x29, #-8]
  2124cc:	mov	w19, w0
  2124d0:	stur	xzr, [x29, #-136]
  2124d4:	cbz	x21, 2124e8 <run+0x668>
  2124d8:	mov	w0, wzr
  2124dc:	bl	2136a0 <log_get_max_level_realm@plt>
  2124e0:	cmp	w0, #0x3
  2124e4:	b.ge	2126a0 <run+0x820>  // b.tcont
  2124e8:	ldur	x6, [x29, #-136]
  2124ec:	adrp	x8, 201000 <__FRAME_END__-0xbd8>
  2124f0:	add	x8, x8, #0x860
  2124f4:	cmp	x6, #0x0
  2124f8:	csel	x5, xzr, x8, eq  // eq = none
  2124fc:	sub	sp, sp, #0x20
  212500:	adrp	x8, 201000 <__FRAME_END__-0xbd8>
  212504:	adrp	x2, 201000 <__FRAME_END__-0xbd8>
  212508:	adrp	x4, 201000 <__FRAME_END__-0xbd8>
  21250c:	add	x8, x8, #0x7b9
  212510:	add	x2, x2, #0x7fd
  212514:	add	x4, x4, #0xa21
  212518:	mov	w0, #0x3                   	// #3
  21251c:	mov	w3, #0x1a9                 	// #425
  212520:	mov	w1, w19
  212524:	mov	x7, xzr
  212528:	stp	x8, x20, [sp, #8]
  21252c:	str	xzr, [sp]
  212530:	bl	213730 <log_object_internal@plt>
  212534:	add	sp, sp, #0x20
  212538:	mov	w19, w0
  21253c:	mov	w8, wzr
  212540:	tbz	w8, #0, 212088 <run+0x208>
  212544:	mov	w19, wzr
  212548:	b	212088 <run+0x208>
  21254c:	ldur	x20, [x29, #-8]
  212550:	mov	w19, w0
  212554:	stur	xzr, [x29, #-144]
  212558:	cbz	x20, 21256c <run+0x6ec>
  21255c:	mov	w0, wzr
  212560:	bl	2136a0 <log_get_max_level_realm@plt>
  212564:	cmp	w0, #0x4
  212568:	b.ge	2126c0 <run+0x840>  // b.tcont
  21256c:	ldur	x6, [x29, #-144]
  212570:	adrp	x8, 201000 <__FRAME_END__-0xbd8>
  212574:	add	x8, x8, #0x860
  212578:	adrp	x2, 201000 <__FRAME_END__-0xbd8>
  21257c:	cmp	x6, #0x0
  212580:	csel	x5, xzr, x8, eq  // eq = none
  212584:	adrp	x8, 201000 <__FRAME_END__-0xbd8>
  212588:	add	x8, x8, #0x950
  21258c:	adrp	x4, 201000 <__FRAME_END__-0xbd8>
  212590:	add	x2, x2, #0x7fd
  212594:	add	x4, x4, #0xa21
  212598:	stp	xzr, x8, [sp, #-16]!
  21259c:	mov	w0, #0x4                   	// #4
  2125a0:	mov	w3, #0x18c                 	// #396
  2125a4:	mov	w1, w19
  2125a8:	mov	x7, xzr
  2125ac:	bl	213730 <log_object_internal@plt>
  2125b0:	add	sp, sp, #0x10
  2125b4:	b	2125d0 <run+0x750>
  2125b8:	adrp	x1, 201000 <__FRAME_END__-0xbd8>
  2125bc:	adrp	x3, 201000 <__FRAME_END__-0xbd8>
  2125c0:	add	x1, x1, #0x7fd
  2125c4:	add	x3, x3, #0xa21
  2125c8:	mov	w2, #0x190                 	// #400
  2125cc:	bl	213710 <log_oom_internal@plt>
  2125d0:	mov	w19, w0
  2125d4:	mov	w20, #0x1                   	// #1
  2125d8:	cbnz	w20, 2123ec <run+0x56c>
  2125dc:	tbz	w21, #0, 2125f0 <run+0x770>
  2125e0:	ldur	x0, [x29, #-8]
  2125e4:	ldur	w2, [x29, #-44]
  2125e8:	sub	x1, x29, #0x80
  2125ec:	bl	212e00 <clamp_brightness>
  2125f0:	ldur	x0, [x29, #-8]
  2125f4:	ldur	x2, [x29, #-128]
  2125f8:	adrp	x1, 201000 <__FRAME_END__-0xbd8>
  2125fc:	add	x1, x1, #0xb42
  212600:	bl	213740 <sd_device_set_sysattr_value@plt>
  212604:	tbnz	w0, #31, 212610 <run+0x790>
  212608:	mov	w20, wzr
  21260c:	b	2123ec <run+0x56c>
  212610:	ldur	x19, [x29, #-8]
  212614:	mov	w20, w0
  212618:	stur	xzr, [x29, #-136]
  21261c:	cbz	x19, 212630 <run+0x7b0>
  212620:	mov	w0, wzr
  212624:	bl	2136a0 <log_get_max_level_realm@plt>
  212628:	cmp	w0, #0x3
  21262c:	b.ge	2126b0 <run+0x830>  // b.tcont
  212630:	ldur	x6, [x29, #-136]
  212634:	adrp	x8, 201000 <__FRAME_END__-0xbd8>
  212638:	add	x8, x8, #0x860
  21263c:	adrp	x2, 201000 <__FRAME_END__-0xbd8>
  212640:	cmp	x6, #0x0
  212644:	csel	x5, xzr, x8, eq  // eq = none
  212648:	adrp	x8, 201000 <__FRAME_END__-0xbd8>
  21264c:	add	x8, x8, #0x55c
  212650:	adrp	x4, 201000 <__FRAME_END__-0xbd8>
  212654:	add	x2, x2, #0x7fd
  212658:	add	x4, x4, #0xa21
  21265c:	stp	xzr, x8, [sp, #-16]!
  212660:	mov	w0, #0x3                   	// #3
  212664:	mov	w3, #0x199                 	// #409
  212668:	mov	w1, w20
  21266c:	mov	x7, xzr
  212670:	bl	213730 <log_object_internal@plt>
  212674:	add	sp, sp, #0x10
  212678:	mov	w19, w0
  21267c:	b	2123e8 <run+0x568>
  212680:	mov	w8, wzr
  212684:	neg	w9, w22
  212688:	sub	w19, w8, w9, uxtb
  21268c:	b	2123e8 <run+0x568>
  212690:	sub	x1, x29, #0x88
  212694:	mov	x0, x20
  212698:	bl	213750 <sd_device_get_sysname@plt>
  21269c:	b	212430 <run+0x5b0>
  2126a0:	sub	x1, x29, #0x88
  2126a4:	mov	x0, x21
  2126a8:	bl	213750 <sd_device_get_sysname@plt>
  2126ac:	b	2124e8 <run+0x668>
  2126b0:	sub	x1, x29, #0x88
  2126b4:	mov	x0, x19
  2126b8:	bl	213750 <sd_device_get_sysname@plt>
  2126bc:	b	212630 <run+0x7b0>
  2126c0:	sub	x1, x29, #0x90
  2126c4:	mov	x0, x20
  2126c8:	bl	213750 <sd_device_get_sysname@plt>
  2126cc:	b	21256c <run+0x6ec>
  2126d0:	adrp	x1, 201000 <__FRAME_END__-0xbd8>
  2126d4:	add	x1, x1, #0x620
  2126d8:	b	2126e4 <run+0x864>
  2126dc:	adrp	x1, 201000 <__FRAME_END__-0xbd8>
  2126e0:	add	x1, x1, #0x46e
  2126e4:	adrp	x2, 201000 <__FRAME_END__-0xbd8>
  2126e8:	adrp	x4, 201000 <__FRAME_END__-0xbd8>
  2126ec:	add	x2, x2, #0x7fd
  2126f0:	add	x4, x4, #0x88e
  2126f4:	mov	w3, #0x168                 	// #360
  2126f8:	mov	w0, wzr
  2126fc:	bl	213760 <log_assert_failed_realm@plt>
  212700:	adrp	x1, 201000 <__FRAME_END__-0xbd8>
  212704:	add	x1, x1, #0x620
  212708:	b	212714 <run+0x894>
  21270c:	adrp	x1, 201000 <__FRAME_END__-0xbd8>
  212710:	add	x1, x1, #0x46e
  212714:	adrp	x2, 201000 <__FRAME_END__-0xbd8>
  212718:	adrp	x4, 201000 <__FRAME_END__-0xbd8>
  21271c:	add	x2, x2, #0x7fd
  212720:	add	x4, x4, #0x88e
  212724:	mov	w3, #0x16a                 	// #362
  212728:	mov	w0, wzr
  21272c:	bl	213760 <log_assert_failed_realm@plt>

0000000000212730 <static_destruct>:
  212730:	stp	x29, x30, [sp, #-32]!
  212734:	stp	x20, x19, [sp, #16]
  212738:	adrp	x8, 223000 <safe_atollu@plt+0xf790>
  21273c:	ldr	x8, [x8, #2664]
  212740:	mov	x29, sp
  212744:	cbz	x8, 212784 <static_destruct+0x54>
  212748:	adrp	x0, 223000 <safe_atollu@plt+0xf790>
  21274c:	ldr	x0, [x0, #2664]
  212750:	bl	213494 <ALIGN_TO>
  212754:	adrp	x20, 223000 <safe_atollu@plt+0xf790>
  212758:	ldr	x20, [x20, #2672]
  21275c:	cmp	x0, x20
  212760:	b.cs	212784 <static_destruct+0x54>  // b.hs, b.nlast
  212764:	mov	x19, x0
  212768:	ldp	x0, x8, [x19]
  21276c:	blr	x8
  212770:	add	x0, x19, #0x10
  212774:	bl	213494 <ALIGN_TO>
  212778:	mov	x19, x0
  21277c:	cmp	x0, x20
  212780:	b.cc	212768 <static_destruct+0x38>  // b.lo, b.ul, b.last
  212784:	ldp	x20, x19, [sp, #16]
  212788:	ldp	x29, x30, [sp], #32
  21278c:	ret

0000000000212790 <sd_device_unrefp>:
  212790:	stp	x29, x30, [sp, #-16]!
  212794:	ldr	x0, [x0]
  212798:	mov	x29, sp
  21279c:	cbz	x0, 2127a4 <sd_device_unrefp+0x14>
  2127a0:	bl	213770 <sd_device_unref@plt>
  2127a4:	ldp	x29, x30, [sp], #16
  2127a8:	ret

00000000002127ac <freep>:
  2127ac:	stp	x29, x30, [sp, #-16]!
  2127b0:	ldr	x0, [x0]
  2127b4:	mov	x29, sp
  2127b8:	bl	213780 <free@plt>
  2127bc:	ldp	x29, x30, [sp], #16
  2127c0:	ret

00000000002127c4 <get_max_brightness>:
  2127c4:	sub	sp, sp, #0x60
  2127c8:	stp	x29, x30, [sp, #48]
  2127cc:	str	x21, [sp, #64]
  2127d0:	stp	x20, x19, [sp, #80]
  2127d4:	add	x29, sp, #0x30
  2127d8:	cbz	x0, 212980 <get_max_brightness+0x1bc>
  2127dc:	mov	x21, x1
  2127e0:	cbz	x1, 2129a0 <get_max_brightness+0x1dc>
  2127e4:	adrp	x1, 201000 <__FRAME_END__-0xbd8>
  2127e8:	add	x1, x1, #0x608
  2127ec:	add	x2, x29, #0x18
  2127f0:	mov	x19, x0
  2127f4:	bl	2136f0 <sd_device_get_sysattr_value@plt>
  2127f8:	tbnz	w0, #31, 212820 <get_max_brightness+0x5c>
  2127fc:	ldr	x0, [x29, #24]
  212800:	sub	x1, x29, #0x4
  212804:	bl	2130d0 <safe_atou>
  212808:	tbnz	w0, #31, 212874 <get_max_brightness+0xb0>
  21280c:	ldur	w8, [x29, #-4]
  212810:	cbz	w8, 2128f0 <get_max_brightness+0x12c>
  212814:	mov	w0, wzr
  212818:	str	w8, [x21]
  21281c:	b	2128dc <get_max_brightness+0x118>
  212820:	mov	w20, w0
  212824:	mov	w0, wzr
  212828:	stur	xzr, [x29, #-16]
  21282c:	bl	2136a0 <log_get_max_level_realm@plt>
  212830:	cmp	w0, #0x4
  212834:	b.ge	212950 <get_max_brightness+0x18c>  // b.tcont
  212838:	ldur	x6, [x29, #-16]
  21283c:	adrp	x8, 201000 <__FRAME_END__-0xbd8>
  212840:	add	x8, x8, #0x860
  212844:	adrp	x2, 201000 <__FRAME_END__-0xbd8>
  212848:	cmp	x6, #0x0
  21284c:	csel	x5, xzr, x8, eq  // eq = none
  212850:	adrp	x8, 201000 <__FRAME_END__-0xbd8>
  212854:	adrp	x4, 201000 <__FRAME_END__-0xbd8>
  212858:	add	x8, x8, #0x597
  21285c:	add	x2, x2, #0x7fd
  212860:	add	x4, x4, #0x9b4
  212864:	mov	w0, #0x4                   	// #4
  212868:	mov	w3, #0xdd                  	// #221
  21286c:	str	x8, [sp, #8]
  212870:	b	2128cc <get_max_brightness+0x108>
  212874:	mov	w20, w0
  212878:	mov	w0, wzr
  21287c:	stur	xzr, [x29, #-16]
  212880:	bl	2136a0 <log_get_max_level_realm@plt>
  212884:	cmp	w0, #0x4
  212888:	b.ge	212960 <get_max_brightness+0x19c>  // b.tcont
  21288c:	ldr	x8, [x29, #24]
  212890:	ldur	x6, [x29, #-16]
  212894:	adrp	x9, 201000 <__FRAME_END__-0xbd8>
  212898:	add	x9, x9, #0x860
  21289c:	str	x8, [sp, #16]
  2128a0:	adrp	x8, 201000 <__FRAME_END__-0xbd8>
  2128a4:	cmp	x6, #0x0
  2128a8:	add	x8, x8, #0x420
  2128ac:	adrp	x2, 201000 <__FRAME_END__-0xbd8>
  2128b0:	adrp	x4, 201000 <__FRAME_END__-0xbd8>
  2128b4:	csel	x5, xzr, x9, eq  // eq = none
  2128b8:	add	x2, x2, #0x7fd
  2128bc:	add	x4, x4, #0x9b4
  2128c0:	str	x8, [sp, #8]
  2128c4:	mov	w0, #0x4                   	// #4
  2128c8:	mov	w3, #0xe1                  	// #225
  2128cc:	mov	w1, w20
  2128d0:	mov	x7, xzr
  2128d4:	str	xzr, [sp]
  2128d8:	bl	213730 <log_object_internal@plt>
  2128dc:	ldp	x20, x19, [sp, #80]
  2128e0:	ldr	x21, [sp, #64]
  2128e4:	ldp	x29, x30, [sp, #48]
  2128e8:	add	sp, sp, #0x60
  2128ec:	ret
  2128f0:	mov	w0, wzr
  2128f4:	stur	xzr, [x29, #-16]
  2128f8:	bl	2136a0 <log_get_max_level_realm@plt>
  2128fc:	cmp	w0, #0x4
  212900:	b.ge	212970 <get_max_brightness+0x1ac>  // b.tcont
  212904:	ldur	x6, [x29, #-16]
  212908:	adrp	x8, 201000 <__FRAME_END__-0xbd8>
  21290c:	add	x8, x8, #0x860
  212910:	adrp	x2, 201000 <__FRAME_END__-0xbd8>
  212914:	cmp	x6, #0x0
  212918:	csel	x5, xzr, x8, eq  // eq = none
  21291c:	adrp	x8, 201000 <__FRAME_END__-0xbd8>
  212920:	adrp	x4, 201000 <__FRAME_END__-0xbd8>
  212924:	add	x8, x8, #0x7d0
  212928:	add	x2, x2, #0x7fd
  21292c:	add	x4, x4, #0x9b4
  212930:	mov	w0, #0x4                   	// #4
  212934:	mov	w3, #0xe4                  	// #228
  212938:	mov	w1, wzr
  21293c:	mov	x7, xzr
  212940:	stp	xzr, x8, [sp]
  212944:	bl	213730 <log_object_internal@plt>
  212948:	mov	w0, #0xffffffea            	// #-22
  21294c:	b	2128dc <get_max_brightness+0x118>
  212950:	sub	x1, x29, #0x10
  212954:	mov	x0, x19
  212958:	bl	213750 <sd_device_get_sysname@plt>
  21295c:	b	212838 <get_max_brightness+0x74>
  212960:	sub	x1, x29, #0x10
  212964:	mov	x0, x19
  212968:	bl	213750 <sd_device_get_sysname@plt>
  21296c:	b	21288c <get_max_brightness+0xc8>
  212970:	sub	x1, x29, #0x10
  212974:	mov	x0, x19
  212978:	bl	213750 <sd_device_get_sysname@plt>
  21297c:	b	212904 <get_max_brightness+0x140>
  212980:	adrp	x1, 201000 <__FRAME_END__-0xbd8>
  212984:	adrp	x2, 201000 <__FRAME_END__-0xbd8>
  212988:	adrp	x4, 201000 <__FRAME_END__-0xbd8>
  21298c:	add	x1, x1, #0x98f
  212990:	add	x2, x2, #0x7fd
  212994:	add	x4, x4, #0xa2a
  212998:	mov	w3, #0xd8                  	// #216
  21299c:	bl	213760 <log_assert_failed_realm@plt>
  2129a0:	adrp	x1, 201000 <__FRAME_END__-0xbd8>
  2129a4:	adrp	x2, 201000 <__FRAME_END__-0xbd8>
  2129a8:	adrp	x4, 201000 <__FRAME_END__-0xbd8>
  2129ac:	add	x1, x1, #0x868
  2129b0:	add	x2, x2, #0x7fd
  2129b4:	add	x4, x4, #0xa2a
  2129b8:	mov	w3, #0xd9                  	// #217
  2129bc:	mov	w0, wzr
  2129c0:	bl	213760 <log_assert_failed_realm@plt>

00000000002129c4 <size_multiply_overflow>:
  2129c4:	mov	w0, wzr
  2129c8:	ret

00000000002129cc <validate_device>:
  2129cc:	sub	sp, sp, #0xc0
  2129d0:	stp	x29, x30, [sp, #96]
  2129d4:	add	x29, sp, #0x60
  2129d8:	stp	x28, x27, [sp, #112]
  2129dc:	stp	x26, x25, [sp, #128]
  2129e0:	stp	x24, x23, [sp, #144]
  2129e4:	stp	x22, x21, [sp, #160]
  2129e8:	stp	x20, x19, [sp, #176]
  2129ec:	stur	xzr, [x29, #-8]
  2129f0:	cbz	x0, 212c94 <validate_device+0x2c8>
  2129f4:	sub	x1, x29, #0x18
  2129f8:	mov	x19, x0
  2129fc:	bl	213790 <sd_device_get_subsystem@plt>
  212a00:	tbnz	w0, #31, 212aec <validate_device+0x120>
  212a04:	ldur	x0, [x29, #-24]
  212a08:	adrp	x1, 201000 <__FRAME_END__-0xbd8>
  212a0c:	add	x1, x1, #0x77e
  212a10:	bl	2136c0 <strcmp@plt>
  212a14:	cbz	w0, 212a20 <validate_device+0x54>
  212a18:	mov	w28, #0x1                   	// #1
  212a1c:	b	212af0 <validate_device+0x124>
  212a20:	adrp	x1, 201000 <__FRAME_END__-0xbd8>
  212a24:	add	x1, x1, #0xb0a
  212a28:	sub	x2, x29, #0x10
  212a2c:	mov	x0, x19
  212a30:	bl	2136f0 <sd_device_get_sysattr_value@plt>
  212a34:	tbnz	w0, #31, 212aec <validate_device+0x120>
  212a38:	ldur	x0, [x29, #-16]
  212a3c:	adrp	x1, 201000 <__FRAME_END__-0xbd8>
  212a40:	add	x1, x1, #0x4d2
  212a44:	bl	2136c0 <strcmp@plt>
  212a48:	cbnz	w0, 212a18 <validate_device+0x4c>
  212a4c:	sub	x1, x29, #0x20
  212a50:	mov	x0, x19
  212a54:	bl	213108 <find_pci_or_platform_parent>
  212a58:	tbnz	w0, #31, 212aec <validate_device+0x120>
  212a5c:	ldur	x0, [x29, #-32]
  212a60:	sub	x1, x29, #0x18
  212a64:	bl	213790 <sd_device_get_subsystem@plt>
  212a68:	tbnz	w0, #31, 212aec <validate_device+0x120>
  212a6c:	sub	x0, x29, #0x8
  212a70:	bl	2137a0 <sd_device_enumerator_new@plt>
  212a74:	tbnz	w0, #31, 212aec <validate_device+0x120>
  212a78:	ldur	x0, [x29, #-8]
  212a7c:	bl	2137b0 <sd_device_enumerator_allow_uninitialized@plt>
  212a80:	tbnz	w0, #31, 212aec <validate_device+0x120>
  212a84:	ldur	x0, [x29, #-8]
  212a88:	adrp	x1, 201000 <__FRAME_END__-0xbd8>
  212a8c:	add	x1, x1, #0x77e
  212a90:	mov	w2, #0x1                   	// #1
  212a94:	bl	2137c0 <sd_device_enumerator_add_match_subsystem@plt>
  212a98:	tbnz	w0, #31, 212aec <validate_device+0x120>
  212a9c:	ldur	x0, [x29, #-8]
  212aa0:	bl	2137d0 <sd_device_enumerator_get_device_first@plt>
  212aa4:	cbz	x0, 212a18 <validate_device+0x4c>
  212aa8:	adrp	x20, 201000 <__FRAME_END__-0xbd8>
  212aac:	adrp	x25, 201000 <__FRAME_END__-0xbd8>
  212ab0:	adrp	x21, 201000 <__FRAME_END__-0xbd8>
  212ab4:	adrp	x22, 201000 <__FRAME_END__-0xbd8>
  212ab8:	adrp	x23, 201000 <__FRAME_END__-0xbd8>
  212abc:	adrp	x24, 201000 <__FRAME_END__-0xbd8>
  212ac0:	adrp	x26, 201000 <__FRAME_END__-0xbd8>
  212ac4:	mov	x27, x0
  212ac8:	add	x20, x20, #0xb0a
  212acc:	add	x25, x25, #0xb68
  212ad0:	add	x21, x21, #0x58e
  212ad4:	add	x22, x22, #0x70e
  212ad8:	add	x23, x23, #0x7fd
  212adc:	add	x24, x24, #0x817
  212ae0:	add	x26, x26, #0x9c7
  212ae4:	mov	w28, #0x1                   	// #1
  212ae8:	b	212b2c <validate_device+0x160>
  212aec:	mov	w28, w0
  212af0:	sub	x0, x29, #0x8
  212af4:	bl	2130ec <sd_device_enumerator_unrefp>
  212af8:	mov	w0, w28
  212afc:	ldp	x20, x19, [sp, #176]
  212b00:	ldp	x22, x21, [sp, #160]
  212b04:	ldp	x24, x23, [sp, #144]
  212b08:	ldp	x26, x25, [sp, #128]
  212b0c:	ldp	x28, x27, [sp, #112]
  212b10:	ldp	x29, x30, [sp, #96]
  212b14:	add	sp, sp, #0xc0
  212b18:	ret
  212b1c:	ldur	x0, [x29, #-8]
  212b20:	bl	2137e0 <sd_device_enumerator_get_device_next@plt>
  212b24:	mov	x27, x0
  212b28:	cbz	x0, 212af0 <validate_device+0x124>
  212b2c:	mov	x0, x19
  212b30:	mov	x1, x27
  212b34:	bl	21335c <same_device>
  212b38:	cmp	w0, #0x0
  212b3c:	b.le	212b54 <validate_device+0x188>
  212b40:	mov	w8, #0x6                   	// #6
  212b44:	cmp	w8, #0x6
  212b48:	b.eq	212b1c <validate_device+0x150>  // b.none
  212b4c:	cbz	w8, 212b1c <validate_device+0x150>
  212b50:	b	212c8c <validate_device+0x2c0>
  212b54:	sub	x2, x29, #0x10
  212b58:	mov	x0, x27
  212b5c:	mov	x1, x20
  212b60:	bl	2136f0 <sd_device_get_sysattr_value@plt>
  212b64:	tbnz	w0, #31, 212b40 <validate_device+0x174>
  212b68:	ldr	q0, [x25]
  212b6c:	ldr	x8, [x25, #16]
  212b70:	ldur	x1, [x29, #-16]
  212b74:	add	x0, sp, #0x10
  212b78:	str	q0, [sp, #16]
  212b7c:	str	x8, [sp, #32]
  212b80:	bl	213640 <strv_find@plt>
  212b84:	cbz	x0, 212b40 <validate_device+0x174>
  212b88:	add	x1, sp, #0x30
  212b8c:	mov	x0, x27
  212b90:	bl	213108 <find_pci_or_platform_parent>
  212b94:	tbnz	w0, #31, 212b40 <validate_device+0x174>
  212b98:	ldur	x0, [x29, #-32]
  212b9c:	ldr	x1, [sp, #48]
  212ba0:	bl	21335c <same_device>
  212ba4:	cbz	w0, 212c04 <validate_device+0x238>
  212ba8:	sub	x1, x29, #0x28
  212bac:	mov	x0, x19
  212bb0:	stur	xzr, [x29, #-40]
  212bb4:	str	xzr, [sp, #8]
  212bb8:	bl	213750 <sd_device_get_sysname@plt>
  212bbc:	add	x1, sp, #0x8
  212bc0:	mov	x0, x27
  212bc4:	bl	213750 <sd_device_get_sysname@plt>
  212bc8:	mov	w0, wzr
  212bcc:	bl	2136a0 <log_get_max_level_realm@plt>
  212bd0:	cmp	w0, #0x7
  212bd4:	b.lt	212bfc <validate_device+0x230>  // b.tstop
  212bd8:	ldur	x6, [x29, #-40]
  212bdc:	ldr	x7, [sp, #8]
  212be0:	mov	w0, #0x7                   	// #7
  212be4:	mov	w3, #0xbb                  	// #187
  212be8:	mov	w1, wzr
  212bec:	mov	x2, x23
  212bf0:	mov	x4, x24
  212bf4:	mov	x5, x26
  212bf8:	bl	2136b0 <log_internal_realm@plt>
  212bfc:	mov	w8, #0x1                   	// #1
  212c00:	b	212b44 <validate_device+0x178>
  212c04:	ldr	x0, [sp, #48]
  212c08:	sub	x1, x29, #0x28
  212c0c:	bl	213790 <sd_device_get_subsystem@plt>
  212c10:	tbnz	w0, #31, 212b40 <validate_device+0x174>
  212c14:	ldur	x0, [x29, #-40]
  212c18:	mov	x1, x21
  212c1c:	bl	2136c0 <strcmp@plt>
  212c20:	cbnz	w0, 212c34 <validate_device+0x268>
  212c24:	ldur	x0, [x29, #-24]
  212c28:	mov	x1, x22
  212c2c:	bl	2136c0 <strcmp@plt>
  212c30:	cbz	w0, 212c3c <validate_device+0x270>
  212c34:	mov	w8, wzr
  212c38:	b	212b44 <validate_device+0x178>
  212c3c:	add	x1, sp, #0x8
  212c40:	mov	x0, x19
  212c44:	stp	xzr, xzr, [sp]
  212c48:	bl	213750 <sd_device_get_sysname@plt>
  212c4c:	mov	x1, sp
  212c50:	mov	x0, x27
  212c54:	bl	213750 <sd_device_get_sysname@plt>
  212c58:	mov	w0, wzr
  212c5c:	bl	2136a0 <log_get_max_level_realm@plt>
  212c60:	cmp	w0, #0x7
  212c64:	b.lt	212bfc <validate_device+0x230>  // b.tstop
  212c68:	ldp	x7, x6, [sp]
  212c6c:	adrp	x5, 201000 <__FRAME_END__-0xbd8>
  212c70:	mov	w0, #0x7                   	// #7
  212c74:	mov	w3, #0xcb                  	// #203
  212c78:	mov	w1, wzr
  212c7c:	mov	x2, x23
  212c80:	mov	x4, x24
  212c84:	add	x5, x5, #0x8a4
  212c88:	b	212bf8 <validate_device+0x22c>
  212c8c:	mov	w28, wzr
  212c90:	b	212af0 <validate_device+0x124>
  212c94:	adrp	x1, 201000 <__FRAME_END__-0xbd8>
  212c98:	adrp	x2, 201000 <__FRAME_END__-0xbd8>
  212c9c:	adrp	x4, 201000 <__FRAME_END__-0xbd8>
  212ca0:	add	x1, x1, #0x98f
  212ca4:	add	x2, x2, #0x7fd
  212ca8:	add	x4, x4, #0xae9
  212cac:	mov	w3, #0x71                  	// #113
  212cb0:	bl	213760 <log_assert_failed_realm@plt>

0000000000212cb4 <shall_clamp>:
  212cb4:	sub	sp, sp, #0x40
  212cb8:	stp	x29, x30, [sp, #32]
  212cbc:	stp	x20, x19, [sp, #48]
  212cc0:	add	x29, sp, #0x20
  212cc4:	cbz	x0, 212de0 <shall_clamp+0x12c>
  212cc8:	adrp	x1, 201000 <__FRAME_END__-0xbd8>
  212ccc:	add	x1, x1, #0x5f5
  212cd0:	sub	x2, x29, #0x8
  212cd4:	mov	x19, x0
  212cd8:	bl	213670 <sd_device_get_property_value@plt>
  212cdc:	tbnz	w0, #31, 212cfc <shall_clamp+0x48>
  212ce0:	ldur	x0, [x29, #-8]
  212ce4:	bl	2137f0 <parse_boolean@plt>
  212ce8:	mov	w20, w0
  212cec:	tbnz	w0, #31, 212d50 <shall_clamp+0x9c>
  212cf0:	cmp	w20, #0x0
  212cf4:	cset	w0, ne  // ne = any
  212cf8:	b	212db0 <shall_clamp+0xfc>
  212cfc:	mov	w20, w0
  212d00:	mov	w0, wzr
  212d04:	str	xzr, [sp, #16]
  212d08:	bl	2136a0 <log_get_max_level_realm@plt>
  212d0c:	cmp	w0, #0x7
  212d10:	b.ge	212dc0 <shall_clamp+0x10c>  // b.tcont
  212d14:	ldr	x6, [sp, #16]
  212d18:	adrp	x8, 201000 <__FRAME_END__-0xbd8>
  212d1c:	add	x8, x8, #0x860
  212d20:	adrp	x2, 201000 <__FRAME_END__-0xbd8>
  212d24:	cmp	x6, #0x0
  212d28:	csel	x5, xzr, x8, eq  // eq = none
  212d2c:	adrp	x8, 201000 <__FRAME_END__-0xbd8>
  212d30:	adrp	x4, 201000 <__FRAME_END__-0xbd8>
  212d34:	add	x8, x8, #0x918
  212d38:	add	x2, x2, #0x7fd
  212d3c:	add	x4, x4, #0x772
  212d40:	mov	w0, #0x7                   	// #7
  212d44:	mov	w3, #0x121                 	// #289
  212d48:	str	x8, [sp, #8]
  212d4c:	b	212d9c <shall_clamp+0xe8>
  212d50:	mov	w0, wzr
  212d54:	str	xzr, [sp, #16]
  212d58:	bl	2136a0 <log_get_max_level_realm@plt>
  212d5c:	cmp	w0, #0x7
  212d60:	b.ge	212dd0 <shall_clamp+0x11c>  // b.tcont
  212d64:	ldr	x6, [sp, #16]
  212d68:	adrp	x8, 201000 <__FRAME_END__-0xbd8>
  212d6c:	add	x8, x8, #0x860
  212d70:	adrp	x2, 201000 <__FRAME_END__-0xbd8>
  212d74:	cmp	x6, #0x0
  212d78:	csel	x5, xzr, x8, eq  // eq = none
  212d7c:	adrp	x8, 201000 <__FRAME_END__-0xbd8>
  212d80:	add	x8, x8, #0x686
  212d84:	adrp	x4, 201000 <__FRAME_END__-0xbd8>
  212d88:	add	x2, x2, #0x7fd
  212d8c:	add	x4, x4, #0x772
  212d90:	str	x8, [sp, #8]
  212d94:	mov	w0, #0x7                   	// #7
  212d98:	mov	w3, #0x127                 	// #295
  212d9c:	mov	w1, w20
  212da0:	mov	x7, xzr
  212da4:	str	xzr, [sp]
  212da8:	bl	213730 <log_object_internal@plt>
  212dac:	mov	w0, #0x1                   	// #1
  212db0:	ldp	x20, x19, [sp, #48]
  212db4:	ldp	x29, x30, [sp, #32]
  212db8:	add	sp, sp, #0x40
  212dbc:	ret
  212dc0:	add	x1, sp, #0x10
  212dc4:	mov	x0, x19
  212dc8:	bl	213750 <sd_device_get_sysname@plt>
  212dcc:	b	212d14 <shall_clamp+0x60>
  212dd0:	add	x1, sp, #0x10
  212dd4:	mov	x0, x19
  212dd8:	bl	213750 <sd_device_get_sysname@plt>
  212ddc:	b	212d64 <shall_clamp+0xb0>
  212de0:	adrp	x1, 201000 <__FRAME_END__-0xbd8>
  212de4:	adrp	x2, 201000 <__FRAME_END__-0xbd8>
  212de8:	adrp	x4, 201000 <__FRAME_END__-0xbd8>
  212dec:	add	x1, x1, #0xa7a
  212df0:	add	x2, x2, #0x7fd
  212df4:	add	x4, x4, #0xaca
  212df8:	mov	w3, #0x11d                 	// #285
  212dfc:	bl	213760 <log_assert_failed_realm@plt>

0000000000212e00 <clamp_brightness>:
  212e00:	sub	sp, sp, #0x80
  212e04:	stp	x29, x30, [sp, #80]
  212e08:	stp	x22, x21, [sp, #96]
  212e0c:	stp	x20, x19, [sp, #112]
  212e10:	add	x29, sp, #0x50
  212e14:	cbz	x1, 213070 <clamp_brightness+0x270>
  212e18:	mov	x20, x0
  212e1c:	ldr	x0, [x1]
  212e20:	mov	x19, x1
  212e24:	cbz	x0, 213094 <clamp_brightness+0x294>
  212e28:	sub	x1, x29, #0x4
  212e2c:	mov	w21, w2
  212e30:	bl	2130d0 <safe_atou>
  212e34:	tbnz	w0, #31, 212e64 <clamp_brightness+0x64>
  212e38:	sub	x1, x29, #0x10
  212e3c:	mov	x0, x20
  212e40:	bl	213790 <sd_device_get_subsystem@plt>
  212e44:	tbnz	w0, #31, 212ec4 <clamp_brightness+0xc4>
  212e48:	ldur	x0, [x29, #-16]
  212e4c:	adrp	x1, 201000 <__FRAME_END__-0xbd8>
  212e50:	add	x1, x1, #0x77e
  212e54:	bl	2136c0 <strcmp@plt>
  212e58:	cbz	w0, 212f2c <clamp_brightness+0x12c>
  212e5c:	mov	w8, wzr
  212e60:	b	212f44 <clamp_brightness+0x144>
  212e64:	mov	w22, w0
  212e68:	stur	xzr, [x29, #-16]
  212e6c:	cbz	x20, 212e80 <clamp_brightness+0x80>
  212e70:	mov	w0, wzr
  212e74:	bl	2136a0 <log_get_max_level_realm@plt>
  212e78:	cmp	w0, #0x4
  212e7c:	b.ge	213040 <clamp_brightness+0x240>  // b.tcont
  212e80:	ldr	x8, [x19]
  212e84:	ldur	x6, [x29, #-16]
  212e88:	adrp	x9, 201000 <__FRAME_END__-0xbd8>
  212e8c:	add	x9, x9, #0x860
  212e90:	str	x8, [sp, #16]
  212e94:	adrp	x8, 201000 <__FRAME_END__-0xbd8>
  212e98:	cmp	x6, #0x0
  212e9c:	add	x8, x8, #0xa7c
  212ea0:	adrp	x2, 201000 <__FRAME_END__-0xbd8>
  212ea4:	adrp	x4, 201000 <__FRAME_END__-0xbd8>
  212ea8:	csel	x5, xzr, x9, eq  // eq = none
  212eac:	add	x2, x2, #0x7fd
  212eb0:	add	x4, x4, #0x503
  212eb4:	str	x8, [sp, #8]
  212eb8:	mov	w0, #0x4                   	// #4
  212ebc:	mov	w3, #0xfb                  	// #251
  212ec0:	b	212f18 <clamp_brightness+0x118>
  212ec4:	mov	w22, w0
  212ec8:	stur	xzr, [x29, #-24]
  212ecc:	cbz	x20, 212ee0 <clamp_brightness+0xe0>
  212ed0:	mov	w0, wzr
  212ed4:	bl	2136a0 <log_get_max_level_realm@plt>
  212ed8:	cmp	w0, #0x4
  212edc:	b.ge	213050 <clamp_brightness+0x250>  // b.tcont
  212ee0:	ldur	x6, [x29, #-24]
  212ee4:	adrp	x8, 201000 <__FRAME_END__-0xbd8>
  212ee8:	add	x8, x8, #0x860
  212eec:	adrp	x2, 201000 <__FRAME_END__-0xbd8>
  212ef0:	cmp	x6, #0x0
  212ef4:	csel	x5, xzr, x8, eq  // eq = none
  212ef8:	adrp	x8, 201000 <__FRAME_END__-0xbd8>
  212efc:	adrp	x4, 201000 <__FRAME_END__-0xbd8>
  212f00:	add	x8, x8, #0xb0f
  212f04:	add	x2, x2, #0x7fd
  212f08:	add	x4, x4, #0x503
  212f0c:	mov	w0, #0x4                   	// #4
  212f10:	mov	w3, #0xff                  	// #255
  212f14:	str	x8, [sp, #8]
  212f18:	mov	w1, w22
  212f1c:	mov	x7, xzr
  212f20:	str	xzr, [sp]
  212f24:	bl	213730 <log_object_internal@plt>
  212f28:	b	21302c <clamp_brightness+0x22c>
  212f2c:	mov	w8, #0xcccd                	// #52429
  212f30:	movk	w8, #0xcccc, lsl #16
  212f34:	umull	x8, w21, w8
  212f38:	lsr	x8, x8, #36
  212f3c:	cmp	w21, #0x14
  212f40:	csinc	w8, w8, wzr, cs  // cs = hs, nlast
  212f44:	ldur	w9, [x29, #-4]
  212f48:	cmp	w9, w8
  212f4c:	csel	w8, w8, w9, cc  // cc = lo, ul, last
  212f50:	cmp	w9, w21
  212f54:	csel	w21, w21, w8, hi  // hi = pmore
  212f58:	cmp	w21, w9
  212f5c:	b.eq	21302c <clamp_brightness+0x22c>  // b.none
  212f60:	adrp	x1, 201000 <__FRAME_END__-0xbd8>
  212f64:	add	x1, x1, #0x500
  212f68:	sub	x0, x29, #0x18
  212f6c:	mov	w2, w21
  212f70:	bl	213800 <asprintf@plt>
  212f74:	tbnz	w0, #31, 213010 <clamp_brightness+0x210>
  212f78:	stur	xzr, [x29, #-32]
  212f7c:	cbz	x20, 212f90 <clamp_brightness+0x190>
  212f80:	mov	w0, wzr
  212f84:	bl	2136a0 <log_get_max_level_realm@plt>
  212f88:	cmp	w0, #0x6
  212f8c:	b.ge	213060 <clamp_brightness+0x260>  // b.tcont
  212f90:	ldp	x6, x13, [x29, #-32]
  212f94:	ldur	w10, [x29, #-4]
  212f98:	adrp	x8, 201000 <__FRAME_END__-0xbd8>
  212f9c:	add	x8, x8, #0x860
  212fa0:	adrp	x11, 201000 <__FRAME_END__-0xbd8>
  212fa4:	adrp	x12, 201000 <__FRAME_END__-0xbd8>
  212fa8:	cmp	x6, #0x0
  212fac:	ldr	x9, [x19]
  212fb0:	add	x11, x11, #0x99f
  212fb4:	add	x12, x12, #0x8fd
  212fb8:	csel	x5, xzr, x8, eq  // eq = none
  212fbc:	cmp	w21, w10
  212fc0:	csel	x8, x12, x11, hi  // hi = pmore
  212fc4:	stp	x8, x13, [sp, #24]
  212fc8:	adrp	x8, 201000 <__FRAME_END__-0xbd8>
  212fcc:	adrp	x2, 201000 <__FRAME_END__-0xbd8>
  212fd0:	adrp	x4, 201000 <__FRAME_END__-0xbd8>
  212fd4:	add	x8, x8, #0x450
  212fd8:	add	x2, x2, #0x7fd
  212fdc:	add	x4, x4, #0x503
  212fe0:	mov	w0, #0x6                   	// #6
  212fe4:	mov	w3, #0x111                 	// #273
  212fe8:	mov	w1, wzr
  212fec:	mov	x7, xzr
  212ff0:	stp	x8, x9, [sp, #8]
  212ff4:	str	xzr, [sp]
  212ff8:	bl	213730 <log_object_internal@plt>
  212ffc:	ldr	x0, [x19]
  213000:	bl	213780 <free@plt>
  213004:	ldur	x8, [x29, #-24]
  213008:	str	x8, [x19]
  21300c:	b	21302c <clamp_brightness+0x22c>
  213010:	adrp	x1, 201000 <__FRAME_END__-0xbd8>
  213014:	adrp	x3, 201000 <__FRAME_END__-0xbd8>
  213018:	add	x1, x1, #0x7fd
  21301c:	add	x3, x3, #0x503
  213020:	mov	w2, #0x10c                 	// #268
  213024:	mov	w0, wzr
  213028:	bl	213710 <log_oom_internal@plt>
  21302c:	ldp	x20, x19, [sp, #112]
  213030:	ldp	x22, x21, [sp, #96]
  213034:	ldp	x29, x30, [sp, #80]
  213038:	add	sp, sp, #0x80
  21303c:	ret
  213040:	sub	x1, x29, #0x10
  213044:	mov	x0, x20
  213048:	bl	213750 <sd_device_get_sysname@plt>
  21304c:	b	212e80 <clamp_brightness+0x80>
  213050:	sub	x1, x29, #0x18
  213054:	mov	x0, x20
  213058:	bl	213750 <sd_device_get_sysname@plt>
  21305c:	b	212ee0 <clamp_brightness+0xe0>
  213060:	sub	x1, x29, #0x20
  213064:	mov	x0, x20
  213068:	bl	213750 <sd_device_get_sysname@plt>
  21306c:	b	212f90 <clamp_brightness+0x190>
  213070:	adrp	x1, 201000 <__FRAME_END__-0xbd8>
  213074:	adrp	x2, 201000 <__FRAME_END__-0xbd8>
  213078:	adrp	x4, 201000 <__FRAME_END__-0xbd8>
  21307c:	add	x1, x1, #0x44a
  213080:	add	x2, x2, #0x7fd
  213084:	add	x4, x4, #0x827
  213088:	mov	w3, #0xf6                  	// #246
  21308c:	mov	w0, wzr
  213090:	bl	213760 <log_assert_failed_realm@plt>
  213094:	adrp	x1, 201000 <__FRAME_END__-0xbd8>
  213098:	adrp	x2, 201000 <__FRAME_END__-0xbd8>
  21309c:	adrp	x4, 201000 <__FRAME_END__-0xbd8>
  2130a0:	add	x1, x1, #0x86c
  2130a4:	add	x2, x2, #0x7fd
  2130a8:	add	x4, x4, #0x827
  2130ac:	mov	w3, #0xf7                  	// #247
  2130b0:	bl	213760 <log_assert_failed_realm@plt>

00000000002130b4 <write_string_file>:
  2130b4:	stp	x29, x30, [sp, #-16]!
  2130b8:	mov	w2, #0x1                   	// #1
  2130bc:	mov	x3, xzr
  2130c0:	mov	x29, sp
  2130c4:	bl	213810 <write_string_file_ts@plt>
  2130c8:	ldp	x29, x30, [sp], #16
  2130cc:	ret

00000000002130d0 <safe_atou>:
  2130d0:	stp	x29, x30, [sp, #-16]!
  2130d4:	mov	x2, x1
  2130d8:	mov	w1, wzr
  2130dc:	mov	x29, sp
  2130e0:	bl	213820 <safe_atou_full@plt>
  2130e4:	ldp	x29, x30, [sp], #16
  2130e8:	ret

00000000002130ec <sd_device_enumerator_unrefp>:
  2130ec:	stp	x29, x30, [sp, #-16]!
  2130f0:	ldr	x0, [x0]
  2130f4:	mov	x29, sp
  2130f8:	cbz	x0, 213100 <sd_device_enumerator_unrefp+0x14>
  2130fc:	bl	213830 <sd_device_enumerator_unref@plt>
  213100:	ldp	x29, x30, [sp], #16
  213104:	ret

0000000000213108 <find_pci_or_platform_parent>:
  213108:	sub	sp, sp, #0x70
  21310c:	stp	x29, x30, [sp, #64]
  213110:	str	x21, [sp, #80]
  213114:	stp	x20, x19, [sp, #96]
  213118:	add	x29, sp, #0x40
  21311c:	cbz	x0, 213318 <find_pci_or_platform_parent+0x210>
  213120:	mov	x19, x1
  213124:	cbz	x1, 213338 <find_pci_or_platform_parent+0x230>
  213128:	sub	x1, x29, #0x18
  21312c:	bl	213840 <sd_device_get_parent@plt>
  213130:	tbnz	w0, #31, 21322c <find_pci_or_platform_parent+0x124>
  213134:	ldur	x0, [x29, #-24]
  213138:	add	x1, x29, #0x18
  21313c:	bl	213790 <sd_device_get_subsystem@plt>
  213140:	tbnz	w0, #31, 21322c <find_pci_or_platform_parent+0x124>
  213144:	ldur	x0, [x29, #-24]
  213148:	sub	x1, x29, #0x8
  21314c:	bl	213750 <sd_device_get_sysname@plt>
  213150:	tbnz	w0, #31, 21322c <find_pci_or_platform_parent+0x124>
  213154:	ldr	x20, [x29, #24]
  213158:	adrp	x1, 201000 <__FRAME_END__-0xbd8>
  21315c:	add	x1, x1, #0x97a
  213160:	mov	x0, x20
  213164:	bl	2136c0 <strcmp@plt>
  213168:	cbz	w0, 2131a0 <find_pci_or_platform_parent+0x98>
  21316c:	adrp	x1, 201000 <__FRAME_END__-0xbd8>
  213170:	add	x1, x1, #0x70e
  213174:	mov	x0, x20
  213178:	bl	2136c0 <strcmp@plt>
  21317c:	cbz	w0, 213240 <find_pci_or_platform_parent+0x138>
  213180:	ldr	x0, [x29, #24]
  213184:	adrp	x1, 201000 <__FRAME_END__-0xbd8>
  213188:	add	x1, x1, #0x58e
  21318c:	bl	2136c0 <strcmp@plt>
  213190:	cbnz	w0, 213220 <find_pci_or_platform_parent+0x118>
  213194:	ldur	x8, [x29, #-24]
  213198:	str	x8, [x19]
  21319c:	b	21322c <find_pci_or_platform_parent+0x124>
  2131a0:	ldur	x0, [x29, #-8]
  2131a4:	adrp	x1, 201000 <__FRAME_END__-0xbd8>
  2131a8:	add	x1, x1, #0x756
  2131ac:	bl	213430 <startswith>
  2131b0:	cbz	x0, 21328c <find_pci_or_platform_parent+0x184>
  2131b4:	adrp	x1, 201000 <__FRAME_END__-0xbd8>
  2131b8:	add	x1, x1, #0x53b
  2131bc:	mov	x20, x0
  2131c0:	bl	213850 <strspn@plt>
  2131c4:	add	x20, x20, x0
  2131c8:	ldrb	w8, [x20]
  2131cc:	cmp	w8, #0x2d
  2131d0:	b.ne	213218 <find_pci_or_platform_parent+0x110>  // b.any
  2131d4:	adrp	x8, 201000 <__FRAME_END__-0xbd8>
  2131d8:	add	x8, x8, #0xb80
  2131dc:	ldr	q0, [x8]
  2131e0:	ldr	x8, [x8, #16]
  2131e4:	str	q0, [sp, #16]
  2131e8:	ldr	x1, [sp, #16]
  2131ec:	str	x8, [sp, #32]
  2131f0:	cbz	x1, 213210 <find_pci_or_platform_parent+0x108>
  2131f4:	add	x8, sp, #0x10
  2131f8:	orr	x21, x8, #0x8
  2131fc:	mov	x0, x20
  213200:	bl	213430 <startswith>
  213204:	cbnz	x0, 213214 <find_pci_or_platform_parent+0x10c>
  213208:	ldr	x1, [x21], #8
  21320c:	cbnz	x1, 2131fc <find_pci_or_platform_parent+0xf4>
  213210:	mov	x0, xzr
  213214:	cbz	x0, 2132f4 <find_pci_or_platform_parent+0x1ec>
  213218:	mov	w8, #0x1                   	// #1
  21321c:	tbz	w8, #0, 21322c <find_pci_or_platform_parent+0x124>
  213220:	ldur	x0, [x29, #-24]
  213224:	mov	x1, x19
  213228:	bl	213108 <find_pci_or_platform_parent>
  21322c:	ldp	x20, x19, [sp, #96]
  213230:	ldr	x21, [sp, #80]
  213234:	ldp	x29, x30, [sp, #64]
  213238:	add	sp, sp, #0x70
  21323c:	ret
  213240:	ldur	x0, [x29, #-24]
  213244:	adrp	x1, 201000 <__FRAME_END__-0xbd8>
  213248:	add	x1, x1, #0xb32
  21324c:	sub	x2, x29, #0x10
  213250:	bl	2136f0 <sd_device_get_sysattr_value@plt>
  213254:	tbnz	w0, #31, 213180 <find_pci_or_platform_parent+0x78>
  213258:	ldur	x0, [x29, #-16]
  21325c:	add	x1, sp, #0x8
  213260:	str	xzr, [sp, #8]
  213264:	bl	213480 <safe_atolu>
  213268:	tbnz	w0, #31, 21329c <find_pci_or_platform_parent+0x194>
  21326c:	ldr	x8, [sp, #8]
  213270:	cmp	x8, #0x30, lsl #12
  213274:	b.ne	2132ec <find_pci_or_platform_parent+0x1e4>  // b.any
  213278:	ldur	x9, [x29, #-24]
  21327c:	mov	w8, wzr
  213280:	mov	w0, wzr
  213284:	str	x9, [x19]
  213288:	b	213310 <find_pci_or_platform_parent+0x208>
  21328c:	mov	w0, #0xffffffc3            	// #-61
  213290:	mov	w8, wzr
  213294:	tbz	wzr, #0, 21322c <find_pci_or_platform_parent+0x124>
  213298:	b	213220 <find_pci_or_platform_parent+0x118>
  21329c:	mov	w20, w0
  2132a0:	mov	w0, wzr
  2132a4:	bl	2136a0 <log_get_max_level_realm@plt>
  2132a8:	cmp	w0, #0x4
  2132ac:	b.lt	213304 <find_pci_or_platform_parent+0x1fc>  // b.tstop
  2132b0:	ldp	x6, x8, [x29, #-16]
  2132b4:	ldr	x7, [x29, #24]
  2132b8:	adrp	x2, 201000 <__FRAME_END__-0xbd8>
  2132bc:	adrp	x4, 201000 <__FRAME_END__-0xbd8>
  2132c0:	adrp	x5, 201000 <__FRAME_END__-0xbd8>
  2132c4:	add	x2, x2, #0x7fd
  2132c8:	add	x4, x4, #0xa5e
  2132cc:	add	x5, x5, #0x5c5
  2132d0:	mov	w0, #0x4                   	// #4
  2132d4:	mov	w3, #0x3e                  	// #62
  2132d8:	mov	w1, w20
  2132dc:	str	x8, [sp]
  2132e0:	bl	2136b0 <log_internal_realm@plt>
  2132e4:	mov	w8, wzr
  2132e8:	b	213310 <find_pci_or_platform_parent+0x208>
  2132ec:	mov	w8, #0x1                   	// #1
  2132f0:	b	213310 <find_pci_or_platform_parent+0x208>
  2132f4:	mov	w0, #0xffffffa1            	// #-95
  2132f8:	mov	w8, wzr
  2132fc:	tbz	wzr, #0, 21322c <find_pci_or_platform_parent+0x124>
  213300:	b	213220 <find_pci_or_platform_parent+0x118>
  213304:	mov	w8, wzr
  213308:	neg	w9, w20
  21330c:	sub	w0, w8, w9, uxtb
  213310:	tbz	w8, #0, 21322c <find_pci_or_platform_parent+0x124>
  213314:	b	213220 <find_pci_or_platform_parent+0x118>
  213318:	adrp	x1, 201000 <__FRAME_END__-0xbd8>
  21331c:	adrp	x2, 201000 <__FRAME_END__-0xbd8>
  213320:	adrp	x4, 201000 <__FRAME_END__-0xbd8>
  213324:	add	x1, x1, #0x98f
  213328:	add	x2, x2, #0x7fd
  21332c:	add	x4, x4, #0x64b
  213330:	mov	w3, #0x1a                  	// #26
  213334:	bl	213760 <log_assert_failed_realm@plt>
  213338:	adrp	x1, 201000 <__FRAME_END__-0xbd8>
  21333c:	adrp	x2, 201000 <__FRAME_END__-0xbd8>
  213340:	adrp	x4, 201000 <__FRAME_END__-0xbd8>
  213344:	add	x1, x1, #0x868
  213348:	add	x2, x2, #0x7fd
  21334c:	add	x4, x4, #0x64b
  213350:	mov	w3, #0x1b                  	// #27
  213354:	mov	w0, wzr
  213358:	bl	213760 <log_assert_failed_realm@plt>

000000000021335c <same_device>:
  21335c:	sub	sp, sp, #0x30
  213360:	stp	x29, x30, [sp, #16]
  213364:	stp	x20, x19, [sp, #32]
  213368:	add	x29, sp, #0x10
  21336c:	cbz	x0, 2133ec <same_device+0x90>
  213370:	mov	x19, x1
  213374:	cbz	x1, 21340c <same_device+0xb0>
  213378:	add	x1, sp, #0x8
  21337c:	mov	x20, x0
  213380:	bl	213790 <sd_device_get_subsystem@plt>
  213384:	tbnz	w0, #31, 2133a8 <same_device+0x4c>
  213388:	mov	x1, sp
  21338c:	mov	x0, x19
  213390:	bl	213790 <sd_device_get_subsystem@plt>
  213394:	tbnz	w0, #31, 2133a8 <same_device+0x4c>
  213398:	ldp	x1, x0, [sp]
  21339c:	bl	2136c0 <strcmp@plt>
  2133a0:	cbz	w0, 2133b8 <same_device+0x5c>
  2133a4:	mov	w0, wzr
  2133a8:	ldp	x20, x19, [sp, #32]
  2133ac:	ldp	x29, x30, [sp, #16]
  2133b0:	add	sp, sp, #0x30
  2133b4:	ret
  2133b8:	add	x1, sp, #0x8
  2133bc:	mov	x0, x20
  2133c0:	bl	213750 <sd_device_get_sysname@plt>
  2133c4:	tbnz	w0, #31, 2133a8 <same_device+0x4c>
  2133c8:	mov	x1, sp
  2133cc:	mov	x0, x19
  2133d0:	bl	213750 <sd_device_get_sysname@plt>
  2133d4:	tbnz	w0, #31, 2133a8 <same_device+0x4c>
  2133d8:	ldp	x1, x0, [sp]
  2133dc:	bl	2136c0 <strcmp@plt>
  2133e0:	cmp	w0, #0x0
  2133e4:	cset	w0, eq  // eq = none
  2133e8:	b	2133a8 <same_device+0x4c>
  2133ec:	adrp	x1, 201000 <__FRAME_END__-0xbd8>
  2133f0:	adrp	x2, 201000 <__FRAME_END__-0xbd8>
  2133f4:	adrp	x4, 201000 <__FRAME_END__-0xbd8>
  2133f8:	add	x1, x1, #0x916
  2133fc:	add	x2, x2, #0x7fd
  213400:	add	x4, x4, #0x4d6
  213404:	mov	w3, #0x52                  	// #82
  213408:	bl	213760 <log_assert_failed_realm@plt>
  21340c:	adrp	x1, 201000 <__FRAME_END__-0xbd8>
  213410:	adrp	x2, 201000 <__FRAME_END__-0xbd8>
  213414:	adrp	x4, 201000 <__FRAME_END__-0xbd8>
  213418:	add	x1, x1, #0x99d
  21341c:	add	x2, x2, #0x7fd
  213420:	add	x4, x4, #0x4d6
  213424:	mov	w3, #0x53                  	// #83
  213428:	mov	w0, wzr
  21342c:	bl	213760 <log_assert_failed_realm@plt>

0000000000213430 <startswith>:
  213430:	stp	x29, x30, [sp, #-48]!
  213434:	stp	x20, x19, [sp, #32]
  213438:	mov	x20, x0
  21343c:	mov	x0, x1
  213440:	str	x21, [sp, #16]
  213444:	mov	x29, sp
  213448:	mov	x19, x1
  21344c:	bl	213680 <strlen@plt>
  213450:	mov	x21, x0
  213454:	mov	x0, x20
  213458:	mov	x1, x19
  21345c:	mov	x2, x21
  213460:	bl	213860 <strncmp@plt>
  213464:	add	x8, x20, x21
  213468:	ldp	x20, x19, [sp, #32]
  21346c:	ldr	x21, [sp, #16]
  213470:	cmp	w0, #0x0
  213474:	csel	x0, x8, xzr, eq  // eq = none
  213478:	ldp	x29, x30, [sp], #48
  21347c:	ret

0000000000213480 <safe_atolu>:
  213480:	stp	x29, x30, [sp, #-16]!
  213484:	mov	x29, sp
  213488:	bl	213870 <safe_atollu@plt>
  21348c:	ldp	x29, x30, [sp], #16
  213490:	ret

0000000000213494 <ALIGN_TO>:
  213494:	add	x8, x0, #0x7
  213498:	and	x0, x8, #0xfffffffffffffff8
  21349c:	ret

00000000002134a0 <__libc_csu_init>:
  2134a0:	stp	x29, x30, [sp, #-64]!
  2134a4:	mov	x29, sp
  2134a8:	stp	x19, x20, [sp, #16]
  2134ac:	adrp	x20, 223000 <safe_atollu@plt+0xf790>
  2134b0:	add	x20, x20, #0x890
  2134b4:	stp	x21, x22, [sp, #32]
  2134b8:	adrp	x21, 223000 <safe_atollu@plt+0xf790>
  2134bc:	add	x21, x21, #0x888
  2134c0:	sub	x20, x20, x21
  2134c4:	mov	w22, w0
  2134c8:	stp	x23, x24, [sp, #48]
  2134cc:	mov	x23, x1
  2134d0:	mov	x24, x2
  2134d4:	bl	213524 <_init>
  2134d8:	cmp	xzr, x20, asr #3
  2134dc:	b.eq	213508 <__libc_csu_init+0x68>  // b.none
  2134e0:	asr	x20, x20, #3
  2134e4:	mov	x19, #0x0                   	// #0
  2134e8:	ldr	x3, [x21, x19, lsl #3]
  2134ec:	mov	x2, x24
  2134f0:	add	x19, x19, #0x1
  2134f4:	mov	x1, x23
  2134f8:	mov	w0, w22
  2134fc:	blr	x3
  213500:	cmp	x20, x19
  213504:	b.ne	2134e8 <__libc_csu_init+0x48>  // b.any
  213508:	ldp	x19, x20, [sp, #16]
  21350c:	ldp	x21, x22, [sp, #32]
  213510:	ldp	x23, x24, [sp, #48]
  213514:	ldp	x29, x30, [sp], #64
  213518:	ret
  21351c:	nop

0000000000213520 <__libc_csu_fini>:
  213520:	ret

Disassembly of section .init:

0000000000213524 <_init>:
  213524:	stp	x29, x30, [sp, #-16]!
  213528:	mov	x29, sp
  21352c:	bl	211d20 <call_weak_fn>
  213530:	ldp	x29, x30, [sp], #16
  213534:	ret

Disassembly of section .fini:

0000000000213538 <_fini>:
  213538:	stp	x29, x30, [sp, #-16]!
  21353c:	mov	x29, sp
  213540:	ldp	x29, x30, [sp], #16
  213544:	ret

Disassembly of section .plt:

0000000000213550 <__libc_start_main@plt-0x20>:
  213550:	stp	x16, x30, [sp, #-16]!
  213554:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  213558:	ldr	x17, [x16, #2696]
  21355c:	add	x16, x16, #0xa88
  213560:	br	x17
  213564:	nop
  213568:	nop
  21356c:	nop

0000000000213570 <__libc_start_main@plt>:
  213570:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  213574:	ldr	x17, [x16, #2704]
  213578:	add	x16, x16, #0xa90
  21357c:	br	x17

0000000000213580 <abort@plt>:
  213580:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  213584:	ldr	x17, [x16, #2712]
  213588:	add	x16, x16, #0xa98
  21358c:	br	x17

0000000000213590 <__gmon_start__@plt>:
  213590:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  213594:	ldr	x17, [x16, #2720]
  213598:	add	x16, x16, #0xaa0
  21359c:	br	x17

00000000002135a0 <ask_password_agent_close@plt>:
  2135a0:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  2135a4:	ldr	x17, [x16, #2728]
  2135a8:	add	x16, x16, #0xaa8
  2135ac:	br	x17

00000000002135b0 <polkit_agent_close@plt>:
  2135b0:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  2135b4:	ldr	x17, [x16, #2736]
  2135b8:	add	x16, x16, #0xab0
  2135bc:	br	x17

00000000002135c0 <pager_close@plt>:
  2135c0:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  2135c4:	ldr	x17, [x16, #2744]
  2135c8:	add	x16, x16, #0xab8
  2135cc:	br	x17

00000000002135d0 <mac_selinux_finish@plt>:
  2135d0:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  2135d4:	ldr	x17, [x16, #2752]
  2135d8:	add	x16, x16, #0xac0
  2135dc:	br	x17

00000000002135e0 <log_setup_service@plt>:
  2135e0:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  2135e4:	ldr	x17, [x16, #2760]
  2135e8:	add	x16, x16, #0xac8
  2135ec:	br	x17

00000000002135f0 <umask@plt>:
  2135f0:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  2135f4:	ldr	x17, [x16, #2768]
  2135f8:	add	x16, x16, #0xad0
  2135fc:	br	x17

0000000000213600 <mkdir_p@plt>:
  213600:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  213604:	ldr	x17, [x16, #2776]
  213608:	add	x16, x16, #0xad8
  21360c:	br	x17

0000000000213610 <strchr@plt>:
  213610:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  213614:	ldr	x17, [x16, #2784]
  213618:	add	x16, x16, #0xae0
  21361c:	br	x17

0000000000213620 <strnlen@plt>:
  213620:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  213624:	ldr	x17, [x16, #2792]
  213628:	add	x16, x16, #0xae8
  21362c:	br	x17

0000000000213630 <memcpy@plt>:
  213630:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  213634:	ldr	x17, [x16, #2800]
  213638:	add	x16, x16, #0xaf0
  21363c:	br	x17

0000000000213640 <strv_find@plt>:
  213640:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  213644:	ldr	x17, [x16, #2808]
  213648:	add	x16, x16, #0xaf8
  21364c:	br	x17

0000000000213650 <sd_device_new_from_subsystem_sysname@plt>:
  213650:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  213654:	ldr	x17, [x16, #2816]
  213658:	add	x16, x16, #0xb00
  21365c:	br	x17

0000000000213660 <cescape@plt>:
  213660:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  213664:	ldr	x17, [x16, #2824]
  213668:	add	x16, x16, #0xb08
  21366c:	br	x17

0000000000213670 <sd_device_get_property_value@plt>:
  213670:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  213674:	ldr	x17, [x16, #2832]
  213678:	add	x16, x16, #0xb10
  21367c:	br	x17

0000000000213680 <strlen@plt>:
  213680:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  213684:	ldr	x17, [x16, #2840]
  213688:	add	x16, x16, #0xb18
  21368c:	br	x17

0000000000213690 <stpcpy@plt>:
  213690:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  213694:	ldr	x17, [x16, #2848]
  213698:	add	x16, x16, #0xb20
  21369c:	br	x17

00000000002136a0 <log_get_max_level_realm@plt>:
  2136a0:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  2136a4:	ldr	x17, [x16, #2856]
  2136a8:	add	x16, x16, #0xb28
  2136ac:	br	x17

00000000002136b0 <log_internal_realm@plt>:
  2136b0:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  2136b4:	ldr	x17, [x16, #2864]
  2136b8:	add	x16, x16, #0xb30
  2136bc:	br	x17

00000000002136c0 <strcmp@plt>:
  2136c0:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  2136c4:	ldr	x17, [x16, #2872]
  2136c8:	add	x16, x16, #0xb38
  2136cc:	br	x17

00000000002136d0 <shall_restore_state@plt>:
  2136d0:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  2136d4:	ldr	x17, [x16, #2880]
  2136d8:	add	x16, x16, #0xb40
  2136dc:	br	x17

00000000002136e0 <read_one_line_file@plt>:
  2136e0:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  2136e4:	ldr	x17, [x16, #2888]
  2136e8:	add	x16, x16, #0xb48
  2136ec:	br	x17

00000000002136f0 <sd_device_get_sysattr_value@plt>:
  2136f0:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  2136f4:	ldr	x17, [x16, #2896]
  2136f8:	add	x16, x16, #0xb50
  2136fc:	br	x17

0000000000213700 <strdup@plt>:
  213700:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  213704:	ldr	x17, [x16, #2904]
  213708:	add	x16, x16, #0xb58
  21370c:	br	x17

0000000000213710 <log_oom_internal@plt>:
  213710:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  213714:	ldr	x17, [x16, #2912]
  213718:	add	x16, x16, #0xb60
  21371c:	br	x17

0000000000213720 <unlink@plt>:
  213720:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  213724:	ldr	x17, [x16, #2920]
  213728:	add	x16, x16, #0xb68
  21372c:	br	x17

0000000000213730 <log_object_internal@plt>:
  213730:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  213734:	ldr	x17, [x16, #2928]
  213738:	add	x16, x16, #0xb70
  21373c:	br	x17

0000000000213740 <sd_device_set_sysattr_value@plt>:
  213740:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  213744:	ldr	x17, [x16, #2936]
  213748:	add	x16, x16, #0xb78
  21374c:	br	x17

0000000000213750 <sd_device_get_sysname@plt>:
  213750:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  213754:	ldr	x17, [x16, #2944]
  213758:	add	x16, x16, #0xb80
  21375c:	br	x17

0000000000213760 <log_assert_failed_realm@plt>:
  213760:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  213764:	ldr	x17, [x16, #2952]
  213768:	add	x16, x16, #0xb88
  21376c:	br	x17

0000000000213770 <sd_device_unref@plt>:
  213770:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  213774:	ldr	x17, [x16, #2960]
  213778:	add	x16, x16, #0xb90
  21377c:	br	x17

0000000000213780 <free@plt>:
  213780:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  213784:	ldr	x17, [x16, #2968]
  213788:	add	x16, x16, #0xb98
  21378c:	br	x17

0000000000213790 <sd_device_get_subsystem@plt>:
  213790:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  213794:	ldr	x17, [x16, #2976]
  213798:	add	x16, x16, #0xba0
  21379c:	br	x17

00000000002137a0 <sd_device_enumerator_new@plt>:
  2137a0:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  2137a4:	ldr	x17, [x16, #2984]
  2137a8:	add	x16, x16, #0xba8
  2137ac:	br	x17

00000000002137b0 <sd_device_enumerator_allow_uninitialized@plt>:
  2137b0:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  2137b4:	ldr	x17, [x16, #2992]
  2137b8:	add	x16, x16, #0xbb0
  2137bc:	br	x17

00000000002137c0 <sd_device_enumerator_add_match_subsystem@plt>:
  2137c0:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  2137c4:	ldr	x17, [x16, #3000]
  2137c8:	add	x16, x16, #0xbb8
  2137cc:	br	x17

00000000002137d0 <sd_device_enumerator_get_device_first@plt>:
  2137d0:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  2137d4:	ldr	x17, [x16, #3008]
  2137d8:	add	x16, x16, #0xbc0
  2137dc:	br	x17

00000000002137e0 <sd_device_enumerator_get_device_next@plt>:
  2137e0:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  2137e4:	ldr	x17, [x16, #3016]
  2137e8:	add	x16, x16, #0xbc8
  2137ec:	br	x17

00000000002137f0 <parse_boolean@plt>:
  2137f0:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  2137f4:	ldr	x17, [x16, #3024]
  2137f8:	add	x16, x16, #0xbd0
  2137fc:	br	x17

0000000000213800 <asprintf@plt>:
  213800:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  213804:	ldr	x17, [x16, #3032]
  213808:	add	x16, x16, #0xbd8
  21380c:	br	x17

0000000000213810 <write_string_file_ts@plt>:
  213810:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  213814:	ldr	x17, [x16, #3040]
  213818:	add	x16, x16, #0xbe0
  21381c:	br	x17

0000000000213820 <safe_atou_full@plt>:
  213820:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  213824:	ldr	x17, [x16, #3048]
  213828:	add	x16, x16, #0xbe8
  21382c:	br	x17

0000000000213830 <sd_device_enumerator_unref@plt>:
  213830:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  213834:	ldr	x17, [x16, #3056]
  213838:	add	x16, x16, #0xbf0
  21383c:	br	x17

0000000000213840 <sd_device_get_parent@plt>:
  213840:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  213844:	ldr	x17, [x16, #3064]
  213848:	add	x16, x16, #0xbf8
  21384c:	br	x17

0000000000213850 <strspn@plt>:
  213850:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  213854:	ldr	x17, [x16, #3072]
  213858:	add	x16, x16, #0xc00
  21385c:	br	x17

0000000000213860 <strncmp@plt>:
  213860:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  213864:	ldr	x17, [x16, #3080]
  213868:	add	x16, x16, #0xc08
  21386c:	br	x17

0000000000213870 <safe_atollu@plt>:
  213870:	adrp	x16, 223000 <safe_atollu@plt+0xf790>
  213874:	ldr	x17, [x16, #3088]
  213878:	add	x16, x16, #0xc10
  21387c:	br	x17
