
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_xxsubinterpreters.cpython-38-aarch64-linux-gnu.so_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000024b8 <.init>:
    24b8:	stp	x29, x30, [sp, #-16]!
    24bc:	mov	x29, sp
    24c0:	bl	2940 <PyThread_free_lock@plt+0x10>
    24c4:	ldp	x29, x30, [sp], #16
    24c8:	ret

Disassembly of section .plt:

00000000000024d0 <PyUnicode_FromFormat@plt-0x20>:
    24d0:	stp	x16, x30, [sp, #-16]!
    24d4:	adrp	x16, 16000 <PyInit__xxsubinterpreters@@Base+0x11550>
    24d8:	ldr	x17, [x16, #4088]
    24dc:	add	x16, x16, #0xff8
    24e0:	br	x17
    24e4:	nop
    24e8:	nop
    24ec:	nop

00000000000024f0 <PyUnicode_FromFormat@plt>:
    24f0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    24f4:	ldr	x17, [x16]
    24f8:	add	x16, x16, #0x0
    24fc:	br	x17

0000000000002500 <PyList_New@plt>:
    2500:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2504:	ldr	x17, [x16, #8]
    2508:	add	x16, x16, #0x8
    250c:	br	x17

0000000000002510 <PyDict_SetItemString@plt>:
    2510:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2514:	ldr	x17, [x16, #16]
    2518:	add	x16, x16, #0x10
    251c:	br	x17

0000000000002520 <PyLong_AsLongLongAndOverflow@plt>:
    2520:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2524:	ldr	x17, [x16, #24]
    2528:	add	x16, x16, #0x18
    252c:	br	x17

0000000000002530 <strlen@plt>:
    2530:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2534:	ldr	x17, [x16, #32]
    2538:	add	x16, x16, #0x20
    253c:	br	x17

0000000000002540 <PyDict_Size@plt>:
    2540:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2544:	ldr	x17, [x16, #40]
    2548:	add	x16, x16, #0x28
    254c:	br	x17

0000000000002550 <fputs@plt>:
    2550:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2554:	ldr	x17, [x16, #48]
    2558:	add	x16, x16, #0x30
    255c:	br	x17

0000000000002560 <_PyInterpreterID_LookUp@plt>:
    2560:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2564:	ldr	x17, [x16, #56]
    2568:	add	x16, x16, #0x38
    256c:	br	x17

0000000000002570 <PyInterpreterState_ThreadHead@plt>:
    2570:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2574:	ldr	x17, [x16, #64]
    2578:	add	x16, x16, #0x40
    257c:	br	x17

0000000000002580 <PyArg_ParseTupleAndKeywords@plt>:
    2580:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2584:	ldr	x17, [x16, #72]
    2588:	add	x16, x16, #0x48
    258c:	br	x17

0000000000002590 <PyList_Insert@plt>:
    2590:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2594:	ldr	x17, [x16, #80]
    2598:	add	x16, x16, #0x50
    259c:	br	x17

00000000000025a0 <PyMem_Free@plt>:
    25a0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    25a4:	ldr	x17, [x16, #88]
    25a8:	add	x16, x16, #0x58
    25ac:	br	x17

00000000000025b0 <_PyCrossInterpreterData_NewObject@plt>:
    25b0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    25b4:	ldr	x17, [x16, #96]
    25b8:	add	x16, x16, #0x60
    25bc:	br	x17

00000000000025c0 <PyObject_GetAttrString@plt>:
    25c0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    25c4:	ldr	x17, [x16, #104]
    25c8:	add	x16, x16, #0x68
    25cc:	br	x17

00000000000025d0 <__cxa_finalize@plt>:
    25d0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    25d4:	ldr	x17, [x16, #112]
    25d8:	add	x16, x16, #0x70
    25dc:	br	x17

00000000000025e0 <Py_EndInterpreter@plt>:
    25e0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    25e4:	ldr	x17, [x16, #120]
    25e8:	add	x16, x16, #0x78
    25ec:	br	x17

00000000000025f0 <_Py_Dealloc@plt>:
    25f0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    25f4:	ldr	x17, [x16, #128]
    25f8:	add	x16, x16, #0x80
    25fc:	br	x17

0000000000002600 <PyInterpreterState_Next@plt>:
    2600:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2604:	ldr	x17, [x16, #136]
    2608:	add	x16, x16, #0x88
    260c:	br	x17

0000000000002610 <PyErr_NoMemory@plt>:
    2610:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2614:	ldr	x17, [x16, #144]
    2618:	add	x16, x16, #0x90
    261c:	br	x17

0000000000002620 <_PyCrossInterpreterData_Release@plt>:
    2620:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2624:	ldr	x17, [x16, #152]
    2628:	add	x16, x16, #0x98
    262c:	br	x17

0000000000002630 <_PyInterpreterState_GetIDObject@plt>:
    2630:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2634:	ldr	x17, [x16, #160]
    2638:	add	x16, x16, #0xa0
    263c:	br	x17

0000000000002640 <_PyType_Name@plt>:
    2640:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2644:	ldr	x17, [x16, #168]
    2648:	add	x16, x16, #0xa8
    264c:	br	x17

0000000000002650 <PyThread_acquire_lock@plt>:
    2650:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2654:	ldr	x17, [x16, #176]
    2658:	add	x16, x16, #0xb0
    265c:	br	x17

0000000000002660 <PyObject_RichCompare@plt>:
    2660:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2664:	ldr	x17, [x16, #184]
    2668:	add	x16, x16, #0xb8
    266c:	br	x17

0000000000002670 <_PyInterpreterState_GetMainModule@plt>:
    2670:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2674:	ldr	x17, [x16, #192]
    2678:	add	x16, x16, #0xc0
    267c:	br	x17

0000000000002680 <PyErr_SetString@plt>:
    2680:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2684:	ldr	x17, [x16, #200]
    2688:	add	x16, x16, #0xc8
    268c:	br	x17

0000000000002690 <PyInterpreterState_GetID@plt>:
    2690:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2694:	ldr	x17, [x16, #208]
    2698:	add	x16, x16, #0xd0
    269c:	br	x17

00000000000026a0 <PyErr_SetNone@plt>:
    26a0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    26a4:	ldr	x17, [x16, #216]
    26a8:	add	x16, x16, #0xd8
    26ac:	br	x17

00000000000026b0 <PyErr_ExceptionMatches@plt>:
    26b0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    26b4:	ldr	x17, [x16, #224]
    26b8:	add	x16, x16, #0xe0
    26bc:	br	x17

00000000000026c0 <Py_NewInterpreter@plt>:
    26c0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    26c4:	ldr	x17, [x16, #232]
    26c8:	add	x16, x16, #0xe8
    26cc:	br	x17

00000000000026d0 <PyType_Ready@plt>:
    26d0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    26d4:	ldr	x17, [x16, #240]
    26d8:	add	x16, x16, #0xf0
    26dc:	br	x17

00000000000026e0 <_PyObject_GetCrossInterpreterData@plt>:
    26e0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    26e4:	ldr	x17, [x16, #248]
    26e8:	add	x16, x16, #0xf8
    26ec:	br	x17

00000000000026f0 <PyErr_NewException@plt>:
    26f0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    26f4:	ldr	x17, [x16, #256]
    26f8:	add	x16, x16, #0x100
    26fc:	br	x17

0000000000002700 <PyErr_Clear@plt>:
    2700:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2704:	ldr	x17, [x16, #264]
    2708:	add	x16, x16, #0x108
    270c:	br	x17

0000000000002710 <_PyInterpreterState_RequireIDRef@plt>:
    2710:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2714:	ldr	x17, [x16, #272]
    2718:	add	x16, x16, #0x110
    271c:	br	x17

0000000000002720 <__gmon_start__@plt>:
    2720:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2724:	ldr	x17, [x16, #280]
    2728:	add	x16, x16, #0x118
    272c:	br	x17

0000000000002730 <PyArg_UnpackTuple@plt>:
    2730:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2734:	ldr	x17, [x16, #288]
    2738:	add	x16, x16, #0x120
    273c:	br	x17

0000000000002740 <PyErr_Occurred@plt>:
    2740:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2744:	ldr	x17, [x16, #296]
    2748:	add	x16, x16, #0x128
    274c:	br	x17

0000000000002750 <PyModule_Create2@plt>:
    2750:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2754:	ldr	x17, [x16, #304]
    2758:	add	x16, x16, #0x130
    275c:	br	x17

0000000000002760 <PyImport_ImportModule@plt>:
    2760:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2764:	ldr	x17, [x16, #312]
    2768:	add	x16, x16, #0x138
    276c:	br	x17

0000000000002770 <PyRun_StringFlags@plt>:
    2770:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2774:	ldr	x17, [x16, #320]
    2778:	add	x16, x16, #0x140
    277c:	br	x17

0000000000002780 <PyObject_CallFunctionObjArgs@plt>:
    2780:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2784:	ldr	x17, [x16, #328]
    2788:	add	x16, x16, #0x148
    278c:	br	x17

0000000000002790 <PyThreadState_Next@plt>:
    2790:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2794:	ldr	x17, [x16, #336]
    2798:	add	x16, x16, #0x150
    279c:	br	x17

00000000000027a0 <PyThread_allocate_lock@plt>:
    27a0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    27a4:	ldr	x17, [x16, #344]
    27a8:	add	x16, x16, #0x158
    27ac:	br	x17

00000000000027b0 <PyObject_Hash@plt>:
    27b0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    27b4:	ldr	x17, [x16, #352]
    27b8:	add	x16, x16, #0x160
    27bc:	br	x17

00000000000027c0 <PyThread_release_lock@plt>:
    27c0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    27c4:	ldr	x17, [x16, #360]
    27c8:	add	x16, x16, #0x168
    27cc:	br	x17

00000000000027d0 <PyDict_Next@plt>:
    27d0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    27d4:	ldr	x17, [x16, #368]
    27d8:	add	x16, x16, #0x170
    27dc:	br	x17

00000000000027e0 <PyUnicode_AsUTF8@plt>:
    27e0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    27e4:	ldr	x17, [x16, #376]
    27e8:	add	x16, x16, #0x178
    27ec:	br	x17

00000000000027f0 <strcpy@plt>:
    27f0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    27f4:	ldr	x17, [x16, #384]
    27f8:	add	x16, x16, #0x180
    27fc:	br	x17

0000000000002800 <_PyInterpreterState_Get@plt>:
    2800:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2804:	ldr	x17, [x16, #392]
    2808:	add	x16, x16, #0x188
    280c:	br	x17

0000000000002810 <_PyInterpreterID_New@plt>:
    2810:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2814:	ldr	x17, [x16, #400]
    2818:	add	x16, x16, #0x190
    281c:	br	x17

0000000000002820 <PyErr_Fetch@plt>:
    2820:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2824:	ldr	x17, [x16, #408]
    2828:	add	x16, x16, #0x198
    282c:	br	x17

0000000000002830 <_PyObject_New@plt>:
    2830:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2834:	ldr	x17, [x16, #416]
    2838:	add	x16, x16, #0x1a0
    283c:	br	x17

0000000000002840 <PyUnicode_FromString@plt>:
    2840:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2844:	ldr	x17, [x16, #424]
    2848:	add	x16, x16, #0x1a8
    284c:	br	x17

0000000000002850 <PyUnicode_InternFromString@plt>:
    2850:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2854:	ldr	x17, [x16, #432]
    2858:	add	x16, x16, #0x1b0
    285c:	br	x17

0000000000002860 <_PyCrossInterpreterData_RegisterClass@plt>:
    2860:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2864:	ldr	x17, [x16, #440]
    2868:	add	x16, x16, #0x1b8
    286c:	br	x17

0000000000002870 <PyDict_SetItem@plt>:
    2870:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2874:	ldr	x17, [x16, #448]
    2878:	add	x16, x16, #0x1c0
    287c:	br	x17

0000000000002880 <PyNumber_Check@plt>:
    2880:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2884:	ldr	x17, [x16, #456]
    2888:	add	x16, x16, #0x1c8
    288c:	br	x17

0000000000002890 <PyLong_AsLongLong@plt>:
    2890:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2894:	ldr	x17, [x16, #464]
    2898:	add	x16, x16, #0x1d0
    289c:	br	x17

00000000000028a0 <PyType_IsSubtype@plt>:
    28a0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    28a4:	ldr	x17, [x16, #472]
    28a8:	add	x16, x16, #0x1d8
    28ac:	br	x17

00000000000028b0 <PyUnicode_AsUTF8AndSize@plt>:
    28b0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    28b4:	ldr	x17, [x16, #480]
    28b8:	add	x16, x16, #0x1e0
    28bc:	br	x17

00000000000028c0 <PyErr_Format@plt>:
    28c0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    28c4:	ldr	x17, [x16, #488]
    28c8:	add	x16, x16, #0x1e8
    28cc:	br	x17

00000000000028d0 <PyModule_GetDict@plt>:
    28d0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    28d4:	ldr	x17, [x16, #496]
    28d8:	add	x16, x16, #0x1f0
    28dc:	br	x17

00000000000028e0 <PyLong_FromLongLong@plt>:
    28e0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    28e4:	ldr	x17, [x16, #504]
    28e8:	add	x16, x16, #0x1f8
    28ec:	br	x17

00000000000028f0 <PyInterpreterState_Head@plt>:
    28f0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    28f4:	ldr	x17, [x16, #512]
    28f8:	add	x16, x16, #0x200
    28fc:	br	x17

0000000000002900 <_PyObject_CheckCrossInterpreterData@plt>:
    2900:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2904:	ldr	x17, [x16, #520]
    2908:	add	x16, x16, #0x208
    290c:	br	x17

0000000000002910 <PyMem_Malloc@plt>:
    2910:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2914:	ldr	x17, [x16, #528]
    2918:	add	x16, x16, #0x210
    291c:	br	x17

0000000000002920 <PyThreadState_Swap@plt>:
    2920:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2924:	ldr	x17, [x16, #536]
    2928:	add	x16, x16, #0x218
    292c:	br	x17

0000000000002930 <PyThread_free_lock@plt>:
    2930:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2934:	ldr	x17, [x16, #544]
    2938:	add	x16, x16, #0x220
    293c:	br	x17

Disassembly of section .text:

0000000000002940 <PyInit__xxsubinterpreters@@Base-0x2170>:
    2940:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x11550>
    2944:	ldr	x0, [x0, #4040]
    2948:	cbz	x0, 2950 <PyThread_free_lock@plt+0x20>
    294c:	b	2720 <__gmon_start__@plt>
    2950:	ret
    2954:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x12550>
    2958:	add	x0, x0, #0x928
    295c:	adrp	x1, 17000 <PyInit__xxsubinterpreters@@Base+0x12550>
    2960:	add	x1, x1, #0x928
    2964:	cmp	x1, x0
    2968:	b.eq	2980 <PyThread_free_lock@plt+0x50>  // b.none
    296c:	adrp	x1, 16000 <PyInit__xxsubinterpreters@@Base+0x11550>
    2970:	ldr	x1, [x1, #3952]
    2974:	cbz	x1, 2980 <PyThread_free_lock@plt+0x50>
    2978:	mov	x16, x1
    297c:	br	x16
    2980:	ret
    2984:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x12550>
    2988:	add	x0, x0, #0x928
    298c:	adrp	x1, 17000 <PyInit__xxsubinterpreters@@Base+0x12550>
    2990:	add	x1, x1, #0x928
    2994:	sub	x1, x1, x0
    2998:	mov	x2, #0x2                   	// #2
    299c:	asr	x1, x1, #3
    29a0:	sdiv	x1, x1, x2
    29a4:	cbz	x1, 29bc <PyThread_free_lock@plt+0x8c>
    29a8:	adrp	x2, 16000 <PyInit__xxsubinterpreters@@Base+0x11550>
    29ac:	ldr	x2, [x2, #4064]
    29b0:	cbz	x2, 29bc <PyThread_free_lock@plt+0x8c>
    29b4:	mov	x16, x2
    29b8:	br	x16
    29bc:	ret
    29c0:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x12550>
    29c4:	ldrb	w1, [x0, #2344]
    29c8:	cbnz	w1, 2a0c <PyThread_free_lock@plt+0xdc>
    29cc:	stp	x29, x30, [sp, #-32]!
    29d0:	mov	x29, sp
    29d4:	str	x19, [sp, #16]
    29d8:	mov	x19, x0
    29dc:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x11550>
    29e0:	ldr	x0, [x0, #3968]
    29e4:	cbz	x0, 29f4 <PyThread_free_lock@plt+0xc4>
    29e8:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x12550>
    29ec:	ldr	x0, [x0, #552]
    29f0:	bl	25d0 <__cxa_finalize@plt>
    29f4:	bl	2954 <PyThread_free_lock@plt+0x24>
    29f8:	mov	w0, #0x1                   	// #1
    29fc:	strb	w0, [x19, #2344]
    2a00:	ldr	x19, [sp, #16]
    2a04:	ldp	x29, x30, [sp], #32
    2a08:	ret
    2a0c:	ret
    2a10:	b	2984 <PyThread_free_lock@plt+0x54>
    2a14:	stp	x29, x30, [sp, #-32]!
    2a18:	mov	x29, sp
    2a1c:	stp	x19, x20, [sp, #16]
    2a20:	mov	x19, x0
    2a24:	mov	x20, x1
    2a28:	mov	x0, #0x10                  	// #16
    2a2c:	bl	2910 <PyMem_Malloc@plt>
    2a30:	cbz	x0, 2a88 <PyThread_free_lock@plt+0x158>
    2a34:	ldr	x1, [x19, #16]
    2a38:	str	x1, [x0]
    2a3c:	ldr	w1, [x19, #24]
    2a40:	str	w1, [x0, #8]
    2a44:	ldr	w1, [x19, #28]
    2a48:	str	w1, [x0, #12]
    2a4c:	str	x0, [x20]
    2a50:	ldr	x0, [x19]
    2a54:	add	x0, x0, #0x1
    2a58:	str	x0, [x19]
    2a5c:	adrp	x0, 3000 <PyThread_free_lock@plt+0x6d0>
    2a60:	add	x0, x0, #0x410
    2a64:	str	x0, [x20, #24]
    2a68:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x11550>
    2a6c:	str	x19, [x20, #8]
    2a70:	ldr	x0, [x0, #3960]
    2a74:	str	x0, [x20, #32]
    2a78:	mov	w0, #0x0                   	// #0
    2a7c:	ldp	x19, x20, [sp, #16]
    2a80:	ldp	x29, x30, [sp], #32
    2a84:	ret
    2a88:	mov	w0, #0xffffffff            	// #-1
    2a8c:	b	2a7c <PyThread_free_lock@plt+0x14c>
    2a90:	stp	x29, x30, [sp, #-32]!
    2a94:	mov	w1, #0x1                   	// #1
    2a98:	mov	x29, sp
    2a9c:	str	x19, [sp, #16]
    2aa0:	mov	x19, x0
    2aa4:	ldr	x0, [x0]
    2aa8:	bl	2650 <PyThread_acquire_lock@plt>
    2aac:	ldr	x0, [x19, #32]
    2ab0:	cbz	x0, 2abc <PyThread_free_lock@plt+0x18c>
    2ab4:	bl	25a0 <PyMem_Free@plt>
    2ab8:	str	xzr, [x19, #32]
    2abc:	ldr	x0, [x19]
    2ac0:	ldr	x19, [sp, #16]
    2ac4:	ldp	x29, x30, [sp], #32
    2ac8:	b	27c0 <PyThread_release_lock@plt>
    2acc:	stp	x29, x30, [sp, #-64]!
    2ad0:	mov	x29, sp
    2ad4:	stp	x19, x20, [sp, #16]
    2ad8:	mov	x20, x0
    2adc:	mov	x0, #0x18                  	// #24
    2ae0:	stp	x21, x22, [sp, #32]
    2ae4:	mov	x22, x1
    2ae8:	mov	w21, w3
    2aec:	str	x23, [sp, #48]
    2af0:	mov	x23, x2
    2af4:	bl	2910 <PyMem_Malloc@plt>
    2af8:	mov	x19, x0
    2afc:	cbnz	x0, 2b1c <PyThread_free_lock@plt+0x1ec>
    2b00:	bl	2610 <PyErr_NoMemory@plt>
    2b04:	mov	x0, x19
    2b08:	ldp	x19, x20, [sp, #16]
    2b0c:	ldp	x21, x22, [sp, #32]
    2b10:	ldr	x23, [sp, #48]
    2b14:	ldp	x29, x30, [sp], #64
    2b18:	ret
    2b1c:	mov	w0, #0x1                   	// #1
    2b20:	stp	xzr, x23, [x19]
    2b24:	str	w0, [x19, #16]
    2b28:	cbnz	x22, 2b58 <PyThread_free_lock@plt+0x228>
    2b2c:	cbz	w21, 2b44 <PyThread_free_lock@plt+0x214>
    2b30:	str	x19, [x20, #16]
    2b34:	ldr	x0, [x20]
    2b38:	add	x0, x0, #0x1
    2b3c:	str	x0, [x20]
    2b40:	b	2b04 <PyThread_free_lock@plt+0x1d4>
    2b44:	str	x19, [x20, #24]
    2b48:	ldr	x0, [x20, #8]
    2b4c:	add	x0, x0, #0x1
    2b50:	str	x0, [x20, #8]
    2b54:	b	2b04 <PyThread_free_lock@plt+0x1d4>
    2b58:	str	x19, [x22]
    2b5c:	cbz	w21, 2b48 <PyThread_free_lock@plt+0x218>
    2b60:	b	2b34 <PyThread_free_lock@plt+0x204>
    2b64:	stp	x29, x30, [sp, #-32]!
    2b68:	mov	x29, sp
    2b6c:	stp	x19, x20, [sp, #16]
    2b70:	bl	27e0 <PyUnicode_AsUTF8@plt>
    2b74:	cbz	x0, 2bb0 <PyThread_free_lock@plt+0x280>
    2b78:	mov	x20, x0
    2b7c:	bl	2530 <strlen@plt>
    2b80:	add	x0, x0, #0x1
    2b84:	bl	2910 <PyMem_Malloc@plt>
    2b88:	mov	x19, x0
    2b8c:	cbnz	x0, 2ba4 <PyThread_free_lock@plt+0x274>
    2b90:	bl	2610 <PyErr_NoMemory@plt>
    2b94:	mov	x0, x19
    2b98:	ldp	x19, x20, [sp, #16]
    2b9c:	ldp	x29, x30, [sp], #32
    2ba0:	ret
    2ba4:	mov	x1, x20
    2ba8:	bl	27f0 <strcpy@plt>
    2bac:	b	2b94 <PyThread_free_lock@plt+0x264>
    2bb0:	mov	x19, #0x0                   	// #0
    2bb4:	b	2b94 <PyThread_free_lock@plt+0x264>
    2bb8:	ldr	x1, [x0, #16]
    2bbc:	adrp	x0, 4000 <PyThread_free_lock@plt+0x16d0>
    2bc0:	add	x0, x0, #0xd20
    2bc4:	b	24f0 <PyUnicode_FromFormat@plt>
    2bc8:	mov	x0, #0x0                   	// #0
    2bcc:	b	2810 <_PyInterpreterID_New@plt>
    2bd0:	stp	x29, x30, [sp, #-16]!
    2bd4:	mov	x29, sp
    2bd8:	bl	2800 <_PyInterpreterState_Get@plt>
    2bdc:	cbz	x0, 2be8 <PyThread_free_lock@plt+0x2b8>
    2be0:	ldp	x29, x30, [sp], #16
    2be4:	b	2630 <_PyInterpreterState_GetIDObject@plt>
    2be8:	ldp	x29, x30, [sp], #16
    2bec:	ret
    2bf0:	ldr	x0, [x0, #16]
    2bf4:	b	28e0 <PyLong_FromLongLong@plt>
    2bf8:	stp	x29, x30, [sp, #-32]!
    2bfc:	mov	x29, sp
    2c00:	str	x19, [sp, #16]
    2c04:	mov	x19, x0
    2c08:	ldr	x0, [x0, #8]
    2c0c:	bl	2640 <_PyType_Name@plt>
    2c10:	mov	x1, x0
    2c14:	ldr	w0, [x19, #24]
    2c18:	cmp	w0, #0x1
    2c1c:	b.eq	2c40 <PyThread_free_lock@plt+0x310>  // b.none
    2c20:	cmn	w0, #0x1
    2c24:	b.eq	2c4c <PyThread_free_lock@plt+0x31c>  // b.none
    2c28:	adrp	x2, 4000 <PyThread_free_lock@plt+0x16d0>
    2c2c:	add	x0, x2, #0xd4a
    2c30:	ldr	x2, [x19, #16]
    2c34:	ldr	x19, [sp, #16]
    2c38:	ldp	x29, x30, [sp], #32
    2c3c:	b	24f0 <PyUnicode_FromFormat@plt>
    2c40:	adrp	x2, 4000 <PyThread_free_lock@plt+0x16d0>
    2c44:	add	x0, x2, #0xd24
    2c48:	b	2c30 <PyThread_free_lock@plt+0x300>
    2c4c:	adrp	x2, 4000 <PyThread_free_lock@plt+0x16d0>
    2c50:	add	x0, x2, #0xd37
    2c54:	b	2c30 <PyThread_free_lock@plt+0x300>
    2c58:	ldr	x1, [x0]
    2c5c:	sub	x1, x1, #0x1
    2c60:	str	x1, [x0]
    2c64:	cbnz	x1, 2c6c <PyThread_free_lock@plt+0x33c>
    2c68:	b	25f0 <_Py_Dealloc@plt>
    2c6c:	ret
    2c70:	stp	x29, x30, [sp, #-48]!
    2c74:	mov	x0, #0x0                   	// #0
    2c78:	mov	x29, sp
    2c7c:	stp	x19, x20, [sp, #16]
    2c80:	stp	x21, x22, [sp, #32]
    2c84:	bl	2500 <PyList_New@plt>
    2c88:	mov	x19, x0
    2c8c:	cbz	x0, 2cb8 <PyThread_free_lock@plt+0x388>
    2c90:	bl	28f0 <PyInterpreterState_Head@plt>
    2c94:	mov	x20, x0
    2c98:	cbz	x0, 2cb8 <PyThread_free_lock@plt+0x388>
    2c9c:	mov	x0, x20
    2ca0:	bl	2630 <_PyInterpreterState_GetIDObject@plt>
    2ca4:	mov	x21, x0
    2ca8:	cbnz	x0, 2ccc <PyThread_free_lock@plt+0x39c>
    2cac:	mov	x0, x19
    2cb0:	mov	x19, #0x0                   	// #0
    2cb4:	bl	2c58 <PyThread_free_lock@plt+0x328>
    2cb8:	mov	x0, x19
    2cbc:	ldp	x19, x20, [sp, #16]
    2cc0:	ldp	x21, x22, [sp, #32]
    2cc4:	ldp	x29, x30, [sp], #48
    2cc8:	ret
    2ccc:	mov	x2, x0
    2cd0:	mov	x1, #0x0                   	// #0
    2cd4:	mov	x0, x19
    2cd8:	bl	2590 <PyList_Insert@plt>
    2cdc:	mov	w22, w0
    2ce0:	mov	x0, x21
    2ce4:	bl	2c58 <PyThread_free_lock@plt+0x328>
    2ce8:	tbnz	w22, #31, 2cac <PyThread_free_lock@plt+0x37c>
    2cec:	mov	x0, x20
    2cf0:	bl	2600 <PyInterpreterState_Next@plt>
    2cf4:	b	2c94 <PyThread_free_lock@plt+0x364>
    2cf8:	stp	x29, x30, [sp, #-32]!
    2cfc:	mov	x29, sp
    2d00:	ldr	x0, [x0, #16]
    2d04:	stp	x19, x20, [sp, #16]
    2d08:	bl	28e0 <PyLong_FromLongLong@plt>
    2d0c:	cbz	x0, 2d34 <PyThread_free_lock@plt+0x404>
    2d10:	mov	x20, x0
    2d14:	bl	27b0 <PyObject_Hash@plt>
    2d18:	mov	x19, x0
    2d1c:	mov	x0, x20
    2d20:	bl	2c58 <PyThread_free_lock@plt+0x328>
    2d24:	mov	x0, x19
    2d28:	ldp	x19, x20, [sp, #16]
    2d2c:	ldp	x29, x30, [sp], #32
    2d30:	ret
    2d34:	mov	x19, #0xffffffffffffffff    	// #-1
    2d38:	b	2d24 <PyThread_free_lock@plt+0x3f4>
    2d3c:	stp	x29, x30, [sp, #-48]!
    2d40:	adrp	x2, 17000 <PyInit__xxsubinterpreters@@Base+0x12550>
    2d44:	mov	x29, sp
    2d48:	stp	x19, x20, [sp, #16]
    2d4c:	mov	x19, x0
    2d50:	ldr	x0, [x0, #8]
    2d54:	str	x21, [sp, #32]
    2d58:	mov	x21, x1
    2d5c:	add	x1, x2, #0x238
    2d60:	cmp	x0, x1
    2d64:	b.ne	2d78 <PyThread_free_lock@plt+0x448>  // b.any
    2d68:	ldr	x0, [x19, #16]
    2d6c:	mov	w20, #0x1                   	// #1
    2d70:	str	x0, [x21]
    2d74:	b	2dcc <PyThread_free_lock@plt+0x49c>
    2d78:	bl	28a0 <PyType_IsSubtype@plt>
    2d7c:	mov	w20, w0
    2d80:	cbnz	w0, 2d68 <PyThread_free_lock@plt+0x438>
    2d84:	ldr	x0, [x19, #8]
    2d88:	ldr	x1, [x0, #96]
    2d8c:	cbz	x1, 2de8 <PyThread_free_lock@plt+0x4b8>
    2d90:	ldr	x1, [x1, #264]
    2d94:	cbz	x1, 2de8 <PyThread_free_lock@plt+0x4b8>
    2d98:	mov	x0, x19
    2d9c:	bl	2890 <PyLong_AsLongLong@plt>
    2da0:	cmn	x0, #0x1
    2da4:	b.ne	2de0 <PyThread_free_lock@plt+0x4b0>  // b.any
    2da8:	bl	2740 <PyErr_Occurred@plt>
    2dac:	cbnz	x0, 2dcc <PyThread_free_lock@plt+0x49c>
    2db0:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x11550>
    2db4:	adrp	x1, 4000 <PyThread_free_lock@plt+0x16d0>
    2db8:	mov	x2, x19
    2dbc:	add	x1, x1, #0xd52
    2dc0:	ldr	x0, [x0, #4016]
    2dc4:	ldr	x0, [x0]
    2dc8:	bl	28c0 <PyErr_Format@plt>
    2dcc:	mov	w0, w20
    2dd0:	ldp	x19, x20, [sp, #16]
    2dd4:	ldr	x21, [sp, #32]
    2dd8:	ldp	x29, x30, [sp], #48
    2ddc:	ret
    2de0:	tbz	x0, #63, 2d6c <PyThread_free_lock@plt+0x43c>
    2de4:	b	2db0 <PyThread_free_lock@plt+0x480>
    2de8:	ldr	x2, [x0, #24]
    2dec:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x11550>
    2df0:	adrp	x1, 4000 <PyThread_free_lock@plt+0x16d0>
    2df4:	add	x1, x1, #0xd80
    2df8:	ldr	x0, [x0, #4024]
    2dfc:	b	2dc4 <PyThread_free_lock@plt+0x494>
    2e00:	stp	x29, x30, [sp, #-32]!
    2e04:	mov	x0, x1
    2e08:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x12550>
    2e0c:	mov	x29, sp
    2e10:	mov	x1, x2
    2e14:	add	x4, sp, #0x18
    2e18:	adrp	x2, 4000 <PyThread_free_lock@plt+0x16d0>
    2e1c:	add	x3, x3, #0x3d8
    2e20:	add	x2, x2, #0xda6
    2e24:	bl	2580 <PyArg_ParseTupleAndKeywords@plt>
    2e28:	cbz	w0, 2e64 <PyThread_free_lock@plt+0x534>
    2e2c:	ldr	x0, [sp, #24]
    2e30:	bl	2900 <_PyObject_CheckCrossInterpreterData@plt>
    2e34:	cbnz	w0, 2e54 <PyThread_free_lock@plt+0x524>
    2e38:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x11550>
    2e3c:	ldr	x0, [x0, #4056]
    2e40:	ldr	x1, [x0]
    2e44:	add	x1, x1, #0x1
    2e48:	str	x1, [x0]
    2e4c:	ldp	x29, x30, [sp], #32
    2e50:	ret
    2e54:	bl	2700 <PyErr_Clear@plt>
    2e58:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x11550>
    2e5c:	ldr	x0, [x0, #4032]
    2e60:	b	2e40 <PyThread_free_lock@plt+0x510>
    2e64:	mov	x0, #0x0                   	// #0
    2e68:	b	2e4c <PyThread_free_lock@plt+0x51c>
    2e6c:	stp	x29, x30, [sp, #-32]!
    2e70:	mov	x29, sp
    2e74:	str	x19, [sp, #16]
    2e78:	bl	2570 <PyInterpreterState_ThreadHead@plt>
    2e7c:	mov	x19, x0
    2e80:	bl	2790 <PyThreadState_Next@plt>
    2e84:	cbz	x0, 2eb0 <PyThread_free_lock@plt+0x580>
    2e88:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x11550>
    2e8c:	adrp	x1, 4000 <PyThread_free_lock@plt+0x16d0>
    2e90:	add	x1, x1, #0xdb5
    2e94:	ldr	x0, [x0, #4000]
    2e98:	ldr	x0, [x0]
    2e9c:	bl	2680 <PyErr_SetString@plt>
    2ea0:	mov	w0, #0xffffffff            	// #-1
    2ea4:	ldr	x19, [sp, #16]
    2ea8:	ldp	x29, x30, [sp], #32
    2eac:	ret
    2eb0:	ldr	x0, [x19, #24]
    2eb4:	cbnz	x0, 2ec8 <PyThread_free_lock@plt+0x598>
    2eb8:	bl	2740 <PyErr_Occurred@plt>
    2ebc:	cmp	x0, #0x0
    2ec0:	csetm	w0, ne  // ne = any
    2ec4:	b	2ea4 <PyThread_free_lock@plt+0x574>
    2ec8:	ldrb	w0, [x0, #116]
    2ecc:	b	2ea4 <PyThread_free_lock@plt+0x574>
    2ed0:	stp	x29, x30, [sp, #-48]!
    2ed4:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x12550>
    2ed8:	add	x3, x3, #0x3d8
    2edc:	mov	x29, sp
    2ee0:	mov	x0, x1
    2ee4:	add	x4, sp, #0x28
    2ee8:	mov	x1, x2
    2eec:	add	x3, x3, #0x10
    2ef0:	adrp	x2, 4000 <PyThread_free_lock@plt+0x16d0>
    2ef4:	add	x2, x2, #0xdda
    2ef8:	stp	x19, x20, [sp, #16]
    2efc:	bl	2580 <PyArg_ParseTupleAndKeywords@plt>
    2f00:	cbnz	w0, 2f14 <PyThread_free_lock@plt+0x5e4>
    2f04:	mov	x0, #0x0                   	// #0
    2f08:	ldp	x19, x20, [sp, #16]
    2f0c:	ldp	x29, x30, [sp], #48
    2f10:	ret
    2f14:	ldr	x0, [sp, #40]
    2f18:	bl	2560 <_PyInterpreterID_LookUp@plt>
    2f1c:	mov	x19, x0
    2f20:	cbz	x0, 2f04 <PyThread_free_lock@plt+0x5d4>
    2f24:	bl	2800 <_PyInterpreterState_Get@plt>
    2f28:	cbz	x0, 2f04 <PyThread_free_lock@plt+0x5d4>
    2f2c:	cmp	x19, x0
    2f30:	b.ne	2f50 <PyThread_free_lock@plt+0x620>  // b.any
    2f34:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x11550>
    2f38:	adrp	x1, 4000 <PyThread_free_lock@plt+0x16d0>
    2f3c:	add	x1, x1, #0xde4
    2f40:	ldr	x0, [x0, #4000]
    2f44:	ldr	x0, [x0]
    2f48:	bl	2680 <PyErr_SetString@plt>
    2f4c:	b	2f04 <PyThread_free_lock@plt+0x5d4>
    2f50:	mov	x0, x19
    2f54:	bl	2e6c <PyThread_free_lock@plt+0x53c>
    2f58:	cmp	w0, #0x0
    2f5c:	b.lt	2f04 <PyThread_free_lock@plt+0x5d4>  // b.tstop
    2f60:	b.eq	2f80 <PyThread_free_lock@plt+0x650>  // b.none
    2f64:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x11550>
    2f68:	adrp	x1, 4000 <PyThread_free_lock@plt+0x16d0>
    2f6c:	add	x1, x1, #0xe0b
    2f70:	ldr	x0, [x0, #4000]
    2f74:	ldr	x0, [x0]
    2f78:	bl	28c0 <PyErr_Format@plt>
    2f7c:	b	2f04 <PyThread_free_lock@plt+0x5d4>
    2f80:	mov	x0, x19
    2f84:	bl	2570 <PyInterpreterState_ThreadHead@plt>
    2f88:	mov	x20, x0
    2f8c:	bl	2920 <PyThreadState_Swap@plt>
    2f90:	mov	x19, x0
    2f94:	mov	x0, x20
    2f98:	bl	25e0 <Py_EndInterpreter@plt>
    2f9c:	mov	x0, x19
    2fa0:	bl	2920 <PyThreadState_Swap@plt>
    2fa4:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x11550>
    2fa8:	ldr	x0, [x0, #4048]
    2fac:	ldr	x1, [x0]
    2fb0:	add	x1, x1, #0x1
    2fb4:	str	x1, [x0]
    2fb8:	b	2f08 <PyThread_free_lock@plt+0x5d8>
    2fbc:	stp	x29, x30, [sp, #-32]!
    2fc0:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x12550>
    2fc4:	add	x3, x3, #0x3d8
    2fc8:	mov	x29, sp
    2fcc:	mov	x0, x1
    2fd0:	add	x4, sp, #0x18
    2fd4:	mov	x1, x2
    2fd8:	add	x3, x3, #0x20
    2fdc:	adrp	x2, 4000 <PyThread_free_lock@plt+0x16d0>
    2fe0:	add	x2, x2, #0xe27
    2fe4:	bl	2580 <PyArg_ParseTupleAndKeywords@plt>
    2fe8:	cbnz	w0, 2ff8 <PyThread_free_lock@plt+0x6c8>
    2fec:	mov	x0, #0x0                   	// #0
    2ff0:	ldp	x29, x30, [sp], #32
    2ff4:	ret
    2ff8:	ldr	x0, [sp, #24]
    2ffc:	bl	2560 <_PyInterpreterID_LookUp@plt>
    3000:	cbz	x0, 2fec <PyThread_free_lock@plt+0x6bc>
    3004:	bl	2e6c <PyThread_free_lock@plt+0x53c>
    3008:	cmp	w0, #0x0
    300c:	b.lt	2fec <PyThread_free_lock@plt+0x6bc>  // b.tstop
    3010:	b.eq	302c <PyThread_free_lock@plt+0x6fc>  // b.none
    3014:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x11550>
    3018:	ldr	x0, [x0, #4056]
    301c:	ldr	x1, [x0]
    3020:	add	x1, x1, #0x1
    3024:	str	x1, [x0]
    3028:	b	2ff0 <PyThread_free_lock@plt+0x6c0>
    302c:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x11550>
    3030:	ldr	x0, [x0, #4032]
    3034:	b	301c <PyThread_free_lock@plt+0x6ec>
    3038:	stp	x29, x30, [sp, #-48]!
    303c:	mov	x0, x1
    3040:	mov	x3, #0x0                   	// #0
    3044:	mov	x29, sp
    3048:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x550>
    304c:	mov	x2, #0x0                   	// #0
    3050:	add	x1, x1, #0x2a3
    3054:	stp	x19, x20, [sp, #16]
    3058:	str	x21, [sp, #32]
    305c:	bl	2730 <PyArg_UnpackTuple@plt>
    3060:	cbz	w0, 309c <PyThread_free_lock@plt+0x76c>
    3064:	mov	x0, #0x0                   	// #0
    3068:	bl	2920 <PyThreadState_Swap@plt>
    306c:	mov	x20, x0
    3070:	bl	26c0 <Py_NewInterpreter@plt>
    3074:	mov	x19, x0
    3078:	mov	x0, x20
    307c:	bl	2920 <PyThreadState_Swap@plt>
    3080:	cbnz	x19, 30a4 <PyThread_free_lock@plt+0x774>
    3084:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x11550>
    3088:	adrp	x1, 4000 <PyThread_free_lock@plt+0x16d0>
    308c:	add	x1, x1, #0xe34
    3090:	ldr	x0, [x0, #4000]
    3094:	ldr	x0, [x0]
    3098:	bl	2680 <PyErr_SetString@plt>
    309c:	mov	x20, #0x0                   	// #0
    30a0:	b	30d0 <PyThread_free_lock@plt+0x7a0>
    30a4:	ldr	x0, [x19, #16]
    30a8:	bl	2630 <_PyInterpreterState_GetIDObject@plt>
    30ac:	mov	x20, x0
    30b0:	cbnz	x0, 30e4 <PyThread_free_lock@plt+0x7b4>
    30b4:	mov	x0, x19
    30b8:	bl	2920 <PyThreadState_Swap@plt>
    30bc:	mov	x21, x0
    30c0:	mov	x0, x19
    30c4:	bl	25e0 <Py_EndInterpreter@plt>
    30c8:	mov	x0, x21
    30cc:	bl	2920 <PyThreadState_Swap@plt>
    30d0:	mov	x0, x20
    30d4:	ldp	x19, x20, [sp, #16]
    30d8:	ldr	x21, [sp, #32]
    30dc:	ldp	x29, x30, [sp], #48
    30e0:	ret
    30e4:	ldr	x0, [x19, #16]
    30e8:	mov	w1, #0x1                   	// #1
    30ec:	bl	2710 <_PyInterpreterState_RequireIDRef@plt>
    30f0:	b	30d0 <PyThread_free_lock@plt+0x7a0>
    30f4:	stp	x29, x30, [sp, #-64]!
    30f8:	mov	x29, sp
    30fc:	stp	x19, x20, [sp, #16]
    3100:	stp	x21, x22, [sp, #32]
    3104:	mov	x21, x0
    3108:	sub	w0, w2, #0x2
    310c:	cmp	w0, #0x1
    3110:	b.ls	312c <PyThread_free_lock@plt+0x7fc>  // b.plast
    3114:	adrp	x19, 16000 <PyInit__xxsubinterpreters@@Base+0x11550>
    3118:	ldr	x19, [x19, #3992]
    311c:	ldr	x0, [x19]
    3120:	add	x0, x0, #0x1
    3124:	str	x0, [x19]
    3128:	b	31b8 <PyThread_free_lock@plt+0x888>
    312c:	ldr	x0, [x21, #8]
    3130:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x12550>
    3134:	mov	x20, x1
    3138:	add	x1, x3, #0x238
    313c:	mov	w22, w2
    3140:	mov	x19, x3
    3144:	cmp	x0, x1
    3148:	b.eq	3154 <PyThread_free_lock@plt+0x824>  // b.none
    314c:	bl	28a0 <PyType_IsSubtype@plt>
    3150:	cbz	w0, 3114 <PyThread_free_lock@plt+0x7e4>
    3154:	ldr	x0, [x20, #8]
    3158:	add	x1, x19, #0x238
    315c:	cmp	x0, x1
    3160:	b.ne	317c <PyThread_free_lock@plt+0x84c>  // b.any
    3164:	ldr	w0, [x20, #24]
    3168:	ldr	w1, [x21, #24]
    316c:	cmp	w1, w0
    3170:	b.eq	31cc <PyThread_free_lock@plt+0x89c>  // b.none
    3174:	mov	w19, #0x0                   	// #0
    3178:	b	31dc <PyThread_free_lock@plt+0x8ac>
    317c:	bl	28a0 <PyType_IsSubtype@plt>
    3180:	mov	w19, w0
    3184:	cbnz	w0, 3164 <PyThread_free_lock@plt+0x834>
    3188:	ldr	x0, [x20, #8]
    318c:	ldr	x0, [x0, #168]
    3190:	tbz	w0, #24, 3224 <PyThread_free_lock@plt+0x8f4>
    3194:	mov	x0, x20
    3198:	add	x1, sp, #0x3c
    319c:	bl	2520 <PyLong_AsLongLongAndOverflow@plt>
    31a0:	mov	x20, x0
    31a4:	cmn	x0, #0x1
    31a8:	b.ne	320c <PyThread_free_lock@plt+0x8dc>  // b.any
    31ac:	bl	2740 <PyErr_Occurred@plt>
    31b0:	cbz	x0, 320c <PyThread_free_lock@plt+0x8dc>
    31b4:	mov	x19, #0x0                   	// #0
    31b8:	mov	x0, x19
    31bc:	ldp	x19, x20, [sp, #16]
    31c0:	ldp	x21, x22, [sp, #32]
    31c4:	ldp	x29, x30, [sp], #64
    31c8:	ret
    31cc:	ldr	x0, [x20, #16]
    31d0:	ldr	x1, [x21, #16]
    31d4:	cmp	x1, x0
    31d8:	cset	w19, eq  // eq = none
    31dc:	cmp	w22, #0x2
    31e0:	and	w0, w19, #0x1
    31e4:	csel	w0, w0, wzr, eq  // eq = none
    31e8:	cbnz	w0, 3200 <PyThread_free_lock@plt+0x8d0>
    31ec:	eor	w19, w19, #0x1
    31f0:	cmp	w22, #0x3
    31f4:	and	w19, w19, #0x1
    31f8:	csel	w19, w19, wzr, eq  // eq = none
    31fc:	cbz	w19, 3260 <PyThread_free_lock@plt+0x930>
    3200:	adrp	x19, 16000 <PyInit__xxsubinterpreters@@Base+0x11550>
    3204:	ldr	x19, [x19, #4056]
    3208:	b	311c <PyThread_free_lock@plt+0x7ec>
    320c:	ldr	w0, [sp, #60]
    3210:	cbnz	w0, 31dc <PyThread_free_lock@plt+0x8ac>
    3214:	tbnz	x20, #63, 3174 <PyThread_free_lock@plt+0x844>
    3218:	ldr	x0, [x21, #16]
    321c:	cmp	x0, x20
    3220:	b	31d8 <PyThread_free_lock@plt+0x8a8>
    3224:	mov	x0, x20
    3228:	bl	2880 <PyNumber_Check@plt>
    322c:	cbz	w0, 3114 <PyThread_free_lock@plt+0x7e4>
    3230:	ldr	x0, [x21, #16]
    3234:	bl	28e0 <PyLong_FromLongLong@plt>
    3238:	mov	x19, x0
    323c:	cbz	x0, 31b8 <PyThread_free_lock@plt+0x888>
    3240:	mov	x1, x20
    3244:	mov	w2, w22
    3248:	bl	2660 <PyObject_RichCompare@plt>
    324c:	mov	x20, x0
    3250:	mov	x0, x19
    3254:	mov	x19, x20
    3258:	bl	2c58 <PyThread_free_lock@plt+0x328>
    325c:	b	31b8 <PyThread_free_lock@plt+0x888>
    3260:	adrp	x19, 16000 <PyInit__xxsubinterpreters@@Base+0x11550>
    3264:	ldr	x19, [x19, #4032]
    3268:	b	311c <PyThread_free_lock@plt+0x7ec>
    326c:	stp	x29, x30, [sp, #-32]!
    3270:	mov	x29, sp
    3274:	stp	x19, x20, [sp, #16]
    3278:	mov	x19, x0
    327c:	cbnz	x19, 328c <PyThread_free_lock@plt+0x95c>
    3280:	ldp	x19, x20, [sp, #16]
    3284:	ldp	x29, x30, [sp], #32
    3288:	ret
    328c:	ldp	x0, x20, [x19]
    3290:	cbz	x0, 32a4 <PyThread_free_lock@plt+0x974>
    3294:	bl	2620 <_PyCrossInterpreterData_Release@plt>
    3298:	ldr	x0, [x19]
    329c:	bl	25a0 <PyMem_Free@plt>
    32a0:	str	xzr, [x19]
    32a4:	str	xzr, [x19, #8]
    32a8:	mov	x0, x19
    32ac:	mov	x19, x20
    32b0:	bl	25a0 <PyMem_Free@plt>
    32b4:	b	327c <PyThread_free_lock@plt+0x94c>
    32b8:	stp	x29, x30, [sp, #-64]!
    32bc:	mov	x29, sp
    32c0:	stp	x19, x20, [sp, #16]
    32c4:	mov	x19, x0
    32c8:	stp	x21, x22, [sp, #32]
    32cc:	mov	x21, #0x0                   	// #0
    32d0:	stp	x23, x24, [sp, #48]
    32d4:	mov	x23, #0x30                  	// #48
    32d8:	ldp	x0, x20, [x19]
    32dc:	cmp	x0, x21
    32e0:	b.gt	3304 <PyThread_free_lock@plt+0x9d4>
    32e4:	mov	x0, x20
    32e8:	bl	25a0 <PyMem_Free@plt>
    32ec:	mov	x0, x19
    32f0:	ldp	x19, x20, [sp, #16]
    32f4:	ldp	x21, x22, [sp, #32]
    32f8:	ldp	x23, x24, [sp, #48]
    32fc:	ldp	x29, x30, [sp], #64
    3300:	b	25a0 <PyMem_Free@plt>
    3304:	mul	x22, x21, x23
    3308:	add	x24, x20, x22
    330c:	ldr	x0, [x20, x22]
    3310:	cbz	x0, 331c <PyThread_free_lock@plt+0x9ec>
    3314:	bl	25a0 <PyMem_Free@plt>
    3318:	str	xzr, [x20, x22]
    331c:	add	x0, x24, #0x8
    3320:	add	x21, x21, #0x1
    3324:	bl	2620 <_PyCrossInterpreterData_Release@plt>
    3328:	b	32d8 <PyThread_free_lock@plt+0x9a8>
    332c:	stp	x29, x30, [sp, #-64]!
    3330:	mov	x29, sp
    3334:	stp	x19, x20, [sp, #16]
    3338:	mov	x20, x3
    333c:	stp	x21, x22, [sp, #32]
    3340:	mov	x21, x1
    3344:	mov	w22, w4
    3348:	stp	x23, x24, [sp, #48]
    334c:	mov	w24, w2
    3350:	mov	w23, w5
    3354:	bl	2830 <_PyObject_New@plt>
    3358:	mov	x19, x0
    335c:	cbz	x0, 33c0 <PyThread_free_lock@plt+0xa90>
    3360:	ldr	x0, [x20]
    3364:	str	x21, [x19, #16]
    3368:	stp	w24, w23, [x19, #24]
    336c:	mov	w1, #0x1                   	// #1
    3370:	str	x20, [x19, #32]
    3374:	bl	2650 <PyThread_acquire_lock@plt>
    3378:	ldr	x0, [x20, #8]
    337c:	cbnz	x0, 33d8 <PyThread_free_lock@plt+0xaa8>
    3380:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x12550>
    3384:	mov	x2, x21
    3388:	mov	w21, #0xffffffff            	// #-1
    338c:	adrp	x1, 4000 <PyThread_free_lock@plt+0x16d0>
    3390:	ldr	x0, [x0, #2352]
    3394:	add	x1, x1, #0xe50
    3398:	bl	28c0 <PyErr_Format@plt>
    339c:	ldr	x0, [x20]
    33a0:	bl	27c0 <PyThread_release_lock@plt>
    33a4:	cbz	w21, 33c0 <PyThread_free_lock@plt+0xa90>
    33a8:	cbz	w22, 33ec <PyThread_free_lock@plt+0xabc>
    33ac:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x12550>
    33b0:	ldr	x0, [x0, #2352]
    33b4:	bl	26b0 <PyErr_ExceptionMatches@plt>
    33b8:	cbz	w0, 33ec <PyThread_free_lock@plt+0xabc>
    33bc:	bl	2700 <PyErr_Clear@plt>
    33c0:	mov	x0, x19
    33c4:	ldp	x19, x20, [sp, #16]
    33c8:	ldp	x21, x22, [sp, #32]
    33cc:	ldp	x23, x24, [sp, #48]
    33d0:	ldp	x29, x30, [sp], #64
    33d4:	ret
    33d8:	ldr	x1, [x0]
    33dc:	cmp	x21, x1
    33e0:	b.eq	33fc <PyThread_free_lock@plt+0xacc>  // b.none
    33e4:	ldr	x0, [x0, #16]
    33e8:	b	337c <PyThread_free_lock@plt+0xa4c>
    33ec:	mov	x0, x19
    33f0:	mov	x19, #0x0                   	// #0
    33f4:	bl	2c58 <PyThread_free_lock@plt+0x328>
    33f8:	b	33c0 <PyThread_free_lock@plt+0xa90>
    33fc:	ldr	x1, [x0, #24]
    3400:	mov	w21, #0x0                   	// #0
    3404:	add	x1, x1, #0x1
    3408:	str	x1, [x0, #24]
    340c:	b	339c <PyThread_free_lock@plt+0xa6c>
    3410:	stp	x29, x30, [sp, #-48]!
    3414:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x12550>
    3418:	add	x3, x3, #0x930
    341c:	mov	x29, sp
    3420:	stp	x19, x20, [sp, #16]
    3424:	add	x3, x3, #0x8
    3428:	mov	w5, #0x0                   	// #0
    342c:	ldr	x19, [x0]
    3430:	mov	w4, #0x0                   	// #0
    3434:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x12550>
    3438:	add	x0, x0, #0x238
    343c:	ldr	w2, [x19, #8]
    3440:	ldr	x1, [x19]
    3444:	str	x21, [sp, #32]
    3448:	bl	332c <PyThread_free_lock@plt+0x9fc>
    344c:	ldr	w21, [x19, #8]
    3450:	mov	x20, x0
    3454:	cbz	w21, 3490 <PyThread_free_lock@plt+0xb60>
    3458:	ldr	w0, [x19, #12]
    345c:	cbz	w0, 3490 <PyThread_free_lock@plt+0xb60>
    3460:	adrp	x0, 4000 <PyThread_free_lock@plt+0x16d0>
    3464:	add	x0, x0, #0xe8b
    3468:	bl	2760 <PyImport_ImportModule@plt>
    346c:	mov	x19, x0
    3470:	cbnz	x0, 34a4 <PyThread_free_lock@plt+0xb74>
    3474:	bl	2700 <PyErr_Clear@plt>
    3478:	adrp	x0, 4000 <PyThread_free_lock@plt+0x16d0>
    347c:	add	x0, x0, #0xe7e
    3480:	bl	2760 <PyImport_ImportModule@plt>
    3484:	mov	x19, x0
    3488:	cbnz	x0, 34a4 <PyThread_free_lock@plt+0xb74>
    348c:	bl	2700 <PyErr_Clear@plt>
    3490:	mov	x0, x20
    3494:	ldp	x19, x20, [sp, #16]
    3498:	ldr	x21, [sp, #32]
    349c:	ldp	x29, x30, [sp], #48
    34a0:	ret
    34a4:	cmn	w21, #0x1
    34a8:	b.eq	34fc <PyThread_free_lock@plt+0xbcc>  // b.none
    34ac:	adrp	x1, 4000 <PyThread_free_lock@plt+0x16d0>
    34b0:	add	x1, x1, #0xe72
    34b4:	mov	x0, x19
    34b8:	bl	25c0 <PyObject_GetAttrString@plt>
    34bc:	mov	x21, x0
    34c0:	mov	x0, x19
    34c4:	bl	2c58 <PyThread_free_lock@plt+0x328>
    34c8:	cbz	x21, 348c <PyThread_free_lock@plt+0xb5c>
    34cc:	mov	x1, x20
    34d0:	mov	x2, #0x0                   	// #0
    34d4:	mov	x0, x21
    34d8:	bl	2780 <PyObject_CallFunctionObjArgs@plt>
    34dc:	mov	x19, x0
    34e0:	mov	x0, x21
    34e4:	bl	2c58 <PyThread_free_lock@plt+0x328>
    34e8:	cbz	x19, 348c <PyThread_free_lock@plt+0xb5c>
    34ec:	mov	x0, x20
    34f0:	mov	x20, x19
    34f4:	bl	2c58 <PyThread_free_lock@plt+0x328>
    34f8:	b	3490 <PyThread_free_lock@plt+0xb60>
    34fc:	adrp	x1, 4000 <PyThread_free_lock@plt+0x16d0>
    3500:	add	x1, x1, #0xe66
    3504:	b	34b4 <PyThread_free_lock@plt+0xb84>
    3508:	stp	x29, x30, [sp, #-64]!
    350c:	mov	w1, #0x1                   	// #1
    3510:	mov	x29, sp
    3514:	stp	x19, x20, [sp, #16]
    3518:	adrp	x20, 17000 <PyInit__xxsubinterpreters@@Base+0x12550>
    351c:	add	x0, x20, #0x930
    3520:	stp	x21, x22, [sp, #32]
    3524:	add	x21, x0, #0x8
    3528:	ldr	x0, [x0, #8]
    352c:	stp	x23, x24, [sp, #48]
    3530:	bl	2650 <PyThread_acquire_lock@plt>
    3534:	ldr	x0, [x21, #16]
    3538:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
    353c:	cmp	x0, x1
    3540:	b.ne	3590 <PyThread_free_lock@plt+0xc60>  // b.any
    3544:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x11550>
    3548:	adrp	x1, 4000 <PyThread_free_lock@plt+0x16d0>
    354c:	add	x1, x1, #0xe98
    3550:	ldr	x0, [x0, #4000]
    3554:	ldr	x0, [x0]
    3558:	bl	2680 <PyErr_SetString@plt>
    355c:	mov	x22, #0x0                   	// #0
    3560:	mov	x19, #0x0                   	// #0
    3564:	add	x20, x20, #0x930
    3568:	ldr	x0, [x20, #8]
    356c:	bl	27c0 <PyThread_release_lock@plt>
    3570:	cbnz	x19, 35d4 <PyThread_free_lock@plt+0xca4>
    3574:	cbnz	x22, 3634 <PyThread_free_lock@plt+0xd04>
    3578:	ldp	x19, x20, [sp, #16]
    357c:	mov	x0, #0x0                   	// #0
    3580:	ldp	x21, x22, [sp, #32]
    3584:	ldp	x23, x24, [sp, #48]
    3588:	ldp	x29, x30, [sp], #64
    358c:	b	2500 <PyList_New@plt>
    3590:	mov	x1, #0xfffffffffffffff     	// #1152921504606846975
    3594:	cmp	x0, x1
    3598:	b.hi	355c <PyThread_free_lock@plt+0xc2c>  // b.pmore
    359c:	lsl	x0, x0, #3
    35a0:	bl	2910 <PyMem_Malloc@plt>
    35a4:	mov	x19, x0
    35a8:	cbz	x0, 355c <PyThread_free_lock@plt+0xc2c>
    35ac:	mov	x1, x0
    35b0:	ldr	x0, [x21, #8]
    35b4:	cbnz	x0, 35c4 <PyThread_free_lock@plt+0xc94>
    35b8:	add	x0, x20, #0x930
    35bc:	ldr	x22, [x0, #24]
    35c0:	b	3564 <PyThread_free_lock@plt+0xc34>
    35c4:	ldr	x2, [x0]
    35c8:	ldr	x0, [x0, #16]
    35cc:	str	x2, [x1], #8
    35d0:	b	35b4 <PyThread_free_lock@plt+0xc84>
    35d4:	mov	x0, x22
    35d8:	bl	2500 <PyList_New@plt>
    35dc:	mov	x21, x0
    35e0:	cbz	x0, 3628 <PyThread_free_lock@plt+0xcf8>
    35e4:	adrp	x24, 17000 <PyInit__xxsubinterpreters@@Base+0x12550>
    35e8:	add	x20, x20, #0x8
    35ec:	add	x24, x24, #0x238
    35f0:	mov	x23, #0x0                   	// #0
    35f4:	cmp	x23, x22
    35f8:	b.ge	3628 <PyThread_free_lock@plt+0xcf8>  // b.tcont
    35fc:	ldr	x1, [x19, x23, lsl #3]
    3600:	mov	x3, x20
    3604:	mov	x0, x24
    3608:	mov	w5, #0x0                   	// #0
    360c:	mov	w4, #0x0                   	// #0
    3610:	mov	w2, #0x0                   	// #0
    3614:	bl	332c <PyThread_free_lock@plt+0x9fc>
    3618:	cbnz	x0, 364c <PyThread_free_lock@plt+0xd1c>
    361c:	mov	x0, x21
    3620:	mov	x21, #0x0                   	// #0
    3624:	bl	2c58 <PyThread_free_lock@plt+0x328>
    3628:	mov	x0, x19
    362c:	mov	x19, x21
    3630:	bl	25a0 <PyMem_Free@plt>
    3634:	mov	x0, x19
    3638:	ldp	x19, x20, [sp, #16]
    363c:	ldp	x21, x22, [sp, #32]
    3640:	ldp	x23, x24, [sp, #48]
    3644:	ldp	x29, x30, [sp], #64
    3648:	ret
    364c:	ldr	x1, [x21, #24]
    3650:	str	x0, [x1, x23, lsl #3]
    3654:	add	x23, x23, #0x1
    3658:	b	35f4 <PyThread_free_lock@plt+0xcc4>
    365c:	cbz	x1, 367c <PyThread_free_lock@plt+0xd4c>
    3660:	ldr	w5, [x0, #28]
    3664:	mov	w4, #0x1                   	// #1
    3668:	ldr	w2, [x1]
    366c:	ldr	x1, [x0, #16]
    3670:	ldr	x3, [x0, #32]
    3674:	ldr	x0, [x0, #8]
    3678:	b	332c <PyThread_free_lock@plt+0x9fc>
    367c:	ldr	w0, [x0, #24]
    3680:	cmp	w0, #0x1
    3684:	b.ne	3694 <PyThread_free_lock@plt+0xd64>  // b.any
    3688:	adrp	x0, 4000 <PyThread_free_lock@plt+0x16d0>
    368c:	add	x0, x0, #0xf2c
    3690:	b	2850 <PyUnicode_InternFromString@plt>
    3694:	cmn	w0, #0x1
    3698:	b.ne	36a8 <PyThread_free_lock@plt+0xd78>  // b.any
    369c:	adrp	x0, 4000 <PyThread_free_lock@plt+0x16d0>
    36a0:	add	x0, x0, #0xf4b
    36a4:	b	3690 <PyThread_free_lock@plt+0xd60>
    36a8:	adrp	x0, 4000 <PyThread_free_lock@plt+0x16d0>
    36ac:	add	x0, x0, #0xeaf
    36b0:	b	3690 <PyThread_free_lock@plt+0xd60>
    36b4:	sub	sp, sp, #0x40
    36b8:	mov	x0, x1
    36bc:	mov	x1, x2
    36c0:	mov	w2, #0xffffffff            	// #-1
    36c4:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x12550>
    36c8:	add	x3, x3, #0x3d8
    36cc:	stp	x29, x30, [sp, #16]
    36d0:	add	x29, sp, #0x10
    36d4:	adrp	x4, 2000 <PyUnicode_FromFormat@plt-0x4f0>
    36d8:	add	x7, sp, #0x2c
    36dc:	stp	w2, w2, [sp, #40]
    36e0:	add	x2, sp, #0x34
    36e4:	str	x2, [sp, #8]
    36e8:	add	x2, sp, #0x30
    36ec:	str	x2, [sp]
    36f0:	add	x6, sp, #0x28
    36f4:	adrp	x2, 4000 <PyThread_free_lock@plt+0x16d0>
    36f8:	add	x5, sp, #0x38
    36fc:	add	x4, x4, #0xd3c
    3700:	add	x3, x3, #0x30
    3704:	add	x2, x2, #0xeb4
    3708:	stp	wzr, wzr, [sp, #48]
    370c:	bl	2580 <PyArg_ParseTupleAndKeywords@plt>
    3710:	cbz	w0, 3738 <PyThread_free_lock@plt+0xe08>
    3714:	ldp	w1, w0, [sp, #40]
    3718:	cbnz	w1, 3740 <PyThread_free_lock@plt+0xe10>
    371c:	cbnz	w0, 3780 <PyThread_free_lock@plt+0xe50>
    3720:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x11550>
    3724:	adrp	x1, 4000 <PyThread_free_lock@plt+0x16d0>
    3728:	add	x1, x1, #0xecf
    372c:	ldr	x0, [x0, #4016]
    3730:	ldr	x0, [x0]
    3734:	bl	2680 <PyErr_SetString@plt>
    3738:	mov	x0, #0x0                   	// #0
    373c:	b	3774 <PyThread_free_lock@plt+0xe44>
    3740:	cmp	w1, #0x1
    3744:	b.ne	3780 <PyThread_free_lock@plt+0xe50>  // b.any
    3748:	add	w0, w0, #0x1
    374c:	cmp	w0, #0x1
    3750:	cset	w2, ls  // ls = plast
    3754:	ldp	w4, w5, [sp, #48]
    3758:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x12550>
    375c:	ldr	x1, [sp, #56]
    3760:	add	x3, x3, #0x930
    3764:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x12550>
    3768:	add	x3, x3, #0x8
    376c:	add	x0, x0, #0x238
    3770:	bl	332c <PyThread_free_lock@plt+0x9fc>
    3774:	ldp	x29, x30, [sp, #16]
    3778:	add	sp, sp, #0x40
    377c:	ret
    3780:	cmp	w0, #0x1
    3784:	csetm	w2, eq  // eq = none
    3788:	b	3754 <PyThread_free_lock@plt+0xe24>
    378c:	stp	x29, x30, [sp, #-48]!
    3790:	mov	x29, sp
    3794:	stp	x19, x20, [sp, #16]
    3798:	adrp	x20, 17000 <PyInit__xxsubinterpreters@@Base+0x12550>
    379c:	stp	x21, x22, [sp, #32]
    37a0:	mov	x21, x0
    37a4:	add	x0, x20, #0x930
    37a8:	add	x19, x0, #0x8
    37ac:	mov	x22, x1
    37b0:	mov	w1, #0x1                   	// #1
    37b4:	ldr	x0, [x0, #8]
    37b8:	bl	2650 <PyThread_acquire_lock@plt>
    37bc:	str	xzr, [x22]
    37c0:	ldr	x19, [x19, #8]
    37c4:	cbnz	x19, 37e0 <PyThread_free_lock@plt+0xeb0>
    37c8:	ldr	x0, [x20, #2352]
    37cc:	mov	x2, x21
    37d0:	adrp	x1, 4000 <PyThread_free_lock@plt+0x16d0>
    37d4:	add	x1, x1, #0xe50
    37d8:	bl	28c0 <PyErr_Format@plt>
    37dc:	b	3834 <PyThread_free_lock@plt+0xf04>
    37e0:	ldr	x0, [x19]
    37e4:	cmp	x21, x0
    37e8:	b.eq	3808 <PyThread_free_lock@plt+0xed8>  // b.none
    37ec:	ldr	x19, [x19, #16]
    37f0:	b	37c4 <PyThread_free_lock@plt+0xe94>
    37f4:	add	x0, x20, #0x930
    37f8:	ldr	x0, [x0, #8]
    37fc:	str	x0, [x22]
    3800:	ldr	x19, [x19, #8]
    3804:	b	3834 <PyThread_free_lock@plt+0xf04>
    3808:	ldr	x0, [x19, #8]
    380c:	cbz	x0, 3818 <PyThread_free_lock@plt+0xee8>
    3810:	ldr	w0, [x0, #24]
    3814:	cbnz	w0, 37f4 <PyThread_free_lock@plt+0xec4>
    3818:	add	x0, x20, #0x930
    381c:	adrp	x1, 4000 <PyThread_free_lock@plt+0x16d0>
    3820:	mov	x2, x21
    3824:	add	x1, x1, #0xef6
    3828:	mov	x19, #0x0                   	// #0
    382c:	ldr	x0, [x0, #40]
    3830:	bl	28c0 <PyErr_Format@plt>
    3834:	ldr	x0, [x22]
    3838:	cbnz	x0, 3848 <PyThread_free_lock@plt+0xf18>
    383c:	add	x20, x20, #0x930
    3840:	ldr	x0, [x20, #8]
    3844:	bl	27c0 <PyThread_release_lock@plt>
    3848:	mov	x0, x19
    384c:	ldp	x19, x20, [sp, #16]
    3850:	ldp	x21, x22, [sp, #32]
    3854:	ldp	x29, x30, [sp], #48
    3858:	ret
    385c:	stp	x29, x30, [sp, #-16]!
    3860:	mov	x5, x1
    3864:	cmp	w2, #0x0
    3868:	mov	x29, sp
    386c:	ldp	x4, x1, [x0, #16]
    3870:	mov	w3, w2
    3874:	csel	x4, x4, x1, ne  // ne = any
    3878:	mov	x1, #0x0                   	// #0
    387c:	cbnz	x4, 3894 <PyThread_free_lock@plt+0xf64>
    3880:	mov	x2, x5
    3884:	bl	2acc <PyThread_free_lock@plt+0x19c>
    3888:	cmp	x0, #0x0
    388c:	csetm	w0, eq  // eq = none
    3890:	b	38c4 <PyThread_free_lock@plt+0xf94>
    3894:	ldr	x1, [x4, #8]
    3898:	cmp	x5, x1
    389c:	b.eq	38cc <PyThread_free_lock@plt+0xf9c>  // b.none
    38a0:	mov	x1, x4
    38a4:	ldr	x4, [x4]
    38a8:	b	387c <PyThread_free_lock@plt+0xf4c>
    38ac:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x12550>
    38b0:	adrp	x1, 4000 <PyThread_free_lock@plt+0x16d0>
    38b4:	add	x1, x1, #0xf09
    38b8:	ldr	x0, [x0, #2392]
    38bc:	bl	2680 <PyErr_SetString@plt>
    38c0:	mov	w0, #0xffffffff            	// #-1
    38c4:	ldp	x29, x30, [sp], #16
    38c8:	ret
    38cc:	ldr	w0, [x4, #16]
    38d0:	cbz	w0, 38ac <PyThread_free_lock@plt+0xf7c>
    38d4:	mov	w0, #0x0                   	// #0
    38d8:	b	38c4 <PyThread_free_lock@plt+0xf94>
    38dc:	stp	x29, x30, [sp, #-96]!
    38e0:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x12550>
    38e4:	add	x3, x3, #0x3d8
    38e8:	mov	x29, sp
    38ec:	mov	x0, x1
    38f0:	adrp	x4, 2000 <PyUnicode_FromFormat@plt-0x4f0>
    38f4:	mov	x1, x2
    38f8:	add	x6, sp, #0x50
    38fc:	adrp	x2, 4000 <PyThread_free_lock@plt+0x16d0>
    3900:	add	x5, sp, #0x48
    3904:	add	x4, x4, #0xd3c
    3908:	add	x3, x3, #0x60
    390c:	add	x2, x2, #0xf20
    3910:	stp	x19, x20, [sp, #16]
    3914:	stp	x21, x22, [sp, #32]
    3918:	stp	x23, x24, [sp, #48]
    391c:	bl	2580 <PyArg_ParseTupleAndKeywords@plt>
    3920:	cbz	w0, 3974 <PyThread_free_lock@plt+0x1044>
    3924:	ldp	x21, x24, [sp, #72]
    3928:	bl	2800 <_PyInterpreterState_Get@plt>
    392c:	mov	x20, x0
    3930:	cbz	x0, 3974 <PyThread_free_lock@plt+0x1044>
    3934:	add	x1, sp, #0x58
    3938:	mov	x0, x21
    393c:	str	xzr, [sp, #88]
    3940:	bl	378c <PyThread_free_lock@plt+0xe5c>
    3944:	mov	x22, x0
    3948:	cbz	x0, 3974 <PyThread_free_lock@plt+0x1044>
    394c:	ldr	x19, [x0, #32]
    3950:	cbz	x19, 397c <PyThread_free_lock@plt+0x104c>
    3954:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x12550>
    3958:	mov	x2, x21
    395c:	adrp	x1, 4000 <PyThread_free_lock@plt+0x16d0>
    3960:	add	x1, x1, #0xef6
    3964:	ldr	x0, [x0, #2392]
    3968:	bl	28c0 <PyErr_Format@plt>
    396c:	ldr	x0, [sp, #88]
    3970:	bl	27c0 <PyThread_release_lock@plt>
    3974:	mov	x19, #0x0                   	// #0
    3978:	b	3994 <PyThread_free_lock@plt+0x1064>
    397c:	mov	x0, #0x28                  	// #40
    3980:	bl	2910 <PyMem_Malloc@plt>
    3984:	mov	x23, x0
    3988:	cbnz	x0, 39ac <PyThread_free_lock@plt+0x107c>
    398c:	ldr	x0, [sp, #88]
    3990:	bl	27c0 <PyThread_release_lock@plt>
    3994:	mov	x0, x19
    3998:	ldp	x19, x20, [sp, #16]
    399c:	ldp	x21, x22, [sp, #32]
    39a0:	ldp	x23, x24, [sp, #48]
    39a4:	ldp	x29, x30, [sp], #96
    39a8:	ret
    39ac:	mov	x1, x0
    39b0:	mov	x0, x24
    39b4:	bl	26e0 <_PyObject_GetCrossInterpreterData@plt>
    39b8:	cbz	w0, 39d0 <PyThread_free_lock@plt+0x10a0>
    39bc:	ldr	x0, [sp, #88]
    39c0:	bl	27c0 <PyThread_release_lock@plt>
    39c4:	mov	x0, x23
    39c8:	bl	25a0 <PyMem_Free@plt>
    39cc:	b	3994 <PyThread_free_lock@plt+0x1064>
    39d0:	mov	x0, x20
    39d4:	bl	2690 <PyInterpreterState_GetID@plt>
    39d8:	mov	x20, x0
    39dc:	mov	w1, #0x1                   	// #1
    39e0:	ldr	x0, [x22]
    39e4:	bl	2650 <PyThread_acquire_lock@plt>
    39e8:	ldr	w0, [x22, #24]
    39ec:	cbnz	w0, 3a0c <PyThread_free_lock@plt+0x10dc>
    39f0:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x12550>
    39f4:	adrp	x1, 4000 <PyThread_free_lock@plt+0x16d0>
    39f8:	add	x1, x1, #0xf31
    39fc:	ldr	x0, [x0, #2392]
    3a00:	bl	2680 <PyErr_SetString@plt>
    3a04:	mov	w20, #0xffffffff            	// #-1
    3a08:	b	3a60 <PyThread_free_lock@plt+0x1130>
    3a0c:	ldr	x0, [x22, #16]
    3a10:	mov	x1, x20
    3a14:	mov	w2, #0x1                   	// #1
    3a18:	bl	385c <PyThread_free_lock@plt+0xf2c>
    3a1c:	mov	w20, w0
    3a20:	cbnz	w0, 3a04 <PyThread_free_lock@plt+0x10d4>
    3a24:	mov	x0, #0x10                  	// #16
    3a28:	ldr	x21, [x22, #8]
    3a2c:	bl	2910 <PyMem_Malloc@plt>
    3a30:	mov	x1, x0
    3a34:	cbnz	x0, 3a40 <PyThread_free_lock@plt+0x1110>
    3a38:	bl	2610 <PyErr_NoMemory@plt>
    3a3c:	b	3a04 <PyThread_free_lock@plt+0x10d4>
    3a40:	ldr	x0, [x21]
    3a44:	stp	x23, xzr, [x1]
    3a48:	add	x0, x0, #0x1
    3a4c:	str	x0, [x21]
    3a50:	ldr	x0, [x21, #8]
    3a54:	cbnz	x0, 3a80 <PyThread_free_lock@plt+0x1150>
    3a58:	str	x1, [x21, #8]
    3a5c:	str	x1, [x21, #16]
    3a60:	ldr	x0, [x22]
    3a64:	bl	27c0 <PyThread_release_lock@plt>
    3a68:	ldr	x0, [sp, #88]
    3a6c:	bl	27c0 <PyThread_release_lock@plt>
    3a70:	cbz	w20, 3a8c <PyThread_free_lock@plt+0x115c>
    3a74:	mov	x0, x23
    3a78:	bl	2620 <_PyCrossInterpreterData_Release@plt>
    3a7c:	b	39c4 <PyThread_free_lock@plt+0x1094>
    3a80:	ldr	x0, [x21, #16]
    3a84:	str	x1, [x0, #8]
    3a88:	b	3a5c <PyThread_free_lock@plt+0x112c>
    3a8c:	adrp	x19, 16000 <PyInit__xxsubinterpreters@@Base+0x11550>
    3a90:	ldr	x19, [x19, #4048]
    3a94:	ldr	x0, [x19]
    3a98:	add	x0, x0, #0x1
    3a9c:	str	x0, [x19]
    3aa0:	b	3994 <PyThread_free_lock@plt+0x1064>
    3aa4:	stp	x29, x30, [sp, #-48]!
    3aa8:	mov	x29, sp
    3aac:	stp	x19, x20, [sp, #16]
    3ab0:	mov	x19, x0
    3ab4:	str	x21, [sp, #32]
    3ab8:	bl	2a90 <PyThread_free_lock@plt+0x160>
    3abc:	ldr	x0, [x19]
    3ac0:	mov	w1, #0x1                   	// #1
    3ac4:	bl	2650 <PyThread_acquire_lock@plt>
    3ac8:	ldr	x20, [x19, #8]
    3acc:	ldr	x0, [x20, #8]
    3ad0:	bl	326c <PyThread_free_lock@plt+0x93c>
    3ad4:	stp	xzr, xzr, [x20]
    3ad8:	mov	x0, x20
    3adc:	str	xzr, [x20, #16]
    3ae0:	bl	25a0 <PyMem_Free@plt>
    3ae4:	ldr	x20, [x19, #16]
    3ae8:	ldr	x0, [x20, #16]
    3aec:	cbnz	x0, 3b34 <PyThread_free_lock@plt+0x1204>
    3af0:	ldr	x0, [x20, #24]
    3af4:	str	xzr, [x20]
    3af8:	str	xzr, [x20, #16]
    3afc:	cbnz	x0, 3b44 <PyThread_free_lock@plt+0x1214>
    3b00:	str	xzr, [x20, #8]
    3b04:	mov	x0, x20
    3b08:	str	xzr, [x20, #24]
    3b0c:	bl	25a0 <PyMem_Free@plt>
    3b10:	ldr	x0, [x19]
    3b14:	bl	27c0 <PyThread_release_lock@plt>
    3b18:	ldr	x0, [x19]
    3b1c:	bl	2930 <PyThread_free_lock@plt>
    3b20:	mov	x0, x19
    3b24:	ldp	x19, x20, [sp, #16]
    3b28:	ldr	x21, [sp, #32]
    3b2c:	ldp	x29, x30, [sp], #48
    3b30:	b	25a0 <PyMem_Free@plt>
    3b34:	ldr	x21, [x0]
    3b38:	bl	25a0 <PyMem_Free@plt>
    3b3c:	mov	x0, x21
    3b40:	b	3aec <PyThread_free_lock@plt+0x11bc>
    3b44:	ldr	x21, [x0]
    3b48:	bl	25a0 <PyMem_Free@plt>
    3b4c:	mov	x0, x21
    3b50:	b	3afc <PyThread_free_lock@plt+0x11cc>
    3b54:	stp	x29, x30, [sp, #-64]!
    3b58:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x12550>
    3b5c:	add	x3, x3, #0x3d8
    3b60:	mov	x29, sp
    3b64:	mov	x0, x1
    3b68:	adrp	x4, 2000 <PyUnicode_FromFormat@plt-0x4f0>
    3b6c:	mov	x1, x2
    3b70:	add	x5, sp, #0x30
    3b74:	adrp	x2, 4000 <PyThread_free_lock@plt+0x16d0>
    3b78:	add	x4, x4, #0xd3c
    3b7c:	add	x3, x3, #0x78
    3b80:	add	x2, x2, #0xf40
    3b84:	stp	x19, x20, [sp, #16]
    3b88:	stp	x21, x22, [sp, #32]
    3b8c:	bl	2580 <PyArg_ParseTupleAndKeywords@plt>
    3b90:	cbz	w0, 3ba4 <PyThread_free_lock@plt+0x1274>
    3b94:	ldr	x21, [sp, #48]
    3b98:	bl	2800 <_PyInterpreterState_Get@plt>
    3b9c:	mov	x20, x0
    3ba0:	cbnz	x0, 3bac <PyThread_free_lock@plt+0x127c>
    3ba4:	mov	x19, #0x0                   	// #0
    3ba8:	b	3c60 <PyThread_free_lock@plt+0x1330>
    3bac:	add	x1, sp, #0x38
    3bb0:	mov	x0, x21
    3bb4:	str	xzr, [sp, #56]
    3bb8:	bl	378c <PyThread_free_lock@plt+0xe5c>
    3bbc:	mov	x19, x0
    3bc0:	cbz	x0, 3ba4 <PyThread_free_lock@plt+0x1274>
    3bc4:	mov	x0, x20
    3bc8:	bl	2690 <PyInterpreterState_GetID@plt>
    3bcc:	mov	x20, x0
    3bd0:	mov	w1, #0x1                   	// #1
    3bd4:	ldr	x0, [x19]
    3bd8:	bl	2650 <PyThread_acquire_lock@plt>
    3bdc:	ldr	w0, [x19, #24]
    3be0:	cbnz	w0, 3c74 <PyThread_free_lock@plt+0x1344>
    3be4:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x12550>
    3be8:	adrp	x1, 4000 <PyThread_free_lock@plt+0x16d0>
    3bec:	add	x1, x1, #0xf31
    3bf0:	ldr	x0, [x0, #2392]
    3bf4:	bl	2680 <PyErr_SetString@plt>
    3bf8:	mov	x20, #0x0                   	// #0
    3bfc:	ldr	x0, [x19]
    3c00:	bl	27c0 <PyThread_release_lock@plt>
    3c04:	ldr	x0, [x19, #8]
    3c08:	ldr	x0, [x0]
    3c0c:	cbnz	x0, 3c30 <PyThread_free_lock@plt+0x1300>
    3c10:	ldr	x0, [x19, #32]
    3c14:	cbz	x0, 3c30 <PyThread_free_lock@plt+0x1300>
    3c18:	ldr	x22, [x0]
    3c1c:	mov	x0, x19
    3c20:	bl	2a90 <PyThread_free_lock@plt+0x160>
    3c24:	mov	x0, x19
    3c28:	str	xzr, [x22, #8]
    3c2c:	bl	3aa4 <PyThread_free_lock@plt+0x1174>
    3c30:	ldr	x0, [sp, #56]
    3c34:	bl	27c0 <PyThread_release_lock@plt>
    3c38:	cbnz	x20, 3ce8 <PyThread_free_lock@plt+0x13b8>
    3c3c:	bl	2740 <PyErr_Occurred@plt>
    3c40:	mov	x19, x0
    3c44:	cbnz	x0, 3ba4 <PyThread_free_lock@plt+0x1274>
    3c48:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x12550>
    3c4c:	adrp	x1, 4000 <PyThread_free_lock@plt+0x16d0>
    3c50:	mov	x2, x21
    3c54:	add	x1, x1, #0xf50
    3c58:	ldr	x0, [x0, #2400]
    3c5c:	bl	28c0 <PyErr_Format@plt>
    3c60:	mov	x0, x19
    3c64:	ldp	x19, x20, [sp, #16]
    3c68:	ldp	x21, x22, [sp, #32]
    3c6c:	ldp	x29, x30, [sp], #64
    3c70:	ret
    3c74:	ldr	x0, [x19, #16]
    3c78:	mov	x1, x20
    3c7c:	mov	w2, #0x0                   	// #0
    3c80:	bl	385c <PyThread_free_lock@plt+0xf2c>
    3c84:	cbnz	w0, 3bf8 <PyThread_free_lock@plt+0x12c8>
    3c88:	ldr	x1, [x19, #8]
    3c8c:	ldr	x0, [x1, #8]
    3c90:	cbnz	x0, 3cb0 <PyThread_free_lock@plt+0x1380>
    3c94:	bl	2740 <PyErr_Occurred@plt>
    3c98:	mov	x20, x0
    3c9c:	cbnz	x0, 3bf8 <PyThread_free_lock@plt+0x12c8>
    3ca0:	ldr	x0, [x19, #32]
    3ca4:	cbz	x0, 3bf8 <PyThread_free_lock@plt+0x12c8>
    3ca8:	str	wzr, [x19, #24]
    3cac:	b	3bfc <PyThread_free_lock@plt+0x12cc>
    3cb0:	ldr	x2, [x0, #8]
    3cb4:	str	x2, [x1, #8]
    3cb8:	ldr	x2, [x1, #16]
    3cbc:	cmp	x0, x2
    3cc0:	b.ne	3cc8 <PyThread_free_lock@plt+0x1398>  // b.any
    3cc4:	str	xzr, [x1, #16]
    3cc8:	ldr	x2, [x1]
    3ccc:	ldr	x20, [x0]
    3cd0:	sub	x2, x2, #0x1
    3cd4:	str	x2, [x1]
    3cd8:	stp	xzr, xzr, [x0]
    3cdc:	bl	25a0 <PyMem_Free@plt>
    3ce0:	cbnz	x20, 3bfc <PyThread_free_lock@plt+0x12cc>
    3ce4:	b	3c94 <PyThread_free_lock@plt+0x1364>
    3ce8:	mov	x0, x20
    3cec:	bl	25b0 <_PyCrossInterpreterData_NewObject@plt>
    3cf0:	mov	x19, x0
    3cf4:	cbz	x0, 3c60 <PyThread_free_lock@plt+0x1330>
    3cf8:	mov	x0, x20
    3cfc:	bl	2620 <_PyCrossInterpreterData_Release@plt>
    3d00:	mov	x0, x20
    3d04:	bl	25a0 <PyMem_Free@plt>
    3d08:	b	3c60 <PyThread_free_lock@plt+0x1330>
    3d0c:	stp	x29, x30, [sp, #-48]!
    3d10:	mov	x29, sp
    3d14:	ldr	x1, [x0, #8]
    3d18:	stp	x19, x20, [sp, #16]
    3d1c:	ldr	x20, [x0, #32]
    3d20:	ldr	x1, [x1, #320]
    3d24:	str	x21, [sp, #32]
    3d28:	ldr	x21, [x0, #16]
    3d2c:	blr	x1
    3d30:	ldr	x0, [x20]
    3d34:	mov	w1, #0x1                   	// #1
    3d38:	bl	2650 <PyThread_acquire_lock@plt>
    3d3c:	ldr	x1, [x20, #8]
    3d40:	mov	x2, #0x0                   	// #0
    3d44:	mov	x19, x1
    3d48:	cbnz	x19, 3d60 <PyThread_free_lock@plt+0x1430>
    3d4c:	ldr	x0, [x20]
    3d50:	ldp	x19, x20, [sp, #16]
    3d54:	ldr	x21, [sp, #32]
    3d58:	ldp	x29, x30, [sp], #48
    3d5c:	b	27c0 <PyThread_release_lock@plt>
    3d60:	ldr	x0, [x19]
    3d64:	cmp	x21, x0
    3d68:	b.eq	3d80 <PyThread_free_lock@plt+0x1450>  // b.none
    3d6c:	mov	x2, x19
    3d70:	ldr	x19, [x19, #16]
    3d74:	b	3d48 <PyThread_free_lock@plt+0x1418>
    3d78:	str	x0, [x2, #16]
    3d7c:	b	3da0 <PyThread_free_lock@plt+0x1470>
    3d80:	ldr	x0, [x19, #24]
    3d84:	sub	x0, x0, #0x1
    3d88:	str	x0, [x19, #24]
    3d8c:	cbnz	x0, 3d4c <PyThread_free_lock@plt+0x141c>
    3d90:	cmp	x1, x19
    3d94:	ldr	x0, [x19, #16]
    3d98:	b.ne	3d78 <PyThread_free_lock@plt+0x1448>  // b.any
    3d9c:	str	x0, [x20, #8]
    3da0:	ldr	x0, [x20, #16]
    3da4:	ldr	x21, [x19, #8]
    3da8:	sub	x0, x0, #0x1
    3dac:	str	x0, [x20, #16]
    3db0:	cbz	x21, 3dbc <PyThread_free_lock@plt+0x148c>
    3db4:	mov	x0, x21
    3db8:	bl	2a90 <PyThread_free_lock@plt+0x160>
    3dbc:	mov	x0, x19
    3dc0:	bl	25a0 <PyMem_Free@plt>
    3dc4:	cbz	x21, 3d4c <PyThread_free_lock@plt+0x141c>
    3dc8:	mov	x0, x21
    3dcc:	bl	3aa4 <PyThread_free_lock@plt+0x1174>
    3dd0:	b	3d4c <PyThread_free_lock@plt+0x141c>
    3dd4:	sub	sp, sp, #0x70
    3dd8:	mov	x0, x1
    3ddc:	mov	x1, x2
    3de0:	add	x2, sp, #0x64
    3de4:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x12550>
    3de8:	add	x3, x3, #0x3d8
    3dec:	stp	x29, x30, [sp, #16]
    3df0:	add	x29, sp, #0x10
    3df4:	adrp	x4, 2000 <PyUnicode_FromFormat@plt-0x4f0>
    3df8:	add	x7, sp, #0x60
    3dfc:	str	x2, [sp]
    3e00:	add	x6, sp, #0x5c
    3e04:	adrp	x2, 4000 <PyThread_free_lock@plt+0x16d0>
    3e08:	add	x5, sp, #0x68
    3e0c:	add	x4, x4, #0xd3c
    3e10:	add	x3, x3, #0x88
    3e14:	add	x2, x2, #0xf65
    3e18:	stp	x19, x20, [sp, #32]
    3e1c:	stp	x21, x22, [sp, #48]
    3e20:	stp	x23, x24, [sp, #64]
    3e24:	stp	wzr, wzr, [sp, #92]
    3e28:	str	wzr, [sp, #100]
    3e2c:	bl	2580 <PyArg_ParseTupleAndKeywords@plt>
    3e30:	cbnz	w0, 3e50 <PyThread_free_lock@plt+0x1520>
    3e34:	mov	x0, #0x0                   	// #0
    3e38:	ldp	x29, x30, [sp, #16]
    3e3c:	ldp	x19, x20, [sp, #32]
    3e40:	ldp	x21, x22, [sp, #48]
    3e44:	ldp	x23, x24, [sp, #64]
    3e48:	add	sp, sp, #0x70
    3e4c:	ret
    3e50:	ldp	w24, w0, [sp, #92]
    3e54:	adrp	x20, 17000 <PyInit__xxsubinterpreters@@Base+0x12550>
    3e58:	ldr	w19, [sp, #100]
    3e5c:	mov	w1, #0x1                   	// #1
    3e60:	sub	w24, w24, w0
    3e64:	add	x0, x20, #0x930
    3e68:	add	x21, x0, #0x8
    3e6c:	ldr	x23, [sp, #104]
    3e70:	ldr	x0, [x0, #8]
    3e74:	bl	2650 <PyThread_acquire_lock@plt>
    3e78:	ldr	x21, [x21, #8]
    3e7c:	cbnz	x21, 3e94 <PyThread_free_lock@plt+0x1564>
    3e80:	adrp	x1, 4000 <PyThread_free_lock@plt+0x16d0>
    3e84:	mov	x2, x23
    3e88:	ldr	x0, [x20, #2352]
    3e8c:	add	x1, x1, #0xe50
    3e90:	b	4060 <PyThread_free_lock@plt+0x1730>
    3e94:	ldr	x0, [x21]
    3e98:	cmp	x23, x0
    3e9c:	b.eq	4030 <PyThread_free_lock@plt+0x1700>  // b.none
    3ea0:	ldr	x21, [x21, #16]
    3ea4:	b	3e7c <PyThread_free_lock@plt+0x154c>
    3ea8:	ldr	x0, [x22]
    3eac:	mov	w1, #0x1                   	// #1
    3eb0:	bl	2650 <PyThread_acquire_lock@plt>
    3eb4:	ldr	w0, [x22, #24]
    3eb8:	cbnz	w0, 3ef0 <PyThread_free_lock@plt+0x15c0>
    3ebc:	add	x0, x20, #0x930
    3ec0:	adrp	x1, 4000 <PyThread_free_lock@plt+0x16d0>
    3ec4:	add	x1, x1, #0xf09
    3ec8:	ldr	x0, [x0, #40]
    3ecc:	mov	w19, #0xffffffff            	// #-1
    3ed0:	bl	2680 <PyErr_SetString@plt>
    3ed4:	ldr	x0, [x22]
    3ed8:	bl	27c0 <PyThread_release_lock@plt>
    3edc:	cbz	w19, 4018 <PyThread_free_lock@plt+0x16e8>
    3ee0:	cmp	w24, #0x1
    3ee4:	b.eq	3f68 <PyThread_free_lock@plt+0x1638>  // b.none
    3ee8:	mov	w19, #0xffffffff            	// #-1
    3eec:	b	3ff0 <PyThread_free_lock@plt+0x16c0>
    3ef0:	cbnz	w19, 3f18 <PyThread_free_lock@plt+0x15e8>
    3ef4:	ldr	x0, [x22, #8]
    3ef8:	ldr	x0, [x0]
    3efc:	cmp	x0, #0x0
    3f00:	b.le	3f18 <PyThread_free_lock@plt+0x15e8>
    3f04:	add	x0, x20, #0x930
    3f08:	adrp	x1, 4000 <PyThread_free_lock@plt+0x16d0>
    3f0c:	add	x1, x1, #0xf7b
    3f10:	ldr	x0, [x0, #56]
    3f14:	b	3ecc <PyThread_free_lock@plt+0x159c>
    3f18:	ldr	x0, [x22, #16]
    3f1c:	ldr	x1, [x0, #16]
    3f20:	str	wzr, [x22, #24]
    3f24:	cbnz	x1, 3f38 <PyThread_free_lock@plt+0x1608>
    3f28:	ldr	x1, [x0, #24]
    3f2c:	cbnz	x1, 3f50 <PyThread_free_lock@plt+0x1620>
    3f30:	mov	w19, #0x0                   	// #0
    3f34:	b	3ed4 <PyThread_free_lock@plt+0x15a4>
    3f38:	ldr	x2, [x0]
    3f3c:	str	wzr, [x1, #16]
    3f40:	ldr	x1, [x1]
    3f44:	sub	x2, x2, #0x1
    3f48:	str	x2, [x0]
    3f4c:	b	3f24 <PyThread_free_lock@plt+0x15f4>
    3f50:	ldr	x2, [x0, #8]
    3f54:	str	wzr, [x1, #16]
    3f58:	ldr	x1, [x1]
    3f5c:	sub	x2, x2, #0x1
    3f60:	str	x2, [x0, #8]
    3f64:	b	3f2c <PyThread_free_lock@plt+0x15fc>
    3f68:	add	x19, x20, #0x930
    3f6c:	ldr	x0, [x19, #56]
    3f70:	bl	26b0 <PyErr_ExceptionMatches@plt>
    3f74:	cbz	w0, 3ee8 <PyThread_free_lock@plt+0x15b8>
    3f78:	ldr	x0, [x21, #8]
    3f7c:	ldr	x0, [x0, #32]
    3f80:	cbz	x0, 3f98 <PyThread_free_lock@plt+0x1668>
    3f84:	adrp	x1, 4000 <PyThread_free_lock@plt+0x16d0>
    3f88:	mov	x2, x23
    3f8c:	add	x1, x1, #0xef6
    3f90:	ldr	x0, [x19, #40]
    3f94:	b	4060 <PyThread_free_lock@plt+0x1730>
    3f98:	bl	2700 <PyErr_Clear@plt>
    3f9c:	ldr	x22, [x21, #8]
    3fa0:	cbz	x22, 4028 <PyThread_free_lock@plt+0x16f8>
    3fa4:	ldr	x0, [x22]
    3fa8:	mov	w1, w24
    3fac:	bl	2650 <PyThread_acquire_lock@plt>
    3fb0:	ldr	x0, [x22, #32]
    3fb4:	cbz	x0, 3fd0 <PyThread_free_lock@plt+0x16a0>
    3fb8:	ldr	x0, [x19, #40]
    3fbc:	adrp	x1, 4000 <PyThread_free_lock@plt+0x16d0>
    3fc0:	add	x1, x1, #0xf31
    3fc4:	bl	2680 <PyErr_SetString@plt>
    3fc8:	mov	w19, #0xffffffff            	// #-1
    3fcc:	b	3fe8 <PyThread_free_lock@plt+0x16b8>
    3fd0:	mov	x0, #0x8                   	// #8
    3fd4:	bl	2910 <PyMem_Malloc@plt>
    3fd8:	str	x0, [x22, #32]
    3fdc:	cbz	x0, 3fc8 <PyThread_free_lock@plt+0x1698>
    3fe0:	mov	w19, #0x0                   	// #0
    3fe4:	str	x21, [x0]
    3fe8:	ldr	x0, [x22]
    3fec:	bl	27c0 <PyThread_release_lock@plt>
    3ff0:	add	x20, x20, #0x930
    3ff4:	ldr	x0, [x20, #8]
    3ff8:	bl	27c0 <PyThread_release_lock@plt>
    3ffc:	cbnz	w19, 3e34 <PyThread_free_lock@plt+0x1504>
    4000:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x11550>
    4004:	ldr	x0, [x0, #4048]
    4008:	ldr	x1, [x0]
    400c:	add	x1, x1, #0x1
    4010:	str	x1, [x0]
    4014:	b	3e38 <PyThread_free_lock@plt+0x1508>
    4018:	ldr	x0, [x21, #8]
    401c:	bl	3aa4 <PyThread_free_lock@plt+0x1174>
    4020:	str	xzr, [x21, #8]
    4024:	b	3ff0 <PyThread_free_lock@plt+0x16c0>
    4028:	mov	w19, #0x0                   	// #0
    402c:	b	3ff0 <PyThread_free_lock@plt+0x16c0>
    4030:	ldr	x22, [x21, #8]
    4034:	cbz	x22, 404c <PyThread_free_lock@plt+0x171c>
    4038:	cmp	w19, #0x0
    403c:	ccmp	w24, #0x1, #0x0, eq  // eq = none
    4040:	b.ne	3ea8 <PyThread_free_lock@plt+0x1578>  // b.any
    4044:	ldr	x0, [x22, #32]
    4048:	cbz	x0, 3ea8 <PyThread_free_lock@plt+0x1578>
    404c:	add	x0, x20, #0x930
    4050:	adrp	x1, 4000 <PyThread_free_lock@plt+0x16d0>
    4054:	mov	x2, x23
    4058:	add	x1, x1, #0xef6
    405c:	ldr	x0, [x0, #40]
    4060:	bl	28c0 <PyErr_Format@plt>
    4064:	b	3ee8 <PyThread_free_lock@plt+0x15b8>
    4068:	sub	sp, sp, #0x70
    406c:	mov	x0, x1
    4070:	mov	x1, x2
    4074:	add	x2, sp, #0x5c
    4078:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x12550>
    407c:	add	x3, x3, #0x3d8
    4080:	stp	x29, x30, [sp, #16]
    4084:	add	x29, sp, #0x10
    4088:	adrp	x4, 2000 <PyUnicode_FromFormat@plt-0x4f0>
    408c:	add	x7, sp, #0x58
    4090:	str	x2, [sp]
    4094:	add	x6, sp, #0x54
    4098:	adrp	x2, 4000 <PyThread_free_lock@plt+0x16d0>
    409c:	add	x5, sp, #0x60
    40a0:	add	x4, x4, #0xd3c
    40a4:	add	x3, x3, #0xb0
    40a8:	add	x2, x2, #0xfab
    40ac:	stp	x19, x20, [sp, #32]
    40b0:	stp	x21, x22, [sp, #48]
    40b4:	str	x23, [sp, #64]
    40b8:	stp	wzr, wzr, [sp, #84]
    40bc:	str	wzr, [sp, #92]
    40c0:	bl	2580 <PyArg_ParseTupleAndKeywords@plt>
    40c4:	cbnz	w0, 40e4 <PyThread_free_lock@plt+0x17b4>
    40c8:	mov	x0, #0x0                   	// #0
    40cc:	ldp	x29, x30, [sp, #16]
    40d0:	ldp	x19, x20, [sp, #32]
    40d4:	ldp	x21, x22, [sp, #48]
    40d8:	ldr	x23, [sp, #64]
    40dc:	add	sp, sp, #0x70
    40e0:	ret
    40e4:	ldp	w0, w1, [sp, #84]
    40e8:	orr	w0, w0, w1
    40ec:	cbnz	w0, 40f8 <PyThread_free_lock@plt+0x17c8>
    40f0:	mov	w0, #0x1                   	// #1
    40f4:	stp	w0, w0, [sp, #84]
    40f8:	ldp	w23, w22, [sp, #84]
    40fc:	ldr	x19, [sp, #96]
    4100:	bl	2800 <_PyInterpreterState_Get@plt>
    4104:	mov	x20, x0
    4108:	cbz	x0, 40c8 <PyThread_free_lock@plt+0x1798>
    410c:	mov	x0, x19
    4110:	add	x1, sp, #0x68
    4114:	str	xzr, [sp, #104]
    4118:	bl	378c <PyThread_free_lock@plt+0xe5c>
    411c:	mov	x19, x0
    4120:	cbz	x0, 40c8 <PyThread_free_lock@plt+0x1798>
    4124:	mov	x0, x20
    4128:	bl	2690 <PyInterpreterState_GetID@plt>
    412c:	mov	x21, x0
    4130:	mov	w1, #0x1                   	// #1
    4134:	ldr	x0, [x19]
    4138:	sub	w22, w23, w22
    413c:	bl	2650 <PyThread_acquire_lock@plt>
    4140:	ldr	w0, [x19, #24]
    4144:	cbnz	w0, 4164 <PyThread_free_lock@plt+0x1834>
    4148:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x12550>
    414c:	adrp	x1, 4000 <PyThread_free_lock@plt+0x16d0>
    4150:	add	x1, x1, #0xf09
    4154:	ldr	x0, [x0, #2392]
    4158:	bl	2680 <PyErr_SetString@plt>
    415c:	mov	w20, #0xffffffff            	// #-1
    4160:	b	4204 <PyThread_free_lock@plt+0x18d4>
    4164:	ldr	x20, [x19, #16]
    4168:	tbz	w22, #31, 41a0 <PyThread_free_lock@plt+0x1870>
    416c:	ldr	x0, [x20, #24]
    4170:	mov	x1, #0x0                   	// #0
    4174:	cbnz	x0, 4248 <PyThread_free_lock@plt+0x1918>
    4178:	mov	x2, x21
    417c:	mov	x0, x20
    4180:	mov	w3, #0x0                   	// #0
    4184:	bl	2acc <PyThread_free_lock@plt+0x19c>
    4188:	cbz	x0, 415c <PyThread_free_lock@plt+0x182c>
    418c:	str	wzr, [x0, #16]
    4190:	ldr	x0, [x20, #8]
    4194:	sub	x0, x0, #0x1
    4198:	str	x0, [x20, #8]
    419c:	b	41d4 <PyThread_free_lock@plt+0x18a4>
    41a0:	ldr	x0, [x20, #16]
    41a4:	mov	x1, #0x0                   	// #0
    41a8:	cbnz	x0, 4230 <PyThread_free_lock@plt+0x1900>
    41ac:	mov	x2, x21
    41b0:	mov	x0, x20
    41b4:	mov	w3, #0x1                   	// #1
    41b8:	bl	2acc <PyThread_free_lock@plt+0x19c>
    41bc:	cbz	x0, 415c <PyThread_free_lock@plt+0x182c>
    41c0:	str	wzr, [x0, #16]
    41c4:	ldr	x0, [x20]
    41c8:	sub	x0, x0, #0x1
    41cc:	str	x0, [x20]
    41d0:	cbz	w22, 416c <PyThread_free_lock@plt+0x183c>
    41d4:	ldr	x0, [x19, #16]
    41d8:	ldr	x1, [x0]
    41dc:	cbnz	x1, 4260 <PyThread_free_lock@plt+0x1930>
    41e0:	ldr	x1, [x0, #8]
    41e4:	cbnz	x1, 4260 <PyThread_free_lock@plt+0x1930>
    41e8:	ldr	x1, [x0, #16]
    41ec:	cbnz	x1, 4268 <PyThread_free_lock@plt+0x1938>
    41f0:	ldr	x0, [x0, #24]
    41f4:	cmp	x0, #0x0
    41f8:	cset	w0, eq  // eq = none
    41fc:	mov	w20, #0x0                   	// #0
    4200:	str	w0, [x19, #24]
    4204:	ldr	x0, [x19]
    4208:	bl	27c0 <PyThread_release_lock@plt>
    420c:	ldr	x0, [sp, #104]
    4210:	bl	27c0 <PyThread_release_lock@plt>
    4214:	cbnz	w20, 40c8 <PyThread_free_lock@plt+0x1798>
    4218:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x11550>
    421c:	ldr	x0, [x0, #4048]
    4220:	ldr	x1, [x0]
    4224:	add	x1, x1, #0x1
    4228:	str	x1, [x0]
    422c:	b	40cc <PyThread_free_lock@plt+0x179c>
    4230:	ldr	x1, [x0, #8]
    4234:	cmp	x21, x1
    4238:	b.eq	41c0 <PyThread_free_lock@plt+0x1890>  // b.none
    423c:	mov	x1, x0
    4240:	ldr	x0, [x0]
    4244:	b	41a8 <PyThread_free_lock@plt+0x1878>
    4248:	ldr	x1, [x0, #8]
    424c:	cmp	x21, x1
    4250:	b.eq	418c <PyThread_free_lock@plt+0x185c>  // b.none
    4254:	mov	x1, x0
    4258:	ldr	x0, [x0]
    425c:	b	4174 <PyThread_free_lock@plt+0x1844>
    4260:	mov	w0, #0x1                   	// #1
    4264:	b	41fc <PyThread_free_lock@plt+0x18cc>
    4268:	mov	w0, #0x0                   	// #0
    426c:	b	41fc <PyThread_free_lock@plt+0x18cc>
    4270:	stp	x29, x30, [sp, #-48]!
    4274:	mov	w1, #0x1                   	// #1
    4278:	mov	x29, sp
    427c:	stp	x19, x20, [sp, #16]
    4280:	adrp	x19, 17000 <PyInit__xxsubinterpreters@@Base+0x12550>
    4284:	str	x21, [sp, #32]
    4288:	mov	x21, x0
    428c:	add	x0, x19, #0x930
    4290:	add	x20, x0, #0x8
    4294:	ldr	x0, [x0, #8]
    4298:	bl	2650 <PyThread_acquire_lock@plt>
    429c:	ldr	x1, [x20, #8]
    42a0:	mov	x2, #0x0                   	// #0
    42a4:	mov	x20, x1
    42a8:	cbnz	x20, 42cc <PyThread_free_lock@plt+0x199c>
    42ac:	ldr	x0, [x19, #2352]
    42b0:	mov	x2, x21
    42b4:	adrp	x1, 4000 <PyThread_free_lock@plt+0x16d0>
    42b8:	mov	x21, #0x0                   	// #0
    42bc:	add	x1, x1, #0xe50
    42c0:	mov	w20, #0xffffffff            	// #-1
    42c4:	bl	28c0 <PyErr_Format@plt>
    42c8:	b	4334 <PyThread_free_lock@plt+0x1a04>
    42cc:	ldr	x3, [x20]
    42d0:	ldr	x0, [x20, #16]
    42d4:	cmp	x21, x3
    42d8:	b.eq	42f8 <PyThread_free_lock@plt+0x19c8>  // b.none
    42dc:	mov	x2, x20
    42e0:	mov	x20, x0
    42e4:	b	42a8 <PyThread_free_lock@plt+0x1978>
    42e8:	str	x0, [x2, #16]
    42ec:	b	4308 <PyThread_free_lock@plt+0x19d8>
    42f0:	mov	w20, #0xffffffff            	// #-1
    42f4:	b	4350 <PyThread_free_lock@plt+0x1a20>
    42f8:	cmp	x1, x20
    42fc:	b.ne	42e8 <PyThread_free_lock@plt+0x19b8>  // b.any
    4300:	add	x1, x19, #0x930
    4304:	str	x0, [x1, #16]
    4308:	add	x0, x19, #0x930
    430c:	ldr	x21, [x20, #8]
    4310:	ldr	x1, [x0, #24]
    4314:	sub	x1, x1, #0x1
    4318:	str	x1, [x0, #24]
    431c:	cbz	x21, 4328 <PyThread_free_lock@plt+0x19f8>
    4320:	mov	x0, x21
    4324:	bl	2a90 <PyThread_free_lock@plt+0x160>
    4328:	mov	x0, x20
    432c:	mov	w20, #0x0                   	// #0
    4330:	bl	25a0 <PyMem_Free@plt>
    4334:	add	x19, x19, #0x930
    4338:	ldr	x0, [x19, #8]
    433c:	bl	27c0 <PyThread_release_lock@plt>
    4340:	cbnz	w20, 42f0 <PyThread_free_lock@plt+0x19c0>
    4344:	cbz	x21, 4350 <PyThread_free_lock@plt+0x1a20>
    4348:	mov	x0, x21
    434c:	bl	3aa4 <PyThread_free_lock@plt+0x1174>
    4350:	mov	w0, w20
    4354:	ldp	x19, x20, [sp, #16]
    4358:	ldr	x21, [sp, #32]
    435c:	ldp	x29, x30, [sp], #48
    4360:	ret
    4364:	stp	x29, x30, [sp, #-64]!
    4368:	mov	x0, #0x28                  	// #40
    436c:	mov	x29, sp
    4370:	stp	x19, x20, [sp, #16]
    4374:	stp	x21, x22, [sp, #32]
    4378:	str	x23, [sp, #48]
    437c:	bl	2910 <PyMem_Malloc@plt>
    4380:	mov	x19, x0
    4384:	cbz	x0, 43b4 <PyThread_free_lock@plt+0x1a84>
    4388:	bl	27a0 <PyThread_allocate_lock@plt>
    438c:	str	x0, [x19]
    4390:	cbnz	x0, 43cc <PyThread_free_lock@plt+0x1a9c>
    4394:	mov	x0, x19
    4398:	bl	25a0 <PyMem_Free@plt>
    439c:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x12550>
    43a0:	adrp	x1, 4000 <PyThread_free_lock@plt+0x16d0>
    43a4:	add	x1, x1, #0xfc3
    43a8:	ldr	x0, [x0, #2416]
    43ac:	bl	2680 <PyErr_SetString@plt>
    43b0:	mov	x19, #0x0                   	// #0
    43b4:	mov	x0, x19
    43b8:	ldp	x19, x20, [sp, #16]
    43bc:	ldp	x21, x22, [sp, #32]
    43c0:	ldr	x23, [sp, #48]
    43c4:	ldp	x29, x30, [sp], #64
    43c8:	ret
    43cc:	mov	x0, #0x18                  	// #24
    43d0:	bl	2910 <PyMem_Malloc@plt>
    43d4:	cbnz	x0, 43ec <PyThread_free_lock@plt+0x1abc>
    43d8:	bl	2610 <PyErr_NoMemory@plt>
    43dc:	str	xzr, [x19, #8]
    43e0:	mov	x0, x19
    43e4:	bl	25a0 <PyMem_Free@plt>
    43e8:	b	43b0 <PyThread_free_lock@plt+0x1a80>
    43ec:	stp	xzr, xzr, [x0]
    43f0:	str	xzr, [x0, #16]
    43f4:	str	x0, [x19, #8]
    43f8:	mov	x0, #0x20                  	// #32
    43fc:	bl	2910 <PyMem_Malloc@plt>
    4400:	cbnz	x0, 4428 <PyThread_free_lock@plt+0x1af8>
    4404:	ldr	x20, [x19, #8]
    4408:	ldr	x0, [x20, #8]
    440c:	str	xzr, [x19, #16]
    4410:	bl	326c <PyThread_free_lock@plt+0x93c>
    4414:	stp	xzr, xzr, [x20]
    4418:	mov	x0, x20
    441c:	str	xzr, [x20, #16]
    4420:	bl	25a0 <PyMem_Free@plt>
    4424:	b	43e0 <PyThread_free_lock@plt+0x1ab0>
    4428:	adrp	x23, 17000 <PyInit__xxsubinterpreters@@Base+0x12550>
    442c:	add	x22, x23, #0x930
    4430:	stp	xzr, xzr, [x0]
    4434:	add	x21, x22, #0x8
    4438:	mov	w1, #0x1                   	// #1
    443c:	stp	xzr, xzr, [x0, #16]
    4440:	str	x0, [x19, #16]
    4444:	ldr	x0, [x22, #8]
    4448:	str	w1, [x19, #24]
    444c:	str	xzr, [x19, #32]
    4450:	bl	2650 <PyThread_acquire_lock@plt>
    4454:	ldr	x20, [x21, #24]
    4458:	tbz	x20, #63, 4474 <PyThread_free_lock@plt+0x1b44>
    445c:	ldr	x0, [x22, #64]
    4460:	adrp	x1, 4000 <PyThread_free_lock@plt+0x16d0>
    4464:	add	x1, x1, #0xfea
    4468:	bl	2680 <PyErr_SetString@plt>
    446c:	mov	x20, #0xffffffffffffffff    	// #-1
    4470:	b	44a0 <PyThread_free_lock@plt+0x1b70>
    4474:	add	x0, x20, #0x1
    4478:	str	x0, [x21, #24]
    447c:	mov	x0, #0x20                  	// #32
    4480:	bl	2910 <PyMem_Malloc@plt>
    4484:	cbz	x0, 446c <PyThread_free_lock@plt+0x1b3c>
    4488:	ldr	x1, [x21, #8]
    448c:	stp	x1, xzr, [x0, #16]
    4490:	ldr	x1, [x21, #16]
    4494:	stp	x20, x19, [x0]
    4498:	add	x1, x1, #0x1
    449c:	stp	x0, x1, [x21, #8]
    44a0:	add	x0, x23, #0x930
    44a4:	add	x21, x0, #0x8
    44a8:	ldr	x0, [x0, #8]
    44ac:	bl	27c0 <PyThread_release_lock@plt>
    44b0:	cmn	x20, #0x1
    44b4:	b.ne	44c4 <PyThread_free_lock@plt+0x1b94>  // b.any
    44b8:	mov	x0, x19
    44bc:	bl	3aa4 <PyThread_free_lock@plt+0x1174>
    44c0:	b	43b0 <PyThread_free_lock@plt+0x1a80>
    44c4:	mov	x3, x21
    44c8:	mov	x1, x20
    44cc:	mov	w5, #0x0                   	// #0
    44d0:	mov	w4, #0x0                   	// #0
    44d4:	mov	w2, #0x0                   	// #0
    44d8:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x12550>
    44dc:	add	x0, x0, #0x238
    44e0:	bl	332c <PyThread_free_lock@plt+0x9fc>
    44e4:	mov	x19, x0
    44e8:	cbnz	x0, 43b4 <PyThread_free_lock@plt+0x1a84>
    44ec:	mov	x0, x20
    44f0:	bl	4270 <PyThread_free_lock@plt+0x1940>
    44f4:	b	43b4 <PyThread_free_lock@plt+0x1a84>
    44f8:	stp	x29, x30, [sp, #-32]!
    44fc:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x12550>
    4500:	add	x3, x3, #0x3d8
    4504:	mov	x29, sp
    4508:	mov	x0, x1
    450c:	adrp	x4, 2000 <PyUnicode_FromFormat@plt-0x4f0>
    4510:	mov	x1, x2
    4514:	add	x5, sp, #0x18
    4518:	adrp	x2, 5000 <PyInit__xxsubinterpreters@@Base+0x550>
    451c:	add	x4, x4, #0xd3c
    4520:	add	x3, x3, #0xd8
    4524:	add	x2, x2, #0x5
    4528:	bl	2580 <PyArg_ParseTupleAndKeywords@plt>
    452c:	cbnz	w0, 453c <PyThread_free_lock@plt+0x1c0c>
    4530:	mov	x0, #0x0                   	// #0
    4534:	ldp	x29, x30, [sp], #32
    4538:	ret
    453c:	ldr	x0, [sp, #24]
    4540:	bl	4270 <PyThread_free_lock@plt+0x1940>
    4544:	cbnz	w0, 4530 <PyThread_free_lock@plt+0x1c00>
    4548:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x11550>
    454c:	ldr	x0, [x0, #4048]
    4550:	ldr	x1, [x0]
    4554:	add	x1, x1, #0x1
    4558:	str	x1, [x0]
    455c:	b	4534 <PyThread_free_lock@plt+0x1c04>
    4560:	stp	x29, x30, [sp, #-192]!
    4564:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x12550>
    4568:	add	x3, x3, #0x3d8
    456c:	mov	x29, sp
    4570:	mov	x0, x1
    4574:	add	x6, sp, #0x98
    4578:	mov	x1, x2
    457c:	add	x5, sp, #0x90
    4580:	adrp	x2, 5000 <PyInit__xxsubinterpreters@@Base+0x550>
    4584:	add	x4, sp, #0x88
    4588:	add	x3, x3, #0xe8
    458c:	add	x2, x2, #0xba
    4590:	stp	x19, x20, [sp, #16]
    4594:	stp	x21, x22, [sp, #32]
    4598:	stp	x23, x24, [sp, #48]
    459c:	stp	x25, x26, [sp, #64]
    45a0:	stp	x27, x28, [sp, #80]
    45a4:	str	xzr, [sp, #152]
    45a8:	bl	2580 <PyArg_ParseTupleAndKeywords@plt>
    45ac:	cbnz	w0, 45d0 <PyThread_free_lock@plt+0x1ca0>
    45b0:	mov	x0, #0x0                   	// #0
    45b4:	ldp	x19, x20, [sp, #16]
    45b8:	ldp	x21, x22, [sp, #32]
    45bc:	ldp	x23, x24, [sp, #48]
    45c0:	ldp	x25, x26, [sp, #64]
    45c4:	ldp	x27, x28, [sp, #80]
    45c8:	ldp	x29, x30, [sp], #192
    45cc:	ret
    45d0:	ldr	x0, [sp, #136]
    45d4:	bl	2560 <_PyInterpreterID_LookUp@plt>
    45d8:	mov	x20, x0
    45dc:	cbz	x0, 45b0 <PyThread_free_lock@plt+0x1c80>
    45e0:	ldr	x0, [sp, #144]
    45e4:	add	x1, sp, #0xa0
    45e8:	bl	28b0 <PyUnicode_AsUTF8AndSize@plt>
    45ec:	mov	x22, x0
    45f0:	cbz	x0, 45b0 <PyThread_free_lock@plt+0x1c80>
    45f4:	bl	2530 <strlen@plt>
    45f8:	ldr	x1, [sp, #160]
    45fc:	cmp	x0, x1
    4600:	b.eq	4620 <PyThread_free_lock@plt+0x1cf0>  // b.none
    4604:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x11550>
    4608:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x550>
    460c:	add	x1, x1, #0xca
    4610:	ldr	x0, [x0, #4016]
    4614:	ldr	x0, [x0]
    4618:	bl	2680 <PyErr_SetString@plt>
    461c:	b	45b0 <PyThread_free_lock@plt+0x1c80>
    4620:	mov	x0, x20
    4624:	ldr	x24, [sp, #152]
    4628:	bl	2e6c <PyThread_free_lock@plt+0x53c>
    462c:	cmp	w0, #0x0
    4630:	b.lt	45b0 <PyThread_free_lock@plt+0x1c80>  // b.tstop
    4634:	b.eq	4654 <PyThread_free_lock@plt+0x1d24>  // b.none
    4638:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x11550>
    463c:	adrp	x1, 4000 <PyThread_free_lock@plt+0x16d0>
    4640:	add	x1, x1, #0xe0b
    4644:	ldr	x0, [x0, #4000]
    4648:	ldr	x0, [x0]
    464c:	bl	28c0 <PyErr_Format@plt>
    4650:	b	45b0 <PyThread_free_lock@plt+0x1c80>
    4654:	cbz	x24, 468c <PyThread_free_lock@plt+0x1d5c>
    4658:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x11550>
    465c:	ldr	x0, [x0, #4048]
    4660:	cmp	x24, x0
    4664:	b.eq	468c <PyThread_free_lock@plt+0x1d5c>  // b.none
    4668:	mov	x0, x24
    466c:	bl	2540 <PyDict_Size@plt>
    4670:	mov	x21, x0
    4674:	cbz	x0, 468c <PyThread_free_lock@plt+0x1d5c>
    4678:	mov	x0, #0x10                  	// #16
    467c:	bl	2910 <PyMem_Malloc@plt>
    4680:	mov	x19, x0
    4684:	cbnz	x0, 4790 <PyThread_free_lock@plt+0x1e60>
    4688:	bl	2610 <PyErr_NoMemory@plt>
    468c:	bl	2740 <PyErr_Occurred@plt>
    4690:	mov	x19, x0
    4694:	cbnz	x0, 45b0 <PyThread_free_lock@plt+0x1c80>
    4698:	bl	2800 <_PyInterpreterState_Get@plt>
    469c:	cmp	x20, x0
    46a0:	b.eq	4880 <PyThread_free_lock@plt+0x1f50>  // b.none
    46a4:	mov	x0, x20
    46a8:	bl	2570 <PyInterpreterState_ThreadHead@plt>
    46ac:	bl	2920 <PyThreadState_Swap@plt>
    46b0:	mov	x23, x0
    46b4:	mov	x0, x20
    46b8:	stp	xzr, xzr, [sp, #168]
    46bc:	str	xzr, [sp, #184]
    46c0:	bl	2670 <_PyInterpreterState_GetMainModule@plt>
    46c4:	mov	x21, x0
    46c8:	cbz	x0, 4718 <PyThread_free_lock@plt+0x1de8>
    46cc:	bl	28d0 <PyModule_GetDict@plt>
    46d0:	mov	x20, x0
    46d4:	mov	x0, x21
    46d8:	bl	2c58 <PyThread_free_lock@plt+0x328>
    46dc:	cbz	x20, 4718 <PyThread_free_lock@plt+0x1de8>
    46e0:	ldr	x0, [x20]
    46e4:	add	x0, x0, #0x1
    46e8:	str	x0, [x20]
    46ec:	cbnz	x19, 4900 <PyThread_free_lock@plt+0x1fd0>
    46f0:	mov	x3, x20
    46f4:	mov	x2, x20
    46f8:	mov	x4, #0x0                   	// #0
    46fc:	mov	w1, #0x101                 	// #257
    4700:	mov	x0, x22
    4704:	bl	2770 <PyRun_StringFlags@plt>
    4708:	mov	x21, x0
    470c:	mov	x0, x20
    4710:	bl	2c58 <PyThread_free_lock@plt+0x328>
    4714:	cbnz	x21, 490c <PyThread_free_lock@plt+0x1fdc>
    4718:	add	x2, sp, #0xb8
    471c:	add	x1, sp, #0xb0
    4720:	add	x0, sp, #0xa8
    4724:	bl	2820 <PyErr_Fetch@plt>
    4728:	mov	x0, #0x10                  	// #16
    472c:	ldp	x22, x24, [sp, #168]
    4730:	bl	2910 <PyMem_Malloc@plt>
    4734:	mov	x20, x0
    4738:	cbnz	x0, 4934 <PyThread_free_lock@plt+0x2004>
    473c:	bl	2610 <PyErr_NoMemory@plt>
    4740:	ldr	x0, [sp, #168]
    4744:	cbz	x0, 474c <PyThread_free_lock@plt+0x1e1c>
    4748:	bl	2c58 <PyThread_free_lock@plt+0x328>
    474c:	ldr	x0, [sp, #176]
    4750:	cbz	x0, 4758 <PyThread_free_lock@plt+0x1e28>
    4754:	bl	2c58 <PyThread_free_lock@plt+0x328>
    4758:	ldr	x0, [sp, #184]
    475c:	cbz	x0, 4764 <PyThread_free_lock@plt+0x1e34>
    4760:	bl	2c58 <PyThread_free_lock@plt+0x328>
    4764:	cbnz	x20, 4aa4 <PyThread_free_lock@plt+0x2174>
    4768:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x11550>
    476c:	ldr	x0, [x0, #3976]
    4770:	ldr	x1, [x0]
    4774:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x550>
    4778:	add	x0, x0, #0xfa
    477c:	bl	2550 <fputs@plt>
    4780:	bl	2700 <PyErr_Clear@plt>
    4784:	cbz	x23, 4a84 <PyThread_free_lock@plt+0x2154>
    4788:	mov	w21, #0xffffffff            	// #-1
    478c:	b	4a0c <PyThread_free_lock@plt+0x20dc>
    4790:	str	x21, [x19]
    4794:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    4798:	movk	x0, #0x2aa, lsl #48
    479c:	cmp	x21, x0
    47a0:	b.ls	47b8 <PyThread_free_lock@plt+0x1e88>  // b.plast
    47a4:	str	xzr, [x19, #8]
    47a8:	bl	2610 <PyErr_NoMemory@plt>
    47ac:	mov	x0, x19
    47b0:	bl	25a0 <PyMem_Free@plt>
    47b4:	b	468c <PyThread_free_lock@plt+0x1d5c>
    47b8:	mov	x25, #0x30                  	// #48
    47bc:	mul	x0, x21, x25
    47c0:	bl	2910 <PyMem_Malloc@plt>
    47c4:	str	x0, [x19, #8]
    47c8:	cbz	x0, 47a8 <PyThread_free_lock@plt+0x1e78>
    47cc:	add	x27, sp, #0xb0
    47d0:	add	x28, sp, #0xa8
    47d4:	add	x0, sp, #0xb8
    47d8:	mov	x23, #0x0                   	// #0
    47dc:	stp	x0, x25, [sp, #96]
    47e0:	str	xzr, [sp, #168]
    47e4:	ldr	x3, [sp, #96]
    47e8:	mov	x2, x27
    47ec:	mov	x1, x28
    47f0:	mov	x0, x24
    47f4:	bl	27d0 <PyDict_Next@plt>
    47f8:	cbz	w0, 485c <PyThread_free_lock@plt+0x1f2c>
    47fc:	ldr	x0, [sp, #104]
    4800:	ldr	x2, [x19, #8]
    4804:	mul	x1, x23, x0
    4808:	ldr	x0, [sp, #176]
    480c:	mov	x26, x1
    4810:	ldr	x3, [sp, #184]
    4814:	add	x25, x2, x1
    4818:	stp	x3, x2, [sp, #112]
    481c:	bl	2b64 <PyThread_free_lock@plt+0x234>
    4820:	ldr	x2, [sp, #120]
    4824:	str	x0, [x2, x26]
    4828:	cbz	x0, 485c <PyThread_free_lock@plt+0x1f2c>
    482c:	ldr	x3, [sp, #112]
    4830:	add	x26, x25, #0x8
    4834:	mov	x1, x26
    4838:	mov	x0, x3
    483c:	bl	26e0 <_PyObject_GetCrossInterpreterData@plt>
    4840:	cbz	w0, 4870 <PyThread_free_lock@plt+0x1f40>
    4844:	ldr	x0, [x25]
    4848:	cbz	x0, 4854 <PyThread_free_lock@plt+0x1f24>
    484c:	bl	25a0 <PyMem_Free@plt>
    4850:	str	xzr, [x25]
    4854:	mov	x0, x26
    4858:	bl	2620 <_PyCrossInterpreterData_Release@plt>
    485c:	bl	2740 <PyErr_Occurred@plt>
    4860:	cbz	x0, 4698 <PyThread_free_lock@plt+0x1d68>
    4864:	mov	x0, x19
    4868:	bl	32b8 <PyThread_free_lock@plt+0x988>
    486c:	b	468c <PyThread_free_lock@plt+0x1d5c>
    4870:	add	x23, x23, #0x1
    4874:	cmp	x21, x23
    4878:	b.gt	47e4 <PyThread_free_lock@plt+0x1eb4>
    487c:	b	485c <PyThread_free_lock@plt+0x1f2c>
    4880:	mov	x23, #0x0                   	// #0
    4884:	b	46b4 <PyThread_free_lock@plt+0x1d84>
    4888:	mov	x2, x0
    488c:	mov	x1, x21
    4890:	mov	x0, x20
    4894:	bl	2870 <PyDict_SetItem@plt>
    4898:	mov	w27, w0
    489c:	mov	x0, x21
    48a0:	bl	2c58 <PyThread_free_lock@plt+0x328>
    48a4:	mov	x0, x24
    48a8:	bl	2c58 <PyThread_free_lock@plt+0x328>
    48ac:	cbnz	w27, 48f4 <PyThread_free_lock@plt+0x1fc4>
    48b0:	add	x25, x25, #0x1
    48b4:	ldr	x0, [x19]
    48b8:	cmp	x25, x0
    48bc:	b.ge	46f0 <PyThread_free_lock@plt+0x1dc0>  // b.tcont
    48c0:	mul	x0, x25, x26
    48c4:	ldr	x1, [x19, #8]
    48c8:	add	x24, x1, x0
    48cc:	ldr	x0, [x1, x0]
    48d0:	bl	2840 <PyUnicode_FromString@plt>
    48d4:	mov	x21, x0
    48d8:	cbz	x0, 48f4 <PyThread_free_lock@plt+0x1fc4>
    48dc:	add	x0, x24, #0x8
    48e0:	bl	25b0 <_PyCrossInterpreterData_NewObject@plt>
    48e4:	mov	x24, x0
    48e8:	cbnz	x0, 4888 <PyThread_free_lock@plt+0x1f58>
    48ec:	mov	x0, x21
    48f0:	bl	2c58 <PyThread_free_lock@plt+0x328>
    48f4:	mov	x0, x20
    48f8:	bl	2c58 <PyThread_free_lock@plt+0x328>
    48fc:	b	4718 <PyThread_free_lock@plt+0x1de8>
    4900:	mov	x25, #0x0                   	// #0
    4904:	mov	x26, #0x30                  	// #48
    4908:	b	48b4 <PyThread_free_lock@plt+0x1f84>
    490c:	mov	x0, x21
    4910:	bl	2c58 <PyThread_free_lock@plt+0x328>
    4914:	cbnz	x23, 4a04 <PyThread_free_lock@plt+0x20d4>
    4918:	cbnz	x19, 4a9c <PyThread_free_lock@plt+0x216c>
    491c:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x11550>
    4920:	ldr	x0, [x0, #4048]
    4924:	ldr	x1, [x0]
    4928:	add	x1, x1, #0x1
    492c:	str	x1, [x0]
    4930:	b	45b4 <PyThread_free_lock@plt+0x1c84>
    4934:	stp	xzr, xzr, [x20]
    4938:	adrp	x21, 5000 <PyInit__xxsubinterpreters@@Base+0x550>
    493c:	add	x21, x21, #0xf7
    4940:	mov	x1, x22
    4944:	mov	x0, x21
    4948:	bl	24f0 <PyUnicode_FromFormat@plt>
    494c:	mov	x22, x0
    4950:	cbz	x0, 49ec <PyThread_free_lock@plt+0x20bc>
    4954:	bl	2b64 <PyThread_free_lock@plt+0x234>
    4958:	str	x0, [x20]
    495c:	mov	x0, x22
    4960:	bl	2c58 <PyThread_free_lock@plt+0x328>
    4964:	ldr	x0, [x20]
    4968:	cbnz	x0, 49a0 <PyThread_free_lock@plt+0x2070>
    496c:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x11550>
    4970:	adrp	x21, 5000 <PyInit__xxsubinterpreters@@Base+0x550>
    4974:	add	x21, x21, #0x44
    4978:	ldr	x0, [x0, #4008]
    497c:	ldr	x0, [x0]
    4980:	bl	26b0 <PyErr_ExceptionMatches@plt>
    4984:	bl	2700 <PyErr_Clear@plt>
    4988:	ldr	x0, [x20]
    498c:	cbz	x0, 4998 <PyThread_free_lock@plt+0x2068>
    4990:	bl	25a0 <PyMem_Free@plt>
    4994:	str	xzr, [x20]
    4998:	str	x21, [x20, #8]
    499c:	b	4740 <PyThread_free_lock@plt+0x1e10>
    49a0:	cbz	x24, 4740 <PyThread_free_lock@plt+0x1e10>
    49a4:	mov	x0, x21
    49a8:	mov	x1, x24
    49ac:	bl	24f0 <PyUnicode_FromFormat@plt>
    49b0:	mov	x21, x0
    49b4:	cbz	x0, 49f8 <PyThread_free_lock@plt+0x20c8>
    49b8:	bl	2b64 <PyThread_free_lock@plt+0x234>
    49bc:	str	x0, [x20, #8]
    49c0:	mov	x0, x21
    49c4:	bl	2c58 <PyThread_free_lock@plt+0x328>
    49c8:	ldr	x0, [x20, #8]
    49cc:	cbnz	x0, 4740 <PyThread_free_lock@plt+0x1e10>
    49d0:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x11550>
    49d4:	adrp	x21, 5000 <PyInit__xxsubinterpreters@@Base+0x550>
    49d8:	add	x21, x21, #0x18
    49dc:	ldr	x0, [x0, #4008]
    49e0:	ldr	x0, [x0]
    49e4:	bl	26b0 <PyErr_ExceptionMatches@plt>
    49e8:	b	4984 <PyThread_free_lock@plt+0x2054>
    49ec:	adrp	x21, 5000 <PyInit__xxsubinterpreters@@Base+0x550>
    49f0:	add	x21, x21, #0x72
    49f4:	b	4984 <PyThread_free_lock@plt+0x2054>
    49f8:	adrp	x21, 5000 <PyInit__xxsubinterpreters@@Base+0x550>
    49fc:	add	x21, x21, #0x97
    4a00:	b	4984 <PyThread_free_lock@plt+0x2054>
    4a04:	mov	w21, #0x0                   	// #0
    4a08:	mov	x20, #0x0                   	// #0
    4a0c:	mov	x0, x23
    4a10:	bl	2920 <PyThreadState_Swap@plt>
    4a14:	cbz	x20, 4a80 <PyThread_free_lock@plt+0x2150>
    4a18:	ldp	x1, x3, [x20]
    4a1c:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x12550>
    4a20:	ldr	x0, [x0, #2424]
    4a24:	cbz	x1, 4a68 <PyThread_free_lock@plt+0x2138>
    4a28:	cbz	x3, 4a70 <PyThread_free_lock@plt+0x2140>
    4a2c:	mov	x2, x1
    4a30:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x550>
    4a34:	add	x1, x1, #0x12e
    4a38:	bl	28c0 <PyErr_Format@plt>
    4a3c:	ldr	x0, [x20]
    4a40:	cbz	x0, 4a48 <PyThread_free_lock@plt+0x2118>
    4a44:	bl	25a0 <PyMem_Free@plt>
    4a48:	ldr	x0, [x20, #8]
    4a4c:	cbz	x0, 4a54 <PyThread_free_lock@plt+0x2124>
    4a50:	bl	25a0 <PyMem_Free@plt>
    4a54:	mov	x0, x20
    4a58:	bl	25a0 <PyMem_Free@plt>
    4a5c:	cbnz	x19, 4a90 <PyThread_free_lock@plt+0x2160>
    4a60:	cbz	w21, 491c <PyThread_free_lock@plt+0x1fec>
    4a64:	b	45b0 <PyThread_free_lock@plt+0x1c80>
    4a68:	cbz	x3, 4a78 <PyThread_free_lock@plt+0x2148>
    4a6c:	mov	x1, x3
    4a70:	bl	2680 <PyErr_SetString@plt>
    4a74:	b	4a3c <PyThread_free_lock@plt+0x210c>
    4a78:	bl	26a0 <PyErr_SetNone@plt>
    4a7c:	b	4a3c <PyThread_free_lock@plt+0x210c>
    4a80:	cbz	w21, 4918 <PyThread_free_lock@plt+0x1fe8>
    4a84:	bl	2610 <PyErr_NoMemory@plt>
    4a88:	cbz	x19, 45b0 <PyThread_free_lock@plt+0x1c80>
    4a8c:	mov	w21, #0xffffffff            	// #-1
    4a90:	mov	x0, x19
    4a94:	bl	32b8 <PyThread_free_lock@plt+0x988>
    4a98:	b	4a60 <PyThread_free_lock@plt+0x2130>
    4a9c:	mov	w21, #0x0                   	// #0
    4aa0:	b	4a90 <PyThread_free_lock@plt+0x2160>
    4aa4:	cbnz	x23, 4788 <PyThread_free_lock@plt+0x1e58>
    4aa8:	mov	w21, #0xffffffff            	// #-1
    4aac:	b	4a18 <PyThread_free_lock@plt+0x20e8>

0000000000004ab0 <PyInit__xxsubinterpreters@@Base>:
    4ab0:	stp	x29, x30, [sp, #-64]!
    4ab4:	mov	x29, sp
    4ab8:	stp	x19, x20, [sp, #16]
    4abc:	stp	x23, x24, [sp, #48]
    4ac0:	adrp	x23, 17000 <PyInit__xxsubinterpreters@@Base+0x12550>
    4ac4:	add	x20, x23, #0x930
    4ac8:	stp	x21, x22, [sp, #32]
    4acc:	ldr	x0, [x20, #8]
    4ad0:	cbnz	x0, 4b0c <PyInit__xxsubinterpreters@@Base+0x5c>
    4ad4:	bl	27a0 <PyThread_allocate_lock@plt>
    4ad8:	str	x0, [x20, #8]
    4adc:	mov	x19, x0
    4ae0:	cbnz	x0, 4b0c <PyInit__xxsubinterpreters@@Base+0x5c>
    4ae4:	ldr	x0, [x20, #64]
    4ae8:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x550>
    4aec:	add	x1, x1, #0x135
    4af0:	bl	2680 <PyErr_SetString@plt>
    4af4:	mov	x0, x19
    4af8:	ldp	x19, x20, [sp, #16]
    4afc:	ldp	x21, x22, [sp, #32]
    4b00:	ldp	x23, x24, [sp, #48]
    4b04:	ldp	x29, x30, [sp], #64
    4b08:	ret
    4b0c:	add	x24, x23, #0x930
    4b10:	adrp	x22, 17000 <PyInit__xxsubinterpreters@@Base+0x12550>
    4b14:	add	x0, x22, #0x238
    4b18:	stp	xzr, xzr, [x24, #16]
    4b1c:	str	xzr, [x24, #32]
    4b20:	bl	26d0 <PyType_Ready@plt>
    4b24:	cbnz	w0, 4b80 <PyInit__xxsubinterpreters@@Base+0xd0>
    4b28:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x12550>
    4b2c:	add	x0, x0, #0x3d8
    4b30:	add	x0, x0, #0x108
    4b34:	mov	w1, #0x3f5                 	// #1013
    4b38:	bl	2750 <PyModule_Create2@plt>
    4b3c:	mov	x19, x0
    4b40:	cbz	x0, 4b80 <PyInit__xxsubinterpreters@@Base+0xd0>
    4b44:	bl	28d0 <PyModule_GetDict@plt>
    4b48:	mov	x20, x0
    4b4c:	ldr	x0, [x24, #72]
    4b50:	adrp	x21, 16000 <PyInit__xxsubinterpreters@@Base+0x11550>
    4b54:	cbz	x0, 4b88 <PyInit__xxsubinterpreters@@Base+0xd8>
    4b58:	ldr	x21, [x21, #4000]
    4b5c:	mov	x2, #0x0                   	// #0
    4b60:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x550>
    4b64:	add	x0, x0, #0x163
    4b68:	ldr	x1, [x21]
    4b6c:	add	x21, x23, #0x930
    4b70:	bl	26f0 <PyErr_NewException@plt>
    4b74:	str	x0, [x21, #64]
    4b78:	mov	x2, x0
    4b7c:	cbnz	x0, 4bc4 <PyInit__xxsubinterpreters@@Base+0x114>
    4b80:	mov	x19, #0x0                   	// #0
    4b84:	b	4af4 <PyInit__xxsubinterpreters@@Base+0x44>
    4b88:	ldr	x0, [x21, #4000]
    4b8c:	mov	x2, #0x0                   	// #0
    4b90:	ldr	x1, [x0]
    4b94:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x550>
    4b98:	add	x0, x0, #0x183
    4b9c:	bl	26f0 <PyErr_NewException@plt>
    4ba0:	str	x0, [x24, #72]
    4ba4:	mov	x2, x0
    4ba8:	cbz	x0, 4b80 <PyInit__xxsubinterpreters@@Base+0xd0>
    4bac:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x550>
    4bb0:	mov	x0, x20
    4bb4:	add	x1, x1, #0x196
    4bb8:	bl	2510 <PyDict_SetItemString@plt>
    4bbc:	cbz	w0, 4b58 <PyInit__xxsubinterpreters@@Base+0xa8>
    4bc0:	b	4b80 <PyInit__xxsubinterpreters@@Base+0xd0>
    4bc4:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x550>
    4bc8:	mov	x0, x20
    4bcc:	add	x1, x1, #0x176
    4bd0:	bl	2510 <PyDict_SetItemString@plt>
    4bd4:	cbnz	w0, 4b80 <PyInit__xxsubinterpreters@@Base+0xd0>
    4bd8:	ldr	x1, [x21, #64]
    4bdc:	mov	x2, #0x0                   	// #0
    4be0:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x550>
    4be4:	add	x0, x0, #0x1a5
    4be8:	bl	26f0 <PyErr_NewException@plt>
    4bec:	str	x0, [x23, #2352]
    4bf0:	mov	x2, x0
    4bf4:	cbz	x0, 4b80 <PyInit__xxsubinterpreters@@Base+0xd0>
    4bf8:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x550>
    4bfc:	mov	x0, x20
    4c00:	add	x1, x1, #0x1b8
    4c04:	bl	2510 <PyDict_SetItemString@plt>
    4c08:	cbnz	w0, 4b80 <PyInit__xxsubinterpreters@@Base+0xd0>
    4c0c:	ldr	x1, [x21, #64]
    4c10:	mov	x2, #0x0                   	// #0
    4c14:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x550>
    4c18:	add	x0, x0, #0x1cd
    4c1c:	bl	26f0 <PyErr_NewException@plt>
    4c20:	str	x0, [x21, #40]
    4c24:	mov	x2, x0
    4c28:	cbz	x0, 4b80 <PyInit__xxsubinterpreters@@Base+0xd0>
    4c2c:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x550>
    4c30:	mov	x0, x20
    4c34:	add	x1, x1, #0x1e0
    4c38:	bl	2510 <PyDict_SetItemString@plt>
    4c3c:	cbnz	w0, 4b80 <PyInit__xxsubinterpreters@@Base+0xd0>
    4c40:	ldr	x1, [x21, #64]
    4c44:	mov	x2, #0x0                   	// #0
    4c48:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x550>
    4c4c:	add	x0, x0, #0x1f3
    4c50:	bl	26f0 <PyErr_NewException@plt>
    4c54:	str	x0, [x21, #48]
    4c58:	mov	x2, x0
    4c5c:	cbz	x0, 4b80 <PyInit__xxsubinterpreters@@Base+0xd0>
    4c60:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x550>
    4c64:	mov	x0, x20
    4c68:	add	x1, x1, #0x206
    4c6c:	bl	2510 <PyDict_SetItemString@plt>
    4c70:	cbnz	w0, 4b80 <PyInit__xxsubinterpreters@@Base+0xd0>
    4c74:	ldr	x1, [x21, #64]
    4c78:	mov	x2, #0x0                   	// #0
    4c7c:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x550>
    4c80:	add	x0, x0, #0x218
    4c84:	bl	26f0 <PyErr_NewException@plt>
    4c88:	str	x0, [x21, #56]
    4c8c:	mov	x2, x0
    4c90:	cbz	x0, 4b80 <PyInit__xxsubinterpreters@@Base+0xd0>
    4c94:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x550>
    4c98:	mov	x0, x20
    4c9c:	add	x1, x1, #0x22b
    4ca0:	bl	2510 <PyDict_SetItemString@plt>
    4ca4:	cbnz	w0, 4b80 <PyInit__xxsubinterpreters@@Base+0xd0>
    4ca8:	ldr	x0, [x22, #568]
    4cac:	add	x21, x22, #0x238
    4cb0:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x550>
    4cb4:	mov	x2, x21
    4cb8:	add	x0, x0, #0x1
    4cbc:	add	x1, x1, #0x330
    4cc0:	str	x0, [x22, #568]
    4cc4:	mov	x0, x20
    4cc8:	bl	2510 <PyDict_SetItemString@plt>
    4ccc:	cbnz	w0, 4b80 <PyInit__xxsubinterpreters@@Base+0xd0>
    4cd0:	adrp	x2, 16000 <PyInit__xxsubinterpreters@@Base+0x11550>
    4cd4:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x550>
    4cd8:	add	x1, x1, #0x240
    4cdc:	ldr	x2, [x2, #3984]
    4ce0:	ldr	x0, [x2]
    4ce4:	add	x0, x0, #0x1
    4ce8:	str	x0, [x2]
    4cec:	mov	x0, x20
    4cf0:	bl	2510 <PyDict_SetItemString@plt>
    4cf4:	cbnz	w0, 4b80 <PyInit__xxsubinterpreters@@Base+0xd0>
    4cf8:	adrp	x1, 2000 <PyUnicode_FromFormat@plt-0x4f0>
    4cfc:	mov	x0, x21
    4d00:	add	x1, x1, #0xa14
    4d04:	bl	2860 <_PyCrossInterpreterData_RegisterClass@plt>
    4d08:	cbz	w0, 4af4 <PyInit__xxsubinterpreters@@Base+0x44>
    4d0c:	b	4b80 <PyInit__xxsubinterpreters@@Base+0xd0>

Disassembly of section .fini:

0000000000004d10 <.fini>:
    4d10:	stp	x29, x30, [sp, #-16]!
    4d14:	mov	x29, sp
    4d18:	ldp	x29, x30, [sp], #16
    4d1c:	ret
