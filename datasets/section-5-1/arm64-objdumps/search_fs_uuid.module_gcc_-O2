
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//search_fs_uuid.module_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <iterate_device>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	ldr	w0, [x1, #16]
  14:	mov	x19, x1
  18:	cbz	w0, 28 <iterate_device+0x28>
  1c:	ldrb	w0, [x20]
  20:	cmp	w0, #0x66
  24:	b.eq	110 <iterate_device+0x110>  // b.none
  28:	mov	x0, x20
  2c:	stp	x21, x22, [sp, #32]
  30:	bl	0 <grub_device_open>
  34:	mov	x21, x0
  38:	cbz	x0, f0 <iterate_device+0xf0>
  3c:	bl	0 <grub_fs_probe>
  40:	cbz	x0, e8 <iterate_device+0xe8>
  44:	ldr	x2, [x0, #64]
  48:	cbz	x2, e8 <iterate_device+0xe8>
  4c:	add	x1, sp, #0x38
  50:	mov	x0, x21
  54:	blr	x2
  58:	adrp	x0, 0 <iterate_device>
  5c:	ldr	x22, [x0]
  60:	ldr	w0, [x22]
  64:	cbnz	w0, c8 <iterate_device+0xc8>
  68:	ldr	x0, [sp, #56]
  6c:	cbz	x0, c8 <iterate_device+0xc8>
  70:	ldrb	w2, [x0]
  74:	mov	x8, x0
  78:	ldr	x4, [x19]
  7c:	cbnz	w2, 98 <iterate_device+0x98>
  80:	b	138 <iterate_device+0x138>
  84:	csel	w3, w3, w1, cc  // cc = lo, ul, last
  88:	cmp	w3, w9
  8c:	b.ne	220 <iterate_device+0x220>  // b.any
  90:	ldrb	w2, [x8, #1]!
  94:	cbz	w2, 138 <iterate_device+0x138>
  98:	ldrb	w1, [x4]
  9c:	sub	w7, w2, #0x41
  a0:	cmp	w7, #0x1a
  a4:	add	w5, w2, #0x20
  a8:	sub	w6, w1, #0x41
  ac:	csel	w9, w5, w2, cc  // cc = lo, ul, last
  b0:	add	x4, x4, #0x1
  b4:	add	w3, w1, #0x20
  b8:	cmp	w6, #0x1a
  bc:	cbnz	w1, 84 <iterate_device+0x84>
  c0:	bl	0 <grub_free>
  c4:	nop
  c8:	mov	x0, x21
  cc:	bl	0 <grub_device_close>
  d0:	str	wzr, [x22]
  d4:	mov	w0, #0x0                   	// #0
  d8:	ldp	x21, x22, [sp, #32]
  dc:	ldp	x19, x20, [sp, #16]
  e0:	ldp	x29, x30, [sp], #64
  e4:	ret
  e8:	mov	x0, x21
  ec:	bl	0 <grub_device_close>
  f0:	adrp	x0, 0 <iterate_device>
  f4:	ldp	x19, x20, [sp, #16]
  f8:	ldr	x22, [x0]
  fc:	mov	w0, #0x0                   	// #0
 100:	str	wzr, [x22]
 104:	ldp	x21, x22, [sp, #32]
 108:	ldp	x29, x30, [sp], #64
 10c:	ret
 110:	ldrb	w0, [x20, #1]
 114:	cmp	w0, #0x64
 118:	b.ne	28 <iterate_device+0x28>  // b.any
 11c:	ldrb	w0, [x20, #2]
 120:	sub	w0, w0, #0x30
 124:	and	w0, w0, #0xff
 128:	cmp	w0, #0x9
 12c:	b.hi	28 <iterate_device+0x28>  // b.pmore
 130:	mov	w0, #0x1                   	// #1
 134:	b	dc <iterate_device+0xdc>
 138:	ldrb	w1, [x4]
 13c:	mov	w2, #0x0                   	// #0
 140:	sub	w6, w1, #0x41
 144:	cmp	w6, #0x1a
 148:	add	w3, w1, #0x20
 14c:	csel	w1, w3, w1, cc  // cc = lo, ul, last
 150:	cmp	w2, w1
 154:	b.ne	c0 <iterate_device+0xc0>  // b.any
 158:	bl	0 <grub_free>
 15c:	mov	x0, x21
 160:	bl	0 <grub_device_close>
 164:	ldr	w0, [x19, #40]
 168:	cbz	w0, 1a8 <iterate_device+0x1a8>
 16c:	ldr	w1, [x19, #36]
 170:	ldr	x0, [x19, #8]
 174:	add	w1, w1, #0x1
 178:	str	w1, [x19, #36]
 17c:	cbz	x0, 200 <iterate_device+0x200>
 180:	mov	x1, x20
 184:	bl	0 <grub_env_set>
 188:	ldr	x0, [x19, #8]
 18c:	str	wzr, [x22]
 190:	ldp	x19, x20, [sp, #16]
 194:	cmp	x0, #0x0
 198:	cset	w0, ne  // ne = any
 19c:	ldp	x21, x22, [sp, #32]
 1a0:	ldp	x29, x30, [sp], #64
 1a4:	ret
 1a8:	ldr	w1, [x19, #36]
 1ac:	cbnz	w1, 170 <iterate_device+0x170>
 1b0:	mov	x0, #0x18                  	// #24
 1b4:	bl	0 <grub_malloc>
 1b8:	mov	x21, x0
 1bc:	cbz	x0, 214 <iterate_device+0x214>
 1c0:	ldr	x0, [x19]
 1c4:	bl	0 <grub_strdup>
 1c8:	str	x0, [x21, #8]
 1cc:	mov	x0, x20
 1d0:	bl	0 <grub_strdup>
 1d4:	str	x0, [x21, #16]
 1d8:	cbz	x0, 22c <iterate_device+0x22c>
 1dc:	ldr	x1, [x21, #8]
 1e0:	cbz	x1, 22c <iterate_device+0x22c>
 1e4:	adrp	x0, 0 <iterate_device>
 1e8:	ldr	w1, [x19, #36]
 1ec:	ldr	x0, [x0]
 1f0:	ldr	x2, [x0]
 1f4:	str	x2, [x21]
 1f8:	str	x21, [x0]
 1fc:	b	170 <iterate_device+0x170>
 200:	adrp	x0, 0 <iterate_device>
 204:	mov	x1, x20
 208:	ldr	x0, [x0]
 20c:	bl	0 <grub_printf>
 210:	b	188 <iterate_device+0x188>
 214:	ldr	w1, [x19, #36]
 218:	str	wzr, [x22]
 21c:	b	170 <iterate_device+0x170>
 220:	cmp	w7, #0x1a
 224:	csel	w2, w5, w2, cc  // cc = lo, ul, last
 228:	b	144 <iterate_device+0x144>
 22c:	bl	0 <grub_free>
 230:	ldr	x0, [x21, #8]
 234:	bl	0 <grub_free>
 238:	mov	x0, x21
 23c:	bl	0 <grub_free>
 240:	ldr	w1, [x19, #36]
 244:	str	wzr, [x22]
 248:	b	170 <iterate_device+0x170>
 24c:	nop
	...

0000000000000268 <part_hook>:
 268:	stp	x29, x30, [sp, #-48]!
 26c:	mov	x29, sp
 270:	stp	x19, x20, [sp, #16]
 274:	mov	x20, x0
 278:	mov	x0, x1
 27c:	str	x21, [sp, #32]
 280:	mov	x21, x2
 284:	bl	0 <grub_partition_get_name>
 288:	cbz	x0, 2e0 <part_hook+0x78>
 28c:	mov	x19, x0
 290:	adrp	x0, 0 <iterate_device>
 294:	ldr	x1, [x20]
 298:	mov	x2, x19
 29c:	ldr	x0, [x0]
 2a0:	bl	0 <grub_xasprintf>
 2a4:	mov	x20, x0
 2a8:	mov	x0, x19
 2ac:	bl	0 <grub_free>
 2b0:	cbz	x20, 2e0 <part_hook+0x78>
 2b4:	mov	x1, x21
 2b8:	mov	x0, x20
 2bc:	bl	0 <iterate_device>
 2c0:	mov	w19, w0
 2c4:	mov	x0, x20
 2c8:	bl	0 <grub_free>
 2cc:	mov	w0, w19
 2d0:	ldp	x19, x20, [sp, #16]
 2d4:	ldr	x21, [sp, #32]
 2d8:	ldp	x29, x30, [sp], #48
 2dc:	ret
 2e0:	mov	w19, #0x1                   	// #1
 2e4:	mov	w0, w19
 2e8:	ldp	x19, x20, [sp, #16]
 2ec:	ldr	x21, [sp, #32]
 2f0:	ldp	x29, x30, [sp], #48
 2f4:	ret
	...

0000000000000300 <try>:
 300:	stp	x29, x30, [sp, #-80]!
 304:	adrp	x1, 0 <iterate_device>
 308:	mov	x29, sp
 30c:	stp	x19, x20, [sp, #16]
 310:	ldr	x20, [x1]
 314:	stp	x21, x22, [sp, #32]
 318:	mov	x22, x0
 31c:	ldr	x19, [x20]
 320:	cbz	x19, 384 <try+0x84>
 324:	ldr	x9, [x0]
 328:	mov	x5, x9
 32c:	ldr	x6, [x19, #8]
 330:	ldrb	w3, [x6]
 334:	cbnz	w3, 350 <try+0x50>
 338:	b	484 <try+0x184>
 33c:	csel	w4, w4, w1, cc  // cc = lo, ul, last
 340:	cmp	w4, w8
 344:	b.ne	4f0 <try+0x1f0>  // b.any
 348:	ldrb	w3, [x6, #1]!
 34c:	cbz	w3, 484 <try+0x184>
 350:	ldrb	w1, [x5]
 354:	sub	w7, w3, #0x41
 358:	cmp	w7, #0x1a
 35c:	add	w0, w3, #0x20
 360:	sub	w2, w1, #0x41
 364:	csel	w8, w0, w3, cc  // cc = lo, ul, last
 368:	add	x5, x5, #0x1
 36c:	add	w4, w1, #0x20
 370:	cmp	w2, #0x1a
 374:	cbnz	w1, 33c <try+0x3c>
 378:	mov	x20, x19
 37c:	ldr	x19, [x19]
 380:	cbnz	x19, 328 <try+0x28>
 384:	stp	x23, x24, [sp, #48]
 388:	stp	x25, x26, [sp, #64]
 38c:	ldr	w1, [x22, #32]
 390:	mov	w20, #0x0                   	// #0
 394:	adrp	x24, 0 <iterate_device>
 398:	mov	w25, #0x2c                  	// #44
 39c:	cbz	w1, 400 <try+0x100>
 3a0:	ldr	x0, [x22, #24]
 3a4:	mov	w23, w20
 3a8:	ldr	x19, [x0, x23, lsl #3]
 3ac:	ldrb	w0, [x19]
 3b0:	cbz	w0, 3f4 <try+0xf4>
 3b4:	mov	x0, x19
 3b8:	bl	0 <grub_strlen>
 3bc:	sub	x21, x0, #0x1
 3c0:	add	x26, x19, x21
 3c4:	ldrb	w0, [x19, x21]
 3c8:	cmp	w0, #0x2c
 3cc:	b.ne	3d4 <try+0xd4>  // b.any
 3d0:	strb	wzr, [x19, x21]
 3d4:	ldr	x0, [x22, #24]
 3d8:	mov	x1, x22
 3dc:	ldr	x0, [x0, x23, lsl #3]
 3e0:	bl	0 <iterate_device>
 3e4:	cbnz	w0, 514 <try+0x214>
 3e8:	ldrb	w0, [x19, x21]
 3ec:	cbz	w0, 424 <try+0x124>
 3f0:	ldr	w1, [x22, #32]
 3f4:	add	w20, w20, #0x1
 3f8:	cmp	w1, w20
 3fc:	b.hi	3a0 <try+0xa0>  // b.pmore
 400:	mov	x1, x22
 404:	adrp	x0, 0 <iterate_device>
 408:	ldp	x19, x20, [sp, #16]
 40c:	ldp	x21, x22, [sp, #32]
 410:	ldp	x23, x24, [sp, #48]
 414:	ldp	x25, x26, [sp, #64]
 418:	ldp	x29, x30, [sp], #80
 41c:	ldr	x0, [x0]
 420:	b	0 <grub_device_iterate>
 424:	ldr	x0, [x22, #24]
 428:	ldr	x0, [x0, x23, lsl #3]
 42c:	bl	0 <grub_device_open>
 430:	mov	x23, x0
 434:	cbz	x0, 500 <try+0x200>
 438:	ldr	x2, [x0]
 43c:	cbz	x2, 4fc <try+0x1fc>
 440:	ldr	x1, [x24]
 444:	mov	x0, x2
 448:	mov	x2, x22
 44c:	bl	0 <grub_partition_iterate>
 450:	mov	w26, w0
 454:	ldrb	w1, [x19, x21]
 458:	cbnz	w1, 460 <try+0x160>
 45c:	strb	w25, [x19, x21]
 460:	mov	x0, x23
 464:	bl	0 <grub_device_close>
 468:	cbz	w26, 3f0 <try+0xf0>
 46c:	ldp	x19, x20, [sp, #16]
 470:	ldp	x21, x22, [sp, #32]
 474:	ldp	x23, x24, [sp, #48]
 478:	ldp	x25, x26, [sp, #64]
 47c:	ldp	x29, x30, [sp], #80
 480:	ret
 484:	ldrb	w1, [x5]
 488:	mov	w3, #0x0                   	// #0
 48c:	sub	w2, w1, #0x41
 490:	cmp	w2, #0x1a
 494:	add	w0, w1, #0x20
 498:	csel	w1, w0, w1, cc  // cc = lo, ul, last
 49c:	cmp	w3, w1
 4a0:	b.ne	378 <try+0x78>  // b.any
 4a4:	ldr	x0, [x19, #16]
 4a8:	mov	w1, #0x1                   	// #1
 4ac:	str	w1, [x22, #40]
 4b0:	mov	x1, x22
 4b4:	bl	0 <iterate_device>
 4b8:	cbnz	w0, 53c <try+0x23c>
 4bc:	ldr	w0, [x22, #36]
 4c0:	stp	x23, x24, [sp, #48]
 4c4:	stp	x25, x26, [sp, #64]
 4c8:	str	wzr, [x22, #40]
 4cc:	cbnz	w0, 38c <try+0x8c>
 4d0:	ldp	x1, x0, [x19]
 4d4:	str	x1, [x20]
 4d8:	bl	0 <grub_free>
 4dc:	ldr	x0, [x19, #16]
 4e0:	bl	0 <grub_free>
 4e4:	mov	x0, x19
 4e8:	bl	0 <grub_free>
 4ec:	b	38c <try+0x8c>
 4f0:	cmp	w7, #0x1a
 4f4:	csel	w3, w0, w3, cc  // cc = lo, ul, last
 4f8:	b	490 <try+0x190>
 4fc:	bl	0 <grub_device_close>
 500:	ldrb	w0, [x19, x21]
 504:	cbnz	w0, 3f0 <try+0xf0>
 508:	strb	w25, [x19, x21]
 50c:	ldr	w1, [x22, #32]
 510:	b	3f4 <try+0xf4>
 514:	ldrb	w0, [x26]
 518:	cbnz	w0, 46c <try+0x16c>
 51c:	mov	w0, #0x2c                  	// #44
 520:	strb	w0, [x26]
 524:	ldp	x19, x20, [sp, #16]
 528:	ldp	x21, x22, [sp, #32]
 52c:	ldp	x23, x24, [sp, #48]
 530:	ldp	x25, x26, [sp, #64]
 534:	ldp	x29, x30, [sp], #80
 538:	ret
 53c:	str	wzr, [x22, #40]
 540:	ldp	x19, x20, [sp, #16]
 544:	ldp	x21, x22, [sp, #32]
 548:	ldp	x29, x30, [sp], #80
 54c:	ret
	...

0000000000000568 <grub_search_fs_uuid>:
 568:	stp	x29, x30, [sp, #-96]!
 56c:	mov	x29, sp
 570:	stp	x19, x20, [sp, #16]
 574:	mov	x19, x0
 578:	stp	x21, x22, [sp, #32]
 57c:	stp	x0, x1, [sp, #48]
 580:	str	w2, [sp, #64]
 584:	str	x3, [sp, #72]
 588:	str	w4, [sp, #80]
 58c:	stur	xzr, [sp, #84]
 590:	cbz	x1, 5dc <grub_search_fs_uuid+0x74>
 594:	adrp	x1, 0 <iterate_device>
 598:	add	x21, sp, #0x30
 59c:	mov	x0, x21
 5a0:	ldr	x20, [x1]
 5a4:	ldr	x22, [x20]
 5a8:	str	xzr, [x20]
 5ac:	bl	300 <try>
 5b0:	str	x22, [x20]
 5b4:	adrp	x0, 0 <iterate_device>
 5b8:	ldr	x20, [x0]
 5bc:	ldr	w0, [x20]
 5c0:	cbnz	w0, 5cc <grub_search_fs_uuid+0x64>
 5c4:	ldr	w0, [sp, #84]
 5c8:	cbz	w0, 5e8 <grub_search_fs_uuid+0x80>
 5cc:	ldp	x19, x20, [sp, #16]
 5d0:	ldp	x21, x22, [sp, #32]
 5d4:	ldp	x29, x30, [sp], #96
 5d8:	ret
 5dc:	adrp	x0, 0 <iterate_device>
 5e0:	add	x21, sp, #0x30
 5e4:	ldr	x20, [x0]
 5e8:	mov	x0, x21
 5ec:	bl	300 <try>
 5f0:	ldr	w0, [x20]
 5f4:	cbnz	w0, 5cc <grub_search_fs_uuid+0x64>
 5f8:	ldr	w0, [sp, #84]
 5fc:	cbnz	w0, 5cc <grub_search_fs_uuid+0x64>
 600:	adrp	x1, 0 <iterate_device>
 604:	mov	x2, x19
 608:	mov	w0, #0x5                   	// #5
 60c:	ldr	x1, [x1]
 610:	bl	0 <grub_error>
 614:	ldp	x19, x20, [sp, #16]
 618:	ldp	x21, x22, [sp, #32]
 61c:	ldp	x29, x30, [sp], #96
 620:	ret
 624:	nop
	...

0000000000000640 <grub_cmd_do_search>:
 640:	cbz	w1, 694 <grub_cmd_do_search+0x54>
 644:	stp	x29, x30, [sp, #-16]!
 648:	mov	w4, w1
 64c:	cmp	w1, #0x1
 650:	mov	x29, sp
 654:	mov	x1, #0x0                   	// #0
 658:	ldr	x0, [x2]
 65c:	b.eq	664 <grub_cmd_do_search+0x24>  // b.none
 660:	ldr	x1, [x2, #8]
 664:	cmp	w4, #0x2
 668:	mov	w3, #0x2                   	// #2
 66c:	csel	w4, w4, w3, ge  // ge = tcont
 670:	sub	w4, w4, #0x2
 674:	add	x3, x2, #0x10
 678:	mov	w2, #0x0                   	// #0
 67c:	bl	568 <grub_search_fs_uuid>
 680:	adrp	x0, 0 <iterate_device>
 684:	ldp	x29, x30, [sp], #16
 688:	ldr	x0, [x0]
 68c:	ldr	w0, [x0]
 690:	ret
 694:	adrp	x1, 0 <iterate_device>
 698:	mov	w0, #0x12                  	// #18
 69c:	ldr	x1, [x1]
 6a0:	b	0 <grub_error>
 6a4:	nop
	...

00000000000006b8 <grub_mod_init>:
 6b8:	stp	x29, x30, [sp, #-16]!
 6bc:	adrp	x3, 0 <iterate_device>
 6c0:	adrp	x2, 0 <iterate_device>
 6c4:	adrp	x1, 0 <iterate_device>
 6c8:	adrp	x0, 0 <iterate_device>
 6cc:	mov	x29, sp
 6d0:	ldr	x3, [x3]
 6d4:	mov	w4, #0x0                   	// #0
 6d8:	ldr	x2, [x2]
 6dc:	ldr	x1, [x1]
 6e0:	ldr	x0, [x0]
 6e4:	bl	0 <grub_register_command_prio>
 6e8:	adrp	x1, 0 <iterate_device>
 6ec:	ldr	x1, [x1]
 6f0:	str	x0, [x1, #8]
 6f4:	ldp	x29, x30, [sp], #16
 6f8:	ret
 6fc:	nop
	...

0000000000000728 <grub_mod_fini>:
 728:	adrp	x0, 0 <iterate_device>
 72c:	ldr	x0, [x0]
 730:	ldr	x0, [x0, #8]
 734:	b	0 <grub_unregister_command>
	...
