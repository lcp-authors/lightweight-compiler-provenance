
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//functional_test.module_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_functional_all_tests>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	adrp	x0, 0 <grub_functional_all_tests>
       8:	mov	x29, sp
       c:	ldr	x0, [x0]
      10:	stp	x19, x20, [sp, #16]
      14:	bl	0 <grub_dl_load>
      18:	adrp	x1, 0 <grub_functional_all_tests>
      1c:	adrp	x0, 0 <grub_functional_all_tests>
      20:	ldr	x1, [x1]
      24:	ldr	x0, [x0]
      28:	str	wzr, [x1]
      2c:	bl	0 <grub_dl_load>
      30:	adrp	x0, 0 <grub_functional_all_tests>
      34:	ldr	x0, [x0]
      38:	bl	0 <grub_dl_load>
      3c:	adrp	x0, 0 <grub_functional_all_tests>
      40:	ldr	x0, [x0]
      44:	bl	0 <grub_dl_load>
      48:	adrp	x0, 0 <grub_functional_all_tests>
      4c:	ldr	x0, [x0]
      50:	bl	0 <grub_dl_load>
      54:	adrp	x0, 0 <grub_functional_all_tests>
      58:	ldr	x0, [x0]
      5c:	bl	0 <grub_dl_load>
      60:	adrp	x0, 0 <grub_functional_all_tests>
      64:	ldr	x0, [x0]
      68:	bl	0 <grub_dl_load>
      6c:	adrp	x0, 0 <grub_functional_all_tests>
      70:	ldr	x0, [x0]
      74:	bl	0 <grub_dl_load>
      78:	adrp	x0, 0 <grub_functional_all_tests>
      7c:	ldr	x0, [x0]
      80:	bl	0 <grub_dl_load>
      84:	adrp	x0, 0 <grub_functional_all_tests>
      88:	ldr	x0, [x0]
      8c:	bl	0 <grub_dl_load>
      90:	adrp	x0, 0 <grub_functional_all_tests>
      94:	ldr	x0, [x0]
      98:	bl	0 <grub_dl_load>
      9c:	adrp	x0, 0 <grub_functional_all_tests>
      a0:	ldr	x0, [x0]
      a4:	bl	0 <grub_dl_load>
      a8:	adrp	x0, 0 <grub_functional_all_tests>
      ac:	ldr	x0, [x0]
      b0:	bl	0 <grub_dl_load>
      b4:	adrp	x0, 0 <grub_functional_all_tests>
      b8:	ldr	x0, [x0]
      bc:	bl	0 <grub_dl_load>
      c0:	adrp	x0, 0 <grub_functional_all_tests>
      c4:	ldr	x0, [x0]
      c8:	bl	0 <grub_dl_load>
      cc:	adrp	x0, 0 <grub_functional_all_tests>
      d0:	ldr	x0, [x0]
      d4:	bl	0 <grub_dl_load>
      d8:	adrp	x0, 0 <grub_functional_all_tests>
      dc:	ldr	x0, [x0]
      e0:	ldr	x19, [x0]
      e4:	cbz	x19, 128 <grub_functional_all_tests+0x128>
      e8:	mov	w20, #0x1                   	// #1
      ec:	nop
      f0:	mov	x0, x19
      f4:	bl	868 <grub_test_run>
      f8:	ldr	x19, [x19]
      fc:	cmp	w0, #0x0
     100:	csel	w20, w20, wzr, eq  // eq = none
     104:	cbnz	x19, f0 <grub_functional_all_tests+0xf0>
     108:	cbnz	w20, 128 <grub_functional_all_tests+0x128>
     10c:	adrp	x0, 0 <grub_functional_all_tests>
     110:	ldr	x0, [x0]
     114:	bl	0 <grub_printf>
     118:	mov	w0, #0x0                   	// #0
     11c:	ldp	x19, x20, [sp, #16]
     120:	ldp	x29, x30, [sp], #32
     124:	ret
     128:	adrp	x0, 0 <grub_functional_all_tests>
     12c:	ldr	x0, [x0]
     130:	bl	0 <grub_printf>
     134:	mov	w0, #0x0                   	// #0
     138:	ldp	x19, x20, [sp, #16]
     13c:	ldp	x29, x30, [sp], #32
     140:	ret
     144:	nop
	...

00000000000001e8 <grub_functional_test>:
     1e8:	stp	x29, x30, [sp, #-80]!
     1ec:	adrp	x0, 0 <grub_functional_all_tests>
     1f0:	mov	x29, sp
     1f4:	ldr	x0, [x0]
     1f8:	stp	x19, x20, [sp, #16]
     1fc:	ldr	x20, [x0]
     200:	cbz	x20, 2d4 <grub_functional_test+0xec>
     204:	stp	x21, x22, [sp, #32]
     208:	sub	w22, w1, #0x1
     20c:	sub	x21, x2, #0x8
     210:	add	x22, x22, #0x2
     214:	stp	x23, x24, [sp, #48]
     218:	mov	w23, w1
     21c:	mov	w24, #0x1                   	// #1
     220:	str	x25, [sp, #64]
     224:	adrp	x25, 0 <grub_functional_all_tests>
     228:	cmp	w23, #0x0
     22c:	mov	x19, #0x1                   	// #1
     230:	b.gt	240 <grub_functional_test+0x58>
     234:	b	258 <grub_functional_test+0x70>
     238:	cmp	x19, x22
     23c:	b.eq	2b0 <grub_functional_test+0xc8>  // b.none
     240:	ldr	x0, [x21, x19, lsl #3]
     244:	ldr	x1, [x20, #16]
     248:	bl	0 <grub_strcmp>
     24c:	mov	w2, w19
     250:	add	x19, x19, #0x1
     254:	cbnz	w0, 238 <grub_functional_test+0x50>
     258:	ldr	x19, [x25]
     25c:	str	wzr, [x19]
     260:	cbnz	w24, 29c <grub_functional_test+0xb4>
     264:	str	wzr, [x19]
     268:	ldr	x20, [x20]
     26c:	cbnz	x20, 228 <grub_functional_test+0x40>
     270:	cbnz	w24, 2c8 <grub_functional_test+0xe0>
     274:	adrp	x0, 0 <grub_functional_all_tests>
     278:	ldr	x0, [x0]
     27c:	bl	0 <grub_printf>
     280:	mov	w0, #0x0                   	// #0
     284:	ldp	x19, x20, [sp, #16]
     288:	ldp	x21, x22, [sp, #32]
     28c:	ldp	x23, x24, [sp, #48]
     290:	ldr	x25, [sp, #64]
     294:	ldp	x29, x30, [sp], #80
     298:	ret
     29c:	mov	x0, x20
     2a0:	bl	868 <grub_test_run>
     2a4:	cmp	w0, #0x0
     2a8:	cset	w24, eq  // eq = none
     2ac:	b	264 <grub_functional_test+0x7c>
     2b0:	cmp	w23, w2
     2b4:	b.eq	268 <grub_functional_test+0x80>  // b.none
     2b8:	ldr	x19, [x25]
     2bc:	str	wzr, [x19]
     2c0:	cbz	w24, 264 <grub_functional_test+0x7c>
     2c4:	b	29c <grub_functional_test+0xb4>
     2c8:	ldp	x21, x22, [sp, #32]
     2cc:	ldp	x23, x24, [sp, #48]
     2d0:	ldr	x25, [sp, #64]
     2d4:	adrp	x0, 0 <grub_functional_all_tests>
     2d8:	ldr	x0, [x0]
     2dc:	bl	0 <grub_printf>
     2e0:	mov	w0, #0x0                   	// #0
     2e4:	ldp	x19, x20, [sp, #16]
     2e8:	ldp	x29, x30, [sp], #80
     2ec:	ret
	...

0000000000000310 <grub_mod_init>:
     310:	stp	x29, x30, [sp, #-32]!
     314:	adrp	x2, 0 <grub_functional_all_tests>
     318:	adrp	x1, 0 <grub_functional_all_tests>
     31c:	adrp	x0, 0 <grub_functional_all_tests>
     320:	mov	x29, sp
     324:	ldr	x4, [x2]
     328:	mov	x5, #0x0                   	// #0
     32c:	ldr	x1, [x1]
     330:	mov	x3, #0x0                   	// #0
     334:	ldr	x0, [x0]
     338:	mov	w2, #0x0                   	// #0
     33c:	str	x19, [sp, #16]
     340:	bl	0 <grub_register_extcmd>
     344:	mov	x6, x0
     348:	adrp	x3, 0 <grub_functional_all_tests>
     34c:	adrp	x2, 0 <grub_functional_all_tests>
     350:	adrp	x1, 0 <grub_functional_all_tests>
     354:	adrp	x0, 0 <grub_functional_all_tests>
     358:	ldr	x19, [x3]
     35c:	mov	x5, #0x0                   	// #0
     360:	ldr	x4, [x2]
     364:	mov	x3, #0x0                   	// #0
     368:	ldr	x1, [x1]
     36c:	mov	w2, #0x0                   	// #0
     370:	ldr	x0, [x0]
     374:	str	x6, [x19]
     378:	bl	0 <grub_register_extcmd>
     37c:	str	x0, [x19]
     380:	ldr	x19, [sp, #16]
     384:	ldp	x29, x30, [sp], #32
     388:	ret
     38c:	nop
	...

00000000000003c8 <grub_mod_fini>:
     3c8:	adrp	x0, 0 <grub_functional_all_tests>
     3cc:	ldr	x0, [x0]
     3d0:	ldr	x0, [x0]
     3d4:	b	0 <grub_unregister_extcmd>
	...

00000000000003e0 <failure_append_text>:
     3e0:	stp	x29, x30, [sp, #-192]!
     3e4:	mov	w8, #0xffffffd0            	// #-48
     3e8:	mov	x29, sp
     3ec:	stp	x19, x20, [sp, #16]
     3f0:	mov	x19, x0
     3f4:	add	x0, sp, #0xc0
     3f8:	add	x9, sp, #0x90
     3fc:	str	x0, [sp, #80]
     400:	mov	x0, x1
     404:	add	x1, sp, #0xc0
     408:	str	x1, [sp, #88]
     40c:	add	x1, sp, #0x30
     410:	str	x9, [sp, #96]
     414:	stp	w8, wzr, [sp, #104]
     418:	ldp	x10, x11, [sp, #80]
     41c:	str	x21, [sp, #32]
     420:	ldp	x8, x9, [sp, #96]
     424:	stp	x10, x11, [sp, #48]
     428:	stp	x8, x9, [sp, #64]
     42c:	stp	x10, x11, [sp, #112]
     430:	stp	x8, x9, [sp, #128]
     434:	stp	x2, x3, [sp, #144]
     438:	stp	x4, x5, [sp, #160]
     43c:	stp	x6, x7, [sp, #176]
     440:	bl	0 <grub_xvasprintf>
     444:	mov	x20, x0
     448:	ldr	x21, [x19, #40]
     44c:	cbz	x21, 488 <failure_append_text+0xa8>
     450:	adrp	x0, 0 <grub_functional_all_tests>
     454:	mov	x2, x20
     458:	mov	x1, x21
     45c:	ldr	x0, [x0]
     460:	bl	0 <grub_xasprintf>
     464:	str	x0, [x19, #40]
     468:	mov	x0, x21
     46c:	bl	0 <grub_free>
     470:	mov	x0, x20
     474:	bl	0 <grub_free>
     478:	ldp	x19, x20, [sp, #16]
     47c:	ldr	x21, [sp, #32]
     480:	ldp	x29, x30, [sp], #192
     484:	ret
     488:	str	x0, [x19, #40]
     48c:	ldp	x19, x20, [sp, #16]
     490:	ldr	x21, [sp, #32]
     494:	ldp	x29, x30, [sp], #192
     498:	ret
     49c:	nop
	...

00000000000004a8 <grub_test_nonzero>:
     4a8:	stp	x29, x30, [sp, #-192]!
     4ac:	mov	x29, sp
     4b0:	stp	x5, x6, [sp, #168]
     4b4:	str	x7, [sp, #184]
     4b8:	cbz	w0, 4c4 <grub_test_nonzero+0x1c>
     4bc:	ldp	x29, x30, [sp], #192
     4c0:	ret
     4c4:	add	x0, sp, #0xc0
     4c8:	str	x23, [sp, #48]
     4cc:	mov	w23, w3
     4d0:	add	x3, sp, #0xc0
     4d4:	str	x0, [sp, #96]
     4d8:	mov	x0, #0x30                  	// #48
     4dc:	str	x3, [sp, #104]
     4e0:	stp	x19, x20, [sp, #16]
     4e4:	mov	x20, x1
     4e8:	mov	w1, #0xffffffe8            	// #-24
     4ec:	stp	x21, x22, [sp, #32]
     4f0:	mov	x21, x2
     4f4:	add	x2, sp, #0xa0
     4f8:	str	x2, [sp, #112]
     4fc:	mov	x22, x4
     500:	stp	w1, wzr, [sp, #120]
     504:	ldp	x2, x3, [sp, #96]
     508:	stp	x2, x3, [sp, #128]
     50c:	ldp	x2, x3, [sp, #112]
     510:	stp	x2, x3, [sp, #144]
     514:	bl	0 <grub_malloc>
     518:	mov	x19, x0
     51c:	cbz	x0, 560 <grub_test_nonzero+0xb8>
     520:	adrp	x0, 0 <grub_functional_all_tests>
     524:	cmp	x20, #0x0
     528:	ldr	x0, [x0]
     52c:	csel	x0, x20, x0, ne  // ne = any
     530:	bl	0 <grub_strdup>
     534:	str	x0, [x19, #16]
     538:	cbz	x0, 5ac <grub_test_nonzero+0x104>
     53c:	adrp	x0, 0 <grub_functional_all_tests>
     540:	cmp	x21, #0x0
     544:	ldr	x0, [x0]
     548:	csel	x0, x21, x0, ne  // ne = any
     54c:	bl	0 <grub_strdup>
     550:	str	x0, [x19, #24]
     554:	cbz	x0, 5a4 <grub_test_nonzero+0xfc>
     558:	str	w23, [x19, #32]
     55c:	str	xzr, [x19, #40]
     560:	ldp	x6, x7, [sp, #128]
     564:	add	x2, sp, #0x40
     568:	ldp	x4, x5, [sp, #144]
     56c:	mov	x1, x22
     570:	mov	x0, x19
     574:	stp	x6, x7, [sp, #64]
     578:	stp	x4, x5, [sp, #80]
     57c:	bl	3e0 <failure_append_text>
     580:	adrp	x0, 0 <grub_functional_all_tests>
     584:	mov	x1, x19
     588:	ldr	x0, [x0]
     58c:	bl	0 <grub_list_push>
     590:	ldp	x19, x20, [sp, #16]
     594:	ldp	x21, x22, [sp, #32]
     598:	ldr	x23, [sp, #48]
     59c:	ldp	x29, x30, [sp], #192
     5a0:	ret
     5a4:	ldr	x0, [x19, #16]
     5a8:	bl	0 <grub_free>
     5ac:	mov	x0, x19
     5b0:	mov	x19, #0x0                   	// #0
     5b4:	bl	0 <grub_free>
     5b8:	b	560 <grub_test_nonzero+0xb8>
     5bc:	nop
	...

00000000000005d8 <grub_test_assert_helper>:
     5d8:	stp	x29, x30, [sp, #-176]!
     5dc:	mov	x29, sp
     5e0:	stp	x6, x7, [sp, #160]
     5e4:	cbz	w0, 5f0 <grub_test_assert_helper+0x18>
     5e8:	ldp	x29, x30, [sp], #176
     5ec:	ret
     5f0:	mov	x0, #0x30                  	// #48
     5f4:	stp	x19, x20, [sp, #16]
     5f8:	mov	x20, x1
     5fc:	stp	x21, x22, [sp, #32]
     600:	mov	x21, x2
     604:	mov	x22, x5
     608:	stp	x23, x24, [sp, #48]
     60c:	mov	w24, w3
     610:	mov	x23, x4
     614:	bl	0 <grub_malloc>
     618:	mov	x19, x0
     61c:	cbz	x0, 720 <grub_test_assert_helper+0x148>
     620:	adrp	x0, 0 <grub_functional_all_tests>
     624:	cmp	x20, #0x0
     628:	ldr	x0, [x0]
     62c:	csel	x0, x20, x0, ne  // ne = any
     630:	bl	0 <grub_strdup>
     634:	str	x0, [x19, #16]
     638:	cbz	x0, 718 <grub_test_assert_helper+0x140>
     63c:	adrp	x0, 0 <grub_functional_all_tests>
     640:	cmp	x21, #0x0
     644:	ldr	x0, [x0]
     648:	csel	x0, x21, x0, ne  // ne = any
     64c:	bl	0 <grub_strdup>
     650:	str	x0, [x19, #24]
     654:	cbz	x0, 710 <grub_test_assert_helper+0x138>
     658:	adrp	x0, 0 <grub_functional_all_tests>
     65c:	str	w24, [x19, #32]
     660:	str	xzr, [x19, #40]
     664:	mov	x2, x23
     668:	ldr	x1, [x0]
     66c:	mov	x0, x19
     670:	bl	3e0 <failure_append_text>
     674:	add	x1, sp, #0xa0
     678:	add	x0, sp, #0xb0
     67c:	mov	w2, #0xfffffff0            	// #-16
     680:	stp	x0, x0, [sp, #96]
     684:	mov	x0, x22
     688:	str	x1, [sp, #112]
     68c:	add	x1, sp, #0x40
     690:	stp	w2, wzr, [sp, #120]
     694:	ldp	x4, x5, [sp, #96]
     698:	stp	x4, x5, [sp, #64]
     69c:	ldp	x2, x3, [sp, #112]
     6a0:	stp	x2, x3, [sp, #80]
     6a4:	stp	x4, x5, [sp, #128]
     6a8:	stp	x2, x3, [sp, #144]
     6ac:	bl	0 <grub_xvasprintf>
     6b0:	ldr	x21, [x19, #40]
     6b4:	mov	x20, x0
     6b8:	cbz	x21, 708 <grub_test_assert_helper+0x130>
     6bc:	adrp	x0, 0 <grub_functional_all_tests>
     6c0:	mov	x2, x20
     6c4:	mov	x1, x21
     6c8:	ldr	x0, [x0]
     6cc:	bl	0 <grub_xasprintf>
     6d0:	str	x0, [x19, #40]
     6d4:	mov	x0, x21
     6d8:	bl	0 <grub_free>
     6dc:	mov	x0, x20
     6e0:	bl	0 <grub_free>
     6e4:	adrp	x0, 0 <grub_functional_all_tests>
     6e8:	mov	x1, x19
     6ec:	ldr	x0, [x0]
     6f0:	bl	0 <grub_list_push>
     6f4:	ldp	x19, x20, [sp, #16]
     6f8:	ldp	x21, x22, [sp, #32]
     6fc:	ldp	x23, x24, [sp, #48]
     700:	ldp	x29, x30, [sp], #176
     704:	ret
     708:	str	x0, [x19, #40]
     70c:	b	6e4 <grub_test_assert_helper+0x10c>
     710:	ldr	x0, [x19, #16]
     714:	bl	0 <grub_free>
     718:	mov	x0, x19
     71c:	bl	0 <grub_free>
     720:	adrp	x1, 0 <grub_functional_all_tests>
     724:	mov	x2, x23
     728:	mov	x0, #0x0                   	// #0
     72c:	ldr	x1, [x1]
     730:	bl	3e0 <failure_append_text>
     734:	add	x1, sp, #0xa0
     738:	add	x0, sp, #0xb0
     73c:	mov	w2, #0xfffffff0            	// #-16
     740:	stp	x0, x0, [sp, #96]
     744:	mov	x0, x22
     748:	str	x1, [sp, #112]
     74c:	add	x1, sp, #0x40
     750:	stp	w2, wzr, [sp, #120]
     754:	ldp	x4, x5, [sp, #96]
     758:	stp	x4, x5, [sp, #64]
     75c:	ldp	x2, x3, [sp, #112]
     760:	stp	x2, x3, [sp, #80]
     764:	stp	x4, x5, [sp, #128]
     768:	stp	x2, x3, [sp, #144]
     76c:	bl	0 <grub_xvasprintf>
     770:	mov	x0, #0x0                   	// #0
     774:	ldr	x0, [x0, #40]
     778:	brk	#0x3e8
     77c:	nop
	...

00000000000007a8 <grub_test_register>:
     7a8:	stp	x29, x30, [sp, #-48]!
     7ac:	mov	x29, sp
     7b0:	stp	x19, x20, [sp, #16]
     7b4:	mov	x20, x1
     7b8:	str	x21, [sp, #32]
     7bc:	mov	x21, x0
     7c0:	mov	x0, #0x20                  	// #32
     7c4:	bl	0 <grub_malloc>
     7c8:	cbz	x0, 7f8 <grub_test_register+0x50>
     7cc:	mov	x19, x0
     7d0:	mov	x0, x21
     7d4:	bl	0 <grub_strdup>
     7d8:	ldr	x21, [sp, #32]
     7dc:	stp	x0, x20, [x19, #16]
     7e0:	mov	x1, x19
     7e4:	adrp	x2, 0 <grub_functional_all_tests>
     7e8:	ldp	x19, x20, [sp, #16]
     7ec:	ldp	x29, x30, [sp], #48
     7f0:	ldr	x0, [x2]
     7f4:	b	0 <grub_list_push>
     7f8:	ldp	x19, x20, [sp, #16]
     7fc:	ldr	x21, [sp, #32]
     800:	ldp	x29, x30, [sp], #48
     804:	ret
	...

0000000000000810 <grub_test_unregister>:
     810:	stp	x29, x30, [sp, #-32]!
     814:	adrp	x2, 0 <grub_functional_all_tests>
     818:	mov	x1, x0
     81c:	mov	x29, sp
     820:	ldr	x0, [x2]
     824:	ldr	x0, [x0]
     828:	bl	0 <grub_named_list_find>
     82c:	cbz	x0, 858 <grub_test_unregister+0x48>
     830:	str	x19, [sp, #16]
     834:	mov	x19, x0
     838:	bl	0 <grub_list_remove>
     83c:	ldr	x0, [x19, #16]
     840:	cbz	x0, 848 <grub_test_unregister+0x38>
     844:	bl	0 <grub_free>
     848:	mov	x0, x19
     84c:	ldr	x19, [sp, #16]
     850:	ldp	x29, x30, [sp], #32
     854:	b	0 <grub_free>
     858:	ldp	x29, x30, [sp], #32
     85c:	ret
	...

0000000000000868 <grub_test_run>:
     868:	stp	x29, x30, [sp, #-80]!
     86c:	mov	x29, sp
     870:	stp	x21, x22, [sp, #32]
     874:	mov	x21, x0
     878:	ldr	x0, [x0, #24]
     87c:	stp	x19, x20, [sp, #16]
     880:	blr	x0
     884:	adrp	x0, 0 <grub_functional_all_tests>
     888:	ldr	x1, [x21, #16]
     88c:	ldr	x0, [x0]
     890:	bl	0 <grub_printf>
     894:	adrp	x0, 0 <grub_functional_all_tests>
     898:	ldr	x20, [x0]
     89c:	ldr	x19, [x20]
     8a0:	cbz	x19, 9d0 <grub_test_run+0x168>
     8a4:	adrp	x0, 0 <grub_functional_all_tests>
     8a8:	stp	x23, x24, [sp, #48]
     8ac:	adrp	x22, 0 <grub_functional_all_tests>
     8b0:	ldr	x23, [x0]
     8b4:	adrp	x24, 0 <grub_functional_all_tests>
     8b8:	str	x25, [sp, #64]
     8bc:	adrp	x25, 0 <grub_functional_all_tests>
     8c0:	ldp	x1, x2, [x19, #16]
     8c4:	mov	x0, x23
     8c8:	ldr	x3, [x25]
     8cc:	ldr	x4, [x19, #40]
     8d0:	ldr	x5, [x24]
     8d4:	cmp	x1, #0x0
     8d8:	csel	x1, x3, x1, eq  // eq = none
     8dc:	cmp	x2, #0x0
     8e0:	ldr	w3, [x19, #32]
     8e4:	csel	x2, x5, x2, eq  // eq = none
     8e8:	cbz	x4, 98c <grub_test_run+0x124>
     8ec:	bl	0 <grub_printf>
     8f0:	ldr	x19, [x19]
     8f4:	cbnz	x19, 8c0 <grub_test_run+0x58>
     8f8:	ldr	x0, [x20]
     8fc:	ldr	x1, [x21, #16]
     900:	cbz	x0, 9a8 <grub_test_run+0x140>
     904:	adrp	x0, 0 <grub_functional_all_tests>
     908:	ldr	x0, [x0]
     90c:	bl	0 <grub_printf>
     910:	ldr	x19, [x20]
     914:	cbz	x19, 95c <grub_test_run+0xf4>
     918:	ldr	x0, [x19, #40]
     91c:	ldr	x1, [x19]
     920:	str	x1, [x20]
     924:	cbz	x0, 92c <grub_test_run+0xc4>
     928:	bl	0 <grub_free>
     92c:	ldr	x0, [x19, #24]
     930:	cbz	x0, 938 <grub_test_run+0xd0>
     934:	bl	0 <grub_free>
     938:	ldr	x1, [x19, #16]
     93c:	mov	x0, x19
     940:	cbz	x1, 97c <grub_test_run+0x114>
     944:	mov	x0, x1
     948:	bl	0 <grub_free>
     94c:	mov	x0, x19
     950:	bl	0 <grub_free>
     954:	ldr	x19, [x20]
     958:	cbnz	x19, 918 <grub_test_run+0xb0>
     95c:	ldp	x23, x24, [sp, #48]
     960:	mov	w0, #0x1                   	// #1
     964:	ldr	x25, [sp, #64]
     968:	str	xzr, [x20]
     96c:	ldp	x19, x20, [sp, #16]
     970:	ldp	x21, x22, [sp, #32]
     974:	ldp	x29, x30, [sp], #80
     978:	ret
     97c:	bl	0 <grub_free>
     980:	ldr	x19, [x20]
     984:	cbnz	x19, 918 <grub_test_run+0xb0>
     988:	b	95c <grub_test_run+0xf4>
     98c:	ldr	x4, [x22]
     990:	bl	0 <grub_printf>
     994:	ldr	x19, [x19]
     998:	cbnz	x19, 8c0 <grub_test_run+0x58>
     99c:	ldr	x0, [x20]
     9a0:	ldr	x1, [x21, #16]
     9a4:	cbnz	x0, 904 <grub_test_run+0x9c>
     9a8:	ldp	x23, x24, [sp, #48]
     9ac:	ldr	x25, [sp, #64]
     9b0:	adrp	x0, 0 <grub_functional_all_tests>
     9b4:	ldr	x0, [x0]
     9b8:	bl	0 <grub_printf>
     9bc:	mov	w0, #0x0                   	// #0
     9c0:	ldp	x19, x20, [sp, #16]
     9c4:	ldp	x21, x22, [sp, #32]
     9c8:	ldp	x29, x30, [sp], #80
     9cc:	ret
     9d0:	ldr	x1, [x21, #16]
     9d4:	b	9b0 <grub_test_run+0x148>
	...

0000000000000a18 <grub_video_checksum_get_modename>:
     a18:	stp	x29, x30, [sp, #-32]!
     a1c:	adrp	x0, 0 <grub_functional_all_tests>
     a20:	mov	x29, sp
     a24:	str	x19, [sp, #16]
     a28:	ldr	x19, [x0]
     a2c:	ldr	w0, [x19, #8]
     a30:	tbnz	w0, #1, a9c <grub_video_checksum_get_modename+0x84>
     a34:	ldp	w3, w1, [x19, #36]
     a38:	ldr	w4, [x19, #44]
     a3c:	ldr	w0, [x19, #52]
     a40:	ldr	w6, [x19, #60]
     a44:	cbz	w1, a70 <grub_video_checksum_get_modename+0x58>
     a48:	adrp	x1, 0 <grub_functional_all_tests>
     a4c:	mov	w5, w0
     a50:	add	x0, x19, #0x50
     a54:	ldr	x2, [x1]
     a58:	mov	x1, #0x28                  	// #40
     a5c:	bl	0 <grub_snprintf>
     a60:	add	x0, x19, #0x50
     a64:	ldr	x19, [sp, #16]
     a68:	ldp	x29, x30, [sp], #32
     a6c:	ret
     a70:	adrp	x1, 0 <grub_functional_all_tests>
     a74:	mov	w5, w3
     a78:	mov	w3, w0
     a7c:	add	x0, x19, #0x50
     a80:	ldr	x2, [x1]
     a84:	mov	x1, #0x28                  	// #40
     a88:	bl	0 <grub_snprintf>
     a8c:	add	x0, x19, #0x50
     a90:	ldr	x19, [sp, #16]
     a94:	ldp	x29, x30, [sp], #32
     a98:	ret
     a9c:	adrp	x2, 0 <grub_functional_all_tests>
     aa0:	ldr	w3, [x19, #24]
     aa4:	add	x0, x19, #0x50
     aa8:	mov	x1, #0x28                  	// #40
     aac:	ldr	x2, [x2]
     ab0:	bl	0 <grub_snprintf>
     ab4:	add	x0, x19, #0x50
     ab8:	ldr	x19, [sp, #16]
     abc:	ldp	x29, x30, [sp], #32
     ac0:	ret
     ac4:	nop
	...

0000000000000ae8 <checksum>:
     ae8:	sub	sp, sp, #0x70
     aec:	stp	x29, x30, [sp, #48]
     af0:	add	x29, sp, #0x30
     af4:	stp	x19, x20, [sp, #64]
     af8:	bl	1470 <grub_video_capture_get_framebuffer>
     afc:	adrp	x2, 0 <grub_functional_all_tests>
     b00:	mov	x1, x0
     b04:	mov	w0, #0x0                   	// #0
     b08:	ldr	x19, [x2]
     b0c:	ldr	w2, [x19, #4]
     b10:	ldr	w3, [x19, #20]
     b14:	mul	w2, w3, w2
     b18:	bl	0 <grub_getcrc32c>
     b1c:	mov	w20, w0
     b20:	ldr	x1, [x19, #120]
     b24:	cbz	x1, b34 <checksum+0x4c>
     b28:	ldp	w0, w2, [x19, #128]
     b2c:	cmp	w0, w2
     b30:	b.lt	bb8 <checksum+0xd0>  // b.tstop
     b34:	stp	x21, x22, [sp, #80]
     b38:	ldr	w22, [x19]
     b3c:	ldr	x21, [x19, #136]
     b40:	str	x23, [sp, #96]
     b44:	ldr	w23, [x19, #4]
     b48:	bl	a18 <grub_video_checksum_get_modename>
     b4c:	adrp	x5, 0 <grub_functional_all_tests>
     b50:	adrp	x4, 0 <grub_functional_all_tests>
     b54:	adrp	x2, 0 <grub_functional_all_tests>
     b58:	adrp	x1, 0 <grub_functional_all_tests>
     b5c:	ldr	x5, [x5]
     b60:	mov	w7, w22
     b64:	ldr	x4, [x4]
     b68:	mov	x6, x21
     b6c:	ldr	x2, [x2]
     b70:	ldr	x1, [x1]
     b74:	ldr	w3, [x19, #128]
     b78:	str	w23, [sp]
     b7c:	str	x0, [sp, #8]
     b80:	mov	w0, #0x0                   	// #0
     b84:	str	w3, [sp, #16]
     b88:	mov	w3, #0x25f                 	// #607
     b8c:	str	w20, [sp, #24]
     b90:	bl	5d8 <grub_test_assert_helper>
     b94:	ldr	w0, [x19, #128]
     b98:	ldp	x29, x30, [sp, #48]
     b9c:	add	w0, w0, #0x1
     ba0:	ldp	x21, x22, [sp, #80]
     ba4:	ldr	x23, [sp, #96]
     ba8:	str	w0, [x19, #128]
     bac:	ldp	x19, x20, [sp, #64]
     bb0:	add	sp, sp, #0x70
     bb4:	ret
     bb8:	ldr	w1, [x1, w0, sxtw #2]
     bbc:	cmp	w1, w20
     bc0:	b.eq	c38 <checksum+0x150>  // b.none
     bc4:	stp	x21, x22, [sp, #80]
     bc8:	ldr	w21, [x19, #4]
     bcc:	ldr	x22, [x19, #136]
     bd0:	str	x23, [sp, #96]
     bd4:	ldr	w23, [x19]
     bd8:	bl	a18 <grub_video_checksum_get_modename>
     bdc:	ldr	w8, [x19, #128]
     be0:	mov	x10, x0
     be4:	ldr	x9, [x19, #120]
     be8:	adrp	x3, 0 <grub_functional_all_tests>
     bec:	adrp	x2, 0 <grub_functional_all_tests>
     bf0:	adrp	x0, 0 <grub_functional_all_tests>
     bf4:	adrp	x1, 0 <grub_functional_all_tests>
     bf8:	mov	w7, w23
     bfc:	ldr	w9, [x9, w8, sxtw #2]
     c00:	mov	x6, x22
     c04:	ldr	x5, [x3]
     c08:	str	w21, [sp]
     c0c:	ldr	x4, [x2]
     c10:	str	x10, [sp, #8]
     c14:	ldr	x2, [x0]
     c18:	str	w8, [sp, #16]
     c1c:	ldr	x1, [x1]
     c20:	str	w20, [sp, #24]
     c24:	str	w9, [sp, #32]
     c28:	mov	w3, #0x267                 	// #615
     c2c:	mov	w0, #0x0                   	// #0
     c30:	bl	5d8 <grub_test_assert_helper>
     c34:	b	b94 <checksum+0xac>
     c38:	add	w0, w0, #0x1
     c3c:	str	w0, [x19, #128]
     c40:	ldp	x29, x30, [sp, #48]
     c44:	ldp	x19, x20, [sp, #64]
     c48:	add	sp, sp, #0x70
     c4c:	ret
	...

0000000000000c80 <grub_video_checksum>:
     c80:	stp	x29, x30, [sp, #-64]!
     c84:	adrp	x1, 0 <grub_functional_all_tests>
     c88:	mov	x29, sp
     c8c:	stp	x21, x22, [sp, #32]
     c90:	mov	x21, x0
     c94:	ldr	x22, [x1]
     c98:	stp	x19, x20, [sp, #16]
     c9c:	mov	w20, #0x0                   	// #0
     ca0:	mov	x0, x22
     ca4:	str	x23, [sp, #48]
     ca8:	bl	0 <grub_video_get_info>
     cac:	mov	x0, x21
     cb0:	bl	0 <grub_strdup>
     cb4:	adrp	x1, 0 <grub_functional_all_tests>
     cb8:	str	xzr, [x22, #120]
     cbc:	str	wzr, [x22, #132]
     cc0:	ldr	x23, [x1]
     cc4:	str	x0, [x22, #136]
     cc8:	mov	x19, x23
     ccc:	b	ce0 <grub_video_checksum+0x60>
     cd0:	add	w20, w20, #0x1
     cd4:	add	x19, x19, #0x50
     cd8:	cmp	w20, #0x81
     cdc:	b.eq	dec <grub_video_checksum+0x16c>  // b.none
     ce0:	ldr	x0, [x19]
     ce4:	mov	x1, x21
     ce8:	bl	0 <grub_strcmp>
     cec:	cbnz	w0, cd0 <grub_video_checksum+0x50>
     cf0:	ldr	w0, [x19, #8]
     cf4:	ldr	w1, [x22]
     cf8:	cmp	w1, w0
     cfc:	b.ne	cd0 <grub_video_checksum+0x50>  // b.any
     d00:	ldr	w0, [x19, #12]
     d04:	ldr	w1, [x22, #4]
     d08:	cmp	w1, w0
     d0c:	b.ne	cd0 <grub_video_checksum+0x50>  // b.any
     d10:	ldr	w0, [x19, #16]
     d14:	ldr	w1, [x22, #8]
     d18:	cmp	w1, w0
     d1c:	b.ne	cd0 <grub_video_checksum+0x50>  // b.any
     d20:	ldr	w0, [x19, #20]
     d24:	ldr	w1, [x22, #24]
     d28:	cmp	w1, w0
     d2c:	b.ne	cd0 <grub_video_checksum+0x50>  // b.any
     d30:	ldr	w0, [x19, #24]
     d34:	ldr	w1, [x22, #12]
     d38:	cmp	w1, w0
     d3c:	b.ne	cd0 <grub_video_checksum+0x50>  // b.any
     d40:	ldr	w0, [x19, #28]
     d44:	ldr	w1, [x22, #16]
     d48:	cmp	w1, w0
     d4c:	b.ne	cd0 <grub_video_checksum+0x50>  // b.any
     d50:	ldr	w0, [x19, #32]
     d54:	ldr	w1, [x22, #40]
     d58:	cmp	w1, w0
     d5c:	b.ne	cd0 <grub_video_checksum+0x50>  // b.any
     d60:	ldr	w0, [x19, #36]
     d64:	ldr	w1, [x22, #36]
     d68:	cmp	w1, w0
     d6c:	b.ne	cd0 <grub_video_checksum+0x50>  // b.any
     d70:	ldr	w0, [x19, #40]
     d74:	ldr	w1, [x22, #48]
     d78:	cmp	w1, w0
     d7c:	b.ne	cd0 <grub_video_checksum+0x50>  // b.any
     d80:	ldr	w0, [x19, #44]
     d84:	ldr	w1, [x22, #44]
     d88:	cmp	w1, w0
     d8c:	b.ne	cd0 <grub_video_checksum+0x50>  // b.any
     d90:	ldr	w0, [x19, #48]
     d94:	ldr	w1, [x22, #56]
     d98:	cmp	w1, w0
     d9c:	b.ne	cd0 <grub_video_checksum+0x50>  // b.any
     da0:	ldr	w0, [x19, #52]
     da4:	ldr	w1, [x22, #52]
     da8:	cmp	w1, w0
     dac:	b.ne	cd0 <grub_video_checksum+0x50>  // b.any
     db0:	ldr	w0, [x19, #56]
     db4:	ldr	w1, [x22, #64]
     db8:	cmp	w1, w0
     dbc:	b.ne	cd0 <grub_video_checksum+0x50>  // b.any
     dc0:	ldr	w0, [x19, #60]
     dc4:	ldr	w1, [x22, #60]
     dc8:	cmp	w1, w0
     dcc:	b.ne	cd0 <grub_video_checksum+0x50>  // b.any
     dd0:	mov	w0, w20
     dd4:	mov	x1, #0x50                  	// #80
     dd8:	madd	x0, x0, x1, x23
     ddc:	ldr	x1, [x0, #64]
     de0:	str	x1, [x22, #120]
     de4:	ldr	w0, [x0, #72]
     de8:	str	w0, [x22, #132]
     dec:	adrp	x0, 0 <grub_functional_all_tests>
     df0:	adrp	x1, 0 <grub_functional_all_tests>
     df4:	ldp	x19, x20, [sp, #16]
     df8:	ldr	x0, [x0]
     dfc:	ldr	x1, [x1]
     e00:	ldr	x23, [sp, #48]
     e04:	str	x1, [x0]
     e08:	str	wzr, [x22, #128]
     e0c:	ldp	x21, x22, [sp, #32]
     e10:	ldp	x29, x30, [sp], #64
     e14:	ret
	...

0000000000000e38 <grub_video_checksum_end>:
     e38:	sub	sp, sp, #0x60
     e3c:	adrp	x0, 0 <grub_functional_all_tests>
     e40:	stp	x29, x30, [sp, #32]
     e44:	add	x29, sp, #0x20
     e48:	stp	x19, x20, [sp, #48]
     e4c:	ldr	x19, [x0]
     e50:	stp	x21, x22, [sp, #64]
     e54:	ldp	w1, w0, [x19, #128]
     e58:	ldr	w22, [x19]
     e5c:	cmp	w1, w0
     e60:	cset	w20, eq  // eq = none
     e64:	ldr	x21, [x19, #136]
     e68:	str	x23, [sp, #80]
     e6c:	ldr	w23, [x19, #4]
     e70:	bl	a18 <grub_video_checksum_get_modename>
     e74:	ldr	w3, [x19, #128]
     e78:	adrp	x5, 0 <grub_functional_all_tests>
     e7c:	adrp	x4, 0 <grub_functional_all_tests>
     e80:	adrp	x1, 0 <grub_functional_all_tests>
     e84:	adrp	x2, 0 <grub_functional_all_tests>
     e88:	str	w23, [sp]
     e8c:	str	x0, [sp, #8]
     e90:	mov	w7, w22
     e94:	str	w3, [sp, #16]
     e98:	mov	x6, x21
     e9c:	ldr	x5, [x5]
     ea0:	mov	w3, #0x2ef                 	// #751
     ea4:	ldr	x4, [x4]
     ea8:	ldr	x1, [x1]
     eac:	ldr	w0, [x19, #132]
     eb0:	ldr	x2, [x2]
     eb4:	str	w0, [sp, #24]
     eb8:	mov	w0, w20
     ebc:	add	x2, x2, #0x10
     ec0:	bl	5d8 <grub_test_assert_helper>
     ec4:	ldr	x0, [x19, #136]
     ec8:	bl	0 <grub_free>
     ecc:	adrp	x0, 0 <grub_functional_all_tests>
     ed0:	ldp	x29, x30, [sp, #32]
     ed4:	ldr	x0, [x0]
     ed8:	ldp	x21, x22, [sp, #64]
     edc:	ldr	x23, [sp, #80]
     ee0:	str	xzr, [x0]
     ee4:	str	xzr, [x19, #120]
     ee8:	stp	wzr, wzr, [x19, #128]
     eec:	str	xzr, [x19, #136]
     ef0:	ldp	x19, x20, [sp, #48]
     ef4:	add	sp, sp, #0x60
     ef8:	ret
     efc:	nop
	...

0000000000000f30 <grub_test_use_gfxterm>:
     f30:	stp	x29, x30, [sp, #-48]!
     f34:	adrp	x1, 0 <grub_functional_all_tests>
     f38:	adrp	x0, 0 <grub_functional_all_tests>
     f3c:	mov	x29, sp
     f40:	str	x21, [sp, #32]
     f44:	ldr	x21, [x1]
     f48:	stp	x19, x20, [sp, #16]
     f4c:	adrp	x1, 0 <grub_functional_all_tests>
     f50:	ldr	x19, [x0]
     f54:	ldr	x0, [x21]
     f58:	str	x0, [x19, #144]
     f5c:	ldr	x20, [x1]
     f60:	cbnz	x0, f78 <grub_test_use_gfxterm+0x48>
     f64:	b	fd0 <grub_test_use_gfxterm+0xa0>
     f68:	ldr	x0, [x19, #144]
     f6c:	ldr	x0, [x0]
     f70:	str	x0, [x19, #144]
     f74:	cbz	x0, fd0 <grub_test_use_gfxterm+0xa0>
     f78:	ldr	x0, [x0, #16]
     f7c:	mov	x1, x20
     f80:	bl	0 <grub_strcmp>
     f84:	cbnz	w0, f68 <grub_test_use_gfxterm+0x38>
     f88:	ldr	x0, [x19, #144]
     f8c:	cbz	x0, fd0 <grub_test_use_gfxterm+0xa0>
     f90:	ldr	x1, [x0, #24]
     f94:	blr	x1
     f98:	cbnz	w0, 104c <grub_test_use_gfxterm+0x11c>
     f9c:	ldr	x1, [x19, #144]
     fa0:	mov	w2, #0x1                   	// #1
     fa4:	ldr	x4, [x21]
     fa8:	mov	w0, #0x0                   	// #0
     fac:	ldr	x3, [x1]
     fb0:	str	x1, [x21]
     fb4:	str	xzr, [x1]
     fb8:	stp	x4, x3, [x19, #152]
     fbc:	str	w2, [x19, #168]
     fc0:	ldp	x19, x20, [sp, #16]
     fc4:	ldr	x21, [sp, #32]
     fc8:	ldp	x29, x30, [sp], #48
     fcc:	ret
     fd0:	adrp	x0, 0 <grub_functional_all_tests>
     fd4:	ldr	x0, [x0]
     fd8:	ldr	x0, [x0]
     fdc:	str	x0, [x19, #144]
     fe0:	cbnz	x0, ff8 <grub_test_use_gfxterm+0xc8>
     fe4:	b	1010 <grub_test_use_gfxterm+0xe0>
     fe8:	ldr	x0, [x19, #144]
     fec:	ldr	x0, [x0]
     ff0:	str	x0, [x19, #144]
     ff4:	cbz	x0, 1010 <grub_test_use_gfxterm+0xe0>
     ff8:	ldr	x0, [x0, #16]
     ffc:	mov	x1, x20
    1000:	bl	0 <grub_strcmp>
    1004:	cbnz	w0, fe8 <grub_test_use_gfxterm+0xb8>
    1008:	ldr	x0, [x19, #144]
    100c:	cbnz	x0, f90 <grub_test_use_gfxterm+0x60>
    1010:	adrp	x3, 0 <grub_functional_all_tests>
    1014:	adrp	x1, 0 <grub_functional_all_tests>
    1018:	adrp	x0, 0 <grub_functional_all_tests>
    101c:	adrp	x2, 0 <grub_functional_all_tests>
    1020:	ldr	x5, [x3]
    1024:	mov	x6, x20
    1028:	ldr	x4, [x1]
    102c:	mov	w3, #0x30f                 	// #783
    1030:	ldr	x1, [x0]
    1034:	mov	w0, #0x0                   	// #0
    1038:	ldr	x2, [x2]
    103c:	add	x2, x2, #0x28
    1040:	bl	5d8 <grub_test_assert_helper>
    1044:	mov	w0, #0x1                   	// #1
    1048:	b	fc0 <grub_test_use_gfxterm+0x90>
    104c:	adrp	x3, 0 <grub_functional_all_tests>
    1050:	adrp	x0, 0 <grub_functional_all_tests>
    1054:	adrp	x4, 0 <grub_functional_all_tests>
    1058:	adrp	x1, 0 <grub_functional_all_tests>
    105c:	adrp	x2, 0 <grub_functional_all_tests>
    1060:	mov	x6, x20
    1064:	ldr	x7, [x3]
    1068:	mov	w3, #0x315                 	// #789
    106c:	ldr	x5, [x0]
    1070:	mov	w0, #0x0                   	// #0
    1074:	ldr	x4, [x4]
    1078:	ldr	x1, [x1]
    107c:	ldr	x2, [x2]
    1080:	add	x2, x2, #0x28
    1084:	bl	5d8 <grub_test_assert_helper>
    1088:	mov	w0, #0x1                   	// #1
    108c:	ldp	x19, x20, [sp, #16]
    1090:	ldr	x21, [sp, #32]
    1094:	ldp	x29, x30, [sp], #48
    1098:	ret
    109c:	nop
	...

00000000000010f0 <grub_test_use_gfxterm_end>:
    10f0:	stp	x29, x30, [sp, #-32]!
    10f4:	adrp	x0, 0 <grub_functional_all_tests>
    10f8:	mov	x29, sp
    10fc:	str	x19, [sp, #16]
    1100:	ldr	x19, [x0]
    1104:	ldr	w0, [x19, #168]
    1108:	cbz	w0, 113c <grub_test_use_gfxterm_end+0x4c>
    110c:	ldr	x0, [x19, #144]
    1110:	str	wzr, [x19, #168]
    1114:	ldr	x1, [x0, #32]
    1118:	blr	x1
    111c:	adrp	x0, 0 <grub_functional_all_tests>
    1120:	ldr	x1, [x19, #144]
    1124:	ldr	x0, [x0]
    1128:	ldr	x2, [x19, #160]
    112c:	str	x2, [x1]
    1130:	ldr	x1, [x19, #152]
    1134:	str	x1, [x0]
    1138:	stp	xzr, xzr, [x19, #152]
    113c:	ldr	x19, [sp, #16]
    1140:	ldp	x29, x30, [sp], #32
    1144:	ret
	...

0000000000001158 <fake_getkey>:
    1158:	adrp	x0, 0 <grub_functional_all_tests>
    115c:	ldr	x0, [x0]
    1160:	ldr	x2, [x0]
    1164:	cbz	x2, 1184 <fake_getkey+0x2c>
    1168:	ldp	w1, w3, [x0, #8]
    116c:	cmp	w1, w3
    1170:	b.ge	1184 <fake_getkey+0x2c>  // b.tcont
    1174:	add	w3, w1, #0x1
    1178:	str	w3, [x0, #8]
    117c:	ldr	w0, [x2, w1, sxtw #2]
    1180:	ret
    1184:	mov	w0, #0xffffffff            	// #-1
    1188:	ret
    118c:	nop
	...

0000000000001198 <grub_terminal_input_fake_sequence>:
    1198:	stp	x29, x30, [sp, #-48]!
    119c:	adrp	x2, 0 <grub_functional_all_tests>
    11a0:	mov	x29, sp
    11a4:	stp	x19, x20, [sp, #16]
    11a8:	mov	w20, w1
    11ac:	ldr	x19, [x2]
    11b0:	stp	x21, x22, [sp, #32]
    11b4:	mov	x22, x0
    11b8:	ldr	w1, [x19, #16]
    11bc:	cbnz	w1, 11d0 <grub_terminal_input_fake_sequence+0x38>
    11c0:	adrp	x0, 0 <grub_functional_all_tests>
    11c4:	ldr	x0, [x0]
    11c8:	ldr	x0, [x0]
    11cc:	str	x0, [x19, #24]
    11d0:	ldr	x0, [x19]
    11d4:	cbz	x0, 11dc <grub_terminal_input_fake_sequence+0x44>
    11d8:	bl	0 <grub_free>
    11dc:	sbfiz	x21, x20, #2, #32
    11e0:	mov	x0, x21
    11e4:	bl	0 <grub_malloc>
    11e8:	str	x0, [x19]
    11ec:	cbz	x0, 121c <grub_terminal_input_fake_sequence+0x84>
    11f0:	adrp	x3, 0 <grub_functional_all_tests>
    11f4:	adrp	x4, 0 <grub_functional_all_tests>
    11f8:	mov	x2, x21
    11fc:	mov	x1, x22
    1200:	ldr	x3, [x3]
    1204:	ldr	x4, [x4]
    1208:	str	x4, [x3]
    120c:	bl	0 <grub_memmove>
    1210:	stp	wzr, w20, [x19, #8]
    1214:	mov	w0, #0x1                   	// #1
    1218:	str	w0, [x19, #16]
    121c:	ldp	x19, x20, [sp, #16]
    1220:	ldp	x21, x22, [sp, #32]
    1224:	ldp	x29, x30, [sp], #48
    1228:	ret
    122c:	nop
	...

0000000000001248 <grub_terminal_input_fake_sequence_end>:
    1248:	stp	x29, x30, [sp, #-32]!
    124c:	adrp	x0, 0 <grub_functional_all_tests>
    1250:	mov	x29, sp
    1254:	str	x19, [sp, #16]
    1258:	ldr	x19, [x0]
    125c:	ldr	w0, [x19, #16]
    1260:	cbz	w0, 1288 <grub_terminal_input_fake_sequence_end+0x40>
    1264:	adrp	x1, 0 <grub_functional_all_tests>
    1268:	str	wzr, [x19, #16]
    126c:	ldr	x0, [x19]
    1270:	ldr	x1, [x1]
    1274:	ldr	x2, [x19, #24]
    1278:	str	x2, [x1]
    127c:	bl	0 <grub_free>
    1280:	str	xzr, [x19]
    1284:	stp	wzr, wzr, [x19, #8]
    1288:	ldr	x19, [sp, #16]
    128c:	ldp	x29, x30, [sp], #32
    1290:	ret
    1294:	nop
	...

00000000000012a8 <grub_video_capture_swap_buffers>:
    12a8:	adrp	x0, 0 <grub_functional_all_tests>
    12ac:	ldr	x0, [x0]
    12b0:	ldr	x0, [x0]
    12b4:	cbz	x0, 12d0 <grub_video_capture_swap_buffers+0x28>
    12b8:	stp	x29, x30, [sp, #-16]!
    12bc:	mov	x29, sp
    12c0:	blr	x0
    12c4:	mov	w0, #0x0                   	// #0
    12c8:	ldp	x29, x30, [sp], #16
    12cc:	ret
    12d0:	mov	w0, #0x0                   	// #0
    12d4:	ret
	...

00000000000012e0 <grub_video_capture_fini>:
    12e0:	mov	w0, #0x0                   	// #0
    12e4:	ret

00000000000012e8 <grub_video_capture_set_active_render_target>:
    12e8:	cbz	x0, 12f0 <grub_video_capture_set_active_render_target+0x8>
    12ec:	b	0 <grub_video_fb_set_active_render_target>
    12f0:	adrp	x0, 0 <grub_functional_all_tests>
    12f4:	ldr	x0, [x0]
    12f8:	ldr	x0, [x0, #80]
    12fc:	b	0 <grub_video_fb_set_active_render_target>
	...

0000000000001308 <grub_video_capture_start>:
    1308:	stp	x29, x30, [sp, #-48]!
    130c:	adrp	x3, 0 <grub_functional_all_tests>
    1310:	mov	x29, sp
    1314:	stp	x19, x20, [sp, #16]
    1318:	mov	x20, x0
    131c:	ldr	x19, [x3]
    1320:	stp	x21, x22, [sp, #32]
    1324:	mov	x22, x1
    1328:	mov	w21, w2
    132c:	mov	w1, #0x0                   	// #0
    1330:	mov	x2, #0x60                  	// #96
    1334:	mov	x0, x19
    1338:	bl	0 <grub_memset>
    133c:	bl	0 <grub_video_fb_init>
    1340:	ldp	x0, x1, [x20]
    1344:	stp	x0, x1, [x19]
    1348:	ldp	x2, x3, [x20, #16]
    134c:	stp	x2, x3, [x19, #16]
    1350:	mov	x0, x19
    1354:	ldp	x2, x3, [x20, #32]
    1358:	stp	x2, x3, [x19, #32]
    135c:	ldp	x2, x3, [x20, #48]
    1360:	stp	x2, x3, [x19, #48]
    1364:	ldr	x1, [x20, #64]
    1368:	str	x1, [x19, #64]
    136c:	ldr	w1, [x20, #72]
    1370:	str	w1, [x19, #72]
    1374:	bl	0 <grub_video_get_blit_format>
    1378:	str	w0, [x19, #32]
    137c:	ldr	w2, [x19, #4]
    1380:	ldr	w1, [x19, #20]
    1384:	mul	w0, w2, w1
    1388:	bl	0 <grub_malloc>
    138c:	str	x0, [x19, #88]
    1390:	cbz	x0, 1430 <grub_video_capture_start+0x128>
    1394:	mov	x2, x0
    1398:	mov	x1, x19
    139c:	add	x0, x19, #0x50
    13a0:	bl	0 <grub_video_fb_create_render_target_from_pointer>
    13a4:	mov	w20, w0
    13a8:	cbz	w0, 13c0 <grub_video_capture_start+0xb8>
    13ac:	mov	w0, w20
    13b0:	ldp	x19, x20, [sp, #16]
    13b4:	ldp	x21, x22, [sp, #32]
    13b8:	ldp	x29, x30, [sp], #48
    13bc:	ret
    13c0:	ldr	x0, [x19, #80]
    13c4:	bl	0 <grub_video_fb_set_active_render_target>
    13c8:	mov	w20, w0
    13cc:	cbnz	w0, 13ac <grub_video_capture_start+0xa4>
    13d0:	mov	x2, x22
    13d4:	mov	w1, w21
    13d8:	bl	0 <grub_video_fb_set_palette>
    13dc:	mov	w20, w0
    13e0:	cbnz	w0, 13ac <grub_video_capture_start+0xa4>
    13e4:	adrp	x0, 0 <grub_functional_all_tests>
    13e8:	ldr	x21, [x0]
    13ec:	ldr	x0, [x21]
    13f0:	str	x0, [x19, #96]
    13f4:	cbz	x0, 1410 <grub_video_capture_start+0x108>
    13f8:	add	x0, x19, #0x68
    13fc:	bl	0 <grub_video_get_info>
    1400:	ldr	x0, [x19, #96]
    1404:	ldr	x0, [x0, #40]
    1408:	cbz	x0, 1410 <grub_video_capture_start+0x108>
    140c:	blr	x0
    1410:	adrp	x0, 0 <grub_functional_all_tests>
    1414:	ldr	x0, [x0]
    1418:	str	x0, [x21]
    141c:	mov	w0, w20
    1420:	ldp	x19, x20, [sp, #16]
    1424:	ldp	x21, x22, [sp, #32]
    1428:	ldp	x29, x30, [sp], #48
    142c:	ret
    1430:	adrp	x0, 0 <grub_functional_all_tests>
    1434:	ldp	x21, x22, [sp, #32]
    1438:	ldr	x0, [x0]
    143c:	ldr	w20, [x0]
    1440:	mov	w0, w20
    1444:	ldp	x19, x20, [sp, #16]
    1448:	ldp	x29, x30, [sp], #48
    144c:	ret
	...

0000000000001470 <grub_video_capture_get_framebuffer>:
    1470:	adrp	x0, 0 <grub_functional_all_tests>
    1474:	ldr	x0, [x0]
    1478:	ldr	x0, [x0, #88]
    147c:	ret
	...

0000000000001488 <grub_video_capture_end>:
    1488:	stp	x29, x30, [sp, #-32]!
    148c:	adrp	x0, 0 <grub_functional_all_tests>
    1490:	mov	x29, sp
    1494:	str	x19, [sp, #16]
    1498:	ldr	x19, [x0]
    149c:	ldr	x0, [x19, #80]
    14a0:	bl	0 <grub_video_fb_delete_render_target>
    14a4:	ldr	x0, [x19, #88]
    14a8:	bl	0 <grub_free>
    14ac:	bl	0 <grub_video_fb_fini>
    14b0:	adrp	x1, 0 <grub_functional_all_tests>
    14b4:	ldr	x0, [x19, #96]
    14b8:	ldr	x1, [x1]
    14bc:	str	x0, [x1]
    14c0:	cbz	x0, 14f8 <grub_video_capture_end+0x70>
    14c4:	ldr	x1, [x0, #32]
    14c8:	cbz	x1, 14d4 <grub_video_capture_end+0x4c>
    14cc:	blr	x1
    14d0:	ldr	x0, [x19, #96]
    14d4:	ldr	x4, [x0, #48]
    14d8:	cbz	x4, 14f8 <grub_video_capture_end+0x70>
    14dc:	ldp	w0, w1, [x19, #104]
    14e0:	mov	x16, x4
    14e4:	ldr	x19, [sp, #16]
    14e8:	mov	w3, #0x0                   	// #0
    14ec:	ldp	x29, x30, [sp], #32
    14f0:	mov	w2, #0x0                   	// #0
    14f4:	br	x16
    14f8:	ldr	x19, [sp, #16]
    14fc:	ldp	x29, x30, [sp], #32
    1500:	ret
    1504:	nop
	...
