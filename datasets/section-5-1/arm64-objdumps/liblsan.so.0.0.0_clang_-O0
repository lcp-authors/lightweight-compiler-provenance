
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//liblsan.so.0.0.0_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000006858 <.init>:
    6858:	stp	x29, x30, [sp, #-16]!
    685c:	mov	x29, sp
    6860:	bl	6fc0 <*ABS*+0x10@plt+0x10>
    6864:	ldp	x29, x30, [sp], #16
    6868:	ret

Disassembly of section .plt:

0000000000006870 <_Unwind_Backtrace@plt-0x20>:
    6870:	stp	x16, x30, [sp, #-16]!
    6874:	adrp	x16, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
    6878:	ldr	x17, [x16, #4088]
    687c:	add	x16, x16, #0xff8
    6880:	br	x17
    6884:	nop
    6888:	nop
    688c:	nop

0000000000006890 <_Unwind_Backtrace@plt>:
    6890:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6894:	ldr	x17, [x16]
    6898:	add	x16, x16, #0x0
    689c:	br	x17

00000000000068a0 <__fxstat@plt>:
    68a0:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    68a4:	ldr	x17, [x16, #8]
    68a8:	add	x16, x16, #0x8
    68ac:	br	x17

00000000000068b0 <__sanitizer_report_error_summary@plt>:
    68b0:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    68b4:	ldr	x17, [x16, #16]
    68b8:	add	x16, x16, #0x10
    68bc:	br	x17

00000000000068c0 <OnPrint@plt>:
    68c0:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    68c4:	ldr	x17, [x16, #24]
    68c8:	add	x16, x16, #0x18
    68cc:	br	x17

00000000000068d0 <__lsan_default_options@plt>:
    68d0:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    68d4:	ldr	x17, [x16, #32]
    68d8:	add	x16, x16, #0x20
    68dc:	br	x17

00000000000068e0 <__asan_cplus_demangle_init_info@plt>:
    68e0:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    68e4:	ldr	x17, [x16, #40]
    68e8:	add	x16, x16, #0x28
    68ec:	br	x17

00000000000068f0 <__asan_backtrace_qsort@plt>:
    68f0:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    68f4:	ldr	x17, [x16, #48]
    68f8:	add	x16, x16, #0x30
    68fc:	br	x17

0000000000006900 <readlink@plt>:
    6900:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6904:	ldr	x17, [x16, #56]
    6908:	add	x16, x16, #0x38
    690c:	br	x17

0000000000006910 <shm_open@plt>:
    6910:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6914:	ldr	x17, [x16, #64]
    6918:	add	x16, x16, #0x40
    691c:	br	x17

0000000000006920 <sched_getaffinity@plt>:
    6920:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6924:	ldr	x17, [x16, #72]
    6928:	add	x16, x16, #0x48
    692c:	br	x17

0000000000006930 <free@plt>:
    6930:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6934:	ldr	x17, [x16, #80]
    6938:	add	x16, x16, #0x50
    693c:	br	x17

0000000000006940 <__asan_backtrace_pcinfo@plt>:
    6940:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6944:	ldr	x17, [x16, #88]
    6948:	add	x16, x16, #0x58
    694c:	br	x17

0000000000006950 <execv@plt>:
    6950:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6954:	ldr	x17, [x16, #96]
    6958:	add	x16, x16, #0x60
    695c:	br	x17

0000000000006960 <pipe@plt>:
    6960:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6964:	ldr	x17, [x16, #104]
    6968:	add	x16, x16, #0x68
    696c:	br	x17

0000000000006970 <pthread_attr_getdetachstate@plt>:
    6970:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6974:	ldr	x17, [x16, #112]
    6978:	add	x16, x16, #0x70
    697c:	br	x17

0000000000006980 <__sanitizer_get_module_and_offset_for_pc@plt>:
    6980:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6984:	ldr	x17, [x16, #120]
    6988:	add	x16, x16, #0x78
    698c:	br	x17

0000000000006990 <__asan_cplus_demangle_type@plt>:
    6990:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6994:	ldr	x17, [x16, #128]
    6998:	add	x16, x16, #0x80
    699c:	br	x17

00000000000069a0 <__asan_backtrace_release_view@plt>:
    69a0:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    69a4:	ldr	x17, [x16, #136]
    69a8:	add	x16, x16, #0x88
    69ac:	br	x17

00000000000069b0 <__asan_backtrace_dwarf_add@plt>:
    69b0:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    69b4:	ldr	x17, [x16, #144]
    69b8:	add	x16, x16, #0x90
    69bc:	br	x17

00000000000069c0 <__sanitizer_malloc_hook@plt>:
    69c0:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    69c4:	ldr	x17, [x16, #152]
    69c8:	add	x16, x16, #0x98
    69cc:	br	x17

00000000000069d0 <dlvsym@plt>:
    69d0:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    69d4:	ldr	x17, [x16, #160]
    69d8:	add	x16, x16, #0xa0
    69dc:	br	x17

00000000000069e0 <pthread_getattr_np@plt>:
    69e0:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    69e4:	ldr	x17, [x16, #168]
    69e8:	add	x16, x16, #0xa8
    69ec:	br	x17

00000000000069f0 <__sanitizer_symbolize_demangle@plt>:
    69f0:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    69f4:	ldr	x17, [x16, #176]
    69f8:	add	x16, x16, #0xb0
    69fc:	br	x17

0000000000006a00 <__asan_cplus_demangle_fill_name@plt>:
    6a00:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6a04:	ldr	x17, [x16, #184]
    6a08:	add	x16, x16, #0xb8
    6a0c:	br	x17

0000000000006a10 <__asan_internal_memcpy@plt>:
    6a10:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6a14:	ldr	x17, [x16, #192]
    6a18:	add	x16, x16, #0xc0
    6a1c:	br	x17

0000000000006a20 <__asan_internal_strlen@plt>:
    6a20:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6a24:	ldr	x17, [x16, #200]
    6a28:	add	x16, x16, #0xc8
    6a2c:	br	x17

0000000000006a30 <open@plt>:
    6a30:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6a34:	ldr	x17, [x16, #208]
    6a38:	add	x16, x16, #0xd0
    6a3c:	br	x17

0000000000006a40 <pthread_attr_init@plt>:
    6a40:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6a44:	ldr	x17, [x16, #216]
    6a48:	add	x16, x16, #0xd8
    6a4c:	br	x17

0000000000006a50 <real_pthread_attr_getstack@plt>:
    6a50:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6a54:	ldr	x17, [x16, #224]
    6a58:	add	x16, x16, #0xe0
    6a5c:	br	x17

0000000000006a60 <sleep@plt>:
    6a60:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6a64:	ldr	x17, [x16, #232]
    6a68:	add	x16, x16, #0xe8
    6a6c:	br	x17

0000000000006a70 <confstr@plt>:
    6a70:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6a74:	ldr	x17, [x16, #240]
    6a78:	add	x16, x16, #0xf0
    6a7c:	br	x17

0000000000006a80 <dlsym@plt>:
    6a80:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6a84:	ldr	x17, [x16, #248]
    6a88:	add	x16, x16, #0xf8
    6a8c:	br	x17

0000000000006a90 <__asan_backtrace_vector_grow@plt>:
    6a90:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6a94:	ldr	x17, [x16, #256]
    6a98:	add	x16, x16, #0x100
    6a9c:	br	x17

0000000000006aa0 <__asan_backtrace_syminfo@plt>:
    6aa0:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6aa4:	ldr	x17, [x16, #264]
    6aa8:	add	x16, x16, #0x108
    6aac:	br	x17

0000000000006ab0 <__asan_internal_memset@plt>:
    6ab0:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6ab4:	ldr	x17, [x16, #272]
    6ab8:	add	x16, x16, #0x110
    6abc:	br	x17

0000000000006ac0 <memset@plt>:
    6ac0:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6ac4:	ldr	x17, [x16, #280]
    6ac8:	add	x16, x16, #0x118
    6acc:	br	x17

0000000000006ad0 <__sanitizer_symbolize_data@plt>:
    6ad0:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6ad4:	ldr	x17, [x16, #288]
    6ad8:	add	x16, x16, #0x120
    6adc:	br	x17

0000000000006ae0 <isatty@plt>:
    6ae0:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6ae4:	ldr	x17, [x16, #296]
    6ae8:	add	x16, x16, #0x128
    6aec:	br	x17

0000000000006af0 <dlerror@plt>:
    6af0:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6af4:	ldr	x17, [x16, #304]
    6af8:	add	x16, x16, #0x130
    6afc:	br	x17

0000000000006b00 <__cxa_finalize@plt>:
    6b00:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6b04:	ldr	x17, [x16, #312]
    6b08:	add	x16, x16, #0x138
    6b0c:	br	x17

0000000000006b10 <__asan_backtrace_alloc@plt>:
    6b10:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6b14:	ldr	x17, [x16, #320]
    6b18:	add	x16, x16, #0x140
    6b1c:	br	x17

0000000000006b20 <_ZN11__sanitizer17real_pthread_joinEPvPS0_@plt>:
    6b20:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6b24:	ldr	x17, [x16, #328]
    6b28:	add	x16, x16, #0x148
    6b2c:	br	x17

0000000000006b30 <getrusage@plt>:
    6b30:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6b34:	ldr	x17, [x16, #336]
    6b38:	add	x16, x16, #0x150
    6b3c:	br	x17

0000000000006b40 <pthread_attr_destroy@plt>:
    6b40:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6b44:	ldr	x17, [x16, #344]
    6b48:	add	x16, x16, #0x158
    6b4c:	br	x17

0000000000006b50 <sprintf@plt>:
    6b50:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6b54:	ldr	x17, [x16, #352]
    6b58:	add	x16, x16, #0x160
    6b5c:	br	x17

0000000000006b60 <__asan_backtrace_vector_release@plt>:
    6b60:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6b64:	ldr	x17, [x16, #360]
    6b68:	add	x16, x16, #0x168
    6b6c:	br	x17

0000000000006b70 <real_clock_gettime@plt>:
    6b70:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6b74:	ldr	x17, [x16, #368]
    6b78:	add	x16, x16, #0x170
    6b7c:	br	x17

0000000000006b80 <__cxa_demangle@plt>:
    6b80:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6b84:	ldr	x17, [x16, #376]
    6b88:	add	x16, x16, #0x178
    6b8c:	br	x17

0000000000006b90 <__sanitizer_symbolize_code@plt>:
    6b90:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6b94:	ldr	x17, [x16, #384]
    6b98:	add	x16, x16, #0x180
    6b9c:	br	x17

0000000000006ba0 <dl_iterate_phdr@plt>:
    6ba0:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6ba4:	ldr	x17, [x16, #392]
    6ba8:	add	x16, x16, #0x188
    6bac:	br	x17

0000000000006bb0 <__sanitizer_dump_coverage@plt>:
    6bb0:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6bb4:	ldr	x17, [x16, #400]
    6bb8:	add	x16, x16, #0x190
    6bbc:	br	x17

0000000000006bc0 <clock_gettime@plt>:
    6bc0:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6bc4:	ldr	x17, [x16, #408]
    6bc8:	add	x16, x16, #0x198
    6bcc:	br	x17

0000000000006bd0 <__lsan_default_suppressions@plt>:
    6bd0:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6bd4:	ldr	x17, [x16, #416]
    6bd8:	add	x16, x16, #0x1a0
    6bdc:	br	x17

0000000000006be0 <getpid@plt>:
    6be0:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6be4:	ldr	x17, [x16, #424]
    6be8:	add	x16, x16, #0x1a8
    6bec:	br	x17

0000000000006bf0 <__lsan_is_turned_off@plt>:
    6bf0:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6bf4:	ldr	x17, [x16, #432]
    6bf8:	add	x16, x16, #0x1b0
    6bfc:	br	x17

0000000000006c00 <__sanitizer_symbolize_flush@plt>:
    6c00:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6c04:	ldr	x17, [x16, #440]
    6c08:	add	x16, x16, #0x1b8
    6c0c:	br	x17

0000000000006c10 <__asan_backtrace_create_state@plt>:
    6c10:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6c14:	ldr	x17, [x16, #448]
    6c18:	add	x16, x16, #0x1c0
    6c1c:	br	x17

0000000000006c20 <mmap@plt>:
    6c20:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6c24:	ldr	x17, [x16, #456]
    6c28:	add	x16, x16, #0x1c8
    6c2c:	br	x17

0000000000006c30 <pthread_setspecific@plt>:
    6c30:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6c34:	ldr	x17, [x16, #464]
    6c38:	add	x16, x16, #0x1d0
    6c3c:	br	x17

0000000000006c40 <munmap@plt>:
    6c40:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6c44:	ldr	x17, [x16, #472]
    6c48:	add	x16, x16, #0x1d8
    6c4c:	br	x17

0000000000006c50 <__asan_cplus_demangle_print_callback@plt>:
    6c50:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6c54:	ldr	x17, [x16, #480]
    6c58:	add	x16, x16, #0x1e0
    6c5c:	br	x17

0000000000006c60 <__cxa_atexit@plt>:
    6c60:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6c64:	ldr	x17, [x16, #488]
    6c68:	add	x16, x16, #0x1e8
    6c6c:	br	x17

0000000000006c70 <snprintf@plt>:
    6c70:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6c74:	ldr	x17, [x16, #496]
    6c78:	add	x16, x16, #0x1f0
    6c7c:	br	x17

0000000000006c80 <pthread_attr_getstack@plt>:
    6c80:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6c84:	ldr	x17, [x16, #504]
    6c88:	add	x16, x16, #0x1f8
    6c8c:	br	x17

0000000000006c90 <pthread_attr_setstacksize@plt>:
    6c90:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6c94:	ldr	x17, [x16, #512]
    6c98:	add	x16, x16, #0x200
    6c9c:	br	x17

0000000000006ca0 <_Unwind_GetIP@plt>:
    6ca0:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6ca4:	ldr	x17, [x16, #520]
    6ca8:	add	x16, x16, #0x208
    6cac:	br	x17

0000000000006cb0 <madvise@plt>:
    6cb0:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6cb4:	ldr	x17, [x16, #528]
    6cb8:	add	x16, x16, #0x210
    6cbc:	br	x17

0000000000006cc0 <usleep@plt>:
    6cc0:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6cc4:	ldr	x17, [x16, #536]
    6cc8:	add	x16, x16, #0x218
    6ccc:	br	x17

0000000000006cd0 <shm_unlink@plt>:
    6cd0:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6cd4:	ldr	x17, [x16, #544]
    6cd8:	add	x16, x16, #0x220
    6cdc:	br	x17

0000000000006ce0 <__sched_cpucount@plt>:
    6ce0:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6ce4:	ldr	x17, [x16, #552]
    6ce8:	add	x16, x16, #0x228
    6cec:	br	x17

0000000000006cf0 <strrchr@plt>:
    6cf0:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6cf4:	ldr	x17, [x16, #560]
    6cf8:	add	x16, x16, #0x230
    6cfc:	br	x17

0000000000006d00 <__errno_location@plt>:
    6d00:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6d04:	ldr	x17, [x16, #568]
    6d08:	add	x16, x16, #0x238
    6d0c:	br	x17

0000000000006d10 <sched_yield@plt>:
    6d10:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6d14:	ldr	x17, [x16, #576]
    6d18:	add	x16, x16, #0x240
    6d1c:	br	x17

0000000000006d20 <__asan_backtrace_get_view@plt>:
    6d20:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6d24:	ldr	x17, [x16, #584]
    6d28:	add	x16, x16, #0x248
    6d2c:	br	x17

0000000000006d30 <syslog@plt>:
    6d30:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6d34:	ldr	x17, [x16, #592]
    6d38:	add	x16, x16, #0x250
    6d3c:	br	x17

0000000000006d40 <sigaction@plt>:
    6d40:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6d44:	ldr	x17, [x16, #600]
    6d48:	add	x16, x16, #0x258
    6d4c:	br	x17

0000000000006d50 <__sanitizer_dump_trace_pc_guard_coverage@plt>:
    6d50:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6d54:	ldr	x17, [x16, #608]
    6d58:	add	x16, x16, #0x260
    6d5c:	br	x17

0000000000006d60 <__asan_cplus_demangle_fill_extended_operator@plt>:
    6d60:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6d64:	ldr	x17, [x16, #616]
    6d68:	add	x16, x16, #0x268
    6d6c:	br	x17

0000000000006d70 <__asan_internal_strcmp@plt>:
    6d70:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6d74:	ldr	x17, [x16, #624]
    6d78:	add	x16, x16, #0x270
    6d7c:	br	x17

0000000000006d80 <__lsan_init@plt>:
    6d80:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6d84:	ldr	x17, [x16, #632]
    6d88:	add	x16, x16, #0x278
    6d8c:	br	x17

0000000000006d90 <__asan_internal_strnlen@plt>:
    6d90:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6d94:	ldr	x17, [x16, #640]
    6d98:	add	x16, x16, #0x280
    6d9c:	br	x17

0000000000006da0 <close@plt>:
    6da0:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6da4:	ldr	x17, [x16, #648]
    6da8:	add	x16, x16, #0x288
    6dac:	br	x17

0000000000006db0 <__asan_internal_strncmp@plt>:
    6db0:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6db4:	ldr	x17, [x16, #656]
    6db8:	add	x16, x16, #0x290
    6dbc:	br	x17

0000000000006dc0 <pthread_key_create@plt>:
    6dc0:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6dc4:	ldr	x17, [x16, #664]
    6dc8:	add	x16, x16, #0x298
    6dcc:	br	x17

0000000000006dd0 <__asan_cplus_demangle_fill_ctor@plt>:
    6dd0:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6dd4:	ldr	x17, [x16, #672]
    6dd8:	add	x16, x16, #0x2a0
    6ddc:	br	x17

0000000000006de0 <setrlimit@plt>:
    6de0:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6de4:	ldr	x17, [x16, #680]
    6de8:	add	x16, x16, #0x2a8
    6dec:	br	x17

0000000000006df0 <getauxval@plt>:
    6df0:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6df4:	ldr	x17, [x16, #688]
    6df8:	add	x16, x16, #0x2b0
    6dfc:	br	x17

0000000000006e00 <__asan_backtrace_free@plt>:
    6e00:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6e04:	ldr	x17, [x16, #696]
    6e08:	add	x16, x16, #0x2b8
    6e0c:	br	x17

0000000000006e10 <__lxstat@plt>:
    6e10:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6e14:	ldr	x17, [x16, #704]
    6e18:	add	x16, x16, #0x2c0
    6e1c:	br	x17

0000000000006e20 <__sanitizer_free_hook@plt>:
    6e20:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6e24:	ldr	x17, [x16, #712]
    6e28:	add	x16, x16, #0x2c8
    6e2c:	br	x17

0000000000006e30 <abort@plt>:
    6e30:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6e34:	ldr	x17, [x16, #720]
    6e38:	add	x16, x16, #0x2d0
    6e3c:	br	x17

0000000000006e40 <bsearch@plt>:
    6e40:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6e44:	ldr	x17, [x16, #728]
    6e48:	add	x16, x16, #0x2d8
    6e4c:	br	x17

0000000000006e50 <__asan_backtrace_initialize@plt>:
    6e50:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6e54:	ldr	x17, [x16, #736]
    6e58:	add	x16, x16, #0x2e0
    6e5c:	br	x17

0000000000006e60 <_ZN11__sanitizer19real_pthread_createEPvS0_PFS0_S0_ES0_@plt>:
    6e60:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6e64:	ldr	x17, [x16, #744]
    6e68:	add	x16, x16, #0x2e8
    6e6c:	br	x17

0000000000006e70 <__asan_internal_memcmp@plt>:
    6e70:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6e74:	ldr	x17, [x16, #752]
    6e78:	add	x16, x16, #0x2f0
    6e7c:	br	x17

0000000000006e80 <sysconf@plt>:
    6e80:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6e84:	ldr	x17, [x16, #760]
    6e88:	add	x16, x16, #0x2f8
    6e8c:	br	x17

0000000000006e90 <realloc@plt>:
    6e90:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6e94:	ldr	x17, [x16, #768]
    6e98:	add	x16, x16, #0x300
    6e9c:	br	x17

0000000000006ea0 <pthread_self@plt>:
    6ea0:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6ea4:	ldr	x17, [x16, #776]
    6ea8:	add	x16, x16, #0x308
    6eac:	br	x17

0000000000006eb0 <getuid@plt>:
    6eb0:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6eb4:	ldr	x17, [x16, #784]
    6eb8:	add	x16, x16, #0x310
    6ebc:	br	x17

0000000000006ec0 <getpagesize@plt>:
    6ec0:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6ec4:	ldr	x17, [x16, #792]
    6ec8:	add	x16, x16, #0x318
    6ecc:	br	x17

0000000000006ed0 <__asan_backtrace_vector_finish@plt>:
    6ed0:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6ed4:	ldr	x17, [x16, #800]
    6ed8:	add	x16, x16, #0x320
    6edc:	br	x17

0000000000006ee0 <__asan_backtrace_close@plt>:
    6ee0:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6ee4:	ldr	x17, [x16, #808]
    6ee8:	add	x16, x16, #0x328
    6eec:	br	x17

0000000000006ef0 <__asan_cplus_demangle_mangled_name@plt>:
    6ef0:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6ef4:	ldr	x17, [x16, #816]
    6ef8:	add	x16, x16, #0x330
    6efc:	br	x17

0000000000006f00 <getrlimit@plt>:
    6f00:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6f04:	ldr	x17, [x16, #824]
    6f08:	add	x16, x16, #0x338
    6f0c:	br	x17

0000000000006f10 <sigaltstack@plt>:
    6f10:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6f14:	ldr	x17, [x16, #832]
    6f18:	add	x16, x16, #0x340
    6f1c:	br	x17

0000000000006f20 <fcntl@plt>:
    6f20:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6f24:	ldr	x17, [x16, #840]
    6f28:	add	x16, x16, #0x348
    6f2c:	br	x17

0000000000006f30 <__gmon_start__@plt>:
    6f30:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6f34:	ldr	x17, [x16, #848]
    6f38:	add	x16, x16, #0x350
    6f3c:	br	x17

0000000000006f40 <__sanitizer_set_report_path@plt>:
    6f40:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6f44:	ldr	x17, [x16, #856]
    6f48:	add	x16, x16, #0x358
    6f4c:	br	x17

0000000000006f50 <__asan_cplus_demangle_v3_callback@plt>:
    6f50:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6f54:	ldr	x17, [x16, #864]
    6f58:	add	x16, x16, #0x360
    6f5c:	br	x17

0000000000006f60 <__sanitizer_print_memory_profile@plt>:
    6f60:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6f64:	ldr	x17, [x16, #872]
    6f68:	add	x16, x16, #0x368
    6f6c:	br	x17

0000000000006f70 <__asan_cplus_demangle_fill_dtor@plt>:
    6f70:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6f74:	ldr	x17, [x16, #880]
    6f78:	add	x16, x16, #0x370
    6f7c:	br	x17

0000000000006f80 <__sancov_default_options@plt>:
    6f80:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6f84:	ldr	x17, [x16, #888]
    6f88:	add	x16, x16, #0x378
    6f8c:	br	x17

0000000000006f90 <__asan_backtrace_open@plt>:
    6f90:	adrp	x16, 7d000 <_Unwind_Backtrace@GCC_3.3>
    6f94:	ldr	x17, [x16, #896]
    6f98:	add	x16, x16, #0x380
    6f9c:	br	x17

0000000000006fa0 <*ABS*@plt>:
    6fa0:	stp	x2, x3, [sp, #-16]!
    6fa4:	adrp	x2, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
    6fa8:	adrp	x3, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
    6fac:	ldr	x2, [x2, #4064]

0000000000006fb0 <*ABS*+0x10@plt>:
    6fb0:	add	x3, x3, #0xfe8
    6fb4:	br	x2
    6fb8:	nop
    6fbc:	nop

Disassembly of section .text:

0000000000006fc0 <__lsan_ignore_object@@Base-0x2dd8>:
    6fc0:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
    6fc4:	ldr	x0, [x0, #4016]
    6fc8:	cbz	x0, 6fd0 <*ABS*+0x10@plt+0x20>
    6fcc:	b	6f30 <__gmon_start__@plt>
    6fd0:	ret
    6fd4:	stp	x29, x30, [sp, #-32]!
    6fd8:	mov	x29, sp
    6fdc:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    6fe0:	add	x0, x0, #0xc78
    6fe4:	str	x0, [sp, #24]
    6fe8:	ldr	x0, [sp, #24]
    6fec:	str	x0, [sp, #24]
    6ff0:	ldr	x1, [sp, #24]
    6ff4:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    6ff8:	add	x0, x0, #0xc78
    6ffc:	cmp	x1, x0
    7000:	b.eq	7038 <*ABS*+0x10@plt+0x88>  // b.none
    7004:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
    7008:	ldr	x0, [x0, #3928]
    700c:	str	x0, [sp, #16]
    7010:	ldr	x0, [sp, #16]
    7014:	str	x0, [sp, #16]
    7018:	ldr	x0, [sp, #16]
    701c:	cmp	x0, #0x0
    7020:	b.eq	703c <*ABS*+0x10@plt+0x8c>  // b.none
    7024:	ldr	x1, [sp, #16]
    7028:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    702c:	add	x0, x0, #0xc78
    7030:	blr	x1
    7034:	b	703c <*ABS*+0x10@plt+0x8c>
    7038:	nop
    703c:	ldp	x29, x30, [sp], #32
    7040:	ret
    7044:	stp	x29, x30, [sp, #-48]!
    7048:	mov	x29, sp
    704c:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    7050:	add	x0, x0, #0xc78
    7054:	str	x0, [sp, #40]
    7058:	ldr	x0, [sp, #40]
    705c:	str	x0, [sp, #40]
    7060:	ldr	x1, [sp, #40]
    7064:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    7068:	add	x0, x0, #0xc78
    706c:	sub	x0, x1, x0
    7070:	asr	x0, x0, #3
    7074:	lsr	x1, x0, #63
    7078:	add	x0, x1, x0
    707c:	asr	x0, x0, #1
    7080:	str	x0, [sp, #32]
    7084:	ldr	x0, [sp, #32]
    7088:	cmp	x0, #0x0
    708c:	b.eq	70c8 <*ABS*+0x10@plt+0x118>  // b.none
    7090:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
    7094:	ldr	x0, [x0, #4024]
    7098:	str	x0, [sp, #24]
    709c:	ldr	x0, [sp, #24]
    70a0:	str	x0, [sp, #24]
    70a4:	ldr	x0, [sp, #24]
    70a8:	cmp	x0, #0x0
    70ac:	b.eq	70cc <*ABS*+0x10@plt+0x11c>  // b.none
    70b0:	ldr	x2, [sp, #24]
    70b4:	ldr	x1, [sp, #32]
    70b8:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    70bc:	add	x0, x0, #0xc78
    70c0:	blr	x2
    70c4:	b	70cc <*ABS*+0x10@plt+0x11c>
    70c8:	nop
    70cc:	ldp	x29, x30, [sp], #48
    70d0:	ret
    70d4:	stp	x29, x30, [sp, #-16]!
    70d8:	mov	x29, sp
    70dc:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    70e0:	add	x0, x0, #0xc80
    70e4:	ldrb	w0, [x0]
    70e8:	and	x0, x0, #0xff
    70ec:	cmp	x0, #0x0
    70f0:	b.ne	712c <*ABS*+0x10@plt+0x17c>  // b.any
    70f4:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
    70f8:	ldr	x0, [x0, #3584]
    70fc:	cmp	x0, #0x0
    7100:	b.eq	7114 <*ABS*+0x10@plt+0x164>  // b.none
    7104:	adrp	x0, 7d000 <_Unwind_Backtrace@GCC_3.3>
    7108:	add	x0, x0, #0x3a8
    710c:	ldr	x0, [x0]
    7110:	bl	6b00 <__cxa_finalize@plt>
    7114:	bl	6fd4 <*ABS*+0x10@plt+0x24>
    7118:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    711c:	add	x0, x0, #0xc80
    7120:	mov	w1, #0x1                   	// #1
    7124:	strb	w1, [x0]
    7128:	b	7130 <*ABS*+0x10@plt+0x180>
    712c:	nop
    7130:	ldp	x29, x30, [sp], #16
    7134:	ret
    7138:	stp	x29, x30, [sp, #-16]!
    713c:	mov	x29, sp
    7140:	bl	7044 <*ABS*+0x10@plt+0x94>
    7144:	nop
    7148:	ldp	x29, x30, [sp], #16
    714c:	ret
    7150:	str	x30, [sp, #-16]!
    7154:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
    7158:	ldrb	w0, [x0, #57]
    715c:	cmp	w0, #0x0
    7160:	b.eq	7174 <*ABS*+0x10@plt+0x1c4>  // b.none
    7164:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    7168:	add	x0, x0, #0xff0
    716c:	bl	2a3fc <OnPrint@@Base+0x454>
    7170:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
    7174:	nop
    7178:	ldr	x30, [sp], #16
    717c:	ret
    7180:	sub	sp, sp, #0x10
    7184:	str	x0, [sp, #8]
    7188:	ldr	x0, [sp, #8]
    718c:	strb	wzr, [x0]
    7190:	ldr	x0, [sp, #8]
    7194:	str	wzr, [x0, #4]
    7198:	ldr	x0, [sp, #8]
    719c:	str	wzr, [x0, #8]
    71a0:	ldr	x0, [sp, #8]
    71a4:	mov	w1, #0x1                   	// #1
    71a8:	strb	w1, [x0, #12]
    71ac:	ldr	x0, [sp, #8]
    71b0:	mov	w1, #0x1                   	// #1
    71b4:	strb	w1, [x0, #13]
    71b8:	ldr	x0, [sp, #8]
    71bc:	mov	w1, #0x1                   	// #1
    71c0:	strb	w1, [x0, #14]
    71c4:	ldr	x0, [sp, #8]
    71c8:	mov	w1, #0x1                   	// #1
    71cc:	strb	w1, [x0, #15]
    71d0:	ldr	x0, [sp, #8]
    71d4:	mov	w1, #0x1                   	// #1
    71d8:	strb	w1, [x0, #16]
    71dc:	ldr	x0, [sp, #8]
    71e0:	mov	w1, #0x1                   	// #1
    71e4:	strb	w1, [x0, #17]
    71e8:	ldr	x0, [sp, #8]
    71ec:	strb	wzr, [x0, #18]
    71f0:	ldr	x0, [sp, #8]
    71f4:	strb	wzr, [x0, #19]
    71f8:	ldr	x0, [sp, #8]
    71fc:	strb	wzr, [x0, #20]
    7200:	ldr	x0, [sp, #8]
    7204:	strb	wzr, [x0, #21]
    7208:	ldr	x0, [sp, #8]
    720c:	adrp	x1, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    7210:	add	x1, x1, #0xfc0
    7214:	str	x1, [x0, #24]
    7218:	nop
    721c:	add	sp, sp, #0x10
    7220:	ret
    7224:	str	x30, [sp, #-32]!
    7228:	str	x0, [sp, #24]
    722c:	str	x1, [sp, #16]
    7230:	ldr	x0, [sp, #16]
    7234:	mov	x3, x0
    7238:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    723c:	add	x2, x0, #0x18
    7240:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    7244:	add	x1, x0, #0x58
    7248:	ldr	x0, [sp, #24]
    724c:	bl	a1b4 <__lsan_do_recoverable_leak_check@@Base+0x28>
    7250:	ldr	x0, [sp, #16]
    7254:	add	x0, x0, #0x4
    7258:	mov	x3, x0
    725c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    7260:	add	x2, x0, #0x68
    7264:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    7268:	add	x1, x0, #0xe0
    726c:	ldr	x0, [sp, #24]
    7270:	bl	a20c <__lsan_do_recoverable_leak_check@@Base+0x80>
    7274:	ldr	x0, [sp, #16]
    7278:	add	x0, x0, #0x8
    727c:	mov	x3, x0
    7280:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    7284:	add	x2, x0, #0xf0
    7288:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    728c:	add	x1, x0, #0x110
    7290:	ldr	x0, [sp, #24]
    7294:	bl	a20c <__lsan_do_recoverable_leak_check@@Base+0x80>
    7298:	ldr	x0, [sp, #16]
    729c:	add	x0, x0, #0xc
    72a0:	mov	x3, x0
    72a4:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    72a8:	add	x2, x0, #0x120
    72ac:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    72b0:	add	x1, x0, #0x158
    72b4:	ldr	x0, [sp, #24]
    72b8:	bl	a1b4 <__lsan_do_recoverable_leak_check@@Base+0x28>
    72bc:	ldr	x0, [sp, #16]
    72c0:	add	x0, x0, #0xd
    72c4:	mov	x3, x0
    72c8:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    72cc:	add	x2, x0, #0x168
    72d0:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    72d4:	add	x1, x0, #0x188
    72d8:	ldr	x0, [sp, #24]
    72dc:	bl	a1b4 <__lsan_do_recoverable_leak_check@@Base+0x28>
    72e0:	ldr	x0, [sp, #16]
    72e4:	add	x0, x0, #0xe
    72e8:	mov	x3, x0
    72ec:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    72f0:	add	x2, x0, #0x198
    72f4:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    72f8:	add	x1, x0, #0x1c0
    72fc:	ldr	x0, [sp, #24]
    7300:	bl	a1b4 <__lsan_do_recoverable_leak_check@@Base+0x28>
    7304:	ldr	x0, [sp, #16]
    7308:	add	x0, x0, #0xf
    730c:	mov	x3, x0
    7310:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    7314:	add	x2, x0, #0x1d0
    7318:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    731c:	add	x1, x0, #0x208
    7320:	ldr	x0, [sp, #24]
    7324:	bl	a1b4 <__lsan_do_recoverable_leak_check@@Base+0x28>
    7328:	ldr	x0, [sp, #16]
    732c:	add	x0, x0, #0x10
    7330:	mov	x3, x0
    7334:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    7338:	add	x2, x0, #0x210
    733c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    7340:	add	x1, x0, #0x258
    7344:	ldr	x0, [sp, #24]
    7348:	bl	a1b4 <__lsan_do_recoverable_leak_check@@Base+0x28>
    734c:	ldr	x0, [sp, #16]
    7350:	add	x0, x0, #0x11
    7354:	mov	x3, x0
    7358:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    735c:	add	x2, x0, #0x270
    7360:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    7364:	add	x1, x0, #0x318
    7368:	ldr	x0, [sp, #24]
    736c:	bl	a1b4 <__lsan_do_recoverable_leak_check@@Base+0x28>
    7370:	ldr	x0, [sp, #16]
    7374:	add	x0, x0, #0x12
    7378:	mov	x3, x0
    737c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    7380:	add	x2, x0, #0x330
    7384:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    7388:	add	x1, x0, #0x358
    738c:	ldr	x0, [sp, #24]
    7390:	bl	a1b4 <__lsan_do_recoverable_leak_check@@Base+0x28>
    7394:	ldr	x0, [sp, #16]
    7398:	add	x0, x0, #0x13
    739c:	mov	x3, x0
    73a0:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    73a4:	add	x2, x0, #0x368
    73a8:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    73ac:	add	x1, x0, #0x3a0
    73b0:	ldr	x0, [sp, #24]
    73b4:	bl	a1b4 <__lsan_do_recoverable_leak_check@@Base+0x28>
    73b8:	ldr	x0, [sp, #16]
    73bc:	add	x0, x0, #0x14
    73c0:	mov	x3, x0
    73c4:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    73c8:	add	x2, x0, #0x3b0
    73cc:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    73d0:	add	x1, x0, #0x3c0
    73d4:	ldr	x0, [sp, #24]
    73d8:	bl	a1b4 <__lsan_do_recoverable_leak_check@@Base+0x28>
    73dc:	ldr	x0, [sp, #16]
    73e0:	add	x0, x0, #0x15
    73e4:	mov	x3, x0
    73e8:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    73ec:	add	x2, x0, #0x3b0
    73f0:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    73f4:	add	x1, x0, #0x3d0
    73f8:	ldr	x0, [sp, #24]
    73fc:	bl	a1b4 <__lsan_do_recoverable_leak_check@@Base+0x28>
    7400:	ldr	x0, [sp, #16]
    7404:	add	x0, x0, #0x18
    7408:	mov	x3, x0
    740c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    7410:	add	x2, x0, #0x3e0
    7414:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    7418:	add	x1, x0, #0x3f8
    741c:	ldr	x0, [sp, #24]
    7420:	bl	a264 <__lsan_do_recoverable_leak_check@@Base+0xd8>
    7424:	nop
    7428:	ldr	x30, [sp], #32
    742c:	ret
    7430:	stp	x19, x30, [sp, #-32]!
    7434:	str	xzr, [sp, #24]
    7438:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    743c:	add	x0, x0, #0xd90
    7440:	ldr	x0, [x0]
    7444:	str	x0, [sp, #16]
    7448:	ldr	x1, [sp, #24]
    744c:	ldr	x0, [sp, #16]
    7450:	cmp	x1, x0
    7454:	cset	w0, ne  // ne = any
    7458:	and	w0, w0, #0xff
    745c:	and	x0, x0, #0xff
    7460:	cmp	x0, #0x0
    7464:	b.eq	7488 <*ABS*+0x10@plt+0x4d8>  // b.none
    7468:	ldr	x4, [sp, #16]
    746c:	ldr	x3, [sp, #24]
    7470:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    7474:	add	x2, x0, #0x428
    7478:	mov	w1, #0x55                  	// #85
    747c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    7480:	add	x0, x0, #0x450
    7484:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    7488:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    748c:	add	x1, x0, #0xd40
    7490:	mov	x0, #0x50                  	// #80
    7494:	bl	a908 <__lsan_do_recoverable_leak_check@@Base+0x77c>
    7498:	mov	x19, x0
    749c:	mov	w2, #0x1                   	// #1
    74a0:	adrp	x0, 7d000 <_Unwind_Backtrace@GCC_3.3>
    74a4:	add	x1, x0, #0x3b0
    74a8:	mov	x0, x19
    74ac:	bl	30970 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d60>
    74b0:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    74b4:	add	x0, x0, #0xd90
    74b8:	str	x19, [x0]
    74bc:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    74c0:	add	x0, x0, #0xd90
    74c4:	ldr	x19, [x0]
    74c8:	bl	a6d0 <__lsan_do_recoverable_leak_check@@Base+0x544>
    74cc:	ldr	x0, [x0, #24]
    74d0:	mov	x1, x0
    74d4:	mov	x0, x19
    74d8:	bl	30b28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f18>
    74dc:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
    74e0:	ldr	x0, [x0, #3704]
    74e4:	cmp	x0, #0x0
    74e8:	b.eq	7508 <*ABS*+0x10@plt+0x558>  // b.none
    74ec:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    74f0:	add	x0, x0, #0xd90
    74f4:	ldr	x19, [x0]
    74f8:	bl	6bd0 <__lsan_default_suppressions@plt>
    74fc:	mov	x1, x0
    7500:	mov	x0, x19
    7504:	bl	30e04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x31f4>
    7508:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    750c:	add	x0, x0, #0xd90
    7510:	ldr	x2, [x0]
    7514:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    7518:	add	x1, x0, #0x410
    751c:	mov	x0, x2
    7520:	bl	30e04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x31f4>
    7524:	nop
    7528:	ldp	x19, x30, [sp], #32
    752c:	ret
    7530:	str	x30, [sp, #-32]!
    7534:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    7538:	add	x0, x0, #0xd90
    753c:	ldr	x0, [x0]
    7540:	str	x0, [sp, #24]
    7544:	str	xzr, [sp, #16]
    7548:	ldr	x1, [sp, #24]
    754c:	ldr	x0, [sp, #16]
    7550:	cmp	x1, x0
    7554:	cset	w0, eq  // eq = none
    7558:	and	w0, w0, #0xff
    755c:	and	x0, x0, #0xff
    7560:	cmp	x0, #0x0
    7564:	b.eq	7588 <*ABS*+0x10@plt+0x5d8>  // b.none
    7568:	ldr	x4, [sp, #16]
    756c:	ldr	x3, [sp, #24]
    7570:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    7574:	add	x2, x0, #0x480
    7578:	mov	w1, #0x5f                  	// #95
    757c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    7580:	add	x0, x0, #0x450
    7584:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    7588:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    758c:	add	x0, x0, #0xd90
    7590:	ldr	x0, [x0]
    7594:	ldr	x30, [sp], #32
    7598:	ret
    759c:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    75a0:	add	x0, x0, #0xd98
    75a4:	ldr	x0, [x0]
    75a8:	ret
    75ac:	stp	x19, x30, [sp, #-32]!
    75b0:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    75b4:	add	x0, x0, #0xd98
    75b8:	ldr	x0, [x0]
    75bc:	cmp	x0, #0x0
    75c0:	cset	w0, eq  // eq = none
    75c4:	and	w0, w0, #0xff
    75c8:	and	x0, x0, #0xff
    75cc:	str	x0, [sp, #24]
    75d0:	str	xzr, [sp, #16]
    75d4:	ldr	x1, [sp, #24]
    75d8:	ldr	x0, [sp, #16]
    75dc:	cmp	x1, x0
    75e0:	cset	w0, eq  // eq = none
    75e4:	and	w0, w0, #0xff
    75e8:	and	x0, x0, #0xff
    75ec:	cmp	x0, #0x0
    75f0:	b.eq	7614 <*ABS*+0x10@plt+0x664>  // b.none
    75f4:	ldr	x4, [sp, #16]
    75f8:	ldr	x3, [sp, #24]
    75fc:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    7600:	add	x2, x0, #0x4a0
    7604:	mov	w1, #0x68                  	// #104
    7608:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    760c:	add	x0, x0, #0x450
    7610:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    7614:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    7618:	add	x1, x0, #0xdc0
    761c:	mov	x0, #0x18                  	// #24
    7620:	bl	a908 <__lsan_do_recoverable_leak_check@@Base+0x77c>
    7624:	mov	x19, x0
    7628:	mov	x0, x19
    762c:	bl	acfc <__lsan_do_recoverable_leak_check@@Base+0xb70>
    7630:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    7634:	add	x0, x0, #0xd98
    7638:	str	x19, [x0]
    763c:	nop
    7640:	ldp	x19, x30, [sp], #32
    7644:	ret
    7648:	str	x30, [sp, #-16]!
    764c:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
    7650:	ldr	x0, [x0, #3432]
    7654:	cmp	x0, #0x0
    7658:	b.eq	7664 <*ABS*+0x10@plt+0x6b4>  // b.none
    765c:	bl	68d0 <__lsan_default_options@plt>
    7660:	b	766c <*ABS*+0x10@plt+0x6bc>
    7664:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    7668:	add	x0, x0, #0xfc0
    766c:	ldr	x30, [sp], #16
    7670:	ret
    7674:	str	x30, [sp, #-16]!
    7678:	bl	75ac <*ABS*+0x10@plt+0x5fc>
    767c:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
    7680:	ldrb	w0, [x0, #57]
    7684:	cmp	w0, #0x0
    7688:	b.eq	7694 <*ABS*+0x10@plt+0x6e4>  // b.none
    768c:	bl	7430 <*ABS*+0x10@plt+0x480>
    7690:	bl	d0c4 <__lsan_do_recoverable_leak_check@@Base+0x2f38>
    7694:	nop
    7698:	ldr	x30, [sp], #16
    769c:	ret
    76a0:	stp	x29, x30, [sp, #-48]!
    76a4:	mov	x29, sp
    76a8:	str	x0, [x29, #24]
    76ac:	mov	x0, #0x4000                	// #16384
    76b0:	str	x0, [x29, #40]
    76b4:	ldr	x1, [x29, #24]
    76b8:	mov	x0, #0x3fff                	// #16383
    76bc:	cmp	x1, x0
    76c0:	b.hi	76cc <*ABS*+0x10@plt+0x71c>  // b.pmore
    76c4:	mov	w0, #0x0                   	// #0
    76c8:	b	76f4 <*ABS*+0x10@plt+0x744>
    76cc:	mov	x0, x29
    76d0:	bl	a324 <__lsan_do_recoverable_leak_check@@Base+0x198>
    76d4:	add	w0, w0, #0x1
    76d8:	str	w0, [x29, #36]
    76dc:	ldr	w0, [x29, #36]
    76e0:	ldr	x1, [x29, #24]
    76e4:	lsr	x0, x1, x0
    76e8:	cmp	x0, #0x0
    76ec:	cset	w0, eq  // eq = none
    76f0:	and	w0, w0, #0xff
    76f4:	ldp	x29, x30, [sp], #48
    76f8:	ret
    76fc:	stp	x19, x20, [sp, #-144]!
    7700:	str	x30, [sp, #16]
    7704:	str	x0, [sp, #72]
    7708:	str	x1, [sp, #64]
    770c:	str	x2, [sp, #56]
    7710:	str	x3, [sp, #48]
    7714:	str	w4, [sp, #44]
    7718:	ldr	w0, [sp, #44]
    771c:	cmp	w0, #0x2
    7720:	b.eq	7730 <*ABS*+0x10@plt+0x780>  // b.none
    7724:	ldr	w0, [sp, #44]
    7728:	cmp	w0, #0x1
    772c:	b.ne	7738 <*ABS*+0x10@plt+0x788>  // b.any
    7730:	mov	w0, #0x1                   	// #1
    7734:	b	773c <*ABS*+0x10@plt+0x78c>
    7738:	mov	w0, #0x0                   	// #0
    773c:	and	x0, x0, #0xff
    7740:	str	x0, [sp, #128]
    7744:	str	xzr, [sp, #120]
    7748:	ldr	x1, [sp, #128]
    774c:	ldr	x0, [sp, #120]
    7750:	cmp	x1, x0
    7754:	cset	w0, eq  // eq = none
    7758:	and	w0, w0, #0xff
    775c:	and	x0, x0, #0xff
    7760:	cmp	x0, #0x0
    7764:	b.eq	7788 <*ABS*+0x10@plt+0x7d8>  // b.none
    7768:	ldr	x4, [sp, #120]
    776c:	ldr	x3, [sp, #128]
    7770:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    7774:	add	x2, x0, #0x4c0
    7778:	mov	w1, #0x9e                  	// #158
    777c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    7780:	add	x0, x0, #0x450
    7784:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    7788:	bl	a6d0 <__lsan_do_recoverable_leak_check@@Base+0x544>
    778c:	bl	a6a4 <__lsan_do_recoverable_leak_check@@Base+0x518>
    7790:	str	x0, [sp, #112]
    7794:	bl	a6d0 <__lsan_do_recoverable_leak_check@@Base+0x544>
    7798:	ldrb	w0, [x0, #20]
    779c:	cmp	w0, #0x0
    77a0:	b.eq	77bc <*ABS*+0x10@plt+0x80c>  // b.none
    77a4:	ldr	x3, [sp, #64]
    77a8:	ldr	x2, [sp, #72]
    77ac:	ldr	x1, [sp, #48]
    77b0:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    77b4:	add	x0, x0, #0x500
    77b8:	bl	2a3fc <OnPrint@@Base+0x454>
    77bc:	ldr	x0, [sp, #72]
    77c0:	str	x0, [sp, #136]
    77c4:	ldr	x0, [sp, #136]
    77c8:	ldr	x1, [sp, #112]
    77cc:	udiv	x2, x0, x1
    77d0:	ldr	x1, [sp, #112]
    77d4:	mul	x1, x2, x1
    77d8:	sub	x0, x0, x1
    77dc:	cmp	x0, #0x0
    77e0:	b.eq	7810 <*ABS*+0x10@plt+0x860>  // b.none
    77e4:	ldr	x1, [sp, #136]
    77e8:	ldr	x0, [sp, #112]
    77ec:	add	x1, x1, x0
    77f0:	ldr	x0, [sp, #136]
    77f4:	ldr	x2, [sp, #112]
    77f8:	udiv	x3, x0, x2
    77fc:	ldr	x2, [sp, #112]
    7800:	mul	x2, x3, x2
    7804:	sub	x0, x0, x2
    7808:	sub	x0, x1, x0
    780c:	str	x0, [sp, #136]
    7810:	ldr	x0, [sp, #136]
    7814:	add	x0, x0, #0x8
    7818:	ldr	x1, [sp, #64]
    781c:	cmp	x1, x0
    7820:	b.cc	79f8 <*ABS*+0x10@plt+0xa48>  // b.lo, b.ul, b.last
    7824:	ldr	x0, [sp, #136]
    7828:	ldr	x0, [x0]
    782c:	str	x0, [sp, #104]
    7830:	ldr	x0, [sp, #104]
    7834:	bl	76a0 <*ABS*+0x10@plt+0x6f0>
    7838:	and	w0, w0, #0xff
    783c:	eor	w0, w0, #0x1
    7840:	and	w0, w0, #0xff
    7844:	cmp	w0, #0x0
    7848:	b.ne	79c0 <*ABS*+0x10@plt+0xa10>  // b.any
    784c:	ldr	x0, [sp, #104]
    7850:	bl	e71c <__sanitizer_print_stack_trace@@Base+0xc64>
    7854:	str	x0, [sp, #96]
    7858:	ldr	x0, [sp, #96]
    785c:	cmp	x0, #0x0
    7860:	b.eq	79c8 <*ABS*+0x10@plt+0xa18>  // b.none
    7864:	ldr	x0, [sp, #96]
    7868:	ldr	x1, [sp, #72]
    786c:	cmp	x1, x0
    7870:	b.eq	79d0 <*ABS*+0x10@plt+0xa20>  // b.none
    7874:	ldr	x1, [sp, #96]
    7878:	add	x0, sp, #0x58
    787c:	bl	e858 <__sanitizer_print_stack_trace@@Base+0xda0>
    7880:	add	x0, sp, #0x58
    7884:	bl	e8fc <__sanitizer_print_stack_trace@@Base+0xe44>
    7888:	cmp	w0, #0x2
    788c:	b.eq	78a0 <*ABS*+0x10@plt+0x8f0>  // b.none
    7890:	add	x0, sp, #0x58
    7894:	bl	e8fc <__sanitizer_print_stack_trace@@Base+0xe44>
    7898:	cmp	w0, #0x3
    789c:	b.ne	78a8 <*ABS*+0x10@plt+0x8f8>  // b.any
    78a0:	mov	w0, #0x1                   	// #1
    78a4:	b	78ac <*ABS*+0x10@plt+0x8fc>
    78a8:	mov	w0, #0x0                   	// #0
    78ac:	cmp	w0, #0x0
    78b0:	b.ne	79d8 <*ABS*+0x10@plt+0xa28>  // b.any
    78b4:	bl	a6d0 <__lsan_do_recoverable_leak_check@@Base+0x544>
    78b8:	ldrb	w0, [x0, #19]
    78bc:	eor	w0, w0, #0x1
    78c0:	and	w0, w0, #0xff
    78c4:	cmp	w0, #0x0
    78c8:	b.eq	78e8 <*ABS*+0x10@plt+0x938>  // b.none
    78cc:	ldr	x0, [sp, #136]
    78d0:	bl	d698 <__lsan_do_recoverable_leak_check@@Base+0x350c>
    78d4:	and	w0, w0, #0xff
    78d8:	cmp	w0, #0x0
    78dc:	b.eq	78e8 <*ABS*+0x10@plt+0x938>  // b.none
    78e0:	mov	w0, #0x1                   	// #1
    78e4:	b	78ec <*ABS*+0x10@plt+0x93c>
    78e8:	mov	w0, #0x0                   	// #0
    78ec:	cmp	w0, #0x0
    78f0:	b.eq	7948 <*ABS*+0x10@plt+0x998>  // b.none
    78f4:	bl	a6d0 <__lsan_do_recoverable_leak_check@@Base+0x544>
    78f8:	ldrb	w0, [x0, #20]
    78fc:	cmp	w0, #0x0
    7900:	b.eq	79e0 <*ABS*+0x10@plt+0xa30>  // b.none
    7904:	ldr	x19, [sp, #96]
    7908:	add	x0, sp, #0x58
    790c:	bl	e958 <__sanitizer_print_stack_trace@@Base+0xea0>
    7910:	mov	x1, x0
    7914:	ldr	x0, [sp, #96]
    7918:	add	x20, x1, x0
    791c:	add	x0, sp, #0x58
    7920:	bl	e958 <__sanitizer_print_stack_trace@@Base+0xea0>
    7924:	mov	x5, x0
    7928:	mov	x4, x20
    792c:	mov	x3, x19
    7930:	ldr	x2, [sp, #104]
    7934:	ldr	x1, [sp, #136]
    7938:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    793c:	add	x0, x0, #0x520
    7940:	bl	2a3fc <OnPrint@@Base+0x454>
    7944:	b	79e0 <*ABS*+0x10@plt+0xa30>
    7948:	add	x0, sp, #0x58
    794c:	ldr	w1, [sp, #44]
    7950:	bl	e920 <__sanitizer_print_stack_trace@@Base+0xe68>
    7954:	bl	a6d0 <__lsan_do_recoverable_leak_check@@Base+0x544>
    7958:	ldrb	w0, [x0, #20]
    795c:	cmp	w0, #0x0
    7960:	b.eq	79a4 <*ABS*+0x10@plt+0x9f4>  // b.none
    7964:	ldr	x19, [sp, #96]
    7968:	add	x0, sp, #0x58
    796c:	bl	e958 <__sanitizer_print_stack_trace@@Base+0xea0>
    7970:	mov	x1, x0
    7974:	ldr	x0, [sp, #96]
    7978:	add	x20, x1, x0
    797c:	add	x0, sp, #0x58
    7980:	bl	e958 <__sanitizer_print_stack_trace@@Base+0xea0>
    7984:	mov	x5, x0
    7988:	mov	x4, x20
    798c:	mov	x3, x19
    7990:	ldr	x2, [sp, #104]
    7994:	ldr	x1, [sp, #136]
    7998:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    799c:	add	x0, x0, #0x568
    79a0:	bl	2a3fc <OnPrint@@Base+0x454>
    79a4:	ldr	x0, [sp, #56]
    79a8:	cmp	x0, #0x0
    79ac:	b.eq	79e4 <*ABS*+0x10@plt+0xa34>  // b.none
    79b0:	ldr	x0, [sp, #56]
    79b4:	add	x1, sp, #0x60
    79b8:	bl	ad1c <__lsan_do_recoverable_leak_check@@Base+0xb90>
    79bc:	b	79e4 <*ABS*+0x10@plt+0xa34>
    79c0:	nop
    79c4:	b	79e4 <*ABS*+0x10@plt+0xa34>
    79c8:	nop
    79cc:	b	79e4 <*ABS*+0x10@plt+0xa34>
    79d0:	nop
    79d4:	b	79e4 <*ABS*+0x10@plt+0xa34>
    79d8:	nop
    79dc:	b	79e4 <*ABS*+0x10@plt+0xa34>
    79e0:	nop
    79e4:	ldr	x1, [sp, #136]
    79e8:	ldr	x0, [sp, #112]
    79ec:	add	x0, x1, x0
    79f0:	str	x0, [sp, #136]
    79f4:	b	7810 <*ABS*+0x10@plt+0x860>
    79f8:	nop
    79fc:	ldr	x30, [sp, #16]
    7a00:	ldp	x19, x20, [sp], #144
    7a04:	ret
    7a08:	str	x30, [sp, #-96]!
    7a0c:	str	x0, [sp, #40]
    7a10:	str	x1, [sp, #32]
    7a14:	str	x2, [sp, #24]
    7a18:	str	xzr, [sp, #56]
    7a1c:	str	xzr, [sp, #48]
    7a20:	add	x1, sp, #0x30
    7a24:	add	x0, sp, #0x38
    7a28:	bl	e6d8 <__sanitizer_print_stack_trace@@Base+0xc20>
    7a2c:	ldr	x0, [sp, #56]
    7a30:	ldr	x1, [sp, #40]
    7a34:	cmp	x1, x0
    7a38:	b.hi	7b4c <*ABS*+0x10@plt+0xb9c>  // b.pmore
    7a3c:	ldr	x0, [sp, #56]
    7a40:	ldr	x1, [sp, #32]
    7a44:	cmp	x1, x0
    7a48:	b.ls	7b4c <*ABS*+0x10@plt+0xb9c>  // b.plast
    7a4c:	ldr	x0, [sp, #56]
    7a50:	str	x0, [sp, #88]
    7a54:	ldr	x0, [sp, #48]
    7a58:	str	x0, [sp, #80]
    7a5c:	ldr	x1, [sp, #88]
    7a60:	ldr	x0, [sp, #80]
    7a64:	cmp	x1, x0
    7a68:	cset	w0, hi  // hi = pmore
    7a6c:	and	w0, w0, #0xff
    7a70:	and	x0, x0, #0xff
    7a74:	cmp	x0, #0x0
    7a78:	b.eq	7a9c <*ABS*+0x10@plt+0xaec>  // b.none
    7a7c:	ldr	x4, [sp, #80]
    7a80:	ldr	x3, [sp, #88]
    7a84:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    7a88:	add	x2, x0, #0x5a0
    7a8c:	mov	w1, #0xc4                  	// #196
    7a90:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    7a94:	add	x0, x0, #0x450
    7a98:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    7a9c:	ldr	x0, [sp, #48]
    7aa0:	str	x0, [sp, #72]
    7aa4:	ldr	x0, [sp, #32]
    7aa8:	str	x0, [sp, #64]
    7aac:	ldr	x1, [sp, #72]
    7ab0:	ldr	x0, [sp, #64]
    7ab4:	cmp	x1, x0
    7ab8:	cset	w0, hi  // hi = pmore
    7abc:	and	w0, w0, #0xff
    7ac0:	and	x0, x0, #0xff
    7ac4:	cmp	x0, #0x0
    7ac8:	b.eq	7aec <*ABS*+0x10@plt+0xb3c>  // b.none
    7acc:	ldr	x4, [sp, #64]
    7ad0:	ldr	x3, [sp, #72]
    7ad4:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    7ad8:	add	x2, x0, #0x5d0
    7adc:	mov	w1, #0xc5                  	// #197
    7ae0:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    7ae4:	add	x0, x0, #0x450
    7ae8:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    7aec:	ldr	x0, [sp, #56]
    7af0:	ldr	x1, [sp, #40]
    7af4:	cmp	x1, x0
    7af8:	b.cs	7b18 <*ABS*+0x10@plt+0xb68>  // b.hs, b.nlast
    7afc:	ldr	x1, [sp, #56]
    7b00:	mov	w4, #0x2                   	// #2
    7b04:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    7b08:	add	x3, x0, #0x5f0
    7b0c:	ldr	x2, [sp, #24]
    7b10:	ldr	x0, [sp, #40]
    7b14:	bl	76fc <*ABS*+0x10@plt+0x74c>
    7b18:	ldr	x0, [sp, #48]
    7b1c:	ldr	x1, [sp, #32]
    7b20:	cmp	x1, x0
    7b24:	b.ls	7b6c <*ABS*+0x10@plt+0xbbc>  // b.plast
    7b28:	ldr	x5, [sp, #48]
    7b2c:	mov	w4, #0x2                   	// #2
    7b30:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    7b34:	add	x3, x0, #0x5f0
    7b38:	ldr	x2, [sp, #24]
    7b3c:	ldr	x1, [sp, #32]
    7b40:	mov	x0, x5
    7b44:	bl	76fc <*ABS*+0x10@plt+0x74c>
    7b48:	b	7b6c <*ABS*+0x10@plt+0xbbc>
    7b4c:	mov	w4, #0x2                   	// #2
    7b50:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    7b54:	add	x3, x0, #0x5f0
    7b58:	ldr	x2, [sp, #24]
    7b5c:	ldr	x1, [sp, #32]
    7b60:	ldr	x0, [sp, #40]
    7b64:	bl	76fc <*ABS*+0x10@plt+0x74c>
    7b68:	b	7b70 <*ABS*+0x10@plt+0xbc0>
    7b6c:	nop
    7b70:	nop
    7b74:	ldr	x30, [sp], #96
    7b78:	ret
    7b7c:	str	x30, [sp, #-64]!
    7b80:	str	x0, [sp, #40]
    7b84:	str	x1, [sp, #32]
    7b88:	str	x2, [sp, #24]
    7b8c:	ldr	x0, [sp, #24]
    7b90:	str	x0, [sp, #56]
    7b94:	mov	w4, #0x2                   	// #2
    7b98:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    7b9c:	add	x3, x0, #0x5f8
    7ba0:	ldr	x2, [sp, #56]
    7ba4:	ldr	x1, [sp, #32]
    7ba8:	ldr	x0, [sp, #40]
    7bac:	bl	76fc <*ABS*+0x10@plt+0x74c>
    7bb0:	nop
    7bb4:	ldr	x30, [sp], #64
    7bb8:	ret
    7bbc:	stp	x19, x30, [sp, #-208]!
    7bc0:	str	x0, [sp, #24]
    7bc4:	str	x1, [sp, #16]
    7bc8:	ldr	x0, [sp, #24]
    7bcc:	ldr	x0, [x0]
    7bd0:	add	x0, x0, #0x8
    7bd4:	ldr	x1, [x0]
    7bd8:	ldr	x0, [sp, #24]
    7bdc:	blr	x1
    7be0:	mov	x1, x0
    7be4:	add	x0, sp, #0x68
    7be8:	bl	ae00 <__lsan_do_recoverable_leak_check@@Base+0xc74>
    7bec:	add	x0, sp, #0x68
    7bf0:	bl	ae4c <__lsan_do_recoverable_leak_check@@Base+0xcc0>
    7bf4:	str	x0, [sp, #176]
    7bf8:	add	x0, sp, #0x68
    7bfc:	bl	ae4c <__lsan_do_recoverable_leak_check@@Base+0xcc0>
    7c00:	mov	x19, x0
    7c04:	add	x0, sp, #0x68
    7c08:	bl	ae64 <__lsan_do_recoverable_leak_check@@Base+0xcd8>
    7c0c:	lsl	x0, x0, #3
    7c10:	add	x0, x19, x0
    7c14:	str	x0, [sp, #168]
    7c18:	str	xzr, [sp, #200]
    7c1c:	ldr	x0, [sp, #24]
    7c20:	ldr	x0, [x0]
    7c24:	add	x0, x0, #0x10
    7c28:	ldr	x1, [x0]
    7c2c:	ldr	x0, [sp, #24]
    7c30:	blr	x1
    7c34:	mov	x1, x0
    7c38:	ldr	x0, [sp, #200]
    7c3c:	cmp	x0, x1
    7c40:	cset	w0, cc  // cc = lo, ul, last
    7c44:	and	w0, w0, #0xff
    7c48:	cmp	w0, #0x0
    7c4c:	b.eq	8158 <*ABS*+0x10@plt+0x11a8>  // b.none
    7c50:	ldr	x0, [sp, #24]
    7c54:	ldr	x0, [x0]
    7c58:	add	x0, x0, #0x18
    7c5c:	ldr	x2, [x0]
    7c60:	ldr	x1, [sp, #200]
    7c64:	ldr	x0, [sp, #24]
    7c68:	blr	x2
    7c6c:	str	x0, [sp, #160]
    7c70:	bl	a6d0 <__lsan_do_recoverable_leak_check@@Base+0x544>
    7c74:	ldrb	w0, [x0, #21]
    7c78:	cmp	w0, #0x0
    7c7c:	b.eq	7c90 <*ABS*+0x10@plt+0xce0>  // b.none
    7c80:	ldr	x1, [sp, #160]
    7c84:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    7c88:	add	x0, x0, #0x608
    7c8c:	bl	2a3fc <OnPrint@@Base+0x454>
    7c90:	add	x6, sp, #0x30
    7c94:	add	x5, sp, #0x38
    7c98:	add	x4, sp, #0x40
    7c9c:	add	x3, sp, #0x48
    7ca0:	add	x2, sp, #0x50
    7ca4:	add	x1, sp, #0x58
    7ca8:	add	x0, sp, #0x60
    7cac:	mov	x7, x6
    7cb0:	mov	x6, x5
    7cb4:	mov	x5, x4
    7cb8:	mov	x4, x3
    7cbc:	mov	x3, x2
    7cc0:	mov	x2, x1
    7cc4:	mov	x1, x0
    7cc8:	ldr	x0, [sp, #160]
    7ccc:	bl	15ebc <__interceptor_sigaction@@Base+0x954>
    7cd0:	strb	w0, [sp, #159]
    7cd4:	ldrb	w0, [sp, #159]
    7cd8:	eor	w0, w0, #0x1
    7cdc:	and	w0, w0, #0xff
    7ce0:	cmp	w0, #0x0
    7ce4:	b.eq	7d0c <*ABS*+0x10@plt+0xd5c>  // b.none
    7ce8:	bl	a6d0 <__lsan_do_recoverable_leak_check@@Base+0x544>
    7cec:	ldrb	w0, [x0, #21]
    7cf0:	cmp	w0, #0x0
    7cf4:	b.eq	813c <*ABS*+0x10@plt+0x118c>  // b.none
    7cf8:	ldr	x1, [sp, #160]
    7cfc:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    7d00:	add	x0, x0, #0x620
    7d04:	bl	2a3fc <OnPrint@@Base+0x454>
    7d08:	b	813c <*ABS*+0x10@plt+0x118c>
    7d0c:	ldr	x0, [sp, #24]
    7d10:	ldr	x0, [x0]
    7d14:	ldr	x19, [x0]
    7d18:	add	x0, sp, #0x68
    7d1c:	bl	ae4c <__lsan_do_recoverable_leak_check@@Base+0xcc0>
    7d20:	mov	x1, x0
    7d24:	add	x0, sp, #0x28
    7d28:	mov	x3, x0
    7d2c:	mov	x2, x1
    7d30:	ldr	x1, [sp, #200]
    7d34:	ldr	x0, [sp, #24]
    7d38:	blr	x19
    7d3c:	str	w0, [sp, #152]
    7d40:	ldr	w0, [sp, #152]
    7d44:	cmp	w0, #0x1
    7d48:	b.eq	7d70 <*ABS*+0x10@plt+0xdc0>  // b.none
    7d4c:	ldr	x1, [sp, #160]
    7d50:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    7d54:	add	x0, x0, #0x648
    7d58:	bl	2a3fc <OnPrint@@Base+0x454>
    7d5c:	ldr	w0, [sp, #152]
    7d60:	cmn	w0, #0x1
    7d64:	b.eq	8144 <*ABS*+0x10@plt+0x1194>  // b.none
    7d68:	ldr	x0, [sp, #96]
    7d6c:	str	x0, [sp, #40]
    7d70:	bl	a6d0 <__lsan_do_recoverable_leak_check@@Base+0x544>
    7d74:	ldrb	w0, [x0, #14]
    7d78:	cmp	w0, #0x0
    7d7c:	b.eq	7d94 <*ABS*+0x10@plt+0xde4>  // b.none
    7d80:	ldr	w0, [sp, #152]
    7d84:	cmp	w0, #0x0
    7d88:	b.eq	7d94 <*ABS*+0x10@plt+0xde4>  // b.none
    7d8c:	mov	w0, #0x1                   	// #1
    7d90:	b	7d98 <*ABS*+0x10@plt+0xde8>
    7d94:	mov	w0, #0x0                   	// #0
    7d98:	cmp	w0, #0x0
    7d9c:	b.eq	7dbc <*ABS*+0x10@plt+0xe0c>  // b.none
    7da0:	mov	w4, #0x2                   	// #2
    7da4:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    7da8:	add	x3, x0, #0x678
    7dac:	ldr	x2, [sp, #16]
    7db0:	ldr	x1, [sp, #168]
    7db4:	ldr	x0, [sp, #176]
    7db8:	bl	76fc <*ABS*+0x10@plt+0x74c>
    7dbc:	bl	a6d0 <__lsan_do_recoverable_leak_check@@Base+0x544>
    7dc0:	ldrb	w0, [x0, #13]
    7dc4:	cmp	w0, #0x0
    7dc8:	b.eq	7f24 <*ABS*+0x10@plt+0xf74>  // b.none
    7dcc:	bl	a6d0 <__lsan_do_recoverable_leak_check@@Base+0x544>
    7dd0:	ldrb	w0, [x0, #21]
    7dd4:	cmp	w0, #0x0
    7dd8:	b.eq	7e00 <*ABS*+0x10@plt+0xe50>  // b.none
    7ddc:	ldr	x0, [sp, #96]
    7de0:	ldr	x1, [sp, #88]
    7de4:	ldr	x2, [sp, #40]
    7de8:	mov	x3, x2
    7dec:	mov	x2, x1
    7df0:	mov	x1, x0
    7df4:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    7df8:	add	x0, x0, #0x688
    7dfc:	bl	2a3fc <OnPrint@@Base+0x454>
    7e00:	ldr	x1, [sp, #40]
    7e04:	ldr	x0, [sp, #96]
    7e08:	cmp	x1, x0
    7e0c:	b.cc	7e20 <*ABS*+0x10@plt+0xe70>  // b.lo, b.ul, b.last
    7e10:	ldr	x1, [sp, #40]
    7e14:	ldr	x0, [sp, #88]
    7e18:	cmp	x1, x0
    7e1c:	b.cc	7ee0 <*ABS*+0x10@plt+0xf30>  // b.lo, b.ul, b.last
    7e20:	bl	a6d0 <__lsan_do_recoverable_leak_check@@Base+0x544>
    7e24:	ldrb	w0, [x0, #21]
    7e28:	cmp	w0, #0x0
    7e2c:	b.eq	7e3c <*ABS*+0x10@plt+0xe8c>  // b.none
    7e30:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    7e34:	add	x0, x0, #0x6a8
    7e38:	bl	2a3fc <OnPrint@@Base+0x454>
    7e3c:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
    7e40:	str	x0, [sp, #144]
    7e44:	str	wzr, [sp, #196]
    7e48:	ldr	x1, [sp, #96]
    7e4c:	ldr	x0, [sp, #88]
    7e50:	cmp	x1, x0
    7e54:	b.cs	7e80 <*ABS*+0x10@plt+0xed0>  // b.hs, b.nlast
    7e58:	ldr	x0, [sp, #96]
    7e5c:	mov	x1, #0x1                   	// #1
    7e60:	bl	28290 <__sanitizer_set_report_fd@@Base+0x9098>
    7e64:	and	w0, w0, #0xff
    7e68:	eor	w0, w0, #0x1
    7e6c:	and	w0, w0, #0xff
    7e70:	cmp	w0, #0x0
    7e74:	b.eq	7e80 <*ABS*+0x10@plt+0xed0>  // b.none
    7e78:	mov	w0, #0x1                   	// #1
    7e7c:	b	7e84 <*ABS*+0x10@plt+0xed4>
    7e80:	mov	w0, #0x0                   	// #0
    7e84:	cmp	w0, #0x0
    7e88:	b.eq	7eac <*ABS*+0x10@plt+0xefc>  // b.none
    7e8c:	ldr	w0, [sp, #196]
    7e90:	add	w0, w0, #0x1
    7e94:	str	w0, [sp, #196]
    7e98:	ldr	x1, [sp, #96]
    7e9c:	ldr	x0, [sp, #144]
    7ea0:	add	x0, x1, x0
    7ea4:	str	x0, [sp, #96]
    7ea8:	b	7e48 <*ABS*+0x10@plt+0xe98>
    7eac:	bl	a6d0 <__lsan_do_recoverable_leak_check@@Base+0x544>
    7eb0:	ldrb	w0, [x0, #21]
    7eb4:	cmp	w0, #0x0
    7eb8:	b.eq	7eec <*ABS*+0x10@plt+0xf3c>  // b.none
    7ebc:	ldr	x0, [sp, #96]
    7ec0:	ldr	x1, [sp, #88]
    7ec4:	mov	x3, x1
    7ec8:	mov	x2, x0
    7ecc:	ldr	w1, [sp, #196]
    7ed0:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    7ed4:	add	x0, x0, #0x6d8
    7ed8:	bl	2a3fc <OnPrint@@Base+0x454>
    7edc:	b	7eec <*ABS*+0x10@plt+0xf3c>
    7ee0:	ldr	x0, [sp, #40]
    7ee4:	str	x0, [sp, #96]
    7ee8:	b	7ef0 <*ABS*+0x10@plt+0xf40>
    7eec:	nop
    7ef0:	ldr	x5, [sp, #96]
    7ef4:	ldr	x1, [sp, #88]
    7ef8:	mov	w4, #0x2                   	// #2
    7efc:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    7f00:	add	x3, x0, #0x710
    7f04:	ldr	x2, [sp, #16]
    7f08:	mov	x0, x5
    7f0c:	bl	76fc <*ABS*+0x10@plt+0x74c>
    7f10:	ldr	x2, [sp, #16]
    7f14:	adrp	x0, 7000 <*ABS*+0x10@plt+0x50>
    7f18:	add	x1, x0, #0xb7c
    7f1c:	ldr	x0, [sp, #160]
    7f20:	bl	15fa4 <__interceptor_sigaction@@Base+0xa3c>
    7f24:	bl	a6d0 <__lsan_do_recoverable_leak_check@@Base+0x544>
    7f28:	ldrb	w0, [x0, #15]
    7f2c:	cmp	w0, #0x0
    7f30:	b.eq	8148 <*ABS*+0x10@plt+0x1198>  // b.none
    7f34:	ldr	x0, [sp, #80]
    7f38:	cmp	x0, #0x0
    7f3c:	b.eq	8020 <*ABS*+0x10@plt+0x1070>  // b.none
    7f40:	bl	a6d0 <__lsan_do_recoverable_leak_check@@Base+0x544>
    7f44:	ldrb	w0, [x0, #21]
    7f48:	cmp	w0, #0x0
    7f4c:	b.eq	7f6c <*ABS*+0x10@plt+0xfbc>  // b.none
    7f50:	ldr	x0, [sp, #80]
    7f54:	ldr	x1, [sp, #72]
    7f58:	mov	x2, x1
    7f5c:	mov	x1, x0
    7f60:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    7f64:	add	x0, x0, #0x718
    7f68:	bl	2a3fc <OnPrint@@Base+0x454>
    7f6c:	ldr	x1, [sp, #64]
    7f70:	ldr	x0, [sp, #56]
    7f74:	cmp	x1, x0
    7f78:	b.eq	7f9c <*ABS*+0x10@plt+0xfec>  // b.none
    7f7c:	ldr	x1, [sp, #72]
    7f80:	ldr	x0, [sp, #64]
    7f84:	cmp	x1, x0
    7f88:	b.cc	7f9c <*ABS*+0x10@plt+0xfec>  // b.lo, b.ul, b.last
    7f8c:	ldr	x1, [sp, #80]
    7f90:	ldr	x0, [sp, #56]
    7f94:	cmp	x1, x0
    7f98:	b.ls	7fc0 <*ABS*+0x10@plt+0x1010>  // b.plast
    7f9c:	ldr	x5, [sp, #80]
    7fa0:	ldr	x1, [sp, #72]
    7fa4:	mov	w4, #0x2                   	// #2
    7fa8:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    7fac:	add	x3, x0, #0x728
    7fb0:	ldr	x2, [sp, #16]
    7fb4:	mov	x0, x5
    7fb8:	bl	76fc <*ABS*+0x10@plt+0x74c>
    7fbc:	b	8020 <*ABS*+0x10@plt+0x1070>
    7fc0:	ldr	x1, [sp, #80]
    7fc4:	ldr	x0, [sp, #64]
    7fc8:	cmp	x1, x0
    7fcc:	b.cs	7ff0 <*ABS*+0x10@plt+0x1040>  // b.hs, b.nlast
    7fd0:	ldr	x5, [sp, #80]
    7fd4:	ldr	x1, [sp, #64]
    7fd8:	mov	w4, #0x2                   	// #2
    7fdc:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    7fe0:	add	x3, x0, #0x728
    7fe4:	ldr	x2, [sp, #16]
    7fe8:	mov	x0, x5
    7fec:	bl	76fc <*ABS*+0x10@plt+0x74c>
    7ff0:	ldr	x1, [sp, #72]
    7ff4:	ldr	x0, [sp, #56]
    7ff8:	cmp	x1, x0
    7ffc:	b.ls	8020 <*ABS*+0x10@plt+0x1070>  // b.plast
    8000:	ldr	x5, [sp, #56]
    8004:	ldr	x1, [sp, #72]
    8008:	mov	w4, #0x2                   	// #2
    800c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    8010:	add	x3, x0, #0x728
    8014:	ldr	x2, [sp, #16]
    8018:	mov	x0, x5
    801c:	bl	76fc <*ABS*+0x10@plt+0x74c>
    8020:	ldr	x0, [sp, #48]
    8024:	cmp	x0, #0x0
    8028:	b.eq	8050 <*ABS*+0x10@plt+0x10a0>  // b.none
    802c:	ldr	x0, [sp, #48]
    8030:	bl	37c48 <__sanitizer_set_death_callback@@Base+0x1fa8>
    8034:	and	w0, w0, #0xff
    8038:	eor	w0, w0, #0x1
    803c:	and	w0, w0, #0xff
    8040:	cmp	w0, #0x0
    8044:	b.eq	8050 <*ABS*+0x10@plt+0x10a0>  // b.none
    8048:	mov	w0, #0x1                   	// #1
    804c:	b	8054 <*ABS*+0x10@plt+0x10a4>
    8050:	mov	w0, #0x0                   	// #0
    8054:	cmp	w0, #0x0
    8058:	b.eq	8118 <*ABS*+0x10@plt+0x1168>  // b.none
    805c:	str	xzr, [sp, #184]
    8060:	ldr	x0, [sp, #48]
    8064:	ldr	x0, [x0]
    8068:	ldr	x1, [sp, #184]
    806c:	cmp	x1, x0
    8070:	b.cs	8148 <*ABS*+0x10@plt+0x1198>  // b.hs, b.nlast
    8074:	ldr	x0, [sp, #48]
    8078:	ldr	x1, [x0, #8]
    807c:	ldr	x0, [sp, #184]
    8080:	lsl	x0, x0, #4
    8084:	add	x0, x1, x0
    8088:	ldr	x0, [x0]
    808c:	str	x0, [sp, #136]
    8090:	ldr	x0, [sp, #48]
    8094:	ldr	x1, [x0, #8]
    8098:	ldr	x0, [sp, #184]
    809c:	lsl	x0, x0, #4
    80a0:	add	x0, x1, x0
    80a4:	ldr	x0, [x0, #8]
    80a8:	ldr	x1, [sp, #136]
    80ac:	add	x0, x1, x0
    80b0:	str	x0, [sp, #128]
    80b4:	ldr	x1, [sp, #136]
    80b8:	ldr	x0, [sp, #128]
    80bc:	cmp	x1, x0
    80c0:	b.cs	8108 <*ABS*+0x10@plt+0x1158>  // b.hs, b.nlast
    80c4:	bl	a6d0 <__lsan_do_recoverable_leak_check@@Base+0x544>
    80c8:	ldrb	w0, [x0, #21]
    80cc:	cmp	w0, #0x0
    80d0:	b.eq	80ec <*ABS*+0x10@plt+0x113c>  // b.none
    80d4:	ldr	x3, [sp, #128]
    80d8:	ldr	x2, [sp, #136]
    80dc:	ldr	x1, [sp, #184]
    80e0:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    80e4:	add	x0, x0, #0x730
    80e8:	bl	2a3fc <OnPrint@@Base+0x454>
    80ec:	mov	w4, #0x2                   	// #2
    80f0:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    80f4:	add	x3, x0, #0x748
    80f8:	ldr	x2, [sp, #16]
    80fc:	ldr	x1, [sp, #128]
    8100:	ldr	x0, [sp, #136]
    8104:	bl	76fc <*ABS*+0x10@plt+0x74c>
    8108:	ldr	x0, [sp, #184]
    810c:	add	x0, x0, #0x1
    8110:	str	x0, [sp, #184]
    8114:	b	8060 <*ABS*+0x10@plt+0x10b0>
    8118:	bl	a6d0 <__lsan_do_recoverable_leak_check@@Base+0x544>
    811c:	ldrb	w0, [x0, #21]
    8120:	cmp	w0, #0x0
    8124:	b.eq	8148 <*ABS*+0x10@plt+0x1198>  // b.none
    8128:	ldr	x1, [sp, #160]
    812c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    8130:	add	x0, x0, #0x750
    8134:	bl	2a3fc <OnPrint@@Base+0x454>
    8138:	b	8148 <*ABS*+0x10@plt+0x1198>
    813c:	nop
    8140:	b	8148 <*ABS*+0x10@plt+0x1198>
    8144:	nop
    8148:	ldr	x0, [sp, #200]
    814c:	add	x0, x0, #0x1
    8150:	str	x0, [sp, #200]
    8154:	b	7c1c <*ABS*+0x10@plt+0xc6c>
    8158:	add	x0, sp, #0x68
    815c:	bl	ae30 <__lsan_do_recoverable_leak_check@@Base+0xca4>
    8160:	nop
    8164:	ldp	x19, x30, [sp], #208
    8168:	ret
    816c:	str	x30, [sp, #-80]!
    8170:	str	x0, [sp, #56]
    8174:	str	x1, [sp, #48]
    8178:	str	x2, [sp, #40]
    817c:	str	x3, [sp, #32]
    8180:	strb	w4, [sp, #31]
    8184:	ldr	x0, [sp, #48]
    8188:	ldr	x0, [x0]
    818c:	ldr	x1, [sp, #40]
    8190:	bl	ae7c <__lsan_do_recoverable_leak_check@@Base+0xcf0>
    8194:	str	x0, [sp, #72]
    8198:	ldr	x0, [sp, #48]
    819c:	ldr	x1, [x0]
    81a0:	ldr	x0, [sp, #48]
    81a4:	ldr	x0, [x0, #8]
    81a8:	add	x0, x1, x0
    81ac:	mov	x1, x0
    81b0:	ldr	x0, [sp, #32]
    81b4:	bl	aeac <__lsan_do_recoverable_leak_check@@Base+0xd20>
    81b8:	str	x0, [sp, #64]
    81bc:	ldr	x1, [sp, #72]
    81c0:	ldr	x0, [sp, #64]
    81c4:	cmp	x1, x0
    81c8:	b.cs	8264 <*ABS*+0x10@plt+0x12b4>  // b.hs, b.nlast
    81cc:	bl	a6d0 <__lsan_do_recoverable_leak_check@@Base+0x544>
    81d0:	ldrb	w0, [x0, #20]
    81d4:	cmp	w0, #0x0
    81d8:	b.eq	8238 <*ABS*+0x10@plt+0x1288>  // b.none
    81dc:	ldr	x0, [sp, #48]
    81e0:	ldr	x6, [x0]
    81e4:	ldr	x0, [sp, #48]
    81e8:	ldr	x1, [x0]
    81ec:	ldr	x0, [sp, #48]
    81f0:	ldr	x0, [x0, #8]
    81f4:	add	x1, x1, x0
    81f8:	ldrb	w0, [sp, #31]
    81fc:	cmp	w0, #0x0
    8200:	b.eq	8210 <*ABS*+0x10@plt+0x1260>  // b.none
    8204:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    8208:	add	x0, x0, #0x778
    820c:	b	8218 <*ABS*+0x10@plt+0x1268>
    8210:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    8214:	add	x0, x0, #0x788
    8218:	mov	x5, x0
    821c:	ldr	x4, [sp, #32]
    8220:	ldr	x3, [sp, #40]
    8224:	mov	x2, x1
    8228:	mov	x1, x6
    822c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    8230:	add	x0, x0, #0x798
    8234:	bl	2a3fc <OnPrint@@Base+0x454>
    8238:	ldrb	w0, [sp, #31]
    823c:	cmp	w0, #0x0
    8240:	b.eq	8268 <*ABS*+0x10@plt+0x12b8>  // b.none
    8244:	mov	w4, #0x2                   	// #2
    8248:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    824c:	add	x3, x0, #0x7d8
    8250:	ldr	x2, [sp, #56]
    8254:	ldr	x1, [sp, #64]
    8258:	ldr	x0, [sp, #72]
    825c:	bl	76fc <*ABS*+0x10@plt+0x74c>
    8260:	b	8268 <*ABS*+0x10@plt+0x12b8>
    8264:	nop
    8268:	ldr	x30, [sp], #80
    826c:	ret
    8270:	stp	x19, x20, [sp, #-160]!
    8274:	str	x30, [sp, #16]
    8278:	str	x0, [sp, #40]
    827c:	str	x1, [sp, #32]
    8280:	add	x0, sp, #0x80
    8284:	mov	w1, #0x1                   	// #1
    8288:	bl	2aa20 <OnPrint@@Base+0xa78>
    828c:	add	x0, sp, #0x30
    8290:	mov	x2, #0x0                   	// #0
    8294:	mov	x1, #0x0                   	// #0
    8298:	bl	a5e0 <__lsan_do_recoverable_leak_check@@Base+0x454>
    829c:	add	x1, sp, #0x30
    82a0:	add	x0, sp, #0x80
    82a4:	bl	2b030 <OnPrint@@Base+0x1088>
    82a8:	and	w0, w0, #0xff
    82ac:	cmp	w0, #0x0
    82b0:	b.eq	82e4 <*ABS*+0x10@plt+0x1334>  // b.none
    82b4:	ldr	x19, [sp, #48]
    82b8:	ldr	x20, [sp, #56]
    82bc:	add	x0, sp, #0x30
    82c0:	bl	a630 <__lsan_do_recoverable_leak_check@@Base+0x4a4>
    82c4:	and	w0, w0, #0xff
    82c8:	mov	w4, w0
    82cc:	mov	x3, x20
    82d0:	mov	x2, x19
    82d4:	ldr	x1, [sp, #32]
    82d8:	ldr	x0, [sp, #40]
    82dc:	bl	816c <*ABS*+0x10@plt+0x11bc>
    82e0:	b	829c <*ABS*+0x10@plt+0x12ec>
    82e4:	add	x0, sp, #0x30
    82e8:	bl	a61c <__lsan_do_recoverable_leak_check@@Base+0x490>
    82ec:	add	x0, sp, #0x80
    82f0:	bl	2ab1c <OnPrint@@Base+0xb74>
    82f4:	nop
    82f8:	ldr	x30, [sp, #16]
    82fc:	ldp	x19, x20, [sp], #160
    8300:	ret
    8304:	str	x30, [sp, #-64]!
    8308:	str	x0, [sp, #24]
    830c:	bl	a6d0 <__lsan_do_recoverable_leak_check@@Base+0x544>
    8310:	ldrb	w0, [x0, #16]
    8314:	eor	w0, w0, #0x1
    8318:	and	w0, w0, #0xff
    831c:	cmp	w0, #0x0
    8320:	b.ne	83d8 <*ABS*+0x10@plt+0x1428>  // b.any
    8324:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    8328:	add	x0, x0, #0xd98
    832c:	ldr	x0, [x0]
    8330:	str	x0, [sp, #48]
    8334:	str	xzr, [sp, #40]
    8338:	ldr	x1, [sp, #48]
    833c:	ldr	x0, [sp, #40]
    8340:	cmp	x1, x0
    8344:	cset	w0, eq  // eq = none
    8348:	and	w0, w0, #0xff
    834c:	and	x0, x0, #0xff
    8350:	cmp	x0, #0x0
    8354:	b.eq	8378 <*ABS*+0x10@plt+0x13c8>  // b.none
    8358:	ldr	x4, [sp, #40]
    835c:	ldr	x3, [sp, #48]
    8360:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    8364:	add	x2, x0, #0x7e0
    8368:	mov	w1, #0x151                 	// #337
    836c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    8370:	add	x0, x0, #0x450
    8374:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    8378:	str	xzr, [sp, #56]
    837c:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    8380:	add	x0, x0, #0xd98
    8384:	ldr	x0, [x0]
    8388:	bl	aedc <__lsan_do_recoverable_leak_check@@Base+0xd50>
    838c:	mov	x1, x0
    8390:	ldr	x0, [sp, #56]
    8394:	cmp	x0, x1
    8398:	cset	w0, cc  // cc = lo, ul, last
    839c:	and	w0, w0, #0xff
    83a0:	cmp	w0, #0x0
    83a4:	b.eq	83dc <*ABS*+0x10@plt+0x142c>  // b.none
    83a8:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    83ac:	add	x0, x0, #0xd98
    83b0:	ldr	x0, [x0]
    83b4:	ldr	x1, [sp, #56]
    83b8:	bl	aef4 <__lsan_do_recoverable_leak_check@@Base+0xd68>
    83bc:	mov	x1, x0
    83c0:	ldr	x0, [sp, #24]
    83c4:	bl	8270 <*ABS*+0x10@plt+0x12c0>
    83c8:	ldr	x0, [sp, #56]
    83cc:	add	x0, x0, #0x1
    83d0:	str	x0, [sp, #56]
    83d4:	b	837c <*ABS*+0x10@plt+0x13cc>
    83d8:	nop
    83dc:	ldr	x30, [sp], #64
    83e0:	ret
    83e4:	str	x30, [sp, #-48]!
    83e8:	str	x0, [sp, #24]
    83ec:	str	w1, [sp, #20]
    83f0:	ldr	x0, [sp, #24]
    83f4:	bl	ae64 <__lsan_do_recoverable_leak_check@@Base+0xcd8>
    83f8:	cmp	x0, #0x0
    83fc:	cset	w0, ne  // ne = any
    8400:	and	w0, w0, #0xff
    8404:	cmp	w0, #0x0
    8408:	b.eq	8460 <*ABS*+0x10@plt+0x14b0>  // b.none
    840c:	ldr	x0, [sp, #24]
    8410:	bl	af70 <__lsan_do_recoverable_leak_check@@Base+0xde4>
    8414:	ldr	x0, [x0]
    8418:	str	x0, [sp, #40]
    841c:	ldr	x0, [sp, #24]
    8420:	bl	afec <__lsan_do_recoverable_leak_check@@Base+0xe60>
    8424:	add	x0, sp, #0x20
    8428:	ldr	x1, [sp, #40]
    842c:	bl	e858 <__sanitizer_print_stack_trace@@Base+0xda0>
    8430:	add	x0, sp, #0x20
    8434:	bl	e958 <__sanitizer_print_stack_trace@@Base+0xea0>
    8438:	mov	x1, x0
    843c:	ldr	x0, [sp, #40]
    8440:	add	x1, x1, x0
    8444:	ldr	w4, [sp, #20]
    8448:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    844c:	add	x3, x0, #0x7f8
    8450:	ldr	x2, [sp, #24]
    8454:	ldr	x0, [sp, #40]
    8458:	bl	76fc <*ABS*+0x10@plt+0x74c>
    845c:	b	83f0 <*ABS*+0x10@plt+0x1440>
    8460:	nop
    8464:	ldr	x30, [sp], #48
    8468:	ret
    846c:	str	x30, [sp, #-48]!
    8470:	str	x0, [sp, #24]
    8474:	str	x1, [sp, #16]
    8478:	ldr	x0, [sp, #24]
    847c:	bl	e844 <__sanitizer_print_stack_trace@@Base+0xd8c>
    8480:	str	x0, [sp, #24]
    8484:	add	x0, sp, #0x28
    8488:	ldr	x1, [sp, #24]
    848c:	bl	e858 <__sanitizer_print_stack_trace@@Base+0xda0>
    8490:	add	x0, sp, #0x28
    8494:	bl	e8d4 <__sanitizer_print_stack_trace@@Base+0xe1c>
    8498:	and	w0, w0, #0xff
    849c:	cmp	w0, #0x0
    84a0:	b.eq	84bc <*ABS*+0x10@plt+0x150c>  // b.none
    84a4:	add	x0, sp, #0x28
    84a8:	bl	e8fc <__sanitizer_print_stack_trace@@Base+0xe44>
    84ac:	cmp	w0, #0x2
    84b0:	b.eq	84bc <*ABS*+0x10@plt+0x150c>  // b.none
    84b4:	mov	w0, #0x1                   	// #1
    84b8:	b	84c0 <*ABS*+0x10@plt+0x1510>
    84bc:	mov	w0, #0x0                   	// #0
    84c0:	cmp	w0, #0x0
    84c4:	b.eq	84f4 <*ABS*+0x10@plt+0x1544>  // b.none
    84c8:	add	x0, sp, #0x28
    84cc:	bl	e958 <__sanitizer_print_stack_trace@@Base+0xea0>
    84d0:	mov	x1, x0
    84d4:	ldr	x0, [sp, #24]
    84d8:	add	x1, x1, x0
    84dc:	mov	w4, #0x1                   	// #1
    84e0:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    84e4:	add	x3, x0, #0x7f8
    84e8:	mov	x2, #0x0                   	// #0
    84ec:	ldr	x0, [sp, #24]
    84f0:	bl	76fc <*ABS*+0x10@plt+0x74c>
    84f4:	nop
    84f8:	ldr	x30, [sp], #48
    84fc:	ret
    8500:	stp	x19, x20, [sp, #-80]!
    8504:	str	x30, [sp, #16]
    8508:	str	x0, [sp, #40]
    850c:	str	x1, [sp, #32]
    8510:	ldr	x0, [sp, #32]
    8514:	str	x0, [sp, #72]
    8518:	str	xzr, [sp, #64]
    851c:	ldr	x1, [sp, #72]
    8520:	ldr	x0, [sp, #64]
    8524:	cmp	x1, x0
    8528:	cset	w0, eq  // eq = none
    852c:	and	w0, w0, #0xff
    8530:	and	x0, x0, #0xff
    8534:	cmp	x0, #0x0
    8538:	b.eq	855c <*ABS*+0x10@plt+0x15ac>  // b.none
    853c:	ldr	x4, [sp, #64]
    8540:	ldr	x3, [sp, #72]
    8544:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    8548:	add	x2, x0, #0x800
    854c:	mov	w1, #0x16f                 	// #367
    8550:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    8554:	add	x0, x0, #0x450
    8558:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    855c:	ldr	x0, [sp, #40]
    8560:	bl	e844 <__sanitizer_print_stack_trace@@Base+0xd8c>
    8564:	str	x0, [sp, #40]
    8568:	ldr	x1, [sp, #40]
    856c:	add	x0, sp, #0x38
    8570:	bl	e858 <__sanitizer_print_stack_trace@@Base+0xda0>
    8574:	add	x0, sp, #0x38
    8578:	bl	e8d4 <__sanitizer_print_stack_trace@@Base+0xe1c>
    857c:	and	w0, w0, #0xff
    8580:	cmp	w0, #0x0
    8584:	b.eq	85a0 <*ABS*+0x10@plt+0x15f0>  // b.none
    8588:	add	x0, sp, #0x38
    858c:	bl	e8fc <__sanitizer_print_stack_trace@@Base+0xe44>
    8590:	cmp	w0, #0x3
    8594:	b.ne	85a0 <*ABS*+0x10@plt+0x15f0>  // b.any
    8598:	mov	w0, #0x1                   	// #1
    859c:	b	85a4 <*ABS*+0x10@plt+0x15f4>
    85a0:	mov	w0, #0x0                   	// #0
    85a4:	cmp	w0, #0x0
    85a8:	b.eq	8600 <*ABS*+0x10@plt+0x1650>  // b.none
    85ac:	bl	a6d0 <__lsan_do_recoverable_leak_check@@Base+0x544>
    85b0:	ldrb	w0, [x0, #20]
    85b4:	cmp	w0, #0x0
    85b8:	b.eq	85f4 <*ABS*+0x10@plt+0x1644>  // b.none
    85bc:	ldr	x19, [sp, #40]
    85c0:	add	x0, sp, #0x38
    85c4:	bl	e958 <__sanitizer_print_stack_trace@@Base+0xea0>
    85c8:	mov	x1, x0
    85cc:	ldr	x0, [sp, #40]
    85d0:	add	x20, x1, x0
    85d4:	add	x0, sp, #0x38
    85d8:	bl	e958 <__sanitizer_print_stack_trace@@Base+0xea0>
    85dc:	mov	x3, x0
    85e0:	mov	x2, x20
    85e4:	mov	x1, x19
    85e8:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    85ec:	add	x0, x0, #0x810
    85f0:	bl	2a3fc <OnPrint@@Base+0x454>
    85f4:	ldr	x0, [sp, #32]
    85f8:	add	x1, sp, #0x28
    85fc:	bl	ad1c <__lsan_do_recoverable_leak_check@@Base+0xb90>
    8600:	nop
    8604:	ldr	x30, [sp, #16]
    8608:	ldp	x19, x20, [sp], #80
    860c:	ret
    8610:	str	x30, [sp, #-64]!
    8614:	str	w0, [sp, #28]
    8618:	str	x1, [sp, #16]
    861c:	ldr	w0, [sp, #28]
    8620:	str	x0, [sp, #56]
    8624:	str	xzr, [sp, #48]
    8628:	ldr	x1, [sp, #56]
    862c:	ldr	x0, [sp, #48]
    8630:	cmp	x1, x0
    8634:	cset	w0, eq  // eq = none
    8638:	and	w0, w0, #0xff
    863c:	and	x0, x0, #0xff
    8640:	cmp	x0, #0x0
    8644:	b.eq	8668 <*ABS*+0x10@plt+0x16b8>  // b.none
    8648:	ldr	x4, [sp, #48]
    864c:	ldr	x3, [sp, #56]
    8650:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    8654:	add	x2, x0, #0x838
    8658:	mov	w1, #0x17a                 	// #378
    865c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    8660:	add	x0, x0, #0x450
    8664:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    8668:	ldr	w1, [sp, #28]
    866c:	ldr	x0, [sp, #16]
    8670:	bl	2ba00 <OnPrint@@Base+0x1a58>
    8674:	stp	x0, x1, [sp, #32]
    8678:	ldr	w0, [sp, #40]
    867c:	cmp	w0, #0x1
    8680:	b.ls	8694 <*ABS*+0x10@plt+0x16e4>  // b.plast
    8684:	ldr	x0, [sp, #32]
    8688:	add	x0, x0, #0x8
    868c:	ldr	x0, [x0]
    8690:	b	8698 <*ABS*+0x10@plt+0x16e8>
    8694:	mov	x0, #0x0                   	// #0
    8698:	ldr	x30, [sp], #64
    869c:	ret
    86a0:	str	x30, [sp, #-80]!
    86a4:	str	x0, [sp, #24]
    86a8:	str	x1, [sp, #16]
    86ac:	ldr	x0, [sp, #16]
    86b0:	str	x0, [sp, #64]
    86b4:	str	xzr, [sp, #56]
    86b8:	ldr	x1, [sp, #64]
    86bc:	ldr	x0, [sp, #56]
    86c0:	cmp	x1, x0
    86c4:	cset	w0, eq  // eq = none
    86c8:	and	w0, w0, #0xff
    86cc:	and	x0, x0, #0xff
    86d0:	cmp	x0, #0x0
    86d4:	b.eq	86f8 <*ABS*+0x10@plt+0x1748>  // b.none
    86d8:	ldr	x4, [sp, #56]
    86dc:	ldr	x3, [sp, #64]
    86e0:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    86e4:	add	x2, x0, #0x800
    86e8:	mov	w1, #0x18b                 	// #395
    86ec:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    86f0:	add	x0, x0, #0x450
    86f4:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    86f8:	ldr	x0, [sp, #16]
    86fc:	str	x0, [sp, #48]
    8700:	ldr	x0, [sp, #24]
    8704:	bl	e844 <__sanitizer_print_stack_trace@@Base+0xd8c>
    8708:	str	x0, [sp, #24]
    870c:	ldr	x1, [sp, #24]
    8710:	add	x0, sp, #0x20
    8714:	bl	e858 <__sanitizer_print_stack_trace@@Base+0xda0>
    8718:	add	x0, sp, #0x20
    871c:	bl	e8d4 <__sanitizer_print_stack_trace@@Base+0xe1c>
    8720:	and	w0, w0, #0xff
    8724:	cmp	w0, #0x0
    8728:	b.eq	8754 <*ABS*+0x10@plt+0x17a4>  // b.none
    872c:	add	x0, sp, #0x20
    8730:	bl	e8fc <__sanitizer_print_stack_trace@@Base+0xe44>
    8734:	cmp	w0, #0x2
    8738:	b.eq	8754 <*ABS*+0x10@plt+0x17a4>  // b.none
    873c:	add	x0, sp, #0x20
    8740:	bl	e8fc <__sanitizer_print_stack_trace@@Base+0xe44>
    8744:	cmp	w0, #0x3
    8748:	b.eq	8754 <*ABS*+0x10@plt+0x17a4>  // b.none
    874c:	mov	w0, #0x1                   	// #1
    8750:	b	8758 <*ABS*+0x10@plt+0x17a8>
    8754:	mov	w0, #0x0                   	// #0
    8758:	cmp	w0, #0x0
    875c:	b.eq	8804 <*ABS*+0x10@plt+0x1854>  // b.none
    8760:	add	x0, sp, #0x20
    8764:	bl	e978 <__sanitizer_print_stack_trace@@Base+0xec0>
    8768:	str	w0, [sp, #44]
    876c:	str	xzr, [sp, #72]
    8770:	ldr	w0, [sp, #44]
    8774:	cmp	w0, #0x0
    8778:	b.eq	8794 <*ABS*+0x10@plt+0x17e4>  // b.none
    877c:	ldr	x0, [sp, #48]
    8780:	ldr	x0, [x0, #8]
    8784:	mov	x1, x0
    8788:	ldr	w0, [sp, #44]
    878c:	bl	8610 <*ABS*+0x10@plt+0x1660>
    8790:	str	x0, [sp, #72]
    8794:	ldr	x0, [sp, #72]
    8798:	cmp	x0, #0x0
    879c:	b.eq	87c8 <*ABS*+0x10@plt+0x1818>  // b.none
    87a0:	ldr	x0, [sp, #48]
    87a4:	ldrb	w0, [x0, #16]
    87a8:	cmp	w0, #0x0
    87ac:	b.eq	87d0 <*ABS*+0x10@plt+0x1820>  // b.none
    87b0:	bl	d3ac <__lsan_do_recoverable_leak_check@@Base+0x3220>
    87b4:	ldr	x1, [sp, #72]
    87b8:	bl	197d4 <__sancov_default_options@@Base+0x3638>
    87bc:	and	w0, w0, #0xff
    87c0:	cmp	w0, #0x0
    87c4:	b.eq	87d0 <*ABS*+0x10@plt+0x1820>  // b.none
    87c8:	mov	w0, #0x1                   	// #1
    87cc:	b	87d4 <*ABS*+0x10@plt+0x1824>
    87d0:	mov	w0, #0x0                   	// #0
    87d4:	cmp	w0, #0x0
    87d8:	b.eq	8804 <*ABS*+0x10@plt+0x1854>  // b.none
    87dc:	add	x0, sp, #0x20
    87e0:	mov	w1, #0x2                   	// #2
    87e4:	bl	e920 <__sanitizer_print_stack_trace@@Base+0xe68>
    87e8:	ldr	x0, [sp, #48]
    87ec:	ldr	x0, [x0]
    87f0:	mov	x2, x0
    87f4:	add	x0, sp, #0x18
    87f8:	mov	x1, x0
    87fc:	mov	x0, x2
    8800:	bl	ad1c <__lsan_do_recoverable_leak_check@@Base+0xb90>
    8804:	nop
    8808:	ldr	x30, [sp], #80
    880c:	ret
    8810:	str	x30, [sp, #-80]!
    8814:	str	x0, [sp, #24]
    8818:	add	x0, sp, #0x38
    881c:	bl	2b90c <OnPrint@@Base+0x1964>
    8820:	ldr	x0, [sp, #24]
    8824:	str	x0, [sp, #32]
    8828:	add	x0, sp, #0x38
    882c:	str	x0, [sp, #40]
    8830:	bl	a6d0 <__lsan_do_recoverable_leak_check@@Base+0x544>
    8834:	ldrb	w0, [x0, #15]
    8838:	cmp	w0, #0x0
    883c:	b.eq	8864 <*ABS*+0x10@plt+0x18b4>  // b.none
    8840:	bl	a6d0 <__lsan_do_recoverable_leak_check@@Base+0x544>
    8844:	ldrb	w0, [x0, #17]
    8848:	cmp	w0, #0x0
    884c:	b.eq	8864 <*ABS*+0x10@plt+0x18b4>  // b.none
    8850:	bl	d3ac <__lsan_do_recoverable_leak_check@@Base+0x3220>
    8854:	cmp	x0, #0x0
    8858:	b.eq	8864 <*ABS*+0x10@plt+0x18b4>  // b.none
    885c:	mov	w0, #0x1                   	// #1
    8860:	b	8868 <*ABS*+0x10@plt+0x18b8>
    8864:	mov	w0, #0x0                   	// #0
    8868:	strb	w0, [sp, #48]
    886c:	add	x0, sp, #0x20
    8870:	mov	x1, x0
    8874:	adrp	x0, 8000 <*ABS*+0x10@plt+0x1050>
    8878:	add	x0, x0, #0x6a0
    887c:	bl	e994 <__sanitizer_print_stack_trace@@Base+0xedc>
    8880:	add	x0, sp, #0x38
    8884:	bl	aa2c <__lsan_do_recoverable_leak_check@@Base+0x8a0>
    8888:	nop
    888c:	ldr	x30, [sp], #80
    8890:	ret
    8894:	str	x30, [sp, #-80]!
    8898:	str	x0, [sp, #24]
    889c:	add	x0, sp, #0x28
    88a0:	bl	b080 <__lsan_do_recoverable_leak_check@@Base+0xef4>
    88a4:	add	x0, sp, #0x28
    88a8:	mov	x1, x0
    88ac:	adrp	x0, 8000 <*ABS*+0x10@plt+0x1050>
    88b0:	add	x0, x0, #0x500
    88b4:	bl	e994 <__sanitizer_print_stack_trace@@Base+0xedc>
    88b8:	add	x0, sp, #0x28
    88bc:	bl	d36c <__lsan_do_recoverable_leak_check@@Base+0x31e0>
    88c0:	add	x0, sp, #0x28
    88c4:	mov	x1, x0
    88c8:	ldr	x0, [sp, #24]
    88cc:	bl	7bbc <*ABS*+0x10@plt+0xc0c>
    88d0:	add	x0, sp, #0x28
    88d4:	bl	8304 <*ABS*+0x10@plt+0x1354>
    88d8:	add	x0, sp, #0x28
    88dc:	mov	w1, #0x2                   	// #2
    88e0:	bl	83e4 <*ABS*+0x10@plt+0x1434>
    88e4:	str	xzr, [sp, #72]
    88e8:	add	x0, sp, #0x28
    88ec:	bl	ae64 <__lsan_do_recoverable_leak_check@@Base+0xcd8>
    88f0:	str	x0, [sp, #64]
    88f4:	ldr	x1, [sp, #72]
    88f8:	ldr	x0, [sp, #64]
    88fc:	cmp	x1, x0
    8900:	cset	w0, ne  // ne = any
    8904:	and	w0, w0, #0xff
    8908:	and	x0, x0, #0xff
    890c:	cmp	x0, #0x0
    8910:	b.eq	8934 <*ABS*+0x10@plt+0x1984>  // b.none
    8914:	ldr	x4, [sp, #64]
    8918:	ldr	x3, [sp, #72]
    891c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    8920:	add	x2, x0, #0x850
    8924:	mov	w1, #0x1c7                 	// #455
    8928:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    892c:	add	x0, x0, #0x450
    8930:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    8934:	add	x0, sp, #0x28
    8938:	bl	8810 <*ABS*+0x10@plt+0x1860>
    893c:	bl	a6d0 <__lsan_do_recoverable_leak_check@@Base+0x544>
    8940:	ldrb	w0, [x0, #20]
    8944:	cmp	w0, #0x0
    8948:	b.eq	8958 <*ABS*+0x10@plt+0x19a8>  // b.none
    894c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    8950:	add	x0, x0, #0x870
    8954:	bl	2a3fc <OnPrint@@Base+0x454>
    8958:	add	x0, sp, #0x28
    895c:	bl	d3bc <__lsan_do_recoverable_leak_check@@Base+0x3230>
    8960:	add	x0, sp, #0x28
    8964:	mov	w1, #0x2                   	// #2
    8968:	bl	83e4 <*ABS*+0x10@plt+0x1434>
    896c:	bl	a6d0 <__lsan_do_recoverable_leak_check@@Base+0x544>
    8970:	ldrb	w0, [x0, #20]
    8974:	cmp	w0, #0x0
    8978:	b.eq	8988 <*ABS*+0x10@plt+0x19d8>  // b.none
    897c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    8980:	add	x0, x0, #0x8a0
    8984:	bl	2a3fc <OnPrint@@Base+0x454>
    8988:	mov	x1, #0x0                   	// #0
    898c:	adrp	x0, 8000 <*ABS*+0x10@plt+0x1050>
    8990:	add	x0, x0, #0x46c
    8994:	bl	e994 <__sanitizer_print_stack_trace@@Base+0xedc>
    8998:	add	x0, sp, #0x28
    899c:	bl	ae30 <__lsan_do_recoverable_leak_check@@Base+0xca4>
    89a0:	nop
    89a4:	ldr	x30, [sp], #80
    89a8:	ret
    89ac:	str	x30, [sp, #-48]!
    89b0:	str	x0, [sp, #24]
    89b4:	str	x1, [sp, #16]
    89b8:	ldr	x0, [sp, #24]
    89bc:	bl	e844 <__sanitizer_print_stack_trace@@Base+0xd8c>
    89c0:	str	x0, [sp, #24]
    89c4:	add	x0, sp, #0x28
    89c8:	ldr	x1, [sp, #24]
    89cc:	bl	e858 <__sanitizer_print_stack_trace@@Base+0xda0>
    89d0:	add	x0, sp, #0x28
    89d4:	bl	e8d4 <__sanitizer_print_stack_trace@@Base+0xe1c>
    89d8:	and	w0, w0, #0xff
    89dc:	cmp	w0, #0x0
    89e0:	b.eq	89fc <*ABS*+0x10@plt+0x1a4c>  // b.none
    89e4:	add	x0, sp, #0x28
    89e8:	bl	e8fc <__sanitizer_print_stack_trace@@Base+0xe44>
    89ec:	cmp	w0, #0x3
    89f0:	b.eq	89fc <*ABS*+0x10@plt+0x1a4c>  // b.none
    89f4:	mov	w0, #0x1                   	// #1
    89f8:	b	8a00 <*ABS*+0x10@plt+0x1a50>
    89fc:	mov	w0, #0x0                   	// #0
    8a00:	cmp	w0, #0x0
    8a04:	b.eq	8a14 <*ABS*+0x10@plt+0x1a64>  // b.none
    8a08:	add	x0, sp, #0x28
    8a0c:	mov	w1, #0x0                   	// #0
    8a10:	bl	e920 <__sanitizer_print_stack_trace@@Base+0xe68>
    8a14:	nop
    8a18:	ldr	x30, [sp], #48
    8a1c:	ret
    8a20:	str	x30, [sp, #-64]!
    8a24:	str	w0, [sp, #28]
    8a28:	ldr	w0, [sp, #28]
    8a2c:	str	x0, [sp, #56]
    8a30:	str	xzr, [sp, #48]
    8a34:	ldr	x1, [sp, #56]
    8a38:	ldr	x0, [sp, #48]
    8a3c:	cmp	x1, x0
    8a40:	cset	w0, eq  // eq = none
    8a44:	and	w0, w0, #0xff
    8a48:	and	x0, x0, #0xff
    8a4c:	cmp	x0, #0x0
    8a50:	b.eq	8a74 <*ABS*+0x10@plt+0x1ac4>  // b.none
    8a54:	ldr	x4, [sp, #48]
    8a58:	ldr	x3, [sp, #56]
    8a5c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    8a60:	add	x2, x0, #0x8c0
    8a64:	mov	w1, #0x1e1                 	// #481
    8a68:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    8a6c:	add	x0, x0, #0x450
    8a70:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    8a74:	ldr	w0, [sp, #28]
    8a78:	bl	2b884 <OnPrint@@Base+0x18dc>
    8a7c:	stp	x0, x1, [sp, #32]
    8a80:	add	x0, sp, #0x20
    8a84:	bl	2d4a4 <OnPrint@@Base+0x34fc>
    8a88:	nop
    8a8c:	ldr	x30, [sp], #64
    8a90:	ret
    8a94:	stp	x19, x30, [sp, #-96]!
    8a98:	str	x0, [sp, #24]
    8a9c:	str	x1, [sp, #16]
    8aa0:	ldr	x0, [sp, #16]
    8aa4:	str	x0, [sp, #80]
    8aa8:	str	xzr, [sp, #72]
    8aac:	ldr	x1, [sp, #80]
    8ab0:	ldr	x0, [sp, #72]
    8ab4:	cmp	x1, x0
    8ab8:	cset	w0, eq  // eq = none
    8abc:	and	w0, w0, #0xff
    8ac0:	and	x0, x0, #0xff
    8ac4:	cmp	x0, #0x0
    8ac8:	b.eq	8aec <*ABS*+0x10@plt+0x1b3c>  // b.none
    8acc:	ldr	x4, [sp, #72]
    8ad0:	ldr	x3, [sp, #80]
    8ad4:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    8ad8:	add	x2, x0, #0x800
    8adc:	mov	w1, #0x1e8                 	// #488
    8ae0:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    8ae4:	add	x0, x0, #0x450
    8ae8:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    8aec:	ldr	x0, [sp, #16]
    8af0:	str	x0, [sp, #64]
    8af4:	ldr	x0, [sp, #24]
    8af8:	bl	e844 <__sanitizer_print_stack_trace@@Base+0xd8c>
    8afc:	str	x0, [sp, #24]
    8b00:	add	x0, sp, #0x30
    8b04:	ldr	x1, [sp, #24]
    8b08:	bl	e858 <__sanitizer_print_stack_trace@@Base+0xda0>
    8b0c:	add	x0, sp, #0x30
    8b10:	bl	e8d4 <__sanitizer_print_stack_trace@@Base+0xe1c>
    8b14:	and	w0, w0, #0xff
    8b18:	eor	w0, w0, #0x1
    8b1c:	and	w0, w0, #0xff
    8b20:	cmp	w0, #0x0
    8b24:	b.ne	8be4 <*ABS*+0x10@plt+0x1c34>  // b.any
    8b28:	add	x0, sp, #0x30
    8b2c:	bl	e8fc <__sanitizer_print_stack_trace@@Base+0xe44>
    8b30:	cmp	w0, #0x0
    8b34:	b.eq	8b48 <*ABS*+0x10@plt+0x1b98>  // b.none
    8b38:	add	x0, sp, #0x30
    8b3c:	bl	e8fc <__sanitizer_print_stack_trace@@Base+0xe44>
    8b40:	cmp	w0, #0x1
    8b44:	b.ne	8b50 <*ABS*+0x10@plt+0x1ba0>  // b.any
    8b48:	mov	w0, #0x1                   	// #1
    8b4c:	b	8b54 <*ABS*+0x10@plt+0x1ba4>
    8b50:	mov	w0, #0x0                   	// #0
    8b54:	cmp	w0, #0x0
    8b58:	b.eq	8be8 <*ABS*+0x10@plt+0x1c38>  // b.none
    8b5c:	bl	a6d0 <__lsan_do_recoverable_leak_check@@Base+0x544>
    8b60:	ldr	w0, [x0, #4]
    8b64:	str	w0, [sp, #60]
    8b68:	str	wzr, [sp, #92]
    8b6c:	ldr	w0, [sp, #60]
    8b70:	cmp	w0, #0x0
    8b74:	b.eq	8ba8 <*ABS*+0x10@plt+0x1bf8>  // b.none
    8b78:	add	x0, sp, #0x30
    8b7c:	bl	e978 <__sanitizer_print_stack_trace@@Base+0xec0>
    8b80:	bl	2b884 <OnPrint@@Base+0x18dc>
    8b84:	stp	x0, x1, [sp, #32]
    8b88:	ldr	w0, [sp, #40]
    8b8c:	ldr	w1, [sp, #60]
    8b90:	bl	b0a0 <__lsan_do_recoverable_leak_check@@Base+0xf14>
    8b94:	str	w0, [sp, #40]
    8b98:	ldp	x0, x1, [sp, #32]
    8b9c:	bl	2b814 <OnPrint@@Base+0x186c>
    8ba0:	str	w0, [sp, #92]
    8ba4:	b	8bb4 <*ABS*+0x10@plt+0x1c04>
    8ba8:	add	x0, sp, #0x30
    8bac:	bl	e978 <__sanitizer_print_stack_trace@@Base+0xec0>
    8bb0:	str	w0, [sp, #92]
    8bb4:	add	x0, sp, #0x30
    8bb8:	bl	e958 <__sanitizer_print_stack_trace@@Base+0xea0>
    8bbc:	mov	x19, x0
    8bc0:	add	x0, sp, #0x30
    8bc4:	bl	e8fc <__sanitizer_print_stack_trace@@Base+0xe44>
    8bc8:	mov	w4, w0
    8bcc:	mov	x3, x19
    8bd0:	ldr	w2, [sp, #92]
    8bd4:	ldr	x1, [sp, #24]
    8bd8:	ldr	x0, [sp, #64]
    8bdc:	bl	9420 <*ABS*+0x10@plt+0x2470>
    8be0:	b	8be8 <*ABS*+0x10@plt+0x1c38>
    8be4:	nop
    8be8:	ldp	x19, x30, [sp], #96
    8bec:	ret
    8bf0:	stp	x19, x20, [sp, #-80]!
    8bf4:	str	x30, [sp, #16]
    8bf8:	add	x0, sp, #0x28
    8bfc:	bl	b0d0 <__lsan_do_recoverable_leak_check@@Base+0xf44>
    8c00:	bl	7530 <*ABS*+0x10@plt+0x580>
    8c04:	mov	x2, x0
    8c08:	add	x0, sp, #0x28
    8c0c:	mov	x1, x0
    8c10:	mov	x0, x2
    8c14:	bl	3120c <__sanitizer_get_module_and_offset_for_pc@@Base+0x35fc>
    8c18:	add	x0, sp, #0x28
    8c1c:	bl	b10c <__lsan_do_recoverable_leak_check@@Base+0xf80>
    8c20:	cmp	x0, #0x0
    8c24:	cset	w0, eq  // eq = none
    8c28:	and	w0, w0, #0xff
    8c2c:	cmp	w0, #0x0
    8c30:	b.eq	8c3c <*ABS*+0x10@plt+0x1c8c>  // b.none
    8c34:	mov	w19, #0x0                   	// #0
    8c38:	b	8d18 <*ABS*+0x10@plt+0x1d68>
    8c3c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    8c40:	add	x0, x0, #0x8e0
    8c44:	str	x0, [sp, #64]
    8c48:	ldr	x1, [sp, #64]
    8c4c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    8c50:	add	x0, x0, #0x918
    8c54:	bl	2a350 <OnPrint@@Base+0x3a8>
    8c58:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    8c5c:	add	x0, x0, #0x920
    8c60:	bl	2a350 <OnPrint@@Base+0x3a8>
    8c64:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    8c68:	add	x0, x0, #0x938
    8c6c:	bl	2a350 <OnPrint@@Base+0x3a8>
    8c70:	str	xzr, [sp, #72]
    8c74:	add	x0, sp, #0x28
    8c78:	bl	b10c <__lsan_do_recoverable_leak_check@@Base+0xf80>
    8c7c:	mov	x1, x0
    8c80:	ldr	x0, [sp, #72]
    8c84:	cmp	x0, x1
    8c88:	cset	w0, cc  // cc = lo, ul, last
    8c8c:	and	w0, w0, #0xff
    8c90:	cmp	w0, #0x0
    8c94:	b.eq	8d04 <*ABS*+0x10@plt+0x1d54>  // b.none
    8c98:	add	x0, sp, #0x28
    8c9c:	ldr	x1, [sp, #72]
    8ca0:	bl	b124 <__lsan_do_recoverable_leak_check@@Base+0xf98>
    8ca4:	ldr	x0, [x0]
    8ca8:	add	x0, x0, #0x10
    8cac:	bl	b1a0 <__lsan_do_recoverable_leak_check@@Base+0x1014>
    8cb0:	mov	w19, w0
    8cb4:	add	x0, sp, #0x28
    8cb8:	ldr	x1, [sp, #72]
    8cbc:	bl	b124 <__lsan_do_recoverable_leak_check@@Base+0xf98>
    8cc0:	ldr	x0, [x0]
    8cc4:	ldr	x20, [x0, #24]
    8cc8:	add	x0, sp, #0x28
    8ccc:	ldr	x1, [sp, #72]
    8cd0:	bl	b124 <__lsan_do_recoverable_leak_check@@Base+0xf98>
    8cd4:	ldr	x0, [x0]
    8cd8:	ldr	x0, [x0, #8]
    8cdc:	mov	x3, x0
    8ce0:	mov	x2, x20
    8ce4:	mov	x1, x19
    8ce8:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    8cec:	add	x0, x0, #0x958
    8cf0:	bl	2a350 <OnPrint@@Base+0x3a8>
    8cf4:	ldr	x0, [sp, #72]
    8cf8:	add	x0, x0, #0x1
    8cfc:	str	x0, [sp, #72]
    8d00:	b	8c74 <*ABS*+0x10@plt+0x1cc4>
    8d04:	ldr	x1, [sp, #64]
    8d08:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    8d0c:	add	x0, x0, #0x968
    8d10:	bl	2a350 <OnPrint@@Base+0x3a8>
    8d14:	mov	w19, #0x1                   	// #1
    8d18:	add	x0, sp, #0x28
    8d1c:	bl	b0f0 <__lsan_do_recoverable_leak_check@@Base+0xf64>
    8d20:	cmp	w19, #0x1
    8d24:	ldr	x30, [sp, #16]
    8d28:	ldp	x19, x20, [sp], #80
    8d2c:	ret
    8d30:	stp	x19, x30, [sp, #-64]!
    8d34:	str	x0, [sp, #24]
    8d38:	str	x1, [sp, #16]
    8d3c:	ldr	x0, [sp, #16]
    8d40:	str	x0, [sp, #56]
    8d44:	ldr	x0, [sp, #24]
    8d48:	ldr	w0, [x0, #112]
    8d4c:	cmp	w0, #0x2
    8d50:	b.ne	8de8 <*ABS*+0x10@plt+0x1e38>  // b.any
    8d54:	ldr	x0, [sp, #56]
    8d58:	bl	b1bc <__lsan_do_recoverable_leak_check@@Base+0x1030>
    8d5c:	mov	x1, x0
    8d60:	ldr	x0, [sp, #24]
    8d64:	add	x0, x0, #0x20
    8d68:	mov	w4, w19
    8d6c:	mov	x3, x0
    8d70:	mov	x2, x1
    8d74:	mov	x1, #0x0                   	// #0
    8d78:	ldr	x0, [sp, #56]
    8d7c:	bl	b1d4 <__lsan_do_recoverable_leak_check@@Base+0x1048>
    8d80:	str	x0, [sp, #48]
    8d84:	ldr	x0, [sp, #56]
    8d88:	bl	b1bc <__lsan_do_recoverable_leak_check@@Base+0x1030>
    8d8c:	mov	x1, x0
    8d90:	ldr	x0, [sp, #48]
    8d94:	cmp	x0, x1
    8d98:	b.cs	8dbc <*ABS*+0x10@plt+0x1e0c>  // b.hs, b.nlast
    8d9c:	ldr	x0, [sp, #56]
    8da0:	ldr	x1, [sp, #48]
    8da4:	bl	b274 <__lsan_do_recoverable_leak_check@@Base+0x10e8>
    8da8:	ldr	x1, [x0]
    8dac:	ldr	x0, [sp, #24]
    8db0:	ldr	x0, [x0, #32]
    8db4:	cmp	x1, x0
    8db8:	b.eq	8dc4 <*ABS*+0x10@plt+0x1e14>  // b.none
    8dbc:	mov	w0, #0x1                   	// #1
    8dc0:	b	8dc8 <*ABS*+0x10@plt+0x1e18>
    8dc4:	mov	w0, #0x0                   	// #0
    8dc8:	cmp	w0, #0x0
    8dcc:	b.eq	8de8 <*ABS*+0x10@plt+0x1e38>  // b.none
    8dd0:	ldr	x0, [sp, #24]
    8dd4:	ldr	x0, [x0, #32]
    8dd8:	mov	x1, x0
    8ddc:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    8de0:	add	x0, x0, #0x970
    8de4:	bl	2a3fc <OnPrint@@Base+0x454>
    8de8:	nop
    8dec:	ldp	x19, x30, [sp], #64
    8df0:	ret
    8df4:	stp	x19, x20, [sp, #-80]!
    8df8:	stp	x21, x30, [sp, #16]
    8dfc:	str	x0, [sp, #40]
    8e00:	ldr	x0, [sp, #40]
    8e04:	ldr	x0, [x0]
    8e08:	add	x0, x0, #0x10
    8e0c:	ldr	x1, [x0]
    8e10:	ldr	x0, [sp, #40]
    8e14:	blr	x1
    8e18:	mov	x1, x0
    8e1c:	add	x0, sp, #0x30
    8e20:	bl	b2f0 <__lsan_do_recoverable_leak_check@@Base+0x1164>
    8e24:	str	xzr, [sp, #72]
    8e28:	ldr	x0, [sp, #40]
    8e2c:	ldr	x0, [x0]
    8e30:	add	x0, x0, #0x10
    8e34:	ldr	x1, [x0]
    8e38:	ldr	x0, [sp, #40]
    8e3c:	blr	x1
    8e40:	mov	x1, x0
    8e44:	ldr	x0, [sp, #72]
    8e48:	cmp	x0, x1
    8e4c:	cset	w0, cc  // cc = lo, ul, last
    8e50:	and	w0, w0, #0xff
    8e54:	cmp	w0, #0x0
    8e58:	b.eq	8e9c <*ABS*+0x10@plt+0x1eec>  // b.none
    8e5c:	ldr	x0, [sp, #40]
    8e60:	ldr	x0, [x0]
    8e64:	add	x0, x0, #0x18
    8e68:	ldr	x19, [x0]
    8e6c:	add	x0, sp, #0x30
    8e70:	ldr	x1, [sp, #72]
    8e74:	bl	b33c <__lsan_do_recoverable_leak_check@@Base+0x11b0>
    8e78:	mov	x20, x0
    8e7c:	ldr	x1, [sp, #72]
    8e80:	ldr	x0, [sp, #40]
    8e84:	blr	x19
    8e88:	str	x0, [x20]
    8e8c:	ldr	x0, [sp, #72]
    8e90:	add	x0, x0, #0x1
    8e94:	str	x0, [sp, #72]
    8e98:	b	8e28 <*ABS*+0x10@plt+0x1e78>
    8e9c:	add	x0, sp, #0x30
    8ea0:	bl	b3b8 <__lsan_do_recoverable_leak_check@@Base+0x122c>
    8ea4:	mov	x19, x0
    8ea8:	add	x0, sp, #0x30
    8eac:	bl	b1bc <__lsan_do_recoverable_leak_check@@Base+0x1030>
    8eb0:	mov	w2, w21
    8eb4:	mov	x1, x0
    8eb8:	mov	x0, x19
    8ebc:	bl	b3d0 <__lsan_do_recoverable_leak_check@@Base+0x1244>
    8ec0:	bl	16000 <__interceptor_sigaction@@Base+0xa98>
    8ec4:	mov	x3, x0
    8ec8:	add	x0, sp, #0x30
    8ecc:	mov	x2, x0
    8ed0:	adrp	x0, 8000 <*ABS*+0x10@plt+0x1050>
    8ed4:	add	x1, x0, #0xd30
    8ed8:	mov	x0, x3
    8edc:	bl	3664c <__sanitizer_set_death_callback@@Base+0x9ac>
    8ee0:	add	x0, sp, #0x30
    8ee4:	bl	b320 <__lsan_do_recoverable_leak_check@@Base+0x1194>
    8ee8:	nop
    8eec:	ldp	x21, x30, [sp, #16]
    8ef0:	ldp	x19, x20, [sp], #80
    8ef4:	ret
    8ef8:	str	x30, [sp, #-80]!
    8efc:	str	x0, [sp, #24]
    8f00:	str	x1, [sp, #16]
    8f04:	ldr	x0, [sp, #16]
    8f08:	str	x0, [sp, #72]
    8f0c:	ldr	x0, [sp, #72]
    8f10:	str	x0, [sp, #64]
    8f14:	str	xzr, [sp, #56]
    8f18:	ldr	x1, [sp, #64]
    8f1c:	ldr	x0, [sp, #56]
    8f20:	cmp	x1, x0
    8f24:	cset	w0, eq  // eq = none
    8f28:	and	w0, w0, #0xff
    8f2c:	and	x0, x0, #0xff
    8f30:	cmp	x0, #0x0
    8f34:	b.eq	8f58 <*ABS*+0x10@plt+0x1fa8>  // b.none
    8f38:	ldr	x4, [sp, #56]
    8f3c:	ldr	x3, [sp, #64]
    8f40:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    8f44:	add	x2, x0, #0x9b0
    8f48:	mov	w1, #0x22b                 	// #555
    8f4c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    8f50:	add	x0, x0, #0x450
    8f54:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    8f58:	ldr	x0, [sp, #72]
    8f5c:	ldrb	w0, [x0]
    8f60:	eor	w0, w0, #0x1
    8f64:	and	w0, w0, #0xff
    8f68:	and	x0, x0, #0xff
    8f6c:	str	x0, [sp, #48]
    8f70:	str	xzr, [sp, #40]
    8f74:	ldr	x1, [sp, #48]
    8f78:	ldr	x0, [sp, #40]
    8f7c:	cmp	x1, x0
    8f80:	cset	w0, eq  // eq = none
    8f84:	and	w0, w0, #0xff
    8f88:	and	x0, x0, #0xff
    8f8c:	cmp	x0, #0x0
    8f90:	b.eq	8fb4 <*ABS*+0x10@plt+0x2004>  // b.none
    8f94:	ldr	x4, [sp, #40]
    8f98:	ldr	x3, [sp, #48]
    8f9c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    8fa0:	add	x2, x0, #0x9c8
    8fa4:	mov	w1, #0x22c                 	// #556
    8fa8:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    8fac:	add	x0, x0, #0x450
    8fb0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    8fb4:	ldr	x0, [sp, #24]
    8fb8:	bl	8df4 <*ABS*+0x10@plt+0x1e44>
    8fbc:	ldr	x0, [sp, #24]
    8fc0:	bl	8894 <*ABS*+0x10@plt+0x18e4>
    8fc4:	ldr	x0, [sp, #72]
    8fc8:	add	x0, x0, #0x8
    8fcc:	mov	x1, x0
    8fd0:	adrp	x0, 8000 <*ABS*+0x10@plt+0x1050>
    8fd4:	add	x0, x0, #0xa94
    8fd8:	bl	e994 <__sanitizer_print_stack_trace@@Base+0xedc>
    8fdc:	mov	x1, #0x0                   	// #0
    8fe0:	adrp	x0, 8000 <*ABS*+0x10@plt+0x1050>
    8fe4:	add	x0, x0, #0x9ac
    8fe8:	bl	e994 <__sanitizer_print_stack_trace@@Base+0xedc>
    8fec:	ldr	x0, [sp, #72]
    8ff0:	mov	w1, #0x1                   	// #1
    8ff4:	strb	w1, [x0]
    8ff8:	nop
    8ffc:	ldr	x30, [sp], #80
    9000:	ret
    9004:	stp	x19, x30, [sp, #-96]!
    9008:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
    900c:	ldr	x0, [x0, #3712]
    9010:	cmp	x0, #0x0
    9014:	b.eq	902c <*ABS*+0x10@plt+0x207c>  // b.none
    9018:	bl	6bf0 <__lsan_is_turned_off@plt>
    901c:	cmp	w0, #0x0
    9020:	b.eq	902c <*ABS*+0x10@plt+0x207c>  // b.none
    9024:	mov	w0, #0x1                   	// #1
    9028:	b	9030 <*ABS*+0x10@plt+0x2080>
    902c:	mov	w0, #0x0                   	// #0
    9030:	cmp	w0, #0x0
    9034:	b.eq	9040 <*ABS*+0x10@plt+0x2090>  // b.none
    9038:	mov	w19, #0x0                   	// #0
    903c:	b	9180 <*ABS*+0x10@plt+0x21d0>
    9040:	bl	15e84 <__interceptor_sigaction@@Base+0x91c>
    9044:	add	x0, sp, #0x18
    9048:	bl	aa74 <__lsan_do_recoverable_leak_check@@Base+0x8e8>
    904c:	strb	wzr, [sp, #24]
    9050:	bl	15fc0 <__interceptor_sigaction@@Base+0xa58>
    9054:	bl	e6a0 <__sanitizer_print_stack_trace@@Base+0xbe8>
    9058:	add	x0, sp, #0x18
    905c:	mov	x1, x0
    9060:	adrp	x0, 8000 <*ABS*+0x10@plt+0x1050>
    9064:	add	x0, x0, #0xef8
    9068:	bl	d440 <__lsan_do_recoverable_leak_check@@Base+0x32b4>
    906c:	bl	e6bc <__sanitizer_print_stack_trace@@Base+0xc04>
    9070:	bl	15fe0 <__interceptor_sigaction@@Base+0xa78>
    9074:	ldrb	w0, [sp, #24]
    9078:	eor	w0, w0, #0x1
    907c:	and	w0, w0, #0xff
    9080:	cmp	w0, #0x0
    9084:	b.eq	90b0 <*ABS*+0x10@plt+0x2100>  // b.none
    9088:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    908c:	add	x0, x0, #0x9e8
    9090:	bl	2a3fc <OnPrint@@Base+0x454>
    9094:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    9098:	add	x0, x0, #0xa18
    909c:	bl	2a3fc <OnPrint@@Base+0x454>
    90a0:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    90a4:	add	x0, x0, #0xa78
    90a8:	bl	2a3fc <OnPrint@@Base+0x454>
    90ac:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
    90b0:	add	x0, sp, #0x18
    90b4:	add	x0, x0, #0x8
    90b8:	bl	9c14 <*ABS*+0x10@plt+0x2c64>
    90bc:	add	x0, sp, #0x18
    90c0:	add	x0, x0, #0x8
    90c4:	bl	9d14 <*ABS*+0x10@plt+0x2d64>
    90c8:	str	x0, [sp, #88]
    90cc:	ldr	x0, [sp, #88]
    90d0:	cmp	x0, #0x0
    90d4:	b.eq	9140 <*ABS*+0x10@plt+0x2190>  // b.none
    90d8:	add	x0, sp, #0x10
    90dc:	bl	a9e0 <__lsan_do_recoverable_leak_check@@Base+0x854>
    90e0:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    90e4:	add	x0, x0, #0xac0
    90e8:	bl	2a350 <OnPrint@@Base+0x3a8>
    90ec:	add	x0, sp, #0x10
    90f0:	bl	a9fc <__lsan_do_recoverable_leak_check@@Base+0x870>
    90f4:	mov	x1, x0
    90f8:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    90fc:	add	x0, x0, #0xb08
    9100:	bl	2a350 <OnPrint@@Base+0x3a8>
    9104:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    9108:	add	x0, x0, #0xb10
    910c:	bl	2a3fc <OnPrint@@Base+0x454>
    9110:	add	x0, sp, #0x10
    9114:	bl	a944 <__lsan_do_recoverable_leak_check@@Base+0x7b8>
    9118:	mov	x1, x0
    911c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    9120:	add	x0, x0, #0xb08
    9124:	bl	2a350 <OnPrint@@Base+0x3a8>
    9128:	bl	a6d0 <__lsan_do_recoverable_leak_check@@Base+0x544>
    912c:	ldr	w0, [x0, #8]
    9130:	sxtw	x1, w0
    9134:	add	x0, sp, #0x18
    9138:	add	x0, x0, #0x8
    913c:	bl	96d4 <*ABS*+0x10@plt+0x2724>
    9140:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
    9144:	ldrb	w0, [x0, #177]
    9148:	cmp	w0, #0x0
    914c:	b.eq	9154 <*ABS*+0x10@plt+0x21a4>  // b.none
    9150:	bl	8bf0 <*ABS*+0x10@plt+0x1c40>
    9154:	ldr	x0, [sp, #88]
    9158:	cmp	x0, #0x0
    915c:	b.eq	9174 <*ABS*+0x10@plt+0x21c4>  // b.none
    9160:	add	x0, sp, #0x18
    9164:	add	x0, x0, #0x8
    9168:	bl	9aac <*ABS*+0x10@plt+0x2afc>
    916c:	mov	w19, #0x1                   	// #1
    9170:	b	9178 <*ABS*+0x10@plt+0x21c8>
    9174:	mov	w19, #0x0                   	// #0
    9178:	add	x0, sp, #0x18
    917c:	bl	aa94 <__lsan_do_recoverable_leak_check@@Base+0x908>
    9180:	mov	w0, w19
    9184:	ldp	x19, x30, [sp], #96
    9188:	ret
    918c:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    9190:	add	x0, x0, #0xdd8
    9194:	ldrb	w0, [x0]
    9198:	ret
    919c:	stp	x19, x30, [sp, #-32]!
    91a0:	add	x2, sp, #0x18
    91a4:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    91a8:	add	x1, x0, #0xcc0
    91ac:	mov	x0, x2
    91b0:	bl	b658 <__lsan_do_recoverable_leak_check@@Base+0x14cc>
    91b4:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    91b8:	add	x0, x0, #0xdd9
    91bc:	ldrb	w0, [x0]
    91c0:	cmp	w0, #0x0
    91c4:	b.eq	91d0 <*ABS*+0x10@plt+0x2220>  // b.none
    91c8:	mov	w19, #0x0                   	// #0
    91cc:	b	9210 <*ABS*+0x10@plt+0x2260>
    91d0:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    91d4:	add	x0, x0, #0xdd9
    91d8:	mov	w1, #0x1                   	// #1
    91dc:	strb	w1, [x0]
    91e0:	bl	9004 <*ABS*+0x10@plt+0x2054>
    91e4:	and	w1, w0, #0xff
    91e8:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    91ec:	add	x0, x0, #0xdd8
    91f0:	strb	w1, [x0]
    91f4:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    91f8:	add	x0, x0, #0xdd8
    91fc:	ldrb	w0, [x0]
    9200:	cmp	w0, #0x0
    9204:	b.eq	920c <*ABS*+0x10@plt+0x225c>  // b.none
    9208:	bl	d3d0 <__lsan_do_recoverable_leak_check@@Base+0x3244>
    920c:	mov	w19, #0x1                   	// #1
    9210:	add	x0, sp, #0x18
    9214:	bl	b688 <__lsan_do_recoverable_leak_check@@Base+0x14fc>
    9218:	cmp	w19, #0x1
    921c:	ldp	x19, x30, [sp], #32
    9220:	ret
    9224:	stp	x19, x30, [sp, #-32]!
    9228:	add	x2, sp, #0x10
    922c:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    9230:	add	x1, x0, #0xcc0
    9234:	mov	x0, x2
    9238:	bl	b658 <__lsan_do_recoverable_leak_check@@Base+0x14cc>
    923c:	bl	9004 <*ABS*+0x10@plt+0x2054>
    9240:	strb	w0, [sp, #31]
    9244:	ldrb	w0, [sp, #31]
    9248:	cmp	w0, #0x0
    924c:	b.eq	9258 <*ABS*+0x10@plt+0x22a8>  // b.none
    9250:	mov	w19, #0x1                   	// #1
    9254:	b	925c <*ABS*+0x10@plt+0x22ac>
    9258:	mov	w19, #0x0                   	// #0
    925c:	add	x0, sp, #0x10
    9260:	bl	b688 <__lsan_do_recoverable_leak_check@@Base+0x14fc>
    9264:	mov	w0, w19
    9268:	ldp	x19, x30, [sp], #32
    926c:	ret
    9270:	str	x30, [sp, #-16]!
    9274:	bl	9224 <*ABS*+0x10@plt+0x2274>
    9278:	nop
    927c:	ldr	x30, [sp], #16
    9280:	ret
    9284:	str	x30, [sp, #-80]!
    9288:	str	x0, [sp, #24]
    928c:	str	xzr, [sp, #40]
    9290:	bl	7530 <*ABS*+0x10@plt+0x580>
    9294:	str	x0, [sp, #64]
    9298:	bl	3289c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c8c>
    929c:	ldr	x1, [sp, #24]
    92a0:	bl	a658 <__lsan_do_recoverable_leak_check@@Base+0x4cc>
    92a4:	str	x0, [sp, #56]
    92a8:	ldr	x0, [sp, #56]
    92ac:	cmp	x0, #0x0
    92b0:	b.eq	92e4 <*ABS*+0x10@plt+0x2334>  // b.none
    92b4:	add	x0, sp, #0x28
    92b8:	mov	x3, x0
    92bc:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    92c0:	add	x2, x0, #0x408
    92c4:	ldr	x1, [sp, #56]
    92c8:	ldr	x0, [sp, #64]
    92cc:	bl	30c98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3088>
    92d0:	and	w0, w0, #0xff
    92d4:	cmp	w0, #0x0
    92d8:	b.eq	92e4 <*ABS*+0x10@plt+0x2334>  // b.none
    92dc:	ldr	x0, [sp, #40]
    92e0:	b	9394 <*ABS*+0x10@plt+0x23e4>
    92e4:	bl	3289c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c8c>
    92e8:	ldr	x1, [sp, #24]
    92ec:	bl	32b94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f84>
    92f0:	str	x0, [sp, #48]
    92f4:	ldr	x0, [sp, #48]
    92f8:	str	x0, [sp, #72]
    92fc:	ldr	x0, [sp, #72]
    9300:	cmp	x0, #0x0
    9304:	b.eq	9388 <*ABS*+0x10@plt+0x23d8>  // b.none
    9308:	ldr	x0, [sp, #72]
    930c:	ldr	x1, [x0, #40]
    9310:	add	x0, sp, #0x28
    9314:	mov	x3, x0
    9318:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    931c:	add	x2, x0, #0x408
    9320:	ldr	x0, [sp, #64]
    9324:	bl	30c98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3088>
    9328:	and	w0, w0, #0xff
    932c:	cmp	w0, #0x0
    9330:	b.ne	9360 <*ABS*+0x10@plt+0x23b0>  // b.any
    9334:	ldr	x0, [sp, #72]
    9338:	ldr	x1, [x0, #56]
    933c:	add	x0, sp, #0x28
    9340:	mov	x3, x0
    9344:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    9348:	add	x2, x0, #0x408
    934c:	ldr	x0, [sp, #64]
    9350:	bl	30c98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3088>
    9354:	and	w0, w0, #0xff
    9358:	cmp	w0, #0x0
    935c:	b.eq	9368 <*ABS*+0x10@plt+0x23b8>  // b.none
    9360:	mov	w0, #0x1                   	// #1
    9364:	b	936c <*ABS*+0x10@plt+0x23bc>
    9368:	mov	w0, #0x0                   	// #0
    936c:	cmp	w0, #0x0
    9370:	b.ne	9384 <*ABS*+0x10@plt+0x23d4>  // b.any
    9374:	ldr	x0, [sp, #72]
    9378:	ldr	x0, [x0]
    937c:	str	x0, [sp, #72]
    9380:	b	92fc <*ABS*+0x10@plt+0x234c>
    9384:	nop
    9388:	ldr	x0, [sp, #48]
    938c:	bl	31908 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3cf8>
    9390:	ldr	x0, [sp, #40]
    9394:	ldr	x30, [sp], #80
    9398:	ret
    939c:	str	x30, [sp, #-80]!
    93a0:	str	w0, [sp, #28]
    93a4:	ldr	w0, [sp, #28]
    93a8:	bl	2b884 <OnPrint@@Base+0x18dc>
    93ac:	stp	x0, x1, [sp, #40]
    93b0:	str	xzr, [sp, #72]
    93b4:	ldr	w0, [sp, #48]
    93b8:	mov	w0, w0
    93bc:	ldr	x1, [sp, #72]
    93c0:	cmp	x1, x0
    93c4:	b.cs	9414 <*ABS*+0x10@plt+0x2464>  // b.hs, b.nlast
    93c8:	ldr	x1, [sp, #40]
    93cc:	ldr	x0, [sp, #72]
    93d0:	lsl	x0, x0, #3
    93d4:	add	x0, x1, x0
    93d8:	ldr	x0, [x0]
    93dc:	str	x0, [sp, #56]
    93e0:	ldr	x0, [sp, #56]
    93e4:	sub	x0, x0, #0x4
    93e8:	bl	9284 <*ABS*+0x10@plt+0x22d4>
    93ec:	str	x0, [sp, #64]
    93f0:	ldr	x0, [sp, #64]
    93f4:	cmp	x0, #0x0
    93f8:	b.eq	9404 <*ABS*+0x10@plt+0x2454>  // b.none
    93fc:	ldr	x0, [sp, #64]
    9400:	b	9418 <*ABS*+0x10@plt+0x2468>
    9404:	ldr	x0, [sp, #72]
    9408:	add	x0, x0, #0x1
    940c:	str	x0, [sp, #72]
    9410:	b	93b4 <*ABS*+0x10@plt+0x2404>
    9414:	mov	x0, #0x0                   	// #0
    9418:	ldr	x30, [sp], #80
    941c:	ret
    9420:	str	x30, [sp, #-144]!
    9424:	str	x0, [sp, #40]
    9428:	str	x1, [sp, #32]
    942c:	str	w2, [sp, #28]
    9430:	str	x3, [sp, #16]
    9434:	str	w4, [sp, #24]
    9438:	ldr	w0, [sp, #24]
    943c:	cmp	w0, #0x0
    9440:	b.eq	9450 <*ABS*+0x10@plt+0x24a0>  // b.none
    9444:	ldr	w0, [sp, #24]
    9448:	cmp	w0, #0x1
    944c:	b.ne	9458 <*ABS*+0x10@plt+0x24a8>  // b.any
    9450:	mov	w0, #0x1                   	// #1
    9454:	b	945c <*ABS*+0x10@plt+0x24ac>
    9458:	mov	w0, #0x0                   	// #0
    945c:	and	x0, x0, #0xff
    9460:	str	x0, [sp, #128]
    9464:	str	xzr, [sp, #120]
    9468:	ldr	x1, [sp, #128]
    946c:	ldr	x0, [sp, #120]
    9470:	cmp	x1, x0
    9474:	cset	w0, eq  // eq = none
    9478:	and	w0, w0, #0xff
    947c:	and	x0, x0, #0xff
    9480:	cmp	x0, #0x0
    9484:	b.eq	94a8 <*ABS*+0x10@plt+0x24f8>  // b.none
    9488:	ldr	x4, [sp, #120]
    948c:	ldr	x3, [sp, #128]
    9490:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    9494:	add	x2, x0, #0xb48
    9498:	mov	w1, #0x29f                 	// #671
    949c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    94a0:	add	x0, x0, #0x450
    94a4:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    94a8:	ldr	w0, [sp, #24]
    94ac:	cmp	w0, #0x0
    94b0:	cset	w0, eq  // eq = none
    94b4:	strb	w0, [sp, #119]
    94b8:	str	xzr, [sp, #136]
    94bc:	ldr	x0, [sp, #40]
    94c0:	add	x0, x0, #0x8
    94c4:	bl	b6a8 <__lsan_do_recoverable_leak_check@@Base+0x151c>
    94c8:	mov	x1, x0
    94cc:	ldr	x0, [sp, #136]
    94d0:	cmp	x0, x1
    94d4:	cset	w0, cc  // cc = lo, ul, last
    94d8:	and	w0, w0, #0xff
    94dc:	cmp	w0, #0x0
    94e0:	b.eq	9588 <*ABS*+0x10@plt+0x25d8>  // b.none
    94e4:	ldr	x0, [sp, #40]
    94e8:	add	x0, x0, #0x8
    94ec:	ldr	x1, [sp, #136]
    94f0:	bl	b6c0 <__lsan_do_recoverable_leak_check@@Base+0x1534>
    94f4:	ldr	w0, [x0, #24]
    94f8:	ldr	w1, [sp, #28]
    94fc:	cmp	w1, w0
    9500:	b.ne	952c <*ABS*+0x10@plt+0x257c>  // b.any
    9504:	ldr	x0, [sp, #40]
    9508:	add	x0, x0, #0x8
    950c:	ldr	x1, [sp, #136]
    9510:	bl	b6c0 <__lsan_do_recoverable_leak_check@@Base+0x1534>
    9514:	ldrb	w0, [x0, #28]
    9518:	ldrb	w1, [sp, #119]
    951c:	cmp	w1, w0
    9520:	b.ne	952c <*ABS*+0x10@plt+0x257c>  // b.any
    9524:	mov	w0, #0x1                   	// #1
    9528:	b	9530 <*ABS*+0x10@plt+0x2580>
    952c:	mov	w0, #0x0                   	// #0
    9530:	cmp	w0, #0x0
    9534:	b.eq	9578 <*ABS*+0x10@plt+0x25c8>  // b.none
    9538:	ldr	x0, [sp, #40]
    953c:	add	x0, x0, #0x8
    9540:	ldr	x1, [sp, #136]
    9544:	bl	b6c0 <__lsan_do_recoverable_leak_check@@Base+0x1534>
    9548:	ldr	x1, [x0, #8]
    954c:	add	x1, x1, #0x1
    9550:	str	x1, [x0, #8]
    9554:	ldr	x0, [sp, #40]
    9558:	add	x0, x0, #0x8
    955c:	ldr	x1, [sp, #136]
    9560:	bl	b6c0 <__lsan_do_recoverable_leak_check@@Base+0x1534>
    9564:	ldr	x2, [x0, #16]
    9568:	ldr	x1, [sp, #16]
    956c:	add	x1, x2, x1
    9570:	str	x1, [x0, #16]
    9574:	b	9588 <*ABS*+0x10@plt+0x25d8>
    9578:	ldr	x0, [sp, #136]
    957c:	add	x0, x0, #0x1
    9580:	str	x0, [sp, #136]
    9584:	b	94bc <*ABS*+0x10@plt+0x250c>
    9588:	ldr	x0, [sp, #40]
    958c:	add	x0, x0, #0x8
    9590:	bl	b6a8 <__lsan_do_recoverable_leak_check@@Base+0x151c>
    9594:	mov	x1, x0
    9598:	ldr	x0, [sp, #136]
    959c:	cmp	x0, x1
    95a0:	cset	w0, eq  // eq = none
    95a4:	and	w0, w0, #0xff
    95a8:	cmp	w0, #0x0
    95ac:	b.eq	9628 <*ABS*+0x10@plt+0x2678>  // b.none
    95b0:	ldr	x0, [sp, #40]
    95b4:	add	x0, x0, #0x8
    95b8:	bl	b6a8 <__lsan_do_recoverable_leak_check@@Base+0x151c>
    95bc:	mov	x1, x0
    95c0:	mov	x0, #0x1388                	// #5000
    95c4:	cmp	x1, x0
    95c8:	cset	w0, eq  // eq = none
    95cc:	and	w0, w0, #0xff
    95d0:	cmp	w0, #0x0
    95d4:	b.ne	9674 <*ABS*+0x10@plt+0x26c4>  // b.any
    95d8:	stp	xzr, xzr, [sp, #56]
    95dc:	stp	xzr, xzr, [sp, #72]
    95e0:	mov	x0, #0x1                   	// #1
    95e4:	str	x0, [sp, #64]
    95e8:	ldr	x0, [sp, #40]
    95ec:	ldr	w0, [x0]
    95f0:	add	w2, w0, #0x1
    95f4:	ldr	x1, [sp, #40]
    95f8:	str	w2, [x1]
    95fc:	str	w0, [sp, #56]
    9600:	ldr	x0, [sp, #16]
    9604:	str	x0, [sp, #72]
    9608:	ldr	w0, [sp, #28]
    960c:	str	w0, [sp, #80]
    9610:	ldrb	w0, [sp, #119]
    9614:	strb	w0, [sp, #84]
    9618:	ldr	x0, [sp, #40]
    961c:	add	x0, x0, #0x8
    9620:	add	x1, sp, #0x38
    9624:	bl	b73c <__lsan_do_recoverable_leak_check@@Base+0x15b0>
    9628:	bl	a6d0 <__lsan_do_recoverable_leak_check@@Base+0x544>
    962c:	ldrb	w0, [x0]
    9630:	cmp	w0, #0x0
    9634:	b.eq	9678 <*ABS*+0x10@plt+0x26c8>  // b.none
    9638:	ldr	x0, [sp, #40]
    963c:	add	x0, x0, #0x8
    9640:	ldr	x1, [sp, #136]
    9644:	bl	b6c0 <__lsan_do_recoverable_leak_check@@Base+0x1534>
    9648:	ldr	w0, [x0]
    964c:	str	w0, [sp, #88]
    9650:	ldr	x0, [sp, #32]
    9654:	str	x0, [sp, #96]
    9658:	ldr	x0, [sp, #16]
    965c:	str	x0, [sp, #104]
    9660:	ldr	x0, [sp, #40]
    9664:	add	x0, x0, #0x20
    9668:	add	x1, sp, #0x58
    966c:	bl	b820 <__lsan_do_recoverable_leak_check@@Base+0x1694>
    9670:	b	9678 <*ABS*+0x10@plt+0x26c8>
    9674:	nop
    9678:	ldr	x30, [sp], #144
    967c:	ret
    9680:	sub	sp, sp, #0x10
    9684:	str	x0, [sp, #8]
    9688:	str	x1, [sp]
    968c:	ldr	x0, [sp, #8]
    9690:	ldrb	w1, [x0, #28]
    9694:	ldr	x0, [sp]
    9698:	ldrb	w0, [x0, #28]
    969c:	cmp	w1, w0
    96a0:	b.ne	96c4 <*ABS*+0x10@plt+0x2714>  // b.any
    96a4:	ldr	x0, [sp, #8]
    96a8:	ldr	x1, [x0, #16]
    96ac:	ldr	x0, [sp]
    96b0:	ldr	x0, [x0, #16]
    96b4:	cmp	x1, x0
    96b8:	cset	w0, hi  // hi = pmore
    96bc:	and	w0, w0, #0xff
    96c0:	b	96cc <*ABS*+0x10@plt+0x271c>
    96c4:	ldr	x0, [sp, #8]
    96c8:	ldrb	w0, [x0, #28]
    96cc:	add	sp, sp, #0x10
    96d0:	ret
    96d4:	stp	x19, x30, [sp, #-80]!
    96d8:	str	x0, [sp, #24]
    96dc:	str	x1, [sp, #16]
    96e0:	ldr	x0, [sp, #24]
    96e4:	add	x0, x0, #0x8
    96e8:	bl	b6a8 <__lsan_do_recoverable_leak_check@@Base+0x151c>
    96ec:	mov	x1, x0
    96f0:	mov	x0, #0x1388                	// #5000
    96f4:	cmp	x1, x0
    96f8:	cset	w0, ls  // ls = plast
    96fc:	and	w0, w0, #0xff
    9700:	and	x0, x0, #0xff
    9704:	str	x0, [sp, #56]
    9708:	str	xzr, [sp, #48]
    970c:	ldr	x1, [sp, #56]
    9710:	ldr	x0, [sp, #48]
    9714:	cmp	x1, x0
    9718:	cset	w0, eq  // eq = none
    971c:	and	w0, w0, #0xff
    9720:	and	x0, x0, #0xff
    9724:	cmp	x0, #0x0
    9728:	b.eq	974c <*ABS*+0x10@plt+0x279c>  // b.none
    972c:	ldr	x4, [sp, #48]
    9730:	ldr	x3, [sp, #56]
    9734:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    9738:	add	x2, x0, #0xb88
    973c:	mov	w1, #0x2be                 	// #702
    9740:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    9744:	add	x0, x0, #0x450
    9748:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    974c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    9750:	add	x0, x0, #0xbb8
    9754:	bl	2a350 <OnPrint@@Base+0x3a8>
    9758:	ldr	x0, [sp, #24]
    975c:	add	x0, x0, #0x8
    9760:	bl	b6a8 <__lsan_do_recoverable_leak_check@@Base+0x151c>
    9764:	mov	x1, x0
    9768:	mov	x0, #0x1388                	// #5000
    976c:	cmp	x1, x0
    9770:	cset	w0, eq  // eq = none
    9774:	and	w0, w0, #0xff
    9778:	cmp	w0, #0x0
    977c:	b.eq	9790 <*ABS*+0x10@plt+0x27e0>  // b.none
    9780:	mov	x1, #0x1388                	// #5000
    9784:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    9788:	add	x0, x0, #0xbc0
    978c:	bl	2a350 <OnPrint@@Base+0x3a8>
    9790:	ldr	x0, [sp, #24]
    9794:	bl	9d14 <*ABS*+0x10@plt+0x2d64>
    9798:	str	x0, [sp, #40]
    979c:	ldr	x0, [sp, #16]
    97a0:	cmp	x0, #0x0
    97a4:	b.eq	97c8 <*ABS*+0x10@plt+0x2818>  // b.none
    97a8:	ldr	x1, [sp, #16]
    97ac:	ldr	x0, [sp, #40]
    97b0:	cmp	x1, x0
    97b4:	b.cs	97c8 <*ABS*+0x10@plt+0x2818>  // b.hs, b.nlast
    97b8:	ldr	x1, [sp, #16]
    97bc:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    97c0:	add	x0, x0, #0xc08
    97c4:	bl	2a350 <OnPrint@@Base+0x3a8>
    97c8:	ldr	x0, [sp, #24]
    97cc:	add	x0, x0, #0x8
    97d0:	bl	b910 <__lsan_do_recoverable_leak_check@@Base+0x1784>
    97d4:	mov	x19, x0
    97d8:	ldr	x0, [sp, #24]
    97dc:	add	x0, x0, #0x8
    97e0:	bl	b6a8 <__lsan_do_recoverable_leak_check@@Base+0x151c>
    97e4:	mov	x1, x0
    97e8:	adrp	x0, 9000 <*ABS*+0x10@plt+0x2050>
    97ec:	add	x2, x0, #0x680
    97f0:	mov	x0, x19
    97f4:	bl	b928 <__lsan_do_recoverable_leak_check@@Base+0x179c>
    97f8:	str	xzr, [sp, #72]
    97fc:	str	xzr, [sp, #64]
    9800:	ldr	x0, [sp, #24]
    9804:	add	x0, x0, #0x8
    9808:	bl	b6a8 <__lsan_do_recoverable_leak_check@@Base+0x151c>
    980c:	mov	x1, x0
    9810:	ldr	x0, [sp, #64]
    9814:	cmp	x0, x1
    9818:	cset	w0, cc  // cc = lo, ul, last
    981c:	and	w0, w0, #0xff
    9820:	cmp	w0, #0x0
    9824:	b.eq	9888 <*ABS*+0x10@plt+0x28d8>  // b.none
    9828:	ldr	x0, [sp, #24]
    982c:	add	x0, x0, #0x8
    9830:	ldr	x1, [sp, #64]
    9834:	bl	b6c0 <__lsan_do_recoverable_leak_check@@Base+0x1534>
    9838:	ldrb	w0, [x0, #29]
    983c:	cmp	w0, #0x0
    9840:	b.ne	9870 <*ABS*+0x10@plt+0x28c0>  // b.any
    9844:	ldr	x1, [sp, #64]
    9848:	ldr	x0, [sp, #24]
    984c:	bl	98c4 <*ABS*+0x10@plt+0x2914>
    9850:	ldr	x0, [sp, #72]
    9854:	add	x0, x0, #0x1
    9858:	str	x0, [sp, #72]
    985c:	ldr	x1, [sp, #72]
    9860:	ldr	x0, [sp, #16]
    9864:	cmp	x1, x0
    9868:	b.eq	9884 <*ABS*+0x10@plt+0x28d4>  // b.none
    986c:	b	9874 <*ABS*+0x10@plt+0x28c4>
    9870:	nop
    9874:	ldr	x0, [sp, #64]
    9878:	add	x0, x0, #0x1
    987c:	str	x0, [sp, #64]
    9880:	b	9800 <*ABS*+0x10@plt+0x2850>
    9884:	nop
    9888:	ldr	x1, [sp, #72]
    988c:	ldr	x0, [sp, #40]
    9890:	cmp	x1, x0
    9894:	b.cs	98b8 <*ABS*+0x10@plt+0x2908>  // b.hs, b.nlast
    9898:	ldr	x1, [sp, #40]
    989c:	ldr	x0, [sp, #72]
    98a0:	sub	x0, x1, x0
    98a4:	str	x0, [sp, #32]
    98a8:	ldr	x1, [sp, #32]
    98ac:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    98b0:	add	x0, x0, #0xc20
    98b4:	bl	2a350 <OnPrint@@Base+0x3a8>
    98b8:	nop
    98bc:	ldp	x19, x30, [sp], #80
    98c0:	ret
    98c4:	stp	x19, x20, [sp, #-64]!
    98c8:	str	x30, [sp, #16]
    98cc:	str	x0, [sp, #40]
    98d0:	str	x1, [sp, #32]
    98d4:	add	x0, sp, #0x38
    98d8:	bl	a9e0 <__lsan_do_recoverable_leak_check@@Base+0x854>
    98dc:	add	x0, sp, #0x38
    98e0:	bl	aa14 <__lsan_do_recoverable_leak_check@@Base+0x888>
    98e4:	mov	x1, x0
    98e8:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    98ec:	add	x0, x0, #0xb08
    98f0:	bl	2a350 <OnPrint@@Base+0x3a8>
    98f4:	ldr	x0, [sp, #40]
    98f8:	add	x0, x0, #0x8
    98fc:	ldr	x1, [sp, #32]
    9900:	bl	b6c0 <__lsan_do_recoverable_leak_check@@Base+0x1534>
    9904:	ldrb	w0, [x0, #28]
    9908:	cmp	w0, #0x0
    990c:	b.eq	991c <*ABS*+0x10@plt+0x296c>  // b.none
    9910:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    9914:	add	x19, x0, #0xc40
    9918:	b	9924 <*ABS*+0x10@plt+0x2974>
    991c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    9920:	add	x19, x0, #0xc48
    9924:	ldr	x0, [sp, #40]
    9928:	add	x0, x0, #0x8
    992c:	ldr	x1, [sp, #32]
    9930:	bl	b6c0 <__lsan_do_recoverable_leak_check@@Base+0x1534>
    9934:	ldr	x20, [x0, #16]
    9938:	ldr	x0, [sp, #40]
    993c:	add	x0, x0, #0x8
    9940:	ldr	x1, [sp, #32]
    9944:	bl	b6c0 <__lsan_do_recoverable_leak_check@@Base+0x1534>
    9948:	ldr	x0, [x0, #8]
    994c:	mov	x3, x0
    9950:	mov	x2, x20
    9954:	mov	x1, x19
    9958:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    995c:	add	x0, x0, #0xc58
    9960:	bl	2a350 <OnPrint@@Base+0x3a8>
    9964:	add	x0, sp, #0x38
    9968:	bl	a944 <__lsan_do_recoverable_leak_check@@Base+0x7b8>
    996c:	mov	x1, x0
    9970:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    9974:	add	x0, x0, #0xb08
    9978:	bl	2a350 <OnPrint@@Base+0x3a8>
    997c:	ldr	x0, [sp, #40]
    9980:	add	x0, x0, #0x8
    9984:	ldr	x1, [sp, #32]
    9988:	bl	b6c0 <__lsan_do_recoverable_leak_check@@Base+0x1534>
    998c:	ldr	w0, [x0, #24]
    9990:	bl	8a20 <*ABS*+0x10@plt+0x1a70>
    9994:	bl	a6d0 <__lsan_do_recoverable_leak_check@@Base+0x544>
    9998:	ldrb	w0, [x0]
    999c:	cmp	w0, #0x0
    99a0:	b.eq	99c8 <*ABS*+0x10@plt+0x2a18>  // b.none
    99a4:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    99a8:	add	x0, x0, #0xc98
    99ac:	bl	2a350 <OnPrint@@Base+0x3a8>
    99b0:	ldr	x1, [sp, #32]
    99b4:	ldr	x0, [sp, #40]
    99b8:	bl	99d8 <*ABS*+0x10@plt+0x2a28>
    99bc:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    99c0:	add	x0, x0, #0xbb8
    99c4:	bl	2a350 <OnPrint@@Base+0x3a8>
    99c8:	nop
    99cc:	ldr	x30, [sp, #16]
    99d0:	ldp	x19, x20, [sp], #64
    99d4:	ret
    99d8:	stp	x19, x30, [sp, #-48]!
    99dc:	str	x0, [sp, #24]
    99e0:	str	x1, [sp, #16]
    99e4:	ldr	x0, [sp, #24]
    99e8:	add	x0, x0, #0x8
    99ec:	ldr	x1, [sp, #16]
    99f0:	bl	b6c0 <__lsan_do_recoverable_leak_check@@Base+0x1534>
    99f4:	ldr	w0, [x0]
    99f8:	str	w0, [sp, #36]
    99fc:	str	xzr, [sp, #40]
    9a00:	ldr	x0, [sp, #24]
    9a04:	add	x0, x0, #0x20
    9a08:	bl	bbb0 <__lsan_do_recoverable_leak_check@@Base+0x1a24>
    9a0c:	mov	x1, x0
    9a10:	ldr	x0, [sp, #40]
    9a14:	cmp	x0, x1
    9a18:	cset	w0, cc  // cc = lo, ul, last
    9a1c:	and	w0, w0, #0xff
    9a20:	cmp	w0, #0x0
    9a24:	b.eq	9aa0 <*ABS*+0x10@plt+0x2af0>  // b.none
    9a28:	ldr	x0, [sp, #24]
    9a2c:	add	x0, x0, #0x20
    9a30:	ldr	x1, [sp, #40]
    9a34:	bl	bbc8 <__lsan_do_recoverable_leak_check@@Base+0x1a3c>
    9a38:	ldr	w0, [x0]
    9a3c:	ldr	w1, [sp, #36]
    9a40:	cmp	w1, w0
    9a44:	cset	w0, eq  // eq = none
    9a48:	and	w0, w0, #0xff
    9a4c:	cmp	w0, #0x0
    9a50:	b.eq	9a90 <*ABS*+0x10@plt+0x2ae0>  // b.none
    9a54:	ldr	x0, [sp, #24]
    9a58:	add	x0, x0, #0x20
    9a5c:	ldr	x1, [sp, #40]
    9a60:	bl	bbc8 <__lsan_do_recoverable_leak_check@@Base+0x1a3c>
    9a64:	ldr	x19, [x0, #8]
    9a68:	ldr	x0, [sp, #24]
    9a6c:	add	x0, x0, #0x20
    9a70:	ldr	x1, [sp, #40]
    9a74:	bl	bbc8 <__lsan_do_recoverable_leak_check@@Base+0x1a3c>
    9a78:	ldr	x0, [x0, #16]
    9a7c:	mov	x2, x0
    9a80:	mov	x1, x19
    9a84:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    9a88:	add	x0, x0, #0xcb0
    9a8c:	bl	2a350 <OnPrint@@Base+0x3a8>
    9a90:	ldr	x0, [sp, #40]
    9a94:	add	x0, x0, #0x1
    9a98:	str	x0, [sp, #40]
    9a9c:	b	9a00 <*ABS*+0x10@plt+0x2a50>
    9aa0:	nop
    9aa4:	ldp	x19, x30, [sp], #48
    9aa8:	ret
    9aac:	str	x30, [sp, #-112]!
    9ab0:	str	x0, [sp, #24]
    9ab4:	ldr	x0, [sp, #24]
    9ab8:	add	x0, x0, #0x8
    9abc:	bl	b6a8 <__lsan_do_recoverable_leak_check@@Base+0x151c>
    9ac0:	mov	x1, x0
    9ac4:	mov	x0, #0x1388                	// #5000
    9ac8:	cmp	x1, x0
    9acc:	cset	w0, ls  // ls = plast
    9ad0:	and	w0, w0, #0xff
    9ad4:	and	x0, x0, #0xff
    9ad8:	str	x0, [sp, #80]
    9adc:	str	xzr, [sp, #72]
    9ae0:	ldr	x1, [sp, #80]
    9ae4:	ldr	x0, [sp, #72]
    9ae8:	cmp	x1, x0
    9aec:	cset	w0, eq  // eq = none
    9af0:	and	w0, w0, #0xff
    9af4:	and	x0, x0, #0xff
    9af8:	cmp	x0, #0x0
    9afc:	b.eq	9b20 <*ABS*+0x10@plt+0x2b70>  // b.none
    9b00:	ldr	x4, [sp, #72]
    9b04:	ldr	x3, [sp, #80]
    9b08:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    9b0c:	add	x2, x0, #0xb88
    9b10:	mov	w1, #0x2f1                 	// #753
    9b14:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    9b18:	add	x0, x0, #0x450
    9b1c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    9b20:	str	xzr, [sp, #104]
    9b24:	str	xzr, [sp, #96]
    9b28:	str	xzr, [sp, #88]
    9b2c:	ldr	x0, [sp, #24]
    9b30:	add	x0, x0, #0x8
    9b34:	bl	b6a8 <__lsan_do_recoverable_leak_check@@Base+0x151c>
    9b38:	mov	x1, x0
    9b3c:	ldr	x0, [sp, #88]
    9b40:	cmp	x0, x1
    9b44:	cset	w0, cc  // cc = lo, ul, last
    9b48:	and	w0, w0, #0xff
    9b4c:	cmp	w0, #0x0
    9b50:	b.eq	9bc8 <*ABS*+0x10@plt+0x2c18>  // b.none
    9b54:	ldr	x0, [sp, #24]
    9b58:	add	x0, x0, #0x8
    9b5c:	ldr	x1, [sp, #88]
    9b60:	bl	b6c0 <__lsan_do_recoverable_leak_check@@Base+0x1534>
    9b64:	ldrb	w0, [x0, #29]
    9b68:	cmp	w0, #0x0
    9b6c:	b.ne	9bb4 <*ABS*+0x10@plt+0x2c04>  // b.any
    9b70:	ldr	x0, [sp, #24]
    9b74:	add	x0, x0, #0x8
    9b78:	ldr	x1, [sp, #88]
    9b7c:	bl	b6c0 <__lsan_do_recoverable_leak_check@@Base+0x1534>
    9b80:	ldr	x0, [x0, #16]
    9b84:	ldr	x1, [sp, #104]
    9b88:	add	x0, x1, x0
    9b8c:	str	x0, [sp, #104]
    9b90:	ldr	x0, [sp, #24]
    9b94:	add	x0, x0, #0x8
    9b98:	ldr	x1, [sp, #88]
    9b9c:	bl	b6c0 <__lsan_do_recoverable_leak_check@@Base+0x1534>
    9ba0:	ldr	x0, [x0, #8]
    9ba4:	ldr	x1, [sp, #96]
    9ba8:	add	x0, x1, x0
    9bac:	str	x0, [sp, #96]
    9bb0:	b	9bb8 <*ABS*+0x10@plt+0x2c08>
    9bb4:	nop
    9bb8:	ldr	x0, [sp, #88]
    9bbc:	add	x0, x0, #0x1
    9bc0:	str	x0, [sp, #88]
    9bc4:	b	9b2c <*ABS*+0x10@plt+0x2b7c>
    9bc8:	add	x0, sp, #0x28
    9bcc:	mov	x1, #0x400                 	// #1024
    9bd0:	bl	a584 <__lsan_do_recoverable_leak_check@@Base+0x3f8>
    9bd4:	add	x4, sp, #0x28
    9bd8:	ldr	x3, [sp, #96]
    9bdc:	ldr	x2, [sp, #104]
    9be0:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    9be4:	add	x1, x0, #0xcc0
    9be8:	mov	x0, x4
    9bec:	bl	2a564 <OnPrint@@Base+0x5bc>
    9bf0:	add	x0, sp, #0x28
    9bf4:	bl	bc50 <__lsan_do_recoverable_leak_check@@Base+0x1ac4>
    9bf8:	mov	x1, #0x0                   	// #0
    9bfc:	bl	19414 <__sancov_default_options@@Base+0x3278>
    9c00:	add	x0, sp, #0x28
    9c04:	bl	aab4 <__lsan_do_recoverable_leak_check@@Base+0x928>
    9c08:	nop
    9c0c:	ldr	x30, [sp], #112
    9c10:	ret
    9c14:	stp	x19, x20, [sp, #-64]!
    9c18:	str	x30, [sp, #16]
    9c1c:	str	x0, [sp, #40]
    9c20:	str	xzr, [sp, #56]
    9c24:	ldr	x0, [sp, #40]
    9c28:	add	x0, x0, #0x8
    9c2c:	bl	b6a8 <__lsan_do_recoverable_leak_check@@Base+0x151c>
    9c30:	mov	x1, x0
    9c34:	ldr	x0, [sp, #56]
    9c38:	cmp	x0, x1
    9c3c:	cset	w0, cc  // cc = lo, ul, last
    9c40:	and	w0, w0, #0xff
    9c44:	cmp	w0, #0x0
    9c48:	b.eq	9d04 <*ABS*+0x10@plt+0x2d54>  // b.none
    9c4c:	ldr	x0, [sp, #40]
    9c50:	add	x0, x0, #0x8
    9c54:	ldr	x1, [sp, #56]
    9c58:	bl	b6c0 <__lsan_do_recoverable_leak_check@@Base+0x1534>
    9c5c:	ldr	w0, [x0, #24]
    9c60:	bl	939c <*ABS*+0x10@plt+0x23ec>
    9c64:	str	x0, [sp, #48]
    9c68:	ldr	x0, [sp, #48]
    9c6c:	cmp	x0, #0x0
    9c70:	b.eq	9cf4 <*ABS*+0x10@plt+0x2d44>  // b.none
    9c74:	ldr	x0, [sp, #40]
    9c78:	add	x0, x0, #0x8
    9c7c:	ldr	x1, [sp, #56]
    9c80:	bl	b6c0 <__lsan_do_recoverable_leak_check@@Base+0x1534>
    9c84:	ldr	x1, [x0, #16]
    9c88:	ldr	x0, [sp, #48]
    9c8c:	ldr	x0, [x0, #24]
    9c90:	add	x1, x1, x0
    9c94:	ldr	x0, [sp, #48]
    9c98:	str	x1, [x0, #24]
    9c9c:	ldr	x0, [sp, #48]
    9ca0:	add	x19, x0, #0x10
    9ca4:	ldr	x0, [sp, #48]
    9ca8:	add	x0, x0, #0x10
    9cac:	bl	b1a0 <__lsan_do_recoverable_leak_check@@Base+0x1014>
    9cb0:	mov	w20, w0
    9cb4:	ldr	x0, [sp, #40]
    9cb8:	add	x0, x0, #0x8
    9cbc:	ldr	x1, [sp, #56]
    9cc0:	bl	b6c0 <__lsan_do_recoverable_leak_check@@Base+0x1534>
    9cc4:	ldr	x0, [x0, #8]
    9cc8:	add	w0, w20, w0
    9ccc:	mov	w1, w0
    9cd0:	mov	x0, x19
    9cd4:	bl	bc68 <__lsan_do_recoverable_leak_check@@Base+0x1adc>
    9cd8:	ldr	x0, [sp, #40]
    9cdc:	add	x0, x0, #0x8
    9ce0:	ldr	x1, [sp, #56]
    9ce4:	bl	b6c0 <__lsan_do_recoverable_leak_check@@Base+0x1534>
    9ce8:	mov	x1, x0
    9cec:	mov	w0, #0x1                   	// #1
    9cf0:	strb	w0, [x1, #29]
    9cf4:	ldr	x0, [sp, #56]
    9cf8:	add	x0, x0, #0x1
    9cfc:	str	x0, [sp, #56]
    9d00:	b	9c24 <*ABS*+0x10@plt+0x2c74>
    9d04:	nop
    9d08:	ldr	x30, [sp, #16]
    9d0c:	ldp	x19, x20, [sp], #64
    9d10:	ret
    9d14:	str	x30, [sp, #-48]!
    9d18:	str	x0, [sp, #24]
    9d1c:	str	xzr, [sp, #40]
    9d20:	str	xzr, [sp, #32]
    9d24:	ldr	x0, [sp, #24]
    9d28:	add	x0, x0, #0x8
    9d2c:	bl	b6a8 <__lsan_do_recoverable_leak_check@@Base+0x151c>
    9d30:	mov	x1, x0
    9d34:	ldr	x0, [sp, #32]
    9d38:	cmp	x0, x1
    9d3c:	cset	w0, cc  // cc = lo, ul, last
    9d40:	and	w0, w0, #0xff
    9d44:	cmp	w0, #0x0
    9d48:	b.eq	9d8c <*ABS*+0x10@plt+0x2ddc>  // b.none
    9d4c:	ldr	x0, [sp, #24]
    9d50:	add	x0, x0, #0x8
    9d54:	ldr	x1, [sp, #32]
    9d58:	bl	b6c0 <__lsan_do_recoverable_leak_check@@Base+0x1534>
    9d5c:	ldrb	w0, [x0, #29]
    9d60:	eor	w0, w0, #0x1
    9d64:	and	w0, w0, #0xff
    9d68:	cmp	w0, #0x0
    9d6c:	b.eq	9d7c <*ABS*+0x10@plt+0x2dcc>  // b.none
    9d70:	ldr	x0, [sp, #40]
    9d74:	add	x0, x0, #0x1
    9d78:	str	x0, [sp, #40]
    9d7c:	ldr	x0, [sp, #32]
    9d80:	add	x0, x0, #0x1
    9d84:	str	x0, [sp, #32]
    9d88:	b	9d24 <*ABS*+0x10@plt+0x2d74>
    9d8c:	ldr	x0, [sp, #40]
    9d90:	ldr	x30, [sp], #48
    9d94:	ret

0000000000009d98 <__lsan_ignore_object@@Base>:
    9d98:	str	x30, [sp, #-48]!
    9d9c:	str	x0, [sp, #24]
    9da0:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
    9da4:	ldrb	w0, [x0, #57]
    9da8:	eor	w0, w0, #0x1
    9dac:	and	w0, w0, #0xff
    9db0:	cmp	w0, #0x0
    9db4:	b.ne	9e80 <__lsan_ignore_object@@Base+0xe8>  // b.any
    9db8:	add	x2, sp, #0x20
    9dbc:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    9dc0:	add	x1, x0, #0xcc0
    9dc4:	mov	x0, x2
    9dc8:	bl	b658 <__lsan_do_recoverable_leak_check@@Base+0x14cc>
    9dcc:	ldr	x0, [sp, #24]
    9dd0:	bl	e9c0 <__sanitizer_print_stack_trace@@Base+0xf08>
    9dd4:	str	w0, [sp, #44]
    9dd8:	ldr	w0, [sp, #44]
    9ddc:	cmp	w0, #0x2
    9de0:	b.ne	9e0c <__lsan_ignore_object@@Base+0x74>  // b.any
    9de4:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
    9de8:	cmp	w0, #0x0
    9dec:	cset	w0, ne  // ne = any
    9df0:	and	w0, w0, #0xff
    9df4:	cmp	w0, #0x0
    9df8:	b.eq	9e0c <__lsan_ignore_object@@Base+0x74>  // b.none
    9dfc:	ldr	x1, [sp, #24]
    9e00:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    9e04:	add	x0, x0, #0xcf0
    9e08:	bl	2a3fc <OnPrint@@Base+0x454>
    9e0c:	ldr	w0, [sp, #44]
    9e10:	cmp	w0, #0x1
    9e14:	b.ne	9e40 <__lsan_ignore_object@@Base+0xa8>  // b.any
    9e18:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
    9e1c:	cmp	w0, #0x0
    9e20:	cset	w0, ne  // ne = any
    9e24:	and	w0, w0, #0xff
    9e28:	cmp	w0, #0x0
    9e2c:	b.eq	9e40 <__lsan_ignore_object@@Base+0xa8>  // b.none
    9e30:	ldr	x1, [sp, #24]
    9e34:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    9e38:	add	x0, x0, #0xd28
    9e3c:	bl	2a3fc <OnPrint@@Base+0x454>
    9e40:	ldr	w0, [sp, #44]
    9e44:	cmp	w0, #0x0
    9e48:	b.ne	9e74 <__lsan_ignore_object@@Base+0xdc>  // b.any
    9e4c:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
    9e50:	cmp	w0, #0x0
    9e54:	cset	w0, ne  // ne = any
    9e58:	and	w0, w0, #0xff
    9e5c:	cmp	w0, #0x0
    9e60:	b.eq	9e74 <__lsan_ignore_object@@Base+0xdc>  // b.none
    9e64:	ldr	x1, [sp, #24]
    9e68:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    9e6c:	add	x0, x0, #0xd70
    9e70:	bl	2a3fc <OnPrint@@Base+0x454>
    9e74:	add	x0, sp, #0x20
    9e78:	bl	b688 <__lsan_do_recoverable_leak_check@@Base+0x14fc>
    9e7c:	b	9e84 <__lsan_ignore_object@@Base+0xec>
    9e80:	nop
    9e84:	ldr	x30, [sp], #48
    9e88:	ret

0000000000009e8c <__lsan_register_root_region@@Base>:
    9e8c:	str	x30, [sp, #-80]!
    9e90:	str	x0, [sp, #24]
    9e94:	str	x1, [sp, #16]
    9e98:	add	x2, sp, #0x38
    9e9c:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    9ea0:	add	x1, x0, #0xcc0
    9ea4:	mov	x0, x2
    9ea8:	bl	b658 <__lsan_do_recoverable_leak_check@@Base+0x14cc>
    9eac:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    9eb0:	add	x0, x0, #0xd98
    9eb4:	ldr	x0, [x0]
    9eb8:	str	x0, [sp, #72]
    9ebc:	str	xzr, [sp, #64]
    9ec0:	ldr	x1, [sp, #72]
    9ec4:	ldr	x0, [sp, #64]
    9ec8:	cmp	x1, x0
    9ecc:	cset	w0, eq  // eq = none
    9ed0:	and	w0, w0, #0xff
    9ed4:	and	x0, x0, #0xff
    9ed8:	cmp	x0, #0x0
    9edc:	b.eq	9f00 <__lsan_register_root_region@@Base+0x74>  // b.none
    9ee0:	ldr	x4, [sp, #64]
    9ee4:	ldr	x3, [sp, #72]
    9ee8:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    9eec:	add	x2, x0, #0x7e0
    9ef0:	mov	w1, #0x336                 	// #822
    9ef4:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    9ef8:	add	x0, x0, #0x450
    9efc:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    9f00:	ldr	x0, [sp, #24]
    9f04:	str	x0, [sp, #40]
    9f08:	ldr	x0, [sp, #16]
    9f0c:	str	x0, [sp, #48]
    9f10:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    9f14:	add	x0, x0, #0xd98
    9f18:	ldr	x0, [x0]
    9f1c:	mov	x2, x0
    9f20:	add	x0, sp, #0x28
    9f24:	mov	x1, x0
    9f28:	mov	x0, x2
    9f2c:	bl	bc90 <__lsan_do_recoverable_leak_check@@Base+0x1b04>
    9f30:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
    9f34:	cmp	w0, #0x0
    9f38:	cset	w0, ne  // ne = any
    9f3c:	and	w0, w0, #0xff
    9f40:	cmp	w0, #0x0
    9f44:	b.eq	9f5c <__lsan_register_root_region@@Base+0xd0>  // b.none
    9f48:	ldr	x2, [sp, #16]
    9f4c:	ldr	x1, [sp, #24]
    9f50:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    9f54:	add	x0, x0, #0xda8
    9f58:	bl	2a3fc <OnPrint@@Base+0x454>
    9f5c:	add	x0, sp, #0x38
    9f60:	bl	b688 <__lsan_do_recoverable_leak_check@@Base+0x14fc>
    9f64:	nop
    9f68:	ldr	x30, [sp], #80
    9f6c:	ret

0000000000009f70 <__lsan_unregister_root_region@@Base>:
    9f70:	stp	x19, x30, [sp, #-96]!
    9f74:	str	x0, [sp, #24]
    9f78:	str	x1, [sp, #16]
    9f7c:	add	x2, sp, #0x30
    9f80:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    9f84:	add	x1, x0, #0xcc0
    9f88:	mov	x0, x2
    9f8c:	bl	b658 <__lsan_do_recoverable_leak_check@@Base+0x14cc>
    9f90:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    9f94:	add	x0, x0, #0xd98
    9f98:	ldr	x0, [x0]
    9f9c:	str	x0, [sp, #72]
    9fa0:	str	xzr, [sp, #64]
    9fa4:	ldr	x1, [sp, #72]
    9fa8:	ldr	x0, [sp, #64]
    9fac:	cmp	x1, x0
    9fb0:	cset	w0, eq  // eq = none
    9fb4:	and	w0, w0, #0xff
    9fb8:	and	x0, x0, #0xff
    9fbc:	cmp	x0, #0x0
    9fc0:	b.eq	9fe4 <__lsan_unregister_root_region@@Base+0x74>  // b.none
    9fc4:	ldr	x4, [sp, #64]
    9fc8:	ldr	x3, [sp, #72]
    9fcc:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    9fd0:	add	x2, x0, #0x7e0
    9fd4:	mov	w1, #0x341                 	// #833
    9fd8:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    9fdc:	add	x0, x0, #0x450
    9fe0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    9fe4:	strb	wzr, [sp, #95]
    9fe8:	str	xzr, [sp, #80]
    9fec:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    9ff0:	add	x0, x0, #0xd98
    9ff4:	ldr	x0, [x0]
    9ff8:	bl	aedc <__lsan_do_recoverable_leak_check@@Base+0xd50>
    9ffc:	mov	x1, x0
    a000:	ldr	x0, [sp, #80]
    a004:	cmp	x0, x1
    a008:	cset	w0, cc  // cc = lo, ul, last
    a00c:	and	w0, w0, #0xff
    a010:	cmp	w0, #0x0
    a014:	b.eq	a100 <__lsan_unregister_root_region@@Base+0x190>  // b.none
    a018:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    a01c:	add	x0, x0, #0xd98
    a020:	ldr	x0, [x0]
    a024:	ldr	x1, [sp, #80]
    a028:	bl	aef4 <__lsan_do_recoverable_leak_check@@Base+0xd68>
    a02c:	ldp	x0, x1, [x0]
    a030:	stp	x0, x1, [sp, #32]
    a034:	ldr	x1, [sp, #32]
    a038:	ldr	x0, [sp, #24]
    a03c:	cmp	x1, x0
    a040:	b.ne	a0ec <__lsan_unregister_root_region@@Base+0x17c>  // b.any
    a044:	ldr	x0, [sp, #40]
    a048:	ldr	x1, [sp, #16]
    a04c:	cmp	x1, x0
    a050:	b.ne	a0ec <__lsan_unregister_root_region@@Base+0x17c>  // b.any
    a054:	mov	w0, #0x1                   	// #1
    a058:	strb	w0, [sp, #95]
    a05c:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    a060:	add	x0, x0, #0xd98
    a064:	ldr	x0, [x0]
    a068:	bl	aedc <__lsan_do_recoverable_leak_check@@Base+0xd50>
    a06c:	sub	x0, x0, #0x1
    a070:	str	x0, [sp, #56]
    a074:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    a078:	add	x0, x0, #0xd98
    a07c:	ldr	x0, [x0]
    a080:	ldr	x1, [sp, #56]
    a084:	bl	aef4 <__lsan_do_recoverable_leak_check@@Base+0xd68>
    a088:	mov	x19, x0
    a08c:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    a090:	add	x0, x0, #0xd98
    a094:	ldr	x0, [x0]
    a098:	ldr	x1, [sp, #80]
    a09c:	bl	aef4 <__lsan_do_recoverable_leak_check@@Base+0xd68>
    a0a0:	mov	x2, x0
    a0a4:	ldp	x0, x1, [x19]
    a0a8:	stp	x0, x1, [x2]
    a0ac:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    a0b0:	add	x0, x0, #0xd98
    a0b4:	ldr	x0, [x0]
    a0b8:	bl	bd74 <__lsan_do_recoverable_leak_check@@Base+0x1be8>
    a0bc:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
    a0c0:	cmp	w0, #0x0
    a0c4:	cset	w0, ne  // ne = any
    a0c8:	and	w0, w0, #0xff
    a0cc:	cmp	w0, #0x0
    a0d0:	b.eq	a0fc <__lsan_unregister_root_region@@Base+0x18c>  // b.none
    a0d4:	ldr	x2, [sp, #16]
    a0d8:	ldr	x1, [sp, #24]
    a0dc:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    a0e0:	add	x0, x0, #0xdd8
    a0e4:	bl	2a3fc <OnPrint@@Base+0x454>
    a0e8:	b	a0fc <__lsan_unregister_root_region@@Base+0x18c>
    a0ec:	ldr	x0, [sp, #80]
    a0f0:	add	x0, x0, #0x1
    a0f4:	str	x0, [sp, #80]
    a0f8:	b	9fec <__lsan_unregister_root_region@@Base+0x7c>
    a0fc:	nop
    a100:	ldrb	w0, [sp, #95]
    a104:	eor	w0, w0, #0x1
    a108:	and	w0, w0, #0xff
    a10c:	cmp	w0, #0x0
    a110:	b.eq	a12c <__lsan_unregister_root_region@@Base+0x1bc>  // b.none
    a114:	ldr	x2, [sp, #16]
    a118:	ldr	x1, [sp, #24]
    a11c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    a120:	add	x0, x0, #0xe08
    a124:	bl	2a3fc <OnPrint@@Base+0x454>
    a128:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
    a12c:	add	x0, sp, #0x30
    a130:	bl	b688 <__lsan_do_recoverable_leak_check@@Base+0x14fc>
    a134:	nop
    a138:	ldp	x19, x30, [sp], #96
    a13c:	ret

000000000000a140 <__lsan_disable@@Base>:
    a140:	str	x30, [sp, #-16]!
    a144:	bl	d034 <__lsan_do_recoverable_leak_check@@Base+0x2ea8>
    a148:	nop
    a14c:	ldr	x30, [sp], #16
    a150:	ret

000000000000a154 <__lsan_enable@@Base>:
    a154:	str	x30, [sp, #-16]!
    a158:	bl	d068 <__lsan_do_recoverable_leak_check@@Base+0x2edc>
    a15c:	nop
    a160:	ldr	x30, [sp], #16
    a164:	ret

000000000000a168 <__lsan_do_leak_check@@Base>:
    a168:	str	x30, [sp, #-16]!
    a16c:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
    a170:	ldrb	w0, [x0, #57]
    a174:	cmp	w0, #0x0
    a178:	b.eq	a180 <__lsan_do_leak_check@@Base+0x18>  // b.none
    a17c:	bl	919c <*ABS*+0x10@plt+0x21ec>
    a180:	nop
    a184:	ldr	x30, [sp], #16
    a188:	ret

000000000000a18c <__lsan_do_recoverable_leak_check@@Base>:
    a18c:	str	x30, [sp, #-16]!
    a190:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
    a194:	ldrb	w0, [x0, #57]
    a198:	cmp	w0, #0x0
    a19c:	b.eq	a1a8 <__lsan_do_recoverable_leak_check@@Base+0x1c>  // b.none
    a1a0:	bl	9224 <*ABS*+0x10@plt+0x2274>
    a1a4:	b	a1ac <__lsan_do_recoverable_leak_check@@Base+0x20>
    a1a8:	mov	w0, #0x0                   	// #0
    a1ac:	ldr	x30, [sp], #16
    a1b0:	ret
    a1b4:	stp	x19, x30, [sp, #-64]!
    a1b8:	str	x0, [sp, #40]
    a1bc:	str	x1, [sp, #32]
    a1c0:	str	x2, [sp, #24]
    a1c4:	str	x3, [sp, #16]
    a1c8:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
    a1cc:	ldr	x1, [x0, #3456]
    a1d0:	mov	x0, #0x10                  	// #16
    a1d4:	bl	a5c0 <__lsan_do_recoverable_leak_check@@Base+0x434>
    a1d8:	mov	x19, x0
    a1dc:	ldr	x1, [sp, #16]
    a1e0:	mov	x0, x19
    a1e4:	bl	bfcc <__lsan_do_recoverable_leak_check@@Base+0x1e40>
    a1e8:	str	x19, [sp, #56]
    a1ec:	ldr	x3, [sp, #24]
    a1f0:	ldr	x2, [sp, #56]
    a1f4:	ldr	x1, [sp, #32]
    a1f8:	ldr	x0, [sp, #40]
    a1fc:	bl	21174 <__sanitizer_set_report_fd@@Base+0x1f7c>
    a200:	nop
    a204:	ldp	x19, x30, [sp], #64
    a208:	ret
    a20c:	stp	x19, x30, [sp, #-64]!
    a210:	str	x0, [sp, #40]
    a214:	str	x1, [sp, #32]
    a218:	str	x2, [sp, #24]
    a21c:	str	x3, [sp, #16]
    a220:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
    a224:	ldr	x1, [x0, #3456]
    a228:	mov	x0, #0x10                  	// #16
    a22c:	bl	a5c0 <__lsan_do_recoverable_leak_check@@Base+0x434>
    a230:	mov	x19, x0
    a234:	ldr	x1, [sp, #16]
    a238:	mov	x0, x19
    a23c:	bl	c008 <__lsan_do_recoverable_leak_check@@Base+0x1e7c>
    a240:	str	x19, [sp, #56]
    a244:	ldr	x3, [sp, #24]
    a248:	ldr	x2, [sp, #56]
    a24c:	ldr	x1, [sp, #32]
    a250:	ldr	x0, [sp, #40]
    a254:	bl	21174 <__sanitizer_set_report_fd@@Base+0x1f7c>
    a258:	nop
    a25c:	ldp	x19, x30, [sp], #64
    a260:	ret
    a264:	stp	x19, x30, [sp, #-64]!
    a268:	str	x0, [sp, #40]
    a26c:	str	x1, [sp, #32]
    a270:	str	x2, [sp, #24]
    a274:	str	x3, [sp, #16]
    a278:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
    a27c:	ldr	x1, [x0, #3456]
    a280:	mov	x0, #0x10                  	// #16
    a284:	bl	a5c0 <__lsan_do_recoverable_leak_check@@Base+0x434>
    a288:	mov	x19, x0
    a28c:	ldr	x1, [sp, #16]
    a290:	mov	x0, x19
    a294:	bl	c044 <__lsan_do_recoverable_leak_check@@Base+0x1eb8>
    a298:	str	x19, [sp, #56]
    a29c:	ldr	x3, [sp, #24]
    a2a0:	ldr	x2, [sp, #56]
    a2a4:	ldr	x1, [sp, #32]
    a2a8:	ldr	x0, [sp, #40]
    a2ac:	bl	21174 <__sanitizer_set_report_fd@@Base+0x1f7c>
    a2b0:	nop
    a2b4:	ldp	x19, x30, [sp], #64
    a2b8:	ret
    a2bc:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
    a2c0:	ldr	x0, [x0, #4040]
    a2c4:	ret
    a2c8:	str	x30, [sp, #-16]!
    a2cc:	mov	w1, #0x1                   	// #1
    a2d0:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
    a2d4:	ldr	x0, [x0, #3680]
    a2d8:	bl	ab3c <__lsan_do_recoverable_leak_check@@Base+0x9b0>
    a2dc:	ldr	x30, [sp], #16
    a2e0:	ret
    a2e4:	str	x30, [sp, #-16]!
    a2e8:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
    a2ec:	ldr	x0, [x0, #4000]
    a2f0:	ldr	x0, [x0]
    a2f4:	cmp	x0, #0x0
    a2f8:	b.ne	a310 <__lsan_do_recoverable_leak_check@@Base+0x184>  // b.any
    a2fc:	bl	24724 <__sanitizer_set_report_fd@@Base+0x552c>
    a300:	mov	x1, x0
    a304:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
    a308:	ldr	x0, [x0, #4000]
    a30c:	str	x1, [x0]
    a310:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
    a314:	ldr	x0, [x0, #4000]
    a318:	ldr	x0, [x0]
    a31c:	ldr	x30, [sp], #16
    a320:	ret
    a324:	str	x30, [sp, #-64]!
    a328:	str	x0, [sp, #24]
    a32c:	ldr	x0, [sp, #24]
    a330:	str	x0, [sp, #56]
    a334:	str	xzr, [sp, #48]
    a338:	ldr	x1, [sp, #56]
    a33c:	ldr	x0, [sp, #48]
    a340:	cmp	x1, x0
    a344:	cset	w0, eq  // eq = none
    a348:	and	w0, w0, #0xff
    a34c:	and	x0, x0, #0xff
    a350:	cmp	x0, #0x0
    a354:	b.eq	a378 <__lsan_do_recoverable_leak_check@@Base+0x1ec>  // b.none
    a358:	ldr	x4, [sp, #48]
    a35c:	ldr	x3, [sp, #56]
    a360:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    a364:	add	x2, x0, #0xdf0
    a368:	mov	w1, #0x151                 	// #337
    a36c:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    a370:	add	x0, x0, #0xe00
    a374:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    a378:	ldr	x0, [sp, #24]
    a37c:	clz	x0, x0
    a380:	mov	w1, w0
    a384:	mov	w0, #0x3f                  	// #63
    a388:	sub	w0, w0, w1
    a38c:	sxtw	x0, w0
    a390:	str	x0, [sp, #40]
    a394:	ldr	x0, [sp, #40]
    a398:	ldr	x30, [sp], #64
    a39c:	ret
    a3a0:	sub	sp, sp, #0x10
    a3a4:	str	x0, [sp, #8]
    a3a8:	ldr	x0, [sp, #8]
    a3ac:	sub	x1, x0, #0x1
    a3b0:	ldr	x0, [sp, #8]
    a3b4:	and	x0, x1, x0
    a3b8:	cmp	x0, #0x0
    a3bc:	cset	w0, eq  // eq = none
    a3c0:	and	w0, w0, #0xff
    a3c4:	add	sp, sp, #0x10
    a3c8:	ret
    a3cc:	str	x30, [sp, #-96]!
    a3d0:	str	x0, [sp, #24]
    a3d4:	ldr	x0, [sp, #24]
    a3d8:	str	x0, [sp, #88]
    a3dc:	str	xzr, [sp, #80]
    a3e0:	ldr	x1, [sp, #88]
    a3e4:	ldr	x0, [sp, #80]
    a3e8:	cmp	x1, x0
    a3ec:	cset	w0, eq  // eq = none
    a3f0:	and	w0, w0, #0xff
    a3f4:	and	x0, x0, #0xff
    a3f8:	cmp	x0, #0x0
    a3fc:	b.eq	a420 <__lsan_do_recoverable_leak_check@@Base+0x294>  // b.none
    a400:	ldr	x4, [sp, #80]
    a404:	ldr	x3, [sp, #88]
    a408:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    a40c:	add	x2, x0, #0xe40
    a410:	mov	w1, #0x177                 	// #375
    a414:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    a418:	add	x0, x0, #0xe00
    a41c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    a420:	ldr	x0, [sp, #24]
    a424:	bl	a3a0 <__lsan_do_recoverable_leak_check@@Base+0x214>
    a428:	and	w0, w0, #0xff
    a42c:	cmp	w0, #0x0
    a430:	b.eq	a43c <__lsan_do_recoverable_leak_check@@Base+0x2b0>  // b.none
    a434:	ldr	x0, [sp, #24]
    a438:	b	a510 <__lsan_do_recoverable_leak_check@@Base+0x384>
    a43c:	ldr	x0, [sp, #24]
    a440:	bl	a324 <__lsan_do_recoverable_leak_check@@Base+0x198>
    a444:	str	x0, [sp, #72]
    a448:	ldr	x0, [sp, #24]
    a44c:	str	x0, [sp, #64]
    a450:	ldr	x0, [sp, #72]
    a454:	add	w0, w0, #0x1
    a458:	mov	x1, #0x1                   	// #1
    a45c:	lsl	x0, x1, x0
    a460:	str	x0, [sp, #56]
    a464:	ldr	x1, [sp, #64]
    a468:	ldr	x0, [sp, #56]
    a46c:	cmp	x1, x0
    a470:	cset	w0, cs  // cs = hs, nlast
    a474:	and	w0, w0, #0xff
    a478:	and	x0, x0, #0xff
    a47c:	cmp	x0, #0x0
    a480:	b.eq	a4a4 <__lsan_do_recoverable_leak_check@@Base+0x318>  // b.none
    a484:	ldr	x4, [sp, #56]
    a488:	ldr	x3, [sp, #64]
    a48c:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    a490:	add	x2, x0, #0xe50
    a494:	mov	w1, #0x17b                 	// #379
    a498:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    a49c:	add	x0, x0, #0xe00
    a4a0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    a4a4:	ldr	x0, [sp, #24]
    a4a8:	str	x0, [sp, #48]
    a4ac:	ldr	x0, [sp, #72]
    a4b0:	mov	w1, w0
    a4b4:	mov	x0, #0x1                   	// #1
    a4b8:	lsl	x0, x0, x1
    a4bc:	str	x0, [sp, #40]
    a4c0:	ldr	x1, [sp, #48]
    a4c4:	ldr	x0, [sp, #40]
    a4c8:	cmp	x1, x0
    a4cc:	cset	w0, ls  // ls = plast
    a4d0:	and	w0, w0, #0xff
    a4d4:	and	x0, x0, #0xff
    a4d8:	cmp	x0, #0x0
    a4dc:	b.eq	a500 <__lsan_do_recoverable_leak_check@@Base+0x374>  // b.none
    a4e0:	ldr	x4, [sp, #40]
    a4e4:	ldr	x3, [sp, #48]
    a4e8:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    a4ec:	add	x2, x0, #0xe78
    a4f0:	mov	w1, #0x17c                 	// #380
    a4f4:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    a4f8:	add	x0, x0, #0xe00
    a4fc:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    a500:	ldr	x0, [sp, #72]
    a504:	add	w0, w0, #0x1
    a508:	mov	x1, #0x1                   	// #1
    a50c:	lsl	x0, x1, x0
    a510:	ldr	x30, [sp], #96
    a514:	ret
    a518:	str	x30, [sp, #-32]!
    a51c:	str	x0, [sp, #24]
    a520:	str	x1, [sp, #16]
    a524:	ldr	x0, [sp, #16]
    a528:	bl	a3a0 <__lsan_do_recoverable_leak_check@@Base+0x214>
    a52c:	and	w0, w0, #0xff
    a530:	eor	w0, w0, #0x1
    a534:	and	w0, w0, #0xff
    a538:	and	x0, x0, #0xff
    a53c:	cmp	x0, #0x0
    a540:	cset	w0, ne  // ne = any
    a544:	and	w0, w0, #0xff
    a548:	cmp	w0, #0x0
    a54c:	b.eq	a560 <__lsan_do_recoverable_leak_check@@Base+0x3d4>  // b.none
    a550:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    a554:	add	x0, x0, #0xe98
    a558:	bl	1e860 <__sanitizer_cov_pcs_init@@Base+0x37c4>
    a55c:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
    a560:	ldr	x1, [sp, #24]
    a564:	ldr	x0, [sp, #16]
    a568:	add	x0, x1, x0
    a56c:	sub	x1, x0, #0x1
    a570:	ldr	x0, [sp, #16]
    a574:	neg	x0, x0
    a578:	and	x0, x1, x0
    a57c:	ldr	x30, [sp], #32
    a580:	ret
    a584:	str	x30, [sp, #-32]!
    a588:	str	x0, [sp, #24]
    a58c:	str	x1, [sp, #16]
    a590:	ldr	x0, [sp, #24]
    a594:	ldr	x1, [sp, #16]
    a598:	bl	abc0 <__lsan_do_recoverable_leak_check@@Base+0xa34>
    a59c:	ldr	x0, [sp, #24]
    a5a0:	str	xzr, [x0, #24]
    a5a4:	ldr	x0, [sp, #24]
    a5a8:	mov	x1, #0x0                   	// #0
    a5ac:	bl	ac0c <__lsan_do_recoverable_leak_check@@Base+0xa80>
    a5b0:	strb	wzr, [x0]
    a5b4:	nop
    a5b8:	ldr	x30, [sp], #32
    a5bc:	ret
    a5c0:	str	x30, [sp, #-32]!
    a5c4:	str	x0, [sp, #24]
    a5c8:	str	x1, [sp, #16]
    a5cc:	ldr	x1, [sp, #24]
    a5d0:	ldr	x0, [sp, #16]
    a5d4:	bl	16890 <__sancov_default_options@@Base+0x6f4>
    a5d8:	ldr	x30, [sp], #32
    a5dc:	ret
    a5e0:	sub	sp, sp, #0x20
    a5e4:	str	x0, [sp, #24]
    a5e8:	str	x1, [sp, #16]
    a5ec:	str	x2, [sp, #8]
    a5f0:	ldr	x0, [sp, #24]
    a5f4:	ldr	x1, [sp, #16]
    a5f8:	str	x1, [x0, #24]
    a5fc:	ldr	x0, [sp, #24]
    a600:	ldr	x1, [sp, #8]
    a604:	str	x1, [x0, #32]
    a608:	ldr	x0, [sp, #24]
    a60c:	str	xzr, [x0, #72]
    a610:	nop
    a614:	add	sp, sp, #0x20
    a618:	ret
    a61c:	sub	sp, sp, #0x10
    a620:	str	x0, [sp, #8]
    a624:	nop
    a628:	add	sp, sp, #0x10
    a62c:	ret
    a630:	sub	sp, sp, #0x10
    a634:	str	x0, [sp, #8]
    a638:	ldr	x0, [sp, #8]
    a63c:	ldr	x0, [x0, #40]
    a640:	and	x0, x0, #0x1
    a644:	cmp	x0, #0x0
    a648:	cset	w0, ne  // ne = any
    a64c:	and	w0, w0, #0xff
    a650:	add	sp, sp, #0x10
    a654:	ret
    a658:	str	x30, [sp, #-48]!
    a65c:	str	x0, [sp, #24]
    a660:	str	x1, [sp, #16]
    a664:	str	xzr, [sp, #40]
    a668:	add	x1, sp, #0x20
    a66c:	add	x0, sp, #0x28
    a670:	mov	x3, x1
    a674:	mov	x2, x0
    a678:	ldr	x1, [sp, #16]
    a67c:	ldr	x0, [sp, #24]
    a680:	bl	32e40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5230>
    a684:	and	w0, w0, #0xff
    a688:	cmp	w0, #0x0
    a68c:	b.eq	a698 <__lsan_do_recoverable_leak_check@@Base+0x50c>  // b.none
    a690:	ldr	x0, [sp, #40]
    a694:	b	a69c <__lsan_do_recoverable_leak_check@@Base+0x510>
    a698:	mov	x0, #0x0                   	// #0
    a69c:	ldr	x30, [sp], #48
    a6a0:	ret
    a6a4:	sub	sp, sp, #0x10
    a6a8:	str	x0, [sp, #8]
    a6ac:	ldr	x0, [sp, #8]
    a6b0:	ldrb	w0, [x0, #18]
    a6b4:	cmp	w0, #0x0
    a6b8:	b.eq	a6c4 <__lsan_do_recoverable_leak_check@@Base+0x538>  // b.none
    a6bc:	mov	x0, #0x1                   	// #1
    a6c0:	b	a6c8 <__lsan_do_recoverable_leak_check@@Base+0x53c>
    a6c4:	mov	x0, #0x8                   	// #8
    a6c8:	add	sp, sp, #0x10
    a6cc:	ret
    a6d0:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    a6d4:	add	x0, x0, #0xd18
    a6d8:	ret
    a6dc:	str	x30, [sp, #-32]!
    a6e0:	str	x0, [sp, #24]
    a6e4:	ldr	x0, [sp, #24]
    a6e8:	str	wzr, [x0]
    a6ec:	ldr	x0, [sp, #24]
    a6f0:	add	x0, x0, #0x8
    a6f4:	bl	ac84 <__lsan_do_recoverable_leak_check@@Base+0xaf8>
    a6f8:	ldr	x0, [sp, #24]
    a6fc:	add	x0, x0, #0x20
    a700:	bl	acc0 <__lsan_do_recoverable_leak_check@@Base+0xb34>
    a704:	nop
    a708:	ldr	x30, [sp], #32
    a70c:	ret
    a710:	sub	sp, sp, #0x10
    a714:	str	x0, [sp, #8]
    a718:	str	x1, [sp]
    a71c:	mov	w0, #0x0                   	// #0
    a720:	add	sp, sp, #0x10
    a724:	ret
    a728:	str	x30, [sp, #-32]!
    a72c:	str	x0, [sp, #24]
    a730:	str	x1, [sp, #16]
    a734:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    a738:	add	x1, x0, #0xf20
    a73c:	ldr	x0, [sp, #24]
    a740:	bl	21950 <__sanitizer_set_report_fd@@Base+0x2758>
    a744:	cmp	w0, #0x0
    a748:	b.eq	a77c <__lsan_do_recoverable_leak_check@@Base+0x5f0>  // b.none
    a74c:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    a750:	add	x1, x0, #0xf28
    a754:	ldr	x0, [sp, #24]
    a758:	bl	21950 <__sanitizer_set_report_fd@@Base+0x2758>
    a75c:	cmp	w0, #0x0
    a760:	b.eq	a77c <__lsan_do_recoverable_leak_check@@Base+0x5f0>  // b.none
    a764:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    a768:	add	x1, x0, #0xf30
    a76c:	ldr	x0, [sp, #24]
    a770:	bl	21950 <__sanitizer_set_report_fd@@Base+0x2758>
    a774:	cmp	w0, #0x0
    a778:	b.ne	a784 <__lsan_do_recoverable_leak_check@@Base+0x5f8>  // b.any
    a77c:	mov	w0, #0x1                   	// #1
    a780:	b	a788 <__lsan_do_recoverable_leak_check@@Base+0x5fc>
    a784:	mov	w0, #0x0                   	// #0
    a788:	cmp	w0, #0x0
    a78c:	b.eq	a7a0 <__lsan_do_recoverable_leak_check@@Base+0x614>  // b.none
    a790:	ldr	x0, [sp, #16]
    a794:	strb	wzr, [x0]
    a798:	mov	w0, #0x1                   	// #1
    a79c:	b	a814 <__lsan_do_recoverable_leak_check@@Base+0x688>
    a7a0:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    a7a4:	add	x1, x0, #0xf38
    a7a8:	ldr	x0, [sp, #24]
    a7ac:	bl	21950 <__sanitizer_set_report_fd@@Base+0x2758>
    a7b0:	cmp	w0, #0x0
    a7b4:	b.eq	a7e8 <__lsan_do_recoverable_leak_check@@Base+0x65c>  // b.none
    a7b8:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    a7bc:	add	x1, x0, #0xf40
    a7c0:	ldr	x0, [sp, #24]
    a7c4:	bl	21950 <__sanitizer_set_report_fd@@Base+0x2758>
    a7c8:	cmp	w0, #0x0
    a7cc:	b.eq	a7e8 <__lsan_do_recoverable_leak_check@@Base+0x65c>  // b.none
    a7d0:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    a7d4:	add	x1, x0, #0xf48
    a7d8:	ldr	x0, [sp, #24]
    a7dc:	bl	21950 <__sanitizer_set_report_fd@@Base+0x2758>
    a7e0:	cmp	w0, #0x0
    a7e4:	b.ne	a7f0 <__lsan_do_recoverable_leak_check@@Base+0x664>  // b.any
    a7e8:	mov	w0, #0x1                   	// #1
    a7ec:	b	a7f4 <__lsan_do_recoverable_leak_check@@Base+0x668>
    a7f0:	mov	w0, #0x0                   	// #0
    a7f4:	cmp	w0, #0x0
    a7f8:	b.eq	a810 <__lsan_do_recoverable_leak_check@@Base+0x684>  // b.none
    a7fc:	ldr	x0, [sp, #16]
    a800:	mov	w1, #0x1                   	// #1
    a804:	strb	w1, [x0]
    a808:	mov	w0, #0x1                   	// #1
    a80c:	b	a814 <__lsan_do_recoverable_leak_check@@Base+0x688>
    a810:	mov	w0, #0x0                   	// #0
    a814:	ldr	x30, [sp], #32
    a818:	ret
    a81c:	str	x30, [sp, #-32]!
    a820:	str	x0, [sp, #24]
    a824:	str	x1, [sp, #16]
    a828:	ldr	x0, [sp, #24]
    a82c:	ldr	x0, [x0, #8]
    a830:	mov	x1, x0
    a834:	ldr	x0, [sp, #16]
    a838:	bl	a728 <__lsan_do_recoverable_leak_check@@Base+0x59c>
    a83c:	and	w0, w0, #0xff
    a840:	cmp	w0, #0x0
    a844:	b.eq	a850 <__lsan_do_recoverable_leak_check@@Base+0x6c4>  // b.none
    a848:	mov	w0, #0x1                   	// #1
    a84c:	b	a864 <__lsan_do_recoverable_leak_check@@Base+0x6d8>
    a850:	ldr	x1, [sp, #16]
    a854:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    a858:	add	x0, x0, #0xf50
    a85c:	bl	2a350 <OnPrint@@Base+0x3a8>
    a860:	mov	w0, #0x0                   	// #0
    a864:	ldr	x30, [sp], #32
    a868:	ret
    a86c:	sub	sp, sp, #0x10
    a870:	str	x0, [sp, #8]
    a874:	str	x1, [sp]
    a878:	ldr	x0, [sp, #8]
    a87c:	ldr	x0, [x0, #8]
    a880:	ldr	x1, [sp]
    a884:	str	x1, [x0]
    a888:	mov	w0, #0x1                   	// #1
    a88c:	add	sp, sp, #0x10
    a890:	ret
    a894:	str	x30, [sp, #-48]!
    a898:	str	x0, [sp, #24]
    a89c:	str	x1, [sp, #16]
    a8a0:	add	x0, sp, #0x20
    a8a4:	mov	w2, #0xa                   	// #10
    a8a8:	mov	x1, x0
    a8ac:	ldr	x0, [sp, #16]
    a8b0:	bl	21fa0 <__sanitizer_set_report_fd@@Base+0x2da8>
    a8b4:	mov	x1, x0
    a8b8:	ldr	x0, [sp, #24]
    a8bc:	ldr	x0, [x0, #8]
    a8c0:	str	w1, [x0]
    a8c4:	ldr	x0, [sp, #32]
    a8c8:	ldrb	w0, [x0]
    a8cc:	cmp	w0, #0x0
    a8d0:	cset	w0, eq  // eq = none
    a8d4:	strb	w0, [sp, #47]
    a8d8:	ldrb	w0, [sp, #47]
    a8dc:	eor	w0, w0, #0x1
    a8e0:	and	w0, w0, #0xff
    a8e4:	cmp	w0, #0x0
    a8e8:	b.eq	a8fc <__lsan_do_recoverable_leak_check@@Base+0x770>  // b.none
    a8ec:	ldr	x1, [sp, #16]
    a8f0:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    a8f4:	add	x0, x0, #0xf80
    a8f8:	bl	2a350 <OnPrint@@Base+0x3a8>
    a8fc:	ldrb	w0, [sp, #47]
    a900:	ldr	x30, [sp], #48
    a904:	ret
    a908:	sub	sp, sp, #0x10
    a90c:	str	x0, [sp, #8]
    a910:	str	x1, [sp]
    a914:	ldr	x0, [sp]
    a918:	add	sp, sp, #0x10
    a91c:	ret
    a920:	str	x30, [sp, #-32]!
    a924:	str	x0, [sp, #24]
    a928:	bl	2ddac <__sanitizer_get_module_and_offset_for_pc@@Base+0x19c>
    a92c:	and	w1, w0, #0xff
    a930:	ldr	x0, [sp, #24]
    a934:	strb	w1, [x0]
    a938:	nop
    a93c:	ldr	x30, [sp], #32
    a940:	ret
    a944:	sub	sp, sp, #0x10
    a948:	str	x0, [sp, #8]
    a94c:	ldr	x0, [sp, #8]
    a950:	ldrb	w0, [x0]
    a954:	cmp	w0, #0x0
    a958:	b.eq	a968 <__lsan_do_recoverable_leak_check@@Base+0x7dc>  // b.none
    a95c:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    a960:	add	x0, x0, #0xfb0
    a964:	b	a970 <__lsan_do_recoverable_leak_check@@Base+0x7e4>
    a968:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    a96c:	add	x0, x0, #0xfc0
    a970:	add	sp, sp, #0x10
    a974:	ret
    a978:	sub	sp, sp, #0x10
    a97c:	str	x0, [sp, #8]
    a980:	ldr	x0, [sp, #8]
    a984:	ldrb	w0, [x0]
    a988:	cmp	w0, #0x0
    a98c:	b.eq	a99c <__lsan_do_recoverable_leak_check@@Base+0x810>  // b.none
    a990:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    a994:	add	x0, x0, #0xfc8
    a998:	b	a9a4 <__lsan_do_recoverable_leak_check@@Base+0x818>
    a99c:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    a9a0:	add	x0, x0, #0xfc0
    a9a4:	add	sp, sp, #0x10
    a9a8:	ret
    a9ac:	sub	sp, sp, #0x10
    a9b0:	str	x0, [sp, #8]
    a9b4:	ldr	x0, [sp, #8]
    a9b8:	ldrb	w0, [x0]
    a9bc:	cmp	w0, #0x0
    a9c0:	b.eq	a9d0 <__lsan_do_recoverable_leak_check@@Base+0x844>  // b.none
    a9c4:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    a9c8:	add	x0, x0, #0xfd8
    a9cc:	b	a9d8 <__lsan_do_recoverable_leak_check@@Base+0x84c>
    a9d0:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    a9d4:	add	x0, x0, #0xfc0
    a9d8:	add	sp, sp, #0x10
    a9dc:	ret
    a9e0:	str	x30, [sp, #-32]!
    a9e4:	str	x0, [sp, #24]
    a9e8:	ldr	x0, [sp, #24]
    a9ec:	bl	a920 <__lsan_do_recoverable_leak_check@@Base+0x794>
    a9f0:	nop
    a9f4:	ldr	x30, [sp], #32
    a9f8:	ret
    a9fc:	str	x30, [sp, #-32]!
    aa00:	str	x0, [sp, #24]
    aa04:	ldr	x0, [sp, #24]
    aa08:	bl	a978 <__lsan_do_recoverable_leak_check@@Base+0x7ec>
    aa0c:	ldr	x30, [sp], #32
    aa10:	ret
    aa14:	str	x30, [sp, #-32]!
    aa18:	str	x0, [sp, #24]
    aa1c:	ldr	x0, [sp, #24]
    aa20:	bl	a9ac <__lsan_do_recoverable_leak_check@@Base+0x820>
    aa24:	ldr	x30, [sp], #32
    aa28:	ret
    aa2c:	str	x30, [sp, #-32]!
    aa30:	str	x0, [sp, #24]
    aa34:	ldr	x0, [sp, #24]
    aa38:	bl	b064 <__lsan_do_recoverable_leak_check@@Base+0xed8>
    aa3c:	nop
    aa40:	ldr	x30, [sp], #32
    aa44:	ret
    aa48:	str	x30, [sp, #-32]!
    aa4c:	str	x0, [sp, #24]
    aa50:	ldr	x0, [sp, #24]
    aa54:	add	x0, x0, #0x20
    aa58:	bl	ace0 <__lsan_do_recoverable_leak_check@@Base+0xb54>
    aa5c:	ldr	x0, [sp, #24]
    aa60:	add	x0, x0, #0x8
    aa64:	bl	aca4 <__lsan_do_recoverable_leak_check@@Base+0xb18>
    aa68:	nop
    aa6c:	ldr	x30, [sp], #32
    aa70:	ret
    aa74:	str	x30, [sp, #-32]!
    aa78:	str	x0, [sp, #24]
    aa7c:	ldr	x0, [sp, #24]
    aa80:	add	x0, x0, #0x8
    aa84:	bl	a6dc <__lsan_do_recoverable_leak_check@@Base+0x550>
    aa88:	nop
    aa8c:	ldr	x30, [sp], #32
    aa90:	ret
    aa94:	str	x30, [sp, #-32]!
    aa98:	str	x0, [sp, #24]
    aa9c:	ldr	x0, [sp, #24]
    aaa0:	add	x0, x0, #0x8
    aaa4:	bl	aa48 <__lsan_do_recoverable_leak_check@@Base+0x8bc>
    aaa8:	nop
    aaac:	ldr	x30, [sp], #32
    aab0:	ret
    aab4:	str	x30, [sp, #-32]!
    aab8:	str	x0, [sp, #24]
    aabc:	ldr	x0, [sp, #24]
    aac0:	bl	abf0 <__lsan_do_recoverable_leak_check@@Base+0xa64>
    aac4:	nop
    aac8:	ldr	x30, [sp], #32
    aacc:	ret
    aad0:	sub	sp, sp, #0x10
    aad4:	str	x0, [sp, #8]
    aad8:	str	w1, [sp, #4]
    aadc:	str	w2, [sp]
    aae0:	ldr	w0, [sp]
    aae4:	cmp	w0, #0x1
    aae8:	b.ne	aafc <__lsan_do_recoverable_leak_check@@Base+0x970>  // b.any
    aaec:	ldr	x0, [sp, #8]
    aaf0:	ldr	w1, [sp, #4]
    aaf4:	str	w1, [x0]
    aaf8:	b	ab30 <__lsan_do_recoverable_leak_check@@Base+0x9a4>
    aafc:	ldr	w0, [sp]
    ab00:	cmp	w0, #0x8
    ab04:	b.ne	ab1c <__lsan_do_recoverable_leak_check@@Base+0x990>  // b.any
    ab08:	dmb	ish
    ab0c:	ldr	x0, [sp, #8]
    ab10:	ldr	w1, [sp, #4]
    ab14:	str	w1, [x0]
    ab18:	b	ab30 <__lsan_do_recoverable_leak_check@@Base+0x9a4>
    ab1c:	dmb	ish
    ab20:	ldr	x0, [sp, #8]
    ab24:	ldr	w1, [sp, #4]
    ab28:	str	w1, [x0]
    ab2c:	dmb	ish
    ab30:	nop
    ab34:	add	sp, sp, #0x10
    ab38:	ret
    ab3c:	sub	sp, sp, #0x20
    ab40:	str	x0, [sp, #8]
    ab44:	str	w1, [sp, #4]
    ab48:	ldr	w0, [sp, #4]
    ab4c:	cmp	w0, #0x1
    ab50:	b.ne	ab64 <__lsan_do_recoverable_leak_check@@Base+0x9d8>  // b.any
    ab54:	ldr	x0, [sp, #8]
    ab58:	ldr	w0, [x0]
    ab5c:	str	w0, [sp, #28]
    ab60:	b	abb4 <__lsan_do_recoverable_leak_check@@Base+0xa28>
    ab64:	ldr	w0, [sp, #4]
    ab68:	cmp	w0, #0x2
    ab6c:	b.ne	ab80 <__lsan_do_recoverable_leak_check@@Base+0x9f4>  // b.any
    ab70:	ldr	x0, [sp, #8]
    ab74:	ldr	w0, [x0]
    ab78:	str	w0, [sp, #28]
    ab7c:	b	abb4 <__lsan_do_recoverable_leak_check@@Base+0xa28>
    ab80:	ldr	w0, [sp, #4]
    ab84:	cmp	w0, #0x4
    ab88:	b.ne	aba0 <__lsan_do_recoverable_leak_check@@Base+0xa14>  // b.any
    ab8c:	ldr	x0, [sp, #8]
    ab90:	ldr	w0, [x0]
    ab94:	str	w0, [sp, #28]
    ab98:	dmb	ish
    ab9c:	b	abb4 <__lsan_do_recoverable_leak_check@@Base+0xa28>
    aba0:	dmb	ish
    aba4:	ldr	x0, [sp, #8]
    aba8:	ldr	w0, [x0]
    abac:	str	w0, [sp, #28]
    abb0:	dmb	ish
    abb4:	ldr	w0, [sp, #28]
    abb8:	add	sp, sp, #0x20
    abbc:	ret
    abc0:	str	x30, [sp, #-32]!
    abc4:	str	x0, [sp, #24]
    abc8:	str	x1, [sp, #16]
    abcc:	ldr	x0, [sp, #24]
    abd0:	ldr	x1, [sp, #16]
    abd4:	bl	bdec <__lsan_do_recoverable_leak_check@@Base+0x1c60>
    abd8:	ldr	x0, [sp, #24]
    abdc:	ldr	x1, [sp, #16]
    abe0:	bl	be28 <__lsan_do_recoverable_leak_check@@Base+0x1c9c>
    abe4:	nop
    abe8:	ldr	x30, [sp], #32
    abec:	ret
    abf0:	str	x30, [sp, #-32]!
    abf4:	str	x0, [sp, #24]
    abf8:	ldr	x0, [sp, #24]
    abfc:	bl	bea0 <__lsan_do_recoverable_leak_check@@Base+0x1d14>
    ac00:	nop
    ac04:	ldr	x30, [sp], #32
    ac08:	ret
    ac0c:	str	x30, [sp, #-48]!
    ac10:	str	x0, [sp, #24]
    ac14:	str	x1, [sp, #16]
    ac18:	ldr	x0, [sp, #16]
    ac1c:	str	x0, [sp, #40]
    ac20:	ldr	x0, [sp, #24]
    ac24:	ldr	x0, [x0, #16]
    ac28:	str	x0, [sp, #32]
    ac2c:	ldr	x1, [sp, #40]
    ac30:	ldr	x0, [sp, #32]
    ac34:	cmp	x1, x0
    ac38:	cset	w0, cs  // cs = hs, nlast
    ac3c:	and	w0, w0, #0xff
    ac40:	and	x0, x0, #0xff
    ac44:	cmp	x0, #0x0
    ac48:	b.eq	ac6c <__lsan_do_recoverable_leak_check@@Base+0xae0>  // b.none
    ac4c:	ldr	x4, [sp, #32]
    ac50:	ldr	x3, [sp, #40]
    ac54:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    ac58:	add	x2, x0, #0xe60
    ac5c:	mov	w1, #0x1b6                 	// #438
    ac60:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    ac64:	add	x0, x0, #0xe00
    ac68:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    ac6c:	ldr	x0, [sp, #24]
    ac70:	ldr	x1, [x0]
    ac74:	ldr	x0, [sp, #16]
    ac78:	add	x0, x1, x0
    ac7c:	ldr	x30, [sp], #48
    ac80:	ret
    ac84:	str	x30, [sp, #-32]!
    ac88:	str	x0, [sp, #24]
    ac8c:	ldr	x0, [sp, #24]
    ac90:	mov	x1, #0x1                   	// #1
    ac94:	bl	bed0 <__lsan_do_recoverable_leak_check@@Base+0x1d44>
    ac98:	nop
    ac9c:	ldr	x30, [sp], #32
    aca0:	ret
    aca4:	str	x30, [sp, #-32]!
    aca8:	str	x0, [sp, #24]
    acac:	ldr	x0, [sp, #24]
    acb0:	bl	bf0c <__lsan_do_recoverable_leak_check@@Base+0x1d80>
    acb4:	nop
    acb8:	ldr	x30, [sp], #32
    acbc:	ret
    acc0:	str	x30, [sp, #-32]!
    acc4:	str	x0, [sp, #24]
    acc8:	ldr	x0, [sp, #24]
    accc:	mov	x1, #0x1                   	// #1
    acd0:	bl	bf3c <__lsan_do_recoverable_leak_check@@Base+0x1db0>
    acd4:	nop
    acd8:	ldr	x30, [sp], #32
    acdc:	ret
    ace0:	str	x30, [sp, #-32]!
    ace4:	str	x0, [sp, #24]
    ace8:	ldr	x0, [sp, #24]
    acec:	bl	bf78 <__lsan_do_recoverable_leak_check@@Base+0x1dec>
    acf0:	nop
    acf4:	ldr	x30, [sp], #32
    acf8:	ret
    acfc:	str	x30, [sp, #-32]!
    ad00:	str	x0, [sp, #24]
    ad04:	ldr	x0, [sp, #24]
    ad08:	mov	x1, #0x1                   	// #1
    ad0c:	bl	c080 <__lsan_do_recoverable_leak_check@@Base+0x1ef4>
    ad10:	nop
    ad14:	ldr	x30, [sp], #32
    ad18:	ret
    ad1c:	stp	x19, x30, [sp, #-64]!
    ad20:	str	x0, [sp, #24]
    ad24:	str	x1, [sp, #16]
    ad28:	ldr	x0, [sp, #24]
    ad2c:	ldr	x0, [x0, #16]
    ad30:	str	x0, [sp, #56]
    ad34:	ldr	x0, [sp, #24]
    ad38:	bl	c0bc <__lsan_do_recoverable_leak_check@@Base+0x1f30>
    ad3c:	str	x0, [sp, #48]
    ad40:	ldr	x1, [sp, #56]
    ad44:	ldr	x0, [sp, #48]
    ad48:	cmp	x1, x0
    ad4c:	cset	w0, hi  // hi = pmore
    ad50:	and	w0, w0, #0xff
    ad54:	and	x0, x0, #0xff
    ad58:	cmp	x0, #0x0
    ad5c:	b.eq	ad80 <__lsan_do_recoverable_leak_check@@Base+0xbf4>  // b.none
    ad60:	ldr	x4, [sp, #48]
    ad64:	ldr	x3, [sp, #56]
    ad68:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    ad6c:	add	x2, x0, #0xe78
    ad70:	mov	w1, #0x1be                 	// #446
    ad74:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    ad78:	add	x0, x0, #0xe00
    ad7c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    ad80:	ldr	x0, [sp, #24]
    ad84:	ldr	x19, [x0, #16]
    ad88:	ldr	x0, [sp, #24]
    ad8c:	bl	c0bc <__lsan_do_recoverable_leak_check@@Base+0x1f30>
    ad90:	cmp	x19, x0
    ad94:	cset	w0, eq  // eq = none
    ad98:	and	w0, w0, #0xff
    ad9c:	cmp	w0, #0x0
    ada0:	b.eq	adc4 <__lsan_do_recoverable_leak_check@@Base+0xc38>  // b.none
    ada4:	ldr	x0, [sp, #24]
    ada8:	ldr	x0, [x0, #16]
    adac:	add	x0, x0, #0x1
    adb0:	bl	a3cc <__lsan_do_recoverable_leak_check@@Base+0x240>
    adb4:	str	x0, [sp, #40]
    adb8:	ldr	x1, [sp, #40]
    adbc:	ldr	x0, [sp, #24]
    adc0:	bl	c0d8 <__lsan_do_recoverable_leak_check@@Base+0x1f4c>
    adc4:	ldr	x0, [sp, #24]
    adc8:	ldr	x1, [x0]
    adcc:	ldr	x0, [sp, #24]
    add0:	ldr	x0, [x0, #16]
    add4:	add	x3, x0, #0x1
    add8:	ldr	x2, [sp, #24]
    addc:	str	x3, [x2, #16]
    ade0:	lsl	x0, x0, #3
    ade4:	add	x0, x1, x0
    ade8:	mov	x2, #0x8                   	// #8
    adec:	ldr	x1, [sp, #16]
    adf0:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
    adf4:	nop
    adf8:	ldp	x19, x30, [sp], #64
    adfc:	ret
    ae00:	str	x30, [sp, #-32]!
    ae04:	str	x0, [sp, #24]
    ae08:	str	x1, [sp, #16]
    ae0c:	ldr	x0, [sp, #24]
    ae10:	ldr	x1, [sp, #16]
    ae14:	bl	c218 <__lsan_do_recoverable_leak_check@@Base+0x208c>
    ae18:	ldr	x0, [sp, #24]
    ae1c:	ldr	x1, [sp, #16]
    ae20:	bl	c254 <__lsan_do_recoverable_leak_check@@Base+0x20c8>
    ae24:	nop
    ae28:	ldr	x30, [sp], #32
    ae2c:	ret
    ae30:	str	x30, [sp, #-32]!
    ae34:	str	x0, [sp, #24]
    ae38:	ldr	x0, [sp, #24]
    ae3c:	bl	c2d4 <__lsan_do_recoverable_leak_check@@Base+0x2148>
    ae40:	nop
    ae44:	ldr	x30, [sp], #32
    ae48:	ret
    ae4c:	sub	sp, sp, #0x10
    ae50:	str	x0, [sp, #8]
    ae54:	ldr	x0, [sp, #8]
    ae58:	ldr	x0, [x0]
    ae5c:	add	sp, sp, #0x10
    ae60:	ret
    ae64:	sub	sp, sp, #0x10
    ae68:	str	x0, [sp, #8]
    ae6c:	ldr	x0, [sp, #8]
    ae70:	ldr	x0, [x0, #16]
    ae74:	add	sp, sp, #0x10
    ae78:	ret
    ae7c:	sub	sp, sp, #0x10
    ae80:	str	x0, [sp, #8]
    ae84:	str	x1, [sp]
    ae88:	ldr	x1, [sp, #8]
    ae8c:	ldr	x0, [sp]
    ae90:	cmp	x1, x0
    ae94:	b.ls	aea0 <__lsan_do_recoverable_leak_check@@Base+0xd14>  // b.plast
    ae98:	ldr	x0, [sp, #8]
    ae9c:	b	aea4 <__lsan_do_recoverable_leak_check@@Base+0xd18>
    aea0:	ldr	x0, [sp]
    aea4:	add	sp, sp, #0x10
    aea8:	ret
    aeac:	sub	sp, sp, #0x10
    aeb0:	str	x0, [sp, #8]
    aeb4:	str	x1, [sp]
    aeb8:	ldr	x1, [sp, #8]
    aebc:	ldr	x0, [sp]
    aec0:	cmp	x1, x0
    aec4:	b.cs	aed0 <__lsan_do_recoverable_leak_check@@Base+0xd44>  // b.hs, b.nlast
    aec8:	ldr	x0, [sp, #8]
    aecc:	b	aed4 <__lsan_do_recoverable_leak_check@@Base+0xd48>
    aed0:	ldr	x0, [sp]
    aed4:	add	sp, sp, #0x10
    aed8:	ret
    aedc:	sub	sp, sp, #0x10
    aee0:	str	x0, [sp, #8]
    aee4:	ldr	x0, [sp, #8]
    aee8:	ldr	x0, [x0, #16]
    aeec:	add	sp, sp, #0x10
    aef0:	ret
    aef4:	str	x30, [sp, #-48]!
    aef8:	str	x0, [sp, #24]
    aefc:	str	x1, [sp, #16]
    af00:	ldr	x0, [sp, #16]
    af04:	str	x0, [sp, #40]
    af08:	ldr	x0, [sp, #24]
    af0c:	ldr	x0, [x0, #16]
    af10:	str	x0, [sp, #32]
    af14:	ldr	x1, [sp, #40]
    af18:	ldr	x0, [sp, #32]
    af1c:	cmp	x1, x0
    af20:	cset	w0, cs  // cs = hs, nlast
    af24:	and	w0, w0, #0xff
    af28:	and	x0, x0, #0xff
    af2c:	cmp	x0, #0x0
    af30:	b.eq	af54 <__lsan_do_recoverable_leak_check@@Base+0xdc8>  // b.none
    af34:	ldr	x4, [sp, #32]
    af38:	ldr	x3, [sp, #40]
    af3c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    af40:	add	x2, x0, #0xe60
    af44:	mov	w1, #0x1b6                 	// #438
    af48:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    af4c:	add	x0, x0, #0xe00
    af50:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    af54:	ldr	x0, [sp, #24]
    af58:	ldr	x1, [x0]
    af5c:	ldr	x0, [sp, #16]
    af60:	lsl	x0, x0, #4
    af64:	add	x0, x1, x0
    af68:	ldr	x30, [sp], #48
    af6c:	ret
    af70:	str	x30, [sp, #-48]!
    af74:	str	x0, [sp, #24]
    af78:	ldr	x0, [sp, #24]
    af7c:	ldr	x0, [x0, #16]
    af80:	str	x0, [sp, #40]
    af84:	str	xzr, [sp, #32]
    af88:	ldr	x1, [sp, #40]
    af8c:	ldr	x0, [sp, #32]
    af90:	cmp	x1, x0
    af94:	cset	w0, ls  // ls = plast
    af98:	and	w0, w0, #0xff
    af9c:	and	x0, x0, #0xff
    afa0:	cmp	x0, #0x0
    afa4:	b.eq	afc8 <__lsan_do_recoverable_leak_check@@Base+0xe3c>  // b.none
    afa8:	ldr	x4, [sp, #32]
    afac:	ldr	x3, [sp, #40]
    afb0:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    afb4:	add	x2, x0, #0xe98
    afb8:	mov	w1, #0x1c6                 	// #454
    afbc:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    afc0:	add	x0, x0, #0xe00
    afc4:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    afc8:	ldr	x0, [sp, #24]
    afcc:	ldr	x1, [x0]
    afd0:	ldr	x0, [sp, #24]
    afd4:	ldr	x0, [x0, #16]
    afd8:	lsl	x0, x0, #3
    afdc:	sub	x0, x0, #0x8
    afe0:	add	x0, x1, x0
    afe4:	ldr	x30, [sp], #48
    afe8:	ret
    afec:	str	x30, [sp, #-48]!
    aff0:	str	x0, [sp, #24]
    aff4:	ldr	x0, [sp, #24]
    aff8:	ldr	x0, [x0, #16]
    affc:	str	x0, [sp, #40]
    b000:	str	xzr, [sp, #32]
    b004:	ldr	x1, [sp, #40]
    b008:	ldr	x0, [sp, #32]
    b00c:	cmp	x1, x0
    b010:	cset	w0, ls  // ls = plast
    b014:	and	w0, w0, #0xff
    b018:	and	x0, x0, #0xff
    b01c:	cmp	x0, #0x0
    b020:	b.eq	b044 <__lsan_do_recoverable_leak_check@@Base+0xeb8>  // b.none
    b024:	ldr	x4, [sp, #32]
    b028:	ldr	x3, [sp, #40]
    b02c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    b030:	add	x2, x0, #0xe98
    b034:	mov	w1, #0x1ca                 	// #458
    b038:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    b03c:	add	x0, x0, #0xe00
    b040:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    b044:	ldr	x0, [sp, #24]
    b048:	ldr	x0, [x0, #16]
    b04c:	sub	x1, x0, #0x1
    b050:	ldr	x0, [sp, #24]
    b054:	str	x1, [x0, #16]
    b058:	nop
    b05c:	ldr	x30, [sp], #48
    b060:	ret
    b064:	str	x30, [sp, #-32]!
    b068:	str	x0, [sp, #24]
    b06c:	ldr	x0, [sp, #24]
    b070:	bl	c304 <__lsan_do_recoverable_leak_check@@Base+0x2178>
    b074:	nop
    b078:	ldr	x30, [sp], #32
    b07c:	ret
    b080:	str	x30, [sp, #-32]!
    b084:	str	x0, [sp, #24]
    b088:	ldr	x0, [sp, #24]
    b08c:	mov	x1, #0x1                   	// #1
    b090:	bl	c218 <__lsan_do_recoverable_leak_check@@Base+0x208c>
    b094:	nop
    b098:	ldr	x30, [sp], #32
    b09c:	ret
    b0a0:	sub	sp, sp, #0x10
    b0a4:	str	w0, [sp, #12]
    b0a8:	str	w1, [sp, #8]
    b0ac:	ldr	w1, [sp, #12]
    b0b0:	ldr	w0, [sp, #8]
    b0b4:	cmp	w1, w0
    b0b8:	b.cs	b0c4 <__lsan_do_recoverable_leak_check@@Base+0xf38>  // b.hs, b.nlast
    b0bc:	ldr	w0, [sp, #12]
    b0c0:	b	b0c8 <__lsan_do_recoverable_leak_check@@Base+0xf3c>
    b0c4:	ldr	w0, [sp, #8]
    b0c8:	add	sp, sp, #0x10
    b0cc:	ret
    b0d0:	str	x30, [sp, #-32]!
    b0d4:	str	x0, [sp, #24]
    b0d8:	ldr	x0, [sp, #24]
    b0dc:	mov	x1, #0x1                   	// #1
    b0e0:	bl	c334 <__lsan_do_recoverable_leak_check@@Base+0x21a8>
    b0e4:	nop
    b0e8:	ldr	x30, [sp], #32
    b0ec:	ret
    b0f0:	str	x30, [sp, #-32]!
    b0f4:	str	x0, [sp, #24]
    b0f8:	ldr	x0, [sp, #24]
    b0fc:	bl	c370 <__lsan_do_recoverable_leak_check@@Base+0x21e4>
    b100:	nop
    b104:	ldr	x30, [sp], #32
    b108:	ret
    b10c:	sub	sp, sp, #0x10
    b110:	str	x0, [sp, #8]
    b114:	ldr	x0, [sp, #8]
    b118:	ldr	x0, [x0, #16]
    b11c:	add	sp, sp, #0x10
    b120:	ret
    b124:	str	x30, [sp, #-48]!
    b128:	str	x0, [sp, #24]
    b12c:	str	x1, [sp, #16]
    b130:	ldr	x0, [sp, #16]
    b134:	str	x0, [sp, #40]
    b138:	ldr	x0, [sp, #24]
    b13c:	ldr	x0, [x0, #16]
    b140:	str	x0, [sp, #32]
    b144:	ldr	x1, [sp, #40]
    b148:	ldr	x0, [sp, #32]
    b14c:	cmp	x1, x0
    b150:	cset	w0, cs  // cs = hs, nlast
    b154:	and	w0, w0, #0xff
    b158:	and	x0, x0, #0xff
    b15c:	cmp	x0, #0x0
    b160:	b.eq	b184 <__lsan_do_recoverable_leak_check@@Base+0xff8>  // b.none
    b164:	ldr	x4, [sp, #32]
    b168:	ldr	x3, [sp, #40]
    b16c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    b170:	add	x2, x0, #0xe60
    b174:	mov	w1, #0x1b6                 	// #438
    b178:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    b17c:	add	x0, x0, #0xe00
    b180:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    b184:	ldr	x0, [sp, #24]
    b188:	ldr	x1, [x0]
    b18c:	ldr	x0, [sp, #16]
    b190:	lsl	x0, x0, #3
    b194:	add	x0, x1, x0
    b198:	ldr	x30, [sp], #48
    b19c:	ret
    b1a0:	str	x30, [sp, #-32]!
    b1a4:	str	x0, [sp, #24]
    b1a8:	mov	w1, #0x1                   	// #1
    b1ac:	ldr	x0, [sp, #24]
    b1b0:	bl	ab3c <__lsan_do_recoverable_leak_check@@Base+0x9b0>
    b1b4:	ldr	x30, [sp], #32
    b1b8:	ret
    b1bc:	sub	sp, sp, #0x10
    b1c0:	str	x0, [sp, #8]
    b1c4:	ldr	x0, [sp, #8]
    b1c8:	ldr	x0, [x0, #16]
    b1cc:	add	sp, sp, #0x10
    b1d0:	ret
    b1d4:	str	x30, [sp, #-80]!
    b1d8:	str	x0, [sp, #56]
    b1dc:	str	x1, [sp, #48]
    b1e0:	str	x2, [sp, #40]
    b1e4:	str	x3, [sp, #32]
    b1e8:	strb	w4, [sp, #24]
    b1ec:	ldr	x1, [sp, #40]
    b1f0:	ldr	x0, [sp, #48]
    b1f4:	cmp	x1, x0
    b1f8:	b.ls	b268 <__lsan_do_recoverable_leak_check@@Base+0x10dc>  // b.plast
    b1fc:	ldr	x1, [sp, #48]
    b200:	ldr	x0, [sp, #40]
    b204:	add	x0, x1, x0
    b208:	lsr	x0, x0, #1
    b20c:	str	x0, [sp, #72]
    b210:	ldr	x0, [sp, #56]
    b214:	ldr	x1, [sp, #72]
    b218:	bl	b274 <__lsan_do_recoverable_leak_check@@Base+0x10e8>
    b21c:	ldr	x0, [x0]
    b220:	str	w0, [sp, #64]
    b224:	ldr	x0, [sp, #32]
    b228:	ldr	x0, [x0]
    b22c:	str	w0, [sp, #68]
    b230:	add	x2, sp, #0x44
    b234:	add	x1, sp, #0x40
    b238:	add	x0, sp, #0x18
    b23c:	bl	c3a0 <__lsan_do_recoverable_leak_check@@Base+0x2214>
    b240:	and	w0, w0, #0xff
    b244:	cmp	w0, #0x0
    b248:	b.eq	b25c <__lsan_do_recoverable_leak_check@@Base+0x10d0>  // b.none
    b24c:	ldr	x0, [sp, #72]
    b250:	add	x0, x0, #0x1
    b254:	str	x0, [sp, #48]
    b258:	b	b1ec <__lsan_do_recoverable_leak_check@@Base+0x1060>
    b25c:	ldr	x0, [sp, #72]
    b260:	str	x0, [sp, #40]
    b264:	b	b1ec <__lsan_do_recoverable_leak_check@@Base+0x1060>
    b268:	ldr	x0, [sp, #48]
    b26c:	ldr	x30, [sp], #80
    b270:	ret
    b274:	str	x30, [sp, #-48]!
    b278:	str	x0, [sp, #24]
    b27c:	str	x1, [sp, #16]
    b280:	ldr	x0, [sp, #16]
    b284:	str	x0, [sp, #40]
    b288:	ldr	x0, [sp, #24]
    b28c:	ldr	x0, [x0, #16]
    b290:	str	x0, [sp, #32]
    b294:	ldr	x1, [sp, #40]
    b298:	ldr	x0, [sp, #32]
    b29c:	cmp	x1, x0
    b2a0:	cset	w0, cs  // cs = hs, nlast
    b2a4:	and	w0, w0, #0xff
    b2a8:	and	x0, x0, #0xff
    b2ac:	cmp	x0, #0x0
    b2b0:	b.eq	b2d4 <__lsan_do_recoverable_leak_check@@Base+0x1148>  // b.none
    b2b4:	ldr	x4, [sp, #32]
    b2b8:	ldr	x3, [sp, #40]
    b2bc:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    b2c0:	add	x2, x0, #0xe60
    b2c4:	mov	w1, #0x1ba                 	// #442
    b2c8:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    b2cc:	add	x0, x0, #0xe00
    b2d0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    b2d4:	ldr	x0, [sp, #24]
    b2d8:	ldr	x1, [x0]
    b2dc:	ldr	x0, [sp, #16]
    b2e0:	lsl	x0, x0, #3
    b2e4:	add	x0, x1, x0
    b2e8:	ldr	x30, [sp], #48
    b2ec:	ret
    b2f0:	str	x30, [sp, #-32]!
    b2f4:	str	x0, [sp, #24]
    b2f8:	str	x1, [sp, #16]
    b2fc:	ldr	x0, [sp, #24]
    b300:	ldr	x1, [sp, #16]
    b304:	bl	c3d4 <__lsan_do_recoverable_leak_check@@Base+0x2248>
    b308:	ldr	x0, [sp, #24]
    b30c:	ldr	x1, [sp, #16]
    b310:	bl	c410 <__lsan_do_recoverable_leak_check@@Base+0x2284>
    b314:	nop
    b318:	ldr	x30, [sp], #32
    b31c:	ret
    b320:	str	x30, [sp, #-32]!
    b324:	str	x0, [sp, #24]
    b328:	ldr	x0, [sp, #24]
    b32c:	bl	c490 <__lsan_do_recoverable_leak_check@@Base+0x2304>
    b330:	nop
    b334:	ldr	x30, [sp], #32
    b338:	ret
    b33c:	str	x30, [sp, #-48]!
    b340:	str	x0, [sp, #24]
    b344:	str	x1, [sp, #16]
    b348:	ldr	x0, [sp, #16]
    b34c:	str	x0, [sp, #40]
    b350:	ldr	x0, [sp, #24]
    b354:	ldr	x0, [x0, #16]
    b358:	str	x0, [sp, #32]
    b35c:	ldr	x1, [sp, #40]
    b360:	ldr	x0, [sp, #32]
    b364:	cmp	x1, x0
    b368:	cset	w0, cs  // cs = hs, nlast
    b36c:	and	w0, w0, #0xff
    b370:	and	x0, x0, #0xff
    b374:	cmp	x0, #0x0
    b378:	b.eq	b39c <__lsan_do_recoverable_leak_check@@Base+0x1210>  // b.none
    b37c:	ldr	x4, [sp, #32]
    b380:	ldr	x3, [sp, #40]
    b384:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    b388:	add	x2, x0, #0xe60
    b38c:	mov	w1, #0x1b6                 	// #438
    b390:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    b394:	add	x0, x0, #0xe00
    b398:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    b39c:	ldr	x0, [sp, #24]
    b3a0:	ldr	x1, [x0]
    b3a4:	ldr	x0, [sp, #16]
    b3a8:	lsl	x0, x0, #3
    b3ac:	add	x0, x1, x0
    b3b0:	ldr	x30, [sp], #48
    b3b4:	ret
    b3b8:	sub	sp, sp, #0x10
    b3bc:	str	x0, [sp, #8]
    b3c0:	ldr	x0, [sp, #8]
    b3c4:	ldr	x0, [x0]
    b3c8:	add	sp, sp, #0x10
    b3cc:	ret
    b3d0:	str	x30, [sp, #-112]!
    b3d4:	str	x0, [sp, #40]
    b3d8:	str	x1, [sp, #32]
    b3dc:	strb	w2, [sp, #24]
    b3e0:	ldr	x0, [sp, #32]
    b3e4:	cmp	x0, #0x1
    b3e8:	b.ls	b64c <__lsan_do_recoverable_leak_check@@Base+0x14c0>  // b.plast
    b3ec:	mov	x0, #0x1                   	// #1
    b3f0:	str	x0, [sp, #104]
    b3f4:	ldr	x1, [sp, #104]
    b3f8:	ldr	x0, [sp, #32]
    b3fc:	cmp	x1, x0
    b400:	b.cs	b4b0 <__lsan_do_recoverable_leak_check@@Base+0x1324>  // b.hs, b.nlast
    b404:	ldr	x0, [sp, #104]
    b408:	str	x0, [sp, #96]
    b40c:	ldr	x0, [sp, #96]
    b410:	cmp	x0, #0x0
    b414:	b.eq	b4a0 <__lsan_do_recoverable_leak_check@@Base+0x1314>  // b.none
    b418:	ldr	x0, [sp, #96]
    b41c:	sub	x0, x0, #0x1
    b420:	lsr	x0, x0, #1
    b424:	str	x0, [sp, #64]
    b428:	ldr	x0, [sp, #64]
    b42c:	lsl	x0, x0, #3
    b430:	ldr	x1, [sp, #40]
    b434:	add	x3, x1, x0
    b438:	ldr	x0, [sp, #96]
    b43c:	lsl	x0, x0, #3
    b440:	ldr	x1, [sp, #40]
    b444:	add	x1, x1, x0
    b448:	add	x0, sp, #0x18
    b44c:	mov	x2, x1
    b450:	mov	x1, x3
    b454:	bl	c4c0 <__lsan_do_recoverable_leak_check@@Base+0x2334>
    b458:	and	w0, w0, #0xff
    b45c:	cmp	w0, #0x0
    b460:	b.eq	b49c <__lsan_do_recoverable_leak_check@@Base+0x1310>  // b.none
    b464:	ldr	x0, [sp, #96]
    b468:	lsl	x0, x0, #3
    b46c:	ldr	x1, [sp, #40]
    b470:	add	x2, x1, x0
    b474:	ldr	x0, [sp, #64]
    b478:	lsl	x0, x0, #3
    b47c:	ldr	x1, [sp, #40]
    b480:	add	x0, x1, x0
    b484:	mov	x1, x0
    b488:	mov	x0, x2
    b48c:	bl	c4f4 <__lsan_do_recoverable_leak_check@@Base+0x2368>
    b490:	ldr	x0, [sp, #64]
    b494:	str	x0, [sp, #96]
    b498:	b	b40c <__lsan_do_recoverable_leak_check@@Base+0x1280>
    b49c:	nop
    b4a0:	ldr	x0, [sp, #104]
    b4a4:	add	x0, x0, #0x1
    b4a8:	str	x0, [sp, #104]
    b4ac:	b	b3f4 <__lsan_do_recoverable_leak_check@@Base+0x1268>
    b4b0:	ldr	x0, [sp, #32]
    b4b4:	sub	x0, x0, #0x1
    b4b8:	str	x0, [sp, #88]
    b4bc:	ldr	x0, [sp, #88]
    b4c0:	cmp	x0, #0x0
    b4c4:	b.eq	b650 <__lsan_do_recoverable_leak_check@@Base+0x14c4>  // b.none
    b4c8:	ldr	x0, [sp, #88]
    b4cc:	lsl	x0, x0, #3
    b4d0:	ldr	x1, [sp, #40]
    b4d4:	add	x0, x1, x0
    b4d8:	mov	x1, x0
    b4dc:	ldr	x0, [sp, #40]
    b4e0:	bl	c4f4 <__lsan_do_recoverable_leak_check@@Base+0x2368>
    b4e4:	str	xzr, [sp, #80]
    b4e8:	ldr	x1, [sp, #80]
    b4ec:	ldr	x0, [sp, #88]
    b4f0:	cmp	x1, x0
    b4f4:	b.cs	b63c <__lsan_do_recoverable_leak_check@@Base+0x14b0>  // b.hs, b.nlast
    b4f8:	ldr	x0, [sp, #80]
    b4fc:	lsl	x0, x0, #1
    b500:	add	x0, x0, #0x1
    b504:	str	x0, [sp, #56]
    b508:	ldr	x0, [sp, #80]
    b50c:	add	x0, x0, #0x1
    b510:	lsl	x0, x0, #1
    b514:	str	x0, [sp, #48]
    b518:	ldr	x0, [sp, #80]
    b51c:	str	x0, [sp, #72]
    b520:	ldr	x1, [sp, #56]
    b524:	ldr	x0, [sp, #88]
    b528:	cmp	x1, x0
    b52c:	b.cs	b574 <__lsan_do_recoverable_leak_check@@Base+0x13e8>  // b.hs, b.nlast
    b530:	ldr	x0, [sp, #72]
    b534:	lsl	x0, x0, #3
    b538:	ldr	x1, [sp, #40]
    b53c:	add	x3, x1, x0
    b540:	ldr	x0, [sp, #56]
    b544:	lsl	x0, x0, #3
    b548:	ldr	x1, [sp, #40]
    b54c:	add	x1, x1, x0
    b550:	add	x0, sp, #0x18
    b554:	mov	x2, x1
    b558:	mov	x1, x3
    b55c:	bl	c4c0 <__lsan_do_recoverable_leak_check@@Base+0x2334>
    b560:	and	w0, w0, #0xff
    b564:	cmp	w0, #0x0
    b568:	b.eq	b574 <__lsan_do_recoverable_leak_check@@Base+0x13e8>  // b.none
    b56c:	mov	w0, #0x1                   	// #1
    b570:	b	b578 <__lsan_do_recoverable_leak_check@@Base+0x13ec>
    b574:	mov	w0, #0x0                   	// #0
    b578:	cmp	w0, #0x0
    b57c:	b.eq	b588 <__lsan_do_recoverable_leak_check@@Base+0x13fc>  // b.none
    b580:	ldr	x0, [sp, #56]
    b584:	str	x0, [sp, #72]
    b588:	ldr	x1, [sp, #48]
    b58c:	ldr	x0, [sp, #88]
    b590:	cmp	x1, x0
    b594:	b.cs	b5dc <__lsan_do_recoverable_leak_check@@Base+0x1450>  // b.hs, b.nlast
    b598:	ldr	x0, [sp, #72]
    b59c:	lsl	x0, x0, #3
    b5a0:	ldr	x1, [sp, #40]
    b5a4:	add	x3, x1, x0
    b5a8:	ldr	x0, [sp, #48]
    b5ac:	lsl	x0, x0, #3
    b5b0:	ldr	x1, [sp, #40]
    b5b4:	add	x1, x1, x0
    b5b8:	add	x0, sp, #0x18
    b5bc:	mov	x2, x1
    b5c0:	mov	x1, x3
    b5c4:	bl	c4c0 <__lsan_do_recoverable_leak_check@@Base+0x2334>
    b5c8:	and	w0, w0, #0xff
    b5cc:	cmp	w0, #0x0
    b5d0:	b.eq	b5dc <__lsan_do_recoverable_leak_check@@Base+0x1450>  // b.none
    b5d4:	mov	w0, #0x1                   	// #1
    b5d8:	b	b5e0 <__lsan_do_recoverable_leak_check@@Base+0x1454>
    b5dc:	mov	w0, #0x0                   	// #0
    b5e0:	cmp	w0, #0x0
    b5e4:	b.eq	b5f0 <__lsan_do_recoverable_leak_check@@Base+0x1464>  // b.none
    b5e8:	ldr	x0, [sp, #48]
    b5ec:	str	x0, [sp, #72]
    b5f0:	ldr	x1, [sp, #72]
    b5f4:	ldr	x0, [sp, #80]
    b5f8:	cmp	x1, x0
    b5fc:	b.eq	b638 <__lsan_do_recoverable_leak_check@@Base+0x14ac>  // b.none
    b600:	ldr	x0, [sp, #80]
    b604:	lsl	x0, x0, #3
    b608:	ldr	x1, [sp, #40]
    b60c:	add	x2, x1, x0
    b610:	ldr	x0, [sp, #72]
    b614:	lsl	x0, x0, #3
    b618:	ldr	x1, [sp, #40]
    b61c:	add	x0, x1, x0
    b620:	mov	x1, x0
    b624:	mov	x0, x2
    b628:	bl	c4f4 <__lsan_do_recoverable_leak_check@@Base+0x2368>
    b62c:	ldr	x0, [sp, #72]
    b630:	str	x0, [sp, #80]
    b634:	b	b4e8 <__lsan_do_recoverable_leak_check@@Base+0x135c>
    b638:	nop
    b63c:	ldr	x0, [sp, #88]
    b640:	sub	x0, x0, #0x1
    b644:	str	x0, [sp, #88]
    b648:	b	b4bc <__lsan_do_recoverable_leak_check@@Base+0x1330>
    b64c:	nop
    b650:	ldr	x30, [sp], #112
    b654:	ret
    b658:	str	x30, [sp, #-32]!
    b65c:	str	x0, [sp, #24]
    b660:	str	x1, [sp, #16]
    b664:	ldr	x0, [sp, #24]
    b668:	ldr	x1, [sp, #16]
    b66c:	str	x1, [x0]
    b670:	ldr	x0, [sp, #24]
    b674:	ldr	x0, [x0]
    b678:	bl	239ec <__sanitizer_set_report_fd@@Base+0x47f4>
    b67c:	nop
    b680:	ldr	x30, [sp], #32
    b684:	ret
    b688:	str	x30, [sp, #-32]!
    b68c:	str	x0, [sp, #24]
    b690:	ldr	x0, [sp, #24]
    b694:	ldr	x0, [x0]
    b698:	bl	23ac8 <__sanitizer_set_report_fd@@Base+0x48d0>
    b69c:	nop
    b6a0:	ldr	x30, [sp], #32
    b6a4:	ret
    b6a8:	sub	sp, sp, #0x10
    b6ac:	str	x0, [sp, #8]
    b6b0:	ldr	x0, [sp, #8]
    b6b4:	ldr	x0, [x0, #16]
    b6b8:	add	sp, sp, #0x10
    b6bc:	ret
    b6c0:	str	x30, [sp, #-48]!
    b6c4:	str	x0, [sp, #24]
    b6c8:	str	x1, [sp, #16]
    b6cc:	ldr	x0, [sp, #16]
    b6d0:	str	x0, [sp, #40]
    b6d4:	ldr	x0, [sp, #24]
    b6d8:	ldr	x0, [x0, #16]
    b6dc:	str	x0, [sp, #32]
    b6e0:	ldr	x1, [sp, #40]
    b6e4:	ldr	x0, [sp, #32]
    b6e8:	cmp	x1, x0
    b6ec:	cset	w0, cs  // cs = hs, nlast
    b6f0:	and	w0, w0, #0xff
    b6f4:	and	x0, x0, #0xff
    b6f8:	cmp	x0, #0x0
    b6fc:	b.eq	b720 <__lsan_do_recoverable_leak_check@@Base+0x1594>  // b.none
    b700:	ldr	x4, [sp, #32]
    b704:	ldr	x3, [sp, #40]
    b708:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    b70c:	add	x2, x0, #0xe60
    b710:	mov	w1, #0x1b6                 	// #438
    b714:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    b718:	add	x0, x0, #0xe00
    b71c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    b720:	ldr	x0, [sp, #24]
    b724:	ldr	x1, [x0]
    b728:	ldr	x0, [sp, #16]
    b72c:	lsl	x0, x0, #5
    b730:	add	x0, x1, x0
    b734:	ldr	x30, [sp], #48
    b738:	ret
    b73c:	stp	x19, x30, [sp, #-64]!
    b740:	str	x0, [sp, #24]
    b744:	str	x1, [sp, #16]
    b748:	ldr	x0, [sp, #24]
    b74c:	ldr	x0, [x0, #16]
    b750:	str	x0, [sp, #56]
    b754:	ldr	x0, [sp, #24]
    b758:	bl	c534 <__lsan_do_recoverable_leak_check@@Base+0x23a8>
    b75c:	str	x0, [sp, #48]
    b760:	ldr	x1, [sp, #56]
    b764:	ldr	x0, [sp, #48]
    b768:	cmp	x1, x0
    b76c:	cset	w0, hi  // hi = pmore
    b770:	and	w0, w0, #0xff
    b774:	and	x0, x0, #0xff
    b778:	cmp	x0, #0x0
    b77c:	b.eq	b7a0 <__lsan_do_recoverable_leak_check@@Base+0x1614>  // b.none
    b780:	ldr	x4, [sp, #48]
    b784:	ldr	x3, [sp, #56]
    b788:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    b78c:	add	x2, x0, #0xe78
    b790:	mov	w1, #0x1be                 	// #446
    b794:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    b798:	add	x0, x0, #0xe00
    b79c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    b7a0:	ldr	x0, [sp, #24]
    b7a4:	ldr	x19, [x0, #16]
    b7a8:	ldr	x0, [sp, #24]
    b7ac:	bl	c534 <__lsan_do_recoverable_leak_check@@Base+0x23a8>
    b7b0:	cmp	x19, x0
    b7b4:	cset	w0, eq  // eq = none
    b7b8:	and	w0, w0, #0xff
    b7bc:	cmp	w0, #0x0
    b7c0:	b.eq	b7e4 <__lsan_do_recoverable_leak_check@@Base+0x1658>  // b.none
    b7c4:	ldr	x0, [sp, #24]
    b7c8:	ldr	x0, [x0, #16]
    b7cc:	add	x0, x0, #0x1
    b7d0:	bl	a3cc <__lsan_do_recoverable_leak_check@@Base+0x240>
    b7d4:	str	x0, [sp, #40]
    b7d8:	ldr	x1, [sp, #40]
    b7dc:	ldr	x0, [sp, #24]
    b7e0:	bl	c550 <__lsan_do_recoverable_leak_check@@Base+0x23c4>
    b7e4:	ldr	x0, [sp, #24]
    b7e8:	ldr	x1, [x0]
    b7ec:	ldr	x0, [sp, #24]
    b7f0:	ldr	x0, [x0, #16]
    b7f4:	add	x3, x0, #0x1
    b7f8:	ldr	x2, [sp, #24]
    b7fc:	str	x3, [x2, #16]
    b800:	lsl	x0, x0, #5
    b804:	add	x0, x1, x0
    b808:	mov	x2, #0x20                  	// #32
    b80c:	ldr	x1, [sp, #16]
    b810:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
    b814:	nop
    b818:	ldp	x19, x30, [sp], #64
    b81c:	ret
    b820:	stp	x19, x30, [sp, #-64]!
    b824:	str	x0, [sp, #24]
    b828:	str	x1, [sp, #16]
    b82c:	ldr	x0, [sp, #24]
    b830:	ldr	x0, [x0, #16]
    b834:	str	x0, [sp, #56]
    b838:	ldr	x0, [sp, #24]
    b83c:	bl	c690 <__lsan_do_recoverable_leak_check@@Base+0x2504>
    b840:	str	x0, [sp, #48]
    b844:	ldr	x1, [sp, #56]
    b848:	ldr	x0, [sp, #48]
    b84c:	cmp	x1, x0
    b850:	cset	w0, hi  // hi = pmore
    b854:	and	w0, w0, #0xff
    b858:	and	x0, x0, #0xff
    b85c:	cmp	x0, #0x0
    b860:	b.eq	b884 <__lsan_do_recoverable_leak_check@@Base+0x16f8>  // b.none
    b864:	ldr	x4, [sp, #48]
    b868:	ldr	x3, [sp, #56]
    b86c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    b870:	add	x2, x0, #0xe78
    b874:	mov	w1, #0x1be                 	// #446
    b878:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    b87c:	add	x0, x0, #0xe00
    b880:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    b884:	ldr	x0, [sp, #24]
    b888:	ldr	x19, [x0, #16]
    b88c:	ldr	x0, [sp, #24]
    b890:	bl	c690 <__lsan_do_recoverable_leak_check@@Base+0x2504>
    b894:	cmp	x19, x0
    b898:	cset	w0, eq  // eq = none
    b89c:	and	w0, w0, #0xff
    b8a0:	cmp	w0, #0x0
    b8a4:	b.eq	b8c8 <__lsan_do_recoverable_leak_check@@Base+0x173c>  // b.none
    b8a8:	ldr	x0, [sp, #24]
    b8ac:	ldr	x0, [x0, #16]
    b8b0:	add	x0, x0, #0x1
    b8b4:	bl	a3cc <__lsan_do_recoverable_leak_check@@Base+0x240>
    b8b8:	str	x0, [sp, #40]
    b8bc:	ldr	x1, [sp, #40]
    b8c0:	ldr	x0, [sp, #24]
    b8c4:	bl	c6b8 <__lsan_do_recoverable_leak_check@@Base+0x252c>
    b8c8:	ldr	x0, [sp, #24]
    b8cc:	ldr	x2, [x0]
    b8d0:	ldr	x0, [sp, #24]
    b8d4:	ldr	x1, [x0, #16]
    b8d8:	add	x3, x1, #0x1
    b8dc:	ldr	x0, [sp, #24]
    b8e0:	str	x3, [x0, #16]
    b8e4:	mov	x0, x1
    b8e8:	lsl	x0, x0, #1
    b8ec:	add	x0, x0, x1
    b8f0:	lsl	x0, x0, #3
    b8f4:	add	x0, x2, x0
    b8f8:	mov	x2, #0x18                  	// #24
    b8fc:	ldr	x1, [sp, #16]
    b900:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
    b904:	nop
    b908:	ldp	x19, x30, [sp], #64
    b90c:	ret
    b910:	sub	sp, sp, #0x10
    b914:	str	x0, [sp, #8]
    b918:	ldr	x0, [sp, #8]
    b91c:	ldr	x0, [x0]
    b920:	add	sp, sp, #0x10
    b924:	ret
    b928:	str	x30, [sp, #-112]!
    b92c:	str	x0, [sp, #40]
    b930:	str	x1, [sp, #32]
    b934:	str	x2, [sp, #24]
    b938:	ldr	x0, [sp, #32]
    b93c:	cmp	x0, #0x1
    b940:	b.ls	bba4 <__lsan_do_recoverable_leak_check@@Base+0x1a18>  // b.plast
    b944:	mov	x0, #0x1                   	// #1
    b948:	str	x0, [sp, #104]
    b94c:	ldr	x1, [sp, #104]
    b950:	ldr	x0, [sp, #32]
    b954:	cmp	x1, x0
    b958:	b.cs	ba08 <__lsan_do_recoverable_leak_check@@Base+0x187c>  // b.hs, b.nlast
    b95c:	ldr	x0, [sp, #104]
    b960:	str	x0, [sp, #96]
    b964:	ldr	x0, [sp, #96]
    b968:	cmp	x0, #0x0
    b96c:	b.eq	b9f8 <__lsan_do_recoverable_leak_check@@Base+0x186c>  // b.none
    b970:	ldr	x0, [sp, #96]
    b974:	sub	x0, x0, #0x1
    b978:	lsr	x0, x0, #1
    b97c:	str	x0, [sp, #64]
    b980:	ldr	x0, [sp, #64]
    b984:	lsl	x0, x0, #5
    b988:	ldr	x1, [sp, #40]
    b98c:	add	x3, x1, x0
    b990:	ldr	x0, [sp, #96]
    b994:	lsl	x0, x0, #5
    b998:	ldr	x1, [sp, #40]
    b99c:	add	x0, x1, x0
    b9a0:	ldr	x2, [sp, #24]
    b9a4:	mov	x1, x0
    b9a8:	mov	x0, x3
    b9ac:	blr	x2
    b9b0:	and	w0, w0, #0xff
    b9b4:	cmp	w0, #0x0
    b9b8:	b.eq	b9f4 <__lsan_do_recoverable_leak_check@@Base+0x1868>  // b.none
    b9bc:	ldr	x0, [sp, #96]
    b9c0:	lsl	x0, x0, #5
    b9c4:	ldr	x1, [sp, #40]
    b9c8:	add	x2, x1, x0
    b9cc:	ldr	x0, [sp, #64]
    b9d0:	lsl	x0, x0, #5
    b9d4:	ldr	x1, [sp, #40]
    b9d8:	add	x0, x1, x0
    b9dc:	mov	x1, x0
    b9e0:	mov	x0, x2
    b9e4:	bl	c818 <__lsan_do_recoverable_leak_check@@Base+0x268c>
    b9e8:	ldr	x0, [sp, #64]
    b9ec:	str	x0, [sp, #96]
    b9f0:	b	b964 <__lsan_do_recoverable_leak_check@@Base+0x17d8>
    b9f4:	nop
    b9f8:	ldr	x0, [sp, #104]
    b9fc:	add	x0, x0, #0x1
    ba00:	str	x0, [sp, #104]
    ba04:	b	b94c <__lsan_do_recoverable_leak_check@@Base+0x17c0>
    ba08:	ldr	x0, [sp, #32]
    ba0c:	sub	x0, x0, #0x1
    ba10:	str	x0, [sp, #88]
    ba14:	ldr	x0, [sp, #88]
    ba18:	cmp	x0, #0x0
    ba1c:	b.eq	bba8 <__lsan_do_recoverable_leak_check@@Base+0x1a1c>  // b.none
    ba20:	ldr	x0, [sp, #88]
    ba24:	lsl	x0, x0, #5
    ba28:	ldr	x1, [sp, #40]
    ba2c:	add	x0, x1, x0
    ba30:	mov	x1, x0
    ba34:	ldr	x0, [sp, #40]
    ba38:	bl	c818 <__lsan_do_recoverable_leak_check@@Base+0x268c>
    ba3c:	str	xzr, [sp, #80]
    ba40:	ldr	x1, [sp, #80]
    ba44:	ldr	x0, [sp, #88]
    ba48:	cmp	x1, x0
    ba4c:	b.cs	bb94 <__lsan_do_recoverable_leak_check@@Base+0x1a08>  // b.hs, b.nlast
    ba50:	ldr	x0, [sp, #80]
    ba54:	lsl	x0, x0, #1
    ba58:	add	x0, x0, #0x1
    ba5c:	str	x0, [sp, #56]
    ba60:	ldr	x0, [sp, #80]
    ba64:	add	x0, x0, #0x1
    ba68:	lsl	x0, x0, #1
    ba6c:	str	x0, [sp, #48]
    ba70:	ldr	x0, [sp, #80]
    ba74:	str	x0, [sp, #72]
    ba78:	ldr	x1, [sp, #56]
    ba7c:	ldr	x0, [sp, #88]
    ba80:	cmp	x1, x0
    ba84:	b.cs	bacc <__lsan_do_recoverable_leak_check@@Base+0x1940>  // b.hs, b.nlast
    ba88:	ldr	x0, [sp, #72]
    ba8c:	lsl	x0, x0, #5
    ba90:	ldr	x1, [sp, #40]
    ba94:	add	x3, x1, x0
    ba98:	ldr	x0, [sp, #56]
    ba9c:	lsl	x0, x0, #5
    baa0:	ldr	x1, [sp, #40]
    baa4:	add	x0, x1, x0
    baa8:	ldr	x2, [sp, #24]
    baac:	mov	x1, x0
    bab0:	mov	x0, x3
    bab4:	blr	x2
    bab8:	and	w0, w0, #0xff
    babc:	cmp	w0, #0x0
    bac0:	b.eq	bacc <__lsan_do_recoverable_leak_check@@Base+0x1940>  // b.none
    bac4:	mov	w0, #0x1                   	// #1
    bac8:	b	bad0 <__lsan_do_recoverable_leak_check@@Base+0x1944>
    bacc:	mov	w0, #0x0                   	// #0
    bad0:	cmp	w0, #0x0
    bad4:	b.eq	bae0 <__lsan_do_recoverable_leak_check@@Base+0x1954>  // b.none
    bad8:	ldr	x0, [sp, #56]
    badc:	str	x0, [sp, #72]
    bae0:	ldr	x1, [sp, #48]
    bae4:	ldr	x0, [sp, #88]
    bae8:	cmp	x1, x0
    baec:	b.cs	bb34 <__lsan_do_recoverable_leak_check@@Base+0x19a8>  // b.hs, b.nlast
    baf0:	ldr	x0, [sp, #72]
    baf4:	lsl	x0, x0, #5
    baf8:	ldr	x1, [sp, #40]
    bafc:	add	x3, x1, x0
    bb00:	ldr	x0, [sp, #48]
    bb04:	lsl	x0, x0, #5
    bb08:	ldr	x1, [sp, #40]
    bb0c:	add	x0, x1, x0
    bb10:	ldr	x2, [sp, #24]
    bb14:	mov	x1, x0
    bb18:	mov	x0, x3
    bb1c:	blr	x2
    bb20:	and	w0, w0, #0xff
    bb24:	cmp	w0, #0x0
    bb28:	b.eq	bb34 <__lsan_do_recoverable_leak_check@@Base+0x19a8>  // b.none
    bb2c:	mov	w0, #0x1                   	// #1
    bb30:	b	bb38 <__lsan_do_recoverable_leak_check@@Base+0x19ac>
    bb34:	mov	w0, #0x0                   	// #0
    bb38:	cmp	w0, #0x0
    bb3c:	b.eq	bb48 <__lsan_do_recoverable_leak_check@@Base+0x19bc>  // b.none
    bb40:	ldr	x0, [sp, #48]
    bb44:	str	x0, [sp, #72]
    bb48:	ldr	x1, [sp, #72]
    bb4c:	ldr	x0, [sp, #80]
    bb50:	cmp	x1, x0
    bb54:	b.eq	bb90 <__lsan_do_recoverable_leak_check@@Base+0x1a04>  // b.none
    bb58:	ldr	x0, [sp, #80]
    bb5c:	lsl	x0, x0, #5
    bb60:	ldr	x1, [sp, #40]
    bb64:	add	x2, x1, x0
    bb68:	ldr	x0, [sp, #72]
    bb6c:	lsl	x0, x0, #5
    bb70:	ldr	x1, [sp, #40]
    bb74:	add	x0, x1, x0
    bb78:	mov	x1, x0
    bb7c:	mov	x0, x2
    bb80:	bl	c818 <__lsan_do_recoverable_leak_check@@Base+0x268c>
    bb84:	ldr	x0, [sp, #72]
    bb88:	str	x0, [sp, #80]
    bb8c:	b	ba40 <__lsan_do_recoverable_leak_check@@Base+0x18b4>
    bb90:	nop
    bb94:	ldr	x0, [sp, #88]
    bb98:	sub	x0, x0, #0x1
    bb9c:	str	x0, [sp, #88]
    bba0:	b	ba14 <__lsan_do_recoverable_leak_check@@Base+0x1888>
    bba4:	nop
    bba8:	ldr	x30, [sp], #112
    bbac:	ret
    bbb0:	sub	sp, sp, #0x10
    bbb4:	str	x0, [sp, #8]
    bbb8:	ldr	x0, [sp, #8]
    bbbc:	ldr	x0, [x0, #16]
    bbc0:	add	sp, sp, #0x10
    bbc4:	ret
    bbc8:	str	x30, [sp, #-48]!
    bbcc:	str	x0, [sp, #24]
    bbd0:	str	x1, [sp, #16]
    bbd4:	ldr	x0, [sp, #16]
    bbd8:	str	x0, [sp, #40]
    bbdc:	ldr	x0, [sp, #24]
    bbe0:	ldr	x0, [x0, #16]
    bbe4:	str	x0, [sp, #32]
    bbe8:	ldr	x1, [sp, #40]
    bbec:	ldr	x0, [sp, #32]
    bbf0:	cmp	x1, x0
    bbf4:	cset	w0, cs  // cs = hs, nlast
    bbf8:	and	w0, w0, #0xff
    bbfc:	and	x0, x0, #0xff
    bc00:	cmp	x0, #0x0
    bc04:	b.eq	bc28 <__lsan_do_recoverable_leak_check@@Base+0x1a9c>  // b.none
    bc08:	ldr	x4, [sp, #32]
    bc0c:	ldr	x3, [sp, #40]
    bc10:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    bc14:	add	x2, x0, #0xe60
    bc18:	mov	w1, #0x1b6                 	// #438
    bc1c:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    bc20:	add	x0, x0, #0xe00
    bc24:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    bc28:	ldr	x0, [sp, #24]
    bc2c:	ldr	x2, [x0]
    bc30:	ldr	x1, [sp, #16]
    bc34:	mov	x0, x1
    bc38:	lsl	x0, x0, #1
    bc3c:	add	x0, x0, x1
    bc40:	lsl	x0, x0, #3
    bc44:	add	x0, x2, x0
    bc48:	ldr	x30, [sp], #48
    bc4c:	ret
    bc50:	sub	sp, sp, #0x10
    bc54:	str	x0, [sp, #8]
    bc58:	ldr	x0, [sp, #8]
    bc5c:	ldr	x0, [x0]
    bc60:	add	sp, sp, #0x10
    bc64:	ret
    bc68:	str	x30, [sp, #-32]!
    bc6c:	str	x0, [sp, #24]
    bc70:	str	w1, [sp, #20]
    bc74:	mov	w2, #0x1                   	// #1
    bc78:	ldr	w1, [sp, #20]
    bc7c:	ldr	x0, [sp, #24]
    bc80:	bl	aad0 <__lsan_do_recoverable_leak_check@@Base+0x944>
    bc84:	nop
    bc88:	ldr	x30, [sp], #32
    bc8c:	ret
    bc90:	stp	x19, x30, [sp, #-64]!
    bc94:	str	x0, [sp, #24]
    bc98:	str	x1, [sp, #16]
    bc9c:	ldr	x0, [sp, #24]
    bca0:	ldr	x0, [x0, #16]
    bca4:	str	x0, [sp, #56]
    bca8:	ldr	x0, [sp, #24]
    bcac:	bl	c888 <__lsan_do_recoverable_leak_check@@Base+0x26fc>
    bcb0:	str	x0, [sp, #48]
    bcb4:	ldr	x1, [sp, #56]
    bcb8:	ldr	x0, [sp, #48]
    bcbc:	cmp	x1, x0
    bcc0:	cset	w0, hi  // hi = pmore
    bcc4:	and	w0, w0, #0xff
    bcc8:	and	x0, x0, #0xff
    bccc:	cmp	x0, #0x0
    bcd0:	b.eq	bcf4 <__lsan_do_recoverable_leak_check@@Base+0x1b68>  // b.none
    bcd4:	ldr	x4, [sp, #48]
    bcd8:	ldr	x3, [sp, #56]
    bcdc:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    bce0:	add	x2, x0, #0xe78
    bce4:	mov	w1, #0x1be                 	// #446
    bce8:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    bcec:	add	x0, x0, #0xe00
    bcf0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    bcf4:	ldr	x0, [sp, #24]
    bcf8:	ldr	x19, [x0, #16]
    bcfc:	ldr	x0, [sp, #24]
    bd00:	bl	c888 <__lsan_do_recoverable_leak_check@@Base+0x26fc>
    bd04:	cmp	x19, x0
    bd08:	cset	w0, eq  // eq = none
    bd0c:	and	w0, w0, #0xff
    bd10:	cmp	w0, #0x0
    bd14:	b.eq	bd38 <__lsan_do_recoverable_leak_check@@Base+0x1bac>  // b.none
    bd18:	ldr	x0, [sp, #24]
    bd1c:	ldr	x0, [x0, #16]
    bd20:	add	x0, x0, #0x1
    bd24:	bl	a3cc <__lsan_do_recoverable_leak_check@@Base+0x240>
    bd28:	str	x0, [sp, #40]
    bd2c:	ldr	x1, [sp, #40]
    bd30:	ldr	x0, [sp, #24]
    bd34:	bl	c8a4 <__lsan_do_recoverable_leak_check@@Base+0x2718>
    bd38:	ldr	x0, [sp, #24]
    bd3c:	ldr	x1, [x0]
    bd40:	ldr	x0, [sp, #24]
    bd44:	ldr	x0, [x0, #16]
    bd48:	add	x3, x0, #0x1
    bd4c:	ldr	x2, [sp, #24]
    bd50:	str	x3, [x2, #16]
    bd54:	lsl	x0, x0, #4
    bd58:	add	x0, x1, x0
    bd5c:	mov	x2, #0x10                  	// #16
    bd60:	ldr	x1, [sp, #16]
    bd64:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
    bd68:	nop
    bd6c:	ldp	x19, x30, [sp], #64
    bd70:	ret
    bd74:	str	x30, [sp, #-48]!
    bd78:	str	x0, [sp, #24]
    bd7c:	ldr	x0, [sp, #24]
    bd80:	ldr	x0, [x0, #16]
    bd84:	str	x0, [sp, #40]
    bd88:	str	xzr, [sp, #32]
    bd8c:	ldr	x1, [sp, #40]
    bd90:	ldr	x0, [sp, #32]
    bd94:	cmp	x1, x0
    bd98:	cset	w0, ls  // ls = plast
    bd9c:	and	w0, w0, #0xff
    bda0:	and	x0, x0, #0xff
    bda4:	cmp	x0, #0x0
    bda8:	b.eq	bdcc <__lsan_do_recoverable_leak_check@@Base+0x1c40>  // b.none
    bdac:	ldr	x4, [sp, #32]
    bdb0:	ldr	x3, [sp, #40]
    bdb4:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    bdb8:	add	x2, x0, #0xe98
    bdbc:	mov	w1, #0x1ca                 	// #458
    bdc0:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    bdc4:	add	x0, x0, #0xe00
    bdc8:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    bdcc:	ldr	x0, [sp, #24]
    bdd0:	ldr	x0, [x0, #16]
    bdd4:	sub	x1, x0, #0x1
    bdd8:	ldr	x0, [sp, #24]
    bddc:	str	x1, [x0, #16]
    bde0:	nop
    bde4:	ldr	x30, [sp], #48
    bde8:	ret
    bdec:	str	x30, [sp, #-32]!
    bdf0:	str	x0, [sp, #24]
    bdf4:	str	x1, [sp, #16]
    bdf8:	ldr	x0, [sp, #24]
    bdfc:	str	xzr, [x0, #8]
    be00:	ldr	x0, [sp, #24]
    be04:	str	xzr, [x0, #16]
    be08:	ldr	x0, [sp, #24]
    be0c:	str	xzr, [x0]
    be10:	ldr	x1, [sp, #16]
    be14:	ldr	x0, [sp, #24]
    be18:	bl	c9e4 <__lsan_do_recoverable_leak_check@@Base+0x2858>
    be1c:	nop
    be20:	ldr	x30, [sp], #32
    be24:	ret
    be28:	str	x30, [sp, #-32]!
    be2c:	str	x0, [sp, #24]
    be30:	str	x1, [sp, #16]
    be34:	ldr	x0, [sp, #24]
    be38:	ldr	x0, [x0, #16]
    be3c:	ldr	x1, [sp, #16]
    be40:	cmp	x1, x0
    be44:	b.ls	be88 <__lsan_do_recoverable_leak_check@@Base+0x1cfc>  // b.plast
    be48:	ldr	x1, [sp, #16]
    be4c:	ldr	x0, [sp, #24]
    be50:	bl	c9e4 <__lsan_do_recoverable_leak_check@@Base+0x2858>
    be54:	ldr	x0, [sp, #24]
    be58:	ldr	x1, [x0]
    be5c:	ldr	x0, [sp, #24]
    be60:	ldr	x0, [x0, #16]
    be64:	add	x3, x1, x0
    be68:	ldr	x0, [sp, #24]
    be6c:	ldr	x0, [x0, #16]
    be70:	ldr	x1, [sp, #16]
    be74:	sub	x0, x1, x0
    be78:	mov	x2, x0
    be7c:	mov	w1, #0x0                   	// #0
    be80:	mov	x0, x3
    be84:	bl	21754 <__sanitizer_set_report_fd@@Base+0x255c>
    be88:	ldr	x0, [sp, #24]
    be8c:	ldr	x1, [sp, #16]
    be90:	str	x1, [x0, #16]
    be94:	nop
    be98:	ldr	x30, [sp], #32
    be9c:	ret
    bea0:	str	x30, [sp, #-32]!
    bea4:	str	x0, [sp, #24]
    bea8:	ldr	x0, [sp, #24]
    beac:	ldr	x2, [x0]
    beb0:	ldr	x0, [sp, #24]
    beb4:	ldr	x0, [x0, #8]
    beb8:	mov	x1, x0
    bebc:	mov	x0, x2
    bec0:	bl	26af4 <__sanitizer_set_report_fd@@Base+0x78fc>
    bec4:	nop
    bec8:	ldr	x30, [sp], #32
    becc:	ret
    bed0:	str	x30, [sp, #-32]!
    bed4:	str	x0, [sp, #24]
    bed8:	str	x1, [sp, #16]
    bedc:	ldr	x0, [sp, #24]
    bee0:	str	xzr, [x0, #8]
    bee4:	ldr	x0, [sp, #24]
    bee8:	str	xzr, [x0, #16]
    beec:	ldr	x0, [sp, #24]
    bef0:	str	xzr, [x0]
    bef4:	ldr	x1, [sp, #16]
    bef8:	ldr	x0, [sp, #24]
    befc:	bl	ca2c <__lsan_do_recoverable_leak_check@@Base+0x28a0>
    bf00:	nop
    bf04:	ldr	x30, [sp], #32
    bf08:	ret
    bf0c:	str	x30, [sp, #-32]!
    bf10:	str	x0, [sp, #24]
    bf14:	ldr	x0, [sp, #24]
    bf18:	ldr	x2, [x0]
    bf1c:	ldr	x0, [sp, #24]
    bf20:	ldr	x0, [x0, #8]
    bf24:	mov	x1, x0
    bf28:	mov	x0, x2
    bf2c:	bl	26af4 <__sanitizer_set_report_fd@@Base+0x78fc>
    bf30:	nop
    bf34:	ldr	x30, [sp], #32
    bf38:	ret
    bf3c:	str	x30, [sp, #-32]!
    bf40:	str	x0, [sp, #24]
    bf44:	str	x1, [sp, #16]
    bf48:	ldr	x0, [sp, #24]
    bf4c:	str	xzr, [x0, #8]
    bf50:	ldr	x0, [sp, #24]
    bf54:	str	xzr, [x0, #16]
    bf58:	ldr	x0, [sp, #24]
    bf5c:	str	xzr, [x0]
    bf60:	ldr	x1, [sp, #16]
    bf64:	ldr	x0, [sp, #24]
    bf68:	bl	ca74 <__lsan_do_recoverable_leak_check@@Base+0x28e8>
    bf6c:	nop
    bf70:	ldr	x30, [sp], #32
    bf74:	ret
    bf78:	str	x30, [sp, #-32]!
    bf7c:	str	x0, [sp, #24]
    bf80:	ldr	x0, [sp, #24]
    bf84:	ldr	x2, [x0]
    bf88:	ldr	x0, [sp, #24]
    bf8c:	ldr	x0, [x0, #8]
    bf90:	mov	x1, x0
    bf94:	mov	x0, x2
    bf98:	bl	26af4 <__sanitizer_set_report_fd@@Base+0x78fc>
    bf9c:	nop
    bfa0:	ldr	x30, [sp], #32
    bfa4:	ret
    bfa8:	sub	sp, sp, #0x10
    bfac:	str	x0, [sp, #8]
    bfb0:	adrp	x0, 7b000 <__asan_backtrace_vector_release@@Base+0x2c340>
    bfb4:	add	x1, x0, #0xaf8
    bfb8:	ldr	x0, [sp, #8]
    bfbc:	str	x1, [x0]
    bfc0:	nop
    bfc4:	add	sp, sp, #0x10
    bfc8:	ret
    bfcc:	str	x30, [sp, #-32]!
    bfd0:	str	x0, [sp, #24]
    bfd4:	str	x1, [sp, #16]
    bfd8:	ldr	x0, [sp, #24]
    bfdc:	bl	bfa8 <__lsan_do_recoverable_leak_check@@Base+0x1e1c>
    bfe0:	adrp	x0, 7b000 <__asan_backtrace_vector_release@@Base+0x2c340>
    bfe4:	add	x1, x0, #0xae0
    bfe8:	ldr	x0, [sp, #24]
    bfec:	str	x1, [x0]
    bff0:	ldr	x0, [sp, #24]
    bff4:	ldr	x1, [sp, #16]
    bff8:	str	x1, [x0, #8]
    bffc:	nop
    c000:	ldr	x30, [sp], #32
    c004:	ret
    c008:	str	x30, [sp, #-32]!
    c00c:	str	x0, [sp, #24]
    c010:	str	x1, [sp, #16]
    c014:	ldr	x0, [sp, #24]
    c018:	bl	bfa8 <__lsan_do_recoverable_leak_check@@Base+0x1e1c>
    c01c:	adrp	x0, 7b000 <__asan_backtrace_vector_release@@Base+0x2c340>
    c020:	add	x1, x0, #0xab0
    c024:	ldr	x0, [sp, #24]
    c028:	str	x1, [x0]
    c02c:	ldr	x0, [sp, #24]
    c030:	ldr	x1, [sp, #16]
    c034:	str	x1, [x0, #8]
    c038:	nop
    c03c:	ldr	x30, [sp], #32
    c040:	ret
    c044:	str	x30, [sp, #-32]!
    c048:	str	x0, [sp, #24]
    c04c:	str	x1, [sp, #16]
    c050:	ldr	x0, [sp, #24]
    c054:	bl	bfa8 <__lsan_do_recoverable_leak_check@@Base+0x1e1c>
    c058:	adrp	x0, 7b000 <__asan_backtrace_vector_release@@Base+0x2c340>
    c05c:	add	x1, x0, #0xac8
    c060:	ldr	x0, [sp, #24]
    c064:	str	x1, [x0]
    c068:	ldr	x0, [sp, #24]
    c06c:	ldr	x1, [sp, #16]
    c070:	str	x1, [x0, #8]
    c074:	nop
    c078:	ldr	x30, [sp], #32
    c07c:	ret
    c080:	str	x30, [sp, #-32]!
    c084:	str	x0, [sp, #24]
    c088:	str	x1, [sp, #16]
    c08c:	ldr	x0, [sp, #24]
    c090:	str	xzr, [x0, #8]
    c094:	ldr	x0, [sp, #24]
    c098:	str	xzr, [x0, #16]
    c09c:	ldr	x0, [sp, #24]
    c0a0:	str	xzr, [x0]
    c0a4:	ldr	x1, [sp, #16]
    c0a8:	ldr	x0, [sp, #24]
    c0ac:	bl	cabc <__lsan_do_recoverable_leak_check@@Base+0x2930>
    c0b0:	nop
    c0b4:	ldr	x30, [sp], #32
    c0b8:	ret
    c0bc:	sub	sp, sp, #0x10
    c0c0:	str	x0, [sp, #8]
    c0c4:	ldr	x0, [sp, #8]
    c0c8:	ldr	x0, [x0, #8]
    c0cc:	lsr	x0, x0, #3
    c0d0:	add	sp, sp, #0x10
    c0d4:	ret
    c0d8:	stp	x19, x30, [sp, #-80]!
    c0dc:	str	x0, [sp, #24]
    c0e0:	str	x1, [sp, #16]
    c0e4:	ldr	x0, [sp, #16]
    c0e8:	str	x0, [sp, #72]
    c0ec:	str	xzr, [sp, #64]
    c0f0:	ldr	x1, [sp, #72]
    c0f4:	ldr	x0, [sp, #64]
    c0f8:	cmp	x1, x0
    c0fc:	cset	w0, ls  // ls = plast
    c100:	and	w0, w0, #0xff
    c104:	and	x0, x0, #0xff
    c108:	cmp	x0, #0x0
    c10c:	b.eq	c130 <__lsan_do_recoverable_leak_check@@Base+0x1fa4>  // b.none
    c110:	ldr	x4, [sp, #64]
    c114:	ldr	x3, [sp, #72]
    c118:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    c11c:	add	x2, x0, #0xeb0
    c120:	mov	w1, #0x1fc                 	// #508
    c124:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    c128:	add	x0, x0, #0xe00
    c12c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    c130:	ldr	x0, [sp, #24]
    c134:	ldr	x0, [x0, #16]
    c138:	str	x0, [sp, #56]
    c13c:	ldr	x0, [sp, #16]
    c140:	str	x0, [sp, #48]
    c144:	ldr	x1, [sp, #56]
    c148:	ldr	x0, [sp, #48]
    c14c:	cmp	x1, x0
    c150:	cset	w0, hi  // hi = pmore
    c154:	and	w0, w0, #0xff
    c158:	and	x0, x0, #0xff
    c15c:	cmp	x0, #0x0
    c160:	b.eq	c184 <__lsan_do_recoverable_leak_check@@Base+0x1ff8>  // b.none
    c164:	ldr	x4, [sp, #48]
    c168:	ldr	x3, [sp, #56]
    c16c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    c170:	add	x2, x0, #0xed0
    c174:	mov	w1, #0x1fd                 	// #509
    c178:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    c17c:	add	x0, x0, #0xe00
    c180:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    c184:	ldr	x0, [sp, #16]
    c188:	lsl	x19, x0, #3
    c18c:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
    c190:	mov	x1, x0
    c194:	mov	x0, x19
    c198:	bl	a518 <__lsan_do_recoverable_leak_check@@Base+0x38c>
    c19c:	str	x0, [sp, #40]
    c1a0:	mov	w2, #0x0                   	// #0
    c1a4:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    c1a8:	add	x1, x0, #0xef0
    c1ac:	ldr	x0, [sp, #40]
    c1b0:	bl	26a50 <__sanitizer_set_report_fd@@Base+0x7858>
    c1b4:	str	x0, [sp, #32]
    c1b8:	ldr	x0, [sp, #24]
    c1bc:	ldr	x1, [x0]
    c1c0:	ldr	x0, [sp, #24]
    c1c4:	ldr	x0, [x0, #16]
    c1c8:	lsl	x0, x0, #3
    c1cc:	mov	x2, x0
    c1d0:	ldr	x0, [sp, #32]
    c1d4:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
    c1d8:	ldr	x0, [sp, #24]
    c1dc:	ldr	x2, [x0]
    c1e0:	ldr	x0, [sp, #24]
    c1e4:	ldr	x0, [x0, #8]
    c1e8:	mov	x1, x0
    c1ec:	mov	x0, x2
    c1f0:	bl	26af4 <__sanitizer_set_report_fd@@Base+0x78fc>
    c1f4:	ldr	x0, [sp, #24]
    c1f8:	ldr	x1, [sp, #32]
    c1fc:	str	x1, [x0]
    c200:	ldr	x0, [sp, #24]
    c204:	ldr	x1, [sp, #40]
    c208:	str	x1, [x0, #8]
    c20c:	nop
    c210:	ldp	x19, x30, [sp], #80
    c214:	ret
    c218:	str	x30, [sp, #-32]!
    c21c:	str	x0, [sp, #24]
    c220:	str	x1, [sp, #16]
    c224:	ldr	x0, [sp, #24]
    c228:	str	xzr, [x0, #8]
    c22c:	ldr	x0, [sp, #24]
    c230:	str	xzr, [x0, #16]
    c234:	ldr	x0, [sp, #24]
    c238:	str	xzr, [x0]
    c23c:	ldr	x1, [sp, #16]
    c240:	ldr	x0, [sp, #24]
    c244:	bl	cb04 <__lsan_do_recoverable_leak_check@@Base+0x2978>
    c248:	nop
    c24c:	ldr	x30, [sp], #32
    c250:	ret
    c254:	str	x30, [sp, #-32]!
    c258:	str	x0, [sp, #24]
    c25c:	str	x1, [sp, #16]
    c260:	ldr	x0, [sp, #24]
    c264:	ldr	x0, [x0, #16]
    c268:	ldr	x1, [sp, #16]
    c26c:	cmp	x1, x0
    c270:	b.ls	c2bc <__lsan_do_recoverable_leak_check@@Base+0x2130>  // b.plast
    c274:	ldr	x1, [sp, #16]
    c278:	ldr	x0, [sp, #24]
    c27c:	bl	cb04 <__lsan_do_recoverable_leak_check@@Base+0x2978>
    c280:	ldr	x0, [sp, #24]
    c284:	ldr	x1, [x0]
    c288:	ldr	x0, [sp, #24]
    c28c:	ldr	x0, [x0, #16]
    c290:	lsl	x0, x0, #3
    c294:	add	x3, x1, x0
    c298:	ldr	x0, [sp, #24]
    c29c:	ldr	x0, [x0, #16]
    c2a0:	ldr	x1, [sp, #16]
    c2a4:	sub	x0, x1, x0
    c2a8:	lsl	x0, x0, #3
    c2ac:	mov	x2, x0
    c2b0:	mov	w1, #0x0                   	// #0
    c2b4:	mov	x0, x3
    c2b8:	bl	21754 <__sanitizer_set_report_fd@@Base+0x255c>
    c2bc:	ldr	x0, [sp, #24]
    c2c0:	ldr	x1, [sp, #16]
    c2c4:	str	x1, [x0, #16]
    c2c8:	nop
    c2cc:	ldr	x30, [sp], #32
    c2d0:	ret
    c2d4:	str	x30, [sp, #-32]!
    c2d8:	str	x0, [sp, #24]
    c2dc:	ldr	x0, [sp, #24]
    c2e0:	ldr	x2, [x0]
    c2e4:	ldr	x0, [sp, #24]
    c2e8:	ldr	x0, [x0, #8]
    c2ec:	mov	x1, x0
    c2f0:	mov	x0, x2
    c2f4:	bl	26af4 <__sanitizer_set_report_fd@@Base+0x78fc>
    c2f8:	nop
    c2fc:	ldr	x30, [sp], #32
    c300:	ret
    c304:	str	x30, [sp, #-32]!
    c308:	str	x0, [sp, #24]
    c30c:	ldr	x0, [sp, #24]
    c310:	ldr	x2, [x0]
    c314:	ldr	x0, [sp, #24]
    c318:	ldr	x0, [x0, #8]
    c31c:	mov	x1, x0
    c320:	mov	x0, x2
    c324:	bl	26af4 <__sanitizer_set_report_fd@@Base+0x78fc>
    c328:	nop
    c32c:	ldr	x30, [sp], #32
    c330:	ret
    c334:	str	x30, [sp, #-32]!
    c338:	str	x0, [sp, #24]
    c33c:	str	x1, [sp, #16]
    c340:	ldr	x0, [sp, #24]
    c344:	str	xzr, [x0, #8]
    c348:	ldr	x0, [sp, #24]
    c34c:	str	xzr, [x0, #16]
    c350:	ldr	x0, [sp, #24]
    c354:	str	xzr, [x0]
    c358:	ldr	x1, [sp, #16]
    c35c:	ldr	x0, [sp, #24]
    c360:	bl	cb4c <__lsan_do_recoverable_leak_check@@Base+0x29c0>
    c364:	nop
    c368:	ldr	x30, [sp], #32
    c36c:	ret
    c370:	str	x30, [sp, #-32]!
    c374:	str	x0, [sp, #24]
    c378:	ldr	x0, [sp, #24]
    c37c:	ldr	x2, [x0]
    c380:	ldr	x0, [sp, #24]
    c384:	ldr	x0, [x0, #8]
    c388:	mov	x1, x0
    c38c:	mov	x0, x2
    c390:	bl	26af4 <__sanitizer_set_report_fd@@Base+0x78fc>
    c394:	nop
    c398:	ldr	x30, [sp], #32
    c39c:	ret
    c3a0:	sub	sp, sp, #0x20
    c3a4:	str	x0, [sp, #24]
    c3a8:	str	x1, [sp, #16]
    c3ac:	str	x2, [sp, #8]
    c3b0:	ldr	x0, [sp, #16]
    c3b4:	ldr	w1, [x0]
    c3b8:	ldr	x0, [sp, #8]
    c3bc:	ldr	w0, [x0]
    c3c0:	cmp	w1, w0
    c3c4:	cset	w0, lt  // lt = tstop
    c3c8:	and	w0, w0, #0xff
    c3cc:	add	sp, sp, #0x20
    c3d0:	ret
    c3d4:	str	x30, [sp, #-32]!
    c3d8:	str	x0, [sp, #24]
    c3dc:	str	x1, [sp, #16]
    c3e0:	ldr	x0, [sp, #24]
    c3e4:	str	xzr, [x0, #8]
    c3e8:	ldr	x0, [sp, #24]
    c3ec:	str	xzr, [x0, #16]
    c3f0:	ldr	x0, [sp, #24]
    c3f4:	str	xzr, [x0]
    c3f8:	ldr	x1, [sp, #16]
    c3fc:	ldr	x0, [sp, #24]
    c400:	bl	cb94 <__lsan_do_recoverable_leak_check@@Base+0x2a08>
    c404:	nop
    c408:	ldr	x30, [sp], #32
    c40c:	ret
    c410:	str	x30, [sp, #-32]!
    c414:	str	x0, [sp, #24]
    c418:	str	x1, [sp, #16]
    c41c:	ldr	x0, [sp, #24]
    c420:	ldr	x0, [x0, #16]
    c424:	ldr	x1, [sp, #16]
    c428:	cmp	x1, x0
    c42c:	b.ls	c478 <__lsan_do_recoverable_leak_check@@Base+0x22ec>  // b.plast
    c430:	ldr	x1, [sp, #16]
    c434:	ldr	x0, [sp, #24]
    c438:	bl	cb94 <__lsan_do_recoverable_leak_check@@Base+0x2a08>
    c43c:	ldr	x0, [sp, #24]
    c440:	ldr	x1, [x0]
    c444:	ldr	x0, [sp, #24]
    c448:	ldr	x0, [x0, #16]
    c44c:	lsl	x0, x0, #3
    c450:	add	x3, x1, x0
    c454:	ldr	x0, [sp, #24]
    c458:	ldr	x0, [x0, #16]
    c45c:	ldr	x1, [sp, #16]
    c460:	sub	x0, x1, x0
    c464:	lsl	x0, x0, #3
    c468:	mov	x2, x0
    c46c:	mov	w1, #0x0                   	// #0
    c470:	mov	x0, x3
    c474:	bl	21754 <__sanitizer_set_report_fd@@Base+0x255c>
    c478:	ldr	x0, [sp, #24]
    c47c:	ldr	x1, [sp, #16]
    c480:	str	x1, [x0, #16]
    c484:	nop
    c488:	ldr	x30, [sp], #32
    c48c:	ret
    c490:	str	x30, [sp, #-32]!
    c494:	str	x0, [sp, #24]
    c498:	ldr	x0, [sp, #24]
    c49c:	ldr	x2, [x0]
    c4a0:	ldr	x0, [sp, #24]
    c4a4:	ldr	x0, [x0, #8]
    c4a8:	mov	x1, x0
    c4ac:	mov	x0, x2
    c4b0:	bl	26af4 <__sanitizer_set_report_fd@@Base+0x78fc>
    c4b4:	nop
    c4b8:	ldr	x30, [sp], #32
    c4bc:	ret
    c4c0:	sub	sp, sp, #0x20
    c4c4:	str	x0, [sp, #24]
    c4c8:	str	x1, [sp, #16]
    c4cc:	str	x2, [sp, #8]
    c4d0:	ldr	x0, [sp, #16]
    c4d4:	ldr	x1, [x0]
    c4d8:	ldr	x0, [sp, #8]
    c4dc:	ldr	x0, [x0]
    c4e0:	cmp	x1, x0
    c4e4:	cset	w0, cc  // cc = lo, ul, last
    c4e8:	and	w0, w0, #0xff
    c4ec:	add	sp, sp, #0x20
    c4f0:	ret
    c4f4:	sub	sp, sp, #0x20
    c4f8:	str	x0, [sp, #8]
    c4fc:	str	x1, [sp]
    c500:	ldr	x0, [sp, #8]
    c504:	ldr	x0, [x0]
    c508:	str	x0, [sp, #24]
    c50c:	ldr	x0, [sp]
    c510:	ldr	x1, [x0]
    c514:	ldr	x0, [sp, #8]
    c518:	str	x1, [x0]
    c51c:	ldr	x0, [sp]
    c520:	ldr	x1, [sp, #24]
    c524:	str	x1, [x0]
    c528:	nop
    c52c:	add	sp, sp, #0x20
    c530:	ret
    c534:	sub	sp, sp, #0x10
    c538:	str	x0, [sp, #8]
    c53c:	ldr	x0, [sp, #8]
    c540:	ldr	x0, [x0, #8]
    c544:	lsr	x0, x0, #5
    c548:	add	sp, sp, #0x10
    c54c:	ret
    c550:	stp	x19, x30, [sp, #-80]!
    c554:	str	x0, [sp, #24]
    c558:	str	x1, [sp, #16]
    c55c:	ldr	x0, [sp, #16]
    c560:	str	x0, [sp, #72]
    c564:	str	xzr, [sp, #64]
    c568:	ldr	x1, [sp, #72]
    c56c:	ldr	x0, [sp, #64]
    c570:	cmp	x1, x0
    c574:	cset	w0, ls  // ls = plast
    c578:	and	w0, w0, #0xff
    c57c:	and	x0, x0, #0xff
    c580:	cmp	x0, #0x0
    c584:	b.eq	c5a8 <__lsan_do_recoverable_leak_check@@Base+0x241c>  // b.none
    c588:	ldr	x4, [sp, #64]
    c58c:	ldr	x3, [sp, #72]
    c590:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    c594:	add	x2, x0, #0xeb0
    c598:	mov	w1, #0x1fc                 	// #508
    c59c:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    c5a0:	add	x0, x0, #0xe00
    c5a4:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    c5a8:	ldr	x0, [sp, #24]
    c5ac:	ldr	x0, [x0, #16]
    c5b0:	str	x0, [sp, #56]
    c5b4:	ldr	x0, [sp, #16]
    c5b8:	str	x0, [sp, #48]
    c5bc:	ldr	x1, [sp, #56]
    c5c0:	ldr	x0, [sp, #48]
    c5c4:	cmp	x1, x0
    c5c8:	cset	w0, hi  // hi = pmore
    c5cc:	and	w0, w0, #0xff
    c5d0:	and	x0, x0, #0xff
    c5d4:	cmp	x0, #0x0
    c5d8:	b.eq	c5fc <__lsan_do_recoverable_leak_check@@Base+0x2470>  // b.none
    c5dc:	ldr	x4, [sp, #48]
    c5e0:	ldr	x3, [sp, #56]
    c5e4:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    c5e8:	add	x2, x0, #0xed0
    c5ec:	mov	w1, #0x1fd                 	// #509
    c5f0:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    c5f4:	add	x0, x0, #0xe00
    c5f8:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    c5fc:	ldr	x0, [sp, #16]
    c600:	lsl	x19, x0, #5
    c604:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
    c608:	mov	x1, x0
    c60c:	mov	x0, x19
    c610:	bl	a518 <__lsan_do_recoverable_leak_check@@Base+0x38c>
    c614:	str	x0, [sp, #40]
    c618:	mov	w2, #0x0                   	// #0
    c61c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    c620:	add	x1, x0, #0xef0
    c624:	ldr	x0, [sp, #40]
    c628:	bl	26a50 <__sanitizer_set_report_fd@@Base+0x7858>
    c62c:	str	x0, [sp, #32]
    c630:	ldr	x0, [sp, #24]
    c634:	ldr	x1, [x0]
    c638:	ldr	x0, [sp, #24]
    c63c:	ldr	x0, [x0, #16]
    c640:	lsl	x0, x0, #5
    c644:	mov	x2, x0
    c648:	ldr	x0, [sp, #32]
    c64c:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
    c650:	ldr	x0, [sp, #24]
    c654:	ldr	x2, [x0]
    c658:	ldr	x0, [sp, #24]
    c65c:	ldr	x0, [x0, #8]
    c660:	mov	x1, x0
    c664:	mov	x0, x2
    c668:	bl	26af4 <__sanitizer_set_report_fd@@Base+0x78fc>
    c66c:	ldr	x0, [sp, #24]
    c670:	ldr	x1, [sp, #32]
    c674:	str	x1, [x0]
    c678:	ldr	x0, [sp, #24]
    c67c:	ldr	x1, [sp, #40]
    c680:	str	x1, [x0, #8]
    c684:	nop
    c688:	ldp	x19, x30, [sp], #80
    c68c:	ret
    c690:	sub	sp, sp, #0x10
    c694:	str	x0, [sp, #8]
    c698:	ldr	x0, [sp, #8]
    c69c:	ldr	x1, [x0, #8]
    c6a0:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    c6a4:	movk	x0, #0xaaab
    c6a8:	umulh	x0, x1, x0
    c6ac:	lsr	x0, x0, #4
    c6b0:	add	sp, sp, #0x10
    c6b4:	ret
    c6b8:	stp	x19, x30, [sp, #-80]!
    c6bc:	str	x0, [sp, #24]
    c6c0:	str	x1, [sp, #16]
    c6c4:	ldr	x0, [sp, #16]
    c6c8:	str	x0, [sp, #72]
    c6cc:	str	xzr, [sp, #64]
    c6d0:	ldr	x1, [sp, #72]
    c6d4:	ldr	x0, [sp, #64]
    c6d8:	cmp	x1, x0
    c6dc:	cset	w0, ls  // ls = plast
    c6e0:	and	w0, w0, #0xff
    c6e4:	and	x0, x0, #0xff
    c6e8:	cmp	x0, #0x0
    c6ec:	b.eq	c710 <__lsan_do_recoverable_leak_check@@Base+0x2584>  // b.none
    c6f0:	ldr	x4, [sp, #64]
    c6f4:	ldr	x3, [sp, #72]
    c6f8:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    c6fc:	add	x2, x0, #0xeb0
    c700:	mov	w1, #0x1fc                 	// #508
    c704:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    c708:	add	x0, x0, #0xe00
    c70c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    c710:	ldr	x0, [sp, #24]
    c714:	ldr	x0, [x0, #16]
    c718:	str	x0, [sp, #56]
    c71c:	ldr	x0, [sp, #16]
    c720:	str	x0, [sp, #48]
    c724:	ldr	x1, [sp, #56]
    c728:	ldr	x0, [sp, #48]
    c72c:	cmp	x1, x0
    c730:	cset	w0, hi  // hi = pmore
    c734:	and	w0, w0, #0xff
    c738:	and	x0, x0, #0xff
    c73c:	cmp	x0, #0x0
    c740:	b.eq	c764 <__lsan_do_recoverable_leak_check@@Base+0x25d8>  // b.none
    c744:	ldr	x4, [sp, #48]
    c748:	ldr	x3, [sp, #56]
    c74c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    c750:	add	x2, x0, #0xed0
    c754:	mov	w1, #0x1fd                 	// #509
    c758:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    c75c:	add	x0, x0, #0xe00
    c760:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    c764:	ldr	x1, [sp, #16]
    c768:	mov	x0, x1
    c76c:	lsl	x0, x0, #1
    c770:	add	x0, x0, x1
    c774:	lsl	x0, x0, #3
    c778:	mov	x19, x0
    c77c:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
    c780:	mov	x1, x0
    c784:	mov	x0, x19
    c788:	bl	a518 <__lsan_do_recoverable_leak_check@@Base+0x38c>
    c78c:	str	x0, [sp, #40]
    c790:	mov	w2, #0x0                   	// #0
    c794:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    c798:	add	x1, x0, #0xef0
    c79c:	ldr	x0, [sp, #40]
    c7a0:	bl	26a50 <__sanitizer_set_report_fd@@Base+0x7858>
    c7a4:	str	x0, [sp, #32]
    c7a8:	ldr	x0, [sp, #24]
    c7ac:	ldr	x3, [x0]
    c7b0:	ldr	x0, [sp, #24]
    c7b4:	ldr	x1, [x0, #16]
    c7b8:	mov	x0, x1
    c7bc:	lsl	x0, x0, #1
    c7c0:	add	x0, x0, x1
    c7c4:	lsl	x0, x0, #3
    c7c8:	mov	x2, x0
    c7cc:	mov	x1, x3
    c7d0:	ldr	x0, [sp, #32]
    c7d4:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
    c7d8:	ldr	x0, [sp, #24]
    c7dc:	ldr	x2, [x0]
    c7e0:	ldr	x0, [sp, #24]
    c7e4:	ldr	x0, [x0, #8]
    c7e8:	mov	x1, x0
    c7ec:	mov	x0, x2
    c7f0:	bl	26af4 <__sanitizer_set_report_fd@@Base+0x78fc>
    c7f4:	ldr	x0, [sp, #24]
    c7f8:	ldr	x1, [sp, #32]
    c7fc:	str	x1, [x0]
    c800:	ldr	x0, [sp, #24]
    c804:	ldr	x1, [sp, #40]
    c808:	str	x1, [x0, #8]
    c80c:	nop
    c810:	ldp	x19, x30, [sp], #80
    c814:	ret
    c818:	sub	sp, sp, #0x30
    c81c:	str	x0, [sp, #8]
    c820:	str	x1, [sp]
    c824:	ldr	x0, [sp, #8]
    c828:	add	x2, sp, #0x10
    c82c:	mov	x3, x0
    c830:	ldp	x0, x1, [x3]
    c834:	stp	x0, x1, [x2]
    c838:	ldp	x0, x1, [x3, #16]
    c83c:	stp	x0, x1, [x2, #16]
    c840:	ldr	x1, [sp, #8]
    c844:	ldr	x0, [sp]
    c848:	mov	x2, x1
    c84c:	mov	x3, x0
    c850:	ldp	x0, x1, [x3]
    c854:	stp	x0, x1, [x2]
    c858:	ldp	x0, x1, [x3, #16]
    c85c:	stp	x0, x1, [x2, #16]
    c860:	ldr	x0, [sp]
    c864:	mov	x3, x0
    c868:	add	x2, sp, #0x10
    c86c:	ldp	x0, x1, [x2]
    c870:	stp	x0, x1, [x3]
    c874:	ldp	x0, x1, [x2, #16]
    c878:	stp	x0, x1, [x3, #16]
    c87c:	nop
    c880:	add	sp, sp, #0x30
    c884:	ret
    c888:	sub	sp, sp, #0x10
    c88c:	str	x0, [sp, #8]
    c890:	ldr	x0, [sp, #8]
    c894:	ldr	x0, [x0, #8]
    c898:	lsr	x0, x0, #4
    c89c:	add	sp, sp, #0x10
    c8a0:	ret
    c8a4:	stp	x19, x30, [sp, #-80]!
    c8a8:	str	x0, [sp, #24]
    c8ac:	str	x1, [sp, #16]
    c8b0:	ldr	x0, [sp, #16]
    c8b4:	str	x0, [sp, #72]
    c8b8:	str	xzr, [sp, #64]
    c8bc:	ldr	x1, [sp, #72]
    c8c0:	ldr	x0, [sp, #64]
    c8c4:	cmp	x1, x0
    c8c8:	cset	w0, ls  // ls = plast
    c8cc:	and	w0, w0, #0xff
    c8d0:	and	x0, x0, #0xff
    c8d4:	cmp	x0, #0x0
    c8d8:	b.eq	c8fc <__lsan_do_recoverable_leak_check@@Base+0x2770>  // b.none
    c8dc:	ldr	x4, [sp, #64]
    c8e0:	ldr	x3, [sp, #72]
    c8e4:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    c8e8:	add	x2, x0, #0xeb0
    c8ec:	mov	w1, #0x1fc                 	// #508
    c8f0:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    c8f4:	add	x0, x0, #0xe00
    c8f8:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    c8fc:	ldr	x0, [sp, #24]
    c900:	ldr	x0, [x0, #16]
    c904:	str	x0, [sp, #56]
    c908:	ldr	x0, [sp, #16]
    c90c:	str	x0, [sp, #48]
    c910:	ldr	x1, [sp, #56]
    c914:	ldr	x0, [sp, #48]
    c918:	cmp	x1, x0
    c91c:	cset	w0, hi  // hi = pmore
    c920:	and	w0, w0, #0xff
    c924:	and	x0, x0, #0xff
    c928:	cmp	x0, #0x0
    c92c:	b.eq	c950 <__lsan_do_recoverable_leak_check@@Base+0x27c4>  // b.none
    c930:	ldr	x4, [sp, #48]
    c934:	ldr	x3, [sp, #56]
    c938:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    c93c:	add	x2, x0, #0xed0
    c940:	mov	w1, #0x1fd                 	// #509
    c944:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    c948:	add	x0, x0, #0xe00
    c94c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    c950:	ldr	x0, [sp, #16]
    c954:	lsl	x19, x0, #4
    c958:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
    c95c:	mov	x1, x0
    c960:	mov	x0, x19
    c964:	bl	a518 <__lsan_do_recoverable_leak_check@@Base+0x38c>
    c968:	str	x0, [sp, #40]
    c96c:	mov	w2, #0x0                   	// #0
    c970:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    c974:	add	x1, x0, #0xef0
    c978:	ldr	x0, [sp, #40]
    c97c:	bl	26a50 <__sanitizer_set_report_fd@@Base+0x7858>
    c980:	str	x0, [sp, #32]
    c984:	ldr	x0, [sp, #24]
    c988:	ldr	x1, [x0]
    c98c:	ldr	x0, [sp, #24]
    c990:	ldr	x0, [x0, #16]
    c994:	lsl	x0, x0, #4
    c998:	mov	x2, x0
    c99c:	ldr	x0, [sp, #32]
    c9a0:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
    c9a4:	ldr	x0, [sp, #24]
    c9a8:	ldr	x2, [x0]
    c9ac:	ldr	x0, [sp, #24]
    c9b0:	ldr	x0, [x0, #8]
    c9b4:	mov	x1, x0
    c9b8:	mov	x0, x2
    c9bc:	bl	26af4 <__sanitizer_set_report_fd@@Base+0x78fc>
    c9c0:	ldr	x0, [sp, #24]
    c9c4:	ldr	x1, [sp, #32]
    c9c8:	str	x1, [x0]
    c9cc:	ldr	x0, [sp, #24]
    c9d0:	ldr	x1, [sp, #40]
    c9d4:	str	x1, [x0, #8]
    c9d8:	nop
    c9dc:	ldp	x19, x30, [sp], #80
    c9e0:	ret
    c9e4:	str	x30, [sp, #-32]!
    c9e8:	str	x0, [sp, #24]
    c9ec:	str	x1, [sp, #16]
    c9f0:	ldr	x0, [sp, #24]
    c9f4:	bl	cbdc <__lsan_do_recoverable_leak_check@@Base+0x2a50>
    c9f8:	mov	x1, x0
    c9fc:	ldr	x0, [sp, #16]
    ca00:	cmp	x0, x1
    ca04:	cset	w0, hi  // hi = pmore
    ca08:	and	w0, w0, #0xff
    ca0c:	cmp	w0, #0x0
    ca10:	b.eq	ca20 <__lsan_do_recoverable_leak_check@@Base+0x2894>  // b.none
    ca14:	ldr	x1, [sp, #16]
    ca18:	ldr	x0, [sp, #24]
    ca1c:	bl	cbf4 <__lsan_do_recoverable_leak_check@@Base+0x2a68>
    ca20:	nop
    ca24:	ldr	x30, [sp], #32
    ca28:	ret
    ca2c:	str	x30, [sp, #-32]!
    ca30:	str	x0, [sp, #24]
    ca34:	str	x1, [sp, #16]
    ca38:	ldr	x0, [sp, #24]
    ca3c:	bl	c534 <__lsan_do_recoverable_leak_check@@Base+0x23a8>
    ca40:	mov	x1, x0
    ca44:	ldr	x0, [sp, #16]
    ca48:	cmp	x0, x1
    ca4c:	cset	w0, hi  // hi = pmore
    ca50:	and	w0, w0, #0xff
    ca54:	cmp	w0, #0x0
    ca58:	b.eq	ca68 <__lsan_do_recoverable_leak_check@@Base+0x28dc>  // b.none
    ca5c:	ldr	x1, [sp, #16]
    ca60:	ldr	x0, [sp, #24]
    ca64:	bl	c550 <__lsan_do_recoverable_leak_check@@Base+0x23c4>
    ca68:	nop
    ca6c:	ldr	x30, [sp], #32
    ca70:	ret
    ca74:	str	x30, [sp, #-32]!
    ca78:	str	x0, [sp, #24]
    ca7c:	str	x1, [sp, #16]
    ca80:	ldr	x0, [sp, #24]
    ca84:	bl	c690 <__lsan_do_recoverable_leak_check@@Base+0x2504>
    ca88:	mov	x1, x0
    ca8c:	ldr	x0, [sp, #16]
    ca90:	cmp	x0, x1
    ca94:	cset	w0, hi  // hi = pmore
    ca98:	and	w0, w0, #0xff
    ca9c:	cmp	w0, #0x0
    caa0:	b.eq	cab0 <__lsan_do_recoverable_leak_check@@Base+0x2924>  // b.none
    caa4:	ldr	x1, [sp, #16]
    caa8:	ldr	x0, [sp, #24]
    caac:	bl	c6b8 <__lsan_do_recoverable_leak_check@@Base+0x252c>
    cab0:	nop
    cab4:	ldr	x30, [sp], #32
    cab8:	ret
    cabc:	str	x30, [sp, #-32]!
    cac0:	str	x0, [sp, #24]
    cac4:	str	x1, [sp, #16]
    cac8:	ldr	x0, [sp, #24]
    cacc:	bl	c888 <__lsan_do_recoverable_leak_check@@Base+0x26fc>
    cad0:	mov	x1, x0
    cad4:	ldr	x0, [sp, #16]
    cad8:	cmp	x0, x1
    cadc:	cset	w0, hi  // hi = pmore
    cae0:	and	w0, w0, #0xff
    cae4:	cmp	w0, #0x0
    cae8:	b.eq	caf8 <__lsan_do_recoverable_leak_check@@Base+0x296c>  // b.none
    caec:	ldr	x1, [sp, #16]
    caf0:	ldr	x0, [sp, #24]
    caf4:	bl	c8a4 <__lsan_do_recoverable_leak_check@@Base+0x2718>
    caf8:	nop
    cafc:	ldr	x30, [sp], #32
    cb00:	ret
    cb04:	str	x30, [sp, #-32]!
    cb08:	str	x0, [sp, #24]
    cb0c:	str	x1, [sp, #16]
    cb10:	ldr	x0, [sp, #24]
    cb14:	bl	c0bc <__lsan_do_recoverable_leak_check@@Base+0x1f30>
    cb18:	mov	x1, x0
    cb1c:	ldr	x0, [sp, #16]
    cb20:	cmp	x0, x1
    cb24:	cset	w0, hi  // hi = pmore
    cb28:	and	w0, w0, #0xff
    cb2c:	cmp	w0, #0x0
    cb30:	b.eq	cb40 <__lsan_do_recoverable_leak_check@@Base+0x29b4>  // b.none
    cb34:	ldr	x1, [sp, #16]
    cb38:	ldr	x0, [sp, #24]
    cb3c:	bl	c0d8 <__lsan_do_recoverable_leak_check@@Base+0x1f4c>
    cb40:	nop
    cb44:	ldr	x30, [sp], #32
    cb48:	ret
    cb4c:	str	x30, [sp, #-32]!
    cb50:	str	x0, [sp, #24]
    cb54:	str	x1, [sp, #16]
    cb58:	ldr	x0, [sp, #24]
    cb5c:	bl	cd28 <__lsan_do_recoverable_leak_check@@Base+0x2b9c>
    cb60:	mov	x1, x0
    cb64:	ldr	x0, [sp, #16]
    cb68:	cmp	x0, x1
    cb6c:	cset	w0, hi  // hi = pmore
    cb70:	and	w0, w0, #0xff
    cb74:	cmp	w0, #0x0
    cb78:	b.eq	cb88 <__lsan_do_recoverable_leak_check@@Base+0x29fc>  // b.none
    cb7c:	ldr	x1, [sp, #16]
    cb80:	ldr	x0, [sp, #24]
    cb84:	bl	cd44 <__lsan_do_recoverable_leak_check@@Base+0x2bb8>
    cb88:	nop
    cb8c:	ldr	x30, [sp], #32
    cb90:	ret
    cb94:	str	x30, [sp, #-32]!
    cb98:	str	x0, [sp, #24]
    cb9c:	str	x1, [sp, #16]
    cba0:	ldr	x0, [sp, #24]
    cba4:	bl	ce84 <__lsan_do_recoverable_leak_check@@Base+0x2cf8>
    cba8:	mov	x1, x0
    cbac:	ldr	x0, [sp, #16]
    cbb0:	cmp	x0, x1
    cbb4:	cset	w0, hi  // hi = pmore
    cbb8:	and	w0, w0, #0xff
    cbbc:	cmp	w0, #0x0
    cbc0:	b.eq	cbd0 <__lsan_do_recoverable_leak_check@@Base+0x2a44>  // b.none
    cbc4:	ldr	x1, [sp, #16]
    cbc8:	ldr	x0, [sp, #24]
    cbcc:	bl	cea0 <__lsan_do_recoverable_leak_check@@Base+0x2d14>
    cbd0:	nop
    cbd4:	ldr	x30, [sp], #32
    cbd8:	ret
    cbdc:	sub	sp, sp, #0x10
    cbe0:	str	x0, [sp, #8]
    cbe4:	ldr	x0, [sp, #8]
    cbe8:	ldr	x0, [x0, #8]
    cbec:	add	sp, sp, #0x10
    cbf0:	ret
    cbf4:	str	x30, [sp, #-80]!
    cbf8:	str	x0, [sp, #24]
    cbfc:	str	x1, [sp, #16]
    cc00:	ldr	x0, [sp, #16]
    cc04:	str	x0, [sp, #72]
    cc08:	str	xzr, [sp, #64]
    cc0c:	ldr	x1, [sp, #72]
    cc10:	ldr	x0, [sp, #64]
    cc14:	cmp	x1, x0
    cc18:	cset	w0, ls  // ls = plast
    cc1c:	and	w0, w0, #0xff
    cc20:	and	x0, x0, #0xff
    cc24:	cmp	x0, #0x0
    cc28:	b.eq	cc4c <__lsan_do_recoverable_leak_check@@Base+0x2ac0>  // b.none
    cc2c:	ldr	x4, [sp, #64]
    cc30:	ldr	x3, [sp, #72]
    cc34:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    cc38:	add	x2, x0, #0xeb0
    cc3c:	mov	w1, #0x1fc                 	// #508
    cc40:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    cc44:	add	x0, x0, #0xe00
    cc48:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    cc4c:	ldr	x0, [sp, #24]
    cc50:	ldr	x0, [x0, #16]
    cc54:	str	x0, [sp, #56]
    cc58:	ldr	x0, [sp, #16]
    cc5c:	str	x0, [sp, #48]
    cc60:	ldr	x1, [sp, #56]
    cc64:	ldr	x0, [sp, #48]
    cc68:	cmp	x1, x0
    cc6c:	cset	w0, hi  // hi = pmore
    cc70:	and	w0, w0, #0xff
    cc74:	and	x0, x0, #0xff
    cc78:	cmp	x0, #0x0
    cc7c:	b.eq	cca0 <__lsan_do_recoverable_leak_check@@Base+0x2b14>  // b.none
    cc80:	ldr	x4, [sp, #48]
    cc84:	ldr	x3, [sp, #56]
    cc88:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    cc8c:	add	x2, x0, #0xed0
    cc90:	mov	w1, #0x1fd                 	// #509
    cc94:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    cc98:	add	x0, x0, #0xe00
    cc9c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    cca0:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
    cca4:	mov	x1, x0
    cca8:	ldr	x0, [sp, #16]
    ccac:	bl	a518 <__lsan_do_recoverable_leak_check@@Base+0x38c>
    ccb0:	str	x0, [sp, #40]
    ccb4:	mov	w2, #0x0                   	// #0
    ccb8:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    ccbc:	add	x1, x0, #0xef0
    ccc0:	ldr	x0, [sp, #40]
    ccc4:	bl	26a50 <__sanitizer_set_report_fd@@Base+0x7858>
    ccc8:	str	x0, [sp, #32]
    cccc:	ldr	x0, [sp, #24]
    ccd0:	ldr	x1, [x0]
    ccd4:	ldr	x0, [sp, #24]
    ccd8:	ldr	x0, [x0, #16]
    ccdc:	mov	x2, x0
    cce0:	ldr	x0, [sp, #32]
    cce4:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
    cce8:	ldr	x0, [sp, #24]
    ccec:	ldr	x2, [x0]
    ccf0:	ldr	x0, [sp, #24]
    ccf4:	ldr	x0, [x0, #8]
    ccf8:	mov	x1, x0
    ccfc:	mov	x0, x2
    cd00:	bl	26af4 <__sanitizer_set_report_fd@@Base+0x78fc>
    cd04:	ldr	x0, [sp, #24]
    cd08:	ldr	x1, [sp, #32]
    cd0c:	str	x1, [x0]
    cd10:	ldr	x0, [sp, #24]
    cd14:	ldr	x1, [sp, #40]
    cd18:	str	x1, [x0, #8]
    cd1c:	nop
    cd20:	ldr	x30, [sp], #80
    cd24:	ret
    cd28:	sub	sp, sp, #0x10
    cd2c:	str	x0, [sp, #8]
    cd30:	ldr	x0, [sp, #8]
    cd34:	ldr	x0, [x0, #8]
    cd38:	lsr	x0, x0, #3
    cd3c:	add	sp, sp, #0x10
    cd40:	ret
    cd44:	stp	x19, x30, [sp, #-80]!
    cd48:	str	x0, [sp, #24]
    cd4c:	str	x1, [sp, #16]
    cd50:	ldr	x0, [sp, #16]
    cd54:	str	x0, [sp, #72]
    cd58:	str	xzr, [sp, #64]
    cd5c:	ldr	x1, [sp, #72]
    cd60:	ldr	x0, [sp, #64]
    cd64:	cmp	x1, x0
    cd68:	cset	w0, ls  // ls = plast
    cd6c:	and	w0, w0, #0xff
    cd70:	and	x0, x0, #0xff
    cd74:	cmp	x0, #0x0
    cd78:	b.eq	cd9c <__lsan_do_recoverable_leak_check@@Base+0x2c10>  // b.none
    cd7c:	ldr	x4, [sp, #64]
    cd80:	ldr	x3, [sp, #72]
    cd84:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    cd88:	add	x2, x0, #0xeb0
    cd8c:	mov	w1, #0x1fc                 	// #508
    cd90:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    cd94:	add	x0, x0, #0xe00
    cd98:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    cd9c:	ldr	x0, [sp, #24]
    cda0:	ldr	x0, [x0, #16]
    cda4:	str	x0, [sp, #56]
    cda8:	ldr	x0, [sp, #16]
    cdac:	str	x0, [sp, #48]
    cdb0:	ldr	x1, [sp, #56]
    cdb4:	ldr	x0, [sp, #48]
    cdb8:	cmp	x1, x0
    cdbc:	cset	w0, hi  // hi = pmore
    cdc0:	and	w0, w0, #0xff
    cdc4:	and	x0, x0, #0xff
    cdc8:	cmp	x0, #0x0
    cdcc:	b.eq	cdf0 <__lsan_do_recoverable_leak_check@@Base+0x2c64>  // b.none
    cdd0:	ldr	x4, [sp, #48]
    cdd4:	ldr	x3, [sp, #56]
    cdd8:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    cddc:	add	x2, x0, #0xed0
    cde0:	mov	w1, #0x1fd                 	// #509
    cde4:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    cde8:	add	x0, x0, #0xe00
    cdec:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    cdf0:	ldr	x0, [sp, #16]
    cdf4:	lsl	x19, x0, #3
    cdf8:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
    cdfc:	mov	x1, x0
    ce00:	mov	x0, x19
    ce04:	bl	a518 <__lsan_do_recoverable_leak_check@@Base+0x38c>
    ce08:	str	x0, [sp, #40]
    ce0c:	mov	w2, #0x0                   	// #0
    ce10:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    ce14:	add	x1, x0, #0xef0
    ce18:	ldr	x0, [sp, #40]
    ce1c:	bl	26a50 <__sanitizer_set_report_fd@@Base+0x7858>
    ce20:	str	x0, [sp, #32]
    ce24:	ldr	x0, [sp, #24]
    ce28:	ldr	x1, [x0]
    ce2c:	ldr	x0, [sp, #24]
    ce30:	ldr	x0, [x0, #16]
    ce34:	lsl	x0, x0, #3
    ce38:	mov	x2, x0
    ce3c:	ldr	x0, [sp, #32]
    ce40:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
    ce44:	ldr	x0, [sp, #24]
    ce48:	ldr	x2, [x0]
    ce4c:	ldr	x0, [sp, #24]
    ce50:	ldr	x0, [x0, #8]
    ce54:	mov	x1, x0
    ce58:	mov	x0, x2
    ce5c:	bl	26af4 <__sanitizer_set_report_fd@@Base+0x78fc>
    ce60:	ldr	x0, [sp, #24]
    ce64:	ldr	x1, [sp, #32]
    ce68:	str	x1, [x0]
    ce6c:	ldr	x0, [sp, #24]
    ce70:	ldr	x1, [sp, #40]
    ce74:	str	x1, [x0, #8]
    ce78:	nop
    ce7c:	ldp	x19, x30, [sp], #80
    ce80:	ret
    ce84:	sub	sp, sp, #0x10
    ce88:	str	x0, [sp, #8]
    ce8c:	ldr	x0, [sp, #8]
    ce90:	ldr	x0, [x0, #8]
    ce94:	lsr	x0, x0, #3
    ce98:	add	sp, sp, #0x10
    ce9c:	ret
    cea0:	stp	x19, x30, [sp, #-80]!
    cea4:	str	x0, [sp, #24]
    cea8:	str	x1, [sp, #16]
    ceac:	ldr	x0, [sp, #16]
    ceb0:	str	x0, [sp, #72]
    ceb4:	str	xzr, [sp, #64]
    ceb8:	ldr	x1, [sp, #72]
    cebc:	ldr	x0, [sp, #64]
    cec0:	cmp	x1, x0
    cec4:	cset	w0, ls  // ls = plast
    cec8:	and	w0, w0, #0xff
    cecc:	and	x0, x0, #0xff
    ced0:	cmp	x0, #0x0
    ced4:	b.eq	cef8 <__lsan_do_recoverable_leak_check@@Base+0x2d6c>  // b.none
    ced8:	ldr	x4, [sp, #64]
    cedc:	ldr	x3, [sp, #72]
    cee0:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    cee4:	add	x2, x0, #0xeb0
    cee8:	mov	w1, #0x1fc                 	// #508
    ceec:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    cef0:	add	x0, x0, #0xe00
    cef4:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    cef8:	ldr	x0, [sp, #24]
    cefc:	ldr	x0, [x0, #16]
    cf00:	str	x0, [sp, #56]
    cf04:	ldr	x0, [sp, #16]
    cf08:	str	x0, [sp, #48]
    cf0c:	ldr	x1, [sp, #56]
    cf10:	ldr	x0, [sp, #48]
    cf14:	cmp	x1, x0
    cf18:	cset	w0, hi  // hi = pmore
    cf1c:	and	w0, w0, #0xff
    cf20:	and	x0, x0, #0xff
    cf24:	cmp	x0, #0x0
    cf28:	b.eq	cf4c <__lsan_do_recoverable_leak_check@@Base+0x2dc0>  // b.none
    cf2c:	ldr	x4, [sp, #48]
    cf30:	ldr	x3, [sp, #56]
    cf34:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    cf38:	add	x2, x0, #0xed0
    cf3c:	mov	w1, #0x1fd                 	// #509
    cf40:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
    cf44:	add	x0, x0, #0xe00
    cf48:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    cf4c:	ldr	x0, [sp, #16]
    cf50:	lsl	x19, x0, #3
    cf54:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
    cf58:	mov	x1, x0
    cf5c:	mov	x0, x19
    cf60:	bl	a518 <__lsan_do_recoverable_leak_check@@Base+0x38c>
    cf64:	str	x0, [sp, #40]
    cf68:	mov	w2, #0x0                   	// #0
    cf6c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    cf70:	add	x1, x0, #0xef0
    cf74:	ldr	x0, [sp, #40]
    cf78:	bl	26a50 <__sanitizer_set_report_fd@@Base+0x7858>
    cf7c:	str	x0, [sp, #32]
    cf80:	ldr	x0, [sp, #24]
    cf84:	ldr	x1, [x0]
    cf88:	ldr	x0, [sp, #24]
    cf8c:	ldr	x0, [x0, #16]
    cf90:	lsl	x0, x0, #3
    cf94:	mov	x2, x0
    cf98:	ldr	x0, [sp, #32]
    cf9c:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
    cfa0:	ldr	x0, [sp, #24]
    cfa4:	ldr	x2, [x0]
    cfa8:	ldr	x0, [sp, #24]
    cfac:	ldr	x0, [x0, #8]
    cfb0:	mov	x1, x0
    cfb4:	mov	x0, x2
    cfb8:	bl	26af4 <__sanitizer_set_report_fd@@Base+0x78fc>
    cfbc:	ldr	x0, [sp, #24]
    cfc0:	ldr	x1, [sp, #32]
    cfc4:	str	x1, [x0]
    cfc8:	ldr	x0, [sp, #24]
    cfcc:	ldr	x1, [sp, #40]
    cfd0:	str	x1, [x0, #8]
    cfd4:	nop
    cfd8:	ldp	x19, x30, [sp], #80
    cfdc:	ret
    cfe0:	stp	x19, x30, [sp, #-32]!
    cfe4:	str	x0, [sp, #24]
    cfe8:	ldr	x0, [sp, #24]
    cfec:	bl	d4d8 <__lsan_do_recoverable_leak_check@@Base+0x334c>
    cff0:	mov	x19, x0
    cff4:	mov	x0, #0x7                   	// #7
    cff8:	bl	6df0 <getauxval@plt>
    cffc:	cmp	x19, x0
    d000:	cset	w0, eq  // eq = none
    d004:	and	w0, w0, #0xff
    d008:	ldp	x19, x30, [sp], #32
    d00c:	ret
    d010:	mrs	x1, tpidr_el0
    d014:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
    d018:	ldr	x0, [x0, #3872]
    d01c:	add	x0, x1, x0
    d020:	ldr	w0, [x0]
    d024:	cmp	w0, #0x0
    d028:	cset	w0, gt
    d02c:	and	w0, w0, #0xff
    d030:	ret
    d034:	mrs	x1, tpidr_el0
    d038:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
    d03c:	ldr	x0, [x0, #3872]
    d040:	add	x0, x1, x0
    d044:	ldr	w0, [x0]
    d048:	add	w1, w0, #0x1
    d04c:	mrs	x2, tpidr_el0
    d050:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
    d054:	ldr	x0, [x0, #3872]
    d058:	add	x0, x2, x0
    d05c:	str	w1, [x0]
    d060:	nop
    d064:	ret
    d068:	str	x30, [sp, #-16]!
    d06c:	mrs	x1, tpidr_el0
    d070:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
    d074:	ldr	x0, [x0, #3872]
    d078:	add	x0, x1, x0
    d07c:	ldr	w0, [x0]
    d080:	cmp	w0, #0x0
    d084:	b.ne	d08c <__lsan_do_recoverable_leak_check@@Base+0x2f00>  // b.any
    d088:	bl	7150 <*ABS*+0x10@plt+0x1a0>
    d08c:	mrs	x1, tpidr_el0
    d090:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
    d094:	ldr	x0, [x0, #3872]
    d098:	add	x0, x1, x0
    d09c:	ldr	w0, [x0]
    d0a0:	sub	w1, w0, #0x1
    d0a4:	mrs	x2, tpidr_el0
    d0a8:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
    d0ac:	ldr	x0, [x0, #3872]
    d0b0:	add	x0, x2, x0
    d0b4:	str	w1, [x0]
    d0b8:	nop
    d0bc:	ldr	x30, [sp], #16
    d0c0:	ret
    d0c4:	stp	x19, x30, [sp, #-160]!
    d0c8:	add	x0, sp, #0x18
    d0cc:	bl	d4f0 <__lsan_do_recoverable_leak_check@@Base+0x3364>
    d0d0:	add	x0, sp, #0x18
    d0d4:	bl	26078 <__sanitizer_set_report_fd@@Base+0x6e80>
    d0d8:	add	x0, sp, #0x18
    d0dc:	str	x0, [sp, #144]
    d0e0:	ldr	x0, [sp, #144]
    d0e4:	bl	d528 <__lsan_do_recoverable_leak_check@@Base+0x339c>
    d0e8:	str	x0, [sp, #152]
    d0ec:	ldr	x0, [sp, #144]
    d0f0:	bl	d540 <__lsan_do_recoverable_leak_check@@Base+0x33b4>
    d0f4:	str	x0, [sp, #136]
    d0f8:	ldr	x1, [sp, #152]
    d0fc:	ldr	x0, [sp, #136]
    d100:	cmp	x1, x0
    d104:	b.eq	d230 <__lsan_do_recoverable_leak_check@@Base+0x30a4>  // b.none
    d108:	ldr	x0, [sp, #152]
    d10c:	str	x0, [sp, #128]
    d110:	ldr	x0, [sp, #128]
    d114:	bl	cfe0 <__lsan_do_recoverable_leak_check@@Base+0x2e54>
    d118:	and	w0, w0, #0xff
    d11c:	eor	w0, w0, #0x1
    d120:	and	w0, w0, #0xff
    d124:	cmp	w0, #0x0
    d128:	b.ne	d21c <__lsan_do_recoverable_leak_check@@Base+0x3090>  // b.any
    d12c:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    d130:	add	x0, x0, #0xe48
    d134:	ldr	x0, [x0]
    d138:	cmp	x0, #0x0
    d13c:	b.ne	d1cc <__lsan_do_recoverable_leak_check@@Base+0x3040>  // b.any
    d140:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    d144:	add	x0, x0, #0xe48
    d148:	adrp	x1, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    d14c:	add	x1, x1, #0xe00
    d150:	str	x1, [x0]
    d154:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    d158:	add	x0, x0, #0xe48
    d15c:	ldr	x0, [x0]
    d160:	ldr	x1, [sp, #128]
    d164:	ldp	x2, x3, [x1]
    d168:	stp	x2, x3, [x0]
    d16c:	ldp	x2, x3, [x1, #16]
    d170:	stp	x2, x3, [x0, #16]
    d174:	ldp	x2, x3, [x1, #32]
    d178:	stp	x2, x3, [x0, #32]
    d17c:	ldp	x2, x3, [x1, #48]
    d180:	stp	x2, x3, [x0, #48]
    d184:	ldr	x1, [x1, #64]
    d188:	str	x1, [x0, #64]
    d18c:	add	x0, sp, #0x38
    d190:	bl	d47c <__lsan_do_recoverable_leak_check@@Base+0x32f0>
    d194:	ldr	x0, [sp, #128]
    d198:	mov	x1, x0
    d19c:	add	x0, sp, #0x38
    d1a0:	ldp	x2, x3, [x0]
    d1a4:	stp	x2, x3, [x1]
    d1a8:	ldp	x2, x3, [x0, #16]
    d1ac:	stp	x2, x3, [x1, #16]
    d1b0:	ldp	x2, x3, [x0, #32]
    d1b4:	stp	x2, x3, [x1, #32]
    d1b8:	ldp	x2, x3, [x0, #48]
    d1bc:	stp	x2, x3, [x1, #48]
    d1c0:	ldr	x0, [x0, #64]
    d1c4:	str	x0, [x1, #64]
    d1c8:	b	d220 <__lsan_do_recoverable_leak_check@@Base+0x3094>
    d1cc:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
    d1d0:	cmp	w0, #0x0
    d1d4:	cset	w0, ne  // ne = any
    d1d8:	and	w0, w0, #0xff
    d1dc:	cmp	w0, #0x0
    d1e0:	b.eq	d1f8 <__lsan_do_recoverable_leak_check@@Base+0x306c>  // b.none
    d1e4:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    d1e8:	add	x1, x0, #0xfc0
    d1ec:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x340>
    d1f0:	add	x0, x0, #0xfc8
    d1f4:	bl	2a3fc <OnPrint@@Base+0x454>
    d1f8:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    d1fc:	add	x0, x0, #0xe48
    d200:	ldr	x0, [x0]
    d204:	bl	1967c <__sancov_default_options@@Base+0x34e0>
    d208:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    d20c:	add	x0, x0, #0xe48
    d210:	str	xzr, [x0]
    d214:	mov	w19, #0x0                   	// #0
    d218:	b	d26c <__lsan_do_recoverable_leak_check@@Base+0x30e0>
    d21c:	nop
    d220:	ldr	x0, [sp, #152]
    d224:	add	x0, x0, #0x48
    d228:	str	x0, [sp, #152]
    d22c:	b	d0f8 <__lsan_do_recoverable_leak_check@@Base+0x2f6c>
    d230:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    d234:	add	x0, x0, #0xe48
    d238:	ldr	x0, [x0]
    d23c:	cmp	x0, #0x0
    d240:	b.ne	d268 <__lsan_do_recoverable_leak_check@@Base+0x30dc>  // b.any
    d244:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
    d248:	cmp	w0, #0x0
    d24c:	cset	w0, ne  // ne = any
    d250:	and	w0, w0, #0xff
    d254:	cmp	w0, #0x0
    d258:	b.eq	d268 <__lsan_do_recoverable_leak_check@@Base+0x30dc>  // b.none
    d25c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
    d260:	add	x0, x0, #0x50
    d264:	bl	2a3fc <OnPrint@@Base+0x454>
    d268:	mov	w19, #0x1                   	// #1
    d26c:	add	x0, sp, #0x18
    d270:	bl	d50c <__lsan_do_recoverable_leak_check@@Base+0x3380>
    d274:	cmp	w19, #0x1
    d278:	ldp	x19, x30, [sp], #160
    d27c:	ret
    d280:	str	x30, [sp, #-96]!
    d284:	str	x0, [sp, #40]
    d288:	str	x1, [sp, #32]
    d28c:	str	x2, [sp, #24]
    d290:	ldr	x0, [sp, #24]
    d294:	str	x0, [sp, #80]
    d298:	str	xzr, [sp, #88]
    d29c:	ldr	x0, [sp, #40]
    d2a0:	ldrh	w0, [x0, #24]
    d2a4:	and	x0, x0, #0xffff
    d2a8:	ldr	x1, [sp, #88]
    d2ac:	cmp	x1, x0
    d2b0:	b.cs	d360 <__lsan_do_recoverable_leak_check@@Base+0x31d4>  // b.hs, b.nlast
    d2b4:	ldr	x0, [sp, #40]
    d2b8:	ldr	x2, [x0, #16]
    d2bc:	ldr	x1, [sp, #88]
    d2c0:	mov	x0, x1
    d2c4:	lsl	x0, x0, #3
    d2c8:	sub	x0, x0, x1
    d2cc:	lsl	x0, x0, #3
    d2d0:	add	x0, x2, x0
    d2d4:	str	x0, [sp, #72]
    d2d8:	ldr	x0, [sp, #72]
    d2dc:	ldr	w0, [x0, #4]
    d2e0:	and	w0, w0, #0x2
    d2e4:	cmp	w0, #0x0
    d2e8:	b.eq	d34c <__lsan_do_recoverable_leak_check@@Base+0x31c0>  // b.none
    d2ec:	ldr	x0, [sp, #72]
    d2f0:	ldr	w0, [x0]
    d2f4:	cmp	w0, #0x1
    d2f8:	b.ne	d34c <__lsan_do_recoverable_leak_check@@Base+0x31c0>  // b.any
    d2fc:	ldr	x0, [sp, #72]
    d300:	ldr	x0, [x0, #40]
    d304:	cmp	x0, #0x0
    d308:	b.eq	d34c <__lsan_do_recoverable_leak_check@@Base+0x31c0>  // b.none
    d30c:	ldr	x0, [sp, #40]
    d310:	ldr	x1, [x0]
    d314:	ldr	x0, [sp, #72]
    d318:	ldr	x0, [x0, #16]
    d31c:	add	x0, x1, x0
    d320:	str	x0, [sp, #64]
    d324:	ldr	x0, [sp, #72]
    d328:	ldr	x0, [x0, #40]
    d32c:	ldr	x1, [sp, #64]
    d330:	add	x0, x1, x0
    d334:	str	x0, [sp, #56]
    d338:	ldr	x2, [sp, #80]
    d33c:	ldr	x1, [sp, #56]
    d340:	ldr	x0, [sp, #64]
    d344:	bl	7a08 <*ABS*+0x10@plt+0xa58>
    d348:	b	d350 <__lsan_do_recoverable_leak_check@@Base+0x31c4>
    d34c:	nop
    d350:	ldr	x0, [sp, #88]
    d354:	add	x0, x0, #0x1
    d358:	str	x0, [sp, #88]
    d35c:	b	d29c <__lsan_do_recoverable_leak_check@@Base+0x3110>
    d360:	mov	w0, #0x0                   	// #0
    d364:	ldr	x30, [sp], #96
    d368:	ret
    d36c:	str	x30, [sp, #-32]!
    d370:	str	x0, [sp, #24]
    d374:	bl	a6d0 <__lsan_do_recoverable_leak_check@@Base+0x544>
    d378:	ldrb	w0, [x0, #12]
    d37c:	eor	w0, w0, #0x1
    d380:	and	w0, w0, #0xff
    d384:	cmp	w0, #0x0
    d388:	b.ne	d3a0 <__lsan_do_recoverable_leak_check@@Base+0x3214>  // b.any
    d38c:	ldr	x1, [sp, #24]
    d390:	adrp	x0, d000 <__lsan_do_recoverable_leak_check@@Base+0x2e74>
    d394:	add	x0, x0, #0x280
    d398:	bl	6ba0 <dl_iterate_phdr@plt>
    d39c:	b	d3a4 <__lsan_do_recoverable_leak_check@@Base+0x3218>
    d3a0:	nop
    d3a4:	ldr	x30, [sp], #32
    d3a8:	ret
    d3ac:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    d3b0:	add	x0, x0, #0xe48
    d3b4:	ldr	x0, [x0]
    d3b8:	ret
    d3bc:	sub	sp, sp, #0x10
    d3c0:	str	x0, [sp, #8]
    d3c4:	nop
    d3c8:	add	sp, sp, #0x10
    d3cc:	ret
    d3d0:	str	x30, [sp, #-16]!
    d3d4:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
    d3d8:	ldr	w0, [x0, #216]
    d3dc:	cmp	w0, #0x0
    d3e0:	cset	w0, ne  // ne = any
    d3e4:	and	w0, w0, #0xff
    d3e8:	cmp	w0, #0x0
    d3ec:	b.eq	d3f4 <__lsan_do_recoverable_leak_check@@Base+0x3268>  // b.none
    d3f0:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
    d3f4:	nop
    d3f8:	ldr	x30, [sp], #16
    d3fc:	ret
    d400:	str	x30, [sp, #-64]!
    d404:	str	x0, [sp, #40]
    d408:	str	x1, [sp, #32]
    d40c:	str	x2, [sp, #24]
    d410:	ldr	x0, [sp, #24]
    d414:	str	x0, [sp, #56]
    d418:	ldr	x0, [sp, #56]
    d41c:	ldr	x2, [x0]
    d420:	ldr	x0, [sp, #56]
    d424:	ldr	x0, [x0, #8]
    d428:	mov	x1, x0
    d42c:	mov	x0, x2
    d430:	bl	2feac <__sanitizer_get_module_and_offset_for_pc@@Base+0x229c>
    d434:	mov	w0, #0x1                   	// #1
    d438:	ldr	x30, [sp], #64
    d43c:	ret
    d440:	str	x30, [sp, #-48]!
    d444:	str	x0, [sp, #24]
    d448:	str	x1, [sp, #16]
    d44c:	ldr	x0, [sp, #24]
    d450:	str	x0, [sp, #32]
    d454:	ldr	x0, [sp, #16]
    d458:	str	x0, [sp, #40]
    d45c:	add	x0, sp, #0x20
    d460:	mov	x1, x0
    d464:	adrp	x0, d000 <__lsan_do_recoverable_leak_check@@Base+0x2e74>
    d468:	add	x0, x0, #0x400
    d46c:	bl	6ba0 <dl_iterate_phdr@plt>
    d470:	nop
    d474:	ldr	x30, [sp], #48
    d478:	ret
    d47c:	str	x30, [sp, #-32]!
    d480:	str	x0, [sp, #24]
    d484:	ldr	x0, [sp, #24]
    d488:	str	xzr, [x0]
    d48c:	ldr	x0, [sp, #24]
    d490:	str	xzr, [x0, #8]
    d494:	ldr	x0, [sp, #24]
    d498:	str	xzr, [x0, #16]
    d49c:	ldr	x0, [sp, #24]
    d4a0:	str	wzr, [x0, #24]
    d4a4:	ldr	x0, [sp, #24]
    d4a8:	strb	wzr, [x0, #44]
    d4ac:	ldr	x0, [sp, #24]
    d4b0:	add	x0, x0, #0x1c
    d4b4:	mov	x2, #0x10                  	// #16
    d4b8:	mov	w1, #0x0                   	// #0
    d4bc:	bl	21754 <__sanitizer_set_report_fd@@Base+0x255c>
    d4c0:	ldr	x0, [sp, #24]
    d4c4:	add	x0, x0, #0x30
    d4c8:	bl	d5c4 <__lsan_do_recoverable_leak_check@@Base+0x3438>
    d4cc:	nop
    d4d0:	ldr	x30, [sp], #32
    d4d4:	ret
    d4d8:	sub	sp, sp, #0x10
    d4dc:	str	x0, [sp, #8]
    d4e0:	ldr	x0, [sp, #8]
    d4e4:	ldr	x0, [x0, #8]
    d4e8:	add	sp, sp, #0x10
    d4ec:	ret
    d4f0:	sub	sp, sp, #0x10
    d4f4:	str	x0, [sp, #8]
    d4f8:	ldr	x0, [sp, #8]
    d4fc:	strb	wzr, [x0, #24]
    d500:	nop
    d504:	add	sp, sp, #0x10
    d508:	ret
    d50c:	str	x30, [sp, #-32]!
    d510:	str	x0, [sp, #24]
    d514:	ldr	x0, [sp, #24]
    d518:	bl	d558 <__lsan_do_recoverable_leak_check@@Base+0x33cc>
    d51c:	nop
    d520:	ldr	x30, [sp], #32
    d524:	ret
    d528:	str	x30, [sp, #-32]!
    d52c:	str	x0, [sp, #24]
    d530:	ldr	x0, [sp, #24]
    d534:	bl	d5f8 <__lsan_do_recoverable_leak_check@@Base+0x346c>
    d538:	ldr	x30, [sp], #32
    d53c:	ret
    d540:	str	x30, [sp, #-32]!
    d544:	str	x0, [sp, #24]
    d548:	ldr	x0, [sp, #24]
    d54c:	bl	d610 <__lsan_do_recoverable_leak_check@@Base+0x3484>
    d550:	ldr	x30, [sp], #32
    d554:	ret
    d558:	str	x30, [sp, #-64]!
    d55c:	str	x0, [sp, #24]
    d560:	ldr	x0, [sp, #24]
    d564:	str	x0, [sp, #48]
    d568:	ldr	x0, [sp, #48]
    d56c:	bl	d5f8 <__lsan_do_recoverable_leak_check@@Base+0x346c>
    d570:	str	x0, [sp, #56]
    d574:	ldr	x0, [sp, #48]
    d578:	bl	d610 <__lsan_do_recoverable_leak_check@@Base+0x3484>
    d57c:	str	x0, [sp, #40]
    d580:	ldr	x1, [sp, #56]
    d584:	ldr	x0, [sp, #40]
    d588:	cmp	x1, x0
    d58c:	b.eq	d5b0 <__lsan_do_recoverable_leak_check@@Base+0x3424>  // b.none
    d590:	ldr	x0, [sp, #56]
    d594:	str	x0, [sp, #32]
    d598:	ldr	x0, [sp, #32]
    d59c:	bl	1967c <__sancov_default_options@@Base+0x34e0>
    d5a0:	ldr	x0, [sp, #56]
    d5a4:	add	x0, x0, #0x48
    d5a8:	str	x0, [sp, #56]
    d5ac:	b	d580 <__lsan_do_recoverable_leak_check@@Base+0x33f4>
    d5b0:	ldr	x0, [sp, #24]
    d5b4:	bl	d664 <__lsan_do_recoverable_leak_check@@Base+0x34d8>
    d5b8:	nop
    d5bc:	ldr	x30, [sp], #64
    d5c0:	ret
    d5c4:	sub	sp, sp, #0x10
    d5c8:	str	x0, [sp, #8]
    d5cc:	ldr	x0, [sp, #8]
    d5d0:	str	xzr, [x0, #16]
    d5d4:	ldr	x0, [sp, #8]
    d5d8:	ldr	x1, [x0, #16]
    d5dc:	ldr	x0, [sp, #8]
    d5e0:	str	x1, [x0, #8]
    d5e4:	ldr	x0, [sp, #8]
    d5e8:	str	xzr, [x0]
    d5ec:	nop
    d5f0:	add	sp, sp, #0x10
    d5f4:	ret
    d5f8:	str	x30, [sp, #-32]!
    d5fc:	str	x0, [sp, #24]
    d600:	ldr	x0, [sp, #24]
    d604:	bl	d680 <__lsan_do_recoverable_leak_check@@Base+0x34f4>
    d608:	ldr	x30, [sp], #32
    d60c:	ret
    d610:	stp	x19, x30, [sp, #-32]!
    d614:	str	x0, [sp, #24]
    d618:	ldr	x0, [sp, #24]
    d61c:	bl	d680 <__lsan_do_recoverable_leak_check@@Base+0x34f4>
    d620:	mov	x19, x0
    d624:	ldr	x0, [sp, #24]
    d628:	bl	d64c <__lsan_do_recoverable_leak_check@@Base+0x34c0>
    d62c:	mov	x1, x0
    d630:	mov	x0, x1
    d634:	lsl	x0, x0, #3
    d638:	add	x0, x0, x1
    d63c:	lsl	x0, x0, #3
    d640:	add	x0, x19, x0
    d644:	ldp	x19, x30, [sp], #32
    d648:	ret
    d64c:	sub	sp, sp, #0x10
    d650:	str	x0, [sp, #8]
    d654:	ldr	x0, [sp, #8]
    d658:	ldr	x0, [x0, #16]
    d65c:	add	sp, sp, #0x10
    d660:	ret
    d664:	sub	sp, sp, #0x10
    d668:	str	x0, [sp, #8]
    d66c:	ldr	x0, [sp, #8]
    d670:	str	xzr, [x0, #16]
    d674:	nop
    d678:	add	sp, sp, #0x10
    d67c:	ret
    d680:	sub	sp, sp, #0x10
    d684:	str	x0, [sp, #8]
    d688:	ldr	x0, [sp, #8]
    d68c:	ldr	x0, [x0]
    d690:	add	sp, sp, #0x10
    d694:	ret
    d698:	sub	sp, sp, #0x10
    d69c:	str	x0, [sp, #8]
    d6a0:	mov	w0, #0x0                   	// #0
    d6a4:	add	sp, sp, #0x10
    d6a8:	ret
    d6ac:	sub	sp, sp, #0x130
    d6b0:	str	x30, [sp]
    d6b4:	bl	dba8 <__sanitizer_print_stack_trace@@Base+0xf0>
    d6b8:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
    d6bc:	mov	x1, x0
    d6c0:	add	x0, sp, #0x10
    d6c4:	bl	1f598 <__sanitizer_set_report_fd@@Base+0x3a0>
    d6c8:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
    d6cc:	add	x0, x0, #0x248
    d6d0:	bl	23528 <__sanitizer_set_report_fd@@Base+0x4330>
    d6d4:	str	x0, [sp, #24]
    d6d8:	mov	w0, #0x1e                  	// #30
    d6dc:	str	w0, [sp, #52]
    d6e0:	mov	w0, #0x1                   	// #1
    d6e4:	strb	w0, [sp, #137]
    d6e8:	mov	w0, #0x1                   	// #1
    d6ec:	strb	w0, [sp, #73]
    d6f0:	mov	w0, #0x17                  	// #23
    d6f4:	str	w0, [sp, #232]
    d6f8:	add	x0, sp, #0x10
    d6fc:	bl	dbc4 <__sanitizer_print_stack_trace@@Base+0x10c>
    d700:	bl	a6d0 <__lsan_do_recoverable_leak_check@@Base+0x544>
    d704:	str	x0, [sp, #296]
    d708:	ldr	x0, [sp, #296]
    d70c:	bl	7180 <*ABS*+0x10@plt+0x1d0>
    d710:	add	x0, sp, #0x100
    d714:	bl	21290 <__sanitizer_set_report_fd@@Base+0x2098>
    d718:	add	x0, sp, #0x100
    d71c:	ldr	x1, [sp, #296]
    d720:	bl	7224 <*ABS*+0x10@plt+0x274>
    d724:	add	x2, sp, #0x100
    d728:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
    d72c:	ldr	x1, [x0, #4040]
    d730:	mov	x0, x2
    d734:	bl	1f93c <__sanitizer_set_report_fd@@Base+0x744>
    d738:	bl	7648 <*ABS*+0x10@plt+0x698>
    d73c:	str	x0, [sp, #288]
    d740:	add	x0, sp, #0x100
    d744:	ldr	x1, [sp, #288]
    d748:	bl	20f34 <__sanitizer_set_report_fd@@Base+0x1d3c>
    d74c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
    d750:	add	x0, x0, #0x260
    d754:	bl	23528 <__sanitizer_set_report_fd@@Base+0x4330>
    d758:	mov	x1, x0
    d75c:	add	x0, sp, #0x100
    d760:	bl	20f34 <__sanitizer_set_report_fd@@Base+0x1d3c>
    d764:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
    d768:	ldr	w0, [x0, #52]
    d76c:	bl	dbe8 <__sanitizer_print_stack_trace@@Base+0x130>
    d770:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
    d774:	cmp	w0, #0x0
    d778:	cset	w0, ne  // ne = any
    d77c:	and	w0, w0, #0xff
    d780:	cmp	w0, #0x0
    d784:	b.eq	d78c <__lsan_do_recoverable_leak_check@@Base+0x3600>  // b.none
    d788:	bl	208ac <__sanitizer_set_report_fd@@Base+0x16b4>
    d78c:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
    d790:	ldrb	w0, [x0, #122]
    d794:	cmp	w0, #0x0
    d798:	b.eq	d7a4 <__lsan_do_recoverable_leak_check@@Base+0x3618>  // b.none
    d79c:	add	x0, sp, #0x100
    d7a0:	bl	20930 <__sanitizer_set_report_fd@@Base+0x1738>
    d7a4:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
    d7a8:	ldr	x0, [x0, #40]
    d7ac:	bl	6f40 <__sanitizer_set_report_path@plt>
    d7b0:	nop
    d7b4:	ldr	x30, [sp]
    d7b8:	add	sp, sp, #0x130
    d7bc:	ret
    d7c0:	stp	x19, x20, [sp, #-144]!
    d7c4:	stp	x21, x30, [sp, #16]
    d7c8:	str	x0, [sp, #56]
    d7cc:	str	x1, [sp, #48]
    d7d0:	str	x2, [sp, #40]
    d7d4:	ldr	x0, [sp, #56]
    d7d8:	ldr	x21, [x0, #24]
    d7dc:	ldr	x0, [sp, #56]
    d7e0:	ldr	x20, [x0, #40]
    d7e4:	ldr	x0, [sp, #56]
    d7e8:	ldr	x19, [x0, #8]
    d7ec:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
    d7f0:	ldrb	w1, [x0, #33]
    d7f4:	ldr	x0, [sp, #40]
    d7f8:	str	x0, [sp, #136]
    d7fc:	mov	x0, #0x100                 	// #256
    d800:	str	x0, [sp, #128]
    d804:	str	x21, [sp, #120]
    d808:	str	x20, [sp, #112]
    d80c:	str	x19, [sp, #104]
    d810:	mov	w0, w1
    d814:	strb	w0, [sp, #103]
    d818:	str	xzr, [sp, #88]
    d81c:	str	xzr, [sp, #80]
    d820:	ldrb	w0, [sp, #103]
    d824:	cmp	w0, #0x0
    d828:	b.eq	d848 <__sancov_lowest_stack@@Base+0x18>  // b.none
    d82c:	bl	15d20 <__interceptor_sigaction@@Base+0x7b8>
    d830:	str	x0, [sp, #72]
    d834:	ldr	x0, [sp, #72]
    d838:	cmp	x0, #0x0
    d83c:	b.eq	d848 <__sancov_lowest_stack@@Base+0x18>  // b.none
    d840:	mov	w0, #0x1                   	// #1
    d844:	b	d84c <__sancov_lowest_stack@@Base+0x1c>
    d848:	mov	w0, #0x0                   	// #0
    d84c:	cmp	w0, #0x0
    d850:	b.eq	d86c <__sancov_lowest_stack@@Base+0x3c>  // b.none
    d854:	ldr	x0, [sp, #72]
    d858:	bl	dc34 <__sanitizer_print_stack_trace@@Base+0x17c>
    d85c:	str	x0, [sp, #88]
    d860:	ldr	x0, [sp, #72]
    d864:	bl	dc1c <__sanitizer_print_stack_trace@@Base+0x164>
    d868:	str	x0, [sp, #80]
    d86c:	ldr	x0, [sp, #128]
    d870:	ldrb	w7, [sp, #103]
    d874:	ldr	x6, [sp, #80]
    d878:	ldr	x5, [sp, #88]
    d87c:	ldr	x4, [sp, #104]
    d880:	ldr	x3, [sp, #112]
    d884:	ldr	x2, [sp, #120]
    d888:	mov	w1, w0
    d88c:	ldr	x0, [sp, #136]
    d890:	bl	2d758 <OnPrint@@Base+0x37b0>
    d894:	nop
    d898:	nop
    d89c:	ldp	x21, x30, [sp, #16]
    d8a0:	ldp	x19, x20, [sp], #144
    d8a4:	ret
    d8a8:	str	x30, [sp, #-48]!
    d8ac:	str	w0, [sp, #44]
    d8b0:	str	x1, [sp, #32]
    d8b4:	str	x2, [sp, #24]
    d8b8:	bl	dcc0 <__sanitizer_print_stack_trace@@Base+0x208>
    d8bc:	mov	w1, w0
    d8c0:	mov	x4, #0x0                   	// #0
    d8c4:	adrp	x0, d000 <__lsan_do_recoverable_leak_check@@Base+0x2e74>
    d8c8:	add	x3, x0, #0x7c0
    d8cc:	mov	w2, w1
    d8d0:	ldr	x1, [sp, #24]
    d8d4:	ldr	x0, [sp, #32]
    d8d8:	bl	2e660 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa50>
    d8dc:	nop
    d8e0:	ldr	x30, [sp], #48
    d8e4:	ret

000000000000d8e8 <__lsan_init@@Base>:
    d8e8:	stp	x19, x30, [sp, #-64]!
    d8ec:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    d8f0:	add	x0, x0, #0xe51
    d8f4:	ldrb	w0, [x0]
    d8f8:	eor	w0, w0, #0x1
    d8fc:	and	w0, w0, #0xff
    d900:	and	x0, x0, #0xff
    d904:	str	x0, [sp, #56]
    d908:	str	xzr, [sp, #48]
    d90c:	ldr	x1, [sp, #56]
    d910:	ldr	x0, [sp, #48]
    d914:	cmp	x1, x0
    d918:	cset	w0, eq  // eq = none
    d91c:	and	w0, w0, #0xff
    d920:	and	x0, x0, #0xff
    d924:	cmp	x0, #0x0
    d928:	b.eq	d94c <__lsan_init@@Base+0x64>  // b.none
    d92c:	ldr	x4, [sp, #48]
    d930:	ldr	x3, [sp, #56]
    d934:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
    d938:	add	x2, x0, #0x270
    d93c:	mov	w1, #0x53                  	// #83
    d940:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
    d944:	add	x0, x0, #0x298
    d948:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    d94c:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    d950:	add	x0, x0, #0xe50
    d954:	ldrb	w0, [x0]
    d958:	cmp	w0, #0x0
    d95c:	b.ne	daac <__lsan_init@@Base+0x1c4>  // b.any
    d960:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    d964:	add	x0, x0, #0xe51
    d968:	mov	w1, #0x1                   	// #1
    d96c:	strb	w1, [x0]
    d970:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
    d974:	ldr	x0, [x0, #4008]
    d978:	adrp	x1, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
    d97c:	add	x1, x1, #0x2c0
    d980:	str	x1, [x0]
    d984:	bl	19c08 <__sancov_default_options@@Base+0x3a6c>
    d988:	bl	dc14 <__sanitizer_print_stack_trace@@Base+0x15c>
    d98c:	bl	d6ac <__lsan_do_recoverable_leak_check@@Base+0x3520>
    d990:	bl	7674 <*ABS*+0x10@plt+0x6c4>
    d994:	bl	dd48 <__sanitizer_print_stack_trace@@Base+0x290>
    d998:	bl	dd40 <__sanitizer_print_stack_trace@@Base+0x288>
    d99c:	bl	25b48 <__sanitizer_set_report_fd@@Base+0x6950>
    d9a0:	bl	156d0 <__interceptor_sigaction@@Base+0x168>
    d9a4:	bl	15a90 <__interceptor_sigaction@@Base+0x528>
    d9a8:	adrp	x0, d000 <__lsan_do_recoverable_leak_check@@Base+0x2e74>
    d9ac:	add	x0, x0, #0x8a8
    d9b0:	bl	28164 <__sanitizer_set_report_fd@@Base+0x8f6c>
    d9b4:	mov	w2, #0x1                   	// #1
    d9b8:	mov	x1, #0x0                   	// #0
    d9bc:	mov	w0, #0x0                   	// #0
    d9c0:	bl	15bf4 <__interceptor_sigaction@@Base+0x68c>
    d9c4:	str	w0, [sp, #44]
    d9c8:	ldr	w0, [sp, #44]
    d9cc:	str	x0, [sp, #32]
    d9d0:	str	xzr, [sp, #24]
    d9d4:	ldr	x1, [sp, #32]
    d9d8:	ldr	x0, [sp, #24]
    d9dc:	cmp	x1, x0
    d9e0:	cset	w0, ne  // ne = any
    d9e4:	and	w0, w0, #0xff
    d9e8:	and	x0, x0, #0xff
    d9ec:	cmp	x0, #0x0
    d9f0:	b.eq	da14 <__lsan_init@@Base+0x12c>  // b.none
    d9f4:	ldr	x4, [sp, #24]
    d9f8:	ldr	x3, [sp, #32]
    d9fc:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
    da00:	add	x2, x0, #0x2d0
    da04:	mov	w1, #0x63                  	// #99
    da08:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
    da0c:	add	x0, x0, #0x298
    da10:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    da14:	bl	2344c <__sanitizer_set_report_fd@@Base+0x4254>
    da18:	mov	w2, #0x0                   	// #0
    da1c:	mov	x1, x0
    da20:	ldr	w0, [sp, #44]
    da24:	bl	15c2c <__interceptor_sigaction@@Base+0x6c4>
    da28:	ldr	w0, [sp, #44]
    da2c:	bl	dce8 <__sanitizer_print_stack_trace@@Base+0x230>
    da30:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
    da34:	ldrb	w0, [x0, #57]
    da38:	cmp	w0, #0x0
    da3c:	b.eq	da58 <__lsan_init@@Base+0x170>  // b.none
    da40:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
    da44:	ldrb	w0, [x0, #58]
    da48:	cmp	w0, #0x0
    da4c:	b.eq	da58 <__lsan_init@@Base+0x170>  // b.none
    da50:	mov	w0, #0x1                   	// #1
    da54:	b	da5c <__lsan_init@@Base+0x174>
    da58:	mov	w0, #0x0                   	// #0
    da5c:	cmp	w0, #0x0
    da60:	b.eq	da70 <__lsan_init@@Base+0x188>  // b.none
    da64:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
    da68:	ldr	x0, [x0, #3552]
    da6c:	bl	27ea0 <__sanitizer_set_report_fd@@Base+0x8ca8>
    da70:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
    da74:	ldrb	w19, [x0, #161]
    da78:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
    da7c:	ldr	x0, [x0, #168]
    da80:	mov	x1, x0
    da84:	mov	w0, w19
    da88:	bl	1aec4 <__sanitizer_sandbox_on_notify@@Base+0x748>
    da8c:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    da90:	add	x0, x0, #0xe50
    da94:	mov	w1, #0x1                   	// #1
    da98:	strb	w1, [x0]
    da9c:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    daa0:	add	x0, x0, #0xe51
    daa4:	strb	wzr, [x0]
    daa8:	b	dab0 <__lsan_init@@Base+0x1c8>
    daac:	nop
    dab0:	ldp	x19, x30, [sp], #64
    dab4:	ret

000000000000dab8 <__sanitizer_print_stack_trace@@Base>:
    dab8:	sub	sp, sp, #0x880
    dabc:	stp	x29, x30, [sp]
    dac0:	mov	x29, sp
    dac4:	stp	x19, x20, [sp, #16]
    dac8:	add	x0, x29, #0x20
    dacc:	bl	dc88 <__sanitizer_print_stack_trace@@Base+0x1d0>
    dad0:	bl	2d030 <OnPrint@@Base+0x3088>
    dad4:	mov	x19, x0
    dad8:	mov	x0, x29
    dadc:	mov	x20, x0
    dae0:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
    dae4:	ldrb	w1, [x0, #33]
    dae8:	add	x0, x29, #0x20
    daec:	str	x0, [x29, #2168]
    daf0:	mov	x0, #0x100                 	// #256
    daf4:	str	x0, [x29, #2160]
    daf8:	str	x19, [x29, #2152]
    dafc:	str	x20, [x29, #2144]
    db00:	str	xzr, [x29, #2136]
    db04:	mov	w0, w1
    db08:	strb	w0, [x29, #2135]
    db0c:	str	xzr, [x29, #2120]
    db10:	str	xzr, [x29, #2112]
    db14:	ldrb	w0, [x29, #2135]
    db18:	cmp	w0, #0x0
    db1c:	b.eq	db3c <__sanitizer_print_stack_trace@@Base+0x84>  // b.none
    db20:	bl	15d20 <__interceptor_sigaction@@Base+0x7b8>
    db24:	str	x0, [x29, #2104]
    db28:	ldr	x0, [x29, #2104]
    db2c:	cmp	x0, #0x0
    db30:	b.eq	db3c <__sanitizer_print_stack_trace@@Base+0x84>  // b.none
    db34:	mov	w0, #0x1                   	// #1
    db38:	b	db40 <__sanitizer_print_stack_trace@@Base+0x88>
    db3c:	mov	w0, #0x0                   	// #0
    db40:	cmp	w0, #0x0
    db44:	b.eq	db60 <__sanitizer_print_stack_trace@@Base+0xa8>  // b.none
    db48:	ldr	x0, [x29, #2104]
    db4c:	bl	dc34 <__sanitizer_print_stack_trace@@Base+0x17c>
    db50:	str	x0, [x29, #2120]
    db54:	ldr	x0, [x29, #2104]
    db58:	bl	dc1c <__sanitizer_print_stack_trace@@Base+0x164>
    db5c:	str	x0, [x29, #2112]
    db60:	ldr	x0, [x29, #2160]
    db64:	ldrb	w7, [x29, #2135]
    db68:	ldr	x6, [x29, #2112]
    db6c:	ldr	x5, [x29, #2120]
    db70:	ldr	x4, [x29, #2136]
    db74:	ldr	x3, [x29, #2144]
    db78:	ldr	x2, [x29, #2152]
    db7c:	mov	w1, w0
    db80:	ldr	x0, [x29, #2168]
    db84:	bl	2d758 <OnPrint@@Base+0x37b0>
    db88:	nop
    db8c:	add	x0, x29, #0x20
    db90:	bl	2d4a4 <OnPrint@@Base+0x34fc>
    db94:	nop
    db98:	ldp	x19, x20, [sp, #16]
    db9c:	ldp	x29, x30, [sp]
    dba0:	add	sp, sp, #0x880
    dba4:	ret
    dba8:	str	x30, [sp, #-16]!
    dbac:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
    dbb0:	ldr	x0, [x0, #4040]
    dbb4:	bl	1f268 <__sanitizer_set_report_fd@@Base+0x70>
    dbb8:	nop
    dbbc:	ldr	x30, [sp], #16
    dbc0:	ret
    dbc4:	str	x30, [sp, #-32]!
    dbc8:	str	x0, [sp, #24]
    dbcc:	ldr	x1, [sp, #24]
    dbd0:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
    dbd4:	ldr	x0, [x0, #4040]
    dbd8:	bl	1f598 <__sanitizer_set_report_fd@@Base+0x3a0>
    dbdc:	nop
    dbe0:	ldr	x30, [sp], #32
    dbe4:	ret
    dbe8:	str	x30, [sp, #-32]!
    dbec:	str	w0, [sp, #28]
    dbf0:	ldr	w0, [sp, #28]
    dbf4:	mov	w2, #0x1                   	// #1
    dbf8:	mov	w1, w0
    dbfc:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
    dc00:	ldr	x0, [x0, #3680]
    dc04:	bl	aad0 <__lsan_do_recoverable_leak_check@@Base+0x944>
    dc08:	nop
    dc0c:	ldr	x30, [sp], #32
    dc10:	ret
    dc14:	nop
    dc18:	ret
    dc1c:	sub	sp, sp, #0x10
    dc20:	str	x0, [sp, #8]
    dc24:	ldr	x0, [sp, #8]
    dc28:	ldr	x0, [x0, #144]
    dc2c:	add	sp, sp, #0x10
    dc30:	ret
    dc34:	sub	sp, sp, #0x10
    dc38:	str	x0, [sp, #8]
    dc3c:	ldr	x0, [sp, #8]
    dc40:	ldr	x0, [x0, #152]
    dc44:	add	sp, sp, #0x10
    dc48:	ret
    dc4c:	sub	sp, sp, #0x20
    dc50:	str	x0, [sp, #24]
    dc54:	str	x1, [sp, #16]
    dc58:	str	w2, [sp, #12]
    dc5c:	ldr	x0, [sp, #24]
    dc60:	ldr	x1, [sp, #16]
    dc64:	str	x1, [x0]
    dc68:	ldr	x0, [sp, #24]
    dc6c:	ldr	w1, [sp, #12]
    dc70:	str	w1, [x0, #8]
    dc74:	ldr	x0, [sp, #24]
    dc78:	str	wzr, [x0, #12]
    dc7c:	nop
    dc80:	add	sp, sp, #0x20
    dc84:	ret
    dc88:	str	x30, [sp, #-32]!
    dc8c:	str	x0, [sp, #24]
    dc90:	ldr	x3, [sp, #24]
    dc94:	ldr	x0, [sp, #24]
    dc98:	add	x0, x0, #0x10
    dc9c:	mov	w2, #0x0                   	// #0
    dca0:	mov	x1, x0
    dca4:	mov	x0, x3
    dca8:	bl	dc4c <__sanitizer_print_stack_trace@@Base+0x194>
    dcac:	ldr	x0, [sp, #24]
    dcb0:	str	xzr, [x0, #2064]
    dcb4:	nop
    dcb8:	ldr	x30, [sp], #32
    dcbc:	ret
    dcc0:	str	x30, [sp, #-16]!
    dcc4:	adrp	x0, 7d000 <_Unwind_Backtrace@GCC_3.3>
    dcc8:	ldr	x1, [x0, #904]
    dccc:	add	x0, x0, #0x388
    dcd0:	blr	x1
    dcd4:	mrs	x1, tpidr_el0
    dcd8:	add	x0, x1, x0
    dcdc:	ldr	w0, [x0]
    dce0:	ldr	x30, [sp], #16
    dce4:	ret
    dce8:	str	x30, [sp, #-32]!
    dcec:	str	w0, [sp, #28]
    dcf0:	adrp	x0, 7d000 <_Unwind_Backtrace@GCC_3.3>
    dcf4:	ldr	x1, [x0, #904]
    dcf8:	add	x0, x0, #0x388
    dcfc:	blr	x1
    dd00:	mrs	x1, tpidr_el0
    dd04:	add	x0, x1, x0
    dd08:	ldr	w1, [sp, #28]
    dd0c:	str	w1, [x0]
    dd10:	nop
    dd14:	ldr	x30, [sp], #32
    dd18:	ret
    dd1c:	str	x30, [sp, #-16]!
    dd20:	adrp	x0, 7d000 <_Unwind_Backtrace@GCC_3.3>
    dd24:	ldr	x1, [x0, #920]
    dd28:	add	x0, x0, #0x398
    dd2c:	blr	x1
    dd30:	mrs	x1, tpidr_el0
    dd34:	add	x0, x1, x0
    dd38:	ldr	x30, [sp], #16
    dd3c:	ret
    dd40:	nop
    dd44:	ret
    dd48:	str	x30, [sp, #-16]!
    dd4c:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
    dd50:	ldrb	w0, [x0, #59]
    dd54:	bl	16b20 <__sancov_default_options@@Base+0x984>
    dd58:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
    dd5c:	ldr	w0, [x0, #156]
    dd60:	mov	w1, w0
    dd64:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    dd68:	add	x0, x0, #0xe80
    dd6c:	bl	f5dc <__sanitizer_get_allocated_size@@Base+0xa7c>
    dd70:	nop
    dd74:	ldr	x30, [sp], #16
    dd78:	ret
    dd7c:	str	x30, [sp, #-16]!
    dd80:	bl	dd1c <__sanitizer_print_stack_trace@@Base+0x264>
    dd84:	mov	x1, x0
    dd88:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    dd8c:	add	x0, x0, #0xe80
    dd90:	bl	f628 <__sanitizer_get_allocated_size@@Base+0xac8>
    dd94:	nop
    dd98:	ldr	x30, [sp], #16
    dd9c:	ret
    dda0:	str	x30, [sp, #-32]!
    dda4:	str	x0, [sp, #24]
    dda8:	ldr	x1, [sp, #24]
    ddac:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    ddb0:	add	x0, x0, #0xe80
    ddb4:	bl	f64c <__sanitizer_get_allocated_size@@Base+0xaec>
    ddb8:	ldr	x30, [sp], #32
    ddbc:	ret
    ddc0:	str	x30, [sp, #-80]!
    ddc4:	str	x0, [sp, #40]
    ddc8:	str	x1, [sp, #32]
    ddcc:	str	x2, [sp, #24]
    ddd0:	ldr	x0, [sp, #32]
    ddd4:	cmp	x0, #0x0
    ddd8:	b.eq	dea4 <__sanitizer_print_stack_trace@@Base+0x3ec>  // b.none
    dddc:	ldr	x0, [sp, #32]
    dde0:	bl	dda0 <__sanitizer_print_stack_trace@@Base+0x2e8>
    dde4:	str	x0, [sp, #72]
    dde8:	ldr	x0, [sp, #72]
    ddec:	str	x0, [sp, #64]
    ddf0:	str	xzr, [sp, #56]
    ddf4:	ldr	x1, [sp, #64]
    ddf8:	ldr	x0, [sp, #56]
    ddfc:	cmp	x1, x0
    de00:	cset	w0, eq  // eq = none
    de04:	and	w0, w0, #0xff
    de08:	and	x0, x0, #0xff
    de0c:	cmp	x0, #0x0
    de10:	b.eq	de34 <__sanitizer_print_stack_trace@@Base+0x37c>  // b.none
    de14:	ldr	x4, [sp, #56]
    de18:	ldr	x3, [sp, #64]
    de1c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
    de20:	add	x2, x0, #0x5d8
    de24:	mov	w1, #0x3a                  	// #58
    de28:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
    de2c:	add	x0, x0, #0x5e8
    de30:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    de34:	bl	d010 <__lsan_do_recoverable_leak_check@@Base+0x2e84>
    de38:	and	w0, w0, #0xff
    de3c:	cmp	w0, #0x0
    de40:	b.eq	de4c <__sanitizer_print_stack_trace@@Base+0x394>  // b.none
    de44:	mov	w2, #0x3                   	// #3
    de48:	b	de50 <__sanitizer_print_stack_trace@@Base+0x398>
    de4c:	mov	w2, #0x0                   	// #0
    de50:	ldr	x1, [sp, #72]
    de54:	ldrb	w0, [x1, #1]
    de58:	bfxil	w0, w2, #0, #2
    de5c:	strb	w0, [x1, #1]
    de60:	ldr	x0, [sp, #40]
    de64:	ldp	x0, x1, [x0]
    de68:	bl	2b814 <OnPrint@@Base+0x186c>
    de6c:	mov	w1, w0
    de70:	ldr	x0, [sp, #72]
    de74:	str	w1, [x0, #8]
    de78:	ldr	x0, [sp, #24]
    de7c:	and	x2, x0, #0x3fffffffffffff
    de80:	ldr	x1, [sp, #72]
    de84:	ldr	x0, [x1]
    de88:	bfi	x0, x2, #10, #54
    de8c:	str	x0, [x1]
    de90:	mov	w2, #0x1                   	// #1
    de94:	mov	w1, #0x1                   	// #1
    de98:	ldr	x0, [sp, #72]
    de9c:	bl	f350 <__sanitizer_get_allocated_size@@Base+0x7f0>
    dea0:	b	dea8 <__sanitizer_print_stack_trace@@Base+0x3f0>
    dea4:	nop
    dea8:	ldr	x30, [sp], #80
    deac:	ret
    deb0:	str	x30, [sp, #-64]!
    deb4:	str	x0, [sp, #24]
    deb8:	ldr	x0, [sp, #24]
    debc:	cmp	x0, #0x0
    dec0:	b.eq	df30 <__sanitizer_print_stack_trace@@Base+0x478>  // b.none
    dec4:	ldr	x0, [sp, #24]
    dec8:	bl	dda0 <__sanitizer_print_stack_trace@@Base+0x2e8>
    decc:	str	x0, [sp, #56]
    ded0:	ldr	x0, [sp, #56]
    ded4:	str	x0, [sp, #48]
    ded8:	str	xzr, [sp, #40]
    dedc:	ldr	x1, [sp, #48]
    dee0:	ldr	x0, [sp, #40]
    dee4:	cmp	x1, x0
    dee8:	cset	w0, eq  // eq = none
    deec:	and	w0, w0, #0xff
    def0:	and	x0, x0, #0xff
    def4:	cmp	x0, #0x0
    def8:	b.eq	df1c <__sanitizer_print_stack_trace@@Base+0x464>  // b.none
    defc:	ldr	x4, [sp, #40]
    df00:	ldr	x3, [sp, #48]
    df04:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
    df08:	add	x2, x0, #0x5d8
    df0c:	mov	w1, #0x44                  	// #68
    df10:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
    df14:	add	x0, x0, #0x5e8
    df18:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    df1c:	mov	w2, #0x1                   	// #1
    df20:	mov	w1, #0x0                   	// #0
    df24:	ldr	x0, [sp, #56]
    df28:	bl	f350 <__sanitizer_get_allocated_size@@Base+0x7f0>
    df2c:	b	df34 <__sanitizer_print_stack_trace@@Base+0x47c>
    df30:	nop
    df34:	ldr	x30, [sp], #64
    df38:	ret
    df3c:	str	x30, [sp, #-32]!
    df40:	str	x0, [sp, #24]
    df44:	str	x1, [sp, #16]
    df48:	bl	16af4 <__sancov_default_options@@Base+0x958>
    df4c:	and	w0, w0, #0xff
    df50:	cmp	w0, #0x0
    df54:	b.eq	df70 <__sanitizer_print_stack_trace@@Base+0x4b8>  // b.none
    df58:	ldr	x1, [sp, #24]
    df5c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
    df60:	add	x0, x0, #0x618
    df64:	bl	2a3fc <OnPrint@@Base+0x454>
    df68:	mov	x0, #0x0                   	// #0
    df6c:	b	df80 <__sanitizer_print_stack_trace@@Base+0x4c8>
    df70:	ldr	x2, [sp, #16]
    df74:	mov	x1, #0x100000000           	// #4294967296
    df78:	ldr	x0, [sp, #24]
    df7c:	bl	190a8 <__sancov_default_options@@Base+0x2f0c>
    df80:	ldr	x30, [sp], #32
    df84:	ret
    df88:	str	x30, [sp, #-64]!
    df8c:	str	x0, [sp, #40]
    df90:	str	x1, [sp, #32]
    df94:	str	x2, [sp, #24]
    df98:	strb	w3, [sp, #23]
    df9c:	ldr	x0, [sp, #32]
    dfa0:	cmp	x0, #0x0
    dfa4:	b.ne	dfb0 <__sanitizer_print_stack_trace@@Base+0x4f8>  // b.any
    dfa8:	mov	x0, #0x1                   	// #1
    dfac:	str	x0, [sp, #32]
    dfb0:	ldr	x1, [sp, #32]
    dfb4:	mov	x0, #0x100000000           	// #4294967296
    dfb8:	cmp	x1, x0
    dfbc:	b.ls	dfd0 <__sanitizer_print_stack_trace@@Base+0x518>  // b.plast
    dfc0:	ldr	x1, [sp, #40]
    dfc4:	ldr	x0, [sp, #32]
    dfc8:	bl	df3c <__sanitizer_print_stack_trace@@Base+0x484>
    dfcc:	b	e0bc <__sanitizer_print_stack_trace@@Base+0x604>
    dfd0:	bl	dd1c <__sanitizer_print_stack_trace@@Base+0x264>
    dfd4:	ldr	x3, [sp, #24]
    dfd8:	ldr	x2, [sp, #32]
    dfdc:	mov	x1, x0
    dfe0:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    dfe4:	add	x0, x0, #0xe80
    dfe8:	bl	f6a0 <__sanitizer_get_allocated_size@@Base+0xb40>
    dfec:	str	x0, [sp, #56]
    dff0:	ldr	x0, [sp, #56]
    dff4:	cmp	x0, #0x0
    dff8:	cset	w0, eq  // eq = none
    dffc:	and	w0, w0, #0xff
    e000:	and	x0, x0, #0xff
    e004:	cmp	x0, #0x0
    e008:	b.eq	e034 <__sanitizer_print_stack_trace@@Base+0x57c>  // b.none
    e00c:	bl	16ad4 <__sancov_default_options@@Base+0x938>
    e010:	bl	16af4 <__sancov_default_options@@Base+0x958>
    e014:	and	w0, w0, #0xff
    e018:	cmp	w0, #0x0
    e01c:	b.eq	e028 <__sanitizer_print_stack_trace@@Base+0x570>  // b.none
    e020:	mov	x0, #0x0                   	// #0
    e024:	b	e0bc <__sanitizer_print_stack_trace@@Base+0x604>
    e028:	ldr	x1, [sp, #40]
    e02c:	ldr	x0, [sp, #32]
    e030:	bl	19100 <__sancov_default_options@@Base+0x2f64>
    e034:	ldrb	w0, [sp, #23]
    e038:	cmp	w0, #0x0
    e03c:	b.eq	e064 <__sanitizer_print_stack_trace@@Base+0x5ac>  // b.none
    e040:	ldr	x1, [sp, #56]
    e044:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    e048:	add	x0, x0, #0xe80
    e04c:	bl	f824 <__sanitizer_get_allocated_size@@Base+0xcc4>
    e050:	and	w0, w0, #0xff
    e054:	cmp	w0, #0x0
    e058:	b.eq	e064 <__sanitizer_print_stack_trace@@Base+0x5ac>  // b.none
    e05c:	mov	w0, #0x1                   	// #1
    e060:	b	e068 <__sanitizer_print_stack_trace@@Base+0x5b0>
    e064:	mov	w0, #0x0                   	// #0
    e068:	cmp	w0, #0x0
    e06c:	b.eq	e080 <__sanitizer_print_stack_trace@@Base+0x5c8>  // b.none
    e070:	ldr	x2, [sp, #32]
    e074:	mov	w1, #0x0                   	// #0
    e078:	ldr	x0, [sp, #56]
    e07c:	bl	6ac0 <memset@plt>
    e080:	ldr	x2, [sp, #32]
    e084:	ldr	x1, [sp, #56]
    e088:	ldr	x0, [sp, #40]
    e08c:	bl	ddc0 <__sanitizer_print_stack_trace@@Base+0x308>
    e090:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
    e094:	ldr	x0, [x0, #3488]
    e098:	cmp	x0, #0x0
    e09c:	b.eq	e0ac <__sanitizer_print_stack_trace@@Base+0x5f4>  // b.none
    e0a0:	ldr	x1, [sp, #32]
    e0a4:	ldr	x0, [sp, #56]
    e0a8:	bl	69c0 <__sanitizer_malloc_hook@plt>
    e0ac:	ldr	x1, [sp, #32]
    e0b0:	ldr	x0, [sp, #56]
    e0b4:	bl	19d64 <__sancov_default_options@@Base+0x3bc8>
    e0b8:	ldr	x0, [sp, #56]
    e0bc:	ldr	x30, [sp], #64
    e0c0:	ret
    e0c4:	str	x30, [sp, #-48]!
    e0c8:	str	x0, [sp, #40]
    e0cc:	str	x1, [sp, #32]
    e0d0:	str	x2, [sp, #24]
    e0d4:	ldr	x1, [sp, #40]
    e0d8:	ldr	x0, [sp, #32]
    e0dc:	bl	f2d0 <__sanitizer_get_allocated_size@@Base+0x770>
    e0e0:	and	w0, w0, #0xff
    e0e4:	and	x0, x0, #0xff
    e0e8:	cmp	x0, #0x0
    e0ec:	cset	w0, ne  // ne = any
    e0f0:	and	w0, w0, #0xff
    e0f4:	cmp	w0, #0x0
    e0f8:	b.eq	e124 <__sanitizer_print_stack_trace@@Base+0x66c>  // b.none
    e0fc:	bl	16af4 <__sancov_default_options@@Base+0x958>
    e100:	and	w0, w0, #0xff
    e104:	cmp	w0, #0x0
    e108:	b.eq	e114 <__sanitizer_print_stack_trace@@Base+0x65c>  // b.none
    e10c:	mov	x0, #0x0                   	// #0
    e110:	b	e14c <__sanitizer_print_stack_trace@@Base+0x694>
    e114:	ldr	x2, [sp, #24]
    e118:	ldr	x1, [sp, #32]
    e11c:	ldr	x0, [sp, #40]
    e120:	bl	18efc <__sancov_default_options@@Base+0x2d60>
    e124:	ldr	x1, [sp, #32]
    e128:	ldr	x0, [sp, #40]
    e12c:	mul	x0, x1, x0
    e130:	str	x0, [sp, #32]
    e134:	mov	w3, #0x1                   	// #1
    e138:	mov	x2, #0x1                   	// #1
    e13c:	ldr	x1, [sp, #32]
    e140:	ldr	x0, [sp, #24]
    e144:	bl	df88 <__sanitizer_print_stack_trace@@Base+0x4d0>
    e148:	nop
    e14c:	ldr	x30, [sp], #48
    e150:	ret
    e154:	str	x30, [sp, #-32]!
    e158:	str	x0, [sp, #24]
    e15c:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
    e160:	ldr	x0, [x0, #3856]
    e164:	cmp	x0, #0x0
    e168:	b.eq	e174 <__sanitizer_print_stack_trace@@Base+0x6bc>  // b.none
    e16c:	ldr	x0, [sp, #24]
    e170:	bl	6e20 <__sanitizer_free_hook@plt>
    e174:	ldr	x0, [sp, #24]
    e178:	bl	19dd4 <__sancov_default_options@@Base+0x3c38>
    e17c:	ldr	x0, [sp, #24]
    e180:	bl	deb0 <__sanitizer_print_stack_trace@@Base+0x3f8>
    e184:	bl	dd1c <__sanitizer_print_stack_trace@@Base+0x264>
    e188:	ldr	x2, [sp, #24]
    e18c:	mov	x1, x0
    e190:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    e194:	add	x0, x0, #0xe80
    e198:	bl	f848 <__sanitizer_get_allocated_size@@Base+0xce8>
    e19c:	nop
    e1a0:	ldr	x30, [sp], #32
    e1a4:	ret
    e1a8:	str	x30, [sp, #-48]!
    e1ac:	str	x0, [sp, #40]
    e1b0:	str	x1, [sp, #32]
    e1b4:	str	x2, [sp, #24]
    e1b8:	str	x3, [sp, #16]
    e1bc:	ldr	x0, [sp, #32]
    e1c0:	bl	deb0 <__sanitizer_print_stack_trace@@Base+0x3f8>
    e1c4:	ldr	x1, [sp, #24]
    e1c8:	mov	x0, #0x100000000           	// #4294967296
    e1cc:	cmp	x1, x0
    e1d0:	b.ls	e1fc <__sanitizer_print_stack_trace@@Base+0x744>  // b.plast
    e1d4:	bl	dd1c <__sanitizer_print_stack_trace@@Base+0x264>
    e1d8:	ldr	x2, [sp, #32]
    e1dc:	mov	x1, x0
    e1e0:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    e1e4:	add	x0, x0, #0xe80
    e1e8:	bl	f848 <__sanitizer_get_allocated_size@@Base+0xce8>
    e1ec:	ldr	x1, [sp, #40]
    e1f0:	ldr	x0, [sp, #24]
    e1f4:	bl	df3c <__sanitizer_print_stack_trace@@Base+0x484>
    e1f8:	b	e234 <__sanitizer_print_stack_trace@@Base+0x77c>
    e1fc:	bl	dd1c <__sanitizer_print_stack_trace@@Base+0x264>
    e200:	ldr	x4, [sp, #16]
    e204:	ldr	x3, [sp, #24]
    e208:	ldr	x2, [sp, #32]
    e20c:	mov	x1, x0
    e210:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    e214:	add	x0, x0, #0xe80
    e218:	bl	f8f0 <__sanitizer_get_allocated_size@@Base+0xd90>
    e21c:	str	x0, [sp, #32]
    e220:	ldr	x2, [sp, #24]
    e224:	ldr	x1, [sp, #32]
    e228:	ldr	x0, [sp, #40]
    e22c:	bl	ddc0 <__sanitizer_print_stack_trace@@Base+0x308>
    e230:	ldr	x0, [sp, #32]
    e234:	ldr	x30, [sp], #48
    e238:	ret
    e23c:	str	x30, [sp, #-32]!
    e240:	str	x0, [sp, #24]
    e244:	str	x1, [sp, #16]
    e248:	bl	dd1c <__sanitizer_print_stack_trace@@Base+0x264>
    e24c:	mov	x1, x0
    e250:	ldr	x0, [sp, #24]
    e254:	str	x1, [x0]
    e258:	ldr	x0, [sp, #24]
    e25c:	ldr	x1, [x0]
    e260:	mov	x0, #0xd820                	// #55328
    e264:	add	x1, x1, x0
    e268:	ldr	x0, [sp, #16]
    e26c:	str	x1, [x0]
    e270:	nop
    e274:	ldr	x30, [sp], #32
    e278:	ret
    e27c:	str	x30, [sp, #-48]!
    e280:	str	x0, [sp, #24]
    e284:	ldr	x0, [sp, #24]
    e288:	bl	dda0 <__sanitizer_print_stack_trace@@Base+0x2e8>
    e28c:	str	x0, [sp, #40]
    e290:	ldr	x0, [sp, #40]
    e294:	cmp	x0, #0x0
    e298:	b.ne	e2a4 <__sanitizer_print_stack_trace@@Base+0x7ec>  // b.any
    e29c:	mov	x0, #0x0                   	// #0
    e2a0:	b	e2b0 <__sanitizer_print_stack_trace@@Base+0x7f8>
    e2a4:	ldr	x0, [sp, #40]
    e2a8:	ldr	x0, [x0]
    e2ac:	lsr	x0, x0, #10
    e2b0:	ldr	x30, [sp], #48
    e2b4:	ret
    e2b8:	str	x30, [sp, #-80]!
    e2bc:	str	x0, [sp, #40]
    e2c0:	str	x1, [sp, #32]
    e2c4:	str	x2, [sp, #24]
    e2c8:	str	x3, [sp, #16]
    e2cc:	ldr	x0, [sp, #32]
    e2d0:	bl	f284 <__sanitizer_get_allocated_size@@Base+0x724>
    e2d4:	and	w0, w0, #0xff
    e2d8:	eor	w0, w0, #0x1
    e2dc:	and	w0, w0, #0xff
    e2e0:	and	x0, x0, #0xff
    e2e4:	cmp	x0, #0x0
    e2e8:	cset	w0, ne  // ne = any
    e2ec:	and	w0, w0, #0xff
    e2f0:	cmp	w0, #0x0
    e2f4:	b.eq	e31c <__sanitizer_print_stack_trace@@Base+0x864>  // b.none
    e2f8:	bl	16af4 <__sancov_default_options@@Base+0x958>
    e2fc:	and	w0, w0, #0xff
    e300:	cmp	w0, #0x0
    e304:	b.eq	e310 <__sanitizer_print_stack_trace@@Base+0x858>  // b.none
    e308:	mov	w0, #0x16                  	// #22
    e30c:	b	e3c4 <__sanitizer_print_stack_trace@@Base+0x90c>
    e310:	ldr	x1, [sp, #16]
    e314:	ldr	x0, [sp, #32]
    e318:	bl	19054 <__sancov_default_options@@Base+0x2eb8>
    e31c:	mov	w3, #0x1                   	// #1
    e320:	ldr	x2, [sp, #32]
    e324:	ldr	x1, [sp, #24]
    e328:	ldr	x0, [sp, #16]
    e32c:	bl	df88 <__sanitizer_print_stack_trace@@Base+0x4d0>
    e330:	str	x0, [sp, #72]
    e334:	ldr	x0, [sp, #72]
    e338:	cmp	x0, #0x0
    e33c:	cset	w0, eq  // eq = none
    e340:	and	w0, w0, #0xff
    e344:	and	x0, x0, #0xff
    e348:	cmp	x0, #0x0
    e34c:	b.eq	e358 <__sanitizer_print_stack_trace@@Base+0x8a0>  // b.none
    e350:	mov	w0, #0xc                   	// #12
    e354:	b	e3c4 <__sanitizer_print_stack_trace@@Base+0x90c>
    e358:	ldr	x0, [sp, #72]
    e35c:	ldr	x1, [sp, #32]
    e360:	bl	ed50 <__sanitizer_get_allocated_size@@Base+0x1f0>
    e364:	and	w0, w0, #0xff
    e368:	and	x0, x0, #0xff
    e36c:	str	x0, [sp, #64]
    e370:	str	xzr, [sp, #56]
    e374:	ldr	x1, [sp, #64]
    e378:	ldr	x0, [sp, #56]
    e37c:	cmp	x1, x0
    e380:	cset	w0, eq  // eq = none
    e384:	and	w0, w0, #0xff
    e388:	and	x0, x0, #0xff
    e38c:	cmp	x0, #0x0
    e390:	b.eq	e3b4 <__sanitizer_print_stack_trace@@Base+0x8fc>  // b.none
    e394:	ldr	x4, [sp, #56]
    e398:	ldr	x3, [sp, #64]
    e39c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
    e3a0:	add	x2, x0, #0x650
    e3a4:	mov	w1, #0x99                  	// #153
    e3a8:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
    e3ac:	add	x0, x0, #0x5e8
    e3b0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    e3b4:	ldr	x0, [sp, #40]
    e3b8:	ldr	x1, [sp, #72]
    e3bc:	str	x1, [x0]
    e3c0:	mov	w0, #0x0                   	// #0
    e3c4:	ldr	x30, [sp], #80
    e3c8:	ret
    e3cc:	str	x30, [sp, #-48]!
    e3d0:	str	x0, [sp, #40]
    e3d4:	str	x1, [sp, #32]
    e3d8:	str	x2, [sp, #24]
    e3dc:	ldr	x1, [sp, #32]
    e3e0:	ldr	x0, [sp, #40]
    e3e4:	bl	f22c <__sanitizer_get_allocated_size@@Base+0x6cc>
    e3e8:	and	w0, w0, #0xff
    e3ec:	eor	w0, w0, #0x1
    e3f0:	and	w0, w0, #0xff
    e3f4:	and	x0, x0, #0xff
    e3f8:	cmp	x0, #0x0
    e3fc:	cset	w0, ne  // ne = any
    e400:	and	w0, w0, #0xff
    e404:	cmp	w0, #0x0
    e408:	b.eq	e444 <__sanitizer_print_stack_trace@@Base+0x98c>  // b.none
    e40c:	bl	6d00 <__errno_location@plt>
    e410:	mov	x1, x0
    e414:	mov	w0, #0x16                  	// #22
    e418:	str	w0, [x1]
    e41c:	bl	16af4 <__sancov_default_options@@Base+0x958>
    e420:	and	w0, w0, #0xff
    e424:	cmp	w0, #0x0
    e428:	b.eq	e434 <__sanitizer_print_stack_trace@@Base+0x97c>  // b.none
    e42c:	mov	x0, #0x0                   	// #0
    e430:	b	e460 <__sanitizer_print_stack_trace@@Base+0x9a8>
    e434:	ldr	x2, [sp, #24]
    e438:	ldr	x1, [sp, #40]
    e43c:	ldr	x0, [sp, #32]
    e440:	bl	18ffc <__sancov_default_options@@Base+0x2e60>
    e444:	mov	w3, #0x1                   	// #1
    e448:	ldr	x2, [sp, #40]
    e44c:	ldr	x1, [sp, #32]
    e450:	ldr	x0, [sp, #24]
    e454:	bl	df88 <__sanitizer_print_stack_trace@@Base+0x4d0>
    e458:	bl	f1f8 <__sanitizer_get_allocated_size@@Base+0x698>
    e45c:	nop
    e460:	ldr	x30, [sp], #48
    e464:	ret
    e468:	str	x30, [sp, #-48]!
    e46c:	str	x0, [sp, #40]
    e470:	str	x1, [sp, #32]
    e474:	str	x2, [sp, #24]
    e478:	ldr	x0, [sp, #40]
    e47c:	bl	a3a0 <__lsan_do_recoverable_leak_check@@Base+0x214>
    e480:	and	w0, w0, #0xff
    e484:	eor	w0, w0, #0x1
    e488:	and	w0, w0, #0xff
    e48c:	and	x0, x0, #0xff
    e490:	cmp	x0, #0x0
    e494:	cset	w0, ne  // ne = any
    e498:	and	w0, w0, #0xff
    e49c:	cmp	w0, #0x0
    e4a0:	b.eq	e4d8 <__sanitizer_print_stack_trace@@Base+0xa20>  // b.none
    e4a4:	bl	6d00 <__errno_location@plt>
    e4a8:	mov	x1, x0
    e4ac:	mov	w0, #0x16                  	// #22
    e4b0:	str	w0, [x1]
    e4b4:	bl	16af4 <__sancov_default_options@@Base+0x958>
    e4b8:	and	w0, w0, #0xff
    e4bc:	cmp	w0, #0x0
    e4c0:	b.eq	e4cc <__sanitizer_print_stack_trace@@Base+0xa14>  // b.none
    e4c4:	mov	x0, #0x0                   	// #0
    e4c8:	b	e4f4 <__sanitizer_print_stack_trace@@Base+0xa3c>
    e4cc:	ldr	x1, [sp, #24]
    e4d0:	ldr	x0, [sp, #40]
    e4d4:	bl	18fac <__sancov_default_options@@Base+0x2e10>
    e4d8:	mov	w3, #0x1                   	// #1
    e4dc:	ldr	x2, [sp, #40]
    e4e0:	ldr	x1, [sp, #32]
    e4e4:	ldr	x0, [sp, #24]
    e4e8:	bl	df88 <__sanitizer_print_stack_trace@@Base+0x4d0>
    e4ec:	bl	f1f8 <__sanitizer_get_allocated_size@@Base+0x698>
    e4f0:	nop
    e4f4:	ldr	x30, [sp], #48
    e4f8:	ret
    e4fc:	str	x30, [sp, #-32]!
    e500:	str	x0, [sp, #24]
    e504:	str	x1, [sp, #16]
    e508:	mov	w3, #0x1                   	// #1
    e50c:	mov	x2, #0x1                   	// #1
    e510:	ldr	x1, [sp, #24]
    e514:	ldr	x0, [sp, #16]
    e518:	bl	df88 <__sanitizer_print_stack_trace@@Base+0x4d0>
    e51c:	bl	f1f8 <__sanitizer_get_allocated_size@@Base+0x698>
    e520:	ldr	x30, [sp], #32
    e524:	ret
    e528:	str	x30, [sp, #-32]!
    e52c:	str	x0, [sp, #24]
    e530:	ldr	x0, [sp, #24]
    e534:	bl	e154 <__sanitizer_print_stack_trace@@Base+0x69c>
    e538:	nop
    e53c:	ldr	x30, [sp], #32
    e540:	ret
    e544:	str	x30, [sp, #-48]!
    e548:	str	x0, [sp, #40]
    e54c:	str	x1, [sp, #32]
    e550:	str	x2, [sp, #24]
    e554:	mov	x3, #0x1                   	// #1
    e558:	ldr	x2, [sp, #32]
    e55c:	ldr	x1, [sp, #40]
    e560:	ldr	x0, [sp, #24]
    e564:	bl	e1a8 <__sanitizer_print_stack_trace@@Base+0x6f0>
    e568:	bl	f1f8 <__sanitizer_get_allocated_size@@Base+0x698>
    e56c:	ldr	x30, [sp], #48
    e570:	ret
    e574:	str	x30, [sp, #-48]!
    e578:	str	x0, [sp, #40]
    e57c:	str	x1, [sp, #32]
    e580:	str	x2, [sp, #24]
    e584:	ldr	x2, [sp, #24]
    e588:	ldr	x1, [sp, #32]
    e58c:	ldr	x0, [sp, #40]
    e590:	bl	e0c4 <__sanitizer_print_stack_trace@@Base+0x60c>
    e594:	bl	f1f8 <__sanitizer_get_allocated_size@@Base+0x698>
    e598:	ldr	x30, [sp], #48
    e59c:	ret
    e5a0:	str	x30, [sp, #-32]!
    e5a4:	str	x0, [sp, #24]
    e5a8:	str	x1, [sp, #16]
    e5ac:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
    e5b0:	mov	w3, #0x1                   	// #1
    e5b4:	mov	x2, x0
    e5b8:	ldr	x1, [sp, #24]
    e5bc:	ldr	x0, [sp, #16]
    e5c0:	bl	df88 <__sanitizer_print_stack_trace@@Base+0x4d0>
    e5c4:	bl	f1f8 <__sanitizer_get_allocated_size@@Base+0x698>
    e5c8:	ldr	x30, [sp], #32
    e5cc:	ret
    e5d0:	str	x30, [sp, #-48]!
    e5d4:	str	x0, [sp, #24]
    e5d8:	str	x1, [sp, #16]
    e5dc:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
    e5e0:	str	x0, [sp, #40]
    e5e4:	ldr	x1, [sp, #40]
    e5e8:	ldr	x0, [sp, #24]
    e5ec:	bl	f31c <__sanitizer_get_allocated_size@@Base+0x7bc>
    e5f0:	and	w0, w0, #0xff
    e5f4:	and	x0, x0, #0xff
    e5f8:	cmp	x0, #0x0
    e5fc:	cset	w0, ne  // ne = any
    e600:	and	w0, w0, #0xff
    e604:	cmp	w0, #0x0
    e608:	b.eq	e640 <__sanitizer_print_stack_trace@@Base+0xb88>  // b.none
    e60c:	bl	6d00 <__errno_location@plt>
    e610:	mov	x1, x0
    e614:	mov	w0, #0xc                   	// #12
    e618:	str	w0, [x1]
    e61c:	bl	16af4 <__sancov_default_options@@Base+0x958>
    e620:	and	w0, w0, #0xff
    e624:	cmp	w0, #0x0
    e628:	b.eq	e634 <__sanitizer_print_stack_trace@@Base+0xb7c>  // b.none
    e62c:	mov	x0, #0x0                   	// #0
    e630:	b	e680 <__sanitizer_print_stack_trace@@Base+0xbc8>
    e634:	ldr	x1, [sp, #16]
    e638:	ldr	x0, [sp, #24]
    e63c:	bl	18f54 <__sancov_default_options@@Base+0x2db8>
    e640:	ldr	x0, [sp, #24]
    e644:	cmp	x0, #0x0
    e648:	b.eq	e65c <__sanitizer_print_stack_trace@@Base+0xba4>  // b.none
    e64c:	ldr	x1, [sp, #40]
    e650:	ldr	x0, [sp, #24]
    e654:	bl	a518 <__lsan_do_recoverable_leak_check@@Base+0x38c>
    e658:	b	e660 <__sanitizer_print_stack_trace@@Base+0xba8>
    e65c:	ldr	x0, [sp, #40]
    e660:	str	x0, [sp, #24]
    e664:	mov	w3, #0x1                   	// #1
    e668:	ldr	x2, [sp, #40]
    e66c:	ldr	x1, [sp, #24]
    e670:	ldr	x0, [sp, #16]
    e674:	bl	df88 <__sanitizer_print_stack_trace@@Base+0x4d0>
    e678:	bl	f1f8 <__sanitizer_get_allocated_size@@Base+0x698>
    e67c:	nop
    e680:	ldr	x30, [sp], #48
    e684:	ret
    e688:	str	x30, [sp, #-32]!
    e68c:	str	x0, [sp, #24]
    e690:	ldr	x0, [sp, #24]
    e694:	bl	e27c <__sanitizer_print_stack_trace@@Base+0x7c4>
    e698:	ldr	x30, [sp], #32
    e69c:	ret
    e6a0:	str	x30, [sp, #-16]!
    e6a4:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    e6a8:	add	x0, x0, #0xe80
    e6ac:	bl	fa1c <__sanitizer_get_allocated_size@@Base+0xebc>
    e6b0:	nop
    e6b4:	ldr	x30, [sp], #16
    e6b8:	ret
    e6bc:	str	x30, [sp, #-16]!
    e6c0:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    e6c4:	add	x0, x0, #0xe80
    e6c8:	bl	fa4c <__sanitizer_get_allocated_size@@Base+0xeec>
    e6cc:	nop
    e6d0:	ldr	x30, [sp], #16
    e6d4:	ret
    e6d8:	sub	sp, sp, #0x10
    e6dc:	str	x0, [sp, #8]
    e6e0:	str	x1, [sp]
    e6e4:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    e6e8:	add	x1, x0, #0xe80
    e6ec:	ldr	x0, [sp, #8]
    e6f0:	str	x1, [x0]
    e6f4:	ldr	x0, [sp, #8]
    e6f8:	ldr	x1, [x0]
    e6fc:	mov	x0, #0x1080                	// #4224
    e700:	movk	x0, #0x8, lsl #16
    e704:	add	x1, x1, x0
    e708:	ldr	x0, [sp]
    e70c:	str	x1, [x0]
    e710:	nop
    e714:	add	sp, sp, #0x10
    e718:	ret
    e71c:	str	x30, [sp, #-80]!
    e720:	str	x0, [sp, #24]
    e724:	ldr	x0, [sp, #24]
    e728:	str	x0, [sp, #72]
    e72c:	ldr	x1, [sp, #24]
    e730:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    e734:	add	x0, x0, #0xe80
    e738:	bl	fa7c <__sanitizer_get_allocated_size@@Base+0xf1c>
    e73c:	str	x0, [sp, #64]
    e740:	ldr	x0, [sp, #64]
    e744:	cmp	x0, #0x0
    e748:	b.ne	e754 <__sanitizer_print_stack_trace@@Base+0xc9c>  // b.any
    e74c:	mov	x0, #0x0                   	// #0
    e750:	b	e83c <__sanitizer_print_stack_trace@@Base+0xd84>
    e754:	ldr	x1, [sp, #72]
    e758:	ldr	x0, [sp, #64]
    e75c:	cmp	x1, x0
    e760:	b.cs	e76c <__sanitizer_print_stack_trace@@Base+0xcb4>  // b.hs, b.nlast
    e764:	mov	x0, #0x0                   	// #0
    e768:	b	e83c <__sanitizer_print_stack_trace@@Base+0xd84>
    e76c:	ldr	x0, [sp, #64]
    e770:	bl	dda0 <__sanitizer_print_stack_trace@@Base+0x2e8>
    e774:	str	x0, [sp, #56]
    e778:	ldr	x0, [sp, #56]
    e77c:	str	x0, [sp, #48]
    e780:	str	xzr, [sp, #40]
    e784:	ldr	x1, [sp, #48]
    e788:	ldr	x0, [sp, #40]
    e78c:	cmp	x1, x0
    e790:	cset	w0, eq  // eq = none
    e794:	and	w0, w0, #0xff
    e798:	and	x0, x0, #0xff
    e79c:	cmp	x0, #0x0
    e7a0:	b.eq	e7c4 <__sanitizer_print_stack_trace@@Base+0xd0c>  // b.none
    e7a4:	ldr	x4, [sp, #40]
    e7a8:	ldr	x3, [sp, #48]
    e7ac:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
    e7b0:	add	x2, x0, #0x5d8
    e7b4:	mov	w1, #0xef                  	// #239
    e7b8:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
    e7bc:	add	x0, x0, #0x5e8
    e7c0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    e7c4:	ldr	x0, [sp, #56]
    e7c8:	ldrb	w0, [x0]
    e7cc:	cmp	w0, #0x0
    e7d0:	b.ne	e7dc <__sanitizer_print_stack_trace@@Base+0xd24>  // b.any
    e7d4:	mov	x0, #0x0                   	// #0
    e7d8:	b	e83c <__sanitizer_print_stack_trace@@Base+0xd84>
    e7dc:	ldr	x0, [sp, #56]
    e7e0:	ldr	x0, [x0]
    e7e4:	lsr	x0, x0, #10
    e7e8:	mov	x1, x0
    e7ec:	ldr	x0, [sp, #64]
    e7f0:	add	x0, x1, x0
    e7f4:	ldr	x1, [sp, #72]
    e7f8:	cmp	x1, x0
    e7fc:	b.cs	e808 <__sanitizer_print_stack_trace@@Base+0xd50>  // b.hs, b.nlast
    e800:	ldr	x0, [sp, #64]
    e804:	b	e83c <__sanitizer_print_stack_trace@@Base+0xd84>
    e808:	ldr	x0, [sp, #56]
    e80c:	ldr	x0, [x0]
    e810:	lsr	x0, x0, #10
    e814:	ldr	x2, [sp, #72]
    e818:	mov	x1, x0
    e81c:	ldr	x0, [sp, #64]
    e820:	bl	f1cc <__sanitizer_get_allocated_size@@Base+0x66c>
    e824:	and	w0, w0, #0xff
    e828:	cmp	w0, #0x0
    e82c:	b.eq	e838 <__sanitizer_print_stack_trace@@Base+0xd80>  // b.none
    e830:	ldr	x0, [sp, #64]
    e834:	b	e83c <__sanitizer_print_stack_trace@@Base+0xd84>
    e838:	mov	x0, #0x0                   	// #0
    e83c:	ldr	x30, [sp], #80
    e840:	ret
    e844:	sub	sp, sp, #0x10
    e848:	str	x0, [sp, #8]
    e84c:	ldr	x0, [sp, #8]
    e850:	add	sp, sp, #0x10
    e854:	ret
    e858:	str	x30, [sp, #-48]!
    e85c:	str	x0, [sp, #24]
    e860:	str	x1, [sp, #16]
    e864:	ldr	x0, [sp, #16]
    e868:	bl	dda0 <__sanitizer_print_stack_trace@@Base+0x2e8>
    e86c:	mov	x1, x0
    e870:	ldr	x0, [sp, #24]
    e874:	str	x1, [x0]
    e878:	ldr	x0, [sp, #24]
    e87c:	ldr	x0, [x0]
    e880:	str	x0, [sp, #40]
    e884:	str	xzr, [sp, #32]
    e888:	ldr	x1, [sp, #40]
    e88c:	ldr	x0, [sp, #32]
    e890:	cmp	x1, x0
    e894:	cset	w0, eq  // eq = none
    e898:	and	w0, w0, #0xff
    e89c:	and	x0, x0, #0xff
    e8a0:	cmp	x0, #0x0
    e8a4:	b.eq	e8c8 <__sanitizer_print_stack_trace@@Base+0xe10>  // b.none
    e8a8:	ldr	x4, [sp, #32]
    e8ac:	ldr	x3, [sp, #40]
    e8b0:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
    e8b4:	add	x2, x0, #0x680
    e8b8:	mov	w1, #0xff                  	// #255
    e8bc:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
    e8c0:	add	x0, x0, #0x5e8
    e8c4:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    e8c8:	nop
    e8cc:	ldr	x30, [sp], #48
    e8d0:	ret
    e8d4:	sub	sp, sp, #0x10
    e8d8:	str	x0, [sp, #8]
    e8dc:	ldr	x0, [sp, #8]
    e8e0:	ldr	x0, [x0]
    e8e4:	ldrb	w0, [x0]
    e8e8:	cmp	w0, #0x0
    e8ec:	cset	w0, ne  // ne = any
    e8f0:	and	w0, w0, #0xff
    e8f4:	add	sp, sp, #0x10
    e8f8:	ret
    e8fc:	sub	sp, sp, #0x10
    e900:	str	x0, [sp, #8]
    e904:	ldr	x0, [sp, #8]
    e908:	ldr	x0, [x0]
    e90c:	ldrb	w0, [x0, #1]
    e910:	ubfx	x0, x0, #0, #2
    e914:	and	w0, w0, #0xff
    e918:	add	sp, sp, #0x10
    e91c:	ret
    e920:	sub	sp, sp, #0x10
    e924:	str	x0, [sp, #8]
    e928:	str	w1, [sp, #4]
    e92c:	ldr	x0, [sp, #8]
    e930:	ldr	x1, [x0]
    e934:	ldr	w0, [sp, #4]
    e938:	and	w0, w0, #0x3
    e93c:	and	w2, w0, #0xff
    e940:	ldrb	w0, [x1, #1]
    e944:	bfxil	w0, w2, #0, #2
    e948:	strb	w0, [x1, #1]
    e94c:	nop
    e950:	add	sp, sp, #0x10
    e954:	ret
    e958:	sub	sp, sp, #0x10
    e95c:	str	x0, [sp, #8]
    e960:	ldr	x0, [sp, #8]
    e964:	ldr	x0, [x0]
    e968:	ldr	x0, [x0]
    e96c:	lsr	x0, x0, #10
    e970:	add	sp, sp, #0x10
    e974:	ret
    e978:	sub	sp, sp, #0x10
    e97c:	str	x0, [sp, #8]
    e980:	ldr	x0, [sp, #8]
    e984:	ldr	x0, [x0]
    e988:	ldr	w0, [x0, #8]
    e98c:	add	sp, sp, #0x10
    e990:	ret
    e994:	str	x30, [sp, #-32]!
    e998:	str	x0, [sp, #24]
    e99c:	str	x1, [sp, #16]
    e9a0:	ldr	x2, [sp, #16]
    e9a4:	ldr	x1, [sp, #24]
    e9a8:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    e9ac:	add	x0, x0, #0xe80
    e9b0:	bl	fad0 <__sanitizer_get_allocated_size@@Base+0xf70>
    e9b4:	nop
    e9b8:	ldr	x30, [sp], #32
    e9bc:	ret
    e9c0:	str	x30, [sp, #-64]!
    e9c4:	str	x0, [sp, #24]
    e9c8:	ldr	x1, [sp, #24]
    e9cc:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    e9d0:	add	x0, x0, #0xe80
    e9d4:	bl	fb18 <__sanitizer_get_allocated_size@@Base+0xfb8>
    e9d8:	str	x0, [sp, #56]
    e9dc:	ldr	x0, [sp, #56]
    e9e0:	cmp	x0, #0x0
    e9e4:	b.eq	e9f8 <__sanitizer_print_stack_trace@@Base+0xf40>  // b.none
    e9e8:	ldr	x1, [sp, #24]
    e9ec:	ldr	x0, [sp, #56]
    e9f0:	cmp	x1, x0
    e9f4:	b.cs	ea00 <__sanitizer_print_stack_trace@@Base+0xf48>  // b.hs, b.nlast
    e9f8:	mov	w0, #0x2                   	// #2
    e9fc:	b	eac8 <__sanitizer_print_stack_trace@@Base+0x1010>
    ea00:	ldr	x0, [sp, #56]
    ea04:	bl	dda0 <__sanitizer_print_stack_trace@@Base+0x2e8>
    ea08:	str	x0, [sp, #48]
    ea0c:	ldr	x0, [sp, #48]
    ea10:	str	x0, [sp, #40]
    ea14:	str	xzr, [sp, #32]
    ea18:	ldr	x1, [sp, #40]
    ea1c:	ldr	x0, [sp, #32]
    ea20:	cmp	x1, x0
    ea24:	cset	w0, eq  // eq = none
    ea28:	and	w0, w0, #0xff
    ea2c:	and	x0, x0, #0xff
    ea30:	cmp	x0, #0x0
    ea34:	b.eq	ea58 <__sanitizer_print_stack_trace@@Base+0xfa0>  // b.none
    ea38:	ldr	x4, [sp, #32]
    ea3c:	ldr	x3, [sp, #40]
    ea40:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
    ea44:	add	x2, x0, #0x5d8
    ea48:	mov	w1, #0x11e                 	// #286
    ea4c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
    ea50:	add	x0, x0, #0x5e8
    ea54:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    ea58:	ldr	x0, [sp, #48]
    ea5c:	ldrb	w0, [x0]
    ea60:	cmp	w0, #0x0
    ea64:	b.eq	eac4 <__sanitizer_print_stack_trace@@Base+0x100c>  // b.none
    ea68:	ldr	x0, [sp, #48]
    ea6c:	ldr	x0, [x0]
    ea70:	lsr	x0, x0, #10
    ea74:	mov	x1, x0
    ea78:	ldr	x0, [sp, #56]
    ea7c:	add	x1, x1, x0
    ea80:	ldr	x0, [sp, #24]
    ea84:	cmp	x1, x0
    ea88:	b.ls	eac4 <__sanitizer_print_stack_trace@@Base+0x100c>  // b.plast
    ea8c:	ldr	x0, [sp, #48]
    ea90:	ldrb	w0, [x0, #1]
    ea94:	and	w0, w0, #0x3
    ea98:	and	w0, w0, #0xff
    ea9c:	cmp	w0, #0x3
    eaa0:	b.ne	eaac <__sanitizer_print_stack_trace@@Base+0xff4>  // b.any
    eaa4:	mov	w0, #0x1                   	// #1
    eaa8:	b	eac8 <__sanitizer_print_stack_trace@@Base+0x1010>
    eaac:	ldr	x0, [sp, #48]
    eab0:	ldrb	w1, [x0, #1]
    eab4:	orr	w1, w1, #0x3
    eab8:	strb	w1, [x0, #1]
    eabc:	mov	w0, #0x0                   	// #0
    eac0:	b	eac8 <__sanitizer_print_stack_trace@@Base+0x1010>
    eac4:	mov	w0, #0x2                   	// #2
    eac8:	ldr	x30, [sp], #64
    eacc:	ret

000000000000ead0 <__sanitizer_get_current_allocated_bytes@@Base>:
    ead0:	str	x30, [sp, #-32]!
    ead4:	add	x0, sp, #0x10
    ead8:	mov	x1, x0
    eadc:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    eae0:	add	x0, x0, #0xe80
    eae4:	bl	fb6c <__sanitizer_get_allocated_size@@Base+0x100c>
    eae8:	ldr	x0, [sp, #16]
    eaec:	ldr	x30, [sp], #32
    eaf0:	ret

000000000000eaf4 <__sanitizer_get_heap_size@@Base>:
    eaf4:	str	x30, [sp, #-32]!
    eaf8:	add	x0, sp, #0x10
    eafc:	mov	x1, x0
    eb00:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
    eb04:	add	x0, x0, #0xe80
    eb08:	bl	fb6c <__sanitizer_get_allocated_size@@Base+0x100c>
    eb0c:	ldr	x0, [sp, #24]
    eb10:	ldr	x30, [sp], #32
    eb14:	ret

000000000000eb18 <__sanitizer_get_free_bytes@@Base>:
    eb18:	mov	x0, #0x0                   	// #0
    eb1c:	ret

000000000000eb20 <__sanitizer_get_unmapped_bytes@@Base>:
    eb20:	mov	x0, #0x0                   	// #0
    eb24:	ret

000000000000eb28 <__sanitizer_get_estimated_allocated_size@@Base>:
    eb28:	sub	sp, sp, #0x10
    eb2c:	str	x0, [sp, #8]
    eb30:	ldr	x0, [sp, #8]
    eb34:	add	sp, sp, #0x10
    eb38:	ret

000000000000eb3c <__sanitizer_get_ownership@@Base>:
    eb3c:	str	x30, [sp, #-32]!
    eb40:	str	x0, [sp, #24]
    eb44:	ldr	x0, [sp, #24]
    eb48:	bl	dda0 <__sanitizer_print_stack_trace@@Base+0x2e8>
    eb4c:	cmp	x0, #0x0
    eb50:	cset	w0, ne  // ne = any
    eb54:	and	w0, w0, #0xff
    eb58:	ldr	x30, [sp], #32
    eb5c:	ret

000000000000eb60 <__sanitizer_get_allocated_size@@Base>:
    eb60:	str	x30, [sp, #-32]!
    eb64:	str	x0, [sp, #24]
    eb68:	ldr	x0, [sp, #24]
    eb6c:	bl	e27c <__sanitizer_print_stack_trace@@Base+0x7c4>
    eb70:	ldr	x30, [sp], #32
    eb74:	ret
    eb78:	sub	sp, sp, #0x10
    eb7c:	str	w0, [sp, #12]
    eb80:	nop
    eb84:	add	sp, sp, #0x10
    eb88:	ret
    eb8c:	str	x30, [sp, #-32]!
    eb90:	str	x0, [sp, #24]
    eb94:	ldr	x0, [sp, #24]
    eb98:	mov	w2, #0x1                   	// #1
    eb9c:	mov	w1, #0x0                   	// #0
    eba0:	bl	f350 <__sanitizer_get_allocated_size@@Base+0x7f0>
    eba4:	nop
    eba8:	ldr	x30, [sp], #32
    ebac:	ret
    ebb0:	str	x30, [sp, #-32]!
    ebb4:	str	x0, [sp, #24]
    ebb8:	ldr	x0, [sp, #24]
    ebbc:	bl	ebe4 <__sanitizer_get_allocated_size@@Base+0x84>
    ebc0:	and	w0, w0, #0xff
    ebc4:	cmp	w0, #0x0
    ebc8:	b.ne	ebd8 <__sanitizer_get_allocated_size@@Base+0x78>  // b.any
    ebcc:	ldr	x0, [sp, #24]
    ebd0:	bl	ecac <__sanitizer_get_allocated_size@@Base+0x14c>
    ebd4:	b	ebdc <__sanitizer_get_allocated_size@@Base+0x7c>
    ebd8:	nop
    ebdc:	ldr	x30, [sp], #32
    ebe0:	ret
    ebe4:	str	x30, [sp, #-32]!
    ebe8:	str	x0, [sp, #24]
    ebec:	ldr	x0, [sp, #24]
    ebf0:	mov	w2, #0x4                   	// #4
    ebf4:	mov	w1, #0x1                   	// #1
    ebf8:	bl	f3bc <__sanitizer_get_allocated_size@@Base+0x85c>
    ebfc:	and	w0, w0, #0xff
    ec00:	cmp	w0, #0x0
    ec04:	cset	w0, eq  // eq = none
    ec08:	and	w0, w0, #0xff
    ec0c:	ldr	x30, [sp], #32
    ec10:	ret
    ec14:	str	x30, [sp, #-32]!
    ec18:	str	x0, [sp, #24]
    ec1c:	ldr	x0, [sp, #24]
    ec20:	mov	w2, #0x8                   	// #8
    ec24:	mov	w1, #0x0                   	// #0
    ec28:	bl	f350 <__sanitizer_get_allocated_size@@Base+0x7f0>
    ec2c:	nop
    ec30:	ldr	x30, [sp], #32
    ec34:	ret
    ec38:	str	x30, [sp, #-48]!
    ec3c:	str	x0, [sp, #24]
    ec40:	ldr	x0, [sp, #24]
    ec44:	mov	w1, #0x1                   	// #1
    ec48:	bl	f418 <__sanitizer_get_allocated_size@@Base+0x8b8>
    ec4c:	and	w0, w0, #0xff
    ec50:	and	x0, x0, #0xff
    ec54:	str	x0, [sp, #40]
    ec58:	mov	x0, #0x1                   	// #1
    ec5c:	str	x0, [sp, #32]
    ec60:	ldr	x1, [sp, #40]
    ec64:	ldr	x0, [sp, #32]
    ec68:	cmp	x1, x0
    ec6c:	cset	w0, ne  // ne = any
    ec70:	and	w0, w0, #0xff
    ec74:	and	x0, x0, #0xff
    ec78:	cmp	x0, #0x0
    ec7c:	b.eq	eca0 <__sanitizer_get_allocated_size@@Base+0x140>  // b.none
    ec80:	ldr	x4, [sp, #32]
    ec84:	ldr	x3, [sp, #40]
    ec88:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
    ec8c:	add	x2, x0, #0x3a8
    ec90:	mov	w1, #0x2a                  	// #42
    ec94:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
    ec98:	add	x0, x0, #0x3e0
    ec9c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    eca0:	nop
    eca4:	ldr	x30, [sp], #48
    eca8:	ret
    ecac:	str	x30, [sp, #-48]!
    ecb0:	str	x0, [sp, #24]
    ecb4:	str	wzr, [sp, #44]
    ecb8:	ldr	w0, [sp, #44]
    ecbc:	cmp	w0, #0x9
    ecc0:	b.gt	ecd0 <__sanitizer_get_allocated_size@@Base+0x170>
    ecc4:	mov	w0, #0xa                   	// #10
    ecc8:	bl	eb78 <__sanitizer_get_allocated_size@@Base+0x18>
    eccc:	b	ecd4 <__sanitizer_get_allocated_size@@Base+0x174>
    ecd0:	bl	23334 <__sanitizer_set_report_fd@@Base+0x413c>
    ecd4:	ldr	x0, [sp, #24]
    ecd8:	mov	w1, #0x1                   	// #1
    ecdc:	bl	f418 <__sanitizer_get_allocated_size@@Base+0x8b8>
    ece0:	and	w0, w0, #0xff
    ece4:	cmp	w0, #0x0
    ece8:	b.ne	ed10 <__sanitizer_get_allocated_size@@Base+0x1b0>  // b.any
    ecec:	ldr	x0, [sp, #24]
    ecf0:	mov	w2, #0x4                   	// #4
    ecf4:	mov	w1, #0x1                   	// #1
    ecf8:	bl	f3bc <__sanitizer_get_allocated_size@@Base+0x85c>
    ecfc:	and	w0, w0, #0xff
    ed00:	cmp	w0, #0x0
    ed04:	b.ne	ed10 <__sanitizer_get_allocated_size@@Base+0x1b0>  // b.any
    ed08:	mov	w0, #0x1                   	// #1
    ed0c:	b	ed14 <__sanitizer_get_allocated_size@@Base+0x1b4>
    ed10:	mov	w0, #0x0                   	// #0
    ed14:	cmp	w0, #0x0
    ed18:	b.ne	ed2c <__sanitizer_get_allocated_size@@Base+0x1cc>  // b.any
    ed1c:	ldr	w0, [sp, #44]
    ed20:	add	w0, w0, #0x1
    ed24:	str	w0, [sp, #44]
    ed28:	b	ecb8 <__sanitizer_get_allocated_size@@Base+0x158>
    ed2c:	nop
    ed30:	ldr	x30, [sp], #48
    ed34:	ret
    ed38:	sub	sp, sp, #0x10
    ed3c:	str	x0, [sp, #8]
    ed40:	ldr	x0, [sp, #8]
    ed44:	ldr	x0, [x0]
    ed48:	add	sp, sp, #0x10
    ed4c:	ret
    ed50:	sub	sp, sp, #0x10
    ed54:	str	x0, [sp, #8]
    ed58:	str	x1, [sp]
    ed5c:	ldr	x0, [sp]
    ed60:	sub	x1, x0, #0x1
    ed64:	ldr	x0, [sp, #8]
    ed68:	and	x0, x1, x0
    ed6c:	cmp	x0, #0x0
    ed70:	cset	w0, eq  // eq = none
    ed74:	and	w0, w0, #0xff
    ed78:	add	sp, sp, #0x10
    ed7c:	ret
    ed80:	sub	sp, sp, #0x20
    ed84:	str	x0, [sp, #24]
    ed88:	str	x1, [sp, #16]
    ed8c:	str	x2, [sp, #8]
    ed90:	nop
    ed94:	add	sp, sp, #0x20
    ed98:	ret
    ed9c:	sub	sp, sp, #0x20
    eda0:	str	x0, [sp, #24]
    eda4:	str	x1, [sp, #16]
    eda8:	str	x2, [sp, #8]
    edac:	nop
    edb0:	add	sp, sp, #0x20
    edb4:	ret
    edb8:	str	x30, [sp, #-48]!
    edbc:	str	x0, [sp, #40]
    edc0:	str	w1, [sp, #36]
    edc4:	str	x2, [sp, #24]
    edc8:	ldr	w0, [sp, #36]
    edcc:	sxtw	x0, w0
    edd0:	add	x0, x0, #0x2
    edd4:	lsl	x0, x0, #3
    edd8:	ldr	x1, [sp, #40]
    eddc:	add	x0, x1, x0
    ede0:	mov	w1, #0x1                   	// #1
    ede4:	bl	f49c <__sanitizer_get_allocated_size@@Base+0x93c>
    ede8:	mov	x1, x0
    edec:	ldr	x0, [sp, #24]
    edf0:	add	x0, x0, x1
    edf4:	str	x0, [sp, #24]
    edf8:	ldr	w0, [sp, #36]
    edfc:	sxtw	x0, w0
    ee00:	add	x0, x0, #0x2
    ee04:	lsl	x0, x0, #3
    ee08:	ldr	x1, [sp, #40]
    ee0c:	add	x0, x1, x0
    ee10:	mov	w2, #0x1                   	// #1
    ee14:	ldr	x1, [sp, #24]
    ee18:	bl	f520 <__sanitizer_get_allocated_size@@Base+0x9c0>
    ee1c:	nop
    ee20:	ldr	x30, [sp], #48
    ee24:	ret
    ee28:	str	x30, [sp, #-48]!
    ee2c:	str	x0, [sp, #40]
    ee30:	str	w1, [sp, #36]
    ee34:	str	x2, [sp, #24]
    ee38:	ldr	w0, [sp, #36]
    ee3c:	sxtw	x0, w0
    ee40:	add	x0, x0, #0x2
    ee44:	lsl	x0, x0, #3
    ee48:	ldr	x1, [sp, #40]
    ee4c:	add	x0, x1, x0
    ee50:	mov	w1, #0x1                   	// #1
    ee54:	bl	f49c <__sanitizer_get_allocated_size@@Base+0x93c>
    ee58:	mov	x1, x0
    ee5c:	ldr	x0, [sp, #24]
    ee60:	sub	x0, x1, x0
    ee64:	str	x0, [sp, #24]
    ee68:	ldr	w0, [sp, #36]
    ee6c:	sxtw	x0, w0
    ee70:	add	x0, x0, #0x2
    ee74:	lsl	x0, x0, #3
    ee78:	ldr	x1, [sp, #40]
    ee7c:	add	x0, x1, x0
    ee80:	mov	w2, #0x1                   	// #1
    ee84:	ldr	x1, [sp, #24]
    ee88:	bl	f520 <__sanitizer_get_allocated_size@@Base+0x9c0>
    ee8c:	nop
    ee90:	ldr	x30, [sp], #48
    ee94:	ret
    ee98:	str	x30, [sp, #-32]!
    ee9c:	str	x0, [sp, #24]
    eea0:	str	w1, [sp, #20]
    eea4:	ldr	w0, [sp, #20]
    eea8:	sxtw	x0, w0
    eeac:	add	x0, x0, #0x2
    eeb0:	lsl	x0, x0, #3
    eeb4:	ldr	x1, [sp, #24]
    eeb8:	add	x0, x1, x0
    eebc:	mov	w1, #0x1                   	// #1
    eec0:	bl	f49c <__sanitizer_get_allocated_size@@Base+0x93c>
    eec4:	ldr	x30, [sp], #32
    eec8:	ret
    eecc:	sub	sp, sp, #0x10
    eed0:	str	x0, [sp, #8]
    eed4:	ldr	x1, [sp, #8]
    eed8:	ldr	x0, [sp, #8]
    eedc:	str	x1, [x0]
    eee0:	ldr	x1, [sp, #8]
    eee4:	ldr	x0, [sp, #8]
    eee8:	str	x1, [x0, #8]
    eeec:	nop
    eef0:	add	sp, sp, #0x10
    eef4:	ret
    eef8:	str	x30, [sp, #-64]!
    eefc:	str	x0, [sp, #24]
    ef00:	str	x1, [sp, #16]
    ef04:	mov	x2, #0x10                  	// #16
    ef08:	mov	w1, #0x0                   	// #0
    ef0c:	ldr	x0, [sp, #16]
    ef10:	bl	21754 <__sanitizer_set_report_fd@@Base+0x255c>
    ef14:	ldr	x0, [sp, #24]
    ef18:	add	x1, x0, #0x20
    ef1c:	add	x0, sp, #0x28
    ef20:	bl	f58c <__sanitizer_get_allocated_size@@Base+0xa2c>
    ef24:	ldr	x0, [sp, #24]
    ef28:	str	x0, [sp, #56]
    ef2c:	str	wzr, [sp, #52]
    ef30:	ldr	w0, [sp, #52]
    ef34:	cmp	w0, #0x1
    ef38:	b.gt	ef8c <__sanitizer_get_allocated_size@@Base+0x42c>
    ef3c:	ldr	w0, [sp, #52]
    ef40:	mov	w1, w0
    ef44:	ldr	x0, [sp, #56]
    ef48:	bl	ee98 <__sanitizer_get_allocated_size@@Base+0x338>
    ef4c:	mov	x3, x0
    ef50:	ldrsw	x0, [sp, #52]
    ef54:	lsl	x0, x0, #3
    ef58:	ldr	x1, [sp, #16]
    ef5c:	add	x0, x1, x0
    ef60:	ldr	x1, [x0]
    ef64:	ldrsw	x0, [sp, #52]
    ef68:	lsl	x0, x0, #3
    ef6c:	ldr	x2, [sp, #16]
    ef70:	add	x0, x2, x0
    ef74:	add	x1, x3, x1
    ef78:	str	x1, [x0]
    ef7c:	ldr	w0, [sp, #52]
    ef80:	add	w0, w0, #0x1
    ef84:	str	w0, [sp, #52]
    ef88:	b	ef30 <__sanitizer_get_allocated_size@@Base+0x3d0>
    ef8c:	ldr	x0, [sp, #56]
    ef90:	ldr	x0, [x0]
    ef94:	str	x0, [sp, #56]
    ef98:	ldr	x0, [sp, #24]
    ef9c:	ldr	x1, [sp, #56]
    efa0:	cmp	x1, x0
    efa4:	b.eq	efac <__sanitizer_get_allocated_size@@Base+0x44c>  // b.none
    efa8:	b	ef2c <__sanitizer_get_allocated_size@@Base+0x3cc>
    efac:	nop
    efb0:	str	wzr, [sp, #48]
    efb4:	ldr	w0, [sp, #48]
    efb8:	cmp	w0, #0x1
    efbc:	b.gt	f008 <__sanitizer_get_allocated_size@@Base+0x4a8>
    efc0:	ldrsw	x0, [sp, #48]
    efc4:	lsl	x0, x0, #3
    efc8:	ldr	x1, [sp, #16]
    efcc:	add	x0, x1, x0
    efd0:	ldr	x0, [x0]
    efd4:	mov	x1, #0x0                   	// #0
    efd8:	cmp	x0, #0x0
    efdc:	csel	x2, x0, x1, ge  // ge = tcont
    efe0:	ldrsw	x0, [sp, #48]
    efe4:	lsl	x0, x0, #3
    efe8:	ldr	x1, [sp, #16]
    efec:	add	x0, x1, x0
    eff0:	mov	x1, x2
    eff4:	str	x1, [x0]
    eff8:	ldr	w0, [sp, #48]
    effc:	add	w0, w0, #0x1
    f000:	str	w0, [sp, #48]
    f004:	b	efb4 <__sanitizer_get_allocated_size@@Base+0x454>
    f008:	add	x0, sp, #0x28
    f00c:	bl	f5bc <__sanitizer_get_allocated_size@@Base+0xa5c>
    f010:	nop
    f014:	ldr	x30, [sp], #64
    f018:	ret
    f01c:	str	x30, [sp, #-64]!
    f020:	str	x0, [sp, #24]
    f024:	ldr	x4, [sp, #24]
    f028:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
    f02c:	ldr	x0, [x0, #3840]
    f030:	ldr	x0, [x0]
    f034:	mov	x3, #0x0                   	// #0
    f038:	mov	x2, x0
    f03c:	mov	x1, #0x800000              	// #8388608
    f040:	mov	x0, x4
    f044:	bl	286dc <__sanitizer_set_report_fd@@Base+0x94e4>
    f048:	str	x0, [sp, #56]
    f04c:	ldr	x0, [sp, #56]
    f050:	str	x0, [sp, #48]
    f054:	str	xzr, [sp, #40]
    f058:	ldr	x1, [sp, #48]
    f05c:	ldr	x0, [sp, #40]
    f060:	cmp	x1, x0
    f064:	cset	w0, eq  // eq = none
    f068:	and	w0, w0, #0xff
    f06c:	and	x0, x0, #0xff
    f070:	cmp	x0, #0x0
    f074:	b.eq	f098 <__sanitizer_get_allocated_size@@Base+0x538>  // b.none
    f078:	ldr	x4, [sp, #40]
    f07c:	ldr	x3, [sp, #48]
    f080:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
    f084:	add	x2, x0, #0x530
    f088:	mov	w1, #0x24                  	// #36
    f08c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
    f090:	add	x0, x0, #0x540
    f094:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    f098:	ldr	x0, [sp, #56]
    f09c:	ldr	x30, [sp], #64
    f0a0:	ret
    f0a4:	stp	x19, x30, [sp, #-48]!
    f0a8:	str	x0, [sp, #24]
    f0ac:	str	x1, [sp, #16]
    f0b0:	ldr	x0, [sp, #16]
    f0b4:	str	x0, [sp, #40]
    f0b8:	mov	x0, #0x100000              	// #1048576
    f0bc:	str	x0, [sp, #32]
    f0c0:	ldr	x1, [sp, #40]
    f0c4:	ldr	x0, [sp, #32]
    f0c8:	cmp	x1, x0
    f0cc:	cset	w0, cs  // cs = hs, nlast
    f0d0:	and	w0, w0, #0xff
    f0d4:	and	x0, x0, #0xff
    f0d8:	cmp	x0, #0x0
    f0dc:	b.eq	f100 <__sanitizer_get_allocated_size@@Base+0x5a0>  // b.none
    f0e0:	ldr	x4, [sp, #32]
    f0e4:	ldr	x3, [sp, #40]
    f0e8:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
    f0ec:	add	x2, x0, #0x590
    f0f0:	mov	w1, #0x29                  	// #41
    f0f4:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
    f0f8:	add	x0, x0, #0x540
    f0fc:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    f100:	ldr	x0, [sp, #24]
    f104:	ldr	x0, [x0, #32]
    f108:	ldr	x1, [sp, #16]
    f10c:	cmp	x1, x0
    f110:	cset	w0, eq  // eq = none
    f114:	and	w0, w0, #0xff
    f118:	and	x0, x0, #0xff
    f11c:	cmp	x0, #0x0
    f120:	b.eq	f168 <__sanitizer_get_allocated_size@@Base+0x608>  // b.none
    f124:	ldr	x19, [sp, #24]
    f128:	ldr	x0, [sp, #24]
    f12c:	bl	ed38 <__sanitizer_get_allocated_size@@Base+0x1d8>
    f130:	mov	x1, x0
    f134:	ldr	x0, [sp, #24]
    f138:	ldr	x0, [x0, #32]
    f13c:	lsl	x0, x0, #3
    f140:	add	x0, x1, x0
    f144:	mov	x2, #0x20000               	// #131072
    f148:	mov	x1, x0
    f14c:	mov	x0, x19
    f150:	bl	2876c <__sanitizer_set_report_fd@@Base+0x9574>
    f154:	ldr	x0, [sp, #24]
    f158:	ldr	x0, [x0, #32]
    f15c:	add	x1, x0, #0x4, lsl #12
    f160:	ldr	x0, [sp, #24]
    f164:	str	x1, [x0, #32]
    f168:	nop
    f16c:	ldp	x19, x30, [sp], #48
    f170:	ret
    f174:	sub	sp, sp, #0x20
    f178:	str	x0, [sp, #24]
    f17c:	str	x1, [sp, #16]
    f180:	str	x2, [sp, #8]
    f184:	ldr	x0, [sp, #16]
    f188:	cmp	x0, #0x8
    f18c:	b.ne	f1c0 <__sanitizer_get_allocated_size@@Base+0x660>  // b.any
    f190:	ldr	x1, [sp, #24]
    f194:	ldr	x0, [sp, #16]
    f198:	add	x0, x1, x0
    f19c:	ldr	x1, [sp, #8]
    f1a0:	cmp	x1, x0
    f1a4:	b.ne	f1c0 <__sanitizer_get_allocated_size@@Base+0x660>  // b.any
    f1a8:	ldr	x0, [sp, #24]
    f1ac:	ldr	x0, [x0]
    f1b0:	cmp	x0, #0x0
    f1b4:	b.ne	f1c0 <__sanitizer_get_allocated_size@@Base+0x660>  // b.any
    f1b8:	mov	w0, #0x1                   	// #1
    f1bc:	b	f1c4 <__sanitizer_get_allocated_size@@Base+0x664>
    f1c0:	mov	w0, #0x0                   	// #0
    f1c4:	add	sp, sp, #0x20
    f1c8:	ret
    f1cc:	str	x30, [sp, #-48]!
    f1d0:	str	x0, [sp, #40]
    f1d4:	str	x1, [sp, #32]
    f1d8:	str	x2, [sp, #24]
    f1dc:	ldr	x2, [sp, #24]
    f1e0:	ldr	x1, [sp, #32]
    f1e4:	ldr	x0, [sp, #40]
    f1e8:	bl	f174 <__sanitizer_get_allocated_size@@Base+0x614>
    f1ec:	and	w0, w0, #0xff
    f1f0:	ldr	x30, [sp], #48
    f1f4:	ret
    f1f8:	str	x30, [sp, #-32]!
    f1fc:	str	x0, [sp, #24]
    f200:	ldr	x0, [sp, #24]
    f204:	cmp	x0, #0x0
    f208:	cset	w0, eq  // eq = none
    f20c:	and	w0, w0, #0xff
    f210:	and	x0, x0, #0xff
    f214:	cmp	x0, #0x0
    f218:	b.eq	f220 <__sanitizer_get_allocated_size@@Base+0x6c0>  // b.none
    f21c:	bl	18edc <__sancov_default_options@@Base+0x2d40>
    f220:	ldr	x0, [sp, #24]
    f224:	ldr	x30, [sp], #32
    f228:	ret
    f22c:	str	x30, [sp, #-32]!
    f230:	str	x0, [sp, #24]
    f234:	str	x1, [sp, #16]
    f238:	ldr	x0, [sp, #24]
    f23c:	cmp	x0, #0x0
    f240:	b.eq	f278 <__sanitizer_get_allocated_size@@Base+0x718>  // b.none
    f244:	ldr	x0, [sp, #24]
    f248:	bl	a3a0 <__lsan_do_recoverable_leak_check@@Base+0x214>
    f24c:	and	w0, w0, #0xff
    f250:	cmp	w0, #0x0
    f254:	b.eq	f278 <__sanitizer_get_allocated_size@@Base+0x718>  // b.none
    f258:	ldr	x0, [sp, #24]
    f25c:	sub	x1, x0, #0x1
    f260:	ldr	x0, [sp, #16]
    f264:	and	x0, x1, x0
    f268:	cmp	x0, #0x0
    f26c:	b.ne	f278 <__sanitizer_get_allocated_size@@Base+0x718>  // b.any
    f270:	mov	w0, #0x1                   	// #1
    f274:	b	f27c <__sanitizer_get_allocated_size@@Base+0x71c>
    f278:	mov	w0, #0x0                   	// #0
    f27c:	ldr	x30, [sp], #32
    f280:	ret
    f284:	str	x30, [sp, #-32]!
    f288:	str	x0, [sp, #24]
    f28c:	ldr	x0, [sp, #24]
    f290:	cmp	x0, #0x0
    f294:	b.eq	f2c4 <__sanitizer_get_allocated_size@@Base+0x764>  // b.none
    f298:	ldr	x0, [sp, #24]
    f29c:	bl	a3a0 <__lsan_do_recoverable_leak_check@@Base+0x214>
    f2a0:	and	w0, w0, #0xff
    f2a4:	cmp	w0, #0x0
    f2a8:	b.eq	f2c4 <__sanitizer_get_allocated_size@@Base+0x764>  // b.none
    f2ac:	ldr	x0, [sp, #24]
    f2b0:	and	x0, x0, #0x7
    f2b4:	cmp	x0, #0x0
    f2b8:	b.ne	f2c4 <__sanitizer_get_allocated_size@@Base+0x764>  // b.any
    f2bc:	mov	w0, #0x1                   	// #1
    f2c0:	b	f2c8 <__sanitizer_get_allocated_size@@Base+0x768>
    f2c4:	mov	w0, #0x0                   	// #0
    f2c8:	ldr	x30, [sp], #32
    f2cc:	ret
    f2d0:	sub	sp, sp, #0x20
    f2d4:	str	x0, [sp, #8]
    f2d8:	str	x1, [sp]
    f2dc:	ldr	x0, [sp, #8]
    f2e0:	cmp	x0, #0x0
    f2e4:	b.ne	f2f0 <__sanitizer_get_allocated_size@@Base+0x790>  // b.any
    f2e8:	mov	w0, #0x0                   	// #0
    f2ec:	b	f314 <__sanitizer_get_allocated_size@@Base+0x7b4>
    f2f0:	mov	x0, #0xffffffffffffffff    	// #-1
    f2f4:	str	x0, [sp, #24]
    f2f8:	ldr	x1, [sp, #24]
    f2fc:	ldr	x0, [sp, #8]
    f300:	udiv	x0, x1, x0
    f304:	ldr	x1, [sp]
    f308:	cmp	x1, x0
    f30c:	cset	w0, hi  // hi = pmore
    f310:	and	w0, w0, #0xff
    f314:	add	sp, sp, #0x20
    f318:	ret
    f31c:	str	x30, [sp, #-32]!
    f320:	str	x0, [sp, #24]
    f324:	str	x1, [sp, #16]
    f328:	ldr	x1, [sp, #16]
    f32c:	ldr	x0, [sp, #24]
    f330:	bl	a518 <__lsan_do_recoverable_leak_check@@Base+0x38c>
    f334:	mov	x1, x0
    f338:	ldr	x0, [sp, #24]
    f33c:	cmp	x0, x1
    f340:	cset	w0, hi  // hi = pmore
    f344:	and	w0, w0, #0xff
    f348:	ldr	x30, [sp], #32
    f34c:	ret
    f350:	sub	sp, sp, #0x10
    f354:	str	x0, [sp, #8]
    f358:	strb	w1, [sp, #7]
    f35c:	str	w2, [sp]
    f360:	ldr	w0, [sp]
    f364:	cmp	w0, #0x1
    f368:	b.ne	f37c <__sanitizer_get_allocated_size@@Base+0x81c>  // b.any
    f36c:	ldr	x0, [sp, #8]
    f370:	ldrb	w1, [sp, #7]
    f374:	strb	w1, [x0]
    f378:	b	f3b0 <__sanitizer_get_allocated_size@@Base+0x850>
    f37c:	ldr	w0, [sp]
    f380:	cmp	w0, #0x8
    f384:	b.ne	f39c <__sanitizer_get_allocated_size@@Base+0x83c>  // b.any
    f388:	dmb	ish
    f38c:	ldr	x0, [sp, #8]
    f390:	ldrb	w1, [sp, #7]
    f394:	strb	w1, [x0]
    f398:	b	f3b0 <__sanitizer_get_allocated_size@@Base+0x850>
    f39c:	dmb	ish
    f3a0:	ldr	x0, [sp, #8]
    f3a4:	ldrb	w1, [sp, #7]
    f3a8:	strb	w1, [x0]
    f3ac:	dmb	ish
    f3b0:	nop
    f3b4:	add	sp, sp, #0x10
    f3b8:	ret
    f3bc:	sub	sp, sp, #0x10
    f3c0:	str	x0, [sp, #8]
    f3c4:	strb	w1, [sp, #7]
    f3c8:	str	w2, [sp]
    f3cc:	ldr	w0, [sp]
    f3d0:	and	w0, w0, #0x38
    f3d4:	cmp	w0, #0x0
    f3d8:	b.eq	f3e0 <__sanitizer_get_allocated_size@@Base+0x880>  // b.none
    f3dc:	dmb	ish
    f3e0:	ldr	x1, [sp, #8]
    f3e4:	ldrb	w2, [sp, #7]
    f3e8:	ldxrb	w0, [x1]
    f3ec:	stxrb	w3, w2, [x1]
    f3f0:	cbnz	w3, f3e8 <__sanitizer_get_allocated_size@@Base+0x888>
    f3f4:	dmb	ish
    f3f8:	strb	w0, [sp, #7]
    f3fc:	ldr	w0, [sp]
    f400:	cmp	w0, #0x20
    f404:	b.ne	f40c <__sanitizer_get_allocated_size@@Base+0x8ac>  // b.any
    f408:	dmb	ish
    f40c:	ldrb	w0, [sp, #7]
    f410:	add	sp, sp, #0x10
    f414:	ret
    f418:	sub	sp, sp, #0x20
    f41c:	str	x0, [sp, #8]
    f420:	str	w1, [sp, #4]
    f424:	ldr	w0, [sp, #4]
    f428:	cmp	w0, #0x1
    f42c:	b.ne	f440 <__sanitizer_get_allocated_size@@Base+0x8e0>  // b.any
    f430:	ldr	x0, [sp, #8]
    f434:	ldrb	w0, [x0]
    f438:	strb	w0, [sp, #31]
    f43c:	b	f490 <__sanitizer_get_allocated_size@@Base+0x930>
    f440:	ldr	w0, [sp, #4]
    f444:	cmp	w0, #0x2
    f448:	b.ne	f45c <__sanitizer_get_allocated_size@@Base+0x8fc>  // b.any
    f44c:	ldr	x0, [sp, #8]
    f450:	ldrb	w0, [x0]
    f454:	strb	w0, [sp, #31]
    f458:	b	f490 <__sanitizer_get_allocated_size@@Base+0x930>
    f45c:	ldr	w0, [sp, #4]
    f460:	cmp	w0, #0x4
    f464:	b.ne	f47c <__sanitizer_get_allocated_size@@Base+0x91c>  // b.any
    f468:	ldr	x0, [sp, #8]
    f46c:	ldrb	w0, [x0]
    f470:	strb	w0, [sp, #31]
    f474:	dmb	ish
    f478:	b	f490 <__sanitizer_get_allocated_size@@Base+0x930>
    f47c:	dmb	ish
    f480:	ldr	x0, [sp, #8]
    f484:	ldrb	w0, [x0]
    f488:	strb	w0, [sp, #31]
    f48c:	dmb	ish
    f490:	ldrb	w0, [sp, #31]
    f494:	add	sp, sp, #0x20
    f498:	ret
    f49c:	sub	sp, sp, #0x20
    f4a0:	str	x0, [sp, #8]
    f4a4:	str	w1, [sp, #4]
    f4a8:	ldr	w0, [sp, #4]
    f4ac:	cmp	w0, #0x1
    f4b0:	b.ne	f4c4 <__sanitizer_get_allocated_size@@Base+0x964>  // b.any
    f4b4:	ldr	x0, [sp, #8]
    f4b8:	ldr	x0, [x0]
    f4bc:	str	x0, [sp, #24]
    f4c0:	b	f514 <__sanitizer_get_allocated_size@@Base+0x9b4>
    f4c4:	ldr	w0, [sp, #4]
    f4c8:	cmp	w0, #0x2
    f4cc:	b.ne	f4e0 <__sanitizer_get_allocated_size@@Base+0x980>  // b.any
    f4d0:	ldr	x0, [sp, #8]
    f4d4:	ldr	x0, [x0]
    f4d8:	str	x0, [sp, #24]
    f4dc:	b	f514 <__sanitizer_get_allocated_size@@Base+0x9b4>
    f4e0:	ldr	w0, [sp, #4]
    f4e4:	cmp	w0, #0x4
    f4e8:	b.ne	f500 <__sanitizer_get_allocated_size@@Base+0x9a0>  // b.any
    f4ec:	ldr	x0, [sp, #8]
    f4f0:	ldr	x0, [x0]
    f4f4:	str	x0, [sp, #24]
    f4f8:	dmb	ish
    f4fc:	b	f514 <__sanitizer_get_allocated_size@@Base+0x9b4>
    f500:	dmb	ish
    f504:	ldr	x0, [sp, #8]
    f508:	ldr	x0, [x0]
    f50c:	str	x0, [sp, #24]
    f510:	dmb	ish
    f514:	ldr	x0, [sp, #24]
    f518:	add	sp, sp, #0x20
    f51c:	ret
    f520:	sub	sp, sp, #0x20
    f524:	str	x0, [sp, #24]
    f528:	str	x1, [sp, #16]
    f52c:	str	w2, [sp, #12]
    f530:	ldr	w0, [sp, #12]
    f534:	cmp	w0, #0x1
    f538:	b.ne	f54c <__sanitizer_get_allocated_size@@Base+0x9ec>  // b.any
    f53c:	ldr	x0, [sp, #24]
    f540:	ldr	x1, [sp, #16]
    f544:	str	x1, [x0]
    f548:	b	f580 <__sanitizer_get_allocated_size@@Base+0xa20>
    f54c:	ldr	w0, [sp, #12]
    f550:	cmp	w0, #0x8
    f554:	b.ne	f56c <__sanitizer_get_allocated_size@@Base+0xa0c>  // b.any
    f558:	dmb	ish
    f55c:	ldr	x0, [sp, #24]
    f560:	ldr	x1, [sp, #16]
    f564:	str	x1, [x0]
    f568:	b	f580 <__sanitizer_get_allocated_size@@Base+0xa20>
    f56c:	dmb	ish
    f570:	ldr	x0, [sp, #24]
    f574:	ldr	x1, [sp, #16]
    f578:	str	x1, [x0]
    f57c:	dmb	ish
    f580:	nop
    f584:	add	sp, sp, #0x20
    f588:	ret
    f58c:	str	x30, [sp, #-32]!
    f590:	str	x0, [sp, #24]
    f594:	str	x1, [sp, #16]
    f598:	ldr	x0, [sp, #24]
    f59c:	ldr	x1, [sp, #16]
    f5a0:	str	x1, [x0]
    f5a4:	ldr	x0, [sp, #24]
    f5a8:	ldr	x0, [x0]
    f5ac:	bl	ebb0 <__sanitizer_get_allocated_size@@Base+0x50>
    f5b0:	nop
    f5b4:	ldr	x30, [sp], #32
    f5b8:	ret
    f5bc:	str	x30, [sp, #-32]!
    f5c0:	str	x0, [sp, #24]
    f5c4:	ldr	x0, [sp, #24]
    f5c8:	ldr	x0, [x0]
    f5cc:	bl	ec14 <__sanitizer_get_allocated_size@@Base+0xb4>
    f5d0:	nop
    f5d4:	ldr	x30, [sp], #32
    f5d8:	ret
    f5dc:	str	x30, [sp, #-32]!
    f5e0:	str	x0, [sp, #24]
    f5e4:	str	w1, [sp, #20]
    f5e8:	ldr	x0, [sp, #24]
    f5ec:	ldr	w1, [sp, #20]
    f5f0:	bl	fb9c <__sanitizer_get_allocated_size@@Base+0x103c>
    f5f4:	ldr	x1, [sp, #24]
    f5f8:	mov	x0, #0xdc0                 	// #3520
    f5fc:	movk	x0, #0x8, lsl #16
    f600:	add	x0, x1, x0
    f604:	bl	fbd8 <__sanitizer_get_allocated_size@@Base+0x1078>
    f608:	ldr	x1, [sp, #24]
    f60c:	mov	x0, #0x1030                	// #4144
    f610:	movk	x0, #0x8, lsl #16
    f614:	add	x0, x1, x0
    f618:	bl	eecc <__sanitizer_get_allocated_size@@Base+0x36c>
    f61c:	nop
    f620:	ldr	x30, [sp], #32
    f624:	ret
    f628:	str	x30, [sp, #-32]!
    f62c:	str	x0, [sp, #24]
    f630:	str	x1, [sp, #16]
    f634:	ldr	x0, [sp, #16]
    f638:	ldr	x1, [sp, #24]
    f63c:	bl	fc14 <__sanitizer_get_allocated_size@@Base+0x10b4>
    f640:	nop
    f644:	ldr	x30, [sp], #32
    f648:	ret
    f64c:	str	x30, [sp, #-32]!
    f650:	str	x0, [sp, #24]
    f654:	str	x1, [sp, #16]
    f658:	ldr	x0, [sp, #24]
    f65c:	ldr	x1, [sp, #16]
    f660:	bl	fc8c <__sanitizer_get_allocated_size@@Base+0x112c>
    f664:	and	w0, w0, #0xff
    f668:	cmp	w0, #0x0
    f66c:	b.eq	f680 <__sanitizer_get_allocated_size@@Base+0xb20>  // b.none
    f670:	ldr	x0, [sp, #24]
    f674:	ldr	x1, [sp, #16]
    f678:	bl	fcd8 <__sanitizer_get_allocated_size@@Base+0x1178>
    f67c:	b	f698 <__sanitizer_get_allocated_size@@Base+0xb38>
    f680:	ldr	x1, [sp, #24]
    f684:	mov	x0, #0xdc0                 	// #3520
    f688:	movk	x0, #0x8, lsl #16
    f68c:	add	x0, x1, x0
    f690:	ldr	x1, [sp, #16]
    f694:	bl	fdc0 <__sanitizer_get_allocated_size@@Base+0x1260>
    f698:	ldr	x30, [sp], #32
    f69c:	ret
    f6a0:	stp	x19, x20, [sp, #-96]!
    f6a4:	str	x30, [sp, #16]
    f6a8:	str	x0, [sp, #56]
    f6ac:	str	x1, [sp, #48]
    f6b0:	str	x2, [sp, #40]
    f6b4:	str	x3, [sp, #32]
    f6b8:	ldr	x0, [sp, #40]
    f6bc:	cmp	x0, #0x0
    f6c0:	b.ne	f6cc <__sanitizer_get_allocated_size@@Base+0xb6c>  // b.any
    f6c4:	mov	x0, #0x1                   	// #1
    f6c8:	str	x0, [sp, #40]
    f6cc:	ldr	x1, [sp, #40]
    f6d0:	ldr	x0, [sp, #32]
    f6d4:	add	x0, x1, x0
    f6d8:	ldr	x1, [sp, #40]
    f6dc:	cmp	x1, x0
    f6e0:	b.ls	f710 <__sanitizer_get_allocated_size@@Base+0xbb0>  // b.plast
    f6e4:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
    f6e8:	ldr	x0, [x0, #4008]
    f6ec:	ldr	x0, [x0]
    f6f0:	ldr	x3, [sp, #32]
    f6f4:	ldr	x2, [sp, #40]
    f6f8:	mov	x1, x0
    f6fc:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
    f700:	add	x0, x0, #0x698
    f704:	bl	2a3fc <OnPrint@@Base+0x454>
    f708:	mov	x0, #0x0                   	// #0
    f70c:	b	f818 <__sanitizer_get_allocated_size@@Base+0xcb8>
    f710:	ldr	x0, [sp, #40]
    f714:	str	x0, [sp, #80]
    f718:	ldr	x0, [sp, #32]
    f71c:	cmp	x0, #0x8
    f720:	b.ls	f734 <__sanitizer_get_allocated_size@@Base+0xbd4>  // b.plast
    f724:	ldr	x1, [sp, #32]
    f728:	ldr	x0, [sp, #40]
    f72c:	bl	a518 <__lsan_do_recoverable_leak_check@@Base+0x38c>
    f730:	str	x0, [sp, #40]
    f734:	ldr	x1, [sp, #32]
    f738:	ldr	x0, [sp, #40]
    f73c:	bl	fe98 <__sanitizer_get_allocated_size@@Base+0x1338>
    f740:	and	w0, w0, #0xff
    f744:	cmp	w0, #0x0
    f748:	b.eq	f778 <__sanitizer_get_allocated_size@@Base+0xc18>  // b.none
    f74c:	ldr	x19, [sp, #48]
    f750:	ldr	x20, [sp, #56]
    f754:	ldr	x0, [sp, #56]
    f758:	ldr	x1, [sp, #40]
    f75c:	bl	fed0 <__sanitizer_get_allocated_size@@Base+0x1370>
    f760:	mov	x2, x0
    f764:	mov	x1, x20
    f768:	mov	x0, x19
    f76c:	bl	feec <__sanitizer_get_allocated_size@@Base+0x138c>
    f770:	str	x0, [sp, #88]
    f774:	b	f7b0 <__sanitizer_get_allocated_size@@Base+0xc50>
    f778:	ldr	x1, [sp, #56]
    f77c:	mov	x0, #0xdc0                 	// #3520
    f780:	movk	x0, #0x8, lsl #16
    f784:	add	x4, x1, x0
    f788:	ldr	x1, [sp, #56]
    f78c:	mov	x0, #0x1030                	// #4144
    f790:	movk	x0, #0x8, lsl #16
    f794:	add	x0, x1, x0
    f798:	ldr	x3, [sp, #32]
    f79c:	ldr	x2, [sp, #80]
    f7a0:	mov	x1, x0
    f7a4:	mov	x0, x4
    f7a8:	bl	10084 <__sanitizer_get_allocated_size@@Base+0x1524>
    f7ac:	str	x0, [sp, #88]
    f7b0:	ldr	x0, [sp, #32]
    f7b4:	cmp	x0, #0x8
    f7b8:	b.ls	f814 <__sanitizer_get_allocated_size@@Base+0xcb4>  // b.plast
    f7bc:	ldr	x0, [sp, #32]
    f7c0:	sub	x1, x0, #0x1
    f7c4:	ldr	x0, [sp, #88]
    f7c8:	and	x0, x1, x0
    f7cc:	str	x0, [sp, #72]
    f7d0:	str	xzr, [sp, #64]
    f7d4:	ldr	x1, [sp, #72]
    f7d8:	ldr	x0, [sp, #64]
    f7dc:	cmp	x1, x0
    f7e0:	cset	w0, ne  // ne = any
    f7e4:	and	w0, w0, #0xff
    f7e8:	and	x0, x0, #0xff
    f7ec:	cmp	x0, #0x0
    f7f0:	b.eq	f814 <__sanitizer_get_allocated_size@@Base+0xcb4>  // b.none
    f7f4:	ldr	x4, [sp, #64]
    f7f8:	ldr	x3, [sp, #72]
    f7fc:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
    f800:	add	x2, x0, #0x6f8
    f804:	mov	w1, #0x42                  	// #66
    f808:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
    f80c:	add	x0, x0, #0x738
    f810:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    f814:	ldr	x0, [sp, #88]
    f818:	ldr	x30, [sp, #16]
    f81c:	ldp	x19, x20, [sp], #96
    f820:	ret
    f824:	str	x30, [sp, #-32]!
    f828:	str	x0, [sp, #24]
    f82c:	str	x1, [sp, #16]
    f830:	ldr	x0, [sp, #24]
    f834:	ldr	x1, [sp, #16]
    f838:	bl	fc8c <__sanitizer_get_allocated_size@@Base+0x112c>
    f83c:	and	w0, w0, #0xff
    f840:	ldr	x30, [sp], #32
    f844:	ret
    f848:	stp	x19, x20, [sp, #-64]!
    f84c:	str	x30, [sp, #16]
    f850:	str	x0, [sp, #56]
    f854:	str	x1, [sp, #48]
    f858:	str	x2, [sp, #40]
    f85c:	ldr	x0, [sp, #40]
    f860:	cmp	x0, #0x0
    f864:	b.eq	f8e0 <__sanitizer_get_allocated_size@@Base+0xd80>  // b.none
    f868:	ldr	x0, [sp, #56]
    f86c:	ldr	x1, [sp, #40]
    f870:	bl	fc8c <__sanitizer_get_allocated_size@@Base+0x112c>
    f874:	and	w0, w0, #0xff
    f878:	cmp	w0, #0x0
    f87c:	b.eq	f8ac <__sanitizer_get_allocated_size@@Base+0xd4c>  // b.none
    f880:	ldr	x19, [sp, #48]
    f884:	ldr	x20, [sp, #56]
    f888:	ldr	x0, [sp, #56]
    f88c:	ldr	x1, [sp, #40]
    f890:	bl	10594 <__sanitizer_get_allocated_size@@Base+0x1a34>
    f894:	ldr	x3, [sp, #40]
    f898:	mov	x2, x0
    f89c:	mov	x1, x20
    f8a0:	mov	x0, x19
    f8a4:	bl	105d0 <__sanitizer_get_allocated_size@@Base+0x1a70>
    f8a8:	b	f8e4 <__sanitizer_get_allocated_size@@Base+0xd84>
    f8ac:	ldr	x1, [sp, #56]
    f8b0:	mov	x0, #0xdc0                 	// #3520
    f8b4:	movk	x0, #0x8, lsl #16
    f8b8:	add	x3, x1, x0
    f8bc:	ldr	x1, [sp, #56]
    f8c0:	mov	x0, #0x1030                	// #4144
    f8c4:	movk	x0, #0x8, lsl #16
    f8c8:	add	x0, x1, x0
    f8cc:	ldr	x2, [sp, #40]
    f8d0:	mov	x1, x0
    f8d4:	mov	x0, x3
    f8d8:	bl	10730 <__sanitizer_get_allocated_size@@Base+0x1bd0>
    f8dc:	b	f8e4 <__sanitizer_get_allocated_size@@Base+0xd84>
    f8e0:	nop
    f8e4:	ldr	x30, [sp, #16]
    f8e8:	ldp	x19, x20, [sp], #64
    f8ec:	ret
    f8f0:	str	x30, [sp, #-112]!
    f8f4:	str	x0, [sp, #56]
    f8f8:	str	x1, [sp, #48]
    f8fc:	str	x2, [sp, #40]
    f900:	str	x3, [sp, #32]
    f904:	str	x4, [sp, #24]
    f908:	ldr	x0, [sp, #40]
    f90c:	cmp	x0, #0x0
    f910:	b.ne	f92c <__sanitizer_get_allocated_size@@Base+0xdcc>  // b.any
    f914:	ldr	x3, [sp, #24]
    f918:	ldr	x2, [sp, #32]
    f91c:	ldr	x1, [sp, #48]
    f920:	ldr	x0, [sp, #56]
    f924:	bl	f6a0 <__sanitizer_get_allocated_size@@Base+0xb40>
    f928:	b	fa14 <__sanitizer_get_allocated_size@@Base+0xeb4>
    f92c:	ldr	x0, [sp, #32]
    f930:	cmp	x0, #0x0
    f934:	b.ne	f950 <__sanitizer_get_allocated_size@@Base+0xdf0>  // b.any
    f938:	ldr	x2, [sp, #40]
    f93c:	ldr	x1, [sp, #48]
    f940:	ldr	x0, [sp, #56]
    f944:	bl	f848 <__sanitizer_get_allocated_size@@Base+0xce8>
    f948:	mov	x0, #0x0                   	// #0
    f94c:	b	fa14 <__sanitizer_get_allocated_size@@Base+0xeb4>
    f950:	ldr	x1, [sp, #40]
    f954:	ldr	x0, [sp, #56]
    f958:	bl	10940 <__sanitizer_get_allocated_size@@Base+0x1de0>
    f95c:	and	w0, w0, #0xff
    f960:	and	x0, x0, #0xff
    f964:	str	x0, [sp, #104]
    f968:	str	xzr, [sp, #96]
    f96c:	ldr	x1, [sp, #104]
    f970:	ldr	x0, [sp, #96]
    f974:	cmp	x1, x0
    f978:	cset	w0, eq  // eq = none
    f97c:	and	w0, w0, #0xff
    f980:	and	x0, x0, #0xff
    f984:	cmp	x0, #0x0
    f988:	b.eq	f9ac <__sanitizer_get_allocated_size@@Base+0xe4c>  // b.none
    f98c:	ldr	x4, [sp, #96]
    f990:	ldr	x3, [sp, #104]
    f994:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
    f998:	add	x2, x0, #0x788
    f99c:	mov	w1, #0x62                  	// #98
    f9a0:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
    f9a4:	add	x0, x0, #0x738
    f9a8:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    f9ac:	ldr	x1, [sp, #40]
    f9b0:	ldr	x0, [sp, #56]
    f9b4:	bl	10990 <__sanitizer_get_allocated_size@@Base+0x1e30>
    f9b8:	str	x0, [sp, #88]
    f9bc:	ldr	x1, [sp, #88]
    f9c0:	ldr	x0, [sp, #32]
    f9c4:	bl	aeac <__lsan_do_recoverable_leak_check@@Base+0xd20>
    f9c8:	str	x0, [sp, #80]
    f9cc:	ldr	x3, [sp, #24]
    f9d0:	ldr	x2, [sp, #32]
    f9d4:	ldr	x1, [sp, #48]
    f9d8:	ldr	x0, [sp, #56]
    f9dc:	bl	f6a0 <__sanitizer_get_allocated_size@@Base+0xb40>
    f9e0:	str	x0, [sp, #72]
    f9e4:	ldr	x0, [sp, #72]
    f9e8:	cmp	x0, #0x0
    f9ec:	b.eq	fa00 <__sanitizer_get_allocated_size@@Base+0xea0>  // b.none
    f9f0:	ldr	x2, [sp, #80]
    f9f4:	ldr	x1, [sp, #40]
    f9f8:	ldr	x0, [sp, #72]
    f9fc:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
    fa00:	ldr	x2, [sp, #40]
    fa04:	ldr	x1, [sp, #48]
    fa08:	ldr	x0, [sp, #56]
    fa0c:	bl	f848 <__sanitizer_get_allocated_size@@Base+0xce8>
    fa10:	ldr	x0, [sp, #72]
    fa14:	ldr	x30, [sp], #112
    fa18:	ret
    fa1c:	str	x30, [sp, #-32]!
    fa20:	str	x0, [sp, #24]
    fa24:	ldr	x0, [sp, #24]
    fa28:	bl	109e4 <__sanitizer_get_allocated_size@@Base+0x1e84>
    fa2c:	ldr	x1, [sp, #24]
    fa30:	mov	x0, #0xdc0                 	// #3520
    fa34:	movk	x0, #0x8, lsl #16
    fa38:	add	x0, x1, x0
    fa3c:	bl	10a28 <__sanitizer_get_allocated_size@@Base+0x1ec8>
    fa40:	nop
    fa44:	ldr	x30, [sp], #32
    fa48:	ret
    fa4c:	str	x30, [sp, #-32]!
    fa50:	str	x0, [sp, #24]
    fa54:	ldr	x1, [sp, #24]
    fa58:	mov	x0, #0xdc0                 	// #3520
    fa5c:	movk	x0, #0x8, lsl #16
    fa60:	add	x0, x1, x0
    fa64:	bl	10a48 <__sanitizer_get_allocated_size@@Base+0x1ee8>
    fa68:	ldr	x0, [sp, #24]
    fa6c:	bl	10a68 <__sanitizer_get_allocated_size@@Base+0x1f08>
    fa70:	nop
    fa74:	ldr	x30, [sp], #32
    fa78:	ret
    fa7c:	str	x30, [sp, #-32]!
    fa80:	str	x0, [sp, #24]
    fa84:	str	x1, [sp, #16]
    fa88:	ldr	x0, [sp, #24]
    fa8c:	ldr	x1, [sp, #16]
    fa90:	bl	fc8c <__sanitizer_get_allocated_size@@Base+0x112c>
    fa94:	and	w0, w0, #0xff
    fa98:	cmp	w0, #0x0
    fa9c:	b.eq	fab0 <__sanitizer_get_allocated_size@@Base+0xf50>  // b.none
    faa0:	ldr	x0, [sp, #24]
    faa4:	ldr	x1, [sp, #16]
    faa8:	bl	10ab4 <__sanitizer_get_allocated_size@@Base+0x1f54>
    faac:	b	fac8 <__sanitizer_get_allocated_size@@Base+0xf68>
    fab0:	ldr	x1, [sp, #24]
    fab4:	mov	x0, #0xdc0                 	// #3520
    fab8:	movk	x0, #0x8, lsl #16
    fabc:	add	x0, x1, x0
    fac0:	ldr	x1, [sp, #16]
    fac4:	bl	10b9c <__sanitizer_get_allocated_size@@Base+0x203c>
    fac8:	ldr	x30, [sp], #32
    facc:	ret
    fad0:	str	x30, [sp, #-48]!
    fad4:	str	x0, [sp, #40]
    fad8:	str	x1, [sp, #32]
    fadc:	str	x2, [sp, #24]
    fae0:	ldr	x0, [sp, #40]
    fae4:	ldr	x2, [sp, #24]
    fae8:	ldr	x1, [sp, #32]
    faec:	bl	10de0 <__sanitizer_get_allocated_size@@Base+0x2280>
    faf0:	ldr	x1, [sp, #40]
    faf4:	mov	x0, #0xdc0                 	// #3520
    faf8:	movk	x0, #0x8, lsl #16
    fafc:	add	x0, x1, x0
    fb00:	ldr	x2, [sp, #24]
    fb04:	ldr	x1, [sp, #32]
    fb08:	bl	10ecc <__sanitizer_get_allocated_size@@Base+0x236c>
    fb0c:	nop
    fb10:	ldr	x30, [sp], #48
    fb14:	ret
    fb18:	str	x30, [sp, #-32]!
    fb1c:	str	x0, [sp, #24]
    fb20:	str	x1, [sp, #16]
    fb24:	ldr	x0, [sp, #24]
    fb28:	ldr	x1, [sp, #16]
    fb2c:	bl	fc8c <__sanitizer_get_allocated_size@@Base+0x112c>
    fb30:	and	w0, w0, #0xff
    fb34:	cmp	w0, #0x0
    fb38:	b.eq	fb4c <__sanitizer_get_allocated_size@@Base+0xfec>  // b.none
    fb3c:	ldr	x0, [sp, #24]
    fb40:	ldr	x1, [sp, #16]
    fb44:	bl	10ab4 <__sanitizer_get_allocated_size@@Base+0x1f54>
    fb48:	b	fb64 <__sanitizer_get_allocated_size@@Base+0x1004>
    fb4c:	ldr	x1, [sp, #24]
    fb50:	mov	x0, #0xdc0                 	// #3520
    fb54:	movk	x0, #0x8, lsl #16
    fb58:	add	x0, x1, x0
    fb5c:	ldr	x1, [sp, #16]
    fb60:	bl	11018 <__sanitizer_get_allocated_size@@Base+0x24b8>
    fb64:	ldr	x30, [sp], #32
    fb68:	ret
    fb6c:	str	x30, [sp, #-32]!
    fb70:	str	x0, [sp, #24]
    fb74:	str	x1, [sp, #16]
    fb78:	ldr	x1, [sp, #24]
    fb7c:	mov	x0, #0x1030                	// #4144
    fb80:	movk	x0, #0x8, lsl #16
    fb84:	add	x0, x1, x0
    fb88:	ldr	x1, [sp, #16]
    fb8c:	bl	eef8 <__sanitizer_get_allocated_size@@Base+0x398>
    fb90:	nop
    fb94:	ldr	x30, [sp], #32
    fb98:	ret
    fb9c:	str	x30, [sp, #-32]!
    fba0:	str	x0, [sp, #24]
    fba4:	str	w1, [sp, #20]
    fba8:	ldr	x0, [sp, #24]
    fbac:	bl	11230 <__sanitizer_get_allocated_size@@Base+0x26d0>
    fbb0:	ldr	x1, [sp, #24]
    fbb4:	mov	x0, #0x40                  	// #64
    fbb8:	movk	x0, #0x8, lsl #16
    fbbc:	add	x0, x1, x0
    fbc0:	mov	x2, #0xd80                 	// #3456
    fbc4:	mov	w1, #0x0                   	// #0
    fbc8:	bl	21754 <__sanitizer_set_report_fd@@Base+0x255c>
    fbcc:	nop
    fbd0:	ldr	x30, [sp], #32
    fbd4:	ret
    fbd8:	str	x30, [sp, #-32]!
    fbdc:	str	x0, [sp, #24]
    fbe0:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
    fbe4:	mov	x1, x0
    fbe8:	ldr	x0, [sp, #24]
    fbec:	str	x1, [x0]
    fbf0:	ldr	x0, [sp, #24]
    fbf4:	add	x0, x0, #0x10
    fbf8:	bl	f01c <__sanitizer_get_allocated_size@@Base+0x4bc>
    fbfc:	mov	x1, x0
    fc00:	ldr	x0, [sp, #24]
    fc04:	str	x1, [x0, #8]
    fc08:	nop
    fc0c:	ldr	x30, [sp], #32
    fc10:	ret
    fc14:	str	x30, [sp, #-48]!
    fc18:	str	x0, [sp, #24]
    fc1c:	str	x1, [sp, #16]
    fc20:	mov	x0, #0x1                   	// #1
    fc24:	str	x0, [sp, #40]
    fc28:	ldr	x0, [sp, #40]
    fc2c:	cmp	x0, #0x35
    fc30:	b.hi	fc80 <__sanitizer_get_allocated_size@@Base+0x1120>  // b.pmore
    fc34:	ldr	x0, [sp, #40]
    fc38:	lsl	x0, x0, #10
    fc3c:	ldr	x1, [sp, #24]
    fc40:	add	x0, x1, x0
    fc44:	str	x0, [sp, #32]
    fc48:	ldr	x0, [sp, #32]
    fc4c:	ldr	x0, [x0]
    fc50:	cmp	x0, #0x0
    fc54:	b.eq	fc70 <__sanitizer_get_allocated_size@@Base+0x1110>  // b.none
    fc58:	ldr	x3, [sp, #40]
    fc5c:	ldr	x2, [sp, #16]
    fc60:	ldr	x1, [sp, #32]
    fc64:	ldr	x0, [sp, #24]
    fc68:	bl	11260 <__sanitizer_get_allocated_size@@Base+0x2700>
    fc6c:	b	fc48 <__sanitizer_get_allocated_size@@Base+0x10e8>
    fc70:	ldr	x0, [sp, #40]
    fc74:	add	x0, x0, #0x1
    fc78:	str	x0, [sp, #40]
    fc7c:	b	fc28 <__sanitizer_get_allocated_size@@Base+0x10c8>
    fc80:	nop
    fc84:	ldr	x30, [sp], #48
    fc88:	ret
    fc8c:	str	x30, [sp, #-48]!
    fc90:	str	x0, [sp, #24]
    fc94:	str	x1, [sp, #16]
    fc98:	ldr	x0, [sp, #16]
    fc9c:	str	x0, [sp, #40]
    fca0:	ldr	x1, [sp, #40]
    fca4:	mov	x0, #0xffffffffffff        	// #281474976710655
    fca8:	cmp	x1, x0
    fcac:	b.ls	fcb8 <__sanitizer_get_allocated_size@@Base+0x1158>  // b.plast
    fcb0:	mov	w0, #0x0                   	// #0
    fcb4:	b	fcd0 <__sanitizer_get_allocated_size@@Base+0x1170>
    fcb8:	ldr	x1, [sp, #16]
    fcbc:	ldr	x0, [sp, #24]
    fcc0:	bl	10594 <__sanitizer_get_allocated_size@@Base+0x1a34>
    fcc4:	cmp	x0, #0x0
    fcc8:	cset	w0, ne  // ne = any
    fccc:	and	w0, w0, #0xff
    fcd0:	ldr	x30, [sp], #48
    fcd4:	ret
    fcd8:	str	x30, [sp, #-96]!
    fcdc:	str	x0, [sp, #24]
    fce0:	str	x1, [sp, #16]
    fce4:	ldr	x1, [sp, #16]
    fce8:	ldr	x0, [sp, #24]
    fcec:	bl	fc8c <__sanitizer_get_allocated_size@@Base+0x112c>
    fcf0:	and	w0, w0, #0xff
    fcf4:	and	x0, x0, #0xff
    fcf8:	str	x0, [sp, #88]
    fcfc:	str	xzr, [sp, #80]
    fd00:	ldr	x1, [sp, #88]
    fd04:	ldr	x0, [sp, #80]
    fd08:	cmp	x1, x0
    fd0c:	cset	w0, eq  // eq = none
    fd10:	and	w0, w0, #0xff
    fd14:	and	x0, x0, #0xff
    fd18:	cmp	x0, #0x0
    fd1c:	b.eq	fd40 <__sanitizer_get_allocated_size@@Base+0x11e0>  // b.none
    fd20:	ldr	x4, [sp, #80]
    fd24:	ldr	x3, [sp, #88]
    fd28:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
    fd2c:	add	x2, x0, #0x788
    fd30:	mov	w1, #0x91                  	// #145
    fd34:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
    fd38:	add	x0, x0, #0x7a8
    fd3c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    fd40:	ldr	x0, [sp, #16]
    fd44:	str	x0, [sp, #72]
    fd48:	ldr	x1, [sp, #72]
    fd4c:	ldr	x0, [sp, #24]
    fd50:	bl	11378 <__sanitizer_get_allocated_size@@Base+0x2818>
    fd54:	str	x0, [sp, #64]
    fd58:	ldr	x1, [sp, #16]
    fd5c:	ldr	x0, [sp, #24]
    fd60:	bl	10594 <__sanitizer_get_allocated_size@@Base+0x1a34>
    fd64:	bl	11394 <__sanitizer_get_allocated_size@@Base+0x2834>
    fd68:	str	x0, [sp, #56]
    fd6c:	ldr	x0, [sp, #72]
    fd70:	mov	w1, w0
    fd74:	ldr	x0, [sp, #64]
    fd78:	sub	w0, w1, w0
    fd7c:	str	w0, [sp, #52]
    fd80:	ldr	x0, [sp, #56]
    fd84:	mov	w1, w0
    fd88:	ldr	w0, [sp, #52]
    fd8c:	udiv	w0, w0, w1
    fd90:	mov	w0, w0
    fd94:	str	x0, [sp, #40]
    fd98:	ldr	x0, [sp, #40]
    fd9c:	add	x0, x0, #0x1
    fda0:	lsl	x0, x0, #4
    fda4:	ldr	x1, [sp, #64]
    fda8:	sub	x0, x1, x0
    fdac:	add	x0, x0, #0x100, lsl #12
    fdb0:	str	x0, [sp, #32]
    fdb4:	ldr	x0, [sp, #32]
    fdb8:	ldr	x30, [sp], #96
    fdbc:	ret
    fdc0:	str	x30, [sp, #-48]!
    fdc4:	str	x0, [sp, #24]
    fdc8:	str	x1, [sp, #16]
    fdcc:	ldr	x2, [sp, #16]
    fdd0:	ldr	x0, [sp, #24]
    fdd4:	ldr	x0, [x0]
    fdd8:	mov	x1, x0
    fddc:	mov	x0, x2
    fde0:	bl	ed50 <__sanitizer_get_allocated_size@@Base+0x1f0>
    fde4:	and	w0, w0, #0xff
    fde8:	eor	w0, w0, #0x1
    fdec:	and	w0, w0, #0xff
    fdf0:	cmp	w0, #0x0
    fdf4:	b.eq	fe80 <__sanitizer_get_allocated_size@@Base+0x1320>  // b.none
    fdf8:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
    fdfc:	ldr	x0, [x0, #4008]
    fe00:	ldr	x0, [x0]
    fe04:	ldr	x2, [sp, #16]
    fe08:	mov	x1, x0
    fe0c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
    fe10:	add	x0, x0, #0x7f8
    fe14:	bl	2a350 <OnPrint@@Base+0x3a8>
    fe18:	ldr	x2, [sp, #16]
    fe1c:	ldr	x0, [sp, #24]
    fe20:	ldr	x0, [x0]
    fe24:	mov	x1, x0
    fe28:	mov	x0, x2
    fe2c:	bl	ed50 <__sanitizer_get_allocated_size@@Base+0x1f0>
    fe30:	and	w0, w0, #0xff
    fe34:	and	x0, x0, #0xff
    fe38:	str	x0, [sp, #40]
    fe3c:	str	xzr, [sp, #32]
    fe40:	ldr	x1, [sp, #40]
    fe44:	ldr	x0, [sp, #32]
    fe48:	cmp	x1, x0
    fe4c:	cset	w0, eq  // eq = none
    fe50:	and	w0, w0, #0xff
    fe54:	and	x0, x0, #0xff
    fe58:	cmp	x0, #0x0
    fe5c:	b.eq	fe80 <__sanitizer_get_allocated_size@@Base+0x1320>  // b.none
    fe60:	ldr	x4, [sp, #32]
    fe64:	ldr	x3, [sp, #40]
    fe68:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
    fe6c:	add	x2, x0, #0x810
    fe70:	mov	w1, #0xae                  	// #174
    fe74:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
    fe78:	add	x0, x0, #0x540
    fe7c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    fe80:	ldr	x1, [sp, #16]
    fe84:	ldr	x0, [sp, #24]
    fe88:	bl	113c0 <__sanitizer_get_allocated_size@@Base+0x2860>
    fe8c:	add	x0, x0, #0x20
    fe90:	ldr	x30, [sp], #48
    fe94:	ret
    fe98:	sub	sp, sp, #0x10
    fe9c:	str	x0, [sp, #8]
    fea0:	str	x1, [sp]
    fea4:	ldr	x0, [sp, #8]
    fea8:	cmp	x0, #0x20, lsl #12
    feac:	b.hi	fec4 <__sanitizer_get_allocated_size@@Base+0x1364>  // b.pmore
    feb0:	ldr	x0, [sp]
    feb4:	cmp	x0, #0x20, lsl #12
    feb8:	b.hi	fec4 <__sanitizer_get_allocated_size@@Base+0x1364>  // b.pmore
    febc:	mov	w0, #0x1                   	// #1
    fec0:	b	fec8 <__sanitizer_get_allocated_size@@Base+0x1368>
    fec4:	mov	w0, #0x0                   	// #0
    fec8:	add	sp, sp, #0x10
    fecc:	ret
    fed0:	str	x30, [sp, #-32]!
    fed4:	str	x0, [sp, #24]
    fed8:	str	x1, [sp, #16]
    fedc:	ldr	x0, [sp, #16]
    fee0:	bl	113e4 <__sanitizer_get_allocated_size@@Base+0x2884>
    fee4:	ldr	x30, [sp], #32
    fee8:	ret
    feec:	str	x30, [sp, #-96]!
    fef0:	str	x0, [sp, #40]
    fef4:	str	x1, [sp, #32]
    fef8:	str	x2, [sp, #24]
    fefc:	ldr	x0, [sp, #24]
    ff00:	str	x0, [sp, #88]
    ff04:	str	xzr, [sp, #80]
    ff08:	ldr	x1, [sp, #88]
    ff0c:	ldr	x0, [sp, #80]
    ff10:	cmp	x1, x0
    ff14:	cset	w0, eq  // eq = none
    ff18:	and	w0, w0, #0xff
    ff1c:	and	x0, x0, #0xff
    ff20:	cmp	x0, #0x0
    ff24:	b.eq	ff48 <__sanitizer_get_allocated_size@@Base+0x13e8>  // b.none
    ff28:	ldr	x4, [sp, #80]
    ff2c:	ldr	x3, [sp, #88]
    ff30:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
    ff34:	add	x2, x0, #0x850
    ff38:	mov	w1, #0x9f                  	// #159
    ff3c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
    ff40:	add	x0, x0, #0x868
    ff44:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    ff48:	ldr	x0, [sp, #24]
    ff4c:	str	x0, [sp, #72]
    ff50:	mov	x0, #0x36                  	// #54
    ff54:	str	x0, [sp, #64]
    ff58:	ldr	x1, [sp, #72]
    ff5c:	ldr	x0, [sp, #64]
    ff60:	cmp	x1, x0
    ff64:	cset	w0, cs  // cs = hs, nlast
    ff68:	and	w0, w0, #0xff
    ff6c:	and	x0, x0, #0xff
    ff70:	cmp	x0, #0x0
    ff74:	b.eq	ff98 <__sanitizer_get_allocated_size@@Base+0x1438>  // b.none
    ff78:	ldr	x4, [sp, #64]
    ff7c:	ldr	x3, [sp, #72]
    ff80:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
    ff84:	add	x2, x0, #0x8b8
    ff88:	mov	w1, #0xa0                  	// #160
    ff8c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
    ff90:	add	x0, x0, #0x868
    ff94:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
    ff98:	ldr	x0, [sp, #24]
    ff9c:	lsl	x0, x0, #10
    ffa0:	ldr	x1, [sp, #40]
    ffa4:	add	x0, x1, x0
    ffa8:	str	x0, [sp, #56]
    ffac:	ldr	x0, [sp, #56]
    ffb0:	ldr	x0, [x0]
    ffb4:	cmp	x0, #0x0
    ffb8:	cset	w0, eq  // eq = none
    ffbc:	and	w0, w0, #0xff
    ffc0:	and	x0, x0, #0xff
    ffc4:	cmp	x0, #0x0
    ffc8:	b.eq	1000c <__sanitizer_get_allocated_size@@Base+0x14ac>  // b.none
    ffcc:	ldr	x3, [sp, #24]
    ffd0:	ldr	x2, [sp, #32]
    ffd4:	ldr	x1, [sp, #56]
    ffd8:	ldr	x0, [sp, #40]
    ffdc:	bl	114b4 <__sanitizer_get_allocated_size@@Base+0x2954>
    ffe0:	and	w0, w0, #0xff
    ffe4:	eor	w0, w0, #0x1
    ffe8:	and	w0, w0, #0xff
    ffec:	and	x0, x0, #0xff
    fff0:	cmp	x0, #0x0
    fff4:	cset	w0, ne  // ne = any
    fff8:	and	w0, w0, #0xff
    fffc:	cmp	w0, #0x0
   10000:	b.eq	1000c <__sanitizer_get_allocated_size@@Base+0x14ac>  // b.none
   10004:	mov	x0, #0x0                   	// #0
   10008:	b	1007c <__sanitizer_get_allocated_size@@Base+0x151c>
   1000c:	ldr	x0, [sp, #56]
   10010:	ldr	x0, [x0]
   10014:	sub	x1, x0, #0x1
   10018:	ldr	x0, [sp, #56]
   1001c:	str	x1, [x0]
   10020:	ldr	x0, [sp, #56]
   10024:	ldr	x1, [x0]
   10028:	ldr	x0, [sp, #56]
   1002c:	add	x1, x1, #0x4
   10030:	ldr	x0, [x0, x1, lsl #3]
   10034:	str	x0, [sp, #48]
   10038:	ldr	x0, [sp, #56]
   1003c:	ldr	x0, [x0]
   10040:	sub	x1, x0, #0x1
   10044:	ldr	x0, [sp, #56]
   10048:	add	x1, x1, #0x4
   1004c:	ldr	x0, [x0, x1, lsl #3]
   10050:	prfm	pldl1keep, [x0]
   10054:	ldr	x1, [sp, #40]
   10058:	mov	x0, #0xd800                	// #55296
   1005c:	add	x3, x1, x0
   10060:	ldr	x0, [sp, #56]
   10064:	ldr	x0, [x0, #16]
   10068:	mov	x2, x0
   1006c:	mov	w1, #0x0                   	// #0
   10070:	mov	x0, x3
   10074:	bl	edb8 <__sanitizer_get_allocated_size@@Base+0x258>
   10078:	ldr	x0, [sp, #48]
   1007c:	ldr	x30, [sp], #96
   10080:	ret
   10084:	str	x30, [sp, #-240]!
   10088:	str	x0, [sp, #40]
   1008c:	str	x1, [sp, #32]
   10090:	str	x2, [sp, #24]
   10094:	str	x3, [sp, #16]
   10098:	ldr	x0, [sp, #16]
   1009c:	bl	a3a0 <__lsan_do_recoverable_leak_check@@Base+0x214>
   100a0:	and	w0, w0, #0xff
   100a4:	and	x0, x0, #0xff
   100a8:	str	x0, [sp, #216]
   100ac:	str	xzr, [sp, #208]
   100b0:	ldr	x1, [sp, #216]
   100b4:	ldr	x0, [sp, #208]
   100b8:	cmp	x1, x0
   100bc:	cset	w0, eq  // eq = none
   100c0:	and	w0, w0, #0xff
   100c4:	and	x0, x0, #0xff
   100c8:	cmp	x0, #0x0
   100cc:	b.eq	100f0 <__sanitizer_get_allocated_size@@Base+0x1590>  // b.none
   100d0:	ldr	x4, [sp, #208]
   100d4:	ldr	x3, [sp, #216]
   100d8:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   100dc:	add	x2, x0, #0x8d8
   100e0:	mov	w1, #0x53                  	// #83
   100e4:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   100e8:	add	x0, x0, #0x540
   100ec:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   100f0:	ldr	x1, [sp, #24]
   100f4:	ldr	x0, [sp, #40]
   100f8:	bl	115b4 <__sanitizer_get_allocated_size@@Base+0x2a54>
   100fc:	str	x0, [sp, #232]
   10100:	ldr	x0, [sp, #40]
   10104:	ldr	x0, [x0]
   10108:	ldr	x1, [sp, #16]
   1010c:	cmp	x1, x0
   10110:	b.ls	10124 <__sanitizer_get_allocated_size@@Base+0x15c4>  // b.plast
   10114:	ldr	x1, [sp, #232]
   10118:	ldr	x0, [sp, #16]
   1011c:	add	x0, x1, x0
   10120:	str	x0, [sp, #232]
   10124:	ldr	x1, [sp, #232]
   10128:	ldr	x0, [sp, #24]
   1012c:	cmp	x1, x0
   10130:	b.cs	10160 <__sanitizer_get_allocated_size@@Base+0x1600>  // b.hs, b.nlast
   10134:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   10138:	ldr	x0, [x0, #4008]
   1013c:	ldr	x0, [x0]
   10140:	ldr	x3, [sp, #16]
   10144:	ldr	x2, [sp, #232]
   10148:	mov	x1, x0
   1014c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   10150:	add	x0, x0, #0x900
   10154:	bl	2a3fc <OnPrint@@Base+0x454>
   10158:	mov	x0, #0x0                   	// #0
   1015c:	b	1058c <__sanitizer_get_allocated_size@@Base+0x1a2c>
   10160:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   10164:	ldr	x0, [x0, #3840]
   10168:	ldr	x0, [x0]
   1016c:	mov	x1, x0
   10170:	ldr	x0, [sp, #232]
   10174:	bl	26bd8 <__sanitizer_set_report_fd@@Base+0x79e0>
   10178:	str	x0, [sp, #200]
   1017c:	ldr	x0, [sp, #200]
   10180:	cmp	x0, #0x0
   10184:	b.ne	10190 <__sanitizer_get_allocated_size@@Base+0x1630>  // b.any
   10188:	mov	x0, #0x0                   	// #0
   1018c:	b	1058c <__sanitizer_get_allocated_size@@Base+0x1a2c>
   10190:	ldr	x0, [sp, #40]
   10194:	ldr	x0, [x0]
   10198:	mov	x1, x0
   1019c:	ldr	x0, [sp, #200]
   101a0:	bl	ed50 <__sanitizer_get_allocated_size@@Base+0x1f0>
   101a4:	and	w0, w0, #0xff
   101a8:	and	x0, x0, #0xff
   101ac:	str	x0, [sp, #192]
   101b0:	str	xzr, [sp, #184]
   101b4:	ldr	x1, [sp, #192]
   101b8:	ldr	x0, [sp, #184]
   101bc:	cmp	x1, x0
   101c0:	cset	w0, eq  // eq = none
   101c4:	and	w0, w0, #0xff
   101c8:	and	x0, x0, #0xff
   101cc:	cmp	x0, #0x0
   101d0:	b.eq	101f4 <__sanitizer_get_allocated_size@@Base+0x1694>  // b.none
   101d4:	ldr	x4, [sp, #184]
   101d8:	ldr	x3, [sp, #192]
   101dc:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   101e0:	add	x2, x0, #0x968
   101e4:	mov	w1, #0x62                  	// #98
   101e8:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   101ec:	add	x0, x0, #0x540
   101f0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   101f4:	add	x0, sp, #0x40
   101f8:	ldr	x2, [sp, #232]
   101fc:	ldr	x1, [sp, #200]
   10200:	bl	ed80 <__sanitizer_get_allocated_size@@Base+0x220>
   10204:	ldr	x1, [sp, #200]
   10208:	ldr	x0, [sp, #232]
   1020c:	add	x0, x1, x0
   10210:	str	x0, [sp, #176]
   10214:	ldr	x0, [sp, #40]
   10218:	ldr	x0, [x0]
   1021c:	ldr	x1, [sp, #200]
   10220:	add	x0, x1, x0
   10224:	str	x0, [sp, #224]
   10228:	ldr	x0, [sp, #16]
   1022c:	sub	x1, x0, #0x1
   10230:	ldr	x0, [sp, #224]
   10234:	and	x0, x1, x0
   10238:	cmp	x0, #0x0
   1023c:	b.eq	10264 <__sanitizer_get_allocated_size@@Base+0x1704>  // b.none
   10240:	ldr	x0, [sp, #16]
   10244:	sub	x1, x0, #0x1
   10248:	ldr	x0, [sp, #224]
   1024c:	and	x0, x1, x0
   10250:	ldr	x1, [sp, #16]
   10254:	sub	x0, x1, x0
   10258:	ldr	x1, [sp, #224]
   1025c:	add	x0, x1, x0
   10260:	str	x0, [sp, #224]
   10264:	ldr	x1, [sp, #16]
   10268:	ldr	x0, [sp, #224]
   1026c:	bl	ed50 <__sanitizer_get_allocated_size@@Base+0x1f0>
   10270:	and	w0, w0, #0xff
   10274:	and	x0, x0, #0xff
   10278:	str	x0, [sp, #168]
   1027c:	str	xzr, [sp, #160]
   10280:	ldr	x1, [sp, #168]
   10284:	ldr	x0, [sp, #160]
   10288:	cmp	x1, x0
   1028c:	cset	w0, eq  // eq = none
   10290:	and	w0, w0, #0xff
   10294:	and	x0, x0, #0xff
   10298:	cmp	x0, #0x0
   1029c:	b.eq	102c0 <__sanitizer_get_allocated_size@@Base+0x1760>  // b.none
   102a0:	ldr	x4, [sp, #160]
   102a4:	ldr	x3, [sp, #168]
   102a8:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   102ac:	add	x2, x0, #0x998
   102b0:	mov	w1, #0x68                  	// #104
   102b4:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   102b8:	add	x0, x0, #0x540
   102bc:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   102c0:	ldr	x0, [sp, #40]
   102c4:	ldr	x0, [x0]
   102c8:	mov	x1, x0
   102cc:	ldr	x0, [sp, #224]
   102d0:	bl	ed50 <__sanitizer_get_allocated_size@@Base+0x1f0>
   102d4:	and	w0, w0, #0xff
   102d8:	and	x0, x0, #0xff
   102dc:	str	x0, [sp, #152]
   102e0:	str	xzr, [sp, #144]
   102e4:	ldr	x1, [sp, #152]
   102e8:	ldr	x0, [sp, #144]
   102ec:	cmp	x1, x0
   102f0:	cset	w0, eq  // eq = none
   102f4:	and	w0, w0, #0xff
   102f8:	and	x0, x0, #0xff
   102fc:	cmp	x0, #0x0
   10300:	b.eq	10324 <__sanitizer_get_allocated_size@@Base+0x17c4>  // b.none
   10304:	ldr	x4, [sp, #144]
   10308:	ldr	x3, [sp, #152]
   1030c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   10310:	add	x2, x0, #0x9c0
   10314:	mov	w1, #0x69                  	// #105
   10318:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   1031c:	add	x0, x0, #0x540
   10320:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   10324:	ldr	x1, [sp, #224]
   10328:	ldr	x0, [sp, #24]
   1032c:	add	x0, x1, x0
   10330:	str	x0, [sp, #136]
   10334:	ldr	x0, [sp, #200]
   10338:	str	x0, [sp, #128]
   1033c:	ldr	x1, [sp, #136]
   10340:	ldr	x0, [sp, #128]
   10344:	cmp	x1, x0
   10348:	cset	w0, cc  // cc = lo, ul, last
   1034c:	and	w0, w0, #0xff
   10350:	and	x0, x0, #0xff
   10354:	cmp	x0, #0x0
   10358:	b.eq	1037c <__sanitizer_get_allocated_size@@Base+0x181c>  // b.none
   1035c:	ldr	x4, [sp, #128]
   10360:	ldr	x3, [sp, #136]
   10364:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   10368:	add	x2, x0, #0x9e8
   1036c:	mov	w1, #0x6a                  	// #106
   10370:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   10374:	add	x0, x0, #0x540
   10378:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1037c:	ldr	x1, [sp, #224]
   10380:	ldr	x0, [sp, #24]
   10384:	add	x0, x1, x0
   10388:	str	x0, [sp, #120]
   1038c:	ldr	x0, [sp, #176]
   10390:	str	x0, [sp, #112]
   10394:	ldr	x1, [sp, #120]
   10398:	ldr	x0, [sp, #112]
   1039c:	cmp	x1, x0
   103a0:	cset	w0, hi  // hi = pmore
   103a4:	and	w0, w0, #0xff
   103a8:	and	x0, x0, #0xff
   103ac:	cmp	x0, #0x0
   103b0:	b.eq	103d4 <__sanitizer_get_allocated_size@@Base+0x1874>  // b.none
   103b4:	ldr	x4, [sp, #112]
   103b8:	ldr	x3, [sp, #120]
   103bc:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   103c0:	add	x2, x0, #0xa08
   103c4:	mov	w1, #0x6b                  	// #107
   103c8:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   103cc:	add	x0, x0, #0x540
   103d0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   103d4:	ldr	x1, [sp, #224]
   103d8:	ldr	x0, [sp, #40]
   103dc:	bl	115ec <__sanitizer_get_allocated_size@@Base+0x2a8c>
   103e0:	str	x0, [sp, #104]
   103e4:	ldr	x0, [sp, #104]
   103e8:	ldr	x1, [sp, #24]
   103ec:	str	x1, [x0, #16]
   103f0:	ldr	x0, [sp, #104]
   103f4:	ldr	x1, [sp, #200]
   103f8:	str	x1, [x0]
   103fc:	ldr	x0, [sp, #104]
   10400:	ldr	x1, [sp, #232]
   10404:	str	x1, [x0, #8]
   10408:	ldr	x0, [sp, #232]
   1040c:	bl	a324 <__lsan_do_recoverable_leak_check@@Base+0x198>
   10410:	str	x0, [sp, #96]
   10414:	ldr	x0, [sp, #96]
   10418:	str	x0, [sp, #88]
   1041c:	mov	x0, #0x40                  	// #64
   10420:	str	x0, [sp, #80]
   10424:	ldr	x1, [sp, #88]
   10428:	ldr	x0, [sp, #80]
   1042c:	cmp	x1, x0
   10430:	cset	w0, cs  // cs = hs, nlast
   10434:	and	w0, w0, #0xff
   10438:	and	x0, x0, #0xff
   1043c:	cmp	x0, #0x0
   10440:	b.eq	10464 <__sanitizer_get_allocated_size@@Base+0x1904>  // b.none
   10444:	ldr	x4, [sp, #80]
   10448:	ldr	x3, [sp, #88]
   1044c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   10450:	add	x2, x0, #0xa28
   10454:	mov	w1, #0x71                  	// #113
   10458:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   1045c:	add	x0, x0, #0x540
   10460:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   10464:	ldr	x0, [sp, #40]
   10468:	add	x1, x0, #0x268
   1046c:	add	x0, sp, #0x38
   10470:	bl	f58c <__sanitizer_get_allocated_size@@Base+0xa2c>
   10474:	ldr	x0, [sp, #40]
   10478:	add	x2, x0, #0x10
   1047c:	ldr	x0, [sp, #40]
   10480:	ldr	x0, [x0, #56]
   10484:	mov	x1, x0
   10488:	mov	x0, x2
   1048c:	bl	f0a4 <__sanitizer_get_allocated_size@@Base+0x544>
   10490:	ldr	x0, [sp, #40]
   10494:	ldr	x0, [x0, #56]
   10498:	add	x2, x0, #0x1
   1049c:	ldr	x1, [sp, #40]
   104a0:	str	x2, [x1, #56]
   104a4:	str	x0, [sp, #72]
   104a8:	ldr	x0, [sp, #104]
   104ac:	ldr	x1, [sp, #72]
   104b0:	str	x1, [x0, #24]
   104b4:	ldr	x0, [sp, #40]
   104b8:	ldr	x1, [x0, #8]
   104bc:	ldr	x0, [sp, #72]
   104c0:	lsl	x0, x0, #3
   104c4:	add	x0, x1, x0
   104c8:	ldr	x1, [sp, #104]
   104cc:	str	x1, [x0]
   104d0:	ldr	x0, [sp, #40]
   104d4:	strb	wzr, [x0, #64]
   104d8:	ldr	x0, [sp, #40]
   104dc:	ldr	x0, [x0, #72]
   104e0:	add	x1, x0, #0x1
   104e4:	ldr	x0, [sp, #40]
   104e8:	str	x1, [x0, #72]
   104ec:	ldr	x0, [sp, #40]
   104f0:	ldr	x1, [x0, #88]
   104f4:	ldr	x0, [sp, #232]
   104f8:	add	x1, x1, x0
   104fc:	ldr	x0, [sp, #40]
   10500:	str	x1, [x0, #88]
   10504:	ldr	x0, [sp, #40]
   10508:	ldr	x2, [x0, #96]
   1050c:	ldr	x0, [sp, #40]
   10510:	ldr	x0, [x0, #88]
   10514:	mov	x1, x0
   10518:	mov	x0, x2
   1051c:	bl	ae7c <__lsan_do_recoverable_leak_check@@Base+0xcf0>
   10520:	mov	x1, x0
   10524:	ldr	x0, [sp, #40]
   10528:	str	x1, [x0, #96]
   1052c:	ldr	x1, [sp, #40]
   10530:	ldr	x0, [sp, #96]
   10534:	add	x0, x0, #0xc
   10538:	lsl	x0, x0, #3
   1053c:	add	x0, x1, x0
   10540:	ldr	x0, [x0, #8]
   10544:	add	x1, x0, #0x1
   10548:	ldr	x2, [sp, #40]
   1054c:	ldr	x0, [sp, #96]
   10550:	add	x0, x0, #0xc
   10554:	lsl	x0, x0, #3
   10558:	add	x0, x2, x0
   1055c:	str	x1, [x0, #8]
   10560:	ldr	x2, [sp, #232]
   10564:	mov	w1, #0x0                   	// #0
   10568:	ldr	x0, [sp, #32]
   1056c:	bl	edb8 <__sanitizer_get_allocated_size@@Base+0x258>
   10570:	ldr	x2, [sp, #232]
   10574:	mov	w1, #0x1                   	// #1
   10578:	ldr	x0, [sp, #32]
   1057c:	bl	edb8 <__sanitizer_get_allocated_size@@Base+0x258>
   10580:	add	x0, sp, #0x38
   10584:	bl	f5bc <__sanitizer_get_allocated_size@@Base+0xa5c>
   10588:	ldr	x0, [sp, #224]
   1058c:	ldr	x30, [sp], #240
   10590:	ret
   10594:	stp	x19, x30, [sp, #-32]!
   10598:	str	x0, [sp, #24]
   1059c:	str	x1, [sp, #16]
   105a0:	ldr	x19, [sp, #24]
   105a4:	ldr	x0, [sp, #16]
   105a8:	mov	x1, x0
   105ac:	ldr	x0, [sp, #24]
   105b0:	bl	11674 <__sanitizer_get_allocated_size@@Base+0x2b14>
   105b4:	mov	x1, x0
   105b8:	mov	x0, x19
   105bc:	bl	116e8 <__sanitizer_get_allocated_size@@Base+0x2b88>
   105c0:	and	w0, w0, #0xff
   105c4:	and	x0, x0, #0xff
   105c8:	ldp	x19, x30, [sp], #32
   105cc:	ret
   105d0:	str	x30, [sp, #-96]!
   105d4:	str	x0, [sp, #40]
   105d8:	str	x1, [sp, #32]
   105dc:	str	x2, [sp, #24]
   105e0:	str	x3, [sp, #16]
   105e4:	ldr	x0, [sp, #24]
   105e8:	str	x0, [sp, #88]
   105ec:	str	xzr, [sp, #80]
   105f0:	ldr	x1, [sp, #88]
   105f4:	ldr	x0, [sp, #80]
   105f8:	cmp	x1, x0
   105fc:	cset	w0, eq  // eq = none
   10600:	and	w0, w0, #0xff
   10604:	and	x0, x0, #0xff
   10608:	cmp	x0, #0x0
   1060c:	b.eq	10630 <__sanitizer_get_allocated_size@@Base+0x1ad0>  // b.none
   10610:	ldr	x4, [sp, #80]
   10614:	ldr	x3, [sp, #88]
   10618:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   1061c:	add	x2, x0, #0x850
   10620:	mov	w1, #0xae                  	// #174
   10624:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   10628:	add	x0, x0, #0x868
   1062c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   10630:	ldr	x0, [sp, #24]
   10634:	str	x0, [sp, #72]
   10638:	mov	x0, #0x36                  	// #54
   1063c:	str	x0, [sp, #64]
   10640:	ldr	x1, [sp, #72]
   10644:	ldr	x0, [sp, #64]
   10648:	cmp	x1, x0
   1064c:	cset	w0, cs  // cs = hs, nlast
   10650:	and	w0, w0, #0xff
   10654:	and	x0, x0, #0xff
   10658:	cmp	x0, #0x0
   1065c:	b.eq	10680 <__sanitizer_get_allocated_size@@Base+0x1b20>  // b.none
   10660:	ldr	x4, [sp, #64]
   10664:	ldr	x3, [sp, #72]
   10668:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   1066c:	add	x2, x0, #0x8b8
   10670:	mov	w1, #0xaf                  	// #175
   10674:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   10678:	add	x0, x0, #0x868
   1067c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   10680:	ldr	x0, [sp, #24]
   10684:	lsl	x0, x0, #10
   10688:	ldr	x1, [sp, #40]
   1068c:	add	x0, x1, x0
   10690:	str	x0, [sp, #56]
   10694:	ldr	x1, [sp, #56]
   10698:	ldr	x0, [sp, #40]
   1069c:	bl	1178c <__sanitizer_get_allocated_size@@Base+0x2c2c>
   106a0:	ldr	x0, [sp, #56]
   106a4:	ldr	x1, [x0]
   106a8:	ldr	x0, [sp, #56]
   106ac:	ldr	x0, [x0, #8]
   106b0:	cmp	x1, x0
   106b4:	cset	w0, eq  // eq = none
   106b8:	and	w0, w0, #0xff
   106bc:	and	x0, x0, #0xff
   106c0:	cmp	x0, #0x0
   106c4:	b.eq	106dc <__sanitizer_get_allocated_size@@Base+0x1b7c>  // b.none
   106c8:	ldr	x3, [sp, #24]
   106cc:	ldr	x2, [sp, #32]
   106d0:	ldr	x1, [sp, #56]
   106d4:	ldr	x0, [sp, #40]
   106d8:	bl	11260 <__sanitizer_get_allocated_size@@Base+0x2700>
   106dc:	ldr	x0, [sp, #56]
   106e0:	ldr	x0, [x0]
   106e4:	add	x2, x0, #0x1
   106e8:	ldr	x1, [sp, #56]
   106ec:	str	x2, [x1]
   106f0:	ldr	x1, [sp, #56]
   106f4:	add	x0, x0, #0x4
   106f8:	ldr	x2, [sp, #16]
   106fc:	str	x2, [x1, x0, lsl #3]
   10700:	ldr	x1, [sp, #40]
   10704:	mov	x0, #0xd800                	// #55296
   10708:	add	x3, x1, x0
   1070c:	ldr	x0, [sp, #56]
   10710:	ldr	x0, [x0, #16]
   10714:	mov	x2, x0
   10718:	mov	w1, #0x0                   	// #0
   1071c:	mov	x0, x3
   10720:	bl	ee28 <__sanitizer_get_allocated_size@@Base+0x2c8>
   10724:	nop
   10728:	ldr	x30, [sp], #96
   1072c:	ret
   10730:	str	x30, [sp, #-112]!
   10734:	str	x0, [sp, #40]
   10738:	str	x1, [sp, #32]
   1073c:	str	x2, [sp, #24]
   10740:	ldr	x1, [sp, #24]
   10744:	ldr	x0, [sp, #40]
   10748:	bl	113c0 <__sanitizer_get_allocated_size@@Base+0x2860>
   1074c:	str	x0, [sp, #104]
   10750:	ldr	x0, [sp, #40]
   10754:	add	x1, x0, #0x268
   10758:	add	x0, sp, #0x30
   1075c:	bl	f58c <__sanitizer_get_allocated_size@@Base+0xa2c>
   10760:	ldr	x0, [sp, #104]
   10764:	ldr	x0, [x0, #24]
   10768:	str	x0, [sp, #96]
   1076c:	ldr	x0, [sp, #40]
   10770:	ldr	x1, [x0, #8]
   10774:	ldr	x0, [sp, #96]
   10778:	lsl	x0, x0, #3
   1077c:	add	x0, x1, x0
   10780:	ldr	x0, [x0]
   10784:	str	x0, [sp, #88]
   10788:	ldr	x0, [sp, #104]
   1078c:	str	x0, [sp, #80]
   10790:	ldr	x1, [sp, #88]
   10794:	ldr	x0, [sp, #80]
   10798:	cmp	x1, x0
   1079c:	cset	w0, ne  // ne = any
   107a0:	and	w0, w0, #0xff
   107a4:	and	x0, x0, #0xff
   107a8:	cmp	x0, #0x0
   107ac:	b.eq	107d0 <__sanitizer_get_allocated_size@@Base+0x1c70>  // b.none
   107b0:	ldr	x4, [sp, #80]
   107b4:	ldr	x3, [sp, #88]
   107b8:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   107bc:	add	x2, x0, #0xa78
   107c0:	mov	w1, #0x88                  	// #136
   107c4:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   107c8:	add	x0, x0, #0x540
   107cc:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   107d0:	ldr	x0, [sp, #96]
   107d4:	str	x0, [sp, #72]
   107d8:	ldr	x0, [sp, #40]
   107dc:	ldr	x0, [x0, #56]
   107e0:	str	x0, [sp, #64]
   107e4:	ldr	x1, [sp, #72]
   107e8:	ldr	x0, [sp, #64]
   107ec:	cmp	x1, x0
   107f0:	cset	w0, cs  // cs = hs, nlast
   107f4:	and	w0, w0, #0xff
   107f8:	and	x0, x0, #0xff
   107fc:	cmp	x0, #0x0
   10800:	b.eq	10824 <__sanitizer_get_allocated_size@@Base+0x1cc4>  // b.none
   10804:	ldr	x4, [sp, #64]
   10808:	ldr	x3, [sp, #72]
   1080c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   10810:	add	x2, x0, #0xa98
   10814:	mov	w1, #0x89                  	// #137
   10818:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   1081c:	add	x0, x0, #0x540
   10820:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   10824:	ldr	x0, [sp, #40]
   10828:	ldr	x1, [x0, #8]
   1082c:	ldr	x0, [sp, #40]
   10830:	ldr	x0, [x0, #56]
   10834:	sub	x2, x0, #0x1
   10838:	ldr	x0, [sp, #40]
   1083c:	str	x2, [x0, #56]
   10840:	ldr	x0, [sp, #40]
   10844:	ldr	x0, [x0, #56]
   10848:	lsl	x0, x0, #3
   1084c:	add	x1, x1, x0
   10850:	ldr	x0, [sp, #40]
   10854:	ldr	x2, [x0, #8]
   10858:	ldr	x0, [sp, #96]
   1085c:	lsl	x0, x0, #3
   10860:	add	x0, x2, x0
   10864:	ldr	x1, [x1]
   10868:	str	x1, [x0]
   1086c:	ldr	x0, [sp, #40]
   10870:	ldr	x1, [x0, #8]
   10874:	ldr	x0, [sp, #96]
   10878:	lsl	x0, x0, #3
   1087c:	add	x0, x1, x0
   10880:	ldr	x0, [x0]
   10884:	ldr	x1, [sp, #96]
   10888:	str	x1, [x0, #24]
   1088c:	ldr	x0, [sp, #40]
   10890:	strb	wzr, [x0, #64]
   10894:	ldr	x0, [sp, #40]
   10898:	ldr	x0, [x0, #80]
   1089c:	add	x1, x0, #0x1
   108a0:	ldr	x0, [sp, #40]
   108a4:	str	x1, [x0, #80]
   108a8:	ldr	x0, [sp, #40]
   108ac:	ldr	x1, [x0, #88]
   108b0:	ldr	x0, [sp, #104]
   108b4:	ldr	x0, [x0, #8]
   108b8:	sub	x1, x1, x0
   108bc:	ldr	x0, [sp, #40]
   108c0:	str	x1, [x0, #88]
   108c4:	ldr	x0, [sp, #104]
   108c8:	ldr	x0, [x0, #8]
   108cc:	mov	x2, x0
   108d0:	mov	w1, #0x0                   	// #0
   108d4:	ldr	x0, [sp, #32]
   108d8:	bl	ee28 <__sanitizer_get_allocated_size@@Base+0x2c8>
   108dc:	ldr	x0, [sp, #104]
   108e0:	ldr	x0, [x0, #8]
   108e4:	mov	x2, x0
   108e8:	mov	w1, #0x1                   	// #1
   108ec:	ldr	x0, [sp, #32]
   108f0:	bl	ee28 <__sanitizer_get_allocated_size@@Base+0x2c8>
   108f4:	add	x0, sp, #0x30
   108f8:	bl	f5bc <__sanitizer_get_allocated_size@@Base+0xa5c>
   108fc:	ldr	x0, [sp, #104]
   10900:	ldr	x1, [x0]
   10904:	ldr	x0, [sp, #104]
   10908:	ldr	x2, [x0, #8]
   1090c:	add	x0, sp, #0x38
   10910:	bl	ed9c <__sanitizer_get_allocated_size@@Base+0x23c>
   10914:	ldr	x0, [sp, #104]
   10918:	ldr	x0, [x0]
   1091c:	mov	x2, x0
   10920:	ldr	x0, [sp, #104]
   10924:	ldr	x0, [x0, #8]
   10928:	mov	x1, x0
   1092c:	mov	x0, x2
   10930:	bl	26af4 <__sanitizer_set_report_fd@@Base+0x78fc>
   10934:	nop
   10938:	ldr	x30, [sp], #112
   1093c:	ret
   10940:	str	x30, [sp, #-32]!
   10944:	str	x0, [sp, #24]
   10948:	str	x1, [sp, #16]
   1094c:	ldr	x0, [sp, #24]
   10950:	ldr	x1, [sp, #16]
   10954:	bl	fc8c <__sanitizer_get_allocated_size@@Base+0x112c>
   10958:	and	w0, w0, #0xff
   1095c:	cmp	w0, #0x0
   10960:	b.eq	1096c <__sanitizer_get_allocated_size@@Base+0x1e0c>  // b.none
   10964:	mov	w0, #0x1                   	// #1
   10968:	b	10988 <__sanitizer_get_allocated_size@@Base+0x1e28>
   1096c:	ldr	x1, [sp, #24]
   10970:	mov	x0, #0xdc0                 	// #3520
   10974:	movk	x0, #0x8, lsl #16
   10978:	add	x0, x1, x0
   1097c:	ldr	x1, [sp, #16]
   10980:	bl	11868 <__sanitizer_get_allocated_size@@Base+0x2d08>
   10984:	and	w0, w0, #0xff
   10988:	ldr	x30, [sp], #32
   1098c:	ret
   10990:	str	x30, [sp, #-32]!
   10994:	str	x0, [sp, #24]
   10998:	str	x1, [sp, #16]
   1099c:	ldr	x0, [sp, #24]
   109a0:	ldr	x1, [sp, #16]
   109a4:	bl	fc8c <__sanitizer_get_allocated_size@@Base+0x112c>
   109a8:	and	w0, w0, #0xff
   109ac:	cmp	w0, #0x0
   109b0:	b.eq	109c4 <__sanitizer_get_allocated_size@@Base+0x1e64>  // b.none
   109b4:	ldr	x0, [sp, #24]
   109b8:	ldr	x1, [sp, #16]
   109bc:	bl	11894 <__sanitizer_get_allocated_size@@Base+0x2d34>
   109c0:	b	109dc <__sanitizer_get_allocated_size@@Base+0x1e7c>
   109c4:	ldr	x1, [sp, #24]
   109c8:	mov	x0, #0xdc0                 	// #3520
   109cc:	movk	x0, #0x8, lsl #16
   109d0:	add	x0, x1, x0
   109d4:	ldr	x1, [sp, #16]
   109d8:	bl	11914 <__sanitizer_get_allocated_size@@Base+0x2db4>
   109dc:	ldr	x30, [sp], #32
   109e0:	ret
   109e4:	str	x30, [sp, #-48]!
   109e8:	str	x0, [sp, #24]
   109ec:	str	xzr, [sp, #40]
   109f0:	ldr	x0, [sp, #40]
   109f4:	cmp	x0, #0x35
   109f8:	b.hi	10a1c <__sanitizer_get_allocated_size@@Base+0x1ebc>  // b.pmore
   109fc:	ldr	x1, [sp, #40]
   10a00:	ldr	x0, [sp, #24]
   10a04:	bl	1194c <__sanitizer_get_allocated_size@@Base+0x2dec>
   10a08:	bl	ebb0 <__sanitizer_get_allocated_size@@Base+0x50>
   10a0c:	ldr	x0, [sp, #40]
   10a10:	add	x0, x0, #0x1
   10a14:	str	x0, [sp, #40]
   10a18:	b	109f0 <__sanitizer_get_allocated_size@@Base+0x1e90>
   10a1c:	nop
   10a20:	ldr	x30, [sp], #48
   10a24:	ret
   10a28:	str	x30, [sp, #-32]!
   10a2c:	str	x0, [sp, #24]
   10a30:	ldr	x0, [sp, #24]
   10a34:	add	x0, x0, #0x268
   10a38:	bl	ebb0 <__sanitizer_get_allocated_size@@Base+0x50>
   10a3c:	nop
   10a40:	ldr	x30, [sp], #32
   10a44:	ret
   10a48:	str	x30, [sp, #-32]!
   10a4c:	str	x0, [sp, #24]
   10a50:	ldr	x0, [sp, #24]
   10a54:	add	x0, x0, #0x268
   10a58:	bl	ec14 <__sanitizer_get_allocated_size@@Base+0xb4>
   10a5c:	nop
   10a60:	ldr	x30, [sp], #32
   10a64:	ret
   10a68:	str	x30, [sp, #-48]!
   10a6c:	str	x0, [sp, #24]
   10a70:	mov	w0, #0x35                  	// #53
   10a74:	str	w0, [sp, #44]
   10a78:	ldr	w0, [sp, #44]
   10a7c:	cmp	w0, #0x0
   10a80:	b.lt	10aa8 <__sanitizer_get_allocated_size@@Base+0x1f48>  // b.tstop
   10a84:	ldrsw	x0, [sp, #44]
   10a88:	mov	x1, x0
   10a8c:	ldr	x0, [sp, #24]
   10a90:	bl	1194c <__sanitizer_get_allocated_size@@Base+0x2dec>
   10a94:	bl	ec14 <__sanitizer_get_allocated_size@@Base+0xb4>
   10a98:	ldr	w0, [sp, #44]
   10a9c:	sub	w0, w0, #0x1
   10aa0:	str	w0, [sp, #44]
   10aa4:	b	10a78 <__sanitizer_get_allocated_size@@Base+0x1f18>
   10aa8:	nop
   10aac:	ldr	x30, [sp], #48
   10ab0:	ret
   10ab4:	str	x30, [sp, #-96]!
   10ab8:	str	x0, [sp, #24]
   10abc:	str	x1, [sp, #16]
   10ac0:	ldr	x1, [sp, #16]
   10ac4:	ldr	x0, [sp, #24]
   10ac8:	bl	fc8c <__sanitizer_get_allocated_size@@Base+0x112c>
   10acc:	and	w0, w0, #0xff
   10ad0:	and	x0, x0, #0xff
   10ad4:	str	x0, [sp, #88]
   10ad8:	str	xzr, [sp, #80]
   10adc:	ldr	x1, [sp, #88]
   10ae0:	ldr	x0, [sp, #80]
   10ae4:	cmp	x1, x0
   10ae8:	cset	w0, eq  // eq = none
   10aec:	and	w0, w0, #0xff
   10af0:	and	x0, x0, #0xff
   10af4:	cmp	x0, #0x0
   10af8:	b.eq	10b1c <__sanitizer_get_allocated_size@@Base+0x1fbc>  // b.none
   10afc:	ldr	x4, [sp, #80]
   10b00:	ldr	x3, [sp, #88]
   10b04:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   10b08:	add	x2, x0, #0x788
   10b0c:	mov	w1, #0xc1                  	// #193
   10b10:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   10b14:	add	x0, x0, #0x7a8
   10b18:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   10b1c:	ldr	x0, [sp, #16]
   10b20:	str	x0, [sp, #72]
   10b24:	ldr	x1, [sp, #72]
   10b28:	ldr	x0, [sp, #24]
   10b2c:	bl	11378 <__sanitizer_get_allocated_size@@Base+0x2818>
   10b30:	str	x0, [sp, #64]
   10b34:	ldr	x1, [sp, #16]
   10b38:	ldr	x0, [sp, #24]
   10b3c:	bl	10594 <__sanitizer_get_allocated_size@@Base+0x1a34>
   10b40:	bl	11394 <__sanitizer_get_allocated_size@@Base+0x2834>
   10b44:	str	x0, [sp, #56]
   10b48:	ldr	x0, [sp, #72]
   10b4c:	mov	w1, w0
   10b50:	ldr	x0, [sp, #64]
   10b54:	sub	w0, w1, w0
   10b58:	str	w0, [sp, #52]
   10b5c:	ldr	x0, [sp, #56]
   10b60:	mov	w1, w0
   10b64:	ldr	w0, [sp, #52]
   10b68:	udiv	w0, w0, w1
   10b6c:	str	w0, [sp, #48]
   10b70:	ldr	x0, [sp, #56]
   10b74:	mov	w1, w0
   10b78:	ldr	w0, [sp, #48]
   10b7c:	mul	w0, w1, w0
   10b80:	mov	w0, w0
   10b84:	ldr	x1, [sp, #64]
   10b88:	add	x0, x1, x0
   10b8c:	str	x0, [sp, #40]
   10b90:	ldr	x0, [sp, #40]
   10b94:	ldr	x30, [sp], #96
   10b98:	ret
   10b9c:	str	x30, [sp, #-112]!
   10ba0:	str	x0, [sp, #24]
   10ba4:	str	x1, [sp, #16]
   10ba8:	ldr	x0, [sp, #24]
   10bac:	add	x0, x0, #0x268
   10bb0:	bl	ec38 <__sanitizer_get_allocated_size@@Base+0xd8>
   10bb4:	ldr	x0, [sp, #16]
   10bb8:	str	x0, [sp, #88]
   10bbc:	ldr	x0, [sp, #24]
   10bc0:	ldr	x0, [x0, #56]
   10bc4:	str	x0, [sp, #80]
   10bc8:	ldr	x0, [sp, #80]
   10bcc:	cmp	x0, #0x0
   10bd0:	b.ne	10bdc <__sanitizer_get_allocated_size@@Base+0x207c>  // b.any
   10bd4:	mov	x0, #0x0                   	// #0
   10bd8:	b	10dd8 <__sanitizer_get_allocated_size@@Base+0x2278>
   10bdc:	ldr	x0, [sp, #24]
   10be0:	bl	11978 <__sanitizer_get_allocated_size@@Base+0x2e18>
   10be4:	ldr	x0, [sp, #24]
   10be8:	ldr	x0, [x0, #8]
   10bec:	ldr	x0, [x0]
   10bf0:	str	x0, [sp, #72]
   10bf4:	ldr	x0, [sp, #24]
   10bf8:	ldr	x1, [x0, #8]
   10bfc:	ldr	x0, [sp, #80]
   10c00:	lsl	x0, x0, #3
   10c04:	sub	x0, x0, #0x8
   10c08:	add	x0, x1, x0
   10c0c:	ldr	x0, [x0]
   10c10:	mov	x2, x0
   10c14:	ldr	x0, [sp, #24]
   10c18:	ldr	x1, [x0, #8]
   10c1c:	ldr	x0, [sp, #80]
   10c20:	lsl	x0, x0, #3
   10c24:	sub	x0, x0, #0x8
   10c28:	add	x0, x1, x0
   10c2c:	ldr	x0, [x0]
   10c30:	ldr	x0, [x0, #8]
   10c34:	add	x0, x2, x0
   10c38:	str	x0, [sp, #64]
   10c3c:	ldr	x1, [sp, #88]
   10c40:	ldr	x0, [sp, #72]
   10c44:	cmp	x1, x0
   10c48:	b.cc	10c5c <__sanitizer_get_allocated_size@@Base+0x20fc>  // b.lo, b.ul, b.last
   10c4c:	ldr	x1, [sp, #88]
   10c50:	ldr	x0, [sp, #64]
   10c54:	cmp	x1, x0
   10c58:	b.cc	10c64 <__sanitizer_get_allocated_size@@Base+0x2104>  // b.lo, b.ul, b.last
   10c5c:	mov	x0, #0x0                   	// #0
   10c60:	b	10dd8 <__sanitizer_get_allocated_size@@Base+0x2278>
   10c64:	str	xzr, [sp, #104]
   10c68:	ldr	x0, [sp, #80]
   10c6c:	sub	x0, x0, #0x1
   10c70:	str	x0, [sp, #96]
   10c74:	ldr	x1, [sp, #96]
   10c78:	ldr	x0, [sp, #104]
   10c7c:	sub	x0, x1, x0
   10c80:	cmp	x0, #0x1
   10c84:	b.ls	10ce0 <__sanitizer_get_allocated_size@@Base+0x2180>  // b.plast
   10c88:	ldr	x1, [sp, #104]
   10c8c:	ldr	x0, [sp, #96]
   10c90:	add	x0, x1, x0
   10c94:	lsr	x0, x0, #1
   10c98:	str	x0, [sp, #56]
   10c9c:	ldr	x0, [sp, #24]
   10ca0:	ldr	x1, [x0, #8]
   10ca4:	ldr	x0, [sp, #56]
   10ca8:	lsl	x0, x0, #3
   10cac:	add	x0, x1, x0
   10cb0:	ldr	x0, [x0]
   10cb4:	mov	x1, x0
   10cb8:	ldr	x0, [sp, #88]
   10cbc:	cmp	x0, x1
   10cc0:	b.cs	10cd4 <__sanitizer_get_allocated_size@@Base+0x2174>  // b.hs, b.nlast
   10cc4:	ldr	x0, [sp, #56]
   10cc8:	sub	x0, x0, #0x1
   10ccc:	str	x0, [sp, #96]
   10cd0:	b	10c74 <__sanitizer_get_allocated_size@@Base+0x2114>
   10cd4:	ldr	x0, [sp, #56]
   10cd8:	str	x0, [sp, #104]
   10cdc:	b	10c74 <__sanitizer_get_allocated_size@@Base+0x2114>
   10ce0:	ldr	x1, [sp, #104]
   10ce4:	ldr	x0, [sp, #96]
   10ce8:	cmp	x1, x0
   10cec:	b.cs	10d74 <__sanitizer_get_allocated_size@@Base+0x2214>  // b.hs, b.nlast
   10cf0:	ldr	x0, [sp, #104]
   10cf4:	add	x0, x0, #0x1
   10cf8:	str	x0, [sp, #48]
   10cfc:	ldr	x0, [sp, #96]
   10d00:	str	x0, [sp, #40]
   10d04:	ldr	x1, [sp, #48]
   10d08:	ldr	x0, [sp, #40]
   10d0c:	cmp	x1, x0
   10d10:	cset	w0, ne  // ne = any
   10d14:	and	w0, w0, #0xff
   10d18:	and	x0, x0, #0xff
   10d1c:	cmp	x0, #0x0
   10d20:	b.eq	10d44 <__sanitizer_get_allocated_size@@Base+0x21e4>  // b.none
   10d24:	ldr	x4, [sp, #40]
   10d28:	ldr	x3, [sp, #48]
   10d2c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   10d30:	add	x2, x0, #0xab0
   10d34:	mov	w1, #0xea                  	// #234
   10d38:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   10d3c:	add	x0, x0, #0x540
   10d40:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   10d44:	ldr	x0, [sp, #24]
   10d48:	ldr	x1, [x0, #8]
   10d4c:	ldr	x0, [sp, #96]
   10d50:	lsl	x0, x0, #3
   10d54:	add	x0, x1, x0
   10d58:	ldr	x0, [x0]
   10d5c:	mov	x1, x0
   10d60:	ldr	x0, [sp, #88]
   10d64:	cmp	x0, x1
   10d68:	b.cc	10d74 <__sanitizer_get_allocated_size@@Base+0x2214>  // b.lo, b.ul, b.last
   10d6c:	ldr	x0, [sp, #96]
   10d70:	str	x0, [sp, #104]
   10d74:	ldr	x0, [sp, #24]
   10d78:	ldr	x1, [x0, #8]
   10d7c:	ldr	x0, [sp, #104]
   10d80:	lsl	x0, x0, #3
   10d84:	add	x0, x1, x0
   10d88:	ldr	x0, [x0]
   10d8c:	str	x0, [sp, #32]
   10d90:	ldr	x0, [sp, #32]
   10d94:	ldr	x1, [x0]
   10d98:	ldr	x0, [sp, #32]
   10d9c:	ldr	x0, [x0, #8]
   10da0:	add	x0, x1, x0
   10da4:	ldr	x1, [sp, #88]
   10da8:	cmp	x1, x0
   10dac:	b.cs	10dc4 <__sanitizer_get_allocated_size@@Base+0x2264>  // b.hs, b.nlast
   10db0:	ldr	x0, [sp, #32]
   10db4:	ldr	x0, [x0]
   10db8:	ldr	x1, [sp, #88]
   10dbc:	cmp	x1, x0
   10dc0:	b.cs	10dcc <__sanitizer_get_allocated_size@@Base+0x226c>  // b.hs, b.nlast
   10dc4:	mov	x0, #0x0                   	// #0
   10dc8:	b	10dd8 <__sanitizer_get_allocated_size@@Base+0x2278>
   10dcc:	ldr	x1, [sp, #32]
   10dd0:	ldr	x0, [sp, #24]
   10dd4:	bl	11a14 <__sanitizer_get_allocated_size@@Base+0x2eb4>
   10dd8:	ldr	x30, [sp], #112
   10ddc:	ret
   10de0:	str	x30, [sp, #-96]!
   10de4:	str	x0, [sp, #40]
   10de8:	str	x1, [sp, #32]
   10dec:	str	x2, [sp, #24]
   10df0:	str	xzr, [sp, #88]
   10df4:	ldr	x1, [sp, #88]
   10df8:	mov	x0, #0xfffffff             	// #268435455
   10dfc:	cmp	x1, x0
   10e00:	b.hi	10ec0 <__sanitizer_get_allocated_size@@Base+0x2360>  // b.pmore
   10e04:	ldr	x0, [sp, #40]
   10e08:	ldr	x1, [sp, #88]
   10e0c:	bl	116e8 <__sanitizer_get_allocated_size@@Base+0x2b88>
   10e10:	and	w0, w0, #0xff
   10e14:	cmp	w0, #0x0
   10e18:	cset	w0, ne  // ne = any
   10e1c:	and	w0, w0, #0xff
   10e20:	cmp	w0, #0x0
   10e24:	b.eq	10eb0 <__sanitizer_get_allocated_size@@Base+0x2350>  // b.none
   10e28:	ldr	x0, [sp, #40]
   10e2c:	ldr	x1, [sp, #88]
   10e30:	bl	116e8 <__sanitizer_get_allocated_size@@Base+0x2b88>
   10e34:	and	w0, w0, #0xff
   10e38:	and	x0, x0, #0xff
   10e3c:	bl	11394 <__sanitizer_get_allocated_size@@Base+0x2834>
   10e40:	str	x0, [sp, #72]
   10e44:	ldr	x0, [sp, #72]
   10e48:	add	x0, x0, #0x10
   10e4c:	mov	x1, #0x100000              	// #1048576
   10e50:	udiv	x0, x1, x0
   10e54:	str	x0, [sp, #64]
   10e58:	ldr	x0, [sp, #88]
   10e5c:	lsl	x0, x0, #20
   10e60:	str	x0, [sp, #56]
   10e64:	ldr	x0, [sp, #56]
   10e68:	str	x0, [sp, #80]
   10e6c:	ldr	x1, [sp, #64]
   10e70:	ldr	x0, [sp, #72]
   10e74:	mul	x1, x1, x0
   10e78:	ldr	x0, [sp, #56]
   10e7c:	add	x0, x1, x0
   10e80:	ldr	x1, [sp, #80]
   10e84:	cmp	x1, x0
   10e88:	b.cs	10eb0 <__sanitizer_get_allocated_size@@Base+0x2350>  // b.hs, b.nlast
   10e8c:	ldr	x2, [sp, #32]
   10e90:	ldr	x1, [sp, #24]
   10e94:	ldr	x0, [sp, #80]
   10e98:	blr	x2
   10e9c:	ldr	x1, [sp, #80]
   10ea0:	ldr	x0, [sp, #72]
   10ea4:	add	x0, x1, x0
   10ea8:	str	x0, [sp, #80]
   10eac:	b	10e6c <__sanitizer_get_allocated_size@@Base+0x230c>
   10eb0:	ldr	x0, [sp, #88]
   10eb4:	add	x0, x0, #0x1
   10eb8:	str	x0, [sp, #88]
   10ebc:	b	10df4 <__sanitizer_get_allocated_size@@Base+0x2294>
   10ec0:	nop
   10ec4:	ldr	x30, [sp], #96
   10ec8:	ret
   10ecc:	str	x30, [sp, #-96]!
   10ed0:	str	x0, [sp, #40]
   10ed4:	str	x1, [sp, #32]
   10ed8:	str	x2, [sp, #24]
   10edc:	ldr	x0, [sp, #40]
   10ee0:	bl	11978 <__sanitizer_get_allocated_size@@Base+0x2e18>
   10ee4:	str	xzr, [sp, #88]
   10ee8:	ldr	x0, [sp, #40]
   10eec:	ldr	x0, [x0, #56]
   10ef0:	ldr	x1, [sp, #88]
   10ef4:	cmp	x1, x0
   10ef8:	b.cs	1100c <__sanitizer_get_allocated_size@@Base+0x24ac>  // b.hs, b.nlast
   10efc:	ldr	x0, [sp, #40]
   10f00:	ldr	x1, [x0, #8]
   10f04:	ldr	x0, [sp, #88]
   10f08:	lsl	x0, x0, #3
   10f0c:	add	x0, x1, x0
   10f10:	ldr	x0, [x0]
   10f14:	str	x0, [sp, #80]
   10f18:	ldr	x1, [sp, #80]
   10f1c:	ldr	x0, [sp, #40]
   10f20:	bl	11a14 <__sanitizer_get_allocated_size@@Base+0x2eb4>
   10f24:	ldr	x2, [sp, #32]
   10f28:	ldr	x1, [sp, #24]
   10f2c:	blr	x2
   10f30:	ldr	x0, [sp, #40]
   10f34:	ldr	x1, [x0, #8]
   10f38:	ldr	x0, [sp, #88]
   10f3c:	lsl	x0, x0, #3
   10f40:	add	x0, x1, x0
   10f44:	ldr	x0, [x0]
   10f48:	str	x0, [sp, #72]
   10f4c:	ldr	x0, [sp, #80]
   10f50:	str	x0, [sp, #64]
   10f54:	ldr	x1, [sp, #72]
   10f58:	ldr	x0, [sp, #64]
   10f5c:	cmp	x1, x0
   10f60:	cset	w0, ne  // ne = any
   10f64:	and	w0, w0, #0xff
   10f68:	and	x0, x0, #0xff
   10f6c:	cmp	x0, #0x0
   10f70:	b.eq	10f94 <__sanitizer_get_allocated_size@@Base+0x2434>  // b.none
   10f74:	ldr	x4, [sp, #64]
   10f78:	ldr	x3, [sp, #72]
   10f7c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   10f80:	add	x2, x0, #0xac8
   10f84:	mov	w1, #0x115                 	// #277
   10f88:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   10f8c:	add	x0, x0, #0x540
   10f90:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   10f94:	ldr	x0, [sp, #40]
   10f98:	ldr	x1, [x0, #8]
   10f9c:	ldr	x0, [sp, #88]
   10fa0:	lsl	x0, x0, #3
   10fa4:	add	x0, x1, x0
   10fa8:	ldr	x0, [x0]
   10fac:	ldr	x0, [x0, #24]
   10fb0:	str	x0, [sp, #56]
   10fb4:	ldr	x0, [sp, #88]
   10fb8:	str	x0, [sp, #48]
   10fbc:	ldr	x1, [sp, #56]
   10fc0:	ldr	x0, [sp, #48]
   10fc4:	cmp	x1, x0
   10fc8:	cset	w0, ne  // ne = any
   10fcc:	and	w0, w0, #0xff
   10fd0:	and	x0, x0, #0xff
   10fd4:	cmp	x0, #0x0
   10fd8:	b.eq	10ffc <__sanitizer_get_allocated_size@@Base+0x249c>  // b.none
   10fdc:	ldr	x4, [sp, #48]
   10fe0:	ldr	x3, [sp, #56]
   10fe4:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   10fe8:	add	x2, x0, #0xae0
   10fec:	mov	w1, #0x116                 	// #278
   10ff0:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   10ff4:	add	x0, x0, #0x540
   10ff8:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   10ffc:	ldr	x0, [sp, #88]
   11000:	add	x0, x0, #0x1
   11004:	str	x0, [sp, #88]
   11008:	b	10ee8 <__sanitizer_get_allocated_size@@Base+0x2388>
   1100c:	nop
   11010:	ldr	x30, [sp], #96
   11014:	ret
   11018:	stp	x19, x30, [sp, #-128]!
   1101c:	str	x0, [sp, #24]
   11020:	str	x1, [sp, #16]
   11024:	ldr	x0, [sp, #16]
   11028:	str	x0, [sp, #104]
   1102c:	ldr	x0, [sp, #24]
   11030:	add	x1, x0, #0x268
   11034:	add	x0, sp, #0x20
   11038:	bl	f58c <__sanitizer_get_allocated_size@@Base+0xa2c>
   1103c:	str	xzr, [sp, #120]
   11040:	str	xzr, [sp, #112]
   11044:	ldr	x0, [sp, #24]
   11048:	ldr	x0, [x0, #56]
   1104c:	ldr	x1, [sp, #112]
   11050:	cmp	x1, x0
   11054:	b.cs	110c4 <__sanitizer_get_allocated_size@@Base+0x2564>  // b.hs, b.nlast
   11058:	ldr	x0, [sp, #24]
   1105c:	ldr	x1, [x0, #8]
   11060:	ldr	x0, [sp, #112]
   11064:	lsl	x0, x0, #3
   11068:	add	x0, x1, x0
   1106c:	ldr	x0, [x0]
   11070:	str	x0, [sp, #96]
   11074:	ldr	x1, [sp, #104]
   11078:	ldr	x0, [sp, #96]
   1107c:	cmp	x1, x0
   11080:	b.cc	110b0 <__sanitizer_get_allocated_size@@Base+0x2550>  // b.lo, b.ul, b.last
   11084:	ldr	x1, [sp, #104]
   11088:	ldr	x0, [sp, #96]
   1108c:	sub	x1, x1, x0
   11090:	ldr	x2, [sp, #104]
   11094:	ldr	x0, [sp, #120]
   11098:	sub	x0, x2, x0
   1109c:	cmp	x1, x0
   110a0:	b.cs	110b4 <__sanitizer_get_allocated_size@@Base+0x2554>  // b.hs, b.nlast
   110a4:	ldr	x0, [sp, #96]
   110a8:	str	x0, [sp, #120]
   110ac:	b	110b4 <__sanitizer_get_allocated_size@@Base+0x2554>
   110b0:	nop
   110b4:	ldr	x0, [sp, #112]
   110b8:	add	x0, x0, #0x1
   110bc:	str	x0, [sp, #112]
   110c0:	b	11044 <__sanitizer_get_allocated_size@@Base+0x24e4>
   110c4:	ldr	x0, [sp, #120]
   110c8:	cmp	x0, #0x0
   110cc:	b.ne	110d8 <__sanitizer_get_allocated_size@@Base+0x2578>  // b.any
   110d0:	mov	x19, #0x0                   	// #0
   110d4:	b	1121c <__sanitizer_get_allocated_size@@Base+0x26bc>
   110d8:	ldr	x0, [sp, #120]
   110dc:	str	x0, [sp, #88]
   110e0:	ldr	x0, [sp, #120]
   110e4:	str	x0, [sp, #80]
   110e8:	ldr	x0, [sp, #88]
   110ec:	ldr	x0, [x0]
   110f0:	str	x0, [sp, #72]
   110f4:	ldr	x1, [sp, #80]
   110f8:	ldr	x0, [sp, #72]
   110fc:	cmp	x1, x0
   11100:	cset	w0, cc  // cc = lo, ul, last
   11104:	and	w0, w0, #0xff
   11108:	and	x0, x0, #0xff
   1110c:	cmp	x0, #0x0
   11110:	b.eq	11134 <__sanitizer_get_allocated_size@@Base+0x25d4>  // b.none
   11114:	ldr	x4, [sp, #72]
   11118:	ldr	x3, [sp, #80]
   1111c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   11120:	add	x2, x0, #0xb08
   11124:	mov	w1, #0xc1                  	// #193
   11128:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   1112c:	add	x0, x0, #0x540
   11130:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   11134:	ldr	x0, [sp, #120]
   11138:	str	x0, [sp, #64]
   1113c:	ldr	x0, [sp, #88]
   11140:	ldr	x1, [x0]
   11144:	ldr	x0, [sp, #88]
   11148:	ldr	x0, [x0, #8]
   1114c:	add	x0, x1, x0
   11150:	str	x0, [sp, #56]
   11154:	ldr	x1, [sp, #64]
   11158:	ldr	x0, [sp, #56]
   1115c:	cmp	x1, x0
   11160:	cset	w0, cs  // cs = hs, nlast
   11164:	and	w0, w0, #0xff
   11168:	and	x0, x0, #0xff
   1116c:	cmp	x0, #0x0
   11170:	b.eq	11194 <__sanitizer_get_allocated_size@@Base+0x2634>  // b.none
   11174:	ldr	x4, [sp, #56]
   11178:	ldr	x3, [sp, #64]
   1117c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   11180:	add	x2, x0, #0xb30
   11184:	mov	w1, #0xc2                  	// #194
   11188:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   1118c:	add	x0, x0, #0x540
   11190:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   11194:	ldr	x0, [sp, #120]
   11198:	str	x0, [sp, #48]
   1119c:	ldr	x0, [sp, #104]
   111a0:	str	x0, [sp, #40]
   111a4:	ldr	x1, [sp, #48]
   111a8:	ldr	x0, [sp, #40]
   111ac:	cmp	x1, x0
   111b0:	cset	w0, hi  // hi = pmore
   111b4:	and	w0, w0, #0xff
   111b8:	and	x0, x0, #0xff
   111bc:	cmp	x0, #0x0
   111c0:	b.eq	111e4 <__sanitizer_get_allocated_size@@Base+0x2684>  // b.none
   111c4:	ldr	x4, [sp, #40]
   111c8:	ldr	x3, [sp, #48]
   111cc:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   111d0:	add	x2, x0, #0xb68
   111d4:	mov	w1, #0xc3                  	// #195
   111d8:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   111dc:	add	x0, x0, #0x540
   111e0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   111e4:	ldr	x0, [sp, #88]
   111e8:	ldr	x1, [x0]
   111ec:	ldr	x0, [sp, #88]
   111f0:	ldr	x0, [x0, #8]
   111f4:	add	x0, x1, x0
   111f8:	ldr	x1, [sp, #104]
   111fc:	cmp	x1, x0
   11200:	b.cc	1120c <__sanitizer_get_allocated_size@@Base+0x26ac>  // b.lo, b.ul, b.last
   11204:	mov	x19, #0x0                   	// #0
   11208:	b	1121c <__sanitizer_get_allocated_size@@Base+0x26bc>
   1120c:	ldr	x1, [sp, #88]
   11210:	ldr	x0, [sp, #24]
   11214:	bl	11a14 <__sanitizer_get_allocated_size@@Base+0x2eb4>
   11218:	mov	x19, x0
   1121c:	add	x0, sp, #0x20
   11220:	bl	f5bc <__sanitizer_get_allocated_size@@Base+0xa5c>
   11224:	mov	x0, x19
   11228:	ldp	x19, x30, [sp], #128
   1122c:	ret
   11230:	str	x30, [sp, #-32]!
   11234:	str	x0, [sp, #24]
   11238:	ldr	x0, [sp, #24]
   1123c:	mov	x2, #0x80000               	// #524288
   11240:	mov	w1, #0x0                   	// #0
   11244:	bl	21754 <__sanitizer_set_report_fd@@Base+0x255c>
   11248:	ldr	x0, [sp, #24]
   1124c:	add	x0, x0, #0x80, lsl #12
   11250:	bl	eb8c <__sanitizer_get_allocated_size@@Base+0x2c>
   11254:	nop
   11258:	ldr	x30, [sp], #32
   1125c:	ret
   11260:	str	x30, [sp, #-80]!
   11264:	str	x0, [sp, #40]
   11268:	str	x1, [sp, #32]
   1126c:	str	x2, [sp, #24]
   11270:	str	x3, [sp, #16]
   11274:	ldr	x0, [sp, #32]
   11278:	ldr	x0, [x0, #8]
   1127c:	lsr	x2, x0, #1
   11280:	ldr	x0, [sp, #32]
   11284:	ldr	x0, [x0]
   11288:	mov	x1, x0
   1128c:	mov	x0, x2
   11290:	bl	aeac <__lsan_do_recoverable_leak_check@@Base+0xd20>
   11294:	str	x0, [sp, #72]
   11298:	ldr	x0, [sp, #32]
   1129c:	ldr	x1, [x0]
   112a0:	ldr	x0, [sp, #72]
   112a4:	sub	x0, x1, x0
   112a8:	str	x0, [sp, #64]
   112ac:	ldr	x0, [sp, #32]
   112b0:	ldr	x1, [sp, #64]
   112b4:	add	x1, x1, #0x4
   112b8:	ldr	x0, [x0, x1, lsl #3]
   112bc:	mov	x3, x0
   112c0:	ldr	x2, [sp, #24]
   112c4:	ldr	x1, [sp, #16]
   112c8:	ldr	x0, [sp, #40]
   112cc:	bl	11aa0 <__sanitizer_get_allocated_size@@Base+0x2f40>
   112d0:	str	x0, [sp, #56]
   112d4:	ldr	x0, [sp, #56]
   112d8:	cmp	x0, #0x0
   112dc:	cset	w0, eq  // eq = none
   112e0:	and	w0, w0, #0xff
   112e4:	and	x0, x0, #0xff
   112e8:	cmp	x0, #0x0
   112ec:	b.eq	11310 <__sanitizer_get_allocated_size@@Base+0x27b0>  // b.none
   112f0:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   112f4:	ldr	x0, [x0, #4008]
   112f8:	ldr	x0, [x0]
   112fc:	mov	x1, x0
   11300:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   11304:	add	x0, x0, #0xb88
   11308:	bl	2a3fc <OnPrint@@Base+0x454>
   1130c:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   11310:	ldr	x0, [sp, #64]
   11314:	add	x0, x0, #0x4
   11318:	lsl	x0, x0, #3
   1131c:	ldr	x1, [sp, #32]
   11320:	add	x0, x1, x0
   11324:	ldr	x2, [sp, #72]
   11328:	mov	x1, x0
   1132c:	ldr	x0, [sp, #56]
   11330:	bl	11af8 <__sanitizer_get_allocated_size@@Base+0x2f98>
   11334:	ldr	x0, [sp, #32]
   11338:	ldr	x1, [x0]
   1133c:	ldr	x0, [sp, #72]
   11340:	sub	x1, x1, x0
   11344:	ldr	x0, [sp, #32]
   11348:	str	x1, [x0]
   1134c:	ldr	x1, [sp, #40]
   11350:	mov	x0, #0xd800                	// #55296
   11354:	add	x0, x1, x0
   11358:	ldr	x3, [sp, #56]
   1135c:	ldr	x2, [sp, #16]
   11360:	mov	x1, x0
   11364:	ldr	x0, [sp, #24]
   11368:	bl	11b68 <__sanitizer_get_allocated_size@@Base+0x3008>
   1136c:	nop
   11370:	ldr	x30, [sp], #80
   11374:	ret
   11378:	sub	sp, sp, #0x10
   1137c:	str	x0, [sp, #8]
   11380:	str	x1, [sp]
   11384:	ldr	x0, [sp]
   11388:	and	x0, x0, #0xfffffffffff00000
   1138c:	add	sp, sp, #0x10
   11390:	ret
   11394:	str	x30, [sp, #-32]!
   11398:	str	x0, [sp, #24]
   1139c:	ldr	x0, [sp, #24]
   113a0:	cmp	x0, #0x35
   113a4:	b.eq	113b4 <__sanitizer_get_allocated_size@@Base+0x2854>  // b.none
   113a8:	ldr	x0, [sp, #24]
   113ac:	bl	11c0c <__sanitizer_get_allocated_size@@Base+0x30ac>
   113b0:	b	113b8 <__sanitizer_get_allocated_size@@Base+0x2858>
   113b4:	mov	x0, #0x200                 	// #512
   113b8:	ldr	x30, [sp], #32
   113bc:	ret
   113c0:	str	x30, [sp, #-32]!
   113c4:	str	x0, [sp, #24]
   113c8:	str	x1, [sp, #16]
   113cc:	ldr	x0, [sp, #16]
   113d0:	mov	x1, x0
   113d4:	ldr	x0, [sp, #24]
   113d8:	bl	115ec <__sanitizer_get_allocated_size@@Base+0x2a8c>
   113dc:	ldr	x30, [sp], #32
   113e0:	ret
   113e4:	str	x30, [sp, #-64]!
   113e8:	str	x0, [sp, #24]
   113ec:	ldr	x0, [sp, #24]
   113f0:	cmp	x0, #0x20, lsl #12
   113f4:	cset	w0, hi  // hi = pmore
   113f8:	and	w0, w0, #0xff
   113fc:	and	x0, x0, #0xff
   11400:	cmp	x0, #0x0
   11404:	b.eq	11410 <__sanitizer_get_allocated_size@@Base+0x28b0>  // b.none
   11408:	mov	x0, #0x0                   	// #0
   1140c:	b	114ac <__sanitizer_get_allocated_size@@Base+0x294c>
   11410:	ldr	x0, [sp, #24]
   11414:	cmp	x0, #0x100
   11418:	b.hi	1142c <__sanitizer_get_allocated_size@@Base+0x28cc>  // b.pmore
   1141c:	ldr	x0, [sp, #24]
   11420:	add	x0, x0, #0xf
   11424:	lsr	x0, x0, #4
   11428:	b	114ac <__sanitizer_get_allocated_size@@Base+0x294c>
   1142c:	ldr	x0, [sp, #24]
   11430:	bl	a324 <__lsan_do_recoverable_leak_check@@Base+0x198>
   11434:	str	x0, [sp, #56]
   11438:	ldr	x0, [sp, #56]
   1143c:	sub	w0, w0, #0x2
   11440:	ldr	x1, [sp, #24]
   11444:	lsr	x0, x1, x0
   11448:	and	x0, x0, #0x3
   1144c:	str	x0, [sp, #48]
   11450:	ldr	x0, [sp, #56]
   11454:	sub	w0, w0, #0x2
   11458:	mov	w1, #0x1                   	// #1
   1145c:	lsl	w0, w1, w0
   11460:	sub	w0, w0, #0x1
   11464:	mov	w0, w0
   11468:	ldr	x1, [sp, #24]
   1146c:	and	x0, x1, x0
   11470:	str	x0, [sp, #40]
   11474:	ldr	x0, [sp, #56]
   11478:	sub	x0, x0, #0x8
   1147c:	str	x0, [sp, #32]
   11480:	ldr	x0, [sp, #32]
   11484:	lsl	x1, x0, #2
   11488:	ldr	x0, [sp, #48]
   1148c:	add	x1, x1, x0
   11490:	ldr	x0, [sp, #40]
   11494:	cmp	x0, #0x0
   11498:	cset	w0, ne  // ne = any
   1149c:	and	w0, w0, #0xff
   114a0:	and	x0, x0, #0xff
   114a4:	add	x0, x1, x0
   114a8:	add	x0, x0, #0x10
   114ac:	ldr	x30, [sp], #64
   114b0:	ret
   114b4:	str	x30, [sp, #-80]!
   114b8:	str	x0, [sp, #40]
   114bc:	str	x1, [sp, #32]
   114c0:	str	x2, [sp, #24]
   114c4:	str	x3, [sp, #16]
   114c8:	ldr	x1, [sp, #32]
   114cc:	ldr	x0, [sp, #40]
   114d0:	bl	1178c <__sanitizer_get_allocated_size@@Base+0x2c2c>
   114d4:	ldr	x1, [sp, #40]
   114d8:	mov	x0, #0xd800                	// #55296
   114dc:	add	x0, x1, x0
   114e0:	ldr	x3, [sp, #16]
   114e4:	ldr	x2, [sp, #40]
   114e8:	mov	x1, x0
   114ec:	ldr	x0, [sp, #24]
   114f0:	bl	11c98 <__sanitizer_get_allocated_size@@Base+0x3138>
   114f4:	str	x0, [sp, #72]
   114f8:	ldr	x0, [sp, #72]
   114fc:	cmp	x0, #0x0
   11500:	cset	w0, eq  // eq = none
   11504:	and	w0, w0, #0xff
   11508:	and	x0, x0, #0xff
   1150c:	cmp	x0, #0x0
   11510:	b.eq	1151c <__sanitizer_get_allocated_size@@Base+0x29bc>  // b.none
   11514:	mov	w0, #0x0                   	// #0
   11518:	b	115ac <__sanitizer_get_allocated_size@@Base+0x2a4c>
   1151c:	ldr	x0, [sp, #72]
   11520:	bl	11d58 <__sanitizer_get_allocated_size@@Base+0x31f8>
   11524:	str	x0, [sp, #64]
   11528:	str	xzr, [sp, #56]
   1152c:	ldr	x1, [sp, #64]
   11530:	ldr	x0, [sp, #56]
   11534:	cmp	x1, x0
   11538:	cset	w0, ls  // ls = plast
   1153c:	and	w0, w0, #0xff
   11540:	and	x0, x0, #0xff
   11544:	cmp	x0, #0x0
   11548:	b.eq	1156c <__sanitizer_get_allocated_size@@Base+0x2a0c>  // b.none
   1154c:	ldr	x4, [sp, #56]
   11550:	ldr	x3, [sp, #64]
   11554:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   11558:	add	x2, x0, #0xbd8
   1155c:	mov	w1, #0xf6                  	// #246
   11560:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   11564:	add	x0, x0, #0x868
   11568:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1156c:	ldr	x0, [sp, #32]
   11570:	add	x0, x0, #0x20
   11574:	mov	x1, x0
   11578:	ldr	x0, [sp, #72]
   1157c:	bl	11d70 <__sanitizer_get_allocated_size@@Base+0x3210>
   11580:	ldr	x0, [sp, #72]
   11584:	bl	11d58 <__sanitizer_get_allocated_size@@Base+0x31f8>
   11588:	mov	x1, x0
   1158c:	ldr	x0, [sp, #32]
   11590:	str	x1, [x0]
   11594:	ldr	x3, [sp, #72]
   11598:	ldr	x2, [sp, #24]
   1159c:	ldr	x1, [sp, #16]
   115a0:	ldr	x0, [sp, #40]
   115a4:	bl	11ddc <__sanitizer_get_allocated_size@@Base+0x327c>
   115a8:	mov	w0, #0x1                   	// #1
   115ac:	ldr	x30, [sp], #80
   115b0:	ret
   115b4:	str	x30, [sp, #-32]!
   115b8:	str	x0, [sp, #24]
   115bc:	str	x1, [sp, #16]
   115c0:	ldr	x0, [sp, #24]
   115c4:	ldr	x0, [x0]
   115c8:	mov	x1, x0
   115cc:	ldr	x0, [sp, #16]
   115d0:	bl	a518 <__lsan_do_recoverable_leak_check@@Base+0x38c>
   115d4:	mov	x1, x0
   115d8:	ldr	x0, [sp, #24]
   115dc:	ldr	x0, [x0]
   115e0:	add	x0, x1, x0
   115e4:	ldr	x30, [sp], #32
   115e8:	ret
   115ec:	str	x30, [sp, #-48]!
   115f0:	str	x0, [sp, #24]
   115f4:	str	x1, [sp, #16]
   115f8:	ldr	x0, [sp, #24]
   115fc:	ldr	x0, [x0]
   11600:	mov	x1, x0
   11604:	ldr	x0, [sp, #16]
   11608:	bl	ed50 <__sanitizer_get_allocated_size@@Base+0x1f0>
   1160c:	and	w0, w0, #0xff
   11610:	and	x0, x0, #0xff
   11614:	str	x0, [sp, #40]
   11618:	str	xzr, [sp, #32]
   1161c:	ldr	x1, [sp, #40]
   11620:	ldr	x0, [sp, #32]
   11624:	cmp	x1, x0
   11628:	cset	w0, eq  // eq = none
   1162c:	and	w0, w0, #0xff
   11630:	and	x0, x0, #0xff
   11634:	cmp	x0, #0x0
   11638:	b.eq	1165c <__sanitizer_get_allocated_size@@Base+0x2afc>  // b.none
   1163c:	ldr	x4, [sp, #32]
   11640:	ldr	x3, [sp, #40]
   11644:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   11648:	add	x2, x0, #0xbf0
   1164c:	mov	w1, #0x123                 	// #291
   11650:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   11654:	add	x0, x0, #0x540
   11658:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1165c:	ldr	x0, [sp, #24]
   11660:	ldr	x0, [x0]
   11664:	ldr	x1, [sp, #16]
   11668:	sub	x0, x1, x0
   1166c:	ldr	x30, [sp], #48
   11670:	ret
   11674:	str	x30, [sp, #-64]!
   11678:	str	x0, [sp, #24]
   1167c:	str	x1, [sp, #16]
   11680:	ldr	x0, [sp, #16]
   11684:	lsr	x0, x0, #20
   11688:	str	x0, [sp, #56]
   1168c:	ldr	x0, [sp, #56]
   11690:	str	x0, [sp, #48]
   11694:	mov	x0, #0x10000000            	// #268435456
   11698:	str	x0, [sp, #40]
   1169c:	ldr	x1, [sp, #48]
   116a0:	ldr	x0, [sp, #40]
   116a4:	cmp	x1, x0
   116a8:	cset	w0, cs  // cs = hs, nlast
   116ac:	and	w0, w0, #0xff
   116b0:	and	x0, x0, #0xff
   116b4:	cmp	x0, #0x0
   116b8:	b.eq	116dc <__sanitizer_get_allocated_size@@Base+0x2b7c>  // b.none
   116bc:	ldr	x4, [sp, #40]
   116c0:	ldr	x3, [sp, #48]
   116c4:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   116c8:	add	x2, x0, #0xc18
   116cc:	mov	w1, #0x116                 	// #278
   116d0:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   116d4:	add	x0, x0, #0x7a8
   116d8:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   116dc:	ldr	x0, [sp, #56]
   116e0:	ldr	x30, [sp], #64
   116e4:	ret
   116e8:	str	x30, [sp, #-64]!
   116ec:	str	x0, [sp, #24]
   116f0:	str	x1, [sp, #16]
   116f4:	ldr	x0, [sp, #16]
   116f8:	str	x0, [sp, #56]
   116fc:	mov	x0, #0x10000000            	// #268435456
   11700:	str	x0, [sp, #48]
   11704:	ldr	x1, [sp, #56]
   11708:	ldr	x0, [sp, #48]
   1170c:	cmp	x1, x0
   11710:	cset	w0, cs  // cs = hs, nlast
   11714:	and	w0, w0, #0xff
   11718:	and	x0, x0, #0xff
   1171c:	cmp	x0, #0x0
   11720:	b.eq	11744 <__sanitizer_get_allocated_size@@Base+0x2be4>  // b.none
   11724:	ldr	x4, [sp, #48]
   11728:	ldr	x3, [sp, #56]
   1172c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   11730:	add	x2, x0, #0xc40
   11734:	mov	w1, #0x47                  	// #71
   11738:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   1173c:	add	x0, x0, #0xc60
   11740:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   11744:	ldr	x0, [sp, #16]
   11748:	lsr	x0, x0, #12
   1174c:	mov	x1, x0
   11750:	ldr	x0, [sp, #24]
   11754:	bl	11e34 <__sanitizer_get_allocated_size@@Base+0x32d4>
   11758:	str	x0, [sp, #40]
   1175c:	ldr	x0, [sp, #40]
   11760:	cmp	x0, #0x0
   11764:	b.ne	11770 <__sanitizer_get_allocated_size@@Base+0x2c10>  // b.any
   11768:	mov	w0, #0x0                   	// #0
   1176c:	b	11784 <__sanitizer_get_allocated_size@@Base+0x2c24>
   11770:	ldr	x0, [sp, #16]
   11774:	and	x0, x0, #0xfff
   11778:	ldr	x1, [sp, #40]
   1177c:	add	x0, x1, x0
   11780:	ldrb	w0, [x0]
   11784:	ldr	x30, [sp], #64
   11788:	ret
   1178c:	str	x30, [sp, #-80]!
   11790:	str	x0, [sp, #24]
   11794:	str	x1, [sp, #16]
   11798:	ldr	x0, [sp, #16]
   1179c:	ldr	x0, [x0, #8]
   117a0:	cmp	x0, #0x0
   117a4:	cset	w0, ne  // ne = any
   117a8:	and	w0, w0, #0xff
   117ac:	and	x0, x0, #0xff
   117b0:	cmp	x0, #0x0
   117b4:	b.ne	1185c <__sanitizer_get_allocated_size@@Base+0x2cfc>  // b.any
   117b8:	mov	x0, #0x200                 	// #512
   117bc:	bl	113e4 <__sanitizer_get_allocated_size@@Base+0x2884>
   117c0:	str	x0, [sp, #64]
   117c4:	mov	x0, #0x1                   	// #1
   117c8:	str	x0, [sp, #72]
   117cc:	ldr	x0, [sp, #72]
   117d0:	cmp	x0, #0x35
   117d4:	b.hi	11860 <__sanitizer_get_allocated_size@@Base+0x2d00>  // b.pmore
   117d8:	ldr	x0, [sp, #72]
   117dc:	lsl	x0, x0, #10
   117e0:	ldr	x1, [sp, #24]
   117e4:	add	x0, x1, x0
   117e8:	str	x0, [sp, #56]
   117ec:	ldr	x0, [sp, #72]
   117f0:	bl	11394 <__sanitizer_get_allocated_size@@Base+0x2834>
   117f4:	str	x0, [sp, #48]
   117f8:	ldr	x0, [sp, #48]
   117fc:	bl	11eb0 <__sanitizer_get_allocated_size@@Base+0x3350>
   11800:	str	x0, [sp, #40]
   11804:	ldr	x0, [sp, #40]
   11808:	lsl	x1, x0, #1
   1180c:	ldr	x0, [sp, #56]
   11810:	str	x1, [x0, #8]
   11814:	ldr	x0, [sp, #56]
   11818:	ldr	x1, [sp, #48]
   1181c:	str	x1, [x0, #16]
   11820:	ldr	x0, [sp, #40]
   11824:	bl	11ed4 <__sanitizer_get_allocated_size@@Base+0x3374>
   11828:	mov	x1, x0
   1182c:	ldr	x0, [sp, #48]
   11830:	cmp	x0, x1
   11834:	b.cs	11840 <__sanitizer_get_allocated_size@@Base+0x2ce0>  // b.hs, b.nlast
   11838:	ldr	x0, [sp, #64]
   1183c:	b	11844 <__sanitizer_get_allocated_size@@Base+0x2ce4>
   11840:	mov	x0, #0x0                   	// #0
   11844:	ldr	x1, [sp, #56]
   11848:	str	x0, [x1, #24]
   1184c:	ldr	x0, [sp, #72]
   11850:	add	x0, x0, #0x1
   11854:	str	x0, [sp, #72]
   11858:	b	117cc <__sanitizer_get_allocated_size@@Base+0x2c6c>
   1185c:	nop
   11860:	ldr	x30, [sp], #80
   11864:	ret
   11868:	str	x30, [sp, #-32]!
   1186c:	str	x0, [sp, #24]
   11870:	str	x1, [sp, #16]
   11874:	ldr	x1, [sp, #16]
   11878:	ldr	x0, [sp, #24]
   1187c:	bl	11018 <__sanitizer_get_allocated_size@@Base+0x24b8>
   11880:	cmp	x0, #0x0
   11884:	cset	w0, ne  // ne = any
   11888:	and	w0, w0, #0xff
   1188c:	ldr	x30, [sp], #32
   11890:	ret
   11894:	str	x30, [sp, #-48]!
   11898:	str	x0, [sp, #24]
   1189c:	str	x1, [sp, #16]
   118a0:	ldr	x1, [sp, #16]
   118a4:	ldr	x0, [sp, #24]
   118a8:	bl	fc8c <__sanitizer_get_allocated_size@@Base+0x112c>
   118ac:	and	w0, w0, #0xff
   118b0:	and	x0, x0, #0xff
   118b4:	str	x0, [sp, #40]
   118b8:	str	xzr, [sp, #32]
   118bc:	ldr	x1, [sp, #40]
   118c0:	ldr	x0, [sp, #32]
   118c4:	cmp	x1, x0
   118c8:	cset	w0, eq  // eq = none
   118cc:	and	w0, w0, #0xff
   118d0:	and	x0, x0, #0xff
   118d4:	cmp	x0, #0x0
   118d8:	b.eq	118fc <__sanitizer_get_allocated_size@@Base+0x2d9c>  // b.none
   118dc:	ldr	x4, [sp, #32]
   118e0:	ldr	x3, [sp, #40]
   118e4:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   118e8:	add	x2, x0, #0x788
   118ec:	mov	w1, #0xcc                  	// #204
   118f0:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   118f4:	add	x0, x0, #0x7a8
   118f8:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   118fc:	ldr	x1, [sp, #16]
   11900:	ldr	x0, [sp, #24]
   11904:	bl	10594 <__sanitizer_get_allocated_size@@Base+0x1a34>
   11908:	bl	11394 <__sanitizer_get_allocated_size@@Base+0x2834>
   1190c:	ldr	x30, [sp], #48
   11910:	ret
   11914:	str	x30, [sp, #-32]!
   11918:	str	x0, [sp, #24]
   1191c:	str	x1, [sp, #16]
   11920:	ldr	x1, [sp, #16]
   11924:	ldr	x0, [sp, #24]
   11928:	bl	113c0 <__sanitizer_get_allocated_size@@Base+0x2860>
   1192c:	ldr	x2, [x0, #16]
   11930:	ldr	x0, [sp, #24]
   11934:	ldr	x0, [x0]
   11938:	mov	x1, x0
   1193c:	mov	x0, x2
   11940:	bl	a518 <__lsan_do_recoverable_leak_check@@Base+0x38c>
   11944:	ldr	x30, [sp], #32
   11948:	ret
   1194c:	sub	sp, sp, #0x10
   11950:	str	x0, [sp, #8]
   11954:	str	x1, [sp]
   11958:	ldr	x1, [sp]
   1195c:	mov	x0, #0x2001                	// #8193
   11960:	add	x0, x1, x0
   11964:	lsl	x0, x0, #6
   11968:	ldr	x1, [sp, #8]
   1196c:	add	x0, x1, x0
   11970:	add	sp, sp, #0x10
   11974:	ret
   11978:	str	x30, [sp, #-48]!
   1197c:	str	x0, [sp, #24]
   11980:	ldr	x0, [sp, #24]
   11984:	ldrb	w0, [x0, #64]
   11988:	cmp	w0, #0x0
   1198c:	b.ne	11a08 <__sanitizer_get_allocated_size@@Base+0x2ea8>  // b.any
   11990:	ldr	x0, [sp, #24]
   11994:	ldr	x3, [x0, #8]
   11998:	ldr	x0, [sp, #24]
   1199c:	ldr	x0, [x0, #56]
   119a0:	mov	w2, w1
   119a4:	mov	x1, x0
   119a8:	mov	x0, x3
   119ac:	bl	11ef0 <__sanitizer_get_allocated_size@@Base+0x3390>
   119b0:	str	xzr, [sp, #40]
   119b4:	ldr	x0, [sp, #24]
   119b8:	ldr	x0, [x0, #56]
   119bc:	ldr	x1, [sp, #40]
   119c0:	cmp	x1, x0
   119c4:	b.cs	119f8 <__sanitizer_get_allocated_size@@Base+0x2e98>  // b.hs, b.nlast
   119c8:	ldr	x0, [sp, #24]
   119cc:	ldr	x1, [x0, #8]
   119d0:	ldr	x0, [sp, #40]
   119d4:	lsl	x0, x0, #3
   119d8:	add	x0, x1, x0
   119dc:	ldr	x0, [x0]
   119e0:	ldr	x1, [sp, #40]
   119e4:	str	x1, [x0, #24]
   119e8:	ldr	x0, [sp, #40]
   119ec:	add	x0, x0, #0x1
   119f0:	str	x0, [sp, #40]
   119f4:	b	119b4 <__sanitizer_get_allocated_size@@Base+0x2e54>
   119f8:	ldr	x0, [sp, #24]
   119fc:	mov	w1, #0x1                   	// #1
   11a00:	strb	w1, [x0, #64]
   11a04:	b	11a0c <__sanitizer_get_allocated_size@@Base+0x2eac>
   11a08:	nop
   11a0c:	ldr	x30, [sp], #48
   11a10:	ret
   11a14:	str	x30, [sp, #-48]!
   11a18:	str	x0, [sp, #24]
   11a1c:	str	x1, [sp, #16]
   11a20:	ldr	x2, [sp, #16]
   11a24:	ldr	x0, [sp, #24]
   11a28:	ldr	x0, [x0]
   11a2c:	mov	x1, x0
   11a30:	mov	x0, x2
   11a34:	bl	ed50 <__sanitizer_get_allocated_size@@Base+0x1f0>
   11a38:	and	w0, w0, #0xff
   11a3c:	and	x0, x0, #0xff
   11a40:	str	x0, [sp, #40]
   11a44:	str	xzr, [sp, #32]
   11a48:	ldr	x1, [sp, #40]
   11a4c:	ldr	x0, [sp, #32]
   11a50:	cmp	x1, x0
   11a54:	cset	w0, eq  // eq = none
   11a58:	and	w0, w0, #0xff
   11a5c:	and	x0, x0, #0xff
   11a60:	cmp	x0, #0x0
   11a64:	b.eq	11a88 <__sanitizer_get_allocated_size@@Base+0x2f28>  // b.none
   11a68:	ldr	x4, [sp, #32]
   11a6c:	ldr	x3, [sp, #40]
   11a70:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   11a74:	add	x2, x0, #0xca8
   11a78:	mov	w1, #0x12b                 	// #299
   11a7c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   11a80:	add	x0, x0, #0x540
   11a84:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   11a88:	ldr	x0, [sp, #24]
   11a8c:	ldr	x1, [x0]
   11a90:	ldr	x0, [sp, #16]
   11a94:	add	x0, x1, x0
   11a98:	ldr	x30, [sp], #48
   11a9c:	ret
   11aa0:	str	x30, [sp, #-64]!
   11aa4:	str	x0, [sp, #40]
   11aa8:	str	x1, [sp, #32]
   11aac:	str	x2, [sp, #24]
   11ab0:	str	x3, [sp, #16]
   11ab4:	ldr	x1, [sp, #40]
   11ab8:	ldr	x0, [sp, #32]
   11abc:	lsl	x0, x0, #10
   11ac0:	add	x0, x1, x0
   11ac4:	ldr	x0, [x0, #24]
   11ac8:	str	x0, [sp, #56]
   11acc:	ldr	x0, [sp, #56]
   11ad0:	cmp	x0, #0x0
   11ad4:	b.eq	11aec <__sanitizer_get_allocated_size@@Base+0x2f8c>  // b.none
   11ad8:	ldr	x2, [sp, #56]
   11adc:	ldr	x1, [sp, #24]
   11ae0:	ldr	x0, [sp, #40]
   11ae4:	bl	feec <__sanitizer_get_allocated_size@@Base+0x138c>
   11ae8:	b	11af0 <__sanitizer_get_allocated_size@@Base+0x2f90>
   11aec:	ldr	x0, [sp, #16]
   11af0:	ldr	x30, [sp], #64
   11af4:	ret
   11af8:	sub	sp, sp, #0x30
   11afc:	str	x0, [sp, #24]
   11b00:	str	x1, [sp, #16]
   11b04:	str	x2, [sp, #8]
   11b08:	ldr	x0, [sp, #24]
   11b0c:	ldr	x1, [sp, #8]
   11b10:	str	x1, [x0, #8]
   11b14:	str	xzr, [sp, #40]
   11b18:	ldr	x1, [sp, #40]
   11b1c:	ldr	x0, [sp, #8]
   11b20:	cmp	x1, x0
   11b24:	b.cs	11b5c <__sanitizer_get_allocated_size@@Base+0x2ffc>  // b.hs, b.nlast
   11b28:	ldr	x0, [sp, #40]
   11b2c:	lsl	x0, x0, #3
   11b30:	ldr	x1, [sp, #16]
   11b34:	add	x0, x1, x0
   11b38:	ldr	x2, [x0]
   11b3c:	ldr	x0, [sp, #24]
   11b40:	ldr	x1, [sp, #40]
   11b44:	add	x1, x1, #0x2
   11b48:	str	x2, [x0, x1, lsl #3]
   11b4c:	ldr	x0, [sp, #40]
   11b50:	add	x0, x0, #0x1
   11b54:	str	x0, [sp, #40]
   11b58:	b	11b18 <__sanitizer_get_allocated_size@@Base+0x2fb8>
   11b5c:	nop
   11b60:	add	sp, sp, #0x30
   11b64:	ret
   11b68:	str	x30, [sp, #-80]!
   11b6c:	str	x0, [sp, #40]
   11b70:	str	x1, [sp, #32]
   11b74:	str	x2, [sp, #24]
   11b78:	str	x3, [sp, #16]
   11b7c:	ldr	x0, [sp, #16]
   11b80:	bl	11d58 <__sanitizer_get_allocated_size@@Base+0x31f8>
   11b84:	str	x0, [sp, #72]
   11b88:	str	xzr, [sp, #64]
   11b8c:	ldr	x1, [sp, #72]
   11b90:	ldr	x0, [sp, #64]
   11b94:	cmp	x1, x0
   11b98:	cset	w0, ls  // ls = plast
   11b9c:	and	w0, w0, #0xff
   11ba0:	and	x0, x0, #0xff
   11ba4:	cmp	x0, #0x0
   11ba8:	b.eq	11bcc <__sanitizer_get_allocated_size@@Base+0x306c>  // b.none
   11bac:	ldr	x4, [sp, #64]
   11bb0:	ldr	x3, [sp, #72]
   11bb4:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   11bb8:	add	x2, x0, #0xbd8
   11bbc:	mov	w1, #0xad                  	// #173
   11bc0:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   11bc4:	add	x0, x0, #0x7a8
   11bc8:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   11bcc:	ldr	x1, [sp, #24]
   11bd0:	ldr	x0, [sp, #40]
   11bd4:	bl	1194c <__sanitizer_get_allocated_size@@Base+0x2dec>
   11bd8:	str	x0, [sp, #56]
   11bdc:	ldr	x1, [sp, #56]
   11be0:	add	x0, sp, #0x30
   11be4:	bl	f58c <__sanitizer_get_allocated_size@@Base+0xa2c>
   11be8:	ldr	x0, [sp, #56]
   11bec:	add	x0, x0, #0x8
   11bf0:	ldr	x1, [sp, #16]
   11bf4:	bl	12178 <__sanitizer_get_allocated_size@@Base+0x3618>
   11bf8:	add	x0, sp, #0x30
   11bfc:	bl	f5bc <__sanitizer_get_allocated_size@@Base+0xa5c>
   11c00:	nop
   11c04:	ldr	x30, [sp], #80
   11c08:	ret
   11c0c:	sub	sp, sp, #0x20
   11c10:	str	x0, [sp, #8]
   11c14:	ldr	x0, [sp, #8]
   11c18:	cmp	x0, #0x35
   11c1c:	cset	w0, eq  // eq = none
   11c20:	and	w0, w0, #0xff
   11c24:	and	x0, x0, #0xff
   11c28:	cmp	x0, #0x0
   11c2c:	b.eq	11c38 <__sanitizer_get_allocated_size@@Base+0x30d8>  // b.none
   11c30:	mov	x0, #0x200                 	// #512
   11c34:	b	11c90 <__sanitizer_get_allocated_size@@Base+0x3130>
   11c38:	ldr	x0, [sp, #8]
   11c3c:	cmp	x0, #0x10
   11c40:	b.hi	11c50 <__sanitizer_get_allocated_size@@Base+0x30f0>  // b.pmore
   11c44:	ldr	x0, [sp, #8]
   11c48:	lsl	x0, x0, #4
   11c4c:	b	11c90 <__sanitizer_get_allocated_size@@Base+0x3130>
   11c50:	ldr	x0, [sp, #8]
   11c54:	sub	x0, x0, #0x10
   11c58:	str	x0, [sp, #8]
   11c5c:	ldr	x0, [sp, #8]
   11c60:	lsr	x0, x0, #2
   11c64:	mov	w1, w0
   11c68:	mov	x0, #0x100                 	// #256
   11c6c:	lsl	x0, x0, x1
   11c70:	str	x0, [sp, #24]
   11c74:	ldr	x0, [sp, #24]
   11c78:	lsr	x1, x0, #2
   11c7c:	ldr	x0, [sp, #8]
   11c80:	and	x0, x0, #0x3
   11c84:	mul	x1, x1, x0
   11c88:	ldr	x0, [sp, #24]
   11c8c:	add	x0, x1, x0
   11c90:	add	sp, sp, #0x20
   11c94:	ret
   11c98:	stp	x19, x30, [sp, #-80]!
   11c9c:	str	x0, [sp, #40]
   11ca0:	str	x1, [sp, #32]
   11ca4:	str	x2, [sp, #24]
   11ca8:	str	x3, [sp, #16]
   11cac:	ldr	x1, [sp, #16]
   11cb0:	ldr	x0, [sp, #40]
   11cb4:	bl	1194c <__sanitizer_get_allocated_size@@Base+0x2dec>
   11cb8:	str	x0, [sp, #72]
   11cbc:	ldr	x1, [sp, #72]
   11cc0:	add	x0, sp, #0x38
   11cc4:	bl	f58c <__sanitizer_get_allocated_size@@Base+0xa2c>
   11cc8:	ldr	x0, [sp, #72]
   11ccc:	add	x0, x0, #0x8
   11cd0:	bl	12208 <__sanitizer_get_allocated_size@@Base+0x36a8>
   11cd4:	and	w0, w0, #0xff
   11cd8:	cmp	w0, #0x0
   11cdc:	b.eq	11d24 <__sanitizer_get_allocated_size@@Base+0x31c4>  // b.none
   11ce0:	ldr	x4, [sp, #16]
   11ce4:	ldr	x3, [sp, #72]
   11ce8:	ldr	x2, [sp, #24]
   11cec:	ldr	x1, [sp, #32]
   11cf0:	ldr	x0, [sp, #40]
   11cf4:	bl	1222c <__sanitizer_get_allocated_size@@Base+0x36cc>
   11cf8:	and	w0, w0, #0xff
   11cfc:	eor	w0, w0, #0x1
   11d00:	and	w0, w0, #0xff
   11d04:	and	x0, x0, #0xff
   11d08:	cmp	x0, #0x0
   11d0c:	cset	w0, ne  // ne = any
   11d10:	and	w0, w0, #0xff
   11d14:	cmp	w0, #0x0
   11d18:	b.eq	11d24 <__sanitizer_get_allocated_size@@Base+0x31c4>  // b.none
   11d1c:	mov	x19, #0x0                   	// #0
   11d20:	b	11d44 <__sanitizer_get_allocated_size@@Base+0x31e4>
   11d24:	ldr	x0, [sp, #72]
   11d28:	add	x0, x0, #0x8
   11d2c:	bl	1245c <__sanitizer_get_allocated_size@@Base+0x38fc>
   11d30:	str	x0, [sp, #64]
   11d34:	ldr	x0, [sp, #72]
   11d38:	add	x0, x0, #0x8
   11d3c:	bl	12474 <__sanitizer_get_allocated_size@@Base+0x3914>
   11d40:	ldr	x19, [sp, #64]
   11d44:	add	x0, sp, #0x38
   11d48:	bl	f5bc <__sanitizer_get_allocated_size@@Base+0xa5c>
   11d4c:	mov	x0, x19
   11d50:	ldp	x19, x30, [sp], #80
   11d54:	ret
   11d58:	sub	sp, sp, #0x10
   11d5c:	str	x0, [sp, #8]
   11d60:	ldr	x0, [sp, #8]
   11d64:	ldr	x0, [x0, #8]
   11d68:	add	sp, sp, #0x10
   11d6c:	ret
   11d70:	str	x30, [sp, #-48]!
   11d74:	str	x0, [sp, #24]
   11d78:	str	x1, [sp, #16]
   11d7c:	str	xzr, [sp, #40]
   11d80:	ldr	x0, [sp, #24]
   11d84:	bl	11d58 <__sanitizer_get_allocated_size@@Base+0x31f8>
   11d88:	str	x0, [sp, #32]
   11d8c:	ldr	x1, [sp, #40]
   11d90:	ldr	x0, [sp, #32]
   11d94:	cmp	x1, x0
   11d98:	b.cs	11dd0 <__sanitizer_get_allocated_size@@Base+0x3270>  // b.hs, b.nlast
   11d9c:	ldr	x0, [sp, #40]
   11da0:	lsl	x0, x0, #3
   11da4:	ldr	x1, [sp, #16]
   11da8:	add	x0, x1, x0
   11dac:	ldr	x1, [sp, #24]
   11db0:	ldr	x2, [sp, #40]
   11db4:	add	x2, x2, #0x2
   11db8:	ldr	x1, [x1, x2, lsl #3]
   11dbc:	str	x1, [x0]
   11dc0:	ldr	x0, [sp, #40]
   11dc4:	add	x0, x0, #0x1
   11dc8:	str	x0, [sp, #40]
   11dcc:	b	11d8c <__sanitizer_get_allocated_size@@Base+0x322c>
   11dd0:	nop
   11dd4:	ldr	x30, [sp], #48
   11dd8:	ret
   11ddc:	str	x30, [sp, #-64]!
   11de0:	str	x0, [sp, #40]
   11de4:	str	x1, [sp, #32]
   11de8:	str	x2, [sp, #24]
   11dec:	str	x3, [sp, #16]
   11df0:	ldr	x1, [sp, #40]
   11df4:	ldr	x0, [sp, #32]
   11df8:	lsl	x0, x0, #10
   11dfc:	add	x0, x1, x0
   11e00:	ldr	x0, [x0, #24]
   11e04:	str	x0, [sp, #56]
   11e08:	ldr	x0, [sp, #56]
   11e0c:	cmp	x0, #0x0
   11e10:	b.eq	11e28 <__sanitizer_get_allocated_size@@Base+0x32c8>  // b.none
   11e14:	ldr	x3, [sp, #16]
   11e18:	ldr	x2, [sp, #56]
   11e1c:	ldr	x1, [sp, #24]
   11e20:	ldr	x0, [sp, #40]
   11e24:	bl	105d0 <__sanitizer_get_allocated_size@@Base+0x1a70>
   11e28:	nop
   11e2c:	ldr	x30, [sp], #64
   11e30:	ret
   11e34:	str	x30, [sp, #-48]!
   11e38:	str	x0, [sp, #24]
   11e3c:	str	x1, [sp, #16]
   11e40:	ldr	x0, [sp, #16]
   11e44:	str	x0, [sp, #40]
   11e48:	mov	x0, #0x10000               	// #65536
   11e4c:	str	x0, [sp, #32]
   11e50:	ldr	x1, [sp, #40]
   11e54:	ldr	x0, [sp, #32]
   11e58:	cmp	x1, x0
   11e5c:	cset	w0, cs  // cs = hs, nlast
   11e60:	and	w0, w0, #0xff
   11e64:	and	x0, x0, #0xff
   11e68:	cmp	x0, #0x0
   11e6c:	b.eq	11e90 <__sanitizer_get_allocated_size@@Base+0x3330>  // b.none
   11e70:	ldr	x4, [sp, #32]
   11e74:	ldr	x3, [sp, #40]
   11e78:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   11e7c:	add	x2, x0, #0xcd8
   11e80:	mov	w1, #0x4f                  	// #79
   11e84:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   11e88:	add	x0, x0, #0xc60
   11e8c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   11e90:	ldr	x0, [sp, #16]
   11e94:	lsl	x0, x0, #3
   11e98:	ldr	x1, [sp, #24]
   11e9c:	add	x0, x1, x0
   11ea0:	mov	w1, #0x4                   	// #4
   11ea4:	bl	f49c <__sanitizer_get_allocated_size@@Base+0x93c>
   11ea8:	ldr	x30, [sp], #48
   11eac:	ret
   11eb0:	str	x30, [sp, #-32]!
   11eb4:	str	x0, [sp, #24]
   11eb8:	ldr	x0, [sp, #24]
   11ebc:	bl	12528 <__sanitizer_get_allocated_size@@Base+0x39c8>
   11ec0:	mov	x1, x0
   11ec4:	mov	x0, #0x3e                  	// #62
   11ec8:	bl	aeac <__lsan_do_recoverable_leak_check@@Base+0xd20>
   11ecc:	ldr	x30, [sp], #32
   11ed0:	ret
   11ed4:	sub	sp, sp, #0x10
   11ed8:	str	x0, [sp, #8]
   11edc:	ldr	x0, [sp, #8]
   11ee0:	add	x0, x0, #0x2
   11ee4:	lsl	x0, x0, #3
   11ee8:	add	sp, sp, #0x10
   11eec:	ret
   11ef0:	str	x30, [sp, #-112]!
   11ef4:	str	x0, [sp, #40]
   11ef8:	str	x1, [sp, #32]
   11efc:	strb	w2, [sp, #24]
   11f00:	ldr	x0, [sp, #32]
   11f04:	cmp	x0, #0x1
   11f08:	b.ls	1216c <__sanitizer_get_allocated_size@@Base+0x360c>  // b.plast
   11f0c:	mov	x0, #0x1                   	// #1
   11f10:	str	x0, [sp, #104]
   11f14:	ldr	x1, [sp, #104]
   11f18:	ldr	x0, [sp, #32]
   11f1c:	cmp	x1, x0
   11f20:	b.cs	11fd0 <__sanitizer_get_allocated_size@@Base+0x3470>  // b.hs, b.nlast
   11f24:	ldr	x0, [sp, #104]
   11f28:	str	x0, [sp, #96]
   11f2c:	ldr	x0, [sp, #96]
   11f30:	cmp	x0, #0x0
   11f34:	b.eq	11fc0 <__sanitizer_get_allocated_size@@Base+0x3460>  // b.none
   11f38:	ldr	x0, [sp, #96]
   11f3c:	sub	x0, x0, #0x1
   11f40:	lsr	x0, x0, #1
   11f44:	str	x0, [sp, #64]
   11f48:	ldr	x0, [sp, #64]
   11f4c:	lsl	x0, x0, #3
   11f50:	ldr	x1, [sp, #40]
   11f54:	add	x3, x1, x0
   11f58:	ldr	x0, [sp, #96]
   11f5c:	lsl	x0, x0, #3
   11f60:	ldr	x1, [sp, #40]
   11f64:	add	x1, x1, x0
   11f68:	add	x0, sp, #0x18
   11f6c:	mov	x2, x1
   11f70:	mov	x1, x3
   11f74:	bl	12590 <__sanitizer_get_allocated_size@@Base+0x3a30>
   11f78:	and	w0, w0, #0xff
   11f7c:	cmp	w0, #0x0
   11f80:	b.eq	11fbc <__sanitizer_get_allocated_size@@Base+0x345c>  // b.none
   11f84:	ldr	x0, [sp, #96]
   11f88:	lsl	x0, x0, #3
   11f8c:	ldr	x1, [sp, #40]
   11f90:	add	x2, x1, x0
   11f94:	ldr	x0, [sp, #64]
   11f98:	lsl	x0, x0, #3
   11f9c:	ldr	x1, [sp, #40]
   11fa0:	add	x0, x1, x0
   11fa4:	mov	x1, x0
   11fa8:	mov	x0, x2
   11fac:	bl	125c4 <__sanitizer_get_allocated_size@@Base+0x3a64>
   11fb0:	ldr	x0, [sp, #64]
   11fb4:	str	x0, [sp, #96]
   11fb8:	b	11f2c <__sanitizer_get_allocated_size@@Base+0x33cc>
   11fbc:	nop
   11fc0:	ldr	x0, [sp, #104]
   11fc4:	add	x0, x0, #0x1
   11fc8:	str	x0, [sp, #104]
   11fcc:	b	11f14 <__sanitizer_get_allocated_size@@Base+0x33b4>
   11fd0:	ldr	x0, [sp, #32]
   11fd4:	sub	x0, x0, #0x1
   11fd8:	str	x0, [sp, #88]
   11fdc:	ldr	x0, [sp, #88]
   11fe0:	cmp	x0, #0x0
   11fe4:	b.eq	12170 <__sanitizer_get_allocated_size@@Base+0x3610>  // b.none
   11fe8:	ldr	x0, [sp, #88]
   11fec:	lsl	x0, x0, #3
   11ff0:	ldr	x1, [sp, #40]
   11ff4:	add	x0, x1, x0
   11ff8:	mov	x1, x0
   11ffc:	ldr	x0, [sp, #40]
   12000:	bl	125c4 <__sanitizer_get_allocated_size@@Base+0x3a64>
   12004:	str	xzr, [sp, #80]
   12008:	ldr	x1, [sp, #80]
   1200c:	ldr	x0, [sp, #88]
   12010:	cmp	x1, x0
   12014:	b.cs	1215c <__sanitizer_get_allocated_size@@Base+0x35fc>  // b.hs, b.nlast
   12018:	ldr	x0, [sp, #80]
   1201c:	lsl	x0, x0, #1
   12020:	add	x0, x0, #0x1
   12024:	str	x0, [sp, #56]
   12028:	ldr	x0, [sp, #80]
   1202c:	add	x0, x0, #0x1
   12030:	lsl	x0, x0, #1
   12034:	str	x0, [sp, #48]
   12038:	ldr	x0, [sp, #80]
   1203c:	str	x0, [sp, #72]
   12040:	ldr	x1, [sp, #56]
   12044:	ldr	x0, [sp, #88]
   12048:	cmp	x1, x0
   1204c:	b.cs	12094 <__sanitizer_get_allocated_size@@Base+0x3534>  // b.hs, b.nlast
   12050:	ldr	x0, [sp, #72]
   12054:	lsl	x0, x0, #3
   12058:	ldr	x1, [sp, #40]
   1205c:	add	x3, x1, x0
   12060:	ldr	x0, [sp, #56]
   12064:	lsl	x0, x0, #3
   12068:	ldr	x1, [sp, #40]
   1206c:	add	x1, x1, x0
   12070:	add	x0, sp, #0x18
   12074:	mov	x2, x1
   12078:	mov	x1, x3
   1207c:	bl	12590 <__sanitizer_get_allocated_size@@Base+0x3a30>
   12080:	and	w0, w0, #0xff
   12084:	cmp	w0, #0x0
   12088:	b.eq	12094 <__sanitizer_get_allocated_size@@Base+0x3534>  // b.none
   1208c:	mov	w0, #0x1                   	// #1
   12090:	b	12098 <__sanitizer_get_allocated_size@@Base+0x3538>
   12094:	mov	w0, #0x0                   	// #0
   12098:	cmp	w0, #0x0
   1209c:	b.eq	120a8 <__sanitizer_get_allocated_size@@Base+0x3548>  // b.none
   120a0:	ldr	x0, [sp, #56]
   120a4:	str	x0, [sp, #72]
   120a8:	ldr	x1, [sp, #48]
   120ac:	ldr	x0, [sp, #88]
   120b0:	cmp	x1, x0
   120b4:	b.cs	120fc <__sanitizer_get_allocated_size@@Base+0x359c>  // b.hs, b.nlast
   120b8:	ldr	x0, [sp, #72]
   120bc:	lsl	x0, x0, #3
   120c0:	ldr	x1, [sp, #40]
   120c4:	add	x3, x1, x0
   120c8:	ldr	x0, [sp, #48]
   120cc:	lsl	x0, x0, #3
   120d0:	ldr	x1, [sp, #40]
   120d4:	add	x1, x1, x0
   120d8:	add	x0, sp, #0x18
   120dc:	mov	x2, x1
   120e0:	mov	x1, x3
   120e4:	bl	12590 <__sanitizer_get_allocated_size@@Base+0x3a30>
   120e8:	and	w0, w0, #0xff
   120ec:	cmp	w0, #0x0
   120f0:	b.eq	120fc <__sanitizer_get_allocated_size@@Base+0x359c>  // b.none
   120f4:	mov	w0, #0x1                   	// #1
   120f8:	b	12100 <__sanitizer_get_allocated_size@@Base+0x35a0>
   120fc:	mov	w0, #0x0                   	// #0
   12100:	cmp	w0, #0x0
   12104:	b.eq	12110 <__sanitizer_get_allocated_size@@Base+0x35b0>  // b.none
   12108:	ldr	x0, [sp, #48]
   1210c:	str	x0, [sp, #72]
   12110:	ldr	x1, [sp, #72]
   12114:	ldr	x0, [sp, #80]
   12118:	cmp	x1, x0
   1211c:	b.eq	12158 <__sanitizer_get_allocated_size@@Base+0x35f8>  // b.none
   12120:	ldr	x0, [sp, #80]
   12124:	lsl	x0, x0, #3
   12128:	ldr	x1, [sp, #40]
   1212c:	add	x2, x1, x0
   12130:	ldr	x0, [sp, #72]
   12134:	lsl	x0, x0, #3
   12138:	ldr	x1, [sp, #40]
   1213c:	add	x0, x1, x0
   12140:	mov	x1, x0
   12144:	mov	x0, x2
   12148:	bl	125c4 <__sanitizer_get_allocated_size@@Base+0x3a64>
   1214c:	ldr	x0, [sp, #72]
   12150:	str	x0, [sp, #80]
   12154:	b	12008 <__sanitizer_get_allocated_size@@Base+0x34a8>
   12158:	nop
   1215c:	ldr	x0, [sp, #88]
   12160:	sub	x0, x0, #0x1
   12164:	str	x0, [sp, #88]
   12168:	b	11fdc <__sanitizer_get_allocated_size@@Base+0x347c>
   1216c:	nop
   12170:	ldr	x30, [sp], #112
   12174:	ret
   12178:	str	x30, [sp, #-32]!
   1217c:	str	x0, [sp, #24]
   12180:	str	x1, [sp, #16]
   12184:	ldr	x0, [sp, #24]
   12188:	bl	12208 <__sanitizer_get_allocated_size@@Base+0x36a8>
   1218c:	and	w0, w0, #0xff
   12190:	cmp	w0, #0x0
   12194:	b.eq	121cc <__sanitizer_get_allocated_size@@Base+0x366c>  // b.none
   12198:	ldr	x0, [sp, #16]
   1219c:	str	xzr, [x0]
   121a0:	ldr	x0, [sp, #24]
   121a4:	ldr	x1, [sp, #16]
   121a8:	str	x1, [x0, #16]
   121ac:	ldr	x0, [sp, #24]
   121b0:	ldr	x1, [x0, #16]
   121b4:	ldr	x0, [sp, #24]
   121b8:	str	x1, [x0, #8]
   121bc:	ldr	x0, [sp, #24]
   121c0:	mov	x1, #0x1                   	// #1
   121c4:	str	x1, [x0]
   121c8:	b	121fc <__sanitizer_get_allocated_size@@Base+0x369c>
   121cc:	ldr	x0, [sp, #24]
   121d0:	ldr	x1, [x0, #8]
   121d4:	ldr	x0, [sp, #16]
   121d8:	str	x1, [x0]
   121dc:	ldr	x0, [sp, #24]
   121e0:	ldr	x1, [sp, #16]
   121e4:	str	x1, [x0, #8]
   121e8:	ldr	x0, [sp, #24]
   121ec:	ldr	x0, [x0]
   121f0:	add	x1, x0, #0x1
   121f4:	ldr	x0, [sp, #24]
   121f8:	str	x1, [x0]
   121fc:	nop
   12200:	ldr	x30, [sp], #32
   12204:	ret
   12208:	sub	sp, sp, #0x10
   1220c:	str	x0, [sp, #8]
   12210:	ldr	x0, [sp, #8]
   12214:	ldr	x0, [x0]
   12218:	cmp	x0, #0x0
   1221c:	cset	w0, eq  // eq = none
   12220:	and	w0, w0, #0xff
   12224:	add	sp, sp, #0x10
   12228:	ret
   1222c:	sub	sp, sp, #0x210
   12230:	str	x30, [sp]
   12234:	str	x0, [sp, #56]
   12238:	str	x1, [sp, #48]
   1223c:	str	x2, [sp, #40]
   12240:	str	x3, [sp, #32]
   12244:	str	x4, [sp, #24]
   12248:	ldr	x2, [sp, #24]
   1224c:	ldr	x1, [sp, #48]
   12250:	ldr	x0, [sp, #56]
   12254:	bl	12604 <__sanitizer_get_allocated_size@@Base+0x3aa4>
   12258:	str	x0, [sp, #504]
   1225c:	ldr	x0, [sp, #504]
   12260:	cmp	x0, #0x0
   12264:	cset	w0, eq  // eq = none
   12268:	and	w0, w0, #0xff
   1226c:	and	x0, x0, #0xff
   12270:	cmp	x0, #0x0
   12274:	b.eq	12280 <__sanitizer_get_allocated_size@@Base+0x3720>  // b.none
   12278:	mov	w0, #0x0                   	// #0
   1227c:	b	12450 <__sanitizer_get_allocated_size@@Base+0x38f0>
   12280:	ldr	x0, [sp, #24]
   12284:	bl	11394 <__sanitizer_get_allocated_size@@Base+0x2834>
   12288:	str	x0, [sp, #496]
   1228c:	ldr	x0, [sp, #496]
   12290:	add	x0, x0, #0x10
   12294:	mov	x1, #0x100000              	// #1048576
   12298:	udiv	x0, x1, x0
   1229c:	str	x0, [sp, #488]
   122a0:	ldr	x0, [sp, #496]
   122a4:	bl	11eb0 <__sanitizer_get_allocated_size@@Base+0x3350>
   122a8:	str	x0, [sp, #480]
   122ac:	str	xzr, [sp, #448]
   122b0:	mov	x0, #0x30                  	// #48
   122b4:	str	x0, [sp, #472]
   122b8:	str	xzr, [sp, #520]
   122bc:	ldr	x0, [sp, #504]
   122c0:	str	x0, [sp, #512]
   122c4:	ldr	x1, [sp, #488]
   122c8:	ldr	x0, [sp, #496]
   122cc:	mul	x1, x1, x0
   122d0:	ldr	x0, [sp, #504]
   122d4:	add	x0, x1, x0
   122d8:	ldr	x1, [sp, #512]
   122dc:	cmp	x1, x0
   122e0:	b.cs	1237c <__sanitizer_get_allocated_size@@Base+0x381c>  // b.hs, b.nlast
   122e4:	ldr	x0, [sp, #520]
   122e8:	add	x1, x0, #0x1
   122ec:	str	x1, [sp, #520]
   122f0:	lsl	x0, x0, #3
   122f4:	add	x1, sp, #0x40
   122f8:	ldr	x2, [sp, #512]
   122fc:	str	x2, [x1, x0]
   12300:	ldr	x0, [sp, #520]
   12304:	cmp	x0, #0x30
   12308:	b.ne	12368 <__sanitizer_get_allocated_size@@Base+0x3808>  // b.any
   1230c:	add	x1, sp, #0x40
   12310:	add	x0, sp, #0x1c0
   12314:	ldr	x7, [sp, #520]
   12318:	mov	x6, x1
   1231c:	ldr	x5, [sp, #480]
   12320:	mov	x4, x0
   12324:	ldr	x3, [sp, #24]
   12328:	ldr	x2, [sp, #32]
   1232c:	ldr	x1, [sp, #40]
   12330:	ldr	x0, [sp, #56]
   12334:	bl	12708 <__sanitizer_get_allocated_size@@Base+0x3ba8>
   12338:	and	w0, w0, #0xff
   1233c:	eor	w0, w0, #0x1
   12340:	and	w0, w0, #0xff
   12344:	and	x0, x0, #0xff
   12348:	cmp	x0, #0x0
   1234c:	cset	w0, ne  // ne = any
   12350:	and	w0, w0, #0xff
   12354:	cmp	w0, #0x0
   12358:	b.eq	12364 <__sanitizer_get_allocated_size@@Base+0x3804>  // b.none
   1235c:	mov	w0, #0x0                   	// #0
   12360:	b	12450 <__sanitizer_get_allocated_size@@Base+0x38f0>
   12364:	str	xzr, [sp, #520]
   12368:	ldr	x1, [sp, #512]
   1236c:	ldr	x0, [sp, #496]
   12370:	add	x0, x1, x0
   12374:	str	x0, [sp, #512]
   12378:	b	122c4 <__sanitizer_get_allocated_size@@Base+0x3764>
   1237c:	ldr	x0, [sp, #520]
   12380:	cmp	x0, #0x0
   12384:	b.eq	123e0 <__sanitizer_get_allocated_size@@Base+0x3880>  // b.none
   12388:	add	x1, sp, #0x40
   1238c:	add	x0, sp, #0x1c0
   12390:	ldr	x7, [sp, #520]
   12394:	mov	x6, x1
   12398:	ldr	x5, [sp, #480]
   1239c:	mov	x4, x0
   123a0:	ldr	x3, [sp, #24]
   123a4:	ldr	x2, [sp, #32]
   123a8:	ldr	x1, [sp, #40]
   123ac:	ldr	x0, [sp, #56]
   123b0:	bl	12708 <__sanitizer_get_allocated_size@@Base+0x3ba8>
   123b4:	and	w0, w0, #0xff
   123b8:	eor	w0, w0, #0x1
   123bc:	and	w0, w0, #0xff
   123c0:	and	x0, x0, #0xff
   123c4:	cmp	x0, #0x0
   123c8:	cset	w0, ne  // ne = any
   123cc:	and	w0, w0, #0xff
   123d0:	cmp	w0, #0x0
   123d4:	b.eq	123e0 <__sanitizer_get_allocated_size@@Base+0x3880>  // b.none
   123d8:	mov	w0, #0x0                   	// #0
   123dc:	b	12450 <__sanitizer_get_allocated_size@@Base+0x38f0>
   123e0:	ldr	x0, [sp, #448]
   123e4:	cmp	x0, #0x0
   123e8:	b.eq	1244c <__sanitizer_get_allocated_size@@Base+0x38ec>  // b.none
   123ec:	ldr	x0, [sp, #448]
   123f0:	bl	11d58 <__sanitizer_get_allocated_size@@Base+0x31f8>
   123f4:	str	x0, [sp, #464]
   123f8:	str	xzr, [sp, #456]
   123fc:	ldr	x1, [sp, #464]
   12400:	ldr	x0, [sp, #456]
   12404:	cmp	x1, x0
   12408:	cset	w0, ls  // ls = plast
   1240c:	and	w0, w0, #0xff
   12410:	and	x0, x0, #0xff
   12414:	cmp	x0, #0x0
   12418:	b.eq	1243c <__sanitizer_get_allocated_size@@Base+0x38dc>  // b.none
   1241c:	ldr	x4, [sp, #456]
   12420:	ldr	x3, [sp, #464]
   12424:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   12428:	add	x2, x0, #0xbd8
   1242c:	mov	w1, #0x169                 	// #361
   12430:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   12434:	add	x0, x0, #0x7a8
   12438:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1243c:	ldr	x0, [sp, #32]
   12440:	add	x0, x0, #0x8
   12444:	ldr	x1, [sp, #448]
   12448:	bl	12830 <__sanitizer_get_allocated_size@@Base+0x3cd0>
   1244c:	mov	w0, #0x1                   	// #1
   12450:	ldr	x30, [sp]
   12454:	add	sp, sp, #0x210
   12458:	ret
   1245c:	sub	sp, sp, #0x10
   12460:	str	x0, [sp, #8]
   12464:	ldr	x0, [sp, #8]
   12468:	ldr	x0, [x0, #8]
   1246c:	add	sp, sp, #0x10
   12470:	ret
   12474:	str	x30, [sp, #-48]!
   12478:	str	x0, [sp, #24]
   1247c:	ldr	x0, [sp, #24]
   12480:	bl	12208 <__sanitizer_get_allocated_size@@Base+0x36a8>
   12484:	and	w0, w0, #0xff
   12488:	eor	w0, w0, #0x1
   1248c:	and	w0, w0, #0xff
   12490:	and	x0, x0, #0xff
   12494:	str	x0, [sp, #40]
   12498:	str	xzr, [sp, #32]
   1249c:	ldr	x1, [sp, #40]
   124a0:	ldr	x0, [sp, #32]
   124a4:	cmp	x1, x0
   124a8:	cset	w0, eq  // eq = none
   124ac:	and	w0, w0, #0xff
   124b0:	and	x0, x0, #0xff
   124b4:	cmp	x0, #0x0
   124b8:	b.eq	124dc <__sanitizer_get_allocated_size@@Base+0x397c>  // b.none
   124bc:	ldr	x4, [sp, #32]
   124c0:	ldr	x3, [sp, #40]
   124c4:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   124c8:	add	x2, x0, #0xcf0
   124cc:	mov	w1, #0x40                  	// #64
   124d0:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   124d4:	add	x0, x0, #0xd08
   124d8:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   124dc:	ldr	x0, [sp, #24]
   124e0:	ldr	x0, [x0, #8]
   124e4:	ldr	x1, [x0]
   124e8:	ldr	x0, [sp, #24]
   124ec:	str	x1, [x0, #8]
   124f0:	ldr	x0, [sp, #24]
   124f4:	ldr	x0, [x0, #8]
   124f8:	cmp	x0, #0x0
   124fc:	b.ne	12508 <__sanitizer_get_allocated_size@@Base+0x39a8>  // b.any
   12500:	ldr	x0, [sp, #24]
   12504:	str	xzr, [x0, #16]
   12508:	ldr	x0, [sp, #24]
   1250c:	ldr	x0, [x0]
   12510:	sub	x1, x0, #0x1
   12514:	ldr	x0, [sp, #24]
   12518:	str	x1, [x0]
   1251c:	nop
   12520:	ldr	x30, [sp], #48
   12524:	ret
   12528:	str	x30, [sp, #-48]!
   1252c:	str	x0, [sp, #24]
   12530:	ldr	x0, [sp, #24]
   12534:	cmp	x0, #0x0
   12538:	cset	w0, eq  // eq = none
   1253c:	and	w0, w0, #0xff
   12540:	and	x0, x0, #0xff
   12544:	cmp	x0, #0x0
   12548:	b.eq	12554 <__sanitizer_get_allocated_size@@Base+0x39f4>  // b.none
   1254c:	mov	x0, #0x0                   	// #0
   12550:	b	12588 <__sanitizer_get_allocated_size@@Base+0x3a28>
   12554:	ldr	x0, [sp, #24]
   12558:	mov	w1, w0
   1255c:	mov	w0, #0x4000                	// #16384
   12560:	udiv	w0, w0, w1
   12564:	mov	w0, w0
   12568:	str	x0, [sp, #40]
   1256c:	ldr	x1, [sp, #40]
   12570:	mov	x0, #0x40                  	// #64
   12574:	bl	aeac <__lsan_do_recoverable_leak_check@@Base+0xd20>
   12578:	mov	x1, x0
   1257c:	mov	x0, #0x1                   	// #1
   12580:	bl	ae7c <__lsan_do_recoverable_leak_check@@Base+0xcf0>
   12584:	nop
   12588:	ldr	x30, [sp], #48
   1258c:	ret
   12590:	sub	sp, sp, #0x20
   12594:	str	x0, [sp, #24]
   12598:	str	x1, [sp, #16]
   1259c:	str	x2, [sp, #8]
   125a0:	ldr	x0, [sp, #16]
   125a4:	ldr	x1, [x0]
   125a8:	ldr	x0, [sp, #8]
   125ac:	ldr	x0, [x0]
   125b0:	cmp	x1, x0
   125b4:	cset	w0, cc  // cc = lo, ul, last
   125b8:	and	w0, w0, #0xff
   125bc:	add	sp, sp, #0x20
   125c0:	ret
   125c4:	sub	sp, sp, #0x20
   125c8:	str	x0, [sp, #8]
   125cc:	str	x1, [sp]
   125d0:	ldr	x0, [sp, #8]
   125d4:	ldr	x0, [x0]
   125d8:	str	x0, [sp, #24]
   125dc:	ldr	x0, [sp]
   125e0:	ldr	x1, [x0]
   125e4:	ldr	x0, [sp, #8]
   125e8:	str	x1, [x0]
   125ec:	ldr	x0, [sp]
   125f0:	ldr	x1, [sp, #24]
   125f4:	str	x1, [x0]
   125f8:	nop
   125fc:	add	sp, sp, #0x20
   12600:	ret
   12604:	stp	x19, x30, [sp, #-80]!
   12608:	str	x0, [sp, #40]
   1260c:	str	x1, [sp, #32]
   12610:	str	x2, [sp, #24]
   12614:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   12618:	ldr	x0, [x0, #3616]
   1261c:	ldr	x0, [x0]
   12620:	mov	x2, x0
   12624:	mov	x1, #0x100000              	// #1048576
   12628:	mov	x0, #0x100000              	// #1048576
   1262c:	bl	26c8c <__sanitizer_set_report_fd@@Base+0x7a94>
   12630:	str	x0, [sp, #72]
   12634:	ldr	x0, [sp, #72]
   12638:	cmp	x0, #0x0
   1263c:	cset	w0, eq  // eq = none
   12640:	and	w0, w0, #0xff
   12644:	and	x0, x0, #0xff
   12648:	cmp	x0, #0x0
   1264c:	b.eq	12658 <__sanitizer_get_allocated_size@@Base+0x3af8>  // b.none
   12650:	mov	x0, #0x0                   	// #0
   12654:	b	12700 <__sanitizer_get_allocated_size@@Base+0x3ba0>
   12658:	add	x0, sp, #0x30
   1265c:	mov	x2, #0x100000              	// #1048576
   12660:	ldr	x1, [sp, #72]
   12664:	bl	ed80 <__sanitizer_get_allocated_size@@Base+0x220>
   12668:	mov	x2, #0x100000              	// #1048576
   1266c:	mov	w1, #0x1                   	// #1
   12670:	ldr	x0, [sp, #32]
   12674:	bl	edb8 <__sanitizer_get_allocated_size@@Base+0x258>
   12678:	mov	x1, #0x100000              	// #1048576
   1267c:	ldr	x0, [sp, #72]
   12680:	bl	ed50 <__sanitizer_get_allocated_size@@Base+0x1f0>
   12684:	and	w0, w0, #0xff
   12688:	and	x0, x0, #0xff
   1268c:	str	x0, [sp, #64]
   12690:	str	xzr, [sp, #56]
   12694:	ldr	x1, [sp, #64]
   12698:	ldr	x0, [sp, #56]
   1269c:	cmp	x1, x0
   126a0:	cset	w0, eq  // eq = none
   126a4:	and	w0, w0, #0xff
   126a8:	and	x0, x0, #0xff
   126ac:	cmp	x0, #0x0
   126b0:	b.eq	126d4 <__sanitizer_get_allocated_size@@Base+0x3b74>  // b.none
   126b4:	ldr	x4, [sp, #56]
   126b8:	ldr	x3, [sp, #64]
   126bc:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   126c0:	add	x2, x0, #0xd48
   126c4:	mov	w1, #0x126                 	// #294
   126c8:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   126cc:	add	x0, x0, #0x7a8
   126d0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   126d4:	ldr	x19, [sp, #40]
   126d8:	ldr	x1, [sp, #72]
   126dc:	ldr	x0, [sp, #40]
   126e0:	bl	11674 <__sanitizer_get_allocated_size@@Base+0x2b14>
   126e4:	ldr	x1, [sp, #24]
   126e8:	and	w1, w1, #0xff
   126ec:	mov	w2, w1
   126f0:	mov	x1, x0
   126f4:	mov	x0, x19
   126f8:	bl	128c8 <__sanitizer_get_allocated_size@@Base+0x3d68>
   126fc:	ldr	x0, [sp, #72]
   12700:	ldp	x19, x30, [sp], #80
   12704:	ret
   12708:	str	x30, [sp, #-96]!
   1270c:	str	x0, [sp, #72]
   12710:	str	x1, [sp, #64]
   12714:	str	x2, [sp, #56]
   12718:	str	x3, [sp, #48]
   1271c:	str	x4, [sp, #40]
   12720:	str	x5, [sp, #32]
   12724:	str	x6, [sp, #24]
   12728:	str	x7, [sp, #16]
   1272c:	ldr	x0, [sp, #40]
   12730:	ldr	x0, [x0]
   12734:	str	x0, [sp, #88]
   12738:	str	xzr, [sp, #80]
   1273c:	ldr	x1, [sp, #80]
   12740:	ldr	x0, [sp, #16]
   12744:	cmp	x1, x0
   12748:	b.cs	12818 <__sanitizer_get_allocated_size@@Base+0x3cb8>  // b.hs, b.nlast
   1274c:	ldr	x0, [sp, #88]
   12750:	cmp	x0, #0x0
   12754:	b.ne	127b0 <__sanitizer_get_allocated_size@@Base+0x3c50>  // b.any
   12758:	ldr	x0, [sp, #80]
   1275c:	lsl	x0, x0, #3
   12760:	ldr	x1, [sp, #24]
   12764:	add	x0, x1, x0
   12768:	ldr	x0, [x0]
   1276c:	mov	x3, x0
   12770:	ldr	x2, [sp, #72]
   12774:	ldr	x1, [sp, #48]
   12778:	ldr	x0, [sp, #64]
   1277c:	bl	11aa0 <__sanitizer_get_allocated_size@@Base+0x2f40>
   12780:	str	x0, [sp, #88]
   12784:	ldr	x0, [sp, #88]
   12788:	cmp	x0, #0x0
   1278c:	cset	w0, eq  // eq = none
   12790:	and	w0, w0, #0xff
   12794:	and	x0, x0, #0xff
   12798:	cmp	x0, #0x0
   1279c:	b.eq	127a8 <__sanitizer_get_allocated_size@@Base+0x3c48>  // b.none
   127a0:	mov	w0, #0x0                   	// #0
   127a4:	b	12828 <__sanitizer_get_allocated_size@@Base+0x3cc8>
   127a8:	ldr	x0, [sp, #88]
   127ac:	bl	129c4 <__sanitizer_get_allocated_size@@Base+0x3e64>
   127b0:	ldr	x0, [sp, #80]
   127b4:	lsl	x0, x0, #3
   127b8:	ldr	x1, [sp, #24]
   127bc:	add	x0, x1, x0
   127c0:	ldr	x0, [x0]
   127c4:	mov	x1, x0
   127c8:	ldr	x0, [sp, #88]
   127cc:	bl	129e0 <__sanitizer_get_allocated_size@@Base+0x3e80>
   127d0:	ldr	x0, [sp, #88]
   127d4:	bl	11d58 <__sanitizer_get_allocated_size@@Base+0x31f8>
   127d8:	mov	x1, x0
   127dc:	ldr	x0, [sp, #32]
   127e0:	cmp	x0, x1
   127e4:	cset	w0, eq  // eq = none
   127e8:	and	w0, w0, #0xff
   127ec:	cmp	w0, #0x0
   127f0:	b.eq	12808 <__sanitizer_get_allocated_size@@Base+0x3ca8>  // b.none
   127f4:	ldr	x0, [sp, #56]
   127f8:	add	x0, x0, #0x8
   127fc:	ldr	x1, [sp, #88]
   12800:	bl	12830 <__sanitizer_get_allocated_size@@Base+0x3cd0>
   12804:	str	xzr, [sp, #88]
   12808:	ldr	x0, [sp, #80]
   1280c:	add	x0, x0, #0x1
   12810:	str	x0, [sp, #80]
   12814:	b	1273c <__sanitizer_get_allocated_size@@Base+0x3bdc>
   12818:	ldr	x0, [sp, #40]
   1281c:	ldr	x1, [sp, #88]
   12820:	str	x1, [x0]
   12824:	mov	w0, #0x1                   	// #1
   12828:	ldr	x30, [sp], #96
   1282c:	ret
   12830:	str	x30, [sp, #-32]!
   12834:	str	x0, [sp, #24]
   12838:	str	x1, [sp, #16]
   1283c:	ldr	x0, [sp, #24]
   12840:	bl	12208 <__sanitizer_get_allocated_size@@Base+0x36a8>
   12844:	and	w0, w0, #0xff
   12848:	cmp	w0, #0x0
   1284c:	b.eq	12884 <__sanitizer_get_allocated_size@@Base+0x3d24>  // b.none
   12850:	ldr	x0, [sp, #16]
   12854:	str	xzr, [x0]
   12858:	ldr	x0, [sp, #24]
   1285c:	ldr	x1, [sp, #16]
   12860:	str	x1, [x0, #16]
   12864:	ldr	x0, [sp, #24]
   12868:	ldr	x1, [x0, #16]
   1286c:	ldr	x0, [sp, #24]
   12870:	str	x1, [x0, #8]
   12874:	ldr	x0, [sp, #24]
   12878:	mov	x1, #0x1                   	// #1
   1287c:	str	x1, [x0]
   12880:	b	128bc <__sanitizer_get_allocated_size@@Base+0x3d5c>
   12884:	ldr	x0, [sp, #16]
   12888:	str	xzr, [x0]
   1288c:	ldr	x0, [sp, #24]
   12890:	ldr	x0, [x0, #16]
   12894:	ldr	x1, [sp, #16]
   12898:	str	x1, [x0]
   1289c:	ldr	x0, [sp, #24]
   128a0:	ldr	x1, [sp, #16]
   128a4:	str	x1, [x0, #16]
   128a8:	ldr	x0, [sp, #24]
   128ac:	ldr	x0, [x0]
   128b0:	add	x1, x0, #0x1
   128b4:	ldr	x0, [sp, #24]
   128b8:	str	x1, [x0]
   128bc:	nop
   128c0:	ldr	x30, [sp], #32
   128c4:	ret
   128c8:	str	x30, [sp, #-96]!
   128cc:	str	x0, [sp, #40]
   128d0:	str	x1, [sp, #32]
   128d4:	strb	w2, [sp, #31]
   128d8:	ldr	x0, [sp, #32]
   128dc:	str	x0, [sp, #88]
   128e0:	mov	x0, #0x10000000            	// #268435456
   128e4:	str	x0, [sp, #80]
   128e8:	ldr	x1, [sp, #88]
   128ec:	ldr	x0, [sp, #80]
   128f0:	cmp	x1, x0
   128f4:	cset	w0, cs  // cs = hs, nlast
   128f8:	and	w0, w0, #0xff
   128fc:	and	x0, x0, #0xff
   12900:	cmp	x0, #0x0
   12904:	b.eq	12928 <__sanitizer_get_allocated_size@@Base+0x3dc8>  // b.none
   12908:	ldr	x4, [sp, #80]
   1290c:	ldr	x3, [sp, #88]
   12910:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   12914:	add	x2, x0, #0xc40
   12918:	mov	w1, #0x40                  	// #64
   1291c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   12920:	add	x0, x0, #0xc60
   12924:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   12928:	ldr	x0, [sp, #32]
   1292c:	lsr	x0, x0, #12
   12930:	mov	x1, x0
   12934:	ldr	x0, [sp, #40]
   12938:	bl	12a1c <__sanitizer_get_allocated_size@@Base+0x3ebc>
   1293c:	str	x0, [sp, #72]
   12940:	str	xzr, [sp, #64]
   12944:	ldr	x0, [sp, #32]
   12948:	and	x0, x0, #0xfff
   1294c:	ldr	x1, [sp, #72]
   12950:	add	x0, x1, x0
   12954:	ldrb	w0, [x0]
   12958:	and	x0, x0, #0xff
   1295c:	str	x0, [sp, #56]
   12960:	ldr	x1, [sp, #64]
   12964:	ldr	x0, [sp, #56]
   12968:	cmp	x1, x0
   1296c:	cset	w0, ne  // ne = any
   12970:	and	w0, w0, #0xff
   12974:	and	x0, x0, #0xff
   12978:	cmp	x0, #0x0
   1297c:	b.eq	129a0 <__sanitizer_get_allocated_size@@Base+0x3e40>  // b.none
   12980:	ldr	x4, [sp, #56]
   12984:	ldr	x3, [sp, #64]
   12988:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   1298c:	add	x2, x0, #0xd70
   12990:	mov	w1, #0x42                  	// #66
   12994:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   12998:	add	x0, x0, #0xc60
   1299c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   129a0:	ldr	x0, [sp, #32]
   129a4:	and	x0, x0, #0xfff
   129a8:	ldr	x1, [sp, #72]
   129ac:	add	x0, x1, x0
   129b0:	ldrb	w1, [sp, #31]
   129b4:	strb	w1, [x0]
   129b8:	nop
   129bc:	ldr	x30, [sp], #96
   129c0:	ret
   129c4:	sub	sp, sp, #0x10
   129c8:	str	x0, [sp, #8]
   129cc:	ldr	x0, [sp, #8]
   129d0:	str	xzr, [x0, #8]
   129d4:	nop
   129d8:	add	sp, sp, #0x10
   129dc:	ret
   129e0:	sub	sp, sp, #0x10
   129e4:	str	x0, [sp, #8]
   129e8:	str	x1, [sp]
   129ec:	ldr	x0, [sp, #8]
   129f0:	ldr	x0, [x0, #8]
   129f4:	add	x2, x0, #0x1
   129f8:	ldr	x1, [sp, #8]
   129fc:	str	x2, [x1, #8]
   12a00:	ldr	x1, [sp, #8]
   12a04:	add	x0, x0, #0x2
   12a08:	ldr	x2, [sp]
   12a0c:	str	x2, [x1, x0, lsl #3]
   12a10:	nop
   12a14:	add	sp, sp, #0x10
   12a18:	ret
   12a1c:	str	x30, [sp, #-64]!
   12a20:	str	x0, [sp, #24]
   12a24:	str	x1, [sp, #16]
   12a28:	ldr	x1, [sp, #16]
   12a2c:	ldr	x0, [sp, #24]
   12a30:	bl	11e34 <__sanitizer_get_allocated_size@@Base+0x32d4>
   12a34:	str	x0, [sp, #56]
   12a38:	ldr	x0, [sp, #56]
   12a3c:	cmp	x0, #0x0
   12a40:	b.ne	12ac8 <__sanitizer_get_allocated_size@@Base+0x3f68>  // b.any
   12a44:	ldr	x0, [sp, #24]
   12a48:	add	x1, x0, #0x80, lsl #12
   12a4c:	add	x0, sp, #0x28
   12a50:	bl	f58c <__sanitizer_get_allocated_size@@Base+0xa2c>
   12a54:	ldr	x1, [sp, #16]
   12a58:	ldr	x0, [sp, #24]
   12a5c:	bl	11e34 <__sanitizer_get_allocated_size@@Base+0x32d4>
   12a60:	str	x0, [sp, #56]
   12a64:	ldr	x0, [sp, #56]
   12a68:	cmp	x0, #0x0
   12a6c:	cset	w0, eq  // eq = none
   12a70:	and	w0, w0, #0xff
   12a74:	cmp	w0, #0x0
   12a78:	b.eq	12ac0 <__sanitizer_get_allocated_size@@Base+0x3f60>  // b.none
   12a7c:	mov	w2, #0x0                   	// #0
   12a80:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   12a84:	add	x1, x0, #0xd98
   12a88:	mov	x0, #0x1000                	// #4096
   12a8c:	bl	26a50 <__sanitizer_set_report_fd@@Base+0x7858>
   12a90:	str	x0, [sp, #56]
   12a94:	ldr	x1, [sp, #56]
   12a98:	add	x0, sp, #0x30
   12a9c:	mov	x2, #0x1000                	// #4096
   12aa0:	bl	ed80 <__sanitizer_get_allocated_size@@Base+0x220>
   12aa4:	ldr	x0, [sp, #16]
   12aa8:	lsl	x0, x0, #3
   12aac:	ldr	x1, [sp, #24]
   12ab0:	add	x0, x1, x0
   12ab4:	ldr	x1, [sp, #56]
   12ab8:	mov	w2, #0x8                   	// #8
   12abc:	bl	f520 <__sanitizer_get_allocated_size@@Base+0x9c0>
   12ac0:	add	x0, sp, #0x28
   12ac4:	bl	f5bc <__sanitizer_get_allocated_size@@Base+0xa5c>
   12ac8:	ldr	x0, [sp, #56]
   12acc:	ldr	x30, [sp], #64
   12ad0:	ret

0000000000012ad4 <__interceptor_malloc@@Base>:
   12ad4:	sub	sp, sp, #0x8b0
   12ad8:	stp	x29, x30, [sp]
   12adc:	mov	x29, sp
   12ae0:	stp	x19, x20, [sp, #16]
   12ae4:	str	x21, [sp, #32]
   12ae8:	str	x0, [x29, #56]
   12aec:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   12af0:	ldr	x0, [x0, #4048]
   12af4:	ldrb	w0, [x0]
   12af8:	eor	w0, w0, #0x1
   12afc:	and	w0, w0, #0xff
   12b00:	and	x0, x0, #0xff
   12b04:	str	x0, [x29, #2216]
   12b08:	str	xzr, [x29, #2208]
   12b0c:	ldr	x1, [x29, #2216]
   12b10:	ldr	x0, [x29, #2208]
   12b14:	cmp	x1, x0
   12b18:	cset	w0, eq  // eq = none
   12b1c:	and	w0, w0, #0xff
   12b20:	and	x0, x0, #0xff
   12b24:	cmp	x0, #0x0
   12b28:	b.eq	12b4c <__interceptor_malloc@@Base+0x78>  // b.none
   12b2c:	ldr	x4, [x29, #2208]
   12b30:	ldr	x3, [x29, #2216]
   12b34:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   12b38:	add	x2, x0, #0xe70
   12b3c:	mov	w1, #0x34                  	// #52
   12b40:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   12b44:	add	x0, x0, #0xe98
   12b48:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   12b4c:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   12b50:	ldr	x0, [x0, #3592]
   12b54:	ldrb	w0, [x0]
   12b58:	eor	w0, w0, #0x1
   12b5c:	and	w0, w0, #0xff
   12b60:	cmp	w0, #0x0
   12b64:	b.eq	12b6c <__interceptor_malloc@@Base+0x98>  // b.none
   12b68:	bl	6d80 <__lsan_init@plt>
   12b6c:	add	x0, x29, #0x40
   12b70:	bl	dc88 <__sanitizer_print_stack_trace@@Base+0x1d0>
   12b74:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   12b78:	ldr	w0, [x0, #36]
   12b7c:	sxtw	x19, w0
   12b80:	bl	2d030 <OnPrint@@Base+0x3088>
   12b84:	mov	x20, x0
   12b88:	mov	x0, x29
   12b8c:	mov	x21, x0
   12b90:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   12b94:	ldrb	w1, [x0, #34]
   12b98:	add	x0, x29, #0x40
   12b9c:	str	x0, [x29, #2200]
   12ba0:	str	x19, [x29, #2192]
   12ba4:	str	x20, [x29, #2184]
   12ba8:	str	x21, [x29, #2176]
   12bac:	str	xzr, [x29, #2168]
   12bb0:	mov	w0, w1
   12bb4:	strb	w0, [x29, #2167]
   12bb8:	str	xzr, [x29, #2152]
   12bbc:	str	xzr, [x29, #2144]
   12bc0:	ldrb	w0, [x29, #2167]
   12bc4:	cmp	w0, #0x0
   12bc8:	b.eq	12be8 <__interceptor_malloc@@Base+0x114>  // b.none
   12bcc:	bl	15d20 <__interceptor_sigaction@@Base+0x7b8>
   12bd0:	str	x0, [x29, #2136]
   12bd4:	ldr	x0, [x29, #2136]
   12bd8:	cmp	x0, #0x0
   12bdc:	b.eq	12be8 <__interceptor_malloc@@Base+0x114>  // b.none
   12be0:	mov	w0, #0x1                   	// #1
   12be4:	b	12bec <__interceptor_malloc@@Base+0x118>
   12be8:	mov	w0, #0x0                   	// #0
   12bec:	cmp	w0, #0x0
   12bf0:	b.eq	12c0c <__interceptor_malloc@@Base+0x138>  // b.none
   12bf4:	ldr	x0, [x29, #2136]
   12bf8:	bl	dc34 <__sanitizer_print_stack_trace@@Base+0x17c>
   12bfc:	str	x0, [x29, #2152]
   12c00:	ldr	x0, [x29, #2136]
   12c04:	bl	dc1c <__sanitizer_print_stack_trace@@Base+0x164>
   12c08:	str	x0, [x29, #2144]
   12c0c:	ldr	x0, [x29, #2192]
   12c10:	ldrb	w7, [x29, #2167]
   12c14:	ldr	x6, [x29, #2144]
   12c18:	ldr	x5, [x29, #2152]
   12c1c:	ldr	x4, [x29, #2168]
   12c20:	ldr	x3, [x29, #2176]
   12c24:	ldr	x2, [x29, #2184]
   12c28:	mov	w1, w0
   12c2c:	ldr	x0, [x29, #2200]
   12c30:	bl	2d758 <OnPrint@@Base+0x37b0>
   12c34:	nop
   12c38:	add	x0, x29, #0x40
   12c3c:	mov	x1, x0
   12c40:	ldr	x0, [x29, #56]
   12c44:	bl	e4fc <__sanitizer_print_stack_trace@@Base+0xa44>
   12c48:	ldp	x19, x20, [sp, #16]
   12c4c:	ldr	x21, [sp, #32]
   12c50:	ldp	x29, x30, [sp]
   12c54:	add	sp, sp, #0x8b0
   12c58:	ret

0000000000012c5c <__interceptor_cfree@@Base>:
   12c5c:	str	x30, [sp, #-48]!
   12c60:	str	x0, [sp, #24]
   12c64:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   12c68:	ldr	x0, [x0, #4048]
   12c6c:	ldrb	w0, [x0]
   12c70:	eor	w0, w0, #0x1
   12c74:	and	w0, w0, #0xff
   12c78:	and	x0, x0, #0xff
   12c7c:	str	x0, [sp, #40]
   12c80:	str	xzr, [sp, #32]
   12c84:	ldr	x1, [sp, #40]
   12c88:	ldr	x0, [sp, #32]
   12c8c:	cmp	x1, x0
   12c90:	cset	w0, eq  // eq = none
   12c94:	and	w0, w0, #0xff
   12c98:	and	x0, x0, #0xff
   12c9c:	cmp	x0, #0x0
   12ca0:	b.eq	12cc4 <__interceptor_cfree@@Base+0x68>  // b.none
   12ca4:	ldr	x4, [sp, #32]
   12ca8:	ldr	x3, [sp, #40]
   12cac:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   12cb0:	add	x2, x0, #0xe70
   12cb4:	mov	w1, #0x3a                  	// #58
   12cb8:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   12cbc:	add	x0, x0, #0xe98
   12cc0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   12cc4:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   12cc8:	ldr	x0, [x0, #3592]
   12ccc:	ldrb	w0, [x0]
   12cd0:	eor	w0, w0, #0x1
   12cd4:	and	w0, w0, #0xff
   12cd8:	cmp	w0, #0x0
   12cdc:	b.eq	12ce4 <__interceptor_cfree@@Base+0x88>  // b.none
   12ce0:	bl	6d80 <__lsan_init@plt>
   12ce4:	ldr	x0, [sp, #24]
   12ce8:	bl	e528 <__sanitizer_print_stack_trace@@Base+0xa70>
   12cec:	nop
   12cf0:	ldr	x30, [sp], #48
   12cf4:	ret

0000000000012cf8 <__interceptor_calloc@@Base>:
   12cf8:	sub	sp, sp, #0x8e0
   12cfc:	stp	x29, x30, [sp]
   12d00:	mov	x29, sp
   12d04:	stp	x19, x20, [sp, #16]
   12d08:	str	x21, [sp, #32]
   12d0c:	str	x0, [x29, #56]
   12d10:	str	x1, [x29, #48]
   12d14:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   12d18:	ldr	x0, [x0, #4048]
   12d1c:	ldrb	w0, [x0]
   12d20:	cmp	w0, #0x0
   12d24:	b.eq	12df4 <__interceptor_calloc@@Base+0xfc>  // b.none
   12d28:	mov	x0, #0x400                 	// #1024
   12d2c:	str	x0, [x29, #2248]
   12d30:	ldr	x1, [x29, #56]
   12d34:	ldr	x0, [x29, #48]
   12d38:	mul	x0, x1, x0
   12d3c:	add	x0, x0, #0x7
   12d40:	lsr	x0, x0, #3
   12d44:	str	x0, [x29, #2240]
   12d48:	adrp	x0, 102000 <__asan_cplus_demangle_builtin_types@@Base+0x85b40>
   12d4c:	add	x0, x0, #0xfb0
   12d50:	ldr	x0, [x0]
   12d54:	lsl	x1, x0, #3
   12d58:	adrp	x0, 100000 <__asan_cplus_demangle_builtin_types@@Base+0x83b40>
   12d5c:	add	x0, x0, #0xfb0
   12d60:	add	x0, x1, x0
   12d64:	str	x0, [x29, #2232]
   12d68:	adrp	x0, 102000 <__asan_cplus_demangle_builtin_types@@Base+0x85b40>
   12d6c:	add	x0, x0, #0xfb0
   12d70:	ldr	x1, [x0]
   12d74:	ldr	x0, [x29, #2240]
   12d78:	add	x1, x1, x0
   12d7c:	adrp	x0, 102000 <__asan_cplus_demangle_builtin_types@@Base+0x85b40>
   12d80:	add	x0, x0, #0xfb0
   12d84:	str	x1, [x0]
   12d88:	adrp	x0, 102000 <__asan_cplus_demangle_builtin_types@@Base+0x85b40>
   12d8c:	add	x0, x0, #0xfb0
   12d90:	ldr	x0, [x0]
   12d94:	cmp	x0, #0x3ff
   12d98:	cset	w0, ls  // ls = plast
   12d9c:	and	w0, w0, #0xff
   12da0:	and	x0, x0, #0xff
   12da4:	str	x0, [x29, #2224]
   12da8:	str	xzr, [x29, #2216]
   12dac:	ldr	x1, [x29, #2224]
   12db0:	ldr	x0, [x29, #2216]
   12db4:	cmp	x1, x0
   12db8:	cset	w0, eq  // eq = none
   12dbc:	and	w0, w0, #0xff
   12dc0:	and	x0, x0, #0xff
   12dc4:	cmp	x0, #0x0
   12dc8:	b.eq	12dec <__interceptor_calloc@@Base+0xf4>  // b.none
   12dcc:	ldr	x4, [x29, #2216]
   12dd0:	ldr	x3, [x29, #2224]
   12dd4:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   12dd8:	add	x2, x0, #0xed0
   12ddc:	mov	w1, #0x47                  	// #71
   12de0:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   12de4:	add	x0, x0, #0xe98
   12de8:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   12dec:	ldr	x0, [x29, #2232]
   12df0:	b	12f58 <__interceptor_calloc@@Base+0x260>
   12df4:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   12df8:	ldr	x0, [x0, #4048]
   12dfc:	ldrb	w0, [x0]
   12e00:	eor	w0, w0, #0x1
   12e04:	and	w0, w0, #0xff
   12e08:	and	x0, x0, #0xff
   12e0c:	str	x0, [x29, #2264]
   12e10:	str	xzr, [x29, #2256]
   12e14:	ldr	x1, [x29, #2264]
   12e18:	ldr	x0, [x29, #2256]
   12e1c:	cmp	x1, x0
   12e20:	cset	w0, eq  // eq = none
   12e24:	and	w0, w0, #0xff
   12e28:	and	x0, x0, #0xff
   12e2c:	cmp	x0, #0x0
   12e30:	b.eq	12e54 <__interceptor_calloc@@Base+0x15c>  // b.none
   12e34:	ldr	x4, [x29, #2256]
   12e38:	ldr	x3, [x29, #2264]
   12e3c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   12e40:	add	x2, x0, #0xe70
   12e44:	mov	w1, #0x4a                  	// #74
   12e48:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   12e4c:	add	x0, x0, #0xe98
   12e50:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   12e54:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   12e58:	ldr	x0, [x0, #3592]
   12e5c:	ldrb	w0, [x0]
   12e60:	eor	w0, w0, #0x1
   12e64:	and	w0, w0, #0xff
   12e68:	cmp	w0, #0x0
   12e6c:	b.eq	12e74 <__interceptor_calloc@@Base+0x17c>  // b.none
   12e70:	bl	6d80 <__lsan_init@plt>
   12e74:	add	x0, x29, #0x48
   12e78:	bl	dc88 <__sanitizer_print_stack_trace@@Base+0x1d0>
   12e7c:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   12e80:	ldr	w0, [x0, #36]
   12e84:	sxtw	x19, w0
   12e88:	bl	2d030 <OnPrint@@Base+0x3088>
   12e8c:	mov	x20, x0
   12e90:	mov	x0, x29
   12e94:	mov	x21, x0
   12e98:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   12e9c:	ldrb	w1, [x0, #34]
   12ea0:	add	x0, x29, #0x48
   12ea4:	str	x0, [x29, #2208]
   12ea8:	str	x19, [x29, #2200]
   12eac:	str	x20, [x29, #2192]
   12eb0:	str	x21, [x29, #2184]
   12eb4:	str	xzr, [x29, #2176]
   12eb8:	mov	w0, w1
   12ebc:	strb	w0, [x29, #2175]
   12ec0:	str	xzr, [x29, #2160]
   12ec4:	str	xzr, [x29, #2152]
   12ec8:	ldrb	w0, [x29, #2175]
   12ecc:	cmp	w0, #0x0
   12ed0:	b.eq	12ef0 <__interceptor_calloc@@Base+0x1f8>  // b.none
   12ed4:	bl	15d20 <__interceptor_sigaction@@Base+0x7b8>
   12ed8:	str	x0, [x29, #2144]
   12edc:	ldr	x0, [x29, #2144]
   12ee0:	cmp	x0, #0x0
   12ee4:	b.eq	12ef0 <__interceptor_calloc@@Base+0x1f8>  // b.none
   12ee8:	mov	w0, #0x1                   	// #1
   12eec:	b	12ef4 <__interceptor_calloc@@Base+0x1fc>
   12ef0:	mov	w0, #0x0                   	// #0
   12ef4:	cmp	w0, #0x0
   12ef8:	b.eq	12f14 <__interceptor_calloc@@Base+0x21c>  // b.none
   12efc:	ldr	x0, [x29, #2144]
   12f00:	bl	dc34 <__sanitizer_print_stack_trace@@Base+0x17c>
   12f04:	str	x0, [x29, #2160]
   12f08:	ldr	x0, [x29, #2144]
   12f0c:	bl	dc1c <__sanitizer_print_stack_trace@@Base+0x164>
   12f10:	str	x0, [x29, #2152]
   12f14:	ldr	x0, [x29, #2200]
   12f18:	ldrb	w7, [x29, #2175]
   12f1c:	ldr	x6, [x29, #2152]
   12f20:	ldr	x5, [x29, #2160]
   12f24:	ldr	x4, [x29, #2176]
   12f28:	ldr	x3, [x29, #2184]
   12f2c:	ldr	x2, [x29, #2192]
   12f30:	mov	w1, w0
   12f34:	ldr	x0, [x29, #2208]
   12f38:	bl	2d758 <OnPrint@@Base+0x37b0>
   12f3c:	nop
   12f40:	add	x0, x29, #0x48
   12f44:	mov	x2, x0
   12f48:	ldr	x1, [x29, #48]
   12f4c:	ldr	x0, [x29, #56]
   12f50:	bl	e574 <__sanitizer_print_stack_trace@@Base+0xabc>
   12f54:	nop
   12f58:	ldp	x19, x20, [sp, #16]
   12f5c:	ldr	x21, [sp, #32]
   12f60:	ldp	x29, x30, [sp]
   12f64:	add	sp, sp, #0x8e0
   12f68:	ret

0000000000012f6c <__interceptor_realloc@@Base>:
   12f6c:	sub	sp, sp, #0x8b0
   12f70:	stp	x29, x30, [sp]
   12f74:	mov	x29, sp
   12f78:	stp	x19, x20, [sp, #16]
   12f7c:	str	x21, [sp, #32]
   12f80:	str	x0, [x29, #56]
   12f84:	str	x1, [x29, #48]
   12f88:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   12f8c:	ldr	x0, [x0, #4048]
   12f90:	ldrb	w0, [x0]
   12f94:	eor	w0, w0, #0x1
   12f98:	and	w0, w0, #0xff
   12f9c:	and	x0, x0, #0xff
   12fa0:	str	x0, [x29, #2216]
   12fa4:	str	xzr, [x29, #2208]
   12fa8:	ldr	x1, [x29, #2216]
   12fac:	ldr	x0, [x29, #2208]
   12fb0:	cmp	x1, x0
   12fb4:	cset	w0, eq  // eq = none
   12fb8:	and	w0, w0, #0xff
   12fbc:	and	x0, x0, #0xff
   12fc0:	cmp	x0, #0x0
   12fc4:	b.eq	12fe8 <__interceptor_realloc@@Base+0x7c>  // b.none
   12fc8:	ldr	x4, [x29, #2208]
   12fcc:	ldr	x3, [x29, #2216]
   12fd0:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   12fd4:	add	x2, x0, #0xe70
   12fd8:	mov	w1, #0x50                  	// #80
   12fdc:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   12fe0:	add	x0, x0, #0xe98
   12fe4:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   12fe8:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   12fec:	ldr	x0, [x0, #3592]
   12ff0:	ldrb	w0, [x0]
   12ff4:	eor	w0, w0, #0x1
   12ff8:	and	w0, w0, #0xff
   12ffc:	cmp	w0, #0x0
   13000:	b.eq	13008 <__interceptor_realloc@@Base+0x9c>  // b.none
   13004:	bl	6d80 <__lsan_init@plt>
   13008:	add	x0, x29, #0x40
   1300c:	bl	dc88 <__sanitizer_print_stack_trace@@Base+0x1d0>
   13010:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   13014:	ldr	w0, [x0, #36]
   13018:	sxtw	x19, w0
   1301c:	bl	2d030 <OnPrint@@Base+0x3088>
   13020:	mov	x20, x0
   13024:	mov	x0, x29
   13028:	mov	x21, x0
   1302c:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   13030:	ldrb	w1, [x0, #34]
   13034:	add	x0, x29, #0x40
   13038:	str	x0, [x29, #2200]
   1303c:	str	x19, [x29, #2192]
   13040:	str	x20, [x29, #2184]
   13044:	str	x21, [x29, #2176]
   13048:	str	xzr, [x29, #2168]
   1304c:	mov	w0, w1
   13050:	strb	w0, [x29, #2167]
   13054:	str	xzr, [x29, #2152]
   13058:	str	xzr, [x29, #2144]
   1305c:	ldrb	w0, [x29, #2167]
   13060:	cmp	w0, #0x0
   13064:	b.eq	13084 <__interceptor_realloc@@Base+0x118>  // b.none
   13068:	bl	15d20 <__interceptor_sigaction@@Base+0x7b8>
   1306c:	str	x0, [x29, #2136]
   13070:	ldr	x0, [x29, #2136]
   13074:	cmp	x0, #0x0
   13078:	b.eq	13084 <__interceptor_realloc@@Base+0x118>  // b.none
   1307c:	mov	w0, #0x1                   	// #1
   13080:	b	13088 <__interceptor_realloc@@Base+0x11c>
   13084:	mov	w0, #0x0                   	// #0
   13088:	cmp	w0, #0x0
   1308c:	b.eq	130a8 <__interceptor_realloc@@Base+0x13c>  // b.none
   13090:	ldr	x0, [x29, #2136]
   13094:	bl	dc34 <__sanitizer_print_stack_trace@@Base+0x17c>
   13098:	str	x0, [x29, #2152]
   1309c:	ldr	x0, [x29, #2136]
   130a0:	bl	dc1c <__sanitizer_print_stack_trace@@Base+0x164>
   130a4:	str	x0, [x29, #2144]
   130a8:	ldr	x0, [x29, #2192]
   130ac:	ldrb	w7, [x29, #2167]
   130b0:	ldr	x6, [x29, #2144]
   130b4:	ldr	x5, [x29, #2152]
   130b8:	ldr	x4, [x29, #2168]
   130bc:	ldr	x3, [x29, #2176]
   130c0:	ldr	x2, [x29, #2184]
   130c4:	mov	w1, w0
   130c8:	ldr	x0, [x29, #2200]
   130cc:	bl	2d758 <OnPrint@@Base+0x37b0>
   130d0:	nop
   130d4:	add	x0, x29, #0x40
   130d8:	mov	x2, x0
   130dc:	ldr	x1, [x29, #48]
   130e0:	ldr	x0, [x29, #56]
   130e4:	bl	e544 <__sanitizer_print_stack_trace@@Base+0xa8c>
   130e8:	ldp	x19, x20, [sp, #16]
   130ec:	ldr	x21, [sp, #32]
   130f0:	ldp	x29, x30, [sp]
   130f4:	add	sp, sp, #0x8b0
   130f8:	ret

00000000000130fc <__interceptor_posix_memalign@@Base>:
   130fc:	sub	sp, sp, #0x8c0
   13100:	stp	x29, x30, [sp]
   13104:	mov	x29, sp
   13108:	stp	x19, x20, [sp, #16]
   1310c:	str	x21, [sp, #32]
   13110:	str	x0, [x29, #72]
   13114:	str	x1, [x29, #64]
   13118:	str	x2, [x29, #56]
   1311c:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   13120:	ldr	x0, [x0, #4048]
   13124:	ldrb	w0, [x0]
   13128:	eor	w0, w0, #0x1
   1312c:	and	w0, w0, #0xff
   13130:	and	x0, x0, #0xff
   13134:	str	x0, [x29, #2232]
   13138:	str	xzr, [x29, #2224]
   1313c:	ldr	x1, [x29, #2232]
   13140:	ldr	x0, [x29, #2224]
   13144:	cmp	x1, x0
   13148:	cset	w0, eq  // eq = none
   1314c:	and	w0, w0, #0xff
   13150:	and	x0, x0, #0xff
   13154:	cmp	x0, #0x0
   13158:	b.eq	1317c <__interceptor_posix_memalign@@Base+0x80>  // b.none
   1315c:	ldr	x4, [x29, #2224]
   13160:	ldr	x3, [x29, #2232]
   13164:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   13168:	add	x2, x0, #0xe70
   1316c:	mov	w1, #0x56                  	// #86
   13170:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   13174:	add	x0, x0, #0xe98
   13178:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1317c:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   13180:	ldr	x0, [x0, #3592]
   13184:	ldrb	w0, [x0]
   13188:	eor	w0, w0, #0x1
   1318c:	and	w0, w0, #0xff
   13190:	cmp	w0, #0x0
   13194:	b.eq	1319c <__interceptor_posix_memalign@@Base+0xa0>  // b.none
   13198:	bl	6d80 <__lsan_init@plt>
   1319c:	add	x0, x29, #0x50
   131a0:	bl	dc88 <__sanitizer_print_stack_trace@@Base+0x1d0>
   131a4:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   131a8:	ldr	w0, [x0, #36]
   131ac:	sxtw	x19, w0
   131b0:	bl	2d030 <OnPrint@@Base+0x3088>
   131b4:	mov	x20, x0
   131b8:	mov	x0, x29
   131bc:	mov	x21, x0
   131c0:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   131c4:	ldrb	w1, [x0, #34]
   131c8:	add	x0, x29, #0x50
   131cc:	str	x0, [x29, #2216]
   131d0:	str	x19, [x29, #2208]
   131d4:	str	x20, [x29, #2200]
   131d8:	str	x21, [x29, #2192]
   131dc:	str	xzr, [x29, #2184]
   131e0:	mov	w0, w1
   131e4:	strb	w0, [x29, #2183]
   131e8:	str	xzr, [x29, #2168]
   131ec:	str	xzr, [x29, #2160]
   131f0:	ldrb	w0, [x29, #2183]
   131f4:	cmp	w0, #0x0
   131f8:	b.eq	13218 <__interceptor_posix_memalign@@Base+0x11c>  // b.none
   131fc:	bl	15d20 <__interceptor_sigaction@@Base+0x7b8>
   13200:	str	x0, [x29, #2152]
   13204:	ldr	x0, [x29, #2152]
   13208:	cmp	x0, #0x0
   1320c:	b.eq	13218 <__interceptor_posix_memalign@@Base+0x11c>  // b.none
   13210:	mov	w0, #0x1                   	// #1
   13214:	b	1321c <__interceptor_posix_memalign@@Base+0x120>
   13218:	mov	w0, #0x0                   	// #0
   1321c:	cmp	w0, #0x0
   13220:	b.eq	1323c <__interceptor_posix_memalign@@Base+0x140>  // b.none
   13224:	ldr	x0, [x29, #2152]
   13228:	bl	dc34 <__sanitizer_print_stack_trace@@Base+0x17c>
   1322c:	str	x0, [x29, #2168]
   13230:	ldr	x0, [x29, #2152]
   13234:	bl	dc1c <__sanitizer_print_stack_trace@@Base+0x164>
   13238:	str	x0, [x29, #2160]
   1323c:	ldr	x0, [x29, #2208]
   13240:	ldrb	w7, [x29, #2183]
   13244:	ldr	x6, [x29, #2160]
   13248:	ldr	x5, [x29, #2168]
   1324c:	ldr	x4, [x29, #2184]
   13250:	ldr	x3, [x29, #2192]
   13254:	ldr	x2, [x29, #2200]
   13258:	mov	w1, w0
   1325c:	ldr	x0, [x29, #2216]
   13260:	bl	2d758 <OnPrint@@Base+0x37b0>
   13264:	nop
   13268:	add	x0, x29, #0x50
   1326c:	mov	x3, x0
   13270:	ldr	x2, [x29, #56]
   13274:	ldr	x1, [x29, #64]
   13278:	ldr	x0, [x29, #72]
   1327c:	bl	e2b8 <__sanitizer_print_stack_trace@@Base+0x800>
   13280:	ldp	x19, x20, [sp, #16]
   13284:	ldr	x21, [sp, #32]
   13288:	ldp	x29, x30, [sp]
   1328c:	add	sp, sp, #0x8c0
   13290:	ret

0000000000013294 <__interceptor_valloc@@Base>:
   13294:	sub	sp, sp, #0x8b0
   13298:	stp	x29, x30, [sp]
   1329c:	mov	x29, sp
   132a0:	stp	x19, x20, [sp, #16]
   132a4:	str	x21, [sp, #32]
   132a8:	str	x0, [x29, #56]
   132ac:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   132b0:	ldr	x0, [x0, #4048]
   132b4:	ldrb	w0, [x0]
   132b8:	eor	w0, w0, #0x1
   132bc:	and	w0, w0, #0xff
   132c0:	and	x0, x0, #0xff
   132c4:	str	x0, [x29, #2216]
   132c8:	str	xzr, [x29, #2208]
   132cc:	ldr	x1, [x29, #2216]
   132d0:	ldr	x0, [x29, #2208]
   132d4:	cmp	x1, x0
   132d8:	cset	w0, eq  // eq = none
   132dc:	and	w0, w0, #0xff
   132e0:	and	x0, x0, #0xff
   132e4:	cmp	x0, #0x0
   132e8:	b.eq	1330c <__interceptor_valloc@@Base+0x78>  // b.none
   132ec:	ldr	x4, [x29, #2208]
   132f0:	ldr	x3, [x29, #2216]
   132f4:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   132f8:	add	x2, x0, #0xe70
   132fc:	mov	w1, #0x5c                  	// #92
   13300:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   13304:	add	x0, x0, #0xe98
   13308:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1330c:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   13310:	ldr	x0, [x0, #3592]
   13314:	ldrb	w0, [x0]
   13318:	eor	w0, w0, #0x1
   1331c:	and	w0, w0, #0xff
   13320:	cmp	w0, #0x0
   13324:	b.eq	1332c <__interceptor_valloc@@Base+0x98>  // b.none
   13328:	bl	6d80 <__lsan_init@plt>
   1332c:	add	x0, x29, #0x40
   13330:	bl	dc88 <__sanitizer_print_stack_trace@@Base+0x1d0>
   13334:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   13338:	ldr	w0, [x0, #36]
   1333c:	sxtw	x19, w0
   13340:	bl	2d030 <OnPrint@@Base+0x3088>
   13344:	mov	x20, x0
   13348:	mov	x0, x29
   1334c:	mov	x21, x0
   13350:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   13354:	ldrb	w1, [x0, #34]
   13358:	add	x0, x29, #0x40
   1335c:	str	x0, [x29, #2200]
   13360:	str	x19, [x29, #2192]
   13364:	str	x20, [x29, #2184]
   13368:	str	x21, [x29, #2176]
   1336c:	str	xzr, [x29, #2168]
   13370:	mov	w0, w1
   13374:	strb	w0, [x29, #2167]
   13378:	str	xzr, [x29, #2152]
   1337c:	str	xzr, [x29, #2144]
   13380:	ldrb	w0, [x29, #2167]
   13384:	cmp	w0, #0x0
   13388:	b.eq	133a8 <__interceptor_valloc@@Base+0x114>  // b.none
   1338c:	bl	15d20 <__interceptor_sigaction@@Base+0x7b8>
   13390:	str	x0, [x29, #2136]
   13394:	ldr	x0, [x29, #2136]
   13398:	cmp	x0, #0x0
   1339c:	b.eq	133a8 <__interceptor_valloc@@Base+0x114>  // b.none
   133a0:	mov	w0, #0x1                   	// #1
   133a4:	b	133ac <__interceptor_valloc@@Base+0x118>
   133a8:	mov	w0, #0x0                   	// #0
   133ac:	cmp	w0, #0x0
   133b0:	b.eq	133cc <__interceptor_valloc@@Base+0x138>  // b.none
   133b4:	ldr	x0, [x29, #2136]
   133b8:	bl	dc34 <__sanitizer_print_stack_trace@@Base+0x17c>
   133bc:	str	x0, [x29, #2152]
   133c0:	ldr	x0, [x29, #2136]
   133c4:	bl	dc1c <__sanitizer_print_stack_trace@@Base+0x164>
   133c8:	str	x0, [x29, #2144]
   133cc:	ldr	x0, [x29, #2192]
   133d0:	ldrb	w7, [x29, #2167]
   133d4:	ldr	x6, [x29, #2144]
   133d8:	ldr	x5, [x29, #2152]
   133dc:	ldr	x4, [x29, #2168]
   133e0:	ldr	x3, [x29, #2176]
   133e4:	ldr	x2, [x29, #2184]
   133e8:	mov	w1, w0
   133ec:	ldr	x0, [x29, #2200]
   133f0:	bl	2d758 <OnPrint@@Base+0x37b0>
   133f4:	nop
   133f8:	add	x0, x29, #0x40
   133fc:	mov	x1, x0
   13400:	ldr	x0, [x29, #56]
   13404:	bl	e5a0 <__sanitizer_print_stack_trace@@Base+0xae8>
   13408:	ldp	x19, x20, [sp, #16]
   1340c:	ldr	x21, [sp, #32]
   13410:	ldp	x29, x30, [sp]
   13414:	add	sp, sp, #0x8b0
   13418:	ret

000000000001341c <__interceptor_memalign@@Base>:
   1341c:	sub	sp, sp, #0x8b0
   13420:	stp	x29, x30, [sp]
   13424:	mov	x29, sp
   13428:	stp	x19, x20, [sp, #16]
   1342c:	str	x21, [sp, #32]
   13430:	str	x0, [x29, #56]
   13434:	str	x1, [x29, #48]
   13438:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   1343c:	ldr	x0, [x0, #4048]
   13440:	ldrb	w0, [x0]
   13444:	eor	w0, w0, #0x1
   13448:	and	w0, w0, #0xff
   1344c:	and	x0, x0, #0xff
   13450:	str	x0, [x29, #2216]
   13454:	str	xzr, [x29, #2208]
   13458:	ldr	x1, [x29, #2216]
   1345c:	ldr	x0, [x29, #2208]
   13460:	cmp	x1, x0
   13464:	cset	w0, eq  // eq = none
   13468:	and	w0, w0, #0xff
   1346c:	and	x0, x0, #0xff
   13470:	cmp	x0, #0x0
   13474:	b.eq	13498 <__interceptor_memalign@@Base+0x7c>  // b.none
   13478:	ldr	x4, [x29, #2208]
   1347c:	ldr	x3, [x29, #2216]
   13480:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   13484:	add	x2, x0, #0xe70
   13488:	mov	w1, #0x64                  	// #100
   1348c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   13490:	add	x0, x0, #0xe98
   13494:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   13498:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   1349c:	ldr	x0, [x0, #3592]
   134a0:	ldrb	w0, [x0]
   134a4:	eor	w0, w0, #0x1
   134a8:	and	w0, w0, #0xff
   134ac:	cmp	w0, #0x0
   134b0:	b.eq	134b8 <__interceptor_memalign@@Base+0x9c>  // b.none
   134b4:	bl	6d80 <__lsan_init@plt>
   134b8:	add	x0, x29, #0x40
   134bc:	bl	dc88 <__sanitizer_print_stack_trace@@Base+0x1d0>
   134c0:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   134c4:	ldr	w0, [x0, #36]
   134c8:	sxtw	x19, w0
   134cc:	bl	2d030 <OnPrint@@Base+0x3088>
   134d0:	mov	x20, x0
   134d4:	mov	x0, x29
   134d8:	mov	x21, x0
   134dc:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   134e0:	ldrb	w1, [x0, #34]
   134e4:	add	x0, x29, #0x40
   134e8:	str	x0, [x29, #2200]
   134ec:	str	x19, [x29, #2192]
   134f0:	str	x20, [x29, #2184]
   134f4:	str	x21, [x29, #2176]
   134f8:	str	xzr, [x29, #2168]
   134fc:	mov	w0, w1
   13500:	strb	w0, [x29, #2167]
   13504:	str	xzr, [x29, #2152]
   13508:	str	xzr, [x29, #2144]
   1350c:	ldrb	w0, [x29, #2167]
   13510:	cmp	w0, #0x0
   13514:	b.eq	13534 <__interceptor_memalign@@Base+0x118>  // b.none
   13518:	bl	15d20 <__interceptor_sigaction@@Base+0x7b8>
   1351c:	str	x0, [x29, #2136]
   13520:	ldr	x0, [x29, #2136]
   13524:	cmp	x0, #0x0
   13528:	b.eq	13534 <__interceptor_memalign@@Base+0x118>  // b.none
   1352c:	mov	w0, #0x1                   	// #1
   13530:	b	13538 <__interceptor_memalign@@Base+0x11c>
   13534:	mov	w0, #0x0                   	// #0
   13538:	cmp	w0, #0x0
   1353c:	b.eq	13558 <__interceptor_memalign@@Base+0x13c>  // b.none
   13540:	ldr	x0, [x29, #2136]
   13544:	bl	dc34 <__sanitizer_print_stack_trace@@Base+0x17c>
   13548:	str	x0, [x29, #2152]
   1354c:	ldr	x0, [x29, #2136]
   13550:	bl	dc1c <__sanitizer_print_stack_trace@@Base+0x164>
   13554:	str	x0, [x29, #2144]
   13558:	ldr	x0, [x29, #2192]
   1355c:	ldrb	w7, [x29, #2167]
   13560:	ldr	x6, [x29, #2144]
   13564:	ldr	x5, [x29, #2152]
   13568:	ldr	x4, [x29, #2168]
   1356c:	ldr	x3, [x29, #2176]
   13570:	ldr	x2, [x29, #2184]
   13574:	mov	w1, w0
   13578:	ldr	x0, [x29, #2200]
   1357c:	bl	2d758 <OnPrint@@Base+0x37b0>
   13580:	nop
   13584:	add	x0, x29, #0x40
   13588:	mov	x2, x0
   1358c:	ldr	x1, [x29, #48]
   13590:	ldr	x0, [x29, #56]
   13594:	bl	e468 <__sanitizer_print_stack_trace@@Base+0x9b0>
   13598:	ldp	x19, x20, [sp, #16]
   1359c:	ldr	x21, [sp, #32]
   135a0:	ldp	x29, x30, [sp]
   135a4:	add	sp, sp, #0x8b0
   135a8:	ret

00000000000135ac <__interceptor___libc_memalign@@Base>:
   135ac:	sub	sp, sp, #0x8c0
   135b0:	stp	x29, x30, [sp]
   135b4:	mov	x29, sp
   135b8:	stp	x19, x20, [sp, #16]
   135bc:	str	x21, [sp, #32]
   135c0:	str	x0, [x29, #56]
   135c4:	str	x1, [x29, #48]
   135c8:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   135cc:	ldr	x0, [x0, #4048]
   135d0:	ldrb	w0, [x0]
   135d4:	eor	w0, w0, #0x1
   135d8:	and	w0, w0, #0xff
   135dc:	and	x0, x0, #0xff
   135e0:	str	x0, [x29, #2232]
   135e4:	str	xzr, [x29, #2224]
   135e8:	ldr	x1, [x29, #2232]
   135ec:	ldr	x0, [x29, #2224]
   135f0:	cmp	x1, x0
   135f4:	cset	w0, eq  // eq = none
   135f8:	and	w0, w0, #0xff
   135fc:	and	x0, x0, #0xff
   13600:	cmp	x0, #0x0
   13604:	b.eq	13628 <__interceptor___libc_memalign@@Base+0x7c>  // b.none
   13608:	ldr	x4, [x29, #2224]
   1360c:	ldr	x3, [x29, #2232]
   13610:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   13614:	add	x2, x0, #0xe70
   13618:	mov	w1, #0x6b                  	// #107
   1361c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   13620:	add	x0, x0, #0xe98
   13624:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   13628:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   1362c:	ldr	x0, [x0, #3592]
   13630:	ldrb	w0, [x0]
   13634:	eor	w0, w0, #0x1
   13638:	and	w0, w0, #0xff
   1363c:	cmp	w0, #0x0
   13640:	b.eq	13648 <__interceptor___libc_memalign@@Base+0x9c>  // b.none
   13644:	bl	6d80 <__lsan_init@plt>
   13648:	add	x0, x29, #0x48
   1364c:	bl	dc88 <__sanitizer_print_stack_trace@@Base+0x1d0>
   13650:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   13654:	ldr	w0, [x0, #36]
   13658:	sxtw	x19, w0
   1365c:	bl	2d030 <OnPrint@@Base+0x3088>
   13660:	mov	x20, x0
   13664:	mov	x0, x29
   13668:	mov	x21, x0
   1366c:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   13670:	ldrb	w1, [x0, #34]
   13674:	add	x0, x29, #0x48
   13678:	str	x0, [x29, #2208]
   1367c:	str	x19, [x29, #2200]
   13680:	str	x20, [x29, #2192]
   13684:	str	x21, [x29, #2184]
   13688:	str	xzr, [x29, #2176]
   1368c:	mov	w0, w1
   13690:	strb	w0, [x29, #2175]
   13694:	str	xzr, [x29, #2160]
   13698:	str	xzr, [x29, #2152]
   1369c:	ldrb	w0, [x29, #2175]
   136a0:	cmp	w0, #0x0
   136a4:	b.eq	136c4 <__interceptor___libc_memalign@@Base+0x118>  // b.none
   136a8:	bl	15d20 <__interceptor_sigaction@@Base+0x7b8>
   136ac:	str	x0, [x29, #2144]
   136b0:	ldr	x0, [x29, #2144]
   136b4:	cmp	x0, #0x0
   136b8:	b.eq	136c4 <__interceptor___libc_memalign@@Base+0x118>  // b.none
   136bc:	mov	w0, #0x1                   	// #1
   136c0:	b	136c8 <__interceptor___libc_memalign@@Base+0x11c>
   136c4:	mov	w0, #0x0                   	// #0
   136c8:	cmp	w0, #0x0
   136cc:	b.eq	136e8 <__interceptor___libc_memalign@@Base+0x13c>  // b.none
   136d0:	ldr	x0, [x29, #2144]
   136d4:	bl	dc34 <__sanitizer_print_stack_trace@@Base+0x17c>
   136d8:	str	x0, [x29, #2160]
   136dc:	ldr	x0, [x29, #2144]
   136e0:	bl	dc1c <__sanitizer_print_stack_trace@@Base+0x164>
   136e4:	str	x0, [x29, #2152]
   136e8:	ldr	x0, [x29, #2200]
   136ec:	ldrb	w7, [x29, #2175]
   136f0:	ldr	x6, [x29, #2152]
   136f4:	ldr	x5, [x29, #2160]
   136f8:	ldr	x4, [x29, #2176]
   136fc:	ldr	x3, [x29, #2184]
   13700:	ldr	x2, [x29, #2192]
   13704:	mov	w1, w0
   13708:	ldr	x0, [x29, #2208]
   1370c:	bl	2d758 <OnPrint@@Base+0x37b0>
   13710:	nop
   13714:	add	x0, x29, #0x48
   13718:	mov	x2, x0
   1371c:	ldr	x1, [x29, #48]
   13720:	ldr	x0, [x29, #56]
   13724:	bl	e468 <__sanitizer_print_stack_trace@@Base+0x9b0>
   13728:	str	x0, [x29, #2216]
   1372c:	ldr	x1, [x29, #48]
   13730:	ldr	x0, [x29, #2216]
   13734:	bl	37ba0 <__sanitizer_set_death_callback@@Base+0x1f00>
   13738:	ldr	x0, [x29, #2216]
   1373c:	ldp	x19, x20, [sp, #16]
   13740:	ldr	x21, [sp, #32]
   13744:	ldp	x29, x30, [sp]
   13748:	add	sp, sp, #0x8c0
   1374c:	ret

0000000000013750 <__interceptor_aligned_alloc@@Base>:
   13750:	sub	sp, sp, #0x8b0
   13754:	stp	x29, x30, [sp]
   13758:	mov	x29, sp
   1375c:	stp	x19, x20, [sp, #16]
   13760:	str	x21, [sp, #32]
   13764:	str	x0, [x29, #56]
   13768:	str	x1, [x29, #48]
   1376c:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   13770:	ldr	x0, [x0, #4048]
   13774:	ldrb	w0, [x0]
   13778:	eor	w0, w0, #0x1
   1377c:	and	w0, w0, #0xff
   13780:	and	x0, x0, #0xff
   13784:	str	x0, [x29, #2216]
   13788:	str	xzr, [x29, #2208]
   1378c:	ldr	x1, [x29, #2216]
   13790:	ldr	x0, [x29, #2208]
   13794:	cmp	x1, x0
   13798:	cset	w0, eq  // eq = none
   1379c:	and	w0, w0, #0xff
   137a0:	and	x0, x0, #0xff
   137a4:	cmp	x0, #0x0
   137a8:	b.eq	137cc <__interceptor_aligned_alloc@@Base+0x7c>  // b.none
   137ac:	ldr	x4, [x29, #2208]
   137b0:	ldr	x3, [x29, #2216]
   137b4:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   137b8:	add	x2, x0, #0xe70
   137bc:	mov	w1, #0x79                  	// #121
   137c0:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   137c4:	add	x0, x0, #0xe98
   137c8:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   137cc:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   137d0:	ldr	x0, [x0, #3592]
   137d4:	ldrb	w0, [x0]
   137d8:	eor	w0, w0, #0x1
   137dc:	and	w0, w0, #0xff
   137e0:	cmp	w0, #0x0
   137e4:	b.eq	137ec <__interceptor_aligned_alloc@@Base+0x9c>  // b.none
   137e8:	bl	6d80 <__lsan_init@plt>
   137ec:	add	x0, x29, #0x40
   137f0:	bl	dc88 <__sanitizer_print_stack_trace@@Base+0x1d0>
   137f4:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   137f8:	ldr	w0, [x0, #36]
   137fc:	sxtw	x19, w0
   13800:	bl	2d030 <OnPrint@@Base+0x3088>
   13804:	mov	x20, x0
   13808:	mov	x0, x29
   1380c:	mov	x21, x0
   13810:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   13814:	ldrb	w1, [x0, #34]
   13818:	add	x0, x29, #0x40
   1381c:	str	x0, [x29, #2200]
   13820:	str	x19, [x29, #2192]
   13824:	str	x20, [x29, #2184]
   13828:	str	x21, [x29, #2176]
   1382c:	str	xzr, [x29, #2168]
   13830:	mov	w0, w1
   13834:	strb	w0, [x29, #2167]
   13838:	str	xzr, [x29, #2152]
   1383c:	str	xzr, [x29, #2144]
   13840:	ldrb	w0, [x29, #2167]
   13844:	cmp	w0, #0x0
   13848:	b.eq	13868 <__interceptor_aligned_alloc@@Base+0x118>  // b.none
   1384c:	bl	15d20 <__interceptor_sigaction@@Base+0x7b8>
   13850:	str	x0, [x29, #2136]
   13854:	ldr	x0, [x29, #2136]
   13858:	cmp	x0, #0x0
   1385c:	b.eq	13868 <__interceptor_aligned_alloc@@Base+0x118>  // b.none
   13860:	mov	w0, #0x1                   	// #1
   13864:	b	1386c <__interceptor_aligned_alloc@@Base+0x11c>
   13868:	mov	w0, #0x0                   	// #0
   1386c:	cmp	w0, #0x0
   13870:	b.eq	1388c <__interceptor_aligned_alloc@@Base+0x13c>  // b.none
   13874:	ldr	x0, [x29, #2136]
   13878:	bl	dc34 <__sanitizer_print_stack_trace@@Base+0x17c>
   1387c:	str	x0, [x29, #2152]
   13880:	ldr	x0, [x29, #2136]
   13884:	bl	dc1c <__sanitizer_print_stack_trace@@Base+0x164>
   13888:	str	x0, [x29, #2144]
   1388c:	ldr	x0, [x29, #2192]
   13890:	ldrb	w7, [x29, #2167]
   13894:	ldr	x6, [x29, #2144]
   13898:	ldr	x5, [x29, #2152]
   1389c:	ldr	x4, [x29, #2168]
   138a0:	ldr	x3, [x29, #2176]
   138a4:	ldr	x2, [x29, #2184]
   138a8:	mov	w1, w0
   138ac:	ldr	x0, [x29, #2200]
   138b0:	bl	2d758 <OnPrint@@Base+0x37b0>
   138b4:	nop
   138b8:	add	x0, x29, #0x40
   138bc:	mov	x2, x0
   138c0:	ldr	x1, [x29, #48]
   138c4:	ldr	x0, [x29, #56]
   138c8:	bl	e3cc <__sanitizer_print_stack_trace@@Base+0x914>
   138cc:	ldp	x19, x20, [sp, #16]
   138d0:	ldr	x21, [sp, #32]
   138d4:	ldp	x29, x30, [sp]
   138d8:	add	sp, sp, #0x8b0
   138dc:	ret

00000000000138e0 <__interceptor_malloc_usable_size@@Base>:
   138e0:	str	x30, [sp, #-48]!
   138e4:	str	x0, [sp, #24]
   138e8:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   138ec:	ldr	x0, [x0, #4048]
   138f0:	ldrb	w0, [x0]
   138f4:	eor	w0, w0, #0x1
   138f8:	and	w0, w0, #0xff
   138fc:	and	x0, x0, #0xff
   13900:	str	x0, [sp, #40]
   13904:	str	xzr, [sp, #32]
   13908:	ldr	x1, [sp, #40]
   1390c:	ldr	x0, [sp, #32]
   13910:	cmp	x1, x0
   13914:	cset	w0, eq  // eq = none
   13918:	and	w0, w0, #0xff
   1391c:	and	x0, x0, #0xff
   13920:	cmp	x0, #0x0
   13924:	b.eq	13948 <__interceptor_malloc_usable_size@@Base+0x68>  // b.none
   13928:	ldr	x4, [sp, #32]
   1392c:	ldr	x3, [sp, #40]
   13930:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   13934:	add	x2, x0, #0xe70
   13938:	mov	w1, #0x84                  	// #132
   1393c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   13940:	add	x0, x0, #0xe98
   13944:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   13948:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   1394c:	ldr	x0, [x0, #3592]
   13950:	ldrb	w0, [x0]
   13954:	eor	w0, w0, #0x1
   13958:	and	w0, w0, #0xff
   1395c:	cmp	w0, #0x0
   13960:	b.eq	13968 <__interceptor_malloc_usable_size@@Base+0x88>  // b.none
   13964:	bl	6d80 <__lsan_init@plt>
   13968:	ldr	x0, [sp, #24]
   1396c:	bl	e27c <__sanitizer_print_stack_trace@@Base+0x7c4>
   13970:	ldr	x30, [sp], #48
   13974:	ret

0000000000013978 <__interceptor_mallinfo@@Base>:
   13978:	str	x30, [sp, #-16]!
   1397c:	mov	x0, x8
   13980:	mov	x2, #0x28                  	// #40
   13984:	mov	w1, #0x0                   	// #0
   13988:	bl	21754 <__sanitizer_set_report_fd@@Base+0x255c>
   1398c:	nop
   13990:	ldr	x30, [sp], #16
   13994:	ret

0000000000013998 <__interceptor_mallopt@@Base>:
   13998:	sub	sp, sp, #0x10
   1399c:	str	w0, [sp, #12]
   139a0:	str	w1, [sp, #8]
   139a4:	mov	w0, #0xffffffff            	// #-1
   139a8:	add	sp, sp, #0x10
   139ac:	ret

00000000000139b0 <__interceptor_pvalloc@@Base>:
   139b0:	sub	sp, sp, #0x8b0
   139b4:	stp	x29, x30, [sp]
   139b8:	mov	x29, sp
   139bc:	stp	x19, x20, [sp, #16]
   139c0:	str	x21, [sp, #32]
   139c4:	str	x0, [x29, #56]
   139c8:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   139cc:	ldr	x0, [x0, #4048]
   139d0:	ldrb	w0, [x0]
   139d4:	eor	w0, w0, #0x1
   139d8:	and	w0, w0, #0xff
   139dc:	and	x0, x0, #0xff
   139e0:	str	x0, [x29, #2216]
   139e4:	str	xzr, [x29, #2208]
   139e8:	ldr	x1, [x29, #2216]
   139ec:	ldr	x0, [x29, #2208]
   139f0:	cmp	x1, x0
   139f4:	cset	w0, eq  // eq = none
   139f8:	and	w0, w0, #0xff
   139fc:	and	x0, x0, #0xff
   13a00:	cmp	x0, #0x0
   13a04:	b.eq	13a28 <__interceptor_pvalloc@@Base+0x78>  // b.none
   13a08:	ldr	x4, [x29, #2208]
   13a0c:	ldr	x3, [x29, #2216]
   13a10:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   13a14:	add	x2, x0, #0xe70
   13a18:	mov	w1, #0xa4                  	// #164
   13a1c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   13a20:	add	x0, x0, #0xe98
   13a24:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   13a28:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   13a2c:	ldr	x0, [x0, #3592]
   13a30:	ldrb	w0, [x0]
   13a34:	eor	w0, w0, #0x1
   13a38:	and	w0, w0, #0xff
   13a3c:	cmp	w0, #0x0
   13a40:	b.eq	13a48 <__interceptor_pvalloc@@Base+0x98>  // b.none
   13a44:	bl	6d80 <__lsan_init@plt>
   13a48:	add	x0, x29, #0x40
   13a4c:	bl	dc88 <__sanitizer_print_stack_trace@@Base+0x1d0>
   13a50:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   13a54:	ldr	w0, [x0, #36]
   13a58:	sxtw	x19, w0
   13a5c:	bl	2d030 <OnPrint@@Base+0x3088>
   13a60:	mov	x20, x0
   13a64:	mov	x0, x29
   13a68:	mov	x21, x0
   13a6c:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   13a70:	ldrb	w1, [x0, #34]
   13a74:	add	x0, x29, #0x40
   13a78:	str	x0, [x29, #2200]
   13a7c:	str	x19, [x29, #2192]
   13a80:	str	x20, [x29, #2184]
   13a84:	str	x21, [x29, #2176]
   13a88:	str	xzr, [x29, #2168]
   13a8c:	mov	w0, w1
   13a90:	strb	w0, [x29, #2167]
   13a94:	str	xzr, [x29, #2152]
   13a98:	str	xzr, [x29, #2144]
   13a9c:	ldrb	w0, [x29, #2167]
   13aa0:	cmp	w0, #0x0
   13aa4:	b.eq	13ac4 <__interceptor_pvalloc@@Base+0x114>  // b.none
   13aa8:	bl	15d20 <__interceptor_sigaction@@Base+0x7b8>
   13aac:	str	x0, [x29, #2136]
   13ab0:	ldr	x0, [x29, #2136]
   13ab4:	cmp	x0, #0x0
   13ab8:	b.eq	13ac4 <__interceptor_pvalloc@@Base+0x114>  // b.none
   13abc:	mov	w0, #0x1                   	// #1
   13ac0:	b	13ac8 <__interceptor_pvalloc@@Base+0x118>
   13ac4:	mov	w0, #0x0                   	// #0
   13ac8:	cmp	w0, #0x0
   13acc:	b.eq	13ae8 <__interceptor_pvalloc@@Base+0x138>  // b.none
   13ad0:	ldr	x0, [x29, #2136]
   13ad4:	bl	dc34 <__sanitizer_print_stack_trace@@Base+0x17c>
   13ad8:	str	x0, [x29, #2152]
   13adc:	ldr	x0, [x29, #2136]
   13ae0:	bl	dc1c <__sanitizer_print_stack_trace@@Base+0x164>
   13ae4:	str	x0, [x29, #2144]
   13ae8:	ldr	x0, [x29, #2192]
   13aec:	ldrb	w7, [x29, #2167]
   13af0:	ldr	x6, [x29, #2144]
   13af4:	ldr	x5, [x29, #2152]
   13af8:	ldr	x4, [x29, #2168]
   13afc:	ldr	x3, [x29, #2176]
   13b00:	ldr	x2, [x29, #2184]
   13b04:	mov	w1, w0
   13b08:	ldr	x0, [x29, #2200]
   13b0c:	bl	2d758 <OnPrint@@Base+0x37b0>
   13b10:	nop
   13b14:	add	x0, x29, #0x40
   13b18:	mov	x1, x0
   13b1c:	ldr	x0, [x29, #56]
   13b20:	bl	e5d0 <__sanitizer_print_stack_trace@@Base+0xb18>
   13b24:	ldp	x19, x20, [sp, #16]
   13b28:	ldr	x21, [sp, #32]
   13b2c:	ldp	x29, x30, [sp]
   13b30:	add	sp, sp, #0x8b0
   13b34:	ret

0000000000013b38 <__interceptor_mcheck@@Base>:
   13b38:	sub	sp, sp, #0x10
   13b3c:	str	x0, [sp, #8]
   13b40:	mov	w0, #0x0                   	// #0
   13b44:	add	sp, sp, #0x10
   13b48:	ret

0000000000013b4c <__interceptor_mcheck_pedantic@@Base>:
   13b4c:	sub	sp, sp, #0x10
   13b50:	str	x0, [sp, #8]
   13b54:	mov	w0, #0x0                   	// #0
   13b58:	add	sp, sp, #0x10
   13b5c:	ret

0000000000013b60 <__interceptor_mprobe@@Base>:
   13b60:	sub	sp, sp, #0x10
   13b64:	str	x0, [sp, #8]
   13b68:	mov	w0, #0x0                   	// #0
   13b6c:	add	sp, sp, #0x10
   13b70:	ret

0000000000013b74 <_Znwm@@Base>:
   13b74:	sub	sp, sp, #0x8c0
   13b78:	stp	x29, x30, [sp]
   13b7c:	mov	x29, sp
   13b80:	stp	x19, x20, [sp, #16]
   13b84:	str	x21, [sp, #32]
   13b88:	str	x0, [x29, #56]
   13b8c:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   13b90:	ldr	x0, [x0, #4048]
   13b94:	ldrb	w0, [x0]
   13b98:	eor	w0, w0, #0x1
   13b9c:	and	w0, w0, #0xff
   13ba0:	and	x0, x0, #0xff
   13ba4:	str	x0, [x29, #2232]
   13ba8:	str	xzr, [x29, #2224]
   13bac:	ldr	x1, [x29, #2232]
   13bb0:	ldr	x0, [x29, #2224]
   13bb4:	cmp	x1, x0
   13bb8:	cset	w0, eq  // eq = none
   13bbc:	and	w0, w0, #0xff
   13bc0:	and	x0, x0, #0xff
   13bc4:	cmp	x0, #0x0
   13bc8:	b.eq	13bec <_Znwm@@Base+0x78>  // b.none
   13bcc:	ldr	x4, [x29, #2224]
   13bd0:	ldr	x3, [x29, #2232]
   13bd4:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   13bd8:	add	x2, x0, #0xe70
   13bdc:	mov	w1, #0xde                  	// #222
   13be0:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   13be4:	add	x0, x0, #0xe98
   13be8:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   13bec:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   13bf0:	ldr	x0, [x0, #3592]
   13bf4:	ldrb	w0, [x0]
   13bf8:	eor	w0, w0, #0x1
   13bfc:	and	w0, w0, #0xff
   13c00:	cmp	w0, #0x0
   13c04:	b.eq	13c0c <_Znwm@@Base+0x98>  // b.none
   13c08:	bl	6d80 <__lsan_init@plt>
   13c0c:	add	x0, x29, #0x48
   13c10:	bl	dc88 <__sanitizer_print_stack_trace@@Base+0x1d0>
   13c14:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   13c18:	ldr	w0, [x0, #36]
   13c1c:	sxtw	x19, w0
   13c20:	bl	2d030 <OnPrint@@Base+0x3088>
   13c24:	mov	x20, x0
   13c28:	mov	x0, x29
   13c2c:	mov	x21, x0
   13c30:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   13c34:	ldrb	w1, [x0, #34]
   13c38:	add	x0, x29, #0x48
   13c3c:	str	x0, [x29, #2208]
   13c40:	str	x19, [x29, #2200]
   13c44:	str	x20, [x29, #2192]
   13c48:	str	x21, [x29, #2184]
   13c4c:	str	xzr, [x29, #2176]
   13c50:	mov	w0, w1
   13c54:	strb	w0, [x29, #2175]
   13c58:	str	xzr, [x29, #2160]
   13c5c:	str	xzr, [x29, #2152]
   13c60:	ldrb	w0, [x29, #2175]
   13c64:	cmp	w0, #0x0
   13c68:	b.eq	13c88 <_Znwm@@Base+0x114>  // b.none
   13c6c:	bl	15d20 <__interceptor_sigaction@@Base+0x7b8>
   13c70:	str	x0, [x29, #2144]
   13c74:	ldr	x0, [x29, #2144]
   13c78:	cmp	x0, #0x0
   13c7c:	b.eq	13c88 <_Znwm@@Base+0x114>  // b.none
   13c80:	mov	w0, #0x1                   	// #1
   13c84:	b	13c8c <_Znwm@@Base+0x118>
   13c88:	mov	w0, #0x0                   	// #0
   13c8c:	cmp	w0, #0x0
   13c90:	b.eq	13cac <_Znwm@@Base+0x138>  // b.none
   13c94:	ldr	x0, [x29, #2144]
   13c98:	bl	dc34 <__sanitizer_print_stack_trace@@Base+0x17c>
   13c9c:	str	x0, [x29, #2160]
   13ca0:	ldr	x0, [x29, #2144]
   13ca4:	bl	dc1c <__sanitizer_print_stack_trace@@Base+0x164>
   13ca8:	str	x0, [x29, #2152]
   13cac:	ldr	x0, [x29, #2200]
   13cb0:	ldrb	w7, [x29, #2175]
   13cb4:	ldr	x6, [x29, #2152]
   13cb8:	ldr	x5, [x29, #2160]
   13cbc:	ldr	x4, [x29, #2176]
   13cc0:	ldr	x3, [x29, #2184]
   13cc4:	ldr	x2, [x29, #2192]
   13cc8:	mov	w1, w0
   13ccc:	ldr	x0, [x29, #2208]
   13cd0:	bl	2d758 <OnPrint@@Base+0x37b0>
   13cd4:	nop
   13cd8:	add	x0, x29, #0x48
   13cdc:	mov	x1, x0
   13ce0:	ldr	x0, [x29, #56]
   13ce4:	bl	e4fc <__sanitizer_print_stack_trace@@Base+0xa44>
   13ce8:	str	x0, [x29, #2216]
   13cec:	ldr	x0, [x29, #2216]
   13cf0:	cmp	x0, #0x0
   13cf4:	cset	w0, eq  // eq = none
   13cf8:	and	w0, w0, #0xff
   13cfc:	and	x0, x0, #0xff
   13d00:	cmp	x0, #0x0
   13d04:	b.eq	13d18 <_Znwm@@Base+0x1a4>  // b.none
   13d08:	add	x0, x29, #0x48
   13d0c:	mov	x1, x0
   13d10:	ldr	x0, [x29, #56]
   13d14:	bl	19100 <__sancov_default_options@@Base+0x2f64>
   13d18:	ldr	x0, [x29, #2216]
   13d1c:	ldp	x19, x20, [sp, #16]
   13d20:	ldr	x21, [sp, #32]
   13d24:	ldp	x29, x30, [sp]
   13d28:	add	sp, sp, #0x8c0
   13d2c:	ret

0000000000013d30 <_Znam@@Base>:
   13d30:	sub	sp, sp, #0x8c0
   13d34:	stp	x29, x30, [sp]
   13d38:	mov	x29, sp
   13d3c:	stp	x19, x20, [sp, #16]
   13d40:	str	x21, [sp, #32]
   13d44:	str	x0, [x29, #56]
   13d48:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   13d4c:	ldr	x0, [x0, #4048]
   13d50:	ldrb	w0, [x0]
   13d54:	eor	w0, w0, #0x1
   13d58:	and	w0, w0, #0xff
   13d5c:	and	x0, x0, #0xff
   13d60:	str	x0, [x29, #2232]
   13d64:	str	xzr, [x29, #2224]
   13d68:	ldr	x1, [x29, #2232]
   13d6c:	ldr	x0, [x29, #2224]
   13d70:	cmp	x1, x0
   13d74:	cset	w0, eq  // eq = none
   13d78:	and	w0, w0, #0xff
   13d7c:	and	x0, x0, #0xff
   13d80:	cmp	x0, #0x0
   13d84:	b.eq	13da8 <_Znam@@Base+0x78>  // b.none
   13d88:	ldr	x4, [x29, #2224]
   13d8c:	ldr	x3, [x29, #2232]
   13d90:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   13d94:	add	x2, x0, #0xe70
   13d98:	mov	w1, #0xe0                  	// #224
   13d9c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   13da0:	add	x0, x0, #0xe98
   13da4:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   13da8:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   13dac:	ldr	x0, [x0, #3592]
   13db0:	ldrb	w0, [x0]
   13db4:	eor	w0, w0, #0x1
   13db8:	and	w0, w0, #0xff
   13dbc:	cmp	w0, #0x0
   13dc0:	b.eq	13dc8 <_Znam@@Base+0x98>  // b.none
   13dc4:	bl	6d80 <__lsan_init@plt>
   13dc8:	add	x0, x29, #0x48
   13dcc:	bl	dc88 <__sanitizer_print_stack_trace@@Base+0x1d0>
   13dd0:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   13dd4:	ldr	w0, [x0, #36]
   13dd8:	sxtw	x19, w0
   13ddc:	bl	2d030 <OnPrint@@Base+0x3088>
   13de0:	mov	x20, x0
   13de4:	mov	x0, x29
   13de8:	mov	x21, x0
   13dec:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   13df0:	ldrb	w1, [x0, #34]
   13df4:	add	x0, x29, #0x48
   13df8:	str	x0, [x29, #2208]
   13dfc:	str	x19, [x29, #2200]
   13e00:	str	x20, [x29, #2192]
   13e04:	str	x21, [x29, #2184]
   13e08:	str	xzr, [x29, #2176]
   13e0c:	mov	w0, w1
   13e10:	strb	w0, [x29, #2175]
   13e14:	str	xzr, [x29, #2160]
   13e18:	str	xzr, [x29, #2152]
   13e1c:	ldrb	w0, [x29, #2175]
   13e20:	cmp	w0, #0x0
   13e24:	b.eq	13e44 <_Znam@@Base+0x114>  // b.none
   13e28:	bl	15d20 <__interceptor_sigaction@@Base+0x7b8>
   13e2c:	str	x0, [x29, #2144]
   13e30:	ldr	x0, [x29, #2144]
   13e34:	cmp	x0, #0x0
   13e38:	b.eq	13e44 <_Znam@@Base+0x114>  // b.none
   13e3c:	mov	w0, #0x1                   	// #1
   13e40:	b	13e48 <_Znam@@Base+0x118>
   13e44:	mov	w0, #0x0                   	// #0
   13e48:	cmp	w0, #0x0
   13e4c:	b.eq	13e68 <_Znam@@Base+0x138>  // b.none
   13e50:	ldr	x0, [x29, #2144]
   13e54:	bl	dc34 <__sanitizer_print_stack_trace@@Base+0x17c>
   13e58:	str	x0, [x29, #2160]
   13e5c:	ldr	x0, [x29, #2144]
   13e60:	bl	dc1c <__sanitizer_print_stack_trace@@Base+0x164>
   13e64:	str	x0, [x29, #2152]
   13e68:	ldr	x0, [x29, #2200]
   13e6c:	ldrb	w7, [x29, #2175]
   13e70:	ldr	x6, [x29, #2152]
   13e74:	ldr	x5, [x29, #2160]
   13e78:	ldr	x4, [x29, #2176]
   13e7c:	ldr	x3, [x29, #2184]
   13e80:	ldr	x2, [x29, #2192]
   13e84:	mov	w1, w0
   13e88:	ldr	x0, [x29, #2208]
   13e8c:	bl	2d758 <OnPrint@@Base+0x37b0>
   13e90:	nop
   13e94:	add	x0, x29, #0x48
   13e98:	mov	x1, x0
   13e9c:	ldr	x0, [x29, #56]
   13ea0:	bl	e4fc <__sanitizer_print_stack_trace@@Base+0xa44>
   13ea4:	str	x0, [x29, #2216]
   13ea8:	ldr	x0, [x29, #2216]
   13eac:	cmp	x0, #0x0
   13eb0:	cset	w0, eq  // eq = none
   13eb4:	and	w0, w0, #0xff
   13eb8:	and	x0, x0, #0xff
   13ebc:	cmp	x0, #0x0
   13ec0:	b.eq	13ed4 <_Znam@@Base+0x1a4>  // b.none
   13ec4:	add	x0, x29, #0x48
   13ec8:	mov	x1, x0
   13ecc:	ldr	x0, [x29, #56]
   13ed0:	bl	19100 <__sancov_default_options@@Base+0x2f64>
   13ed4:	ldr	x0, [x29, #2216]
   13ed8:	ldp	x19, x20, [sp, #16]
   13edc:	ldr	x21, [sp, #32]
   13ee0:	ldp	x29, x30, [sp]
   13ee4:	add	sp, sp, #0x8c0
   13ee8:	ret

0000000000013eec <_ZnwmRKSt9nothrow_t@@Base>:
   13eec:	sub	sp, sp, #0x8c0
   13ef0:	stp	x29, x30, [sp]
   13ef4:	mov	x29, sp
   13ef8:	stp	x19, x20, [sp, #16]
   13efc:	str	x21, [sp, #32]
   13f00:	str	x0, [x29, #56]
   13f04:	str	x1, [x29, #48]
   13f08:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   13f0c:	ldr	x0, [x0, #4048]
   13f10:	ldrb	w0, [x0]
   13f14:	eor	w0, w0, #0x1
   13f18:	and	w0, w0, #0xff
   13f1c:	and	x0, x0, #0xff
   13f20:	str	x0, [x29, #2232]
   13f24:	str	xzr, [x29, #2224]
   13f28:	ldr	x1, [x29, #2232]
   13f2c:	ldr	x0, [x29, #2224]
   13f30:	cmp	x1, x0
   13f34:	cset	w0, eq  // eq = none
   13f38:	and	w0, w0, #0xff
   13f3c:	and	x0, x0, #0xff
   13f40:	cmp	x0, #0x0
   13f44:	b.eq	13f68 <_ZnwmRKSt9nothrow_t@@Base+0x7c>  // b.none
   13f48:	ldr	x4, [x29, #2224]
   13f4c:	ldr	x3, [x29, #2232]
   13f50:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   13f54:	add	x2, x0, #0xe70
   13f58:	mov	w1, #0xe3                  	// #227
   13f5c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   13f60:	add	x0, x0, #0xe98
   13f64:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   13f68:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   13f6c:	ldr	x0, [x0, #3592]
   13f70:	ldrb	w0, [x0]
   13f74:	eor	w0, w0, #0x1
   13f78:	and	w0, w0, #0xff
   13f7c:	cmp	w0, #0x0
   13f80:	b.eq	13f88 <_ZnwmRKSt9nothrow_t@@Base+0x9c>  // b.none
   13f84:	bl	6d80 <__lsan_init@plt>
   13f88:	add	x0, x29, #0x48
   13f8c:	bl	dc88 <__sanitizer_print_stack_trace@@Base+0x1d0>
   13f90:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   13f94:	ldr	w0, [x0, #36]
   13f98:	sxtw	x19, w0
   13f9c:	bl	2d030 <OnPrint@@Base+0x3088>
   13fa0:	mov	x20, x0
   13fa4:	mov	x0, x29
   13fa8:	mov	x21, x0
   13fac:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   13fb0:	ldrb	w1, [x0, #34]
   13fb4:	add	x0, x29, #0x48
   13fb8:	str	x0, [x29, #2208]
   13fbc:	str	x19, [x29, #2200]
   13fc0:	str	x20, [x29, #2192]
   13fc4:	str	x21, [x29, #2184]
   13fc8:	str	xzr, [x29, #2176]
   13fcc:	mov	w0, w1
   13fd0:	strb	w0, [x29, #2175]
   13fd4:	str	xzr, [x29, #2160]
   13fd8:	str	xzr, [x29, #2152]
   13fdc:	ldrb	w0, [x29, #2175]
   13fe0:	cmp	w0, #0x0
   13fe4:	b.eq	14004 <_ZnwmRKSt9nothrow_t@@Base+0x118>  // b.none
   13fe8:	bl	15d20 <__interceptor_sigaction@@Base+0x7b8>
   13fec:	str	x0, [x29, #2144]
   13ff0:	ldr	x0, [x29, #2144]
   13ff4:	cmp	x0, #0x0
   13ff8:	b.eq	14004 <_ZnwmRKSt9nothrow_t@@Base+0x118>  // b.none
   13ffc:	mov	w0, #0x1                   	// #1
   14000:	b	14008 <_ZnwmRKSt9nothrow_t@@Base+0x11c>
   14004:	mov	w0, #0x0                   	// #0
   14008:	cmp	w0, #0x0
   1400c:	b.eq	14028 <_ZnwmRKSt9nothrow_t@@Base+0x13c>  // b.none
   14010:	ldr	x0, [x29, #2144]
   14014:	bl	dc34 <__sanitizer_print_stack_trace@@Base+0x17c>
   14018:	str	x0, [x29, #2160]
   1401c:	ldr	x0, [x29, #2144]
   14020:	bl	dc1c <__sanitizer_print_stack_trace@@Base+0x164>
   14024:	str	x0, [x29, #2152]
   14028:	ldr	x0, [x29, #2200]
   1402c:	ldrb	w7, [x29, #2175]
   14030:	ldr	x6, [x29, #2152]
   14034:	ldr	x5, [x29, #2160]
   14038:	ldr	x4, [x29, #2176]
   1403c:	ldr	x3, [x29, #2184]
   14040:	ldr	x2, [x29, #2192]
   14044:	mov	w1, w0
   14048:	ldr	x0, [x29, #2208]
   1404c:	bl	2d758 <OnPrint@@Base+0x37b0>
   14050:	nop
   14054:	add	x0, x29, #0x48
   14058:	mov	x1, x0
   1405c:	ldr	x0, [x29, #56]
   14060:	bl	e4fc <__sanitizer_print_stack_trace@@Base+0xa44>
   14064:	str	x0, [x29, #2216]
   14068:	ldr	x0, [x29, #2216]
   1406c:	ldp	x19, x20, [sp, #16]
   14070:	ldr	x21, [sp, #32]
   14074:	ldp	x29, x30, [sp]
   14078:	add	sp, sp, #0x8c0
   1407c:	ret

0000000000014080 <_ZnamRKSt9nothrow_t@@Base>:
   14080:	sub	sp, sp, #0x8c0
   14084:	stp	x29, x30, [sp]
   14088:	mov	x29, sp
   1408c:	stp	x19, x20, [sp, #16]
   14090:	str	x21, [sp, #32]
   14094:	str	x0, [x29, #56]
   14098:	str	x1, [x29, #48]
   1409c:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   140a0:	ldr	x0, [x0, #4048]
   140a4:	ldrb	w0, [x0]
   140a8:	eor	w0, w0, #0x1
   140ac:	and	w0, w0, #0xff
   140b0:	and	x0, x0, #0xff
   140b4:	str	x0, [x29, #2232]
   140b8:	str	xzr, [x29, #2224]
   140bc:	ldr	x1, [x29, #2232]
   140c0:	ldr	x0, [x29, #2224]
   140c4:	cmp	x1, x0
   140c8:	cset	w0, eq  // eq = none
   140cc:	and	w0, w0, #0xff
   140d0:	and	x0, x0, #0xff
   140d4:	cmp	x0, #0x0
   140d8:	b.eq	140fc <_ZnamRKSt9nothrow_t@@Base+0x7c>  // b.none
   140dc:	ldr	x4, [x29, #2224]
   140e0:	ldr	x3, [x29, #2232]
   140e4:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   140e8:	add	x2, x0, #0xe70
   140ec:	mov	w1, #0xe6                  	// #230
   140f0:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   140f4:	add	x0, x0, #0xe98
   140f8:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   140fc:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   14100:	ldr	x0, [x0, #3592]
   14104:	ldrb	w0, [x0]
   14108:	eor	w0, w0, #0x1
   1410c:	and	w0, w0, #0xff
   14110:	cmp	w0, #0x0
   14114:	b.eq	1411c <_ZnamRKSt9nothrow_t@@Base+0x9c>  // b.none
   14118:	bl	6d80 <__lsan_init@plt>
   1411c:	add	x0, x29, #0x48
   14120:	bl	dc88 <__sanitizer_print_stack_trace@@Base+0x1d0>
   14124:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   14128:	ldr	w0, [x0, #36]
   1412c:	sxtw	x19, w0
   14130:	bl	2d030 <OnPrint@@Base+0x3088>
   14134:	mov	x20, x0
   14138:	mov	x0, x29
   1413c:	mov	x21, x0
   14140:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   14144:	ldrb	w1, [x0, #34]
   14148:	add	x0, x29, #0x48
   1414c:	str	x0, [x29, #2208]
   14150:	str	x19, [x29, #2200]
   14154:	str	x20, [x29, #2192]
   14158:	str	x21, [x29, #2184]
   1415c:	str	xzr, [x29, #2176]
   14160:	mov	w0, w1
   14164:	strb	w0, [x29, #2175]
   14168:	str	xzr, [x29, #2160]
   1416c:	str	xzr, [x29, #2152]
   14170:	ldrb	w0, [x29, #2175]
   14174:	cmp	w0, #0x0
   14178:	b.eq	14198 <_ZnamRKSt9nothrow_t@@Base+0x118>  // b.none
   1417c:	bl	15d20 <__interceptor_sigaction@@Base+0x7b8>
   14180:	str	x0, [x29, #2144]
   14184:	ldr	x0, [x29, #2144]
   14188:	cmp	x0, #0x0
   1418c:	b.eq	14198 <_ZnamRKSt9nothrow_t@@Base+0x118>  // b.none
   14190:	mov	w0, #0x1                   	// #1
   14194:	b	1419c <_ZnamRKSt9nothrow_t@@Base+0x11c>
   14198:	mov	w0, #0x0                   	// #0
   1419c:	cmp	w0, #0x0
   141a0:	b.eq	141bc <_ZnamRKSt9nothrow_t@@Base+0x13c>  // b.none
   141a4:	ldr	x0, [x29, #2144]
   141a8:	bl	dc34 <__sanitizer_print_stack_trace@@Base+0x17c>
   141ac:	str	x0, [x29, #2160]
   141b0:	ldr	x0, [x29, #2144]
   141b4:	bl	dc1c <__sanitizer_print_stack_trace@@Base+0x164>
   141b8:	str	x0, [x29, #2152]
   141bc:	ldr	x0, [x29, #2200]
   141c0:	ldrb	w7, [x29, #2175]
   141c4:	ldr	x6, [x29, #2152]
   141c8:	ldr	x5, [x29, #2160]
   141cc:	ldr	x4, [x29, #2176]
   141d0:	ldr	x3, [x29, #2184]
   141d4:	ldr	x2, [x29, #2192]
   141d8:	mov	w1, w0
   141dc:	ldr	x0, [x29, #2208]
   141e0:	bl	2d758 <OnPrint@@Base+0x37b0>
   141e4:	nop
   141e8:	add	x0, x29, #0x48
   141ec:	mov	x1, x0
   141f0:	ldr	x0, [x29, #56]
   141f4:	bl	e4fc <__sanitizer_print_stack_trace@@Base+0xa44>
   141f8:	str	x0, [x29, #2216]
   141fc:	ldr	x0, [x29, #2216]
   14200:	ldp	x19, x20, [sp, #16]
   14204:	ldr	x21, [sp, #32]
   14208:	ldp	x29, x30, [sp]
   1420c:	add	sp, sp, #0x8c0
   14210:	ret

0000000000014214 <_ZnwmSt11align_val_t@@Base>:
   14214:	sub	sp, sp, #0x8c0
   14218:	stp	x29, x30, [sp]
   1421c:	mov	x29, sp
   14220:	stp	x19, x20, [sp, #16]
   14224:	str	x21, [sp, #32]
   14228:	str	x0, [x29, #56]
   1422c:	str	x1, [x29, #48]
   14230:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   14234:	ldr	x0, [x0, #4048]
   14238:	ldrb	w0, [x0]
   1423c:	eor	w0, w0, #0x1
   14240:	and	w0, w0, #0xff
   14244:	and	x0, x0, #0xff
   14248:	str	x0, [x29, #2232]
   1424c:	str	xzr, [x29, #2224]
   14250:	ldr	x1, [x29, #2232]
   14254:	ldr	x0, [x29, #2224]
   14258:	cmp	x1, x0
   1425c:	cset	w0, eq  // eq = none
   14260:	and	w0, w0, #0xff
   14264:	and	x0, x0, #0xff
   14268:	cmp	x0, #0x0
   1426c:	b.eq	14290 <_ZnwmSt11align_val_t@@Base+0x7c>  // b.none
   14270:	ldr	x4, [x29, #2224]
   14274:	ldr	x3, [x29, #2232]
   14278:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   1427c:	add	x2, x0, #0xe70
   14280:	mov	w1, #0xe9                  	// #233
   14284:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   14288:	add	x0, x0, #0xe98
   1428c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   14290:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   14294:	ldr	x0, [x0, #3592]
   14298:	ldrb	w0, [x0]
   1429c:	eor	w0, w0, #0x1
   142a0:	and	w0, w0, #0xff
   142a4:	cmp	w0, #0x0
   142a8:	b.eq	142b0 <_ZnwmSt11align_val_t@@Base+0x9c>  // b.none
   142ac:	bl	6d80 <__lsan_init@plt>
   142b0:	add	x0, x29, #0x48
   142b4:	bl	dc88 <__sanitizer_print_stack_trace@@Base+0x1d0>
   142b8:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   142bc:	ldr	w0, [x0, #36]
   142c0:	sxtw	x19, w0
   142c4:	bl	2d030 <OnPrint@@Base+0x3088>
   142c8:	mov	x20, x0
   142cc:	mov	x0, x29
   142d0:	mov	x21, x0
   142d4:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   142d8:	ldrb	w1, [x0, #34]
   142dc:	add	x0, x29, #0x48
   142e0:	str	x0, [x29, #2208]
   142e4:	str	x19, [x29, #2200]
   142e8:	str	x20, [x29, #2192]
   142ec:	str	x21, [x29, #2184]
   142f0:	str	xzr, [x29, #2176]
   142f4:	mov	w0, w1
   142f8:	strb	w0, [x29, #2175]
   142fc:	str	xzr, [x29, #2160]
   14300:	str	xzr, [x29, #2152]
   14304:	ldrb	w0, [x29, #2175]
   14308:	cmp	w0, #0x0
   1430c:	b.eq	1432c <_ZnwmSt11align_val_t@@Base+0x118>  // b.none
   14310:	bl	15d20 <__interceptor_sigaction@@Base+0x7b8>
   14314:	str	x0, [x29, #2144]
   14318:	ldr	x0, [x29, #2144]
   1431c:	cmp	x0, #0x0
   14320:	b.eq	1432c <_ZnwmSt11align_val_t@@Base+0x118>  // b.none
   14324:	mov	w0, #0x1                   	// #1
   14328:	b	14330 <_ZnwmSt11align_val_t@@Base+0x11c>
   1432c:	mov	w0, #0x0                   	// #0
   14330:	cmp	w0, #0x0
   14334:	b.eq	14350 <_ZnwmSt11align_val_t@@Base+0x13c>  // b.none
   14338:	ldr	x0, [x29, #2144]
   1433c:	bl	dc34 <__sanitizer_print_stack_trace@@Base+0x17c>
   14340:	str	x0, [x29, #2160]
   14344:	ldr	x0, [x29, #2144]
   14348:	bl	dc1c <__sanitizer_print_stack_trace@@Base+0x164>
   1434c:	str	x0, [x29, #2152]
   14350:	ldr	x0, [x29, #2200]
   14354:	ldrb	w7, [x29, #2175]
   14358:	ldr	x6, [x29, #2152]
   1435c:	ldr	x5, [x29, #2160]
   14360:	ldr	x4, [x29, #2176]
   14364:	ldr	x3, [x29, #2184]
   14368:	ldr	x2, [x29, #2192]
   1436c:	mov	w1, w0
   14370:	ldr	x0, [x29, #2208]
   14374:	bl	2d758 <OnPrint@@Base+0x37b0>
   14378:	nop
   1437c:	add	x0, x29, #0x48
   14380:	mov	x2, x0
   14384:	ldr	x1, [x29, #56]
   14388:	ldr	x0, [x29, #48]
   1438c:	bl	e468 <__sanitizer_print_stack_trace@@Base+0x9b0>
   14390:	str	x0, [x29, #2216]
   14394:	ldr	x0, [x29, #2216]
   14398:	cmp	x0, #0x0
   1439c:	cset	w0, eq  // eq = none
   143a0:	and	w0, w0, #0xff
   143a4:	and	x0, x0, #0xff
   143a8:	cmp	x0, #0x0
   143ac:	b.eq	143c0 <_ZnwmSt11align_val_t@@Base+0x1ac>  // b.none
   143b0:	add	x0, x29, #0x48
   143b4:	mov	x1, x0
   143b8:	ldr	x0, [x29, #56]
   143bc:	bl	19100 <__sancov_default_options@@Base+0x2f64>
   143c0:	ldr	x0, [x29, #2216]
   143c4:	ldp	x19, x20, [sp, #16]
   143c8:	ldr	x21, [sp, #32]
   143cc:	ldp	x29, x30, [sp]
   143d0:	add	sp, sp, #0x8c0
   143d4:	ret

00000000000143d8 <_ZnamSt11align_val_t@@Base>:
   143d8:	sub	sp, sp, #0x8c0
   143dc:	stp	x29, x30, [sp]
   143e0:	mov	x29, sp
   143e4:	stp	x19, x20, [sp, #16]
   143e8:	str	x21, [sp, #32]
   143ec:	str	x0, [x29, #56]
   143f0:	str	x1, [x29, #48]
   143f4:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   143f8:	ldr	x0, [x0, #4048]
   143fc:	ldrb	w0, [x0]
   14400:	eor	w0, w0, #0x1
   14404:	and	w0, w0, #0xff
   14408:	and	x0, x0, #0xff
   1440c:	str	x0, [x29, #2232]
   14410:	str	xzr, [x29, #2224]
   14414:	ldr	x1, [x29, #2232]
   14418:	ldr	x0, [x29, #2224]
   1441c:	cmp	x1, x0
   14420:	cset	w0, eq  // eq = none
   14424:	and	w0, w0, #0xff
   14428:	and	x0, x0, #0xff
   1442c:	cmp	x0, #0x0
   14430:	b.eq	14454 <_ZnamSt11align_val_t@@Base+0x7c>  // b.none
   14434:	ldr	x4, [x29, #2224]
   14438:	ldr	x3, [x29, #2232]
   1443c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   14440:	add	x2, x0, #0xe70
   14444:	mov	w1, #0xec                  	// #236
   14448:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   1444c:	add	x0, x0, #0xe98
   14450:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   14454:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   14458:	ldr	x0, [x0, #3592]
   1445c:	ldrb	w0, [x0]
   14460:	eor	w0, w0, #0x1
   14464:	and	w0, w0, #0xff
   14468:	cmp	w0, #0x0
   1446c:	b.eq	14474 <_ZnamSt11align_val_t@@Base+0x9c>  // b.none
   14470:	bl	6d80 <__lsan_init@plt>
   14474:	add	x0, x29, #0x48
   14478:	bl	dc88 <__sanitizer_print_stack_trace@@Base+0x1d0>
   1447c:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   14480:	ldr	w0, [x0, #36]
   14484:	sxtw	x19, w0
   14488:	bl	2d030 <OnPrint@@Base+0x3088>
   1448c:	mov	x20, x0
   14490:	mov	x0, x29
   14494:	mov	x21, x0
   14498:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   1449c:	ldrb	w1, [x0, #34]
   144a0:	add	x0, x29, #0x48
   144a4:	str	x0, [x29, #2208]
   144a8:	str	x19, [x29, #2200]
   144ac:	str	x20, [x29, #2192]
   144b0:	str	x21, [x29, #2184]
   144b4:	str	xzr, [x29, #2176]
   144b8:	mov	w0, w1
   144bc:	strb	w0, [x29, #2175]
   144c0:	str	xzr, [x29, #2160]
   144c4:	str	xzr, [x29, #2152]
   144c8:	ldrb	w0, [x29, #2175]
   144cc:	cmp	w0, #0x0
   144d0:	b.eq	144f0 <_ZnamSt11align_val_t@@Base+0x118>  // b.none
   144d4:	bl	15d20 <__interceptor_sigaction@@Base+0x7b8>
   144d8:	str	x0, [x29, #2144]
   144dc:	ldr	x0, [x29, #2144]
   144e0:	cmp	x0, #0x0
   144e4:	b.eq	144f0 <_ZnamSt11align_val_t@@Base+0x118>  // b.none
   144e8:	mov	w0, #0x1                   	// #1
   144ec:	b	144f4 <_ZnamSt11align_val_t@@Base+0x11c>
   144f0:	mov	w0, #0x0                   	// #0
   144f4:	cmp	w0, #0x0
   144f8:	b.eq	14514 <_ZnamSt11align_val_t@@Base+0x13c>  // b.none
   144fc:	ldr	x0, [x29, #2144]
   14500:	bl	dc34 <__sanitizer_print_stack_trace@@Base+0x17c>
   14504:	str	x0, [x29, #2160]
   14508:	ldr	x0, [x29, #2144]
   1450c:	bl	dc1c <__sanitizer_print_stack_trace@@Base+0x164>
   14510:	str	x0, [x29, #2152]
   14514:	ldr	x0, [x29, #2200]
   14518:	ldrb	w7, [x29, #2175]
   1451c:	ldr	x6, [x29, #2152]
   14520:	ldr	x5, [x29, #2160]
   14524:	ldr	x4, [x29, #2176]
   14528:	ldr	x3, [x29, #2184]
   1452c:	ldr	x2, [x29, #2192]
   14530:	mov	w1, w0
   14534:	ldr	x0, [x29, #2208]
   14538:	bl	2d758 <OnPrint@@Base+0x37b0>
   1453c:	nop
   14540:	add	x0, x29, #0x48
   14544:	mov	x2, x0
   14548:	ldr	x1, [x29, #56]
   1454c:	ldr	x0, [x29, #48]
   14550:	bl	e468 <__sanitizer_print_stack_trace@@Base+0x9b0>
   14554:	str	x0, [x29, #2216]
   14558:	ldr	x0, [x29, #2216]
   1455c:	cmp	x0, #0x0
   14560:	cset	w0, eq  // eq = none
   14564:	and	w0, w0, #0xff
   14568:	and	x0, x0, #0xff
   1456c:	cmp	x0, #0x0
   14570:	b.eq	14584 <_ZnamSt11align_val_t@@Base+0x1ac>  // b.none
   14574:	add	x0, x29, #0x48
   14578:	mov	x1, x0
   1457c:	ldr	x0, [x29, #56]
   14580:	bl	19100 <__sancov_default_options@@Base+0x2f64>
   14584:	ldr	x0, [x29, #2216]
   14588:	ldp	x19, x20, [sp, #16]
   1458c:	ldr	x21, [sp, #32]
   14590:	ldp	x29, x30, [sp]
   14594:	add	sp, sp, #0x8c0
   14598:	ret

000000000001459c <_ZnwmSt11align_val_tRKSt9nothrow_t@@Base>:
   1459c:	sub	sp, sp, #0x8d0
   145a0:	stp	x29, x30, [sp]
   145a4:	mov	x29, sp
   145a8:	stp	x19, x20, [sp, #16]
   145ac:	str	x21, [sp, #32]
   145b0:	str	x0, [x29, #72]
   145b4:	str	x1, [x29, #64]
   145b8:	str	x2, [x29, #56]
   145bc:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   145c0:	ldr	x0, [x0, #4048]
   145c4:	ldrb	w0, [x0]
   145c8:	eor	w0, w0, #0x1
   145cc:	and	w0, w0, #0xff
   145d0:	and	x0, x0, #0xff
   145d4:	str	x0, [x29, #2248]
   145d8:	str	xzr, [x29, #2240]
   145dc:	ldr	x1, [x29, #2248]
   145e0:	ldr	x0, [x29, #2240]
   145e4:	cmp	x1, x0
   145e8:	cset	w0, eq  // eq = none
   145ec:	and	w0, w0, #0xff
   145f0:	and	x0, x0, #0xff
   145f4:	cmp	x0, #0x0
   145f8:	b.eq	1461c <_ZnwmSt11align_val_tRKSt9nothrow_t@@Base+0x80>  // b.none
   145fc:	ldr	x4, [x29, #2240]
   14600:	ldr	x3, [x29, #2248]
   14604:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   14608:	add	x2, x0, #0xe70
   1460c:	mov	w1, #0xef                  	// #239
   14610:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   14614:	add	x0, x0, #0xe98
   14618:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1461c:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   14620:	ldr	x0, [x0, #3592]
   14624:	ldrb	w0, [x0]
   14628:	eor	w0, w0, #0x1
   1462c:	and	w0, w0, #0xff
   14630:	cmp	w0, #0x0
   14634:	b.eq	1463c <_ZnwmSt11align_val_tRKSt9nothrow_t@@Base+0xa0>  // b.none
   14638:	bl	6d80 <__lsan_init@plt>
   1463c:	add	x0, x29, #0x58
   14640:	bl	dc88 <__sanitizer_print_stack_trace@@Base+0x1d0>
   14644:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   14648:	ldr	w0, [x0, #36]
   1464c:	sxtw	x19, w0
   14650:	bl	2d030 <OnPrint@@Base+0x3088>
   14654:	mov	x20, x0
   14658:	mov	x0, x29
   1465c:	mov	x21, x0
   14660:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   14664:	ldrb	w1, [x0, #34]
   14668:	add	x0, x29, #0x58
   1466c:	str	x0, [x29, #2224]
   14670:	str	x19, [x29, #2216]
   14674:	str	x20, [x29, #2208]
   14678:	str	x21, [x29, #2200]
   1467c:	str	xzr, [x29, #2192]
   14680:	mov	w0, w1
   14684:	strb	w0, [x29, #2191]
   14688:	str	xzr, [x29, #2176]
   1468c:	str	xzr, [x29, #2168]
   14690:	ldrb	w0, [x29, #2191]
   14694:	cmp	w0, #0x0
   14698:	b.eq	146b8 <_ZnwmSt11align_val_tRKSt9nothrow_t@@Base+0x11c>  // b.none
   1469c:	bl	15d20 <__interceptor_sigaction@@Base+0x7b8>
   146a0:	str	x0, [x29, #2160]
   146a4:	ldr	x0, [x29, #2160]
   146a8:	cmp	x0, #0x0
   146ac:	b.eq	146b8 <_ZnwmSt11align_val_tRKSt9nothrow_t@@Base+0x11c>  // b.none
   146b0:	mov	w0, #0x1                   	// #1
   146b4:	b	146bc <_ZnwmSt11align_val_tRKSt9nothrow_t@@Base+0x120>
   146b8:	mov	w0, #0x0                   	// #0
   146bc:	cmp	w0, #0x0
   146c0:	b.eq	146dc <_ZnwmSt11align_val_tRKSt9nothrow_t@@Base+0x140>  // b.none
   146c4:	ldr	x0, [x29, #2160]
   146c8:	bl	dc34 <__sanitizer_print_stack_trace@@Base+0x17c>
   146cc:	str	x0, [x29, #2176]
   146d0:	ldr	x0, [x29, #2160]
   146d4:	bl	dc1c <__sanitizer_print_stack_trace@@Base+0x164>
   146d8:	str	x0, [x29, #2168]
   146dc:	ldr	x0, [x29, #2216]
   146e0:	ldrb	w7, [x29, #2191]
   146e4:	ldr	x6, [x29, #2168]
   146e8:	ldr	x5, [x29, #2176]
   146ec:	ldr	x4, [x29, #2192]
   146f0:	ldr	x3, [x29, #2200]
   146f4:	ldr	x2, [x29, #2208]
   146f8:	mov	w1, w0
   146fc:	ldr	x0, [x29, #2224]
   14700:	bl	2d758 <OnPrint@@Base+0x37b0>
   14704:	nop
   14708:	add	x0, x29, #0x58
   1470c:	mov	x2, x0
   14710:	ldr	x1, [x29, #72]
   14714:	ldr	x0, [x29, #64]
   14718:	bl	e468 <__sanitizer_print_stack_trace@@Base+0x9b0>
   1471c:	str	x0, [x29, #2232]
   14720:	ldr	x0, [x29, #2232]
   14724:	ldp	x19, x20, [sp, #16]
   14728:	ldr	x21, [sp, #32]
   1472c:	ldp	x29, x30, [sp]
   14730:	add	sp, sp, #0x8d0
   14734:	ret

0000000000014738 <_ZnamSt11align_val_tRKSt9nothrow_t@@Base>:
   14738:	sub	sp, sp, #0x8d0
   1473c:	stp	x29, x30, [sp]
   14740:	mov	x29, sp
   14744:	stp	x19, x20, [sp, #16]
   14748:	str	x21, [sp, #32]
   1474c:	str	x0, [x29, #72]
   14750:	str	x1, [x29, #64]
   14754:	str	x2, [x29, #56]
   14758:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   1475c:	ldr	x0, [x0, #4048]
   14760:	ldrb	w0, [x0]
   14764:	eor	w0, w0, #0x1
   14768:	and	w0, w0, #0xff
   1476c:	and	x0, x0, #0xff
   14770:	str	x0, [x29, #2248]
   14774:	str	xzr, [x29, #2240]
   14778:	ldr	x1, [x29, #2248]
   1477c:	ldr	x0, [x29, #2240]
   14780:	cmp	x1, x0
   14784:	cset	w0, eq  // eq = none
   14788:	and	w0, w0, #0xff
   1478c:	and	x0, x0, #0xff
   14790:	cmp	x0, #0x0
   14794:	b.eq	147b8 <_ZnamSt11align_val_tRKSt9nothrow_t@@Base+0x80>  // b.none
   14798:	ldr	x4, [x29, #2240]
   1479c:	ldr	x3, [x29, #2248]
   147a0:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   147a4:	add	x2, x0, #0xe70
   147a8:	mov	w1, #0xf2                  	// #242
   147ac:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   147b0:	add	x0, x0, #0xe98
   147b4:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   147b8:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   147bc:	ldr	x0, [x0, #3592]
   147c0:	ldrb	w0, [x0]
   147c4:	eor	w0, w0, #0x1
   147c8:	and	w0, w0, #0xff
   147cc:	cmp	w0, #0x0
   147d0:	b.eq	147d8 <_ZnamSt11align_val_tRKSt9nothrow_t@@Base+0xa0>  // b.none
   147d4:	bl	6d80 <__lsan_init@plt>
   147d8:	add	x0, x29, #0x58
   147dc:	bl	dc88 <__sanitizer_print_stack_trace@@Base+0x1d0>
   147e0:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   147e4:	ldr	w0, [x0, #36]
   147e8:	sxtw	x19, w0
   147ec:	bl	2d030 <OnPrint@@Base+0x3088>
   147f0:	mov	x20, x0
   147f4:	mov	x0, x29
   147f8:	mov	x21, x0
   147fc:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   14800:	ldrb	w1, [x0, #34]
   14804:	add	x0, x29, #0x58
   14808:	str	x0, [x29, #2224]
   1480c:	str	x19, [x29, #2216]
   14810:	str	x20, [x29, #2208]
   14814:	str	x21, [x29, #2200]
   14818:	str	xzr, [x29, #2192]
   1481c:	mov	w0, w1
   14820:	strb	w0, [x29, #2191]
   14824:	str	xzr, [x29, #2176]
   14828:	str	xzr, [x29, #2168]
   1482c:	ldrb	w0, [x29, #2191]
   14830:	cmp	w0, #0x0
   14834:	b.eq	14854 <_ZnamSt11align_val_tRKSt9nothrow_t@@Base+0x11c>  // b.none
   14838:	bl	15d20 <__interceptor_sigaction@@Base+0x7b8>
   1483c:	str	x0, [x29, #2160]
   14840:	ldr	x0, [x29, #2160]
   14844:	cmp	x0, #0x0
   14848:	b.eq	14854 <_ZnamSt11align_val_tRKSt9nothrow_t@@Base+0x11c>  // b.none
   1484c:	mov	w0, #0x1                   	// #1
   14850:	b	14858 <_ZnamSt11align_val_tRKSt9nothrow_t@@Base+0x120>
   14854:	mov	w0, #0x0                   	// #0
   14858:	cmp	w0, #0x0
   1485c:	b.eq	14878 <_ZnamSt11align_val_tRKSt9nothrow_t@@Base+0x140>  // b.none
   14860:	ldr	x0, [x29, #2160]
   14864:	bl	dc34 <__sanitizer_print_stack_trace@@Base+0x17c>
   14868:	str	x0, [x29, #2176]
   1486c:	ldr	x0, [x29, #2160]
   14870:	bl	dc1c <__sanitizer_print_stack_trace@@Base+0x164>
   14874:	str	x0, [x29, #2168]
   14878:	ldr	x0, [x29, #2216]
   1487c:	ldrb	w7, [x29, #2191]
   14880:	ldr	x6, [x29, #2168]
   14884:	ldr	x5, [x29, #2176]
   14888:	ldr	x4, [x29, #2192]
   1488c:	ldr	x3, [x29, #2200]
   14890:	ldr	x2, [x29, #2208]
   14894:	mov	w1, w0
   14898:	ldr	x0, [x29, #2224]
   1489c:	bl	2d758 <OnPrint@@Base+0x37b0>
   148a0:	nop
   148a4:	add	x0, x29, #0x58
   148a8:	mov	x2, x0
   148ac:	ldr	x1, [x29, #72]
   148b0:	ldr	x0, [x29, #64]
   148b4:	bl	e468 <__sanitizer_print_stack_trace@@Base+0x9b0>
   148b8:	str	x0, [x29, #2232]
   148bc:	ldr	x0, [x29, #2232]
   148c0:	ldp	x19, x20, [sp, #16]
   148c4:	ldr	x21, [sp, #32]
   148c8:	ldp	x29, x30, [sp]
   148cc:	add	sp, sp, #0x8d0
   148d0:	ret

00000000000148d4 <_ZdlPv@@Base>:
   148d4:	str	x30, [sp, #-48]!
   148d8:	str	x0, [sp, #24]
   148dc:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   148e0:	ldr	x0, [x0, #4048]
   148e4:	ldrb	w0, [x0]
   148e8:	eor	w0, w0, #0x1
   148ec:	and	w0, w0, #0xff
   148f0:	and	x0, x0, #0xff
   148f4:	str	x0, [sp, #40]
   148f8:	str	xzr, [sp, #32]
   148fc:	ldr	x1, [sp, #40]
   14900:	ldr	x0, [sp, #32]
   14904:	cmp	x1, x0
   14908:	cset	w0, eq  // eq = none
   1490c:	and	w0, w0, #0xff
   14910:	and	x0, x0, #0xff
   14914:	cmp	x0, #0x0
   14918:	b.eq	1493c <_ZdlPv@@Base+0x68>  // b.none
   1491c:	ldr	x4, [sp, #32]
   14920:	ldr	x3, [sp, #40]
   14924:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   14928:	add	x2, x0, #0xe70
   1492c:	mov	w1, #0xf5                  	// #245
   14930:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   14934:	add	x0, x0, #0xe98
   14938:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1493c:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   14940:	ldr	x0, [x0, #3592]
   14944:	ldrb	w0, [x0]
   14948:	eor	w0, w0, #0x1
   1494c:	and	w0, w0, #0xff
   14950:	cmp	w0, #0x0
   14954:	b.eq	1495c <_ZdlPv@@Base+0x88>  // b.none
   14958:	bl	6d80 <__lsan_init@plt>
   1495c:	ldr	x0, [sp, #24]
   14960:	bl	e528 <__sanitizer_print_stack_trace@@Base+0xa70>
   14964:	nop
   14968:	ldr	x30, [sp], #48
   1496c:	ret

0000000000014970 <_ZdaPv@@Base>:
   14970:	str	x30, [sp, #-48]!
   14974:	str	x0, [sp, #24]
   14978:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   1497c:	ldr	x0, [x0, #4048]
   14980:	ldrb	w0, [x0]
   14984:	eor	w0, w0, #0x1
   14988:	and	w0, w0, #0xff
   1498c:	and	x0, x0, #0xff
   14990:	str	x0, [sp, #40]
   14994:	str	xzr, [sp, #32]
   14998:	ldr	x1, [sp, #40]
   1499c:	ldr	x0, [sp, #32]
   149a0:	cmp	x1, x0
   149a4:	cset	w0, eq  // eq = none
   149a8:	and	w0, w0, #0xff
   149ac:	and	x0, x0, #0xff
   149b0:	cmp	x0, #0x0
   149b4:	b.eq	149d8 <_ZdaPv@@Base+0x68>  // b.none
   149b8:	ldr	x4, [sp, #32]
   149bc:	ldr	x3, [sp, #40]
   149c0:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   149c4:	add	x2, x0, #0xe70
   149c8:	mov	w1, #0xf7                  	// #247
   149cc:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   149d0:	add	x0, x0, #0xe98
   149d4:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   149d8:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   149dc:	ldr	x0, [x0, #3592]
   149e0:	ldrb	w0, [x0]
   149e4:	eor	w0, w0, #0x1
   149e8:	and	w0, w0, #0xff
   149ec:	cmp	w0, #0x0
   149f0:	b.eq	149f8 <_ZdaPv@@Base+0x88>  // b.none
   149f4:	bl	6d80 <__lsan_init@plt>
   149f8:	ldr	x0, [sp, #24]
   149fc:	bl	e528 <__sanitizer_print_stack_trace@@Base+0xa70>
   14a00:	nop
   14a04:	ldr	x30, [sp], #48
   14a08:	ret

0000000000014a0c <_ZdlPvRKSt9nothrow_t@@Base>:
   14a0c:	str	x30, [sp, #-48]!
   14a10:	str	x0, [sp, #24]
   14a14:	str	x1, [sp, #16]
   14a18:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   14a1c:	ldr	x0, [x0, #4048]
   14a20:	ldrb	w0, [x0]
   14a24:	eor	w0, w0, #0x1
   14a28:	and	w0, w0, #0xff
   14a2c:	and	x0, x0, #0xff
   14a30:	str	x0, [sp, #40]
   14a34:	str	xzr, [sp, #32]
   14a38:	ldr	x1, [sp, #40]
   14a3c:	ldr	x0, [sp, #32]
   14a40:	cmp	x1, x0
   14a44:	cset	w0, eq  // eq = none
   14a48:	and	w0, w0, #0xff
   14a4c:	and	x0, x0, #0xff
   14a50:	cmp	x0, #0x0
   14a54:	b.eq	14a78 <_ZdlPvRKSt9nothrow_t@@Base+0x6c>  // b.none
   14a58:	ldr	x4, [sp, #32]
   14a5c:	ldr	x3, [sp, #40]
   14a60:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   14a64:	add	x2, x0, #0xe70
   14a68:	mov	w1, #0xf9                  	// #249
   14a6c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   14a70:	add	x0, x0, #0xe98
   14a74:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   14a78:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   14a7c:	ldr	x0, [x0, #3592]
   14a80:	ldrb	w0, [x0]
   14a84:	eor	w0, w0, #0x1
   14a88:	and	w0, w0, #0xff
   14a8c:	cmp	w0, #0x0
   14a90:	b.eq	14a98 <_ZdlPvRKSt9nothrow_t@@Base+0x8c>  // b.none
   14a94:	bl	6d80 <__lsan_init@plt>
   14a98:	ldr	x0, [sp, #24]
   14a9c:	bl	e528 <__sanitizer_print_stack_trace@@Base+0xa70>
   14aa0:	nop
   14aa4:	ldr	x30, [sp], #48
   14aa8:	ret

0000000000014aac <_ZdaPvRKSt9nothrow_t@@Base>:
   14aac:	str	x30, [sp, #-48]!
   14ab0:	str	x0, [sp, #24]
   14ab4:	str	x1, [sp, #16]
   14ab8:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   14abc:	ldr	x0, [x0, #4048]
   14ac0:	ldrb	w0, [x0]
   14ac4:	eor	w0, w0, #0x1
   14ac8:	and	w0, w0, #0xff
   14acc:	and	x0, x0, #0xff
   14ad0:	str	x0, [sp, #40]
   14ad4:	str	xzr, [sp, #32]
   14ad8:	ldr	x1, [sp, #40]
   14adc:	ldr	x0, [sp, #32]
   14ae0:	cmp	x1, x0
   14ae4:	cset	w0, eq  // eq = none
   14ae8:	and	w0, w0, #0xff
   14aec:	and	x0, x0, #0xff
   14af0:	cmp	x0, #0x0
   14af4:	b.eq	14b18 <_ZdaPvRKSt9nothrow_t@@Base+0x6c>  // b.none
   14af8:	ldr	x4, [sp, #32]
   14afc:	ldr	x3, [sp, #40]
   14b00:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   14b04:	add	x2, x0, #0xe70
   14b08:	mov	w1, #0xfc                  	// #252
   14b0c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   14b10:	add	x0, x0, #0xe98
   14b14:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   14b18:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   14b1c:	ldr	x0, [x0, #3592]
   14b20:	ldrb	w0, [x0]
   14b24:	eor	w0, w0, #0x1
   14b28:	and	w0, w0, #0xff
   14b2c:	cmp	w0, #0x0
   14b30:	b.eq	14b38 <_ZdaPvRKSt9nothrow_t@@Base+0x8c>  // b.none
   14b34:	bl	6d80 <__lsan_init@plt>
   14b38:	ldr	x0, [sp, #24]
   14b3c:	bl	e528 <__sanitizer_print_stack_trace@@Base+0xa70>
   14b40:	nop
   14b44:	ldr	x30, [sp], #48
   14b48:	ret

0000000000014b4c <_ZdlPvm@@Base>:
   14b4c:	str	x30, [sp, #-48]!
   14b50:	str	x0, [sp, #24]
   14b54:	str	x1, [sp, #16]
   14b58:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   14b5c:	ldr	x0, [x0, #4048]
   14b60:	ldrb	w0, [x0]
   14b64:	eor	w0, w0, #0x1
   14b68:	and	w0, w0, #0xff
   14b6c:	and	x0, x0, #0xff
   14b70:	str	x0, [sp, #40]
   14b74:	str	xzr, [sp, #32]
   14b78:	ldr	x1, [sp, #40]
   14b7c:	ldr	x0, [sp, #32]
   14b80:	cmp	x1, x0
   14b84:	cset	w0, eq  // eq = none
   14b88:	and	w0, w0, #0xff
   14b8c:	and	x0, x0, #0xff
   14b90:	cmp	x0, #0x0
   14b94:	b.eq	14bb8 <_ZdlPvm@@Base+0x6c>  // b.none
   14b98:	ldr	x4, [sp, #32]
   14b9c:	ldr	x3, [sp, #40]
   14ba0:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   14ba4:	add	x2, x0, #0xe70
   14ba8:	mov	w1, #0xff                  	// #255
   14bac:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   14bb0:	add	x0, x0, #0xe98
   14bb4:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   14bb8:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   14bbc:	ldr	x0, [x0, #3592]
   14bc0:	ldrb	w0, [x0]
   14bc4:	eor	w0, w0, #0x1
   14bc8:	and	w0, w0, #0xff
   14bcc:	cmp	w0, #0x0
   14bd0:	b.eq	14bd8 <_ZdlPvm@@Base+0x8c>  // b.none
   14bd4:	bl	6d80 <__lsan_init@plt>
   14bd8:	ldr	x0, [sp, #24]
   14bdc:	bl	e528 <__sanitizer_print_stack_trace@@Base+0xa70>
   14be0:	nop
   14be4:	ldr	x30, [sp], #48
   14be8:	ret

0000000000014bec <_ZdaPvm@@Base>:
   14bec:	str	x30, [sp, #-48]!
   14bf0:	str	x0, [sp, #24]
   14bf4:	str	x1, [sp, #16]
   14bf8:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   14bfc:	ldr	x0, [x0, #4048]
   14c00:	ldrb	w0, [x0]
   14c04:	eor	w0, w0, #0x1
   14c08:	and	w0, w0, #0xff
   14c0c:	and	x0, x0, #0xff
   14c10:	str	x0, [sp, #40]
   14c14:	str	xzr, [sp, #32]
   14c18:	ldr	x1, [sp, #40]
   14c1c:	ldr	x0, [sp, #32]
   14c20:	cmp	x1, x0
   14c24:	cset	w0, eq  // eq = none
   14c28:	and	w0, w0, #0xff
   14c2c:	and	x0, x0, #0xff
   14c30:	cmp	x0, #0x0
   14c34:	b.eq	14c58 <_ZdaPvm@@Base+0x6c>  // b.none
   14c38:	ldr	x4, [sp, #32]
   14c3c:	ldr	x3, [sp, #40]
   14c40:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   14c44:	add	x2, x0, #0xe70
   14c48:	mov	w1, #0x102                 	// #258
   14c4c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   14c50:	add	x0, x0, #0xe98
   14c54:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   14c58:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   14c5c:	ldr	x0, [x0, #3592]
   14c60:	ldrb	w0, [x0]
   14c64:	eor	w0, w0, #0x1
   14c68:	and	w0, w0, #0xff
   14c6c:	cmp	w0, #0x0
   14c70:	b.eq	14c78 <_ZdaPvm@@Base+0x8c>  // b.none
   14c74:	bl	6d80 <__lsan_init@plt>
   14c78:	ldr	x0, [sp, #24]
   14c7c:	bl	e528 <__sanitizer_print_stack_trace@@Base+0xa70>
   14c80:	nop
   14c84:	ldr	x30, [sp], #48
   14c88:	ret

0000000000014c8c <_ZdlPvSt11align_val_t@@Base>:
   14c8c:	str	x30, [sp, #-48]!
   14c90:	str	x0, [sp, #24]
   14c94:	str	x1, [sp, #16]
   14c98:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   14c9c:	ldr	x0, [x0, #4048]
   14ca0:	ldrb	w0, [x0]
   14ca4:	eor	w0, w0, #0x1
   14ca8:	and	w0, w0, #0xff
   14cac:	and	x0, x0, #0xff
   14cb0:	str	x0, [sp, #40]
   14cb4:	str	xzr, [sp, #32]
   14cb8:	ldr	x1, [sp, #40]
   14cbc:	ldr	x0, [sp, #32]
   14cc0:	cmp	x1, x0
   14cc4:	cset	w0, eq  // eq = none
   14cc8:	and	w0, w0, #0xff
   14ccc:	and	x0, x0, #0xff
   14cd0:	cmp	x0, #0x0
   14cd4:	b.eq	14cf8 <_ZdlPvSt11align_val_t@@Base+0x6c>  // b.none
   14cd8:	ldr	x4, [sp, #32]
   14cdc:	ldr	x3, [sp, #40]
   14ce0:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   14ce4:	add	x2, x0, #0xe70
   14ce8:	mov	w1, #0x105                 	// #261
   14cec:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   14cf0:	add	x0, x0, #0xe98
   14cf4:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   14cf8:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   14cfc:	ldr	x0, [x0, #3592]
   14d00:	ldrb	w0, [x0]
   14d04:	eor	w0, w0, #0x1
   14d08:	and	w0, w0, #0xff
   14d0c:	cmp	w0, #0x0
   14d10:	b.eq	14d18 <_ZdlPvSt11align_val_t@@Base+0x8c>  // b.none
   14d14:	bl	6d80 <__lsan_init@plt>
   14d18:	ldr	x0, [sp, #24]
   14d1c:	bl	e528 <__sanitizer_print_stack_trace@@Base+0xa70>
   14d20:	nop
   14d24:	ldr	x30, [sp], #48
   14d28:	ret

0000000000014d2c <_ZdaPvSt11align_val_t@@Base>:
   14d2c:	str	x30, [sp, #-48]!
   14d30:	str	x0, [sp, #24]
   14d34:	str	x1, [sp, #16]
   14d38:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   14d3c:	ldr	x0, [x0, #4048]
   14d40:	ldrb	w0, [x0]
   14d44:	eor	w0, w0, #0x1
   14d48:	and	w0, w0, #0xff
   14d4c:	and	x0, x0, #0xff
   14d50:	str	x0, [sp, #40]
   14d54:	str	xzr, [sp, #32]
   14d58:	ldr	x1, [sp, #40]
   14d5c:	ldr	x0, [sp, #32]
   14d60:	cmp	x1, x0
   14d64:	cset	w0, eq  // eq = none
   14d68:	and	w0, w0, #0xff
   14d6c:	and	x0, x0, #0xff
   14d70:	cmp	x0, #0x0
   14d74:	b.eq	14d98 <_ZdaPvSt11align_val_t@@Base+0x6c>  // b.none
   14d78:	ldr	x4, [sp, #32]
   14d7c:	ldr	x3, [sp, #40]
   14d80:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   14d84:	add	x2, x0, #0xe70
   14d88:	mov	w1, #0x108                 	// #264
   14d8c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   14d90:	add	x0, x0, #0xe98
   14d94:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   14d98:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   14d9c:	ldr	x0, [x0, #3592]
   14da0:	ldrb	w0, [x0]
   14da4:	eor	w0, w0, #0x1
   14da8:	and	w0, w0, #0xff
   14dac:	cmp	w0, #0x0
   14db0:	b.eq	14db8 <_ZdaPvSt11align_val_t@@Base+0x8c>  // b.none
   14db4:	bl	6d80 <__lsan_init@plt>
   14db8:	ldr	x0, [sp, #24]
   14dbc:	bl	e528 <__sanitizer_print_stack_trace@@Base+0xa70>
   14dc0:	nop
   14dc4:	ldr	x30, [sp], #48
   14dc8:	ret

0000000000014dcc <_ZdlPvSt11align_val_tRKSt9nothrow_t@@Base>:
   14dcc:	str	x30, [sp, #-64]!
   14dd0:	str	x0, [sp, #40]
   14dd4:	str	x1, [sp, #32]
   14dd8:	str	x2, [sp, #24]
   14ddc:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   14de0:	ldr	x0, [x0, #4048]
   14de4:	ldrb	w0, [x0]
   14de8:	eor	w0, w0, #0x1
   14dec:	and	w0, w0, #0xff
   14df0:	and	x0, x0, #0xff
   14df4:	str	x0, [sp, #56]
   14df8:	str	xzr, [sp, #48]
   14dfc:	ldr	x1, [sp, #56]
   14e00:	ldr	x0, [sp, #48]
   14e04:	cmp	x1, x0
   14e08:	cset	w0, eq  // eq = none
   14e0c:	and	w0, w0, #0xff
   14e10:	and	x0, x0, #0xff
   14e14:	cmp	x0, #0x0
   14e18:	b.eq	14e3c <_ZdlPvSt11align_val_tRKSt9nothrow_t@@Base+0x70>  // b.none
   14e1c:	ldr	x4, [sp, #48]
   14e20:	ldr	x3, [sp, #56]
   14e24:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   14e28:	add	x2, x0, #0xe70
   14e2c:	mov	w1, #0x10b                 	// #267
   14e30:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   14e34:	add	x0, x0, #0xe98
   14e38:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   14e3c:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   14e40:	ldr	x0, [x0, #3592]
   14e44:	ldrb	w0, [x0]
   14e48:	eor	w0, w0, #0x1
   14e4c:	and	w0, w0, #0xff
   14e50:	cmp	w0, #0x0
   14e54:	b.eq	14e5c <_ZdlPvSt11align_val_tRKSt9nothrow_t@@Base+0x90>  // b.none
   14e58:	bl	6d80 <__lsan_init@plt>
   14e5c:	ldr	x0, [sp, #40]
   14e60:	bl	e528 <__sanitizer_print_stack_trace@@Base+0xa70>
   14e64:	nop
   14e68:	ldr	x30, [sp], #64
   14e6c:	ret

0000000000014e70 <_ZdaPvSt11align_val_tRKSt9nothrow_t@@Base>:
   14e70:	str	x30, [sp, #-64]!
   14e74:	str	x0, [sp, #40]
   14e78:	str	x1, [sp, #32]
   14e7c:	str	x2, [sp, #24]
   14e80:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   14e84:	ldr	x0, [x0, #4048]
   14e88:	ldrb	w0, [x0]
   14e8c:	eor	w0, w0, #0x1
   14e90:	and	w0, w0, #0xff
   14e94:	and	x0, x0, #0xff
   14e98:	str	x0, [sp, #56]
   14e9c:	str	xzr, [sp, #48]
   14ea0:	ldr	x1, [sp, #56]
   14ea4:	ldr	x0, [sp, #48]
   14ea8:	cmp	x1, x0
   14eac:	cset	w0, eq  // eq = none
   14eb0:	and	w0, w0, #0xff
   14eb4:	and	x0, x0, #0xff
   14eb8:	cmp	x0, #0x0
   14ebc:	b.eq	14ee0 <_ZdaPvSt11align_val_tRKSt9nothrow_t@@Base+0x70>  // b.none
   14ec0:	ldr	x4, [sp, #48]
   14ec4:	ldr	x3, [sp, #56]
   14ec8:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   14ecc:	add	x2, x0, #0xe70
   14ed0:	mov	w1, #0x10e                 	// #270
   14ed4:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   14ed8:	add	x0, x0, #0xe98
   14edc:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   14ee0:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   14ee4:	ldr	x0, [x0, #3592]
   14ee8:	ldrb	w0, [x0]
   14eec:	eor	w0, w0, #0x1
   14ef0:	and	w0, w0, #0xff
   14ef4:	cmp	w0, #0x0
   14ef8:	b.eq	14f00 <_ZdaPvSt11align_val_tRKSt9nothrow_t@@Base+0x90>  // b.none
   14efc:	bl	6d80 <__lsan_init@plt>
   14f00:	ldr	x0, [sp, #40]
   14f04:	bl	e528 <__sanitizer_print_stack_trace@@Base+0xa70>
   14f08:	nop
   14f0c:	ldr	x30, [sp], #64
   14f10:	ret

0000000000014f14 <_ZdlPvmSt11align_val_t@@Base>:
   14f14:	str	x30, [sp, #-64]!
   14f18:	str	x0, [sp, #40]
   14f1c:	str	x1, [sp, #32]
   14f20:	str	x2, [sp, #24]
   14f24:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   14f28:	ldr	x0, [x0, #4048]
   14f2c:	ldrb	w0, [x0]
   14f30:	eor	w0, w0, #0x1
   14f34:	and	w0, w0, #0xff
   14f38:	and	x0, x0, #0xff
   14f3c:	str	x0, [sp, #56]
   14f40:	str	xzr, [sp, #48]
   14f44:	ldr	x1, [sp, #56]
   14f48:	ldr	x0, [sp, #48]
   14f4c:	cmp	x1, x0
   14f50:	cset	w0, eq  // eq = none
   14f54:	and	w0, w0, #0xff
   14f58:	and	x0, x0, #0xff
   14f5c:	cmp	x0, #0x0
   14f60:	b.eq	14f84 <_ZdlPvmSt11align_val_t@@Base+0x70>  // b.none
   14f64:	ldr	x4, [sp, #48]
   14f68:	ldr	x3, [sp, #56]
   14f6c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   14f70:	add	x2, x0, #0xe70
   14f74:	mov	w1, #0x111                 	// #273
   14f78:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   14f7c:	add	x0, x0, #0xe98
   14f80:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   14f84:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   14f88:	ldr	x0, [x0, #3592]
   14f8c:	ldrb	w0, [x0]
   14f90:	eor	w0, w0, #0x1
   14f94:	and	w0, w0, #0xff
   14f98:	cmp	w0, #0x0
   14f9c:	b.eq	14fa4 <_ZdlPvmSt11align_val_t@@Base+0x90>  // b.none
   14fa0:	bl	6d80 <__lsan_init@plt>
   14fa4:	ldr	x0, [sp, #40]
   14fa8:	bl	e528 <__sanitizer_print_stack_trace@@Base+0xa70>
   14fac:	nop
   14fb0:	ldr	x30, [sp], #64
   14fb4:	ret

0000000000014fb8 <_ZdaPvmSt11align_val_t@@Base>:
   14fb8:	str	x30, [sp, #-64]!
   14fbc:	str	x0, [sp, #40]
   14fc0:	str	x1, [sp, #32]
   14fc4:	str	x2, [sp, #24]
   14fc8:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   14fcc:	ldr	x0, [x0, #4048]
   14fd0:	ldrb	w0, [x0]
   14fd4:	eor	w0, w0, #0x1
   14fd8:	and	w0, w0, #0xff
   14fdc:	and	x0, x0, #0xff
   14fe0:	str	x0, [sp, #56]
   14fe4:	str	xzr, [sp, #48]
   14fe8:	ldr	x1, [sp, #56]
   14fec:	ldr	x0, [sp, #48]
   14ff0:	cmp	x1, x0
   14ff4:	cset	w0, eq  // eq = none
   14ff8:	and	w0, w0, #0xff
   14ffc:	and	x0, x0, #0xff
   15000:	cmp	x0, #0x0
   15004:	b.eq	15028 <_ZdaPvmSt11align_val_t@@Base+0x70>  // b.none
   15008:	ldr	x4, [sp, #48]
   1500c:	ldr	x3, [sp, #56]
   15010:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   15014:	add	x2, x0, #0xe70
   15018:	mov	w1, #0x114                 	// #276
   1501c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   15020:	add	x0, x0, #0xe98
   15024:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   15028:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   1502c:	ldr	x0, [x0, #3592]
   15030:	ldrb	w0, [x0]
   15034:	eor	w0, w0, #0x1
   15038:	and	w0, w0, #0xff
   1503c:	cmp	w0, #0x0
   15040:	b.eq	15048 <_ZdaPvmSt11align_val_t@@Base+0x90>  // b.none
   15044:	bl	6d80 <__lsan_init@plt>
   15048:	ldr	x0, [sp, #40]
   1504c:	bl	e528 <__sanitizer_print_stack_trace@@Base+0xa70>
   15050:	nop
   15054:	ldr	x30, [sp], #64
   15058:	ret
   1505c:	str	x30, [sp, #-48]!
   15060:	str	x0, [sp, #24]
   15064:	ldr	x0, [sp, #24]
   15068:	str	x0, [sp, #40]
   1506c:	ldr	x0, [sp, #40]
   15070:	cmp	x0, #0x1
   15074:	b.ls	150bc <_ZdaPvmSt11align_val_t@@Base+0x104>  // b.plast
   15078:	adrp	x0, 102000 <__asan_cplus_demangle_builtin_types@@Base+0x85b40>
   1507c:	add	x0, x0, #0xfb8
   15080:	ldr	w2, [x0]
   15084:	ldr	x0, [sp, #40]
   15088:	sub	x0, x0, #0x1
   1508c:	mov	x1, x0
   15090:	mov	w0, w2
   15094:	bl	6c30 <pthread_setspecific@plt>
   15098:	cmp	w0, #0x0
   1509c:	cset	w0, ne  // ne = any
   150a0:	and	w0, w0, #0xff
   150a4:	cmp	w0, #0x0
   150a8:	b.eq	150c4 <_ZdaPvmSt11align_val_t@@Base+0x10c>  // b.none
   150ac:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   150b0:	add	x0, x0, #0xef8
   150b4:	bl	2a3fc <OnPrint@@Base+0x454>
   150b8:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   150bc:	bl	15cec <__interceptor_sigaction@@Base+0x784>
   150c0:	b	150c8 <_ZdaPvmSt11align_val_t@@Base+0x110>
   150c4:	nop
   150c8:	ldr	x30, [sp], #48
   150cc:	ret
   150d0:	stp	x19, x30, [sp, #-64]!
   150d4:	str	x0, [sp, #24]
   150d8:	ldr	x0, [sp, #24]
   150dc:	str	x0, [sp, #56]
   150e0:	ldr	x0, [sp, #56]
   150e4:	ldr	x0, [x0]
   150e8:	str	x0, [sp, #48]
   150ec:	ldr	x0, [sp, #56]
   150f0:	ldr	x0, [x0, #8]
   150f4:	str	x0, [sp, #40]
   150f8:	adrp	x0, 102000 <__asan_cplus_demangle_builtin_types@@Base+0x85b40>
   150fc:	add	x0, x0, #0xfb8
   15100:	ldr	w19, [x0]
   15104:	bl	15a08 <__interceptor_sigaction@@Base+0x4a0>
   15108:	mov	x1, x0
   1510c:	mov	w0, w19
   15110:	bl	6c30 <pthread_setspecific@plt>
   15114:	cmp	w0, #0x0
   15118:	cset	w0, ne  // ne = any
   1511c:	and	w0, w0, #0xff
   15120:	cmp	w0, #0x0
   15124:	b.eq	15138 <_ZdaPvmSt11align_val_t@@Base+0x180>  // b.none
   15128:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   1512c:	add	x0, x0, #0xef8
   15130:	bl	2a3fc <OnPrint@@Base+0x454>
   15134:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   15138:	str	wzr, [sp, #36]
   1513c:	ldr	x0, [sp, #56]
   15140:	add	x0, x0, #0x10
   15144:	mov	w1, #0x4                   	// #4
   15148:	bl	f49c <__sanitizer_get_allocated_size@@Base+0x93c>
   1514c:	str	w0, [sp, #36]
   15150:	ldr	w0, [sp, #36]
   15154:	cmp	w0, #0x0
   15158:	cset	w0, eq  // eq = none
   1515c:	and	w0, w0, #0xff
   15160:	cmp	w0, #0x0
   15164:	b.eq	15170 <_ZdaPvmSt11align_val_t@@Base+0x1b8>  // b.none
   15168:	bl	23334 <__sanitizer_set_report_fd@@Base+0x413c>
   1516c:	b	1513c <_ZdaPvmSt11align_val_t@@Base+0x184>
   15170:	ldr	w0, [sp, #36]
   15174:	bl	dce8 <__sanitizer_print_stack_trace@@Base+0x230>
   15178:	ldr	w19, [sp, #36]
   1517c:	bl	2344c <__sanitizer_set_report_fd@@Base+0x4254>
   15180:	mov	w2, #0x0                   	// #0
   15184:	mov	x1, x0
   15188:	mov	w0, w19
   1518c:	bl	15c2c <__interceptor_sigaction@@Base+0x6c4>
   15190:	ldr	x0, [sp, #56]
   15194:	add	x0, x0, #0x10
   15198:	mov	w2, #0x8                   	// #8
   1519c:	mov	x1, #0x0                   	// #0
   151a0:	bl	f520 <__sanitizer_get_allocated_size@@Base+0x9c0>
   151a4:	ldr	x1, [sp, #48]
   151a8:	ldr	x0, [sp, #40]
   151ac:	blr	x1
   151b0:	ldp	x19, x30, [sp], #64
   151b4:	ret

00000000000151b8 <__interceptor_pthread_create@@Base>:
   151b8:	stp	x19, x20, [sp, #-272]!
   151bc:	str	x30, [sp, #16]
   151c0:	str	x0, [sp, #56]
   151c4:	str	x1, [sp, #48]
   151c8:	str	x2, [sp, #40]
   151cc:	str	x3, [sp, #32]
   151d0:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   151d4:	ldr	x0, [x0, #4048]
   151d8:	ldrb	w0, [x0]
   151dc:	eor	w0, w0, #0x1
   151e0:	and	w0, w0, #0xff
   151e4:	and	x0, x0, #0xff
   151e8:	str	x0, [sp, #264]
   151ec:	str	xzr, [sp, #256]
   151f0:	ldr	x1, [sp, #264]
   151f4:	ldr	x0, [sp, #256]
   151f8:	cmp	x1, x0
   151fc:	cset	w0, eq  // eq = none
   15200:	and	w0, w0, #0xff
   15204:	and	x0, x0, #0xff
   15208:	cmp	x0, #0x0
   1520c:	b.eq	15230 <__interceptor_pthread_create@@Base+0x78>  // b.none
   15210:	ldr	x4, [sp, #256]
   15214:	ldr	x3, [sp, #264]
   15218:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   1521c:	add	x2, x0, #0xe70
   15220:	mov	w1, #0x173                 	// #371
   15224:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   15228:	add	x0, x0, #0xe98
   1522c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   15230:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   15234:	ldr	x0, [x0, #3592]
   15238:	ldrb	w0, [x0]
   1523c:	eor	w0, w0, #0x1
   15240:	and	w0, w0, #0xff
   15244:	cmp	w0, #0x0
   15248:	b.eq	15250 <__interceptor_pthread_create@@Base+0x98>  // b.none
   1524c:	bl	6d80 <__lsan_init@plt>
   15250:	bl	15e84 <__interceptor_sigaction@@Base+0x91c>
   15254:	ldr	x0, [sp, #48]
   15258:	cmp	x0, #0x0
   1525c:	b.ne	15270 <__interceptor_pthread_create@@Base+0xb8>  // b.any
   15260:	add	x0, sp, #0x68
   15264:	bl	6a40 <pthread_attr_init@plt>
   15268:	add	x0, sp, #0x68
   1526c:	str	x0, [sp, #48]
   15270:	ldr	x0, [sp, #48]
   15274:	bl	289e4 <__sanitizer_set_report_fd@@Base+0x97ec>
   15278:	str	wzr, [sp, #100]
   1527c:	add	x0, sp, #0x64
   15280:	mov	x1, x0
   15284:	ldr	x0, [sp, #48]
   15288:	bl	6970 <pthread_attr_getdetachstate@plt>
   1528c:	ldr	x0, [sp, #40]
   15290:	str	x0, [sp, #72]
   15294:	ldr	x0, [sp, #32]
   15298:	str	x0, [sp, #80]
   1529c:	add	x0, sp, #0x48
   152a0:	add	x0, x0, #0x10
   152a4:	mov	w2, #0x1                   	// #1
   152a8:	mov	x1, #0x0                   	// #0
   152ac:	bl	f520 <__sanitizer_get_allocated_size@@Base+0x9c0>
   152b0:	add	x0, sp, #0x40
   152b4:	bl	15a10 <__interceptor_sigaction@@Base+0x4a8>
   152b8:	adrp	x0, 100000 <__asan_cplus_demangle_builtin_types@@Base+0x83b40>
   152bc:	add	x0, x0, #0xf88
   152c0:	ldr	x4, [x0]
   152c4:	add	x0, sp, #0x48
   152c8:	mov	x3, x0
   152cc:	adrp	x0, 15000 <_ZdaPvmSt11align_val_t@@Base+0x48>
   152d0:	add	x2, x0, #0xd0
   152d4:	ldr	x1, [sp, #48]
   152d8:	ldr	x0, [sp, #56]
   152dc:	blr	x4
   152e0:	str	w0, [sp, #252]
   152e4:	add	x0, sp, #0x40
   152e8:	bl	15a28 <__interceptor_sigaction@@Base+0x4c0>
   152ec:	ldr	w0, [sp, #252]
   152f0:	cmp	w0, #0x0
   152f4:	b.ne	153b4 <__interceptor_pthread_create@@Base+0x1fc>  // b.any
   152f8:	bl	dcc0 <__sanitizer_print_stack_trace@@Base+0x208>
   152fc:	mov	w20, w0
   15300:	ldr	x0, [sp, #56]
   15304:	ldr	x19, [x0]
   15308:	ldr	w0, [sp, #100]
   1530c:	bl	28df4 <__sanitizer_set_report_fd@@Base+0x9bfc>
   15310:	and	w0, w0, #0xff
   15314:	mov	w2, w0
   15318:	mov	x1, x19
   1531c:	mov	w0, w20
   15320:	bl	15bf4 <__interceptor_sigaction@@Base+0x68c>
   15324:	str	w0, [sp, #248]
   15328:	ldrsw	x0, [sp, #248]
   1532c:	str	x0, [sp, #240]
   15330:	str	xzr, [sp, #232]
   15334:	ldr	x1, [sp, #240]
   15338:	ldr	x0, [sp, #232]
   1533c:	cmp	x1, x0
   15340:	cset	w0, eq  // eq = none
   15344:	and	w0, w0, #0xff
   15348:	and	x0, x0, #0xff
   1534c:	cmp	x0, #0x0
   15350:	b.eq	15374 <__interceptor_pthread_create@@Base+0x1bc>  // b.none
   15354:	ldr	x4, [sp, #232]
   15358:	ldr	x3, [sp, #240]
   1535c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   15360:	add	x2, x0, #0xf28
   15364:	mov	w1, #0x18d                 	// #397
   15368:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   1536c:	add	x0, x0, #0xe98
   15370:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   15374:	ldrsw	x1, [sp, #248]
   15378:	add	x0, sp, #0x48
   1537c:	add	x0, x0, #0x10
   15380:	mov	w2, #0x8                   	// #8
   15384:	bl	f520 <__sanitizer_get_allocated_size@@Base+0x9c0>
   15388:	add	x0, sp, #0x48
   1538c:	add	x0, x0, #0x10
   15390:	mov	w1, #0x4                   	// #4
   15394:	bl	f49c <__sanitizer_get_allocated_size@@Base+0x93c>
   15398:	cmp	x0, #0x0
   1539c:	cset	w0, ne  // ne = any
   153a0:	and	w0, w0, #0xff
   153a4:	cmp	w0, #0x0
   153a8:	b.eq	153b4 <__interceptor_pthread_create@@Base+0x1fc>  // b.none
   153ac:	bl	23334 <__sanitizer_set_report_fd@@Base+0x413c>
   153b0:	b	15388 <__interceptor_pthread_create@@Base+0x1d0>
   153b4:	add	x0, sp, #0x68
   153b8:	ldr	x1, [sp, #48]
   153bc:	cmp	x1, x0
   153c0:	b.ne	153cc <__interceptor_pthread_create@@Base+0x214>  // b.any
   153c4:	add	x0, sp, #0x68
   153c8:	bl	6b40 <pthread_attr_destroy@plt>
   153cc:	ldr	w0, [sp, #252]
   153d0:	ldr	x30, [sp, #16]
   153d4:	ldp	x19, x20, [sp], #272
   153d8:	ret

00000000000153dc <__interceptor_pthread_join@@Base>:
   153dc:	str	x30, [sp, #-64]!
   153e0:	str	x0, [sp, #24]
   153e4:	str	x1, [sp, #16]
   153e8:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   153ec:	ldr	x0, [x0, #4048]
   153f0:	ldrb	w0, [x0]
   153f4:	eor	w0, w0, #0x1
   153f8:	and	w0, w0, #0xff
   153fc:	and	x0, x0, #0xff
   15400:	str	x0, [sp, #56]
   15404:	str	xzr, [sp, #48]
   15408:	ldr	x1, [sp, #56]
   1540c:	ldr	x0, [sp, #48]
   15410:	cmp	x1, x0
   15414:	cset	w0, eq  // eq = none
   15418:	and	w0, w0, #0xff
   1541c:	and	x0, x0, #0xff
   15420:	cmp	x0, #0x0
   15424:	b.eq	15448 <__interceptor_pthread_join@@Base+0x6c>  // b.none
   15428:	ldr	x4, [sp, #48]
   1542c:	ldr	x3, [sp, #56]
   15430:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   15434:	add	x2, x0, #0xe70
   15438:	mov	w1, #0x198                 	// #408
   1543c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   15440:	add	x0, x0, #0xe98
   15444:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   15448:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   1544c:	ldr	x0, [x0, #3592]
   15450:	ldrb	w0, [x0]
   15454:	eor	w0, w0, #0x1
   15458:	and	w0, w0, #0xff
   1545c:	cmp	w0, #0x0
   15460:	b.eq	15468 <__interceptor_pthread_join@@Base+0x8c>  // b.none
   15464:	bl	6d80 <__lsan_init@plt>
   15468:	ldr	x0, [sp, #24]
   1546c:	bl	15dd4 <__interceptor_sigaction@@Base+0x86c>
   15470:	str	w0, [sp, #44]
   15474:	adrp	x0, 100000 <__asan_cplus_demangle_builtin_types@@Base+0x83b40>
   15478:	add	x0, x0, #0xf90
   1547c:	ldr	x2, [x0]
   15480:	ldr	x1, [sp, #16]
   15484:	ldr	x0, [sp, #24]
   15488:	blr	x2
   1548c:	str	w0, [sp, #40]
   15490:	ldr	w0, [sp, #40]
   15494:	cmp	w0, #0x0
   15498:	b.ne	154a4 <__interceptor_pthread_join@@Base+0xc8>  // b.any
   1549c:	ldr	w0, [sp, #44]
   154a0:	bl	15e08 <__interceptor_sigaction@@Base+0x8a0>
   154a4:	ldr	w0, [sp, #40]
   154a8:	ldr	x30, [sp], #64
   154ac:	ret

00000000000154b0 <__interceptor__exit@@Base>:
   154b0:	str	x30, [sp, #-32]!
   154b4:	str	w0, [sp, #28]
   154b8:	ldr	w0, [sp, #28]
   154bc:	cmp	w0, #0x0
   154c0:	b.ne	154dc <__interceptor__exit@@Base+0x2c>  // b.any
   154c4:	bl	918c <*ABS*+0x10@plt+0x21dc>
   154c8:	and	w0, w0, #0xff
   154cc:	cmp	w0, #0x0
   154d0:	b.eq	154dc <__interceptor__exit@@Base+0x2c>  // b.none
   154d4:	mov	w0, #0x1                   	// #1
   154d8:	b	154e0 <__interceptor__exit@@Base+0x30>
   154dc:	mov	w0, #0x0                   	// #0
   154e0:	cmp	w0, #0x0
   154e4:	b.eq	154f4 <__interceptor__exit@@Base+0x44>  // b.none
   154e8:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   154ec:	ldr	w0, [x0, #216]
   154f0:	str	w0, [sp, #28]
   154f4:	adrp	x0, 100000 <__asan_cplus_demangle_builtin_types@@Base+0x83b40>
   154f8:	add	x0, x0, #0xf98
   154fc:	ldr	x1, [x0]
   15500:	ldr	w0, [sp, #28]
   15504:	blr	x1
   15508:	nop
   1550c:	ldr	x30, [sp], #32
   15510:	ret

0000000000015514 <__interceptor_signal@@Base>:
   15514:	str	x30, [sp, #-32]!
   15518:	str	w0, [sp, #28]
   1551c:	str	x1, [sp, #16]
   15520:	ldr	w0, [sp, #28]
   15524:	bl	24d7c <__sanitizer_set_report_fd@@Base+0x5b84>
   15528:	cmp	w0, #0x2
   1552c:	cset	w0, eq  // eq = none
   15530:	and	w0, w0, #0xff
   15534:	cmp	w0, #0x0
   15538:	b.eq	15544 <__interceptor_signal@@Base+0x30>  // b.none
   1553c:	mov	x0, #0x0                   	// #0
   15540:	b	15560 <__interceptor_signal@@Base+0x4c>
   15544:	adrp	x0, 100000 <__asan_cplus_demangle_builtin_types@@Base+0x83b40>
   15548:	add	x0, x0, #0xfa0
   1554c:	ldr	x2, [x0]
   15550:	ldr	x1, [sp, #16]
   15554:	ldr	w0, [sp, #28]
   15558:	blr	x2
   1555c:	nop
   15560:	ldr	x30, [sp], #32
   15564:	ret

0000000000015568 <__interceptor_sigaction@@Base>:
   15568:	str	x30, [sp, #-48]!
   1556c:	str	w0, [sp, #44]
   15570:	str	x1, [sp, #32]
   15574:	str	x2, [sp, #24]
   15578:	ldr	w0, [sp, #44]
   1557c:	bl	24d7c <__sanitizer_set_report_fd@@Base+0x5b84>
   15580:	cmp	w0, #0x2
   15584:	cset	w0, eq  // eq = none
   15588:	and	w0, w0, #0xff
   1558c:	cmp	w0, #0x0
   15590:	b.eq	1559c <__interceptor_sigaction@@Base+0x34>  // b.none
   15594:	mov	w0, #0x0                   	// #0
   15598:	b	155bc <__interceptor_sigaction@@Base+0x54>
   1559c:	adrp	x0, 100000 <__asan_cplus_demangle_builtin_types@@Base+0x83b40>
   155a0:	add	x0, x0, #0xfa8
   155a4:	ldr	x3, [x0]
   155a8:	ldr	x2, [sp, #24]
   155ac:	ldr	x1, [sp, #32]
   155b0:	ldr	w0, [sp, #44]
   155b4:	blr	x3
   155b8:	nop
   155bc:	ldr	x30, [sp], #48
   155c0:	ret
   155c4:	str	x30, [sp, #-48]!
   155c8:	str	w0, [sp, #44]
   155cc:	str	x1, [sp, #32]
   155d0:	str	x2, [sp, #24]
   155d4:	adrp	x0, 100000 <__asan_cplus_demangle_builtin_types@@Base+0x83b40>
   155d8:	add	x0, x0, #0xfa8
   155dc:	ldr	x3, [x0]
   155e0:	ldr	x2, [sp, #24]
   155e4:	ldr	x1, [sp, #32]
   155e8:	ldr	w0, [sp, #44]
   155ec:	blr	x3
   155f0:	ldr	x30, [sp], #48
   155f4:	ret
   155f8:	str	x30, [sp, #-32]!
   155fc:	adrp	x0, 102000 <__asan_cplus_demangle_builtin_types@@Base+0x85b40>
   15600:	add	x0, x0, #0xfbc
   15604:	ldrb	w0, [x0]
   15608:	eor	w0, w0, #0x1
   1560c:	and	w0, w0, #0xff
   15610:	and	x0, x0, #0xff
   15614:	str	x0, [sp, #24]
   15618:	str	xzr, [sp, #16]
   1561c:	ldr	x1, [sp, #24]
   15620:	ldr	x0, [sp, #16]
   15624:	cmp	x1, x0
   15628:	cset	w0, eq  // eq = none
   1562c:	and	w0, w0, #0xff
   15630:	and	x0, x0, #0xff
   15634:	cmp	x0, #0x0
   15638:	b.eq	1565c <__interceptor_sigaction@@Base+0xf4>  // b.none
   1563c:	ldr	x4, [sp, #16]
   15640:	ldr	x3, [sp, #24]
   15644:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   15648:	add	x2, x0, #0xf40
   1564c:	mov	w1, #0x4f                  	// #79
   15650:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   15654:	add	x0, x0, #0xf60
   15658:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1565c:	adrp	x0, 102000 <__asan_cplus_demangle_builtin_types@@Base+0x85b40>
   15660:	add	x0, x0, #0xfbc
   15664:	mov	w1, #0x1                   	// #1
   15668:	strb	w1, [x0]
   1566c:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   15670:	ldr	x1, [x0, #3440]
   15674:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   15678:	ldr	x0, [x0, #3984]
   1567c:	mov	x3, x0
   15680:	mov	x2, x1
   15684:	adrp	x0, 100000 <__asan_cplus_demangle_builtin_types@@Base+0x83b40>
   15688:	add	x1, x0, #0xfa0
   1568c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   15690:	add	x0, x0, #0xfb0
   15694:	bl	3845c <__sanitizer_set_death_callback@@Base+0x27bc>
   15698:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   1569c:	ldr	x1, [x0, #3800]
   156a0:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   156a4:	ldr	x0, [x0, #3720]
   156a8:	mov	x3, x0
   156ac:	mov	x2, x1
   156b0:	adrp	x0, 100000 <__asan_cplus_demangle_builtin_types@@Base+0x83b40>
   156b4:	add	x1, x0, #0xfa8
   156b8:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   156bc:	add	x0, x0, #0xfb8
   156c0:	bl	3845c <__sanitizer_set_death_callback@@Base+0x27bc>
   156c4:	nop
   156c8:	ldr	x30, [sp], #32
   156cc:	ret
   156d0:	str	x30, [sp, #-16]!
   156d4:	bl	155f8 <__interceptor_sigaction@@Base+0x90>
   156d8:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   156dc:	ldr	x1, [x0, #3752]
   156e0:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   156e4:	ldr	x0, [x0, #3640]
   156e8:	mov	x3, x0
   156ec:	mov	x2, x1
   156f0:	adrp	x0, 100000 <__asan_cplus_demangle_builtin_types@@Base+0x83b40>
   156f4:	add	x1, x0, #0xf00
   156f8:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   156fc:	add	x0, x0, #0xfc8
   15700:	bl	3845c <__sanitizer_set_death_callback@@Base+0x27bc>
   15704:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   15708:	ldr	x1, [x0, #3464]
   1570c:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   15710:	ldr	x0, [x0, #3848]
   15714:	mov	x3, x0
   15718:	mov	x2, x1
   1571c:	adrp	x0, 100000 <__asan_cplus_demangle_builtin_types@@Base+0x83b40>
   15720:	add	x1, x0, #0xf08
   15724:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   15728:	add	x0, x0, #0xfd0
   1572c:	bl	3845c <__sanitizer_set_death_callback@@Base+0x27bc>
   15730:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   15734:	ldr	x1, [x0, #4056]
   15738:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   1573c:	ldr	x0, [x0, #3944]
   15740:	mov	x3, x0
   15744:	mov	x2, x1
   15748:	adrp	x0, 100000 <__asan_cplus_demangle_builtin_types@@Base+0x83b40>
   1574c:	add	x1, x0, #0xf68
   15750:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   15754:	add	x0, x0, #0xfd8
   15758:	bl	3845c <__sanitizer_set_death_callback@@Base+0x27bc>
   1575c:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   15760:	ldr	x1, [x0, #3768]
   15764:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   15768:	ldr	x0, [x0, #3864]
   1576c:	mov	x3, x0
   15770:	mov	x2, x1
   15774:	adrp	x0, 100000 <__asan_cplus_demangle_builtin_types@@Base+0x83b40>
   15778:	add	x1, x0, #0xf10
   1577c:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   15780:	add	x0, x0, #0xfe0
   15784:	bl	3845c <__sanitizer_set_death_callback@@Base+0x27bc>
   15788:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   1578c:	ldr	x1, [x0, #3912]
   15790:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   15794:	ldr	x0, [x0, #3960]
   15798:	mov	x3, x0
   1579c:	mov	x2, x1
   157a0:	adrp	x0, 100000 <__asan_cplus_demangle_builtin_types@@Base+0x83b40>
   157a4:	add	x1, x0, #0xf18
   157a8:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   157ac:	add	x0, x0, #0xfe8
   157b0:	bl	3845c <__sanitizer_set_death_callback@@Base+0x27bc>
   157b4:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   157b8:	ldr	x1, [x0, #3416]
   157bc:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   157c0:	ldr	x0, [x0, #3576]
   157c4:	mov	x3, x0
   157c8:	mov	x2, x1
   157cc:	adrp	x0, 100000 <__asan_cplus_demangle_builtin_types@@Base+0x83b40>
   157d0:	add	x1, x0, #0xf30
   157d4:	adrp	x0, 50000 <__asan_backtrace_vector_release@@Base+0x1340>
   157d8:	add	x0, x0, #0xff0
   157dc:	bl	3845c <__sanitizer_set_death_callback@@Base+0x27bc>
   157e0:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   157e4:	ldr	x1, [x0, #3880]
   157e8:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   157ec:	ldr	x0, [x0, #3448]
   157f0:	mov	x3, x0
   157f4:	mov	x2, x1
   157f8:	adrp	x0, 100000 <__asan_cplus_demangle_builtin_types@@Base+0x83b40>
   157fc:	add	x1, x0, #0xf38
   15800:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   15804:	add	x0, x0, #0x0
   15808:	bl	3845c <__sanitizer_set_death_callback@@Base+0x27bc>
   1580c:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   15810:	ldr	x1, [x0, #3904]
   15814:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   15818:	ldr	x0, [x0, #3952]
   1581c:	mov	x3, x0
   15820:	mov	x2, x1
   15824:	adrp	x0, 100000 <__asan_cplus_demangle_builtin_types@@Base+0x83b40>
   15828:	add	x1, x0, #0xf40
   1582c:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   15830:	add	x0, x0, #0x10
   15834:	bl	3845c <__sanitizer_set_death_callback@@Base+0x27bc>
   15838:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   1583c:	ldr	x1, [x0, #3656]
   15840:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   15844:	ldr	x0, [x0, #3792]
   15848:	mov	x3, x0
   1584c:	mov	x2, x1
   15850:	adrp	x0, 100000 <__asan_cplus_demangle_builtin_types@@Base+0x83b40>
   15854:	add	x1, x0, #0xf20
   15858:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   1585c:	add	x0, x0, #0x20
   15860:	bl	3845c <__sanitizer_set_death_callback@@Base+0x27bc>
   15864:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   15868:	ldr	x1, [x0, #3920]
   1586c:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   15870:	ldr	x0, [x0, #3624]
   15874:	mov	x3, x0
   15878:	mov	x2, x1
   1587c:	adrp	x0, 100000 <__asan_cplus_demangle_builtin_types@@Base+0x83b40>
   15880:	add	x1, x0, #0xf28
   15884:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   15888:	add	x0, x0, #0x30
   1588c:	bl	3845c <__sanitizer_set_death_callback@@Base+0x27bc>
   15890:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   15894:	ldr	x1, [x0, #3896]
   15898:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   1589c:	ldr	x0, [x0, #3824]
   158a0:	mov	x3, x0
   158a4:	mov	x2, x1
   158a8:	adrp	x0, 100000 <__asan_cplus_demangle_builtin_types@@Base+0x83b40>
   158ac:	add	x1, x0, #0xf60
   158b0:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   158b4:	add	x0, x0, #0x38
   158b8:	bl	3845c <__sanitizer_set_death_callback@@Base+0x27bc>
   158bc:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   158c0:	ldr	x1, [x0, #3992]
   158c4:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   158c8:	ldr	x0, [x0, #3776]
   158cc:	mov	x3, x0
   158d0:	mov	x2, x1
   158d4:	adrp	x0, 100000 <__asan_cplus_demangle_builtin_types@@Base+0x83b40>
   158d8:	add	x1, x0, #0xf48
   158dc:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   158e0:	add	x0, x0, #0x40
   158e4:	bl	3845c <__sanitizer_set_death_callback@@Base+0x27bc>
   158e8:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   158ec:	ldr	x1, [x0, #3632]
   158f0:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   158f4:	ldr	x0, [x0, #3480]
   158f8:	mov	x3, x0
   158fc:	mov	x2, x1
   15900:	adrp	x0, 100000 <__asan_cplus_demangle_builtin_types@@Base+0x83b40>
   15904:	add	x1, x0, #0xf50
   15908:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   1590c:	add	x0, x0, #0x58
   15910:	bl	3845c <__sanitizer_set_death_callback@@Base+0x27bc>
   15914:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   15918:	ldr	x1, [x0, #3600]
   1591c:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   15920:	ldr	x0, [x0, #3688]
   15924:	mov	x3, x0
   15928:	mov	x2, x1
   1592c:	adrp	x0, 100000 <__asan_cplus_demangle_builtin_types@@Base+0x83b40>
   15930:	add	x1, x0, #0xf58
   15934:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   15938:	add	x0, x0, #0x68
   1593c:	bl	3845c <__sanitizer_set_death_callback@@Base+0x27bc>
   15940:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   15944:	ldr	x1, [x0, #3504]
   15948:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   1594c:	ldr	x0, [x0, #3520]
   15950:	mov	x3, x0
   15954:	mov	x2, x1
   15958:	adrp	x0, 100000 <__asan_cplus_demangle_builtin_types@@Base+0x83b40>
   1595c:	add	x1, x0, #0xf88
   15960:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   15964:	add	x0, x0, #0x70
   15968:	bl	3845c <__sanitizer_set_death_callback@@Base+0x27bc>
   1596c:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   15970:	ldr	x1, [x0, #3936]
   15974:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   15978:	ldr	x0, [x0, #3968]
   1597c:	mov	x3, x0
   15980:	mov	x2, x1
   15984:	adrp	x0, 100000 <__asan_cplus_demangle_builtin_types@@Base+0x83b40>
   15988:	add	x1, x0, #0xf90
   1598c:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   15990:	add	x0, x0, #0x80
   15994:	bl	3845c <__sanitizer_set_death_callback@@Base+0x27bc>
   15998:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   1599c:	ldr	x1, [x0, #3608]
   159a0:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   159a4:	ldr	x0, [x0, #3696]
   159a8:	mov	x3, x0
   159ac:	mov	x2, x1
   159b0:	adrp	x0, 100000 <__asan_cplus_demangle_builtin_types@@Base+0x83b40>
   159b4:	add	x1, x0, #0xf98
   159b8:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   159bc:	add	x0, x0, #0x90
   159c0:	bl	3845c <__sanitizer_set_death_callback@@Base+0x27bc>
   159c4:	adrp	x0, 15000 <_ZdaPvmSt11align_val_t@@Base+0x48>
   159c8:	add	x1, x0, #0x5c
   159cc:	adrp	x0, 102000 <__asan_cplus_demangle_builtin_types@@Base+0x85b40>
   159d0:	add	x0, x0, #0xfb8
   159d4:	bl	6dc0 <pthread_key_create@plt>
   159d8:	cmp	w0, #0x0
   159dc:	cset	w0, ne  // ne = any
   159e0:	and	w0, w0, #0xff
   159e4:	cmp	w0, #0x0
   159e8:	b.eq	159fc <__interceptor_sigaction@@Base+0x494>  // b.none
   159ec:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   159f0:	add	x0, x0, #0x98
   159f4:	bl	2a3fc <OnPrint@@Base+0x454>
   159f8:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   159fc:	nop
   15a00:	ldr	x30, [sp], #16
   15a04:	ret
   15a08:	mov	x0, #0x4                   	// #4
   15a0c:	ret
   15a10:	str	x30, [sp, #-32]!
   15a14:	str	x0, [sp, #24]
   15a18:	bl	d034 <__lsan_do_recoverable_leak_check@@Base+0x2ea8>
   15a1c:	nop
   15a20:	ldr	x30, [sp], #32
   15a24:	ret
   15a28:	str	x30, [sp, #-32]!
   15a2c:	str	x0, [sp, #24]
   15a30:	bl	d068 <__lsan_do_recoverable_leak_check@@Base+0x2edc>
   15a34:	nop
   15a38:	ldr	x30, [sp], #32
   15a3c:	ret
   15a40:	stp	x19, x30, [sp, #-48]!
   15a44:	str	w0, [sp, #28]
   15a48:	mov	w2, #0x0                   	// #0
   15a4c:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   15a50:	add	x1, x0, #0x188
   15a54:	mov	x0, #0xc8                  	// #200
   15a58:	bl	26a50 <__sanitizer_set_report_fd@@Base+0x7858>
   15a5c:	str	x0, [sp, #40]
   15a60:	ldr	x0, [sp, #40]
   15a64:	mov	x1, x0
   15a68:	mov	x0, #0xc8                  	// #200
   15a6c:	bl	a908 <__lsan_do_recoverable_leak_check@@Base+0x77c>
   15a70:	mov	x19, x0
   15a74:	ldr	w0, [sp, #28]
   15a78:	mov	w1, w0
   15a7c:	mov	x0, x19
   15a80:	bl	15adc <__interceptor_sigaction@@Base+0x574>
   15a84:	mov	x0, x19
   15a88:	ldp	x19, x30, [sp], #48
   15a8c:	ret
   15a90:	stp	x19, x30, [sp, #-16]!
   15a94:	adrp	x0, 103000 <__asan_cplus_demangle_builtin_types@@Base+0x86b40>
   15a98:	add	x1, x0, #0x0
   15a9c:	mov	x0, #0xd0                  	// #208
   15aa0:	bl	a908 <__lsan_do_recoverable_leak_check@@Base+0x77c>
   15aa4:	mov	x19, x0
   15aa8:	mov	w4, #0x0                   	// #0
   15aac:	mov	w3, #0x40                  	// #64
   15ab0:	mov	w2, #0x2000                	// #8192
   15ab4:	adrp	x0, 15000 <_ZdaPvmSt11align_val_t@@Base+0x48>
   15ab8:	add	x1, x0, #0xa40
   15abc:	mov	x0, x19
   15ac0:	bl	361ac <__sanitizer_set_death_callback@@Base+0x50c>
   15ac4:	adrp	x0, 102000 <__asan_cplus_demangle_builtin_types@@Base+0x85b40>
   15ac8:	add	x0, x0, #0xfc0
   15acc:	str	x19, [x0]
   15ad0:	nop
   15ad4:	ldp	x19, x30, [sp], #16
   15ad8:	ret
   15adc:	str	x30, [sp, #-32]!
   15ae0:	str	x0, [sp, #24]
   15ae4:	str	w1, [sp, #20]
   15ae8:	ldr	x0, [sp, #24]
   15aec:	ldr	w1, [sp, #20]
   15af0:	bl	35cc0 <__sanitizer_set_death_callback@@Base+0x20>
   15af4:	adrp	x0, 7b000 <__asan_backtrace_vector_release@@Base+0x2c340>
   15af8:	add	x1, x0, #0xb10
   15afc:	ldr	x0, [sp, #24]
   15b00:	str	x1, [x0]
   15b04:	ldr	x0, [sp, #24]
   15b08:	str	xzr, [x0, #144]
   15b0c:	ldr	x0, [sp, #24]
   15b10:	str	xzr, [x0, #152]
   15b14:	ldr	x0, [sp, #24]
   15b18:	str	xzr, [x0, #160]
   15b1c:	ldr	x0, [sp, #24]
   15b20:	str	xzr, [x0, #168]
   15b24:	ldr	x0, [sp, #24]
   15b28:	str	xzr, [x0, #176]
   15b2c:	ldr	x0, [sp, #24]
   15b30:	str	xzr, [x0, #184]
   15b34:	ldr	x0, [sp, #24]
   15b38:	str	xzr, [x0, #192]
   15b3c:	nop
   15b40:	ldr	x30, [sp], #32
   15b44:	ret
   15b48:	sub	sp, sp, #0x20
   15b4c:	str	x0, [sp, #8]
   15b50:	str	x1, [sp]
   15b54:	ldr	x0, [sp]
   15b58:	str	x0, [sp, #24]
   15b5c:	ldr	x0, [sp, #24]
   15b60:	ldr	x1, [x0]
   15b64:	ldr	x0, [sp, #8]
   15b68:	str	x1, [x0, #144]
   15b6c:	ldr	x0, [sp, #24]
   15b70:	ldr	x1, [x0, #8]
   15b74:	ldr	x0, [sp, #8]
   15b78:	str	x1, [x0, #152]
   15b7c:	ldr	x0, [sp, #24]
   15b80:	ldr	x1, [x0, #32]
   15b84:	ldr	x0, [sp, #8]
   15b88:	str	x1, [x0, #176]
   15b8c:	ldr	x0, [sp, #24]
   15b90:	ldr	x1, [x0, #40]
   15b94:	ldr	x0, [sp, #8]
   15b98:	str	x1, [x0, #184]
   15b9c:	ldr	x0, [sp, #24]
   15ba0:	ldr	x1, [x0, #16]
   15ba4:	ldr	x0, [sp, #8]
   15ba8:	str	x1, [x0, #160]
   15bac:	ldr	x0, [sp, #24]
   15bb0:	ldr	x1, [x0, #24]
   15bb4:	ldr	x0, [sp, #8]
   15bb8:	str	x1, [x0, #168]
   15bbc:	ldr	x0, [sp, #24]
   15bc0:	ldr	x1, [x0, #48]
   15bc4:	ldr	x0, [sp, #8]
   15bc8:	str	x1, [x0, #192]
   15bcc:	nop
   15bd0:	add	sp, sp, #0x20
   15bd4:	ret
   15bd8:	str	x30, [sp, #-32]!
   15bdc:	str	x0, [sp, #24]
   15be0:	bl	dd7c <__sanitizer_print_stack_trace@@Base+0x2c4>
   15be4:	bl	377c4 <__sanitizer_set_death_callback@@Base+0x1b24>
   15be8:	nop
   15bec:	ldr	x30, [sp], #32
   15bf0:	ret
   15bf4:	str	x30, [sp, #-32]!
   15bf8:	str	w0, [sp, #28]
   15bfc:	str	x1, [sp, #16]
   15c00:	strb	w2, [sp, #27]
   15c04:	adrp	x0, 102000 <__asan_cplus_demangle_builtin_types@@Base+0x85b40>
   15c08:	add	x0, x0, #0xfc0
   15c0c:	ldr	x0, [x0]
   15c10:	mov	x4, #0x0                   	// #0
   15c14:	ldr	w3, [sp, #28]
   15c18:	ldrb	w2, [sp, #27]
   15c1c:	ldr	x1, [sp, #16]
   15c20:	bl	36340 <__sanitizer_set_death_callback@@Base+0x6a0>
   15c24:	ldr	x30, [sp], #32
   15c28:	ret
   15c2c:	str	x30, [sp, #-112]!
   15c30:	str	w0, [sp, #28]
   15c34:	str	x1, [sp, #16]
   15c38:	strb	w2, [sp, #27]
   15c3c:	str	xzr, [sp, #48]
   15c40:	str	xzr, [sp, #40]
   15c44:	ldr	w0, [sp, #28]
   15c48:	cmp	w0, #0x0
   15c4c:	cset	w0, eq  // eq = none
   15c50:	and	w5, w0, #0xff
   15c54:	add	x3, sp, #0x28
   15c58:	add	x0, sp, #0x38
   15c5c:	add	x2, x0, #0x20
   15c60:	add	x1, sp, #0x30
   15c64:	add	x0, sp, #0x38
   15c68:	mov	x4, x3
   15c6c:	mov	x3, x2
   15c70:	mov	x2, x1
   15c74:	mov	x1, x0
   15c78:	mov	w0, w5
   15c7c:	bl	25c90 <__sanitizer_set_report_fd@@Base+0x6a98>
   15c80:	ldr	x1, [sp, #56]
   15c84:	ldr	x0, [sp, #48]
   15c88:	add	x0, x1, x0
   15c8c:	str	x0, [sp, #64]
   15c90:	ldr	x1, [sp, #88]
   15c94:	ldr	x0, [sp, #40]
   15c98:	add	x0, x1, x0
   15c9c:	str	x0, [sp, #96]
   15ca0:	add	x0, sp, #0x38
   15ca4:	add	x1, x0, #0x18
   15ca8:	add	x0, sp, #0x38
   15cac:	add	x0, x0, #0x10
   15cb0:	bl	e23c <__sanitizer_print_stack_trace@@Base+0x784>
   15cb4:	bl	37c34 <__sanitizer_set_death_callback@@Base+0x1f94>
   15cb8:	str	x0, [sp, #104]
   15cbc:	adrp	x0, 102000 <__asan_cplus_demangle_builtin_types@@Base+0x85b40>
   15cc0:	add	x0, x0, #0xfc0
   15cc4:	ldr	x0, [x0]
   15cc8:	add	x1, sp, #0x38
   15ccc:	mov	x4, x1
   15cd0:	ldrb	w3, [sp, #27]
   15cd4:	ldr	x2, [sp, #16]
   15cd8:	ldr	w1, [sp, #28]
   15cdc:	bl	37050 <__sanitizer_set_death_callback@@Base+0x13b0>
   15ce0:	nop
   15ce4:	ldr	x30, [sp], #112
   15ce8:	ret
   15cec:	stp	x19, x30, [sp, #-16]!
   15cf0:	adrp	x0, 102000 <__asan_cplus_demangle_builtin_types@@Base+0x85b40>
   15cf4:	add	x0, x0, #0xfc0
   15cf8:	ldr	x19, [x0]
   15cfc:	bl	dcc0 <__sanitizer_print_stack_trace@@Base+0x208>
   15d00:	mov	w1, w0
   15d04:	mov	x0, x19
   15d08:	bl	36de8 <__sanitizer_set_death_callback@@Base+0x1148>
   15d0c:	mov	w0, #0xffffffff            	// #-1
   15d10:	bl	dce8 <__sanitizer_print_stack_trace@@Base+0x230>
   15d14:	nop
   15d18:	ldp	x19, x30, [sp], #16
   15d1c:	ret
   15d20:	stp	x19, x30, [sp, #-16]!
   15d24:	adrp	x0, 102000 <__asan_cplus_demangle_builtin_types@@Base+0x85b40>
   15d28:	add	x0, x0, #0xfc0
   15d2c:	ldr	x0, [x0]
   15d30:	cmp	x0, #0x0
   15d34:	b.ne	15d40 <__interceptor_sigaction@@Base+0x7d8>  // b.any
   15d38:	mov	x0, #0x0                   	// #0
   15d3c:	b	15d80 <__interceptor_sigaction@@Base+0x818>
   15d40:	bl	dcc0 <__sanitizer_print_stack_trace@@Base+0x208>
   15d44:	cmn	w0, #0x1
   15d48:	cset	w0, eq  // eq = none
   15d4c:	and	w0, w0, #0xff
   15d50:	cmp	w0, #0x0
   15d54:	b.eq	15d60 <__interceptor_sigaction@@Base+0x7f8>  // b.none
   15d58:	mov	x0, #0x0                   	// #0
   15d5c:	b	15d80 <__interceptor_sigaction@@Base+0x818>
   15d60:	adrp	x0, 102000 <__asan_cplus_demangle_builtin_types@@Base+0x85b40>
   15d64:	add	x0, x0, #0xfc0
   15d68:	ldr	x19, [x0]
   15d6c:	bl	dcc0 <__sanitizer_print_stack_trace@@Base+0x208>
   15d70:	mov	w1, w0
   15d74:	mov	x0, x19
   15d78:	bl	160f8 <__interceptor_sigaction@@Base+0xb90>
   15d7c:	nop
   15d80:	ldp	x19, x30, [sp], #16
   15d84:	ret
   15d88:	sub	sp, sp, #0x20
   15d8c:	str	x0, [sp, #8]
   15d90:	str	x1, [sp]
   15d94:	ldr	x0, [sp]
   15d98:	str	x0, [sp, #24]
   15d9c:	ldr	x0, [sp, #8]
   15da0:	ldr	x0, [x0, #40]
   15da4:	ldr	x1, [sp, #24]
   15da8:	cmp	x1, x0
   15dac:	b.ne	15dc8 <__interceptor_sigaction@@Base+0x860>  // b.any
   15db0:	ldr	x0, [sp, #8]
   15db4:	ldr	w0, [x0, #112]
   15db8:	cmp	w0, #0x0
   15dbc:	b.eq	15dc8 <__interceptor_sigaction@@Base+0x860>  // b.none
   15dc0:	mov	w0, #0x1                   	// #1
   15dc4:	b	15dcc <__interceptor_sigaction@@Base+0x864>
   15dc8:	mov	w0, #0x0                   	// #0
   15dcc:	add	sp, sp, #0x20
   15dd0:	ret
   15dd4:	str	x30, [sp, #-32]!
   15dd8:	str	x0, [sp, #24]
   15ddc:	adrp	x0, 102000 <__asan_cplus_demangle_builtin_types@@Base+0x85b40>
   15de0:	add	x0, x0, #0xfc0
   15de4:	ldr	x3, [x0]
   15de8:	ldr	x0, [sp, #24]
   15dec:	mov	x2, x0
   15df0:	adrp	x0, 15000 <_ZdaPvmSt11align_val_t@@Base+0x48>
   15df4:	add	x1, x0, #0xd88
   15df8:	mov	x0, x3
   15dfc:	bl	366d8 <__sanitizer_set_death_callback@@Base+0xa38>
   15e00:	ldr	x30, [sp], #32
   15e04:	ret
   15e08:	str	x30, [sp, #-48]!
   15e0c:	str	w0, [sp, #28]
   15e10:	ldr	w0, [sp, #28]
   15e14:	str	x0, [sp, #40]
   15e18:	mov	x0, #0xffffffff            	// #4294967295
   15e1c:	str	x0, [sp, #32]
   15e20:	ldr	x1, [sp, #40]
   15e24:	ldr	x0, [sp, #32]
   15e28:	cmp	x1, x0
   15e2c:	cset	w0, eq  // eq = none
   15e30:	and	w0, w0, #0xff
   15e34:	and	x0, x0, #0xff
   15e38:	cmp	x0, #0x0
   15e3c:	b.eq	15e60 <__interceptor_sigaction@@Base+0x8f8>  // b.none
   15e40:	ldr	x4, [sp, #32]
   15e44:	ldr	x3, [sp, #40]
   15e48:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   15e4c:	add	x2, x0, #0x1a8
   15e50:	mov	w1, #0x75                  	// #117
   15e54:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   15e58:	add	x0, x0, #0x1c8
   15e5c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   15e60:	adrp	x0, 102000 <__asan_cplus_demangle_builtin_types@@Base+0x85b40>
   15e64:	add	x0, x0, #0xfc0
   15e68:	ldr	x0, [x0]
   15e6c:	mov	x2, #0x0                   	// #0
   15e70:	ldr	w1, [sp, #28]
   15e74:	bl	36c5c <__sanitizer_set_death_callback@@Base+0xfbc>
   15e78:	nop
   15e7c:	ldr	x30, [sp], #48
   15e80:	ret
   15e84:	stp	x19, x30, [sp, #-16]!
   15e88:	bl	dcc0 <__sanitizer_print_stack_trace@@Base+0x208>
   15e8c:	cmp	w0, #0x0
   15e90:	cset	w0, eq  // eq = none
   15e94:	and	w0, w0, #0xff
   15e98:	cmp	w0, #0x0
   15e9c:	b.eq	15eb0 <__interceptor_sigaction@@Base+0x948>  // b.none
   15ea0:	bl	15d20 <__interceptor_sigaction@@Base+0x7b8>
   15ea4:	mov	x19, x0
   15ea8:	bl	2344c <__sanitizer_set_report_fd@@Base+0x4254>
   15eac:	str	x0, [x19, #32]
   15eb0:	nop
   15eb4:	ldp	x19, x30, [sp], #16
   15eb8:	ret
   15ebc:	str	x30, [sp, #-96]!
   15ec0:	str	x0, [sp, #72]
   15ec4:	str	x1, [sp, #64]
   15ec8:	str	x2, [sp, #56]
   15ecc:	str	x3, [sp, #48]
   15ed0:	str	x4, [sp, #40]
   15ed4:	str	x5, [sp, #32]
   15ed8:	str	x6, [sp, #24]
   15edc:	str	x7, [sp, #16]
   15ee0:	adrp	x0, 102000 <__asan_cplus_demangle_builtin_types@@Base+0x85b40>
   15ee4:	add	x0, x0, #0xfc0
   15ee8:	ldr	x0, [x0]
   15eec:	ldr	x1, [sp, #72]
   15ef0:	bl	3689c <__sanitizer_set_death_callback@@Base+0xbfc>
   15ef4:	str	x0, [sp, #88]
   15ef8:	ldr	x0, [sp, #88]
   15efc:	cmp	x0, #0x0
   15f00:	b.ne	15f0c <__interceptor_sigaction@@Base+0x9a4>  // b.any
   15f04:	mov	w0, #0x0                   	// #0
   15f08:	b	15f9c <__interceptor_sigaction@@Base+0xa34>
   15f0c:	ldr	x0, [sp, #88]
   15f10:	bl	dc1c <__sanitizer_print_stack_trace@@Base+0x164>
   15f14:	mov	x1, x0
   15f18:	ldr	x0, [sp, #64]
   15f1c:	str	x1, [x0]
   15f20:	ldr	x0, [sp, #88]
   15f24:	bl	dc34 <__sanitizer_print_stack_trace@@Base+0x17c>
   15f28:	mov	x1, x0
   15f2c:	ldr	x0, [sp, #56]
   15f30:	str	x1, [x0]
   15f34:	ldr	x0, [sp, #88]
   15f38:	bl	16124 <__interceptor_sigaction@@Base+0xbbc>
   15f3c:	mov	x1, x0
   15f40:	ldr	x0, [sp, #48]
   15f44:	str	x1, [x0]
   15f48:	ldr	x0, [sp, #88]
   15f4c:	bl	1613c <__interceptor_sigaction@@Base+0xbd4>
   15f50:	mov	x1, x0
   15f54:	ldr	x0, [sp, #40]
   15f58:	str	x1, [x0]
   15f5c:	ldr	x0, [sp, #88]
   15f60:	bl	16154 <__interceptor_sigaction@@Base+0xbec>
   15f64:	mov	x1, x0
   15f68:	ldr	x0, [sp, #32]
   15f6c:	str	x1, [x0]
   15f70:	ldr	x0, [sp, #88]
   15f74:	bl	1616c <__interceptor_sigaction@@Base+0xc04>
   15f78:	mov	x1, x0
   15f7c:	ldr	x0, [sp, #24]
   15f80:	str	x1, [x0]
   15f84:	ldr	x0, [sp, #88]
   15f88:	bl	16184 <__interceptor_sigaction@@Base+0xc1c>
   15f8c:	mov	x1, x0
   15f90:	ldr	x0, [sp, #16]
   15f94:	str	x1, [x0]
   15f98:	mov	w0, #0x1                   	// #1
   15f9c:	ldr	x30, [sp], #96
   15fa0:	ret
   15fa4:	sub	sp, sp, #0x20
   15fa8:	str	x0, [sp, #24]
   15fac:	str	x1, [sp, #16]
   15fb0:	str	x2, [sp, #8]
   15fb4:	nop
   15fb8:	add	sp, sp, #0x20
   15fbc:	ret
   15fc0:	str	x30, [sp, #-16]!
   15fc4:	adrp	x0, 102000 <__asan_cplus_demangle_builtin_types@@Base+0x85b40>
   15fc8:	add	x0, x0, #0xfc0
   15fcc:	ldr	x0, [x0]
   15fd0:	bl	16098 <__interceptor_sigaction@@Base+0xb30>
   15fd4:	nop
   15fd8:	ldr	x30, [sp], #16
   15fdc:	ret
   15fe0:	str	x30, [sp, #-16]!
   15fe4:	adrp	x0, 102000 <__asan_cplus_demangle_builtin_types@@Base+0x85b40>
   15fe8:	add	x0, x0, #0xfc0
   15fec:	ldr	x0, [x0]
   15ff0:	bl	160d8 <__interceptor_sigaction@@Base+0xb70>
   15ff4:	nop
   15ff8:	ldr	x30, [sp], #16
   15ffc:	ret
   16000:	str	x30, [sp, #-16]!
   16004:	adrp	x0, 102000 <__asan_cplus_demangle_builtin_types@@Base+0x85b40>
   16008:	add	x0, x0, #0xfc0
   1600c:	ldr	x0, [x0]
   16010:	bl	160b8 <__interceptor_sigaction@@Base+0xb50>
   16014:	adrp	x0, 102000 <__asan_cplus_demangle_builtin_types@@Base+0x85b40>
   16018:	add	x0, x0, #0xfc0
   1601c:	ldr	x0, [x0]
   16020:	ldr	x30, [sp], #16
   16024:	ret
   16028:	sub	sp, sp, #0x10
   1602c:	str	x0, [sp, #8]
   16030:	nop
   16034:	add	sp, sp, #0x10
   16038:	ret
   1603c:	sub	sp, sp, #0x10
   16040:	str	x0, [sp, #8]
   16044:	str	x1, [sp]
   16048:	nop
   1604c:	add	sp, sp, #0x10
   16050:	ret
   16054:	sub	sp, sp, #0x10
   16058:	str	x0, [sp, #8]
   1605c:	str	x1, [sp]
   16060:	nop
   16064:	add	sp, sp, #0x10
   16068:	ret
   1606c:	sub	sp, sp, #0x10
   16070:	str	x0, [sp, #8]
   16074:	nop
   16078:	add	sp, sp, #0x10
   1607c:	ret
   16080:	sub	sp, sp, #0x10
   16084:	str	x0, [sp, #8]
   16088:	str	x1, [sp]
   1608c:	nop
   16090:	add	sp, sp, #0x10
   16094:	ret
   16098:	str	x30, [sp, #-32]!
   1609c:	str	x0, [sp, #24]
   160a0:	ldr	x0, [sp, #24]
   160a4:	add	x0, x0, #0x18
   160a8:	bl	239ec <__sanitizer_set_report_fd@@Base+0x47f4>
   160ac:	nop
   160b0:	ldr	x30, [sp], #32
   160b4:	ret
   160b8:	str	x30, [sp, #-32]!
   160bc:	str	x0, [sp, #24]
   160c0:	ldr	x0, [sp, #24]
   160c4:	add	x0, x0, #0x18
   160c8:	bl	23b74 <__sanitizer_set_report_fd@@Base+0x497c>
   160cc:	nop
   160d0:	ldr	x30, [sp], #32
   160d4:	ret
   160d8:	str	x30, [sp, #-32]!
   160dc:	str	x0, [sp, #24]
   160e0:	ldr	x0, [sp, #24]
   160e4:	add	x0, x0, #0x18
   160e8:	bl	23ac8 <__sanitizer_set_report_fd@@Base+0x48d0>
   160ec:	nop
   160f0:	ldr	x30, [sp], #32
   160f4:	ret
   160f8:	sub	sp, sp, #0x10
   160fc:	str	x0, [sp, #8]
   16100:	str	w1, [sp, #4]
   16104:	ldr	x0, [sp, #8]
   16108:	ldr	x1, [x0, #152]
   1610c:	ldr	w0, [sp, #4]
   16110:	lsl	x0, x0, #3
   16114:	add	x0, x1, x0
   16118:	ldr	x0, [x0]
   1611c:	add	sp, sp, #0x10
   16120:	ret
   16124:	sub	sp, sp, #0x10
   16128:	str	x0, [sp, #8]
   1612c:	ldr	x0, [sp, #8]
   16130:	ldr	x0, [x0, #176]
   16134:	add	sp, sp, #0x10
   16138:	ret
   1613c:	sub	sp, sp, #0x10
   16140:	str	x0, [sp, #8]
   16144:	ldr	x0, [sp, #8]
   16148:	ldr	x0, [x0, #184]
   1614c:	add	sp, sp, #0x10
   16150:	ret
   16154:	sub	sp, sp, #0x10
   16158:	str	x0, [sp, #8]
   1615c:	ldr	x0, [sp, #8]
   16160:	ldr	x0, [x0, #160]
   16164:	add	sp, sp, #0x10
   16168:	ret
   1616c:	sub	sp, sp, #0x10
   16170:	str	x0, [sp, #8]
   16174:	ldr	x0, [sp, #8]
   16178:	ldr	x0, [x0, #168]
   1617c:	add	sp, sp, #0x10
   16180:	ret
   16184:	sub	sp, sp, #0x10
   16188:	str	x0, [sp, #8]
   1618c:	ldr	x0, [sp, #8]
   16190:	ldr	x0, [x0, #192]
   16194:	add	sp, sp, #0x10
   16198:	ret

000000000001619c <__sancov_default_options@@Base>:
   1619c:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   161a0:	add	x0, x0, #0x2b0
   161a4:	ret
   161a8:	sub	sp, sp, #0x10
   161ac:	str	x0, [sp, #8]
   161b0:	ldr	x0, [sp, #8]
   161b4:	mov	w1, #0x1                   	// #1
   161b8:	strb	w1, [x0]
   161bc:	ldr	x0, [sp, #8]
   161c0:	strb	wzr, [x0, #1]
   161c4:	nop
   161c8:	add	sp, sp, #0x10
   161cc:	ret
   161d0:	str	x30, [sp, #-32]!
   161d4:	str	x0, [sp, #24]
   161d8:	str	x1, [sp, #16]
   161dc:	ldr	x0, [sp, #16]
   161e0:	mov	x3, x0
   161e4:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   161e8:	add	x2, x0, #0x2b8
   161ec:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   161f0:	add	x1, x0, #0x308
   161f4:	ldr	x0, [sp, #24]
   161f8:	bl	162b4 <__sancov_default_options@@Base+0x118>
   161fc:	ldr	x0, [sp, #16]
   16200:	add	x0, x0, #0x1
   16204:	mov	x3, x0
   16208:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   1620c:	add	x2, x0, #0x318
   16210:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   16214:	add	x1, x0, #0x330
   16218:	ldr	x0, [sp, #24]
   1621c:	bl	162b4 <__sancov_default_options@@Base+0x118>
   16220:	nop
   16224:	ldr	x30, [sp], #32
   16228:	ret
   1622c:	str	x30, [sp, #-16]!
   16230:	bl	6f80 <__sancov_default_options@plt>
   16234:	ldr	x30, [sp], #16
   16238:	ret
   1623c:	str	x30, [sp, #-64]!
   16240:	bl	1630c <__sancov_default_options@@Base+0x170>
   16244:	str	x0, [sp, #56]
   16248:	ldr	x0, [sp, #56]
   1624c:	bl	161a8 <__sancov_default_options@@Base+0xc>
   16250:	add	x0, sp, #0x18
   16254:	bl	21290 <__sanitizer_set_report_fd@@Base+0x2098>
   16258:	add	x0, sp, #0x18
   1625c:	ldr	x1, [sp, #56]
   16260:	bl	161d0 <__sancov_default_options@@Base+0x34>
   16264:	bl	1622c <__sancov_default_options@@Base+0x90>
   16268:	mov	x1, x0
   1626c:	add	x0, sp, #0x18
   16270:	bl	20f34 <__sanitizer_set_report_fd@@Base+0x1d3c>
   16274:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   16278:	add	x0, x0, #0x338
   1627c:	bl	23528 <__sanitizer_set_report_fd@@Base+0x4330>
   16280:	mov	x1, x0
   16284:	add	x0, sp, #0x18
   16288:	bl	20f34 <__sanitizer_set_report_fd@@Base+0x1d3c>
   1628c:	bl	208ac <__sanitizer_set_report_fd@@Base+0x16b4>
   16290:	ldr	x0, [sp, #56]
   16294:	ldrb	w0, [x0, #1]
   16298:	cmp	w0, #0x0
   1629c:	b.eq	162a8 <__sancov_default_options@@Base+0x10c>  // b.none
   162a0:	add	x0, sp, #0x18
   162a4:	bl	20930 <__sanitizer_set_report_fd@@Base+0x1738>
   162a8:	nop
   162ac:	ldr	x30, [sp], #64
   162b0:	ret
   162b4:	stp	x19, x30, [sp, #-64]!
   162b8:	str	x0, [sp, #40]
   162bc:	str	x1, [sp, #32]
   162c0:	str	x2, [sp, #24]
   162c4:	str	x3, [sp, #16]
   162c8:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   162cc:	ldr	x1, [x0, #3456]
   162d0:	mov	x0, #0x10                  	// #16
   162d4:	bl	a5c0 <__lsan_do_recoverable_leak_check@@Base+0x434>
   162d8:	mov	x19, x0
   162dc:	ldr	x1, [sp, #16]
   162e0:	mov	x0, x19
   162e4:	bl	bfcc <__lsan_do_recoverable_leak_check@@Base+0x1e40>
   162e8:	str	x19, [sp, #56]
   162ec:	ldr	x3, [sp, #24]
   162f0:	ldr	x2, [sp, #56]
   162f4:	ldr	x1, [sp, #32]
   162f8:	ldr	x0, [sp, #40]
   162fc:	bl	21174 <__sanitizer_set_report_fd@@Base+0x1f7c>
   16300:	nop
   16304:	ldp	x19, x30, [sp], #64
   16308:	ret
   1630c:	adrp	x0, 103000 <__asan_cplus_demangle_builtin_types@@Base+0x86b40>
   16310:	add	x0, x0, #0xd0
   16314:	ret
   16318:	str	x30, [sp, #-32]!
   1631c:	adrp	x0, 103000 <__asan_cplus_demangle_builtin_types@@Base+0x86b40>
   16320:	add	x0, x0, #0x100
   16324:	str	x0, [sp, #24]
   16328:	mov	w1, #0x4                   	// #4
   1632c:	adrp	x0, 1c4000 <__asan_cplus_demangle_builtin_types@@Base+0x147b40>
   16330:	add	x0, x0, #0x140
   16334:	bl	f418 <__sanitizer_get_allocated_size@@Base+0x8b8>
   16338:	and	w0, w0, #0xff
   1633c:	cmp	w0, #0x0
   16340:	cset	w0, eq  // eq = none
   16344:	and	w0, w0, #0xff
   16348:	cmp	w0, #0x0
   1634c:	b.eq	163b4 <__sancov_default_options@@Base+0x218>  // b.none
   16350:	add	x2, sp, #0x10
   16354:	adrp	x0, 1c4000 <__asan_cplus_demangle_builtin_types@@Base+0x147b40>
   16358:	add	x1, x0, #0x148
   1635c:	mov	x0, x2
   16360:	bl	f58c <__sanitizer_get_allocated_size@@Base+0xa2c>
   16364:	mov	w1, #0x1                   	// #1
   16368:	adrp	x0, 1c4000 <__asan_cplus_demangle_builtin_types@@Base+0x147b40>
   1636c:	add	x0, x0, #0x140
   16370:	bl	f418 <__sanitizer_get_allocated_size@@Base+0x8b8>
   16374:	and	w0, w0, #0xff
   16378:	cmp	w0, #0x0
   1637c:	cset	w0, eq  // eq = none
   16380:	and	w0, w0, #0xff
   16384:	cmp	w0, #0x0
   16388:	b.eq	163ac <__sancov_default_options@@Base+0x210>  // b.none
   1638c:	mov	w1, #0xffffffff            	// #-1
   16390:	ldr	x0, [sp, #24]
   16394:	bl	16c10 <__sancov_default_options@@Base+0xa74>
   16398:	mov	w2, #0x8                   	// #8
   1639c:	mov	w1, #0x1                   	// #1
   163a0:	adrp	x0, 1c4000 <__asan_cplus_demangle_builtin_types@@Base+0x147b40>
   163a4:	add	x0, x0, #0x140
   163a8:	bl	f350 <__sanitizer_get_allocated_size@@Base+0x7f0>
   163ac:	add	x0, sp, #0x10
   163b0:	bl	f5bc <__sanitizer_get_allocated_size@@Base+0xa5c>
   163b4:	ldr	x0, [sp, #24]
   163b8:	ldr	x30, [sp], #32
   163bc:	ret
   163c0:	stp	x19, x30, [sp, #-64]!
   163c4:	str	x0, [sp, #40]
   163c8:	str	x1, [sp, #32]
   163cc:	str	x2, [sp, #24]
   163d0:	ldr	x0, [sp, #24]
   163d4:	cmp	x0, #0x0
   163d8:	b.ne	163e4 <__sancov_default_options@@Base+0x248>  // b.any
   163dc:	mov	x0, #0x8                   	// #8
   163e0:	str	x0, [sp, #24]
   163e4:	ldr	x0, [sp, #32]
   163e8:	cmp	x0, #0x0
   163ec:	b.ne	16438 <__sancov_default_options@@Base+0x29c>  // b.any
   163f0:	add	x2, sp, #0x38
   163f4:	adrp	x0, 1d1000 <__asan_cplus_demangle_builtin_types@@Base+0x154b40>
   163f8:	add	x1, x0, #0x970
   163fc:	mov	x0, x2
   16400:	bl	f58c <__sanitizer_get_allocated_size@@Base+0xa2c>
   16404:	bl	16318 <__sancov_default_options@@Base+0x17c>
   16408:	mov	x4, x0
   1640c:	ldr	x3, [sp, #24]
   16410:	ldr	x2, [sp, #40]
   16414:	adrp	x0, 1c4000 <__asan_cplus_demangle_builtin_types@@Base+0x147b40>
   16418:	add	x1, x0, #0x150
   1641c:	mov	x0, x4
   16420:	bl	16c5c <__sancov_default_options@@Base+0xac0>
   16424:	mov	x19, x0
   16428:	nop
   1642c:	add	x0, sp, #0x38
   16430:	bl	f5bc <__sanitizer_get_allocated_size@@Base+0xa5c>
   16434:	b	16454 <__sancov_default_options@@Base+0x2b8>
   16438:	bl	16318 <__sancov_default_options@@Base+0x17c>
   1643c:	ldr	x3, [sp, #24]
   16440:	ldr	x2, [sp, #40]
   16444:	ldr	x1, [sp, #32]
   16448:	bl	16c5c <__sancov_default_options@@Base+0xac0>
   1644c:	mov	x19, x0
   16450:	nop
   16454:	mov	x0, x19
   16458:	ldp	x19, x30, [sp], #64
   1645c:	ret
   16460:	stp	x19, x30, [sp, #-64]!
   16464:	str	x0, [sp, #40]
   16468:	str	x1, [sp, #32]
   1646c:	str	x2, [sp, #24]
   16470:	mov	x0, #0x8                   	// #8
   16474:	str	x0, [sp, #56]
   16478:	ldr	x0, [sp, #24]
   1647c:	cmp	x0, #0x0
   16480:	b.ne	164d0 <__sancov_default_options@@Base+0x334>  // b.any
   16484:	add	x2, sp, #0x30
   16488:	adrp	x0, 1d1000 <__asan_cplus_demangle_builtin_types@@Base+0x154b40>
   1648c:	add	x1, x0, #0x970
   16490:	mov	x0, x2
   16494:	bl	f58c <__sanitizer_get_allocated_size@@Base+0xa2c>
   16498:	bl	16318 <__sancov_default_options@@Base+0x17c>
   1649c:	mov	x5, x0
   164a0:	ldr	x4, [sp, #56]
   164a4:	ldr	x3, [sp, #32]
   164a8:	ldr	x2, [sp, #40]
   164ac:	adrp	x0, 1c4000 <__asan_cplus_demangle_builtin_types@@Base+0x147b40>
   164b0:	add	x1, x0, #0x150
   164b4:	mov	x0, x5
   164b8:	bl	16de0 <__sancov_default_options@@Base+0xc44>
   164bc:	mov	x19, x0
   164c0:	nop
   164c4:	add	x0, sp, #0x30
   164c8:	bl	f5bc <__sanitizer_get_allocated_size@@Base+0xa5c>
   164cc:	b	164f0 <__sancov_default_options@@Base+0x354>
   164d0:	bl	16318 <__sancov_default_options@@Base+0x17c>
   164d4:	ldr	x4, [sp, #56]
   164d8:	ldr	x3, [sp, #32]
   164dc:	ldr	x2, [sp, #40]
   164e0:	ldr	x1, [sp, #24]
   164e4:	bl	16de0 <__sancov_default_options@@Base+0xc44>
   164e8:	mov	x19, x0
   164ec:	nop
   164f0:	mov	x0, x19
   164f4:	ldp	x19, x30, [sp], #64
   164f8:	ret
   164fc:	str	x30, [sp, #-48]!
   16500:	str	x0, [sp, #24]
   16504:	str	x1, [sp, #16]
   16508:	ldr	x0, [sp, #16]
   1650c:	cmp	x0, #0x0
   16510:	b.ne	16550 <__sancov_default_options@@Base+0x3b4>  // b.any
   16514:	add	x2, sp, #0x28
   16518:	adrp	x0, 1d1000 <__asan_cplus_demangle_builtin_types@@Base+0x154b40>
   1651c:	add	x1, x0, #0x970
   16520:	mov	x0, x2
   16524:	bl	f58c <__sanitizer_get_allocated_size@@Base+0xa2c>
   16528:	bl	16318 <__sancov_default_options@@Base+0x17c>
   1652c:	mov	x3, x0
   16530:	ldr	x2, [sp, #24]
   16534:	adrp	x0, 1c4000 <__asan_cplus_demangle_builtin_types@@Base+0x147b40>
   16538:	add	x1, x0, #0x150
   1653c:	mov	x0, x3
   16540:	bl	16f0c <__sancov_default_options@@Base+0xd70>
   16544:	add	x0, sp, #0x28
   16548:	bl	f5bc <__sanitizer_get_allocated_size@@Base+0xa5c>
   1654c:	b	16560 <__sancov_default_options@@Base+0x3c4>
   16550:	bl	16318 <__sancov_default_options@@Base+0x17c>
   16554:	ldr	x2, [sp, #24]
   16558:	ldr	x1, [sp, #16]
   1655c:	bl	16f0c <__sancov_default_options@@Base+0xd70>
   16560:	ldr	x30, [sp], #48
   16564:	ret
   16568:	str	x30, [sp, #-32]!
   1656c:	str	x0, [sp, #24]
   16570:	bl	16ad4 <__sancov_default_options@@Base+0x938>
   16574:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   16578:	ldr	x0, [x0, #4008]
   1657c:	ldr	x0, [x0]
   16580:	ldr	x2, [sp, #24]
   16584:	mov	x1, x0
   16588:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   1658c:	add	x0, x0, #0x510
   16590:	bl	2a3fc <OnPrint@@Base+0x454>
   16594:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   16598:	str	x30, [sp, #-64]!
   1659c:	str	x0, [sp, #40]
   165a0:	str	x1, [sp, #32]
   165a4:	str	x2, [sp, #24]
   165a8:	ldr	x0, [sp, #40]
   165ac:	cmn	x0, #0x9
   165b0:	b.ls	165bc <__sancov_default_options@@Base+0x420>  // b.plast
   165b4:	mov	x0, #0x0                   	// #0
   165b8:	b	1661c <__sancov_default_options@@Base+0x480>
   165bc:	ldr	x0, [sp, #40]
   165c0:	add	x0, x0, #0x8
   165c4:	ldr	x2, [sp, #24]
   165c8:	ldr	x1, [sp, #32]
   165cc:	bl	163c0 <__sancov_default_options@@Base+0x224>
   165d0:	str	x0, [sp, #56]
   165d4:	ldr	x0, [sp, #56]
   165d8:	cmp	x0, #0x0
   165dc:	cset	w0, eq  // eq = none
   165e0:	and	w0, w0, #0xff
   165e4:	and	x0, x0, #0xff
   165e8:	cmp	x0, #0x0
   165ec:	b.eq	165fc <__sancov_default_options@@Base+0x460>  // b.none
   165f0:	ldr	x0, [sp, #40]
   165f4:	add	x0, x0, #0x8
   165f8:	bl	16568 <__sancov_default_options@@Base+0x3cc>
   165fc:	ldr	x0, [sp, #56]
   16600:	mov	x1, #0xc041                	// #49217
   16604:	movk	x1, #0xbceb, lsl #16
   16608:	movk	x1, #0xb03a, lsl #32
   1660c:	movk	x1, #0x6a6c, lsl #48
   16610:	str	x1, [x0]
   16614:	ldr	x0, [sp, #56]
   16618:	add	x0, x0, #0x8
   1661c:	ldr	x30, [sp], #64
   16620:	ret
   16624:	str	x30, [sp, #-80]!
   16628:	str	x0, [sp, #40]
   1662c:	str	x1, [sp, #32]
   16630:	str	x2, [sp, #24]
   16634:	ldr	x0, [sp, #40]
   16638:	cmp	x0, #0x0
   1663c:	b.ne	16654 <__sancov_default_options@@Base+0x4b8>  // b.any
   16640:	mov	x2, #0x0                   	// #0
   16644:	ldr	x1, [sp, #24]
   16648:	ldr	x0, [sp, #32]
   1664c:	bl	16598 <__sancov_default_options@@Base+0x3fc>
   16650:	b	16720 <__sancov_default_options@@Base+0x584>
   16654:	ldr	x0, [sp, #32]
   16658:	cmn	x0, #0x9
   1665c:	b.ls	16668 <__sancov_default_options@@Base+0x4cc>  // b.plast
   16660:	mov	x0, #0x0                   	// #0
   16664:	b	16720 <__sancov_default_options@@Base+0x584>
   16668:	ldr	x0, [sp, #40]
   1666c:	sub	x0, x0, #0x8
   16670:	str	x0, [sp, #40]
   16674:	ldr	x0, [sp, #32]
   16678:	add	x0, x0, #0x8
   1667c:	str	x0, [sp, #32]
   16680:	mov	x0, #0xc041                	// #49217
   16684:	movk	x0, #0xbceb, lsl #16
   16688:	movk	x0, #0xb03a, lsl #32
   1668c:	movk	x0, #0x6a6c, lsl #48
   16690:	str	x0, [sp, #72]
   16694:	ldr	x0, [sp, #40]
   16698:	ldr	x0, [x0]
   1669c:	str	x0, [sp, #64]
   166a0:	ldr	x1, [sp, #72]
   166a4:	ldr	x0, [sp, #64]
   166a8:	cmp	x1, x0
   166ac:	cset	w0, ne  // ne = any
   166b0:	and	w0, w0, #0xff
   166b4:	and	x0, x0, #0xff
   166b8:	cmp	x0, #0x0
   166bc:	b.eq	166e0 <__sancov_default_options@@Base+0x544>  // b.none
   166c0:	ldr	x4, [sp, #64]
   166c4:	ldr	x3, [sp, #72]
   166c8:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   166cc:	add	x2, x0, #0x560
   166d0:	mov	w1, #0xa5                  	// #165
   166d4:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   166d8:	add	x0, x0, #0x588
   166dc:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   166e0:	ldr	x2, [sp, #24]
   166e4:	ldr	x1, [sp, #32]
   166e8:	ldr	x0, [sp, #40]
   166ec:	bl	16460 <__sancov_default_options@@Base+0x2c4>
   166f0:	str	x0, [sp, #56]
   166f4:	ldr	x0, [sp, #56]
   166f8:	cmp	x0, #0x0
   166fc:	cset	w0, eq  // eq = none
   16700:	and	w0, w0, #0xff
   16704:	and	x0, x0, #0xff
   16708:	cmp	x0, #0x0
   1670c:	b.eq	16718 <__sancov_default_options@@Base+0x57c>  // b.none
   16710:	ldr	x0, [sp, #32]
   16714:	bl	16568 <__sancov_default_options@@Base+0x3cc>
   16718:	ldr	x0, [sp, #56]
   1671c:	add	x0, x0, #0x8
   16720:	ldr	x30, [sp], #80
   16724:	ret
   16728:	str	x30, [sp, #-64]!
   1672c:	str	x0, [sp, #40]
   16730:	str	x1, [sp, #32]
   16734:	str	x2, [sp, #24]
   16738:	ldr	x1, [sp, #32]
   1673c:	ldr	x0, [sp, #40]
   16740:	bl	f2d0 <__sanitizer_get_allocated_size@@Base+0x770>
   16744:	and	w0, w0, #0xff
   16748:	and	x0, x0, #0xff
   1674c:	cmp	x0, #0x0
   16750:	cset	w0, ne  // ne = any
   16754:	and	w0, w0, #0xff
   16758:	cmp	w0, #0x0
   1675c:	b.eq	16788 <__sancov_default_options@@Base+0x5ec>  // b.none
   16760:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   16764:	ldr	x0, [x0, #4008]
   16768:	ldr	x0, [x0]
   1676c:	ldr	x3, [sp, #32]
   16770:	ldr	x2, [sp, #40]
   16774:	mov	x1, x0
   16778:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   1677c:	add	x0, x0, #0x5d0
   16780:	bl	2a3fc <OnPrint@@Base+0x454>
   16784:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   16788:	ldr	x1, [sp, #40]
   1678c:	ldr	x0, [sp, #32]
   16790:	mul	x0, x1, x0
   16794:	mov	x2, #0x0                   	// #0
   16798:	ldr	x1, [sp, #24]
   1679c:	bl	16598 <__sancov_default_options@@Base+0x3fc>
   167a0:	str	x0, [sp, #56]
   167a4:	ldr	x0, [sp, #56]
   167a8:	cmp	x0, #0x0
   167ac:	cset	w0, ne  // ne = any
   167b0:	and	w0, w0, #0xff
   167b4:	and	x0, x0, #0xff
   167b8:	cmp	x0, #0x0
   167bc:	b.eq	167dc <__sancov_default_options@@Base+0x640>  // b.none
   167c0:	ldr	x1, [sp, #40]
   167c4:	ldr	x0, [sp, #32]
   167c8:	mul	x0, x1, x0
   167cc:	mov	x2, x0
   167d0:	mov	w1, #0x0                   	// #0
   167d4:	ldr	x0, [sp, #56]
   167d8:	bl	21754 <__sanitizer_set_report_fd@@Base+0x255c>
   167dc:	ldr	x0, [sp, #56]
   167e0:	ldr	x30, [sp], #64
   167e4:	ret
   167e8:	str	x30, [sp, #-48]!
   167ec:	str	x0, [sp, #24]
   167f0:	str	x1, [sp, #16]
   167f4:	ldr	x0, [sp, #24]
   167f8:	cmp	x0, #0x0
   167fc:	b.eq	16884 <__sancov_default_options@@Base+0x6e8>  // b.none
   16800:	ldr	x0, [sp, #24]
   16804:	sub	x0, x0, #0x8
   16808:	str	x0, [sp, #24]
   1680c:	mov	x0, #0xc041                	// #49217
   16810:	movk	x0, #0xbceb, lsl #16
   16814:	movk	x0, #0xb03a, lsl #32
   16818:	movk	x0, #0x6a6c, lsl #48
   1681c:	str	x0, [sp, #40]
   16820:	ldr	x0, [sp, #24]
   16824:	ldr	x0, [x0]
   16828:	str	x0, [sp, #32]
   1682c:	ldr	x1, [sp, #40]
   16830:	ldr	x0, [sp, #32]
   16834:	cmp	x1, x0
   16838:	cset	w0, ne  // ne = any
   1683c:	and	w0, w0, #0xff
   16840:	and	x0, x0, #0xff
   16844:	cmp	x0, #0x0
   16848:	b.eq	1686c <__sancov_default_options@@Base+0x6d0>  // b.none
   1684c:	ldr	x4, [sp, #32]
   16850:	ldr	x3, [sp, #40]
   16854:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   16858:	add	x2, x0, #0x560
   1685c:	mov	w1, #0xbd                  	// #189
   16860:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   16864:	add	x0, x0, #0x588
   16868:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1686c:	ldr	x0, [sp, #24]
   16870:	str	xzr, [x0]
   16874:	ldr	x1, [sp, #16]
   16878:	ldr	x0, [sp, #24]
   1687c:	bl	164fc <__sancov_default_options@@Base+0x360>
   16880:	b	16888 <__sancov_default_options@@Base+0x6ec>
   16884:	nop
   16888:	ldr	x30, [sp], #48
   1688c:	ret
   16890:	str	x30, [sp, #-64]!
   16894:	str	x0, [sp, #24]
   16898:	str	x1, [sp, #16]
   1689c:	adrp	x0, 7d000 <_Unwind_Backtrace@GCC_3.3>
   168a0:	add	x0, x0, #0x3b8
   168a4:	ldr	x0, [x0]
   168a8:	mov	x1, x0
   168ac:	ldr	x0, [sp, #16]
   168b0:	bl	a518 <__lsan_do_recoverable_leak_check@@Base+0x38c>
   168b4:	str	x0, [sp, #16]
   168b8:	ldr	x0, [sp, #24]
   168bc:	ldr	x1, [x0]
   168c0:	ldr	x0, [sp, #24]
   168c4:	ldr	x0, [x0, #8]
   168c8:	sub	x1, x1, x0
   168cc:	ldr	x0, [sp, #16]
   168d0:	cmp	x1, x0
   168d4:	b.ge	16954 <__sancov_default_options@@Base+0x7b8>  // b.tcont
   168d8:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
   168dc:	mov	x1, x0
   168e0:	ldr	x0, [sp, #16]
   168e4:	bl	ae7c <__lsan_do_recoverable_leak_check@@Base+0xcf0>
   168e8:	str	x0, [sp, #56]
   168ec:	mov	w2, #0x0                   	// #0
   168f0:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   168f4:	add	x1, x0, #0x640
   168f8:	ldr	x0, [sp, #56]
   168fc:	bl	26a50 <__sanitizer_set_report_fd@@Base+0x7858>
   16900:	mov	x1, x0
   16904:	ldr	x0, [sp, #24]
   16908:	str	x1, [x0, #8]
   1690c:	ldr	x0, [sp, #24]
   16910:	ldr	x1, [x0, #8]
   16914:	ldr	x0, [sp, #56]
   16918:	add	x1, x1, x0
   1691c:	ldr	x0, [sp, #24]
   16920:	str	x1, [x0]
   16924:	adrp	x0, 1d1000 <__asan_cplus_demangle_builtin_types@@Base+0x154b40>
   16928:	add	x0, x0, #0x978
   1692c:	ldr	x0, [x0]
   16930:	cmp	x0, #0x0
   16934:	b.eq	16954 <__sancov_default_options@@Base+0x7b8>  // b.none
   16938:	adrp	x0, 1d1000 <__asan_cplus_demangle_builtin_types@@Base+0x154b40>
   1693c:	add	x0, x0, #0x978
   16940:	ldr	x2, [x0]
   16944:	ldr	x0, [sp, #24]
   16948:	ldr	x0, [x0, #8]
   1694c:	ldr	x1, [sp, #56]
   16950:	blr	x2
   16954:	ldr	x0, [sp, #24]
   16958:	ldr	x1, [x0]
   1695c:	ldr	x0, [sp, #24]
   16960:	ldr	x0, [x0, #8]
   16964:	sub	x1, x1, x0
   16968:	ldr	x0, [sp, #16]
   1696c:	cmp	x1, x0
   16970:	cset	w0, ge  // ge = tcont
   16974:	and	w0, w0, #0xff
   16978:	and	x0, x0, #0xff
   1697c:	str	x0, [sp, #48]
   16980:	str	xzr, [sp, #40]
   16984:	ldr	x1, [sp, #48]
   16988:	ldr	x0, [sp, #40]
   1698c:	cmp	x1, x0
   16990:	cset	w0, eq  // eq = none
   16994:	and	w0, w0, #0xff
   16998:	and	x0, x0, #0xff
   1699c:	cmp	x0, #0x0
   169a0:	b.eq	169c4 <__sancov_default_options@@Base+0x828>  // b.none
   169a4:	ldr	x4, [sp, #40]
   169a8:	ldr	x3, [sp, #48]
   169ac:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   169b0:	add	x2, x0, #0x650
   169b4:	mov	w1, #0xd4                  	// #212
   169b8:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   169bc:	add	x0, x0, #0x588
   169c0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   169c4:	ldr	x0, [sp, #24]
   169c8:	ldr	x0, [x0, #8]
   169cc:	str	x0, [sp, #32]
   169d0:	ldr	x0, [sp, #24]
   169d4:	ldr	x1, [x0, #8]
   169d8:	ldr	x0, [sp, #16]
   169dc:	add	x1, x1, x0
   169e0:	ldr	x0, [sp, #24]
   169e4:	str	x1, [x0, #8]
   169e8:	ldr	x0, [sp, #32]
   169ec:	ldr	x30, [sp], #64
   169f0:	ret
   169f4:	str	x30, [sp, #-48]!
   169f8:	str	x0, [sp, #24]
   169fc:	ldr	x0, [sp, #24]
   16a00:	bl	a3a0 <__lsan_do_recoverable_leak_check@@Base+0x214>
   16a04:	and	w0, w0, #0xff
   16a08:	and	x0, x0, #0xff
   16a0c:	str	x0, [sp, #40]
   16a10:	str	xzr, [sp, #32]
   16a14:	ldr	x1, [sp, #40]
   16a18:	ldr	x0, [sp, #32]
   16a1c:	cmp	x1, x0
   16a20:	cset	w0, eq  // eq = none
   16a24:	and	w0, w0, #0xff
   16a28:	and	x0, x0, #0xff
   16a2c:	cmp	x0, #0x0
   16a30:	b.eq	16a54 <__sancov_default_options@@Base+0x8b8>  // b.none
   16a34:	ldr	x4, [sp, #32]
   16a38:	ldr	x3, [sp, #40]
   16a3c:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   16a40:	add	x2, x0, #0x690
   16a44:	mov	w1, #0xdb                  	// #219
   16a48:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   16a4c:	add	x0, x0, #0x588
   16a50:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   16a54:	adrp	x0, 7d000 <_Unwind_Backtrace@GCC_3.3>
   16a58:	add	x0, x0, #0x3b8
   16a5c:	ldr	x0, [x0]
   16a60:	mov	x1, x0
   16a64:	ldr	x0, [sp, #24]
   16a68:	bl	ae7c <__lsan_do_recoverable_leak_check@@Base+0xcf0>
   16a6c:	mov	x1, x0
   16a70:	adrp	x0, 7d000 <_Unwind_Backtrace@GCC_3.3>
   16a74:	add	x0, x0, #0x3b8
   16a78:	str	x1, [x0]
   16a7c:	nop
   16a80:	ldr	x30, [sp], #48
   16a84:	ret
   16a88:	sub	sp, sp, #0x10
   16a8c:	str	x0, [sp, #8]
   16a90:	adrp	x0, 1d1000 <__asan_cplus_demangle_builtin_types@@Base+0x154b40>
   16a94:	add	x0, x0, #0x978
   16a98:	ldr	x1, [sp, #8]
   16a9c:	str	x1, [x0]
   16aa0:	nop
   16aa4:	add	sp, sp, #0x10
   16aa8:	ret
   16aac:	str	x30, [sp, #-16]!
   16ab0:	adrp	x0, 1d1000 <__asan_cplus_demangle_builtin_types@@Base+0x154b40>
   16ab4:	add	x0, x0, #0x980
   16ab8:	bl	16fb4 <__sancov_default_options@@Base+0xe18>
   16abc:	and	w0, w0, #0xff
   16ac0:	cmp	w0, #0x0
   16ac4:	cset	w0, ne  // ne = any
   16ac8:	and	w0, w0, #0xff
   16acc:	ldr	x30, [sp], #16
   16ad0:	ret
   16ad4:	str	x30, [sp, #-16]!
   16ad8:	mov	w1, #0x1                   	// #1
   16adc:	adrp	x0, 1d1000 <__asan_cplus_demangle_builtin_types@@Base+0x154b40>
   16ae0:	add	x0, x0, #0x980
   16ae4:	bl	16fd4 <__sancov_default_options@@Base+0xe38>
   16ae8:	nop
   16aec:	ldr	x30, [sp], #16
   16af0:	ret
   16af4:	str	x30, [sp, #-16]!
   16af8:	mov	w1, #0x1                   	// #1
   16afc:	adrp	x0, 1d1000 <__asan_cplus_demangle_builtin_types@@Base+0x154b40>
   16b00:	add	x0, x0, #0x988
   16b04:	bl	f418 <__sanitizer_get_allocated_size@@Base+0x8b8>
   16b08:	and	w0, w0, #0xff
   16b0c:	cmp	w0, #0x0
   16b10:	cset	w0, ne  // ne = any
   16b14:	and	w0, w0, #0xff
   16b18:	ldr	x30, [sp], #16
   16b1c:	ret
   16b20:	str	x30, [sp, #-32]!
   16b24:	strb	w0, [sp, #31]
   16b28:	ldrb	w0, [sp, #31]
   16b2c:	mov	w2, #0x1                   	// #1
   16b30:	mov	w1, w0
   16b34:	adrp	x0, 1d1000 <__asan_cplus_demangle_builtin_types@@Base+0x154b40>
   16b38:	add	x0, x0, #0x988
   16b3c:	bl	f350 <__sanitizer_get_allocated_size@@Base+0x7f0>
   16b40:	nop
   16b44:	ldr	x30, [sp], #32
   16b48:	ret
   16b4c:	str	x30, [sp, #-16]!
   16b50:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   16b54:	add	x0, x0, #0x6b8
   16b58:	bl	2a3fc <OnPrint@@Base+0x454>
   16b5c:	nop
   16b60:	ldr	x30, [sp], #16
   16b64:	ret
   16b68:	str	x30, [sp, #-32]!
   16b6c:	str	x0, [sp, #24]
   16b70:	mov	x2, #0x28                  	// #40
   16b74:	mov	w1, #0x0                   	// #0
   16b78:	ldr	x0, [sp, #24]
   16b7c:	bl	21754 <__sanitizer_set_report_fd@@Base+0x255c>
   16b80:	ldr	x0, [sp, #24]
   16b84:	bl	eecc <__sanitizer_get_allocated_size@@Base+0x36c>
   16b88:	nop
   16b8c:	ldr	x30, [sp], #32
   16b90:	ret
   16b94:	sub	sp, sp, #0x10
   16b98:	str	x0, [sp, #8]
   16b9c:	ldr	x0, [sp, #8]
   16ba0:	add	sp, sp, #0x10
   16ba4:	ret
   16ba8:	str	x30, [sp, #-48]!
   16bac:	str	x0, [sp, #24]
   16bb0:	str	x1, [sp, #16]
   16bb4:	ldr	x0, [sp, #16]
   16bb8:	str	x0, [sp, #40]
   16bbc:	mov	x0, #0x8000                	// #32768
   16bc0:	str	x0, [sp, #32]
   16bc4:	ldr	x1, [sp, #40]
   16bc8:	ldr	x0, [sp, #32]
   16bcc:	cmp	x1, x0
   16bd0:	cset	w0, cs  // cs = hs, nlast
   16bd4:	and	w0, w0, #0xff
   16bd8:	and	x0, x0, #0xff
   16bdc:	cmp	x0, #0x0
   16be0:	b.eq	16c04 <__sancov_default_options@@Base+0xa68>  // b.none
   16be4:	ldr	x4, [sp, #32]
   16be8:	ldr	x3, [sp, #40]
   16bec:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   16bf0:	add	x2, x0, #0x458
   16bf4:	mov	w1, #0x15                  	// #21
   16bf8:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   16bfc:	add	x0, x0, #0x478
   16c00:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   16c04:	nop
   16c08:	ldr	x30, [sp], #48
   16c0c:	ret
   16c10:	str	x30, [sp, #-32]!
   16c14:	str	x0, [sp, #24]
   16c18:	str	w1, [sp, #20]
   16c1c:	ldr	x0, [sp, #24]
   16c20:	ldr	w1, [sp, #20]
   16c24:	bl	16ffc <__sancov_default_options@@Base+0xe60>
   16c28:	ldr	x1, [sp, #24]
   16c2c:	mov	x0, #0xdc0                 	// #3520
   16c30:	movk	x0, #0x8, lsl #16
   16c34:	add	x0, x1, x0
   16c38:	bl	17038 <__sancov_default_options@@Base+0xe9c>
   16c3c:	ldr	x1, [sp, #24]
   16c40:	mov	x0, #0x1008                	// #4104
   16c44:	movk	x0, #0xc, lsl #16
   16c48:	add	x0, x1, x0
   16c4c:	bl	16b68 <__sancov_default_options@@Base+0x9cc>
   16c50:	nop
   16c54:	ldr	x30, [sp], #32
   16c58:	ret
   16c5c:	stp	x19, x20, [sp, #-96]!
   16c60:	str	x30, [sp, #16]
   16c64:	str	x0, [sp, #56]
   16c68:	str	x1, [sp, #48]
   16c6c:	str	x2, [sp, #40]
   16c70:	str	x3, [sp, #32]
   16c74:	ldr	x0, [sp, #40]
   16c78:	cmp	x0, #0x0
   16c7c:	b.ne	16c88 <__sancov_default_options@@Base+0xaec>  // b.any
   16c80:	mov	x0, #0x1                   	// #1
   16c84:	str	x0, [sp, #40]
   16c88:	ldr	x1, [sp, #40]
   16c8c:	ldr	x0, [sp, #32]
   16c90:	add	x0, x1, x0
   16c94:	ldr	x1, [sp, #40]
   16c98:	cmp	x1, x0
   16c9c:	b.ls	16ccc <__sancov_default_options@@Base+0xb30>  // b.plast
   16ca0:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   16ca4:	ldr	x0, [x0, #4008]
   16ca8:	ldr	x0, [x0]
   16cac:	ldr	x3, [sp, #32]
   16cb0:	ldr	x2, [sp, #40]
   16cb4:	mov	x1, x0
   16cb8:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   16cbc:	add	x0, x0, #0x710
   16cc0:	bl	2a3fc <OnPrint@@Base+0x454>
   16cc4:	mov	x0, #0x0                   	// #0
   16cc8:	b	16dd4 <__sancov_default_options@@Base+0xc38>
   16ccc:	ldr	x0, [sp, #40]
   16cd0:	str	x0, [sp, #80]
   16cd4:	ldr	x0, [sp, #32]
   16cd8:	cmp	x0, #0x8
   16cdc:	b.ls	16cf0 <__sancov_default_options@@Base+0xb54>  // b.plast
   16ce0:	ldr	x1, [sp, #32]
   16ce4:	ldr	x0, [sp, #40]
   16ce8:	bl	a518 <__lsan_do_recoverable_leak_check@@Base+0x38c>
   16cec:	str	x0, [sp, #40]
   16cf0:	ldr	x1, [sp, #32]
   16cf4:	ldr	x0, [sp, #40]
   16cf8:	bl	17068 <__sancov_default_options@@Base+0xecc>
   16cfc:	and	w0, w0, #0xff
   16d00:	cmp	w0, #0x0
   16d04:	b.eq	16d34 <__sancov_default_options@@Base+0xb98>  // b.none
   16d08:	ldr	x19, [sp, #48]
   16d0c:	ldr	x20, [sp, #56]
   16d10:	ldr	x0, [sp, #56]
   16d14:	ldr	x1, [sp, #40]
   16d18:	bl	170a0 <__sancov_default_options@@Base+0xf04>
   16d1c:	mov	x2, x0
   16d20:	mov	x1, x20
   16d24:	mov	x0, x19
   16d28:	bl	170bc <__sancov_default_options@@Base+0xf20>
   16d2c:	str	x0, [sp, #88]
   16d30:	b	16d6c <__sancov_default_options@@Base+0xbd0>
   16d34:	ldr	x1, [sp, #56]
   16d38:	mov	x0, #0xdc0                 	// #3520
   16d3c:	movk	x0, #0x8, lsl #16
   16d40:	add	x4, x1, x0
   16d44:	ldr	x1, [sp, #56]
   16d48:	mov	x0, #0x1008                	// #4104
   16d4c:	movk	x0, #0xc, lsl #16
   16d50:	add	x0, x1, x0
   16d54:	ldr	x3, [sp, #32]
   16d58:	ldr	x2, [sp, #80]
   16d5c:	mov	x1, x0
   16d60:	mov	x0, x4
   16d64:	bl	17254 <__sancov_default_options@@Base+0x10b8>
   16d68:	str	x0, [sp, #88]
   16d6c:	ldr	x0, [sp, #32]
   16d70:	cmp	x0, #0x8
   16d74:	b.ls	16dd0 <__sancov_default_options@@Base+0xc34>  // b.plast
   16d78:	ldr	x0, [sp, #32]
   16d7c:	sub	x1, x0, #0x1
   16d80:	ldr	x0, [sp, #88]
   16d84:	and	x0, x1, x0
   16d88:	str	x0, [sp, #72]
   16d8c:	str	xzr, [sp, #64]
   16d90:	ldr	x1, [sp, #72]
   16d94:	ldr	x0, [sp, #64]
   16d98:	cmp	x1, x0
   16d9c:	cset	w0, ne  // ne = any
   16da0:	and	w0, w0, #0xff
   16da4:	and	x0, x0, #0xff
   16da8:	cmp	x0, #0x0
   16dac:	b.eq	16dd0 <__sancov_default_options@@Base+0xc34>  // b.none
   16db0:	ldr	x4, [sp, #64]
   16db4:	ldr	x3, [sp, #72]
   16db8:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   16dbc:	add	x2, x0, #0x770
   16dc0:	mov	w1, #0x42                  	// #66
   16dc4:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   16dc8:	add	x0, x0, #0x7b0
   16dcc:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   16dd0:	ldr	x0, [sp, #88]
   16dd4:	ldr	x30, [sp, #16]
   16dd8:	ldp	x19, x20, [sp], #96
   16ddc:	ret
   16de0:	str	x30, [sp, #-112]!
   16de4:	str	x0, [sp, #56]
   16de8:	str	x1, [sp, #48]
   16dec:	str	x2, [sp, #40]
   16df0:	str	x3, [sp, #32]
   16df4:	str	x4, [sp, #24]
   16df8:	ldr	x0, [sp, #40]
   16dfc:	cmp	x0, #0x0
   16e00:	b.ne	16e1c <__sancov_default_options@@Base+0xc80>  // b.any
   16e04:	ldr	x3, [sp, #24]
   16e08:	ldr	x2, [sp, #32]
   16e0c:	ldr	x1, [sp, #48]
   16e10:	ldr	x0, [sp, #56]
   16e14:	bl	16c5c <__sancov_default_options@@Base+0xac0>
   16e18:	b	16f04 <__sancov_default_options@@Base+0xd68>
   16e1c:	ldr	x0, [sp, #32]
   16e20:	cmp	x0, #0x0
   16e24:	b.ne	16e40 <__sancov_default_options@@Base+0xca4>  // b.any
   16e28:	ldr	x2, [sp, #40]
   16e2c:	ldr	x1, [sp, #48]
   16e30:	ldr	x0, [sp, #56]
   16e34:	bl	16f0c <__sancov_default_options@@Base+0xd70>
   16e38:	mov	x0, #0x0                   	// #0
   16e3c:	b	16f04 <__sancov_default_options@@Base+0xd68>
   16e40:	ldr	x1, [sp, #40]
   16e44:	ldr	x0, [sp, #56]
   16e48:	bl	17790 <__sancov_default_options@@Base+0x15f4>
   16e4c:	and	w0, w0, #0xff
   16e50:	and	x0, x0, #0xff
   16e54:	str	x0, [sp, #104]
   16e58:	str	xzr, [sp, #96]
   16e5c:	ldr	x1, [sp, #104]
   16e60:	ldr	x0, [sp, #96]
   16e64:	cmp	x1, x0
   16e68:	cset	w0, eq  // eq = none
   16e6c:	and	w0, w0, #0xff
   16e70:	and	x0, x0, #0xff
   16e74:	cmp	x0, #0x0
   16e78:	b.eq	16e9c <__sancov_default_options@@Base+0xd00>  // b.none
   16e7c:	ldr	x4, [sp, #96]
   16e80:	ldr	x3, [sp, #104]
   16e84:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   16e88:	add	x2, x0, #0x800
   16e8c:	mov	w1, #0x62                  	// #98
   16e90:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   16e94:	add	x0, x0, #0x7b0
   16e98:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   16e9c:	ldr	x1, [sp, #40]
   16ea0:	ldr	x0, [sp, #56]
   16ea4:	bl	177e0 <__sancov_default_options@@Base+0x1644>
   16ea8:	str	x0, [sp, #88]
   16eac:	ldr	x1, [sp, #88]
   16eb0:	ldr	x0, [sp, #32]
   16eb4:	bl	aeac <__lsan_do_recoverable_leak_check@@Base+0xd20>
   16eb8:	str	x0, [sp, #80]
   16ebc:	ldr	x3, [sp, #24]
   16ec0:	ldr	x2, [sp, #32]
   16ec4:	ldr	x1, [sp, #48]
   16ec8:	ldr	x0, [sp, #56]
   16ecc:	bl	16c5c <__sancov_default_options@@Base+0xac0>
   16ed0:	str	x0, [sp, #72]
   16ed4:	ldr	x0, [sp, #72]
   16ed8:	cmp	x0, #0x0
   16edc:	b.eq	16ef0 <__sancov_default_options@@Base+0xd54>  // b.none
   16ee0:	ldr	x2, [sp, #80]
   16ee4:	ldr	x1, [sp, #40]
   16ee8:	ldr	x0, [sp, #72]
   16eec:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
   16ef0:	ldr	x2, [sp, #40]
   16ef4:	ldr	x1, [sp, #48]
   16ef8:	ldr	x0, [sp, #56]
   16efc:	bl	16f0c <__sancov_default_options@@Base+0xd70>
   16f00:	ldr	x0, [sp, #72]
   16f04:	ldr	x30, [sp], #112
   16f08:	ret
   16f0c:	stp	x19, x20, [sp, #-64]!
   16f10:	str	x30, [sp, #16]
   16f14:	str	x0, [sp, #56]
   16f18:	str	x1, [sp, #48]
   16f1c:	str	x2, [sp, #40]
   16f20:	ldr	x0, [sp, #40]
   16f24:	cmp	x0, #0x0
   16f28:	b.eq	16fa4 <__sancov_default_options@@Base+0xe08>  // b.none
   16f2c:	ldr	x0, [sp, #56]
   16f30:	ldr	x1, [sp, #40]
   16f34:	bl	17834 <__sancov_default_options@@Base+0x1698>
   16f38:	and	w0, w0, #0xff
   16f3c:	cmp	w0, #0x0
   16f40:	b.eq	16f70 <__sancov_default_options@@Base+0xdd4>  // b.none
   16f44:	ldr	x19, [sp, #48]
   16f48:	ldr	x20, [sp, #56]
   16f4c:	ldr	x0, [sp, #56]
   16f50:	ldr	x1, [sp, #40]
   16f54:	bl	17880 <__sancov_default_options@@Base+0x16e4>
   16f58:	ldr	x3, [sp, #40]
   16f5c:	mov	x2, x0
   16f60:	mov	x1, x20
   16f64:	mov	x0, x19
   16f68:	bl	178bc <__sancov_default_options@@Base+0x1720>
   16f6c:	b	16fa8 <__sancov_default_options@@Base+0xe0c>
   16f70:	ldr	x1, [sp, #56]
   16f74:	mov	x0, #0xdc0                 	// #3520
   16f78:	movk	x0, #0x8, lsl #16
   16f7c:	add	x3, x1, x0
   16f80:	ldr	x1, [sp, #56]
   16f84:	mov	x0, #0x1008                	// #4104
   16f88:	movk	x0, #0xc, lsl #16
   16f8c:	add	x0, x1, x0
   16f90:	ldr	x2, [sp, #40]
   16f94:	mov	x1, x0
   16f98:	mov	x0, x3
   16f9c:	bl	17a1c <__sancov_default_options@@Base+0x1880>
   16fa0:	b	16fa8 <__sancov_default_options@@Base+0xe0c>
   16fa4:	nop
   16fa8:	ldr	x30, [sp, #16]
   16fac:	ldp	x19, x20, [sp], #64
   16fb0:	ret
   16fb4:	str	x30, [sp, #-32]!
   16fb8:	str	x0, [sp, #24]
   16fbc:	mov	w1, #0x1                   	// #1
   16fc0:	ldr	x0, [sp, #24]
   16fc4:	bl	f418 <__sanitizer_get_allocated_size@@Base+0x8b8>
   16fc8:	and	w0, w0, #0xff
   16fcc:	ldr	x30, [sp], #32
   16fd0:	ret
   16fd4:	str	x30, [sp, #-32]!
   16fd8:	str	x0, [sp, #24]
   16fdc:	strb	w1, [sp, #23]
   16fe0:	mov	w2, #0x1                   	// #1
   16fe4:	ldrb	w1, [sp, #23]
   16fe8:	ldr	x0, [sp, #24]
   16fec:	bl	f350 <__sanitizer_get_allocated_size@@Base+0x7f0>
   16ff0:	nop
   16ff4:	ldr	x30, [sp], #32
   16ff8:	ret
   16ffc:	str	x30, [sp, #-32]!
   17000:	str	x0, [sp, #24]
   17004:	str	w1, [sp, #20]
   17008:	ldr	x0, [sp, #24]
   1700c:	bl	11230 <__sanitizer_get_allocated_size@@Base+0x26d0>
   17010:	ldr	x1, [sp, #24]
   17014:	mov	x0, #0x40                  	// #64
   17018:	movk	x0, #0x8, lsl #16
   1701c:	add	x0, x1, x0
   17020:	mov	x2, #0xd80                 	// #3456
   17024:	mov	w1, #0x0                   	// #0
   17028:	bl	21754 <__sanitizer_set_report_fd@@Base+0x255c>
   1702c:	nop
   17030:	ldr	x30, [sp], #32
   17034:	ret
   17038:	str	x30, [sp, #-32]!
   1703c:	str	x0, [sp, #24]
   17040:	mov	x2, #0x248                 	// #584
   17044:	movk	x2, #0x4, lsl #16
   17048:	mov	w1, #0x0                   	// #0
   1704c:	ldr	x0, [sp, #24]
   17050:	bl	21754 <__sanitizer_set_report_fd@@Base+0x255c>
   17054:	ldr	x0, [sp, #24]
   17058:	bl	17c58 <__sancov_default_options@@Base+0x1abc>
   1705c:	nop
   17060:	ldr	x30, [sp], #32
   17064:	ret
   17068:	sub	sp, sp, #0x10
   1706c:	str	x0, [sp, #8]
   17070:	str	x1, [sp]
   17074:	ldr	x0, [sp, #8]
   17078:	cmp	x0, #0x20, lsl #12
   1707c:	b.hi	17094 <__sancov_default_options@@Base+0xef8>  // b.pmore
   17080:	ldr	x0, [sp]
   17084:	cmp	x0, #0x20, lsl #12
   17088:	b.hi	17094 <__sancov_default_options@@Base+0xef8>  // b.pmore
   1708c:	mov	w0, #0x1                   	// #1
   17090:	b	17098 <__sancov_default_options@@Base+0xefc>
   17094:	mov	w0, #0x0                   	// #0
   17098:	add	sp, sp, #0x10
   1709c:	ret
   170a0:	str	x30, [sp, #-32]!
   170a4:	str	x0, [sp, #24]
   170a8:	str	x1, [sp, #16]
   170ac:	ldr	x0, [sp, #16]
   170b0:	bl	113e4 <__sanitizer_get_allocated_size@@Base+0x2884>
   170b4:	ldr	x30, [sp], #32
   170b8:	ret
   170bc:	str	x30, [sp, #-96]!
   170c0:	str	x0, [sp, #40]
   170c4:	str	x1, [sp, #32]
   170c8:	str	x2, [sp, #24]
   170cc:	ldr	x0, [sp, #24]
   170d0:	str	x0, [sp, #88]
   170d4:	str	xzr, [sp, #80]
   170d8:	ldr	x1, [sp, #88]
   170dc:	ldr	x0, [sp, #80]
   170e0:	cmp	x1, x0
   170e4:	cset	w0, eq  // eq = none
   170e8:	and	w0, w0, #0xff
   170ec:	and	x0, x0, #0xff
   170f0:	cmp	x0, #0x0
   170f4:	b.eq	17118 <__sancov_default_options@@Base+0xf7c>  // b.none
   170f8:	ldr	x4, [sp, #80]
   170fc:	ldr	x3, [sp, #88]
   17100:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   17104:	add	x2, x0, #0x820
   17108:	mov	w1, #0x9f                  	// #159
   1710c:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   17110:	add	x0, x0, #0x838
   17114:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   17118:	ldr	x0, [sp, #24]
   1711c:	str	x0, [sp, #72]
   17120:	mov	x0, #0x36                  	// #54
   17124:	str	x0, [sp, #64]
   17128:	ldr	x1, [sp, #72]
   1712c:	ldr	x0, [sp, #64]
   17130:	cmp	x1, x0
   17134:	cset	w0, cs  // cs = hs, nlast
   17138:	and	w0, w0, #0xff
   1713c:	and	x0, x0, #0xff
   17140:	cmp	x0, #0x0
   17144:	b.eq	17168 <__sancov_default_options@@Base+0xfcc>  // b.none
   17148:	ldr	x4, [sp, #64]
   1714c:	ldr	x3, [sp, #72]
   17150:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   17154:	add	x2, x0, #0x888
   17158:	mov	w1, #0xa0                  	// #160
   1715c:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   17160:	add	x0, x0, #0x838
   17164:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   17168:	ldr	x0, [sp, #24]
   1716c:	lsl	x0, x0, #10
   17170:	ldr	x1, [sp, #40]
   17174:	add	x0, x1, x0
   17178:	str	x0, [sp, #56]
   1717c:	ldr	x0, [sp, #56]
   17180:	ldr	x0, [x0]
   17184:	cmp	x0, #0x0
   17188:	cset	w0, eq  // eq = none
   1718c:	and	w0, w0, #0xff
   17190:	and	x0, x0, #0xff
   17194:	cmp	x0, #0x0
   17198:	b.eq	171dc <__sancov_default_options@@Base+0x1040>  // b.none
   1719c:	ldr	x3, [sp, #24]
   171a0:	ldr	x2, [sp, #32]
   171a4:	ldr	x1, [sp, #56]
   171a8:	ldr	x0, [sp, #40]
   171ac:	bl	17c94 <__sancov_default_options@@Base+0x1af8>
   171b0:	and	w0, w0, #0xff
   171b4:	eor	w0, w0, #0x1
   171b8:	and	w0, w0, #0xff
   171bc:	and	x0, x0, #0xff
   171c0:	cmp	x0, #0x0
   171c4:	cset	w0, ne  // ne = any
   171c8:	and	w0, w0, #0xff
   171cc:	cmp	w0, #0x0
   171d0:	b.eq	171dc <__sancov_default_options@@Base+0x1040>  // b.none
   171d4:	mov	x0, #0x0                   	// #0
   171d8:	b	1724c <__sancov_default_options@@Base+0x10b0>
   171dc:	ldr	x0, [sp, #56]
   171e0:	ldr	x0, [x0]
   171e4:	sub	x1, x0, #0x1
   171e8:	ldr	x0, [sp, #56]
   171ec:	str	x1, [x0]
   171f0:	ldr	x0, [sp, #56]
   171f4:	ldr	x1, [x0]
   171f8:	ldr	x0, [sp, #56]
   171fc:	add	x1, x1, #0x4
   17200:	ldr	x0, [x0, x1, lsl #3]
   17204:	str	x0, [sp, #48]
   17208:	ldr	x0, [sp, #56]
   1720c:	ldr	x0, [x0]
   17210:	sub	x1, x0, #0x1
   17214:	ldr	x0, [sp, #56]
   17218:	add	x1, x1, #0x4
   1721c:	ldr	x0, [x0, x1, lsl #3]
   17220:	prfm	pldl1keep, [x0]
   17224:	ldr	x1, [sp, #40]
   17228:	mov	x0, #0xd800                	// #55296
   1722c:	add	x3, x1, x0
   17230:	ldr	x0, [sp, #56]
   17234:	ldr	x0, [x0, #16]
   17238:	mov	x2, x0
   1723c:	mov	w1, #0x0                   	// #0
   17240:	mov	x0, x3
   17244:	bl	edb8 <__sanitizer_get_allocated_size@@Base+0x258>
   17248:	ldr	x0, [sp, #48]
   1724c:	ldr	x30, [sp], #96
   17250:	ret
   17254:	str	x30, [sp, #-240]!
   17258:	str	x0, [sp, #40]
   1725c:	str	x1, [sp, #32]
   17260:	str	x2, [sp, #24]
   17264:	str	x3, [sp, #16]
   17268:	ldr	x0, [sp, #16]
   1726c:	bl	a3a0 <__lsan_do_recoverable_leak_check@@Base+0x214>
   17270:	and	w0, w0, #0xff
   17274:	and	x0, x0, #0xff
   17278:	str	x0, [sp, #216]
   1727c:	str	xzr, [sp, #208]
   17280:	ldr	x1, [sp, #216]
   17284:	ldr	x0, [sp, #208]
   17288:	cmp	x1, x0
   1728c:	cset	w0, eq  // eq = none
   17290:	and	w0, w0, #0xff
   17294:	and	x0, x0, #0xff
   17298:	cmp	x0, #0x0
   1729c:	b.eq	172c0 <__sancov_default_options@@Base+0x1124>  // b.none
   172a0:	ldr	x4, [sp, #208]
   172a4:	ldr	x3, [sp, #216]
   172a8:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   172ac:	add	x2, x0, #0x690
   172b0:	mov	w1, #0x53                  	// #83
   172b4:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   172b8:	add	x0, x0, #0x478
   172bc:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   172c0:	ldr	x1, [sp, #24]
   172c4:	ldr	x0, [sp, #40]
   172c8:	bl	17d94 <__sancov_default_options@@Base+0x1bf8>
   172cc:	str	x0, [sp, #232]
   172d0:	ldr	x0, [sp, #40]
   172d4:	ldr	x0, [x0]
   172d8:	ldr	x1, [sp, #16]
   172dc:	cmp	x1, x0
   172e0:	b.ls	172f4 <__sancov_default_options@@Base+0x1158>  // b.plast
   172e4:	ldr	x1, [sp, #232]
   172e8:	ldr	x0, [sp, #16]
   172ec:	add	x0, x1, x0
   172f0:	str	x0, [sp, #232]
   172f4:	ldr	x1, [sp, #232]
   172f8:	ldr	x0, [sp, #24]
   172fc:	cmp	x1, x0
   17300:	b.cs	17330 <__sancov_default_options@@Base+0x1194>  // b.hs, b.nlast
   17304:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   17308:	ldr	x0, [x0, #4008]
   1730c:	ldr	x0, [x0]
   17310:	ldr	x3, [sp, #16]
   17314:	ldr	x2, [sp, #232]
   17318:	mov	x1, x0
   1731c:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   17320:	add	x0, x0, #0x8a8
   17324:	bl	2a3fc <OnPrint@@Base+0x454>
   17328:	mov	x0, #0x0                   	// #0
   1732c:	b	17788 <__sancov_default_options@@Base+0x15ec>
   17330:	adrp	x0, 7d000 <_Unwind_Backtrace@GCC_3.3>
   17334:	add	x0, x0, #0x3c8
   17338:	ldr	x0, [x0]
   1733c:	mov	x1, x0
   17340:	ldr	x0, [sp, #232]
   17344:	bl	26bd8 <__sanitizer_set_report_fd@@Base+0x79e0>
   17348:	str	x0, [sp, #200]
   1734c:	ldr	x0, [sp, #200]
   17350:	cmp	x0, #0x0
   17354:	b.ne	17360 <__sancov_default_options@@Base+0x11c4>  // b.any
   17358:	mov	x0, #0x0                   	// #0
   1735c:	b	17788 <__sancov_default_options@@Base+0x15ec>
   17360:	ldr	x0, [sp, #40]
   17364:	ldr	x0, [x0]
   17368:	mov	x1, x0
   1736c:	ldr	x0, [sp, #200]
   17370:	bl	ed50 <__sanitizer_get_allocated_size@@Base+0x1f0>
   17374:	and	w0, w0, #0xff
   17378:	and	x0, x0, #0xff
   1737c:	str	x0, [sp, #192]
   17380:	str	xzr, [sp, #184]
   17384:	ldr	x1, [sp, #192]
   17388:	ldr	x0, [sp, #184]
   1738c:	cmp	x1, x0
   17390:	cset	w0, eq  // eq = none
   17394:	and	w0, w0, #0xff
   17398:	and	x0, x0, #0xff
   1739c:	cmp	x0, #0x0
   173a0:	b.eq	173c4 <__sancov_default_options@@Base+0x1228>  // b.none
   173a4:	ldr	x4, [sp, #184]
   173a8:	ldr	x3, [sp, #192]
   173ac:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   173b0:	add	x2, x0, #0x910
   173b4:	mov	w1, #0x62                  	// #98
   173b8:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   173bc:	add	x0, x0, #0x478
   173c0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   173c4:	add	x0, sp, #0x40
   173c8:	ldr	x2, [sp, #232]
   173cc:	ldr	x1, [sp, #200]
   173d0:	bl	ed80 <__sanitizer_get_allocated_size@@Base+0x220>
   173d4:	ldr	x1, [sp, #200]
   173d8:	ldr	x0, [sp, #232]
   173dc:	add	x0, x1, x0
   173e0:	str	x0, [sp, #176]
   173e4:	ldr	x0, [sp, #40]
   173e8:	ldr	x0, [x0]
   173ec:	ldr	x1, [sp, #200]
   173f0:	add	x0, x1, x0
   173f4:	str	x0, [sp, #224]
   173f8:	ldr	x0, [sp, #16]
   173fc:	sub	x1, x0, #0x1
   17400:	ldr	x0, [sp, #224]
   17404:	and	x0, x1, x0
   17408:	cmp	x0, #0x0
   1740c:	b.eq	17434 <__sancov_default_options@@Base+0x1298>  // b.none
   17410:	ldr	x0, [sp, #16]
   17414:	sub	x1, x0, #0x1
   17418:	ldr	x0, [sp, #224]
   1741c:	and	x0, x1, x0
   17420:	ldr	x1, [sp, #16]
   17424:	sub	x0, x1, x0
   17428:	ldr	x1, [sp, #224]
   1742c:	add	x0, x1, x0
   17430:	str	x0, [sp, #224]
   17434:	ldr	x1, [sp, #16]
   17438:	ldr	x0, [sp, #224]
   1743c:	bl	ed50 <__sanitizer_get_allocated_size@@Base+0x1f0>
   17440:	and	w0, w0, #0xff
   17444:	and	x0, x0, #0xff
   17448:	str	x0, [sp, #168]
   1744c:	str	xzr, [sp, #160]
   17450:	ldr	x1, [sp, #168]
   17454:	ldr	x0, [sp, #160]
   17458:	cmp	x1, x0
   1745c:	cset	w0, eq  // eq = none
   17460:	and	w0, w0, #0xff
   17464:	and	x0, x0, #0xff
   17468:	cmp	x0, #0x0
   1746c:	b.eq	17490 <__sancov_default_options@@Base+0x12f4>  // b.none
   17470:	ldr	x4, [sp, #160]
   17474:	ldr	x3, [sp, #168]
   17478:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   1747c:	add	x2, x0, #0x940
   17480:	mov	w1, #0x68                  	// #104
   17484:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   17488:	add	x0, x0, #0x478
   1748c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   17490:	ldr	x0, [sp, #40]
   17494:	ldr	x0, [x0]
   17498:	mov	x1, x0
   1749c:	ldr	x0, [sp, #224]
   174a0:	bl	ed50 <__sanitizer_get_allocated_size@@Base+0x1f0>
   174a4:	and	w0, w0, #0xff
   174a8:	and	x0, x0, #0xff
   174ac:	str	x0, [sp, #152]
   174b0:	str	xzr, [sp, #144]
   174b4:	ldr	x1, [sp, #152]
   174b8:	ldr	x0, [sp, #144]
   174bc:	cmp	x1, x0
   174c0:	cset	w0, eq  // eq = none
   174c4:	and	w0, w0, #0xff
   174c8:	and	x0, x0, #0xff
   174cc:	cmp	x0, #0x0
   174d0:	b.eq	174f4 <__sancov_default_options@@Base+0x1358>  // b.none
   174d4:	ldr	x4, [sp, #144]
   174d8:	ldr	x3, [sp, #152]
   174dc:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   174e0:	add	x2, x0, #0x968
   174e4:	mov	w1, #0x69                  	// #105
   174e8:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   174ec:	add	x0, x0, #0x478
   174f0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   174f4:	ldr	x1, [sp, #224]
   174f8:	ldr	x0, [sp, #24]
   174fc:	add	x0, x1, x0
   17500:	str	x0, [sp, #136]
   17504:	ldr	x0, [sp, #200]
   17508:	str	x0, [sp, #128]
   1750c:	ldr	x1, [sp, #136]
   17510:	ldr	x0, [sp, #128]
   17514:	cmp	x1, x0
   17518:	cset	w0, cc  // cc = lo, ul, last
   1751c:	and	w0, w0, #0xff
   17520:	and	x0, x0, #0xff
   17524:	cmp	x0, #0x0
   17528:	b.eq	1754c <__sancov_default_options@@Base+0x13b0>  // b.none
   1752c:	ldr	x4, [sp, #128]
   17530:	ldr	x3, [sp, #136]
   17534:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   17538:	add	x2, x0, #0x990
   1753c:	mov	w1, #0x6a                  	// #106
   17540:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   17544:	add	x0, x0, #0x478
   17548:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1754c:	ldr	x1, [sp, #224]
   17550:	ldr	x0, [sp, #24]
   17554:	add	x0, x1, x0
   17558:	str	x0, [sp, #120]
   1755c:	ldr	x0, [sp, #176]
   17560:	str	x0, [sp, #112]
   17564:	ldr	x1, [sp, #120]
   17568:	ldr	x0, [sp, #112]
   1756c:	cmp	x1, x0
   17570:	cset	w0, hi  // hi = pmore
   17574:	and	w0, w0, #0xff
   17578:	and	x0, x0, #0xff
   1757c:	cmp	x0, #0x0
   17580:	b.eq	175a4 <__sancov_default_options@@Base+0x1408>  // b.none
   17584:	ldr	x4, [sp, #112]
   17588:	ldr	x3, [sp, #120]
   1758c:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   17590:	add	x2, x0, #0x9b0
   17594:	mov	w1, #0x6b                  	// #107
   17598:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   1759c:	add	x0, x0, #0x478
   175a0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   175a4:	ldr	x1, [sp, #224]
   175a8:	ldr	x0, [sp, #40]
   175ac:	bl	17dcc <__sancov_default_options@@Base+0x1c30>
   175b0:	str	x0, [sp, #104]
   175b4:	ldr	x0, [sp, #104]
   175b8:	ldr	x1, [sp, #24]
   175bc:	str	x1, [x0, #16]
   175c0:	ldr	x0, [sp, #104]
   175c4:	ldr	x1, [sp, #200]
   175c8:	str	x1, [x0]
   175cc:	ldr	x0, [sp, #104]
   175d0:	ldr	x1, [sp, #232]
   175d4:	str	x1, [x0, #8]
   175d8:	ldr	x0, [sp, #232]
   175dc:	bl	a324 <__lsan_do_recoverable_leak_check@@Base+0x198>
   175e0:	str	x0, [sp, #96]
   175e4:	ldr	x0, [sp, #96]
   175e8:	str	x0, [sp, #88]
   175ec:	mov	x0, #0x40                  	// #64
   175f0:	str	x0, [sp, #80]
   175f4:	ldr	x1, [sp, #88]
   175f8:	ldr	x0, [sp, #80]
   175fc:	cmp	x1, x0
   17600:	cset	w0, cs  // cs = hs, nlast
   17604:	and	w0, w0, #0xff
   17608:	and	x0, x0, #0xff
   1760c:	cmp	x0, #0x0
   17610:	b.eq	17634 <__sancov_default_options@@Base+0x1498>  // b.none
   17614:	ldr	x4, [sp, #80]
   17618:	ldr	x3, [sp, #88]
   1761c:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   17620:	add	x2, x0, #0x9d0
   17624:	mov	w1, #0x71                  	// #113
   17628:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   1762c:	add	x0, x0, #0x478
   17630:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   17634:	ldr	x1, [sp, #40]
   17638:	mov	x0, #0x240                 	// #576
   1763c:	movk	x0, #0x4, lsl #16
   17640:	add	x1, x1, x0
   17644:	add	x0, sp, #0x38
   17648:	bl	f58c <__sanitizer_get_allocated_size@@Base+0xa2c>
   1764c:	ldr	x0, [sp, #40]
   17650:	add	x2, x0, #0x10
   17654:	ldr	x0, [sp, #40]
   17658:	add	x0, x0, #0x40, lsl #12
   1765c:	ldr	x0, [x0, #16]
   17660:	mov	x1, x0
   17664:	mov	x0, x2
   17668:	bl	16ba8 <__sancov_default_options@@Base+0xa0c>
   1766c:	ldr	x0, [sp, #40]
   17670:	add	x0, x0, #0x40, lsl #12
   17674:	ldr	x0, [x0, #16]
   17678:	add	x2, x0, #0x1
   1767c:	ldr	x1, [sp, #40]
   17680:	add	x1, x1, #0x40, lsl #12
   17684:	str	x2, [x1, #16]
   17688:	str	x0, [sp, #72]
   1768c:	ldr	x0, [sp, #104]
   17690:	ldr	x1, [sp, #72]
   17694:	str	x1, [x0, #24]
   17698:	ldr	x0, [sp, #40]
   1769c:	ldr	x1, [x0, #8]
   176a0:	ldr	x0, [sp, #72]
   176a4:	lsl	x0, x0, #3
   176a8:	add	x0, x1, x0
   176ac:	ldr	x1, [sp, #104]
   176b0:	str	x1, [x0]
   176b4:	ldr	x0, [sp, #40]
   176b8:	add	x0, x0, #0x40, lsl #12
   176bc:	strb	wzr, [x0, #24]
   176c0:	ldr	x0, [sp, #40]
   176c4:	add	x0, x0, #0x40, lsl #12
   176c8:	ldr	x0, [x0, #32]
   176cc:	add	x1, x0, #0x1
   176d0:	ldr	x0, [sp, #40]
   176d4:	add	x0, x0, #0x40, lsl #12
   176d8:	str	x1, [x0, #32]
   176dc:	ldr	x0, [sp, #40]
   176e0:	add	x0, x0, #0x40, lsl #12
   176e4:	ldr	x1, [x0, #48]
   176e8:	ldr	x0, [sp, #232]
   176ec:	add	x1, x1, x0
   176f0:	ldr	x0, [sp, #40]
   176f4:	add	x0, x0, #0x40, lsl #12
   176f8:	str	x1, [x0, #48]
   176fc:	ldr	x0, [sp, #40]
   17700:	add	x0, x0, #0x40, lsl #12
   17704:	ldr	x2, [x0, #56]
   17708:	ldr	x0, [sp, #40]
   1770c:	add	x0, x0, #0x40, lsl #12
   17710:	ldr	x0, [x0, #48]
   17714:	mov	x1, x0
   17718:	mov	x0, x2
   1771c:	bl	ae7c <__lsan_do_recoverable_leak_check@@Base+0xcf0>
   17720:	mov	x1, x0
   17724:	ldr	x0, [sp, #40]
   17728:	add	x0, x0, #0x40, lsl #12
   1772c:	str	x1, [x0, #56]
   17730:	ldr	x0, [sp, #40]
   17734:	ldr	x2, [sp, #96]
   17738:	mov	x1, #0x8008                	// #32776
   1773c:	add	x1, x2, x1
   17740:	ldr	x0, [x0, x1, lsl #3]
   17744:	add	x2, x0, #0x1
   17748:	ldr	x0, [sp, #40]
   1774c:	ldr	x3, [sp, #96]
   17750:	mov	x1, #0x8008                	// #32776
   17754:	add	x1, x3, x1
   17758:	str	x2, [x0, x1, lsl #3]
   1775c:	ldr	x2, [sp, #232]
   17760:	mov	w1, #0x0                   	// #0
   17764:	ldr	x0, [sp, #32]
   17768:	bl	edb8 <__sanitizer_get_allocated_size@@Base+0x258>
   1776c:	ldr	x2, [sp, #232]
   17770:	mov	w1, #0x1                   	// #1
   17774:	ldr	x0, [sp, #32]
   17778:	bl	edb8 <__sanitizer_get_allocated_size@@Base+0x258>
   1777c:	add	x0, sp, #0x38
   17780:	bl	f5bc <__sanitizer_get_allocated_size@@Base+0xa5c>
   17784:	ldr	x0, [sp, #224]
   17788:	ldr	x30, [sp], #240
   1778c:	ret
   17790:	str	x30, [sp, #-32]!
   17794:	str	x0, [sp, #24]
   17798:	str	x1, [sp, #16]
   1779c:	ldr	x0, [sp, #24]
   177a0:	ldr	x1, [sp, #16]
   177a4:	bl	17834 <__sancov_default_options@@Base+0x1698>
   177a8:	and	w0, w0, #0xff
   177ac:	cmp	w0, #0x0
   177b0:	b.eq	177bc <__sancov_default_options@@Base+0x1620>  // b.none
   177b4:	mov	w0, #0x1                   	// #1
   177b8:	b	177d8 <__sancov_default_options@@Base+0x163c>
   177bc:	ldr	x1, [sp, #24]
   177c0:	mov	x0, #0xdc0                 	// #3520
   177c4:	movk	x0, #0x8, lsl #16
   177c8:	add	x0, x1, x0
   177cc:	ldr	x1, [sp, #16]
   177d0:	bl	17e54 <__sancov_default_options@@Base+0x1cb8>
   177d4:	and	w0, w0, #0xff
   177d8:	ldr	x30, [sp], #32
   177dc:	ret
   177e0:	str	x30, [sp, #-32]!
   177e4:	str	x0, [sp, #24]
   177e8:	str	x1, [sp, #16]
   177ec:	ldr	x0, [sp, #24]
   177f0:	ldr	x1, [sp, #16]
   177f4:	bl	17834 <__sancov_default_options@@Base+0x1698>
   177f8:	and	w0, w0, #0xff
   177fc:	cmp	w0, #0x0
   17800:	b.eq	17814 <__sancov_default_options@@Base+0x1678>  // b.none
   17804:	ldr	x0, [sp, #24]
   17808:	ldr	x1, [sp, #16]
   1780c:	bl	17e80 <__sancov_default_options@@Base+0x1ce4>
   17810:	b	1782c <__sancov_default_options@@Base+0x1690>
   17814:	ldr	x1, [sp, #24]
   17818:	mov	x0, #0xdc0                 	// #3520
   1781c:	movk	x0, #0x8, lsl #16
   17820:	add	x0, x1, x0
   17824:	ldr	x1, [sp, #16]
   17828:	bl	17f00 <__sancov_default_options@@Base+0x1d64>
   1782c:	ldr	x30, [sp], #32
   17830:	ret
   17834:	str	x30, [sp, #-48]!
   17838:	str	x0, [sp, #24]
   1783c:	str	x1, [sp, #16]
   17840:	ldr	x0, [sp, #16]
   17844:	str	x0, [sp, #40]
   17848:	ldr	x1, [sp, #40]
   1784c:	mov	x0, #0xffffffffffff        	// #281474976710655
   17850:	cmp	x1, x0
   17854:	b.ls	17860 <__sancov_default_options@@Base+0x16c4>  // b.plast
   17858:	mov	w0, #0x0                   	// #0
   1785c:	b	17878 <__sancov_default_options@@Base+0x16dc>
   17860:	ldr	x1, [sp, #16]
   17864:	ldr	x0, [sp, #24]
   17868:	bl	17880 <__sancov_default_options@@Base+0x16e4>
   1786c:	cmp	x0, #0x0
   17870:	cset	w0, ne  // ne = any
   17874:	and	w0, w0, #0xff
   17878:	ldr	x30, [sp], #48
   1787c:	ret
   17880:	stp	x19, x30, [sp, #-32]!
   17884:	str	x0, [sp, #24]
   17888:	str	x1, [sp, #16]
   1788c:	ldr	x19, [sp, #24]
   17890:	ldr	x0, [sp, #16]
   17894:	mov	x1, x0
   17898:	ldr	x0, [sp, #24]
   1789c:	bl	17f38 <__sancov_default_options@@Base+0x1d9c>
   178a0:	mov	x1, x0
   178a4:	mov	x0, x19
   178a8:	bl	116e8 <__sanitizer_get_allocated_size@@Base+0x2b88>
   178ac:	and	w0, w0, #0xff
   178b0:	and	x0, x0, #0xff
   178b4:	ldp	x19, x30, [sp], #32
   178b8:	ret
   178bc:	str	x30, [sp, #-96]!
   178c0:	str	x0, [sp, #40]
   178c4:	str	x1, [sp, #32]
   178c8:	str	x2, [sp, #24]
   178cc:	str	x3, [sp, #16]
   178d0:	ldr	x0, [sp, #24]
   178d4:	str	x0, [sp, #88]
   178d8:	str	xzr, [sp, #80]
   178dc:	ldr	x1, [sp, #88]
   178e0:	ldr	x0, [sp, #80]
   178e4:	cmp	x1, x0
   178e8:	cset	w0, eq  // eq = none
   178ec:	and	w0, w0, #0xff
   178f0:	and	x0, x0, #0xff
   178f4:	cmp	x0, #0x0
   178f8:	b.eq	1791c <__sancov_default_options@@Base+0x1780>  // b.none
   178fc:	ldr	x4, [sp, #80]
   17900:	ldr	x3, [sp, #88]
   17904:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   17908:	add	x2, x0, #0x820
   1790c:	mov	w1, #0xae                  	// #174
   17910:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   17914:	add	x0, x0, #0x838
   17918:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1791c:	ldr	x0, [sp, #24]
   17920:	str	x0, [sp, #72]
   17924:	mov	x0, #0x36                  	// #54
   17928:	str	x0, [sp, #64]
   1792c:	ldr	x1, [sp, #72]
   17930:	ldr	x0, [sp, #64]
   17934:	cmp	x1, x0
   17938:	cset	w0, cs  // cs = hs, nlast
   1793c:	and	w0, w0, #0xff
   17940:	and	x0, x0, #0xff
   17944:	cmp	x0, #0x0
   17948:	b.eq	1796c <__sancov_default_options@@Base+0x17d0>  // b.none
   1794c:	ldr	x4, [sp, #64]
   17950:	ldr	x3, [sp, #72]
   17954:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   17958:	add	x2, x0, #0x888
   1795c:	mov	w1, #0xaf                  	// #175
   17960:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   17964:	add	x0, x0, #0x838
   17968:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1796c:	ldr	x0, [sp, #24]
   17970:	lsl	x0, x0, #10
   17974:	ldr	x1, [sp, #40]
   17978:	add	x0, x1, x0
   1797c:	str	x0, [sp, #56]
   17980:	ldr	x1, [sp, #56]
   17984:	ldr	x0, [sp, #40]
   17988:	bl	17fac <__sancov_default_options@@Base+0x1e10>
   1798c:	ldr	x0, [sp, #56]
   17990:	ldr	x1, [x0]
   17994:	ldr	x0, [sp, #56]
   17998:	ldr	x0, [x0, #8]
   1799c:	cmp	x1, x0
   179a0:	cset	w0, eq  // eq = none
   179a4:	and	w0, w0, #0xff
   179a8:	and	x0, x0, #0xff
   179ac:	cmp	x0, #0x0
   179b0:	b.eq	179c8 <__sancov_default_options@@Base+0x182c>  // b.none
   179b4:	ldr	x3, [sp, #24]
   179b8:	ldr	x2, [sp, #32]
   179bc:	ldr	x1, [sp, #56]
   179c0:	ldr	x0, [sp, #40]
   179c4:	bl	18088 <__sancov_default_options@@Base+0x1eec>
   179c8:	ldr	x0, [sp, #56]
   179cc:	ldr	x0, [x0]
   179d0:	add	x2, x0, #0x1
   179d4:	ldr	x1, [sp, #56]
   179d8:	str	x2, [x1]
   179dc:	ldr	x1, [sp, #56]
   179e0:	add	x0, x0, #0x4
   179e4:	ldr	x2, [sp, #16]
   179e8:	str	x2, [x1, x0, lsl #3]
   179ec:	ldr	x1, [sp, #40]
   179f0:	mov	x0, #0xd800                	// #55296
   179f4:	add	x3, x1, x0
   179f8:	ldr	x0, [sp, #56]
   179fc:	ldr	x0, [x0, #16]
   17a00:	mov	x2, x0
   17a04:	mov	w1, #0x0                   	// #0
   17a08:	mov	x0, x3
   17a0c:	bl	ee28 <__sanitizer_get_allocated_size@@Base+0x2c8>
   17a10:	nop
   17a14:	ldr	x30, [sp], #96
   17a18:	ret
   17a1c:	str	x30, [sp, #-112]!
   17a20:	str	x0, [sp, #40]
   17a24:	str	x1, [sp, #32]
   17a28:	str	x2, [sp, #24]
   17a2c:	ldr	x1, [sp, #24]
   17a30:	ldr	x0, [sp, #40]
   17a34:	bl	181a0 <__sancov_default_options@@Base+0x2004>
   17a38:	str	x0, [sp, #104]
   17a3c:	ldr	x1, [sp, #40]
   17a40:	mov	x0, #0x240                 	// #576
   17a44:	movk	x0, #0x4, lsl #16
   17a48:	add	x1, x1, x0
   17a4c:	add	x0, sp, #0x30
   17a50:	bl	f58c <__sanitizer_get_allocated_size@@Base+0xa2c>
   17a54:	ldr	x0, [sp, #104]
   17a58:	ldr	x0, [x0, #24]
   17a5c:	str	x0, [sp, #96]
   17a60:	ldr	x0, [sp, #40]
   17a64:	ldr	x1, [x0, #8]
   17a68:	ldr	x0, [sp, #96]
   17a6c:	lsl	x0, x0, #3
   17a70:	add	x0, x1, x0
   17a74:	ldr	x0, [x0]
   17a78:	str	x0, [sp, #88]
   17a7c:	ldr	x0, [sp, #104]
   17a80:	str	x0, [sp, #80]
   17a84:	ldr	x1, [sp, #88]
   17a88:	ldr	x0, [sp, #80]
   17a8c:	cmp	x1, x0
   17a90:	cset	w0, ne  // ne = any
   17a94:	and	w0, w0, #0xff
   17a98:	and	x0, x0, #0xff
   17a9c:	cmp	x0, #0x0
   17aa0:	b.eq	17ac4 <__sancov_default_options@@Base+0x1928>  // b.none
   17aa4:	ldr	x4, [sp, #80]
   17aa8:	ldr	x3, [sp, #88]
   17aac:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   17ab0:	add	x2, x0, #0xa20
   17ab4:	mov	w1, #0x88                  	// #136
   17ab8:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   17abc:	add	x0, x0, #0x478
   17ac0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   17ac4:	ldr	x0, [sp, #96]
   17ac8:	str	x0, [sp, #72]
   17acc:	ldr	x0, [sp, #40]
   17ad0:	add	x0, x0, #0x40, lsl #12
   17ad4:	ldr	x0, [x0, #16]
   17ad8:	str	x0, [sp, #64]
   17adc:	ldr	x1, [sp, #72]
   17ae0:	ldr	x0, [sp, #64]
   17ae4:	cmp	x1, x0
   17ae8:	cset	w0, cs  // cs = hs, nlast
   17aec:	and	w0, w0, #0xff
   17af0:	and	x0, x0, #0xff
   17af4:	cmp	x0, #0x0
   17af8:	b.eq	17b1c <__sancov_default_options@@Base+0x1980>  // b.none
   17afc:	ldr	x4, [sp, #64]
   17b00:	ldr	x3, [sp, #72]
   17b04:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   17b08:	add	x2, x0, #0xa40
   17b0c:	mov	w1, #0x89                  	// #137
   17b10:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   17b14:	add	x0, x0, #0x478
   17b18:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   17b1c:	ldr	x0, [sp, #40]
   17b20:	ldr	x1, [x0, #8]
   17b24:	ldr	x0, [sp, #40]
   17b28:	add	x0, x0, #0x40, lsl #12
   17b2c:	ldr	x0, [x0, #16]
   17b30:	sub	x2, x0, #0x1
   17b34:	ldr	x0, [sp, #40]
   17b38:	add	x0, x0, #0x40, lsl #12
   17b3c:	str	x2, [x0, #16]
   17b40:	ldr	x0, [sp, #40]
   17b44:	add	x0, x0, #0x40, lsl #12
   17b48:	ldr	x0, [x0, #16]
   17b4c:	lsl	x0, x0, #3
   17b50:	add	x1, x1, x0
   17b54:	ldr	x0, [sp, #40]
   17b58:	ldr	x2, [x0, #8]
   17b5c:	ldr	x0, [sp, #96]
   17b60:	lsl	x0, x0, #3
   17b64:	add	x0, x2, x0
   17b68:	ldr	x1, [x1]
   17b6c:	str	x1, [x0]
   17b70:	ldr	x0, [sp, #40]
   17b74:	ldr	x1, [x0, #8]
   17b78:	ldr	x0, [sp, #96]
   17b7c:	lsl	x0, x0, #3
   17b80:	add	x0, x1, x0
   17b84:	ldr	x0, [x0]
   17b88:	ldr	x1, [sp, #96]
   17b8c:	str	x1, [x0, #24]
   17b90:	ldr	x0, [sp, #40]
   17b94:	add	x0, x0, #0x40, lsl #12
   17b98:	strb	wzr, [x0, #24]
   17b9c:	ldr	x0, [sp, #40]
   17ba0:	add	x0, x0, #0x40, lsl #12
   17ba4:	ldr	x0, [x0, #40]
   17ba8:	add	x1, x0, #0x1
   17bac:	ldr	x0, [sp, #40]
   17bb0:	add	x0, x0, #0x40, lsl #12
   17bb4:	str	x1, [x0, #40]
   17bb8:	ldr	x0, [sp, #40]
   17bbc:	add	x0, x0, #0x40, lsl #12
   17bc0:	ldr	x1, [x0, #48]
   17bc4:	ldr	x0, [sp, #104]
   17bc8:	ldr	x0, [x0, #8]
   17bcc:	sub	x1, x1, x0
   17bd0:	ldr	x0, [sp, #40]
   17bd4:	add	x0, x0, #0x40, lsl #12
   17bd8:	str	x1, [x0, #48]
   17bdc:	ldr	x0, [sp, #104]
   17be0:	ldr	x0, [x0, #8]
   17be4:	mov	x2, x0
   17be8:	mov	w1, #0x0                   	// #0
   17bec:	ldr	x0, [sp, #32]
   17bf0:	bl	ee28 <__sanitizer_get_allocated_size@@Base+0x2c8>
   17bf4:	ldr	x0, [sp, #104]
   17bf8:	ldr	x0, [x0, #8]
   17bfc:	mov	x2, x0
   17c00:	mov	w1, #0x1                   	// #1
   17c04:	ldr	x0, [sp, #32]
   17c08:	bl	ee28 <__sanitizer_get_allocated_size@@Base+0x2c8>
   17c0c:	add	x0, sp, #0x30
   17c10:	bl	f5bc <__sanitizer_get_allocated_size@@Base+0xa5c>
   17c14:	ldr	x0, [sp, #104]
   17c18:	ldr	x1, [x0]
   17c1c:	ldr	x0, [sp, #104]
   17c20:	ldr	x2, [x0, #8]
   17c24:	add	x0, sp, #0x38
   17c28:	bl	ed9c <__sanitizer_get_allocated_size@@Base+0x23c>
   17c2c:	ldr	x0, [sp, #104]
   17c30:	ldr	x0, [x0]
   17c34:	mov	x2, x0
   17c38:	ldr	x0, [sp, #104]
   17c3c:	ldr	x0, [x0, #8]
   17c40:	mov	x1, x0
   17c44:	mov	x0, x2
   17c48:	bl	26af4 <__sanitizer_set_report_fd@@Base+0x78fc>
   17c4c:	nop
   17c50:	ldr	x30, [sp], #112
   17c54:	ret
   17c58:	str	x30, [sp, #-32]!
   17c5c:	str	x0, [sp, #24]
   17c60:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
   17c64:	mov	x1, x0
   17c68:	ldr	x0, [sp, #24]
   17c6c:	str	x1, [x0]
   17c70:	ldr	x0, [sp, #24]
   17c74:	add	x0, x0, #0x10
   17c78:	bl	16b94 <__sancov_default_options@@Base+0x9f8>
   17c7c:	mov	x1, x0
   17c80:	ldr	x0, [sp, #24]
   17c84:	str	x1, [x0, #8]
   17c88:	nop
   17c8c:	ldr	x30, [sp], #32
   17c90:	ret
   17c94:	str	x30, [sp, #-80]!
   17c98:	str	x0, [sp, #40]
   17c9c:	str	x1, [sp, #32]
   17ca0:	str	x2, [sp, #24]
   17ca4:	str	x3, [sp, #16]
   17ca8:	ldr	x1, [sp, #32]
   17cac:	ldr	x0, [sp, #40]
   17cb0:	bl	17fac <__sancov_default_options@@Base+0x1e10>
   17cb4:	ldr	x1, [sp, #40]
   17cb8:	mov	x0, #0xd800                	// #55296
   17cbc:	add	x0, x1, x0
   17cc0:	ldr	x3, [sp, #16]
   17cc4:	ldr	x2, [sp, #40]
   17cc8:	mov	x1, x0
   17ccc:	ldr	x0, [sp, #24]
   17cd0:	bl	181c4 <__sancov_default_options@@Base+0x2028>
   17cd4:	str	x0, [sp, #72]
   17cd8:	ldr	x0, [sp, #72]
   17cdc:	cmp	x0, #0x0
   17ce0:	cset	w0, eq  // eq = none
   17ce4:	and	w0, w0, #0xff
   17ce8:	and	x0, x0, #0xff
   17cec:	cmp	x0, #0x0
   17cf0:	b.eq	17cfc <__sancov_default_options@@Base+0x1b60>  // b.none
   17cf4:	mov	w0, #0x0                   	// #0
   17cf8:	b	17d8c <__sancov_default_options@@Base+0x1bf0>
   17cfc:	ldr	x0, [sp, #72]
   17d00:	bl	18284 <__sancov_default_options@@Base+0x20e8>
   17d04:	str	x0, [sp, #64]
   17d08:	str	xzr, [sp, #56]
   17d0c:	ldr	x1, [sp, #64]
   17d10:	ldr	x0, [sp, #56]
   17d14:	cmp	x1, x0
   17d18:	cset	w0, ls  // ls = plast
   17d1c:	and	w0, w0, #0xff
   17d20:	and	x0, x0, #0xff
   17d24:	cmp	x0, #0x0
   17d28:	b.eq	17d4c <__sancov_default_options@@Base+0x1bb0>  // b.none
   17d2c:	ldr	x4, [sp, #56]
   17d30:	ldr	x3, [sp, #64]
   17d34:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   17d38:	add	x2, x0, #0xa58
   17d3c:	mov	w1, #0xf6                  	// #246
   17d40:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   17d44:	add	x0, x0, #0x838
   17d48:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   17d4c:	ldr	x0, [sp, #32]
   17d50:	add	x0, x0, #0x20
   17d54:	mov	x1, x0
   17d58:	ldr	x0, [sp, #72]
   17d5c:	bl	1829c <__sancov_default_options@@Base+0x2100>
   17d60:	ldr	x0, [sp, #72]
   17d64:	bl	18284 <__sancov_default_options@@Base+0x20e8>
   17d68:	mov	x1, x0
   17d6c:	ldr	x0, [sp, #32]
   17d70:	str	x1, [x0]
   17d74:	ldr	x3, [sp, #72]
   17d78:	ldr	x2, [sp, #24]
   17d7c:	ldr	x1, [sp, #16]
   17d80:	ldr	x0, [sp, #40]
   17d84:	bl	18308 <__sancov_default_options@@Base+0x216c>
   17d88:	mov	w0, #0x1                   	// #1
   17d8c:	ldr	x30, [sp], #80
   17d90:	ret
   17d94:	str	x30, [sp, #-32]!
   17d98:	str	x0, [sp, #24]
   17d9c:	str	x1, [sp, #16]
   17da0:	ldr	x0, [sp, #24]
   17da4:	ldr	x0, [x0]
   17da8:	mov	x1, x0
   17dac:	ldr	x0, [sp, #16]
   17db0:	bl	a518 <__lsan_do_recoverable_leak_check@@Base+0x38c>
   17db4:	mov	x1, x0
   17db8:	ldr	x0, [sp, #24]
   17dbc:	ldr	x0, [x0]
   17dc0:	add	x0, x1, x0
   17dc4:	ldr	x30, [sp], #32
   17dc8:	ret
   17dcc:	str	x30, [sp, #-48]!
   17dd0:	str	x0, [sp, #24]
   17dd4:	str	x1, [sp, #16]
   17dd8:	ldr	x0, [sp, #24]
   17ddc:	ldr	x0, [x0]
   17de0:	mov	x1, x0
   17de4:	ldr	x0, [sp, #16]
   17de8:	bl	ed50 <__sanitizer_get_allocated_size@@Base+0x1f0>
   17dec:	and	w0, w0, #0xff
   17df0:	and	x0, x0, #0xff
   17df4:	str	x0, [sp, #40]
   17df8:	str	xzr, [sp, #32]
   17dfc:	ldr	x1, [sp, #40]
   17e00:	ldr	x0, [sp, #32]
   17e04:	cmp	x1, x0
   17e08:	cset	w0, eq  // eq = none
   17e0c:	and	w0, w0, #0xff
   17e10:	and	x0, x0, #0xff
   17e14:	cmp	x0, #0x0
   17e18:	b.eq	17e3c <__sancov_default_options@@Base+0x1ca0>  // b.none
   17e1c:	ldr	x4, [sp, #32]
   17e20:	ldr	x3, [sp, #40]
   17e24:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   17e28:	add	x2, x0, #0xa70
   17e2c:	mov	w1, #0x123                 	// #291
   17e30:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   17e34:	add	x0, x0, #0x478
   17e38:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   17e3c:	ldr	x0, [sp, #24]
   17e40:	ldr	x0, [x0]
   17e44:	ldr	x1, [sp, #16]
   17e48:	sub	x0, x1, x0
   17e4c:	ldr	x30, [sp], #48
   17e50:	ret
   17e54:	str	x30, [sp, #-32]!
   17e58:	str	x0, [sp, #24]
   17e5c:	str	x1, [sp, #16]
   17e60:	ldr	x1, [sp, #16]
   17e64:	ldr	x0, [sp, #24]
   17e68:	bl	18360 <__sancov_default_options@@Base+0x21c4>
   17e6c:	cmp	x0, #0x0
   17e70:	cset	w0, ne  // ne = any
   17e74:	and	w0, w0, #0xff
   17e78:	ldr	x30, [sp], #32
   17e7c:	ret
   17e80:	str	x30, [sp, #-48]!
   17e84:	str	x0, [sp, #24]
   17e88:	str	x1, [sp, #16]
   17e8c:	ldr	x1, [sp, #16]
   17e90:	ldr	x0, [sp, #24]
   17e94:	bl	17834 <__sancov_default_options@@Base+0x1698>
   17e98:	and	w0, w0, #0xff
   17e9c:	and	x0, x0, #0xff
   17ea0:	str	x0, [sp, #40]
   17ea4:	str	xzr, [sp, #32]
   17ea8:	ldr	x1, [sp, #40]
   17eac:	ldr	x0, [sp, #32]
   17eb0:	cmp	x1, x0
   17eb4:	cset	w0, eq  // eq = none
   17eb8:	and	w0, w0, #0xff
   17ebc:	and	x0, x0, #0xff
   17ec0:	cmp	x0, #0x0
   17ec4:	b.eq	17ee8 <__sancov_default_options@@Base+0x1d4c>  // b.none
   17ec8:	ldr	x4, [sp, #32]
   17ecc:	ldr	x3, [sp, #40]
   17ed0:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   17ed4:	add	x2, x0, #0x800
   17ed8:	mov	w1, #0xcc                  	// #204
   17edc:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   17ee0:	add	x0, x0, #0xa98
   17ee4:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   17ee8:	ldr	x1, [sp, #16]
   17eec:	ldr	x0, [sp, #24]
   17ef0:	bl	17880 <__sancov_default_options@@Base+0x16e4>
   17ef4:	bl	18584 <__sancov_default_options@@Base+0x23e8>
   17ef8:	ldr	x30, [sp], #48
   17efc:	ret
   17f00:	str	x30, [sp, #-32]!
   17f04:	str	x0, [sp, #24]
   17f08:	str	x1, [sp, #16]
   17f0c:	ldr	x1, [sp, #16]
   17f10:	ldr	x0, [sp, #24]
   17f14:	bl	181a0 <__sancov_default_options@@Base+0x2004>
   17f18:	ldr	x2, [x0, #16]
   17f1c:	ldr	x0, [sp, #24]
   17f20:	ldr	x0, [x0]
   17f24:	mov	x1, x0
   17f28:	mov	x0, x2
   17f2c:	bl	a518 <__lsan_do_recoverable_leak_check@@Base+0x38c>
   17f30:	ldr	x30, [sp], #32
   17f34:	ret
   17f38:	str	x30, [sp, #-64]!
   17f3c:	str	x0, [sp, #24]
   17f40:	str	x1, [sp, #16]
   17f44:	ldr	x0, [sp, #16]
   17f48:	lsr	x0, x0, #20
   17f4c:	str	x0, [sp, #56]
   17f50:	ldr	x0, [sp, #56]
   17f54:	str	x0, [sp, #48]
   17f58:	mov	x0, #0x10000000            	// #268435456
   17f5c:	str	x0, [sp, #40]
   17f60:	ldr	x1, [sp, #48]
   17f64:	ldr	x0, [sp, #40]
   17f68:	cmp	x1, x0
   17f6c:	cset	w0, cs  // cs = hs, nlast
   17f70:	and	w0, w0, #0xff
   17f74:	and	x0, x0, #0xff
   17f78:	cmp	x0, #0x0
   17f7c:	b.eq	17fa0 <__sancov_default_options@@Base+0x1e04>  // b.none
   17f80:	ldr	x4, [sp, #40]
   17f84:	ldr	x3, [sp, #48]
   17f88:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   17f8c:	add	x2, x0, #0xae8
   17f90:	mov	w1, #0x116                 	// #278
   17f94:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   17f98:	add	x0, x0, #0xa98
   17f9c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   17fa0:	ldr	x0, [sp, #56]
   17fa4:	ldr	x30, [sp], #64
   17fa8:	ret
   17fac:	str	x30, [sp, #-80]!
   17fb0:	str	x0, [sp, #24]
   17fb4:	str	x1, [sp, #16]
   17fb8:	ldr	x0, [sp, #16]
   17fbc:	ldr	x0, [x0, #8]
   17fc0:	cmp	x0, #0x0
   17fc4:	cset	w0, ne  // ne = any
   17fc8:	and	w0, w0, #0xff
   17fcc:	and	x0, x0, #0xff
   17fd0:	cmp	x0, #0x0
   17fd4:	b.ne	1807c <__sancov_default_options@@Base+0x1ee0>  // b.any
   17fd8:	mov	x0, #0x200                 	// #512
   17fdc:	bl	113e4 <__sanitizer_get_allocated_size@@Base+0x2884>
   17fe0:	str	x0, [sp, #64]
   17fe4:	mov	x0, #0x1                   	// #1
   17fe8:	str	x0, [sp, #72]
   17fec:	ldr	x0, [sp, #72]
   17ff0:	cmp	x0, #0x35
   17ff4:	b.hi	18080 <__sancov_default_options@@Base+0x1ee4>  // b.pmore
   17ff8:	ldr	x0, [sp, #72]
   17ffc:	lsl	x0, x0, #10
   18000:	ldr	x1, [sp, #24]
   18004:	add	x0, x1, x0
   18008:	str	x0, [sp, #56]
   1800c:	ldr	x0, [sp, #72]
   18010:	bl	18584 <__sancov_default_options@@Base+0x23e8>
   18014:	str	x0, [sp, #48]
   18018:	ldr	x0, [sp, #48]
   1801c:	bl	185b0 <__sancov_default_options@@Base+0x2414>
   18020:	str	x0, [sp, #40]
   18024:	ldr	x0, [sp, #40]
   18028:	lsl	x1, x0, #1
   1802c:	ldr	x0, [sp, #56]
   18030:	str	x1, [x0, #8]
   18034:	ldr	x0, [sp, #56]
   18038:	ldr	x1, [sp, #48]
   1803c:	str	x1, [x0, #16]
   18040:	ldr	x0, [sp, #40]
   18044:	bl	185d4 <__sancov_default_options@@Base+0x2438>
   18048:	mov	x1, x0
   1804c:	ldr	x0, [sp, #48]
   18050:	cmp	x0, x1
   18054:	b.cs	18060 <__sancov_default_options@@Base+0x1ec4>  // b.hs, b.nlast
   18058:	ldr	x0, [sp, #64]
   1805c:	b	18064 <__sancov_default_options@@Base+0x1ec8>
   18060:	mov	x0, #0x0                   	// #0
   18064:	ldr	x1, [sp, #56]
   18068:	str	x0, [x1, #24]
   1806c:	ldr	x0, [sp, #72]
   18070:	add	x0, x0, #0x1
   18074:	str	x0, [sp, #72]
   18078:	b	17fec <__sancov_default_options@@Base+0x1e50>
   1807c:	nop
   18080:	ldr	x30, [sp], #80
   18084:	ret
   18088:	str	x30, [sp, #-80]!
   1808c:	str	x0, [sp, #40]
   18090:	str	x1, [sp, #32]
   18094:	str	x2, [sp, #24]
   18098:	str	x3, [sp, #16]
   1809c:	ldr	x0, [sp, #32]
   180a0:	ldr	x0, [x0, #8]
   180a4:	lsr	x2, x0, #1
   180a8:	ldr	x0, [sp, #32]
   180ac:	ldr	x0, [x0]
   180b0:	mov	x1, x0
   180b4:	mov	x0, x2
   180b8:	bl	aeac <__lsan_do_recoverable_leak_check@@Base+0xd20>
   180bc:	str	x0, [sp, #72]
   180c0:	ldr	x0, [sp, #32]
   180c4:	ldr	x1, [x0]
   180c8:	ldr	x0, [sp, #72]
   180cc:	sub	x0, x1, x0
   180d0:	str	x0, [sp, #64]
   180d4:	ldr	x0, [sp, #32]
   180d8:	ldr	x1, [sp, #64]
   180dc:	add	x1, x1, #0x4
   180e0:	ldr	x0, [x0, x1, lsl #3]
   180e4:	mov	x3, x0
   180e8:	ldr	x2, [sp, #24]
   180ec:	ldr	x1, [sp, #16]
   180f0:	ldr	x0, [sp, #40]
   180f4:	bl	185f0 <__sancov_default_options@@Base+0x2454>
   180f8:	str	x0, [sp, #56]
   180fc:	ldr	x0, [sp, #56]
   18100:	cmp	x0, #0x0
   18104:	cset	w0, eq  // eq = none
   18108:	and	w0, w0, #0xff
   1810c:	and	x0, x0, #0xff
   18110:	cmp	x0, #0x0
   18114:	b.eq	18138 <__sancov_default_options@@Base+0x1f9c>  // b.none
   18118:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   1811c:	ldr	x0, [x0, #4008]
   18120:	ldr	x0, [x0]
   18124:	mov	x1, x0
   18128:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   1812c:	add	x0, x0, #0xb78
   18130:	bl	2a3fc <OnPrint@@Base+0x454>
   18134:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   18138:	ldr	x0, [sp, #64]
   1813c:	add	x0, x0, #0x4
   18140:	lsl	x0, x0, #3
   18144:	ldr	x1, [sp, #32]
   18148:	add	x0, x1, x0
   1814c:	ldr	x2, [sp, #72]
   18150:	mov	x1, x0
   18154:	ldr	x0, [sp, #56]
   18158:	bl	18648 <__sancov_default_options@@Base+0x24ac>
   1815c:	ldr	x0, [sp, #32]
   18160:	ldr	x1, [x0]
   18164:	ldr	x0, [sp, #72]
   18168:	sub	x1, x1, x0
   1816c:	ldr	x0, [sp, #32]
   18170:	str	x1, [x0]
   18174:	ldr	x1, [sp, #40]
   18178:	mov	x0, #0xd800                	// #55296
   1817c:	add	x0, x1, x0
   18180:	ldr	x3, [sp, #56]
   18184:	ldr	x2, [sp, #16]
   18188:	mov	x1, x0
   1818c:	ldr	x0, [sp, #24]
   18190:	bl	186b8 <__sancov_default_options@@Base+0x251c>
   18194:	nop
   18198:	ldr	x30, [sp], #80
   1819c:	ret
   181a0:	str	x30, [sp, #-32]!
   181a4:	str	x0, [sp, #24]
   181a8:	str	x1, [sp, #16]
   181ac:	ldr	x0, [sp, #16]
   181b0:	mov	x1, x0
   181b4:	ldr	x0, [sp, #24]
   181b8:	bl	17dcc <__sancov_default_options@@Base+0x1c30>
   181bc:	ldr	x30, [sp], #32
   181c0:	ret
   181c4:	stp	x19, x30, [sp, #-80]!
   181c8:	str	x0, [sp, #40]
   181cc:	str	x1, [sp, #32]
   181d0:	str	x2, [sp, #24]
   181d4:	str	x3, [sp, #16]
   181d8:	ldr	x1, [sp, #16]
   181dc:	ldr	x0, [sp, #40]
   181e0:	bl	1875c <__sancov_default_options@@Base+0x25c0>
   181e4:	str	x0, [sp, #72]
   181e8:	ldr	x1, [sp, #72]
   181ec:	add	x0, sp, #0x38
   181f0:	bl	f58c <__sanitizer_get_allocated_size@@Base+0xa2c>
   181f4:	ldr	x0, [sp, #72]
   181f8:	add	x0, x0, #0x8
   181fc:	bl	18788 <__sancov_default_options@@Base+0x25ec>
   18200:	and	w0, w0, #0xff
   18204:	cmp	w0, #0x0
   18208:	b.eq	18250 <__sancov_default_options@@Base+0x20b4>  // b.none
   1820c:	ldr	x4, [sp, #16]
   18210:	ldr	x3, [sp, #72]
   18214:	ldr	x2, [sp, #24]
   18218:	ldr	x1, [sp, #32]
   1821c:	ldr	x0, [sp, #40]
   18220:	bl	187ac <__sancov_default_options@@Base+0x2610>
   18224:	and	w0, w0, #0xff
   18228:	eor	w0, w0, #0x1
   1822c:	and	w0, w0, #0xff
   18230:	and	x0, x0, #0xff
   18234:	cmp	x0, #0x0
   18238:	cset	w0, ne  // ne = any
   1823c:	and	w0, w0, #0xff
   18240:	cmp	w0, #0x0
   18244:	b.eq	18250 <__sancov_default_options@@Base+0x20b4>  // b.none
   18248:	mov	x19, #0x0                   	// #0
   1824c:	b	18270 <__sancov_default_options@@Base+0x20d4>
   18250:	ldr	x0, [sp, #72]
   18254:	add	x0, x0, #0x8
   18258:	bl	189d8 <__sancov_default_options@@Base+0x283c>
   1825c:	str	x0, [sp, #64]
   18260:	ldr	x0, [sp, #72]
   18264:	add	x0, x0, #0x8
   18268:	bl	189f0 <__sancov_default_options@@Base+0x2854>
   1826c:	ldr	x19, [sp, #64]
   18270:	add	x0, sp, #0x38
   18274:	bl	f5bc <__sanitizer_get_allocated_size@@Base+0xa5c>
   18278:	mov	x0, x19
   1827c:	ldp	x19, x30, [sp], #80
   18280:	ret
   18284:	sub	sp, sp, #0x10
   18288:	str	x0, [sp, #8]
   1828c:	ldr	x0, [sp, #8]
   18290:	ldr	x0, [x0, #8]
   18294:	add	sp, sp, #0x10
   18298:	ret
   1829c:	str	x30, [sp, #-48]!
   182a0:	str	x0, [sp, #24]
   182a4:	str	x1, [sp, #16]
   182a8:	str	xzr, [sp, #40]
   182ac:	ldr	x0, [sp, #24]
   182b0:	bl	18284 <__sancov_default_options@@Base+0x20e8>
   182b4:	str	x0, [sp, #32]
   182b8:	ldr	x1, [sp, #40]
   182bc:	ldr	x0, [sp, #32]
   182c0:	cmp	x1, x0
   182c4:	b.cs	182fc <__sancov_default_options@@Base+0x2160>  // b.hs, b.nlast
   182c8:	ldr	x0, [sp, #40]
   182cc:	lsl	x0, x0, #3
   182d0:	ldr	x1, [sp, #16]
   182d4:	add	x0, x1, x0
   182d8:	ldr	x1, [sp, #24]
   182dc:	ldr	x2, [sp, #40]
   182e0:	add	x2, x2, #0x2
   182e4:	ldr	x1, [x1, x2, lsl #3]
   182e8:	str	x1, [x0]
   182ec:	ldr	x0, [sp, #40]
   182f0:	add	x0, x0, #0x1
   182f4:	str	x0, [sp, #40]
   182f8:	b	182b8 <__sancov_default_options@@Base+0x211c>
   182fc:	nop
   18300:	ldr	x30, [sp], #48
   18304:	ret
   18308:	str	x30, [sp, #-64]!
   1830c:	str	x0, [sp, #40]
   18310:	str	x1, [sp, #32]
   18314:	str	x2, [sp, #24]
   18318:	str	x3, [sp, #16]
   1831c:	ldr	x1, [sp, #40]
   18320:	ldr	x0, [sp, #32]
   18324:	lsl	x0, x0, #10
   18328:	add	x0, x1, x0
   1832c:	ldr	x0, [x0, #24]
   18330:	str	x0, [sp, #56]
   18334:	ldr	x0, [sp, #56]
   18338:	cmp	x0, #0x0
   1833c:	b.eq	18354 <__sancov_default_options@@Base+0x21b8>  // b.none
   18340:	ldr	x3, [sp, #16]
   18344:	ldr	x2, [sp, #56]
   18348:	ldr	x1, [sp, #24]
   1834c:	ldr	x0, [sp, #40]
   18350:	bl	178bc <__sancov_default_options@@Base+0x1720>
   18354:	nop
   18358:	ldr	x30, [sp], #64
   1835c:	ret
   18360:	stp	x19, x30, [sp, #-128]!
   18364:	str	x0, [sp, #24]
   18368:	str	x1, [sp, #16]
   1836c:	ldr	x0, [sp, #16]
   18370:	str	x0, [sp, #104]
   18374:	ldr	x1, [sp, #24]
   18378:	mov	x0, #0x240                 	// #576
   1837c:	movk	x0, #0x4, lsl #16
   18380:	add	x1, x1, x0
   18384:	add	x0, sp, #0x20
   18388:	bl	f58c <__sanitizer_get_allocated_size@@Base+0xa2c>
   1838c:	str	xzr, [sp, #120]
   18390:	str	xzr, [sp, #112]
   18394:	ldr	x0, [sp, #24]
   18398:	add	x0, x0, #0x40, lsl #12
   1839c:	ldr	x0, [x0, #16]
   183a0:	ldr	x1, [sp, #112]
   183a4:	cmp	x1, x0
   183a8:	b.cs	18418 <__sancov_default_options@@Base+0x227c>  // b.hs, b.nlast
   183ac:	ldr	x0, [sp, #24]
   183b0:	ldr	x1, [x0, #8]
   183b4:	ldr	x0, [sp, #112]
   183b8:	lsl	x0, x0, #3
   183bc:	add	x0, x1, x0
   183c0:	ldr	x0, [x0]
   183c4:	str	x0, [sp, #96]
   183c8:	ldr	x1, [sp, #104]
   183cc:	ldr	x0, [sp, #96]
   183d0:	cmp	x1, x0
   183d4:	b.cc	18404 <__sancov_default_options@@Base+0x2268>  // b.lo, b.ul, b.last
   183d8:	ldr	x1, [sp, #104]
   183dc:	ldr	x0, [sp, #96]
   183e0:	sub	x1, x1, x0
   183e4:	ldr	x2, [sp, #104]
   183e8:	ldr	x0, [sp, #120]
   183ec:	sub	x0, x2, x0
   183f0:	cmp	x1, x0
   183f4:	b.cs	18408 <__sancov_default_options@@Base+0x226c>  // b.hs, b.nlast
   183f8:	ldr	x0, [sp, #96]
   183fc:	str	x0, [sp, #120]
   18400:	b	18408 <__sancov_default_options@@Base+0x226c>
   18404:	nop
   18408:	ldr	x0, [sp, #112]
   1840c:	add	x0, x0, #0x1
   18410:	str	x0, [sp, #112]
   18414:	b	18394 <__sancov_default_options@@Base+0x21f8>
   18418:	ldr	x0, [sp, #120]
   1841c:	cmp	x0, #0x0
   18420:	b.ne	1842c <__sancov_default_options@@Base+0x2290>  // b.any
   18424:	mov	x19, #0x0                   	// #0
   18428:	b	18570 <__sancov_default_options@@Base+0x23d4>
   1842c:	ldr	x0, [sp, #120]
   18430:	str	x0, [sp, #88]
   18434:	ldr	x0, [sp, #120]
   18438:	str	x0, [sp, #80]
   1843c:	ldr	x0, [sp, #88]
   18440:	ldr	x0, [x0]
   18444:	str	x0, [sp, #72]
   18448:	ldr	x1, [sp, #80]
   1844c:	ldr	x0, [sp, #72]
   18450:	cmp	x1, x0
   18454:	cset	w0, cc  // cc = lo, ul, last
   18458:	and	w0, w0, #0xff
   1845c:	and	x0, x0, #0xff
   18460:	cmp	x0, #0x0
   18464:	b.eq	18488 <__sancov_default_options@@Base+0x22ec>  // b.none
   18468:	ldr	x4, [sp, #72]
   1846c:	ldr	x3, [sp, #80]
   18470:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   18474:	add	x2, x0, #0xbc8
   18478:	mov	w1, #0xc1                  	// #193
   1847c:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   18480:	add	x0, x0, #0x478
   18484:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   18488:	ldr	x0, [sp, #120]
   1848c:	str	x0, [sp, #64]
   18490:	ldr	x0, [sp, #88]
   18494:	ldr	x1, [x0]
   18498:	ldr	x0, [sp, #88]
   1849c:	ldr	x0, [x0, #8]
   184a0:	add	x0, x1, x0
   184a4:	str	x0, [sp, #56]
   184a8:	ldr	x1, [sp, #64]
   184ac:	ldr	x0, [sp, #56]
   184b0:	cmp	x1, x0
   184b4:	cset	w0, cs  // cs = hs, nlast
   184b8:	and	w0, w0, #0xff
   184bc:	and	x0, x0, #0xff
   184c0:	cmp	x0, #0x0
   184c4:	b.eq	184e8 <__sancov_default_options@@Base+0x234c>  // b.none
   184c8:	ldr	x4, [sp, #56]
   184cc:	ldr	x3, [sp, #64]
   184d0:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   184d4:	add	x2, x0, #0xbf0
   184d8:	mov	w1, #0xc2                  	// #194
   184dc:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   184e0:	add	x0, x0, #0x478
   184e4:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   184e8:	ldr	x0, [sp, #120]
   184ec:	str	x0, [sp, #48]
   184f0:	ldr	x0, [sp, #104]
   184f4:	str	x0, [sp, #40]
   184f8:	ldr	x1, [sp, #48]
   184fc:	ldr	x0, [sp, #40]
   18500:	cmp	x1, x0
   18504:	cset	w0, hi  // hi = pmore
   18508:	and	w0, w0, #0xff
   1850c:	and	x0, x0, #0xff
   18510:	cmp	x0, #0x0
   18514:	b.eq	18538 <__sancov_default_options@@Base+0x239c>  // b.none
   18518:	ldr	x4, [sp, #40]
   1851c:	ldr	x3, [sp, #48]
   18520:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   18524:	add	x2, x0, #0xc28
   18528:	mov	w1, #0xc3                  	// #195
   1852c:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   18530:	add	x0, x0, #0x478
   18534:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   18538:	ldr	x0, [sp, #88]
   1853c:	ldr	x1, [x0]
   18540:	ldr	x0, [sp, #88]
   18544:	ldr	x0, [x0, #8]
   18548:	add	x0, x1, x0
   1854c:	ldr	x1, [sp, #104]
   18550:	cmp	x1, x0
   18554:	b.cc	18560 <__sancov_default_options@@Base+0x23c4>  // b.lo, b.ul, b.last
   18558:	mov	x19, #0x0                   	// #0
   1855c:	b	18570 <__sancov_default_options@@Base+0x23d4>
   18560:	ldr	x1, [sp, #88]
   18564:	ldr	x0, [sp, #24]
   18568:	bl	18aa4 <__sancov_default_options@@Base+0x2908>
   1856c:	mov	x19, x0
   18570:	add	x0, sp, #0x20
   18574:	bl	f5bc <__sanitizer_get_allocated_size@@Base+0xa5c>
   18578:	mov	x0, x19
   1857c:	ldp	x19, x30, [sp], #128
   18580:	ret
   18584:	str	x30, [sp, #-32]!
   18588:	str	x0, [sp, #24]
   1858c:	ldr	x0, [sp, #24]
   18590:	cmp	x0, #0x35
   18594:	b.eq	185a4 <__sancov_default_options@@Base+0x2408>  // b.none
   18598:	ldr	x0, [sp, #24]
   1859c:	bl	11c0c <__sanitizer_get_allocated_size@@Base+0x30ac>
   185a0:	b	185a8 <__sancov_default_options@@Base+0x240c>
   185a4:	mov	x0, #0x200                 	// #512
   185a8:	ldr	x30, [sp], #32
   185ac:	ret
   185b0:	str	x30, [sp, #-32]!
   185b4:	str	x0, [sp, #24]
   185b8:	ldr	x0, [sp, #24]
   185bc:	bl	12528 <__sanitizer_get_allocated_size@@Base+0x39c8>
   185c0:	mov	x1, x0
   185c4:	mov	x0, #0x3e                  	// #62
   185c8:	bl	aeac <__lsan_do_recoverable_leak_check@@Base+0xd20>
   185cc:	ldr	x30, [sp], #32
   185d0:	ret
   185d4:	sub	sp, sp, #0x10
   185d8:	str	x0, [sp, #8]
   185dc:	ldr	x0, [sp, #8]
   185e0:	add	x0, x0, #0x2
   185e4:	lsl	x0, x0, #3
   185e8:	add	sp, sp, #0x10
   185ec:	ret
   185f0:	str	x30, [sp, #-64]!
   185f4:	str	x0, [sp, #40]
   185f8:	str	x1, [sp, #32]
   185fc:	str	x2, [sp, #24]
   18600:	str	x3, [sp, #16]
   18604:	ldr	x1, [sp, #40]
   18608:	ldr	x0, [sp, #32]
   1860c:	lsl	x0, x0, #10
   18610:	add	x0, x1, x0
   18614:	ldr	x0, [x0, #24]
   18618:	str	x0, [sp, #56]
   1861c:	ldr	x0, [sp, #56]
   18620:	cmp	x0, #0x0
   18624:	b.eq	1863c <__sancov_default_options@@Base+0x24a0>  // b.none
   18628:	ldr	x2, [sp, #56]
   1862c:	ldr	x1, [sp, #24]
   18630:	ldr	x0, [sp, #40]
   18634:	bl	170bc <__sancov_default_options@@Base+0xf20>
   18638:	b	18640 <__sancov_default_options@@Base+0x24a4>
   1863c:	ldr	x0, [sp, #16]
   18640:	ldr	x30, [sp], #64
   18644:	ret
   18648:	sub	sp, sp, #0x30
   1864c:	str	x0, [sp, #24]
   18650:	str	x1, [sp, #16]
   18654:	str	x2, [sp, #8]
   18658:	ldr	x0, [sp, #24]
   1865c:	ldr	x1, [sp, #8]
   18660:	str	x1, [x0, #8]
   18664:	str	xzr, [sp, #40]
   18668:	ldr	x1, [sp, #40]
   1866c:	ldr	x0, [sp, #8]
   18670:	cmp	x1, x0
   18674:	b.cs	186ac <__sancov_default_options@@Base+0x2510>  // b.hs, b.nlast
   18678:	ldr	x0, [sp, #40]
   1867c:	lsl	x0, x0, #3
   18680:	ldr	x1, [sp, #16]
   18684:	add	x0, x1, x0
   18688:	ldr	x2, [x0]
   1868c:	ldr	x0, [sp, #24]
   18690:	ldr	x1, [sp, #40]
   18694:	add	x1, x1, #0x2
   18698:	str	x2, [x0, x1, lsl #3]
   1869c:	ldr	x0, [sp, #40]
   186a0:	add	x0, x0, #0x1
   186a4:	str	x0, [sp, #40]
   186a8:	b	18668 <__sancov_default_options@@Base+0x24cc>
   186ac:	nop
   186b0:	add	sp, sp, #0x30
   186b4:	ret
   186b8:	str	x30, [sp, #-80]!
   186bc:	str	x0, [sp, #40]
   186c0:	str	x1, [sp, #32]
   186c4:	str	x2, [sp, #24]
   186c8:	str	x3, [sp, #16]
   186cc:	ldr	x0, [sp, #16]
   186d0:	bl	18284 <__sancov_default_options@@Base+0x20e8>
   186d4:	str	x0, [sp, #72]
   186d8:	str	xzr, [sp, #64]
   186dc:	ldr	x1, [sp, #72]
   186e0:	ldr	x0, [sp, #64]
   186e4:	cmp	x1, x0
   186e8:	cset	w0, ls  // ls = plast
   186ec:	and	w0, w0, #0xff
   186f0:	and	x0, x0, #0xff
   186f4:	cmp	x0, #0x0
   186f8:	b.eq	1871c <__sancov_default_options@@Base+0x2580>  // b.none
   186fc:	ldr	x4, [sp, #64]
   18700:	ldr	x3, [sp, #72]
   18704:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   18708:	add	x2, x0, #0xa58
   1870c:	mov	w1, #0xad                  	// #173
   18710:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   18714:	add	x0, x0, #0xa98
   18718:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1871c:	ldr	x1, [sp, #24]
   18720:	ldr	x0, [sp, #40]
   18724:	bl	1875c <__sancov_default_options@@Base+0x25c0>
   18728:	str	x0, [sp, #56]
   1872c:	ldr	x1, [sp, #56]
   18730:	add	x0, sp, #0x30
   18734:	bl	f58c <__sanitizer_get_allocated_size@@Base+0xa2c>
   18738:	ldr	x0, [sp, #56]
   1873c:	add	x0, x0, #0x8
   18740:	ldr	x1, [sp, #16]
   18744:	bl	18b30 <__sancov_default_options@@Base+0x2994>
   18748:	add	x0, sp, #0x30
   1874c:	bl	f5bc <__sanitizer_get_allocated_size@@Base+0xa5c>
   18750:	nop
   18754:	ldr	x30, [sp], #80
   18758:	ret
   1875c:	sub	sp, sp, #0x10
   18760:	str	x0, [sp, #8]
   18764:	str	x1, [sp]
   18768:	ldr	x1, [sp]
   1876c:	mov	x0, #0x2001                	// #8193
   18770:	add	x0, x1, x0
   18774:	lsl	x0, x0, #6
   18778:	ldr	x1, [sp, #8]
   1877c:	add	x0, x1, x0
   18780:	add	sp, sp, #0x10
   18784:	ret
   18788:	sub	sp, sp, #0x10
   1878c:	str	x0, [sp, #8]
   18790:	ldr	x0, [sp, #8]
   18794:	ldr	x0, [x0]
   18798:	cmp	x0, #0x0
   1879c:	cset	w0, eq  // eq = none
   187a0:	and	w0, w0, #0xff
   187a4:	add	sp, sp, #0x10
   187a8:	ret
   187ac:	sub	sp, sp, #0x210
   187b0:	str	x30, [sp]
   187b4:	str	x0, [sp, #56]
   187b8:	str	x1, [sp, #48]
   187bc:	str	x2, [sp, #40]
   187c0:	str	x3, [sp, #32]
   187c4:	str	x4, [sp, #24]
   187c8:	ldr	x2, [sp, #24]
   187cc:	ldr	x1, [sp, #48]
   187d0:	ldr	x0, [sp, #56]
   187d4:	bl	18bc0 <__sancov_default_options@@Base+0x2a24>
   187d8:	str	x0, [sp, #504]
   187dc:	ldr	x0, [sp, #504]
   187e0:	cmp	x0, #0x0
   187e4:	cset	w0, eq  // eq = none
   187e8:	and	w0, w0, #0xff
   187ec:	and	x0, x0, #0xff
   187f0:	cmp	x0, #0x0
   187f4:	b.eq	18800 <__sancov_default_options@@Base+0x2664>  // b.none
   187f8:	mov	w0, #0x0                   	// #0
   187fc:	b	189cc <__sancov_default_options@@Base+0x2830>
   18800:	ldr	x0, [sp, #24]
   18804:	bl	18584 <__sancov_default_options@@Base+0x23e8>
   18808:	str	x0, [sp, #496]
   1880c:	mov	x1, #0x100000              	// #1048576
   18810:	ldr	x0, [sp, #496]
   18814:	udiv	x0, x1, x0
   18818:	str	x0, [sp, #488]
   1881c:	ldr	x0, [sp, #496]
   18820:	bl	185b0 <__sancov_default_options@@Base+0x2414>
   18824:	str	x0, [sp, #480]
   18828:	str	xzr, [sp, #448]
   1882c:	mov	x0, #0x30                  	// #48
   18830:	str	x0, [sp, #472]
   18834:	str	xzr, [sp, #520]
   18838:	ldr	x0, [sp, #504]
   1883c:	str	x0, [sp, #512]
   18840:	ldr	x1, [sp, #488]
   18844:	ldr	x0, [sp, #496]
   18848:	mul	x1, x1, x0
   1884c:	ldr	x0, [sp, #504]
   18850:	add	x0, x1, x0
   18854:	ldr	x1, [sp, #512]
   18858:	cmp	x1, x0
   1885c:	b.cs	188f8 <__sancov_default_options@@Base+0x275c>  // b.hs, b.nlast
   18860:	ldr	x0, [sp, #520]
   18864:	add	x1, x0, #0x1
   18868:	str	x1, [sp, #520]
   1886c:	lsl	x0, x0, #3
   18870:	add	x1, sp, #0x40
   18874:	ldr	x2, [sp, #512]
   18878:	str	x2, [x1, x0]
   1887c:	ldr	x0, [sp, #520]
   18880:	cmp	x0, #0x30
   18884:	b.ne	188e4 <__sancov_default_options@@Base+0x2748>  // b.any
   18888:	add	x1, sp, #0x40
   1888c:	add	x0, sp, #0x1c0
   18890:	ldr	x7, [sp, #520]
   18894:	mov	x6, x1
   18898:	ldr	x5, [sp, #480]
   1889c:	mov	x4, x0
   188a0:	ldr	x3, [sp, #24]
   188a4:	ldr	x2, [sp, #32]
   188a8:	ldr	x1, [sp, #40]
   188ac:	ldr	x0, [sp, #56]
   188b0:	bl	18cc4 <__sancov_default_options@@Base+0x2b28>
   188b4:	and	w0, w0, #0xff
   188b8:	eor	w0, w0, #0x1
   188bc:	and	w0, w0, #0xff
   188c0:	and	x0, x0, #0xff
   188c4:	cmp	x0, #0x0
   188c8:	cset	w0, ne  // ne = any
   188cc:	and	w0, w0, #0xff
   188d0:	cmp	w0, #0x0
   188d4:	b.eq	188e0 <__sancov_default_options@@Base+0x2744>  // b.none
   188d8:	mov	w0, #0x0                   	// #0
   188dc:	b	189cc <__sancov_default_options@@Base+0x2830>
   188e0:	str	xzr, [sp, #520]
   188e4:	ldr	x1, [sp, #512]
   188e8:	ldr	x0, [sp, #496]
   188ec:	add	x0, x1, x0
   188f0:	str	x0, [sp, #512]
   188f4:	b	18840 <__sancov_default_options@@Base+0x26a4>
   188f8:	ldr	x0, [sp, #520]
   188fc:	cmp	x0, #0x0
   18900:	b.eq	1895c <__sancov_default_options@@Base+0x27c0>  // b.none
   18904:	add	x1, sp, #0x40
   18908:	add	x0, sp, #0x1c0
   1890c:	ldr	x7, [sp, #520]
   18910:	mov	x6, x1
   18914:	ldr	x5, [sp, #480]
   18918:	mov	x4, x0
   1891c:	ldr	x3, [sp, #24]
   18920:	ldr	x2, [sp, #32]
   18924:	ldr	x1, [sp, #40]
   18928:	ldr	x0, [sp, #56]
   1892c:	bl	18cc4 <__sancov_default_options@@Base+0x2b28>
   18930:	and	w0, w0, #0xff
   18934:	eor	w0, w0, #0x1
   18938:	and	w0, w0, #0xff
   1893c:	and	x0, x0, #0xff
   18940:	cmp	x0, #0x0
   18944:	cset	w0, ne  // ne = any
   18948:	and	w0, w0, #0xff
   1894c:	cmp	w0, #0x0
   18950:	b.eq	1895c <__sancov_default_options@@Base+0x27c0>  // b.none
   18954:	mov	w0, #0x0                   	// #0
   18958:	b	189cc <__sancov_default_options@@Base+0x2830>
   1895c:	ldr	x0, [sp, #448]
   18960:	cmp	x0, #0x0
   18964:	b.eq	189c8 <__sancov_default_options@@Base+0x282c>  // b.none
   18968:	ldr	x0, [sp, #448]
   1896c:	bl	18284 <__sancov_default_options@@Base+0x20e8>
   18970:	str	x0, [sp, #464]
   18974:	str	xzr, [sp, #456]
   18978:	ldr	x1, [sp, #464]
   1897c:	ldr	x0, [sp, #456]
   18980:	cmp	x1, x0
   18984:	cset	w0, ls  // ls = plast
   18988:	and	w0, w0, #0xff
   1898c:	and	x0, x0, #0xff
   18990:	cmp	x0, #0x0
   18994:	b.eq	189b8 <__sancov_default_options@@Base+0x281c>  // b.none
   18998:	ldr	x4, [sp, #456]
   1899c:	ldr	x3, [sp, #464]
   189a0:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   189a4:	add	x2, x0, #0xa58
   189a8:	mov	w1, #0x169                 	// #361
   189ac:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   189b0:	add	x0, x0, #0xa98
   189b4:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   189b8:	ldr	x0, [sp, #32]
   189bc:	add	x0, x0, #0x8
   189c0:	ldr	x1, [sp, #448]
   189c4:	bl	18dec <__sancov_default_options@@Base+0x2c50>
   189c8:	mov	w0, #0x1                   	// #1
   189cc:	ldr	x30, [sp]
   189d0:	add	sp, sp, #0x210
   189d4:	ret
   189d8:	sub	sp, sp, #0x10
   189dc:	str	x0, [sp, #8]
   189e0:	ldr	x0, [sp, #8]
   189e4:	ldr	x0, [x0, #8]
   189e8:	add	sp, sp, #0x10
   189ec:	ret
   189f0:	str	x30, [sp, #-48]!
   189f4:	str	x0, [sp, #24]
   189f8:	ldr	x0, [sp, #24]
   189fc:	bl	18788 <__sancov_default_options@@Base+0x25ec>
   18a00:	and	w0, w0, #0xff
   18a04:	eor	w0, w0, #0x1
   18a08:	and	w0, w0, #0xff
   18a0c:	and	x0, x0, #0xff
   18a10:	str	x0, [sp, #40]
   18a14:	str	xzr, [sp, #32]
   18a18:	ldr	x1, [sp, #40]
   18a1c:	ldr	x0, [sp, #32]
   18a20:	cmp	x1, x0
   18a24:	cset	w0, eq  // eq = none
   18a28:	and	w0, w0, #0xff
   18a2c:	and	x0, x0, #0xff
   18a30:	cmp	x0, #0x0
   18a34:	b.eq	18a58 <__sancov_default_options@@Base+0x28bc>  // b.none
   18a38:	ldr	x4, [sp, #32]
   18a3c:	ldr	x3, [sp, #40]
   18a40:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   18a44:	add	x2, x0, #0xc60
   18a48:	mov	w1, #0x40                  	// #64
   18a4c:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   18a50:	add	x0, x0, #0xc78
   18a54:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   18a58:	ldr	x0, [sp, #24]
   18a5c:	ldr	x0, [x0, #8]
   18a60:	ldr	x1, [x0]
   18a64:	ldr	x0, [sp, #24]
   18a68:	str	x1, [x0, #8]
   18a6c:	ldr	x0, [sp, #24]
   18a70:	ldr	x0, [x0, #8]
   18a74:	cmp	x0, #0x0
   18a78:	b.ne	18a84 <__sancov_default_options@@Base+0x28e8>  // b.any
   18a7c:	ldr	x0, [sp, #24]
   18a80:	str	xzr, [x0, #16]
   18a84:	ldr	x0, [sp, #24]
   18a88:	ldr	x0, [x0]
   18a8c:	sub	x1, x0, #0x1
   18a90:	ldr	x0, [sp, #24]
   18a94:	str	x1, [x0]
   18a98:	nop
   18a9c:	ldr	x30, [sp], #48
   18aa0:	ret
   18aa4:	str	x30, [sp, #-48]!
   18aa8:	str	x0, [sp, #24]
   18aac:	str	x1, [sp, #16]
   18ab0:	ldr	x2, [sp, #16]
   18ab4:	ldr	x0, [sp, #24]
   18ab8:	ldr	x0, [x0]
   18abc:	mov	x1, x0
   18ac0:	mov	x0, x2
   18ac4:	bl	ed50 <__sanitizer_get_allocated_size@@Base+0x1f0>
   18ac8:	and	w0, w0, #0xff
   18acc:	and	x0, x0, #0xff
   18ad0:	str	x0, [sp, #40]
   18ad4:	str	xzr, [sp, #32]
   18ad8:	ldr	x1, [sp, #40]
   18adc:	ldr	x0, [sp, #32]
   18ae0:	cmp	x1, x0
   18ae4:	cset	w0, eq  // eq = none
   18ae8:	and	w0, w0, #0xff
   18aec:	and	x0, x0, #0xff
   18af0:	cmp	x0, #0x0
   18af4:	b.eq	18b18 <__sancov_default_options@@Base+0x297c>  // b.none
   18af8:	ldr	x4, [sp, #32]
   18afc:	ldr	x3, [sp, #40]
   18b00:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   18b04:	add	x2, x0, #0xcb8
   18b08:	mov	w1, #0x12b                 	// #299
   18b0c:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   18b10:	add	x0, x0, #0x478
   18b14:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   18b18:	ldr	x0, [sp, #24]
   18b1c:	ldr	x1, [x0]
   18b20:	ldr	x0, [sp, #16]
   18b24:	add	x0, x1, x0
   18b28:	ldr	x30, [sp], #48
   18b2c:	ret
   18b30:	str	x30, [sp, #-32]!
   18b34:	str	x0, [sp, #24]
   18b38:	str	x1, [sp, #16]
   18b3c:	ldr	x0, [sp, #24]
   18b40:	bl	18788 <__sancov_default_options@@Base+0x25ec>
   18b44:	and	w0, w0, #0xff
   18b48:	cmp	w0, #0x0
   18b4c:	b.eq	18b84 <__sancov_default_options@@Base+0x29e8>  // b.none
   18b50:	ldr	x0, [sp, #16]
   18b54:	str	xzr, [x0]
   18b58:	ldr	x0, [sp, #24]
   18b5c:	ldr	x1, [sp, #16]
   18b60:	str	x1, [x0, #16]
   18b64:	ldr	x0, [sp, #24]
   18b68:	ldr	x1, [x0, #16]
   18b6c:	ldr	x0, [sp, #24]
   18b70:	str	x1, [x0, #8]
   18b74:	ldr	x0, [sp, #24]
   18b78:	mov	x1, #0x1                   	// #1
   18b7c:	str	x1, [x0]
   18b80:	b	18bb4 <__sancov_default_options@@Base+0x2a18>
   18b84:	ldr	x0, [sp, #24]
   18b88:	ldr	x1, [x0, #8]
   18b8c:	ldr	x0, [sp, #16]
   18b90:	str	x1, [x0]
   18b94:	ldr	x0, [sp, #24]
   18b98:	ldr	x1, [sp, #16]
   18b9c:	str	x1, [x0, #8]
   18ba0:	ldr	x0, [sp, #24]
   18ba4:	ldr	x0, [x0]
   18ba8:	add	x1, x0, #0x1
   18bac:	ldr	x0, [sp, #24]
   18bb0:	str	x1, [x0]
   18bb4:	nop
   18bb8:	ldr	x30, [sp], #32
   18bbc:	ret
   18bc0:	stp	x19, x30, [sp, #-80]!
   18bc4:	str	x0, [sp, #40]
   18bc8:	str	x1, [sp, #32]
   18bcc:	str	x2, [sp, #24]
   18bd0:	adrp	x0, 7d000 <_Unwind_Backtrace@GCC_3.3>
   18bd4:	add	x0, x0, #0x3c0
   18bd8:	ldr	x0, [x0]
   18bdc:	mov	x2, x0
   18be0:	mov	x1, #0x100000              	// #1048576
   18be4:	mov	x0, #0x100000              	// #1048576
   18be8:	bl	26c8c <__sanitizer_set_report_fd@@Base+0x7a94>
   18bec:	str	x0, [sp, #72]
   18bf0:	ldr	x0, [sp, #72]
   18bf4:	cmp	x0, #0x0
   18bf8:	cset	w0, eq  // eq = none
   18bfc:	and	w0, w0, #0xff
   18c00:	and	x0, x0, #0xff
   18c04:	cmp	x0, #0x0
   18c08:	b.eq	18c14 <__sancov_default_options@@Base+0x2a78>  // b.none
   18c0c:	mov	x0, #0x0                   	// #0
   18c10:	b	18cbc <__sancov_default_options@@Base+0x2b20>
   18c14:	add	x0, sp, #0x30
   18c18:	mov	x2, #0x100000              	// #1048576
   18c1c:	ldr	x1, [sp, #72]
   18c20:	bl	ed80 <__sanitizer_get_allocated_size@@Base+0x220>
   18c24:	mov	x2, #0x100000              	// #1048576
   18c28:	mov	w1, #0x1                   	// #1
   18c2c:	ldr	x0, [sp, #32]
   18c30:	bl	edb8 <__sanitizer_get_allocated_size@@Base+0x258>
   18c34:	mov	x1, #0x100000              	// #1048576
   18c38:	ldr	x0, [sp, #72]
   18c3c:	bl	ed50 <__sanitizer_get_allocated_size@@Base+0x1f0>
   18c40:	and	w0, w0, #0xff
   18c44:	and	x0, x0, #0xff
   18c48:	str	x0, [sp, #64]
   18c4c:	str	xzr, [sp, #56]
   18c50:	ldr	x1, [sp, #64]
   18c54:	ldr	x0, [sp, #56]
   18c58:	cmp	x1, x0
   18c5c:	cset	w0, eq  // eq = none
   18c60:	and	w0, w0, #0xff
   18c64:	and	x0, x0, #0xff
   18c68:	cmp	x0, #0x0
   18c6c:	b.eq	18c90 <__sancov_default_options@@Base+0x2af4>  // b.none
   18c70:	ldr	x4, [sp, #56]
   18c74:	ldr	x3, [sp, #64]
   18c78:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   18c7c:	add	x2, x0, #0xce8
   18c80:	mov	w1, #0x126                 	// #294
   18c84:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   18c88:	add	x0, x0, #0xa98
   18c8c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   18c90:	ldr	x19, [sp, #40]
   18c94:	ldr	x1, [sp, #72]
   18c98:	ldr	x0, [sp, #40]
   18c9c:	bl	17f38 <__sancov_default_options@@Base+0x1d9c>
   18ca0:	ldr	x1, [sp, #24]
   18ca4:	and	w1, w1, #0xff
   18ca8:	mov	w2, w1
   18cac:	mov	x1, x0
   18cb0:	mov	x0, x19
   18cb4:	bl	128c8 <__sanitizer_get_allocated_size@@Base+0x3d68>
   18cb8:	ldr	x0, [sp, #72]
   18cbc:	ldp	x19, x30, [sp], #80
   18cc0:	ret
   18cc4:	str	x30, [sp, #-96]!
   18cc8:	str	x0, [sp, #72]
   18ccc:	str	x1, [sp, #64]
   18cd0:	str	x2, [sp, #56]
   18cd4:	str	x3, [sp, #48]
   18cd8:	str	x4, [sp, #40]
   18cdc:	str	x5, [sp, #32]
   18ce0:	str	x6, [sp, #24]
   18ce4:	str	x7, [sp, #16]
   18ce8:	ldr	x0, [sp, #40]
   18cec:	ldr	x0, [x0]
   18cf0:	str	x0, [sp, #88]
   18cf4:	str	xzr, [sp, #80]
   18cf8:	ldr	x1, [sp, #80]
   18cfc:	ldr	x0, [sp, #16]
   18d00:	cmp	x1, x0
   18d04:	b.cs	18dd4 <__sancov_default_options@@Base+0x2c38>  // b.hs, b.nlast
   18d08:	ldr	x0, [sp, #88]
   18d0c:	cmp	x0, #0x0
   18d10:	b.ne	18d6c <__sancov_default_options@@Base+0x2bd0>  // b.any
   18d14:	ldr	x0, [sp, #80]
   18d18:	lsl	x0, x0, #3
   18d1c:	ldr	x1, [sp, #24]
   18d20:	add	x0, x1, x0
   18d24:	ldr	x0, [x0]
   18d28:	mov	x3, x0
   18d2c:	ldr	x2, [sp, #72]
   18d30:	ldr	x1, [sp, #48]
   18d34:	ldr	x0, [sp, #64]
   18d38:	bl	185f0 <__sancov_default_options@@Base+0x2454>
   18d3c:	str	x0, [sp, #88]
   18d40:	ldr	x0, [sp, #88]
   18d44:	cmp	x0, #0x0
   18d48:	cset	w0, eq  // eq = none
   18d4c:	and	w0, w0, #0xff
   18d50:	and	x0, x0, #0xff
   18d54:	cmp	x0, #0x0
   18d58:	b.eq	18d64 <__sancov_default_options@@Base+0x2bc8>  // b.none
   18d5c:	mov	w0, #0x0                   	// #0
   18d60:	b	18de4 <__sancov_default_options@@Base+0x2c48>
   18d64:	ldr	x0, [sp, #88]
   18d68:	bl	18e84 <__sancov_default_options@@Base+0x2ce8>
   18d6c:	ldr	x0, [sp, #80]
   18d70:	lsl	x0, x0, #3
   18d74:	ldr	x1, [sp, #24]
   18d78:	add	x0, x1, x0
   18d7c:	ldr	x0, [x0]
   18d80:	mov	x1, x0
   18d84:	ldr	x0, [sp, #88]
   18d88:	bl	18ea0 <__sancov_default_options@@Base+0x2d04>
   18d8c:	ldr	x0, [sp, #88]
   18d90:	bl	18284 <__sancov_default_options@@Base+0x20e8>
   18d94:	mov	x1, x0
   18d98:	ldr	x0, [sp, #32]
   18d9c:	cmp	x0, x1
   18da0:	cset	w0, eq  // eq = none
   18da4:	and	w0, w0, #0xff
   18da8:	cmp	w0, #0x0
   18dac:	b.eq	18dc4 <__sancov_default_options@@Base+0x2c28>  // b.none
   18db0:	ldr	x0, [sp, #56]
   18db4:	add	x0, x0, #0x8
   18db8:	ldr	x1, [sp, #88]
   18dbc:	bl	18dec <__sancov_default_options@@Base+0x2c50>
   18dc0:	str	xzr, [sp, #88]
   18dc4:	ldr	x0, [sp, #80]
   18dc8:	add	x0, x0, #0x1
   18dcc:	str	x0, [sp, #80]
   18dd0:	b	18cf8 <__sancov_default_options@@Base+0x2b5c>
   18dd4:	ldr	x0, [sp, #40]
   18dd8:	ldr	x1, [sp, #88]
   18ddc:	str	x1, [x0]
   18de0:	mov	w0, #0x1                   	// #1
   18de4:	ldr	x30, [sp], #96
   18de8:	ret
   18dec:	str	x30, [sp, #-32]!
   18df0:	str	x0, [sp, #24]
   18df4:	str	x1, [sp, #16]
   18df8:	ldr	x0, [sp, #24]
   18dfc:	bl	18788 <__sancov_default_options@@Base+0x25ec>
   18e00:	and	w0, w0, #0xff
   18e04:	cmp	w0, #0x0
   18e08:	b.eq	18e40 <__sancov_default_options@@Base+0x2ca4>  // b.none
   18e0c:	ldr	x0, [sp, #16]
   18e10:	str	xzr, [x0]
   18e14:	ldr	x0, [sp, #24]
   18e18:	ldr	x1, [sp, #16]
   18e1c:	str	x1, [x0, #16]
   18e20:	ldr	x0, [sp, #24]
   18e24:	ldr	x1, [x0, #16]
   18e28:	ldr	x0, [sp, #24]
   18e2c:	str	x1, [x0, #8]
   18e30:	ldr	x0, [sp, #24]
   18e34:	mov	x1, #0x1                   	// #1
   18e38:	str	x1, [x0]
   18e3c:	b	18e78 <__sancov_default_options@@Base+0x2cdc>
   18e40:	ldr	x0, [sp, #16]
   18e44:	str	xzr, [x0]
   18e48:	ldr	x0, [sp, #24]
   18e4c:	ldr	x0, [x0, #16]
   18e50:	ldr	x1, [sp, #16]
   18e54:	str	x1, [x0]
   18e58:	ldr	x0, [sp, #24]
   18e5c:	ldr	x1, [sp, #16]
   18e60:	str	x1, [x0, #16]
   18e64:	ldr	x0, [sp, #24]
   18e68:	ldr	x0, [x0]
   18e6c:	add	x1, x0, #0x1
   18e70:	ldr	x0, [sp, #24]
   18e74:	str	x1, [x0]
   18e78:	nop
   18e7c:	ldr	x30, [sp], #32
   18e80:	ret
   18e84:	sub	sp, sp, #0x10
   18e88:	str	x0, [sp, #8]
   18e8c:	ldr	x0, [sp, #8]
   18e90:	str	xzr, [x0, #8]
   18e94:	nop
   18e98:	add	sp, sp, #0x10
   18e9c:	ret
   18ea0:	sub	sp, sp, #0x10
   18ea4:	str	x0, [sp, #8]
   18ea8:	str	x1, [sp]
   18eac:	ldr	x0, [sp, #8]
   18eb0:	ldr	x0, [x0, #8]
   18eb4:	add	x2, x0, #0x1
   18eb8:	ldr	x1, [sp, #8]
   18ebc:	str	x2, [x1, #8]
   18ec0:	ldr	x1, [sp, #8]
   18ec4:	add	x0, x0, #0x2
   18ec8:	ldr	x2, [sp]
   18ecc:	str	x2, [x1, x0, lsl #3]
   18ed0:	nop
   18ed4:	add	sp, sp, #0x10
   18ed8:	ret
   18edc:	str	x30, [sp, #-16]!
   18ee0:	bl	6d00 <__errno_location@plt>
   18ee4:	mov	x1, x0
   18ee8:	mov	w0, #0xc                   	// #12
   18eec:	str	w0, [x1]
   18ef0:	nop
   18ef4:	ldr	x30, [sp], #16
   18ef8:	ret
   18efc:	str	x30, [sp, #-80]!
   18f00:	str	x0, [sp, #40]
   18f04:	str	x1, [sp, #32]
   18f08:	str	x2, [sp, #24]
   18f0c:	add	x3, sp, #0x30
   18f10:	ldr	x2, [sp, #24]
   18f14:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   18f18:	add	x1, x0, #0xe28
   18f1c:	mov	x0, x3
   18f20:	bl	19168 <__sancov_default_options@@Base+0x2fcc>
   18f24:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   18f28:	ldr	x0, [x0, #4008]
   18f2c:	ldr	x0, [x0]
   18f30:	ldr	x3, [sp, #32]
   18f34:	ldr	x2, [sp, #40]
   18f38:	mov	x1, x0
   18f3c:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   18f40:	add	x0, x0, #0xe38
   18f44:	bl	2a3fc <OnPrint@@Base+0x454>
   18f48:	add	x0, sp, #0x30
   18f4c:	bl	191cc <__sancov_default_options@@Base+0x3030>
   18f50:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   18f54:	stp	x19, x30, [sp, #-64]!
   18f58:	str	x0, [sp, #24]
   18f5c:	str	x1, [sp, #16]
   18f60:	add	x3, sp, #0x20
   18f64:	ldr	x2, [sp, #16]
   18f68:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   18f6c:	add	x1, x0, #0xea0
   18f70:	mov	x0, x3
   18f74:	bl	19168 <__sancov_default_options@@Base+0x2fcc>
   18f78:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   18f7c:	ldr	x0, [x0, #4008]
   18f80:	ldr	x19, [x0]
   18f84:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
   18f88:	mov	x3, x0
   18f8c:	ldr	x2, [sp, #24]
   18f90:	mov	x1, x19
   18f94:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   18f98:	add	x0, x0, #0xeb8
   18f9c:	bl	2a3fc <OnPrint@@Base+0x454>
   18fa0:	add	x0, sp, #0x20
   18fa4:	bl	191cc <__sancov_default_options@@Base+0x3030>
   18fa8:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   18fac:	str	x30, [sp, #-64]!
   18fb0:	str	x0, [sp, #24]
   18fb4:	str	x1, [sp, #16]
   18fb8:	add	x3, sp, #0x20
   18fbc:	ldr	x2, [sp, #16]
   18fc0:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   18fc4:	add	x1, x0, #0xf38
   18fc8:	mov	x0, x3
   18fcc:	bl	19168 <__sancov_default_options@@Base+0x2fcc>
   18fd0:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   18fd4:	ldr	x0, [x0, #4008]
   18fd8:	ldr	x0, [x0]
   18fdc:	ldr	x2, [sp, #24]
   18fe0:	mov	x1, x0
   18fe4:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   18fe8:	add	x0, x0, #0xf58
   18fec:	bl	2a3fc <OnPrint@@Base+0x454>
   18ff0:	add	x0, sp, #0x20
   18ff4:	bl	191cc <__sancov_default_options@@Base+0x3030>
   18ff8:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   18ffc:	str	x30, [sp, #-80]!
   19000:	str	x0, [sp, #40]
   19004:	str	x1, [sp, #32]
   19008:	str	x2, [sp, #24]
   1900c:	add	x3, sp, #0x30
   19010:	ldr	x2, [sp, #24]
   19014:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   19018:	add	x1, x0, #0xfa8
   1901c:	mov	x0, x3
   19020:	bl	19168 <__sancov_default_options@@Base+0x2fcc>
   19024:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   19028:	ldr	x0, [x0, #4008]
   1902c:	ldr	x0, [x0]
   19030:	ldr	x3, [sp, #40]
   19034:	ldr	x2, [sp, #32]
   19038:	mov	x1, x0
   1903c:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   19040:	add	x0, x0, #0xfc8
   19044:	bl	2a3fc <OnPrint@@Base+0x454>
   19048:	add	x0, sp, #0x30
   1904c:	bl	191cc <__sancov_default_options@@Base+0x3030>
   19050:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   19054:	str	x30, [sp, #-64]!
   19058:	str	x0, [sp, #24]
   1905c:	str	x1, [sp, #16]
   19060:	add	x3, sp, #0x20
   19064:	ldr	x2, [sp, #16]
   19068:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1906c:	add	x1, x0, #0x68
   19070:	mov	x0, x3
   19074:	bl	19168 <__sancov_default_options@@Base+0x2fcc>
   19078:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   1907c:	ldr	x0, [x0, #4008]
   19080:	ldr	x0, [x0]
   19084:	mov	x3, #0x8                   	// #8
   19088:	ldr	x2, [sp, #24]
   1908c:	mov	x1, x0
   19090:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   19094:	add	x0, x0, #0x90
   19098:	bl	2a3fc <OnPrint@@Base+0x454>
   1909c:	add	x0, sp, #0x20
   190a0:	bl	191cc <__sancov_default_options@@Base+0x3030>
   190a4:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   190a8:	str	x30, [sp, #-80]!
   190ac:	str	x0, [sp, #40]
   190b0:	str	x1, [sp, #32]
   190b4:	str	x2, [sp, #24]
   190b8:	add	x3, sp, #0x30
   190bc:	ldr	x2, [sp, #24]
   190c0:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   190c4:	add	x1, x0, #0x118
   190c8:	mov	x0, x3
   190cc:	bl	19168 <__sancov_default_options@@Base+0x2fcc>
   190d0:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   190d4:	ldr	x0, [x0, #4008]
   190d8:	ldr	x0, [x0]
   190dc:	ldr	x3, [sp, #32]
   190e0:	ldr	x2, [sp, #40]
   190e4:	mov	x1, x0
   190e8:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   190ec:	add	x0, x0, #0x130
   190f0:	bl	2a3fc <OnPrint@@Base+0x454>
   190f4:	add	x0, sp, #0x30
   190f8:	bl	191cc <__sancov_default_options@@Base+0x3030>
   190fc:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   19100:	str	x30, [sp, #-64]!
   19104:	str	x0, [sp, #24]
   19108:	str	x1, [sp, #16]
   1910c:	add	x3, sp, #0x20
   19110:	ldr	x2, [sp, #16]
   19114:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   19118:	add	x1, x0, #0x188
   1911c:	mov	x0, x3
   19120:	bl	19168 <__sancov_default_options@@Base+0x2fcc>
   19124:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   19128:	ldr	x0, [x0, #4008]
   1912c:	ldr	x0, [x0]
   19130:	ldr	x2, [sp, #24]
   19134:	mov	x1, x0
   19138:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1913c:	add	x0, x0, #0x198
   19140:	bl	2a3fc <OnPrint@@Base+0x454>
   19144:	add	x0, sp, #0x20
   19148:	bl	191cc <__sancov_default_options@@Base+0x3030>
   1914c:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   19150:	str	x30, [sp, #-32]!
   19154:	str	x0, [sp, #24]
   19158:	ldr	x0, [sp, #24]
   1915c:	bl	a978 <__lsan_do_recoverable_leak_check@@Base+0x7ec>
   19160:	ldr	x30, [sp], #32
   19164:	ret
   19168:	str	x30, [sp, #-48]!
   1916c:	str	x0, [sp, #40]
   19170:	str	x1, [sp, #32]
   19174:	str	x2, [sp, #24]
   19178:	ldr	x0, [sp, #40]
   1917c:	bl	2e6b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xaa8>
   19180:	ldr	x0, [sp, #40]
   19184:	ldr	x1, [sp, #32]
   19188:	str	x1, [x0, #8]
   1918c:	ldr	x0, [sp, #40]
   19190:	ldr	x1, [sp, #24]
   19194:	str	x1, [x0, #16]
   19198:	ldr	x0, [sp, #40]
   1919c:	add	x0, x0, #0x18
   191a0:	bl	a920 <__lsan_do_recoverable_leak_check@@Base+0x794>
   191a4:	ldr	x0, [sp, #40]
   191a8:	add	x0, x0, #0x18
   191ac:	bl	19150 <__sancov_default_options@@Base+0x2fb4>
   191b0:	mov	x1, x0
   191b4:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   191b8:	add	x0, x0, #0xe20
   191bc:	bl	2a350 <OnPrint@@Base+0x3a8>
   191c0:	nop
   191c4:	ldr	x30, [sp], #48
   191c8:	ret
   191cc:	str	x30, [sp, #-32]!
   191d0:	str	x0, [sp, #24]
   191d4:	ldr	x0, [sp, #24]
   191d8:	add	x0, x0, #0x18
   191dc:	bl	a944 <__lsan_do_recoverable_leak_check@@Base+0x7b8>
   191e0:	mov	x1, x0
   191e4:	adrp	x0, 51000 <__asan_backtrace_vector_release@@Base+0x2340>
   191e8:	add	x0, x0, #0xe20
   191ec:	bl	2a350 <OnPrint@@Base+0x3a8>
   191f0:	ldr	x0, [sp, #24]
   191f4:	ldr	x0, [x0, #16]
   191f8:	bl	2d4a4 <OnPrint@@Base+0x34fc>
   191fc:	bl	16b4c <__sancov_default_options@@Base+0x9b0>
   19200:	ldr	x0, [sp, #24]
   19204:	ldr	x3, [x0, #8]
   19208:	ldr	x0, [sp, #24]
   1920c:	ldr	x0, [x0, #16]
   19210:	mov	x2, #0x0                   	// #0
   19214:	mov	x1, x0
   19218:	mov	x0, x3
   1921c:	bl	2de10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x200>
   19220:	ldr	x0, [sp, #24]
   19224:	bl	2e768 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb58>
   19228:	nop
   1922c:	ldr	x30, [sp], #32
   19230:	ret
   19234:	str	x30, [sp, #-64]!
   19238:	str	x0, [sp, #40]
   1923c:	str	x1, [sp, #32]
   19240:	str	x2, [sp, #24]
   19244:	str	w3, [sp, #20]
   19248:	strb	w4, [sp, #19]
   1924c:	ldrb	w0, [sp, #19]
   19250:	cmp	w0, #0x0
   19254:	b.ne	1926c <__sancov_default_options@@Base+0x30d0>  // b.any
   19258:	adrp	x0, 1d1000 <__asan_cplus_demangle_builtin_types@@Base+0x154b40>
   1925c:	add	x0, x0, #0x9b8
   19260:	ldr	w0, [x0]
   19264:	cmp	w0, #0x0
   19268:	b.eq	1927c <__sancov_default_options@@Base+0x30e0>  // b.none
   1926c:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   19270:	add	x0, x0, #0x2c8
   19274:	bl	1e860 <__sanitizer_cov_pcs_init@@Base+0x37c4>
   19278:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   1927c:	adrp	x0, 1d1000 <__asan_cplus_demangle_builtin_types@@Base+0x154b40>
   19280:	add	x0, x0, #0x9b8
   19284:	ldr	w0, [x0]
   19288:	add	w1, w0, #0x1
   1928c:	adrp	x0, 1d1000 <__asan_cplus_demangle_builtin_types@@Base+0x154b40>
   19290:	add	x0, x0, #0x9b8
   19294:	str	w1, [x0]
   19298:	adrp	x0, 7d000 <_Unwind_Backtrace@GCC_3.3>
   1929c:	add	x0, x0, #0x3d0
   192a0:	ldr	x0, [x0]
   192a4:	ldr	w6, [sp, #20]
   192a8:	ldr	x5, [sp, #32]
   192ac:	ldr	x4, [sp, #40]
   192b0:	ldr	x3, [sp, #40]
   192b4:	ldr	x2, [sp, #24]
   192b8:	mov	x1, x0
   192bc:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   192c0:	add	x0, x0, #0x2e0
   192c4:	bl	2a3fc <OnPrint@@Base+0x454>
   192c8:	bl	276c4 <__sanitizer_set_report_fd@@Base+0x84cc>
   192cc:	str	xzr, [sp, #56]
   192d0:	str	xzr, [sp, #48]
   192d4:	ldr	x1, [sp, #56]
   192d8:	ldr	x0, [sp, #48]
   192dc:	cmp	x1, x0
   192e0:	cset	w0, eq  // eq = none
   192e4:	and	w0, w0, #0xff
   192e8:	and	x0, x0, #0xff
   192ec:	cmp	x0, #0x0
   192f0:	b.eq	19314 <__sancov_default_options@@Base+0x3178>  // b.none
   192f4:	ldr	x4, [sp, #48]
   192f8:	ldr	x3, [sp, #56]
   192fc:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   19300:	add	x2, x0, #0x328
   19304:	mov	w1, #0x35                  	// #53
   19308:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1930c:	add	x0, x0, #0x350
   19310:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   19314:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   19318:	str	x30, [sp, #-48]!
   1931c:	str	x0, [sp, #24]
   19320:	str	x1, [sp, #16]
   19324:	ldr	x0, [sp, #24]
   19328:	cmp	x0, #0x0
   1932c:	b.ne	19338 <__sancov_default_options@@Base+0x319c>  // b.any
   19330:	mov	x0, #0x0                   	// #0
   19334:	b	193bc <__sancov_default_options@@Base+0x3220>
   19338:	ldr	x0, [sp, #16]
   1933c:	cmp	x0, #0x0
   19340:	b.ne	1934c <__sancov_default_options@@Base+0x31b0>  // b.any
   19344:	ldr	x0, [sp, #24]
   19348:	b	193bc <__sancov_default_options@@Base+0x3220>
   1934c:	ldr	x0, [sp, #24]
   19350:	str	x0, [sp, #40]
   19354:	ldr	x1, [sp, #16]
   19358:	ldr	x0, [sp, #24]
   1935c:	bl	21ef0 <__sanitizer_set_report_fd@@Base+0x2cf8>
   19360:	str	x0, [sp, #32]
   19364:	ldr	x0, [sp, #32]
   19368:	cmp	x0, #0x0
   1936c:	b.eq	19388 <__sancov_default_options@@Base+0x31ec>  // b.none
   19370:	ldr	x0, [sp, #16]
   19374:	bl	21bac <__sanitizer_set_report_fd@@Base+0x29b4>
   19378:	mov	x1, x0
   1937c:	ldr	x0, [sp, #32]
   19380:	add	x0, x0, x1
   19384:	str	x0, [sp, #40]
   19388:	ldr	x0, [sp, #40]
   1938c:	ldrb	w0, [x0]
   19390:	cmp	w0, #0x2e
   19394:	b.ne	193b8 <__sancov_default_options@@Base+0x321c>  // b.any
   19398:	ldr	x0, [sp, #40]
   1939c:	add	x0, x0, #0x1
   193a0:	ldrb	w0, [x0]
   193a4:	cmp	w0, #0x2f
   193a8:	b.ne	193b8 <__sancov_default_options@@Base+0x321c>  // b.any
   193ac:	ldr	x0, [sp, #40]
   193b0:	add	x0, x0, #0x2
   193b4:	str	x0, [sp, #40]
   193b8:	ldr	x0, [sp, #40]
   193bc:	ldr	x30, [sp], #48
   193c0:	ret
   193c4:	str	x30, [sp, #-48]!
   193c8:	str	x0, [sp, #24]
   193cc:	ldr	x0, [sp, #24]
   193d0:	cmp	x0, #0x0
   193d4:	b.ne	193e0 <__sancov_default_options@@Base+0x3244>  // b.any
   193d8:	mov	x0, #0x0                   	// #0
   193dc:	b	1940c <__sancov_default_options@@Base+0x3270>
   193e0:	mov	w1, #0x2f                  	// #47
   193e4:	ldr	x0, [sp, #24]
   193e8:	bl	21b34 <__sanitizer_set_report_fd@@Base+0x293c>
   193ec:	str	x0, [sp, #40]
   193f0:	ldr	x0, [sp, #40]
   193f4:	cmp	x0, #0x0
   193f8:	b.eq	19408 <__sancov_default_options@@Base+0x326c>  // b.none
   193fc:	ldr	x0, [sp, #40]
   19400:	add	x0, x0, #0x1
   19404:	b	1940c <__sancov_default_options@@Base+0x3270>
   19408:	ldr	x0, [sp, #24]
   1940c:	ldr	x30, [sp], #48
   19410:	ret
   19414:	str	x30, [sp, #-64]!
   19418:	str	x0, [sp, #24]
   1941c:	str	x1, [sp, #16]
   19420:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   19424:	ldrb	w0, [x0, #60]
   19428:	eor	w0, w0, #0x1
   1942c:	and	w0, w0, #0xff
   19430:	cmp	w0, #0x0
   19434:	b.ne	19498 <__sancov_default_options@@Base+0x32fc>  // b.any
   19438:	add	x0, sp, #0x20
   1943c:	mov	x1, #0x400                 	// #1024
   19440:	bl	a584 <__lsan_do_recoverable_leak_check@@Base+0x3f8>
   19444:	ldr	x0, [sp, #16]
   19448:	cmp	x0, #0x0
   1944c:	b.eq	19458 <__sancov_default_options@@Base+0x32bc>  // b.none
   19450:	ldr	x0, [sp, #16]
   19454:	b	19464 <__sancov_default_options@@Base+0x32c8>
   19458:	adrp	x0, 7d000 <_Unwind_Backtrace@GCC_3.3>
   1945c:	add	x0, x0, #0x3d0
   19460:	ldr	x0, [x0]
   19464:	add	x4, sp, #0x20
   19468:	ldr	x3, [sp, #24]
   1946c:	mov	x2, x0
   19470:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   19474:	add	x1, x0, #0x390
   19478:	mov	x0, x4
   1947c:	bl	2a564 <OnPrint@@Base+0x5bc>
   19480:	add	x0, sp, #0x20
   19484:	bl	bc50 <__lsan_do_recoverable_leak_check@@Base+0x1ac4>
   19488:	bl	68b0 <__sanitizer_report_error_summary@plt>
   1948c:	add	x0, sp, #0x20
   19490:	bl	aab4 <__lsan_do_recoverable_leak_check@@Base+0x928>
   19494:	b	1949c <__sancov_default_options@@Base+0x3300>
   19498:	nop
   1949c:	ldr	x30, [sp], #64
   194a0:	ret
   194a4:	str	x30, [sp, #-64]!
   194a8:	str	x0, [sp, #24]
   194ac:	ldr	x0, [sp, #24]
   194b0:	cmp	x0, #0x0
   194b4:	b.eq	195c8 <__sancov_default_options@@Base+0x342c>  // b.none
   194b8:	ldr	x0, [sp, #24]
   194bc:	str	x0, [sp, #56]
   194c0:	ldr	x0, [sp, #24]
   194c4:	str	x0, [sp, #48]
   194c8:	ldr	x0, [sp, #56]
   194cc:	ldrb	w0, [x0]
   194d0:	cmp	w0, #0x0
   194d4:	b.eq	195bc <__sancov_default_options@@Base+0x3420>  // b.none
   194d8:	ldr	x0, [sp, #56]
   194dc:	str	x0, [sp, #40]
   194e0:	ldr	x0, [sp, #48]
   194e4:	str	x0, [sp, #32]
   194e8:	ldr	x1, [sp, #40]
   194ec:	ldr	x0, [sp, #32]
   194f0:	cmp	x1, x0
   194f4:	cset	w0, cc  // cc = lo, ul, last
   194f8:	and	w0, w0, #0xff
   194fc:	and	x0, x0, #0xff
   19500:	cmp	x0, #0x0
   19504:	b.eq	19528 <__sancov_default_options@@Base+0x338c>  // b.none
   19508:	ldr	x4, [sp, #32]
   1950c:	ldr	x3, [sp, #40]
   19510:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   19514:	add	x2, x0, #0x3a0
   19518:	mov	w1, #0x68                  	// #104
   1951c:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   19520:	add	x0, x0, #0x350
   19524:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   19528:	ldr	x0, [sp, #56]
   1952c:	ldrb	w0, [x0]
   19530:	cmp	w0, #0x1b
   19534:	b.ne	1957c <__sancov_default_options@@Base+0x33e0>  // b.any
   19538:	ldr	x0, [sp, #56]
   1953c:	add	x0, x0, #0x1
   19540:	ldrb	w0, [x0]
   19544:	cmp	w0, #0x5b
   19548:	b.ne	1957c <__sancov_default_options@@Base+0x33e0>  // b.any
   1954c:	mov	w1, #0x6d                  	// #109
   19550:	ldr	x0, [sp, #56]
   19554:	bl	21ae8 <__sanitizer_set_report_fd@@Base+0x28f0>
   19558:	str	x0, [sp, #56]
   1955c:	ldr	x0, [sp, #56]
   19560:	ldrb	w0, [x0]
   19564:	cmp	w0, #0x0
   19568:	b.eq	195b8 <__sancov_default_options@@Base+0x341c>  // b.none
   1956c:	ldr	x0, [sp, #56]
   19570:	add	x0, x0, #0x1
   19574:	str	x0, [sp, #56]
   19578:	b	195b4 <__sancov_default_options@@Base+0x3418>
   1957c:	ldr	x1, [sp, #56]
   19580:	ldr	x0, [sp, #48]
   19584:	cmp	x1, x0
   19588:	b.eq	1959c <__sancov_default_options@@Base+0x3400>  // b.none
   1958c:	ldr	x0, [sp, #56]
   19590:	ldrb	w1, [x0]
   19594:	ldr	x0, [sp, #48]
   19598:	strb	w1, [x0]
   1959c:	ldr	x0, [sp, #48]
   195a0:	add	x0, x0, #0x1
   195a4:	str	x0, [sp, #48]
   195a8:	ldr	x0, [sp, #56]
   195ac:	add	x0, x0, #0x1
   195b0:	str	x0, [sp, #56]
   195b4:	b	194c8 <__sancov_default_options@@Base+0x332c>
   195b8:	nop
   195bc:	ldr	x0, [sp, #48]
   195c0:	strb	wzr, [x0]
   195c4:	b	195cc <__sancov_default_options@@Base+0x3430>
   195c8:	nop
   195cc:	ldr	x30, [sp], #64
   195d0:	ret
   195d4:	str	x30, [sp, #-48]!
   195d8:	str	x0, [sp, #40]
   195dc:	str	x1, [sp, #32]
   195e0:	str	x2, [sp, #24]
   195e4:	ldr	x0, [sp, #40]
   195e8:	bl	1967c <__sancov_default_options@@Base+0x34e0>
   195ec:	ldr	x0, [sp, #32]
   195f0:	bl	218f8 <__sanitizer_set_report_fd@@Base+0x2700>
   195f4:	mov	x1, x0
   195f8:	ldr	x0, [sp, #40]
   195fc:	str	x1, [x0]
   19600:	ldr	x0, [sp, #40]
   19604:	ldr	x1, [sp, #24]
   19608:	str	x1, [x0, #8]
   1960c:	nop
   19610:	ldr	x30, [sp], #48
   19614:	ret
   19618:	str	x30, [sp, #-64]!
   1961c:	str	x0, [sp, #56]
   19620:	str	x1, [sp, #48]
   19624:	str	x2, [sp, #40]
   19628:	str	w3, [sp, #36]
   1962c:	str	x4, [sp, #24]
   19630:	strb	w5, [sp, #35]
   19634:	ldr	x2, [sp, #40]
   19638:	ldr	x1, [sp, #48]
   1963c:	ldr	x0, [sp, #56]
   19640:	bl	195d4 <__sancov_default_options@@Base+0x3438>
   19644:	ldr	x0, [sp, #56]
   19648:	ldr	w1, [sp, #36]
   1964c:	str	w1, [x0, #24]
   19650:	ldr	x0, [sp, #56]
   19654:	add	x0, x0, #0x1c
   19658:	mov	x2, #0x10                  	// #16
   1965c:	ldr	x1, [sp, #24]
   19660:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
   19664:	ldr	x0, [sp, #56]
   19668:	ldrb	w1, [sp, #35]
   1966c:	strb	w1, [x0, #44]
   19670:	nop
   19674:	ldr	x30, [sp], #64
   19678:	ret
   1967c:	str	x30, [sp, #-48]!
   19680:	str	x0, [sp, #24]
   19684:	ldr	x0, [sp, #24]
   19688:	ldr	x0, [x0]
   1968c:	mov	x1, #0x0                   	// #0
   19690:	bl	167e8 <__sancov_default_options@@Base+0x64c>
   19694:	ldr	x0, [sp, #24]
   19698:	str	xzr, [x0, #8]
   1969c:	ldr	x0, [sp, #24]
   196a0:	str	xzr, [x0, #16]
   196a4:	ldr	x0, [sp, #24]
   196a8:	str	xzr, [x0]
   196ac:	ldr	x0, [sp, #24]
   196b0:	str	wzr, [x0, #24]
   196b4:	ldr	x0, [sp, #24]
   196b8:	add	x0, x0, #0x1c
   196bc:	mov	x2, #0x10                  	// #16
   196c0:	mov	w1, #0x0                   	// #0
   196c4:	bl	21754 <__sanitizer_set_report_fd@@Base+0x255c>
   196c8:	ldr	x0, [sp, #24]
   196cc:	strb	wzr, [x0, #44]
   196d0:	ldr	x0, [sp, #24]
   196d4:	add	x0, x0, #0x30
   196d8:	bl	1a018 <__sanitizer_install_malloc_and_free_hooks@@Base+0xcc>
   196dc:	and	w0, w0, #0xff
   196e0:	eor	w0, w0, #0x1
   196e4:	and	w0, w0, #0xff
   196e8:	cmp	w0, #0x0
   196ec:	b.eq	1971c <__sancov_default_options@@Base+0x3580>  // b.none
   196f0:	ldr	x0, [sp, #24]
   196f4:	add	x0, x0, #0x30
   196f8:	bl	1a03c <__sanitizer_install_malloc_and_free_hooks@@Base+0xf0>
   196fc:	str	x0, [sp, #40]
   19700:	ldr	x0, [sp, #24]
   19704:	add	x0, x0, #0x30
   19708:	bl	1a054 <__sanitizer_install_malloc_and_free_hooks@@Base+0x108>
   1970c:	mov	x1, #0x0                   	// #0
   19710:	ldr	x0, [sp, #40]
   19714:	bl	167e8 <__sancov_default_options@@Base+0x64c>
   19718:	b	196d0 <__sancov_default_options@@Base+0x3534>
   1971c:	nop
   19720:	ldr	x30, [sp], #48
   19724:	ret
   19728:	stp	x19, x30, [sp, #-80]!
   1972c:	str	x0, [sp, #56]
   19730:	str	x1, [sp, #48]
   19734:	str	x2, [sp, #40]
   19738:	strb	w3, [sp, #39]
   1973c:	strb	w4, [sp, #38]
   19740:	str	x5, [sp, #24]
   19744:	mov	x2, #0x0                   	// #0
   19748:	mov	x1, #0x0                   	// #0
   1974c:	mov	x0, #0x30                  	// #48
   19750:	bl	16598 <__sancov_default_options@@Base+0x3fc>
   19754:	str	x0, [sp, #72]
   19758:	ldr	x0, [sp, #72]
   1975c:	mov	x1, x0
   19760:	mov	x0, #0x30                  	// #48
   19764:	bl	a908 <__lsan_do_recoverable_leak_check@@Base+0x77c>
   19768:	mov	x19, x0
   1976c:	ldr	x5, [sp, #24]
   19770:	ldrb	w4, [sp, #38]
   19774:	ldrb	w3, [sp, #39]
   19778:	ldr	x2, [sp, #40]
   1977c:	ldr	x1, [sp, #48]
   19780:	mov	x0, x19
   19784:	bl	19f6c <__sanitizer_install_malloc_and_free_hooks@@Base+0x20>
   19788:	str	x19, [sp, #64]
   1978c:	ldr	x0, [sp, #56]
   19790:	add	x0, x0, #0x30
   19794:	ldr	x1, [sp, #64]
   19798:	bl	1a108 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1bc>
   1979c:	ldrb	w0, [sp, #39]
   197a0:	cmp	w0, #0x0
   197a4:	b.eq	197c8 <__sancov_default_options@@Base+0x362c>  // b.none
   197a8:	ldr	x0, [sp, #56]
   197ac:	ldr	x0, [x0, #16]
   197b0:	ldr	x1, [sp, #40]
   197b4:	cmp	x1, x0
   197b8:	b.ls	197c8 <__sancov_default_options@@Base+0x362c>  // b.plast
   197bc:	ldr	x0, [sp, #56]
   197c0:	ldr	x1, [sp, #40]
   197c4:	str	x1, [x0, #16]
   197c8:	nop
   197cc:	ldp	x19, x30, [sp], #80
   197d0:	ret
   197d4:	str	x30, [sp, #-64]!
   197d8:	str	x0, [sp, #24]
   197dc:	str	x1, [sp, #16]
   197e0:	ldr	x0, [sp, #24]
   197e4:	bl	1a000 <__sanitizer_install_malloc_and_free_hooks@@Base+0xb4>
   197e8:	str	x0, [sp, #56]
   197ec:	ldr	x0, [sp, #56]
   197f0:	bl	1a1a0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x254>
   197f4:	str	x0, [sp, #40]
   197f8:	ldr	x0, [sp, #56]
   197fc:	bl	1a1c4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x278>
   19800:	str	x0, [sp, #32]
   19804:	add	x0, sp, #0x28
   19808:	ldr	x1, [sp, #32]
   1980c:	bl	1a1e4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x298>
   19810:	and	w0, w0, #0xff
   19814:	cmp	w0, #0x0
   19818:	b.eq	19864 <__sancov_default_options@@Base+0x36c8>  // b.none
   1981c:	add	x0, sp, #0x28
   19820:	bl	1a238 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2ec>
   19824:	str	x0, [sp, #48]
   19828:	ldr	x0, [sp, #48]
   1982c:	ldr	x0, [x0, #8]
   19830:	ldr	x1, [sp, #16]
   19834:	cmp	x1, x0
   19838:	b.cc	19858 <__sancov_default_options@@Base+0x36bc>  // b.lo, b.ul, b.last
   1983c:	ldr	x0, [sp, #48]
   19840:	ldr	x0, [x0, #16]
   19844:	ldr	x1, [sp, #16]
   19848:	cmp	x1, x0
   1984c:	b.cs	19858 <__sancov_default_options@@Base+0x36bc>  // b.hs, b.nlast
   19850:	mov	w0, #0x1                   	// #1
   19854:	b	19868 <__sancov_default_options@@Base+0x36cc>
   19858:	add	x0, sp, #0x28
   1985c:	bl	1a210 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2c4>
   19860:	b	19804 <__sancov_default_options@@Base+0x3668>
   19864:	mov	w0, #0x0                   	// #0
   19868:	ldr	x30, [sp], #64
   1986c:	ret
   19870:	stp	x19, x30, [sp, #-48]!
   19874:	str	x0, [sp, #24]
   19878:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   1987c:	ldr	x0, [x0, #128]
   19880:	cmp	x0, #0x0
   19884:	cset	w0, eq  // eq = none
   19888:	and	w0, w0, #0xff
   1988c:	cmp	w0, #0x0
   19890:	b.ne	198fc <__sancov_default_options@@Base+0x3760>  // b.any
   19894:	mov	w2, #0x1                   	// #1
   19898:	ldr	x1, [sp, #24]
   1989c:	adrp	x0, 1d1000 <__asan_cplus_demangle_builtin_types@@Base+0x154b40>
   198a0:	add	x0, x0, #0x9c0
   198a4:	bl	1a250 <__sanitizer_install_malloc_and_free_hooks@@Base+0x304>
   198a8:	mov	x1, x0
   198ac:	ldr	x0, [sp, #24]
   198b0:	add	x0, x0, x1
   198b4:	str	x0, [sp, #40]
   198b8:	ldr	x0, [sp, #40]
   198bc:	lsr	x19, x0, #20
   198c0:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   198c4:	ldr	x0, [x0, #128]
   198c8:	cmp	x19, x0
   198cc:	cset	w0, cs  // cs = hs, nlast
   198d0:	and	w0, w0, #0xff
   198d4:	and	x0, x0, #0xff
   198d8:	cmp	x0, #0x0
   198dc:	cset	w0, ne  // ne = any
   198e0:	and	w0, w0, #0xff
   198e4:	cmp	w0, #0x0
   198e8:	b.eq	19900 <__sancov_default_options@@Base+0x3764>  // b.none
   198ec:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   198f0:	add	x0, x0, #0x3b0
   198f4:	bl	1e860 <__sanitizer_cov_pcs_init@@Base+0x37c4>
   198f8:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   198fc:	nop
   19900:	ldp	x19, x30, [sp], #48
   19904:	ret
   19908:	str	x30, [sp, #-32]!
   1990c:	str	x0, [sp, #24]
   19910:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   19914:	ldr	x0, [x0, #128]
   19918:	cmp	x0, #0x0
   1991c:	cset	w0, eq  // eq = none
   19920:	and	w0, w0, #0xff
   19924:	cmp	w0, #0x0
   19928:	b.ne	19944 <__sancov_default_options@@Base+0x37a8>  // b.any
   1992c:	mov	w2, #0x1                   	// #1
   19930:	ldr	x1, [sp, #24]
   19934:	adrp	x0, 1d1000 <__asan_cplus_demangle_builtin_types@@Base+0x154b40>
   19938:	add	x0, x0, #0x9c0
   1993c:	bl	1a288 <__sanitizer_install_malloc_and_free_hooks@@Base+0x33c>
   19940:	b	19948 <__sancov_default_options@@Base+0x37ac>
   19944:	nop
   19948:	ldr	x30, [sp], #32
   1994c:	ret
   19950:	str	x30, [sp, #-80]!
   19954:	str	x0, [sp, #24]
   19958:	str	x1, [sp, #16]
   1995c:	ldr	x0, [sp, #16]
   19960:	cmp	x0, #0x0
   19964:	b.eq	19978 <__sancov_default_options@@Base+0x37dc>  // b.none
   19968:	ldr	x0, [sp, #16]
   1996c:	ldrb	w0, [x0]
   19970:	cmp	w0, #0x0
   19974:	b.ne	19980 <__sancov_default_options@@Base+0x37e4>  // b.any
   19978:	mov	w0, #0x0                   	// #0
   1997c:	b	19b68 <__sancov_default_options@@Base+0x39cc>
   19980:	strb	wzr, [sp, #79]
   19984:	ldr	x0, [sp, #24]
   19988:	cmp	x0, #0x0
   1998c:	b.eq	199b4 <__sancov_default_options@@Base+0x3818>  // b.none
   19990:	ldr	x0, [sp, #24]
   19994:	ldrb	w0, [x0]
   19998:	cmp	w0, #0x5e
   1999c:	b.ne	199b4 <__sancov_default_options@@Base+0x3818>  // b.any
   199a0:	mov	w0, #0x1                   	// #1
   199a4:	strb	w0, [sp, #79]
   199a8:	ldr	x0, [sp, #24]
   199ac:	add	x0, x0, #0x1
   199b0:	str	x0, [sp, #24]
   199b4:	strb	wzr, [sp, #78]
   199b8:	ldr	x0, [sp, #24]
   199bc:	cmp	x0, #0x0
   199c0:	b.eq	19b64 <__sancov_default_options@@Base+0x39c8>  // b.none
   199c4:	ldr	x0, [sp, #24]
   199c8:	ldrb	w0, [x0]
   199cc:	cmp	w0, #0x0
   199d0:	b.eq	19b64 <__sancov_default_options@@Base+0x39c8>  // b.none
   199d4:	ldr	x0, [sp, #24]
   199d8:	ldrb	w0, [x0]
   199dc:	cmp	w0, #0x2a
   199e0:	b.ne	19a00 <__sancov_default_options@@Base+0x3864>  // b.any
   199e4:	ldr	x0, [sp, #24]
   199e8:	add	x0, x0, #0x1
   199ec:	str	x0, [sp, #24]
   199f0:	strb	wzr, [sp, #79]
   199f4:	mov	w0, #0x1                   	// #1
   199f8:	strb	w0, [sp, #78]
   199fc:	b	19b60 <__sancov_default_options@@Base+0x39c4>
   19a00:	ldr	x0, [sp, #24]
   19a04:	ldrb	w0, [x0]
   19a08:	cmp	w0, #0x24
   19a0c:	b.ne	19a3c <__sancov_default_options@@Base+0x38a0>  // b.any
   19a10:	ldr	x0, [sp, #16]
   19a14:	ldrb	w0, [x0]
   19a18:	cmp	w0, #0x0
   19a1c:	b.eq	19a2c <__sancov_default_options@@Base+0x3890>  // b.none
   19a20:	ldrb	w0, [sp, #78]
   19a24:	cmp	w0, #0x0
   19a28:	b.eq	19a34 <__sancov_default_options@@Base+0x3898>  // b.none
   19a2c:	mov	w0, #0x1                   	// #1
   19a30:	b	19b68 <__sancov_default_options@@Base+0x39cc>
   19a34:	mov	w0, #0x0                   	// #0
   19a38:	b	19b68 <__sancov_default_options@@Base+0x39cc>
   19a3c:	ldr	x0, [sp, #16]
   19a40:	ldrb	w0, [x0]
   19a44:	cmp	w0, #0x0
   19a48:	b.ne	19a54 <__sancov_default_options@@Base+0x38b8>  // b.any
   19a4c:	mov	w0, #0x0                   	// #0
   19a50:	b	19b68 <__sancov_default_options@@Base+0x39cc>
   19a54:	mov	w1, #0x2a                  	// #42
   19a58:	ldr	x0, [sp, #24]
   19a5c:	bl	21a8c <__sanitizer_set_report_fd@@Base+0x2894>
   19a60:	str	x0, [sp, #64]
   19a64:	mov	w1, #0x24                  	// #36
   19a68:	ldr	x0, [sp, #24]
   19a6c:	bl	21a8c <__sanitizer_set_report_fd@@Base+0x2894>
   19a70:	str	x0, [sp, #56]
   19a74:	ldr	x0, [sp, #64]
   19a78:	cmp	x0, #0x0
   19a7c:	b.eq	19a9c <__sancov_default_options@@Base+0x3900>  // b.none
   19a80:	ldr	x0, [sp, #56]
   19a84:	cmp	x0, #0x0
   19a88:	b.eq	19aa4 <__sancov_default_options@@Base+0x3908>  // b.none
   19a8c:	ldr	x1, [sp, #56]
   19a90:	ldr	x0, [sp, #64]
   19a94:	cmp	x1, x0
   19a98:	b.cs	19aa4 <__sancov_default_options@@Base+0x3908>  // b.hs, b.nlast
   19a9c:	ldr	x0, [sp, #56]
   19aa0:	str	x0, [sp, #64]
   19aa4:	ldr	x0, [sp, #64]
   19aa8:	cmp	x0, #0x0
   19aac:	b.eq	19ab8 <__sancov_default_options@@Base+0x391c>  // b.none
   19ab0:	ldr	x0, [sp, #64]
   19ab4:	strb	wzr, [x0]
   19ab8:	ldr	x0, [sp, #16]
   19abc:	str	x0, [sp, #48]
   19ac0:	ldr	x1, [sp, #24]
   19ac4:	ldr	x0, [sp, #16]
   19ac8:	bl	21ef0 <__sanitizer_set_report_fd@@Base+0x2cf8>
   19acc:	str	x0, [sp, #40]
   19ad0:	ldr	x0, [sp, #24]
   19ad4:	bl	21bac <__sanitizer_set_report_fd@@Base+0x29b4>
   19ad8:	mov	x1, x0
   19adc:	ldr	x0, [sp, #40]
   19ae0:	add	x0, x0, x1
   19ae4:	str	x0, [sp, #16]
   19ae8:	ldr	x0, [sp, #64]
   19aec:	str	x0, [sp, #24]
   19af0:	ldr	x0, [sp, #64]
   19af4:	cmp	x0, #0x0
   19af8:	b.eq	19b20 <__sancov_default_options@@Base+0x3984>  // b.none
   19afc:	ldr	x1, [sp, #64]
   19b00:	ldr	x0, [sp, #56]
   19b04:	cmp	x1, x0
   19b08:	b.ne	19b14 <__sancov_default_options@@Base+0x3978>  // b.any
   19b0c:	mov	w0, #0x24                  	// #36
   19b10:	b	19b18 <__sancov_default_options@@Base+0x397c>
   19b14:	mov	w0, #0x2a                  	// #42
   19b18:	ldr	x1, [sp, #64]
   19b1c:	strb	w0, [x1]
   19b20:	ldr	x0, [sp, #40]
   19b24:	cmp	x0, #0x0
   19b28:	b.ne	19b34 <__sancov_default_options@@Base+0x3998>  // b.any
   19b2c:	mov	w0, #0x0                   	// #0
   19b30:	b	19b68 <__sancov_default_options@@Base+0x39cc>
   19b34:	ldrb	w0, [sp, #79]
   19b38:	cmp	w0, #0x0
   19b3c:	b.eq	19b58 <__sancov_default_options@@Base+0x39bc>  // b.none
   19b40:	ldr	x1, [sp, #40]
   19b44:	ldr	x0, [sp, #48]
   19b48:	cmp	x1, x0
   19b4c:	b.eq	19b58 <__sancov_default_options@@Base+0x39bc>  // b.none
   19b50:	mov	w0, #0x0                   	// #0
   19b54:	b	19b68 <__sancov_default_options@@Base+0x39cc>
   19b58:	strb	wzr, [sp, #79]
   19b5c:	strb	wzr, [sp, #78]
   19b60:	b	199b8 <__sancov_default_options@@Base+0x381c>
   19b64:	mov	w0, #0x1                   	// #1
   19b68:	ldr	x30, [sp], #80
   19b6c:	ret
   19b70:	adrp	x0, 1d2000 <__asan_cplus_demangle_builtin_types@@Base+0x155b40>
   19b74:	add	x0, x0, #0x9c8
   19b78:	ret
   19b7c:	str	x30, [sp, #-48]!
   19b80:	str	x0, [sp, #24]
   19b84:	str	x1, [sp, #16]
   19b88:	ldr	x1, [sp, #16]
   19b8c:	ldr	x0, [sp, #24]
   19b90:	bl	24814 <__sanitizer_set_report_fd@@Base+0x561c>
   19b94:	ldr	x0, [sp, #24]
   19b98:	bl	193c4 <__sancov_default_options@@Base+0x3228>
   19b9c:	str	x0, [sp, #40]
   19ba0:	ldr	x0, [sp, #40]
   19ba4:	bl	21bac <__sanitizer_set_report_fd@@Base+0x29b4>
   19ba8:	str	x0, [sp, #32]
   19bac:	ldr	x1, [sp, #40]
   19bb0:	ldr	x0, [sp, #24]
   19bb4:	cmp	x1, x0
   19bb8:	b.eq	19bdc <__sancov_default_options@@Base+0x3a40>  // b.none
   19bbc:	ldr	x2, [sp, #32]
   19bc0:	ldr	x1, [sp, #40]
   19bc4:	ldr	x0, [sp, #24]
   19bc8:	bl	2161c <__sanitizer_set_report_fd@@Base+0x2424>
   19bcc:	ldr	x1, [sp, #24]
   19bd0:	ldr	x0, [sp, #32]
   19bd4:	add	x0, x1, x0
   19bd8:	strb	wzr, [x0]
   19bdc:	ldr	x0, [sp, #32]
   19be0:	ldr	x30, [sp], #48
   19be4:	ret
   19be8:	str	x30, [sp, #-16]!
   19bec:	mov	x1, #0x1000                	// #4096
   19bf0:	adrp	x0, 1d2000 <__asan_cplus_demangle_builtin_types@@Base+0x155b40>
   19bf4:	add	x0, x0, #0x9c8
   19bf8:	bl	19b7c <__sancov_default_options@@Base+0x39e0>
   19bfc:	nop
   19c00:	ldr	x30, [sp], #16
   19c04:	ret
   19c08:	str	x30, [sp, #-16]!
   19c0c:	adrp	x0, 1d1000 <__asan_cplus_demangle_builtin_types@@Base+0x154b40>
   19c10:	add	x0, x0, #0x9c8
   19c14:	ldrb	w0, [x0]
   19c18:	cmp	w0, #0x0
   19c1c:	b.ne	19c44 <__sancov_default_options@@Base+0x3aa8>  // b.any
   19c20:	mov	x1, #0x1000                	// #4096
   19c24:	adrp	x0, 1d1000 <__asan_cplus_demangle_builtin_types@@Base+0x154b40>
   19c28:	add	x0, x0, #0x9c8
   19c2c:	bl	24738 <__sanitizer_set_report_fd@@Base+0x5540>
   19c30:	mov	x1, #0x1000                	// #4096
   19c34:	adrp	x0, 1d2000 <__asan_cplus_demangle_builtin_types@@Base+0x155b40>
   19c38:	add	x0, x0, #0x9c8
   19c3c:	bl	19b7c <__sancov_default_options@@Base+0x39e0>
   19c40:	b	19c48 <__sancov_default_options@@Base+0x3aac>
   19c44:	nop
   19c48:	ldr	x30, [sp], #16
   19c4c:	ret
   19c50:	str	x30, [sp, #-48]!
   19c54:	str	x0, [sp, #24]
   19c58:	str	x1, [sp, #16]
   19c5c:	bl	19c08 <__sancov_default_options@@Base+0x3a6c>
   19c60:	adrp	x0, 1d1000 <__asan_cplus_demangle_builtin_types@@Base+0x154b40>
   19c64:	add	x0, x0, #0x9c8
   19c68:	bl	21bac <__sanitizer_set_report_fd@@Base+0x29b4>
   19c6c:	str	x0, [sp, #40]
   19c70:	ldr	x0, [sp, #16]
   19c74:	sub	x0, x0, #0x1
   19c78:	ldr	x2, [sp, #40]
   19c7c:	ldr	x1, [sp, #40]
   19c80:	cmp	x2, x0
   19c84:	csel	x0, x1, x0, ls  // ls = plast
   19c88:	str	x0, [sp, #40]
   19c8c:	ldr	x0, [sp, #16]
   19c90:	cmp	x0, #0x0
   19c94:	b.ne	19ca0 <__sancov_default_options@@Base+0x3b04>  // b.any
   19c98:	mov	x0, #0x0                   	// #0
   19c9c:	b	19cc8 <__sancov_default_options@@Base+0x3b2c>
   19ca0:	ldr	x2, [sp, #40]
   19ca4:	adrp	x0, 1d1000 <__asan_cplus_demangle_builtin_types@@Base+0x154b40>
   19ca8:	add	x1, x0, #0x9c8
   19cac:	ldr	x0, [sp, #24]
   19cb0:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
   19cb4:	ldr	x1, [sp, #24]
   19cb8:	ldr	x0, [sp, #40]
   19cbc:	add	x0, x1, x0
   19cc0:	strb	wzr, [x0]
   19cc4:	ldr	x0, [sp, #40]
   19cc8:	ldr	x30, [sp], #48
   19ccc:	ret
   19cd0:	str	x30, [sp, #-32]!
   19cd4:	bl	238f8 <__sanitizer_set_report_fd@@Base+0x4700>
   19cd8:	str	x0, [sp, #16]
   19cdc:	ldr	x0, [sp, #16]
   19ce0:	cmp	x0, #0x0
   19ce4:	b.eq	19d58 <__sancov_default_options@@Base+0x3bbc>  // b.none
   19ce8:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   19cec:	add	x0, x0, #0x3e8
   19cf0:	bl	2a350 <OnPrint@@Base+0x3a8>
   19cf4:	str	xzr, [sp, #24]
   19cf8:	ldr	x0, [sp, #24]
   19cfc:	lsl	x0, x0, #3
   19d00:	ldr	x1, [sp, #16]
   19d04:	add	x0, x1, x0
   19d08:	ldr	x0, [x0]
   19d0c:	cmp	x0, #0x0
   19d10:	b.eq	19d48 <__sancov_default_options@@Base+0x3bac>  // b.none
   19d14:	ldr	x0, [sp, #24]
   19d18:	lsl	x0, x0, #3
   19d1c:	ldr	x1, [sp, #16]
   19d20:	add	x0, x1, x0
   19d24:	ldr	x0, [x0]
   19d28:	mov	x1, x0
   19d2c:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   19d30:	add	x0, x0, #0x3f8
   19d34:	bl	2a350 <OnPrint@@Base+0x3a8>
   19d38:	ldr	x0, [sp, #24]
   19d3c:	add	x0, x0, #0x1
   19d40:	str	x0, [sp, #24]
   19d44:	b	19cf8 <__sancov_default_options@@Base+0x3b5c>
   19d48:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   19d4c:	add	x0, x0, #0x400
   19d50:	bl	2a350 <OnPrint@@Base+0x3a8>
   19d54:	b	19d5c <__sancov_default_options@@Base+0x3bc0>
   19d58:	nop
   19d5c:	ldr	x30, [sp], #32
   19d60:	ret
   19d64:	str	x30, [sp, #-48]!
   19d68:	str	x0, [sp, #24]
   19d6c:	str	x1, [sp, #16]
   19d70:	str	wzr, [sp, #44]
   19d74:	ldr	w0, [sp, #44]
   19d78:	cmp	w0, #0x4
   19d7c:	b.gt	19dcc <__sancov_default_options@@Base+0x3c30>
   19d80:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   19d84:	add	x1, x0, #0x9c8
   19d88:	ldrsw	x0, [sp, #44]
   19d8c:	lsl	x0, x0, #4
   19d90:	add	x0, x1, x0
   19d94:	ldr	x0, [x0]
   19d98:	str	x0, [sp, #32]
   19d9c:	ldr	x0, [sp, #32]
   19da0:	cmp	x0, #0x0
   19da4:	b.eq	19dc8 <__sancov_default_options@@Base+0x3c2c>  // b.none
   19da8:	ldr	x2, [sp, #32]
   19dac:	ldr	x1, [sp, #16]
   19db0:	ldr	x0, [sp, #24]
   19db4:	blr	x2
   19db8:	ldr	w0, [sp, #44]
   19dbc:	add	w0, w0, #0x1
   19dc0:	str	w0, [sp, #44]
   19dc4:	b	19d74 <__sancov_default_options@@Base+0x3bd8>
   19dc8:	nop
   19dcc:	ldr	x30, [sp], #48
   19dd0:	ret
   19dd4:	str	x30, [sp, #-48]!
   19dd8:	str	x0, [sp, #24]
   19ddc:	str	wzr, [sp, #44]
   19de0:	ldr	w0, [sp, #44]
   19de4:	cmp	w0, #0x4
   19de8:	b.gt	19e34 <__sancov_default_options@@Base+0x3c98>
   19dec:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   19df0:	add	x1, x0, #0x9c8
   19df4:	ldrsw	x0, [sp, #44]
   19df8:	lsl	x0, x0, #4
   19dfc:	add	x0, x1, x0
   19e00:	ldr	x0, [x0, #8]
   19e04:	str	x0, [sp, #32]
   19e08:	ldr	x0, [sp, #32]
   19e0c:	cmp	x0, #0x0
   19e10:	b.eq	19e30 <__sancov_default_options@@Base+0x3c94>  // b.none
   19e14:	ldr	x1, [sp, #32]
   19e18:	ldr	x0, [sp, #24]
   19e1c:	blr	x1
   19e20:	ldr	w0, [sp, #44]
   19e24:	add	w0, w0, #0x1
   19e28:	str	w0, [sp, #44]
   19e2c:	b	19de0 <__sancov_default_options@@Base+0x3c44>
   19e30:	nop
   19e34:	ldr	x30, [sp], #48
   19e38:	ret
   19e3c:	sub	sp, sp, #0x20
   19e40:	str	x0, [sp, #8]
   19e44:	str	x1, [sp]
   19e48:	ldr	x0, [sp, #8]
   19e4c:	cmp	x0, #0x0
   19e50:	b.eq	19e60 <__sancov_default_options@@Base+0x3cc4>  // b.none
   19e54:	ldr	x0, [sp]
   19e58:	cmp	x0, #0x0
   19e5c:	b.ne	19e68 <__sancov_default_options@@Base+0x3ccc>  // b.any
   19e60:	mov	w0, #0x0                   	// #0
   19e64:	b	19ef0 <__sancov_default_options@@Base+0x3d54>
   19e68:	str	wzr, [sp, #28]
   19e6c:	ldr	w0, [sp, #28]
   19e70:	cmp	w0, #0x4
   19e74:	b.gt	19eec <__sancov_default_options@@Base+0x3d50>
   19e78:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   19e7c:	add	x1, x0, #0x9c8
   19e80:	ldrsw	x0, [sp, #28]
   19e84:	lsl	x0, x0, #4
   19e88:	add	x0, x1, x0
   19e8c:	ldr	x0, [x0]
   19e90:	cmp	x0, #0x0
   19e94:	b.ne	19edc <__sancov_default_options@@Base+0x3d40>  // b.any
   19e98:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   19e9c:	add	x1, x0, #0x9c8
   19ea0:	ldrsw	x0, [sp, #28]
   19ea4:	lsl	x0, x0, #4
   19ea8:	add	x0, x1, x0
   19eac:	ldr	x1, [sp, #8]
   19eb0:	str	x1, [x0]
   19eb4:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   19eb8:	add	x1, x0, #0x9c8
   19ebc:	ldrsw	x0, [sp, #28]
   19ec0:	lsl	x0, x0, #4
   19ec4:	add	x0, x1, x0
   19ec8:	ldr	x1, [sp]
   19ecc:	str	x1, [x0, #8]
   19ed0:	ldr	w0, [sp, #28]
   19ed4:	add	w0, w0, #0x1
   19ed8:	b	19ef0 <__sancov_default_options@@Base+0x3d54>
   19edc:	ldr	w0, [sp, #28]
   19ee0:	add	w0, w0, #0x1
   19ee4:	str	w0, [sp, #28]
   19ee8:	b	19e6c <__sancov_default_options@@Base+0x3cd0>
   19eec:	mov	w0, #0x0                   	// #0
   19ef0:	add	sp, sp, #0x20
   19ef4:	ret

0000000000019ef8 <__sanitizer_report_error_summary@@Base>:
   19ef8:	str	x30, [sp, #-32]!
   19efc:	str	x0, [sp, #24]
   19f00:	ldr	x1, [sp, #24]
   19f04:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   19f08:	add	x0, x0, #0x408
   19f0c:	bl	2a350 <OnPrint@@Base+0x3a8>
   19f10:	nop
   19f14:	ldr	x30, [sp], #32
   19f18:	ret

0000000000019f1c <__sanitizer_acquire_crash_state@@Base>:
   19f1c:	str	x30, [sp, #-16]!
   19f20:	mov	w2, #0x1                   	// #1
   19f24:	mov	w1, #0x1                   	// #1
   19f28:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   19f2c:	add	x0, x0, #0xa18
   19f30:	bl	f3bc <__sanitizer_get_allocated_size@@Base+0x85c>
   19f34:	and	w0, w0, #0xff
   19f38:	cmp	w0, #0x0
   19f3c:	cset	w0, eq  // eq = none
   19f40:	and	w0, w0, #0xff
   19f44:	ldr	x30, [sp], #16
   19f48:	ret

0000000000019f4c <__sanitizer_install_malloc_and_free_hooks@@Base>:
   19f4c:	str	x30, [sp, #-32]!
   19f50:	str	x0, [sp, #24]
   19f54:	str	x1, [sp, #16]
   19f58:	ldr	x1, [sp, #16]
   19f5c:	ldr	x0, [sp, #24]
   19f60:	bl	19e3c <__sancov_default_options@@Base+0x3ca0>
   19f64:	ldr	x30, [sp], #32
   19f68:	ret
   19f6c:	str	x30, [sp, #-64]!
   19f70:	str	x0, [sp, #56]
   19f74:	str	x1, [sp, #48]
   19f78:	str	x2, [sp, #40]
   19f7c:	strb	w3, [sp, #39]
   19f80:	strb	w4, [sp, #38]
   19f84:	str	x5, [sp, #24]
   19f88:	ldr	x0, [sp, #56]
   19f8c:	str	xzr, [x0]
   19f90:	ldr	x0, [sp, #56]
   19f94:	ldr	x1, [sp, #48]
   19f98:	str	x1, [x0, #8]
   19f9c:	ldr	x0, [sp, #56]
   19fa0:	ldr	x1, [sp, #40]
   19fa4:	str	x1, [x0, #16]
   19fa8:	ldr	x0, [sp, #56]
   19fac:	ldrb	w1, [sp, #39]
   19fb0:	strb	w1, [x0, #24]
   19fb4:	ldr	x0, [sp, #56]
   19fb8:	ldrb	w1, [sp, #38]
   19fbc:	strb	w1, [x0, #25]
   19fc0:	ldr	x0, [sp, #56]
   19fc4:	add	x3, x0, #0x1a
   19fc8:	ldr	x0, [sp, #24]
   19fcc:	cmp	x0, #0x0
   19fd0:	b.eq	19fdc <__sanitizer_install_malloc_and_free_hooks@@Base+0x90>  // b.none
   19fd4:	ldr	x0, [sp, #24]
   19fd8:	b	19fe4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x98>
   19fdc:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   19fe0:	add	x0, x0, #0x248
   19fe4:	mov	x2, #0x10                  	// #16
   19fe8:	mov	x1, x0
   19fec:	mov	x0, x3
   19ff0:	bl	21dfc <__sanitizer_set_report_fd@@Base+0x2c04>
   19ff4:	nop
   19ff8:	ldr	x30, [sp], #64
   19ffc:	ret
   1a000:	sub	sp, sp, #0x10
   1a004:	str	x0, [sp, #8]
   1a008:	ldr	x0, [sp, #8]
   1a00c:	add	x0, x0, #0x30
   1a010:	add	sp, sp, #0x10
   1a014:	ret
   1a018:	sub	sp, sp, #0x10
   1a01c:	str	x0, [sp, #8]
   1a020:	ldr	x0, [sp, #8]
   1a024:	ldr	x0, [x0]
   1a028:	cmp	x0, #0x0
   1a02c:	cset	w0, eq  // eq = none
   1a030:	and	w0, w0, #0xff
   1a034:	add	sp, sp, #0x10
   1a038:	ret
   1a03c:	sub	sp, sp, #0x10
   1a040:	str	x0, [sp, #8]
   1a044:	ldr	x0, [sp, #8]
   1a048:	ldr	x0, [x0, #8]
   1a04c:	add	sp, sp, #0x10
   1a050:	ret
   1a054:	str	x30, [sp, #-48]!
   1a058:	str	x0, [sp, #24]
   1a05c:	ldr	x0, [sp, #24]
   1a060:	bl	1a018 <__sanitizer_install_malloc_and_free_hooks@@Base+0xcc>
   1a064:	and	w0, w0, #0xff
   1a068:	eor	w0, w0, #0x1
   1a06c:	and	w0, w0, #0xff
   1a070:	and	x0, x0, #0xff
   1a074:	str	x0, [sp, #40]
   1a078:	str	xzr, [sp, #32]
   1a07c:	ldr	x1, [sp, #40]
   1a080:	ldr	x0, [sp, #32]
   1a084:	cmp	x1, x0
   1a088:	cset	w0, eq  // eq = none
   1a08c:	and	w0, w0, #0xff
   1a090:	and	x0, x0, #0xff
   1a094:	cmp	x0, #0x0
   1a098:	b.eq	1a0bc <__sanitizer_install_malloc_and_free_hooks@@Base+0x170>  // b.none
   1a09c:	ldr	x4, [sp, #32]
   1a0a0:	ldr	x3, [sp, #40]
   1a0a4:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1a0a8:	add	x2, x0, #0x468
   1a0ac:	mov	w1, #0x40                  	// #64
   1a0b0:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1a0b4:	add	x0, x0, #0x480
   1a0b8:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1a0bc:	ldr	x0, [sp, #24]
   1a0c0:	ldr	x0, [x0, #8]
   1a0c4:	ldr	x1, [x0]
   1a0c8:	ldr	x0, [sp, #24]
   1a0cc:	str	x1, [x0, #8]
   1a0d0:	ldr	x0, [sp, #24]
   1a0d4:	ldr	x0, [x0, #8]
   1a0d8:	cmp	x0, #0x0
   1a0dc:	b.ne	1a0e8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x19c>  // b.any
   1a0e0:	ldr	x0, [sp, #24]
   1a0e4:	str	xzr, [x0, #16]
   1a0e8:	ldr	x0, [sp, #24]
   1a0ec:	ldr	x0, [x0]
   1a0f0:	sub	x1, x0, #0x1
   1a0f4:	ldr	x0, [sp, #24]
   1a0f8:	str	x1, [x0]
   1a0fc:	nop
   1a100:	ldr	x30, [sp], #48
   1a104:	ret
   1a108:	str	x30, [sp, #-32]!
   1a10c:	str	x0, [sp, #24]
   1a110:	str	x1, [sp, #16]
   1a114:	ldr	x0, [sp, #24]
   1a118:	bl	1a018 <__sanitizer_install_malloc_and_free_hooks@@Base+0xcc>
   1a11c:	and	w0, w0, #0xff
   1a120:	cmp	w0, #0x0
   1a124:	b.eq	1a15c <__sanitizer_install_malloc_and_free_hooks@@Base+0x210>  // b.none
   1a128:	ldr	x0, [sp, #16]
   1a12c:	str	xzr, [x0]
   1a130:	ldr	x0, [sp, #24]
   1a134:	ldr	x1, [sp, #16]
   1a138:	str	x1, [x0, #16]
   1a13c:	ldr	x0, [sp, #24]
   1a140:	ldr	x1, [x0, #16]
   1a144:	ldr	x0, [sp, #24]
   1a148:	str	x1, [x0, #8]
   1a14c:	ldr	x0, [sp, #24]
   1a150:	mov	x1, #0x1                   	// #1
   1a154:	str	x1, [x0]
   1a158:	b	1a194 <__sanitizer_install_malloc_and_free_hooks@@Base+0x248>
   1a15c:	ldr	x0, [sp, #16]
   1a160:	str	xzr, [x0]
   1a164:	ldr	x0, [sp, #24]
   1a168:	ldr	x0, [x0, #16]
   1a16c:	ldr	x1, [sp, #16]
   1a170:	str	x1, [x0]
   1a174:	ldr	x0, [sp, #24]
   1a178:	ldr	x1, [sp, #16]
   1a17c:	str	x1, [x0, #16]
   1a180:	ldr	x0, [sp, #24]
   1a184:	ldr	x0, [x0]
   1a188:	add	x1, x0, #0x1
   1a18c:	ldr	x0, [sp, #24]
   1a190:	str	x1, [x0]
   1a194:	nop
   1a198:	ldr	x30, [sp], #32
   1a19c:	ret
   1a1a0:	str	x30, [sp, #-48]!
   1a1a4:	str	x0, [sp, #24]
   1a1a8:	ldr	x0, [sp, #24]
   1a1ac:	ldr	x1, [x0, #8]
   1a1b0:	add	x0, sp, #0x28
   1a1b4:	bl	1a2c4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x378>
   1a1b8:	ldr	x0, [sp, #40]
   1a1bc:	ldr	x30, [sp], #48
   1a1c0:	ret
   1a1c4:	str	x30, [sp, #-48]!
   1a1c8:	str	x0, [sp, #24]
   1a1cc:	add	x0, sp, #0x28
   1a1d0:	mov	x1, #0x0                   	// #0
   1a1d4:	bl	1a2c4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x378>
   1a1d8:	ldr	x0, [sp, #40]
   1a1dc:	ldr	x30, [sp], #48
   1a1e0:	ret
   1a1e4:	sub	sp, sp, #0x10
   1a1e8:	str	x0, [sp, #8]
   1a1ec:	str	x1, [sp]
   1a1f0:	ldr	x0, [sp, #8]
   1a1f4:	ldr	x1, [x0]
   1a1f8:	ldr	x0, [sp]
   1a1fc:	cmp	x1, x0
   1a200:	cset	w0, ne  // ne = any
   1a204:	and	w0, w0, #0xff
   1a208:	add	sp, sp, #0x10
   1a20c:	ret
   1a210:	sub	sp, sp, #0x10
   1a214:	str	x0, [sp, #8]
   1a218:	ldr	x0, [sp, #8]
   1a21c:	ldr	x0, [x0]
   1a220:	ldr	x1, [x0]
   1a224:	ldr	x0, [sp, #8]
   1a228:	str	x1, [x0]
   1a22c:	ldr	x0, [sp, #8]
   1a230:	add	sp, sp, #0x10
   1a234:	ret
   1a238:	sub	sp, sp, #0x10
   1a23c:	str	x0, [sp, #8]
   1a240:	ldr	x0, [sp, #8]
   1a244:	ldr	x0, [x0]
   1a248:	add	sp, sp, #0x10
   1a24c:	ret
   1a250:	sub	sp, sp, #0x20
   1a254:	str	x0, [sp, #24]
   1a258:	str	x1, [sp, #16]
   1a25c:	str	w2, [sp, #12]
   1a260:	ldr	x0, [sp, #24]
   1a264:	ldr	x1, [sp, #16]
   1a268:	ldxr	x2, [x0]
   1a26c:	add	x3, x2, x1
   1a270:	stlxr	w4, x3, [x0]
   1a274:	cbnz	w4, 1a268 <__sanitizer_install_malloc_and_free_hooks@@Base+0x31c>
   1a278:	dmb	ish
   1a27c:	mov	x0, x2
   1a280:	add	sp, sp, #0x20
   1a284:	ret
   1a288:	sub	sp, sp, #0x20
   1a28c:	str	x0, [sp, #24]
   1a290:	str	x1, [sp, #16]
   1a294:	str	w2, [sp, #12]
   1a298:	ldr	x0, [sp, #24]
   1a29c:	ldr	x1, [sp, #16]
   1a2a0:	neg	x1, x1
   1a2a4:	ldxr	x2, [x0]
   1a2a8:	add	x3, x2, x1
   1a2ac:	stlxr	w4, x3, [x0]
   1a2b0:	cbnz	w4, 1a2a4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x358>
   1a2b4:	dmb	ish
   1a2b8:	mov	x0, x2
   1a2bc:	add	sp, sp, #0x20
   1a2c0:	ret
   1a2c4:	sub	sp, sp, #0x10
   1a2c8:	str	x0, [sp, #8]
   1a2cc:	str	x1, [sp]
   1a2d0:	ldr	x0, [sp, #8]
   1a2d4:	ldr	x1, [sp]
   1a2d8:	str	x1, [x0]
   1a2dc:	nop
   1a2e0:	add	sp, sp, #0x10
   1a2e4:	ret
   1a2e8:	str	x30, [sp, #-48]!
   1a2ec:	str	x0, [sp, #24]
   1a2f0:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   1a2f4:	add	x0, x0, #0xa20
   1a2f8:	ldr	x0, [x0]
   1a2fc:	str	x0, [sp, #40]
   1a300:	str	xzr, [sp, #32]
   1a304:	ldr	x1, [sp, #40]
   1a308:	ldr	x0, [sp, #32]
   1a30c:	cmp	x1, x0
   1a310:	cset	w0, ne  // ne = any
   1a314:	and	w0, w0, #0xff
   1a318:	and	x0, x0, #0xff
   1a31c:	cmp	x0, #0x0
   1a320:	b.eq	1a344 <__sanitizer_install_malloc_and_free_hooks@@Base+0x3f8>  // b.none
   1a324:	ldr	x4, [sp, #32]
   1a328:	ldr	x3, [sp, #40]
   1a32c:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1a330:	add	x2, x0, #0x5d8
   1a334:	mov	w1, #0x16                  	// #22
   1a338:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1a33c:	add	x0, x0, #0x608
   1a340:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1a344:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   1a348:	add	x0, x0, #0xa20
   1a34c:	ldr	x1, [sp, #24]
   1a350:	str	x1, [x0]
   1a354:	nop
   1a358:	ldr	x30, [sp], #48
   1a35c:	ret
   1a360:	mov	x0, #0x0                   	// #0
   1a364:	ret
   1a368:	str	x30, [sp, #-112]!
   1a36c:	str	x0, [sp, #24]
   1a370:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   1a374:	ldr	x0, [x0, #136]
   1a378:	str	x0, [sp, #72]
   1a37c:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   1a380:	ldr	x0, [x0, #144]
   1a384:	str	x0, [sp, #64]
   1a388:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   1a38c:	ldrb	w0, [x0, #152]
   1a390:	strb	w0, [sp, #63]
   1a394:	str	xzr, [sp, #104]
   1a398:	str	xzr, [sp, #96]
   1a39c:	strb	wzr, [sp, #95]
   1a3a0:	str	xzr, [sp, #80]
   1a3a4:	mov	w0, #0x64                  	// #100
   1a3a8:	bl	27e30 <__sanitizer_set_report_fd@@Base+0x8c38>
   1a3ac:	bl	26160 <__sanitizer_set_report_fd@@Base+0x6f68>
   1a3b0:	lsr	x0, x0, #20
   1a3b4:	str	x0, [sp, #48]
   1a3b8:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
   1a3bc:	cmp	w0, #0x0
   1a3c0:	cset	w0, ne  // ne = any
   1a3c4:	and	w0, w0, #0xff
   1a3c8:	cmp	w0, #0x0
   1a3cc:	b.eq	1a4b4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x568>  // b.none
   1a3d0:	ldr	x1, [sp, #104]
   1a3d4:	mov	x0, x1
   1a3d8:	lsl	x0, x0, #1
   1a3dc:	add	x0, x0, x1
   1a3e0:	lsl	x0, x0, #2
   1a3e4:	sub	x1, x0, x1
   1a3e8:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   1a3ec:	movk	x0, #0xcccd
   1a3f0:	umulh	x0, x1, x0
   1a3f4:	lsr	x0, x0, #3
   1a3f8:	ldr	x1, [sp, #48]
   1a3fc:	cmp	x1, x0
   1a400:	b.ls	1a42c <__sanitizer_install_malloc_and_free_hooks@@Base+0x4e0>  // b.plast
   1a404:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   1a408:	ldr	x0, [x0, #4008]
   1a40c:	ldr	x0, [x0]
   1a410:	ldr	x2, [sp, #48]
   1a414:	mov	x1, x0
   1a418:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1a41c:	add	x0, x0, #0x650
   1a420:	bl	2a350 <OnPrint@@Base+0x3a8>
   1a424:	ldr	x0, [sp, #48]
   1a428:	str	x0, [sp, #104]
   1a42c:	bl	2b7fc <OnPrint@@Base+0x1854>
   1a430:	str	x0, [sp, #40]
   1a434:	ldr	x0, [sp, #40]
   1a438:	cmp	x0, #0x0
   1a43c:	b.eq	1a4b4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x568>  // b.none
   1a440:	ldr	x1, [sp, #96]
   1a444:	mov	x0, x1
   1a448:	lsl	x0, x0, #1
   1a44c:	add	x0, x0, x1
   1a450:	lsl	x0, x0, #2
   1a454:	sub	x1, x0, x1
   1a458:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   1a45c:	movk	x0, #0xcccd
   1a460:	umulh	x0, x1, x0
   1a464:	lsr	x1, x0, #3
   1a468:	ldr	x0, [sp, #40]
   1a46c:	ldr	x0, [x0, #8]
   1a470:	cmp	x1, x0
   1a474:	b.cs	1a4b4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x568>  // b.hs, b.nlast
   1a478:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   1a47c:	ldr	x0, [x0, #4008]
   1a480:	ldr	x1, [x0]
   1a484:	ldr	x0, [sp, #40]
   1a488:	ldr	x2, [x0]
   1a48c:	ldr	x0, [sp, #40]
   1a490:	ldr	x0, [x0, #8]
   1a494:	lsr	x0, x0, #20
   1a498:	mov	x3, x0
   1a49c:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1a4a0:	add	x0, x0, #0x660
   1a4a4:	bl	2a350 <OnPrint@@Base+0x3a8>
   1a4a8:	ldr	x0, [sp, #40]
   1a4ac:	ldr	x0, [x0, #8]
   1a4b0:	str	x0, [sp, #96]
   1a4b4:	ldr	x0, [sp, #72]
   1a4b8:	cmp	x0, #0x0
   1a4bc:	b.eq	1a4fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x5b0>  // b.none
   1a4c0:	ldr	x1, [sp, #72]
   1a4c4:	ldr	x0, [sp, #48]
   1a4c8:	cmp	x1, x0
   1a4cc:	b.cs	1a4fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x5b0>  // b.hs, b.nlast
   1a4d0:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   1a4d4:	ldr	x0, [x0, #4008]
   1a4d8:	ldr	x0, [x0]
   1a4dc:	ldr	x3, [sp, #48]
   1a4e0:	ldr	x2, [sp, #72]
   1a4e4:	mov	x1, x0
   1a4e8:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1a4ec:	add	x0, x0, #0x690
   1a4f0:	bl	2a3fc <OnPrint@@Base+0x454>
   1a4f4:	bl	276c4 <__sanitizer_set_report_fd@@Base+0x84cc>
   1a4f8:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   1a4fc:	ldr	x0, [sp, #64]
   1a500:	cmp	x0, #0x0
   1a504:	b.eq	1a5cc <__sanitizer_install_malloc_and_free_hooks@@Base+0x680>  // b.none
   1a508:	ldr	x1, [sp, #64]
   1a50c:	ldr	x0, [sp, #48]
   1a510:	cmp	x1, x0
   1a514:	b.cs	1a584 <__sanitizer_install_malloc_and_free_hooks@@Base+0x638>  // b.hs, b.nlast
   1a518:	ldrb	w0, [sp, #95]
   1a51c:	eor	w0, w0, #0x1
   1a520:	and	w0, w0, #0xff
   1a524:	cmp	w0, #0x0
   1a528:	b.eq	1a584 <__sanitizer_install_malloc_and_free_hooks@@Base+0x638>  // b.none
   1a52c:	mov	w0, #0x1                   	// #1
   1a530:	strb	w0, [sp, #95]
   1a534:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   1a538:	ldr	x0, [x0, #4008]
   1a53c:	ldr	x0, [x0]
   1a540:	ldr	x3, [sp, #48]
   1a544:	ldr	x2, [sp, #64]
   1a548:	mov	x1, x0
   1a54c:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1a550:	add	x0, x0, #0x6c0
   1a554:	bl	2a3fc <OnPrint@@Base+0x454>
   1a558:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   1a55c:	add	x0, x0, #0xa20
   1a560:	ldr	x0, [x0]
   1a564:	cmp	x0, #0x0
   1a568:	b.eq	1a5cc <__sanitizer_install_malloc_and_free_hooks@@Base+0x680>  // b.none
   1a56c:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   1a570:	add	x0, x0, #0xa20
   1a574:	ldr	x1, [x0]
   1a578:	mov	w0, #0x1                   	// #1
   1a57c:	blr	x1
   1a580:	b	1a5cc <__sanitizer_install_malloc_and_free_hooks@@Base+0x680>
   1a584:	ldr	x1, [sp, #64]
   1a588:	ldr	x0, [sp, #48]
   1a58c:	cmp	x1, x0
   1a590:	b.cc	1a5cc <__sanitizer_install_malloc_and_free_hooks@@Base+0x680>  // b.lo, b.ul, b.last
   1a594:	ldrb	w0, [sp, #95]
   1a598:	cmp	w0, #0x0
   1a59c:	b.eq	1a5cc <__sanitizer_install_malloc_and_free_hooks@@Base+0x680>  // b.none
   1a5a0:	strb	wzr, [sp, #95]
   1a5a4:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   1a5a8:	add	x0, x0, #0xa20
   1a5ac:	ldr	x0, [x0]
   1a5b0:	cmp	x0, #0x0
   1a5b4:	b.eq	1a5cc <__sanitizer_install_malloc_and_free_hooks@@Base+0x680>  // b.none
   1a5b8:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   1a5bc:	add	x0, x0, #0xa20
   1a5c0:	ldr	x1, [x0]
   1a5c4:	mov	w0, #0x0                   	// #0
   1a5c8:	blr	x1
   1a5cc:	ldrb	w0, [sp, #63]
   1a5d0:	cmp	w0, #0x0
   1a5d4:	b.eq	1a3a4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x458>  // b.none
   1a5d8:	ldr	d0, [sp, #48]
   1a5dc:	ucvtf	d1, d0
   1a5e0:	ldr	d0, [sp, #80]
   1a5e4:	ucvtf	d0, d0
   1a5e8:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1a5ec:	ldr	d2, [x0, #1992]
   1a5f0:	fmul	d0, d0, d2
   1a5f4:	fcmpe	d1, d0
   1a5f8:	b.le	1a620 <__sanitizer_install_malloc_and_free_hooks@@Base+0x6d4>
   1a5fc:	ldr	x1, [sp, #48]
   1a600:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1a604:	add	x0, x0, #0x6f0
   1a608:	bl	2a350 <OnPrint@@Base+0x3a8>
   1a60c:	mov	x1, #0x14                  	// #20
   1a610:	mov	x0, #0x5a                  	// #90
   1a614:	bl	6f60 <__sanitizer_print_memory_profile@plt>
   1a618:	ldr	x0, [sp, #48]
   1a61c:	str	x0, [sp, #80]
   1a620:	b	1a3a4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x458>
   1a624:	str	x30, [sp, #-80]!
   1a628:	str	x0, [sp, #24]
   1a62c:	add	x0, sp, #0x20
   1a630:	mov	x1, #0x10000               	// #65536
   1a634:	bl	a584 <__lsan_do_recoverable_leak_check@@Base+0x3f8>
   1a638:	add	x3, sp, #0x20
   1a63c:	ldr	x2, [sp, #24]
   1a640:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1a644:	add	x1, x0, #0x710
   1a648:	mov	x0, x3
   1a64c:	bl	2a564 <OnPrint@@Base+0x5bc>
   1a650:	add	x0, sp, #0x20
   1a654:	bl	bc50 <__lsan_do_recoverable_leak_check@@Base+0x1ac4>
   1a658:	str	x0, [sp, #72]
   1a65c:	mov	w1, #0xa                   	// #10
   1a660:	ldr	x0, [sp, #72]
   1a664:	bl	21a8c <__sanitizer_set_report_fd@@Base+0x2894>
   1a668:	str	x0, [sp, #64]
   1a66c:	ldr	x0, [sp, #64]
   1a670:	cmp	x0, #0x0
   1a674:	cset	w0, ne  // ne = any
   1a678:	and	w0, w0, #0xff
   1a67c:	cmp	w0, #0x0
   1a680:	b.eq	1a6a4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x758>  // b.none
   1a684:	ldr	x0, [sp, #64]
   1a688:	strb	wzr, [x0]
   1a68c:	ldr	x0, [sp, #72]
   1a690:	bl	2636c <__sanitizer_set_report_fd@@Base+0x7174>
   1a694:	ldr	x0, [sp, #64]
   1a698:	add	x0, x0, #0x1
   1a69c:	str	x0, [sp, #72]
   1a6a0:	b	1a65c <__sanitizer_install_malloc_and_free_hooks@@Base+0x710>
   1a6a4:	ldr	x0, [sp, #72]
   1a6a8:	ldrb	w0, [x0]
   1a6ac:	cmp	w0, #0x0
   1a6b0:	b.eq	1a6bc <__sanitizer_install_malloc_and_free_hooks@@Base+0x770>  // b.none
   1a6b4:	ldr	x0, [sp, #72]
   1a6b8:	bl	2636c <__sanitizer_set_report_fd@@Base+0x7174>
   1a6bc:	add	x0, sp, #0x20
   1a6c0:	bl	aab4 <__lsan_do_recoverable_leak_check@@Base+0x928>
   1a6c4:	nop
   1a6c8:	ldr	x30, [sp], #80
   1a6cc:	ret
   1a6d0:	str	x30, [sp, #-16]!
   1a6d4:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   1a6d8:	ldr	x0, [x0, #136]
   1a6dc:	cmp	x0, #0x0
   1a6e0:	b.ne	1a714 <__sanitizer_install_malloc_and_free_hooks@@Base+0x7c8>  // b.any
   1a6e4:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   1a6e8:	ldr	x0, [x0, #144]
   1a6ec:	cmp	x0, #0x0
   1a6f0:	b.ne	1a714 <__sanitizer_install_malloc_and_free_hooks@@Base+0x7c8>  // b.any
   1a6f4:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   1a6f8:	ldrb	w0, [x0, #152]
   1a6fc:	eor	w0, w0, #0x1
   1a700:	and	w0, w0, #0xff
   1a704:	cmp	w0, #0x0
   1a708:	b.eq	1a714 <__sanitizer_install_malloc_and_free_hooks@@Base+0x7c8>  // b.none
   1a70c:	mov	w0, #0x1                   	// #1
   1a710:	b	1a718 <__sanitizer_install_malloc_and_free_hooks@@Base+0x7cc>
   1a714:	mov	w0, #0x0                   	// #0
   1a718:	cmp	w0, #0x0
   1a71c:	b.ne	1a744 <__sanitizer_install_malloc_and_free_hooks@@Base+0x7f8>  // b.any
   1a720:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   1a724:	ldr	x0, [x0, #3888]
   1a728:	cmp	x0, #0x0
   1a72c:	b.eq	1a74c <__sanitizer_install_malloc_and_free_hooks@@Base+0x800>  // b.none
   1a730:	mov	x1, #0x0                   	// #0
   1a734:	adrp	x0, 1a000 <__sanitizer_install_malloc_and_free_hooks@@Base+0xb4>
   1a738:	add	x0, x0, #0x368
   1a73c:	bl	24ddc <__sanitizer_set_report_fd@@Base+0x5be4>
   1a740:	b	1a750 <__sanitizer_install_malloc_and_free_hooks@@Base+0x804>
   1a744:	nop
   1a748:	b	1a750 <__sanitizer_install_malloc_and_free_hooks@@Base+0x804>
   1a74c:	nop
   1a750:	ldr	x30, [sp], #16
   1a754:	ret
   1a758:	sub	sp, sp, #0x10
   1a75c:	str	x0, [sp, #8]
   1a760:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   1a764:	add	x0, x0, #0xa28
   1a768:	ldr	x1, [sp, #8]
   1a76c:	str	x1, [x0]
   1a770:	nop
   1a774:	add	sp, sp, #0x10
   1a778:	ret

000000000001a77c <__sanitizer_sandbox_on_notify@@Base>:
   1a77c:	str	x30, [sp, #-32]!
   1a780:	str	x0, [sp, #24]
   1a784:	ldr	x0, [sp, #24]
   1a788:	bl	283e4 <__sanitizer_set_report_fd@@Base+0x91ec>
   1a78c:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   1a790:	add	x0, x0, #0xa28
   1a794:	ldr	x0, [x0]
   1a798:	cmp	x0, #0x0
   1a79c:	b.eq	1a7b0 <__sanitizer_sandbox_on_notify@@Base+0x34>  // b.none
   1a7a0:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   1a7a4:	add	x0, x0, #0xa28
   1a7a8:	ldr	x0, [x0]
   1a7ac:	blr	x0
   1a7b0:	nop
   1a7b4:	ldr	x30, [sp], #32
   1a7b8:	ret
   1a7bc:	str	x30, [sp, #-48]!
   1a7c0:	str	x0, [sp, #24]
   1a7c4:	add	x0, sp, #0x28
   1a7c8:	mov	x2, x0
   1a7cc:	mov	w1, #0x1                   	// #1
   1a7d0:	ldr	x0, [sp, #24]
   1a7d4:	bl	270a0 <__sanitizer_set_report_fd@@Base+0x7ea8>
   1a7d8:	str	w0, [sp, #44]
   1a7dc:	ldr	w0, [sp, #44]
   1a7e0:	cmn	w0, #0x1
   1a7e4:	b.ne	1a800 <__sanitizer_sandbox_on_notify@@Base+0x84>  // b.any
   1a7e8:	ldr	w0, [sp, #40]
   1a7ec:	mov	w2, w0
   1a7f0:	ldr	x1, [sp, #24]
   1a7f4:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1a7f8:	add	x0, x0, #0x8b8
   1a7fc:	bl	2a3fc <OnPrint@@Base+0x454>
   1a800:	ldr	w0, [sp, #44]
   1a804:	ldr	x30, [sp], #48
   1a808:	ret
   1a80c:	stp	x19, x30, [sp, #-64]!
   1a810:	str	x0, [sp, #40]
   1a814:	str	x1, [sp, #32]
   1a818:	str	x2, [sp, #24]
   1a81c:	ldr	x0, [sp, #32]
   1a820:	str	x0, [sp, #56]
   1a824:	str	xzr, [sp, #48]
   1a828:	ldr	x1, [sp, #56]
   1a82c:	ldr	x0, [sp, #48]
   1a830:	cmp	x1, x0
   1a834:	cset	w0, eq  // eq = none
   1a838:	and	w0, w0, #0xff
   1a83c:	and	x0, x0, #0xff
   1a840:	cmp	x0, #0x0
   1a844:	b.eq	1a868 <__sanitizer_sandbox_on_notify@@Base+0xec>  // b.none
   1a848:	ldr	x4, [sp, #48]
   1a84c:	ldr	x3, [sp, #56]
   1a850:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1a854:	add	x2, x0, #0x8f8
   1a858:	mov	w1, #0x28                  	// #40
   1a85c:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1a860:	add	x0, x0, #0x908
   1a864:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1a868:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   1a86c:	ldr	x19, [x0, #168]
   1a870:	bl	23c68 <__sanitizer_set_report_fd@@Base+0x4a70>
   1a874:	ldr	x6, [sp, #24]
   1a878:	mov	x5, x0
   1a87c:	ldr	x4, [sp, #32]
   1a880:	mov	x3, x19
   1a884:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1a888:	add	x2, x0, #0x958
   1a88c:	mov	x1, #0x1000                	// #4096
   1a890:	ldr	x0, [sp, #40]
   1a894:	bl	2a4a8 <OnPrint@@Base+0x500>
   1a898:	nop
   1a89c:	ldp	x19, x30, [sp], #64
   1a8a0:	ret
   1a8a4:	str	x30, [sp, #-64]!
   1a8a8:	str	x0, [sp, #40]
   1a8ac:	str	x1, [sp, #32]
   1a8b0:	str	x2, [sp, #24]
   1a8b4:	str	x3, [sp, #16]
   1a8b8:	ldr	x0, [sp, #32]
   1a8bc:	bl	193c4 <__sancov_default_options@@Base+0x3228>
   1a8c0:	mov	x1, x0
   1a8c4:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1a8c8:	add	x2, x0, #0x968
   1a8cc:	ldr	x0, [sp, #40]
   1a8d0:	bl	1a80c <__sanitizer_sandbox_on_notify@@Base+0x90>
   1a8d4:	ldr	x0, [sp, #40]
   1a8d8:	bl	1a7bc <__sanitizer_sandbox_on_notify@@Base+0x40>
   1a8dc:	str	w0, [sp, #60]
   1a8e0:	mov	x4, #0x0                   	// #0
   1a8e4:	mov	x3, #0x0                   	// #0
   1a8e8:	mov	x2, #0x8                   	// #8
   1a8ec:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1a8f0:	add	x1, x0, #0x8b0
   1a8f4:	ldr	w0, [sp, #60]
   1a8f8:	bl	271c4 <__sanitizer_set_report_fd@@Base+0x7fcc>
   1a8fc:	ldr	x0, [sp, #16]
   1a900:	lsl	x0, x0, #3
   1a904:	mov	x4, #0x0                   	// #0
   1a908:	mov	x3, #0x0                   	// #0
   1a90c:	mov	x2, x0
   1a910:	ldr	x1, [sp, #24]
   1a914:	ldr	w0, [sp, #60]
   1a918:	bl	271c4 <__sanitizer_set_report_fd@@Base+0x7fcc>
   1a91c:	ldr	w0, [sp, #60]
   1a920:	bl	27138 <__sanitizer_set_report_fd@@Base+0x7f40>
   1a924:	ldr	x2, [sp, #16]
   1a928:	ldr	x1, [sp, #40]
   1a92c:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1a930:	add	x0, x0, #0x970
   1a934:	bl	2a350 <OnPrint@@Base+0x3a8>
   1a938:	nop
   1a93c:	ldr	x30, [sp], #64
   1a940:	ret
   1a944:	stp	x19, x30, [sp, #-112]!
   1a948:	str	x0, [sp, #24]
   1a94c:	str	x1, [sp, #16]
   1a950:	ldr	x0, [sp, #16]
   1a954:	cmp	x0, #0x0
   1a958:	b.eq	1ab84 <__sanitizer_sandbox_on_notify@@Base+0x408>  // b.none
   1a95c:	mov	x2, #0x0                   	// #0
   1a960:	mov	x1, #0x0                   	// #0
   1a964:	mov	x0, #0x1000                	// #4096
   1a968:	bl	16598 <__sancov_default_options@@Base+0x3fc>
   1a96c:	str	x0, [sp, #72]
   1a970:	mov	x2, #0x0                   	// #0
   1a974:	mov	x1, #0x0                   	// #0
   1a978:	mov	x0, #0x1000                	// #4096
   1a97c:	bl	16598 <__sancov_default_options@@Base+0x3fc>
   1a980:	str	x0, [sp, #64]
   1a984:	ldr	x0, [sp, #16]
   1a988:	lsl	x0, x0, #3
   1a98c:	mov	x2, #0x0                   	// #0
   1a990:	mov	x1, #0x0                   	// #0
   1a994:	bl	16598 <__sancov_default_options@@Base+0x3fc>
   1a998:	str	x0, [sp, #56]
   1a99c:	ldr	x0, [sp, #16]
   1a9a0:	lsl	x0, x0, #3
   1a9a4:	mov	x2, x0
   1a9a8:	ldr	x1, [sp, #24]
   1a9ac:	ldr	x0, [sp, #56]
   1a9b0:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
   1a9b4:	mov	w2, w19
   1a9b8:	ldr	x1, [sp, #16]
   1a9bc:	ldr	x0, [sp, #56]
   1a9c0:	bl	11ef0 <__sanitizer_get_allocated_size@@Base+0x3390>
   1a9c4:	strb	wzr, [sp, #111]
   1a9c8:	str	xzr, [sp, #96]
   1a9cc:	str	xzr, [sp, #88]
   1a9d0:	str	xzr, [sp, #80]
   1a9d4:	ldr	x1, [sp, #80]
   1a9d8:	ldr	x0, [sp, #16]
   1a9dc:	cmp	x1, x0
   1a9e0:	b.cs	1ab24 <__sanitizer_sandbox_on_notify@@Base+0x3a8>  // b.hs, b.nlast
   1a9e4:	ldr	x0, [sp, #80]
   1a9e8:	lsl	x0, x0, #3
   1a9ec:	ldr	x1, [sp, #56]
   1a9f0:	add	x0, x1, x0
   1a9f4:	ldr	x0, [x0]
   1a9f8:	str	x0, [sp, #48]
   1a9fc:	ldr	x0, [sp, #48]
   1aa00:	cmp	x0, #0x0
   1aa04:	b.eq	1ab10 <__sanitizer_sandbox_on_notify@@Base+0x394>  // b.none
   1aa08:	ldr	x0, [sp, #80]
   1aa0c:	lsl	x0, x0, #3
   1aa10:	ldr	x1, [sp, #56]
   1aa14:	add	x0, x1, x0
   1aa18:	mov	x3, x0
   1aa1c:	mov	x2, #0x0                   	// #0
   1aa20:	mov	x1, #0x0                   	// #0
   1aa24:	ldr	x0, [sp, #48]
   1aa28:	bl	6980 <__sanitizer_get_module_and_offset_for_pc@plt>
   1aa2c:	cmp	w0, #0x0
   1aa30:	cset	w0, eq  // eq = none
   1aa34:	and	w0, w0, #0xff
   1aa38:	cmp	w0, #0x0
   1aa3c:	b.eq	1aa54 <__sanitizer_sandbox_on_notify@@Base+0x2d8>  // b.none
   1aa40:	ldr	x1, [sp, #48]
   1aa44:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1aa48:	add	x0, x0, #0x998
   1aa4c:	bl	2a350 <OnPrint@@Base+0x3a8>
   1aa50:	b	1ab14 <__sanitizer_sandbox_on_notify@@Base+0x398>
   1aa54:	ldr	x0, [sp, #80]
   1aa58:	lsl	x0, x0, #3
   1aa5c:	ldr	x1, [sp, #56]
   1aa60:	add	x0, x1, x0
   1aa64:	ldr	x0, [x0]
   1aa68:	ldr	x1, [sp, #48]
   1aa6c:	sub	x0, x1, x0
   1aa70:	str	x0, [sp, #40]
   1aa74:	ldr	x1, [sp, #40]
   1aa78:	ldr	x0, [sp, #96]
   1aa7c:	cmp	x1, x0
   1aa80:	b.ne	1aa98 <__sanitizer_sandbox_on_notify@@Base+0x31c>  // b.any
   1aa84:	ldrb	w0, [sp, #111]
   1aa88:	eor	w0, w0, #0x1
   1aa8c:	and	w0, w0, #0xff
   1aa90:	cmp	w0, #0x0
   1aa94:	b.eq	1ab14 <__sanitizer_sandbox_on_notify@@Base+0x398>  // b.none
   1aa98:	ldrb	w0, [sp, #111]
   1aa9c:	cmp	w0, #0x0
   1aaa0:	b.eq	1aad0 <__sanitizer_sandbox_on_notify@@Base+0x354>  // b.none
   1aaa4:	ldr	x0, [sp, #88]
   1aaa8:	lsl	x0, x0, #3
   1aaac:	ldr	x1, [sp, #56]
   1aab0:	add	x2, x1, x0
   1aab4:	ldr	x1, [sp, #80]
   1aab8:	ldr	x0, [sp, #88]
   1aabc:	sub	x0, x1, x0
   1aac0:	mov	x3, x0
   1aac4:	ldr	x1, [sp, #64]
   1aac8:	ldr	x0, [sp, #72]
   1aacc:	bl	1a8a4 <__sanitizer_sandbox_on_notify@@Base+0x128>
   1aad0:	ldr	x0, [sp, #40]
   1aad4:	str	x0, [sp, #96]
   1aad8:	ldr	x0, [sp, #80]
   1aadc:	str	x0, [sp, #88]
   1aae0:	mov	w0, #0x1                   	// #1
   1aae4:	strb	w0, [sp, #111]
   1aae8:	ldr	x0, [sp, #80]
   1aaec:	lsl	x0, x0, #3
   1aaf0:	ldr	x1, [sp, #56]
   1aaf4:	add	x0, x1, x0
   1aaf8:	mov	x3, x0
   1aafc:	mov	x2, #0x1000                	// #4096
   1ab00:	ldr	x1, [sp, #64]
   1ab04:	ldr	x0, [sp, #48]
   1ab08:	bl	6980 <__sanitizer_get_module_and_offset_for_pc@plt>
   1ab0c:	b	1ab14 <__sanitizer_sandbox_on_notify@@Base+0x398>
   1ab10:	nop
   1ab14:	ldr	x0, [sp, #80]
   1ab18:	add	x0, x0, #0x1
   1ab1c:	str	x0, [sp, #80]
   1ab20:	b	1a9d4 <__sanitizer_sandbox_on_notify@@Base+0x258>
   1ab24:	ldrb	w0, [sp, #111]
   1ab28:	cmp	w0, #0x0
   1ab2c:	b.eq	1ab5c <__sanitizer_sandbox_on_notify@@Base+0x3e0>  // b.none
   1ab30:	ldr	x0, [sp, #88]
   1ab34:	lsl	x0, x0, #3
   1ab38:	ldr	x1, [sp, #56]
   1ab3c:	add	x2, x1, x0
   1ab40:	ldr	x1, [sp, #16]
   1ab44:	ldr	x0, [sp, #88]
   1ab48:	sub	x0, x1, x0
   1ab4c:	mov	x3, x0
   1ab50:	ldr	x1, [sp, #64]
   1ab54:	ldr	x0, [sp, #72]
   1ab58:	bl	1a8a4 <__sanitizer_sandbox_on_notify@@Base+0x128>
   1ab5c:	mov	x1, #0x0                   	// #0
   1ab60:	ldr	x0, [sp, #72]
   1ab64:	bl	167e8 <__sancov_default_options@@Base+0x64c>
   1ab68:	mov	x1, #0x0                   	// #0
   1ab6c:	ldr	x0, [sp, #64]
   1ab70:	bl	167e8 <__sancov_default_options@@Base+0x64c>
   1ab74:	mov	x1, #0x0                   	// #0
   1ab78:	ldr	x0, [sp, #56]
   1ab7c:	bl	167e8 <__sancov_default_options@@Base+0x64c>
   1ab80:	b	1ab88 <__sanitizer_sandbox_on_notify@@Base+0x40c>
   1ab84:	nop
   1ab88:	ldp	x19, x30, [sp], #112
   1ab8c:	ret
   1ab90:	str	x30, [sp, #-48]!
   1ab94:	str	x0, [sp, #24]
   1ab98:	ldr	x0, [sp, #24]
   1ab9c:	ldrb	w0, [x0]
   1aba0:	eor	w0, w0, #0x1
   1aba4:	and	w0, w0, #0xff
   1aba8:	and	x0, x0, #0xff
   1abac:	str	x0, [sp, #40]
   1abb0:	str	xzr, [sp, #32]
   1abb4:	ldr	x1, [sp, #40]
   1abb8:	ldr	x0, [sp, #32]
   1abbc:	cmp	x1, x0
   1abc0:	cset	w0, eq  // eq = none
   1abc4:	and	w0, w0, #0xff
   1abc8:	and	x0, x0, #0xff
   1abcc:	cmp	x0, #0x0
   1abd0:	b.eq	1abf4 <__sanitizer_sandbox_on_notify@@Base+0x478>  // b.none
   1abd4:	ldr	x4, [sp, #32]
   1abd8:	ldr	x3, [sp, #40]
   1abdc:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1abe0:	add	x2, x0, #0x9d0
   1abe4:	mov	w1, #0x6d                  	// #109
   1abe8:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1abec:	add	x0, x0, #0x908
   1abf0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1abf4:	ldr	x0, [sp, #24]
   1abf8:	mov	w1, #0x1                   	// #1
   1abfc:	strb	w1, [x0]
   1ac00:	bl	1623c <__sancov_default_options@@Base+0xa0>
   1ac04:	ldr	x0, [sp, #24]
   1ac08:	add	x0, x0, #0x8
   1ac0c:	mov	x1, #0x0                   	// #0
   1ac10:	bl	c218 <__lsan_do_recoverable_leak_check@@Base+0x208c>
   1ac14:	nop
   1ac18:	ldr	x30, [sp], #48
   1ac1c:	ret
   1ac20:	str	x30, [sp, #-96]!
   1ac24:	str	x0, [sp, #40]
   1ac28:	str	x1, [sp, #32]
   1ac2c:	str	x2, [sp, #24]
   1ac30:	ldr	x0, [sp, #40]
   1ac34:	ldrb	w0, [x0]
   1ac38:	eor	w0, w0, #0x1
   1ac3c:	and	w0, w0, #0xff
   1ac40:	cmp	w0, #0x0
   1ac44:	b.eq	1ac50 <__sanitizer_sandbox_on_notify@@Base+0x4d4>  // b.none
   1ac48:	ldr	x0, [sp, #40]
   1ac4c:	bl	1ab90 <__sanitizer_sandbox_on_notify@@Base+0x414>
   1ac50:	ldr	x0, [sp, #32]
   1ac54:	ldr	w0, [x0]
   1ac58:	cmp	w0, #0x0
   1ac5c:	cset	w0, eq  // eq = none
   1ac60:	and	w0, w0, #0xff
   1ac64:	and	x0, x0, #0xff
   1ac68:	str	x0, [sp, #72]
   1ac6c:	str	xzr, [sp, #64]
   1ac70:	ldr	x1, [sp, #72]
   1ac74:	ldr	x0, [sp, #64]
   1ac78:	cmp	x1, x0
   1ac7c:	cset	w0, eq  // eq = none
   1ac80:	and	w0, w0, #0xff
   1ac84:	and	x0, x0, #0xff
   1ac88:	cmp	x0, #0x0
   1ac8c:	b.eq	1acb0 <__sanitizer_sandbox_on_notify@@Base+0x534>  // b.none
   1ac90:	ldr	x4, [sp, #64]
   1ac94:	ldr	x3, [sp, #72]
   1ac98:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1ac9c:	add	x2, x0, #0x9e8
   1aca0:	mov	w1, #0x77                  	// #119
   1aca4:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1aca8:	add	x0, x0, #0x908
   1acac:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1acb0:	ldr	x0, [sp, #32]
   1acb4:	str	x0, [sp, #56]
   1acb8:	ldr	x0, [sp, #24]
   1acbc:	str	x0, [sp, #48]
   1acc0:	ldr	x1, [sp, #56]
   1acc4:	ldr	x0, [sp, #48]
   1acc8:	cmp	x1, x0
   1accc:	cset	w0, eq  // eq = none
   1acd0:	and	w0, w0, #0xff
   1acd4:	and	x0, x0, #0xff
   1acd8:	cmp	x0, #0x0
   1acdc:	b.eq	1ad00 <__sanitizer_sandbox_on_notify@@Base+0x584>  // b.none
   1ace0:	ldr	x4, [sp, #48]
   1ace4:	ldr	x3, [sp, #56]
   1ace8:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1acec:	add	x2, x0, #0xa00
   1acf0:	mov	w1, #0x78                  	// #120
   1acf4:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1acf8:	add	x0, x0, #0x908
   1acfc:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1ad00:	ldr	x0, [sp, #40]
   1ad04:	add	x0, x0, #0x8
   1ad08:	bl	ae64 <__lsan_do_recoverable_leak_check@@Base+0xcd8>
   1ad0c:	str	w0, [sp, #92]
   1ad10:	ldr	x0, [sp, #32]
   1ad14:	str	x0, [sp, #80]
   1ad18:	ldr	x1, [sp, #80]
   1ad1c:	ldr	x0, [sp, #24]
   1ad20:	cmp	x1, x0
   1ad24:	b.cs	1ad50 <__sanitizer_sandbox_on_notify@@Base+0x5d4>  // b.hs, b.nlast
   1ad28:	ldr	w0, [sp, #92]
   1ad2c:	add	w0, w0, #0x1
   1ad30:	str	w0, [sp, #92]
   1ad34:	ldr	x0, [sp, #80]
   1ad38:	ldr	w1, [sp, #92]
   1ad3c:	str	w1, [x0]
   1ad40:	ldr	x0, [sp, #80]
   1ad44:	add	x0, x0, #0x4
   1ad48:	str	x0, [sp, #80]
   1ad4c:	b	1ad18 <__sanitizer_sandbox_on_notify@@Base+0x59c>
   1ad50:	ldr	x0, [sp, #40]
   1ad54:	add	x0, x0, #0x8
   1ad58:	ldr	w1, [sp, #92]
   1ad5c:	bl	c254 <__lsan_do_recoverable_leak_check@@Base+0x20c8>
   1ad60:	nop
   1ad64:	ldr	x30, [sp], #96
   1ad68:	ret
   1ad6c:	str	x30, [sp, #-64]!
   1ad70:	str	x0, [sp, #40]
   1ad74:	str	x1, [sp, #32]
   1ad78:	str	x2, [sp, #24]
   1ad7c:	ldr	x0, [sp, #32]
   1ad80:	ldr	w0, [x0]
   1ad84:	str	w0, [sp, #60]
   1ad88:	ldr	w0, [sp, #60]
   1ad8c:	cmp	w0, #0x0
   1ad90:	b.eq	1adec <__sanitizer_sandbox_on_notify@@Base+0x670>  // b.none
   1ad94:	ldr	x0, [sp, #40]
   1ad98:	add	x2, x0, #0x8
   1ad9c:	ldr	w0, [sp, #60]
   1ada0:	sub	w0, w0, #0x1
   1ada4:	mov	w0, w0
   1ada8:	mov	x1, x0
   1adac:	mov	x0, x2
   1adb0:	bl	1b0a4 <__sanitizer_cov_pcs_init@@Base+0x8>
   1adb4:	str	x0, [sp, #48]
   1adb8:	mov	w1, #0x1                   	// #1
   1adbc:	ldr	x0, [sp, #48]
   1adc0:	bl	f49c <__sanitizer_get_allocated_size@@Base+0x93c>
   1adc4:	cmp	x0, #0x0
   1adc8:	cset	w0, eq  // eq = none
   1adcc:	and	w0, w0, #0xff
   1add0:	cmp	w0, #0x0
   1add4:	b.eq	1adf0 <__sanitizer_sandbox_on_notify@@Base+0x674>  // b.none
   1add8:	mov	w2, #0x1                   	// #1
   1addc:	ldr	x1, [sp, #24]
   1ade0:	ldr	x0, [sp, #48]
   1ade4:	bl	f520 <__sanitizer_get_allocated_size@@Base+0x9c0>
   1ade8:	b	1adf0 <__sanitizer_sandbox_on_notify@@Base+0x674>
   1adec:	nop
   1adf0:	ldr	x30, [sp], #64
   1adf4:	ret
   1adf8:	stp	x19, x30, [sp, #-32]!
   1adfc:	str	x0, [sp, #24]
   1ae00:	ldr	x0, [sp, #24]
   1ae04:	add	x0, x0, #0x8
   1ae08:	mov	x1, #0x0                   	// #0
   1ae0c:	bl	1b0a4 <__sanitizer_cov_pcs_init@@Base+0x8>
   1ae10:	mov	x19, x0
   1ae14:	ldr	x0, [sp, #24]
   1ae18:	add	x0, x0, #0x8
   1ae1c:	bl	ae64 <__lsan_do_recoverable_leak_check@@Base+0xcd8>
   1ae20:	lsl	x0, x0, #3
   1ae24:	mov	x2, x0
   1ae28:	mov	w1, #0x0                   	// #0
   1ae2c:	mov	x0, x19
   1ae30:	bl	21754 <__sanitizer_set_report_fd@@Base+0x255c>
   1ae34:	nop
   1ae38:	ldp	x19, x30, [sp], #32
   1ae3c:	ret
   1ae40:	stp	x19, x30, [sp, #-32]!
   1ae44:	str	x0, [sp, #24]
   1ae48:	ldr	x0, [sp, #24]
   1ae4c:	ldrb	w0, [x0]
   1ae50:	eor	w0, w0, #0x1
   1ae54:	and	w0, w0, #0xff
   1ae58:	cmp	w0, #0x0
   1ae5c:	b.ne	1ae78 <__sanitizer_sandbox_on_notify@@Base+0x6fc>  // b.any
   1ae60:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   1ae64:	ldrb	w0, [x0, #161]
   1ae68:	eor	w0, w0, #0x1
   1ae6c:	and	w0, w0, #0xff
   1ae70:	cmp	w0, #0x0
   1ae74:	b.eq	1ae80 <__sanitizer_sandbox_on_notify@@Base+0x704>  // b.none
   1ae78:	mov	w0, #0x1                   	// #1
   1ae7c:	b	1ae84 <__sanitizer_sandbox_on_notify@@Base+0x708>
   1ae80:	mov	w0, #0x0                   	// #0
   1ae84:	cmp	w0, #0x0
   1ae88:	b.ne	1aeb8 <__sanitizer_sandbox_on_notify@@Base+0x73c>  // b.any
   1ae8c:	ldr	x0, [sp, #24]
   1ae90:	add	x0, x0, #0x8
   1ae94:	bl	ae4c <__lsan_do_recoverable_leak_check@@Base+0xcc0>
   1ae98:	mov	x19, x0
   1ae9c:	ldr	x0, [sp, #24]
   1aea0:	add	x0, x0, #0x8
   1aea4:	bl	ae64 <__lsan_do_recoverable_leak_check@@Base+0xcd8>
   1aea8:	mov	x1, x0
   1aeac:	mov	x0, x19
   1aeb0:	bl	6bb0 <__sanitizer_dump_coverage@plt>
   1aeb4:	b	1aebc <__sanitizer_sandbox_on_notify@@Base+0x740>
   1aeb8:	nop
   1aebc:	ldp	x19, x30, [sp], #32
   1aec0:	ret
   1aec4:	str	x30, [sp, #-32]!
   1aec8:	strb	w0, [sp, #31]
   1aecc:	str	x1, [sp, #16]
   1aed0:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   1aed4:	add	x0, x0, #0xa50
   1aed8:	ldrb	w0, [x0]
   1aedc:	cmp	w0, #0x0
   1aee0:	b.ne	1af10 <__sanitizer_sandbox_on_notify@@Base+0x794>  // b.any
   1aee4:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   1aee8:	add	x0, x0, #0xa50
   1aeec:	ldrb	w1, [sp, #31]
   1aef0:	strb	w1, [x0]
   1aef4:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   1aef8:	ldr	x0, [x0, #3784]
   1aefc:	bl	27ea0 <__sanitizer_set_report_fd@@Base+0x8ca8>
   1af00:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   1af04:	ldr	x0, [x0, #3784]
   1af08:	bl	359f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7de8>
   1af0c:	b	1af14 <__sanitizer_sandbox_on_notify@@Base+0x798>
   1af10:	nop
   1af14:	ldr	x30, [sp], #32
   1af18:	ret

000000000001af1c <__sanitizer_dump_coverage@@Base>:
   1af1c:	str	x30, [sp, #-32]!
   1af20:	str	x0, [sp, #24]
   1af24:	str	x1, [sp, #16]
   1af28:	ldr	x1, [sp, #16]
   1af2c:	ldr	x0, [sp, #24]
   1af30:	bl	1a944 <__sanitizer_sandbox_on_notify@@Base+0x1c8>
   1af34:	nop
   1af38:	ldr	x30, [sp], #32
   1af3c:	ret

000000000001af40 <__sanitizer_cov_trace_pc_guard@@Base>:
   1af40:	str	x30, [sp, #-32]!
   1af44:	mov	x1, x30
   1af48:	str	x0, [sp, #24]
   1af4c:	ldr	x0, [sp, #24]
   1af50:	ldr	w0, [x0]
   1af54:	cmp	w0, #0x0
   1af58:	b.eq	1af7c <__sanitizer_cov_trace_pc_guard@@Base+0x3c>  // b.none
   1af5c:	mov	x0, x1
   1af60:	sub	x0, x0, #0x1
   1af64:	mov	x2, x0
   1af68:	ldr	x1, [sp, #24]
   1af6c:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   1af70:	add	x0, x0, #0xa30
   1af74:	bl	1ad6c <__sanitizer_sandbox_on_notify@@Base+0x5f0>
   1af78:	b	1af80 <__sanitizer_cov_trace_pc_guard@@Base+0x40>
   1af7c:	nop
   1af80:	ldr	x30, [sp], #32
   1af84:	ret

000000000001af88 <__sanitizer_cov_trace_pc_guard_init@@Base>:
   1af88:	str	x30, [sp, #-32]!
   1af8c:	str	x0, [sp, #24]
   1af90:	str	x1, [sp, #16]
   1af94:	ldr	x1, [sp, #24]
   1af98:	ldr	x0, [sp, #16]
   1af9c:	cmp	x1, x0
   1afa0:	b.eq	1afcc <__sanitizer_cov_trace_pc_guard_init@@Base+0x44>  // b.none
   1afa4:	ldr	x0, [sp, #24]
   1afa8:	ldr	w0, [x0]
   1afac:	cmp	w0, #0x0
   1afb0:	b.ne	1afcc <__sanitizer_cov_trace_pc_guard_init@@Base+0x44>  // b.any
   1afb4:	ldr	x2, [sp, #16]
   1afb8:	ldr	x1, [sp, #24]
   1afbc:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   1afc0:	add	x0, x0, #0xa30
   1afc4:	bl	1ac20 <__sanitizer_sandbox_on_notify@@Base+0x4a4>
   1afc8:	b	1afd0 <__sanitizer_cov_trace_pc_guard_init@@Base+0x48>
   1afcc:	nop
   1afd0:	ldr	x30, [sp], #32
   1afd4:	ret

000000000001afd8 <__sanitizer_dump_trace_pc_guard_coverage@@Base>:
   1afd8:	str	x30, [sp, #-16]!
   1afdc:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   1afe0:	add	x0, x0, #0xa30
   1afe4:	bl	1ae40 <__sanitizer_sandbox_on_notify@@Base+0x6c4>
   1afe8:	nop
   1afec:	ldr	x30, [sp], #16
   1aff0:	ret

000000000001aff4 <__sanitizer_cov_dump@@Base>:
   1aff4:	str	x30, [sp, #-16]!
   1aff8:	bl	6d50 <__sanitizer_dump_trace_pc_guard_coverage@plt>
   1affc:	nop
   1b000:	ldr	x30, [sp], #16
   1b004:	ret

000000000001b008 <__sanitizer_cov_reset@@Base>:
   1b008:	str	x30, [sp, #-16]!
   1b00c:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   1b010:	add	x0, x0, #0xa30
   1b014:	bl	1adf8 <__sanitizer_sandbox_on_notify@@Base+0x67c>
   1b018:	nop
   1b01c:	ldr	x30, [sp], #16
   1b020:	ret

000000000001b024 <__sanitizer_cov_trace_cmp@@Base>:
   1b024:	nop
   1b028:	ret

000000000001b02c <__sanitizer_cov_trace_cmp1@@Base>:
   1b02c:	nop
   1b030:	ret

000000000001b034 <__sanitizer_cov_trace_cmp2@@Base>:
   1b034:	nop
   1b038:	ret

000000000001b03c <__sanitizer_cov_trace_cmp4@@Base>:
   1b03c:	nop
   1b040:	ret

000000000001b044 <__sanitizer_cov_trace_cmp8@@Base>:
   1b044:	nop
   1b048:	ret

000000000001b04c <__sanitizer_cov_trace_const_cmp1@@Base>:
   1b04c:	nop
   1b050:	ret

000000000001b054 <__sanitizer_cov_trace_const_cmp2@@Base>:
   1b054:	nop
   1b058:	ret

000000000001b05c <__sanitizer_cov_trace_const_cmp4@@Base>:
   1b05c:	nop
   1b060:	ret

000000000001b064 <__sanitizer_cov_trace_const_cmp8@@Base>:
   1b064:	nop
   1b068:	ret

000000000001b06c <__sanitizer_cov_trace_switch@@Base>:
   1b06c:	nop
   1b070:	ret

000000000001b074 <__sanitizer_cov_trace_div4@@Base>:
   1b074:	nop
   1b078:	ret

000000000001b07c <__sanitizer_cov_trace_div8@@Base>:
   1b07c:	nop
   1b080:	ret

000000000001b084 <__sanitizer_cov_trace_gep@@Base>:
   1b084:	nop
   1b088:	ret

000000000001b08c <__sanitizer_cov_trace_pc_indir@@Base>:
   1b08c:	nop
   1b090:	ret

000000000001b094 <__sanitizer_cov_8bit_counters_init@@Base>:
   1b094:	nop
   1b098:	ret

000000000001b09c <__sanitizer_cov_pcs_init@@Base>:
   1b09c:	nop
   1b0a0:	ret
   1b0a4:	str	x30, [sp, #-48]!
   1b0a8:	str	x0, [sp, #24]
   1b0ac:	str	x1, [sp, #16]
   1b0b0:	ldr	x0, [sp, #16]
   1b0b4:	str	x0, [sp, #40]
   1b0b8:	ldr	x0, [sp, #24]
   1b0bc:	ldr	x0, [x0, #16]
   1b0c0:	str	x0, [sp, #32]
   1b0c4:	ldr	x1, [sp, #40]
   1b0c8:	ldr	x0, [sp, #32]
   1b0cc:	cmp	x1, x0
   1b0d0:	cset	w0, cs  // cs = hs, nlast
   1b0d4:	and	w0, w0, #0xff
   1b0d8:	and	x0, x0, #0xff
   1b0dc:	cmp	x0, #0x0
   1b0e0:	b.eq	1b104 <__sanitizer_cov_pcs_init@@Base+0x68>  // b.none
   1b0e4:	ldr	x4, [sp, #32]
   1b0e8:	ldr	x3, [sp, #40]
   1b0ec:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1b0f0:	add	x2, x0, #0xa18
   1b0f4:	mov	w1, #0x1b6                 	// #438
   1b0f8:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1b0fc:	add	x0, x0, #0xa30
   1b100:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1b104:	ldr	x0, [sp, #24]
   1b108:	ldr	x1, [x0]
   1b10c:	ldr	x0, [sp, #16]
   1b110:	lsl	x0, x0, #3
   1b114:	add	x0, x1, x0
   1b118:	ldr	x30, [sp], #48
   1b11c:	ret
   1b120:	stp	x19, x30, [sp, #-48]!
   1b124:	str	x0, [sp, #24]
   1b128:	mov	w2, #0x0                   	// #0
   1b12c:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1b130:	add	x1, x0, #0xbd0
   1b134:	mov	x0, #0xa50                 	// #2640
   1b138:	movk	x0, #0x41, lsl #16
   1b13c:	bl	26a50 <__sanitizer_set_report_fd@@Base+0x7858>
   1b140:	str	x0, [sp, #40]
   1b144:	ldr	x0, [sp, #40]
   1b148:	mov	x1, x0
   1b14c:	mov	x0, #0xa50                 	// #2640
   1b150:	movk	x0, #0x41, lsl #16
   1b154:	bl	a908 <__lsan_do_recoverable_leak_check@@Base+0x77c>
   1b158:	mov	x19, x0
   1b15c:	ldr	x1, [sp, #24]
   1b160:	mov	x0, x19
   1b164:	bl	1b174 <__sanitizer_cov_pcs_init@@Base+0xd8>
   1b168:	mov	x0, x19
   1b16c:	ldp	x19, x30, [sp], #48
   1b170:	ret
   1b174:	str	x30, [sp, #-32]!
   1b178:	str	x0, [sp, #24]
   1b17c:	str	x1, [sp, #16]
   1b180:	ldr	x0, [sp, #24]
   1b184:	bl	1bc34 <__sanitizer_cov_pcs_init@@Base+0xb98>
   1b188:	adrp	x0, 7b000 <__asan_backtrace_vector_release@@Base+0x2c340>
   1b18c:	add	x1, x0, #0xb58
   1b190:	ldr	x0, [sp, #24]
   1b194:	str	x1, [x0]
   1b198:	ldr	x0, [sp, #24]
   1b19c:	add	x0, x0, #0x8
   1b1a0:	bl	1bba4 <__sanitizer_cov_pcs_init@@Base+0xb08>
   1b1a4:	ldr	x0, [sp, #24]
   1b1a8:	add	x0, x0, #0x410, lsl #12
   1b1ac:	ldr	x1, [sp, #16]
   1b1b0:	ldrb	w1, [x1]
   1b1b4:	strb	w1, [x0, #2632]
   1b1b8:	ldr	x0, [sp, #24]
   1b1bc:	add	x0, x0, #0x10
   1b1c0:	bl	1bc58 <__sanitizer_cov_pcs_init@@Base+0xbbc>
   1b1c4:	nop
   1b1c8:	ldr	x30, [sp], #32
   1b1cc:	ret
   1b1d0:	sub	sp, sp, #0x10
   1b1d4:	str	x0, [sp, #8]
   1b1d8:	mov	x0, #0x0                   	// #0
   1b1dc:	add	sp, sp, #0x10
   1b1e0:	ret
   1b1e4:	sub	sp, sp, #0x10
   1b1e8:	str	x0, [sp, #8]
   1b1ec:	str	x1, [sp]
   1b1f0:	nop
   1b1f4:	add	sp, sp, #0x10
   1b1f8:	ret
   1b1fc:	str	x30, [sp, #-48]!
   1b200:	str	x0, [sp, #24]
   1b204:	str	x1, [sp, #16]
   1b208:	mov	x2, #0x0                   	// #0
   1b20c:	mov	x1, #0x0                   	// #0
   1b210:	mov	x0, #0x8b8                 	// #2232
   1b214:	bl	16598 <__sancov_default_options@@Base+0x3fc>
   1b218:	str	x0, [sp, #40]
   1b21c:	ldr	x0, [sp, #40]
   1b220:	ldr	x1, [sp, #16]
   1b224:	str	x1, [x0]
   1b228:	ldr	x0, [sp, #40]
   1b22c:	add	x0, x0, #0x8
   1b230:	bl	1bca4 <__sanitizer_cov_pcs_init@@Base+0xc08>
   1b234:	ldr	x0, [sp, #40]
   1b238:	strb	wzr, [x0, #2224]
   1b23c:	ldr	x0, [sp, #40]
   1b240:	ldr	x30, [sp], #48
   1b244:	ret
   1b248:	str	x30, [sp, #-32]!
   1b24c:	str	x0, [sp, #24]
   1b250:	str	x1, [sp, #16]
   1b254:	mov	x1, #0x0                   	// #0
   1b258:	ldr	x0, [sp, #16]
   1b25c:	bl	167e8 <__sancov_default_options@@Base+0x64c>
   1b260:	nop
   1b264:	ldr	x30, [sp], #32
   1b268:	ret
   1b26c:	str	x30, [sp, #-48]!
   1b270:	str	x0, [sp, #40]
   1b274:	str	x1, [sp, #32]
   1b278:	str	x2, [sp, #24]
   1b27c:	ldr	x0, [sp, #24]
   1b280:	str	xzr, [x0]
   1b284:	ldr	x0, [sp, #32]
   1b288:	ldr	x0, [x0]
   1b28c:	ldr	x1, [x0]
   1b290:	ldr	x0, [sp, #32]
   1b294:	blr	x1
   1b298:	mov	w1, w0
   1b29c:	ldr	x0, [sp, #24]
   1b2a0:	str	w1, [x0, #8]
   1b2a4:	nop
   1b2a8:	ldr	x30, [sp], #48
   1b2ac:	ret
   1b2b0:	str	x30, [sp, #-48]!
   1b2b4:	str	x0, [sp, #40]
   1b2b8:	str	x1, [sp, #32]
   1b2bc:	str	x2, [sp, #24]
   1b2c0:	ldr	x0, [sp, #40]
   1b2c4:	add	x2, x0, #0x10
   1b2c8:	ldr	x0, [sp, #24]
   1b2cc:	ldr	x0, [x0]
   1b2d0:	mov	x1, x0
   1b2d4:	mov	x0, x2
   1b2d8:	bl	1bcd8 <__sanitizer_cov_pcs_init@@Base+0xc3c>
   1b2dc:	and	w0, w0, #0xff
   1b2e0:	eor	w0, w0, #0x1
   1b2e4:	and	w0, w0, #0xff
   1b2e8:	cmp	w0, #0x0
   1b2ec:	b.eq	1b30c <__sanitizer_cov_pcs_init@@Base+0x270>  // b.none
   1b2f0:	ldr	x0, [sp, #40]
   1b2f4:	add	x0, x0, #0x10
   1b2f8:	ldr	x1, [sp, #24]
   1b2fc:	bl	1bd34 <__sanitizer_cov_pcs_init@@Base+0xc98>
   1b300:	mov	x1, x0
   1b304:	ldr	x0, [sp, #24]
   1b308:	str	x1, [x0]
   1b30c:	ldr	x0, [sp, #40]
   1b310:	add	x2, x0, #0x10
   1b314:	ldr	x0, [sp, #32]
   1b318:	add	x0, x0, #0x8
   1b31c:	mov	x1, x0
   1b320:	mov	x0, x2
   1b324:	bl	1bfdc <__sanitizer_cov_pcs_init@@Base+0xf40>
   1b328:	nop
   1b32c:	ldr	x30, [sp], #48
   1b330:	ret
   1b334:	stp	x19, x20, [sp, #-96]!
   1b338:	stp	x21, x22, [sp, #16]
   1b33c:	str	x30, [sp, #32]
   1b340:	str	x0, [sp, #72]
   1b344:	str	x1, [sp, #64]
   1b348:	str	x2, [sp, #56]
   1b34c:	strb	w3, [sp, #55]
   1b350:	ldr	x0, [sp, #64]
   1b354:	ldr	x0, [x0, #16]
   1b358:	str	x0, [sp, #88]
   1b35c:	ldr	x0, [sp, #88]
   1b360:	add	x0, x0, #0x8
   1b364:	bl	1c008 <__sanitizer_cov_pcs_init@@Base+0xf6c>
   1b368:	and	w0, w0, #0xff
   1b36c:	cmp	w0, #0x0
   1b370:	b.ne	1b4b0 <__sanitizer_cov_pcs_init@@Base+0x414>  // b.any
   1b374:	ldr	x0, [sp, #72]
   1b378:	add	x3, x0, #0x10
   1b37c:	ldr	x0, [sp, #88]
   1b380:	add	x1, x0, #0x8
   1b384:	ldr	x0, [sp, #56]
   1b388:	ldr	x0, [x0]
   1b38c:	mov	x2, x0
   1b390:	mov	x0, x3
   1b394:	bl	1c024 <__sanitizer_cov_pcs_init@@Base+0xf88>
   1b398:	and	w0, w0, #0xff
   1b39c:	cmp	w0, #0x0
   1b3a0:	b.ne	1b4b8 <__sanitizer_cov_pcs_init@@Base+0x41c>  // b.any
   1b3a4:	ldr	x0, [sp, #72]
   1b3a8:	add	x1, x0, #0x8
   1b3ac:	add	x0, sp, #0x50
   1b3b0:	bl	f58c <__sanitizer_get_allocated_size@@Base+0xa2c>
   1b3b4:	ldr	x2, [sp, #56]
   1b3b8:	ldr	x1, [sp, #88]
   1b3bc:	ldr	x0, [sp, #72]
   1b3c0:	bl	1b2b0 <__sanitizer_cov_pcs_init@@Base+0x214>
   1b3c4:	ldr	x0, [sp, #72]
   1b3c8:	add	x3, x0, #0x10
   1b3cc:	ldr	x0, [sp, #88]
   1b3d0:	add	x1, x0, #0x8
   1b3d4:	ldr	x0, [sp, #56]
   1b3d8:	ldr	x0, [x0]
   1b3dc:	mov	x2, x0
   1b3e0:	mov	x0, x3
   1b3e4:	bl	1c124 <__sanitizer_cov_pcs_init@@Base+0x1088>
   1b3e8:	and	w0, w0, #0xff
   1b3ec:	cmp	w0, #0x0
   1b3f0:	b.eq	1b3fc <__sanitizer_cov_pcs_init@@Base+0x360>  // b.none
   1b3f4:	mov	w19, #0x0                   	// #0
   1b3f8:	b	1b4a0 <__sanitizer_cov_pcs_init@@Base+0x404>
   1b3fc:	ldr	x0, [sp, #72]
   1b400:	add	x3, x0, #0x10
   1b404:	ldr	x0, [sp, #88]
   1b408:	add	x1, x0, #0x8
   1b40c:	ldr	x0, [sp, #56]
   1b410:	ldr	x0, [x0]
   1b414:	mov	x2, x0
   1b418:	mov	x0, x3
   1b41c:	bl	1c170 <__sanitizer_cov_pcs_init@@Base+0x10d4>
   1b420:	and	w0, w0, #0xff
   1b424:	cmp	w0, #0x0
   1b428:	b.eq	1b49c <__sanitizer_cov_pcs_init@@Base+0x400>  // b.none
   1b42c:	ldr	x0, [sp, #72]
   1b430:	add	x19, x0, #0x10
   1b434:	ldr	x0, [sp, #88]
   1b438:	add	x20, x0, #0x8
   1b43c:	ldr	x0, [sp, #56]
   1b440:	ldr	x21, [x0]
   1b444:	ldr	x0, [sp, #64]
   1b448:	ldr	x0, [x0]
   1b44c:	ldr	x1, [x0]
   1b450:	ldr	x0, [sp, #64]
   1b454:	blr	x1
   1b458:	mov	w22, w0
   1b45c:	ldr	x0, [sp, #64]
   1b460:	ldr	x0, [x0]
   1b464:	add	x0, x0, #0x8
   1b468:	ldr	x1, [x0]
   1b46c:	ldr	x0, [sp, #64]
   1b470:	blr	x1
   1b474:	mov	w4, w0
   1b478:	mov	w3, w22
   1b47c:	mov	x2, x21
   1b480:	mov	x1, x20
   1b484:	mov	x0, x19
   1b488:	bl	1c1d4 <__sanitizer_cov_pcs_init@@Base+0x1138>
   1b48c:	ldr	x2, [sp, #56]
   1b490:	ldr	x1, [sp, #64]
   1b494:	ldr	x0, [sp, #72]
   1b498:	bl	1b4cc <__sanitizer_cov_pcs_init@@Base+0x430>
   1b49c:	mov	w19, #0x1                   	// #1
   1b4a0:	add	x0, sp, #0x50
   1b4a4:	bl	f5bc <__sanitizer_get_allocated_size@@Base+0xa5c>
   1b4a8:	cmp	w19, #0x1
   1b4ac:	b	1b4bc <__sanitizer_cov_pcs_init@@Base+0x420>
   1b4b0:	nop
   1b4b4:	b	1b4bc <__sanitizer_cov_pcs_init@@Base+0x420>
   1b4b8:	nop
   1b4bc:	ldp	x21, x22, [sp, #16]
   1b4c0:	ldr	x30, [sp, #32]
   1b4c4:	ldp	x19, x20, [sp], #96
   1b4c8:	ret
   1b4cc:	sub	sp, sp, #0x130
   1b4d0:	str	x30, [sp]
   1b4d4:	str	x0, [sp, #40]
   1b4d8:	str	x1, [sp, #32]
   1b4dc:	str	x2, [sp, #24]
   1b4e0:	ldr	x0, [sp, #32]
   1b4e4:	ldr	x0, [x0, #16]
   1b4e8:	str	x0, [sp, #288]
   1b4ec:	ldr	x0, [sp, #40]
   1b4f0:	add	x5, x0, #0x10
   1b4f4:	ldr	x0, [sp, #288]
   1b4f8:	add	x1, x0, #0x8
   1b4fc:	ldr	x0, [sp, #24]
   1b500:	ldr	x0, [x0]
   1b504:	add	x2, sp, #0x40
   1b508:	mov	x4, #0x14                  	// #20
   1b50c:	mov	x3, x2
   1b510:	mov	x2, x0
   1b514:	mov	x0, x5
   1b518:	bl	1c31c <__sanitizer_cov_pcs_init@@Base+0x1280>
   1b51c:	str	x0, [sp, #280]
   1b520:	ldr	x0, [sp, #280]
   1b524:	cmp	x0, #0x0
   1b528:	b.ne	1b53c <__sanitizer_cov_pcs_init@@Base+0x4a0>  // b.any
   1b52c:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1b530:	add	x0, x0, #0xbe8
   1b534:	bl	2a350 <OnPrint@@Base+0x3a8>
   1b538:	b	1b718 <__sanitizer_cov_pcs_init@@Base+0x67c>
   1b53c:	ldr	x0, [sp, #24]
   1b540:	ldr	x0, [x0]
   1b544:	str	x0, [sp, #272]
   1b548:	ldr	x0, [sp, #64]
   1b54c:	str	x0, [sp, #264]
   1b550:	ldr	x1, [sp, #272]
   1b554:	ldr	x0, [sp, #264]
   1b558:	cmp	x1, x0
   1b55c:	cset	w0, ne  // ne = any
   1b560:	and	w0, w0, #0xff
   1b564:	and	x0, x0, #0xff
   1b568:	cmp	x0, #0x0
   1b56c:	b.eq	1b590 <__sanitizer_cov_pcs_init@@Base+0x4f4>  // b.none
   1b570:	ldr	x4, [sp, #264]
   1b574:	ldr	x3, [sp, #272]
   1b578:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1b57c:	add	x2, x0, #0xc10
   1b580:	mov	w1, #0x7f                  	// #127
   1b584:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1b588:	add	x0, x0, #0xc30
   1b58c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1b590:	ldr	x0, [sp, #288]
   1b594:	mov	w1, #0x1                   	// #1
   1b598:	strb	w1, [x0, #2224]
   1b59c:	mov	x1, #0x14                  	// #20
   1b5a0:	ldr	x0, [sp, #280]
   1b5a4:	bl	aeac <__lsan_do_recoverable_leak_check@@Base+0xd20>
   1b5a8:	str	x0, [sp, #280]
   1b5ac:	ldr	x0, [sp, #288]
   1b5b0:	add	x0, x0, #0x628
   1b5b4:	str	x0, [sp, #256]
   1b5b8:	ldr	x0, [sp, #280]
   1b5bc:	mov	w1, w0
   1b5c0:	ldr	x0, [sp, #256]
   1b5c4:	str	w1, [x0]
   1b5c8:	str	xzr, [sp, #296]
   1b5cc:	ldr	x1, [sp, #296]
   1b5d0:	ldr	x0, [sp, #280]
   1b5d4:	cmp	x1, x0
   1b5d8:	b.cs	1b718 <__sanitizer_cov_pcs_init@@Base+0x67c>  // b.hs, b.nlast
   1b5dc:	ldr	x0, [sp, #296]
   1b5e0:	lsl	x0, x0, #3
   1b5e4:	add	x1, sp, #0x40
   1b5e8:	ldr	x0, [x1, x0]
   1b5ec:	str	x0, [sp, #248]
   1b5f0:	ldr	x0, [sp, #296]
   1b5f4:	add	x0, x0, #0x1
   1b5f8:	ldr	x1, [sp, #280]
   1b5fc:	udiv	x2, x0, x1
   1b600:	ldr	x1, [sp, #280]
   1b604:	mul	x1, x2, x1
   1b608:	sub	x0, x0, x1
   1b60c:	lsl	x0, x0, #3
   1b610:	add	x1, sp, #0x40
   1b614:	ldr	x0, [x1, x0]
   1b618:	str	x0, [sp, #240]
   1b61c:	ldr	x0, [sp, #40]
   1b620:	add	x0, x0, #0x10
   1b624:	ldr	x1, [sp, #248]
   1b628:	bl	1c4c4 <__sanitizer_cov_pcs_init@@Base+0x1428>
   1b62c:	str	x0, [sp, #232]
   1b630:	ldr	x0, [sp, #40]
   1b634:	add	x0, x0, #0x10
   1b638:	ldr	x1, [sp, #240]
   1b63c:	bl	1c4c4 <__sanitizer_cov_pcs_init@@Base+0x1428>
   1b640:	str	x0, [sp, #224]
   1b644:	mov	w0, #0xffffffff            	// #-1
   1b648:	str	w0, [sp, #60]
   1b64c:	mov	w0, #0xffffffff            	// #-1
   1b650:	str	w0, [sp, #56]
   1b654:	str	wzr, [sp, #52]
   1b658:	ldr	x0, [sp, #40]
   1b65c:	add	x0, x0, #0x10
   1b660:	add	x3, sp, #0x34
   1b664:	add	x2, sp, #0x38
   1b668:	add	x1, sp, #0x3c
   1b66c:	mov	x5, x3
   1b670:	mov	x4, x2
   1b674:	mov	x3, x1
   1b678:	ldr	x2, [sp, #240]
   1b67c:	ldr	x1, [sp, #248]
   1b680:	bl	1c4fc <__sanitizer_cov_pcs_init@@Base+0x1460>
   1b684:	ldr	w0, [sp, #52]
   1b688:	sxtw	x1, w0
   1b68c:	ldr	x2, [sp, #256]
   1b690:	ldr	x0, [sp, #296]
   1b694:	lsl	x0, x0, #5
   1b698:	add	x0, x2, x0
   1b69c:	str	x1, [x0, #8]
   1b6a0:	ldr	x0, [sp, #232]
   1b6a4:	ldr	x1, [x0, #16]
   1b6a8:	ldr	x2, [sp, #256]
   1b6ac:	ldr	x0, [sp, #296]
   1b6b0:	lsl	x0, x0, #5
   1b6b4:	add	x0, x2, x0
   1b6b8:	str	x1, [x0, #16]
   1b6bc:	ldr	x0, [sp, #224]
   1b6c0:	ldr	x1, [x0, #16]
   1b6c4:	ldr	x2, [sp, #256]
   1b6c8:	ldr	x0, [sp, #296]
   1b6cc:	lsl	x0, x0, #5
   1b6d0:	add	x0, x2, x0
   1b6d4:	str	x1, [x0, #24]
   1b6d8:	ldr	w1, [sp, #56]
   1b6dc:	ldr	x2, [sp, #256]
   1b6e0:	ldr	x0, [sp, #296]
   1b6e4:	lsl	x0, x0, #5
   1b6e8:	add	x0, x2, x0
   1b6ec:	str	w1, [x0, #32]
   1b6f0:	ldr	w1, [sp, #60]
   1b6f4:	ldr	x2, [sp, #256]
   1b6f8:	ldr	x0, [sp, #296]
   1b6fc:	lsl	x0, x0, #5
   1b700:	add	x0, x2, x0
   1b704:	str	w1, [x0, #36]
   1b708:	ldr	x0, [sp, #296]
   1b70c:	add	x0, x0, #0x1
   1b710:	str	x0, [sp, #296]
   1b714:	b	1b5cc <__sanitizer_cov_pcs_init@@Base+0x530>
   1b718:	ldr	x30, [sp]
   1b71c:	add	sp, sp, #0x130
   1b720:	ret
   1b724:	stp	x19, x20, [sp, #-128]!
   1b728:	stp	x21, x22, [sp, #16]
   1b72c:	str	x30, [sp, #32]
   1b730:	str	x0, [sp, #72]
   1b734:	str	x1, [sp, #64]
   1b738:	str	x2, [sp, #56]
   1b73c:	strb	w3, [sp, #55]
   1b740:	strb	w4, [sp, #54]
   1b744:	ldr	x0, [sp, #64]
   1b748:	ldr	x0, [x0, #16]
   1b74c:	str	x0, [sp, #112]
   1b750:	str	wzr, [sp, #124]
   1b754:	ldr	x0, [sp, #72]
   1b758:	add	x0, x0, #0x410, lsl #12
   1b75c:	ldrb	w0, [x0, #2632]
   1b760:	cmp	w0, #0x0
   1b764:	b.eq	1b780 <__sanitizer_cov_pcs_init@@Base+0x6e4>  // b.none
   1b768:	ldr	x0, [sp, #64]
   1b76c:	ldr	x0, [x0]
   1b770:	ldr	x1, [x0]
   1b774:	ldr	x0, [sp, #64]
   1b778:	blr	x1
   1b77c:	str	w0, [sp, #124]
   1b780:	ldr	x0, [sp, #72]
   1b784:	add	x4, x0, #0x10
   1b788:	ldr	x0, [sp, #112]
   1b78c:	add	x1, x0, #0x8
   1b790:	ldr	x0, [sp, #56]
   1b794:	ldr	x0, [x0]
   1b798:	ldr	w3, [sp, #124]
   1b79c:	mov	x2, x0
   1b7a0:	mov	x0, x4
   1b7a4:	bl	1c650 <__sanitizer_cov_pcs_init@@Base+0x15b4>
   1b7a8:	and	w0, w0, #0xff
   1b7ac:	cmp	w0, #0x0
   1b7b0:	b.ne	1b94c <__sanitizer_cov_pcs_init@@Base+0x8b0>  // b.any
   1b7b4:	ldr	x0, [sp, #72]
   1b7b8:	add	x4, x0, #0x10
   1b7bc:	ldr	x0, [sp, #112]
   1b7c0:	add	x1, x0, #0x8
   1b7c4:	ldr	x0, [sp, #56]
   1b7c8:	ldr	x0, [x0]
   1b7cc:	ldr	w3, [sp, #124]
   1b7d0:	mov	x2, x0
   1b7d4:	mov	x0, x4
   1b7d8:	bl	1c710 <__sanitizer_cov_pcs_init@@Base+0x1674>
   1b7dc:	and	w0, w0, #0xff
   1b7e0:	cmp	w0, #0x0
   1b7e4:	b.ne	1b954 <__sanitizer_cov_pcs_init@@Base+0x8b8>  // b.any
   1b7e8:	ldr	x0, [sp, #72]
   1b7ec:	add	x1, x0, #0x8
   1b7f0:	add	x0, sp, #0x58
   1b7f4:	bl	f58c <__sanitizer_get_allocated_size@@Base+0xa2c>
   1b7f8:	ldr	x2, [sp, #56]
   1b7fc:	ldr	x1, [sp, #112]
   1b800:	ldr	x0, [sp, #72]
   1b804:	bl	1b2b0 <__sanitizer_cov_pcs_init@@Base+0x214>
   1b808:	ldrb	w0, [sp, #55]
   1b80c:	cmp	w0, #0x0
   1b810:	b.eq	1b890 <__sanitizer_cov_pcs_init@@Base+0x7f4>  // b.none
   1b814:	ldr	x0, [sp, #72]
   1b818:	add	x3, x0, #0x10
   1b81c:	ldr	x0, [sp, #112]
   1b820:	add	x1, x0, #0x8
   1b824:	ldr	x0, [sp, #56]
   1b828:	ldr	x0, [x0]
   1b82c:	mov	x2, x0
   1b830:	mov	x0, x3
   1b834:	bl	1c124 <__sanitizer_cov_pcs_init@@Base+0x1088>
   1b838:	and	w0, w0, #0xff
   1b83c:	eor	w0, w0, #0x1
   1b840:	and	w0, w0, #0xff
   1b844:	and	x0, x0, #0xff
   1b848:	str	x0, [sp, #104]
   1b84c:	str	xzr, [sp, #96]
   1b850:	ldr	x1, [sp, #104]
   1b854:	ldr	x0, [sp, #96]
   1b858:	cmp	x1, x0
   1b85c:	cset	w0, eq  // eq = none
   1b860:	and	w0, w0, #0xff
   1b864:	and	x0, x0, #0xff
   1b868:	cmp	x0, #0x0
   1b86c:	b.eq	1b890 <__sanitizer_cov_pcs_init@@Base+0x7f4>  // b.none
   1b870:	ldr	x4, [sp, #96]
   1b874:	ldr	x3, [sp, #104]
   1b878:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1b87c:	add	x2, x0, #0xc80
   1b880:	mov	w1, #0xa5                  	// #165
   1b884:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1b888:	add	x0, x0, #0xc30
   1b88c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1b890:	ldrb	w0, [sp, #54]
   1b894:	eor	w0, w0, #0x1
   1b898:	and	w0, w0, #0xff
   1b89c:	cmp	w0, #0x0
   1b8a0:	b.eq	1b918 <__sanitizer_cov_pcs_init@@Base+0x87c>  // b.none
   1b8a4:	ldr	x0, [sp, #72]
   1b8a8:	add	x20, x0, #0x10
   1b8ac:	ldr	x0, [sp, #112]
   1b8b0:	add	x21, x0, #0x8
   1b8b4:	ldr	x0, [sp, #56]
   1b8b8:	ldr	x22, [x0]
   1b8bc:	ldr	w0, [sp, #124]
   1b8c0:	cmp	w0, #0x0
   1b8c4:	b.ne	1b8e4 <__sanitizer_cov_pcs_init@@Base+0x848>  // b.any
   1b8c8:	ldr	x0, [sp, #64]
   1b8cc:	ldr	x0, [x0]
   1b8d0:	ldr	x1, [x0]
   1b8d4:	ldr	x0, [sp, #64]
   1b8d8:	blr	x1
   1b8dc:	mov	w19, w0
   1b8e0:	b	1b8e8 <__sanitizer_cov_pcs_init@@Base+0x84c>
   1b8e4:	ldr	w19, [sp, #124]
   1b8e8:	ldr	x0, [sp, #64]
   1b8ec:	ldr	x0, [x0]
   1b8f0:	add	x0, x0, #0x8
   1b8f4:	ldr	x1, [x0]
   1b8f8:	ldr	x0, [sp, #64]
   1b8fc:	blr	x1
   1b900:	mov	w4, w0
   1b904:	mov	w3, w19
   1b908:	mov	x2, x22
   1b90c:	mov	x1, x21
   1b910:	mov	x0, x20
   1b914:	bl	1c1d4 <__sanitizer_cov_pcs_init@@Base+0x1138>
   1b918:	ldr	x0, [sp, #72]
   1b91c:	add	x4, x0, #0x10
   1b920:	ldr	x0, [sp, #112]
   1b924:	add	x1, x0, #0x8
   1b928:	ldr	x0, [sp, #56]
   1b92c:	ldr	x0, [x0]
   1b930:	ldr	w3, [sp, #124]
   1b934:	mov	x2, x0
   1b938:	mov	x0, x4
   1b93c:	bl	1c784 <__sanitizer_cov_pcs_init@@Base+0x16e8>
   1b940:	add	x0, sp, #0x58
   1b944:	bl	f5bc <__sanitizer_get_allocated_size@@Base+0xa5c>
   1b948:	b	1b958 <__sanitizer_cov_pcs_init@@Base+0x8bc>
   1b94c:	nop
   1b950:	b	1b958 <__sanitizer_cov_pcs_init@@Base+0x8bc>
   1b954:	nop
   1b958:	ldp	x21, x22, [sp, #16]
   1b95c:	ldr	x30, [sp, #32]
   1b960:	ldp	x19, x20, [sp], #128
   1b964:	ret
   1b968:	str	x30, [sp, #-48]!
   1b96c:	str	x0, [sp, #40]
   1b970:	str	x1, [sp, #32]
   1b974:	str	x2, [sp, #24]
   1b978:	strb	w3, [sp, #23]
   1b97c:	ldr	x0, [sp, #40]
   1b980:	add	x3, x0, #0x10
   1b984:	ldr	x0, [sp, #32]
   1b988:	ldr	x0, [x0, #16]
   1b98c:	add	x1, x0, #0x8
   1b990:	ldr	x0, [sp, #24]
   1b994:	ldr	x0, [x0]
   1b998:	mov	x2, x0
   1b99c:	mov	x0, x3
   1b9a0:	bl	1c7dc <__sanitizer_cov_pcs_init@@Base+0x1740>
   1b9a4:	nop
   1b9a8:	ldr	x30, [sp], #48
   1b9ac:	ret
   1b9b0:	str	x30, [sp, #-64]!
   1b9b4:	str	x0, [sp, #40]
   1b9b8:	str	x1, [sp, #32]
   1b9bc:	str	x2, [sp, #24]
   1b9c0:	ldr	x0, [sp, #24]
   1b9c4:	ldr	x0, [x0]
   1b9c8:	cmp	x0, #0x0
   1b9cc:	b.eq	1ba38 <__sanitizer_cov_pcs_init@@Base+0x99c>  // b.none
   1b9d0:	ldr	x0, [sp, #40]
   1b9d4:	add	x1, x0, #0x8
   1b9d8:	add	x0, sp, #0x38
   1b9dc:	bl	f58c <__sanitizer_get_allocated_size@@Base+0xa2c>
   1b9e0:	ldr	x0, [sp, #40]
   1b9e4:	add	x2, x0, #0x10
   1b9e8:	ldr	x0, [sp, #24]
   1b9ec:	ldr	x0, [x0]
   1b9f0:	mov	x1, x0
   1b9f4:	mov	x0, x2
   1b9f8:	bl	1bcd8 <__sanitizer_cov_pcs_init@@Base+0xc3c>
   1b9fc:	and	w0, w0, #0xff
   1ba00:	cmp	w0, #0x0
   1ba04:	b.eq	1ba24 <__sanitizer_cov_pcs_init@@Base+0x988>  // b.none
   1ba08:	ldr	x0, [sp, #40]
   1ba0c:	add	x2, x0, #0x10
   1ba10:	ldr	x0, [sp, #24]
   1ba14:	ldr	x0, [x0]
   1ba18:	mov	x1, x0
   1ba1c:	mov	x0, x2
   1ba20:	bl	1c83c <__sanitizer_cov_pcs_init@@Base+0x17a0>
   1ba24:	ldr	x0, [sp, #24]
   1ba28:	str	xzr, [x0]
   1ba2c:	add	x0, sp, #0x38
   1ba30:	bl	f5bc <__sanitizer_get_allocated_size@@Base+0xa5c>
   1ba34:	b	1ba3c <__sanitizer_cov_pcs_init@@Base+0x9a0>
   1ba38:	nop
   1ba3c:	ldr	x30, [sp], #64
   1ba40:	ret
   1ba44:	sub	sp, sp, #0x10
   1ba48:	str	x0, [sp, #8]
   1ba4c:	str	x1, [sp]
   1ba50:	ldr	x0, [sp]
   1ba54:	ldr	x0, [x0, #16]
   1ba58:	ldrb	w0, [x0, #2224]
   1ba5c:	eor	w0, w0, #0x1
   1ba60:	and	w0, w0, #0xff
   1ba64:	cmp	w0, #0x0
   1ba68:	b.eq	1ba74 <__sanitizer_cov_pcs_init@@Base+0x9d8>  // b.none
   1ba6c:	mov	x0, #0x0                   	// #0
   1ba70:	b	1ba8c <__sanitizer_cov_pcs_init@@Base+0x9f0>
   1ba74:	ldr	x0, [sp]
   1ba78:	ldr	x0, [x0, #16]
   1ba7c:	strb	wzr, [x0, #2224]
   1ba80:	ldr	x0, [sp]
   1ba84:	ldr	x0, [x0, #16]
   1ba88:	add	x0, x0, #0x628
   1ba8c:	add	sp, sp, #0x10
   1ba90:	ret
   1ba94:	sub	sp, sp, #0x10
   1ba98:	str	x0, [sp, #8]
   1ba9c:	mov	x0, #0x0                   	// #0
   1baa0:	add	sp, sp, #0x10
   1baa4:	ret
   1baa8:	sub	sp, sp, #0x10
   1baac:	str	x0, [sp, #8]
   1bab0:	str	x1, [sp]
   1bab4:	nop
   1bab8:	add	sp, sp, #0x10
   1babc:	ret
   1bac0:	sub	sp, sp, #0x10
   1bac4:	str	x0, [sp, #8]
   1bac8:	str	x1, [sp]
   1bacc:	mov	x0, #0x0                   	// #0
   1bad0:	add	sp, sp, #0x10
   1bad4:	ret
   1bad8:	sub	sp, sp, #0x10
   1badc:	str	x0, [sp, #8]
   1bae0:	str	x1, [sp]
   1bae4:	nop
   1bae8:	add	sp, sp, #0x10
   1baec:	ret
   1baf0:	sub	sp, sp, #0x20
   1baf4:	str	x0, [sp, #24]
   1baf8:	str	x1, [sp, #16]
   1bafc:	str	x2, [sp, #8]
   1bb00:	nop
   1bb04:	add	sp, sp, #0x20
   1bb08:	ret
   1bb0c:	sub	sp, sp, #0x20
   1bb10:	str	x0, [sp, #24]
   1bb14:	str	x1, [sp, #16]
   1bb18:	str	x2, [sp, #8]
   1bb1c:	strb	w3, [sp, #7]
   1bb20:	nop
   1bb24:	add	sp, sp, #0x20
   1bb28:	ret
   1bb2c:	sub	sp, sp, #0x20
   1bb30:	str	x0, [sp, #24]
   1bb34:	str	x1, [sp, #16]
   1bb38:	str	x2, [sp, #8]
   1bb3c:	strb	w3, [sp, #7]
   1bb40:	strb	w4, [sp, #6]
   1bb44:	nop
   1bb48:	add	sp, sp, #0x20
   1bb4c:	ret
   1bb50:	sub	sp, sp, #0x20
   1bb54:	str	x0, [sp, #24]
   1bb58:	str	x1, [sp, #16]
   1bb5c:	str	x2, [sp, #8]
   1bb60:	strb	w3, [sp, #7]
   1bb64:	nop
   1bb68:	add	sp, sp, #0x20
   1bb6c:	ret
   1bb70:	sub	sp, sp, #0x20
   1bb74:	str	x0, [sp, #24]
   1bb78:	str	x1, [sp, #16]
   1bb7c:	str	x2, [sp, #8]
   1bb80:	nop
   1bb84:	add	sp, sp, #0x20
   1bb88:	ret
   1bb8c:	sub	sp, sp, #0x10
   1bb90:	str	x0, [sp, #8]
   1bb94:	str	x1, [sp]
   1bb98:	mov	x0, #0x0                   	// #0
   1bb9c:	add	sp, sp, #0x10
   1bba0:	ret
   1bba4:	str	x30, [sp, #-32]!
   1bba8:	str	x0, [sp, #24]
   1bbac:	ldr	x0, [sp, #24]
   1bbb0:	bl	eb8c <__sanitizer_get_allocated_size@@Base+0x2c>
   1bbb4:	nop
   1bbb8:	ldr	x30, [sp], #32
   1bbbc:	ret
   1bbc0:	str	x30, [sp, #-64]!
   1bbc4:	str	x0, [sp, #24]
   1bbc8:	ldr	x0, [sp, #24]
   1bbcc:	str	x0, [sp, #56]
   1bbd0:	str	xzr, [sp, #48]
   1bbd4:	ldr	x1, [sp, #56]
   1bbd8:	ldr	x0, [sp, #48]
   1bbdc:	cmp	x1, x0
   1bbe0:	cset	w0, eq  // eq = none
   1bbe4:	and	w0, w0, #0xff
   1bbe8:	and	x0, x0, #0xff
   1bbec:	cmp	x0, #0x0
   1bbf0:	b.eq	1bc14 <__sanitizer_cov_pcs_init@@Base+0xb78>  // b.none
   1bbf4:	ldr	x4, [sp, #48]
   1bbf8:	ldr	x3, [sp, #56]
   1bbfc:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1bc00:	add	x2, x0, #0xb08
   1bc04:	mov	w1, #0x162                 	// #354
   1bc08:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1bc0c:	add	x0, x0, #0xb18
   1bc10:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1bc14:	ldr	x0, [sp, #24]
   1bc18:	rbit	x0, x0
   1bc1c:	clz	x0, x0
   1bc20:	sxtw	x0, w0
   1bc24:	str	x0, [sp, #40]
   1bc28:	ldr	x0, [sp, #40]
   1bc2c:	ldr	x30, [sp], #64
   1bc30:	ret
   1bc34:	sub	sp, sp, #0x10
   1bc38:	str	x0, [sp, #8]
   1bc3c:	adrp	x0, 7b000 <__asan_backtrace_vector_release@@Base+0x2c340>
   1bc40:	add	x1, x0, #0xbb8
   1bc44:	ldr	x0, [sp, #8]
   1bc48:	str	x1, [x0]
   1bc4c:	nop
   1bc50:	add	sp, sp, #0x10
   1bc54:	ret
   1bc58:	str	x30, [sp, #-32]!
   1bc5c:	str	x0, [sp, #24]
   1bc60:	ldr	x0, [sp, #24]
   1bc64:	str	xzr, [x0]
   1bc68:	ldr	x0, [sp, #24]
   1bc6c:	add	x0, x0, #0x8
   1bc70:	bl	1c93c <__sanitizer_cov_pcs_init@@Base+0x18a0>
   1bc74:	ldr	x0, [sp, #24]
   1bc78:	add	x0, x0, #0x210
   1bc7c:	bl	1c93c <__sanitizer_cov_pcs_init@@Base+0x18a0>
   1bc80:	ldr	x0, [sp, #24]
   1bc84:	add	x0, x0, #0x620
   1bc88:	bl	1c984 <__sanitizer_cov_pcs_init@@Base+0x18e8>
   1bc8c:	ldr	x0, [sp, #24]
   1bc90:	add	x0, x0, #0x410, lsl #12
   1bc94:	str	xzr, [x0, #2608]
   1bc98:	nop
   1bc9c:	ldr	x30, [sp], #32
   1bca0:	ret
   1bca4:	str	x30, [sp, #-32]!
   1bca8:	str	x0, [sp, #24]
   1bcac:	ldr	x0, [sp, #24]
   1bcb0:	bl	1c93c <__sanitizer_cov_pcs_init@@Base+0x18a0>
   1bcb4:	ldr	x0, [sp, #24]
   1bcb8:	str	xzr, [x0, #520]
   1bcbc:	ldr	x0, [sp, #24]
   1bcc0:	str	xzr, [x0, #1040]
   1bcc4:	ldr	x0, [sp, #24]
   1bcc8:	str	xzr, [x0, #1560]
   1bccc:	nop
   1bcd0:	ldr	x30, [sp], #32
   1bcd4:	ret
   1bcd8:	stp	x19, x30, [sp, #-32]!
   1bcdc:	str	x0, [sp, #24]
   1bce0:	str	x1, [sp, #16]
   1bce4:	ldr	x0, [sp, #16]
   1bce8:	cmp	x0, #0x0
   1bcec:	b.eq	1bd28 <__sanitizer_cov_pcs_init@@Base+0xc8c>  // b.none
   1bcf0:	ldr	x0, [sp, #24]
   1bcf4:	bl	1c9f0 <__sanitizer_cov_pcs_init@@Base+0x1954>
   1bcf8:	mov	x1, x0
   1bcfc:	ldr	x0, [sp, #16]
   1bd00:	udiv	x19, x0, x1
   1bd04:	ldr	x0, [sp, #24]
   1bd08:	bl	1c9f0 <__sanitizer_cov_pcs_init@@Base+0x1954>
   1bd0c:	mul	x1, x19, x0
   1bd10:	ldr	x0, [sp, #24]
   1bd14:	ldr	x0, [x0]
   1bd18:	cmp	x1, x0
   1bd1c:	b.ne	1bd28 <__sanitizer_cov_pcs_init@@Base+0xc8c>  // b.any
   1bd20:	mov	w0, #0x1                   	// #1
   1bd24:	b	1bd2c <__sanitizer_cov_pcs_init@@Base+0xc90>
   1bd28:	mov	w0, #0x0                   	// #0
   1bd2c:	ldp	x19, x30, [sp], #32
   1bd30:	ret
   1bd34:	str	x30, [sp, #-64]!
   1bd38:	str	x0, [sp, #24]
   1bd3c:	str	x1, [sp, #16]
   1bd40:	ldr	x0, [sp, #24]
   1bd44:	add	x0, x0, #0x8
   1bd48:	bl	1ca0c <__sanitizer_cov_pcs_init@@Base+0x1970>
   1bd4c:	and	w0, w0, #0xff
   1bd50:	eor	w0, w0, #0x1
   1bd54:	and	w0, w0, #0xff
   1bd58:	cmp	w0, #0x0
   1bd5c:	b.eq	1bd70 <__sanitizer_cov_pcs_init@@Base+0xcd4>  // b.none
   1bd60:	ldr	x1, [sp, #16]
   1bd64:	ldr	x0, [sp, #24]
   1bd68:	bl	1ca70 <__sanitizer_cov_pcs_init@@Base+0x19d4>
   1bd6c:	b	1bfd4 <__sanitizer_cov_pcs_init@@Base+0xf38>
   1bd70:	ldr	x0, [sp, #24]
   1bd74:	add	x0, x0, #0x210
   1bd78:	bl	1ca0c <__sanitizer_cov_pcs_init@@Base+0x1970>
   1bd7c:	and	w0, w0, #0xff
   1bd80:	eor	w0, w0, #0x1
   1bd84:	and	w0, w0, #0xff
   1bd88:	cmp	w0, #0x0
   1bd8c:	b.eq	1bf78 <__sanitizer_cov_pcs_init@@Base+0xedc>  // b.none
   1bd90:	ldr	x0, [sp, #24]
   1bd94:	add	x0, x0, #0x410, lsl #12
   1bd98:	ldr	x0, [x0, #2608]
   1bd9c:	sub	x0, x0, #0x1
   1bda0:	str	x0, [sp, #56]
   1bda4:	ldr	x0, [sp, #56]
   1bda8:	cmp	x0, #0x0
   1bdac:	b.lt	1bec8 <__sanitizer_cov_pcs_init@@Base+0xe2c>  // b.tstop
   1bdb0:	ldr	x0, [sp, #24]
   1bdb4:	add	x3, x0, #0x210
   1bdb8:	ldr	x1, [sp, #24]
   1bdbc:	ldr	x2, [sp, #56]
   1bdc0:	mov	x0, #0x10a3                	// #4259
   1bdc4:	movk	x0, #0x2, lsl #16
   1bdc8:	add	x0, x2, x0
   1bdcc:	lsl	x0, x0, #4
   1bdd0:	add	x0, x1, x0
   1bdd4:	ldrh	w0, [x0]
   1bdd8:	and	x0, x0, #0xffff
   1bddc:	mov	x1, x0
   1bde0:	mov	x0, x3
   1bde4:	bl	1cabc <__sanitizer_cov_pcs_init@@Base+0x1a20>
   1bde8:	and	w0, w0, #0xff
   1bdec:	cmp	w0, #0x0
   1bdf0:	b.ne	1be38 <__sanitizer_cov_pcs_init@@Base+0xd9c>  // b.any
   1bdf4:	ldr	x0, [sp, #24]
   1bdf8:	add	x3, x0, #0x210
   1bdfc:	ldr	x1, [sp, #24]
   1be00:	ldr	x2, [sp, #56]
   1be04:	mov	x0, #0x10a3                	// #4259
   1be08:	movk	x0, #0x2, lsl #16
   1be0c:	add	x0, x2, x0
   1be10:	lsl	x0, x0, #4
   1be14:	add	x0, x1, x0
   1be18:	ldrh	w0, [x0, #2]
   1be1c:	and	x0, x0, #0xffff
   1be20:	mov	x1, x0
   1be24:	mov	x0, x3
   1be28:	bl	1cabc <__sanitizer_cov_pcs_init@@Base+0x1a20>
   1be2c:	and	w0, w0, #0xff
   1be30:	cmp	w0, #0x0
   1be34:	b.eq	1be40 <__sanitizer_cov_pcs_init@@Base+0xda4>  // b.none
   1be38:	mov	w0, #0x1                   	// #1
   1be3c:	b	1be44 <__sanitizer_cov_pcs_init@@Base+0xda8>
   1be40:	mov	w0, #0x0                   	// #0
   1be44:	cmp	w0, #0x0
   1be48:	b.eq	1beb8 <__sanitizer_cov_pcs_init@@Base+0xe1c>  // b.none
   1be4c:	ldr	x1, [sp, #56]
   1be50:	mov	x0, #0x10a3                	// #4259
   1be54:	movk	x0, #0x2, lsl #16
   1be58:	add	x0, x1, x0
   1be5c:	lsl	x0, x0, #4
   1be60:	ldr	x1, [sp, #24]
   1be64:	add	x2, x1, x0
   1be68:	ldr	x0, [sp, #24]
   1be6c:	add	x0, x0, #0x410, lsl #12
   1be70:	ldr	x0, [x0, #2608]
   1be74:	sub	x1, x0, #0x1
   1be78:	mov	x0, #0x10a3                	// #4259
   1be7c:	movk	x0, #0x2, lsl #16
   1be80:	add	x0, x1, x0
   1be84:	lsl	x0, x0, #4
   1be88:	ldr	x1, [sp, #24]
   1be8c:	add	x0, x1, x0
   1be90:	mov	x1, x0
   1be94:	mov	x0, x2
   1be98:	bl	1cb70 <__sanitizer_cov_pcs_init@@Base+0x1ad4>
   1be9c:	ldr	x0, [sp, #24]
   1bea0:	add	x0, x0, #0x410, lsl #12
   1bea4:	ldr	x0, [x0, #2608]
   1bea8:	sub	x1, x0, #0x1
   1beac:	ldr	x0, [sp, #24]
   1beb0:	add	x0, x0, #0x410, lsl #12
   1beb4:	str	x1, [x0, #2608]
   1beb8:	ldr	x0, [sp, #56]
   1bebc:	sub	x0, x0, #0x1
   1bec0:	str	x0, [sp, #56]
   1bec4:	b	1bda4 <__sanitizer_cov_pcs_init@@Base+0xd08>
   1bec8:	ldr	x0, [sp, #24]
   1becc:	add	x0, x0, #0x8
   1bed0:	bl	1ca0c <__sanitizer_cov_pcs_init@@Base+0x1970>
   1bed4:	and	w0, w0, #0xff
   1bed8:	and	x0, x0, #0xff
   1bedc:	str	x0, [sp, #48]
   1bee0:	str	xzr, [sp, #40]
   1bee4:	ldr	x1, [sp, #48]
   1bee8:	ldr	x0, [sp, #40]
   1beec:	cmp	x1, x0
   1bef0:	cset	w0, eq  // eq = none
   1bef4:	and	w0, w0, #0xff
   1bef8:	and	x0, x0, #0xff
   1befc:	cmp	x0, #0x0
   1bf00:	b.eq	1bf24 <__sanitizer_cov_pcs_init@@Base+0xe88>  // b.none
   1bf04:	ldr	x4, [sp, #40]
   1bf08:	ldr	x3, [sp, #48]
   1bf0c:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1bf10:	add	x2, x0, #0xca8
   1bf14:	mov	w1, #0xa7                  	// #167
   1bf18:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1bf1c:	add	x0, x0, #0xcd0
   1bf20:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1bf24:	ldr	x0, [sp, #24]
   1bf28:	add	x2, x0, #0x620
   1bf2c:	ldr	x0, [sp, #24]
   1bf30:	add	x0, x0, #0x210
   1bf34:	mov	x1, x0
   1bf38:	mov	x0, x2
   1bf3c:	bl	1cbb0 <__sanitizer_cov_pcs_init@@Base+0x1b14>
   1bf40:	ldr	x0, [sp, #24]
   1bf44:	add	x2, x0, #0x8
   1bf48:	ldr	x0, [sp, #24]
   1bf4c:	add	x0, x0, #0x210
   1bf50:	mov	x1, x0
   1bf54:	mov	x0, x2
   1bf58:	bl	1cc3c <__sanitizer_cov_pcs_init@@Base+0x1ba0>
   1bf5c:	ldr	x0, [sp, #24]
   1bf60:	add	x0, x0, #0x210
   1bf64:	bl	1c93c <__sanitizer_cov_pcs_init@@Base+0x18a0>
   1bf68:	ldr	x1, [sp, #16]
   1bf6c:	ldr	x0, [sp, #24]
   1bf70:	bl	1ca70 <__sanitizer_cov_pcs_init@@Base+0x19d4>
   1bf74:	b	1bfd4 <__sanitizer_cov_pcs_init@@Base+0xf38>
   1bf78:	ldr	x0, [sp, #24]
   1bf7c:	bl	1c9f0 <__sanitizer_cov_pcs_init@@Base+0x1954>
   1bf80:	mov	x1, x0
   1bf84:	ldr	x0, [sp, #24]
   1bf88:	ldr	x0, [x0]
   1bf8c:	add	x1, x1, x0
   1bf90:	ldr	x0, [sp, #24]
   1bf94:	str	x1, [x0]
   1bf98:	ldr	x0, [sp, #24]
   1bf9c:	add	x0, x0, #0x210
   1bfa0:	bl	1c93c <__sanitizer_cov_pcs_init@@Base+0x18a0>
   1bfa4:	ldr	x0, [sp, #24]
   1bfa8:	add	x0, x0, #0x8
   1bfac:	bl	1cd5c <__sanitizer_cov_pcs_init@@Base+0x1cc0>
   1bfb0:	ldr	x0, [sp, #24]
   1bfb4:	add	x0, x0, #0x620
   1bfb8:	bl	1c984 <__sanitizer_cov_pcs_init@@Base+0x18e8>
   1bfbc:	ldr	x0, [sp, #24]
   1bfc0:	add	x0, x0, #0x410, lsl #12
   1bfc4:	str	xzr, [x0, #2608]
   1bfc8:	ldr	x1, [sp, #16]
   1bfcc:	ldr	x0, [sp, #24]
   1bfd0:	bl	1ca70 <__sanitizer_cov_pcs_init@@Base+0x19d4>
   1bfd4:	ldr	x30, [sp], #64
   1bfd8:	ret
   1bfdc:	str	x30, [sp, #-32]!
   1bfe0:	str	x0, [sp, #24]
   1bfe4:	str	x1, [sp, #16]
   1bfe8:	ldr	x0, [sp, #24]
   1bfec:	ldr	x0, [x0]
   1bff0:	mov	x1, x0
   1bff4:	ldr	x0, [sp, #16]
   1bff8:	bl	1cde8 <__sanitizer_cov_pcs_init@@Base+0x1d4c>
   1bffc:	nop
   1c000:	ldr	x30, [sp], #32
   1c004:	ret
   1c008:	str	x30, [sp, #-32]!
   1c00c:	str	x0, [sp, #24]
   1c010:	ldr	x0, [sp, #24]
   1c014:	bl	1ca0c <__sanitizer_cov_pcs_init@@Base+0x1970>
   1c018:	and	w0, w0, #0xff
   1c01c:	ldr	x30, [sp], #32
   1c020:	ret
   1c024:	stp	x19, x30, [sp, #-80]!
   1c028:	str	x0, [sp, #40]
   1c02c:	str	x1, [sp, #32]
   1c030:	str	x2, [sp, #24]
   1c034:	ldr	x0, [sp, #32]
   1c038:	bl	1ce3c <__sanitizer_cov_pcs_init@@Base+0x1da0>
   1c03c:	str	x0, [sp, #64]
   1c040:	ldr	x0, [sp, #24]
   1c044:	cmp	x0, #0x0
   1c048:	b.eq	1c084 <__sanitizer_cov_pcs_init@@Base+0xfe8>  // b.none
   1c04c:	ldr	x0, [sp, #40]
   1c050:	ldr	x0, [x0]
   1c054:	ldr	x1, [sp, #64]
   1c058:	cmp	x1, x0
   1c05c:	b.ne	1c084 <__sanitizer_cov_pcs_init@@Base+0xfe8>  // b.any
   1c060:	ldr	x1, [sp, #24]
   1c064:	ldr	x0, [sp, #40]
   1c068:	bl	1ce54 <__sanitizer_cov_pcs_init@@Base+0x1db8>
   1c06c:	mov	x1, x0
   1c070:	ldr	x0, [sp, #64]
   1c074:	cmp	x0, x1
   1c078:	b.ne	1c084 <__sanitizer_cov_pcs_init@@Base+0xfe8>  // b.any
   1c07c:	mov	w0, #0x1                   	// #1
   1c080:	b	1c088 <__sanitizer_cov_pcs_init@@Base+0xfec>
   1c084:	mov	w0, #0x0                   	// #0
   1c088:	cmp	w0, #0x0
   1c08c:	b.eq	1c118 <__sanitizer_cov_pcs_init@@Base+0x107c>  // b.none
   1c090:	ldr	x1, [sp, #24]
   1c094:	ldr	x0, [sp, #40]
   1c098:	bl	1ce88 <__sanitizer_cov_pcs_init@@Base+0x1dec>
   1c09c:	str	x0, [sp, #56]
   1c0a0:	str	xzr, [sp, #72]
   1c0a4:	ldr	x0, [sp, #32]
   1c0a8:	bl	1ceb8 <__sanitizer_cov_pcs_init@@Base+0x1e1c>
   1c0ac:	str	x0, [sp, #48]
   1c0b0:	ldr	x1, [sp, #72]
   1c0b4:	ldr	x0, [sp, #48]
   1c0b8:	cmp	x1, x0
   1c0bc:	b.cs	1c110 <__sanitizer_cov_pcs_init@@Base+0x1074>  // b.hs, b.nlast
   1c0c0:	ldr	x0, [sp, #40]
   1c0c4:	add	x19, x0, #0x620
   1c0c8:	ldr	x1, [sp, #72]
   1c0cc:	ldr	x0, [sp, #32]
   1c0d0:	bl	1ced0 <__sanitizer_cov_pcs_init@@Base+0x1e34>
   1c0d4:	ldr	x2, [sp, #56]
   1c0d8:	mov	x1, x0
   1c0dc:	mov	x0, x19
   1c0e0:	bl	1cf00 <__sanitizer_cov_pcs_init@@Base+0x1e64>
   1c0e4:	and	w0, w0, #0xff
   1c0e8:	eor	w0, w0, #0x1
   1c0ec:	and	w0, w0, #0xff
   1c0f0:	cmp	w0, #0x0
   1c0f4:	b.eq	1c100 <__sanitizer_cov_pcs_init@@Base+0x1064>  // b.none
   1c0f8:	mov	w0, #0x0                   	// #0
   1c0fc:	b	1c11c <__sanitizer_cov_pcs_init@@Base+0x1080>
   1c100:	ldr	x0, [sp, #72]
   1c104:	add	x0, x0, #0x1
   1c108:	str	x0, [sp, #72]
   1c10c:	b	1c0b0 <__sanitizer_cov_pcs_init@@Base+0x1014>
   1c110:	mov	w0, #0x1                   	// #1
   1c114:	b	1c11c <__sanitizer_cov_pcs_init@@Base+0x1080>
   1c118:	mov	w0, #0x0                   	// #0
   1c11c:	ldp	x19, x30, [sp], #80
   1c120:	ret
   1c124:	stp	x19, x30, [sp, #-48]!
   1c128:	str	x0, [sp, #40]
   1c12c:	str	x1, [sp, #32]
   1c130:	str	x2, [sp, #24]
   1c134:	ldr	x0, [sp, #40]
   1c138:	ldr	x0, [x0]
   1c13c:	mov	x1, x0
   1c140:	ldr	x0, [sp, #32]
   1c144:	bl	1cf40 <__sanitizer_cov_pcs_init@@Base+0x1ea4>
   1c148:	mov	x19, x0
   1c14c:	ldr	x1, [sp, #24]
   1c150:	ldr	x0, [sp, #40]
   1c154:	bl	1cfac <__sanitizer_cov_pcs_init@@Base+0x1f10>
   1c158:	mov	x1, x0
   1c15c:	mov	x0, x19
   1c160:	bl	1cabc <__sanitizer_cov_pcs_init@@Base+0x1a20>
   1c164:	and	w0, w0, #0xff
   1c168:	ldp	x19, x30, [sp], #48
   1c16c:	ret
   1c170:	stp	x19, x30, [sp, #-64]!
   1c174:	str	x0, [sp, #40]
   1c178:	str	x1, [sp, #32]
   1c17c:	str	x2, [sp, #24]
   1c180:	ldr	x1, [sp, #32]
   1c184:	ldr	x0, [sp, #40]
   1c188:	bl	1bfdc <__sanitizer_cov_pcs_init@@Base+0xf40>
   1c18c:	ldr	x1, [sp, #24]
   1c190:	ldr	x0, [sp, #40]
   1c194:	bl	1cfac <__sanitizer_cov_pcs_init@@Base+0x1f10>
   1c198:	str	x0, [sp, #56]
   1c19c:	ldr	x0, [sp, #40]
   1c1a0:	add	x19, x0, #0x620
   1c1a4:	ldr	x0, [sp, #40]
   1c1a8:	ldr	x0, [x0]
   1c1ac:	mov	x1, x0
   1c1b0:	ldr	x0, [sp, #32]
   1c1b4:	bl	1cf40 <__sanitizer_cov_pcs_init@@Base+0x1ea4>
   1c1b8:	mov	x2, x0
   1c1bc:	ldr	x1, [sp, #56]
   1c1c0:	mov	x0, x19
   1c1c4:	bl	1cfd8 <__sanitizer_cov_pcs_init@@Base+0x1f3c>
   1c1c8:	and	w0, w0, #0xff
   1c1cc:	ldp	x19, x30, [sp], #64
   1c1d0:	ret
   1c1d4:	stp	x19, x30, [sp, #-416]!
   1c1d8:	str	x0, [sp, #40]
   1c1dc:	str	x1, [sp, #32]
   1c1e0:	str	x2, [sp, #24]
   1c1e4:	str	w3, [sp, #20]
   1c1e8:	str	w4, [sp, #16]
   1c1ec:	ldr	x1, [sp, #32]
   1c1f0:	ldr	x0, [sp, #40]
   1c1f4:	bl	1bfdc <__sanitizer_cov_pcs_init@@Base+0xf40>
   1c1f8:	ldr	x1, [sp, #24]
   1c1fc:	ldr	x0, [sp, #40]
   1c200:	bl	1cfac <__sanitizer_cov_pcs_init@@Base+0x1f10>
   1c204:	str	x0, [sp, #400]
   1c208:	ldr	x0, [sp, #40]
   1c20c:	add	x19, x0, #0x620
   1c210:	ldr	x0, [sp, #40]
   1c214:	ldr	x0, [x0]
   1c218:	mov	x1, x0
   1c21c:	ldr	x0, [sp, #32]
   1c220:	bl	1cf40 <__sanitizer_cov_pcs_init@@Base+0x1ea4>
   1c224:	mov	x1, x0
   1c228:	add	x0, sp, #0x48
   1c22c:	mov	x4, #0x28                  	// #40
   1c230:	mov	x3, x0
   1c234:	ldr	x2, [sp, #400]
   1c238:	mov	x0, x19
   1c23c:	bl	1d0c8 <__sanitizer_cov_pcs_init@@Base+0x202c>
   1c240:	str	x0, [sp, #392]
   1c244:	str	xzr, [sp, #408]
   1c248:	ldr	x1, [sp, #408]
   1c24c:	ldr	x0, [sp, #392]
   1c250:	cmp	x1, x0
   1c254:	b.cs	1c310 <__sanitizer_cov_pcs_init@@Base+0x1274>  // b.hs, b.nlast
   1c258:	ldr	x0, [sp, #40]
   1c25c:	add	x0, x0, #0x410, lsl #12
   1c260:	ldr	x1, [x0, #2608]
   1c264:	mov	x0, #0x1ffff               	// #131071
   1c268:	cmp	x1, x0
   1c26c:	b.hi	1c300 <__sanitizer_cov_pcs_init@@Base+0x1264>  // b.pmore
   1c270:	ldr	x0, [sp, #408]
   1c274:	lsl	x0, x0, #3
   1c278:	add	x1, sp, #0x48
   1c27c:	ldr	x0, [x1, x0]
   1c280:	and	w0, w0, #0xffff
   1c284:	strh	w0, [sp, #56]
   1c288:	ldr	x0, [sp, #400]
   1c28c:	and	w0, w0, #0xffff
   1c290:	strh	w0, [sp, #58]
   1c294:	ldr	x0, [sp, #408]
   1c298:	lsl	x0, x0, #3
   1c29c:	add	x1, sp, #0x48
   1c2a0:	ldr	x0, [x1, x0]
   1c2a4:	mov	x1, x0
   1c2a8:	ldr	x0, [sp, #32]
   1c2ac:	bl	1d194 <__sanitizer_cov_pcs_init@@Base+0x20f8>
   1c2b0:	str	w0, [sp, #60]
   1c2b4:	ldr	w0, [sp, #20]
   1c2b8:	str	w0, [sp, #64]
   1c2bc:	ldr	w0, [sp, #16]
   1c2c0:	str	w0, [sp, #68]
   1c2c4:	ldr	x0, [sp, #40]
   1c2c8:	add	x0, x0, #0x410, lsl #12
   1c2cc:	ldr	x0, [x0, #2608]
   1c2d0:	add	x2, x0, #0x1
   1c2d4:	ldr	x1, [sp, #40]
   1c2d8:	add	x1, x1, #0x410, lsl #12
   1c2dc:	str	x2, [x1, #2608]
   1c2e0:	ldr	x1, [sp, #40]
   1c2e4:	mov	x2, #0x10a3                	// #4259
   1c2e8:	movk	x2, #0x2, lsl #16
   1c2ec:	add	x0, x0, x2
   1c2f0:	lsl	x0, x0, #4
   1c2f4:	add	x2, x1, x0
   1c2f8:	ldp	x0, x1, [sp, #56]
   1c2fc:	stp	x0, x1, [x2]
   1c300:	ldr	x0, [sp, #408]
   1c304:	add	x0, x0, #0x1
   1c308:	str	x0, [sp, #408]
   1c30c:	b	1c248 <__sanitizer_cov_pcs_init@@Base+0x11ac>
   1c310:	ldr	x0, [sp, #392]
   1c314:	ldp	x19, x30, [sp], #416
   1c318:	ret
   1c31c:	stp	x19, x30, [sp, #-128]!
   1c320:	str	x0, [sp, #56]
   1c324:	str	x1, [sp, #48]
   1c328:	str	x2, [sp, #40]
   1c32c:	str	x3, [sp, #32]
   1c330:	str	x4, [sp, #24]
   1c334:	ldr	x0, [sp, #56]
   1c338:	add	x19, x0, #0x418
   1c33c:	ldr	x0, [sp, #56]
   1c340:	ldr	x0, [x0]
   1c344:	mov	x1, x0
   1c348:	ldr	x0, [sp, #48]
   1c34c:	bl	1cf40 <__sanitizer_cov_pcs_init@@Base+0x1ea4>
   1c350:	mov	x1, x0
   1c354:	mov	x0, x19
   1c358:	bl	1d214 <__sanitizer_cov_pcs_init@@Base+0x2178>
   1c35c:	ldr	x1, [sp, #40]
   1c360:	ldr	x0, [sp, #56]
   1c364:	bl	1cfac <__sanitizer_cov_pcs_init@@Base+0x1f10>
   1c368:	str	x0, [sp, #112]
   1c36c:	ldr	x0, [sp, #56]
   1c370:	add	x0, x0, #0x418
   1c374:	ldr	x1, [sp, #112]
   1c378:	bl	1cabc <__sanitizer_cov_pcs_init@@Base+0x1a20>
   1c37c:	and	w0, w0, #0xff
   1c380:	eor	w0, w0, #0x1
   1c384:	and	w0, w0, #0xff
   1c388:	and	x0, x0, #0xff
   1c38c:	str	x0, [sp, #104]
   1c390:	str	xzr, [sp, #96]
   1c394:	ldr	x1, [sp, #104]
   1c398:	ldr	x0, [sp, #96]
   1c39c:	cmp	x1, x0
   1c3a0:	cset	w0, eq  // eq = none
   1c3a4:	and	w0, w0, #0xff
   1c3a8:	and	x0, x0, #0xff
   1c3ac:	cmp	x0, #0x0
   1c3b0:	b.eq	1c3d4 <__sanitizer_cov_pcs_init@@Base+0x1338>  // b.none
   1c3b4:	ldr	x4, [sp, #96]
   1c3b8:	ldr	x3, [sp, #104]
   1c3bc:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1c3c0:	add	x2, x0, #0xd18
   1c3c4:	mov	w1, #0x13e                 	// #318
   1c3c8:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1c3cc:	add	x0, x0, #0xcd0
   1c3d0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1c3d4:	ldr	x0, [sp, #56]
   1c3d8:	add	x5, x0, #0x620
   1c3dc:	ldr	x0, [sp, #56]
   1c3e0:	add	x0, x0, #0x418
   1c3e4:	ldr	x4, [sp, #24]
   1c3e8:	ldr	x3, [sp, #32]
   1c3ec:	mov	x2, x0
   1c3f0:	ldr	x1, [sp, #112]
   1c3f4:	mov	x0, x5
   1c3f8:	bl	1d240 <__sanitizer_cov_pcs_init@@Base+0x21a4>
   1c3fc:	str	x0, [sp, #88]
   1c400:	str	xzr, [sp, #120]
   1c404:	ldr	x1, [sp, #120]
   1c408:	ldr	x0, [sp, #88]
   1c40c:	cmp	x1, x0
   1c410:	b.cs	1c458 <__sanitizer_cov_pcs_init@@Base+0x13bc>  // b.hs, b.nlast
   1c414:	ldr	x0, [sp, #120]
   1c418:	lsl	x0, x0, #3
   1c41c:	ldr	x1, [sp, #32]
   1c420:	add	x0, x1, x0
   1c424:	ldr	x2, [x0]
   1c428:	ldr	x0, [sp, #120]
   1c42c:	lsl	x0, x0, #3
   1c430:	ldr	x1, [sp, #32]
   1c434:	add	x19, x1, x0
   1c438:	mov	x1, x2
   1c43c:	ldr	x0, [sp, #56]
   1c440:	bl	1d2c8 <__sanitizer_cov_pcs_init@@Base+0x222c>
   1c444:	str	x0, [x19]
   1c448:	ldr	x0, [sp, #120]
   1c44c:	add	x0, x0, #0x1
   1c450:	str	x0, [sp, #120]
   1c454:	b	1c404 <__sanitizer_cov_pcs_init@@Base+0x1368>
   1c458:	ldr	x0, [sp, #88]
   1c45c:	cmp	x0, #0x0
   1c460:	b.eq	1c4b8 <__sanitizer_cov_pcs_init@@Base+0x141c>  // b.none
   1c464:	ldr	x0, [sp, #32]
   1c468:	ldr	x0, [x0]
   1c46c:	str	x0, [sp, #80]
   1c470:	ldr	x0, [sp, #40]
   1c474:	str	x0, [sp, #72]
   1c478:	ldr	x1, [sp, #80]
   1c47c:	ldr	x0, [sp, #72]
   1c480:	cmp	x1, x0
   1c484:	cset	w0, ne  // ne = any
   1c488:	and	w0, w0, #0xff
   1c48c:	and	x0, x0, #0xff
   1c490:	cmp	x0, #0x0
   1c494:	b.eq	1c4b8 <__sanitizer_cov_pcs_init@@Base+0x141c>  // b.none
   1c498:	ldr	x4, [sp, #72]
   1c49c:	ldr	x3, [sp, #80]
   1c4a0:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1c4a4:	add	x2, x0, #0xd38
   1c4a8:	mov	w1, #0x143                 	// #323
   1c4ac:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1c4b0:	add	x0, x0, #0xcd0
   1c4b4:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1c4b8:	ldr	x0, [sp, #88]
   1c4bc:	ldp	x19, x30, [sp], #128
   1c4c0:	ret
   1c4c4:	str	x30, [sp, #-32]!
   1c4c8:	str	x0, [sp, #24]
   1c4cc:	str	x1, [sp, #16]
   1c4d0:	ldr	x1, [sp, #16]
   1c4d4:	ldr	x0, [sp, #24]
   1c4d8:	bl	1cfac <__sanitizer_cov_pcs_init@@Base+0x1f10>
   1c4dc:	mov	x2, x0
   1c4e0:	ldr	x0, [sp, #24]
   1c4e4:	mov	x1, #0x1146                	// #4422
   1c4e8:	movk	x1, #0x4, lsl #16
   1c4ec:	add	x1, x2, x1
   1c4f0:	ldr	x0, [x0, x1, lsl #3]
   1c4f4:	ldr	x30, [sp], #32
   1c4f8:	ret
   1c4fc:	str	x30, [sp, #-96]!
   1c500:	str	x0, [sp, #56]
   1c504:	str	x1, [sp, #48]
   1c508:	str	x2, [sp, #40]
   1c50c:	str	x3, [sp, #32]
   1c510:	str	x4, [sp, #24]
   1c514:	str	x5, [sp, #16]
   1c518:	ldr	x1, [sp, #48]
   1c51c:	ldr	x0, [sp, #56]
   1c520:	bl	1cfac <__sanitizer_cov_pcs_init@@Base+0x1f10>
   1c524:	str	x0, [sp, #80]
   1c528:	ldr	x1, [sp, #40]
   1c52c:	ldr	x0, [sp, #56]
   1c530:	bl	1cfac <__sanitizer_cov_pcs_init@@Base+0x1f10>
   1c534:	str	x0, [sp, #72]
   1c538:	str	xzr, [sp, #88]
   1c53c:	ldr	x0, [sp, #56]
   1c540:	add	x0, x0, #0x410, lsl #12
   1c544:	ldr	x0, [x0, #2608]
   1c548:	ldr	x1, [sp, #88]
   1c54c:	cmp	x1, x0
   1c550:	b.cs	1c644 <__sanitizer_cov_pcs_init@@Base+0x15a8>  // b.hs, b.nlast
   1c554:	ldr	x1, [sp, #56]
   1c558:	ldr	x2, [sp, #88]
   1c55c:	mov	x0, #0x10a3                	// #4259
   1c560:	movk	x0, #0x2, lsl #16
   1c564:	add	x0, x2, x0
   1c568:	lsl	x0, x0, #4
   1c56c:	add	x0, x1, x0
   1c570:	ldrh	w0, [x0]
   1c574:	and	x0, x0, #0xffff
   1c578:	ldr	x1, [sp, #80]
   1c57c:	cmp	x1, x0
   1c580:	b.ne	1c634 <__sanitizer_cov_pcs_init@@Base+0x1598>  // b.any
   1c584:	ldr	x1, [sp, #56]
   1c588:	ldr	x2, [sp, #88]
   1c58c:	mov	x0, #0x10a3                	// #4259
   1c590:	movk	x0, #0x2, lsl #16
   1c594:	add	x0, x2, x0
   1c598:	lsl	x0, x0, #4
   1c59c:	add	x0, x1, x0
   1c5a0:	ldrh	w0, [x0, #2]
   1c5a4:	and	x0, x0, #0xffff
   1c5a8:	ldr	x1, [sp, #72]
   1c5ac:	cmp	x1, x0
   1c5b0:	b.ne	1c634 <__sanitizer_cov_pcs_init@@Base+0x1598>  // b.any
   1c5b4:	ldr	x1, [sp, #56]
   1c5b8:	ldr	x2, [sp, #88]
   1c5bc:	mov	x0, #0x10a3                	// #4259
   1c5c0:	movk	x0, #0x2, lsl #16
   1c5c4:	add	x0, x2, x0
   1c5c8:	lsl	x0, x0, #4
   1c5cc:	add	x0, x1, x0
   1c5d0:	ldr	w1, [x0, #4]
   1c5d4:	ldr	x0, [sp, #32]
   1c5d8:	str	w1, [x0]
   1c5dc:	ldr	x1, [sp, #56]
   1c5e0:	ldr	x2, [sp, #88]
   1c5e4:	mov	x0, #0x10a3                	// #4259
   1c5e8:	movk	x0, #0x2, lsl #16
   1c5ec:	add	x0, x2, x0
   1c5f0:	lsl	x0, x0, #4
   1c5f4:	add	x0, x1, x0
   1c5f8:	ldr	w1, [x0, #8]
   1c5fc:	ldr	x0, [sp, #24]
   1c600:	str	w1, [x0]
   1c604:	ldr	x1, [sp, #56]
   1c608:	ldr	x2, [sp, #88]
   1c60c:	mov	x0, #0x10a3                	// #4259
   1c610:	movk	x0, #0x2, lsl #16
   1c614:	add	x0, x2, x0
   1c618:	lsl	x0, x0, #4
   1c61c:	add	x0, x1, x0
   1c620:	ldr	w1, [x0, #12]
   1c624:	ldr	x0, [sp, #16]
   1c628:	str	w1, [x0]
   1c62c:	mov	w0, #0x1                   	// #1
   1c630:	b	1c648 <__sanitizer_cov_pcs_init@@Base+0x15ac>
   1c634:	ldr	x0, [sp, #88]
   1c638:	add	x0, x0, #0x1
   1c63c:	str	x0, [sp, #88]
   1c640:	b	1c53c <__sanitizer_cov_pcs_init@@Base+0x14a0>
   1c644:	mov	w0, #0x0                   	// #0
   1c648:	ldr	x30, [sp], #96
   1c64c:	ret
   1c650:	stp	x19, x30, [sp, #-48]!
   1c654:	str	x0, [sp, #40]
   1c658:	str	x1, [sp, #32]
   1c65c:	str	x2, [sp, #24]
   1c660:	str	w3, [sp, #20]
   1c664:	ldr	x0, [sp, #32]
   1c668:	bl	1c008 <__sanitizer_cov_pcs_init@@Base+0xf6c>
   1c66c:	and	w0, w0, #0xff
   1c670:	eor	w0, w0, #0x1
   1c674:	and	w0, w0, #0xff
   1c678:	cmp	w0, #0x0
   1c67c:	b.eq	1c688 <__sanitizer_cov_pcs_init@@Base+0x15ec>  // b.none
   1c680:	mov	w0, #0x0                   	// #0
   1c684:	b	1c708 <__sanitizer_cov_pcs_init@@Base+0x166c>
   1c688:	ldr	x0, [sp, #32]
   1c68c:	bl	1ce3c <__sanitizer_cov_pcs_init@@Base+0x1da0>
   1c690:	cmp	x0, #0x0
   1c694:	b.eq	1c6c0 <__sanitizer_cov_pcs_init@@Base+0x1624>  // b.none
   1c698:	ldr	x0, [sp, #32]
   1c69c:	bl	1ce3c <__sanitizer_cov_pcs_init@@Base+0x1da0>
   1c6a0:	mov	x19, x0
   1c6a4:	ldr	x1, [sp, #24]
   1c6a8:	ldr	x0, [sp, #40]
   1c6ac:	bl	1ce54 <__sanitizer_cov_pcs_init@@Base+0x1db8>
   1c6b0:	cmp	x19, x0
   1c6b4:	b.ne	1c6c0 <__sanitizer_cov_pcs_init@@Base+0x1624>  // b.any
   1c6b8:	mov	w0, #0x1                   	// #1
   1c6bc:	b	1c6c4 <__sanitizer_cov_pcs_init@@Base+0x1628>
   1c6c0:	mov	w0, #0x0                   	// #0
   1c6c4:	cmp	w0, #0x0
   1c6c8:	b.eq	1c704 <__sanitizer_cov_pcs_init@@Base+0x1668>  // b.none
   1c6cc:	ldr	x1, [sp, #24]
   1c6d0:	ldr	x0, [sp, #40]
   1c6d4:	bl	1ce88 <__sanitizer_cov_pcs_init@@Base+0x1dec>
   1c6d8:	mov	x19, x0
   1c6dc:	ldr	x1, [sp, #24]
   1c6e0:	ldr	x0, [sp, #40]
   1c6e4:	bl	1ce54 <__sanitizer_cov_pcs_init@@Base+0x1db8>
   1c6e8:	ldr	w3, [sp, #20]
   1c6ec:	mov	x2, x0
   1c6f0:	mov	x1, x19
   1c6f4:	ldr	x0, [sp, #32]
   1c6f8:	bl	1d2f8 <__sanitizer_cov_pcs_init@@Base+0x225c>
   1c6fc:	mov	w0, #0x1                   	// #1
   1c700:	b	1c708 <__sanitizer_cov_pcs_init@@Base+0x166c>
   1c704:	mov	w0, #0x0                   	// #0
   1c708:	ldp	x19, x30, [sp], #48
   1c70c:	ret
   1c710:	stp	x19, x30, [sp, #-48]!
   1c714:	str	x0, [sp, #40]
   1c718:	str	x1, [sp, #32]
   1c71c:	str	x2, [sp, #24]
   1c720:	str	w3, [sp, #20]
   1c724:	ldr	x2, [sp, #24]
   1c728:	ldr	x1, [sp, #32]
   1c72c:	ldr	x0, [sp, #40]
   1c730:	bl	1c024 <__sanitizer_cov_pcs_init@@Base+0xf88>
   1c734:	and	w0, w0, #0xff
   1c738:	cmp	w0, #0x0
   1c73c:	b.eq	1c778 <__sanitizer_cov_pcs_init@@Base+0x16dc>  // b.none
   1c740:	ldr	x1, [sp, #24]
   1c744:	ldr	x0, [sp, #40]
   1c748:	bl	1ce88 <__sanitizer_cov_pcs_init@@Base+0x1dec>
   1c74c:	mov	x19, x0
   1c750:	ldr	x1, [sp, #24]
   1c754:	ldr	x0, [sp, #40]
   1c758:	bl	1ce54 <__sanitizer_cov_pcs_init@@Base+0x1db8>
   1c75c:	ldr	w3, [sp, #20]
   1c760:	mov	x2, x0
   1c764:	mov	x1, x19
   1c768:	ldr	x0, [sp, #32]
   1c76c:	bl	1d2f8 <__sanitizer_cov_pcs_init@@Base+0x225c>
   1c770:	mov	w0, #0x1                   	// #1
   1c774:	b	1c77c <__sanitizer_cov_pcs_init@@Base+0x16e0>
   1c778:	mov	w0, #0x0                   	// #0
   1c77c:	ldp	x19, x30, [sp], #48
   1c780:	ret
   1c784:	str	x30, [sp, #-64]!
   1c788:	str	x0, [sp, #40]
   1c78c:	str	x1, [sp, #32]
   1c790:	str	x2, [sp, #24]
   1c794:	str	w3, [sp, #20]
   1c798:	ldr	x1, [sp, #32]
   1c79c:	ldr	x0, [sp, #40]
   1c7a0:	bl	1bfdc <__sanitizer_cov_pcs_init@@Base+0xf40>
   1c7a4:	ldr	x1, [sp, #24]
   1c7a8:	ldr	x0, [sp, #40]
   1c7ac:	bl	1cfac <__sanitizer_cov_pcs_init@@Base+0x1f10>
   1c7b0:	str	x0, [sp, #56]
   1c7b4:	ldr	x0, [sp, #40]
   1c7b8:	ldr	x0, [x0]
   1c7bc:	ldr	w3, [sp, #20]
   1c7c0:	mov	x2, x0
   1c7c4:	ldr	x1, [sp, #56]
   1c7c8:	ldr	x0, [sp, #32]
   1c7cc:	bl	1d2f8 <__sanitizer_cov_pcs_init@@Base+0x225c>
   1c7d0:	nop
   1c7d4:	ldr	x30, [sp], #64
   1c7d8:	ret
   1c7dc:	stp	x19, x30, [sp, #-48]!
   1c7e0:	str	x0, [sp, #40]
   1c7e4:	str	x1, [sp, #32]
   1c7e8:	str	x2, [sp, #24]
   1c7ec:	ldr	x0, [sp, #32]
   1c7f0:	bl	1ce3c <__sanitizer_cov_pcs_init@@Base+0x1da0>
   1c7f4:	mov	x19, x0
   1c7f8:	ldr	x1, [sp, #24]
   1c7fc:	ldr	x0, [sp, #40]
   1c800:	bl	1ce54 <__sanitizer_cov_pcs_init@@Base+0x1db8>
   1c804:	cmp	x19, x0
   1c808:	cset	w0, eq  // eq = none
   1c80c:	and	w0, w0, #0xff
   1c810:	cmp	w0, #0x0
   1c814:	b.eq	1c830 <__sanitizer_cov_pcs_init@@Base+0x1794>  // b.none
   1c818:	ldr	x1, [sp, #24]
   1c81c:	ldr	x0, [sp, #40]
   1c820:	bl	1ce88 <__sanitizer_cov_pcs_init@@Base+0x1dec>
   1c824:	mov	x1, x0
   1c828:	ldr	x0, [sp, #32]
   1c82c:	bl	1d4a4 <__sanitizer_cov_pcs_init@@Base+0x2408>
   1c830:	nop
   1c834:	ldp	x19, x30, [sp], #48
   1c838:	ret
   1c83c:	str	x30, [sp, #-80]!
   1c840:	str	x0, [sp, #24]
   1c844:	str	x1, [sp, #16]
   1c848:	ldr	x1, [sp, #16]
   1c84c:	ldr	x0, [sp, #24]
   1c850:	bl	1cfac <__sanitizer_cov_pcs_init@@Base+0x1f10>
   1c854:	str	x0, [sp, #72]
   1c858:	ldr	x0, [sp, #24]
   1c85c:	add	x0, x0, #0x8
   1c860:	ldr	x1, [sp, #72]
   1c864:	bl	1cabc <__sanitizer_cov_pcs_init@@Base+0x1a20>
   1c868:	and	w0, w0, #0xff
   1c86c:	eor	w0, w0, #0x1
   1c870:	and	w0, w0, #0xff
   1c874:	and	x0, x0, #0xff
   1c878:	str	x0, [sp, #64]
   1c87c:	str	xzr, [sp, #56]
   1c880:	ldr	x1, [sp, #64]
   1c884:	ldr	x0, [sp, #56]
   1c888:	cmp	x1, x0
   1c88c:	cset	w0, eq  // eq = none
   1c890:	and	w0, w0, #0xff
   1c894:	and	x0, x0, #0xff
   1c898:	cmp	x0, #0x0
   1c89c:	b.eq	1c8c0 <__sanitizer_cov_pcs_init@@Base+0x1824>  // b.none
   1c8a0:	ldr	x4, [sp, #56]
   1c8a4:	ldr	x3, [sp, #64]
   1c8a8:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1c8ac:	add	x2, x0, #0xd58
   1c8b0:	mov	w1, #0xc0                  	// #192
   1c8b4:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1c8b8:	add	x0, x0, #0xcd0
   1c8bc:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1c8c0:	ldr	x0, [sp, #24]
   1c8c4:	add	x0, x0, #0x210
   1c8c8:	ldr	x1, [sp, #72]
   1c8cc:	bl	1d640 <__sanitizer_cov_pcs_init@@Base+0x25a4>
   1c8d0:	and	w0, w0, #0xff
   1c8d4:	and	x0, x0, #0xff
   1c8d8:	str	x0, [sp, #48]
   1c8dc:	str	xzr, [sp, #40]
   1c8e0:	ldr	x1, [sp, #48]
   1c8e4:	ldr	x0, [sp, #40]
   1c8e8:	cmp	x1, x0
   1c8ec:	cset	w0, eq  // eq = none
   1c8f0:	and	w0, w0, #0xff
   1c8f4:	and	x0, x0, #0xff
   1c8f8:	cmp	x0, #0x0
   1c8fc:	b.eq	1c920 <__sanitizer_cov_pcs_init@@Base+0x1884>  // b.none
   1c900:	ldr	x4, [sp, #40]
   1c904:	ldr	x3, [sp, #48]
   1c908:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1c90c:	add	x2, x0, #0xd88
   1c910:	mov	w1, #0xc1                  	// #193
   1c914:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1c918:	add	x0, x0, #0xcd0
   1c91c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1c920:	ldr	x0, [sp, #24]
   1c924:	add	x0, x0, #0x620
   1c928:	ldr	x1, [sp, #72]
   1c92c:	bl	1d728 <__sanitizer_cov_pcs_init@@Base+0x268c>
   1c930:	nop
   1c934:	ldr	x30, [sp], #80
   1c938:	ret
   1c93c:	str	x30, [sp, #-48]!
   1c940:	str	x0, [sp, #24]
   1c944:	str	xzr, [sp, #40]
   1c948:	ldr	x0, [sp, #40]
   1c94c:	cmp	x0, #0x0
   1c950:	b.ne	1c978 <__sanitizer_cov_pcs_init@@Base+0x18dc>  // b.any
   1c954:	ldr	x0, [sp, #40]
   1c958:	lsl	x0, x0, #3
   1c95c:	ldr	x1, [sp, #24]
   1c960:	add	x0, x1, x0
   1c964:	bl	1d75c <__sanitizer_cov_pcs_init@@Base+0x26c0>
   1c968:	ldr	x0, [sp, #40]
   1c96c:	add	x0, x0, #0x1
   1c970:	str	x0, [sp, #40]
   1c974:	b	1c948 <__sanitizer_cov_pcs_init@@Base+0x18ac>
   1c978:	nop
   1c97c:	ldr	x30, [sp], #48
   1c980:	ret
   1c984:	str	x30, [sp, #-48]!
   1c988:	str	x0, [sp, #24]
   1c98c:	str	xzr, [sp, #40]
   1c990:	ldr	x0, [sp, #24]
   1c994:	bl	1d778 <__sanitizer_cov_pcs_init@@Base+0x26dc>
   1c998:	mov	x1, x0
   1c99c:	ldr	x0, [sp, #40]
   1c9a0:	cmp	x0, x1
   1c9a4:	cset	w0, cc  // cc = lo, ul, last
   1c9a8:	and	w0, w0, #0xff
   1c9ac:	cmp	w0, #0x0
   1c9b0:	b.eq	1c9e4 <__sanitizer_cov_pcs_init@@Base+0x1948>  // b.none
   1c9b4:	ldr	x1, [sp, #40]
   1c9b8:	mov	x0, x1
   1c9bc:	lsl	x0, x0, #6
   1c9c0:	add	x0, x0, x1
   1c9c4:	lsl	x0, x0, #3
   1c9c8:	ldr	x1, [sp, #24]
   1c9cc:	add	x0, x1, x0
   1c9d0:	bl	1c93c <__sanitizer_cov_pcs_init@@Base+0x18a0>
   1c9d4:	ldr	x0, [sp, #40]
   1c9d8:	add	x0, x0, #0x1
   1c9dc:	str	x0, [sp, #40]
   1c9e0:	b	1c990 <__sanitizer_cov_pcs_init@@Base+0x18f4>
   1c9e4:	nop
   1c9e8:	ldr	x30, [sp], #48
   1c9ec:	ret
   1c9f0:	str	x30, [sp, #-32]!
   1c9f4:	str	x0, [sp, #24]
   1c9f8:	ldr	x0, [sp, #24]
   1c9fc:	add	x0, x0, #0x620
   1ca00:	bl	1d778 <__sanitizer_cov_pcs_init@@Base+0x26dc>
   1ca04:	ldr	x30, [sp], #32
   1ca08:	ret
   1ca0c:	str	x30, [sp, #-48]!
   1ca10:	str	x0, [sp, #24]
   1ca14:	str	xzr, [sp, #40]
   1ca18:	ldr	x0, [sp, #40]
   1ca1c:	cmp	x0, #0x0
   1ca20:	b.ne	1ca64 <__sanitizer_cov_pcs_init@@Base+0x19c8>  // b.any
   1ca24:	ldr	x0, [sp, #40]
   1ca28:	lsl	x0, x0, #3
   1ca2c:	ldr	x1, [sp, #24]
   1ca30:	add	x0, x1, x0
   1ca34:	bl	1d78c <__sanitizer_cov_pcs_init@@Base+0x26f0>
   1ca38:	and	w0, w0, #0xff
   1ca3c:	eor	w0, w0, #0x1
   1ca40:	and	w0, w0, #0xff
   1ca44:	cmp	w0, #0x0
   1ca48:	b.eq	1ca54 <__sanitizer_cov_pcs_init@@Base+0x19b8>  // b.none
   1ca4c:	mov	w0, #0x0                   	// #0
   1ca50:	b	1ca68 <__sanitizer_cov_pcs_init@@Base+0x19cc>
   1ca54:	ldr	x0, [sp, #40]
   1ca58:	add	x0, x0, #0x1
   1ca5c:	str	x0, [sp, #40]
   1ca60:	b	1ca18 <__sanitizer_cov_pcs_init@@Base+0x197c>
   1ca64:	mov	w0, #0x1                   	// #1
   1ca68:	ldr	x30, [sp], #48
   1ca6c:	ret
   1ca70:	str	x30, [sp, #-48]!
   1ca74:	str	x0, [sp, #24]
   1ca78:	str	x1, [sp, #16]
   1ca7c:	ldr	x0, [sp, #24]
   1ca80:	add	x0, x0, #0x8
   1ca84:	bl	1d7b0 <__sanitizer_cov_pcs_init@@Base+0x2714>
   1ca88:	str	x0, [sp, #40]
   1ca8c:	ldr	x0, [sp, #24]
   1ca90:	ldr	x2, [sp, #40]
   1ca94:	mov	x1, #0x1146                	// #4422
   1ca98:	movk	x1, #0x4, lsl #16
   1ca9c:	add	x1, x2, x1
   1caa0:	ldr	x2, [sp, #16]
   1caa4:	str	x2, [x0, x1, lsl #3]
   1caa8:	ldr	x1, [sp, #40]
   1caac:	ldr	x0, [sp, #24]
   1cab0:	bl	1d2c8 <__sanitizer_cov_pcs_init@@Base+0x222c>
   1cab4:	ldr	x30, [sp], #48
   1cab8:	ret
   1cabc:	str	x30, [sp, #-64]!
   1cac0:	str	x0, [sp, #24]
   1cac4:	str	x1, [sp, #16]
   1cac8:	ldr	x1, [sp, #16]
   1cacc:	ldr	x0, [sp, #24]
   1cad0:	bl	1d908 <__sanitizer_cov_pcs_init@@Base+0x286c>
   1cad4:	ldr	x1, [sp, #16]
   1cad8:	ldr	x0, [sp, #24]
   1cadc:	bl	1d974 <__sanitizer_cov_pcs_init@@Base+0x28d8>
   1cae0:	str	x0, [sp, #56]
   1cae4:	ldr	x1, [sp, #16]
   1cae8:	ldr	x0, [sp, #24]
   1caec:	bl	1d9e8 <__sanitizer_cov_pcs_init@@Base+0x294c>
   1caf0:	str	x0, [sp, #48]
   1caf4:	ldr	x1, [sp, #16]
   1caf8:	ldr	x0, [sp, #24]
   1cafc:	bl	1da60 <__sanitizer_cov_pcs_init@@Base+0x29c4>
   1cb00:	str	x0, [sp, #40]
   1cb04:	ldr	x0, [sp, #56]
   1cb08:	lsl	x0, x0, #3
   1cb0c:	ldr	x1, [sp, #24]
   1cb10:	add	x0, x1, x0
   1cb14:	ldr	x1, [sp, #48]
   1cb18:	bl	1dad4 <__sanitizer_cov_pcs_init@@Base+0x2a38>
   1cb1c:	and	w0, w0, #0xff
   1cb20:	cmp	w0, #0x0
   1cb24:	b.eq	1cb64 <__sanitizer_cov_pcs_init@@Base+0x1ac8>  // b.none
   1cb28:	ldr	x0, [sp, #56]
   1cb2c:	lsl	x1, x0, #6
   1cb30:	ldr	x0, [sp, #48]
   1cb34:	add	x0, x1, x0
   1cb38:	lsl	x0, x0, #3
   1cb3c:	ldr	x1, [sp, #24]
   1cb40:	add	x0, x1, x0
   1cb44:	add	x0, x0, #0x8
   1cb48:	ldr	x1, [sp, #40]
   1cb4c:	bl	1dad4 <__sanitizer_cov_pcs_init@@Base+0x2a38>
   1cb50:	and	w0, w0, #0xff
   1cb54:	cmp	w0, #0x0
   1cb58:	b.eq	1cb64 <__sanitizer_cov_pcs_init@@Base+0x1ac8>  // b.none
   1cb5c:	mov	w0, #0x1                   	// #1
   1cb60:	b	1cb68 <__sanitizer_cov_pcs_init@@Base+0x1acc>
   1cb64:	mov	w0, #0x0                   	// #0
   1cb68:	ldr	x30, [sp], #64
   1cb6c:	ret
   1cb70:	sub	sp, sp, #0x20
   1cb74:	str	x0, [sp, #8]
   1cb78:	str	x1, [sp]
   1cb7c:	ldr	x0, [sp, #8]
   1cb80:	ldp	x0, x1, [x0]
   1cb84:	stp	x0, x1, [sp, #16]
   1cb88:	ldr	x2, [sp, #8]
   1cb8c:	ldr	x0, [sp]
   1cb90:	ldp	x0, x1, [x0]
   1cb94:	stp	x0, x1, [x2]
   1cb98:	ldr	x2, [sp]
   1cb9c:	ldp	x0, x1, [sp, #16]
   1cba0:	stp	x0, x1, [x2]
   1cba4:	nop
   1cba8:	add	sp, sp, #0x20
   1cbac:	ret
   1cbb0:	str	x30, [sp, #-48]!
   1cbb4:	str	x0, [sp, #24]
   1cbb8:	str	x1, [sp, #16]
   1cbbc:	strb	wzr, [sp, #47]
   1cbc0:	str	xzr, [sp, #32]
   1cbc4:	ldr	x0, [sp, #24]
   1cbc8:	bl	1d778 <__sanitizer_cov_pcs_init@@Base+0x26dc>
   1cbcc:	mov	x1, x0
   1cbd0:	ldr	x0, [sp, #32]
   1cbd4:	cmp	x0, x1
   1cbd8:	cset	w0, cc  // cc = lo, ul, last
   1cbdc:	and	w0, w0, #0xff
   1cbe0:	cmp	w0, #0x0
   1cbe4:	b.eq	1cc30 <__sanitizer_cov_pcs_init@@Base+0x1b94>  // b.none
   1cbe8:	ldr	x1, [sp, #32]
   1cbec:	mov	x0, x1
   1cbf0:	lsl	x0, x0, #6
   1cbf4:	add	x0, x0, x1
   1cbf8:	lsl	x0, x0, #3
   1cbfc:	ldr	x1, [sp, #24]
   1cc00:	add	x0, x1, x0
   1cc04:	ldr	x1, [sp, #16]
   1cc08:	bl	1db0c <__sanitizer_cov_pcs_init@@Base+0x2a70>
   1cc0c:	and	w0, w0, #0xff
   1cc10:	cmp	w0, #0x0
   1cc14:	b.eq	1cc20 <__sanitizer_cov_pcs_init@@Base+0x1b84>  // b.none
   1cc18:	mov	w0, #0x1                   	// #1
   1cc1c:	strb	w0, [sp, #47]
   1cc20:	ldr	x0, [sp, #32]
   1cc24:	add	x0, x0, #0x1
   1cc28:	str	x0, [sp, #32]
   1cc2c:	b	1cbc4 <__sanitizer_cov_pcs_init@@Base+0x1b28>
   1cc30:	ldrb	w0, [sp, #47]
   1cc34:	ldr	x30, [sp], #48
   1cc38:	ret
   1cc3c:	str	x30, [sp, #-64]!
   1cc40:	str	x0, [sp, #24]
   1cc44:	str	x1, [sp, #16]
   1cc48:	strb	wzr, [sp, #63]
   1cc4c:	str	xzr, [sp, #48]
   1cc50:	ldr	x0, [sp, #48]
   1cc54:	cmp	x0, #0x0
   1cc58:	b.ne	1cd50 <__sanitizer_cov_pcs_init@@Base+0x1cb4>  // b.any
   1cc5c:	ldr	x0, [sp, #16]
   1cc60:	ldr	x1, [sp, #48]
   1cc64:	ldr	x0, [x0, x1, lsl #3]
   1cc68:	str	x0, [sp, #32]
   1cc6c:	add	x0, sp, #0x20
   1cc70:	bl	1d78c <__sanitizer_cov_pcs_init@@Base+0x26f0>
   1cc74:	and	w0, w0, #0xff
   1cc78:	eor	w0, w0, #0x1
   1cc7c:	and	w0, w0, #0xff
   1cc80:	cmp	w0, #0x0
   1cc84:	b.eq	1cd40 <__sanitizer_cov_pcs_init@@Base+0x1ca4>  // b.none
   1cc88:	add	x0, sp, #0x20
   1cc8c:	bl	1dc44 <__sanitizer_cov_pcs_init@@Base+0x2ba8>
   1cc90:	str	x0, [sp, #40]
   1cc94:	ldr	x0, [sp, #48]
   1cc98:	lsl	x0, x0, #3
   1cc9c:	ldr	x1, [sp, #24]
   1cca0:	add	x0, x1, x0
   1cca4:	ldr	x1, [sp, #40]
   1cca8:	bl	1dcd4 <__sanitizer_cov_pcs_init@@Base+0x2c38>
   1ccac:	and	w0, w0, #0xff
   1ccb0:	cmp	w0, #0x0
   1ccb4:	b.eq	1ccdc <__sanitizer_cov_pcs_init@@Base+0x1c40>  // b.none
   1ccb8:	ldr	x0, [sp, #48]
   1ccbc:	lsl	x1, x0, #6
   1ccc0:	ldr	x0, [sp, #40]
   1ccc4:	add	x0, x1, x0
   1ccc8:	lsl	x0, x0, #3
   1cccc:	ldr	x1, [sp, #24]
   1ccd0:	add	x0, x1, x0
   1ccd4:	add	x0, x0, #0x8
   1ccd8:	bl	1d75c <__sanitizer_cov_pcs_init@@Base+0x26c0>
   1ccdc:	ldr	x0, [sp, #48]
   1cce0:	lsl	x1, x0, #6
   1cce4:	ldr	x0, [sp, #40]
   1cce8:	add	x0, x1, x0
   1ccec:	lsl	x0, x0, #3
   1ccf0:	ldr	x1, [sp, #24]
   1ccf4:	add	x0, x1, x0
   1ccf8:	add	x2, x0, #0x8
   1ccfc:	ldr	x0, [sp, #48]
   1cd00:	lsl	x1, x0, #6
   1cd04:	ldr	x0, [sp, #40]
   1cd08:	add	x0, x1, x0
   1cd0c:	lsl	x0, x0, #3
   1cd10:	ldr	x1, [sp, #16]
   1cd14:	add	x0, x1, x0
   1cd18:	add	x0, x0, #0x8
   1cd1c:	mov	x1, x0
   1cd20:	mov	x0, x2
   1cd24:	bl	1dd30 <__sanitizer_cov_pcs_init@@Base+0x2c94>
   1cd28:	and	w0, w0, #0xff
   1cd2c:	cmp	w0, #0x0
   1cd30:	b.eq	1cc6c <__sanitizer_cov_pcs_init@@Base+0x1bd0>  // b.none
   1cd34:	mov	w0, #0x1                   	// #1
   1cd38:	strb	w0, [sp, #63]
   1cd3c:	b	1cc6c <__sanitizer_cov_pcs_init@@Base+0x1bd0>
   1cd40:	ldr	x0, [sp, #48]
   1cd44:	add	x0, x0, #0x1
   1cd48:	str	x0, [sp, #48]
   1cd4c:	b	1cc50 <__sanitizer_cov_pcs_init@@Base+0x1bb4>
   1cd50:	ldrb	w0, [sp, #63]
   1cd54:	ldr	x30, [sp], #64
   1cd58:	ret
   1cd5c:	str	x30, [sp, #-48]!
   1cd60:	str	x0, [sp, #24]
   1cd64:	str	xzr, [sp, #40]
   1cd68:	ldr	x0, [sp, #40]
   1cd6c:	cmp	x0, #0x0
   1cd70:	b.ne	1cddc <__sanitizer_cov_pcs_init@@Base+0x1d40>  // b.any
   1cd74:	ldr	x0, [sp, #40]
   1cd78:	lsl	x0, x0, #3
   1cd7c:	ldr	x1, [sp, #24]
   1cd80:	add	x0, x1, x0
   1cd84:	bl	1dd84 <__sanitizer_cov_pcs_init@@Base+0x2ce8>
   1cd88:	str	xzr, [sp, #32]
   1cd8c:	ldr	x0, [sp, #32]
   1cd90:	cmp	x0, #0x3f
   1cd94:	b.hi	1cdcc <__sanitizer_cov_pcs_init@@Base+0x1d30>  // b.pmore
   1cd98:	ldr	x0, [sp, #40]
   1cd9c:	lsl	x1, x0, #6
   1cda0:	ldr	x0, [sp, #32]
   1cda4:	add	x0, x1, x0
   1cda8:	lsl	x0, x0, #3
   1cdac:	ldr	x1, [sp, #24]
   1cdb0:	add	x0, x1, x0
   1cdb4:	add	x0, x0, #0x8
   1cdb8:	bl	1dd84 <__sanitizer_cov_pcs_init@@Base+0x2ce8>
   1cdbc:	ldr	x0, [sp, #32]
   1cdc0:	add	x0, x0, #0x1
   1cdc4:	str	x0, [sp, #32]
   1cdc8:	b	1cd8c <__sanitizer_cov_pcs_init@@Base+0x1cf0>
   1cdcc:	ldr	x0, [sp, #40]
   1cdd0:	add	x0, x0, #0x1
   1cdd4:	str	x0, [sp, #40]
   1cdd8:	b	1cd68 <__sanitizer_cov_pcs_init@@Base+0x1ccc>
   1cddc:	nop
   1cde0:	ldr	x30, [sp], #48
   1cde4:	ret
   1cde8:	str	x30, [sp, #-32]!
   1cdec:	str	x0, [sp, #24]
   1cdf0:	str	x1, [sp, #16]
   1cdf4:	ldr	x0, [sp, #24]
   1cdf8:	ldr	x0, [x0, #520]
   1cdfc:	ldr	x1, [sp, #16]
   1ce00:	cmp	x1, x0
   1ce04:	b.eq	1ce30 <__sanitizer_cov_pcs_init@@Base+0x1d94>  // b.none
   1ce08:	ldr	x0, [sp, #24]
   1ce0c:	bl	1c93c <__sanitizer_cov_pcs_init@@Base+0x18a0>
   1ce10:	ldr	x0, [sp, #24]
   1ce14:	ldr	x1, [sp, #16]
   1ce18:	str	x1, [x0, #520]
   1ce1c:	ldr	x0, [sp, #24]
   1ce20:	str	xzr, [x0, #1040]
   1ce24:	ldr	x0, [sp, #24]
   1ce28:	str	xzr, [x0, #1560]
   1ce2c:	b	1ce34 <__sanitizer_cov_pcs_init@@Base+0x1d98>
   1ce30:	nop
   1ce34:	ldr	x30, [sp], #32
   1ce38:	ret
   1ce3c:	sub	sp, sp, #0x10
   1ce40:	str	x0, [sp, #8]
   1ce44:	ldr	x0, [sp, #8]
   1ce48:	ldr	x0, [x0, #520]
   1ce4c:	add	sp, sp, #0x10
   1ce50:	ret
   1ce54:	stp	x19, x30, [sp, #-32]!
   1ce58:	str	x0, [sp, #24]
   1ce5c:	str	x1, [sp, #16]
   1ce60:	ldr	x0, [sp, #24]
   1ce64:	bl	1c9f0 <__sanitizer_cov_pcs_init@@Base+0x1954>
   1ce68:	mov	x1, x0
   1ce6c:	ldr	x0, [sp, #16]
   1ce70:	udiv	x19, x0, x1
   1ce74:	ldr	x0, [sp, #24]
   1ce78:	bl	1c9f0 <__sanitizer_cov_pcs_init@@Base+0x1954>
   1ce7c:	mul	x0, x19, x0
   1ce80:	ldp	x19, x30, [sp], #32
   1ce84:	ret
   1ce88:	str	x30, [sp, #-32]!
   1ce8c:	str	x0, [sp, #24]
   1ce90:	str	x1, [sp, #16]
   1ce94:	ldr	x0, [sp, #24]
   1ce98:	bl	1c9f0 <__sanitizer_cov_pcs_init@@Base+0x1954>
   1ce9c:	mov	x1, x0
   1cea0:	ldr	x0, [sp, #16]
   1cea4:	udiv	x2, x0, x1
   1cea8:	mul	x1, x2, x1
   1ceac:	sub	x0, x0, x1
   1ceb0:	ldr	x30, [sp], #32
   1ceb4:	ret
   1ceb8:	sub	sp, sp, #0x10
   1cebc:	str	x0, [sp, #8]
   1cec0:	ldr	x0, [sp, #8]
   1cec4:	ldr	x0, [x0, #1560]
   1cec8:	add	sp, sp, #0x10
   1cecc:	ret
   1ced0:	sub	sp, sp, #0x10
   1ced4:	str	x0, [sp, #8]
   1ced8:	str	x1, [sp]
   1cedc:	ldr	x1, [sp, #8]
   1cee0:	ldr	x0, [sp]
   1cee4:	add	x0, x0, #0x82
   1cee8:	lsl	x0, x0, #3
   1ceec:	add	x0, x1, x0
   1cef0:	ldr	w0, [x0, #8]
   1cef4:	mov	w0, w0
   1cef8:	add	sp, sp, #0x10
   1cefc:	ret
   1cf00:	str	x30, [sp, #-48]!
   1cf04:	str	x0, [sp, #40]
   1cf08:	str	x1, [sp, #32]
   1cf0c:	str	x2, [sp, #24]
   1cf10:	ldr	x1, [sp, #32]
   1cf14:	mov	x0, x1
   1cf18:	lsl	x0, x0, #6
   1cf1c:	add	x0, x0, x1
   1cf20:	lsl	x0, x0, #3
   1cf24:	ldr	x1, [sp, #40]
   1cf28:	add	x0, x1, x0
   1cf2c:	ldr	x1, [sp, #24]
   1cf30:	bl	1cabc <__sanitizer_cov_pcs_init@@Base+0x1a20>
   1cf34:	and	w0, w0, #0xff
   1cf38:	ldr	x30, [sp], #48
   1cf3c:	ret
   1cf40:	str	x30, [sp, #-48]!
   1cf44:	str	x0, [sp, #24]
   1cf48:	str	x1, [sp, #16]
   1cf4c:	ldr	x0, [sp, #24]
   1cf50:	ldr	x0, [x0, #520]
   1cf54:	str	x0, [sp, #40]
   1cf58:	ldr	x0, [sp, #16]
   1cf5c:	str	x0, [sp, #32]
   1cf60:	ldr	x1, [sp, #40]
   1cf64:	ldr	x0, [sp, #32]
   1cf68:	cmp	x1, x0
   1cf6c:	cset	w0, ne  // ne = any
   1cf70:	and	w0, w0, #0xff
   1cf74:	and	x0, x0, #0xff
   1cf78:	cmp	x0, #0x0
   1cf7c:	b.eq	1cfa0 <__sanitizer_cov_pcs_init@@Base+0x1f04>  // b.none
   1cf80:	ldr	x4, [sp, #32]
   1cf84:	ldr	x3, [sp, #40]
   1cf88:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1cf8c:	add	x2, x0, #0xdb0
   1cf90:	mov	w1, #0x6c                  	// #108
   1cf94:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1cf98:	add	x0, x0, #0xcd0
   1cf9c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1cfa0:	ldr	x0, [sp, #24]
   1cfa4:	ldr	x30, [sp], #48
   1cfa8:	ret
   1cfac:	str	x30, [sp, #-32]!
   1cfb0:	str	x0, [sp, #24]
   1cfb4:	str	x1, [sp, #16]
   1cfb8:	ldr	x1, [sp, #16]
   1cfbc:	ldr	x0, [sp, #24]
   1cfc0:	bl	1dda4 <__sanitizer_cov_pcs_init@@Base+0x2d08>
   1cfc4:	ldr	x1, [sp, #16]
   1cfc8:	ldr	x0, [sp, #24]
   1cfcc:	bl	1ce88 <__sanitizer_cov_pcs_init@@Base+0x1dec>
   1cfd0:	ldr	x30, [sp], #32
   1cfd4:	ret
   1cfd8:	str	x30, [sp, #-80]!
   1cfdc:	str	x0, [sp, #40]
   1cfe0:	str	x1, [sp, #32]
   1cfe4:	str	x2, [sp, #24]
   1cfe8:	ldr	x0, [sp, #40]
   1cfec:	add	x0, x0, #0x208, lsl #12
   1cff0:	str	x0, [sp, #72]
   1cff4:	ldr	x1, [sp, #40]
   1cff8:	mov	x0, #0x8208                	// #33288
   1cffc:	movk	x0, #0x20, lsl #16
   1d000:	add	x0, x1, x0
   1d004:	str	x0, [sp, #64]
   1d008:	ldr	x1, [sp, #32]
   1d00c:	mov	x0, x1
   1d010:	lsl	x0, x0, #6
   1d014:	add	x0, x0, x1
   1d018:	lsl	x0, x0, #3
   1d01c:	ldr	x1, [sp, #40]
   1d020:	add	x0, x1, x0
   1d024:	mov	x1, x0
   1d028:	ldr	x0, [sp, #72]
   1d02c:	bl	1d214 <__sanitizer_cov_pcs_init@@Base+0x2178>
   1d030:	ldr	x0, [sp, #64]
   1d034:	bl	1c93c <__sanitizer_cov_pcs_init@@Base+0x18a0>
   1d038:	ldr	x1, [sp, #32]
   1d03c:	ldr	x0, [sp, #64]
   1d040:	bl	1d640 <__sanitizer_cov_pcs_init@@Base+0x25a4>
   1d044:	ldr	x0, [sp, #72]
   1d048:	bl	1ca0c <__sanitizer_cov_pcs_init@@Base+0x1970>
   1d04c:	and	w0, w0, #0xff
   1d050:	eor	w0, w0, #0x1
   1d054:	and	w0, w0, #0xff
   1d058:	cmp	w0, #0x0
   1d05c:	b.eq	1d0b0 <__sanitizer_cov_pcs_init@@Base+0x2014>  // b.none
   1d060:	ldr	x0, [sp, #72]
   1d064:	bl	1d7b0 <__sanitizer_cov_pcs_init@@Base+0x2714>
   1d068:	str	x0, [sp, #56]
   1d06c:	ldr	x1, [sp, #56]
   1d070:	ldr	x0, [sp, #64]
   1d074:	bl	1d640 <__sanitizer_cov_pcs_init@@Base+0x25a4>
   1d078:	and	w0, w0, #0xff
   1d07c:	cmp	w0, #0x0
   1d080:	b.eq	1d044 <__sanitizer_cov_pcs_init@@Base+0x1fa8>  // b.none
   1d084:	ldr	x1, [sp, #56]
   1d088:	mov	x0, x1
   1d08c:	lsl	x0, x0, #6
   1d090:	add	x0, x0, x1
   1d094:	lsl	x0, x0, #3
   1d098:	ldr	x1, [sp, #40]
   1d09c:	add	x0, x1, x0
   1d0a0:	mov	x1, x0
   1d0a4:	ldr	x0, [sp, #72]
   1d0a8:	bl	1cc3c <__sanitizer_cov_pcs_init@@Base+0x1ba0>
   1d0ac:	b	1d044 <__sanitizer_cov_pcs_init@@Base+0x1fa8>
   1d0b0:	ldr	x1, [sp, #64]
   1d0b4:	ldr	x0, [sp, #24]
   1d0b8:	bl	1de6c <__sanitizer_cov_pcs_init@@Base+0x2dd0>
   1d0bc:	and	w0, w0, #0xff
   1d0c0:	ldr	x30, [sp], #80
   1d0c4:	ret
   1d0c8:	str	x30, [sp, #-80]!
   1d0cc:	str	x0, [sp, #56]
   1d0d0:	str	x1, [sp, #48]
   1d0d4:	str	x2, [sp, #40]
   1d0d8:	str	x3, [sp, #32]
   1d0dc:	str	x4, [sp, #24]
   1d0e0:	str	xzr, [sp, #72]
   1d0e4:	ldr	x0, [sp, #56]
   1d0e8:	add	x0, x0, #0x208, lsl #12
   1d0ec:	ldr	x1, [sp, #48]
   1d0f0:	bl	1d214 <__sanitizer_cov_pcs_init@@Base+0x2178>
   1d0f4:	ldr	x0, [sp, #56]
   1d0f8:	add	x0, x0, #0x208, lsl #12
   1d0fc:	bl	1ca0c <__sanitizer_cov_pcs_init@@Base+0x1970>
   1d100:	and	w0, w0, #0xff
   1d104:	eor	w0, w0, #0x1
   1d108:	and	w0, w0, #0xff
   1d10c:	cmp	w0, #0x0
   1d110:	b.eq	1d188 <__sanitizer_cov_pcs_init@@Base+0x20ec>  // b.none
   1d114:	ldr	x0, [sp, #56]
   1d118:	add	x0, x0, #0x208, lsl #12
   1d11c:	bl	1d7b0 <__sanitizer_cov_pcs_init@@Base+0x2714>
   1d120:	str	x0, [sp, #64]
   1d124:	ldr	x1, [sp, #64]
   1d128:	mov	x0, x1
   1d12c:	lsl	x0, x0, #6
   1d130:	add	x0, x0, x1
   1d134:	lsl	x0, x0, #3
   1d138:	ldr	x1, [sp, #56]
   1d13c:	add	x0, x1, x0
   1d140:	ldr	x1, [sp, #40]
   1d144:	bl	1d640 <__sanitizer_cov_pcs_init@@Base+0x25a4>
   1d148:	and	w0, w0, #0xff
   1d14c:	cmp	w0, #0x0
   1d150:	b.eq	1d0f4 <__sanitizer_cov_pcs_init@@Base+0x2058>  // b.none
   1d154:	ldr	x1, [sp, #72]
   1d158:	ldr	x0, [sp, #24]
   1d15c:	cmp	x1, x0
   1d160:	b.cs	1d0f4 <__sanitizer_cov_pcs_init@@Base+0x2058>  // b.hs, b.nlast
   1d164:	ldr	x0, [sp, #72]
   1d168:	add	x1, x0, #0x1
   1d16c:	str	x1, [sp, #72]
   1d170:	lsl	x0, x0, #3
   1d174:	ldr	x1, [sp, #32]
   1d178:	add	x0, x1, x0
   1d17c:	ldr	x1, [sp, #64]
   1d180:	str	x1, [x0]
   1d184:	b	1d0f4 <__sanitizer_cov_pcs_init@@Base+0x2058>
   1d188:	ldr	x0, [sp, #72]
   1d18c:	ldr	x30, [sp], #80
   1d190:	ret
   1d194:	sub	sp, sp, #0x20
   1d198:	str	x0, [sp, #8]
   1d19c:	str	x1, [sp]
   1d1a0:	str	xzr, [sp, #24]
   1d1a4:	ldr	x0, [sp, #8]
   1d1a8:	ldr	x0, [x0, #1560]
   1d1ac:	ldr	x1, [sp, #24]
   1d1b0:	cmp	x1, x0
   1d1b4:	b.cs	1d208 <__sanitizer_cov_pcs_init@@Base+0x216c>  // b.hs, b.nlast
   1d1b8:	ldr	x1, [sp, #8]
   1d1bc:	ldr	x0, [sp, #24]
   1d1c0:	add	x0, x0, #0x82
   1d1c4:	lsl	x0, x0, #3
   1d1c8:	add	x0, x1, x0
   1d1cc:	ldr	w0, [x0, #8]
   1d1d0:	ldr	x1, [sp]
   1d1d4:	cmp	w0, w1
   1d1d8:	b.ne	1d1f8 <__sanitizer_cov_pcs_init@@Base+0x215c>  // b.any
   1d1dc:	ldr	x1, [sp, #8]
   1d1e0:	ldr	x0, [sp, #24]
   1d1e4:	add	x0, x0, #0x82
   1d1e8:	lsl	x0, x0, #3
   1d1ec:	add	x0, x1, x0
   1d1f0:	ldr	w0, [x0, #12]
   1d1f4:	b	1d20c <__sanitizer_cov_pcs_init@@Base+0x2170>
   1d1f8:	ldr	x0, [sp, #24]
   1d1fc:	add	x0, x0, #0x1
   1d200:	str	x0, [sp, #24]
   1d204:	b	1d1a4 <__sanitizer_cov_pcs_init@@Base+0x2108>
   1d208:	mov	w0, #0x0                   	// #0
   1d20c:	add	sp, sp, #0x20
   1d210:	ret
   1d214:	str	x30, [sp, #-32]!
   1d218:	str	x0, [sp, #24]
   1d21c:	str	x1, [sp, #16]
   1d220:	ldr	x0, [sp, #24]
   1d224:	bl	1c93c <__sanitizer_cov_pcs_init@@Base+0x18a0>
   1d228:	ldr	x1, [sp, #16]
   1d22c:	ldr	x0, [sp, #24]
   1d230:	bl	1cc3c <__sanitizer_cov_pcs_init@@Base+0x1ba0>
   1d234:	nop
   1d238:	ldr	x30, [sp], #32
   1d23c:	ret
   1d240:	str	x30, [sp, #-80]!
   1d244:	str	x0, [sp, #56]
   1d248:	str	x1, [sp, #48]
   1d24c:	str	x2, [sp, #40]
   1d250:	str	x3, [sp, #32]
   1d254:	str	x4, [sp, #24]
   1d258:	mov	x0, #0x1                   	// #1
   1d25c:	str	x0, [sp, #72]
   1d260:	ldr	x1, [sp, #72]
   1d264:	ldr	x0, [sp, #24]
   1d268:	cmp	x1, x0
   1d26c:	b.hi	1d2bc <__sanitizer_cov_pcs_init@@Base+0x2220>  // b.pmore
   1d270:	ldr	x4, [sp, #72]
   1d274:	ldr	x3, [sp, #32]
   1d278:	ldr	x2, [sp, #40]
   1d27c:	ldr	x1, [sp, #48]
   1d280:	ldr	x0, [sp, #56]
   1d284:	bl	1df88 <__sanitizer_cov_pcs_init@@Base+0x2eec>
   1d288:	mov	x1, x0
   1d28c:	ldr	x0, [sp, #72]
   1d290:	cmp	x0, x1
   1d294:	cset	w0, eq  // eq = none
   1d298:	and	w0, w0, #0xff
   1d29c:	cmp	w0, #0x0
   1d2a0:	b.eq	1d2ac <__sanitizer_cov_pcs_init@@Base+0x2210>  // b.none
   1d2a4:	ldr	x0, [sp, #72]
   1d2a8:	b	1d2c0 <__sanitizer_cov_pcs_init@@Base+0x2224>
   1d2ac:	ldr	x0, [sp, #72]
   1d2b0:	add	x0, x0, #0x1
   1d2b4:	str	x0, [sp, #72]
   1d2b8:	b	1d260 <__sanitizer_cov_pcs_init@@Base+0x21c4>
   1d2bc:	mov	x0, #0x0                   	// #0
   1d2c0:	ldr	x30, [sp], #80
   1d2c4:	ret
   1d2c8:	str	x30, [sp, #-32]!
   1d2cc:	str	x0, [sp, #24]
   1d2d0:	str	x1, [sp, #16]
   1d2d4:	ldr	x1, [sp, #16]
   1d2d8:	ldr	x0, [sp, #24]
   1d2dc:	bl	1e074 <__sanitizer_cov_pcs_init@@Base+0x2fd8>
   1d2e0:	ldr	x0, [sp, #24]
   1d2e4:	ldr	x1, [x0]
   1d2e8:	ldr	x0, [sp, #16]
   1d2ec:	add	x0, x1, x0
   1d2f0:	ldr	x30, [sp], #32
   1d2f4:	ret
   1d2f8:	str	x30, [sp, #-112]!
   1d2fc:	str	x0, [sp, #40]
   1d300:	str	x1, [sp, #32]
   1d304:	str	x2, [sp, #24]
   1d308:	str	w3, [sp, #20]
   1d30c:	ldr	x0, [sp, #40]
   1d310:	ldr	x0, [x0, #520]
   1d314:	str	x0, [sp, #104]
   1d318:	ldr	x0, [sp, #24]
   1d31c:	str	x0, [sp, #96]
   1d320:	ldr	x1, [sp, #104]
   1d324:	ldr	x0, [sp, #96]
   1d328:	cmp	x1, x0
   1d32c:	cset	w0, ne  // ne = any
   1d330:	and	w0, w0, #0xff
   1d334:	and	x0, x0, #0xff
   1d338:	cmp	x0, #0x0
   1d33c:	b.eq	1d360 <__sanitizer_cov_pcs_init@@Base+0x22c4>  // b.none
   1d340:	ldr	x4, [sp, #96]
   1d344:	ldr	x3, [sp, #104]
   1d348:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1d34c:	add	x2, x0, #0xdb0
   1d350:	mov	w1, #0x3c                  	// #60
   1d354:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1d358:	add	x0, x0, #0xcd0
   1d35c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1d360:	ldr	x0, [sp, #40]
   1d364:	ldr	x1, [sp, #32]
   1d368:	bl	1d640 <__sanitizer_cov_pcs_init@@Base+0x25a4>
   1d36c:	and	w0, w0, #0xff
   1d370:	eor	w0, w0, #0x1
   1d374:	and	w0, w0, #0xff
   1d378:	cmp	w0, #0x0
   1d37c:	b.eq	1d400 <__sanitizer_cov_pcs_init@@Base+0x2364>  // b.none
   1d380:	ldr	x0, [sp, #40]
   1d384:	ldr	x0, [x0, #1040]
   1d388:	str	x0, [sp, #64]
   1d38c:	mov	x0, #0x40                  	// #64
   1d390:	str	x0, [sp, #56]
   1d394:	ldr	x1, [sp, #64]
   1d398:	ldr	x0, [sp, #56]
   1d39c:	cmp	x1, x0
   1d3a0:	cset	w0, cs  // cs = hs, nlast
   1d3a4:	and	w0, w0, #0xff
   1d3a8:	and	x0, x0, #0xff
   1d3ac:	cmp	x0, #0x0
   1d3b0:	b.eq	1d3d4 <__sanitizer_cov_pcs_init@@Base+0x2338>  // b.none
   1d3b4:	ldr	x4, [sp, #56]
   1d3b8:	ldr	x3, [sp, #64]
   1d3bc:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1d3c0:	add	x2, x0, #0xdd0
   1d3c4:	mov	w1, #0x3f                  	// #63
   1d3c8:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1d3cc:	add	x0, x0, #0xcd0
   1d3d0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1d3d4:	ldr	x0, [sp, #40]
   1d3d8:	ldr	x0, [x0, #1040]
   1d3dc:	add	x2, x0, #0x1
   1d3e0:	ldr	x1, [sp, #40]
   1d3e4:	str	x2, [x1, #1040]
   1d3e8:	ldr	x1, [sp, #40]
   1d3ec:	add	x0, x0, #0x42
   1d3f0:	ldr	x2, [sp, #32]
   1d3f4:	str	x2, [x1, x0, lsl #3]
   1d3f8:	mov	w0, #0x0                   	// #0
   1d3fc:	b	1d49c <__sanitizer_cov_pcs_init@@Base+0x2400>
   1d400:	ldr	x0, [sp, #40]
   1d404:	ldr	x0, [x0, #1560]
   1d408:	str	x0, [sp, #88]
   1d40c:	mov	x0, #0x40                  	// #64
   1d410:	str	x0, [sp, #80]
   1d414:	ldr	x1, [sp, #88]
   1d418:	ldr	x0, [sp, #80]
   1d41c:	cmp	x1, x0
   1d420:	cset	w0, cs  // cs = hs, nlast
   1d424:	and	w0, w0, #0xff
   1d428:	and	x0, x0, #0xff
   1d42c:	cmp	x0, #0x0
   1d430:	b.eq	1d454 <__sanitizer_cov_pcs_init@@Base+0x23b8>  // b.none
   1d434:	ldr	x4, [sp, #80]
   1d438:	ldr	x3, [sp, #88]
   1d43c:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1d440:	add	x2, x0, #0xe28
   1d444:	mov	w1, #0x43                  	// #67
   1d448:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1d44c:	add	x0, x0, #0xcd0
   1d450:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1d454:	ldr	x0, [sp, #32]
   1d458:	str	w0, [sp, #76]
   1d45c:	ldr	w0, [sp, #76]
   1d460:	str	w0, [sp, #48]
   1d464:	ldr	w0, [sp, #20]
   1d468:	str	w0, [sp, #52]
   1d46c:	ldr	x0, [sp, #40]
   1d470:	ldr	x0, [x0, #1560]
   1d474:	add	x2, x0, #0x1
   1d478:	ldr	x1, [sp, #40]
   1d47c:	str	x2, [x1, #1560]
   1d480:	ldr	x1, [sp, #40]
   1d484:	add	x0, x0, #0x82
   1d488:	lsl	x0, x0, #3
   1d48c:	add	x0, x1, x0
   1d490:	ldr	x1, [sp, #48]
   1d494:	str	x1, [x0, #8]
   1d498:	mov	w0, #0x1                   	// #1
   1d49c:	ldr	x30, [sp], #112
   1d4a0:	ret
   1d4a4:	str	x30, [sp, #-48]!
   1d4a8:	str	x0, [sp, #24]
   1d4ac:	str	x1, [sp, #16]
   1d4b0:	ldr	x0, [sp, #24]
   1d4b4:	ldr	x0, [x0, #1040]
   1d4b8:	cmp	x0, #0x0
   1d4bc:	b.eq	1d558 <__sanitizer_cov_pcs_init@@Base+0x24bc>  // b.none
   1d4c0:	ldr	x0, [sp, #24]
   1d4c4:	ldr	x0, [x0, #1040]
   1d4c8:	sub	x0, x0, #0x1
   1d4cc:	str	x0, [sp, #40]
   1d4d0:	ldr	x0, [sp, #40]
   1d4d4:	cmp	x0, #0x0
   1d4d8:	b.lt	1d558 <__sanitizer_cov_pcs_init@@Base+0x24bc>  // b.tstop
   1d4dc:	ldr	x0, [sp, #24]
   1d4e0:	ldr	x1, [sp, #40]
   1d4e4:	add	x1, x1, #0x42
   1d4e8:	ldr	x0, [x0, x1, lsl #3]
   1d4ec:	ldr	x1, [sp, #16]
   1d4f0:	cmp	x1, x0
   1d4f4:	b.ne	1d548 <__sanitizer_cov_pcs_init@@Base+0x24ac>  // b.any
   1d4f8:	ldr	x0, [sp, #24]
   1d4fc:	ldr	x0, [x0, #1040]
   1d500:	sub	x1, x0, #0x1
   1d504:	ldr	x0, [sp, #24]
   1d508:	str	x1, [x0, #1040]
   1d50c:	ldr	x0, [sp, #40]
   1d510:	add	x0, x0, #0x42
   1d514:	lsl	x0, x0, #3
   1d518:	ldr	x1, [sp, #24]
   1d51c:	add	x2, x1, x0
   1d520:	ldr	x0, [sp, #24]
   1d524:	ldr	x0, [x0, #1040]
   1d528:	add	x0, x0, #0x42
   1d52c:	lsl	x0, x0, #3
   1d530:	ldr	x1, [sp, #24]
   1d534:	add	x0, x1, x0
   1d538:	mov	x1, x0
   1d53c:	mov	x0, x2
   1d540:	bl	125c4 <__sanitizer_get_allocated_size@@Base+0x3a64>
   1d544:	b	1d638 <__sanitizer_cov_pcs_init@@Base+0x259c>
   1d548:	ldr	x0, [sp, #40]
   1d54c:	sub	x0, x0, #0x1
   1d550:	str	x0, [sp, #40]
   1d554:	b	1d4d0 <__sanitizer_cov_pcs_init@@Base+0x2434>
   1d558:	ldr	x0, [sp, #24]
   1d55c:	ldr	x1, [sp, #16]
   1d560:	bl	1e0e0 <__sanitizer_cov_pcs_init@@Base+0x3044>
   1d564:	and	w0, w0, #0xff
   1d568:	eor	w0, w0, #0x1
   1d56c:	and	w0, w0, #0xff
   1d570:	cmp	w0, #0x0
   1d574:	b.ne	1d634 <__sanitizer_cov_pcs_init@@Base+0x2598>  // b.any
   1d578:	ldr	x0, [sp, #24]
   1d57c:	ldr	x0, [x0, #1560]
   1d580:	cmp	x0, #0x0
   1d584:	b.eq	1d638 <__sanitizer_cov_pcs_init@@Base+0x259c>  // b.none
   1d588:	ldr	x0, [sp, #24]
   1d58c:	ldr	x0, [x0, #1560]
   1d590:	sub	x0, x0, #0x1
   1d594:	str	x0, [sp, #32]
   1d598:	ldr	x0, [sp, #32]
   1d59c:	cmp	x0, #0x0
   1d5a0:	b.lt	1d638 <__sanitizer_cov_pcs_init@@Base+0x259c>  // b.tstop
   1d5a4:	ldr	x1, [sp, #24]
   1d5a8:	ldr	x0, [sp, #32]
   1d5ac:	add	x0, x0, #0x82
   1d5b0:	lsl	x0, x0, #3
   1d5b4:	add	x0, x1, x0
   1d5b8:	ldr	w0, [x0, #8]
   1d5bc:	ldr	x1, [sp, #16]
   1d5c0:	cmp	w0, w1
   1d5c4:	b.ne	1d624 <__sanitizer_cov_pcs_init@@Base+0x2588>  // b.any
   1d5c8:	ldr	x0, [sp, #32]
   1d5cc:	add	x0, x0, #0x82
   1d5d0:	lsl	x0, x0, #3
   1d5d4:	ldr	x1, [sp, #24]
   1d5d8:	add	x0, x1, x0
   1d5dc:	add	x2, x0, #0x8
   1d5e0:	ldr	x0, [sp, #24]
   1d5e4:	ldr	x0, [x0, #1560]
   1d5e8:	sub	x0, x0, #0x1
   1d5ec:	add	x0, x0, #0x82
   1d5f0:	lsl	x0, x0, #3
   1d5f4:	ldr	x1, [sp, #24]
   1d5f8:	add	x0, x1, x0
   1d5fc:	add	x0, x0, #0x8
   1d600:	mov	x1, x0
   1d604:	mov	x0, x2
   1d608:	bl	1e1d0 <__sanitizer_cov_pcs_init@@Base+0x3134>
   1d60c:	ldr	x0, [sp, #24]
   1d610:	ldr	x0, [x0, #1560]
   1d614:	sub	x1, x0, #0x1
   1d618:	ldr	x0, [sp, #24]
   1d61c:	str	x1, [x0, #1560]
   1d620:	b	1d638 <__sanitizer_cov_pcs_init@@Base+0x259c>
   1d624:	ldr	x0, [sp, #32]
   1d628:	sub	x0, x0, #0x1
   1d62c:	str	x0, [sp, #32]
   1d630:	b	1d598 <__sanitizer_cov_pcs_init@@Base+0x24fc>
   1d634:	nop
   1d638:	ldr	x30, [sp], #48
   1d63c:	ret
   1d640:	str	x30, [sp, #-64]!
   1d644:	str	x0, [sp, #24]
   1d648:	str	x1, [sp, #16]
   1d64c:	ldr	x1, [sp, #16]
   1d650:	ldr	x0, [sp, #24]
   1d654:	bl	1d908 <__sanitizer_cov_pcs_init@@Base+0x286c>
   1d658:	ldr	x1, [sp, #16]
   1d65c:	ldr	x0, [sp, #24]
   1d660:	bl	1d974 <__sanitizer_cov_pcs_init@@Base+0x28d8>
   1d664:	str	x0, [sp, #56]
   1d668:	ldr	x1, [sp, #16]
   1d66c:	ldr	x0, [sp, #24]
   1d670:	bl	1d9e8 <__sanitizer_cov_pcs_init@@Base+0x294c>
   1d674:	str	x0, [sp, #48]
   1d678:	ldr	x1, [sp, #16]
   1d67c:	ldr	x0, [sp, #24]
   1d680:	bl	1da60 <__sanitizer_cov_pcs_init@@Base+0x29c4>
   1d684:	str	x0, [sp, #40]
   1d688:	ldr	x0, [sp, #56]
   1d68c:	lsl	x0, x0, #3
   1d690:	ldr	x1, [sp, #24]
   1d694:	add	x0, x1, x0
   1d698:	ldr	x1, [sp, #48]
   1d69c:	bl	1dad4 <__sanitizer_cov_pcs_init@@Base+0x2a38>
   1d6a0:	and	w0, w0, #0xff
   1d6a4:	eor	w0, w0, #0x1
   1d6a8:	and	w0, w0, #0xff
   1d6ac:	cmp	w0, #0x0
   1d6b0:	b.eq	1d6f0 <__sanitizer_cov_pcs_init@@Base+0x2654>  // b.none
   1d6b4:	ldr	x0, [sp, #56]
   1d6b8:	lsl	x0, x0, #3
   1d6bc:	ldr	x1, [sp, #24]
   1d6c0:	add	x0, x1, x0
   1d6c4:	ldr	x1, [sp, #48]
   1d6c8:	bl	1dcd4 <__sanitizer_cov_pcs_init@@Base+0x2c38>
   1d6cc:	ldr	x0, [sp, #56]
   1d6d0:	lsl	x1, x0, #6
   1d6d4:	ldr	x0, [sp, #48]
   1d6d8:	add	x0, x1, x0
   1d6dc:	lsl	x0, x0, #3
   1d6e0:	ldr	x1, [sp, #24]
   1d6e4:	add	x0, x1, x0
   1d6e8:	add	x0, x0, #0x8
   1d6ec:	bl	1d75c <__sanitizer_cov_pcs_init@@Base+0x26c0>
   1d6f0:	ldr	x0, [sp, #56]
   1d6f4:	lsl	x1, x0, #6
   1d6f8:	ldr	x0, [sp, #48]
   1d6fc:	add	x0, x1, x0
   1d700:	lsl	x0, x0, #3
   1d704:	ldr	x1, [sp, #24]
   1d708:	add	x0, x1, x0
   1d70c:	add	x0, x0, #0x8
   1d710:	ldr	x1, [sp, #40]
   1d714:	bl	1dcd4 <__sanitizer_cov_pcs_init@@Base+0x2c38>
   1d718:	strb	w0, [sp, #39]
   1d71c:	ldrb	w0, [sp, #39]
   1d720:	ldr	x30, [sp], #64
   1d724:	ret
   1d728:	str	x30, [sp, #-32]!
   1d72c:	str	x0, [sp, #24]
   1d730:	str	x1, [sp, #16]
   1d734:	ldr	x1, [sp, #16]
   1d738:	mov	x0, x1
   1d73c:	lsl	x0, x0, #6
   1d740:	add	x0, x0, x1
   1d744:	lsl	x0, x0, #3
   1d748:	ldr	x1, [sp, #24]
   1d74c:	add	x0, x1, x0
   1d750:	bl	1c93c <__sanitizer_cov_pcs_init@@Base+0x18a0>
   1d754:	ldr	x30, [sp], #32
   1d758:	ret
   1d75c:	sub	sp, sp, #0x10
   1d760:	str	x0, [sp, #8]
   1d764:	ldr	x0, [sp, #8]
   1d768:	str	xzr, [x0]
   1d76c:	nop
   1d770:	add	sp, sp, #0x10
   1d774:	ret
   1d778:	sub	sp, sp, #0x10
   1d77c:	str	x0, [sp, #8]
   1d780:	mov	x0, #0x1000                	// #4096
   1d784:	add	sp, sp, #0x10
   1d788:	ret
   1d78c:	sub	sp, sp, #0x10
   1d790:	str	x0, [sp, #8]
   1d794:	ldr	x0, [sp, #8]
   1d798:	ldr	x0, [x0]
   1d79c:	cmp	x0, #0x0
   1d7a0:	cset	w0, eq  // eq = none
   1d7a4:	and	w0, w0, #0xff
   1d7a8:	add	sp, sp, #0x10
   1d7ac:	ret
   1d7b0:	str	x30, [sp, #-80]!
   1d7b4:	str	x0, [sp, #24]
   1d7b8:	str	xzr, [sp, #72]
   1d7bc:	ldr	x0, [sp, #72]
   1d7c0:	cmp	x0, #0x0
   1d7c4:	b.ne	1d8b4 <__sanitizer_cov_pcs_init@@Base+0x2818>  // b.any
   1d7c8:	ldr	x0, [sp, #72]
   1d7cc:	lsl	x0, x0, #3
   1d7d0:	ldr	x1, [sp, #24]
   1d7d4:	add	x0, x1, x0
   1d7d8:	bl	1d78c <__sanitizer_cov_pcs_init@@Base+0x26f0>
   1d7dc:	and	w0, w0, #0xff
   1d7e0:	cmp	w0, #0x0
   1d7e4:	b.ne	1d8a0 <__sanitizer_cov_pcs_init@@Base+0x2804>  // b.any
   1d7e8:	ldr	x0, [sp, #72]
   1d7ec:	lsl	x0, x0, #3
   1d7f0:	ldr	x1, [sp, #24]
   1d7f4:	add	x0, x1, x0
   1d7f8:	bl	1dc44 <__sanitizer_cov_pcs_init@@Base+0x2ba8>
   1d7fc:	str	x0, [sp, #64]
   1d800:	ldr	x0, [sp, #72]
   1d804:	lsl	x1, x0, #6
   1d808:	ldr	x0, [sp, #64]
   1d80c:	add	x0, x1, x0
   1d810:	lsl	x0, x0, #3
   1d814:	ldr	x1, [sp, #24]
   1d818:	add	x0, x1, x0
   1d81c:	add	x0, x0, #0x8
   1d820:	bl	1dc44 <__sanitizer_cov_pcs_init@@Base+0x2ba8>
   1d824:	str	x0, [sp, #56]
   1d828:	ldr	x0, [sp, #72]
   1d82c:	lsl	x1, x0, #6
   1d830:	ldr	x0, [sp, #64]
   1d834:	add	x0, x1, x0
   1d838:	lsl	x0, x0, #3
   1d83c:	ldr	x1, [sp, #24]
   1d840:	add	x0, x1, x0
   1d844:	add	x0, x0, #0x8
   1d848:	bl	1d78c <__sanitizer_cov_pcs_init@@Base+0x26f0>
   1d84c:	and	w0, w0, #0xff
   1d850:	eor	w0, w0, #0x1
   1d854:	and	w0, w0, #0xff
   1d858:	cmp	w0, #0x0
   1d85c:	b.eq	1d878 <__sanitizer_cov_pcs_init@@Base+0x27dc>  // b.none
   1d860:	ldr	x0, [sp, #72]
   1d864:	lsl	x0, x0, #3
   1d868:	ldr	x1, [sp, #24]
   1d86c:	add	x0, x1, x0
   1d870:	ldr	x1, [sp, #64]
   1d874:	bl	1dcd4 <__sanitizer_cov_pcs_init@@Base+0x2c38>
   1d878:	ldr	x0, [sp, #72]
   1d87c:	lsl	x1, x0, #6
   1d880:	ldr	x0, [sp, #64]
   1d884:	add	x0, x1, x0
   1d888:	lsl	x0, x0, #6
   1d88c:	ldr	x1, [sp, #56]
   1d890:	add	x0, x1, x0
   1d894:	str	x0, [sp, #48]
   1d898:	ldr	x0, [sp, #48]
   1d89c:	b	1d900 <__sanitizer_cov_pcs_init@@Base+0x2864>
   1d8a0:	nop
   1d8a4:	ldr	x0, [sp, #72]
   1d8a8:	add	x0, x0, #0x1
   1d8ac:	str	x0, [sp, #72]
   1d8b0:	b	1d7bc <__sanitizer_cov_pcs_init@@Base+0x2720>
   1d8b4:	str	xzr, [sp, #40]
   1d8b8:	str	xzr, [sp, #32]
   1d8bc:	ldr	x1, [sp, #40]
   1d8c0:	ldr	x0, [sp, #32]
   1d8c4:	cmp	x1, x0
   1d8c8:	cset	w0, eq  // eq = none
   1d8cc:	and	w0, w0, #0xff
   1d8d0:	and	x0, x0, #0xff
   1d8d4:	cmp	x0, #0x0
   1d8d8:	b.eq	1d8fc <__sanitizer_cov_pcs_init@@Base+0x2860>  // b.none
   1d8dc:	ldr	x4, [sp, #32]
   1d8e0:	ldr	x3, [sp, #40]
   1d8e4:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1d8e8:	add	x2, x0, #0xe88
   1d8ec:	mov	w1, #0xbf                  	// #191
   1d8f0:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1d8f4:	add	x0, x0, #0xe98
   1d8f8:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1d8fc:	mov	x0, #0x0                   	// #0
   1d900:	ldr	x30, [sp], #80
   1d904:	ret
   1d908:	str	x30, [sp, #-48]!
   1d90c:	str	x0, [sp, #24]
   1d910:	str	x1, [sp, #16]
   1d914:	ldr	x0, [sp, #16]
   1d918:	str	x0, [sp, #40]
   1d91c:	ldr	x0, [sp, #24]
   1d920:	bl	1e210 <__sanitizer_cov_pcs_init@@Base+0x3174>
   1d924:	str	x0, [sp, #32]
   1d928:	ldr	x1, [sp, #40]
   1d92c:	ldr	x0, [sp, #32]
   1d930:	cmp	x1, x0
   1d934:	cset	w0, hi  // hi = pmore
   1d938:	and	w0, w0, #0xff
   1d93c:	and	x0, x0, #0xff
   1d940:	cmp	x0, #0x0
   1d944:	b.eq	1d968 <__sanitizer_cov_pcs_init@@Base+0x28cc>  // b.none
   1d948:	ldr	x4, [sp, #32]
   1d94c:	ldr	x3, [sp, #40]
   1d950:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1d954:	add	x2, x0, #0xed8
   1d958:	mov	w1, #0x143                 	// #323
   1d95c:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1d960:	add	x0, x0, #0xe98
   1d964:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1d968:	nop
   1d96c:	ldr	x30, [sp], #48
   1d970:	ret
   1d974:	str	x30, [sp, #-64]!
   1d978:	str	x0, [sp, #24]
   1d97c:	str	x1, [sp, #16]
   1d980:	ldr	x0, [sp, #16]
   1d984:	lsr	x0, x0, #12
   1d988:	str	x0, [sp, #56]
   1d98c:	ldr	x0, [sp, #56]
   1d990:	str	x0, [sp, #48]
   1d994:	mov	x0, #0x1                   	// #1
   1d998:	str	x0, [sp, #40]
   1d99c:	ldr	x1, [sp, #48]
   1d9a0:	ldr	x0, [sp, #40]
   1d9a4:	cmp	x1, x0
   1d9a8:	cset	w0, hi  // hi = pmore
   1d9ac:	and	w0, w0, #0xff
   1d9b0:	and	x0, x0, #0xff
   1d9b4:	cmp	x0, #0x0
   1d9b8:	b.eq	1d9dc <__sanitizer_cov_pcs_init@@Base+0x2940>  // b.none
   1d9bc:	ldr	x4, [sp, #40]
   1d9c0:	ldr	x3, [sp, #48]
   1d9c4:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1d9c8:	add	x2, x0, #0xef0
   1d9cc:	mov	w1, #0x147                 	// #327
   1d9d0:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1d9d4:	add	x0, x0, #0xe98
   1d9d8:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1d9dc:	ldr	x0, [sp, #56]
   1d9e0:	ldr	x30, [sp], #64
   1d9e4:	ret
   1d9e8:	str	x30, [sp, #-64]!
   1d9ec:	str	x0, [sp, #24]
   1d9f0:	str	x1, [sp, #16]
   1d9f4:	ldr	x0, [sp, #16]
   1d9f8:	lsr	x0, x0, #6
   1d9fc:	and	x0, x0, #0x3f
   1da00:	str	x0, [sp, #56]
   1da04:	ldr	x0, [sp, #56]
   1da08:	str	x0, [sp, #48]
   1da0c:	mov	x0, #0x40                  	// #64
   1da10:	str	x0, [sp, #40]
   1da14:	ldr	x1, [sp, #48]
   1da18:	ldr	x0, [sp, #40]
   1da1c:	cmp	x1, x0
   1da20:	cset	w0, hi  // hi = pmore
   1da24:	and	w0, w0, #0xff
   1da28:	and	x0, x0, #0xff
   1da2c:	cmp	x0, #0x0
   1da30:	b.eq	1da54 <__sanitizer_cov_pcs_init@@Base+0x29b8>  // b.none
   1da34:	ldr	x4, [sp, #40]
   1da38:	ldr	x3, [sp, #48]
   1da3c:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1da40:	add	x2, x0, #0xf10
   1da44:	mov	w1, #0x14d                 	// #333
   1da48:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1da4c:	add	x0, x0, #0xe98
   1da50:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1da54:	ldr	x0, [sp, #56]
   1da58:	ldr	x30, [sp], #64
   1da5c:	ret
   1da60:	str	x30, [sp, #-64]!
   1da64:	str	x0, [sp, #24]
   1da68:	str	x1, [sp, #16]
   1da6c:	ldr	x0, [sp, #16]
   1da70:	and	x0, x0, #0x3f
   1da74:	str	x0, [sp, #56]
   1da78:	ldr	x0, [sp, #56]
   1da7c:	str	x0, [sp, #48]
   1da80:	mov	x0, #0x40                  	// #64
   1da84:	str	x0, [sp, #40]
   1da88:	ldr	x1, [sp, #48]
   1da8c:	ldr	x0, [sp, #40]
   1da90:	cmp	x1, x0
   1da94:	cset	w0, hi  // hi = pmore
   1da98:	and	w0, w0, #0xff
   1da9c:	and	x0, x0, #0xff
   1daa0:	cmp	x0, #0x0
   1daa4:	b.eq	1dac8 <__sanitizer_cov_pcs_init@@Base+0x2a2c>  // b.none
   1daa8:	ldr	x4, [sp, #40]
   1daac:	ldr	x3, [sp, #48]
   1dab0:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1dab4:	add	x2, x0, #0xf10
   1dab8:	mov	w1, #0x153                 	// #339
   1dabc:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1dac0:	add	x0, x0, #0xe98
   1dac4:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1dac8:	ldr	x0, [sp, #56]
   1dacc:	ldr	x30, [sp], #64
   1dad0:	ret
   1dad4:	stp	x19, x30, [sp, #-32]!
   1dad8:	str	x0, [sp, #24]
   1dadc:	str	x1, [sp, #16]
   1dae0:	ldr	x0, [sp, #24]
   1dae4:	ldr	x19, [x0]
   1dae8:	ldr	x1, [sp, #16]
   1daec:	ldr	x0, [sp, #24]
   1daf0:	bl	1e224 <__sanitizer_cov_pcs_init@@Base+0x3188>
   1daf4:	and	x0, x19, x0
   1daf8:	cmp	x0, #0x0
   1dafc:	cset	w0, ne  // ne = any
   1db00:	and	w0, w0, #0xff
   1db04:	ldp	x19, x30, [sp], #32
   1db08:	ret
   1db0c:	str	x30, [sp, #-64]!
   1db10:	str	x0, [sp, #24]
   1db14:	str	x1, [sp, #16]
   1db18:	strb	wzr, [sp, #63]
   1db1c:	str	xzr, [sp, #48]
   1db20:	ldr	x0, [sp, #48]
   1db24:	cmp	x0, #0x0
   1db28:	b.ne	1dc38 <__sanitizer_cov_pcs_init@@Base+0x2b9c>  // b.any
   1db2c:	ldr	x0, [sp, #24]
   1db30:	ldr	x1, [sp, #48]
   1db34:	ldr	x0, [x0, x1, lsl #3]
   1db38:	str	x0, [sp, #32]
   1db3c:	ldr	x0, [sp, #48]
   1db40:	lsl	x0, x0, #3
   1db44:	ldr	x1, [sp, #16]
   1db48:	add	x1, x1, x0
   1db4c:	add	x0, sp, #0x20
   1db50:	bl	1e29c <__sanitizer_cov_pcs_init@@Base+0x3200>
   1db54:	add	x0, sp, #0x20
   1db58:	bl	1d78c <__sanitizer_cov_pcs_init@@Base+0x26f0>
   1db5c:	and	w0, w0, #0xff
   1db60:	eor	w0, w0, #0x1
   1db64:	and	w0, w0, #0xff
   1db68:	cmp	w0, #0x0
   1db6c:	b.eq	1dc28 <__sanitizer_cov_pcs_init@@Base+0x2b8c>  // b.none
   1db70:	add	x0, sp, #0x20
   1db74:	bl	1dc44 <__sanitizer_cov_pcs_init@@Base+0x2ba8>
   1db78:	str	x0, [sp, #40]
   1db7c:	ldr	x0, [sp, #48]
   1db80:	lsl	x1, x0, #6
   1db84:	ldr	x0, [sp, #40]
   1db88:	add	x0, x1, x0
   1db8c:	lsl	x0, x0, #3
   1db90:	ldr	x1, [sp, #24]
   1db94:	add	x0, x1, x0
   1db98:	add	x2, x0, #0x8
   1db9c:	ldr	x0, [sp, #48]
   1dba0:	lsl	x1, x0, #6
   1dba4:	ldr	x0, [sp, #40]
   1dba8:	add	x0, x1, x0
   1dbac:	lsl	x0, x0, #3
   1dbb0:	ldr	x1, [sp, #16]
   1dbb4:	add	x0, x1, x0
   1dbb8:	add	x0, x0, #0x8
   1dbbc:	mov	x1, x0
   1dbc0:	mov	x0, x2
   1dbc4:	bl	1e2f0 <__sanitizer_cov_pcs_init@@Base+0x3254>
   1dbc8:	and	w0, w0, #0xff
   1dbcc:	cmp	w0, #0x0
   1dbd0:	b.eq	1dbdc <__sanitizer_cov_pcs_init@@Base+0x2b40>  // b.none
   1dbd4:	mov	w0, #0x1                   	// #1
   1dbd8:	strb	w0, [sp, #63]
   1dbdc:	ldr	x0, [sp, #48]
   1dbe0:	lsl	x1, x0, #6
   1dbe4:	ldr	x0, [sp, #40]
   1dbe8:	add	x0, x1, x0
   1dbec:	lsl	x0, x0, #3
   1dbf0:	ldr	x1, [sp, #24]
   1dbf4:	add	x0, x1, x0
   1dbf8:	add	x0, x0, #0x8
   1dbfc:	bl	1d78c <__sanitizer_cov_pcs_init@@Base+0x26f0>
   1dc00:	and	w0, w0, #0xff
   1dc04:	cmp	w0, #0x0
   1dc08:	b.eq	1db54 <__sanitizer_cov_pcs_init@@Base+0x2ab8>  // b.none
   1dc0c:	ldr	x0, [sp, #48]
   1dc10:	lsl	x0, x0, #3
   1dc14:	ldr	x1, [sp, #24]
   1dc18:	add	x0, x1, x0
   1dc1c:	ldr	x1, [sp, #40]
   1dc20:	bl	1e348 <__sanitizer_cov_pcs_init@@Base+0x32ac>
   1dc24:	b	1db54 <__sanitizer_cov_pcs_init@@Base+0x2ab8>
   1dc28:	ldr	x0, [sp, #48]
   1dc2c:	add	x0, x0, #0x1
   1dc30:	str	x0, [sp, #48]
   1dc34:	b	1db20 <__sanitizer_cov_pcs_init@@Base+0x2a84>
   1dc38:	ldrb	w0, [sp, #63]
   1dc3c:	ldr	x30, [sp], #64
   1dc40:	ret
   1dc44:	str	x30, [sp, #-64]!
   1dc48:	str	x0, [sp, #24]
   1dc4c:	ldr	x0, [sp, #24]
   1dc50:	bl	1d78c <__sanitizer_cov_pcs_init@@Base+0x26f0>
   1dc54:	and	w0, w0, #0xff
   1dc58:	eor	w0, w0, #0x1
   1dc5c:	and	w0, w0, #0xff
   1dc60:	and	x0, x0, #0xff
   1dc64:	str	x0, [sp, #56]
   1dc68:	str	xzr, [sp, #48]
   1dc6c:	ldr	x1, [sp, #56]
   1dc70:	ldr	x0, [sp, #48]
   1dc74:	cmp	x1, x0
   1dc78:	cset	w0, eq  // eq = none
   1dc7c:	and	w0, w0, #0xff
   1dc80:	and	x0, x0, #0xff
   1dc84:	cmp	x0, #0x0
   1dc88:	b.eq	1dcac <__sanitizer_cov_pcs_init@@Base+0x2c10>  // b.none
   1dc8c:	ldr	x4, [sp, #48]
   1dc90:	ldr	x3, [sp, #56]
   1dc94:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1dc98:	add	x2, x0, #0xf30
   1dc9c:	mov	w1, #0x30                  	// #48
   1dca0:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1dca4:	add	x0, x0, #0xe98
   1dca8:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1dcac:	ldr	x0, [sp, #24]
   1dcb0:	ldr	x0, [x0]
   1dcb4:	bl	1bbc0 <__sanitizer_cov_pcs_init@@Base+0xb24>
   1dcb8:	str	x0, [sp, #40]
   1dcbc:	ldr	x1, [sp, #40]
   1dcc0:	ldr	x0, [sp, #24]
   1dcc4:	bl	1e348 <__sanitizer_cov_pcs_init@@Base+0x32ac>
   1dcc8:	ldr	x0, [sp, #40]
   1dccc:	ldr	x30, [sp], #64
   1dcd0:	ret
   1dcd4:	str	x30, [sp, #-48]!
   1dcd8:	str	x0, [sp, #24]
   1dcdc:	str	x1, [sp, #16]
   1dce0:	ldr	x0, [sp, #24]
   1dce4:	ldr	x0, [x0]
   1dce8:	str	x0, [sp, #40]
   1dcec:	ldr	x1, [sp, #16]
   1dcf0:	ldr	x0, [sp, #24]
   1dcf4:	bl	1e224 <__sanitizer_cov_pcs_init@@Base+0x3188>
   1dcf8:	mov	x1, x0
   1dcfc:	ldr	x0, [sp, #24]
   1dd00:	ldr	x0, [x0]
   1dd04:	orr	x1, x1, x0
   1dd08:	ldr	x0, [sp, #24]
   1dd0c:	str	x1, [x0]
   1dd10:	ldr	x0, [sp, #24]
   1dd14:	ldr	x0, [x0]
   1dd18:	ldr	x1, [sp, #40]
   1dd1c:	cmp	x1, x0
   1dd20:	cset	w0, ne  // ne = any
   1dd24:	and	w0, w0, #0xff
   1dd28:	ldr	x30, [sp], #48
   1dd2c:	ret
   1dd30:	sub	sp, sp, #0x20
   1dd34:	str	x0, [sp, #8]
   1dd38:	str	x1, [sp]
   1dd3c:	ldr	x0, [sp, #8]
   1dd40:	ldr	x0, [x0]
   1dd44:	str	x0, [sp, #24]
   1dd48:	ldr	x0, [sp, #8]
   1dd4c:	ldr	x1, [x0]
   1dd50:	ldr	x0, [sp]
   1dd54:	ldr	x0, [x0]
   1dd58:	orr	x1, x1, x0
   1dd5c:	ldr	x0, [sp, #8]
   1dd60:	str	x1, [x0]
   1dd64:	ldr	x0, [sp, #8]
   1dd68:	ldr	x0, [x0]
   1dd6c:	ldr	x1, [sp, #24]
   1dd70:	cmp	x1, x0
   1dd74:	cset	w0, ne  // ne = any
   1dd78:	and	w0, w0, #0xff
   1dd7c:	add	sp, sp, #0x20
   1dd80:	ret
   1dd84:	sub	sp, sp, #0x10
   1dd88:	str	x0, [sp, #8]
   1dd8c:	ldr	x0, [sp, #8]
   1dd90:	mov	x1, #0xffffffffffffffff    	// #-1
   1dd94:	str	x1, [x0]
   1dd98:	nop
   1dd9c:	add	sp, sp, #0x10
   1dda0:	ret
   1dda4:	str	x30, [sp, #-64]!
   1dda8:	str	x0, [sp, #24]
   1ddac:	str	x1, [sp, #16]
   1ddb0:	ldr	x0, [sp, #16]
   1ddb4:	str	x0, [sp, #56]
   1ddb8:	ldr	x0, [sp, #24]
   1ddbc:	bl	1c9f0 <__sanitizer_cov_pcs_init@@Base+0x1954>
   1ddc0:	str	x0, [sp, #48]
   1ddc4:	ldr	x1, [sp, #56]
   1ddc8:	ldr	x0, [sp, #48]
   1ddcc:	cmp	x1, x0
   1ddd0:	cset	w0, cc  // cc = lo, ul, last
   1ddd4:	and	w0, w0, #0xff
   1ddd8:	and	x0, x0, #0xff
   1dddc:	cmp	x0, #0x0
   1dde0:	b.eq	1de04 <__sanitizer_cov_pcs_init@@Base+0x2d68>  // b.none
   1dde4:	ldr	x4, [sp, #48]
   1dde8:	ldr	x3, [sp, #56]
   1ddec:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1ddf0:	add	x2, x0, #0xf48
   1ddf4:	mov	w1, #0x172                 	// #370
   1ddf8:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1ddfc:	add	x0, x0, #0xcd0
   1de00:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1de04:	ldr	x0, [sp, #24]
   1de08:	ldr	x0, [x0]
   1de0c:	str	x0, [sp, #40]
   1de10:	ldr	x1, [sp, #16]
   1de14:	ldr	x0, [sp, #24]
   1de18:	bl	1ce54 <__sanitizer_cov_pcs_init@@Base+0x1db8>
   1de1c:	str	x0, [sp, #32]
   1de20:	ldr	x1, [sp, #40]
   1de24:	ldr	x0, [sp, #32]
   1de28:	cmp	x1, x0
   1de2c:	cset	w0, ne  // ne = any
   1de30:	and	w0, w0, #0xff
   1de34:	and	x0, x0, #0xff
   1de38:	cmp	x0, #0x0
   1de3c:	b.eq	1de60 <__sanitizer_cov_pcs_init@@Base+0x2dc4>  // b.none
   1de40:	ldr	x4, [sp, #32]
   1de44:	ldr	x3, [sp, #40]
   1de48:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1de4c:	add	x2, x0, #0xf60
   1de50:	mov	w1, #0x173                 	// #371
   1de54:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1de58:	add	x0, x0, #0xcd0
   1de5c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1de60:	nop
   1de64:	ldr	x30, [sp], #64
   1de68:	ret
   1de6c:	str	x30, [sp, #-64]!
   1de70:	str	x0, [sp, #24]
   1de74:	str	x1, [sp, #16]
   1de78:	str	xzr, [sp, #56]
   1de7c:	ldr	x0, [sp, #56]
   1de80:	cmp	x0, #0x0
   1de84:	b.ne	1df7c <__sanitizer_cov_pcs_init@@Base+0x2ee0>  // b.any
   1de88:	ldr	x0, [sp, #24]
   1de8c:	ldr	x1, [sp, #56]
   1de90:	ldr	x0, [x0, x1, lsl #3]
   1de94:	str	x0, [sp, #40]
   1de98:	ldr	x0, [sp, #56]
   1de9c:	lsl	x0, x0, #3
   1dea0:	ldr	x1, [sp, #16]
   1dea4:	add	x1, x1, x0
   1dea8:	add	x0, sp, #0x28
   1deac:	bl	1e29c <__sanitizer_cov_pcs_init@@Base+0x3200>
   1deb0:	add	x0, sp, #0x28
   1deb4:	bl	1d78c <__sanitizer_cov_pcs_init@@Base+0x26f0>
   1deb8:	and	w0, w0, #0xff
   1debc:	eor	w0, w0, #0x1
   1dec0:	and	w0, w0, #0xff
   1dec4:	cmp	w0, #0x0
   1dec8:	b.eq	1df6c <__sanitizer_cov_pcs_init@@Base+0x2ed0>  // b.none
   1decc:	add	x0, sp, #0x28
   1ded0:	bl	1dc44 <__sanitizer_cov_pcs_init@@Base+0x2ba8>
   1ded4:	str	x0, [sp, #48]
   1ded8:	ldr	x0, [sp, #56]
   1dedc:	lsl	x0, x0, #3
   1dee0:	ldr	x1, [sp, #16]
   1dee4:	add	x0, x1, x0
   1dee8:	ldr	x1, [sp, #48]
   1deec:	bl	1dad4 <__sanitizer_cov_pcs_init@@Base+0x2a38>
   1def0:	and	w0, w0, #0xff
   1def4:	eor	w0, w0, #0x1
   1def8:	and	w0, w0, #0xff
   1defc:	cmp	w0, #0x0
   1df00:	b.ne	1df64 <__sanitizer_cov_pcs_init@@Base+0x2ec8>  // b.any
   1df04:	ldr	x0, [sp, #56]
   1df08:	lsl	x1, x0, #6
   1df0c:	ldr	x0, [sp, #48]
   1df10:	add	x0, x1, x0
   1df14:	lsl	x0, x0, #3
   1df18:	ldr	x1, [sp, #24]
   1df1c:	add	x0, x1, x0
   1df20:	add	x2, x0, #0x8
   1df24:	ldr	x0, [sp, #56]
   1df28:	lsl	x1, x0, #6
   1df2c:	ldr	x0, [sp, #48]
   1df30:	add	x0, x1, x0
   1df34:	lsl	x0, x0, #3
   1df38:	ldr	x1, [sp, #16]
   1df3c:	add	x0, x1, x0
   1df40:	add	x0, x0, #0x8
   1df44:	mov	x1, x0
   1df48:	mov	x0, x2
   1df4c:	bl	1e3a4 <__sanitizer_cov_pcs_init@@Base+0x3308>
   1df50:	and	w0, w0, #0xff
   1df54:	cmp	w0, #0x0
   1df58:	b.eq	1deb0 <__sanitizer_cov_pcs_init@@Base+0x2e14>  // b.none
   1df5c:	mov	w0, #0x1                   	// #1
   1df60:	b	1df80 <__sanitizer_cov_pcs_init@@Base+0x2ee4>
   1df64:	nop
   1df68:	b	1deb0 <__sanitizer_cov_pcs_init@@Base+0x2e14>
   1df6c:	ldr	x0, [sp, #56]
   1df70:	add	x0, x0, #0x1
   1df74:	str	x0, [sp, #56]
   1df78:	b	1de7c <__sanitizer_cov_pcs_init@@Base+0x2de0>
   1df7c:	mov	w0, #0x0                   	// #0
   1df80:	ldr	x30, [sp], #64
   1df84:	ret
   1df88:	str	x30, [sp, #-128]!
   1df8c:	str	x0, [sp, #56]
   1df90:	str	x1, [sp, #48]
   1df94:	str	x2, [sp, #40]
   1df98:	str	x3, [sp, #32]
   1df9c:	str	x4, [sp, #24]
   1dfa0:	ldr	x0, [sp, #24]
   1dfa4:	cmp	x0, #0x0
   1dfa8:	b.ne	1dfb4 <__sanitizer_cov_pcs_init@@Base+0x2f18>  // b.any
   1dfac:	mov	x0, #0x0                   	// #0
   1dfb0:	b	1e06c <__sanitizer_cov_pcs_init@@Base+0x2fd0>
   1dfb4:	ldr	x0, [sp, #32]
   1dfb8:	ldr	x1, [sp, #48]
   1dfbc:	str	x1, [x0]
   1dfc0:	ldr	x1, [sp, #48]
   1dfc4:	ldr	x0, [sp, #40]
   1dfc8:	bl	1cabc <__sanitizer_cov_pcs_init@@Base+0x1a20>
   1dfcc:	and	w0, w0, #0xff
   1dfd0:	cmp	w0, #0x0
   1dfd4:	b.eq	1dfe0 <__sanitizer_cov_pcs_init@@Base+0x2f44>  // b.none
   1dfd8:	mov	x0, #0x1                   	// #1
   1dfdc:	b	1e06c <__sanitizer_cov_pcs_init@@Base+0x2fd0>
   1dfe0:	ldr	x1, [sp, #48]
   1dfe4:	mov	x0, x1
   1dfe8:	lsl	x0, x0, #6
   1dfec:	add	x0, x0, x1
   1dff0:	lsl	x0, x0, #3
   1dff4:	ldr	x1, [sp, #56]
   1dff8:	add	x1, x1, x0
   1dffc:	add	x0, sp, #0x48
   1e000:	bl	1e3d8 <__sanitizer_cov_pcs_init@@Base+0x333c>
   1e004:	add	x0, sp, #0x48
   1e008:	bl	1e43c <__sanitizer_cov_pcs_init@@Base+0x33a0>
   1e00c:	and	w0, w0, #0xff
   1e010:	cmp	w0, #0x0
   1e014:	b.eq	1e068 <__sanitizer_cov_pcs_init@@Base+0x2fcc>  // b.none
   1e018:	add	x0, sp, #0x48
   1e01c:	bl	1e4cc <__sanitizer_cov_pcs_init@@Base+0x3430>
   1e020:	str	x0, [sp, #120]
   1e024:	ldr	x0, [sp, #32]
   1e028:	add	x1, x0, #0x8
   1e02c:	ldr	x0, [sp, #24]
   1e030:	sub	x0, x0, #0x1
   1e034:	mov	x4, x0
   1e038:	mov	x3, x1
   1e03c:	ldr	x2, [sp, #40]
   1e040:	ldr	x1, [sp, #120]
   1e044:	ldr	x0, [sp, #56]
   1e048:	bl	1df88 <__sanitizer_cov_pcs_init@@Base+0x2eec>
   1e04c:	str	x0, [sp, #112]
   1e050:	ldr	x0, [sp, #112]
   1e054:	cmp	x0, #0x0
   1e058:	b.eq	1e004 <__sanitizer_cov_pcs_init@@Base+0x2f68>  // b.none
   1e05c:	ldr	x0, [sp, #112]
   1e060:	add	x0, x0, #0x1
   1e064:	b	1e06c <__sanitizer_cov_pcs_init@@Base+0x2fd0>
   1e068:	mov	x0, #0x0                   	// #0
   1e06c:	ldr	x30, [sp], #128
   1e070:	ret
   1e074:	str	x30, [sp, #-48]!
   1e078:	str	x0, [sp, #24]
   1e07c:	str	x1, [sp, #16]
   1e080:	ldr	x0, [sp, #16]
   1e084:	str	x0, [sp, #40]
   1e088:	ldr	x0, [sp, #24]
   1e08c:	bl	1c9f0 <__sanitizer_cov_pcs_init@@Base+0x1954>
   1e090:	str	x0, [sp, #32]
   1e094:	ldr	x1, [sp, #40]
   1e098:	ldr	x0, [sp, #32]
   1e09c:	cmp	x1, x0
   1e0a0:	cset	w0, cs  // cs = hs, nlast
   1e0a4:	and	w0, w0, #0xff
   1e0a8:	and	x0, x0, #0xff
   1e0ac:	cmp	x0, #0x0
   1e0b0:	b.eq	1e0d4 <__sanitizer_cov_pcs_init@@Base+0x3038>  // b.none
   1e0b4:	ldr	x4, [sp, #32]
   1e0b8:	ldr	x3, [sp, #40]
   1e0bc:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1e0c0:	add	x2, x0, #0xf90
   1e0c4:	mov	w1, #0x16f                 	// #367
   1e0c8:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1e0cc:	add	x0, x0, #0xcd0
   1e0d0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1e0d4:	nop
   1e0d8:	ldr	x30, [sp], #48
   1e0dc:	ret
   1e0e0:	str	x30, [sp, #-64]!
   1e0e4:	str	x0, [sp, #24]
   1e0e8:	str	x1, [sp, #16]
   1e0ec:	ldr	x1, [sp, #16]
   1e0f0:	ldr	x0, [sp, #24]
   1e0f4:	bl	1d908 <__sanitizer_cov_pcs_init@@Base+0x286c>
   1e0f8:	ldr	x1, [sp, #16]
   1e0fc:	ldr	x0, [sp, #24]
   1e100:	bl	1d974 <__sanitizer_cov_pcs_init@@Base+0x28d8>
   1e104:	str	x0, [sp, #48]
   1e108:	ldr	x1, [sp, #16]
   1e10c:	ldr	x0, [sp, #24]
   1e110:	bl	1d9e8 <__sanitizer_cov_pcs_init@@Base+0x294c>
   1e114:	str	x0, [sp, #40]
   1e118:	ldr	x1, [sp, #16]
   1e11c:	ldr	x0, [sp, #24]
   1e120:	bl	1da60 <__sanitizer_cov_pcs_init@@Base+0x29c4>
   1e124:	str	x0, [sp, #32]
   1e128:	strb	wzr, [sp, #63]
   1e12c:	ldr	x0, [sp, #48]
   1e130:	lsl	x0, x0, #3
   1e134:	ldr	x1, [sp, #24]
   1e138:	add	x0, x1, x0
   1e13c:	ldr	x1, [sp, #40]
   1e140:	bl	1dad4 <__sanitizer_cov_pcs_init@@Base+0x2a38>
   1e144:	and	w0, w0, #0xff
   1e148:	cmp	w0, #0x0
   1e14c:	b.eq	1e1c4 <__sanitizer_cov_pcs_init@@Base+0x3128>  // b.none
   1e150:	ldr	x0, [sp, #48]
   1e154:	lsl	x1, x0, #6
   1e158:	ldr	x0, [sp, #40]
   1e15c:	add	x0, x1, x0
   1e160:	lsl	x0, x0, #3
   1e164:	ldr	x1, [sp, #24]
   1e168:	add	x0, x1, x0
   1e16c:	add	x0, x0, #0x8
   1e170:	ldr	x1, [sp, #32]
   1e174:	bl	1e348 <__sanitizer_cov_pcs_init@@Base+0x32ac>
   1e178:	strb	w0, [sp, #63]
   1e17c:	ldr	x0, [sp, #48]
   1e180:	lsl	x1, x0, #6
   1e184:	ldr	x0, [sp, #40]
   1e188:	add	x0, x1, x0
   1e18c:	lsl	x0, x0, #3
   1e190:	ldr	x1, [sp, #24]
   1e194:	add	x0, x1, x0
   1e198:	add	x0, x0, #0x8
   1e19c:	bl	1d78c <__sanitizer_cov_pcs_init@@Base+0x26f0>
   1e1a0:	and	w0, w0, #0xff
   1e1a4:	cmp	w0, #0x0
   1e1a8:	b.eq	1e1c4 <__sanitizer_cov_pcs_init@@Base+0x3128>  // b.none
   1e1ac:	ldr	x0, [sp, #48]
   1e1b0:	lsl	x0, x0, #3
   1e1b4:	ldr	x1, [sp, #24]
   1e1b8:	add	x0, x1, x0
   1e1bc:	ldr	x1, [sp, #40]
   1e1c0:	bl	1e348 <__sanitizer_cov_pcs_init@@Base+0x32ac>
   1e1c4:	ldrb	w0, [sp, #63]
   1e1c8:	ldr	x30, [sp], #64
   1e1cc:	ret
   1e1d0:	sub	sp, sp, #0x20
   1e1d4:	str	x0, [sp, #8]
   1e1d8:	str	x1, [sp]
   1e1dc:	ldr	x0, [sp, #8]
   1e1e0:	ldr	x0, [x0]
   1e1e4:	str	x0, [sp, #24]
   1e1e8:	ldr	x0, [sp, #8]
   1e1ec:	ldr	x1, [sp]
   1e1f0:	ldr	x1, [x1]
   1e1f4:	str	x1, [x0]
   1e1f8:	ldr	x0, [sp]
   1e1fc:	ldr	x1, [sp, #24]
   1e200:	str	x1, [x0]
   1e204:	nop
   1e208:	add	sp, sp, #0x20
   1e20c:	ret
   1e210:	sub	sp, sp, #0x10
   1e214:	str	x0, [sp, #8]
   1e218:	mov	x0, #0x1000                	// #4096
   1e21c:	add	sp, sp, #0x10
   1e220:	ret
   1e224:	str	x30, [sp, #-48]!
   1e228:	str	x0, [sp, #24]
   1e22c:	str	x1, [sp, #16]
   1e230:	ldr	x0, [sp, #16]
   1e234:	str	x0, [sp, #40]
   1e238:	ldr	x0, [sp, #24]
   1e23c:	bl	1e788 <__sanitizer_cov_pcs_init@@Base+0x36ec>
   1e240:	str	x0, [sp, #32]
   1e244:	ldr	x1, [sp, #40]
   1e248:	ldr	x0, [sp, #32]
   1e24c:	cmp	x1, x0
   1e250:	cset	w0, cs  // cs = hs, nlast
   1e254:	and	w0, w0, #0xff
   1e258:	and	x0, x0, #0xff
   1e25c:	cmp	x0, #0x0
   1e260:	b.eq	1e284 <__sanitizer_cov_pcs_init@@Base+0x31e8>  // b.none
   1e264:	ldr	x4, [sp, #32]
   1e268:	ldr	x3, [sp, #40]
   1e26c:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1e270:	add	x2, x0, #0xf90
   1e274:	mov	w1, #0x63                  	// #99
   1e278:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1e27c:	add	x0, x0, #0xe98
   1e280:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1e284:	ldr	x0, [sp, #16]
   1e288:	mov	w1, w0
   1e28c:	mov	x0, #0x1                   	// #1
   1e290:	lsl	x0, x0, x1
   1e294:	ldr	x30, [sp], #48
   1e298:	ret
   1e29c:	sub	sp, sp, #0x20
   1e2a0:	str	x0, [sp, #8]
   1e2a4:	str	x1, [sp]
   1e2a8:	ldr	x0, [sp, #8]
   1e2ac:	ldr	x0, [x0]
   1e2b0:	str	x0, [sp, #24]
   1e2b4:	ldr	x0, [sp, #8]
   1e2b8:	ldr	x1, [x0]
   1e2bc:	ldr	x0, [sp]
   1e2c0:	ldr	x0, [x0]
   1e2c4:	and	x1, x1, x0
   1e2c8:	ldr	x0, [sp, #8]
   1e2cc:	str	x1, [x0]
   1e2d0:	ldr	x0, [sp, #8]
   1e2d4:	ldr	x0, [x0]
   1e2d8:	ldr	x1, [sp, #24]
   1e2dc:	cmp	x1, x0
   1e2e0:	cset	w0, ne  // ne = any
   1e2e4:	and	w0, w0, #0xff
   1e2e8:	add	sp, sp, #0x20
   1e2ec:	ret
   1e2f0:	sub	sp, sp, #0x20
   1e2f4:	str	x0, [sp, #8]
   1e2f8:	str	x1, [sp]
   1e2fc:	ldr	x0, [sp, #8]
   1e300:	ldr	x0, [x0]
   1e304:	str	x0, [sp, #24]
   1e308:	ldr	x0, [sp, #8]
   1e30c:	ldr	x1, [x0]
   1e310:	ldr	x0, [sp]
   1e314:	ldr	x0, [x0]
   1e318:	mvn	x0, x0
   1e31c:	and	x1, x1, x0
   1e320:	ldr	x0, [sp, #8]
   1e324:	str	x1, [x0]
   1e328:	ldr	x0, [sp, #8]
   1e32c:	ldr	x0, [x0]
   1e330:	ldr	x1, [sp, #24]
   1e334:	cmp	x1, x0
   1e338:	cset	w0, ne  // ne = any
   1e33c:	and	w0, w0, #0xff
   1e340:	add	sp, sp, #0x20
   1e344:	ret
   1e348:	str	x30, [sp, #-48]!
   1e34c:	str	x0, [sp, #24]
   1e350:	str	x1, [sp, #16]
   1e354:	ldr	x0, [sp, #24]
   1e358:	ldr	x0, [x0]
   1e35c:	str	x0, [sp, #40]
   1e360:	ldr	x1, [sp, #16]
   1e364:	ldr	x0, [sp, #24]
   1e368:	bl	1e224 <__sanitizer_cov_pcs_init@@Base+0x3188>
   1e36c:	mvn	x1, x0
   1e370:	ldr	x0, [sp, #24]
   1e374:	ldr	x0, [x0]
   1e378:	and	x1, x1, x0
   1e37c:	ldr	x0, [sp, #24]
   1e380:	str	x1, [x0]
   1e384:	ldr	x0, [sp, #24]
   1e388:	ldr	x0, [x0]
   1e38c:	ldr	x1, [sp, #40]
   1e390:	cmp	x1, x0
   1e394:	cset	w0, ne  // ne = any
   1e398:	and	w0, w0, #0xff
   1e39c:	ldr	x30, [sp], #48
   1e3a0:	ret
   1e3a4:	sub	sp, sp, #0x10
   1e3a8:	str	x0, [sp, #8]
   1e3ac:	str	x1, [sp]
   1e3b0:	ldr	x0, [sp, #8]
   1e3b4:	ldr	x1, [x0]
   1e3b8:	ldr	x0, [sp]
   1e3bc:	ldr	x0, [x0]
   1e3c0:	and	x0, x1, x0
   1e3c4:	cmp	x0, #0x0
   1e3c8:	cset	w0, ne  // ne = any
   1e3cc:	and	w0, w0, #0xff
   1e3d0:	add	sp, sp, #0x10
   1e3d4:	ret
   1e3d8:	str	x30, [sp, #-32]!
   1e3dc:	str	x0, [sp, #24]
   1e3e0:	str	x1, [sp, #16]
   1e3e4:	ldr	x0, [sp, #24]
   1e3e8:	ldr	x1, [sp, #16]
   1e3ec:	str	x1, [x0]
   1e3f0:	ldr	x0, [sp, #24]
   1e3f4:	str	xzr, [x0, #8]
   1e3f8:	ldr	x0, [sp, #24]
   1e3fc:	str	xzr, [x0, #16]
   1e400:	ldr	x0, [sp, #24]
   1e404:	add	x0, x0, #0x18
   1e408:	bl	1e79c <__sanitizer_cov_pcs_init@@Base+0x3700>
   1e40c:	ldr	x0, [sp, #24]
   1e410:	add	x0, x0, #0x20
   1e414:	bl	1e79c <__sanitizer_cov_pcs_init@@Base+0x3700>
   1e418:	ldr	x0, [sp, #24]
   1e41c:	add	x0, x0, #0x18
   1e420:	bl	1e7b0 <__sanitizer_cov_pcs_init@@Base+0x3714>
   1e424:	ldr	x0, [sp, #24]
   1e428:	add	x0, x0, #0x20
   1e42c:	bl	1e7b0 <__sanitizer_cov_pcs_init@@Base+0x3714>
   1e430:	nop
   1e434:	ldr	x30, [sp], #32
   1e438:	ret
   1e43c:	str	x30, [sp, #-48]!
   1e440:	str	x0, [sp, #24]
   1e444:	ldr	x0, [sp, #24]
   1e448:	add	x0, x0, #0x18
   1e44c:	bl	1e7cc <__sanitizer_cov_pcs_init@@Base+0x3730>
   1e450:	and	w0, w0, #0xff
   1e454:	cmp	w0, #0x0
   1e458:	b.eq	1e464 <__sanitizer_cov_pcs_init@@Base+0x33c8>  // b.none
   1e45c:	mov	w0, #0x1                   	// #1
   1e460:	b	1e4c4 <__sanitizer_cov_pcs_init@@Base+0x3428>
   1e464:	ldr	x0, [sp, #24]
   1e468:	ldr	x0, [x0, #8]
   1e46c:	str	x0, [sp, #40]
   1e470:	ldr	x0, [sp, #40]
   1e474:	cmp	x0, #0x0
   1e478:	b.ne	1e4c0 <__sanitizer_cov_pcs_init@@Base+0x3424>  // b.any
   1e47c:	ldr	x0, [sp, #24]
   1e480:	ldr	x1, [x0]
   1e484:	ldr	x0, [sp, #40]
   1e488:	lsl	x0, x0, #3
   1e48c:	add	x0, x1, x0
   1e490:	bl	1d78c <__sanitizer_cov_pcs_init@@Base+0x26f0>
   1e494:	and	w0, w0, #0xff
   1e498:	eor	w0, w0, #0x1
   1e49c:	and	w0, w0, #0xff
   1e4a0:	cmp	w0, #0x0
   1e4a4:	b.eq	1e4b0 <__sanitizer_cov_pcs_init@@Base+0x3414>  // b.none
   1e4a8:	mov	w0, #0x1                   	// #1
   1e4ac:	b	1e4c4 <__sanitizer_cov_pcs_init@@Base+0x3428>
   1e4b0:	ldr	x0, [sp, #40]
   1e4b4:	add	x0, x0, #0x1
   1e4b8:	str	x0, [sp, #40]
   1e4bc:	b	1e470 <__sanitizer_cov_pcs_init@@Base+0x33d4>
   1e4c0:	mov	w0, #0x0                   	// #0
   1e4c4:	ldr	x30, [sp], #48
   1e4c8:	ret
   1e4cc:	str	x30, [sp, #-96]!
   1e4d0:	str	x0, [sp, #24]
   1e4d4:	ldr	x0, [sp, #24]
   1e4d8:	add	x0, x0, #0x18
   1e4dc:	bl	1e7cc <__sanitizer_cov_pcs_init@@Base+0x3730>
   1e4e0:	and	w0, w0, #0xff
   1e4e4:	eor	w0, w0, #0x1
   1e4e8:	and	w0, w0, #0xff
   1e4ec:	cmp	w0, #0x0
   1e4f0:	b.eq	1e51c <__sanitizer_cov_pcs_init@@Base+0x3480>  // b.none
   1e4f4:	ldr	x0, [sp, #24]
   1e4f8:	add	x0, x0, #0x20
   1e4fc:	bl	1e7cc <__sanitizer_cov_pcs_init@@Base+0x3730>
   1e500:	and	w0, w0, #0xff
   1e504:	eor	w0, w0, #0x1
   1e508:	and	w0, w0, #0xff
   1e50c:	cmp	w0, #0x0
   1e510:	b.eq	1e51c <__sanitizer_cov_pcs_init@@Base+0x3480>  // b.none
   1e514:	mov	w0, #0x1                   	// #1
   1e518:	b	1e520 <__sanitizer_cov_pcs_init@@Base+0x3484>
   1e51c:	mov	w0, #0x0                   	// #0
   1e520:	cmp	w0, #0x0
   1e524:	b.eq	1e5ac <__sanitizer_cov_pcs_init@@Base+0x3510>  // b.none
   1e528:	ldr	x0, [sp, #24]
   1e52c:	ldr	x0, [x0, #8]
   1e530:	cmp	x0, #0x0
   1e534:	b.ne	1e5ac <__sanitizer_cov_pcs_init@@Base+0x3510>  // b.any
   1e538:	ldr	x0, [sp, #24]
   1e53c:	ldr	x1, [x0]
   1e540:	ldr	x0, [sp, #24]
   1e544:	ldr	x0, [x0, #8]
   1e548:	lsl	x0, x0, #3
   1e54c:	add	x0, x1, x0
   1e550:	bl	1d78c <__sanitizer_cov_pcs_init@@Base+0x26f0>
   1e554:	and	w0, w0, #0xff
   1e558:	cmp	w0, #0x0
   1e55c:	b.ne	1e590 <__sanitizer_cov_pcs_init@@Base+0x34f4>  // b.any
   1e560:	ldr	x0, [sp, #24]
   1e564:	ldr	x1, [x0]
   1e568:	ldr	x0, [sp, #24]
   1e56c:	ldr	x0, [x0, #8]
   1e570:	lsl	x0, x0, #3
   1e574:	add	x1, x1, x0
   1e578:	add	x0, sp, #0x20
   1e57c:	bl	1e7f0 <__sanitizer_cov_pcs_init@@Base+0x3754>
   1e580:	ldr	x0, [sp, #24]
   1e584:	ldr	x1, [sp, #32]
   1e588:	str	x1, [x0, #24]
   1e58c:	b	1e5ac <__sanitizer_cov_pcs_init@@Base+0x3510>
   1e590:	nop
   1e594:	ldr	x0, [sp, #24]
   1e598:	ldr	x0, [x0, #8]
   1e59c:	add	x1, x0, #0x1
   1e5a0:	ldr	x0, [sp, #24]
   1e5a4:	str	x1, [x0, #8]
   1e5a8:	b	1e528 <__sanitizer_cov_pcs_init@@Base+0x348c>
   1e5ac:	ldr	x0, [sp, #24]
   1e5b0:	add	x0, x0, #0x20
   1e5b4:	bl	1e7cc <__sanitizer_cov_pcs_init@@Base+0x3730>
   1e5b8:	and	w0, w0, #0xff
   1e5bc:	eor	w0, w0, #0x1
   1e5c0:	and	w0, w0, #0xff
   1e5c4:	cmp	w0, #0x0
   1e5c8:	b.eq	1e680 <__sanitizer_cov_pcs_init@@Base+0x35e4>  // b.none
   1e5cc:	ldr	x0, [sp, #24]
   1e5d0:	add	x0, x0, #0x18
   1e5d4:	bl	1e7cc <__sanitizer_cov_pcs_init@@Base+0x3730>
   1e5d8:	and	w0, w0, #0xff
   1e5dc:	and	x0, x0, #0xff
   1e5e0:	str	x0, [sp, #88]
   1e5e4:	str	xzr, [sp, #80]
   1e5e8:	ldr	x1, [sp, #88]
   1e5ec:	ldr	x0, [sp, #80]
   1e5f0:	cmp	x1, x0
   1e5f4:	cset	w0, eq  // eq = none
   1e5f8:	and	w0, w0, #0xff
   1e5fc:	and	x0, x0, #0xff
   1e600:	cmp	x0, #0x0
   1e604:	b.eq	1e628 <__sanitizer_cov_pcs_init@@Base+0x358c>  // b.none
   1e608:	ldr	x4, [sp, #80]
   1e60c:	ldr	x3, [sp, #88]
   1e610:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1e614:	add	x2, x0, #0xfa8
   1e618:	mov	w1, #0x12c                 	// #300
   1e61c:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1e620:	add	x0, x0, #0xe98
   1e624:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1e628:	ldr	x0, [sp, #24]
   1e62c:	add	x0, x0, #0x18
   1e630:	bl	1e818 <__sanitizer_cov_pcs_init@@Base+0x377c>
   1e634:	mov	x1, x0
   1e638:	ldr	x0, [sp, #24]
   1e63c:	str	x1, [x0, #16]
   1e640:	ldr	x0, [sp, #24]
   1e644:	ldr	x1, [x0]
   1e648:	ldr	x0, [sp, #24]
   1e64c:	ldr	x2, [x0, #8]
   1e650:	ldr	x0, [sp, #24]
   1e654:	ldr	x0, [x0, #16]
   1e658:	lsl	x2, x2, #6
   1e65c:	add	x0, x2, x0
   1e660:	lsl	x0, x0, #3
   1e664:	add	x0, x1, x0
   1e668:	add	x1, x0, #0x8
   1e66c:	add	x0, sp, #0x28
   1e670:	bl	1e7f0 <__sanitizer_cov_pcs_init@@Base+0x3754>
   1e674:	ldr	x0, [sp, #24]
   1e678:	ldr	x1, [sp, #40]
   1e67c:	str	x1, [x0, #32]
   1e680:	ldr	x0, [sp, #24]
   1e684:	add	x0, x0, #0x20
   1e688:	bl	1e7cc <__sanitizer_cov_pcs_init@@Base+0x3730>
   1e68c:	and	w0, w0, #0xff
   1e690:	and	x0, x0, #0xff
   1e694:	str	x0, [sp, #72]
   1e698:	str	xzr, [sp, #64]
   1e69c:	ldr	x1, [sp, #72]
   1e6a0:	ldr	x0, [sp, #64]
   1e6a4:	cmp	x1, x0
   1e6a8:	cset	w0, eq  // eq = none
   1e6ac:	and	w0, w0, #0xff
   1e6b0:	and	x0, x0, #0xff
   1e6b4:	cmp	x0, #0x0
   1e6b8:	b.eq	1e6dc <__sanitizer_cov_pcs_init@@Base+0x3640>  // b.none
   1e6bc:	ldr	x4, [sp, #64]
   1e6c0:	ldr	x3, [sp, #72]
   1e6c4:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1e6c8:	add	x2, x0, #0xfc8
   1e6cc:	mov	w1, #0x132                 	// #306
   1e6d0:	adrp	x0, 52000 <__asan_backtrace_vector_release@@Base+0x3340>
   1e6d4:	add	x0, x0, #0xe98
   1e6d8:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1e6dc:	ldr	x0, [sp, #24]
   1e6e0:	add	x0, x0, #0x20
   1e6e4:	bl	1e818 <__sanitizer_cov_pcs_init@@Base+0x377c>
   1e6e8:	str	x0, [sp, #56]
   1e6ec:	ldr	x0, [sp, #24]
   1e6f0:	ldr	x0, [x0, #8]
   1e6f4:	lsl	x1, x0, #6
   1e6f8:	ldr	x0, [sp, #24]
   1e6fc:	ldr	x0, [x0, #16]
   1e700:	add	x0, x1, x0
   1e704:	lsl	x0, x0, #6
   1e708:	ldr	x1, [sp, #56]
   1e70c:	add	x0, x1, x0
   1e710:	str	x0, [sp, #48]
   1e714:	ldr	x0, [sp, #24]
   1e718:	add	x0, x0, #0x18
   1e71c:	bl	1e7cc <__sanitizer_cov_pcs_init@@Base+0x3730>
   1e720:	and	w0, w0, #0xff
   1e724:	eor	w0, w0, #0x1
   1e728:	and	w0, w0, #0xff
   1e72c:	cmp	w0, #0x0
   1e730:	b.eq	1e75c <__sanitizer_cov_pcs_init@@Base+0x36c0>  // b.none
   1e734:	ldr	x0, [sp, #24]
   1e738:	add	x0, x0, #0x20
   1e73c:	bl	1e7cc <__sanitizer_cov_pcs_init@@Base+0x3730>
   1e740:	and	w0, w0, #0xff
   1e744:	eor	w0, w0, #0x1
   1e748:	and	w0, w0, #0xff
   1e74c:	cmp	w0, #0x0
   1e750:	b.eq	1e75c <__sanitizer_cov_pcs_init@@Base+0x36c0>  // b.none
   1e754:	mov	w0, #0x1                   	// #1
   1e758:	b	1e760 <__sanitizer_cov_pcs_init@@Base+0x36c4>
   1e75c:	mov	w0, #0x0                   	// #0
   1e760:	cmp	w0, #0x0
   1e764:	b.eq	1e77c <__sanitizer_cov_pcs_init@@Base+0x36e0>  // b.none
   1e768:	ldr	x0, [sp, #24]
   1e76c:	ldr	x0, [x0, #8]
   1e770:	add	x1, x0, #0x1
   1e774:	ldr	x0, [sp, #24]
   1e778:	str	x1, [x0, #8]
   1e77c:	ldr	x0, [sp, #48]
   1e780:	ldr	x30, [sp], #96
   1e784:	ret
   1e788:	sub	sp, sp, #0x10
   1e78c:	str	x0, [sp, #8]
   1e790:	mov	x0, #0x40                  	// #64
   1e794:	add	sp, sp, #0x10
   1e798:	ret
   1e79c:	sub	sp, sp, #0x10
   1e7a0:	str	x0, [sp, #8]
   1e7a4:	nop
   1e7a8:	add	sp, sp, #0x10
   1e7ac:	ret
   1e7b0:	str	x30, [sp, #-32]!
   1e7b4:	str	x0, [sp, #24]
   1e7b8:	ldr	x0, [sp, #24]
   1e7bc:	bl	1d75c <__sanitizer_cov_pcs_init@@Base+0x26c0>
   1e7c0:	nop
   1e7c4:	ldr	x30, [sp], #32
   1e7c8:	ret
   1e7cc:	str	x30, [sp, #-32]!
   1e7d0:	str	x0, [sp, #24]
   1e7d4:	ldr	x0, [sp, #24]
   1e7d8:	bl	1d78c <__sanitizer_cov_pcs_init@@Base+0x26f0>
   1e7dc:	and	w0, w0, #0xff
   1e7e0:	eor	w0, w0, #0x1
   1e7e4:	and	w0, w0, #0xff
   1e7e8:	ldr	x30, [sp], #32
   1e7ec:	ret
   1e7f0:	sub	sp, sp, #0x10
   1e7f4:	str	x0, [sp, #8]
   1e7f8:	str	x1, [sp]
   1e7fc:	ldr	x0, [sp, #8]
   1e800:	ldr	x1, [sp]
   1e804:	ldr	x1, [x1]
   1e808:	str	x1, [x0]
   1e80c:	nop
   1e810:	add	sp, sp, #0x10
   1e814:	ret
   1e818:	str	x30, [sp, #-32]!
   1e81c:	str	x0, [sp, #24]
   1e820:	ldr	x0, [sp, #24]
   1e824:	bl	1dc44 <__sanitizer_cov_pcs_init@@Base+0x2ba8>
   1e828:	ldr	x30, [sp], #32
   1e82c:	ret
   1e830:	str	x30, [sp, #-32]!
   1e834:	str	x0, [sp, #24]
   1e838:	str	x1, [sp, #16]
   1e83c:	mov	x4, #0x0                   	// #0
   1e840:	mov	x3, #0x0                   	// #0
   1e844:	ldr	x2, [sp, #16]
   1e848:	ldr	x1, [sp, #24]
   1e84c:	mov	w0, #0x2                   	// #2
   1e850:	bl	271c4 <__sanitizer_set_report_fd@@Base+0x7fcc>
   1e854:	nop
   1e858:	ldr	x30, [sp], #32
   1e85c:	ret
   1e860:	str	x30, [sp, #-32]!
   1e864:	str	x0, [sp, #24]
   1e868:	ldr	x0, [sp, #24]
   1e86c:	bl	21bac <__sanitizer_set_report_fd@@Base+0x29b4>
   1e870:	mov	x2, x0
   1e874:	ldr	x1, [sp, #24]
   1e878:	adrp	x0, 7d000 <_Unwind_Backtrace@GCC_3.3>
   1e87c:	add	x0, x0, #0x3d8
   1e880:	bl	277fc <__sanitizer_set_report_fd@@Base+0x8604>
   1e884:	nop
   1e888:	ldr	x30, [sp], #32
   1e88c:	ret
   1e890:	stp	x19, x30, [sp, #-64]!
   1e894:	str	x0, [sp, #24]
   1e898:	ldr	x0, [sp, #24]
   1e89c:	ldr	x0, [x0]
   1e8a0:	bl	ec38 <__sanitizer_get_allocated_size@@Base+0xd8>
   1e8a4:	ldr	x0, [sp, #24]
   1e8a8:	ldr	w0, [x0, #8]
   1e8ac:	cmp	w0, #0x1
   1e8b0:	b.eq	1ea6c <__sanitizer_cov_pcs_init@@Base+0x39d0>  // b.none
   1e8b4:	ldr	x0, [sp, #24]
   1e8b8:	ldr	w0, [x0, #8]
   1e8bc:	cmp	w0, #0x2
   1e8c0:	b.eq	1ea6c <__sanitizer_cov_pcs_init@@Base+0x39d0>  // b.none
   1e8c4:	bl	23c68 <__sanitizer_set_report_fd@@Base+0x4a70>
   1e8c8:	str	x0, [sp, #56]
   1e8cc:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   1e8d0:	ldr	x0, [x0, #3560]
   1e8d4:	ldr	x0, [x0]
   1e8d8:	ldr	x1, [sp, #56]
   1e8dc:	cmp	x1, x0
   1e8e0:	b.ne	1e8f4 <__sanitizer_cov_pcs_init@@Base+0x3858>  // b.any
   1e8e4:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   1e8e8:	ldr	x0, [x0, #3544]
   1e8ec:	ldr	x0, [x0]
   1e8f0:	str	x0, [sp, #56]
   1e8f4:	ldr	x0, [sp, #24]
   1e8f8:	ldr	w0, [x0, #8]
   1e8fc:	cmn	w0, #0x1
   1e900:	b.eq	1e924 <__sanitizer_cov_pcs_init@@Base+0x3888>  // b.none
   1e904:	ldr	x0, [sp, #24]
   1e908:	ldr	x0, [x0, #8208]
   1e90c:	ldr	x1, [sp, #56]
   1e910:	cmp	x1, x0
   1e914:	b.eq	1ea74 <__sanitizer_cov_pcs_init@@Base+0x39d8>  // b.none
   1e918:	ldr	x0, [sp, #24]
   1e91c:	ldr	w0, [x0, #8]
   1e920:	bl	27138 <__sanitizer_set_report_fd@@Base+0x7f40>
   1e924:	bl	19b70 <__sancov_default_options@@Base+0x39d4>
   1e928:	str	x0, [sp, #48]
   1e92c:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   1e930:	ldrb	w0, [x0, #48]
   1e934:	cmp	w0, #0x0
   1e938:	b.eq	1e950 <__sanitizer_cov_pcs_init@@Base+0x38b4>  // b.none
   1e93c:	ldr	x0, [sp, #48]
   1e940:	cmp	x0, #0x0
   1e944:	b.eq	1e950 <__sanitizer_cov_pcs_init@@Base+0x38b4>  // b.none
   1e948:	mov	w0, #0x1                   	// #1
   1e94c:	b	1e954 <__sanitizer_cov_pcs_init@@Base+0x38b8>
   1e950:	mov	w0, #0x0                   	// #0
   1e954:	cmp	w0, #0x0
   1e958:	b.eq	1e994 <__sanitizer_cov_pcs_init@@Base+0x38f8>  // b.none
   1e95c:	ldr	x1, [sp, #24]
   1e960:	mov	x0, #0x100c                	// #4108
   1e964:	add	x6, x1, x0
   1e968:	ldr	x0, [sp, #24]
   1e96c:	add	x0, x0, #0xc
   1e970:	ldr	x5, [sp, #56]
   1e974:	ldr	x4, [sp, #48]
   1e978:	mov	x3, x0
   1e97c:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1e980:	add	x2, x0, #0x190
   1e984:	mov	x1, #0x1000                	// #4096
   1e988:	mov	x0, x6
   1e98c:	bl	2a4a8 <OnPrint@@Base+0x500>
   1e990:	b	1e9c4 <__sanitizer_cov_pcs_init@@Base+0x3928>
   1e994:	ldr	x1, [sp, #24]
   1e998:	mov	x0, #0x100c                	// #4108
   1e99c:	add	x5, x1, x0
   1e9a0:	ldr	x0, [sp, #24]
   1e9a4:	add	x0, x0, #0xc
   1e9a8:	ldr	x4, [sp, #56]
   1e9ac:	mov	x3, x0
   1e9b0:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1e9b4:	add	x2, x0, #0x1a0
   1e9b8:	mov	x1, #0x1000                	// #4096
   1e9bc:	mov	x0, x5
   1e9c0:	bl	2a4a8 <OnPrint@@Base+0x500>
   1e9c4:	ldr	x1, [sp, #24]
   1e9c8:	mov	x0, #0x100c                	// #4108
   1e9cc:	add	x0, x1, x0
   1e9d0:	mov	x2, #0x0                   	// #0
   1e9d4:	mov	w1, #0x1                   	// #1
   1e9d8:	bl	270a0 <__sanitizer_set_report_fd@@Base+0x7ea8>
   1e9dc:	mov	w1, w0
   1e9e0:	ldr	x0, [sp, #24]
   1e9e4:	str	w1, [x0, #8]
   1e9e8:	ldr	x0, [sp, #24]
   1e9ec:	ldr	w0, [x0, #8]
   1e9f0:	cmn	w0, #0x1
   1e9f4:	b.ne	1ea5c <__sanitizer_cov_pcs_init@@Base+0x39c0>  // b.any
   1e9f8:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1e9fc:	add	x0, x0, #0x1a8
   1ea00:	str	x0, [sp, #40]
   1ea04:	ldr	x0, [sp, #40]
   1ea08:	bl	21bac <__sanitizer_set_report_fd@@Base+0x29b4>
   1ea0c:	mov	x4, #0x0                   	// #0
   1ea10:	mov	x3, #0x0                   	// #0
   1ea14:	mov	x2, x0
   1ea18:	ldr	x1, [sp, #40]
   1ea1c:	mov	w0, #0x2                   	// #2
   1ea20:	bl	271c4 <__sanitizer_set_report_fd@@Base+0x7fcc>
   1ea24:	ldr	x1, [sp, #24]
   1ea28:	mov	x0, #0x100c                	// #4108
   1ea2c:	add	x19, x1, x0
   1ea30:	ldr	x1, [sp, #24]
   1ea34:	mov	x0, #0x100c                	// #4108
   1ea38:	add	x0, x1, x0
   1ea3c:	bl	21bac <__sanitizer_set_report_fd@@Base+0x29b4>
   1ea40:	mov	x4, #0x0                   	// #0
   1ea44:	mov	x3, #0x0                   	// #0
   1ea48:	mov	x2, x0
   1ea4c:	mov	x1, x19
   1ea50:	mov	w0, #0x2                   	// #2
   1ea54:	bl	271c4 <__sanitizer_set_report_fd@@Base+0x7fcc>
   1ea58:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   1ea5c:	ldr	x0, [sp, #24]
   1ea60:	ldr	x1, [sp, #56]
   1ea64:	str	x1, [x0, #8208]
   1ea68:	b	1ea78 <__sanitizer_cov_pcs_init@@Base+0x39dc>
   1ea6c:	nop
   1ea70:	b	1ea78 <__sanitizer_cov_pcs_init@@Base+0x39dc>
   1ea74:	nop
   1ea78:	ldp	x19, x30, [sp], #64
   1ea7c:	ret
   1ea80:	sub	sp, sp, #0x40
   1ea84:	str	x30, [sp, #16]
   1ea88:	str	x0, [sp, #40]
   1ea8c:	str	x1, [sp, #32]
   1ea90:	ldr	x0, [sp, #32]
   1ea94:	cmp	x0, #0x0
   1ea98:	b.eq	1ec2c <__sanitizer_cov_pcs_init@@Base+0x3b90>  // b.none
   1ea9c:	ldr	x0, [sp, #32]
   1eaa0:	bl	21bac <__sanitizer_set_report_fd@@Base+0x29b4>
   1eaa4:	str	x0, [sp, #56]
   1eaa8:	ldr	x0, [sp, #56]
   1eaac:	cmp	x0, #0xf9c
   1eab0:	b.ls	1eb40 <__sanitizer_cov_pcs_init@@Base+0x3aa4>  // b.plast
   1eab4:	ldr	x0, [sp, #32]
   1eab8:	ldrb	w0, [x0]
   1eabc:	mov	w1, w0
   1eac0:	ldr	x0, [sp, #32]
   1eac4:	add	x0, x0, #0x1
   1eac8:	ldrb	w0, [x0]
   1eacc:	mov	w2, w0
   1ead0:	ldr	x0, [sp, #32]
   1ead4:	add	x0, x0, #0x2
   1ead8:	ldrb	w0, [x0]
   1eadc:	mov	w3, w0
   1eae0:	ldr	x0, [sp, #32]
   1eae4:	add	x0, x0, #0x3
   1eae8:	ldrb	w0, [x0]
   1eaec:	mov	w4, w0
   1eaf0:	ldr	x0, [sp, #32]
   1eaf4:	add	x0, x0, #0x4
   1eaf8:	ldrb	w0, [x0]
   1eafc:	mov	w5, w0
   1eb00:	ldr	x0, [sp, #32]
   1eb04:	add	x0, x0, #0x5
   1eb08:	ldrb	w0, [x0]
   1eb0c:	mov	w6, w0
   1eb10:	ldr	x0, [sp, #32]
   1eb14:	add	x0, x0, #0x6
   1eb18:	ldrb	w0, [x0]
   1eb1c:	mov	w7, w0
   1eb20:	ldr	x0, [sp, #32]
   1eb24:	add	x0, x0, #0x7
   1eb28:	ldrb	w0, [x0]
   1eb2c:	str	w0, [sp]
   1eb30:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1eb34:	add	x0, x0, #0x1c8
   1eb38:	bl	2a3fc <OnPrint@@Base+0x454>
   1eb3c:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   1eb40:	ldr	x0, [sp, #40]
   1eb44:	ldr	x1, [x0]
   1eb48:	add	x0, sp, #0x30
   1eb4c:	bl	f58c <__sanitizer_get_allocated_size@@Base+0xa2c>
   1eb50:	ldr	x0, [sp, #40]
   1eb54:	ldr	w0, [x0, #8]
   1eb58:	cmp	w0, #0x1
   1eb5c:	b.eq	1eb8c <__sanitizer_cov_pcs_init@@Base+0x3af0>  // b.none
   1eb60:	ldr	x0, [sp, #40]
   1eb64:	ldr	w0, [x0, #8]
   1eb68:	cmp	w0, #0x2
   1eb6c:	b.eq	1eb8c <__sanitizer_cov_pcs_init@@Base+0x3af0>  // b.none
   1eb70:	ldr	x0, [sp, #40]
   1eb74:	ldr	w0, [x0, #8]
   1eb78:	cmn	w0, #0x1
   1eb7c:	b.eq	1eb8c <__sanitizer_cov_pcs_init@@Base+0x3af0>  // b.none
   1eb80:	ldr	x0, [sp, #40]
   1eb84:	ldr	w0, [x0, #8]
   1eb88:	bl	27138 <__sanitizer_set_report_fd@@Base+0x7f40>
   1eb8c:	ldr	x0, [sp, #40]
   1eb90:	mov	w1, #0xffffffff            	// #-1
   1eb94:	str	w1, [x0, #8]
   1eb98:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1eb9c:	add	x1, x0, #0x1f8
   1eba0:	ldr	x0, [sp, #32]
   1eba4:	bl	21950 <__sanitizer_set_report_fd@@Base+0x2758>
   1eba8:	cmp	w0, #0x0
   1ebac:	cset	w0, eq  // eq = none
   1ebb0:	and	w0, w0, #0xff
   1ebb4:	cmp	w0, #0x0
   1ebb8:	b.eq	1ebcc <__sanitizer_cov_pcs_init@@Base+0x3b30>  // b.none
   1ebbc:	ldr	x0, [sp, #40]
   1ebc0:	mov	w1, #0x1                   	// #1
   1ebc4:	str	w1, [x0, #8]
   1ebc8:	b	1ec20 <__sanitizer_cov_pcs_init@@Base+0x3b84>
   1ebcc:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1ebd0:	add	x1, x0, #0x200
   1ebd4:	ldr	x0, [sp, #32]
   1ebd8:	bl	21950 <__sanitizer_set_report_fd@@Base+0x2758>
   1ebdc:	cmp	w0, #0x0
   1ebe0:	cset	w0, eq  // eq = none
   1ebe4:	and	w0, w0, #0xff
   1ebe8:	cmp	w0, #0x0
   1ebec:	b.eq	1ec00 <__sanitizer_cov_pcs_init@@Base+0x3b64>  // b.none
   1ebf0:	ldr	x0, [sp, #40]
   1ebf4:	mov	w1, #0x2                   	// #2
   1ebf8:	str	w1, [x0, #8]
   1ebfc:	b	1ec20 <__sanitizer_cov_pcs_init@@Base+0x3b84>
   1ec00:	ldr	x0, [sp, #40]
   1ec04:	add	x4, x0, #0xc
   1ec08:	ldr	x3, [sp, #32]
   1ec0c:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1ec10:	add	x2, x0, #0x208
   1ec14:	mov	x1, #0x1000                	// #4096
   1ec18:	mov	x0, x4
   1ec1c:	bl	2a4a8 <OnPrint@@Base+0x500>
   1ec20:	add	x0, sp, #0x30
   1ec24:	bl	f5bc <__sanitizer_get_allocated_size@@Base+0xa5c>
   1ec28:	b	1ec30 <__sanitizer_cov_pcs_init@@Base+0x3b94>
   1ec2c:	nop
   1ec30:	ldr	x30, [sp, #16]
   1ec34:	add	sp, sp, #0x40
   1ec38:	ret
   1ec3c:	str	x30, [sp, #-112]!
   1ec40:	str	x0, [sp, #56]
   1ec44:	str	x1, [sp, #48]
   1ec48:	str	x2, [sp, #40]
   1ec4c:	str	x3, [sp, #32]
   1ec50:	str	x4, [sp, #24]
   1ec54:	str	x5, [sp, #16]
   1ec58:	ldr	x0, [sp, #48]
   1ec5c:	str	xzr, [x0]
   1ec60:	ldr	x0, [sp, #40]
   1ec64:	str	xzr, [x0]
   1ec68:	ldr	x0, [sp, #32]
   1ec6c:	str	xzr, [x0]
   1ec70:	ldr	x0, [sp, #24]
   1ec74:	cmp	x0, #0x0
   1ec78:	b.ne	1ec84 <__sanitizer_cov_pcs_init@@Base+0x3be8>  // b.any
   1ec7c:	mov	w0, #0x1                   	// #1
   1ec80:	b	1ee44 <__sanitizer_cov_pcs_init@@Base+0x3da8>
   1ec84:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
   1ec88:	str	x0, [sp, #88]
   1ec8c:	ldr	x1, [sp, #24]
   1ec90:	ldr	x0, [sp, #88]
   1ec94:	bl	aeac <__lsan_do_recoverable_leak_check@@Base+0xd20>
   1ec98:	str	x0, [sp, #80]
   1ec9c:	ldr	x0, [sp, #80]
   1eca0:	str	x0, [sp, #104]
   1eca4:	ldr	x0, [sp, #48]
   1eca8:	ldr	x2, [x0]
   1ecac:	ldr	x0, [sp, #40]
   1ecb0:	ldr	x0, [x0]
   1ecb4:	mov	x1, x0
   1ecb8:	mov	x0, x2
   1ecbc:	bl	26af4 <__sanitizer_set_report_fd@@Base+0x78fc>
   1ecc0:	mov	w2, #0x0                   	// #0
   1ecc4:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1ecc8:	add	x1, x0, #0x210
   1eccc:	ldr	x0, [sp, #104]
   1ecd0:	bl	26a50 <__sanitizer_set_report_fd@@Base+0x7858>
   1ecd4:	mov	x1, x0
   1ecd8:	ldr	x0, [sp, #48]
   1ecdc:	str	x1, [x0]
   1ece0:	ldr	x0, [sp, #40]
   1ece4:	ldr	x1, [sp, #104]
   1ece8:	str	x1, [x0]
   1ecec:	ldr	x2, [sp, #16]
   1ecf0:	mov	w1, #0x0                   	// #0
   1ecf4:	ldr	x0, [sp, #56]
   1ecf8:	bl	270a0 <__sanitizer_set_report_fd@@Base+0x7ea8>
   1ecfc:	str	w0, [sp, #76]
   1ed00:	ldr	w0, [sp, #76]
   1ed04:	cmn	w0, #0x1
   1ed08:	b.ne	1ed30 <__sanitizer_cov_pcs_init@@Base+0x3c94>  // b.any
   1ed0c:	ldr	x0, [sp, #48]
   1ed10:	ldr	x2, [x0]
   1ed14:	ldr	x0, [sp, #40]
   1ed18:	ldr	x0, [x0]
   1ed1c:	mov	x1, x0
   1ed20:	mov	x0, x2
   1ed24:	bl	26af4 <__sanitizer_set_report_fd@@Base+0x78fc>
   1ed28:	mov	w0, #0x0                   	// #0
   1ed2c:	b	1ee44 <__sanitizer_cov_pcs_init@@Base+0x3da8>
   1ed30:	ldr	x0, [sp, #32]
   1ed34:	str	xzr, [x0]
   1ed38:	strb	wzr, [sp, #103]
   1ed3c:	ldr	x0, [sp, #32]
   1ed40:	ldr	x0, [x0]
   1ed44:	ldr	x1, [sp, #104]
   1ed48:	cmp	x1, x0
   1ed4c:	b.ls	1ee10 <__sanitizer_cov_pcs_init@@Base+0x3d74>  // b.plast
   1ed50:	ldr	x0, [sp, #48]
   1ed54:	ldr	x1, [x0]
   1ed58:	ldr	x0, [sp, #32]
   1ed5c:	ldr	x0, [x0]
   1ed60:	add	x5, x1, x0
   1ed64:	ldr	x0, [sp, #32]
   1ed68:	ldr	x0, [x0]
   1ed6c:	ldr	x1, [sp, #104]
   1ed70:	sub	x0, x1, x0
   1ed74:	add	x1, sp, #0x40
   1ed78:	ldr	x4, [sp, #16]
   1ed7c:	mov	x3, x1
   1ed80:	mov	x2, x0
   1ed84:	mov	x1, x5
   1ed88:	ldr	w0, [sp, #76]
   1ed8c:	bl	27154 <__sanitizer_set_report_fd@@Base+0x7f5c>
   1ed90:	and	w0, w0, #0xff
   1ed94:	eor	w0, w0, #0x1
   1ed98:	and	w0, w0, #0xff
   1ed9c:	cmp	w0, #0x0
   1eda0:	b.eq	1edd0 <__sanitizer_cov_pcs_init@@Base+0x3d34>  // b.none
   1eda4:	ldr	x0, [sp, #48]
   1eda8:	ldr	x2, [x0]
   1edac:	ldr	x0, [sp, #40]
   1edb0:	ldr	x0, [x0]
   1edb4:	mov	x1, x0
   1edb8:	mov	x0, x2
   1edbc:	bl	26af4 <__sanitizer_set_report_fd@@Base+0x78fc>
   1edc0:	ldr	w0, [sp, #76]
   1edc4:	bl	27138 <__sanitizer_set_report_fd@@Base+0x7f40>
   1edc8:	mov	w0, #0x0                   	// #0
   1edcc:	b	1ee44 <__sanitizer_cov_pcs_init@@Base+0x3da8>
   1edd0:	ldr	x0, [sp, #32]
   1edd4:	ldr	x1, [x0]
   1edd8:	ldr	x0, [sp, #64]
   1eddc:	add	x1, x1, x0
   1ede0:	ldr	x0, [sp, #32]
   1ede4:	str	x1, [x0]
   1ede8:	ldr	x0, [sp, #64]
   1edec:	cmp	x0, #0x0
   1edf0:	b.eq	1ee08 <__sanitizer_cov_pcs_init@@Base+0x3d6c>  // b.none
   1edf4:	ldr	x0, [sp, #32]
   1edf8:	ldr	x0, [x0]
   1edfc:	ldr	x1, [sp, #24]
   1ee00:	cmp	x1, x0
   1ee04:	b.ne	1ed3c <__sanitizer_cov_pcs_init@@Base+0x3ca0>  // b.any
   1ee08:	mov	w0, #0x1                   	// #1
   1ee0c:	strb	w0, [sp, #103]
   1ee10:	ldr	w0, [sp, #76]
   1ee14:	bl	27138 <__sanitizer_set_report_fd@@Base+0x7f40>
   1ee18:	ldrb	w0, [sp, #103]
   1ee1c:	cmp	w0, #0x0
   1ee20:	b.ne	1ee3c <__sanitizer_cov_pcs_init@@Base+0x3da0>  // b.any
   1ee24:	ldr	x0, [sp, #104]
   1ee28:	lsl	x0, x0, #1
   1ee2c:	ldr	x1, [sp, #24]
   1ee30:	bl	aeac <__lsan_do_recoverable_leak_check@@Base+0xd20>
   1ee34:	str	x0, [sp, #104]
   1ee38:	b	1eca4 <__sanitizer_cov_pcs_init@@Base+0x3c08>
   1ee3c:	nop
   1ee40:	mov	w0, #0x1                   	// #1
   1ee44:	ldr	x30, [sp], #112
   1ee48:	ret
   1ee4c:	stp	x19, x30, [sp, #-112]!
   1ee50:	str	x0, [sp, #40]
   1ee54:	str	x1, [sp, #32]
   1ee58:	str	x2, [sp, #24]
   1ee5c:	str	x3, [sp, #16]
   1ee60:	ldr	x0, [sp, #32]
   1ee64:	bl	1f234 <__sanitizer_set_report_fd@@Base+0x3c>
   1ee68:	ldr	x0, [sp, #24]
   1ee6c:	cmp	x0, #0x0
   1ee70:	b.ne	1ee7c <__sanitizer_cov_pcs_init@@Base+0x3de0>  // b.any
   1ee74:	mov	w0, #0x1                   	// #1
   1ee78:	b	1f058 <__sanitizer_cov_pcs_init@@Base+0x3fbc>
   1ee7c:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
   1ee80:	str	x0, [sp, #96]
   1ee84:	ldr	x2, [sp, #16]
   1ee88:	mov	w1, #0x0                   	// #0
   1ee8c:	ldr	x0, [sp, #40]
   1ee90:	bl	270a0 <__sanitizer_set_report_fd@@Base+0x7ea8>
   1ee94:	str	w0, [sp, #92]
   1ee98:	ldr	w0, [sp, #92]
   1ee9c:	cmn	w0, #0x1
   1eea0:	b.ne	1eeac <__sanitizer_cov_pcs_init@@Base+0x3e10>  // b.any
   1eea4:	mov	w0, #0x0                   	// #0
   1eea8:	b	1f058 <__sanitizer_cov_pcs_init@@Base+0x3fbc>
   1eeac:	str	xzr, [sp, #104]
   1eeb0:	ldr	x1, [sp, #104]
   1eeb4:	ldr	x0, [sp, #24]
   1eeb8:	cmp	x1, x0
   1eebc:	b.cs	1f040 <__sanitizer_cov_pcs_init@@Base+0x3fa4>  // b.hs, b.nlast
   1eec0:	ldr	x0, [sp, #32]
   1eec4:	bl	1f250 <__sanitizer_set_report_fd@@Base+0x58>
   1eec8:	mov	x1, x0
   1eecc:	ldr	x0, [sp, #104]
   1eed0:	cmp	x0, x1
   1eed4:	cset	w0, cs  // cs = hs, nlast
   1eed8:	and	w0, w0, #0xff
   1eedc:	cmp	w0, #0x0
   1eee0:	b.eq	1ef0c <__sanitizer_cov_pcs_init@@Base+0x3e70>  // b.none
   1eee4:	ldr	x0, [sp, #104]
   1eee8:	lsl	x0, x0, #1
   1eeec:	mov	x1, x0
   1eef0:	ldr	x0, [sp, #96]
   1eef4:	bl	ae7c <__lsan_do_recoverable_leak_check@@Base+0xcf0>
   1eef8:	ldr	x1, [sp, #24]
   1eefc:	bl	aeac <__lsan_do_recoverable_leak_check@@Base+0xd20>
   1ef00:	mov	x1, x0
   1ef04:	ldr	x0, [sp, #32]
   1ef08:	bl	be28 <__lsan_do_recoverable_leak_check@@Base+0x1c9c>
   1ef0c:	ldr	x0, [sp, #104]
   1ef10:	str	x0, [sp, #80]
   1ef14:	ldr	x0, [sp, #32]
   1ef18:	bl	1f250 <__sanitizer_set_report_fd@@Base+0x58>
   1ef1c:	str	x0, [sp, #72]
   1ef20:	ldr	x1, [sp, #80]
   1ef24:	ldr	x0, [sp, #72]
   1ef28:	cmp	x1, x0
   1ef2c:	cset	w0, cs  // cs = hs, nlast
   1ef30:	and	w0, w0, #0xff
   1ef34:	and	x0, x0, #0xff
   1ef38:	cmp	x0, #0x0
   1ef3c:	b.eq	1ef60 <__sanitizer_cov_pcs_init@@Base+0x3ec4>  // b.none
   1ef40:	ldr	x4, [sp, #72]
   1ef44:	ldr	x3, [sp, #80]
   1ef48:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1ef4c:	add	x2, x0, #0x228
   1ef50:	mov	w1, #0x98                  	// #152
   1ef54:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1ef58:	add	x0, x0, #0x248
   1ef5c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1ef60:	ldr	x0, [sp, #32]
   1ef64:	bl	1f250 <__sanitizer_set_report_fd@@Base+0x58>
   1ef68:	str	x0, [sp, #64]
   1ef6c:	ldr	x0, [sp, #24]
   1ef70:	str	x0, [sp, #56]
   1ef74:	ldr	x1, [sp, #64]
   1ef78:	ldr	x0, [sp, #56]
   1ef7c:	cmp	x1, x0
   1ef80:	cset	w0, hi  // hi = pmore
   1ef84:	and	w0, w0, #0xff
   1ef88:	and	x0, x0, #0xff
   1ef8c:	cmp	x0, #0x0
   1ef90:	b.eq	1efb4 <__sanitizer_cov_pcs_init@@Base+0x3f18>  // b.none
   1ef94:	ldr	x4, [sp, #56]
   1ef98:	ldr	x3, [sp, #64]
   1ef9c:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1efa0:	add	x2, x0, #0x288
   1efa4:	mov	w1, #0x99                  	// #153
   1efa8:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1efac:	add	x0, x0, #0x248
   1efb0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1efb4:	ldr	x0, [sp, #32]
   1efb8:	bl	bc50 <__lsan_do_recoverable_leak_check@@Base+0x1ac4>
   1efbc:	mov	x1, x0
   1efc0:	ldr	x0, [sp, #104]
   1efc4:	add	x19, x1, x0
   1efc8:	ldr	x0, [sp, #32]
   1efcc:	bl	1f250 <__sanitizer_set_report_fd@@Base+0x58>
   1efd0:	mov	x1, x0
   1efd4:	ldr	x0, [sp, #104]
   1efd8:	sub	x0, x1, x0
   1efdc:	add	x1, sp, #0x30
   1efe0:	ldr	x4, [sp, #16]
   1efe4:	mov	x3, x1
   1efe8:	mov	x2, x0
   1efec:	mov	x1, x19
   1eff0:	ldr	w0, [sp, #92]
   1eff4:	bl	27154 <__sanitizer_set_report_fd@@Base+0x7f5c>
   1eff8:	and	w0, w0, #0xff
   1effc:	eor	w0, w0, #0x1
   1f000:	and	w0, w0, #0xff
   1f004:	cmp	w0, #0x0
   1f008:	b.eq	1f01c <__sanitizer_cov_pcs_init@@Base+0x3f80>  // b.none
   1f00c:	ldr	w0, [sp, #92]
   1f010:	bl	27138 <__sanitizer_set_report_fd@@Base+0x7f40>
   1f014:	mov	w0, #0x0                   	// #0
   1f018:	b	1f058 <__sanitizer_cov_pcs_init@@Base+0x3fbc>
   1f01c:	ldr	x0, [sp, #48]
   1f020:	ldr	x1, [sp, #104]
   1f024:	add	x0, x1, x0
   1f028:	str	x0, [sp, #104]
   1f02c:	ldr	x0, [sp, #48]
   1f030:	cmp	x0, #0x0
   1f034:	b.eq	1f03c <__sanitizer_cov_pcs_init@@Base+0x3fa0>  // b.none
   1f038:	b	1eeb0 <__sanitizer_cov_pcs_init@@Base+0x3e14>
   1f03c:	nop
   1f040:	ldr	w0, [sp, #92]
   1f044:	bl	27138 <__sanitizer_set_report_fd@@Base+0x7f40>
   1f048:	ldr	x1, [sp, #104]
   1f04c:	ldr	x0, [sp, #32]
   1f050:	bl	be28 <__lsan_do_recoverable_leak_check@@Base+0x1c9c>
   1f054:	mov	w0, #0x1                   	// #1
   1f058:	ldp	x19, x30, [sp], #112
   1f05c:	ret
   1f060:	stp	x19, x30, [sp, #-96]!
   1f064:	str	x0, [sp, #24]
   1f068:	ldr	x0, [sp, #24]
   1f06c:	bl	233ec <__sanitizer_set_report_fd@@Base+0x41f4>
   1f070:	and	w0, w0, #0xff
   1f074:	cmp	w0, #0x0
   1f078:	b.eq	1f08c <__sanitizer_cov_pcs_init@@Base+0x3ff0>  // b.none
   1f07c:	ldr	x0, [sp, #24]
   1f080:	bl	218f8 <__sanitizer_set_report_fd@@Base+0x2700>
   1f084:	mov	x19, x0
   1f088:	b	1f1c8 <__sanitizer_cov_pcs_init@@Base+0x412c>
   1f08c:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1f090:	add	x0, x0, #0x2b0
   1f094:	bl	23528 <__sanitizer_set_report_fd@@Base+0x4330>
   1f098:	str	x0, [sp, #80]
   1f09c:	ldr	x0, [sp, #80]
   1f0a0:	cmp	x0, #0x0
   1f0a4:	b.ne	1f0b0 <__sanitizer_cov_pcs_init@@Base+0x4014>  // b.any
   1f0a8:	mov	x19, #0x0                   	// #0
   1f0ac:	b	1f1c8 <__sanitizer_cov_pcs_init@@Base+0x412c>
   1f0b0:	ldr	x0, [sp, #24]
   1f0b4:	bl	21bac <__sanitizer_set_report_fd@@Base+0x29b4>
   1f0b8:	str	x0, [sp, #72]
   1f0bc:	add	x0, sp, #0x20
   1f0c0:	mov	x1, #0x1000                	// #4096
   1f0c4:	bl	abc0 <__lsan_do_recoverable_leak_check@@Base+0xa34>
   1f0c8:	ldr	x0, [sp, #80]
   1f0cc:	str	x0, [sp, #88]
   1f0d0:	mov	w1, #0x3a                  	// #58
   1f0d4:	ldr	x0, [sp, #88]
   1f0d8:	bl	21ae8 <__sanitizer_set_report_fd@@Base+0x28f0>
   1f0dc:	str	x0, [sp, #64]
   1f0e0:	ldr	x1, [sp, #64]
   1f0e4:	ldr	x0, [sp, #88]
   1f0e8:	sub	x0, x1, x0
   1f0ec:	str	x0, [sp, #56]
   1f0f0:	ldr	x1, [sp, #56]
   1f0f4:	ldr	x0, [sp, #72]
   1f0f8:	add	x0, x1, x0
   1f0fc:	add	x0, x0, #0x2
   1f100:	cmp	x0, #0x1, lsl #12
   1f104:	b.hi	1f198 <__sanitizer_cov_pcs_init@@Base+0x40fc>  // b.pmore
   1f108:	add	x0, sp, #0x20
   1f10c:	bl	bc50 <__lsan_do_recoverable_leak_check@@Base+0x1ac4>
   1f110:	ldr	x2, [sp, #56]
   1f114:	ldr	x1, [sp, #88]
   1f118:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
   1f11c:	add	x0, sp, #0x20
   1f120:	ldr	x1, [sp, #56]
   1f124:	bl	ac0c <__lsan_do_recoverable_leak_check@@Base+0xa80>
   1f128:	mov	x1, x0
   1f12c:	mov	w0, #0x2f                  	// #47
   1f130:	strb	w0, [x1]
   1f134:	ldr	x0, [sp, #56]
   1f138:	add	x1, x0, #0x1
   1f13c:	add	x0, sp, #0x20
   1f140:	bl	ac0c <__lsan_do_recoverable_leak_check@@Base+0xa80>
   1f144:	ldr	x2, [sp, #72]
   1f148:	ldr	x1, [sp, #24]
   1f14c:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
   1f150:	ldr	x1, [sp, #56]
   1f154:	ldr	x0, [sp, #72]
   1f158:	add	x0, x1, x0
   1f15c:	add	x1, x0, #0x1
   1f160:	add	x0, sp, #0x20
   1f164:	bl	ac0c <__lsan_do_recoverable_leak_check@@Base+0xa80>
   1f168:	strb	wzr, [x0]
   1f16c:	add	x0, sp, #0x20
   1f170:	bl	bc50 <__lsan_do_recoverable_leak_check@@Base+0x1ac4>
   1f174:	bl	233ec <__sanitizer_set_report_fd@@Base+0x41f4>
   1f178:	and	w0, w0, #0xff
   1f17c:	cmp	w0, #0x0
   1f180:	b.eq	1f198 <__sanitizer_cov_pcs_init@@Base+0x40fc>  // b.none
   1f184:	add	x0, sp, #0x20
   1f188:	bl	bc50 <__lsan_do_recoverable_leak_check@@Base+0x1ac4>
   1f18c:	bl	218f8 <__sanitizer_set_report_fd@@Base+0x2700>
   1f190:	mov	x19, x0
   1f194:	b	1f1c0 <__sanitizer_cov_pcs_init@@Base+0x4124>
   1f198:	ldr	x0, [sp, #64]
   1f19c:	ldrb	w0, [x0]
   1f1a0:	cmp	w0, #0x0
   1f1a4:	b.eq	1f1b8 <__sanitizer_cov_pcs_init@@Base+0x411c>  // b.none
   1f1a8:	ldr	x0, [sp, #64]
   1f1ac:	add	x0, x0, #0x1
   1f1b0:	str	x0, [sp, #88]
   1f1b4:	b	1f0d0 <__sanitizer_cov_pcs_init@@Base+0x4034>
   1f1b8:	nop
   1f1bc:	mov	x19, #0x0                   	// #0
   1f1c0:	add	x0, sp, #0x20
   1f1c4:	bl	abf0 <__lsan_do_recoverable_leak_check@@Base+0xa64>
   1f1c8:	mov	x0, x19
   1f1cc:	ldp	x19, x30, [sp], #96
   1f1d0:	ret

000000000001f1d4 <__sanitizer_set_report_path@@Base>:
   1f1d4:	str	x30, [sp, #-32]!
   1f1d8:	str	x0, [sp, #24]
   1f1dc:	ldr	x1, [sp, #24]
   1f1e0:	adrp	x0, 7d000 <_Unwind_Backtrace@GCC_3.3>
   1f1e4:	add	x0, x0, #0x3d8
   1f1e8:	bl	1ea80 <__sanitizer_cov_pcs_init@@Base+0x39e4>
   1f1ec:	nop
   1f1f0:	ldr	x30, [sp], #32
   1f1f4:	ret

000000000001f1f8 <__sanitizer_set_report_fd@@Base>:
   1f1f8:	str	x30, [sp, #-32]!
   1f1fc:	str	x0, [sp, #24]
   1f200:	ldr	x0, [sp, #24]
   1f204:	mov	w1, w0
   1f208:	adrp	x0, 7d000 <_Unwind_Backtrace@GCC_3.3>
   1f20c:	add	x0, x0, #0x3d8
   1f210:	str	w1, [x0, #8]
   1f214:	bl	23c68 <__sanitizer_set_report_fd@@Base+0x4a70>
   1f218:	mov	x1, x0
   1f21c:	adrp	x0, 7d000 <_Unwind_Backtrace@GCC_3.3>
   1f220:	add	x0, x0, #0x3d8
   1f224:	str	x1, [x0, #8208]
   1f228:	nop
   1f22c:	ldr	x30, [sp], #32
   1f230:	ret
   1f234:	sub	sp, sp, #0x10
   1f238:	str	x0, [sp, #8]
   1f23c:	ldr	x0, [sp, #8]
   1f240:	str	xzr, [x0, #16]
   1f244:	nop
   1f248:	add	sp, sp, #0x10
   1f24c:	ret
   1f250:	sub	sp, sp, #0x10
   1f254:	str	x0, [sp, #8]
   1f258:	ldr	x0, [sp, #8]
   1f25c:	ldr	x0, [x0, #16]
   1f260:	add	sp, sp, #0x10
   1f264:	ret
   1f268:	sub	sp, sp, #0x10
   1f26c:	str	x0, [sp, #8]
   1f270:	ldr	x0, [sp, #8]
   1f274:	mov	w1, #0x1                   	// #1
   1f278:	strb	w1, [x0]
   1f27c:	ldr	x0, [sp, #8]
   1f280:	str	xzr, [x0, #8]
   1f284:	ldr	x0, [sp, #8]
   1f288:	strb	wzr, [x0, #16]
   1f28c:	ldr	x0, [sp, #8]
   1f290:	adrp	x1, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1f294:	add	x1, x1, #0x4d0
   1f298:	str	x1, [x0, #24]
   1f29c:	ldr	x0, [sp, #8]
   1f2a0:	strb	wzr, [x0, #32]
   1f2a4:	ldr	x0, [sp, #8]
   1f2a8:	strb	wzr, [x0, #33]
   1f2ac:	ldr	x0, [sp, #8]
   1f2b0:	mov	w1, #0x1                   	// #1
   1f2b4:	strb	w1, [x0, #34]
   1f2b8:	ldr	x0, [sp, #8]
   1f2bc:	strb	wzr, [x0, #35]
   1f2c0:	ldr	x0, [sp, #8]
   1f2c4:	mov	w1, #0x1                   	// #1
   1f2c8:	str	w1, [x0, #36]
   1f2cc:	ldr	x0, [sp, #8]
   1f2d0:	adrp	x1, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1f2d4:	add	x1, x1, #0x4d8
   1f2d8:	str	x1, [x0, #40]
   1f2dc:	ldr	x0, [sp, #8]
   1f2e0:	strb	wzr, [x0, #48]
   1f2e4:	ldr	x0, [sp, #8]
   1f2e8:	strb	wzr, [x0, #49]
   1f2ec:	ldr	x0, [sp, #8]
   1f2f0:	str	wzr, [x0, #52]
   1f2f4:	ldr	x0, [sp, #8]
   1f2f8:	mov	w1, #0x1                   	// #1
   1f2fc:	strb	w1, [x0, #56]
   1f300:	ldr	x0, [sp, #8]
   1f304:	mov	w1, #0x1                   	// #1
   1f308:	strb	w1, [x0, #57]
   1f30c:	ldr	x0, [sp, #8]
   1f310:	mov	w1, #0x1                   	// #1
   1f314:	strb	w1, [x0, #58]
   1f318:	ldr	x0, [sp, #8]
   1f31c:	strb	wzr, [x0, #59]
   1f320:	ldr	x0, [sp, #8]
   1f324:	mov	w1, #0x1                   	// #1
   1f328:	strb	w1, [x0, #60]
   1f32c:	ldr	x0, [sp, #8]
   1f330:	str	wzr, [x0, #64]
   1f334:	ldr	x0, [sp, #8]
   1f338:	mov	w1, #0x1                   	// #1
   1f33c:	strb	w1, [x0, #68]
   1f340:	ldr	x0, [sp, #8]
   1f344:	mov	w1, #0x1                   	// #1
   1f348:	str	w1, [x0, #72]
   1f34c:	ldr	x0, [sp, #8]
   1f350:	mov	w1, #0x1                   	// #1
   1f354:	str	w1, [x0, #76]
   1f358:	ldr	x0, [sp, #8]
   1f35c:	str	wzr, [x0, #80]
   1f360:	ldr	x0, [sp, #8]
   1f364:	str	wzr, [x0, #84]
   1f368:	ldr	x0, [sp, #8]
   1f36c:	str	wzr, [x0, #88]
   1f370:	ldr	x0, [sp, #8]
   1f374:	mov	w1, #0x1                   	// #1
   1f378:	str	w1, [x0, #92]
   1f37c:	ldr	x0, [sp, #8]
   1f380:	mov	w1, #0x1                   	// #1
   1f384:	strb	w1, [x0, #96]
   1f388:	ldr	x0, [sp, #8]
   1f38c:	mov	w1, #0x1                   	// #1
   1f390:	strb	w1, [x0, #97]
   1f394:	ldr	x0, [sp, #8]
   1f398:	strb	wzr, [x0, #98]
   1f39c:	ldr	x0, [sp, #8]
   1f3a0:	mov	x1, #0x10000               	// #65536
   1f3a4:	str	x1, [x0, #104]
   1f3a8:	ldr	x0, [sp, #8]
   1f3ac:	adrp	x1, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1f3b0:	add	x1, x1, #0x4e0
   1f3b4:	str	x1, [x0, #112]
   1f3b8:	ldr	x0, [sp, #8]
   1f3bc:	strb	wzr, [x0, #120]
   1f3c0:	ldr	x0, [sp, #8]
   1f3c4:	strb	wzr, [x0, #121]
   1f3c8:	ldr	x0, [sp, #8]
   1f3cc:	strb	wzr, [x0, #122]
   1f3d0:	ldr	x0, [sp, #8]
   1f3d4:	str	xzr, [x0, #128]
   1f3d8:	ldr	x0, [sp, #8]
   1f3dc:	str	xzr, [x0, #136]
   1f3e0:	ldr	x0, [sp, #8]
   1f3e4:	str	xzr, [x0, #144]
   1f3e8:	ldr	x0, [sp, #8]
   1f3ec:	strb	wzr, [x0, #152]
   1f3f0:	ldr	x0, [sp, #8]
   1f3f4:	mov	w1, #0x1388                	// #5000
   1f3f8:	str	w1, [x0, #156]
   1f3fc:	ldr	x0, [sp, #8]
   1f400:	mov	w1, #0x1                   	// #1
   1f404:	strb	w1, [x0, #160]
   1f408:	ldr	x0, [sp, #8]
   1f40c:	strb	wzr, [x0, #161]
   1f410:	ldr	x0, [sp, #8]
   1f414:	adrp	x1, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1f418:	add	x1, x1, #0x4e8
   1f41c:	str	x1, [x0, #168]
   1f420:	ldr	x0, [sp, #8]
   1f424:	strb	wzr, [x0, #176]
   1f428:	ldr	x0, [sp, #8]
   1f42c:	mov	w1, #0x1                   	// #1
   1f430:	strb	w1, [x0, #177]
   1f434:	ldr	x0, [sp, #8]
   1f438:	mov	w1, #0x1                   	// #1
   1f43c:	strb	w1, [x0, #178]
   1f440:	ldr	x0, [sp, #8]
   1f444:	mov	w1, #0x1                   	// #1
   1f448:	strb	w1, [x0, #179]
   1f44c:	ldr	x0, [sp, #8]
   1f450:	mov	w1, #0x1                   	// #1
   1f454:	strb	w1, [x0, #180]
   1f458:	ldr	x0, [sp, #8]
   1f45c:	strb	wzr, [x0, #181]
   1f460:	ldr	x0, [sp, #8]
   1f464:	str	wzr, [x0, #184]
   1f468:	ldr	x0, [sp, #8]
   1f46c:	adrp	x1, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1f470:	add	x1, x1, #0x4f0
   1f474:	str	x1, [x0, #192]
   1f478:	ldr	x0, [sp, #8]
   1f47c:	mov	w1, #0x1                   	// #1
   1f480:	strb	w1, [x0, #200]
   1f484:	ldr	x0, [sp, #8]
   1f488:	strb	wzr, [x0, #201]
   1f48c:	ldr	x0, [sp, #8]
   1f490:	mov	w1, #0x1                   	// #1
   1f494:	strb	w1, [x0, #202]
   1f498:	ldr	x0, [sp, #8]
   1f49c:	mov	w1, #0x1                   	// #1
   1f4a0:	strb	w1, [x0, #203]
   1f4a4:	ldr	x0, [sp, #8]
   1f4a8:	mov	w1, #0x1                   	// #1
   1f4ac:	strb	w1, [x0, #204]
   1f4b0:	ldr	x0, [sp, #8]
   1f4b4:	mov	w1, #0x1                   	// #1
   1f4b8:	strb	w1, [x0, #205]
   1f4bc:	ldr	x0, [sp, #8]
   1f4c0:	mov	w1, #0x1                   	// #1
   1f4c4:	strb	w1, [x0, #206]
   1f4c8:	ldr	x0, [sp, #8]
   1f4cc:	mov	w1, #0x1                   	// #1
   1f4d0:	strb	w1, [x0, #207]
   1f4d4:	ldr	x0, [sp, #8]
   1f4d8:	mov	w1, #0x1                   	// #1
   1f4dc:	strb	w1, [x0, #208]
   1f4e0:	ldr	x0, [sp, #8]
   1f4e4:	mov	w1, #0x1                   	// #1
   1f4e8:	strb	w1, [x0, #209]
   1f4ec:	ldr	x0, [sp, #8]
   1f4f0:	mov	w1, #0x1                   	// #1
   1f4f4:	strb	w1, [x0, #210]
   1f4f8:	ldr	x0, [sp, #8]
   1f4fc:	mov	w1, #0x1                   	// #1
   1f500:	strb	w1, [x0, #211]
   1f504:	ldr	x0, [sp, #8]
   1f508:	mov	w1, #0x1                   	// #1
   1f50c:	strb	w1, [x0, #212]
   1f510:	ldr	x0, [sp, #8]
   1f514:	mov	w1, #0x1                   	// #1
   1f518:	strb	w1, [x0, #213]
   1f51c:	ldr	x0, [sp, #8]
   1f520:	mov	w1, #0x1                   	// #1
   1f524:	strb	w1, [x0, #214]
   1f528:	ldr	x0, [sp, #8]
   1f52c:	strb	wzr, [x0, #215]
   1f530:	ldr	x0, [sp, #8]
   1f534:	mov	w1, #0x1                   	// #1
   1f538:	str	w1, [x0, #216]
   1f53c:	ldr	x0, [sp, #8]
   1f540:	strb	wzr, [x0, #220]
   1f544:	ldr	x0, [sp, #8]
   1f548:	mov	w1, #0x1                   	// #1
   1f54c:	strb	w1, [x0, #221]
   1f550:	ldr	x0, [sp, #8]
   1f554:	strb	wzr, [x0, #222]
   1f558:	ldr	x0, [sp, #8]
   1f55c:	strb	wzr, [x0, #223]
   1f560:	ldr	x0, [sp, #8]
   1f564:	adrp	x1, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1f568:	add	x1, x1, #0x4f8
   1f56c:	str	x1, [x0, #224]
   1f570:	ldr	x0, [sp, #8]
   1f574:	strb	wzr, [x0, #232]
   1f578:	ldr	x0, [sp, #8]
   1f57c:	mov	w1, #0x1                   	// #1
   1f580:	strb	w1, [x0, #233]
   1f584:	ldr	x0, [sp, #8]
   1f588:	strb	wzr, [x0, #234]
   1f58c:	nop
   1f590:	add	sp, sp, #0x10
   1f594:	ret
   1f598:	str	x30, [sp, #-32]!
   1f59c:	str	x0, [sp, #24]
   1f5a0:	str	x1, [sp, #16]
   1f5a4:	mov	x2, #0xf0                  	// #240
   1f5a8:	ldr	x1, [sp, #16]
   1f5ac:	ldr	x0, [sp, #24]
   1f5b0:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
   1f5b4:	nop
   1f5b8:	ldr	x30, [sp], #32
   1f5bc:	ret
   1f5c0:	str	x30, [sp, #-144]!
   1f5c4:	str	x0, [sp, #40]
   1f5c8:	str	x1, [sp, #32]
   1f5cc:	str	x2, [sp, #24]
   1f5d0:	ldr	x1, [sp, #32]
   1f5d4:	ldr	x0, [sp, #24]
   1f5d8:	add	x0, x1, x0
   1f5dc:	str	x0, [sp, #112]
   1f5e0:	ldr	x0, [sp, #40]
   1f5e4:	ldrb	w0, [x0]
   1f5e8:	cmp	w0, #0x0
   1f5ec:	b.eq	1f824 <__sanitizer_set_report_fd@@Base+0x62c>  // b.none
   1f5f0:	ldr	x0, [sp, #112]
   1f5f4:	sub	x0, x0, #0x1
   1f5f8:	ldr	x1, [sp, #32]
   1f5fc:	cmp	x1, x0
   1f600:	b.cs	1f824 <__sanitizer_set_report_fd@@Base+0x62c>  // b.hs, b.nlast
   1f604:	ldr	x0, [sp, #40]
   1f608:	ldrb	w0, [x0]
   1f60c:	cmp	w0, #0x25
   1f610:	b.eq	1f638 <__sanitizer_set_report_fd@@Base+0x440>  // b.none
   1f614:	ldr	x1, [sp, #40]
   1f618:	add	x0, x1, #0x1
   1f61c:	str	x0, [sp, #40]
   1f620:	ldr	x0, [sp, #32]
   1f624:	add	x2, x0, #0x1
   1f628:	str	x2, [sp, #32]
   1f62c:	ldrb	w1, [x1]
   1f630:	strb	w1, [x0]
   1f634:	b	1f820 <__sanitizer_set_report_fd@@Base+0x628>
   1f638:	ldr	x0, [sp, #40]
   1f63c:	add	x0, x0, #0x1
   1f640:	ldrb	w0, [x0]
   1f644:	cmp	w0, #0x62
   1f648:	b.eq	1f658 <__sanitizer_set_report_fd@@Base+0x460>  // b.none
   1f64c:	cmp	w0, #0x70
   1f650:	b.eq	1f704 <__sanitizer_set_report_fd@@Base+0x50c>  // b.none
   1f654:	b	1f7fc <__sanitizer_set_report_fd@@Base+0x604>
   1f658:	bl	19b70 <__sancov_default_options@@Base+0x39d4>
   1f65c:	str	x0, [sp, #136]
   1f660:	ldr	x0, [sp, #136]
   1f664:	str	x0, [sp, #104]
   1f668:	str	xzr, [sp, #96]
   1f66c:	ldr	x1, [sp, #104]
   1f670:	ldr	x0, [sp, #96]
   1f674:	cmp	x1, x0
   1f678:	cset	w0, eq  // eq = none
   1f67c:	and	w0, w0, #0xff
   1f680:	and	x0, x0, #0xff
   1f684:	cmp	x0, #0x0
   1f688:	b.eq	1f6ac <__sanitizer_set_report_fd@@Base+0x4b4>  // b.none
   1f68c:	ldr	x4, [sp, #96]
   1f690:	ldr	x3, [sp, #104]
   1f694:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1f698:	add	x2, x0, #0x500
   1f69c:	mov	w1, #0x2e                  	// #46
   1f6a0:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1f6a4:	add	x0, x0, #0x510
   1f6a8:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1f6ac:	ldr	x0, [sp, #136]
   1f6b0:	ldrb	w0, [x0]
   1f6b4:	cmp	w0, #0x0
   1f6b8:	b.eq	1f6f4 <__sanitizer_set_report_fd@@Base+0x4fc>  // b.none
   1f6bc:	ldr	x0, [sp, #112]
   1f6c0:	sub	x0, x0, #0x1
   1f6c4:	ldr	x1, [sp, #32]
   1f6c8:	cmp	x1, x0
   1f6cc:	b.cs	1f6f4 <__sanitizer_set_report_fd@@Base+0x4fc>  // b.hs, b.nlast
   1f6d0:	ldr	x1, [sp, #136]
   1f6d4:	add	x0, x1, #0x1
   1f6d8:	str	x0, [sp, #136]
   1f6dc:	ldr	x0, [sp, #32]
   1f6e0:	add	x2, x0, #0x1
   1f6e4:	str	x2, [sp, #32]
   1f6e8:	ldrb	w1, [x1]
   1f6ec:	strb	w1, [x0]
   1f6f0:	b	1f6ac <__sanitizer_set_report_fd@@Base+0x4b4>
   1f6f4:	ldr	x0, [sp, #40]
   1f6f8:	add	x0, x0, #0x2
   1f6fc:	str	x0, [sp, #40]
   1f700:	b	1f820 <__sanitizer_set_report_fd@@Base+0x628>
   1f704:	bl	23c68 <__sanitizer_set_report_fd@@Base+0x4a70>
   1f708:	str	w0, [sp, #132]
   1f70c:	add	x0, sp, #0x30
   1f710:	add	x0, x0, #0x20
   1f714:	str	x0, [sp, #120]
   1f718:	ldr	w1, [sp, #132]
   1f71c:	mov	w0, #0x6667                	// #26215
   1f720:	movk	w0, #0x6666, lsl #16
   1f724:	smull	x0, w1, w0
   1f728:	lsr	x0, x0, #32
   1f72c:	asr	w2, w0, #2
   1f730:	asr	w0, w1, #31
   1f734:	sub	w2, w2, w0
   1f738:	mov	w0, w2
   1f73c:	lsl	w0, w0, #2
   1f740:	add	w0, w0, w2
   1f744:	lsl	w0, w0, #1
   1f748:	sub	w2, w1, w0
   1f74c:	and	w0, w2, #0xff
   1f750:	ldr	x1, [sp, #120]
   1f754:	sub	x1, x1, #0x1
   1f758:	str	x1, [sp, #120]
   1f75c:	add	w0, w0, #0x30
   1f760:	and	w1, w0, #0xff
   1f764:	ldr	x0, [sp, #120]
   1f768:	strb	w1, [x0]
   1f76c:	ldr	w0, [sp, #132]
   1f770:	mov	w1, #0x6667                	// #26215
   1f774:	movk	w1, #0x6666, lsl #16
   1f778:	smull	x1, w0, w1
   1f77c:	lsr	x1, x1, #32
   1f780:	asr	w1, w1, #2
   1f784:	asr	w0, w0, #31
   1f788:	sub	w0, w1, w0
   1f78c:	str	w0, [sp, #132]
   1f790:	ldr	w0, [sp, #132]
   1f794:	cmp	w0, #0x0
   1f798:	b.eq	1f7a0 <__sanitizer_set_report_fd@@Base+0x5a8>  // b.none
   1f79c:	b	1f718 <__sanitizer_set_report_fd@@Base+0x520>
   1f7a0:	add	x0, sp, #0x30
   1f7a4:	add	x0, x0, #0x20
   1f7a8:	ldr	x1, [sp, #120]
   1f7ac:	cmp	x1, x0
   1f7b0:	b.cs	1f7ec <__sanitizer_set_report_fd@@Base+0x5f4>  // b.hs, b.nlast
   1f7b4:	ldr	x0, [sp, #112]
   1f7b8:	sub	x0, x0, #0x1
   1f7bc:	ldr	x1, [sp, #32]
   1f7c0:	cmp	x1, x0
   1f7c4:	b.cs	1f7ec <__sanitizer_set_report_fd@@Base+0x5f4>  // b.hs, b.nlast
   1f7c8:	ldr	x1, [sp, #120]
   1f7cc:	add	x0, x1, #0x1
   1f7d0:	str	x0, [sp, #120]
   1f7d4:	ldr	x0, [sp, #32]
   1f7d8:	add	x2, x0, #0x1
   1f7dc:	str	x2, [sp, #32]
   1f7e0:	ldrb	w1, [x1]
   1f7e4:	strb	w1, [x0]
   1f7e8:	b	1f7a0 <__sanitizer_set_report_fd@@Base+0x5a8>
   1f7ec:	ldr	x0, [sp, #40]
   1f7f0:	add	x0, x0, #0x2
   1f7f4:	str	x0, [sp, #40]
   1f7f8:	b	1f820 <__sanitizer_set_report_fd@@Base+0x628>
   1f7fc:	ldr	x1, [sp, #40]
   1f800:	add	x0, x1, #0x1
   1f804:	str	x0, [sp, #40]
   1f808:	ldr	x0, [sp, #32]
   1f80c:	add	x2, x0, #0x1
   1f810:	str	x2, [sp, #32]
   1f814:	ldrb	w1, [x1]
   1f818:	strb	w1, [x0]
   1f81c:	nop
   1f820:	b	1f5e0 <__sanitizer_set_report_fd@@Base+0x3e8>
   1f824:	ldr	x0, [sp, #112]
   1f828:	sub	x0, x0, #0x1
   1f82c:	ldr	x1, [sp, #32]
   1f830:	cmp	x1, x0
   1f834:	cset	w0, cc  // cc = lo, ul, last
   1f838:	and	w0, w0, #0xff
   1f83c:	and	x0, x0, #0xff
   1f840:	str	x0, [sp, #88]
   1f844:	str	xzr, [sp, #80]
   1f848:	ldr	x1, [sp, #88]
   1f84c:	ldr	x0, [sp, #80]
   1f850:	cmp	x1, x0
   1f854:	cset	w0, eq  // eq = none
   1f858:	and	w0, w0, #0xff
   1f85c:	and	x0, x0, #0xff
   1f860:	cmp	x0, #0x0
   1f864:	b.eq	1f888 <__sanitizer_set_report_fd@@Base+0x690>  // b.none
   1f868:	ldr	x4, [sp, #80]
   1f86c:	ldr	x3, [sp, #88]
   1f870:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1f874:	add	x2, x0, #0x550
   1f878:	mov	w1, #0x46                  	// #70
   1f87c:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1f880:	add	x0, x0, #0x510
   1f884:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   1f888:	ldr	x0, [sp, #32]
   1f88c:	strb	wzr, [x0]
   1f890:	nop
   1f894:	ldr	x30, [sp], #144
   1f898:	ret
   1f89c:	stp	x19, x30, [sp, #-48]!
   1f8a0:	str	x0, [sp, #24]
   1f8a4:	str	x1, [sp, #16]
   1f8a8:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   1f8ac:	ldr	x1, [x0, #3456]
   1f8b0:	mov	x0, #0x18                  	// #24
   1f8b4:	bl	a5c0 <__lsan_do_recoverable_leak_check@@Base+0x434>
   1f8b8:	mov	x19, x0
   1f8bc:	mov	w2, #0x0                   	// #0
   1f8c0:	ldr	x1, [sp, #24]
   1f8c4:	mov	x0, x19
   1f8c8:	bl	2072c <__sanitizer_set_report_fd@@Base+0x1534>
   1f8cc:	str	x19, [sp, #40]
   1f8d0:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1f8d4:	add	x3, x0, #0x588
   1f8d8:	ldr	x2, [sp, #40]
   1f8dc:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1f8e0:	add	x1, x0, #0x5b0
   1f8e4:	ldr	x0, [sp, #24]
   1f8e8:	bl	21174 <__sanitizer_set_report_fd@@Base+0x1f7c>
   1f8ec:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   1f8f0:	ldr	x1, [x0, #3456]
   1f8f4:	mov	x0, #0x18                  	// #24
   1f8f8:	bl	a5c0 <__lsan_do_recoverable_leak_check@@Base+0x434>
   1f8fc:	mov	x19, x0
   1f900:	mov	w2, #0x1                   	// #1
   1f904:	ldr	x1, [sp, #24]
   1f908:	mov	x0, x19
   1f90c:	bl	2072c <__sanitizer_set_report_fd@@Base+0x1534>
   1f910:	str	x19, [sp, #32]
   1f914:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1f918:	add	x3, x0, #0x5b8
   1f91c:	ldr	x2, [sp, #32]
   1f920:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1f924:	add	x1, x0, #0x5f0
   1f928:	ldr	x0, [sp, #24]
   1f92c:	bl	21174 <__sanitizer_set_report_fd@@Base+0x1f7c>
   1f930:	nop
   1f934:	ldp	x19, x30, [sp], #48
   1f938:	ret
   1f93c:	str	x30, [sp, #-32]!
   1f940:	str	x0, [sp, #24]
   1f944:	str	x1, [sp, #16]
   1f948:	ldr	x0, [sp, #16]
   1f94c:	mov	x3, x0
   1f950:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1f954:	add	x2, x0, #0x608
   1f958:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1f95c:	add	x1, x0, #0x680
   1f960:	ldr	x0, [sp, #24]
   1f964:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   1f968:	ldr	x0, [sp, #16]
   1f96c:	add	x0, x0, #0x8
   1f970:	mov	x3, x0
   1f974:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1f978:	add	x2, x0, #0x690
   1f97c:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1f980:	add	x1, x0, #0x6e8
   1f984:	ldr	x0, [sp, #24]
   1f988:	bl	2048c <__sanitizer_set_report_fd@@Base+0x1294>
   1f98c:	ldr	x0, [sp, #16]
   1f990:	add	x0, x0, #0x10
   1f994:	mov	x3, x0
   1f998:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1f99c:	add	x2, x0, #0x708
   1f9a0:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1f9a4:	add	x1, x0, #0x7a8
   1f9a8:	ldr	x0, [sp, #24]
   1f9ac:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   1f9b0:	ldr	x0, [sp, #16]
   1f9b4:	add	x0, x0, #0x18
   1f9b8:	mov	x3, x0
   1f9bc:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1f9c0:	add	x2, x0, #0x7b8
   1f9c4:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1f9c8:	add	x1, x0, #0x7f0
   1f9cc:	ldr	x0, [sp, #24]
   1f9d0:	bl	2048c <__sanitizer_set_report_fd@@Base+0x1294>
   1f9d4:	ldr	x0, [sp, #16]
   1f9d8:	add	x0, x0, #0x20
   1f9dc:	mov	x3, x0
   1f9e0:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1f9e4:	add	x2, x0, #0x808
   1f9e8:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1f9ec:	add	x1, x0, #0x860
   1f9f0:	ldr	x0, [sp, #24]
   1f9f4:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   1f9f8:	ldr	x0, [sp, #16]
   1f9fc:	add	x0, x0, #0x21
   1fa00:	mov	x3, x0
   1fa04:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1fa08:	add	x2, x0, #0x878
   1fa0c:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1fa10:	add	x1, x0, #0x8c8
   1fa14:	ldr	x0, [sp, #24]
   1fa18:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   1fa1c:	ldr	x0, [sp, #16]
   1fa20:	add	x0, x0, #0x22
   1fa24:	mov	x3, x0
   1fa28:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1fa2c:	add	x2, x0, #0x8e0
   1fa30:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1fa34:	add	x1, x0, #0x928
   1fa38:	ldr	x0, [sp, #24]
   1fa3c:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   1fa40:	ldr	x0, [sp, #16]
   1fa44:	add	x0, x0, #0x23
   1fa48:	mov	x3, x0
   1fa4c:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1fa50:	add	x2, x0, #0x940
   1fa54:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1fa58:	add	x1, x0, #0x968
   1fa5c:	ldr	x0, [sp, #24]
   1fa60:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   1fa64:	ldr	x0, [sp, #16]
   1fa68:	add	x0, x0, #0x24
   1fa6c:	mov	x3, x0
   1fa70:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1fa74:	add	x2, x0, #0x978
   1fa78:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1fa7c:	add	x1, x0, #0x9c0
   1fa80:	ldr	x0, [sp, #24]
   1fa84:	bl	204e4 <__sanitizer_set_report_fd@@Base+0x12ec>
   1fa88:	ldr	x0, [sp, #16]
   1fa8c:	add	x0, x0, #0x28
   1fa90:	mov	x3, x0
   1fa94:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1fa98:	add	x2, x0, #0x9d8
   1fa9c:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1faa0:	add	x1, x0, #0xa40
   1faa4:	ldr	x0, [sp, #24]
   1faa8:	bl	2048c <__sanitizer_set_report_fd@@Base+0x1294>
   1faac:	ldr	x0, [sp, #16]
   1fab0:	add	x0, x0, #0x30
   1fab4:	mov	x3, x0
   1fab8:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1fabc:	add	x2, x0, #0xa50
   1fac0:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1fac4:	add	x1, x0, #0xac8
   1fac8:	ldr	x0, [sp, #24]
   1facc:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   1fad0:	ldr	x0, [sp, #16]
   1fad4:	add	x0, x0, #0x31
   1fad8:	mov	x3, x0
   1fadc:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1fae0:	add	x2, x0, #0xad8
   1fae4:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1fae8:	add	x1, x0, #0xb28
   1faec:	ldr	x0, [sp, #24]
   1faf0:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   1faf4:	ldr	x0, [sp, #16]
   1faf8:	add	x0, x0, #0x34
   1fafc:	mov	x3, x0
   1fb00:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1fb04:	add	x2, x0, #0xb38
   1fb08:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1fb0c:	add	x1, x0, #0xb80
   1fb10:	ldr	x0, [sp, #24]
   1fb14:	bl	204e4 <__sanitizer_set_report_fd@@Base+0x12ec>
   1fb18:	ldr	x0, [sp, #16]
   1fb1c:	add	x0, x0, #0x38
   1fb20:	mov	x3, x0
   1fb24:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1fb28:	add	x2, x0, #0xb90
   1fb2c:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1fb30:	add	x1, x0, #0xc00
   1fb34:	ldr	x0, [sp, #24]
   1fb38:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   1fb3c:	ldr	x0, [sp, #16]
   1fb40:	add	x0, x0, #0x39
   1fb44:	mov	x3, x0
   1fb48:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1fb4c:	add	x2, x0, #0xc10
   1fb50:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1fb54:	add	x1, x0, #0xc30
   1fb58:	ldr	x0, [sp, #24]
   1fb5c:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   1fb60:	ldr	x0, [sp, #16]
   1fb64:	add	x0, x0, #0x3a
   1fb68:	mov	x3, x0
   1fb6c:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1fb70:	add	x2, x0, #0xc40
   1fb74:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1fb78:	add	x1, x0, #0xce0
   1fb7c:	ldr	x0, [sp, #24]
   1fb80:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   1fb84:	ldr	x0, [sp, #16]
   1fb88:	add	x0, x0, #0x3b
   1fb8c:	mov	x3, x0
   1fb90:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1fb94:	add	x2, x0, #0xcf8
   1fb98:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1fb9c:	add	x1, x0, #0xd48
   1fba0:	ldr	x0, [sp, #24]
   1fba4:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   1fba8:	ldr	x0, [sp, #16]
   1fbac:	add	x0, x0, #0x3c
   1fbb0:	mov	x3, x0
   1fbb4:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1fbb8:	add	x2, x0, #0xd68
   1fbbc:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1fbc0:	add	x1, x0, #0xdb8
   1fbc4:	ldr	x0, [sp, #24]
   1fbc8:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   1fbcc:	ldr	x0, [sp, #16]
   1fbd0:	add	x0, x0, #0x40
   1fbd4:	mov	x3, x0
   1fbd8:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1fbdc:	add	x2, x0, #0xdc8
   1fbe0:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1fbe4:	add	x1, x0, #0xe30
   1fbe8:	ldr	x0, [sp, #24]
   1fbec:	bl	204e4 <__sanitizer_set_report_fd@@Base+0x12ec>
   1fbf0:	ldr	x0, [sp, #16]
   1fbf4:	add	x0, x0, #0x44
   1fbf8:	mov	x3, x0
   1fbfc:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1fc00:	add	x2, x0, #0xe48
   1fc04:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1fc08:	add	x1, x0, #0xe60
   1fc0c:	ldr	x0, [sp, #24]
   1fc10:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   1fc14:	ldr	x0, [sp, #16]
   1fc18:	add	x0, x0, #0x48
   1fc1c:	mov	x3, x0
   1fc20:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1fc24:	add	x2, x0, #0xe70
   1fc28:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1fc2c:	add	x1, x0, #0xf30
   1fc30:	ldr	x0, [sp, #24]
   1fc34:	bl	2053c <__sanitizer_set_report_fd@@Base+0x1344>
   1fc38:	ldr	x0, [sp, #16]
   1fc3c:	add	x0, x0, #0x4c
   1fc40:	mov	x3, x0
   1fc44:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   1fc48:	add	x2, x0, #0xf40
   1fc4c:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1fc50:	add	x1, x0, #0x0
   1fc54:	ldr	x0, [sp, #24]
   1fc58:	bl	2053c <__sanitizer_set_report_fd@@Base+0x1344>
   1fc5c:	ldr	x0, [sp, #16]
   1fc60:	add	x0, x0, #0x50
   1fc64:	mov	x3, x0
   1fc68:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1fc6c:	add	x2, x0, #0x10
   1fc70:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1fc74:	add	x1, x0, #0xd0
   1fc78:	ldr	x0, [sp, #24]
   1fc7c:	bl	2053c <__sanitizer_set_report_fd@@Base+0x1344>
   1fc80:	ldr	x0, [sp, #16]
   1fc84:	add	x0, x0, #0x54
   1fc88:	mov	x3, x0
   1fc8c:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1fc90:	add	x2, x0, #0xe0
   1fc94:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1fc98:	add	x1, x0, #0x1a0
   1fc9c:	ldr	x0, [sp, #24]
   1fca0:	bl	2053c <__sanitizer_set_report_fd@@Base+0x1344>
   1fca4:	ldr	x0, [sp, #16]
   1fca8:	add	x0, x0, #0x58
   1fcac:	mov	x3, x0
   1fcb0:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1fcb4:	add	x2, x0, #0x1b0
   1fcb8:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1fcbc:	add	x1, x0, #0x270
   1fcc0:	ldr	x0, [sp, #24]
   1fcc4:	bl	2053c <__sanitizer_set_report_fd@@Base+0x1344>
   1fcc8:	ldr	x0, [sp, #16]
   1fccc:	add	x0, x0, #0x5c
   1fcd0:	mov	x3, x0
   1fcd4:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1fcd8:	add	x2, x0, #0x280
   1fcdc:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1fce0:	add	x1, x0, #0x340
   1fce4:	ldr	x0, [sp, #24]
   1fce8:	bl	2053c <__sanitizer_set_report_fd@@Base+0x1344>
   1fcec:	ldr	x0, [sp, #16]
   1fcf0:	add	x0, x0, #0x60
   1fcf4:	mov	x3, x0
   1fcf8:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1fcfc:	add	x2, x0, #0x350
   1fd00:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1fd04:	add	x1, x0, #0x3c0
   1fd08:	ldr	x0, [sp, #24]
   1fd0c:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   1fd10:	ldr	x0, [sp, #16]
   1fd14:	add	x0, x0, #0x61
   1fd18:	mov	x3, x0
   1fd1c:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1fd20:	add	x2, x0, #0x3d8
   1fd24:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1fd28:	add	x1, x0, #0x410
   1fd2c:	ldr	x0, [sp, #24]
   1fd30:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   1fd34:	ldr	x0, [sp, #16]
   1fd38:	add	x0, x0, #0x62
   1fd3c:	mov	x3, x0
   1fd40:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1fd44:	add	x2, x0, #0x420
   1fd48:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1fd4c:	add	x1, x0, #0x448
   1fd50:	ldr	x0, [sp, #24]
   1fd54:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   1fd58:	ldr	x0, [sp, #16]
   1fd5c:	add	x0, x0, #0x68
   1fd60:	mov	x3, x0
   1fd64:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1fd68:	add	x2, x0, #0x460
   1fd6c:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1fd70:	add	x1, x0, #0x4d8
   1fd74:	ldr	x0, [sp, #24]
   1fd78:	bl	20594 <__sanitizer_set_report_fd@@Base+0x139c>
   1fd7c:	ldr	x0, [sp, #16]
   1fd80:	add	x0, x0, #0x70
   1fd84:	mov	x3, x0
   1fd88:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1fd8c:	add	x2, x0, #0x4f8
   1fd90:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1fd94:	add	x1, x0, #0x520
   1fd98:	ldr	x0, [sp, #24]
   1fd9c:	bl	2048c <__sanitizer_set_report_fd@@Base+0x1294>
   1fda0:	ldr	x0, [sp, #16]
   1fda4:	add	x0, x0, #0x78
   1fda8:	mov	x3, x0
   1fdac:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1fdb0:	add	x2, x0, #0x528
   1fdb4:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1fdb8:	add	x1, x0, #0x570
   1fdbc:	ldr	x0, [sp, #24]
   1fdc0:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   1fdc4:	ldr	x0, [sp, #16]
   1fdc8:	add	x0, x0, #0x79
   1fdcc:	mov	x3, x0
   1fdd0:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1fdd4:	add	x2, x0, #0x588
   1fdd8:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1fddc:	add	x1, x0, #0x5a8
   1fde0:	ldr	x0, [sp, #24]
   1fde4:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   1fde8:	ldr	x0, [sp, #16]
   1fdec:	add	x0, x0, #0x7a
   1fdf0:	mov	x3, x0
   1fdf4:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1fdf8:	add	x2, x0, #0x5c0
   1fdfc:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1fe00:	add	x1, x0, #0x5e0
   1fe04:	ldr	x0, [sp, #24]
   1fe08:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   1fe0c:	ldr	x0, [sp, #16]
   1fe10:	add	x0, x0, #0x80
   1fe14:	mov	x3, x0
   1fe18:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1fe1c:	add	x2, x0, #0x5e8
   1fe20:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1fe24:	add	x1, x0, #0x660
   1fe28:	ldr	x0, [sp, #24]
   1fe2c:	bl	20594 <__sanitizer_set_report_fd@@Base+0x139c>
   1fe30:	ldr	x0, [sp, #16]
   1fe34:	add	x0, x0, #0x88
   1fe38:	mov	x3, x0
   1fe3c:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1fe40:	add	x2, x0, #0x670
   1fe44:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1fe48:	add	x1, x0, #0x710
   1fe4c:	ldr	x0, [sp, #24]
   1fe50:	bl	20594 <__sanitizer_set_report_fd@@Base+0x139c>
   1fe54:	ldr	x0, [sp, #16]
   1fe58:	add	x0, x0, #0x90
   1fe5c:	mov	x3, x0
   1fe60:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1fe64:	add	x2, x0, #0x728
   1fe68:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1fe6c:	add	x1, x0, #0x888
   1fe70:	ldr	x0, [sp, #24]
   1fe74:	bl	20594 <__sanitizer_set_report_fd@@Base+0x139c>
   1fe78:	ldr	x0, [sp, #16]
   1fe7c:	add	x0, x0, #0x98
   1fe80:	mov	x3, x0
   1fe84:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1fe88:	add	x2, x0, #0x8a0
   1fe8c:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1fe90:	add	x1, x0, #0x8c8
   1fe94:	ldr	x0, [sp, #24]
   1fe98:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   1fe9c:	ldr	x0, [sp, #16]
   1fea0:	add	x0, x0, #0x9c
   1fea4:	mov	x3, x0
   1fea8:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1feac:	add	x2, x0, #0x8d8
   1feb0:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1feb4:	add	x1, x0, #0x9a8
   1feb8:	ldr	x0, [sp, #24]
   1febc:	bl	204e4 <__sanitizer_set_report_fd@@Base+0x12ec>
   1fec0:	ldr	x0, [sp, #16]
   1fec4:	add	x0, x0, #0xa0
   1fec8:	mov	x3, x0
   1fecc:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1fed0:	add	x2, x0, #0x9d0
   1fed4:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1fed8:	add	x1, x0, #0xa30
   1fedc:	ldr	x0, [sp, #24]
   1fee0:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   1fee4:	ldr	x0, [sp, #16]
   1fee8:	add	x0, x0, #0xa1
   1feec:	mov	x3, x0
   1fef0:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1fef4:	add	x2, x0, #0xa48
   1fef8:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1fefc:	add	x1, x0, #0xac8
   1ff00:	ldr	x0, [sp, #24]
   1ff04:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   1ff08:	ldr	x0, [sp, #16]
   1ff0c:	add	x0, x0, #0xa8
   1ff10:	mov	x3, x0
   1ff14:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1ff18:	add	x2, x0, #0xad8
   1ff1c:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1ff20:	add	x1, x0, #0xb20
   1ff24:	ldr	x0, [sp, #24]
   1ff28:	bl	2048c <__sanitizer_set_report_fd@@Base+0x1294>
   1ff2c:	ldr	x0, [sp, #16]
   1ff30:	add	x0, x0, #0xb0
   1ff34:	mov	x3, x0
   1ff38:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1ff3c:	add	x2, x0, #0xb30
   1ff40:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1ff44:	add	x1, x0, #0xb98
   1ff48:	ldr	x0, [sp, #24]
   1ff4c:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   1ff50:	ldr	x0, [sp, #16]
   1ff54:	add	x0, x0, #0xb1
   1ff58:	mov	x3, x0
   1ff5c:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1ff60:	add	x2, x0, #0xbb0
   1ff64:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1ff68:	add	x1, x0, #0xbd8
   1ff6c:	ldr	x0, [sp, #24]
   1ff70:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   1ff74:	ldr	x0, [sp, #16]
   1ff78:	add	x0, x0, #0xb2
   1ff7c:	mov	x3, x0
   1ff80:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1ff84:	add	x2, x0, #0xbf0
   1ff88:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1ff8c:	add	x1, x0, #0xcc0
   1ff90:	ldr	x0, [sp, #24]
   1ff94:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   1ff98:	ldr	x0, [sp, #16]
   1ff9c:	add	x0, x0, #0xb3
   1ffa0:	mov	x3, x0
   1ffa4:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1ffa8:	add	x2, x0, #0xcd8
   1ffac:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1ffb0:	add	x1, x0, #0xd20
   1ffb4:	ldr	x0, [sp, #24]
   1ffb8:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   1ffbc:	ldr	x0, [sp, #16]
   1ffc0:	add	x0, x0, #0xb4
   1ffc4:	mov	x3, x0
   1ffc8:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1ffcc:	add	x2, x0, #0xd38
   1ffd0:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1ffd4:	add	x1, x0, #0xd70
   1ffd8:	ldr	x0, [sp, #24]
   1ffdc:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   1ffe0:	ldr	x0, [sp, #16]
   1ffe4:	add	x0, x0, #0xb5
   1ffe8:	mov	x3, x0
   1ffec:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1fff0:	add	x2, x0, #0xd88
   1fff4:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   1fff8:	add	x1, x0, #0xdd0
   1fffc:	ldr	x0, [sp, #24]
   20000:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   20004:	ldr	x0, [sp, #16]
   20008:	add	x0, x0, #0xb8
   2000c:	mov	x3, x0
   20010:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   20014:	add	x2, x0, #0xde8
   20018:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   2001c:	add	x1, x0, #0xeb8
   20020:	ldr	x0, [sp, #24]
   20024:	bl	204e4 <__sanitizer_set_report_fd@@Base+0x12ec>
   20028:	ldr	x0, [sp, #16]
   2002c:	add	x0, x0, #0xc0
   20030:	mov	x3, x0
   20034:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   20038:	add	x2, x0, #0xed0
   2003c:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   20040:	add	x1, x0, #0xf60
   20044:	ldr	x0, [sp, #24]
   20048:	bl	2048c <__sanitizer_set_report_fd@@Base+0x1294>
   2004c:	ldr	x0, [sp, #16]
   20050:	add	x0, x0, #0xc8
   20054:	mov	x3, x0
   20058:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   2005c:	add	x2, x0, #0xf78
   20060:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   20064:	add	x1, x0, #0xfb0
   20068:	ldr	x0, [sp, #24]
   2006c:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   20070:	ldr	x0, [sp, #16]
   20074:	add	x0, x0, #0xc9
   20078:	mov	x3, x0
   2007c:	adrp	x0, 54000 <__asan_backtrace_vector_release@@Base+0x5340>
   20080:	add	x2, x0, #0xfd0
   20084:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   20088:	add	x1, x0, #0x10
   2008c:	ldr	x0, [sp, #24]
   20090:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   20094:	ldr	x0, [sp, #16]
   20098:	add	x0, x0, #0xca
   2009c:	mov	x3, x0
   200a0:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   200a4:	add	x2, x0, #0x28
   200a8:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   200ac:	add	x1, x0, #0x80
   200b0:	ldr	x0, [sp, #24]
   200b4:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   200b8:	ldr	x0, [sp, #16]
   200bc:	add	x0, x0, #0xcb
   200c0:	mov	x3, x0
   200c4:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   200c8:	add	x2, x0, #0x98
   200cc:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   200d0:	add	x1, x0, #0xf0
   200d4:	ldr	x0, [sp, #24]
   200d8:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   200dc:	ldr	x0, [sp, #16]
   200e0:	add	x0, x0, #0xcc
   200e4:	mov	x3, x0
   200e8:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   200ec:	add	x2, x0, #0x108
   200f0:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   200f4:	add	x1, x0, #0x158
   200f8:	ldr	x0, [sp, #24]
   200fc:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   20100:	ldr	x0, [sp, #16]
   20104:	add	x0, x0, #0xcd
   20108:	mov	x3, x0
   2010c:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   20110:	add	x2, x0, #0x170
   20114:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   20118:	add	x1, x0, #0x1b8
   2011c:	ldr	x0, [sp, #24]
   20120:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   20124:	ldr	x0, [sp, #16]
   20128:	add	x0, x0, #0xce
   2012c:	mov	x3, x0
   20130:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   20134:	add	x2, x0, #0x1d0
   20138:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   2013c:	add	x1, x0, #0x228
   20140:	ldr	x0, [sp, #24]
   20144:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   20148:	ldr	x0, [sp, #16]
   2014c:	add	x0, x0, #0xcf
   20150:	mov	x3, x0
   20154:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   20158:	add	x2, x0, #0x240
   2015c:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   20160:	add	x1, x0, #0x288
   20164:	ldr	x0, [sp, #24]
   20168:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   2016c:	ldr	x0, [sp, #16]
   20170:	add	x0, x0, #0xd0
   20174:	mov	x3, x0
   20178:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   2017c:	add	x2, x0, #0x2a0
   20180:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   20184:	add	x1, x0, #0x300
   20188:	ldr	x0, [sp, #24]
   2018c:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   20190:	ldr	x0, [sp, #16]
   20194:	add	x0, x0, #0xd1
   20198:	mov	x3, x0
   2019c:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   201a0:	add	x2, x0, #0x318
   201a4:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   201a8:	add	x1, x0, #0x360
   201ac:	ldr	x0, [sp, #24]
   201b0:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   201b4:	ldr	x0, [sp, #16]
   201b8:	add	x0, x0, #0xd2
   201bc:	mov	x3, x0
   201c0:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   201c4:	add	x2, x0, #0x378
   201c8:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   201cc:	add	x1, x0, #0x3d0
   201d0:	ldr	x0, [sp, #24]
   201d4:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   201d8:	ldr	x0, [sp, #16]
   201dc:	add	x0, x0, #0xd3
   201e0:	mov	x3, x0
   201e4:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   201e8:	add	x2, x0, #0x3e0
   201ec:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   201f0:	add	x1, x0, #0x420
   201f4:	ldr	x0, [sp, #24]
   201f8:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   201fc:	ldr	x0, [sp, #16]
   20200:	add	x0, x0, #0xd4
   20204:	mov	x3, x0
   20208:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   2020c:	add	x2, x0, #0x438
   20210:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   20214:	add	x1, x0, #0x490
   20218:	ldr	x0, [sp, #24]
   2021c:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   20220:	ldr	x0, [sp, #16]
   20224:	add	x0, x0, #0xd5
   20228:	mov	x3, x0
   2022c:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   20230:	add	x2, x0, #0x4a8
   20234:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   20238:	add	x1, x0, #0x4f0
   2023c:	ldr	x0, [sp, #24]
   20240:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   20244:	ldr	x0, [sp, #16]
   20248:	add	x0, x0, #0xd6
   2024c:	mov	x3, x0
   20250:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   20254:	add	x2, x0, #0x500
   20258:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   2025c:	add	x1, x0, #0x548
   20260:	ldr	x0, [sp, #24]
   20264:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   20268:	ldr	x0, [sp, #16]
   2026c:	add	x0, x0, #0xd7
   20270:	mov	x3, x0
   20274:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   20278:	add	x2, x0, #0x558
   2027c:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   20280:	add	x1, x0, #0x5a8
   20284:	ldr	x0, [sp, #24]
   20288:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   2028c:	ldr	x0, [sp, #16]
   20290:	add	x0, x0, #0xd8
   20294:	mov	x3, x0
   20298:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   2029c:	add	x2, x0, #0x5c0
   202a0:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   202a4:	add	x1, x0, #0x600
   202a8:	ldr	x0, [sp, #24]
   202ac:	bl	204e4 <__sanitizer_set_report_fd@@Base+0x12ec>
   202b0:	ldr	x0, [sp, #16]
   202b4:	add	x0, x0, #0xdc
   202b8:	mov	x3, x0
   202bc:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   202c0:	add	x2, x0, #0x610
   202c4:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   202c8:	add	x1, x0, #0x668
   202cc:	ldr	x0, [sp, #24]
   202d0:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   202d4:	ldr	x0, [sp, #16]
   202d8:	add	x0, x0, #0xdd
   202dc:	mov	x3, x0
   202e0:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   202e4:	add	x2, x0, #0x678
   202e8:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   202ec:	add	x1, x0, #0x6e0
   202f0:	ldr	x0, [sp, #24]
   202f4:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   202f8:	ldr	x0, [sp, #16]
   202fc:	add	x0, x0, #0xde
   20300:	mov	x3, x0
   20304:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   20308:	add	x2, x0, #0x6f8
   2030c:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   20310:	add	x1, x0, #0x728
   20314:	ldr	x0, [sp, #24]
   20318:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   2031c:	ldr	x0, [sp, #16]
   20320:	add	x0, x0, #0xdf
   20324:	mov	x3, x0
   20328:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   2032c:	add	x2, x0, #0x738
   20330:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   20334:	add	x1, x0, #0x758
   20338:	ldr	x0, [sp, #24]
   2033c:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   20340:	ldr	x0, [sp, #16]
   20344:	add	x0, x0, #0xe0
   20348:	mov	x3, x0
   2034c:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   20350:	add	x2, x0, #0x768
   20354:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   20358:	add	x1, x0, #0x780
   2035c:	ldr	x0, [sp, #24]
   20360:	bl	2048c <__sanitizer_set_report_fd@@Base+0x1294>
   20364:	ldr	x0, [sp, #16]
   20368:	add	x0, x0, #0xe8
   2036c:	mov	x3, x0
   20370:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   20374:	add	x2, x0, #0x790
   20378:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   2037c:	add	x1, x0, #0x7d8
   20380:	ldr	x0, [sp, #24]
   20384:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   20388:	ldr	x0, [sp, #16]
   2038c:	add	x0, x0, #0xe9
   20390:	mov	x3, x0
   20394:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   20398:	add	x2, x0, #0x7f0
   2039c:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   203a0:	add	x1, x0, #0x850
   203a4:	ldr	x0, [sp, #24]
   203a8:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   203ac:	ldr	x0, [sp, #16]
   203b0:	add	x0, x0, #0xea
   203b4:	mov	x3, x0
   203b8:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   203bc:	add	x2, x0, #0x860
   203c0:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   203c4:	add	x1, x0, #0x8b8
   203c8:	ldr	x0, [sp, #24]
   203cc:	bl	20434 <__sanitizer_set_report_fd@@Base+0x123c>
   203d0:	ldr	x1, [sp, #16]
   203d4:	ldr	x0, [sp, #24]
   203d8:	bl	1f89c <__sanitizer_set_report_fd@@Base+0x6a4>
   203dc:	nop
   203e0:	ldr	x30, [sp], #32
   203e4:	ret
   203e8:	str	x30, [sp, #-32]!
   203ec:	str	x0, [sp, #24]
   203f0:	ldr	x0, [sp, #24]
   203f4:	ldrb	w1, [x0, #161]
   203f8:	ldr	x0, [sp, #24]
   203fc:	ldrb	w0, [x0, #223]
   20400:	orr	w0, w1, w0
   20404:	and	w0, w0, #0xff
   20408:	cmp	w0, #0x0
   2040c:	cset	w0, ne  // ne = any
   20410:	and	w1, w0, #0xff
   20414:	ldr	x0, [sp, #24]
   20418:	strb	w1, [x0, #161]
   2041c:	ldr	x0, [sp, #24]
   20420:	ldr	w0, [x0, #52]
   20424:	bl	dbe8 <__sanitizer_print_stack_trace@@Base+0x130>
   20428:	nop
   2042c:	ldr	x30, [sp], #32
   20430:	ret
   20434:	stp	x19, x30, [sp, #-64]!
   20438:	str	x0, [sp, #40]
   2043c:	str	x1, [sp, #32]
   20440:	str	x2, [sp, #24]
   20444:	str	x3, [sp, #16]
   20448:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   2044c:	ldr	x1, [x0, #3456]
   20450:	mov	x0, #0x10                  	// #16
   20454:	bl	a5c0 <__lsan_do_recoverable_leak_check@@Base+0x434>
   20458:	mov	x19, x0
   2045c:	ldr	x1, [sp, #16]
   20460:	mov	x0, x19
   20464:	bl	bfcc <__lsan_do_recoverable_leak_check@@Base+0x1e40>
   20468:	str	x19, [sp, #56]
   2046c:	ldr	x3, [sp, #24]
   20470:	ldr	x2, [sp, #56]
   20474:	ldr	x1, [sp, #32]
   20478:	ldr	x0, [sp, #40]
   2047c:	bl	21174 <__sanitizer_set_report_fd@@Base+0x1f7c>
   20480:	nop
   20484:	ldp	x19, x30, [sp], #64
   20488:	ret
   2048c:	stp	x19, x30, [sp, #-64]!
   20490:	str	x0, [sp, #40]
   20494:	str	x1, [sp, #32]
   20498:	str	x2, [sp, #24]
   2049c:	str	x3, [sp, #16]
   204a0:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   204a4:	ldr	x1, [x0, #3456]
   204a8:	mov	x0, #0x10                  	// #16
   204ac:	bl	a5c0 <__lsan_do_recoverable_leak_check@@Base+0x434>
   204b0:	mov	x19, x0
   204b4:	ldr	x1, [sp, #16]
   204b8:	mov	x0, x19
   204bc:	bl	c044 <__lsan_do_recoverable_leak_check@@Base+0x1eb8>
   204c0:	str	x19, [sp, #56]
   204c4:	ldr	x3, [sp, #24]
   204c8:	ldr	x2, [sp, #56]
   204cc:	ldr	x1, [sp, #32]
   204d0:	ldr	x0, [sp, #40]
   204d4:	bl	21174 <__sanitizer_set_report_fd@@Base+0x1f7c>
   204d8:	nop
   204dc:	ldp	x19, x30, [sp], #64
   204e0:	ret
   204e4:	stp	x19, x30, [sp, #-64]!
   204e8:	str	x0, [sp, #40]
   204ec:	str	x1, [sp, #32]
   204f0:	str	x2, [sp, #24]
   204f4:	str	x3, [sp, #16]
   204f8:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   204fc:	ldr	x1, [x0, #3456]
   20500:	mov	x0, #0x10                  	// #16
   20504:	bl	a5c0 <__lsan_do_recoverable_leak_check@@Base+0x434>
   20508:	mov	x19, x0
   2050c:	ldr	x1, [sp, #16]
   20510:	mov	x0, x19
   20514:	bl	c008 <__lsan_do_recoverable_leak_check@@Base+0x1e7c>
   20518:	str	x19, [sp, #56]
   2051c:	ldr	x3, [sp, #24]
   20520:	ldr	x2, [sp, #56]
   20524:	ldr	x1, [sp, #32]
   20528:	ldr	x0, [sp, #40]
   2052c:	bl	21174 <__sanitizer_set_report_fd@@Base+0x1f7c>
   20530:	nop
   20534:	ldp	x19, x30, [sp], #64
   20538:	ret
   2053c:	stp	x19, x30, [sp, #-64]!
   20540:	str	x0, [sp, #40]
   20544:	str	x1, [sp, #32]
   20548:	str	x2, [sp, #24]
   2054c:	str	x3, [sp, #16]
   20550:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   20554:	ldr	x1, [x0, #3456]
   20558:	mov	x0, #0x10                  	// #16
   2055c:	bl	a5c0 <__lsan_do_recoverable_leak_check@@Base+0x434>
   20560:	mov	x19, x0
   20564:	ldr	x1, [sp, #16]
   20568:	mov	x0, x19
   2056c:	bl	20834 <__sanitizer_set_report_fd@@Base+0x163c>
   20570:	str	x19, [sp, #56]
   20574:	ldr	x3, [sp, #24]
   20578:	ldr	x2, [sp, #56]
   2057c:	ldr	x1, [sp, #32]
   20580:	ldr	x0, [sp, #40]
   20584:	bl	21174 <__sanitizer_set_report_fd@@Base+0x1f7c>
   20588:	nop
   2058c:	ldp	x19, x30, [sp], #64
   20590:	ret
   20594:	stp	x19, x30, [sp, #-64]!
   20598:	str	x0, [sp, #40]
   2059c:	str	x1, [sp, #32]
   205a0:	str	x2, [sp, #24]
   205a4:	str	x3, [sp, #16]
   205a8:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   205ac:	ldr	x1, [x0, #3456]
   205b0:	mov	x0, #0x10                  	// #16
   205b4:	bl	a5c0 <__lsan_do_recoverable_leak_check@@Base+0x434>
   205b8:	mov	x19, x0
   205bc:	ldr	x1, [sp, #16]
   205c0:	mov	x0, x19
   205c4:	bl	20870 <__sanitizer_set_report_fd@@Base+0x1678>
   205c8:	str	x19, [sp, #56]
   205cc:	ldr	x3, [sp, #24]
   205d0:	ldr	x2, [sp, #56]
   205d4:	ldr	x1, [sp, #32]
   205d8:	ldr	x0, [sp, #40]
   205dc:	bl	21174 <__sanitizer_set_report_fd@@Base+0x1f7c>
   205e0:	nop
   205e4:	ldp	x19, x30, [sp], #64
   205e8:	ret
   205ec:	str	x30, [sp, #-48]!
   205f0:	str	x0, [sp, #24]
   205f4:	str	x1, [sp, #16]
   205f8:	add	x0, sp, #0x2f
   205fc:	mov	x1, x0
   20600:	ldr	x0, [sp, #16]
   20604:	bl	a728 <__lsan_do_recoverable_leak_check@@Base+0x59c>
   20608:	and	w0, w0, #0xff
   2060c:	cmp	w0, #0x0
   20610:	b.eq	20640 <__sanitizer_set_report_fd@@Base+0x1448>  // b.none
   20614:	ldrb	w0, [sp, #47]
   20618:	cmp	w0, #0x0
   2061c:	b.eq	20628 <__sanitizer_set_report_fd@@Base+0x1430>  // b.none
   20620:	mov	w0, #0x1                   	// #1
   20624:	b	2062c <__sanitizer_set_report_fd@@Base+0x1434>
   20628:	mov	w0, #0x0                   	// #0
   2062c:	ldr	x1, [sp, #24]
   20630:	ldr	x1, [x1, #8]
   20634:	str	w0, [x1]
   20638:	mov	w0, #0x1                   	// #1
   2063c:	b	206b0 <__sanitizer_set_report_fd@@Base+0x14b8>
   20640:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   20644:	add	x1, x0, #0x420
   20648:	ldr	x0, [sp, #16]
   2064c:	bl	21950 <__sanitizer_set_report_fd@@Base+0x2758>
   20650:	cmp	w0, #0x0
   20654:	b.eq	20670 <__sanitizer_set_report_fd@@Base+0x1478>  // b.none
   20658:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   2065c:	add	x1, x0, #0x428
   20660:	ldr	x0, [sp, #16]
   20664:	bl	21950 <__sanitizer_set_report_fd@@Base+0x2758>
   20668:	cmp	w0, #0x0
   2066c:	b.ne	20678 <__sanitizer_set_report_fd@@Base+0x1480>  // b.any
   20670:	mov	w0, #0x1                   	// #1
   20674:	b	2067c <__sanitizer_set_report_fd@@Base+0x1484>
   20678:	mov	w0, #0x0                   	// #0
   2067c:	cmp	w0, #0x0
   20680:	b.eq	2069c <__sanitizer_set_report_fd@@Base+0x14a4>  // b.none
   20684:	ldr	x0, [sp, #24]
   20688:	ldr	x0, [x0, #8]
   2068c:	mov	w1, #0x2                   	// #2
   20690:	str	w1, [x0]
   20694:	mov	w0, #0x1                   	// #1
   20698:	b	206b0 <__sanitizer_set_report_fd@@Base+0x14b8>
   2069c:	ldr	x1, [sp, #16]
   206a0:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   206a4:	add	x0, x0, #0x438
   206a8:	bl	2a350 <OnPrint@@Base+0x3a8>
   206ac:	mov	w0, #0x0                   	// #0
   206b0:	ldr	x30, [sp], #48
   206b4:	ret
   206b8:	str	x30, [sp, #-48]!
   206bc:	str	x0, [sp, #24]
   206c0:	str	x1, [sp, #16]
   206c4:	add	x0, sp, #0x20
   206c8:	mov	w2, #0xa                   	// #10
   206cc:	mov	x1, x0
   206d0:	ldr	x0, [sp, #16]
   206d4:	bl	21fa0 <__sanitizer_set_report_fd@@Base+0x2da8>
   206d8:	mov	x1, x0
   206dc:	ldr	x0, [sp, #24]
   206e0:	ldr	x0, [x0, #8]
   206e4:	str	x1, [x0]
   206e8:	ldr	x0, [sp, #32]
   206ec:	ldrb	w0, [x0]
   206f0:	cmp	w0, #0x0
   206f4:	cset	w0, eq  // eq = none
   206f8:	strb	w0, [sp, #47]
   206fc:	ldrb	w0, [sp, #47]
   20700:	eor	w0, w0, #0x1
   20704:	and	w0, w0, #0xff
   20708:	cmp	w0, #0x0
   2070c:	b.eq	20720 <__sanitizer_set_report_fd@@Base+0x1528>  // b.none
   20710:	ldr	x1, [sp, #16]
   20714:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   20718:	add	x0, x0, #0x4a0
   2071c:	bl	2a350 <OnPrint@@Base+0x3a8>
   20720:	ldrb	w0, [sp, #47]
   20724:	ldr	x30, [sp], #48
   20728:	ret
   2072c:	str	x30, [sp, #-48]!
   20730:	str	x0, [sp, #40]
   20734:	str	x1, [sp, #32]
   20738:	strb	w2, [sp, #31]
   2073c:	ldr	x0, [sp, #40]
   20740:	bl	bfa8 <__lsan_do_recoverable_leak_check@@Base+0x1e1c>
   20744:	adrp	x0, 7b000 <__asan_backtrace_vector_release@@Base+0x2c340>
   20748:	add	x1, x0, #0xc18
   2074c:	ldr	x0, [sp, #40]
   20750:	str	x1, [x0]
   20754:	ldr	x0, [sp, #40]
   20758:	ldr	x1, [sp, #32]
   2075c:	str	x1, [x0, #8]
   20760:	ldr	x0, [sp, #40]
   20764:	ldrb	w1, [sp, #31]
   20768:	strb	w1, [x0, #16]
   2076c:	nop
   20770:	ldr	x30, [sp], #48
   20774:	ret
   20778:	str	x30, [sp, #-48]!
   2077c:	str	x0, [sp, #24]
   20780:	str	x1, [sp, #16]
   20784:	mov	w1, #0x25                  	// #37
   20788:	ldr	x0, [sp, #16]
   2078c:	bl	21a8c <__sanitizer_set_report_fd@@Base+0x2894>
   20790:	cmp	x0, #0x0
   20794:	cset	w0, ne  // ne = any
   20798:	and	w0, w0, #0xff
   2079c:	cmp	w0, #0x0
   207a0:	b.eq	20804 <__sanitizer_set_report_fd@@Base+0x160c>  // b.none
   207a4:	mov	w2, #0x0                   	// #0
   207a8:	adrp	x0, 53000 <__asan_backtrace_vector_release@@Base+0x4340>
   207ac:	add	x1, x0, #0x570
   207b0:	mov	x0, #0x1000                	// #4096
   207b4:	bl	26a50 <__sanitizer_set_report_fd@@Base+0x7858>
   207b8:	str	x0, [sp, #40]
   207bc:	mov	x2, #0x1000                	// #4096
   207c0:	ldr	x1, [sp, #40]
   207c4:	ldr	x0, [sp, #16]
   207c8:	bl	1f5c0 <__sanitizer_set_report_fd@@Base+0x3c8>
   207cc:	ldr	x0, [sp, #24]
   207d0:	ldr	x3, [x0, #8]
   207d4:	ldr	x0, [sp, #24]
   207d8:	ldrb	w0, [x0, #16]
   207dc:	mov	w2, w0
   207e0:	ldr	x1, [sp, #40]
   207e4:	mov	x0, x3
   207e8:	bl	20fa8 <__sanitizer_set_report_fd@@Base+0x1db0>
   207ec:	strb	w0, [sp, #39]
   207f0:	mov	x1, #0x1000                	// #4096
   207f4:	ldr	x0, [sp, #40]
   207f8:	bl	26af4 <__sanitizer_set_report_fd@@Base+0x78fc>
   207fc:	ldrb	w0, [sp, #39]
   20800:	b	2082c <__sanitizer_set_report_fd@@Base+0x1634>
   20804:	ldr	x0, [sp, #24]
   20808:	ldr	x3, [x0, #8]
   2080c:	ldr	x0, [sp, #24]
   20810:	ldrb	w0, [x0, #16]
   20814:	mov	w2, w0
   20818:	ldr	x1, [sp, #16]
   2081c:	mov	x0, x3
   20820:	bl	20fa8 <__sanitizer_set_report_fd@@Base+0x1db0>
   20824:	and	w0, w0, #0xff
   20828:	nop
   2082c:	ldr	x30, [sp], #48
   20830:	ret
   20834:	str	x30, [sp, #-32]!
   20838:	str	x0, [sp, #24]
   2083c:	str	x1, [sp, #16]
   20840:	ldr	x0, [sp, #24]
   20844:	bl	bfa8 <__lsan_do_recoverable_leak_check@@Base+0x1e1c>
   20848:	adrp	x0, 7b000 <__asan_backtrace_vector_release@@Base+0x2c340>
   2084c:	add	x1, x0, #0xc48
   20850:	ldr	x0, [sp, #24]
   20854:	str	x1, [x0]
   20858:	ldr	x0, [sp, #24]
   2085c:	ldr	x1, [sp, #16]
   20860:	str	x1, [x0, #8]
   20864:	nop
   20868:	ldr	x30, [sp], #32
   2086c:	ret
   20870:	str	x30, [sp, #-32]!
   20874:	str	x0, [sp, #24]
   20878:	str	x1, [sp, #16]
   2087c:	ldr	x0, [sp, #24]
   20880:	bl	bfa8 <__lsan_do_recoverable_leak_check@@Base+0x1e1c>
   20884:	adrp	x0, 7b000 <__asan_backtrace_vector_release@@Base+0x2c340>
   20888:	add	x1, x0, #0xc30
   2088c:	ldr	x0, [sp, #24]
   20890:	str	x1, [x0]
   20894:	ldr	x0, [sp, #24]
   20898:	ldr	x1, [sp, #16]
   2089c:	str	x1, [x0, #8]
   208a0:	nop
   208a4:	ldr	x30, [sp], #32
   208a8:	ret
   208ac:	str	x30, [sp, #-16]!
   208b0:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   208b4:	add	x0, x0, #0xb60
   208b8:	bl	2136c <__sanitizer_set_report_fd@@Base+0x2174>
   208bc:	nop
   208c0:	ldr	x30, [sp], #16
   208c4:	ret
   208c8:	str	x30, [sp, #-64]!
   208cc:	str	x0, [sp, #40]
   208d0:	str	x1, [sp, #32]
   208d4:	str	x2, [sp, #24]
   208d8:	ldr	x1, [sp, #24]
   208dc:	ldr	x0, [sp, #32]
   208e0:	bl	21e9c <__sanitizer_set_report_fd@@Base+0x2ca4>
   208e4:	str	x0, [sp, #56]
   208e8:	ldr	x0, [sp, #56]
   208ec:	add	x0, x0, #0x1
   208f0:	mov	x1, x0
   208f4:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   208f8:	add	x0, x0, #0xb50
   208fc:	bl	16890 <__sancov_default_options@@Base+0x6f4>
   20900:	str	x0, [sp, #48]
   20904:	ldr	x2, [sp, #56]
   20908:	ldr	x1, [sp, #32]
   2090c:	ldr	x0, [sp, #48]
   20910:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
   20914:	ldr	x1, [sp, #48]
   20918:	ldr	x0, [sp, #56]
   2091c:	add	x0, x1, x0
   20920:	strb	wzr, [x0]
   20924:	ldr	x0, [sp, #48]
   20928:	ldr	x30, [sp], #64
   2092c:	ret
   20930:	str	x30, [sp, #-48]!
   20934:	str	x0, [sp, #24]
   20938:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   2093c:	ldr	x0, [x0, #4008]
   20940:	ldr	x0, [x0]
   20944:	mov	x1, x0
   20948:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   2094c:	add	x0, x0, #0x9d8
   20950:	bl	2a350 <OnPrint@@Base+0x3a8>
   20954:	str	wzr, [sp, #44]
   20958:	ldr	x0, [sp, #24]
   2095c:	ldr	w0, [x0, #8]
   20960:	ldr	w1, [sp, #44]
   20964:	cmp	w1, w0
   20968:	b.ge	209d8 <__sanitizer_set_report_fd@@Base+0x17e0>  // b.tcont
   2096c:	ldr	x0, [sp, #24]
   20970:	ldr	x2, [x0]
   20974:	ldrsw	x1, [sp, #44]
   20978:	mov	x0, x1
   2097c:	lsl	x0, x0, #1
   20980:	add	x0, x0, x1
   20984:	lsl	x0, x0, #3
   20988:	add	x0, x2, x0
   2098c:	ldr	x3, [x0]
   20990:	ldr	x0, [sp, #24]
   20994:	ldr	x2, [x0]
   20998:	ldrsw	x1, [sp, #44]
   2099c:	mov	x0, x1
   209a0:	lsl	x0, x0, #1
   209a4:	add	x0, x0, x1
   209a8:	lsl	x0, x0, #3
   209ac:	add	x0, x2, x0
   209b0:	ldr	x0, [x0, #8]
   209b4:	mov	x2, x0
   209b8:	mov	x1, x3
   209bc:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   209c0:	add	x0, x0, #0x9f8
   209c4:	bl	2a350 <OnPrint@@Base+0x3a8>
   209c8:	ldr	w0, [sp, #44]
   209cc:	add	w0, w0, #0x1
   209d0:	str	w0, [sp, #44]
   209d4:	b	20958 <__sanitizer_set_report_fd@@Base+0x1760>
   209d8:	nop
   209dc:	ldr	x30, [sp], #48
   209e0:	ret
   209e4:	str	x30, [sp, #-32]!
   209e8:	str	x0, [sp, #24]
   209ec:	str	x1, [sp, #16]
   209f0:	ldr	x1, [sp, #16]
   209f4:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   209f8:	add	x0, x0, #0xa08
   209fc:	bl	2a350 <OnPrint@@Base+0x3a8>
   20a00:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   20a04:	sub	sp, sp, #0x10
   20a08:	str	x0, [sp, #8]
   20a0c:	strb	w1, [sp, #7]
   20a10:	ldrb	w0, [sp, #7]
   20a14:	cmp	w0, #0x20
   20a18:	b.eq	20a58 <__sanitizer_set_report_fd@@Base+0x1860>  // b.none
   20a1c:	ldrb	w0, [sp, #7]
   20a20:	cmp	w0, #0x2c
   20a24:	b.eq	20a58 <__sanitizer_set_report_fd@@Base+0x1860>  // b.none
   20a28:	ldrb	w0, [sp, #7]
   20a2c:	cmp	w0, #0x3a
   20a30:	b.eq	20a58 <__sanitizer_set_report_fd@@Base+0x1860>  // b.none
   20a34:	ldrb	w0, [sp, #7]
   20a38:	cmp	w0, #0xa
   20a3c:	b.eq	20a58 <__sanitizer_set_report_fd@@Base+0x1860>  // b.none
   20a40:	ldrb	w0, [sp, #7]
   20a44:	cmp	w0, #0x9
   20a48:	b.eq	20a58 <__sanitizer_set_report_fd@@Base+0x1860>  // b.none
   20a4c:	ldrb	w0, [sp, #7]
   20a50:	cmp	w0, #0xd
   20a54:	b.ne	20a60 <__sanitizer_set_report_fd@@Base+0x1868>  // b.any
   20a58:	mov	w0, #0x1                   	// #1
   20a5c:	b	20a64 <__sanitizer_set_report_fd@@Base+0x186c>
   20a60:	mov	w0, #0x0                   	// #0
   20a64:	add	sp, sp, #0x10
   20a68:	ret
   20a6c:	str	x30, [sp, #-32]!
   20a70:	str	x0, [sp, #24]
   20a74:	ldr	x0, [sp, #24]
   20a78:	ldr	x1, [x0, #16]
   20a7c:	ldr	x0, [sp, #24]
   20a80:	ldr	x0, [x0, #24]
   20a84:	add	x0, x1, x0
   20a88:	ldrb	w0, [x0]
   20a8c:	mov	w1, w0
   20a90:	ldr	x0, [sp, #24]
   20a94:	bl	20a04 <__sanitizer_set_report_fd@@Base+0x180c>
   20a98:	and	w0, w0, #0xff
   20a9c:	cmp	w0, #0x0
   20aa0:	b.eq	20abc <__sanitizer_set_report_fd@@Base+0x18c4>  // b.none
   20aa4:	ldr	x0, [sp, #24]
   20aa8:	ldr	x0, [x0, #24]
   20aac:	add	x1, x0, #0x1
   20ab0:	ldr	x0, [sp, #24]
   20ab4:	str	x1, [x0, #24]
   20ab8:	b	20a74 <__sanitizer_set_report_fd@@Base+0x187c>
   20abc:	nop
   20ac0:	ldr	x30, [sp], #32
   20ac4:	ret
   20ac8:	str	x30, [sp, #-80]!
   20acc:	str	x0, [sp, #24]
   20ad0:	ldr	x0, [sp, #24]
   20ad4:	ldr	x0, [x0, #24]
   20ad8:	str	x0, [sp, #64]
   20adc:	ldr	x0, [sp, #24]
   20ae0:	ldr	x1, [x0, #16]
   20ae4:	ldr	x0, [sp, #24]
   20ae8:	ldr	x0, [x0, #24]
   20aec:	add	x0, x1, x0
   20af0:	ldrb	w0, [x0]
   20af4:	cmp	w0, #0x0
   20af8:	b.eq	20b5c <__sanitizer_set_report_fd@@Base+0x1964>  // b.none
   20afc:	ldr	x0, [sp, #24]
   20b00:	ldr	x1, [x0, #16]
   20b04:	ldr	x0, [sp, #24]
   20b08:	ldr	x0, [x0, #24]
   20b0c:	add	x0, x1, x0
   20b10:	ldrb	w0, [x0]
   20b14:	cmp	w0, #0x3d
   20b18:	b.eq	20b5c <__sanitizer_set_report_fd@@Base+0x1964>  // b.none
   20b1c:	ldr	x0, [sp, #24]
   20b20:	ldr	x1, [x0, #16]
   20b24:	ldr	x0, [sp, #24]
   20b28:	ldr	x0, [x0, #24]
   20b2c:	add	x0, x1, x0
   20b30:	ldrb	w0, [x0]
   20b34:	mov	w1, w0
   20b38:	ldr	x0, [sp, #24]
   20b3c:	bl	20a04 <__sanitizer_set_report_fd@@Base+0x180c>
   20b40:	and	w0, w0, #0xff
   20b44:	eor	w0, w0, #0x1
   20b48:	and	w0, w0, #0xff
   20b4c:	cmp	w0, #0x0
   20b50:	b.eq	20b5c <__sanitizer_set_report_fd@@Base+0x1964>  // b.none
   20b54:	mov	w0, #0x1                   	// #1
   20b58:	b	20b60 <__sanitizer_set_report_fd@@Base+0x1968>
   20b5c:	mov	w0, #0x0                   	// #0
   20b60:	cmp	w0, #0x0
   20b64:	b.eq	20b80 <__sanitizer_set_report_fd@@Base+0x1988>  // b.none
   20b68:	ldr	x0, [sp, #24]
   20b6c:	ldr	x0, [x0, #24]
   20b70:	add	x1, x0, #0x1
   20b74:	ldr	x0, [sp, #24]
   20b78:	str	x1, [x0, #24]
   20b7c:	b	20adc <__sanitizer_set_report_fd@@Base+0x18e4>
   20b80:	ldr	x0, [sp, #24]
   20b84:	ldr	x1, [x0, #16]
   20b88:	ldr	x0, [sp, #24]
   20b8c:	ldr	x0, [x0, #24]
   20b90:	add	x0, x1, x0
   20b94:	ldrb	w0, [x0]
   20b98:	cmp	w0, #0x3d
   20b9c:	b.eq	20bb0 <__sanitizer_set_report_fd@@Base+0x19b8>  // b.none
   20ba0:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   20ba4:	add	x1, x0, #0xa18
   20ba8:	ldr	x0, [sp, #24]
   20bac:	bl	209e4 <__sanitizer_set_report_fd@@Base+0x17ec>
   20bb0:	ldr	x0, [sp, #24]
   20bb4:	ldr	x1, [x0, #16]
   20bb8:	ldr	x0, [sp, #64]
   20bbc:	add	x3, x1, x0
   20bc0:	ldr	x0, [sp, #24]
   20bc4:	ldr	x1, [x0, #24]
   20bc8:	ldr	x0, [sp, #64]
   20bcc:	sub	x0, x1, x0
   20bd0:	mov	x2, x0
   20bd4:	mov	x1, x3
   20bd8:	ldr	x0, [sp, #24]
   20bdc:	bl	208c8 <__sanitizer_set_report_fd@@Base+0x16d0>
   20be0:	str	x0, [sp, #56]
   20be4:	ldr	x0, [sp, #24]
   20be8:	ldr	x0, [x0, #24]
   20bec:	add	x1, x0, #0x1
   20bf0:	ldr	x0, [sp, #24]
   20bf4:	str	x1, [x0, #24]
   20bf8:	ldr	x0, [sp, #24]
   20bfc:	ldr	x0, [x0, #24]
   20c00:	str	x0, [sp, #48]
   20c04:	ldr	x0, [sp, #24]
   20c08:	ldr	x1, [x0, #16]
   20c0c:	ldr	x0, [sp, #24]
   20c10:	ldr	x0, [x0, #24]
   20c14:	add	x0, x1, x0
   20c18:	ldrb	w0, [x0]
   20c1c:	cmp	w0, #0x27
   20c20:	b.eq	20c44 <__sanitizer_set_report_fd@@Base+0x1a4c>  // b.none
   20c24:	ldr	x0, [sp, #24]
   20c28:	ldr	x1, [x0, #16]
   20c2c:	ldr	x0, [sp, #24]
   20c30:	ldr	x0, [x0, #24]
   20c34:	add	x0, x1, x0
   20c38:	ldrb	w0, [x0]
   20c3c:	cmp	w0, #0x22
   20c40:	b.ne	20d4c <__sanitizer_set_report_fd@@Base+0x1b54>  // b.any
   20c44:	ldr	x0, [sp, #24]
   20c48:	ldr	x1, [x0, #16]
   20c4c:	ldr	x0, [sp, #24]
   20c50:	ldr	x0, [x0, #24]
   20c54:	add	x3, x0, #0x1
   20c58:	ldr	x2, [sp, #24]
   20c5c:	str	x3, [x2, #24]
   20c60:	add	x0, x1, x0
   20c64:	ldrb	w0, [x0]
   20c68:	strb	w0, [sp, #47]
   20c6c:	ldr	x0, [sp, #24]
   20c70:	ldr	x1, [x0, #16]
   20c74:	ldr	x0, [sp, #24]
   20c78:	ldr	x0, [x0, #24]
   20c7c:	add	x0, x1, x0
   20c80:	ldrb	w0, [x0]
   20c84:	cmp	w0, #0x0
   20c88:	b.eq	20cc8 <__sanitizer_set_report_fd@@Base+0x1ad0>  // b.none
   20c8c:	ldr	x0, [sp, #24]
   20c90:	ldr	x1, [x0, #16]
   20c94:	ldr	x0, [sp, #24]
   20c98:	ldr	x0, [x0, #24]
   20c9c:	add	x0, x1, x0
   20ca0:	ldrb	w0, [x0]
   20ca4:	ldrb	w1, [sp, #47]
   20ca8:	cmp	w1, w0
   20cac:	b.eq	20cc8 <__sanitizer_set_report_fd@@Base+0x1ad0>  // b.none
   20cb0:	ldr	x0, [sp, #24]
   20cb4:	ldr	x0, [x0, #24]
   20cb8:	add	x1, x0, #0x1
   20cbc:	ldr	x0, [sp, #24]
   20cc0:	str	x1, [x0, #24]
   20cc4:	b	20c6c <__sanitizer_set_report_fd@@Base+0x1a74>
   20cc8:	ldr	x0, [sp, #24]
   20ccc:	ldr	x1, [x0, #16]
   20cd0:	ldr	x0, [sp, #24]
   20cd4:	ldr	x0, [x0, #24]
   20cd8:	add	x0, x1, x0
   20cdc:	ldrb	w0, [x0]
   20ce0:	cmp	w0, #0x0
   20ce4:	b.ne	20cf8 <__sanitizer_set_report_fd@@Base+0x1b00>  // b.any
   20ce8:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   20cec:	add	x1, x0, #0xa28
   20cf0:	ldr	x0, [sp, #24]
   20cf4:	bl	209e4 <__sanitizer_set_report_fd@@Base+0x17ec>
   20cf8:	ldr	x0, [sp, #24]
   20cfc:	ldr	x1, [x0, #16]
   20d00:	ldr	x0, [sp, #48]
   20d04:	add	x0, x0, #0x1
   20d08:	add	x3, x1, x0
   20d0c:	ldr	x0, [sp, #24]
   20d10:	ldr	x1, [x0, #24]
   20d14:	ldr	x0, [sp, #48]
   20d18:	sub	x0, x1, x0
   20d1c:	sub	x0, x0, #0x1
   20d20:	mov	x2, x0
   20d24:	mov	x1, x3
   20d28:	ldr	x0, [sp, #24]
   20d2c:	bl	208c8 <__sanitizer_set_report_fd@@Base+0x16d0>
   20d30:	str	x0, [sp, #72]
   20d34:	ldr	x0, [sp, #24]
   20d38:	ldr	x0, [x0, #24]
   20d3c:	add	x1, x0, #0x1
   20d40:	ldr	x0, [sp, #24]
   20d44:	str	x1, [x0, #24]
   20d48:	b	20e80 <__sanitizer_set_report_fd@@Base+0x1c88>
   20d4c:	ldr	x0, [sp, #24]
   20d50:	ldr	x1, [x0, #16]
   20d54:	ldr	x0, [sp, #24]
   20d58:	ldr	x0, [x0, #24]
   20d5c:	add	x0, x1, x0
   20d60:	ldrb	w0, [x0]
   20d64:	cmp	w0, #0x0
   20d68:	b.eq	20dac <__sanitizer_set_report_fd@@Base+0x1bb4>  // b.none
   20d6c:	ldr	x0, [sp, #24]
   20d70:	ldr	x1, [x0, #16]
   20d74:	ldr	x0, [sp, #24]
   20d78:	ldr	x0, [x0, #24]
   20d7c:	add	x0, x1, x0
   20d80:	ldrb	w0, [x0]
   20d84:	mov	w1, w0
   20d88:	ldr	x0, [sp, #24]
   20d8c:	bl	20a04 <__sanitizer_set_report_fd@@Base+0x180c>
   20d90:	and	w0, w0, #0xff
   20d94:	eor	w0, w0, #0x1
   20d98:	and	w0, w0, #0xff
   20d9c:	cmp	w0, #0x0
   20da0:	b.eq	20dac <__sanitizer_set_report_fd@@Base+0x1bb4>  // b.none
   20da4:	mov	w0, #0x1                   	// #1
   20da8:	b	20db0 <__sanitizer_set_report_fd@@Base+0x1bb8>
   20dac:	mov	w0, #0x0                   	// #0
   20db0:	cmp	w0, #0x0
   20db4:	b.eq	20dd0 <__sanitizer_set_report_fd@@Base+0x1bd8>  // b.none
   20db8:	ldr	x0, [sp, #24]
   20dbc:	ldr	x0, [x0, #24]
   20dc0:	add	x1, x0, #0x1
   20dc4:	ldr	x0, [sp, #24]
   20dc8:	str	x1, [x0, #24]
   20dcc:	b	20d4c <__sanitizer_set_report_fd@@Base+0x1b54>
   20dd0:	ldr	x0, [sp, #24]
   20dd4:	ldr	x1, [x0, #16]
   20dd8:	ldr	x0, [sp, #24]
   20ddc:	ldr	x0, [x0, #24]
   20de0:	add	x0, x1, x0
   20de4:	ldrb	w0, [x0]
   20de8:	cmp	w0, #0x0
   20dec:	b.eq	20e30 <__sanitizer_set_report_fd@@Base+0x1c38>  // b.none
   20df0:	ldr	x0, [sp, #24]
   20df4:	ldr	x1, [x0, #16]
   20df8:	ldr	x0, [sp, #24]
   20dfc:	ldr	x0, [x0, #24]
   20e00:	add	x0, x1, x0
   20e04:	ldrb	w0, [x0]
   20e08:	mov	w1, w0
   20e0c:	ldr	x0, [sp, #24]
   20e10:	bl	20a04 <__sanitizer_set_report_fd@@Base+0x180c>
   20e14:	and	w0, w0, #0xff
   20e18:	eor	w0, w0, #0x1
   20e1c:	and	w0, w0, #0xff
   20e20:	cmp	w0, #0x0
   20e24:	b.eq	20e30 <__sanitizer_set_report_fd@@Base+0x1c38>  // b.none
   20e28:	mov	w0, #0x1                   	// #1
   20e2c:	b	20e34 <__sanitizer_set_report_fd@@Base+0x1c3c>
   20e30:	mov	w0, #0x0                   	// #0
   20e34:	cmp	w0, #0x0
   20e38:	b.eq	20e4c <__sanitizer_set_report_fd@@Base+0x1c54>  // b.none
   20e3c:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   20e40:	add	x1, x0, #0xa40
   20e44:	ldr	x0, [sp, #24]
   20e48:	bl	209e4 <__sanitizer_set_report_fd@@Base+0x17ec>
   20e4c:	ldr	x0, [sp, #24]
   20e50:	ldr	x1, [x0, #16]
   20e54:	ldr	x0, [sp, #48]
   20e58:	add	x3, x1, x0
   20e5c:	ldr	x0, [sp, #24]
   20e60:	ldr	x1, [x0, #24]
   20e64:	ldr	x0, [sp, #48]
   20e68:	sub	x0, x1, x0
   20e6c:	mov	x2, x0
   20e70:	mov	x1, x3
   20e74:	ldr	x0, [sp, #24]
   20e78:	bl	208c8 <__sanitizer_set_report_fd@@Base+0x16d0>
   20e7c:	str	x0, [sp, #72]
   20e80:	ldr	x2, [sp, #72]
   20e84:	ldr	x1, [sp, #56]
   20e88:	ldr	x0, [sp, #24]
   20e8c:	bl	21064 <__sanitizer_set_report_fd@@Base+0x1e6c>
   20e90:	strb	w0, [sp, #46]
   20e94:	ldrb	w0, [sp, #46]
   20e98:	eor	w0, w0, #0x1
   20e9c:	and	w0, w0, #0xff
   20ea0:	cmp	w0, #0x0
   20ea4:	b.eq	20eb8 <__sanitizer_set_report_fd@@Base+0x1cc0>  // b.none
   20ea8:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   20eac:	add	x1, x0, #0xa60
   20eb0:	ldr	x0, [sp, #24]
   20eb4:	bl	209e4 <__sanitizer_set_report_fd@@Base+0x17ec>
   20eb8:	nop
   20ebc:	ldr	x30, [sp], #80
   20ec0:	ret
   20ec4:	str	x30, [sp, #-32]!
   20ec8:	str	x0, [sp, #24]
   20ecc:	ldr	x0, [sp, #24]
   20ed0:	bl	20a6c <__sanitizer_set_report_fd@@Base+0x1874>
   20ed4:	ldr	x0, [sp, #24]
   20ed8:	ldr	x1, [x0, #16]
   20edc:	ldr	x0, [sp, #24]
   20ee0:	ldr	x0, [x0, #24]
   20ee4:	add	x0, x1, x0
   20ee8:	ldrb	w0, [x0]
   20eec:	cmp	w0, #0x0
   20ef0:	b.eq	20f00 <__sanitizer_set_report_fd@@Base+0x1d08>  // b.none
   20ef4:	ldr	x0, [sp, #24]
   20ef8:	bl	20ac8 <__sanitizer_set_report_fd@@Base+0x18d0>
   20efc:	b	20ecc <__sanitizer_set_report_fd@@Base+0x1cd4>
   20f00:	nop
   20f04:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   20f08:	ldr	x0, [x0, #4040]
   20f0c:	ldr	w0, [x0, #36]
   20f10:	cmp	w0, #0x0
   20f14:	b.gt	20f28 <__sanitizer_set_report_fd@@Base+0x1d30>
   20f18:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   20f1c:	ldr	x0, [x0, #4040]
   20f20:	mov	w1, #0x1                   	// #1
   20f24:	str	w1, [x0, #36]
   20f28:	nop
   20f2c:	ldr	x30, [sp], #32
   20f30:	ret
   20f34:	str	x30, [sp, #-48]!
   20f38:	str	x0, [sp, #24]
   20f3c:	str	x1, [sp, #16]
   20f40:	ldr	x0, [sp, #16]
   20f44:	cmp	x0, #0x0
   20f48:	b.eq	20f9c <__sanitizer_set_report_fd@@Base+0x1da4>  // b.none
   20f4c:	ldr	x0, [sp, #24]
   20f50:	ldr	x0, [x0, #16]
   20f54:	str	x0, [sp, #40]
   20f58:	ldr	x0, [sp, #24]
   20f5c:	ldr	x0, [x0, #24]
   20f60:	str	x0, [sp, #32]
   20f64:	ldr	x0, [sp, #24]
   20f68:	ldr	x1, [sp, #16]
   20f6c:	str	x1, [x0, #16]
   20f70:	ldr	x0, [sp, #24]
   20f74:	str	xzr, [x0, #24]
   20f78:	ldr	x0, [sp, #24]
   20f7c:	bl	20ec4 <__sanitizer_set_report_fd@@Base+0x1ccc>
   20f80:	ldr	x0, [sp, #24]
   20f84:	ldr	x1, [sp, #40]
   20f88:	str	x1, [x0, #16]
   20f8c:	ldr	x0, [sp, #24]
   20f90:	ldr	x1, [sp, #32]
   20f94:	str	x1, [x0, #24]
   20f98:	b	20fa0 <__sanitizer_set_report_fd@@Base+0x1da8>
   20f9c:	nop
   20fa0:	ldr	x30, [sp], #48
   20fa4:	ret
   20fa8:	str	x30, [sp, #-80]!
   20fac:	str	x0, [sp, #40]
   20fb0:	str	x1, [sp, #32]
   20fb4:	strb	w2, [sp, #31]
   20fb8:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
   20fbc:	mov	x1, x0
   20fc0:	mov	x0, #0x8000                	// #32768
   20fc4:	bl	ae7c <__lsan_do_recoverable_leak_check@@Base+0xcf0>
   20fc8:	mov	x4, x0
   20fcc:	add	x3, sp, #0x3c
   20fd0:	add	x2, sp, #0x30
   20fd4:	add	x1, sp, #0x40
   20fd8:	add	x0, sp, #0x48
   20fdc:	mov	x5, x3
   20fe0:	mov	x3, x2
   20fe4:	mov	x2, x1
   20fe8:	mov	x1, x0
   20fec:	ldr	x0, [sp, #32]
   20ff0:	bl	1ec3c <__sanitizer_cov_pcs_init@@Base+0x3ba0>
   20ff4:	and	w0, w0, #0xff
   20ff8:	eor	w0, w0, #0x1
   20ffc:	and	w0, w0, #0xff
   21000:	cmp	w0, #0x0
   21004:	b.eq	2103c <__sanitizer_set_report_fd@@Base+0x1e44>  // b.none
   21008:	ldrb	w0, [sp, #31]
   2100c:	cmp	w0, #0x0
   21010:	b.eq	2101c <__sanitizer_set_report_fd@@Base+0x1e24>  // b.none
   21014:	mov	w0, #0x1                   	// #1
   21018:	b	2105c <__sanitizer_set_report_fd@@Base+0x1e64>
   2101c:	ldr	w0, [sp, #60]
   21020:	mov	w2, w0
   21024:	ldr	x1, [sp, #32]
   21028:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   2102c:	add	x0, x0, #0xa80
   21030:	bl	2a350 <OnPrint@@Base+0x3a8>
   21034:	mov	w0, #0x0                   	// #0
   21038:	b	2105c <__sanitizer_set_report_fd@@Base+0x1e64>
   2103c:	ldr	x0, [sp, #72]
   21040:	mov	x1, x0
   21044:	ldr	x0, [sp, #40]
   21048:	bl	20f34 <__sanitizer_set_report_fd@@Base+0x1d3c>
   2104c:	ldr	x0, [sp, #72]
   21050:	ldr	x1, [sp, #64]
   21054:	bl	26af4 <__sanitizer_set_report_fd@@Base+0x78fc>
   21058:	mov	w0, #0x1                   	// #1
   2105c:	ldr	x30, [sp], #80
   21060:	ret
   21064:	str	x30, [sp, #-64]!
   21068:	str	x0, [sp, #40]
   2106c:	str	x1, [sp, #32]
   21070:	str	x2, [sp, #24]
   21074:	str	wzr, [sp, #60]
   21078:	ldr	x0, [sp, #40]
   2107c:	ldr	w0, [x0, #8]
   21080:	ldr	w1, [sp, #60]
   21084:	cmp	w1, w0
   21088:	b.ge	21158 <__sanitizer_set_report_fd@@Base+0x1f60>  // b.tcont
   2108c:	ldr	x0, [sp, #40]
   21090:	ldr	x2, [x0]
   21094:	ldrsw	x1, [sp, #60]
   21098:	mov	x0, x1
   2109c:	lsl	x0, x0, #1
   210a0:	add	x0, x0, x1
   210a4:	lsl	x0, x0, #3
   210a8:	add	x0, x2, x0
   210ac:	ldr	x0, [x0]
   210b0:	mov	x1, x0
   210b4:	ldr	x0, [sp, #32]
   210b8:	bl	21950 <__sanitizer_set_report_fd@@Base+0x2758>
   210bc:	cmp	w0, #0x0
   210c0:	cset	w0, eq  // eq = none
   210c4:	and	w0, w0, #0xff
   210c8:	cmp	w0, #0x0
   210cc:	b.eq	21148 <__sanitizer_set_report_fd@@Base+0x1f50>  // b.none
   210d0:	ldr	x0, [sp, #40]
   210d4:	ldr	x2, [x0]
   210d8:	ldrsw	x1, [sp, #60]
   210dc:	mov	x0, x1
   210e0:	lsl	x0, x0, #1
   210e4:	add	x0, x0, x1
   210e8:	lsl	x0, x0, #3
   210ec:	add	x0, x2, x0
   210f0:	ldr	x3, [x0, #16]
   210f4:	ldrsw	x1, [sp, #60]
   210f8:	mov	x0, x1
   210fc:	lsl	x0, x0, #1
   21100:	add	x0, x0, x1
   21104:	lsl	x0, x0, #3
   21108:	ldr	x0, [sp, #40]
   2110c:	ldr	x2, [x0]
   21110:	ldrsw	x1, [sp, #60]
   21114:	mov	x0, x1
   21118:	lsl	x0, x0, #1
   2111c:	add	x0, x0, x1
   21120:	lsl	x0, x0, #3
   21124:	add	x0, x2, x0
   21128:	ldr	x0, [x0, #16]
   2112c:	ldr	x0, [x0]
   21130:	ldr	x2, [x0]
   21134:	ldr	x1, [sp, #24]
   21138:	mov	x0, x3
   2113c:	blr	x2
   21140:	and	w0, w0, #0xff
   21144:	b	2116c <__sanitizer_set_report_fd@@Base+0x1f74>
   21148:	ldr	w0, [sp, #60]
   2114c:	add	w0, w0, #0x1
   21150:	str	w0, [sp, #60]
   21154:	b	21078 <__sanitizer_set_report_fd@@Base+0x1e80>
   21158:	ldr	x1, [sp, #32]
   2115c:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   21160:	add	x0, x0, #0xb60
   21164:	bl	212d8 <__sanitizer_set_report_fd@@Base+0x20e0>
   21168:	mov	w0, #0x1                   	// #1
   2116c:	ldr	x30, [sp], #64
   21170:	ret
   21174:	str	x30, [sp, #-64]!
   21178:	str	x0, [sp, #40]
   2117c:	str	x1, [sp, #32]
   21180:	str	x2, [sp, #24]
   21184:	str	x3, [sp, #16]
   21188:	ldr	x0, [sp, #40]
   2118c:	ldr	w0, [x0, #8]
   21190:	sxtw	x0, w0
   21194:	str	x0, [sp, #56]
   21198:	mov	x0, #0xc8                  	// #200
   2119c:	str	x0, [sp, #48]
   211a0:	ldr	x1, [sp, #56]
   211a4:	ldr	x0, [sp, #48]
   211a8:	cmp	x1, x0
   211ac:	cset	w0, cs  // cs = hs, nlast
   211b0:	and	w0, w0, #0xff
   211b4:	and	x0, x0, #0xff
   211b8:	cmp	x0, #0x0
   211bc:	b.eq	211e0 <__sanitizer_set_report_fd@@Base+0x1fe8>  // b.none
   211c0:	ldr	x4, [sp, #48]
   211c4:	ldr	x3, [sp, #56]
   211c8:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   211cc:	add	x2, x0, #0xab0
   211d0:	mov	w1, #0x9e                  	// #158
   211d4:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   211d8:	add	x0, x0, #0x958
   211dc:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   211e0:	ldr	x0, [sp, #40]
   211e4:	ldr	x2, [x0]
   211e8:	ldr	x0, [sp, #40]
   211ec:	ldr	w0, [x0, #8]
   211f0:	sxtw	x1, w0
   211f4:	mov	x0, x1
   211f8:	lsl	x0, x0, #1
   211fc:	add	x0, x0, x1
   21200:	lsl	x0, x0, #3
   21204:	add	x0, x2, x0
   21208:	ldr	x1, [sp, #32]
   2120c:	str	x1, [x0]
   21210:	ldr	x0, [sp, #40]
   21214:	ldr	x2, [x0]
   21218:	ldr	x0, [sp, #40]
   2121c:	ldr	w0, [x0, #8]
   21220:	sxtw	x1, w0
   21224:	mov	x0, x1
   21228:	lsl	x0, x0, #1
   2122c:	add	x0, x0, x1
   21230:	lsl	x0, x0, #3
   21234:	add	x0, x2, x0
   21238:	ldr	x1, [sp, #16]
   2123c:	str	x1, [x0, #8]
   21240:	ldr	x0, [sp, #40]
   21244:	ldr	x2, [x0]
   21248:	ldr	x0, [sp, #40]
   2124c:	ldr	w0, [x0, #8]
   21250:	sxtw	x1, w0
   21254:	mov	x0, x1
   21258:	lsl	x0, x0, #1
   2125c:	add	x0, x0, x1
   21260:	lsl	x0, x0, #3
   21264:	add	x0, x2, x0
   21268:	ldr	x1, [sp, #24]
   2126c:	str	x1, [x0, #16]
   21270:	ldr	x0, [sp, #40]
   21274:	ldr	w0, [x0, #8]
   21278:	add	w1, w0, #0x1
   2127c:	ldr	x0, [sp, #40]
   21280:	str	w1, [x0, #8]
   21284:	nop
   21288:	ldr	x30, [sp], #64
   2128c:	ret
   21290:	str	x30, [sp, #-32]!
   21294:	str	x0, [sp, #24]
   21298:	ldr	x0, [sp, #24]
   2129c:	str	wzr, [x0, #8]
   212a0:	ldr	x0, [sp, #24]
   212a4:	str	xzr, [x0, #16]
   212a8:	ldr	x0, [sp, #24]
   212ac:	str	xzr, [x0, #24]
   212b0:	mov	x1, #0x12c0                	// #4800
   212b4:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   212b8:	add	x0, x0, #0xb50
   212bc:	bl	16890 <__sancov_default_options@@Base+0x6f4>
   212c0:	mov	x1, x0
   212c4:	ldr	x0, [sp, #24]
   212c8:	str	x1, [x0]
   212cc:	nop
   212d0:	ldr	x30, [sp], #32
   212d4:	ret
   212d8:	str	x30, [sp, #-48]!
   212dc:	str	x0, [sp, #24]
   212e0:	str	x1, [sp, #16]
   212e4:	ldr	x0, [sp, #24]
   212e8:	ldr	w0, [x0, #160]
   212ec:	sxtw	x0, w0
   212f0:	str	x0, [sp, #40]
   212f4:	mov	x0, #0x14                  	// #20
   212f8:	str	x0, [sp, #32]
   212fc:	ldr	x1, [sp, #40]
   21300:	ldr	x0, [sp, #32]
   21304:	cmp	x1, x0
   21308:	cset	w0, cs  // cs = hs, nlast
   2130c:	and	w0, w0, #0xff
   21310:	and	x0, x0, #0xff
   21314:	cmp	x0, #0x0
   21318:	b.eq	2133c <__sanitizer_set_report_fd@@Base+0x2144>  // b.none
   2131c:	ldr	x4, [sp, #32]
   21320:	ldr	x3, [sp, #40]
   21324:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   21328:	add	x2, x0, #0x928
   2132c:	mov	w1, #0x1e                  	// #30
   21330:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   21334:	add	x0, x0, #0x958
   21338:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2133c:	ldr	x0, [sp, #24]
   21340:	ldr	w0, [x0, #160]
   21344:	add	w2, w0, #0x1
   21348:	ldr	x1, [sp, #24]
   2134c:	str	w2, [x1, #160]
   21350:	ldr	x1, [sp, #24]
   21354:	sxtw	x0, w0
   21358:	ldr	x2, [sp, #16]
   2135c:	str	x2, [x1, x0, lsl #3]
   21360:	nop
   21364:	ldr	x30, [sp], #48
   21368:	ret
   2136c:	str	x30, [sp, #-48]!
   21370:	str	x0, [sp, #24]
   21374:	ldr	x0, [sp, #24]
   21378:	ldr	w0, [x0, #160]
   2137c:	cmp	w0, #0x0
   21380:	b.eq	213ec <__sanitizer_set_report_fd@@Base+0x21f4>  // b.none
   21384:	ldr	x0, [sp, #24]
   21388:	ldr	w0, [x0, #160]
   2138c:	mov	w1, w0
   21390:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   21394:	add	x0, x0, #0x9a0
   21398:	bl	2a350 <OnPrint@@Base+0x3a8>
   2139c:	str	wzr, [sp, #44]
   213a0:	ldr	x0, [sp, #24]
   213a4:	ldr	w0, [x0, #160]
   213a8:	ldr	w1, [sp, #44]
   213ac:	cmp	w1, w0
   213b0:	b.ge	213e0 <__sanitizer_set_report_fd@@Base+0x21e8>  // b.tcont
   213b4:	ldr	x0, [sp, #24]
   213b8:	ldrsw	x1, [sp, #44]
   213bc:	ldr	x0, [x0, x1, lsl #3]
   213c0:	mov	x1, x0
   213c4:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   213c8:	add	x0, x0, #0x9d0
   213cc:	bl	2a350 <OnPrint@@Base+0x3a8>
   213d0:	ldr	w0, [sp, #44]
   213d4:	add	w0, w0, #0x1
   213d8:	str	w0, [sp, #44]
   213dc:	b	213a0 <__sanitizer_set_report_fd@@Base+0x21a8>
   213e0:	ldr	x0, [sp, #24]
   213e4:	str	wzr, [x0, #160]
   213e8:	b	213f0 <__sanitizer_set_report_fd@@Base+0x21f8>
   213ec:	nop
   213f0:	ldr	x30, [sp], #48
   213f4:	ret
   213f8:	str	x30, [sp, #-32]!
   213fc:	str	x0, [sp, #24]
   21400:	mov	w2, #0xa                   	// #10
   21404:	mov	x1, #0x0                   	// #0
   21408:	ldr	x0, [sp, #24]
   2140c:	bl	21fa0 <__sanitizer_set_report_fd@@Base+0x2da8>
   21410:	ldr	x30, [sp], #32
   21414:	ret
   21418:	sub	sp, sp, #0x30
   2141c:	str	x0, [sp, #24]
   21420:	str	w1, [sp, #20]
   21424:	str	x2, [sp, #8]
   21428:	ldr	x0, [sp, #24]
   2142c:	str	x0, [sp, #40]
   21430:	str	xzr, [sp, #32]
   21434:	ldr	x1, [sp, #32]
   21438:	ldr	x0, [sp, #8]
   2143c:	cmp	x1, x0
   21440:	b.cs	21480 <__sanitizer_set_report_fd@@Base+0x2288>  // b.hs, b.nlast
   21444:	ldr	x0, [sp, #40]
   21448:	ldrb	w0, [x0]
   2144c:	mov	w1, w0
   21450:	ldr	w0, [sp, #20]
   21454:	cmp	w0, w1
   21458:	b.ne	21464 <__sanitizer_set_report_fd@@Base+0x226c>  // b.any
   2145c:	ldr	x0, [sp, #40]
   21460:	b	21484 <__sanitizer_set_report_fd@@Base+0x228c>
   21464:	ldr	x0, [sp, #32]
   21468:	add	x0, x0, #0x1
   2146c:	str	x0, [sp, #32]
   21470:	ldr	x0, [sp, #40]
   21474:	add	x0, x0, #0x1
   21478:	str	x0, [sp, #40]
   2147c:	b	21434 <__sanitizer_set_report_fd@@Base+0x223c>
   21480:	mov	x0, #0x0                   	// #0
   21484:	add	sp, sp, #0x30
   21488:	ret
   2148c:	sub	sp, sp, #0x40
   21490:	str	x0, [sp, #24]
   21494:	str	w1, [sp, #20]
   21498:	str	x2, [sp, #8]
   2149c:	ldr	x0, [sp, #24]
   214a0:	str	x0, [sp, #56]
   214a4:	str	xzr, [sp, #48]
   214a8:	str	xzr, [sp, #40]
   214ac:	ldr	x1, [sp, #40]
   214b0:	ldr	x0, [sp, #8]
   214b4:	cmp	x1, x0
   214b8:	b.cs	214f8 <__sanitizer_set_report_fd@@Base+0x2300>  // b.hs, b.nlast
   214bc:	ldr	x0, [sp, #56]
   214c0:	ldrb	w0, [x0]
   214c4:	mov	w1, w0
   214c8:	ldr	w0, [sp, #20]
   214cc:	cmp	w0, w1
   214d0:	b.ne	214dc <__sanitizer_set_report_fd@@Base+0x22e4>  // b.any
   214d4:	ldr	x0, [sp, #56]
   214d8:	str	x0, [sp, #48]
   214dc:	ldr	x0, [sp, #40]
   214e0:	add	x0, x0, #0x1
   214e4:	str	x0, [sp, #40]
   214e8:	ldr	x0, [sp, #56]
   214ec:	add	x0, x0, #0x1
   214f0:	str	x0, [sp, #56]
   214f4:	b	214ac <__sanitizer_set_report_fd@@Base+0x22b4>
   214f8:	ldr	x0, [sp, #48]
   214fc:	add	sp, sp, #0x40
   21500:	ret
   21504:	sub	sp, sp, #0x40
   21508:	str	x0, [sp, #24]
   2150c:	str	x1, [sp, #16]
   21510:	str	x2, [sp, #8]
   21514:	ldr	x0, [sp, #24]
   21518:	str	x0, [sp, #56]
   2151c:	ldr	x0, [sp, #16]
   21520:	str	x0, [sp, #48]
   21524:	str	xzr, [sp, #40]
   21528:	ldr	x1, [sp, #40]
   2152c:	ldr	x0, [sp, #8]
   21530:	cmp	x1, x0
   21534:	b.cs	215a0 <__sanitizer_set_report_fd@@Base+0x23a8>  // b.hs, b.nlast
   21538:	ldr	x0, [sp, #56]
   2153c:	ldrb	w1, [x0]
   21540:	ldr	x0, [sp, #48]
   21544:	ldrb	w0, [x0]
   21548:	cmp	w1, w0
   2154c:	b.eq	21578 <__sanitizer_set_report_fd@@Base+0x2380>  // b.none
   21550:	ldr	x0, [sp, #56]
   21554:	ldrb	w1, [x0]
   21558:	ldr	x0, [sp, #48]
   2155c:	ldrb	w0, [x0]
   21560:	cmp	w1, w0
   21564:	b.cs	21570 <__sanitizer_set_report_fd@@Base+0x2378>  // b.hs, b.nlast
   21568:	mov	w0, #0xffffffff            	// #-1
   2156c:	b	215a4 <__sanitizer_set_report_fd@@Base+0x23ac>
   21570:	mov	w0, #0x1                   	// #1
   21574:	b	215a4 <__sanitizer_set_report_fd@@Base+0x23ac>
   21578:	ldr	x0, [sp, #40]
   2157c:	add	x0, x0, #0x1
   21580:	str	x0, [sp, #40]
   21584:	ldr	x0, [sp, #56]
   21588:	add	x0, x0, #0x1
   2158c:	str	x0, [sp, #56]
   21590:	ldr	x0, [sp, #48]
   21594:	add	x0, x0, #0x1
   21598:	str	x0, [sp, #48]
   2159c:	b	21528 <__sanitizer_set_report_fd@@Base+0x2330>
   215a0:	mov	w0, #0x0                   	// #0
   215a4:	add	sp, sp, #0x40
   215a8:	ret
   215ac:	sub	sp, sp, #0x40
   215b0:	str	x0, [sp, #24]
   215b4:	str	x1, [sp, #16]
   215b8:	str	x2, [sp, #8]
   215bc:	ldr	x0, [sp, #24]
   215c0:	str	x0, [sp, #48]
   215c4:	ldr	x0, [sp, #16]
   215c8:	str	x0, [sp, #40]
   215cc:	str	xzr, [sp, #56]
   215d0:	ldr	x1, [sp, #56]
   215d4:	ldr	x0, [sp, #8]
   215d8:	cmp	x1, x0
   215dc:	b.cs	21610 <__sanitizer_set_report_fd@@Base+0x2418>  // b.hs, b.nlast
   215e0:	ldr	x1, [sp, #40]
   215e4:	ldr	x0, [sp, #56]
   215e8:	add	x1, x1, x0
   215ec:	ldr	x2, [sp, #48]
   215f0:	ldr	x0, [sp, #56]
   215f4:	add	x0, x2, x0
   215f8:	ldrb	w1, [x1]
   215fc:	strb	w1, [x0]
   21600:	ldr	x0, [sp, #56]
   21604:	add	x0, x0, #0x1
   21608:	str	x0, [sp, #56]
   2160c:	b	215d0 <__sanitizer_set_report_fd@@Base+0x23d8>
   21610:	ldr	x0, [sp, #24]
   21614:	add	sp, sp, #0x40
   21618:	ret
   2161c:	str	x30, [sp, #-96]!
   21620:	str	x0, [sp, #40]
   21624:	str	x1, [sp, #32]
   21628:	str	x2, [sp, #24]
   2162c:	ldr	x0, [sp, #40]
   21630:	str	x0, [sp, #80]
   21634:	ldr	x0, [sp, #32]
   21638:	str	x0, [sp, #72]
   2163c:	ldr	x0, [sp, #24]
   21640:	str	x0, [sp, #64]
   21644:	ldr	x0, [sp, #64]
   21648:	str	x0, [sp, #56]
   2164c:	str	xzr, [sp, #48]
   21650:	ldr	x1, [sp, #56]
   21654:	ldr	x0, [sp, #48]
   21658:	cmp	x1, x0
   2165c:	cset	w0, cc  // cc = lo, ul, last
   21660:	and	w0, w0, #0xff
   21664:	and	x0, x0, #0xff
   21668:	cmp	x0, #0x0
   2166c:	b.eq	21690 <__sanitizer_set_report_fd@@Base+0x2498>  // b.none
   21670:	ldr	x4, [sp, #48]
   21674:	ldr	x3, [sp, #56]
   21678:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   2167c:	add	x2, x0, #0xba0
   21680:	mov	w1, #0x3c                  	// #60
   21684:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   21688:	add	x0, x0, #0xbb8
   2168c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   21690:	ldr	x1, [sp, #80]
   21694:	ldr	x0, [sp, #72]
   21698:	cmp	x1, x0
   2169c:	b.cs	216e4 <__sanitizer_set_report_fd@@Base+0x24ec>  // b.hs, b.nlast
   216a0:	str	xzr, [sp, #88]
   216a4:	ldr	x1, [sp, #88]
   216a8:	ldr	x0, [sp, #64]
   216ac:	cmp	x1, x0
   216b0:	b.ge	21748 <__sanitizer_set_report_fd@@Base+0x2550>  // b.tcont
   216b4:	ldr	x0, [sp, #88]
   216b8:	ldr	x1, [sp, #72]
   216bc:	add	x1, x1, x0
   216c0:	ldr	x0, [sp, #88]
   216c4:	ldr	x2, [sp, #80]
   216c8:	add	x0, x2, x0
   216cc:	ldrb	w1, [x1]
   216d0:	strb	w1, [x0]
   216d4:	ldr	x0, [sp, #88]
   216d8:	add	x0, x0, #0x1
   216dc:	str	x0, [sp, #88]
   216e0:	b	216a4 <__sanitizer_set_report_fd@@Base+0x24ac>
   216e4:	ldr	x1, [sp, #80]
   216e8:	ldr	x0, [sp, #72]
   216ec:	cmp	x1, x0
   216f0:	b.ls	21748 <__sanitizer_set_report_fd@@Base+0x2550>  // b.plast
   216f4:	ldr	x0, [sp, #64]
   216f8:	cmp	x0, #0x0
   216fc:	b.le	21748 <__sanitizer_set_report_fd@@Base+0x2550>
   21700:	ldr	x0, [sp, #64]
   21704:	sub	x0, x0, #0x1
   21708:	str	x0, [sp, #88]
   2170c:	ldr	x0, [sp, #88]
   21710:	cmp	x0, #0x0
   21714:	b.lt	21748 <__sanitizer_set_report_fd@@Base+0x2550>  // b.tstop
   21718:	ldr	x0, [sp, #88]
   2171c:	ldr	x1, [sp, #72]
   21720:	add	x1, x1, x0
   21724:	ldr	x0, [sp, #88]
   21728:	ldr	x2, [sp, #80]
   2172c:	add	x0, x2, x0
   21730:	ldrb	w1, [x1]
   21734:	strb	w1, [x0]
   21738:	ldr	x0, [sp, #88]
   2173c:	sub	x0, x0, #0x1
   21740:	str	x0, [sp, #88]
   21744:	b	2170c <__sanitizer_set_report_fd@@Base+0x2514>
   21748:	ldr	x0, [sp, #40]
   2174c:	ldr	x30, [sp], #96
   21750:	ret
   21754:	sub	sp, sp, #0x50
   21758:	str	x0, [sp, #24]
   2175c:	str	w1, [sp, #20]
   21760:	str	x2, [sp, #8]
   21764:	ldr	x0, [sp, #24]
   21768:	and	x0, x0, #0xf
   2176c:	cmp	x0, #0x0
   21770:	b.ne	21828 <__sanitizer_set_report_fd@@Base+0x2630>  // b.any
   21774:	ldr	x0, [sp, #8]
   21778:	and	x0, x0, #0xf
   2177c:	cmp	x0, #0x0
   21780:	b.ne	21828 <__sanitizer_set_report_fd@@Base+0x2630>  // b.any
   21784:	ldr	x0, [sp, #24]
   21788:	str	x0, [sp, #72]
   2178c:	ldr	x0, [sp, #8]
   21790:	and	x0, x0, #0xfffffffffffffff8
   21794:	ldr	x1, [sp, #72]
   21798:	add	x0, x1, x0
   2179c:	str	x0, [sp, #48]
   217a0:	ldrsw	x0, [sp, #20]
   217a4:	str	x0, [sp, #40]
   217a8:	ldr	x0, [sp, #40]
   217ac:	lsl	x0, x0, #8
   217b0:	ldr	x1, [sp, #40]
   217b4:	orr	x0, x1, x0
   217b8:	str	x0, [sp, #40]
   217bc:	ldr	x0, [sp, #40]
   217c0:	lsl	x0, x0, #16
   217c4:	ldr	x1, [sp, #40]
   217c8:	orr	x0, x1, x0
   217cc:	str	x0, [sp, #40]
   217d0:	ldr	x0, [sp, #40]
   217d4:	lsl	x0, x0, #32
   217d8:	ldr	x1, [sp, #40]
   217dc:	orr	x0, x1, x0
   217e0:	str	x0, [sp, #40]
   217e4:	ldr	x1, [sp, #72]
   217e8:	ldr	x0, [sp, #48]
   217ec:	cmp	x1, x0
   217f0:	b.cs	21820 <__sanitizer_set_report_fd@@Base+0x2628>  // b.hs, b.nlast
   217f4:	ldr	x0, [sp, #72]
   217f8:	add	x0, x0, #0x8
   217fc:	ldr	x1, [sp, #40]
   21800:	str	x1, [x0]
   21804:	ldr	x1, [x0]
   21808:	ldr	x0, [sp, #72]
   2180c:	str	x1, [x0]
   21810:	ldr	x0, [sp, #72]
   21814:	add	x0, x0, #0x10
   21818:	str	x0, [sp, #72]
   2181c:	b	217e4 <__sanitizer_set_report_fd@@Base+0x25ec>
   21820:	ldr	x0, [sp, #24]
   21824:	b	21874 <__sanitizer_set_report_fd@@Base+0x267c>
   21828:	ldr	x0, [sp, #24]
   2182c:	str	x0, [sp, #64]
   21830:	str	xzr, [sp, #56]
   21834:	ldr	x1, [sp, #56]
   21838:	ldr	x0, [sp, #8]
   2183c:	cmp	x1, x0
   21840:	b.cs	21870 <__sanitizer_set_report_fd@@Base+0x2678>  // b.hs, b.nlast
   21844:	ldr	w0, [sp, #20]
   21848:	and	w1, w0, #0xff
   2184c:	ldr	x0, [sp, #64]
   21850:	strb	w1, [x0]
   21854:	ldr	x0, [sp, #56]
   21858:	add	x0, x0, #0x1
   2185c:	str	x0, [sp, #56]
   21860:	ldr	x0, [sp, #64]
   21864:	add	x0, x0, #0x1
   21868:	str	x0, [sp, #64]
   2186c:	b	21834 <__sanitizer_set_report_fd@@Base+0x263c>
   21870:	ldr	x0, [sp, #24]
   21874:	add	sp, sp, #0x50
   21878:	ret
   2187c:	str	x30, [sp, #-48]!
   21880:	str	x0, [sp, #24]
   21884:	str	x1, [sp, #16]
   21888:	str	xzr, [sp, #40]
   2188c:	ldr	x1, [sp, #24]
   21890:	ldr	x0, [sp, #40]
   21894:	add	x0, x1, x0
   21898:	ldrb	w0, [x0]
   2189c:	cmp	w0, #0x0
   218a0:	b.eq	218ec <__sanitizer_set_report_fd@@Base+0x26f4>  // b.none
   218a4:	ldr	x1, [sp, #24]
   218a8:	ldr	x0, [sp, #40]
   218ac:	add	x0, x1, x0
   218b0:	ldrb	w0, [x0]
   218b4:	mov	w1, w0
   218b8:	ldr	x0, [sp, #16]
   218bc:	bl	21a8c <__sanitizer_set_report_fd@@Base+0x2894>
   218c0:	cmp	x0, #0x0
   218c4:	cset	w0, ne  // ne = any
   218c8:	and	w0, w0, #0xff
   218cc:	cmp	w0, #0x0
   218d0:	b.eq	218dc <__sanitizer_set_report_fd@@Base+0x26e4>  // b.none
   218d4:	ldr	x0, [sp, #40]
   218d8:	b	218f0 <__sanitizer_set_report_fd@@Base+0x26f8>
   218dc:	ldr	x0, [sp, #40]
   218e0:	add	x0, x0, #0x1
   218e4:	str	x0, [sp, #40]
   218e8:	b	2188c <__sanitizer_set_report_fd@@Base+0x2694>
   218ec:	ldr	x0, [sp, #40]
   218f0:	ldr	x30, [sp], #48
   218f4:	ret
   218f8:	str	x30, [sp, #-48]!
   218fc:	str	x0, [sp, #24]
   21900:	ldr	x0, [sp, #24]
   21904:	bl	21bac <__sanitizer_set_report_fd@@Base+0x29b4>
   21908:	str	x0, [sp, #40]
   2190c:	ldr	x0, [sp, #40]
   21910:	add	x0, x0, #0x1
   21914:	mov	x2, #0x0                   	// #0
   21918:	mov	x1, #0x0                   	// #0
   2191c:	bl	16598 <__sancov_default_options@@Base+0x3fc>
   21920:	str	x0, [sp, #32]
   21924:	ldr	x2, [sp, #40]
   21928:	ldr	x1, [sp, #24]
   2192c:	ldr	x0, [sp, #32]
   21930:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
   21934:	ldr	x1, [sp, #32]
   21938:	ldr	x0, [sp, #40]
   2193c:	add	x0, x1, x0
   21940:	strb	wzr, [x0]
   21944:	ldr	x0, [sp, #32]
   21948:	ldr	x30, [sp], #48
   2194c:	ret
   21950:	sub	sp, sp, #0x20
   21954:	str	x0, [sp, #8]
   21958:	str	x1, [sp]
   2195c:	ldr	x0, [sp, #8]
   21960:	ldrb	w0, [x0]
   21964:	str	w0, [sp, #28]
   21968:	ldr	x0, [sp]
   2196c:	ldrb	w0, [x0]
   21970:	str	w0, [sp, #24]
   21974:	ldr	w1, [sp, #28]
   21978:	ldr	w0, [sp, #24]
   2197c:	cmp	w1, w0
   21980:	b.eq	219a4 <__sanitizer_set_report_fd@@Base+0x27ac>  // b.none
   21984:	ldr	w1, [sp, #28]
   21988:	ldr	w0, [sp, #24]
   2198c:	cmp	w1, w0
   21990:	b.cs	2199c <__sanitizer_set_report_fd@@Base+0x27a4>  // b.hs, b.nlast
   21994:	mov	w0, #0xffffffff            	// #-1
   21998:	b	219d4 <__sanitizer_set_report_fd@@Base+0x27dc>
   2199c:	mov	w0, #0x1                   	// #1
   219a0:	b	219d4 <__sanitizer_set_report_fd@@Base+0x27dc>
   219a4:	ldr	w0, [sp, #28]
   219a8:	cmp	w0, #0x0
   219ac:	b.eq	219cc <__sanitizer_set_report_fd@@Base+0x27d4>  // b.none
   219b0:	ldr	x0, [sp, #8]
   219b4:	add	x0, x0, #0x1
   219b8:	str	x0, [sp, #8]
   219bc:	ldr	x0, [sp]
   219c0:	add	x0, x0, #0x1
   219c4:	str	x0, [sp]
   219c8:	b	2195c <__sanitizer_set_report_fd@@Base+0x2764>
   219cc:	nop
   219d0:	mov	w0, #0x0                   	// #0
   219d4:	add	sp, sp, #0x20
   219d8:	ret
   219dc:	sub	sp, sp, #0x30
   219e0:	str	x0, [sp, #24]
   219e4:	str	x1, [sp, #16]
   219e8:	str	x2, [sp, #8]
   219ec:	str	xzr, [sp, #40]
   219f0:	ldr	x1, [sp, #40]
   219f4:	ldr	x0, [sp, #8]
   219f8:	cmp	x1, x0
   219fc:	b.cs	21a80 <__sanitizer_set_report_fd@@Base+0x2888>  // b.hs, b.nlast
   21a00:	ldr	x0, [sp, #24]
   21a04:	ldrb	w0, [x0]
   21a08:	str	w0, [sp, #36]
   21a0c:	ldr	x0, [sp, #16]
   21a10:	ldrb	w0, [x0]
   21a14:	str	w0, [sp, #32]
   21a18:	ldr	w1, [sp, #36]
   21a1c:	ldr	w0, [sp, #32]
   21a20:	cmp	w1, w0
   21a24:	b.eq	21a48 <__sanitizer_set_report_fd@@Base+0x2850>  // b.none
   21a28:	ldr	w1, [sp, #36]
   21a2c:	ldr	w0, [sp, #32]
   21a30:	cmp	w1, w0
   21a34:	b.cs	21a40 <__sanitizer_set_report_fd@@Base+0x2848>  // b.hs, b.nlast
   21a38:	mov	w0, #0xffffffff            	// #-1
   21a3c:	b	21a84 <__sanitizer_set_report_fd@@Base+0x288c>
   21a40:	mov	w0, #0x1                   	// #1
   21a44:	b	21a84 <__sanitizer_set_report_fd@@Base+0x288c>
   21a48:	ldr	w0, [sp, #36]
   21a4c:	cmp	w0, #0x0
   21a50:	b.eq	21a7c <__sanitizer_set_report_fd@@Base+0x2884>  // b.none
   21a54:	ldr	x0, [sp, #24]
   21a58:	add	x0, x0, #0x1
   21a5c:	str	x0, [sp, #24]
   21a60:	ldr	x0, [sp, #16]
   21a64:	add	x0, x0, #0x1
   21a68:	str	x0, [sp, #16]
   21a6c:	ldr	x0, [sp, #40]
   21a70:	add	x0, x0, #0x1
   21a74:	str	x0, [sp, #40]
   21a78:	b	219f0 <__sanitizer_set_report_fd@@Base+0x27f8>
   21a7c:	nop
   21a80:	mov	w0, #0x0                   	// #0
   21a84:	add	sp, sp, #0x30
   21a88:	ret
   21a8c:	sub	sp, sp, #0x10
   21a90:	str	x0, [sp, #8]
   21a94:	str	w1, [sp, #4]
   21a98:	ldr	x0, [sp, #8]
   21a9c:	ldrb	w1, [x0]
   21aa0:	ldr	w0, [sp, #4]
   21aa4:	and	w0, w0, #0xff
   21aa8:	cmp	w1, w0
   21aac:	b.ne	21ab8 <__sanitizer_set_report_fd@@Base+0x28c0>  // b.any
   21ab0:	ldr	x0, [sp, #8]
   21ab4:	b	21ae0 <__sanitizer_set_report_fd@@Base+0x28e8>
   21ab8:	ldr	x0, [sp, #8]
   21abc:	ldrb	w0, [x0]
   21ac0:	cmp	w0, #0x0
   21ac4:	b.ne	21ad0 <__sanitizer_set_report_fd@@Base+0x28d8>  // b.any
   21ac8:	mov	x0, #0x0                   	// #0
   21acc:	b	21ae0 <__sanitizer_set_report_fd@@Base+0x28e8>
   21ad0:	ldr	x0, [sp, #8]
   21ad4:	add	x0, x0, #0x1
   21ad8:	str	x0, [sp, #8]
   21adc:	b	21a98 <__sanitizer_set_report_fd@@Base+0x28a0>
   21ae0:	add	sp, sp, #0x10
   21ae4:	ret
   21ae8:	str	x30, [sp, #-48]!
   21aec:	str	x0, [sp, #24]
   21af0:	str	w1, [sp, #20]
   21af4:	ldr	w1, [sp, #20]
   21af8:	ldr	x0, [sp, #24]
   21afc:	bl	21a8c <__sanitizer_set_report_fd@@Base+0x2894>
   21b00:	str	x0, [sp, #40]
   21b04:	ldr	x0, [sp, #40]
   21b08:	cmp	x0, #0x0
   21b0c:	b.ne	21b28 <__sanitizer_set_report_fd@@Base+0x2930>  // b.any
   21b10:	ldr	x0, [sp, #24]
   21b14:	bl	21bac <__sanitizer_set_report_fd@@Base+0x29b4>
   21b18:	mov	x1, x0
   21b1c:	ldr	x0, [sp, #24]
   21b20:	add	x0, x0, x1
   21b24:	str	x0, [sp, #40]
   21b28:	ldr	x0, [sp, #40]
   21b2c:	ldr	x30, [sp], #48
   21b30:	ret
   21b34:	sub	sp, sp, #0x20
   21b38:	str	x0, [sp, #8]
   21b3c:	str	w1, [sp, #4]
   21b40:	str	xzr, [sp, #24]
   21b44:	str	xzr, [sp, #16]
   21b48:	ldr	x1, [sp, #8]
   21b4c:	ldr	x0, [sp, #16]
   21b50:	add	x0, x1, x0
   21b54:	ldrb	w0, [x0]
   21b58:	cmp	w0, #0x0
   21b5c:	b.eq	21ba0 <__sanitizer_set_report_fd@@Base+0x29a8>  // b.none
   21b60:	ldr	x1, [sp, #8]
   21b64:	ldr	x0, [sp, #16]
   21b68:	add	x0, x1, x0
   21b6c:	ldrb	w0, [x0]
   21b70:	mov	w1, w0
   21b74:	ldr	w0, [sp, #4]
   21b78:	cmp	w0, w1
   21b7c:	b.ne	21b90 <__sanitizer_set_report_fd@@Base+0x2998>  // b.any
   21b80:	ldr	x1, [sp, #8]
   21b84:	ldr	x0, [sp, #16]
   21b88:	add	x0, x1, x0
   21b8c:	str	x0, [sp, #24]
   21b90:	ldr	x0, [sp, #16]
   21b94:	add	x0, x0, #0x1
   21b98:	str	x0, [sp, #16]
   21b9c:	b	21b48 <__sanitizer_set_report_fd@@Base+0x2950>
   21ba0:	ldr	x0, [sp, #24]
   21ba4:	add	sp, sp, #0x20
   21ba8:	ret
   21bac:	sub	sp, sp, #0x20
   21bb0:	str	x0, [sp, #8]
   21bb4:	str	xzr, [sp, #24]
   21bb8:	ldr	x1, [sp, #8]
   21bbc:	ldr	x0, [sp, #24]
   21bc0:	add	x0, x1, x0
   21bc4:	ldrb	w0, [x0]
   21bc8:	cmp	w0, #0x0
   21bcc:	b.eq	21be0 <__sanitizer_set_report_fd@@Base+0x29e8>  // b.none
   21bd0:	ldr	x0, [sp, #24]
   21bd4:	add	x0, x0, #0x1
   21bd8:	str	x0, [sp, #24]
   21bdc:	b	21bb8 <__sanitizer_set_report_fd@@Base+0x29c0>
   21be0:	ldr	x0, [sp, #24]
   21be4:	add	sp, sp, #0x20
   21be8:	ret
   21bec:	str	x30, [sp, #-64]!
   21bf0:	str	x0, [sp, #40]
   21bf4:	str	x1, [sp, #32]
   21bf8:	str	x2, [sp, #24]
   21bfc:	ldr	x0, [sp, #32]
   21c00:	bl	21bac <__sanitizer_set_report_fd@@Base+0x29b4>
   21c04:	str	x0, [sp, #56]
   21c08:	ldr	x1, [sp, #24]
   21c0c:	ldr	x0, [sp, #40]
   21c10:	bl	21e9c <__sanitizer_set_report_fd@@Base+0x2ca4>
   21c14:	str	x0, [sp, #48]
   21c18:	ldr	x1, [sp, #48]
   21c1c:	ldr	x0, [sp, #24]
   21c20:	cmp	x1, x0
   21c24:	b.ne	21c38 <__sanitizer_set_report_fd@@Base+0x2a40>  // b.any
   21c28:	ldr	x1, [sp, #24]
   21c2c:	ldr	x0, [sp, #56]
   21c30:	add	x0, x1, x0
   21c34:	b	21cc4 <__sanitizer_set_report_fd@@Base+0x2acc>
   21c38:	ldr	x1, [sp, #24]
   21c3c:	ldr	x0, [sp, #48]
   21c40:	sub	x0, x1, x0
   21c44:	ldr	x1, [sp, #56]
   21c48:	cmp	x1, x0
   21c4c:	b.cs	21c78 <__sanitizer_set_report_fd@@Base+0x2a80>  // b.hs, b.nlast
   21c50:	ldr	x1, [sp, #40]
   21c54:	ldr	x0, [sp, #48]
   21c58:	add	x3, x1, x0
   21c5c:	ldr	x0, [sp, #56]
   21c60:	add	x0, x0, #0x1
   21c64:	mov	x2, x0
   21c68:	ldr	x1, [sp, #32]
   21c6c:	mov	x0, x3
   21c70:	bl	2161c <__sanitizer_set_report_fd@@Base+0x2424>
   21c74:	b	21cb8 <__sanitizer_set_report_fd@@Base+0x2ac0>
   21c78:	ldr	x1, [sp, #40]
   21c7c:	ldr	x0, [sp, #48]
   21c80:	add	x3, x1, x0
   21c84:	ldr	x1, [sp, #24]
   21c88:	ldr	x0, [sp, #48]
   21c8c:	sub	x0, x1, x0
   21c90:	sub	x0, x0, #0x1
   21c94:	mov	x2, x0
   21c98:	ldr	x1, [sp, #32]
   21c9c:	mov	x0, x3
   21ca0:	bl	2161c <__sanitizer_set_report_fd@@Base+0x2424>
   21ca4:	ldr	x0, [sp, #24]
   21ca8:	sub	x0, x0, #0x1
   21cac:	ldr	x1, [sp, #40]
   21cb0:	add	x0, x1, x0
   21cb4:	strb	wzr, [x0]
   21cb8:	ldr	x1, [sp, #48]
   21cbc:	ldr	x0, [sp, #56]
   21cc0:	add	x0, x1, x0
   21cc4:	ldr	x30, [sp], #64
   21cc8:	ret
   21ccc:	str	x30, [sp, #-64]!
   21cd0:	str	x0, [sp, #40]
   21cd4:	str	x1, [sp, #32]
   21cd8:	str	x2, [sp, #24]
   21cdc:	ldr	x0, [sp, #40]
   21ce0:	bl	21bac <__sanitizer_set_report_fd@@Base+0x29b4>
   21ce4:	str	x0, [sp, #48]
   21ce8:	str	xzr, [sp, #56]
   21cec:	ldr	x1, [sp, #56]
   21cf0:	ldr	x0, [sp, #24]
   21cf4:	cmp	x1, x0
   21cf8:	b.cs	21d4c <__sanitizer_set_report_fd@@Base+0x2b54>  // b.hs, b.nlast
   21cfc:	ldr	x1, [sp, #32]
   21d00:	ldr	x0, [sp, #56]
   21d04:	add	x0, x1, x0
   21d08:	ldrb	w0, [x0]
   21d0c:	cmp	w0, #0x0
   21d10:	b.eq	21d4c <__sanitizer_set_report_fd@@Base+0x2b54>  // b.none
   21d14:	ldr	x1, [sp, #32]
   21d18:	ldr	x0, [sp, #56]
   21d1c:	add	x1, x1, x0
   21d20:	ldr	x2, [sp, #48]
   21d24:	ldr	x0, [sp, #56]
   21d28:	add	x0, x2, x0
   21d2c:	ldr	x2, [sp, #40]
   21d30:	add	x0, x2, x0
   21d34:	ldrb	w1, [x1]
   21d38:	strb	w1, [x0]
   21d3c:	ldr	x0, [sp, #56]
   21d40:	add	x0, x0, #0x1
   21d44:	str	x0, [sp, #56]
   21d48:	b	21cec <__sanitizer_set_report_fd@@Base+0x2af4>
   21d4c:	ldr	x1, [sp, #48]
   21d50:	ldr	x0, [sp, #56]
   21d54:	add	x0, x1, x0
   21d58:	ldr	x1, [sp, #40]
   21d5c:	add	x0, x1, x0
   21d60:	strb	wzr, [x0]
   21d64:	ldr	x0, [sp, #40]
   21d68:	ldr	x30, [sp], #64
   21d6c:	ret
   21d70:	str	x30, [sp, #-64]!
   21d74:	str	x0, [sp, #40]
   21d78:	str	x1, [sp, #32]
   21d7c:	str	x2, [sp, #24]
   21d80:	ldr	x0, [sp, #32]
   21d84:	bl	21bac <__sanitizer_set_report_fd@@Base+0x29b4>
   21d88:	str	x0, [sp, #56]
   21d8c:	ldr	x1, [sp, #56]
   21d90:	ldr	x0, [sp, #24]
   21d94:	cmp	x1, x0
   21d98:	b.cs	21db8 <__sanitizer_set_report_fd@@Base+0x2bc0>  // b.hs, b.nlast
   21d9c:	ldr	x0, [sp, #56]
   21da0:	add	x0, x0, #0x1
   21da4:	mov	x2, x0
   21da8:	ldr	x1, [sp, #32]
   21dac:	ldr	x0, [sp, #40]
   21db0:	bl	2161c <__sanitizer_set_report_fd@@Base+0x2424>
   21db4:	b	21df0 <__sanitizer_set_report_fd@@Base+0x2bf8>
   21db8:	ldr	x0, [sp, #24]
   21dbc:	cmp	x0, #0x0
   21dc0:	b.eq	21df0 <__sanitizer_set_report_fd@@Base+0x2bf8>  // b.none
   21dc4:	ldr	x0, [sp, #24]
   21dc8:	sub	x0, x0, #0x1
   21dcc:	mov	x2, x0
   21dd0:	ldr	x1, [sp, #32]
   21dd4:	ldr	x0, [sp, #40]
   21dd8:	bl	2161c <__sanitizer_set_report_fd@@Base+0x2424>
   21ddc:	ldr	x0, [sp, #24]
   21de0:	sub	x0, x0, #0x1
   21de4:	ldr	x1, [sp, #40]
   21de8:	add	x0, x1, x0
   21dec:	strb	wzr, [x0]
   21df0:	ldr	x0, [sp, #56]
   21df4:	ldr	x30, [sp], #64
   21df8:	ret
   21dfc:	str	x30, [sp, #-64]!
   21e00:	str	x0, [sp, #40]
   21e04:	str	x1, [sp, #32]
   21e08:	str	x2, [sp, #24]
   21e0c:	str	xzr, [sp, #56]
   21e10:	ldr	x1, [sp, #56]
   21e14:	ldr	x0, [sp, #24]
   21e18:	cmp	x1, x0
   21e1c:	b.cs	21e68 <__sanitizer_set_report_fd@@Base+0x2c70>  // b.hs, b.nlast
   21e20:	ldr	x1, [sp, #32]
   21e24:	ldr	x0, [sp, #56]
   21e28:	add	x0, x1, x0
   21e2c:	ldrb	w0, [x0]
   21e30:	cmp	w0, #0x0
   21e34:	b.eq	21e68 <__sanitizer_set_report_fd@@Base+0x2c70>  // b.none
   21e38:	ldr	x1, [sp, #32]
   21e3c:	ldr	x0, [sp, #56]
   21e40:	add	x1, x1, x0
   21e44:	ldr	x2, [sp, #40]
   21e48:	ldr	x0, [sp, #56]
   21e4c:	add	x0, x2, x0
   21e50:	ldrb	w1, [x1]
   21e54:	strb	w1, [x0]
   21e58:	ldr	x0, [sp, #56]
   21e5c:	add	x0, x0, #0x1
   21e60:	str	x0, [sp, #56]
   21e64:	b	21e10 <__sanitizer_set_report_fd@@Base+0x2c18>
   21e68:	ldr	x1, [sp, #40]
   21e6c:	ldr	x0, [sp, #56]
   21e70:	add	x3, x1, x0
   21e74:	ldr	x1, [sp, #24]
   21e78:	ldr	x0, [sp, #56]
   21e7c:	sub	x0, x1, x0
   21e80:	mov	x2, x0
   21e84:	mov	w1, #0x0                   	// #0
   21e88:	mov	x0, x3
   21e8c:	bl	21754 <__sanitizer_set_report_fd@@Base+0x255c>
   21e90:	ldr	x0, [sp, #40]
   21e94:	ldr	x30, [sp], #64
   21e98:	ret
   21e9c:	sub	sp, sp, #0x20
   21ea0:	str	x0, [sp, #8]
   21ea4:	str	x1, [sp]
   21ea8:	str	xzr, [sp, #24]
   21eac:	ldr	x1, [sp, #24]
   21eb0:	ldr	x0, [sp]
   21eb4:	cmp	x1, x0
   21eb8:	b.cs	21ee4 <__sanitizer_set_report_fd@@Base+0x2cec>  // b.hs, b.nlast
   21ebc:	ldr	x1, [sp, #8]
   21ec0:	ldr	x0, [sp, #24]
   21ec4:	add	x0, x1, x0
   21ec8:	ldrb	w0, [x0]
   21ecc:	cmp	w0, #0x0
   21ed0:	b.eq	21ee4 <__sanitizer_set_report_fd@@Base+0x2cec>  // b.none
   21ed4:	ldr	x0, [sp, #24]
   21ed8:	add	x0, x0, #0x1
   21edc:	str	x0, [sp, #24]
   21ee0:	b	21eac <__sanitizer_set_report_fd@@Base+0x2cb4>
   21ee4:	ldr	x0, [sp, #24]
   21ee8:	add	sp, sp, #0x20
   21eec:	ret
   21ef0:	str	x30, [sp, #-64]!
   21ef4:	str	x0, [sp, #24]
   21ef8:	str	x1, [sp, #16]
   21efc:	ldr	x0, [sp, #24]
   21f00:	bl	21bac <__sanitizer_set_report_fd@@Base+0x29b4>
   21f04:	str	x0, [sp, #48]
   21f08:	ldr	x0, [sp, #16]
   21f0c:	bl	21bac <__sanitizer_set_report_fd@@Base+0x29b4>
   21f10:	str	x0, [sp, #40]
   21f14:	ldr	x1, [sp, #48]
   21f18:	ldr	x0, [sp, #40]
   21f1c:	cmp	x1, x0
   21f20:	b.cs	21f2c <__sanitizer_set_report_fd@@Base+0x2d34>  // b.hs, b.nlast
   21f24:	mov	x0, #0x0                   	// #0
   21f28:	b	21f98 <__sanitizer_set_report_fd@@Base+0x2da0>
   21f2c:	str	xzr, [sp, #56]
   21f30:	ldr	x1, [sp, #48]
   21f34:	ldr	x0, [sp, #40]
   21f38:	sub	x0, x1, x0
   21f3c:	ldr	x1, [sp, #56]
   21f40:	cmp	x1, x0
   21f44:	b.hi	21f94 <__sanitizer_set_report_fd@@Base+0x2d9c>  // b.pmore
   21f48:	ldr	x1, [sp, #24]
   21f4c:	ldr	x0, [sp, #56]
   21f50:	add	x0, x1, x0
   21f54:	ldr	x2, [sp, #40]
   21f58:	ldr	x1, [sp, #16]
   21f5c:	bl	21504 <__sanitizer_set_report_fd@@Base+0x230c>
   21f60:	cmp	w0, #0x0
   21f64:	cset	w0, eq  // eq = none
   21f68:	and	w0, w0, #0xff
   21f6c:	cmp	w0, #0x0
   21f70:	b.eq	21f84 <__sanitizer_set_report_fd@@Base+0x2d8c>  // b.none
   21f74:	ldr	x1, [sp, #24]
   21f78:	ldr	x0, [sp, #56]
   21f7c:	add	x0, x1, x0
   21f80:	b	21f98 <__sanitizer_set_report_fd@@Base+0x2da0>
   21f84:	ldr	x0, [sp, #56]
   21f88:	add	x0, x0, #0x1
   21f8c:	str	x0, [sp, #56]
   21f90:	b	21f30 <__sanitizer_set_report_fd@@Base+0x2d38>
   21f94:	mov	x0, #0x0                   	// #0
   21f98:	ldr	x30, [sp], #64
   21f9c:	ret
   21fa0:	str	x30, [sp, #-112]!
   21fa4:	str	x0, [sp, #40]
   21fa8:	str	x1, [sp, #32]
   21fac:	str	w2, [sp, #28]
   21fb0:	ldrsw	x0, [sp, #28]
   21fb4:	str	x0, [sp, #80]
   21fb8:	mov	x0, #0xa                   	// #10
   21fbc:	str	x0, [sp, #72]
   21fc0:	ldr	x1, [sp, #80]
   21fc4:	ldr	x0, [sp, #72]
   21fc8:	cmp	x1, x0
   21fcc:	cset	w0, ne  // ne = any
   21fd0:	and	w0, w0, #0xff
   21fd4:	and	x0, x0, #0xff
   21fd8:	cmp	x0, #0x0
   21fdc:	b.eq	22000 <__sanitizer_set_report_fd@@Base+0x2e08>  // b.none
   21fe0:	ldr	x4, [sp, #72]
   21fe4:	ldr	x3, [sp, #80]
   21fe8:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   21fec:	add	x2, x0, #0xbf8
   21ff0:	mov	w1, #0xe5                  	// #229
   21ff4:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   21ff8:	add	x0, x0, #0xbb8
   21ffc:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   22000:	ldr	x0, [sp, #40]
   22004:	ldrb	w0, [x0]
   22008:	bl	2233c <__sanitizer_set_report_fd@@Base+0x3144>
   2200c:	and	w0, w0, #0xff
   22010:	cmp	w0, #0x0
   22014:	b.eq	22028 <__sanitizer_set_report_fd@@Base+0x2e30>  // b.none
   22018:	ldr	x0, [sp, #40]
   2201c:	add	x0, x0, #0x1
   22020:	str	x0, [sp, #40]
   22024:	b	22000 <__sanitizer_set_report_fd@@Base+0x2e08>
   22028:	mov	w0, #0x1                   	// #1
   2202c:	str	w0, [sp, #108]
   22030:	str	xzr, [sp, #96]
   22034:	strb	wzr, [sp, #95]
   22038:	ldr	x0, [sp, #40]
   2203c:	str	x0, [sp, #64]
   22040:	ldr	x0, [sp, #40]
   22044:	ldrb	w0, [x0]
   22048:	cmp	w0, #0x2b
   2204c:	b.ne	22068 <__sanitizer_set_report_fd@@Base+0x2e70>  // b.any
   22050:	mov	w0, #0x1                   	// #1
   22054:	str	w0, [sp, #108]
   22058:	ldr	x0, [sp, #40]
   2205c:	add	x0, x0, #0x1
   22060:	str	x0, [sp, #40]
   22064:	b	2208c <__sanitizer_set_report_fd@@Base+0x2e94>
   22068:	ldr	x0, [sp, #40]
   2206c:	ldrb	w0, [x0]
   22070:	cmp	w0, #0x2d
   22074:	b.ne	2208c <__sanitizer_set_report_fd@@Base+0x2e94>  // b.any
   22078:	mov	w0, #0xffffffff            	// #-1
   2207c:	str	w0, [sp, #108]
   22080:	ldr	x0, [sp, #40]
   22084:	add	x0, x0, #0x1
   22088:	str	x0, [sp, #40]
   2208c:	ldr	x0, [sp, #40]
   22090:	ldrb	w0, [x0]
   22094:	bl	223a0 <__sanitizer_set_report_fd@@Base+0x31a8>
   22098:	and	w0, w0, #0xff
   2209c:	cmp	w0, #0x0
   220a0:	b.eq	2212c <__sanitizer_set_report_fd@@Base+0x2f34>  // b.none
   220a4:	ldr	x1, [sp, #96]
   220a8:	mov	x0, #0x9999999999999999    	// #-7378697629483820647
   220ac:	movk	x0, #0x1999, lsl #48
   220b0:	cmp	x1, x0
   220b4:	b.hi	220d0 <__sanitizer_set_report_fd@@Base+0x2ed8>  // b.pmore
   220b8:	ldr	x1, [sp, #96]
   220bc:	mov	x0, x1
   220c0:	lsl	x0, x0, #2
   220c4:	add	x0, x0, x1
   220c8:	lsl	x0, x0, #1
   220cc:	b	220d4 <__sanitizer_set_report_fd@@Base+0x2edc>
   220d0:	mov	x0, #0xffffffffffffffff    	// #-1
   220d4:	str	x0, [sp, #96]
   220d8:	ldr	x0, [sp, #40]
   220dc:	ldrb	w0, [x0]
   220e0:	sub	w0, w0, #0x30
   220e4:	str	w0, [sp, #60]
   220e8:	ldrsw	x0, [sp, #60]
   220ec:	mvn	x0, x0
   220f0:	ldr	x1, [sp, #96]
   220f4:	cmp	x1, x0
   220f8:	b.hi	2210c <__sanitizer_set_report_fd@@Base+0x2f14>  // b.pmore
   220fc:	ldrsw	x1, [sp, #60]
   22100:	ldr	x0, [sp, #96]
   22104:	add	x0, x1, x0
   22108:	b	22110 <__sanitizer_set_report_fd@@Base+0x2f18>
   2210c:	mov	x0, #0xffffffffffffffff    	// #-1
   22110:	str	x0, [sp, #96]
   22114:	mov	w0, #0x1                   	// #1
   22118:	strb	w0, [sp, #95]
   2211c:	ldr	x0, [sp, #40]
   22120:	add	x0, x0, #0x1
   22124:	str	x0, [sp, #40]
   22128:	b	2208c <__sanitizer_set_report_fd@@Base+0x2e94>
   2212c:	ldr	x0, [sp, #32]
   22130:	cmp	x0, #0x0
   22134:	b.eq	22158 <__sanitizer_set_report_fd@@Base+0x2f60>  // b.none
   22138:	ldrb	w0, [sp, #95]
   2213c:	cmp	w0, #0x0
   22140:	b.eq	2214c <__sanitizer_set_report_fd@@Base+0x2f54>  // b.none
   22144:	ldr	x0, [sp, #40]
   22148:	b	22150 <__sanitizer_set_report_fd@@Base+0x2f58>
   2214c:	ldr	x0, [sp, #64]
   22150:	ldr	x1, [sp, #32]
   22154:	str	x0, [x1]
   22158:	ldr	w0, [sp, #108]
   2215c:	cmp	w0, #0x0
   22160:	b.le	22174 <__sanitizer_set_report_fd@@Base+0x2f7c>
   22164:	ldr	x1, [sp, #96]
   22168:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   2216c:	bl	223d4 <__sanitizer_set_report_fd@@Base+0x31dc>
   22170:	b	22194 <__sanitizer_set_report_fd@@Base+0x2f9c>
   22174:	ldr	x0, [sp, #96]
   22178:	cmp	x0, #0x0
   2217c:	b.lt	2218c <__sanitizer_set_report_fd@@Base+0x2f94>  // b.tstop
   22180:	ldr	x0, [sp, #96]
   22184:	neg	x0, x0
   22188:	b	22190 <__sanitizer_set_report_fd@@Base+0x2f98>
   2218c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   22190:	nop
   22194:	ldr	x30, [sp], #112
   22198:	ret
   2219c:	str	x30, [sp, #-96]!
   221a0:	str	x0, [sp, #24]
   221a4:	str	x1, [sp, #16]
   221a8:	ldr	x0, [sp, #16]
   221ac:	str	x0, [sp, #56]
   221b0:	mov	x0, #0x10000000000         	// #1099511627776
   221b4:	str	x0, [sp, #48]
   221b8:	ldr	x1, [sp, #56]
   221bc:	ldr	x0, [sp, #48]
   221c0:	cmp	x1, x0
   221c4:	cset	w0, hi  // hi = pmore
   221c8:	and	w0, w0, #0xff
   221cc:	and	x0, x0, #0xff
   221d0:	cmp	x0, #0x0
   221d4:	b.eq	221f8 <__sanitizer_set_report_fd@@Base+0x3000>  // b.none
   221d8:	ldr	x4, [sp, #48]
   221dc:	ldr	x3, [sp, #56]
   221e0:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   221e4:	add	x2, x0, #0xc10
   221e8:	mov	w1, #0x104                 	// #260
   221ec:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   221f0:	add	x0, x0, #0xbb8
   221f4:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   221f8:	ldr	x1, [sp, #24]
   221fc:	ldr	x0, [sp, #16]
   22200:	add	x0, x1, x0
   22204:	str	x0, [sp, #40]
   22208:	ldr	x0, [sp, #24]
   2220c:	mov	x1, #0x8                   	// #8
   22210:	bl	a518 <__lsan_do_recoverable_leak_check@@Base+0x38c>
   22214:	str	x0, [sp, #88]
   22218:	ldr	x0, [sp, #40]
   2221c:	mov	x1, #0x8                   	// #8
   22220:	bl	22318 <__sanitizer_set_report_fd@@Base+0x3120>
   22224:	str	x0, [sp, #32]
   22228:	str	xzr, [sp, #80]
   2222c:	ldr	x0, [sp, #24]
   22230:	str	x0, [sp, #72]
   22234:	ldr	x1, [sp, #72]
   22238:	ldr	x0, [sp, #88]
   2223c:	cmp	x1, x0
   22240:	b.cs	2227c <__sanitizer_set_report_fd@@Base+0x3084>  // b.hs, b.nlast
   22244:	ldr	x1, [sp, #72]
   22248:	ldr	x0, [sp, #40]
   2224c:	cmp	x1, x0
   22250:	b.cs	2227c <__sanitizer_set_report_fd@@Base+0x3084>  // b.hs, b.nlast
   22254:	ldr	x0, [sp, #72]
   22258:	ldrb	w0, [x0]
   2225c:	and	x0, x0, #0xff
   22260:	ldr	x1, [sp, #80]
   22264:	orr	x0, x1, x0
   22268:	str	x0, [sp, #80]
   2226c:	ldr	x0, [sp, #72]
   22270:	add	x0, x0, #0x1
   22274:	str	x0, [sp, #72]
   22278:	b	22234 <__sanitizer_set_report_fd@@Base+0x303c>
   2227c:	ldr	x1, [sp, #88]
   22280:	ldr	x0, [sp, #32]
   22284:	cmp	x1, x0
   22288:	b.cs	222b0 <__sanitizer_set_report_fd@@Base+0x30b8>  // b.hs, b.nlast
   2228c:	ldr	x0, [sp, #88]
   22290:	ldr	x0, [x0]
   22294:	ldr	x1, [sp, #80]
   22298:	orr	x0, x1, x0
   2229c:	str	x0, [sp, #80]
   222a0:	ldr	x0, [sp, #88]
   222a4:	add	x0, x0, #0x8
   222a8:	str	x0, [sp, #88]
   222ac:	b	2227c <__sanitizer_set_report_fd@@Base+0x3084>
   222b0:	ldr	x1, [sp, #32]
   222b4:	ldr	x0, [sp, #24]
   222b8:	cmp	x1, x0
   222bc:	b.cc	22300 <__sanitizer_set_report_fd@@Base+0x3108>  // b.lo, b.ul, b.last
   222c0:	ldr	x0, [sp, #32]
   222c4:	str	x0, [sp, #64]
   222c8:	ldr	x1, [sp, #64]
   222cc:	ldr	x0, [sp, #40]
   222d0:	cmp	x1, x0
   222d4:	b.cs	22300 <__sanitizer_set_report_fd@@Base+0x3108>  // b.hs, b.nlast
   222d8:	ldr	x0, [sp, #64]
   222dc:	ldrb	w0, [x0]
   222e0:	and	x0, x0, #0xff
   222e4:	ldr	x1, [sp, #80]
   222e8:	orr	x0, x1, x0
   222ec:	str	x0, [sp, #80]
   222f0:	ldr	x0, [sp, #64]
   222f4:	add	x0, x0, #0x1
   222f8:	str	x0, [sp, #64]
   222fc:	b	222c8 <__sanitizer_set_report_fd@@Base+0x30d0>
   22300:	ldr	x0, [sp, #80]
   22304:	cmp	x0, #0x0
   22308:	cset	w0, eq  // eq = none
   2230c:	and	w0, w0, #0xff
   22310:	ldr	x30, [sp], #96
   22314:	ret
   22318:	sub	sp, sp, #0x10
   2231c:	str	x0, [sp, #8]
   22320:	str	x1, [sp]
   22324:	ldr	x0, [sp]
   22328:	neg	x1, x0
   2232c:	ldr	x0, [sp, #8]
   22330:	and	x0, x1, x0
   22334:	add	sp, sp, #0x10
   22338:	ret
   2233c:	sub	sp, sp, #0x10
   22340:	str	w0, [sp, #12]
   22344:	ldr	w0, [sp, #12]
   22348:	cmp	w0, #0x20
   2234c:	b.eq	2238c <__sanitizer_set_report_fd@@Base+0x3194>  // b.none
   22350:	ldr	w0, [sp, #12]
   22354:	cmp	w0, #0xa
   22358:	b.eq	2238c <__sanitizer_set_report_fd@@Base+0x3194>  // b.none
   2235c:	ldr	w0, [sp, #12]
   22360:	cmp	w0, #0x9
   22364:	b.eq	2238c <__sanitizer_set_report_fd@@Base+0x3194>  // b.none
   22368:	ldr	w0, [sp, #12]
   2236c:	cmp	w0, #0xc
   22370:	b.eq	2238c <__sanitizer_set_report_fd@@Base+0x3194>  // b.none
   22374:	ldr	w0, [sp, #12]
   22378:	cmp	w0, #0xd
   2237c:	b.eq	2238c <__sanitizer_set_report_fd@@Base+0x3194>  // b.none
   22380:	ldr	w0, [sp, #12]
   22384:	cmp	w0, #0xb
   22388:	b.ne	22394 <__sanitizer_set_report_fd@@Base+0x319c>  // b.any
   2238c:	mov	w0, #0x1                   	// #1
   22390:	b	22398 <__sanitizer_set_report_fd@@Base+0x31a0>
   22394:	mov	w0, #0x0                   	// #0
   22398:	add	sp, sp, #0x10
   2239c:	ret
   223a0:	sub	sp, sp, #0x10
   223a4:	str	w0, [sp, #12]
   223a8:	ldr	w0, [sp, #12]
   223ac:	cmp	w0, #0x2f
   223b0:	b.le	223c8 <__sanitizer_set_report_fd@@Base+0x31d0>
   223b4:	ldr	w0, [sp, #12]
   223b8:	cmp	w0, #0x39
   223bc:	b.gt	223c8 <__sanitizer_set_report_fd@@Base+0x31d0>
   223c0:	mov	w0, #0x1                   	// #1
   223c4:	b	223cc <__sanitizer_set_report_fd@@Base+0x31d4>
   223c8:	mov	w0, #0x0                   	// #0
   223cc:	add	sp, sp, #0x10
   223d0:	ret
   223d4:	sub	sp, sp, #0x10
   223d8:	str	x0, [sp, #8]
   223dc:	str	x1, [sp]
   223e0:	ldr	x1, [sp, #8]
   223e4:	ldr	x0, [sp]
   223e8:	cmp	x1, x0
   223ec:	b.cs	223f8 <__sanitizer_set_report_fd@@Base+0x3200>  // b.hs, b.nlast
   223f0:	ldr	x0, [sp, #8]
   223f4:	b	223fc <__sanitizer_set_report_fd@@Base+0x3204>
   223f8:	ldr	x0, [sp]
   223fc:	add	sp, sp, #0x10
   22400:	ret
   22404:	str	x30, [sp, #-32]!
   22408:	str	x0, [sp, #24]
   2240c:	str	w1, [sp, #20]
   22410:	ldr	x1, [sp, #24]
   22414:	mov	x0, #0x4810                	// #18448
   22418:	add	x0, x1, x0
   2241c:	bl	239c8 <__sanitizer_set_report_fd@@Base+0x47d0>
   22420:	nop
   22424:	ldr	x30, [sp], #32
   22428:	ret
   2242c:	str	x30, [sp, #-48]!
   22430:	str	x0, [sp, #24]
   22434:	str	x1, [sp, #16]
   22438:	ldr	x1, [sp, #24]
   2243c:	mov	x0, #0x4810                	// #18448
   22440:	add	x1, x1, x0
   22444:	add	x0, sp, #0x20
   22448:	bl	b658 <__lsan_do_recoverable_leak_check@@Base+0x14cc>
   2244c:	ldr	x0, [sp, #24]
   22450:	ldr	x0, [x0, #18536]
   22454:	cmp	x0, #0x3ff
   22458:	b.ls	22480 <__sanitizer_set_report_fd@@Base+0x3288>  // b.plast
   2245c:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   22460:	ldr	x0, [x0, #4008]
   22464:	ldr	x0, [x0]
   22468:	mov	x2, #0x400                 	// #1024
   2246c:	mov	x1, x0
   22470:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   22474:	add	x0, x0, #0xcf0
   22478:	bl	2a3fc <OnPrint@@Base+0x454>
   2247c:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   22480:	ldr	x0, [sp, #24]
   22484:	ldr	x0, [x0, #18536]
   22488:	add	x2, x0, #0x1
   2248c:	ldr	x1, [sp, #24]
   22490:	str	x2, [x1, #18536]
   22494:	lsl	x1, x0, #5
   22498:	mov	x0, #0x4870                	// #18544
   2249c:	add	x0, x1, x0
   224a0:	ldr	x1, [sp, #24]
   224a4:	add	x0, x1, x0
   224a8:	str	x0, [sp, #40]
   224ac:	ldr	x0, [sp, #16]
   224b0:	bl	218f8 <__sanitizer_set_report_fd@@Base+0x2700>
   224b4:	mov	x1, x0
   224b8:	ldr	x0, [sp, #40]
   224bc:	str	x1, [x0]
   224c0:	ldr	x0, [sp, #40]
   224c4:	str	xzr, [x0, #8]
   224c8:	ldr	x0, [sp, #40]
   224cc:	str	xzr, [x0, #16]
   224d0:	ldr	x0, [sp, #40]
   224d4:	strb	wzr, [x0, #24]
   224d8:	add	x0, sp, #0x20
   224dc:	bl	b688 <__lsan_do_recoverable_leak_check@@Base+0x14fc>
   224e0:	nop
   224e4:	ldr	x30, [sp], #48
   224e8:	ret
   224ec:	stp	x19, x20, [sp, #-336]!
   224f0:	stp	x21, x30, [sp, #16]
   224f4:	str	x0, [sp, #40]
   224f8:	str	x1, [sp, #32]
   224fc:	ldr	x1, [sp, #40]
   22500:	mov	x0, #0x4810                	// #18448
   22504:	add	x1, x1, x0
   22508:	add	x0, sp, #0x90
   2250c:	bl	b658 <__lsan_do_recoverable_leak_check@@Base+0x14cc>
   22510:	add	x0, sp, #0x70
   22514:	mov	x1, #0x1000                	// #4096
   22518:	bl	a584 <__lsan_do_recoverable_leak_check@@Base+0x3f8>
   2251c:	ldr	x0, [sp, #32]
   22520:	cmp	x0, #0x0
   22524:	b.eq	22578 <__sanitizer_set_report_fd@@Base+0x3380>  // b.none
   22528:	add	x0, sp, #0x70
   2252c:	bl	bc50 <__lsan_do_recoverable_leak_check@@Base+0x1ac4>
   22530:	mov	x19, x0
   22534:	add	x0, sp, #0x70
   22538:	bl	1f250 <__sanitizer_set_report_fd@@Base+0x58>
   2253c:	sub	x0, x0, #0x1
   22540:	mov	x2, x0
   22544:	mov	x1, x19
   22548:	ldr	x0, [sp, #32]
   2254c:	bl	232a0 <__sanitizer_set_report_fd@@Base+0x40a8>
   22550:	cmp	x0, #0x0
   22554:	b.eq	22578 <__sanitizer_set_report_fd@@Base+0x3380>  // b.none
   22558:	add	x0, sp, #0x70
   2255c:	mov	x1, #0x0                   	// #0
   22560:	bl	ac0c <__lsan_do_recoverable_leak_check@@Base+0xa80>
   22564:	ldrb	w0, [x0]
   22568:	cmp	w0, #0x0
   2256c:	b.eq	22578 <__sanitizer_set_report_fd@@Base+0x3380>  // b.none
   22570:	mov	w0, #0x1                   	// #1
   22574:	b	2257c <__sanitizer_set_report_fd@@Base+0x3384>
   22578:	mov	w0, #0x0                   	// #0
   2257c:	cmp	w0, #0x0
   22580:	b.eq	22638 <__sanitizer_set_report_fd@@Base+0x3440>  // b.none
   22584:	str	xzr, [sp, #328]
   22588:	ldr	x0, [sp, #40]
   2258c:	ldr	x0, [x0, #18536]
   22590:	ldr	x1, [sp, #328]
   22594:	cmp	x1, x0
   22598:	b.cs	22638 <__sanitizer_set_report_fd@@Base+0x3440>  // b.hs, b.nlast
   2259c:	ldr	x0, [sp, #328]
   225a0:	lsl	x1, x0, #5
   225a4:	mov	x0, #0x4870                	// #18544
   225a8:	add	x0, x1, x0
   225ac:	ldr	x1, [sp, #40]
   225b0:	add	x0, x1, x0
   225b4:	str	x0, [sp, #288]
   225b8:	ldr	x0, [sp, #288]
   225bc:	ldrb	w0, [x0, #24]
   225c0:	eor	w0, w0, #0x1
   225c4:	and	w0, w0, #0xff
   225c8:	cmp	w0, #0x0
   225cc:	b.eq	22604 <__sanitizer_set_report_fd@@Base+0x340c>  // b.none
   225d0:	ldr	x0, [sp, #288]
   225d4:	ldr	x0, [x0, #16]
   225d8:	cmp	x0, #0x0
   225dc:	b.ne	22604 <__sanitizer_set_report_fd@@Base+0x340c>  // b.any
   225e0:	ldr	x0, [sp, #288]
   225e4:	ldr	x0, [x0]
   225e8:	ldr	x1, [sp, #32]
   225ec:	bl	19950 <__sancov_default_options@@Base+0x37b4>
   225f0:	and	w0, w0, #0xff
   225f4:	cmp	w0, #0x0
   225f8:	b.eq	22604 <__sanitizer_set_report_fd@@Base+0x340c>  // b.none
   225fc:	mov	w0, #0x1                   	// #1
   22600:	b	22608 <__sanitizer_set_report_fd@@Base+0x3410>
   22604:	mov	w0, #0x0                   	// #0
   22608:	cmp	w0, #0x0
   2260c:	b.eq	22628 <__sanitizer_set_report_fd@@Base+0x3430>  // b.none
   22610:	add	x0, sp, #0x70
   22614:	bl	bc50 <__lsan_do_recoverable_leak_check@@Base+0x1ac4>
   22618:	bl	218f8 <__sanitizer_set_report_fd@@Base+0x2700>
   2261c:	mov	x1, x0
   22620:	ldr	x0, [sp, #288]
   22624:	str	x1, [x0, #16]
   22628:	ldr	x0, [sp, #328]
   2262c:	add	x0, x0, #0x1
   22630:	str	x0, [sp, #328]
   22634:	b	22588 <__sanitizer_set_report_fd@@Base+0x3390>
   22638:	add	x0, sp, #0x50
   2263c:	bl	d4f0 <__lsan_do_recoverable_leak_check@@Base+0x3364>
   22640:	add	x0, sp, #0x50
   22644:	bl	26078 <__sanitizer_set_report_fd@@Base+0x6e80>
   22648:	str	xzr, [sp, #320]
   2264c:	ldr	x0, [sp, #40]
   22650:	ldr	x0, [x0, #18536]
   22654:	ldr	x1, [sp, #320]
   22658:	cmp	x1, x0
   2265c:	b.cs	229a4 <__sanitizer_set_report_fd@@Base+0x37ac>  // b.hs, b.nlast
   22660:	ldr	x0, [sp, #320]
   22664:	lsl	x1, x0, #5
   22668:	mov	x0, #0x4870                	// #18544
   2266c:	add	x0, x1, x0
   22670:	ldr	x1, [sp, #40]
   22674:	add	x0, x1, x0
   22678:	str	x0, [sp, #280]
   2267c:	strb	wzr, [sp, #319]
   22680:	add	x0, sp, #0x50
   22684:	str	x0, [sp, #272]
   22688:	ldr	x0, [sp, #272]
   2268c:	bl	d528 <__lsan_do_recoverable_leak_check@@Base+0x339c>
   22690:	str	x0, [sp, #304]
   22694:	ldr	x0, [sp, #272]
   22698:	bl	d540 <__lsan_do_recoverable_leak_check@@Base+0x33b4>
   2269c:	str	x0, [sp, #264]
   226a0:	ldr	x1, [sp, #304]
   226a4:	ldr	x0, [sp, #264]
   226a8:	cmp	x1, x0
   226ac:	b.eq	22940 <__sanitizer_set_report_fd@@Base+0x3748>  // b.none
   226b0:	ldr	x0, [sp, #304]
   226b4:	str	x0, [sp, #256]
   226b8:	ldr	x0, [sp, #256]
   226bc:	bl	1a000 <__sanitizer_install_malloc_and_free_hooks@@Base+0xb4>
   226c0:	str	x0, [sp, #248]
   226c4:	ldr	x0, [sp, #248]
   226c8:	bl	1a1a0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x254>
   226cc:	str	x0, [sp, #72]
   226d0:	ldr	x0, [sp, #248]
   226d4:	bl	1a1c4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x278>
   226d8:	str	x0, [sp, #64]
   226dc:	add	x0, sp, #0x48
   226e0:	ldr	x1, [sp, #64]
   226e4:	bl	1a1e4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x298>
   226e8:	and	w0, w0, #0xff
   226ec:	cmp	w0, #0x0
   226f0:	b.eq	22930 <__sanitizer_set_report_fd@@Base+0x3738>  // b.none
   226f4:	add	x0, sp, #0x48
   226f8:	bl	1a238 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2ec>
   226fc:	str	x0, [sp, #240]
   22700:	ldr	x0, [sp, #240]
   22704:	ldrb	w0, [x0, #24]
   22708:	eor	w0, w0, #0x1
   2270c:	and	w0, w0, #0xff
   22710:	cmp	w0, #0x0
   22714:	b.ne	22910 <__sanitizer_set_report_fd@@Base+0x3718>  // b.any
   22718:	ldr	x0, [sp, #280]
   2271c:	ldr	x19, [x0]
   22720:	ldr	x0, [sp, #256]
   22724:	bl	22c48 <__sanitizer_set_report_fd@@Base+0x3a50>
   22728:	mov	x1, x0
   2272c:	mov	x0, x19
   22730:	bl	19950 <__sancov_default_options@@Base+0x37b4>
   22734:	and	w0, w0, #0xff
   22738:	eor	w0, w0, #0x1
   2273c:	and	w0, w0, #0xff
   22740:	cmp	w0, #0x0
   22744:	b.eq	22784 <__sanitizer_set_report_fd@@Base+0x358c>  // b.none
   22748:	ldr	x0, [sp, #280]
   2274c:	ldr	x0, [x0, #16]
   22750:	cmp	x0, #0x0
   22754:	b.eq	2277c <__sanitizer_set_report_fd@@Base+0x3584>  // b.none
   22758:	ldr	x0, [sp, #280]
   2275c:	ldr	x19, [x0, #16]
   22760:	ldr	x0, [sp, #256]
   22764:	bl	22c48 <__sanitizer_set_report_fd@@Base+0x3a50>
   22768:	mov	x1, x0
   2276c:	mov	x0, x19
   22770:	bl	21950 <__sanitizer_set_report_fd@@Base+0x2758>
   22774:	cmp	w0, #0x0
   22778:	b.eq	22784 <__sanitizer_set_report_fd@@Base+0x358c>  // b.none
   2277c:	mov	w0, #0x1                   	// #1
   22780:	b	22788 <__sanitizer_set_report_fd@@Base+0x3590>
   22784:	mov	w0, #0x0                   	// #0
   22788:	cmp	w0, #0x0
   2278c:	b.ne	22918 <__sanitizer_set_report_fd@@Base+0x3720>  // b.any
   22790:	ldrb	w0, [sp, #319]
   22794:	cmp	w0, #0x0
   22798:	b.eq	227e0 <__sanitizer_set_report_fd@@Base+0x35e8>  // b.none
   2279c:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   227a0:	ldr	x0, [x0, #4008]
   227a4:	ldr	x19, [x0]
   227a8:	ldr	x0, [sp, #280]
   227ac:	ldr	x20, [x0]
   227b0:	ldr	x0, [sp, #280]
   227b4:	ldr	x21, [x0, #8]
   227b8:	ldr	x0, [sp, #256]
   227bc:	bl	22c48 <__sanitizer_set_report_fd@@Base+0x3a50>
   227c0:	mov	x4, x0
   227c4:	mov	x3, x21
   227c8:	mov	x2, x20
   227cc:	mov	x1, x19
   227d0:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   227d4:	add	x0, x0, #0xd20
   227d8:	bl	2a3fc <OnPrint@@Base+0x454>
   227dc:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   227e0:	mov	w0, #0x1                   	// #1
   227e4:	strb	w0, [sp, #319]
   227e8:	ldr	x0, [sp, #280]
   227ec:	ldrb	w0, [x0, #24]
   227f0:	cmp	w0, #0x0
   227f4:	b.ne	22920 <__sanitizer_set_report_fd@@Base+0x3728>  // b.any
   227f8:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
   227fc:	cmp	w0, #0x0
   22800:	cset	w0, ne  // ne = any
   22804:	and	w0, w0, #0xff
   22808:	cmp	w0, #0x0
   2280c:	b.eq	22834 <__sanitizer_set_report_fd@@Base+0x363c>  // b.none
   22810:	ldr	x0, [sp, #280]
   22814:	ldr	x19, [x0]
   22818:	ldr	x0, [sp, #256]
   2281c:	bl	22c48 <__sanitizer_set_report_fd@@Base+0x3a50>
   22820:	mov	x2, x0
   22824:	mov	x1, x19
   22828:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   2282c:	add	x0, x0, #0xd78
   22830:	bl	2a3fc <OnPrint@@Base+0x454>
   22834:	ldr	x0, [sp, #280]
   22838:	mov	w1, #0x1                   	// #1
   2283c:	strb	w1, [x0, #24]
   22840:	ldr	x0, [sp, #256]
   22844:	bl	22c48 <__sanitizer_set_report_fd@@Base+0x3a50>
   22848:	bl	218f8 <__sanitizer_set_report_fd@@Base+0x2700>
   2284c:	mov	x1, x0
   22850:	ldr	x0, [sp, #280]
   22854:	str	x1, [x0, #8]
   22858:	ldr	x0, [sp, #40]
   2285c:	mov	w1, #0x1                   	// #1
   22860:	bl	f49c <__sanitizer_get_allocated_size@@Base+0x93c>
   22864:	str	x0, [sp, #232]
   22868:	ldr	x0, [sp, #232]
   2286c:	str	x0, [sp, #224]
   22870:	mov	x0, #0x80                  	// #128
   22874:	str	x0, [sp, #216]
   22878:	ldr	x1, [sp, #224]
   2287c:	ldr	x0, [sp, #216]
   22880:	cmp	x1, x0
   22884:	cset	w0, cs  // cs = hs, nlast
   22888:	and	w0, w0, #0xff
   2288c:	and	x0, x0, #0xff
   22890:	cmp	x0, #0x0
   22894:	b.eq	228b8 <__sanitizer_set_report_fd@@Base+0x36c0>  // b.none
   22898:	ldr	x4, [sp, #216]
   2289c:	ldr	x3, [sp, #224]
   228a0:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   228a4:	add	x2, x0, #0xdb8
   228a8:	mov	w1, #0x52                  	// #82
   228ac:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   228b0:	add	x0, x0, #0xe08
   228b4:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   228b8:	ldr	x0, [sp, #240]
   228bc:	ldr	x1, [x0, #8]
   228c0:	ldr	x2, [sp, #40]
   228c4:	ldr	x0, [sp, #232]
   228c8:	lsl	x0, x0, #4
   228cc:	add	x0, x2, x0
   228d0:	str	x1, [x0, #8]
   228d4:	ldr	x0, [sp, #240]
   228d8:	ldr	x1, [x0, #16]
   228dc:	ldr	x2, [sp, #40]
   228e0:	ldr	x0, [sp, #232]
   228e4:	lsl	x0, x0, #4
   228e8:	add	x0, x2, x0
   228ec:	str	x1, [x0, #16]
   228f0:	ldr	x3, [sp, #40]
   228f4:	ldr	x0, [sp, #232]
   228f8:	add	x0, x0, #0x1
   228fc:	mov	w2, #0x8                   	// #8
   22900:	mov	x1, x0
   22904:	mov	x0, x3
   22908:	bl	f520 <__sanitizer_get_allocated_size@@Base+0x9c0>
   2290c:	b	22930 <__sanitizer_set_report_fd@@Base+0x3738>
   22910:	nop
   22914:	b	22924 <__sanitizer_set_report_fd@@Base+0x372c>
   22918:	nop
   2291c:	b	22924 <__sanitizer_set_report_fd@@Base+0x372c>
   22920:	nop
   22924:	add	x0, sp, #0x48
   22928:	bl	1a210 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2c4>
   2292c:	b	226dc <__sanitizer_set_report_fd@@Base+0x34e4>
   22930:	ldr	x0, [sp, #304]
   22934:	add	x0, x0, #0x48
   22938:	str	x0, [sp, #304]
   2293c:	b	226a0 <__sanitizer_set_report_fd@@Base+0x34a8>
   22940:	ldr	x0, [sp, #280]
   22944:	ldrb	w0, [x0, #24]
   22948:	cmp	w0, #0x0
   2294c:	b.eq	22994 <__sanitizer_set_report_fd@@Base+0x379c>  // b.none
   22950:	ldrb	w0, [sp, #319]
   22954:	eor	w0, w0, #0x1
   22958:	and	w0, w0, #0xff
   2295c:	cmp	w0, #0x0
   22960:	b.eq	22994 <__sanitizer_set_report_fd@@Base+0x379c>  // b.none
   22964:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   22968:	ldr	x0, [x0, #4008]
   2296c:	ldr	x1, [x0]
   22970:	ldr	x0, [sp, #280]
   22974:	ldr	x2, [x0, #8]
   22978:	ldr	x0, [sp, #280]
   2297c:	ldr	x0, [x0]
   22980:	mov	x3, x0
   22984:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   22988:	add	x0, x0, #0xe50
   2298c:	bl	2a3fc <OnPrint@@Base+0x454>
   22990:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   22994:	ldr	x0, [sp, #320]
   22998:	add	x0, x0, #0x1
   2299c:	str	x0, [sp, #320]
   229a0:	b	2264c <__sanitizer_set_report_fd@@Base+0x3454>
   229a4:	ldr	x0, [sp, #40]
   229a8:	add	x0, x0, #0xc, lsl #12
   229ac:	ldrb	w0, [x0, #2160]
   229b0:	cmp	w0, #0x0
   229b4:	b.eq	22c00 <__sanitizer_set_report_fd@@Base+0x3a08>  // b.none
   229b8:	add	x0, sp, #0x50
   229bc:	str	x0, [sp, #208]
   229c0:	ldr	x0, [sp, #208]
   229c4:	bl	d528 <__lsan_do_recoverable_leak_check@@Base+0x339c>
   229c8:	str	x0, [sp, #296]
   229cc:	ldr	x0, [sp, #208]
   229d0:	bl	d540 <__lsan_do_recoverable_leak_check@@Base+0x33b4>
   229d4:	str	x0, [sp, #200]
   229d8:	ldr	x1, [sp, #296]
   229dc:	ldr	x0, [sp, #200]
   229e0:	cmp	x1, x0
   229e4:	b.eq	22c00 <__sanitizer_set_report_fd@@Base+0x3a08>  // b.none
   229e8:	ldr	x0, [sp, #296]
   229ec:	str	x0, [sp, #192]
   229f0:	ldr	x0, [sp, #192]
   229f4:	bl	22c60 <__sanitizer_set_report_fd@@Base+0x3a68>
   229f8:	and	w0, w0, #0xff
   229fc:	eor	w0, w0, #0x1
   22a00:	and	w0, w0, #0xff
   22a04:	cmp	w0, #0x0
   22a08:	b.ne	22bec <__sanitizer_set_report_fd@@Base+0x39f4>  // b.any
   22a0c:	ldr	x0, [sp, #192]
   22a10:	bl	1a000 <__sanitizer_install_malloc_and_free_hooks@@Base+0xb4>
   22a14:	str	x0, [sp, #184]
   22a18:	ldr	x0, [sp, #184]
   22a1c:	bl	1a1a0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x254>
   22a20:	str	x0, [sp, #56]
   22a24:	ldr	x0, [sp, #184]
   22a28:	bl	1a1c4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x278>
   22a2c:	str	x0, [sp, #48]
   22a30:	add	x0, sp, #0x38
   22a34:	ldr	x1, [sp, #48]
   22a38:	bl	1a1e4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x298>
   22a3c:	and	w0, w0, #0xff
   22a40:	cmp	w0, #0x0
   22a44:	b.eq	22bf0 <__sanitizer_set_report_fd@@Base+0x39f8>  // b.none
   22a48:	add	x0, sp, #0x38
   22a4c:	bl	1a238 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2ec>
   22a50:	str	x0, [sp, #176]
   22a54:	ldr	x0, [sp, #176]
   22a58:	ldrb	w0, [x0, #24]
   22a5c:	eor	w0, w0, #0x1
   22a60:	and	w0, w0, #0xff
   22a64:	cmp	w0, #0x0
   22a68:	b.ne	22bd4 <__sanitizer_set_report_fd@@Base+0x39dc>  // b.any
   22a6c:	ldr	x0, [sp, #176]
   22a70:	ldr	x0, [x0, #8]
   22a74:	mov	x1, x0
   22a78:	ldr	x0, [sp, #40]
   22a7c:	bl	22cc4 <__sanitizer_set_report_fd@@Base+0x3acc>
   22a80:	and	w0, w0, #0xff
   22a84:	cmp	w0, #0x0
   22a88:	b.eq	22ab8 <__sanitizer_set_report_fd@@Base+0x38c0>  // b.none
   22a8c:	ldr	x0, [sp, #176]
   22a90:	ldr	x0, [x0, #16]
   22a94:	sub	x0, x0, #0x1
   22a98:	mov	x1, x0
   22a9c:	ldr	x0, [sp, #40]
   22aa0:	bl	22cc4 <__sanitizer_set_report_fd@@Base+0x3acc>
   22aa4:	and	w0, w0, #0xff
   22aa8:	cmp	w0, #0x0
   22aac:	b.eq	22ab8 <__sanitizer_set_report_fd@@Base+0x38c0>  // b.none
   22ab0:	mov	w0, #0x1                   	// #1
   22ab4:	b	22abc <__sanitizer_set_report_fd@@Base+0x38c4>
   22ab8:	mov	w0, #0x0                   	// #0
   22abc:	cmp	w0, #0x0
   22ac0:	b.ne	22bdc <__sanitizer_set_report_fd@@Base+0x39e4>  // b.any
   22ac4:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
   22ac8:	cmp	w0, #0x0
   22acc:	cset	w0, ne  // ne = any
   22ad0:	and	w0, w0, #0xff
   22ad4:	cmp	w0, #0x0
   22ad8:	b.eq	22b0c <__sanitizer_set_report_fd@@Base+0x3914>  // b.none
   22adc:	ldr	x0, [sp, #176]
   22ae0:	ldr	x19, [x0, #8]
   22ae4:	ldr	x0, [sp, #176]
   22ae8:	ldr	x20, [x0, #16]
   22aec:	ldr	x0, [sp, #192]
   22af0:	bl	22c48 <__sanitizer_set_report_fd@@Base+0x3a50>
   22af4:	mov	x3, x0
   22af8:	mov	x2, x20
   22afc:	mov	x1, x19
   22b00:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   22b04:	add	x0, x0, #0xea8
   22b08:	bl	2a3fc <OnPrint@@Base+0x454>
   22b0c:	ldr	x0, [sp, #40]
   22b10:	add	x0, x0, #0x808
   22b14:	mov	w1, #0x1                   	// #1
   22b18:	bl	f49c <__sanitizer_get_allocated_size@@Base+0x93c>
   22b1c:	str	x0, [sp, #168]
   22b20:	ldr	x0, [sp, #168]
   22b24:	str	x0, [sp, #160]
   22b28:	mov	x0, #0x400                 	// #1024
   22b2c:	str	x0, [sp, #152]
   22b30:	ldr	x1, [sp, #160]
   22b34:	ldr	x0, [sp, #152]
   22b38:	cmp	x1, x0
   22b3c:	cset	w0, cs  // cs = hs, nlast
   22b40:	and	w0, w0, #0xff
   22b44:	and	x0, x0, #0xff
   22b48:	cmp	x0, #0x0
   22b4c:	b.eq	22b70 <__sanitizer_set_report_fd@@Base+0x3978>  // b.none
   22b50:	ldr	x4, [sp, #152]
   22b54:	ldr	x3, [sp, #160]
   22b58:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   22b5c:	add	x2, x0, #0xee0
   22b60:	mov	w1, #0x6f                  	// #111
   22b64:	adrp	x0, 55000 <__asan_backtrace_vector_release@@Base+0x6340>
   22b68:	add	x0, x0, #0xe08
   22b6c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   22b70:	ldr	x0, [sp, #176]
   22b74:	ldr	x1, [x0, #8]
   22b78:	ldr	x2, [sp, #40]
   22b7c:	ldr	x0, [sp, #168]
   22b80:	add	x0, x0, #0x81
   22b84:	lsl	x0, x0, #4
   22b88:	add	x0, x2, x0
   22b8c:	str	x1, [x0]
   22b90:	ldr	x0, [sp, #176]
   22b94:	ldr	x1, [x0, #16]
   22b98:	ldr	x2, [sp, #40]
   22b9c:	ldr	x0, [sp, #168]
   22ba0:	add	x0, x0, #0x81
   22ba4:	lsl	x0, x0, #4
   22ba8:	add	x0, x2, x0
   22bac:	str	x1, [x0, #8]
   22bb0:	ldr	x0, [sp, #40]
   22bb4:	add	x3, x0, #0x808
   22bb8:	ldr	x0, [sp, #168]
   22bbc:	add	x0, x0, #0x1
   22bc0:	mov	w2, #0x8                   	// #8
   22bc4:	mov	x1, x0
   22bc8:	mov	x0, x3
   22bcc:	bl	f520 <__sanitizer_get_allocated_size@@Base+0x9c0>
   22bd0:	b	22be0 <__sanitizer_set_report_fd@@Base+0x39e8>
   22bd4:	nop
   22bd8:	b	22be0 <__sanitizer_set_report_fd@@Base+0x39e8>
   22bdc:	nop
   22be0:	add	x0, sp, #0x38
   22be4:	bl	1a210 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2c4>
   22be8:	b	22a30 <__sanitizer_set_report_fd@@Base+0x3838>
   22bec:	nop
   22bf0:	ldr	x0, [sp, #296]
   22bf4:	add	x0, x0, #0x48
   22bf8:	str	x0, [sp, #296]
   22bfc:	b	229d8 <__sanitizer_set_report_fd@@Base+0x37e0>
   22c00:	add	x0, sp, #0x50
   22c04:	bl	d50c <__lsan_do_recoverable_leak_check@@Base+0x3380>
   22c08:	add	x0, sp, #0x70
   22c0c:	bl	aab4 <__lsan_do_recoverable_leak_check@@Base+0x928>
   22c10:	add	x0, sp, #0x90
   22c14:	bl	b688 <__lsan_do_recoverable_leak_check@@Base+0x14fc>
   22c18:	nop
   22c1c:	ldp	x21, x30, [sp, #16]
   22c20:	ldp	x19, x20, [sp], #336
   22c24:	ret
   22c28:	str	x30, [sp, #-32]!
   22c2c:	str	x0, [sp, #24]
   22c30:	mov	x1, #0x0                   	// #0
   22c34:	ldr	x0, [sp, #24]
   22c38:	bl	224ec <__sanitizer_set_report_fd@@Base+0x32f4>
   22c3c:	nop
   22c40:	ldr	x30, [sp], #32
   22c44:	ret
   22c48:	sub	sp, sp, #0x10
   22c4c:	str	x0, [sp, #8]
   22c50:	ldr	x0, [sp, #8]
   22c54:	ldr	x0, [x0]
   22c58:	add	sp, sp, #0x10
   22c5c:	ret
   22c60:	sub	sp, sp, #0x10
   22c64:	str	x0, [sp, #8]
   22c68:	ldr	x0, [sp, #8]
   22c6c:	ldrb	w0, [x0, #44]
   22c70:	add	sp, sp, #0x10
   22c74:	ret
   22c78:	sub	sp, sp, #0x20
   22c7c:	str	x0, [sp, #24]
   22c80:	str	x1, [sp, #16]
   22c84:	str	x2, [sp, #8]
   22c88:	ldr	x0, [sp, #8]
   22c8c:	ldr	x0, [x0]
   22c90:	ldr	x1, [sp, #16]
   22c94:	cmp	x1, x0
   22c98:	b.cc	22cb8 <__sanitizer_set_report_fd@@Base+0x3ac0>  // b.lo, b.ul, b.last
   22c9c:	ldr	x0, [sp, #8]
   22ca0:	ldr	x0, [x0, #8]
   22ca4:	ldr	x1, [sp, #16]
   22ca8:	cmp	x1, x0
   22cac:	b.cs	22cb8 <__sanitizer_set_report_fd@@Base+0x3ac0>  // b.hs, b.nlast
   22cb0:	mov	w0, #0x1                   	// #1
   22cb4:	b	22cbc <__sanitizer_set_report_fd@@Base+0x3ac4>
   22cb8:	mov	w0, #0x0                   	// #0
   22cbc:	add	sp, sp, #0x20
   22cc0:	ret
   22cc4:	str	x30, [sp, #-48]!
   22cc8:	str	x0, [sp, #24]
   22ccc:	str	x1, [sp, #16]
   22cd0:	ldr	x0, [sp, #24]
   22cd4:	add	x0, x0, #0x808
   22cd8:	mov	w1, #0x4                   	// #4
   22cdc:	bl	f49c <__sanitizer_get_allocated_size@@Base+0x93c>
   22ce0:	str	x0, [sp, #32]
   22ce4:	str	xzr, [sp, #40]
   22ce8:	ldr	x1, [sp, #40]
   22cec:	ldr	x0, [sp, #32]
   22cf0:	cmp	x1, x0
   22cf4:	b.cs	22d40 <__sanitizer_set_report_fd@@Base+0x3b48>  // b.hs, b.nlast
   22cf8:	ldr	x0, [sp, #40]
   22cfc:	add	x0, x0, #0x81
   22d00:	lsl	x0, x0, #4
   22d04:	ldr	x1, [sp, #24]
   22d08:	add	x0, x1, x0
   22d0c:	mov	x2, x0
   22d10:	ldr	x1, [sp, #16]
   22d14:	ldr	x0, [sp, #24]
   22d18:	bl	22c78 <__sanitizer_set_report_fd@@Base+0x3a80>
   22d1c:	and	w0, w0, #0xff
   22d20:	cmp	w0, #0x0
   22d24:	b.eq	22d30 <__sanitizer_set_report_fd@@Base+0x3b38>  // b.none
   22d28:	mov	w0, #0x1                   	// #1
   22d2c:	b	22d44 <__sanitizer_set_report_fd@@Base+0x3b4c>
   22d30:	ldr	x0, [sp, #40]
   22d34:	add	x0, x0, #0x1
   22d38:	str	x0, [sp, #40]
   22d3c:	b	22ce8 <__sanitizer_set_report_fd@@Base+0x3af0>
   22d40:	mov	w0, #0x0                   	// #0
   22d44:	ldr	x30, [sp], #48
   22d48:	ret
   22d4c:	sub	sp, sp, #0x10
   22d50:	str	x0, [sp, #8]
   22d54:	ldr	x8, [sp, #8]
   22d58:	svc	#0x0
   22d5c:	add	sp, sp, #0x10
   22d60:	ret
   22d64:	sub	sp, sp, #0x10
   22d68:	str	x0, [sp, #8]
   22d6c:	str	x1, [sp]
   22d70:	ldr	x8, [sp, #8]
   22d74:	ldr	x0, [sp]
   22d78:	svc	#0x0
   22d7c:	add	sp, sp, #0x10
   22d80:	ret
   22d84:	sub	sp, sp, #0x20
   22d88:	str	x0, [sp, #24]
   22d8c:	str	x1, [sp, #16]
   22d90:	str	x2, [sp, #8]
   22d94:	ldr	x8, [sp, #24]
   22d98:	ldr	x0, [sp, #16]
   22d9c:	ldr	x1, [sp, #8]
   22da0:	svc	#0x0
   22da4:	add	sp, sp, #0x20
   22da8:	ret
   22dac:	sub	sp, sp, #0x20
   22db0:	str	x0, [sp, #24]
   22db4:	str	x1, [sp, #16]
   22db8:	str	x2, [sp, #8]
   22dbc:	str	x3, [sp]
   22dc0:	ldr	x8, [sp, #24]
   22dc4:	ldr	x0, [sp, #16]
   22dc8:	ldr	x1, [sp, #8]
   22dcc:	ldr	x2, [sp]
   22dd0:	svc	#0x0
   22dd4:	add	sp, sp, #0x20
   22dd8:	ret
   22ddc:	sub	sp, sp, #0x30
   22de0:	str	x0, [sp, #40]
   22de4:	str	x1, [sp, #32]
   22de8:	str	x2, [sp, #24]
   22dec:	str	x3, [sp, #16]
   22df0:	str	x4, [sp, #8]
   22df4:	ldr	x8, [sp, #40]
   22df8:	ldr	x0, [sp, #32]
   22dfc:	ldr	x1, [sp, #24]
   22e00:	ldr	x2, [sp, #16]
   22e04:	ldr	x3, [sp, #8]
   22e08:	svc	#0x0
   22e0c:	add	sp, sp, #0x30
   22e10:	ret
   22e14:	sub	sp, sp, #0x30
   22e18:	str	x0, [sp, #40]
   22e1c:	str	x1, [sp, #32]
   22e20:	str	x2, [sp, #24]
   22e24:	str	x3, [sp, #16]
   22e28:	str	x4, [sp, #8]
   22e2c:	str	x5, [sp]
   22e30:	ldr	x8, [sp, #40]
   22e34:	ldr	x0, [sp, #32]
   22e38:	ldr	x1, [sp, #24]
   22e3c:	ldr	x2, [sp, #16]
   22e40:	ldr	x3, [sp, #8]
   22e44:	ldr	x4, [sp]
   22e48:	svc	#0x0
   22e4c:	add	sp, sp, #0x30
   22e50:	ret
   22e54:	sub	sp, sp, #0x40
   22e58:	str	x0, [sp, #56]
   22e5c:	str	x1, [sp, #48]
   22e60:	str	x2, [sp, #40]
   22e64:	str	x3, [sp, #32]
   22e68:	str	x4, [sp, #24]
   22e6c:	str	x5, [sp, #16]
   22e70:	str	x6, [sp, #8]
   22e74:	ldr	x8, [sp, #56]
   22e78:	ldr	x0, [sp, #48]
   22e7c:	ldr	x1, [sp, #40]
   22e80:	ldr	x2, [sp, #32]
   22e84:	ldr	x3, [sp, #24]
   22e88:	ldr	x4, [sp, #16]
   22e8c:	ldr	x5, [sp, #8]
   22e90:	svc	#0x0
   22e94:	add	sp, sp, #0x40
   22e98:	ret
   22e9c:	sub	sp, sp, #0x10
   22ea0:	str	x0, [sp, #8]
   22ea4:	str	x1, [sp]
   22ea8:	ldr	x0, [sp, #8]
   22eac:	cmn	x0, #0x1, lsl #12
   22eb0:	b.ls	22edc <__sanitizer_set_report_fd@@Base+0x3ce4>  // b.plast
   22eb4:	ldr	x0, [sp]
   22eb8:	cmp	x0, #0x0
   22ebc:	b.eq	22ed4 <__sanitizer_set_report_fd@@Base+0x3cdc>  // b.none
   22ec0:	ldr	x0, [sp, #8]
   22ec4:	neg	w0, w0
   22ec8:	mov	w1, w0
   22ecc:	ldr	x0, [sp]
   22ed0:	str	w1, [x0]
   22ed4:	mov	w0, #0x1                   	// #1
   22ed8:	b	22ee0 <__sanitizer_set_report_fd@@Base+0x3ce8>
   22edc:	mov	w0, #0x0                   	// #0
   22ee0:	add	sp, sp, #0x10
   22ee4:	ret
   22ee8:	str	x30, [sp, #-64]!
   22eec:	str	x0, [sp, #56]
   22ef0:	str	x1, [sp, #48]
   22ef4:	str	w2, [sp, #44]
   22ef8:	str	w3, [sp, #40]
   22efc:	str	w4, [sp, #36]
   22f00:	str	x5, [sp, #24]
   22f04:	ldr	x0, [sp, #56]
   22f08:	ldr	x1, [sp, #48]
   22f0c:	ldrsw	x2, [sp, #44]
   22f10:	ldrsw	x3, [sp, #40]
   22f14:	ldrsw	x4, [sp, #36]
   22f18:	ldr	x5, [sp, #24]
   22f1c:	mov	x6, x5
   22f20:	mov	x5, x4
   22f24:	mov	x4, x3
   22f28:	mov	x3, x2
   22f2c:	mov	x2, x1
   22f30:	mov	x1, x0
   22f34:	mov	x0, #0xde                  	// #222
   22f38:	bl	22e54 <__sanitizer_set_report_fd@@Base+0x3c5c>
   22f3c:	ldr	x30, [sp], #64
   22f40:	ret
   22f44:	str	x30, [sp, #-32]!
   22f48:	str	x0, [sp, #24]
   22f4c:	str	x1, [sp, #16]
   22f50:	ldr	x0, [sp, #24]
   22f54:	ldr	x1, [sp, #16]
   22f58:	mov	x2, x1
   22f5c:	mov	x1, x0
   22f60:	mov	x0, #0xd7                  	// #215
   22f64:	bl	22d84 <__sanitizer_set_report_fd@@Base+0x3b8c>
   22f68:	ldr	x30, [sp], #32
   22f6c:	ret
   22f70:	str	x30, [sp, #-48]!
   22f74:	str	x0, [sp, #40]
   22f78:	str	x1, [sp, #32]
   22f7c:	str	w2, [sp, #28]
   22f80:	ldr	x0, [sp, #40]
   22f84:	ldr	x1, [sp, #32]
   22f88:	ldrsw	x2, [sp, #28]
   22f8c:	mov	x3, x2
   22f90:	mov	x2, x1
   22f94:	mov	x1, x0
   22f98:	mov	x0, #0xe2                  	// #226
   22f9c:	bl	22dac <__sanitizer_set_report_fd@@Base+0x3bb4>
   22fa0:	ldr	x30, [sp], #48
   22fa4:	ret
   22fa8:	str	x30, [sp, #-32]!
   22fac:	str	w0, [sp, #28]
   22fb0:	ldrsw	x0, [sp, #28]
   22fb4:	mov	x1, x0
   22fb8:	mov	x0, #0x39                  	// #57
   22fbc:	bl	22d64 <__sanitizer_set_report_fd@@Base+0x3b6c>
   22fc0:	ldr	x30, [sp], #32
   22fc4:	ret
   22fc8:	str	x30, [sp, #-32]!
   22fcc:	str	x0, [sp, #24]
   22fd0:	str	w1, [sp, #20]
   22fd4:	ldr	x0, [sp, #24]
   22fd8:	ldrsw	x1, [sp, #20]
   22fdc:	mov	x3, x1
   22fe0:	mov	x2, x0
   22fe4:	mov	x1, #0xffffffffffffff9c    	// #-100
   22fe8:	mov	x0, #0x38                  	// #56
   22fec:	bl	22dac <__sanitizer_set_report_fd@@Base+0x3bb4>
   22ff0:	ldr	x30, [sp], #32
   22ff4:	ret
   22ff8:	str	x30, [sp, #-32]!
   22ffc:	str	x0, [sp, #24]
   23000:	str	w1, [sp, #20]
   23004:	str	w2, [sp, #16]
   23008:	ldr	x0, [sp, #24]
   2300c:	ldrsw	x1, [sp, #20]
   23010:	ldr	w2, [sp, #16]
   23014:	mov	x4, x2
   23018:	mov	x3, x1
   2301c:	mov	x2, x0
   23020:	mov	x1, #0xffffffffffffff9c    	// #-100
   23024:	mov	x0, #0x38                  	// #56
   23028:	bl	22ddc <__sanitizer_set_report_fd@@Base+0x3be4>
   2302c:	ldr	x30, [sp], #32
   23030:	ret
   23034:	str	x30, [sp, #-64]!
   23038:	str	w0, [sp, #44]
   2303c:	str	x1, [sp, #32]
   23040:	str	x2, [sp, #24]
   23044:	ldrsw	x0, [sp, #44]
   23048:	ldr	x1, [sp, #32]
   2304c:	ldr	x2, [sp, #24]
   23050:	mov	x3, x2
   23054:	mov	x2, x1
   23058:	mov	x1, x0
   2305c:	mov	x0, #0x3f                  	// #63
   23060:	bl	22dac <__sanitizer_set_report_fd@@Base+0x3bb4>
   23064:	str	x0, [sp, #56]
   23068:	ldr	x0, [sp, #56]
   2306c:	add	x1, sp, #0x34
   23070:	bl	22e9c <__sanitizer_set_report_fd@@Base+0x3ca4>
   23074:	and	w0, w0, #0xff
   23078:	cmp	w0, #0x0
   2307c:	b.eq	23094 <__sanitizer_set_report_fd@@Base+0x3e9c>  // b.none
   23080:	ldr	w0, [sp, #52]
   23084:	cmp	w0, #0x4
   23088:	b.ne	23094 <__sanitizer_set_report_fd@@Base+0x3e9c>  // b.any
   2308c:	mov	w0, #0x1                   	// #1
   23090:	b	23098 <__sanitizer_set_report_fd@@Base+0x3ea0>
   23094:	mov	w0, #0x0                   	// #0
   23098:	cmp	w0, #0x0
   2309c:	b.eq	230a4 <__sanitizer_set_report_fd@@Base+0x3eac>  // b.none
   230a0:	b	23044 <__sanitizer_set_report_fd@@Base+0x3e4c>
   230a4:	ldr	x0, [sp, #56]
   230a8:	ldr	x30, [sp], #64
   230ac:	ret
   230b0:	str	x30, [sp, #-64]!
   230b4:	str	w0, [sp, #44]
   230b8:	str	x1, [sp, #32]
   230bc:	str	x2, [sp, #24]
   230c0:	ldrsw	x0, [sp, #44]
   230c4:	ldr	x1, [sp, #32]
   230c8:	ldr	x2, [sp, #24]
   230cc:	mov	x3, x2
   230d0:	mov	x2, x1
   230d4:	mov	x1, x0
   230d8:	mov	x0, #0x40                  	// #64
   230dc:	bl	22dac <__sanitizer_set_report_fd@@Base+0x3bb4>
   230e0:	str	x0, [sp, #56]
   230e4:	ldr	x0, [sp, #56]
   230e8:	add	x1, sp, #0x34
   230ec:	bl	22e9c <__sanitizer_set_report_fd@@Base+0x3ca4>
   230f0:	and	w0, w0, #0xff
   230f4:	cmp	w0, #0x0
   230f8:	b.eq	23110 <__sanitizer_set_report_fd@@Base+0x3f18>  // b.none
   230fc:	ldr	w0, [sp, #52]
   23100:	cmp	w0, #0x4
   23104:	b.ne	23110 <__sanitizer_set_report_fd@@Base+0x3f18>  // b.any
   23108:	mov	w0, #0x1                   	// #1
   2310c:	b	23114 <__sanitizer_set_report_fd@@Base+0x3f1c>
   23110:	mov	w0, #0x0                   	// #0
   23114:	cmp	w0, #0x0
   23118:	b.eq	23120 <__sanitizer_set_report_fd@@Base+0x3f28>  // b.none
   2311c:	b	230c0 <__sanitizer_set_report_fd@@Base+0x3ec8>
   23120:	ldr	x0, [sp, #56]
   23124:	ldr	x30, [sp], #64
   23128:	ret
   2312c:	str	x30, [sp, #-48]!
   23130:	str	w0, [sp, #28]
   23134:	str	x1, [sp, #16]
   23138:	ldrsw	x0, [sp, #28]
   2313c:	ldr	x1, [sp, #16]
   23140:	mov	x2, x1
   23144:	mov	x1, x0
   23148:	mov	x0, #0x2e                  	// #46
   2314c:	bl	22d84 <__sanitizer_set_report_fd@@Base+0x3b8c>
   23150:	str	x0, [sp, #40]
   23154:	ldr	x0, [sp, #40]
   23158:	add	x1, sp, #0x24
   2315c:	bl	22e9c <__sanitizer_set_report_fd@@Base+0x3ca4>
   23160:	and	w0, w0, #0xff
   23164:	cmp	w0, #0x0
   23168:	b.eq	23180 <__sanitizer_set_report_fd@@Base+0x3f88>  // b.none
   2316c:	ldr	w0, [sp, #36]
   23170:	cmp	w0, #0x4
   23174:	b.ne	23180 <__sanitizer_set_report_fd@@Base+0x3f88>  // b.any
   23178:	mov	w0, #0x1                   	// #1
   2317c:	b	23184 <__sanitizer_set_report_fd@@Base+0x3f8c>
   23180:	mov	w0, #0x0                   	// #0
   23184:	cmp	w0, #0x0
   23188:	b.eq	23190 <__sanitizer_set_report_fd@@Base+0x3f98>  // b.none
   2318c:	b	23138 <__sanitizer_set_report_fd@@Base+0x3f40>
   23190:	ldr	x0, [sp, #40]
   23194:	ldr	x30, [sp], #48
   23198:	ret
   2319c:	str	x30, [sp, #-32]!
   231a0:	str	x0, [sp, #24]
   231a4:	str	x1, [sp, #16]
   231a8:	ldr	x0, [sp, #24]
   231ac:	ldr	x1, [sp, #16]
   231b0:	mov	x4, #0x0                   	// #0
   231b4:	mov	x3, x1
   231b8:	mov	x2, x0
   231bc:	mov	x1, #0xffffffffffffff9c    	// #-100
   231c0:	mov	x0, #0x4f                  	// #79
   231c4:	bl	22ddc <__sanitizer_set_report_fd@@Base+0x3be4>
   231c8:	ldr	x30, [sp], #32
   231cc:	ret
   231d0:	str	x30, [sp, #-32]!
   231d4:	str	x0, [sp, #24]
   231d8:	str	x1, [sp, #16]
   231dc:	ldr	x0, [sp, #24]
   231e0:	ldr	x1, [sp, #16]
   231e4:	mov	x4, #0x100                 	// #256
   231e8:	mov	x3, x1
   231ec:	mov	x2, x0
   231f0:	mov	x1, #0xffffffffffffff9c    	// #-100
   231f4:	mov	x0, #0x4f                  	// #79
   231f8:	bl	22ddc <__sanitizer_set_report_fd@@Base+0x3be4>
   231fc:	ldr	x30, [sp], #32
   23200:	ret
   23204:	str	x30, [sp, #-32]!
   23208:	str	w0, [sp, #28]
   2320c:	str	x1, [sp, #16]
   23210:	ldrsw	x0, [sp, #28]
   23214:	ldr	x1, [sp, #16]
   23218:	mov	x2, x1
   2321c:	mov	x1, x0
   23220:	mov	x0, #0x50                  	// #80
   23224:	bl	22d84 <__sanitizer_set_report_fd@@Base+0x3b8c>
   23228:	ldr	x30, [sp], #32
   2322c:	ret
   23230:	str	x30, [sp, #-160]!
   23234:	str	w0, [sp, #28]
   23238:	add	x0, sp, #0x20
   2323c:	mov	x1, x0
   23240:	ldr	w0, [sp, #28]
   23244:	bl	23204 <__sanitizer_set_report_fd@@Base+0x400c>
   23248:	cmp	x0, #0x0
   2324c:	cset	w0, ne  // ne = any
   23250:	and	w0, w0, #0xff
   23254:	cmp	w0, #0x0
   23258:	b.eq	23264 <__sanitizer_set_report_fd@@Base+0x406c>  // b.none
   2325c:	mov	x0, #0xffffffffffffffff    	// #-1
   23260:	b	23268 <__sanitizer_set_report_fd@@Base+0x4070>
   23264:	ldr	x0, [sp, #80]
   23268:	ldr	x30, [sp], #160
   2326c:	ret
   23270:	str	x30, [sp, #-32]!
   23274:	str	w0, [sp, #28]
   23278:	str	w1, [sp, #24]
   2327c:	ldrsw	x0, [sp, #28]
   23280:	ldrsw	x1, [sp, #24]
   23284:	mov	x3, #0x0                   	// #0
   23288:	mov	x2, x1
   2328c:	mov	x1, x0
   23290:	mov	x0, #0x18                  	// #24
   23294:	bl	22dac <__sanitizer_set_report_fd@@Base+0x3bb4>
   23298:	ldr	x30, [sp], #32
   2329c:	ret
   232a0:	str	x30, [sp, #-48]!
   232a4:	str	x0, [sp, #40]
   232a8:	str	x1, [sp, #32]
   232ac:	str	x2, [sp, #24]
   232b0:	ldr	x0, [sp, #40]
   232b4:	ldr	x1, [sp, #32]
   232b8:	ldr	x4, [sp, #24]
   232bc:	mov	x3, x1
   232c0:	mov	x2, x0
   232c4:	mov	x1, #0xffffffffffffff9c    	// #-100
   232c8:	mov	x0, #0x4e                  	// #78
   232cc:	bl	22ddc <__sanitizer_set_report_fd@@Base+0x3be4>
   232d0:	ldr	x30, [sp], #48
   232d4:	ret
   232d8:	str	x30, [sp, #-32]!
   232dc:	str	x0, [sp, #24]
   232e0:	ldr	x0, [sp, #24]
   232e4:	mov	x3, #0x0                   	// #0
   232e8:	mov	x2, x0
   232ec:	mov	x1, #0xffffffffffffff9c    	// #-100
   232f0:	mov	x0, #0x23                  	// #35
   232f4:	bl	22dac <__sanitizer_set_report_fd@@Base+0x3bb4>
   232f8:	ldr	x30, [sp], #32
   232fc:	ret
   23300:	str	x30, [sp, #-32]!
   23304:	str	x0, [sp, #24]
   23308:	str	x1, [sp, #16]
   2330c:	ldr	x0, [sp, #24]
   23310:	ldr	x1, [sp, #16]
   23314:	mov	x4, x1
   23318:	mov	x3, #0xffffffffffffff9c    	// #-100
   2331c:	mov	x2, x0
   23320:	mov	x1, #0xffffffffffffff9c    	// #-100
   23324:	mov	x0, #0x26                  	// #38
   23328:	bl	22ddc <__sanitizer_set_report_fd@@Base+0x3be4>
   2332c:	ldr	x30, [sp], #32
   23330:	ret
   23334:	str	x30, [sp, #-16]!
   23338:	mov	x0, #0x7c                  	// #124
   2333c:	bl	22d4c <__sanitizer_set_report_fd@@Base+0x3b54>
   23340:	ldr	x30, [sp], #16
   23344:	ret
   23348:	str	x30, [sp, #-32]!
   2334c:	str	w0, [sp, #28]
   23350:	ldrsw	x0, [sp, #28]
   23354:	mov	x1, x0
   23358:	mov	x0, #0x5e                  	// #94
   2335c:	bl	22d64 <__sanitizer_set_report_fd@@Base+0x3b6c>
   23360:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   23364:	str	x30, [sp, #-64]!
   23368:	str	w0, [sp, #28]
   2336c:	mov	x0, #0x1                   	// #1
   23370:	str	x0, [sp, #40]
   23374:	str	xzr, [sp, #48]
   23378:	add	x0, sp, #0x28
   2337c:	add	x1, sp, #0x28
   23380:	mov	x2, x1
   23384:	mov	x1, x0
   23388:	mov	x0, #0x65                  	// #101
   2338c:	bl	22d84 <__sanitizer_set_report_fd@@Base+0x3b8c>
   23390:	str	w0, [sp, #60]
   23394:	ldr	w0, [sp, #60]
   23398:	cmp	w0, #0x0
   2339c:	b.eq	233a8 <__sanitizer_set_report_fd@@Base+0x41b0>  // b.none
   233a0:	ldr	x0, [sp, #40]
   233a4:	b	233ac <__sanitizer_set_report_fd@@Base+0x41b4>
   233a8:	mov	w0, #0x0                   	// #0
   233ac:	ldr	x30, [sp], #64
   233b0:	ret
   233b4:	str	x30, [sp, #-48]!
   233b8:	str	x0, [sp, #40]
   233bc:	str	x1, [sp, #32]
   233c0:	str	x2, [sp, #24]
   233c4:	ldr	x0, [sp, #40]
   233c8:	ldr	x1, [sp, #32]
   233cc:	ldr	x2, [sp, #24]
   233d0:	mov	x3, x2
   233d4:	mov	x2, x1
   233d8:	mov	x1, x0
   233dc:	mov	x0, #0xdd                  	// #221
   233e0:	bl	22dac <__sanitizer_set_report_fd@@Base+0x3bb4>
   233e4:	ldr	x30, [sp], #48
   233e8:	ret
   233ec:	str	x30, [sp, #-160]!
   233f0:	str	x0, [sp, #24]
   233f4:	ldr	x0, [sp, #24]
   233f8:	add	x1, sp, #0x20
   233fc:	mov	x4, #0x0                   	// #0
   23400:	mov	x3, x1
   23404:	mov	x2, x0
   23408:	mov	x1, #0xffffffffffffff9c    	// #-100
   2340c:	mov	x0, #0x4f                  	// #79
   23410:	bl	22ddc <__sanitizer_set_report_fd@@Base+0x3be4>
   23414:	cmp	x0, #0x0
   23418:	cset	w0, ne  // ne = any
   2341c:	and	w0, w0, #0xff
   23420:	cmp	w0, #0x0
   23424:	b.eq	23430 <__sanitizer_set_report_fd@@Base+0x4238>  // b.none
   23428:	mov	w0, #0x0                   	// #0
   2342c:	b	23444 <__sanitizer_set_report_fd@@Base+0x424c>
   23430:	ldr	w0, [sp, #48]
   23434:	and	w0, w0, #0xf000
   23438:	cmp	w0, #0x8, lsl #12
   2343c:	cset	w0, eq  // eq = none
   23440:	and	w0, w0, #0xff
   23444:	ldr	x30, [sp], #160
   23448:	ret
   2344c:	str	x30, [sp, #-16]!
   23450:	mov	x0, #0xb2                  	// #178
   23454:	bl	22d4c <__sanitizer_set_report_fd@@Base+0x3b54>
   23458:	ldr	x30, [sp], #16
   2345c:	ret
   23460:	str	x30, [sp, #-32]!
   23464:	str	w0, [sp, #28]
   23468:	str	x1, [sp, #16]
   2346c:	str	w2, [sp, #24]
   23470:	ldrsw	x0, [sp, #28]
   23474:	ldr	x1, [sp, #16]
   23478:	ldrsw	x2, [sp, #24]
   2347c:	mov	x3, x2
   23480:	mov	x2, x1
   23484:	mov	x1, x0
   23488:	mov	x0, #0x83                  	// #131
   2348c:	bl	22dac <__sanitizer_set_report_fd@@Base+0x3bb4>
   23490:	ldr	x30, [sp], #32
   23494:	ret
   23498:	str	x30, [sp, #-32]!
   2349c:	add	x0, sp, #0x10
   234a0:	mov	x2, #0x10                  	// #16
   234a4:	mov	w1, #0x0                   	// #0
   234a8:	bl	21754 <__sanitizer_set_report_fd@@Base+0x255c>
   234ac:	add	x0, sp, #0x10
   234b0:	mov	x2, #0x0                   	// #0
   234b4:	mov	x1, x0
   234b8:	mov	x0, #0xa9                  	// #169
   234bc:	bl	22d84 <__sanitizer_set_report_fd@@Base+0x3b8c>
   234c0:	ldr	x0, [sp, #16]
   234c4:	mov	x1, x0
   234c8:	mov	x0, #0xca00                	// #51712
   234cc:	movk	x0, #0x3b9a, lsl #16
   234d0:	mul	x2, x1, x0
   234d4:	ldr	x1, [sp, #24]
   234d8:	mov	x0, x1
   234dc:	lsl	x0, x0, #5
   234e0:	sub	x0, x0, x1
   234e4:	lsl	x0, x0, #2
   234e8:	add	x0, x0, x1
   234ec:	lsl	x0, x0, #3
   234f0:	add	x0, x2, x0
   234f4:	ldr	x30, [sp], #32
   234f8:	ret
   234fc:	str	x30, [sp, #-32]!
   23500:	str	w0, [sp, #28]
   23504:	str	x1, [sp, #16]
   23508:	ldrsw	x0, [sp, #28]
   2350c:	ldr	x1, [sp, #16]
   23510:	mov	x2, x1
   23514:	mov	x1, x0
   23518:	mov	x0, #0x71                  	// #113
   2351c:	bl	22d84 <__sanitizer_set_report_fd@@Base+0x3b8c>
   23520:	ldr	x30, [sp], #32
   23524:	ret
   23528:	str	x30, [sp, #-64]!
   2352c:	str	x0, [sp, #24]
   23530:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   23534:	add	x0, x0, #0xc18
   23538:	ldrb	w0, [x0]
   2353c:	eor	w0, w0, #0x1
   23540:	and	w0, w0, #0xff
   23544:	cmp	w0, #0x0
   23548:	b.eq	235a8 <__sanitizer_set_report_fd@@Base+0x43b0>  // b.none
   2354c:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   23550:	add	x0, x0, #0xc18
   23554:	mov	w1, #0x1                   	// #1
   23558:	strb	w1, [x0]
   2355c:	add	x1, sp, #0x20
   23560:	mov	x5, #0x0                   	// #0
   23564:	mov	x4, #0x4000000             	// #67108864
   23568:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   2356c:	add	x3, x0, #0xc10
   23570:	mov	x2, x1
   23574:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   23578:	add	x1, x0, #0xc08
   2357c:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   23580:	add	x0, x0, #0x170
   23584:	bl	1ec3c <__sanitizer_cov_pcs_init@@Base+0x3ba0>
   23588:	and	w0, w0, #0xff
   2358c:	eor	w0, w0, #0x1
   23590:	and	w0, w0, #0xff
   23594:	cmp	w0, #0x0
   23598:	b.eq	235a8 <__sanitizer_set_report_fd@@Base+0x43b0>  // b.none
   2359c:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   235a0:	add	x0, x0, #0xc08
   235a4:	str	xzr, [x0]
   235a8:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   235ac:	add	x0, x0, #0xc08
   235b0:	ldr	x0, [x0]
   235b4:	cmp	x0, #0x0
   235b8:	b.eq	235d0 <__sanitizer_set_report_fd@@Base+0x43d8>  // b.none
   235bc:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   235c0:	add	x0, x0, #0xc10
   235c4:	ldr	x0, [x0]
   235c8:	cmp	x0, #0x0
   235cc:	b.ne	235d8 <__sanitizer_set_report_fd@@Base+0x43e0>  // b.any
   235d0:	mov	x0, #0x0                   	// #0
   235d4:	b	236bc <__sanitizer_set_report_fd@@Base+0x44c4>
   235d8:	ldr	x0, [sp, #24]
   235dc:	bl	21bac <__sanitizer_set_report_fd@@Base+0x29b4>
   235e0:	str	x0, [sp, #48]
   235e4:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   235e8:	add	x0, x0, #0xc08
   235ec:	ldr	x0, [x0]
   235f0:	str	x0, [sp, #56]
   235f4:	ldr	x0, [sp, #56]
   235f8:	ldrb	w0, [x0]
   235fc:	cmp	w0, #0x0
   23600:	b.eq	236b8 <__sanitizer_set_report_fd@@Base+0x44c0>  // b.none
   23604:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   23608:	add	x0, x0, #0xc10
   2360c:	ldr	x0, [x0]
   23610:	adrp	x1, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   23614:	add	x1, x1, #0xc08
   23618:	ldr	x1, [x1]
   2361c:	ldr	x2, [sp, #56]
   23620:	sub	x1, x2, x1
   23624:	sub	x0, x0, x1
   23628:	mov	x2, x0
   2362c:	mov	w1, #0x0                   	// #0
   23630:	ldr	x0, [sp, #56]
   23634:	bl	21418 <__sanitizer_set_report_fd@@Base+0x2220>
   23638:	str	x0, [sp, #40]
   2363c:	ldr	x0, [sp, #40]
   23640:	cmp	x0, #0x0
   23644:	b.ne	23650 <__sanitizer_set_report_fd@@Base+0x4458>  // b.any
   23648:	mov	x0, #0x0                   	// #0
   2364c:	b	236bc <__sanitizer_set_report_fd@@Base+0x44c4>
   23650:	ldr	x2, [sp, #48]
   23654:	ldr	x1, [sp, #24]
   23658:	ldr	x0, [sp, #56]
   2365c:	bl	21504 <__sanitizer_set_report_fd@@Base+0x230c>
   23660:	cmp	w0, #0x0
   23664:	b.ne	23688 <__sanitizer_set_report_fd@@Base+0x4490>  // b.any
   23668:	ldr	x1, [sp, #56]
   2366c:	ldr	x0, [sp, #48]
   23670:	add	x0, x1, x0
   23674:	ldrb	w0, [x0]
   23678:	cmp	w0, #0x3d
   2367c:	b.ne	23688 <__sanitizer_set_report_fd@@Base+0x4490>  // b.any
   23680:	mov	w0, #0x1                   	// #1
   23684:	b	2368c <__sanitizer_set_report_fd@@Base+0x4494>
   23688:	mov	w0, #0x0                   	// #0
   2368c:	cmp	w0, #0x0
   23690:	b.eq	236a8 <__sanitizer_set_report_fd@@Base+0x44b0>  // b.none
   23694:	ldr	x0, [sp, #48]
   23698:	add	x0, x0, #0x1
   2369c:	ldr	x1, [sp, #56]
   236a0:	add	x0, x1, x0
   236a4:	b	236bc <__sanitizer_set_report_fd@@Base+0x44c4>
   236a8:	ldr	x0, [sp, #40]
   236ac:	add	x0, x0, #0x1
   236b0:	str	x0, [sp, #56]
   236b4:	b	235f4 <__sanitizer_set_report_fd@@Base+0x43fc>
   236b8:	mov	x0, #0x0                   	// #0
   236bc:	ldr	x30, [sp], #64
   236c0:	ret
   236c4:	str	x30, [sp, #-96]!
   236c8:	str	x0, [sp, #40]
   236cc:	str	x1, [sp, #32]
   236d0:	str	w2, [sp, #28]
   236d4:	ldrsw	x0, [sp, #28]
   236d8:	lsl	x3, x0, #3
   236dc:	mov	w2, #0x0                   	// #0
   236e0:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   236e4:	add	x1, x0, #0x188
   236e8:	mov	x0, x3
   236ec:	bl	26a50 <__sanitizer_set_report_fd@@Base+0x7858>
   236f0:	mov	x1, x0
   236f4:	ldr	x0, [sp, #32]
   236f8:	str	x1, [x0]
   236fc:	add	x2, sp, #0x30
   23700:	add	x1, sp, #0x38
   23704:	add	x0, sp, #0x40
   23708:	mov	x5, #0x0                   	// #0
   2370c:	mov	x4, #0x100000              	// #1048576
   23710:	mov	x3, x2
   23714:	mov	x2, x1
   23718:	mov	x1, x0
   2371c:	ldr	x0, [sp, #40]
   23720:	bl	1ec3c <__sanitizer_cov_pcs_init@@Base+0x3ba0>
   23724:	and	w0, w0, #0xff
   23728:	eor	w0, w0, #0x1
   2372c:	and	w0, w0, #0xff
   23730:	cmp	w0, #0x0
   23734:	b.eq	23748 <__sanitizer_set_report_fd@@Base+0x4550>  // b.none
   23738:	ldr	x0, [sp, #32]
   2373c:	ldr	x0, [x0]
   23740:	str	xzr, [x0]
   23744:	b	23854 <__sanitizer_set_report_fd@@Base+0x465c>
   23748:	ldr	x0, [sp, #32]
   2374c:	ldr	x0, [x0]
   23750:	ldr	x1, [sp, #64]
   23754:	str	x1, [x0]
   23758:	mov	w0, #0x1                   	// #1
   2375c:	str	w0, [sp, #92]
   23760:	mov	w0, #0x1                   	// #1
   23764:	str	w0, [sp, #88]
   23768:	ldr	x1, [sp, #64]
   2376c:	ldrsw	x0, [sp, #88]
   23770:	add	x0, x1, x0
   23774:	ldrb	w0, [x0]
   23778:	cmp	w0, #0x0
   2377c:	b.ne	23828 <__sanitizer_set_report_fd@@Base+0x4630>  // b.any
   23780:	ldr	x1, [sp, #64]
   23784:	ldrsw	x0, [sp, #88]
   23788:	add	x0, x0, #0x1
   2378c:	add	x0, x1, x0
   23790:	ldrb	w0, [x0]
   23794:	cmp	w0, #0x0
   23798:	b.eq	23838 <__sanitizer_set_report_fd@@Base+0x4640>  // b.none
   2379c:	ldr	x2, [sp, #64]
   237a0:	ldrsw	x0, [sp, #88]
   237a4:	add	x1, x0, #0x1
   237a8:	ldr	x0, [sp, #32]
   237ac:	ldr	x3, [x0]
   237b0:	ldrsw	x0, [sp, #92]
   237b4:	lsl	x0, x0, #3
   237b8:	add	x0, x3, x0
   237bc:	add	x1, x2, x1
   237c0:	str	x1, [x0]
   237c4:	ldrsw	x0, [sp, #92]
   237c8:	str	x0, [sp, #80]
   237cc:	ldr	w0, [sp, #28]
   237d0:	sub	w0, w0, #0x1
   237d4:	sxtw	x0, w0
   237d8:	str	x0, [sp, #72]
   237dc:	ldr	x1, [sp, #80]
   237e0:	ldr	x0, [sp, #72]
   237e4:	cmp	x1, x0
   237e8:	cset	w0, hi  // hi = pmore
   237ec:	and	w0, w0, #0xff
   237f0:	and	x0, x0, #0xff
   237f4:	cmp	x0, #0x0
   237f8:	b.eq	2381c <__sanitizer_set_report_fd@@Base+0x4624>  // b.none
   237fc:	ldr	x4, [sp, #72]
   23800:	ldr	x3, [sp, #80]
   23804:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   23808:	add	x2, x0, #0x1a0
   2380c:	mov	w1, #0x23f                 	// #575
   23810:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   23814:	add	x0, x0, #0x1c0
   23818:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2381c:	ldr	w0, [sp, #92]
   23820:	add	w0, w0, #0x1
   23824:	str	w0, [sp, #92]
   23828:	ldr	w0, [sp, #88]
   2382c:	add	w0, w0, #0x1
   23830:	str	w0, [sp, #88]
   23834:	b	23768 <__sanitizer_set_report_fd@@Base+0x4570>
   23838:	nop
   2383c:	ldr	x0, [sp, #32]
   23840:	ldr	x1, [x0]
   23844:	ldrsw	x0, [sp, #92]
   23848:	lsl	x0, x0, #3
   2384c:	add	x0, x1, x0
   23850:	str	xzr, [x0]
   23854:	ldr	x30, [sp], #96
   23858:	ret
   2385c:	str	x30, [sp, #-48]!
   23860:	str	x0, [sp, #24]
   23864:	str	x1, [sp, #16]
   23868:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   2386c:	ldr	x0, [x0, #4032]
   23870:	cmp	x0, #0x0
   23874:	b.eq	238c4 <__sanitizer_set_report_fd@@Base+0x46cc>  // b.none
   23878:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   2387c:	ldr	x0, [x0, #4032]
   23880:	ldr	x0, [x0]
   23884:	str	x0, [sp, #40]
   23888:	ldr	x0, [sp, #40]
   2388c:	ldr	x0, [x0]
   23890:	str	w0, [sp, #36]
   23894:	ldr	x0, [sp, #40]
   23898:	add	x1, x0, #0x8
   2389c:	ldr	x0, [sp, #24]
   238a0:	str	x1, [x0]
   238a4:	ldrsw	x0, [sp, #36]
   238a8:	add	x0, x0, #0x2
   238ac:	lsl	x0, x0, #3
   238b0:	ldr	x1, [sp, #40]
   238b4:	add	x1, x1, x0
   238b8:	ldr	x0, [sp, #16]
   238bc:	str	x1, [x0]
   238c0:	b	238ec <__sanitizer_set_report_fd@@Base+0x46f4>
   238c4:	mov	w2, #0x7d0                 	// #2000
   238c8:	ldr	x1, [sp, #24]
   238cc:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   238d0:	add	x0, x0, #0x208
   238d4:	bl	236c4 <__sanitizer_set_report_fd@@Base+0x44cc>
   238d8:	mov	w2, #0x7d0                 	// #2000
   238dc:	ldr	x1, [sp, #16]
   238e0:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   238e4:	add	x0, x0, #0x170
   238e8:	bl	236c4 <__sanitizer_set_report_fd@@Base+0x44cc>
   238ec:	nop
   238f0:	ldr	x30, [sp], #48
   238f4:	ret
   238f8:	str	x30, [sp, #-32]!
   238fc:	add	x1, sp, #0x10
   23900:	add	x0, sp, #0x18
   23904:	bl	2385c <__sanitizer_set_report_fd@@Base+0x4664>
   23908:	ldr	x0, [sp, #24]
   2390c:	ldr	x30, [sp], #32
   23910:	ret
   23914:	str	x30, [sp, #-80]!
   23918:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   2391c:	add	x0, x0, #0x220
   23920:	str	x0, [sp, #72]
   23924:	add	x1, sp, #0x20
   23928:	add	x0, sp, #0x28
   2392c:	bl	2385c <__sanitizer_set_report_fd@@Base+0x4664>
   23930:	ldr	x0, [sp, #40]
   23934:	ldr	x1, [sp, #32]
   23938:	mov	x2, x1
   2393c:	mov	x1, x0
   23940:	ldr	x0, [sp, #72]
   23944:	bl	233b4 <__sanitizer_set_report_fd@@Base+0x41bc>
   23948:	str	x0, [sp, #64]
   2394c:	add	x0, sp, #0x1c
   23950:	mov	x1, x0
   23954:	ldr	x0, [sp, #64]
   23958:	bl	22e9c <__sanitizer_set_report_fd@@Base+0x3ca4>
   2395c:	and	w0, w0, #0xff
   23960:	and	x0, x0, #0xff
   23964:	str	x0, [sp, #56]
   23968:	mov	x0, #0x1                   	// #1
   2396c:	str	x0, [sp, #48]
   23970:	ldr	x1, [sp, #56]
   23974:	ldr	x0, [sp, #48]
   23978:	cmp	x1, x0
   2397c:	cset	w0, ne  // ne = any
   23980:	and	w0, w0, #0xff
   23984:	and	x0, x0, #0xff
   23988:	cmp	x0, #0x0
   2398c:	b.eq	239b0 <__sanitizer_set_report_fd@@Base+0x47b8>  // b.none
   23990:	ldr	x4, [sp, #48]
   23994:	ldr	x3, [sp, #56]
   23998:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   2399c:	add	x2, x0, #0x230
   239a0:	mov	w1, #0x286                 	// #646
   239a4:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   239a8:	add	x0, x0, #0x1c0
   239ac:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   239b0:	ldr	w0, [sp, #28]
   239b4:	mov	w1, w0
   239b8:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   239bc:	add	x0, x0, #0x260
   239c0:	bl	2a350 <OnPrint@@Base+0x3a8>
   239c4:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   239c8:	str	x30, [sp, #-32]!
   239cc:	str	x0, [sp, #24]
   239d0:	mov	x2, #0x58                  	// #88
   239d4:	mov	w1, #0x0                   	// #0
   239d8:	ldr	x0, [sp, #24]
   239dc:	bl	21754 <__sanitizer_set_report_fd@@Base+0x255c>
   239e0:	nop
   239e4:	ldr	x30, [sp], #32
   239e8:	ret
   239ec:	str	x30, [sp, #-64]!
   239f0:	str	x0, [sp, #24]
   239f4:	ldr	x0, [sp, #24]
   239f8:	ldr	x0, [x0, #80]
   239fc:	str	x0, [sp, #56]
   23a00:	str	xzr, [sp, #48]
   23a04:	ldr	x1, [sp, #56]
   23a08:	ldr	x0, [sp, #48]
   23a0c:	cmp	x1, x0
   23a10:	cset	w0, ne  // ne = any
   23a14:	and	w0, w0, #0xff
   23a18:	and	x0, x0, #0xff
   23a1c:	cmp	x0, #0x0
   23a20:	b.eq	23a44 <__sanitizer_set_report_fd@@Base+0x484c>  // b.none
   23a24:	ldr	x4, [sp, #48]
   23a28:	ldr	x3, [sp, #56]
   23a2c:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   23a30:	add	x2, x0, #0x280
   23a34:	mov	w1, #0x298                 	// #664
   23a38:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   23a3c:	add	x0, x0, #0x1c0
   23a40:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   23a44:	ldr	x0, [sp, #24]
   23a48:	str	x0, [sp, #40]
   23a4c:	mov	w2, #0x4                   	// #4
   23a50:	mov	w1, #0x1                   	// #1
   23a54:	ldr	x0, [sp, #40]
   23a58:	bl	25244 <__sanitizer_set_report_fd@@Base+0x604c>
   23a5c:	cmp	w0, #0x0
   23a60:	cset	w0, eq  // eq = none
   23a64:	and	w0, w0, #0xff
   23a68:	cmp	w0, #0x0
   23a6c:	b.ne	23abc <__sanitizer_set_report_fd@@Base+0x48c4>  // b.any
   23a70:	mov	w2, #0x4                   	// #4
   23a74:	mov	w1, #0x2                   	// #2
   23a78:	ldr	x0, [sp, #40]
   23a7c:	bl	25244 <__sanitizer_set_report_fd@@Base+0x604c>
   23a80:	cmp	w0, #0x0
   23a84:	cset	w0, ne  // ne = any
   23a88:	and	w0, w0, #0xff
   23a8c:	cmp	w0, #0x0
   23a90:	b.eq	23ac0 <__sanitizer_set_report_fd@@Base+0x48c8>  // b.none
   23a94:	ldr	x0, [sp, #40]
   23a98:	mov	x6, #0x0                   	// #0
   23a9c:	mov	x5, #0x0                   	// #0
   23aa0:	mov	x4, #0x0                   	// #0
   23aa4:	mov	x3, #0x2                   	// #2
   23aa8:	mov	x2, #0x80                  	// #128
   23aac:	mov	x1, x0
   23ab0:	mov	x0, #0x62                  	// #98
   23ab4:	bl	22e54 <__sanitizer_set_report_fd@@Base+0x3c5c>
   23ab8:	b	23a70 <__sanitizer_set_report_fd@@Base+0x4878>
   23abc:	nop
   23ac0:	ldr	x30, [sp], #64
   23ac4:	ret
   23ac8:	str	x30, [sp, #-64]!
   23acc:	str	x0, [sp, #24]
   23ad0:	ldr	x0, [sp, #24]
   23ad4:	str	x0, [sp, #56]
   23ad8:	mov	w2, #0x8                   	// #8
   23adc:	mov	w1, #0x0                   	// #0
   23ae0:	ldr	x0, [sp, #56]
   23ae4:	bl	25244 <__sanitizer_set_report_fd@@Base+0x604c>
   23ae8:	str	w0, [sp, #52]
   23aec:	ldr	w0, [sp, #52]
   23af0:	str	x0, [sp, #40]
   23af4:	str	xzr, [sp, #32]
   23af8:	ldr	x1, [sp, #40]
   23afc:	ldr	x0, [sp, #32]
   23b00:	cmp	x1, x0
   23b04:	cset	w0, eq  // eq = none
   23b08:	and	w0, w0, #0xff
   23b0c:	and	x0, x0, #0xff
   23b10:	cmp	x0, #0x0
   23b14:	b.eq	23b38 <__sanitizer_set_report_fd@@Base+0x4940>  // b.none
   23b18:	ldr	x4, [sp, #32]
   23b1c:	ldr	x3, [sp, #40]
   23b20:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   23b24:	add	x2, x0, #0x298
   23b28:	mov	w1, #0x2ab                 	// #683
   23b2c:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   23b30:	add	x0, x0, #0x1c0
   23b34:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   23b38:	ldr	w0, [sp, #52]
   23b3c:	cmp	w0, #0x2
   23b40:	b.ne	23b68 <__sanitizer_set_report_fd@@Base+0x4970>  // b.any
   23b44:	ldr	x0, [sp, #56]
   23b48:	mov	x6, #0x0                   	// #0
   23b4c:	mov	x5, #0x0                   	// #0
   23b50:	mov	x4, #0x0                   	// #0
   23b54:	mov	x3, #0x1                   	// #1
   23b58:	mov	x2, #0x81                  	// #129
   23b5c:	mov	x1, x0
   23b60:	mov	x0, #0x62                  	// #98
   23b64:	bl	22e54 <__sanitizer_set_report_fd@@Base+0x3c5c>
   23b68:	nop
   23b6c:	ldr	x30, [sp], #64
   23b70:	ret
   23b74:	str	x30, [sp, #-64]!
   23b78:	str	x0, [sp, #24]
   23b7c:	ldr	x0, [sp, #24]
   23b80:	str	x0, [sp, #56]
   23b84:	str	xzr, [sp, #48]
   23b88:	mov	w1, #0x1                   	// #1
   23b8c:	ldr	x0, [sp, #56]
   23b90:	bl	ab3c <__lsan_do_recoverable_leak_check@@Base+0x9b0>
   23b94:	mov	w0, w0
   23b98:	str	x0, [sp, #40]
   23b9c:	ldr	x1, [sp, #48]
   23ba0:	ldr	x0, [sp, #40]
   23ba4:	cmp	x1, x0
   23ba8:	cset	w0, eq  // eq = none
   23bac:	and	w0, w0, #0xff
   23bb0:	and	x0, x0, #0xff
   23bb4:	cmp	x0, #0x0
   23bb8:	b.eq	23bdc <__sanitizer_set_report_fd@@Base+0x49e4>  // b.none
   23bbc:	ldr	x4, [sp, #40]
   23bc0:	ldr	x3, [sp, #48]
   23bc4:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   23bc8:	add	x2, x0, #0x2b8
   23bcc:	mov	w1, #0x2b9                 	// #697
   23bd0:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   23bd4:	add	x0, x0, #0x1c0
   23bd8:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   23bdc:	nop
   23be0:	ldr	x30, [sp], #64
   23be4:	ret
   23be8:	str	x30, [sp, #-48]!
   23bec:	str	w0, [sp, #44]
   23bf0:	str	w1, [sp, #40]
   23bf4:	str	x2, [sp, #32]
   23bf8:	str	x3, [sp, #24]
   23bfc:	ldrsw	x0, [sp, #44]
   23c00:	ldrsw	x1, [sp, #40]
   23c04:	ldr	x2, [sp, #32]
   23c08:	ldr	x3, [sp, #24]
   23c0c:	mov	x4, x3
   23c10:	mov	x3, x2
   23c14:	mov	x2, x1
   23c18:	mov	x1, x0
   23c1c:	mov	x0, #0x75                  	// #117
   23c20:	bl	22ddc <__sanitizer_set_report_fd@@Base+0x3be4>
   23c24:	ldr	x30, [sp], #48
   23c28:	ret
   23c2c:	str	x30, [sp, #-32]!
   23c30:	str	w0, [sp, #28]
   23c34:	str	x1, [sp, #16]
   23c38:	str	w2, [sp, #24]
   23c3c:	ldrsw	x0, [sp, #28]
   23c40:	ldr	x1, [sp, #16]
   23c44:	ldrsw	x2, [sp, #24]
   23c48:	mov	x4, #0x0                   	// #0
   23c4c:	mov	x3, x2
   23c50:	mov	x2, x1
   23c54:	mov	x1, x0
   23c58:	mov	x0, #0x104                 	// #260
   23c5c:	bl	22ddc <__sanitizer_set_report_fd@@Base+0x3be4>
   23c60:	ldr	x30, [sp], #32
   23c64:	ret
   23c68:	str	x30, [sp, #-16]!
   23c6c:	mov	x0, #0xac                  	// #172
   23c70:	bl	22d4c <__sanitizer_set_report_fd@@Base+0x3b54>
   23c74:	ldr	x30, [sp], #16
   23c78:	ret
   23c7c:	str	x30, [sp, #-16]!
   23c80:	mov	x0, #0xad                  	// #173
   23c84:	bl	22d4c <__sanitizer_set_report_fd@@Base+0x3b54>
   23c88:	ldr	x30, [sp], #16
   23c8c:	ret
   23c90:	str	x30, [sp, #-32]!
   23c94:	str	w0, [sp, #28]
   23c98:	str	x1, [sp, #16]
   23c9c:	str	w2, [sp, #24]
   23ca0:	ldrsw	x0, [sp, #28]
   23ca4:	ldr	x1, [sp, #16]
   23ca8:	ldr	w2, [sp, #24]
   23cac:	mov	x3, x2
   23cb0:	mov	x2, x1
   23cb4:	mov	x1, x0
   23cb8:	mov	x0, #0x3d                  	// #61
   23cbc:	bl	22dac <__sanitizer_set_report_fd@@Base+0x3bb4>
   23cc0:	ldr	x30, [sp], #32
   23cc4:	ret
   23cc8:	str	x30, [sp, #-32]!
   23ccc:	str	w0, [sp, #28]
   23cd0:	str	x1, [sp, #16]
   23cd4:	str	w2, [sp, #24]
   23cd8:	ldrsw	x0, [sp, #28]
   23cdc:	ldr	x1, [sp, #16]
   23ce0:	ldrsw	x2, [sp, #24]
   23ce4:	mov	x3, x2
   23ce8:	mov	x2, x1
   23cec:	mov	x1, x0
   23cf0:	mov	x0, #0x3e                  	// #62
   23cf4:	bl	22dac <__sanitizer_set_report_fd@@Base+0x3bb4>
   23cf8:	ldr	x30, [sp], #32
   23cfc:	ret
   23d00:	str	x30, [sp, #-64]!
   23d04:	str	w0, [sp, #60]
   23d08:	str	x1, [sp, #48]
   23d0c:	str	x2, [sp, #40]
   23d10:	str	x3, [sp, #32]
   23d14:	str	x4, [sp, #24]
   23d18:	ldrsw	x0, [sp, #60]
   23d1c:	ldr	x1, [sp, #48]
   23d20:	ldr	x2, [sp, #40]
   23d24:	ldr	x3, [sp, #24]
   23d28:	mov	x5, x3
   23d2c:	ldr	x4, [sp, #32]
   23d30:	mov	x3, x2
   23d34:	mov	x2, x1
   23d38:	mov	x1, x0
   23d3c:	mov	x0, #0xa7                  	// #167
   23d40:	bl	22e14 <__sanitizer_set_report_fd@@Base+0x3c1c>
   23d44:	ldr	x30, [sp], #64
   23d48:	ret
   23d4c:	str	x30, [sp, #-32]!
   23d50:	str	x0, [sp, #24]
   23d54:	str	x1, [sp, #16]
   23d58:	ldr	x0, [sp, #24]
   23d5c:	ldr	x1, [sp, #16]
   23d60:	mov	x2, x1
   23d64:	mov	x1, x0
   23d68:	mov	x0, #0x84                  	// #132
   23d6c:	bl	22d84 <__sanitizer_set_report_fd@@Base+0x3b8c>
   23d70:	ldr	x30, [sp], #32
   23d74:	ret
   23d78:	str	x30, [sp, #-16]!
   23d7c:	mov	x2, #0x0                   	// #0
   23d80:	mov	x1, #0x11                  	// #17
   23d84:	mov	x0, #0xdc                  	// #220
   23d88:	bl	22d84 <__sanitizer_set_report_fd@@Base+0x3b8c>
   23d8c:	ldr	x30, [sp], #16
   23d90:	ret
   23d94:	str	x30, [sp, #-144]!
   23d98:	str	w0, [sp, #44]
   23d9c:	str	x1, [sp, #32]
   23da0:	str	x2, [sp, #24]
   23da4:	add	x0, sp, #0x58
   23da8:	mov	x2, #0x20                  	// #32
   23dac:	mov	w1, #0x0                   	// #0
   23db0:	bl	21754 <__sanitizer_set_report_fd@@Base+0x255c>
   23db4:	add	x0, sp, #0x38
   23db8:	mov	x2, #0x20                  	// #32
   23dbc:	mov	w1, #0x0                   	// #0
   23dc0:	bl	21754 <__sanitizer_set_report_fd@@Base+0x255c>
   23dc4:	ldr	x0, [sp, #32]
   23dc8:	str	x0, [sp, #136]
   23dcc:	ldr	x0, [sp, #24]
   23dd0:	str	x0, [sp, #128]
   23dd4:	ldr	x0, [sp, #136]
   23dd8:	cmp	x0, #0x0
   23ddc:	b.eq	23e30 <__sanitizer_set_report_fd@@Base+0x4c38>  // b.none
   23de0:	ldr	x0, [sp, #136]
   23de4:	ldr	x0, [x0]
   23de8:	str	x0, [sp, #88]
   23dec:	ldr	x0, [sp, #136]
   23df0:	ldr	x0, [x0]
   23df4:	str	x0, [sp, #88]
   23df8:	ldr	x0, [sp, #136]
   23dfc:	add	x1, x0, #0x8
   23e00:	add	x0, sp, #0x58
   23e04:	add	x0, x0, #0x18
   23e08:	mov	x2, #0x8                   	// #8
   23e0c:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
   23e10:	ldr	x0, [sp, #136]
   23e14:	ldr	w0, [x0, #136]
   23e18:	orr	w0, w0, #0x4000000
   23e1c:	sxtw	x0, w0
   23e20:	str	x0, [sp, #96]
   23e24:	ldr	x0, [sp, #136]
   23e28:	ldr	x0, [x0, #144]
   23e2c:	str	x0, [sp, #104]
   23e30:	ldrsw	x5, [sp, #44]
   23e34:	ldr	x0, [sp, #136]
   23e38:	cmp	x0, #0x0
   23e3c:	b.eq	23e48 <__sanitizer_set_report_fd@@Base+0x4c50>  // b.none
   23e40:	add	x0, sp, #0x58
   23e44:	b	23e4c <__sanitizer_set_report_fd@@Base+0x4c54>
   23e48:	mov	x0, #0x0                   	// #0
   23e4c:	ldr	x1, [sp, #128]
   23e50:	cmp	x1, #0x0
   23e54:	b.eq	23e60 <__sanitizer_set_report_fd@@Base+0x4c68>  // b.none
   23e58:	add	x1, sp, #0x38
   23e5c:	b	23e64 <__sanitizer_set_report_fd@@Base+0x4c6c>
   23e60:	mov	x1, #0x0                   	// #0
   23e64:	mov	x4, #0x8                   	// #8
   23e68:	mov	x3, x1
   23e6c:	mov	x2, x0
   23e70:	mov	x1, x5
   23e74:	mov	x0, #0x86                  	// #134
   23e78:	bl	22ddc <__sanitizer_set_report_fd@@Base+0x3be4>
   23e7c:	str	x0, [sp, #120]
   23e80:	ldr	x0, [sp, #120]
   23e84:	cmp	x0, #0x0
   23e88:	b.ne	23eec <__sanitizer_set_report_fd@@Base+0x4cf4>  // b.any
   23e8c:	ldr	x0, [sp, #128]
   23e90:	cmp	x0, #0x0
   23e94:	b.eq	23eec <__sanitizer_set_report_fd@@Base+0x4cf4>  // b.none
   23e98:	ldr	x1, [sp, #56]
   23e9c:	ldr	x0, [sp, #128]
   23ea0:	str	x1, [x0]
   23ea4:	ldr	x1, [sp, #56]
   23ea8:	ldr	x0, [sp, #128]
   23eac:	str	x1, [x0]
   23eb0:	ldr	x0, [sp, #128]
   23eb4:	add	x3, x0, #0x8
   23eb8:	add	x0, sp, #0x38
   23ebc:	add	x0, x0, #0x18
   23ec0:	mov	x2, #0x8                   	// #8
   23ec4:	mov	x1, x0
   23ec8:	mov	x0, x3
   23ecc:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
   23ed0:	ldr	x0, [sp, #64]
   23ed4:	mov	w1, w0
   23ed8:	ldr	x0, [sp, #128]
   23edc:	str	w1, [x0, #136]
   23ee0:	ldr	x1, [sp, #72]
   23ee4:	ldr	x0, [sp, #128]
   23ee8:	str	x1, [x0, #144]
   23eec:	ldr	x0, [sp, #120]
   23ef0:	ldr	x30, [sp], #144
   23ef4:	ret
   23ef8:	str	x30, [sp, #-64]!
   23efc:	str	w0, [sp, #44]
   23f00:	str	x1, [sp, #32]
   23f04:	str	x2, [sp, #24]
   23f08:	ldr	x0, [sp, #32]
   23f0c:	str	x0, [sp, #56]
   23f10:	ldr	x0, [sp, #24]
   23f14:	str	x0, [sp, #48]
   23f18:	ldrsw	x0, [sp, #44]
   23f1c:	ldr	x1, [sp, #56]
   23f20:	mov	x2, x1
   23f24:	ldr	x1, [sp, #48]
   23f28:	mov	x4, #0x8                   	// #8
   23f2c:	mov	x3, x1
   23f30:	mov	x1, x0
   23f34:	mov	x0, #0x87                  	// #135
   23f38:	bl	22ddc <__sanitizer_set_report_fd@@Base+0x3be4>
   23f3c:	ldr	x30, [sp], #64
   23f40:	ret
   23f44:	str	x30, [sp, #-32]!
   23f48:	str	x0, [sp, #24]
   23f4c:	mov	x2, #0x80                  	// #128
   23f50:	mov	w1, #0xff                  	// #255
   23f54:	ldr	x0, [sp, #24]
   23f58:	bl	21754 <__sanitizer_set_report_fd@@Base+0x255c>
   23f5c:	nop
   23f60:	ldr	x30, [sp], #32
   23f64:	ret
   23f68:	str	x30, [sp, #-32]!
   23f6c:	str	x0, [sp, #24]
   23f70:	mov	x2, #0x80                  	// #128
   23f74:	mov	w1, #0x0                   	// #0
   23f78:	ldr	x0, [sp, #24]
   23f7c:	bl	21754 <__sanitizer_set_report_fd@@Base+0x255c>
   23f80:	nop
   23f84:	ldr	x30, [sp], #32
   23f88:	ret
   23f8c:	str	x30, [sp, #-96]!
   23f90:	str	x0, [sp, #24]
   23f94:	str	w1, [sp, #20]
   23f98:	ldr	w0, [sp, #20]
   23f9c:	sub	w0, w0, #0x1
   23fa0:	str	w0, [sp, #20]
   23fa4:	ldrsw	x0, [sp, #20]
   23fa8:	str	x0, [sp, #88]
   23fac:	str	xzr, [sp, #80]
   23fb0:	ldr	x1, [sp, #88]
   23fb4:	ldr	x0, [sp, #80]
   23fb8:	cmp	x1, x0
   23fbc:	cset	w0, cc  // cc = lo, ul, last
   23fc0:	and	w0, w0, #0xff
   23fc4:	and	x0, x0, #0xff
   23fc8:	cmp	x0, #0x0
   23fcc:	b.eq	23ff0 <__sanitizer_set_report_fd@@Base+0x4df8>  // b.none
   23fd0:	ldr	x4, [sp, #80]
   23fd4:	ldr	x3, [sp, #88]
   23fd8:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   23fdc:	add	x2, x0, #0x2f8
   23fe0:	mov	w1, #0x380                 	// #896
   23fe4:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   23fe8:	add	x0, x0, #0x1c0
   23fec:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   23ff0:	ldrsw	x0, [sp, #20]
   23ff4:	str	x0, [sp, #72]
   23ff8:	mov	x0, #0x400                 	// #1024
   23ffc:	str	x0, [sp, #64]
   24000:	ldr	x1, [sp, #72]
   24004:	ldr	x0, [sp, #64]
   24008:	cmp	x1, x0
   2400c:	cset	w0, cs  // cs = hs, nlast
   24010:	and	w0, w0, #0xff
   24014:	and	x0, x0, #0xff
   24018:	cmp	x0, #0x0
   2401c:	b.eq	24040 <__sanitizer_set_report_fd@@Base+0x4e48>  // b.none
   24020:	ldr	x4, [sp, #64]
   24024:	ldr	x3, [sp, #72]
   24028:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   2402c:	add	x2, x0, #0x310
   24030:	mov	w1, #0x381                 	// #897
   24034:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   24038:	add	x0, x0, #0x1c0
   2403c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   24040:	ldr	x0, [sp, #24]
   24044:	str	x0, [sp, #56]
   24048:	ldrsw	x0, [sp, #20]
   2404c:	lsr	x0, x0, #3
   24050:	str	x0, [sp, #48]
   24054:	ldrsw	x0, [sp, #20]
   24058:	and	x0, x0, #0x7
   2405c:	str	x0, [sp, #40]
   24060:	ldr	x1, [sp, #56]
   24064:	ldr	x0, [sp, #48]
   24068:	add	x0, x1, x0
   2406c:	ldrb	w0, [x0]
   24070:	sxtb	w1, w0
   24074:	ldr	x0, [sp, #40]
   24078:	mov	w2, w0
   2407c:	mov	w0, #0x1                   	// #1
   24080:	lsl	w0, w0, w2
   24084:	sxtb	w0, w0
   24088:	mvn	w0, w0
   2408c:	sxtb	w0, w0
   24090:	and	w0, w1, w0
   24094:	sxtb	w0, w0
   24098:	and	w2, w0, #0xff
   2409c:	ldr	x1, [sp, #56]
   240a0:	ldr	x0, [sp, #48]
   240a4:	add	x0, x1, x0
   240a8:	mov	w1, w2
   240ac:	strb	w1, [x0]
   240b0:	nop
   240b4:	ldr	x30, [sp], #96
   240b8:	ret
   240bc:	str	x30, [sp, #-96]!
   240c0:	str	x0, [sp, #24]
   240c4:	str	w1, [sp, #20]
   240c8:	ldr	w0, [sp, #20]
   240cc:	sub	w0, w0, #0x1
   240d0:	str	w0, [sp, #20]
   240d4:	ldrsw	x0, [sp, #20]
   240d8:	str	x0, [sp, #88]
   240dc:	str	xzr, [sp, #80]
   240e0:	ldr	x1, [sp, #88]
   240e4:	ldr	x0, [sp, #80]
   240e8:	cmp	x1, x0
   240ec:	cset	w0, cc  // cc = lo, ul, last
   240f0:	and	w0, w0, #0xff
   240f4:	and	x0, x0, #0xff
   240f8:	cmp	x0, #0x0
   240fc:	b.eq	24120 <__sanitizer_set_report_fd@@Base+0x4f28>  // b.none
   24100:	ldr	x4, [sp, #80]
   24104:	ldr	x3, [sp, #88]
   24108:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   2410c:	add	x2, x0, #0x2f8
   24110:	mov	w1, #0x38a                 	// #906
   24114:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   24118:	add	x0, x0, #0x1c0
   2411c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   24120:	ldrsw	x0, [sp, #20]
   24124:	str	x0, [sp, #72]
   24128:	mov	x0, #0x400                 	// #1024
   2412c:	str	x0, [sp, #64]
   24130:	ldr	x1, [sp, #72]
   24134:	ldr	x0, [sp, #64]
   24138:	cmp	x1, x0
   2413c:	cset	w0, cs  // cs = hs, nlast
   24140:	and	w0, w0, #0xff
   24144:	and	x0, x0, #0xff
   24148:	cmp	x0, #0x0
   2414c:	b.eq	24170 <__sanitizer_set_report_fd@@Base+0x4f78>  // b.none
   24150:	ldr	x4, [sp, #64]
   24154:	ldr	x3, [sp, #72]
   24158:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   2415c:	add	x2, x0, #0x310
   24160:	mov	w1, #0x38b                 	// #907
   24164:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   24168:	add	x0, x0, #0x1c0
   2416c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   24170:	ldr	x0, [sp, #24]
   24174:	str	x0, [sp, #56]
   24178:	ldrsw	x0, [sp, #20]
   2417c:	lsr	x0, x0, #3
   24180:	str	x0, [sp, #48]
   24184:	ldrsw	x0, [sp, #20]
   24188:	and	x0, x0, #0x7
   2418c:	str	x0, [sp, #40]
   24190:	ldr	x1, [sp, #56]
   24194:	ldr	x0, [sp, #48]
   24198:	add	x0, x1, x0
   2419c:	ldrb	w0, [x0]
   241a0:	mov	w1, w0
   241a4:	ldr	x0, [sp, #40]
   241a8:	asr	w0, w1, w0
   241ac:	and	w0, w0, #0x1
   241b0:	cmp	w0, #0x0
   241b4:	cset	w0, ne  // ne = any
   241b8:	and	w0, w0, #0xff
   241bc:	ldr	x30, [sp], #96
   241c0:	ret
   241c4:	str	x30, [sp, #-112]!
   241c8:	str	x0, [sp, #24]
   241cc:	str	w1, [sp, #20]
   241d0:	ldr	x0, [sp, #24]
   241d4:	ldr	w1, [sp, #20]
   241d8:	str	w1, [x0]
   241dc:	ldr	x0, [sp, #24]
   241e0:	mov	w1, #0xffffffff            	// #-1
   241e4:	str	w1, [x0, #4]
   241e8:	ldr	x0, [sp, #24]
   241ec:	add	x0, x0, #0x8
   241f0:	mov	x1, #0x1000                	// #4096
   241f4:	bl	abc0 <__lsan_do_recoverable_leak_check@@Base+0xa34>
   241f8:	add	x4, sp, #0x20
   241fc:	ldr	w3, [sp, #20]
   24200:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   24204:	add	x2, x0, #0x338
   24208:	mov	x1, #0x50                  	// #80
   2420c:	mov	x0, x4
   24210:	bl	2a4a8 <OnPrint@@Base+0x500>
   24214:	add	x0, sp, #0x20
   24218:	mov	w1, #0x4000                	// #16384
   2421c:	bl	22fc8 <__sanitizer_set_report_fd@@Base+0x3dd0>
   24220:	mov	w1, w0
   24224:	ldr	x0, [sp, #24]
   24228:	str	w1, [x0, #4]
   2422c:	ldr	x0, [sp, #24]
   24230:	ldr	w0, [x0, #4]
   24234:	sxtw	x0, w0
   24238:	mov	x1, #0x0                   	// #0
   2423c:	bl	22e9c <__sanitizer_set_report_fd@@Base+0x3ca4>
   24240:	and	w0, w0, #0xff
   24244:	cmp	w0, #0x0
   24248:	b.eq	2425c <__sanitizer_set_report_fd@@Base+0x5064>  // b.none
   2424c:	ldr	w1, [sp, #20]
   24250:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   24254:	add	x0, x0, #0x348
   24258:	bl	2a3fc <OnPrint@@Base+0x454>
   2425c:	nop
   24260:	ldr	x30, [sp], #112
   24264:	ret
   24268:	stp	x19, x20, [sp, #-112]!
   2426c:	str	x30, [sp, #16]
   24270:	str	x0, [sp, #40]
   24274:	str	x1, [sp, #32]
   24278:	ldr	x0, [sp, #40]
   2427c:	ldr	w0, [x0, #4]
   24280:	sxtw	x0, w0
   24284:	mov	x1, #0x0                   	// #0
   24288:	bl	22e9c <__sanitizer_set_report_fd@@Base+0x3ca4>
   2428c:	and	w0, w0, #0xff
   24290:	cmp	w0, #0x0
   24294:	b.eq	242a0 <__sanitizer_set_report_fd@@Base+0x50a8>  // b.none
   24298:	mov	w0, #0x0                   	// #0
   2429c:	b	2456c <__sanitizer_set_report_fd@@Base+0x5374>
   242a0:	ldr	x0, [sp, #40]
   242a4:	ldr	w0, [x0, #4]
   242a8:	mov	w2, #0x0                   	// #0
   242ac:	mov	x1, #0x0                   	// #0
   242b0:	bl	23cc8 <__sanitizer_set_report_fd@@Base+0x4ad0>
   242b4:	ldr	x0, [sp, #32]
   242b8:	bl	252a0 <__sanitizer_set_report_fd@@Base+0x60a8>
   242bc:	mov	w0, #0x2                   	// #2
   242c0:	str	w0, [sp, #108]
   242c4:	mov	w0, #0x1                   	// #1
   242c8:	strb	w0, [sp, #107]
   242cc:	ldr	x0, [sp, #40]
   242d0:	add	x19, x0, #0x8
   242d4:	ldr	x0, [sp, #40]
   242d8:	add	x0, x0, #0x8
   242dc:	bl	cbdc <__lsan_do_recoverable_leak_check@@Base+0x2a50>
   242e0:	mov	x1, x0
   242e4:	mov	x0, x19
   242e8:	bl	be28 <__lsan_do_recoverable_leak_check@@Base+0x1c9c>
   242ec:	ldr	x0, [sp, #40]
   242f0:	add	x0, x0, #0x8
   242f4:	bl	1f250 <__sanitizer_set_report_fd@@Base+0x58>
   242f8:	str	x0, [sp, #88]
   242fc:	mov	x0, #0x1000                	// #4096
   24300:	str	x0, [sp, #80]
   24304:	ldr	x1, [sp, #88]
   24308:	ldr	x0, [sp, #80]
   2430c:	cmp	x1, x0
   24310:	cset	w0, cc  // cc = lo, ul, last
   24314:	and	w0, w0, #0xff
   24318:	and	x0, x0, #0xff
   2431c:	cmp	x0, #0x0
   24320:	b.eq	24344 <__sanitizer_set_report_fd@@Base+0x514c>  // b.none
   24324:	ldr	x4, [sp, #80]
   24328:	ldr	x3, [sp, #88]
   2432c:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   24330:	add	x2, x0, #0x370
   24334:	mov	w1, #0x3b5                 	// #949
   24338:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   2433c:	add	x0, x0, #0x1c0
   24340:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   24344:	ldr	x0, [sp, #40]
   24348:	ldr	w19, [x0, #4]
   2434c:	ldr	x0, [sp, #40]
   24350:	add	x0, x0, #0x8
   24354:	bl	bc50 <__lsan_do_recoverable_leak_check@@Base+0x1ac4>
   24358:	mov	x20, x0
   2435c:	ldr	x0, [sp, #40]
   24360:	add	x0, x0, #0x8
   24364:	bl	1f250 <__sanitizer_set_report_fd@@Base+0x58>
   24368:	mov	w2, w0
   2436c:	mov	x1, x20
   24370:	mov	w0, w19
   24374:	bl	23c90 <__sanitizer_set_report_fd@@Base+0x4a98>
   24378:	str	x0, [sp, #72]
   2437c:	ldr	x0, [sp, #72]
   24380:	cmp	x0, #0x0
   24384:	b.ne	24390 <__sanitizer_set_report_fd@@Base+0x5198>  // b.any
   24388:	ldr	w0, [sp, #108]
   2438c:	b	2456c <__sanitizer_set_report_fd@@Base+0x5374>
   24390:	mov	x1, #0x0                   	// #0
   24394:	ldr	x0, [sp, #72]
   24398:	bl	22e9c <__sanitizer_set_report_fd@@Base+0x3ca4>
   2439c:	and	w0, w0, #0xff
   243a0:	cmp	w0, #0x0
   243a4:	b.eq	243c8 <__sanitizer_set_report_fd@@Base+0x51d0>  // b.none
   243a8:	ldr	x0, [sp, #40]
   243ac:	ldr	w0, [x0]
   243b0:	mov	w1, w0
   243b4:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   243b8:	add	x0, x0, #0x390
   243bc:	bl	2a3fc <OnPrint@@Base+0x454>
   243c0:	mov	w0, #0x0                   	// #0
   243c4:	b	2456c <__sanitizer_set_report_fd@@Base+0x5374>
   243c8:	ldr	x0, [sp, #40]
   243cc:	add	x0, x0, #0x8
   243d0:	bl	bc50 <__lsan_do_recoverable_leak_check@@Base+0x1ac4>
   243d4:	str	x0, [sp, #96]
   243d8:	ldr	x1, [sp, #96]
   243dc:	ldr	x0, [sp, #72]
   243e0:	add	x0, x1, x0
   243e4:	str	x0, [sp, #64]
   243e8:	ldr	x1, [sp, #96]
   243ec:	ldr	x0, [sp, #64]
   243f0:	cmp	x1, x0
   243f4:	b.cs	24488 <__sanitizer_set_report_fd@@Base+0x5290>  // b.hs, b.nlast
   243f8:	ldr	x0, [sp, #96]
   243fc:	str	x0, [sp, #56]
   24400:	ldr	x0, [sp, #56]
   24404:	ldrh	w0, [x0, #16]
   24408:	and	x0, x0, #0xffff
   2440c:	ldr	x1, [sp, #96]
   24410:	add	x0, x1, x0
   24414:	str	x0, [sp, #96]
   24418:	ldr	x0, [sp, #56]
   2441c:	ldr	x0, [x0]
   24420:	cmp	x0, #0x1
   24424:	b.ne	24430 <__sanitizer_set_report_fd@@Base+0x5238>  // b.any
   24428:	mov	w0, #0x1                   	// #1
   2442c:	str	w0, [sp, #108]
   24430:	ldr	x0, [sp, #56]
   24434:	ldr	x0, [x0]
   24438:	cmp	x0, #0x0
   2443c:	b.eq	243e8 <__sanitizer_set_report_fd@@Base+0x51f0>  // b.none
   24440:	ldr	x0, [sp, #56]
   24444:	ldrb	w0, [x0, #19]
   24448:	cmp	w0, #0x2f
   2444c:	b.ls	243e8 <__sanitizer_set_report_fd@@Base+0x51f0>  // b.plast
   24450:	ldr	x0, [sp, #56]
   24454:	ldrb	w0, [x0, #19]
   24458:	cmp	w0, #0x39
   2445c:	b.hi	243e8 <__sanitizer_set_report_fd@@Base+0x51f0>  // b.pmore
   24460:	ldr	x19, [sp, #32]
   24464:	ldr	x0, [sp, #56]
   24468:	add	x0, x0, #0x13
   2446c:	bl	213f8 <__sanitizer_set_report_fd@@Base+0x2200>
   24470:	str	x0, [sp, #48]
   24474:	add	x0, sp, #0x30
   24478:	mov	x1, x0
   2447c:	mov	x0, x19
   24480:	bl	252bc <__sanitizer_set_report_fd@@Base+0x60c4>
   24484:	b	243e8 <__sanitizer_set_report_fd@@Base+0x51f0>
   24488:	ldrb	w0, [sp, #107]
   2448c:	eor	w0, w0, #0x1
   24490:	and	w0, w0, #0xff
   24494:	cmp	w0, #0x0
   24498:	b.eq	244a8 <__sanitizer_set_report_fd@@Base+0x52b0>  // b.none
   2449c:	mov	w0, #0x1                   	// #1
   244a0:	str	w0, [sp, #108]
   244a4:	b	24564 <__sanitizer_set_report_fd@@Base+0x536c>
   244a8:	ldr	x0, [sp, #40]
   244ac:	add	x0, x0, #0x8
   244b0:	bl	1f250 <__sanitizer_set_report_fd@@Base+0x58>
   244b4:	sub	x0, x0, #0x400
   244b8:	ldr	x1, [sp, #72]
   244bc:	cmp	x1, x0
   244c0:	cset	w0, hi  // hi = pmore
   244c4:	and	w0, w0, #0xff
   244c8:	cmp	w0, #0x0
   244cc:	b.eq	24500 <__sanitizer_set_report_fd@@Base+0x5308>  // b.none
   244d0:	ldr	x0, [sp, #40]
   244d4:	add	x19, x0, #0x8
   244d8:	ldr	x0, [sp, #40]
   244dc:	add	x0, x0, #0x8
   244e0:	bl	1f250 <__sanitizer_set_report_fd@@Base+0x58>
   244e4:	lsl	x0, x0, #1
   244e8:	mov	x1, x0
   244ec:	mov	x0, x19
   244f0:	bl	be28 <__lsan_do_recoverable_leak_check@@Base+0x1c9c>
   244f4:	mov	w0, #0x1                   	// #1
   244f8:	str	w0, [sp, #108]
   244fc:	b	24564 <__sanitizer_set_report_fd@@Base+0x536c>
   24500:	ldr	x0, [sp, #32]
   24504:	bl	253a0 <__sanitizer_set_report_fd@@Base+0x61a8>
   24508:	and	w0, w0, #0xff
   2450c:	eor	w0, w0, #0x1
   24510:	and	w0, w0, #0xff
   24514:	cmp	w0, #0x0
   24518:	b.eq	24550 <__sanitizer_set_report_fd@@Base+0x5358>  // b.none
   2451c:	ldr	x0, [sp, #32]
   24520:	bl	253c4 <__sanitizer_set_report_fd@@Base+0x61cc>
   24524:	ldr	x0, [x0]
   24528:	mov	w1, w0
   2452c:	ldr	x0, [sp, #40]
   24530:	bl	24578 <__sanitizer_set_report_fd@@Base+0x5380>
   24534:	and	w0, w0, #0xff
   24538:	eor	w0, w0, #0x1
   2453c:	and	w0, w0, #0xff
   24540:	cmp	w0, #0x0
   24544:	b.eq	24550 <__sanitizer_set_report_fd@@Base+0x5358>  // b.none
   24548:	mov	w0, #0x1                   	// #1
   2454c:	b	24554 <__sanitizer_set_report_fd@@Base+0x535c>
   24550:	mov	w0, #0x0                   	// #0
   24554:	cmp	w0, #0x0
   24558:	b.eq	24564 <__sanitizer_set_report_fd@@Base+0x536c>  // b.none
   2455c:	mov	w0, #0x1                   	// #1
   24560:	str	w0, [sp, #108]
   24564:	strb	wzr, [sp, #107]
   24568:	b	242cc <__sanitizer_set_report_fd@@Base+0x50d4>
   2456c:	ldr	x30, [sp, #16]
   24570:	ldp	x19, x20, [sp], #112
   24574:	ret
   24578:	str	x30, [sp, #-128]!
   2457c:	str	x0, [sp, #24]
   24580:	str	w1, [sp, #20]
   24584:	ldr	x0, [sp, #24]
   24588:	ldr	w0, [x0]
   2458c:	add	x5, sp, #0x20
   24590:	ldr	w4, [sp, #20]
   24594:	mov	w3, w0
   24598:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   2459c:	add	x2, x0, #0x3d0
   245a0:	mov	x1, #0x50                  	// #80
   245a4:	mov	x0, x5
   245a8:	bl	2a4a8 <OnPrint@@Base+0x500>
   245ac:	ldr	x0, [sp, #24]
   245b0:	add	x1, x0, #0x8
   245b4:	add	x0, sp, #0x20
   245b8:	mov	x3, #0x0                   	// #0
   245bc:	mov	x2, #0x4000000             	// #67108864
   245c0:	bl	1ee4c <__sanitizer_cov_pcs_init@@Base+0x3db0>
   245c4:	and	w0, w0, #0xff
   245c8:	eor	w0, w0, #0x1
   245cc:	and	w0, w0, #0xff
   245d0:	cmp	w0, #0x0
   245d4:	b.ne	245f0 <__sanitizer_set_report_fd@@Base+0x53f8>  // b.any
   245d8:	ldr	x0, [sp, #24]
   245dc:	add	x0, x0, #0x8
   245e0:	bl	25440 <__sanitizer_set_report_fd@@Base+0x6248>
   245e4:	and	w0, w0, #0xff
   245e8:	cmp	w0, #0x0
   245ec:	b.eq	245f8 <__sanitizer_set_report_fd@@Base+0x5400>  // b.none
   245f0:	mov	w0, #0x1                   	// #1
   245f4:	b	245fc <__sanitizer_set_report_fd@@Base+0x5404>
   245f8:	mov	w0, #0x0                   	// #0
   245fc:	cmp	w0, #0x0
   24600:	b.eq	2460c <__sanitizer_set_report_fd@@Base+0x5414>  // b.none
   24604:	mov	w0, #0x0                   	// #0
   24608:	b	24688 <__sanitizer_set_report_fd@@Base+0x5490>
   2460c:	ldr	x0, [sp, #24]
   24610:	add	x0, x0, #0x8
   24614:	strb	wzr, [sp, #119]
   24618:	add	x1, sp, #0x77
   2461c:	bl	25464 <__sanitizer_set_report_fd@@Base+0x626c>
   24620:	ldr	x0, [sp, #24]
   24624:	add	x0, x0, #0x8
   24628:	bl	bc50 <__lsan_do_recoverable_leak_check@@Base+0x1ac4>
   2462c:	mov	x2, x0
   24630:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   24634:	add	x1, x0, #0x3c8
   24638:	mov	x0, x2
   2463c:	bl	21ef0 <__sanitizer_set_report_fd@@Base+0x2cf8>
   24640:	str	x0, [sp, #120]
   24644:	ldr	x0, [sp, #120]
   24648:	cmp	x0, #0x0
   2464c:	b.ne	24658 <__sanitizer_set_report_fd@@Base+0x5460>  // b.any
   24650:	mov	w0, #0x0                   	// #0
   24654:	b	24688 <__sanitizer_set_report_fd@@Base+0x5490>
   24658:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   2465c:	add	x0, x0, #0x3c8
   24660:	bl	21bac <__sanitizer_set_report_fd@@Base+0x29b4>
   24664:	mov	x1, x0
   24668:	ldr	x0, [sp, #120]
   2466c:	add	x0, x0, x1
   24670:	str	x0, [sp, #120]
   24674:	ldr	x0, [sp, #120]
   24678:	bl	213f8 <__sanitizer_set_report_fd@@Base+0x2200>
   2467c:	cmp	w0, #0x0
   24680:	cset	w0, ne  // ne = any
   24684:	and	w0, w0, #0xff
   24688:	ldr	x30, [sp], #128
   2468c:	ret
   24690:	str	x30, [sp, #-32]!
   24694:	str	x0, [sp, #24]
   24698:	ldr	x0, [sp, #24]
   2469c:	ldr	w0, [x0, #4]
   246a0:	sxtw	x0, w0
   246a4:	mov	x1, #0x0                   	// #0
   246a8:	bl	22e9c <__sanitizer_set_report_fd@@Base+0x3ca4>
   246ac:	and	w0, w0, #0xff
   246b0:	eor	w0, w0, #0x1
   246b4:	and	w0, w0, #0xff
   246b8:	cmp	w0, #0x0
   246bc:	b.eq	246cc <__sanitizer_set_report_fd@@Base+0x54d4>  // b.none
   246c0:	ldr	x0, [sp, #24]
   246c4:	ldr	w0, [x0, #4]
   246c8:	bl	22fa8 <__sanitizer_set_report_fd@@Base+0x3db0>
   246cc:	ldr	x0, [sp, #24]
   246d0:	add	x0, x0, #0x8
   246d4:	bl	abf0 <__lsan_do_recoverable_leak_check@@Base+0xa64>
   246d8:	nop
   246dc:	ldr	x30, [sp], #32
   246e0:	ret
   246e4:	stp	x29, x30, [sp, #-16]!
   246e8:	mov	x29, sp
   246ec:	mov	x0, x29
   246f0:	bl	a324 <__lsan_do_recoverable_leak_check@@Base+0x198>
   246f4:	add	w0, w0, #0x1
   246f8:	mov	x1, #0x1                   	// #1
   246fc:	lsl	x0, x1, x0
   24700:	sub	x0, x0, #0x1
   24704:	ldp	x29, x30, [sp], #16
   24708:	ret
   2470c:	str	x30, [sp, #-32]!
   24710:	bl	246e4 <__sanitizer_set_report_fd@@Base+0x54ec>
   24714:	str	x0, [sp, #24]
   24718:	ldr	x0, [sp, #24]
   2471c:	ldr	x30, [sp], #32
   24720:	ret
   24724:	str	x30, [sp, #-16]!
   24728:	mov	x0, #0x6                   	// #6
   2472c:	bl	6df0 <getauxval@plt>
   24730:	ldr	x30, [sp], #16
   24734:	ret
   24738:	str	x30, [sp, #-80]!
   2473c:	str	x0, [sp, #24]
   24740:	str	x1, [sp, #16]
   24744:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   24748:	add	x0, x0, #0x220
   2474c:	str	x0, [sp, #64]
   24750:	ldr	x2, [sp, #16]
   24754:	ldr	x1, [sp, #24]
   24758:	ldr	x0, [sp, #64]
   2475c:	bl	232a0 <__sanitizer_set_report_fd@@Base+0x40a8>
   24760:	str	x0, [sp, #72]
   24764:	add	x0, sp, #0x24
   24768:	mov	x1, x0
   2476c:	ldr	x0, [sp, #72]
   24770:	bl	22e9c <__sanitizer_set_report_fd@@Base+0x3ca4>
   24774:	strb	w0, [sp, #63]
   24778:	ldrb	w0, [sp, #63]
   2477c:	cmp	w0, #0x0
   24780:	b.eq	24808 <__sanitizer_set_report_fd@@Base+0x5610>  // b.none
   24784:	ldr	w0, [sp, #36]
   24788:	mov	w1, w0
   2478c:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   24790:	add	x0, x0, #0x3e8
   24794:	bl	2a3fc <OnPrint@@Base+0x454>
   24798:	ldr	x3, [sp, #64]
   2479c:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   247a0:	add	x2, x0, #0x448
   247a4:	ldr	x1, [sp, #16]
   247a8:	ldr	x0, [sp, #24]
   247ac:	bl	2a4a8 <OnPrint@@Base+0x500>
   247b0:	sxtw	x0, w0
   247b4:	str	x0, [sp, #72]
   247b8:	ldr	x0, [sp, #72]
   247bc:	str	x0, [sp, #48]
   247c0:	ldr	x0, [sp, #16]
   247c4:	str	x0, [sp, #40]
   247c8:	ldr	x1, [sp, #48]
   247cc:	ldr	x0, [sp, #40]
   247d0:	cmp	x1, x0
   247d4:	cset	w0, cs  // cs = hs, nlast
   247d8:	and	w0, w0, #0xff
   247dc:	and	x0, x0, #0xff
   247e0:	cmp	x0, #0x0
   247e4:	b.eq	24808 <__sanitizer_set_report_fd@@Base+0x5610>  // b.none
   247e8:	ldr	x4, [sp, #40]
   247ec:	ldr	x3, [sp, #48]
   247f0:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   247f4:	add	x2, x0, #0x450
   247f8:	mov	w1, #0x470                 	// #1136
   247fc:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   24800:	add	x0, x0, #0x1c0
   24804:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   24808:	ldr	x0, [sp, #72]
   2480c:	ldr	x30, [sp], #80
   24810:	ret
   24814:	str	x30, [sp, #-64]!
   24818:	str	x0, [sp, #24]
   2481c:	str	x1, [sp, #16]
   24820:	add	x2, sp, #0x28
   24824:	add	x1, sp, #0x30
   24828:	add	x0, sp, #0x38
   2482c:	mov	x5, #0x0                   	// #0
   24830:	mov	x4, #0x100000              	// #1048576
   24834:	mov	x3, x2
   24838:	mov	x2, x1
   2483c:	mov	x1, x0
   24840:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   24844:	add	x0, x0, #0x208
   24848:	bl	1ec3c <__sanitizer_cov_pcs_init@@Base+0x3ba0>
   2484c:	and	w0, w0, #0xff
   24850:	cmp	w0, #0x0
   24854:	b.eq	24884 <__sanitizer_set_report_fd@@Base+0x568c>  // b.none
   24858:	ldr	x0, [sp, #56]
   2485c:	ldr	x2, [sp, #16]
   24860:	mov	x1, x0
   24864:	ldr	x0, [sp, #24]
   24868:	bl	21dfc <__sanitizer_set_report_fd@@Base+0x2c04>
   2486c:	ldr	x0, [sp, #56]
   24870:	ldr	x1, [sp, #48]
   24874:	bl	26af4 <__sanitizer_set_report_fd@@Base+0x78fc>
   24878:	ldr	x0, [sp, #24]
   2487c:	bl	21bac <__sanitizer_set_report_fd@@Base+0x29b4>
   24880:	b	24894 <__sanitizer_set_report_fd@@Base+0x569c>
   24884:	ldr	x1, [sp, #16]
   24888:	ldr	x0, [sp, #24]
   2488c:	bl	24738 <__sanitizer_set_report_fd@@Base+0x5540>
   24890:	nop
   24894:	ldr	x30, [sp], #64
   24898:	ret
   2489c:	str	x30, [sp, #-48]!
   248a0:	str	x0, [sp, #24]
   248a4:	str	x1, [sp, #16]
   248a8:	ldr	x0, [sp, #24]
   248ac:	str	x0, [sp, #40]
   248b0:	ldr	x0, [sp, #40]
   248b4:	ldrb	w0, [x0]
   248b8:	cmp	w0, #0x0
   248bc:	b.eq	248d0 <__sanitizer_set_report_fd@@Base+0x56d8>  // b.none
   248c0:	ldr	x0, [sp, #40]
   248c4:	add	x0, x0, #0x1
   248c8:	str	x0, [sp, #40]
   248cc:	b	248b0 <__sanitizer_set_report_fd@@Base+0x56b8>
   248d0:	ldr	x1, [sp, #40]
   248d4:	ldr	x0, [sp, #24]
   248d8:	cmp	x1, x0
   248dc:	b.ls	24900 <__sanitizer_set_report_fd@@Base+0x5708>  // b.plast
   248e0:	ldr	x0, [sp, #40]
   248e4:	ldrb	w0, [x0]
   248e8:	cmp	w0, #0x2f
   248ec:	b.eq	24900 <__sanitizer_set_report_fd@@Base+0x5708>  // b.none
   248f0:	ldr	x0, [sp, #40]
   248f4:	sub	x0, x0, #0x1
   248f8:	str	x0, [sp, #40]
   248fc:	b	248d0 <__sanitizer_set_report_fd@@Base+0x56d8>
   24900:	ldr	x0, [sp, #40]
   24904:	ldrb	w0, [x0]
   24908:	cmp	w0, #0x2f
   2490c:	b.ne	2491c <__sanitizer_set_report_fd@@Base+0x5724>  // b.any
   24910:	ldr	x0, [sp, #40]
   24914:	add	x0, x0, #0x1
   24918:	str	x0, [sp, #40]
   2491c:	ldr	x0, [sp, #16]
   24920:	bl	21bac <__sanitizer_set_report_fd@@Base+0x29b4>
   24924:	str	x0, [sp, #32]
   24928:	ldr	x2, [sp, #32]
   2492c:	ldr	x1, [sp, #16]
   24930:	ldr	x0, [sp, #40]
   24934:	bl	219dc <__sanitizer_set_report_fd@@Base+0x27e4>
   24938:	cmp	w0, #0x0
   2493c:	cset	w0, ne  // ne = any
   24940:	and	w0, w0, #0xff
   24944:	cmp	w0, #0x0
   24948:	b.eq	24954 <__sanitizer_set_report_fd@@Base+0x575c>  // b.none
   2494c:	mov	w0, #0x0                   	// #0
   24950:	b	24994 <__sanitizer_set_report_fd@@Base+0x579c>
   24954:	ldr	x1, [sp, #40]
   24958:	ldr	x0, [sp, #32]
   2495c:	add	x0, x1, x0
   24960:	ldrb	w0, [x0]
   24964:	cmp	w0, #0x2d
   24968:	b.eq	24984 <__sanitizer_set_report_fd@@Base+0x578c>  // b.none
   2496c:	ldr	x1, [sp, #40]
   24970:	ldr	x0, [sp, #32]
   24974:	add	x0, x1, x0
   24978:	ldrb	w0, [x0]
   2497c:	cmp	w0, #0x2e
   24980:	b.ne	2498c <__sanitizer_set_report_fd@@Base+0x5794>  // b.any
   24984:	mov	w0, #0x1                   	// #1
   24988:	b	24990 <__sanitizer_set_report_fd@@Base+0x5798>
   2498c:	mov	w0, #0x0                   	// #0
   24990:	nop
   24994:	ldr	x30, [sp], #48
   24998:	ret
   2499c:	str	x30, [sp, #-144]!
   249a0:	str	x0, [sp, #24]
   249a4:	str	x1, [sp, #16]
   249a8:	ldr	x0, [sp, #24]
   249ac:	str	x0, [sp, #112]
   249b0:	str	xzr, [sp, #104]
   249b4:	ldr	x1, [sp, #112]
   249b8:	ldr	x0, [sp, #104]
   249bc:	cmp	x1, x0
   249c0:	cset	w0, eq  // eq = none
   249c4:	and	w0, w0, #0xff
   249c8:	and	x0, x0, #0xff
   249cc:	cmp	x0, #0x0
   249d0:	b.eq	249f4 <__sanitizer_set_report_fd@@Base+0x57fc>  // b.none
   249d4:	ldr	x4, [sp, #104]
   249d8:	ldr	x3, [sp, #112]
   249dc:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   249e0:	add	x2, x0, #0x478
   249e4:	mov	w1, #0x495                 	// #1173
   249e8:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   249ec:	add	x0, x0, #0x1c0
   249f0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   249f4:	ldr	x0, [sp, #24]
   249f8:	ldr	x0, [x0]
   249fc:	str	x0, [sp, #96]
   24a00:	ldr	x0, [sp, #96]
   24a04:	str	x0, [sp, #88]
   24a08:	ldr	x0, [sp, #88]
   24a0c:	ldr	x0, [x0, #32]
   24a10:	ldr	x1, [sp, #96]
   24a14:	add	x0, x1, x0
   24a18:	str	x0, [sp, #80]
   24a1c:	ldr	x0, [sp, #88]
   24a20:	ldrh	w0, [x0, #56]
   24a24:	mov	w1, w0
   24a28:	ldr	x0, [sp, #88]
   24a2c:	ldrh	w0, [x0, #54]
   24a30:	mul	w0, w1, w0
   24a34:	sxtw	x0, w0
   24a38:	ldr	x1, [sp, #80]
   24a3c:	add	x0, x1, x0
   24a40:	str	x0, [sp, #72]
   24a44:	mov	x0, #0xffffffffffffffff    	// #-1
   24a48:	str	x0, [sp, #136]
   24a4c:	ldr	x0, [sp, #80]
   24a50:	str	x0, [sp, #128]
   24a54:	ldr	x1, [sp, #128]
   24a58:	ldr	x0, [sp, #72]
   24a5c:	cmp	x1, x0
   24a60:	b.eq	24ab8 <__sanitizer_set_report_fd@@Base+0x58c0>  // b.none
   24a64:	ldr	x0, [sp, #128]
   24a68:	str	x0, [sp, #64]
   24a6c:	ldr	x0, [sp, #64]
   24a70:	ldr	w0, [x0]
   24a74:	cmp	w0, #0x1
   24a78:	b.ne	24a9c <__sanitizer_set_report_fd@@Base+0x58a4>  // b.any
   24a7c:	ldr	x0, [sp, #64]
   24a80:	ldr	x0, [x0, #16]
   24a84:	ldr	x1, [sp, #136]
   24a88:	cmp	x1, x0
   24a8c:	b.ls	24a9c <__sanitizer_set_report_fd@@Base+0x58a4>  // b.plast
   24a90:	ldr	x0, [sp, #64]
   24a94:	ldr	x0, [x0, #16]
   24a98:	str	x0, [sp, #136]
   24a9c:	ldr	x0, [sp, #88]
   24aa0:	ldrh	w0, [x0, #54]
   24aa4:	and	x0, x0, #0xffff
   24aa8:	ldr	x1, [sp, #128]
   24aac:	add	x0, x1, x0
   24ab0:	str	x0, [sp, #128]
   24ab4:	b	24a54 <__sanitizer_set_report_fd@@Base+0x585c>
   24ab8:	ldr	x1, [sp, #96]
   24abc:	ldr	x0, [sp, #136]
   24ac0:	sub	x0, x1, x0
   24ac4:	str	x0, [sp, #56]
   24ac8:	ldr	x0, [sp, #80]
   24acc:	str	x0, [sp, #120]
   24ad0:	ldr	x1, [sp, #120]
   24ad4:	ldr	x0, [sp, #72]
   24ad8:	cmp	x1, x0
   24adc:	b.eq	24b84 <__sanitizer_set_report_fd@@Base+0x598c>  // b.none
   24ae0:	ldr	x0, [sp, #120]
   24ae4:	str	x0, [sp, #48]
   24ae8:	ldr	x0, [sp, #48]
   24aec:	ldr	w0, [x0]
   24af0:	cmp	w0, #0x1
   24af4:	b.ne	24b68 <__sanitizer_set_report_fd@@Base+0x5970>  // b.any
   24af8:	ldr	x0, [sp, #48]
   24afc:	ldr	x1, [x0, #16]
   24b00:	ldr	x0, [sp, #56]
   24b04:	add	x0, x1, x0
   24b08:	str	x0, [sp, #40]
   24b0c:	ldr	x0, [sp, #48]
   24b10:	ldr	x0, [x0, #40]
   24b14:	ldr	x1, [sp, #40]
   24b18:	add	x0, x1, x0
   24b1c:	str	x0, [sp, #32]
   24b20:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
   24b24:	mov	x1, x0
   24b28:	ldr	x0, [sp, #40]
   24b2c:	bl	22318 <__sanitizer_set_report_fd@@Base+0x3120>
   24b30:	str	x0, [sp, #40]
   24b34:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
   24b38:	mov	x1, x0
   24b3c:	ldr	x0, [sp, #32]
   24b40:	bl	a518 <__lsan_do_recoverable_leak_check@@Base+0x38c>
   24b44:	str	x0, [sp, #32]
   24b48:	ldr	x3, [sp, #40]
   24b4c:	ldr	x1, [sp, #32]
   24b50:	ldr	x0, [sp, #40]
   24b54:	sub	x0, x1, x0
   24b58:	ldr	x2, [sp, #16]
   24b5c:	mov	x1, x0
   24b60:	mov	x0, x3
   24b64:	blr	x2
   24b68:	ldr	x0, [sp, #88]
   24b6c:	ldrh	w0, [x0, #54]
   24b70:	and	x0, x0, #0xffff
   24b74:	ldr	x1, [sp, #120]
   24b78:	add	x0, x1, x0
   24b7c:	str	x0, [sp, #120]
   24b80:	b	24ad0 <__sanitizer_set_report_fd@@Base+0x58d8>
   24b84:	nop
   24b88:	ldr	x30, [sp], #144
   24b8c:	ret
   24b90:	str	x30, [sp, #-112]!
   24b94:	str	x0, [sp, #72]
   24b98:	str	x1, [sp, #64]
   24b9c:	str	w2, [sp, #60]
   24ba0:	str	x3, [sp, #48]
   24ba4:	str	x4, [sp, #40]
   24ba8:	str	x5, [sp, #32]
   24bac:	str	x6, [sp, #24]
   24bb0:	ldr	x0, [sp, #72]
   24bb4:	cmp	x0, #0x0
   24bb8:	b.eq	24bc8 <__sanitizer_set_report_fd@@Base+0x59d0>  // b.none
   24bbc:	ldr	x0, [sp, #64]
   24bc0:	cmp	x0, #0x0
   24bc4:	b.ne	24bd0 <__sanitizer_set_report_fd@@Base+0x59d8>  // b.any
   24bc8:	mov	x0, #0xffffffffffffffea    	// #-22
   24bcc:	b	24c9c <__sanitizer_set_report_fd@@Base+0x5aa4>
   24bd0:	str	xzr, [sp, #104]
   24bd4:	ldr	x0, [sp, #64]
   24bd8:	and	x0, x0, #0xf
   24bdc:	str	x0, [sp, #96]
   24be0:	ldr	x1, [sp, #104]
   24be4:	ldr	x0, [sp, #96]
   24be8:	cmp	x1, x0
   24bec:	cset	w0, ne  // ne = any
   24bf0:	and	w0, w0, #0xff
   24bf4:	and	x0, x0, #0xff
   24bf8:	cmp	x0, #0x0
   24bfc:	b.eq	24c20 <__sanitizer_set_report_fd@@Base+0x5a28>  // b.none
   24c00:	ldr	x4, [sp, #96]
   24c04:	ldr	x3, [sp, #104]
   24c08:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   24c0c:	add	x2, x0, #0x490
   24c10:	mov	w1, #0x54b                 	// #1355
   24c14:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   24c18:	add	x0, x0, #0x1c0
   24c1c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   24c20:	ldr	x0, [sp, #64]
   24c24:	sub	x0, x0, #0x10
   24c28:	str	x0, [sp, #64]
   24c2c:	ldr	x1, [sp, #72]
   24c30:	ldr	x0, [sp, #64]
   24c34:	str	x1, [x0]
   24c38:	ldr	x0, [sp, #64]
   24c3c:	add	x0, x0, #0x8
   24c40:	ldr	x1, [sp, #48]
   24c44:	str	x1, [x0]
   24c48:	ldr	x0, [sp, #72]
   24c4c:	ldr	x1, [sp, #64]
   24c50:	ldr	w2, [sp, #60]
   24c54:	ldr	x3, [sp, #48]
   24c58:	ldr	x4, [sp, #40]
   24c5c:	ldr	x5, [sp, #32]
   24c60:	ldr	x6, [sp, #24]
   24c64:	mov	x0, x2
   24c68:	mov	x2, x4
   24c6c:	mov	x3, x5
   24c70:	mov	x4, x6
   24c74:	mov	x8, #0xdc                  	// #220
   24c78:	svc	#0x0
   24c7c:	cmp	x0, #0x0
   24c80:	b.ne	24c94 <__sanitizer_set_report_fd@@Base+0x5a9c>  // b.any
   24c84:	ldp	x1, x0, [sp], #16
   24c88:	blr	x1
   24c8c:	mov	x8, #0x5d                  	// #93
   24c90:	svc	#0x0
   24c94:	str	x0, [sp, #88]
   24c98:	ldr	x0, [sp, #88]
   24c9c:	ldr	x30, [sp], #112
   24ca0:	ret
   24ca4:	str	x30, [sp, #-32]!
   24ca8:	str	w0, [sp, #28]
   24cac:	ldr	w0, [sp, #28]
   24cb0:	cmp	w0, #0xb
   24cb4:	b.eq	24d58 <__sanitizer_set_report_fd@@Base+0x5b60>  // b.none
   24cb8:	ldr	w0, [sp, #28]
   24cbc:	cmp	w0, #0xb
   24cc0:	b.gt	24d70 <__sanitizer_set_report_fd@@Base+0x5b78>
   24cc4:	ldr	w0, [sp, #28]
   24cc8:	cmp	w0, #0x8
   24ccc:	b.eq	24d4c <__sanitizer_set_report_fd@@Base+0x5b54>  // b.none
   24cd0:	ldr	w0, [sp, #28]
   24cd4:	cmp	w0, #0x8
   24cd8:	b.gt	24d70 <__sanitizer_set_report_fd@@Base+0x5b78>
   24cdc:	ldr	w0, [sp, #28]
   24ce0:	cmp	w0, #0x7
   24ce4:	b.eq	24d64 <__sanitizer_set_report_fd@@Base+0x5b6c>  // b.none
   24ce8:	ldr	w0, [sp, #28]
   24cec:	cmp	w0, #0x7
   24cf0:	b.gt	24d70 <__sanitizer_set_report_fd@@Base+0x5b78>
   24cf4:	ldr	w0, [sp, #28]
   24cf8:	cmp	w0, #0x6
   24cfc:	b.eq	24d28 <__sanitizer_set_report_fd@@Base+0x5b30>  // b.none
   24d00:	ldr	w0, [sp, #28]
   24d04:	cmp	w0, #0x6
   24d08:	b.gt	24d70 <__sanitizer_set_report_fd@@Base+0x5b78>
   24d0c:	ldr	w0, [sp, #28]
   24d10:	cmp	w0, #0x4
   24d14:	b.eq	24d34 <__sanitizer_set_report_fd@@Base+0x5b3c>  // b.none
   24d18:	ldr	w0, [sp, #28]
   24d1c:	cmp	w0, #0x5
   24d20:	b.eq	24d40 <__sanitizer_set_report_fd@@Base+0x5b48>  // b.none
   24d24:	b	24d70 <__sanitizer_set_report_fd@@Base+0x5b78>
   24d28:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   24d2c:	ldr	w0, [x0, #80]
   24d30:	b	24d74 <__sanitizer_set_report_fd@@Base+0x5b7c>
   24d34:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   24d38:	ldr	w0, [x0, #84]
   24d3c:	b	24d74 <__sanitizer_set_report_fd@@Base+0x5b7c>
   24d40:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   24d44:	ldr	w0, [x0, #88]
   24d48:	b	24d74 <__sanitizer_set_report_fd@@Base+0x5b7c>
   24d4c:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   24d50:	ldr	w0, [x0, #92]
   24d54:	b	24d74 <__sanitizer_set_report_fd@@Base+0x5b7c>
   24d58:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   24d5c:	ldr	w0, [x0, #72]
   24d60:	b	24d74 <__sanitizer_set_report_fd@@Base+0x5b7c>
   24d64:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   24d68:	ldr	w0, [x0, #76]
   24d6c:	b	24d74 <__sanitizer_set_report_fd@@Base+0x5b7c>
   24d70:	mov	w0, #0x0                   	// #0
   24d74:	ldr	x30, [sp], #32
   24d78:	ret
   24d7c:	str	x30, [sp, #-48]!
   24d80:	str	w0, [sp, #28]
   24d84:	ldr	w0, [sp, #28]
   24d88:	bl	24ca4 <__sanitizer_set_report_fd@@Base+0x5aac>
   24d8c:	str	w0, [sp, #44]
   24d90:	ldr	w0, [sp, #44]
   24d94:	cmp	w0, #0x1
   24d98:	b.ne	24dbc <__sanitizer_set_report_fd@@Base+0x5bc4>  // b.any
   24d9c:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   24da0:	ldrb	w0, [x0, #96]
   24da4:	eor	w0, w0, #0x1
   24da8:	and	w0, w0, #0xff
   24dac:	cmp	w0, #0x0
   24db0:	b.eq	24dbc <__sanitizer_set_report_fd@@Base+0x5bc4>  // b.none
   24db4:	mov	w0, #0x1                   	// #1
   24db8:	b	24dc0 <__sanitizer_set_report_fd@@Base+0x5bc8>
   24dbc:	mov	w0, #0x0                   	// #0
   24dc0:	cmp	w0, #0x0
   24dc4:	b.eq	24dd0 <__sanitizer_set_report_fd@@Base+0x5bd8>  // b.none
   24dc8:	mov	w0, #0x2                   	// #2
   24dcc:	b	24dd4 <__sanitizer_set_report_fd@@Base+0x5bdc>
   24dd0:	ldr	w0, [sp, #44]
   24dd4:	ldr	x30, [sp], #48
   24dd8:	ret
   24ddc:	sub	sp, sp, #0x130
   24de0:	str	x30, [sp]
   24de4:	str	x0, [sp, #24]
   24de8:	str	x1, [sp, #16]
   24dec:	add	x0, sp, #0xb0
   24df0:	bl	23f44 <__sanitizer_set_report_fd@@Base+0x4d4c>
   24df4:	add	x0, sp, #0xb0
   24df8:	mov	w1, #0x21                  	// #33
   24dfc:	bl	23f8c <__sanitizer_set_report_fd@@Base+0x4d94>
   24e00:	add	x1, sp, #0x30
   24e04:	add	x0, sp, #0xb0
   24e08:	mov	x2, x1
   24e0c:	mov	x1, x0
   24e10:	mov	w0, #0x2                   	// #2
   24e14:	bl	23ef8 <__sanitizer_set_report_fd@@Base+0x4d00>
   24e18:	add	x0, sp, #0x28
   24e1c:	ldr	x3, [sp, #16]
   24e20:	ldr	x2, [sp, #24]
   24e24:	mov	x1, #0x0                   	// #0
   24e28:	bl	6e60 <_ZN11__sanitizer19real_pthread_createEPvS0_PFS0_S0_ES0_@plt>
   24e2c:	add	x0, sp, #0x30
   24e30:	mov	x2, #0x0                   	// #0
   24e34:	mov	x1, x0
   24e38:	mov	w0, #0x2                   	// #2
   24e3c:	bl	23ef8 <__sanitizer_set_report_fd@@Base+0x4d00>
   24e40:	ldr	x0, [sp, #40]
   24e44:	ldr	x30, [sp]
   24e48:	add	sp, sp, #0x130
   24e4c:	ret
   24e50:	str	x30, [sp, #-32]!
   24e54:	str	x0, [sp, #24]
   24e58:	mov	x1, #0x0                   	// #0
   24e5c:	ldr	x0, [sp, #24]
   24e60:	bl	6b20 <_ZN11__sanitizer17real_pthread_joinEPvPS0_@plt>
   24e64:	nop
   24e68:	ldr	x30, [sp], #32
   24e6c:	ret
   24e70:	sub	sp, sp, #0x20
   24e74:	str	x0, [sp, #8]
   24e78:	str	x1, [sp]
   24e7c:	ldr	x0, [sp, #8]
   24e80:	add	x0, x0, #0x1d0
   24e84:	str	x0, [sp, #24]
   24e88:	ldr	x0, [sp, #24]
   24e8c:	str	x0, [sp, #16]
   24e90:	ldr	x0, [sp, #16]
   24e94:	ldr	w0, [x0, #4]
   24e98:	cmp	w0, #0x0
   24e9c:	b.eq	24eec <__sanitizer_set_report_fd@@Base+0x5cf4>  // b.none
   24ea0:	ldr	x0, [sp, #16]
   24ea4:	ldr	w1, [x0]
   24ea8:	mov	w0, #0x5201                	// #20993
   24eac:	movk	w0, #0x4553, lsl #16
   24eb0:	cmp	w1, w0
   24eb4:	b.ne	24ed0 <__sanitizer_set_report_fd@@Base+0x5cd8>  // b.any
   24eb8:	ldr	x0, [sp, #16]
   24ebc:	ldr	x1, [x0, #8]
   24ec0:	ldr	x0, [sp]
   24ec4:	str	x1, [x0]
   24ec8:	mov	w0, #0x1                   	// #1
   24ecc:	b	24ef4 <__sanitizer_set_report_fd@@Base+0x5cfc>
   24ed0:	ldr	x0, [sp, #16]
   24ed4:	ldr	w0, [x0, #4]
   24ed8:	mov	w0, w0
   24edc:	ldr	x1, [sp, #24]
   24ee0:	add	x0, x1, x0
   24ee4:	str	x0, [sp, #24]
   24ee8:	b	24e88 <__sanitizer_set_report_fd@@Base+0x5c90>
   24eec:	nop
   24ef0:	mov	w0, #0x0                   	// #0
   24ef4:	add	sp, sp, #0x20
   24ef8:	ret
   24efc:	str	x30, [sp, #-48]!
   24f00:	str	x0, [sp, #24]
   24f04:	ldr	x0, [sp, #24]
   24f08:	ldr	x0, [x0, #8]
   24f0c:	str	x0, [sp, #40]
   24f10:	add	x0, sp, #0x20
   24f14:	mov	x1, x0
   24f18:	ldr	x0, [sp, #40]
   24f1c:	bl	24e70 <__sanitizer_set_report_fd@@Base+0x5c78>
   24f20:	and	w0, w0, #0xff
   24f24:	eor	w0, w0, #0x1
   24f28:	and	w0, w0, #0xff
   24f2c:	cmp	w0, #0x0
   24f30:	b.eq	24f3c <__sanitizer_set_report_fd@@Base+0x5d44>  // b.none
   24f34:	mov	w0, #0x0                   	// #0
   24f38:	b	24f5c <__sanitizer_set_report_fd@@Base+0x5d64>
   24f3c:	ldr	x0, [sp, #32]
   24f40:	and	x0, x0, #0x40
   24f44:	cmp	x0, #0x0
   24f48:	b.eq	24f54 <__sanitizer_set_report_fd@@Base+0x5d5c>  // b.none
   24f4c:	mov	w0, #0x2                   	// #2
   24f50:	b	24f58 <__sanitizer_set_report_fd@@Base+0x5d60>
   24f54:	mov	w0, #0x1                   	// #1
   24f58:	nop
   24f5c:	ldr	x30, [sp], #48
   24f60:	ret
   24f64:	sub	sp, sp, #0x10
   24f68:	str	x0, [sp, #8]
   24f6c:	nop
   24f70:	add	sp, sp, #0x10
   24f74:	ret
   24f78:	sub	sp, sp, #0x30
   24f7c:	str	x0, [sp, #24]
   24f80:	str	x1, [sp, #16]
   24f84:	str	x2, [sp, #8]
   24f88:	str	x3, [sp]
   24f8c:	ldr	x0, [sp, #24]
   24f90:	str	x0, [sp, #40]
   24f94:	ldr	x0, [sp, #40]
   24f98:	ldr	x1, [x0, #440]
   24f9c:	ldr	x0, [sp, #16]
   24fa0:	str	x1, [x0]
   24fa4:	ldr	x0, [sp, #40]
   24fa8:	ldr	x1, [x0, #416]
   24fac:	ldr	x0, [sp]
   24fb0:	str	x1, [x0]
   24fb4:	ldr	x0, [sp, #40]
   24fb8:	ldr	x1, [x0, #432]
   24fbc:	ldr	x0, [sp, #8]
   24fc0:	str	x1, [x0]
   24fc4:	nop
   24fc8:	add	sp, sp, #0x30
   24fcc:	ret
   24fd0:	str	x30, [sp, #-32]!
   24fd4:	str	x0, [sp, #24]
   24fd8:	ldr	x0, [sp, #24]
   24fdc:	ldr	x4, [x0, #8]
   24fe0:	ldr	x0, [sp, #24]
   24fe4:	add	x1, x0, #0x18
   24fe8:	ldr	x0, [sp, #24]
   24fec:	add	x2, x0, #0x20
   24ff0:	ldr	x0, [sp, #24]
   24ff4:	add	x0, x0, #0x28
   24ff8:	mov	x3, x0
   24ffc:	mov	x0, x4
   25000:	bl	24f78 <__sanitizer_set_report_fd@@Base+0x5d80>
   25004:	nop
   25008:	ldr	x30, [sp], #32
   2500c:	ret
   25010:	nop
   25014:	ret
   25018:	nop
   2501c:	ret
   25020:	nop
   25024:	ret
   25028:	str	x30, [sp, #-32]!
   2502c:	str	x0, [sp, #24]
   25030:	str	w1, [sp, #20]
   25034:	ldr	w0, [sp, #20]
   25038:	and	w0, w0, #0x8
   2503c:	cmp	w0, #0x0
   25040:	b.eq	2505c <__sanitizer_set_report_fd@@Base+0x5e64>  // b.none
   25044:	ldr	x2, [sp, #24]
   25048:	ldr	x1, [sp, #24]
   2504c:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   25050:	add	x0, x0, #0x4c0
   25054:	bl	2a3fc <OnPrint@@Base+0x454>
   25058:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   2505c:	nop
   25060:	ldr	x30, [sp], #32
   25064:	ret
   25068:	str	x30, [sp, #-80]!
   2506c:	str	x0, [sp, #56]
   25070:	str	x1, [sp, #48]
   25074:	str	x2, [sp, #40]
   25078:	str	x3, [sp, #32]
   2507c:	str	x4, [sp, #24]
   25080:	str	xzr, [sp, #72]
   25084:	str	xzr, [sp, #64]
   25088:	ldr	x1, [sp, #72]
   2508c:	ldr	x0, [sp, #64]
   25090:	cmp	x1, x0
   25094:	cset	w0, eq  // eq = none
   25098:	and	w0, w0, #0xff
   2509c:	and	x0, x0, #0xff
   250a0:	cmp	x0, #0x0
   250a4:	b.eq	250c8 <__sanitizer_set_report_fd@@Base+0x5ed0>  // b.none
   250a8:	ldr	x4, [sp, #64]
   250ac:	ldr	x3, [sp, #72]
   250b0:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   250b4:	add	x2, x0, #0x5d8
   250b8:	mov	w1, #0x80a                 	// #2058
   250bc:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   250c0:	add	x0, x0, #0x1c0
   250c4:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   250c8:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   250cc:	str	x30, [sp, #-80]!
   250d0:	str	x0, [sp, #40]
   250d4:	str	x1, [sp, #32]
   250d8:	strb	w2, [sp, #31]
   250dc:	ldr	x0, [sp, #40]
   250e0:	cmp	x0, #0x0
   250e4:	b.eq	25100 <__sanitizer_set_report_fd@@Base+0x5f08>  // b.none
   250e8:	ldr	x0, [sp, #32]
   250ec:	cmp	x0, #0x0
   250f0:	b.eq	25100 <__sanitizer_set_report_fd@@Base+0x5f08>  // b.none
   250f4:	ldr	x0, [sp, #32]
   250f8:	cmp	x0, #0x100
   250fc:	b.ls	25108 <__sanitizer_set_report_fd@@Base+0x5f10>  // b.plast
   25100:	mov	w0, #0x0                   	// #0
   25104:	b	2523c <__sanitizer_set_report_fd@@Base+0x6044>
   25108:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   2510c:	add	x0, x0, #0xc20
   25110:	bl	16fb4 <__sancov_default_options@@Base+0xe18>
   25114:	and	w0, w0, #0xff
   25118:	cmp	w0, #0x0
   2511c:	cset	w0, eq  // eq = none
   25120:	and	w0, w0, #0xff
   25124:	cmp	w0, #0x0
   25128:	b.eq	251c8 <__sanitizer_set_report_fd@@Base+0x5fd0>  // b.none
   2512c:	ldr	x1, [sp, #40]
   25130:	ldr	x2, [sp, #32]
   25134:	ldrb	w0, [sp, #31]
   25138:	cmp	w0, #0x0
   2513c:	b.eq	25148 <__sanitizer_set_report_fd@@Base+0x5f50>  // b.none
   25140:	mov	x0, #0x0                   	// #0
   25144:	b	2514c <__sanitizer_set_report_fd@@Base+0x5f54>
   25148:	mov	x0, #0x1                   	// #1
   2514c:	mov	x3, x0
   25150:	mov	x0, #0x116                 	// #278
   25154:	bl	22dac <__sanitizer_set_report_fd@@Base+0x3bb4>
   25158:	str	x0, [sp, #72]
   2515c:	str	wzr, [sp, #52]
   25160:	add	x0, sp, #0x34
   25164:	mov	x1, x0
   25168:	ldr	x0, [sp, #72]
   2516c:	bl	22e9c <__sanitizer_set_report_fd@@Base+0x3ca4>
   25170:	and	w0, w0, #0xff
   25174:	cmp	w0, #0x0
   25178:	b.eq	25190 <__sanitizer_set_report_fd@@Base+0x5f98>  // b.none
   2517c:	ldr	w0, [sp, #52]
   25180:	cmp	w0, #0x26
   25184:	b.ne	25190 <__sanitizer_set_report_fd@@Base+0x5f98>  // b.any
   25188:	mov	w0, #0x1                   	// #1
   2518c:	b	25194 <__sanitizer_set_report_fd@@Base+0x5f9c>
   25190:	mov	w0, #0x0                   	// #0
   25194:	cmp	w0, #0x0
   25198:	b.eq	251b0 <__sanitizer_set_report_fd@@Base+0x5fb8>  // b.none
   2519c:	mov	w1, #0x1                   	// #1
   251a0:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   251a4:	add	x0, x0, #0xc20
   251a8:	bl	16fd4 <__sancov_default_options@@Base+0xe38>
   251ac:	b	251c8 <__sanitizer_set_report_fd@@Base+0x5fd0>
   251b0:	ldr	x1, [sp, #72]
   251b4:	ldr	x0, [sp, #32]
   251b8:	cmp	x1, x0
   251bc:	b.ne	251c8 <__sanitizer_set_report_fd@@Base+0x5fd0>  // b.any
   251c0:	mov	w0, #0x1                   	// #1
   251c4:	b	2523c <__sanitizer_set_report_fd@@Base+0x6044>
   251c8:	mov	w1, #0x0                   	// #0
   251cc:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   251d0:	add	x0, x0, #0x618
   251d4:	bl	22fc8 <__sanitizer_set_report_fd@@Base+0x3dd0>
   251d8:	str	x0, [sp, #64]
   251dc:	mov	x1, #0x0                   	// #0
   251e0:	ldr	x0, [sp, #64]
   251e4:	bl	22e9c <__sanitizer_set_report_fd@@Base+0x3ca4>
   251e8:	and	w0, w0, #0xff
   251ec:	cmp	w0, #0x0
   251f0:	b.eq	251fc <__sanitizer_set_report_fd@@Base+0x6004>  // b.none
   251f4:	mov	w0, #0x0                   	// #0
   251f8:	b	2523c <__sanitizer_set_report_fd@@Base+0x6044>
   251fc:	ldr	x0, [sp, #64]
   25200:	ldr	x2, [sp, #32]
   25204:	ldr	x1, [sp, #40]
   25208:	bl	23034 <__sanitizer_set_report_fd@@Base+0x3e3c>
   2520c:	str	x0, [sp, #56]
   25210:	mov	x1, #0x0                   	// #0
   25214:	ldr	x0, [sp, #56]
   25218:	bl	22e9c <__sanitizer_set_report_fd@@Base+0x3ca4>
   2521c:	and	w0, w0, #0xff
   25220:	cmp	w0, #0x0
   25224:	b.eq	25230 <__sanitizer_set_report_fd@@Base+0x6038>  // b.none
   25228:	mov	w0, #0x0                   	// #0
   2522c:	b	2523c <__sanitizer_set_report_fd@@Base+0x6044>
   25230:	ldr	x0, [sp, #64]
   25234:	bl	22fa8 <__sanitizer_set_report_fd@@Base+0x3db0>
   25238:	mov	w0, #0x1                   	// #1
   2523c:	ldr	x30, [sp], #80
   25240:	ret
   25244:	sub	sp, sp, #0x10
   25248:	str	x0, [sp, #8]
   2524c:	str	w1, [sp, #4]
   25250:	str	w2, [sp]
   25254:	ldr	w0, [sp]
   25258:	and	w0, w0, #0x38
   2525c:	cmp	w0, #0x0
   25260:	b.eq	25268 <__sanitizer_set_report_fd@@Base+0x6070>  // b.none
   25264:	dmb	ish
   25268:	ldr	x1, [sp, #8]
   2526c:	ldr	w2, [sp, #4]
   25270:	ldxr	w0, [x1]
   25274:	stxr	w3, w2, [x1]
   25278:	cbnz	w3, 25270 <__sanitizer_set_report_fd@@Base+0x6078>
   2527c:	dmb	ish
   25280:	str	w0, [sp, #4]
   25284:	ldr	w0, [sp]
   25288:	cmp	w0, #0x20
   2528c:	b.ne	25294 <__sanitizer_set_report_fd@@Base+0x609c>  // b.any
   25290:	dmb	ish
   25294:	ldr	w0, [sp, #4]
   25298:	add	sp, sp, #0x10
   2529c:	ret
   252a0:	sub	sp, sp, #0x10
   252a4:	str	x0, [sp, #8]
   252a8:	ldr	x0, [sp, #8]
   252ac:	str	xzr, [x0, #16]
   252b0:	nop
   252b4:	add	sp, sp, #0x10
   252b8:	ret
   252bc:	stp	x19, x30, [sp, #-64]!
   252c0:	str	x0, [sp, #24]
   252c4:	str	x1, [sp, #16]
   252c8:	ldr	x0, [sp, #24]
   252cc:	ldr	x0, [x0, #16]
   252d0:	str	x0, [sp, #56]
   252d4:	ldr	x0, [sp, #24]
   252d8:	bl	ce84 <__lsan_do_recoverable_leak_check@@Base+0x2cf8>
   252dc:	str	x0, [sp, #48]
   252e0:	ldr	x1, [sp, #56]
   252e4:	ldr	x0, [sp, #48]
   252e8:	cmp	x1, x0
   252ec:	cset	w0, hi  // hi = pmore
   252f0:	and	w0, w0, #0xff
   252f4:	and	x0, x0, #0xff
   252f8:	cmp	x0, #0x0
   252fc:	b.eq	25320 <__sanitizer_set_report_fd@@Base+0x6128>  // b.none
   25300:	ldr	x4, [sp, #48]
   25304:	ldr	x3, [sp, #56]
   25308:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   2530c:	add	x2, x0, #0x628
   25310:	mov	w1, #0x1be                 	// #446
   25314:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   25318:	add	x0, x0, #0x40
   2531c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   25320:	ldr	x0, [sp, #24]
   25324:	ldr	x19, [x0, #16]
   25328:	ldr	x0, [sp, #24]
   2532c:	bl	ce84 <__lsan_do_recoverable_leak_check@@Base+0x2cf8>
   25330:	cmp	x19, x0
   25334:	cset	w0, eq  // eq = none
   25338:	and	w0, w0, #0xff
   2533c:	cmp	w0, #0x0
   25340:	b.eq	25364 <__sanitizer_set_report_fd@@Base+0x616c>  // b.none
   25344:	ldr	x0, [sp, #24]
   25348:	ldr	x0, [x0, #16]
   2534c:	add	x0, x0, #0x1
   25350:	bl	a3cc <__lsan_do_recoverable_leak_check@@Base+0x240>
   25354:	str	x0, [sp, #40]
   25358:	ldr	x1, [sp, #40]
   2535c:	ldr	x0, [sp, #24]
   25360:	bl	cea0 <__lsan_do_recoverable_leak_check@@Base+0x2d14>
   25364:	ldr	x0, [sp, #24]
   25368:	ldr	x1, [x0]
   2536c:	ldr	x0, [sp, #24]
   25370:	ldr	x0, [x0, #16]
   25374:	add	x3, x0, #0x1
   25378:	ldr	x2, [sp, #24]
   2537c:	str	x3, [x2, #16]
   25380:	lsl	x0, x0, #3
   25384:	add	x0, x1, x0
   25388:	mov	x2, #0x8                   	// #8
   2538c:	ldr	x1, [sp, #16]
   25390:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
   25394:	nop
   25398:	ldp	x19, x30, [sp], #64
   2539c:	ret
   253a0:	str	x30, [sp, #-32]!
   253a4:	str	x0, [sp, #24]
   253a8:	ldr	x0, [sp, #24]
   253ac:	bl	b1bc <__lsan_do_recoverable_leak_check@@Base+0x1030>
   253b0:	cmp	x0, #0x0
   253b4:	cset	w0, eq  // eq = none
   253b8:	and	w0, w0, #0xff
   253bc:	ldr	x30, [sp], #32
   253c0:	ret
   253c4:	str	x30, [sp, #-48]!
   253c8:	str	x0, [sp, #24]
   253cc:	ldr	x0, [sp, #24]
   253d0:	ldr	x0, [x0, #16]
   253d4:	str	x0, [sp, #40]
   253d8:	str	xzr, [sp, #32]
   253dc:	ldr	x1, [sp, #40]
   253e0:	ldr	x0, [sp, #32]
   253e4:	cmp	x1, x0
   253e8:	cset	w0, ls  // ls = plast
   253ec:	and	w0, w0, #0xff
   253f0:	and	x0, x0, #0xff
   253f4:	cmp	x0, #0x0
   253f8:	b.eq	2541c <__sanitizer_set_report_fd@@Base+0x6224>  // b.none
   253fc:	ldr	x4, [sp, #32]
   25400:	ldr	x3, [sp, #40]
   25404:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   25408:	add	x2, x0, #0x648
   2540c:	mov	w1, #0x1c6                 	// #454
   25410:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   25414:	add	x0, x0, #0x40
   25418:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2541c:	ldr	x0, [sp, #24]
   25420:	ldr	x1, [x0]
   25424:	ldr	x0, [sp, #24]
   25428:	ldr	x0, [x0, #16]
   2542c:	lsl	x0, x0, #3
   25430:	sub	x0, x0, #0x8
   25434:	add	x0, x1, x0
   25438:	ldr	x30, [sp], #48
   2543c:	ret
   25440:	str	x30, [sp, #-32]!
   25444:	str	x0, [sp, #24]
   25448:	ldr	x0, [sp, #24]
   2544c:	bl	1f250 <__sanitizer_set_report_fd@@Base+0x58>
   25450:	cmp	x0, #0x0
   25454:	cset	w0, eq  // eq = none
   25458:	and	w0, w0, #0xff
   2545c:	ldr	x30, [sp], #32
   25460:	ret
   25464:	stp	x19, x30, [sp, #-64]!
   25468:	str	x0, [sp, #24]
   2546c:	str	x1, [sp, #16]
   25470:	ldr	x0, [sp, #24]
   25474:	ldr	x0, [x0, #16]
   25478:	str	x0, [sp, #56]
   2547c:	ldr	x0, [sp, #24]
   25480:	bl	cbdc <__lsan_do_recoverable_leak_check@@Base+0x2a50>
   25484:	str	x0, [sp, #48]
   25488:	ldr	x1, [sp, #56]
   2548c:	ldr	x0, [sp, #48]
   25490:	cmp	x1, x0
   25494:	cset	w0, hi  // hi = pmore
   25498:	and	w0, w0, #0xff
   2549c:	and	x0, x0, #0xff
   254a0:	cmp	x0, #0x0
   254a4:	b.eq	254c8 <__sanitizer_set_report_fd@@Base+0x62d0>  // b.none
   254a8:	ldr	x4, [sp, #48]
   254ac:	ldr	x3, [sp, #56]
   254b0:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   254b4:	add	x2, x0, #0x628
   254b8:	mov	w1, #0x1be                 	// #446
   254bc:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   254c0:	add	x0, x0, #0x40
   254c4:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   254c8:	ldr	x0, [sp, #24]
   254cc:	ldr	x19, [x0, #16]
   254d0:	ldr	x0, [sp, #24]
   254d4:	bl	cbdc <__lsan_do_recoverable_leak_check@@Base+0x2a50>
   254d8:	cmp	x19, x0
   254dc:	cset	w0, eq  // eq = none
   254e0:	and	w0, w0, #0xff
   254e4:	cmp	w0, #0x0
   254e8:	b.eq	2550c <__sanitizer_set_report_fd@@Base+0x6314>  // b.none
   254ec:	ldr	x0, [sp, #24]
   254f0:	ldr	x0, [x0, #16]
   254f4:	add	x0, x0, #0x1
   254f8:	bl	a3cc <__lsan_do_recoverable_leak_check@@Base+0x240>
   254fc:	str	x0, [sp, #40]
   25500:	ldr	x1, [sp, #40]
   25504:	ldr	x0, [sp, #24]
   25508:	bl	cbf4 <__lsan_do_recoverable_leak_check@@Base+0x2a68>
   2550c:	ldr	x0, [sp, #24]
   25510:	ldr	x1, [x0]
   25514:	ldr	x0, [sp, #24]
   25518:	ldr	x0, [x0, #16]
   2551c:	add	x3, x0, #0x1
   25520:	ldr	x2, [sp, #24]
   25524:	str	x3, [x2, #16]
   25528:	add	x0, x1, x0
   2552c:	mov	x2, #0x1                   	// #1
   25530:	ldr	x1, [sp, #16]
   25534:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
   25538:	nop
   2553c:	ldp	x19, x30, [sp], #64
   25540:	ret
   25544:	str	x30, [sp, #-48]!
   25548:	str	w0, [sp, #44]
   2554c:	str	x1, [sp, #32]
   25550:	str	x2, [sp, #24]
   25554:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   25558:	ldr	x0, [x0, #3496]
   2555c:	cmp	x0, #0x0
   25560:	b.eq	25578 <__sanitizer_set_report_fd@@Base+0x6380>  // b.none
   25564:	ldr	x2, [sp, #24]
   25568:	ldr	x1, [sp, #32]
   2556c:	ldr	w0, [sp, #44]
   25570:	bl	155c4 <__interceptor_sigaction@@Base+0x5c>
   25574:	b	2558c <__sanitizer_set_report_fd@@Base+0x6394>
   25578:	ldr	x2, [sp, #24]
   2557c:	ldr	x1, [sp, #32]
   25580:	ldr	w0, [sp, #44]
   25584:	bl	6d40 <sigaction@plt>
   25588:	nop
   2558c:	ldr	x30, [sp], #48
   25590:	ret
   25594:	sub	sp, sp, #0x160
   25598:	str	x30, [sp]
   2559c:	strb	w0, [sp, #47]
   255a0:	str	x1, [sp, #32]
   255a4:	str	x2, [sp, #24]
   255a8:	ldr	x0, [sp, #32]
   255ac:	str	x0, [sp, #328]
   255b0:	str	xzr, [sp, #320]
   255b4:	ldr	x1, [sp, #328]
   255b8:	ldr	x0, [sp, #320]
   255bc:	cmp	x1, x0
   255c0:	cset	w0, eq  // eq = none
   255c4:	and	w0, w0, #0xff
   255c8:	and	x0, x0, #0xff
   255cc:	cmp	x0, #0x0
   255d0:	b.eq	255f4 <__sanitizer_set_report_fd@@Base+0x63fc>  // b.none
   255d4:	ldr	x4, [sp, #320]
   255d8:	ldr	x3, [sp, #328]
   255dc:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   255e0:	add	x2, x0, #0x830
   255e4:	mov	w1, #0x5b                  	// #91
   255e8:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   255ec:	add	x0, x0, #0x848
   255f0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   255f4:	ldr	x0, [sp, #24]
   255f8:	str	x0, [sp, #312]
   255fc:	str	xzr, [sp, #304]
   25600:	ldr	x1, [sp, #312]
   25604:	ldr	x0, [sp, #304]
   25608:	cmp	x1, x0
   2560c:	cset	w0, eq  // eq = none
   25610:	and	w0, w0, #0xff
   25614:	and	x0, x0, #0xff
   25618:	cmp	x0, #0x0
   2561c:	b.eq	25640 <__sanitizer_set_report_fd@@Base+0x6448>  // b.none
   25620:	ldr	x4, [sp, #304]
   25624:	ldr	x3, [sp, #312]
   25628:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   2562c:	add	x2, x0, #0x890
   25630:	mov	w1, #0x5c                  	// #92
   25634:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   25638:	add	x0, x0, #0x848
   2563c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   25640:	ldrb	w0, [sp, #47]
   25644:	cmp	w0, #0x0
   25648:	b.eq	257f4 <__sanitizer_set_report_fd@@Base+0x65fc>  // b.none
   2564c:	add	x0, sp, #0xa0
   25650:	mov	x1, x0
   25654:	mov	w0, #0x3                   	// #3
   25658:	bl	6f00 <getrlimit@plt>
   2565c:	sxtw	x0, w0
   25660:	str	x0, [sp, #280]
   25664:	str	xzr, [sp, #272]
   25668:	ldr	x1, [sp, #280]
   2566c:	ldr	x0, [sp, #272]
   25670:	cmp	x1, x0
   25674:	cset	w0, ne  // ne = any
   25678:	and	w0, w0, #0xff
   2567c:	and	x0, x0, #0xff
   25680:	cmp	x0, #0x0
   25684:	b.eq	256a8 <__sanitizer_set_report_fd@@Base+0x64b0>  // b.none
   25688:	ldr	x4, [sp, #272]
   2568c:	ldr	x3, [sp, #280]
   25690:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   25694:	add	x2, x0, #0x8a8
   25698:	mov	w1, #0x60                  	// #96
   2569c:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   256a0:	add	x0, x0, #0x848
   256a4:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   256a8:	add	x0, sp, #0x30
   256ac:	mov	w1, #0x1                   	// #1
   256b0:	bl	2aa20 <OnPrint@@Base+0xa78>
   256b4:	add	x0, sp, #0x50
   256b8:	mov	x2, #0x0                   	// #0
   256bc:	mov	x1, #0x0                   	// #0
   256c0:	bl	a5e0 <__lsan_do_recoverable_leak_check@@Base+0x454>
   256c4:	str	xzr, [sp, #344]
   256c8:	add	x1, sp, #0x50
   256cc:	add	x0, sp, #0x30
   256d0:	bl	2b030 <OnPrint@@Base+0x1088>
   256d4:	and	w0, w0, #0xff
   256d8:	cmp	w0, #0x0
   256dc:	b.eq	25700 <__sanitizer_set_report_fd@@Base+0x6508>  // b.none
   256e0:	add	x1, sp, #0xa0
   256e4:	ldr	x0, [sp, #88]
   256e8:	cmp	x1, x0
   256ec:	b.cc	256fc <__sanitizer_set_report_fd@@Base+0x6504>  // b.lo, b.ul, b.last
   256f0:	ldr	x0, [sp, #88]
   256f4:	str	x0, [sp, #344]
   256f8:	b	256c8 <__sanitizer_set_report_fd@@Base+0x64d0>
   256fc:	nop
   25700:	add	x1, sp, #0xa0
   25704:	ldr	x0, [sp, #80]
   25708:	cmp	x1, x0
   2570c:	b.cc	25728 <__sanitizer_set_report_fd@@Base+0x6530>  // b.lo, b.ul, b.last
   25710:	add	x1, sp, #0xa0
   25714:	ldr	x0, [sp, #88]
   25718:	cmp	x1, x0
   2571c:	b.cs	25728 <__sanitizer_set_report_fd@@Base+0x6530>  // b.hs, b.nlast
   25720:	mov	w0, #0x1                   	// #1
   25724:	b	2572c <__sanitizer_set_report_fd@@Base+0x6534>
   25728:	mov	w0, #0x0                   	// #0
   2572c:	and	x0, x0, #0xff
   25730:	str	x0, [sp, #264]
   25734:	str	xzr, [sp, #256]
   25738:	ldr	x1, [sp, #264]
   2573c:	ldr	x0, [sp, #256]
   25740:	cmp	x1, x0
   25744:	cset	w0, eq  // eq = none
   25748:	and	w0, w0, #0xff
   2574c:	and	x0, x0, #0xff
   25750:	cmp	x0, #0x0
   25754:	b.eq	25778 <__sanitizer_set_report_fd@@Base+0x6580>  // b.none
   25758:	ldr	x4, [sp, #256]
   2575c:	ldr	x3, [sp, #264]
   25760:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   25764:	add	x2, x0, #0x8d8
   25768:	mov	w1, #0x6a                  	// #106
   2576c:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   25770:	add	x0, x0, #0x848
   25774:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   25778:	ldr	x0, [sp, #160]
   2577c:	str	x0, [sp, #336]
   25780:	ldr	x1, [sp, #88]
   25784:	ldr	x0, [sp, #344]
   25788:	sub	x0, x1, x0
   2578c:	ldr	x1, [sp, #336]
   25790:	cmp	x1, x0
   25794:	b.ls	257a8 <__sanitizer_set_report_fd@@Base+0x65b0>  // b.plast
   25798:	ldr	x1, [sp, #88]
   2579c:	ldr	x0, [sp, #344]
   257a0:	sub	x0, x1, x0
   257a4:	str	x0, [sp, #336]
   257a8:	ldr	x1, [sp, #336]
   257ac:	mov	x0, #0x40000000            	// #1073741824
   257b0:	cmp	x1, x0
   257b4:	b.ls	257c0 <__sanitizer_set_report_fd@@Base+0x65c8>  // b.plast
   257b8:	mov	x0, #0x40000000            	// #1073741824
   257bc:	str	x0, [sp, #336]
   257c0:	ldr	x1, [sp, #88]
   257c4:	ldr	x0, [sp, #32]
   257c8:	str	x1, [x0]
   257cc:	ldr	x1, [sp, #88]
   257d0:	ldr	x0, [sp, #336]
   257d4:	sub	x1, x1, x0
   257d8:	ldr	x0, [sp, #24]
   257dc:	str	x1, [x0]
   257e0:	add	x0, sp, #0x50
   257e4:	bl	a61c <__lsan_do_recoverable_leak_check@@Base+0x490>
   257e8:	add	x0, sp, #0x30
   257ec:	bl	2ab1c <OnPrint@@Base+0xb74>
   257f0:	b	258a8 <__sanitizer_set_report_fd@@Base+0x66b0>
   257f4:	str	xzr, [sp, #248]
   257f8:	str	xzr, [sp, #240]
   257fc:	add	x0, sp, #0xb0
   25800:	bl	6a40 <pthread_attr_init@plt>
   25804:	bl	6ea0 <pthread_self@plt>
   25808:	mov	x2, x0
   2580c:	add	x0, sp, #0xb0
   25810:	mov	x1, x0
   25814:	mov	x0, x2
   25818:	bl	69e0 <pthread_getattr_np@plt>
   2581c:	sxtw	x0, w0
   25820:	str	x0, [sp, #296]
   25824:	str	xzr, [sp, #288]
   25828:	ldr	x1, [sp, #296]
   2582c:	ldr	x0, [sp, #288]
   25830:	cmp	x1, x0
   25834:	cset	w0, ne  // ne = any
   25838:	and	w0, w0, #0xff
   2583c:	and	x0, x0, #0xff
   25840:	cmp	x0, #0x0
   25844:	b.eq	25868 <__sanitizer_set_report_fd@@Base+0x6670>  // b.none
   25848:	ldr	x4, [sp, #288]
   2584c:	ldr	x3, [sp, #296]
   25850:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   25854:	add	x2, x0, #0x920
   25858:	mov	w1, #0x88                  	// #136
   2585c:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   25860:	add	x0, x0, #0x848
   25864:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   25868:	add	x2, sp, #0xf8
   2586c:	add	x1, sp, #0xf0
   25870:	add	x0, sp, #0xb0
   25874:	bl	28994 <__sanitizer_set_report_fd@@Base+0x979c>
   25878:	add	x0, sp, #0xb0
   2587c:	bl	6b40 <pthread_attr_destroy@plt>
   25880:	ldr	x0, [sp, #240]
   25884:	mov	x1, x0
   25888:	ldr	x0, [sp, #248]
   2588c:	add	x1, x1, x0
   25890:	ldr	x0, [sp, #32]
   25894:	str	x1, [x0]
   25898:	ldr	x0, [sp, #240]
   2589c:	mov	x1, x0
   258a0:	ldr	x0, [sp, #24]
   258a4:	str	x1, [x0]
   258a8:	ldr	x30, [sp]
   258ac:	add	sp, sp, #0x160
   258b0:	ret
   258b4:	str	x30, [sp, #-64]!
   258b8:	str	x0, [sp, #24]
   258bc:	str	x1, [sp, #16]
   258c0:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   258c4:	add	x1, x0, #0x958
   258c8:	mov	x0, #0xffffffffffffffff    	// #-1
   258cc:	bl	6a80 <dlsym@plt>
   258d0:	str	x0, [sp, #40]
   258d4:	ldr	x0, [sp, #40]
   258d8:	cmp	x0, #0x0
   258dc:	b.ne	258e8 <__sanitizer_set_report_fd@@Base+0x66f0>  // b.any
   258e0:	mov	w0, #0x0                   	// #0
   258e4:	b	25968 <__sanitizer_set_report_fd@@Base+0x6770>
   258e8:	mov	x0, #0x8                   	// #8
   258ec:	str	x0, [sp, #56]
   258f0:	mov	x0, #0x8                   	// #8
   258f4:	str	x0, [sp, #48]
   258f8:	ldr	x1, [sp, #56]
   258fc:	ldr	x0, [sp, #48]
   25900:	cmp	x1, x0
   25904:	cset	w0, ne  // ne = any
   25908:	and	w0, w0, #0xff
   2590c:	and	x0, x0, #0xff
   25910:	cmp	x0, #0x0
   25914:	b.eq	25938 <__sanitizer_set_report_fd@@Base+0x6740>  // b.none
   25918:	ldr	x4, [sp, #48]
   2591c:	ldr	x3, [sp, #56]
   25920:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   25924:	add	x2, x0, #0x960
   25928:	mov	w1, #0x98                  	// #152
   2592c:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   25930:	add	x0, x0, #0x848
   25934:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   25938:	add	x1, sp, #0x28
   2593c:	add	x0, sp, #0x20
   25940:	mov	x2, #0x8                   	// #8
   25944:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
   25948:	ldr	x3, [sp, #32]
   2594c:	mov	w2, #0x1                   	// #1
   25950:	ldr	x1, [sp, #16]
   25954:	ldr	x0, [sp, #24]
   25958:	blr	x3
   2595c:	cmp	w0, #0x0
   25960:	cset	w0, eq  // eq = none
   25964:	and	w0, w0, #0xff
   25968:	ldr	x30, [sp], #64
   2596c:	ret
   25970:	str	x30, [sp, #-128]!
   25974:	str	x0, [sp, #40]
   25978:	str	x1, [sp, #32]
   2597c:	str	x2, [sp, #24]
   25980:	add	x0, sp, #0x38
   25984:	mov	x2, #0x40                  	// #64
   25988:	mov	x1, x0
   2598c:	mov	w0, #0x2                   	// #2
   25990:	bl	6a70 <confstr@plt>
   25994:	str	x0, [sp, #120]
   25998:	ldr	x0, [sp, #120]
   2599c:	cmp	x0, #0x3f
   259a0:	b.ls	259ac <__sanitizer_set_report_fd@@Base+0x67b4>  // b.plast
   259a4:	mov	w0, #0x0                   	// #0
   259a8:	b	25a88 <__sanitizer_set_report_fd@@Base+0x6890>
   259ac:	ldr	x0, [sp, #120]
   259b0:	add	x1, sp, #0x38
   259b4:	strb	wzr, [x1, x0]
   259b8:	add	x3, sp, #0x38
   259bc:	mov	x2, #0x6                   	// #6
   259c0:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   259c4:	add	x1, x0, #0x988
   259c8:	mov	x0, x3
   259cc:	bl	219dc <__sanitizer_set_report_fd@@Base+0x27e4>
   259d0:	cmp	w0, #0x0
   259d4:	cset	w0, ne  // ne = any
   259d8:	and	w0, w0, #0xff
   259dc:	cmp	w0, #0x0
   259e0:	b.eq	259ec <__sanitizer_set_report_fd@@Base+0x67f4>  // b.none
   259e4:	mov	w0, #0x0                   	// #0
   259e8:	b	25a88 <__sanitizer_set_report_fd@@Base+0x6890>
   259ec:	add	x0, sp, #0x38
   259f0:	add	x0, x0, #0x6
   259f4:	str	x0, [sp, #48]
   259f8:	ldr	x0, [sp, #48]
   259fc:	add	x1, sp, #0x30
   25a00:	mov	w2, #0xa                   	// #10
   25a04:	bl	21fa0 <__sanitizer_set_report_fd@@Base+0x2da8>
   25a08:	mov	w1, w0
   25a0c:	ldr	x0, [sp, #40]
   25a10:	str	w1, [x0]
   25a14:	ldr	x0, [sp, #48]
   25a18:	ldrb	w0, [x0]
   25a1c:	cmp	w0, #0x2e
   25a20:	b.ne	25a40 <__sanitizer_set_report_fd@@Base+0x6848>  // b.any
   25a24:	ldr	x0, [sp, #48]
   25a28:	add	x0, x0, #0x1
   25a2c:	add	x1, sp, #0x30
   25a30:	mov	w2, #0xa                   	// #10
   25a34:	bl	21fa0 <__sanitizer_set_report_fd@@Base+0x2da8>
   25a38:	mov	w1, w0
   25a3c:	b	25a44 <__sanitizer_set_report_fd@@Base+0x684c>
   25a40:	mov	w1, #0x0                   	// #0
   25a44:	ldr	x0, [sp, #32]
   25a48:	str	w1, [x0]
   25a4c:	ldr	x0, [sp, #48]
   25a50:	ldrb	w0, [x0]
   25a54:	cmp	w0, #0x2e
   25a58:	b.ne	25a78 <__sanitizer_set_report_fd@@Base+0x6880>  // b.any
   25a5c:	ldr	x0, [sp, #48]
   25a60:	add	x0, x0, #0x1
   25a64:	add	x1, sp, #0x30
   25a68:	mov	w2, #0xa                   	// #10
   25a6c:	bl	21fa0 <__sanitizer_set_report_fd@@Base+0x2da8>
   25a70:	mov	w1, w0
   25a74:	b	25a7c <__sanitizer_set_report_fd@@Base+0x6884>
   25a78:	mov	w1, #0x0                   	// #0
   25a7c:	ldr	x0, [sp, #24]
   25a80:	str	w1, [x0]
   25a84:	mov	w0, #0x1                   	// #1
   25a88:	ldr	x30, [sp], #128
   25a8c:	ret
   25a90:	str	x30, [sp, #-48]!
   25a94:	str	w0, [sp, #28]
   25a98:	str	w1, [sp, #24]
   25a9c:	str	w2, [sp, #20]
   25aa0:	add	x2, sp, #0x24
   25aa4:	add	x1, sp, #0x28
   25aa8:	add	x0, sp, #0x2c
   25aac:	bl	25970 <__sanitizer_set_report_fd@@Base+0x6778>
   25ab0:	and	w0, w0, #0xff
   25ab4:	eor	w0, w0, #0x1
   25ab8:	and	w0, w0, #0xff
   25abc:	cmp	w0, #0x0
   25ac0:	b.eq	25acc <__sanitizer_set_report_fd@@Base+0x68d4>  // b.none
   25ac4:	mov	w0, #0x0                   	// #0
   25ac8:	b	25b40 <__sanitizer_set_report_fd@@Base+0x6948>
   25acc:	ldr	w0, [sp, #44]
   25ad0:	ldr	w1, [sp, #28]
   25ad4:	cmp	w1, w0
   25ad8:	b.ge	25ae4 <__sanitizer_set_report_fd@@Base+0x68ec>  // b.tcont
   25adc:	mov	w0, #0x1                   	// #1
   25ae0:	b	25b40 <__sanitizer_set_report_fd@@Base+0x6948>
   25ae4:	ldr	w0, [sp, #44]
   25ae8:	ldr	w1, [sp, #28]
   25aec:	cmp	w1, w0
   25af0:	b.le	25afc <__sanitizer_set_report_fd@@Base+0x6904>
   25af4:	mov	w0, #0x0                   	// #0
   25af8:	b	25b40 <__sanitizer_set_report_fd@@Base+0x6948>
   25afc:	ldr	w0, [sp, #40]
   25b00:	ldr	w1, [sp, #24]
   25b04:	cmp	w1, w0
   25b08:	b.ge	25b14 <__sanitizer_set_report_fd@@Base+0x691c>  // b.tcont
   25b0c:	mov	w0, #0x1                   	// #1
   25b10:	b	25b40 <__sanitizer_set_report_fd@@Base+0x6948>
   25b14:	ldr	w0, [sp, #40]
   25b18:	ldr	w1, [sp, #24]
   25b1c:	cmp	w1, w0
   25b20:	b.le	25b2c <__sanitizer_set_report_fd@@Base+0x6934>
   25b24:	mov	w0, #0x0                   	// #0
   25b28:	b	25b40 <__sanitizer_set_report_fd@@Base+0x6948>
   25b2c:	ldr	w0, [sp, #36]
   25b30:	ldr	w1, [sp, #20]
   25b34:	cmp	w1, w0
   25b38:	cset	w0, le
   25b3c:	and	w0, w0, #0xff
   25b40:	ldr	x30, [sp], #48
   25b44:	ret
   25b48:	str	x30, [sp, #-48]!
   25b4c:	mov	x0, #0x10                  	// #16
   25b50:	str	x0, [sp, #40]
   25b54:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   25b58:	add	x1, x0, #0x990
   25b5c:	mov	x0, #0xffffffffffffffff    	// #-1
   25b60:	bl	6a80 <dlsym@plt>
   25b64:	str	x0, [sp, #32]
   25b68:	str	xzr, [sp, #24]
   25b6c:	str	xzr, [sp, #16]
   25b70:	add	x1, sp, #0x10
   25b74:	add	x0, sp, #0x18
   25b78:	mov	x2, x1
   25b7c:	mov	x1, x0
   25b80:	ldr	x0, [sp, #32]
   25b84:	bl	26550 <__sanitizer_set_report_fd@@Base+0x7358>
   25b88:	ldr	x0, [sp, #16]
   25b8c:	cmp	x0, #0xf
   25b90:	b.hi	25b9c <__sanitizer_set_report_fd@@Base+0x69a4>  // b.pmore
   25b94:	mov	x0, #0x10                  	// #16
   25b98:	str	x0, [sp, #16]
   25b9c:	ldr	x0, [sp, #24]
   25ba0:	ldr	x1, [sp, #16]
   25ba4:	bl	a518 <__lsan_do_recoverable_leak_check@@Base+0x38c>
   25ba8:	mov	x1, x0
   25bac:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   25bb0:	add	x0, x0, #0xc28
   25bb4:	str	x1, [x0]
   25bb8:	nop
   25bbc:	ldr	x30, [sp], #48
   25bc0:	ret
   25bc4:	str	x30, [sp, #-32]!
   25bc8:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   25bcc:	add	x0, x0, #0xc30
   25bd0:	bl	266f8 <__sanitizer_set_report_fd@@Base+0x7500>
   25bd4:	str	x0, [sp, #24]
   25bd8:	ldr	x0, [sp, #24]
   25bdc:	cmp	x0, #0x0
   25be0:	b.eq	25bec <__sanitizer_set_report_fd@@Base+0x69f4>  // b.none
   25be4:	ldr	x0, [sp, #24]
   25be8:	b	25c14 <__sanitizer_set_report_fd@@Base+0x6a1c>
   25bec:	mov	x0, #0x6f0                 	// #1776
   25bf0:	str	x0, [sp, #24]
   25bf4:	ldr	x0, [sp, #24]
   25bf8:	cmp	x0, #0x0
   25bfc:	b.eq	25c10 <__sanitizer_set_report_fd@@Base+0x6a18>  // b.none
   25c00:	ldr	x1, [sp, #24]
   25c04:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   25c08:	add	x0, x0, #0xc30
   25c0c:	bl	26714 <__sanitizer_set_report_fd@@Base+0x751c>
   25c10:	ldr	x0, [sp, #24]
   25c14:	ldr	x30, [sp], #32
   25c18:	ret
   25c1c:	mov	x0, #0x10                  	// #16
   25c20:	ret
   25c24:	stp	x19, x30, [sp, #-32]!
   25c28:	mrs	x0, tpidr_el0
   25c2c:	mov	x19, x0
   25c30:	bl	25bc4 <__sanitizer_set_report_fd@@Base+0x69cc>
   25c34:	sub	x0, x19, x0
   25c38:	str	x0, [sp, #24]
   25c3c:	ldr	x0, [sp, #24]
   25c40:	ldp	x19, x30, [sp], #32
   25c44:	ret
   25c48:	str	x30, [sp, #-32]!
   25c4c:	str	x0, [sp, #24]
   25c50:	str	x1, [sp, #16]
   25c54:	bl	25c24 <__sanitizer_set_report_fd@@Base+0x6a2c>
   25c58:	mov	x1, x0
   25c5c:	ldr	x0, [sp, #24]
   25c60:	str	x1, [x0]
   25c64:	bl	25c80 <__sanitizer_set_report_fd@@Base+0x6a88>
   25c68:	mov	x1, x0
   25c6c:	ldr	x0, [sp, #16]
   25c70:	str	x1, [x0]
   25c74:	nop
   25c78:	ldr	x30, [sp], #32
   25c7c:	ret
   25c80:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   25c84:	add	x0, x0, #0xc28
   25c88:	ldr	x0, [x0]
   25c8c:	ret
   25c90:	str	x30, [sp, #-112]!
   25c94:	strb	w0, [sp, #63]
   25c98:	str	x1, [sp, #48]
   25c9c:	str	x2, [sp, #40]
   25ca0:	str	x3, [sp, #32]
   25ca4:	str	x4, [sp, #24]
   25ca8:	ldr	x1, [sp, #24]
   25cac:	ldr	x0, [sp, #32]
   25cb0:	bl	25c48 <__sanitizer_set_report_fd@@Base+0x6a50>
   25cb4:	add	x1, sp, #0x40
   25cb8:	add	x0, sp, #0x48
   25cbc:	mov	x2, x1
   25cc0:	mov	x1, x0
   25cc4:	ldrb	w0, [sp, #63]
   25cc8:	bl	25594 <__sanitizer_set_report_fd@@Base+0x639c>
   25ccc:	ldr	x1, [sp, #64]
   25cd0:	ldr	x0, [sp, #48]
   25cd4:	str	x1, [x0]
   25cd8:	ldr	x1, [sp, #72]
   25cdc:	ldr	x0, [sp, #64]
   25ce0:	sub	x1, x1, x0
   25ce4:	ldr	x0, [sp, #40]
   25ce8:	str	x1, [x0]
   25cec:	ldrb	w0, [sp, #63]
   25cf0:	eor	w0, w0, #0x1
   25cf4:	and	w0, w0, #0xff
   25cf8:	cmp	w0, #0x0
   25cfc:	b.eq	25e48 <__sanitizer_set_report_fd@@Base+0x6c50>  // b.none
   25d00:	ldr	x0, [sp, #32]
   25d04:	ldr	x1, [x0]
   25d08:	ldr	x0, [sp, #48]
   25d0c:	ldr	x0, [x0]
   25d10:	cmp	x1, x0
   25d14:	b.ls	25e48 <__sanitizer_set_report_fd@@Base+0x6c50>  // b.plast
   25d18:	ldr	x0, [sp, #32]
   25d1c:	ldr	x1, [x0]
   25d20:	ldr	x0, [sp, #48]
   25d24:	ldr	x2, [x0]
   25d28:	ldr	x0, [sp, #40]
   25d2c:	ldr	x0, [x0]
   25d30:	add	x0, x2, x0
   25d34:	cmp	x1, x0
   25d38:	b.cs	25e48 <__sanitizer_set_report_fd@@Base+0x6c50>  // b.hs, b.nlast
   25d3c:	ldr	x0, [sp, #32]
   25d40:	ldr	x1, [x0]
   25d44:	ldr	x0, [sp, #24]
   25d48:	ldr	x0, [x0]
   25d4c:	add	x0, x1, x0
   25d50:	str	x0, [sp, #104]
   25d54:	ldr	x0, [sp, #48]
   25d58:	ldr	x0, [x0]
   25d5c:	str	x0, [sp, #96]
   25d60:	ldr	x1, [sp, #104]
   25d64:	ldr	x0, [sp, #96]
   25d68:	cmp	x1, x0
   25d6c:	cset	w0, ls  // ls = plast
   25d70:	and	w0, w0, #0xff
   25d74:	and	x0, x0, #0xff
   25d78:	cmp	x0, #0x0
   25d7c:	b.eq	25da0 <__sanitizer_set_report_fd@@Base+0x6ba8>  // b.none
   25d80:	ldr	x4, [sp, #96]
   25d84:	ldr	x3, [sp, #104]
   25d88:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   25d8c:	add	x2, x0, #0x9b0
   25d90:	mov	w1, #0x203                 	// #515
   25d94:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   25d98:	add	x0, x0, #0x848
   25d9c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   25da0:	ldr	x0, [sp, #32]
   25da4:	ldr	x1, [x0]
   25da8:	ldr	x0, [sp, #24]
   25dac:	ldr	x0, [x0]
   25db0:	add	x0, x1, x0
   25db4:	str	x0, [sp, #88]
   25db8:	ldr	x0, [sp, #48]
   25dbc:	ldr	x1, [x0]
   25dc0:	ldr	x0, [sp, #40]
   25dc4:	ldr	x0, [x0]
   25dc8:	add	x0, x1, x0
   25dcc:	str	x0, [sp, #80]
   25dd0:	ldr	x1, [sp, #88]
   25dd4:	ldr	x0, [sp, #80]
   25dd8:	cmp	x1, x0
   25ddc:	cset	w0, hi  // hi = pmore
   25de0:	and	w0, w0, #0xff
   25de4:	and	x0, x0, #0xff
   25de8:	cmp	x0, #0x0
   25dec:	b.eq	25e10 <__sanitizer_set_report_fd@@Base+0x6c18>  // b.none
   25df0:	ldr	x4, [sp, #80]
   25df4:	ldr	x3, [sp, #88]
   25df8:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   25dfc:	add	x2, x0, #0x9e0
   25e00:	mov	w1, #0x204                 	// #516
   25e04:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   25e08:	add	x0, x0, #0x848
   25e0c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   25e10:	ldr	x0, [sp, #40]
   25e14:	ldr	x1, [x0]
   25e18:	ldr	x0, [sp, #24]
   25e1c:	ldr	x0, [x0]
   25e20:	sub	x1, x1, x0
   25e24:	ldr	x0, [sp, #40]
   25e28:	str	x1, [x0]
   25e2c:	ldr	x0, [sp, #48]
   25e30:	ldr	x1, [x0]
   25e34:	ldr	x0, [sp, #40]
   25e38:	ldr	x0, [x0]
   25e3c:	add	x1, x1, x0
   25e40:	ldr	x0, [sp, #32]
   25e44:	str	x1, [x0]
   25e48:	nop
   25e4c:	ldr	x30, [sp], #112
   25e50:	ret
   25e54:	stp	x19, x30, [sp, #-208]!
   25e58:	str	x0, [sp, #40]
   25e5c:	str	x1, [sp, #32]
   25e60:	str	x2, [sp, #24]
   25e64:	ldr	x0, [sp, #24]
   25e68:	str	x0, [sp, #192]
   25e6c:	add	x0, sp, #0x80
   25e70:	mov	x1, #0x1000                	// #4096
   25e74:	bl	a584 <__lsan_do_recoverable_leak_check@@Base+0x3f8>
   25e78:	ldr	x0, [sp, #192]
   25e7c:	ldrb	w0, [x0, #8]
   25e80:	cmp	w0, #0x0
   25e84:	b.eq	25eb4 <__sanitizer_set_report_fd@@Base+0x6cbc>  // b.none
   25e88:	ldr	x0, [sp, #192]
   25e8c:	strb	wzr, [x0, #8]
   25e90:	add	x0, sp, #0x80
   25e94:	bl	bc50 <__lsan_do_recoverable_leak_check@@Base+0x1ac4>
   25e98:	mov	x19, x0
   25e9c:	add	x0, sp, #0x80
   25ea0:	bl	1f250 <__sanitizer_set_report_fd@@Base+0x58>
   25ea4:	mov	x1, x0
   25ea8:	mov	x0, x19
   25eac:	bl	19c50 <__sancov_default_options@@Base+0x3ab4>
   25eb0:	b	25ee4 <__sanitizer_set_report_fd@@Base+0x6cec>
   25eb4:	ldr	x0, [sp, #40]
   25eb8:	ldr	x0, [x0, #8]
   25ebc:	cmp	x0, #0x0
   25ec0:	b.eq	25ee4 <__sanitizer_set_report_fd@@Base+0x6cec>  // b.none
   25ec4:	ldr	x0, [sp, #40]
   25ec8:	ldr	x0, [x0, #8]
   25ecc:	add	x3, sp, #0x80
   25ed0:	mov	x2, x0
   25ed4:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   25ed8:	add	x1, x0, #0xa18
   25edc:	mov	x0, x3
   25ee0:	bl	2a564 <OnPrint@@Base+0x5bc>
   25ee4:	add	x0, sp, #0x80
   25ee8:	mov	x1, #0x0                   	// #0
   25eec:	bl	ac0c <__lsan_do_recoverable_leak_check@@Base+0xa80>
   25ef0:	ldrb	w0, [x0]
   25ef4:	cmp	w0, #0x0
   25ef8:	cset	w0, eq  // eq = none
   25efc:	and	w0, w0, #0xff
   25f00:	cmp	w0, #0x0
   25f04:	b.eq	25f10 <__sanitizer_set_report_fd@@Base+0x6d18>  // b.none
   25f08:	mov	w19, #0x0                   	// #0
   25f0c:	b	26028 <__sanitizer_set_report_fd@@Base+0x6e30>
   25f10:	add	x0, sp, #0x38
   25f14:	bl	d47c <__lsan_do_recoverable_leak_check@@Base+0x32f0>
   25f18:	add	x0, sp, #0x80
   25f1c:	bl	bc50 <__lsan_do_recoverable_leak_check@@Base+0x1ac4>
   25f20:	mov	x3, x0
   25f24:	ldr	x0, [sp, #40]
   25f28:	ldr	x1, [x0]
   25f2c:	add	x0, sp, #0x38
   25f30:	mov	x2, x1
   25f34:	mov	x1, x3
   25f38:	bl	195d4 <__sancov_default_options@@Base+0x3438>
   25f3c:	str	wzr, [sp, #204]
   25f40:	ldr	x0, [sp, #40]
   25f44:	ldrh	w0, [x0, #24]
   25f48:	mov	w1, w0
   25f4c:	ldr	w0, [sp, #204]
   25f50:	cmp	w0, w1
   25f54:	b.ge	26014 <__sanitizer_set_report_fd@@Base+0x6e1c>  // b.tcont
   25f58:	ldr	x0, [sp, #40]
   25f5c:	ldr	x2, [x0, #16]
   25f60:	ldrsw	x1, [sp, #204]
   25f64:	mov	x0, x1
   25f68:	lsl	x0, x0, #3
   25f6c:	sub	x0, x0, x1
   25f70:	lsl	x0, x0, #3
   25f74:	add	x0, x2, x0
   25f78:	str	x0, [sp, #184]
   25f7c:	ldr	x0, [sp, #184]
   25f80:	ldr	w0, [x0]
   25f84:	cmp	w0, #0x1
   25f88:	b.ne	26004 <__sanitizer_set_report_fd@@Base+0x6e0c>  // b.any
   25f8c:	ldr	x0, [sp, #40]
   25f90:	ldr	x1, [x0]
   25f94:	ldr	x0, [sp, #184]
   25f98:	ldr	x0, [x0, #16]
   25f9c:	add	x0, x1, x0
   25fa0:	str	x0, [sp, #176]
   25fa4:	ldr	x0, [sp, #184]
   25fa8:	ldr	x0, [x0, #40]
   25fac:	ldr	x1, [sp, #176]
   25fb0:	add	x0, x1, x0
   25fb4:	str	x0, [sp, #168]
   25fb8:	ldr	x0, [sp, #184]
   25fbc:	ldr	w0, [x0, #4]
   25fc0:	and	w0, w0, #0x1
   25fc4:	cmp	w0, #0x0
   25fc8:	cset	w0, ne  // ne = any
   25fcc:	strb	w0, [sp, #167]
   25fd0:	ldr	x0, [sp, #184]
   25fd4:	ldr	w0, [x0, #4]
   25fd8:	and	w0, w0, #0x2
   25fdc:	cmp	w0, #0x0
   25fe0:	cset	w0, ne  // ne = any
   25fe4:	strb	w0, [sp, #166]
   25fe8:	add	x0, sp, #0x38
   25fec:	mov	x5, #0x0                   	// #0
   25ff0:	ldrb	w4, [sp, #166]
   25ff4:	ldrb	w3, [sp, #167]
   25ff8:	ldr	x2, [sp, #168]
   25ffc:	ldr	x1, [sp, #176]
   26000:	bl	19728 <__sancov_default_options@@Base+0x358c>
   26004:	ldr	w0, [sp, #204]
   26008:	add	w0, w0, #0x1
   2600c:	str	w0, [sp, #204]
   26010:	b	25f40 <__sanitizer_set_report_fd@@Base+0x6d48>
   26014:	ldr	x0, [sp, #192]
   26018:	ldr	x0, [x0]
   2601c:	add	x1, sp, #0x38
   26020:	bl	2673c <__sanitizer_set_report_fd@@Base+0x7544>
   26024:	mov	w19, #0x0                   	// #0
   26028:	add	x0, sp, #0x80
   2602c:	bl	aab4 <__lsan_do_recoverable_leak_check@@Base+0x928>
   26030:	mov	w0, w19
   26034:	ldp	x19, x30, [sp], #208
   26038:	ret
   2603c:	mov	w0, #0x0                   	// #0
   26040:	ret
   26044:	str	x30, [sp, #-64]!
   26048:	str	x0, [sp, #24]
   2604c:	add	x0, sp, #0x20
   26050:	mov	w1, #0x1                   	// #1
   26054:	bl	2aa20 <OnPrint@@Base+0xa78>
   26058:	add	x0, sp, #0x20
   2605c:	ldr	x1, [sp, #24]
   26060:	bl	2ac90 <OnPrint@@Base+0xce8>
   26064:	add	x0, sp, #0x20
   26068:	bl	2ab1c <OnPrint@@Base+0xb74>
   2606c:	nop
   26070:	ldr	x30, [sp], #64
   26074:	ret
   26078:	str	x30, [sp, #-48]!
   2607c:	str	x0, [sp, #24]
   26080:	ldr	x0, [sp, #24]
   26084:	bl	26628 <__sanitizer_set_report_fd@@Base+0x7430>
   26088:	bl	2603c <__sanitizer_set_report_fd@@Base+0x6e44>
   2608c:	and	w0, w0, #0xff
   26090:	cmp	w0, #0x0
   26094:	b.eq	260a4 <__sanitizer_set_report_fd@@Base+0x6eac>  // b.none
   26098:	ldr	x0, [sp, #24]
   2609c:	bl	26044 <__sanitizer_set_report_fd@@Base+0x6e4c>
   260a0:	b	260cc <__sanitizer_set_report_fd@@Base+0x6ed4>
   260a4:	stp	xzr, xzr, [sp, #32]
   260a8:	mov	w0, #0x1                   	// #1
   260ac:	strb	w0, [sp, #40]
   260b0:	ldr	x0, [sp, #24]
   260b4:	str	x0, [sp, #32]
   260b8:	add	x0, sp, #0x20
   260bc:	mov	x1, x0
   260c0:	adrp	x0, 25000 <__sanitizer_set_report_fd@@Base+0x5e08>
   260c4:	add	x0, x0, #0xe54
   260c8:	bl	6ba0 <dl_iterate_phdr@plt>
   260cc:	nop
   260d0:	ldr	x30, [sp], #48
   260d4:	ret
   260d8:	str	x30, [sp, #-32]!
   260dc:	str	x0, [sp, #24]
   260e0:	bl	2603c <__sanitizer_set_report_fd@@Base+0x6e44>
   260e4:	and	w0, w0, #0xff
   260e8:	eor	w0, w0, #0x1
   260ec:	and	w0, w0, #0xff
   260f0:	cmp	w0, #0x0
   260f4:	b.eq	2610c <__sanitizer_set_report_fd@@Base+0x6f14>  // b.none
   260f8:	ldr	x0, [sp, #24]
   260fc:	bl	26628 <__sanitizer_set_report_fd@@Base+0x7430>
   26100:	ldr	x0, [sp, #24]
   26104:	bl	26044 <__sanitizer_set_report_fd@@Base+0x6e4c>
   26108:	b	26114 <__sanitizer_set_report_fd@@Base+0x6f1c>
   2610c:	ldr	x0, [sp, #24]
   26110:	bl	d558 <__lsan_do_recoverable_leak_check@@Base+0x33cc>
   26114:	nop
   26118:	ldr	x30, [sp], #32
   2611c:	ret
   26120:	str	x30, [sp, #-160]!
   26124:	add	x0, sp, #0x10
   26128:	mov	x1, x0
   2612c:	mov	w0, #0x0                   	// #0
   26130:	bl	6b30 <getrusage@plt>
   26134:	cmp	w0, #0x0
   26138:	cset	w0, ne  // ne = any
   2613c:	and	w0, w0, #0xff
   26140:	cmp	w0, #0x0
   26144:	b.eq	26150 <__sanitizer_set_report_fd@@Base+0x6f58>  // b.none
   26148:	mov	x0, #0x0                   	// #0
   2614c:	b	26158 <__sanitizer_set_report_fd@@Base+0x6f60>
   26150:	ldr	x0, [sp, #48]
   26154:	lsl	x0, x0, #10
   26158:	ldr	x30, [sp], #160
   2615c:	ret
   26160:	str	x30, [sp, #-112]!
   26164:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   26168:	ldrb	w0, [x0, #160]
   2616c:	eor	w0, w0, #0x1
   26170:	and	w0, w0, #0xff
   26174:	cmp	w0, #0x0
   26178:	b.eq	26184 <__sanitizer_set_report_fd@@Base+0x6f8c>  // b.none
   2617c:	bl	26120 <__sanitizer_set_report_fd@@Base+0x6f28>
   26180:	b	262d8 <__sanitizer_set_report_fd@@Base+0x70e0>
   26184:	mov	x2, #0x0                   	// #0
   26188:	mov	w1, #0x0                   	// #0
   2618c:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   26190:	add	x0, x0, #0xa20
   26194:	bl	270a0 <__sanitizer_set_report_fd@@Base+0x7ea8>
   26198:	str	w0, [sp, #92]
   2619c:	ldr	w0, [sp, #92]
   261a0:	cmn	w0, #0x1
   261a4:	b.ne	261b0 <__sanitizer_set_report_fd@@Base+0x6fb8>  // b.any
   261a8:	bl	26120 <__sanitizer_set_report_fd@@Base+0x6f28>
   261ac:	b	262d8 <__sanitizer_set_report_fd@@Base+0x70e0>
   261b0:	add	x0, sp, #0x10
   261b4:	mov	x2, #0x3f                  	// #63
   261b8:	mov	x1, x0
   261bc:	ldr	w0, [sp, #92]
   261c0:	bl	23034 <__sanitizer_set_report_fd@@Base+0x3e3c>
   261c4:	str	x0, [sp, #80]
   261c8:	ldr	w0, [sp, #92]
   261cc:	bl	22fa8 <__sanitizer_set_report_fd@@Base+0x3db0>
   261d0:	ldr	x0, [sp, #80]
   261d4:	cmp	x0, #0x0
   261d8:	b.gt	261e4 <__sanitizer_set_report_fd@@Base+0x6fec>
   261dc:	mov	x0, #0x0                   	// #0
   261e0:	b	262d8 <__sanitizer_set_report_fd@@Base+0x70e0>
   261e4:	ldr	x0, [sp, #80]
   261e8:	add	x1, sp, #0x10
   261ec:	strb	wzr, [x1, x0]
   261f0:	add	x0, sp, #0x10
   261f4:	str	x0, [sp, #104]
   261f8:	ldr	x0, [sp, #104]
   261fc:	ldrb	w0, [x0]
   26200:	cmp	w0, #0x2f
   26204:	b.ls	26228 <__sanitizer_set_report_fd@@Base+0x7030>  // b.plast
   26208:	ldr	x0, [sp, #104]
   2620c:	ldrb	w0, [x0]
   26210:	cmp	w0, #0x39
   26214:	b.hi	26228 <__sanitizer_set_report_fd@@Base+0x7030>  // b.pmore
   26218:	ldr	x0, [sp, #104]
   2621c:	add	x0, x0, #0x1
   26220:	str	x0, [sp, #104]
   26224:	b	261f8 <__sanitizer_set_report_fd@@Base+0x7000>
   26228:	ldr	x0, [sp, #104]
   2622c:	ldrb	w0, [x0]
   26230:	cmp	w0, #0x2f
   26234:	b.ls	26248 <__sanitizer_set_report_fd@@Base+0x7050>  // b.plast
   26238:	ldr	x0, [sp, #104]
   2623c:	ldrb	w0, [x0]
   26240:	cmp	w0, #0x39
   26244:	b.ls	26268 <__sanitizer_set_report_fd@@Base+0x7070>  // b.plast
   26248:	ldr	x0, [sp, #104]
   2624c:	ldrb	w0, [x0]
   26250:	cmp	w0, #0x0
   26254:	b.eq	26268 <__sanitizer_set_report_fd@@Base+0x7070>  // b.none
   26258:	ldr	x0, [sp, #104]
   2625c:	add	x0, x0, #0x1
   26260:	str	x0, [sp, #104]
   26264:	b	26228 <__sanitizer_set_report_fd@@Base+0x7030>
   26268:	str	xzr, [sp, #96]
   2626c:	ldr	x0, [sp, #104]
   26270:	ldrb	w0, [x0]
   26274:	cmp	w0, #0x2f
   26278:	b.ls	262c8 <__sanitizer_set_report_fd@@Base+0x70d0>  // b.plast
   2627c:	ldr	x0, [sp, #104]
   26280:	ldrb	w0, [x0]
   26284:	cmp	w0, #0x39
   26288:	b.hi	262c8 <__sanitizer_set_report_fd@@Base+0x70d0>  // b.pmore
   2628c:	ldr	x1, [sp, #96]
   26290:	mov	x0, x1
   26294:	lsl	x0, x0, #2
   26298:	add	x0, x0, x1
   2629c:	lsl	x0, x0, #1
   262a0:	mov	x2, x0
   262a4:	ldr	x0, [sp, #104]
   262a8:	add	x1, x0, #0x1
   262ac:	str	x1, [sp, #104]
   262b0:	ldrb	w0, [x0]
   262b4:	and	x0, x0, #0xff
   262b8:	add	x0, x2, x0
   262bc:	sub	x0, x0, #0x30
   262c0:	str	x0, [sp, #96]
   262c4:	b	2626c <__sanitizer_set_report_fd@@Base+0x7074>
   262c8:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
   262cc:	mov	x1, x0
   262d0:	ldr	x0, [sp, #96]
   262d4:	mul	x0, x1, x0
   262d8:	ldr	x30, [sp], #112
   262dc:	ret
   262e0:	str	x30, [sp, #-160]!
   262e4:	add	x0, sp, #0x10
   262e8:	mov	x2, x0
   262ec:	mov	x1, #0x80                  	// #128
   262f0:	mov	w0, #0x0                   	// #0
   262f4:	bl	6920 <sched_getaffinity@plt>
   262f8:	sxtw	x0, w0
   262fc:	str	x0, [sp, #152]
   26300:	str	xzr, [sp, #144]
   26304:	ldr	x1, [sp, #152]
   26308:	ldr	x0, [sp, #144]
   2630c:	cmp	x1, x0
   26310:	cset	w0, ne  // ne = any
   26314:	and	w0, w0, #0xff
   26318:	and	x0, x0, #0xff
   2631c:	cmp	x0, #0x0
   26320:	b.eq	26344 <__sanitizer_set_report_fd@@Base+0x714c>  // b.none
   26324:	ldr	x4, [sp, #144]
   26328:	ldr	x3, [sp, #152]
   2632c:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   26330:	add	x2, x0, #0xa38
   26334:	mov	w1, #0x2bb                 	// #699
   26338:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   2633c:	add	x0, x0, #0x848
   26340:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   26344:	add	x0, sp, #0x10
   26348:	mov	x1, x0
   2634c:	mov	x0, #0x80                  	// #128
   26350:	bl	6ce0 <__sched_cpucount@plt>
   26354:	ldr	x30, [sp], #160
   26358:	ret
   2635c:	nop
   26360:	ret
   26364:	mov	w0, #0x1                   	// #1
   26368:	ret
   2636c:	str	x30, [sp, #-32]!
   26370:	str	x0, [sp, #24]
   26374:	ldr	x2, [sp, #24]
   26378:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   2637c:	add	x1, x0, #0xa18
   26380:	mov	w0, #0x6                   	// #6
   26384:	bl	6d30 <syslog@plt>
   26388:	nop
   2638c:	ldr	x30, [sp], #32
   26390:	ret
   26394:	sub	sp, sp, #0x10
   26398:	str	x0, [sp, #8]
   2639c:	nop
   263a0:	add	sp, sp, #0x10
   263a4:	ret
   263a8:	str	x30, [sp, #-32]!
   263ac:	str	x0, [sp, #24]
   263b0:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   263b4:	ldrb	w0, [x0, #49]
   263b8:	cmp	w0, #0x0
   263bc:	b.eq	263d8 <__sanitizer_set_report_fd@@Base+0x71e0>  // b.none
   263c0:	bl	26364 <__sanitizer_set_report_fd@@Base+0x716c>
   263c4:	and	w0, w0, #0xff
   263c8:	cmp	w0, #0x0
   263cc:	b.eq	263d8 <__sanitizer_set_report_fd@@Base+0x71e0>  // b.none
   263d0:	mov	w0, #0x1                   	// #1
   263d4:	b	263dc <__sanitizer_set_report_fd@@Base+0x71e4>
   263d8:	mov	w0, #0x0                   	// #0
   263dc:	cmp	w0, #0x0
   263e0:	b.eq	263ec <__sanitizer_set_report_fd@@Base+0x71f4>  // b.none
   263e4:	ldr	x0, [sp, #24]
   263e8:	bl	1a624 <__sanitizer_install_malloc_and_free_hooks@@Base+0x6d8>
   263ec:	nop
   263f0:	ldr	x30, [sp], #32
   263f4:	ret
   263f8:	str	x30, [sp, #-32]!
   263fc:	bl	26670 <__sanitizer_set_report_fd@@Base+0x7478>
   26400:	and	w0, w0, #0xff
   26404:	cmp	w0, #0x0
   26408:	b.eq	26444 <__sanitizer_set_report_fd@@Base+0x724c>  // b.none
   2640c:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   26410:	ldr	x0, [x0, #3648]
   26414:	cmp	x0, #0x0
   26418:	b.eq	26430 <__sanitizer_set_report_fd@@Base+0x7238>  // b.none
   2641c:	add	x0, sp, #0x10
   26420:	mov	x1, x0
   26424:	mov	w0, #0x1                   	// #1
   26428:	bl	6b70 <real_clock_gettime@plt>
   2642c:	b	26454 <__sanitizer_set_report_fd@@Base+0x725c>
   26430:	add	x0, sp, #0x10
   26434:	mov	x1, x0
   26438:	mov	w0, #0x1                   	// #1
   2643c:	bl	6bc0 <clock_gettime@plt>
   26440:	b	26454 <__sanitizer_set_report_fd@@Base+0x725c>
   26444:	add	x0, sp, #0x10
   26448:	mov	x1, x0
   2644c:	mov	w0, #0x1                   	// #1
   26450:	bl	234fc <__sanitizer_set_report_fd@@Base+0x4304>
   26454:	ldr	x0, [sp, #16]
   26458:	mov	x1, x0
   2645c:	mov	x0, #0xca00                	// #51712
   26460:	movk	x0, #0x3b9a, lsl #16
   26464:	mul	x0, x1, x0
   26468:	ldr	x1, [sp, #24]
   2646c:	add	x0, x0, x1
   26470:	ldr	x30, [sp], #32
   26474:	ret
   26478:	str	x30, [sp, #-96]!
   2647c:	str	x0, [sp, #40]
   26480:	str	x1, [sp, #32]
   26484:	str	x2, [sp, #24]
   26488:	mov	x0, #0x8                   	// #8
   2648c:	str	x0, [sp, #88]
   26490:	mov	x0, #0x8                   	// #8
   26494:	str	x0, [sp, #80]
   26498:	ldr	x1, [sp, #88]
   2649c:	ldr	x0, [sp, #80]
   264a0:	cmp	x1, x0
   264a4:	cset	w0, ne  // ne = any
   264a8:	and	w0, w0, #0xff
   264ac:	and	x0, x0, #0xff
   264b0:	cmp	x0, #0x0
   264b4:	b.eq	264d8 <__sanitizer_set_report_fd@@Base+0x72e0>  // b.none
   264b8:	ldr	x4, [sp, #80]
   264bc:	ldr	x3, [sp, #88]
   264c0:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   264c4:	add	x2, x0, #0xa90
   264c8:	mov	w1, #0xd2                  	// #210
   264cc:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   264d0:	add	x0, x0, #0x848
   264d4:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   264d8:	add	x1, sp, #0x28
   264dc:	add	x0, sp, #0x38
   264e0:	mov	x2, #0x8                   	// #8
   264e4:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
   264e8:	ldr	x0, [sp, #56]
   264ec:	str	x0, [sp, #72]
   264f0:	str	xzr, [sp, #64]
   264f4:	ldr	x1, [sp, #72]
   264f8:	ldr	x0, [sp, #64]
   264fc:	cmp	x1, x0
   26500:	cset	w0, eq  // eq = none
   26504:	and	w0, w0, #0xff
   26508:	and	x0, x0, #0xff
   2650c:	cmp	x0, #0x0
   26510:	b.eq	26534 <__sanitizer_set_report_fd@@Base+0x733c>  // b.none
   26514:	ldr	x4, [sp, #64]
   26518:	ldr	x3, [sp, #72]
   2651c:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   26520:	add	x2, x0, #0xab8
   26524:	mov	w1, #0xd4                  	// #212
   26528:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   2652c:	add	x0, x0, #0x848
   26530:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   26534:	ldr	x2, [sp, #56]
   26538:	ldr	x1, [sp, #24]
   2653c:	ldr	x0, [sp, #32]
   26540:	blr	x2
   26544:	nop
   26548:	ldr	x30, [sp], #96
   2654c:	ret
   26550:	str	x30, [sp, #-96]!
   26554:	str	x0, [sp, #40]
   26558:	str	x1, [sp, #32]
   2655c:	str	x2, [sp, #24]
   26560:	mov	x0, #0x8                   	// #8
   26564:	str	x0, [sp, #88]
   26568:	mov	x0, #0x8                   	// #8
   2656c:	str	x0, [sp, #80]
   26570:	ldr	x1, [sp, #88]
   26574:	ldr	x0, [sp, #80]
   26578:	cmp	x1, x0
   2657c:	cset	w0, ne  // ne = any
   26580:	and	w0, w0, #0xff
   26584:	and	x0, x0, #0xff
   26588:	cmp	x0, #0x0
   2658c:	b.eq	265b0 <__sanitizer_set_report_fd@@Base+0x73b8>  // b.none
   26590:	ldr	x4, [sp, #80]
   26594:	ldr	x3, [sp, #88]
   26598:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   2659c:	add	x2, x0, #0xa90
   265a0:	mov	w1, #0xd2                  	// #210
   265a4:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   265a8:	add	x0, x0, #0x848
   265ac:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   265b0:	add	x1, sp, #0x28
   265b4:	add	x0, sp, #0x38
   265b8:	mov	x2, #0x8                   	// #8
   265bc:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
   265c0:	ldr	x0, [sp, #56]
   265c4:	str	x0, [sp, #72]
   265c8:	str	xzr, [sp, #64]
   265cc:	ldr	x1, [sp, #72]
   265d0:	ldr	x0, [sp, #64]
   265d4:	cmp	x1, x0
   265d8:	cset	w0, eq  // eq = none
   265dc:	and	w0, w0, #0xff
   265e0:	and	x0, x0, #0xff
   265e4:	cmp	x0, #0x0
   265e8:	b.eq	2660c <__sanitizer_set_report_fd@@Base+0x7414>  // b.none
   265ec:	ldr	x4, [sp, #64]
   265f0:	ldr	x3, [sp, #72]
   265f4:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   265f8:	add	x2, x0, #0xab8
   265fc:	mov	w1, #0xd4                  	// #212
   26600:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   26604:	add	x0, x0, #0x848
   26608:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2660c:	ldr	x2, [sp, #56]
   26610:	ldr	x1, [sp, #24]
   26614:	ldr	x0, [sp, #32]
   26618:	blr	x2
   2661c:	nop
   26620:	ldr	x30, [sp], #96
   26624:	ret
   26628:	str	x30, [sp, #-32]!
   2662c:	str	x0, [sp, #24]
   26630:	ldr	x0, [sp, #24]
   26634:	ldrb	w0, [x0, #24]
   26638:	cmp	w0, #0x0
   2663c:	b.eq	2664c <__sanitizer_set_report_fd@@Base+0x7454>  // b.none
   26640:	ldr	x0, [sp, #24]
   26644:	bl	d558 <__lsan_do_recoverable_leak_check@@Base+0x33cc>
   26648:	b	26658 <__sanitizer_set_report_fd@@Base+0x7460>
   2664c:	ldr	x0, [sp, #24]
   26650:	mov	x1, #0x4000                	// #16384
   26654:	bl	266bc <__sanitizer_set_report_fd@@Base+0x74c4>
   26658:	ldr	x0, [sp, #24]
   2665c:	mov	w1, #0x1                   	// #1
   26660:	strb	w1, [x0, #24]
   26664:	nop
   26668:	ldr	x30, [sp], #32
   2666c:	ret
   26670:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   26674:	ldr	x0, [x0, #3976]
   26678:	cmp	x0, #0x0
   2667c:	b.eq	266b4 <__sanitizer_set_report_fd@@Base+0x74bc>  // b.none
   26680:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   26684:	ldr	x0, [x0, #3976]
   26688:	ldr	x0, [x0]
   2668c:	cmp	x0, #0x0
   26690:	b.eq	266b4 <__sanitizer_set_report_fd@@Base+0x74bc>  // b.none
   26694:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   26698:	ldr	x0, [x0, #3976]
   2669c:	ldr	x0, [x0]
   266a0:	ldrb	w0, [x0]
   266a4:	cmp	w0, #0x0
   266a8:	b.eq	266b4 <__sanitizer_set_report_fd@@Base+0x74bc>  // b.none
   266ac:	mov	w0, #0x1                   	// #1
   266b0:	b	266b8 <__sanitizer_set_report_fd@@Base+0x74c0>
   266b4:	mov	w0, #0x0                   	// #0
   266b8:	ret
   266bc:	str	x30, [sp, #-32]!
   266c0:	str	x0, [sp, #24]
   266c4:	str	x1, [sp, #16]
   266c8:	ldr	x0, [sp, #24]
   266cc:	str	xzr, [x0, #8]
   266d0:	ldr	x0, [sp, #24]
   266d4:	str	xzr, [x0, #16]
   266d8:	ldr	x0, [sp, #24]
   266dc:	str	xzr, [x0]
   266e0:	ldr	x1, [sp, #16]
   266e4:	ldr	x0, [sp, #24]
   266e8:	bl	2682c <__sanitizer_set_report_fd@@Base+0x7634>
   266ec:	nop
   266f0:	ldr	x30, [sp], #32
   266f4:	ret
   266f8:	str	x30, [sp, #-32]!
   266fc:	str	x0, [sp, #24]
   26700:	mov	w1, #0x1                   	// #1
   26704:	ldr	x0, [sp, #24]
   26708:	bl	f49c <__sanitizer_get_allocated_size@@Base+0x93c>
   2670c:	ldr	x30, [sp], #32
   26710:	ret
   26714:	str	x30, [sp, #-32]!
   26718:	str	x0, [sp, #24]
   2671c:	str	x1, [sp, #16]
   26720:	mov	w2, #0x1                   	// #1
   26724:	ldr	x1, [sp, #16]
   26728:	ldr	x0, [sp, #24]
   2672c:	bl	f520 <__sanitizer_get_allocated_size@@Base+0x9c0>
   26730:	nop
   26734:	ldr	x30, [sp], #32
   26738:	ret
   2673c:	stp	x19, x30, [sp, #-64]!
   26740:	str	x0, [sp, #24]
   26744:	str	x1, [sp, #16]
   26748:	ldr	x0, [sp, #24]
   2674c:	ldr	x0, [x0, #16]
   26750:	str	x0, [sp, #56]
   26754:	ldr	x0, [sp, #24]
   26758:	bl	26874 <__sanitizer_set_report_fd@@Base+0x767c>
   2675c:	str	x0, [sp, #48]
   26760:	ldr	x1, [sp, #56]
   26764:	ldr	x0, [sp, #48]
   26768:	cmp	x1, x0
   2676c:	cset	w0, hi  // hi = pmore
   26770:	and	w0, w0, #0xff
   26774:	and	x0, x0, #0xff
   26778:	cmp	x0, #0x0
   2677c:	b.eq	267a0 <__sanitizer_set_report_fd@@Base+0x75a8>  // b.none
   26780:	ldr	x4, [sp, #48]
   26784:	ldr	x3, [sp, #56]
   26788:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   2678c:	add	x2, x0, #0xad0
   26790:	mov	w1, #0x1be                 	// #446
   26794:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   26798:	add	x0, x0, #0x708
   2679c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   267a0:	ldr	x0, [sp, #24]
   267a4:	ldr	x19, [x0, #16]
   267a8:	ldr	x0, [sp, #24]
   267ac:	bl	26874 <__sanitizer_set_report_fd@@Base+0x767c>
   267b0:	cmp	x19, x0
   267b4:	cset	w0, eq  // eq = none
   267b8:	and	w0, w0, #0xff
   267bc:	cmp	w0, #0x0
   267c0:	b.eq	267e4 <__sanitizer_set_report_fd@@Base+0x75ec>  // b.none
   267c4:	ldr	x0, [sp, #24]
   267c8:	ldr	x0, [x0, #16]
   267cc:	add	x0, x0, #0x1
   267d0:	bl	a3cc <__lsan_do_recoverable_leak_check@@Base+0x240>
   267d4:	str	x0, [sp, #40]
   267d8:	ldr	x1, [sp, #40]
   267dc:	ldr	x0, [sp, #24]
   267e0:	bl	268a4 <__sanitizer_set_report_fd@@Base+0x76ac>
   267e4:	ldr	x0, [sp, #24]
   267e8:	ldr	x2, [x0]
   267ec:	ldr	x0, [sp, #24]
   267f0:	ldr	x1, [x0, #16]
   267f4:	add	x3, x1, #0x1
   267f8:	ldr	x0, [sp, #24]
   267fc:	str	x3, [x0, #16]
   26800:	mov	x0, x1
   26804:	lsl	x0, x0, #3
   26808:	add	x0, x0, x1
   2680c:	lsl	x0, x0, #3
   26810:	add	x0, x2, x0
   26814:	mov	x2, #0x48                  	// #72
   26818:	ldr	x1, [sp, #16]
   2681c:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
   26820:	nop
   26824:	ldp	x19, x30, [sp], #64
   26828:	ret
   2682c:	str	x30, [sp, #-32]!
   26830:	str	x0, [sp, #24]
   26834:	str	x1, [sp, #16]
   26838:	ldr	x0, [sp, #24]
   2683c:	bl	26874 <__sanitizer_set_report_fd@@Base+0x767c>
   26840:	mov	x1, x0
   26844:	ldr	x0, [sp, #16]
   26848:	cmp	x0, x1
   2684c:	cset	w0, hi  // hi = pmore
   26850:	and	w0, w0, #0xff
   26854:	cmp	w0, #0x0
   26858:	b.eq	26868 <__sanitizer_set_report_fd@@Base+0x7670>  // b.none
   2685c:	ldr	x1, [sp, #16]
   26860:	ldr	x0, [sp, #24]
   26864:	bl	268a4 <__sanitizer_set_report_fd@@Base+0x76ac>
   26868:	nop
   2686c:	ldr	x30, [sp], #32
   26870:	ret
   26874:	sub	sp, sp, #0x10
   26878:	str	x0, [sp, #8]
   2687c:	ldr	x0, [sp, #8]
   26880:	ldr	x1, [x0, #8]
   26884:	mov	x0, #0xe38f                	// #58255
   26888:	movk	x0, #0x8e38, lsl #16
   2688c:	movk	x0, #0x38e3, lsl #32
   26890:	movk	x0, #0xe38e, lsl #48
   26894:	umulh	x0, x1, x0
   26898:	lsr	x0, x0, #6
   2689c:	add	sp, sp, #0x10
   268a0:	ret
   268a4:	stp	x19, x30, [sp, #-80]!
   268a8:	str	x0, [sp, #24]
   268ac:	str	x1, [sp, #16]
   268b0:	ldr	x0, [sp, #16]
   268b4:	str	x0, [sp, #72]
   268b8:	str	xzr, [sp, #64]
   268bc:	ldr	x1, [sp, #72]
   268c0:	ldr	x0, [sp, #64]
   268c4:	cmp	x1, x0
   268c8:	cset	w0, ls  // ls = plast
   268cc:	and	w0, w0, #0xff
   268d0:	and	x0, x0, #0xff
   268d4:	cmp	x0, #0x0
   268d8:	b.eq	268fc <__sanitizer_set_report_fd@@Base+0x7704>  // b.none
   268dc:	ldr	x4, [sp, #64]
   268e0:	ldr	x3, [sp, #72]
   268e4:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   268e8:	add	x2, x0, #0xaf0
   268ec:	mov	w1, #0x1fc                 	// #508
   268f0:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   268f4:	add	x0, x0, #0x708
   268f8:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   268fc:	ldr	x0, [sp, #24]
   26900:	ldr	x0, [x0, #16]
   26904:	str	x0, [sp, #56]
   26908:	ldr	x0, [sp, #16]
   2690c:	str	x0, [sp, #48]
   26910:	ldr	x1, [sp, #56]
   26914:	ldr	x0, [sp, #48]
   26918:	cmp	x1, x0
   2691c:	cset	w0, hi  // hi = pmore
   26920:	and	w0, w0, #0xff
   26924:	and	x0, x0, #0xff
   26928:	cmp	x0, #0x0
   2692c:	b.eq	26950 <__sanitizer_set_report_fd@@Base+0x7758>  // b.none
   26930:	ldr	x4, [sp, #48]
   26934:	ldr	x3, [sp, #56]
   26938:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   2693c:	add	x2, x0, #0xb10
   26940:	mov	w1, #0x1fd                 	// #509
   26944:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   26948:	add	x0, x0, #0x708
   2694c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   26950:	ldr	x1, [sp, #16]
   26954:	mov	x0, x1
   26958:	lsl	x0, x0, #3
   2695c:	add	x0, x0, x1
   26960:	lsl	x0, x0, #3
   26964:	mov	x19, x0
   26968:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
   2696c:	mov	x1, x0
   26970:	mov	x0, x19
   26974:	bl	a518 <__lsan_do_recoverable_leak_check@@Base+0x38c>
   26978:	str	x0, [sp, #40]
   2697c:	mov	w2, #0x0                   	// #0
   26980:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   26984:	add	x1, x0, #0xb30
   26988:	ldr	x0, [sp, #40]
   2698c:	bl	26a50 <__sanitizer_set_report_fd@@Base+0x7858>
   26990:	str	x0, [sp, #32]
   26994:	ldr	x0, [sp, #24]
   26998:	ldr	x3, [x0]
   2699c:	ldr	x0, [sp, #24]
   269a0:	ldr	x1, [x0, #16]
   269a4:	mov	x0, x1
   269a8:	lsl	x0, x0, #3
   269ac:	add	x0, x0, x1
   269b0:	lsl	x0, x0, #3
   269b4:	mov	x2, x0
   269b8:	mov	x1, x3
   269bc:	ldr	x0, [sp, #32]
   269c0:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
   269c4:	ldr	x0, [sp, #24]
   269c8:	ldr	x2, [x0]
   269cc:	ldr	x0, [sp, #24]
   269d0:	ldr	x0, [x0, #8]
   269d4:	mov	x1, x0
   269d8:	mov	x0, x2
   269dc:	bl	26af4 <__sanitizer_set_report_fd@@Base+0x78fc>
   269e0:	ldr	x0, [sp, #24]
   269e4:	ldr	x1, [sp, #32]
   269e8:	str	x1, [x0]
   269ec:	ldr	x0, [sp, #24]
   269f0:	ldr	x1, [sp, #40]
   269f4:	str	x1, [x0, #8]
   269f8:	nop
   269fc:	ldp	x19, x30, [sp], #80
   26a00:	ret
   26a04:	sub	sp, sp, #0x10
   26a08:	str	w0, [sp, #12]
   26a0c:	ldr	w0, [sp, #12]
   26a10:	cmp	w0, #0x2
   26a14:	b.ne	26a20 <__sanitizer_set_report_fd@@Base+0x7828>  // b.any
   26a18:	mov	x0, #0x4                   	// #4
   26a1c:	b	26a38 <__sanitizer_set_report_fd@@Base+0x7840>
   26a20:	ldr	w0, [sp, #12]
   26a24:	cmp	w0, #0xa
   26a28:	b.ne	26a34 <__sanitizer_set_report_fd@@Base+0x783c>  // b.any
   26a2c:	mov	x0, #0x10                  	// #16
   26a30:	b	26a38 <__sanitizer_set_report_fd@@Base+0x7840>
   26a34:	mov	x0, #0x0                   	// #0
   26a38:	add	sp, sp, #0x10
   26a3c:	ret
   26a40:	str	x30, [sp, #-16]!
   26a44:	bl	24724 <__sanitizer_set_report_fd@@Base+0x552c>
   26a48:	ldr	x30, [sp], #16
   26a4c:	ret
   26a50:	str	x30, [sp, #-64]!
   26a54:	str	x0, [sp, #40]
   26a58:	str	x1, [sp, #32]
   26a5c:	strb	w2, [sp, #31]
   26a60:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
   26a64:	mov	x1, x0
   26a68:	ldr	x0, [sp, #40]
   26a6c:	bl	a518 <__lsan_do_recoverable_leak_check@@Base+0x38c>
   26a70:	str	x0, [sp, #40]
   26a74:	mov	x5, #0x0                   	// #0
   26a78:	mov	w4, #0xffffffff            	// #-1
   26a7c:	mov	w3, #0x22                  	// #34
   26a80:	mov	w2, #0x3                   	// #3
   26a84:	ldr	x1, [sp, #40]
   26a88:	mov	x0, #0x0                   	// #0
   26a8c:	bl	22ee8 <__sanitizer_set_report_fd@@Base+0x3cf0>
   26a90:	str	x0, [sp, #56]
   26a94:	add	x0, sp, #0x34
   26a98:	mov	x1, x0
   26a9c:	ldr	x0, [sp, #56]
   26aa0:	bl	22e9c <__sanitizer_set_report_fd@@Base+0x3ca4>
   26aa4:	and	w0, w0, #0xff
   26aa8:	and	x0, x0, #0xff
   26aac:	cmp	x0, #0x0
   26ab0:	cset	w0, ne  // ne = any
   26ab4:	and	w0, w0, #0xff
   26ab8:	cmp	w0, #0x0
   26abc:	b.eq	26ae0 <__sanitizer_set_report_fd@@Base+0x78e8>  // b.none
   26ac0:	ldr	w0, [sp, #52]
   26ac4:	ldrb	w4, [sp, #31]
   26ac8:	mov	w3, w0
   26acc:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   26ad0:	add	x2, x0, #0xcf8
   26ad4:	ldr	x1, [sp, #32]
   26ad8:	ldr	x0, [sp, #40]
   26adc:	bl	19234 <__sancov_default_options@@Base+0x3098>
   26ae0:	ldr	x0, [sp, #40]
   26ae4:	bl	19870 <__sancov_default_options@@Base+0x36d4>
   26ae8:	ldr	x0, [sp, #56]
   26aec:	ldr	x30, [sp], #64
   26af0:	ret
   26af4:	str	x30, [sp, #-64]!
   26af8:	str	x0, [sp, #24]
   26afc:	str	x1, [sp, #16]
   26b00:	ldr	x0, [sp, #24]
   26b04:	cmp	x0, #0x0
   26b08:	b.eq	26bcc <__sanitizer_set_report_fd@@Base+0x79d4>  // b.none
   26b0c:	ldr	x0, [sp, #16]
   26b10:	cmp	x0, #0x0
   26b14:	b.eq	26bcc <__sanitizer_set_report_fd@@Base+0x79d4>  // b.none
   26b18:	ldr	x1, [sp, #16]
   26b1c:	ldr	x0, [sp, #24]
   26b20:	bl	22f44 <__sanitizer_set_report_fd@@Base+0x3d4c>
   26b24:	str	x0, [sp, #56]
   26b28:	mov	x1, #0x0                   	// #0
   26b2c:	ldr	x0, [sp, #56]
   26b30:	bl	22e9c <__sanitizer_set_report_fd@@Base+0x3ca4>
   26b34:	and	w0, w0, #0xff
   26b38:	and	x0, x0, #0xff
   26b3c:	cmp	x0, #0x0
   26b40:	cset	w0, ne  // ne = any
   26b44:	and	w0, w0, #0xff
   26b48:	cmp	w0, #0x0
   26b4c:	b.eq	26bc0 <__sanitizer_set_report_fd@@Base+0x79c8>  // b.none
   26b50:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   26b54:	ldr	x0, [x0, #4008]
   26b58:	ldr	x0, [x0]
   26b5c:	ldr	x4, [sp, #24]
   26b60:	ldr	x3, [sp, #16]
   26b64:	ldr	x2, [sp, #16]
   26b68:	mov	x1, x0
   26b6c:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   26b70:	add	x0, x0, #0xd08
   26b74:	bl	2a3fc <OnPrint@@Base+0x454>
   26b78:	str	xzr, [sp, #48]
   26b7c:	str	xzr, [sp, #40]
   26b80:	ldr	x1, [sp, #48]
   26b84:	ldr	x0, [sp, #40]
   26b88:	cmp	x1, x0
   26b8c:	cset	w0, eq  // eq = none
   26b90:	and	w0, w0, #0xff
   26b94:	and	x0, x0, #0xff
   26b98:	cmp	x0, #0x0
   26b9c:	b.eq	26bc0 <__sanitizer_set_report_fd@@Base+0x79c8>  // b.none
   26ba0:	ldr	x4, [sp, #40]
   26ba4:	ldr	x3, [sp, #48]
   26ba8:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   26bac:	add	x2, x0, #0xd48
   26bb0:	mov	w1, #0x3c                  	// #60
   26bb4:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   26bb8:	add	x0, x0, #0xd70
   26bbc:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   26bc0:	ldr	x0, [sp, #16]
   26bc4:	bl	19908 <__sancov_default_options@@Base+0x376c>
   26bc8:	b	26bd0 <__sanitizer_set_report_fd@@Base+0x79d8>
   26bcc:	nop
   26bd0:	ldr	x30, [sp], #64
   26bd4:	ret
   26bd8:	str	x30, [sp, #-48]!
   26bdc:	str	x0, [sp, #24]
   26be0:	str	x1, [sp, #16]
   26be4:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
   26be8:	mov	x1, x0
   26bec:	ldr	x0, [sp, #24]
   26bf0:	bl	a518 <__lsan_do_recoverable_leak_check@@Base+0x38c>
   26bf4:	str	x0, [sp, #24]
   26bf8:	mov	x5, #0x0                   	// #0
   26bfc:	mov	w4, #0xffffffff            	// #-1
   26c00:	mov	w3, #0x22                  	// #34
   26c04:	mov	w2, #0x3                   	// #3
   26c08:	ldr	x1, [sp, #24]
   26c0c:	mov	x0, #0x0                   	// #0
   26c10:	bl	22ee8 <__sanitizer_set_report_fd@@Base+0x3cf0>
   26c14:	str	x0, [sp, #40]
   26c18:	add	x0, sp, #0x24
   26c1c:	mov	x1, x0
   26c20:	ldr	x0, [sp, #40]
   26c24:	bl	22e9c <__sanitizer_set_report_fd@@Base+0x3ca4>
   26c28:	and	w0, w0, #0xff
   26c2c:	and	x0, x0, #0xff
   26c30:	cmp	x0, #0x0
   26c34:	cset	w0, ne  // ne = any
   26c38:	and	w0, w0, #0xff
   26c3c:	cmp	w0, #0x0
   26c40:	b.eq	26c78 <__sanitizer_set_report_fd@@Base+0x7a80>  // b.none
   26c44:	ldr	w0, [sp, #36]
   26c48:	cmp	w0, #0xc
   26c4c:	b.ne	26c58 <__sanitizer_set_report_fd@@Base+0x7a60>  // b.any
   26c50:	mov	x0, #0x0                   	// #0
   26c54:	b	26c84 <__sanitizer_set_report_fd@@Base+0x7a8c>
   26c58:	ldr	w0, [sp, #36]
   26c5c:	mov	w4, #0x0                   	// #0
   26c60:	mov	w3, w0
   26c64:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   26c68:	add	x2, x0, #0xcf8
   26c6c:	ldr	x1, [sp, #16]
   26c70:	ldr	x0, [sp, #24]
   26c74:	bl	19234 <__sancov_default_options@@Base+0x3098>
   26c78:	ldr	x0, [sp, #24]
   26c7c:	bl	19870 <__sancov_default_options@@Base+0x36d4>
   26c80:	ldr	x0, [sp, #40]
   26c84:	ldr	x30, [sp], #48
   26c88:	ret
   26c8c:	str	x30, [sp, #-128]!
   26c90:	str	x0, [sp, #40]
   26c94:	str	x1, [sp, #32]
   26c98:	str	x2, [sp, #24]
   26c9c:	ldr	x0, [sp, #40]
   26ca0:	bl	a3a0 <__lsan_do_recoverable_leak_check@@Base+0x214>
   26ca4:	and	w0, w0, #0xff
   26ca8:	and	x0, x0, #0xff
   26cac:	str	x0, [sp, #112]
   26cb0:	str	xzr, [sp, #104]
   26cb4:	ldr	x1, [sp, #112]
   26cb8:	ldr	x0, [sp, #104]
   26cbc:	cmp	x1, x0
   26cc0:	cset	w0, eq  // eq = none
   26cc4:	and	w0, w0, #0xff
   26cc8:	and	x0, x0, #0xff
   26ccc:	cmp	x0, #0x0
   26cd0:	b.eq	26cf4 <__sanitizer_set_report_fd@@Base+0x7afc>  // b.none
   26cd4:	ldr	x4, [sp, #104]
   26cd8:	ldr	x3, [sp, #112]
   26cdc:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   26ce0:	add	x2, x0, #0xdb0
   26ce4:	mov	w1, #0x55                  	// #85
   26ce8:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   26cec:	add	x0, x0, #0xd70
   26cf0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   26cf4:	ldr	x0, [sp, #32]
   26cf8:	bl	a3a0 <__lsan_do_recoverable_leak_check@@Base+0x214>
   26cfc:	and	w0, w0, #0xff
   26d00:	and	x0, x0, #0xff
   26d04:	str	x0, [sp, #96]
   26d08:	str	xzr, [sp, #88]
   26d0c:	ldr	x1, [sp, #96]
   26d10:	ldr	x0, [sp, #88]
   26d14:	cmp	x1, x0
   26d18:	cset	w0, eq  // eq = none
   26d1c:	and	w0, w0, #0xff
   26d20:	and	x0, x0, #0xff
   26d24:	cmp	x0, #0x0
   26d28:	b.eq	26d4c <__sanitizer_set_report_fd@@Base+0x7b54>  // b.none
   26d2c:	ldr	x4, [sp, #88]
   26d30:	ldr	x3, [sp, #96]
   26d34:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   26d38:	add	x2, x0, #0xdd0
   26d3c:	mov	w1, #0x56                  	// #86
   26d40:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   26d44:	add	x0, x0, #0xd70
   26d48:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   26d4c:	ldr	x1, [sp, #40]
   26d50:	ldr	x0, [sp, #32]
   26d54:	add	x0, x1, x0
   26d58:	str	x0, [sp, #80]
   26d5c:	ldr	x1, [sp, #24]
   26d60:	ldr	x0, [sp, #80]
   26d64:	bl	26bd8 <__sanitizer_set_report_fd@@Base+0x79e0>
   26d68:	str	x0, [sp, #72]
   26d6c:	ldr	x0, [sp, #72]
   26d70:	cmp	x0, #0x0
   26d74:	cset	w0, eq  // eq = none
   26d78:	and	w0, w0, #0xff
   26d7c:	and	x0, x0, #0xff
   26d80:	cmp	x0, #0x0
   26d84:	b.eq	26d90 <__sanitizer_set_report_fd@@Base+0x7b98>  // b.none
   26d88:	mov	x0, #0x0                   	// #0
   26d8c:	b	26e44 <__sanitizer_set_report_fd@@Base+0x7c4c>
   26d90:	ldr	x1, [sp, #72]
   26d94:	ldr	x0, [sp, #80]
   26d98:	add	x0, x1, x0
   26d9c:	str	x0, [sp, #64]
   26da0:	ldr	x0, [sp, #72]
   26da4:	str	x0, [sp, #120]
   26da8:	ldr	x1, [sp, #32]
   26dac:	ldr	x0, [sp, #120]
   26db0:	bl	ed50 <__sanitizer_get_allocated_size@@Base+0x1f0>
   26db4:	and	w0, w0, #0xff
   26db8:	eor	w0, w0, #0x1
   26dbc:	and	w0, w0, #0xff
   26dc0:	cmp	w0, #0x0
   26dc4:	b.eq	26e04 <__sanitizer_set_report_fd@@Base+0x7c0c>  // b.none
   26dc8:	ldr	x1, [sp, #72]
   26dcc:	ldr	x0, [sp, #32]
   26dd0:	add	x0, x1, x0
   26dd4:	sub	x1, x0, #0x1
   26dd8:	ldr	x0, [sp, #32]
   26ddc:	neg	x0, x0
   26de0:	and	x0, x1, x0
   26de4:	str	x0, [sp, #120]
   26de8:	ldr	x2, [sp, #72]
   26dec:	ldr	x1, [sp, #120]
   26df0:	ldr	x0, [sp, #72]
   26df4:	sub	x0, x1, x0
   26df8:	mov	x1, x0
   26dfc:	mov	x0, x2
   26e00:	bl	26af4 <__sanitizer_set_report_fd@@Base+0x78fc>
   26e04:	ldr	x1, [sp, #120]
   26e08:	ldr	x0, [sp, #40]
   26e0c:	add	x0, x1, x0
   26e10:	str	x0, [sp, #56]
   26e14:	ldr	x1, [sp, #56]
   26e18:	ldr	x0, [sp, #64]
   26e1c:	cmp	x1, x0
   26e20:	b.eq	26e40 <__sanitizer_set_report_fd@@Base+0x7c48>  // b.none
   26e24:	ldr	x2, [sp, #56]
   26e28:	ldr	x1, [sp, #64]
   26e2c:	ldr	x0, [sp, #56]
   26e30:	sub	x0, x1, x0
   26e34:	mov	x1, x0
   26e38:	mov	x0, x2
   26e3c:	bl	26af4 <__sanitizer_set_report_fd@@Base+0x78fc>
   26e40:	ldr	x0, [sp, #120]
   26e44:	ldr	x30, [sp], #128
   26e48:	ret
   26e4c:	str	x30, [sp, #-64]!
   26e50:	str	x0, [sp, #24]
   26e54:	str	x1, [sp, #16]
   26e58:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
   26e5c:	str	x0, [sp, #56]
   26e60:	ldr	x1, [sp, #56]
   26e64:	ldr	x0, [sp, #24]
   26e68:	bl	a518 <__lsan_do_recoverable_leak_check@@Base+0x38c>
   26e6c:	mov	x5, #0x0                   	// #0
   26e70:	mov	w4, #0xffffffff            	// #-1
   26e74:	mov	w3, #0x4022                	// #16418
   26e78:	mov	w2, #0x3                   	// #3
   26e7c:	mov	x1, x0
   26e80:	mov	x0, #0x0                   	// #0
   26e84:	bl	22ee8 <__sanitizer_set_report_fd@@Base+0x3cf0>
   26e88:	str	x0, [sp, #48]
   26e8c:	add	x0, sp, #0x2c
   26e90:	mov	x1, x0
   26e94:	ldr	x0, [sp, #48]
   26e98:	bl	22e9c <__sanitizer_set_report_fd@@Base+0x3ca4>
   26e9c:	and	w0, w0, #0xff
   26ea0:	and	x0, x0, #0xff
   26ea4:	cmp	x0, #0x0
   26ea8:	cset	w0, ne  // ne = any
   26eac:	and	w0, w0, #0xff
   26eb0:	cmp	w0, #0x0
   26eb4:	b.eq	26ed8 <__sanitizer_set_report_fd@@Base+0x7ce0>  // b.none
   26eb8:	ldr	w0, [sp, #44]
   26ebc:	mov	w4, #0x0                   	// #0
   26ec0:	mov	w3, w0
   26ec4:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   26ec8:	add	x2, x0, #0xdf8
   26ecc:	ldr	x1, [sp, #16]
   26ed0:	ldr	x0, [sp, #24]
   26ed4:	bl	19234 <__sancov_default_options@@Base+0x3098>
   26ed8:	ldr	x0, [sp, #24]
   26edc:	bl	19870 <__sancov_default_options@@Base+0x36d4>
   26ee0:	ldr	x0, [sp, #48]
   26ee4:	ldr	x30, [sp], #64
   26ee8:	ret
   26eec:	stp	x19, x30, [sp, #-112]!
   26ef0:	str	x0, [sp, #40]
   26ef4:	str	x1, [sp, #32]
   26ef8:	strb	w2, [sp, #31]
   26efc:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
   26f00:	str	x0, [sp, #104]
   26f04:	ldr	x0, [sp, #104]
   26f08:	neg	x1, x0
   26f0c:	ldr	x0, [sp, #40]
   26f10:	and	x0, x1, x0
   26f14:	mov	x19, x0
   26f18:	ldr	x1, [sp, #104]
   26f1c:	ldr	x0, [sp, #32]
   26f20:	bl	a518 <__lsan_do_recoverable_leak_check@@Base+0x38c>
   26f24:	mov	x5, #0x0                   	// #0
   26f28:	mov	w4, #0xffffffff            	// #-1
   26f2c:	mov	w3, #0x32                  	// #50
   26f30:	mov	w2, #0x3                   	// #3
   26f34:	mov	x1, x0
   26f38:	mov	x0, x19
   26f3c:	bl	22ee8 <__sanitizer_set_report_fd@@Base+0x3cf0>
   26f40:	str	x0, [sp, #96]
   26f44:	add	x0, sp, #0x5c
   26f48:	mov	x1, x0
   26f4c:	ldr	x0, [sp, #96]
   26f50:	bl	22e9c <__sanitizer_set_report_fd@@Base+0x3ca4>
   26f54:	and	w0, w0, #0xff
   26f58:	and	x0, x0, #0xff
   26f5c:	cmp	x0, #0x0
   26f60:	cset	w0, ne  // ne = any
   26f64:	and	w0, w0, #0xff
   26f68:	cmp	w0, #0x0
   26f6c:	b.eq	26fcc <__sanitizer_set_report_fd@@Base+0x7dd4>  // b.none
   26f70:	ldrb	w0, [sp, #31]
   26f74:	cmp	w0, #0x0
   26f78:	b.eq	26f90 <__sanitizer_set_report_fd@@Base+0x7d98>  // b.none
   26f7c:	ldr	w0, [sp, #92]
   26f80:	cmp	w0, #0xc
   26f84:	b.ne	26f90 <__sanitizer_set_report_fd@@Base+0x7d98>  // b.any
   26f88:	mov	x0, #0x0                   	// #0
   26f8c:	b	26fd8 <__sanitizer_set_report_fd@@Base+0x7de0>
   26f90:	add	x4, sp, #0x30
   26f94:	ldr	x3, [sp, #40]
   26f98:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   26f9c:	add	x2, x0, #0xe10
   26fa0:	mov	x1, #0x28                  	// #40
   26fa4:	mov	x0, x4
   26fa8:	bl	2a4a8 <OnPrint@@Base+0x500>
   26fac:	ldr	w0, [sp, #92]
   26fb0:	add	x1, sp, #0x30
   26fb4:	mov	w4, #0x0                   	// #0
   26fb8:	mov	w3, w0
   26fbc:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   26fc0:	add	x2, x0, #0xcf8
   26fc4:	ldr	x0, [sp, #32]
   26fc8:	bl	19234 <__sancov_default_options@@Base+0x3098>
   26fcc:	ldr	x0, [sp, #32]
   26fd0:	bl	19870 <__sancov_default_options@@Base+0x36d4>
   26fd4:	ldr	x0, [sp, #96]
   26fd8:	ldp	x19, x30, [sp], #112
   26fdc:	ret
   26fe0:	str	x30, [sp, #-32]!
   26fe4:	str	x0, [sp, #24]
   26fe8:	str	x1, [sp, #16]
   26fec:	mov	w2, #0x0                   	// #0
   26ff0:	ldr	x1, [sp, #16]
   26ff4:	ldr	x0, [sp, #24]
   26ff8:	bl	26eec <__sanitizer_set_report_fd@@Base+0x7cf4>
   26ffc:	ldr	x30, [sp], #32
   27000:	ret
   27004:	str	x30, [sp, #-32]!
   27008:	str	x0, [sp, #24]
   2700c:	str	x1, [sp, #16]
   27010:	mov	w2, #0x1                   	// #1
   27014:	ldr	x1, [sp, #16]
   27018:	ldr	x0, [sp, #24]
   2701c:	bl	26eec <__sanitizer_set_report_fd@@Base+0x7cf4>
   27020:	ldr	x30, [sp], #32
   27024:	ret
   27028:	str	x30, [sp, #-32]!
   2702c:	str	x0, [sp, #24]
   27030:	str	x1, [sp, #16]
   27034:	ldr	x0, [sp, #24]
   27038:	mov	w2, #0x0                   	// #0
   2703c:	ldr	x1, [sp, #16]
   27040:	bl	22f70 <__sanitizer_set_report_fd@@Base+0x3d78>
   27044:	cmp	w0, #0x0
   27048:	cset	w0, eq  // eq = none
   2704c:	and	w0, w0, #0xff
   27050:	ldr	x30, [sp], #32
   27054:	ret
   27058:	str	x30, [sp, #-32]!
   2705c:	str	x0, [sp, #24]
   27060:	str	x1, [sp, #16]
   27064:	ldr	x0, [sp, #24]
   27068:	mov	w2, #0x1                   	// #1
   2706c:	ldr	x1, [sp, #16]
   27070:	bl	22f70 <__sanitizer_set_report_fd@@Base+0x3d78>
   27074:	cmp	w0, #0x0
   27078:	cset	w0, eq  // eq = none
   2707c:	and	w0, w0, #0xff
   27080:	ldr	x30, [sp], #32
   27084:	ret
   27088:	sub	sp, sp, #0x10
   2708c:	str	x0, [sp, #8]
   27090:	str	w1, [sp, #4]
   27094:	nop
   27098:	add	sp, sp, #0x10
   2709c:	ret
   270a0:	str	x30, [sp, #-64]!
   270a4:	str	x0, [sp, #40]
   270a8:	str	w1, [sp, #36]
   270ac:	str	x2, [sp, #24]
   270b0:	ldr	w0, [sp, #36]
   270b4:	cmp	w0, #0x2
   270b8:	b.eq	270ec <__sanitizer_set_report_fd@@Base+0x7ef4>  // b.none
   270bc:	cmp	w0, #0x2
   270c0:	b.gt	270f8 <__sanitizer_set_report_fd@@Base+0x7f00>
   270c4:	cmp	w0, #0x0
   270c8:	b.eq	270d8 <__sanitizer_set_report_fd@@Base+0x7ee0>  // b.none
   270cc:	cmp	w0, #0x1
   270d0:	b.eq	270e0 <__sanitizer_set_report_fd@@Base+0x7ee8>  // b.none
   270d4:	b	270f8 <__sanitizer_set_report_fd@@Base+0x7f00>
   270d8:	str	wzr, [sp, #60]
   270dc:	b	270f8 <__sanitizer_set_report_fd@@Base+0x7f00>
   270e0:	mov	w0, #0x241                 	// #577
   270e4:	str	w0, [sp, #60]
   270e8:	b	270f8 <__sanitizer_set_report_fd@@Base+0x7f00>
   270ec:	mov	w0, #0x42                  	// #66
   270f0:	str	w0, [sp, #60]
   270f4:	nop
   270f8:	mov	w2, #0x1b0                 	// #432
   270fc:	ldr	w1, [sp, #60]
   27100:	ldr	x0, [sp, #40]
   27104:	bl	22ff8 <__sanitizer_set_report_fd@@Base+0x3e00>
   27108:	str	w0, [sp, #56]
   2710c:	ldrsw	x0, [sp, #56]
   27110:	ldr	x1, [sp, #24]
   27114:	bl	22e9c <__sanitizer_set_report_fd@@Base+0x3ca4>
   27118:	and	w0, w0, #0xff
   2711c:	cmp	w0, #0x0
   27120:	b.eq	2712c <__sanitizer_set_report_fd@@Base+0x7f34>  // b.none
   27124:	mov	w0, #0xffffffff            	// #-1
   27128:	b	27130 <__sanitizer_set_report_fd@@Base+0x7f38>
   2712c:	ldr	w0, [sp, #56]
   27130:	ldr	x30, [sp], #64
   27134:	ret
   27138:	str	x30, [sp, #-32]!
   2713c:	str	w0, [sp, #28]
   27140:	ldr	w0, [sp, #28]
   27144:	bl	22fa8 <__sanitizer_set_report_fd@@Base+0x3db0>
   27148:	nop
   2714c:	ldr	x30, [sp], #32
   27150:	ret
   27154:	str	x30, [sp, #-80]!
   27158:	str	w0, [sp, #60]
   2715c:	str	x1, [sp, #48]
   27160:	str	x2, [sp, #40]
   27164:	str	x3, [sp, #32]
   27168:	str	x4, [sp, #24]
   2716c:	ldr	x2, [sp, #40]
   27170:	ldr	x1, [sp, #48]
   27174:	ldr	w0, [sp, #60]
   27178:	bl	23034 <__sanitizer_set_report_fd@@Base+0x3e3c>
   2717c:	str	x0, [sp, #72]
   27180:	ldr	x1, [sp, #24]
   27184:	ldr	x0, [sp, #72]
   27188:	bl	22e9c <__sanitizer_set_report_fd@@Base+0x3ca4>
   2718c:	and	w0, w0, #0xff
   27190:	cmp	w0, #0x0
   27194:	b.eq	271a0 <__sanitizer_set_report_fd@@Base+0x7fa8>  // b.none
   27198:	mov	w0, #0x0                   	// #0
   2719c:	b	271bc <__sanitizer_set_report_fd@@Base+0x7fc4>
   271a0:	ldr	x0, [sp, #32]
   271a4:	cmp	x0, #0x0
   271a8:	b.eq	271b8 <__sanitizer_set_report_fd@@Base+0x7fc0>  // b.none
   271ac:	ldr	x0, [sp, #32]
   271b0:	ldr	x1, [sp, #72]
   271b4:	str	x1, [x0]
   271b8:	mov	w0, #0x1                   	// #1
   271bc:	ldr	x30, [sp], #80
   271c0:	ret
   271c4:	str	x30, [sp, #-80]!
   271c8:	str	w0, [sp, #60]
   271cc:	str	x1, [sp, #48]
   271d0:	str	x2, [sp, #40]
   271d4:	str	x3, [sp, #32]
   271d8:	str	x4, [sp, #24]
   271dc:	ldr	x2, [sp, #40]
   271e0:	ldr	x1, [sp, #48]
   271e4:	ldr	w0, [sp, #60]
   271e8:	bl	230b0 <__sanitizer_set_report_fd@@Base+0x3eb8>
   271ec:	str	x0, [sp, #72]
   271f0:	ldr	x1, [sp, #24]
   271f4:	ldr	x0, [sp, #72]
   271f8:	bl	22e9c <__sanitizer_set_report_fd@@Base+0x3ca4>
   271fc:	and	w0, w0, #0xff
   27200:	cmp	w0, #0x0
   27204:	b.eq	27210 <__sanitizer_set_report_fd@@Base+0x8018>  // b.none
   27208:	mov	w0, #0x0                   	// #0
   2720c:	b	2722c <__sanitizer_set_report_fd@@Base+0x8034>
   27210:	ldr	x0, [sp, #32]
   27214:	cmp	x0, #0x0
   27218:	b.eq	27228 <__sanitizer_set_report_fd@@Base+0x8030>  // b.none
   2721c:	ldr	x0, [sp, #32]
   27220:	ldr	x1, [sp, #72]
   27224:	str	x1, [x0]
   27228:	mov	w0, #0x1                   	// #1
   2722c:	ldr	x30, [sp], #80
   27230:	ret
   27234:	str	x30, [sp, #-64]!
   27238:	str	x0, [sp, #40]
   2723c:	str	x1, [sp, #32]
   27240:	str	x2, [sp, #24]
   27244:	ldr	x1, [sp, #32]
   27248:	ldr	x0, [sp, #40]
   2724c:	bl	23300 <__sanitizer_set_report_fd@@Base+0x4108>
   27250:	str	x0, [sp, #56]
   27254:	ldr	x1, [sp, #24]
   27258:	ldr	x0, [sp, #56]
   2725c:	bl	22e9c <__sanitizer_set_report_fd@@Base+0x3ca4>
   27260:	and	w0, w0, #0xff
   27264:	eor	w0, w0, #0x1
   27268:	and	w0, w0, #0xff
   2726c:	ldr	x30, [sp], #64
   27270:	ret
   27274:	str	x30, [sp, #-112]!
   27278:	str	x0, [sp, #24]
   2727c:	str	x1, [sp, #16]
   27280:	mov	x2, #0x0                   	// #0
   27284:	mov	w1, #0x0                   	// #0
   27288:	ldr	x0, [sp, #24]
   2728c:	bl	270a0 <__sanitizer_set_report_fd@@Base+0x7ea8>
   27290:	str	w0, [sp, #108]
   27294:	ldr	w0, [sp, #108]
   27298:	cmn	w0, #0x1
   2729c:	cset	w0, ne  // ne = any
   272a0:	and	w0, w0, #0xff
   272a4:	and	x0, x0, #0xff
   272a8:	str	x0, [sp, #96]
   272ac:	str	xzr, [sp, #88]
   272b0:	ldr	x1, [sp, #96]
   272b4:	ldr	x0, [sp, #88]
   272b8:	cmp	x1, x0
   272bc:	cset	w0, eq  // eq = none
   272c0:	and	w0, w0, #0xff
   272c4:	and	x0, x0, #0xff
   272c8:	cmp	x0, #0x0
   272cc:	b.eq	272f0 <__sanitizer_set_report_fd@@Base+0x80f8>  // b.none
   272d0:	ldr	x4, [sp, #88]
   272d4:	ldr	x3, [sp, #96]
   272d8:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   272dc:	add	x2, x0, #0xe28
   272e0:	mov	w1, #0xc9                  	// #201
   272e4:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   272e8:	add	x0, x0, #0xd70
   272ec:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   272f0:	ldr	w0, [sp, #108]
   272f4:	bl	23230 <__sanitizer_set_report_fd@@Base+0x4038>
   272f8:	str	x0, [sp, #80]
   272fc:	ldr	x0, [sp, #80]
   27300:	str	x0, [sp, #72]
   27304:	mov	x0, #0xffffffffffffffff    	// #-1
   27308:	str	x0, [sp, #64]
   2730c:	ldr	x1, [sp, #72]
   27310:	ldr	x0, [sp, #64]
   27314:	cmp	x1, x0
   27318:	cset	w0, eq  // eq = none
   2731c:	and	w0, w0, #0xff
   27320:	and	x0, x0, #0xff
   27324:	cmp	x0, #0x0
   27328:	b.eq	2734c <__sanitizer_set_report_fd@@Base+0x8154>  // b.none
   2732c:	ldr	x4, [sp, #64]
   27330:	ldr	x3, [sp, #72]
   27334:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   27338:	add	x2, x0, #0xe48
   2733c:	mov	w1, #0xcb                  	// #203
   27340:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   27344:	add	x0, x0, #0xd70
   27348:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2734c:	ldr	x0, [sp, #80]
   27350:	str	x0, [sp, #56]
   27354:	str	xzr, [sp, #48]
   27358:	ldr	x1, [sp, #56]
   2735c:	ldr	x0, [sp, #48]
   27360:	cmp	x1, x0
   27364:	cset	w0, ls  // ls = plast
   27368:	and	w0, w0, #0xff
   2736c:	and	x0, x0, #0xff
   27370:	cmp	x0, #0x0
   27374:	b.eq	27398 <__sanitizer_set_report_fd@@Base+0x81a0>  // b.none
   27378:	ldr	x4, [sp, #48]
   2737c:	ldr	x3, [sp, #56]
   27380:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   27384:	add	x2, x0, #0xe68
   27388:	mov	w1, #0xcc                  	// #204
   2738c:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   27390:	add	x0, x0, #0xd70
   27394:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   27398:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
   2739c:	mov	x1, x0
   273a0:	ldr	x0, [sp, #80]
   273a4:	bl	a518 <__lsan_do_recoverable_leak_check@@Base+0x38c>
   273a8:	mov	x1, x0
   273ac:	ldr	x0, [sp, #16]
   273b0:	str	x1, [x0]
   273b4:	ldr	x0, [sp, #16]
   273b8:	ldr	x0, [x0]
   273bc:	mov	x5, #0x0                   	// #0
   273c0:	ldr	w4, [sp, #108]
   273c4:	mov	w3, #0x2                   	// #2
   273c8:	mov	w2, #0x1                   	// #1
   273cc:	mov	x1, x0
   273d0:	mov	x0, #0x0                   	// #0
   273d4:	bl	22ee8 <__sanitizer_set_report_fd@@Base+0x3cf0>
   273d8:	str	x0, [sp, #40]
   273dc:	mov	x1, #0x0                   	// #0
   273e0:	ldr	x0, [sp, #40]
   273e4:	bl	22e9c <__sanitizer_set_report_fd@@Base+0x3ca4>
   273e8:	and	w0, w0, #0xff
   273ec:	cmp	w0, #0x0
   273f0:	b.eq	273fc <__sanitizer_set_report_fd@@Base+0x8204>  // b.none
   273f4:	mov	x0, #0x0                   	// #0
   273f8:	b	27400 <__sanitizer_set_report_fd@@Base+0x8208>
   273fc:	ldr	x0, [sp, #40]
   27400:	ldr	x30, [sp], #112
   27404:	ret
   27408:	str	x30, [sp, #-80]!
   2740c:	str	x0, [sp, #40]
   27410:	str	x1, [sp, #32]
   27414:	str	w2, [sp, #28]
   27418:	str	x3, [sp, #16]
   2741c:	mov	x0, #0x1                   	// #1
   27420:	str	x0, [sp, #72]
   27424:	ldr	x0, [sp, #40]
   27428:	cmp	x0, #0x0
   2742c:	b.eq	2743c <__sanitizer_set_report_fd@@Base+0x8244>  // b.none
   27430:	ldr	x0, [sp, #72]
   27434:	orr	x0, x0, #0x10
   27438:	str	x0, [sp, #72]
   2743c:	ldr	x0, [sp, #72]
   27440:	ldr	x5, [sp, #16]
   27444:	ldr	w4, [sp, #28]
   27448:	mov	w3, w0
   2744c:	mov	w2, #0x3                   	// #3
   27450:	ldr	x1, [sp, #32]
   27454:	ldr	x0, [sp, #40]
   27458:	bl	22ee8 <__sanitizer_set_report_fd@@Base+0x3cf0>
   2745c:	str	x0, [sp, #64]
   27460:	str	wzr, [sp, #60]
   27464:	add	x0, sp, #0x3c
   27468:	mov	x1, x0
   2746c:	ldr	x0, [sp, #64]
   27470:	bl	22e9c <__sanitizer_set_report_fd@@Base+0x3ca4>
   27474:	and	w0, w0, #0xff
   27478:	cmp	w0, #0x0
   2747c:	b.eq	274b0 <__sanitizer_set_report_fd@@Base+0x82b8>  // b.none
   27480:	ldr	x0, [sp, #16]
   27484:	ldr	w1, [sp, #60]
   27488:	mov	w5, w1
   2748c:	ldr	x4, [sp, #64]
   27490:	ldr	x3, [sp, #32]
   27494:	mov	x2, x0
   27498:	ldr	w1, [sp, #28]
   2749c:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   274a0:	add	x0, x0, #0xe80
   274a4:	bl	2a350 <OnPrint@@Base+0x3a8>
   274a8:	mov	x0, #0x0                   	// #0
   274ac:	b	274b4 <__sanitizer_set_report_fd@@Base+0x82bc>
   274b0:	ldr	x0, [sp, #64]
   274b4:	ldr	x30, [sp], #80
   274b8:	ret
   274bc:	str	x30, [sp, #-80]!
   274c0:	str	x0, [sp, #40]
   274c4:	str	x1, [sp, #32]
   274c8:	str	x2, [sp, #24]
   274cc:	str	x3, [sp, #16]
   274d0:	ldr	x1, [sp, #40]
   274d4:	ldr	x0, [sp, #32]
   274d8:	cmp	x1, x0
   274dc:	cset	w0, ls  // ls = plast
   274e0:	and	w0, w0, #0xff
   274e4:	and	x0, x0, #0xff
   274e8:	str	x0, [sp, #72]
   274ec:	str	xzr, [sp, #64]
   274f0:	ldr	x1, [sp, #72]
   274f4:	ldr	x0, [sp, #64]
   274f8:	cmp	x1, x0
   274fc:	cset	w0, eq  // eq = none
   27500:	and	w0, w0, #0xff
   27504:	and	x0, x0, #0xff
   27508:	cmp	x0, #0x0
   2750c:	b.eq	27530 <__sanitizer_set_report_fd@@Base+0x8338>  // b.none
   27510:	ldr	x4, [sp, #64]
   27514:	ldr	x3, [sp, #72]
   27518:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   2751c:	add	x2, x0, #0xec0
   27520:	mov	w1, #0xe1                  	// #225
   27524:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   27528:	add	x0, x0, #0xd70
   2752c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   27530:	ldr	x1, [sp, #24]
   27534:	ldr	x0, [sp, #16]
   27538:	cmp	x1, x0
   2753c:	cset	w0, ls  // ls = plast
   27540:	and	w0, w0, #0xff
   27544:	and	x0, x0, #0xff
   27548:	str	x0, [sp, #56]
   2754c:	str	xzr, [sp, #48]
   27550:	ldr	x1, [sp, #56]
   27554:	ldr	x0, [sp, #48]
   27558:	cmp	x1, x0
   2755c:	cset	w0, eq  // eq = none
   27560:	and	w0, w0, #0xff
   27564:	and	x0, x0, #0xff
   27568:	cmp	x0, #0x0
   2756c:	b.eq	27590 <__sanitizer_set_report_fd@@Base+0x8398>  // b.none
   27570:	ldr	x4, [sp, #48]
   27574:	ldr	x3, [sp, #56]
   27578:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   2757c:	add	x2, x0, #0xee0
   27580:	mov	w1, #0xe2                  	// #226
   27584:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   27588:	add	x0, x0, #0xd70
   2758c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   27590:	ldr	x1, [sp, #32]
   27594:	ldr	x0, [sp, #24]
   27598:	cmp	x1, x0
   2759c:	b.cc	275b0 <__sanitizer_set_report_fd@@Base+0x83b8>  // b.lo, b.ul, b.last
   275a0:	ldr	x1, [sp, #16]
   275a4:	ldr	x0, [sp, #40]
   275a8:	cmp	x1, x0
   275ac:	b.cs	275b8 <__sanitizer_set_report_fd@@Base+0x83c0>  // b.hs, b.nlast
   275b0:	mov	w0, #0x1                   	// #1
   275b4:	b	275bc <__sanitizer_set_report_fd@@Base+0x83c4>
   275b8:	mov	w0, #0x0                   	// #0
   275bc:	ldr	x30, [sp], #80
   275c0:	ret
   275c4:	stp	x19, x30, [sp, #-160]!
   275c8:	str	x0, [sp, #24]
   275cc:	str	x1, [sp, #16]
   275d0:	add	x0, sp, #0x70
   275d4:	mov	w1, #0x1                   	// #1
   275d8:	bl	2aa20 <OnPrint@@Base+0xa78>
   275dc:	add	x0, sp, #0x20
   275e0:	mov	x2, #0x0                   	// #0
   275e4:	mov	x1, #0x0                   	// #0
   275e8:	bl	a5e0 <__lsan_do_recoverable_leak_check@@Base+0x454>
   275ec:	add	x1, sp, #0x20
   275f0:	add	x0, sp, #0x70
   275f4:	bl	2b030 <OnPrint@@Base+0x1088>
   275f8:	and	w0, w0, #0xff
   275fc:	cmp	w0, #0x0
   27600:	b.eq	276a4 <__sanitizer_set_report_fd@@Base+0x84ac>  // b.none
   27604:	ldr	x1, [sp, #32]
   27608:	ldr	x0, [sp, #40]
   2760c:	cmp	x1, x0
   27610:	b.eq	2769c <__sanitizer_set_report_fd@@Base+0x84a4>  // b.none
   27614:	str	xzr, [sp, #152]
   27618:	ldr	x0, [sp, #40]
   2761c:	str	x0, [sp, #144]
   27620:	ldr	x1, [sp, #152]
   27624:	ldr	x0, [sp, #144]
   27628:	cmp	x1, x0
   2762c:	cset	w0, eq  // eq = none
   27630:	and	w0, w0, #0xff
   27634:	and	x0, x0, #0xff
   27638:	cmp	x0, #0x0
   2763c:	b.eq	27660 <__sanitizer_set_report_fd@@Base+0x8468>  // b.none
   27640:	ldr	x4, [sp, #144]
   27644:	ldr	x3, [sp, #152]
   27648:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   2764c:	add	x2, x0, #0xf00
   27650:	mov	w1, #0xef                  	// #239
   27654:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   27658:	add	x0, x0, #0xd70
   2765c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   27660:	ldr	x4, [sp, #32]
   27664:	ldr	x0, [sp, #40]
   27668:	sub	x0, x0, #0x1
   2766c:	ldr	x3, [sp, #16]
   27670:	ldr	x2, [sp, #24]
   27674:	mov	x1, x0
   27678:	mov	x0, x4
   2767c:	bl	274bc <__sanitizer_set_report_fd@@Base+0x82c4>
   27680:	and	w0, w0, #0xff
   27684:	eor	w0, w0, #0x1
   27688:	and	w0, w0, #0xff
   2768c:	cmp	w0, #0x0
   27690:	b.eq	275ec <__sanitizer_set_report_fd@@Base+0x83f4>  // b.none
   27694:	mov	w19, #0x0                   	// #0
   27698:	b	276a8 <__sanitizer_set_report_fd@@Base+0x84b0>
   2769c:	nop
   276a0:	b	275ec <__sanitizer_set_report_fd@@Base+0x83f4>
   276a4:	mov	w19, #0x1                   	// #1
   276a8:	add	x0, sp, #0x20
   276ac:	bl	a61c <__lsan_do_recoverable_leak_check@@Base+0x490>
   276b0:	add	x0, sp, #0x70
   276b4:	bl	2ab1c <OnPrint@@Base+0xb74>
   276b8:	mov	w0, w19
   276bc:	ldp	x19, x30, [sp], #160
   276c0:	ret
   276c4:	str	x30, [sp, #-144]!
   276c8:	add	x0, sp, #0x60
   276cc:	mov	w1, #0x1                   	// #1
   276d0:	bl	2aa20 <OnPrint@@Base+0xa78>
   276d4:	mov	x0, #0xfff                 	// #4095
   276d8:	str	x0, [sp, #136]
   276dc:	mov	w2, #0x0                   	// #0
   276e0:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   276e4:	add	x1, x0, #0xf20
   276e8:	mov	x0, #0xfff                 	// #4095
   276ec:	bl	26a50 <__sanitizer_set_report_fd@@Base+0x7858>
   276f0:	str	x0, [sp, #128]
   276f4:	add	x0, sp, #0x10
   276f8:	mov	x2, #0xfff                 	// #4095
   276fc:	ldr	x1, [sp, #128]
   27700:	bl	a5e0 <__lsan_do_recoverable_leak_check@@Base+0x454>
   27704:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   27708:	add	x0, x0, #0xf30
   2770c:	bl	2a3fc <OnPrint@@Base+0x454>
   27710:	add	x1, sp, #0x10
   27714:	add	x0, sp, #0x60
   27718:	bl	2b030 <OnPrint@@Base+0x1088>
   2771c:	and	w0, w0, #0xff
   27720:	cmp	w0, #0x0
   27724:	b.eq	27750 <__sanitizer_set_report_fd@@Base+0x8558>  // b.none
   27728:	ldr	x0, [sp, #16]
   2772c:	mov	x1, x0
   27730:	ldr	x0, [sp, #24]
   27734:	mov	x2, x0
   27738:	ldr	x0, [sp, #40]
   2773c:	mov	x3, x0
   27740:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   27744:	add	x0, x0, #0xf50
   27748:	bl	2a350 <OnPrint@@Base+0x3a8>
   2774c:	b	27710 <__sanitizer_set_report_fd@@Base+0x8518>
   27750:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   27754:	add	x0, x0, #0xf60
   27758:	bl	2a3fc <OnPrint@@Base+0x454>
   2775c:	mov	x1, #0xfff                 	// #4095
   27760:	ldr	x0, [sp, #128]
   27764:	bl	26af4 <__sanitizer_set_report_fd@@Base+0x78fc>
   27768:	add	x0, sp, #0x10
   2776c:	bl	a61c <__lsan_do_recoverable_leak_check@@Base+0x490>
   27770:	add	x0, sp, #0x60
   27774:	bl	2ab1c <OnPrint@@Base+0xb74>
   27778:	nop
   2777c:	ldr	x30, [sp], #144
   27780:	ret
   27784:	str	x30, [sp, #-16]!
   27788:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   2778c:	add	x0, x0, #0xf80
   27790:	bl	23528 <__sanitizer_set_report_fd@@Base+0x4330>
   27794:	ldr	x30, [sp], #16
   27798:	ret
   2779c:	sub	sp, sp, #0x10
   277a0:	strb	w0, [sp, #15]
   277a4:	ldrb	w0, [sp, #15]
   277a8:	cmp	w0, #0x2f
   277ac:	cset	w0, eq  // eq = none
   277b0:	and	w0, w0, #0xff
   277b4:	add	sp, sp, #0x10
   277b8:	ret
   277bc:	str	x30, [sp, #-32]!
   277c0:	str	x0, [sp, #24]
   277c4:	ldr	x0, [sp, #24]
   277c8:	cmp	x0, #0x0
   277cc:	b.eq	277f0 <__sanitizer_set_report_fd@@Base+0x85f8>  // b.none
   277d0:	ldr	x0, [sp, #24]
   277d4:	ldrb	w0, [x0]
   277d8:	bl	2779c <__sanitizer_set_report_fd@@Base+0x85a4>
   277dc:	and	w0, w0, #0xff
   277e0:	cmp	w0, #0x0
   277e4:	b.eq	277f0 <__sanitizer_set_report_fd@@Base+0x85f8>  // b.none
   277e8:	mov	w0, #0x1                   	// #1
   277ec:	b	277f4 <__sanitizer_set_report_fd@@Base+0x85fc>
   277f0:	mov	w0, #0x0                   	// #0
   277f4:	ldr	x30, [sp], #32
   277f8:	ret
   277fc:	stp	x19, x20, [sp, #-80]!
   27800:	str	x30, [sp, #16]
   27804:	str	x0, [sp, #56]
   27808:	str	x1, [sp, #48]
   2780c:	str	x2, [sp, #40]
   27810:	ldr	x0, [sp, #56]
   27814:	ldr	x1, [x0]
   27818:	add	x0, sp, #0x48
   2781c:	bl	f58c <__sanitizer_get_allocated_size@@Base+0xa2c>
   27820:	ldr	x0, [sp, #56]
   27824:	bl	1e890 <__sanitizer_cov_pcs_init@@Base+0x37f4>
   27828:	ldr	x0, [sp, #56]
   2782c:	ldr	w0, [x0, #8]
   27830:	ldr	x2, [sp, #40]
   27834:	ldr	x1, [sp, #48]
   27838:	bl	230b0 <__sanitizer_set_report_fd@@Base+0x3eb8>
   2783c:	mov	x1, x0
   27840:	ldr	x0, [sp, #40]
   27844:	cmp	x0, x1
   27848:	cset	w0, ne  // ne = any
   2784c:	and	w0, w0, #0xff
   27850:	cmp	w0, #0x0
   27854:	b.eq	27890 <__sanitizer_set_report_fd@@Base+0x8698>  // b.none
   27858:	ldr	x0, [sp, #56]
   2785c:	ldr	w19, [x0, #8]
   27860:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
   27864:	add	x0, x0, #0xc68
   27868:	ldr	x20, [x0]
   2786c:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
   27870:	add	x0, x0, #0xc68
   27874:	ldr	x0, [x0]
   27878:	bl	21bac <__sanitizer_set_report_fd@@Base+0x29b4>
   2787c:	mov	x2, x0
   27880:	mov	x1, x20
   27884:	mov	w0, w19
   27888:	bl	230b0 <__sanitizer_set_report_fd@@Base+0x3eb8>
   2788c:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   27890:	add	x0, sp, #0x48
   27894:	bl	f5bc <__sanitizer_get_allocated_size@@Base+0xa5c>
   27898:	nop
   2789c:	ldr	x30, [sp, #16]
   278a0:	ldp	x19, x20, [sp], #80
   278a4:	ret
   278a8:	stp	x19, x30, [sp, #-192]!
   278ac:	str	x0, [sp, #40]
   278b0:	str	x1, [sp, #32]
   278b4:	str	x2, [sp, #24]
   278b8:	add	x0, sp, #0xa0
   278bc:	mov	w1, #0x0                   	// #0
   278c0:	bl	2aa20 <OnPrint@@Base+0xa78>
   278c4:	add	x0, sp, #0x80
   278c8:	mov	x1, #0x1000                	// #4096
   278cc:	bl	a584 <__lsan_do_recoverable_leak_check@@Base+0x3f8>
   278d0:	add	x0, sp, #0x80
   278d4:	bl	bc50 <__lsan_do_recoverable_leak_check@@Base+0x1ac4>
   278d8:	mov	x1, x0
   278dc:	add	x0, sp, #0x30
   278e0:	mov	x2, #0x1000                	// #4096
   278e4:	bl	a5e0 <__lsan_do_recoverable_leak_check@@Base+0x454>
   278e8:	add	x1, sp, #0x30
   278ec:	add	x0, sp, #0xa0
   278f0:	bl	2b030 <OnPrint@@Base+0x1088>
   278f4:	and	w0, w0, #0xff
   278f8:	cmp	w0, #0x0
   278fc:	b.eq	27960 <__sanitizer_set_report_fd@@Base+0x8768>  // b.none
   27900:	add	x0, sp, #0x30
   27904:	bl	27a98 <__sanitizer_set_report_fd@@Base+0x88a0>
   27908:	and	w0, w0, #0xff
   2790c:	cmp	w0, #0x0
   27910:	b.eq	27934 <__sanitizer_set_report_fd@@Base+0x873c>  // b.none
   27914:	ldr	x0, [sp, #72]
   27918:	mov	x1, x0
   2791c:	ldr	x0, [sp, #40]
   27920:	bl	21950 <__sanitizer_set_report_fd@@Base+0x2758>
   27924:	cmp	w0, #0x0
   27928:	b.ne	27934 <__sanitizer_set_report_fd@@Base+0x873c>  // b.any
   2792c:	mov	w0, #0x1                   	// #1
   27930:	b	27938 <__sanitizer_set_report_fd@@Base+0x8740>
   27934:	mov	w0, #0x0                   	// #0
   27938:	cmp	w0, #0x0
   2793c:	b.eq	278e8 <__sanitizer_set_report_fd@@Base+0x86f0>  // b.none
   27940:	ldr	x1, [sp, #48]
   27944:	ldr	x0, [sp, #32]
   27948:	str	x1, [x0]
   2794c:	ldr	x1, [sp, #56]
   27950:	ldr	x0, [sp, #24]
   27954:	str	x1, [x0]
   27958:	mov	w19, #0x1                   	// #1
   2795c:	b	27964 <__sanitizer_set_report_fd@@Base+0x876c>
   27960:	mov	w19, #0x0                   	// #0
   27964:	add	x0, sp, #0x30
   27968:	bl	a61c <__lsan_do_recoverable_leak_check@@Base+0x490>
   2796c:	add	x0, sp, #0x80
   27970:	bl	aab4 <__lsan_do_recoverable_leak_check@@Base+0x928>
   27974:	add	x0, sp, #0xa0
   27978:	bl	2ab1c <OnPrint@@Base+0xb74>
   2797c:	mov	w0, w19
   27980:	ldp	x19, x30, [sp], #192
   27984:	ret
   27988:	sub	sp, sp, #0x20
   2798c:	str	x0, [sp, #8]
   27990:	ldr	x0, [sp, #8]
   27994:	ldr	x0, [x0]
   27998:	str	x0, [sp, #24]
   2799c:	ldr	x0, [sp, #24]
   279a0:	ldr	x0, [x0, #16]
   279a4:	add	sp, sp, #0x20
   279a8:	ret
   279ac:	sub	sp, sp, #0x20
   279b0:	str	x0, [sp, #8]
   279b4:	ldr	x0, [sp, #8]
   279b8:	ldr	x0, [x0]
   279bc:	str	x0, [sp, #24]
   279c0:	ldr	x0, [sp, #24]
   279c4:	ldr	w0, [x0]
   279c8:	cmp	w0, #0xb
   279cc:	cset	w0, eq  // eq = none
   279d0:	and	w0, w0, #0xff
   279d4:	add	sp, sp, #0x20
   279d8:	ret
   279dc:	sub	sp, sp, #0x10
   279e0:	str	x0, [sp, #8]
   279e4:	ldr	x0, [sp, #8]
   279e8:	ldr	x0, [x0]
   279ec:	ldr	w0, [x0]
   279f0:	add	sp, sp, #0x10
   279f4:	ret
   279f8:	str	x30, [sp, #-32]!
   279fc:	str	x0, [sp, #24]
   27a00:	ldr	x0, [sp, #24]
   27a04:	bl	279dc <__sanitizer_set_report_fd@@Base+0x87e4>
   27a08:	cmp	w0, #0xb
   27a0c:	b.eq	27a70 <__sanitizer_set_report_fd@@Base+0x8878>  // b.none
   27a10:	cmp	w0, #0xb
   27a14:	b.gt	27a88 <__sanitizer_set_report_fd@@Base+0x8890>
   27a18:	cmp	w0, #0x8
   27a1c:	b.eq	27a4c <__sanitizer_set_report_fd@@Base+0x8854>  // b.none
   27a20:	cmp	w0, #0x8
   27a24:	b.gt	27a88 <__sanitizer_set_report_fd@@Base+0x8890>
   27a28:	cmp	w0, #0x7
   27a2c:	b.eq	27a7c <__sanitizer_set_report_fd@@Base+0x8884>  // b.none
   27a30:	cmp	w0, #0x7
   27a34:	b.gt	27a88 <__sanitizer_set_report_fd@@Base+0x8890>
   27a38:	cmp	w0, #0x4
   27a3c:	b.eq	27a58 <__sanitizer_set_report_fd@@Base+0x8860>  // b.none
   27a40:	cmp	w0, #0x6
   27a44:	b.eq	27a64 <__sanitizer_set_report_fd@@Base+0x886c>  // b.none
   27a48:	b	27a88 <__sanitizer_set_report_fd@@Base+0x8890>
   27a4c:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   27a50:	add	x0, x0, #0xfc0
   27a54:	b	27a90 <__sanitizer_set_report_fd@@Base+0x8898>
   27a58:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   27a5c:	add	x0, x0, #0xfc8
   27a60:	b	27a90 <__sanitizer_set_report_fd@@Base+0x8898>
   27a64:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   27a68:	add	x0, x0, #0xfd0
   27a6c:	b	27a90 <__sanitizer_set_report_fd@@Base+0x8898>
   27a70:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   27a74:	add	x0, x0, #0xfd8
   27a78:	b	27a90 <__sanitizer_set_report_fd@@Base+0x8898>
   27a7c:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   27a80:	add	x0, x0, #0xfe0
   27a84:	b	27a90 <__sanitizer_set_report_fd@@Base+0x8898>
   27a88:	adrp	x0, 56000 <__asan_backtrace_vector_release@@Base+0x7340>
   27a8c:	add	x0, x0, #0xfe8
   27a90:	ldr	x30, [sp], #32
   27a94:	ret
   27a98:	sub	sp, sp, #0x10
   27a9c:	str	x0, [sp, #8]
   27aa0:	ldr	x0, [sp, #8]
   27aa4:	ldr	x0, [x0, #40]
   27aa8:	and	x0, x0, #0x4
   27aac:	cmp	x0, #0x0
   27ab0:	cset	w0, ne  // ne = any
   27ab4:	and	w0, w0, #0xff
   27ab8:	add	sp, sp, #0x10
   27abc:	ret
   27ac0:	str	x30, [sp, #-16]!
   27ac4:	bl	6eb0 <getuid@plt>
   27ac8:	ldr	x30, [sp], #16
   27acc:	ret
   27ad0:	str	x30, [sp, #-16]!
   27ad4:	bl	6ea0 <pthread_self@plt>
   27ad8:	ldr	x30, [sp], #16
   27adc:	ret
   27ae0:	str	x30, [sp, #-64]!
   27ae4:	str	x0, [sp, #24]
   27ae8:	str	x1, [sp, #16]
   27aec:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
   27af0:	str	x0, [sp, #56]
   27af4:	ldr	x1, [sp, #56]
   27af8:	ldr	x0, [sp, #24]
   27afc:	bl	a518 <__lsan_do_recoverable_leak_check@@Base+0x38c>
   27b00:	str	x0, [sp, #48]
   27b04:	ldr	x1, [sp, #56]
   27b08:	ldr	x0, [sp, #16]
   27b0c:	bl	22318 <__sanitizer_set_report_fd@@Base+0x3120>
   27b10:	str	x0, [sp, #40]
   27b14:	ldr	x1, [sp, #48]
   27b18:	ldr	x0, [sp, #40]
   27b1c:	cmp	x1, x0
   27b20:	b.cs	27b44 <__sanitizer_set_report_fd@@Base+0x894c>  // b.hs, b.nlast
   27b24:	ldr	x3, [sp, #48]
   27b28:	ldr	x1, [sp, #40]
   27b2c:	ldr	x0, [sp, #48]
   27b30:	sub	x0, x1, x0
   27b34:	mov	w2, #0x4                   	// #4
   27b38:	mov	x1, x0
   27b3c:	mov	x0, x3
   27b40:	bl	6cb0 <madvise@plt>
   27b44:	nop
   27b48:	ldr	x30, [sp], #64
   27b4c:	ret
   27b50:	str	x30, [sp, #-32]!
   27b54:	str	x0, [sp, #24]
   27b58:	str	x1, [sp, #16]
   27b5c:	ldr	x0, [sp, #24]
   27b60:	mov	w2, #0xf                   	// #15
   27b64:	ldr	x1, [sp, #16]
   27b68:	bl	6cb0 <madvise@plt>
   27b6c:	cmp	w0, #0x0
   27b70:	cset	w0, eq  // eq = none
   27b74:	and	w0, w0, #0xff
   27b78:	ldr	x30, [sp], #32
   27b7c:	ret
   27b80:	str	x30, [sp, #-32]!
   27b84:	str	x0, [sp, #24]
   27b88:	str	x1, [sp, #16]
   27b8c:	ldr	x0, [sp, #24]
   27b90:	mov	w2, #0x10                  	// #16
   27b94:	ldr	x1, [sp, #16]
   27b98:	bl	6cb0 <madvise@plt>
   27b9c:	cmp	w0, #0x0
   27ba0:	cset	w0, eq  // eq = none
   27ba4:	and	w0, w0, #0xff
   27ba8:	ldr	x30, [sp], #32
   27bac:	ret
   27bb0:	str	x30, [sp, #-64]!
   27bb4:	str	w0, [sp, #28]
   27bb8:	str	xzr, [sp, #56]
   27bbc:	add	x0, sp, #0x20
   27bc0:	mov	x1, x0
   27bc4:	ldr	w0, [sp, #28]
   27bc8:	bl	6f00 <getrlimit@plt>
   27bcc:	sxtw	x0, w0
   27bd0:	str	x0, [sp, #48]
   27bd4:	ldr	x1, [sp, #56]
   27bd8:	ldr	x0, [sp, #48]
   27bdc:	cmp	x1, x0
   27be0:	cset	w0, ne  // ne = any
   27be4:	and	w0, w0, #0xff
   27be8:	and	x0, x0, #0xff
   27bec:	cmp	x0, #0x0
   27bf0:	b.eq	27c14 <__sanitizer_set_report_fd@@Base+0x8a1c>  // b.none
   27bf4:	ldr	x4, [sp, #48]
   27bf8:	ldr	x3, [sp, #56]
   27bfc:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   27c00:	add	x2, x0, #0x168
   27c04:	mov	w1, #0x5a                  	// #90
   27c08:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   27c0c:	add	x0, x0, #0x190
   27c10:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   27c14:	ldr	x0, [sp, #32]
   27c18:	ldr	x30, [sp], #64
   27c1c:	ret
   27c20:	stp	x19, x30, [sp, #-48]!
   27c24:	str	w0, [sp, #28]
   27c28:	str	x1, [sp, #16]
   27c2c:	ldr	x0, [sp, #16]
   27c30:	str	x0, [sp, #32]
   27c34:	ldr	x0, [sp, #16]
   27c38:	str	x0, [sp, #40]
   27c3c:	add	x0, sp, #0x20
   27c40:	mov	x1, x0
   27c44:	ldr	w0, [sp, #28]
   27c48:	bl	6de0 <setrlimit@plt>
   27c4c:	cmp	w0, #0x0
   27c50:	cset	w0, ne  // ne = any
   27c54:	and	w0, w0, #0xff
   27c58:	cmp	w0, #0x0
   27c5c:	b.eq	27c8c <__sanitizer_set_report_fd@@Base+0x8a94>  // b.none
   27c60:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   27c64:	ldr	x0, [x0, #4008]
   27c68:	ldr	x19, [x0]
   27c6c:	bl	6d00 <__errno_location@plt>
   27c70:	ldr	w0, [x0]
   27c74:	mov	w2, w0
   27c78:	mov	x1, x19
   27c7c:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   27c80:	add	x0, x0, #0x1d8
   27c84:	bl	2a3fc <OnPrint@@Base+0x454>
   27c88:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   27c8c:	nop
   27c90:	ldp	x19, x30, [sp], #48
   27c94:	ret
   27c98:	str	x30, [sp, #-16]!
   27c9c:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   27ca0:	ldrb	w0, [x0, #178]
   27ca4:	cmp	w0, #0x0
   27ca8:	b.eq	27cb8 <__sanitizer_set_report_fd@@Base+0x8ac0>  // b.none
   27cac:	mov	x1, #0x0                   	// #0
   27cb0:	mov	w0, #0x4                   	// #4
   27cb4:	bl	27c20 <__sanitizer_set_report_fd@@Base+0x8a28>
   27cb8:	nop
   27cbc:	ldr	x30, [sp], #16
   27cc0:	ret
   27cc4:	str	x30, [sp, #-32]!
   27cc8:	mov	w0, #0x3                   	// #3
   27ccc:	bl	27bb0 <__sanitizer_set_report_fd@@Base+0x89b8>
   27cd0:	str	x0, [sp, #24]
   27cd4:	ldr	x0, [sp, #24]
   27cd8:	cmn	x0, #0x1
   27cdc:	cset	w0, eq  // eq = none
   27ce0:	and	w0, w0, #0xff
   27ce4:	ldr	x30, [sp], #32
   27ce8:	ret
   27cec:	str	x30, [sp, #-16]!
   27cf0:	mov	w0, #0x3                   	// #3
   27cf4:	bl	27bb0 <__sanitizer_set_report_fd@@Base+0x89b8>
   27cf8:	ldr	x30, [sp], #16
   27cfc:	ret
   27d00:	str	x30, [sp, #-48]!
   27d04:	str	x0, [sp, #24]
   27d08:	ldr	x1, [sp, #24]
   27d0c:	mov	w0, #0x3                   	// #3
   27d10:	bl	27c20 <__sanitizer_set_report_fd@@Base+0x8a28>
   27d14:	bl	27cc4 <__sanitizer_set_report_fd@@Base+0x8acc>
   27d18:	and	w0, w0, #0xff
   27d1c:	eor	w0, w0, #0x1
   27d20:	and	w0, w0, #0xff
   27d24:	and	x0, x0, #0xff
   27d28:	str	x0, [sp, #40]
   27d2c:	str	xzr, [sp, #32]
   27d30:	ldr	x1, [sp, #40]
   27d34:	ldr	x0, [sp, #32]
   27d38:	cmp	x1, x0
   27d3c:	cset	w0, eq  // eq = none
   27d40:	and	w0, w0, #0xff
   27d44:	and	x0, x0, #0xff
   27d48:	cmp	x0, #0x0
   27d4c:	b.eq	27d70 <__sanitizer_set_report_fd@@Base+0x8b78>  // b.none
   27d50:	ldr	x4, [sp, #32]
   27d54:	ldr	x3, [sp, #40]
   27d58:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   27d5c:	add	x2, x0, #0x200
   27d60:	mov	w1, #0x7a                  	// #122
   27d64:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   27d68:	add	x0, x0, #0x190
   27d6c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   27d70:	nop
   27d74:	ldr	x30, [sp], #48
   27d78:	ret
   27d7c:	str	x30, [sp, #-32]!
   27d80:	mov	w0, #0x9                   	// #9
   27d84:	bl	27bb0 <__sanitizer_set_report_fd@@Base+0x89b8>
   27d88:	str	x0, [sp, #24]
   27d8c:	ldr	x0, [sp, #24]
   27d90:	cmn	x0, #0x1
   27d94:	cset	w0, eq  // eq = none
   27d98:	and	w0, w0, #0xff
   27d9c:	ldr	x30, [sp], #32
   27da0:	ret
   27da4:	str	x30, [sp, #-32]!
   27da8:	mov	x1, #0xffffffffffffffff    	// #-1
   27dac:	mov	w0, #0x9                   	// #9
   27db0:	bl	27c20 <__sanitizer_set_report_fd@@Base+0x8a28>
   27db4:	bl	27d7c <__sanitizer_set_report_fd@@Base+0x8b84>
   27db8:	and	w0, w0, #0xff
   27dbc:	and	x0, x0, #0xff
   27dc0:	str	x0, [sp, #24]
   27dc4:	str	xzr, [sp, #16]
   27dc8:	ldr	x1, [sp, #24]
   27dcc:	ldr	x0, [sp, #16]
   27dd0:	cmp	x1, x0
   27dd4:	cset	w0, eq  // eq = none
   27dd8:	and	w0, w0, #0xff
   27ddc:	and	x0, x0, #0xff
   27de0:	cmp	x0, #0x0
   27de4:	b.eq	27e08 <__sanitizer_set_report_fd@@Base+0x8c10>  // b.none
   27de8:	ldr	x4, [sp, #16]
   27dec:	ldr	x3, [sp, #24]
   27df0:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   27df4:	add	x2, x0, #0x228
   27df8:	mov	w1, #0x84                  	// #132
   27dfc:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   27e00:	add	x0, x0, #0x190
   27e04:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   27e08:	nop
   27e0c:	ldr	x30, [sp], #32
   27e10:	ret
   27e14:	str	x30, [sp, #-32]!
   27e18:	str	w0, [sp, #28]
   27e1c:	ldr	w0, [sp, #28]
   27e20:	bl	6a60 <sleep@plt>
   27e24:	nop
   27e28:	ldr	x30, [sp], #32
   27e2c:	ret
   27e30:	str	x30, [sp, #-32]!
   27e34:	str	w0, [sp, #28]
   27e38:	ldr	w1, [sp, #28]
   27e3c:	mov	w0, #0x3e8                 	// #1000
   27e40:	mul	w0, w1, w0
   27e44:	bl	6cc0 <usleep@plt>
   27e48:	nop
   27e4c:	ldr	x30, [sp], #32
   27e50:	ret
   27e54:	str	x30, [sp, #-176]!
   27e58:	mov	w0, #0x6                   	// #6
   27e5c:	bl	24d7c <__sanitizer_set_report_fd@@Base+0x5b84>
   27e60:	cmp	w0, #0x0
   27e64:	cset	w0, ne  // ne = any
   27e68:	and	w0, w0, #0xff
   27e6c:	cmp	w0, #0x0
   27e70:	b.eq	27e9c <__sanitizer_set_report_fd@@Base+0x8ca4>  // b.none
   27e74:	add	x0, sp, #0x18
   27e78:	mov	x2, #0x98                  	// #152
   27e7c:	mov	w1, #0x0                   	// #0
   27e80:	bl	21754 <__sanitizer_set_report_fd@@Base+0x255c>
   27e84:	str	xzr, [sp, #24]
   27e88:	add	x0, sp, #0x18
   27e8c:	mov	x2, #0x0                   	// #0
   27e90:	mov	x1, x0
   27e94:	mov	w0, #0x6                   	// #6
   27e98:	bl	25544 <__sanitizer_set_report_fd@@Base+0x634c>
   27e9c:	bl	6e30 <abort@plt>
   27ea0:	str	x30, [sp, #-32]!
   27ea4:	str	x0, [sp, #24]
   27ea8:	ldr	x0, [sp, #24]
   27eac:	bl	4ed70 <__asan_backtrace_vector_release@@Base+0xb0>
   27eb0:	ldr	x30, [sp], #32
   27eb4:	ret
   27eb8:	str	x30, [sp, #-32]!
   27ebc:	str	w0, [sp, #28]
   27ec0:	ldr	w0, [sp, #28]
   27ec4:	bl	6ae0 <isatty@plt>
   27ec8:	cmp	w0, #0x0
   27ecc:	cset	w0, ne  // ne = any
   27ed0:	and	w0, w0, #0xff
   27ed4:	ldr	x30, [sp], #32
   27ed8:	ret
   27edc:	str	x30, [sp, #-112]!
   27ee0:	str	xzr, [sp, #104]
   27ee4:	add	x0, sp, #0x18
   27ee8:	mov	x1, x0
   27eec:	mov	x0, #0x0                   	// #0
   27ef0:	bl	6f10 <sigaltstack@plt>
   27ef4:	sxtw	x0, w0
   27ef8:	str	x0, [sp, #96]
   27efc:	ldr	x1, [sp, #104]
   27f00:	ldr	x0, [sp, #96]
   27f04:	cmp	x1, x0
   27f08:	cset	w0, ne  // ne = any
   27f0c:	and	w0, w0, #0xff
   27f10:	and	x0, x0, #0xff
   27f14:	cmp	x0, #0x0
   27f18:	b.eq	27f3c <__sanitizer_set_report_fd@@Base+0x8d44>  // b.none
   27f1c:	ldr	x4, [sp, #96]
   27f20:	ldr	x3, [sp, #104]
   27f24:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   27f28:	add	x2, x0, #0x258
   27f2c:	mov	w1, #0xb0                  	// #176
   27f30:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   27f34:	add	x0, x0, #0x190
   27f38:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   27f3c:	ldr	w0, [sp, #32]
   27f40:	and	w0, w0, #0x2
   27f44:	cmp	w0, #0x0
   27f48:	b.eq	27fd0 <__sanitizer_set_report_fd@@Base+0x8dd8>  // b.none
   27f4c:	mov	w2, #0x0                   	// #0
   27f50:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   27f54:	add	x1, x0, #0x288
   27f58:	mov	x0, #0x10000               	// #65536
   27f5c:	bl	26a50 <__sanitizer_set_report_fd@@Base+0x7858>
   27f60:	str	x0, [sp, #88]
   27f64:	ldr	x0, [sp, #88]
   27f68:	str	x0, [sp, #48]
   27f6c:	str	wzr, [sp, #56]
   27f70:	mov	x0, #0x10000               	// #65536
   27f74:	str	x0, [sp, #64]
   27f78:	str	xzr, [sp, #80]
   27f7c:	add	x0, sp, #0x30
   27f80:	mov	x1, #0x0                   	// #0
   27f84:	bl	6f10 <sigaltstack@plt>
   27f88:	sxtw	x0, w0
   27f8c:	str	x0, [sp, #72]
   27f90:	ldr	x1, [sp, #80]
   27f94:	ldr	x0, [sp, #72]
   27f98:	cmp	x1, x0
   27f9c:	cset	w0, ne  // ne = any
   27fa0:	and	w0, w0, #0xff
   27fa4:	and	x0, x0, #0xff
   27fa8:	cmp	x0, #0x0
   27fac:	b.eq	27fd4 <__sanitizer_set_report_fd@@Base+0x8ddc>  // b.none
   27fb0:	ldr	x4, [sp, #72]
   27fb4:	ldr	x3, [sp, #80]
   27fb8:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   27fbc:	add	x2, x0, #0x2a0
   27fc0:	mov	w1, #0xbb                  	// #187
   27fc4:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   27fc8:	add	x0, x0, #0x190
   27fcc:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   27fd0:	nop
   27fd4:	ldr	x30, [sp], #112
   27fd8:	ret
   27fdc:	str	x30, [sp, #-80]!
   27fe0:	str	xzr, [sp, #40]
   27fe4:	mov	w0, #0x2                   	// #2
   27fe8:	str	w0, [sp, #48]
   27fec:	mov	x0, #0x10000               	// #65536
   27ff0:	str	x0, [sp, #56]
   27ff4:	str	xzr, [sp, #72]
   27ff8:	add	x1, sp, #0x10
   27ffc:	add	x0, sp, #0x28
   28000:	bl	6f10 <sigaltstack@plt>
   28004:	sxtw	x0, w0
   28008:	str	x0, [sp, #64]
   2800c:	ldr	x1, [sp, #72]
   28010:	ldr	x0, [sp, #64]
   28014:	cmp	x1, x0
   28018:	cset	w0, ne  // ne = any
   2801c:	and	w0, w0, #0xff
   28020:	and	x0, x0, #0xff
   28024:	cmp	x0, #0x0
   28028:	b.eq	2804c <__sanitizer_set_report_fd@@Base+0x8e54>  // b.none
   2802c:	ldr	x4, [sp, #64]
   28030:	ldr	x3, [sp, #72]
   28034:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   28038:	add	x2, x0, #0x2d0
   2803c:	mov	w1, #0xc3                  	// #195
   28040:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   28044:	add	x0, x0, #0x190
   28048:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2804c:	ldr	x0, [sp, #16]
   28050:	ldr	x1, [sp, #32]
   28054:	bl	26af4 <__sanitizer_set_report_fd@@Base+0x78fc>
   28058:	nop
   2805c:	ldr	x30, [sp], #80
   28060:	ret
   28064:	str	x30, [sp, #-208]!
   28068:	str	w0, [sp, #28]
   2806c:	str	x1, [sp, #16]
   28070:	ldr	w0, [sp, #28]
   28074:	bl	24d7c <__sanitizer_set_report_fd@@Base+0x5b84>
   28078:	cmp	w0, #0x0
   2807c:	cset	w0, eq  // eq = none
   28080:	and	w0, w0, #0xff
   28084:	cmp	w0, #0x0
   28088:	b.ne	28158 <__sanitizer_set_report_fd@@Base+0x8f60>  // b.any
   2808c:	add	x0, sp, #0x28
   28090:	mov	x2, #0x98                  	// #152
   28094:	mov	w1, #0x0                   	// #0
   28098:	bl	21754 <__sanitizer_set_report_fd@@Base+0x255c>
   2809c:	ldr	x0, [sp, #16]
   280a0:	str	x0, [sp, #40]
   280a4:	mov	w0, #0x4                   	// #4
   280a8:	movk	w0, #0x4000, lsl #16
   280ac:	str	w0, [sp, #176]
   280b0:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   280b4:	ldrb	w0, [x0, #97]
   280b8:	cmp	w0, #0x0
   280bc:	b.eq	280cc <__sanitizer_set_report_fd@@Base+0x8ed4>  // b.none
   280c0:	ldr	w0, [sp, #176]
   280c4:	orr	w0, w0, #0x8000000
   280c8:	str	w0, [sp, #176]
   280cc:	str	xzr, [sp, #200]
   280d0:	add	x0, sp, #0x28
   280d4:	mov	x2, #0x0                   	// #0
   280d8:	mov	x1, x0
   280dc:	ldr	w0, [sp, #28]
   280e0:	bl	25544 <__sanitizer_set_report_fd@@Base+0x634c>
   280e4:	sxtw	x0, w0
   280e8:	str	x0, [sp, #192]
   280ec:	ldr	x1, [sp, #200]
   280f0:	ldr	x0, [sp, #192]
   280f4:	cmp	x1, x0
   280f8:	cset	w0, ne  // ne = any
   280fc:	and	w0, w0, #0xff
   28100:	and	x0, x0, #0xff
   28104:	cmp	x0, #0x0
   28108:	b.eq	2812c <__sanitizer_set_report_fd@@Base+0x8f34>  // b.none
   2810c:	ldr	x4, [sp, #192]
   28110:	ldr	x3, [sp, #200]
   28114:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   28118:	add	x2, x0, #0x300
   2811c:	mov	w1, #0xd2                  	// #210
   28120:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   28124:	add	x0, x0, #0x190
   28128:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2812c:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
   28130:	cmp	w0, #0x0
   28134:	cset	w0, ne  // ne = any
   28138:	and	w0, w0, #0xff
   2813c:	cmp	w0, #0x0
   28140:	b.eq	2815c <__sanitizer_set_report_fd@@Base+0x8f64>  // b.none
   28144:	ldr	w1, [sp, #28]
   28148:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2814c:	add	x0, x0, #0x340
   28150:	bl	2a3fc <OnPrint@@Base+0x454>
   28154:	b	2815c <__sanitizer_set_report_fd@@Base+0x8f64>
   28158:	nop
   2815c:	ldr	x30, [sp], #208
   28160:	ret
   28164:	str	x30, [sp, #-32]!
   28168:	str	x0, [sp, #24]
   2816c:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   28170:	ldrb	w0, [x0, #97]
   28174:	cmp	w0, #0x0
   28178:	b.eq	28180 <__sanitizer_set_report_fd@@Base+0x8f88>  // b.none
   2817c:	bl	27edc <__sanitizer_set_report_fd@@Base+0x8ce4>
   28180:	ldr	x1, [sp, #24]
   28184:	mov	w0, #0xb                   	// #11
   28188:	bl	28064 <__sanitizer_set_report_fd@@Base+0x8e6c>
   2818c:	ldr	x1, [sp, #24]
   28190:	mov	w0, #0x7                   	// #7
   28194:	bl	28064 <__sanitizer_set_report_fd@@Base+0x8e6c>
   28198:	ldr	x1, [sp, #24]
   2819c:	mov	w0, #0x6                   	// #6
   281a0:	bl	28064 <__sanitizer_set_report_fd@@Base+0x8e6c>
   281a4:	ldr	x1, [sp, #24]
   281a8:	mov	w0, #0x8                   	// #8
   281ac:	bl	28064 <__sanitizer_set_report_fd@@Base+0x8e6c>
   281b0:	ldr	x1, [sp, #24]
   281b4:	mov	w0, #0x4                   	// #4
   281b8:	bl	28064 <__sanitizer_set_report_fd@@Base+0x8e6c>
   281bc:	ldr	x1, [sp, #24]
   281c0:	mov	w0, #0x5                   	// #5
   281c4:	bl	28064 <__sanitizer_set_report_fd@@Base+0x8e6c>
   281c8:	nop
   281cc:	ldr	x30, [sp], #32
   281d0:	ret
   281d4:	stp	x19, x30, [sp, #-48]!
   281d8:	str	x0, [sp, #24]
   281dc:	ldr	x0, [sp, #24]
   281e0:	ldr	x19, [x0, #16]
   281e4:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
   281e8:	add	x1, x19, x0
   281ec:	ldr	x0, [sp, #24]
   281f0:	ldr	x0, [x0, #32]
   281f4:	cmp	x1, x0
   281f8:	b.ls	28224 <__sanitizer_set_report_fd@@Base+0x902c>  // b.plast
   281fc:	ldr	x0, [sp, #24]
   28200:	ldr	x1, [x0, #16]
   28204:	ldr	x0, [sp, #24]
   28208:	ldr	x2, [x0, #32]
   2820c:	mov	x0, #0xffff                	// #65535
   28210:	add	x0, x2, x0
   28214:	cmp	x1, x0
   28218:	b.cs	28224 <__sanitizer_set_report_fd@@Base+0x902c>  // b.hs, b.nlast
   2821c:	mov	w0, #0x1                   	// #1
   28220:	b	28228 <__sanitizer_set_report_fd@@Base+0x9030>
   28224:	mov	w0, #0x0                   	// #0
   28228:	strb	w0, [sp, #47]
   2822c:	ldr	x0, [sp, #24]
   28230:	ldr	x0, [x0]
   28234:	str	x0, [sp, #32]
   28238:	ldrb	w0, [sp, #47]
   2823c:	cmp	w0, #0x0
   28240:	b.eq	28284 <__sanitizer_set_report_fd@@Base+0x908c>  // b.none
   28244:	ldr	x0, [sp, #32]
   28248:	ldr	w1, [x0, #8]
   2824c:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   28250:	ldr	x0, [x0, #3424]
   28254:	ldr	w0, [x0]
   28258:	cmp	w1, w0
   2825c:	b.eq	2827c <__sanitizer_set_report_fd@@Base+0x9084>  // b.none
   28260:	ldr	x0, [sp, #32]
   28264:	ldr	w1, [x0, #8]
   28268:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   2826c:	ldr	x0, [x0, #3472]
   28270:	ldr	w0, [x0]
   28274:	cmp	w1, w0
   28278:	b.ne	28284 <__sanitizer_set_report_fd@@Base+0x908c>  // b.any
   2827c:	mov	w0, #0x1                   	// #1
   28280:	b	28288 <__sanitizer_set_report_fd@@Base+0x9090>
   28284:	mov	w0, #0x0                   	// #0
   28288:	ldp	x19, x30, [sp], #48
   2828c:	ret
   28290:	str	x30, [sp, #-112]!
   28294:	str	x0, [sp, #24]
   28298:	str	x1, [sp, #16]
   2829c:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
   282a0:	str	x0, [sp, #96]
   282a4:	ldr	x0, [sp, #16]
   282a8:	str	x0, [sp, #88]
   282ac:	ldr	x1, [sp, #96]
   282b0:	mov	x0, x1
   282b4:	lsl	x0, x0, #2
   282b8:	add	x0, x0, x1
   282bc:	lsl	x0, x0, #1
   282c0:	str	x0, [sp, #80]
   282c4:	ldr	x1, [sp, #88]
   282c8:	ldr	x0, [sp, #80]
   282cc:	cmp	x1, x0
   282d0:	cset	w0, cs  // cs = hs, nlast
   282d4:	and	w0, w0, #0xff
   282d8:	and	x0, x0, #0xff
   282dc:	cmp	x0, #0x0
   282e0:	b.eq	28304 <__sanitizer_set_report_fd@@Base+0x910c>  // b.none
   282e4:	ldr	x4, [sp, #80]
   282e8:	ldr	x3, [sp, #88]
   282ec:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   282f0:	add	x2, x0, #0x368
   282f4:	mov	w1, #0x118                 	// #280
   282f8:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   282fc:	add	x0, x0, #0x190
   28300:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   28304:	add	x0, sp, #0x30
   28308:	bl	6960 <pipe@plt>
   2830c:	cmp	w0, #0x0
   28310:	cset	w0, ne  // ne = any
   28314:	and	w0, w0, #0xff
   28318:	cmp	w0, #0x0
   2831c:	b.eq	28328 <__sanitizer_set_report_fd@@Base+0x9130>  // b.none
   28320:	mov	w0, #0x0                   	// #0
   28324:	b	283dc <__sanitizer_set_report_fd@@Base+0x91e4>
   28328:	ldr	w0, [sp, #52]
   2832c:	ldr	x1, [sp, #24]
   28330:	ldr	x2, [sp, #16]
   28334:	bl	230b0 <__sanitizer_set_report_fd@@Base+0x3eb8>
   28338:	str	x0, [sp, #72]
   2833c:	add	x0, sp, #0x2c
   28340:	mov	x1, x0
   28344:	ldr	x0, [sp, #72]
   28348:	bl	22e9c <__sanitizer_set_report_fd@@Base+0x3ca4>
   2834c:	and	w0, w0, #0xff
   28350:	cmp	w0, #0x0
   28354:	b.eq	283b4 <__sanitizer_set_report_fd@@Base+0x91bc>  // b.none
   28358:	mov	x0, #0xe                   	// #14
   2835c:	str	x0, [sp, #64]
   28360:	ldr	w0, [sp, #44]
   28364:	sxtw	x0, w0
   28368:	str	x0, [sp, #56]
   2836c:	ldr	x1, [sp, #64]
   28370:	ldr	x0, [sp, #56]
   28374:	cmp	x1, x0
   28378:	cset	w0, ne  // ne = any
   2837c:	and	w0, w0, #0xff
   28380:	and	x0, x0, #0xff
   28384:	cmp	x0, #0x0
   28388:	b.eq	283ac <__sanitizer_set_report_fd@@Base+0x91b4>  // b.none
   2838c:	ldr	x4, [sp, #56]
   28390:	ldr	x3, [sp, #64]
   28394:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   28398:	add	x2, x0, #0x388
   2839c:	mov	w1, #0x121                 	// #289
   283a0:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   283a4:	add	x0, x0, #0x190
   283a8:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   283ac:	strb	wzr, [sp, #111]
   283b0:	b	283c8 <__sanitizer_set_report_fd@@Base+0x91d0>
   283b4:	ldr	x1, [sp, #72]
   283b8:	ldr	x0, [sp, #16]
   283bc:	cmp	x1, x0
   283c0:	cset	w0, eq  // eq = none
   283c4:	strb	w0, [sp, #111]
   283c8:	ldr	w0, [sp, #48]
   283cc:	bl	22fa8 <__sanitizer_set_report_fd@@Base+0x3db0>
   283d0:	ldr	w0, [sp, #52]
   283d4:	bl	22fa8 <__sanitizer_set_report_fd@@Base+0x3db0>
   283d8:	ldrb	w0, [sp, #111]
   283dc:	ldr	x30, [sp], #112
   283e0:	ret
   283e4:	str	x30, [sp, #-32]!
   283e8:	str	x0, [sp, #24]
   283ec:	bl	2ab8c <OnPrint@@Base+0xbe4>
   283f0:	nop
   283f4:	ldr	x30, [sp], #32
   283f8:	ret
   283fc:	sub	sp, sp, #0x140
   28400:	str	x30, [sp]
   28404:	str	x0, [sp, #24]
   28408:	str	x1, [sp, #16]
   2840c:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   28410:	ldrb	w0, [x0, #215]
   28414:	eor	w0, w0, #0x1
   28418:	and	w0, w0, #0xff
   2841c:	cmp	w0, #0x0
   28420:	b.eq	2842c <__sanitizer_set_report_fd@@Base+0x9234>  // b.none
   28424:	mov	w0, #0xffffffff            	// #-1
   28428:	b	285c8 <__sanitizer_set_report_fd@@Base+0x93d0>
   2842c:	ldr	x0, [sp, #24]
   28430:	bl	21bac <__sanitizer_set_report_fd@@Base+0x29b4>
   28434:	cmp	x0, #0xbd
   28438:	cset	w0, ls  // ls = plast
   2843c:	and	w0, w0, #0xff
   28440:	and	x0, x0, #0xff
   28444:	str	x0, [sp, #312]
   28448:	str	xzr, [sp, #304]
   2844c:	ldr	x1, [sp, #312]
   28450:	ldr	x0, [sp, #304]
   28454:	cmp	x1, x0
   28458:	cset	w0, eq  // eq = none
   2845c:	and	w0, w0, #0xff
   28460:	and	x0, x0, #0xff
   28464:	cmp	x0, #0x0
   28468:	b.eq	2848c <__sanitizer_set_report_fd@@Base+0x9294>  // b.none
   2846c:	ldr	x4, [sp, #304]
   28470:	ldr	x3, [sp, #312]
   28474:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   28478:	add	x2, x0, #0x3a8
   2847c:	mov	w1, #0x13c                 	// #316
   28480:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   28484:	add	x0, x0, #0x190
   28488:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2848c:	bl	23c68 <__sanitizer_set_report_fd@@Base+0x4a70>
   28490:	add	x5, sp, #0x28
   28494:	ldr	x4, [sp, #24]
   28498:	mov	x3, x0
   2849c:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   284a0:	add	x2, x0, #0x3e0
   284a4:	mov	x1, #0xc8                  	// #200
   284a8:	mov	x0, x5
   284ac:	bl	2a4a8 <OnPrint@@Base+0x500>
   284b0:	add	x0, sp, #0x28
   284b4:	mov	w2, #0x1c0                 	// #448
   284b8:	mov	w1, #0x242                 	// #578
   284bc:	bl	6910 <shm_open@plt>
   284c0:	str	w0, [sp, #300]
   284c4:	ldrsw	x0, [sp, #300]
   284c8:	str	x0, [sp, #288]
   284cc:	str	xzr, [sp, #280]
   284d0:	ldr	x1, [sp, #288]
   284d4:	ldr	x0, [sp, #280]
   284d8:	cmp	x1, x0
   284dc:	cset	w0, cc  // cc = lo, ul, last
   284e0:	and	w0, w0, #0xff
   284e4:	and	x0, x0, #0xff
   284e8:	cmp	x0, #0x0
   284ec:	b.eq	28510 <__sanitizer_set_report_fd@@Base+0x9318>  // b.none
   284f0:	ldr	x4, [sp, #280]
   284f4:	ldr	x3, [sp, #288]
   284f8:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   284fc:	add	x2, x0, #0x3f0
   28500:	mov	w1, #0x140                 	// #320
   28504:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   28508:	add	x0, x0, #0x190
   2850c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   28510:	ldr	x1, [sp, #16]
   28514:	ldr	w0, [sp, #300]
   28518:	bl	2312c <__sanitizer_set_report_fd@@Base+0x3f34>
   2851c:	str	w0, [sp, #276]
   28520:	str	xzr, [sp, #264]
   28524:	ldrsw	x0, [sp, #276]
   28528:	str	x0, [sp, #256]
   2852c:	ldr	x1, [sp, #264]
   28530:	ldr	x0, [sp, #256]
   28534:	cmp	x1, x0
   28538:	cset	w0, ne  // ne = any
   2853c:	and	w0, w0, #0xff
   28540:	and	x0, x0, #0xff
   28544:	cmp	x0, #0x0
   28548:	b.eq	2856c <__sanitizer_set_report_fd@@Base+0x9374>  // b.none
   2854c:	ldr	x4, [sp, #256]
   28550:	ldr	x3, [sp, #264]
   28554:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   28558:	add	x2, x0, #0x400
   2855c:	mov	w1, #0x142                 	// #322
   28560:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   28564:	add	x0, x0, #0x190
   28568:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2856c:	add	x0, sp, #0x28
   28570:	bl	6cd0 <shm_unlink@plt>
   28574:	str	w0, [sp, #276]
   28578:	str	xzr, [sp, #248]
   2857c:	ldrsw	x0, [sp, #276]
   28580:	str	x0, [sp, #240]
   28584:	ldr	x1, [sp, #248]
   28588:	ldr	x0, [sp, #240]
   2858c:	cmp	x1, x0
   28590:	cset	w0, ne  // ne = any
   28594:	and	w0, w0, #0xff
   28598:	and	x0, x0, #0xff
   2859c:	cmp	x0, #0x0
   285a0:	b.eq	285c4 <__sanitizer_set_report_fd@@Base+0x93cc>  // b.none
   285a4:	ldr	x4, [sp, #240]
   285a8:	ldr	x3, [sp, #248]
   285ac:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   285b0:	add	x2, x0, #0x400
   285b4:	mov	w1, #0x144                 	// #324
   285b8:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   285bc:	add	x0, x0, #0x190
   285c0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   285c4:	ldr	w0, [sp, #300]
   285c8:	ldr	x30, [sp]
   285cc:	add	sp, sp, #0x140
   285d0:	ret
   285d4:	stp	x19, x30, [sp, #-80]!
   285d8:	str	x0, [sp, #40]
   285dc:	str	x1, [sp, #32]
   285e0:	str	x2, [sp, #24]
   285e4:	ldr	x0, [sp, #24]
   285e8:	cmp	x0, #0x0
   285ec:	b.eq	28600 <__sanitizer_set_report_fd@@Base+0x9408>  // b.none
   285f0:	ldr	x1, [sp, #32]
   285f4:	ldr	x0, [sp, #24]
   285f8:	bl	283fc <__sanitizer_set_report_fd@@Base+0x9204>
   285fc:	b	28604 <__sanitizer_set_report_fd@@Base+0x940c>
   28600:	mov	w0, #0xffffffff            	// #-1
   28604:	str	w0, [sp, #72]
   28608:	mov	w0, #0x4012                	// #16402
   2860c:	str	w0, [sp, #76]
   28610:	ldr	w0, [sp, #72]
   28614:	cmn	w0, #0x1
   28618:	b.ne	28628 <__sanitizer_set_report_fd@@Base+0x9430>  // b.any
   2861c:	ldr	w0, [sp, #76]
   28620:	orr	w0, w0, #0x20
   28624:	str	w0, [sp, #76]
   28628:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
   2862c:	str	x0, [sp, #64]
   28630:	ldr	x0, [sp, #64]
   28634:	neg	x1, x0
   28638:	ldr	x0, [sp, #40]
   2863c:	and	x0, x1, x0
   28640:	mov	x19, x0
   28644:	ldr	x1, [sp, #64]
   28648:	ldr	x0, [sp, #32]
   2864c:	bl	a518 <__lsan_do_recoverable_leak_check@@Base+0x38c>
   28650:	mov	x1, x0
   28654:	ldr	w0, [sp, #76]
   28658:	mov	x5, #0x0                   	// #0
   2865c:	ldr	w4, [sp, #72]
   28660:	mov	w3, w0
   28664:	mov	w2, #0x3                   	// #3
   28668:	mov	x0, x19
   2866c:	bl	22ee8 <__sanitizer_set_report_fd@@Base+0x3cf0>
   28670:	str	x0, [sp, #56]
   28674:	add	x0, sp, #0x34
   28678:	mov	x1, x0
   2867c:	ldr	x0, [sp, #56]
   28680:	bl	22e9c <__sanitizer_set_report_fd@@Base+0x3ca4>
   28684:	and	w0, w0, #0xff
   28688:	cmp	w0, #0x0
   2868c:	b.eq	286c8 <__sanitizer_set_report_fd@@Base+0x94d0>  // b.none
   28690:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   28694:	ldr	x0, [x0, #4008]
   28698:	ldr	x0, [x0]
   2869c:	ldr	w1, [sp, #52]
   286a0:	mov	w5, w1
   286a4:	ldr	x4, [sp, #40]
   286a8:	ldr	x3, [sp, #32]
   286ac:	ldr	x2, [sp, #32]
   286b0:	mov	x1, x0
   286b4:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   286b8:	add	x0, x0, #0x418
   286bc:	bl	2a3fc <OnPrint@@Base+0x454>
   286c0:	mov	w0, #0x0                   	// #0
   286c4:	b	286d4 <__sanitizer_set_report_fd@@Base+0x94dc>
   286c8:	ldr	x0, [sp, #32]
   286cc:	bl	19870 <__sancov_default_options@@Base+0x36d4>
   286d0:	mov	w0, #0x1                   	// #1
   286d4:	ldp	x19, x30, [sp], #80
   286d8:	ret
   286dc:	str	x30, [sp, #-48]!
   286e0:	str	x0, [sp, #40]
   286e4:	str	x1, [sp, #32]
   286e8:	str	x2, [sp, #24]
   286ec:	str	x3, [sp, #16]
   286f0:	ldr	x0, [sp, #16]
   286f4:	cmp	x0, #0x0
   286f8:	b.eq	28710 <__sanitizer_set_report_fd@@Base+0x9518>  // b.none
   286fc:	mov	x2, #0x0                   	// #0
   28700:	ldr	x1, [sp, #32]
   28704:	ldr	x0, [sp, #16]
   28708:	bl	288e0 <__sanitizer_set_report_fd@@Base+0x96e8>
   2870c:	b	28718 <__sanitizer_set_report_fd@@Base+0x9520>
   28710:	ldr	x0, [sp, #32]
   28714:	bl	2895c <__sanitizer_set_report_fd@@Base+0x9764>
   28718:	ldr	x1, [sp, #40]
   2871c:	str	x0, [x1]
   28720:	ldr	x0, [sp, #40]
   28724:	ldr	x1, [sp, #32]
   28728:	str	x1, [x0, #8]
   2872c:	ldr	x0, [sp, #40]
   28730:	ldr	x1, [sp, #24]
   28734:	str	x1, [x0, #16]
   28738:	ldr	x0, [sp, #40]
   2873c:	ldr	x0, [x0]
   28740:	ldr	x30, [sp], #48
   28744:	ret
   28748:	str	x30, [sp, #-48]!
   2874c:	str	x0, [sp, #40]
   28750:	str	x1, [sp, #32]
   28754:	str	x2, [sp, #24]
   28758:	ldr	x1, [sp, #24]
   2875c:	ldr	x0, [sp, #32]
   28760:	bl	27004 <__sanitizer_set_report_fd@@Base+0x7e0c>
   28764:	ldr	x30, [sp], #48
   28768:	ret
   2876c:	str	x30, [sp, #-48]!
   28770:	str	x0, [sp, #40]
   28774:	str	x1, [sp, #32]
   28778:	str	x2, [sp, #24]
   2877c:	ldr	x1, [sp, #24]
   28780:	ldr	x0, [sp, #32]
   28784:	bl	26fe0 <__sanitizer_set_report_fd@@Base+0x7de8>
   28788:	ldr	x30, [sp], #48
   2878c:	ret
   28790:	str	x30, [sp, #-80]!
   28794:	str	x0, [sp, #40]
   28798:	str	x1, [sp, #32]
   2879c:	str	x2, [sp, #24]
   287a0:	ldr	x0, [sp, #24]
   287a4:	str	x0, [sp, #72]
   287a8:	ldr	x0, [sp, #40]
   287ac:	ldr	x0, [x0, #8]
   287b0:	str	x0, [sp, #64]
   287b4:	ldr	x1, [sp, #72]
   287b8:	ldr	x0, [sp, #64]
   287bc:	cmp	x1, x0
   287c0:	cset	w0, hi  // hi = pmore
   287c4:	and	w0, w0, #0xff
   287c8:	and	x0, x0, #0xff
   287cc:	cmp	x0, #0x0
   287d0:	b.eq	287f4 <__sanitizer_set_report_fd@@Base+0x95fc>  // b.none
   287d4:	ldr	x4, [sp, #64]
   287d8:	ldr	x3, [sp, #72]
   287dc:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   287e0:	add	x2, x0, #0x468
   287e4:	mov	w1, #0x175                 	// #373
   287e8:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   287ec:	add	x0, x0, #0x190
   287f0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   287f4:	ldr	x0, [sp, #40]
   287f8:	ldr	x0, [x0]
   287fc:	mov	x1, x0
   28800:	ldr	x0, [sp, #32]
   28804:	cmp	x0, x1
   28808:	b.ne	28844 <__sanitizer_set_report_fd@@Base+0x964c>  // b.any
   2880c:	ldr	x0, [sp, #40]
   28810:	ldr	x0, [x0, #8]
   28814:	ldr	x1, [sp, #24]
   28818:	cmp	x1, x0
   2881c:	b.eq	28834 <__sanitizer_set_report_fd@@Base+0x963c>  // b.none
   28820:	ldr	x1, [sp, #32]
   28824:	ldr	x0, [sp, #24]
   28828:	add	x0, x1, x0
   2882c:	mov	x1, x0
   28830:	b	28838 <__sanitizer_set_report_fd@@Base+0x9640>
   28834:	mov	x1, #0x0                   	// #0
   28838:	ldr	x0, [sp, #40]
   2883c:	str	x1, [x0]
   28840:	b	288b0 <__sanitizer_set_report_fd@@Base+0x96b8>
   28844:	ldr	x1, [sp, #32]
   28848:	ldr	x0, [sp, #24]
   2884c:	add	x0, x1, x0
   28850:	str	x0, [sp, #56]
   28854:	ldr	x0, [sp, #40]
   28858:	ldr	x0, [x0]
   2885c:	mov	x1, x0
   28860:	ldr	x0, [sp, #40]
   28864:	ldr	x0, [x0, #8]
   28868:	add	x0, x1, x0
   2886c:	str	x0, [sp, #48]
   28870:	ldr	x1, [sp, #56]
   28874:	ldr	x0, [sp, #48]
   28878:	cmp	x1, x0
   2887c:	cset	w0, ne  // ne = any
   28880:	and	w0, w0, #0xff
   28884:	and	x0, x0, #0xff
   28888:	cmp	x0, #0x0
   2888c:	b.eq	288b0 <__sanitizer_set_report_fd@@Base+0x96b8>  // b.none
   28890:	ldr	x4, [sp, #48]
   28894:	ldr	x3, [sp, #56]
   28898:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2889c:	add	x2, x0, #0x480
   288a0:	mov	w1, #0x17a                 	// #378
   288a4:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   288a8:	add	x0, x0, #0x190
   288ac:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   288b0:	ldr	x0, [sp, #40]
   288b4:	ldr	x1, [x0, #8]
   288b8:	ldr	x0, [sp, #24]
   288bc:	sub	x1, x1, x0
   288c0:	ldr	x0, [sp, #40]
   288c4:	str	x1, [x0, #8]
   288c8:	ldr	x0, [sp, #32]
   288cc:	ldr	x1, [sp, #24]
   288d0:	bl	26af4 <__sanitizer_set_report_fd@@Base+0x78fc>
   288d4:	nop
   288d8:	ldr	x30, [sp], #80
   288dc:	ret
   288e0:	str	x30, [sp, #-64]!
   288e4:	str	x0, [sp, #40]
   288e8:	str	x1, [sp, #32]
   288ec:	str	x2, [sp, #24]
   288f0:	ldr	x0, [sp, #24]
   288f4:	cmp	x0, #0x0
   288f8:	b.eq	2890c <__sanitizer_set_report_fd@@Base+0x9714>  // b.none
   288fc:	ldr	x1, [sp, #32]
   28900:	ldr	x0, [sp, #24]
   28904:	bl	283fc <__sanitizer_set_report_fd@@Base+0x9204>
   28908:	b	28910 <__sanitizer_set_report_fd@@Base+0x9718>
   2890c:	mov	w0, #0xffffffff            	// #-1
   28910:	str	w0, [sp, #56]
   28914:	mov	w0, #0x4012                	// #16402
   28918:	str	w0, [sp, #60]
   2891c:	ldr	w0, [sp, #56]
   28920:	cmn	w0, #0x1
   28924:	b.ne	28934 <__sanitizer_set_report_fd@@Base+0x973c>  // b.any
   28928:	ldr	w0, [sp, #60]
   2892c:	orr	w0, w0, #0x20
   28930:	str	w0, [sp, #60]
   28934:	ldr	x0, [sp, #40]
   28938:	ldr	w1, [sp, #60]
   2893c:	mov	x5, #0x0                   	// #0
   28940:	ldr	w4, [sp, #56]
   28944:	mov	w3, w1
   28948:	mov	w2, #0x0                   	// #0
   2894c:	ldr	x1, [sp, #32]
   28950:	bl	22ee8 <__sanitizer_set_report_fd@@Base+0x3cf0>
   28954:	ldr	x30, [sp], #64
   28958:	ret
   2895c:	str	x30, [sp, #-48]!
   28960:	str	x0, [sp, #24]
   28964:	mov	w0, #0x4022                	// #16418
   28968:	str	w0, [sp, #44]
   2896c:	ldr	w0, [sp, #44]
   28970:	mov	x5, #0x0                   	// #0
   28974:	mov	w4, #0xffffffff            	// #-1
   28978:	mov	w3, w0
   2897c:	mov	w2, #0x0                   	// #0
   28980:	ldr	x1, [sp, #24]
   28984:	mov	x0, #0x0                   	// #0
   28988:	bl	22ee8 <__sanitizer_set_report_fd@@Base+0x3cf0>
   2898c:	ldr	x30, [sp], #48
   28990:	ret
   28994:	str	x30, [sp, #-48]!
   28998:	str	x0, [sp, #40]
   2899c:	str	x1, [sp, #32]
   289a0:	str	x2, [sp, #24]
   289a4:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   289a8:	ldr	x0, [x0, #3536]
   289ac:	cmp	x0, #0x0
   289b0:	b.eq	289c8 <__sanitizer_set_report_fd@@Base+0x97d0>  // b.none
   289b4:	ldr	x2, [sp, #24]
   289b8:	ldr	x1, [sp, #32]
   289bc:	ldr	x0, [sp, #40]
   289c0:	bl	6a50 <real_pthread_attr_getstack@plt>
   289c4:	b	289dc <__sanitizer_set_report_fd@@Base+0x97e4>
   289c8:	ldr	x2, [sp, #24]
   289cc:	ldr	x1, [sp, #32]
   289d0:	ldr	x0, [sp, #40]
   289d4:	bl	6c80 <pthread_attr_getstack@plt>
   289d8:	nop
   289dc:	ldr	x30, [sp], #48
   289e0:	ret
   289e4:	str	x30, [sp, #-80]!
   289e8:	str	x0, [sp, #24]
   289ec:	ldr	x0, [sp, #24]
   289f0:	str	x0, [sp, #72]
   289f4:	str	xzr, [sp, #48]
   289f8:	str	xzr, [sp, #40]
   289fc:	add	x1, sp, #0x28
   28a00:	add	x0, sp, #0x30
   28a04:	mov	x2, x1
   28a08:	mov	x1, x0
   28a0c:	ldr	x0, [sp, #72]
   28a10:	bl	28994 <__sanitizer_set_report_fd@@Base+0x979c>
   28a14:	ldr	x0, [sp, #48]
   28a18:	cmp	x0, #0x0
   28a1c:	b.eq	28a3c <__sanitizer_set_report_fd@@Base+0x9844>  // b.none
   28a20:	ldr	x1, [sp, #48]
   28a24:	ldr	x0, [sp, #40]
   28a28:	add	x0, x1, x0
   28a2c:	cmp	x0, #0x0
   28a30:	b.eq	28a3c <__sanitizer_set_report_fd@@Base+0x9844>  // b.none
   28a34:	mov	w0, #0x1                   	// #1
   28a38:	b	28a40 <__sanitizer_set_report_fd@@Base+0x9848>
   28a3c:	mov	w0, #0x0                   	// #0
   28a40:	strb	w0, [sp, #71]
   28a44:	bl	25c80 <__sanitizer_set_report_fd@@Base+0x6a88>
   28a48:	add	x0, x0, #0x20, lsl #12
   28a4c:	str	x0, [sp, #56]
   28a50:	ldr	x0, [sp, #40]
   28a54:	ldr	x1, [sp, #56]
   28a58:	cmp	x1, x0
   28a5c:	b.ls	28ae4 <__sanitizer_set_report_fd@@Base+0x98ec>  // b.plast
   28a60:	ldrb	w0, [sp, #71]
   28a64:	eor	w0, w0, #0x1
   28a68:	and	w0, w0, #0xff
   28a6c:	cmp	w0, #0x0
   28a70:	b.eq	28ac0 <__sanitizer_set_report_fd@@Base+0x98c8>  // b.none
   28a74:	ldr	x0, [sp, #40]
   28a78:	cmp	x0, #0x0
   28a7c:	b.eq	28ae4 <__sanitizer_set_report_fd@@Base+0x98ec>  // b.none
   28a80:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
   28a84:	cmp	w0, #0x0
   28a88:	cset	w0, ne  // ne = any
   28a8c:	and	w0, w0, #0xff
   28a90:	cmp	w0, #0x0
   28a94:	b.eq	28ab0 <__sanitizer_set_report_fd@@Base+0x98b8>  // b.none
   28a98:	ldr	x0, [sp, #40]
   28a9c:	ldr	x2, [sp, #56]
   28aa0:	mov	x1, x0
   28aa4:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   28aa8:	add	x0, x0, #0x4c0
   28aac:	bl	2a350 <OnPrint@@Base+0x3a8>
   28ab0:	ldr	x1, [sp, #56]
   28ab4:	ldr	x0, [sp, #72]
   28ab8:	bl	6c90 <pthread_attr_setstacksize@plt>
   28abc:	b	28ae4 <__sanitizer_set_report_fd@@Base+0x98ec>
   28ac0:	ldr	x0, [sp, #40]
   28ac4:	ldr	x2, [sp, #56]
   28ac8:	mov	x1, x0
   28acc:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   28ad0:	add	x0, x0, #0x4f0
   28ad4:	bl	2a350 <OnPrint@@Base+0x3a8>
   28ad8:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   28adc:	add	x0, x0, #0x530
   28ae0:	bl	2a350 <OnPrint@@Base+0x3a8>
   28ae4:	nop
   28ae8:	ldr	x30, [sp], #80
   28aec:	ret
   28af0:	str	x30, [sp, #-32]!
   28af4:	str	x0, [sp, #24]
   28af8:	ldr	x0, [sp, #24]
   28afc:	ldr	x0, [x0]
   28b00:	ldr	w0, [x0]
   28b04:	cmn	w0, #0x1
   28b08:	b.eq	28b1c <__sanitizer_set_report_fd@@Base+0x9924>  // b.none
   28b0c:	ldr	x0, [sp, #24]
   28b10:	ldr	x0, [x0]
   28b14:	ldr	w0, [x0]
   28b18:	bl	22fa8 <__sanitizer_set_report_fd@@Base+0x3db0>
   28b1c:	ldr	x0, [sp, #24]
   28b20:	ldr	x0, [x0, #8]
   28b24:	ldr	w0, [x0]
   28b28:	cmn	w0, #0x1
   28b2c:	b.eq	28b40 <__sanitizer_set_report_fd@@Base+0x9948>  // b.none
   28b30:	ldr	x0, [sp, #24]
   28b34:	ldr	x0, [x0, #8]
   28b38:	ldr	w0, [x0]
   28b3c:	bl	22fa8 <__sanitizer_set_report_fd@@Base+0x3db0>
   28b40:	ldr	x0, [sp, #24]
   28b44:	ldr	x0, [x0, #16]
   28b48:	ldr	w0, [x0]
   28b4c:	cmn	w0, #0x1
   28b50:	b.eq	28b64 <__sanitizer_set_report_fd@@Base+0x996c>  // b.none
   28b54:	ldr	x0, [sp, #24]
   28b58:	ldr	x0, [x0, #16]
   28b5c:	ldr	w0, [x0]
   28b60:	bl	22fa8 <__sanitizer_set_report_fd@@Base+0x3db0>
   28b64:	nop
   28b68:	ldr	x30, [sp], #32
   28b6c:	ret
   28b70:	stp	x19, x30, [sp, #-144]!
   28b74:	str	x0, [sp, #72]
   28b78:	str	x1, [sp, #64]
   28b7c:	str	w2, [sp, #60]
   28b80:	str	w3, [sp, #56]
   28b84:	str	w4, [sp, #52]
   28b88:	add	x0, sp, #0x3c
   28b8c:	str	x0, [sp, #112]
   28b90:	add	x0, sp, #0x38
   28b94:	str	x0, [sp, #120]
   28b98:	add	x0, sp, #0x34
   28b9c:	str	x0, [sp, #128]
   28ba0:	add	x2, sp, #0x10
   28ba4:	add	x3, sp, #0x70
   28ba8:	ldp	x0, x1, [x3]
   28bac:	stp	x0, x1, [x2]
   28bb0:	ldr	x0, [x3, #16]
   28bb4:	str	x0, [x2, #16]
   28bb8:	add	x0, sp, #0x10
   28bbc:	add	x1, sp, #0x58
   28bc0:	mov	x8, x1
   28bc4:	bl	28e14 <__sanitizer_set_report_fd@@Base+0x9c1c>
   28bc8:	bl	23d78 <__sanitizer_set_report_fd@@Base+0x4b80>
   28bcc:	str	w0, [sp, #136]
   28bd0:	ldr	w0, [sp, #136]
   28bd4:	cmp	w0, #0x0
   28bd8:	b.ge	28c10 <__sanitizer_set_report_fd@@Base+0x9a18>  // b.tcont
   28bdc:	ldrsw	x0, [sp, #136]
   28be0:	add	x1, sp, #0x54
   28be4:	bl	22e9c <__sanitizer_set_report_fd@@Base+0x3ca4>
   28be8:	and	w0, w0, #0xff
   28bec:	cmp	w0, #0x0
   28bf0:	b.eq	28c08 <__sanitizer_set_report_fd@@Base+0x9a10>  // b.none
   28bf4:	ldr	w0, [sp, #84]
   28bf8:	mov	w1, w0
   28bfc:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   28c00:	add	x0, x0, #0x560
   28c04:	bl	2a3fc <OnPrint@@Base+0x454>
   28c08:	ldr	w19, [sp, #136]
   28c0c:	b	28cdc <__sanitizer_set_report_fd@@Base+0x9ae4>
   28c10:	ldr	w0, [sp, #136]
   28c14:	cmp	w0, #0x0
   28c18:	b.ne	28cd8 <__sanitizer_set_report_fd@@Base+0x9ae0>  // b.any
   28c1c:	ldr	w0, [sp, #60]
   28c20:	cmn	w0, #0x1
   28c24:	b.eq	28c44 <__sanitizer_set_report_fd@@Base+0x9a4c>  // b.none
   28c28:	mov	w0, #0x0                   	// #0
   28c2c:	bl	22fa8 <__sanitizer_set_report_fd@@Base+0x3db0>
   28c30:	ldr	w0, [sp, #60]
   28c34:	mov	w1, #0x0                   	// #0
   28c38:	bl	23270 <__sanitizer_set_report_fd@@Base+0x4078>
   28c3c:	ldr	w0, [sp, #60]
   28c40:	bl	22fa8 <__sanitizer_set_report_fd@@Base+0x3db0>
   28c44:	ldr	w0, [sp, #56]
   28c48:	cmn	w0, #0x1
   28c4c:	b.eq	28c6c <__sanitizer_set_report_fd@@Base+0x9a74>  // b.none
   28c50:	mov	w0, #0x1                   	// #1
   28c54:	bl	22fa8 <__sanitizer_set_report_fd@@Base+0x3db0>
   28c58:	ldr	w0, [sp, #56]
   28c5c:	mov	w1, #0x1                   	// #1
   28c60:	bl	23270 <__sanitizer_set_report_fd@@Base+0x4078>
   28c64:	ldr	w0, [sp, #56]
   28c68:	bl	22fa8 <__sanitizer_set_report_fd@@Base+0x3db0>
   28c6c:	ldr	w0, [sp, #52]
   28c70:	cmn	w0, #0x1
   28c74:	b.eq	28c94 <__sanitizer_set_report_fd@@Base+0x9a9c>  // b.none
   28c78:	mov	w0, #0x2                   	// #2
   28c7c:	bl	22fa8 <__sanitizer_set_report_fd@@Base+0x3db0>
   28c80:	ldr	w0, [sp, #52]
   28c84:	mov	w1, #0x2                   	// #2
   28c88:	bl	23270 <__sanitizer_set_report_fd@@Base+0x4078>
   28c8c:	ldr	w0, [sp, #52]
   28c90:	bl	22fa8 <__sanitizer_set_report_fd@@Base+0x3db0>
   28c94:	mov	w0, #0x4                   	// #4
   28c98:	bl	6e80 <sysconf@plt>
   28c9c:	str	w0, [sp, #140]
   28ca0:	ldr	w0, [sp, #140]
   28ca4:	cmp	w0, #0x2
   28ca8:	b.le	28cc4 <__sanitizer_set_report_fd@@Base+0x9acc>
   28cac:	ldr	w0, [sp, #140]
   28cb0:	bl	22fa8 <__sanitizer_set_report_fd@@Base+0x3db0>
   28cb4:	ldr	w0, [sp, #140]
   28cb8:	sub	w0, w0, #0x1
   28cbc:	str	w0, [sp, #140]
   28cc0:	b	28ca0 <__sanitizer_set_report_fd@@Base+0x9aa8>
   28cc4:	ldr	x1, [sp, #64]
   28cc8:	ldr	x0, [sp, #72]
   28ccc:	bl	6950 <execv@plt>
   28cd0:	mov	w0, #0x1                   	// #1
   28cd4:	bl	23348 <__sanitizer_set_report_fd@@Base+0x4150>
   28cd8:	ldr	w19, [sp, #136]
   28cdc:	add	x0, sp, #0x58
   28ce0:	bl	28e5c <__sanitizer_set_report_fd@@Base+0x9c64>
   28ce4:	mov	w0, w19
   28ce8:	ldp	x19, x30, [sp], #144
   28cec:	ret
   28cf0:	str	x30, [sp, #-48]!
   28cf4:	str	w0, [sp, #28]
   28cf8:	add	x0, sp, #0x24
   28cfc:	mov	w2, #0x1                   	// #1
   28d00:	mov	x1, x0
   28d04:	ldr	w0, [sp, #28]
   28d08:	bl	23c2c <__sanitizer_set_report_fd@@Base+0x4a34>
   28d0c:	str	x0, [sp, #40]
   28d10:	add	x0, sp, #0x20
   28d14:	mov	x1, x0
   28d18:	ldr	x0, [sp, #40]
   28d1c:	bl	22e9c <__sanitizer_set_report_fd@@Base+0x3ca4>
   28d20:	and	w0, w0, #0xff
   28d24:	cmp	w0, #0x0
   28d28:	b.eq	28d60 <__sanitizer_set_report_fd@@Base+0x9b68>  // b.none
   28d2c:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
   28d30:	cmp	w0, #0x0
   28d34:	cset	w0, ne  // ne = any
   28d38:	and	w0, w0, #0xff
   28d3c:	cmp	w0, #0x0
   28d40:	b.eq	28d58 <__sanitizer_set_report_fd@@Base+0x9b60>  // b.none
   28d44:	ldr	w0, [sp, #32]
   28d48:	mov	w1, w0
   28d4c:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   28d50:	add	x0, x0, #0x588
   28d54:	bl	2a3fc <OnPrint@@Base+0x454>
   28d58:	mov	w0, #0x0                   	// #0
   28d5c:	b	28d70 <__sanitizer_set_report_fd@@Base+0x9b78>
   28d60:	ldr	x0, [sp, #40]
   28d64:	cmp	x0, #0x0
   28d68:	cset	w0, eq  // eq = none
   28d6c:	and	w0, w0, #0xff
   28d70:	ldr	x30, [sp], #48
   28d74:	ret
   28d78:	str	x30, [sp, #-48]!
   28d7c:	str	w0, [sp, #28]
   28d80:	add	x0, sp, #0x24
   28d84:	mov	w2, #0x0                   	// #0
   28d88:	mov	x1, x0
   28d8c:	ldr	w0, [sp, #28]
   28d90:	bl	23c2c <__sanitizer_set_report_fd@@Base+0x4a34>
   28d94:	str	x0, [sp, #40]
   28d98:	add	x0, sp, #0x20
   28d9c:	mov	x1, x0
   28da0:	ldr	x0, [sp, #40]
   28da4:	bl	22e9c <__sanitizer_set_report_fd@@Base+0x3ca4>
   28da8:	and	w0, w0, #0xff
   28dac:	cmp	w0, #0x0
   28db0:	b.eq	28de8 <__sanitizer_set_report_fd@@Base+0x9bf0>  // b.none
   28db4:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
   28db8:	cmp	w0, #0x0
   28dbc:	cset	w0, ne  // ne = any
   28dc0:	and	w0, w0, #0xff
   28dc4:	cmp	w0, #0x0
   28dc8:	b.eq	28de0 <__sanitizer_set_report_fd@@Base+0x9be8>  // b.none
   28dcc:	ldr	w0, [sp, #32]
   28dd0:	mov	w1, w0
   28dd4:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   28dd8:	add	x0, x0, #0x588
   28ddc:	bl	2a3fc <OnPrint@@Base+0x454>
   28de0:	mov	w0, #0xffffffff            	// #-1
   28de4:	b	28dec <__sanitizer_set_report_fd@@Base+0x9bf4>
   28de8:	ldr	w0, [sp, #36]
   28dec:	ldr	x30, [sp], #48
   28df0:	ret
   28df4:	sub	sp, sp, #0x10
   28df8:	str	w0, [sp, #12]
   28dfc:	ldr	w0, [sp, #12]
   28e00:	cmp	w0, #0x1
   28e04:	cset	w0, eq  // eq = none
   28e08:	and	w0, w0, #0xff
   28e0c:	add	sp, sp, #0x10
   28e10:	ret
   28e14:	stp	x19, x20, [sp, #-64]!
   28e18:	str	x30, [sp, #16]
   28e1c:	mov	x19, x8
   28e20:	mov	x20, x0
   28e24:	add	x2, sp, #0x20
   28e28:	mov	x3, x20
   28e2c:	ldp	x0, x1, [x3]
   28e30:	stp	x0, x1, [x2]
   28e34:	ldr	x0, [x3, #16]
   28e38:	str	x0, [x2, #16]
   28e3c:	add	x0, sp, #0x20
   28e40:	mov	x1, x0
   28e44:	mov	x0, x19
   28e48:	bl	28e78 <__sanitizer_set_report_fd@@Base+0x9c80>
   28e4c:	mov	x0, x19
   28e50:	ldr	x30, [sp, #16]
   28e54:	ldp	x19, x20, [sp], #64
   28e58:	ret
   28e5c:	str	x30, [sp, #-32]!
   28e60:	str	x0, [sp, #24]
   28e64:	ldr	x0, [sp, #24]
   28e68:	bl	28af0 <__sanitizer_set_report_fd@@Base+0x98f8>
   28e6c:	nop
   28e70:	ldr	x30, [sp], #32
   28e74:	ret
   28e78:	str	x19, [sp, #-32]!
   28e7c:	str	x0, [sp, #24]
   28e80:	mov	x19, x1
   28e84:	ldr	x0, [sp, #24]
   28e88:	mov	x2, x0
   28e8c:	mov	x3, x19
   28e90:	ldp	x0, x1, [x3]
   28e94:	stp	x0, x1, [x2]
   28e98:	ldr	x0, [x3, #16]
   28e9c:	str	x0, [x2, #16]
   28ea0:	nop
   28ea4:	ldr	x19, [sp], #32
   28ea8:	ret
   28eac:	sub	sp, sp, #0x20
   28eb0:	str	x0, [sp, #24]
   28eb4:	str	x1, [sp, #16]
   28eb8:	strb	w2, [sp, #15]
   28ebc:	ldr	x0, [sp, #24]
   28ec0:	ldr	x0, [x0]
   28ec4:	ldr	x1, [sp, #16]
   28ec8:	cmp	x1, x0
   28ecc:	b.ls	28ef4 <__sanitizer_set_report_fd@@Base+0x9cfc>  // b.plast
   28ed0:	ldr	x0, [sp, #24]
   28ed4:	ldr	x0, [x0]
   28ed8:	ldrb	w1, [sp, #15]
   28edc:	strb	w1, [x0]
   28ee0:	ldr	x0, [sp, #24]
   28ee4:	ldr	x0, [x0]
   28ee8:	add	x1, x0, #0x1
   28eec:	ldr	x0, [sp, #24]
   28ef0:	str	x1, [x0]
   28ef4:	mov	w0, #0x1                   	// #1
   28ef8:	add	sp, sp, #0x20
   28efc:	ret
   28f00:	sub	sp, sp, #0x140
   28f04:	str	x30, [sp]
   28f08:	str	x0, [sp, #40]
   28f0c:	str	x1, [sp, #32]
   28f10:	str	x2, [sp, #24]
   28f14:	strb	w3, [sp, #23]
   28f18:	strb	w4, [sp, #22]
   28f1c:	strb	w5, [sp, #21]
   28f20:	strb	w6, [sp, #20]
   28f24:	strb	w7, [sp, #19]
   28f28:	mov	x0, #0x1e                  	// #30
   28f2c:	str	x0, [sp, #304]
   28f30:	ldrb	w0, [sp, #23]
   28f34:	cmp	w0, #0xa
   28f38:	cset	w0, ne  // ne = any
   28f3c:	and	w0, w0, #0xff
   28f40:	and	x0, x0, #0xff
   28f44:	cmp	x0, #0x0
   28f48:	b.eq	28f70 <__sanitizer_set_report_fd@@Base+0x9d78>  // b.none
   28f4c:	ldrb	w0, [sp, #23]
   28f50:	cmp	w0, #0x10
   28f54:	cset	w0, ne  // ne = any
   28f58:	and	w0, w0, #0xff
   28f5c:	and	x0, x0, #0xff
   28f60:	cmp	x0, #0x0
   28f64:	b.eq	28f70 <__sanitizer_set_report_fd@@Base+0x9d78>  // b.none
   28f68:	mov	w0, #0x1                   	// #1
   28f6c:	b	28f74 <__sanitizer_set_report_fd@@Base+0x9d7c>
   28f70:	mov	w0, #0x0                   	// #0
   28f74:	and	x0, x0, #0xff
   28f78:	cmp	x0, #0x0
   28f7c:	b.eq	28f90 <__sanitizer_set_report_fd@@Base+0x9d98>  // b.none
   28f80:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   28f84:	add	x0, x0, #0x610
   28f88:	bl	1e860 <__sanitizer_cov_pcs_init@@Base+0x37c4>
   28f8c:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   28f90:	ldrb	w0, [sp, #23]
   28f94:	cmp	w0, #0xa
   28f98:	cset	w0, ne  // ne = any
   28f9c:	and	w0, w0, #0xff
   28fa0:	and	x0, x0, #0xff
   28fa4:	cmp	x0, #0x0
   28fa8:	b.eq	28fc0 <__sanitizer_set_report_fd@@Base+0x9dc8>  // b.none
   28fac:	ldrb	w0, [sp, #20]
   28fb0:	cmp	x0, #0x0
   28fb4:	b.eq	28fc0 <__sanitizer_set_report_fd@@Base+0x9dc8>  // b.none
   28fb8:	mov	w0, #0x1                   	// #1
   28fbc:	b	28fc4 <__sanitizer_set_report_fd@@Base+0x9dcc>
   28fc0:	mov	w0, #0x0                   	// #0
   28fc4:	and	x0, x0, #0xff
   28fc8:	cmp	x0, #0x0
   28fcc:	b.eq	28fe0 <__sanitizer_set_report_fd@@Base+0x9de8>  // b.none
   28fd0:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   28fd4:	add	x0, x0, #0x630
   28fd8:	bl	1e860 <__sanitizer_cov_pcs_init@@Base+0x37c4>
   28fdc:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   28fe0:	ldr	x0, [sp, #24]
   28fe4:	cmp	x0, #0x0
   28fe8:	cset	w0, eq  // eq = none
   28fec:	and	w0, w0, #0xff
   28ff0:	and	x0, x0, #0xff
   28ff4:	cmp	x0, #0x0
   28ff8:	b.eq	29010 <__sanitizer_set_report_fd@@Base+0x9e18>  // b.none
   28ffc:	ldrb	w0, [sp, #20]
   29000:	cmp	x0, #0x0
   29004:	b.eq	29010 <__sanitizer_set_report_fd@@Base+0x9e18>  // b.none
   29008:	mov	w0, #0x1                   	// #1
   2900c:	b	29014 <__sanitizer_set_report_fd@@Base+0x9e1c>
   29010:	mov	w0, #0x0                   	// #0
   29014:	and	x0, x0, #0xff
   29018:	cmp	x0, #0x0
   2901c:	b.eq	29030 <__sanitizer_set_report_fd@@Base+0x9e38>  // b.none
   29020:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   29024:	add	x0, x0, #0x648
   29028:	bl	1e860 <__sanitizer_cov_pcs_init@@Base+0x37c4>
   2902c:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   29030:	ldrb	w0, [sp, #22]
   29034:	cmp	w0, #0x1d
   29038:	cset	w0, hi  // hi = pmore
   2903c:	and	w0, w0, #0xff
   29040:	and	x0, x0, #0xff
   29044:	cmp	x0, #0x0
   29048:	b.eq	2905c <__sanitizer_set_report_fd@@Base+0x9e64>  // b.none
   2904c:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   29050:	add	x0, x0, #0x668
   29054:	bl	1e860 <__sanitizer_cov_pcs_init@@Base+0x37c4>
   29058:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   2905c:	str	wzr, [sp, #316]
   29060:	ldrb	w0, [sp, #20]
   29064:	cmp	w0, #0x0
   29068:	b.eq	29084 <__sanitizer_set_report_fd@@Base+0x9e8c>  // b.none
   2906c:	ldrb	w0, [sp, #22]
   29070:	cmp	w0, #0x0
   29074:	b.eq	29084 <__sanitizer_set_report_fd@@Base+0x9e8c>  // b.none
   29078:	ldrb	w0, [sp, #22]
   2907c:	sub	w0, w0, #0x1
   29080:	strb	w0, [sp, #22]
   29084:	ldrb	w0, [sp, #20]
   29088:	cmp	w0, #0x0
   2908c:	b.eq	290bc <__sanitizer_set_report_fd@@Base+0x9ec4>  // b.none
   29090:	ldrb	w0, [sp, #21]
   29094:	cmp	w0, #0x0
   29098:	b.eq	290bc <__sanitizer_set_report_fd@@Base+0x9ec4>  // b.none
   2909c:	mov	w2, #0x2d                  	// #45
   290a0:	ldr	x1, [sp, #32]
   290a4:	ldr	x0, [sp, #40]
   290a8:	bl	28eac <__sanitizer_set_report_fd@@Base+0x9cb4>
   290ac:	mov	w1, w0
   290b0:	ldr	w0, [sp, #316]
   290b4:	add	w0, w0, w1
   290b8:	str	w0, [sp, #316]
   290bc:	str	wzr, [sp, #312]
   290c0:	ldrsw	x0, [sp, #312]
   290c4:	cmp	x0, #0x1d
   290c8:	cset	w0, hi  // hi = pmore
   290cc:	and	w0, w0, #0xff
   290d0:	and	x0, x0, #0xff
   290d4:	cmp	x0, #0x0
   290d8:	b.eq	290ec <__sanitizer_set_report_fd@@Base+0x9ef4>  // b.none
   290dc:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   290e0:	add	x0, x0, #0x688
   290e4:	bl	1e860 <__sanitizer_cov_pcs_init@@Base+0x37c4>
   290e8:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   290ec:	ldrb	w1, [sp, #23]
   290f0:	ldr	w2, [sp, #312]
   290f4:	add	w0, w2, #0x1
   290f8:	str	w0, [sp, #312]
   290fc:	ldr	x0, [sp, #24]
   29100:	udiv	x3, x0, x1
   29104:	mul	x1, x3, x1
   29108:	sub	x3, x0, x1
   2910c:	sxtw	x0, w2
   29110:	lsl	x0, x0, #3
   29114:	add	x1, sp, #0x38
   29118:	str	x3, [x1, x0]
   2911c:	ldrb	w0, [sp, #23]
   29120:	ldr	x1, [sp, #24]
   29124:	udiv	x0, x1, x0
   29128:	str	x0, [sp, #24]
   2912c:	ldr	x0, [sp, #24]
   29130:	cmp	x0, #0x0
   29134:	b.eq	2913c <__sanitizer_set_report_fd@@Base+0x9f44>  // b.none
   29138:	b	290c0 <__sanitizer_set_report_fd@@Base+0x9ec8>
   2913c:	ldrb	w0, [sp, #22]
   29140:	ldr	w1, [sp, #312]
   29144:	cmp	w1, w0
   29148:	b.ge	29188 <__sanitizer_set_report_fd@@Base+0x9f90>  // b.tcont
   2914c:	add	x1, sp, #0x38
   29150:	ldrsw	x0, [sp, #312]
   29154:	lsl	x0, x0, #3
   29158:	add	x3, x1, x0
   2915c:	ldrb	w1, [sp, #22]
   29160:	ldr	w0, [sp, #312]
   29164:	sub	w0, w1, w0
   29168:	sxtw	x0, w0
   2916c:	lsl	x0, x0, #3
   29170:	mov	x2, x0
   29174:	mov	w1, #0x0                   	// #0
   29178:	mov	x0, x3
   2917c:	bl	21754 <__sanitizer_set_report_fd@@Base+0x255c>
   29180:	ldrb	w0, [sp, #22]
   29184:	str	w0, [sp, #312]
   29188:	ldr	w0, [sp, #312]
   2918c:	cmp	w0, #0x0
   29190:	cset	w0, le
   29194:	and	w0, w0, #0xff
   29198:	and	x0, x0, #0xff
   2919c:	cmp	x0, #0x0
   291a0:	b.eq	291b4 <__sanitizer_set_report_fd@@Base+0x9fbc>  // b.none
   291a4:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   291a8:	add	x0, x0, #0x6a8
   291ac:	bl	1e860 <__sanitizer_cov_pcs_init@@Base+0x37c4>
   291b0:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   291b4:	ldr	w0, [sp, #312]
   291b8:	sub	w0, w0, #0x1
   291bc:	str	w0, [sp, #312]
   291c0:	ldr	w0, [sp, #312]
   291c4:	cmp	w0, #0x0
   291c8:	b.lt	2923c <__sanitizer_set_report_fd@@Base+0xa044>  // b.tstop
   291cc:	ldrsw	x0, [sp, #312]
   291d0:	lsl	x0, x0, #3
   291d4:	add	x1, sp, #0x38
   291d8:	ldr	x0, [x1, x0]
   291dc:	cmp	x0, #0x0
   291e0:	b.ne	2923c <__sanitizer_set_report_fd@@Base+0xa044>  // b.any
   291e4:	ldrb	w0, [sp, #21]
   291e8:	cmp	w0, #0x0
   291ec:	b.ne	291fc <__sanitizer_set_report_fd@@Base+0xa004>  // b.any
   291f0:	ldr	w0, [sp, #312]
   291f4:	cmp	w0, #0x0
   291f8:	b.ne	29204 <__sanitizer_set_report_fd@@Base+0xa00c>  // b.any
   291fc:	mov	w0, #0x30                  	// #48
   29200:	b	29208 <__sanitizer_set_report_fd@@Base+0xa010>
   29204:	mov	w0, #0x20                  	// #32
   29208:	strb	w0, [sp, #303]
   2920c:	ldrb	w2, [sp, #303]
   29210:	ldr	x1, [sp, #32]
   29214:	ldr	x0, [sp, #40]
   29218:	bl	28eac <__sanitizer_set_report_fd@@Base+0x9cb4>
   2921c:	mov	w1, w0
   29220:	ldr	w0, [sp, #316]
   29224:	add	w0, w0, w1
   29228:	str	w0, [sp, #316]
   2922c:	ldr	w0, [sp, #312]
   29230:	sub	w0, w0, #0x1
   29234:	str	w0, [sp, #312]
   29238:	b	291c0 <__sanitizer_set_report_fd@@Base+0x9fc8>
   2923c:	ldrb	w0, [sp, #20]
   29240:	cmp	w0, #0x0
   29244:	b.eq	2927c <__sanitizer_set_report_fd@@Base+0xa084>  // b.none
   29248:	ldrb	w0, [sp, #21]
   2924c:	eor	w0, w0, #0x1
   29250:	and	w0, w0, #0xff
   29254:	cmp	w0, #0x0
   29258:	b.eq	2927c <__sanitizer_set_report_fd@@Base+0xa084>  // b.none
   2925c:	mov	w2, #0x2d                  	// #45
   29260:	ldr	x1, [sp, #32]
   29264:	ldr	x0, [sp, #40]
   29268:	bl	28eac <__sanitizer_set_report_fd@@Base+0x9cb4>
   2926c:	mov	w1, w0
   29270:	ldr	w0, [sp, #316]
   29274:	add	w0, w0, w1
   29278:	str	w0, [sp, #316]
   2927c:	ldr	w0, [sp, #312]
   29280:	cmp	w0, #0x0
   29284:	b.lt	29318 <__sanitizer_set_report_fd@@Base+0xa120>  // b.tstop
   29288:	ldrsw	x0, [sp, #312]
   2928c:	lsl	x0, x0, #3
   29290:	add	x1, sp, #0x38
   29294:	ldr	x0, [x1, x0]
   29298:	strb	w0, [sp, #302]
   2929c:	ldrb	w0, [sp, #302]
   292a0:	cmp	w0, #0x9
   292a4:	b.hi	292b8 <__sanitizer_set_report_fd@@Base+0xa0c0>  // b.pmore
   292a8:	ldrb	w0, [sp, #302]
   292ac:	add	w0, w0, #0x30
   292b0:	and	w0, w0, #0xff
   292b4:	b	292e4 <__sanitizer_set_report_fd@@Base+0xa0ec>
   292b8:	ldrb	w0, [sp, #19]
   292bc:	cmp	w0, #0x0
   292c0:	b.eq	292cc <__sanitizer_set_report_fd@@Base+0xa0d4>  // b.none
   292c4:	mov	w0, #0x41                  	// #65
   292c8:	b	292d0 <__sanitizer_set_report_fd@@Base+0xa0d8>
   292cc:	mov	w0, #0x61                  	// #97
   292d0:	ldrb	w1, [sp, #302]
   292d4:	add	w0, w0, w1
   292d8:	and	w0, w0, #0xff
   292dc:	sub	w0, w0, #0xa
   292e0:	and	w0, w0, #0xff
   292e4:	strb	w0, [sp, #302]
   292e8:	ldrb	w2, [sp, #302]
   292ec:	ldr	x1, [sp, #32]
   292f0:	ldr	x0, [sp, #40]
   292f4:	bl	28eac <__sanitizer_set_report_fd@@Base+0x9cb4>
   292f8:	mov	w1, w0
   292fc:	ldr	w0, [sp, #316]
   29300:	add	w0, w0, w1
   29304:	str	w0, [sp, #316]
   29308:	ldr	w0, [sp, #312]
   2930c:	sub	w0, w0, #0x1
   29310:	str	w0, [sp, #312]
   29314:	b	2927c <__sanitizer_set_report_fd@@Base+0xa084>
   29318:	ldr	w0, [sp, #316]
   2931c:	ldr	x30, [sp]
   29320:	add	sp, sp, #0x140
   29324:	ret
   29328:	str	x30, [sp, #-48]!
   2932c:	str	x0, [sp, #40]
   29330:	str	x1, [sp, #32]
   29334:	str	x2, [sp, #24]
   29338:	strb	w3, [sp, #23]
   2933c:	strb	w4, [sp, #22]
   29340:	strb	w5, [sp, #21]
   29344:	strb	w6, [sp, #20]
   29348:	ldrb	w7, [sp, #20]
   2934c:	mov	w6, #0x0                   	// #0
   29350:	ldrb	w5, [sp, #21]
   29354:	ldrb	w4, [sp, #22]
   29358:	ldrb	w3, [sp, #23]
   2935c:	ldr	x2, [sp, #24]
   29360:	ldr	x1, [sp, #32]
   29364:	ldr	x0, [sp, #40]
   29368:	bl	28f00 <__sanitizer_set_report_fd@@Base+0x9d08>
   2936c:	ldr	x30, [sp], #48
   29370:	ret
   29374:	str	x30, [sp, #-64]!
   29378:	str	x0, [sp, #40]
   2937c:	str	x1, [sp, #32]
   29380:	str	x2, [sp, #24]
   29384:	strb	w3, [sp, #23]
   29388:	strb	w4, [sp, #22]
   2938c:	ldr	x0, [sp, #24]
   29390:	lsr	x0, x0, #63
   29394:	strb	w0, [sp, #63]
   29398:	ldrb	w0, [sp, #63]
   2939c:	cmp	w0, #0x0
   293a0:	b.eq	293b0 <__sanitizer_set_report_fd@@Base+0xa1b8>  // b.none
   293a4:	ldr	x0, [sp, #24]
   293a8:	neg	x0, x0
   293ac:	b	293b4 <__sanitizer_set_report_fd@@Base+0xa1bc>
   293b0:	ldr	x0, [sp, #24]
   293b4:	mov	w7, #0x0                   	// #0
   293b8:	ldrb	w6, [sp, #63]
   293bc:	ldrb	w5, [sp, #22]
   293c0:	ldrb	w4, [sp, #23]
   293c4:	mov	w3, #0xa                   	// #10
   293c8:	mov	x2, x0
   293cc:	ldr	x1, [sp, #32]
   293d0:	ldr	x0, [sp, #40]
   293d4:	bl	28f00 <__sanitizer_set_report_fd@@Base+0x9d08>
   293d8:	ldr	x30, [sp], #64
   293dc:	ret
   293e0:	str	x30, [sp, #-64]!
   293e4:	str	x0, [sp, #40]
   293e8:	str	x1, [sp, #32]
   293ec:	str	w2, [sp, #28]
   293f0:	str	w3, [sp, #24]
   293f4:	str	x4, [sp, #16]
   293f8:	ldr	x0, [sp, #16]
   293fc:	cmp	x0, #0x0
   29400:	b.ne	29410 <__sanitizer_set_report_fd@@Base+0xa218>  // b.any
   29404:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   29408:	add	x0, x0, #0x6b0
   2940c:	str	x0, [sp, #16]
   29410:	str	wzr, [sp, #60]
   29414:	ldr	x0, [sp, #16]
   29418:	ldrb	w0, [x0]
   2941c:	cmp	w0, #0x0
   29420:	b.eq	2947c <__sanitizer_set_report_fd@@Base+0xa284>  // b.none
   29424:	ldr	w0, [sp, #24]
   29428:	cmp	w0, #0x0
   2942c:	b.lt	29440 <__sanitizer_set_report_fd@@Base+0xa248>  // b.tstop
   29430:	ldr	w1, [sp, #60]
   29434:	ldr	w0, [sp, #24]
   29438:	cmp	w1, w0
   2943c:	b.ge	29478 <__sanitizer_set_report_fd@@Base+0xa280>  // b.tcont
   29440:	ldr	x0, [sp, #16]
   29444:	ldrb	w0, [x0]
   29448:	mov	w2, w0
   2944c:	ldr	x1, [sp, #32]
   29450:	ldr	x0, [sp, #40]
   29454:	bl	28eac <__sanitizer_set_report_fd@@Base+0x9cb4>
   29458:	mov	w1, w0
   2945c:	ldr	w0, [sp, #60]
   29460:	add	w0, w0, w1
   29464:	str	w0, [sp, #60]
   29468:	ldr	x0, [sp, #16]
   2946c:	add	x0, x0, #0x1
   29470:	str	x0, [sp, #16]
   29474:	b	29414 <__sanitizer_set_report_fd@@Base+0xa21c>
   29478:	nop
   2947c:	ldr	w0, [sp, #60]
   29480:	neg	w0, w0
   29484:	ldr	w1, [sp, #28]
   29488:	cmp	w1, w0
   2948c:	b.ge	294b4 <__sanitizer_set_report_fd@@Base+0xa2bc>  // b.tcont
   29490:	mov	w2, #0x20                  	// #32
   29494:	ldr	x1, [sp, #32]
   29498:	ldr	x0, [sp, #40]
   2949c:	bl	28eac <__sanitizer_set_report_fd@@Base+0x9cb4>
   294a0:	mov	w1, w0
   294a4:	ldr	w0, [sp, #60]
   294a8:	add	w0, w0, w1
   294ac:	str	w0, [sp, #60]
   294b0:	b	2947c <__sanitizer_set_report_fd@@Base+0xa284>
   294b4:	ldr	w0, [sp, #60]
   294b8:	ldr	x30, [sp], #64
   294bc:	ret
   294c0:	str	x30, [sp, #-64]!
   294c4:	str	x0, [sp, #40]
   294c8:	str	x1, [sp, #32]
   294cc:	str	x2, [sp, #24]
   294d0:	str	wzr, [sp, #60]
   294d4:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   294d8:	add	x4, x0, #0x6b8
   294dc:	mov	w3, #0xffffffff            	// #-1
   294e0:	mov	w2, #0x0                   	// #0
   294e4:	ldr	x1, [sp, #32]
   294e8:	ldr	x0, [sp, #40]
   294ec:	bl	293e0 <__sanitizer_set_report_fd@@Base+0xa1e8>
   294f0:	mov	w1, w0
   294f4:	ldr	w0, [sp, #60]
   294f8:	add	w0, w0, w1
   294fc:	str	w0, [sp, #60]
   29500:	mov	w6, #0x0                   	// #0
   29504:	mov	w5, #0x1                   	// #1
   29508:	mov	w4, #0xc                   	// #12
   2950c:	mov	w3, #0x10                  	// #16
   29510:	ldr	x2, [sp, #24]
   29514:	ldr	x1, [sp, #32]
   29518:	ldr	x0, [sp, #40]
   2951c:	bl	29328 <__sanitizer_set_report_fd@@Base+0xa130>
   29520:	mov	w1, w0
   29524:	ldr	w0, [sp, #60]
   29528:	add	w0, w0, w1
   2952c:	str	w0, [sp, #60]
   29530:	ldr	w0, [sp, #60]
   29534:	ldr	x30, [sp], #64
   29538:	ret
   2953c:	stp	x19, x30, [sp, #-144]!
   29540:	str	x0, [sp, #40]
   29544:	str	w1, [sp, #36]
   29548:	str	x2, [sp, #24]
   2954c:	mov	x19, x3
   29550:	ldr	x0, [sp, #24]
   29554:	cmp	x0, #0x0
   29558:	cset	w0, eq  // eq = none
   2955c:	and	w0, w0, #0xff
   29560:	and	x0, x0, #0xff
   29564:	cmp	x0, #0x0
   29568:	b.eq	2957c <__sanitizer_set_report_fd@@Base+0xa384>  // b.none
   2956c:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   29570:	add	x0, x0, #0x718
   29574:	bl	1e860 <__sanitizer_cov_pcs_init@@Base+0x37c4>
   29578:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   2957c:	ldr	w0, [sp, #36]
   29580:	cmp	w0, #0x0
   29584:	cset	w0, le
   29588:	and	w0, w0, #0xff
   2958c:	and	x0, x0, #0xff
   29590:	cmp	x0, #0x0
   29594:	b.eq	295a8 <__sanitizer_set_report_fd@@Base+0xa3b0>  // b.none
   29598:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2959c:	add	x0, x0, #0x720
   295a0:	bl	1e860 <__sanitizer_cov_pcs_init@@Base+0x37c4>
   295a4:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   295a8:	ldr	x1, [sp, #40]
   295ac:	ldrsw	x0, [sp, #36]
   295b0:	sub	x0, x0, #0x1
   295b4:	add	x0, x1, x0
   295b8:	str	x0, [sp, #112]
   295bc:	ldr	x0, [sp, #24]
   295c0:	str	x0, [sp, #136]
   295c4:	str	wzr, [sp, #132]
   295c8:	ldr	x0, [sp, #136]
   295cc:	ldrb	w0, [x0]
   295d0:	cmp	w0, #0x0
   295d4:	b.eq	29f34 <__sanitizer_set_report_fd@@Base+0xad3c>  // b.none
   295d8:	ldr	x0, [sp, #136]
   295dc:	ldrb	w0, [x0]
   295e0:	cmp	w0, #0x25
   295e4:	b.eq	29614 <__sanitizer_set_report_fd@@Base+0xa41c>  // b.none
   295e8:	ldr	x0, [sp, #136]
   295ec:	ldrb	w1, [x0]
   295f0:	add	x0, sp, #0x28
   295f4:	mov	w2, w1
   295f8:	ldr	x1, [sp, #112]
   295fc:	bl	28eac <__sanitizer_set_report_fd@@Base+0x9cb4>
   29600:	mov	w1, w0
   29604:	ldr	w0, [sp, #132]
   29608:	add	w0, w0, w1
   2960c:	str	w0, [sp, #132]
   29610:	b	29f24 <__sanitizer_set_report_fd@@Base+0xad2c>
   29614:	ldr	x0, [sp, #136]
   29618:	add	x0, x0, #0x1
   2961c:	str	x0, [sp, #136]
   29620:	ldr	x0, [sp, #136]
   29624:	ldrb	w0, [x0]
   29628:	cmp	w0, #0x2d
   2962c:	cset	w0, eq  // eq = none
   29630:	strb	w0, [sp, #111]
   29634:	ldrb	w0, [sp, #111]
   29638:	cmp	w0, #0x0
   2963c:	b.eq	2964c <__sanitizer_set_report_fd@@Base+0xa454>  // b.none
   29640:	ldr	x0, [sp, #136]
   29644:	add	x0, x0, #0x1
   29648:	str	x0, [sp, #136]
   2964c:	ldr	x0, [sp, #136]
   29650:	ldrb	w0, [x0]
   29654:	cmp	w0, #0x2f
   29658:	b.ls	29674 <__sanitizer_set_report_fd@@Base+0xa47c>  // b.plast
   2965c:	ldr	x0, [sp, #136]
   29660:	ldrb	w0, [x0]
   29664:	cmp	w0, #0x39
   29668:	b.hi	29674 <__sanitizer_set_report_fd@@Base+0xa47c>  // b.pmore
   2966c:	mov	w0, #0x1                   	// #1
   29670:	b	29678 <__sanitizer_set_report_fd@@Base+0xa480>
   29674:	mov	w0, #0x0                   	// #0
   29678:	strb	w0, [sp, #110]
   2967c:	ldr	x0, [sp, #136]
   29680:	ldrb	w0, [x0]
   29684:	cmp	w0, #0x30
   29688:	cset	w0, eq  // eq = none
   2968c:	strb	w0, [sp, #109]
   29690:	str	wzr, [sp, #128]
   29694:	ldrb	w0, [sp, #110]
   29698:	cmp	w0, #0x0
   2969c:	b.eq	296f8 <__sanitizer_set_report_fd@@Base+0xa500>  // b.none
   296a0:	ldr	x0, [sp, #136]
   296a4:	ldrb	w0, [x0]
   296a8:	cmp	w0, #0x2f
   296ac:	b.ls	296f8 <__sanitizer_set_report_fd@@Base+0xa500>  // b.plast
   296b0:	ldr	x0, [sp, #136]
   296b4:	ldrb	w0, [x0]
   296b8:	cmp	w0, #0x39
   296bc:	b.hi	296f8 <__sanitizer_set_report_fd@@Base+0xa500>  // b.pmore
   296c0:	ldr	w1, [sp, #128]
   296c4:	mov	w0, w1
   296c8:	lsl	w0, w0, #2
   296cc:	add	w0, w0, w1
   296d0:	lsl	w0, w0, #1
   296d4:	mov	w2, w0
   296d8:	ldr	x0, [sp, #136]
   296dc:	add	x1, x0, #0x1
   296e0:	str	x1, [sp, #136]
   296e4:	ldrb	w0, [x0]
   296e8:	add	w0, w2, w0
   296ec:	sub	w0, w0, #0x30
   296f0:	str	w0, [sp, #128]
   296f4:	b	296a0 <__sanitizer_set_report_fd@@Base+0xa4a8>
   296f8:	ldr	x0, [sp, #136]
   296fc:	ldrb	w0, [x0]
   29700:	cmp	w0, #0x2e
   29704:	b.ne	29724 <__sanitizer_set_report_fd@@Base+0xa52c>  // b.any
   29708:	ldr	x0, [sp, #136]
   2970c:	add	x0, x0, #0x1
   29710:	ldrb	w0, [x0]
   29714:	cmp	w0, #0x2a
   29718:	b.ne	29724 <__sanitizer_set_report_fd@@Base+0xa52c>  // b.any
   2971c:	mov	w0, #0x1                   	// #1
   29720:	b	29728 <__sanitizer_set_report_fd@@Base+0xa530>
   29724:	mov	w0, #0x0                   	// #0
   29728:	strb	w0, [sp, #108]
   2972c:	mov	w0, #0xffffffff            	// #-1
   29730:	str	w0, [sp, #124]
   29734:	ldrb	w0, [sp, #108]
   29738:	cmp	w0, #0x0
   2973c:	b.eq	297a4 <__sanitizer_set_report_fd@@Base+0xa5ac>  // b.none
   29740:	ldr	x0, [sp, #136]
   29744:	add	x0, x0, #0x2
   29748:	str	x0, [sp, #136]
   2974c:	ldr	w1, [x19, #24]
   29750:	ldr	x0, [x19]
   29754:	cmp	w1, #0x0
   29758:	b.lt	2976c <__sanitizer_set_report_fd@@Base+0xa574>  // b.tstop
   2975c:	add	x1, x0, #0xb
   29760:	and	x1, x1, #0xfffffffffffffff8
   29764:	str	x1, [x19]
   29768:	b	2979c <__sanitizer_set_report_fd@@Base+0xa5a4>
   2976c:	add	w2, w1, #0x8
   29770:	str	w2, [x19, #24]
   29774:	ldr	w2, [x19, #24]
   29778:	cmp	w2, #0x0
   2977c:	b.le	29790 <__sanitizer_set_report_fd@@Base+0xa598>
   29780:	add	x1, x0, #0xb
   29784:	and	x1, x1, #0xfffffffffffffff8
   29788:	str	x1, [x19]
   2978c:	b	2979c <__sanitizer_set_report_fd@@Base+0xa5a4>
   29790:	ldr	x2, [x19, #8]
   29794:	sxtw	x0, w1
   29798:	add	x0, x2, x0
   2979c:	ldr	w0, [x0]
   297a0:	str	w0, [sp, #124]
   297a4:	ldr	x0, [sp, #136]
   297a8:	ldrb	w0, [x0]
   297ac:	cmp	w0, #0x7a
   297b0:	cset	w0, eq  // eq = none
   297b4:	strb	w0, [sp, #107]
   297b8:	ldrb	w0, [sp, #107]
   297bc:	ldr	x1, [sp, #136]
   297c0:	add	x0, x1, x0
   297c4:	str	x0, [sp, #136]
   297c8:	ldrb	w0, [sp, #107]
   297cc:	eor	w0, w0, #0x1
   297d0:	and	w0, w0, #0xff
   297d4:	cmp	w0, #0x0
   297d8:	b.eq	29808 <__sanitizer_set_report_fd@@Base+0xa610>  // b.none
   297dc:	ldr	x0, [sp, #136]
   297e0:	ldrb	w0, [x0]
   297e4:	cmp	w0, #0x6c
   297e8:	b.ne	29808 <__sanitizer_set_report_fd@@Base+0xa610>  // b.any
   297ec:	ldr	x0, [sp, #136]
   297f0:	add	x0, x0, #0x1
   297f4:	ldrb	w0, [x0]
   297f8:	cmp	w0, #0x6c
   297fc:	b.ne	29808 <__sanitizer_set_report_fd@@Base+0xa610>  // b.any
   29800:	mov	w0, #0x1                   	// #1
   29804:	b	2980c <__sanitizer_set_report_fd@@Base+0xa614>
   29808:	mov	w0, #0x0                   	// #0
   2980c:	strb	w0, [sp, #106]
   29810:	ldrb	w0, [sp, #106]
   29814:	lsl	w0, w0, #1
   29818:	sxtw	x0, w0
   2981c:	ldr	x1, [sp, #136]
   29820:	add	x0, x1, x0
   29824:	str	x0, [sp, #136]
   29828:	ldrb	w0, [sp, #107]
   2982c:	cmp	w0, #0x0
   29830:	b.ne	29840 <__sanitizer_set_report_fd@@Base+0xa648>  // b.any
   29834:	ldrb	w0, [sp, #106]
   29838:	cmp	w0, #0x0
   2983c:	b.eq	29848 <__sanitizer_set_report_fd@@Base+0xa650>  // b.none
   29840:	mov	w0, #0x1                   	// #1
   29844:	b	2984c <__sanitizer_set_report_fd@@Base+0xa654>
   29848:	mov	w0, #0x0                   	// #0
   2984c:	strb	w0, [sp, #105]
   29850:	ldrb	w0, [sp, #110]
   29854:	cmp	w0, #0x0
   29858:	b.ne	29868 <__sanitizer_set_report_fd@@Base+0xa670>  // b.any
   2985c:	ldrb	w0, [sp, #105]
   29860:	cmp	w0, #0x0
   29864:	b.eq	29870 <__sanitizer_set_report_fd@@Base+0xa678>  // b.none
   29868:	mov	w0, #0x1                   	// #1
   2986c:	b	29874 <__sanitizer_set_report_fd@@Base+0xa67c>
   29870:	mov	w0, #0x0                   	// #0
   29874:	strb	w0, [sp, #104]
   29878:	ldr	w0, [sp, #124]
   2987c:	cmp	w0, #0x0
   29880:	b.ge	29898 <__sanitizer_set_report_fd@@Base+0xa6a0>  // b.tcont
   29884:	ldrb	w0, [sp, #111]
   29888:	eor	w0, w0, #0x1
   2988c:	and	w0, w0, #0xff
   29890:	cmp	w0, #0x0
   29894:	b.ne	298a8 <__sanitizer_set_report_fd@@Base+0xa6b0>  // b.any
   29898:	ldr	x0, [sp, #136]
   2989c:	ldrb	w0, [x0]
   298a0:	cmp	w0, #0x73
   298a4:	b.ne	298b0 <__sanitizer_set_report_fd@@Base+0xa6b8>  // b.any
   298a8:	mov	w0, #0x1                   	// #1
   298ac:	b	298b4 <__sanitizer_set_report_fd@@Base+0xa6bc>
   298b0:	mov	w0, #0x0                   	// #0
   298b4:	and	x0, x0, #0xff
   298b8:	str	x0, [sp, #96]
   298bc:	str	xzr, [sp, #88]
   298c0:	ldr	x1, [sp, #96]
   298c4:	ldr	x0, [sp, #88]
   298c8:	cmp	x1, x0
   298cc:	cset	w0, eq  // eq = none
   298d0:	and	w0, w0, #0xff
   298d4:	and	x0, x0, #0xff
   298d8:	cmp	x0, #0x0
   298dc:	b.eq	29900 <__sanitizer_set_report_fd@@Base+0xa708>  // b.none
   298e0:	ldr	x4, [sp, #88]
   298e4:	ldr	x3, [sp, #96]
   298e8:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   298ec:	add	x2, x0, #0x730
   298f0:	mov	w1, #0xa9                  	// #169
   298f4:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   298f8:	add	x0, x0, #0x770
   298fc:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   29900:	ldr	x0, [sp, #136]
   29904:	ldrb	w0, [x0]
   29908:	cmp	w0, #0x78
   2990c:	b.eq	29ad4 <__sanitizer_set_report_fd@@Base+0xa8dc>  // b.none
   29910:	cmp	w0, #0x78
   29914:	b.gt	29f10 <__sanitizer_set_report_fd@@Base+0xad18>
   29918:	cmp	w0, #0x75
   2991c:	b.eq	29ad4 <__sanitizer_set_report_fd@@Base+0xa8dc>  // b.none
   29920:	cmp	w0, #0x75
   29924:	b.gt	29f10 <__sanitizer_set_report_fd@@Base+0xad18>
   29928:	cmp	w0, #0x73
   2992c:	b.eq	29d00 <__sanitizer_set_report_fd@@Base+0xab08>  // b.none
   29930:	cmp	w0, #0x73
   29934:	b.gt	29f10 <__sanitizer_set_report_fd@@Base+0xad18>
   29938:	cmp	w0, #0x70
   2993c:	b.eq	29c68 <__sanitizer_set_report_fd@@Base+0xaa70>  // b.none
   29940:	cmp	w0, #0x70
   29944:	b.gt	29f10 <__sanitizer_set_report_fd@@Base+0xad18>
   29948:	cmp	w0, #0x64
   2994c:	b.eq	2997c <__sanitizer_set_report_fd@@Base+0xa784>  // b.none
   29950:	cmp	w0, #0x64
   29954:	b.gt	29f10 <__sanitizer_set_report_fd@@Base+0xad18>
   29958:	cmp	w0, #0x63
   2995c:	b.eq	29e30 <__sanitizer_set_report_fd@@Base+0xac38>  // b.none
   29960:	cmp	w0, #0x63
   29964:	b.gt	29f10 <__sanitizer_set_report_fd@@Base+0xad18>
   29968:	cmp	w0, #0x25
   2996c:	b.eq	29ecc <__sanitizer_set_report_fd@@Base+0xacd4>  // b.none
   29970:	cmp	w0, #0x58
   29974:	b.eq	29ad4 <__sanitizer_set_report_fd@@Base+0xa8dc>  // b.none
   29978:	b	29f10 <__sanitizer_set_report_fd@@Base+0xad18>
   2997c:	ldrb	w0, [sp, #106]
   29980:	cmp	w0, #0x0
   29984:	b.eq	299e0 <__sanitizer_set_report_fd@@Base+0xa7e8>  // b.none
   29988:	ldr	w1, [x19, #24]
   2998c:	ldr	x0, [x19]
   29990:	cmp	w1, #0x0
   29994:	b.lt	299a8 <__sanitizer_set_report_fd@@Base+0xa7b0>  // b.tstop
   29998:	add	x1, x0, #0xf
   2999c:	and	x1, x1, #0xfffffffffffffff8
   299a0:	str	x1, [x19]
   299a4:	b	299d8 <__sanitizer_set_report_fd@@Base+0xa7e0>
   299a8:	add	w2, w1, #0x8
   299ac:	str	w2, [x19, #24]
   299b0:	ldr	w2, [x19, #24]
   299b4:	cmp	w2, #0x0
   299b8:	b.le	299cc <__sanitizer_set_report_fd@@Base+0xa7d4>
   299bc:	add	x1, x0, #0xf
   299c0:	and	x1, x1, #0xfffffffffffffff8
   299c4:	str	x1, [x19]
   299c8:	b	299d8 <__sanitizer_set_report_fd@@Base+0xa7e0>
   299cc:	ldr	x2, [x19, #8]
   299d0:	sxtw	x0, w1
   299d4:	add	x0, x2, x0
   299d8:	ldr	x0, [x0]
   299dc:	b	29a9c <__sanitizer_set_report_fd@@Base+0xa8a4>
   299e0:	ldrb	w0, [sp, #107]
   299e4:	cmp	w0, #0x0
   299e8:	b.eq	29a44 <__sanitizer_set_report_fd@@Base+0xa84c>  // b.none
   299ec:	ldr	w1, [x19, #24]
   299f0:	ldr	x0, [x19]
   299f4:	cmp	w1, #0x0
   299f8:	b.lt	29a0c <__sanitizer_set_report_fd@@Base+0xa814>  // b.tstop
   299fc:	add	x1, x0, #0xf
   29a00:	and	x1, x1, #0xfffffffffffffff8
   29a04:	str	x1, [x19]
   29a08:	b	29a3c <__sanitizer_set_report_fd@@Base+0xa844>
   29a0c:	add	w2, w1, #0x8
   29a10:	str	w2, [x19, #24]
   29a14:	ldr	w2, [x19, #24]
   29a18:	cmp	w2, #0x0
   29a1c:	b.le	29a30 <__sanitizer_set_report_fd@@Base+0xa838>
   29a20:	add	x1, x0, #0xf
   29a24:	and	x1, x1, #0xfffffffffffffff8
   29a28:	str	x1, [x19]
   29a2c:	b	29a3c <__sanitizer_set_report_fd@@Base+0xa844>
   29a30:	ldr	x2, [x19, #8]
   29a34:	sxtw	x0, w1
   29a38:	add	x0, x2, x0
   29a3c:	ldr	x0, [x0]
   29a40:	b	29a9c <__sanitizer_set_report_fd@@Base+0xa8a4>
   29a44:	ldr	w1, [x19, #24]
   29a48:	ldr	x0, [x19]
   29a4c:	cmp	w1, #0x0
   29a50:	b.lt	29a64 <__sanitizer_set_report_fd@@Base+0xa86c>  // b.tstop
   29a54:	add	x1, x0, #0xb
   29a58:	and	x1, x1, #0xfffffffffffffff8
   29a5c:	str	x1, [x19]
   29a60:	b	29a94 <__sanitizer_set_report_fd@@Base+0xa89c>
   29a64:	add	w2, w1, #0x8
   29a68:	str	w2, [x19, #24]
   29a6c:	ldr	w2, [x19, #24]
   29a70:	cmp	w2, #0x0
   29a74:	b.le	29a88 <__sanitizer_set_report_fd@@Base+0xa890>
   29a78:	add	x1, x0, #0xb
   29a7c:	and	x1, x1, #0xfffffffffffffff8
   29a80:	str	x1, [x19]
   29a84:	b	29a94 <__sanitizer_set_report_fd@@Base+0xa89c>
   29a88:	ldr	x2, [x19, #8]
   29a8c:	sxtw	x0, w1
   29a90:	add	x0, x2, x0
   29a94:	ldr	w0, [x0]
   29a98:	sxtw	x0, w0
   29a9c:	str	x0, [sp, #64]
   29aa0:	ldr	w0, [sp, #128]
   29aa4:	and	w1, w0, #0xff
   29aa8:	add	x0, sp, #0x28
   29aac:	ldrb	w4, [sp, #109]
   29ab0:	mov	w3, w1
   29ab4:	ldr	x2, [sp, #64]
   29ab8:	ldr	x1, [sp, #112]
   29abc:	bl	29374 <__sanitizer_set_report_fd@@Base+0xa17c>
   29ac0:	mov	w1, w0
   29ac4:	ldr	w0, [sp, #132]
   29ac8:	add	w0, w0, w1
   29acc:	str	w0, [sp, #132]
   29ad0:	b	29f24 <__sanitizer_set_report_fd@@Base+0xad2c>
   29ad4:	ldrb	w0, [sp, #106]
   29ad8:	cmp	w0, #0x0
   29adc:	b.eq	29b38 <__sanitizer_set_report_fd@@Base+0xa940>  // b.none
   29ae0:	ldr	w1, [x19, #24]
   29ae4:	ldr	x0, [x19]
   29ae8:	cmp	w1, #0x0
   29aec:	b.lt	29b00 <__sanitizer_set_report_fd@@Base+0xa908>  // b.tstop
   29af0:	add	x1, x0, #0xf
   29af4:	and	x1, x1, #0xfffffffffffffff8
   29af8:	str	x1, [x19]
   29afc:	b	29b30 <__sanitizer_set_report_fd@@Base+0xa938>
   29b00:	add	w2, w1, #0x8
   29b04:	str	w2, [x19, #24]
   29b08:	ldr	w2, [x19, #24]
   29b0c:	cmp	w2, #0x0
   29b10:	b.le	29b24 <__sanitizer_set_report_fd@@Base+0xa92c>
   29b14:	add	x1, x0, #0xf
   29b18:	and	x1, x1, #0xfffffffffffffff8
   29b1c:	str	x1, [x19]
   29b20:	b	29b30 <__sanitizer_set_report_fd@@Base+0xa938>
   29b24:	ldr	x2, [x19, #8]
   29b28:	sxtw	x0, w1
   29b2c:	add	x0, x2, x0
   29b30:	ldr	x0, [x0]
   29b34:	b	29bf4 <__sanitizer_set_report_fd@@Base+0xa9fc>
   29b38:	ldrb	w0, [sp, #107]
   29b3c:	cmp	w0, #0x0
   29b40:	b.eq	29b9c <__sanitizer_set_report_fd@@Base+0xa9a4>  // b.none
   29b44:	ldr	w1, [x19, #24]
   29b48:	ldr	x0, [x19]
   29b4c:	cmp	w1, #0x0
   29b50:	b.lt	29b64 <__sanitizer_set_report_fd@@Base+0xa96c>  // b.tstop
   29b54:	add	x1, x0, #0xf
   29b58:	and	x1, x1, #0xfffffffffffffff8
   29b5c:	str	x1, [x19]
   29b60:	b	29b94 <__sanitizer_set_report_fd@@Base+0xa99c>
   29b64:	add	w2, w1, #0x8
   29b68:	str	w2, [x19, #24]
   29b6c:	ldr	w2, [x19, #24]
   29b70:	cmp	w2, #0x0
   29b74:	b.le	29b88 <__sanitizer_set_report_fd@@Base+0xa990>
   29b78:	add	x1, x0, #0xf
   29b7c:	and	x1, x1, #0xfffffffffffffff8
   29b80:	str	x1, [x19]
   29b84:	b	29b94 <__sanitizer_set_report_fd@@Base+0xa99c>
   29b88:	ldr	x2, [x19, #8]
   29b8c:	sxtw	x0, w1
   29b90:	add	x0, x2, x0
   29b94:	ldr	x0, [x0]
   29b98:	b	29bf4 <__sanitizer_set_report_fd@@Base+0xa9fc>
   29b9c:	ldr	w1, [x19, #24]
   29ba0:	ldr	x0, [x19]
   29ba4:	cmp	w1, #0x0
   29ba8:	b.lt	29bbc <__sanitizer_set_report_fd@@Base+0xa9c4>  // b.tstop
   29bac:	add	x1, x0, #0xb
   29bb0:	and	x1, x1, #0xfffffffffffffff8
   29bb4:	str	x1, [x19]
   29bb8:	b	29bec <__sanitizer_set_report_fd@@Base+0xa9f4>
   29bbc:	add	w2, w1, #0x8
   29bc0:	str	w2, [x19, #24]
   29bc4:	ldr	w2, [x19, #24]
   29bc8:	cmp	w2, #0x0
   29bcc:	b.le	29be0 <__sanitizer_set_report_fd@@Base+0xa9e8>
   29bd0:	add	x1, x0, #0xb
   29bd4:	and	x1, x1, #0xfffffffffffffff8
   29bd8:	str	x1, [x19]
   29bdc:	b	29bec <__sanitizer_set_report_fd@@Base+0xa9f4>
   29be0:	ldr	x2, [x19, #8]
   29be4:	sxtw	x0, w1
   29be8:	add	x0, x2, x0
   29bec:	ldr	w0, [x0]
   29bf0:	mov	w0, w0
   29bf4:	str	x0, [sp, #56]
   29bf8:	ldr	x0, [sp, #136]
   29bfc:	ldrb	w0, [x0]
   29c00:	cmp	w0, #0x58
   29c04:	cset	w0, eq  // eq = none
   29c08:	strb	w0, [sp, #55]
   29c0c:	ldr	x0, [sp, #136]
   29c10:	ldrb	w0, [x0]
   29c14:	cmp	w0, #0x75
   29c18:	b.ne	29c24 <__sanitizer_set_report_fd@@Base+0xaa2c>  // b.any
   29c1c:	mov	w0, #0xa                   	// #10
   29c20:	b	29c28 <__sanitizer_set_report_fd@@Base+0xaa30>
   29c24:	mov	w0, #0x10                  	// #16
   29c28:	ldr	w1, [sp, #128]
   29c2c:	and	w1, w1, #0xff
   29c30:	add	x7, sp, #0x28
   29c34:	ldrb	w6, [sp, #55]
   29c38:	ldrb	w5, [sp, #109]
   29c3c:	mov	w4, w1
   29c40:	mov	w3, w0
   29c44:	ldr	x2, [sp, #56]
   29c48:	ldr	x1, [sp, #112]
   29c4c:	mov	x0, x7
   29c50:	bl	29328 <__sanitizer_set_report_fd@@Base+0xa130>
   29c54:	mov	w1, w0
   29c58:	ldr	w0, [sp, #132]
   29c5c:	add	w0, w0, w1
   29c60:	str	w0, [sp, #132]
   29c64:	b	29f24 <__sanitizer_set_report_fd@@Base+0xad2c>
   29c68:	ldrb	w0, [sp, #104]
   29c6c:	cmp	x0, #0x0
   29c70:	b.eq	29c88 <__sanitizer_set_report_fd@@Base+0xaa90>  // b.none
   29c74:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
   29c78:	add	x0, x0, #0xc70
   29c7c:	ldr	x0, [x0]
   29c80:	bl	1e860 <__sanitizer_cov_pcs_init@@Base+0x37c4>
   29c84:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   29c88:	ldr	w1, [x19, #24]
   29c8c:	ldr	x0, [x19]
   29c90:	cmp	w1, #0x0
   29c94:	b.lt	29ca8 <__sanitizer_set_report_fd@@Base+0xaab0>  // b.tstop
   29c98:	add	x1, x0, #0xf
   29c9c:	and	x1, x1, #0xfffffffffffffff8
   29ca0:	str	x1, [x19]
   29ca4:	b	29cd8 <__sanitizer_set_report_fd@@Base+0xaae0>
   29ca8:	add	w2, w1, #0x8
   29cac:	str	w2, [x19, #24]
   29cb0:	ldr	w2, [x19, #24]
   29cb4:	cmp	w2, #0x0
   29cb8:	b.le	29ccc <__sanitizer_set_report_fd@@Base+0xaad4>
   29cbc:	add	x1, x0, #0xf
   29cc0:	and	x1, x1, #0xfffffffffffffff8
   29cc4:	str	x1, [x19]
   29cc8:	b	29cd8 <__sanitizer_set_report_fd@@Base+0xaae0>
   29ccc:	ldr	x2, [x19, #8]
   29cd0:	sxtw	x0, w1
   29cd4:	add	x0, x2, x0
   29cd8:	ldr	x1, [x0]
   29cdc:	add	x0, sp, #0x28
   29ce0:	mov	x2, x1
   29ce4:	ldr	x1, [sp, #112]
   29ce8:	bl	294c0 <__sanitizer_set_report_fd@@Base+0xa2c8>
   29cec:	mov	w1, w0
   29cf0:	ldr	w0, [sp, #132]
   29cf4:	add	w0, w0, w1
   29cf8:	str	w0, [sp, #132]
   29cfc:	b	29f24 <__sanitizer_set_report_fd@@Base+0xad2c>
   29d00:	ldrb	w0, [sp, #105]
   29d04:	cmp	x0, #0x0
   29d08:	b.eq	29d20 <__sanitizer_set_report_fd@@Base+0xab28>  // b.none
   29d0c:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
   29d10:	add	x0, x0, #0xc70
   29d14:	ldr	x0, [x0]
   29d18:	bl	1e860 <__sanitizer_cov_pcs_init@@Base+0x37c4>
   29d1c:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   29d20:	ldrb	w0, [sp, #110]
   29d24:	eor	w0, w0, #0x1
   29d28:	and	w0, w0, #0xff
   29d2c:	cmp	w0, #0x0
   29d30:	b.ne	29d40 <__sanitizer_set_report_fd@@Base+0xab48>  // b.any
   29d34:	ldrb	w0, [sp, #111]
   29d38:	cmp	w0, #0x0
   29d3c:	b.eq	29d48 <__sanitizer_set_report_fd@@Base+0xab50>  // b.none
   29d40:	mov	w0, #0x1                   	// #1
   29d44:	b	29d4c <__sanitizer_set_report_fd@@Base+0xab54>
   29d48:	mov	w0, #0x0                   	// #0
   29d4c:	and	x0, x0, #0xff
   29d50:	str	x0, [sp, #80]
   29d54:	str	xzr, [sp, #72]
   29d58:	ldr	x1, [sp, #80]
   29d5c:	ldr	x0, [sp, #72]
   29d60:	cmp	x1, x0
   29d64:	cset	w0, eq  // eq = none
   29d68:	and	w0, w0, #0xff
   29d6c:	and	x0, x0, #0xff
   29d70:	cmp	x0, #0x0
   29d74:	b.eq	29d98 <__sanitizer_set_report_fd@@Base+0xaba0>  // b.none
   29d78:	ldr	x4, [sp, #72]
   29d7c:	ldr	x3, [sp, #80]
   29d80:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   29d84:	add	x2, x0, #0x7b0
   29d88:	mov	w1, #0xc6                  	// #198
   29d8c:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   29d90:	add	x0, x0, #0x770
   29d94:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   29d98:	ldrb	w0, [sp, #111]
   29d9c:	cmp	w0, #0x0
   29da0:	b.eq	29db0 <__sanitizer_set_report_fd@@Base+0xabb8>  // b.none
   29da4:	ldr	w0, [sp, #128]
   29da8:	neg	w2, w0
   29dac:	b	29db4 <__sanitizer_set_report_fd@@Base+0xabbc>
   29db0:	ldr	w2, [sp, #128]
   29db4:	ldr	w1, [x19, #24]
   29db8:	ldr	x0, [x19]
   29dbc:	cmp	w1, #0x0
   29dc0:	b.lt	29dd4 <__sanitizer_set_report_fd@@Base+0xabdc>  // b.tstop
   29dc4:	add	x1, x0, #0xf
   29dc8:	and	x1, x1, #0xfffffffffffffff8
   29dcc:	str	x1, [x19]
   29dd0:	b	29e04 <__sanitizer_set_report_fd@@Base+0xac0c>
   29dd4:	add	w3, w1, #0x8
   29dd8:	str	w3, [x19, #24]
   29ddc:	ldr	w3, [x19, #24]
   29de0:	cmp	w3, #0x0
   29de4:	b.le	29df8 <__sanitizer_set_report_fd@@Base+0xac00>
   29de8:	add	x1, x0, #0xf
   29dec:	and	x1, x1, #0xfffffffffffffff8
   29df0:	str	x1, [x19]
   29df4:	b	29e04 <__sanitizer_set_report_fd@@Base+0xac0c>
   29df8:	ldr	x3, [x19, #8]
   29dfc:	sxtw	x0, w1
   29e00:	add	x0, x3, x0
   29e04:	ldr	x1, [x0]
   29e08:	add	x0, sp, #0x28
   29e0c:	mov	x4, x1
   29e10:	ldr	w3, [sp, #124]
   29e14:	ldr	x1, [sp, #112]
   29e18:	bl	293e0 <__sanitizer_set_report_fd@@Base+0xa1e8>
   29e1c:	mov	w1, w0
   29e20:	ldr	w0, [sp, #132]
   29e24:	add	w0, w0, w1
   29e28:	str	w0, [sp, #132]
   29e2c:	b	29f24 <__sanitizer_set_report_fd@@Base+0xad2c>
   29e30:	ldrb	w0, [sp, #104]
   29e34:	cmp	x0, #0x0
   29e38:	b.eq	29e50 <__sanitizer_set_report_fd@@Base+0xac58>  // b.none
   29e3c:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
   29e40:	add	x0, x0, #0xc70
   29e44:	ldr	x0, [x0]
   29e48:	bl	1e860 <__sanitizer_cov_pcs_init@@Base+0x37c4>
   29e4c:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   29e50:	ldr	w1, [x19, #24]
   29e54:	ldr	x0, [x19]
   29e58:	cmp	w1, #0x0
   29e5c:	b.lt	29e70 <__sanitizer_set_report_fd@@Base+0xac78>  // b.tstop
   29e60:	add	x1, x0, #0xb
   29e64:	and	x1, x1, #0xfffffffffffffff8
   29e68:	str	x1, [x19]
   29e6c:	b	29ea0 <__sanitizer_set_report_fd@@Base+0xaca8>
   29e70:	add	w2, w1, #0x8
   29e74:	str	w2, [x19, #24]
   29e78:	ldr	w2, [x19, #24]
   29e7c:	cmp	w2, #0x0
   29e80:	b.le	29e94 <__sanitizer_set_report_fd@@Base+0xac9c>
   29e84:	add	x1, x0, #0xb
   29e88:	and	x1, x1, #0xfffffffffffffff8
   29e8c:	str	x1, [x19]
   29e90:	b	29ea0 <__sanitizer_set_report_fd@@Base+0xaca8>
   29e94:	ldr	x2, [x19, #8]
   29e98:	sxtw	x0, w1
   29e9c:	add	x0, x2, x0
   29ea0:	ldr	w0, [x0]
   29ea4:	and	w1, w0, #0xff
   29ea8:	add	x0, sp, #0x28
   29eac:	mov	w2, w1
   29eb0:	ldr	x1, [sp, #112]
   29eb4:	bl	28eac <__sanitizer_set_report_fd@@Base+0x9cb4>
   29eb8:	mov	w1, w0
   29ebc:	ldr	w0, [sp, #132]
   29ec0:	add	w0, w0, w1
   29ec4:	str	w0, [sp, #132]
   29ec8:	b	29f24 <__sanitizer_set_report_fd@@Base+0xad2c>
   29ecc:	ldrb	w0, [sp, #104]
   29ed0:	cmp	x0, #0x0
   29ed4:	b.eq	29eec <__sanitizer_set_report_fd@@Base+0xacf4>  // b.none
   29ed8:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
   29edc:	add	x0, x0, #0xc70
   29ee0:	ldr	x0, [x0]
   29ee4:	bl	1e860 <__sanitizer_cov_pcs_init@@Base+0x37c4>
   29ee8:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   29eec:	add	x0, sp, #0x28
   29ef0:	mov	w2, #0x25                  	// #37
   29ef4:	ldr	x1, [sp, #112]
   29ef8:	bl	28eac <__sanitizer_set_report_fd@@Base+0x9cb4>
   29efc:	mov	w1, w0
   29f00:	ldr	w0, [sp, #132]
   29f04:	add	w0, w0, w1
   29f08:	str	w0, [sp, #132]
   29f0c:	b	29f24 <__sanitizer_set_report_fd@@Base+0xad2c>
   29f10:	adrp	x0, 7f000 <__asan_cplus_demangle_builtin_types@@Base+0x2b40>
   29f14:	add	x0, x0, #0xc70
   29f18:	ldr	x0, [x0]
   29f1c:	bl	1e860 <__sanitizer_cov_pcs_init@@Base+0x37c4>
   29f20:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   29f24:	ldr	x0, [sp, #136]
   29f28:	add	x0, x0, #0x1
   29f2c:	str	x0, [sp, #136]
   29f30:	b	295c8 <__sanitizer_set_report_fd@@Base+0xa3d0>
   29f34:	ldr	x0, [sp, #40]
   29f38:	ldr	x1, [sp, #112]
   29f3c:	cmp	x1, x0
   29f40:	cset	w0, cc  // cc = lo, ul, last
   29f44:	and	w0, w0, #0xff
   29f48:	and	x0, x0, #0xff
   29f4c:	cmp	x0, #0x0
   29f50:	b.eq	29f64 <__sanitizer_set_report_fd@@Base+0xad6c>  // b.none
   29f54:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   29f58:	add	x0, x0, #0x7e0
   29f5c:	bl	1e860 <__sanitizer_cov_pcs_init@@Base+0x37c4>
   29f60:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   29f64:	ldr	x0, [sp, #112]
   29f68:	add	x1, x0, #0x1
   29f6c:	add	x0, sp, #0x28
   29f70:	mov	w2, #0x0                   	// #0
   29f74:	bl	28eac <__sanitizer_set_report_fd@@Base+0x9cb4>
   29f78:	ldr	w0, [sp, #132]
   29f7c:	ldp	x19, x30, [sp], #144
   29f80:	ret
   29f84:	sub	sp, sp, #0x10
   29f88:	str	x0, [sp, #8]
   29f8c:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   29f90:	add	x0, x0, #0xc58
   29f94:	ldr	x1, [sp, #8]
   29f98:	str	x1, [x0]
   29f9c:	nop
   29fa0:	add	sp, sp, #0x10
   29fa4:	ret

0000000000029fa8 <OnPrint@@Base>:
   29fa8:	sub	sp, sp, #0x10
   29fac:	str	x0, [sp, #8]
   29fb0:	nop
   29fb4:	add	sp, sp, #0x10
   29fb8:	ret
   29fbc:	str	x30, [sp, #-32]!
   29fc0:	str	x0, [sp, #24]
   29fc4:	ldr	x0, [sp, #24]
   29fc8:	bl	68c0 <OnPrint@plt>
   29fcc:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   29fd0:	add	x0, x0, #0xc58
   29fd4:	ldr	x0, [x0]
   29fd8:	cmp	x0, #0x0
   29fdc:	b.eq	29ff4 <OnPrint@@Base+0x4c>  // b.none
   29fe0:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   29fe4:	add	x0, x0, #0xc58
   29fe8:	ldr	x1, [x0]
   29fec:	ldr	x0, [sp, #24]
   29ff0:	blr	x1
   29ff4:	nop
   29ff8:	ldr	x30, [sp], #32
   29ffc:	ret
   2a000:	stp	x19, x30, [sp, #-160]!
   2a004:	strb	w0, [sp, #79]
   2a008:	str	x1, [sp, #64]
   2a00c:	str	w2, [sp, #72]
   2a010:	str	x3, [sp, #56]
   2a014:	mov	x19, x4
   2a018:	add	x2, sp, #0x58
   2a01c:	mov	x3, x19
   2a020:	ldp	x0, x1, [x3]
   2a024:	stp	x0, x1, [x2]
   2a028:	ldp	x0, x1, [x3, #16]
   2a02c:	stp	x0, x1, [x2, #16]
   2a030:	mov	w0, #0x4000                	// #16384
   2a034:	str	w0, [sp, #136]
   2a038:	ldr	x0, [sp, #64]
   2a03c:	str	x0, [sp, #144]
   2a040:	str	wzr, [sp, #140]
   2a044:	ldr	w0, [sp, #140]
   2a048:	cmp	w0, #0x1
   2a04c:	b.gt	2a2b0 <OnPrint@@Base+0x308>
   2a050:	ldr	w0, [sp, #140]
   2a054:	cmp	w0, #0x0
   2a058:	b.eq	2a094 <OnPrint@@Base+0xec>  // b.none
   2a05c:	mov	x3, x19
   2a060:	add	x2, sp, #0x58
   2a064:	ldp	x0, x1, [x2]
   2a068:	stp	x0, x1, [x3]
   2a06c:	ldp	x0, x1, [x2, #16]
   2a070:	stp	x0, x1, [x3, #16]
   2a074:	mov	w2, #0x0                   	// #0
   2a078:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2a07c:	add	x1, x0, #0x7f8
   2a080:	mov	x0, #0x4000                	// #16384
   2a084:	bl	26a50 <__sanitizer_set_report_fd@@Base+0x7858>
   2a088:	str	x0, [sp, #144]
   2a08c:	mov	w0, #0x4000                	// #16384
   2a090:	str	w0, [sp, #72]
   2a094:	str	wzr, [sp, #156]
   2a098:	ldrb	w0, [sp, #79]
   2a09c:	cmp	w0, #0x0
   2a0a0:	b.eq	2a1e4 <OnPrint@@Base+0x23c>  // b.none
   2a0a4:	bl	23c68 <__sanitizer_set_report_fd@@Base+0x4a70>
   2a0a8:	str	w0, [sp, #132]
   2a0ac:	bl	19b70 <__sancov_default_options@@Base+0x39d4>
   2a0b0:	str	x0, [sp, #120]
   2a0b4:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   2a0b8:	ldrb	w0, [x0, #48]
   2a0bc:	cmp	w0, #0x0
   2a0c0:	b.eq	2a0d8 <OnPrint@@Base+0x130>  // b.none
   2a0c4:	ldr	x0, [sp, #120]
   2a0c8:	cmp	x0, #0x0
   2a0cc:	b.eq	2a0d8 <OnPrint@@Base+0x130>  // b.none
   2a0d0:	mov	w0, #0x1                   	// #1
   2a0d4:	b	2a0dc <OnPrint@@Base+0x134>
   2a0d8:	mov	w0, #0x0                   	// #0
   2a0dc:	cmp	w0, #0x0
   2a0e0:	b.eq	2a158 <OnPrint@@Base+0x1b0>  // b.none
   2a0e4:	ldrsw	x1, [sp, #72]
   2a0e8:	ldr	x3, [sp, #120]
   2a0ec:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2a0f0:	add	x2, x0, #0x800
   2a0f4:	ldr	x0, [sp, #144]
   2a0f8:	bl	2a4a8 <OnPrint@@Base+0x500>
   2a0fc:	mov	w1, w0
   2a100:	ldr	w0, [sp, #156]
   2a104:	add	w0, w0, w1
   2a108:	str	w0, [sp, #156]
   2a10c:	ldr	w1, [sp, #156]
   2a110:	ldr	w0, [sp, #72]
   2a114:	cmp	w1, w0
   2a118:	b.lt	2a158 <OnPrint@@Base+0x1b0>  // b.tstop
   2a11c:	ldr	w0, [sp, #140]
   2a120:	cmp	w0, #0x0
   2a124:	b.eq	2a288 <OnPrint@@Base+0x2e0>  // b.none
   2a128:	ldr	w1, [sp, #156]
   2a12c:	mov	w0, #0x3fff                	// #16383
   2a130:	cmp	w1, w0
   2a134:	cset	w0, gt
   2a138:	and	w0, w0, #0xff
   2a13c:	and	x0, x0, #0xff
   2a140:	cmp	x0, #0x0
   2a144:	b.eq	2a158 <OnPrint@@Base+0x1b0>  // b.none
   2a148:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2a14c:	add	x0, x0, #0x808
   2a150:	bl	1e860 <__sanitizer_cov_pcs_init@@Base+0x37c4>
   2a154:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   2a158:	ldrsw	x0, [sp, #156]
   2a15c:	ldr	x1, [sp, #144]
   2a160:	add	x4, x1, x0
   2a164:	ldr	w1, [sp, #72]
   2a168:	ldr	w0, [sp, #156]
   2a16c:	sub	w0, w1, w0
   2a170:	sxtw	x1, w0
   2a174:	ldr	w3, [sp, #132]
   2a178:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2a17c:	add	x2, x0, #0x828
   2a180:	mov	x0, x4
   2a184:	bl	2a4a8 <OnPrint@@Base+0x500>
   2a188:	mov	w1, w0
   2a18c:	ldr	w0, [sp, #156]
   2a190:	add	w0, w0, w1
   2a194:	str	w0, [sp, #156]
   2a198:	ldr	w1, [sp, #156]
   2a19c:	ldr	w0, [sp, #72]
   2a1a0:	cmp	w1, w0
   2a1a4:	b.lt	2a1e4 <OnPrint@@Base+0x23c>  // b.tstop
   2a1a8:	ldr	w0, [sp, #140]
   2a1ac:	cmp	w0, #0x0
   2a1b0:	b.eq	2a290 <OnPrint@@Base+0x2e8>  // b.none
   2a1b4:	ldr	w1, [sp, #156]
   2a1b8:	mov	w0, #0x3fff                	// #16383
   2a1bc:	cmp	w1, w0
   2a1c0:	cset	w0, gt
   2a1c4:	and	w0, w0, #0xff
   2a1c8:	and	x0, x0, #0xff
   2a1cc:	cmp	x0, #0x0
   2a1d0:	b.eq	2a1e4 <OnPrint@@Base+0x23c>  // b.none
   2a1d4:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2a1d8:	add	x0, x0, #0x808
   2a1dc:	bl	1e860 <__sanitizer_cov_pcs_init@@Base+0x37c4>
   2a1e0:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   2a1e4:	ldrsw	x0, [sp, #156]
   2a1e8:	ldr	x1, [sp, #144]
   2a1ec:	add	x4, x1, x0
   2a1f0:	ldr	w1, [sp, #72]
   2a1f4:	ldr	w0, [sp, #156]
   2a1f8:	sub	w5, w1, w0
   2a1fc:	add	x2, sp, #0x10
   2a200:	mov	x3, x19
   2a204:	ldp	x0, x1, [x3]
   2a208:	stp	x0, x1, [x2]
   2a20c:	ldp	x0, x1, [x3, #16]
   2a210:	stp	x0, x1, [x2, #16]
   2a214:	add	x0, sp, #0x10
   2a218:	mov	x3, x0
   2a21c:	ldr	x2, [sp, #56]
   2a220:	mov	w1, w5
   2a224:	mov	x0, x4
   2a228:	bl	2953c <__sanitizer_set_report_fd@@Base+0xa344>
   2a22c:	mov	w1, w0
   2a230:	ldr	w0, [sp, #156]
   2a234:	add	w0, w0, w1
   2a238:	str	w0, [sp, #156]
   2a23c:	ldr	w1, [sp, #156]
   2a240:	ldr	w0, [sp, #72]
   2a244:	cmp	w1, w0
   2a248:	b.lt	2a2ac <OnPrint@@Base+0x304>  // b.tstop
   2a24c:	ldr	w0, [sp, #140]
   2a250:	cmp	w0, #0x0
   2a254:	b.eq	2a298 <OnPrint@@Base+0x2f0>  // b.none
   2a258:	ldr	w1, [sp, #156]
   2a25c:	mov	w0, #0x3fff                	// #16383
   2a260:	cmp	w1, w0
   2a264:	cset	w0, gt
   2a268:	and	w0, w0, #0xff
   2a26c:	and	x0, x0, #0xff
   2a270:	cmp	x0, #0x0
   2a274:	b.eq	2a2ac <OnPrint@@Base+0x304>  // b.none
   2a278:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2a27c:	add	x0, x0, #0x808
   2a280:	bl	1e860 <__sanitizer_cov_pcs_init@@Base+0x37c4>
   2a284:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   2a288:	nop
   2a28c:	b	2a29c <OnPrint@@Base+0x2f4>
   2a290:	nop
   2a294:	b	2a29c <OnPrint@@Base+0x2f4>
   2a298:	nop
   2a29c:	ldr	w0, [sp, #140]
   2a2a0:	add	w0, w0, #0x1
   2a2a4:	str	w0, [sp, #140]
   2a2a8:	b	2a044 <OnPrint@@Base+0x9c>
   2a2ac:	nop
   2a2b0:	ldr	x0, [sp, #144]
   2a2b4:	bl	1e860 <__sanitizer_cov_pcs_init@@Base+0x37c4>
   2a2b8:	ldr	x0, [sp, #144]
   2a2bc:	bl	194a4 <__sancov_default_options@@Base+0x3308>
   2a2c0:	ldr	x0, [sp, #144]
   2a2c4:	bl	29fbc <OnPrint@@Base+0x14>
   2a2c8:	ldr	x0, [sp, #144]
   2a2cc:	bl	263a8 <__sanitizer_set_report_fd@@Base+0x71b0>
   2a2d0:	ldr	x1, [sp, #144]
   2a2d4:	ldr	x0, [sp, #64]
   2a2d8:	cmp	x1, x0
   2a2dc:	b.eq	2a2f0 <OnPrint@@Base+0x348>  // b.none
   2a2e0:	ldrsw	x0, [sp, #72]
   2a2e4:	mov	x1, x0
   2a2e8:	ldr	x0, [sp, #144]
   2a2ec:	bl	26af4 <__sanitizer_set_report_fd@@Base+0x78fc>
   2a2f0:	nop
   2a2f4:	ldp	x19, x30, [sp], #160
   2a2f8:	ret
   2a2fc:	stp	x19, x30, [sp, #-464]!
   2a300:	strb	w0, [sp, #63]
   2a304:	str	x1, [sp, #48]
   2a308:	mov	x19, x2
   2a30c:	add	x2, sp, #0x10
   2a310:	mov	x3, x19
   2a314:	ldp	x0, x1, [x3]
   2a318:	stp	x0, x1, [x2]
   2a31c:	ldp	x0, x1, [x3, #16]
   2a320:	stp	x0, x1, [x2, #16]
   2a324:	add	x1, sp, #0x10
   2a328:	add	x0, sp, #0x40
   2a32c:	mov	x4, x1
   2a330:	ldr	x3, [sp, #48]
   2a334:	mov	w2, #0x190                 	// #400
   2a338:	mov	x1, x0
   2a33c:	ldrb	w0, [sp, #63]
   2a340:	bl	2a000 <OnPrint@@Base+0x58>
   2a344:	nop
   2a348:	ldp	x19, x30, [sp], #464
   2a34c:	ret
   2a350:	sub	sp, sp, #0x120
   2a354:	str	x30, [sp]
   2a358:	str	x0, [sp, #56]
   2a35c:	str	x1, [sp, #232]
   2a360:	str	x2, [sp, #240]
   2a364:	str	x3, [sp, #248]
   2a368:	str	x4, [sp, #256]
   2a36c:	str	x5, [sp, #264]
   2a370:	str	x6, [sp, #272]
   2a374:	str	x7, [sp, #280]
   2a378:	str	q0, [sp, #96]
   2a37c:	str	q1, [sp, #112]
   2a380:	str	q2, [sp, #128]
   2a384:	str	q3, [sp, #144]
   2a388:	str	q4, [sp, #160]
   2a38c:	str	q5, [sp, #176]
   2a390:	str	q6, [sp, #192]
   2a394:	str	q7, [sp, #208]
   2a398:	add	x0, sp, #0x120
   2a39c:	str	x0, [sp, #64]
   2a3a0:	add	x0, sp, #0x120
   2a3a4:	str	x0, [sp, #72]
   2a3a8:	add	x0, sp, #0xe0
   2a3ac:	str	x0, [sp, #80]
   2a3b0:	mov	w0, #0xffffffc8            	// #-56
   2a3b4:	str	w0, [sp, #88]
   2a3b8:	mov	w0, #0xffffff80            	// #-128
   2a3bc:	str	w0, [sp, #92]
   2a3c0:	add	x2, sp, #0x10
   2a3c4:	add	x3, sp, #0x40
   2a3c8:	ldp	x0, x1, [x3]
   2a3cc:	stp	x0, x1, [x2]
   2a3d0:	ldp	x0, x1, [x3, #16]
   2a3d4:	stp	x0, x1, [x2, #16]
   2a3d8:	add	x0, sp, #0x10
   2a3dc:	mov	x2, x0
   2a3e0:	ldr	x1, [sp, #56]
   2a3e4:	mov	w0, #0x0                   	// #0
   2a3e8:	bl	2a2fc <OnPrint@@Base+0x354>
   2a3ec:	nop
   2a3f0:	ldr	x30, [sp]
   2a3f4:	add	sp, sp, #0x120
   2a3f8:	ret
   2a3fc:	sub	sp, sp, #0x120
   2a400:	str	x30, [sp]
   2a404:	str	x0, [sp, #56]
   2a408:	str	x1, [sp, #232]
   2a40c:	str	x2, [sp, #240]
   2a410:	str	x3, [sp, #248]
   2a414:	str	x4, [sp, #256]
   2a418:	str	x5, [sp, #264]
   2a41c:	str	x6, [sp, #272]
   2a420:	str	x7, [sp, #280]
   2a424:	str	q0, [sp, #96]
   2a428:	str	q1, [sp, #112]
   2a42c:	str	q2, [sp, #128]
   2a430:	str	q3, [sp, #144]
   2a434:	str	q4, [sp, #160]
   2a438:	str	q5, [sp, #176]
   2a43c:	str	q6, [sp, #192]
   2a440:	str	q7, [sp, #208]
   2a444:	add	x0, sp, #0x120
   2a448:	str	x0, [sp, #64]
   2a44c:	add	x0, sp, #0x120
   2a450:	str	x0, [sp, #72]
   2a454:	add	x0, sp, #0xe0
   2a458:	str	x0, [sp, #80]
   2a45c:	mov	w0, #0xffffffc8            	// #-56
   2a460:	str	w0, [sp, #88]
   2a464:	mov	w0, #0xffffff80            	// #-128
   2a468:	str	w0, [sp, #92]
   2a46c:	add	x2, sp, #0x10
   2a470:	add	x3, sp, #0x40
   2a474:	ldp	x0, x1, [x3]
   2a478:	stp	x0, x1, [x2]
   2a47c:	ldp	x0, x1, [x3, #16]
   2a480:	stp	x0, x1, [x2, #16]
   2a484:	add	x0, sp, #0x10
   2a488:	mov	x2, x0
   2a48c:	ldr	x1, [sp, #56]
   2a490:	mov	w0, #0x1                   	// #1
   2a494:	bl	2a2fc <OnPrint@@Base+0x354>
   2a498:	nop
   2a49c:	ldr	x30, [sp]
   2a4a0:	add	sp, sp, #0x120
   2a4a4:	ret
   2a4a8:	sub	sp, sp, #0x130
   2a4ac:	str	x30, [sp]
   2a4b0:	str	x0, [sp, #72]
   2a4b4:	str	x1, [sp, #64]
   2a4b8:	str	x2, [sp, #56]
   2a4bc:	str	x3, [sp, #264]
   2a4c0:	str	x4, [sp, #272]
   2a4c4:	str	x5, [sp, #280]
   2a4c8:	str	x6, [sp, #288]
   2a4cc:	str	x7, [sp, #296]
   2a4d0:	str	q0, [sp, #128]
   2a4d4:	str	q1, [sp, #144]
   2a4d8:	str	q2, [sp, #160]
   2a4dc:	str	q3, [sp, #176]
   2a4e0:	str	q4, [sp, #192]
   2a4e4:	str	q5, [sp, #208]
   2a4e8:	str	q6, [sp, #224]
   2a4ec:	str	q7, [sp, #240]
   2a4f0:	add	x0, sp, #0x130
   2a4f4:	str	x0, [sp, #88]
   2a4f8:	add	x0, sp, #0x130
   2a4fc:	str	x0, [sp, #96]
   2a500:	add	x0, sp, #0x100
   2a504:	str	x0, [sp, #104]
   2a508:	mov	w0, #0xffffffd8            	// #-40
   2a50c:	str	w0, [sp, #112]
   2a510:	mov	w0, #0xffffff80            	// #-128
   2a514:	str	w0, [sp, #116]
   2a518:	ldr	x0, [sp, #64]
   2a51c:	mov	w4, w0
   2a520:	add	x2, sp, #0x10
   2a524:	add	x3, sp, #0x58
   2a528:	ldp	x0, x1, [x3]
   2a52c:	stp	x0, x1, [x2]
   2a530:	ldp	x0, x1, [x3, #16]
   2a534:	stp	x0, x1, [x2, #16]
   2a538:	add	x0, sp, #0x10
   2a53c:	mov	x3, x0
   2a540:	ldr	x2, [sp, #56]
   2a544:	mov	w1, w4
   2a548:	ldr	x0, [sp, #72]
   2a54c:	bl	2953c <__sanitizer_set_report_fd@@Base+0xa344>
   2a550:	str	w0, [sp, #124]
   2a554:	ldr	w0, [sp, #124]
   2a558:	ldr	x30, [sp]
   2a55c:	add	sp, sp, #0x130
   2a560:	ret
   2a564:	stp	x19, x30, [sp, #-304]!
   2a568:	str	x0, [sp, #56]
   2a56c:	str	x1, [sp, #48]
   2a570:	str	x2, [sp, #256]
   2a574:	str	x3, [sp, #264]
   2a578:	str	x4, [sp, #272]
   2a57c:	str	x5, [sp, #280]
   2a580:	str	x6, [sp, #288]
   2a584:	str	x7, [sp, #296]
   2a588:	str	q0, [sp, #128]
   2a58c:	str	q1, [sp, #144]
   2a590:	str	q2, [sp, #160]
   2a594:	str	q3, [sp, #176]
   2a598:	str	q4, [sp, #192]
   2a59c:	str	q5, [sp, #208]
   2a5a0:	str	q6, [sp, #224]
   2a5a4:	str	q7, [sp, #240]
   2a5a8:	ldr	x0, [sp, #56]
   2a5ac:	ldr	x0, [x0, #24]
   2a5b0:	str	x0, [sp, #120]
   2a5b4:	ldr	x0, [sp, #56]
   2a5b8:	bl	1f250 <__sanitizer_set_report_fd@@Base+0x58>
   2a5bc:	str	x0, [sp, #112]
   2a5c0:	ldr	x1, [sp, #120]
   2a5c4:	ldr	x0, [sp, #112]
   2a5c8:	cmp	x1, x0
   2a5cc:	cset	w0, cs  // cs = hs, nlast
   2a5d0:	and	w0, w0, #0xff
   2a5d4:	and	x0, x0, #0xff
   2a5d8:	cmp	x0, #0x0
   2a5dc:	b.eq	2a600 <OnPrint@@Base+0x658>  // b.none
   2a5e0:	ldr	x4, [sp, #112]
   2a5e4:	ldr	x3, [sp, #120]
   2a5e8:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2a5ec:	add	x2, x0, #0x830
   2a5f0:	mov	w1, #0x15c                 	// #348
   2a5f4:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2a5f8:	add	x0, x0, #0x770
   2a5fc:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2a600:	add	x0, sp, #0x130
   2a604:	str	x0, [sp, #64]
   2a608:	add	x0, sp, #0x130
   2a60c:	str	x0, [sp, #72]
   2a610:	add	x0, sp, #0x100
   2a614:	str	x0, [sp, #80]
   2a618:	mov	w0, #0xffffffd0            	// #-48
   2a61c:	str	w0, [sp, #88]
   2a620:	mov	w0, #0xffffff80            	// #-128
   2a624:	str	w0, [sp, #92]
   2a628:	ldr	x0, [sp, #56]
   2a62c:	bl	bc50 <__lsan_do_recoverable_leak_check@@Base+0x1ac4>
   2a630:	mov	x1, x0
   2a634:	ldr	x0, [sp, #56]
   2a638:	ldr	x0, [x0, #24]
   2a63c:	add	x19, x1, x0
   2a640:	ldr	x0, [sp, #56]
   2a644:	bl	1f250 <__sanitizer_set_report_fd@@Base+0x58>
   2a648:	mov	w1, w0
   2a64c:	ldr	x0, [sp, #56]
   2a650:	ldr	x0, [x0, #24]
   2a654:	sub	w0, w1, w0
   2a658:	mov	w4, w0
   2a65c:	add	x2, sp, #0x10
   2a660:	add	x3, sp, #0x40
   2a664:	ldp	x0, x1, [x3]
   2a668:	stp	x0, x1, [x2]
   2a66c:	ldp	x0, x1, [x3, #16]
   2a670:	stp	x0, x1, [x2, #16]
   2a674:	add	x0, sp, #0x10
   2a678:	mov	x3, x0
   2a67c:	ldr	x2, [sp, #48]
   2a680:	mov	w1, w4
   2a684:	mov	x0, x19
   2a688:	bl	2953c <__sanitizer_set_report_fd@@Base+0xa344>
   2a68c:	ldr	x0, [sp, #56]
   2a690:	bl	bc50 <__lsan_do_recoverable_leak_check@@Base+0x1ac4>
   2a694:	mov	x1, x0
   2a698:	ldr	x0, [sp, #56]
   2a69c:	ldr	x0, [x0, #24]
   2a6a0:	add	x0, x1, x0
   2a6a4:	bl	21bac <__sanitizer_set_report_fd@@Base+0x29b4>
   2a6a8:	mov	x1, x0
   2a6ac:	ldr	x0, [sp, #56]
   2a6b0:	ldr	x0, [x0, #24]
   2a6b4:	add	x1, x1, x0
   2a6b8:	ldr	x0, [sp, #56]
   2a6bc:	str	x1, [x0, #24]
   2a6c0:	ldr	x0, [sp, #56]
   2a6c4:	ldr	x0, [x0, #24]
   2a6c8:	str	x0, [sp, #104]
   2a6cc:	ldr	x0, [sp, #56]
   2a6d0:	bl	1f250 <__sanitizer_set_report_fd@@Base+0x58>
   2a6d4:	str	x0, [sp, #96]
   2a6d8:	ldr	x1, [sp, #104]
   2a6dc:	ldr	x0, [sp, #96]
   2a6e0:	cmp	x1, x0
   2a6e4:	cset	w0, cs  // cs = hs, nlast
   2a6e8:	and	w0, w0, #0xff
   2a6ec:	and	x0, x0, #0xff
   2a6f0:	cmp	x0, #0x0
   2a6f4:	b.eq	2a718 <OnPrint@@Base+0x770>  // b.none
   2a6f8:	ldr	x4, [sp, #96]
   2a6fc:	ldr	x3, [sp, #104]
   2a700:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2a704:	add	x2, x0, #0x830
   2a708:	mov	w1, #0x162                 	// #354
   2a70c:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2a710:	add	x0, x0, #0x770
   2a714:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2a718:	nop
   2a71c:	ldp	x19, x30, [sp], #304
   2a720:	ret
   2a724:	sub	sp, sp, #0x10
   2a728:	strb	w0, [sp, #15]
   2a72c:	ldrb	w0, [sp, #15]
   2a730:	cmp	w0, #0x2f
   2a734:	b.ls	2a750 <OnPrint@@Base+0x7a8>  // b.plast
   2a738:	ldrb	w0, [sp, #15]
   2a73c:	cmp	w0, #0x39
   2a740:	b.hi	2a750 <OnPrint@@Base+0x7a8>  // b.pmore
   2a744:	ldrb	w0, [sp, #15]
   2a748:	sub	w0, w0, #0x30
   2a74c:	b	2a79c <OnPrint@@Base+0x7f4>
   2a750:	ldrb	w0, [sp, #15]
   2a754:	cmp	w0, #0x60
   2a758:	b.ls	2a774 <OnPrint@@Base+0x7cc>  // b.plast
   2a75c:	ldrb	w0, [sp, #15]
   2a760:	cmp	w0, #0x66
   2a764:	b.hi	2a774 <OnPrint@@Base+0x7cc>  // b.pmore
   2a768:	ldrb	w0, [sp, #15]
   2a76c:	sub	w0, w0, #0x57
   2a770:	b	2a79c <OnPrint@@Base+0x7f4>
   2a774:	ldrb	w0, [sp, #15]
   2a778:	cmp	w0, #0x40
   2a77c:	b.ls	2a798 <OnPrint@@Base+0x7f0>  // b.plast
   2a780:	ldrb	w0, [sp, #15]
   2a784:	cmp	w0, #0x46
   2a788:	b.hi	2a798 <OnPrint@@Base+0x7f0>  // b.pmore
   2a78c:	ldrb	w0, [sp, #15]
   2a790:	sub	w0, w0, #0x37
   2a794:	b	2a79c <OnPrint@@Base+0x7f4>
   2a798:	mov	w0, #0xffffffff            	// #-1
   2a79c:	add	sp, sp, #0x10
   2a7a0:	ret
   2a7a4:	str	x30, [sp, #-64]!
   2a7a8:	str	x0, [sp, #24]
   2a7ac:	str	w1, [sp, #20]
   2a7b0:	str	xzr, [sp, #56]
   2a7b4:	ldr	w0, [sp, #20]
   2a7b8:	cmp	w0, #0x1
   2a7bc:	b.le	2a7d4 <OnPrint@@Base+0x82c>
   2a7c0:	ldr	w0, [sp, #20]
   2a7c4:	cmp	w0, #0x10
   2a7c8:	b.gt	2a7d4 <OnPrint@@Base+0x82c>
   2a7cc:	mov	w0, #0x1                   	// #1
   2a7d0:	b	2a7d8 <OnPrint@@Base+0x830>
   2a7d4:	mov	w0, #0x0                   	// #0
   2a7d8:	and	x0, x0, #0xff
   2a7dc:	str	x0, [sp, #48]
   2a7e0:	str	xzr, [sp, #40]
   2a7e4:	ldr	x1, [sp, #48]
   2a7e8:	ldr	x0, [sp, #40]
   2a7ec:	cmp	x1, x0
   2a7f0:	cset	w0, eq  // eq = none
   2a7f4:	and	w0, w0, #0xff
   2a7f8:	and	x0, x0, #0xff
   2a7fc:	cmp	x0, #0x0
   2a800:	b.eq	2a824 <OnPrint@@Base+0x87c>  // b.none
   2a804:	ldr	x4, [sp, #40]
   2a808:	ldr	x3, [sp, #48]
   2a80c:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2a810:	add	x2, x0, #0x9b8
   2a814:	mov	w1, #0x27                  	// #39
   2a818:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2a81c:	add	x0, x0, #0x9e0
   2a820:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2a824:	ldr	x0, [sp, #24]
   2a828:	ldr	x0, [x0]
   2a82c:	ldrb	w0, [x0]
   2a830:	bl	2a724 <OnPrint@@Base+0x77c>
   2a834:	str	w0, [sp, #36]
   2a838:	ldr	w0, [sp, #36]
   2a83c:	cmp	w0, #0x0
   2a840:	b.lt	2a85c <OnPrint@@Base+0x8b4>  // b.tstop
   2a844:	ldr	w1, [sp, #36]
   2a848:	ldr	w0, [sp, #20]
   2a84c:	cmp	w1, w0
   2a850:	b.ge	2a85c <OnPrint@@Base+0x8b4>  // b.tcont
   2a854:	mov	w0, #0x1                   	// #1
   2a858:	b	2a860 <OnPrint@@Base+0x8b8>
   2a85c:	mov	w0, #0x0                   	// #0
   2a860:	cmp	w0, #0x0
   2a864:	b.eq	2a898 <OnPrint@@Base+0x8f0>  // b.none
   2a868:	ldrsw	x1, [sp, #20]
   2a86c:	ldr	x0, [sp, #56]
   2a870:	mul	x1, x1, x0
   2a874:	ldrsw	x0, [sp, #36]
   2a878:	add	x0, x1, x0
   2a87c:	str	x0, [sp, #56]
   2a880:	ldr	x0, [sp, #24]
   2a884:	ldr	x0, [x0]
   2a888:	add	x1, x0, #0x1
   2a88c:	ldr	x0, [sp, #24]
   2a890:	str	x1, [x0]
   2a894:	b	2a824 <OnPrint@@Base+0x87c>
   2a898:	ldr	x0, [sp, #56]
   2a89c:	ldr	x30, [sp], #64
   2a8a0:	ret
   2a8a4:	str	x30, [sp, #-48]!
   2a8a8:	strb	w0, [sp, #31]
   2a8ac:	ldrb	w0, [sp, #31]
   2a8b0:	bl	2a724 <OnPrint@@Base+0x77c>
   2a8b4:	str	w0, [sp, #44]
   2a8b8:	ldr	w0, [sp, #44]
   2a8bc:	cmp	w0, #0x0
   2a8c0:	b.lt	2a8d8 <OnPrint@@Base+0x930>  // b.tstop
   2a8c4:	ldr	w0, [sp, #44]
   2a8c8:	cmp	w0, #0x9
   2a8cc:	b.gt	2a8d8 <OnPrint@@Base+0x930>
   2a8d0:	mov	w0, #0x1                   	// #1
   2a8d4:	b	2a8dc <OnPrint@@Base+0x934>
   2a8d8:	mov	w0, #0x0                   	// #0
   2a8dc:	ldr	x30, [sp], #48
   2a8e0:	ret
   2a8e4:	str	x30, [sp, #-32]!
   2a8e8:	str	x0, [sp, #24]
   2a8ec:	mov	w1, #0xa                   	// #10
   2a8f0:	ldr	x0, [sp, #24]
   2a8f4:	bl	2a7a4 <OnPrint@@Base+0x7fc>
   2a8f8:	ldr	x30, [sp], #32
   2a8fc:	ret
   2a900:	str	x30, [sp, #-48]!
   2a904:	strb	w0, [sp, #31]
   2a908:	ldrb	w0, [sp, #31]
   2a90c:	bl	2a724 <OnPrint@@Base+0x77c>
   2a910:	str	w0, [sp, #44]
   2a914:	ldr	w0, [sp, #44]
   2a918:	cmp	w0, #0x0
   2a91c:	b.lt	2a934 <OnPrint@@Base+0x98c>  // b.tstop
   2a920:	ldr	w0, [sp, #44]
   2a924:	cmp	w0, #0xf
   2a928:	b.gt	2a934 <OnPrint@@Base+0x98c>
   2a92c:	mov	w0, #0x1                   	// #1
   2a930:	b	2a938 <OnPrint@@Base+0x990>
   2a934:	mov	w0, #0x0                   	// #0
   2a938:	ldr	x30, [sp], #48
   2a93c:	ret
   2a940:	str	x30, [sp, #-32]!
   2a944:	str	x0, [sp, #24]
   2a948:	mov	w1, #0x10                  	// #16
   2a94c:	ldr	x0, [sp, #24]
   2a950:	bl	2a7a4 <OnPrint@@Base+0x7fc>
   2a954:	ldr	x30, [sp], #32
   2a958:	ret
   2a95c:	stp	x19, x20, [sp, #-64]!
   2a960:	stp	x21, x30, [sp, #16]
   2a964:	str	x0, [sp, #40]
   2a968:	str	x1, [sp, #32]
   2a96c:	ldr	x0, [sp, #40]
   2a970:	ldr	x0, [x0, #72]
   2a974:	cmp	x0, #0x0
   2a978:	cset	w0, eq  // eq = none
   2a97c:	and	w0, w0, #0xff
   2a980:	and	x0, x0, #0xff
   2a984:	str	x0, [sp, #56]
   2a988:	str	xzr, [sp, #48]
   2a98c:	ldr	x1, [sp, #56]
   2a990:	ldr	x0, [sp, #48]
   2a994:	cmp	x1, x0
   2a998:	cset	w0, eq  // eq = none
   2a99c:	and	w0, w0, #0xff
   2a9a0:	and	x0, x0, #0xff
   2a9a4:	cmp	x0, #0x0
   2a9a8:	b.eq	2a9cc <OnPrint@@Base+0xa24>  // b.none
   2a9ac:	ldr	x4, [sp, #48]
   2a9b0:	ldr	x3, [sp, #56]
   2a9b4:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2a9b8:	add	x2, x0, #0xa28
   2a9bc:	mov	w1, #0x43                  	// #67
   2a9c0:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2a9c4:	add	x0, x0, #0x9e0
   2a9c8:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2a9cc:	ldr	x0, [sp, #40]
   2a9d0:	ldr	x19, [x0]
   2a9d4:	ldr	x0, [sp, #40]
   2a9d8:	ldr	x20, [x0, #8]
   2a9dc:	ldr	x0, [sp, #40]
   2a9e0:	bl	27a98 <__sanitizer_set_report_fd@@Base+0x88a0>
   2a9e4:	and	w21, w0, #0xff
   2a9e8:	ldr	x0, [sp, #40]
   2a9ec:	bl	2af58 <OnPrint@@Base+0xfb0>
   2a9f0:	and	w0, w0, #0xff
   2a9f4:	mov	x5, #0x0                   	// #0
   2a9f8:	mov	w4, w0
   2a9fc:	mov	w3, w21
   2aa00:	mov	x2, x20
   2aa04:	mov	x1, x19
   2aa08:	ldr	x0, [sp, #32]
   2aa0c:	bl	19728 <__sancov_default_options@@Base+0x358c>
   2aa10:	nop
   2aa14:	ldp	x21, x30, [sp, #16]
   2aa18:	ldp	x19, x20, [sp], #64
   2aa1c:	ret
   2aa20:	str	x30, [sp, #-64]!
   2aa24:	str	x0, [sp, #24]
   2aa28:	strb	w1, [sp, #23]
   2aa2c:	ldrb	w0, [sp, #23]
   2aa30:	cmp	w0, #0x0
   2aa34:	b.eq	2aa3c <OnPrint@@Base+0xa94>  // b.none
   2aa38:	bl	2ab8c <OnPrint@@Base+0xbe4>
   2aa3c:	ldr	x0, [sp, #24]
   2aa40:	bl	2af80 <OnPrint@@Base+0xfd8>
   2aa44:	ldrb	w0, [sp, #23]
   2aa48:	cmp	w0, #0x0
   2aa4c:	b.eq	2aa68 <OnPrint@@Base+0xac0>  // b.none
   2aa50:	ldr	x0, [sp, #24]
   2aa54:	ldr	x0, [x0, #8]
   2aa58:	cmp	x0, #0x0
   2aa5c:	b.ne	2aa68 <OnPrint@@Base+0xac0>  // b.any
   2aa60:	ldr	x0, [sp, #24]
   2aa64:	bl	2ac28 <OnPrint@@Base+0xc80>
   2aa68:	ldr	x0, [sp, #24]
   2aa6c:	ldr	x0, [x0, #8]
   2aa70:	str	x0, [sp, #56]
   2aa74:	str	xzr, [sp, #48]
   2aa78:	ldr	x1, [sp, #56]
   2aa7c:	ldr	x0, [sp, #48]
   2aa80:	cmp	x1, x0
   2aa84:	cset	w0, ls  // ls = plast
   2aa88:	and	w0, w0, #0xff
   2aa8c:	and	x0, x0, #0xff
   2aa90:	cmp	x0, #0x0
   2aa94:	b.eq	2aab8 <OnPrint@@Base+0xb10>  // b.none
   2aa98:	ldr	x4, [sp, #48]
   2aa9c:	ldr	x3, [sp, #56]
   2aaa0:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2aaa4:	add	x2, x0, #0xa40
   2aaa8:	mov	w1, #0x51                  	// #81
   2aaac:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2aab0:	add	x0, x0, #0x9e0
   2aab4:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2aab8:	ldr	x0, [sp, #24]
   2aabc:	ldr	x0, [x0, #16]
   2aac0:	str	x0, [sp, #40]
   2aac4:	str	xzr, [sp, #32]
   2aac8:	ldr	x1, [sp, #40]
   2aacc:	ldr	x0, [sp, #32]
   2aad0:	cmp	x1, x0
   2aad4:	cset	w0, ls  // ls = plast
   2aad8:	and	w0, w0, #0xff
   2aadc:	and	x0, x0, #0xff
   2aae0:	cmp	x0, #0x0
   2aae4:	b.eq	2ab08 <OnPrint@@Base+0xb60>  // b.none
   2aae8:	ldr	x4, [sp, #32]
   2aaec:	ldr	x3, [sp, #40]
   2aaf0:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2aaf4:	add	x2, x0, #0xa70
   2aaf8:	mov	w1, #0x52                  	// #82
   2aafc:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2ab00:	add	x0, x0, #0x9e0
   2ab04:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2ab08:	ldr	x0, [sp, #24]
   2ab0c:	bl	2ab68 <OnPrint@@Base+0xbc0>
   2ab10:	nop
   2ab14:	ldr	x30, [sp], #64
   2ab18:	ret
   2ab1c:	str	x30, [sp, #-32]!
   2ab20:	str	x0, [sp, #24]
   2ab24:	ldr	x0, [sp, #24]
   2ab28:	ldr	x1, [x0]
   2ab2c:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   2ab30:	add	x0, x0, #0xc60
   2ab34:	ldr	x0, [x0]
   2ab38:	cmp	x1, x0
   2ab3c:	b.eq	2ab5c <OnPrint@@Base+0xbb4>  // b.none
   2ab40:	ldr	x0, [sp, #24]
   2ab44:	ldr	x2, [x0]
   2ab48:	ldr	x0, [sp, #24]
   2ab4c:	ldr	x0, [x0, #8]
   2ab50:	mov	x1, x0
   2ab54:	mov	x0, x2
   2ab58:	bl	26af4 <__sanitizer_set_report_fd@@Base+0x78fc>
   2ab5c:	nop
   2ab60:	ldr	x30, [sp], #32
   2ab64:	ret
   2ab68:	sub	sp, sp, #0x10
   2ab6c:	str	x0, [sp, #8]
   2ab70:	ldr	x0, [sp, #8]
   2ab74:	ldr	x1, [x0]
   2ab78:	ldr	x0, [sp, #8]
   2ab7c:	str	x1, [x0, #24]
   2ab80:	nop
   2ab84:	add	sp, sp, #0x10
   2ab88:	ret
   2ab8c:	str	x30, [sp, #-48]!
   2ab90:	add	x0, sp, #0x18
   2ab94:	bl	2af80 <OnPrint@@Base+0xfd8>
   2ab98:	ldr	x0, [sp, #32]
   2ab9c:	cmp	x0, #0x0
   2aba0:	b.eq	2ac1c <OnPrint@@Base+0xc74>  // b.none
   2aba4:	add	x2, sp, #0x10
   2aba8:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   2abac:	add	x1, x0, #0xc78
   2abb0:	mov	x0, x2
   2abb4:	bl	f58c <__sanitizer_get_allocated_size@@Base+0xa2c>
   2abb8:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   2abbc:	add	x0, x0, #0xc60
   2abc0:	ldr	x0, [x0, #8]
   2abc4:	cmp	x0, #0x0
   2abc8:	b.eq	2abf0 <OnPrint@@Base+0xc48>  // b.none
   2abcc:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   2abd0:	add	x0, x0, #0xc60
   2abd4:	ldr	x2, [x0]
   2abd8:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   2abdc:	add	x0, x0, #0xc60
   2abe0:	ldr	x0, [x0, #8]
   2abe4:	mov	x1, x0
   2abe8:	mov	x0, x2
   2abec:	bl	26af4 <__sanitizer_set_report_fd@@Base+0x78fc>
   2abf0:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   2abf4:	add	x0, x0, #0xc60
   2abf8:	mov	x3, x0
   2abfc:	add	x2, sp, #0x18
   2ac00:	ldp	x0, x1, [x2]
   2ac04:	stp	x0, x1, [x3]
   2ac08:	ldr	x0, [x2, #16]
   2ac0c:	str	x0, [x3, #16]
   2ac10:	add	x0, sp, #0x10
   2ac14:	bl	f5bc <__sanitizer_get_allocated_size@@Base+0xa5c>
   2ac18:	b	2ac20 <OnPrint@@Base+0xc78>
   2ac1c:	nop
   2ac20:	ldr	x30, [sp], #48
   2ac24:	ret
   2ac28:	str	x30, [sp, #-48]!
   2ac2c:	str	x0, [sp, #24]
   2ac30:	add	x2, sp, #0x28
   2ac34:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   2ac38:	add	x1, x0, #0xc78
   2ac3c:	mov	x0, x2
   2ac40:	bl	f58c <__sanitizer_get_allocated_size@@Base+0xa2c>
   2ac44:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   2ac48:	add	x0, x0, #0xc60
   2ac4c:	ldr	x0, [x0]
   2ac50:	cmp	x0, #0x0
   2ac54:	b.eq	2ac7c <OnPrint@@Base+0xcd4>  // b.none
   2ac58:	ldr	x1, [sp, #24]
   2ac5c:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   2ac60:	add	x0, x0, #0xc60
   2ac64:	mov	x2, x1
   2ac68:	mov	x3, x0
   2ac6c:	ldp	x0, x1, [x3]
   2ac70:	stp	x0, x1, [x2]
   2ac74:	ldr	x0, [x3, #16]
   2ac78:	str	x0, [x2, #16]
   2ac7c:	add	x0, sp, #0x28
   2ac80:	bl	f5bc <__sanitizer_get_allocated_size@@Base+0xa5c>
   2ac84:	nop
   2ac88:	ldr	x30, [sp], #48
   2ac8c:	ret
   2ac90:	stp	x19, x30, [sp, #-240]!
   2ac94:	str	x0, [sp, #24]
   2ac98:	str	x1, [sp, #16]
   2ac9c:	ldr	x0, [sp, #24]
   2aca0:	bl	2ab68 <OnPrint@@Base+0xbc0>
   2aca4:	add	x0, sp, #0xb8
   2aca8:	mov	x1, #0x1000                	// #4096
   2acac:	bl	a584 <__lsan_do_recoverable_leak_check@@Base+0x3f8>
   2acb0:	add	x0, sp, #0xb8
   2acb4:	bl	bc50 <__lsan_do_recoverable_leak_check@@Base+0x1ac4>
   2acb8:	mov	x19, x0
   2acbc:	add	x0, sp, #0xb8
   2acc0:	bl	1f250 <__sanitizer_set_report_fd@@Base+0x58>
   2acc4:	mov	x1, x0
   2acc8:	add	x0, sp, #0x68
   2accc:	mov	x2, x1
   2acd0:	mov	x1, x19
   2acd4:	bl	a5e0 <__lsan_do_recoverable_leak_check@@Base+0x454>
   2acd8:	str	xzr, [sp, #232]
   2acdc:	add	x0, sp, #0x68
   2ace0:	mov	x1, x0
   2ace4:	ldr	x0, [sp, #24]
   2ace8:	bl	2b030 <OnPrint@@Base+0x1088>
   2acec:	and	w0, w0, #0xff
   2acf0:	cmp	w0, #0x0
   2acf4:	b.eq	2ad80 <OnPrint@@Base+0xdd8>  // b.none
   2acf8:	ldr	x0, [sp, #128]
   2acfc:	str	x0, [sp, #224]
   2ad00:	ldr	x0, [sp, #224]
   2ad04:	ldrb	w0, [x0]
   2ad08:	cmp	w0, #0x0
   2ad0c:	b.eq	2ad6c <OnPrint@@Base+0xdc4>  // b.none
   2ad10:	ldr	x0, [sp, #232]
   2ad14:	cmp	x0, #0x0
   2ad18:	b.eq	2ad24 <OnPrint@@Base+0xd7c>  // b.none
   2ad1c:	ldr	x0, [sp, #104]
   2ad20:	b	2ad28 <OnPrint@@Base+0xd80>
   2ad24:	mov	x0, #0x0                   	// #0
   2ad28:	ldr	x1, [sp, #120]
   2ad2c:	sub	x0, x0, x1
   2ad30:	str	x0, [sp, #216]
   2ad34:	add	x0, sp, #0x20
   2ad38:	bl	d47c <__lsan_do_recoverable_leak_check@@Base+0x32f0>
   2ad3c:	add	x0, sp, #0x20
   2ad40:	ldr	x2, [sp, #216]
   2ad44:	ldr	x1, [sp, #224]
   2ad48:	bl	195d4 <__sancov_default_options@@Base+0x3438>
   2ad4c:	add	x1, sp, #0x20
   2ad50:	add	x0, sp, #0x68
   2ad54:	bl	2a95c <OnPrint@@Base+0x9b4>
   2ad58:	add	x0, sp, #0x20
   2ad5c:	mov	x1, x0
   2ad60:	ldr	x0, [sp, #16]
   2ad64:	bl	2673c <__sanitizer_set_report_fd@@Base+0x7544>
   2ad68:	b	2ad70 <OnPrint@@Base+0xdc8>
   2ad6c:	nop
   2ad70:	ldr	x0, [sp, #232]
   2ad74:	add	x0, x0, #0x1
   2ad78:	str	x0, [sp, #232]
   2ad7c:	b	2acdc <OnPrint@@Base+0xd34>
   2ad80:	add	x0, sp, #0x68
   2ad84:	bl	a61c <__lsan_do_recoverable_leak_check@@Base+0x490>
   2ad88:	add	x0, sp, #0xb8
   2ad8c:	bl	aab4 <__lsan_do_recoverable_leak_check@@Base+0x928>
   2ad90:	nop
   2ad94:	ldp	x19, x30, [sp], #240
   2ad98:	ret
   2ad9c:	str	x30, [sp, #-112]!
   2ada0:	str	x0, [sp, #40]
   2ada4:	str	x1, [sp, #32]
   2ada8:	str	x2, [sp, #24]
   2adac:	str	xzr, [sp, #80]
   2adb0:	str	xzr, [sp, #72]
   2adb4:	str	xzr, [sp, #64]
   2adb8:	add	x2, sp, #0x40
   2adbc:	add	x1, sp, #0x48
   2adc0:	add	x0, sp, #0x50
   2adc4:	mov	x5, #0x0                   	// #0
   2adc8:	mov	x4, #0x4000000             	// #67108864
   2adcc:	mov	x3, x2
   2add0:	mov	x2, x1
   2add4:	mov	x1, x0
   2add8:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2addc:	add	x0, x0, #0xa98
   2ade0:	bl	1ec3c <__sanitizer_cov_pcs_init@@Base+0x3ba0>
   2ade4:	and	w0, w0, #0xff
   2ade8:	eor	w0, w0, #0x1
   2adec:	and	w0, w0, #0xff
   2adf0:	cmp	w0, #0x0
   2adf4:	b.ne	2af4c <OnPrint@@Base+0xfa4>  // b.any
   2adf8:	str	xzr, [sp, #104]
   2adfc:	strb	wzr, [sp, #103]
   2ae00:	ldr	x0, [sp, #80]
   2ae04:	str	x0, [sp, #56]
   2ae08:	ldr	x1, [sp, #80]
   2ae0c:	ldr	x0, [sp, #64]
   2ae10:	add	x1, x1, x0
   2ae14:	ldr	x0, [sp, #56]
   2ae18:	cmp	x1, x0
   2ae1c:	b.ls	2af3c <OnPrint@@Base+0xf94>  // b.plast
   2ae20:	ldr	x0, [sp, #56]
   2ae24:	ldrb	w0, [x0]
   2ae28:	bl	2a900 <OnPrint@@Base+0x958>
   2ae2c:	and	w0, w0, #0xff
   2ae30:	cmp	w0, #0x0
   2ae34:	b.eq	2ae8c <OnPrint@@Base+0xee4>  // b.none
   2ae38:	add	x0, sp, #0x38
   2ae3c:	bl	2a940 <OnPrint@@Base+0x998>
   2ae40:	str	x0, [sp, #104]
   2ae44:	ldr	x0, [sp, #56]
   2ae48:	ldrb	w0, [x0]
   2ae4c:	cmp	w0, #0x2f
   2ae50:	b.eq	2ae74 <OnPrint@@Base+0xecc>  // b.none
   2ae54:	ldr	x0, [sp, #56]
   2ae58:	ldrb	w0, [x0]
   2ae5c:	cmp	w0, #0xa
   2ae60:	b.ls	2ae74 <OnPrint@@Base+0xecc>  // b.plast
   2ae64:	ldr	x0, [sp, #56]
   2ae68:	add	x0, x0, #0x1
   2ae6c:	str	x0, [sp, #56]
   2ae70:	b	2ae44 <OnPrint@@Base+0xe9c>
   2ae74:	ldr	x0, [sp, #56]
   2ae78:	ldrb	w0, [x0]
   2ae7c:	cmp	w0, #0x2f
   2ae80:	cset	w0, eq  // eq = none
   2ae84:	strb	w0, [sp, #103]
   2ae88:	b	2af14 <OnPrint@@Base+0xf6c>
   2ae8c:	ldr	x3, [sp, #56]
   2ae90:	mov	x2, #0x4                   	// #4
   2ae94:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2ae98:	add	x1, x0, #0xab0
   2ae9c:	mov	x0, x3
   2aea0:	bl	219dc <__sanitizer_set_report_fd@@Base+0x27e4>
   2aea4:	cmp	w0, #0x0
   2aea8:	cset	w0, eq  // eq = none
   2aeac:	and	w0, w0, #0xff
   2aeb0:	cmp	w0, #0x0
   2aeb4:	b.eq	2af14 <OnPrint@@Base+0xf6c>  // b.none
   2aeb8:	ldr	x0, [sp, #56]
   2aebc:	ldrb	w0, [x0]
   2aec0:	bl	2a8a4 <OnPrint@@Base+0x8fc>
   2aec4:	and	w0, w0, #0xff
   2aec8:	eor	w0, w0, #0x1
   2aecc:	and	w0, w0, #0xff
   2aed0:	cmp	w0, #0x0
   2aed4:	b.eq	2aee8 <OnPrint@@Base+0xf40>  // b.none
   2aed8:	ldr	x0, [sp, #56]
   2aedc:	add	x0, x0, #0x1
   2aee0:	str	x0, [sp, #56]
   2aee4:	b	2aeb8 <OnPrint@@Base+0xf10>
   2aee8:	add	x0, sp, #0x38
   2aeec:	bl	2a8e4 <OnPrint@@Base+0x93c>
   2aef0:	lsl	x0, x0, #10
   2aef4:	str	x0, [sp, #88]
   2aef8:	ldr	x5, [sp, #40]
   2aefc:	ldr	x4, [sp, #24]
   2af00:	ldr	x3, [sp, #32]
   2af04:	ldrb	w2, [sp, #103]
   2af08:	ldr	x1, [sp, #88]
   2af0c:	ldr	x0, [sp, #104]
   2af10:	blr	x5
   2af14:	ldr	x0, [sp, #56]
   2af18:	add	x1, x0, #0x1
   2af1c:	str	x1, [sp, #56]
   2af20:	ldrb	w0, [x0]
   2af24:	cmp	w0, #0xa
   2af28:	cset	w0, ne  // ne = any
   2af2c:	and	w0, w0, #0xff
   2af30:	cmp	w0, #0x0
   2af34:	b.eq	2ae08 <OnPrint@@Base+0xe60>  // b.none
   2af38:	b	2af14 <OnPrint@@Base+0xf6c>
   2af3c:	ldr	x0, [sp, #80]
   2af40:	ldr	x1, [sp, #72]
   2af44:	bl	26af4 <__sanitizer_set_report_fd@@Base+0x78fc>
   2af48:	b	2af50 <OnPrint@@Base+0xfa8>
   2af4c:	nop
   2af50:	ldr	x30, [sp], #112
   2af54:	ret
   2af58:	sub	sp, sp, #0x10
   2af5c:	str	x0, [sp, #8]
   2af60:	ldr	x0, [sp, #8]
   2af64:	ldr	x0, [x0, #40]
   2af68:	and	x0, x0, #0x2
   2af6c:	cmp	x0, #0x0
   2af70:	cset	w0, ne  // ne = any
   2af74:	and	w0, w0, #0xff
   2af78:	add	sp, sp, #0x10
   2af7c:	ret
   2af80:	str	x30, [sp, #-32]!
   2af84:	str	x0, [sp, #24]
   2af88:	ldr	x1, [sp, #24]
   2af8c:	ldr	x0, [sp, #24]
   2af90:	add	x2, x0, #0x8
   2af94:	ldr	x0, [sp, #24]
   2af98:	add	x0, x0, #0x10
   2af9c:	mov	x5, #0x0                   	// #0
   2afa0:	mov	x4, #0x4000000             	// #67108864
   2afa4:	mov	x3, x0
   2afa8:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2afac:	add	x0, x0, #0xbf0
   2afb0:	bl	1ec3c <__sanitizer_cov_pcs_init@@Base+0x3ba0>
   2afb4:	and	w0, w0, #0xff
   2afb8:	eor	w0, w0, #0x1
   2afbc:	and	w0, w0, #0xff
   2afc0:	cmp	w0, #0x0
   2afc4:	b.eq	2afe0 <OnPrint@@Base+0x1038>  // b.none
   2afc8:	ldr	x0, [sp, #24]
   2afcc:	str	xzr, [x0]
   2afd0:	ldr	x0, [sp, #24]
   2afd4:	str	xzr, [x0, #8]
   2afd8:	ldr	x0, [sp, #24]
   2afdc:	str	xzr, [x0, #16]
   2afe0:	nop
   2afe4:	ldr	x30, [sp], #32
   2afe8:	ret
   2afec:	sub	sp, sp, #0x10
   2aff0:	strb	w0, [sp, #15]
   2aff4:	strb	w1, [sp, #14]
   2aff8:	strb	w2, [sp, #13]
   2affc:	ldrb	w1, [sp, #15]
   2b000:	ldrb	w0, [sp, #14]
   2b004:	cmp	w1, w0
   2b008:	b.eq	2b01c <OnPrint@@Base+0x1074>  // b.none
   2b00c:	ldrb	w1, [sp, #15]
   2b010:	ldrb	w0, [sp, #13]
   2b014:	cmp	w1, w0
   2b018:	b.ne	2b024 <OnPrint@@Base+0x107c>  // b.any
   2b01c:	mov	w0, #0x1                   	// #1
   2b020:	b	2b028 <OnPrint@@Base+0x1080>
   2b024:	mov	w0, #0x0                   	// #0
   2b028:	add	sp, sp, #0x10
   2b02c:	ret
   2b030:	str	x30, [sp, #-224]!
   2b034:	str	x0, [sp, #24]
   2b038:	str	x1, [sp, #16]
   2b03c:	ldr	x0, [sp, #24]
   2b040:	ldr	x1, [x0]
   2b044:	ldr	x0, [sp, #24]
   2b048:	ldr	x0, [x0, #16]
   2b04c:	add	x0, x1, x0
   2b050:	str	x0, [sp, #208]
   2b054:	ldr	x0, [sp, #24]
   2b058:	ldr	x0, [x0, #24]
   2b05c:	ldr	x1, [sp, #208]
   2b060:	cmp	x1, x0
   2b064:	b.hi	2b070 <OnPrint@@Base+0x10c8>  // b.pmore
   2b068:	mov	w0, #0x0                   	// #0
   2b06c:	b	2b724 <OnPrint@@Base+0x177c>
   2b070:	ldr	x0, [sp, #24]
   2b074:	ldr	x3, [x0, #24]
   2b078:	ldr	x0, [sp, #24]
   2b07c:	ldr	x0, [x0, #24]
   2b080:	ldr	x1, [sp, #208]
   2b084:	sub	x0, x1, x0
   2b088:	mov	x2, x0
   2b08c:	mov	w1, #0xa                   	// #10
   2b090:	mov	x0, x3
   2b094:	bl	21418 <__sanitizer_set_report_fd@@Base+0x2220>
   2b098:	str	x0, [sp, #216]
   2b09c:	ldr	x0, [sp, #216]
   2b0a0:	cmp	x0, #0x0
   2b0a4:	b.ne	2b0b0 <OnPrint@@Base+0x1108>  // b.any
   2b0a8:	ldr	x0, [sp, #208]
   2b0ac:	str	x0, [sp, #216]
   2b0b0:	ldr	x0, [sp, #24]
   2b0b4:	add	x0, x0, #0x18
   2b0b8:	bl	2a940 <OnPrint@@Base+0x998>
   2b0bc:	mov	x1, x0
   2b0c0:	ldr	x0, [sp, #16]
   2b0c4:	str	x1, [x0]
   2b0c8:	ldr	x0, [sp, #24]
   2b0cc:	ldr	x0, [x0, #24]
   2b0d0:	add	x2, x0, #0x1
   2b0d4:	ldr	x1, [sp, #24]
   2b0d8:	str	x2, [x1, #24]
   2b0dc:	ldrb	w0, [x0]
   2b0e0:	and	x0, x0, #0xff
   2b0e4:	str	x0, [sp, #200]
   2b0e8:	mov	x0, #0x2d                  	// #45
   2b0ec:	str	x0, [sp, #192]
   2b0f0:	ldr	x1, [sp, #200]
   2b0f4:	ldr	x0, [sp, #192]
   2b0f8:	cmp	x1, x0
   2b0fc:	cset	w0, ne  // ne = any
   2b100:	and	w0, w0, #0xff
   2b104:	and	x0, x0, #0xff
   2b108:	cmp	x0, #0x0
   2b10c:	b.eq	2b130 <OnPrint@@Base+0x1188>  // b.none
   2b110:	ldr	x4, [sp, #192]
   2b114:	ldr	x3, [sp, #200]
   2b118:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2b11c:	add	x2, x0, #0xc00
   2b120:	mov	w1, #0x28                  	// #40
   2b124:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2b128:	add	x0, x0, #0xc20
   2b12c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2b130:	ldr	x0, [sp, #24]
   2b134:	add	x0, x0, #0x18
   2b138:	bl	2a940 <OnPrint@@Base+0x998>
   2b13c:	mov	x1, x0
   2b140:	ldr	x0, [sp, #16]
   2b144:	str	x1, [x0, #8]
   2b148:	ldr	x0, [sp, #24]
   2b14c:	ldr	x0, [x0, #24]
   2b150:	add	x2, x0, #0x1
   2b154:	ldr	x1, [sp, #24]
   2b158:	str	x2, [x1, #24]
   2b15c:	ldrb	w0, [x0]
   2b160:	and	x0, x0, #0xff
   2b164:	str	x0, [sp, #184]
   2b168:	mov	x0, #0x20                  	// #32
   2b16c:	str	x0, [sp, #176]
   2b170:	ldr	x1, [sp, #184]
   2b174:	ldr	x0, [sp, #176]
   2b178:	cmp	x1, x0
   2b17c:	cset	w0, ne  // ne = any
   2b180:	and	w0, w0, #0xff
   2b184:	and	x0, x0, #0xff
   2b188:	cmp	x0, #0x0
   2b18c:	b.eq	2b1b0 <OnPrint@@Base+0x1208>  // b.none
   2b190:	ldr	x4, [sp, #176]
   2b194:	ldr	x3, [sp, #184]
   2b198:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2b19c:	add	x2, x0, #0xc68
   2b1a0:	mov	w1, #0x2a                  	// #42
   2b1a4:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2b1a8:	add	x0, x0, #0xc20
   2b1ac:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2b1b0:	ldr	x0, [sp, #24]
   2b1b4:	ldr	x0, [x0, #24]
   2b1b8:	ldrb	w0, [x0]
   2b1bc:	mov	w2, #0x72                  	// #114
   2b1c0:	mov	w1, #0x2d                  	// #45
   2b1c4:	bl	2afec <OnPrint@@Base+0x1044>
   2b1c8:	and	w0, w0, #0xff
   2b1cc:	and	x0, x0, #0xff
   2b1d0:	str	x0, [sp, #168]
   2b1d4:	str	xzr, [sp, #160]
   2b1d8:	ldr	x1, [sp, #168]
   2b1dc:	ldr	x0, [sp, #160]
   2b1e0:	cmp	x1, x0
   2b1e4:	cset	w0, eq  // eq = none
   2b1e8:	and	w0, w0, #0xff
   2b1ec:	and	x0, x0, #0xff
   2b1f0:	cmp	x0, #0x0
   2b1f4:	b.eq	2b218 <OnPrint@@Base+0x1270>  // b.none
   2b1f8:	ldr	x4, [sp, #160]
   2b1fc:	ldr	x3, [sp, #168]
   2b200:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2b204:	add	x2, x0, #0xc88
   2b208:	mov	w1, #0x2b                  	// #43
   2b20c:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2b210:	add	x0, x0, #0xc20
   2b214:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2b218:	ldr	x0, [sp, #16]
   2b21c:	str	xzr, [x0, #40]
   2b220:	ldr	x0, [sp, #24]
   2b224:	ldr	x0, [x0, #24]
   2b228:	add	x2, x0, #0x1
   2b22c:	ldr	x1, [sp, #24]
   2b230:	str	x2, [x1, #24]
   2b234:	ldrb	w0, [x0]
   2b238:	cmp	w0, #0x72
   2b23c:	cset	w0, eq  // eq = none
   2b240:	and	w0, w0, #0xff
   2b244:	cmp	w0, #0x0
   2b248:	b.eq	2b260 <OnPrint@@Base+0x12b8>  // b.none
   2b24c:	ldr	x0, [sp, #16]
   2b250:	ldr	x0, [x0, #40]
   2b254:	orr	x1, x0, #0x1
   2b258:	ldr	x0, [sp, #16]
   2b25c:	str	x1, [x0, #40]
   2b260:	ldr	x0, [sp, #24]
   2b264:	ldr	x0, [x0, #24]
   2b268:	ldrb	w0, [x0]
   2b26c:	mov	w2, #0x77                  	// #119
   2b270:	mov	w1, #0x2d                  	// #45
   2b274:	bl	2afec <OnPrint@@Base+0x1044>
   2b278:	and	w0, w0, #0xff
   2b27c:	and	x0, x0, #0xff
   2b280:	str	x0, [sp, #152]
   2b284:	str	xzr, [sp, #144]
   2b288:	ldr	x1, [sp, #152]
   2b28c:	ldr	x0, [sp, #144]
   2b290:	cmp	x1, x0
   2b294:	cset	w0, eq  // eq = none
   2b298:	and	w0, w0, #0xff
   2b29c:	and	x0, x0, #0xff
   2b2a0:	cmp	x0, #0x0
   2b2a4:	b.eq	2b2c8 <OnPrint@@Base+0x1320>  // b.none
   2b2a8:	ldr	x4, [sp, #144]
   2b2ac:	ldr	x3, [sp, #152]
   2b2b0:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2b2b4:	add	x2, x0, #0xcb8
   2b2b8:	mov	w1, #0x2e                  	// #46
   2b2bc:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2b2c0:	add	x0, x0, #0xc20
   2b2c4:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2b2c8:	ldr	x0, [sp, #24]
   2b2cc:	ldr	x0, [x0, #24]
   2b2d0:	add	x2, x0, #0x1
   2b2d4:	ldr	x1, [sp, #24]
   2b2d8:	str	x2, [x1, #24]
   2b2dc:	ldrb	w0, [x0]
   2b2e0:	cmp	w0, #0x77
   2b2e4:	cset	w0, eq  // eq = none
   2b2e8:	and	w0, w0, #0xff
   2b2ec:	cmp	w0, #0x0
   2b2f0:	b.eq	2b308 <OnPrint@@Base+0x1360>  // b.none
   2b2f4:	ldr	x0, [sp, #16]
   2b2f8:	ldr	x0, [x0, #40]
   2b2fc:	orr	x1, x0, #0x2
   2b300:	ldr	x0, [sp, #16]
   2b304:	str	x1, [x0, #40]
   2b308:	ldr	x0, [sp, #24]
   2b30c:	ldr	x0, [x0, #24]
   2b310:	ldrb	w0, [x0]
   2b314:	mov	w2, #0x78                  	// #120
   2b318:	mov	w1, #0x2d                  	// #45
   2b31c:	bl	2afec <OnPrint@@Base+0x1044>
   2b320:	and	w0, w0, #0xff
   2b324:	and	x0, x0, #0xff
   2b328:	str	x0, [sp, #136]
   2b32c:	str	xzr, [sp, #128]
   2b330:	ldr	x1, [sp, #136]
   2b334:	ldr	x0, [sp, #128]
   2b338:	cmp	x1, x0
   2b33c:	cset	w0, eq  // eq = none
   2b340:	and	w0, w0, #0xff
   2b344:	and	x0, x0, #0xff
   2b348:	cmp	x0, #0x0
   2b34c:	b.eq	2b370 <OnPrint@@Base+0x13c8>  // b.none
   2b350:	ldr	x4, [sp, #128]
   2b354:	ldr	x3, [sp, #136]
   2b358:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2b35c:	add	x2, x0, #0xce8
   2b360:	mov	w1, #0x30                  	// #48
   2b364:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2b368:	add	x0, x0, #0xc20
   2b36c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2b370:	ldr	x0, [sp, #24]
   2b374:	ldr	x0, [x0, #24]
   2b378:	add	x2, x0, #0x1
   2b37c:	ldr	x1, [sp, #24]
   2b380:	str	x2, [x1, #24]
   2b384:	ldrb	w0, [x0]
   2b388:	cmp	w0, #0x78
   2b38c:	cset	w0, eq  // eq = none
   2b390:	and	w0, w0, #0xff
   2b394:	cmp	w0, #0x0
   2b398:	b.eq	2b3b0 <OnPrint@@Base+0x1408>  // b.none
   2b39c:	ldr	x0, [sp, #16]
   2b3a0:	ldr	x0, [x0, #40]
   2b3a4:	orr	x1, x0, #0x4
   2b3a8:	ldr	x0, [sp, #16]
   2b3ac:	str	x1, [x0, #40]
   2b3b0:	ldr	x0, [sp, #24]
   2b3b4:	ldr	x0, [x0, #24]
   2b3b8:	ldrb	w0, [x0]
   2b3bc:	mov	w2, #0x70                  	// #112
   2b3c0:	mov	w1, #0x73                  	// #115
   2b3c4:	bl	2afec <OnPrint@@Base+0x1044>
   2b3c8:	and	w0, w0, #0xff
   2b3cc:	and	x0, x0, #0xff
   2b3d0:	str	x0, [sp, #120]
   2b3d4:	str	xzr, [sp, #112]
   2b3d8:	ldr	x1, [sp, #120]
   2b3dc:	ldr	x0, [sp, #112]
   2b3e0:	cmp	x1, x0
   2b3e4:	cset	w0, eq  // eq = none
   2b3e8:	and	w0, w0, #0xff
   2b3ec:	and	x0, x0, #0xff
   2b3f0:	cmp	x0, #0x0
   2b3f4:	b.eq	2b418 <OnPrint@@Base+0x1470>  // b.none
   2b3f8:	ldr	x4, [sp, #112]
   2b3fc:	ldr	x3, [sp, #120]
   2b400:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2b404:	add	x2, x0, #0xd18
   2b408:	mov	w1, #0x32                  	// #50
   2b40c:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2b410:	add	x0, x0, #0xc20
   2b414:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2b418:	ldr	x0, [sp, #24]
   2b41c:	ldr	x0, [x0, #24]
   2b420:	add	x2, x0, #0x1
   2b424:	ldr	x1, [sp, #24]
   2b428:	str	x2, [x1, #24]
   2b42c:	ldrb	w0, [x0]
   2b430:	cmp	w0, #0x73
   2b434:	cset	w0, eq  // eq = none
   2b438:	and	w0, w0, #0xff
   2b43c:	cmp	w0, #0x0
   2b440:	b.eq	2b458 <OnPrint@@Base+0x14b0>  // b.none
   2b444:	ldr	x0, [sp, #16]
   2b448:	ldr	x0, [x0, #40]
   2b44c:	orr	x1, x0, #0x8
   2b450:	ldr	x0, [sp, #16]
   2b454:	str	x1, [x0, #40]
   2b458:	ldr	x0, [sp, #24]
   2b45c:	ldr	x0, [x0, #24]
   2b460:	add	x2, x0, #0x1
   2b464:	ldr	x1, [sp, #24]
   2b468:	str	x2, [x1, #24]
   2b46c:	ldrb	w0, [x0]
   2b470:	and	x0, x0, #0xff
   2b474:	str	x0, [sp, #104]
   2b478:	mov	x0, #0x20                  	// #32
   2b47c:	str	x0, [sp, #96]
   2b480:	ldr	x1, [sp, #104]
   2b484:	ldr	x0, [sp, #96]
   2b488:	cmp	x1, x0
   2b48c:	cset	w0, ne  // ne = any
   2b490:	and	w0, w0, #0xff
   2b494:	and	x0, x0, #0xff
   2b498:	cmp	x0, #0x0
   2b49c:	b.eq	2b4c0 <OnPrint@@Base+0x1518>  // b.none
   2b4a0:	ldr	x4, [sp, #96]
   2b4a4:	ldr	x3, [sp, #104]
   2b4a8:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2b4ac:	add	x2, x0, #0xc68
   2b4b0:	mov	w1, #0x34                  	// #52
   2b4b4:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2b4b8:	add	x0, x0, #0xc20
   2b4bc:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2b4c0:	ldr	x0, [sp, #24]
   2b4c4:	add	x0, x0, #0x18
   2b4c8:	bl	2a940 <OnPrint@@Base+0x998>
   2b4cc:	mov	x1, x0
   2b4d0:	ldr	x0, [sp, #16]
   2b4d4:	str	x1, [x0, #16]
   2b4d8:	ldr	x0, [sp, #24]
   2b4dc:	ldr	x0, [x0, #24]
   2b4e0:	add	x2, x0, #0x1
   2b4e4:	ldr	x1, [sp, #24]
   2b4e8:	str	x2, [x1, #24]
   2b4ec:	ldrb	w0, [x0]
   2b4f0:	and	x0, x0, #0xff
   2b4f4:	str	x0, [sp, #88]
   2b4f8:	mov	x0, #0x20                  	// #32
   2b4fc:	str	x0, [sp, #80]
   2b500:	ldr	x1, [sp, #88]
   2b504:	ldr	x0, [sp, #80]
   2b508:	cmp	x1, x0
   2b50c:	cset	w0, ne  // ne = any
   2b510:	and	w0, w0, #0xff
   2b514:	and	x0, x0, #0xff
   2b518:	cmp	x0, #0x0
   2b51c:	b.eq	2b540 <OnPrint@@Base+0x1598>  // b.none
   2b520:	ldr	x4, [sp, #80]
   2b524:	ldr	x3, [sp, #88]
   2b528:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2b52c:	add	x2, x0, #0xc68
   2b530:	mov	w1, #0x36                  	// #54
   2b534:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2b538:	add	x0, x0, #0xc20
   2b53c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2b540:	ldr	x0, [sp, #24]
   2b544:	add	x0, x0, #0x18
   2b548:	bl	2a940 <OnPrint@@Base+0x998>
   2b54c:	ldr	x0, [sp, #24]
   2b550:	ldr	x0, [x0, #24]
   2b554:	add	x2, x0, #0x1
   2b558:	ldr	x1, [sp, #24]
   2b55c:	str	x2, [x1, #24]
   2b560:	ldrb	w0, [x0]
   2b564:	and	x0, x0, #0xff
   2b568:	str	x0, [sp, #72]
   2b56c:	mov	x0, #0x3a                  	// #58
   2b570:	str	x0, [sp, #64]
   2b574:	ldr	x1, [sp, #72]
   2b578:	ldr	x0, [sp, #64]
   2b57c:	cmp	x1, x0
   2b580:	cset	w0, ne  // ne = any
   2b584:	and	w0, w0, #0xff
   2b588:	and	x0, x0, #0xff
   2b58c:	cmp	x0, #0x0
   2b590:	b.eq	2b5b4 <OnPrint@@Base+0x160c>  // b.none
   2b594:	ldr	x4, [sp, #64]
   2b598:	ldr	x3, [sp, #72]
   2b59c:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2b5a0:	add	x2, x0, #0xd48
   2b5a4:	mov	w1, #0x38                  	// #56
   2b5a8:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2b5ac:	add	x0, x0, #0xc20
   2b5b0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2b5b4:	ldr	x0, [sp, #24]
   2b5b8:	add	x0, x0, #0x18
   2b5bc:	bl	2a940 <OnPrint@@Base+0x998>
   2b5c0:	ldr	x0, [sp, #24]
   2b5c4:	ldr	x0, [x0, #24]
   2b5c8:	add	x2, x0, #0x1
   2b5cc:	ldr	x1, [sp, #24]
   2b5d0:	str	x2, [x1, #24]
   2b5d4:	ldrb	w0, [x0]
   2b5d8:	and	x0, x0, #0xff
   2b5dc:	str	x0, [sp, #56]
   2b5e0:	mov	x0, #0x20                  	// #32
   2b5e4:	str	x0, [sp, #48]
   2b5e8:	ldr	x1, [sp, #56]
   2b5ec:	ldr	x0, [sp, #48]
   2b5f0:	cmp	x1, x0
   2b5f4:	cset	w0, ne  // ne = any
   2b5f8:	and	w0, w0, #0xff
   2b5fc:	and	x0, x0, #0xff
   2b600:	cmp	x0, #0x0
   2b604:	b.eq	2b628 <OnPrint@@Base+0x1680>  // b.none
   2b608:	ldr	x4, [sp, #48]
   2b60c:	ldr	x3, [sp, #56]
   2b610:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2b614:	add	x2, x0, #0xc68
   2b618:	mov	w1, #0x3a                  	// #58
   2b61c:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2b620:	add	x0, x0, #0xc20
   2b624:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2b628:	ldr	x0, [sp, #24]
   2b62c:	ldr	x0, [x0, #24]
   2b630:	ldrb	w0, [x0]
   2b634:	bl	2a8a4 <OnPrint@@Base+0x8fc>
   2b638:	and	w0, w0, #0xff
   2b63c:	cmp	w0, #0x0
   2b640:	b.eq	2b65c <OnPrint@@Base+0x16b4>  // b.none
   2b644:	ldr	x0, [sp, #24]
   2b648:	ldr	x0, [x0, #24]
   2b64c:	add	x1, x0, #0x1
   2b650:	ldr	x0, [sp, #24]
   2b654:	str	x1, [x0, #24]
   2b658:	b	2b628 <OnPrint@@Base+0x1680>
   2b65c:	ldr	x0, [sp, #24]
   2b660:	ldr	x0, [x0, #24]
   2b664:	ldr	x1, [sp, #216]
   2b668:	cmp	x1, x0
   2b66c:	b.ls	2b69c <OnPrint@@Base+0x16f4>  // b.plast
   2b670:	ldr	x0, [sp, #24]
   2b674:	ldr	x0, [x0, #24]
   2b678:	ldrb	w0, [x0]
   2b67c:	cmp	w0, #0x20
   2b680:	b.ne	2b69c <OnPrint@@Base+0x16f4>  // b.any
   2b684:	ldr	x0, [sp, #24]
   2b688:	ldr	x0, [x0, #24]
   2b68c:	add	x1, x0, #0x1
   2b690:	ldr	x0, [sp, #24]
   2b694:	str	x1, [x0, #24]
   2b698:	b	2b65c <OnPrint@@Base+0x16b4>
   2b69c:	ldr	x0, [sp, #16]
   2b6a0:	ldr	x0, [x0, #24]
   2b6a4:	cmp	x0, #0x0
   2b6a8:	b.eq	2b710 <OnPrint@@Base+0x1768>  // b.none
   2b6ac:	ldr	x0, [sp, #24]
   2b6b0:	ldr	x0, [x0, #24]
   2b6b4:	ldr	x1, [sp, #216]
   2b6b8:	sub	x0, x1, x0
   2b6bc:	mov	x2, x0
   2b6c0:	ldr	x0, [sp, #16]
   2b6c4:	ldr	x0, [x0, #32]
   2b6c8:	sub	x0, x0, #0x1
   2b6cc:	mov	x1, x0
   2b6d0:	mov	x0, x2
   2b6d4:	bl	aeac <__lsan_do_recoverable_leak_check@@Base+0xd20>
   2b6d8:	str	x0, [sp, #40]
   2b6dc:	ldr	x0, [sp, #16]
   2b6e0:	ldr	x3, [x0, #24]
   2b6e4:	ldr	x0, [sp, #24]
   2b6e8:	ldr	x0, [x0, #24]
   2b6ec:	ldr	x2, [sp, #40]
   2b6f0:	mov	x1, x0
   2b6f4:	mov	x0, x3
   2b6f8:	bl	21dfc <__sanitizer_set_report_fd@@Base+0x2c04>
   2b6fc:	ldr	x0, [sp, #16]
   2b700:	ldr	x1, [x0, #24]
   2b704:	ldr	x0, [sp, #40]
   2b708:	add	x0, x1, x0
   2b70c:	strb	wzr, [x0]
   2b710:	ldr	x0, [sp, #216]
   2b714:	add	x1, x0, #0x1
   2b718:	ldr	x0, [sp, #24]
   2b71c:	str	x1, [x0, #24]
   2b720:	mov	w0, #0x1                   	// #1
   2b724:	ldr	x30, [sp], #224
   2b728:	ret
   2b72c:	sub	sp, sp, #0x10
   2b730:	str	x0, [sp, #8]
   2b734:	ldr	x0, [sp, #8]
   2b738:	ldr	x0, [x0]
   2b73c:	ldr	w0, [x0, #8]
   2b740:	add	sp, sp, #0x10
   2b744:	ret
   2b748:	str	x30, [sp, #-32]!
   2b74c:	str	x0, [sp, #24]
   2b750:	ldr	x0, [sp, #24]
   2b754:	ldr	x0, [x0]
   2b758:	add	x0, x0, #0xc
   2b75c:	mov	w1, #0x1                   	// #1
   2b760:	bl	ab3c <__lsan_do_recoverable_leak_check@@Base+0x9b0>
   2b764:	and	w0, w0, #0xfffff
   2b768:	ldr	x30, [sp], #32
   2b76c:	ret
   2b770:	str	x30, [sp, #-64]!
   2b774:	str	x0, [sp, #24]
   2b778:	ldr	x0, [sp, #24]
   2b77c:	ldr	x0, [x0]
   2b780:	add	x0, x0, #0xc
   2b784:	mov	w2, #0x1                   	// #1
   2b788:	mov	w1, #0x1                   	// #1
   2b78c:	bl	2c0dc <OnPrint@@Base+0x2134>
   2b790:	and	w0, w0, #0xfffff
   2b794:	str	w0, [sp, #60]
   2b798:	ldr	w0, [sp, #60]
   2b79c:	add	w0, w0, #0x1
   2b7a0:	mov	w0, w0
   2b7a4:	str	x0, [sp, #48]
   2b7a8:	mov	x0, #0x100000              	// #1048576
   2b7ac:	str	x0, [sp, #40]
   2b7b0:	ldr	x1, [sp, #48]
   2b7b4:	ldr	x0, [sp, #40]
   2b7b8:	cmp	x1, x0
   2b7bc:	cset	w0, cs  // cs = hs, nlast
   2b7c0:	and	w0, w0, #0xff
   2b7c4:	and	x0, x0, #0xff
   2b7c8:	cmp	x0, #0x0
   2b7cc:	b.eq	2b7f0 <OnPrint@@Base+0x1848>  // b.none
   2b7d0:	ldr	x4, [sp, #40]
   2b7d4:	ldr	x3, [sp, #48]
   2b7d8:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2b7dc:	add	x2, x0, #0xe98
   2b7e0:	mov	w1, #0x61                  	// #97
   2b7e4:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2b7e8:	add	x0, x0, #0xec8
   2b7ec:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2b7f0:	nop
   2b7f4:	ldr	x30, [sp], #64
   2b7f8:	ret
   2b7fc:	str	x30, [sp, #-16]!
   2b800:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   2b804:	add	x0, x0, #0xc80
   2b808:	bl	2c148 <OnPrint@@Base+0x21a0>
   2b80c:	ldr	x30, [sp], #16
   2b810:	ret
   2b814:	str	x30, [sp, #-48]!
   2b818:	stp	x0, x1, [sp, #16]
   2b81c:	mov	x3, #0x0                   	// #0
   2b820:	ldp	x1, x2, [sp, #16]
   2b824:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   2b828:	add	x0, x0, #0xc80
   2b82c:	bl	2c168 <OnPrint@@Base+0x21c0>
   2b830:	str	x0, [sp, #40]
   2b834:	add	x0, sp, #0x28
   2b838:	bl	2bb98 <OnPrint@@Base+0x1bf0>
   2b83c:	and	w0, w0, #0xff
   2b840:	cmp	w0, #0x0
   2b844:	b.eq	2b854 <OnPrint@@Base+0x18ac>  // b.none
   2b848:	add	x0, sp, #0x28
   2b84c:	bl	2b72c <OnPrint@@Base+0x1784>
   2b850:	b	2b858 <OnPrint@@Base+0x18b0>
   2b854:	mov	w0, #0x0                   	// #0
   2b858:	ldr	x30, [sp], #48
   2b85c:	ret
   2b860:	str	x30, [sp, #-32]!
   2b864:	stp	x0, x1, [sp, #16]
   2b868:	mov	x3, #0x0                   	// #0
   2b86c:	ldp	x1, x2, [sp, #16]
   2b870:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   2b874:	add	x0, x0, #0xc80
   2b878:	bl	2c168 <OnPrint@@Base+0x21c0>
   2b87c:	ldr	x30, [sp], #32
   2b880:	ret
   2b884:	str	x30, [sp, #-32]!
   2b888:	str	w0, [sp, #28]
   2b88c:	ldr	w1, [sp, #28]
   2b890:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   2b894:	add	x0, x0, #0xc80
   2b898:	bl	2c47c <OnPrint@@Base+0x24d4>
   2b89c:	ldr	x30, [sp], #32
   2b8a0:	ret
   2b8a4:	str	x30, [sp, #-16]!
   2b8a8:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   2b8ac:	add	x0, x0, #0xc80
   2b8b0:	bl	2c60c <OnPrint@@Base+0x2664>
   2b8b4:	nop
   2b8b8:	ldr	x30, [sp], #16
   2b8bc:	ret
   2b8c0:	str	x30, [sp, #-16]!
   2b8c4:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   2b8c8:	add	x0, x0, #0xc80
   2b8cc:	bl	2c658 <OnPrint@@Base+0x26b0>
   2b8d0:	nop
   2b8d4:	ldr	x30, [sp], #16
   2b8d8:	ret
   2b8dc:	sub	sp, sp, #0x10
   2b8e0:	str	x0, [sp, #8]
   2b8e4:	str	x1, [sp]
   2b8e8:	ldr	x0, [sp, #8]
   2b8ec:	ldr	w1, [x0]
   2b8f0:	ldr	x0, [sp]
   2b8f4:	ldr	w0, [x0]
   2b8f8:	cmp	w1, w0
   2b8fc:	cset	w0, cc  // cc = lo, ul, last
   2b900:	and	w0, w0, #0xff
   2b904:	add	sp, sp, #0x10
   2b908:	ret
   2b90c:	stp	x19, x30, [sp, #-80]!
   2b910:	str	x0, [sp, #24]
   2b914:	ldr	x0, [sp, #24]
   2b918:	bl	2c6c8 <OnPrint@@Base+0x2720>
   2b91c:	ldr	x19, [sp, #24]
   2b920:	bl	2b7fc <OnPrint@@Base+0x1854>
   2b924:	ldr	x0, [x0]
   2b928:	add	x0, x0, #0x64
   2b92c:	mov	x1, x0
   2b930:	mov	x0, x19
   2b934:	bl	2c6e8 <OnPrint@@Base+0x2740>
   2b938:	str	wzr, [sp, #76]
   2b93c:	ldr	w1, [sp, #76]
   2b940:	mov	w0, #0xfffff               	// #1048575
   2b944:	cmp	w1, w0
   2b948:	b.gt	2b9cc <OnPrint@@Base+0x1a24>
   2b94c:	ldrsw	x0, [sp, #76]
   2b950:	lsl	x1, x0, #3
   2b954:	adrp	x0, 1d3000 <__asan_cplus_demangle_builtin_types@@Base+0x156b40>
   2b958:	add	x0, x0, #0xc80
   2b95c:	add	x0, x1, x0
   2b960:	str	x0, [sp, #56]
   2b964:	mov	w1, #0x2                   	// #2
   2b968:	ldr	x0, [sp, #56]
   2b96c:	bl	f49c <__sanitizer_get_allocated_size@@Base+0x93c>
   2b970:	str	x0, [sp, #48]
   2b974:	ldr	x0, [sp, #48]
   2b978:	and	x0, x0, #0xfffffffffffffffe
   2b97c:	str	x0, [sp, #64]
   2b980:	ldr	x0, [sp, #64]
   2b984:	cmp	x0, #0x0
   2b988:	b.eq	2b9bc <OnPrint@@Base+0x1a14>  // b.none
   2b98c:	ldr	x0, [sp, #64]
   2b990:	ldr	w0, [x0, #8]
   2b994:	str	w0, [sp, #32]
   2b998:	ldr	x0, [sp, #64]
   2b99c:	str	x0, [sp, #40]
   2b9a0:	ldr	x0, [sp, #24]
   2b9a4:	add	x1, sp, #0x20
   2b9a8:	bl	2c730 <OnPrint@@Base+0x2788>
   2b9ac:	ldr	x0, [sp, #64]
   2b9b0:	ldr	x0, [x0]
   2b9b4:	str	x0, [sp, #64]
   2b9b8:	b	2b980 <OnPrint@@Base+0x19d8>
   2b9bc:	ldr	w0, [sp, #76]
   2b9c0:	add	w0, w0, #0x1
   2b9c4:	str	w0, [sp, #76]
   2b9c8:	b	2b93c <OnPrint@@Base+0x1994>
   2b9cc:	ldr	x0, [sp, #24]
   2b9d0:	bl	2c814 <OnPrint@@Base+0x286c>
   2b9d4:	mov	x19, x0
   2b9d8:	ldr	x0, [sp, #24]
   2b9dc:	bl	2c82c <OnPrint@@Base+0x2884>
   2b9e0:	mov	x1, x0
   2b9e4:	adrp	x0, 2b000 <OnPrint@@Base+0x1058>
   2b9e8:	add	x2, x0, #0x8dc
   2b9ec:	mov	x0, x19
   2b9f0:	bl	2c844 <OnPrint@@Base+0x289c>
   2b9f4:	nop
   2b9f8:	ldp	x19, x30, [sp], #80
   2b9fc:	ret
   2ba00:	stp	x19, x30, [sp, #-96]!
   2ba04:	str	x0, [sp, #24]
   2ba08:	str	w1, [sp, #20]
   2ba0c:	ldr	x0, [sp, #24]
   2ba10:	bl	2c82c <OnPrint@@Base+0x2884>
   2ba14:	cmp	x0, #0x0
   2ba18:	cset	w0, eq  // eq = none
   2ba1c:	and	w0, w0, #0xff
   2ba20:	cmp	w0, #0x0
   2ba24:	b.eq	2ba38 <OnPrint@@Base+0x1a90>  // b.none
   2ba28:	add	x0, sp, #0x38
   2ba2c:	bl	2bae8 <OnPrint@@Base+0x1b40>
   2ba30:	ldp	x0, x1, [sp, #56]
   2ba34:	b	2bae0 <OnPrint@@Base+0x1b38>
   2ba38:	stp	xzr, xzr, [sp, #40]
   2ba3c:	ldr	w0, [sp, #20]
   2ba40:	str	w0, [sp, #40]
   2ba44:	ldr	x19, [sp, #24]
   2ba48:	ldr	x0, [sp, #24]
   2ba4c:	bl	2c82c <OnPrint@@Base+0x2884>
   2ba50:	mov	x2, x0
   2ba54:	add	x1, sp, #0x28
   2ba58:	adrp	x0, 2b000 <OnPrint@@Base+0x1058>
   2ba5c:	add	x4, x0, #0x8dc
   2ba60:	mov	x3, x1
   2ba64:	mov	x1, #0x0                   	// #0
   2ba68:	mov	x0, x19
   2ba6c:	bl	2cacc <OnPrint@@Base+0x2b24>
   2ba70:	str	x0, [sp, #88]
   2ba74:	ldr	x0, [sp, #24]
   2ba78:	bl	2c82c <OnPrint@@Base+0x2884>
   2ba7c:	mov	x1, x0
   2ba80:	ldr	x0, [sp, #88]
   2ba84:	cmp	x0, x1
   2ba88:	b.hi	2baa8 <OnPrint@@Base+0x1b00>  // b.pmore
   2ba8c:	ldr	x0, [sp, #24]
   2ba90:	ldr	x1, [sp, #88]
   2ba94:	bl	2cb54 <OnPrint@@Base+0x2bac>
   2ba98:	ldr	w0, [x0]
   2ba9c:	ldr	w1, [sp, #20]
   2baa0:	cmp	w1, w0
   2baa4:	b.eq	2bab0 <OnPrint@@Base+0x1b08>  // b.none
   2baa8:	mov	w0, #0x1                   	// #1
   2baac:	b	2bab4 <OnPrint@@Base+0x1b0c>
   2bab0:	mov	w0, #0x0                   	// #0
   2bab4:	cmp	w0, #0x0
   2bab8:	b.eq	2bacc <OnPrint@@Base+0x1b24>  // b.none
   2babc:	add	x0, sp, #0x48
   2bac0:	bl	2bae8 <OnPrint@@Base+0x1b40>
   2bac4:	ldp	x0, x1, [sp, #72]
   2bac8:	b	2bae0 <OnPrint@@Base+0x1b38>
   2bacc:	ldr	x0, [sp, #24]
   2bad0:	ldr	x1, [sp, #88]
   2bad4:	bl	2cb54 <OnPrint@@Base+0x2bac>
   2bad8:	ldr	x0, [x0, #8]
   2badc:	bl	2c088 <OnPrint@@Base+0x20e0>
   2bae0:	ldp	x19, x30, [sp], #96
   2bae4:	ret
   2bae8:	sub	sp, sp, #0x10
   2baec:	str	x0, [sp, #8]
   2baf0:	ldr	x0, [sp, #8]
   2baf4:	str	xzr, [x0]
   2baf8:	ldr	x0, [sp, #8]
   2bafc:	str	wzr, [x0, #8]
   2bb00:	ldr	x0, [sp, #8]
   2bb04:	str	wzr, [x0, #12]
   2bb08:	nop
   2bb0c:	add	sp, sp, #0x10
   2bb10:	ret
   2bb14:	sub	sp, sp, #0x20
   2bb18:	str	x0, [sp, #24]
   2bb1c:	str	x1, [sp, #16]
   2bb20:	str	w2, [sp, #12]
   2bb24:	str	w3, [sp, #8]
   2bb28:	ldr	x0, [sp, #24]
   2bb2c:	ldr	x1, [sp, #16]
   2bb30:	str	x1, [x0]
   2bb34:	ldr	x0, [sp, #24]
   2bb38:	ldr	w1, [sp, #12]
   2bb3c:	str	w1, [x0, #8]
   2bb40:	ldr	x0, [sp, #24]
   2bb44:	ldr	w1, [sp, #8]
   2bb48:	str	w1, [x0, #12]
   2bb4c:	nop
   2bb50:	add	sp, sp, #0x20
   2bb54:	ret
   2bb58:	sub	sp, sp, #0x10
   2bb5c:	str	x0, [sp, #8]
   2bb60:	ldr	x0, [sp, #8]
   2bb64:	str	xzr, [x0]
   2bb68:	nop
   2bb6c:	add	sp, sp, #0x10
   2bb70:	ret
   2bb74:	sub	sp, sp, #0x10
   2bb78:	str	x0, [sp, #8]
   2bb7c:	str	x1, [sp]
   2bb80:	ldr	x0, [sp, #8]
   2bb84:	ldr	x1, [sp]
   2bb88:	str	x1, [x0]
   2bb8c:	nop
   2bb90:	add	sp, sp, #0x10
   2bb94:	ret
   2bb98:	sub	sp, sp, #0x10
   2bb9c:	str	x0, [sp, #8]
   2bba0:	ldr	x0, [sp, #8]
   2bba4:	ldr	x0, [x0]
   2bba8:	cmp	x0, #0x0
   2bbac:	cset	w0, ne  // ne = any
   2bbb0:	and	w0, w0, #0xff
   2bbb4:	add	sp, sp, #0x10
   2bbb8:	ret
   2bbbc:	str	x30, [sp, #-48]!
   2bbc0:	str	x0, [sp, #24]
   2bbc4:	str	x1, [sp, #16]
   2bbc8:	ldr	x0, [sp, #24]
   2bbcc:	add	x0, x0, #0x8
   2bbd0:	mov	w1, #0x4                   	// #4
   2bbd4:	bl	f49c <__sanitizer_get_allocated_size@@Base+0x93c>
   2bbd8:	str	x0, [sp, #32]
   2bbdc:	ldr	x0, [sp, #24]
   2bbe0:	add	x0, x0, #0x10
   2bbe4:	mov	w1, #0x4                   	// #4
   2bbe8:	bl	f49c <__sanitizer_get_allocated_size@@Base+0x93c>
   2bbec:	str	x0, [sp, #40]
   2bbf0:	ldr	x0, [sp, #32]
   2bbf4:	cmp	x0, #0x0
   2bbf8:	b.eq	2bc14 <OnPrint@@Base+0x1c6c>  // b.none
   2bbfc:	ldr	x1, [sp, #32]
   2bc00:	ldr	x0, [sp, #16]
   2bc04:	add	x0, x1, x0
   2bc08:	ldr	x1, [sp, #40]
   2bc0c:	cmp	x1, x0
   2bc10:	b.cs	2bc1c <OnPrint@@Base+0x1c74>  // b.hs, b.nlast
   2bc14:	mov	x0, #0x0                   	// #0
   2bc18:	b	2bc58 <OnPrint@@Base+0x1cb0>
   2bc1c:	ldr	x0, [sp, #24]
   2bc20:	add	x4, x0, #0x8
   2bc24:	ldr	x1, [sp, #32]
   2bc28:	ldr	x0, [sp, #16]
   2bc2c:	add	x1, x1, x0
   2bc30:	add	x0, sp, #0x20
   2bc34:	mov	w3, #0x4                   	// #4
   2bc38:	mov	x2, x1
   2bc3c:	mov	x1, x0
   2bc40:	mov	x0, x4
   2bc44:	bl	2c114 <OnPrint@@Base+0x216c>
   2bc48:	and	w0, w0, #0xff
   2bc4c:	cmp	w0, #0x0
   2bc50:	b.eq	2bbc8 <OnPrint@@Base+0x1c20>  // b.none
   2bc54:	ldr	x0, [sp, #32]
   2bc58:	ldr	x30, [sp], #48
   2bc5c:	ret
   2bc60:	stp	x19, x30, [sp, #-64]!
   2bc64:	str	x0, [sp, #24]
   2bc68:	str	x1, [sp, #16]
   2bc6c:	ldr	x1, [sp, #16]
   2bc70:	ldr	x0, [sp, #24]
   2bc74:	bl	2bbbc <OnPrint@@Base+0x1c14>
   2bc78:	str	x0, [sp, #48]
   2bc7c:	ldr	x0, [sp, #48]
   2bc80:	cmp	x0, #0x0
   2bc84:	b.eq	2bc90 <OnPrint@@Base+0x1ce8>  // b.none
   2bc88:	ldr	x19, [sp, #48]
   2bc8c:	b	2bd50 <OnPrint@@Base+0x1da8>
   2bc90:	ldr	x1, [sp, #24]
   2bc94:	add	x0, sp, #0x20
   2bc98:	bl	f58c <__sanitizer_get_allocated_size@@Base+0xa2c>
   2bc9c:	ldr	x1, [sp, #16]
   2bca0:	ldr	x0, [sp, #24]
   2bca4:	bl	2bbbc <OnPrint@@Base+0x1c14>
   2bca8:	str	x0, [sp, #48]
   2bcac:	ldr	x0, [sp, #48]
   2bcb0:	cmp	x0, #0x0
   2bcb4:	b.eq	2bcc8 <OnPrint@@Base+0x1d20>  // b.none
   2bcb8:	ldr	x19, [sp, #48]
   2bcbc:	add	x0, sp, #0x20
   2bcc0:	bl	f5bc <__sanitizer_get_allocated_size@@Base+0xa5c>
   2bcc4:	b	2bd50 <OnPrint@@Base+0x1da8>
   2bcc8:	ldr	x0, [sp, #24]
   2bccc:	add	x0, x0, #0x8
   2bcd0:	mov	w2, #0x1                   	// #1
   2bcd4:	mov	x1, #0x0                   	// #0
   2bcd8:	bl	f520 <__sanitizer_get_allocated_size@@Base+0x9c0>
   2bcdc:	mov	x0, #0x10000               	// #65536
   2bce0:	str	x0, [sp, #56]
   2bce4:	ldr	x1, [sp, #56]
   2bce8:	ldr	x0, [sp, #16]
   2bcec:	cmp	x1, x0
   2bcf0:	b.cs	2bcfc <OnPrint@@Base+0x1d54>  // b.hs, b.nlast
   2bcf4:	ldr	x0, [sp, #16]
   2bcf8:	str	x0, [sp, #56]
   2bcfc:	mov	w2, #0x0                   	// #0
   2bd00:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2bd04:	add	x1, x0, #0xe88
   2bd08:	ldr	x0, [sp, #56]
   2bd0c:	bl	26a50 <__sanitizer_set_report_fd@@Base+0x7858>
   2bd10:	str	x0, [sp, #40]
   2bd14:	ldr	x0, [sp, #24]
   2bd18:	add	x3, x0, #0x10
   2bd1c:	ldr	x1, [sp, #40]
   2bd20:	ldr	x0, [sp, #56]
   2bd24:	add	x0, x1, x0
   2bd28:	mov	w2, #0x8                   	// #8
   2bd2c:	mov	x1, x0
   2bd30:	mov	x0, x3
   2bd34:	bl	f520 <__sanitizer_get_allocated_size@@Base+0x9c0>
   2bd38:	ldr	x0, [sp, #24]
   2bd3c:	add	x0, x0, #0x8
   2bd40:	mov	w2, #0x8                   	// #8
   2bd44:	ldr	x1, [sp, #40]
   2bd48:	bl	f520 <__sanitizer_get_allocated_size@@Base+0x9c0>
   2bd4c:	b	2bc9c <OnPrint@@Base+0x1cf4>
   2bd50:	mov	x0, x19
   2bd54:	ldp	x19, x30, [sp], #64
   2bd58:	ret
   2bd5c:	str	x30, [sp, #-32]!
   2bd60:	str	x0, [sp, #24]
   2bd64:	ldr	x1, [sp, #24]
   2bd68:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   2bd6c:	ldr	x0, [x0, #3528]
   2bd70:	bl	2bc60 <OnPrint@@Base+0x1cb8>
   2bd74:	ldr	x30, [sp], #32
   2bd78:	ret
   2bd7c:	str	x30, [sp, #-64]!
   2bd80:	str	x0, [sp, #40]
   2bd84:	str	w1, [sp, #36]
   2bd88:	str	x2, [sp, #24]
   2bd8c:	ldr	x0, [sp, #40]
   2bd90:	add	x0, x0, #0xc
   2bd94:	mov	w1, #0x1                   	// #1
   2bd98:	bl	ab3c <__lsan_do_recoverable_leak_check@@Base+0x9b0>
   2bd9c:	and	w0, w0, #0xfff00000
   2bda0:	str	w0, [sp, #52]
   2bda4:	ldr	w0, [sp, #36]
   2bda8:	and	w0, w0, #0xfff00000
   2bdac:	ldr	w1, [sp, #52]
   2bdb0:	cmp	w1, w0
   2bdb4:	b.ne	2bde8 <OnPrint@@Base+0x1e40>  // b.any
   2bdb8:	ldr	x0, [sp, #24]
   2bdbc:	ldr	w1, [x0, #8]
   2bdc0:	ldr	x0, [sp, #40]
   2bdc4:	ldr	w0, [x0, #16]
   2bdc8:	cmp	w1, w0
   2bdcc:	b.ne	2bde8 <OnPrint@@Base+0x1e40>  // b.any
   2bdd0:	ldr	x0, [sp, #24]
   2bdd4:	ldr	w1, [x0, #12]
   2bdd8:	ldr	x0, [sp, #40]
   2bddc:	ldr	w0, [x0, #20]
   2bde0:	cmp	w1, w0
   2bde4:	b.eq	2bdf0 <OnPrint@@Base+0x1e48>  // b.none
   2bde8:	mov	w0, #0x0                   	// #0
   2bdec:	b	2be60 <OnPrint@@Base+0x1eb8>
   2bdf0:	str	xzr, [sp, #56]
   2bdf4:	ldr	x0, [sp, #40]
   2bdf8:	ldr	w0, [x0, #16]
   2bdfc:	mov	w0, w0
   2be00:	ldr	x1, [sp, #56]
   2be04:	cmp	x1, x0
   2be08:	b.cs	2be5c <OnPrint@@Base+0x1eb4>  // b.hs, b.nlast
   2be0c:	ldr	x1, [sp, #40]
   2be10:	ldr	x0, [sp, #56]
   2be14:	add	x0, x0, #0x2
   2be18:	lsl	x0, x0, #3
   2be1c:	add	x0, x1, x0
   2be20:	ldr	x1, [x0, #8]
   2be24:	ldr	x0, [sp, #24]
   2be28:	ldr	x2, [x0]
   2be2c:	ldr	x0, [sp, #56]
   2be30:	lsl	x0, x0, #3
   2be34:	add	x0, x2, x0
   2be38:	ldr	x0, [x0]
   2be3c:	cmp	x1, x0
   2be40:	b.eq	2be4c <OnPrint@@Base+0x1ea4>  // b.none
   2be44:	mov	w0, #0x0                   	// #0
   2be48:	b	2be60 <OnPrint@@Base+0x1eb8>
   2be4c:	ldr	x0, [sp, #56]
   2be50:	add	x0, x0, #0x1
   2be54:	str	x0, [sp, #56]
   2be58:	b	2bdf4 <OnPrint@@Base+0x1e4c>
   2be5c:	mov	w0, #0x1                   	// #1
   2be60:	ldr	x30, [sp], #64
   2be64:	ret
   2be68:	sub	sp, sp, #0x10
   2be6c:	str	x0, [sp, #8]
   2be70:	ldr	x0, [sp, #8]
   2be74:	ldr	w0, [x0, #8]
   2be78:	sub	w0, w0, #0x1
   2be7c:	mov	w0, w0
   2be80:	add	x0, x0, #0x4
   2be84:	lsl	x0, x0, #3
   2be88:	add	sp, sp, #0x10
   2be8c:	ret
   2be90:	sub	sp, sp, #0x30
   2be94:	str	x0, [sp, #8]
   2be98:	mov	w0, #0xe995                	// #59797
   2be9c:	movk	w0, #0x5bd1, lsl #16
   2bea0:	str	w0, [sp, #28]
   2bea4:	mov	w0, #0xb28c                	// #45708
   2bea8:	movk	w0, #0x9747, lsl #16
   2beac:	str	w0, [sp, #24]
   2beb0:	mov	w0, #0x18                  	// #24
   2beb4:	str	w0, [sp, #20]
   2beb8:	ldr	x0, [sp, #8]
   2bebc:	ldr	w0, [x0, #8]
   2bec0:	lsl	w1, w0, #3
   2bec4:	mov	w0, #0xb28c                	// #45708
   2bec8:	movk	w0, #0x9747, lsl #16
   2becc:	eor	w0, w1, w0
   2bed0:	str	w0, [sp, #44]
   2bed4:	str	xzr, [sp, #32]
   2bed8:	ldr	x0, [sp, #8]
   2bedc:	ldr	w0, [x0, #8]
   2bee0:	mov	w0, w0
   2bee4:	ldr	x1, [sp, #32]
   2bee8:	cmp	x1, x0
   2beec:	b.cs	2bf7c <OnPrint@@Base+0x1fd4>  // b.hs, b.nlast
   2bef0:	ldr	x0, [sp, #8]
   2bef4:	ldr	x1, [x0]
   2bef8:	ldr	x0, [sp, #32]
   2befc:	lsl	x0, x0, #3
   2bf00:	add	x0, x1, x0
   2bf04:	ldr	x0, [x0]
   2bf08:	str	w0, [sp, #16]
   2bf0c:	ldr	w1, [sp, #16]
   2bf10:	mov	w0, #0xe995                	// #59797
   2bf14:	movk	w0, #0x5bd1, lsl #16
   2bf18:	mul	w0, w1, w0
   2bf1c:	str	w0, [sp, #16]
   2bf20:	ldr	w0, [sp, #16]
   2bf24:	lsr	w0, w0, #24
   2bf28:	ldr	w1, [sp, #16]
   2bf2c:	eor	w0, w1, w0
   2bf30:	str	w0, [sp, #16]
   2bf34:	ldr	w1, [sp, #16]
   2bf38:	mov	w0, #0xe995                	// #59797
   2bf3c:	movk	w0, #0x5bd1, lsl #16
   2bf40:	mul	w0, w1, w0
   2bf44:	str	w0, [sp, #16]
   2bf48:	ldr	w1, [sp, #44]
   2bf4c:	mov	w0, #0xe995                	// #59797
   2bf50:	movk	w0, #0x5bd1, lsl #16
   2bf54:	mul	w0, w1, w0
   2bf58:	str	w0, [sp, #44]
   2bf5c:	ldr	w1, [sp, #44]
   2bf60:	ldr	w0, [sp, #16]
   2bf64:	eor	w0, w1, w0
   2bf68:	str	w0, [sp, #44]
   2bf6c:	ldr	x0, [sp, #32]
   2bf70:	add	x0, x0, #0x1
   2bf74:	str	x0, [sp, #32]
   2bf78:	b	2bed8 <OnPrint@@Base+0x1f30>
   2bf7c:	ldr	w0, [sp, #44]
   2bf80:	lsr	w0, w0, #13
   2bf84:	ldr	w1, [sp, #44]
   2bf88:	eor	w0, w1, w0
   2bf8c:	str	w0, [sp, #44]
   2bf90:	ldr	w1, [sp, #44]
   2bf94:	mov	w0, #0xe995                	// #59797
   2bf98:	movk	w0, #0x5bd1, lsl #16
   2bf9c:	mul	w0, w1, w0
   2bfa0:	str	w0, [sp, #44]
   2bfa4:	ldr	w0, [sp, #44]
   2bfa8:	lsr	w0, w0, #15
   2bfac:	ldr	w1, [sp, #44]
   2bfb0:	eor	w0, w1, w0
   2bfb4:	str	w0, [sp, #44]
   2bfb8:	ldr	w0, [sp, #44]
   2bfbc:	add	sp, sp, #0x30
   2bfc0:	ret
   2bfc4:	sub	sp, sp, #0x10
   2bfc8:	str	x0, [sp, #8]
   2bfcc:	ldr	x0, [sp, #8]
   2bfd0:	ldr	w0, [x0, #8]
   2bfd4:	cmp	w0, #0x0
   2bfd8:	b.eq	2bff4 <OnPrint@@Base+0x204c>  // b.none
   2bfdc:	ldr	x0, [sp, #8]
   2bfe0:	ldr	x0, [x0]
   2bfe4:	cmp	x0, #0x0
   2bfe8:	b.eq	2bff4 <OnPrint@@Base+0x204c>  // b.none
   2bfec:	mov	w0, #0x1                   	// #1
   2bff0:	b	2bff8 <OnPrint@@Base+0x2050>
   2bff4:	mov	w0, #0x0                   	// #0
   2bff8:	add	sp, sp, #0x10
   2bffc:	ret
   2c000:	str	x30, [sp, #-48]!
   2c004:	str	x0, [sp, #40]
   2c008:	str	x1, [sp, #32]
   2c00c:	str	w2, [sp, #28]
   2c010:	ldr	x0, [sp, #40]
   2c014:	add	x3, x0, #0xc
   2c018:	ldr	w0, [sp, #28]
   2c01c:	and	w0, w0, #0xfff00000
   2c020:	mov	w2, #0x1                   	// #1
   2c024:	mov	w1, w0
   2c028:	mov	x0, x3
   2c02c:	bl	aad0 <__lsan_do_recoverable_leak_check@@Base+0x944>
   2c030:	ldr	x0, [sp, #32]
   2c034:	ldr	w1, [x0, #8]
   2c038:	ldr	x0, [sp, #40]
   2c03c:	str	w1, [x0, #16]
   2c040:	ldr	x0, [sp, #32]
   2c044:	ldr	w1, [x0, #12]
   2c048:	ldr	x0, [sp, #40]
   2c04c:	str	w1, [x0, #20]
   2c050:	ldr	x0, [sp, #40]
   2c054:	add	x3, x0, #0x18
   2c058:	ldr	x0, [sp, #32]
   2c05c:	ldr	x1, [x0]
   2c060:	ldr	x0, [sp, #40]
   2c064:	ldr	w0, [x0, #16]
   2c068:	mov	w0, w0
   2c06c:	lsl	x0, x0, #3
   2c070:	mov	x2, x0
   2c074:	mov	x0, x3
   2c078:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
   2c07c:	nop
   2c080:	ldr	x30, [sp], #48
   2c084:	ret
   2c088:	str	x30, [sp, #-48]!
   2c08c:	str	x0, [sp, #24]
   2c090:	ldr	x0, [sp, #24]
   2c094:	add	x1, x0, #0x18
   2c098:	ldr	x0, [sp, #24]
   2c09c:	ldr	w2, [x0, #16]
   2c0a0:	ldr	x0, [sp, #24]
   2c0a4:	ldr	w3, [x0, #20]
   2c0a8:	add	x0, sp, #0x20
   2c0ac:	bl	2bb14 <OnPrint@@Base+0x1b6c>
   2c0b0:	ldp	x0, x1, [sp, #32]
   2c0b4:	ldr	x30, [sp], #48
   2c0b8:	ret
   2c0bc:	str	x30, [sp, #-48]!
   2c0c0:	str	x0, [sp, #24]
   2c0c4:	add	x0, sp, #0x28
   2c0c8:	ldr	x1, [sp, #24]
   2c0cc:	bl	2bb74 <OnPrint@@Base+0x1bcc>
   2c0d0:	ldr	x0, [sp, #40]
   2c0d4:	ldr	x30, [sp], #48
   2c0d8:	ret
   2c0dc:	sub	sp, sp, #0x10
   2c0e0:	str	x0, [sp, #8]
   2c0e4:	str	w1, [sp, #4]
   2c0e8:	str	w2, [sp]
   2c0ec:	ldr	x0, [sp, #8]
   2c0f0:	ldr	w1, [sp, #4]
   2c0f4:	ldxr	w2, [x0]
   2c0f8:	add	w3, w2, w1
   2c0fc:	stlxr	w4, w3, [x0]
   2c100:	cbnz	w4, 2c0f4 <OnPrint@@Base+0x214c>
   2c104:	dmb	ish
   2c108:	mov	w0, w2
   2c10c:	add	sp, sp, #0x10
   2c110:	ret
   2c114:	str	x30, [sp, #-48]!
   2c118:	str	x0, [sp, #40]
   2c11c:	str	x1, [sp, #32]
   2c120:	str	x2, [sp, #24]
   2c124:	str	w3, [sp, #20]
   2c128:	ldr	w3, [sp, #20]
   2c12c:	ldr	x2, [sp, #24]
   2c130:	ldr	x1, [sp, #32]
   2c134:	ldr	x0, [sp, #40]
   2c138:	bl	2cbd0 <OnPrint@@Base+0x2c28>
   2c13c:	and	w0, w0, #0xff
   2c140:	ldr	x30, [sp], #48
   2c144:	ret
   2c148:	sub	sp, sp, #0x10
   2c14c:	str	x0, [sp, #8]
   2c150:	ldr	x1, [sp, #8]
   2c154:	mov	x0, #0x400                 	// #1024
   2c158:	movk	x0, #0x80, lsl #16
   2c15c:	add	x0, x1, x0
   2c160:	add	sp, sp, #0x10
   2c164:	ret
   2c168:	str	x30, [sp, #-176]!
   2c16c:	str	x0, [sp, #40]
   2c170:	stp	x1, x2, [sp, #24]
   2c174:	str	x3, [sp, #16]
   2c178:	ldr	x0, [sp, #16]
   2c17c:	cmp	x0, #0x0
   2c180:	b.eq	2c18c <OnPrint@@Base+0x21e4>  // b.none
   2c184:	ldr	x0, [sp, #16]
   2c188:	strb	wzr, [x0]
   2c18c:	add	x0, sp, #0x18
   2c190:	bl	2bfc4 <OnPrint@@Base+0x201c>
   2c194:	and	w0, w0, #0xff
   2c198:	eor	w0, w0, #0x1
   2c19c:	and	w0, w0, #0xff
   2c1a0:	cmp	w0, #0x0
   2c1a4:	b.eq	2c1b8 <OnPrint@@Base+0x2210>  // b.none
   2c1a8:	add	x0, sp, #0x30
   2c1ac:	bl	2bb58 <OnPrint@@Base+0x1bb0>
   2c1b0:	ldr	x0, [sp, #48]
   2c1b4:	b	2c474 <OnPrint@@Base+0x24cc>
   2c1b8:	add	x0, sp, #0x18
   2c1bc:	bl	2be90 <OnPrint@@Base+0x1ee8>
   2c1c0:	mov	w0, w0
   2c1c4:	str	x0, [sp, #168]
   2c1c8:	ldr	x0, [sp, #168]
   2c1cc:	and	x0, x0, #0xfffff
   2c1d0:	lsl	x0, x0, #3
   2c1d4:	ldr	x1, [sp, #40]
   2c1d8:	add	x0, x1, x0
   2c1dc:	str	x0, [sp, #160]
   2c1e0:	mov	w1, #0x2                   	// #2
   2c1e4:	ldr	x0, [sp, #160]
   2c1e8:	bl	f49c <__sanitizer_get_allocated_size@@Base+0x93c>
   2c1ec:	str	x0, [sp, #152]
   2c1f0:	ldr	x0, [sp, #152]
   2c1f4:	and	x0, x0, #0xfffffffffffffffe
   2c1f8:	str	x0, [sp, #144]
   2c1fc:	ldr	x0, [sp, #168]
   2c200:	mov	w3, w0
   2c204:	ldp	x1, x2, [sp, #24]
   2c208:	ldr	x0, [sp, #144]
   2c20c:	bl	2cc48 <OnPrint@@Base+0x2ca0>
   2c210:	str	x0, [sp, #136]
   2c214:	ldr	x0, [sp, #136]
   2c218:	cmp	x0, #0x0
   2c21c:	b.eq	2c22c <OnPrint@@Base+0x2284>  // b.none
   2c220:	ldr	x0, [sp, #136]
   2c224:	bl	2c0bc <OnPrint@@Base+0x2114>
   2c228:	b	2c474 <OnPrint@@Base+0x24cc>
   2c22c:	ldr	x0, [sp, #160]
   2c230:	bl	2cca8 <OnPrint@@Base+0x2d00>
   2c234:	str	x0, [sp, #128]
   2c238:	ldr	x1, [sp, #128]
   2c23c:	ldr	x0, [sp, #144]
   2c240:	cmp	x1, x0
   2c244:	b.eq	2c284 <OnPrint@@Base+0x22dc>  // b.none
   2c248:	ldr	x0, [sp, #168]
   2c24c:	mov	w3, w0
   2c250:	ldp	x1, x2, [sp, #24]
   2c254:	ldr	x0, [sp, #128]
   2c258:	bl	2cc48 <OnPrint@@Base+0x2ca0>
   2c25c:	str	x0, [sp, #136]
   2c260:	ldr	x0, [sp, #136]
   2c264:	cmp	x0, #0x0
   2c268:	b.eq	2c284 <OnPrint@@Base+0x22dc>  // b.none
   2c26c:	ldr	x1, [sp, #128]
   2c270:	ldr	x0, [sp, #160]
   2c274:	bl	2cd50 <OnPrint@@Base+0x2da8>
   2c278:	ldr	x0, [sp, #136]
   2c27c:	bl	2c0bc <OnPrint@@Base+0x2114>
   2c280:	b	2c474 <OnPrint@@Base+0x24cc>
   2c284:	ldr	x0, [sp, #168]
   2c288:	and	x0, x0, #0xfffff
   2c28c:	lsr	x0, x0, #12
   2c290:	str	x0, [sp, #120]
   2c294:	ldr	x0, [sp, #120]
   2c298:	add	x0, x0, #0x200, lsl #12
   2c29c:	lsl	x0, x0, #2
   2c2a0:	ldr	x1, [sp, #40]
   2c2a4:	add	x0, x1, x0
   2c2a8:	mov	w2, #0x1                   	// #1
   2c2ac:	mov	w1, #0x1                   	// #1
   2c2b0:	bl	2c0dc <OnPrint@@Base+0x2134>
   2c2b4:	add	w0, w0, #0x1
   2c2b8:	str	w0, [sp, #116]
   2c2bc:	ldr	x0, [sp, #40]
   2c2c0:	add	x0, x0, #0x800, lsl #12
   2c2c4:	ldr	x0, [x0, #1024]
   2c2c8:	add	x1, x0, #0x1
   2c2cc:	ldr	x0, [sp, #40]
   2c2d0:	add	x0, x0, #0x800, lsl #12
   2c2d4:	str	x1, [x0, #1024]
   2c2d8:	ldr	w0, [sp, #116]
   2c2dc:	str	x0, [sp, #104]
   2c2e0:	mov	x0, #0x800000              	// #8388608
   2c2e4:	str	x0, [sp, #96]
   2c2e8:	ldr	x1, [sp, #104]
   2c2ec:	ldr	x0, [sp, #96]
   2c2f0:	cmp	x1, x0
   2c2f4:	cset	w0, cs  // cs = hs, nlast
   2c2f8:	and	w0, w0, #0xff
   2c2fc:	and	x0, x0, #0xff
   2c300:	cmp	x0, #0x0
   2c304:	b.eq	2c328 <OnPrint@@Base+0x2380>  // b.none
   2c308:	ldr	x4, [sp, #96]
   2c30c:	ldr	x3, [sp, #104]
   2c310:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2c314:	add	x2, x0, #0xf10
   2c318:	mov	w1, #0x77                  	// #119
   2c31c:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2c320:	add	x0, x0, #0xf28
   2c324:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2c328:	ldr	x0, [sp, #120]
   2c32c:	lsl	w0, w0, #23
   2c330:	ldr	w1, [sp, #116]
   2c334:	orr	w0, w1, w0
   2c338:	str	w0, [sp, #116]
   2c33c:	ldr	w0, [sp, #116]
   2c340:	str	x0, [sp, #88]
   2c344:	str	xzr, [sp, #80]
   2c348:	ldr	x1, [sp, #88]
   2c34c:	ldr	x0, [sp, #80]
   2c350:	cmp	x1, x0
   2c354:	cset	w0, eq  // eq = none
   2c358:	and	w0, w0, #0xff
   2c35c:	and	x0, x0, #0xff
   2c360:	cmp	x0, #0x0
   2c364:	b.eq	2c388 <OnPrint@@Base+0x23e0>  // b.none
   2c368:	ldr	x4, [sp, #80]
   2c36c:	ldr	x3, [sp, #88]
   2c370:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2c374:	add	x2, x0, #0xf70
   2c378:	mov	w1, #0x79                  	// #121
   2c37c:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2c380:	add	x0, x0, #0xf28
   2c384:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2c388:	ldr	w0, [sp, #116]
   2c38c:	and	x0, x0, #0x7fffffff
   2c390:	str	x0, [sp, #72]
   2c394:	ldr	w0, [sp, #116]
   2c398:	str	x0, [sp, #64]
   2c39c:	ldr	x1, [sp, #72]
   2c3a0:	ldr	x0, [sp, #64]
   2c3a4:	cmp	x1, x0
   2c3a8:	cset	w0, ne  // ne = any
   2c3ac:	and	w0, w0, #0xff
   2c3b0:	and	x0, x0, #0xff
   2c3b4:	cmp	x0, #0x0
   2c3b8:	b.eq	2c3dc <OnPrint@@Base+0x2434>  // b.none
   2c3bc:	ldr	x4, [sp, #64]
   2c3c0:	ldr	x3, [sp, #72]
   2c3c4:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2c3c8:	add	x2, x0, #0xf80
   2c3cc:	mov	w1, #0x7a                  	// #122
   2c3d0:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2c3d4:	add	x0, x0, #0xf28
   2c3d8:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2c3dc:	add	x0, sp, #0x18
   2c3e0:	bl	2be68 <OnPrint@@Base+0x1ec0>
   2c3e4:	str	x0, [sp, #56]
   2c3e8:	ldr	x0, [sp, #56]
   2c3ec:	bl	2bd5c <OnPrint@@Base+0x1db4>
   2c3f0:	str	x0, [sp, #144]
   2c3f4:	ldr	x0, [sp, #40]
   2c3f8:	add	x0, x0, #0x800, lsl #12
   2c3fc:	ldr	x1, [x0, #1032]
   2c400:	ldr	x0, [sp, #56]
   2c404:	add	x1, x1, x0
   2c408:	ldr	x0, [sp, #40]
   2c40c:	add	x0, x0, #0x800, lsl #12
   2c410:	str	x1, [x0, #1032]
   2c414:	ldr	x0, [sp, #144]
   2c418:	ldr	w1, [sp, #116]
   2c41c:	str	w1, [x0, #8]
   2c420:	ldr	x0, [sp, #168]
   2c424:	mov	w1, w0
   2c428:	add	x0, sp, #0x18
   2c42c:	mov	w2, w1
   2c430:	mov	x1, x0
   2c434:	ldr	x0, [sp, #144]
   2c438:	bl	2c000 <OnPrint@@Base+0x2058>
   2c43c:	ldr	x0, [sp, #144]
   2c440:	ldr	x1, [sp, #128]
   2c444:	str	x1, [x0]
   2c448:	ldr	x1, [sp, #144]
   2c44c:	ldr	x0, [sp, #160]
   2c450:	bl	2cd50 <OnPrint@@Base+0x2da8>
   2c454:	ldr	x0, [sp, #16]
   2c458:	cmp	x0, #0x0
   2c45c:	b.eq	2c46c <OnPrint@@Base+0x24c4>  // b.none
   2c460:	ldr	x0, [sp, #16]
   2c464:	mov	w1, #0x1                   	// #1
   2c468:	strb	w1, [x0]
   2c46c:	ldr	x0, [sp, #144]
   2c470:	bl	2c0bc <OnPrint@@Base+0x2114>
   2c474:	ldr	x30, [sp], #176
   2c478:	ret
   2c47c:	str	x30, [sp, #-144]!
   2c480:	str	x0, [sp, #24]
   2c484:	str	w1, [sp, #20]
   2c488:	ldr	w0, [sp, #20]
   2c48c:	cmp	w0, #0x0
   2c490:	b.ne	2c4a4 <OnPrint@@Base+0x24fc>  // b.any
   2c494:	add	x0, sp, #0x20
   2c498:	bl	2bae8 <OnPrint@@Base+0x1b40>
   2c49c:	ldp	x0, x1, [sp, #32]
   2c4a0:	b	2c604 <OnPrint@@Base+0x265c>
   2c4a4:	ldr	w0, [sp, #20]
   2c4a8:	and	x0, x0, #0x7fffffff
   2c4ac:	str	x0, [sp, #120]
   2c4b0:	ldr	w0, [sp, #20]
   2c4b4:	str	x0, [sp, #112]
   2c4b8:	ldr	x1, [sp, #120]
   2c4bc:	ldr	x0, [sp, #112]
   2c4c0:	cmp	x1, x0
   2c4c4:	cset	w0, ne  // ne = any
   2c4c8:	and	w0, w0, #0xff
   2c4cc:	and	x0, x0, #0xff
   2c4d0:	cmp	x0, #0x0
   2c4d4:	b.eq	2c4f8 <OnPrint@@Base+0x2550>  // b.none
   2c4d8:	ldr	x4, [sp, #112]
   2c4dc:	ldr	x3, [sp, #120]
   2c4e0:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2c4e4:	add	x2, x0, #0xf80
   2c4e8:	mov	w1, #0x8c                  	// #140
   2c4ec:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2c4f0:	add	x0, x0, #0xf28
   2c4f4:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2c4f8:	ldr	w0, [sp, #20]
   2c4fc:	lsr	w0, w0, #23
   2c500:	mov	w0, w0
   2c504:	str	x0, [sp, #104]
   2c508:	str	wzr, [sp, #140]
   2c50c:	ldr	w0, [sp, #140]
   2c510:	cmp	w0, #0x1, lsl #12
   2c514:	b.eq	2c5f8 <OnPrint@@Base+0x2650>  // b.none
   2c518:	ldr	x0, [sp, #104]
   2c51c:	lsl	x1, x0, #12
   2c520:	ldrsw	x0, [sp, #140]
   2c524:	add	x0, x1, x0
   2c528:	str	x0, [sp, #96]
   2c52c:	ldr	x0, [sp, #96]
   2c530:	str	x0, [sp, #88]
   2c534:	mov	x0, #0x100000              	// #1048576
   2c538:	str	x0, [sp, #80]
   2c53c:	ldr	x1, [sp, #88]
   2c540:	ldr	x0, [sp, #80]
   2c544:	cmp	x1, x0
   2c548:	cset	w0, cs  // cs = hs, nlast
   2c54c:	and	w0, w0, #0xff
   2c550:	and	x0, x0, #0xff
   2c554:	cmp	x0, #0x0
   2c558:	b.eq	2c57c <OnPrint@@Base+0x25d4>  // b.none
   2c55c:	ldr	x4, [sp, #80]
   2c560:	ldr	x3, [sp, #88]
   2c564:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2c568:	add	x2, x0, #0xfb0
   2c56c:	mov	w1, #0x91                  	// #145
   2c570:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2c574:	add	x0, x0, #0xf28
   2c578:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2c57c:	ldr	x0, [sp, #96]
   2c580:	lsl	x0, x0, #3
   2c584:	ldr	x1, [sp, #24]
   2c588:	add	x0, x1, x0
   2c58c:	str	x0, [sp, #72]
   2c590:	mov	w1, #0x2                   	// #2
   2c594:	ldr	x0, [sp, #72]
   2c598:	bl	f49c <__sanitizer_get_allocated_size@@Base+0x93c>
   2c59c:	str	x0, [sp, #64]
   2c5a0:	ldr	x0, [sp, #64]
   2c5a4:	and	x0, x0, #0xfffffffffffffffe
   2c5a8:	str	x0, [sp, #128]
   2c5ac:	ldr	x0, [sp, #128]
   2c5b0:	cmp	x0, #0x0
   2c5b4:	b.eq	2c5e8 <OnPrint@@Base+0x2640>  // b.none
   2c5b8:	ldr	x0, [sp, #128]
   2c5bc:	ldr	w0, [x0, #8]
   2c5c0:	ldr	w1, [sp, #20]
   2c5c4:	cmp	w1, w0
   2c5c8:	b.ne	2c5d8 <OnPrint@@Base+0x2630>  // b.any
   2c5cc:	ldr	x0, [sp, #128]
   2c5d0:	bl	2c088 <OnPrint@@Base+0x20e0>
   2c5d4:	b	2c604 <OnPrint@@Base+0x265c>
   2c5d8:	ldr	x0, [sp, #128]
   2c5dc:	ldr	x0, [x0]
   2c5e0:	str	x0, [sp, #128]
   2c5e4:	b	2c5ac <OnPrint@@Base+0x2604>
   2c5e8:	ldr	w0, [sp, #140]
   2c5ec:	add	w0, w0, #0x1
   2c5f0:	str	w0, [sp, #140]
   2c5f4:	b	2c50c <OnPrint@@Base+0x2564>
   2c5f8:	add	x0, sp, #0x30
   2c5fc:	bl	2bae8 <OnPrint@@Base+0x1b40>
   2c600:	ldp	x0, x1, [sp, #48]
   2c604:	ldr	x30, [sp], #144
   2c608:	ret
   2c60c:	str	x30, [sp, #-48]!
   2c610:	str	x0, [sp, #24]
   2c614:	str	wzr, [sp, #44]
   2c618:	ldr	w1, [sp, #44]
   2c61c:	mov	w0, #0xfffff               	// #1048575
   2c620:	cmp	w1, w0
   2c624:	b.gt	2c64c <OnPrint@@Base+0x26a4>
   2c628:	ldrsw	x0, [sp, #44]
   2c62c:	lsl	x0, x0, #3
   2c630:	ldr	x1, [sp, #24]
   2c634:	add	x0, x1, x0
   2c638:	bl	2cca8 <OnPrint@@Base+0x2d00>
   2c63c:	ldr	w0, [sp, #44]
   2c640:	add	w0, w0, #0x1
   2c644:	str	w0, [sp, #44]
   2c648:	b	2c618 <OnPrint@@Base+0x2670>
   2c64c:	nop
   2c650:	ldr	x30, [sp], #48
   2c654:	ret
   2c658:	str	x30, [sp, #-64]!
   2c65c:	str	x0, [sp, #24]
   2c660:	str	wzr, [sp, #60]
   2c664:	ldr	w1, [sp, #60]
   2c668:	mov	w0, #0xfffff               	// #1048575
   2c66c:	cmp	w1, w0
   2c670:	b.gt	2c6bc <OnPrint@@Base+0x2714>
   2c674:	ldrsw	x0, [sp, #60]
   2c678:	lsl	x0, x0, #3
   2c67c:	ldr	x1, [sp, #24]
   2c680:	add	x0, x1, x0
   2c684:	str	x0, [sp, #48]
   2c688:	mov	w1, #0x1                   	// #1
   2c68c:	ldr	x0, [sp, #48]
   2c690:	bl	f49c <__sanitizer_get_allocated_size@@Base+0x93c>
   2c694:	str	x0, [sp, #40]
   2c698:	ldr	x0, [sp, #40]
   2c69c:	and	x0, x0, #0xfffffffffffffffe
   2c6a0:	mov	x1, x0
   2c6a4:	ldr	x0, [sp, #48]
   2c6a8:	bl	2cd50 <OnPrint@@Base+0x2da8>
   2c6ac:	ldr	w0, [sp, #60]
   2c6b0:	add	w0, w0, #0x1
   2c6b4:	str	w0, [sp, #60]
   2c6b8:	b	2c664 <OnPrint@@Base+0x26bc>
   2c6bc:	nop
   2c6c0:	ldr	x30, [sp], #64
   2c6c4:	ret
   2c6c8:	str	x30, [sp, #-32]!
   2c6cc:	str	x0, [sp, #24]
   2c6d0:	ldr	x0, [sp, #24]
   2c6d4:	mov	x1, #0x1                   	// #1
   2c6d8:	bl	2cd7c <OnPrint@@Base+0x2dd4>
   2c6dc:	nop
   2c6e0:	ldr	x30, [sp], #32
   2c6e4:	ret
   2c6e8:	str	x30, [sp, #-32]!
   2c6ec:	str	x0, [sp, #24]
   2c6f0:	str	x1, [sp, #16]
   2c6f4:	ldr	x0, [sp, #24]
   2c6f8:	bl	2cdb8 <OnPrint@@Base+0x2e10>
   2c6fc:	mov	x1, x0
   2c700:	ldr	x0, [sp, #16]
   2c704:	cmp	x0, x1
   2c708:	cset	w0, hi  // hi = pmore
   2c70c:	and	w0, w0, #0xff
   2c710:	cmp	w0, #0x0
   2c714:	b.eq	2c724 <OnPrint@@Base+0x277c>  // b.none
   2c718:	ldr	x1, [sp, #16]
   2c71c:	ldr	x0, [sp, #24]
   2c720:	bl	2cdd4 <OnPrint@@Base+0x2e2c>
   2c724:	nop
   2c728:	ldr	x30, [sp], #32
   2c72c:	ret
   2c730:	stp	x19, x30, [sp, #-64]!
   2c734:	str	x0, [sp, #24]
   2c738:	str	x1, [sp, #16]
   2c73c:	ldr	x0, [sp, #24]
   2c740:	ldr	x0, [x0, #16]
   2c744:	str	x0, [sp, #56]
   2c748:	ldr	x0, [sp, #24]
   2c74c:	bl	2cdb8 <OnPrint@@Base+0x2e10>
   2c750:	str	x0, [sp, #48]
   2c754:	ldr	x1, [sp, #56]
   2c758:	ldr	x0, [sp, #48]
   2c75c:	cmp	x1, x0
   2c760:	cset	w0, hi  // hi = pmore
   2c764:	and	w0, w0, #0xff
   2c768:	and	x0, x0, #0xff
   2c76c:	cmp	x0, #0x0
   2c770:	b.eq	2c794 <OnPrint@@Base+0x27ec>  // b.none
   2c774:	ldr	x4, [sp, #48]
   2c778:	ldr	x3, [sp, #56]
   2c77c:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2c780:	add	x2, x0, #0xfc8
   2c784:	mov	w1, #0x1be                 	// #446
   2c788:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2c78c:	add	x0, x0, #0xdb8
   2c790:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2c794:	ldr	x0, [sp, #24]
   2c798:	ldr	x19, [x0, #16]
   2c79c:	ldr	x0, [sp, #24]
   2c7a0:	bl	2cdb8 <OnPrint@@Base+0x2e10>
   2c7a4:	cmp	x19, x0
   2c7a8:	cset	w0, eq  // eq = none
   2c7ac:	and	w0, w0, #0xff
   2c7b0:	cmp	w0, #0x0
   2c7b4:	b.eq	2c7d8 <OnPrint@@Base+0x2830>  // b.none
   2c7b8:	ldr	x0, [sp, #24]
   2c7bc:	ldr	x0, [x0, #16]
   2c7c0:	add	x0, x0, #0x1
   2c7c4:	bl	a3cc <__lsan_do_recoverable_leak_check@@Base+0x240>
   2c7c8:	str	x0, [sp, #40]
   2c7cc:	ldr	x1, [sp, #40]
   2c7d0:	ldr	x0, [sp, #24]
   2c7d4:	bl	2cdd4 <OnPrint@@Base+0x2e2c>
   2c7d8:	ldr	x0, [sp, #24]
   2c7dc:	ldr	x1, [x0]
   2c7e0:	ldr	x0, [sp, #24]
   2c7e4:	ldr	x0, [x0, #16]
   2c7e8:	add	x3, x0, #0x1
   2c7ec:	ldr	x2, [sp, #24]
   2c7f0:	str	x3, [x2, #16]
   2c7f4:	lsl	x0, x0, #4
   2c7f8:	add	x0, x1, x0
   2c7fc:	mov	x2, #0x10                  	// #16
   2c800:	ldr	x1, [sp, #16]
   2c804:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
   2c808:	nop
   2c80c:	ldp	x19, x30, [sp], #64
   2c810:	ret
   2c814:	sub	sp, sp, #0x10
   2c818:	str	x0, [sp, #8]
   2c81c:	ldr	x0, [sp, #8]
   2c820:	ldr	x0, [x0]
   2c824:	add	sp, sp, #0x10
   2c828:	ret
   2c82c:	sub	sp, sp, #0x10
   2c830:	str	x0, [sp, #8]
   2c834:	ldr	x0, [sp, #8]
   2c838:	ldr	x0, [x0, #16]
   2c83c:	add	sp, sp, #0x10
   2c840:	ret
   2c844:	str	x30, [sp, #-112]!
   2c848:	str	x0, [sp, #40]
   2c84c:	str	x1, [sp, #32]
   2c850:	str	x2, [sp, #24]
   2c854:	ldr	x0, [sp, #32]
   2c858:	cmp	x0, #0x1
   2c85c:	b.ls	2cac0 <OnPrint@@Base+0x2b18>  // b.plast
   2c860:	mov	x0, #0x1                   	// #1
   2c864:	str	x0, [sp, #104]
   2c868:	ldr	x1, [sp, #104]
   2c86c:	ldr	x0, [sp, #32]
   2c870:	cmp	x1, x0
   2c874:	b.cs	2c924 <OnPrint@@Base+0x297c>  // b.hs, b.nlast
   2c878:	ldr	x0, [sp, #104]
   2c87c:	str	x0, [sp, #96]
   2c880:	ldr	x0, [sp, #96]
   2c884:	cmp	x0, #0x0
   2c888:	b.eq	2c914 <OnPrint@@Base+0x296c>  // b.none
   2c88c:	ldr	x0, [sp, #96]
   2c890:	sub	x0, x0, #0x1
   2c894:	lsr	x0, x0, #1
   2c898:	str	x0, [sp, #64]
   2c89c:	ldr	x0, [sp, #64]
   2c8a0:	lsl	x0, x0, #4
   2c8a4:	ldr	x1, [sp, #40]
   2c8a8:	add	x3, x1, x0
   2c8ac:	ldr	x0, [sp, #96]
   2c8b0:	lsl	x0, x0, #4
   2c8b4:	ldr	x1, [sp, #40]
   2c8b8:	add	x0, x1, x0
   2c8bc:	ldr	x2, [sp, #24]
   2c8c0:	mov	x1, x0
   2c8c4:	mov	x0, x3
   2c8c8:	blr	x2
   2c8cc:	and	w0, w0, #0xff
   2c8d0:	cmp	w0, #0x0
   2c8d4:	b.eq	2c910 <OnPrint@@Base+0x2968>  // b.none
   2c8d8:	ldr	x0, [sp, #96]
   2c8dc:	lsl	x0, x0, #4
   2c8e0:	ldr	x1, [sp, #40]
   2c8e4:	add	x2, x1, x0
   2c8e8:	ldr	x0, [sp, #64]
   2c8ec:	lsl	x0, x0, #4
   2c8f0:	ldr	x1, [sp, #40]
   2c8f4:	add	x0, x1, x0
   2c8f8:	mov	x1, x0
   2c8fc:	mov	x0, x2
   2c900:	bl	2cf14 <OnPrint@@Base+0x2f6c>
   2c904:	ldr	x0, [sp, #64]
   2c908:	str	x0, [sp, #96]
   2c90c:	b	2c880 <OnPrint@@Base+0x28d8>
   2c910:	nop
   2c914:	ldr	x0, [sp, #104]
   2c918:	add	x0, x0, #0x1
   2c91c:	str	x0, [sp, #104]
   2c920:	b	2c868 <OnPrint@@Base+0x28c0>
   2c924:	ldr	x0, [sp, #32]
   2c928:	sub	x0, x0, #0x1
   2c92c:	str	x0, [sp, #88]
   2c930:	ldr	x0, [sp, #88]
   2c934:	cmp	x0, #0x0
   2c938:	b.eq	2cac4 <OnPrint@@Base+0x2b1c>  // b.none
   2c93c:	ldr	x0, [sp, #88]
   2c940:	lsl	x0, x0, #4
   2c944:	ldr	x1, [sp, #40]
   2c948:	add	x0, x1, x0
   2c94c:	mov	x1, x0
   2c950:	ldr	x0, [sp, #40]
   2c954:	bl	2cf14 <OnPrint@@Base+0x2f6c>
   2c958:	str	xzr, [sp, #80]
   2c95c:	ldr	x1, [sp, #80]
   2c960:	ldr	x0, [sp, #88]
   2c964:	cmp	x1, x0
   2c968:	b.cs	2cab0 <OnPrint@@Base+0x2b08>  // b.hs, b.nlast
   2c96c:	ldr	x0, [sp, #80]
   2c970:	lsl	x0, x0, #1
   2c974:	add	x0, x0, #0x1
   2c978:	str	x0, [sp, #56]
   2c97c:	ldr	x0, [sp, #80]
   2c980:	add	x0, x0, #0x1
   2c984:	lsl	x0, x0, #1
   2c988:	str	x0, [sp, #48]
   2c98c:	ldr	x0, [sp, #80]
   2c990:	str	x0, [sp, #72]
   2c994:	ldr	x1, [sp, #56]
   2c998:	ldr	x0, [sp, #88]
   2c99c:	cmp	x1, x0
   2c9a0:	b.cs	2c9e8 <OnPrint@@Base+0x2a40>  // b.hs, b.nlast
   2c9a4:	ldr	x0, [sp, #72]
   2c9a8:	lsl	x0, x0, #4
   2c9ac:	ldr	x1, [sp, #40]
   2c9b0:	add	x3, x1, x0
   2c9b4:	ldr	x0, [sp, #56]
   2c9b8:	lsl	x0, x0, #4
   2c9bc:	ldr	x1, [sp, #40]
   2c9c0:	add	x0, x1, x0
   2c9c4:	ldr	x2, [sp, #24]
   2c9c8:	mov	x1, x0
   2c9cc:	mov	x0, x3
   2c9d0:	blr	x2
   2c9d4:	and	w0, w0, #0xff
   2c9d8:	cmp	w0, #0x0
   2c9dc:	b.eq	2c9e8 <OnPrint@@Base+0x2a40>  // b.none
   2c9e0:	mov	w0, #0x1                   	// #1
   2c9e4:	b	2c9ec <OnPrint@@Base+0x2a44>
   2c9e8:	mov	w0, #0x0                   	// #0
   2c9ec:	cmp	w0, #0x0
   2c9f0:	b.eq	2c9fc <OnPrint@@Base+0x2a54>  // b.none
   2c9f4:	ldr	x0, [sp, #56]
   2c9f8:	str	x0, [sp, #72]
   2c9fc:	ldr	x1, [sp, #48]
   2ca00:	ldr	x0, [sp, #88]
   2ca04:	cmp	x1, x0
   2ca08:	b.cs	2ca50 <OnPrint@@Base+0x2aa8>  // b.hs, b.nlast
   2ca0c:	ldr	x0, [sp, #72]
   2ca10:	lsl	x0, x0, #4
   2ca14:	ldr	x1, [sp, #40]
   2ca18:	add	x3, x1, x0
   2ca1c:	ldr	x0, [sp, #48]
   2ca20:	lsl	x0, x0, #4
   2ca24:	ldr	x1, [sp, #40]
   2ca28:	add	x0, x1, x0
   2ca2c:	ldr	x2, [sp, #24]
   2ca30:	mov	x1, x0
   2ca34:	mov	x0, x3
   2ca38:	blr	x2
   2ca3c:	and	w0, w0, #0xff
   2ca40:	cmp	w0, #0x0
   2ca44:	b.eq	2ca50 <OnPrint@@Base+0x2aa8>  // b.none
   2ca48:	mov	w0, #0x1                   	// #1
   2ca4c:	b	2ca54 <OnPrint@@Base+0x2aac>
   2ca50:	mov	w0, #0x0                   	// #0
   2ca54:	cmp	w0, #0x0
   2ca58:	b.eq	2ca64 <OnPrint@@Base+0x2abc>  // b.none
   2ca5c:	ldr	x0, [sp, #48]
   2ca60:	str	x0, [sp, #72]
   2ca64:	ldr	x1, [sp, #72]
   2ca68:	ldr	x0, [sp, #80]
   2ca6c:	cmp	x1, x0
   2ca70:	b.eq	2caac <OnPrint@@Base+0x2b04>  // b.none
   2ca74:	ldr	x0, [sp, #80]
   2ca78:	lsl	x0, x0, #4
   2ca7c:	ldr	x1, [sp, #40]
   2ca80:	add	x2, x1, x0
   2ca84:	ldr	x0, [sp, #72]
   2ca88:	lsl	x0, x0, #4
   2ca8c:	ldr	x1, [sp, #40]
   2ca90:	add	x0, x1, x0
   2ca94:	mov	x1, x0
   2ca98:	mov	x0, x2
   2ca9c:	bl	2cf14 <OnPrint@@Base+0x2f6c>
   2caa0:	ldr	x0, [sp, #72]
   2caa4:	str	x0, [sp, #80]
   2caa8:	b	2c95c <OnPrint@@Base+0x29b4>
   2caac:	nop
   2cab0:	ldr	x0, [sp, #88]
   2cab4:	sub	x0, x0, #0x1
   2cab8:	str	x0, [sp, #88]
   2cabc:	b	2c930 <OnPrint@@Base+0x2988>
   2cac0:	nop
   2cac4:	ldr	x30, [sp], #112
   2cac8:	ret
   2cacc:	str	x30, [sp, #-80]!
   2cad0:	str	x0, [sp, #56]
   2cad4:	str	x1, [sp, #48]
   2cad8:	str	x2, [sp, #40]
   2cadc:	str	x3, [sp, #32]
   2cae0:	str	x4, [sp, #24]
   2cae4:	ldr	x1, [sp, #40]
   2cae8:	ldr	x0, [sp, #48]
   2caec:	cmp	x1, x0
   2caf0:	b.ls	2cb48 <OnPrint@@Base+0x2ba0>  // b.plast
   2caf4:	ldr	x1, [sp, #48]
   2caf8:	ldr	x0, [sp, #40]
   2cafc:	add	x0, x1, x0
   2cb00:	lsr	x0, x0, #1
   2cb04:	str	x0, [sp, #72]
   2cb08:	ldr	x0, [sp, #56]
   2cb0c:	ldr	x1, [sp, #72]
   2cb10:	bl	2cf54 <OnPrint@@Base+0x2fac>
   2cb14:	ldr	x2, [sp, #24]
   2cb18:	ldr	x1, [sp, #32]
   2cb1c:	blr	x2
   2cb20:	and	w0, w0, #0xff
   2cb24:	cmp	w0, #0x0
   2cb28:	b.eq	2cb3c <OnPrint@@Base+0x2b94>  // b.none
   2cb2c:	ldr	x0, [sp, #72]
   2cb30:	add	x0, x0, #0x1
   2cb34:	str	x0, [sp, #48]
   2cb38:	b	2cae4 <OnPrint@@Base+0x2b3c>
   2cb3c:	ldr	x0, [sp, #72]
   2cb40:	str	x0, [sp, #40]
   2cb44:	b	2cae4 <OnPrint@@Base+0x2b3c>
   2cb48:	ldr	x0, [sp, #48]
   2cb4c:	ldr	x30, [sp], #80
   2cb50:	ret
   2cb54:	str	x30, [sp, #-48]!
   2cb58:	str	x0, [sp, #24]
   2cb5c:	str	x1, [sp, #16]
   2cb60:	ldr	x0, [sp, #16]
   2cb64:	str	x0, [sp, #40]
   2cb68:	ldr	x0, [sp, #24]
   2cb6c:	ldr	x0, [x0, #16]
   2cb70:	str	x0, [sp, #32]
   2cb74:	ldr	x1, [sp, #40]
   2cb78:	ldr	x0, [sp, #32]
   2cb7c:	cmp	x1, x0
   2cb80:	cset	w0, cs  // cs = hs, nlast
   2cb84:	and	w0, w0, #0xff
   2cb88:	and	x0, x0, #0xff
   2cb8c:	cmp	x0, #0x0
   2cb90:	b.eq	2cbb4 <OnPrint@@Base+0x2c0c>  // b.none
   2cb94:	ldr	x4, [sp, #32]
   2cb98:	ldr	x3, [sp, #40]
   2cb9c:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2cba0:	add	x2, x0, #0xfe8
   2cba4:	mov	w1, #0x1b6                 	// #438
   2cba8:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2cbac:	add	x0, x0, #0xdb8
   2cbb0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2cbb4:	ldr	x0, [sp, #24]
   2cbb8:	ldr	x1, [x0]
   2cbbc:	ldr	x0, [sp, #16]
   2cbc0:	lsl	x0, x0, #4
   2cbc4:	add	x0, x1, x0
   2cbc8:	ldr	x30, [sp], #48
   2cbcc:	ret
   2cbd0:	sub	sp, sp, #0x30
   2cbd4:	str	x0, [sp, #24]
   2cbd8:	str	x1, [sp, #16]
   2cbdc:	str	x2, [sp, #8]
   2cbe0:	str	w3, [sp, #4]
   2cbe4:	ldr	x0, [sp, #16]
   2cbe8:	ldr	x0, [x0]
   2cbec:	str	x0, [sp, #40]
   2cbf0:	ldr	x1, [sp, #24]
   2cbf4:	ldr	x2, [sp, #40]
   2cbf8:	ldr	x3, [sp, #8]
   2cbfc:	ldxr	x0, [x1]
   2cc00:	cmp	x0, x2
   2cc04:	b.ne	2cc10 <OnPrint@@Base+0x2c68>  // b.any
   2cc08:	stlxr	w4, x3, [x1]
   2cc0c:	cbnz	w4, 2cbfc <OnPrint@@Base+0x2c54>
   2cc10:	dmb	ish
   2cc14:	str	x0, [sp, #32]
   2cc18:	ldr	x1, [sp, #32]
   2cc1c:	ldr	x0, [sp, #40]
   2cc20:	cmp	x1, x0
   2cc24:	b.ne	2cc30 <OnPrint@@Base+0x2c88>  // b.any
   2cc28:	mov	w0, #0x1                   	// #1
   2cc2c:	b	2cc40 <OnPrint@@Base+0x2c98>
   2cc30:	ldr	x0, [sp, #16]
   2cc34:	ldr	x1, [sp, #32]
   2cc38:	str	x1, [x0]
   2cc3c:	mov	w0, #0x0                   	// #0
   2cc40:	add	sp, sp, #0x30
   2cc44:	ret
   2cc48:	str	x30, [sp, #-48]!
   2cc4c:	str	x0, [sp, #40]
   2cc50:	stp	x1, x2, [sp, #24]
   2cc54:	str	w3, [sp, #20]
   2cc58:	ldr	x0, [sp, #40]
   2cc5c:	cmp	x0, #0x0
   2cc60:	b.eq	2cc9c <OnPrint@@Base+0x2cf4>  // b.none
   2cc64:	add	x0, sp, #0x18
   2cc68:	mov	x2, x0
   2cc6c:	ldr	w1, [sp, #20]
   2cc70:	ldr	x0, [sp, #40]
   2cc74:	bl	2bd7c <OnPrint@@Base+0x1dd4>
   2cc78:	and	w0, w0, #0xff
   2cc7c:	cmp	w0, #0x0
   2cc80:	b.eq	2cc8c <OnPrint@@Base+0x2ce4>  // b.none
   2cc84:	ldr	x0, [sp, #40]
   2cc88:	b	2cca0 <OnPrint@@Base+0x2cf8>
   2cc8c:	ldr	x0, [sp, #40]
   2cc90:	ldr	x0, [x0]
   2cc94:	str	x0, [sp, #40]
   2cc98:	b	2cc58 <OnPrint@@Base+0x2cb0>
   2cc9c:	mov	x0, #0x0                   	// #0
   2cca0:	ldr	x30, [sp], #48
   2cca4:	ret
   2cca8:	str	x30, [sp, #-48]!
   2ccac:	str	x0, [sp, #24]
   2ccb0:	str	wzr, [sp, #44]
   2ccb4:	mov	w1, #0x1                   	// #1
   2ccb8:	ldr	x0, [sp, #24]
   2ccbc:	bl	f49c <__sanitizer_get_allocated_size@@Base+0x93c>
   2ccc0:	str	x0, [sp, #32]
   2ccc4:	ldr	x0, [sp, #32]
   2ccc8:	and	x0, x0, #0x1
   2cccc:	cmp	x0, #0x0
   2ccd0:	b.ne	2cd08 <OnPrint@@Base+0x2d60>  // b.any
   2ccd4:	ldr	x0, [sp, #32]
   2ccd8:	orr	x1, x0, #0x1
   2ccdc:	add	x0, sp, #0x20
   2cce0:	mov	w3, #0x4                   	// #4
   2cce4:	mov	x2, x1
   2cce8:	mov	x1, x0
   2ccec:	ldr	x0, [sp, #24]
   2ccf0:	bl	2c114 <OnPrint@@Base+0x216c>
   2ccf4:	and	w0, w0, #0xff
   2ccf8:	cmp	w0, #0x0
   2ccfc:	b.eq	2cd08 <OnPrint@@Base+0x2d60>  // b.none
   2cd00:	mov	w0, #0x1                   	// #1
   2cd04:	b	2cd0c <OnPrint@@Base+0x2d64>
   2cd08:	mov	w0, #0x0                   	// #0
   2cd0c:	cmp	w0, #0x0
   2cd10:	b.eq	2cd1c <OnPrint@@Base+0x2d74>  // b.none
   2cd14:	ldr	x0, [sp, #32]
   2cd18:	b	2cd48 <OnPrint@@Base+0x2da0>
   2cd1c:	ldr	w0, [sp, #44]
   2cd20:	cmp	w0, #0x9
   2cd24:	b.gt	2cd34 <OnPrint@@Base+0x2d8c>
   2cd28:	mov	w0, #0xa                   	// #10
   2cd2c:	bl	eb78 <__sanitizer_get_allocated_size@@Base+0x18>
   2cd30:	b	2cd38 <OnPrint@@Base+0x2d90>
   2cd34:	bl	23334 <__sanitizer_set_report_fd@@Base+0x413c>
   2cd38:	ldr	w0, [sp, #44]
   2cd3c:	add	w0, w0, #0x1
   2cd40:	str	w0, [sp, #44]
   2cd44:	b	2ccb4 <OnPrint@@Base+0x2d0c>
   2cd48:	ldr	x30, [sp], #48
   2cd4c:	ret
   2cd50:	str	x30, [sp, #-32]!
   2cd54:	str	x0, [sp, #24]
   2cd58:	str	x1, [sp, #16]
   2cd5c:	ldr	x0, [sp, #16]
   2cd60:	mov	w2, #0x8                   	// #8
   2cd64:	mov	x1, x0
   2cd68:	ldr	x0, [sp, #24]
   2cd6c:	bl	f520 <__sanitizer_get_allocated_size@@Base+0x9c0>
   2cd70:	nop
   2cd74:	ldr	x30, [sp], #32
   2cd78:	ret
   2cd7c:	str	x30, [sp, #-32]!
   2cd80:	str	x0, [sp, #24]
   2cd84:	str	x1, [sp, #16]
   2cd88:	ldr	x0, [sp, #24]
   2cd8c:	str	xzr, [x0, #8]
   2cd90:	ldr	x0, [sp, #24]
   2cd94:	str	xzr, [x0, #16]
   2cd98:	ldr	x0, [sp, #24]
   2cd9c:	str	xzr, [x0]
   2cda0:	ldr	x1, [sp, #16]
   2cda4:	ldr	x0, [sp, #24]
   2cda8:	bl	2c6e8 <OnPrint@@Base+0x2740>
   2cdac:	nop
   2cdb0:	ldr	x30, [sp], #32
   2cdb4:	ret
   2cdb8:	sub	sp, sp, #0x10
   2cdbc:	str	x0, [sp, #8]
   2cdc0:	ldr	x0, [sp, #8]
   2cdc4:	ldr	x0, [x0, #8]
   2cdc8:	lsr	x0, x0, #4
   2cdcc:	add	sp, sp, #0x10
   2cdd0:	ret
   2cdd4:	stp	x19, x30, [sp, #-80]!
   2cdd8:	str	x0, [sp, #24]
   2cddc:	str	x1, [sp, #16]
   2cde0:	ldr	x0, [sp, #16]
   2cde4:	str	x0, [sp, #72]
   2cde8:	str	xzr, [sp, #64]
   2cdec:	ldr	x1, [sp, #72]
   2cdf0:	ldr	x0, [sp, #64]
   2cdf4:	cmp	x1, x0
   2cdf8:	cset	w0, ls  // ls = plast
   2cdfc:	and	w0, w0, #0xff
   2ce00:	and	x0, x0, #0xff
   2ce04:	cmp	x0, #0x0
   2ce08:	b.eq	2ce2c <OnPrint@@Base+0x2e84>  // b.none
   2ce0c:	ldr	x4, [sp, #64]
   2ce10:	ldr	x3, [sp, #72]
   2ce14:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2ce18:	add	x2, x0, #0x0
   2ce1c:	mov	w1, #0x1fc                 	// #508
   2ce20:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2ce24:	add	x0, x0, #0xdb8
   2ce28:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2ce2c:	ldr	x0, [sp, #24]
   2ce30:	ldr	x0, [x0, #16]
   2ce34:	str	x0, [sp, #56]
   2ce38:	ldr	x0, [sp, #16]
   2ce3c:	str	x0, [sp, #48]
   2ce40:	ldr	x1, [sp, #56]
   2ce44:	ldr	x0, [sp, #48]
   2ce48:	cmp	x1, x0
   2ce4c:	cset	w0, hi  // hi = pmore
   2ce50:	and	w0, w0, #0xff
   2ce54:	and	x0, x0, #0xff
   2ce58:	cmp	x0, #0x0
   2ce5c:	b.eq	2ce80 <OnPrint@@Base+0x2ed8>  // b.none
   2ce60:	ldr	x4, [sp, #48]
   2ce64:	ldr	x3, [sp, #56]
   2ce68:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2ce6c:	add	x2, x0, #0x20
   2ce70:	mov	w1, #0x1fd                 	// #509
   2ce74:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2ce78:	add	x0, x0, #0xdb8
   2ce7c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2ce80:	ldr	x0, [sp, #16]
   2ce84:	lsl	x19, x0, #4
   2ce88:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
   2ce8c:	mov	x1, x0
   2ce90:	mov	x0, x19
   2ce94:	bl	a518 <__lsan_do_recoverable_leak_check@@Base+0x38c>
   2ce98:	str	x0, [sp, #40]
   2ce9c:	mov	w2, #0x0                   	// #0
   2cea0:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2cea4:	add	x1, x0, #0x40
   2cea8:	ldr	x0, [sp, #40]
   2ceac:	bl	26a50 <__sanitizer_set_report_fd@@Base+0x7858>
   2ceb0:	str	x0, [sp, #32]
   2ceb4:	ldr	x0, [sp, #24]
   2ceb8:	ldr	x1, [x0]
   2cebc:	ldr	x0, [sp, #24]
   2cec0:	ldr	x0, [x0, #16]
   2cec4:	lsl	x0, x0, #4
   2cec8:	mov	x2, x0
   2cecc:	ldr	x0, [sp, #32]
   2ced0:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
   2ced4:	ldr	x0, [sp, #24]
   2ced8:	ldr	x2, [x0]
   2cedc:	ldr	x0, [sp, #24]
   2cee0:	ldr	x0, [x0, #8]
   2cee4:	mov	x1, x0
   2cee8:	mov	x0, x2
   2ceec:	bl	26af4 <__sanitizer_set_report_fd@@Base+0x78fc>
   2cef0:	ldr	x0, [sp, #24]
   2cef4:	ldr	x1, [sp, #32]
   2cef8:	str	x1, [x0]
   2cefc:	ldr	x0, [sp, #24]
   2cf00:	ldr	x1, [sp, #40]
   2cf04:	str	x1, [x0, #8]
   2cf08:	nop
   2cf0c:	ldp	x19, x30, [sp], #80
   2cf10:	ret
   2cf14:	sub	sp, sp, #0x20
   2cf18:	str	x0, [sp, #8]
   2cf1c:	str	x1, [sp]
   2cf20:	ldr	x0, [sp, #8]
   2cf24:	ldp	x0, x1, [x0]
   2cf28:	stp	x0, x1, [sp, #16]
   2cf2c:	ldr	x2, [sp, #8]
   2cf30:	ldr	x0, [sp]
   2cf34:	ldp	x0, x1, [x0]
   2cf38:	stp	x0, x1, [x2]
   2cf3c:	ldr	x2, [sp]
   2cf40:	ldp	x0, x1, [sp, #16]
   2cf44:	stp	x0, x1, [x2]
   2cf48:	nop
   2cf4c:	add	sp, sp, #0x20
   2cf50:	ret
   2cf54:	str	x30, [sp, #-48]!
   2cf58:	str	x0, [sp, #24]
   2cf5c:	str	x1, [sp, #16]
   2cf60:	ldr	x0, [sp, #16]
   2cf64:	str	x0, [sp, #40]
   2cf68:	ldr	x0, [sp, #24]
   2cf6c:	ldr	x0, [x0, #16]
   2cf70:	str	x0, [sp, #32]
   2cf74:	ldr	x1, [sp, #40]
   2cf78:	ldr	x0, [sp, #32]
   2cf7c:	cmp	x1, x0
   2cf80:	cset	w0, cs  // cs = hs, nlast
   2cf84:	and	w0, w0, #0xff
   2cf88:	and	x0, x0, #0xff
   2cf8c:	cmp	x0, #0x0
   2cf90:	b.eq	2cfb4 <OnPrint@@Base+0x300c>  // b.none
   2cf94:	ldr	x4, [sp, #32]
   2cf98:	ldr	x3, [sp, #40]
   2cf9c:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2cfa0:	add	x2, x0, #0xfe8
   2cfa4:	mov	w1, #0x1ba                 	// #442
   2cfa8:	adrp	x0, 57000 <__asan_backtrace_vector_release@@Base+0x8340>
   2cfac:	add	x0, x0, #0xdb8
   2cfb0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2cfb4:	ldr	x0, [sp, #24]
   2cfb8:	ldr	x1, [x0]
   2cfbc:	ldr	x0, [sp, #16]
   2cfc0:	lsl	x0, x0, #4
   2cfc4:	add	x0, x1, x0
   2cfc8:	ldr	x30, [sp], #48
   2cfcc:	ret
   2cfd0:	sub	sp, sp, #0x20
   2cfd4:	str	x0, [sp, #24]
   2cfd8:	str	x1, [sp, #16]
   2cfdc:	str	x2, [sp, #8]
   2cfe0:	ldr	x1, [sp, #24]
   2cfe4:	ldr	x0, [sp, #8]
   2cfe8:	cmp	x1, x0
   2cfec:	b.ls	2d00c <OnPrint@@Base+0x3064>  // b.plast
   2cff0:	ldr	x0, [sp, #16]
   2cff4:	sub	x0, x0, #0x10
   2cff8:	ldr	x1, [sp, #24]
   2cffc:	cmp	x1, x0
   2d000:	b.cs	2d00c <OnPrint@@Base+0x3064>  // b.hs, b.nlast
   2d004:	mov	w0, #0x1                   	// #1
   2d008:	b	2d010 <OnPrint@@Base+0x3068>
   2d00c:	mov	w0, #0x0                   	// #0
   2d010:	add	sp, sp, #0x20
   2d014:	ret
   2d018:	sub	sp, sp, #0x10
   2d01c:	str	x0, [sp, #8]
   2d020:	ldr	x0, [sp, #8]
   2d024:	add	x0, x0, #0x4
   2d028:	add	sp, sp, #0x10
   2d02c:	ret
   2d030:	str	x30, [sp, #-16]!
   2d034:	mov	x0, x30
   2d038:	ldr	x30, [sp], #16
   2d03c:	ret
   2d040:	str	x30, [sp, #-64]!
   2d044:	str	x0, [sp, #40]
   2d048:	str	x1, [sp, #32]
   2d04c:	str	x2, [sp, #24]
   2d050:	str	x3, [sp, #16]
   2d054:	ldr	x0, [sp, #16]
   2d058:	cmp	x0, #0x0
   2d05c:	cset	w0, ne  // ne = any
   2d060:	and	w0, w0, #0xff
   2d064:	mov	w1, w0
   2d068:	ldr	x0, [sp, #24]
   2d06c:	add	w1, w1, w0
   2d070:	ldr	x0, [sp, #40]
   2d074:	str	w1, [x0, #8]
   2d078:	ldr	x0, [sp, #40]
   2d07c:	ldr	w0, [x0, #8]
   2d080:	mov	w0, w0
   2d084:	str	x0, [sp, #56]
   2d088:	mov	x0, #0x100                 	// #256
   2d08c:	str	x0, [sp, #48]
   2d090:	ldr	x1, [sp, #56]
   2d094:	ldr	x0, [sp, #48]
   2d098:	cmp	x1, x0
   2d09c:	cset	w0, hi  // hi = pmore
   2d0a0:	and	w0, w0, #0xff
   2d0a4:	and	x0, x0, #0xff
   2d0a8:	cmp	x0, #0x0
   2d0ac:	b.eq	2d0d0 <OnPrint@@Base+0x3128>  // b.none
   2d0b0:	ldr	x4, [sp, #48]
   2d0b4:	ldr	x3, [sp, #56]
   2d0b8:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2d0bc:	add	x2, x0, #0xb0
   2d0c0:	mov	w1, #0x22                  	// #34
   2d0c4:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2d0c8:	add	x0, x0, #0xd0
   2d0cc:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2d0d0:	ldr	x0, [sp, #40]
   2d0d4:	add	x3, x0, #0x10
   2d0d8:	ldr	x0, [sp, #24]
   2d0dc:	lsl	x0, x0, #3
   2d0e0:	mov	x2, x0
   2d0e4:	ldr	x1, [sp, #32]
   2d0e8:	mov	x0, x3
   2d0ec:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
   2d0f0:	ldr	x0, [sp, #16]
   2d0f4:	cmp	x0, #0x0
   2d0f8:	b.eq	2d110 <OnPrint@@Base+0x3168>  // b.none
   2d0fc:	ldr	x0, [sp, #40]
   2d100:	ldr	x1, [sp, #24]
   2d104:	add	x1, x1, #0x2
   2d108:	ldr	x2, [sp, #16]
   2d10c:	str	x2, [x0, x1, lsl #3]
   2d110:	ldr	x0, [sp, #40]
   2d114:	str	xzr, [x0, #2064]
   2d118:	nop
   2d11c:	ldr	x30, [sp], #64
   2d120:	ret
   2d124:	sub	sp, sp, #0x20
   2d128:	str	x0, [sp, #24]
   2d12c:	str	x1, [sp, #16]
   2d130:	str	x2, [sp, #8]
   2d134:	ldr	x0, [sp, #24]
   2d138:	add	sp, sp, #0x20
   2d13c:	ret
   2d140:	str	x30, [sp, #-112]!
   2d144:	str	x0, [sp, #56]
   2d148:	str	x1, [sp, #48]
   2d14c:	str	x2, [sp, #40]
   2d150:	str	x3, [sp, #32]
   2d154:	str	x4, [sp, #24]
   2d158:	str	w5, [sp, #20]
   2d15c:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
   2d160:	str	x0, [sp, #88]
   2d164:	ldr	w0, [sp, #20]
   2d168:	str	x0, [sp, #80]
   2d16c:	mov	x0, #0x2                   	// #2
   2d170:	str	x0, [sp, #72]
   2d174:	ldr	x1, [sp, #80]
   2d178:	ldr	x0, [sp, #72]
   2d17c:	cmp	x1, x0
   2d180:	cset	w0, cc  // cc = lo, ul, last
   2d184:	and	w0, w0, #0xff
   2d188:	and	x0, x0, #0xff
   2d18c:	cmp	x0, #0x0
   2d190:	b.eq	2d1b4 <OnPrint@@Base+0x320c>  // b.none
   2d194:	ldr	x4, [sp, #72]
   2d198:	ldr	x3, [sp, #80]
   2d19c:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2d1a0:	add	x2, x0, #0x118
   2d1a4:	mov	w1, #0x47                  	// #71
   2d1a8:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2d1ac:	add	x0, x0, #0xd0
   2d1b0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2d1b4:	ldr	x0, [sp, #56]
   2d1b8:	ldr	x1, [sp, #48]
   2d1bc:	str	x1, [x0, #16]
   2d1c0:	ldr	x0, [sp, #56]
   2d1c4:	mov	w1, #0x1                   	// #1
   2d1c8:	str	w1, [x0, #8]
   2d1cc:	ldr	x0, [sp, #32]
   2d1d0:	cmp	x0, #0xfff
   2d1d4:	b.ls	2d2c8 <OnPrint@@Base+0x3320>  // b.plast
   2d1d8:	ldr	x2, [sp, #24]
   2d1dc:	ldr	x1, [sp, #32]
   2d1e0:	ldr	x0, [sp, #40]
   2d1e4:	bl	2d124 <OnPrint@@Base+0x317c>
   2d1e8:	str	x0, [sp, #104]
   2d1ec:	ldr	x0, [sp, #24]
   2d1f0:	str	x0, [sp, #96]
   2d1f4:	ldr	x0, [sp, #104]
   2d1f8:	ldr	x2, [sp, #96]
   2d1fc:	ldr	x1, [sp, #32]
   2d200:	bl	2cfd0 <OnPrint@@Base+0x3028>
   2d204:	and	w0, w0, #0xff
   2d208:	cmp	w0, #0x0
   2d20c:	b.eq	2d244 <OnPrint@@Base+0x329c>  // b.none
   2d210:	ldr	x0, [sp, #104]
   2d214:	mov	x1, #0x8                   	// #8
   2d218:	bl	ed50 <__sanitizer_get_allocated_size@@Base+0x1f0>
   2d21c:	and	w0, w0, #0xff
   2d220:	cmp	w0, #0x0
   2d224:	b.eq	2d244 <OnPrint@@Base+0x329c>  // b.none
   2d228:	ldr	x0, [sp, #56]
   2d22c:	ldr	w0, [x0, #8]
   2d230:	ldr	w1, [sp, #20]
   2d234:	cmp	w1, w0
   2d238:	b.ls	2d244 <OnPrint@@Base+0x329c>  // b.plast
   2d23c:	mov	w0, #0x1                   	// #1
   2d240:	b	2d248 <OnPrint@@Base+0x32a0>
   2d244:	mov	w0, #0x0                   	// #0
   2d248:	cmp	w0, #0x0
   2d24c:	b.eq	2d2d4 <OnPrint@@Base+0x332c>  // b.none
   2d250:	ldr	x0, [sp, #104]
   2d254:	ldr	x0, [x0, #8]
   2d258:	str	x0, [sp, #64]
   2d25c:	ldr	x1, [sp, #64]
   2d260:	ldr	x0, [sp, #88]
   2d264:	cmp	x1, x0
   2d268:	b.cc	2d2d0 <OnPrint@@Base+0x3328>  // b.lo, b.ul, b.last
   2d26c:	ldr	x1, [sp, #64]
   2d270:	ldr	x0, [sp, #48]
   2d274:	cmp	x1, x0
   2d278:	b.eq	2d2a4 <OnPrint@@Base+0x32fc>  // b.none
   2d27c:	ldr	x0, [sp, #56]
   2d280:	ldr	w0, [x0, #8]
   2d284:	add	w2, w0, #0x1
   2d288:	ldr	x1, [sp, #56]
   2d28c:	str	w2, [x1, #8]
   2d290:	ldr	x1, [sp, #56]
   2d294:	mov	w0, w0
   2d298:	add	x0, x0, #0x2
   2d29c:	ldr	x2, [sp, #64]
   2d2a0:	str	x2, [x1, x0, lsl #3]
   2d2a4:	ldr	x0, [sp, #104]
   2d2a8:	str	x0, [sp, #96]
   2d2ac:	ldr	x0, [sp, #104]
   2d2b0:	ldr	x0, [x0]
   2d2b4:	ldr	x2, [sp, #96]
   2d2b8:	ldr	x1, [sp, #32]
   2d2bc:	bl	2d124 <OnPrint@@Base+0x317c>
   2d2c0:	str	x0, [sp, #104]
   2d2c4:	b	2d1f4 <OnPrint@@Base+0x324c>
   2d2c8:	nop
   2d2cc:	b	2d2d4 <OnPrint@@Base+0x332c>
   2d2d0:	nop
   2d2d4:	ldr	x30, [sp], #112
   2d2d8:	ret
   2d2dc:	str	x30, [sp, #-64]!
   2d2e0:	str	x0, [sp, #24]
   2d2e4:	str	x1, [sp, #16]
   2d2e8:	ldr	x0, [sp, #16]
   2d2ec:	str	x0, [sp, #48]
   2d2f0:	ldr	x0, [sp, #24]
   2d2f4:	ldr	w0, [x0, #8]
   2d2f8:	mov	w0, w0
   2d2fc:	str	x0, [sp, #40]
   2d300:	ldr	x1, [sp, #48]
   2d304:	ldr	x0, [sp, #40]
   2d308:	cmp	x1, x0
   2d30c:	cset	w0, cs  // cs = hs, nlast
   2d310:	and	w0, w0, #0xff
   2d314:	and	x0, x0, #0xff
   2d318:	cmp	x0, #0x0
   2d31c:	b.eq	2d340 <OnPrint@@Base+0x3398>  // b.none
   2d320:	ldr	x4, [sp, #40]
   2d324:	ldr	x3, [sp, #48]
   2d328:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2d32c:	add	x2, x0, #0x130
   2d330:	mov	w1, #0x78                  	// #120
   2d334:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2d338:	add	x0, x0, #0xd0
   2d33c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2d340:	ldr	x0, [sp, #24]
   2d344:	ldr	w0, [x0, #8]
   2d348:	ldr	x1, [sp, #16]
   2d34c:	sub	w1, w0, w1
   2d350:	ldr	x0, [sp, #24]
   2d354:	str	w1, [x0, #8]
   2d358:	str	xzr, [sp, #56]
   2d35c:	ldr	x0, [sp, #24]
   2d360:	ldr	w0, [x0, #8]
   2d364:	mov	w0, w0
   2d368:	ldr	x1, [sp, #56]
   2d36c:	cmp	x1, x0
   2d370:	b.cs	2d3ac <OnPrint@@Base+0x3404>  // b.hs, b.nlast
   2d374:	ldr	x1, [sp, #56]
   2d378:	ldr	x0, [sp, #16]
   2d37c:	add	x1, x1, x0
   2d380:	ldr	x0, [sp, #24]
   2d384:	add	x1, x1, #0x2
   2d388:	ldr	x2, [x0, x1, lsl #3]
   2d38c:	ldr	x0, [sp, #24]
   2d390:	ldr	x1, [sp, #56]
   2d394:	add	x1, x1, #0x2
   2d398:	str	x2, [x0, x1, lsl #3]
   2d39c:	ldr	x0, [sp, #56]
   2d3a0:	add	x0, x0, #0x1
   2d3a4:	str	x0, [sp, #56]
   2d3a8:	b	2d35c <OnPrint@@Base+0x33b4>
   2d3ac:	nop
   2d3b0:	ldr	x30, [sp], #64
   2d3b4:	ret
   2d3b8:	sub	sp, sp, #0x10
   2d3bc:	str	x0, [sp, #8]
   2d3c0:	str	x1, [sp]
   2d3c4:	ldr	x1, [sp, #8]
   2d3c8:	ldr	x0, [sp]
   2d3cc:	cmp	x1, x0
   2d3d0:	b.cs	2d3e4 <OnPrint@@Base+0x343c>  // b.hs, b.nlast
   2d3d4:	ldr	x1, [sp]
   2d3d8:	ldr	x0, [sp, #8]
   2d3dc:	sub	x0, x1, x0
   2d3e0:	b	2d3f0 <OnPrint@@Base+0x3448>
   2d3e4:	ldr	x1, [sp, #8]
   2d3e8:	ldr	x0, [sp]
   2d3ec:	sub	x0, x1, x0
   2d3f0:	add	sp, sp, #0x10
   2d3f4:	ret
   2d3f8:	stp	x19, x30, [sp, #-48]!
   2d3fc:	str	x0, [sp, #24]
   2d400:	str	x1, [sp, #16]
   2d404:	str	xzr, [sp, #40]
   2d408:	mov	x0, #0x1                   	// #1
   2d40c:	str	x0, [sp, #32]
   2d410:	ldr	x0, [sp, #24]
   2d414:	ldr	w0, [x0, #8]
   2d418:	mov	w0, w0
   2d41c:	ldr	x1, [sp, #32]
   2d420:	cmp	x1, x0
   2d424:	b.cs	2d498 <OnPrint@@Base+0x34f0>  // b.hs, b.nlast
   2d428:	ldr	x0, [sp, #24]
   2d42c:	ldr	x1, [x0]
   2d430:	ldr	x0, [sp, #32]
   2d434:	lsl	x0, x0, #3
   2d438:	add	x0, x1, x0
   2d43c:	ldr	x0, [x0]
   2d440:	ldr	x1, [sp, #16]
   2d444:	bl	2d3b8 <OnPrint@@Base+0x3410>
   2d448:	mov	x19, x0
   2d44c:	ldr	x0, [sp, #24]
   2d450:	ldr	x1, [x0]
   2d454:	ldr	x0, [sp, #40]
   2d458:	lsl	x0, x0, #3
   2d45c:	add	x0, x1, x0
   2d460:	ldr	x0, [x0]
   2d464:	ldr	x1, [sp, #16]
   2d468:	bl	2d3b8 <OnPrint@@Base+0x3410>
   2d46c:	cmp	x19, x0
   2d470:	cset	w0, cc  // cc = lo, ul, last
   2d474:	and	w0, w0, #0xff
   2d478:	cmp	w0, #0x0
   2d47c:	b.eq	2d488 <OnPrint@@Base+0x34e0>  // b.none
   2d480:	ldr	x0, [sp, #32]
   2d484:	str	x0, [sp, #40]
   2d488:	ldr	x0, [sp, #32]
   2d48c:	add	x0, x0, #0x1
   2d490:	str	x0, [sp, #32]
   2d494:	b	2d410 <OnPrint@@Base+0x3468>
   2d498:	ldr	x0, [sp, #40]
   2d49c:	ldp	x19, x30, [sp], #48
   2d4a0:	ret
   2d4a4:	stp	x19, x20, [sp, #-208]!
   2d4a8:	stp	x21, x22, [sp, #16]
   2d4ac:	str	x30, [sp, #32]
   2d4b0:	str	x0, [sp, #56]
   2d4b4:	ldr	x0, [sp, #56]
   2d4b8:	ldr	x0, [x0]
   2d4bc:	cmp	x0, #0x0
   2d4c0:	b.eq	2d4d4 <OnPrint@@Base+0x352c>  // b.none
   2d4c4:	ldr	x0, [sp, #56]
   2d4c8:	ldr	w0, [x0, #8]
   2d4cc:	cmp	w0, #0x0
   2d4d0:	b.ne	2d4e4 <OnPrint@@Base+0x353c>  // b.any
   2d4d4:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2d4d8:	add	x0, x0, #0x1b8
   2d4dc:	bl	2a350 <OnPrint@@Base+0x3a8>
   2d4e0:	b	2d748 <OnPrint@@Base+0x37a0>
   2d4e4:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
   2d4e8:	lsl	x1, x0, #1
   2d4ec:	add	x0, sp, #0x68
   2d4f0:	bl	a584 <__lsan_do_recoverable_leak_check@@Base+0x3f8>
   2d4f4:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
   2d4f8:	mov	x1, x0
   2d4fc:	add	x0, sp, #0x48
   2d500:	bl	a584 <__lsan_do_recoverable_leak_check@@Base+0x3f8>
   2d504:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   2d508:	ldr	w0, [x0, #184]
   2d50c:	str	w0, [sp, #204]
   2d510:	str	xzr, [sp, #192]
   2d514:	str	xzr, [sp, #184]
   2d518:	ldr	x0, [sp, #56]
   2d51c:	ldr	w0, [x0, #8]
   2d520:	mov	w0, w0
   2d524:	ldr	x1, [sp, #184]
   2d528:	cmp	x1, x0
   2d52c:	b.cs	2d6f8 <OnPrint@@Base+0x3750>  // b.hs, b.nlast
   2d530:	ldr	x0, [sp, #56]
   2d534:	ldr	x1, [x0]
   2d538:	ldr	x0, [sp, #184]
   2d53c:	lsl	x0, x0, #3
   2d540:	add	x0, x1, x0
   2d544:	ldr	x0, [x0]
   2d548:	cmp	x0, #0x0
   2d54c:	b.eq	2d6f8 <OnPrint@@Base+0x3750>  // b.none
   2d550:	ldr	x0, [sp, #56]
   2d554:	ldr	x1, [x0]
   2d558:	ldr	x0, [sp, #184]
   2d55c:	lsl	x0, x0, #3
   2d560:	add	x0, x1, x0
   2d564:	ldr	x0, [x0]
   2d568:	str	x0, [sp, #136]
   2d56c:	ldr	x0, [sp, #136]
   2d570:	sub	x0, x0, #0x4
   2d574:	str	x0, [sp, #168]
   2d578:	bl	3289c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c8c>
   2d57c:	ldr	x1, [sp, #168]
   2d580:	bl	32b94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f84>
   2d584:	str	x0, [sp, #160]
   2d588:	ldr	x0, [sp, #160]
   2d58c:	str	x0, [sp, #152]
   2d590:	str	xzr, [sp, #144]
   2d594:	ldr	x1, [sp, #152]
   2d598:	ldr	x0, [sp, #144]
   2d59c:	cmp	x1, x0
   2d5a0:	cset	w0, eq  // eq = none
   2d5a4:	and	w0, w0, #0xff
   2d5a8:	and	x0, x0, #0xff
   2d5ac:	cmp	x0, #0x0
   2d5b0:	b.eq	2d5d4 <OnPrint@@Base+0x362c>  // b.none
   2d5b4:	ldr	x4, [sp, #144]
   2d5b8:	ldr	x3, [sp, #152]
   2d5bc:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2d5c0:	add	x2, x0, #0x1d0
   2d5c4:	mov	w1, #0x22                  	// #34
   2d5c8:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2d5cc:	add	x0, x0, #0x1e8
   2d5d0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2d5d4:	ldr	x0, [sp, #160]
   2d5d8:	str	x0, [sp, #176]
   2d5dc:	ldr	x0, [sp, #176]
   2d5e0:	cmp	x0, #0x0
   2d5e4:	b.eq	2d6e0 <OnPrint@@Base+0x3738>  // b.none
   2d5e8:	add	x0, sp, #0x68
   2d5ec:	bl	2dc58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x48>
   2d5f0:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   2d5f4:	ldr	x19, [x0, #192]
   2d5f8:	ldr	x0, [sp, #192]
   2d5fc:	add	x1, x0, #0x1
   2d600:	str	x1, [sp, #192]
   2d604:	mov	w22, w0
   2d608:	ldr	x0, [sp, #176]
   2d60c:	add	x20, x0, #0x8
   2d610:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   2d614:	ldrb	w21, [x0, #181]
   2d618:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   2d61c:	ldr	x1, [x0, #24]
   2d620:	add	x7, sp, #0x68
   2d624:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2d628:	add	x6, x0, #0x238
   2d62c:	mov	x5, x1
   2d630:	mov	w4, w21
   2d634:	mov	x3, x20
   2d638:	mov	w2, w22
   2d63c:	mov	x1, x19
   2d640:	mov	x0, x7
   2d644:	bl	2ecd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
   2d648:	add	x0, sp, #0x68
   2d64c:	bl	bc50 <__lsan_do_recoverable_leak_check@@Base+0x1ac4>
   2d650:	mov	x1, x0
   2d654:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2d658:	add	x0, x0, #0x240
   2d65c:	bl	2a350 <OnPrint@@Base+0x3a8>
   2d660:	ldr	w0, [sp, #204]
   2d664:	sub	w1, w0, #0x1
   2d668:	str	w1, [sp, #204]
   2d66c:	cmp	w0, #0x0
   2d670:	cset	w0, gt
   2d674:	and	w0, w0, #0xff
   2d678:	cmp	w0, #0x0
   2d67c:	b.eq	2d6d0 <OnPrint@@Base+0x3728>  // b.none
   2d680:	add	x0, sp, #0x48
   2d684:	bl	2dc40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x30>
   2d688:	cmp	x0, #0x0
   2d68c:	cset	w0, ne  // ne = any
   2d690:	and	w0, w0, #0xff
   2d694:	cmp	w0, #0x0
   2d698:	b.eq	2d6b0 <OnPrint@@Base+0x3708>  // b.none
   2d69c:	add	x2, sp, #0x48
   2d6a0:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2d6a4:	add	x1, x0, #0x248
   2d6a8:	mov	x0, x2
   2d6ac:	bl	2a564 <OnPrint@@Base+0x5bc>
   2d6b0:	ldr	x0, [sp, #176]
   2d6b4:	ldr	x0, [x0, #40]
   2d6b8:	cmp	x0, #0x0
   2d6bc:	b.eq	2d6d0 <OnPrint@@Base+0x3728>  // b.none
   2d6c0:	ldr	x0, [sp, #176]
   2d6c4:	ldr	x1, [x0, #40]
   2d6c8:	add	x0, sp, #0x48
   2d6cc:	bl	2a564 <OnPrint@@Base+0x5bc>
   2d6d0:	ldr	x0, [sp, #176]
   2d6d4:	ldr	x0, [x0]
   2d6d8:	str	x0, [sp, #176]
   2d6dc:	b	2d5dc <OnPrint@@Base+0x3634>
   2d6e0:	ldr	x0, [sp, #160]
   2d6e4:	bl	31908 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3cf8>
   2d6e8:	ldr	x0, [sp, #184]
   2d6ec:	add	x0, x0, #0x1
   2d6f0:	str	x0, [sp, #184]
   2d6f4:	b	2d518 <OnPrint@@Base+0x3570>
   2d6f8:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2d6fc:	add	x0, x0, #0x250
   2d700:	bl	2a350 <OnPrint@@Base+0x3a8>
   2d704:	add	x0, sp, #0x48
   2d708:	bl	2dc40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x30>
   2d70c:	cmp	x0, #0x0
   2d710:	cset	w0, ne  // ne = any
   2d714:	and	w0, w0, #0xff
   2d718:	cmp	w0, #0x0
   2d71c:	b.eq	2d738 <OnPrint@@Base+0x3790>  // b.none
   2d720:	add	x0, sp, #0x48
   2d724:	bl	bc50 <__lsan_do_recoverable_leak_check@@Base+0x1ac4>
   2d728:	mov	x1, x0
   2d72c:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2d730:	add	x0, x0, #0x258
   2d734:	bl	2a350 <OnPrint@@Base+0x3a8>
   2d738:	add	x0, sp, #0x48
   2d73c:	bl	aab4 <__lsan_do_recoverable_leak_check@@Base+0x928>
   2d740:	add	x0, sp, #0x68
   2d744:	bl	aab4 <__lsan_do_recoverable_leak_check@@Base+0x928>
   2d748:	ldp	x21, x22, [sp, #16]
   2d74c:	ldr	x30, [sp, #32]
   2d750:	ldp	x19, x20, [sp], #208
   2d754:	ret
   2d758:	str	x30, [sp, #-80]!
   2d75c:	str	x0, [sp, #72]
   2d760:	str	w1, [sp, #68]
   2d764:	str	x2, [sp, #56]
   2d768:	str	x3, [sp, #48]
   2d76c:	str	x4, [sp, #40]
   2d770:	str	x5, [sp, #32]
   2d774:	str	x6, [sp, #24]
   2d778:	strb	w7, [sp, #67]
   2d77c:	ldr	w0, [sp, #68]
   2d780:	cmp	w0, #0x0
   2d784:	b.eq	2d790 <OnPrint@@Base+0x37e8>  // b.none
   2d788:	ldr	x0, [sp, #48]
   2d78c:	b	2d794 <OnPrint@@Base+0x37ec>
   2d790:	mov	x0, #0x0                   	// #0
   2d794:	ldr	x1, [sp, #72]
   2d798:	str	x0, [x1, #2064]
   2d79c:	ldr	w0, [sp, #68]
   2d7a0:	cmp	w0, #0x0
   2d7a4:	b.ne	2d7b4 <OnPrint@@Base+0x380c>  // b.any
   2d7a8:	ldr	x0, [sp, #72]
   2d7ac:	str	wzr, [x0, #8]
   2d7b0:	b	2d84c <OnPrint@@Base+0x38a4>
   2d7b4:	ldr	w0, [sp, #68]
   2d7b8:	cmp	w0, #0x1
   2d7bc:	b.ne	2d7dc <OnPrint@@Base+0x3834>  // b.any
   2d7c0:	ldr	x0, [sp, #72]
   2d7c4:	mov	w1, #0x1                   	// #1
   2d7c8:	str	w1, [x0, #8]
   2d7cc:	ldr	x0, [sp, #72]
   2d7d0:	ldr	x1, [sp, #56]
   2d7d4:	str	x1, [x0, #16]
   2d7d8:	b	2d84c <OnPrint@@Base+0x38a4>
   2d7dc:	ldrb	w0, [sp, #67]
   2d7e0:	bl	2dc84 <__sanitizer_get_module_and_offset_for_pc@@Base+0x74>
   2d7e4:	and	w0, w0, #0xff
   2d7e8:	eor	w0, w0, #0x1
   2d7ec:	and	w0, w0, #0xff
   2d7f0:	cmp	w0, #0x0
   2d7f4:	b.eq	2d830 <OnPrint@@Base+0x3888>  // b.none
   2d7f8:	ldr	x0, [sp, #40]
   2d7fc:	cmp	x0, #0x0
   2d800:	b.eq	2d81c <OnPrint@@Base+0x3874>  // b.none
   2d804:	ldr	w3, [sp, #68]
   2d808:	ldr	x2, [sp, #40]
   2d80c:	ldr	x1, [sp, #56]
   2d810:	ldr	x0, [sp, #72]
   2d814:	bl	37e74 <__sanitizer_set_death_callback@@Base+0x21d4>
   2d818:	b	2d84c <OnPrint@@Base+0x38a4>
   2d81c:	ldr	w2, [sp, #68]
   2d820:	ldr	x1, [sp, #56]
   2d824:	ldr	x0, [sp, #72]
   2d828:	bl	37d84 <__sanitizer_set_death_callback@@Base+0x20e4>
   2d82c:	b	2d84c <OnPrint@@Base+0x38a4>
   2d830:	ldr	w5, [sp, #68]
   2d834:	ldr	x4, [sp, #24]
   2d838:	ldr	x3, [sp, #32]
   2d83c:	ldr	x2, [sp, #48]
   2d840:	ldr	x1, [sp, #56]
   2d844:	ldr	x0, [sp, #72]
   2d848:	bl	2d140 <OnPrint@@Base+0x3198>
   2d84c:	ldr	x30, [sp], #80
   2d850:	ret
   2d854:	str	x30, [sp, #-64]!
   2d858:	str	x0, [sp, #40]
   2d85c:	str	x1, [sp, #32]
   2d860:	str	x2, [sp, #24]
   2d864:	str	x3, [sp, #16]
   2d868:	str	xzr, [sp, #48]
   2d86c:	bl	3289c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c8c>
   2d870:	mov	x4, x0
   2d874:	add	x0, sp, #0x30
   2d878:	ldr	x3, [sp, #16]
   2d87c:	mov	x2, x0
   2d880:	ldr	x1, [sp, #40]
   2d884:	mov	x0, x4
   2d888:	bl	32e40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5230>
   2d88c:	strb	w0, [sp, #63]
   2d890:	ldrb	w0, [sp, #63]
   2d894:	eor	w0, w0, #0x1
   2d898:	and	w0, w0, #0xff
   2d89c:	cmp	w0, #0x0
   2d8a0:	b.eq	2d8ac <OnPrint@@Base+0x3904>  // b.none
   2d8a4:	mov	w0, #0x0                   	// #0
   2d8a8:	b	2d8f0 <OnPrint@@Base+0x3948>
   2d8ac:	ldr	x0, [sp, #32]
   2d8b0:	cmp	x0, #0x0
   2d8b4:	b.eq	2d8ec <OnPrint@@Base+0x3944>  // b.none
   2d8b8:	ldr	x0, [sp, #24]
   2d8bc:	cmp	x0, #0x0
   2d8c0:	b.eq	2d8ec <OnPrint@@Base+0x3944>  // b.none
   2d8c4:	ldr	x0, [sp, #48]
   2d8c8:	ldr	x2, [sp, #24]
   2d8cc:	mov	x1, x0
   2d8d0:	ldr	x0, [sp, #32]
   2d8d4:	bl	21dfc <__sanitizer_set_report_fd@@Base+0x2c04>
   2d8d8:	ldr	x0, [sp, #24]
   2d8dc:	sub	x0, x0, #0x1
   2d8e0:	ldr	x1, [sp, #32]
   2d8e4:	add	x0, x1, x0
   2d8e8:	strb	wzr, [x0]
   2d8ec:	mov	w0, #0x1                   	// #1
   2d8f0:	ldr	x30, [sp], #64
   2d8f4:	ret

000000000002d8f8 <__sanitizer_symbolize_pc@@Base>:
   2d8f8:	stp	x19, x20, [sp, #-160]!
   2d8fc:	stp	x21, x30, [sp, #16]
   2d900:	str	x0, [sp, #56]
   2d904:	str	x1, [sp, #48]
   2d908:	str	x2, [sp, #40]
   2d90c:	str	x3, [sp, #32]
   2d910:	ldr	x0, [sp, #32]
   2d914:	cmp	x0, #0x0
   2d918:	b.eq	2db24 <__sanitizer_symbolize_pc@@Base+0x22c>  // b.none
   2d91c:	ldr	x0, [sp, #56]
   2d920:	str	x0, [sp, #96]
   2d924:	ldr	x0, [sp, #96]
   2d928:	sub	x0, x0, #0x4
   2d92c:	str	x0, [sp, #56]
   2d930:	bl	3289c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c8c>
   2d934:	ldr	x1, [sp, #56]
   2d938:	bl	32b94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f84>
   2d93c:	str	x0, [sp, #136]
   2d940:	ldr	x0, [sp, #136]
   2d944:	cmp	x0, #0x0
   2d948:	b.ne	2d978 <__sanitizer_symbolize_pc@@Base+0x80>  // b.any
   2d94c:	ldr	x2, [sp, #32]
   2d950:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2d954:	add	x1, x0, #0x270
   2d958:	ldr	x0, [sp, #40]
   2d95c:	bl	21dfc <__sanitizer_set_report_fd@@Base+0x2c04>
   2d960:	ldr	x0, [sp, #32]
   2d964:	sub	x0, x0, #0x1
   2d968:	ldr	x1, [sp, #40]
   2d96c:	add	x0, x1, x0
   2d970:	strb	wzr, [x0]
   2d974:	b	2db28 <__sanitizer_symbolize_pc@@Base+0x230>
   2d978:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
   2d97c:	mov	x1, x0
   2d980:	add	x0, sp, #0x40
   2d984:	bl	a584 <__lsan_do_recoverable_leak_check@@Base+0x3f8>
   2d988:	str	xzr, [sp, #152]
   2d98c:	ldr	x0, [sp, #32]
   2d990:	sub	x0, x0, #0x1
   2d994:	ldr	x1, [sp, #40]
   2d998:	add	x0, x1, x0
   2d99c:	str	x0, [sp, #128]
   2d9a0:	ldr	x0, [sp, #136]
   2d9a4:	str	x0, [sp, #144]
   2d9a8:	ldr	x0, [sp, #144]
   2d9ac:	cmp	x0, #0x0
   2d9b0:	b.eq	2dab0 <__sanitizer_symbolize_pc@@Base+0x1b8>  // b.none
   2d9b4:	ldr	x1, [sp, #40]
   2d9b8:	ldr	x0, [sp, #128]
   2d9bc:	cmp	x1, x0
   2d9c0:	b.cs	2dab0 <__sanitizer_symbolize_pc@@Base+0x1b8>  // b.hs, b.nlast
   2d9c4:	add	x0, sp, #0x40
   2d9c8:	bl	2dc58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x48>
   2d9cc:	ldr	x0, [sp, #152]
   2d9d0:	add	x1, x0, #0x1
   2d9d4:	str	x1, [sp, #152]
   2d9d8:	mov	w21, w0
   2d9dc:	ldr	x0, [sp, #144]
   2d9e0:	add	x19, x0, #0x8
   2d9e4:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   2d9e8:	ldrb	w20, [x0, #181]
   2d9ec:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   2d9f0:	ldr	x1, [x0, #24]
   2d9f4:	add	x7, sp, #0x40
   2d9f8:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2d9fc:	add	x6, x0, #0x238
   2da00:	mov	x5, x1
   2da04:	mov	w4, w20
   2da08:	mov	x3, x19
   2da0c:	mov	w2, w21
   2da10:	ldr	x1, [sp, #48]
   2da14:	mov	x0, x7
   2da18:	bl	2ecd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
   2da1c:	add	x0, sp, #0x40
   2da20:	bl	2dc40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x30>
   2da24:	cmp	x0, #0x0
   2da28:	cset	w0, eq  // eq = none
   2da2c:	and	w0, w0, #0xff
   2da30:	cmp	w0, #0x0
   2da34:	b.ne	2da9c <__sanitizer_symbolize_pc@@Base+0x1a4>  // b.any
   2da38:	ldr	x1, [sp, #128]
   2da3c:	ldr	x0, [sp, #40]
   2da40:	sub	x0, x1, x0
   2da44:	sub	x0, x0, #0x1
   2da48:	str	x0, [sp, #120]
   2da4c:	add	x0, sp, #0x40
   2da50:	bl	bc50 <__lsan_do_recoverable_leak_check@@Base+0x1ac4>
   2da54:	ldr	x2, [sp, #120]
   2da58:	mov	x1, x0
   2da5c:	ldr	x0, [sp, #40]
   2da60:	bl	21dfc <__sanitizer_set_report_fd@@Base+0x2c04>
   2da64:	add	x0, sp, #0x40
   2da68:	bl	2dc40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x30>
   2da6c:	mov	x1, x0
   2da70:	ldr	x0, [sp, #120]
   2da74:	bl	aeac <__lsan_do_recoverable_leak_check@@Base+0xd20>
   2da78:	mov	x1, x0
   2da7c:	ldr	x0, [sp, #40]
   2da80:	add	x0, x0, x1
   2da84:	str	x0, [sp, #40]
   2da88:	ldr	x0, [sp, #40]
   2da8c:	add	x1, x0, #0x1
   2da90:	str	x1, [sp, #40]
   2da94:	strb	wzr, [x0]
   2da98:	b	2daa0 <__sanitizer_symbolize_pc@@Base+0x1a8>
   2da9c:	nop
   2daa0:	ldr	x0, [sp, #144]
   2daa4:	ldr	x0, [x0]
   2daa8:	str	x0, [sp, #144]
   2daac:	b	2d9a8 <__sanitizer_symbolize_pc@@Base+0xb0>
   2dab0:	ldr	x1, [sp, #40]
   2dab4:	ldr	x0, [sp, #128]
   2dab8:	cmp	x1, x0
   2dabc:	cset	w0, ls  // ls = plast
   2dac0:	and	w0, w0, #0xff
   2dac4:	and	x0, x0, #0xff
   2dac8:	str	x0, [sp, #112]
   2dacc:	str	xzr, [sp, #104]
   2dad0:	ldr	x1, [sp, #112]
   2dad4:	ldr	x0, [sp, #104]
   2dad8:	cmp	x1, x0
   2dadc:	cset	w0, eq  // eq = none
   2dae0:	and	w0, w0, #0xff
   2dae4:	and	x0, x0, #0xff
   2dae8:	cmp	x0, #0x0
   2daec:	b.eq	2db10 <__sanitizer_symbolize_pc@@Base+0x218>  // b.none
   2daf0:	ldr	x4, [sp, #104]
   2daf4:	ldr	x3, [sp, #112]
   2daf8:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2dafc:	add	x2, x0, #0x288
   2db00:	mov	w1, #0x84                  	// #132
   2db04:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2db08:	add	x0, x0, #0x1e8
   2db0c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2db10:	ldr	x0, [sp, #40]
   2db14:	strb	wzr, [x0]
   2db18:	add	x0, sp, #0x40
   2db1c:	bl	aab4 <__lsan_do_recoverable_leak_check@@Base+0x928>
   2db20:	b	2db28 <__sanitizer_symbolize_pc@@Base+0x230>
   2db24:	nop
   2db28:	ldp	x21, x30, [sp, #16]
   2db2c:	ldp	x19, x20, [sp], #160
   2db30:	ret

000000000002db34 <__sanitizer_symbolize_global@@Base>:
   2db34:	str	x30, [sp, #-144]!
   2db38:	str	x0, [sp, #40]
   2db3c:	str	x1, [sp, #32]
   2db40:	str	x2, [sp, #24]
   2db44:	str	x3, [sp, #16]
   2db48:	ldr	x0, [sp, #16]
   2db4c:	cmp	x0, #0x0
   2db50:	b.eq	2dbfc <__sanitizer_symbolize_global@@Base+0xc8>  // b.none
   2db54:	ldr	x0, [sp, #24]
   2db58:	strb	wzr, [x0]
   2db5c:	add	x0, sp, #0x50
   2db60:	bl	31950 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d40>
   2db64:	bl	3289c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c8c>
   2db68:	mov	x3, x0
   2db6c:	add	x0, sp, #0x50
   2db70:	mov	x2, x0
   2db74:	ldr	x1, [sp, #40]
   2db78:	mov	x0, x3
   2db7c:	bl	32cdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x50cc>
   2db80:	and	w0, w0, #0xff
   2db84:	eor	w0, w0, #0x1
   2db88:	and	w0, w0, #0xff
   2db8c:	cmp	w0, #0x0
   2db90:	b.ne	2dc04 <__sanitizer_symbolize_global@@Base+0xd0>  // b.any
   2db94:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
   2db98:	mov	x1, x0
   2db9c:	add	x0, sp, #0x30
   2dba0:	bl	a584 <__lsan_do_recoverable_leak_check@@Base+0x3f8>
   2dba4:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   2dba8:	ldr	x2, [x0, #24]
   2dbac:	add	x1, sp, #0x50
   2dbb0:	add	x0, sp, #0x30
   2dbb4:	mov	x3, x2
   2dbb8:	mov	x2, x1
   2dbbc:	ldr	x1, [sp, #32]
   2dbc0:	bl	2f1c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15b4>
   2dbc4:	add	x0, sp, #0x30
   2dbc8:	bl	bc50 <__lsan_do_recoverable_leak_check@@Base+0x1ac4>
   2dbcc:	ldr	x2, [sp, #16]
   2dbd0:	mov	x1, x0
   2dbd4:	ldr	x0, [sp, #24]
   2dbd8:	bl	21dfc <__sanitizer_set_report_fd@@Base+0x2c04>
   2dbdc:	ldr	x0, [sp, #16]
   2dbe0:	sub	x0, x0, #0x1
   2dbe4:	ldr	x1, [sp, #24]
   2dbe8:	add	x0, x1, x0
   2dbec:	strb	wzr, [x0]
   2dbf0:	add	x0, sp, #0x30
   2dbf4:	bl	aab4 <__lsan_do_recoverable_leak_check@@Base+0x928>
   2dbf8:	b	2dc08 <__sanitizer_symbolize_global@@Base+0xd4>
   2dbfc:	nop
   2dc00:	b	2dc08 <__sanitizer_symbolize_global@@Base+0xd4>
   2dc04:	nop
   2dc08:	ldr	x30, [sp], #144
   2dc0c:	ret

000000000002dc10 <__sanitizer_get_module_and_offset_for_pc@@Base>:
   2dc10:	str	x30, [sp, #-48]!
   2dc14:	str	x0, [sp, #40]
   2dc18:	str	x1, [sp, #32]
   2dc1c:	str	x2, [sp, #24]
   2dc20:	str	x3, [sp, #16]
   2dc24:	ldr	x3, [sp, #16]
   2dc28:	ldr	x2, [sp, #24]
   2dc2c:	ldr	x1, [sp, #32]
   2dc30:	ldr	x0, [sp, #40]
   2dc34:	bl	2d854 <OnPrint@@Base+0x38ac>
   2dc38:	ldr	x30, [sp], #48
   2dc3c:	ret
   2dc40:	sub	sp, sp, #0x10
   2dc44:	str	x0, [sp, #8]
   2dc48:	ldr	x0, [sp, #8]
   2dc4c:	ldr	x0, [x0, #24]
   2dc50:	add	sp, sp, #0x10
   2dc54:	ret
   2dc58:	str	x30, [sp, #-32]!
   2dc5c:	str	x0, [sp, #24]
   2dc60:	ldr	x0, [sp, #24]
   2dc64:	mov	x1, #0x0                   	// #0
   2dc68:	bl	ac0c <__lsan_do_recoverable_leak_check@@Base+0xa80>
   2dc6c:	strb	wzr, [x0]
   2dc70:	ldr	x0, [sp, #24]
   2dc74:	str	xzr, [x0, #24]
   2dc78:	nop
   2dc7c:	ldr	x30, [sp], #32
   2dc80:	ret
   2dc84:	sub	sp, sp, #0x10
   2dc88:	strb	w0, [sp, #15]
   2dc8c:	ldrb	w0, [sp, #15]
   2dc90:	add	sp, sp, #0x10
   2dc94:	ret
   2dc98:	stp	x19, x30, [sp, #-80]!
   2dc9c:	str	x0, [sp, #40]
   2dca0:	str	x1, [sp, #32]
   2dca4:	str	x2, [sp, #24]
   2dca8:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   2dcac:	ldrb	w0, [x0, #60]
   2dcb0:	eor	w0, w0, #0x1
   2dcb4:	and	w0, w0, #0xff
   2dcb8:	cmp	w0, #0x0
   2dcbc:	b.ne	2dd3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x12c>  // b.any
   2dcc0:	add	x0, sp, #0x30
   2dcc4:	mov	x1, #0x400                 	// #1024
   2dcc8:	bl	a584 <__lsan_do_recoverable_leak_check@@Base+0x3f8>
   2dccc:	add	x3, sp, #0x30
   2dcd0:	ldr	x2, [sp, #40]
   2dcd4:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2dcd8:	add	x1, x0, #0x4c8
   2dcdc:	mov	x0, x3
   2dce0:	bl	2a564 <OnPrint@@Base+0x5bc>
   2dce4:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   2dce8:	ldrb	w19, [x0, #181]
   2dcec:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   2dcf0:	ldr	x1, [x0, #24]
   2dcf4:	add	x7, sp, #0x30
   2dcf8:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2dcfc:	add	x6, x0, #0x4a0
   2dd00:	mov	x5, x1
   2dd04:	mov	w4, w19
   2dd08:	ldr	x3, [sp, #32]
   2dd0c:	mov	w2, #0x0                   	// #0
   2dd10:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2dd14:	add	x1, x0, #0x4d0
   2dd18:	mov	x0, x7
   2dd1c:	bl	2ecd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
   2dd20:	add	x0, sp, #0x30
   2dd24:	bl	bc50 <__lsan_do_recoverable_leak_check@@Base+0x1ac4>
   2dd28:	ldr	x1, [sp, #24]
   2dd2c:	bl	19414 <__sancov_default_options@@Base+0x3278>
   2dd30:	add	x0, sp, #0x30
   2dd34:	bl	aab4 <__lsan_do_recoverable_leak_check@@Base+0x928>
   2dd38:	b	2dd40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x130>
   2dd3c:	nop
   2dd40:	ldp	x19, x30, [sp], #80
   2dd44:	ret
   2dd48:	stp	x19, x30, [sp, #-48]!
   2dd4c:	str	x0, [sp, #24]
   2dd50:	ldr	x0, [sp, #24]
   2dd54:	ldr	x1, [x0]
   2dd58:	add	x0, sp, #0x28
   2dd5c:	bl	f58c <__sanitizer_get_allocated_size@@Base+0xa2c>
   2dd60:	ldr	x0, [sp, #24]
   2dd64:	bl	1e890 <__sanitizer_cov_pcs_init@@Base+0x37f4>
   2dd68:	ldr	x0, [sp, #24]
   2dd6c:	ldr	w0, [x0, #8]
   2dd70:	bl	27eb8 <__sanitizer_set_report_fd@@Base+0x8cc0>
   2dd74:	and	w19, w0, #0xff
   2dd78:	nop
   2dd7c:	add	x0, sp, #0x28
   2dd80:	bl	f5bc <__sanitizer_get_allocated_size@@Base+0xa5c>
   2dd84:	mov	w0, w19
   2dd88:	ldp	x19, x30, [sp], #48
   2dd8c:	ret
   2dd90:	str	x30, [sp, #-16]!
   2dd94:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   2dd98:	ldr	x0, [x0, #3816]
   2dd9c:	bl	2dd48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x138>
   2dda0:	and	w0, w0, #0xff
   2dda4:	ldr	x30, [sp], #16
   2dda8:	ret
   2ddac:	str	x30, [sp, #-32]!
   2ddb0:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   2ddb4:	ldr	x0, [x0, #112]
   2ddb8:	str	x0, [sp, #24]
   2ddbc:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2ddc0:	add	x1, x0, #0x4d8
   2ddc4:	ldr	x0, [sp, #24]
   2ddc8:	bl	21950 <__sanitizer_set_report_fd@@Base+0x2758>
   2ddcc:	cmp	w0, #0x0
   2ddd0:	b.eq	2ddfc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ec>  // b.none
   2ddd4:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2ddd8:	add	x1, x0, #0x4e0
   2dddc:	ldr	x0, [sp, #24]
   2dde0:	bl	21950 <__sanitizer_set_report_fd@@Base+0x2758>
   2dde4:	cmp	w0, #0x0
   2dde8:	b.ne	2de04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f4>  // b.any
   2ddec:	bl	2dd90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x180>
   2ddf0:	and	w0, w0, #0xff
   2ddf4:	cmp	w0, #0x0
   2ddf8:	b.eq	2de04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f4>  // b.none
   2ddfc:	mov	w0, #0x1                   	// #1
   2de00:	b	2de08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f8>
   2de04:	mov	w0, #0x0                   	// #0
   2de08:	ldr	x30, [sp], #32
   2de0c:	ret
   2de10:	str	x30, [sp, #-80]!
   2de14:	str	x0, [sp, #40]
   2de18:	str	x1, [sp, #32]
   2de1c:	str	x2, [sp, #24]
   2de20:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   2de24:	ldrb	w0, [x0, #60]
   2de28:	eor	w0, w0, #0x1
   2de2c:	and	w0, w0, #0xff
   2de30:	cmp	w0, #0x0
   2de34:	b.ne	2dea8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x298>  // b.any
   2de38:	ldr	x0, [sp, #32]
   2de3c:	ldr	w0, [x0, #8]
   2de40:	cmp	w0, #0x0
   2de44:	b.ne	2de58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x248>  // b.any
   2de48:	mov	x1, #0x0                   	// #0
   2de4c:	ldr	x0, [sp, #40]
   2de50:	bl	19414 <__sancov_default_options@@Base+0x3278>
   2de54:	b	2deac <__sanitizer_get_module_and_offset_for_pc@@Base+0x29c>
   2de58:	ldr	x0, [sp, #32]
   2de5c:	ldr	x0, [x0]
   2de60:	ldr	x0, [x0]
   2de64:	str	x0, [sp, #56]
   2de68:	ldr	x0, [sp, #56]
   2de6c:	sub	x0, x0, #0x4
   2de70:	str	x0, [sp, #72]
   2de74:	bl	3289c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c8c>
   2de78:	ldr	x1, [sp, #72]
   2de7c:	bl	32b94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f84>
   2de80:	str	x0, [sp, #64]
   2de84:	ldr	x0, [sp, #64]
   2de88:	add	x0, x0, #0x8
   2de8c:	ldr	x2, [sp, #24]
   2de90:	mov	x1, x0
   2de94:	ldr	x0, [sp, #40]
   2de98:	bl	2dc98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x88>
   2de9c:	ldr	x0, [sp, #64]
   2dea0:	bl	31908 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3cf8>
   2dea4:	b	2deac <__sanitizer_get_module_and_offset_for_pc@@Base+0x29c>
   2dea8:	nop
   2deac:	ldr	x30, [sp], #80
   2deb0:	ret
   2deb4:	stp	x29, x30, [sp, #-144]!
   2deb8:	mov	x29, sp
   2debc:	str	x19, [sp, #16]
   2dec0:	mov	x19, x30
   2dec4:	str	w0, [x29, #44]
   2dec8:	ldr	w0, [x29, #44]
   2decc:	and	w0, w0, #0x6
   2ded0:	cmp	w0, #0x6
   2ded4:	b.ne	2e000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f0>  // b.any
   2ded8:	add	x0, x29, #0x68
   2dedc:	bl	2e6b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xaa8>
   2dee0:	add	x0, x29, #0x60
   2dee4:	bl	a920 <__lsan_do_recoverable_leak_check@@Base+0x794>
   2dee8:	add	x0, x29, #0x48
   2deec:	mov	x1, #0x1                   	// #1
   2def0:	bl	2e8cc <__sanitizer_get_module_and_offset_for_pc@@Base+0xcbc>
   2def4:	add	x0, x29, #0x48
   2def8:	bl	2e918 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd08>
   2defc:	str	x0, [x29, #136]
   2df00:	ldr	x0, [x29, #136]
   2df04:	bl	2e890 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc80>
   2df08:	str	xzr, [x29, #64]
   2df0c:	str	xzr, [x29, #56]
   2df10:	mov	x0, x29
   2df14:	str	x0, [x29, #128]
   2df18:	mov	x0, x19
   2df1c:	str	x0, [x29, #120]
   2df20:	add	x0, x29, #0x30
   2df24:	str	x0, [x29, #112]
   2df28:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   2df2c:	ldrb	w0, [x0, #33]
   2df30:	strb	w0, [x29, #111]
   2df34:	ldrb	w0, [x29, #111]
   2df38:	cmp	w0, #0x0
   2df3c:	b.eq	2df58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x348>  // b.none
   2df40:	add	x1, x29, #0x38
   2df44:	add	x0, x29, #0x40
   2df48:	mov	x2, x1
   2df4c:	mov	x1, x0
   2df50:	mov	w0, #0x0                   	// #0
   2df54:	bl	25594 <__sanitizer_set_report_fd@@Base+0x639c>
   2df58:	ldr	x0, [x29, #64]
   2df5c:	ldr	x1, [x29, #56]
   2df60:	ldrb	w7, [x29, #111]
   2df64:	mov	x6, x1
   2df68:	mov	x5, x0
   2df6c:	mov	x4, #0x0                   	// #0
   2df70:	ldr	x3, [x29, #128]
   2df74:	ldr	x2, [x29, #120]
   2df78:	mov	w1, #0x100                 	// #256
   2df7c:	ldr	x0, [x29, #136]
   2df80:	bl	2d758 <OnPrint@@Base+0x37b0>
   2df84:	add	x0, x29, #0x60
   2df88:	bl	2e82c <__sanitizer_get_module_and_offset_for_pc@@Base+0xc1c>
   2df8c:	mov	x1, x0
   2df90:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2df94:	add	x0, x0, #0x4e8
   2df98:	bl	2a350 <OnPrint@@Base+0x3a8>
   2df9c:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   2dfa0:	ldr	x0, [x0, #4008]
   2dfa4:	ldr	x0, [x0]
   2dfa8:	mov	x1, x0
   2dfac:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2dfb0:	add	x0, x0, #0x4f0
   2dfb4:	bl	2a3fc <OnPrint@@Base+0x454>
   2dfb8:	add	x0, x29, #0x60
   2dfbc:	bl	a944 <__lsan_do_recoverable_leak_check@@Base+0x7b8>
   2dfc0:	mov	x1, x0
   2dfc4:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2dfc8:	add	x0, x0, #0x4e8
   2dfcc:	bl	2a350 <OnPrint@@Base+0x3a8>
   2dfd0:	ldr	x0, [x29, #136]
   2dfd4:	bl	2d4a4 <OnPrint@@Base+0x34fc>
   2dfd8:	mov	x2, #0x0                   	// #0
   2dfdc:	ldr	x1, [x29, #136]
   2dfe0:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2dfe4:	add	x0, x0, #0x520
   2dfe8:	bl	2de10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x200>
   2dfec:	add	x0, x29, #0x48
   2dff0:	bl	2e8fc <__sanitizer_get_module_and_offset_for_pc@@Base+0xcec>
   2dff4:	add	x0, x29, #0x68
   2dff8:	bl	2e768 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb58>
   2dffc:	b	2e004 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f4>
   2e000:	nop
   2e004:	ldr	x19, [sp, #16]
   2e008:	ldp	x29, x30, [sp], #144
   2e00c:	ret
   2e010:	stp	x19, x30, [sp, #-16]!
   2e014:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   2e018:	ldr	x0, [x0, #4008]
   2e01c:	ldr	x19, [x0]
   2e020:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   2e024:	ldr	x0, [x0, #4008]
   2e028:	ldr	x0, [x0]
   2e02c:	bl	21bac <__sanitizer_set_report_fd@@Base+0x29b4>
   2e030:	mov	x1, x0
   2e034:	mov	x0, x19
   2e038:	bl	1e830 <__sanitizer_cov_pcs_init@@Base+0x3794>
   2e03c:	mov	x1, #0xe                   	// #14
   2e040:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2e044:	add	x0, x0, #0x530
   2e048:	bl	1e830 <__sanitizer_cov_pcs_init@@Base+0x3794>
   2e04c:	nop
   2e050:	ldp	x19, x30, [sp], #16
   2e054:	ret
   2e058:	str	x30, [sp, #-144]!
   2e05c:	str	x0, [sp, #24]
   2e060:	add	x0, sp, #0x70
   2e064:	mov	w1, #0x1                   	// #1
   2e068:	bl	2aa20 <OnPrint@@Base+0xa78>
   2e06c:	add	x0, sp, #0x20
   2e070:	mov	x2, #0x0                   	// #0
   2e074:	mov	x1, #0x0                   	// #0
   2e078:	bl	a5e0 <__lsan_do_recoverable_leak_check@@Base+0x454>
   2e07c:	add	x1, sp, #0x20
   2e080:	add	x0, sp, #0x70
   2e084:	bl	2b030 <OnPrint@@Base+0x1088>
   2e088:	and	w0, w0, #0xff
   2e08c:	cmp	w0, #0x0
   2e090:	b.eq	2e0f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e4>  // b.none
   2e094:	ldr	x0, [sp, #32]
   2e098:	ldr	x1, [sp, #24]
   2e09c:	cmp	x1, x0
   2e0a0:	b.cc	2e0d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c8>  // b.lo, b.ul, b.last
   2e0a4:	ldr	x0, [sp, #40]
   2e0a8:	ldr	x1, [sp, #24]
   2e0ac:	cmp	x1, x0
   2e0b0:	b.cs	2e0d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c8>  // b.hs, b.nlast
   2e0b4:	add	x0, sp, #0x20
   2e0b8:	bl	27a98 <__sanitizer_set_report_fd@@Base+0x88a0>
   2e0bc:	and	w0, w0, #0xff
   2e0c0:	eor	w0, w0, #0x1
   2e0c4:	and	w0, w0, #0xff
   2e0c8:	cmp	w0, #0x0
   2e0cc:	b.eq	2e0d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c8>  // b.none
   2e0d0:	mov	w0, #0x1                   	// #1
   2e0d4:	b	2e0dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4cc>
   2e0d8:	mov	w0, #0x0                   	// #0
   2e0dc:	cmp	w0, #0x0
   2e0e0:	b.eq	2e07c <__sanitizer_get_module_and_offset_for_pc@@Base+0x46c>  // b.none
   2e0e4:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2e0e8:	add	x0, x0, #0x540
   2e0ec:	bl	2a3fc <OnPrint@@Base+0x454>
   2e0f0:	b	2e07c <__sanitizer_get_module_and_offset_for_pc@@Base+0x46c>
   2e0f4:	add	x0, sp, #0x20
   2e0f8:	bl	a61c <__lsan_do_recoverable_leak_check@@Base+0x490>
   2e0fc:	add	x0, sp, #0x70
   2e100:	bl	2ab1c <OnPrint@@Base+0xb74>
   2e104:	nop
   2e108:	ldr	x30, [sp], #144
   2e10c:	ret
   2e110:	stp	x19, x20, [sp, #-80]!
   2e114:	stp	x21, x30, [sp, #16]
   2e118:	str	x0, [sp, #56]
   2e11c:	str	x1, [sp, #48]
   2e120:	strb	w2, [sp, #47]
   2e124:	add	x0, sp, #0x48
   2e128:	bl	a920 <__lsan_do_recoverable_leak_check@@Base+0x794>
   2e12c:	add	x0, sp, #0x48
   2e130:	bl	2e844 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc34>
   2e134:	mov	x21, x0
   2e138:	ldrb	w0, [sp, #47]
   2e13c:	asr	w19, w0, #4
   2e140:	ldrb	w0, [sp, #47]
   2e144:	and	w20, w0, #0xf
   2e148:	add	x0, sp, #0x48
   2e14c:	bl	a944 <__lsan_do_recoverable_leak_check@@Base+0x7b8>
   2e150:	mov	x6, x0
   2e154:	mov	w5, w20
   2e158:	mov	w4, w19
   2e15c:	mov	x3, x21
   2e160:	ldr	x2, [sp, #48]
   2e164:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2e168:	add	x1, x0, #0x580
   2e16c:	ldr	x0, [sp, #56]
   2e170:	bl	2a564 <OnPrint@@Base+0x5bc>
   2e174:	nop
   2e178:	ldp	x21, x30, [sp, #16]
   2e17c:	ldp	x19, x20, [sp], #80
   2e180:	ret
   2e184:	str	x30, [sp, #-80]!
   2e188:	str	x0, [sp, #24]
   2e18c:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   2e190:	ldrb	w0, [x0, #232]
   2e194:	eor	w0, w0, #0x1
   2e198:	and	w0, w0, #0xff
   2e19c:	cmp	w0, #0x0
   2e1a0:	b.ne	2e1b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a8>  // b.any
   2e1a4:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
   2e1a8:	mov	x1, x0
   2e1ac:	ldr	x0, [sp, #24]
   2e1b0:	cmp	x0, x1
   2e1b4:	b.cs	2e1c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b0>  // b.hs, b.nlast
   2e1b8:	mov	w0, #0x1                   	// #1
   2e1bc:	b	2e1c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b4>
   2e1c0:	mov	w0, #0x0                   	// #0
   2e1c4:	cmp	w0, #0x0
   2e1c8:	b.ne	2e29c <__sanitizer_get_module_and_offset_for_pc@@Base+0x68c>  // b.any
   2e1cc:	add	x0, sp, #0x28
   2e1d0:	mov	x1, #0x400                 	// #1024
   2e1d4:	bl	a584 <__lsan_do_recoverable_leak_check@@Base+0x3f8>
   2e1d8:	add	x2, sp, #0x28
   2e1dc:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2e1e0:	add	x1, x0, #0x590
   2e1e4:	mov	x0, x2
   2e1e8:	bl	2a564 <OnPrint@@Base+0x5bc>
   2e1ec:	mov	x1, #0x10                  	// #16
   2e1f0:	ldr	x0, [sp, #24]
   2e1f4:	bl	28290 <__sanitizer_set_report_fd@@Base+0x9098>
   2e1f8:	and	w0, w0, #0xff
   2e1fc:	cmp	w0, #0x0
   2e200:	b.eq	2e264 <__sanitizer_get_module_and_offset_for_pc@@Base+0x654>  // b.none
   2e204:	str	wzr, [sp, #76]
   2e208:	ldr	w0, [sp, #76]
   2e20c:	cmp	w0, #0xf
   2e210:	b.gt	2e24c <__sanitizer_get_module_and_offset_for_pc@@Base+0x63c>
   2e214:	ldrsw	x1, [sp, #76]
   2e218:	ldr	x0, [sp, #24]
   2e21c:	add	x0, x1, x0
   2e220:	ldrb	w0, [x0]
   2e224:	add	x3, sp, #0x28
   2e228:	mov	w2, w0
   2e22c:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2e230:	add	x1, x0, #0x4a0
   2e234:	mov	x0, x3
   2e238:	bl	2e110 <__sanitizer_get_module_and_offset_for_pc@@Base+0x500>
   2e23c:	ldr	w0, [sp, #76]
   2e240:	add	w0, w0, #0x1
   2e244:	str	w0, [sp, #76]
   2e248:	b	2e208 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f8>
   2e24c:	add	x2, sp, #0x28
   2e250:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2e254:	add	x1, x0, #0x5b8
   2e258:	mov	x0, x2
   2e25c:	bl	2a564 <OnPrint@@Base+0x5bc>
   2e260:	b	2e278 <__sanitizer_get_module_and_offset_for_pc@@Base+0x668>
   2e264:	add	x2, sp, #0x28
   2e268:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2e26c:	add	x1, x0, #0x5c0
   2e270:	mov	x0, x2
   2e274:	bl	2a564 <OnPrint@@Base+0x5bc>
   2e278:	add	x0, sp, #0x28
   2e27c:	bl	bc50 <__lsan_do_recoverable_leak_check@@Base+0x1ac4>
   2e280:	mov	x1, x0
   2e284:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2e288:	add	x0, x0, #0x4e8
   2e28c:	bl	2a3fc <OnPrint@@Base+0x454>
   2e290:	add	x0, sp, #0x28
   2e294:	bl	aab4 <__lsan_do_recoverable_leak_check@@Base+0x928>
   2e298:	b	2e2a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x690>
   2e29c:	nop
   2e2a0:	ldr	x30, [sp], #80
   2e2a4:	ret
   2e2a8:	str	x30, [sp, #-32]!
   2e2ac:	str	x0, [sp, #24]
   2e2b0:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   2e2b4:	ldrb	w0, [x0, #233]
   2e2b8:	eor	w0, w0, #0x1
   2e2bc:	and	w0, w0, #0xff
   2e2c0:	cmp	w0, #0x0
   2e2c4:	b.ne	2e2d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6c4>  // b.any
   2e2c8:	ldr	x0, [sp, #24]
   2e2cc:	bl	24f64 <__sanitizer_set_report_fd@@Base+0x5d6c>
   2e2d0:	b	2e2d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6c8>
   2e2d4:	nop
   2e2d8:	ldr	x30, [sp], #32
   2e2dc:	ret
   2e2e0:	str	x30, [sp, #-96]!
   2e2e4:	str	x0, [sp, #40]
   2e2e8:	str	w1, [sp, #36]
   2e2ec:	str	x2, [sp, #24]
   2e2f0:	str	x3, [sp, #16]
   2e2f4:	add	x0, sp, #0x50
   2e2f8:	bl	a920 <__lsan_do_recoverable_leak_check@@Base+0x794>
   2e2fc:	add	x0, sp, #0x50
   2e300:	bl	2e82c <__sanitizer_get_module_and_offset_for_pc@@Base+0xc1c>
   2e304:	mov	x1, x0
   2e308:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2e30c:	add	x0, x0, #0x4e8
   2e310:	bl	2a350 <OnPrint@@Base+0x3a8>
   2e314:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   2e318:	ldr	x0, [x0, #4008]
   2e31c:	ldr	x1, [x0]
   2e320:	ldr	x0, [sp, #40]
   2e324:	ldr	x0, [x0, #16]
   2e328:	mov	x2, x0
   2e32c:	ldr	x0, [sp, #40]
   2e330:	ldr	x0, [x0, #24]
   2e334:	mov	x3, x0
   2e338:	ldr	x0, [sp, #40]
   2e33c:	ldr	x0, [x0, #40]
   2e340:	mov	x4, x0
   2e344:	ldr	x0, [sp, #40]
   2e348:	ldr	x0, [x0, #32]
   2e34c:	ldr	w7, [sp, #36]
   2e350:	mov	x6, x0
   2e354:	mov	x5, x4
   2e358:	mov	x4, x3
   2e35c:	mov	x3, x2
   2e360:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2e364:	add	x2, x0, #0x5d0
   2e368:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2e36c:	add	x0, x0, #0x5e0
   2e370:	bl	2a3fc <OnPrint@@Base+0x454>
   2e374:	add	x0, sp, #0x50
   2e378:	bl	a944 <__lsan_do_recoverable_leak_check@@Base+0x7b8>
   2e37c:	mov	x1, x0
   2e380:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2e384:	add	x0, x0, #0x4e8
   2e388:	bl	2a350 <OnPrint@@Base+0x3a8>
   2e38c:	add	x0, sp, #0x38
   2e390:	mov	x1, #0x1                   	// #1
   2e394:	bl	2e8cc <__sanitizer_get_module_and_offset_for_pc@@Base+0xcbc>
   2e398:	add	x0, sp, #0x38
   2e39c:	bl	2e918 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd08>
   2e3a0:	str	x0, [sp, #88]
   2e3a4:	ldr	x0, [sp, #88]
   2e3a8:	bl	2e890 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc80>
   2e3ac:	ldr	x3, [sp, #24]
   2e3b0:	ldr	x2, [sp, #88]
   2e3b4:	ldr	x1, [sp, #16]
   2e3b8:	ldr	x0, [sp, #40]
   2e3bc:	blr	x3
   2e3c0:	ldr	x0, [sp, #88]
   2e3c4:	bl	2d4a4 <OnPrint@@Base+0x34fc>
   2e3c8:	mov	x2, #0x0                   	// #0
   2e3cc:	ldr	x1, [sp, #88]
   2e3d0:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2e3d4:	add	x0, x0, #0x5d0
   2e3d8:	bl	2de10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x200>
   2e3dc:	add	x0, sp, #0x38
   2e3e0:	bl	2e8fc <__sanitizer_get_module_and_offset_for_pc@@Base+0xcec>
   2e3e4:	nop
   2e3e8:	ldr	x30, [sp], #96
   2e3ec:	ret
   2e3f0:	stp	x19, x30, [sp, #-112]!
   2e3f4:	str	x0, [sp, #40]
   2e3f8:	str	w1, [sp, #36]
   2e3fc:	str	x2, [sp, #24]
   2e400:	str	x3, [sp, #16]
   2e404:	add	x0, sp, #0x50
   2e408:	bl	a920 <__lsan_do_recoverable_leak_check@@Base+0x794>
   2e40c:	add	x0, sp, #0x50
   2e410:	bl	2e82c <__sanitizer_get_module_and_offset_for_pc@@Base+0xc1c>
   2e414:	mov	x1, x0
   2e418:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2e41c:	add	x0, x0, #0x4e8
   2e420:	bl	2a350 <OnPrint@@Base+0x3a8>
   2e424:	ldr	x0, [sp, #40]
   2e428:	bl	279f8 <__sanitizer_set_report_fd@@Base+0x8800>
   2e42c:	str	x0, [sp, #104]
   2e430:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   2e434:	ldr	x0, [x0, #4008]
   2e438:	ldr	x1, [x0]
   2e43c:	ldr	x0, [sp, #40]
   2e440:	ldr	x0, [x0, #16]
   2e444:	mov	x2, x0
   2e448:	ldr	x0, [sp, #40]
   2e44c:	ldr	x0, [x0, #24]
   2e450:	mov	x3, x0
   2e454:	ldr	x0, [sp, #40]
   2e458:	ldr	x0, [x0, #40]
   2e45c:	mov	x4, x0
   2e460:	ldr	x0, [sp, #40]
   2e464:	ldr	x0, [x0, #32]
   2e468:	ldr	w7, [sp, #36]
   2e46c:	mov	x6, x0
   2e470:	mov	x5, x4
   2e474:	mov	x4, x3
   2e478:	mov	x3, x2
   2e47c:	ldr	x2, [sp, #104]
   2e480:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2e484:	add	x0, x0, #0x618
   2e488:	bl	2a3fc <OnPrint@@Base+0x454>
   2e48c:	add	x0, sp, #0x50
   2e490:	bl	a944 <__lsan_do_recoverable_leak_check@@Base+0x7b8>
   2e494:	mov	x1, x0
   2e498:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2e49c:	add	x0, x0, #0x4e8
   2e4a0:	bl	2a350 <OnPrint@@Base+0x3a8>
   2e4a4:	ldr	x0, [sp, #40]
   2e4a8:	ldr	x19, [x0, #24]
   2e4ac:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
   2e4b0:	cmp	x19, x0
   2e4b4:	cset	w0, cc  // cc = lo, ul, last
   2e4b8:	and	w0, w0, #0xff
   2e4bc:	cmp	w0, #0x0
   2e4c0:	b.eq	2e4d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8c0>  // b.none
   2e4c4:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2e4c8:	add	x0, x0, #0x658
   2e4cc:	bl	2a3fc <OnPrint@@Base+0x454>
   2e4d0:	ldr	x0, [sp, #40]
   2e4d4:	ldrb	w0, [x0, #48]
   2e4d8:	cmp	w0, #0x0
   2e4dc:	b.eq	2e560 <__sanitizer_get_module_and_offset_for_pc@@Base+0x950>  // b.none
   2e4e0:	ldr	x0, [sp, #40]
   2e4e4:	ldr	w0, [x0, #52]
   2e4e8:	cmp	w0, #0x2
   2e4ec:	b.eq	2e518 <__sanitizer_get_module_and_offset_for_pc@@Base+0x908>  // b.none
   2e4f0:	ldr	x0, [sp, #40]
   2e4f4:	ldr	w0, [x0, #52]
   2e4f8:	cmp	w0, #0x1
   2e4fc:	b.ne	2e50c <__sanitizer_get_module_and_offset_for_pc@@Base+0x8fc>  // b.any
   2e500:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2e504:	add	x0, x0, #0x680
   2e508:	b	2e520 <__sanitizer_get_module_and_offset_for_pc@@Base+0x910>
   2e50c:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2e510:	add	x0, x0, #0x688
   2e514:	b	2e520 <__sanitizer_get_module_and_offset_for_pc@@Base+0x910>
   2e518:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2e51c:	add	x0, x0, #0x690
   2e520:	str	x0, [sp, #96]
   2e524:	ldr	x1, [sp, #96]
   2e528:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2e52c:	add	x0, x0, #0x698
   2e530:	bl	2a3fc <OnPrint@@Base+0x454>
   2e534:	ldr	x0, [sp, #40]
   2e538:	ldr	x19, [x0, #16]
   2e53c:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
   2e540:	cmp	x19, x0
   2e544:	cset	w0, cc  // cc = lo, ul, last
   2e548:	and	w0, w0, #0xff
   2e54c:	cmp	w0, #0x0
   2e550:	b.eq	2e560 <__sanitizer_get_module_and_offset_for_pc@@Base+0x950>  // b.none
   2e554:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2e558:	add	x0, x0, #0x6c8
   2e55c:	bl	2a3fc <OnPrint@@Base+0x454>
   2e560:	ldr	x0, [sp, #40]
   2e564:	ldr	x0, [x0, #24]
   2e568:	bl	2e058 <__sanitizer_get_module_and_offset_for_pc@@Base+0x448>
   2e56c:	add	x0, sp, #0x38
   2e570:	mov	x1, #0x1                   	// #1
   2e574:	bl	2e8cc <__sanitizer_get_module_and_offset_for_pc@@Base+0xcbc>
   2e578:	add	x0, sp, #0x38
   2e57c:	bl	2e918 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd08>
   2e580:	str	x0, [sp, #88]
   2e584:	ldr	x0, [sp, #88]
   2e588:	bl	2e890 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc80>
   2e58c:	ldr	x3, [sp, #24]
   2e590:	ldr	x2, [sp, #88]
   2e594:	ldr	x1, [sp, #16]
   2e598:	ldr	x0, [sp, #40]
   2e59c:	blr	x3
   2e5a0:	ldr	x0, [sp, #88]
   2e5a4:	bl	2d4a4 <OnPrint@@Base+0x34fc>
   2e5a8:	ldr	x0, [sp, #40]
   2e5ac:	ldr	x0, [x0, #24]
   2e5b0:	bl	2e184 <__sanitizer_get_module_and_offset_for_pc@@Base+0x574>
   2e5b4:	ldr	x0, [sp, #40]
   2e5b8:	ldr	x0, [x0, #8]
   2e5bc:	bl	2e2a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x698>
   2e5c0:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   2e5c4:	ldr	x0, [x0, #4008]
   2e5c8:	ldr	x0, [x0]
   2e5cc:	mov	x1, x0
   2e5d0:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2e5d4:	add	x0, x0, #0x6f0
   2e5d8:	bl	2a350 <OnPrint@@Base+0x3a8>
   2e5dc:	mov	x2, #0x0                   	// #0
   2e5e0:	ldr	x1, [sp, #88]
   2e5e4:	ldr	x0, [sp, #104]
   2e5e8:	bl	2de10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x200>
   2e5ec:	add	x0, sp, #0x38
   2e5f0:	bl	2e8fc <__sanitizer_get_module_and_offset_for_pc@@Base+0xcec>
   2e5f4:	nop
   2e5f8:	ldp	x19, x30, [sp], #112
   2e5fc:	ret
   2e600:	str	x30, [sp, #-48]!
   2e604:	str	x0, [sp, #40]
   2e608:	str	w1, [sp, #36]
   2e60c:	str	x2, [sp, #24]
   2e610:	str	x3, [sp, #16]
   2e614:	ldr	x0, [sp, #40]
   2e618:	bl	281d4 <__sanitizer_set_report_fd@@Base+0x8fdc>
   2e61c:	and	w0, w0, #0xff
   2e620:	cmp	w0, #0x0
   2e624:	b.eq	2e640 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa30>  // b.none
   2e628:	ldr	x3, [sp, #16]
   2e62c:	ldr	x2, [sp, #24]
   2e630:	ldr	w1, [sp, #36]
   2e634:	ldr	x0, [sp, #40]
   2e638:	bl	2e2e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6d0>
   2e63c:	b	2e654 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa44>
   2e640:	ldr	x3, [sp, #16]
   2e644:	ldr	x2, [sp, #24]
   2e648:	ldr	w1, [sp, #36]
   2e64c:	ldr	x0, [sp, #40]
   2e650:	bl	2e3f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7e0>
   2e654:	nop
   2e658:	ldr	x30, [sp], #48
   2e65c:	ret
   2e660:	str	x30, [sp, #-128]!
   2e664:	str	x0, [sp, #56]
   2e668:	str	x1, [sp, #48]
   2e66c:	str	w2, [sp, #44]
   2e670:	str	x3, [sp, #32]
   2e674:	str	x4, [sp, #24]
   2e678:	bl	2e010 <__sanitizer_get_module_and_offset_for_pc@@Base+0x400>
   2e67c:	add	x0, sp, #0x78
   2e680:	bl	2e6b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xaa8>
   2e684:	add	x0, sp, #0x40
   2e688:	ldr	x2, [sp, #48]
   2e68c:	ldr	x1, [sp, #56]
   2e690:	bl	2e7b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xba4>
   2e694:	add	x0, sp, #0x40
   2e698:	ldr	x3, [sp, #24]
   2e69c:	ldr	x2, [sp, #32]
   2e6a0:	ldr	w1, [sp, #44]
   2e6a4:	bl	2e600 <__sanitizer_get_module_and_offset_for_pc@@Base+0x9f0>
   2e6a8:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2e6ac:	add	x0, x0, #0x718
   2e6b0:	bl	2a3fc <OnPrint@@Base+0x454>
   2e6b4:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   2e6b8:	stp	x19, x30, [sp, #-48]!
   2e6bc:	str	x0, [sp, #24]
   2e6c0:	bl	27ad0 <__sanitizer_set_report_fd@@Base+0x88d8>
   2e6c4:	str	x0, [sp, #40]
   2e6c8:	str	xzr, [sp, #32]
   2e6cc:	add	x0, sp, #0x20
   2e6d0:	mov	w3, #0x1                   	// #1
   2e6d4:	ldr	x2, [sp, #40]
   2e6d8:	mov	x1, x0
   2e6dc:	adrp	x0, 9d4000 <__asan_cplus_demangle_builtin_types@@Base+0x957b40>
   2e6e0:	add	x0, x0, #0x90
   2e6e4:	bl	2cbd0 <OnPrint@@Base+0x2c28>
   2e6e8:	and	w0, w0, #0xff
   2e6ec:	cmp	w0, #0x0
   2e6f0:	b.eq	2e704 <__sanitizer_get_module_and_offset_for_pc@@Base+0xaf4>  // b.none
   2e6f4:	adrp	x0, 9d4000 <__asan_cplus_demangle_builtin_types@@Base+0x957b40>
   2e6f8:	add	x0, x0, #0x98
   2e6fc:	bl	ebb0 <__sanitizer_get_allocated_size@@Base+0x50>
   2e700:	b	2e760 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb50>
   2e704:	ldr	x0, [sp, #32]
   2e708:	ldr	x1, [sp, #40]
   2e70c:	cmp	x1, x0
   2e710:	b.ne	2e758 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb48>  // b.any
   2e714:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   2e718:	ldr	x0, [x0, #4008]
   2e71c:	ldr	x19, [x0]
   2e720:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   2e724:	ldr	x0, [x0, #4008]
   2e728:	ldr	x0, [x0]
   2e72c:	bl	21bac <__sanitizer_set_report_fd@@Base+0x29b4>
   2e730:	mov	x1, x0
   2e734:	mov	x0, x19
   2e738:	bl	1e830 <__sanitizer_cov_pcs_init@@Base+0x3794>
   2e73c:	mov	x1, #0x2b                  	// #43
   2e740:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2e744:	add	x0, x0, #0x728
   2e748:	bl	1e830 <__sanitizer_cov_pcs_init@@Base+0x3794>
   2e74c:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   2e750:	ldr	w0, [x0, #216]
   2e754:	bl	23348 <__sanitizer_set_report_fd@@Base+0x4150>
   2e758:	bl	23334 <__sanitizer_set_report_fd@@Base+0x413c>
   2e75c:	b	2e6c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xab8>
   2e760:	ldp	x19, x30, [sp], #48
   2e764:	ret
   2e768:	str	x30, [sp, #-32]!
   2e76c:	str	x0, [sp, #24]
   2e770:	adrp	x0, 9d4000 <__asan_cplus_demangle_builtin_types@@Base+0x957b40>
   2e774:	add	x0, x0, #0x98
   2e778:	bl	ec14 <__sanitizer_get_allocated_size@@Base+0xb4>
   2e77c:	mov	x1, #0x0                   	// #0
   2e780:	adrp	x0, 9d4000 <__asan_cplus_demangle_builtin_types@@Base+0x957b40>
   2e784:	add	x0, x0, #0x90
   2e788:	bl	26714 <__sanitizer_set_report_fd@@Base+0x751c>
   2e78c:	nop
   2e790:	ldr	x30, [sp], #32
   2e794:	ret
   2e798:	str	x30, [sp, #-16]!
   2e79c:	adrp	x0, 9d4000 <__asan_cplus_demangle_builtin_types@@Base+0x957b40>
   2e7a0:	add	x0, x0, #0x98
   2e7a4:	bl	ec38 <__sanitizer_get_allocated_size@@Base+0xd8>
   2e7a8:	nop
   2e7ac:	ldr	x30, [sp], #16
   2e7b0:	ret
   2e7b4:	str	x30, [sp, #-48]!
   2e7b8:	str	x0, [sp, #40]
   2e7bc:	str	x1, [sp, #32]
   2e7c0:	str	x2, [sp, #24]
   2e7c4:	ldr	x0, [sp, #40]
   2e7c8:	ldr	x1, [sp, #32]
   2e7cc:	str	x1, [x0]
   2e7d0:	ldr	x0, [sp, #40]
   2e7d4:	ldr	x1, [sp, #24]
   2e7d8:	str	x1, [x0, #8]
   2e7dc:	ldr	x0, [sp, #40]
   2e7e0:	bl	27988 <__sanitizer_set_report_fd@@Base+0x8790>
   2e7e4:	mov	x1, x0
   2e7e8:	ldr	x0, [sp, #40]
   2e7ec:	str	x1, [x0, #16]
   2e7f0:	ldr	x0, [sp, #40]
   2e7f4:	bl	279ac <__sanitizer_set_report_fd@@Base+0x87b4>
   2e7f8:	and	w1, w0, #0xff
   2e7fc:	ldr	x0, [sp, #40]
   2e800:	strb	w1, [x0, #48]
   2e804:	ldr	x0, [sp, #40]
   2e808:	bl	24efc <__sanitizer_set_report_fd@@Base+0x5d04>
   2e80c:	mov	w1, w0
   2e810:	ldr	x0, [sp, #40]
   2e814:	str	w1, [x0, #52]
   2e818:	ldr	x0, [sp, #40]
   2e81c:	bl	24fd0 <__sanitizer_set_report_fd@@Base+0x5dd8>
   2e820:	nop
   2e824:	ldr	x30, [sp], #48
   2e828:	ret
   2e82c:	str	x30, [sp, #-32]!
   2e830:	str	x0, [sp, #24]
   2e834:	ldr	x0, [sp, #24]
   2e838:	bl	a978 <__lsan_do_recoverable_leak_check@@Base+0x7ec>
   2e83c:	ldr	x30, [sp], #32
   2e840:	ret
   2e844:	str	x30, [sp, #-32]!
   2e848:	str	x0, [sp, #24]
   2e84c:	ldr	x0, [sp, #24]
   2e850:	bl	2e85c <__sanitizer_get_module_and_offset_for_pc@@Base+0xc4c>
   2e854:	ldr	x30, [sp], #32
   2e858:	ret
   2e85c:	sub	sp, sp, #0x10
   2e860:	str	x0, [sp, #8]
   2e864:	ldr	x0, [sp, #8]
   2e868:	ldrb	w0, [x0]
   2e86c:	cmp	w0, #0x0
   2e870:	b.eq	2e880 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc70>  // b.none
   2e874:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2e878:	add	x0, x0, #0x4b8
   2e87c:	b	2e888 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc78>
   2e880:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2e884:	add	x0, x0, #0x4a0
   2e888:	add	sp, sp, #0x10
   2e88c:	ret
   2e890:	str	x30, [sp, #-48]!
   2e894:	str	x0, [sp, #24]
   2e898:	ldr	x0, [sp, #24]
   2e89c:	add	x1, x0, #0x10
   2e8a0:	add	x0, sp, #0x20
   2e8a4:	mov	w2, #0x0                   	// #0
   2e8a8:	bl	dc4c <__sanitizer_print_stack_trace@@Base+0x194>
   2e8ac:	ldr	x2, [sp, #24]
   2e8b0:	ldp	x0, x1, [sp, #32]
   2e8b4:	stp	x0, x1, [x2]
   2e8b8:	ldr	x0, [sp, #24]
   2e8bc:	str	xzr, [x0, #2064]
   2e8c0:	nop
   2e8c4:	ldr	x30, [sp], #48
   2e8c8:	ret
   2e8cc:	str	x30, [sp, #-32]!
   2e8d0:	str	x0, [sp, #24]
   2e8d4:	str	x1, [sp, #16]
   2e8d8:	ldr	x0, [sp, #24]
   2e8dc:	ldr	x1, [sp, #16]
   2e8e0:	bl	2e930 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd20>
   2e8e4:	ldr	x0, [sp, #24]
   2e8e8:	ldr	x1, [sp, #16]
   2e8ec:	bl	2e96c <__sanitizer_get_module_and_offset_for_pc@@Base+0xd5c>
   2e8f0:	nop
   2e8f4:	ldr	x30, [sp], #32
   2e8f8:	ret
   2e8fc:	str	x30, [sp, #-32]!
   2e900:	str	x0, [sp, #24]
   2e904:	ldr	x0, [sp, #24]
   2e908:	bl	2ea14 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe04>
   2e90c:	nop
   2e910:	ldr	x30, [sp], #32
   2e914:	ret
   2e918:	sub	sp, sp, #0x10
   2e91c:	str	x0, [sp, #8]
   2e920:	ldr	x0, [sp, #8]
   2e924:	ldr	x0, [x0]
   2e928:	add	sp, sp, #0x10
   2e92c:	ret
   2e930:	str	x30, [sp, #-32]!
   2e934:	str	x0, [sp, #24]
   2e938:	str	x1, [sp, #16]
   2e93c:	ldr	x0, [sp, #24]
   2e940:	str	xzr, [x0, #8]
   2e944:	ldr	x0, [sp, #24]
   2e948:	str	xzr, [x0, #16]
   2e94c:	ldr	x0, [sp, #24]
   2e950:	str	xzr, [x0]
   2e954:	ldr	x1, [sp, #16]
   2e958:	ldr	x0, [sp, #24]
   2e95c:	bl	2ea44 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe34>
   2e960:	nop
   2e964:	ldr	x30, [sp], #32
   2e968:	ret
   2e96c:	str	x30, [sp, #-32]!
   2e970:	str	x0, [sp, #24]
   2e974:	str	x1, [sp, #16]
   2e978:	ldr	x0, [sp, #24]
   2e97c:	ldr	x0, [x0, #16]
   2e980:	ldr	x1, [sp, #16]
   2e984:	cmp	x1, x0
   2e988:	b.ls	2e9fc <__sanitizer_get_module_and_offset_for_pc@@Base+0xdec>  // b.plast
   2e98c:	ldr	x1, [sp, #16]
   2e990:	ldr	x0, [sp, #24]
   2e994:	bl	2ea44 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe34>
   2e998:	ldr	x0, [sp, #24]
   2e99c:	ldr	x2, [x0]
   2e9a0:	ldr	x0, [sp, #24]
   2e9a4:	ldr	x1, [x0, #16]
   2e9a8:	mov	x0, x1
   2e9ac:	lsl	x0, x0, #6
   2e9b0:	add	x0, x0, x1
   2e9b4:	lsl	x0, x0, #2
   2e9b8:	sub	x0, x0, x1
   2e9bc:	lsl	x0, x0, #3
   2e9c0:	add	x3, x2, x0
   2e9c4:	ldr	x0, [sp, #24]
   2e9c8:	ldr	x0, [x0, #16]
   2e9cc:	ldr	x1, [sp, #16]
   2e9d0:	sub	x1, x1, x0
   2e9d4:	mov	x0, x1
   2e9d8:	lsl	x0, x0, #6
   2e9dc:	add	x0, x0, x1
   2e9e0:	lsl	x0, x0, #2
   2e9e4:	sub	x0, x0, x1
   2e9e8:	lsl	x0, x0, #3
   2e9ec:	mov	x2, x0
   2e9f0:	mov	w1, #0x0                   	// #0
   2e9f4:	mov	x0, x3
   2e9f8:	bl	21754 <__sanitizer_set_report_fd@@Base+0x255c>
   2e9fc:	ldr	x0, [sp, #24]
   2ea00:	ldr	x1, [sp, #16]
   2ea04:	str	x1, [x0, #16]
   2ea08:	nop
   2ea0c:	ldr	x30, [sp], #32
   2ea10:	ret
   2ea14:	str	x30, [sp, #-32]!
   2ea18:	str	x0, [sp, #24]
   2ea1c:	ldr	x0, [sp, #24]
   2ea20:	ldr	x2, [x0]
   2ea24:	ldr	x0, [sp, #24]
   2ea28:	ldr	x0, [x0, #8]
   2ea2c:	mov	x1, x0
   2ea30:	mov	x0, x2
   2ea34:	bl	26af4 <__sanitizer_set_report_fd@@Base+0x78fc>
   2ea38:	nop
   2ea3c:	ldr	x30, [sp], #32
   2ea40:	ret
   2ea44:	str	x30, [sp, #-32]!
   2ea48:	str	x0, [sp, #24]
   2ea4c:	str	x1, [sp, #16]
   2ea50:	ldr	x0, [sp, #24]
   2ea54:	bl	2ea8c <__sanitizer_get_module_and_offset_for_pc@@Base+0xe7c>
   2ea58:	mov	x1, x0
   2ea5c:	ldr	x0, [sp, #16]
   2ea60:	cmp	x0, x1
   2ea64:	cset	w0, hi  // hi = pmore
   2ea68:	and	w0, w0, #0xff
   2ea6c:	cmp	w0, #0x0
   2ea70:	b.eq	2ea80 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe70>  // b.none
   2ea74:	ldr	x1, [sp, #16]
   2ea78:	ldr	x0, [sp, #24]
   2ea7c:	bl	2eac0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xeb0>
   2ea80:	nop
   2ea84:	ldr	x30, [sp], #32
   2ea88:	ret
   2ea8c:	sub	sp, sp, #0x10
   2ea90:	str	x0, [sp, #8]
   2ea94:	ldr	x0, [sp, #8]
   2ea98:	ldr	x0, [x0, #8]
   2ea9c:	lsr	x1, x0, #3
   2eaa0:	mov	x0, #0x11cb                	// #4555
   2eaa4:	movk	x0, #0x1fa, lsl #16
   2eaa8:	movk	x0, #0x1caa, lsl #32
   2eaac:	movk	x0, #0x1fa1, lsl #48
   2eab0:	umulh	x0, x1, x0
   2eab4:	lsr	x0, x0, #5
   2eab8:	add	sp, sp, #0x10
   2eabc:	ret
   2eac0:	stp	x19, x30, [sp, #-80]!
   2eac4:	str	x0, [sp, #24]
   2eac8:	str	x1, [sp, #16]
   2eacc:	ldr	x0, [sp, #16]
   2ead0:	str	x0, [sp, #72]
   2ead4:	str	xzr, [sp, #64]
   2ead8:	ldr	x1, [sp, #72]
   2eadc:	ldr	x0, [sp, #64]
   2eae0:	cmp	x1, x0
   2eae4:	cset	w0, ls  // ls = plast
   2eae8:	and	w0, w0, #0xff
   2eaec:	and	x0, x0, #0xff
   2eaf0:	cmp	x0, #0x0
   2eaf4:	b.eq	2eb18 <__sanitizer_get_module_and_offset_for_pc@@Base+0xf08>  // b.none
   2eaf8:	ldr	x4, [sp, #64]
   2eafc:	ldr	x3, [sp, #72]
   2eb00:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2eb04:	add	x2, x0, #0x7b0
   2eb08:	mov	w1, #0x1fc                 	// #508
   2eb0c:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2eb10:	add	x0, x0, #0x770
   2eb14:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2eb18:	ldr	x0, [sp, #24]
   2eb1c:	ldr	x0, [x0, #16]
   2eb20:	str	x0, [sp, #56]
   2eb24:	ldr	x0, [sp, #16]
   2eb28:	str	x0, [sp, #48]
   2eb2c:	ldr	x1, [sp, #56]
   2eb30:	ldr	x0, [sp, #48]
   2eb34:	cmp	x1, x0
   2eb38:	cset	w0, hi  // hi = pmore
   2eb3c:	and	w0, w0, #0xff
   2eb40:	and	x0, x0, #0xff
   2eb44:	cmp	x0, #0x0
   2eb48:	b.eq	2eb6c <__sanitizer_get_module_and_offset_for_pc@@Base+0xf5c>  // b.none
   2eb4c:	ldr	x4, [sp, #48]
   2eb50:	ldr	x3, [sp, #56]
   2eb54:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2eb58:	add	x2, x0, #0x7d0
   2eb5c:	mov	w1, #0x1fd                 	// #509
   2eb60:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2eb64:	add	x0, x0, #0x770
   2eb68:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2eb6c:	ldr	x1, [sp, #16]
   2eb70:	mov	x0, x1
   2eb74:	lsl	x0, x0, #6
   2eb78:	add	x0, x0, x1
   2eb7c:	lsl	x0, x0, #2
   2eb80:	sub	x0, x0, x1
   2eb84:	lsl	x0, x0, #3
   2eb88:	mov	x19, x0
   2eb8c:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
   2eb90:	mov	x1, x0
   2eb94:	mov	x0, x19
   2eb98:	bl	a518 <__lsan_do_recoverable_leak_check@@Base+0x38c>
   2eb9c:	str	x0, [sp, #40]
   2eba0:	mov	w2, #0x0                   	// #0
   2eba4:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2eba8:	add	x1, x0, #0x7f0
   2ebac:	ldr	x0, [sp, #40]
   2ebb0:	bl	26a50 <__sanitizer_set_report_fd@@Base+0x7858>
   2ebb4:	str	x0, [sp, #32]
   2ebb8:	ldr	x0, [sp, #24]
   2ebbc:	ldr	x3, [x0]
   2ebc0:	ldr	x0, [sp, #24]
   2ebc4:	ldr	x1, [x0, #16]
   2ebc8:	mov	x0, x1
   2ebcc:	lsl	x0, x0, #6
   2ebd0:	add	x0, x0, x1
   2ebd4:	lsl	x0, x0, #2
   2ebd8:	sub	x0, x0, x1
   2ebdc:	lsl	x0, x0, #3
   2ebe0:	mov	x2, x0
   2ebe4:	mov	x1, x3
   2ebe8:	ldr	x0, [sp, #32]
   2ebec:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
   2ebf0:	ldr	x0, [sp, #24]
   2ebf4:	ldr	x2, [x0]
   2ebf8:	ldr	x0, [sp, #24]
   2ebfc:	ldr	x0, [x0, #8]
   2ec00:	mov	x1, x0
   2ec04:	mov	x0, x2
   2ec08:	bl	26af4 <__sanitizer_set_report_fd@@Base+0x78fc>
   2ec0c:	ldr	x0, [sp, #24]
   2ec10:	ldr	x1, [sp, #32]
   2ec14:	str	x1, [x0]
   2ec18:	ldr	x0, [sp, #24]
   2ec1c:	ldr	x1, [sp, #40]
   2ec20:	str	x1, [x0, #8]
   2ec24:	nop
   2ec28:	ldp	x19, x30, [sp], #80
   2ec2c:	ret
   2ec30:	str	x30, [sp, #-48]!
   2ec34:	str	x0, [sp, #24]
   2ec38:	str	x1, [sp, #16]
   2ec3c:	ldr	x0, [sp, #24]
   2ec40:	cmp	x0, #0x0
   2ec44:	b.ne	2ec50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1040>  // b.any
   2ec48:	mov	x0, #0x0                   	// #0
   2ec4c:	b	2eca8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1098>
   2ec50:	ldr	x0, [sp, #16]
   2ec54:	cmp	x0, #0x0
   2ec58:	b.ne	2ec64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1054>  // b.any
   2ec5c:	ldr	x0, [sp, #24]
   2ec60:	b	2eca8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1098>
   2ec64:	ldr	x0, [sp, #16]
   2ec68:	bl	21bac <__sanitizer_set_report_fd@@Base+0x29b4>
   2ec6c:	str	x0, [sp, #40]
   2ec70:	ldr	x2, [sp, #40]
   2ec74:	ldr	x1, [sp, #16]
   2ec78:	ldr	x0, [sp, #24]
   2ec7c:	bl	219dc <__sanitizer_set_report_fd@@Base+0x27e4>
   2ec80:	cmp	w0, #0x0
   2ec84:	cset	w0, eq  // eq = none
   2ec88:	and	w0, w0, #0xff
   2ec8c:	cmp	w0, #0x0
   2ec90:	b.eq	2eca4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1094>  // b.none
   2ec94:	ldr	x1, [sp, #24]
   2ec98:	ldr	x0, [sp, #40]
   2ec9c:	add	x0, x1, x0
   2eca0:	b	2eca8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1098>
   2eca4:	ldr	x0, [sp, #24]
   2eca8:	ldr	x30, [sp], #48
   2ecac:	ret
   2ecb0:	sub	sp, sp, #0x10
   2ecb4:	str	x0, [sp, #8]
   2ecb8:	ldr	x0, [sp, #8]
   2ecbc:	cmp	x0, #0x0
   2ecc0:	b.ne	2eccc <__sanitizer_get_module_and_offset_for_pc@@Base+0x10bc>  // b.any
   2ecc4:	mov	x0, #0x0                   	// #0
   2ecc8:	b	2ecd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c0>
   2eccc:	ldr	x0, [sp, #8]
   2ecd0:	add	sp, sp, #0x10
   2ecd4:	ret
   2ecd8:	str	x30, [sp, #-80]!
   2ecdc:	str	x0, [sp, #56]
   2ece0:	str	x1, [sp, #48]
   2ece4:	str	w2, [sp, #44]
   2ece8:	str	x3, [sp, #32]
   2ecec:	strb	w4, [sp, #43]
   2ecf0:	str	x5, [sp, #24]
   2ecf4:	str	x6, [sp, #16]
   2ecf8:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2ecfc:	add	x1, x0, #0x928
   2ed00:	ldr	x0, [sp, #48]
   2ed04:	bl	21950 <__sanitizer_set_report_fd@@Base+0x2758>
   2ed08:	cmp	w0, #0x0
   2ed0c:	cset	w0, eq  // eq = none
   2ed10:	and	w0, w0, #0xff
   2ed14:	cmp	w0, #0x0
   2ed18:	b.eq	2ed28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1118>  // b.none
   2ed1c:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2ed20:	add	x0, x0, #0x910
   2ed24:	str	x0, [sp, #48]
   2ed28:	ldr	x0, [sp, #48]
   2ed2c:	str	x0, [sp, #72]
   2ed30:	ldr	x0, [sp, #72]
   2ed34:	ldrb	w0, [x0]
   2ed38:	cmp	w0, #0x0
   2ed3c:	b.eq	2f1b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15a8>  // b.none
   2ed40:	ldr	x0, [sp, #72]
   2ed44:	ldrb	w0, [x0]
   2ed48:	cmp	w0, #0x25
   2ed4c:	b.eq	2ed70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1160>  // b.none
   2ed50:	ldr	x0, [sp, #72]
   2ed54:	ldrb	w0, [x0]
   2ed58:	mov	w2, w0
   2ed5c:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2ed60:	add	x1, x0, #0x930
   2ed64:	ldr	x0, [sp, #56]
   2ed68:	bl	2a564 <OnPrint@@Base+0x5bc>
   2ed6c:	b	2f1a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1598>
   2ed70:	ldr	x0, [sp, #72]
   2ed74:	add	x0, x0, #0x1
   2ed78:	str	x0, [sp, #72]
   2ed7c:	ldr	x0, [sp, #72]
   2ed80:	ldrb	w0, [x0]
   2ed84:	cmp	w0, #0x73
   2ed88:	b.eq	2ef50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1340>  // b.none
   2ed8c:	cmp	w0, #0x73
   2ed90:	b.gt	2f174 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   2ed94:	cmp	w0, #0x71
   2ed98:	b.eq	2ef18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1308>  // b.none
   2ed9c:	cmp	w0, #0x71
   2eda0:	b.gt	2f174 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   2eda4:	cmp	w0, #0x70
   2eda8:	b.eq	2ee84 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1274>  // b.none
   2edac:	cmp	w0, #0x70
   2edb0:	b.gt	2f174 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   2edb4:	cmp	w0, #0x6f
   2edb8:	b.eq	2eecc <__sanitizer_get_module_and_offset_for_pc@@Base+0x12bc>  // b.none
   2edbc:	cmp	w0, #0x6f
   2edc0:	b.gt	2f174 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   2edc4:	cmp	w0, #0x6e
   2edc8:	b.eq	2ee6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x125c>  // b.none
   2edcc:	cmp	w0, #0x6e
   2edd0:	b.gt	2f174 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   2edd4:	cmp	w0, #0x6d
   2edd8:	b.eq	2eea4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1294>  // b.none
   2eddc:	cmp	w0, #0x6d
   2ede0:	b.gt	2f174 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   2ede4:	cmp	w0, #0x6c
   2ede8:	b.eq	2ef78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1368>  // b.none
   2edec:	cmp	w0, #0x6c
   2edf0:	b.gt	2f174 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   2edf4:	cmp	w0, #0x66
   2edf8:	b.eq	2eeec <__sanitizer_get_module_and_offset_for_pc@@Base+0x12dc>  // b.none
   2edfc:	cmp	w0, #0x66
   2ee00:	b.gt	2f174 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   2ee04:	cmp	w0, #0x63
   2ee08:	b.eq	2ef98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1388>  // b.none
   2ee0c:	cmp	w0, #0x63
   2ee10:	b.gt	2f174 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   2ee14:	cmp	w0, #0x53
   2ee18:	b.eq	2f030 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1420>  // b.none
   2ee1c:	cmp	w0, #0x53
   2ee20:	b.gt	2f174 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   2ee24:	cmp	w0, #0x4d
   2ee28:	b.eq	2f0f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x14e0>  // b.none
   2ee2c:	cmp	w0, #0x4d
   2ee30:	b.gt	2f174 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   2ee34:	cmp	w0, #0x4c
   2ee38:	b.eq	2f060 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1450>  // b.none
   2ee3c:	cmp	w0, #0x4c
   2ee40:	b.gt	2f174 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   2ee44:	cmp	w0, #0x25
   2ee48:	b.eq	2ee58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1248>  // b.none
   2ee4c:	cmp	w0, #0x46
   2ee50:	b.eq	2efb8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x13a8>  // b.none
   2ee54:	b	2f174 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   2ee58:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2ee5c:	add	x1, x0, #0x938
   2ee60:	ldr	x0, [sp, #56]
   2ee64:	bl	2a564 <OnPrint@@Base+0x5bc>
   2ee68:	b	2f1a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1598>
   2ee6c:	ldr	w2, [sp, #44]
   2ee70:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2ee74:	add	x1, x0, #0x940
   2ee78:	ldr	x0, [sp, #56]
   2ee7c:	bl	2a564 <OnPrint@@Base+0x5bc>
   2ee80:	b	2f1a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1598>
   2ee84:	ldr	x0, [sp, #32]
   2ee88:	ldr	x0, [x0]
   2ee8c:	mov	x2, x0
   2ee90:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2ee94:	add	x1, x0, #0x948
   2ee98:	ldr	x0, [sp, #56]
   2ee9c:	bl	2a564 <OnPrint@@Base+0x5bc>
   2eea0:	b	2f1a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1598>
   2eea4:	ldr	x0, [sp, #32]
   2eea8:	ldr	x0, [x0, #8]
   2eeac:	ldr	x1, [sp, #24]
   2eeb0:	bl	19318 <__sancov_default_options@@Base+0x317c>
   2eeb4:	mov	x2, x0
   2eeb8:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2eebc:	add	x1, x0, #0x950
   2eec0:	ldr	x0, [sp, #56]
   2eec4:	bl	2a564 <OnPrint@@Base+0x5bc>
   2eec8:	b	2f1a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1598>
   2eecc:	ldr	x0, [sp, #32]
   2eed0:	ldr	x0, [x0, #16]
   2eed4:	mov	x2, x0
   2eed8:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2eedc:	add	x1, x0, #0x948
   2eee0:	ldr	x0, [sp, #56]
   2eee4:	bl	2a564 <OnPrint@@Base+0x5bc>
   2eee8:	b	2f1a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1598>
   2eeec:	ldr	x0, [sp, #32]
   2eef0:	ldr	x0, [x0, #32]
   2eef4:	ldr	x1, [sp, #16]
   2eef8:	bl	2ec30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1020>
   2eefc:	bl	2ecb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10a0>
   2ef00:	mov	x2, x0
   2ef04:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2ef08:	add	x1, x0, #0x950
   2ef0c:	ldr	x0, [sp, #56]
   2ef10:	bl	2a564 <OnPrint@@Base+0x5bc>
   2ef14:	b	2f1a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1598>
   2ef18:	ldr	x0, [sp, #32]
   2ef1c:	ldr	x0, [x0, #40]
   2ef20:	cmn	x0, #0x1
   2ef24:	b.eq	2ef34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1324>  // b.none
   2ef28:	ldr	x0, [sp, #32]
   2ef2c:	ldr	x0, [x0, #40]
   2ef30:	b	2ef38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1328>
   2ef34:	mov	x0, #0x0                   	// #0
   2ef38:	mov	x2, x0
   2ef3c:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2ef40:	add	x1, x0, #0x948
   2ef44:	ldr	x0, [sp, #56]
   2ef48:	bl	2a564 <OnPrint@@Base+0x5bc>
   2ef4c:	b	2f1a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1598>
   2ef50:	ldr	x0, [sp, #32]
   2ef54:	ldr	x0, [x0, #48]
   2ef58:	ldr	x1, [sp, #24]
   2ef5c:	bl	19318 <__sancov_default_options@@Base+0x317c>
   2ef60:	mov	x2, x0
   2ef64:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2ef68:	add	x1, x0, #0x950
   2ef6c:	ldr	x0, [sp, #56]
   2ef70:	bl	2a564 <OnPrint@@Base+0x5bc>
   2ef74:	b	2f1a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1598>
   2ef78:	ldr	x0, [sp, #32]
   2ef7c:	ldr	w0, [x0, #56]
   2ef80:	mov	w2, w0
   2ef84:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2ef88:	add	x1, x0, #0x958
   2ef8c:	ldr	x0, [sp, #56]
   2ef90:	bl	2a564 <OnPrint@@Base+0x5bc>
   2ef94:	b	2f1a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1598>
   2ef98:	ldr	x0, [sp, #32]
   2ef9c:	ldr	w0, [x0, #60]
   2efa0:	mov	w2, w0
   2efa4:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2efa8:	add	x1, x0, #0x958
   2efac:	ldr	x0, [sp, #56]
   2efb0:	bl	2a564 <OnPrint@@Base+0x5bc>
   2efb4:	b	2f1a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1598>
   2efb8:	ldr	x0, [sp, #32]
   2efbc:	ldr	x0, [x0, #32]
   2efc0:	cmp	x0, #0x0
   2efc4:	b.eq	2f19c <__sanitizer_get_module_and_offset_for_pc@@Base+0x158c>  // b.none
   2efc8:	ldr	x0, [sp, #32]
   2efcc:	ldr	x0, [x0, #32]
   2efd0:	ldr	x1, [sp, #16]
   2efd4:	bl	2ec30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1020>
   2efd8:	bl	2ecb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10a0>
   2efdc:	mov	x2, x0
   2efe0:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2efe4:	add	x1, x0, #0x960
   2efe8:	ldr	x0, [sp, #56]
   2efec:	bl	2a564 <OnPrint@@Base+0x5bc>
   2eff0:	ldr	x0, [sp, #32]
   2eff4:	ldr	x0, [x0, #48]
   2eff8:	cmp	x0, #0x0
   2effc:	b.ne	2f19c <__sanitizer_get_module_and_offset_for_pc@@Base+0x158c>  // b.any
   2f000:	ldr	x0, [sp, #32]
   2f004:	ldr	x0, [x0, #40]
   2f008:	cmn	x0, #0x1
   2f00c:	b.eq	2f19c <__sanitizer_get_module_and_offset_for_pc@@Base+0x158c>  // b.none
   2f010:	ldr	x0, [sp, #32]
   2f014:	ldr	x0, [x0, #40]
   2f018:	mov	x2, x0
   2f01c:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2f020:	add	x1, x0, #0x968
   2f024:	ldr	x0, [sp, #56]
   2f028:	bl	2a564 <OnPrint@@Base+0x5bc>
   2f02c:	b	2f19c <__sanitizer_get_module_and_offset_for_pc@@Base+0x158c>
   2f030:	ldr	x0, [sp, #32]
   2f034:	ldr	x1, [x0, #48]
   2f038:	ldr	x0, [sp, #32]
   2f03c:	ldr	w2, [x0, #56]
   2f040:	ldr	x0, [sp, #32]
   2f044:	ldr	w0, [x0, #60]
   2f048:	ldr	x5, [sp, #24]
   2f04c:	ldrb	w4, [sp, #43]
   2f050:	mov	w3, w0
   2f054:	ldr	x0, [sp, #56]
   2f058:	bl	2f328 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1718>
   2f05c:	b	2f1a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1598>
   2f060:	ldr	x0, [sp, #32]
   2f064:	ldr	x0, [x0, #48]
   2f068:	cmp	x0, #0x0
   2f06c:	b.eq	2f0a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1490>  // b.none
   2f070:	ldr	x0, [sp, #32]
   2f074:	ldr	x1, [x0, #48]
   2f078:	ldr	x0, [sp, #32]
   2f07c:	ldr	w2, [x0, #56]
   2f080:	ldr	x0, [sp, #32]
   2f084:	ldr	w0, [x0, #60]
   2f088:	ldr	x5, [sp, #24]
   2f08c:	ldrb	w4, [sp, #43]
   2f090:	mov	w3, w0
   2f094:	ldr	x0, [sp, #56]
   2f098:	bl	2f328 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1718>
   2f09c:	b	2f1a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1598>
   2f0a0:	ldr	x0, [sp, #32]
   2f0a4:	ldr	x0, [x0, #8]
   2f0a8:	cmp	x0, #0x0
   2f0ac:	b.eq	2f0dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x14cc>  // b.none
   2f0b0:	ldr	x0, [sp, #32]
   2f0b4:	ldr	x1, [x0, #8]
   2f0b8:	ldr	x0, [sp, #32]
   2f0bc:	ldr	x2, [x0, #16]
   2f0c0:	ldr	x0, [sp, #32]
   2f0c4:	ldr	w0, [x0, #24]
   2f0c8:	ldr	x4, [sp, #24]
   2f0cc:	mov	w3, w0
   2f0d0:	ldr	x0, [sp, #56]
   2f0d4:	bl	2f41c <__sanitizer_get_module_and_offset_for_pc@@Base+0x180c>
   2f0d8:	b	2f1a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1598>
   2f0dc:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2f0e0:	add	x1, x0, #0x970
   2f0e4:	ldr	x0, [sp, #56]
   2f0e8:	bl	2a564 <OnPrint@@Base+0x5bc>
   2f0ec:	b	2f1a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1598>
   2f0f0:	ldr	x0, [sp, #32]
   2f0f4:	ldr	x0, [x0]
   2f0f8:	and	x0, x0, #0x1000000000000000
   2f0fc:	cmp	x0, #0x0
   2f100:	b.ne	2f1a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1594>  // b.any
   2f104:	ldr	x0, [sp, #32]
   2f108:	ldr	x0, [x0, #8]
   2f10c:	cmp	x0, #0x0
   2f110:	b.eq	2f154 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1544>  // b.none
   2f114:	ldr	x0, [sp, #32]
   2f118:	ldr	x0, [x0, #8]
   2f11c:	bl	193c4 <__sancov_default_options@@Base+0x3228>
   2f120:	mov	x5, x0
   2f124:	ldr	x0, [sp, #32]
   2f128:	ldr	x1, [x0, #16]
   2f12c:	ldr	x0, [sp, #32]
   2f130:	ldr	w2, [x0, #24]
   2f134:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2f138:	add	x4, x0, #0x848
   2f13c:	mov	w3, w2
   2f140:	mov	x2, x1
   2f144:	mov	x1, x5
   2f148:	ldr	x0, [sp, #56]
   2f14c:	bl	2f41c <__sanitizer_get_module_and_offset_for_pc@@Base+0x180c>
   2f150:	b	2f1a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1594>
   2f154:	ldr	x0, [sp, #32]
   2f158:	ldr	x0, [x0]
   2f15c:	mov	x2, x0
   2f160:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2f164:	add	x1, x0, #0x988
   2f168:	ldr	x0, [sp, #56]
   2f16c:	bl	2a564 <OnPrint@@Base+0x5bc>
   2f170:	b	2f1a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1594>
   2f174:	ldr	x0, [sp, #72]
   2f178:	ldrb	w0, [x0]
   2f17c:	mov	w1, w0
   2f180:	ldr	x0, [sp, #72]
   2f184:	ldrb	w0, [x0]
   2f188:	mov	w2, w0
   2f18c:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2f190:	add	x0, x0, #0x990
   2f194:	bl	2a3fc <OnPrint@@Base+0x454>
   2f198:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   2f19c:	nop
   2f1a0:	b	2f1a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1598>
   2f1a4:	nop
   2f1a8:	ldr	x0, [sp, #72]
   2f1ac:	add	x0, x0, #0x1
   2f1b0:	str	x0, [sp, #72]
   2f1b4:	b	2ed30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1120>
   2f1b8:	nop
   2f1bc:	ldr	x30, [sp], #80
   2f1c0:	ret
   2f1c4:	str	x30, [sp, #-64]!
   2f1c8:	str	x0, [sp, #40]
   2f1cc:	str	x1, [sp, #32]
   2f1d0:	str	x2, [sp, #24]
   2f1d4:	str	x3, [sp, #16]
   2f1d8:	ldr	x0, [sp, #32]
   2f1dc:	str	x0, [sp, #56]
   2f1e0:	ldr	x0, [sp, #56]
   2f1e4:	ldrb	w0, [x0]
   2f1e8:	cmp	w0, #0x0
   2f1ec:	b.eq	2f31c <__sanitizer_get_module_and_offset_for_pc@@Base+0x170c>  // b.none
   2f1f0:	ldr	x0, [sp, #56]
   2f1f4:	ldrb	w0, [x0]
   2f1f8:	cmp	w0, #0x25
   2f1fc:	b.eq	2f220 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1610>  // b.none
   2f200:	ldr	x0, [sp, #56]
   2f204:	ldrb	w0, [x0]
   2f208:	mov	w2, w0
   2f20c:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2f210:	add	x1, x0, #0x930
   2f214:	ldr	x0, [sp, #40]
   2f218:	bl	2a564 <OnPrint@@Base+0x5bc>
   2f21c:	b	2f30c <__sanitizer_get_module_and_offset_for_pc@@Base+0x16fc>
   2f220:	ldr	x0, [sp, #56]
   2f224:	add	x0, x0, #0x1
   2f228:	str	x0, [sp, #56]
   2f22c:	ldr	x0, [sp, #56]
   2f230:	ldrb	w0, [x0]
   2f234:	cmp	w0, #0x73
   2f238:	b.eq	2f27c <__sanitizer_get_module_and_offset_for_pc@@Base+0x166c>  // b.none
   2f23c:	cmp	w0, #0x73
   2f240:	b.gt	2f2e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16d4>
   2f244:	cmp	w0, #0x6c
   2f248:	b.eq	2f2a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1694>  // b.none
   2f24c:	cmp	w0, #0x6c
   2f250:	b.gt	2f2e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16d4>
   2f254:	cmp	w0, #0x25
   2f258:	b.eq	2f268 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1658>  // b.none
   2f25c:	cmp	w0, #0x67
   2f260:	b.eq	2f2c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16b4>  // b.none
   2f264:	b	2f2e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16d4>
   2f268:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2f26c:	add	x1, x0, #0x938
   2f270:	ldr	x0, [sp, #40]
   2f274:	bl	2a564 <OnPrint@@Base+0x5bc>
   2f278:	b	2f30c <__sanitizer_get_module_and_offset_for_pc@@Base+0x16fc>
   2f27c:	ldr	x0, [sp, #24]
   2f280:	ldr	x0, [x0, #24]
   2f284:	ldr	x1, [sp, #16]
   2f288:	bl	19318 <__sancov_default_options@@Base+0x317c>
   2f28c:	mov	x2, x0
   2f290:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2f294:	add	x1, x0, #0x950
   2f298:	ldr	x0, [sp, #40]
   2f29c:	bl	2a564 <OnPrint@@Base+0x5bc>
   2f2a0:	b	2f30c <__sanitizer_get_module_and_offset_for_pc@@Base+0x16fc>
   2f2a4:	ldr	x0, [sp, #24]
   2f2a8:	ldr	x0, [x0, #32]
   2f2ac:	mov	x2, x0
   2f2b0:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2f2b4:	add	x1, x0, #0x958
   2f2b8:	ldr	x0, [sp, #40]
   2f2bc:	bl	2a564 <OnPrint@@Base+0x5bc>
   2f2c0:	b	2f30c <__sanitizer_get_module_and_offset_for_pc@@Base+0x16fc>
   2f2c4:	ldr	x0, [sp, #24]
   2f2c8:	ldr	x0, [x0, #40]
   2f2cc:	mov	x2, x0
   2f2d0:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2f2d4:	add	x1, x0, #0x950
   2f2d8:	ldr	x0, [sp, #40]
   2f2dc:	bl	2a564 <OnPrint@@Base+0x5bc>
   2f2e0:	b	2f30c <__sanitizer_get_module_and_offset_for_pc@@Base+0x16fc>
   2f2e4:	ldr	x0, [sp, #56]
   2f2e8:	ldrb	w0, [x0]
   2f2ec:	mov	w1, w0
   2f2f0:	ldr	x0, [sp, #56]
   2f2f4:	ldrb	w0, [x0]
   2f2f8:	mov	w2, w0
   2f2fc:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2f300:	add	x0, x0, #0x990
   2f304:	bl	2a3fc <OnPrint@@Base+0x454>
   2f308:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   2f30c:	ldr	x0, [sp, #56]
   2f310:	add	x0, x0, #0x1
   2f314:	str	x0, [sp, #56]
   2f318:	b	2f1e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15d0>
   2f31c:	nop
   2f320:	ldr	x30, [sp], #64
   2f324:	ret
   2f328:	str	x30, [sp, #-64]!
   2f32c:	str	x0, [sp, #56]
   2f330:	str	x1, [sp, #48]
   2f334:	str	w2, [sp, #44]
   2f338:	str	w3, [sp, #40]
   2f33c:	strb	w4, [sp, #39]
   2f340:	str	x5, [sp, #24]
   2f344:	ldrb	w0, [sp, #39]
   2f348:	cmp	w0, #0x0
   2f34c:	b.eq	2f3b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x17a4>  // b.none
   2f350:	ldr	w0, [sp, #44]
   2f354:	cmp	w0, #0x0
   2f358:	b.le	2f3b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x17a4>
   2f35c:	ldr	x1, [sp, #24]
   2f360:	ldr	x0, [sp, #48]
   2f364:	bl	19318 <__sancov_default_options@@Base+0x317c>
   2f368:	ldr	w3, [sp, #44]
   2f36c:	mov	x2, x0
   2f370:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2f374:	add	x1, x0, #0x9d0
   2f378:	ldr	x0, [sp, #56]
   2f37c:	bl	2a564 <OnPrint@@Base+0x5bc>
   2f380:	ldr	w0, [sp, #40]
   2f384:	cmp	w0, #0x0
   2f388:	b.le	2f3a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1790>
   2f38c:	ldr	w2, [sp, #40]
   2f390:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2f394:	add	x1, x0, #0x9d8
   2f398:	ldr	x0, [sp, #56]
   2f39c:	bl	2a564 <OnPrint@@Base+0x5bc>
   2f3a0:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2f3a4:	add	x1, x0, #0x9e0
   2f3a8:	ldr	x0, [sp, #56]
   2f3ac:	bl	2a564 <OnPrint@@Base+0x5bc>
   2f3b0:	b	2f414 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1804>
   2f3b4:	ldr	x1, [sp, #24]
   2f3b8:	ldr	x0, [sp, #48]
   2f3bc:	bl	19318 <__sancov_default_options@@Base+0x317c>
   2f3c0:	mov	x2, x0
   2f3c4:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2f3c8:	add	x1, x0, #0x950
   2f3cc:	ldr	x0, [sp, #56]
   2f3d0:	bl	2a564 <OnPrint@@Base+0x5bc>
   2f3d4:	ldr	w0, [sp, #44]
   2f3d8:	cmp	w0, #0x0
   2f3dc:	b.le	2f414 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1804>
   2f3e0:	ldr	w2, [sp, #44]
   2f3e4:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2f3e8:	add	x1, x0, #0x9e8
   2f3ec:	ldr	x0, [sp, #56]
   2f3f0:	bl	2a564 <OnPrint@@Base+0x5bc>
   2f3f4:	ldr	w0, [sp, #40]
   2f3f8:	cmp	w0, #0x0
   2f3fc:	b.le	2f414 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1804>
   2f400:	ldr	w2, [sp, #40]
   2f404:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2f408:	add	x1, x0, #0x9e8
   2f40c:	ldr	x0, [sp, #56]
   2f410:	bl	2a564 <OnPrint@@Base+0x5bc>
   2f414:	ldr	x30, [sp], #64
   2f418:	ret
   2f41c:	str	x30, [sp, #-64]!
   2f420:	str	x0, [sp, #56]
   2f424:	str	x1, [sp, #48]
   2f428:	str	x2, [sp, #40]
   2f42c:	str	w3, [sp, #36]
   2f430:	str	x4, [sp, #24]
   2f434:	ldr	x1, [sp, #24]
   2f438:	ldr	x0, [sp, #48]
   2f43c:	bl	19318 <__sancov_default_options@@Base+0x317c>
   2f440:	mov	x2, x0
   2f444:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2f448:	add	x1, x0, #0x9f0
   2f44c:	ldr	x0, [sp, #56]
   2f450:	bl	2a564 <OnPrint@@Base+0x5bc>
   2f454:	ldr	w0, [sp, #36]
   2f458:	cmp	w0, #0x0
   2f45c:	b.eq	2f47c <__sanitizer_get_module_and_offset_for_pc@@Base+0x186c>  // b.none
   2f460:	ldr	w0, [sp, #36]
   2f464:	bl	2f49c <__sanitizer_get_module_and_offset_for_pc@@Base+0x188c>
   2f468:	mov	x2, x0
   2f46c:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2f470:	add	x1, x0, #0x9f8
   2f474:	ldr	x0, [sp, #56]
   2f478:	bl	2a564 <OnPrint@@Base+0x5bc>
   2f47c:	ldr	x2, [sp, #40]
   2f480:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2f484:	add	x1, x0, #0xa00
   2f488:	ldr	x0, [sp, #56]
   2f48c:	bl	2a564 <OnPrint@@Base+0x5bc>
   2f490:	nop
   2f494:	ldr	x30, [sp], #64
   2f498:	ret
   2f49c:	str	x30, [sp, #-48]!
   2f4a0:	str	w0, [sp, #28]
   2f4a4:	ldr	w0, [sp, #28]
   2f4a8:	cmp	w0, #0x8
   2f4ac:	b.eq	2f58c <__sanitizer_get_module_and_offset_for_pc@@Base+0x197c>  // b.none
   2f4b0:	cmp	w0, #0x8
   2f4b4:	b.gt	2f598 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1988>
   2f4b8:	cmp	w0, #0x7
   2f4bc:	b.eq	2f580 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1970>  // b.none
   2f4c0:	cmp	w0, #0x7
   2f4c4:	b.gt	2f598 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1988>
   2f4c8:	cmp	w0, #0x6
   2f4cc:	b.eq	2f574 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1964>  // b.none
   2f4d0:	cmp	w0, #0x6
   2f4d4:	b.gt	2f598 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1988>
   2f4d8:	cmp	w0, #0x5
   2f4dc:	b.eq	2f568 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1958>  // b.none
   2f4e0:	cmp	w0, #0x5
   2f4e4:	b.gt	2f598 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1988>
   2f4e8:	cmp	w0, #0x4
   2f4ec:	b.eq	2f55c <__sanitizer_get_module_and_offset_for_pc@@Base+0x194c>  // b.none
   2f4f0:	cmp	w0, #0x4
   2f4f4:	b.gt	2f598 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1988>
   2f4f8:	cmp	w0, #0x3
   2f4fc:	b.eq	2f550 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1940>  // b.none
   2f500:	cmp	w0, #0x3
   2f504:	b.gt	2f598 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1988>
   2f508:	cmp	w0, #0x2
   2f50c:	b.eq	2f544 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1934>  // b.none
   2f510:	cmp	w0, #0x2
   2f514:	b.gt	2f598 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1988>
   2f518:	cmp	w0, #0x0
   2f51c:	b.eq	2f52c <__sanitizer_get_module_and_offset_for_pc@@Base+0x191c>  // b.none
   2f520:	cmp	w0, #0x1
   2f524:	b.eq	2f538 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1928>  // b.none
   2f528:	b	2f598 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1988>
   2f52c:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2f530:	add	x0, x0, #0x848
   2f534:	b	2f5e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x19d8>
   2f538:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2f53c:	add	x0, x0, #0x850
   2f540:	b	2f5e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x19d8>
   2f544:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2f548:	add	x0, x0, #0x858
   2f54c:	b	2f5e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x19d8>
   2f550:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2f554:	add	x0, x0, #0x860
   2f558:	b	2f5e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x19d8>
   2f55c:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2f560:	add	x0, x0, #0x868
   2f564:	b	2f5e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x19d8>
   2f568:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2f56c:	add	x0, x0, #0x870
   2f570:	b	2f5e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x19d8>
   2f574:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2f578:	add	x0, x0, #0x878
   2f57c:	b	2f5e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x19d8>
   2f580:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2f584:	add	x0, x0, #0x880
   2f588:	b	2f5e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x19d8>
   2f58c:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2f590:	add	x0, x0, #0x888
   2f594:	b	2f5e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x19d8>
   2f598:	str	xzr, [sp, #40]
   2f59c:	str	xzr, [sp, #32]
   2f5a0:	ldr	x1, [sp, #40]
   2f5a4:	ldr	x0, [sp, #32]
   2f5a8:	cmp	x1, x0
   2f5ac:	cset	w0, eq  // eq = none
   2f5b0:	and	w0, w0, #0xff
   2f5b4:	and	x0, x0, #0xff
   2f5b8:	cmp	x0, #0x0
   2f5bc:	b.eq	2f5e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x19d0>  // b.none
   2f5c0:	ldr	x4, [sp, #32]
   2f5c4:	ldr	x3, [sp, #40]
   2f5c8:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2f5cc:	add	x2, x0, #0x890
   2f5d0:	mov	w1, #0x2a9                 	// #681
   2f5d4:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2f5d8:	add	x0, x0, #0x8b8
   2f5dc:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2f5e0:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2f5e4:	add	x0, x0, #0x848
   2f5e8:	ldr	x30, [sp], #48
   2f5ec:	ret
   2f5f0:	str	x30, [sp, #-64]!
   2f5f4:	str	x0, [sp, #24]
   2f5f8:	str	x1, [sp, #16]
   2f5fc:	ldr	x0, [sp, #24]
   2f600:	add	x0, x0, #0x8
   2f604:	ldr	x1, [sp, #16]
   2f608:	bl	30220 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2610>
   2f60c:	and	w0, w0, #0xff
   2f610:	cmp	w0, #0x0
   2f614:	b.eq	2f620 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a10>  // b.none
   2f618:	mov	w0, #0x0                   	// #0
   2f61c:	b	2f7ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x1bdc>
   2f620:	ldr	x0, [sp, #16]
   2f624:	mov	x3, #0x0                   	// #0
   2f628:	mov	x2, #0x0                   	// #0
   2f62c:	mov	w1, w0
   2f630:	mov	w0, #0x10                  	// #16
   2f634:	bl	23be8 <__sanitizer_set_report_fd@@Base+0x49f0>
   2f638:	mov	x2, x0
   2f63c:	add	x0, sp, #0x34
   2f640:	mov	x1, x0
   2f644:	mov	x0, x2
   2f648:	bl	22e9c <__sanitizer_set_report_fd@@Base+0x3ca4>
   2f64c:	and	w0, w0, #0xff
   2f650:	cmp	w0, #0x0
   2f654:	b.eq	2f690 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a80>  // b.none
   2f658:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
   2f65c:	cmp	w0, #0x0
   2f660:	cset	w0, ne  // ne = any
   2f664:	and	w0, w0, #0xff
   2f668:	cmp	w0, #0x0
   2f66c:	b.eq	2f688 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a78>  // b.none
   2f670:	ldr	w0, [sp, #52]
   2f674:	mov	w2, w0
   2f678:	ldr	x1, [sp, #16]
   2f67c:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2f680:	add	x0, x0, #0xc28
   2f684:	bl	2a3fc <OnPrint@@Base+0x454>
   2f688:	mov	w0, #0x0                   	// #0
   2f68c:	b	2f7ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x1bdc>
   2f690:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
   2f694:	sxtw	x0, w0
   2f698:	cmp	x0, #0x1
   2f69c:	cset	w0, hi  // hi = pmore
   2f6a0:	and	w0, w0, #0xff
   2f6a4:	cmp	w0, #0x0
   2f6a8:	b.eq	2f6bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1aac>  // b.none
   2f6ac:	ldr	x1, [sp, #16]
   2f6b0:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2f6b4:	add	x0, x0, #0xc58
   2f6b8:	bl	2a3fc <OnPrint@@Base+0x454>
   2f6bc:	ldr	x0, [sp, #16]
   2f6c0:	mov	w3, w0
   2f6c4:	add	x0, sp, #0x30
   2f6c8:	mov	w2, #0x40000000            	// #1073741824
   2f6cc:	mov	x1, x0
   2f6d0:	mov	w0, w3
   2f6d4:	bl	23c2c <__sanitizer_set_report_fd@@Base+0x4a34>
   2f6d8:	str	x0, [sp, #56]
   2f6dc:	add	x0, sp, #0x28
   2f6e0:	mov	x1, x0
   2f6e4:	ldr	x0, [sp, #56]
   2f6e8:	bl	22e9c <__sanitizer_set_report_fd@@Base+0x3ca4>
   2f6ec:	and	w0, w0, #0xff
   2f6f0:	cmp	w0, #0x0
   2f6f4:	b.eq	2f70c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1afc>  // b.none
   2f6f8:	ldr	w0, [sp, #40]
   2f6fc:	cmp	w0, #0x4
   2f700:	b.ne	2f70c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1afc>  // b.any
   2f704:	mov	w0, #0x1                   	// #1
   2f708:	b	2f710 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b00>
   2f70c:	mov	w0, #0x0                   	// #0
   2f710:	cmp	w0, #0x0
   2f714:	b.eq	2f71c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b0c>  // b.none
   2f718:	b	2f6bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1aac>
   2f71c:	add	x0, sp, #0x2c
   2f720:	mov	x1, x0
   2f724:	ldr	x0, [sp, #56]
   2f728:	bl	22e9c <__sanitizer_set_report_fd@@Base+0x3ca4>
   2f72c:	and	w0, w0, #0xff
   2f730:	cmp	w0, #0x0
   2f734:	b.eq	2f788 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b78>  // b.none
   2f738:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
   2f73c:	cmp	w0, #0x0
   2f740:	cset	w0, ne  // ne = any
   2f744:	and	w0, w0, #0xff
   2f748:	cmp	w0, #0x0
   2f74c:	b.eq	2f768 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b58>  // b.none
   2f750:	ldr	w0, [sp, #44]
   2f754:	mov	w2, w0
   2f758:	ldr	x1, [sp, #16]
   2f75c:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2f760:	add	x0, x0, #0xc78
   2f764:	bl	2a3fc <OnPrint@@Base+0x454>
   2f768:	ldr	x0, [sp, #16]
   2f76c:	mov	x3, #0x0                   	// #0
   2f770:	mov	x2, #0x0                   	// #0
   2f774:	mov	w1, w0
   2f778:	mov	w0, #0x11                  	// #17
   2f77c:	bl	23be8 <__sanitizer_set_report_fd@@Base+0x49f0>
   2f780:	mov	w0, #0x0                   	// #0
   2f784:	b	2f7ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x1bdc>
   2f788:	ldr	w0, [sp, #48]
   2f78c:	and	w0, w0, #0xff
   2f790:	cmp	w0, #0x7f
   2f794:	b.ne	2f7d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1bc8>  // b.any
   2f798:	ldr	w0, [sp, #48]
   2f79c:	asr	w0, w0, #8
   2f7a0:	and	w0, w0, #0xff
   2f7a4:	cmp	w0, #0x13
   2f7a8:	b.eq	2f7d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1bc8>  // b.none
   2f7ac:	ldr	x0, [sp, #16]
   2f7b0:	mov	w1, w0
   2f7b4:	ldr	w0, [sp, #48]
   2f7b8:	asr	w0, w0, #8
   2f7bc:	mov	w0, w0
   2f7c0:	and	x0, x0, #0xff
   2f7c4:	mov	x3, x0
   2f7c8:	mov	x2, #0x0                   	// #0
   2f7cc:	mov	w0, #0x7                   	// #7
   2f7d0:	bl	23be8 <__sanitizer_set_report_fd@@Base+0x49f0>
   2f7d4:	b	2f6bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1aac>
   2f7d8:	ldr	x0, [sp, #24]
   2f7dc:	add	x0, x0, #0x8
   2f7e0:	ldr	x1, [sp, #16]
   2f7e4:	bl	302a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2698>
   2f7e8:	mov	w0, #0x1                   	// #1
   2f7ec:	ldr	x30, [sp], #64
   2f7f0:	ret
   2f7f4:	str	x30, [sp, #-48]!
   2f7f8:	str	x0, [sp, #24]
   2f7fc:	str	xzr, [sp, #40]
   2f800:	ldr	x0, [sp, #24]
   2f804:	add	x0, x0, #0x8
   2f808:	bl	30204 <__sanitizer_get_module_and_offset_for_pc@@Base+0x25f4>
   2f80c:	mov	x1, x0
   2f810:	ldr	x0, [sp, #40]
   2f814:	cmp	x0, x1
   2f818:	cset	w0, cc  // cc = lo, ul, last
   2f81c:	and	w0, w0, #0xff
   2f820:	cmp	w0, #0x0
   2f824:	b.eq	2f8e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1cd8>  // b.none
   2f828:	ldr	x0, [sp, #24]
   2f82c:	add	x0, x0, #0x8
   2f830:	ldr	x1, [sp, #40]
   2f834:	bl	30184 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2574>
   2f838:	str	w0, [sp, #36]
   2f83c:	mov	x3, #0x0                   	// #0
   2f840:	mov	x2, #0x0                   	// #0
   2f844:	ldr	w1, [sp, #36]
   2f848:	mov	w0, #0x11                  	// #17
   2f84c:	bl	23be8 <__sanitizer_set_report_fd@@Base+0x49f0>
   2f850:	mov	x2, x0
   2f854:	add	x0, sp, #0x20
   2f858:	mov	x1, x0
   2f85c:	mov	x0, x2
   2f860:	bl	22e9c <__sanitizer_set_report_fd@@Base+0x3ca4>
   2f864:	and	w0, w0, #0xff
   2f868:	eor	w0, w0, #0x1
   2f86c:	and	w0, w0, #0xff
   2f870:	cmp	w0, #0x0
   2f874:	b.eq	2f8a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c98>  // b.none
   2f878:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
   2f87c:	sxtw	x0, w0
   2f880:	cmp	x0, #0x1
   2f884:	cset	w0, hi  // hi = pmore
   2f888:	and	w0, w0, #0xff
   2f88c:	cmp	w0, #0x0
   2f890:	b.eq	2f8d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1cc8>  // b.none
   2f894:	ldr	w1, [sp, #36]
   2f898:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2f89c:	add	x0, x0, #0xcb0
   2f8a0:	bl	2a3fc <OnPrint@@Base+0x454>
   2f8a4:	b	2f8d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1cc8>
   2f8a8:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
   2f8ac:	cmp	w0, #0x0
   2f8b0:	cset	w0, ne  // ne = any
   2f8b4:	and	w0, w0, #0xff
   2f8b8:	cmp	w0, #0x0
   2f8bc:	b.eq	2f8d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1cc8>  // b.none
   2f8c0:	ldr	w0, [sp, #32]
   2f8c4:	mov	w2, w0
   2f8c8:	ldr	w1, [sp, #36]
   2f8cc:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2f8d0:	add	x0, x0, #0xcd0
   2f8d4:	bl	2a3fc <OnPrint@@Base+0x454>
   2f8d8:	ldr	x0, [sp, #40]
   2f8dc:	add	x0, x0, #0x1
   2f8e0:	str	x0, [sp, #40]
   2f8e4:	b	2f800 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1bf0>
   2f8e8:	nop
   2f8ec:	ldr	x30, [sp], #48
   2f8f0:	ret
   2f8f4:	str	x30, [sp, #-48]!
   2f8f8:	str	x0, [sp, #24]
   2f8fc:	str	xzr, [sp, #40]
   2f900:	ldr	x0, [sp, #24]
   2f904:	add	x0, x0, #0x8
   2f908:	bl	30204 <__sanitizer_get_module_and_offset_for_pc@@Base+0x25f4>
   2f90c:	mov	x1, x0
   2f910:	ldr	x0, [sp, #40]
   2f914:	cmp	x0, x1
   2f918:	cset	w0, cc  // cc = lo, ul, last
   2f91c:	and	w0, w0, #0xff
   2f920:	cmp	w0, #0x0
   2f924:	b.eq	2f95c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d4c>  // b.none
   2f928:	ldr	x0, [sp, #24]
   2f92c:	add	x0, x0, #0x8
   2f930:	ldr	x1, [sp, #40]
   2f934:	bl	30184 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2574>
   2f938:	mov	x3, #0x0                   	// #0
   2f93c:	mov	x2, #0x0                   	// #0
   2f940:	mov	w1, w0
   2f944:	mov	w0, #0x8                   	// #8
   2f948:	bl	23be8 <__sanitizer_set_report_fd@@Base+0x49f0>
   2f94c:	ldr	x0, [sp, #40]
   2f950:	add	x0, x0, #0x1
   2f954:	str	x0, [sp, #40]
   2f958:	b	2f900 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1cf0>
   2f95c:	nop
   2f960:	ldr	x30, [sp], #48
   2f964:	ret
   2f968:	stp	x19, x30, [sp, #-128]!
   2f96c:	str	x0, [sp, #24]
   2f970:	ldr	x0, [sp, #24]
   2f974:	ldr	w1, [x0, #40]
   2f978:	add	x0, sp, #0x38
   2f97c:	bl	241c4 <__sanitizer_set_report_fd@@Base+0x4fcc>
   2f980:	mov	w0, #0x1                   	// #1
   2f984:	strb	w0, [sp, #127]
   2f988:	add	x0, sp, #0x20
   2f98c:	bl	3090c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2cfc>
   2f990:	add	x0, sp, #0x20
   2f994:	mov	x1, #0x80                  	// #128
   2f998:	bl	cb94 <__lsan_do_recoverable_leak_check@@Base+0x2a08>
   2f99c:	str	wzr, [sp, #120]
   2f9a0:	ldr	w0, [sp, #120]
   2f9a4:	cmp	w0, #0x1d
   2f9a8:	b.gt	2fa90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e80>
   2f9ac:	ldrb	w0, [sp, #127]
   2f9b0:	eor	w0, w0, #0x1
   2f9b4:	and	w0, w0, #0xff
   2f9b8:	cmp	w0, #0x0
   2f9bc:	b.ne	2fa90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e80>  // b.any
   2f9c0:	strb	wzr, [sp, #127]
   2f9c4:	add	x1, sp, #0x20
   2f9c8:	add	x0, sp, #0x38
   2f9cc:	bl	24268 <__sanitizer_set_report_fd@@Base+0x5070>
   2f9d0:	cmp	w0, #0x2
   2f9d4:	b.eq	2fa10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e00>  // b.none
   2f9d8:	cmp	w0, #0x2
   2f9dc:	b.gt	2fa14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e04>
   2f9e0:	cmp	w0, #0x0
   2f9e4:	b.eq	2f9f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1de4>  // b.none
   2f9e8:	cmp	w0, #0x1
   2f9ec:	b.eq	2fa04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1df4>  // b.none
   2f9f0:	b	2fa14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e04>
   2f9f4:	ldr	x0, [sp, #24]
   2f9f8:	bl	2f7f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1be4>
   2f9fc:	mov	w19, #0x0                   	// #0
   2fa00:	b	2faa8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e98>
   2fa04:	mov	w0, #0x1                   	// #1
   2fa08:	strb	w0, [sp, #127]
   2fa0c:	b	2fa14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e04>
   2fa10:	nop
   2fa14:	add	x0, sp, #0x20
   2fa18:	str	x0, [sp, #104]
   2fa1c:	ldr	x0, [sp, #104]
   2fa20:	bl	3092c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d1c>
   2fa24:	str	x0, [sp, #112]
   2fa28:	ldr	x0, [sp, #104]
   2fa2c:	bl	30944 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d34>
   2fa30:	str	x0, [sp, #96]
   2fa34:	ldr	x1, [sp, #112]
   2fa38:	ldr	x0, [sp, #96]
   2fa3c:	cmp	x1, x0
   2fa40:	b.eq	2fa80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e70>  // b.none
   2fa44:	ldr	x0, [sp, #112]
   2fa48:	ldr	x0, [x0]
   2fa4c:	str	x0, [sp, #88]
   2fa50:	ldr	x1, [sp, #88]
   2fa54:	ldr	x0, [sp, #24]
   2fa58:	bl	2f5f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x19e0>
   2fa5c:	and	w0, w0, #0xff
   2fa60:	cmp	w0, #0x0
   2fa64:	b.eq	2fa70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e60>  // b.none
   2fa68:	mov	w0, #0x1                   	// #1
   2fa6c:	strb	w0, [sp, #127]
   2fa70:	ldr	x0, [sp, #112]
   2fa74:	add	x0, x0, #0x8
   2fa78:	str	x0, [sp, #112]
   2fa7c:	b	2fa34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e24>
   2fa80:	ldr	w0, [sp, #120]
   2fa84:	add	w0, w0, #0x1
   2fa88:	str	w0, [sp, #120]
   2fa8c:	b	2f9a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d90>
   2fa90:	ldr	x0, [sp, #24]
   2fa94:	add	x0, x0, #0x8
   2fa98:	bl	30204 <__sanitizer_get_module_and_offset_for_pc@@Base+0x25f4>
   2fa9c:	cmp	x0, #0x0
   2faa0:	cset	w0, ne  // ne = any
   2faa4:	and	w19, w0, #0xff
   2faa8:	add	x0, sp, #0x20
   2faac:	bl	b320 <__lsan_do_recoverable_leak_check@@Base+0x1194>
   2fab0:	add	x0, sp, #0x38
   2fab4:	bl	24690 <__sanitizer_set_report_fd@@Base+0x5498>
   2fab8:	mov	w0, w19
   2fabc:	ldp	x19, x30, [sp], #128
   2fac0:	ret
   2fac4:	str	x30, [sp, #-32]!
   2fac8:	adrp	x0, 9d4000 <__asan_cplus_demangle_builtin_types@@Base+0x957b40>
   2facc:	add	x0, x0, #0xa0
   2fad0:	ldr	x0, [x0]
   2fad4:	str	x0, [sp, #24]
   2fad8:	ldr	x0, [sp, #24]
   2fadc:	cmp	x0, #0x0
   2fae0:	b.eq	2fb08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ef8>  // b.none
   2fae4:	bl	23c68 <__sanitizer_set_report_fd@@Base+0x4a70>
   2fae8:	mov	x1, x0
   2faec:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   2faf0:	ldr	x0, [x0, #3560]
   2faf4:	ldr	x0, [x0]
   2faf8:	cmp	x1, x0
   2fafc:	b.ne	2fb08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ef8>  // b.any
   2fb00:	mov	w0, #0x1                   	// #1
   2fb04:	b	2fb0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1efc>
   2fb08:	mov	w0, #0x0                   	// #0
   2fb0c:	cmp	w0, #0x0
   2fb10:	b.eq	2fb28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f18>  // b.none
   2fb14:	ldr	x0, [sp, #24]
   2fb18:	bl	2f8f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ce4>
   2fb1c:	adrp	x0, 9d4000 <__asan_cplus_demangle_builtin_types@@Base+0x957b40>
   2fb20:	add	x0, x0, #0xa0
   2fb24:	str	xzr, [x0]
   2fb28:	nop
   2fb2c:	ldr	x30, [sp], #32
   2fb30:	ret
   2fb34:	str	x30, [sp, #-112]!
   2fb38:	str	w0, [sp, #44]
   2fb3c:	str	x1, [sp, #32]
   2fb40:	str	x2, [sp, #24]
   2fb44:	add	x0, sp, #0x30
   2fb48:	ldr	x2, [sp, #24]
   2fb4c:	ldr	x1, [sp, #32]
   2fb50:	bl	2e7b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xba4>
   2fb54:	ldr	x0, [sp, #64]
   2fb58:	ldr	x1, [sp, #72]
   2fb5c:	ldr	x2, [sp, #80]
   2fb60:	mov	x4, x2
   2fb64:	mov	x3, x1
   2fb68:	mov	x2, x0
   2fb6c:	ldr	w1, [sp, #44]
   2fb70:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2fb74:	add	x0, x0, #0xd20
   2fb78:	bl	2a350 <OnPrint@@Base+0x3a8>
   2fb7c:	adrp	x0, 9d4000 <__asan_cplus_demangle_builtin_types@@Base+0x957b40>
   2fb80:	add	x0, x0, #0xa0
   2fb84:	ldr	x0, [x0]
   2fb88:	str	x0, [sp, #104]
   2fb8c:	ldr	x0, [sp, #104]
   2fb90:	cmp	x0, #0x0
   2fb94:	b.eq	2fc1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x200c>  // b.none
   2fb98:	ldr	w0, [sp, #44]
   2fb9c:	cmp	w0, #0x6
   2fba0:	b.ne	2fbb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1fa0>  // b.any
   2fba4:	ldr	x0, [sp, #104]
   2fba8:	bl	2f8f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ce4>
   2fbac:	b	2fbb8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1fa8>
   2fbb0:	ldr	x0, [sp, #104]
   2fbb4:	bl	2f7f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1be4>
   2fbb8:	adrp	x0, 2f000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x13f0>
   2fbbc:	add	x0, x0, #0xac4
   2fbc0:	bl	35a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7e50>
   2fbc4:	and	w0, w0, #0xff
   2fbc8:	eor	w0, w0, #0x1
   2fbcc:	and	w0, w0, #0xff
   2fbd0:	and	x0, x0, #0xff
   2fbd4:	cmp	x0, #0x0
   2fbd8:	cset	w0, ne  // ne = any
   2fbdc:	and	w0, w0, #0xff
   2fbe0:	cmp	w0, #0x0
   2fbe4:	b.eq	2fbf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1fe8>  // b.none
   2fbe8:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2fbec:	add	x0, x0, #0xd58
   2fbf0:	bl	1e860 <__sanitizer_cov_pcs_init@@Base+0x37c4>
   2fbf4:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   2fbf8:	adrp	x0, 9d4000 <__asan_cplus_demangle_builtin_types@@Base+0x957b40>
   2fbfc:	add	x0, x0, #0xa0
   2fc00:	str	xzr, [x0]
   2fc04:	ldr	x0, [sp, #104]
   2fc08:	ldr	x0, [x0]
   2fc0c:	add	x0, x0, #0x68
   2fc10:	mov	w2, #0x1                   	// #1
   2fc14:	mov	x1, #0x1                   	// #1
   2fc18:	bl	f520 <__sanitizer_get_allocated_size@@Base+0x9c0>
   2fc1c:	ldr	w0, [sp, #44]
   2fc20:	cmp	w0, #0x6
   2fc24:	b.ne	2fc30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2020>  // b.any
   2fc28:	mov	w0, #0x1                   	// #1
   2fc2c:	b	2fc34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2024>
   2fc30:	mov	w0, #0x2                   	// #2
   2fc34:	bl	23348 <__sanitizer_set_report_fd@@Base+0x4150>
   2fc38:	stp	x19, x30, [sp, #-304]!
   2fc3c:	str	x0, [sp, #24]
   2fc40:	ldr	x0, [sp, #24]
   2fc44:	str	x0, [sp, #280]
   2fc48:	mov	x4, #0x0                   	// #0
   2fc4c:	mov	x3, #0x0                   	// #0
   2fc50:	mov	x2, #0x0                   	// #0
   2fc54:	mov	x1, #0x9                   	// #9
   2fc58:	mov	w0, #0x1                   	// #1
   2fc5c:	bl	23d00 <__sanitizer_set_report_fd@@Base+0x4b08>
   2fc60:	bl	23c7c <__sanitizer_set_report_fd@@Base+0x4a84>
   2fc64:	mov	x1, x0
   2fc68:	ldr	x0, [sp, #280]
   2fc6c:	ldr	x0, [x0, #112]
   2fc70:	cmp	x1, x0
   2fc74:	cset	w0, ne  // ne = any
   2fc78:	and	w0, w0, #0xff
   2fc7c:	cmp	w0, #0x0
   2fc80:	b.eq	2fc8c <__sanitizer_get_module_and_offset_for_pc@@Base+0x207c>  // b.none
   2fc84:	mov	w0, #0x4                   	// #4
   2fc88:	bl	23348 <__sanitizer_set_report_fd@@Base+0x4150>
   2fc8c:	ldr	x0, [sp, #280]
   2fc90:	add	x0, x0, #0x10
   2fc94:	bl	239ec <__sanitizer_set_report_fd@@Base+0x47f4>
   2fc98:	ldr	x0, [sp, #280]
   2fc9c:	add	x0, x0, #0x10
   2fca0:	bl	23ac8 <__sanitizer_set_report_fd@@Base+0x48d0>
   2fca4:	adrp	x0, 2f000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x13f0>
   2fca8:	add	x0, x0, #0xac4
   2fcac:	bl	359f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7de8>
   2fcb0:	and	w0, w0, #0xff
   2fcb4:	eor	w0, w0, #0x1
   2fcb8:	and	w0, w0, #0xff
   2fcbc:	and	x0, x0, #0xff
   2fcc0:	cmp	x0, #0x0
   2fcc4:	cset	w0, ne  // ne = any
   2fcc8:	and	w0, w0, #0xff
   2fccc:	cmp	w0, #0x0
   2fcd0:	b.eq	2fce4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x20d4>  // b.none
   2fcd4:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2fcd8:	add	x0, x0, #0xd88
   2fcdc:	bl	1e860 <__sanitizer_cov_pcs_init@@Base+0x37c4>
   2fce0:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   2fce4:	bl	23c7c <__sanitizer_set_report_fd@@Base+0x4a84>
   2fce8:	mov	w1, w0
   2fcec:	add	x0, sp, #0xe8
   2fcf0:	ldr	x2, [sp, #280]
   2fcf4:	bl	305e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x29d0>
   2fcf8:	adrp	x0, 9d4000 <__asan_cplus_demangle_builtin_types@@Base+0x957b40>
   2fcfc:	add	x0, x0, #0xa0
   2fd00:	add	x1, sp, #0xe8
   2fd04:	str	x1, [x0]
   2fd08:	add	x0, sp, #0xd0
   2fd0c:	mov	x1, #0x2000                	// #8192
   2fd10:	bl	abc0 <__lsan_do_recoverable_leak_check@@Base+0xa34>
   2fd14:	add	x0, sp, #0xb8
   2fd18:	mov	x2, #0x18                  	// #24
   2fd1c:	mov	w1, #0x0                   	// #0
   2fd20:	bl	21754 <__sanitizer_set_report_fd@@Base+0x255c>
   2fd24:	add	x0, sp, #0xd0
   2fd28:	bl	bc50 <__lsan_do_recoverable_leak_check@@Base+0x1ac4>
   2fd2c:	str	x0, [sp, #184]
   2fd30:	mov	x0, #0x2000                	// #8192
   2fd34:	str	x0, [sp, #200]
   2fd38:	add	x0, sp, #0xb8
   2fd3c:	mov	x1, #0x0                   	// #0
   2fd40:	bl	23d4c <__sanitizer_set_report_fd@@Base+0x4b54>
   2fd44:	str	xzr, [sp, #296]
   2fd48:	ldr	x0, [sp, #296]
   2fd4c:	cmp	x0, #0x6
   2fd50:	b.hi	2fda8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2198>  // b.pmore
   2fd54:	add	x0, sp, #0x20
   2fd58:	mov	x2, #0x98                  	// #152
   2fd5c:	mov	w1, #0x0                   	// #0
   2fd60:	bl	21754 <__sanitizer_set_report_fd@@Base+0x255c>
   2fd64:	adrp	x0, 2f000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x13f0>
   2fd68:	add	x0, x0, #0xb34
   2fd6c:	str	x0, [sp, #32]
   2fd70:	mov	w0, #0x4                   	// #4
   2fd74:	movk	w0, #0x800, lsl #16
   2fd78:	str	w0, [sp, #168]
   2fd7c:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2fd80:	add	x0, x0, #0xd00
   2fd84:	ldr	x1, [sp, #296]
   2fd88:	ldr	w0, [x0, x1, lsl #2]
   2fd8c:	add	x1, sp, #0x20
   2fd90:	mov	x2, #0x0                   	// #0
   2fd94:	bl	23d94 <__sanitizer_set_report_fd@@Base+0x4b9c>
   2fd98:	ldr	x0, [sp, #296]
   2fd9c:	add	x0, x0, #0x1
   2fda0:	str	x0, [sp, #296]
   2fda4:	b	2fd48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2138>
   2fda8:	str	wzr, [sp, #292]
   2fdac:	add	x0, sp, #0xe8
   2fdb0:	bl	2f968 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d58>
   2fdb4:	and	w0, w0, #0xff
   2fdb8:	eor	w0, w0, #0x1
   2fdbc:	and	w0, w0, #0xff
   2fdc0:	cmp	w0, #0x0
   2fdc4:	b.eq	2fdf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x21e8>  // b.none
   2fdc8:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
   2fdcc:	cmp	w0, #0x0
   2fdd0:	cset	w0, ne  // ne = any
   2fdd4:	and	w0, w0, #0xff
   2fdd8:	cmp	w0, #0x0
   2fddc:	b.eq	2fdec <__sanitizer_get_module_and_offset_for_pc@@Base+0x21dc>  // b.none
   2fde0:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2fde4:	add	x0, x0, #0xdb0
   2fde8:	bl	2a3fc <OnPrint@@Base+0x454>
   2fdec:	mov	w0, #0x3                   	// #3
   2fdf0:	str	w0, [sp, #292]
   2fdf4:	b	2fe2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x221c>
   2fdf8:	ldr	x0, [sp, #280]
   2fdfc:	ldr	x19, [x0]
   2fe00:	add	x0, sp, #0xe8
   2fe04:	bl	3066c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a5c>
   2fe08:	mov	x2, x0
   2fe0c:	ldr	x0, [sp, #280]
   2fe10:	ldr	x0, [x0, #8]
   2fe14:	mov	x1, x0
   2fe18:	mov	x0, x2
   2fe1c:	blr	x19
   2fe20:	add	x0, sp, #0xe8
   2fe24:	bl	2f7f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1be4>
   2fe28:	str	wzr, [sp, #292]
   2fe2c:	adrp	x0, 2f000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x13f0>
   2fe30:	add	x0, x0, #0xac4
   2fe34:	bl	35a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7e50>
   2fe38:	and	w0, w0, #0xff
   2fe3c:	eor	w0, w0, #0x1
   2fe40:	and	w0, w0, #0xff
   2fe44:	and	x0, x0, #0xff
   2fe48:	cmp	x0, #0x0
   2fe4c:	cset	w0, ne  // ne = any
   2fe50:	and	w0, w0, #0xff
   2fe54:	cmp	w0, #0x0
   2fe58:	b.eq	2fe6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x225c>  // b.none
   2fe5c:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2fe60:	add	x0, x0, #0xd58
   2fe64:	bl	1e860 <__sanitizer_cov_pcs_init@@Base+0x37c4>
   2fe68:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   2fe6c:	adrp	x0, 9d4000 <__asan_cplus_demangle_builtin_types@@Base+0x957b40>
   2fe70:	add	x0, x0, #0xa0
   2fe74:	str	xzr, [x0]
   2fe78:	ldr	x0, [sp, #280]
   2fe7c:	add	x0, x0, #0x68
   2fe80:	mov	w2, #0x1                   	// #1
   2fe84:	mov	x1, #0x1                   	// #1
   2fe88:	bl	f520 <__sanitizer_get_allocated_size@@Base+0x9c0>
   2fe8c:	ldr	w19, [sp, #292]
   2fe90:	add	x0, sp, #0xd0
   2fe94:	bl	abf0 <__lsan_do_recoverable_leak_check@@Base+0xa64>
   2fe98:	add	x0, sp, #0xe8
   2fe9c:	bl	30684 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a74>
   2fea0:	mov	w0, w19
   2fea4:	ldp	x19, x30, [sp], #304
   2fea8:	ret
   2feac:	sub	sp, sp, #0x100
   2feb0:	str	x30, [sp]
   2feb4:	str	x0, [sp, #24]
   2feb8:	str	x1, [sp, #16]
   2febc:	add	x0, sp, #0xc0
   2fec0:	bl	307e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2bd8>
   2fec4:	add	x0, sp, #0x48
   2fec8:	bl	308ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x2cdc>
   2fecc:	ldr	x0, [sp, #24]
   2fed0:	str	x0, [sp, #72]
   2fed4:	ldr	x0, [sp, #16]
   2fed8:	str	x0, [sp, #80]
   2fedc:	bl	23c68 <__sanitizer_set_report_fd@@Base+0x4a70>
   2fee0:	str	x0, [sp, #184]
   2fee4:	add	x0, sp, #0x48
   2fee8:	add	x0, x0, #0x68
   2feec:	mov	w2, #0x1                   	// #1
   2fef0:	mov	x1, #0x0                   	// #0
   2fef4:	bl	f520 <__sanitizer_get_allocated_size@@Base+0x9c0>
   2fef8:	mov	x0, #0x200000              	// #2097152
   2fefc:	str	x0, [sp, #240]
   2ff00:	add	x0, sp, #0x30
   2ff04:	mov	x1, #0x200000              	// #2097152
   2ff08:	bl	306a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a94>
   2ff0c:	add	x0, sp, #0x48
   2ff10:	add	x0, x0, #0x10
   2ff14:	bl	239ec <__sanitizer_set_report_fd@@Base+0x47f4>
   2ff18:	adrp	x0, 9d4000 <__asan_cplus_demangle_builtin_types@@Base+0x957b40>
   2ff1c:	add	x0, x0, #0xa8
   2ff20:	bl	23f44 <__sanitizer_set_report_fd@@Base+0x4d4c>
   2ff24:	str	xzr, [sp, #248]
   2ff28:	ldr	x0, [sp, #248]
   2ff2c:	cmp	x0, #0x6
   2ff30:	b.hi	2ff64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2354>  // b.pmore
   2ff34:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2ff38:	add	x0, x0, #0xd00
   2ff3c:	ldr	x1, [sp, #248]
   2ff40:	ldr	w0, [x0, x1, lsl #2]
   2ff44:	mov	w1, w0
   2ff48:	adrp	x0, 9d4000 <__asan_cplus_demangle_builtin_types@@Base+0x957b40>
   2ff4c:	add	x0, x0, #0xa8
   2ff50:	bl	23f8c <__sanitizer_set_report_fd@@Base+0x4d94>
   2ff54:	ldr	x0, [sp, #248]
   2ff58:	add	x0, x0, #0x1
   2ff5c:	str	x0, [sp, #248]
   2ff60:	b	2ff28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2318>
   2ff64:	adrp	x0, 9d4000 <__asan_cplus_demangle_builtin_types@@Base+0x957b40>
   2ff68:	add	x2, x0, #0x128
   2ff6c:	adrp	x0, 9d4000 <__asan_cplus_demangle_builtin_types@@Base+0x957b40>
   2ff70:	add	x1, x0, #0xa8
   2ff74:	mov	w0, #0x0                   	// #0
   2ff78:	bl	23ef8 <__sanitizer_set_report_fd@@Base+0x4d00>
   2ff7c:	str	w0, [sp, #236]
   2ff80:	ldrsw	x0, [sp, #236]
   2ff84:	str	x0, [sp, #224]
   2ff88:	str	xzr, [sp, #216]
   2ff8c:	ldr	x1, [sp, #224]
   2ff90:	ldr	x0, [sp, #216]
   2ff94:	cmp	x1, x0
   2ff98:	cset	w0, ne  // ne = any
   2ff9c:	and	w0, w0, #0xff
   2ffa0:	and	x0, x0, #0xff
   2ffa4:	cmp	x0, #0x0
   2ffa8:	b.eq	2ffcc <__sanitizer_get_module_and_offset_for_pc@@Base+0x23bc>  // b.none
   2ffac:	ldr	x4, [sp, #216]
   2ffb0:	ldr	x3, [sp, #224]
   2ffb4:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2ffb8:	add	x2, x0, #0xe28
   2ffbc:	mov	w1, #0x1ac                 	// #428
   2ffc0:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   2ffc4:	add	x0, x0, #0xbd0
   2ffc8:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   2ffcc:	add	x0, sp, #0x30
   2ffd0:	bl	307b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ba8>
   2ffd4:	mov	x1, x0
   2ffd8:	add	x0, sp, #0x48
   2ffdc:	mov	x6, #0x0                   	// #0
   2ffe0:	mov	x5, #0x0                   	// #0
   2ffe4:	mov	x4, #0x0                   	// #0
   2ffe8:	mov	x3, x0
   2ffec:	mov	w2, #0x700                 	// #1792
   2fff0:	movk	w2, #0x80, lsl #16
   2fff4:	adrp	x0, 2f000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x13f0>
   2fff8:	add	x0, x0, #0xc38
   2fffc:	bl	24b90 <__sanitizer_set_report_fd@@Base+0x5998>
   30000:	str	x0, [sp, #208]
   30004:	mov	x2, #0x0                   	// #0
   30008:	adrp	x0, 9d4000 <__asan_cplus_demangle_builtin_types@@Base+0x957b40>
   3000c:	add	x1, x0, #0x128
   30010:	mov	w0, #0x2                   	// #2
   30014:	bl	23ef8 <__sanitizer_set_report_fd@@Base+0x4d00>
   30018:	str	wzr, [sp, #44]
   3001c:	add	x0, sp, #0x2c
   30020:	mov	x1, x0
   30024:	ldr	x0, [sp, #208]
   30028:	bl	22e9c <__sanitizer_set_report_fd@@Base+0x3ca4>
   3002c:	and	w0, w0, #0xff
   30030:	cmp	w0, #0x0
   30034:	b.eq	30074 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2464>  // b.none
   30038:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
   3003c:	cmp	w0, #0x0
   30040:	cset	w0, ne  // ne = any
   30044:	and	w0, w0, #0xff
   30048:	cmp	w0, #0x0
   3004c:	b.eq	30064 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2454>  // b.none
   30050:	ldr	w0, [sp, #44]
   30054:	mov	w1, w0
   30058:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   3005c:	add	x0, x0, #0xe38
   30060:	bl	2a3fc <OnPrint@@Base+0x454>
   30064:	add	x0, sp, #0x48
   30068:	add	x0, x0, #0x10
   3006c:	bl	23ac8 <__sanitizer_set_report_fd@@Base+0x48d0>
   30070:	b	30164 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2554>
   30074:	add	x0, sp, #0x28
   30078:	ldr	x1, [sp, #208]
   3007c:	bl	30884 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c74>
   30080:	mov	x4, #0x0                   	// #0
   30084:	mov	x3, #0x0                   	// #0
   30088:	mov	x2, #0x0                   	// #0
   3008c:	ldr	x1, [sp, #208]
   30090:	mov	w0, #0x6d61                	// #28001
   30094:	movk	w0, #0x5961, lsl #16
   30098:	bl	23d00 <__sanitizer_set_report_fd@@Base+0x4b08>
   3009c:	add	x0, sp, #0x48
   300a0:	add	x0, x0, #0x10
   300a4:	bl	23ac8 <__sanitizer_set_report_fd@@Base+0x48d0>
   300a8:	add	x0, sp, #0x48
   300ac:	add	x0, x0, #0x68
   300b0:	mov	w1, #0x1                   	// #1
   300b4:	bl	f49c <__sanitizer_get_allocated_size@@Base+0x93c>
   300b8:	cmp	x0, #0x0
   300bc:	cset	w0, eq  // eq = none
   300c0:	and	w0, w0, #0xff
   300c4:	cmp	w0, #0x0
   300c8:	b.eq	300d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x24c4>  // b.none
   300cc:	bl	6d10 <sched_yield@plt>
   300d0:	b	300a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2498>
   300d4:	ldr	x0, [sp, #208]
   300d8:	mov	w2, #0x40000000            	// #1073741824
   300dc:	mov	x1, #0x0                   	// #0
   300e0:	bl	23c2c <__sanitizer_set_report_fd@@Base+0x4a34>
   300e4:	str	x0, [sp, #200]
   300e8:	add	x0, sp, #0x2c
   300ec:	mov	x1, x0
   300f0:	ldr	x0, [sp, #200]
   300f4:	bl	22e9c <__sanitizer_set_report_fd@@Base+0x3ca4>
   300f8:	and	w0, w0, #0xff
   300fc:	eor	w0, w0, #0x1
   30100:	and	w0, w0, #0xff
   30104:	cmp	w0, #0x0
   30108:	b.ne	30150 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2540>  // b.any
   3010c:	ldr	w0, [sp, #44]
   30110:	cmp	w0, #0x4
   30114:	b.eq	30148 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2538>  // b.none
   30118:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
   3011c:	cmp	w0, #0x0
   30120:	cset	w0, ne  // ne = any
   30124:	and	w0, w0, #0xff
   30128:	cmp	w0, #0x0
   3012c:	b.eq	30158 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2548>  // b.none
   30130:	ldr	w0, [sp, #44]
   30134:	mov	w1, w0
   30138:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   3013c:	add	x0, x0, #0xe68
   30140:	bl	2a3fc <OnPrint@@Base+0x454>
   30144:	b	30158 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2548>
   30148:	nop
   3014c:	b	300d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x24c4>
   30150:	nop
   30154:	b	3015c <__sanitizer_get_module_and_offset_for_pc@@Base+0x254c>
   30158:	nop
   3015c:	add	x0, sp, #0x28
   30160:	bl	308c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2cb0>
   30164:	add	x0, sp, #0x30
   30168:	bl	30778 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b68>
   3016c:	add	x0, sp, #0xc0
   30170:	bl	30848 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c38>
   30174:	nop
   30178:	ldr	x30, [sp]
   3017c:	add	sp, sp, #0x100
   30180:	ret
   30184:	str	x30, [sp, #-48]!
   30188:	str	x0, [sp, #24]
   3018c:	str	x1, [sp, #16]
   30190:	ldr	x0, [sp, #16]
   30194:	str	x0, [sp, #40]
   30198:	ldr	x0, [sp, #24]
   3019c:	add	x0, x0, #0x8
   301a0:	bl	b1bc <__lsan_do_recoverable_leak_check@@Base+0x1030>
   301a4:	str	x0, [sp, #32]
   301a8:	ldr	x1, [sp, #40]
   301ac:	ldr	x0, [sp, #32]
   301b0:	cmp	x1, x0
   301b4:	cset	w0, cs  // cs = hs, nlast
   301b8:	and	w0, w0, #0xff
   301bc:	and	x0, x0, #0xff
   301c0:	cmp	x0, #0x0
   301c4:	b.eq	301e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x25d8>  // b.none
   301c8:	ldr	x4, [sp, #32]
   301cc:	ldr	x3, [sp, #40]
   301d0:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   301d4:	add	x2, x0, #0xea0
   301d8:	mov	w1, #0x202                 	// #514
   301dc:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   301e0:	add	x0, x0, #0xbd0
   301e4:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   301e8:	ldr	x0, [sp, #24]
   301ec:	add	x0, x0, #0x8
   301f0:	ldr	x1, [sp, #16]
   301f4:	bl	b274 <__lsan_do_recoverable_leak_check@@Base+0x10e8>
   301f8:	ldr	x0, [x0]
   301fc:	ldr	x30, [sp], #48
   30200:	ret
   30204:	str	x30, [sp, #-32]!
   30208:	str	x0, [sp, #24]
   3020c:	ldr	x0, [sp, #24]
   30210:	add	x0, x0, #0x8
   30214:	bl	b1bc <__lsan_do_recoverable_leak_check@@Base+0x1030>
   30218:	ldr	x30, [sp], #32
   3021c:	ret
   30220:	str	x30, [sp, #-48]!
   30224:	str	x0, [sp, #24]
   30228:	str	x1, [sp, #16]
   3022c:	str	xzr, [sp, #40]
   30230:	ldr	x0, [sp, #24]
   30234:	add	x0, x0, #0x8
   30238:	bl	b1bc <__lsan_do_recoverable_leak_check@@Base+0x1030>
   3023c:	mov	x1, x0
   30240:	ldr	x0, [sp, #40]
   30244:	cmp	x0, x1
   30248:	cset	w0, cc  // cc = lo, ul, last
   3024c:	and	w0, w0, #0xff
   30250:	cmp	w0, #0x0
   30254:	b.eq	3029c <__sanitizer_get_module_and_offset_for_pc@@Base+0x268c>  // b.none
   30258:	ldr	x0, [sp, #24]
   3025c:	add	x0, x0, #0x8
   30260:	ldr	x1, [sp, #40]
   30264:	bl	b274 <__lsan_do_recoverable_leak_check@@Base+0x10e8>
   30268:	ldr	x0, [x0]
   3026c:	ldr	x1, [sp, #16]
   30270:	cmp	x1, x0
   30274:	cset	w0, eq  // eq = none
   30278:	and	w0, w0, #0xff
   3027c:	cmp	w0, #0x0
   30280:	b.eq	3028c <__sanitizer_get_module_and_offset_for_pc@@Base+0x267c>  // b.none
   30284:	mov	w0, #0x1                   	// #1
   30288:	b	302a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2690>
   3028c:	ldr	x0, [sp, #40]
   30290:	add	x0, x0, #0x1
   30294:	str	x0, [sp, #40]
   30298:	b	30230 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2620>
   3029c:	mov	w0, #0x0                   	// #0
   302a0:	ldr	x30, [sp], #48
   302a4:	ret
   302a8:	str	x30, [sp, #-32]!
   302ac:	str	x0, [sp, #24]
   302b0:	str	x1, [sp, #16]
   302b4:	ldr	x0, [sp, #24]
   302b8:	add	x0, x0, #0x8
   302bc:	add	x1, sp, #0x10
   302c0:	bl	252bc <__sanitizer_set_report_fd@@Base+0x60c4>
   302c4:	nop
   302c8:	ldr	x30, [sp], #32
   302cc:	ret
   302d0:	sub	sp, sp, #0x160
   302d4:	str	x30, [sp]
   302d8:	str	x0, [sp, #40]
   302dc:	str	x1, [sp, #32]
   302e0:	str	x2, [sp, #24]
   302e4:	str	x3, [sp, #16]
   302e8:	ldr	x0, [sp, #40]
   302ec:	ldr	x0, [x0]
   302f0:	add	x0, x0, #0x18
   302f4:	ldr	x2, [x0]
   302f8:	ldr	x1, [sp, #32]
   302fc:	ldr	x0, [sp, #40]
   30300:	blr	x2
   30304:	str	w0, [sp, #348]
   30308:	add	x0, sp, #0x48
   3030c:	str	x0, [sp, #48]
   30310:	mov	x0, #0x110                 	// #272
   30314:	str	x0, [sp, #56]
   30318:	add	x0, sp, #0x30
   3031c:	mov	x3, x0
   30320:	mov	x2, #0x1                   	// #1
   30324:	ldr	w1, [sp, #348]
   30328:	mov	w0, #0x4204                	// #16900
   3032c:	bl	23be8 <__sanitizer_set_report_fd@@Base+0x49f0>
   30330:	mov	x2, x0
   30334:	add	x0, sp, #0x44
   30338:	mov	x1, x0
   3033c:	mov	x0, x2
   30340:	bl	22e9c <__sanitizer_set_report_fd@@Base+0x3ca4>
   30344:	strb	w0, [sp, #347]
   30348:	ldrb	w0, [sp, #347]
   3034c:	cmp	w0, #0x0
   30350:	b.eq	303a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2790>  // b.none
   30354:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
   30358:	cmp	w0, #0x0
   3035c:	cset	w0, ne  // ne = any
   30360:	and	w0, w0, #0xff
   30364:	cmp	w0, #0x0
   30368:	b.eq	30384 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2774>  // b.none
   3036c:	ldr	w0, [sp, #68]
   30370:	mov	w2, w0
   30374:	ldr	w1, [sp, #348]
   30378:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   3037c:	add	x0, x0, #0xec8
   30380:	bl	2a3fc <OnPrint@@Base+0x454>
   30384:	ldr	w0, [sp, #68]
   30388:	cmp	w0, #0x3
   3038c:	b.ne	30398 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2788>  // b.any
   30390:	mov	w0, #0xffffffff            	// #-1
   30394:	b	303c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x27b4>
   30398:	mov	w0, #0x0                   	// #0
   3039c:	b	303c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x27b4>
   303a0:	ldr	x1, [sp, #320]
   303a4:	ldr	x0, [sp, #16]
   303a8:	str	x1, [x0]
   303ac:	add	x0, sp, #0x48
   303b0:	mov	x2, #0x110                 	// #272
   303b4:	mov	x1, x0
   303b8:	ldr	x0, [sp, #24]
   303bc:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
   303c0:	mov	w0, #0x1                   	// #1
   303c4:	ldr	x30, [sp]
   303c8:	add	sp, sp, #0x160
   303cc:	ret
   303d0:	sub	sp, sp, #0x10
   303d4:	str	x0, [sp, #8]
   303d8:	mov	x0, #0x22                  	// #34
   303dc:	add	sp, sp, #0x10
   303e0:	ret
   303e4:	str	x30, [sp, #-64]!
   303e8:	str	x0, [sp, #40]
   303ec:	str	x1, [sp, #32]
   303f0:	str	x2, [sp, #24]
   303f4:	str	x3, [sp, #16]
   303f8:	str	xzr, [sp, #56]
   303fc:	str	xzr, [sp, #48]
   30400:	ldr	x1, [sp, #56]
   30404:	ldr	x0, [sp, #48]
   30408:	cmp	x1, x0
   3040c:	cset	w0, eq  // eq = none
   30410:	and	w0, w0, #0xff
   30414:	and	x0, x0, #0xff
   30418:	cmp	x0, #0x0
   3041c:	b.eq	30440 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2830>  // b.none
   30420:	ldr	x4, [sp, #48]
   30424:	ldr	x3, [sp, #56]
   30428:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   3042c:	add	x2, x0, #0xb20
   30430:	mov	w1, #0x24                  	// #36
   30434:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   30438:	add	x0, x0, #0xb40
   3043c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   30440:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   30444:	str	x30, [sp, #-48]!
   30448:	str	x0, [sp, #24]
   3044c:	str	xzr, [sp, #40]
   30450:	str	xzr, [sp, #32]
   30454:	ldr	x1, [sp, #40]
   30458:	ldr	x0, [sp, #32]
   3045c:	cmp	x1, x0
   30460:	cset	w0, eq  // eq = none
   30464:	and	w0, w0, #0xff
   30468:	and	x0, x0, #0xff
   3046c:	cmp	x0, #0x0
   30470:	b.eq	30494 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2884>  // b.none
   30474:	ldr	x4, [sp, #32]
   30478:	ldr	x3, [sp, #40]
   3047c:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   30480:	add	x2, x0, #0xb20
   30484:	mov	w1, #0x28                  	// #40
   30488:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   3048c:	add	x0, x0, #0xb40
   30490:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   30494:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   30498:	str	x30, [sp, #-48]!
   3049c:	str	x0, [sp, #24]
   304a0:	str	xzr, [sp, #40]
   304a4:	str	xzr, [sp, #32]
   304a8:	ldr	x1, [sp, #40]
   304ac:	ldr	x0, [sp, #32]
   304b0:	cmp	x1, x0
   304b4:	cset	w0, eq  // eq = none
   304b8:	and	w0, w0, #0xff
   304bc:	and	x0, x0, #0xff
   304c0:	cmp	x0, #0x0
   304c4:	b.eq	304e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x28d8>  // b.none
   304c8:	ldr	x4, [sp, #32]
   304cc:	ldr	x3, [sp, #40]
   304d0:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   304d4:	add	x2, x0, #0xb20
   304d8:	mov	w1, #0x29                  	// #41
   304dc:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   304e0:	add	x0, x0, #0xb40
   304e4:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   304e8:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   304ec:	str	x30, [sp, #-48]!
   304f0:	str	x0, [sp, #24]
   304f4:	str	x1, [sp, #16]
   304f8:	str	xzr, [sp, #40]
   304fc:	str	xzr, [sp, #32]
   30500:	ldr	x1, [sp, #40]
   30504:	ldr	x0, [sp, #32]
   30508:	cmp	x1, x0
   3050c:	cset	w0, eq  // eq = none
   30510:	and	w0, w0, #0xff
   30514:	and	x0, x0, #0xff
   30518:	cmp	x0, #0x0
   3051c:	b.eq	30540 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2930>  // b.none
   30520:	ldr	x4, [sp, #32]
   30524:	ldr	x3, [sp, #40]
   30528:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   3052c:	add	x2, x0, #0xb20
   30530:	mov	w1, #0x2a                  	// #42
   30534:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   30538:	add	x0, x0, #0xb40
   3053c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   30540:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   30544:	sub	sp, sp, #0x10
   30548:	str	x0, [sp, #8]
   3054c:	adrp	x0, 7b000 <__asan_backtrace_vector_release@@Base+0x2c340>
   30550:	add	x1, x0, #0xc90
   30554:	ldr	x0, [sp, #8]
   30558:	str	x1, [x0]
   3055c:	nop
   30560:	add	sp, sp, #0x10
   30564:	ret
   30568:	str	x30, [sp, #-32]!
   3056c:	str	x0, [sp, #24]
   30570:	ldr	x0, [sp, #24]
   30574:	bl	30544 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2934>
   30578:	adrp	x0, 7b000 <__asan_backtrace_vector_release@@Base+0x2c340>
   3057c:	add	x1, x0, #0xc60
   30580:	ldr	x0, [sp, #24]
   30584:	str	x1, [x0]
   30588:	ldr	x0, [sp, #24]
   3058c:	add	x0, x0, #0x8
   30590:	bl	3090c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2cfc>
   30594:	ldr	x0, [sp, #24]
   30598:	add	x0, x0, #0x8
   3059c:	mov	x1, #0x400                 	// #1024
   305a0:	bl	cb94 <__lsan_do_recoverable_leak_check@@Base+0x2a08>
   305a4:	nop
   305a8:	ldr	x30, [sp], #32
   305ac:	ret
   305b0:	str	x30, [sp, #-32]!
   305b4:	str	x0, [sp, #24]
   305b8:	adrp	x0, 7b000 <__asan_backtrace_vector_release@@Base+0x2c340>
   305bc:	add	x1, x0, #0xc60
   305c0:	ldr	x0, [sp, #24]
   305c4:	str	x1, [x0]
   305c8:	ldr	x0, [sp, #24]
   305cc:	add	x0, x0, #0x8
   305d0:	bl	b320 <__lsan_do_recoverable_leak_check@@Base+0x1194>
   305d4:	nop
   305d8:	ldr	x30, [sp], #32
   305dc:	ret
   305e0:	str	x30, [sp, #-64]!
   305e4:	str	x0, [sp, #40]
   305e8:	str	w1, [sp, #36]
   305ec:	str	x2, [sp, #24]
   305f0:	ldr	x0, [sp, #40]
   305f4:	ldr	x1, [sp, #24]
   305f8:	str	x1, [x0]
   305fc:	ldr	x0, [sp, #40]
   30600:	add	x0, x0, #0x8
   30604:	bl	30568 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2958>
   30608:	ldr	x0, [sp, #40]
   3060c:	ldr	w1, [sp, #36]
   30610:	str	w1, [x0, #40]
   30614:	ldrsw	x0, [sp, #36]
   30618:	str	x0, [sp, #56]
   3061c:	str	xzr, [sp, #48]
   30620:	ldr	x1, [sp, #56]
   30624:	ldr	x0, [sp, #48]
   30628:	cmp	x1, x0
   3062c:	cset	w0, cc  // cc = lo, ul, last
   30630:	and	w0, w0, #0xff
   30634:	and	x0, x0, #0xff
   30638:	cmp	x0, #0x0
   3063c:	b.eq	30660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a50>  // b.none
   30640:	ldr	x4, [sp, #48]
   30644:	ldr	x3, [sp, #56]
   30648:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   3064c:	add	x2, x0, #0xbb8
   30650:	mov	w1, #0x7a                  	// #122
   30654:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   30658:	add	x0, x0, #0xbd0
   3065c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   30660:	nop
   30664:	ldr	x30, [sp], #64
   30668:	ret
   3066c:	sub	sp, sp, #0x10
   30670:	str	x0, [sp, #8]
   30674:	ldr	x0, [sp, #8]
   30678:	add	x0, x0, #0x8
   3067c:	add	sp, sp, #0x10
   30680:	ret
   30684:	str	x30, [sp, #-32]!
   30688:	str	x0, [sp, #24]
   3068c:	ldr	x0, [sp, #24]
   30690:	add	x0, x0, #0x8
   30694:	bl	305b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x29a0>
   30698:	nop
   3069c:	ldr	x30, [sp], #32
   306a0:	ret
   306a4:	str	x30, [sp, #-48]!
   306a8:	str	x0, [sp, #24]
   306ac:	str	x1, [sp, #16]
   306b0:	ldr	x0, [sp, #24]
   306b4:	ldr	x1, [sp, #16]
   306b8:	str	x1, [x0]
   306bc:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
   306c0:	mov	x1, x0
   306c4:	ldr	x0, [sp, #24]
   306c8:	str	x1, [x0, #8]
   306cc:	ldr	x0, [sp, #24]
   306d0:	ldr	x1, [x0]
   306d4:	ldr	x0, [sp, #24]
   306d8:	ldr	x0, [x0, #8]
   306dc:	add	x3, x1, x0
   306e0:	mov	w2, #0x0                   	// #0
   306e4:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   306e8:	add	x1, x0, #0xdd0
   306ec:	mov	x0, x3
   306f0:	bl	26a50 <__sanitizer_set_report_fd@@Base+0x7858>
   306f4:	mov	x1, x0
   306f8:	ldr	x0, [sp, #24]
   306fc:	str	x1, [x0, #16]
   30700:	ldr	x0, [sp, #24]
   30704:	ldr	x2, [x0, #16]
   30708:	ldr	x0, [sp, #24]
   3070c:	ldr	x0, [x0, #8]
   30710:	mov	x1, x0
   30714:	mov	x0, x2
   30718:	bl	27028 <__sanitizer_set_report_fd@@Base+0x7e30>
   3071c:	and	w0, w0, #0xff
   30720:	and	x0, x0, #0xff
   30724:	str	x0, [sp, #40]
   30728:	str	xzr, [sp, #32]
   3072c:	ldr	x1, [sp, #40]
   30730:	ldr	x0, [sp, #32]
   30734:	cmp	x1, x0
   30738:	cset	w0, eq  // eq = none
   3073c:	and	w0, w0, #0xff
   30740:	and	x0, x0, #0xff
   30744:	cmp	x0, #0x0
   30748:	b.eq	3076c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b5c>  // b.none
   3074c:	ldr	x4, [sp, #32]
   30750:	ldr	x3, [sp, #40]
   30754:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   30758:	add	x2, x0, #0xde8
   3075c:	mov	w1, #0x152                 	// #338
   30760:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   30764:	add	x0, x0, #0xbd0
   30768:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   3076c:	nop
   30770:	ldr	x30, [sp], #48
   30774:	ret
   30778:	str	x30, [sp, #-32]!
   3077c:	str	x0, [sp, #24]
   30780:	ldr	x0, [sp, #24]
   30784:	ldr	x0, [x0, #16]
   30788:	mov	x2, x0
   3078c:	ldr	x0, [sp, #24]
   30790:	ldr	x1, [x0]
   30794:	ldr	x0, [sp, #24]
   30798:	ldr	x0, [x0, #8]
   3079c:	add	x0, x1, x0
   307a0:	mov	x1, x0
   307a4:	mov	x0, x2
   307a8:	bl	26af4 <__sanitizer_set_report_fd@@Base+0x78fc>
   307ac:	nop
   307b0:	ldr	x30, [sp], #32
   307b4:	ret
   307b8:	sub	sp, sp, #0x10
   307bc:	str	x0, [sp, #8]
   307c0:	ldr	x0, [sp, #8]
   307c4:	ldr	x1, [x0, #16]
   307c8:	ldr	x0, [sp, #8]
   307cc:	ldr	x0, [x0]
   307d0:	add	x1, x1, x0
   307d4:	ldr	x0, [sp, #8]
   307d8:	ldr	x0, [x0, #8]
   307dc:	add	x0, x1, x0
   307e0:	add	sp, sp, #0x10
   307e4:	ret
   307e8:	str	x30, [sp, #-32]!
   307ec:	str	x0, [sp, #24]
   307f0:	mov	x4, #0x0                   	// #0
   307f4:	mov	x3, #0x0                   	// #0
   307f8:	mov	x2, #0x0                   	// #0
   307fc:	mov	x1, #0x0                   	// #0
   30800:	mov	w0, #0x3                   	// #3
   30804:	bl	23d00 <__sanitizer_set_report_fd@@Base+0x4b08>
   30808:	mov	w1, w0
   3080c:	ldr	x0, [sp, #24]
   30810:	str	w1, [x0]
   30814:	ldr	x0, [sp, #24]
   30818:	ldr	w0, [x0]
   3081c:	cmp	w0, #0x0
   30820:	b.ne	3083c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c2c>  // b.any
   30824:	mov	x4, #0x0                   	// #0
   30828:	mov	x3, #0x0                   	// #0
   3082c:	mov	x2, #0x0                   	// #0
   30830:	mov	x1, #0x1                   	// #1
   30834:	mov	w0, #0x4                   	// #4
   30838:	bl	23d00 <__sanitizer_set_report_fd@@Base+0x4b08>
   3083c:	nop
   30840:	ldr	x30, [sp], #32
   30844:	ret
   30848:	str	x30, [sp, #-32]!
   3084c:	str	x0, [sp, #24]
   30850:	ldr	x0, [sp, #24]
   30854:	ldr	w0, [x0]
   30858:	cmp	w0, #0x0
   3085c:	b.ne	30878 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c68>  // b.any
   30860:	mov	x4, #0x0                   	// #0
   30864:	mov	x3, #0x0                   	// #0
   30868:	mov	x2, #0x0                   	// #0
   3086c:	mov	x1, #0x0                   	// #0
   30870:	mov	w0, #0x4                   	// #4
   30874:	bl	23d00 <__sanitizer_set_report_fd@@Base+0x4b08>
   30878:	nop
   3087c:	ldr	x30, [sp], #32
   30880:	ret
   30884:	str	x30, [sp, #-32]!
   30888:	str	x0, [sp, #24]
   3088c:	str	x1, [sp, #16]
   30890:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   30894:	ldr	x0, [x0, #3560]
   30898:	ldr	x1, [sp, #16]
   3089c:	str	x1, [x0]
   308a0:	bl	23c68 <__sanitizer_set_report_fd@@Base+0x4a70>
   308a4:	mov	x1, x0
   308a8:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   308ac:	ldr	x0, [x0, #3544]
   308b0:	str	x1, [x0]
   308b4:	nop
   308b8:	ldr	x30, [sp], #32
   308bc:	ret
   308c0:	sub	sp, sp, #0x10
   308c4:	str	x0, [sp, #8]
   308c8:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   308cc:	ldr	x0, [x0, #3560]
   308d0:	str	xzr, [x0]
   308d4:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   308d8:	ldr	x0, [x0, #3544]
   308dc:	str	xzr, [x0]
   308e0:	nop
   308e4:	add	sp, sp, #0x10
   308e8:	ret
   308ec:	str	x30, [sp, #-32]!
   308f0:	str	x0, [sp, #24]
   308f4:	ldr	x0, [sp, #24]
   308f8:	add	x0, x0, #0x10
   308fc:	bl	239c8 <__sanitizer_set_report_fd@@Base+0x47d0>
   30900:	nop
   30904:	ldr	x30, [sp], #32
   30908:	ret
   3090c:	str	x30, [sp, #-32]!
   30910:	str	x0, [sp, #24]
   30914:	ldr	x0, [sp, #24]
   30918:	mov	x1, #0x1                   	// #1
   3091c:	bl	c3d4 <__lsan_do_recoverable_leak_check@@Base+0x2248>
   30920:	nop
   30924:	ldr	x30, [sp], #32
   30928:	ret
   3092c:	str	x30, [sp, #-32]!
   30930:	str	x0, [sp, #24]
   30934:	ldr	x0, [sp, #24]
   30938:	bl	b3b8 <__lsan_do_recoverable_leak_check@@Base+0x122c>
   3093c:	ldr	x30, [sp], #32
   30940:	ret
   30944:	stp	x19, x30, [sp, #-32]!
   30948:	str	x0, [sp, #24]
   3094c:	ldr	x0, [sp, #24]
   30950:	bl	b3b8 <__lsan_do_recoverable_leak_check@@Base+0x122c>
   30954:	mov	x19, x0
   30958:	ldr	x0, [sp, #24]
   3095c:	bl	b1bc <__lsan_do_recoverable_leak_check@@Base+0x1030>
   30960:	lsl	x0, x0, #3
   30964:	add	x0, x19, x0
   30968:	ldp	x19, x30, [sp], #32
   3096c:	ret
   30970:	str	x30, [sp, #-64]!
   30974:	str	x0, [sp, #40]
   30978:	str	x1, [sp, #32]
   3097c:	str	w2, [sp, #28]
   30980:	ldr	x0, [sp, #40]
   30984:	ldr	x1, [sp, #32]
   30988:	str	x1, [x0]
   3098c:	ldr	x0, [sp, #40]
   30990:	ldr	w1, [sp, #28]
   30994:	str	w1, [x0, #8]
   30998:	ldr	x0, [sp, #40]
   3099c:	add	x0, x0, #0x10
   309a0:	bl	312d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x36c8>
   309a4:	ldr	x0, [sp, #40]
   309a8:	mov	w1, #0x1                   	// #1
   309ac:	strb	w1, [x0, #72]
   309b0:	ldr	x0, [sp, #40]
   309b4:	ldr	w0, [x0, #8]
   309b8:	sxtw	x0, w0
   309bc:	str	x0, [sp, #56]
   309c0:	mov	x0, #0x20                  	// #32
   309c4:	str	x0, [sp, #48]
   309c8:	ldr	x1, [sp, #56]
   309cc:	ldr	x0, [sp, #48]
   309d0:	cmp	x1, x0
   309d4:	cset	w0, hi  // hi = pmore
   309d8:	and	w0, w0, #0xff
   309dc:	and	x0, x0, #0xff
   309e0:	cmp	x0, #0x0
   309e4:	b.eq	30a08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2df8>  // b.none
   309e8:	ldr	x4, [sp, #48]
   309ec:	ldr	x3, [sp, #56]
   309f0:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   309f4:	add	x2, x0, #0x108
   309f8:	mov	w1, #0x1c                  	// #28
   309fc:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   30a00:	add	x0, x0, #0x140
   30a04:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   30a08:	ldr	x0, [sp, #40]
   30a0c:	add	x3, x0, #0x28
   30a10:	ldr	x0, [sp, #40]
   30a14:	ldr	w0, [x0, #8]
   30a18:	sxtw	x0, w0
   30a1c:	mov	x2, x0
   30a20:	mov	w1, #0x0                   	// #0
   30a24:	mov	x0, x3
   30a28:	bl	21754 <__sanitizer_set_report_fd@@Base+0x255c>
   30a2c:	nop
   30a30:	ldr	x30, [sp], #64
   30a34:	ret
   30a38:	stp	x19, x30, [sp, #-96]!
   30a3c:	str	x0, [sp, #40]
   30a40:	str	x1, [sp, #32]
   30a44:	str	x2, [sp, #24]
   30a48:	add	x0, sp, #0x30
   30a4c:	mov	x1, #0x1000                	// #4096
   30a50:	bl	a584 <__lsan_do_recoverable_leak_check@@Base+0x3f8>
   30a54:	add	x0, sp, #0x30
   30a58:	bl	bc50 <__lsan_do_recoverable_leak_check@@Base+0x1ac4>
   30a5c:	mov	x19, x0
   30a60:	add	x0, sp, #0x30
   30a64:	bl	1f250 <__sanitizer_set_report_fd@@Base+0x58>
   30a68:	mov	x1, x0
   30a6c:	mov	x0, x19
   30a70:	bl	19c50 <__sancov_default_options@@Base+0x3ab4>
   30a74:	cmp	x0, #0x0
   30a78:	cset	w0, ne  // ne = any
   30a7c:	and	w0, w0, #0xff
   30a80:	cmp	w0, #0x0
   30a84:	b.eq	30b10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f00>  // b.none
   30a88:	add	x0, sp, #0x30
   30a8c:	bl	bc50 <__lsan_do_recoverable_leak_check@@Base+0x1ac4>
   30a90:	bl	193c4 <__sancov_default_options@@Base+0x3228>
   30a94:	str	x0, [sp, #88]
   30a98:	add	x0, sp, #0x30
   30a9c:	bl	bc50 <__lsan_do_recoverable_leak_check@@Base+0x1ac4>
   30aa0:	mov	x1, x0
   30aa4:	ldr	x0, [sp, #88]
   30aa8:	sub	x0, x0, x1
   30aac:	str	x0, [sp, #80]
   30ab0:	add	x0, sp, #0x30
   30ab4:	bl	bc50 <__lsan_do_recoverable_leak_check@@Base+0x1ac4>
   30ab8:	mov	x19, x0
   30abc:	ldr	x0, [sp, #24]
   30ac0:	sub	x0, x0, #0x1
   30ac4:	mov	x1, x0
   30ac8:	ldr	x0, [sp, #80]
   30acc:	bl	aeac <__lsan_do_recoverable_leak_check@@Base+0xd20>
   30ad0:	mov	x2, x0
   30ad4:	mov	x1, x19
   30ad8:	ldr	x0, [sp, #32]
   30adc:	bl	21ccc <__sanitizer_set_report_fd@@Base+0x2ad4>
   30ae0:	ldr	x0, [sp, #32]
   30ae4:	bl	21bac <__sanitizer_set_report_fd@@Base+0x29b4>
   30ae8:	mov	x1, x0
   30aec:	ldr	x0, [sp, #24]
   30af0:	sub	x0, x0, x1
   30af4:	sub	x0, x0, #0x1
   30af8:	mov	x2, x0
   30afc:	ldr	x1, [sp, #40]
   30b00:	ldr	x0, [sp, #32]
   30b04:	bl	21ccc <__sanitizer_set_report_fd@@Base+0x2ad4>
   30b08:	mov	w19, #0x1                   	// #1
   30b0c:	b	30b14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f04>
   30b10:	mov	w19, #0x0                   	// #0
   30b14:	add	x0, sp, #0x30
   30b18:	bl	aab4 <__lsan_do_recoverable_leak_check@@Base+0x928>
   30b1c:	mov	w0, w19
   30b20:	ldp	x19, x30, [sp], #96
   30b24:	ret
   30b28:	stp	x19, x30, [sp, #-96]!
   30b2c:	str	x0, [sp, #24]
   30b30:	str	x1, [sp, #16]
   30b34:	ldr	x0, [sp, #16]
   30b38:	ldrb	w0, [x0]
   30b3c:	cmp	w0, #0x0
   30b40:	b.eq	30c8c <__sanitizer_get_module_and_offset_for_pc@@Base+0x307c>  // b.none
   30b44:	add	x0, sp, #0x40
   30b48:	mov	x1, #0x1000                	// #4096
   30b4c:	bl	a584 <__lsan_do_recoverable_leak_check@@Base+0x3f8>
   30b50:	ldr	x0, [sp, #16]
   30b54:	bl	233ec <__sanitizer_set_report_fd@@Base+0x41f4>
   30b58:	and	w0, w0, #0xff
   30b5c:	eor	w0, w0, #0x1
   30b60:	and	w0, w0, #0xff
   30b64:	cmp	w0, #0x0
   30b68:	b.eq	30bc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2fb0>  // b.none
   30b6c:	ldr	x0, [sp, #16]
   30b70:	bl	277bc <__sanitizer_set_report_fd@@Base+0x85c4>
   30b74:	and	w0, w0, #0xff
   30b78:	eor	w0, w0, #0x1
   30b7c:	and	w0, w0, #0xff
   30b80:	cmp	w0, #0x0
   30b84:	b.eq	30bc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2fb0>  // b.none
   30b88:	add	x0, sp, #0x40
   30b8c:	bl	bc50 <__lsan_do_recoverable_leak_check@@Base+0x1ac4>
   30b90:	mov	x19, x0
   30b94:	add	x0, sp, #0x40
   30b98:	bl	1f250 <__sanitizer_set_report_fd@@Base+0x58>
   30b9c:	mov	x2, x0
   30ba0:	mov	x1, x19
   30ba4:	ldr	x0, [sp, #16]
   30ba8:	bl	30a38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e28>
   30bac:	and	w0, w0, #0xff
   30bb0:	cmp	w0, #0x0
   30bb4:	b.eq	30bc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2fb0>  // b.none
   30bb8:	mov	w0, #0x1                   	// #1
   30bbc:	b	30bc4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2fb4>
   30bc0:	mov	w0, #0x0                   	// #0
   30bc4:	cmp	w0, #0x0
   30bc8:	b.eq	30bd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2fc8>  // b.none
   30bcc:	add	x0, sp, #0x40
   30bd0:	bl	bc50 <__lsan_do_recoverable_leak_check@@Base+0x1ac4>
   30bd4:	str	x0, [sp, #16]
   30bd8:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
   30bdc:	cmp	w0, #0x0
   30be0:	cset	w0, ne  // ne = any
   30be4:	and	w0, w0, #0xff
   30be8:	cmp	w0, #0x0
   30bec:	b.eq	30c10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3000>  // b.none
   30bf0:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   30bf4:	ldr	x0, [x0, #4008]
   30bf8:	ldr	x0, [x0]
   30bfc:	ldr	x2, [sp, #16]
   30c00:	mov	x1, x0
   30c04:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   30c08:	add	x0, x0, #0x188
   30c0c:	bl	2a350 <OnPrint@@Base+0x3a8>
   30c10:	add	x2, sp, #0x28
   30c14:	add	x1, sp, #0x30
   30c18:	add	x0, sp, #0x38
   30c1c:	mov	x5, #0x0                   	// #0
   30c20:	mov	x4, #0x4000000             	// #67108864
   30c24:	mov	x3, x2
   30c28:	mov	x2, x1
   30c2c:	mov	x1, x0
   30c30:	ldr	x0, [sp, #16]
   30c34:	bl	1ec3c <__sanitizer_cov_pcs_init@@Base+0x3ba0>
   30c38:	and	w0, w0, #0xff
   30c3c:	eor	w0, w0, #0x1
   30c40:	and	w0, w0, #0xff
   30c44:	cmp	w0, #0x0
   30c48:	b.eq	30c70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3060>  // b.none
   30c4c:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   30c50:	ldr	x0, [x0, #4008]
   30c54:	ldr	x0, [x0]
   30c58:	ldr	x2, [sp, #16]
   30c5c:	mov	x1, x0
   30c60:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   30c64:	add	x0, x0, #0x1b0
   30c68:	bl	2a350 <OnPrint@@Base+0x3a8>
   30c6c:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   30c70:	ldr	x0, [sp, #56]
   30c74:	mov	x1, x0
   30c78:	ldr	x0, [sp, #24]
   30c7c:	bl	30e04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x31f4>
   30c80:	add	x0, sp, #0x40
   30c84:	bl	aab4 <__lsan_do_recoverable_leak_check@@Base+0x928>
   30c88:	b	30c90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3080>
   30c8c:	nop
   30c90:	ldp	x19, x30, [sp], #96
   30c94:	ret
   30c98:	str	x30, [sp, #-64]!
   30c9c:	str	x0, [sp, #40]
   30ca0:	str	x1, [sp, #32]
   30ca4:	str	x2, [sp, #24]
   30ca8:	str	x3, [sp, #16]
   30cac:	ldr	x0, [sp, #40]
   30cb0:	strb	wzr, [x0, #72]
   30cb4:	ldr	x1, [sp, #24]
   30cb8:	ldr	x0, [sp, #40]
   30cbc:	bl	31104 <__sanitizer_get_module_and_offset_for_pc@@Base+0x34f4>
   30cc0:	and	w0, w0, #0xff
   30cc4:	eor	w0, w0, #0x1
   30cc8:	and	w0, w0, #0xff
   30ccc:	cmp	w0, #0x0
   30cd0:	b.eq	30cdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x30cc>  // b.none
   30cd4:	mov	w0, #0x0                   	// #0
   30cd8:	b	30d8c <__sanitizer_get_module_and_offset_for_pc@@Base+0x317c>
   30cdc:	str	xzr, [sp, #56]
   30ce0:	ldr	x0, [sp, #40]
   30ce4:	add	x0, x0, #0x10
   30ce8:	bl	312f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x36e8>
   30cec:	mov	x1, x0
   30cf0:	ldr	x0, [sp, #56]
   30cf4:	cmp	x0, x1
   30cf8:	cset	w0, cc  // cc = lo, ul, last
   30cfc:	and	w0, w0, #0xff
   30d00:	cmp	w0, #0x0
   30d04:	b.eq	30d88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3178>  // b.none
   30d08:	ldr	x0, [sp, #40]
   30d0c:	add	x0, x0, #0x10
   30d10:	ldr	x1, [sp, #56]
   30d14:	bl	31310 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3700>
   30d18:	str	x0, [sp, #48]
   30d1c:	ldr	x0, [sp, #48]
   30d20:	ldr	x0, [x0]
   30d24:	ldr	x1, [sp, #24]
   30d28:	bl	21950 <__sanitizer_set_report_fd@@Base+0x2758>
   30d2c:	cmp	w0, #0x0
   30d30:	b.ne	30d58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3148>  // b.any
   30d34:	ldr	x0, [sp, #48]
   30d38:	ldr	x0, [x0, #8]
   30d3c:	ldr	x1, [sp, #32]
   30d40:	bl	19950 <__sancov_default_options@@Base+0x37b4>
   30d44:	and	w0, w0, #0xff
   30d48:	cmp	w0, #0x0
   30d4c:	b.eq	30d58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3148>  // b.none
   30d50:	mov	w0, #0x1                   	// #1
   30d54:	b	30d5c <__sanitizer_get_module_and_offset_for_pc@@Base+0x314c>
   30d58:	mov	w0, #0x0                   	// #0
   30d5c:	cmp	w0, #0x0
   30d60:	b.eq	30d78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3168>  // b.none
   30d64:	ldr	x0, [sp, #16]
   30d68:	ldr	x1, [sp, #48]
   30d6c:	str	x1, [x0]
   30d70:	mov	w0, #0x1                   	// #1
   30d74:	b	30d8c <__sanitizer_get_module_and_offset_for_pc@@Base+0x317c>
   30d78:	ldr	x0, [sp, #56]
   30d7c:	add	x0, x0, #0x1
   30d80:	str	x0, [sp, #56]
   30d84:	b	30ce0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x30d0>
   30d88:	mov	w0, #0x0                   	// #0
   30d8c:	ldr	x30, [sp], #64
   30d90:	ret
   30d94:	sub	sp, sp, #0x10
   30d98:	str	x0, [sp, #8]
   30d9c:	str	x1, [sp]
   30da0:	ldr	x0, [sp, #8]
   30da4:	cmp	x0, #0x0
   30da8:	b.eq	30de0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x31d0>  // b.none
   30dac:	ldr	x0, [sp, #8]
   30db0:	ldrb	w1, [x0]
   30db4:	ldr	x0, [sp]
   30db8:	ldrb	w0, [x0]
   30dbc:	cmp	w1, w0
   30dc0:	b.ne	30de0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x31d0>  // b.any
   30dc4:	ldr	x0, [sp, #8]
   30dc8:	add	x0, x0, #0x1
   30dcc:	str	x0, [sp, #8]
   30dd0:	ldr	x0, [sp]
   30dd4:	add	x0, x0, #0x1
   30dd8:	str	x0, [sp]
   30ddc:	b	30da0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3190>
   30de0:	ldr	x0, [sp]
   30de4:	ldrb	w0, [x0]
   30de8:	cmp	w0, #0x0
   30dec:	b.ne	30df8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x31e8>  // b.any
   30df0:	ldr	x0, [sp, #8]
   30df4:	b	30dfc <__sanitizer_get_module_and_offset_for_pc@@Base+0x31ec>
   30df8:	mov	x0, #0x0                   	// #0
   30dfc:	add	sp, sp, #0x10
   30e00:	ret
   30e04:	str	x30, [sp, #-128]!
   30e08:	str	x0, [sp, #24]
   30e0c:	str	x1, [sp, #16]
   30e10:	ldr	x0, [sp, #24]
   30e14:	ldrb	w0, [x0, #72]
   30e18:	and	x0, x0, #0xff
   30e1c:	str	x0, [sp, #88]
   30e20:	str	xzr, [sp, #80]
   30e24:	ldr	x1, [sp, #88]
   30e28:	ldr	x0, [sp, #80]
   30e2c:	cmp	x1, x0
   30e30:	cset	w0, eq  // eq = none
   30e34:	and	w0, w0, #0xff
   30e38:	and	x0, x0, #0xff
   30e3c:	cmp	x0, #0x0
   30e40:	b.eq	30e64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3254>  // b.none
   30e44:	ldr	x4, [sp, #80]
   30e48:	ldr	x3, [sp, #88]
   30e4c:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   30e50:	add	x2, x0, #0x1e0
   30e54:	mov	w1, #0x6a                  	// #106
   30e58:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   30e5c:	add	x0, x0, #0x140
   30e60:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   30e64:	ldr	x0, [sp, #16]
   30e68:	str	x0, [sp, #120]
   30e6c:	ldr	x0, [sp, #120]
   30e70:	cmp	x0, #0x0
   30e74:	b.eq	310dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x34cc>  // b.none
   30e78:	ldr	x0, [sp, #120]
   30e7c:	ldrb	w0, [x0]
   30e80:	cmp	w0, #0x20
   30e84:	b.eq	30e98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3288>  // b.none
   30e88:	ldr	x0, [sp, #120]
   30e8c:	ldrb	w0, [x0]
   30e90:	cmp	w0, #0x9
   30e94:	b.ne	30ea8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3298>  // b.any
   30e98:	ldr	x0, [sp, #120]
   30e9c:	add	x0, x0, #0x1
   30ea0:	str	x0, [sp, #120]
   30ea4:	b	30e78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3268>
   30ea8:	mov	w1, #0xa                   	// #10
   30eac:	ldr	x0, [sp, #120]
   30eb0:	bl	21a8c <__sanitizer_set_report_fd@@Base+0x2894>
   30eb4:	str	x0, [sp, #112]
   30eb8:	ldr	x0, [sp, #112]
   30ebc:	cmp	x0, #0x0
   30ec0:	b.ne	30edc <__sanitizer_get_module_and_offset_for_pc@@Base+0x32cc>  // b.any
   30ec4:	ldr	x0, [sp, #120]
   30ec8:	bl	21bac <__sanitizer_set_report_fd@@Base+0x29b4>
   30ecc:	mov	x1, x0
   30ed0:	ldr	x0, [sp, #120]
   30ed4:	add	x0, x0, x1
   30ed8:	str	x0, [sp, #112]
   30edc:	ldr	x1, [sp, #120]
   30ee0:	ldr	x0, [sp, #112]
   30ee4:	cmp	x1, x0
   30ee8:	b.eq	310b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x34a8>  // b.none
   30eec:	ldr	x0, [sp, #120]
   30ef0:	ldrb	w0, [x0]
   30ef4:	cmp	w0, #0x23
   30ef8:	b.eq	310b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x34a8>  // b.none
   30efc:	ldr	x0, [sp, #112]
   30f00:	str	x0, [sp, #104]
   30f04:	ldr	x1, [sp, #120]
   30f08:	ldr	x0, [sp, #104]
   30f0c:	cmp	x1, x0
   30f10:	b.eq	30f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3350>  // b.none
   30f14:	ldr	x0, [sp, #104]
   30f18:	sub	x0, x0, #0x1
   30f1c:	ldrb	w0, [x0]
   30f20:	cmp	w0, #0x20
   30f24:	b.eq	30f50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3340>  // b.none
   30f28:	ldr	x0, [sp, #104]
   30f2c:	sub	x0, x0, #0x1
   30f30:	ldrb	w0, [x0]
   30f34:	cmp	w0, #0x9
   30f38:	b.eq	30f50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3340>  // b.none
   30f3c:	ldr	x0, [sp, #104]
   30f40:	sub	x0, x0, #0x1
   30f44:	ldrb	w0, [x0]
   30f48:	cmp	w0, #0xd
   30f4c:	b.ne	30f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3350>  // b.any
   30f50:	ldr	x0, [sp, #104]
   30f54:	sub	x0, x0, #0x1
   30f58:	str	x0, [sp, #104]
   30f5c:	b	30f04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x32f4>
   30f60:	str	wzr, [sp, #100]
   30f64:	ldr	x0, [sp, #24]
   30f68:	ldr	w0, [x0, #8]
   30f6c:	ldr	w1, [sp, #100]
   30f70:	cmp	w1, w0
   30f74:	b.ge	30fe4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x33d4>  // b.tcont
   30f78:	ldr	x0, [sp, #24]
   30f7c:	ldr	x1, [x0]
   30f80:	ldrsw	x0, [sp, #100]
   30f84:	lsl	x0, x0, #3
   30f88:	add	x0, x1, x0
   30f8c:	ldr	x0, [x0]
   30f90:	mov	x1, x0
   30f94:	ldr	x0, [sp, #120]
   30f98:	bl	30d94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3184>
   30f9c:	str	x0, [sp, #72]
   30fa0:	ldr	x0, [sp, #72]
   30fa4:	cmp	x0, #0x0
   30fa8:	b.eq	30fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x33c4>  // b.none
   30fac:	ldr	x0, [sp, #72]
   30fb0:	ldrb	w0, [x0]
   30fb4:	cmp	w0, #0x3a
   30fb8:	b.ne	30fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x33c4>  // b.any
   30fbc:	ldr	x0, [sp, #72]
   30fc0:	add	x0, x0, #0x1
   30fc4:	str	x0, [sp, #72]
   30fc8:	ldr	x0, [sp, #72]
   30fcc:	str	x0, [sp, #120]
   30fd0:	b	30fe4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x33d4>
   30fd4:	ldr	w0, [sp, #100]
   30fd8:	add	w0, w0, #0x1
   30fdc:	str	w0, [sp, #100]
   30fe0:	b	30f64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3354>
   30fe4:	ldr	x0, [sp, #24]
   30fe8:	ldr	w0, [x0, #8]
   30fec:	ldr	w1, [sp, #100]
   30ff0:	cmp	w1, w0
   30ff4:	b.ne	31018 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3408>  // b.any
   30ff8:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   30ffc:	ldr	x0, [x0, #4008]
   31000:	ldr	x0, [x0]
   31004:	mov	x1, x0
   31008:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   3100c:	add	x0, x0, #0x1f8
   31010:	bl	2a350 <OnPrint@@Base+0x3a8>
   31014:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   31018:	add	x0, sp, #0x28
   3101c:	bl	312b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x36a4>
   31020:	ldr	x0, [sp, #24]
   31024:	ldr	x1, [x0]
   31028:	ldrsw	x0, [sp, #100]
   3102c:	lsl	x0, x0, #3
   31030:	add	x0, x1, x0
   31034:	ldr	x0, [x0]
   31038:	str	x0, [sp, #40]
   3103c:	ldr	x1, [sp, #104]
   31040:	ldr	x0, [sp, #120]
   31044:	sub	x0, x1, x0
   31048:	add	x0, x0, #0x1
   3104c:	mov	x2, #0x0                   	// #0
   31050:	mov	x1, #0x0                   	// #0
   31054:	bl	16598 <__sancov_default_options@@Base+0x3fc>
   31058:	str	x0, [sp, #48]
   3105c:	ldr	x3, [sp, #48]
   31060:	ldr	x1, [sp, #104]
   31064:	ldr	x0, [sp, #120]
   31068:	sub	x0, x1, x0
   3106c:	mov	x2, x0
   31070:	ldr	x1, [sp, #120]
   31074:	mov	x0, x3
   31078:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
   3107c:	ldr	x0, [sp, #48]
   31080:	ldr	x2, [sp, #104]
   31084:	ldr	x1, [sp, #120]
   31088:	sub	x1, x2, x1
   3108c:	add	x0, x0, x1
   31090:	strb	wzr, [x0]
   31094:	ldr	x0, [sp, #24]
   31098:	add	x0, x0, #0x10
   3109c:	add	x1, sp, #0x28
   310a0:	bl	3138c <__sanitizer_get_module_and_offset_for_pc@@Base+0x377c>
   310a4:	ldr	x1, [sp, #24]
   310a8:	ldrsw	x0, [sp, #100]
   310ac:	add	x0, x1, x0
   310b0:	mov	w1, #0x1                   	// #1
   310b4:	strb	w1, [x0, #40]
   310b8:	ldr	x0, [sp, #112]
   310bc:	ldrb	w0, [x0]
   310c0:	cmp	w0, #0x0
   310c4:	b.eq	310d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x34c8>  // b.none
   310c8:	ldr	x0, [sp, #112]
   310cc:	add	x0, x0, #0x1
   310d0:	str	x0, [sp, #120]
   310d4:	b	30e6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x325c>
   310d8:	nop
   310dc:	nop
   310e0:	ldr	x30, [sp], #128
   310e4:	ret
   310e8:	str	x30, [sp, #-32]!
   310ec:	str	x0, [sp, #24]
   310f0:	ldr	x0, [sp, #24]
   310f4:	add	x0, x0, #0x10
   310f8:	bl	312f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x36e8>
   310fc:	ldr	x30, [sp], #32
   31100:	ret
   31104:	str	x30, [sp, #-48]!
   31108:	str	x0, [sp, #24]
   3110c:	str	x1, [sp, #16]
   31110:	str	wzr, [sp, #44]
   31114:	ldr	x0, [sp, #24]
   31118:	ldr	w0, [x0, #8]
   3111c:	ldr	w1, [sp, #44]
   31120:	cmp	w1, w0
   31124:	b.ge	31184 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3574>  // b.tcont
   31128:	ldr	x0, [sp, #24]
   3112c:	ldr	x1, [x0]
   31130:	ldrsw	x0, [sp, #44]
   31134:	lsl	x0, x0, #3
   31138:	add	x0, x1, x0
   3113c:	ldr	x0, [x0]
   31140:	mov	x1, x0
   31144:	ldr	x0, [sp, #16]
   31148:	bl	21950 <__sanitizer_set_report_fd@@Base+0x2758>
   3114c:	cmp	w0, #0x0
   31150:	cset	w0, eq  // eq = none
   31154:	and	w0, w0, #0xff
   31158:	cmp	w0, #0x0
   3115c:	b.eq	31174 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3564>  // b.none
   31160:	ldr	x1, [sp, #24]
   31164:	ldrsw	x0, [sp, #44]
   31168:	add	x0, x1, x0
   3116c:	ldrb	w0, [x0, #40]
   31170:	b	31188 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3578>
   31174:	ldr	w0, [sp, #44]
   31178:	add	w0, w0, #0x1
   3117c:	str	w0, [sp, #44]
   31180:	b	31114 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3504>
   31184:	mov	w0, #0x0                   	// #0
   31188:	ldr	x30, [sp], #48
   3118c:	ret
   31190:	str	x30, [sp, #-48]!
   31194:	str	x0, [sp, #24]
   31198:	str	x1, [sp, #16]
   3119c:	ldr	x0, [sp, #16]
   311a0:	str	x0, [sp, #40]
   311a4:	ldr	x0, [sp, #24]
   311a8:	add	x0, x0, #0x10
   311ac:	bl	312f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x36e8>
   311b0:	str	x0, [sp, #32]
   311b4:	ldr	x1, [sp, #40]
   311b8:	ldr	x0, [sp, #32]
   311bc:	cmp	x1, x0
   311c0:	cset	w0, cs  // cs = hs, nlast
   311c4:	and	w0, w0, #0xff
   311c8:	and	x0, x0, #0xff
   311cc:	cmp	x0, #0x0
   311d0:	b.eq	311f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35e4>  // b.none
   311d4:	ldr	x4, [sp, #32]
   311d8:	ldr	x3, [sp, #40]
   311dc:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   311e0:	add	x2, x0, #0x220
   311e4:	mov	w1, #0x9e                  	// #158
   311e8:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   311ec:	add	x0, x0, #0x140
   311f0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   311f4:	ldr	x0, [sp, #24]
   311f8:	add	x0, x0, #0x10
   311fc:	ldr	x1, [sp, #16]
   31200:	bl	31470 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3860>
   31204:	ldr	x30, [sp], #48
   31208:	ret
   3120c:	stp	x19, x30, [sp, #-48]!
   31210:	str	x0, [sp, #24]
   31214:	str	x1, [sp, #16]
   31218:	str	xzr, [sp, #40]
   3121c:	ldr	x0, [sp, #24]
   31220:	add	x0, x0, #0x10
   31224:	bl	312f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x36e8>
   31228:	mov	x1, x0
   3122c:	ldr	x0, [sp, #40]
   31230:	cmp	x0, x1
   31234:	cset	w0, cc  // cc = lo, ul, last
   31238:	and	w0, w0, #0xff
   3123c:	cmp	w0, #0x0
   31240:	b.eq	312a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3698>  // b.none
   31244:	ldr	x0, [sp, #24]
   31248:	add	x0, x0, #0x10
   3124c:	ldr	x1, [sp, #40]
   31250:	bl	31310 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3700>
   31254:	add	x0, x0, #0x10
   31258:	bl	b1a0 <__lsan_do_recoverable_leak_check@@Base+0x1014>
   3125c:	cmp	w0, #0x0
   31260:	cset	w0, ne  // ne = any
   31264:	and	w0, w0, #0xff
   31268:	cmp	w0, #0x0
   3126c:	b.eq	31298 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3688>  // b.none
   31270:	ldr	x19, [sp, #16]
   31274:	ldr	x0, [sp, #24]
   31278:	add	x0, x0, #0x10
   3127c:	ldr	x1, [sp, #40]
   31280:	bl	31310 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3700>
   31284:	str	x0, [sp, #32]
   31288:	add	x0, sp, #0x20
   3128c:	mov	x1, x0
   31290:	mov	x0, x19
   31294:	bl	314ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x38dc>
   31298:	ldr	x0, [sp, #40]
   3129c:	add	x0, x0, #0x1
   312a0:	str	x0, [sp, #40]
   312a4:	b	3121c <__sanitizer_get_module_and_offset_for_pc@@Base+0x360c>
   312a8:	nop
   312ac:	ldp	x19, x30, [sp], #48
   312b0:	ret
   312b4:	str	x30, [sp, #-32]!
   312b8:	str	x0, [sp, #24]
   312bc:	mov	x2, #0x20                  	// #32
   312c0:	mov	w1, #0x0                   	// #0
   312c4:	ldr	x0, [sp, #24]
   312c8:	bl	21754 <__sanitizer_set_report_fd@@Base+0x255c>
   312cc:	nop
   312d0:	ldr	x30, [sp], #32
   312d4:	ret
   312d8:	str	x30, [sp, #-32]!
   312dc:	str	x0, [sp, #24]
   312e0:	ldr	x0, [sp, #24]
   312e4:	mov	x1, #0x1                   	// #1
   312e8:	bl	315d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x39c0>
   312ec:	nop
   312f0:	ldr	x30, [sp], #32
   312f4:	ret
   312f8:	sub	sp, sp, #0x10
   312fc:	str	x0, [sp, #8]
   31300:	ldr	x0, [sp, #8]
   31304:	ldr	x0, [x0, #16]
   31308:	add	sp, sp, #0x10
   3130c:	ret
   31310:	str	x30, [sp, #-48]!
   31314:	str	x0, [sp, #24]
   31318:	str	x1, [sp, #16]
   3131c:	ldr	x0, [sp, #16]
   31320:	str	x0, [sp, #40]
   31324:	ldr	x0, [sp, #24]
   31328:	ldr	x0, [x0, #16]
   3132c:	str	x0, [sp, #32]
   31330:	ldr	x1, [sp, #40]
   31334:	ldr	x0, [sp, #32]
   31338:	cmp	x1, x0
   3133c:	cset	w0, cs  // cs = hs, nlast
   31340:	and	w0, w0, #0xff
   31344:	and	x0, x0, #0xff
   31348:	cmp	x0, #0x0
   3134c:	b.eq	31370 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3760>  // b.none
   31350:	ldr	x4, [sp, #32]
   31354:	ldr	x3, [sp, #40]
   31358:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   3135c:	add	x2, x0, #0x248
   31360:	mov	w1, #0x1b6                 	// #438
   31364:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   31368:	add	x0, x0, #0xfe0
   3136c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   31370:	ldr	x0, [sp, #24]
   31374:	ldr	x1, [x0]
   31378:	ldr	x0, [sp, #16]
   3137c:	lsl	x0, x0, #5
   31380:	add	x0, x1, x0
   31384:	ldr	x30, [sp], #48
   31388:	ret
   3138c:	stp	x19, x30, [sp, #-64]!
   31390:	str	x0, [sp, #24]
   31394:	str	x1, [sp, #16]
   31398:	ldr	x0, [sp, #24]
   3139c:	ldr	x0, [x0, #16]
   313a0:	str	x0, [sp, #56]
   313a4:	ldr	x0, [sp, #24]
   313a8:	bl	3160c <__sanitizer_get_module_and_offset_for_pc@@Base+0x39fc>
   313ac:	str	x0, [sp, #48]
   313b0:	ldr	x1, [sp, #56]
   313b4:	ldr	x0, [sp, #48]
   313b8:	cmp	x1, x0
   313bc:	cset	w0, hi  // hi = pmore
   313c0:	and	w0, w0, #0xff
   313c4:	and	x0, x0, #0xff
   313c8:	cmp	x0, #0x0
   313cc:	b.eq	313f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x37e0>  // b.none
   313d0:	ldr	x4, [sp, #48]
   313d4:	ldr	x3, [sp, #56]
   313d8:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   313dc:	add	x2, x0, #0x260
   313e0:	mov	w1, #0x1be                 	// #446
   313e4:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   313e8:	add	x0, x0, #0xfe0
   313ec:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   313f0:	ldr	x0, [sp, #24]
   313f4:	ldr	x19, [x0, #16]
   313f8:	ldr	x0, [sp, #24]
   313fc:	bl	3160c <__sanitizer_get_module_and_offset_for_pc@@Base+0x39fc>
   31400:	cmp	x19, x0
   31404:	cset	w0, eq  // eq = none
   31408:	and	w0, w0, #0xff
   3140c:	cmp	w0, #0x0
   31410:	b.eq	31434 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3824>  // b.none
   31414:	ldr	x0, [sp, #24]
   31418:	ldr	x0, [x0, #16]
   3141c:	add	x0, x0, #0x1
   31420:	bl	a3cc <__lsan_do_recoverable_leak_check@@Base+0x240>
   31424:	str	x0, [sp, #40]
   31428:	ldr	x1, [sp, #40]
   3142c:	ldr	x0, [sp, #24]
   31430:	bl	31628 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a18>
   31434:	ldr	x0, [sp, #24]
   31438:	ldr	x1, [x0]
   3143c:	ldr	x0, [sp, #24]
   31440:	ldr	x0, [x0, #16]
   31444:	add	x3, x0, #0x1
   31448:	ldr	x2, [sp, #24]
   3144c:	str	x3, [x2, #16]
   31450:	lsl	x0, x0, #5
   31454:	add	x0, x1, x0
   31458:	mov	x2, #0x20                  	// #32
   3145c:	ldr	x1, [sp, #16]
   31460:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
   31464:	nop
   31468:	ldp	x19, x30, [sp], #64
   3146c:	ret
   31470:	str	x30, [sp, #-48]!
   31474:	str	x0, [sp, #24]
   31478:	str	x1, [sp, #16]
   3147c:	ldr	x0, [sp, #16]
   31480:	str	x0, [sp, #40]
   31484:	ldr	x0, [sp, #24]
   31488:	ldr	x0, [x0, #16]
   3148c:	str	x0, [sp, #32]
   31490:	ldr	x1, [sp, #40]
   31494:	ldr	x0, [sp, #32]
   31498:	cmp	x1, x0
   3149c:	cset	w0, cs  // cs = hs, nlast
   314a0:	and	w0, w0, #0xff
   314a4:	and	x0, x0, #0xff
   314a8:	cmp	x0, #0x0
   314ac:	b.eq	314d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x38c0>  // b.none
   314b0:	ldr	x4, [sp, #32]
   314b4:	ldr	x3, [sp, #40]
   314b8:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   314bc:	add	x2, x0, #0x248
   314c0:	mov	w1, #0x1ba                 	// #442
   314c4:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   314c8:	add	x0, x0, #0xfe0
   314cc:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   314d0:	ldr	x0, [sp, #24]
   314d4:	ldr	x1, [x0]
   314d8:	ldr	x0, [sp, #16]
   314dc:	lsl	x0, x0, #5
   314e0:	add	x0, x1, x0
   314e4:	ldr	x30, [sp], #48
   314e8:	ret
   314ec:	stp	x19, x30, [sp, #-64]!
   314f0:	str	x0, [sp, #24]
   314f4:	str	x1, [sp, #16]
   314f8:	ldr	x0, [sp, #24]
   314fc:	ldr	x0, [x0, #16]
   31500:	str	x0, [sp, #56]
   31504:	ldr	x0, [sp, #24]
   31508:	bl	cd28 <__lsan_do_recoverable_leak_check@@Base+0x2b9c>
   3150c:	str	x0, [sp, #48]
   31510:	ldr	x1, [sp, #56]
   31514:	ldr	x0, [sp, #48]
   31518:	cmp	x1, x0
   3151c:	cset	w0, hi  // hi = pmore
   31520:	and	w0, w0, #0xff
   31524:	and	x0, x0, #0xff
   31528:	cmp	x0, #0x0
   3152c:	b.eq	31550 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3940>  // b.none
   31530:	ldr	x4, [sp, #48]
   31534:	ldr	x3, [sp, #56]
   31538:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   3153c:	add	x2, x0, #0x260
   31540:	mov	w1, #0x1be                 	// #446
   31544:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   31548:	add	x0, x0, #0xfe0
   3154c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   31550:	ldr	x0, [sp, #24]
   31554:	ldr	x19, [x0, #16]
   31558:	ldr	x0, [sp, #24]
   3155c:	bl	cd28 <__lsan_do_recoverable_leak_check@@Base+0x2b9c>
   31560:	cmp	x19, x0
   31564:	cset	w0, eq  // eq = none
   31568:	and	w0, w0, #0xff
   3156c:	cmp	w0, #0x0
   31570:	b.eq	31594 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3984>  // b.none
   31574:	ldr	x0, [sp, #24]
   31578:	ldr	x0, [x0, #16]
   3157c:	add	x0, x0, #0x1
   31580:	bl	a3cc <__lsan_do_recoverable_leak_check@@Base+0x240>
   31584:	str	x0, [sp, #40]
   31588:	ldr	x1, [sp, #40]
   3158c:	ldr	x0, [sp, #24]
   31590:	bl	cd44 <__lsan_do_recoverable_leak_check@@Base+0x2bb8>
   31594:	ldr	x0, [sp, #24]
   31598:	ldr	x1, [x0]
   3159c:	ldr	x0, [sp, #24]
   315a0:	ldr	x0, [x0, #16]
   315a4:	add	x3, x0, #0x1
   315a8:	ldr	x2, [sp, #24]
   315ac:	str	x3, [x2, #16]
   315b0:	lsl	x0, x0, #3
   315b4:	add	x0, x1, x0
   315b8:	mov	x2, #0x8                   	// #8
   315bc:	ldr	x1, [sp, #16]
   315c0:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
   315c4:	nop
   315c8:	ldp	x19, x30, [sp], #64
   315cc:	ret
   315d0:	str	x30, [sp, #-32]!
   315d4:	str	x0, [sp, #24]
   315d8:	str	x1, [sp, #16]
   315dc:	ldr	x0, [sp, #24]
   315e0:	str	xzr, [x0, #8]
   315e4:	ldr	x0, [sp, #24]
   315e8:	str	xzr, [x0, #16]
   315ec:	ldr	x0, [sp, #24]
   315f0:	str	xzr, [x0]
   315f4:	ldr	x1, [sp, #16]
   315f8:	ldr	x0, [sp, #24]
   315fc:	bl	31768 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b58>
   31600:	nop
   31604:	ldr	x30, [sp], #32
   31608:	ret
   3160c:	sub	sp, sp, #0x10
   31610:	str	x0, [sp, #8]
   31614:	ldr	x0, [sp, #8]
   31618:	ldr	x0, [x0, #8]
   3161c:	lsr	x0, x0, #5
   31620:	add	sp, sp, #0x10
   31624:	ret
   31628:	stp	x19, x30, [sp, #-80]!
   3162c:	str	x0, [sp, #24]
   31630:	str	x1, [sp, #16]
   31634:	ldr	x0, [sp, #16]
   31638:	str	x0, [sp, #72]
   3163c:	str	xzr, [sp, #64]
   31640:	ldr	x1, [sp, #72]
   31644:	ldr	x0, [sp, #64]
   31648:	cmp	x1, x0
   3164c:	cset	w0, ls  // ls = plast
   31650:	and	w0, w0, #0xff
   31654:	and	x0, x0, #0xff
   31658:	cmp	x0, #0x0
   3165c:	b.eq	31680 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a70>  // b.none
   31660:	ldr	x4, [sp, #64]
   31664:	ldr	x3, [sp, #72]
   31668:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   3166c:	add	x2, x0, #0x280
   31670:	mov	w1, #0x1fc                 	// #508
   31674:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   31678:	add	x0, x0, #0xfe0
   3167c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   31680:	ldr	x0, [sp, #24]
   31684:	ldr	x0, [x0, #16]
   31688:	str	x0, [sp, #56]
   3168c:	ldr	x0, [sp, #16]
   31690:	str	x0, [sp, #48]
   31694:	ldr	x1, [sp, #56]
   31698:	ldr	x0, [sp, #48]
   3169c:	cmp	x1, x0
   316a0:	cset	w0, hi  // hi = pmore
   316a4:	and	w0, w0, #0xff
   316a8:	and	x0, x0, #0xff
   316ac:	cmp	x0, #0x0
   316b0:	b.eq	316d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ac4>  // b.none
   316b4:	ldr	x4, [sp, #48]
   316b8:	ldr	x3, [sp, #56]
   316bc:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   316c0:	add	x2, x0, #0x2a0
   316c4:	mov	w1, #0x1fd                 	// #509
   316c8:	adrp	x0, 58000 <__asan_backtrace_vector_release@@Base+0x9340>
   316cc:	add	x0, x0, #0xfe0
   316d0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   316d4:	ldr	x0, [sp, #16]
   316d8:	lsl	x19, x0, #5
   316dc:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
   316e0:	mov	x1, x0
   316e4:	mov	x0, x19
   316e8:	bl	a518 <__lsan_do_recoverable_leak_check@@Base+0x38c>
   316ec:	str	x0, [sp, #40]
   316f0:	mov	w2, #0x0                   	// #0
   316f4:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   316f8:	add	x1, x0, #0x2c0
   316fc:	ldr	x0, [sp, #40]
   31700:	bl	26a50 <__sanitizer_set_report_fd@@Base+0x7858>
   31704:	str	x0, [sp, #32]
   31708:	ldr	x0, [sp, #24]
   3170c:	ldr	x1, [x0]
   31710:	ldr	x0, [sp, #24]
   31714:	ldr	x0, [x0, #16]
   31718:	lsl	x0, x0, #5
   3171c:	mov	x2, x0
   31720:	ldr	x0, [sp, #32]
   31724:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
   31728:	ldr	x0, [sp, #24]
   3172c:	ldr	x2, [x0]
   31730:	ldr	x0, [sp, #24]
   31734:	ldr	x0, [x0, #8]
   31738:	mov	x1, x0
   3173c:	mov	x0, x2
   31740:	bl	26af4 <__sanitizer_set_report_fd@@Base+0x78fc>
   31744:	ldr	x0, [sp, #24]
   31748:	ldr	x1, [sp, #32]
   3174c:	str	x1, [x0]
   31750:	ldr	x0, [sp, #24]
   31754:	ldr	x1, [sp, #40]
   31758:	str	x1, [x0, #8]
   3175c:	nop
   31760:	ldp	x19, x30, [sp], #80
   31764:	ret
   31768:	str	x30, [sp, #-32]!
   3176c:	str	x0, [sp, #24]
   31770:	str	x1, [sp, #16]
   31774:	ldr	x0, [sp, #24]
   31778:	bl	3160c <__sanitizer_get_module_and_offset_for_pc@@Base+0x39fc>
   3177c:	mov	x1, x0
   31780:	ldr	x0, [sp, #16]
   31784:	cmp	x0, x1
   31788:	cset	w0, hi  // hi = pmore
   3178c:	and	w0, w0, #0xff
   31790:	cmp	w0, #0x0
   31794:	b.eq	317a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b94>  // b.none
   31798:	ldr	x1, [sp, #16]
   3179c:	ldr	x0, [sp, #24]
   317a0:	bl	31628 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a18>
   317a4:	nop
   317a8:	ldr	x30, [sp], #32
   317ac:	ret
   317b0:	str	x30, [sp, #-32]!
   317b4:	str	x0, [sp, #24]
   317b8:	mov	x2, #0x40                  	// #64
   317bc:	mov	w1, #0x0                   	// #0
   317c0:	ldr	x0, [sp, #24]
   317c4:	bl	21754 <__sanitizer_set_report_fd@@Base+0x255c>
   317c8:	ldr	x0, [sp, #24]
   317cc:	mov	x1, #0xffffffffffffffff    	// #-1
   317d0:	str	x1, [x0, #40]
   317d4:	nop
   317d8:	ldr	x30, [sp], #32
   317dc:	ret
   317e0:	str	x30, [sp, #-32]!
   317e4:	str	x0, [sp, #24]
   317e8:	ldr	x0, [sp, #24]
   317ec:	ldr	x0, [x0, #8]
   317f0:	mov	x1, #0x0                   	// #0
   317f4:	bl	167e8 <__sancov_default_options@@Base+0x64c>
   317f8:	ldr	x0, [sp, #24]
   317fc:	ldr	x0, [x0, #32]
   31800:	mov	x1, #0x0                   	// #0
   31804:	bl	167e8 <__sancov_default_options@@Base+0x64c>
   31808:	ldr	x0, [sp, #24]
   3180c:	ldr	x0, [x0, #48]
   31810:	mov	x1, #0x0                   	// #0
   31814:	bl	167e8 <__sancov_default_options@@Base+0x64c>
   31818:	mov	x2, #0x40                  	// #64
   3181c:	mov	w1, #0x0                   	// #0
   31820:	ldr	x0, [sp, #24]
   31824:	bl	21754 <__sanitizer_set_report_fd@@Base+0x255c>
   31828:	ldr	x0, [sp, #24]
   3182c:	mov	x1, #0xffffffffffffffff    	// #-1
   31830:	str	x1, [x0, #40]
   31834:	nop
   31838:	ldr	x30, [sp], #32
   3183c:	ret
   31840:	str	x30, [sp, #-48]!
   31844:	str	x0, [sp, #40]
   31848:	str	x1, [sp, #32]
   3184c:	str	x2, [sp, #24]
   31850:	str	w3, [sp, #20]
   31854:	ldr	x0, [sp, #32]
   31858:	bl	218f8 <__sanitizer_set_report_fd@@Base+0x2700>
   3185c:	mov	x1, x0
   31860:	ldr	x0, [sp, #40]
   31864:	str	x1, [x0, #8]
   31868:	ldr	x0, [sp, #40]
   3186c:	ldr	x1, [sp, #24]
   31870:	str	x1, [x0, #16]
   31874:	ldr	x0, [sp, #40]
   31878:	ldr	w1, [sp, #20]
   3187c:	str	w1, [x0, #24]
   31880:	nop
   31884:	ldr	x30, [sp], #48
   31888:	ret
   3188c:	str	x30, [sp, #-32]!
   31890:	str	x0, [sp, #24]
   31894:	ldr	x0, [sp, #24]
   31898:	str	xzr, [x0]
   3189c:	ldr	x0, [sp, #24]
   318a0:	add	x0, x0, #0x8
   318a4:	bl	317b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ba0>
   318a8:	nop
   318ac:	ldr	x30, [sp], #32
   318b0:	ret
   318b4:	stp	x19, x30, [sp, #-48]!
   318b8:	str	x0, [sp, #24]
   318bc:	mov	x2, #0x0                   	// #0
   318c0:	mov	x1, #0x0                   	// #0
   318c4:	mov	x0, #0x48                  	// #72
   318c8:	bl	16598 <__sancov_default_options@@Base+0x3fc>
   318cc:	str	x0, [sp, #40]
   318d0:	ldr	x0, [sp, #40]
   318d4:	mov	x1, x0
   318d8:	mov	x0, #0x48                  	// #72
   318dc:	bl	a908 <__lsan_do_recoverable_leak_check@@Base+0x77c>
   318e0:	mov	x19, x0
   318e4:	mov	x0, x19
   318e8:	bl	3188c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c7c>
   318ec:	str	x19, [sp, #32]
   318f0:	ldr	x0, [sp, #32]
   318f4:	ldr	x1, [sp, #24]
   318f8:	str	x1, [x0, #8]
   318fc:	ldr	x0, [sp, #32]
   31900:	ldp	x19, x30, [sp], #48
   31904:	ret
   31908:	str	x30, [sp, #-32]!
   3190c:	str	x0, [sp, #24]
   31910:	ldr	x0, [sp, #24]
   31914:	add	x0, x0, #0x8
   31918:	bl	317e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3bd0>
   3191c:	ldr	x0, [sp, #24]
   31920:	ldr	x0, [x0]
   31924:	cmp	x0, #0x0
   31928:	b.eq	31938 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d28>  // b.none
   3192c:	ldr	x0, [sp, #24]
   31930:	ldr	x0, [x0]
   31934:	bl	31908 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3cf8>
   31938:	mov	x1, #0x0                   	// #0
   3193c:	ldr	x0, [sp, #24]
   31940:	bl	167e8 <__sancov_default_options@@Base+0x64c>
   31944:	nop
   31948:	ldr	x30, [sp], #32
   3194c:	ret
   31950:	str	x30, [sp, #-32]!
   31954:	str	x0, [sp, #24]
   31958:	mov	x2, #0x40                  	// #64
   3195c:	mov	w1, #0x0                   	// #0
   31960:	ldr	x0, [sp, #24]
   31964:	bl	21754 <__sanitizer_set_report_fd@@Base+0x255c>
   31968:	nop
   3196c:	ldr	x30, [sp], #32
   31970:	ret
   31974:	str	x30, [sp, #-32]!
   31978:	str	x0, [sp, #24]
   3197c:	ldr	x0, [sp, #24]
   31980:	ldr	x0, [x0]
   31984:	mov	x1, #0x0                   	// #0
   31988:	bl	167e8 <__sancov_default_options@@Base+0x64c>
   3198c:	ldr	x0, [sp, #24]
   31990:	ldr	x0, [x0, #24]
   31994:	mov	x1, #0x0                   	// #0
   31998:	bl	167e8 <__sancov_default_options@@Base+0x64c>
   3199c:	ldr	x0, [sp, #24]
   319a0:	ldr	x0, [x0, #40]
   319a4:	mov	x1, #0x0                   	// #0
   319a8:	bl	167e8 <__sancov_default_options@@Base+0x64c>
   319ac:	mov	x2, #0x40                  	// #64
   319b0:	mov	w1, #0x0                   	// #0
   319b4:	ldr	x0, [sp, #24]
   319b8:	bl	21754 <__sanitizer_set_report_fd@@Base+0x255c>
   319bc:	nop
   319c0:	ldr	x30, [sp], #32
   319c4:	ret
   319c8:	sub	sp, sp, #0x10
   319cc:	str	x0, [sp, #8]
   319d0:	ldr	x0, [sp, #8]
   319d4:	strb	wzr, [x0, #104]
   319d8:	nop
   319dc:	add	sp, sp, #0x10
   319e0:	ret
   319e4:	str	x30, [sp, #-64]!
   319e8:	str	x0, [sp, #40]
   319ec:	str	x1, [sp, #32]
   319f0:	str	x2, [sp, #24]
   319f4:	ldr	x0, [sp, #40]
   319f8:	ldr	x0, [x0, #224]
   319fc:	cmp	x0, #0x0
   31a00:	b.ne	31a1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e0c>  // b.any
   31a04:	ldr	x0, [sp, #40]
   31a08:	ldr	x0, [x0, #232]
   31a0c:	cmp	x0, #0x0
   31a10:	b.ne	31a1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e0c>  // b.any
   31a14:	mov	w0, #0x1                   	// #1
   31a18:	b	31a20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e10>
   31a1c:	mov	w0, #0x0                   	// #0
   31a20:	and	x0, x0, #0xff
   31a24:	str	x0, [sp, #56]
   31a28:	str	xzr, [sp, #48]
   31a2c:	ldr	x1, [sp, #56]
   31a30:	ldr	x0, [sp, #48]
   31a34:	cmp	x1, x0
   31a38:	cset	w0, eq  // eq = none
   31a3c:	and	w0, w0, #0xff
   31a40:	and	x0, x0, #0xff
   31a44:	cmp	x0, #0x0
   31a48:	b.eq	31a6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e5c>  // b.none
   31a4c:	ldr	x4, [sp, #48]
   31a50:	ldr	x3, [sp, #56]
   31a54:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   31a58:	add	x2, x0, #0x450
   31a5c:	mov	w1, #0x4e                  	// #78
   31a60:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   31a64:	add	x0, x0, #0x480
   31a68:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   31a6c:	ldr	x0, [sp, #40]
   31a70:	ldr	x1, [sp, #32]
   31a74:	str	x1, [x0, #224]
   31a78:	ldr	x0, [sp, #40]
   31a7c:	ldr	x1, [sp, #24]
   31a80:	str	x1, [x0, #232]
   31a84:	nop
   31a88:	ldr	x30, [sp], #64
   31a8c:	ret
   31a90:	str	x30, [sp, #-48]!
   31a94:	str	x0, [sp, #24]
   31a98:	str	x1, [sp, #16]
   31a9c:	ldr	x0, [sp, #24]
   31aa0:	ldr	x0, [x0, #32]
   31aa4:	bl	23b74 <__sanitizer_set_report_fd@@Base+0x497c>
   31aa8:	ldr	x0, [sp, #24]
   31aac:	ldr	x0, [x0, #24]
   31ab0:	cmp	x0, #0x0
   31ab4:	b.eq	31ad8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ec8>  // b.none
   31ab8:	ldr	x0, [sp, #24]
   31abc:	ldr	x0, [x0, #24]
   31ac0:	ldr	x1, [sp, #16]
   31ac4:	bl	21950 <__sanitizer_set_report_fd@@Base+0x2758>
   31ac8:	cmp	w0, #0x0
   31acc:	b.ne	31ad8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ec8>  // b.any
   31ad0:	mov	w0, #0x1                   	// #1
   31ad4:	b	31adc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ecc>
   31ad8:	mov	w0, #0x0                   	// #0
   31adc:	cmp	w0, #0x0
   31ae0:	b.eq	31af0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ee0>  // b.none
   31ae4:	ldr	x0, [sp, #24]
   31ae8:	ldr	x0, [x0, #24]
   31aec:	b	31bac <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f9c>
   31af0:	str	xzr, [sp, #40]
   31af4:	ldr	x0, [sp, #24]
   31af8:	bl	31d68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4158>
   31afc:	mov	x1, x0
   31b00:	ldr	x0, [sp, #40]
   31b04:	cmp	x0, x1
   31b08:	cset	w0, cc  // cc = lo, ul, last
   31b0c:	and	w0, w0, #0xff
   31b10:	cmp	w0, #0x0
   31b14:	b.eq	31b78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f68>  // b.none
   31b18:	ldr	x0, [sp, #24]
   31b1c:	ldr	x1, [sp, #40]
   31b20:	bl	31d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4170>
   31b24:	ldr	x0, [x0]
   31b28:	ldr	x1, [sp, #16]
   31b2c:	bl	21950 <__sanitizer_set_report_fd@@Base+0x2758>
   31b30:	cmp	w0, #0x0
   31b34:	cset	w0, eq  // eq = none
   31b38:	and	w0, w0, #0xff
   31b3c:	cmp	w0, #0x0
   31b40:	b.eq	31b68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f58>  // b.none
   31b44:	ldr	x0, [sp, #24]
   31b48:	ldr	x1, [sp, #40]
   31b4c:	bl	31d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4170>
   31b50:	ldr	x1, [x0]
   31b54:	ldr	x0, [sp, #24]
   31b58:	str	x1, [x0, #24]
   31b5c:	ldr	x0, [sp, #24]
   31b60:	ldr	x0, [x0, #24]
   31b64:	b	31bac <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f9c>
   31b68:	ldr	x0, [sp, #40]
   31b6c:	add	x0, x0, #0x1
   31b70:	str	x0, [sp, #40]
   31b74:	b	31af4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ee4>
   31b78:	ldr	x0, [sp, #16]
   31b7c:	bl	218f8 <__sanitizer_set_report_fd@@Base+0x2700>
   31b80:	mov	x1, x0
   31b84:	ldr	x0, [sp, #24]
   31b88:	str	x1, [x0, #24]
   31b8c:	ldr	x2, [sp, #24]
   31b90:	ldr	x0, [sp, #24]
   31b94:	add	x0, x0, #0x18
   31b98:	mov	x1, x0
   31b9c:	mov	x0, x2
   31ba0:	bl	31dfc <__sanitizer_get_module_and_offset_for_pc@@Base+0x41ec>
   31ba4:	ldr	x0, [sp, #24]
   31ba8:	ldr	x0, [x0, #24]
   31bac:	ldr	x30, [sp], #48
   31bb0:	ret
   31bb4:	stp	x19, x30, [sp, #-32]!
   31bb8:	str	x0, [sp, #24]
   31bbc:	mov	x19, x1
   31bc0:	ldr	x2, [sp, #24]
   31bc4:	ldr	x0, [sp, #24]
   31bc8:	add	x0, x0, #0x70
   31bcc:	mov	x1, x0
   31bd0:	mov	x0, x2
   31bd4:	bl	31cc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x40b0>
   31bd8:	ldr	x0, [sp, #24]
   31bdc:	add	x0, x0, #0x28
   31be0:	bl	d4f0 <__lsan_do_recoverable_leak_check@@Base+0x3364>
   31be4:	ldr	x0, [sp, #24]
   31be8:	add	x0, x0, #0x48
   31bec:	bl	d4f0 <__lsan_do_recoverable_leak_check@@Base+0x3364>
   31bf0:	ldr	x0, [sp, #24]
   31bf4:	strb	wzr, [x0, #104]
   31bf8:	ldr	x0, [sp, #24]
   31bfc:	add	x0, x0, #0x70
   31c00:	bl	239c8 <__sanitizer_set_report_fd@@Base+0x47d0>
   31c04:	ldr	x0, [sp, #24]
   31c08:	add	x0, x0, #0xc8
   31c0c:	mov	x2, x0
   31c10:	mov	x3, x19
   31c14:	ldp	x0, x1, [x3]
   31c18:	stp	x0, x1, [x2]
   31c1c:	ldr	x0, [x3, #16]
   31c20:	str	x0, [x2, #16]
   31c24:	ldr	x0, [sp, #24]
   31c28:	str	xzr, [x0, #224]
   31c2c:	ldr	x0, [sp, #24]
   31c30:	str	xzr, [x0, #232]
   31c34:	nop
   31c38:	ldp	x19, x30, [sp], #32
   31c3c:	ret
   31c40:	str	x30, [sp, #-32]!
   31c44:	str	x0, [sp, #24]
   31c48:	str	x1, [sp, #16]
   31c4c:	ldr	x0, [sp, #24]
   31c50:	ldr	x1, [sp, #16]
   31c54:	str	x1, [x0]
   31c58:	ldr	x0, [sp, #24]
   31c5c:	ldr	x0, [x0]
   31c60:	ldr	x0, [x0, #224]
   31c64:	cmp	x0, #0x0
   31c68:	b.eq	31c7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x406c>  // b.none
   31c6c:	ldr	x0, [sp, #24]
   31c70:	ldr	x0, [x0]
   31c74:	ldr	x0, [x0, #224]
   31c78:	blr	x0
   31c7c:	nop
   31c80:	ldr	x30, [sp], #32
   31c84:	ret
   31c88:	str	x30, [sp, #-32]!
   31c8c:	str	x0, [sp, #24]
   31c90:	ldr	x0, [sp, #24]
   31c94:	ldr	x0, [x0]
   31c98:	ldr	x0, [x0, #232]
   31c9c:	cmp	x0, #0x0
   31ca0:	b.eq	31cb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x40a4>  // b.none
   31ca4:	ldr	x0, [sp, #24]
   31ca8:	ldr	x0, [x0]
   31cac:	ldr	x0, [x0, #232]
   31cb0:	blr	x0
   31cb4:	nop
   31cb8:	ldr	x30, [sp], #32
   31cbc:	ret
   31cc0:	str	x30, [sp, #-32]!
   31cc4:	str	x0, [sp, #24]
   31cc8:	str	x1, [sp, #16]
   31ccc:	ldr	x0, [sp, #24]
   31cd0:	bl	31d00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x40f0>
   31cd4:	ldr	x0, [sp, #24]
   31cd8:	str	xzr, [x0, #24]
   31cdc:	ldr	x0, [sp, #24]
   31ce0:	ldr	x1, [sp, #16]
   31ce4:	str	x1, [x0, #32]
   31ce8:	ldr	x0, [sp, #24]
   31cec:	mov	x1, #0x3e8                 	// #1000
   31cf0:	bl	31d20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4110>
   31cf4:	nop
   31cf8:	ldr	x30, [sp], #32
   31cfc:	ret
   31d00:	str	x30, [sp, #-32]!
   31d04:	str	x0, [sp, #24]
   31d08:	ldr	x0, [sp, #24]
   31d0c:	mov	x1, #0x1                   	// #1
   31d10:	bl	31ee0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x42d0>
   31d14:	nop
   31d18:	ldr	x30, [sp], #32
   31d1c:	ret
   31d20:	str	x30, [sp, #-32]!
   31d24:	str	x0, [sp, #24]
   31d28:	str	x1, [sp, #16]
   31d2c:	ldr	x0, [sp, #24]
   31d30:	bl	31f1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x430c>
   31d34:	mov	x1, x0
   31d38:	ldr	x0, [sp, #16]
   31d3c:	cmp	x0, x1
   31d40:	cset	w0, hi  // hi = pmore
   31d44:	and	w0, w0, #0xff
   31d48:	cmp	w0, #0x0
   31d4c:	b.eq	31d5c <__sanitizer_get_module_and_offset_for_pc@@Base+0x414c>  // b.none
   31d50:	ldr	x1, [sp, #16]
   31d54:	ldr	x0, [sp, #24]
   31d58:	bl	31f38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4328>
   31d5c:	nop
   31d60:	ldr	x30, [sp], #32
   31d64:	ret
   31d68:	sub	sp, sp, #0x10
   31d6c:	str	x0, [sp, #8]
   31d70:	ldr	x0, [sp, #8]
   31d74:	ldr	x0, [x0, #16]
   31d78:	add	sp, sp, #0x10
   31d7c:	ret
   31d80:	str	x30, [sp, #-48]!
   31d84:	str	x0, [sp, #24]
   31d88:	str	x1, [sp, #16]
   31d8c:	ldr	x0, [sp, #16]
   31d90:	str	x0, [sp, #40]
   31d94:	ldr	x0, [sp, #24]
   31d98:	ldr	x0, [x0, #16]
   31d9c:	str	x0, [sp, #32]
   31da0:	ldr	x1, [sp, #40]
   31da4:	ldr	x0, [sp, #32]
   31da8:	cmp	x1, x0
   31dac:	cset	w0, cs  // cs = hs, nlast
   31db0:	and	w0, w0, #0xff
   31db4:	and	x0, x0, #0xff
   31db8:	cmp	x0, #0x0
   31dbc:	b.eq	31de0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41d0>  // b.none
   31dc0:	ldr	x4, [sp, #32]
   31dc4:	ldr	x3, [sp, #40]
   31dc8:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   31dcc:	add	x2, x0, #0x4c8
   31dd0:	mov	w1, #0x1b6                 	// #438
   31dd4:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   31dd8:	add	x0, x0, #0x328
   31ddc:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   31de0:	ldr	x0, [sp, #24]
   31de4:	ldr	x1, [x0]
   31de8:	ldr	x0, [sp, #16]
   31dec:	lsl	x0, x0, #3
   31df0:	add	x0, x1, x0
   31df4:	ldr	x30, [sp], #48
   31df8:	ret
   31dfc:	stp	x19, x30, [sp, #-64]!
   31e00:	str	x0, [sp, #24]
   31e04:	str	x1, [sp, #16]
   31e08:	ldr	x0, [sp, #24]
   31e0c:	ldr	x0, [x0, #16]
   31e10:	str	x0, [sp, #56]
   31e14:	ldr	x0, [sp, #24]
   31e18:	bl	31f1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x430c>
   31e1c:	str	x0, [sp, #48]
   31e20:	ldr	x1, [sp, #56]
   31e24:	ldr	x0, [sp, #48]
   31e28:	cmp	x1, x0
   31e2c:	cset	w0, hi  // hi = pmore
   31e30:	and	w0, w0, #0xff
   31e34:	and	x0, x0, #0xff
   31e38:	cmp	x0, #0x0
   31e3c:	b.eq	31e60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4250>  // b.none
   31e40:	ldr	x4, [sp, #48]
   31e44:	ldr	x3, [sp, #56]
   31e48:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   31e4c:	add	x2, x0, #0x4e0
   31e50:	mov	w1, #0x1be                 	// #446
   31e54:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   31e58:	add	x0, x0, #0x328
   31e5c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   31e60:	ldr	x0, [sp, #24]
   31e64:	ldr	x19, [x0, #16]
   31e68:	ldr	x0, [sp, #24]
   31e6c:	bl	31f1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x430c>
   31e70:	cmp	x19, x0
   31e74:	cset	w0, eq  // eq = none
   31e78:	and	w0, w0, #0xff
   31e7c:	cmp	w0, #0x0
   31e80:	b.eq	31ea4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4294>  // b.none
   31e84:	ldr	x0, [sp, #24]
   31e88:	ldr	x0, [x0, #16]
   31e8c:	add	x0, x0, #0x1
   31e90:	bl	a3cc <__lsan_do_recoverable_leak_check@@Base+0x240>
   31e94:	str	x0, [sp, #40]
   31e98:	ldr	x1, [sp, #40]
   31e9c:	ldr	x0, [sp, #24]
   31ea0:	bl	31f38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4328>
   31ea4:	ldr	x0, [sp, #24]
   31ea8:	ldr	x1, [x0]
   31eac:	ldr	x0, [sp, #24]
   31eb0:	ldr	x0, [x0, #16]
   31eb4:	add	x3, x0, #0x1
   31eb8:	ldr	x2, [sp, #24]
   31ebc:	str	x3, [x2, #16]
   31ec0:	lsl	x0, x0, #3
   31ec4:	add	x0, x1, x0
   31ec8:	mov	x2, #0x8                   	// #8
   31ecc:	ldr	x1, [sp, #16]
   31ed0:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
   31ed4:	nop
   31ed8:	ldp	x19, x30, [sp], #64
   31edc:	ret
   31ee0:	str	x30, [sp, #-32]!
   31ee4:	str	x0, [sp, #24]
   31ee8:	str	x1, [sp, #16]
   31eec:	ldr	x0, [sp, #24]
   31ef0:	str	xzr, [x0, #8]
   31ef4:	ldr	x0, [sp, #24]
   31ef8:	str	xzr, [x0, #16]
   31efc:	ldr	x0, [sp, #24]
   31f00:	str	xzr, [x0]
   31f04:	ldr	x1, [sp, #16]
   31f08:	ldr	x0, [sp, #24]
   31f0c:	bl	31d20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4110>
   31f10:	nop
   31f14:	ldr	x30, [sp], #32
   31f18:	ret
   31f1c:	sub	sp, sp, #0x10
   31f20:	str	x0, [sp, #8]
   31f24:	ldr	x0, [sp, #8]
   31f28:	ldr	x0, [x0, #8]
   31f2c:	lsr	x0, x0, #3
   31f30:	add	sp, sp, #0x10
   31f34:	ret
   31f38:	stp	x19, x30, [sp, #-80]!
   31f3c:	str	x0, [sp, #24]
   31f40:	str	x1, [sp, #16]
   31f44:	ldr	x0, [sp, #16]
   31f48:	str	x0, [sp, #72]
   31f4c:	str	xzr, [sp, #64]
   31f50:	ldr	x1, [sp, #72]
   31f54:	ldr	x0, [sp, #64]
   31f58:	cmp	x1, x0
   31f5c:	cset	w0, ls  // ls = plast
   31f60:	and	w0, w0, #0xff
   31f64:	and	x0, x0, #0xff
   31f68:	cmp	x0, #0x0
   31f6c:	b.eq	31f90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4380>  // b.none
   31f70:	ldr	x4, [sp, #64]
   31f74:	ldr	x3, [sp, #72]
   31f78:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   31f7c:	add	x2, x0, #0x500
   31f80:	mov	w1, #0x1fc                 	// #508
   31f84:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   31f88:	add	x0, x0, #0x328
   31f8c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   31f90:	ldr	x0, [sp, #24]
   31f94:	ldr	x0, [x0, #16]
   31f98:	str	x0, [sp, #56]
   31f9c:	ldr	x0, [sp, #16]
   31fa0:	str	x0, [sp, #48]
   31fa4:	ldr	x1, [sp, #56]
   31fa8:	ldr	x0, [sp, #48]
   31fac:	cmp	x1, x0
   31fb0:	cset	w0, hi  // hi = pmore
   31fb4:	and	w0, w0, #0xff
   31fb8:	and	x0, x0, #0xff
   31fbc:	cmp	x0, #0x0
   31fc0:	b.eq	31fe4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43d4>  // b.none
   31fc4:	ldr	x4, [sp, #48]
   31fc8:	ldr	x3, [sp, #56]
   31fcc:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   31fd0:	add	x2, x0, #0x520
   31fd4:	mov	w1, #0x1fd                 	// #509
   31fd8:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   31fdc:	add	x0, x0, #0x328
   31fe0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   31fe4:	ldr	x0, [sp, #16]
   31fe8:	lsl	x19, x0, #3
   31fec:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
   31ff0:	mov	x1, x0
   31ff4:	mov	x0, x19
   31ff8:	bl	a518 <__lsan_do_recoverable_leak_check@@Base+0x38c>
   31ffc:	str	x0, [sp, #40]
   32000:	mov	w2, #0x0                   	// #0
   32004:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   32008:	add	x1, x0, #0x540
   3200c:	ldr	x0, [sp, #40]
   32010:	bl	26a50 <__sanitizer_set_report_fd@@Base+0x7858>
   32014:	str	x0, [sp, #32]
   32018:	ldr	x0, [sp, #24]
   3201c:	ldr	x1, [x0]
   32020:	ldr	x0, [sp, #24]
   32024:	ldr	x0, [x0, #16]
   32028:	lsl	x0, x0, #3
   3202c:	mov	x2, x0
   32030:	ldr	x0, [sp, #32]
   32034:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
   32038:	ldr	x0, [sp, #24]
   3203c:	ldr	x2, [x0]
   32040:	ldr	x0, [sp, #24]
   32044:	ldr	x0, [x0, #8]
   32048:	mov	x1, x0
   3204c:	mov	x0, x2
   32050:	bl	26af4 <__sanitizer_set_report_fd@@Base+0x78fc>
   32054:	ldr	x0, [sp, #24]
   32058:	ldr	x1, [sp, #32]
   3205c:	str	x1, [x0]
   32060:	ldr	x0, [sp, #24]
   32064:	ldr	x1, [sp, #40]
   32068:	str	x1, [x0, #8]
   3206c:	nop
   32070:	ldp	x19, x30, [sp], #80
   32074:	ret
   32078:	str	x30, [sp, #-80]!
   3207c:	str	x0, [sp, #40]
   32080:	str	x1, [sp, #32]
   32084:	str	x2, [sp, #24]
   32088:	ldr	x0, [sp, #24]
   3208c:	str	x0, [sp, #72]
   32090:	ldr	x0, [sp, #72]
   32094:	ldr	x1, [x0, #8]
   32098:	ldr	x0, [sp, #32]
   3209c:	add	x0, x1, x0
   320a0:	add	x0, x0, #0x1
   320a4:	str	x0, [sp, #64]
   320a8:	ldr	x0, [sp, #72]
   320ac:	ldr	x0, [x0, #16]
   320b0:	ldr	x1, [sp, #64]
   320b4:	cmp	x1, x0
   320b8:	b.ls	32150 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4540>  // b.plast
   320bc:	ldr	x0, [sp, #72]
   320c0:	ldr	x0, [x0, #16]
   320c4:	lsl	x1, x0, #1
   320c8:	ldr	x0, [sp, #72]
   320cc:	str	x1, [x0, #16]
   320d0:	ldr	x0, [sp, #72]
   320d4:	ldr	x0, [x0, #16]
   320d8:	ldr	x1, [sp, #64]
   320dc:	cmp	x1, x0
   320e0:	b.ls	320f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x44e0>  // b.plast
   320e4:	ldr	x0, [sp, #72]
   320e8:	ldr	x1, [sp, #64]
   320ec:	str	x1, [x0, #16]
   320f0:	ldr	x0, [sp, #72]
   320f4:	ldr	x0, [x0, #16]
   320f8:	mov	x2, #0x0                   	// #0
   320fc:	mov	x1, #0x0                   	// #0
   32100:	bl	16598 <__sancov_default_options@@Base+0x3fc>
   32104:	str	x0, [sp, #56]
   32108:	ldr	x0, [sp, #72]
   3210c:	ldr	x0, [x0]
   32110:	cmp	x0, #0x0
   32114:	b.eq	32144 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4534>  // b.none
   32118:	ldr	x0, [sp, #72]
   3211c:	ldr	x1, [x0]
   32120:	ldr	x0, [sp, #72]
   32124:	ldr	x0, [x0, #8]
   32128:	mov	x2, x0
   3212c:	ldr	x0, [sp, #56]
   32130:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
   32134:	ldr	x0, [sp, #72]
   32138:	ldr	x0, [x0]
   3213c:	mov	x1, #0x0                   	// #0
   32140:	bl	167e8 <__sancov_default_options@@Base+0x64c>
   32144:	ldr	x0, [sp, #72]
   32148:	ldr	x1, [sp, #56]
   3214c:	str	x1, [x0]
   32150:	ldr	x0, [sp, #72]
   32154:	ldr	x1, [x0]
   32158:	ldr	x0, [sp, #72]
   3215c:	ldr	x0, [x0, #8]
   32160:	add	x0, x1, x0
   32164:	ldr	x2, [sp, #32]
   32168:	ldr	x1, [sp, #40]
   3216c:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
   32170:	ldr	x0, [sp, #72]
   32174:	ldr	x1, [x0]
   32178:	ldr	x0, [sp, #72]
   3217c:	ldr	x2, [x0, #8]
   32180:	ldr	x0, [sp, #32]
   32184:	add	x0, x2, x0
   32188:	add	x0, x1, x0
   3218c:	strb	wzr, [x0]
   32190:	ldr	x0, [sp, #72]
   32194:	ldr	x1, [x0, #8]
   32198:	ldr	x0, [sp, #32]
   3219c:	add	x1, x1, x0
   321a0:	ldr	x0, [sp, #72]
   321a4:	str	x1, [x0, #8]
   321a8:	nop
   321ac:	ldr	x30, [sp], #80
   321b0:	ret
   321b4:	str	x30, [sp, #-64]!
   321b8:	str	x0, [sp, #24]
   321bc:	str	xzr, [sp, #32]
   321c0:	str	xzr, [sp, #40]
   321c4:	str	xzr, [sp, #48]
   321c8:	add	x0, sp, #0x20
   321cc:	mov	x3, x0
   321d0:	adrp	x0, 32000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43f0>
   321d4:	add	x2, x0, #0x78
   321d8:	mov	w1, #0x3                   	// #3
   321dc:	ldr	x0, [sp, #24]
   321e0:	bl	6f50 <__asan_cplus_demangle_v3_callback@plt>
   321e4:	cmp	w0, #0x0
   321e8:	cset	w0, ne  // ne = any
   321ec:	and	w0, w0, #0xff
   321f0:	cmp	w0, #0x0
   321f4:	b.eq	32234 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4624>  // b.none
   321f8:	ldr	x0, [sp, #40]
   321fc:	add	x1, x0, #0x40
   32200:	ldr	x0, [sp, #48]
   32204:	cmp	x1, x0
   32208:	b.ls	32214 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4604>  // b.plast
   3220c:	ldr	x0, [sp, #32]
   32210:	b	32250 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4640>
   32214:	ldr	x0, [sp, #32]
   32218:	bl	218f8 <__sanitizer_set_report_fd@@Base+0x2700>
   3221c:	str	x0, [sp, #56]
   32220:	ldr	x0, [sp, #32]
   32224:	mov	x1, #0x0                   	// #0
   32228:	bl	167e8 <__sancov_default_options@@Base+0x64c>
   3222c:	ldr	x0, [sp, #56]
   32230:	b	32250 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4640>
   32234:	ldr	x0, [sp, #32]
   32238:	cmp	x0, #0x0
   3223c:	b.eq	3224c <__sanitizer_get_module_and_offset_for_pc@@Base+0x463c>  // b.none
   32240:	ldr	x0, [sp, #32]
   32244:	mov	x1, #0x0                   	// #0
   32248:	bl	167e8 <__sancov_default_options@@Base+0x64c>
   3224c:	mov	x0, #0x0                   	// #0
   32250:	ldr	x30, [sp], #64
   32254:	ret
   32258:	str	x30, [sp, #-96]!
   3225c:	str	x0, [sp, #24]
   32260:	str	x1, [sp, #16]
   32264:	ldr	x0, [sp, #24]
   32268:	ldr	x0, [x0, #8]
   3226c:	str	x0, [sp, #88]
   32270:	str	xzr, [sp, #80]
   32274:	ldr	x1, [sp, #88]
   32278:	ldr	x0, [sp, #80]
   3227c:	cmp	x1, x0
   32280:	cset	w0, eq  // eq = none
   32284:	and	w0, w0, #0xff
   32288:	and	x0, x0, #0xff
   3228c:	cmp	x0, #0x0
   32290:	b.eq	322b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x46a4>  // b.none
   32294:	ldr	x4, [sp, #80]
   32298:	ldr	x3, [sp, #88]
   3229c:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   322a0:	add	x2, x0, #0x680
   322a4:	mov	w1, #0x5c                  	// #92
   322a8:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   322ac:	add	x0, x0, #0x690
   322b0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   322b4:	ldr	x0, [sp, #24]
   322b8:	ldr	x0, [x0, #16]
   322bc:	cmp	x0, #0x0
   322c0:	b.eq	32328 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4718>  // b.none
   322c4:	ldr	x0, [sp, #16]
   322c8:	bl	318b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ca4>
   322cc:	str	x0, [sp, #72]
   322d0:	ldr	x0, [sp, #72]
   322d4:	add	x0, x0, #0x8
   322d8:	str	x0, [sp, #64]
   322dc:	ldr	x0, [sp, #24]
   322e0:	ldr	x0, [x0]
   322e4:	ldr	x1, [x0, #16]
   322e8:	ldr	x0, [sp, #24]
   322ec:	ldr	x0, [x0]
   322f0:	ldr	x2, [x0, #24]
   322f4:	ldr	x0, [sp, #24]
   322f8:	ldr	x0, [x0]
   322fc:	ldr	w0, [x0, #32]
   32300:	mov	w3, w0
   32304:	ldr	x0, [sp, #64]
   32308:	bl	31840 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c30>
   3230c:	ldr	x0, [sp, #24]
   32310:	ldr	x0, [x0, #8]
   32314:	ldr	x1, [sp, #72]
   32318:	str	x1, [x0]
   3231c:	ldr	x0, [sp, #24]
   32320:	ldr	x1, [sp, #72]
   32324:	str	x1, [x0, #8]
   32328:	ldr	x0, [sp, #16]
   3232c:	str	x0, [sp, #56]
   32330:	ldr	x0, [sp, #24]
   32334:	ldr	x0, [x0]
   32338:	ldr	x0, [x0, #8]
   3233c:	str	x0, [sp, #48]
   32340:	ldr	x1, [sp, #56]
   32344:	ldr	x0, [sp, #48]
   32348:	cmp	x1, x0
   3234c:	cset	w0, ne  // ne = any
   32350:	and	w0, w0, #0xff
   32354:	and	x0, x0, #0xff
   32358:	cmp	x0, #0x0
   3235c:	b.eq	32380 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4770>  // b.none
   32360:	ldr	x4, [sp, #48]
   32364:	ldr	x3, [sp, #56]
   32368:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   3236c:	add	x2, x0, #0x6e0
   32370:	mov	w1, #0x65                  	// #101
   32374:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   32378:	add	x0, x0, #0x690
   3237c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   32380:	ldr	x0, [sp, #16]
   32384:	str	x0, [sp, #40]
   32388:	ldr	x0, [sp, #24]
   3238c:	ldr	x0, [x0, #8]
   32390:	ldr	x0, [x0, #8]
   32394:	str	x0, [sp, #32]
   32398:	ldr	x1, [sp, #40]
   3239c:	ldr	x0, [sp, #32]
   323a0:	cmp	x1, x0
   323a4:	cset	w0, ne  // ne = any
   323a8:	and	w0, w0, #0xff
   323ac:	and	x0, x0, #0xff
   323b0:	cmp	x0, #0x0
   323b4:	b.eq	323d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x47c8>  // b.none
   323b8:	ldr	x4, [sp, #32]
   323bc:	ldr	x3, [sp, #40]
   323c0:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   323c4:	add	x2, x0, #0x708
   323c8:	mov	w1, #0x66                  	// #102
   323cc:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   323d0:	add	x0, x0, #0x690
   323d4:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   323d8:	ldr	x0, [sp, #24]
   323dc:	ldr	x0, [x0, #8]
   323e0:	add	x0, x0, #0x8
   323e4:	ldr	x30, [sp], #96
   323e8:	ret
   323ec:	str	x30, [sp, #-80]!
   323f0:	str	x0, [sp, #56]
   323f4:	str	x1, [sp, #48]
   323f8:	str	x2, [sp, #40]
   323fc:	str	w3, [sp, #36]
   32400:	str	x4, [sp, #24]
   32404:	ldr	x0, [sp, #56]
   32408:	str	x0, [sp, #72]
   3240c:	ldr	x0, [sp, #24]
   32410:	cmp	x0, #0x0
   32414:	b.eq	32480 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4870>  // b.none
   32418:	ldr	x1, [sp, #48]
   3241c:	ldr	x0, [sp, #72]
   32420:	bl	32258 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4648>
   32424:	str	x0, [sp, #64]
   32428:	mov	w1, #0x1                   	// #1
   3242c:	ldr	x0, [sp, #24]
   32430:	bl	326e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ad0>
   32434:	mov	x1, x0
   32438:	ldr	x0, [sp, #64]
   3243c:	str	x1, [x0, #32]
   32440:	ldr	x0, [sp, #40]
   32444:	cmp	x0, #0x0
   32448:	b.eq	32460 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4850>  // b.none
   3244c:	ldr	x0, [sp, #40]
   32450:	bl	218f8 <__sanitizer_set_report_fd@@Base+0x2700>
   32454:	mov	x1, x0
   32458:	ldr	x0, [sp, #64]
   3245c:	str	x1, [x0, #48]
   32460:	ldr	x0, [sp, #64]
   32464:	ldr	w1, [sp, #36]
   32468:	str	w1, [x0, #56]
   3246c:	ldr	x0, [sp, #72]
   32470:	ldr	x0, [x0, #16]
   32474:	add	x1, x0, #0x1
   32478:	ldr	x0, [sp, #72]
   3247c:	str	x1, [x0, #16]
   32480:	mov	w0, #0x0                   	// #0
   32484:	ldr	x30, [sp], #80
   32488:	ret
   3248c:	str	x30, [sp, #-80]!
   32490:	str	x0, [sp, #56]
   32494:	str	x1, [sp, #48]
   32498:	str	x2, [sp, #40]
   3249c:	str	x3, [sp, #32]
   324a0:	str	x4, [sp, #24]
   324a4:	ldr	x0, [sp, #56]
   324a8:	str	x0, [sp, #72]
   324ac:	ldr	x0, [sp, #40]
   324b0:	cmp	x0, #0x0
   324b4:	b.eq	324f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x48e4>  // b.none
   324b8:	ldr	x1, [sp, #48]
   324bc:	ldr	x0, [sp, #72]
   324c0:	bl	32258 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4648>
   324c4:	str	x0, [sp, #64]
   324c8:	mov	w1, #0x1                   	// #1
   324cc:	ldr	x0, [sp, #40]
   324d0:	bl	326e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ad0>
   324d4:	mov	x1, x0
   324d8:	ldr	x0, [sp, #64]
   324dc:	str	x1, [x0, #32]
   324e0:	ldr	x0, [sp, #72]
   324e4:	ldr	x0, [x0, #16]
   324e8:	add	x1, x0, #0x1
   324ec:	ldr	x0, [sp, #72]
   324f0:	str	x1, [x0, #16]
   324f4:	nop
   324f8:	ldr	x30, [sp], #80
   324fc:	ret
   32500:	str	x30, [sp, #-80]!
   32504:	str	x0, [sp, #56]
   32508:	str	x1, [sp, #48]
   3250c:	str	x2, [sp, #40]
   32510:	str	x3, [sp, #32]
   32514:	str	x4, [sp, #24]
   32518:	ldr	x0, [sp, #56]
   3251c:	str	x0, [sp, #72]
   32520:	ldr	x0, [sp, #40]
   32524:	cmp	x0, #0x0
   32528:	b.eq	32568 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4958>  // b.none
   3252c:	ldr	x0, [sp, #32]
   32530:	cmp	x0, #0x0
   32534:	b.eq	32568 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4958>  // b.none
   32538:	mov	w1, #0x1                   	// #1
   3253c:	ldr	x0, [sp, #40]
   32540:	bl	326e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ad0>
   32544:	mov	x1, x0
   32548:	ldr	x0, [sp, #72]
   3254c:	str	x1, [x0, #40]
   32550:	ldr	x0, [sp, #72]
   32554:	ldr	x1, [sp, #32]
   32558:	str	x1, [x0, #48]
   3255c:	ldr	x0, [sp, #72]
   32560:	ldr	x1, [sp, #24]
   32564:	str	x1, [x0, #56]
   32568:	nop
   3256c:	ldr	x30, [sp], #80
   32570:	ret
   32574:	sub	sp, sp, #0x20
   32578:	str	x0, [sp, #24]
   3257c:	str	x1, [sp, #16]
   32580:	str	w2, [sp, #12]
   32584:	nop
   32588:	add	sp, sp, #0x20
   3258c:	ret
   32590:	stp	x19, x30, [sp, #-48]!
   32594:	str	x0, [sp, #24]
   32598:	mov	x3, #0x0                   	// #0
   3259c:	adrp	x0, 32000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43f0>
   325a0:	add	x2, x0, #0x574
   325a4:	mov	w1, #0x0                   	// #0
   325a8:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   325ac:	add	x0, x0, #0x730
   325b0:	bl	6c10 <__asan_backtrace_create_state@plt>
   325b4:	str	x0, [sp, #40]
   325b8:	ldr	x0, [sp, #40]
   325bc:	cmp	x0, #0x0
   325c0:	b.ne	325cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x49bc>  // b.any
   325c4:	mov	x19, #0x0                   	// #0
   325c8:	b	325e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x49d8>
   325cc:	ldr	x1, [sp, #24]
   325d0:	mov	x0, #0x18                  	// #24
   325d4:	bl	a5c0 <__lsan_do_recoverable_leak_check@@Base+0x434>
   325d8:	mov	x19, x0
   325dc:	ldr	x1, [sp, #40]
   325e0:	mov	x0, x19
   325e4:	bl	32860 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c50>
   325e8:	mov	x0, x19
   325ec:	ldp	x19, x30, [sp], #48
   325f0:	ret
   325f4:	str	x30, [sp, #-80]!
   325f8:	str	x0, [sp, #40]
   325fc:	str	x1, [sp, #32]
   32600:	str	x2, [sp, #24]
   32604:	ldr	x0, [sp, #24]
   32608:	str	x0, [sp, #56]
   3260c:	ldr	x0, [sp, #24]
   32610:	str	x0, [sp, #64]
   32614:	str	xzr, [sp, #72]
   32618:	ldr	x0, [sp, #40]
   3261c:	ldr	x5, [x0, #16]
   32620:	add	x0, sp, #0x38
   32624:	mov	x4, x0
   32628:	adrp	x0, 32000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43f0>
   3262c:	add	x3, x0, #0x574
   32630:	adrp	x0, 32000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43f0>
   32634:	add	x2, x0, #0x3ec
   32638:	ldr	x1, [sp, #32]
   3263c:	mov	x0, x5
   32640:	bl	6940 <__asan_backtrace_pcinfo@plt>
   32644:	ldr	x0, [sp, #72]
   32648:	cmp	x0, #0x0
   3264c:	b.eq	32658 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a48>  // b.none
   32650:	mov	w0, #0x1                   	// #1
   32654:	b	32694 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a84>
   32658:	ldr	x0, [sp, #40]
   3265c:	ldr	x5, [x0, #16]
   32660:	add	x0, sp, #0x38
   32664:	mov	x4, x0
   32668:	adrp	x0, 32000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43f0>
   3266c:	add	x3, x0, #0x574
   32670:	adrp	x0, 32000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43f0>
   32674:	add	x2, x0, #0x48c
   32678:	ldr	x1, [sp, #32]
   3267c:	mov	x0, x5
   32680:	bl	6aa0 <__asan_backtrace_syminfo@plt>
   32684:	ldr	x0, [sp, #72]
   32688:	cmp	x0, #0x0
   3268c:	cset	w0, ne  // ne = any
   32690:	and	w0, w0, #0xff
   32694:	ldr	x30, [sp], #80
   32698:	ret
   3269c:	str	x30, [sp, #-48]!
   326a0:	str	x0, [sp, #40]
   326a4:	str	x1, [sp, #32]
   326a8:	str	x2, [sp, #24]
   326ac:	ldr	x0, [sp, #40]
   326b0:	ldr	x5, [x0, #16]
   326b4:	ldr	x4, [sp, #24]
   326b8:	adrp	x0, 32000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43f0>
   326bc:	add	x3, x0, #0x574
   326c0:	adrp	x0, 32000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43f0>
   326c4:	add	x2, x0, #0x500
   326c8:	ldr	x1, [sp, #32]
   326cc:	mov	x0, x5
   326d0:	bl	6aa0 <__asan_backtrace_syminfo@plt>
   326d4:	mov	w0, #0x1                   	// #1
   326d8:	ldr	x30, [sp], #48
   326dc:	ret
   326e0:	str	x30, [sp, #-48]!
   326e4:	str	x0, [sp, #24]
   326e8:	strb	w1, [sp, #23]
   326ec:	ldr	x0, [sp, #24]
   326f0:	bl	321b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45a4>
   326f4:	str	x0, [sp, #40]
   326f8:	ldr	x0, [sp, #40]
   326fc:	cmp	x0, #0x0
   32700:	b.eq	3270c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4afc>  // b.none
   32704:	ldr	x0, [sp, #40]
   32708:	b	32728 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b18>
   3270c:	ldrb	w0, [sp, #23]
   32710:	cmp	w0, #0x0
   32714:	b.eq	32724 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b14>  // b.none
   32718:	ldr	x0, [sp, #24]
   3271c:	bl	218f8 <__sanitizer_set_report_fd@@Base+0x2700>
   32720:	b	32728 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b18>
   32724:	mov	x0, #0x0                   	// #0
   32728:	ldr	x30, [sp], #48
   3272c:	ret
   32730:	str	x30, [sp, #-32]!
   32734:	str	x0, [sp, #24]
   32738:	str	x1, [sp, #16]
   3273c:	mov	w1, #0x0                   	// #0
   32740:	ldr	x0, [sp, #16]
   32744:	bl	326e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ad0>
   32748:	ldr	x30, [sp], #32
   3274c:	ret
   32750:	sub	sp, sp, #0x10
   32754:	str	x0, [sp, #8]
   32758:	adrp	x0, 7b000 <__asan_backtrace_vector_release@@Base+0x2c340>
   3275c:	add	x1, x0, #0xcf0
   32760:	ldr	x0, [sp, #8]
   32764:	str	x1, [x0]
   32768:	ldr	x0, [sp, #8]
   3276c:	str	xzr, [x0, #8]
   32770:	nop
   32774:	add	sp, sp, #0x10
   32778:	ret
   3277c:	str	x30, [sp, #-64]!
   32780:	str	x0, [sp, #40]
   32784:	str	x1, [sp, #32]
   32788:	str	x2, [sp, #24]
   3278c:	str	xzr, [sp, #56]
   32790:	str	xzr, [sp, #48]
   32794:	ldr	x1, [sp, #56]
   32798:	ldr	x0, [sp, #48]
   3279c:	cmp	x1, x0
   327a0:	cset	w0, eq  // eq = none
   327a4:	and	w0, w0, #0xff
   327a8:	and	x0, x0, #0xff
   327ac:	cmp	x0, #0x0
   327b0:	b.eq	327d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4bc4>  // b.none
   327b4:	ldr	x4, [sp, #48]
   327b8:	ldr	x3, [sp, #56]
   327bc:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   327c0:	add	x2, x0, #0x610
   327c4:	mov	w1, #0x33                  	// #51
   327c8:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   327cc:	add	x0, x0, #0x630
   327d0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   327d4:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   327d8:	str	x30, [sp, #-64]!
   327dc:	str	x0, [sp, #40]
   327e0:	str	x1, [sp, #32]
   327e4:	str	x2, [sp, #24]
   327e8:	str	xzr, [sp, #56]
   327ec:	str	xzr, [sp, #48]
   327f0:	ldr	x1, [sp, #56]
   327f4:	ldr	x0, [sp, #48]
   327f8:	cmp	x1, x0
   327fc:	cset	w0, eq  // eq = none
   32800:	and	w0, w0, #0xff
   32804:	and	x0, x0, #0xff
   32808:	cmp	x0, #0x0
   3280c:	b.eq	32830 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c20>  // b.none
   32810:	ldr	x4, [sp, #48]
   32814:	ldr	x3, [sp, #56]
   32818:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   3281c:	add	x2, x0, #0x610
   32820:	mov	w1, #0x39                  	// #57
   32824:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   32828:	add	x0, x0, #0x630
   3282c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   32830:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   32834:	sub	sp, sp, #0x10
   32838:	str	x0, [sp, #8]
   3283c:	nop
   32840:	add	sp, sp, #0x10
   32844:	ret
   32848:	sub	sp, sp, #0x10
   3284c:	str	x0, [sp, #8]
   32850:	str	x1, [sp]
   32854:	mov	x0, #0x0                   	// #0
   32858:	add	sp, sp, #0x10
   3285c:	ret
   32860:	str	x30, [sp, #-32]!
   32864:	str	x0, [sp, #24]
   32868:	str	x1, [sp, #16]
   3286c:	ldr	x0, [sp, #24]
   32870:	bl	32750 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b40>
   32874:	adrp	x0, 7b000 <__asan_backtrace_vector_release@@Base+0x2c340>
   32878:	add	x1, x0, #0xcc0
   3287c:	ldr	x0, [sp, #24]
   32880:	str	x1, [x0]
   32884:	ldr	x0, [sp, #24]
   32888:	ldr	x1, [sp, #16]
   3288c:	str	x1, [x0, #16]
   32890:	nop
   32894:	ldr	x30, [sp], #32
   32898:	ret
   3289c:	stp	x19, x30, [sp, #-48]!
   328a0:	add	x2, sp, #0x18
   328a4:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   328a8:	ldr	x1, [x0, #3832]
   328ac:	mov	x0, x2
   328b0:	bl	f58c <__sanitizer_get_allocated_size@@Base+0xa2c>
   328b4:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   328b8:	ldr	x0, [x0, #3744]
   328bc:	ldr	x0, [x0]
   328c0:	cmp	x0, #0x0
   328c4:	b.eq	328d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4cc8>  // b.none
   328c8:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   328cc:	ldr	x0, [x0, #3744]
   328d0:	ldr	x19, [x0]
   328d4:	b	3294c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d3c>
   328d8:	bl	34e80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7270>
   328dc:	mov	x1, x0
   328e0:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   328e4:	ldr	x0, [x0, #3744]
   328e8:	str	x1, [x0]
   328ec:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   328f0:	ldr	x0, [x0, #3744]
   328f4:	ldr	x0, [x0]
   328f8:	str	x0, [sp, #40]
   328fc:	str	xzr, [sp, #32]
   32900:	ldr	x1, [sp, #40]
   32904:	ldr	x0, [sp, #32]
   32908:	cmp	x1, x0
   3290c:	cset	w0, eq  // eq = none
   32910:	and	w0, w0, #0xff
   32914:	and	x0, x0, #0xff
   32918:	cmp	x0, #0x0
   3291c:	b.eq	32940 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d30>  // b.none
   32920:	ldr	x4, [sp, #32]
   32924:	ldr	x3, [sp, #40]
   32928:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   3292c:	add	x2, x0, #0x938
   32930:	mov	w1, #0x17                  	// #23
   32934:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   32938:	add	x0, x0, #0x950
   3293c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   32940:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   32944:	ldr	x0, [x0, #3744]
   32948:	ldr	x19, [x0]
   3294c:	add	x0, sp, #0x18
   32950:	bl	f5bc <__sanitizer_get_allocated_size@@Base+0xa5c>
   32954:	mov	x0, x19
   32958:	ldp	x19, x30, [sp], #48
   3295c:	ret
   32960:	str	x30, [sp, #-64]!
   32964:	str	x0, [sp, #40]
   32968:	str	x1, [sp, #32]
   3296c:	str	x2, [sp, #24]
   32970:	ldr	x1, [sp, #32]
   32974:	ldr	x0, [sp, #40]
   32978:	bl	2187c <__sanitizer_set_report_fd@@Base+0x2684>
   3297c:	str	x0, [sp, #48]
   32980:	ldr	x0, [sp, #48]
   32984:	add	x0, x0, #0x1
   32988:	mov	x2, #0x0                   	// #0
   3298c:	mov	x1, #0x0                   	// #0
   32990:	bl	16598 <__sancov_default_options@@Base+0x3fc>
   32994:	mov	x1, x0
   32998:	ldr	x0, [sp, #24]
   3299c:	str	x1, [x0]
   329a0:	ldr	x0, [sp, #24]
   329a4:	ldr	x0, [x0]
   329a8:	ldr	x2, [sp, #48]
   329ac:	ldr	x1, [sp, #40]
   329b0:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
   329b4:	ldr	x0, [sp, #24]
   329b8:	ldr	x1, [x0]
   329bc:	ldr	x0, [sp, #48]
   329c0:	add	x0, x1, x0
   329c4:	strb	wzr, [x0]
   329c8:	ldr	x1, [sp, #40]
   329cc:	ldr	x0, [sp, #48]
   329d0:	add	x0, x1, x0
   329d4:	str	x0, [sp, #56]
   329d8:	ldr	x0, [sp, #56]
   329dc:	ldrb	w0, [x0]
   329e0:	cmp	w0, #0x0
   329e4:	b.eq	329f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4de4>  // b.none
   329e8:	ldr	x0, [sp, #56]
   329ec:	add	x0, x0, #0x1
   329f0:	str	x0, [sp, #56]
   329f4:	ldr	x0, [sp, #56]
   329f8:	ldr	x30, [sp], #64
   329fc:	ret
   32a00:	str	x30, [sp, #-64]!
   32a04:	str	x0, [sp, #40]
   32a08:	str	x1, [sp, #32]
   32a0c:	str	x2, [sp, #24]
   32a10:	add	x0, sp, #0x30
   32a14:	mov	x2, x0
   32a18:	ldr	x1, [sp, #32]
   32a1c:	ldr	x0, [sp, #40]
   32a20:	bl	32960 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d50>
   32a24:	str	x0, [sp, #56]
   32a28:	ldr	x0, [sp, #48]
   32a2c:	cmp	x0, #0x0
   32a30:	b.eq	32a48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e38>  // b.none
   32a34:	ldr	x0, [sp, #48]
   32a38:	bl	213f8 <__sanitizer_set_report_fd@@Base+0x2200>
   32a3c:	mov	w1, w0
   32a40:	ldr	x0, [sp, #24]
   32a44:	str	w1, [x0]
   32a48:	ldr	x0, [sp, #48]
   32a4c:	mov	x1, #0x0                   	// #0
   32a50:	bl	167e8 <__sancov_default_options@@Base+0x64c>
   32a54:	ldr	x0, [sp, #56]
   32a58:	ldr	x30, [sp], #64
   32a5c:	ret
   32a60:	str	x30, [sp, #-64]!
   32a64:	str	x0, [sp, #40]
   32a68:	str	x1, [sp, #32]
   32a6c:	str	x2, [sp, #24]
   32a70:	add	x0, sp, #0x30
   32a74:	mov	x2, x0
   32a78:	ldr	x1, [sp, #32]
   32a7c:	ldr	x0, [sp, #40]
   32a80:	bl	32960 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d50>
   32a84:	str	x0, [sp, #56]
   32a88:	ldr	x0, [sp, #48]
   32a8c:	cmp	x0, #0x0
   32a90:	b.eq	32aa8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e98>  // b.none
   32a94:	ldr	x0, [sp, #48]
   32a98:	bl	213f8 <__sanitizer_set_report_fd@@Base+0x2200>
   32a9c:	mov	x1, x0
   32aa0:	ldr	x0, [sp, #24]
   32aa4:	str	x1, [x0]
   32aa8:	ldr	x0, [sp, #48]
   32aac:	mov	x1, #0x0                   	// #0
   32ab0:	bl	167e8 <__sancov_default_options@@Base+0x64c>
   32ab4:	ldr	x0, [sp, #56]
   32ab8:	ldr	x30, [sp], #64
   32abc:	ret
   32ac0:	str	x30, [sp, #-80]!
   32ac4:	str	x0, [sp, #40]
   32ac8:	str	x1, [sp, #32]
   32acc:	str	x2, [sp, #24]
   32ad0:	ldr	x1, [sp, #32]
   32ad4:	ldr	x0, [sp, #40]
   32ad8:	bl	21ef0 <__sanitizer_set_report_fd@@Base+0x2cf8>
   32adc:	str	x0, [sp, #64]
   32ae0:	ldr	x0, [sp, #64]
   32ae4:	cmp	x0, #0x0
   32ae8:	b.eq	32afc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4eec>  // b.none
   32aec:	ldr	x1, [sp, #64]
   32af0:	ldr	x0, [sp, #40]
   32af4:	sub	x0, x1, x0
   32af8:	b	32b04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ef4>
   32afc:	ldr	x0, [sp, #40]
   32b00:	bl	21bac <__sanitizer_set_report_fd@@Base+0x29b4>
   32b04:	str	x0, [sp, #56]
   32b08:	ldr	x0, [sp, #56]
   32b0c:	add	x0, x0, #0x1
   32b10:	mov	x2, #0x0                   	// #0
   32b14:	mov	x1, #0x0                   	// #0
   32b18:	bl	16598 <__sancov_default_options@@Base+0x3fc>
   32b1c:	mov	x1, x0
   32b20:	ldr	x0, [sp, #24]
   32b24:	str	x1, [x0]
   32b28:	ldr	x0, [sp, #24]
   32b2c:	ldr	x0, [x0]
   32b30:	ldr	x2, [sp, #56]
   32b34:	ldr	x1, [sp, #40]
   32b38:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
   32b3c:	ldr	x0, [sp, #24]
   32b40:	ldr	x1, [x0]
   32b44:	ldr	x0, [sp, #56]
   32b48:	add	x0, x1, x0
   32b4c:	strb	wzr, [x0]
   32b50:	ldr	x1, [sp, #40]
   32b54:	ldr	x0, [sp, #56]
   32b58:	add	x0, x1, x0
   32b5c:	str	x0, [sp, #72]
   32b60:	ldr	x0, [sp, #72]
   32b64:	ldrb	w0, [x0]
   32b68:	cmp	w0, #0x0
   32b6c:	b.eq	32b88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f78>  // b.none
   32b70:	ldr	x0, [sp, #32]
   32b74:	bl	21bac <__sanitizer_set_report_fd@@Base+0x29b4>
   32b78:	mov	x1, x0
   32b7c:	ldr	x0, [sp, #72]
   32b80:	add	x0, x0, x1
   32b84:	str	x0, [sp, #72]
   32b88:	ldr	x0, [sp, #72]
   32b8c:	ldr	x30, [sp], #80
   32b90:	ret
   32b94:	stp	x19, x20, [sp, #-128]!
   32b98:	str	x30, [sp, #16]
   32b9c:	str	x0, [sp, #40]
   32ba0:	str	x1, [sp, #32]
   32ba4:	ldr	x0, [sp, #40]
   32ba8:	add	x1, x0, #0x70
   32bac:	add	x0, sp, #0x60
   32bb0:	bl	b658 <__lsan_do_recoverable_leak_check@@Base+0x14cc>
   32bb4:	ldr	x0, [sp, #32]
   32bb8:	bl	318b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ca4>
   32bbc:	str	x0, [sp, #120]
   32bc0:	add	x2, sp, #0x4c
   32bc4:	add	x1, sp, #0x50
   32bc8:	add	x0, sp, #0x58
   32bcc:	mov	x4, x2
   32bd0:	mov	x3, x1
   32bd4:	mov	x2, x0
   32bd8:	ldr	x1, [sp, #32]
   32bdc:	ldr	x0, [sp, #40]
   32be0:	bl	33084 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5474>
   32be4:	and	w0, w0, #0xff
   32be8:	eor	w0, w0, #0x1
   32bec:	and	w0, w0, #0xff
   32bf0:	cmp	w0, #0x0
   32bf4:	b.eq	32c00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ff0>  // b.none
   32bf8:	ldr	x19, [sp, #120]
   32bfc:	b	32cc4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x50b4>
   32c00:	ldr	x0, [sp, #120]
   32c04:	add	x0, x0, #0x8
   32c08:	ldr	x1, [sp, #88]
   32c0c:	ldr	x2, [sp, #80]
   32c10:	ldr	w3, [sp, #76]
   32c14:	bl	31840 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c30>
   32c18:	ldr	x0, [sp, #40]
   32c1c:	add	x0, x0, #0xc8
   32c20:	str	x0, [sp, #112]
   32c24:	ldr	x0, [sp, #112]
   32c28:	bl	3428c <__sanitizer_get_module_and_offset_for_pc@@Base+0x667c>
   32c2c:	str	x0, [sp, #64]
   32c30:	ldr	x0, [sp, #112]
   32c34:	bl	342b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x66a0>
   32c38:	str	x0, [sp, #56]
   32c3c:	add	x0, sp, #0x40
   32c40:	ldr	x1, [sp, #56]
   32c44:	bl	342d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x66c0>
   32c48:	and	w0, w0, #0xff
   32c4c:	cmp	w0, #0x0
   32c50:	b.eq	32cc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x50b0>  // b.none
   32c54:	add	x0, sp, #0x40
   32c58:	bl	34324 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6714>
   32c5c:	str	x0, [sp, #104]
   32c60:	add	x0, sp, #0x30
   32c64:	ldr	x1, [sp, #40]
   32c68:	bl	31c40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4030>
   32c6c:	ldr	x0, [sp, #104]
   32c70:	ldr	x0, [x0]
   32c74:	ldr	x3, [x0]
   32c78:	ldr	x2, [sp, #120]
   32c7c:	ldr	x1, [sp, #32]
   32c80:	ldr	x0, [sp, #104]
   32c84:	blr	x3
   32c88:	and	w0, w0, #0xff
   32c8c:	cmp	w0, #0x0
   32c90:	b.eq	32ca0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5090>  // b.none
   32c94:	ldr	x19, [sp, #120]
   32c98:	mov	w20, #0x0                   	// #0
   32c9c:	b	32ca4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5094>
   32ca0:	mov	w20, #0x1                   	// #1
   32ca4:	add	x0, sp, #0x30
   32ca8:	bl	31c88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4078>
   32cac:	cmp	w20, #0x1
   32cb0:	b.ne	32cc4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x50b4>  // b.any
   32cb4:	add	x0, sp, #0x40
   32cb8:	bl	342fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x66ec>
   32cbc:	b	32c3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x502c>
   32cc0:	ldr	x19, [sp, #120]
   32cc4:	add	x0, sp, #0x60
   32cc8:	bl	b688 <__lsan_do_recoverable_leak_check@@Base+0x14fc>
   32ccc:	mov	x0, x19
   32cd0:	ldr	x30, [sp, #16]
   32cd4:	ldp	x19, x20, [sp], #128
   32cd8:	ret
   32cdc:	stp	x19, x20, [sp, #-144]!
   32ce0:	str	x30, [sp, #16]
   32ce4:	str	x0, [sp, #56]
   32ce8:	str	x1, [sp, #48]
   32cec:	str	x2, [sp, #40]
   32cf0:	mov	w19, #0x0                   	// #0
   32cf4:	ldr	x0, [sp, #56]
   32cf8:	add	x1, x0, #0x70
   32cfc:	add	x0, sp, #0x78
   32d00:	bl	b658 <__lsan_do_recoverable_leak_check@@Base+0x14cc>
   32d04:	add	x2, sp, #0x64
   32d08:	add	x1, sp, #0x68
   32d0c:	add	x0, sp, #0x70
   32d10:	mov	x4, x2
   32d14:	mov	x3, x1
   32d18:	mov	x2, x0
   32d1c:	ldr	x1, [sp, #48]
   32d20:	ldr	x0, [sp, #56]
   32d24:	bl	33084 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5474>
   32d28:	and	w0, w0, #0xff
   32d2c:	eor	w0, w0, #0x1
   32d30:	and	w0, w0, #0xff
   32d34:	cmp	w0, #0x0
   32d38:	b.eq	32d44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5134>  // b.none
   32d3c:	mov	w19, #0x0                   	// #0
   32d40:	b	32e28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5218>
   32d44:	ldr	x0, [sp, #40]
   32d48:	bl	31974 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d64>
   32d4c:	ldr	x0, [sp, #112]
   32d50:	bl	218f8 <__sanitizer_set_report_fd@@Base+0x2700>
   32d54:	mov	x1, x0
   32d58:	ldr	x0, [sp, #40]
   32d5c:	str	x1, [x0]
   32d60:	ldr	x1, [sp, #104]
   32d64:	ldr	x0, [sp, #40]
   32d68:	str	x1, [x0, #8]
   32d6c:	ldr	w1, [sp, #100]
   32d70:	ldr	x0, [sp, #40]
   32d74:	str	w1, [x0, #16]
   32d78:	ldr	x0, [sp, #56]
   32d7c:	add	x0, x0, #0xc8
   32d80:	str	x0, [sp, #136]
   32d84:	ldr	x0, [sp, #136]
   32d88:	bl	3428c <__sanitizer_get_module_and_offset_for_pc@@Base+0x667c>
   32d8c:	str	x0, [sp, #88]
   32d90:	ldr	x0, [sp, #136]
   32d94:	bl	342b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x66a0>
   32d98:	str	x0, [sp, #80]
   32d9c:	add	x0, sp, #0x58
   32da0:	ldr	x1, [sp, #80]
   32da4:	bl	342d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x66c0>
   32da8:	and	w0, w0, #0xff
   32dac:	cmp	w0, #0x0
   32db0:	b.eq	32e24 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5214>  // b.none
   32db4:	add	x0, sp, #0x58
   32db8:	bl	34324 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6714>
   32dbc:	str	x0, [sp, #128]
   32dc0:	add	x0, sp, #0x48
   32dc4:	ldr	x1, [sp, #56]
   32dc8:	bl	31c40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4030>
   32dcc:	ldr	x0, [sp, #128]
   32dd0:	ldr	x0, [x0]
   32dd4:	add	x0, x0, #0x8
   32dd8:	ldr	x3, [x0]
   32ddc:	ldr	x2, [sp, #40]
   32de0:	ldr	x1, [sp, #48]
   32de4:	ldr	x0, [sp, #128]
   32de8:	blr	x3
   32dec:	and	w0, w0, #0xff
   32df0:	cmp	w0, #0x0
   32df4:	b.eq	32e04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x51f4>  // b.none
   32df8:	mov	w19, #0x1                   	// #1
   32dfc:	mov	w20, #0x0                   	// #0
   32e00:	b	32e08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x51f8>
   32e04:	mov	w20, #0x1                   	// #1
   32e08:	add	x0, sp, #0x48
   32e0c:	bl	31c88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4078>
   32e10:	cmp	w20, #0x1
   32e14:	b.ne	32e28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5218>  // b.any
   32e18:	add	x0, sp, #0x58
   32e1c:	bl	342fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x66ec>
   32e20:	b	32d9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x518c>
   32e24:	mov	w19, #0x1                   	// #1
   32e28:	add	x0, sp, #0x78
   32e2c:	bl	b688 <__lsan_do_recoverable_leak_check@@Base+0x14fc>
   32e30:	mov	w0, w19
   32e34:	ldr	x30, [sp, #16]
   32e38:	ldp	x19, x20, [sp], #144
   32e3c:	ret
   32e40:	stp	x19, x30, [sp, #-80]!
   32e44:	str	x0, [sp, #40]
   32e48:	str	x1, [sp, #32]
   32e4c:	str	x2, [sp, #24]
   32e50:	str	x3, [sp, #16]
   32e54:	ldr	x0, [sp, #40]
   32e58:	add	x1, x0, #0x70
   32e5c:	add	x0, sp, #0x48
   32e60:	bl	b658 <__lsan_do_recoverable_leak_check@@Base+0x14cc>
   32e64:	str	xzr, [sp, #64]
   32e68:	add	x1, sp, #0x3c
   32e6c:	add	x0, sp, #0x40
   32e70:	mov	x4, x1
   32e74:	ldr	x3, [sp, #16]
   32e78:	mov	x2, x0
   32e7c:	ldr	x1, [sp, #32]
   32e80:	ldr	x0, [sp, #40]
   32e84:	bl	33084 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5474>
   32e88:	and	w0, w0, #0xff
   32e8c:	eor	w0, w0, #0x1
   32e90:	and	w0, w0, #0xff
   32e94:	cmp	w0, #0x0
   32e98:	b.eq	32ea4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5294>  // b.none
   32e9c:	mov	w19, #0x0                   	// #0
   32ea0:	b	32ecc <__sanitizer_get_module_and_offset_for_pc@@Base+0x52bc>
   32ea4:	ldr	x0, [sp, #24]
   32ea8:	cmp	x0, #0x0
   32eac:	b.eq	32ec8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x52b8>  // b.none
   32eb0:	ldr	x0, [sp, #40]
   32eb4:	ldr	x1, [sp, #64]
   32eb8:	bl	31a90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e80>
   32ebc:	mov	x1, x0
   32ec0:	ldr	x0, [sp, #24]
   32ec4:	str	x1, [x0]
   32ec8:	mov	w19, #0x1                   	// #1
   32ecc:	add	x0, sp, #0x48
   32ed0:	bl	b688 <__lsan_do_recoverable_leak_check@@Base+0x14fc>
   32ed4:	mov	w0, w19
   32ed8:	ldp	x19, x30, [sp], #80
   32edc:	ret
   32ee0:	str	x30, [sp, #-80]!
   32ee4:	str	x0, [sp, #24]
   32ee8:	ldr	x0, [sp, #24]
   32eec:	add	x1, x0, #0x70
   32ef0:	add	x0, sp, #0x38
   32ef4:	bl	b658 <__lsan_do_recoverable_leak_check@@Base+0x14cc>
   32ef8:	ldr	x0, [sp, #24]
   32efc:	add	x0, x0, #0xc8
   32f00:	str	x0, [sp, #72]
   32f04:	ldr	x0, [sp, #72]
   32f08:	bl	3428c <__sanitizer_get_module_and_offset_for_pc@@Base+0x667c>
   32f0c:	str	x0, [sp, #48]
   32f10:	ldr	x0, [sp, #72]
   32f14:	bl	342b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x66a0>
   32f18:	str	x0, [sp, #40]
   32f1c:	add	x0, sp, #0x30
   32f20:	ldr	x1, [sp, #40]
   32f24:	bl	342d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x66c0>
   32f28:	and	w0, w0, #0xff
   32f2c:	cmp	w0, #0x0
   32f30:	b.eq	32f78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5368>  // b.none
   32f34:	add	x0, sp, #0x30
   32f38:	bl	34324 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6714>
   32f3c:	str	x0, [sp, #64]
   32f40:	add	x0, sp, #0x20
   32f44:	ldr	x1, [sp, #24]
   32f48:	bl	31c40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4030>
   32f4c:	ldr	x0, [sp, #64]
   32f50:	ldr	x0, [x0]
   32f54:	add	x0, x0, #0x10
   32f58:	ldr	x1, [x0]
   32f5c:	ldr	x0, [sp, #64]
   32f60:	blr	x1
   32f64:	add	x0, sp, #0x20
   32f68:	bl	31c88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4078>
   32f6c:	add	x0, sp, #0x30
   32f70:	bl	342fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x66ec>
   32f74:	b	32f1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x530c>
   32f78:	add	x0, sp, #0x38
   32f7c:	bl	b688 <__lsan_do_recoverable_leak_check@@Base+0x14fc>
   32f80:	nop
   32f84:	ldr	x30, [sp], #80
   32f88:	ret
   32f8c:	stp	x19, x20, [sp, #-112]!
   32f90:	str	x30, [sp, #16]
   32f94:	str	x0, [sp, #40]
   32f98:	str	x1, [sp, #32]
   32f9c:	ldr	x0, [sp, #40]
   32fa0:	add	x1, x0, #0x70
   32fa4:	add	x0, sp, #0x50
   32fa8:	bl	b658 <__lsan_do_recoverable_leak_check@@Base+0x14cc>
   32fac:	ldr	x0, [sp, #40]
   32fb0:	add	x0, x0, #0xc8
   32fb4:	str	x0, [sp, #104]
   32fb8:	ldr	x0, [sp, #104]
   32fbc:	bl	3428c <__sanitizer_get_module_and_offset_for_pc@@Base+0x667c>
   32fc0:	str	x0, [sp, #72]
   32fc4:	ldr	x0, [sp, #104]
   32fc8:	bl	342b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x66a0>
   32fcc:	str	x0, [sp, #64]
   32fd0:	add	x0, sp, #0x48
   32fd4:	ldr	x1, [sp, #64]
   32fd8:	bl	342d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x66c0>
   32fdc:	and	w0, w0, #0xff
   32fe0:	cmp	w0, #0x0
   32fe4:	b.eq	33058 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5448>  // b.none
   32fe8:	add	x0, sp, #0x48
   32fec:	bl	34324 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6714>
   32ff0:	str	x0, [sp, #96]
   32ff4:	add	x0, sp, #0x38
   32ff8:	ldr	x1, [sp, #40]
   32ffc:	bl	31c40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4030>
   33000:	ldr	x0, [sp, #96]
   33004:	ldr	x0, [x0]
   33008:	add	x0, x0, #0x18
   3300c:	ldr	x2, [x0]
   33010:	ldr	x1, [sp, #32]
   33014:	ldr	x0, [sp, #96]
   33018:	blr	x2
   3301c:	str	x0, [sp, #88]
   33020:	ldr	x0, [sp, #88]
   33024:	cmp	x0, #0x0
   33028:	b.eq	33038 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5428>  // b.none
   3302c:	ldr	x20, [sp, #88]
   33030:	mov	w19, #0x0                   	// #0
   33034:	b	3303c <__sanitizer_get_module_and_offset_for_pc@@Base+0x542c>
   33038:	mov	w19, #0x1                   	// #1
   3303c:	add	x0, sp, #0x38
   33040:	bl	31c88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4078>
   33044:	cmp	w19, #0x1
   33048:	b.ne	3306c <__sanitizer_get_module_and_offset_for_pc@@Base+0x545c>  // b.any
   3304c:	add	x0, sp, #0x48
   33050:	bl	342fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x66ec>
   33054:	b	32fd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x53c0>
   33058:	ldr	x1, [sp, #32]
   3305c:	ldr	x0, [sp, #40]
   33060:	bl	349f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6de0>
   33064:	mov	x20, x0
   33068:	nop
   3306c:	add	x0, sp, #0x50
   33070:	bl	b688 <__lsan_do_recoverable_leak_check@@Base+0x14fc>
   33074:	mov	x0, x20
   33078:	ldr	x30, [sp, #16]
   3307c:	ldp	x19, x20, [sp], #112
   33080:	ret
   33084:	str	x30, [sp, #-80]!
   33088:	str	x0, [sp, #56]
   3308c:	str	x1, [sp, #48]
   33090:	str	x2, [sp, #40]
   33094:	str	x3, [sp, #32]
   33098:	str	x4, [sp, #24]
   3309c:	ldr	x1, [sp, #48]
   330a0:	ldr	x0, [sp, #56]
   330a4:	bl	33208 <__sanitizer_get_module_and_offset_for_pc@@Base+0x55f8>
   330a8:	str	x0, [sp, #72]
   330ac:	ldr	x0, [sp, #72]
   330b0:	cmp	x0, #0x0
   330b4:	b.ne	330c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x54b0>  // b.any
   330b8:	mov	w0, #0x0                   	// #0
   330bc:	b	33108 <__sanitizer_get_module_and_offset_for_pc@@Base+0x54f8>
   330c0:	ldr	x0, [sp, #72]
   330c4:	bl	22c48 <__sanitizer_set_report_fd@@Base+0x3a50>
   330c8:	mov	x1, x0
   330cc:	ldr	x0, [sp, #40]
   330d0:	str	x1, [x0]
   330d4:	ldr	x0, [sp, #72]
   330d8:	bl	d4d8 <__lsan_do_recoverable_leak_check@@Base+0x334c>
   330dc:	mov	x1, x0
   330e0:	ldr	x0, [sp, #48]
   330e4:	sub	x1, x0, x1
   330e8:	ldr	x0, [sp, #32]
   330ec:	str	x1, [x0]
   330f0:	ldr	x0, [sp, #72]
   330f4:	bl	33f44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6334>
   330f8:	mov	w1, w0
   330fc:	ldr	x0, [sp, #24]
   33100:	str	w1, [x0]
   33104:	mov	w0, #0x1                   	// #1
   33108:	ldr	x30, [sp], #80
   3310c:	ret
   33110:	str	x30, [sp, #-32]!
   33114:	str	x0, [sp, #24]
   33118:	ldr	x0, [sp, #24]
   3311c:	add	x0, x0, #0x28
   33120:	bl	26078 <__sanitizer_set_report_fd@@Base+0x6e80>
   33124:	ldr	x0, [sp, #24]
   33128:	add	x0, x0, #0x48
   3312c:	bl	260d8 <__sanitizer_set_report_fd@@Base+0x6ee0>
   33130:	ldr	x0, [sp, #24]
   33134:	add	x0, x0, #0x28
   33138:	bl	33f5c <__sanitizer_get_module_and_offset_for_pc@@Base+0x634c>
   3313c:	cmp	x0, #0x0
   33140:	cset	w0, eq  // eq = none
   33144:	and	w0, w0, #0xff
   33148:	and	x0, x0, #0xff
   3314c:	cmp	x0, #0x0
   33150:	cset	w0, ne  // ne = any
   33154:	and	w0, w0, #0xff
   33158:	cmp	w0, #0x0
   3315c:	b.eq	33170 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5560>  // b.none
   33160:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   33164:	add	x0, x0, #0x9a0
   33168:	bl	1e860 <__sanitizer_cov_pcs_init@@Base+0x37c4>
   3316c:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   33170:	ldr	x0, [sp, #24]
   33174:	mov	w1, #0x1                   	// #1
   33178:	strb	w1, [x0, #104]
   3317c:	nop
   33180:	ldr	x30, [sp], #32
   33184:	ret
   33188:	str	x30, [sp, #-48]!
   3318c:	str	x0, [sp, #24]
   33190:	str	x1, [sp, #16]
   33194:	str	xzr, [sp, #40]
   33198:	ldr	x0, [sp, #24]
   3319c:	bl	33f5c <__sanitizer_get_module_and_offset_for_pc@@Base+0x634c>
   331a0:	mov	x1, x0
   331a4:	ldr	x0, [sp, #40]
   331a8:	cmp	x0, x1
   331ac:	cset	w0, cc  // cc = lo, ul, last
   331b0:	and	w0, w0, #0xff
   331b4:	cmp	w0, #0x0
   331b8:	b.eq	331fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x55ec>  // b.none
   331bc:	ldr	x1, [sp, #40]
   331c0:	ldr	x0, [sp, #24]
   331c4:	bl	33f74 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6364>
   331c8:	ldr	x1, [sp, #16]
   331cc:	bl	197d4 <__sancov_default_options@@Base+0x3638>
   331d0:	and	w0, w0, #0xff
   331d4:	cmp	w0, #0x0
   331d8:	b.eq	331ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x55dc>  // b.none
   331dc:	ldr	x1, [sp, #40]
   331e0:	ldr	x0, [sp, #24]
   331e4:	bl	33f74 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6364>
   331e8:	b	33200 <__sanitizer_get_module_and_offset_for_pc@@Base+0x55f0>
   331ec:	ldr	x0, [sp, #40]
   331f0:	add	x0, x0, #0x1
   331f4:	str	x0, [sp, #40]
   331f8:	b	33198 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5588>
   331fc:	mov	x0, #0x0                   	// #0
   33200:	ldr	x30, [sp], #48
   33204:	ret
   33208:	str	x30, [sp, #-48]!
   3320c:	str	x0, [sp, #24]
   33210:	str	x1, [sp, #16]
   33214:	strb	wzr, [sp, #47]
   33218:	ldr	x0, [sp, #24]
   3321c:	ldrb	w0, [x0, #104]
   33220:	eor	w0, w0, #0x1
   33224:	and	w0, w0, #0xff
   33228:	cmp	w0, #0x0
   3322c:	b.eq	33240 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5630>  // b.none
   33230:	ldr	x0, [sp, #24]
   33234:	bl	33110 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5500>
   33238:	mov	w0, #0x1                   	// #1
   3323c:	strb	w0, [sp, #47]
   33240:	ldr	x0, [sp, #24]
   33244:	add	x0, x0, #0x28
   33248:	ldr	x1, [sp, #16]
   3324c:	bl	33188 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5578>
   33250:	str	x0, [sp, #32]
   33254:	ldr	x0, [sp, #32]
   33258:	cmp	x0, #0x0
   3325c:	b.eq	33268 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5658>  // b.none
   33260:	ldr	x0, [sp, #32]
   33264:	b	332e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x56d4>
   33268:	ldrb	w0, [sp, #47]
   3326c:	eor	w0, w0, #0x1
   33270:	and	w0, w0, #0xff
   33274:	cmp	w0, #0x0
   33278:	b.eq	332ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x569c>  // b.none
   3327c:	ldr	x0, [sp, #24]
   33280:	bl	33110 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5500>
   33284:	ldr	x0, [sp, #24]
   33288:	add	x0, x0, #0x28
   3328c:	ldr	x1, [sp, #16]
   33290:	bl	33188 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5578>
   33294:	str	x0, [sp, #32]
   33298:	ldr	x0, [sp, #32]
   3329c:	cmp	x0, #0x0
   332a0:	b.eq	332ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x569c>  // b.none
   332a4:	ldr	x0, [sp, #32]
   332a8:	b	332e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x56d4>
   332ac:	ldr	x0, [sp, #24]
   332b0:	add	x0, x0, #0x48
   332b4:	bl	33f5c <__sanitizer_get_module_and_offset_for_pc@@Base+0x634c>
   332b8:	cmp	x0, #0x0
   332bc:	cset	w0, ne  // ne = any
   332c0:	and	w0, w0, #0xff
   332c4:	cmp	w0, #0x0
   332c8:	b.eq	332e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x56d0>  // b.none
   332cc:	ldr	x0, [sp, #24]
   332d0:	add	x0, x0, #0x48
   332d4:	ldr	x1, [sp, #16]
   332d8:	bl	33188 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5578>
   332dc:	str	x0, [sp, #32]
   332e0:	ldr	x0, [sp, #32]
   332e4:	ldr	x30, [sp], #48
   332e8:	ret
   332ec:	stp	x19, x30, [sp, #-48]!
   332f0:	str	x0, [sp, #40]
   332f4:	str	x1, [sp, #32]
   332f8:	str	x2, [sp, #24]
   332fc:	ldr	x0, [sp, #40]
   33300:	bl	32750 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b40>
   33304:	adrp	x0, 7b000 <__asan_backtrace_vector_release@@Base+0x2c340>
   33308:	add	x1, x0, #0xd48
   3330c:	ldr	x0, [sp, #40]
   33310:	str	x1, [x0]
   33314:	ldr	x1, [sp, #24]
   33318:	mov	x0, #0x4028                	// #16424
   3331c:	bl	a5c0 <__lsan_do_recoverable_leak_check@@Base+0x434>
   33320:	mov	x19, x0
   33324:	ldr	x1, [sp, #32]
   33328:	mov	x0, x19
   3332c:	bl	340a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6490>
   33330:	ldr	x0, [sp, #40]
   33334:	str	x19, [x0, #16]
   33338:	nop
   3333c:	ldp	x19, x30, [sp], #48
   33340:	ret
   33344:	str	x30, [sp, #-80]!
   33348:	str	x0, [sp, #24]
   3334c:	str	x1, [sp, #16]
   33350:	str	xzr, [sp, #32]
   33354:	add	x0, sp, #0x20
   33358:	mov	x2, x0
   3335c:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   33360:	add	x1, x0, #0x9f8
   33364:	ldr	x0, [sp, #16]
   33368:	bl	32960 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d50>
   3336c:	str	x0, [sp, #16]
   33370:	ldr	x0, [sp, #32]
   33374:	str	x0, [sp, #56]
   33378:	str	xzr, [sp, #48]
   3337c:	ldr	x1, [sp, #56]
   33380:	ldr	x0, [sp, #48]
   33384:	cmp	x1, x0
   33388:	cset	w0, eq  // eq = none
   3338c:	and	w0, w0, #0xff
   33390:	and	x0, x0, #0xff
   33394:	cmp	x0, #0x0
   33398:	b.eq	333bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x57ac>  // b.none
   3339c:	ldr	x4, [sp, #48]
   333a0:	ldr	x3, [sp, #56]
   333a4:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   333a8:	add	x2, x0, #0xa00
   333ac:	mov	w1, #0x10d                 	// #269
   333b0:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   333b4:	add	x0, x0, #0x950
   333b8:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   333bc:	ldr	x0, [sp, #32]
   333c0:	bl	21bac <__sanitizer_set_report_fd@@Base+0x29b4>
   333c4:	str	x0, [sp, #40]
   333c8:	ldr	x0, [sp, #40]
   333cc:	cmp	x0, #0x0
   333d0:	b.eq	334fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x58ec>  // b.none
   333d4:	ldr	x1, [sp, #32]
   333d8:	ldr	x0, [sp, #40]
   333dc:	sub	x0, x0, #0x1
   333e0:	add	x0, x1, x0
   333e4:	str	x0, [sp, #72]
   333e8:	str	wzr, [sp, #68]
   333ec:	ldr	w0, [sp, #68]
   333f0:	cmp	w0, #0x1
   333f4:	b.gt	334dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x58cc>
   333f8:	ldr	x0, [sp, #32]
   333fc:	ldr	x1, [sp, #72]
   33400:	cmp	x1, x0
   33404:	b.ls	33428 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5818>  // b.plast
   33408:	ldr	x0, [sp, #72]
   3340c:	ldrb	w0, [x0]
   33410:	bl	223a0 <__sanitizer_set_report_fd@@Base+0x31a8>
   33414:	and	w0, w0, #0xff
   33418:	cmp	w0, #0x0
   3341c:	b.eq	33428 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5818>  // b.none
   33420:	mov	w0, #0x1                   	// #1
   33424:	b	3342c <__sanitizer_get_module_and_offset_for_pc@@Base+0x581c>
   33428:	mov	w0, #0x0                   	// #0
   3342c:	cmp	w0, #0x0
   33430:	b.eq	33444 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5834>  // b.none
   33434:	ldr	x0, [sp, #72]
   33438:	sub	x0, x0, #0x1
   3343c:	str	x0, [sp, #72]
   33440:	b	333f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x57e8>
   33444:	ldr	x0, [sp, #72]
   33448:	ldrb	w0, [x0]
   3344c:	cmp	w0, #0x3a
   33450:	b.ne	33478 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5868>  // b.any
   33454:	ldr	x0, [sp, #72]
   33458:	add	x0, x0, #0x1
   3345c:	ldrb	w0, [x0]
   33460:	bl	223a0 <__sanitizer_set_report_fd@@Base+0x31a8>
   33464:	and	w0, w0, #0xff
   33468:	eor	w0, w0, #0x1
   3346c:	and	w0, w0, #0xff
   33470:	cmp	w0, #0x0
   33474:	b.eq	33480 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5870>  // b.none
   33478:	mov	w0, #0x1                   	// #1
   3347c:	b	33484 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5874>
   33480:	mov	w0, #0x0                   	// #0
   33484:	cmp	w0, #0x0
   33488:	b.ne	334d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x58c8>  // b.any
   3348c:	ldr	x0, [sp, #24]
   33490:	ldr	w1, [x0, #56]
   33494:	ldr	x0, [sp, #24]
   33498:	str	w1, [x0, #60]
   3349c:	ldr	x0, [sp, #72]
   334a0:	add	x0, x0, #0x1
   334a4:	bl	213f8 <__sanitizer_set_report_fd@@Base+0x2200>
   334a8:	mov	w1, w0
   334ac:	ldr	x0, [sp, #24]
   334b0:	str	w1, [x0, #56]
   334b4:	ldr	x0, [sp, #72]
   334b8:	strb	wzr, [x0]
   334bc:	ldr	x0, [sp, #72]
   334c0:	sub	x0, x0, #0x1
   334c4:	str	x0, [sp, #72]
   334c8:	ldr	w0, [sp, #68]
   334cc:	add	w0, w0, #0x1
   334d0:	str	w0, [sp, #68]
   334d4:	b	333ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x57dc>
   334d8:	nop
   334dc:	ldr	x3, [sp, #32]
   334e0:	ldr	x0, [sp, #24]
   334e4:	add	x0, x0, #0x30
   334e8:	mov	x2, x0
   334ec:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   334f0:	add	x1, x0, #0x780
   334f4:	mov	x0, x3
   334f8:	bl	32960 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d50>
   334fc:	ldr	x0, [sp, #32]
   33500:	mov	x1, #0x0                   	// #0
   33504:	bl	167e8 <__sancov_default_options@@Base+0x64c>
   33508:	ldr	x0, [sp, #16]
   3350c:	ldr	x30, [sp], #80
   33510:	ret
   33514:	str	x30, [sp, #-96]!
   33518:	str	x0, [sp, #24]
   3351c:	str	x1, [sp, #16]
   33520:	mov	w0, #0x1                   	// #1
   33524:	strb	w0, [sp, #95]
   33528:	ldr	x0, [sp, #16]
   3352c:	str	x0, [sp, #80]
   33530:	str	xzr, [sp, #40]
   33534:	add	x0, sp, #0x28
   33538:	mov	x2, x0
   3353c:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   33540:	add	x1, x0, #0x9f8
   33544:	ldr	x0, [sp, #24]
   33548:	bl	32960 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d50>
   3354c:	str	x0, [sp, #24]
   33550:	ldr	x0, [sp, #40]
   33554:	str	x0, [sp, #64]
   33558:	str	xzr, [sp, #56]
   3355c:	ldr	x1, [sp, #64]
   33560:	ldr	x0, [sp, #56]
   33564:	cmp	x1, x0
   33568:	cset	w0, eq  // eq = none
   3356c:	and	w0, w0, #0xff
   33570:	and	x0, x0, #0xff
   33574:	cmp	x0, #0x0
   33578:	b.eq	3359c <__sanitizer_get_module_and_offset_for_pc@@Base+0x598c>  // b.none
   3357c:	ldr	x4, [sp, #56]
   33580:	ldr	x3, [sp, #64]
   33584:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   33588:	add	x2, x0, #0xa20
   3358c:	mov	w1, #0x12c                 	// #300
   33590:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   33594:	add	x0, x0, #0x950
   33598:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   3359c:	ldr	x0, [sp, #40]
   335a0:	ldrb	w0, [x0]
   335a4:	cmp	w0, #0x0
   335a8:	b.ne	335bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x59ac>  // b.any
   335ac:	ldr	x0, [sp, #40]
   335b0:	mov	x1, #0x0                   	// #0
   335b4:	bl	167e8 <__sancov_default_options@@Base+0x64c>
   335b8:	b	336dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5acc>
   335bc:	ldrb	w0, [sp, #95]
   335c0:	cmp	w0, #0x0
   335c4:	b.eq	335d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x59c8>  // b.none
   335c8:	ldr	x0, [sp, #16]
   335cc:	str	x0, [sp, #72]
   335d0:	strb	wzr, [sp, #95]
   335d4:	b	33628 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a18>
   335d8:	ldr	x0, [sp, #16]
   335dc:	ldr	x0, [x0, #8]
   335e0:	bl	318b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ca4>
   335e4:	str	x0, [sp, #72]
   335e8:	ldr	x0, [sp, #72]
   335ec:	add	x4, x0, #0x8
   335f0:	ldr	x0, [sp, #16]
   335f4:	ldr	x1, [x0, #16]
   335f8:	ldr	x0, [sp, #16]
   335fc:	ldr	x2, [x0, #24]
   33600:	ldr	x0, [sp, #16]
   33604:	ldr	w0, [x0, #32]
   33608:	mov	w3, w0
   3360c:	mov	x0, x4
   33610:	bl	31840 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c30>
   33614:	ldr	x0, [sp, #80]
   33618:	ldr	x1, [sp, #72]
   3361c:	str	x1, [x0]
   33620:	ldr	x0, [sp, #72]
   33624:	str	x0, [sp, #80]
   33628:	ldr	x0, [sp, #72]
   3362c:	add	x0, x0, #0x8
   33630:	str	x0, [sp, #48]
   33634:	ldr	x1, [sp, #40]
   33638:	ldr	x0, [sp, #48]
   3363c:	str	x1, [x0, #32]
   33640:	ldr	x1, [sp, #24]
   33644:	ldr	x0, [sp, #48]
   33648:	bl	33344 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5734>
   3364c:	str	x0, [sp, #24]
   33650:	ldr	x0, [sp, #48]
   33654:	ldr	x2, [x0, #32]
   33658:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   3365c:	add	x1, x0, #0xa40
   33660:	mov	x0, x2
   33664:	bl	21950 <__sanitizer_set_report_fd@@Base+0x2758>
   33668:	cmp	w0, #0x0
   3366c:	cset	w0, eq  // eq = none
   33670:	and	w0, w0, #0xff
   33674:	cmp	w0, #0x0
   33678:	b.eq	33694 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a84>  // b.none
   3367c:	ldr	x0, [sp, #48]
   33680:	ldr	x0, [x0, #32]
   33684:	mov	x1, #0x0                   	// #0
   33688:	bl	167e8 <__sancov_default_options@@Base+0x64c>
   3368c:	ldr	x0, [sp, #48]
   33690:	str	xzr, [x0, #32]
   33694:	ldr	x0, [sp, #48]
   33698:	ldr	x2, [x0, #48]
   3369c:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   336a0:	add	x1, x0, #0xa40
   336a4:	mov	x0, x2
   336a8:	bl	21950 <__sanitizer_set_report_fd@@Base+0x2758>
   336ac:	cmp	w0, #0x0
   336b0:	cset	w0, eq  // eq = none
   336b4:	and	w0, w0, #0xff
   336b8:	cmp	w0, #0x0
   336bc:	b.eq	33530 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5920>  // b.none
   336c0:	ldr	x0, [sp, #48]
   336c4:	ldr	x0, [x0, #48]
   336c8:	mov	x1, #0x0                   	// #0
   336cc:	bl	167e8 <__sancov_default_options@@Base+0x64c>
   336d0:	ldr	x0, [sp, #48]
   336d4:	str	xzr, [x0, #48]
   336d8:	b	33530 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5920>
   336dc:	ldr	x30, [sp], #96
   336e0:	ret
   336e4:	str	x30, [sp, #-32]!
   336e8:	str	x0, [sp, #24]
   336ec:	str	x1, [sp, #16]
   336f0:	ldr	x0, [sp, #16]
   336f4:	add	x0, x0, #0x28
   336f8:	mov	x2, x0
   336fc:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   33700:	add	x1, x0, #0x9f8
   33704:	ldr	x0, [sp, #24]
   33708:	bl	32960 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d50>
   3370c:	str	x0, [sp, #24]
   33710:	ldr	x0, [sp, #16]
   33714:	add	x0, x0, #0x30
   33718:	mov	x2, x0
   3371c:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   33720:	add	x1, x0, #0xa48
   33724:	ldr	x0, [sp, #24]
   33728:	bl	32a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e50>
   3372c:	str	x0, [sp, #24]
   33730:	ldr	x0, [sp, #16]
   33734:	add	x0, x0, #0x38
   33738:	mov	x2, x0
   3373c:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   33740:	add	x1, x0, #0x9f8
   33744:	ldr	x0, [sp, #24]
   33748:	bl	32a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e50>
   3374c:	str	x0, [sp, #24]
   33750:	nop
   33754:	ldr	x30, [sp], #32
   33758:	ret
   3375c:	str	x30, [sp, #-64]!
   33760:	str	x0, [sp, #40]
   33764:	str	x1, [sp, #32]
   33768:	str	x2, [sp, #24]
   3376c:	ldr	x0, [sp, #24]
   33770:	add	x0, x0, #0x8
   33774:	str	x0, [sp, #56]
   33778:	ldr	x0, [sp, #56]
   3377c:	ldr	x1, [x0, #8]
   33780:	ldr	x0, [sp, #56]
   33784:	ldr	x2, [x0, #16]
   33788:	ldr	x0, [sp, #56]
   3378c:	ldr	w0, [x0, #24]
   33790:	mov	w4, w0
   33794:	mov	x3, x2
   33798:	mov	x2, x1
   3379c:	mov	w1, #0x0                   	// #0
   337a0:	ldr	x0, [sp, #40]
   337a4:	bl	3386c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c5c>
   337a8:	str	x0, [sp, #48]
   337ac:	ldr	x0, [sp, #48]
   337b0:	cmp	x0, #0x0
   337b4:	b.eq	337cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5bbc>  // b.none
   337b8:	ldr	x1, [sp, #24]
   337bc:	ldr	x0, [sp, #48]
   337c0:	bl	33514 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5904>
   337c4:	mov	w0, #0x1                   	// #1
   337c8:	b	337d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5bc0>
   337cc:	mov	w0, #0x0                   	// #0
   337d0:	ldr	x30, [sp], #64
   337d4:	ret
   337d8:	str	x30, [sp, #-64]!
   337dc:	str	x0, [sp, #40]
   337e0:	str	x1, [sp, #32]
   337e4:	str	x2, [sp, #24]
   337e8:	ldr	x0, [sp, #24]
   337ec:	ldr	x1, [x0]
   337f0:	ldr	x0, [sp, #24]
   337f4:	ldr	x2, [x0, #8]
   337f8:	ldr	x0, [sp, #24]
   337fc:	ldr	w0, [x0, #16]
   33800:	mov	w4, w0
   33804:	mov	x3, x2
   33808:	mov	x2, x1
   3380c:	mov	w1, #0x1                   	// #1
   33810:	ldr	x0, [sp, #40]
   33814:	bl	3386c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c5c>
   33818:	str	x0, [sp, #56]
   3381c:	ldr	x0, [sp, #56]
   33820:	cmp	x0, #0x0
   33824:	b.eq	33860 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c50>  // b.none
   33828:	ldr	x1, [sp, #24]
   3382c:	ldr	x0, [sp, #56]
   33830:	bl	336e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ad4>
   33834:	ldr	x0, [sp, #24]
   33838:	ldr	x1, [x0, #48]
   3383c:	ldr	x0, [sp, #24]
   33840:	ldr	x0, [x0, #8]
   33844:	ldr	x2, [sp, #32]
   33848:	sub	x0, x2, x0
   3384c:	add	x1, x1, x0
   33850:	ldr	x0, [sp, #24]
   33854:	str	x1, [x0, #48]
   33858:	mov	w0, #0x1                   	// #1
   3385c:	b	33864 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c54>
   33860:	mov	w0, #0x0                   	// #0
   33864:	ldr	x30, [sp], #64
   33868:	ret
   3386c:	stp	x19, x30, [sp, #-80]!
   33870:	str	x0, [sp, #40]
   33874:	strb	w1, [sp, #39]
   33878:	str	x2, [sp, #24]
   3387c:	str	x3, [sp, #16]
   33880:	str	w4, [sp, #32]
   33884:	ldr	x0, [sp, #24]
   33888:	str	x0, [sp, #72]
   3388c:	str	xzr, [sp, #64]
   33890:	ldr	x1, [sp, #72]
   33894:	ldr	x0, [sp, #64]
   33898:	cmp	x1, x0
   3389c:	cset	w0, eq  // eq = none
   338a0:	and	w0, w0, #0xff
   338a4:	and	x0, x0, #0xff
   338a8:	cmp	x0, #0x0
   338ac:	b.eq	338d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5cc0>  // b.none
   338b0:	ldr	x4, [sp, #64]
   338b4:	ldr	x3, [sp, #72]
   338b8:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   338bc:	add	x2, x0, #0xa50
   338c0:	mov	w1, #0x173                 	// #371
   338c4:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   338c8:	add	x0, x0, #0x950
   338cc:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   338d0:	ldrb	w0, [sp, #39]
   338d4:	cmp	w0, #0x0
   338d8:	b.eq	338e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5cd8>  // b.none
   338dc:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   338e0:	add	x0, x0, #0xa68
   338e4:	b	338f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ce0>
   338e8:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   338ec:	add	x0, x0, #0x780
   338f0:	str	x0, [sp, #56]
   338f4:	ldr	w0, [sp, #32]
   338f8:	cmp	w0, #0x0
   338fc:	b.ne	33958 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d48>  // b.any
   33900:	ldr	x0, [sp, #40]
   33904:	add	x6, x0, #0x18
   33908:	ldr	x5, [sp, #16]
   3390c:	ldr	x4, [sp, #24]
   33910:	ldr	x3, [sp, #56]
   33914:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   33918:	add	x2, x0, #0xa70
   3391c:	mov	x1, #0x4000                	// #16384
   33920:	mov	x0, x6
   33924:	bl	2a4a8 <OnPrint@@Base+0x500>
   33928:	mov	w1, w0
   3392c:	mov	w0, #0x3fff                	// #16383
   33930:	cmp	w1, w0
   33934:	cset	w0, gt
   33938:	and	w0, w0, #0xff
   3393c:	cmp	w0, #0x0
   33940:	b.eq	339bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5dac>  // b.none
   33944:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   33948:	add	x0, x0, #0xa80
   3394c:	bl	2a3fc <OnPrint@@Base+0x454>
   33950:	mov	x0, #0x0                   	// #0
   33954:	b	339e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5dd0>
   33958:	ldr	x0, [sp, #40]
   3395c:	add	x19, x0, #0x18
   33960:	ldr	w0, [sp, #32]
   33964:	bl	2f49c <__sanitizer_get_module_and_offset_for_pc@@Base+0x188c>
   33968:	ldr	x6, [sp, #16]
   3396c:	mov	x5, x0
   33970:	ldr	x4, [sp, #24]
   33974:	ldr	x3, [sp, #56]
   33978:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   3397c:	add	x2, x0, #0xaa8
   33980:	mov	x1, #0x4000                	// #16384
   33984:	mov	x0, x19
   33988:	bl	2a4a8 <OnPrint@@Base+0x500>
   3398c:	mov	w1, w0
   33990:	mov	w0, #0x3fff                	// #16383
   33994:	cmp	w1, w0
   33998:	cset	w0, gt
   3399c:	and	w0, w0, #0xff
   339a0:	cmp	w0, #0x0
   339a4:	b.eq	339bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5dac>  // b.none
   339a8:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   339ac:	add	x0, x0, #0xa80
   339b0:	bl	2a3fc <OnPrint@@Base+0x454>
   339b4:	mov	x0, #0x0                   	// #0
   339b8:	b	339e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5dd0>
   339bc:	ldr	x0, [sp, #40]
   339c0:	ldr	x0, [x0, #16]
   339c4:	mov	x2, x0
   339c8:	ldr	x0, [sp, #40]
   339cc:	add	x0, x0, #0x18
   339d0:	mov	x1, x0
   339d4:	mov	x0, x2
   339d8:	bl	33b6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f5c>
   339dc:	nop
   339e0:	ldp	x19, x30, [sp], #80
   339e4:	ret
   339e8:	str	x30, [sp, #-80]!
   339ec:	str	x0, [sp, #40]
   339f0:	str	x1, [sp, #32]
   339f4:	strb	w2, [sp, #31]
   339f8:	adrp	x0, 7b000 <__asan_backtrace_vector_release@@Base+0x2c340>
   339fc:	add	x1, x0, #0xd20
   33a00:	ldr	x0, [sp, #40]
   33a04:	str	x1, [x0]
   33a08:	ldr	x0, [sp, #40]
   33a0c:	ldr	x1, [sp, #32]
   33a10:	str	x1, [x0, #8]
   33a14:	ldr	x0, [sp, #40]
   33a18:	mov	w1, #0xffffffff            	// #-1
   33a1c:	str	w1, [x0, #16]
   33a20:	ldr	x0, [sp, #40]
   33a24:	mov	w1, #0xffffffff            	// #-1
   33a28:	str	w1, [x0, #20]
   33a2c:	ldr	x0, [sp, #40]
   33a30:	str	xzr, [x0, #16408]
   33a34:	ldr	x0, [sp, #40]
   33a38:	add	x0, x0, #0x4, lsl #12
   33a3c:	strb	wzr, [x0, #32]
   33a40:	ldr	x0, [sp, #40]
   33a44:	add	x0, x0, #0x4, lsl #12
   33a48:	strb	wzr, [x0, #33]
   33a4c:	ldr	x0, [sp, #40]
   33a50:	add	x0, x0, #0x4, lsl #12
   33a54:	ldrb	w1, [sp, #31]
   33a58:	strb	w1, [x0, #34]
   33a5c:	ldr	x0, [sp, #40]
   33a60:	ldr	x0, [x0, #8]
   33a64:	str	x0, [sp, #72]
   33a68:	str	xzr, [sp, #64]
   33a6c:	ldr	x1, [sp, #72]
   33a70:	ldr	x0, [sp, #64]
   33a74:	cmp	x1, x0
   33a78:	cset	w0, eq  // eq = none
   33a7c:	and	w0, w0, #0xff
   33a80:	and	x0, x0, #0xff
   33a84:	cmp	x0, #0x0
   33a88:	b.eq	33aac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e9c>  // b.none
   33a8c:	ldr	x4, [sp, #64]
   33a90:	ldr	x3, [sp, #72]
   33a94:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   33a98:	add	x2, x0, #0xac0
   33a9c:	mov	w1, #0x18f                 	// #399
   33aa0:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   33aa4:	add	x0, x0, #0x950
   33aa8:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   33aac:	ldr	x0, [sp, #40]
   33ab0:	ldr	x0, [x0, #8]
   33ab4:	ldrb	w0, [x0]
   33ab8:	and	x0, x0, #0xff
   33abc:	str	x0, [sp, #56]
   33ac0:	str	xzr, [sp, #48]
   33ac4:	ldr	x1, [sp, #56]
   33ac8:	ldr	x0, [sp, #48]
   33acc:	cmp	x1, x0
   33ad0:	cset	w0, eq  // eq = none
   33ad4:	and	w0, w0, #0xff
   33ad8:	and	x0, x0, #0xff
   33adc:	cmp	x0, #0x0
   33ae0:	b.eq	33b04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ef4>  // b.none
   33ae4:	ldr	x4, [sp, #48]
   33ae8:	ldr	x3, [sp, #56]
   33aec:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   33af0:	add	x2, x0, #0xad8
   33af4:	mov	w1, #0x190                 	// #400
   33af8:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   33afc:	add	x0, x0, #0x950
   33b00:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   33b04:	nop
   33b08:	ldr	x30, [sp], #80
   33b0c:	ret
   33b10:	str	x30, [sp, #-48]!
   33b14:	str	x0, [sp, #24]
   33b18:	bl	19b70 <__sancov_default_options@@Base+0x39d4>
   33b1c:	str	x0, [sp, #40]
   33b20:	ldr	x0, [sp, #40]
   33b24:	cmp	x0, #0x0
   33b28:	b.eq	33b60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f50>  // b.none
   33b2c:	ldr	x0, [sp, #24]
   33b30:	bl	193c4 <__sancov_default_options@@Base+0x3228>
   33b34:	str	x0, [sp, #32]
   33b38:	ldr	x0, [sp, #32]
   33b3c:	cmp	x0, #0x0
   33b40:	b.eq	33b60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f50>  // b.none
   33b44:	ldr	x1, [sp, #32]
   33b48:	ldr	x0, [sp, #40]
   33b4c:	bl	21950 <__sanitizer_set_report_fd@@Base+0x2758>
   33b50:	cmp	w0, #0x0
   33b54:	cset	w0, eq  // eq = none
   33b58:	and	w0, w0, #0xff
   33b5c:	b	33b64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f54>
   33b60:	mov	w0, #0x0                   	// #0
   33b64:	ldr	x30, [sp], #48
   33b68:	ret
   33b6c:	str	x30, [sp, #-48]!
   33b70:	str	x0, [sp, #24]
   33b74:	str	x1, [sp, #16]
   33b78:	ldr	x0, [sp, #24]
   33b7c:	add	x0, x0, #0x4, lsl #12
   33b80:	ldrb	w0, [x0, #32]
   33b84:	cmp	w0, #0x0
   33b88:	b.eq	33b94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f84>  // b.none
   33b8c:	mov	x0, #0x0                   	// #0
   33b90:	b	33c60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6050>
   33b94:	ldr	x0, [sp, #24]
   33b98:	ldr	x0, [x0, #8]
   33b9c:	bl	33b10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f00>
   33ba0:	and	w0, w0, #0xff
   33ba4:	cmp	w0, #0x0
   33ba8:	b.eq	33bd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5fc0>  // b.none
   33bac:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   33bb0:	add	x0, x0, #0xaf8
   33bb4:	bl	2a3fc <OnPrint@@Base+0x454>
   33bb8:	ldr	x0, [sp, #24]
   33bbc:	add	x0, x0, #0x4, lsl #12
   33bc0:	mov	w1, #0x1                   	// #1
   33bc4:	strb	w1, [x0, #32]
   33bc8:	mov	x0, #0x0                   	// #0
   33bcc:	b	33c60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6050>
   33bd0:	ldr	x0, [sp, #24]
   33bd4:	ldr	x0, [x0, #16408]
   33bd8:	cmp	x0, #0x4
   33bdc:	b.hi	33c24 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6014>  // b.pmore
   33be0:	ldr	x1, [sp, #16]
   33be4:	ldr	x0, [sp, #24]
   33be8:	bl	33c68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6058>
   33bec:	str	x0, [sp, #40]
   33bf0:	ldr	x0, [sp, #40]
   33bf4:	cmp	x0, #0x0
   33bf8:	b.eq	33c04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ff4>  // b.none
   33bfc:	ldr	x0, [sp, #40]
   33c00:	b	33c60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6050>
   33c04:	ldr	x0, [sp, #24]
   33c08:	bl	33d24 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6114>
   33c0c:	ldr	x0, [sp, #24]
   33c10:	ldr	x0, [x0, #16408]
   33c14:	add	x1, x0, #0x1
   33c18:	ldr	x0, [sp, #24]
   33c1c:	str	x1, [x0, #16408]
   33c20:	b	33bd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5fc0>
   33c24:	ldr	x0, [sp, #24]
   33c28:	add	x0, x0, #0x4, lsl #12
   33c2c:	ldrb	w0, [x0, #32]
   33c30:	eor	w0, w0, #0x1
   33c34:	and	w0, w0, #0xff
   33c38:	cmp	w0, #0x0
   33c3c:	b.eq	33c5c <__sanitizer_get_module_and_offset_for_pc@@Base+0x604c>  // b.none
   33c40:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   33c44:	add	x0, x0, #0xb30
   33c48:	bl	2a3fc <OnPrint@@Base+0x454>
   33c4c:	ldr	x0, [sp, #24]
   33c50:	add	x0, x0, #0x4, lsl #12
   33c54:	mov	w1, #0x1                   	// #1
   33c58:	strb	w1, [x0, #32]
   33c5c:	mov	x0, #0x0                   	// #0
   33c60:	ldr	x30, [sp], #48
   33c64:	ret
   33c68:	str	x30, [sp, #-32]!
   33c6c:	str	x0, [sp, #24]
   33c70:	str	x1, [sp, #16]
   33c74:	ldr	x0, [sp, #24]
   33c78:	ldr	w0, [x0, #16]
   33c7c:	cmn	w0, #0x1
   33c80:	b.eq	33c94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6084>  // b.none
   33c84:	ldr	x0, [sp, #24]
   33c88:	ldr	w0, [x0, #20]
   33c8c:	cmn	w0, #0x1
   33c90:	b.ne	33c9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x608c>  // b.any
   33c94:	mov	x0, #0x0                   	// #0
   33c98:	b	33d1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x610c>
   33c9c:	ldr	x0, [sp, #16]
   33ca0:	bl	21bac <__sanitizer_set_report_fd@@Base+0x29b4>
   33ca4:	mov	x2, x0
   33ca8:	ldr	x1, [sp, #16]
   33cac:	ldr	x0, [sp, #24]
   33cb0:	bl	33ea8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6298>
   33cb4:	and	w0, w0, #0xff
   33cb8:	eor	w0, w0, #0x1
   33cbc:	and	w0, w0, #0xff
   33cc0:	cmp	w0, #0x0
   33cc4:	b.eq	33cd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x60c0>  // b.none
   33cc8:	mov	x0, #0x0                   	// #0
   33ccc:	b	33d1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x610c>
   33cd0:	ldr	x0, [sp, #24]
   33cd4:	ldr	x0, [x0]
   33cd8:	add	x0, x0, #0x10
   33cdc:	ldr	x3, [x0]
   33ce0:	ldr	x0, [sp, #24]
   33ce4:	add	x0, x0, #0x18
   33ce8:	mov	x2, #0x4000                	// #16384
   33cec:	mov	x1, x0
   33cf0:	ldr	x0, [sp, #24]
   33cf4:	blr	x3
   33cf8:	and	w0, w0, #0xff
   33cfc:	eor	w0, w0, #0x1
   33d00:	and	w0, w0, #0xff
   33d04:	cmp	w0, #0x0
   33d08:	b.eq	33d14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6104>  // b.none
   33d0c:	mov	x0, #0x0                   	// #0
   33d10:	b	33d1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x610c>
   33d14:	ldr	x0, [sp, #24]
   33d18:	add	x0, x0, #0x18
   33d1c:	ldr	x30, [sp], #32
   33d20:	ret
   33d24:	str	x30, [sp, #-32]!
   33d28:	str	x0, [sp, #24]
   33d2c:	ldr	x0, [sp, #24]
   33d30:	ldr	w0, [x0, #16]
   33d34:	cmn	w0, #0x1
   33d38:	b.eq	33d48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>  // b.none
   33d3c:	ldr	x0, [sp, #24]
   33d40:	ldr	w0, [x0, #16]
   33d44:	bl	27138 <__sanitizer_set_report_fd@@Base+0x7f40>
   33d48:	ldr	x0, [sp, #24]
   33d4c:	ldr	w0, [x0, #20]
   33d50:	cmn	w0, #0x1
   33d54:	b.eq	33d64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6154>  // b.none
   33d58:	ldr	x0, [sp, #24]
   33d5c:	ldr	w0, [x0, #20]
   33d60:	bl	27138 <__sanitizer_set_report_fd@@Base+0x7f40>
   33d64:	ldr	x0, [sp, #24]
   33d68:	bl	34744 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6b34>
   33d6c:	and	w0, w0, #0xff
   33d70:	ldr	x30, [sp], #32
   33d74:	ret
   33d78:	str	x30, [sp, #-80]!
   33d7c:	str	x0, [sp, #40]
   33d80:	str	x1, [sp, #32]
   33d84:	str	x2, [sp, #24]
   33d88:	ldr	x0, [sp, #24]
   33d8c:	cmp	x0, #0x0
   33d90:	b.ne	33d9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x618c>  // b.any
   33d94:	mov	w0, #0x1                   	// #1
   33d98:	b	33ea0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6290>
   33d9c:	str	xzr, [sp, #72]
   33da0:	str	xzr, [sp, #56]
   33da4:	ldr	x0, [sp, #40]
   33da8:	ldr	w5, [x0, #16]
   33dac:	ldr	x1, [sp, #32]
   33db0:	ldr	x0, [sp, #72]
   33db4:	add	x6, x1, x0
   33db8:	ldr	x1, [sp, #24]
   33dbc:	ldr	x0, [sp, #72]
   33dc0:	sub	x0, x1, x0
   33dc4:	sub	x0, x0, #0x1
   33dc8:	add	x1, sp, #0x38
   33dcc:	mov	x4, #0x0                   	// #0
   33dd0:	mov	x3, x1
   33dd4:	mov	x2, x0
   33dd8:	mov	x1, x6
   33ddc:	mov	w0, w5
   33de0:	bl	27154 <__sanitizer_set_report_fd@@Base+0x7f5c>
   33de4:	strb	w0, [sp, #71]
   33de8:	ldrb	w0, [sp, #71]
   33dec:	eor	w0, w0, #0x1
   33df0:	and	w0, w0, #0xff
   33df4:	cmp	w0, #0x0
   33df8:	b.ne	33e08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61f8>  // b.any
   33dfc:	ldr	x0, [sp, #56]
   33e00:	cmp	x0, #0x0
   33e04:	b.ne	33e28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6218>  // b.any
   33e08:	ldr	x0, [sp, #40]
   33e0c:	ldr	w0, [x0, #16]
   33e10:	mov	w1, w0
   33e14:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   33e18:	add	x0, x0, #0xb70
   33e1c:	bl	2a3fc <OnPrint@@Base+0x454>
   33e20:	mov	w0, #0x0                   	// #0
   33e24:	b	33ea0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6290>
   33e28:	ldr	x0, [sp, #56]
   33e2c:	ldr	x1, [sp, #72]
   33e30:	add	x0, x1, x0
   33e34:	str	x0, [sp, #72]
   33e38:	ldr	x0, [sp, #40]
   33e3c:	ldr	x0, [x0]
   33e40:	ldr	x3, [x0]
   33e44:	ldr	x2, [sp, #72]
   33e48:	ldr	x1, [sp, #32]
   33e4c:	ldr	x0, [sp, #40]
   33e50:	blr	x3
   33e54:	and	w0, w0, #0xff
   33e58:	cmp	w0, #0x0
   33e5c:	b.ne	33e88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6278>  // b.any
   33e60:	ldr	x0, [sp, #72]
   33e64:	add	x0, x0, #0x1
   33e68:	ldr	x1, [sp, #24]
   33e6c:	cmp	x1, x0
   33e70:	b.ne	33da0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6190>  // b.any
   33e74:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   33e78:	add	x0, x0, #0xba0
   33e7c:	bl	2a3fc <OnPrint@@Base+0x454>
   33e80:	str	xzr, [sp, #72]
   33e84:	b	33e8c <__sanitizer_get_module_and_offset_for_pc@@Base+0x627c>
   33e88:	nop
   33e8c:	ldr	x1, [sp, #32]
   33e90:	ldr	x0, [sp, #72]
   33e94:	add	x0, x1, x0
   33e98:	strb	wzr, [x0]
   33e9c:	mov	w0, #0x1                   	// #1
   33ea0:	ldr	x30, [sp], #80
   33ea4:	ret
   33ea8:	str	x30, [sp, #-64]!
   33eac:	str	x0, [sp, #40]
   33eb0:	str	x1, [sp, #32]
   33eb4:	str	x2, [sp, #24]
   33eb8:	ldr	x0, [sp, #24]
   33ebc:	cmp	x0, #0x0
   33ec0:	b.ne	33ecc <__sanitizer_get_module_and_offset_for_pc@@Base+0x62bc>  // b.any
   33ec4:	mov	w0, #0x1                   	// #1
   33ec8:	b	33f3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x632c>
   33ecc:	str	xzr, [sp, #48]
   33ed0:	ldr	x0, [sp, #40]
   33ed4:	ldr	w0, [x0, #20]
   33ed8:	add	x1, sp, #0x30
   33edc:	mov	x4, #0x0                   	// #0
   33ee0:	mov	x3, x1
   33ee4:	ldr	x2, [sp, #24]
   33ee8:	ldr	x1, [sp, #32]
   33eec:	bl	271c4 <__sanitizer_set_report_fd@@Base+0x7fcc>
   33ef0:	strb	w0, [sp, #63]
   33ef4:	ldrb	w0, [sp, #63]
   33ef8:	eor	w0, w0, #0x1
   33efc:	and	w0, w0, #0xff
   33f00:	cmp	w0, #0x0
   33f04:	b.ne	33f18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6308>  // b.any
   33f08:	ldr	x0, [sp, #48]
   33f0c:	ldr	x1, [sp, #24]
   33f10:	cmp	x1, x0
   33f14:	b.eq	33f38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6328>  // b.none
   33f18:	ldr	x0, [sp, #40]
   33f1c:	ldr	w0, [x0, #20]
   33f20:	mov	w1, w0
   33f24:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   33f28:	add	x0, x0, #0xbc8
   33f2c:	bl	2a3fc <OnPrint@@Base+0x454>
   33f30:	mov	w0, #0x0                   	// #0
   33f34:	b	33f3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x632c>
   33f38:	mov	w0, #0x1                   	// #1
   33f3c:	ldr	x30, [sp], #64
   33f40:	ret
   33f44:	sub	sp, sp, #0x10
   33f48:	str	x0, [sp, #8]
   33f4c:	ldr	x0, [sp, #8]
   33f50:	ldr	w0, [x0, #24]
   33f54:	add	sp, sp, #0x10
   33f58:	ret
   33f5c:	str	x30, [sp, #-32]!
   33f60:	str	x0, [sp, #24]
   33f64:	ldr	x0, [sp, #24]
   33f68:	bl	d64c <__lsan_do_recoverable_leak_check@@Base+0x34c0>
   33f6c:	ldr	x30, [sp], #32
   33f70:	ret
   33f74:	str	x30, [sp, #-48]!
   33f78:	str	x0, [sp, #24]
   33f7c:	str	x1, [sp, #16]
   33f80:	ldr	x0, [sp, #16]
   33f84:	str	x0, [sp, #40]
   33f88:	ldr	x0, [sp, #24]
   33f8c:	bl	d64c <__lsan_do_recoverable_leak_check@@Base+0x34c0>
   33f90:	str	x0, [sp, #32]
   33f94:	ldr	x1, [sp, #40]
   33f98:	ldr	x0, [sp, #32]
   33f9c:	cmp	x1, x0
   33fa0:	cset	w0, cs  // cs = hs, nlast
   33fa4:	and	w0, w0, #0xff
   33fa8:	and	x0, x0, #0xff
   33fac:	cmp	x0, #0x0
   33fb0:	b.eq	33fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x63c4>  // b.none
   33fb4:	ldr	x4, [sp, #32]
   33fb8:	ldr	x3, [sp, #40]
   33fbc:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   33fc0:	add	x2, x0, #0x840
   33fc4:	mov	w1, #0x2f9                 	// #761
   33fc8:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   33fcc:	add	x0, x0, #0x7f0
   33fd0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   33fd4:	ldr	x0, [sp, #24]
   33fd8:	ldr	x1, [sp, #16]
   33fdc:	bl	34204 <__sanitizer_get_module_and_offset_for_pc@@Base+0x65f4>
   33fe0:	ldr	x30, [sp], #48
   33fe4:	ret
   33fe8:	str	x30, [sp, #-64]!
   33fec:	str	x0, [sp, #40]
   33ff0:	str	x1, [sp, #32]
   33ff4:	str	x2, [sp, #24]
   33ff8:	str	xzr, [sp, #56]
   33ffc:	str	xzr, [sp, #48]
   34000:	ldr	x1, [sp, #56]
   34004:	ldr	x0, [sp, #48]
   34008:	cmp	x1, x0
   3400c:	cset	w0, eq  // eq = none
   34010:	and	w0, w0, #0xff
   34014:	and	x0, x0, #0xff
   34018:	cmp	x0, #0x0
   3401c:	b.eq	34040 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6430>  // b.none
   34020:	ldr	x4, [sp, #48]
   34024:	ldr	x3, [sp, #56]
   34028:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   3402c:	add	x2, x0, #0x8c8
   34030:	mov	w1, #0x4e                  	// #78
   34034:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   34038:	add	x0, x0, #0x8e8
   3403c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   34040:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   34044:	str	x30, [sp, #-64]!
   34048:	str	x0, [sp, #40]
   3404c:	str	x1, [sp, #32]
   34050:	str	x2, [sp, #24]
   34054:	str	xzr, [sp, #56]
   34058:	str	xzr, [sp, #48]
   3405c:	ldr	x1, [sp, #56]
   34060:	ldr	x0, [sp, #48]
   34064:	cmp	x1, x0
   34068:	cset	w0, eq  // eq = none
   3406c:	and	w0, w0, #0xff
   34070:	and	x0, x0, #0xff
   34074:	cmp	x0, #0x0
   34078:	b.eq	3409c <__sanitizer_get_module_and_offset_for_pc@@Base+0x648c>  // b.none
   3407c:	ldr	x4, [sp, #48]
   34080:	ldr	x3, [sp, #56]
   34084:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   34088:	add	x2, x0, #0x8c8
   3408c:	mov	w1, #0x57                  	// #87
   34090:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   34094:	add	x0, x0, #0x8e8
   34098:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   3409c:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   340a0:	str	x30, [sp, #-32]!
   340a4:	str	x0, [sp, #24]
   340a8:	str	x1, [sp, #16]
   340ac:	ldr	x0, [sp, #24]
   340b0:	mov	w2, #0x0                   	// #0
   340b4:	ldr	x1, [sp, #16]
   340b8:	bl	339e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5dd8>
   340bc:	adrp	x0, 7b000 <__asan_backtrace_vector_release@@Base+0x2c340>
   340c0:	add	x1, x0, #0xd78
   340c4:	ldr	x0, [sp, #24]
   340c8:	str	x1, [x0]
   340cc:	nop
   340d0:	ldr	x30, [sp], #32
   340d4:	ret
   340d8:	sub	sp, sp, #0x20
   340dc:	str	x0, [sp, #24]
   340e0:	str	x1, [sp, #16]
   340e4:	str	x2, [sp, #8]
   340e8:	ldr	x0, [sp, #8]
   340ec:	cmp	x0, #0x1
   340f0:	b.ls	34134 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6524>  // b.plast
   340f4:	ldr	x0, [sp, #8]
   340f8:	sub	x0, x0, #0x1
   340fc:	ldr	x1, [sp, #16]
   34100:	add	x0, x1, x0
   34104:	ldrb	w0, [x0]
   34108:	cmp	w0, #0xa
   3410c:	b.ne	34134 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6524>  // b.any
   34110:	ldr	x0, [sp, #8]
   34114:	sub	x0, x0, #0x2
   34118:	ldr	x1, [sp, #16]
   3411c:	add	x0, x1, x0
   34120:	ldrb	w0, [x0]
   34124:	cmp	w0, #0xa
   34128:	b.ne	34134 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6524>  // b.any
   3412c:	mov	w0, #0x1                   	// #1
   34130:	b	34138 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6528>
   34134:	mov	w0, #0x0                   	// #0
   34138:	add	sp, sp, #0x20
   3413c:	ret
   34140:	str	x30, [sp, #-80]!
   34144:	str	x0, [sp, #40]
   34148:	str	x1, [sp, #32]
   3414c:	str	x2, [sp, #24]
   34150:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   34154:	add	x0, x0, #0x9b8
   34158:	str	x0, [sp, #72]
   3415c:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   34160:	ldrb	w0, [x0, #180]
   34164:	cmp	w0, #0x0
   34168:	b.eq	34178 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6568>  // b.none
   3416c:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   34170:	add	x0, x0, #0x9d0
   34174:	b	34180 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6570>
   34178:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   3417c:	add	x0, x0, #0x9e0
   34180:	str	x0, [sp, #64]
   34184:	str	wzr, [sp, #60]
   34188:	ldr	w0, [sp, #60]
   3418c:	add	w1, w0, #0x1
   34190:	str	w1, [sp, #60]
   34194:	ldr	x1, [sp, #24]
   34198:	sxtw	x0, w0
   3419c:	ldr	x2, [sp, #32]
   341a0:	str	x2, [x1, x0, lsl #3]
   341a4:	ldr	w0, [sp, #60]
   341a8:	add	w1, w0, #0x1
   341ac:	str	w1, [sp, #60]
   341b0:	ldr	x1, [sp, #24]
   341b4:	sxtw	x0, w0
   341b8:	ldr	x2, [sp, #64]
   341bc:	str	x2, [x1, x0, lsl #3]
   341c0:	ldr	w0, [sp, #60]
   341c4:	add	w1, w0, #0x1
   341c8:	str	w1, [sp, #60]
   341cc:	ldr	x1, [sp, #24]
   341d0:	sxtw	x0, w0
   341d4:	adrp	x2, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   341d8:	add	x2, x2, #0x9b8
   341dc:	str	x2, [x1, x0, lsl #3]
   341e0:	ldr	w0, [sp, #60]
   341e4:	add	w1, w0, #0x1
   341e8:	str	w1, [sp, #60]
   341ec:	ldr	x1, [sp, #24]
   341f0:	sxtw	x0, w0
   341f4:	str	xzr, [x1, x0, lsl #3]
   341f8:	nop
   341fc:	ldr	x30, [sp], #80
   34200:	ret
   34204:	str	x30, [sp, #-48]!
   34208:	str	x0, [sp, #24]
   3420c:	str	x1, [sp, #16]
   34210:	ldr	x0, [sp, #16]
   34214:	str	x0, [sp, #40]
   34218:	ldr	x0, [sp, #24]
   3421c:	ldr	x0, [x0, #16]
   34220:	str	x0, [sp, #32]
   34224:	ldr	x1, [sp, #40]
   34228:	ldr	x0, [sp, #32]
   3422c:	cmp	x1, x0
   34230:	cset	w0, cs  // cs = hs, nlast
   34234:	and	w0, w0, #0xff
   34238:	and	x0, x0, #0xff
   3423c:	cmp	x0, #0x0
   34240:	b.eq	34264 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6654>  // b.none
   34244:	ldr	x4, [sp, #32]
   34248:	ldr	x3, [sp, #40]
   3424c:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   34250:	add	x2, x0, #0xbf8
   34254:	mov	w1, #0x1ba                 	// #442
   34258:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   3425c:	add	x0, x0, #0x7f0
   34260:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   34264:	ldr	x0, [sp, #24]
   34268:	ldr	x2, [x0]
   3426c:	ldr	x1, [sp, #16]
   34270:	mov	x0, x1
   34274:	lsl	x0, x0, #3
   34278:	add	x0, x0, x1
   3427c:	lsl	x0, x0, #3
   34280:	add	x0, x2, x0
   34284:	ldr	x30, [sp], #48
   34288:	ret
   3428c:	str	x30, [sp, #-48]!
   34290:	str	x0, [sp, #24]
   34294:	ldr	x0, [sp, #24]
   34298:	ldr	x1, [x0, #8]
   3429c:	add	x0, sp, #0x28
   342a0:	bl	3433c <__sanitizer_get_module_and_offset_for_pc@@Base+0x672c>
   342a4:	ldr	x0, [sp, #40]
   342a8:	ldr	x30, [sp], #48
   342ac:	ret
   342b0:	str	x30, [sp, #-48]!
   342b4:	str	x0, [sp, #24]
   342b8:	add	x0, sp, #0x28
   342bc:	mov	x1, #0x0                   	// #0
   342c0:	bl	3433c <__sanitizer_get_module_and_offset_for_pc@@Base+0x672c>
   342c4:	ldr	x0, [sp, #40]
   342c8:	ldr	x30, [sp], #48
   342cc:	ret
   342d0:	sub	sp, sp, #0x10
   342d4:	str	x0, [sp, #8]
   342d8:	str	x1, [sp]
   342dc:	ldr	x0, [sp, #8]
   342e0:	ldr	x1, [x0]
   342e4:	ldr	x0, [sp]
   342e8:	cmp	x1, x0
   342ec:	cset	w0, ne  // ne = any
   342f0:	and	w0, w0, #0xff
   342f4:	add	sp, sp, #0x10
   342f8:	ret
   342fc:	sub	sp, sp, #0x10
   34300:	str	x0, [sp, #8]
   34304:	ldr	x0, [sp, #8]
   34308:	ldr	x0, [x0]
   3430c:	ldr	x1, [x0, #8]
   34310:	ldr	x0, [sp, #8]
   34314:	str	x1, [x0]
   34318:	ldr	x0, [sp, #8]
   3431c:	add	sp, sp, #0x10
   34320:	ret
   34324:	sub	sp, sp, #0x10
   34328:	str	x0, [sp, #8]
   3432c:	ldr	x0, [sp, #8]
   34330:	ldr	x0, [x0]
   34334:	add	sp, sp, #0x10
   34338:	ret
   3433c:	sub	sp, sp, #0x10
   34340:	str	x0, [sp, #8]
   34344:	str	x1, [sp]
   34348:	ldr	x0, [sp, #8]
   3434c:	ldr	x1, [sp]
   34350:	str	x1, [x0]
   34354:	nop
   34358:	add	sp, sp, #0x10
   3435c:	ret
   34360:	str	x30, [sp, #-48]!
   34364:	str	x0, [sp, #24]
   34368:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   3436c:	ldr	x0, [x0, #3664]
   34370:	cmp	x0, #0x0
   34374:	b.eq	343a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6794>  // b.none
   34378:	mov	x3, #0x0                   	// #0
   3437c:	mov	x2, #0x0                   	// #0
   34380:	mov	x1, #0x0                   	// #0
   34384:	ldr	x0, [sp, #24]
   34388:	bl	6b80 <__cxa_demangle@plt>
   3438c:	str	x0, [sp, #40]
   34390:	ldr	x0, [sp, #40]
   34394:	cmp	x0, #0x0
   34398:	b.eq	343a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6794>  // b.none
   3439c:	ldr	x0, [sp, #40]
   343a0:	b	343a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6798>
   343a4:	ldr	x0, [sp, #24]
   343a8:	ldr	x30, [sp], #48
   343ac:	ret
   343b0:	str	x30, [sp, #-16]!
   343b4:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   343b8:	add	x1, x0, #0xdf8
   343bc:	mov	x0, #0x0                   	// #0
   343c0:	bl	6a80 <dlsym@plt>
   343c4:	mov	x1, x0
   343c8:	adrp	x0, 9d4000 <__asan_cplus_demangle_builtin_types@@Base+0x957b40>
   343cc:	add	x0, x0, #0x1c8
   343d0:	str	x1, [x0]
   343d4:	bl	6af0 <dlerror@plt>
   343d8:	nop
   343dc:	ldr	x30, [sp], #16
   343e0:	ret
   343e4:	stp	x19, x30, [sp, #-32]!
   343e8:	str	x0, [sp, #24]
   343ec:	ldr	x0, [sp, #24]
   343f0:	cmp	x0, #0x0
   343f4:	b.ne	34400 <__sanitizer_get_module_and_offset_for_pc@@Base+0x67f0>  // b.any
   343f8:	mov	x0, #0x0                   	// #0
   343fc:	b	34474 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6864>
   34400:	ldr	x0, [sp, #24]
   34404:	ldrb	w0, [x0]
   34408:	cmp	w0, #0x5f
   3440c:	b.ne	34424 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6814>  // b.any
   34410:	ldr	x0, [sp, #24]
   34414:	add	x0, x0, #0x1
   34418:	ldrb	w0, [x0]
   3441c:	cmp	w0, #0x54
   34420:	b.eq	3442c <__sanitizer_get_module_and_offset_for_pc@@Base+0x681c>  // b.none
   34424:	mov	x0, #0x0                   	// #0
   34428:	b	34474 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6864>
   3442c:	adrp	x0, 9d4000 <__asan_cplus_demangle_builtin_types@@Base+0x957b40>
   34430:	add	x0, x0, #0x1c8
   34434:	ldr	x0, [x0]
   34438:	cmp	x0, #0x0
   3443c:	b.eq	34470 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6860>  // b.none
   34440:	adrp	x0, 9d4000 <__asan_cplus_demangle_builtin_types@@Base+0x957b40>
   34444:	add	x0, x0, #0x1c8
   34448:	ldr	x19, [x0]
   3444c:	ldr	x0, [sp, #24]
   34450:	bl	21bac <__sanitizer_set_report_fd@@Base+0x29b4>
   34454:	mov	w4, #0x0                   	// #0
   34458:	mov	x3, #0x0                   	// #0
   3445c:	mov	x2, #0x0                   	// #0
   34460:	mov	x1, x0
   34464:	ldr	x0, [sp, #24]
   34468:	blr	x19
   3446c:	b	34474 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6864>
   34470:	mov	x0, #0x0                   	// #0
   34474:	ldp	x19, x30, [sp], #32
   34478:	ret
   3447c:	str	x30, [sp, #-48]!
   34480:	str	x0, [sp, #24]
   34484:	ldr	x0, [sp, #24]
   34488:	cmp	x0, #0x0
   3448c:	b.ne	34498 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6888>  // b.any
   34490:	mov	x0, #0x0                   	// #0
   34494:	b	344c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x68b4>
   34498:	ldr	x0, [sp, #24]
   3449c:	bl	343e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x67d4>
   344a0:	str	x0, [sp, #40]
   344a4:	ldr	x0, [sp, #40]
   344a8:	cmp	x0, #0x0
   344ac:	b.eq	344b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x68a8>  // b.none
   344b0:	ldr	x0, [sp, #40]
   344b4:	b	344c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x68b4>
   344b8:	ldr	x0, [sp, #24]
   344bc:	bl	34360 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6750>
   344c0:	nop
   344c4:	ldr	x30, [sp], #48
   344c8:	ret
   344cc:	str	x30, [sp, #-144]!
   344d0:	str	x0, [sp, #24]
   344d4:	str	x1, [sp, #16]
   344d8:	str	xzr, [sp, #136]
   344dc:	str	xzr, [sp, #128]
   344e0:	str	wzr, [sp, #124]
   344e4:	ldr	w0, [sp, #124]
   344e8:	cmp	w0, #0x4
   344ec:	b.gt	34658 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a48>
   344f0:	add	x1, sp, #0x28
   344f4:	ldrsw	x0, [sp, #124]
   344f8:	lsl	x0, x0, #3
   344fc:	add	x0, x1, x0
   34500:	bl	6960 <pipe@plt>
   34504:	cmn	w0, #0x1
   34508:	cset	w0, eq  // eq = none
   3450c:	and	w0, w0, #0xff
   34510:	cmp	w0, #0x0
   34514:	b.eq	3456c <__sanitizer_get_module_and_offset_for_pc@@Base+0x695c>  // b.none
   34518:	str	wzr, [sp, #120]
   3451c:	ldr	w1, [sp, #120]
   34520:	ldr	w0, [sp, #124]
   34524:	cmp	w1, w0
   34528:	b.ge	34564 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6954>  // b.tcont
   3452c:	ldrsw	x0, [sp, #120]
   34530:	lsl	x0, x0, #3
   34534:	add	x1, sp, #0x28
   34538:	ldr	w0, [x1, x0]
   3453c:	bl	22fa8 <__sanitizer_set_report_fd@@Base+0x3db0>
   34540:	ldrsw	x0, [sp, #120]
   34544:	lsl	x0, x0, #3
   34548:	add	x1, sp, #0x2c
   3454c:	ldr	w0, [x1, x0]
   34550:	bl	22fa8 <__sanitizer_set_report_fd@@Base+0x3db0>
   34554:	ldr	w0, [sp, #120]
   34558:	add	w0, w0, #0x1
   3455c:	str	w0, [sp, #120]
   34560:	b	3451c <__sanitizer_get_module_and_offset_for_pc@@Base+0x690c>
   34564:	mov	w0, #0x0                   	// #0
   34568:	b	3473c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6b2c>
   3456c:	ldrsw	x0, [sp, #124]
   34570:	lsl	x0, x0, #3
   34574:	add	x1, sp, #0x28
   34578:	ldr	w0, [x1, x0]
   3457c:	cmp	w0, #0x2
   34580:	b.le	34644 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a34>
   34584:	ldrsw	x0, [sp, #124]
   34588:	lsl	x0, x0, #3
   3458c:	add	x1, sp, #0x2c
   34590:	ldr	w0, [x1, x0]
   34594:	cmp	w0, #0x2
   34598:	b.le	34644 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a34>
   3459c:	ldr	x0, [sp, #136]
   345a0:	cmp	x0, #0x0
   345a4:	b.ne	345c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x69b0>  // b.any
   345a8:	add	x1, sp, #0x28
   345ac:	ldrsw	x0, [sp, #124]
   345b0:	lsl	x0, x0, #3
   345b4:	add	x0, x1, x0
   345b8:	str	x0, [sp, #136]
   345bc:	b	34644 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a34>
   345c0:	add	x1, sp, #0x28
   345c4:	ldrsw	x0, [sp, #124]
   345c8:	lsl	x0, x0, #3
   345cc:	add	x0, x1, x0
   345d0:	str	x0, [sp, #128]
   345d4:	str	wzr, [sp, #116]
   345d8:	ldr	w1, [sp, #116]
   345dc:	ldr	w0, [sp, #124]
   345e0:	cmp	w1, w0
   345e4:	b.ge	34654 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a44>  // b.tcont
   345e8:	add	x1, sp, #0x28
   345ec:	ldrsw	x0, [sp, #116]
   345f0:	lsl	x0, x0, #3
   345f4:	add	x0, x1, x0
   345f8:	ldr	x1, [sp, #136]
   345fc:	cmp	x1, x0
   34600:	b.eq	34630 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a20>  // b.none
   34604:	ldrsw	x0, [sp, #116]
   34608:	lsl	x0, x0, #3
   3460c:	add	x1, sp, #0x28
   34610:	ldr	w0, [x1, x0]
   34614:	bl	22fa8 <__sanitizer_set_report_fd@@Base+0x3db0>
   34618:	ldrsw	x0, [sp, #116]
   3461c:	lsl	x0, x0, #3
   34620:	add	x1, sp, #0x2c
   34624:	ldr	w0, [x1, x0]
   34628:	bl	22fa8 <__sanitizer_set_report_fd@@Base+0x3db0>
   3462c:	b	34634 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a24>
   34630:	nop
   34634:	ldr	w0, [sp, #116]
   34638:	add	w0, w0, #0x1
   3463c:	str	w0, [sp, #116]
   34640:	b	345d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c8>
   34644:	ldr	w0, [sp, #124]
   34648:	add	w0, w0, #0x1
   3464c:	str	w0, [sp, #124]
   34650:	b	344e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x68d4>
   34654:	nop
   34658:	ldr	x0, [sp, #136]
   3465c:	str	x0, [sp, #104]
   34660:	str	xzr, [sp, #96]
   34664:	ldr	x1, [sp, #104]
   34668:	ldr	x0, [sp, #96]
   3466c:	cmp	x1, x0
   34670:	cset	w0, eq  // eq = none
   34674:	and	w0, w0, #0xff
   34678:	and	x0, x0, #0xff
   3467c:	cmp	x0, #0x0
   34680:	b.eq	346a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a94>  // b.none
   34684:	ldr	x4, [sp, #96]
   34688:	ldr	x3, [sp, #104]
   3468c:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   34690:	add	x2, x0, #0xe08
   34694:	mov	w1, #0x87                  	// #135
   34698:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   3469c:	add	x0, x0, #0xe18
   346a0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   346a4:	ldr	x0, [sp, #128]
   346a8:	str	x0, [sp, #88]
   346ac:	str	xzr, [sp, #80]
   346b0:	ldr	x1, [sp, #88]
   346b4:	ldr	x0, [sp, #80]
   346b8:	cmp	x1, x0
   346bc:	cset	w0, eq  // eq = none
   346c0:	and	w0, w0, #0xff
   346c4:	and	x0, x0, #0xff
   346c8:	cmp	x0, #0x0
   346cc:	b.eq	346f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6ae0>  // b.none
   346d0:	ldr	x4, [sp, #80]
   346d4:	ldr	x3, [sp, #88]
   346d8:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   346dc:	add	x2, x0, #0xe68
   346e0:	mov	w1, #0x88                  	// #136
   346e4:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   346e8:	add	x0, x0, #0xe18
   346ec:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   346f0:	ldr	x0, [sp, #136]
   346f4:	ldr	w1, [x0]
   346f8:	ldr	x0, [sp, #24]
   346fc:	str	w1, [x0]
   34700:	ldr	x0, [sp, #24]
   34704:	add	x0, x0, #0x4
   34708:	ldr	x1, [sp, #136]
   3470c:	ldr	w1, [x1, #4]
   34710:	str	w1, [x0]
   34714:	ldr	x0, [sp, #128]
   34718:	ldr	w1, [x0]
   3471c:	ldr	x0, [sp, #16]
   34720:	str	w1, [x0]
   34724:	ldr	x0, [sp, #16]
   34728:	add	x0, x0, #0x4
   3472c:	ldr	x1, [sp, #128]
   34730:	ldr	w1, [x1, #4]
   34734:	str	w1, [x0]
   34738:	mov	w0, #0x1                   	// #1
   3473c:	ldr	x30, [sp], #144
   34740:	ret
   34744:	str	x30, [sp, #-144]!
   34748:	str	x0, [sp, #24]
   3474c:	ldr	x0, [sp, #24]
   34750:	ldr	x0, [x0, #8]
   34754:	bl	233ec <__sanitizer_set_report_fd@@Base+0x41f4>
   34758:	and	w0, w0, #0xff
   3475c:	eor	w0, w0, #0x1
   34760:	and	w0, w0, #0xff
   34764:	cmp	w0, #0x0
   34768:	b.eq	347ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x6b9c>  // b.none
   3476c:	ldr	x0, [sp, #24]
   34770:	add	x0, x0, #0x4, lsl #12
   34774:	ldrb	w0, [x0, #33]
   34778:	eor	w0, w0, #0x1
   3477c:	and	w0, w0, #0xff
   34780:	cmp	w0, #0x0
   34784:	b.eq	347a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6b94>  // b.none
   34788:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   3478c:	add	x0, x0, #0xe80
   34790:	bl	2a3fc <OnPrint@@Base+0x454>
   34794:	ldr	x0, [sp, #24]
   34798:	add	x0, x0, #0x4, lsl #12
   3479c:	mov	w1, #0x1                   	// #1
   347a0:	strb	w1, [x0, #33]
   347a4:	mov	w0, #0x0                   	// #0
   347a8:	b	34984 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6d74>
   347ac:	mov	w0, #0xffffffff            	// #-1
   347b0:	str	w0, [sp, #140]
   347b4:	add	x0, sp, #0x60
   347b8:	mov	x2, #0x8                   	// #8
   347bc:	mov	w1, #0x0                   	// #0
   347c0:	bl	21754 <__sanitizer_set_report_fd@@Base+0x255c>
   347c4:	add	x0, sp, #0x58
   347c8:	mov	x2, #0x8                   	// #8
   347cc:	mov	w1, #0x0                   	// #0
   347d0:	bl	21754 <__sanitizer_set_report_fd@@Base+0x255c>
   347d4:	add	x1, sp, #0x58
   347d8:	add	x0, sp, #0x60
   347dc:	bl	344cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x68bc>
   347e0:	and	w0, w0, #0xff
   347e4:	eor	w0, w0, #0x1
   347e8:	and	w0, w0, #0xff
   347ec:	cmp	w0, #0x0
   347f0:	b.eq	34814 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6c04>  // b.none
   347f4:	bl	6d00 <__errno_location@plt>
   347f8:	ldr	w0, [x0]
   347fc:	mov	w1, w0
   34800:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   34804:	add	x0, x0, #0xeb0
   34808:	bl	2a3fc <OnPrint@@Base+0x454>
   3480c:	mov	w0, #0x0                   	// #0
   34810:	b	34984 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6d74>
   34814:	ldr	x0, [sp, #24]
   34818:	add	x0, x0, #0x4, lsl #12
   3481c:	ldrb	w0, [x0, #34]
   34820:	cmp	w0, #0x0
   34824:	b.eq	34874 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6c64>  // b.none
   34828:	str	xzr, [sp, #112]
   3482c:	str	xzr, [sp, #104]
   34830:	ldr	x1, [sp, #112]
   34834:	ldr	x0, [sp, #104]
   34838:	cmp	x1, x0
   3483c:	cset	w0, eq  // eq = none
   34840:	and	w0, w0, #0xff
   34844:	and	x0, x0, #0xff
   34848:	cmp	x0, #0x0
   3484c:	b.eq	34870 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6c60>  // b.none
   34850:	ldr	x4, [sp, #104]
   34854:	ldr	x3, [sp, #112]
   34858:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   3485c:	add	x2, x0, #0xd88
   34860:	mov	w1, #0xde                  	// #222
   34864:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   34868:	add	x0, x0, #0xe18
   3486c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   34870:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   34874:	ldr	x0, [sp, #24]
   34878:	ldr	x0, [x0]
   3487c:	add	x0, x0, #0x8
   34880:	ldr	x3, [x0]
   34884:	ldr	x0, [sp, #24]
   34888:	ldr	x0, [x0, #8]
   3488c:	add	x1, sp, #0x28
   34890:	mov	x2, x1
   34894:	mov	x1, x0
   34898:	ldr	x0, [sp, #24]
   3489c:	blr	x3
   348a0:	ldr	x0, [sp, #24]
   348a4:	ldr	x0, [x0, #8]
   348a8:	ldr	w2, [sp, #88]
   348ac:	ldr	w3, [sp, #100]
   348b0:	add	x1, sp, #0x28
   348b4:	mov	w4, #0xffffffff            	// #-1
   348b8:	bl	28b70 <__sanitizer_set_report_fd@@Base+0x9978>
   348bc:	str	w0, [sp, #140]
   348c0:	ldr	w0, [sp, #140]
   348c4:	cmp	w0, #0x0
   348c8:	b.ge	348e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6cd4>  // b.tcont
   348cc:	ldr	w0, [sp, #96]
   348d0:	bl	22fa8 <__sanitizer_set_report_fd@@Base+0x3db0>
   348d4:	ldr	w0, [sp, #92]
   348d8:	bl	22fa8 <__sanitizer_set_report_fd@@Base+0x3db0>
   348dc:	mov	w0, #0x0                   	// #0
   348e0:	b	34984 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6d74>
   348e4:	ldr	w1, [sp, #96]
   348e8:	ldr	x0, [sp, #24]
   348ec:	str	w1, [x0, #16]
   348f0:	ldr	w1, [sp, #92]
   348f4:	ldr	x0, [sp, #24]
   348f8:	str	w1, [x0, #20]
   348fc:	ldrsw	x0, [sp, #140]
   34900:	str	x0, [sp, #128]
   34904:	str	xzr, [sp, #120]
   34908:	ldr	x1, [sp, #128]
   3490c:	ldr	x0, [sp, #120]
   34910:	cmp	x1, x0
   34914:	cset	w0, ls  // ls = plast
   34918:	and	w0, w0, #0xff
   3491c:	and	x0, x0, #0xff
   34920:	cmp	x0, #0x0
   34924:	b.eq	34948 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6d38>  // b.none
   34928:	ldr	x4, [sp, #120]
   3492c:	ldr	x3, [sp, #128]
   34930:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   34934:	add	x2, x0, #0xf00
   34938:	mov	w1, #0xef                  	// #239
   3493c:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   34940:	add	x0, x0, #0xe18
   34944:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   34948:	mov	w0, #0xa                   	// #10
   3494c:	bl	27e30 <__sanitizer_set_report_fd@@Base+0x8c38>
   34950:	ldr	w0, [sp, #140]
   34954:	bl	28cf0 <__sanitizer_set_report_fd@@Base+0x9af8>
   34958:	and	w0, w0, #0xff
   3495c:	eor	w0, w0, #0x1
   34960:	and	w0, w0, #0xff
   34964:	cmp	w0, #0x0
   34968:	b.eq	34980 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6d70>  // b.none
   3496c:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   34970:	add	x0, x0, #0xf10
   34974:	bl	2a3fc <OnPrint@@Base+0x454>
   34978:	mov	w0, #0x0                   	// #0
   3497c:	b	34984 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6d74>
   34980:	mov	w0, #0x1                   	// #1
   34984:	ldr	x30, [sp], #144
   34988:	ret
   3498c:	str	x30, [sp, #-64]!
   34990:	str	x0, [sp, #40]
   34994:	str	x1, [sp, #32]
   34998:	str	x2, [sp, #24]
   3499c:	mov	x0, #0x8                   	// #8
   349a0:	str	x0, [sp, #56]
   349a4:	ldr	x0, [sp, #24]
   349a8:	cmp	x0, #0x8
   349ac:	b.hi	349b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6da8>  // b.pmore
   349b0:	mov	w0, #0x0                   	// #0
   349b4:	b	349e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6dd8>
   349b8:	ldr	x0, [sp, #24]
   349bc:	sub	x0, x0, #0x8
   349c0:	ldr	x1, [sp, #32]
   349c4:	add	x3, x1, x0
   349c8:	mov	x2, #0x8                   	// #8
   349cc:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   349d0:	add	x1, x0, #0xf70
   349d4:	mov	x0, x3
   349d8:	bl	21504 <__sanitizer_set_report_fd@@Base+0x230c>
   349dc:	cmp	w0, #0x0
   349e0:	cset	w0, eq  // eq = none
   349e4:	and	w0, w0, #0xff
   349e8:	ldr	x30, [sp], #64
   349ec:	ret
   349f0:	str	x30, [sp, #-32]!
   349f4:	str	x0, [sp, #24]
   349f8:	str	x1, [sp, #16]
   349fc:	ldr	x0, [sp, #16]
   34a00:	bl	3447c <__sanitizer_get_module_and_offset_for_pc@@Base+0x686c>
   34a04:	ldr	x30, [sp], #32
   34a08:	ret
   34a0c:	stp	x19, x30, [sp, #-80]!
   34a10:	str	x0, [sp, #24]
   34a14:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   34a18:	ldr	x0, [x0, #8]
   34a1c:	str	x0, [sp, #72]
   34a20:	ldr	x0, [sp, #72]
   34a24:	cmp	x0, #0x0
   34a28:	b.eq	34a38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6e28>  // b.none
   34a2c:	ldr	x0, [sp, #72]
   34a30:	bl	193c4 <__sancov_default_options@@Base+0x3228>
   34a34:	b	34a40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6e30>
   34a38:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   34a3c:	add	x0, x0, #0xfd8
   34a40:	str	x0, [sp, #64]
   34a44:	ldr	x0, [sp, #72]
   34a48:	cmp	x0, #0x0
   34a4c:	b.eq	34a90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6e80>  // b.none
   34a50:	ldr	x0, [sp, #72]
   34a54:	ldrb	w0, [x0]
   34a58:	cmp	w0, #0x0
   34a5c:	b.ne	34a90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6e80>  // b.any
   34a60:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
   34a64:	sxtw	x0, w0
   34a68:	cmp	x0, #0x1
   34a6c:	cset	w0, hi  // hi = pmore
   34a70:	and	w0, w0, #0xff
   34a74:	cmp	w0, #0x0
   34a78:	b.eq	34a88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6e78>  // b.none
   34a7c:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   34a80:	add	x0, x0, #0xfe0
   34a84:	bl	2a3fc <OnPrint@@Base+0x454>
   34a88:	mov	x19, #0x0                   	// #0
   34a8c:	b	34d14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7104>
   34a90:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   34a94:	add	x1, x0, #0x10
   34a98:	ldr	x0, [sp, #64]
   34a9c:	bl	21950 <__sanitizer_set_report_fd@@Base+0x2758>
   34aa0:	cmp	w0, #0x0
   34aa4:	cset	w0, eq  // eq = none
   34aa8:	and	w0, w0, #0xff
   34aac:	cmp	w0, #0x0
   34ab0:	b.eq	34b04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6ef4>  // b.none
   34ab4:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
   34ab8:	sxtw	x0, w0
   34abc:	cmp	x0, #0x1
   34ac0:	cset	w0, hi  // hi = pmore
   34ac4:	and	w0, w0, #0xff
   34ac8:	cmp	w0, #0x0
   34acc:	b.eq	34ae0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6ed0>  // b.none
   34ad0:	ldr	x1, [sp, #72]
   34ad4:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   34ad8:	add	x0, x0, #0x20
   34adc:	bl	2a3fc <OnPrint@@Base+0x454>
   34ae0:	ldr	x1, [sp, #24]
   34ae4:	mov	x0, #0x4018                	// #16408
   34ae8:	bl	a5c0 <__lsan_do_recoverable_leak_check@@Base+0x434>
   34aec:	mov	x19, x0
   34af0:	ldr	x2, [sp, #24]
   34af4:	ldr	x1, [sp, #72]
   34af8:	mov	x0, x19
   34afc:	bl	332ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x56dc>
   34b00:	b	34d14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7104>
   34b04:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   34b08:	add	x1, x0, #0x58
   34b0c:	ldr	x0, [sp, #64]
   34b10:	bl	21950 <__sanitizer_set_report_fd@@Base+0x2758>
   34b14:	cmp	w0, #0x0
   34b18:	cset	w0, eq  // eq = none
   34b1c:	and	w0, w0, #0xff
   34b20:	cmp	w0, #0x0
   34b24:	b.eq	34b38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6f28>  // b.none
   34b28:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   34b2c:	add	x0, x0, #0x60
   34b30:	bl	2a3fc <OnPrint@@Base+0x454>
   34b34:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   34b38:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   34b3c:	add	x1, x0, #0x98
   34b40:	ldr	x0, [sp, #64]
   34b44:	bl	21950 <__sanitizer_set_report_fd@@Base+0x2758>
   34b48:	cmp	w0, #0x0
   34b4c:	cset	w0, eq  // eq = none
   34b50:	and	w0, w0, #0xff
   34b54:	cmp	w0, #0x0
   34b58:	b.eq	34bac <__sanitizer_get_module_and_offset_for_pc@@Base+0x6f9c>  // b.none
   34b5c:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
   34b60:	sxtw	x0, w0
   34b64:	cmp	x0, #0x1
   34b68:	cset	w0, hi  // hi = pmore
   34b6c:	and	w0, w0, #0xff
   34b70:	cmp	w0, #0x0
   34b74:	b.eq	34b88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6f78>  // b.none
   34b78:	ldr	x1, [sp, #72]
   34b7c:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   34b80:	add	x0, x0, #0xa8
   34b84:	bl	2a3fc <OnPrint@@Base+0x454>
   34b88:	ldr	x1, [sp, #24]
   34b8c:	mov	x0, #0x38                  	// #56
   34b90:	bl	a5c0 <__lsan_do_recoverable_leak_check@@Base+0x434>
   34b94:	mov	x19, x0
   34b98:	ldr	x2, [sp, #24]
   34b9c:	ldr	x1, [sp, #72]
   34ba0:	mov	x0, x19
   34ba4:	bl	350e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x74d4>
   34ba8:	b	34d14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7104>
   34bac:	ldr	x0, [sp, #72]
   34bb0:	cmp	x0, #0x0
   34bb4:	b.eq	34bcc <__sanitizer_get_module_and_offset_for_pc@@Base+0x6fbc>  // b.none
   34bb8:	ldr	x1, [sp, #72]
   34bbc:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   34bc0:	add	x0, x0, #0xd8
   34bc4:	bl	2a3fc <OnPrint@@Base+0x454>
   34bc8:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   34bcc:	ldr	x0, [sp, #72]
   34bd0:	cmp	x0, #0x0
   34bd4:	cset	w0, eq  // eq = none
   34bd8:	and	w0, w0, #0xff
   34bdc:	and	x0, x0, #0xff
   34be0:	str	x0, [sp, #56]
   34be4:	str	xzr, [sp, #48]
   34be8:	ldr	x1, [sp, #56]
   34bec:	ldr	x0, [sp, #48]
   34bf0:	cmp	x1, x0
   34bf4:	cset	w0, eq  // eq = none
   34bf8:	and	w0, w0, #0xff
   34bfc:	and	x0, x0, #0xff
   34c00:	cmp	x0, #0x0
   34c04:	b.eq	34c28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7018>  // b.none
   34c08:	ldr	x4, [sp, #48]
   34c0c:	ldr	x3, [sp, #56]
   34c10:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   34c14:	add	x2, x0, #0x170
   34c18:	mov	w1, #0x1db                 	// #475
   34c1c:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   34c20:	add	x0, x0, #0xe18
   34c24:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   34c28:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   34c2c:	add	x0, x0, #0x10
   34c30:	bl	1f060 <__sanitizer_cov_pcs_init@@Base+0x3fc4>
   34c34:	str	x0, [sp, #40]
   34c38:	ldr	x0, [sp, #40]
   34c3c:	cmp	x0, #0x0
   34c40:	b.eq	34c94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7084>  // b.none
   34c44:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
   34c48:	sxtw	x0, w0
   34c4c:	cmp	x0, #0x1
   34c50:	cset	w0, hi  // hi = pmore
   34c54:	and	w0, w0, #0xff
   34c58:	cmp	w0, #0x0
   34c5c:	b.eq	34c70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7060>  // b.none
   34c60:	ldr	x1, [sp, #40]
   34c64:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   34c68:	add	x0, x0, #0x190
   34c6c:	bl	2a3fc <OnPrint@@Base+0x454>
   34c70:	ldr	x1, [sp, #24]
   34c74:	mov	x0, #0x4018                	// #16408
   34c78:	bl	a5c0 <__lsan_do_recoverable_leak_check@@Base+0x434>
   34c7c:	mov	x19, x0
   34c80:	ldr	x2, [sp, #24]
   34c84:	ldr	x1, [sp, #40]
   34c88:	mov	x0, x19
   34c8c:	bl	332ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x56dc>
   34c90:	b	34d14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7104>
   34c94:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   34c98:	ldrb	w0, [x0, #16]
   34c9c:	cmp	w0, #0x0
   34ca0:	b.eq	34d10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7100>  // b.none
   34ca4:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   34ca8:	add	x0, x0, #0x98
   34cac:	bl	1f060 <__sanitizer_cov_pcs_init@@Base+0x3fc4>
   34cb0:	str	x0, [sp, #32]
   34cb4:	ldr	x0, [sp, #32]
   34cb8:	cmp	x0, #0x0
   34cbc:	b.eq	34d10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7100>  // b.none
   34cc0:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
   34cc4:	sxtw	x0, w0
   34cc8:	cmp	x0, #0x1
   34ccc:	cset	w0, hi  // hi = pmore
   34cd0:	and	w0, w0, #0xff
   34cd4:	cmp	w0, #0x0
   34cd8:	b.eq	34cec <__sanitizer_get_module_and_offset_for_pc@@Base+0x70dc>  // b.none
   34cdc:	ldr	x1, [sp, #32]
   34ce0:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   34ce4:	add	x0, x0, #0x1b8
   34ce8:	bl	2a3fc <OnPrint@@Base+0x454>
   34cec:	ldr	x1, [sp, #24]
   34cf0:	mov	x0, #0x38                  	// #56
   34cf4:	bl	a5c0 <__lsan_do_recoverable_leak_check@@Base+0x434>
   34cf8:	mov	x19, x0
   34cfc:	ldr	x2, [sp, #24]
   34d00:	ldr	x1, [sp, #32]
   34d04:	mov	x0, x19
   34d08:	bl	350e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x74d4>
   34d0c:	b	34d14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7104>
   34d10:	mov	x19, #0x0                   	// #0
   34d14:	mov	x0, x19
   34d18:	ldp	x19, x30, [sp], #80
   34d1c:	ret
   34d20:	str	x30, [sp, #-64]!
   34d24:	str	x0, [sp, #24]
   34d28:	str	x1, [sp, #16]
   34d2c:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   34d30:	ldrb	w0, [x0]
   34d34:	eor	w0, w0, #0x1
   34d38:	and	w0, w0, #0xff
   34d3c:	cmp	w0, #0x0
   34d40:	b.eq	34d70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7160>  // b.none
   34d44:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
   34d48:	sxtw	x0, w0
   34d4c:	cmp	x0, #0x1
   34d50:	cset	w0, hi  // hi = pmore
   34d54:	and	w0, w0, #0xff
   34d58:	cmp	w0, #0x0
   34d5c:	b.eq	34e74 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7264>  // b.none
   34d60:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   34d64:	add	x0, x0, #0x1d8
   34d68:	bl	2a3fc <OnPrint@@Base+0x454>
   34d6c:	b	34e74 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7264>
   34d70:	bl	16aac <__sancov_default_options@@Base+0x910>
   34d74:	and	w0, w0, #0xff
   34d78:	cmp	w0, #0x0
   34d7c:	b.eq	34dac <__sanitizer_get_module_and_offset_for_pc@@Base+0x719c>  // b.none
   34d80:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
   34d84:	sxtw	x0, w0
   34d88:	cmp	x0, #0x1
   34d8c:	cset	w0, hi  // hi = pmore
   34d90:	and	w0, w0, #0xff
   34d94:	cmp	w0, #0x0
   34d98:	b.eq	34dfc <__sanitizer_get_module_and_offset_for_pc@@Base+0x71ec>  // b.none
   34d9c:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   34da0:	add	x0, x0, #0x1f8
   34da4:	bl	2a3fc <OnPrint@@Base+0x454>
   34da8:	b	34dfc <__sanitizer_get_module_and_offset_for_pc@@Base+0x71ec>
   34dac:	ldr	x0, [sp, #16]
   34db0:	bl	35358 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7748>
   34db4:	str	x0, [sp, #56]
   34db8:	ldr	x0, [sp, #56]
   34dbc:	cmp	x0, #0x0
   34dc0:	b.eq	34dfc <__sanitizer_get_module_and_offset_for_pc@@Base+0x71ec>  // b.none
   34dc4:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
   34dc8:	sxtw	x0, w0
   34dcc:	cmp	x0, #0x1
   34dd0:	cset	w0, hi  // hi = pmore
   34dd4:	and	w0, w0, #0xff
   34dd8:	cmp	w0, #0x0
   34ddc:	b.eq	34dec <__sanitizer_get_module_and_offset_for_pc@@Base+0x71dc>  // b.none
   34de0:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   34de4:	add	x0, x0, #0x228
   34de8:	bl	2a3fc <OnPrint@@Base+0x454>
   34dec:	ldr	x1, [sp, #56]
   34df0:	ldr	x0, [sp, #24]
   34df4:	bl	35770 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7b60>
   34df8:	b	34e78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7268>
   34dfc:	ldr	x0, [sp, #16]
   34e00:	bl	32590 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4980>
   34e04:	str	x0, [sp, #48]
   34e08:	ldr	x0, [sp, #48]
   34e0c:	cmp	x0, #0x0
   34e10:	b.eq	34e4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x723c>  // b.none
   34e14:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
   34e18:	sxtw	x0, w0
   34e1c:	cmp	x0, #0x1
   34e20:	cset	w0, hi  // hi = pmore
   34e24:	and	w0, w0, #0xff
   34e28:	cmp	w0, #0x0
   34e2c:	b.eq	34e3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x722c>  // b.none
   34e30:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   34e34:	add	x0, x0, #0x248
   34e38:	bl	2a3fc <OnPrint@@Base+0x454>
   34e3c:	ldr	x1, [sp, #48]
   34e40:	ldr	x0, [sp, #24]
   34e44:	bl	35770 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7b60>
   34e48:	b	34e78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7268>
   34e4c:	ldr	x0, [sp, #16]
   34e50:	bl	34a0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6dfc>
   34e54:	str	x0, [sp, #40]
   34e58:	ldr	x0, [sp, #40]
   34e5c:	cmp	x0, #0x0
   34e60:	b.eq	34e78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7268>  // b.none
   34e64:	ldr	x1, [sp, #40]
   34e68:	ldr	x0, [sp, #24]
   34e6c:	bl	35770 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7b60>
   34e70:	b	34e78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7268>
   34e74:	nop
   34e78:	ldr	x30, [sp], #64
   34e7c:	ret
   34e80:	stp	x19, x30, [sp, #-96]!
   34e84:	add	x0, sp, #0x30
   34e88:	bl	35808 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7bf8>
   34e8c:	add	x2, sp, #0x30
   34e90:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   34e94:	ldr	x1, [x0, #3808]
   34e98:	mov	x0, x2
   34e9c:	bl	34d20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7110>
   34ea0:	add	x2, sp, #0x48
   34ea4:	add	x3, sp, #0x30
   34ea8:	ldp	x0, x1, [x3]
   34eac:	stp	x0, x1, [x2]
   34eb0:	ldr	x0, [x3, #16]
   34eb4:	str	x0, [x2, #16]
   34eb8:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   34ebc:	ldr	x1, [x0, #3808]
   34ec0:	mov	x0, #0xf0                  	// #240
   34ec4:	bl	a5c0 <__lsan_do_recoverable_leak_check@@Base+0x434>
   34ec8:	mov	x19, x0
   34ecc:	add	x2, sp, #0x10
   34ed0:	add	x3, sp, #0x48
   34ed4:	ldp	x0, x1, [x3]
   34ed8:	stp	x0, x1, [x2]
   34edc:	ldr	x0, [x3, #16]
   34ee0:	str	x0, [x2, #16]
   34ee4:	add	x0, sp, #0x10
   34ee8:	mov	x1, x0
   34eec:	mov	x0, x19
   34ef0:	bl	31bb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3fa4>
   34ef4:	mov	x0, x19
   34ef8:	ldp	x19, x30, [sp], #96
   34efc:	ret
   34f00:	str	x30, [sp, #-16]!
   34f04:	bl	3289c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c8c>
   34f08:	bl	343b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x67a0>
   34f0c:	nop
   34f10:	ldr	x30, [sp], #16
   34f14:	ret
   34f18:	str	x30, [sp, #-48]!
   34f1c:	str	x0, [sp, #40]
   34f20:	str	x1, [sp, #32]
   34f24:	str	x2, [sp, #24]
   34f28:	ldr	x0, [sp, #40]
   34f2c:	mov	w2, #0x0                   	// #0
   34f30:	ldr	x1, [sp, #32]
   34f34:	bl	339e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5dd8>
   34f38:	adrp	x0, 7b000 <__asan_backtrace_vector_release@@Base+0x2c340>
   34f3c:	add	x1, x0, #0xe00
   34f40:	ldr	x0, [sp, #40]
   34f44:	str	x1, [x0]
   34f48:	ldr	x0, [sp, #24]
   34f4c:	bl	218f8 <__sanitizer_set_report_fd@@Base+0x2700>
   34f50:	mov	x1, x0
   34f54:	ldr	x0, [sp, #40]
   34f58:	str	x1, [x0, #16424]
   34f5c:	nop
   34f60:	ldr	x30, [sp], #48
   34f64:	ret
   34f68:	sub	sp, sp, #0x10
   34f6c:	str	x0, [sp, #8]
   34f70:	ldr	x0, [sp, #8]
   34f74:	ldr	x0, [x0, #16424]
   34f78:	add	sp, sp, #0x10
   34f7c:	ret
   34f80:	sub	sp, sp, #0x30
   34f84:	str	x0, [sp, #24]
   34f88:	str	x1, [sp, #16]
   34f8c:	str	x2, [sp, #8]
   34f90:	str	wzr, [sp, #44]
   34f94:	ldr	w0, [sp, #44]
   34f98:	add	w1, w0, #0x1
   34f9c:	str	w1, [sp, #44]
   34fa0:	ldr	x1, [sp, #8]
   34fa4:	sxtw	x0, w0
   34fa8:	ldr	x2, [sp, #16]
   34fac:	str	x2, [x1, x0, lsl #3]
   34fb0:	ldr	w0, [sp, #44]
   34fb4:	add	w1, w0, #0x1
   34fb8:	str	w1, [sp, #44]
   34fbc:	ldr	x1, [sp, #8]
   34fc0:	sxtw	x0, w0
   34fc4:	adrp	x2, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   34fc8:	add	x2, x2, #0xf50
   34fcc:	str	x2, [x1, x0, lsl #3]
   34fd0:	ldr	w0, [sp, #44]
   34fd4:	add	w1, w0, #0x1
   34fd8:	str	w1, [sp, #44]
   34fdc:	ldr	x1, [sp, #24]
   34fe0:	ldr	x2, [x1, #16424]
   34fe4:	ldr	x1, [sp, #8]
   34fe8:	sxtw	x0, w0
   34fec:	str	x2, [x1, x0, lsl #3]
   34ff0:	ldr	w0, [sp, #44]
   34ff4:	add	w1, w0, #0x1
   34ff8:	str	w1, [sp, #44]
   34ffc:	ldr	x1, [sp, #8]
   35000:	sxtw	x0, w0
   35004:	str	xzr, [x1, x0, lsl #3]
   35008:	nop
   3500c:	add	sp, sp, #0x30
   35010:	ret
   35014:	str	x30, [sp, #-80]!
   35018:	str	x0, [sp, #40]
   3501c:	str	x1, [sp, #32]
   35020:	str	x2, [sp, #24]
   35024:	ldr	x0, [sp, #40]
   35028:	ldr	x2, [sp, #24]
   3502c:	ldr	x1, [sp, #32]
   35030:	bl	33d78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6168>
   35034:	and	w0, w0, #0xff
   35038:	eor	w0, w0, #0x1
   3503c:	and	w0, w0, #0xff
   35040:	cmp	w0, #0x0
   35044:	b.eq	35050 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7440>  // b.none
   35048:	mov	w0, #0x0                   	// #0
   3504c:	b	350dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x74cc>
   35050:	ldr	x0, [sp, #32]
   35054:	ldrb	w0, [x0]
   35058:	cmp	w0, #0x0
   3505c:	b.ne	35068 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7458>  // b.any
   35060:	mov	w0, #0x1                   	// #1
   35064:	b	350dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x74cc>
   35068:	ldr	x0, [sp, #32]
   3506c:	add	x2, x0, #0x1
   35070:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   35074:	add	x1, x0, #0xf70
   35078:	mov	x0, x2
   3507c:	bl	21ef0 <__sanitizer_set_report_fd@@Base+0x2cf8>
   35080:	str	x0, [sp, #72]
   35084:	ldr	x0, [sp, #72]
   35088:	str	x0, [sp, #64]
   3508c:	str	xzr, [sp, #56]
   35090:	ldr	x1, [sp, #64]
   35094:	ldr	x0, [sp, #56]
   35098:	cmp	x1, x0
   3509c:	cset	w0, eq  // eq = none
   350a0:	and	w0, w0, #0xff
   350a4:	and	x0, x0, #0xff
   350a8:	cmp	x0, #0x0
   350ac:	b.eq	350d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x74c0>  // b.none
   350b0:	ldr	x4, [sp, #56]
   350b4:	ldr	x3, [sp, #64]
   350b8:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   350bc:	add	x2, x0, #0xf58
   350c0:	mov	w1, #0x11e                 	// #286
   350c4:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   350c8:	add	x0, x0, #0xe18
   350cc:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   350d0:	ldr	x0, [sp, #72]
   350d4:	strb	wzr, [x0]
   350d8:	mov	w0, #0x1                   	// #1
   350dc:	ldr	x30, [sp], #80
   350e0:	ret
   350e4:	str	x30, [sp, #-48]!
   350e8:	str	x0, [sp, #40]
   350ec:	str	x1, [sp, #32]
   350f0:	str	x2, [sp, #24]
   350f4:	ldr	x0, [sp, #40]
   350f8:	bl	32750 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b40>
   350fc:	adrp	x0, 7b000 <__asan_backtrace_vector_release@@Base+0x2c340>
   35100:	add	x1, x0, #0xdd0
   35104:	ldr	x0, [sp, #40]
   35108:	str	x1, [x0]
   3510c:	ldr	x0, [sp, #40]
   35110:	ldr	x1, [sp, #32]
   35114:	str	x1, [x0, #16]
   35118:	ldr	x0, [sp, #40]
   3511c:	ldr	x1, [sp, #24]
   35120:	str	x1, [x0, #24]
   35124:	ldr	x0, [sp, #40]
   35128:	add	x0, x0, #0x20
   3512c:	bl	35590 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7980>
   35130:	ldr	x0, [sp, #40]
   35134:	add	x0, x0, #0x20
   35138:	mov	x1, #0x10                  	// #16
   3513c:	bl	355b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x79a0>
   35140:	nop
   35144:	ldr	x30, [sp], #48
   35148:	ret
   3514c:	str	x30, [sp, #-64]!
   35150:	str	x0, [sp, #40]
   35154:	str	x1, [sp, #32]
   35158:	str	x2, [sp, #24]
   3515c:	ldr	x0, [sp, #24]
   35160:	ldr	x1, [x0, #16]
   35164:	ldr	x0, [sp, #24]
   35168:	ldr	x0, [x0, #24]
   3516c:	mov	x2, x0
   35170:	ldr	x0, [sp, #40]
   35174:	bl	351c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x75b4>
   35178:	str	x0, [sp, #56]
   3517c:	ldr	x0, [sp, #56]
   35180:	cmp	x0, #0x0
   35184:	b.eq	3519c <__sanitizer_get_module_and_offset_for_pc@@Base+0x758c>  // b.none
   35188:	ldr	x1, [sp, #24]
   3518c:	ldr	x0, [sp, #56]
   35190:	bl	33514 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5904>
   35194:	mov	w0, #0x1                   	// #1
   35198:	b	351a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7590>
   3519c:	mov	w0, #0x0                   	// #0
   351a0:	ldr	x30, [sp], #64
   351a4:	ret
   351a8:	sub	sp, sp, #0x20
   351ac:	str	x0, [sp, #24]
   351b0:	str	x1, [sp, #16]
   351b4:	str	x2, [sp, #8]
   351b8:	mov	w0, #0x0                   	// #0
   351bc:	add	sp, sp, #0x20
   351c0:	ret
   351c4:	stp	x19, x30, [sp, #-144]!
   351c8:	str	x0, [sp, #40]
   351cc:	str	x1, [sp, #32]
   351d0:	str	x2, [sp, #24]
   351d4:	str	xzr, [sp, #112]
   351d8:	str	xzr, [sp, #136]
   351dc:	ldr	x0, [sp, #40]
   351e0:	add	x0, x0, #0x20
   351e4:	bl	355f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x79e8>
   351e8:	mov	x1, x0
   351ec:	ldr	x0, [sp, #136]
   351f0:	cmp	x0, x1
   351f4:	cset	w0, cc  // cc = lo, ul, last
   351f8:	and	w0, w0, #0xff
   351fc:	cmp	w0, #0x0
   35200:	b.eq	35268 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7658>  // b.none
   35204:	ldr	x0, [sp, #40]
   35208:	add	x0, x0, #0x20
   3520c:	ldr	x1, [sp, #136]
   35210:	bl	35610 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7a00>
   35214:	ldr	x0, [x0]
   35218:	bl	34f68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7358>
   3521c:	mov	x1, x0
   35220:	ldr	x0, [sp, #32]
   35224:	bl	21950 <__sanitizer_set_report_fd@@Base+0x2758>
   35228:	cmp	w0, #0x0
   3522c:	cset	w0, eq  // eq = none
   35230:	and	w0, w0, #0xff
   35234:	cmp	w0, #0x0
   35238:	b.eq	35258 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7648>  // b.none
   3523c:	ldr	x0, [sp, #40]
   35240:	add	x0, x0, #0x20
   35244:	ldr	x1, [sp, #136]
   35248:	bl	35610 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7a00>
   3524c:	ldr	x0, [x0]
   35250:	str	x0, [sp, #112]
   35254:	b	35268 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7658>
   35258:	ldr	x0, [sp, #136]
   3525c:	add	x0, x0, #0x1
   35260:	str	x0, [sp, #136]
   35264:	b	351dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x75cc>
   35268:	ldr	x0, [sp, #112]
   3526c:	cmp	x0, #0x0
   35270:	b.ne	352b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x76a8>  // b.any
   35274:	ldr	x0, [sp, #40]
   35278:	ldr	x0, [x0, #24]
   3527c:	mov	x1, x0
   35280:	mov	x0, #0x4030                	// #16432
   35284:	bl	a5c0 <__lsan_do_recoverable_leak_check@@Base+0x434>
   35288:	mov	x19, x0
   3528c:	ldr	x0, [sp, #40]
   35290:	ldr	x0, [x0, #16]
   35294:	ldr	x2, [sp, #32]
   35298:	mov	x1, x0
   3529c:	mov	x0, x19
   352a0:	bl	34f18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7308>
   352a4:	str	x19, [sp, #112]
   352a8:	ldr	x0, [sp, #40]
   352ac:	add	x0, x0, #0x20
   352b0:	add	x1, sp, #0x70
   352b4:	bl	3568c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7a7c>
   352b8:	str	xzr, [sp, #128]
   352bc:	ldr	x0, [sp, #112]
   352c0:	bl	34f68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7358>
   352c4:	mov	x1, x0
   352c8:	ldr	x0, [sp, #32]
   352cc:	bl	21950 <__sanitizer_set_report_fd@@Base+0x2758>
   352d0:	sxtw	x0, w0
   352d4:	str	x0, [sp, #120]
   352d8:	ldr	x1, [sp, #128]
   352dc:	ldr	x0, [sp, #120]
   352e0:	cmp	x1, x0
   352e4:	cset	w0, ne  // ne = any
   352e8:	and	w0, w0, #0xff
   352ec:	and	x0, x0, #0xff
   352f0:	cmp	x0, #0x0
   352f4:	b.eq	35318 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7708>  // b.none
   352f8:	ldr	x4, [sp, #120]
   352fc:	ldr	x3, [sp, #128]
   35300:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   35304:	add	x2, x0, #0xf80
   35308:	mov	w1, #0x15c                 	// #348
   3530c:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   35310:	add	x0, x0, #0xe18
   35314:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   35318:	add	x5, sp, #0x30
   3531c:	mov	x4, #0xffffffffffffffff    	// #-1
   35320:	ldr	x3, [sp, #24]
   35324:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   35328:	add	x2, x0, #0xfc8
   3532c:	mov	x1, #0x40                  	// #64
   35330:	mov	x0, x5
   35334:	bl	2a4a8 <OnPrint@@Base+0x500>
   35338:	ldr	x0, [sp, #112]
   3533c:	mov	x2, x0
   35340:	add	x0, sp, #0x30
   35344:	mov	x1, x0
   35348:	mov	x0, x2
   3534c:	bl	33b6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f5c>
   35350:	ldp	x19, x30, [sp], #144
   35354:	ret
   35358:	stp	x19, x30, [sp, #-32]!
   3535c:	str	x0, [sp, #24]
   35360:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   35364:	ldr	x0, [x0, #3672]
   35368:	cmp	x0, #0x0
   3536c:	b.eq	3539c <__sanitizer_get_module_and_offset_for_pc@@Base+0x778c>  // b.none
   35370:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   35374:	ldr	x0, [x0, #3568]
   35378:	cmp	x0, #0x0
   3537c:	b.eq	3539c <__sanitizer_get_module_and_offset_for_pc@@Base+0x778c>  // b.none
   35380:	ldr	x1, [sp, #24]
   35384:	mov	x0, #0x4010                	// #16400
   35388:	bl	a5c0 <__lsan_do_recoverable_leak_check@@Base+0x434>
   3538c:	mov	x19, x0
   35390:	mov	x0, x19
   35394:	bl	35564 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7954>
   35398:	b	353a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7790>
   3539c:	mov	x19, #0x0                   	// #0
   353a0:	mov	x0, x19
   353a4:	ldp	x19, x30, [sp], #32
   353a8:	ret
   353ac:	str	x30, [sp, #-64]!
   353b0:	str	x0, [sp, #40]
   353b4:	str	x1, [sp, #32]
   353b8:	str	x2, [sp, #24]
   353bc:	ldr	x0, [sp, #24]
   353c0:	ldr	x4, [x0, #16]
   353c4:	ldr	x0, [sp, #24]
   353c8:	ldr	x1, [x0, #24]
   353cc:	ldr	x0, [sp, #40]
   353d0:	add	x0, x0, #0x10
   353d4:	mov	w3, #0x4000                	// #16384
   353d8:	mov	x2, x0
   353dc:	mov	x0, x4
   353e0:	bl	6b90 <__sanitizer_symbolize_code@plt>
   353e4:	strb	w0, [sp, #63]
   353e8:	ldrb	w0, [sp, #63]
   353ec:	cmp	w0, #0x0
   353f0:	b.eq	35404 <__sanitizer_get_module_and_offset_for_pc@@Base+0x77f4>  // b.none
   353f4:	ldr	x0, [sp, #40]
   353f8:	add	x0, x0, #0x10
   353fc:	ldr	x1, [sp, #24]
   35400:	bl	33514 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5904>
   35404:	ldrb	w0, [sp, #63]
   35408:	ldr	x30, [sp], #64
   3540c:	ret
   35410:	str	x30, [sp, #-64]!
   35414:	str	x0, [sp, #40]
   35418:	str	x1, [sp, #32]
   3541c:	str	x2, [sp, #24]
   35420:	ldr	x0, [sp, #24]
   35424:	ldr	x4, [x0]
   35428:	ldr	x0, [sp, #24]
   3542c:	ldr	x1, [x0, #8]
   35430:	ldr	x0, [sp, #40]
   35434:	add	x0, x0, #0x10
   35438:	mov	w3, #0x4000                	// #16384
   3543c:	mov	x2, x0
   35440:	mov	x0, x4
   35444:	bl	6ad0 <__sanitizer_symbolize_data@plt>
   35448:	strb	w0, [sp, #63]
   3544c:	ldrb	w0, [sp, #63]
   35450:	cmp	w0, #0x0
   35454:	b.eq	3548c <__sanitizer_get_module_and_offset_for_pc@@Base+0x787c>  // b.none
   35458:	ldr	x0, [sp, #40]
   3545c:	add	x0, x0, #0x10
   35460:	ldr	x1, [sp, #24]
   35464:	bl	336e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ad4>
   35468:	ldr	x0, [sp, #24]
   3546c:	ldr	x1, [x0, #48]
   35470:	ldr	x0, [sp, #24]
   35474:	ldr	x0, [x0, #8]
   35478:	ldr	x2, [sp, #32]
   3547c:	sub	x0, x2, x0
   35480:	add	x1, x1, x0
   35484:	ldr	x0, [sp, #24]
   35488:	str	x1, [x0, #48]
   3548c:	ldrb	w0, [sp, #63]
   35490:	ldr	x30, [sp], #64
   35494:	ret
   35498:	str	x30, [sp, #-32]!
   3549c:	str	x0, [sp, #24]
   354a0:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   354a4:	ldr	x0, [x0, #3728]
   354a8:	cmp	x0, #0x0
   354ac:	b.eq	354b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x78a4>  // b.none
   354b0:	bl	6c00 <__sanitizer_symbolize_flush@plt>
   354b4:	nop
   354b8:	ldr	x30, [sp], #32
   354bc:	ret
   354c0:	str	x30, [sp, #-64]!
   354c4:	str	x0, [sp, #24]
   354c8:	str	x1, [sp, #16]
   354cc:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   354d0:	ldr	x0, [x0, #3512]
   354d4:	cmp	x0, #0x0
   354d8:	b.eq	35558 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7948>  // b.none
   354dc:	mov	x0, #0x400                 	// #1024
   354e0:	str	x0, [sp, #56]
   354e4:	ldr	x0, [sp, #56]
   354e8:	cmp	x0, #0x20, lsl #12
   354ec:	b.hi	35558 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7948>  // b.pmore
   354f0:	mov	x2, #0x0                   	// #0
   354f4:	mov	x1, #0x0                   	// #0
   354f8:	ldr	x0, [sp, #56]
   354fc:	bl	16598 <__sancov_default_options@@Base+0x3fc>
   35500:	str	x0, [sp, #48]
   35504:	ldr	x0, [sp, #56]
   35508:	mov	w2, w0
   3550c:	ldr	x1, [sp, #48]
   35510:	ldr	x0, [sp, #16]
   35514:	bl	69f0 <__sanitizer_symbolize_demangle@plt>
   35518:	sxtw	x0, w0
   3551c:	str	x0, [sp, #40]
   35520:	ldr	x1, [sp, #40]
   35524:	ldr	x0, [sp, #56]
   35528:	cmp	x1, x0
   3552c:	b.ls	3554c <__sanitizer_get_module_and_offset_for_pc@@Base+0x793c>  // b.plast
   35530:	ldr	x0, [sp, #40]
   35534:	add	x0, x0, #0x1
   35538:	str	x0, [sp, #56]
   3553c:	mov	x1, #0x0                   	// #0
   35540:	ldr	x0, [sp, #48]
   35544:	bl	167e8 <__sancov_default_options@@Base+0x64c>
   35548:	b	35554 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7944>
   3554c:	ldr	x0, [sp, #48]
   35550:	b	3555c <__sanitizer_get_module_and_offset_for_pc@@Base+0x794c>
   35554:	b	354e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x78d4>
   35558:	ldr	x0, [sp, #16]
   3555c:	ldr	x30, [sp], #64
   35560:	ret
   35564:	str	x30, [sp, #-32]!
   35568:	str	x0, [sp, #24]
   3556c:	ldr	x0, [sp, #24]
   35570:	bl	32750 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b40>
   35574:	adrp	x0, 7b000 <__asan_backtrace_vector_release@@Base+0x2c340>
   35578:	add	x1, x0, #0xda0
   3557c:	ldr	x0, [sp, #24]
   35580:	str	x1, [x0]
   35584:	nop
   35588:	ldr	x30, [sp], #32
   3558c:	ret
   35590:	str	x30, [sp, #-32]!
   35594:	str	x0, [sp, #24]
   35598:	ldr	x0, [sp, #24]
   3559c:	mov	x1, #0x1                   	// #1
   355a0:	bl	3583c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7c2c>
   355a4:	nop
   355a8:	ldr	x30, [sp], #32
   355ac:	ret
   355b0:	str	x30, [sp, #-32]!
   355b4:	str	x0, [sp, #24]
   355b8:	str	x1, [sp, #16]
   355bc:	ldr	x0, [sp, #24]
   355c0:	bl	35878 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7c68>
   355c4:	mov	x1, x0
   355c8:	ldr	x0, [sp, #16]
   355cc:	cmp	x0, x1
   355d0:	cset	w0, hi  // hi = pmore
   355d4:	and	w0, w0, #0xff
   355d8:	cmp	w0, #0x0
   355dc:	b.eq	355ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x79dc>  // b.none
   355e0:	ldr	x1, [sp, #16]
   355e4:	ldr	x0, [sp, #24]
   355e8:	bl	35894 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7c84>
   355ec:	nop
   355f0:	ldr	x30, [sp], #32
   355f4:	ret
   355f8:	sub	sp, sp, #0x10
   355fc:	str	x0, [sp, #8]
   35600:	ldr	x0, [sp, #8]
   35604:	ldr	x0, [x0, #16]
   35608:	add	sp, sp, #0x10
   3560c:	ret
   35610:	str	x30, [sp, #-48]!
   35614:	str	x0, [sp, #24]
   35618:	str	x1, [sp, #16]
   3561c:	ldr	x0, [sp, #16]
   35620:	str	x0, [sp, #40]
   35624:	ldr	x0, [sp, #24]
   35628:	ldr	x0, [x0, #16]
   3562c:	str	x0, [sp, #32]
   35630:	ldr	x1, [sp, #40]
   35634:	ldr	x0, [sp, #32]
   35638:	cmp	x1, x0
   3563c:	cset	w0, cs  // cs = hs, nlast
   35640:	and	w0, w0, #0xff
   35644:	and	x0, x0, #0xff
   35648:	cmp	x0, #0x0
   3564c:	b.eq	35670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7a60>  // b.none
   35650:	ldr	x4, [sp, #32]
   35654:	ldr	x3, [sp, #40]
   35658:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   3565c:	add	x2, x0, #0x268
   35660:	mov	w1, #0x1b6                 	// #438
   35664:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   35668:	add	x0, x0, #0xc60
   3566c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   35670:	ldr	x0, [sp, #24]
   35674:	ldr	x1, [x0]
   35678:	ldr	x0, [sp, #16]
   3567c:	lsl	x0, x0, #3
   35680:	add	x0, x1, x0
   35684:	ldr	x30, [sp], #48
   35688:	ret
   3568c:	stp	x19, x30, [sp, #-64]!
   35690:	str	x0, [sp, #24]
   35694:	str	x1, [sp, #16]
   35698:	ldr	x0, [sp, #24]
   3569c:	ldr	x0, [x0, #16]
   356a0:	str	x0, [sp, #56]
   356a4:	ldr	x0, [sp, #24]
   356a8:	bl	35878 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7c68>
   356ac:	str	x0, [sp, #48]
   356b0:	ldr	x1, [sp, #56]
   356b4:	ldr	x0, [sp, #48]
   356b8:	cmp	x1, x0
   356bc:	cset	w0, hi  // hi = pmore
   356c0:	and	w0, w0, #0xff
   356c4:	and	x0, x0, #0xff
   356c8:	cmp	x0, #0x0
   356cc:	b.eq	356f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7ae0>  // b.none
   356d0:	ldr	x4, [sp, #48]
   356d4:	ldr	x3, [sp, #56]
   356d8:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   356dc:	add	x2, x0, #0x280
   356e0:	mov	w1, #0x1be                 	// #446
   356e4:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   356e8:	add	x0, x0, #0xc60
   356ec:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   356f0:	ldr	x0, [sp, #24]
   356f4:	ldr	x19, [x0, #16]
   356f8:	ldr	x0, [sp, #24]
   356fc:	bl	35878 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7c68>
   35700:	cmp	x19, x0
   35704:	cset	w0, eq  // eq = none
   35708:	and	w0, w0, #0xff
   3570c:	cmp	w0, #0x0
   35710:	b.eq	35734 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7b24>  // b.none
   35714:	ldr	x0, [sp, #24]
   35718:	ldr	x0, [x0, #16]
   3571c:	add	x0, x0, #0x1
   35720:	bl	a3cc <__lsan_do_recoverable_leak_check@@Base+0x240>
   35724:	str	x0, [sp, #40]
   35728:	ldr	x1, [sp, #40]
   3572c:	ldr	x0, [sp, #24]
   35730:	bl	35894 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7c84>
   35734:	ldr	x0, [sp, #24]
   35738:	ldr	x1, [x0]
   3573c:	ldr	x0, [sp, #24]
   35740:	ldr	x0, [x0, #16]
   35744:	add	x3, x0, #0x1
   35748:	ldr	x2, [sp, #24]
   3574c:	str	x3, [x2, #16]
   35750:	lsl	x0, x0, #3
   35754:	add	x0, x1, x0
   35758:	mov	x2, #0x8                   	// #8
   3575c:	ldr	x1, [sp, #16]
   35760:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
   35764:	nop
   35768:	ldp	x19, x30, [sp], #64
   3576c:	ret
   35770:	str	x30, [sp, #-32]!
   35774:	str	x0, [sp, #24]
   35778:	str	x1, [sp, #16]
   3577c:	ldr	x0, [sp, #24]
   35780:	bl	359d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7dc4>
   35784:	and	w0, w0, #0xff
   35788:	cmp	w0, #0x0
   3578c:	b.eq	357c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7bb4>  // b.none
   35790:	ldr	x0, [sp, #16]
   35794:	str	xzr, [x0, #8]
   35798:	ldr	x0, [sp, #24]
   3579c:	ldr	x1, [sp, #16]
   357a0:	str	x1, [x0, #16]
   357a4:	ldr	x0, [sp, #24]
   357a8:	ldr	x1, [x0, #16]
   357ac:	ldr	x0, [sp, #24]
   357b0:	str	x1, [x0, #8]
   357b4:	ldr	x0, [sp, #24]
   357b8:	mov	x1, #0x1                   	// #1
   357bc:	str	x1, [x0]
   357c0:	b	357fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x7bec>
   357c4:	ldr	x0, [sp, #16]
   357c8:	str	xzr, [x0, #8]
   357cc:	ldr	x0, [sp, #24]
   357d0:	ldr	x0, [x0, #16]
   357d4:	ldr	x1, [sp, #16]
   357d8:	str	x1, [x0, #8]
   357dc:	ldr	x0, [sp, #24]
   357e0:	ldr	x1, [sp, #16]
   357e4:	str	x1, [x0, #16]
   357e8:	ldr	x0, [sp, #24]
   357ec:	ldr	x0, [x0]
   357f0:	add	x1, x0, #0x1
   357f4:	ldr	x0, [sp, #24]
   357f8:	str	x1, [x0]
   357fc:	nop
   35800:	ldr	x30, [sp], #32
   35804:	ret
   35808:	sub	sp, sp, #0x10
   3580c:	str	x0, [sp, #8]
   35810:	ldr	x0, [sp, #8]
   35814:	str	xzr, [x0, #16]
   35818:	ldr	x0, [sp, #8]
   3581c:	ldr	x1, [x0, #16]
   35820:	ldr	x0, [sp, #8]
   35824:	str	x1, [x0, #8]
   35828:	ldr	x0, [sp, #8]
   3582c:	str	xzr, [x0]
   35830:	nop
   35834:	add	sp, sp, #0x10
   35838:	ret
   3583c:	str	x30, [sp, #-32]!
   35840:	str	x0, [sp, #24]
   35844:	str	x1, [sp, #16]
   35848:	ldr	x0, [sp, #24]
   3584c:	str	xzr, [x0, #8]
   35850:	ldr	x0, [sp, #24]
   35854:	str	xzr, [x0, #16]
   35858:	ldr	x0, [sp, #24]
   3585c:	str	xzr, [x0]
   35860:	ldr	x1, [sp, #16]
   35864:	ldr	x0, [sp, #24]
   35868:	bl	355b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x79a0>
   3586c:	nop
   35870:	ldr	x30, [sp], #32
   35874:	ret
   35878:	sub	sp, sp, #0x10
   3587c:	str	x0, [sp, #8]
   35880:	ldr	x0, [sp, #8]
   35884:	ldr	x0, [x0, #8]
   35888:	lsr	x0, x0, #3
   3588c:	add	sp, sp, #0x10
   35890:	ret
   35894:	stp	x19, x30, [sp, #-80]!
   35898:	str	x0, [sp, #24]
   3589c:	str	x1, [sp, #16]
   358a0:	ldr	x0, [sp, #16]
   358a4:	str	x0, [sp, #72]
   358a8:	str	xzr, [sp, #64]
   358ac:	ldr	x1, [sp, #72]
   358b0:	ldr	x0, [sp, #64]
   358b4:	cmp	x1, x0
   358b8:	cset	w0, ls  // ls = plast
   358bc:	and	w0, w0, #0xff
   358c0:	and	x0, x0, #0xff
   358c4:	cmp	x0, #0x0
   358c8:	b.eq	358ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x7cdc>  // b.none
   358cc:	ldr	x4, [sp, #64]
   358d0:	ldr	x3, [sp, #72]
   358d4:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   358d8:	add	x2, x0, #0x2a0
   358dc:	mov	w1, #0x1fc                 	// #508
   358e0:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   358e4:	add	x0, x0, #0xc60
   358e8:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   358ec:	ldr	x0, [sp, #24]
   358f0:	ldr	x0, [x0, #16]
   358f4:	str	x0, [sp, #56]
   358f8:	ldr	x0, [sp, #16]
   358fc:	str	x0, [sp, #48]
   35900:	ldr	x1, [sp, #56]
   35904:	ldr	x0, [sp, #48]
   35908:	cmp	x1, x0
   3590c:	cset	w0, hi  // hi = pmore
   35910:	and	w0, w0, #0xff
   35914:	and	x0, x0, #0xff
   35918:	cmp	x0, #0x0
   3591c:	b.eq	35940 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7d30>  // b.none
   35920:	ldr	x4, [sp, #48]
   35924:	ldr	x3, [sp, #56]
   35928:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   3592c:	add	x2, x0, #0x2c0
   35930:	mov	w1, #0x1fd                 	// #509
   35934:	adrp	x0, 59000 <__asan_backtrace_vector_release@@Base+0xa340>
   35938:	add	x0, x0, #0xc60
   3593c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   35940:	ldr	x0, [sp, #16]
   35944:	lsl	x19, x0, #3
   35948:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
   3594c:	mov	x1, x0
   35950:	mov	x0, x19
   35954:	bl	a518 <__lsan_do_recoverable_leak_check@@Base+0x38c>
   35958:	str	x0, [sp, #40]
   3595c:	mov	w2, #0x0                   	// #0
   35960:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   35964:	add	x1, x0, #0x2e0
   35968:	ldr	x0, [sp, #40]
   3596c:	bl	26a50 <__sanitizer_set_report_fd@@Base+0x7858>
   35970:	str	x0, [sp, #32]
   35974:	ldr	x0, [sp, #24]
   35978:	ldr	x1, [x0]
   3597c:	ldr	x0, [sp, #24]
   35980:	ldr	x0, [x0, #16]
   35984:	lsl	x0, x0, #3
   35988:	mov	x2, x0
   3598c:	ldr	x0, [sp, #32]
   35990:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
   35994:	ldr	x0, [sp, #24]
   35998:	ldr	x2, [x0]
   3599c:	ldr	x0, [sp, #24]
   359a0:	ldr	x0, [x0, #8]
   359a4:	mov	x1, x0
   359a8:	mov	x0, x2
   359ac:	bl	26af4 <__sanitizer_set_report_fd@@Base+0x78fc>
   359b0:	ldr	x0, [sp, #24]
   359b4:	ldr	x1, [sp, #32]
   359b8:	str	x1, [x0]
   359bc:	ldr	x0, [sp, #24]
   359c0:	ldr	x1, [sp, #40]
   359c4:	str	x1, [x0, #8]
   359c8:	nop
   359cc:	ldp	x19, x30, [sp], #80
   359d0:	ret
   359d4:	sub	sp, sp, #0x10
   359d8:	str	x0, [sp, #8]
   359dc:	ldr	x0, [sp, #8]
   359e0:	ldr	x0, [x0]
   359e4:	cmp	x0, #0x0
   359e8:	cset	w0, eq  // eq = none
   359ec:	and	w0, w0, #0xff
   359f0:	add	sp, sp, #0x10
   359f4:	ret
   359f8:	sub	sp, sp, #0x20
   359fc:	str	x0, [sp, #8]
   35a00:	str	wzr, [sp, #28]
   35a04:	ldr	w0, [sp, #28]
   35a08:	cmp	w0, #0x4
   35a0c:	b.gt	35a54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7e44>
   35a10:	adrp	x0, 9d4000 <__asan_cplus_demangle_builtin_types@@Base+0x957b40>
   35a14:	add	x0, x0, #0x1d0
   35a18:	ldrsw	x1, [sp, #28]
   35a1c:	ldr	x0, [x0, x1, lsl #3]
   35a20:	cmp	x0, #0x0
   35a24:	b.ne	35a44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7e34>  // b.any
   35a28:	adrp	x0, 9d4000 <__asan_cplus_demangle_builtin_types@@Base+0x957b40>
   35a2c:	add	x0, x0, #0x1d0
   35a30:	ldrsw	x1, [sp, #28]
   35a34:	ldr	x2, [sp, #8]
   35a38:	str	x2, [x0, x1, lsl #3]
   35a3c:	mov	w0, #0x1                   	// #1
   35a40:	b	35a58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7e48>
   35a44:	ldr	w0, [sp, #28]
   35a48:	add	w0, w0, #0x1
   35a4c:	str	w0, [sp, #28]
   35a50:	b	35a04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7df4>
   35a54:	mov	w0, #0x0                   	// #0
   35a58:	add	sp, sp, #0x20
   35a5c:	ret
   35a60:	str	x30, [sp, #-48]!
   35a64:	str	x0, [sp, #24]
   35a68:	str	wzr, [sp, #44]
   35a6c:	ldr	w0, [sp, #44]
   35a70:	cmp	w0, #0x4
   35a74:	b.gt	35b0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7efc>
   35a78:	adrp	x0, 9d4000 <__asan_cplus_demangle_builtin_types@@Base+0x957b40>
   35a7c:	add	x0, x0, #0x1d0
   35a80:	ldrsw	x1, [sp, #44]
   35a84:	ldr	x0, [x0, x1, lsl #3]
   35a88:	ldr	x1, [sp, #24]
   35a8c:	cmp	x1, x0
   35a90:	b.ne	35afc <__sanitizer_get_module_and_offset_for_pc@@Base+0x7eec>  // b.any
   35a94:	ldrsw	x0, [sp, #44]
   35a98:	lsl	x1, x0, #3
   35a9c:	adrp	x0, 9d4000 <__asan_cplus_demangle_builtin_types@@Base+0x957b40>
   35aa0:	add	x0, x0, #0x1d0
   35aa4:	add	x3, x1, x0
   35aa8:	ldr	w0, [sp, #44]
   35aac:	add	w0, w0, #0x1
   35ab0:	sxtw	x0, w0
   35ab4:	lsl	x1, x0, #3
   35ab8:	adrp	x0, 9d4000 <__asan_cplus_demangle_builtin_types@@Base+0x957b40>
   35abc:	add	x0, x0, #0x1d0
   35ac0:	add	x4, x1, x0
   35ac4:	mov	w1, #0x4                   	// #4
   35ac8:	ldr	w0, [sp, #44]
   35acc:	sub	w0, w1, w0
   35ad0:	sxtw	x0, w0
   35ad4:	lsl	x0, x0, #3
   35ad8:	mov	x2, x0
   35adc:	mov	x1, x4
   35ae0:	mov	x0, x3
   35ae4:	bl	2161c <__sanitizer_set_report_fd@@Base+0x2424>
   35ae8:	adrp	x0, 9d4000 <__asan_cplus_demangle_builtin_types@@Base+0x957b40>
   35aec:	add	x0, x0, #0x1d0
   35af0:	str	xzr, [x0, #32]
   35af4:	mov	w0, #0x1                   	// #1
   35af8:	b	35b10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f00>
   35afc:	ldr	w0, [sp, #44]
   35b00:	add	w0, w0, #0x1
   35b04:	str	w0, [sp, #44]
   35b08:	b	35a6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7e5c>
   35b0c:	mov	w0, #0x0                   	// #0
   35b10:	ldr	x30, [sp], #48
   35b14:	ret
   35b18:	sub	sp, sp, #0x10
   35b1c:	str	x0, [sp, #8]
   35b20:	adrp	x0, 9d4000 <__asan_cplus_demangle_builtin_types@@Base+0x957b40>
   35b24:	add	x0, x0, #0x1f8
   35b28:	ldr	x1, [sp, #8]
   35b2c:	str	x1, [x0]
   35b30:	nop
   35b34:	add	sp, sp, #0x10
   35b38:	ret
   35b3c:	str	x30, [sp, #-32]!
   35b40:	adrp	x0, 9d4000 <__asan_cplus_demangle_builtin_types@@Base+0x957b40>
   35b44:	add	x0, x0, #0x1f8
   35b48:	ldr	x0, [x0]
   35b4c:	cmp	x0, #0x0
   35b50:	b.eq	35b64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f54>  // b.none
   35b54:	adrp	x0, 9d4000 <__asan_cplus_demangle_builtin_types@@Base+0x957b40>
   35b58:	add	x0, x0, #0x1f8
   35b5c:	ldr	x0, [x0]
   35b60:	blr	x0
   35b64:	mov	w0, #0x4                   	// #4
   35b68:	str	w0, [sp, #28]
   35b6c:	ldr	w0, [sp, #28]
   35b70:	cmp	w0, #0x0
   35b74:	b.lt	35bb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fa4>  // b.tstop
   35b78:	adrp	x0, 9d4000 <__asan_cplus_demangle_builtin_types@@Base+0x957b40>
   35b7c:	add	x0, x0, #0x1d0
   35b80:	ldrsw	x1, [sp, #28]
   35b84:	ldr	x0, [x0, x1, lsl #3]
   35b88:	cmp	x0, #0x0
   35b8c:	b.eq	35ba4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f94>  // b.none
   35b90:	adrp	x0, 9d4000 <__asan_cplus_demangle_builtin_types@@Base+0x957b40>
   35b94:	add	x0, x0, #0x1d0
   35b98:	ldrsw	x1, [sp, #28]
   35b9c:	ldr	x0, [x0, x1, lsl #3]
   35ba0:	blr	x0
   35ba4:	ldr	w0, [sp, #28]
   35ba8:	sub	w0, w0, #0x1
   35bac:	str	w0, [sp, #28]
   35bb0:	b	35b6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f5c>
   35bb4:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   35bb8:	ldrb	w0, [x0, #220]
   35bbc:	cmp	w0, #0x0
   35bc0:	b.eq	35bc8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fb8>  // b.none
   35bc4:	bl	27e54 <__sanitizer_set_report_fd@@Base+0x8c5c>
   35bc8:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   35bcc:	ldr	w0, [x0, #216]
   35bd0:	bl	23348 <__sanitizer_set_report_fd@@Base+0x4150>
   35bd4:	sub	sp, sp, #0x10
   35bd8:	str	x0, [sp, #8]
   35bdc:	adrp	x0, 9d4000 <__asan_cplus_demangle_builtin_types@@Base+0x957b40>
   35be0:	add	x0, x0, #0x200
   35be4:	ldr	x1, [sp, #8]
   35be8:	str	x1, [x0]
   35bec:	nop
   35bf0:	add	sp, sp, #0x10
   35bf4:	ret
   35bf8:	str	x30, [sp, #-64]!
   35bfc:	str	x0, [sp, #56]
   35c00:	str	w1, [sp, #52]
   35c04:	str	x2, [sp, #40]
   35c08:	str	x3, [sp, #32]
   35c0c:	str	x4, [sp, #24]
   35c10:	mov	w2, #0x1                   	// #1
   35c14:	mov	w1, #0x1                   	// #1
   35c18:	adrp	x0, 9d4000 <__asan_cplus_demangle_builtin_types@@Base+0x957b40>
   35c1c:	add	x0, x0, #0x208
   35c20:	bl	2c0dc <OnPrint@@Base+0x2134>
   35c24:	cmp	w0, #0xa
   35c28:	cset	w0, hi  // hi = pmore
   35c2c:	and	w0, w0, #0xff
   35c30:	cmp	w0, #0x0
   35c34:	b.eq	35c44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8034>  // b.none
   35c38:	mov	w0, #0x2                   	// #2
   35c3c:	bl	27e14 <__sanitizer_set_report_fd@@Base+0x8c1c>
   35c40:	bl	35cbc <__sanitizer_set_death_callback@@Base+0x1c>
   35c44:	adrp	x0, 9d4000 <__asan_cplus_demangle_builtin_types@@Base+0x957b40>
   35c48:	add	x0, x0, #0x200
   35c4c:	ldr	x0, [x0]
   35c50:	cmp	x0, #0x0
   35c54:	b.eq	35c7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x806c>  // b.none
   35c58:	adrp	x0, 9d4000 <__asan_cplus_demangle_builtin_types@@Base+0x957b40>
   35c5c:	add	x0, x0, #0x200
   35c60:	ldr	x5, [x0]
   35c64:	ldr	x4, [sp, #24]
   35c68:	ldr	x3, [sp, #32]
   35c6c:	ldr	x2, [sp, #40]
   35c70:	ldr	w1, [sp, #52]
   35c74:	ldr	x0, [sp, #56]
   35c78:	blr	x5
   35c7c:	ldr	x5, [sp, #24]
   35c80:	ldr	x4, [sp, #32]
   35c84:	ldr	x3, [sp, #40]
   35c88:	ldr	w2, [sp, #52]
   35c8c:	ldr	x1, [sp, #56]
   35c90:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   35c94:	add	x0, x0, #0x358
   35c98:	bl	2a3fc <OnPrint@@Base+0x454>
   35c9c:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>

0000000000035ca0 <__sanitizer_set_death_callback@@Base>:
   35ca0:	str	x30, [sp, #-32]!
   35ca4:	str	x0, [sp, #24]
   35ca8:	ldr	x0, [sp, #24]
   35cac:	bl	35b18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f08>
   35cb0:	nop
   35cb4:	ldr	x30, [sp], #32
   35cb8:	ret
   35cbc:	brk	#0x3e8
   35cc0:	str	x30, [sp, #-32]!
   35cc4:	str	x0, [sp, #24]
   35cc8:	str	w1, [sp, #20]
   35ccc:	adrp	x0, 7b000 <__asan_backtrace_vector_release@@Base+0x2c340>
   35cd0:	add	x1, x0, #0xe28
   35cd4:	ldr	x0, [sp, #24]
   35cd8:	str	x1, [x0]
   35cdc:	ldr	x0, [sp, #24]
   35ce0:	ldr	w1, [sp, #20]
   35ce4:	str	w1, [x0, #8]
   35ce8:	ldr	x0, [sp, #24]
   35cec:	str	xzr, [x0, #16]
   35cf0:	ldr	x0, [sp, #24]
   35cf4:	str	wzr, [x0, #24]
   35cf8:	ldr	x0, [sp, #24]
   35cfc:	str	xzr, [x0, #32]
   35d00:	ldr	x0, [sp, #24]
   35d04:	str	xzr, [x0, #40]
   35d08:	ldr	x0, [sp, #24]
   35d0c:	str	wzr, [x0, #112]
   35d10:	ldr	x0, [sp, #24]
   35d14:	strb	wzr, [x0, #116]
   35d18:	ldr	x0, [sp, #24]
   35d1c:	strb	wzr, [x0, #117]
   35d20:	ldr	x0, [sp, #24]
   35d24:	str	wzr, [x0, #120]
   35d28:	ldr	x0, [sp, #24]
   35d2c:	str	xzr, [x0, #128]
   35d30:	ldr	x0, [sp, #24]
   35d34:	strb	wzr, [x0, #48]
   35d38:	ldr	x0, [sp, #24]
   35d3c:	add	x0, x0, #0x88
   35d40:	mov	w2, #0x8                   	// #8
   35d44:	mov	w1, #0x0                   	// #0
   35d48:	bl	aad0 <__lsan_do_recoverable_leak_check@@Base+0x944>
   35d4c:	nop
   35d50:	ldr	x30, [sp], #32
   35d54:	ret
   35d58:	str	x30, [sp, #-48]!
   35d5c:	str	x0, [sp, #24]
   35d60:	adrp	x0, 7b000 <__asan_backtrace_vector_release@@Base+0x2c340>
   35d64:	add	x1, x0, #0xe28
   35d68:	ldr	x0, [sp, #24]
   35d6c:	str	x1, [x0]
   35d70:	str	xzr, [sp, #40]
   35d74:	str	xzr, [sp, #32]
   35d78:	ldr	x1, [sp, #40]
   35d7c:	ldr	x0, [sp, #32]
   35d80:	cmp	x1, x0
   35d84:	cset	w0, eq  // eq = none
   35d88:	and	w0, w0, #0xff
   35d8c:	and	x0, x0, #0xff
   35d90:	cmp	x0, #0x0
   35d94:	b.eq	35db8 <__sanitizer_set_death_callback@@Base+0x118>  // b.none
   35d98:	ldr	x4, [sp, #32]
   35d9c:	ldr	x3, [sp, #40]
   35da0:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   35da4:	add	x2, x0, #0x3e0
   35da8:	mov	w1, #0x1b                  	// #27
   35dac:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   35db0:	add	x0, x0, #0x3f0
   35db4:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   35db8:	nop
   35dbc:	ldr	x30, [sp], #48
   35dc0:	ret
   35dc4:	str	x30, [sp, #-32]!
   35dc8:	str	x0, [sp, #24]
   35dcc:	str	x1, [sp, #16]
   35dd0:	ldr	x0, [sp, #24]
   35dd4:	strb	wzr, [x0, #48]
   35dd8:	ldr	x0, [sp, #16]
   35ddc:	cmp	x0, #0x0
   35de0:	b.eq	35e00 <__sanitizer_set_death_callback@@Base+0x160>  // b.none
   35de4:	ldr	x0, [sp, #24]
   35de8:	add	x0, x0, #0x30
   35dec:	mov	x2, #0x40                  	// #64
   35df0:	ldr	x1, [sp, #16]
   35df4:	bl	21dfc <__sanitizer_set_report_fd@@Base+0x2c04>
   35df8:	ldr	x0, [sp, #24]
   35dfc:	strb	wzr, [x0, #111]
   35e00:	nop
   35e04:	ldr	x30, [sp], #32
   35e08:	ret
   35e0c:	str	x30, [sp, #-48]!
   35e10:	str	x0, [sp, #24]
   35e14:	ldr	x0, [sp, #24]
   35e18:	ldr	w0, [x0, #112]
   35e1c:	cmp	w0, #0x2
   35e20:	b.eq	35e34 <__sanitizer_set_death_callback@@Base+0x194>  // b.none
   35e24:	ldr	x0, [sp, #24]
   35e28:	ldr	w0, [x0, #112]
   35e2c:	cmp	w0, #0x3
   35e30:	b.ne	35e3c <__sanitizer_set_death_callback@@Base+0x19c>  // b.any
   35e34:	mov	w0, #0x1                   	// #1
   35e38:	b	35e40 <__sanitizer_set_death_callback@@Base+0x1a0>
   35e3c:	mov	w0, #0x0                   	// #0
   35e40:	and	x0, x0, #0xff
   35e44:	str	x0, [sp, #40]
   35e48:	str	xzr, [sp, #32]
   35e4c:	ldr	x1, [sp, #40]
   35e50:	ldr	x0, [sp, #32]
   35e54:	cmp	x1, x0
   35e58:	cset	w0, eq  // eq = none
   35e5c:	and	w0, w0, #0xff
   35e60:	and	x0, x0, #0xff
   35e64:	cmp	x0, #0x0
   35e68:	b.eq	35e8c <__sanitizer_set_death_callback@@Base+0x1ec>  // b.none
   35e6c:	ldr	x4, [sp, #32]
   35e70:	ldr	x3, [sp, #40]
   35e74:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   35e78:	add	x2, x0, #0x438
   35e7c:	mov	w1, #0x27                  	// #39
   35e80:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   35e84:	add	x0, x0, #0x3f0
   35e88:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   35e8c:	ldr	x0, [sp, #24]
   35e90:	mov	w1, #0x4                   	// #4
   35e94:	str	w1, [x0, #112]
   35e98:	ldr	x0, [sp, #24]
   35e9c:	str	xzr, [x0, #40]
   35ea0:	ldr	x0, [sp, #24]
   35ea4:	ldr	x0, [x0]
   35ea8:	ldr	x1, [x0]
   35eac:	ldr	x0, [sp, #24]
   35eb0:	blr	x1
   35eb4:	nop
   35eb8:	ldr	x30, [sp], #48
   35ebc:	ret
   35ec0:	str	x30, [sp, #-32]!
   35ec4:	str	x0, [sp, #24]
   35ec8:	ldr	x0, [sp, #24]
   35ecc:	add	x0, x0, #0x88
   35ed0:	mov	w2, #0x8                   	// #8
   35ed4:	mov	w1, #0x1                   	// #1
   35ed8:	bl	aad0 <__lsan_do_recoverable_leak_check@@Base+0x944>
   35edc:	nop
   35ee0:	ldr	x30, [sp], #32
   35ee4:	ret
   35ee8:	str	x30, [sp, #-32]!
   35eec:	str	x0, [sp, #24]
   35ef0:	ldr	x0, [sp, #24]
   35ef4:	add	x0, x0, #0x88
   35ef8:	mov	w1, #0x4                   	// #4
   35efc:	bl	ab3c <__lsan_do_recoverable_leak_check@@Base+0x9b0>
   35f00:	cmp	w0, #0x0
   35f04:	cset	w0, ne  // ne = any
   35f08:	and	w0, w0, #0xff
   35f0c:	ldr	x30, [sp], #32
   35f10:	ret
   35f14:	str	x30, [sp, #-64]!
   35f18:	str	x0, [sp, #24]
   35f1c:	str	x1, [sp, #16]
   35f20:	str	xzr, [sp, #56]
   35f24:	ldr	x0, [sp, #24]
   35f28:	ldrb	w0, [x0, #116]
   35f2c:	and	x0, x0, #0xff
   35f30:	str	x0, [sp, #48]
   35f34:	ldr	x1, [sp, #56]
   35f38:	ldr	x0, [sp, #48]
   35f3c:	cmp	x1, x0
   35f40:	cset	w0, ne  // ne = any
   35f44:	and	w0, w0, #0xff
   35f48:	and	x0, x0, #0xff
   35f4c:	cmp	x0, #0x0
   35f50:	b.eq	35f74 <__sanitizer_set_death_callback@@Base+0x2d4>  // b.none
   35f54:	ldr	x4, [sp, #48]
   35f58:	ldr	x3, [sp, #56]
   35f5c:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   35f60:	add	x2, x0, #0x488
   35f64:	mov	w1, #0x38                  	// #56
   35f68:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   35f6c:	add	x0, x0, #0x3f0
   35f70:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   35f74:	mov	x0, #0x3                   	// #3
   35f78:	str	x0, [sp, #40]
   35f7c:	ldr	x0, [sp, #24]
   35f80:	ldr	w0, [x0, #112]
   35f84:	mov	w0, w0
   35f88:	str	x0, [sp, #32]
   35f8c:	ldr	x1, [sp, #40]
   35f90:	ldr	x0, [sp, #32]
   35f94:	cmp	x1, x0
   35f98:	cset	w0, ne  // ne = any
   35f9c:	and	w0, w0, #0xff
   35fa0:	and	x0, x0, #0xff
   35fa4:	cmp	x0, #0x0
   35fa8:	b.eq	35fcc <__sanitizer_set_death_callback@@Base+0x32c>  // b.none
   35fac:	ldr	x4, [sp, #32]
   35fb0:	ldr	x3, [sp, #40]
   35fb4:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   35fb8:	add	x2, x0, #0x4a8
   35fbc:	mov	w1, #0x39                  	// #57
   35fc0:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   35fc4:	add	x0, x0, #0x3f0
   35fc8:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   35fcc:	ldr	x0, [sp, #24]
   35fd0:	mov	w1, #0x4                   	// #4
   35fd4:	str	w1, [x0, #112]
   35fd8:	ldr	x0, [sp, #24]
   35fdc:	str	xzr, [x0, #40]
   35fe0:	ldr	x0, [sp, #24]
   35fe4:	ldr	x0, [x0]
   35fe8:	add	x0, x0, #0x8
   35fec:	ldr	x2, [x0]
   35ff0:	ldr	x1, [sp, #16]
   35ff4:	ldr	x0, [sp, #24]
   35ff8:	blr	x2
   35ffc:	nop
   36000:	ldr	x30, [sp], #64
   36004:	ret
   36008:	str	x30, [sp, #-32]!
   3600c:	str	x0, [sp, #24]
   36010:	ldr	x0, [sp, #24]
   36014:	ldrb	w0, [x0, #116]
   36018:	eor	w0, w0, #0x1
   3601c:	and	w0, w0, #0xff
   36020:	cmp	w0, #0x0
   36024:	b.ne	36038 <__sanitizer_set_death_callback@@Base+0x398>  // b.any
   36028:	ldr	x0, [sp, #24]
   3602c:	ldr	w0, [x0, #112]
   36030:	cmp	w0, #0x1
   36034:	b.ne	36044 <__sanitizer_set_death_callback@@Base+0x3a4>  // b.any
   36038:	ldr	x0, [sp, #24]
   3603c:	mov	w1, #0x3                   	// #3
   36040:	str	w1, [x0, #112]
   36044:	ldr	x0, [sp, #24]
   36048:	ldr	x0, [x0]
   3604c:	add	x0, x0, #0x10
   36050:	ldr	x1, [x0]
   36054:	ldr	x0, [sp, #24]
   36058:	blr	x1
   3605c:	nop
   36060:	ldr	x30, [sp], #32
   36064:	ret
   36068:	str	x30, [sp, #-48]!
   3606c:	str	x0, [sp, #40]
   36070:	str	x1, [sp, #32]
   36074:	strb	w2, [sp, #31]
   36078:	str	x3, [sp, #16]
   3607c:	ldr	x0, [sp, #40]
   36080:	mov	w1, #0x2                   	// #2
   36084:	str	w1, [x0, #112]
   36088:	ldr	x0, [sp, #40]
   3608c:	ldr	x1, [sp, #32]
   36090:	str	x1, [x0, #32]
   36094:	ldr	x0, [sp, #40]
   36098:	ldrb	w1, [sp, #31]
   3609c:	strb	w1, [x0, #117]
   360a0:	ldr	x0, [sp, #40]
   360a4:	ldr	x0, [x0]
   360a8:	add	x0, x0, #0x18
   360ac:	ldr	x2, [x0]
   360b0:	ldr	x1, [sp, #16]
   360b4:	ldr	x0, [sp, #40]
   360b8:	blr	x2
   360bc:	nop
   360c0:	ldr	x30, [sp], #48
   360c4:	ret
   360c8:	str	x30, [sp, #-64]!
   360cc:	str	x0, [sp, #56]
   360d0:	str	x1, [sp, #48]
   360d4:	str	x2, [sp, #40]
   360d8:	strb	w3, [sp, #39]
   360dc:	str	w4, [sp, #32]
   360e0:	str	x5, [sp, #24]
   360e4:	ldr	x0, [sp, #56]
   360e8:	mov	w1, #0x1                   	// #1
   360ec:	str	w1, [x0, #112]
   360f0:	ldr	x0, [sp, #56]
   360f4:	ldr	x1, [sp, #48]
   360f8:	str	x1, [x0, #40]
   360fc:	ldr	x0, [sp, #56]
   36100:	ldr	x1, [sp, #40]
   36104:	str	x1, [x0, #16]
   36108:	ldr	x0, [sp, #56]
   3610c:	ldrb	w1, [sp, #39]
   36110:	strb	w1, [x0, #116]
   36114:	ldr	x0, [sp, #56]
   36118:	ldr	w0, [x0, #8]
   3611c:	cmp	w0, #0x0
   36120:	b.eq	36130 <__sanitizer_set_death_callback@@Base+0x490>  // b.none
   36124:	ldr	x0, [sp, #56]
   36128:	ldr	w1, [sp, #32]
   3612c:	str	w1, [x0, #120]
   36130:	ldr	x0, [sp, #56]
   36134:	ldr	x0, [x0]
   36138:	add	x0, x0, #0x20
   3613c:	ldr	x2, [x0]
   36140:	ldr	x1, [sp, #24]
   36144:	ldr	x0, [sp, #56]
   36148:	blr	x2
   3614c:	nop
   36150:	ldr	x30, [sp], #64
   36154:	ret
   36158:	str	x30, [sp, #-32]!
   3615c:	str	x0, [sp, #24]
   36160:	ldr	x0, [sp, #24]
   36164:	str	wzr, [x0, #112]
   36168:	mov	x1, #0x0                   	// #0
   3616c:	ldr	x0, [sp, #24]
   36170:	bl	35dc4 <__sanitizer_set_death_callback@@Base+0x124>
   36174:	ldr	x0, [sp, #24]
   36178:	add	x0, x0, #0x88
   3617c:	mov	w2, #0x8                   	// #8
   36180:	mov	w1, #0x0                   	// #0
   36184:	bl	aad0 <__lsan_do_recoverable_leak_check@@Base+0x944>
   36188:	ldr	x0, [sp, #24]
   3618c:	ldr	x0, [x0]
   36190:	add	x0, x0, #0x28
   36194:	ldr	x1, [x0]
   36198:	ldr	x0, [sp, #24]
   3619c:	blr	x1
   361a0:	nop
   361a4:	ldr	x30, [sp], #32
   361a8:	ret
   361ac:	str	x30, [sp, #-48]!
   361b0:	str	x0, [sp, #40]
   361b4:	str	x1, [sp, #32]
   361b8:	str	w2, [sp, #28]
   361bc:	str	w3, [sp, #24]
   361c0:	str	w4, [sp, #20]
   361c4:	ldr	x0, [sp, #40]
   361c8:	ldr	x1, [sp, #32]
   361cc:	str	x1, [x0]
   361d0:	ldr	x0, [sp, #40]
   361d4:	ldr	w1, [sp, #28]
   361d8:	str	w1, [x0, #8]
   361dc:	ldr	x0, [sp, #40]
   361e0:	ldr	w1, [sp, #24]
   361e4:	str	w1, [x0, #12]
   361e8:	ldr	x0, [sp, #40]
   361ec:	ldr	w1, [sp, #20]
   361f0:	str	w1, [x0, #16]
   361f4:	ldr	x0, [sp, #40]
   361f8:	add	x0, x0, #0x18
   361fc:	bl	239c8 <__sanitizer_set_report_fd@@Base+0x47d0>
   36200:	ldr	x0, [sp, #40]
   36204:	str	wzr, [x0, #112]
   36208:	ldr	x0, [sp, #40]
   3620c:	str	xzr, [x0, #120]
   36210:	ldr	x0, [sp, #40]
   36214:	str	xzr, [x0, #128]
   36218:	ldr	x0, [sp, #40]
   3621c:	str	xzr, [x0, #136]
   36220:	ldr	x0, [sp, #40]
   36224:	str	xzr, [x0, #144]
   36228:	ldr	x0, [sp, #40]
   3622c:	ldr	w0, [x0, #8]
   36230:	mov	w0, w0
   36234:	lsl	x3, x0, #3
   36238:	mov	w2, #0x0                   	// #0
   3623c:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   36240:	add	x1, x0, #0x4d8
   36244:	mov	x0, x3
   36248:	bl	26a50 <__sanitizer_set_report_fd@@Base+0x7858>
   3624c:	mov	x1, x0
   36250:	ldr	x0, [sp, #40]
   36254:	str	x1, [x0, #152]
   36258:	ldr	x0, [sp, #40]
   3625c:	add	x0, x0, #0xa0
   36260:	bl	37394 <__sanitizer_set_death_callback@@Base+0x16f4>
   36264:	ldr	x0, [sp, #40]
   36268:	add	x0, x0, #0xb8
   3626c:	bl	37394 <__sanitizer_set_death_callback@@Base+0x16f4>
   36270:	nop
   36274:	ldr	x30, [sp], #48
   36278:	ret
   3627c:	str	x30, [sp, #-64]!
   36280:	str	x0, [sp, #40]
   36284:	str	x1, [sp, #32]
   36288:	str	x2, [sp, #24]
   3628c:	str	x3, [sp, #16]
   36290:	ldr	x0, [sp, #40]
   36294:	add	x1, x0, #0x18
   36298:	add	x0, sp, #0x38
   3629c:	bl	b658 <__lsan_do_recoverable_leak_check@@Base+0x14cc>
   362a0:	ldr	x0, [sp, #32]
   362a4:	cmp	x0, #0x0
   362a8:	b.eq	362c0 <__sanitizer_set_death_callback@@Base+0x620>  // b.none
   362ac:	ldr	x0, [sp, #40]
   362b0:	ldr	w0, [x0, #112]
   362b4:	mov	w1, w0
   362b8:	ldr	x0, [sp, #32]
   362bc:	str	x1, [x0]
   362c0:	ldr	x0, [sp, #24]
   362c4:	cmp	x0, #0x0
   362c8:	b.eq	362dc <__sanitizer_set_death_callback@@Base+0x63c>  // b.none
   362cc:	ldr	x0, [sp, #40]
   362d0:	ldr	x1, [x0, #144]
   362d4:	ldr	x0, [sp, #24]
   362d8:	str	x1, [x0]
   362dc:	ldr	x0, [sp, #16]
   362e0:	cmp	x0, #0x0
   362e4:	b.eq	362f8 <__sanitizer_set_death_callback@@Base+0x658>  // b.none
   362e8:	ldr	x0, [sp, #40]
   362ec:	ldr	x1, [x0, #128]
   362f0:	ldr	x0, [sp, #16]
   362f4:	str	x1, [x0]
   362f8:	add	x0, sp, #0x38
   362fc:	bl	b688 <__lsan_do_recoverable_leak_check@@Base+0x14fc>
   36300:	nop
   36304:	ldr	x30, [sp], #64
   36308:	ret
   3630c:	stp	x19, x30, [sp, #-48]!
   36310:	str	x0, [sp, #24]
   36314:	ldr	x0, [sp, #24]
   36318:	add	x1, x0, #0x18
   3631c:	add	x0, sp, #0x28
   36320:	bl	b658 <__lsan_do_recoverable_leak_check@@Base+0x14cc>
   36324:	ldr	x0, [sp, #24]
   36328:	ldr	x19, [x0, #136]
   3632c:	add	x0, sp, #0x28
   36330:	bl	b688 <__lsan_do_recoverable_leak_check@@Base+0x14fc>
   36334:	mov	x0, x19
   36338:	ldp	x19, x30, [sp], #48
   3633c:	ret
   36340:	stp	x19, x30, [sp, #-160]!
   36344:	str	x0, [sp, #40]
   36348:	str	x1, [sp, #32]
   3634c:	strb	w2, [sp, #31]
   36350:	str	w3, [sp, #24]
   36354:	str	x4, [sp, #16]
   36358:	ldr	x0, [sp, #40]
   3635c:	add	x1, x0, #0x18
   36360:	add	x0, sp, #0x38
   36364:	bl	b658 <__lsan_do_recoverable_leak_check@@Base+0x14cc>
   36368:	mov	w0, #0xffffffff            	// #-1
   3636c:	str	w0, [sp, #156]
   36370:	ldr	x0, [sp, #40]
   36374:	bl	37310 <__sanitizer_set_death_callback@@Base+0x1670>
   36378:	str	x0, [sp, #144]
   3637c:	ldr	x0, [sp, #144]
   36380:	cmp	x0, #0x0
   36384:	b.eq	36398 <__sanitizer_set_death_callback@@Base+0x6f8>  // b.none
   36388:	ldr	x0, [sp, #144]
   3638c:	ldr	w0, [x0, #8]
   36390:	str	w0, [sp, #156]
   36394:	b	36424 <__sanitizer_set_death_callback@@Base+0x784>
   36398:	ldr	x0, [sp, #40]
   3639c:	ldr	w1, [x0, #112]
   363a0:	ldr	x0, [sp, #40]
   363a4:	ldr	w0, [x0, #8]
   363a8:	cmp	w1, w0
   363ac:	b.cs	363fc <__sanitizer_set_death_callback@@Base+0x75c>  // b.hs, b.nlast
   363b0:	ldr	x0, [sp, #40]
   363b4:	ldr	w0, [x0, #112]
   363b8:	add	w2, w0, #0x1
   363bc:	ldr	x1, [sp, #40]
   363c0:	str	w2, [x1, #112]
   363c4:	str	w0, [sp, #156]
   363c8:	ldr	x0, [sp, #40]
   363cc:	ldr	x1, [x0]
   363d0:	ldr	w0, [sp, #156]
   363d4:	blr	x1
   363d8:	str	x0, [sp, #144]
   363dc:	ldr	x0, [sp, #40]
   363e0:	ldr	x1, [x0, #152]
   363e4:	ldr	w0, [sp, #156]
   363e8:	lsl	x0, x0, #3
   363ec:	add	x0, x1, x0
   363f0:	ldr	x1, [sp, #144]
   363f4:	str	x1, [x0]
   363f8:	b	36424 <__sanitizer_set_death_callback@@Base+0x784>
   363fc:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   36400:	ldr	x0, [x0, #4008]
   36404:	ldr	x1, [x0]
   36408:	ldr	x0, [sp, #40]
   3640c:	ldr	w0, [x0, #8]
   36410:	mov	w2, w0
   36414:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   36418:	add	x0, x0, #0x4e8
   3641c:	bl	2a3fc <OnPrint@@Base+0x454>
   36420:	bl	35b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f2c>
   36424:	ldr	x0, [sp, #144]
   36428:	str	x0, [sp, #136]
   3642c:	str	xzr, [sp, #128]
   36430:	ldr	x1, [sp, #136]
   36434:	ldr	x0, [sp, #128]
   36438:	cmp	x1, x0
   3643c:	cset	w0, eq  // eq = none
   36440:	and	w0, w0, #0xff
   36444:	and	x0, x0, #0xff
   36448:	cmp	x0, #0x0
   3644c:	b.eq	36470 <__sanitizer_set_death_callback@@Base+0x7d0>  // b.none
   36450:	ldr	x4, [sp, #128]
   36454:	ldr	x3, [sp, #136]
   36458:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   3645c:	add	x2, x0, #0x518
   36460:	mov	w1, #0x9c                  	// #156
   36464:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   36468:	add	x0, x0, #0x3f0
   3646c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   36470:	ldr	w0, [sp, #156]
   36474:	str	x0, [sp, #120]
   36478:	mov	x0, #0xffffffff            	// #4294967295
   3647c:	str	x0, [sp, #112]
   36480:	ldr	x1, [sp, #120]
   36484:	ldr	x0, [sp, #112]
   36488:	cmp	x1, x0
   3648c:	cset	w0, eq  // eq = none
   36490:	and	w0, w0, #0xff
   36494:	and	x0, x0, #0xff
   36498:	cmp	x0, #0x0
   3649c:	b.eq	364c0 <__sanitizer_set_death_callback@@Base+0x820>  // b.none
   364a0:	ldr	x4, [sp, #112]
   364a4:	ldr	x3, [sp, #120]
   364a8:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   364ac:	add	x2, x0, #0x530
   364b0:	mov	w1, #0x9d                  	// #157
   364b4:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   364b8:	add	x0, x0, #0x3f0
   364bc:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   364c0:	ldr	w0, [sp, #156]
   364c4:	str	x0, [sp, #104]
   364c8:	ldr	x0, [sp, #40]
   364cc:	ldr	w0, [x0, #8]
   364d0:	mov	w0, w0
   364d4:	str	x0, [sp, #96]
   364d8:	ldr	x1, [sp, #104]
   364dc:	ldr	x0, [sp, #96]
   364e0:	cmp	x1, x0
   364e4:	cset	w0, cs  // cs = hs, nlast
   364e8:	and	w0, w0, #0xff
   364ec:	and	x0, x0, #0xff
   364f0:	cmp	x0, #0x0
   364f4:	b.eq	36518 <__sanitizer_set_death_callback@@Base+0x878>  // b.none
   364f8:	ldr	x4, [sp, #96]
   364fc:	ldr	x3, [sp, #104]
   36500:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   36504:	add	x2, x0, #0x550
   36508:	mov	w1, #0x9e                  	// #158
   3650c:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   36510:	add	x0, x0, #0x3f0
   36514:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   36518:	ldr	x0, [sp, #144]
   3651c:	ldr	w0, [x0, #112]
   36520:	mov	w0, w0
   36524:	str	x0, [sp, #88]
   36528:	str	xzr, [sp, #80]
   3652c:	ldr	x1, [sp, #88]
   36530:	ldr	x0, [sp, #80]
   36534:	cmp	x1, x0
   36538:	cset	w0, ne  // ne = any
   3653c:	and	w0, w0, #0xff
   36540:	and	x0, x0, #0xff
   36544:	cmp	x0, #0x0
   36548:	b.eq	3656c <__sanitizer_set_death_callback@@Base+0x8cc>  // b.none
   3654c:	ldr	x4, [sp, #80]
   36550:	ldr	x3, [sp, #88]
   36554:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   36558:	add	x2, x0, #0x570
   3655c:	mov	w1, #0x9f                  	// #159
   36560:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   36564:	add	x0, x0, #0x3f0
   36568:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   3656c:	ldr	x0, [sp, #40]
   36570:	ldr	x0, [x0, #128]
   36574:	add	x1, x0, #0x1
   36578:	ldr	x0, [sp, #40]
   3657c:	str	x1, [x0, #128]
   36580:	ldr	x0, [sp, #40]
   36584:	ldr	x1, [x0, #136]
   36588:	ldr	x0, [sp, #40]
   3658c:	ldr	x0, [x0, #128]
   36590:	cmp	x1, x0
   36594:	b.cs	36604 <__sanitizer_set_death_callback@@Base+0x964>  // b.hs, b.nlast
   36598:	ldr	x0, [sp, #40]
   3659c:	ldr	x0, [x0, #136]
   365a0:	add	x1, x0, #0x1
   365a4:	ldr	x0, [sp, #40]
   365a8:	str	x1, [x0, #136]
   365ac:	ldr	x0, [sp, #40]
   365b0:	ldr	x0, [x0, #128]
   365b4:	str	x0, [sp, #72]
   365b8:	ldr	x0, [sp, #40]
   365bc:	ldr	x0, [x0, #136]
   365c0:	str	x0, [sp, #64]
   365c4:	ldr	x1, [sp, #72]
   365c8:	ldr	x0, [sp, #64]
   365cc:	cmp	x1, x0
   365d0:	cset	w0, ne  // ne = any
   365d4:	and	w0, w0, #0xff
   365d8:	and	x0, x0, #0xff
   365dc:	cmp	x0, #0x0
   365e0:	b.eq	36604 <__sanitizer_set_death_callback@@Base+0x964>  // b.none
   365e4:	ldr	x4, [sp, #64]
   365e8:	ldr	x3, [sp, #72]
   365ec:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   365f0:	add	x2, x0, #0x5a0
   365f4:	mov	w1, #0xa3                  	// #163
   365f8:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   365fc:	add	x0, x0, #0x3f0
   36600:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   36604:	ldr	x0, [sp, #40]
   36608:	ldr	x0, [x0, #120]
   3660c:	add	x2, x0, #0x1
   36610:	ldr	x1, [sp, #40]
   36614:	str	x2, [x1, #120]
   36618:	ldr	x5, [sp, #16]
   3661c:	ldr	w4, [sp, #24]
   36620:	ldrb	w3, [sp, #31]
   36624:	mov	x2, x0
   36628:	ldr	x1, [sp, #32]
   3662c:	ldr	x0, [sp, #144]
   36630:	bl	360c8 <__sanitizer_set_death_callback@@Base+0x428>
   36634:	ldr	w19, [sp, #156]
   36638:	add	x0, sp, #0x38
   3663c:	bl	b688 <__lsan_do_recoverable_leak_check@@Base+0x14fc>
   36640:	mov	w0, w19
   36644:	ldp	x19, x30, [sp], #160
   36648:	ret
   3664c:	str	x30, [sp, #-64]!
   36650:	str	x0, [sp, #40]
   36654:	str	x1, [sp, #32]
   36658:	str	x2, [sp, #24]
   3665c:	ldr	x0, [sp, #40]
   36660:	bl	160b8 <__interceptor_sigaction@@Base+0xb50>
   36664:	str	wzr, [sp, #60]
   36668:	ldr	x0, [sp, #40]
   3666c:	ldr	w0, [x0, #112]
   36670:	ldr	w1, [sp, #60]
   36674:	cmp	w1, w0
   36678:	b.cs	366cc <__sanitizer_set_death_callback@@Base+0xa2c>  // b.hs, b.nlast
   3667c:	ldr	x0, [sp, #40]
   36680:	ldr	x1, [x0, #152]
   36684:	ldr	w0, [sp, #60]
   36688:	lsl	x0, x0, #3
   3668c:	add	x0, x1, x0
   36690:	ldr	x0, [x0]
   36694:	str	x0, [sp, #48]
   36698:	ldr	x0, [sp, #48]
   3669c:	cmp	x0, #0x0
   366a0:	b.eq	366b8 <__sanitizer_set_death_callback@@Base+0xa18>  // b.none
   366a4:	ldr	x2, [sp, #32]
   366a8:	ldr	x1, [sp, #24]
   366ac:	ldr	x0, [sp, #48]
   366b0:	blr	x2
   366b4:	b	366bc <__sanitizer_set_death_callback@@Base+0xa1c>
   366b8:	nop
   366bc:	ldr	w0, [sp, #60]
   366c0:	add	w0, w0, #0x1
   366c4:	str	w0, [sp, #60]
   366c8:	b	36668 <__sanitizer_set_death_callback@@Base+0x9c8>
   366cc:	nop
   366d0:	ldr	x30, [sp], #64
   366d4:	ret
   366d8:	stp	x19, x30, [sp, #-80]!
   366dc:	str	x0, [sp, #40]
   366e0:	str	x1, [sp, #32]
   366e4:	str	x2, [sp, #24]
   366e8:	ldr	x0, [sp, #40]
   366ec:	add	x1, x0, #0x18
   366f0:	add	x0, sp, #0x38
   366f4:	bl	b658 <__lsan_do_recoverable_leak_check@@Base+0x14cc>
   366f8:	str	wzr, [sp, #76]
   366fc:	ldr	x0, [sp, #40]
   36700:	ldr	w0, [x0, #112]
   36704:	ldr	w1, [sp, #76]
   36708:	cmp	w1, w0
   3670c:	b.cs	36784 <__sanitizer_set_death_callback@@Base+0xae4>  // b.hs, b.nlast
   36710:	ldr	x0, [sp, #40]
   36714:	ldr	x1, [x0, #152]
   36718:	ldr	w0, [sp, #76]
   3671c:	lsl	x0, x0, #3
   36720:	add	x0, x1, x0
   36724:	ldr	x0, [x0]
   36728:	str	x0, [sp, #64]
   3672c:	ldr	x0, [sp, #64]
   36730:	cmp	x0, #0x0
   36734:	b.eq	3675c <__sanitizer_set_death_callback@@Base+0xabc>  // b.none
   36738:	ldr	x2, [sp, #32]
   3673c:	ldr	x1, [sp, #24]
   36740:	ldr	x0, [sp, #64]
   36744:	blr	x2
   36748:	and	w0, w0, #0xff
   3674c:	cmp	w0, #0x0
   36750:	b.eq	3675c <__sanitizer_set_death_callback@@Base+0xabc>  // b.none
   36754:	mov	w0, #0x1                   	// #1
   36758:	b	36760 <__sanitizer_set_death_callback@@Base+0xac0>
   3675c:	mov	w0, #0x0                   	// #0
   36760:	cmp	w0, #0x0
   36764:	b.eq	36774 <__sanitizer_set_death_callback@@Base+0xad4>  // b.none
   36768:	ldr	x0, [sp, #64]
   3676c:	ldr	w19, [x0, #8]
   36770:	b	36788 <__sanitizer_set_death_callback@@Base+0xae8>
   36774:	ldr	w0, [sp, #76]
   36778:	add	w0, w0, #0x1
   3677c:	str	w0, [sp, #76]
   36780:	b	366fc <__sanitizer_set_death_callback@@Base+0xa5c>
   36784:	mov	w19, #0xffffffff            	// #-1
   36788:	add	x0, sp, #0x38
   3678c:	bl	b688 <__lsan_do_recoverable_leak_check@@Base+0x14fc>
   36790:	mov	w0, w19
   36794:	ldp	x19, x30, [sp], #80
   36798:	ret
   3679c:	str	x30, [sp, #-64]!
   367a0:	str	x0, [sp, #40]
   367a4:	str	x1, [sp, #32]
   367a8:	str	x2, [sp, #24]
   367ac:	ldr	x0, [sp, #40]
   367b0:	bl	160b8 <__interceptor_sigaction@@Base+0xb50>
   367b4:	str	wzr, [sp, #60]
   367b8:	ldr	x0, [sp, #40]
   367bc:	ldr	w0, [x0, #112]
   367c0:	ldr	w1, [sp, #60]
   367c4:	cmp	w1, w0
   367c8:	b.cs	3683c <__sanitizer_set_death_callback@@Base+0xb9c>  // b.hs, b.nlast
   367cc:	ldr	x0, [sp, #40]
   367d0:	ldr	x1, [x0, #152]
   367d4:	ldr	w0, [sp, #60]
   367d8:	lsl	x0, x0, #3
   367dc:	add	x0, x1, x0
   367e0:	ldr	x0, [x0]
   367e4:	str	x0, [sp, #48]
   367e8:	ldr	x0, [sp, #48]
   367ec:	cmp	x0, #0x0
   367f0:	b.eq	36818 <__sanitizer_set_death_callback@@Base+0xb78>  // b.none
   367f4:	ldr	x2, [sp, #32]
   367f8:	ldr	x1, [sp, #24]
   367fc:	ldr	x0, [sp, #48]
   36800:	blr	x2
   36804:	and	w0, w0, #0xff
   36808:	cmp	w0, #0x0
   3680c:	b.eq	36818 <__sanitizer_set_death_callback@@Base+0xb78>  // b.none
   36810:	mov	w0, #0x1                   	// #1
   36814:	b	3681c <__sanitizer_set_death_callback@@Base+0xb7c>
   36818:	mov	w0, #0x0                   	// #0
   3681c:	cmp	w0, #0x0
   36820:	b.eq	3682c <__sanitizer_set_death_callback@@Base+0xb8c>  // b.none
   36824:	ldr	x0, [sp, #48]
   36828:	b	36840 <__sanitizer_set_death_callback@@Base+0xba0>
   3682c:	ldr	w0, [sp, #60]
   36830:	add	w0, w0, #0x1
   36834:	str	w0, [sp, #60]
   36838:	b	367b8 <__sanitizer_set_death_callback@@Base+0xb18>
   3683c:	mov	x0, #0x0                   	// #0
   36840:	ldr	x30, [sp], #64
   36844:	ret
   36848:	sub	sp, sp, #0x10
   3684c:	str	x0, [sp, #8]
   36850:	str	x1, [sp]
   36854:	ldr	x0, [sp, #8]
   36858:	ldr	x1, [x0, #32]
   3685c:	ldr	x0, [sp]
   36860:	cmp	x1, x0
   36864:	b.ne	36890 <__sanitizer_set_death_callback@@Base+0xbf0>  // b.any
   36868:	ldr	x0, [sp, #8]
   3686c:	ldr	w0, [x0, #112]
   36870:	cmp	w0, #0x0
   36874:	b.eq	36890 <__sanitizer_set_death_callback@@Base+0xbf0>  // b.none
   36878:	ldr	x0, [sp, #8]
   3687c:	ldr	w0, [x0, #112]
   36880:	cmp	w0, #0x4
   36884:	b.eq	36890 <__sanitizer_set_death_callback@@Base+0xbf0>  // b.none
   36888:	mov	w0, #0x1                   	// #1
   3688c:	b	36894 <__sanitizer_set_death_callback@@Base+0xbf4>
   36890:	mov	w0, #0x0                   	// #0
   36894:	add	sp, sp, #0x10
   36898:	ret
   3689c:	str	x30, [sp, #-32]!
   368a0:	str	x0, [sp, #24]
   368a4:	str	x1, [sp, #16]
   368a8:	ldr	x0, [sp, #16]
   368ac:	mov	x2, x0
   368b0:	adrp	x0, 36000 <__sanitizer_set_death_callback@@Base+0x360>
   368b4:	add	x1, x0, #0x848
   368b8:	ldr	x0, [sp, #24]
   368bc:	bl	3679c <__sanitizer_set_death_callback@@Base+0xafc>
   368c0:	ldr	x30, [sp], #32
   368c4:	ret
   368c8:	str	x30, [sp, #-112]!
   368cc:	str	x0, [sp, #40]
   368d0:	str	w1, [sp, #36]
   368d4:	str	x2, [sp, #24]
   368d8:	ldr	x0, [sp, #40]
   368dc:	add	x1, x0, #0x18
   368e0:	add	x0, sp, #0x30
   368e4:	bl	b658 <__lsan_do_recoverable_leak_check@@Base+0x14cc>
   368e8:	ldr	w0, [sp, #36]
   368ec:	str	x0, [sp, #104]
   368f0:	ldr	x0, [sp, #40]
   368f4:	ldr	w0, [x0, #112]
   368f8:	mov	w0, w0
   368fc:	str	x0, [sp, #96]
   36900:	ldr	x1, [sp, #104]
   36904:	ldr	x0, [sp, #96]
   36908:	cmp	x1, x0
   3690c:	cset	w0, cs  // cs = hs, nlast
   36910:	and	w0, w0, #0xff
   36914:	and	x0, x0, #0xff
   36918:	cmp	x0, #0x0
   3691c:	b.eq	36940 <__sanitizer_set_death_callback@@Base+0xca0>  // b.none
   36920:	ldr	x4, [sp, #96]
   36924:	ldr	x3, [sp, #104]
   36928:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   3692c:	add	x2, x0, #0x5d0
   36930:	mov	w1, #0xd7                  	// #215
   36934:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   36938:	add	x0, x0, #0x3f0
   3693c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   36940:	ldr	x0, [sp, #40]
   36944:	ldr	x1, [x0, #152]
   36948:	ldr	w0, [sp, #36]
   3694c:	lsl	x0, x0, #3
   36950:	add	x0, x1, x0
   36954:	ldr	x0, [x0]
   36958:	str	x0, [sp, #88]
   3695c:	ldr	x0, [sp, #88]
   36960:	str	x0, [sp, #80]
   36964:	str	xzr, [sp, #72]
   36968:	ldr	x1, [sp, #80]
   3696c:	ldr	x0, [sp, #72]
   36970:	cmp	x1, x0
   36974:	cset	w0, eq  // eq = none
   36978:	and	w0, w0, #0xff
   3697c:	and	x0, x0, #0xff
   36980:	cmp	x0, #0x0
   36984:	b.eq	369a8 <__sanitizer_set_death_callback@@Base+0xd08>  // b.none
   36988:	ldr	x4, [sp, #72]
   3698c:	ldr	x3, [sp, #80]
   36990:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   36994:	add	x2, x0, #0x518
   36998:	mov	w1, #0xd9                  	// #217
   3699c:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   369a0:	add	x0, x0, #0x3f0
   369a4:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   369a8:	mov	x0, #0x2                   	// #2
   369ac:	str	x0, [sp, #64]
   369b0:	ldr	x0, [sp, #88]
   369b4:	ldr	w0, [x0, #112]
   369b8:	mov	w0, w0
   369bc:	str	x0, [sp, #56]
   369c0:	ldr	x1, [sp, #64]
   369c4:	ldr	x0, [sp, #56]
   369c8:	cmp	x1, x0
   369cc:	cset	w0, ne  // ne = any
   369d0:	and	w0, w0, #0xff
   369d4:	and	x0, x0, #0xff
   369d8:	cmp	x0, #0x0
   369dc:	b.eq	36a00 <__sanitizer_set_death_callback@@Base+0xd60>  // b.none
   369e0:	ldr	x4, [sp, #56]
   369e4:	ldr	x3, [sp, #64]
   369e8:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   369ec:	add	x2, x0, #0x5f0
   369f0:	mov	w1, #0xda                  	// #218
   369f4:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   369f8:	add	x0, x0, #0x3f0
   369fc:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   36a00:	ldr	x1, [sp, #24]
   36a04:	ldr	x0, [sp, #88]
   36a08:	bl	35dc4 <__sanitizer_set_death_callback@@Base+0x124>
   36a0c:	add	x0, sp, #0x30
   36a10:	bl	b688 <__lsan_do_recoverable_leak_check@@Base+0x14fc>
   36a14:	nop
   36a18:	ldr	x30, [sp], #112
   36a1c:	ret
   36a20:	stp	x19, x30, [sp, #-80]!
   36a24:	str	x0, [sp, #40]
   36a28:	str	x1, [sp, #32]
   36a2c:	str	x2, [sp, #24]
   36a30:	ldr	x0, [sp, #40]
   36a34:	add	x1, x0, #0x18
   36a38:	add	x0, sp, #0x38
   36a3c:	bl	b658 <__lsan_do_recoverable_leak_check@@Base+0x14cc>
   36a40:	str	wzr, [sp, #76]
   36a44:	ldr	x0, [sp, #40]
   36a48:	ldr	w0, [x0, #112]
   36a4c:	ldr	w1, [sp, #76]
   36a50:	cmp	w1, w0
   36a54:	b.cs	36ac8 <__sanitizer_set_death_callback@@Base+0xe28>  // b.hs, b.nlast
   36a58:	ldr	x0, [sp, #40]
   36a5c:	ldr	x1, [x0, #152]
   36a60:	ldr	w0, [sp, #76]
   36a64:	lsl	x0, x0, #3
   36a68:	add	x0, x1, x0
   36a6c:	ldr	x0, [x0]
   36a70:	str	x0, [sp, #64]
   36a74:	ldr	x0, [sp, #64]
   36a78:	cmp	x0, #0x0
   36a7c:	b.eq	36ab8 <__sanitizer_set_death_callback@@Base+0xe18>  // b.none
   36a80:	ldr	x0, [sp, #64]
   36a84:	ldr	x0, [x0, #40]
   36a88:	ldr	x1, [sp, #32]
   36a8c:	cmp	x1, x0
   36a90:	b.ne	36ab8 <__sanitizer_set_death_callback@@Base+0xe18>  // b.any
   36a94:	ldr	x0, [sp, #64]
   36a98:	ldr	w0, [x0, #112]
   36a9c:	cmp	w0, #0x0
   36aa0:	b.eq	36ab8 <__sanitizer_set_death_callback@@Base+0xe18>  // b.none
   36aa4:	ldr	x1, [sp, #24]
   36aa8:	ldr	x0, [sp, #64]
   36aac:	bl	35dc4 <__sanitizer_set_death_callback@@Base+0x124>
   36ab0:	mov	w19, #0x0                   	// #0
   36ab4:	b	36acc <__sanitizer_set_death_callback@@Base+0xe2c>
   36ab8:	ldr	w0, [sp, #76]
   36abc:	add	w0, w0, #0x1
   36ac0:	str	w0, [sp, #76]
   36ac4:	b	36a44 <__sanitizer_set_death_callback@@Base+0xda4>
   36ac8:	mov	w19, #0x1                   	// #1
   36acc:	add	x0, sp, #0x38
   36ad0:	bl	b688 <__lsan_do_recoverable_leak_check@@Base+0x14fc>
   36ad4:	cmp	w19, #0x1
   36ad8:	ldp	x19, x30, [sp], #80
   36adc:	ret
   36ae0:	stp	x19, x30, [sp, #-96]!
   36ae4:	str	x0, [sp, #40]
   36ae8:	str	w1, [sp, #36]
   36aec:	str	x2, [sp, #24]
   36af0:	ldr	x0, [sp, #40]
   36af4:	add	x1, x0, #0x18
   36af8:	add	x0, sp, #0x30
   36afc:	bl	b658 <__lsan_do_recoverable_leak_check@@Base+0x14cc>
   36b00:	ldr	w0, [sp, #36]
   36b04:	str	x0, [sp, #88]
   36b08:	ldr	x0, [sp, #40]
   36b0c:	ldr	w0, [x0, #112]
   36b10:	mov	w0, w0
   36b14:	str	x0, [sp, #80]
   36b18:	ldr	x1, [sp, #88]
   36b1c:	ldr	x0, [sp, #80]
   36b20:	cmp	x1, x0
   36b24:	cset	w0, cs  // cs = hs, nlast
   36b28:	and	w0, w0, #0xff
   36b2c:	and	x0, x0, #0xff
   36b30:	cmp	x0, #0x0
   36b34:	b.eq	36b58 <__sanitizer_set_death_callback@@Base+0xeb8>  // b.none
   36b38:	ldr	x4, [sp, #80]
   36b3c:	ldr	x3, [sp, #88]
   36b40:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   36b44:	add	x2, x0, #0x5d0
   36b48:	mov	w1, #0xed                  	// #237
   36b4c:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   36b50:	add	x0, x0, #0x3f0
   36b54:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   36b58:	ldr	x0, [sp, #40]
   36b5c:	ldr	x1, [x0, #152]
   36b60:	ldr	w0, [sp, #36]
   36b64:	lsl	x0, x0, #3
   36b68:	add	x0, x1, x0
   36b6c:	ldr	x0, [x0]
   36b70:	str	x0, [sp, #72]
   36b74:	ldr	x0, [sp, #72]
   36b78:	str	x0, [sp, #64]
   36b7c:	str	xzr, [sp, #56]
   36b80:	ldr	x1, [sp, #64]
   36b84:	ldr	x0, [sp, #56]
   36b88:	cmp	x1, x0
   36b8c:	cset	w0, eq  // eq = none
   36b90:	and	w0, w0, #0xff
   36b94:	and	x0, x0, #0xff
   36b98:	cmp	x0, #0x0
   36b9c:	b.eq	36bc0 <__sanitizer_set_death_callback@@Base+0xf20>  // b.none
   36ba0:	ldr	x4, [sp, #56]
   36ba4:	ldr	x3, [sp, #64]
   36ba8:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   36bac:	add	x2, x0, #0x518
   36bb0:	mov	w1, #0xef                  	// #239
   36bb4:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   36bb8:	add	x0, x0, #0x3f0
   36bbc:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   36bc0:	ldr	x0, [sp, #72]
   36bc4:	ldr	w0, [x0, #112]
   36bc8:	cmp	w0, #0x0
   36bcc:	b.ne	36bf4 <__sanitizer_set_death_callback@@Base+0xf54>  // b.any
   36bd0:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   36bd4:	ldr	x0, [x0, #4008]
   36bd8:	ldr	x0, [x0]
   36bdc:	mov	x1, x0
   36be0:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   36be4:	add	x0, x0, #0x638
   36be8:	bl	2a3fc <OnPrint@@Base+0x454>
   36bec:	mov	w19, #0x0                   	// #0
   36bf0:	b	36c48 <__sanitizer_set_death_callback@@Base+0xfa8>
   36bf4:	ldr	x0, [sp, #72]
   36bf8:	ldr	x0, [x0]
   36bfc:	add	x0, x0, #0x30
   36c00:	ldr	x2, [x0]
   36c04:	ldr	x1, [sp, #24]
   36c08:	ldr	x0, [sp, #72]
   36c0c:	blr	x2
   36c10:	ldr	x0, [sp, #72]
   36c14:	ldr	w0, [x0, #112]
   36c18:	cmp	w0, #0x3
   36c1c:	b.ne	36c38 <__sanitizer_set_death_callback@@Base+0xf98>  // b.any
   36c20:	ldr	x0, [sp, #72]
   36c24:	bl	35e0c <__sanitizer_set_death_callback@@Base+0x16c>
   36c28:	ldr	x1, [sp, #72]
   36c2c:	ldr	x0, [sp, #40]
   36c30:	bl	371cc <__sanitizer_set_death_callback@@Base+0x152c>
   36c34:	b	36c44 <__sanitizer_set_death_callback@@Base+0xfa4>
   36c38:	ldr	x0, [sp, #72]
   36c3c:	mov	w1, #0x1                   	// #1
   36c40:	strb	w1, [x0, #116]
   36c44:	mov	w19, #0x1                   	// #1
   36c48:	add	x0, sp, #0x30
   36c4c:	bl	b688 <__lsan_do_recoverable_leak_check@@Base+0x14fc>
   36c50:	cmp	w19, #0x1
   36c54:	ldp	x19, x30, [sp], #96
   36c58:	ret
   36c5c:	stp	x19, x30, [sp, #-112]!
   36c60:	str	x0, [sp, #40]
   36c64:	str	w1, [sp, #36]
   36c68:	str	x2, [sp, #24]
   36c6c:	strb	wzr, [sp, #111]
   36c70:	ldr	x0, [sp, #40]
   36c74:	add	x1, x0, #0x18
   36c78:	add	x0, sp, #0x38
   36c7c:	bl	b658 <__lsan_do_recoverable_leak_check@@Base+0x14cc>
   36c80:	ldr	w0, [sp, #36]
   36c84:	str	x0, [sp, #96]
   36c88:	ldr	x0, [sp, #40]
   36c8c:	ldr	w0, [x0, #112]
   36c90:	mov	w0, w0
   36c94:	str	x0, [sp, #88]
   36c98:	ldr	x1, [sp, #96]
   36c9c:	ldr	x0, [sp, #88]
   36ca0:	cmp	x1, x0
   36ca4:	cset	w0, cs  // cs = hs, nlast
   36ca8:	and	w0, w0, #0xff
   36cac:	and	x0, x0, #0xff
   36cb0:	cmp	x0, #0x0
   36cb4:	b.eq	36cd8 <__sanitizer_set_death_callback@@Base+0x1038>  // b.none
   36cb8:	ldr	x4, [sp, #88]
   36cbc:	ldr	x3, [sp, #96]
   36cc0:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   36cc4:	add	x2, x0, #0x5d0
   36cc8:	mov	w1, #0x102                 	// #258
   36ccc:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   36cd0:	add	x0, x0, #0x3f0
   36cd4:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   36cd8:	ldr	x0, [sp, #40]
   36cdc:	ldr	x1, [x0, #152]
   36ce0:	ldr	w0, [sp, #36]
   36ce4:	lsl	x0, x0, #3
   36ce8:	add	x0, x1, x0
   36cec:	ldr	x0, [x0]
   36cf0:	str	x0, [sp, #80]
   36cf4:	ldr	x0, [sp, #80]
   36cf8:	str	x0, [sp, #72]
   36cfc:	str	xzr, [sp, #64]
   36d00:	ldr	x1, [sp, #72]
   36d04:	ldr	x0, [sp, #64]
   36d08:	cmp	x1, x0
   36d0c:	cset	w0, eq  // eq = none
   36d10:	and	w0, w0, #0xff
   36d14:	and	x0, x0, #0xff
   36d18:	cmp	x0, #0x0
   36d1c:	b.eq	36d40 <__sanitizer_set_death_callback@@Base+0x10a0>  // b.none
   36d20:	ldr	x4, [sp, #64]
   36d24:	ldr	x3, [sp, #72]
   36d28:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   36d2c:	add	x2, x0, #0x518
   36d30:	mov	w1, #0x104                 	// #260
   36d34:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   36d38:	add	x0, x0, #0x3f0
   36d3c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   36d40:	ldr	x0, [sp, #80]
   36d44:	ldr	w0, [x0, #112]
   36d48:	cmp	w0, #0x0
   36d4c:	b.ne	36d74 <__sanitizer_set_death_callback@@Base+0x10d4>  // b.any
   36d50:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   36d54:	ldr	x0, [x0, #4008]
   36d58:	ldr	x0, [x0]
   36d5c:	mov	x1, x0
   36d60:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   36d64:	add	x0, x0, #0x660
   36d68:	bl	2a3fc <OnPrint@@Base+0x454>
   36d6c:	mov	w19, #0x0                   	// #0
   36d70:	b	36da8 <__sanitizer_set_death_callback@@Base+0x1108>
   36d74:	ldr	x0, [sp, #80]
   36d78:	bl	35ee8 <__sanitizer_set_death_callback@@Base+0x248>
   36d7c:	strb	w0, [sp, #111]
   36d80:	ldrb	w0, [sp, #111]
   36d84:	cmp	w0, #0x0
   36d88:	b.eq	36da4 <__sanitizer_set_death_callback@@Base+0x1104>  // b.none
   36d8c:	ldr	x1, [sp, #24]
   36d90:	ldr	x0, [sp, #80]
   36d94:	bl	35f14 <__sanitizer_set_death_callback@@Base+0x274>
   36d98:	ldr	x1, [sp, #80]
   36d9c:	ldr	x0, [sp, #40]
   36da0:	bl	371cc <__sanitizer_set_death_callback@@Base+0x152c>
   36da4:	mov	w19, #0x1                   	// #1
   36da8:	add	x0, sp, #0x38
   36dac:	bl	b688 <__lsan_do_recoverable_leak_check@@Base+0x14fc>
   36db0:	cmp	w19, #0x1
   36db4:	b.ne	36de0 <__sanitizer_set_death_callback@@Base+0x1140>  // b.any
   36db8:	ldrb	w0, [sp, #111]
   36dbc:	eor	w0, w0, #0x1
   36dc0:	and	w0, w0, #0xff
   36dc4:	cmp	w0, #0x0
   36dc8:	b.eq	36dd0 <__sanitizer_set_death_callback@@Base+0x1130>  // b.none
   36dcc:	bl	23334 <__sanitizer_set_report_fd@@Base+0x413c>
   36dd0:	ldrb	w0, [sp, #111]
   36dd4:	cmp	w0, #0x0
   36dd8:	b.ne	36de0 <__sanitizer_set_death_callback@@Base+0x1140>  // b.any
   36ddc:	b	36c70 <__sanitizer_set_death_callback@@Base+0xfd0>
   36de0:	ldp	x19, x30, [sp], #112
   36de4:	ret
   36de8:	str	x30, [sp, #-144]!
   36dec:	str	x0, [sp, #24]
   36df0:	str	w1, [sp, #20]
   36df4:	ldr	x0, [sp, #24]
   36df8:	add	x1, x0, #0x18
   36dfc:	add	x0, sp, #0x28
   36e00:	bl	b658 <__lsan_do_recoverable_leak_check@@Base+0x14cc>
   36e04:	ldr	x0, [sp, #24]
   36e08:	ldr	x0, [x0, #128]
   36e0c:	str	x0, [sp, #128]
   36e10:	str	xzr, [sp, #120]
   36e14:	ldr	x1, [sp, #128]
   36e18:	ldr	x0, [sp, #120]
   36e1c:	cmp	x1, x0
   36e20:	cset	w0, ls  // ls = plast
   36e24:	and	w0, w0, #0xff
   36e28:	and	x0, x0, #0xff
   36e2c:	cmp	x0, #0x0
   36e30:	b.eq	36e54 <__sanitizer_set_death_callback@@Base+0x11b4>  // b.none
   36e34:	ldr	x4, [sp, #120]
   36e38:	ldr	x3, [sp, #128]
   36e3c:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   36e40:	add	x2, x0, #0x688
   36e44:	mov	w1, #0x11a                 	// #282
   36e48:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   36e4c:	add	x0, x0, #0x3f0
   36e50:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   36e54:	ldr	x0, [sp, #24]
   36e58:	ldr	x0, [x0, #128]
   36e5c:	sub	x1, x0, #0x1
   36e60:	ldr	x0, [sp, #24]
   36e64:	str	x1, [x0, #128]
   36e68:	ldr	w0, [sp, #20]
   36e6c:	str	x0, [sp, #112]
   36e70:	ldr	x0, [sp, #24]
   36e74:	ldr	w0, [x0, #112]
   36e78:	mov	w0, w0
   36e7c:	str	x0, [sp, #104]
   36e80:	ldr	x1, [sp, #112]
   36e84:	ldr	x0, [sp, #104]
   36e88:	cmp	x1, x0
   36e8c:	cset	w0, cs  // cs = hs, nlast
   36e90:	and	w0, w0, #0xff
   36e94:	and	x0, x0, #0xff
   36e98:	cmp	x0, #0x0
   36e9c:	b.eq	36ec0 <__sanitizer_set_death_callback@@Base+0x1220>  // b.none
   36ea0:	ldr	x4, [sp, #104]
   36ea4:	ldr	x3, [sp, #112]
   36ea8:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   36eac:	add	x2, x0, #0x5d0
   36eb0:	mov	w1, #0x11c                 	// #284
   36eb4:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   36eb8:	add	x0, x0, #0x3f0
   36ebc:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   36ec0:	ldr	x0, [sp, #24]
   36ec4:	ldr	x1, [x0, #152]
   36ec8:	ldr	w0, [sp, #20]
   36ecc:	lsl	x0, x0, #3
   36ed0:	add	x0, x1, x0
   36ed4:	ldr	x0, [x0]
   36ed8:	str	x0, [sp, #96]
   36edc:	ldr	x0, [sp, #96]
   36ee0:	str	x0, [sp, #88]
   36ee4:	str	xzr, [sp, #80]
   36ee8:	ldr	x1, [sp, #88]
   36eec:	ldr	x0, [sp, #80]
   36ef0:	cmp	x1, x0
   36ef4:	cset	w0, eq  // eq = none
   36ef8:	and	w0, w0, #0xff
   36efc:	and	x0, x0, #0xff
   36f00:	cmp	x0, #0x0
   36f04:	b.eq	36f28 <__sanitizer_set_death_callback@@Base+0x1288>  // b.none
   36f08:	ldr	x4, [sp, #80]
   36f0c:	ldr	x3, [sp, #88]
   36f10:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   36f14:	add	x2, x0, #0x518
   36f18:	mov	w1, #0x11e                 	// #286
   36f1c:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   36f20:	add	x0, x0, #0x3f0
   36f24:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   36f28:	ldr	x0, [sp, #96]
   36f2c:	ldrb	w0, [x0, #116]
   36f30:	strb	w0, [sp, #143]
   36f34:	ldr	x0, [sp, #96]
   36f38:	ldr	w0, [x0, #112]
   36f3c:	cmp	w0, #0x2
   36f40:	b.ne	36fac <__sanitizer_set_death_callback@@Base+0x130c>  // b.any
   36f44:	ldr	x0, [sp, #24]
   36f48:	ldr	x0, [x0, #144]
   36f4c:	str	x0, [sp, #56]
   36f50:	str	xzr, [sp, #48]
   36f54:	ldr	x1, [sp, #56]
   36f58:	ldr	x0, [sp, #48]
   36f5c:	cmp	x1, x0
   36f60:	cset	w0, ls  // ls = plast
   36f64:	and	w0, w0, #0xff
   36f68:	and	x0, x0, #0xff
   36f6c:	cmp	x0, #0x0
   36f70:	b.eq	36f94 <__sanitizer_set_death_callback@@Base+0x12f4>  // b.none
   36f74:	ldr	x4, [sp, #48]
   36f78:	ldr	x3, [sp, #56]
   36f7c:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   36f80:	add	x2, x0, #0x6a8
   36f84:	mov	w1, #0x121                 	// #289
   36f88:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   36f8c:	add	x0, x0, #0x3f0
   36f90:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   36f94:	ldr	x0, [sp, #24]
   36f98:	ldr	x0, [x0, #144]
   36f9c:	sub	x1, x0, #0x1
   36fa0:	ldr	x0, [sp, #24]
   36fa4:	str	x1, [x0, #144]
   36fa8:	b	3700c <__sanitizer_set_death_callback@@Base+0x136c>
   36fac:	ldr	x0, [sp, #96]
   36fb0:	ldr	w0, [x0, #112]
   36fb4:	mov	w0, w0
   36fb8:	str	x0, [sp, #72]
   36fbc:	mov	x0, #0x1                   	// #1
   36fc0:	str	x0, [sp, #64]
   36fc4:	ldr	x1, [sp, #72]
   36fc8:	ldr	x0, [sp, #64]
   36fcc:	cmp	x1, x0
   36fd0:	cset	w0, ne  // ne = any
   36fd4:	and	w0, w0, #0xff
   36fd8:	and	x0, x0, #0xff
   36fdc:	cmp	x0, #0x0
   36fe0:	b.eq	37004 <__sanitizer_set_death_callback@@Base+0x1364>  // b.none
   36fe4:	ldr	x4, [sp, #64]
   36fe8:	ldr	x3, [sp, #72]
   36fec:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   36ff0:	add	x2, x0, #0x6c8
   36ff4:	mov	w1, #0x125                 	// #293
   36ff8:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   36ffc:	add	x0, x0, #0x3f0
   37000:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   37004:	mov	w0, #0x1                   	// #1
   37008:	strb	w0, [sp, #143]
   3700c:	ldr	x0, [sp, #96]
   37010:	bl	36008 <__sanitizer_set_death_callback@@Base+0x368>
   37014:	ldrb	w0, [sp, #143]
   37018:	cmp	w0, #0x0
   3701c:	b.eq	37034 <__sanitizer_set_death_callback@@Base+0x1394>  // b.none
   37020:	ldr	x0, [sp, #96]
   37024:	bl	35e0c <__sanitizer_set_death_callback@@Base+0x16c>
   37028:	ldr	x1, [sp, #96]
   3702c:	ldr	x0, [sp, #24]
   37030:	bl	371cc <__sanitizer_set_death_callback@@Base+0x152c>
   37034:	ldr	x0, [sp, #96]
   37038:	bl	35ec0 <__sanitizer_set_death_callback@@Base+0x220>
   3703c:	add	x0, sp, #0x28
   37040:	bl	b688 <__lsan_do_recoverable_leak_check@@Base+0x14fc>
   37044:	nop
   37048:	ldr	x30, [sp], #144
   3704c:	ret
   37050:	str	x30, [sp, #-112]!
   37054:	str	x0, [sp, #40]
   37058:	str	w1, [sp, #36]
   3705c:	str	x2, [sp, #24]
   37060:	strb	w3, [sp, #35]
   37064:	str	x4, [sp, #16]
   37068:	ldr	x0, [sp, #40]
   3706c:	add	x1, x0, #0x18
   37070:	add	x0, sp, #0x30
   37074:	bl	b658 <__lsan_do_recoverable_leak_check@@Base+0x14cc>
   37078:	ldr	x0, [sp, #40]
   3707c:	ldr	x0, [x0, #144]
   37080:	add	x1, x0, #0x1
   37084:	ldr	x0, [sp, #40]
   37088:	str	x1, [x0, #144]
   3708c:	ldr	w0, [sp, #36]
   37090:	str	x0, [sp, #104]
   37094:	ldr	x0, [sp, #40]
   37098:	ldr	w0, [x0, #112]
   3709c:	mov	w0, w0
   370a0:	str	x0, [sp, #96]
   370a4:	ldr	x1, [sp, #104]
   370a8:	ldr	x0, [sp, #96]
   370ac:	cmp	x1, x0
   370b0:	cset	w0, cs  // cs = hs, nlast
   370b4:	and	w0, w0, #0xff
   370b8:	and	x0, x0, #0xff
   370bc:	cmp	x0, #0x0
   370c0:	b.eq	370e4 <__sanitizer_set_death_callback@@Base+0x1444>  // b.none
   370c4:	ldr	x4, [sp, #96]
   370c8:	ldr	x3, [sp, #104]
   370cc:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   370d0:	add	x2, x0, #0x5d0
   370d4:	mov	w1, #0x134                 	// #308
   370d8:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   370dc:	add	x0, x0, #0x3f0
   370e0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   370e4:	ldr	x0, [sp, #40]
   370e8:	ldr	x1, [x0, #152]
   370ec:	ldr	w0, [sp, #36]
   370f0:	lsl	x0, x0, #3
   370f4:	add	x0, x1, x0
   370f8:	ldr	x0, [x0]
   370fc:	str	x0, [sp, #88]
   37100:	ldr	x0, [sp, #88]
   37104:	str	x0, [sp, #80]
   37108:	str	xzr, [sp, #72]
   3710c:	ldr	x1, [sp, #80]
   37110:	ldr	x0, [sp, #72]
   37114:	cmp	x1, x0
   37118:	cset	w0, eq  // eq = none
   3711c:	and	w0, w0, #0xff
   37120:	and	x0, x0, #0xff
   37124:	cmp	x0, #0x0
   37128:	b.eq	3714c <__sanitizer_set_death_callback@@Base+0x14ac>  // b.none
   3712c:	ldr	x4, [sp, #72]
   37130:	ldr	x3, [sp, #80]
   37134:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   37138:	add	x2, x0, #0x518
   3713c:	mov	w1, #0x136                 	// #310
   37140:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   37144:	add	x0, x0, #0x3f0
   37148:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   3714c:	mov	x0, #0x1                   	// #1
   37150:	str	x0, [sp, #64]
   37154:	ldr	x0, [sp, #88]
   37158:	ldr	w0, [x0, #112]
   3715c:	mov	w0, w0
   37160:	str	x0, [sp, #56]
   37164:	ldr	x1, [sp, #64]
   37168:	ldr	x0, [sp, #56]
   3716c:	cmp	x1, x0
   37170:	cset	w0, ne  // ne = any
   37174:	and	w0, w0, #0xff
   37178:	and	x0, x0, #0xff
   3717c:	cmp	x0, #0x0
   37180:	b.eq	371a4 <__sanitizer_set_death_callback@@Base+0x1504>  // b.none
   37184:	ldr	x4, [sp, #56]
   37188:	ldr	x3, [sp, #64]
   3718c:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   37190:	add	x2, x0, #0x6f8
   37194:	mov	w1, #0x137                 	// #311
   37198:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   3719c:	add	x0, x0, #0x3f0
   371a0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   371a4:	ldr	x3, [sp, #16]
   371a8:	ldrb	w2, [sp, #35]
   371ac:	ldr	x1, [sp, #24]
   371b0:	ldr	x0, [sp, #88]
   371b4:	bl	36068 <__sanitizer_set_death_callback@@Base+0x3c8>
   371b8:	add	x0, sp, #0x30
   371bc:	bl	b688 <__lsan_do_recoverable_leak_check@@Base+0x14fc>
   371c0:	nop
   371c4:	ldr	x30, [sp], #112
   371c8:	ret
   371cc:	str	x30, [sp, #-48]!
   371d0:	str	x0, [sp, #24]
   371d4:	str	x1, [sp, #16]
   371d8:	ldr	x0, [sp, #16]
   371dc:	ldr	w0, [x0, #8]
   371e0:	cmp	w0, #0x0
   371e4:	b.eq	372f4 <__sanitizer_set_death_callback@@Base+0x1654>  // b.none
   371e8:	ldr	x0, [sp, #24]
   371ec:	add	x0, x0, #0xa0
   371f0:	ldr	x1, [sp, #16]
   371f4:	bl	373c8 <__sanitizer_set_death_callback@@Base+0x1728>
   371f8:	ldr	x0, [sp, #24]
   371fc:	add	x0, x0, #0xa0
   37200:	bl	37460 <__sanitizer_set_death_callback@@Base+0x17c0>
   37204:	mov	x1, x0
   37208:	ldr	x0, [sp, #24]
   3720c:	ldr	w0, [x0, #12]
   37210:	mov	w0, w0
   37214:	cmp	x1, x0
   37218:	cset	w0, ls  // ls = plast
   3721c:	and	w0, w0, #0xff
   37220:	cmp	w0, #0x0
   37224:	b.ne	372fc <__sanitizer_set_death_callback@@Base+0x165c>  // b.any
   37228:	ldr	x0, [sp, #24]
   3722c:	add	x0, x0, #0xa0
   37230:	bl	37478 <__sanitizer_set_death_callback@@Base+0x17d8>
   37234:	str	x0, [sp, #16]
   37238:	ldr	x0, [sp, #24]
   3723c:	add	x0, x0, #0xa0
   37240:	bl	37490 <__sanitizer_set_death_callback@@Base+0x17f0>
   37244:	ldr	x0, [sp, #16]
   37248:	ldr	w0, [x0, #112]
   3724c:	mov	w0, w0
   37250:	str	x0, [sp, #40]
   37254:	mov	x0, #0x4                   	// #4
   37258:	str	x0, [sp, #32]
   3725c:	ldr	x1, [sp, #40]
   37260:	ldr	x0, [sp, #32]
   37264:	cmp	x1, x0
   37268:	cset	w0, ne  // ne = any
   3726c:	and	w0, w0, #0xff
   37270:	and	x0, x0, #0xff
   37274:	cmp	x0, #0x0
   37278:	b.eq	3729c <__sanitizer_set_death_callback@@Base+0x15fc>  // b.none
   3727c:	ldr	x4, [sp, #32]
   37280:	ldr	x3, [sp, #40]
   37284:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   37288:	add	x2, x0, #0x728
   3728c:	mov	w1, #0x143                 	// #323
   37290:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   37294:	add	x0, x0, #0x3f0
   37298:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   3729c:	ldr	x0, [sp, #16]
   372a0:	bl	36158 <__sanitizer_set_death_callback@@Base+0x4b8>
   372a4:	ldr	x0, [sp, #16]
   372a8:	ldr	w0, [x0, #24]
   372ac:	add	w1, w0, #0x1
   372b0:	ldr	x0, [sp, #16]
   372b4:	str	w1, [x0, #24]
   372b8:	ldr	x0, [sp, #24]
   372bc:	ldr	w0, [x0, #16]
   372c0:	cmp	w0, #0x0
   372c4:	b.eq	372e0 <__sanitizer_set_death_callback@@Base+0x1640>  // b.none
   372c8:	ldr	x0, [sp, #16]
   372cc:	ldr	w1, [x0, #24]
   372d0:	ldr	x0, [sp, #24]
   372d4:	ldr	w0, [x0, #16]
   372d8:	cmp	w1, w0
   372dc:	b.cs	37304 <__sanitizer_set_death_callback@@Base+0x1664>  // b.hs, b.nlast
   372e0:	ldr	x0, [sp, #24]
   372e4:	add	x0, x0, #0xb8
   372e8:	ldr	x1, [sp, #16]
   372ec:	bl	373c8 <__sanitizer_set_death_callback@@Base+0x1728>
   372f0:	b	37308 <__sanitizer_set_death_callback@@Base+0x1668>
   372f4:	nop
   372f8:	b	37308 <__sanitizer_set_death_callback@@Base+0x1668>
   372fc:	nop
   37300:	b	37308 <__sanitizer_set_death_callback@@Base+0x1668>
   37304:	nop
   37308:	ldr	x30, [sp], #48
   3730c:	ret
   37310:	str	x30, [sp, #-48]!
   37314:	str	x0, [sp, #24]
   37318:	ldr	x0, [sp, #24]
   3731c:	add	x0, x0, #0xb8
   37320:	bl	37460 <__sanitizer_set_death_callback@@Base+0x17c0>
   37324:	cmp	x0, #0x0
   37328:	cset	w0, eq  // eq = none
   3732c:	and	w0, w0, #0xff
   37330:	cmp	w0, #0x0
   37334:	b.eq	37340 <__sanitizer_set_death_callback@@Base+0x16a0>  // b.none
   37338:	mov	x0, #0x0                   	// #0
   3733c:	b	37360 <__sanitizer_set_death_callback@@Base+0x16c0>
   37340:	ldr	x0, [sp, #24]
   37344:	add	x0, x0, #0xb8
   37348:	bl	37478 <__sanitizer_set_death_callback@@Base+0x17d8>
   3734c:	str	x0, [sp, #40]
   37350:	ldr	x0, [sp, #24]
   37354:	add	x0, x0, #0xb8
   37358:	bl	37490 <__sanitizer_set_death_callback@@Base+0x17f0>
   3735c:	ldr	x0, [sp, #40]
   37360:	ldr	x30, [sp], #48
   37364:	ret
   37368:	sub	sp, sp, #0x10
   3736c:	str	x0, [sp, #8]
   37370:	nop
   37374:	add	sp, sp, #0x10
   37378:	ret
   3737c:	sub	sp, sp, #0x10
   37380:	str	x0, [sp, #8]
   37384:	str	x1, [sp]
   37388:	nop
   3738c:	add	sp, sp, #0x10
   37390:	ret
   37394:	sub	sp, sp, #0x10
   37398:	str	x0, [sp, #8]
   3739c:	ldr	x0, [sp, #8]
   373a0:	str	xzr, [x0, #16]
   373a4:	ldr	x0, [sp, #8]
   373a8:	ldr	x1, [x0, #16]
   373ac:	ldr	x0, [sp, #8]
   373b0:	str	x1, [x0, #8]
   373b4:	ldr	x0, [sp, #8]
   373b8:	str	xzr, [x0]
   373bc:	nop
   373c0:	add	sp, sp, #0x10
   373c4:	ret
   373c8:	str	x30, [sp, #-32]!
   373cc:	str	x0, [sp, #24]
   373d0:	str	x1, [sp, #16]
   373d4:	ldr	x0, [sp, #24]
   373d8:	bl	37544 <__sanitizer_set_death_callback@@Base+0x18a4>
   373dc:	and	w0, w0, #0xff
   373e0:	cmp	w0, #0x0
   373e4:	b.eq	3741c <__sanitizer_set_death_callback@@Base+0x177c>  // b.none
   373e8:	ldr	x0, [sp, #16]
   373ec:	str	xzr, [x0, #128]
   373f0:	ldr	x0, [sp, #24]
   373f4:	ldr	x1, [sp, #16]
   373f8:	str	x1, [x0, #16]
   373fc:	ldr	x0, [sp, #24]
   37400:	ldr	x1, [x0, #16]
   37404:	ldr	x0, [sp, #24]
   37408:	str	x1, [x0, #8]
   3740c:	ldr	x0, [sp, #24]
   37410:	mov	x1, #0x1                   	// #1
   37414:	str	x1, [x0]
   37418:	b	37454 <__sanitizer_set_death_callback@@Base+0x17b4>
   3741c:	ldr	x0, [sp, #16]
   37420:	str	xzr, [x0, #128]
   37424:	ldr	x0, [sp, #24]
   37428:	ldr	x0, [x0, #16]
   3742c:	ldr	x1, [sp, #16]
   37430:	str	x1, [x0, #128]
   37434:	ldr	x0, [sp, #24]
   37438:	ldr	x1, [sp, #16]
   3743c:	str	x1, [x0, #16]
   37440:	ldr	x0, [sp, #24]
   37444:	ldr	x0, [x0]
   37448:	add	x1, x0, #0x1
   3744c:	ldr	x0, [sp, #24]
   37450:	str	x1, [x0]
   37454:	nop
   37458:	ldr	x30, [sp], #32
   3745c:	ret
   37460:	sub	sp, sp, #0x10
   37464:	str	x0, [sp, #8]
   37468:	ldr	x0, [sp, #8]
   3746c:	ldr	x0, [x0]
   37470:	add	sp, sp, #0x10
   37474:	ret
   37478:	sub	sp, sp, #0x10
   3747c:	str	x0, [sp, #8]
   37480:	ldr	x0, [sp, #8]
   37484:	ldr	x0, [x0, #8]
   37488:	add	sp, sp, #0x10
   3748c:	ret
   37490:	str	x30, [sp, #-48]!
   37494:	str	x0, [sp, #24]
   37498:	ldr	x0, [sp, #24]
   3749c:	bl	37544 <__sanitizer_set_death_callback@@Base+0x18a4>
   374a0:	and	w0, w0, #0xff
   374a4:	eor	w0, w0, #0x1
   374a8:	and	w0, w0, #0xff
   374ac:	and	x0, x0, #0xff
   374b0:	str	x0, [sp, #40]
   374b4:	str	xzr, [sp, #32]
   374b8:	ldr	x1, [sp, #40]
   374bc:	ldr	x0, [sp, #32]
   374c0:	cmp	x1, x0
   374c4:	cset	w0, eq  // eq = none
   374c8:	and	w0, w0, #0xff
   374cc:	and	x0, x0, #0xff
   374d0:	cmp	x0, #0x0
   374d4:	b.eq	374f8 <__sanitizer_set_death_callback@@Base+0x1858>  // b.none
   374d8:	ldr	x4, [sp, #32]
   374dc:	ldr	x3, [sp, #40]
   374e0:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   374e4:	add	x2, x0, #0x758
   374e8:	mov	w1, #0x40                  	// #64
   374ec:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   374f0:	add	x0, x0, #0x770
   374f4:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   374f8:	ldr	x0, [sp, #24]
   374fc:	ldr	x0, [x0, #8]
   37500:	ldr	x1, [x0, #128]
   37504:	ldr	x0, [sp, #24]
   37508:	str	x1, [x0, #8]
   3750c:	ldr	x0, [sp, #24]
   37510:	ldr	x0, [x0, #8]
   37514:	cmp	x0, #0x0
   37518:	b.ne	37524 <__sanitizer_set_death_callback@@Base+0x1884>  // b.any
   3751c:	ldr	x0, [sp, #24]
   37520:	str	xzr, [x0, #16]
   37524:	ldr	x0, [sp, #24]
   37528:	ldr	x0, [x0]
   3752c:	sub	x1, x0, #0x1
   37530:	ldr	x0, [sp, #24]
   37534:	str	x1, [x0]
   37538:	nop
   3753c:	ldr	x30, [sp], #48
   37540:	ret
   37544:	sub	sp, sp, #0x10
   37548:	str	x0, [sp, #8]
   3754c:	ldr	x0, [sp, #8]
   37550:	ldr	x0, [x0]
   37554:	cmp	x0, #0x0
   37558:	cset	w0, eq  // eq = none
   3755c:	and	w0, w0, #0xff
   37560:	add	sp, sp, #0x10
   37564:	ret
   37568:	str	x30, [sp, #-32]!
   3756c:	str	x0, [sp, #24]
   37570:	str	x1, [sp, #16]
   37574:	ldr	x0, [sp, #16]
   37578:	cmp	x0, #0x0
   3757c:	b.eq	375dc <__sanitizer_set_death_callback@@Base+0x193c>  // b.none
   37580:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
   37584:	sxtw	x0, w0
   37588:	cmp	x0, #0x1
   3758c:	cset	w0, hi  // hi = pmore
   37590:	and	w0, w0, #0xff
   37594:	cmp	w0, #0x0
   37598:	b.eq	375b0 <__sanitizer_set_death_callback@@Base+0x1910>  // b.none
   3759c:	ldr	x2, [sp, #16]
   375a0:	ldr	x1, [sp, #24]
   375a4:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   375a8:	add	x0, x0, #0x8e8
   375ac:	bl	2a3fc <OnPrint@@Base+0x454>
   375b0:	ldr	x0, [sp, #16]
   375b4:	lsl	x0, x0, #4
   375b8:	mov	x1, x0
   375bc:	ldr	x0, [sp, #24]
   375c0:	bl	26af4 <__sanitizer_set_report_fd@@Base+0x78fc>
   375c4:	mov	w2, #0x1                   	// #1
   375c8:	mov	x1, #0x1                   	// #1
   375cc:	adrp	x0, 9d4000 <__asan_cplus_demangle_builtin_types@@Base+0x957b40>
   375d0:	add	x0, x0, #0x210
   375d4:	bl	1a288 <__sanitizer_install_malloc_and_free_hooks@@Base+0x33c>
   375d8:	b	375e0 <__sanitizer_set_death_callback@@Base+0x1940>
   375dc:	nop
   375e0:	ldr	x30, [sp], #32
   375e4:	ret
   375e8:	str	x30, [sp, #-80]!
   375ec:	str	x0, [sp, #24]
   375f0:	mrs	x1, tpidr_el0
   375f4:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   375f8:	ldr	x0, [x0, #3408]
   375fc:	add	x0, x1, x0
   37600:	ldr	x0, [x0]
   37604:	ldr	x1, [sp, #24]
   37608:	cmp	x1, x0
   3760c:	b.ls	377b8 <__sanitizer_set_death_callback@@Base+0x1b18>  // b.plast
   37610:	ldr	x0, [sp, #24]
   37614:	bl	a3cc <__lsan_do_recoverable_leak_check@@Base+0x240>
   37618:	str	x0, [sp, #24]
   3761c:	mov	x1, #0x100                 	// #256
   37620:	ldr	x0, [sp, #24]
   37624:	bl	ae7c <__lsan_do_recoverable_leak_check@@Base+0xcf0>
   37628:	str	x0, [sp, #24]
   3762c:	ldr	x0, [sp, #24]
   37630:	lsl	x3, x0, #4
   37634:	mov	w2, #0x0                   	// #0
   37638:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   3763c:	add	x1, x0, #0x910
   37640:	mov	x0, x3
   37644:	bl	26a50 <__sanitizer_set_report_fd@@Base+0x7858>
   37648:	str	x0, [sp, #72]
   3764c:	mov	w2, #0x1                   	// #1
   37650:	mov	x1, #0x1                   	// #1
   37654:	adrp	x0, 9d4000 <__asan_cplus_demangle_builtin_types@@Base+0x957b40>
   37658:	add	x0, x0, #0x210
   3765c:	bl	1a250 <__sanitizer_install_malloc_and_free_hooks@@Base+0x304>
   37660:	str	x0, [sp, #64]
   37664:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
   37668:	sxtw	x0, w0
   3766c:	cmp	x0, #0x1
   37670:	cset	w0, hi  // hi = pmore
   37674:	and	w0, w0, #0xff
   37678:	cmp	w0, #0x0
   3767c:	b.eq	376a4 <__sanitizer_set_death_callback@@Base+0x1a04>  // b.none
   37680:	mrs	x1, tpidr_el0
   37684:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   37688:	ldr	x0, [x0, #3408]
   3768c:	add	x0, x1, x0
   37690:	ldr	x2, [sp, #64]
   37694:	mov	x1, x0
   37698:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   3769c:	add	x0, x0, #0x920
   376a0:	bl	2a3fc <OnPrint@@Base+0x454>
   376a4:	ldr	x0, [sp, #64]
   376a8:	str	x0, [sp, #56]
   376ac:	mov	x0, #0x100000              	// #1048576
   376b0:	str	x0, [sp, #48]
   376b4:	ldr	x1, [sp, #56]
   376b8:	ldr	x0, [sp, #48]
   376bc:	cmp	x1, x0
   376c0:	cset	w0, cs  // cs = hs, nlast
   376c4:	and	w0, w0, #0xff
   376c8:	and	x0, x0, #0xff
   376cc:	cmp	x0, #0x0
   376d0:	b.eq	376f4 <__sanitizer_set_death_callback@@Base+0x1a54>  // b.none
   376d4:	ldr	x4, [sp, #48]
   376d8:	ldr	x3, [sp, #56]
   376dc:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   376e0:	add	x2, x0, #0x948
   376e4:	mov	w1, #0x3c                  	// #60
   376e8:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   376ec:	add	x0, x0, #0x968
   376f0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   376f4:	mrs	x1, tpidr_el0
   376f8:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   376fc:	ldr	x0, [x0, #3408]
   37700:	add	x0, x1, x0
   37704:	ldr	x0, [x0]
   37708:	str	x0, [sp, #40]
   3770c:	mrs	x1, tpidr_el0
   37710:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   37714:	ldr	x0, [x0, #3408]
   37718:	add	x0, x1, x0
   3771c:	ldr	x0, [x0, #8]
   37720:	str	x0, [sp, #32]
   37724:	ldr	x0, [sp, #40]
   37728:	cmp	x0, #0x0
   3772c:	b.eq	3776c <__sanitizer_set_death_callback@@Base+0x1acc>  // b.none
   37730:	mrs	x1, tpidr_el0
   37734:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   37738:	ldr	x0, [x0, #3408]
   3773c:	add	x0, x1, x0
   37740:	ldr	x3, [x0, #8]
   37744:	mrs	x1, tpidr_el0
   37748:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   3774c:	ldr	x0, [x0, #3408]
   37750:	add	x0, x1, x0
   37754:	ldr	x0, [x0]
   37758:	lsl	x0, x0, #4
   3775c:	mov	x2, x0
   37760:	mov	x1, x3
   37764:	ldr	x0, [sp, #72]
   37768:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
   3776c:	mrs	x1, tpidr_el0
   37770:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   37774:	ldr	x0, [x0, #3408]
   37778:	add	x0, x1, x0
   3777c:	ldr	x1, [sp, #72]
   37780:	str	x1, [x0, #8]
   37784:	mrs	x1, tpidr_el0
   37788:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   3778c:	ldr	x0, [x0, #3408]
   37790:	add	x0, x1, x0
   37794:	ldr	x1, [sp, #24]
   37798:	str	x1, [x0]
   3779c:	ldr	x0, [sp, #40]
   377a0:	cmp	x0, #0x0
   377a4:	b.eq	377bc <__sanitizer_set_death_callback@@Base+0x1b1c>  // b.none
   377a8:	ldr	x1, [sp, #40]
   377ac:	ldr	x0, [sp, #32]
   377b0:	bl	37568 <__sanitizer_set_death_callback@@Base+0x18c8>
   377b4:	b	377bc <__sanitizer_set_death_callback@@Base+0x1b1c>
   377b8:	nop
   377bc:	ldr	x30, [sp], #80
   377c0:	ret
   377c4:	str	x30, [sp, #-32]!
   377c8:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   377cc:	ldrb	w0, [x0, #121]
   377d0:	eor	w0, w0, #0x1
   377d4:	and	w0, w0, #0xff
   377d8:	cmp	w0, #0x0
   377dc:	b.ne	37880 <__sanitizer_set_death_callback@@Base+0x1be0>  // b.any
   377e0:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
   377e4:	sxtw	x0, w0
   377e8:	cmp	x0, #0x1
   377ec:	cset	w0, hi  // hi = pmore
   377f0:	and	w0, w0, #0xff
   377f4:	cmp	w0, #0x0
   377f8:	b.eq	37830 <__sanitizer_set_death_callback@@Base+0x1b90>  // b.none
   377fc:	mrs	x1, tpidr_el0
   37800:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   37804:	ldr	x0, [x0, #3408]
   37808:	add	x0, x1, x0
   3780c:	ldr	x2, [x0]
   37810:	mrs	x1, tpidr_el0
   37814:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   37818:	ldr	x0, [x0, #3408]
   3781c:	add	x0, x1, x0
   37820:	mov	x1, x0
   37824:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   37828:	add	x0, x0, #0x9b0
   3782c:	bl	2a3fc <OnPrint@@Base+0x454>
   37830:	mrs	x1, tpidr_el0
   37834:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   37838:	ldr	x0, [x0, #3408]
   3783c:	add	x0, x1, x0
   37840:	ldr	x0, [x0]
   37844:	str	x0, [sp, #24]
   37848:	mrs	x1, tpidr_el0
   3784c:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   37850:	ldr	x0, [x0, #3408]
   37854:	add	x0, x1, x0
   37858:	mov	x1, #0xffffffffffffffff    	// #-1
   3785c:	str	x1, [x0]
   37860:	mrs	x1, tpidr_el0
   37864:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   37868:	ldr	x0, [x0, #3408]
   3786c:	add	x0, x1, x0
   37870:	ldr	x0, [x0, #8]
   37874:	ldr	x1, [sp, #24]
   37878:	bl	37568 <__sanitizer_set_death_callback@@Base+0x18c8>
   3787c:	b	37884 <__sanitizer_set_death_callback@@Base+0x1be4>
   37880:	nop
   37884:	ldr	x30, [sp], #32
   37888:	ret
   3788c:	stp	x19, x20, [sp, #-112]!
   37890:	stp	x21, x30, [sp, #16]
   37894:	str	x0, [sp, #56]
   37898:	str	x1, [sp, #48]
   3789c:	str	x2, [sp, #40]
   378a0:	str	x3, [sp, #32]
   378a4:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   378a8:	ldrb	w0, [x0, #121]
   378ac:	eor	w0, w0, #0x1
   378b0:	and	w0, w0, #0xff
   378b4:	cmp	w0, #0x0
   378b8:	b.eq	378c4 <__sanitizer_set_death_callback@@Base+0x1c24>  // b.none
   378bc:	mov	x0, #0x0                   	// #0
   378c0:	b	37b94 <__sanitizer_set_death_callback@@Base+0x1ef4>
   378c4:	ldr	x0, [sp, #56]
   378c8:	str	x0, [sp, #96]
   378cc:	ldr	x0, [sp, #96]
   378d0:	ldr	x0, [x0]
   378d4:	str	x0, [sp, #88]
   378d8:	mrs	x1, tpidr_el0
   378dc:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   378e0:	ldr	x0, [x0, #3408]
   378e4:	add	x0, x1, x0
   378e8:	ldr	x0, [x0]
   378ec:	cmn	x0, #0x1
   378f0:	b.ne	378fc <__sanitizer_set_death_callback@@Base+0x1c5c>  // b.any
   378f4:	mov	x0, #0x0                   	// #0
   378f8:	b	37b94 <__sanitizer_set_death_callback@@Base+0x1ef4>
   378fc:	ldr	x0, [sp, #88]
   37900:	add	x0, x0, #0x1
   37904:	bl	375e8 <__sanitizer_set_death_callback@@Base+0x1948>
   37908:	mrs	x1, tpidr_el0
   3790c:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   37910:	ldr	x0, [x0, #3408]
   37914:	add	x0, x1, x0
   37918:	ldr	x1, [x0, #8]
   3791c:	ldr	x0, [sp, #88]
   37920:	lsl	x0, x0, #4
   37924:	add	x0, x1, x0
   37928:	ldr	x0, [x0]
   3792c:	cmp	x0, #0x0
   37930:	b.eq	3793c <__sanitizer_set_death_callback@@Base+0x1c9c>  // b.none
   37934:	mov	x0, #0x0                   	// #0
   37938:	b	37b94 <__sanitizer_set_death_callback@@Base+0x1ef4>
   3793c:	str	xzr, [sp, #104]
   37940:	ldr	x1, [sp, #48]
   37944:	ldr	x0, [sp, #96]
   37948:	ldr	x0, [x0, #8]
   3794c:	sub	x0, x1, x0
   37950:	str	x0, [sp, #72]
   37954:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
   37958:	sxtw	x0, w0
   3795c:	cmp	x0, #0x1
   37960:	cset	w0, hi  // hi = pmore
   37964:	and	w0, w0, #0xff
   37968:	cmp	w0, #0x0
   3796c:	b.eq	379c4 <__sanitizer_set_death_callback@@Base+0x1d24>  // b.none
   37970:	ldr	x0, [sp, #96]
   37974:	ldr	x19, [x0]
   37978:	ldr	x0, [sp, #96]
   3797c:	ldr	x20, [x0, #8]
   37980:	ldr	x21, [sp, #72]
   37984:	mov	w1, #0x1                   	// #1
   37988:	adrp	x0, 9d4000 <__asan_cplus_demangle_builtin_types@@Base+0x957b40>
   3798c:	add	x0, x0, #0x210
   37990:	bl	f49c <__sanitizer_get_allocated_size@@Base+0x93c>
   37994:	mov	x1, x0
   37998:	add	x0, sp, #0x48
   3799c:	mov	x7, x1
   379a0:	mov	x6, x0
   379a4:	mov	x5, x21
   379a8:	ldr	x4, [sp, #48]
   379ac:	mov	x3, x20
   379b0:	mov	x2, x19
   379b4:	ldr	x1, [sp, #96]
   379b8:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   379bc:	add	x0, x0, #0x9e0
   379c0:	bl	2a3fc <OnPrint@@Base+0x454>
   379c4:	mrs	x1, tpidr_el0
   379c8:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   379cc:	ldr	x0, [x0, #3408]
   379d0:	add	x0, x1, x0
   379d4:	ldr	x1, [x0, #24]
   379d8:	ldr	x0, [sp, #72]
   379dc:	cmp	x1, x0
   379e0:	b.ne	37a34 <__sanitizer_set_death_callback@@Base+0x1d94>  // b.any
   379e4:	mrs	x1, tpidr_el0
   379e8:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   379ec:	ldr	x0, [x0, #3408]
   379f0:	add	x0, x1, x0
   379f4:	ldr	x0, [x0, #16]
   379f8:	str	x0, [sp, #104]
   379fc:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
   37a00:	sxtw	x0, w0
   37a04:	cmp	x0, #0x1
   37a08:	cset	w0, hi  // hi = pmore
   37a0c:	and	w0, w0, #0xff
   37a10:	cmp	w0, #0x0
   37a14:	b.eq	37b24 <__sanitizer_set_death_callback@@Base+0x1e84>  // b.none
   37a18:	ldr	x0, [sp, #72]
   37a1c:	ldr	x2, [sp, #104]
   37a20:	mov	x1, x0
   37a24:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   37a28:	add	x0, x0, #0xa30
   37a2c:	bl	2a3fc <OnPrint@@Base+0x454>
   37a30:	b	37b24 <__sanitizer_set_death_callback@@Base+0x1e84>
   37a34:	ldr	x0, [sp, #72]
   37a38:	ldr	x1, [sp, #40]
   37a3c:	cmp	x1, x0
   37a40:	b.hi	37a8c <__sanitizer_set_death_callback@@Base+0x1dec>  // b.pmore
   37a44:	ldr	x0, [sp, #72]
   37a48:	ldr	x1, [sp, #32]
   37a4c:	cmp	x1, x0
   37a50:	b.ls	37a8c <__sanitizer_set_death_callback@@Base+0x1dec>  // b.plast
   37a54:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
   37a58:	sxtw	x0, w0
   37a5c:	cmp	x0, #0x1
   37a60:	cset	w0, hi  // hi = pmore
   37a64:	and	w0, w0, #0xff
   37a68:	cmp	w0, #0x0
   37a6c:	b.eq	37a84 <__sanitizer_set_death_callback@@Base+0x1de4>  // b.none
   37a70:	ldr	x0, [sp, #72]
   37a74:	mov	x1, x0
   37a78:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   37a7c:	add	x0, x0, #0xa68
   37a80:	bl	2a3fc <OnPrint@@Base+0x454>
   37a84:	str	xzr, [sp, #104]
   37a88:	b	37b24 <__sanitizer_set_death_callback@@Base+0x1e84>
   37a8c:	ldr	x0, [sp, #72]
   37a90:	and	x0, x0, #0xfff
   37a94:	cmp	x0, #0x10
   37a98:	b.ne	37af8 <__sanitizer_set_death_callback@@Base+0x1e58>  // b.any
   37a9c:	ldr	x0, [sp, #72]
   37aa0:	sub	x0, x0, #0x10
   37aa4:	str	x0, [sp, #80]
   37aa8:	ldr	x0, [sp, #80]
   37aac:	ldr	x0, [x0]
   37ab0:	str	x0, [sp, #104]
   37ab4:	ldr	x0, [sp, #80]
   37ab8:	ldr	x0, [x0, #8]
   37abc:	str	x0, [sp, #72]
   37ac0:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
   37ac4:	sxtw	x0, w0
   37ac8:	cmp	x0, #0x1
   37acc:	cset	w0, hi  // hi = pmore
   37ad0:	and	w0, w0, #0xff
   37ad4:	cmp	w0, #0x0
   37ad8:	b.eq	37b24 <__sanitizer_set_death_callback@@Base+0x1e84>  // b.none
   37adc:	ldr	x0, [sp, #72]
   37ae0:	ldr	x2, [sp, #104]
   37ae4:	mov	x1, x0
   37ae8:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   37aec:	add	x0, x0, #0xa88
   37af0:	bl	2a3fc <OnPrint@@Base+0x454>
   37af4:	b	37b24 <__sanitizer_set_death_callback@@Base+0x1e84>
   37af8:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
   37afc:	sxtw	x0, w0
   37b00:	cmp	x0, #0x1
   37b04:	cset	w0, hi  // hi = pmore
   37b08:	and	w0, w0, #0xff
   37b0c:	cmp	w0, #0x0
   37b10:	b.eq	37b20 <__sanitizer_set_death_callback@@Base+0x1e80>  // b.none
   37b14:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   37b18:	add	x0, x0, #0xac0
   37b1c:	bl	2a3fc <OnPrint@@Base+0x454>
   37b20:	str	xzr, [sp, #104]
   37b24:	mrs	x1, tpidr_el0
   37b28:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   37b2c:	ldr	x0, [x0, #3408]
   37b30:	add	x0, x1, x0
   37b34:	ldr	x1, [x0, #8]
   37b38:	ldr	x0, [sp, #88]
   37b3c:	lsl	x0, x0, #4
   37b40:	add	x0, x1, x0
   37b44:	ldr	x1, [sp, #72]
   37b48:	str	x1, [x0]
   37b4c:	mrs	x1, tpidr_el0
   37b50:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   37b54:	ldr	x0, [x0, #3408]
   37b58:	add	x0, x1, x0
   37b5c:	ldr	x1, [x0, #8]
   37b60:	ldr	x0, [sp, #88]
   37b64:	lsl	x0, x0, #4
   37b68:	add	x0, x1, x0
   37b6c:	ldr	x1, [sp, #104]
   37b70:	str	x1, [x0, #8]
   37b74:	mrs	x1, tpidr_el0
   37b78:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   37b7c:	ldr	x0, [x0, #3408]
   37b80:	add	x0, x1, x0
   37b84:	ldr	x1, [x0, #8]
   37b88:	ldr	x0, [sp, #88]
   37b8c:	lsl	x0, x0, #4
   37b90:	add	x0, x1, x0
   37b94:	ldp	x21, x30, [sp, #16]
   37b98:	ldp	x19, x20, [sp], #112
   37b9c:	ret
   37ba0:	str	x30, [sp, #-32]!
   37ba4:	str	x0, [sp, #24]
   37ba8:	str	x1, [sp, #16]
   37bac:	bl	a2bc <__lsan_do_recoverable_leak_check@@Base+0x130>
   37bb0:	ldrb	w0, [x0, #121]
   37bb4:	eor	w0, w0, #0x1
   37bb8:	and	w0, w0, #0xff
   37bbc:	cmp	w0, #0x0
   37bc0:	b.ne	37c28 <__sanitizer_set_death_callback@@Base+0x1f88>  // b.any
   37bc4:	bl	a2c8 <__lsan_do_recoverable_leak_check@@Base+0x13c>
   37bc8:	sxtw	x0, w0
   37bcc:	cmp	x0, #0x1
   37bd0:	cset	w0, hi  // hi = pmore
   37bd4:	and	w0, w0, #0xff
   37bd8:	cmp	w0, #0x0
   37bdc:	b.eq	37bf4 <__sanitizer_set_death_callback@@Base+0x1f54>  // b.none
   37be0:	ldr	x2, [sp, #16]
   37be4:	ldr	x1, [sp, #24]
   37be8:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   37bec:	add	x0, x0, #0xaf0
   37bf0:	bl	2a3fc <OnPrint@@Base+0x454>
   37bf4:	ldr	x1, [sp, #24]
   37bf8:	mrs	x2, tpidr_el0
   37bfc:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   37c00:	ldr	x0, [x0, #3408]
   37c04:	add	x0, x2, x0
   37c08:	str	x1, [x0, #24]
   37c0c:	mrs	x1, tpidr_el0
   37c10:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   37c14:	ldr	x0, [x0, #3408]
   37c18:	add	x0, x1, x0
   37c1c:	ldr	x1, [sp, #16]
   37c20:	str	x1, [x0, #16]
   37c24:	b	37c2c <__sanitizer_set_death_callback@@Base+0x1f8c>
   37c28:	nop
   37c2c:	ldr	x30, [sp], #32
   37c30:	ret
   37c34:	mrs	x1, tpidr_el0
   37c38:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   37c3c:	ldr	x0, [x0, #3408]
   37c40:	add	x0, x1, x0
   37c44:	ret
   37c48:	sub	sp, sp, #0x10
   37c4c:	str	x0, [sp, #8]
   37c50:	ldr	x0, [sp, #8]
   37c54:	ldr	x0, [x0]
   37c58:	cmn	x0, #0x1
   37c5c:	cset	w0, eq  // eq = none
   37c60:	and	w0, w0, #0xff
   37c64:	add	sp, sp, #0x10
   37c68:	ret
   37c6c:	str	x30, [sp, #-32]!
   37c70:	str	x0, [sp, #24]
   37c74:	ldr	x0, [sp, #24]
   37c78:	bl	6ca0 <_Unwind_GetIP@plt>
   37c7c:	ldr	x30, [sp], #32
   37c80:	ret
   37c84:	str	x30, [sp, #-80]!
   37c88:	str	x0, [sp, #24]
   37c8c:	str	x1, [sp, #16]
   37c90:	ldr	x0, [sp, #16]
   37c94:	str	x0, [sp, #72]
   37c98:	ldr	x0, [sp, #72]
   37c9c:	ldr	x0, [x0]
   37ca0:	ldr	w0, [x0, #8]
   37ca4:	mov	w0, w0
   37ca8:	str	x0, [sp, #64]
   37cac:	ldr	x0, [sp, #72]
   37cb0:	ldr	w0, [x0, #8]
   37cb4:	mov	w0, w0
   37cb8:	str	x0, [sp, #56]
   37cbc:	ldr	x1, [sp, #64]
   37cc0:	ldr	x0, [sp, #56]
   37cc4:	cmp	x1, x0
   37cc8:	cset	w0, cs  // cs = hs, nlast
   37ccc:	and	w0, w0, #0xff
   37cd0:	and	x0, x0, #0xff
   37cd4:	cmp	x0, #0x0
   37cd8:	b.eq	37cfc <__sanitizer_set_death_callback@@Base+0x205c>  // b.none
   37cdc:	ldr	x4, [sp, #56]
   37ce0:	ldr	x3, [sp, #64]
   37ce4:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   37ce8:	add	x2, x0, #0xb80
   37cec:	mov	w1, #0x6d                  	// #109
   37cf0:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   37cf4:	add	x0, x0, #0xbb0
   37cf8:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   37cfc:	ldr	x0, [sp, #24]
   37d00:	bl	37c6c <__sanitizer_set_death_callback@@Base+0x1fcc>
   37d04:	str	x0, [sp, #48]
   37d08:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
   37d0c:	str	x0, [sp, #40]
   37d10:	ldr	x1, [sp, #48]
   37d14:	ldr	x0, [sp, #40]
   37d18:	cmp	x1, x0
   37d1c:	b.cs	37d28 <__sanitizer_set_death_callback@@Base+0x2088>  // b.hs, b.nlast
   37d20:	mov	w0, #0x4                   	// #4
   37d24:	b	37d7c <__sanitizer_set_death_callback@@Base+0x20dc>
   37d28:	ldr	x0, [sp, #72]
   37d2c:	ldr	x2, [x0]
   37d30:	ldr	x0, [sp, #72]
   37d34:	ldr	x0, [x0]
   37d38:	ldr	w1, [x0, #8]
   37d3c:	add	w3, w1, #0x1
   37d40:	str	w3, [x0, #8]
   37d44:	mov	w0, w1
   37d48:	add	x0, x0, #0x2
   37d4c:	ldr	x1, [sp, #48]
   37d50:	str	x1, [x2, x0, lsl #3]
   37d54:	ldr	x0, [sp, #72]
   37d58:	ldr	x0, [x0]
   37d5c:	ldr	w1, [x0, #8]
   37d60:	ldr	x0, [sp, #72]
   37d64:	ldr	w0, [x0, #8]
   37d68:	cmp	w1, w0
   37d6c:	b.ne	37d78 <__sanitizer_set_death_callback@@Base+0x20d8>  // b.any
   37d70:	mov	w0, #0x4                   	// #4
   37d74:	b	37d7c <__sanitizer_set_death_callback@@Base+0x20dc>
   37d78:	mov	w0, #0x0                   	// #0
   37d7c:	ldr	x30, [sp], #80
   37d80:	ret
   37d84:	str	x30, [sp, #-96]!
   37d88:	str	x0, [sp, #40]
   37d8c:	str	x1, [sp, #32]
   37d90:	str	w2, [sp, #28]
   37d94:	ldr	w0, [sp, #28]
   37d98:	str	x0, [sp, #80]
   37d9c:	mov	x0, #0x2                   	// #2
   37da0:	str	x0, [sp, #72]
   37da4:	ldr	x1, [sp, #80]
   37da8:	ldr	x0, [sp, #72]
   37dac:	cmp	x1, x0
   37db0:	cset	w0, cc  // cc = lo, ul, last
   37db4:	and	w0, w0, #0xff
   37db8:	and	x0, x0, #0xff
   37dbc:	cmp	x0, #0x0
   37dc0:	b.eq	37de4 <__sanitizer_set_death_callback@@Base+0x2144>  // b.none
   37dc4:	ldr	x4, [sp, #72]
   37dc8:	ldr	x3, [sp, #80]
   37dcc:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   37dd0:	add	x2, x0, #0xc00
   37dd4:	mov	w1, #0x7a                  	// #122
   37dd8:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   37ddc:	add	x0, x0, #0xbb0
   37de0:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   37de4:	ldr	x0, [sp, #40]
   37de8:	str	wzr, [x0, #8]
   37dec:	ldr	x0, [sp, #40]
   37df0:	str	x0, [sp, #56]
   37df4:	ldr	w0, [sp, #28]
   37df8:	add	w0, w0, #0x1
   37dfc:	mov	w1, #0x100                 	// #256
   37e00:	bl	b0a0 <__lsan_do_recoverable_leak_check@@Base+0xf14>
   37e04:	str	w0, [sp, #64]
   37e08:	add	x0, sp, #0x38
   37e0c:	mov	x1, x0
   37e10:	adrp	x0, 37000 <__sanitizer_set_death_callback@@Base+0x1360>
   37e14:	add	x0, x0, #0xc84
   37e18:	bl	6890 <_Unwind_Backtrace@plt>
   37e1c:	ldr	x1, [sp, #32]
   37e20:	ldr	x0, [sp, #40]
   37e24:	bl	2d3f8 <OnPrint@@Base+0x3450>
   37e28:	str	x0, [sp, #88]
   37e2c:	ldr	x0, [sp, #88]
   37e30:	cmp	x0, #0x0
   37e34:	b.ne	37e50 <__sanitizer_set_death_callback@@Base+0x21b0>  // b.any
   37e38:	ldr	x0, [sp, #40]
   37e3c:	ldr	w0, [x0, #8]
   37e40:	cmp	w0, #0x1
   37e44:	b.ls	37e50 <__sanitizer_set_death_callback@@Base+0x21b0>  // b.plast
   37e48:	mov	x0, #0x1                   	// #1
   37e4c:	str	x0, [sp, #88]
   37e50:	ldr	x1, [sp, #88]
   37e54:	ldr	x0, [sp, #40]
   37e58:	bl	2d2dc <OnPrint@@Base+0x3334>
   37e5c:	ldr	x0, [sp, #40]
   37e60:	ldr	x1, [sp, #32]
   37e64:	str	x1, [x0, #16]
   37e68:	nop
   37e6c:	ldr	x30, [sp], #96
   37e70:	ret
   37e74:	stp	x19, x30, [sp, #-144]!
   37e78:	str	x0, [sp, #40]
   37e7c:	str	x1, [sp, #32]
   37e80:	str	x2, [sp, #24]
   37e84:	str	w3, [sp, #20]
   37e88:	ldr	w0, [sp, #20]
   37e8c:	str	x0, [sp, #128]
   37e90:	mov	x0, #0x2                   	// #2
   37e94:	str	x0, [sp, #120]
   37e98:	ldr	x1, [sp, #128]
   37e9c:	ldr	x0, [sp, #120]
   37ea0:	cmp	x1, x0
   37ea4:	cset	w0, cc  // cc = lo, ul, last
   37ea8:	and	w0, w0, #0xff
   37eac:	and	x0, x0, #0xff
   37eb0:	cmp	x0, #0x0
   37eb4:	b.eq	37ed8 <__sanitizer_set_death_callback@@Base+0x2238>  // b.none
   37eb8:	ldr	x4, [sp, #120]
   37ebc:	ldr	x3, [sp, #128]
   37ec0:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   37ec4:	add	x2, x0, #0xc00
   37ec8:	mov	w1, #0x94                  	// #148
   37ecc:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   37ed0:	add	x0, x0, #0xbb0
   37ed4:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   37ed8:	adrp	x0, 9d4000 <__asan_cplus_demangle_builtin_types@@Base+0x957b40>
   37edc:	add	x0, x0, #0x228
   37ee0:	ldr	x0, [x0]
   37ee4:	cmp	x0, #0x0
   37ee8:	b.ne	37f00 <__sanitizer_set_death_callback@@Base+0x2260>  // b.any
   37eec:	ldr	w2, [sp, #20]
   37ef0:	ldr	x1, [sp, #32]
   37ef4:	ldr	x0, [sp, #40]
   37ef8:	bl	37d84 <__sanitizer_set_death_callback@@Base+0x20e4>
   37efc:	b	38094 <__sanitizer_set_death_callback@@Base+0x23f4>
   37f00:	adrp	x0, 9d4000 <__asan_cplus_demangle_builtin_types@@Base+0x957b40>
   37f04:	add	x0, x0, #0x218
   37f08:	ldr	x0, [x0]
   37f0c:	blr	x0
   37f10:	str	x0, [sp, #112]
   37f14:	ldr	x0, [sp, #112]
   37f18:	str	x0, [sp, #104]
   37f1c:	str	xzr, [sp, #96]
   37f20:	ldr	x1, [sp, #104]
   37f24:	ldr	x0, [sp, #96]
   37f28:	cmp	x1, x0
   37f2c:	cset	w0, eq  // eq = none
   37f30:	and	w0, w0, #0xff
   37f34:	and	x0, x0, #0xff
   37f38:	cmp	x0, #0x0
   37f3c:	b.eq	37f60 <__sanitizer_set_death_callback@@Base+0x22c0>  // b.none
   37f40:	ldr	x4, [sp, #96]
   37f44:	ldr	x3, [sp, #104]
   37f48:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   37f4c:	add	x2, x0, #0xc18
   37f50:	mov	w1, #0x9b                  	// #155
   37f54:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   37f58:	add	x0, x0, #0xbb0
   37f5c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   37f60:	add	x0, sp, #0x30
   37f64:	mov	x1, #0x100                 	// #256
   37f68:	bl	3809c <__sanitizer_set_death_callback@@Base+0x23fc>
   37f6c:	adrp	x0, 9d4000 <__asan_cplus_demangle_builtin_types@@Base+0x957b40>
   37f70:	add	x0, x0, #0x228
   37f74:	ldr	x19, [x0]
   37f78:	add	x0, sp, #0x30
   37f7c:	bl	380e8 <__sanitizer_set_death_callback@@Base+0x2448>
   37f80:	mov	x1, x0
   37f84:	ldr	w0, [sp, #20]
   37f88:	mov	x5, x0
   37f8c:	mov	x4, #0x0                   	// #0
   37f90:	mov	x3, x1
   37f94:	ldr	x2, [sp, #112]
   37f98:	ldr	x1, [sp, #24]
   37f9c:	mov	x0, #0x0                   	// #0
   37fa0:	blr	x19
   37fa4:	str	x0, [sp, #88]
   37fa8:	adrp	x0, 9d4000 <__asan_cplus_demangle_builtin_types@@Base+0x957b40>
   37fac:	add	x0, x0, #0x220
   37fb0:	ldr	x1, [x0]
   37fb4:	ldr	x0, [sp, #112]
   37fb8:	blr	x1
   37fbc:	ldr	x0, [sp, #88]
   37fc0:	cmp	x0, #0x0
   37fc4:	b.ge	37fd0 <__sanitizer_set_death_callback@@Base+0x2330>  // b.tcont
   37fc8:	mov	w19, #0x0                   	// #0
   37fcc:	b	38088 <__sanitizer_set_death_callback@@Base+0x23e8>
   37fd0:	ldr	x0, [sp, #88]
   37fd4:	str	x0, [sp, #80]
   37fd8:	mov	x0, #0x100                 	// #256
   37fdc:	str	x0, [sp, #72]
   37fe0:	ldr	x1, [sp, #80]
   37fe4:	ldr	x0, [sp, #72]
   37fe8:	cmp	x1, x0
   37fec:	cset	w0, hi  // hi = pmore
   37ff0:	and	w0, w0, #0xff
   37ff4:	and	x0, x0, #0xff
   37ff8:	cmp	x0, #0x0
   37ffc:	b.eq	38020 <__sanitizer_set_death_callback@@Base+0x2380>  // b.none
   38000:	ldr	x4, [sp, #72]
   38004:	ldr	x3, [sp, #80]
   38008:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   3800c:	add	x2, x0, #0xc28
   38010:	mov	w1, #0xa3                  	// #163
   38014:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   38018:	add	x0, x0, #0xbb0
   3801c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   38020:	ldr	x0, [sp, #40]
   38024:	str	wzr, [x0, #8]
   38028:	str	xzr, [sp, #136]
   3802c:	ldr	x1, [sp, #136]
   38030:	ldr	x0, [sp, #88]
   38034:	cmp	x1, x0
   38038:	b.ge	38084 <__sanitizer_set_death_callback@@Base+0x23e4>  // b.tcont
   3803c:	ldr	x1, [sp, #136]
   38040:	add	x0, sp, #0x30
   38044:	bl	38100 <__sanitizer_set_death_callback@@Base+0x2460>
   38048:	ldr	x1, [x0]
   3804c:	ldr	x0, [sp, #40]
   38050:	ldr	w0, [x0, #8]
   38054:	add	w3, w0, #0x1
   38058:	ldr	x2, [sp, #40]
   3805c:	str	w3, [x2, #8]
   38060:	add	x2, x1, #0x2
   38064:	ldr	x1, [sp, #40]
   38068:	mov	w0, w0
   3806c:	add	x0, x0, #0x2
   38070:	str	x2, [x1, x0, lsl #3]
   38074:	ldr	x0, [sp, #136]
   38078:	add	x0, x0, #0x1
   3807c:	str	x0, [sp, #136]
   38080:	b	3802c <__sanitizer_set_death_callback@@Base+0x238c>
   38084:	mov	w19, #0x1                   	// #1
   38088:	add	x0, sp, #0x30
   3808c:	bl	380cc <__sanitizer_set_death_callback@@Base+0x242c>
   38090:	cmp	w19, #0x1
   38094:	ldp	x19, x30, [sp], #144
   38098:	ret
   3809c:	str	x30, [sp, #-32]!
   380a0:	str	x0, [sp, #24]
   380a4:	str	x1, [sp, #16]
   380a8:	ldr	x0, [sp, #24]
   380ac:	ldr	x1, [sp, #16]
   380b0:	bl	38188 <__sanitizer_set_death_callback@@Base+0x24e8>
   380b4:	ldr	x0, [sp, #24]
   380b8:	ldr	x1, [sp, #16]
   380bc:	bl	381c4 <__sanitizer_set_death_callback@@Base+0x2524>
   380c0:	nop
   380c4:	ldr	x30, [sp], #32
   380c8:	ret
   380cc:	str	x30, [sp, #-32]!
   380d0:	str	x0, [sp, #24]
   380d4:	ldr	x0, [sp, #24]
   380d8:	bl	3825c <__sanitizer_set_death_callback@@Base+0x25bc>
   380dc:	nop
   380e0:	ldr	x30, [sp], #32
   380e4:	ret
   380e8:	sub	sp, sp, #0x10
   380ec:	str	x0, [sp, #8]
   380f0:	ldr	x0, [sp, #8]
   380f4:	ldr	x0, [x0]
   380f8:	add	sp, sp, #0x10
   380fc:	ret
   38100:	str	x30, [sp, #-48]!
   38104:	str	x0, [sp, #24]
   38108:	str	x1, [sp, #16]
   3810c:	ldr	x0, [sp, #16]
   38110:	str	x0, [sp, #40]
   38114:	ldr	x0, [sp, #24]
   38118:	ldr	x0, [x0, #16]
   3811c:	str	x0, [sp, #32]
   38120:	ldr	x1, [sp, #40]
   38124:	ldr	x0, [sp, #32]
   38128:	cmp	x1, x0
   3812c:	cset	w0, cs  // cs = hs, nlast
   38130:	and	w0, w0, #0xff
   38134:	and	x0, x0, #0xff
   38138:	cmp	x0, #0x0
   3813c:	b.eq	38160 <__sanitizer_set_death_callback@@Base+0x24c0>  // b.none
   38140:	ldr	x4, [sp, #32]
   38144:	ldr	x3, [sp, #40]
   38148:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   3814c:	add	x2, x0, #0xc50
   38150:	mov	w1, #0x1b6                 	// #438
   38154:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   38158:	add	x0, x0, #0xc68
   3815c:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   38160:	ldr	x0, [sp, #24]
   38164:	ldr	x2, [x0]
   38168:	ldr	x1, [sp, #16]
   3816c:	mov	x0, x1
   38170:	lsl	x0, x0, #1
   38174:	add	x0, x0, x1
   38178:	lsl	x0, x0, #3
   3817c:	add	x0, x2, x0
   38180:	ldr	x30, [sp], #48
   38184:	ret
   38188:	str	x30, [sp, #-32]!
   3818c:	str	x0, [sp, #24]
   38190:	str	x1, [sp, #16]
   38194:	ldr	x0, [sp, #24]
   38198:	str	xzr, [x0, #8]
   3819c:	ldr	x0, [sp, #24]
   381a0:	str	xzr, [x0, #16]
   381a4:	ldr	x0, [sp, #24]
   381a8:	str	xzr, [x0]
   381ac:	ldr	x1, [sp, #16]
   381b0:	ldr	x0, [sp, #24]
   381b4:	bl	3828c <__sanitizer_set_death_callback@@Base+0x25ec>
   381b8:	nop
   381bc:	ldr	x30, [sp], #32
   381c0:	ret
   381c4:	str	x30, [sp, #-32]!
   381c8:	str	x0, [sp, #24]
   381cc:	str	x1, [sp, #16]
   381d0:	ldr	x0, [sp, #24]
   381d4:	ldr	x0, [x0, #16]
   381d8:	ldr	x1, [sp, #16]
   381dc:	cmp	x1, x0
   381e0:	b.ls	38244 <__sanitizer_set_death_callback@@Base+0x25a4>  // b.plast
   381e4:	ldr	x1, [sp, #16]
   381e8:	ldr	x0, [sp, #24]
   381ec:	bl	3828c <__sanitizer_set_death_callback@@Base+0x25ec>
   381f0:	ldr	x0, [sp, #24]
   381f4:	ldr	x2, [x0]
   381f8:	ldr	x0, [sp, #24]
   381fc:	ldr	x1, [x0, #16]
   38200:	mov	x0, x1
   38204:	lsl	x0, x0, #1
   38208:	add	x0, x0, x1
   3820c:	lsl	x0, x0, #3
   38210:	add	x3, x2, x0
   38214:	ldr	x0, [sp, #24]
   38218:	ldr	x0, [x0, #16]
   3821c:	ldr	x1, [sp, #16]
   38220:	sub	x1, x1, x0
   38224:	mov	x0, x1
   38228:	lsl	x0, x0, #1
   3822c:	add	x0, x0, x1
   38230:	lsl	x0, x0, #3
   38234:	mov	x2, x0
   38238:	mov	w1, #0x0                   	// #0
   3823c:	mov	x0, x3
   38240:	bl	21754 <__sanitizer_set_report_fd@@Base+0x255c>
   38244:	ldr	x0, [sp, #24]
   38248:	ldr	x1, [sp, #16]
   3824c:	str	x1, [x0, #16]
   38250:	nop
   38254:	ldr	x30, [sp], #32
   38258:	ret
   3825c:	str	x30, [sp, #-32]!
   38260:	str	x0, [sp, #24]
   38264:	ldr	x0, [sp, #24]
   38268:	ldr	x2, [x0]
   3826c:	ldr	x0, [sp, #24]
   38270:	ldr	x0, [x0, #8]
   38274:	mov	x1, x0
   38278:	mov	x0, x2
   3827c:	bl	26af4 <__sanitizer_set_report_fd@@Base+0x78fc>
   38280:	nop
   38284:	ldr	x30, [sp], #32
   38288:	ret
   3828c:	str	x30, [sp, #-32]!
   38290:	str	x0, [sp, #24]
   38294:	str	x1, [sp, #16]
   38298:	ldr	x0, [sp, #24]
   3829c:	bl	382d4 <__sanitizer_set_death_callback@@Base+0x2634>
   382a0:	mov	x1, x0
   382a4:	ldr	x0, [sp, #16]
   382a8:	cmp	x0, x1
   382ac:	cset	w0, hi  // hi = pmore
   382b0:	and	w0, w0, #0xff
   382b4:	cmp	w0, #0x0
   382b8:	b.eq	382c8 <__sanitizer_set_death_callback@@Base+0x2628>  // b.none
   382bc:	ldr	x1, [sp, #16]
   382c0:	ldr	x0, [sp, #24]
   382c4:	bl	382fc <__sanitizer_set_death_callback@@Base+0x265c>
   382c8:	nop
   382cc:	ldr	x30, [sp], #32
   382d0:	ret
   382d4:	sub	sp, sp, #0x10
   382d8:	str	x0, [sp, #8]
   382dc:	ldr	x0, [sp, #8]
   382e0:	ldr	x1, [x0, #8]
   382e4:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   382e8:	movk	x0, #0xaaab
   382ec:	umulh	x0, x1, x0
   382f0:	lsr	x0, x0, #4
   382f4:	add	sp, sp, #0x10
   382f8:	ret
   382fc:	stp	x19, x30, [sp, #-80]!
   38300:	str	x0, [sp, #24]
   38304:	str	x1, [sp, #16]
   38308:	ldr	x0, [sp, #16]
   3830c:	str	x0, [sp, #72]
   38310:	str	xzr, [sp, #64]
   38314:	ldr	x1, [sp, #72]
   38318:	ldr	x0, [sp, #64]
   3831c:	cmp	x1, x0
   38320:	cset	w0, ls  // ls = plast
   38324:	and	w0, w0, #0xff
   38328:	and	x0, x0, #0xff
   3832c:	cmp	x0, #0x0
   38330:	b.eq	38354 <__sanitizer_set_death_callback@@Base+0x26b4>  // b.none
   38334:	ldr	x4, [sp, #64]
   38338:	ldr	x3, [sp, #72]
   3833c:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   38340:	add	x2, x0, #0xca8
   38344:	mov	w1, #0x1fc                 	// #508
   38348:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   3834c:	add	x0, x0, #0xc68
   38350:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   38354:	ldr	x0, [sp, #24]
   38358:	ldr	x0, [x0, #16]
   3835c:	str	x0, [sp, #56]
   38360:	ldr	x0, [sp, #16]
   38364:	str	x0, [sp, #48]
   38368:	ldr	x1, [sp, #56]
   3836c:	ldr	x0, [sp, #48]
   38370:	cmp	x1, x0
   38374:	cset	w0, hi  // hi = pmore
   38378:	and	w0, w0, #0xff
   3837c:	and	x0, x0, #0xff
   38380:	cmp	x0, #0x0
   38384:	b.eq	383a8 <__sanitizer_set_death_callback@@Base+0x2708>  // b.none
   38388:	ldr	x4, [sp, #48]
   3838c:	ldr	x3, [sp, #56]
   38390:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   38394:	add	x2, x0, #0xcc8
   38398:	mov	w1, #0x1fd                 	// #509
   3839c:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   383a0:	add	x0, x0, #0xc68
   383a4:	bl	35bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7fe8>
   383a8:	ldr	x1, [sp, #16]
   383ac:	mov	x0, x1
   383b0:	lsl	x0, x0, #1
   383b4:	add	x0, x0, x1
   383b8:	lsl	x0, x0, #3
   383bc:	mov	x19, x0
   383c0:	bl	a2e4 <__lsan_do_recoverable_leak_check@@Base+0x158>
   383c4:	mov	x1, x0
   383c8:	mov	x0, x19
   383cc:	bl	a518 <__lsan_do_recoverable_leak_check@@Base+0x38c>
   383d0:	str	x0, [sp, #40]
   383d4:	mov	w2, #0x0                   	// #0
   383d8:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   383dc:	add	x1, x0, #0xce8
   383e0:	ldr	x0, [sp, #40]
   383e4:	bl	26a50 <__sanitizer_set_report_fd@@Base+0x7858>
   383e8:	str	x0, [sp, #32]
   383ec:	ldr	x0, [sp, #24]
   383f0:	ldr	x3, [x0]
   383f4:	ldr	x0, [sp, #24]
   383f8:	ldr	x1, [x0, #16]
   383fc:	mov	x0, x1
   38400:	lsl	x0, x0, #1
   38404:	add	x0, x0, x1
   38408:	lsl	x0, x0, #3
   3840c:	mov	x2, x0
   38410:	mov	x1, x3
   38414:	ldr	x0, [sp, #32]
   38418:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
   3841c:	ldr	x0, [sp, #24]
   38420:	ldr	x2, [x0]
   38424:	ldr	x0, [sp, #24]
   38428:	ldr	x0, [x0, #8]
   3842c:	mov	x1, x0
   38430:	mov	x0, x2
   38434:	bl	26af4 <__sanitizer_set_report_fd@@Base+0x78fc>
   38438:	ldr	x0, [sp, #24]
   3843c:	ldr	x1, [sp, #32]
   38440:	str	x1, [x0]
   38444:	ldr	x0, [sp, #24]
   38448:	ldr	x1, [sp, #40]
   3844c:	str	x1, [x0, #8]
   38450:	nop
   38454:	ldp	x19, x30, [sp], #80
   38458:	ret
   3845c:	str	x30, [sp, #-48]!
   38460:	str	x0, [sp, #40]
   38464:	str	x1, [sp, #32]
   38468:	str	x2, [sp, #24]
   3846c:	str	x3, [sp, #16]
   38470:	ldr	x1, [sp, #40]
   38474:	mov	x0, #0xffffffffffffffff    	// #-1
   38478:	bl	6a80 <dlsym@plt>
   3847c:	mov	x1, x0
   38480:	ldr	x0, [sp, #32]
   38484:	str	x1, [x0]
   38488:	ldr	x0, [sp, #32]
   3848c:	ldr	x0, [x0]
   38490:	cmp	x0, #0x0
   38494:	b.ne	384b0 <__sanitizer_set_death_callback@@Base+0x2810>  // b.any
   38498:	ldr	x1, [sp, #40]
   3849c:	mov	x0, #0x0                   	// #0
   384a0:	bl	6a80 <dlsym@plt>
   384a4:	mov	x1, x0
   384a8:	ldr	x0, [sp, #32]
   384ac:	str	x1, [x0]
   384b0:	ldr	x1, [sp, #24]
   384b4:	ldr	x0, [sp, #16]
   384b8:	cmp	x1, x0
   384bc:	cset	w0, eq  // eq = none
   384c0:	and	w0, w0, #0xff
   384c4:	ldr	x30, [sp], #48
   384c8:	ret
   384cc:	str	x30, [sp, #-32]!
   384d0:	str	x0, [sp, #24]
   384d4:	str	x1, [sp, #16]
   384d8:	ldr	x2, [sp, #16]
   384dc:	ldr	x1, [sp, #24]
   384e0:	mov	x0, #0xffffffffffffffff    	// #-1
   384e4:	bl	69d0 <dlvsym@plt>
   384e8:	ldr	x30, [sp], #32
   384ec:	ret
   384f0:	stp	x29, x30, [sp, #-48]!
   384f4:	mov	x29, sp
   384f8:	str	x0, [sp, #40]
   384fc:	str	x1, [sp, #32]
   38500:	str	x2, [sp, #24]
   38504:	str	x3, [sp, #16]
   38508:	ldr	x0, [sp, #32]
   3850c:	ldr	x1, [x0, #16]
   38510:	ldr	x0, [sp, #32]
   38514:	ldr	x0, [x0, #8]
   38518:	add	x1, x1, x0
   3851c:	ldr	x0, [sp, #32]
   38520:	str	x1, [x0, #16]
   38524:	ldr	x0, [sp, #32]
   38528:	str	xzr, [x0, #8]
   3852c:	ldr	x3, [sp, #16]
   38530:	ldr	x2, [sp, #24]
   38534:	ldr	x1, [sp, #32]
   38538:	ldr	x0, [sp, #40]
   3853c:	bl	6b60 <__asan_backtrace_vector_release@plt>
   38540:	nop
   38544:	ldp	x29, x30, [sp], #48
   38548:	ret
   3854c:	stp	x29, x30, [sp, #-240]!
   38550:	mov	x29, sp
   38554:	str	x0, [sp, #24]
   38558:	str	x1, [sp, #16]
   3855c:	ldr	x0, [sp, #24]
   38560:	ldr	x2, [x0]
   38564:	ldr	x0, [sp, #24]
   38568:	ldr	x1, [x0, #16]
   3856c:	ldr	x0, [sp, #24]
   38570:	ldr	x0, [x0, #8]
   38574:	sub	x0, x1, x0
   38578:	add	x6, sp, #0x28
   3857c:	mov	w5, w0
   38580:	mov	x4, x2
   38584:	ldr	x3, [sp, #16]
   38588:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   3858c:	add	x2, x0, #0xd00
   38590:	mov	x1, #0xc8                  	// #200
   38594:	mov	x0, x6
   38598:	bl	6c70 <snprintf@plt>
   3859c:	ldr	x0, [sp, #24]
   385a0:	ldr	x3, [x0, #40]
   385a4:	ldr	x0, [sp, #24]
   385a8:	ldr	x0, [x0, #48]
   385ac:	add	x1, sp, #0x28
   385b0:	mov	w2, #0x0                   	// #0
   385b4:	blr	x3
   385b8:	nop
   385bc:	ldp	x29, x30, [sp], #240
   385c0:	ret
   385c4:	stp	x29, x30, [sp, #-32]!
   385c8:	mov	x29, sp
   385cc:	str	x0, [sp, #24]
   385d0:	str	x1, [sp, #16]
   385d4:	ldr	x0, [sp, #24]
   385d8:	ldr	x0, [x0, #24]
   385dc:	ldr	x1, [sp, #16]
   385e0:	cmp	x1, x0
   385e4:	b.hi	385f0 <__sanitizer_set_death_callback@@Base+0x2950>  // b.pmore
   385e8:	mov	w0, #0x1                   	// #1
   385ec:	b	38620 <__sanitizer_set_death_callback@@Base+0x2980>
   385f0:	ldr	x0, [sp, #24]
   385f4:	ldr	w0, [x0, #56]
   385f8:	cmp	w0, #0x0
   385fc:	b.ne	3861c <__sanitizer_set_death_callback@@Base+0x297c>  // b.any
   38600:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   38604:	add	x1, x0, #0xd10
   38608:	ldr	x0, [sp, #24]
   3860c:	bl	3854c <__sanitizer_set_death_callback@@Base+0x28ac>
   38610:	ldr	x0, [sp, #24]
   38614:	mov	w1, #0x1                   	// #1
   38618:	str	w1, [x0, #56]
   3861c:	mov	w0, #0x0                   	// #0
   38620:	ldp	x29, x30, [sp], #32
   38624:	ret
   38628:	stp	x29, x30, [sp, #-32]!
   3862c:	mov	x29, sp
   38630:	str	x0, [sp, #24]
   38634:	str	x1, [sp, #16]
   38638:	ldr	x1, [sp, #16]
   3863c:	ldr	x0, [sp, #24]
   38640:	bl	385c4 <__sanitizer_set_death_callback@@Base+0x2924>
   38644:	cmp	w0, #0x0
   38648:	b.ne	38654 <__sanitizer_set_death_callback@@Base+0x29b4>  // b.any
   3864c:	mov	w0, #0x0                   	// #0
   38650:	b	38688 <__sanitizer_set_death_callback@@Base+0x29e8>
   38654:	ldr	x0, [sp, #24]
   38658:	ldr	x1, [x0, #16]
   3865c:	ldr	x0, [sp, #16]
   38660:	add	x1, x1, x0
   38664:	ldr	x0, [sp, #24]
   38668:	str	x1, [x0, #16]
   3866c:	ldr	x0, [sp, #24]
   38670:	ldr	x1, [x0, #24]
   38674:	ldr	x0, [sp, #16]
   38678:	sub	x1, x1, x0
   3867c:	ldr	x0, [sp, #24]
   38680:	str	x1, [x0, #24]
   38684:	mov	w0, #0x1                   	// #1
   38688:	ldp	x29, x30, [sp], #32
   3868c:	ret
   38690:	stp	x29, x30, [sp, #-64]!
   38694:	mov	x29, sp
   38698:	str	x0, [sp, #24]
   3869c:	ldr	x0, [sp, #24]
   386a0:	ldr	x0, [x0, #16]
   386a4:	str	x0, [sp, #56]
   386a8:	ldr	x0, [sp, #24]
   386ac:	ldr	x0, [x0, #24]
   386b0:	mov	x1, x0
   386b4:	ldr	x0, [sp, #56]
   386b8:	bl	6d90 <__asan_internal_strnlen@plt>
   386bc:	str	x0, [sp, #48]
   386c0:	ldr	x0, [sp, #48]
   386c4:	add	x0, x0, #0x1
   386c8:	str	x0, [sp, #40]
   386cc:	ldr	x1, [sp, #40]
   386d0:	ldr	x0, [sp, #24]
   386d4:	bl	38628 <__sanitizer_set_death_callback@@Base+0x2988>
   386d8:	cmp	w0, #0x0
   386dc:	b.ne	386e8 <__sanitizer_set_death_callback@@Base+0x2a48>  // b.any
   386e0:	mov	x0, #0x0                   	// #0
   386e4:	b	386ec <__sanitizer_set_death_callback@@Base+0x2a4c>
   386e8:	ldr	x0, [sp, #56]
   386ec:	ldp	x29, x30, [sp], #64
   386f0:	ret
   386f4:	stp	x29, x30, [sp, #-48]!
   386f8:	mov	x29, sp
   386fc:	str	x0, [sp, #24]
   38700:	ldr	x0, [sp, #24]
   38704:	ldr	x0, [x0, #16]
   38708:	str	x0, [sp, #40]
   3870c:	mov	x1, #0x1                   	// #1
   38710:	ldr	x0, [sp, #24]
   38714:	bl	38628 <__sanitizer_set_death_callback@@Base+0x2988>
   38718:	cmp	w0, #0x0
   3871c:	b.ne	38728 <__sanitizer_set_death_callback@@Base+0x2a88>  // b.any
   38720:	mov	w0, #0x0                   	// #0
   38724:	b	38730 <__sanitizer_set_death_callback@@Base+0x2a90>
   38728:	ldr	x0, [sp, #40]
   3872c:	ldrb	w0, [x0]
   38730:	ldp	x29, x30, [sp], #48
   38734:	ret
   38738:	stp	x29, x30, [sp, #-48]!
   3873c:	mov	x29, sp
   38740:	str	x0, [sp, #24]
   38744:	ldr	x0, [sp, #24]
   38748:	ldr	x0, [x0, #16]
   3874c:	str	x0, [sp, #40]
   38750:	mov	x1, #0x1                   	// #1
   38754:	ldr	x0, [sp, #24]
   38758:	bl	38628 <__sanitizer_set_death_callback@@Base+0x2988>
   3875c:	cmp	w0, #0x0
   38760:	b.ne	3876c <__sanitizer_set_death_callback@@Base+0x2acc>  // b.any
   38764:	mov	w0, #0x0                   	// #0
   38768:	b	38788 <__sanitizer_set_death_callback@@Base+0x2ae8>
   3876c:	ldr	x0, [sp, #40]
   38770:	ldrb	w0, [x0]
   38774:	eor	w0, w0, #0xffffff80
   38778:	and	w0, w0, #0xff
   3877c:	sub	w0, w0, #0x80
   38780:	and	w0, w0, #0xff
   38784:	sxtb	w0, w0
   38788:	ldp	x29, x30, [sp], #48
   3878c:	ret
   38790:	stp	x29, x30, [sp, #-48]!
   38794:	mov	x29, sp
   38798:	str	x0, [sp, #24]
   3879c:	ldr	x0, [sp, #24]
   387a0:	ldr	x0, [x0, #16]
   387a4:	str	x0, [sp, #40]
   387a8:	mov	x1, #0x2                   	// #2
   387ac:	ldr	x0, [sp, #24]
   387b0:	bl	38628 <__sanitizer_set_death_callback@@Base+0x2988>
   387b4:	cmp	w0, #0x0
   387b8:	b.ne	387c4 <__sanitizer_set_death_callback@@Base+0x2b24>  // b.any
   387bc:	mov	w0, #0x0                   	// #0
   387c0:	b	38830 <__sanitizer_set_death_callback@@Base+0x2b90>
   387c4:	ldr	x0, [sp, #24]
   387c8:	ldr	w0, [x0, #32]
   387cc:	cmp	w0, #0x0
   387d0:	b.eq	38804 <__sanitizer_set_death_callback@@Base+0x2b64>  // b.none
   387d4:	ldr	x0, [sp, #40]
   387d8:	ldrb	w0, [x0]
   387dc:	lsl	w0, w0, #8
   387e0:	sxth	w1, w0
   387e4:	ldr	x0, [sp, #40]
   387e8:	add	x0, x0, #0x1
   387ec:	ldrb	w0, [x0]
   387f0:	sxth	w0, w0
   387f4:	orr	w0, w1, w0
   387f8:	sxth	w0, w0
   387fc:	and	w0, w0, #0xffff
   38800:	b	38830 <__sanitizer_set_death_callback@@Base+0x2b90>
   38804:	ldr	x0, [sp, #40]
   38808:	add	x0, x0, #0x1
   3880c:	ldrb	w0, [x0]
   38810:	lsl	w0, w0, #8
   38814:	sxth	w1, w0
   38818:	ldr	x0, [sp, #40]
   3881c:	ldrb	w0, [x0]
   38820:	sxth	w0, w0
   38824:	orr	w0, w1, w0
   38828:	sxth	w0, w0
   3882c:	and	w0, w0, #0xffff
   38830:	ldp	x29, x30, [sp], #48
   38834:	ret
   38838:	stp	x29, x30, [sp, #-48]!
   3883c:	mov	x29, sp
   38840:	str	x0, [sp, #24]
   38844:	ldr	x0, [sp, #24]
   38848:	ldr	x0, [x0, #16]
   3884c:	str	x0, [sp, #40]
   38850:	mov	x1, #0x4                   	// #4
   38854:	ldr	x0, [sp, #24]
   38858:	bl	38628 <__sanitizer_set_death_callback@@Base+0x2988>
   3885c:	cmp	w0, #0x0
   38860:	b.ne	3886c <__sanitizer_set_death_callback@@Base+0x2bcc>  // b.any
   38864:	mov	w0, #0x0                   	// #0
   38868:	b	38908 <__sanitizer_set_death_callback@@Base+0x2c68>
   3886c:	ldr	x0, [sp, #24]
   38870:	ldr	w0, [x0, #32]
   38874:	cmp	w0, #0x0
   38878:	b.eq	388c4 <__sanitizer_set_death_callback@@Base+0x2c24>  // b.none
   3887c:	ldr	x0, [sp, #40]
   38880:	ldrb	w0, [x0]
   38884:	lsl	w1, w0, #24
   38888:	ldr	x0, [sp, #40]
   3888c:	add	x0, x0, #0x1
   38890:	ldrb	w0, [x0]
   38894:	lsl	w0, w0, #16
   38898:	orr	w1, w1, w0
   3889c:	ldr	x0, [sp, #40]
   388a0:	add	x0, x0, #0x2
   388a4:	ldrb	w0, [x0]
   388a8:	lsl	w0, w0, #8
   388ac:	orr	w0, w1, w0
   388b0:	ldr	x1, [sp, #40]
   388b4:	add	x1, x1, #0x3
   388b8:	ldrb	w1, [x1]
   388bc:	orr	w0, w0, w1
   388c0:	b	38908 <__sanitizer_set_death_callback@@Base+0x2c68>
   388c4:	ldr	x0, [sp, #40]
   388c8:	add	x0, x0, #0x3
   388cc:	ldrb	w0, [x0]
   388d0:	lsl	w1, w0, #24
   388d4:	ldr	x0, [sp, #40]
   388d8:	add	x0, x0, #0x2
   388dc:	ldrb	w0, [x0]
   388e0:	lsl	w0, w0, #16
   388e4:	orr	w1, w1, w0
   388e8:	ldr	x0, [sp, #40]
   388ec:	add	x0, x0, #0x1
   388f0:	ldrb	w0, [x0]
   388f4:	lsl	w0, w0, #8
   388f8:	orr	w0, w1, w0
   388fc:	ldr	x1, [sp, #40]
   38900:	ldrb	w1, [x1]
   38904:	orr	w0, w0, w1
   38908:	ldp	x29, x30, [sp], #48
   3890c:	ret
   38910:	stp	x29, x30, [sp, #-48]!
   38914:	mov	x29, sp
   38918:	str	x0, [sp, #24]
   3891c:	ldr	x0, [sp, #24]
   38920:	ldr	x0, [x0, #16]
   38924:	str	x0, [sp, #40]
   38928:	mov	x1, #0x8                   	// #8
   3892c:	ldr	x0, [sp, #24]
   38930:	bl	38628 <__sanitizer_set_death_callback@@Base+0x2988>
   38934:	cmp	w0, #0x0
   38938:	b.ne	38944 <__sanitizer_set_death_callback@@Base+0x2ca4>  // b.any
   3893c:	mov	x0, #0x0                   	// #0
   38940:	b	38ac0 <__sanitizer_set_death_callback@@Base+0x2e20>
   38944:	ldr	x0, [sp, #24]
   38948:	ldr	w0, [x0, #32]
   3894c:	cmp	w0, #0x0
   38950:	b.eq	38a0c <__sanitizer_set_death_callback@@Base+0x2d6c>  // b.none
   38954:	ldr	x0, [sp, #40]
   38958:	ldrb	w0, [x0]
   3895c:	and	x0, x0, #0xff
   38960:	lsl	x1, x0, #56
   38964:	ldr	x0, [sp, #40]
   38968:	add	x0, x0, #0x1
   3896c:	ldrb	w0, [x0]
   38970:	and	x0, x0, #0xff
   38974:	lsl	x0, x0, #48
   38978:	orr	x1, x1, x0
   3897c:	ldr	x0, [sp, #40]
   38980:	add	x0, x0, #0x2
   38984:	ldrb	w0, [x0]
   38988:	and	x0, x0, #0xff
   3898c:	lsl	x0, x0, #40
   38990:	orr	x1, x1, x0
   38994:	ldr	x0, [sp, #40]
   38998:	add	x0, x0, #0x3
   3899c:	ldrb	w0, [x0]
   389a0:	and	x0, x0, #0xff
   389a4:	lsl	x0, x0, #32
   389a8:	orr	x1, x1, x0
   389ac:	ldr	x0, [sp, #40]
   389b0:	add	x0, x0, #0x4
   389b4:	ldrb	w0, [x0]
   389b8:	and	x0, x0, #0xff
   389bc:	lsl	x0, x0, #24
   389c0:	orr	x1, x1, x0
   389c4:	ldr	x0, [sp, #40]
   389c8:	add	x0, x0, #0x5
   389cc:	ldrb	w0, [x0]
   389d0:	and	x0, x0, #0xff
   389d4:	lsl	x0, x0, #16
   389d8:	orr	x1, x1, x0
   389dc:	ldr	x0, [sp, #40]
   389e0:	add	x0, x0, #0x6
   389e4:	ldrb	w0, [x0]
   389e8:	and	x0, x0, #0xff
   389ec:	lsl	x0, x0, #8
   389f0:	orr	x1, x1, x0
   389f4:	ldr	x0, [sp, #40]
   389f8:	add	x0, x0, #0x7
   389fc:	ldrb	w0, [x0]
   38a00:	and	x0, x0, #0xff
   38a04:	orr	x0, x1, x0
   38a08:	b	38ac0 <__sanitizer_set_death_callback@@Base+0x2e20>
   38a0c:	ldr	x0, [sp, #40]
   38a10:	add	x0, x0, #0x7
   38a14:	ldrb	w0, [x0]
   38a18:	and	x0, x0, #0xff
   38a1c:	lsl	x1, x0, #56
   38a20:	ldr	x0, [sp, #40]
   38a24:	add	x0, x0, #0x6
   38a28:	ldrb	w0, [x0]
   38a2c:	and	x0, x0, #0xff
   38a30:	lsl	x0, x0, #48
   38a34:	orr	x1, x1, x0
   38a38:	ldr	x0, [sp, #40]
   38a3c:	add	x0, x0, #0x5
   38a40:	ldrb	w0, [x0]
   38a44:	and	x0, x0, #0xff
   38a48:	lsl	x0, x0, #40
   38a4c:	orr	x1, x1, x0
   38a50:	ldr	x0, [sp, #40]
   38a54:	add	x0, x0, #0x4
   38a58:	ldrb	w0, [x0]
   38a5c:	and	x0, x0, #0xff
   38a60:	lsl	x0, x0, #32
   38a64:	orr	x1, x1, x0
   38a68:	ldr	x0, [sp, #40]
   38a6c:	add	x0, x0, #0x3
   38a70:	ldrb	w0, [x0]
   38a74:	and	x0, x0, #0xff
   38a78:	lsl	x0, x0, #24
   38a7c:	orr	x1, x1, x0
   38a80:	ldr	x0, [sp, #40]
   38a84:	add	x0, x0, #0x2
   38a88:	ldrb	w0, [x0]
   38a8c:	and	x0, x0, #0xff
   38a90:	lsl	x0, x0, #16
   38a94:	orr	x1, x1, x0
   38a98:	ldr	x0, [sp, #40]
   38a9c:	add	x0, x0, #0x1
   38aa0:	ldrb	w0, [x0]
   38aa4:	and	x0, x0, #0xff
   38aa8:	lsl	x0, x0, #8
   38aac:	orr	x1, x1, x0
   38ab0:	ldr	x0, [sp, #40]
   38ab4:	ldrb	w0, [x0]
   38ab8:	and	x0, x0, #0xff
   38abc:	orr	x0, x1, x0
   38ac0:	ldp	x29, x30, [sp], #48
   38ac4:	ret
   38ac8:	stp	x29, x30, [sp, #-32]!
   38acc:	mov	x29, sp
   38ad0:	str	x0, [sp, #24]
   38ad4:	str	w1, [sp, #20]
   38ad8:	ldr	w0, [sp, #20]
   38adc:	cmp	w0, #0x0
   38ae0:	b.eq	38af0 <__sanitizer_set_death_callback@@Base+0x2e50>  // b.none
   38ae4:	ldr	x0, [sp, #24]
   38ae8:	bl	38910 <__sanitizer_set_death_callback@@Base+0x2c70>
   38aec:	b	38afc <__sanitizer_set_death_callback@@Base+0x2e5c>
   38af0:	ldr	x0, [sp, #24]
   38af4:	bl	38838 <__sanitizer_set_death_callback@@Base+0x2b98>
   38af8:	mov	w0, w0
   38afc:	ldp	x29, x30, [sp], #32
   38b00:	ret
   38b04:	stp	x29, x30, [sp, #-32]!
   38b08:	mov	x29, sp
   38b0c:	str	x0, [sp, #24]
   38b10:	str	w1, [sp, #20]
   38b14:	ldr	w0, [sp, #20]
   38b18:	cmp	w0, #0x8
   38b1c:	b.eq	38b98 <__sanitizer_set_death_callback@@Base+0x2ef8>  // b.none
   38b20:	ldr	w0, [sp, #20]
   38b24:	cmp	w0, #0x8
   38b28:	b.gt	38ba4 <__sanitizer_set_death_callback@@Base+0x2f04>
   38b2c:	ldr	w0, [sp, #20]
   38b30:	cmp	w0, #0x4
   38b34:	b.eq	38b88 <__sanitizer_set_death_callback@@Base+0x2ee8>  // b.none
   38b38:	ldr	w0, [sp, #20]
   38b3c:	cmp	w0, #0x4
   38b40:	b.gt	38ba4 <__sanitizer_set_death_callback@@Base+0x2f04>
   38b44:	ldr	w0, [sp, #20]
   38b48:	cmp	w0, #0x1
   38b4c:	b.eq	38b60 <__sanitizer_set_death_callback@@Base+0x2ec0>  // b.none
   38b50:	ldr	w0, [sp, #20]
   38b54:	cmp	w0, #0x2
   38b58:	b.eq	38b74 <__sanitizer_set_death_callback@@Base+0x2ed4>  // b.none
   38b5c:	b	38ba4 <__sanitizer_set_death_callback@@Base+0x2f04>
   38b60:	ldr	x0, [sp, #24]
   38b64:	bl	386f4 <__sanitizer_set_death_callback@@Base+0x2a54>
   38b68:	and	w0, w0, #0xff
   38b6c:	and	x0, x0, #0xff
   38b70:	b	38bb8 <__sanitizer_set_death_callback@@Base+0x2f18>
   38b74:	ldr	x0, [sp, #24]
   38b78:	bl	38790 <__sanitizer_set_death_callback@@Base+0x2af0>
   38b7c:	and	w0, w0, #0xffff
   38b80:	and	x0, x0, #0xffff
   38b84:	b	38bb8 <__sanitizer_set_death_callback@@Base+0x2f18>
   38b88:	ldr	x0, [sp, #24]
   38b8c:	bl	38838 <__sanitizer_set_death_callback@@Base+0x2b98>
   38b90:	mov	w0, w0
   38b94:	b	38bb8 <__sanitizer_set_death_callback@@Base+0x2f18>
   38b98:	ldr	x0, [sp, #24]
   38b9c:	bl	38910 <__sanitizer_set_death_callback@@Base+0x2c70>
   38ba0:	b	38bb8 <__sanitizer_set_death_callback@@Base+0x2f18>
   38ba4:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   38ba8:	add	x1, x0, #0xd20
   38bac:	ldr	x0, [sp, #24]
   38bb0:	bl	3854c <__sanitizer_set_death_callback@@Base+0x28ac>
   38bb4:	mov	x0, #0x0                   	// #0
   38bb8:	ldp	x29, x30, [sp], #32
   38bbc:	ret
   38bc0:	sub	sp, sp, #0x10
   38bc4:	str	x0, [sp, #8]
   38bc8:	str	w1, [sp, #4]
   38bcc:	ldr	w0, [sp, #4]
   38bd0:	cmp	w0, #0x8
   38bd4:	b.eq	38c5c <__sanitizer_set_death_callback@@Base+0x2fbc>  // b.none
   38bd8:	ldr	w0, [sp, #4]
   38bdc:	cmp	w0, #0x8
   38be0:	b.gt	38c70 <__sanitizer_set_death_callback@@Base+0x2fd0>
   38be4:	ldr	w0, [sp, #4]
   38be8:	cmp	w0, #0x4
   38bec:	b.eq	38c44 <__sanitizer_set_death_callback@@Base+0x2fa4>  // b.none
   38bf0:	ldr	w0, [sp, #4]
   38bf4:	cmp	w0, #0x4
   38bf8:	b.gt	38c70 <__sanitizer_set_death_callback@@Base+0x2fd0>
   38bfc:	ldr	w0, [sp, #4]
   38c00:	cmp	w0, #0x1
   38c04:	b.eq	38c18 <__sanitizer_set_death_callback@@Base+0x2f78>  // b.none
   38c08:	ldr	w0, [sp, #4]
   38c0c:	cmp	w0, #0x2
   38c10:	b.eq	38c2c <__sanitizer_set_death_callback@@Base+0x2f8c>  // b.none
   38c14:	b	38c70 <__sanitizer_set_death_callback@@Base+0x2fd0>
   38c18:	ldr	x0, [sp, #8]
   38c1c:	cmp	x0, #0xff
   38c20:	cset	w0, eq  // eq = none
   38c24:	and	w0, w0, #0xff
   38c28:	b	38c74 <__sanitizer_set_death_callback@@Base+0x2fd4>
   38c2c:	ldr	x1, [sp, #8]
   38c30:	mov	x0, #0xffff                	// #65535
   38c34:	cmp	x1, x0
   38c38:	cset	w0, eq  // eq = none
   38c3c:	and	w0, w0, #0xff
   38c40:	b	38c74 <__sanitizer_set_death_callback@@Base+0x2fd4>
   38c44:	ldr	x1, [sp, #8]
   38c48:	mov	x0, #0xffffffff            	// #4294967295
   38c4c:	cmp	x1, x0
   38c50:	cset	w0, eq  // eq = none
   38c54:	and	w0, w0, #0xff
   38c58:	b	38c74 <__sanitizer_set_death_callback@@Base+0x2fd4>
   38c5c:	ldr	x0, [sp, #8]
   38c60:	cmn	x0, #0x1
   38c64:	cset	w0, eq  // eq = none
   38c68:	and	w0, w0, #0xff
   38c6c:	b	38c74 <__sanitizer_set_death_callback@@Base+0x2fd4>
   38c70:	mov	w0, #0x0                   	// #0
   38c74:	add	sp, sp, #0x10
   38c78:	ret
   38c7c:	stp	x29, x30, [sp, #-64]!
   38c80:	mov	x29, sp
   38c84:	str	x0, [sp, #24]
   38c88:	str	xzr, [sp, #56]
   38c8c:	str	wzr, [sp, #52]
   38c90:	str	wzr, [sp, #48]
   38c94:	ldr	x0, [sp, #24]
   38c98:	ldr	x0, [x0, #16]
   38c9c:	str	x0, [sp, #40]
   38ca0:	mov	x1, #0x1                   	// #1
   38ca4:	ldr	x0, [sp, #24]
   38ca8:	bl	38628 <__sanitizer_set_death_callback@@Base+0x2988>
   38cac:	cmp	w0, #0x0
   38cb0:	b.ne	38cbc <__sanitizer_set_death_callback@@Base+0x301c>  // b.any
   38cb4:	mov	x0, #0x0                   	// #0
   38cb8:	b	38d34 <__sanitizer_set_death_callback@@Base+0x3094>
   38cbc:	ldr	x0, [sp, #40]
   38cc0:	ldrb	w0, [x0]
   38cc4:	strb	w0, [sp, #39]
   38cc8:	ldr	w0, [sp, #52]
   38ccc:	cmp	w0, #0x3f
   38cd0:	b.hi	38cf4 <__sanitizer_set_death_callback@@Base+0x3054>  // b.pmore
   38cd4:	ldrb	w0, [sp, #39]
   38cd8:	and	x1, x0, #0x7f
   38cdc:	ldr	w0, [sp, #52]
   38ce0:	lsl	x0, x1, x0
   38ce4:	ldr	x1, [sp, #56]
   38ce8:	orr	x0, x1, x0
   38cec:	str	x0, [sp, #56]
   38cf0:	b	38d18 <__sanitizer_set_death_callback@@Base+0x3078>
   38cf4:	ldr	w0, [sp, #48]
   38cf8:	cmp	w0, #0x0
   38cfc:	b.ne	38d18 <__sanitizer_set_death_callback@@Base+0x3078>  // b.any
   38d00:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   38d04:	add	x1, x0, #0xd40
   38d08:	ldr	x0, [sp, #24]
   38d0c:	bl	3854c <__sanitizer_set_death_callback@@Base+0x28ac>
   38d10:	mov	w0, #0x1                   	// #1
   38d14:	str	w0, [sp, #48]
   38d18:	ldr	w0, [sp, #52]
   38d1c:	add	w0, w0, #0x7
   38d20:	str	w0, [sp, #52]
   38d24:	ldrsb	w0, [sp, #39]
   38d28:	cmp	w0, #0x0
   38d2c:	b.lt	38c94 <__sanitizer_set_death_callback@@Base+0x2ff4>  // b.tstop
   38d30:	ldr	x0, [sp, #56]
   38d34:	ldp	x29, x30, [sp], #64
   38d38:	ret
   38d3c:	stp	x29, x30, [sp, #-64]!
   38d40:	mov	x29, sp
   38d44:	str	x0, [sp, #24]
   38d48:	str	xzr, [sp, #56]
   38d4c:	str	wzr, [sp, #52]
   38d50:	str	wzr, [sp, #48]
   38d54:	ldr	x0, [sp, #24]
   38d58:	ldr	x0, [x0, #16]
   38d5c:	str	x0, [sp, #40]
   38d60:	mov	x1, #0x1                   	// #1
   38d64:	ldr	x0, [sp, #24]
   38d68:	bl	38628 <__sanitizer_set_death_callback@@Base+0x2988>
   38d6c:	cmp	w0, #0x0
   38d70:	b.ne	38d7c <__sanitizer_set_death_callback@@Base+0x30dc>  // b.any
   38d74:	mov	x0, #0x0                   	// #0
   38d78:	b	38e28 <__sanitizer_set_death_callback@@Base+0x3188>
   38d7c:	ldr	x0, [sp, #40]
   38d80:	ldrb	w0, [x0]
   38d84:	strb	w0, [sp, #39]
   38d88:	ldr	w0, [sp, #52]
   38d8c:	cmp	w0, #0x3f
   38d90:	b.hi	38db4 <__sanitizer_set_death_callback@@Base+0x3114>  // b.pmore
   38d94:	ldrb	w0, [sp, #39]
   38d98:	and	x1, x0, #0x7f
   38d9c:	ldr	w0, [sp, #52]
   38da0:	lsl	x0, x1, x0
   38da4:	ldr	x1, [sp, #56]
   38da8:	orr	x0, x1, x0
   38dac:	str	x0, [sp, #56]
   38db0:	b	38dd8 <__sanitizer_set_death_callback@@Base+0x3138>
   38db4:	ldr	w0, [sp, #48]
   38db8:	cmp	w0, #0x0
   38dbc:	b.ne	38dd8 <__sanitizer_set_death_callback@@Base+0x3138>  // b.any
   38dc0:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   38dc4:	add	x1, x0, #0xd60
   38dc8:	ldr	x0, [sp, #24]
   38dcc:	bl	3854c <__sanitizer_set_death_callback@@Base+0x28ac>
   38dd0:	mov	w0, #0x1                   	// #1
   38dd4:	str	w0, [sp, #48]
   38dd8:	ldr	w0, [sp, #52]
   38ddc:	add	w0, w0, #0x7
   38de0:	str	w0, [sp, #52]
   38de4:	ldrsb	w0, [sp, #39]
   38de8:	cmp	w0, #0x0
   38dec:	b.lt	38d54 <__sanitizer_set_death_callback@@Base+0x30b4>  // b.tstop
   38df0:	ldrb	w0, [sp, #39]
   38df4:	and	w0, w0, #0x40
   38df8:	cmp	w0, #0x0
   38dfc:	b.eq	38e24 <__sanitizer_set_death_callback@@Base+0x3184>  // b.none
   38e00:	ldr	w0, [sp, #52]
   38e04:	cmp	w0, #0x3f
   38e08:	b.hi	38e24 <__sanitizer_set_death_callback@@Base+0x3184>  // b.pmore
   38e0c:	ldr	w0, [sp, #52]
   38e10:	mov	x1, #0xffffffffffffffff    	// #-1
   38e14:	lsl	x0, x1, x0
   38e18:	ldr	x1, [sp, #56]
   38e1c:	orr	x0, x1, x0
   38e20:	str	x0, [sp, #56]
   38e24:	ldr	x0, [sp, #56]
   38e28:	ldp	x29, x30, [sp], #64
   38e2c:	ret
   38e30:	sub	sp, sp, #0x20
   38e34:	str	x0, [sp, #8]
   38e38:	mov	x0, #0x1                   	// #1
   38e3c:	str	x0, [sp, #24]
   38e40:	b	38e5c <__sanitizer_set_death_callback@@Base+0x31bc>
   38e44:	ldr	x0, [sp, #8]
   38e48:	add	x0, x0, #0x1
   38e4c:	str	x0, [sp, #8]
   38e50:	ldr	x0, [sp, #24]
   38e54:	add	x0, x0, #0x1
   38e58:	str	x0, [sp, #24]
   38e5c:	ldr	x0, [sp, #8]
   38e60:	ldrb	w0, [x0]
   38e64:	sxtb	w0, w0
   38e68:	cmp	w0, #0x0
   38e6c:	b.lt	38e44 <__sanitizer_set_death_callback@@Base+0x31a4>  // b.tstop
   38e70:	ldr	x0, [sp, #24]
   38e74:	add	sp, sp, #0x20
   38e78:	ret
   38e7c:	stp	x29, x30, [sp, #-48]!
   38e80:	mov	x29, sp
   38e84:	str	x0, [sp, #24]
   38e88:	str	x1, [sp, #16]
   38e8c:	ldr	x0, [sp, #24]
   38e90:	bl	38838 <__sanitizer_set_death_callback@@Base+0x2b98>
   38e94:	mov	w0, w0
   38e98:	str	x0, [sp, #40]
   38e9c:	ldr	x1, [sp, #40]
   38ea0:	mov	x0, #0xffffffff            	// #4294967295
   38ea4:	cmp	x1, x0
   38ea8:	b.ne	38ec8 <__sanitizer_set_death_callback@@Base+0x3228>  // b.any
   38eac:	ldr	x0, [sp, #24]
   38eb0:	bl	38910 <__sanitizer_set_death_callback@@Base+0x2c70>
   38eb4:	str	x0, [sp, #40]
   38eb8:	ldr	x0, [sp, #16]
   38ebc:	mov	w1, #0x1                   	// #1
   38ec0:	str	w1, [x0]
   38ec4:	b	38ed0 <__sanitizer_set_death_callback@@Base+0x3230>
   38ec8:	ldr	x0, [sp, #16]
   38ecc:	str	wzr, [x0]
   38ed0:	ldr	x0, [sp, #40]
   38ed4:	ldp	x29, x30, [sp], #48
   38ed8:	ret
   38edc:	stp	x29, x30, [sp, #-64]!
   38ee0:	mov	x29, sp
   38ee4:	str	x0, [sp, #40]
   38ee8:	str	x1, [sp, #32]
   38eec:	str	x2, [sp, #24]
   38ef0:	str	x3, [sp, #16]
   38ef4:	str	xzr, [sp, #56]
   38ef8:	b	38f54 <__sanitizer_set_death_callback@@Base+0x32b4>
   38efc:	ldr	x0, [sp, #32]
   38f00:	ldr	x1, [x0, #8]
   38f04:	ldr	x0, [sp, #56]
   38f08:	lsl	x0, x0, #5
   38f0c:	add	x0, x1, x0
   38f10:	ldr	x5, [x0, #24]
   38f14:	ldr	x0, [sp, #32]
   38f18:	ldr	x1, [x0, #8]
   38f1c:	ldr	x0, [sp, #56]
   38f20:	lsl	x0, x0, #5
   38f24:	add	x0, x1, x0
   38f28:	ldr	x0, [x0, #16]
   38f2c:	lsl	x0, x0, #3
   38f30:	ldr	x4, [sp, #16]
   38f34:	ldr	x3, [sp, #24]
   38f38:	mov	x2, x0
   38f3c:	mov	x1, x5
   38f40:	ldr	x0, [sp, #40]
   38f44:	bl	6e00 <__asan_backtrace_free@plt>
   38f48:	ldr	x0, [sp, #56]
   38f4c:	add	x0, x0, #0x1
   38f50:	str	x0, [sp, #56]
   38f54:	ldr	x0, [sp, #32]
   38f58:	ldr	x0, [x0]
   38f5c:	ldr	x1, [sp, #56]
   38f60:	cmp	x1, x0
   38f64:	b.cc	38efc <__sanitizer_set_death_callback@@Base+0x325c>  // b.lo, b.ul, b.last
   38f68:	ldr	x0, [sp, #32]
   38f6c:	ldr	x1, [x0, #8]
   38f70:	ldr	x0, [sp, #32]
   38f74:	ldr	x0, [x0]
   38f78:	lsl	x0, x0, #5
   38f7c:	ldr	x4, [sp, #16]
   38f80:	ldr	x3, [sp, #24]
   38f84:	mov	x2, x0
   38f88:	ldr	x0, [sp, #40]
   38f8c:	bl	6e00 <__asan_backtrace_free@plt>
   38f90:	ldr	x0, [sp, #32]
   38f94:	str	xzr, [x0]
   38f98:	ldr	x0, [sp, #32]
   38f9c:	str	xzr, [x0, #8]
   38fa0:	nop
   38fa4:	ldp	x29, x30, [sp], #64
   38fa8:	ret
   38fac:	sub	sp, sp, #0x70
   38fb0:	stp	x29, x30, [sp, #16]
   38fb4:	add	x29, sp, #0x10
   38fb8:	str	w0, [sp, #76]
   38fbc:	str	x1, [sp, #64]
   38fc0:	str	w2, [sp, #72]
   38fc4:	str	w3, [sp, #60]
   38fc8:	str	w4, [sp, #56]
   38fcc:	str	x5, [sp, #48]
   38fd0:	str	x6, [sp, #40]
   38fd4:	str	x7, [sp, #32]
   38fd8:	mov	x2, #0x10                  	// #16
   38fdc:	mov	w1, #0x0                   	// #0
   38fe0:	ldr	x0, [sp, #112]
   38fe4:	bl	6ab0 <__asan_internal_memset@plt>
   38fe8:	ldr	w1, [sp, #76]
   38fec:	mov	w0, #0x1f21                	// #7969
   38ff0:	cmp	w1, w0
   38ff4:	b.eq	395c0 <__sanitizer_set_death_callback@@Base+0x3920>  // b.none
   38ff8:	ldr	w1, [sp, #76]
   38ffc:	mov	w0, #0x1f21                	// #7969
   39000:	cmp	w1, w0
   39004:	b.hi	39644 <__sanitizer_set_death_callback@@Base+0x39a4>  // b.pmore
   39008:	ldr	w1, [sp, #76]
   3900c:	mov	w0, #0x1f20                	// #7968
   39010:	cmp	w1, w0
   39014:	b.eq	39578 <__sanitizer_set_death_callback@@Base+0x38d8>  // b.none
   39018:	ldr	w1, [sp, #76]
   3901c:	mov	w0, #0x1f20                	// #7968
   39020:	cmp	w1, w0
   39024:	b.hi	39644 <__sanitizer_set_death_callback@@Base+0x39a4>  // b.pmore
   39028:	ldr	w1, [sp, #76]
   3902c:	mov	w0, #0x1f02                	// #7938
   39030:	cmp	w1, w0
   39034:	b.eq	39550 <__sanitizer_set_death_callback@@Base+0x38b0>  // b.none
   39038:	ldr	w1, [sp, #76]
   3903c:	mov	w0, #0x1f02                	// #7938
   39040:	cmp	w1, w0
   39044:	b.hi	39644 <__sanitizer_set_death_callback@@Base+0x39a4>  // b.pmore
   39048:	ldr	w0, [sp, #76]
   3904c:	cmp	w0, #0x20
   39050:	b.hi	39088 <__sanitizer_set_death_callback@@Base+0x33e8>  // b.pmore
   39054:	ldr	w0, [sp, #76]
   39058:	cmp	w0, #0x0
   3905c:	b.eq	39644 <__sanitizer_set_death_callback@@Base+0x39a4>  // b.none
   39060:	ldr	w0, [sp, #76]
   39064:	sub	w0, w0, #0x1
   39068:	cmp	w0, #0x1f
   3906c:	b.hi	39644 <__sanitizer_set_death_callback@@Base+0x39a4>  // b.pmore
   39070:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   39074:	add	x1, x1, #0xde8
   39078:	ldr	w0, [x1, w0, uxtw #2]
   3907c:	adr	x1, 39088 <__sanitizer_set_death_callback@@Base+0x33e8>
   39080:	add	x0, x1, w0, sxtw #2
   39084:	br	x0
   39088:	ldr	w1, [sp, #76]
   3908c:	mov	w0, #0x1f01                	// #7937
   39090:	cmp	w1, w0
   39094:	b.eq	39528 <__sanitizer_set_death_callback@@Base+0x3888>  // b.none
   39098:	b	39644 <__sanitizer_set_death_callback@@Base+0x39a4>
   3909c:	ldr	x0, [sp, #112]
   390a0:	mov	w1, #0x1                   	// #1
   390a4:	str	w1, [x0]
   390a8:	ldr	w1, [sp, #56]
   390ac:	ldr	x0, [sp, #64]
   390b0:	bl	38b04 <__sanitizer_set_death_callback@@Base+0x2e64>
   390b4:	mov	x1, x0
   390b8:	ldr	x0, [sp, #112]
   390bc:	str	x1, [x0, #8]
   390c0:	mov	w0, #0x1                   	// #1
   390c4:	b	39658 <__sanitizer_set_death_callback@@Base+0x39b8>
   390c8:	ldr	x0, [sp, #112]
   390cc:	mov	w1, #0xa                   	// #10
   390d0:	str	w1, [x0]
   390d4:	ldr	x0, [sp, #64]
   390d8:	bl	38790 <__sanitizer_set_death_callback@@Base+0x2af0>
   390dc:	and	w0, w0, #0xffff
   390e0:	and	x0, x0, #0xffff
   390e4:	mov	x1, x0
   390e8:	ldr	x0, [sp, #64]
   390ec:	bl	38628 <__sanitizer_set_death_callback@@Base+0x2988>
   390f0:	b	39658 <__sanitizer_set_death_callback@@Base+0x39b8>
   390f4:	ldr	x0, [sp, #112]
   390f8:	mov	w1, #0xa                   	// #10
   390fc:	str	w1, [x0]
   39100:	ldr	x0, [sp, #64]
   39104:	bl	38838 <__sanitizer_set_death_callback@@Base+0x2b98>
   39108:	mov	w0, w0
   3910c:	mov	x1, x0
   39110:	ldr	x0, [sp, #64]
   39114:	bl	38628 <__sanitizer_set_death_callback@@Base+0x2988>
   39118:	b	39658 <__sanitizer_set_death_callback@@Base+0x39b8>
   3911c:	ldr	x0, [sp, #112]
   39120:	mov	w1, #0x2                   	// #2
   39124:	str	w1, [x0]
   39128:	ldr	x0, [sp, #64]
   3912c:	bl	38790 <__sanitizer_set_death_callback@@Base+0x2af0>
   39130:	and	w0, w0, #0xffff
   39134:	and	x1, x0, #0xffff
   39138:	ldr	x0, [sp, #112]
   3913c:	str	x1, [x0, #8]
   39140:	mov	w0, #0x1                   	// #1
   39144:	b	39658 <__sanitizer_set_death_callback@@Base+0x39b8>
   39148:	ldr	x0, [sp, #112]
   3914c:	mov	w1, #0x2                   	// #2
   39150:	str	w1, [x0]
   39154:	ldr	x0, [sp, #64]
   39158:	bl	38838 <__sanitizer_set_death_callback@@Base+0x2b98>
   3915c:	mov	w1, w0
   39160:	ldr	x0, [sp, #112]
   39164:	str	x1, [x0, #8]
   39168:	mov	w0, #0x1                   	// #1
   3916c:	b	39658 <__sanitizer_set_death_callback@@Base+0x39b8>
   39170:	ldr	x0, [sp, #112]
   39174:	mov	w1, #0x2                   	// #2
   39178:	str	w1, [x0]
   3917c:	ldr	x0, [sp, #64]
   39180:	bl	38910 <__sanitizer_set_death_callback@@Base+0x2c70>
   39184:	mov	x1, x0
   39188:	ldr	x0, [sp, #112]
   3918c:	str	x1, [x0, #8]
   39190:	mov	w0, #0x1                   	// #1
   39194:	b	39658 <__sanitizer_set_death_callback@@Base+0x39b8>
   39198:	ldr	x0, [sp, #112]
   3919c:	mov	w1, #0x4                   	// #4
   391a0:	str	w1, [x0]
   391a4:	ldr	x0, [sp, #64]
   391a8:	bl	38690 <__sanitizer_set_death_callback@@Base+0x29f0>
   391ac:	mov	x1, x0
   391b0:	ldr	x0, [sp, #112]
   391b4:	str	x1, [x0, #8]
   391b8:	ldr	x0, [sp, #112]
   391bc:	ldr	x0, [x0, #8]
   391c0:	cmp	x0, #0x0
   391c4:	cset	w0, ne  // ne = any
   391c8:	and	w0, w0, #0xff
   391cc:	b	39658 <__sanitizer_set_death_callback@@Base+0x39b8>
   391d0:	ldr	x0, [sp, #112]
   391d4:	mov	w1, #0xa                   	// #10
   391d8:	str	w1, [x0]
   391dc:	ldr	x0, [sp, #64]
   391e0:	bl	38c7c <__sanitizer_set_death_callback@@Base+0x2fdc>
   391e4:	mov	x1, x0
   391e8:	ldr	x0, [sp, #64]
   391ec:	bl	38628 <__sanitizer_set_death_callback@@Base+0x2988>
   391f0:	b	39658 <__sanitizer_set_death_callback@@Base+0x39b8>
   391f4:	ldr	x0, [sp, #112]
   391f8:	mov	w1, #0xa                   	// #10
   391fc:	str	w1, [x0]
   39200:	ldr	x0, [sp, #64]
   39204:	bl	386f4 <__sanitizer_set_death_callback@@Base+0x2a54>
   39208:	and	w0, w0, #0xff
   3920c:	and	x0, x0, #0xff
   39210:	mov	x1, x0
   39214:	ldr	x0, [sp, #64]
   39218:	bl	38628 <__sanitizer_set_death_callback@@Base+0x2988>
   3921c:	b	39658 <__sanitizer_set_death_callback@@Base+0x39b8>
   39220:	ldr	x0, [sp, #112]
   39224:	mov	w1, #0x2                   	// #2
   39228:	str	w1, [x0]
   3922c:	ldr	x0, [sp, #64]
   39230:	bl	386f4 <__sanitizer_set_death_callback@@Base+0x2a54>
   39234:	and	w0, w0, #0xff
   39238:	and	x1, x0, #0xff
   3923c:	ldr	x0, [sp, #112]
   39240:	str	x1, [x0, #8]
   39244:	mov	w0, #0x1                   	// #1
   39248:	b	39658 <__sanitizer_set_death_callback@@Base+0x39b8>
   3924c:	ldr	x0, [sp, #112]
   39250:	mov	w1, #0x2                   	// #2
   39254:	str	w1, [x0]
   39258:	ldr	x0, [sp, #64]
   3925c:	bl	386f4 <__sanitizer_set_death_callback@@Base+0x2a54>
   39260:	and	w0, w0, #0xff
   39264:	and	x1, x0, #0xff
   39268:	ldr	x0, [sp, #112]
   3926c:	str	x1, [x0, #8]
   39270:	mov	w0, #0x1                   	// #1
   39274:	b	39658 <__sanitizer_set_death_callback@@Base+0x39b8>
   39278:	ldr	x0, [sp, #112]
   3927c:	mov	w1, #0x3                   	// #3
   39280:	str	w1, [x0]
   39284:	ldr	x0, [sp, #64]
   39288:	bl	38d3c <__sanitizer_set_death_callback@@Base+0x309c>
   3928c:	mov	x1, x0
   39290:	ldr	x0, [sp, #112]
   39294:	str	x1, [x0, #8]
   39298:	mov	w0, #0x1                   	// #1
   3929c:	b	39658 <__sanitizer_set_death_callback@@Base+0x39b8>
   392a0:	ldr	w1, [sp, #72]
   392a4:	ldr	x0, [sp, #64]
   392a8:	bl	38ac8 <__sanitizer_set_death_callback@@Base+0x2e28>
   392ac:	str	x0, [sp, #88]
   392b0:	ldr	x1, [sp, #88]
   392b4:	ldr	x0, [sp, #40]
   392b8:	cmp	x1, x0
   392bc:	b.cc	392d8 <__sanitizer_set_death_callback@@Base+0x3638>  // b.lo, b.ul, b.last
   392c0:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   392c4:	add	x1, x0, #0xd88
   392c8:	ldr	x0, [sp, #64]
   392cc:	bl	3854c <__sanitizer_set_death_callback@@Base+0x28ac>
   392d0:	mov	w0, #0x0                   	// #0
   392d4:	b	39658 <__sanitizer_set_death_callback@@Base+0x39b8>
   392d8:	ldr	x0, [sp, #112]
   392dc:	mov	w1, #0x4                   	// #4
   392e0:	str	w1, [x0]
   392e4:	ldr	x1, [sp, #48]
   392e8:	ldr	x0, [sp, #88]
   392ec:	add	x1, x1, x0
   392f0:	ldr	x0, [sp, #112]
   392f4:	str	x1, [x0, #8]
   392f8:	mov	w0, #0x1                   	// #1
   392fc:	b	39658 <__sanitizer_set_death_callback@@Base+0x39b8>
   39300:	ldr	x0, [sp, #112]
   39304:	mov	w1, #0x2                   	// #2
   39308:	str	w1, [x0]
   3930c:	ldr	x0, [sp, #64]
   39310:	bl	38c7c <__sanitizer_set_death_callback@@Base+0x2fdc>
   39314:	mov	x1, x0
   39318:	ldr	x0, [sp, #112]
   3931c:	str	x1, [x0, #8]
   39320:	mov	w0, #0x1                   	// #1
   39324:	b	39658 <__sanitizer_set_death_callback@@Base+0x39b8>
   39328:	ldr	x0, [sp, #112]
   3932c:	mov	w1, #0x6                   	// #6
   39330:	str	w1, [x0]
   39334:	ldr	w0, [sp, #60]
   39338:	cmp	w0, #0x2
   3933c:	b.ne	3935c <__sanitizer_set_death_callback@@Base+0x36bc>  // b.any
   39340:	ldr	w1, [sp, #56]
   39344:	ldr	x0, [sp, #64]
   39348:	bl	38b04 <__sanitizer_set_death_callback@@Base+0x2e64>
   3934c:	mov	x1, x0
   39350:	ldr	x0, [sp, #112]
   39354:	str	x1, [x0, #8]
   39358:	b	39374 <__sanitizer_set_death_callback@@Base+0x36d4>
   3935c:	ldr	w1, [sp, #72]
   39360:	ldr	x0, [sp, #64]
   39364:	bl	38ac8 <__sanitizer_set_death_callback@@Base+0x2e28>
   39368:	mov	x1, x0
   3936c:	ldr	x0, [sp, #112]
   39370:	str	x1, [x0, #8]
   39374:	mov	w0, #0x1                   	// #1
   39378:	b	39658 <__sanitizer_set_death_callback@@Base+0x39b8>
   3937c:	ldr	x0, [sp, #112]
   39380:	mov	w1, #0x5                   	// #5
   39384:	str	w1, [x0]
   39388:	ldr	x0, [sp, #64]
   3938c:	bl	386f4 <__sanitizer_set_death_callback@@Base+0x2a54>
   39390:	and	w0, w0, #0xff
   39394:	and	x1, x0, #0xff
   39398:	ldr	x0, [sp, #112]
   3939c:	str	x1, [x0, #8]
   393a0:	mov	w0, #0x1                   	// #1
   393a4:	b	39658 <__sanitizer_set_death_callback@@Base+0x39b8>
   393a8:	ldr	x0, [sp, #112]
   393ac:	mov	w1, #0x5                   	// #5
   393b0:	str	w1, [x0]
   393b4:	ldr	x0, [sp, #64]
   393b8:	bl	38790 <__sanitizer_set_death_callback@@Base+0x2af0>
   393bc:	and	w0, w0, #0xffff
   393c0:	and	x1, x0, #0xffff
   393c4:	ldr	x0, [sp, #112]
   393c8:	str	x1, [x0, #8]
   393cc:	mov	w0, #0x1                   	// #1
   393d0:	b	39658 <__sanitizer_set_death_callback@@Base+0x39b8>
   393d4:	ldr	x0, [sp, #112]
   393d8:	mov	w1, #0x5                   	// #5
   393dc:	str	w1, [x0]
   393e0:	ldr	x0, [sp, #64]
   393e4:	bl	38838 <__sanitizer_set_death_callback@@Base+0x2b98>
   393e8:	mov	w1, w0
   393ec:	ldr	x0, [sp, #112]
   393f0:	str	x1, [x0, #8]
   393f4:	mov	w0, #0x1                   	// #1
   393f8:	b	39658 <__sanitizer_set_death_callback@@Base+0x39b8>
   393fc:	ldr	x0, [sp, #112]
   39400:	mov	w1, #0x5                   	// #5
   39404:	str	w1, [x0]
   39408:	ldr	x0, [sp, #64]
   3940c:	bl	38910 <__sanitizer_set_death_callback@@Base+0x2c70>
   39410:	mov	x1, x0
   39414:	ldr	x0, [sp, #112]
   39418:	str	x1, [x0, #8]
   3941c:	mov	w0, #0x1                   	// #1
   39420:	b	39658 <__sanitizer_set_death_callback@@Base+0x39b8>
   39424:	ldr	x0, [sp, #112]
   39428:	mov	w1, #0x5                   	// #5
   3942c:	str	w1, [x0]
   39430:	ldr	x0, [sp, #64]
   39434:	bl	38c7c <__sanitizer_set_death_callback@@Base+0x2fdc>
   39438:	mov	x1, x0
   3943c:	ldr	x0, [sp, #112]
   39440:	str	x1, [x0, #8]
   39444:	mov	w0, #0x1                   	// #1
   39448:	b	39658 <__sanitizer_set_death_callback@@Base+0x39b8>
   3944c:	ldr	x0, [sp, #64]
   39450:	bl	38c7c <__sanitizer_set_death_callback@@Base+0x2fdc>
   39454:	str	x0, [sp, #96]
   39458:	ldr	x0, [sp, #96]
   3945c:	mov	w8, w0
   39460:	ldr	x0, [sp, #112]
   39464:	str	x0, [sp]
   39468:	ldr	x7, [sp, #32]
   3946c:	ldr	x6, [sp, #40]
   39470:	ldr	x5, [sp, #48]
   39474:	ldr	w4, [sp, #56]
   39478:	ldr	w3, [sp, #60]
   3947c:	ldr	w2, [sp, #72]
   39480:	ldr	x1, [sp, #64]
   39484:	mov	w0, w8
   39488:	bl	38fac <__sanitizer_set_death_callback@@Base+0x330c>
   3948c:	b	39658 <__sanitizer_set_death_callback@@Base+0x39b8>
   39490:	ldr	x0, [sp, #112]
   39494:	mov	w1, #0x8                   	// #8
   39498:	str	w1, [x0]
   3949c:	ldr	w1, [sp, #72]
   394a0:	ldr	x0, [sp, #64]
   394a4:	bl	38ac8 <__sanitizer_set_death_callback@@Base+0x2e28>
   394a8:	mov	x1, x0
   394ac:	ldr	x0, [sp, #112]
   394b0:	str	x1, [x0, #8]
   394b4:	mov	w0, #0x1                   	// #1
   394b8:	b	39658 <__sanitizer_set_death_callback@@Base+0x39b8>
   394bc:	ldr	x0, [sp, #112]
   394c0:	mov	w1, #0xb                   	// #11
   394c4:	str	w1, [x0]
   394c8:	ldr	x0, [sp, #64]
   394cc:	bl	38c7c <__sanitizer_set_death_callback@@Base+0x2fdc>
   394d0:	mov	x1, x0
   394d4:	ldr	x0, [sp, #64]
   394d8:	bl	38628 <__sanitizer_set_death_callback@@Base+0x2988>
   394dc:	b	39658 <__sanitizer_set_death_callback@@Base+0x39b8>
   394e0:	ldr	x0, [sp, #112]
   394e4:	mov	w1, #0x2                   	// #2
   394e8:	str	w1, [x0]
   394ec:	ldr	x0, [sp, #112]
   394f0:	mov	x1, #0x1                   	// #1
   394f4:	str	x1, [x0, #8]
   394f8:	mov	w0, #0x1                   	// #1
   394fc:	b	39658 <__sanitizer_set_death_callback@@Base+0x39b8>
   39500:	ldr	x0, [sp, #112]
   39504:	mov	w1, #0x9                   	// #9
   39508:	str	w1, [x0]
   3950c:	ldr	x0, [sp, #64]
   39510:	bl	38910 <__sanitizer_set_death_callback@@Base+0x2c70>
   39514:	mov	x1, x0
   39518:	ldr	x0, [sp, #112]
   3951c:	str	x1, [x0, #8]
   39520:	mov	w0, #0x1                   	// #1
   39524:	b	39658 <__sanitizer_set_death_callback@@Base+0x39b8>
   39528:	ldr	x0, [sp, #112]
   3952c:	mov	w1, #0x8                   	// #8
   39530:	str	w1, [x0]
   39534:	ldr	x0, [sp, #64]
   39538:	bl	38c7c <__sanitizer_set_death_callback@@Base+0x2fdc>
   3953c:	mov	x1, x0
   39540:	ldr	x0, [sp, #112]
   39544:	str	x1, [x0, #8]
   39548:	mov	w0, #0x1                   	// #1
   3954c:	b	39658 <__sanitizer_set_death_callback@@Base+0x39b8>
   39550:	ldr	x0, [sp, #112]
   39554:	mov	w1, #0x8                   	// #8
   39558:	str	w1, [x0]
   3955c:	ldr	x0, [sp, #64]
   39560:	bl	38c7c <__sanitizer_set_death_callback@@Base+0x2fdc>
   39564:	mov	x1, x0
   39568:	ldr	x0, [sp, #112]
   3956c:	str	x1, [x0, #8]
   39570:	mov	w0, #0x1                   	// #1
   39574:	b	39658 <__sanitizer_set_death_callback@@Base+0x39b8>
   39578:	ldr	w1, [sp, #72]
   3957c:	ldr	x0, [sp, #64]
   39580:	bl	38ac8 <__sanitizer_set_death_callback@@Base+0x2e28>
   39584:	mov	x1, x0
   39588:	ldr	x0, [sp, #112]
   3958c:	str	x1, [x0, #8]
   39590:	ldr	x0, [sp, #32]
   39594:	cmp	x0, #0x0
   39598:	b.ne	395ac <__sanitizer_set_death_callback@@Base+0x390c>  // b.any
   3959c:	ldr	x0, [sp, #112]
   395a0:	str	wzr, [x0]
   395a4:	mov	w0, #0x1                   	// #1
   395a8:	b	39658 <__sanitizer_set_death_callback@@Base+0x39b8>
   395ac:	ldr	x0, [sp, #112]
   395b0:	mov	w1, #0x7                   	// #7
   395b4:	str	w1, [x0]
   395b8:	mov	w0, #0x1                   	// #1
   395bc:	b	39658 <__sanitizer_set_death_callback@@Base+0x39b8>
   395c0:	ldr	w1, [sp, #72]
   395c4:	ldr	x0, [sp, #64]
   395c8:	bl	38ac8 <__sanitizer_set_death_callback@@Base+0x2e28>
   395cc:	str	x0, [sp, #104]
   395d0:	ldr	x0, [sp, #32]
   395d4:	cmp	x0, #0x0
   395d8:	b.ne	395ec <__sanitizer_set_death_callback@@Base+0x394c>  // b.any
   395dc:	ldr	x0, [sp, #112]
   395e0:	str	wzr, [x0]
   395e4:	mov	w0, #0x1                   	// #1
   395e8:	b	39658 <__sanitizer_set_death_callback@@Base+0x39b8>
   395ec:	ldr	x0, [sp, #32]
   395f0:	ldr	x0, [x0, #112]
   395f4:	ldr	x1, [sp, #104]
   395f8:	cmp	x1, x0
   395fc:	b.cc	39618 <__sanitizer_set_death_callback@@Base+0x3978>  // b.lo, b.ul, b.last
   39600:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   39604:	add	x1, x0, #0xda8
   39608:	ldr	x0, [sp, #64]
   3960c:	bl	3854c <__sanitizer_set_death_callback@@Base+0x28ac>
   39610:	mov	w0, #0x0                   	// #0
   39614:	b	39658 <__sanitizer_set_death_callback@@Base+0x39b8>
   39618:	ldr	x0, [sp, #112]
   3961c:	mov	w1, #0x4                   	// #4
   39620:	str	w1, [x0]
   39624:	ldr	x0, [sp, #32]
   39628:	ldr	x1, [x0, #104]
   3962c:	ldr	x0, [sp, #104]
   39630:	add	x1, x1, x0
   39634:	ldr	x0, [sp, #112]
   39638:	str	x1, [x0, #8]
   3963c:	mov	w0, #0x1                   	// #1
   39640:	b	39658 <__sanitizer_set_death_callback@@Base+0x39b8>
   39644:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   39648:	add	x1, x0, #0xdd0
   3964c:	ldr	x0, [sp, #64]
   39650:	bl	3854c <__sanitizer_set_death_callback@@Base+0x28ac>
   39654:	mov	w0, #0x0                   	// #0
   39658:	ldp	x29, x30, [sp, #16]
   3965c:	add	sp, sp, #0x70
   39660:	ret
   39664:	sub	sp, sp, #0x30
   39668:	str	x0, [sp, #8]
   3966c:	str	x1, [sp]
   39670:	ldr	x0, [sp, #8]
   39674:	str	x0, [sp, #40]
   39678:	ldr	x0, [sp]
   3967c:	ldr	x0, [x0]
   39680:	str	x0, [sp, #32]
   39684:	ldr	x0, [sp, #40]
   39688:	ldr	x0, [x0]
   3968c:	str	x0, [sp, #24]
   39690:	ldr	x0, [sp, #32]
   39694:	ldr	x0, [x0, #24]
   39698:	ldr	x1, [sp, #24]
   3969c:	cmp	x1, x0
   396a0:	b.cs	396ac <__sanitizer_set_death_callback@@Base+0x3a0c>  // b.hs, b.nlast
   396a4:	mov	w0, #0xffffffff            	// #-1
   396a8:	b	396cc <__sanitizer_set_death_callback@@Base+0x3a2c>
   396ac:	ldr	x0, [sp, #32]
   396b0:	ldr	x0, [x0, #32]
   396b4:	ldr	x1, [sp, #24]
   396b8:	cmp	x1, x0
   396bc:	b.cc	396c8 <__sanitizer_set_death_callback@@Base+0x3a28>  // b.lo, b.ul, b.last
   396c0:	mov	w0, #0x1                   	// #1
   396c4:	b	396cc <__sanitizer_set_death_callback@@Base+0x3a2c>
   396c8:	mov	w0, #0x0                   	// #0
   396cc:	add	sp, sp, #0x30
   396d0:	ret
   396d4:	stp	x29, x30, [sp, #-64]!
   396d8:	mov	x29, sp
   396dc:	str	x0, [sp, #40]
   396e0:	str	x1, [sp, #32]
   396e4:	str	x2, [sp, #24]
   396e8:	add	x5, sp, #0x18
   396ec:	adrp	x0, 39000 <__sanitizer_set_death_callback@@Base+0x3360>
   396f0:	add	x4, x0, #0x664
   396f4:	mov	x3, #0x8                   	// #8
   396f8:	ldr	x2, [sp, #32]
   396fc:	ldr	x1, [sp, #40]
   39700:	mov	x0, x5
   39704:	bl	6e40 <bsearch@plt>
   39708:	str	x0, [sp, #56]
   3970c:	ldr	x0, [sp, #56]
   39710:	cmp	x0, #0x0
   39714:	b.eq	39724 <__sanitizer_set_death_callback@@Base+0x3a84>  // b.none
   39718:	ldr	x0, [sp, #56]
   3971c:	ldr	x0, [x0]
   39720:	b	39728 <__sanitizer_set_death_callback@@Base+0x3a88>
   39724:	mov	x0, #0x0                   	// #0
   39728:	ldp	x29, x30, [sp], #64
   3972c:	ret
   39730:	stp	x29, x30, [sp, #-48]!
   39734:	mov	x29, sp
   39738:	str	x0, [sp, #24]
   3973c:	str	x1, [sp, #16]
   39740:	ldr	x0, [sp, #24]
   39744:	str	x0, [sp, #40]
   39748:	ldr	x0, [sp, #16]
   3974c:	str	x0, [sp, #32]
   39750:	ldr	x0, [sp, #40]
   39754:	ldr	x1, [x0]
   39758:	ldr	x0, [sp, #32]
   3975c:	ldr	x0, [x0]
   39760:	cmp	x1, x0
   39764:	b.cs	39770 <__sanitizer_set_death_callback@@Base+0x3ad0>  // b.hs, b.nlast
   39768:	mov	w0, #0xffffffff            	// #-1
   3976c:	b	397f4 <__sanitizer_set_death_callback@@Base+0x3b54>
   39770:	ldr	x0, [sp, #40]
   39774:	ldr	x1, [x0]
   39778:	ldr	x0, [sp, #32]
   3977c:	ldr	x0, [x0]
   39780:	cmp	x1, x0
   39784:	b.ls	39790 <__sanitizer_set_death_callback@@Base+0x3af0>  // b.plast
   39788:	mov	w0, #0x1                   	// #1
   3978c:	b	397f4 <__sanitizer_set_death_callback@@Base+0x3b54>
   39790:	ldr	x0, [sp, #40]
   39794:	ldr	x1, [x0, #8]
   39798:	ldr	x0, [sp, #32]
   3979c:	ldr	x0, [x0, #8]
   397a0:	cmp	x1, x0
   397a4:	b.cs	397b0 <__sanitizer_set_death_callback@@Base+0x3b10>  // b.hs, b.nlast
   397a8:	mov	w0, #0x1                   	// #1
   397ac:	b	397f4 <__sanitizer_set_death_callback@@Base+0x3b54>
   397b0:	ldr	x0, [sp, #40]
   397b4:	ldr	x1, [x0, #8]
   397b8:	ldr	x0, [sp, #32]
   397bc:	ldr	x0, [x0, #8]
   397c0:	cmp	x1, x0
   397c4:	b.ls	397d0 <__sanitizer_set_death_callback@@Base+0x3b30>  // b.plast
   397c8:	mov	w0, #0xffffffff            	// #-1
   397cc:	b	397f4 <__sanitizer_set_death_callback@@Base+0x3b54>
   397d0:	ldr	x0, [sp, #40]
   397d4:	ldr	x0, [x0, #16]
   397d8:	ldr	x2, [x0]
   397dc:	ldr	x0, [sp, #32]
   397e0:	ldr	x0, [x0, #16]
   397e4:	ldr	x0, [x0]
   397e8:	mov	x1, x0
   397ec:	mov	x0, x2
   397f0:	bl	6d70 <__asan_internal_strcmp@plt>
   397f4:	ldp	x29, x30, [sp], #48
   397f8:	ret
   397fc:	sub	sp, sp, #0x30
   39800:	str	x0, [sp, #8]
   39804:	str	x1, [sp]
   39808:	ldr	x0, [sp, #8]
   3980c:	str	x0, [sp, #40]
   39810:	ldr	x0, [sp]
   39814:	str	x0, [sp, #32]
   39818:	ldr	x0, [sp, #40]
   3981c:	ldr	x0, [x0]
   39820:	str	x0, [sp, #24]
   39824:	ldr	x0, [sp, #32]
   39828:	ldr	x0, [x0]
   3982c:	ldr	x1, [sp, #24]
   39830:	cmp	x1, x0
   39834:	b.cs	39840 <__sanitizer_set_death_callback@@Base+0x3ba0>  // b.hs, b.nlast
   39838:	mov	w0, #0xffffffff            	// #-1
   3983c:	b	39860 <__sanitizer_set_death_callback@@Base+0x3bc0>
   39840:	ldr	x0, [sp, #32]
   39844:	ldr	x0, [x0, #8]
   39848:	ldr	x1, [sp, #24]
   3984c:	cmp	x1, x0
   39850:	b.cc	3985c <__sanitizer_set_death_callback@@Base+0x3bbc>  // b.lo, b.ul, b.last
   39854:	mov	w0, #0x1                   	// #1
   39858:	b	39860 <__sanitizer_set_death_callback@@Base+0x3bc0>
   3985c:	mov	w0, #0x0                   	// #0
   39860:	add	sp, sp, #0x30
   39864:	ret
   39868:	stp	x29, x30, [sp, #-96]!
   3986c:	mov	x29, sp
   39870:	str	x19, [sp, #16]
   39874:	str	x0, [sp, #72]
   39878:	str	x1, [sp, #64]
   3987c:	mov	x19, x2
   39880:	str	x3, [sp, #56]
   39884:	str	x4, [sp, #48]
   39888:	str	x5, [sp, #40]
   3988c:	ldr	x1, [x19]
   39890:	ldr	x0, [sp, #64]
   39894:	add	x0, x1, x0
   39898:	str	x0, [x19]
   3989c:	ldr	x1, [x19, #8]
   398a0:	ldr	x0, [sp, #64]
   398a4:	add	x0, x1, x0
   398a8:	str	x0, [x19, #8]
   398ac:	ldr	x0, [sp, #40]
   398b0:	ldr	x0, [x0, #24]
   398b4:	cmp	x0, #0x0
   398b8:	b.eq	39950 <__sanitizer_set_death_callback@@Base+0x3cb0>  // b.none
   398bc:	ldr	x0, [sp, #40]
   398c0:	ldr	x2, [x0]
   398c4:	ldr	x0, [sp, #40]
   398c8:	ldr	x1, [x0, #24]
   398cc:	mov	x0, x1
   398d0:	lsl	x0, x0, #1
   398d4:	add	x0, x0, x1
   398d8:	lsl	x0, x0, #3
   398dc:	sub	x0, x0, #0x18
   398e0:	add	x0, x2, x0
   398e4:	str	x0, [sp, #88]
   398e8:	ldr	x1, [x19]
   398ec:	ldr	x0, [sp, #88]
   398f0:	ldr	x0, [x0, #8]
   398f4:	cmp	x1, x0
   398f8:	b.eq	39914 <__sanitizer_set_death_callback@@Base+0x3c74>  // b.none
   398fc:	ldr	x1, [x19]
   39900:	ldr	x0, [sp, #88]
   39904:	ldr	x0, [x0, #8]
   39908:	add	x0, x0, #0x1
   3990c:	cmp	x1, x0
   39910:	b.ne	39950 <__sanitizer_set_death_callback@@Base+0x3cb0>  // b.any
   39914:	ldr	x1, [x19, #16]
   39918:	ldr	x0, [sp, #88]
   3991c:	ldr	x0, [x0, #16]
   39920:	cmp	x1, x0
   39924:	b.ne	39950 <__sanitizer_set_death_callback@@Base+0x3cb0>  // b.any
   39928:	ldr	x1, [x19, #8]
   3992c:	ldr	x0, [sp, #88]
   39930:	ldr	x0, [x0, #8]
   39934:	cmp	x1, x0
   39938:	b.ls	39948 <__sanitizer_set_death_callback@@Base+0x3ca8>  // b.plast
   3993c:	ldr	x1, [x19, #8]
   39940:	ldr	x0, [sp, #88]
   39944:	str	x1, [x0, #8]
   39948:	mov	w0, #0x1                   	// #1
   3994c:	b	399b8 <__sanitizer_set_death_callback@@Base+0x3d18>
   39950:	ldr	x0, [sp, #40]
   39954:	mov	x4, x0
   39958:	ldr	x3, [sp, #48]
   3995c:	ldr	x2, [sp, #56]
   39960:	mov	x1, #0x18                  	// #24
   39964:	ldr	x0, [sp, #72]
   39968:	bl	6a90 <__asan_backtrace_vector_grow@plt>
   3996c:	str	x0, [sp, #88]
   39970:	ldr	x0, [sp, #88]
   39974:	cmp	x0, #0x0
   39978:	b.ne	39984 <__sanitizer_set_death_callback@@Base+0x3ce4>  // b.any
   3997c:	mov	w0, #0x0                   	// #0
   39980:	b	399b8 <__sanitizer_set_death_callback@@Base+0x3d18>
   39984:	ldr	x0, [sp, #88]
   39988:	mov	x2, x0
   3998c:	mov	x3, x19
   39990:	ldp	x0, x1, [x3]
   39994:	stp	x0, x1, [x2]
   39998:	ldr	x0, [x3, #16]
   3999c:	str	x0, [x2, #16]
   399a0:	ldr	x0, [sp, #40]
   399a4:	ldr	x0, [x0, #24]
   399a8:	add	x1, x0, #0x1
   399ac:	ldr	x0, [sp, #40]
   399b0:	str	x1, [x0, #24]
   399b4:	mov	w0, #0x1                   	// #1
   399b8:	ldr	x19, [sp, #16]
   399bc:	ldp	x29, x30, [sp], #96
   399c0:	ret
   399c4:	sub	sp, sp, #0x20
   399c8:	str	x0, [sp, #8]
   399cc:	str	x1, [sp]
   399d0:	ldr	x0, [sp, #8]
   399d4:	str	x0, [sp, #24]
   399d8:	ldr	x0, [sp]
   399dc:	str	x0, [sp, #16]
   399e0:	ldr	x0, [sp, #24]
   399e4:	ldr	x1, [x0]
   399e8:	ldr	x0, [sp, #16]
   399ec:	ldr	x0, [x0]
   399f0:	cmp	x1, x0
   399f4:	b.cs	39a00 <__sanitizer_set_death_callback@@Base+0x3d60>  // b.hs, b.nlast
   399f8:	mov	w0, #0xffffffff            	// #-1
   399fc:	b	39ab4 <__sanitizer_set_death_callback@@Base+0x3e14>
   39a00:	ldr	x0, [sp, #24]
   39a04:	ldr	x1, [x0]
   39a08:	ldr	x0, [sp, #16]
   39a0c:	ldr	x0, [x0]
   39a10:	cmp	x1, x0
   39a14:	b.ls	39a20 <__sanitizer_set_death_callback@@Base+0x3d80>  // b.plast
   39a18:	mov	w0, #0x1                   	// #1
   39a1c:	b	39ab4 <__sanitizer_set_death_callback@@Base+0x3e14>
   39a20:	ldr	x0, [sp, #24]
   39a24:	ldr	x1, [x0, #8]
   39a28:	ldr	x0, [sp, #16]
   39a2c:	ldr	x0, [x0, #8]
   39a30:	cmp	x1, x0
   39a34:	b.cs	39a40 <__sanitizer_set_death_callback@@Base+0x3da0>  // b.hs, b.nlast
   39a38:	mov	w0, #0x1                   	// #1
   39a3c:	b	39ab4 <__sanitizer_set_death_callback@@Base+0x3e14>
   39a40:	ldr	x0, [sp, #24]
   39a44:	ldr	x1, [x0, #8]
   39a48:	ldr	x0, [sp, #16]
   39a4c:	ldr	x0, [x0, #8]
   39a50:	cmp	x1, x0
   39a54:	b.ls	39a60 <__sanitizer_set_death_callback@@Base+0x3dc0>  // b.plast
   39a58:	mov	w0, #0xffffffff            	// #-1
   39a5c:	b	39ab4 <__sanitizer_set_death_callback@@Base+0x3e14>
   39a60:	ldr	x0, [sp, #24]
   39a64:	ldr	x0, [x0, #16]
   39a68:	ldr	x1, [x0, #56]
   39a6c:	ldr	x0, [sp, #16]
   39a70:	ldr	x0, [x0, #16]
   39a74:	ldr	x0, [x0, #56]
   39a78:	cmp	x1, x0
   39a7c:	b.ge	39a88 <__sanitizer_set_death_callback@@Base+0x3de8>  // b.tcont
   39a80:	mov	w0, #0xffffffff            	// #-1
   39a84:	b	39ab4 <__sanitizer_set_death_callback@@Base+0x3e14>
   39a88:	ldr	x0, [sp, #24]
   39a8c:	ldr	x0, [x0, #16]
   39a90:	ldr	x1, [x0, #56]
   39a94:	ldr	x0, [sp, #16]
   39a98:	ldr	x0, [x0, #16]
   39a9c:	ldr	x0, [x0, #56]
   39aa0:	cmp	x1, x0
   39aa4:	b.le	39ab0 <__sanitizer_set_death_callback@@Base+0x3e10>
   39aa8:	mov	w0, #0x1                   	// #1
   39aac:	b	39ab4 <__sanitizer_set_death_callback@@Base+0x3e14>
   39ab0:	mov	w0, #0x0                   	// #0
   39ab4:	add	sp, sp, #0x20
   39ab8:	ret
   39abc:	sub	sp, sp, #0x30
   39ac0:	str	x0, [sp, #8]
   39ac4:	str	x1, [sp]
   39ac8:	ldr	x0, [sp, #8]
   39acc:	str	x0, [sp, #40]
   39ad0:	ldr	x0, [sp]
   39ad4:	str	x0, [sp, #32]
   39ad8:	ldr	x0, [sp, #40]
   39adc:	ldr	x0, [x0]
   39ae0:	str	x0, [sp, #24]
   39ae4:	ldr	x0, [sp, #32]
   39ae8:	ldr	x0, [x0]
   39aec:	ldr	x1, [sp, #24]
   39af0:	cmp	x1, x0
   39af4:	b.cs	39b00 <__sanitizer_set_death_callback@@Base+0x3e60>  // b.hs, b.nlast
   39af8:	mov	w0, #0xffffffff            	// #-1
   39afc:	b	39b20 <__sanitizer_set_death_callback@@Base+0x3e80>
   39b00:	ldr	x0, [sp, #32]
   39b04:	ldr	x0, [x0, #8]
   39b08:	ldr	x1, [sp, #24]
   39b0c:	cmp	x1, x0
   39b10:	b.cc	39b1c <__sanitizer_set_death_callback@@Base+0x3e7c>  // b.lo, b.ul, b.last
   39b14:	mov	w0, #0x1                   	// #1
   39b18:	b	39b20 <__sanitizer_set_death_callback@@Base+0x3e80>
   39b1c:	mov	w0, #0x0                   	// #0
   39b20:	add	sp, sp, #0x30
   39b24:	ret
   39b28:	sub	sp, sp, #0x20
   39b2c:	str	x0, [sp, #8]
   39b30:	str	x1, [sp]
   39b34:	ldr	x0, [sp, #8]
   39b38:	str	x0, [sp, #24]
   39b3c:	ldr	x0, [sp]
   39b40:	str	x0, [sp, #16]
   39b44:	ldr	x0, [sp, #24]
   39b48:	ldr	x1, [x0]
   39b4c:	ldr	x0, [sp, #16]
   39b50:	ldr	x0, [x0]
   39b54:	cmp	x1, x0
   39b58:	b.cs	39b64 <__sanitizer_set_death_callback@@Base+0x3ec4>  // b.hs, b.nlast
   39b5c:	mov	w0, #0xffffffff            	// #-1
   39b60:	b	39bc8 <__sanitizer_set_death_callback@@Base+0x3f28>
   39b64:	ldr	x0, [sp, #24]
   39b68:	ldr	x1, [x0]
   39b6c:	ldr	x0, [sp, #16]
   39b70:	ldr	x0, [x0]
   39b74:	cmp	x1, x0
   39b78:	b.ls	39b84 <__sanitizer_set_death_callback@@Base+0x3ee4>  // b.plast
   39b7c:	mov	w0, #0x1                   	// #1
   39b80:	b	39bc8 <__sanitizer_set_death_callback@@Base+0x3f28>
   39b84:	ldr	x0, [sp, #24]
   39b88:	ldr	w1, [x0, #20]
   39b8c:	ldr	x0, [sp, #16]
   39b90:	ldr	w0, [x0, #20]
   39b94:	cmp	w1, w0
   39b98:	b.ge	39ba4 <__sanitizer_set_death_callback@@Base+0x3f04>  // b.tcont
   39b9c:	mov	w0, #0xffffffff            	// #-1
   39ba0:	b	39bc8 <__sanitizer_set_death_callback@@Base+0x3f28>
   39ba4:	ldr	x0, [sp, #24]
   39ba8:	ldr	w1, [x0, #20]
   39bac:	ldr	x0, [sp, #16]
   39bb0:	ldr	w0, [x0, #20]
   39bb4:	cmp	w1, w0
   39bb8:	b.le	39bc4 <__sanitizer_set_death_callback@@Base+0x3f24>
   39bbc:	mov	w0, #0x1                   	// #1
   39bc0:	b	39bc8 <__sanitizer_set_death_callback@@Base+0x3f28>
   39bc4:	mov	w0, #0x0                   	// #0
   39bc8:	add	sp, sp, #0x20
   39bcc:	ret
   39bd0:	sub	sp, sp, #0x30
   39bd4:	str	x0, [sp, #8]
   39bd8:	str	x1, [sp]
   39bdc:	ldr	x0, [sp, #8]
   39be0:	str	x0, [sp, #40]
   39be4:	ldr	x0, [sp]
   39be8:	str	x0, [sp, #32]
   39bec:	ldr	x0, [sp, #40]
   39bf0:	ldr	x0, [x0]
   39bf4:	str	x0, [sp, #24]
   39bf8:	ldr	x0, [sp, #32]
   39bfc:	ldr	x0, [x0]
   39c00:	ldr	x1, [sp, #24]
   39c04:	cmp	x1, x0
   39c08:	b.cs	39c14 <__sanitizer_set_death_callback@@Base+0x3f74>  // b.hs, b.nlast
   39c0c:	mov	w0, #0xffffffff            	// #-1
   39c10:	b	39c38 <__sanitizer_set_death_callback@@Base+0x3f98>
   39c14:	ldr	x0, [sp, #32]
   39c18:	add	x0, x0, #0x18
   39c1c:	ldr	x0, [x0]
   39c20:	ldr	x1, [sp, #24]
   39c24:	cmp	x1, x0
   39c28:	b.cc	39c34 <__sanitizer_set_death_callback@@Base+0x3f94>  // b.lo, b.ul, b.last
   39c2c:	mov	w0, #0x1                   	// #1
   39c30:	b	39c38 <__sanitizer_set_death_callback@@Base+0x3f98>
   39c34:	mov	w0, #0x0                   	// #0
   39c38:	add	sp, sp, #0x30
   39c3c:	ret
   39c40:	sub	sp, sp, #0x20
   39c44:	str	x0, [sp, #8]
   39c48:	str	x1, [sp]
   39c4c:	ldr	x0, [sp, #8]
   39c50:	str	x0, [sp, #24]
   39c54:	ldr	x0, [sp]
   39c58:	str	x0, [sp, #16]
   39c5c:	ldr	x0, [sp, #24]
   39c60:	ldr	x1, [x0]
   39c64:	ldr	x0, [sp, #16]
   39c68:	ldr	x0, [x0]
   39c6c:	cmp	x1, x0
   39c70:	b.cs	39c7c <__sanitizer_set_death_callback@@Base+0x3fdc>  // b.hs, b.nlast
   39c74:	mov	w0, #0xffffffff            	// #-1
   39c78:	b	39ca0 <__sanitizer_set_death_callback@@Base+0x4000>
   39c7c:	ldr	x0, [sp, #24]
   39c80:	ldr	x1, [x0]
   39c84:	ldr	x0, [sp, #16]
   39c88:	ldr	x0, [x0]
   39c8c:	cmp	x1, x0
   39c90:	b.ls	39c9c <__sanitizer_set_death_callback@@Base+0x3ffc>  // b.plast
   39c94:	mov	w0, #0x1                   	// #1
   39c98:	b	39ca0 <__sanitizer_set_death_callback@@Base+0x4000>
   39c9c:	mov	w0, #0x0                   	// #0
   39ca0:	add	sp, sp, #0x20
   39ca4:	ret
   39ca8:	stp	x29, x30, [sp, #-288]!
   39cac:	mov	x29, sp
   39cb0:	str	x0, [sp, #72]
   39cb4:	str	x1, [sp, #64]
   39cb8:	str	x2, [sp, #56]
   39cbc:	str	x3, [sp, #48]
   39cc0:	str	w4, [sp, #44]
   39cc4:	str	x5, [sp, #32]
   39cc8:	str	x6, [sp, #24]
   39ccc:	str	x7, [sp, #16]
   39cd0:	ldr	x0, [sp, #16]
   39cd4:	str	xzr, [x0]
   39cd8:	ldr	x0, [sp, #16]
   39cdc:	str	xzr, [x0, #8]
   39ce0:	ldr	x1, [sp, #64]
   39ce4:	ldr	x0, [sp, #48]
   39ce8:	cmp	x1, x0
   39cec:	b.cc	39d10 <__sanitizer_set_death_callback@@Base+0x4070>  // b.lo, b.ul, b.last
   39cf0:	ldr	x3, [sp, #32]
   39cf4:	mov	w2, #0x0                   	// #0
   39cf8:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   39cfc:	add	x1, x0, #0xe68
   39d00:	ldr	x0, [sp, #24]
   39d04:	blr	x3
   39d08:	mov	w0, #0x0                   	// #0
   39d0c:	b	3a080 <__sanitizer_set_death_callback@@Base+0x43e0>
   39d10:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   39d14:	add	x0, x0, #0xe88
   39d18:	str	x0, [sp, #176]
   39d1c:	ldr	x0, [sp, #56]
   39d20:	str	x0, [sp, #184]
   39d24:	ldr	x1, [sp, #56]
   39d28:	ldr	x0, [sp, #64]
   39d2c:	add	x0, x1, x0
   39d30:	str	x0, [sp, #192]
   39d34:	ldr	x1, [sp, #48]
   39d38:	ldr	x0, [sp, #64]
   39d3c:	sub	x0, x1, x0
   39d40:	str	x0, [sp, #200]
   39d44:	ldr	w0, [sp, #44]
   39d48:	str	w0, [sp, #208]
   39d4c:	ldr	x0, [sp, #32]
   39d50:	str	x0, [sp, #216]
   39d54:	ldr	x0, [sp, #24]
   39d58:	str	x0, [sp, #224]
   39d5c:	str	wzr, [sp, #232]
   39d60:	add	x0, sp, #0x70
   39d64:	add	x1, sp, #0xb0
   39d68:	ldp	x2, x3, [x1]
   39d6c:	stp	x2, x3, [x0]
   39d70:	ldp	x2, x3, [x1, #16]
   39d74:	stp	x2, x3, [x0, #16]
   39d78:	ldp	x2, x3, [x1, #32]
   39d7c:	stp	x2, x3, [x0, #32]
   39d80:	ldp	x2, x3, [x1, #48]
   39d84:	stp	x2, x3, [x0, #48]
   39d88:	str	xzr, [sp, #280]
   39d8c:	b	39de4 <__sanitizer_set_death_callback@@Base+0x4144>
   39d90:	ldr	w0, [sp, #168]
   39d94:	cmp	w0, #0x0
   39d98:	b.eq	39da4 <__sanitizer_set_death_callback@@Base+0x4104>  // b.none
   39d9c:	mov	w0, #0x0                   	// #0
   39da0:	b	3a080 <__sanitizer_set_death_callback@@Base+0x43e0>
   39da4:	ldr	x0, [sp, #280]
   39da8:	add	x0, x0, #0x1
   39dac:	str	x0, [sp, #280]
   39db0:	add	x0, sp, #0x70
   39db4:	bl	38c7c <__sanitizer_set_death_callback@@Base+0x2fdc>
   39db8:	add	x0, sp, #0x70
   39dbc:	bl	386f4 <__sanitizer_set_death_callback@@Base+0x2a54>
   39dc0:	b	39dcc <__sanitizer_set_death_callback@@Base+0x412c>
   39dc4:	add	x0, sp, #0x70
   39dc8:	bl	38c7c <__sanitizer_set_death_callback@@Base+0x2fdc>
   39dcc:	add	x0, sp, #0x70
   39dd0:	bl	38c7c <__sanitizer_set_death_callback@@Base+0x2fdc>
   39dd4:	cmp	x0, #0x0
   39dd8:	b.ne	39dc4 <__sanitizer_set_death_callback@@Base+0x4124>  // b.any
   39ddc:	add	x0, sp, #0x70
   39de0:	bl	38c7c <__sanitizer_set_death_callback@@Base+0x2fdc>
   39de4:	add	x0, sp, #0x70
   39de8:	bl	38c7c <__sanitizer_set_death_callback@@Base+0x2fdc>
   39dec:	cmp	x0, #0x0
   39df0:	b.ne	39d90 <__sanitizer_set_death_callback@@Base+0x40f0>  // b.any
   39df4:	ldr	w0, [sp, #168]
   39df8:	cmp	w0, #0x0
   39dfc:	b.eq	39e08 <__sanitizer_set_death_callback@@Base+0x4168>  // b.none
   39e00:	mov	w0, #0x0                   	// #0
   39e04:	b	3a080 <__sanitizer_set_death_callback@@Base+0x43e0>
   39e08:	ldr	x0, [sp, #280]
   39e0c:	cmp	x0, #0x0
   39e10:	b.ne	39e1c <__sanitizer_set_death_callback@@Base+0x417c>  // b.any
   39e14:	mov	w0, #0x1                   	// #1
   39e18:	b	3a080 <__sanitizer_set_death_callback@@Base+0x43e0>
   39e1c:	ldr	x0, [sp, #280]
   39e20:	lsl	x0, x0, #5
   39e24:	ldr	x3, [sp, #24]
   39e28:	ldr	x2, [sp, #32]
   39e2c:	mov	x1, x0
   39e30:	ldr	x0, [sp, #72]
   39e34:	bl	6b10 <__asan_backtrace_alloc@plt>
   39e38:	mov	x1, x0
   39e3c:	ldr	x0, [sp, #16]
   39e40:	str	x1, [x0, #8]
   39e44:	ldr	x0, [sp, #16]
   39e48:	ldr	x0, [x0, #8]
   39e4c:	cmp	x0, #0x0
   39e50:	b.ne	39e5c <__sanitizer_set_death_callback@@Base+0x41bc>  // b.any
   39e54:	mov	w0, #0x0                   	// #0
   39e58:	b	3a080 <__sanitizer_set_death_callback@@Base+0x43e0>
   39e5c:	ldr	x0, [sp, #16]
   39e60:	ldr	x1, [sp, #280]
   39e64:	str	x1, [x0]
   39e68:	ldr	x0, [sp, #16]
   39e6c:	ldr	x3, [x0, #8]
   39e70:	ldr	x0, [sp, #280]
   39e74:	lsl	x0, x0, #5
   39e78:	mov	x2, x0
   39e7c:	mov	w1, #0x0                   	// #0
   39e80:	mov	x0, x3
   39e84:	bl	6ab0 <__asan_internal_memset@plt>
   39e88:	str	xzr, [sp, #280]
   39e8c:	ldr	w0, [sp, #232]
   39e90:	cmp	w0, #0x0
   39e94:	b.ne	3a05c <__sanitizer_set_death_callback@@Base+0x43bc>  // b.any
   39e98:	add	x0, sp, #0xb0
   39e9c:	bl	38c7c <__sanitizer_set_death_callback@@Base+0x2fdc>
   39ea0:	str	x0, [sp, #256]
   39ea4:	ldr	x0, [sp, #256]
   39ea8:	cmp	x0, #0x0
   39eac:	b.ne	39edc <__sanitizer_set_death_callback@@Base+0x423c>  // b.any
   39eb0:	ldr	x0, [sp, #16]
   39eb4:	ldr	x4, [x0, #8]
   39eb8:	ldr	x0, [sp, #16]
   39ebc:	ldr	x1, [x0]
   39ec0:	adrp	x0, 39000 <__sanitizer_set_death_callback@@Base+0x3360>
   39ec4:	add	x3, x0, #0xc40
   39ec8:	mov	x2, #0x20                  	// #32
   39ecc:	mov	x0, x4
   39ed0:	bl	68f0 <__asan_backtrace_qsort@plt>
   39ed4:	mov	w0, #0x1                   	// #1
   39ed8:	b	3a080 <__sanitizer_set_death_callback@@Base+0x43e0>
   39edc:	ldr	x0, [sp, #256]
   39ee0:	str	x0, [sp, #80]
   39ee4:	add	x0, sp, #0xb0
   39ee8:	bl	38c7c <__sanitizer_set_death_callback@@Base+0x2fdc>
   39eec:	str	w0, [sp, #88]
   39ef0:	add	x0, sp, #0xb0
   39ef4:	bl	386f4 <__sanitizer_set_death_callback@@Base+0x2a54>
   39ef8:	and	w0, w0, #0xff
   39efc:	str	w0, [sp, #92]
   39f00:	add	x0, sp, #0x70
   39f04:	add	x1, sp, #0xb0
   39f08:	ldp	x2, x3, [x1]
   39f0c:	stp	x2, x3, [x0]
   39f10:	ldp	x2, x3, [x1, #16]
   39f14:	stp	x2, x3, [x0, #16]
   39f18:	ldp	x2, x3, [x1, #32]
   39f1c:	stp	x2, x3, [x0, #32]
   39f20:	ldp	x2, x3, [x1, #48]
   39f24:	stp	x2, x3, [x0, #48]
   39f28:	str	xzr, [sp, #272]
   39f2c:	b	39f44 <__sanitizer_set_death_callback@@Base+0x42a4>
   39f30:	ldr	x0, [sp, #272]
   39f34:	add	x0, x0, #0x1
   39f38:	str	x0, [sp, #272]
   39f3c:	add	x0, sp, #0x70
   39f40:	bl	38c7c <__sanitizer_set_death_callback@@Base+0x2fdc>
   39f44:	add	x0, sp, #0x70
   39f48:	bl	38c7c <__sanitizer_set_death_callback@@Base+0x2fdc>
   39f4c:	cmp	x0, #0x0
   39f50:	b.ne	39f30 <__sanitizer_set_death_callback@@Base+0x4290>  // b.any
   39f54:	ldr	x0, [sp, #272]
   39f58:	cmp	x0, #0x0
   39f5c:	b.ne	39f78 <__sanitizer_set_death_callback@@Base+0x42d8>  // b.any
   39f60:	str	xzr, [sp, #264]
   39f64:	add	x0, sp, #0xb0
   39f68:	bl	38c7c <__sanitizer_set_death_callback@@Base+0x2fdc>
   39f6c:	add	x0, sp, #0xb0
   39f70:	bl	38c7c <__sanitizer_set_death_callback@@Base+0x2fdc>
   39f74:	b	3a010 <__sanitizer_set_death_callback@@Base+0x4370>
   39f78:	ldr	x0, [sp, #272]
   39f7c:	lsl	x0, x0, #3
   39f80:	ldr	x3, [sp, #24]
   39f84:	ldr	x2, [sp, #32]
   39f88:	mov	x1, x0
   39f8c:	ldr	x0, [sp, #72]
   39f90:	bl	6b10 <__asan_backtrace_alloc@plt>
   39f94:	str	x0, [sp, #264]
   39f98:	ldr	x0, [sp, #264]
   39f9c:	cmp	x0, #0x0
   39fa0:	b.eq	3a064 <__sanitizer_set_death_callback@@Base+0x43c4>  // b.none
   39fa4:	str	xzr, [sp, #272]
   39fa8:	add	x0, sp, #0xb0
   39fac:	bl	38c7c <__sanitizer_set_death_callback@@Base+0x2fdc>
   39fb0:	str	x0, [sp, #248]
   39fb4:	add	x0, sp, #0xb0
   39fb8:	bl	38c7c <__sanitizer_set_death_callback@@Base+0x2fdc>
   39fbc:	str	x0, [sp, #240]
   39fc0:	ldr	x0, [sp, #248]
   39fc4:	cmp	x0, #0x0
   39fc8:	b.eq	3a00c <__sanitizer_set_death_callback@@Base+0x436c>  // b.none
   39fcc:	ldr	x0, [sp, #272]
   39fd0:	lsl	x0, x0, #3
   39fd4:	ldr	x1, [sp, #264]
   39fd8:	add	x0, x1, x0
   39fdc:	ldr	x1, [sp, #248]
   39fe0:	str	w1, [x0]
   39fe4:	ldr	x0, [sp, #272]
   39fe8:	lsl	x0, x0, #3
   39fec:	ldr	x1, [sp, #264]
   39ff0:	add	x0, x1, x0
   39ff4:	ldr	x1, [sp, #240]
   39ff8:	str	w1, [x0, #4]
   39ffc:	ldr	x0, [sp, #272]
   3a000:	add	x0, x0, #0x1
   3a004:	str	x0, [sp, #272]
   3a008:	b	39fa8 <__sanitizer_set_death_callback@@Base+0x4308>
   3a00c:	nop
   3a010:	ldr	x0, [sp, #272]
   3a014:	str	x0, [sp, #96]
   3a018:	ldr	x0, [sp, #264]
   3a01c:	str	x0, [sp, #104]
   3a020:	ldr	x0, [sp, #16]
   3a024:	ldr	x1, [x0, #8]
   3a028:	ldr	x0, [sp, #280]
   3a02c:	lsl	x0, x0, #5
   3a030:	add	x0, x1, x0
   3a034:	mov	x3, x0
   3a038:	add	x2, sp, #0x50
   3a03c:	ldp	x0, x1, [x2]
   3a040:	stp	x0, x1, [x3]
   3a044:	ldp	x0, x1, [x2, #16]
   3a048:	stp	x0, x1, [x3, #16]
   3a04c:	ldr	x0, [sp, #280]
   3a050:	add	x0, x0, #0x1
   3a054:	str	x0, [sp, #280]
   3a058:	b	39e8c <__sanitizer_set_death_callback@@Base+0x41ec>
   3a05c:	nop
   3a060:	b	3a068 <__sanitizer_set_death_callback@@Base+0x43c8>
   3a064:	nop
   3a068:	ldr	x3, [sp, #24]
   3a06c:	ldr	x2, [sp, #32]
   3a070:	ldr	x1, [sp, #16]
   3a074:	ldr	x0, [sp, #72]
   3a078:	bl	38edc <__sanitizer_set_death_callback@@Base+0x323c>
   3a07c:	mov	w0, #0x0                   	// #0
   3a080:	ldp	x29, x30, [sp], #288
   3a084:	ret
   3a088:	stp	x29, x30, [sp, #-96]!
   3a08c:	mov	x29, sp
   3a090:	str	x0, [sp, #40]
   3a094:	str	x1, [sp, #32]
   3a098:	str	x2, [sp, #24]
   3a09c:	str	x3, [sp, #16]
   3a0a0:	ldr	x0, [sp, #32]
   3a0a4:	sub	x1, x0, #0x1
   3a0a8:	ldr	x0, [sp, #40]
   3a0ac:	ldr	x0, [x0]
   3a0b0:	cmp	x1, x0
   3a0b4:	b.cs	3a0fc <__sanitizer_set_death_callback@@Base+0x445c>  // b.hs, b.nlast
   3a0b8:	ldr	x0, [sp, #40]
   3a0bc:	ldr	x1, [x0, #8]
   3a0c0:	ldr	x0, [sp, #32]
   3a0c4:	lsl	x0, x0, #5
   3a0c8:	sub	x0, x0, #0x20
   3a0cc:	add	x0, x1, x0
   3a0d0:	ldr	x0, [x0]
   3a0d4:	ldr	x1, [sp, #32]
   3a0d8:	cmp	x1, x0
   3a0dc:	b.ne	3a0fc <__sanitizer_set_death_callback@@Base+0x445c>  // b.any
   3a0e0:	ldr	x0, [sp, #40]
   3a0e4:	ldr	x1, [x0, #8]
   3a0e8:	ldr	x0, [sp, #32]
   3a0ec:	lsl	x0, x0, #5
   3a0f0:	sub	x0, x0, #0x20
   3a0f4:	add	x0, x1, x0
   3a0f8:	b	3a170 <__sanitizer_set_death_callback@@Base+0x44d0>
   3a0fc:	add	x0, sp, #0x38
   3a100:	mov	x2, #0x20                  	// #32
   3a104:	mov	w1, #0x0                   	// #0
   3a108:	bl	6ab0 <__asan_internal_memset@plt>
   3a10c:	ldr	x0, [sp, #32]
   3a110:	str	x0, [sp, #56]
   3a114:	ldr	x0, [sp, #40]
   3a118:	ldr	x1, [x0, #8]
   3a11c:	ldr	x0, [sp, #40]
   3a120:	ldr	x2, [x0]
   3a124:	add	x5, sp, #0x38
   3a128:	adrp	x0, 39000 <__sanitizer_set_death_callback@@Base+0x3360>
   3a12c:	add	x4, x0, #0xc40
   3a130:	mov	x3, #0x20                  	// #32
   3a134:	mov	x0, x5
   3a138:	bl	6e40 <bsearch@plt>
   3a13c:	str	x0, [sp, #88]
   3a140:	ldr	x0, [sp, #88]
   3a144:	cmp	x0, #0x0
   3a148:	b.ne	3a16c <__sanitizer_set_death_callback@@Base+0x44cc>  // b.any
   3a14c:	ldr	x3, [sp, #24]
   3a150:	mov	w2, #0x0                   	// #0
   3a154:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   3a158:	add	x1, x0, #0xe98
   3a15c:	ldr	x0, [sp, #16]
   3a160:	blr	x3
   3a164:	mov	x0, #0x0                   	// #0
   3a168:	b	3a170 <__sanitizer_set_death_callback@@Base+0x44d0>
   3a16c:	ldr	x0, [sp, #88]
   3a170:	ldp	x29, x30, [sp], #96
   3a174:	ret
   3a178:	stp	x29, x30, [sp, #-224]!
   3a17c:	mov	x29, sp
   3a180:	str	x0, [sp, #104]
   3a184:	str	x1, [sp, #96]
   3a188:	str	x2, [sp, #88]
   3a18c:	str	x3, [sp, #80]
   3a190:	str	x4, [sp, #72]
   3a194:	str	w5, [sp, #68]
   3a198:	str	x6, [sp, #56]
   3a19c:	str	x7, [sp, #48]
   3a1a0:	ldr	x1, [sp, #80]
   3a1a4:	ldr	x0, [sp, #48]
   3a1a8:	cmp	x1, x0
   3a1ac:	b.cc	3a1d0 <__sanitizer_set_death_callback@@Base+0x4530>  // b.lo, b.ul, b.last
   3a1b0:	ldr	x3, [sp, #224]
   3a1b4:	mov	w2, #0x0                   	// #0
   3a1b8:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   3a1bc:	add	x1, x0, #0xeb8
   3a1c0:	ldr	x0, [sp, #232]
   3a1c4:	blr	x3
   3a1c8:	mov	w0, #0x0                   	// #0
   3a1cc:	b	3a328 <__sanitizer_set_death_callback@@Base+0x4688>
   3a1d0:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   3a1d4:	add	x0, x0, #0xed8
   3a1d8:	str	x0, [sp, #144]
   3a1dc:	ldr	x0, [sp, #56]
   3a1e0:	str	x0, [sp, #152]
   3a1e4:	ldr	x1, [sp, #56]
   3a1e8:	ldr	x0, [sp, #80]
   3a1ec:	add	x0, x1, x0
   3a1f0:	str	x0, [sp, #160]
   3a1f4:	ldr	x1, [sp, #48]
   3a1f8:	ldr	x0, [sp, #80]
   3a1fc:	sub	x0, x1, x0
   3a200:	str	x0, [sp, #168]
   3a204:	ldr	w0, [sp, #68]
   3a208:	str	w0, [sp, #176]
   3a20c:	ldr	x0, [sp, #224]
   3a210:	str	x0, [sp, #184]
   3a214:	ldr	x0, [sp, #232]
   3a218:	str	x0, [sp, #192]
   3a21c:	str	wzr, [sp, #200]
   3a220:	ldr	w0, [sp, #200]
   3a224:	cmp	w0, #0x0
   3a228:	b.eq	3a234 <__sanitizer_set_death_callback@@Base+0x4594>  // b.none
   3a22c:	mov	w0, #0x0                   	// #0
   3a230:	b	3a328 <__sanitizer_set_death_callback@@Base+0x4688>
   3a234:	ldr	x0, [sp, #88]
   3a238:	ldr	w1, [x0, #48]
   3a23c:	add	x0, sp, #0x90
   3a240:	bl	38b04 <__sanitizer_set_death_callback@@Base+0x2e64>
   3a244:	str	x0, [sp, #216]
   3a248:	ldr	x0, [sp, #88]
   3a24c:	ldr	w1, [x0, #48]
   3a250:	add	x0, sp, #0x90
   3a254:	bl	38b04 <__sanitizer_set_death_callback@@Base+0x2e64>
   3a258:	str	x0, [sp, #208]
   3a25c:	ldr	x0, [sp, #216]
   3a260:	cmp	x0, #0x0
   3a264:	b.ne	3a274 <__sanitizer_set_death_callback@@Base+0x45d4>  // b.any
   3a268:	ldr	x0, [sp, #208]
   3a26c:	cmp	x0, #0x0
   3a270:	b.eq	3a30c <__sanitizer_set_death_callback@@Base+0x466c>  // b.none
   3a274:	ldr	x0, [sp, #88]
   3a278:	ldr	w0, [x0, #48]
   3a27c:	mov	w1, w0
   3a280:	ldr	x0, [sp, #216]
   3a284:	bl	38bc0 <__sanitizer_set_death_callback@@Base+0x2f20>
   3a288:	cmp	w0, #0x0
   3a28c:	b.eq	3a29c <__sanitizer_set_death_callback@@Base+0x45fc>  // b.none
   3a290:	ldr	x0, [sp, #208]
   3a294:	str	x0, [sp, #72]
   3a298:	b	3a220 <__sanitizer_set_death_callback@@Base+0x4580>
   3a29c:	ldr	x1, [sp, #216]
   3a2a0:	ldr	x0, [sp, #72]
   3a2a4:	add	x0, x1, x0
   3a2a8:	str	x0, [sp, #120]
   3a2ac:	ldr	x1, [sp, #208]
   3a2b0:	ldr	x0, [sp, #72]
   3a2b4:	add	x0, x1, x0
   3a2b8:	str	x0, [sp, #128]
   3a2bc:	ldr	x0, [sp, #88]
   3a2c0:	str	x0, [sp, #136]
   3a2c4:	add	x2, sp, #0x10
   3a2c8:	add	x3, sp, #0x78
   3a2cc:	ldp	x0, x1, [x3]
   3a2d0:	stp	x0, x1, [x2]
   3a2d4:	ldr	x0, [x3, #16]
   3a2d8:	str	x0, [x2, #16]
   3a2dc:	add	x0, sp, #0x10
   3a2e0:	ldr	x5, [sp, #240]
   3a2e4:	ldr	x4, [sp, #232]
   3a2e8:	ldr	x3, [sp, #224]
   3a2ec:	mov	x2, x0
   3a2f0:	ldr	x1, [sp, #96]
   3a2f4:	ldr	x0, [sp, #104]
   3a2f8:	bl	39868 <__sanitizer_set_death_callback@@Base+0x3bc8>
   3a2fc:	cmp	w0, #0x0
   3a300:	b.ne	3a220 <__sanitizer_set_death_callback@@Base+0x4580>  // b.any
   3a304:	mov	w0, #0x0                   	// #0
   3a308:	b	3a328 <__sanitizer_set_death_callback@@Base+0x4688>
   3a30c:	nop
   3a310:	ldr	w0, [sp, #200]
   3a314:	cmp	w0, #0x0
   3a318:	b.eq	3a324 <__sanitizer_set_death_callback@@Base+0x4684>  // b.none
   3a31c:	mov	w0, #0x0                   	// #0
   3a320:	b	3a328 <__sanitizer_set_death_callback@@Base+0x4688>
   3a324:	mov	w0, #0x1                   	// #1
   3a328:	ldp	x29, x30, [sp], #224
   3a32c:	ret
   3a330:	sub	sp, sp, #0x110
   3a334:	stp	x29, x30, [sp, #48]
   3a338:	add	x29, sp, #0x30
   3a33c:	str	x0, [sp, #152]
   3a340:	str	x1, [sp, #144]
   3a344:	str	x2, [sp, #136]
   3a348:	str	x3, [sp, #128]
   3a34c:	str	x4, [sp, #120]
   3a350:	str	x5, [sp, #112]
   3a354:	str	x6, [sp, #104]
   3a358:	str	w7, [sp, #100]
   3a35c:	b	3a7fc <__sanitizer_set_death_callback@@Base+0x4b5c>
   3a360:	ldr	x0, [sp, #136]
   3a364:	bl	38c7c <__sanitizer_set_death_callback@@Base+0x2fdc>
   3a368:	str	x0, [sp, #208]
   3a36c:	ldr	x0, [sp, #208]
   3a370:	cmp	x0, #0x0
   3a374:	b.ne	3a380 <__sanitizer_set_death_callback@@Base+0x46e0>  // b.any
   3a378:	mov	w0, #0x1                   	// #1
   3a37c:	b	3a810 <__sanitizer_set_death_callback@@Base+0x4b70>
   3a380:	ldr	x0, [sp, #296]
   3a384:	add	x0, x0, #0x58
   3a388:	ldr	x3, [sp, #288]
   3a38c:	ldr	x2, [sp, #280]
   3a390:	ldr	x1, [sp, #208]
   3a394:	bl	3a088 <__sanitizer_set_death_callback@@Base+0x43e8>
   3a398:	str	x0, [sp, #200]
   3a39c:	ldr	x0, [sp, #200]
   3a3a0:	cmp	x0, #0x0
   3a3a4:	b.ne	3a3b0 <__sanitizer_set_death_callback@@Base+0x4710>  // b.any
   3a3a8:	mov	w0, #0x0                   	// #0
   3a3ac:	b	3a810 <__sanitizer_set_death_callback@@Base+0x4b70>
   3a3b0:	ldr	x0, [sp, #312]
   3a3b4:	cmp	x0, #0x0
   3a3b8:	b.eq	3a3cc <__sanitizer_set_death_callback@@Base+0x472c>  // b.none
   3a3bc:	ldr	x0, [sp, #200]
   3a3c0:	ldr	w1, [x0, #8]
   3a3c4:	ldr	x0, [sp, #312]
   3a3c8:	str	w1, [x0]
   3a3cc:	str	xzr, [sp, #264]
   3a3d0:	str	wzr, [sp, #260]
   3a3d4:	str	xzr, [sp, #248]
   3a3d8:	str	wzr, [sp, #244]
   3a3dc:	str	wzr, [sp, #240]
   3a3e0:	str	xzr, [sp, #232]
   3a3e4:	str	wzr, [sp, #228]
   3a3e8:	str	xzr, [sp, #216]
   3a3ec:	b	3a630 <__sanitizer_set_death_callback@@Base+0x4990>
   3a3f0:	ldr	x0, [sp, #200]
   3a3f4:	ldr	x1, [x0, #24]
   3a3f8:	ldr	x0, [sp, #216]
   3a3fc:	lsl	x0, x0, #3
   3a400:	add	x0, x1, x0
   3a404:	ldr	w8, [x0, #4]
   3a408:	ldr	x0, [sp, #296]
   3a40c:	ldr	w1, [x0, #44]
   3a410:	ldr	x0, [sp, #296]
   3a414:	ldr	w2, [x0, #40]
   3a418:	ldr	x0, [sp, #296]
   3a41c:	ldr	w3, [x0, #48]
   3a420:	add	x0, sp, #0xb8
   3a424:	str	x0, [sp]
   3a428:	ldr	x7, [sp, #272]
   3a42c:	ldr	x6, [sp, #120]
   3a430:	ldr	x5, [sp, #128]
   3a434:	mov	w4, w3
   3a438:	mov	w3, w2
   3a43c:	mov	w2, w1
   3a440:	ldr	x1, [sp, #136]
   3a444:	mov	w0, w8
   3a448:	bl	38fac <__sanitizer_set_death_callback@@Base+0x330c>
   3a44c:	cmp	w0, #0x0
   3a450:	b.ne	3a45c <__sanitizer_set_death_callback@@Base+0x47bc>  // b.any
   3a454:	mov	w0, #0x0                   	// #0
   3a458:	b	3a810 <__sanitizer_set_death_callback@@Base+0x4b70>
   3a45c:	ldr	x0, [sp, #200]
   3a460:	ldr	x1, [x0, #24]
   3a464:	ldr	x0, [sp, #216]
   3a468:	lsl	x0, x0, #3
   3a46c:	add	x0, x1, x0
   3a470:	ldr	w0, [x0]
   3a474:	cmp	w0, #0x55
   3a478:	b.eq	3a530 <__sanitizer_set_death_callback@@Base+0x4890>  // b.none
   3a47c:	cmp	w0, #0x55
   3a480:	b.hi	3a5f0 <__sanitizer_set_death_callback@@Base+0x4950>  // b.pmore
   3a484:	cmp	w0, #0x1b
   3a488:	b.eq	3a5c4 <__sanitizer_set_death_callback@@Base+0x4924>  // b.none
   3a48c:	cmp	w0, #0x1b
   3a490:	b.hi	3a5f0 <__sanitizer_set_death_callback@@Base+0x4950>  // b.pmore
   3a494:	cmp	w0, #0x12
   3a498:	b.eq	3a4e8 <__sanitizer_set_death_callback@@Base+0x4848>  // b.none
   3a49c:	cmp	w0, #0x12
   3a4a0:	b.hi	3a5f0 <__sanitizer_set_death_callback@@Base+0x4950>  // b.pmore
   3a4a4:	cmp	w0, #0x11
   3a4a8:	b.eq	3a4c8 <__sanitizer_set_death_callback@@Base+0x4828>  // b.none
   3a4ac:	cmp	w0, #0x11
   3a4b0:	b.hi	3a5f0 <__sanitizer_set_death_callback@@Base+0x4950>  // b.pmore
   3a4b4:	cmp	w0, #0x3
   3a4b8:	b.eq	3a598 <__sanitizer_set_death_callback@@Base+0x48f8>  // b.none
   3a4bc:	cmp	w0, #0x10
   3a4c0:	b.eq	3a55c <__sanitizer_set_death_callback@@Base+0x48bc>  // b.none
   3a4c4:	b	3a5f0 <__sanitizer_set_death_callback@@Base+0x4950>
   3a4c8:	ldr	w0, [sp, #184]
   3a4cc:	cmp	w0, #0x1
   3a4d0:	b.ne	3a5f8 <__sanitizer_set_death_callback@@Base+0x4958>  // b.any
   3a4d4:	ldr	x0, [sp, #192]
   3a4d8:	str	x0, [sp, #264]
   3a4dc:	mov	w0, #0x1                   	// #1
   3a4e0:	str	w0, [sp, #260]
   3a4e4:	b	3a5f8 <__sanitizer_set_death_callback@@Base+0x4958>
   3a4e8:	ldr	w0, [sp, #184]
   3a4ec:	cmp	w0, #0x1
   3a4f0:	b.ne	3a508 <__sanitizer_set_death_callback@@Base+0x4868>  // b.any
   3a4f4:	ldr	x0, [sp, #192]
   3a4f8:	str	x0, [sp, #248]
   3a4fc:	mov	w0, #0x1                   	// #1
   3a500:	str	w0, [sp, #244]
   3a504:	b	3a600 <__sanitizer_set_death_callback@@Base+0x4960>
   3a508:	ldr	w0, [sp, #184]
   3a50c:	cmp	w0, #0x2
   3a510:	b.ne	3a600 <__sanitizer_set_death_callback@@Base+0x4960>  // b.any
   3a514:	ldr	x0, [sp, #192]
   3a518:	str	x0, [sp, #248]
   3a51c:	mov	w0, #0x1                   	// #1
   3a520:	str	w0, [sp, #244]
   3a524:	mov	w0, #0x1                   	// #1
   3a528:	str	w0, [sp, #240]
   3a52c:	b	3a600 <__sanitizer_set_death_callback@@Base+0x4960>
   3a530:	ldr	w0, [sp, #184]
   3a534:	cmp	w0, #0x2
   3a538:	b.eq	3a548 <__sanitizer_set_death_callback@@Base+0x48a8>  // b.none
   3a53c:	ldr	w0, [sp, #184]
   3a540:	cmp	w0, #0x8
   3a544:	b.ne	3a608 <__sanitizer_set_death_callback@@Base+0x4968>  // b.any
   3a548:	ldr	x0, [sp, #192]
   3a54c:	str	x0, [sp, #232]
   3a550:	mov	w0, #0x1                   	// #1
   3a554:	str	w0, [sp, #228]
   3a558:	b	3a608 <__sanitizer_set_death_callback@@Base+0x4968>
   3a55c:	ldr	x0, [sp, #200]
   3a560:	ldr	w0, [x0, #8]
   3a564:	cmp	w0, #0x11
   3a568:	b.ne	3a610 <__sanitizer_set_death_callback@@Base+0x4970>  // b.any
   3a56c:	ldr	w0, [sp, #184]
   3a570:	cmp	w0, #0x2
   3a574:	b.eq	3a584 <__sanitizer_set_death_callback@@Base+0x48e4>  // b.none
   3a578:	ldr	w0, [sp, #184]
   3a57c:	cmp	w0, #0x8
   3a580:	b.ne	3a610 <__sanitizer_set_death_callback@@Base+0x4970>  // b.any
   3a584:	ldr	x0, [sp, #192]
   3a588:	mov	x1, x0
   3a58c:	ldr	x0, [sp, #296]
   3a590:	str	x1, [x0, #56]
   3a594:	b	3a610 <__sanitizer_set_death_callback@@Base+0x4970>
   3a598:	ldr	x0, [sp, #200]
   3a59c:	ldr	w0, [x0, #8]
   3a5a0:	cmp	w0, #0x11
   3a5a4:	b.ne	3a618 <__sanitizer_set_death_callback@@Base+0x4978>  // b.any
   3a5a8:	ldr	w0, [sp, #184]
   3a5ac:	cmp	w0, #0x4
   3a5b0:	b.ne	3a618 <__sanitizer_set_death_callback@@Base+0x4978>  // b.any
   3a5b4:	ldr	x1, [sp, #192]
   3a5b8:	ldr	x0, [sp, #296]
   3a5bc:	str	x1, [x0, #64]
   3a5c0:	b	3a618 <__sanitizer_set_death_callback@@Base+0x4978>
   3a5c4:	ldr	x0, [sp, #200]
   3a5c8:	ldr	w0, [x0, #8]
   3a5cc:	cmp	w0, #0x11
   3a5d0:	b.ne	3a620 <__sanitizer_set_death_callback@@Base+0x4980>  // b.any
   3a5d4:	ldr	w0, [sp, #184]
   3a5d8:	cmp	w0, #0x4
   3a5dc:	b.ne	3a620 <__sanitizer_set_death_callback@@Base+0x4980>  // b.any
   3a5e0:	ldr	x1, [sp, #192]
   3a5e4:	ldr	x0, [sp, #296]
   3a5e8:	str	x1, [x0, #72]
   3a5ec:	b	3a620 <__sanitizer_set_death_callback@@Base+0x4980>
   3a5f0:	nop
   3a5f4:	b	3a624 <__sanitizer_set_death_callback@@Base+0x4984>
   3a5f8:	nop
   3a5fc:	b	3a624 <__sanitizer_set_death_callback@@Base+0x4984>
   3a600:	nop
   3a604:	b	3a624 <__sanitizer_set_death_callback@@Base+0x4984>
   3a608:	nop
   3a60c:	b	3a624 <__sanitizer_set_death_callback@@Base+0x4984>
   3a610:	nop
   3a614:	b	3a624 <__sanitizer_set_death_callback@@Base+0x4984>
   3a618:	nop
   3a61c:	b	3a624 <__sanitizer_set_death_callback@@Base+0x4984>
   3a620:	nop
   3a624:	ldr	x0, [sp, #216]
   3a628:	add	x0, x0, #0x1
   3a62c:	str	x0, [sp, #216]
   3a630:	ldr	x0, [sp, #200]
   3a634:	ldr	x0, [x0, #16]
   3a638:	ldr	x1, [sp, #216]
   3a63c:	cmp	x1, x0
   3a640:	b.cc	3a3f0 <__sanitizer_set_death_callback@@Base+0x4750>  // b.lo, b.ul, b.last
   3a644:	ldr	x0, [sp, #200]
   3a648:	ldr	w0, [x0, #8]
   3a64c:	cmp	w0, #0x11
   3a650:	b.eq	3a664 <__sanitizer_set_death_callback@@Base+0x49c4>  // b.none
   3a654:	ldr	x0, [sp, #200]
   3a658:	ldr	w0, [x0, #8]
   3a65c:	cmp	w0, #0x2e
   3a660:	b.ne	3a78c <__sanitizer_set_death_callback@@Base+0x4aec>  // b.any
   3a664:	ldr	w0, [sp, #228]
   3a668:	cmp	w0, #0x0
   3a66c:	b.eq	3a6bc <__sanitizer_set_death_callback@@Base+0x4a1c>  // b.none
   3a670:	ldr	x0, [sp, #304]
   3a674:	str	x0, [sp, #16]
   3a678:	ldr	x0, [sp, #288]
   3a67c:	str	x0, [sp, #8]
   3a680:	ldr	x0, [sp, #280]
   3a684:	str	x0, [sp]
   3a688:	ldr	x7, [sp, #104]
   3a68c:	ldr	x6, [sp, #112]
   3a690:	ldr	w5, [sp, #100]
   3a694:	ldr	x4, [sp, #264]
   3a698:	ldr	x3, [sp, #232]
   3a69c:	ldr	x2, [sp, #296]
   3a6a0:	ldr	x1, [sp, #144]
   3a6a4:	ldr	x0, [sp, #152]
   3a6a8:	bl	3a178 <__sanitizer_set_death_callback@@Base+0x44d8>
   3a6ac:	cmp	w0, #0x0
   3a6b0:	b.ne	3a750 <__sanitizer_set_death_callback@@Base+0x4ab0>  // b.any
   3a6b4:	mov	w0, #0x0                   	// #0
   3a6b8:	b	3a810 <__sanitizer_set_death_callback@@Base+0x4b70>
   3a6bc:	ldr	w0, [sp, #260]
   3a6c0:	cmp	w0, #0x0
   3a6c4:	b.eq	3a750 <__sanitizer_set_death_callback@@Base+0x4ab0>  // b.none
   3a6c8:	ldr	w0, [sp, #244]
   3a6cc:	cmp	w0, #0x0
   3a6d0:	b.eq	3a750 <__sanitizer_set_death_callback@@Base+0x4ab0>  // b.none
   3a6d4:	ldr	w0, [sp, #240]
   3a6d8:	cmp	w0, #0x0
   3a6dc:	b.eq	3a6f0 <__sanitizer_set_death_callback@@Base+0x4a50>  // b.none
   3a6e0:	ldr	x1, [sp, #248]
   3a6e4:	ldr	x0, [sp, #264]
   3a6e8:	add	x0, x1, x0
   3a6ec:	str	x0, [sp, #248]
   3a6f0:	ldr	x0, [sp, #264]
   3a6f4:	str	x0, [sp, #160]
   3a6f8:	ldr	x0, [sp, #248]
   3a6fc:	str	x0, [sp, #168]
   3a700:	ldr	x0, [sp, #296]
   3a704:	str	x0, [sp, #176]
   3a708:	add	x2, sp, #0x40
   3a70c:	add	x3, sp, #0xa0
   3a710:	ldp	x0, x1, [x3]
   3a714:	stp	x0, x1, [x2]
   3a718:	ldr	x0, [x3, #16]
   3a71c:	str	x0, [x2, #16]
   3a720:	add	x0, sp, #0x40
   3a724:	ldr	x5, [sp, #304]
   3a728:	ldr	x4, [sp, #288]
   3a72c:	ldr	x3, [sp, #280]
   3a730:	mov	x2, x0
   3a734:	ldr	x1, [sp, #144]
   3a738:	ldr	x0, [sp, #152]
   3a73c:	bl	39868 <__sanitizer_set_death_callback@@Base+0x3bc8>
   3a740:	cmp	w0, #0x0
   3a744:	b.ne	3a750 <__sanitizer_set_death_callback@@Base+0x4ab0>  // b.any
   3a748:	mov	w0, #0x0                   	// #0
   3a74c:	b	3a810 <__sanitizer_set_death_callback@@Base+0x4b70>
   3a750:	ldr	x0, [sp, #200]
   3a754:	ldr	w0, [x0, #8]
   3a758:	cmp	w0, #0x11
   3a75c:	b.ne	3a78c <__sanitizer_set_death_callback@@Base+0x4aec>  // b.any
   3a760:	ldr	w0, [sp, #228]
   3a764:	cmp	w0, #0x0
   3a768:	b.ne	3a784 <__sanitizer_set_death_callback@@Base+0x4ae4>  // b.any
   3a76c:	ldr	w0, [sp, #260]
   3a770:	cmp	w0, #0x0
   3a774:	b.eq	3a78c <__sanitizer_set_death_callback@@Base+0x4aec>  // b.none
   3a778:	ldr	w0, [sp, #244]
   3a77c:	cmp	w0, #0x0
   3a780:	b.eq	3a78c <__sanitizer_set_death_callback@@Base+0x4aec>  // b.none
   3a784:	mov	w0, #0x1                   	// #1
   3a788:	b	3a810 <__sanitizer_set_death_callback@@Base+0x4b70>
   3a78c:	ldr	x0, [sp, #200]
   3a790:	ldr	w0, [x0, #12]
   3a794:	cmp	w0, #0x0
   3a798:	b.eq	3a7fc <__sanitizer_set_death_callback@@Base+0x4b5c>  // b.none
   3a79c:	str	xzr, [sp, #40]
   3a7a0:	ldr	x0, [sp, #304]
   3a7a4:	str	x0, [sp, #32]
   3a7a8:	ldr	x0, [sp, #296]
   3a7ac:	str	x0, [sp, #24]
   3a7b0:	ldr	x0, [sp, #288]
   3a7b4:	str	x0, [sp, #16]
   3a7b8:	ldr	x0, [sp, #280]
   3a7bc:	str	x0, [sp, #8]
   3a7c0:	ldr	x0, [sp, #272]
   3a7c4:	str	x0, [sp]
   3a7c8:	ldr	w7, [sp, #100]
   3a7cc:	ldr	x6, [sp, #104]
   3a7d0:	ldr	x5, [sp, #112]
   3a7d4:	ldr	x4, [sp, #120]
   3a7d8:	ldr	x3, [sp, #128]
   3a7dc:	ldr	x2, [sp, #136]
   3a7e0:	ldr	x1, [sp, #144]
   3a7e4:	ldr	x0, [sp, #152]
   3a7e8:	bl	3a330 <__sanitizer_set_death_callback@@Base+0x4690>
   3a7ec:	cmp	w0, #0x0
   3a7f0:	b.ne	3a7fc <__sanitizer_set_death_callback@@Base+0x4b5c>  // b.any
   3a7f4:	mov	w0, #0x0                   	// #0
   3a7f8:	b	3a810 <__sanitizer_set_death_callback@@Base+0x4b70>
   3a7fc:	ldr	x0, [sp, #136]
   3a800:	ldr	x0, [x0, #24]
   3a804:	cmp	x0, #0x0
   3a808:	b.ne	3a360 <__sanitizer_set_death_callback@@Base+0x46c0>  // b.any
   3a80c:	mov	w0, #0x1                   	// #1
   3a810:	ldp	x29, x30, [sp, #48]
   3a814:	add	sp, sp, #0x110
   3a818:	ret
   3a81c:	sub	sp, sp, #0x170
   3a820:	stp	x29, x30, [sp, #48]
   3a824:	add	x29, sp, #0x30
   3a828:	str	x0, [sp, #120]
   3a82c:	str	x1, [sp, #112]
   3a830:	str	x2, [sp, #104]
   3a834:	str	x3, [sp, #96]
   3a838:	str	x4, [sp, #88]
   3a83c:	str	x5, [sp, #80]
   3a840:	str	x6, [sp, #72]
   3a844:	str	x7, [sp, #64]
   3a848:	str	xzr, [sp, #344]
   3a84c:	ldr	x0, [sp, #416]
   3a850:	mov	x2, #0x18                  	// #24
   3a854:	mov	w1, #0x0                   	// #0
   3a858:	bl	6ab0 <__asan_internal_memset@plt>
   3a85c:	ldr	x0, [sp, #424]
   3a860:	mov	x2, #0x18                  	// #24
   3a864:	mov	w1, #0x0                   	// #0
   3a868:	bl	6ab0 <__asan_internal_memset@plt>
   3a86c:	ldr	x0, [sp, #416]
   3a870:	str	xzr, [x0, #24]
   3a874:	ldr	x0, [sp, #424]
   3a878:	str	xzr, [x0, #24]
   3a87c:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   3a880:	add	x0, x0, #0xee8
   3a884:	str	x0, [sp, #224]
   3a888:	ldr	x0, [sp, #104]
   3a88c:	str	x0, [sp, #232]
   3a890:	ldr	x0, [sp, #104]
   3a894:	str	x0, [sp, #240]
   3a898:	ldr	x0, [sp, #96]
   3a89c:	str	x0, [sp, #248]
   3a8a0:	ldr	w0, [sp, #384]
   3a8a4:	str	w0, [sp, #256]
   3a8a8:	ldr	x0, [sp, #400]
   3a8ac:	str	x0, [sp, #264]
   3a8b0:	ldr	x0, [sp, #408]
   3a8b4:	str	x0, [sp, #272]
   3a8b8:	str	wzr, [sp, #280]
   3a8bc:	add	x0, sp, #0xc8
   3a8c0:	mov	x2, #0x18                  	// #24
   3a8c4:	mov	w1, #0x0                   	// #0
   3a8c8:	bl	6ab0 <__asan_internal_memset@plt>
   3a8cc:	str	xzr, [sp, #360]
   3a8d0:	b	3ab90 <__sanitizer_set_death_callback@@Base+0x4ef0>
   3a8d4:	ldr	w0, [sp, #280]
   3a8d8:	cmp	w0, #0x0
   3a8dc:	b.ne	3abd8 <__sanitizer_set_death_callback@@Base+0x4f38>  // b.any
   3a8e0:	ldr	x0, [sp, #240]
   3a8e4:	str	x0, [sp, #336]
   3a8e8:	add	x1, sp, #0xc4
   3a8ec:	add	x0, sp, #0xe0
   3a8f0:	bl	38e7c <__sanitizer_set_death_callback@@Base+0x31dc>
   3a8f4:	str	x0, [sp, #328]
   3a8f8:	add	x0, sp, #0x80
   3a8fc:	add	x1, sp, #0xe0
   3a900:	ldp	x2, x3, [x1]
   3a904:	stp	x2, x3, [x0]
   3a908:	ldp	x2, x3, [x1, #16]
   3a90c:	stp	x2, x3, [x0, #16]
   3a910:	ldp	x2, x3, [x1, #32]
   3a914:	stp	x2, x3, [x0, #32]
   3a918:	ldp	x2, x3, [x1, #48]
   3a91c:	stp	x2, x3, [x0, #48]
   3a920:	ldr	x0, [sp, #328]
   3a924:	str	x0, [sp, #152]
   3a928:	add	x0, sp, #0xe0
   3a92c:	ldr	x1, [sp, #328]
   3a930:	bl	38628 <__sanitizer_set_death_callback@@Base+0x2988>
   3a934:	cmp	w0, #0x0
   3a938:	b.eq	3abe0 <__sanitizer_set_death_callback@@Base+0x4f40>  // b.none
   3a93c:	add	x0, sp, #0x80
   3a940:	bl	38790 <__sanitizer_set_death_callback@@Base+0x2af0>
   3a944:	and	w0, w0, #0xffff
   3a948:	str	w0, [sp, #324]
   3a94c:	ldr	w0, [sp, #324]
   3a950:	cmp	w0, #0x1
   3a954:	b.le	3a964 <__sanitizer_set_death_callback@@Base+0x4cc4>
   3a958:	ldr	w0, [sp, #324]
   3a95c:	cmp	w0, #0x4
   3a960:	b.le	3a97c <__sanitizer_set_death_callback@@Base+0x4cdc>
   3a964:	add	x2, sp, #0x80
   3a968:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   3a96c:	add	x1, x0, #0xef8
   3a970:	mov	x0, x2
   3a974:	bl	3854c <__sanitizer_set_death_callback@@Base+0x28ac>
   3a978:	b	3ac14 <__sanitizer_set_death_callback@@Base+0x4f74>
   3a97c:	add	x0, sp, #0xc8
   3a980:	mov	x4, x0
   3a984:	ldr	x3, [sp, #408]
   3a988:	ldr	x2, [sp, #400]
   3a98c:	mov	x1, #0x8                   	// #8
   3a990:	ldr	x0, [sp, #120]
   3a994:	bl	6a90 <__asan_backtrace_vector_grow@plt>
   3a998:	str	x0, [sp, #312]
   3a99c:	ldr	x0, [sp, #312]
   3a9a0:	cmp	x0, #0x0
   3a9a4:	b.eq	3abe8 <__sanitizer_set_death_callback@@Base+0x4f48>  // b.none
   3a9a8:	ldr	x3, [sp, #408]
   3a9ac:	ldr	x2, [sp, #400]
   3a9b0:	mov	x1, #0x88                  	// #136
   3a9b4:	ldr	x0, [sp, #120]
   3a9b8:	bl	6b10 <__asan_backtrace_alloc@plt>
   3a9bc:	str	x0, [sp, #304]
   3a9c0:	ldr	x0, [sp, #304]
   3a9c4:	cmp	x0, #0x0
   3a9c8:	b.eq	3abf0 <__sanitizer_set_death_callback@@Base+0x4f50>  // b.none
   3a9cc:	ldr	x0, [sp, #312]
   3a9d0:	ldr	x1, [sp, #304]
   3a9d4:	str	x1, [x0]
   3a9d8:	ldr	x0, [sp, #360]
   3a9dc:	add	x0, x0, #0x1
   3a9e0:	str	x0, [sp, #360]
   3a9e4:	ldr	x0, [sp, #304]
   3a9e8:	add	x0, x0, #0x58
   3a9ec:	mov	x2, #0x10                  	// #16
   3a9f0:	mov	w1, #0x0                   	// #0
   3a9f4:	bl	6ab0 <__asan_internal_memset@plt>
   3a9f8:	ldr	w1, [sp, #196]
   3a9fc:	add	x0, sp, #0x80
   3aa00:	bl	38ac8 <__sanitizer_set_death_callback@@Base+0x2e28>
   3aa04:	str	x0, [sp, #296]
   3aa08:	ldr	x0, [sp, #304]
   3aa0c:	add	x0, x0, #0x58
   3aa10:	mov	x7, x0
   3aa14:	ldr	x6, [sp, #408]
   3aa18:	ldr	x5, [sp, #400]
   3aa1c:	ldr	w4, [sp, #384]
   3aa20:	ldr	x3, [sp, #80]
   3aa24:	ldr	x2, [sp, #88]
   3aa28:	ldr	x1, [sp, #296]
   3aa2c:	ldr	x0, [sp, #120]
   3aa30:	bl	39ca8 <__sanitizer_set_death_callback@@Base+0x4008>
   3aa34:	cmp	w0, #0x0
   3aa38:	b.eq	3abf8 <__sanitizer_set_death_callback@@Base+0x4f58>  // b.none
   3aa3c:	add	x0, sp, #0x80
   3aa40:	bl	386f4 <__sanitizer_set_death_callback@@Base+0x2a54>
   3aa44:	and	w0, w0, #0xff
   3aa48:	str	w0, [sp, #292]
   3aa4c:	ldr	x0, [sp, #304]
   3aa50:	ldr	x1, [sp, #344]
   3aa54:	str	x1, [x0, #24]
   3aa58:	ldr	w0, [sp, #196]
   3aa5c:	cmp	w0, #0x0
   3aa60:	b.eq	3aa6c <__sanitizer_set_death_callback@@Base+0x4dcc>  // b.none
   3aa64:	mov	x0, #0xc                   	// #12
   3aa68:	b	3aa70 <__sanitizer_set_death_callback@@Base+0x4dd0>
   3aa6c:	mov	x0, #0x4                   	// #4
   3aa70:	ldr	x1, [sp, #328]
   3aa74:	add	x0, x0, x1
   3aa78:	ldr	x1, [sp, #344]
   3aa7c:	add	x0, x1, x0
   3aa80:	str	x0, [sp, #344]
   3aa84:	ldr	x0, [sp, #304]
   3aa88:	ldr	x1, [sp, #344]
   3aa8c:	str	x1, [x0, #32]
   3aa90:	ldr	x1, [sp, #144]
   3aa94:	ldr	x0, [sp, #304]
   3aa98:	str	x1, [x0]
   3aa9c:	ldr	x1, [sp, #152]
   3aaa0:	ldr	x0, [sp, #304]
   3aaa4:	str	x1, [x0, #8]
   3aaa8:	ldr	x1, [sp, #144]
   3aaac:	ldr	x0, [sp, #336]
   3aab0:	sub	x0, x1, x0
   3aab4:	mov	x1, x0
   3aab8:	ldr	x0, [sp, #304]
   3aabc:	str	x1, [x0, #16]
   3aac0:	ldr	x0, [sp, #304]
   3aac4:	ldr	w1, [sp, #324]
   3aac8:	str	w1, [x0, #40]
   3aacc:	ldr	w1, [sp, #196]
   3aad0:	ldr	x0, [sp, #304]
   3aad4:	str	w1, [x0, #44]
   3aad8:	ldr	x0, [sp, #304]
   3aadc:	ldr	w1, [sp, #292]
   3aae0:	str	w1, [x0, #48]
   3aae4:	ldr	x0, [sp, #304]
   3aae8:	str	xzr, [x0, #64]
   3aaec:	ldr	x0, [sp, #304]
   3aaf0:	str	xzr, [x0, #72]
   3aaf4:	ldr	x0, [sp, #304]
   3aaf8:	str	xzr, [x0, #80]
   3aafc:	ldr	x0, [sp, #304]
   3ab00:	str	xzr, [x0, #56]
   3ab04:	ldr	x0, [sp, #304]
   3ab08:	str	xzr, [x0, #104]
   3ab0c:	ldr	x0, [sp, #304]
   3ab10:	str	xzr, [x0, #112]
   3ab14:	ldr	x0, [sp, #304]
   3ab18:	str	xzr, [x0, #120]
   3ab1c:	ldr	x0, [sp, #304]
   3ab20:	str	xzr, [x0, #128]
   3ab24:	add	x1, sp, #0x80
   3ab28:	add	x0, sp, #0xc0
   3ab2c:	str	x0, [sp, #40]
   3ab30:	ldr	x0, [sp, #416]
   3ab34:	str	x0, [sp, #32]
   3ab38:	ldr	x0, [sp, #304]
   3ab3c:	str	x0, [sp, #24]
   3ab40:	ldr	x0, [sp, #408]
   3ab44:	str	x0, [sp, #16]
   3ab48:	ldr	x0, [sp, #400]
   3ab4c:	str	x0, [sp, #8]
   3ab50:	ldr	x0, [sp, #392]
   3ab54:	str	x0, [sp]
   3ab58:	ldr	w7, [sp, #384]
   3ab5c:	ldr	x6, [sp, #64]
   3ab60:	ldr	x5, [sp, #72]
   3ab64:	ldr	x4, [sp, #376]
   3ab68:	ldr	x3, [sp, #368]
   3ab6c:	mov	x2, x1
   3ab70:	ldr	x1, [sp, #112]
   3ab74:	ldr	x0, [sp, #120]
   3ab78:	bl	3a330 <__sanitizer_set_death_callback@@Base+0x4690>
   3ab7c:	cmp	w0, #0x0
   3ab80:	b.eq	3ac00 <__sanitizer_set_death_callback@@Base+0x4f60>  // b.none
   3ab84:	ldr	w0, [sp, #184]
   3ab88:	cmp	w0, #0x0
   3ab8c:	b.ne	3ac08 <__sanitizer_set_death_callback@@Base+0x4f68>  // b.any
   3ab90:	ldr	x0, [sp, #248]
   3ab94:	cmp	x0, #0x0
   3ab98:	b.ne	3a8d4 <__sanitizer_set_death_callback@@Base+0x4c34>  // b.any
   3ab9c:	ldr	w0, [sp, #280]
   3aba0:	cmp	w0, #0x0
   3aba4:	b.ne	3ac10 <__sanitizer_set_death_callback@@Base+0x4f70>  // b.any
   3aba8:	ldr	x0, [sp, #424]
   3abac:	mov	x3, x0
   3abb0:	add	x2, sp, #0xc8
   3abb4:	ldp	x0, x1, [x2]
   3abb8:	stp	x0, x1, [x3]
   3abbc:	ldr	x0, [x2, #16]
   3abc0:	str	x0, [x3, #16]
   3abc4:	ldr	x0, [sp, #424]
   3abc8:	ldr	x1, [sp, #360]
   3abcc:	str	x1, [x0, #24]
   3abd0:	mov	w0, #0x1                   	// #1
   3abd4:	b	3acf0 <__sanitizer_set_death_callback@@Base+0x5050>
   3abd8:	nop
   3abdc:	b	3ac14 <__sanitizer_set_death_callback@@Base+0x4f74>
   3abe0:	nop
   3abe4:	b	3ac14 <__sanitizer_set_death_callback@@Base+0x4f74>
   3abe8:	nop
   3abec:	b	3ac14 <__sanitizer_set_death_callback@@Base+0x4f74>
   3abf0:	nop
   3abf4:	b	3ac14 <__sanitizer_set_death_callback@@Base+0x4f74>
   3abf8:	nop
   3abfc:	b	3ac14 <__sanitizer_set_death_callback@@Base+0x4f74>
   3ac00:	nop
   3ac04:	b	3ac14 <__sanitizer_set_death_callback@@Base+0x4f74>
   3ac08:	nop
   3ac0c:	b	3ac14 <__sanitizer_set_death_callback@@Base+0x4f74>
   3ac10:	nop
   3ac14:	ldr	x0, [sp, #360]
   3ac18:	cmp	x0, #0x0
   3ac1c:	b.eq	3acbc <__sanitizer_set_death_callback@@Base+0x501c>  // b.none
   3ac20:	ldr	x0, [sp, #200]
   3ac24:	str	x0, [sp, #312]
   3ac28:	str	xzr, [sp, #352]
   3ac2c:	b	3ac94 <__sanitizer_set_death_callback@@Base+0x4ff4>
   3ac30:	ldr	x0, [sp, #352]
   3ac34:	lsl	x0, x0, #3
   3ac38:	ldr	x1, [sp, #312]
   3ac3c:	add	x0, x1, x0
   3ac40:	ldr	x0, [x0]
   3ac44:	add	x0, x0, #0x58
   3ac48:	ldr	x3, [sp, #408]
   3ac4c:	ldr	x2, [sp, #400]
   3ac50:	mov	x1, x0
   3ac54:	ldr	x0, [sp, #120]
   3ac58:	bl	38edc <__sanitizer_set_death_callback@@Base+0x323c>
   3ac5c:	ldr	x0, [sp, #352]
   3ac60:	lsl	x0, x0, #3
   3ac64:	ldr	x1, [sp, #312]
   3ac68:	add	x0, x1, x0
   3ac6c:	ldr	x0, [x0]
   3ac70:	ldr	x4, [sp, #408]
   3ac74:	ldr	x3, [sp, #400]
   3ac78:	mov	x2, #0x88                  	// #136
   3ac7c:	mov	x1, x0
   3ac80:	ldr	x0, [sp, #120]
   3ac84:	bl	6e00 <__asan_backtrace_free@plt>
   3ac88:	ldr	x0, [sp, #352]
   3ac8c:	add	x0, x0, #0x1
   3ac90:	str	x0, [sp, #352]
   3ac94:	ldr	x1, [sp, #352]
   3ac98:	ldr	x0, [sp, #360]
   3ac9c:	cmp	x1, x0
   3aca0:	b.cc	3ac30 <__sanitizer_set_death_callback@@Base+0x4f90>  // b.lo, b.ul, b.last
   3aca4:	add	x0, sp, #0xc8
   3aca8:	ldr	x3, [sp, #408]
   3acac:	ldr	x2, [sp, #400]
   3acb0:	mov	x1, x0
   3acb4:	ldr	x0, [sp, #120]
   3acb8:	bl	384f0 <__sanitizer_set_death_callback@@Base+0x2850>
   3acbc:	ldr	x0, [sp, #416]
   3acc0:	ldr	x0, [x0, #24]
   3acc4:	cmp	x0, #0x0
   3acc8:	b.eq	3acec <__sanitizer_set_death_callback@@Base+0x504c>  // b.none
   3accc:	ldr	x0, [sp, #416]
   3acd0:	ldr	x3, [sp, #408]
   3acd4:	ldr	x2, [sp, #400]
   3acd8:	mov	x1, x0
   3acdc:	ldr	x0, [sp, #120]
   3ace0:	bl	384f0 <__sanitizer_set_death_callback@@Base+0x2850>
   3ace4:	ldr	x0, [sp, #416]
   3ace8:	str	xzr, [x0, #24]
   3acec:	mov	w0, #0x0                   	// #0
   3acf0:	ldp	x29, x30, [sp, #48]
   3acf4:	add	sp, sp, #0x170
   3acf8:	ret
   3acfc:	stp	x29, x30, [sp, #-96]!
   3ad00:	mov	x29, sp
   3ad04:	str	x0, [sp, #72]
   3ad08:	str	x1, [sp, #64]
   3ad0c:	str	x2, [sp, #56]
   3ad10:	str	x3, [sp, #48]
   3ad14:	str	w4, [sp, #44]
   3ad18:	str	x5, [sp, #32]
   3ad1c:	str	x6, [sp, #24]
   3ad20:	str	x7, [sp, #16]
   3ad24:	ldr	x0, [sp, #16]
   3ad28:	ldr	x0, [x0, #24]
   3ad2c:	cmp	x0, #0x0
   3ad30:	b.eq	3ada4 <__sanitizer_set_death_callback@@Base+0x5104>  // b.none
   3ad34:	ldr	x0, [sp, #16]
   3ad38:	ldr	x2, [x0]
   3ad3c:	ldr	x0, [sp, #16]
   3ad40:	ldr	x1, [x0, #24]
   3ad44:	mov	x0, x1
   3ad48:	lsl	x0, x0, #1
   3ad4c:	add	x0, x0, x1
   3ad50:	lsl	x0, x0, #3
   3ad54:	sub	x0, x0, #0x18
   3ad58:	add	x0, x2, x0
   3ad5c:	str	x0, [sp, #88]
   3ad60:	ldr	x0, [sp, #88]
   3ad64:	ldr	x0, [x0]
   3ad68:	ldr	x1, [sp, #56]
   3ad6c:	cmp	x1, x0
   3ad70:	b.ne	3ada4 <__sanitizer_set_death_callback@@Base+0x5104>  // b.any
   3ad74:	ldr	x0, [sp, #88]
   3ad78:	ldr	x0, [x0, #8]
   3ad7c:	ldr	x1, [sp, #48]
   3ad80:	cmp	x1, x0
   3ad84:	b.ne	3ada4 <__sanitizer_set_death_callback@@Base+0x5104>  // b.any
   3ad88:	ldr	x0, [sp, #88]
   3ad8c:	ldr	w0, [x0, #16]
   3ad90:	ldr	w1, [sp, #44]
   3ad94:	cmp	w1, w0
   3ad98:	b.ne	3ada4 <__sanitizer_set_death_callback@@Base+0x5104>  // b.any
   3ad9c:	mov	w0, #0x1                   	// #1
   3ada0:	b	3ae34 <__sanitizer_set_death_callback@@Base+0x5194>
   3ada4:	ldr	x0, [sp, #16]
   3ada8:	mov	x4, x0
   3adac:	ldr	x3, [sp, #24]
   3adb0:	ldr	x2, [sp, #32]
   3adb4:	mov	x1, #0x18                  	// #24
   3adb8:	ldr	x0, [sp, #72]
   3adbc:	bl	6a90 <__asan_backtrace_vector_grow@plt>
   3adc0:	str	x0, [sp, #88]
   3adc4:	ldr	x0, [sp, #88]
   3adc8:	cmp	x0, #0x0
   3adcc:	b.ne	3add8 <__sanitizer_set_death_callback@@Base+0x5138>  // b.any
   3add0:	mov	w0, #0x0                   	// #0
   3add4:	b	3ae34 <__sanitizer_set_death_callback@@Base+0x5194>
   3add8:	ldr	x0, [sp, #64]
   3addc:	ldr	x1, [x0, #16]
   3ade0:	ldr	x0, [sp, #56]
   3ade4:	add	x1, x1, x0
   3ade8:	ldr	x0, [sp, #88]
   3adec:	str	x1, [x0]
   3adf0:	ldr	x0, [sp, #88]
   3adf4:	ldr	x1, [sp, #48]
   3adf8:	str	x1, [x0, #8]
   3adfc:	ldr	x0, [sp, #88]
   3ae00:	ldr	w1, [sp, #44]
   3ae04:	str	w1, [x0, #16]
   3ae08:	ldr	x0, [sp, #16]
   3ae0c:	ldr	x0, [x0, #24]
   3ae10:	mov	w1, w0
   3ae14:	ldr	x0, [sp, #88]
   3ae18:	str	w1, [x0, #20]
   3ae1c:	ldr	x0, [sp, #16]
   3ae20:	ldr	x0, [x0, #24]
   3ae24:	add	x1, x0, #0x1
   3ae28:	ldr	x0, [sp, #16]
   3ae2c:	str	x1, [x0, #24]
   3ae30:	mov	w0, #0x1                   	// #1
   3ae34:	ldp	x29, x30, [sp], #96
   3ae38:	ret
   3ae3c:	stp	x29, x30, [sp, #-48]!
   3ae40:	mov	x29, sp
   3ae44:	str	x0, [sp, #40]
   3ae48:	str	x1, [sp, #32]
   3ae4c:	str	x2, [sp, #24]
   3ae50:	str	x3, [sp, #16]
   3ae54:	ldr	x0, [sp, #32]
   3ae58:	ldr	x0, [x0, #32]
   3ae5c:	cmp	x0, #0x0
   3ae60:	b.eq	3ae8c <__sanitizer_set_death_callback@@Base+0x51ec>  // b.none
   3ae64:	ldr	x0, [sp, #32]
   3ae68:	ldr	x1, [x0, #40]
   3ae6c:	ldr	x0, [sp, #32]
   3ae70:	ldr	x0, [x0, #32]
   3ae74:	lsl	x0, x0, #3
   3ae78:	ldr	x4, [sp, #16]
   3ae7c:	ldr	x3, [sp, #24]
   3ae80:	mov	x2, x0
   3ae84:	ldr	x0, [sp, #40]
   3ae88:	bl	6e00 <__asan_backtrace_free@plt>
   3ae8c:	ldr	x0, [sp, #32]
   3ae90:	ldr	x1, [x0, #56]
   3ae94:	ldr	x0, [sp, #32]
   3ae98:	ldr	x0, [x0, #48]
   3ae9c:	lsl	x0, x0, #3
   3aea0:	ldr	x4, [sp, #16]
   3aea4:	ldr	x3, [sp, #24]
   3aea8:	mov	x2, x0
   3aeac:	ldr	x0, [sp, #40]
   3aeb0:	bl	6e00 <__asan_backtrace_free@plt>
   3aeb4:	nop
   3aeb8:	ldp	x29, x30, [sp], #48
   3aebc:	ret
   3aec0:	stp	x29, x30, [sp, #-224]!
   3aec4:	mov	x29, sp
   3aec8:	str	x19, [sp, #16]
   3aecc:	str	x0, [sp, #72]
   3aed0:	str	x1, [sp, #64]
   3aed4:	str	w2, [sp, #60]
   3aed8:	str	x3, [sp, #48]
   3aedc:	str	x4, [sp, #40]
   3aee0:	ldr	x0, [sp, #48]
   3aee4:	bl	38790 <__sanitizer_set_death_callback@@Base+0x2af0>
   3aee8:	and	w0, w0, #0xffff
   3aeec:	mov	w1, w0
   3aef0:	ldr	x0, [sp, #40]
   3aef4:	str	w1, [x0]
   3aef8:	ldr	x0, [sp, #40]
   3aefc:	ldr	w0, [x0]
   3af00:	cmp	w0, #0x1
   3af04:	b.le	3af18 <__sanitizer_set_death_callback@@Base+0x5278>
   3af08:	ldr	x0, [sp, #40]
   3af0c:	ldr	w0, [x0]
   3af10:	cmp	w0, #0x4
   3af14:	b.le	3af30 <__sanitizer_set_death_callback@@Base+0x5290>
   3af18:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   3af1c:	add	x1, x0, #0xf18
   3af20:	ldr	x0, [sp, #48]
   3af24:	bl	3854c <__sanitizer_set_death_callback@@Base+0x28ac>
   3af28:	mov	w0, #0x0                   	// #0
   3af2c:	b	3b500 <__sanitizer_set_death_callback@@Base+0x5860>
   3af30:	ldr	w1, [sp, #60]
   3af34:	ldr	x0, [sp, #48]
   3af38:	bl	38ac8 <__sanitizer_set_death_callback@@Base+0x2e28>
   3af3c:	str	x0, [sp, #192]
   3af40:	ldr	x1, [sp, #48]
   3af44:	add	x0, sp, #0x50
   3af48:	ldp	x2, x3, [x1]
   3af4c:	stp	x2, x3, [x0]
   3af50:	ldp	x2, x3, [x1, #16]
   3af54:	stp	x2, x3, [x0, #16]
   3af58:	ldp	x2, x3, [x1, #32]
   3af5c:	stp	x2, x3, [x0, #32]
   3af60:	ldp	x2, x3, [x1, #48]
   3af64:	stp	x2, x3, [x0, #48]
   3af68:	ldr	x0, [sp, #192]
   3af6c:	str	x0, [sp, #104]
   3af70:	ldr	x1, [sp, #192]
   3af74:	ldr	x0, [sp, #48]
   3af78:	bl	38628 <__sanitizer_set_death_callback@@Base+0x2988>
   3af7c:	cmp	w0, #0x0
   3af80:	b.ne	3af8c <__sanitizer_set_death_callback@@Base+0x52ec>  // b.any
   3af84:	mov	w0, #0x0                   	// #0
   3af88:	b	3b500 <__sanitizer_set_death_callback@@Base+0x5860>
   3af8c:	add	x0, sp, #0x50
   3af90:	bl	386f4 <__sanitizer_set_death_callback@@Base+0x2a54>
   3af94:	and	w0, w0, #0xff
   3af98:	mov	w1, w0
   3af9c:	ldr	x0, [sp, #40]
   3afa0:	str	w1, [x0, #4]
   3afa4:	ldr	x0, [sp, #40]
   3afa8:	ldr	w0, [x0]
   3afac:	cmp	w0, #0x3
   3afb0:	b.gt	3afc4 <__sanitizer_set_death_callback@@Base+0x5324>
   3afb4:	ldr	x0, [sp, #40]
   3afb8:	mov	w1, #0x1                   	// #1
   3afbc:	str	w1, [x0, #8]
   3afc0:	b	3afdc <__sanitizer_set_death_callback@@Base+0x533c>
   3afc4:	add	x0, sp, #0x50
   3afc8:	bl	386f4 <__sanitizer_set_death_callback@@Base+0x2a54>
   3afcc:	and	w0, w0, #0xff
   3afd0:	mov	w1, w0
   3afd4:	ldr	x0, [sp, #40]
   3afd8:	str	w1, [x0, #8]
   3afdc:	add	x0, sp, #0x50
   3afe0:	bl	386f4 <__sanitizer_set_death_callback@@Base+0x2a54>
   3afe4:	add	x0, sp, #0x50
   3afe8:	bl	38738 <__sanitizer_set_death_callback@@Base+0x2a98>
   3afec:	sxtb	w0, w0
   3aff0:	mov	w1, w0
   3aff4:	ldr	x0, [sp, #40]
   3aff8:	str	w1, [x0, #12]
   3affc:	add	x0, sp, #0x50
   3b000:	bl	386f4 <__sanitizer_set_death_callback@@Base+0x2a54>
   3b004:	and	w0, w0, #0xff
   3b008:	mov	w1, w0
   3b00c:	ldr	x0, [sp, #40]
   3b010:	str	w1, [x0, #16]
   3b014:	add	x0, sp, #0x50
   3b018:	bl	386f4 <__sanitizer_set_death_callback@@Base+0x2a54>
   3b01c:	and	w0, w0, #0xff
   3b020:	mov	w1, w0
   3b024:	ldr	x0, [sp, #40]
   3b028:	str	w1, [x0, #20]
   3b02c:	ldr	x1, [sp, #96]
   3b030:	ldr	x0, [sp, #40]
   3b034:	str	x1, [x0, #24]
   3b038:	ldr	x0, [sp, #40]
   3b03c:	ldr	w0, [x0, #20]
   3b040:	sub	w0, w0, #0x1
   3b044:	mov	w1, w0
   3b048:	add	x0, sp, #0x50
   3b04c:	bl	38628 <__sanitizer_set_death_callback@@Base+0x2988>
   3b050:	cmp	w0, #0x0
   3b054:	b.ne	3b060 <__sanitizer_set_death_callback@@Base+0x53c0>  // b.any
   3b058:	mov	w0, #0x0                   	// #0
   3b05c:	b	3b500 <__sanitizer_set_death_callback@@Base+0x5860>
   3b060:	ldr	x0, [sp, #40]
   3b064:	str	xzr, [x0, #32]
   3b068:	ldr	x0, [sp, #96]
   3b06c:	str	x0, [sp, #216]
   3b070:	ldr	x0, [sp, #104]
   3b074:	ldr	x1, [sp, #216]
   3b078:	add	x0, x1, x0
   3b07c:	str	x0, [sp, #184]
   3b080:	b	3b0c0 <__sanitizer_set_death_callback@@Base+0x5420>
   3b084:	ldr	x1, [sp, #184]
   3b088:	ldr	x0, [sp, #216]
   3b08c:	sub	x0, x1, x0
   3b090:	mov	x1, x0
   3b094:	ldr	x0, [sp, #216]
   3b098:	bl	6d90 <__asan_internal_strnlen@plt>
   3b09c:	add	x0, x0, #0x1
   3b0a0:	ldr	x1, [sp, #216]
   3b0a4:	add	x0, x1, x0
   3b0a8:	str	x0, [sp, #216]
   3b0ac:	ldr	x0, [sp, #40]
   3b0b0:	ldr	x0, [x0, #32]
   3b0b4:	add	x1, x0, #0x1
   3b0b8:	ldr	x0, [sp, #40]
   3b0bc:	str	x1, [x0, #32]
   3b0c0:	ldr	x1, [sp, #216]
   3b0c4:	ldr	x0, [sp, #184]
   3b0c8:	cmp	x1, x0
   3b0cc:	b.cs	3b0e0 <__sanitizer_set_death_callback@@Base+0x5440>  // b.hs, b.nlast
   3b0d0:	ldr	x0, [sp, #216]
   3b0d4:	ldrb	w0, [x0]
   3b0d8:	cmp	w0, #0x0
   3b0dc:	b.ne	3b084 <__sanitizer_set_death_callback@@Base+0x53e4>  // b.any
   3b0e0:	ldr	x0, [sp, #40]
   3b0e4:	str	xzr, [x0, #40]
   3b0e8:	ldr	x0, [sp, #40]
   3b0ec:	ldr	x0, [x0, #32]
   3b0f0:	cmp	x0, #0x0
   3b0f4:	b.eq	3b144 <__sanitizer_set_death_callback@@Base+0x54a4>  // b.none
   3b0f8:	ldr	x0, [sp, #40]
   3b0fc:	ldr	x0, [x0, #32]
   3b100:	lsl	x1, x0, #3
   3b104:	ldr	x0, [sp, #48]
   3b108:	ldr	x2, [x0, #40]
   3b10c:	ldr	x0, [sp, #48]
   3b110:	ldr	x0, [x0, #48]
   3b114:	mov	x3, x0
   3b118:	ldr	x0, [sp, #72]
   3b11c:	bl	6b10 <__asan_backtrace_alloc@plt>
   3b120:	mov	x1, x0
   3b124:	ldr	x0, [sp, #40]
   3b128:	str	x1, [x0, #40]
   3b12c:	ldr	x0, [sp, #40]
   3b130:	ldr	x0, [x0, #40]
   3b134:	cmp	x0, #0x0
   3b138:	b.ne	3b144 <__sanitizer_set_death_callback@@Base+0x54a4>  // b.any
   3b13c:	mov	w0, #0x0                   	// #0
   3b140:	b	3b500 <__sanitizer_set_death_callback@@Base+0x5860>
   3b144:	str	xzr, [sp, #208]
   3b148:	b	3b1b4 <__sanitizer_set_death_callback@@Base+0x5514>
   3b14c:	ldr	w0, [sp, #136]
   3b150:	cmp	w0, #0x0
   3b154:	b.eq	3b160 <__sanitizer_set_death_callback@@Base+0x54c0>  // b.none
   3b158:	mov	w0, #0x0                   	// #0
   3b15c:	b	3b500 <__sanitizer_set_death_callback@@Base+0x5860>
   3b160:	ldr	x0, [sp, #40]
   3b164:	ldr	x1, [x0, #40]
   3b168:	ldr	x0, [sp, #208]
   3b16c:	lsl	x0, x0, #3
   3b170:	add	x19, x1, x0
   3b174:	add	x0, sp, #0x50
   3b178:	bl	38690 <__sanitizer_set_death_callback@@Base+0x29f0>
   3b17c:	str	x0, [x19]
   3b180:	ldr	x0, [sp, #40]
   3b184:	ldr	x1, [x0, #40]
   3b188:	ldr	x0, [sp, #208]
   3b18c:	lsl	x0, x0, #3
   3b190:	add	x0, x1, x0
   3b194:	ldr	x0, [x0]
   3b198:	cmp	x0, #0x0
   3b19c:	b.ne	3b1a8 <__sanitizer_set_death_callback@@Base+0x5508>  // b.any
   3b1a0:	mov	w0, #0x0                   	// #0
   3b1a4:	b	3b500 <__sanitizer_set_death_callback@@Base+0x5860>
   3b1a8:	ldr	x0, [sp, #208]
   3b1ac:	add	x0, x0, #0x1
   3b1b0:	str	x0, [sp, #208]
   3b1b4:	ldr	x0, [sp, #96]
   3b1b8:	ldrb	w0, [x0]
   3b1bc:	cmp	w0, #0x0
   3b1c0:	b.ne	3b14c <__sanitizer_set_death_callback@@Base+0x54ac>  // b.any
   3b1c4:	add	x0, sp, #0x50
   3b1c8:	mov	x1, #0x1                   	// #1
   3b1cc:	bl	38628 <__sanitizer_set_death_callback@@Base+0x2988>
   3b1d0:	cmp	w0, #0x0
   3b1d4:	b.ne	3b1e0 <__sanitizer_set_death_callback@@Base+0x5540>  // b.any
   3b1d8:	mov	w0, #0x0                   	// #0
   3b1dc:	b	3b500 <__sanitizer_set_death_callback@@Base+0x5860>
   3b1e0:	ldr	x0, [sp, #40]
   3b1e4:	str	xzr, [x0, #48]
   3b1e8:	ldr	x0, [sp, #96]
   3b1ec:	str	x0, [sp, #216]
   3b1f0:	ldr	x0, [sp, #104]
   3b1f4:	ldr	x1, [sp, #216]
   3b1f8:	add	x0, x1, x0
   3b1fc:	str	x0, [sp, #184]
   3b200:	b	3b288 <__sanitizer_set_death_callback@@Base+0x55e8>
   3b204:	ldr	x1, [sp, #184]
   3b208:	ldr	x0, [sp, #216]
   3b20c:	sub	x0, x1, x0
   3b210:	mov	x1, x0
   3b214:	ldr	x0, [sp, #216]
   3b218:	bl	6d90 <__asan_internal_strnlen@plt>
   3b21c:	add	x0, x0, #0x1
   3b220:	ldr	x1, [sp, #216]
   3b224:	add	x0, x1, x0
   3b228:	str	x0, [sp, #216]
   3b22c:	ldr	x0, [sp, #216]
   3b230:	bl	38e30 <__sanitizer_set_death_callback@@Base+0x3190>
   3b234:	mov	x1, x0
   3b238:	ldr	x0, [sp, #216]
   3b23c:	add	x0, x0, x1
   3b240:	str	x0, [sp, #216]
   3b244:	ldr	x0, [sp, #216]
   3b248:	bl	38e30 <__sanitizer_set_death_callback@@Base+0x3190>
   3b24c:	mov	x1, x0
   3b250:	ldr	x0, [sp, #216]
   3b254:	add	x0, x0, x1
   3b258:	str	x0, [sp, #216]
   3b25c:	ldr	x0, [sp, #216]
   3b260:	bl	38e30 <__sanitizer_set_death_callback@@Base+0x3190>
   3b264:	mov	x1, x0
   3b268:	ldr	x0, [sp, #216]
   3b26c:	add	x0, x0, x1
   3b270:	str	x0, [sp, #216]
   3b274:	ldr	x0, [sp, #40]
   3b278:	ldr	x0, [x0, #48]
   3b27c:	add	x1, x0, #0x1
   3b280:	ldr	x0, [sp, #40]
   3b284:	str	x1, [x0, #48]
   3b288:	ldr	x1, [sp, #216]
   3b28c:	ldr	x0, [sp, #184]
   3b290:	cmp	x1, x0
   3b294:	b.cs	3b2a8 <__sanitizer_set_death_callback@@Base+0x5608>  // b.hs, b.nlast
   3b298:	ldr	x0, [sp, #216]
   3b29c:	ldrb	w0, [x0]
   3b2a0:	cmp	w0, #0x0
   3b2a4:	b.ne	3b204 <__sanitizer_set_death_callback@@Base+0x5564>  // b.any
   3b2a8:	ldr	x0, [sp, #40]
   3b2ac:	ldr	x0, [x0, #48]
   3b2b0:	lsl	x1, x0, #3
   3b2b4:	ldr	x0, [sp, #48]
   3b2b8:	ldr	x2, [x0, #40]
   3b2bc:	ldr	x0, [sp, #48]
   3b2c0:	ldr	x0, [x0, #48]
   3b2c4:	mov	x3, x0
   3b2c8:	ldr	x0, [sp, #72]
   3b2cc:	bl	6b10 <__asan_backtrace_alloc@plt>
   3b2d0:	mov	x1, x0
   3b2d4:	ldr	x0, [sp, #40]
   3b2d8:	str	x1, [x0, #56]
   3b2dc:	ldr	x0, [sp, #40]
   3b2e0:	ldr	x0, [x0, #56]
   3b2e4:	cmp	x0, #0x0
   3b2e8:	b.ne	3b2f4 <__sanitizer_set_death_callback@@Base+0x5654>  // b.any
   3b2ec:	mov	w0, #0x0                   	// #0
   3b2f0:	b	3b500 <__sanitizer_set_death_callback@@Base+0x5860>
   3b2f4:	str	xzr, [sp, #208]
   3b2f8:	b	3b4d8 <__sanitizer_set_death_callback@@Base+0x5838>
   3b2fc:	ldr	w0, [sp, #136]
   3b300:	cmp	w0, #0x0
   3b304:	b.eq	3b310 <__sanitizer_set_death_callback@@Base+0x5670>  // b.none
   3b308:	mov	w0, #0x0                   	// #0
   3b30c:	b	3b500 <__sanitizer_set_death_callback@@Base+0x5860>
   3b310:	add	x0, sp, #0x50
   3b314:	bl	38690 <__sanitizer_set_death_callback@@Base+0x29f0>
   3b318:	str	x0, [sp, #176]
   3b31c:	ldr	x0, [sp, #176]
   3b320:	cmp	x0, #0x0
   3b324:	b.ne	3b330 <__sanitizer_set_death_callback@@Base+0x5690>  // b.any
   3b328:	mov	w0, #0x0                   	// #0
   3b32c:	b	3b500 <__sanitizer_set_death_callback@@Base+0x5860>
   3b330:	add	x0, sp, #0x50
   3b334:	bl	38c7c <__sanitizer_set_death_callback@@Base+0x2fdc>
   3b338:	str	x0, [sp, #168]
   3b33c:	ldr	x0, [sp, #176]
   3b340:	ldrb	w0, [x0]
   3b344:	cmp	w0, #0x2f
   3b348:	b.eq	3b368 <__sanitizer_set_death_callback@@Base+0x56c8>  // b.none
   3b34c:	ldr	x0, [sp, #168]
   3b350:	cmp	x0, #0x0
   3b354:	b.ne	3b388 <__sanitizer_set_death_callback@@Base+0x56e8>  // b.any
   3b358:	ldr	x0, [sp, #64]
   3b35c:	ldr	x0, [x0, #72]
   3b360:	cmp	x0, #0x0
   3b364:	b.ne	3b388 <__sanitizer_set_death_callback@@Base+0x56e8>  // b.any
   3b368:	ldr	x0, [sp, #40]
   3b36c:	ldr	x1, [x0, #56]
   3b370:	ldr	x0, [sp, #208]
   3b374:	lsl	x0, x0, #3
   3b378:	add	x0, x1, x0
   3b37c:	ldr	x1, [sp, #176]
   3b380:	str	x1, [x0]
   3b384:	b	3b4bc <__sanitizer_set_death_callback@@Base+0x581c>
   3b388:	ldr	x0, [sp, #168]
   3b38c:	cmp	x0, #0x0
   3b390:	b.ne	3b3a4 <__sanitizer_set_death_callback@@Base+0x5704>  // b.any
   3b394:	ldr	x0, [sp, #64]
   3b398:	ldr	x0, [x0, #72]
   3b39c:	str	x0, [sp, #200]
   3b3a0:	b	3b3f8 <__sanitizer_set_death_callback@@Base+0x5758>
   3b3a4:	ldr	x0, [sp, #168]
   3b3a8:	sub	x1, x0, #0x1
   3b3ac:	ldr	x0, [sp, #40]
   3b3b0:	ldr	x0, [x0, #32]
   3b3b4:	cmp	x1, x0
   3b3b8:	b.cs	3b3e0 <__sanitizer_set_death_callback@@Base+0x5740>  // b.hs, b.nlast
   3b3bc:	ldr	x0, [sp, #40]
   3b3c0:	ldr	x1, [x0, #40]
   3b3c4:	ldr	x0, [sp, #168]
   3b3c8:	lsl	x0, x0, #3
   3b3cc:	sub	x0, x0, #0x8
   3b3d0:	add	x0, x1, x0
   3b3d4:	ldr	x0, [x0]
   3b3d8:	str	x0, [sp, #200]
   3b3dc:	b	3b3f8 <__sanitizer_set_death_callback@@Base+0x5758>
   3b3e0:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   3b3e4:	add	x1, x0, #0xf38
   3b3e8:	ldr	x0, [sp, #48]
   3b3ec:	bl	3854c <__sanitizer_set_death_callback@@Base+0x28ac>
   3b3f0:	mov	w0, #0x0                   	// #0
   3b3f4:	b	3b500 <__sanitizer_set_death_callback@@Base+0x5860>
   3b3f8:	ldr	x0, [sp, #200]
   3b3fc:	bl	6a20 <__asan_internal_strlen@plt>
   3b400:	str	x0, [sp, #160]
   3b404:	ldr	x0, [sp, #176]
   3b408:	bl	6a20 <__asan_internal_strlen@plt>
   3b40c:	str	x0, [sp, #152]
   3b410:	ldr	x1, [sp, #160]
   3b414:	ldr	x0, [sp, #152]
   3b418:	add	x0, x1, x0
   3b41c:	add	x1, x0, #0x2
   3b420:	ldr	x0, [sp, #48]
   3b424:	ldr	x2, [x0, #40]
   3b428:	ldr	x0, [sp, #48]
   3b42c:	ldr	x0, [x0, #48]
   3b430:	mov	x3, x0
   3b434:	ldr	x0, [sp, #72]
   3b438:	bl	6b10 <__asan_backtrace_alloc@plt>
   3b43c:	str	x0, [sp, #144]
   3b440:	ldr	x0, [sp, #144]
   3b444:	cmp	x0, #0x0
   3b448:	b.ne	3b454 <__sanitizer_set_death_callback@@Base+0x57b4>  // b.any
   3b44c:	mov	w0, #0x0                   	// #0
   3b450:	b	3b500 <__sanitizer_set_death_callback@@Base+0x5860>
   3b454:	ldr	x2, [sp, #160]
   3b458:	ldr	x1, [sp, #200]
   3b45c:	ldr	x0, [sp, #144]
   3b460:	bl	6a10 <__asan_internal_memcpy@plt>
   3b464:	ldr	x1, [sp, #144]
   3b468:	ldr	x0, [sp, #160]
   3b46c:	add	x0, x1, x0
   3b470:	mov	w1, #0x2f                  	// #47
   3b474:	strb	w1, [x0]
   3b478:	ldr	x0, [sp, #160]
   3b47c:	add	x0, x0, #0x1
   3b480:	ldr	x1, [sp, #144]
   3b484:	add	x3, x1, x0
   3b488:	ldr	x0, [sp, #152]
   3b48c:	add	x0, x0, #0x1
   3b490:	mov	x2, x0
   3b494:	ldr	x1, [sp, #176]
   3b498:	mov	x0, x3
   3b49c:	bl	6a10 <__asan_internal_memcpy@plt>
   3b4a0:	ldr	x0, [sp, #40]
   3b4a4:	ldr	x1, [x0, #56]
   3b4a8:	ldr	x0, [sp, #208]
   3b4ac:	lsl	x0, x0, #3
   3b4b0:	add	x0, x1, x0
   3b4b4:	ldr	x1, [sp, #144]
   3b4b8:	str	x1, [x0]
   3b4bc:	add	x0, sp, #0x50
   3b4c0:	bl	38c7c <__sanitizer_set_death_callback@@Base+0x2fdc>
   3b4c4:	add	x0, sp, #0x50
   3b4c8:	bl	38c7c <__sanitizer_set_death_callback@@Base+0x2fdc>
   3b4cc:	ldr	x0, [sp, #208]
   3b4d0:	add	x0, x0, #0x1
   3b4d4:	str	x0, [sp, #208]
   3b4d8:	ldr	x0, [sp, #96]
   3b4dc:	ldrb	w0, [x0]
   3b4e0:	cmp	w0, #0x0
   3b4e4:	b.ne	3b2fc <__sanitizer_set_death_callback@@Base+0x565c>  // b.any
   3b4e8:	ldr	w0, [sp, #136]
   3b4ec:	cmp	w0, #0x0
   3b4f0:	b.eq	3b4fc <__sanitizer_set_death_callback@@Base+0x585c>  // b.none
   3b4f4:	mov	w0, #0x0                   	// #0
   3b4f8:	b	3b500 <__sanitizer_set_death_callback@@Base+0x5860>
   3b4fc:	mov	w0, #0x1                   	// #1
   3b500:	ldr	x19, [sp, #16]
   3b504:	ldp	x29, x30, [sp], #224
   3b508:	ret
   3b50c:	stp	x29, x30, [sp, #-208]!
   3b510:	mov	x29, sp
   3b514:	str	x0, [sp, #56]
   3b518:	str	x1, [sp, #48]
   3b51c:	str	x2, [sp, #40]
   3b520:	str	x3, [sp, #32]
   3b524:	str	x4, [sp, #24]
   3b528:	str	x5, [sp, #16]
   3b52c:	str	xzr, [sp, #200]
   3b530:	str	wzr, [sp, #196]
   3b534:	ldr	x0, [sp, #32]
   3b538:	ldr	x0, [x0, #48]
   3b53c:	cmp	x0, #0x0
   3b540:	b.eq	3b558 <__sanitizer_set_death_callback@@Base+0x58b8>  // b.none
   3b544:	ldr	x0, [sp, #32]
   3b548:	ldr	x0, [x0, #56]
   3b54c:	ldr	x0, [x0]
   3b550:	str	x0, [sp, #184]
   3b554:	b	3b564 <__sanitizer_set_death_callback@@Base+0x58c4>
   3b558:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   3b55c:	add	x0, x0, #0xf70
   3b560:	str	x0, [sp, #184]
   3b564:	ldr	x0, [sp, #184]
   3b568:	str	x0, [sp, #176]
   3b56c:	mov	w0, #0x1                   	// #1
   3b570:	str	w0, [sp, #172]
   3b574:	b	3bc40 <__sanitizer_set_death_callback@@Base+0x5fa0>
   3b578:	ldr	x0, [sp, #24]
   3b57c:	bl	386f4 <__sanitizer_set_death_callback@@Base+0x2a54>
   3b580:	and	w0, w0, #0xff
   3b584:	str	w0, [sp, #152]
   3b588:	ldr	x0, [sp, #32]
   3b58c:	ldr	w0, [x0, #20]
   3b590:	ldr	w1, [sp, #152]
   3b594:	cmp	w1, w0
   3b598:	b.cc	3b684 <__sanitizer_set_death_callback@@Base+0x59e4>  // b.lo, b.ul, b.last
   3b59c:	ldr	x0, [sp, #32]
   3b5a0:	ldr	w0, [x0, #20]
   3b5a4:	ldr	w1, [sp, #152]
   3b5a8:	sub	w0, w1, w0
   3b5ac:	str	w0, [sp, #152]
   3b5b0:	ldr	x0, [sp, #32]
   3b5b4:	ldr	w0, [x0, #16]
   3b5b8:	ldr	w1, [sp, #152]
   3b5bc:	udiv	w0, w1, w0
   3b5c0:	str	w0, [sp, #76]
   3b5c4:	ldr	x0, [sp, #32]
   3b5c8:	ldr	w1, [x0, #4]
   3b5cc:	ldr	w2, [sp, #196]
   3b5d0:	ldr	w0, [sp, #76]
   3b5d4:	add	w0, w2, w0
   3b5d8:	mul	w1, w1, w0
   3b5dc:	ldr	x0, [sp, #32]
   3b5e0:	ldr	w0, [x0, #8]
   3b5e4:	udiv	w0, w1, w0
   3b5e8:	mov	w0, w0
   3b5ec:	ldr	x1, [sp, #200]
   3b5f0:	add	x0, x1, x0
   3b5f4:	str	x0, [sp, #200]
   3b5f8:	ldr	w1, [sp, #196]
   3b5fc:	ldr	w0, [sp, #76]
   3b600:	add	w0, w1, w0
   3b604:	ldr	x1, [sp, #32]
   3b608:	ldr	w1, [x1, #8]
   3b60c:	udiv	w2, w0, w1
   3b610:	mul	w1, w2, w1
   3b614:	sub	w0, w0, w1
   3b618:	str	w0, [sp, #196]
   3b61c:	ldr	x0, [sp, #32]
   3b620:	ldr	w2, [x0, #12]
   3b624:	ldr	x0, [sp, #32]
   3b628:	ldr	w1, [x0, #16]
   3b62c:	ldr	w0, [sp, #152]
   3b630:	udiv	w3, w0, w1
   3b634:	mul	w1, w3, w1
   3b638:	sub	w0, w0, w1
   3b63c:	add	w0, w2, w0
   3b640:	ldr	w1, [sp, #172]
   3b644:	add	w0, w1, w0
   3b648:	str	w0, [sp, #172]
   3b64c:	ldr	x0, [sp, #24]
   3b650:	ldr	x1, [x0, #40]
   3b654:	ldr	x0, [sp, #24]
   3b658:	ldr	x0, [x0, #48]
   3b65c:	ldr	x7, [sp, #16]
   3b660:	mov	x6, x0
   3b664:	mov	x5, x1
   3b668:	ldr	w4, [sp, #172]
   3b66c:	ldr	x3, [sp, #176]
   3b670:	ldr	x2, [sp, #200]
   3b674:	ldr	x1, [sp, #48]
   3b678:	ldr	x0, [sp, #56]
   3b67c:	bl	3acfc <__sanitizer_set_death_callback@@Base+0x505c>
   3b680:	b	3bc40 <__sanitizer_set_death_callback@@Base+0x5fa0>
   3b684:	ldr	w0, [sp, #152]
   3b688:	cmp	w0, #0x0
   3b68c:	b.ne	3b8ec <__sanitizer_set_death_callback@@Base+0x5c4c>  // b.any
   3b690:	ldr	x0, [sp, #24]
   3b694:	bl	38c7c <__sanitizer_set_death_callback@@Base+0x2fdc>
   3b698:	str	x0, [sp, #120]
   3b69c:	ldr	x0, [sp, #24]
   3b6a0:	bl	386f4 <__sanitizer_set_death_callback@@Base+0x2a54>
   3b6a4:	and	w0, w0, #0xff
   3b6a8:	str	w0, [sp, #152]
   3b6ac:	ldr	w0, [sp, #152]
   3b6b0:	cmp	w0, #0x4
   3b6b4:	b.eq	3b8b4 <__sanitizer_set_death_callback@@Base+0x5c14>  // b.none
   3b6b8:	ldr	w0, [sp, #152]
   3b6bc:	cmp	w0, #0x4
   3b6c0:	b.hi	3b8c0 <__sanitizer_set_death_callback@@Base+0x5c20>  // b.pmore
   3b6c4:	ldr	w0, [sp, #152]
   3b6c8:	cmp	w0, #0x3
   3b6cc:	b.eq	3b730 <__sanitizer_set_death_callback@@Base+0x5a90>  // b.none
   3b6d0:	ldr	w0, [sp, #152]
   3b6d4:	cmp	w0, #0x3
   3b6d8:	b.hi	3b8c0 <__sanitizer_set_death_callback@@Base+0x5c20>  // b.pmore
   3b6dc:	ldr	w0, [sp, #152]
   3b6e0:	cmp	w0, #0x1
   3b6e4:	b.eq	3b6f8 <__sanitizer_set_death_callback@@Base+0x5a58>  // b.none
   3b6e8:	ldr	w0, [sp, #152]
   3b6ec:	cmp	w0, #0x2
   3b6f0:	b.eq	3b714 <__sanitizer_set_death_callback@@Base+0x5a74>  // b.none
   3b6f4:	b	3b8c0 <__sanitizer_set_death_callback@@Base+0x5c20>
   3b6f8:	str	xzr, [sp, #200]
   3b6fc:	str	wzr, [sp, #196]
   3b700:	ldr	x0, [sp, #184]
   3b704:	str	x0, [sp, #176]
   3b708:	mov	w0, #0x1                   	// #1
   3b70c:	str	w0, [sp, #172]
   3b710:	b	3bc40 <__sanitizer_set_death_callback@@Base+0x5fa0>
   3b714:	ldr	x0, [sp, #40]
   3b718:	ldr	w0, [x0, #48]
   3b71c:	mov	w1, w0
   3b720:	ldr	x0, [sp, #24]
   3b724:	bl	38b04 <__sanitizer_set_death_callback@@Base+0x2e64>
   3b728:	str	x0, [sp, #200]
   3b72c:	b	3bc40 <__sanitizer_set_death_callback@@Base+0x5fa0>
   3b730:	ldr	x0, [sp, #24]
   3b734:	bl	38690 <__sanitizer_set_death_callback@@Base+0x29f0>
   3b738:	str	x0, [sp, #112]
   3b73c:	ldr	x0, [sp, #112]
   3b740:	cmp	x0, #0x0
   3b744:	b.ne	3b750 <__sanitizer_set_death_callback@@Base+0x5ab0>  // b.any
   3b748:	mov	w0, #0x0                   	// #0
   3b74c:	b	3bc54 <__sanitizer_set_death_callback@@Base+0x5fb4>
   3b750:	ldr	x0, [sp, #24]
   3b754:	bl	38c7c <__sanitizer_set_death_callback@@Base+0x2fdc>
   3b758:	str	w0, [sp, #108]
   3b75c:	ldr	x0, [sp, #24]
   3b760:	bl	38c7c <__sanitizer_set_death_callback@@Base+0x2fdc>
   3b764:	ldr	x0, [sp, #24]
   3b768:	bl	38c7c <__sanitizer_set_death_callback@@Base+0x2fdc>
   3b76c:	ldr	x0, [sp, #112]
   3b770:	ldrb	w0, [x0]
   3b774:	cmp	w0, #0x2f
   3b778:	b.ne	3b788 <__sanitizer_set_death_callback@@Base+0x5ae8>  // b.any
   3b77c:	ldr	x0, [sp, #112]
   3b780:	str	x0, [sp, #176]
   3b784:	b	3bc40 <__sanitizer_set_death_callback@@Base+0x5fa0>
   3b788:	ldr	w0, [sp, #108]
   3b78c:	cmp	w0, #0x0
   3b790:	b.ne	3b7a4 <__sanitizer_set_death_callback@@Base+0x5b04>  // b.any
   3b794:	ldr	x0, [sp, #40]
   3b798:	ldr	x0, [x0, #72]
   3b79c:	str	x0, [sp, #160]
   3b7a0:	b	3b800 <__sanitizer_set_death_callback@@Base+0x5b60>
   3b7a4:	ldr	w0, [sp, #108]
   3b7a8:	sub	w0, w0, #0x1
   3b7ac:	mov	w1, w0
   3b7b0:	ldr	x0, [sp, #32]
   3b7b4:	ldr	x0, [x0, #32]
   3b7b8:	cmp	x1, x0
   3b7bc:	b.cs	3b7e8 <__sanitizer_set_death_callback@@Base+0x5b48>  // b.hs, b.nlast
   3b7c0:	ldr	x0, [sp, #32]
   3b7c4:	ldr	x1, [x0, #40]
   3b7c8:	ldr	w0, [sp, #108]
   3b7cc:	sub	w0, w0, #0x1
   3b7d0:	mov	w0, w0
   3b7d4:	lsl	x0, x0, #3
   3b7d8:	add	x0, x1, x0
   3b7dc:	ldr	x0, [x0]
   3b7e0:	str	x0, [sp, #160]
   3b7e4:	b	3b800 <__sanitizer_set_death_callback@@Base+0x5b60>
   3b7e8:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   3b7ec:	add	x1, x0, #0xf78
   3b7f0:	ldr	x0, [sp, #24]
   3b7f4:	bl	3854c <__sanitizer_set_death_callback@@Base+0x28ac>
   3b7f8:	mov	w0, #0x0                   	// #0
   3b7fc:	b	3bc54 <__sanitizer_set_death_callback@@Base+0x5fb4>
   3b800:	ldr	x0, [sp, #160]
   3b804:	bl	6a20 <__asan_internal_strlen@plt>
   3b808:	str	x0, [sp, #96]
   3b80c:	ldr	x0, [sp, #112]
   3b810:	bl	6a20 <__asan_internal_strlen@plt>
   3b814:	str	x0, [sp, #88]
   3b818:	ldr	x1, [sp, #96]
   3b81c:	ldr	x0, [sp, #88]
   3b820:	add	x0, x1, x0
   3b824:	add	x1, x0, #0x2
   3b828:	ldr	x0, [sp, #24]
   3b82c:	ldr	x2, [x0, #40]
   3b830:	ldr	x0, [sp, #24]
   3b834:	ldr	x0, [x0, #48]
   3b838:	mov	x3, x0
   3b83c:	ldr	x0, [sp, #56]
   3b840:	bl	6b10 <__asan_backtrace_alloc@plt>
   3b844:	str	x0, [sp, #80]
   3b848:	ldr	x0, [sp, #80]
   3b84c:	cmp	x0, #0x0
   3b850:	b.ne	3b85c <__sanitizer_set_death_callback@@Base+0x5bbc>  // b.any
   3b854:	mov	w0, #0x0                   	// #0
   3b858:	b	3bc54 <__sanitizer_set_death_callback@@Base+0x5fb4>
   3b85c:	ldr	x2, [sp, #96]
   3b860:	ldr	x1, [sp, #160]
   3b864:	ldr	x0, [sp, #80]
   3b868:	bl	6a10 <__asan_internal_memcpy@plt>
   3b86c:	ldr	x1, [sp, #80]
   3b870:	ldr	x0, [sp, #96]
   3b874:	add	x0, x1, x0
   3b878:	mov	w1, #0x2f                  	// #47
   3b87c:	strb	w1, [x0]
   3b880:	ldr	x0, [sp, #96]
   3b884:	add	x0, x0, #0x1
   3b888:	ldr	x1, [sp, #80]
   3b88c:	add	x3, x1, x0
   3b890:	ldr	x0, [sp, #88]
   3b894:	add	x0, x0, #0x1
   3b898:	mov	x2, x0
   3b89c:	ldr	x1, [sp, #112]
   3b8a0:	mov	x0, x3
   3b8a4:	bl	6a10 <__asan_internal_memcpy@plt>
   3b8a8:	ldr	x0, [sp, #80]
   3b8ac:	str	x0, [sp, #176]
   3b8b0:	b	3bc40 <__sanitizer_set_death_callback@@Base+0x5fa0>
   3b8b4:	ldr	x0, [sp, #24]
   3b8b8:	bl	38c7c <__sanitizer_set_death_callback@@Base+0x2fdc>
   3b8bc:	b	3bc40 <__sanitizer_set_death_callback@@Base+0x5fa0>
   3b8c0:	ldr	x0, [sp, #120]
   3b8c4:	sub	x0, x0, #0x1
   3b8c8:	mov	x1, x0
   3b8cc:	ldr	x0, [sp, #24]
   3b8d0:	bl	38628 <__sanitizer_set_death_callback@@Base+0x2988>
   3b8d4:	cmp	w0, #0x0
   3b8d8:	b.ne	3b8e4 <__sanitizer_set_death_callback@@Base+0x5c44>  // b.any
   3b8dc:	mov	w0, #0x0                   	// #0
   3b8e0:	b	3bc54 <__sanitizer_set_death_callback@@Base+0x5fb4>
   3b8e4:	nop
   3b8e8:	b	3bc40 <__sanitizer_set_death_callback@@Base+0x5fa0>
   3b8ec:	ldr	w0, [sp, #152]
   3b8f0:	cmp	w0, #0xc
   3b8f4:	b.eq	3bbec <__sanitizer_set_death_callback@@Base+0x5f4c>  // b.none
   3b8f8:	ldr	w0, [sp, #152]
   3b8fc:	cmp	w0, #0xc
   3b900:	b.hi	3bbf8 <__sanitizer_set_death_callback@@Base+0x5f58>  // b.pmore
   3b904:	ldr	w0, [sp, #152]
   3b908:	cmp	w0, #0xb
   3b90c:	b.eq	3bc40 <__sanitizer_set_death_callback@@Base+0x5fa0>  // b.none
   3b910:	ldr	w0, [sp, #152]
   3b914:	cmp	w0, #0xb
   3b918:	b.hi	3bbf8 <__sanitizer_set_death_callback@@Base+0x5f58>  // b.pmore
   3b91c:	ldr	w0, [sp, #152]
   3b920:	cmp	w0, #0xa
   3b924:	b.eq	3bc40 <__sanitizer_set_death_callback@@Base+0x5fa0>  // b.none
   3b928:	ldr	w0, [sp, #152]
   3b92c:	cmp	w0, #0xa
   3b930:	b.hi	3bbf8 <__sanitizer_set_death_callback@@Base+0x5f58>  // b.pmore
   3b934:	ldr	w0, [sp, #152]
   3b938:	cmp	w0, #0x9
   3b93c:	b.eq	3bbc8 <__sanitizer_set_death_callback@@Base+0x5f28>  // b.none
   3b940:	ldr	w0, [sp, #152]
   3b944:	cmp	w0, #0x9
   3b948:	b.hi	3bbf8 <__sanitizer_set_death_callback@@Base+0x5f58>  // b.pmore
   3b94c:	ldr	w0, [sp, #152]
   3b950:	cmp	w0, #0x8
   3b954:	b.eq	3bb44 <__sanitizer_set_death_callback@@Base+0x5ea4>  // b.none
   3b958:	ldr	w0, [sp, #152]
   3b95c:	cmp	w0, #0x8
   3b960:	b.hi	3bbf8 <__sanitizer_set_death_callback@@Base+0x5f58>  // b.pmore
   3b964:	ldr	w0, [sp, #152]
   3b968:	cmp	w0, #0x7
   3b96c:	b.eq	3bc40 <__sanitizer_set_death_callback@@Base+0x5fa0>  // b.none
   3b970:	ldr	w0, [sp, #152]
   3b974:	cmp	w0, #0x7
   3b978:	b.hi	3bbf8 <__sanitizer_set_death_callback@@Base+0x5f58>  // b.pmore
   3b97c:	ldr	w0, [sp, #152]
   3b980:	cmp	w0, #0x6
   3b984:	b.eq	3bc40 <__sanitizer_set_death_callback@@Base+0x5fa0>  // b.none
   3b988:	ldr	w0, [sp, #152]
   3b98c:	cmp	w0, #0x6
   3b990:	b.hi	3bbf8 <__sanitizer_set_death_callback@@Base+0x5f58>  // b.pmore
   3b994:	ldr	w0, [sp, #152]
   3b998:	cmp	w0, #0x5
   3b99c:	b.eq	3bb38 <__sanitizer_set_death_callback@@Base+0x5e98>  // b.none
   3b9a0:	ldr	w0, [sp, #152]
   3b9a4:	cmp	w0, #0x5
   3b9a8:	b.hi	3bbf8 <__sanitizer_set_death_callback@@Base+0x5f58>  // b.pmore
   3b9ac:	ldr	w0, [sp, #152]
   3b9b0:	cmp	w0, #0x4
   3b9b4:	b.eq	3babc <__sanitizer_set_death_callback@@Base+0x5e1c>  // b.none
   3b9b8:	ldr	w0, [sp, #152]
   3b9bc:	cmp	w0, #0x4
   3b9c0:	b.hi	3bbf8 <__sanitizer_set_death_callback@@Base+0x5f58>  // b.pmore
   3b9c4:	ldr	w0, [sp, #152]
   3b9c8:	cmp	w0, #0x3
   3b9cc:	b.eq	3baa0 <__sanitizer_set_death_callback@@Base+0x5e00>  // b.none
   3b9d0:	ldr	w0, [sp, #152]
   3b9d4:	cmp	w0, #0x3
   3b9d8:	b.hi	3bbf8 <__sanitizer_set_death_callback@@Base+0x5f58>  // b.pmore
   3b9dc:	ldr	w0, [sp, #152]
   3b9e0:	cmp	w0, #0x1
   3b9e4:	b.eq	3b9f8 <__sanitizer_set_death_callback@@Base+0x5d58>  // b.none
   3b9e8:	ldr	w0, [sp, #152]
   3b9ec:	cmp	w0, #0x2
   3b9f0:	b.eq	3ba30 <__sanitizer_set_death_callback@@Base+0x5d90>  // b.none
   3b9f4:	b	3bbf8 <__sanitizer_set_death_callback@@Base+0x5f58>
   3b9f8:	ldr	x0, [sp, #24]
   3b9fc:	ldr	x1, [x0, #40]
   3ba00:	ldr	x0, [sp, #24]
   3ba04:	ldr	x0, [x0, #48]
   3ba08:	ldr	x7, [sp, #16]
   3ba0c:	mov	x6, x0
   3ba10:	mov	x5, x1
   3ba14:	ldr	w4, [sp, #172]
   3ba18:	ldr	x3, [sp, #176]
   3ba1c:	ldr	x2, [sp, #200]
   3ba20:	ldr	x1, [sp, #48]
   3ba24:	ldr	x0, [sp, #56]
   3ba28:	bl	3acfc <__sanitizer_set_death_callback@@Base+0x505c>
   3ba2c:	b	3bc40 <__sanitizer_set_death_callback@@Base+0x5fa0>
   3ba30:	ldr	x0, [sp, #24]
   3ba34:	bl	38c7c <__sanitizer_set_death_callback@@Base+0x2fdc>
   3ba38:	str	x0, [sp, #128]
   3ba3c:	ldr	x0, [sp, #32]
   3ba40:	ldr	w0, [x0, #4]
   3ba44:	mov	w1, w0
   3ba48:	ldr	w2, [sp, #196]
   3ba4c:	ldr	x0, [sp, #128]
   3ba50:	add	x0, x2, x0
   3ba54:	mul	x1, x1, x0
   3ba58:	ldr	x0, [sp, #32]
   3ba5c:	ldr	w0, [x0, #8]
   3ba60:	mov	w0, w0
   3ba64:	udiv	x0, x1, x0
   3ba68:	ldr	x1, [sp, #200]
   3ba6c:	add	x0, x1, x0
   3ba70:	str	x0, [sp, #200]
   3ba74:	ldr	w1, [sp, #196]
   3ba78:	ldr	x0, [sp, #128]
   3ba7c:	add	x0, x1, x0
   3ba80:	ldr	x1, [sp, #32]
   3ba84:	ldr	w1, [x1, #8]
   3ba88:	mov	w1, w1
   3ba8c:	udiv	x2, x0, x1
   3ba90:	mul	x1, x2, x1
   3ba94:	sub	x0, x0, x1
   3ba98:	str	w0, [sp, #196]
   3ba9c:	b	3bc40 <__sanitizer_set_death_callback@@Base+0x5fa0>
   3baa0:	ldr	x0, [sp, #24]
   3baa4:	bl	38d3c <__sanitizer_set_death_callback@@Base+0x309c>
   3baa8:	mov	w1, w0
   3baac:	ldr	w0, [sp, #172]
   3bab0:	add	w0, w0, w1
   3bab4:	str	w0, [sp, #172]
   3bab8:	b	3bc40 <__sanitizer_set_death_callback@@Base+0x5fa0>
   3babc:	ldr	x0, [sp, #24]
   3bac0:	bl	38c7c <__sanitizer_set_death_callback@@Base+0x2fdc>
   3bac4:	str	x0, [sp, #136]
   3bac8:	ldr	x0, [sp, #136]
   3bacc:	cmp	x0, #0x0
   3bad0:	b.ne	3bae4 <__sanitizer_set_death_callback@@Base+0x5e44>  // b.any
   3bad4:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   3bad8:	add	x0, x0, #0xf70
   3badc:	str	x0, [sp, #176]
   3bae0:	b	3bc40 <__sanitizer_set_death_callback@@Base+0x5fa0>
   3bae4:	ldr	x0, [sp, #136]
   3bae8:	sub	x1, x0, #0x1
   3baec:	ldr	x0, [sp, #32]
   3baf0:	ldr	x0, [x0, #48]
   3baf4:	cmp	x1, x0
   3baf8:	b.cc	3bb14 <__sanitizer_set_death_callback@@Base+0x5e74>  // b.lo, b.ul, b.last
   3bafc:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   3bb00:	add	x1, x0, #0xfa8
   3bb04:	ldr	x0, [sp, #24]
   3bb08:	bl	3854c <__sanitizer_set_death_callback@@Base+0x28ac>
   3bb0c:	mov	w0, #0x0                   	// #0
   3bb10:	b	3bc54 <__sanitizer_set_death_callback@@Base+0x5fb4>
   3bb14:	ldr	x0, [sp, #32]
   3bb18:	ldr	x1, [x0, #56]
   3bb1c:	ldr	x0, [sp, #136]
   3bb20:	lsl	x0, x0, #3
   3bb24:	sub	x0, x0, #0x8
   3bb28:	add	x0, x1, x0
   3bb2c:	ldr	x0, [x0]
   3bb30:	str	x0, [sp, #176]
   3bb34:	b	3bc40 <__sanitizer_set_death_callback@@Base+0x5fa0>
   3bb38:	ldr	x0, [sp, #24]
   3bb3c:	bl	38c7c <__sanitizer_set_death_callback@@Base+0x2fdc>
   3bb40:	b	3bc40 <__sanitizer_set_death_callback@@Base+0x5fa0>
   3bb44:	ldr	x0, [sp, #32]
   3bb48:	ldr	w0, [x0, #20]
   3bb4c:	mov	w1, #0xff                  	// #255
   3bb50:	sub	w0, w1, w0
   3bb54:	str	w0, [sp, #152]
   3bb58:	ldr	x0, [sp, #32]
   3bb5c:	ldr	w0, [x0, #16]
   3bb60:	ldr	w1, [sp, #152]
   3bb64:	udiv	w0, w1, w0
   3bb68:	str	w0, [sp, #148]
   3bb6c:	ldr	x0, [sp, #32]
   3bb70:	ldr	w1, [x0, #4]
   3bb74:	ldr	w2, [sp, #196]
   3bb78:	ldr	w0, [sp, #148]
   3bb7c:	add	w0, w2, w0
   3bb80:	mul	w1, w1, w0
   3bb84:	ldr	x0, [sp, #32]
   3bb88:	ldr	w0, [x0, #8]
   3bb8c:	udiv	w0, w1, w0
   3bb90:	mov	w0, w0
   3bb94:	ldr	x1, [sp, #200]
   3bb98:	add	x0, x1, x0
   3bb9c:	str	x0, [sp, #200]
   3bba0:	ldr	w1, [sp, #196]
   3bba4:	ldr	w0, [sp, #148]
   3bba8:	add	w0, w1, w0
   3bbac:	ldr	x1, [sp, #32]
   3bbb0:	ldr	w1, [x1, #8]
   3bbb4:	udiv	w2, w0, w1
   3bbb8:	mul	w1, w2, w1
   3bbbc:	sub	w0, w0, w1
   3bbc0:	str	w0, [sp, #196]
   3bbc4:	b	3bc40 <__sanitizer_set_death_callback@@Base+0x5fa0>
   3bbc8:	ldr	x0, [sp, #24]
   3bbcc:	bl	38790 <__sanitizer_set_death_callback@@Base+0x2af0>
   3bbd0:	and	w0, w0, #0xffff
   3bbd4:	and	x0, x0, #0xffff
   3bbd8:	ldr	x1, [sp, #200]
   3bbdc:	add	x0, x1, x0
   3bbe0:	str	x0, [sp, #200]
   3bbe4:	str	wzr, [sp, #196]
   3bbe8:	b	3bc40 <__sanitizer_set_death_callback@@Base+0x5fa0>
   3bbec:	ldr	x0, [sp, #24]
   3bbf0:	bl	38c7c <__sanitizer_set_death_callback@@Base+0x2fdc>
   3bbf4:	b	3bc40 <__sanitizer_set_death_callback@@Base+0x5fa0>
   3bbf8:	ldr	x0, [sp, #32]
   3bbfc:	ldr	x1, [x0, #24]
   3bc00:	ldr	w0, [sp, #152]
   3bc04:	sub	w0, w0, #0x1
   3bc08:	mov	w0, w0
   3bc0c:	add	x0, x1, x0
   3bc10:	ldrb	w0, [x0]
   3bc14:	str	w0, [sp, #156]
   3bc18:	b	3bc30 <__sanitizer_set_death_callback@@Base+0x5f90>
   3bc1c:	ldr	x0, [sp, #24]
   3bc20:	bl	38c7c <__sanitizer_set_death_callback@@Base+0x2fdc>
   3bc24:	ldr	w0, [sp, #156]
   3bc28:	sub	w0, w0, #0x1
   3bc2c:	str	w0, [sp, #156]
   3bc30:	ldr	w0, [sp, #156]
   3bc34:	cmp	w0, #0x0
   3bc38:	b.ne	3bc1c <__sanitizer_set_death_callback@@Base+0x5f7c>  // b.any
   3bc3c:	nop
   3bc40:	ldr	x0, [sp, #24]
   3bc44:	ldr	x0, [x0, #24]
   3bc48:	cmp	x0, #0x0
   3bc4c:	b.ne	3b578 <__sanitizer_set_death_callback@@Base+0x58d8>  // b.any
   3bc50:	mov	w0, #0x1                   	// #1
   3bc54:	ldp	x29, x30, [sp], #208
   3bc58:	ret
   3bc5c:	stp	x29, x30, [sp, #-208]!
   3bc60:	mov	x29, sp
   3bc64:	str	x0, [sp, #72]
   3bc68:	str	x1, [sp, #64]
   3bc6c:	str	x2, [sp, #56]
   3bc70:	str	x3, [sp, #48]
   3bc74:	str	x4, [sp, #40]
   3bc78:	str	x5, [sp, #32]
   3bc7c:	str	x6, [sp, #24]
   3bc80:	str	x7, [sp, #16]
   3bc84:	add	x0, sp, #0xa0
   3bc88:	mov	x2, #0x18                  	// #24
   3bc8c:	mov	w1, #0x0                   	// #0
   3bc90:	bl	6ab0 <__asan_internal_memset@plt>
   3bc94:	str	xzr, [sp, #184]
   3bc98:	mov	x2, #0x40                  	// #64
   3bc9c:	mov	w1, #0x0                   	// #0
   3bca0:	ldr	x0, [sp, #32]
   3bca4:	bl	6ab0 <__asan_internal_memset@plt>
   3bca8:	ldr	x0, [sp, #40]
   3bcac:	ldr	x0, [x0, #56]
   3bcb0:	mov	x1, x0
   3bcb4:	ldr	x0, [sp, #64]
   3bcb8:	ldr	x0, [x0, #80]
   3bcbc:	cmp	x1, x0
   3bcc0:	b.cc	3bce0 <__sanitizer_set_death_callback@@Base+0x6040>  // b.lo, b.ul, b.last
   3bcc4:	ldr	x3, [sp, #56]
   3bcc8:	mov	w2, #0x0                   	// #0
   3bccc:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   3bcd0:	add	x1, x0, #0xfd8
   3bcd4:	ldr	x0, [sp, #48]
   3bcd8:	blr	x3
   3bcdc:	b	3bea8 <__sanitizer_set_death_callback@@Base+0x6208>
   3bce0:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   3bce4:	add	x0, x0, #0xff8
   3bce8:	str	x0, [sp, #96]
   3bcec:	ldr	x0, [sp, #64]
   3bcf0:	ldr	x0, [x0, #72]
   3bcf4:	str	x0, [sp, #104]
   3bcf8:	ldr	x0, [sp, #64]
   3bcfc:	ldr	x0, [x0, #72]
   3bd00:	ldr	x1, [sp, #40]
   3bd04:	ldr	x1, [x1, #56]
   3bd08:	add	x0, x0, x1
   3bd0c:	str	x0, [sp, #112]
   3bd10:	ldr	x0, [sp, #64]
   3bd14:	ldr	x0, [x0, #80]
   3bd18:	ldr	x1, [sp, #40]
   3bd1c:	ldr	x1, [x1, #56]
   3bd20:	sub	x0, x0, x1
   3bd24:	str	x0, [sp, #120]
   3bd28:	ldr	x0, [sp, #64]
   3bd2c:	ldr	w0, [x0, #120]
   3bd30:	str	w0, [sp, #128]
   3bd34:	ldr	x0, [sp, #56]
   3bd38:	str	x0, [sp, #136]
   3bd3c:	ldr	x0, [sp, #48]
   3bd40:	str	x0, [sp, #144]
   3bd44:	str	wzr, [sp, #152]
   3bd48:	add	x1, sp, #0x5c
   3bd4c:	add	x0, sp, #0x60
   3bd50:	bl	38e7c <__sanitizer_set_death_callback@@Base+0x31dc>
   3bd54:	str	x0, [sp, #200]
   3bd58:	ldr	x0, [sp, #200]
   3bd5c:	str	x0, [sp, #120]
   3bd60:	ldr	w0, [sp, #92]
   3bd64:	add	x1, sp, #0x60
   3bd68:	ldr	x4, [sp, #32]
   3bd6c:	mov	x3, x1
   3bd70:	mov	w2, w0
   3bd74:	ldr	x1, [sp, #40]
   3bd78:	ldr	x0, [sp, #72]
   3bd7c:	bl	3aec0 <__sanitizer_set_death_callback@@Base+0x5220>
   3bd80:	cmp	w0, #0x0
   3bd84:	b.eq	3be7c <__sanitizer_set_death_callback@@Base+0x61dc>  // b.none
   3bd88:	add	x1, sp, #0xa0
   3bd8c:	add	x0, sp, #0x60
   3bd90:	mov	x5, x1
   3bd94:	mov	x4, x0
   3bd98:	ldr	x3, [sp, #32]
   3bd9c:	ldr	x2, [sp, #40]
   3bda0:	ldr	x1, [sp, #64]
   3bda4:	ldr	x0, [sp, #72]
   3bda8:	bl	3b50c <__sanitizer_set_death_callback@@Base+0x586c>
   3bdac:	cmp	w0, #0x0
   3bdb0:	b.eq	3be84 <__sanitizer_set_death_callback@@Base+0x61e4>  // b.none
   3bdb4:	ldr	w0, [sp, #152]
   3bdb8:	cmp	w0, #0x0
   3bdbc:	b.ne	3be8c <__sanitizer_set_death_callback@@Base+0x61ec>  // b.any
   3bdc0:	ldr	x0, [sp, #184]
   3bdc4:	cmp	x0, #0x0
   3bdc8:	b.eq	3be94 <__sanitizer_set_death_callback@@Base+0x61f4>  // b.none
   3bdcc:	add	x0, sp, #0xa0
   3bdd0:	mov	x4, x0
   3bdd4:	ldr	x3, [sp, #48]
   3bdd8:	ldr	x2, [sp, #56]
   3bddc:	mov	x1, #0x18                  	// #24
   3bde0:	ldr	x0, [sp, #72]
   3bde4:	bl	6a90 <__asan_backtrace_vector_grow@plt>
   3bde8:	str	x0, [sp, #192]
   3bdec:	ldr	x0, [sp, #192]
   3bdf0:	cmp	x0, #0x0
   3bdf4:	b.eq	3be9c <__sanitizer_set_death_callback@@Base+0x61fc>  // b.none
   3bdf8:	ldr	x0, [sp, #192]
   3bdfc:	mov	x1, #0xffffffffffffffff    	// #-1
   3be00:	str	x1, [x0]
   3be04:	ldr	x0, [sp, #192]
   3be08:	str	xzr, [x0, #8]
   3be0c:	ldr	x0, [sp, #192]
   3be10:	str	wzr, [x0, #16]
   3be14:	ldr	x0, [sp, #192]
   3be18:	str	wzr, [x0, #20]
   3be1c:	add	x0, sp, #0xa0
   3be20:	ldr	x3, [sp, #48]
   3be24:	ldr	x2, [sp, #56]
   3be28:	mov	x1, x0
   3be2c:	ldr	x0, [sp, #72]
   3be30:	bl	6b60 <__asan_backtrace_vector_release@plt>
   3be34:	cmp	w0, #0x0
   3be38:	b.eq	3bea4 <__sanitizer_set_death_callback@@Base+0x6204>  // b.none
   3be3c:	ldr	x0, [sp, #160]
   3be40:	str	x0, [sp, #192]
   3be44:	ldr	x1, [sp, #184]
   3be48:	adrp	x0, 39000 <__sanitizer_set_death_callback@@Base+0x3360>
   3be4c:	add	x3, x0, #0xb28
   3be50:	mov	x2, #0x18                  	// #24
   3be54:	ldr	x0, [sp, #192]
   3be58:	bl	68f0 <__asan_backtrace_qsort@plt>
   3be5c:	ldr	x0, [sp, #24]
   3be60:	ldr	x1, [sp, #192]
   3be64:	str	x1, [x0]
   3be68:	ldr	x1, [sp, #184]
   3be6c:	ldr	x0, [sp, #16]
   3be70:	str	x1, [x0]
   3be74:	mov	w0, #0x1                   	// #1
   3be78:	b	3beec <__sanitizer_set_death_callback@@Base+0x624c>
   3be7c:	nop
   3be80:	b	3bea8 <__sanitizer_set_death_callback@@Base+0x6208>
   3be84:	nop
   3be88:	b	3bea8 <__sanitizer_set_death_callback@@Base+0x6208>
   3be8c:	nop
   3be90:	b	3bea8 <__sanitizer_set_death_callback@@Base+0x6208>
   3be94:	nop
   3be98:	b	3bea8 <__sanitizer_set_death_callback@@Base+0x6208>
   3be9c:	nop
   3bea0:	b	3bea8 <__sanitizer_set_death_callback@@Base+0x6208>
   3bea4:	nop
   3bea8:	add	x0, sp, #0xa0
   3beac:	ldr	x3, [sp, #48]
   3beb0:	ldr	x2, [sp, #56]
   3beb4:	mov	x1, x0
   3beb8:	ldr	x0, [sp, #72]
   3bebc:	bl	384f0 <__sanitizer_set_death_callback@@Base+0x2850>
   3bec0:	ldr	x3, [sp, #48]
   3bec4:	ldr	x2, [sp, #56]
   3bec8:	ldr	x1, [sp, #32]
   3becc:	ldr	x0, [sp, #72]
   3bed0:	bl	3ae3c <__sanitizer_set_death_callback@@Base+0x519c>
   3bed4:	ldr	x0, [sp, #24]
   3bed8:	mov	x1, #0xffffffffffffffff    	// #-1
   3bedc:	str	x1, [x0]
   3bee0:	ldr	x0, [sp, #16]
   3bee4:	str	xzr, [x0]
   3bee8:	mov	w0, #0x0                   	// #0
   3beec:	ldp	x29, x30, [sp], #208
   3bef0:	ret
   3bef4:	stp	x29, x30, [sp, #-96]!
   3bef8:	mov	x29, sp
   3befc:	str	x0, [sp, #56]
   3bf00:	str	x1, [sp, #48]
   3bf04:	str	x2, [sp, #40]
   3bf08:	str	x3, [sp, #32]
   3bf0c:	str	x4, [sp, #24]
   3bf10:	str	x5, [sp, #16]
   3bf14:	ldr	x0, [sp, #40]
   3bf18:	ldr	w0, [x0]
   3bf1c:	cmp	w0, #0x31
   3bf20:	b.eq	3bf34 <__sanitizer_set_death_callback@@Base+0x6294>  // b.none
   3bf24:	cmp	w0, #0x47
   3bf28:	b.eq	3bf34 <__sanitizer_set_death_callback@@Base+0x6294>  // b.none
   3bf2c:	mov	x0, #0x0                   	// #0
   3bf30:	b	3c0a4 <__sanitizer_set_death_callback@@Base+0x6404>
   3bf34:	nop
   3bf38:	ldr	x0, [sp, #40]
   3bf3c:	ldr	w0, [x0, #4]
   3bf40:	cmp	w0, #0x20
   3bf44:	b.ne	3bf50 <__sanitizer_set_death_callback@@Base+0x62b0>  // b.any
   3bf48:	mov	x0, #0x0                   	// #0
   3bf4c:	b	3c0a4 <__sanitizer_set_death_callback@@Base+0x6404>
   3bf50:	ldr	x0, [sp, #32]
   3bf54:	ldr	w0, [x0]
   3bf58:	cmp	w0, #0x6
   3bf5c:	b.ne	3bfd0 <__sanitizer_set_death_callback@@Base+0x6330>  // b.any
   3bf60:	ldr	x0, [sp, #56]
   3bf64:	ldr	x3, [x0, #40]
   3bf68:	ldr	x0, [sp, #56]
   3bf6c:	ldr	x1, [x0, #48]
   3bf70:	ldr	x0, [sp, #32]
   3bf74:	ldr	x0, [x0, #8]
   3bf78:	mov	x2, x0
   3bf7c:	mov	x0, x3
   3bf80:	bl	396d4 <__sanitizer_set_death_callback@@Base+0x3a34>
   3bf84:	str	x0, [sp, #72]
   3bf88:	ldr	x0, [sp, #72]
   3bf8c:	cmp	x0, #0x0
   3bf90:	b.ne	3bf9c <__sanitizer_set_death_callback@@Base+0x62fc>  // b.any
   3bf94:	mov	x0, #0x0                   	// #0
   3bf98:	b	3c0a4 <__sanitizer_set_death_callback@@Base+0x6404>
   3bf9c:	ldr	x0, [sp, #32]
   3bfa0:	ldr	x1, [x0, #8]
   3bfa4:	ldr	x0, [sp, #72]
   3bfa8:	ldr	x0, [x0, #24]
   3bfac:	sub	x0, x1, x0
   3bfb0:	str	x0, [sp, #64]
   3bfb4:	ldr	x4, [sp, #16]
   3bfb8:	ldr	x3, [sp, #24]
   3bfbc:	ldr	x2, [sp, #64]
   3bfc0:	ldr	x1, [sp, #72]
   3bfc4:	ldr	x0, [sp, #56]
   3bfc8:	bl	3c0ac <__sanitizer_set_death_callback@@Base+0x640c>
   3bfcc:	b	3c0a4 <__sanitizer_set_death_callback@@Base+0x6404>
   3bfd0:	ldr	x0, [sp, #32]
   3bfd4:	ldr	w0, [x0]
   3bfd8:	cmp	w0, #0x2
   3bfdc:	b.eq	3bff0 <__sanitizer_set_death_callback@@Base+0x6350>  // b.none
   3bfe0:	ldr	x0, [sp, #32]
   3bfe4:	ldr	w0, [x0]
   3bfe8:	cmp	w0, #0x5
   3bfec:	b.ne	3c014 <__sanitizer_set_death_callback@@Base+0x6374>  // b.any
   3bff0:	ldr	x0, [sp, #32]
   3bff4:	ldr	x0, [x0, #8]
   3bff8:	ldr	x4, [sp, #16]
   3bffc:	ldr	x3, [sp, #24]
   3c000:	mov	x2, x0
   3c004:	ldr	x1, [sp, #48]
   3c008:	ldr	x0, [sp, #56]
   3c00c:	bl	3c0ac <__sanitizer_set_death_callback@@Base+0x640c>
   3c010:	b	3c0a4 <__sanitizer_set_death_callback@@Base+0x6404>
   3c014:	ldr	x0, [sp, #32]
   3c018:	ldr	w0, [x0]
   3c01c:	cmp	w0, #0x7
   3c020:	b.ne	3c0a0 <__sanitizer_set_death_callback@@Base+0x6400>  // b.any
   3c024:	ldr	x0, [sp, #56]
   3c028:	ldr	x0, [x0, #8]
   3c02c:	ldr	x3, [x0, #40]
   3c030:	ldr	x0, [sp, #56]
   3c034:	ldr	x0, [x0, #8]
   3c038:	ldr	x1, [x0, #48]
   3c03c:	ldr	x0, [sp, #32]
   3c040:	ldr	x0, [x0, #8]
   3c044:	mov	x2, x0
   3c048:	mov	x0, x3
   3c04c:	bl	396d4 <__sanitizer_set_death_callback@@Base+0x3a34>
   3c050:	str	x0, [sp, #88]
   3c054:	ldr	x0, [sp, #88]
   3c058:	cmp	x0, #0x0
   3c05c:	b.ne	3c068 <__sanitizer_set_death_callback@@Base+0x63c8>  // b.any
   3c060:	mov	x0, #0x0                   	// #0
   3c064:	b	3c0a4 <__sanitizer_set_death_callback@@Base+0x6404>
   3c068:	ldr	x0, [sp, #32]
   3c06c:	ldr	x1, [x0, #8]
   3c070:	ldr	x0, [sp, #88]
   3c074:	ldr	x0, [x0, #24]
   3c078:	sub	x0, x1, x0
   3c07c:	str	x0, [sp, #80]
   3c080:	ldr	x0, [sp, #56]
   3c084:	ldr	x0, [x0, #8]
   3c088:	ldr	x4, [sp, #16]
   3c08c:	ldr	x3, [sp, #24]
   3c090:	ldr	x2, [sp, #80]
   3c094:	ldr	x1, [sp, #88]
   3c098:	bl	3c0ac <__sanitizer_set_death_callback@@Base+0x640c>
   3c09c:	b	3c0a4 <__sanitizer_set_death_callback@@Base+0x6404>
   3c0a0:	mov	x0, #0x0                   	// #0
   3c0a4:	ldp	x29, x30, [sp], #96
   3c0a8:	ret
   3c0ac:	sub	sp, sp, #0xd0
   3c0b0:	stp	x29, x30, [sp, #16]
   3c0b4:	add	x29, sp, #0x10
   3c0b8:	str	x0, [sp, #72]
   3c0bc:	str	x1, [sp, #64]
   3c0c0:	str	x2, [sp, #56]
   3c0c4:	str	x3, [sp, #48]
   3c0c8:	str	x4, [sp, #40]
   3c0cc:	ldr	x0, [sp, #64]
   3c0d0:	ldr	x0, [x0, #16]
   3c0d4:	ldr	x1, [sp, #56]
   3c0d8:	cmp	x1, x0
   3c0dc:	b.cc	3c100 <__sanitizer_set_death_callback@@Base+0x6460>  // b.lo, b.ul, b.last
   3c0e0:	ldr	x0, [sp, #64]
   3c0e4:	ldr	x0, [x0, #16]
   3c0e8:	ldr	x1, [sp, #56]
   3c0ec:	sub	x1, x1, x0
   3c0f0:	ldr	x0, [sp, #64]
   3c0f4:	ldr	x0, [x0, #8]
   3c0f8:	cmp	x1, x0
   3c0fc:	b.cc	3c120 <__sanitizer_set_death_callback@@Base+0x6480>  // b.lo, b.ul, b.last
   3c100:	ldr	x3, [sp, #48]
   3c104:	mov	w2, #0x0                   	// #0
   3c108:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   3c10c:	add	x1, x0, #0x8
   3c110:	ldr	x0, [sp, #40]
   3c114:	blr	x3
   3c118:	mov	x0, #0x0                   	// #0
   3c11c:	b	3c394 <__sanitizer_set_death_callback@@Base+0x66f4>
   3c120:	ldr	x0, [sp, #64]
   3c124:	ldr	x0, [x0, #16]
   3c128:	ldr	x1, [sp, #56]
   3c12c:	sub	x0, x1, x0
   3c130:	str	x0, [sp, #56]
   3c134:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   3c138:	add	x0, x0, #0xee8
   3c13c:	str	x0, [sp, #104]
   3c140:	ldr	x0, [sp, #72]
   3c144:	ldr	x0, [x0, #56]
   3c148:	str	x0, [sp, #112]
   3c14c:	ldr	x0, [sp, #64]
   3c150:	ldr	x1, [x0]
   3c154:	ldr	x0, [sp, #56]
   3c158:	add	x0, x1, x0
   3c15c:	str	x0, [sp, #120]
   3c160:	ldr	x0, [sp, #64]
   3c164:	ldr	x1, [x0, #8]
   3c168:	ldr	x0, [sp, #56]
   3c16c:	sub	x0, x1, x0
   3c170:	str	x0, [sp, #128]
   3c174:	ldr	x0, [sp, #72]
   3c178:	ldr	w0, [x0, #120]
   3c17c:	str	w0, [sp, #136]
   3c180:	ldr	x0, [sp, #48]
   3c184:	str	x0, [sp, #144]
   3c188:	ldr	x0, [sp, #40]
   3c18c:	str	x0, [sp, #152]
   3c190:	str	wzr, [sp, #160]
   3c194:	add	x0, sp, #0x68
   3c198:	bl	38c7c <__sanitizer_set_death_callback@@Base+0x2fdc>
   3c19c:	str	x0, [sp, #184]
   3c1a0:	ldr	x0, [sp, #184]
   3c1a4:	cmp	x0, #0x0
   3c1a8:	b.ne	3c1c8 <__sanitizer_set_death_callback@@Base+0x6528>  // b.any
   3c1ac:	add	x2, sp, #0x68
   3c1b0:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   3c1b4:	add	x1, x0, #0x38
   3c1b8:	mov	x0, x2
   3c1bc:	bl	3854c <__sanitizer_set_death_callback@@Base+0x28ac>
   3c1c0:	mov	x0, #0x0                   	// #0
   3c1c4:	b	3c394 <__sanitizer_set_death_callback@@Base+0x66f4>
   3c1c8:	ldr	x0, [sp, #64]
   3c1cc:	add	x0, x0, #0x58
   3c1d0:	ldr	x3, [sp, #40]
   3c1d4:	ldr	x2, [sp, #48]
   3c1d8:	ldr	x1, [sp, #184]
   3c1dc:	bl	3a088 <__sanitizer_set_death_callback@@Base+0x43e8>
   3c1e0:	str	x0, [sp, #176]
   3c1e4:	ldr	x0, [sp, #176]
   3c1e8:	cmp	x0, #0x0
   3c1ec:	b.ne	3c1f8 <__sanitizer_set_death_callback@@Base+0x6558>  // b.any
   3c1f0:	mov	x0, #0x0                   	// #0
   3c1f4:	b	3c394 <__sanitizer_set_death_callback@@Base+0x66f4>
   3c1f8:	str	xzr, [sp, #200]
   3c1fc:	str	xzr, [sp, #192]
   3c200:	b	3c37c <__sanitizer_set_death_callback@@Base+0x66dc>
   3c204:	ldr	x0, [sp, #176]
   3c208:	ldr	x1, [x0, #24]
   3c20c:	ldr	x0, [sp, #192]
   3c210:	lsl	x0, x0, #3
   3c214:	add	x0, x1, x0
   3c218:	ldr	w8, [x0, #4]
   3c21c:	ldr	x0, [sp, #64]
   3c220:	ldr	w2, [x0, #44]
   3c224:	ldr	x0, [sp, #64]
   3c228:	ldr	w3, [x0, #40]
   3c22c:	ldr	x0, [sp, #64]
   3c230:	ldr	w4, [x0, #48]
   3c234:	ldr	x0, [sp, #72]
   3c238:	ldr	x5, [x0, #104]
   3c23c:	ldr	x0, [sp, #72]
   3c240:	ldr	x6, [x0, #112]
   3c244:	ldr	x0, [sp, #72]
   3c248:	ldr	x7, [x0, #8]
   3c24c:	add	x1, sp, #0x68
   3c250:	add	x0, sp, #0x58
   3c254:	str	x0, [sp]
   3c258:	mov	w0, w8
   3c25c:	bl	38fac <__sanitizer_set_death_callback@@Base+0x330c>
   3c260:	cmp	w0, #0x0
   3c264:	b.ne	3c270 <__sanitizer_set_death_callback@@Base+0x65d0>  // b.any
   3c268:	mov	x0, #0x0                   	// #0
   3c26c:	b	3c394 <__sanitizer_set_death_callback@@Base+0x66f4>
   3c270:	ldr	x0, [sp, #176]
   3c274:	ldr	x1, [x0, #24]
   3c278:	ldr	x0, [sp, #192]
   3c27c:	lsl	x0, x0, #3
   3c280:	add	x0, x1, x0
   3c284:	ldr	w0, [x0]
   3c288:	mov	w1, #0x2007                	// #8199
   3c28c:	cmp	w0, w1
   3c290:	b.eq	3c2e8 <__sanitizer_set_death_callback@@Base+0x6648>  // b.none
   3c294:	mov	w1, #0x2007                	// #8199
   3c298:	cmp	w0, w1
   3c29c:	b.hi	3c34c <__sanitizer_set_death_callback@@Base+0x66ac>  // b.pmore
   3c2a0:	cmp	w0, #0x6e
   3c2a4:	b.eq	3c2e8 <__sanitizer_set_death_callback@@Base+0x6648>  // b.none
   3c2a8:	cmp	w0, #0x6e
   3c2ac:	b.hi	3c34c <__sanitizer_set_death_callback@@Base+0x66ac>  // b.pmore
   3c2b0:	cmp	w0, #0x3
   3c2b4:	b.eq	3c2c4 <__sanitizer_set_death_callback@@Base+0x6624>  // b.none
   3c2b8:	cmp	w0, #0x47
   3c2bc:	b.eq	3c2fc <__sanitizer_set_death_callback@@Base+0x665c>  // b.none
   3c2c0:	b	3c34c <__sanitizer_set_death_callback@@Base+0x66ac>
   3c2c4:	ldr	x0, [sp, #200]
   3c2c8:	cmp	x0, #0x0
   3c2cc:	b.ne	3c354 <__sanitizer_set_death_callback@@Base+0x66b4>  // b.any
   3c2d0:	ldr	w0, [sp, #88]
   3c2d4:	cmp	w0, #0x4
   3c2d8:	b.ne	3c35c <__sanitizer_set_death_callback@@Base+0x66bc>  // b.any
   3c2dc:	ldr	x0, [sp, #96]
   3c2e0:	str	x0, [sp, #200]
   3c2e4:	b	3c35c <__sanitizer_set_death_callback@@Base+0x66bc>
   3c2e8:	ldr	w0, [sp, #88]
   3c2ec:	cmp	w0, #0x4
   3c2f0:	b.ne	3c364 <__sanitizer_set_death_callback@@Base+0x66c4>  // b.any
   3c2f4:	ldr	x0, [sp, #96]
   3c2f8:	b	3c394 <__sanitizer_set_death_callback@@Base+0x66f4>
   3c2fc:	ldr	x0, [sp, #176]
   3c300:	ldr	x1, [x0, #24]
   3c304:	ldr	x0, [sp, #192]
   3c308:	lsl	x0, x0, #3
   3c30c:	add	x0, x1, x0
   3c310:	add	x1, sp, #0x58
   3c314:	ldr	x5, [sp, #40]
   3c318:	ldr	x4, [sp, #48]
   3c31c:	mov	x3, x1
   3c320:	mov	x2, x0
   3c324:	ldr	x1, [sp, #64]
   3c328:	ldr	x0, [sp, #72]
   3c32c:	bl	3bef4 <__sanitizer_set_death_callback@@Base+0x6254>
   3c330:	str	x0, [sp, #168]
   3c334:	ldr	x0, [sp, #168]
   3c338:	cmp	x0, #0x0
   3c33c:	b.eq	3c36c <__sanitizer_set_death_callback@@Base+0x66cc>  // b.none
   3c340:	ldr	x0, [sp, #168]
   3c344:	str	x0, [sp, #200]
   3c348:	b	3c36c <__sanitizer_set_death_callback@@Base+0x66cc>
   3c34c:	nop
   3c350:	b	3c370 <__sanitizer_set_death_callback@@Base+0x66d0>
   3c354:	nop
   3c358:	b	3c370 <__sanitizer_set_death_callback@@Base+0x66d0>
   3c35c:	nop
   3c360:	b	3c370 <__sanitizer_set_death_callback@@Base+0x66d0>
   3c364:	nop
   3c368:	b	3c370 <__sanitizer_set_death_callback@@Base+0x66d0>
   3c36c:	nop
   3c370:	ldr	x0, [sp, #192]
   3c374:	add	x0, x0, #0x1
   3c378:	str	x0, [sp, #192]
   3c37c:	ldr	x0, [sp, #176]
   3c380:	ldr	x0, [x0, #16]
   3c384:	ldr	x1, [sp, #192]
   3c388:	cmp	x1, x0
   3c38c:	b.cc	3c204 <__sanitizer_set_death_callback@@Base+0x6564>  // b.lo, b.ul, b.last
   3c390:	ldr	x0, [sp, #200]
   3c394:	ldp	x29, x30, [sp, #16]
   3c398:	add	sp, sp, #0xd0
   3c39c:	ret
   3c3a0:	stp	x29, x30, [sp, #-96]!
   3c3a4:	mov	x29, sp
   3c3a8:	str	x0, [sp, #72]
   3c3ac:	str	x1, [sp, #64]
   3c3b0:	str	x2, [sp, #56]
   3c3b4:	str	x3, [sp, #48]
   3c3b8:	str	x4, [sp, #40]
   3c3bc:	str	x5, [sp, #32]
   3c3c0:	str	x6, [sp, #24]
   3c3c4:	str	x7, [sp, #16]
   3c3c8:	ldr	x0, [sp, #64]
   3c3cc:	ldr	x0, [x0, #16]
   3c3d0:	ldr	x1, [sp, #48]
   3c3d4:	add	x0, x1, x0
   3c3d8:	str	x0, [sp, #48]
   3c3dc:	ldr	x0, [sp, #64]
   3c3e0:	ldr	x0, [x0, #16]
   3c3e4:	ldr	x1, [sp, #40]
   3c3e8:	add	x0, x1, x0
   3c3ec:	str	x0, [sp, #40]
   3c3f0:	ldr	x0, [sp, #16]
   3c3f4:	ldr	x0, [x0, #24]
   3c3f8:	cmp	x0, #0x0
   3c3fc:	b.eq	3c494 <__sanitizer_set_death_callback@@Base+0x67f4>  // b.none
   3c400:	ldr	x0, [sp, #16]
   3c404:	ldr	x2, [x0]
   3c408:	ldr	x0, [sp, #16]
   3c40c:	ldr	x1, [x0, #24]
   3c410:	mov	x0, x1
   3c414:	lsl	x0, x0, #1
   3c418:	add	x0, x0, x1
   3c41c:	lsl	x0, x0, #3
   3c420:	sub	x0, x0, #0x18
   3c424:	add	x0, x2, x0
   3c428:	str	x0, [sp, #88]
   3c42c:	ldr	x0, [sp, #88]
   3c430:	ldr	x0, [x0, #8]
   3c434:	ldr	x1, [sp, #48]
   3c438:	cmp	x1, x0
   3c43c:	b.eq	3c458 <__sanitizer_set_death_callback@@Base+0x67b8>  // b.none
   3c440:	ldr	x0, [sp, #88]
   3c444:	ldr	x0, [x0, #8]
   3c448:	add	x0, x0, #0x1
   3c44c:	ldr	x1, [sp, #48]
   3c450:	cmp	x1, x0
   3c454:	b.ne	3c494 <__sanitizer_set_death_callback@@Base+0x67f4>  // b.any
   3c458:	ldr	x0, [sp, #88]
   3c45c:	ldr	x0, [x0, #16]
   3c460:	ldr	x1, [sp, #56]
   3c464:	cmp	x1, x0
   3c468:	b.ne	3c494 <__sanitizer_set_death_callback@@Base+0x67f4>  // b.any
   3c46c:	ldr	x0, [sp, #88]
   3c470:	ldr	x0, [x0, #8]
   3c474:	ldr	x1, [sp, #40]
   3c478:	cmp	x1, x0
   3c47c:	b.ls	3c48c <__sanitizer_set_death_callback@@Base+0x67ec>  // b.plast
   3c480:	ldr	x0, [sp, #88]
   3c484:	ldr	x1, [sp, #40]
   3c488:	str	x1, [x0, #8]
   3c48c:	mov	w0, #0x1                   	// #1
   3c490:	b	3c504 <__sanitizer_set_death_callback@@Base+0x6864>
   3c494:	ldr	x0, [sp, #16]
   3c498:	mov	x4, x0
   3c49c:	ldr	x3, [sp, #24]
   3c4a0:	ldr	x2, [sp, #32]
   3c4a4:	mov	x1, #0x18                  	// #24
   3c4a8:	ldr	x0, [sp, #72]
   3c4ac:	bl	6a90 <__asan_backtrace_vector_grow@plt>
   3c4b0:	str	x0, [sp, #88]
   3c4b4:	ldr	x0, [sp, #88]
   3c4b8:	cmp	x0, #0x0
   3c4bc:	b.ne	3c4c8 <__sanitizer_set_death_callback@@Base+0x6828>  // b.any
   3c4c0:	mov	w0, #0x0                   	// #0
   3c4c4:	b	3c504 <__sanitizer_set_death_callback@@Base+0x6864>
   3c4c8:	ldr	x0, [sp, #88]
   3c4cc:	ldr	x1, [sp, #48]
   3c4d0:	str	x1, [x0]
   3c4d4:	ldr	x0, [sp, #88]
   3c4d8:	ldr	x1, [sp, #40]
   3c4dc:	str	x1, [x0, #8]
   3c4e0:	ldr	x0, [sp, #88]
   3c4e4:	ldr	x1, [sp, #56]
   3c4e8:	str	x1, [x0, #16]
   3c4ec:	ldr	x0, [sp, #16]
   3c4f0:	ldr	x0, [x0, #24]
   3c4f4:	add	x1, x0, #0x1
   3c4f8:	ldr	x0, [sp, #16]
   3c4fc:	str	x1, [x0, #24]
   3c500:	mov	w0, #0x1                   	// #1
   3c504:	ldp	x29, x30, [sp], #96
   3c508:	ret
   3c50c:	stp	x29, x30, [sp, #-160]!
   3c510:	mov	x29, sp
   3c514:	str	x0, [sp, #72]
   3c518:	str	x1, [sp, #64]
   3c51c:	str	x2, [sp, #56]
   3c520:	str	x3, [sp, #48]
   3c524:	str	x4, [sp, #40]
   3c528:	str	x5, [sp, #32]
   3c52c:	str	x6, [sp, #24]
   3c530:	str	x7, [sp, #16]
   3c534:	ldr	x0, [sp, #64]
   3c538:	ldr	x0, [x0, #96]
   3c53c:	ldr	x1, [sp, #40]
   3c540:	cmp	x1, x0
   3c544:	b.cc	3c568 <__sanitizer_set_death_callback@@Base+0x68c8>  // b.lo, b.ul, b.last
   3c548:	ldr	x3, [sp, #24]
   3c54c:	mov	w2, #0x0                   	// #0
   3c550:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   3c554:	add	x1, x0, #0x68
   3c558:	ldr	x0, [sp, #16]
   3c55c:	blr	x3
   3c560:	mov	w0, #0x0                   	// #0
   3c564:	b	3c6ac <__sanitizer_set_death_callback@@Base+0x6a0c>
   3c568:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   3c56c:	add	x0, x0, #0xed8
   3c570:	str	x0, [sp, #80]
   3c574:	ldr	x0, [sp, #64]
   3c578:	ldr	x0, [x0, #88]
   3c57c:	str	x0, [sp, #88]
   3c580:	ldr	x0, [sp, #64]
   3c584:	ldr	x1, [x0, #88]
   3c588:	ldr	x0, [sp, #40]
   3c58c:	add	x0, x1, x0
   3c590:	str	x0, [sp, #96]
   3c594:	ldr	x0, [sp, #64]
   3c598:	ldr	x1, [x0, #96]
   3c59c:	ldr	x0, [sp, #40]
   3c5a0:	sub	x0, x1, x0
   3c5a4:	str	x0, [sp, #104]
   3c5a8:	ldr	x0, [sp, #64]
   3c5ac:	ldr	w0, [x0, #120]
   3c5b0:	str	w0, [sp, #112]
   3c5b4:	ldr	x0, [sp, #24]
   3c5b8:	str	x0, [sp, #120]
   3c5bc:	ldr	x0, [sp, #16]
   3c5c0:	str	x0, [sp, #128]
   3c5c4:	str	wzr, [sp, #136]
   3c5c8:	ldr	w0, [sp, #136]
   3c5cc:	cmp	w0, #0x0
   3c5d0:	b.eq	3c5dc <__sanitizer_set_death_callback@@Base+0x693c>  // b.none
   3c5d4:	mov	w0, #0x0                   	// #0
   3c5d8:	b	3c6ac <__sanitizer_set_death_callback@@Base+0x6a0c>
   3c5dc:	ldr	x0, [sp, #56]
   3c5e0:	ldr	w1, [x0, #48]
   3c5e4:	add	x0, sp, #0x50
   3c5e8:	bl	38b04 <__sanitizer_set_death_callback@@Base+0x2e64>
   3c5ec:	str	x0, [sp, #152]
   3c5f0:	ldr	x0, [sp, #56]
   3c5f4:	ldr	w1, [x0, #48]
   3c5f8:	add	x0, sp, #0x50
   3c5fc:	bl	38b04 <__sanitizer_set_death_callback@@Base+0x2e64>
   3c600:	str	x0, [sp, #144]
   3c604:	ldr	x0, [sp, #152]
   3c608:	cmp	x0, #0x0
   3c60c:	b.ne	3c61c <__sanitizer_set_death_callback@@Base+0x697c>  // b.any
   3c610:	ldr	x0, [sp, #144]
   3c614:	cmp	x0, #0x0
   3c618:	b.eq	3c690 <__sanitizer_set_death_callback@@Base+0x69f0>  // b.none
   3c61c:	ldr	x0, [sp, #56]
   3c620:	ldr	w0, [x0, #48]
   3c624:	mov	w1, w0
   3c628:	ldr	x0, [sp, #152]
   3c62c:	bl	38bc0 <__sanitizer_set_death_callback@@Base+0x2f20>
   3c630:	cmp	w0, #0x0
   3c634:	b.eq	3c644 <__sanitizer_set_death_callback@@Base+0x69a4>  // b.none
   3c638:	ldr	x0, [sp, #144]
   3c63c:	str	x0, [sp, #32]
   3c640:	b	3c5c8 <__sanitizer_set_death_callback@@Base+0x6928>
   3c644:	ldr	x1, [sp, #152]
   3c648:	ldr	x0, [sp, #32]
   3c64c:	add	x2, x1, x0
   3c650:	ldr	x1, [sp, #144]
   3c654:	ldr	x0, [sp, #32]
   3c658:	add	x0, x1, x0
   3c65c:	ldr	x7, [sp, #160]
   3c660:	ldr	x6, [sp, #16]
   3c664:	ldr	x5, [sp, #24]
   3c668:	mov	x4, x0
   3c66c:	mov	x3, x2
   3c670:	ldr	x2, [sp, #48]
   3c674:	ldr	x1, [sp, #64]
   3c678:	ldr	x0, [sp, #72]
   3c67c:	bl	3c3a0 <__sanitizer_set_death_callback@@Base+0x6700>
   3c680:	cmp	w0, #0x0
   3c684:	b.ne	3c5c8 <__sanitizer_set_death_callback@@Base+0x6928>  // b.any
   3c688:	mov	w0, #0x0                   	// #0
   3c68c:	b	3c6ac <__sanitizer_set_death_callback@@Base+0x6a0c>
   3c690:	nop
   3c694:	ldr	w0, [sp, #136]
   3c698:	cmp	w0, #0x0
   3c69c:	b.eq	3c6a8 <__sanitizer_set_death_callback@@Base+0x6a08>  // b.none
   3c6a0:	mov	w0, #0x0                   	// #0
   3c6a4:	b	3c6ac <__sanitizer_set_death_callback@@Base+0x6a0c>
   3c6a8:	mov	w0, #0x1                   	// #1
   3c6ac:	ldp	x29, x30, [sp], #160
   3c6b0:	ret
   3c6b4:	sub	sp, sp, #0x100
   3c6b8:	stp	x29, x30, [sp, #16]
   3c6bc:	add	x29, sp, #0x10
   3c6c0:	str	x0, [sp, #88]
   3c6c4:	str	x1, [sp, #80]
   3c6c8:	str	x2, [sp, #72]
   3c6cc:	str	x3, [sp, #64]
   3c6d0:	str	x4, [sp, #56]
   3c6d4:	str	x5, [sp, #48]
   3c6d8:	str	x6, [sp, #40]
   3c6dc:	str	x7, [sp, #32]
   3c6e0:	b	3ce28 <__sanitizer_set_death_callback@@Base+0x7188>
   3c6e4:	ldr	x0, [sp, #56]
   3c6e8:	bl	38c7c <__sanitizer_set_death_callback@@Base+0x2fdc>
   3c6ec:	str	x0, [sp, #168]
   3c6f0:	ldr	x0, [sp, #168]
   3c6f4:	cmp	x0, #0x0
   3c6f8:	b.ne	3c704 <__sanitizer_set_death_callback@@Base+0x6a64>  // b.any
   3c6fc:	mov	w0, #0x1                   	// #1
   3c700:	b	3ce3c <__sanitizer_set_death_callback@@Base+0x719c>
   3c704:	ldr	x0, [sp, #72]
   3c708:	add	x0, x0, #0x58
   3c70c:	ldr	x3, [sp, #32]
   3c710:	ldr	x2, [sp, #40]
   3c714:	ldr	x1, [sp, #168]
   3c718:	bl	3a088 <__sanitizer_set_death_callback@@Base+0x43e8>
   3c71c:	str	x0, [sp, #160]
   3c720:	ldr	x0, [sp, #160]
   3c724:	cmp	x0, #0x0
   3c728:	b.ne	3c734 <__sanitizer_set_death_callback@@Base+0x6a94>  // b.any
   3c72c:	mov	w0, #0x0                   	// #0
   3c730:	b	3ce3c <__sanitizer_set_death_callback@@Base+0x719c>
   3c734:	ldr	x0, [sp, #160]
   3c738:	ldr	w0, [x0, #8]
   3c73c:	cmp	w0, #0x2e
   3c740:	b.eq	3c764 <__sanitizer_set_death_callback@@Base+0x6ac4>  // b.none
   3c744:	ldr	x0, [sp, #160]
   3c748:	ldr	w0, [x0, #8]
   3c74c:	cmp	w0, #0x3
   3c750:	b.eq	3c764 <__sanitizer_set_death_callback@@Base+0x6ac4>  // b.none
   3c754:	ldr	x0, [sp, #160]
   3c758:	ldr	w0, [x0, #8]
   3c75c:	cmp	w0, #0x1d
   3c760:	b.ne	3c76c <__sanitizer_set_death_callback@@Base+0x6acc>  // b.any
   3c764:	mov	w0, #0x1                   	// #1
   3c768:	b	3c770 <__sanitizer_set_death_callback@@Base+0x6ad0>
   3c76c:	mov	w0, #0x0                   	// #0
   3c770:	str	w0, [sp, #252]
   3c774:	ldr	x0, [sp, #160]
   3c778:	ldr	w0, [x0, #8]
   3c77c:	cmp	w0, #0x1d
   3c780:	b.ne	3c790 <__sanitizer_set_death_callback@@Base+0x6af0>  // b.any
   3c784:	ldr	x0, [sp, #264]
   3c788:	str	x0, [sp, #232]
   3c78c:	b	3c798 <__sanitizer_set_death_callback@@Base+0x6af8>
   3c790:	ldr	x0, [sp, #256]
   3c794:	str	x0, [sp, #232]
   3c798:	str	xzr, [sp, #240]
   3c79c:	ldr	w0, [sp, #252]
   3c7a0:	cmp	w0, #0x0
   3c7a4:	b.eq	3c7e4 <__sanitizer_set_death_callback@@Base+0x6b44>  // b.none
   3c7a8:	ldr	x3, [sp, #32]
   3c7ac:	ldr	x2, [sp, #40]
   3c7b0:	mov	x1, #0x28                  	// #40
   3c7b4:	ldr	x0, [sp, #88]
   3c7b8:	bl	6b10 <__asan_backtrace_alloc@plt>
   3c7bc:	str	x0, [sp, #240]
   3c7c0:	ldr	x0, [sp, #240]
   3c7c4:	cmp	x0, #0x0
   3c7c8:	b.ne	3c7d4 <__sanitizer_set_death_callback@@Base+0x6b34>  // b.any
   3c7cc:	mov	w0, #0x0                   	// #0
   3c7d0:	b	3ce3c <__sanitizer_set_death_callback@@Base+0x719c>
   3c7d4:	mov	x2, #0x28                  	// #40
   3c7d8:	mov	w1, #0x0                   	// #0
   3c7dc:	ldr	x0, [sp, #240]
   3c7e0:	bl	6ab0 <__asan_internal_memset@plt>
   3c7e4:	str	xzr, [sp, #216]
   3c7e8:	str	wzr, [sp, #212]
   3c7ec:	str	xzr, [sp, #200]
   3c7f0:	str	wzr, [sp, #196]
   3c7f4:	str	wzr, [sp, #192]
   3c7f8:	str	xzr, [sp, #184]
   3c7fc:	str	wzr, [sp, #180]
   3c800:	str	wzr, [sp, #176]
   3c804:	str	xzr, [sp, #224]
   3c808:	b	3cbe4 <__sanitizer_set_death_callback@@Base+0x6f44>
   3c80c:	ldr	x0, [sp, #160]
   3c810:	ldr	x1, [x0, #24]
   3c814:	ldr	x0, [sp, #224]
   3c818:	lsl	x0, x0, #3
   3c81c:	add	x0, x1, x0
   3c820:	ldr	w8, [x0, #4]
   3c824:	ldr	x0, [sp, #72]
   3c828:	ldr	w1, [x0, #44]
   3c82c:	ldr	x0, [sp, #72]
   3c830:	ldr	w2, [x0, #40]
   3c834:	ldr	x0, [sp, #72]
   3c838:	ldr	w3, [x0, #48]
   3c83c:	ldr	x0, [sp, #80]
   3c840:	ldr	x4, [x0, #104]
   3c844:	ldr	x0, [sp, #80]
   3c848:	ldr	x5, [x0, #112]
   3c84c:	ldr	x0, [sp, #80]
   3c850:	ldr	x6, [x0, #8]
   3c854:	add	x0, sp, #0x80
   3c858:	str	x0, [sp]
   3c85c:	mov	x7, x6
   3c860:	mov	x6, x5
   3c864:	mov	x5, x4
   3c868:	mov	w4, w3
   3c86c:	mov	w3, w2
   3c870:	mov	w2, w1
   3c874:	ldr	x1, [sp, #56]
   3c878:	mov	w0, w8
   3c87c:	bl	38fac <__sanitizer_set_death_callback@@Base+0x330c>
   3c880:	cmp	w0, #0x0
   3c884:	b.ne	3c890 <__sanitizer_set_death_callback@@Base+0x6bf0>  // b.any
   3c888:	mov	w0, #0x0                   	// #0
   3c88c:	b	3ce3c <__sanitizer_set_death_callback@@Base+0x719c>
   3c890:	ldr	x0, [sp, #160]
   3c894:	ldr	w0, [x0, #8]
   3c898:	cmp	w0, #0x11
   3c89c:	b.ne	3c8d4 <__sanitizer_set_death_callback@@Base+0x6c34>  // b.any
   3c8a0:	ldr	x0, [sp, #160]
   3c8a4:	ldr	x1, [x0, #24]
   3c8a8:	ldr	x0, [sp, #224]
   3c8ac:	lsl	x0, x0, #3
   3c8b0:	add	x0, x1, x0
   3c8b4:	ldr	w0, [x0]
   3c8b8:	cmp	w0, #0x11
   3c8bc:	b.ne	3c8d4 <__sanitizer_set_death_callback@@Base+0x6c34>  // b.any
   3c8c0:	ldr	w0, [sp, #128]
   3c8c4:	cmp	w0, #0x1
   3c8c8:	b.ne	3c8d4 <__sanitizer_set_death_callback@@Base+0x6c34>  // b.any
   3c8cc:	ldr	x0, [sp, #136]
   3c8d0:	str	x0, [sp, #64]
   3c8d4:	ldr	w0, [sp, #252]
   3c8d8:	cmp	w0, #0x0
   3c8dc:	b.eq	3cb7c <__sanitizer_set_death_callback@@Base+0x6edc>  // b.none
   3c8e0:	ldr	x0, [sp, #160]
   3c8e4:	ldr	x1, [x0, #24]
   3c8e8:	ldr	x0, [sp, #224]
   3c8ec:	lsl	x0, x0, #3
   3c8f0:	add	x0, x1, x0
   3c8f4:	ldr	w0, [x0]
   3c8f8:	mov	w1, #0x2007                	// #8199
   3c8fc:	cmp	w0, w1
   3c900:	b.eq	3cac4 <__sanitizer_set_death_callback@@Base+0x6e24>  // b.none
   3c904:	mov	w1, #0x2007                	// #8199
   3c908:	cmp	w0, w1
   3c90c:	b.hi	3cb84 <__sanitizer_set_death_callback@@Base+0x6ee4>  // b.pmore
   3c910:	cmp	w0, #0x6e
   3c914:	b.eq	3cac4 <__sanitizer_set_death_callback@@Base+0x6e24>  // b.none
   3c918:	cmp	w0, #0x6e
   3c91c:	b.hi	3cb84 <__sanitizer_set_death_callback@@Base+0x6ee4>  // b.pmore
   3c920:	cmp	w0, #0x59
   3c924:	b.eq	3ca18 <__sanitizer_set_death_callback@@Base+0x6d78>  // b.none
   3c928:	cmp	w0, #0x59
   3c92c:	b.hi	3cb84 <__sanitizer_set_death_callback@@Base+0x6ee4>  // b.pmore
   3c930:	cmp	w0, #0x58
   3c934:	b.eq	3c994 <__sanitizer_set_death_callback@@Base+0x6cf4>  // b.none
   3c938:	cmp	w0, #0x58
   3c93c:	b.hi	3cb84 <__sanitizer_set_death_callback@@Base+0x6ee4>  // b.pmore
   3c940:	cmp	w0, #0x55
   3c944:	b.eq	3cb50 <__sanitizer_set_death_callback@@Base+0x6eb0>  // b.none
   3c948:	cmp	w0, #0x55
   3c94c:	b.hi	3cb84 <__sanitizer_set_death_callback@@Base+0x6ee4>  // b.pmore
   3c950:	cmp	w0, #0x47
   3c954:	b.eq	3ca38 <__sanitizer_set_death_callback@@Base+0x6d98>  // b.none
   3c958:	cmp	w0, #0x47
   3c95c:	b.hi	3cb84 <__sanitizer_set_death_callback@@Base+0x6ee4>  // b.pmore
   3c960:	cmp	w0, #0x31
   3c964:	b.eq	3ca38 <__sanitizer_set_death_callback@@Base+0x6d98>  // b.none
   3c968:	cmp	w0, #0x31
   3c96c:	b.hi	3cb84 <__sanitizer_set_death_callback@@Base+0x6ee4>  // b.pmore
   3c970:	cmp	w0, #0x12
   3c974:	b.eq	3cb08 <__sanitizer_set_death_callback@@Base+0x6e68>  // b.none
   3c978:	cmp	w0, #0x12
   3c97c:	b.hi	3cb84 <__sanitizer_set_death_callback@@Base+0x6ee4>  // b.pmore
   3c980:	cmp	w0, #0x3
   3c984:	b.eq	3ca98 <__sanitizer_set_death_callback@@Base+0x6df8>  // b.none
   3c988:	cmp	w0, #0x11
   3c98c:	b.eq	3cae8 <__sanitizer_set_death_callback@@Base+0x6e48>  // b.none
   3c990:	b	3cb84 <__sanitizer_set_death_callback@@Base+0x6ee4>
   3c994:	ldr	w0, [sp, #128]
   3c998:	cmp	w0, #0x2
   3c99c:	b.ne	3cb8c <__sanitizer_set_death_callback@@Base+0x6eec>  // b.any
   3c9a0:	ldr	x0, [sp, #136]
   3c9a4:	cmp	x0, #0x0
   3c9a8:	b.ne	3c9c0 <__sanitizer_set_death_callback@@Base+0x6d20>  // b.any
   3c9ac:	ldr	x0, [sp, #240]
   3c9b0:	adrp	x1, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   3c9b4:	add	x1, x1, #0xf70
   3c9b8:	str	x1, [x0, #8]
   3c9bc:	b	3cb8c <__sanitizer_set_death_callback@@Base+0x6eec>
   3c9c0:	ldr	x0, [sp, #136]
   3c9c4:	sub	x1, x0, #0x1
   3c9c8:	ldr	x0, [sp, #48]
   3c9cc:	ldr	x0, [x0, #48]
   3c9d0:	cmp	x1, x0
   3c9d4:	b.cc	3c9f0 <__sanitizer_set_death_callback@@Base+0x6d50>  // b.lo, b.ul, b.last
   3c9d8:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   3c9dc:	add	x1, x0, #0x90
   3c9e0:	ldr	x0, [sp, #56]
   3c9e4:	bl	3854c <__sanitizer_set_death_callback@@Base+0x28ac>
   3c9e8:	mov	w0, #0x0                   	// #0
   3c9ec:	b	3ce3c <__sanitizer_set_death_callback@@Base+0x719c>
   3c9f0:	ldr	x0, [sp, #48]
   3c9f4:	ldr	x1, [x0, #56]
   3c9f8:	ldr	x0, [sp, #136]
   3c9fc:	lsl	x0, x0, #3
   3ca00:	sub	x0, x0, #0x8
   3ca04:	add	x0, x1, x0
   3ca08:	ldr	x1, [x0]
   3ca0c:	ldr	x0, [sp, #240]
   3ca10:	str	x1, [x0, #8]
   3ca14:	b	3cb8c <__sanitizer_set_death_callback@@Base+0x6eec>
   3ca18:	ldr	w0, [sp, #128]
   3ca1c:	cmp	w0, #0x2
   3ca20:	b.ne	3cb94 <__sanitizer_set_death_callback@@Base+0x6ef4>  // b.any
   3ca24:	ldr	x0, [sp, #136]
   3ca28:	mov	w1, w0
   3ca2c:	ldr	x0, [sp, #240]
   3ca30:	str	w1, [x0, #16]
   3ca34:	b	3cb94 <__sanitizer_set_death_callback@@Base+0x6ef4>
   3ca38:	ldr	w0, [sp, #176]
   3ca3c:	cmp	w0, #0x0
   3ca40:	b.ne	3cb9c <__sanitizer_set_death_callback@@Base+0x6efc>  // b.any
   3ca44:	ldr	x0, [sp, #160]
   3ca48:	ldr	x1, [x0, #24]
   3ca4c:	ldr	x0, [sp, #224]
   3ca50:	lsl	x0, x0, #3
   3ca54:	add	x0, x1, x0
   3ca58:	add	x1, sp, #0x80
   3ca5c:	ldr	x5, [sp, #32]
   3ca60:	ldr	x4, [sp, #40]
   3ca64:	mov	x3, x1
   3ca68:	mov	x2, x0
   3ca6c:	ldr	x1, [sp, #72]
   3ca70:	ldr	x0, [sp, #80]
   3ca74:	bl	3bef4 <__sanitizer_set_death_callback@@Base+0x6254>
   3ca78:	str	x0, [sp, #144]
   3ca7c:	ldr	x0, [sp, #144]
   3ca80:	cmp	x0, #0x0
   3ca84:	b.eq	3cba4 <__sanitizer_set_death_callback@@Base+0x6f04>  // b.none
   3ca88:	ldr	x0, [sp, #240]
   3ca8c:	ldr	x1, [sp, #144]
   3ca90:	str	x1, [x0]
   3ca94:	b	3cba4 <__sanitizer_set_death_callback@@Base+0x6f04>
   3ca98:	ldr	x0, [sp, #240]
   3ca9c:	ldr	x0, [x0]
   3caa0:	cmp	x0, #0x0
   3caa4:	b.ne	3cbac <__sanitizer_set_death_callback@@Base+0x6f0c>  // b.any
   3caa8:	ldr	w0, [sp, #128]
   3caac:	cmp	w0, #0x4
   3cab0:	b.ne	3cbb4 <__sanitizer_set_death_callback@@Base+0x6f14>  // b.any
   3cab4:	ldr	x1, [sp, #136]
   3cab8:	ldr	x0, [sp, #240]
   3cabc:	str	x1, [x0]
   3cac0:	b	3cbb4 <__sanitizer_set_death_callback@@Base+0x6f14>
   3cac4:	ldr	w0, [sp, #128]
   3cac8:	cmp	w0, #0x4
   3cacc:	b.ne	3cbbc <__sanitizer_set_death_callback@@Base+0x6f1c>  // b.any
   3cad0:	ldr	x1, [sp, #136]
   3cad4:	ldr	x0, [sp, #240]
   3cad8:	str	x1, [x0]
   3cadc:	mov	w0, #0x1                   	// #1
   3cae0:	str	w0, [sp, #176]
   3cae4:	b	3cbbc <__sanitizer_set_death_callback@@Base+0x6f1c>
   3cae8:	ldr	w0, [sp, #128]
   3caec:	cmp	w0, #0x1
   3caf0:	b.ne	3cbc4 <__sanitizer_set_death_callback@@Base+0x6f24>  // b.any
   3caf4:	ldr	x0, [sp, #136]
   3caf8:	str	x0, [sp, #216]
   3cafc:	mov	w0, #0x1                   	// #1
   3cb00:	str	w0, [sp, #212]
   3cb04:	b	3cbc4 <__sanitizer_set_death_callback@@Base+0x6f24>
   3cb08:	ldr	w0, [sp, #128]
   3cb0c:	cmp	w0, #0x1
   3cb10:	b.ne	3cb28 <__sanitizer_set_death_callback@@Base+0x6e88>  // b.any
   3cb14:	ldr	x0, [sp, #136]
   3cb18:	str	x0, [sp, #200]
   3cb1c:	mov	w0, #0x1                   	// #1
   3cb20:	str	w0, [sp, #196]
   3cb24:	b	3cbcc <__sanitizer_set_death_callback@@Base+0x6f2c>
   3cb28:	ldr	w0, [sp, #128]
   3cb2c:	cmp	w0, #0x2
   3cb30:	b.ne	3cbcc <__sanitizer_set_death_callback@@Base+0x6f2c>  // b.any
   3cb34:	ldr	x0, [sp, #136]
   3cb38:	str	x0, [sp, #200]
   3cb3c:	mov	w0, #0x1                   	// #1
   3cb40:	str	w0, [sp, #196]
   3cb44:	mov	w0, #0x1                   	// #1
   3cb48:	str	w0, [sp, #192]
   3cb4c:	b	3cbcc <__sanitizer_set_death_callback@@Base+0x6f2c>
   3cb50:	ldr	w0, [sp, #128]
   3cb54:	cmp	w0, #0x2
   3cb58:	b.eq	3cb68 <__sanitizer_set_death_callback@@Base+0x6ec8>  // b.none
   3cb5c:	ldr	w0, [sp, #128]
   3cb60:	cmp	w0, #0x8
   3cb64:	b.ne	3cbd4 <__sanitizer_set_death_callback@@Base+0x6f34>  // b.any
   3cb68:	ldr	x0, [sp, #136]
   3cb6c:	str	x0, [sp, #184]
   3cb70:	mov	w0, #0x1                   	// #1
   3cb74:	str	w0, [sp, #180]
   3cb78:	b	3cbd4 <__sanitizer_set_death_callback@@Base+0x6f34>
   3cb7c:	nop
   3cb80:	b	3cbd8 <__sanitizer_set_death_callback@@Base+0x6f38>
   3cb84:	nop
   3cb88:	b	3cbd8 <__sanitizer_set_death_callback@@Base+0x6f38>
   3cb8c:	nop
   3cb90:	b	3cbd8 <__sanitizer_set_death_callback@@Base+0x6f38>
   3cb94:	nop
   3cb98:	b	3cbd8 <__sanitizer_set_death_callback@@Base+0x6f38>
   3cb9c:	nop
   3cba0:	b	3cbd8 <__sanitizer_set_death_callback@@Base+0x6f38>
   3cba4:	nop
   3cba8:	b	3cbd8 <__sanitizer_set_death_callback@@Base+0x6f38>
   3cbac:	nop
   3cbb0:	b	3cbd8 <__sanitizer_set_death_callback@@Base+0x6f38>
   3cbb4:	nop
   3cbb8:	b	3cbd8 <__sanitizer_set_death_callback@@Base+0x6f38>
   3cbbc:	nop
   3cbc0:	b	3cbd8 <__sanitizer_set_death_callback@@Base+0x6f38>
   3cbc4:	nop
   3cbc8:	b	3cbd8 <__sanitizer_set_death_callback@@Base+0x6f38>
   3cbcc:	nop
   3cbd0:	b	3cbd8 <__sanitizer_set_death_callback@@Base+0x6f38>
   3cbd4:	nop
   3cbd8:	ldr	x0, [sp, #224]
   3cbdc:	add	x0, x0, #0x1
   3cbe0:	str	x0, [sp, #224]
   3cbe4:	ldr	x0, [sp, #160]
   3cbe8:	ldr	x0, [x0, #16]
   3cbec:	ldr	x1, [sp, #224]
   3cbf0:	cmp	x1, x0
   3cbf4:	b.cc	3c80c <__sanitizer_set_death_callback@@Base+0x6b6c>  // b.lo, b.ul, b.last
   3cbf8:	ldr	w0, [sp, #252]
   3cbfc:	cmp	w0, #0x0
   3cc00:	b.eq	3cc30 <__sanitizer_set_death_callback@@Base+0x6f90>  // b.none
   3cc04:	ldr	x0, [sp, #240]
   3cc08:	ldr	x0, [x0]
   3cc0c:	cmp	x0, #0x0
   3cc10:	b.ne	3cc30 <__sanitizer_set_death_callback@@Base+0x6f90>  // b.any
   3cc14:	ldr	x4, [sp, #32]
   3cc18:	ldr	x3, [sp, #40]
   3cc1c:	mov	x2, #0x28                  	// #40
   3cc20:	ldr	x1, [sp, #240]
   3cc24:	ldr	x0, [sp, #88]
   3cc28:	bl	6e00 <__asan_backtrace_free@plt>
   3cc2c:	str	wzr, [sp, #252]
   3cc30:	ldr	w0, [sp, #252]
   3cc34:	cmp	w0, #0x0
   3cc38:	b.eq	3cd08 <__sanitizer_set_death_callback@@Base+0x7068>  // b.none
   3cc3c:	ldr	w0, [sp, #180]
   3cc40:	cmp	w0, #0x0
   3cc44:	b.eq	3cc84 <__sanitizer_set_death_callback@@Base+0x6fe4>  // b.none
   3cc48:	ldr	x0, [sp, #232]
   3cc4c:	str	x0, [sp]
   3cc50:	ldr	x7, [sp, #32]
   3cc54:	ldr	x6, [sp, #40]
   3cc58:	ldr	x5, [sp, #64]
   3cc5c:	ldr	x4, [sp, #184]
   3cc60:	ldr	x3, [sp, #240]
   3cc64:	ldr	x2, [sp, #72]
   3cc68:	ldr	x1, [sp, #80]
   3cc6c:	ldr	x0, [sp, #88]
   3cc70:	bl	3c50c <__sanitizer_set_death_callback@@Base+0x686c>
   3cc74:	cmp	w0, #0x0
   3cc78:	b.ne	3cd08 <__sanitizer_set_death_callback@@Base+0x7068>  // b.any
   3cc7c:	mov	w0, #0x0                   	// #0
   3cc80:	b	3ce3c <__sanitizer_set_death_callback@@Base+0x719c>
   3cc84:	ldr	w0, [sp, #212]
   3cc88:	cmp	w0, #0x0
   3cc8c:	b.eq	3ccec <__sanitizer_set_death_callback@@Base+0x704c>  // b.none
   3cc90:	ldr	w0, [sp, #196]
   3cc94:	cmp	w0, #0x0
   3cc98:	b.eq	3ccec <__sanitizer_set_death_callback@@Base+0x704c>  // b.none
   3cc9c:	ldr	w0, [sp, #192]
   3cca0:	cmp	w0, #0x0
   3cca4:	b.eq	3ccb8 <__sanitizer_set_death_callback@@Base+0x7018>  // b.none
   3cca8:	ldr	x1, [sp, #200]
   3ccac:	ldr	x0, [sp, #216]
   3ccb0:	add	x0, x1, x0
   3ccb4:	str	x0, [sp, #200]
   3ccb8:	ldr	x7, [sp, #232]
   3ccbc:	ldr	x6, [sp, #32]
   3ccc0:	ldr	x5, [sp, #40]
   3ccc4:	ldr	x4, [sp, #200]
   3ccc8:	ldr	x3, [sp, #216]
   3cccc:	ldr	x2, [sp, #240]
   3ccd0:	ldr	x1, [sp, #80]
   3ccd4:	ldr	x0, [sp, #88]
   3ccd8:	bl	3c3a0 <__sanitizer_set_death_callback@@Base+0x6700>
   3ccdc:	cmp	w0, #0x0
   3cce0:	b.ne	3cd08 <__sanitizer_set_death_callback@@Base+0x7068>  // b.any
   3cce4:	mov	w0, #0x0                   	// #0
   3cce8:	b	3ce3c <__sanitizer_set_death_callback@@Base+0x719c>
   3ccec:	ldr	x4, [sp, #32]
   3ccf0:	ldr	x3, [sp, #40]
   3ccf4:	mov	x2, #0x28                  	// #40
   3ccf8:	ldr	x1, [sp, #240]
   3ccfc:	ldr	x0, [sp, #88]
   3cd00:	bl	6e00 <__asan_backtrace_free@plt>
   3cd04:	str	wzr, [sp, #252]
   3cd08:	ldr	x0, [sp, #160]
   3cd0c:	ldr	w0, [x0, #12]
   3cd10:	cmp	w0, #0x0
   3cd14:	b.eq	3ce28 <__sanitizer_set_death_callback@@Base+0x7188>  // b.none
   3cd18:	ldr	w0, [sp, #252]
   3cd1c:	cmp	w0, #0x0
   3cd20:	b.ne	3cd68 <__sanitizer_set_death_callback@@Base+0x70c8>  // b.any
   3cd24:	ldr	x0, [sp, #264]
   3cd28:	str	x0, [sp, #8]
   3cd2c:	ldr	x0, [sp, #256]
   3cd30:	str	x0, [sp]
   3cd34:	ldr	x7, [sp, #32]
   3cd38:	ldr	x6, [sp, #40]
   3cd3c:	ldr	x5, [sp, #48]
   3cd40:	ldr	x4, [sp, #56]
   3cd44:	ldr	x3, [sp, #64]
   3cd48:	ldr	x2, [sp, #72]
   3cd4c:	ldr	x1, [sp, #80]
   3cd50:	ldr	x0, [sp, #88]
   3cd54:	bl	3c6b4 <__sanitizer_set_death_callback@@Base+0x6a14>
   3cd58:	cmp	w0, #0x0
   3cd5c:	b.ne	3ce28 <__sanitizer_set_death_callback@@Base+0x7188>  // b.any
   3cd60:	mov	w0, #0x0                   	// #0
   3cd64:	b	3ce3c <__sanitizer_set_death_callback@@Base+0x719c>
   3cd68:	add	x0, sp, #0x60
   3cd6c:	mov	x2, #0x20                  	// #32
   3cd70:	mov	w1, #0x0                   	// #0
   3cd74:	bl	6ab0 <__asan_internal_memset@plt>
   3cd78:	add	x0, sp, #0x60
   3cd7c:	str	x0, [sp, #8]
   3cd80:	ldr	x0, [sp, #256]
   3cd84:	str	x0, [sp]
   3cd88:	ldr	x7, [sp, #32]
   3cd8c:	ldr	x6, [sp, #40]
   3cd90:	ldr	x5, [sp, #48]
   3cd94:	ldr	x4, [sp, #56]
   3cd98:	ldr	x3, [sp, #64]
   3cd9c:	ldr	x2, [sp, #72]
   3cda0:	ldr	x1, [sp, #80]
   3cda4:	ldr	x0, [sp, #88]
   3cda8:	bl	3c6b4 <__sanitizer_set_death_callback@@Base+0x6a14>
   3cdac:	cmp	w0, #0x0
   3cdb0:	b.ne	3cdbc <__sanitizer_set_death_callback@@Base+0x711c>  // b.any
   3cdb4:	mov	w0, #0x0                   	// #0
   3cdb8:	b	3ce3c <__sanitizer_set_death_callback@@Base+0x719c>
   3cdbc:	ldr	x0, [sp, #120]
   3cdc0:	cmp	x0, #0x0
   3cdc4:	b.eq	3ce28 <__sanitizer_set_death_callback@@Base+0x7188>  // b.none
   3cdc8:	add	x0, sp, #0x60
   3cdcc:	ldr	x3, [sp, #32]
   3cdd0:	ldr	x2, [sp, #40]
   3cdd4:	mov	x1, x0
   3cdd8:	ldr	x0, [sp, #88]
   3cddc:	bl	6b60 <__asan_backtrace_vector_release@plt>
   3cde0:	cmp	w0, #0x0
   3cde4:	b.ne	3cdf0 <__sanitizer_set_death_callback@@Base+0x7150>  // b.any
   3cde8:	mov	w0, #0x0                   	// #0
   3cdec:	b	3ce3c <__sanitizer_set_death_callback@@Base+0x719c>
   3cdf0:	ldr	x0, [sp, #96]
   3cdf4:	str	x0, [sp, #152]
   3cdf8:	ldr	x1, [sp, #120]
   3cdfc:	adrp	x0, 39000 <__sanitizer_set_death_callback@@Base+0x3360>
   3ce00:	add	x3, x0, #0x730
   3ce04:	mov	x2, #0x18                  	// #24
   3ce08:	ldr	x0, [sp, #152]
   3ce0c:	bl	68f0 <__asan_backtrace_qsort@plt>
   3ce10:	ldr	x0, [sp, #240]
   3ce14:	ldr	x1, [sp, #152]
   3ce18:	str	x1, [x0, #24]
   3ce1c:	ldr	x1, [sp, #120]
   3ce20:	ldr	x0, [sp, #240]
   3ce24:	str	x1, [x0, #32]
   3ce28:	ldr	x0, [sp, #56]
   3ce2c:	ldr	x0, [x0, #24]
   3ce30:	cmp	x0, #0x0
   3ce34:	b.ne	3c6e4 <__sanitizer_set_death_callback@@Base+0x6a44>  // b.any
   3ce38:	mov	w0, #0x1                   	// #1
   3ce3c:	ldp	x29, x30, [sp, #16]
   3ce40:	add	sp, sp, #0x100
   3ce44:	ret
   3ce48:	sub	sp, sp, #0xe0
   3ce4c:	stp	x29, x30, [sp, #16]
   3ce50:	add	x29, sp, #0x10
   3ce54:	str	x0, [sp, #88]
   3ce58:	str	x1, [sp, #80]
   3ce5c:	str	x2, [sp, #72]
   3ce60:	str	x3, [sp, #64]
   3ce64:	str	x4, [sp, #56]
   3ce68:	str	x5, [sp, #48]
   3ce6c:	str	x6, [sp, #40]
   3ce70:	str	x7, [sp, #32]
   3ce74:	ldr	x0, [sp, #40]
   3ce78:	cmp	x0, #0x0
   3ce7c:	b.eq	3ce8c <__sanitizer_set_death_callback@@Base+0x71ec>  // b.none
   3ce80:	ldr	x0, [sp, #40]
   3ce84:	str	x0, [sp, #216]
   3ce88:	b	3cea4 <__sanitizer_set_death_callback@@Base+0x7204>
   3ce8c:	add	x0, sp, #0xa8
   3ce90:	mov	x2, #0x20                  	// #32
   3ce94:	mov	w1, #0x0                   	// #0
   3ce98:	bl	6ab0 <__asan_internal_memset@plt>
   3ce9c:	add	x0, sp, #0xa8
   3cea0:	str	x0, [sp, #216]
   3cea4:	adrp	x0, 5a000 <__asan_backtrace_vector_release@@Base+0xb340>
   3cea8:	add	x0, x0, #0xee8
   3ceac:	str	x0, [sp, #104]
   3ceb0:	ldr	x0, [sp, #80]
   3ceb4:	ldr	x0, [x0, #56]
   3ceb8:	str	x0, [sp, #112]
   3cebc:	ldr	x0, [sp, #48]
   3cec0:	ldr	x0, [x0]
   3cec4:	str	x0, [sp, #120]
   3cec8:	ldr	x0, [sp, #48]
   3cecc:	ldr	x0, [x0, #8]
   3ced0:	str	x0, [sp, #128]
   3ced4:	ldr	x0, [sp, #80]
   3ced8:	ldr	w0, [x0, #120]
   3cedc:	str	w0, [sp, #136]
   3cee0:	ldr	x0, [sp, #64]
   3cee4:	str	x0, [sp, #144]
   3cee8:	ldr	x0, [sp, #56]
   3ceec:	str	x0, [sp, #152]
   3cef0:	str	wzr, [sp, #160]
   3cef4:	b	3cf38 <__sanitizer_set_death_callback@@Base+0x7298>
   3cef8:	add	x1, sp, #0x68
   3cefc:	ldr	x0, [sp, #216]
   3cf00:	str	x0, [sp, #8]
   3cf04:	ldr	x0, [sp, #216]
   3cf08:	str	x0, [sp]
   3cf0c:	ldr	x7, [sp, #56]
   3cf10:	ldr	x6, [sp, #64]
   3cf14:	ldr	x5, [sp, #72]
   3cf18:	mov	x4, x1
   3cf1c:	mov	x3, #0x0                   	// #0
   3cf20:	ldr	x2, [sp, #48]
   3cf24:	ldr	x1, [sp, #80]
   3cf28:	ldr	x0, [sp, #88]
   3cf2c:	bl	3c6b4 <__sanitizer_set_death_callback@@Base+0x6a14>
   3cf30:	cmp	w0, #0x0
   3cf34:	b.eq	3d000 <__sanitizer_set_death_callback@@Base+0x7360>  // b.none
   3cf38:	ldr	x0, [sp, #128]
   3cf3c:	cmp	x0, #0x0
   3cf40:	b.ne	3cef8 <__sanitizer_set_death_callback@@Base+0x7258>  // b.any
   3cf44:	ldr	x0, [sp, #216]
   3cf48:	ldr	x0, [x0, #24]
   3cf4c:	cmp	x0, #0x0
   3cf50:	b.eq	3d008 <__sanitizer_set_death_callback@@Base+0x7368>  // b.none
   3cf54:	ldr	x0, [sp, #216]
   3cf58:	ldr	x0, [x0, #24]
   3cf5c:	str	x0, [sp, #200]
   3cf60:	ldr	x0, [sp, #40]
   3cf64:	cmp	x0, #0x0
   3cf68:	b.ne	3cf9c <__sanitizer_set_death_callback@@Base+0x72fc>  // b.any
   3cf6c:	add	x0, sp, #0xa8
   3cf70:	ldr	x3, [sp, #56]
   3cf74:	ldr	x2, [sp, #64]
   3cf78:	mov	x1, x0
   3cf7c:	ldr	x0, [sp, #88]
   3cf80:	bl	6b60 <__asan_backtrace_vector_release@plt>
   3cf84:	cmp	w0, #0x0
   3cf88:	b.eq	3d010 <__sanitizer_set_death_callback@@Base+0x7370>  // b.none
   3cf8c:	ldr	x0, [sp, #216]
   3cf90:	ldr	x0, [x0]
   3cf94:	str	x0, [sp, #208]
   3cf98:	b	3cfcc <__sanitizer_set_death_callback@@Base+0x732c>
   3cf9c:	ldr	x0, [sp, #40]
   3cfa0:	ldr	x3, [sp, #56]
   3cfa4:	ldr	x2, [sp, #64]
   3cfa8:	mov	x1, x0
   3cfac:	ldr	x0, [sp, #88]
   3cfb0:	bl	6ed0 <__asan_backtrace_vector_finish@plt>
   3cfb4:	str	x0, [sp, #208]
   3cfb8:	ldr	x0, [sp, #208]
   3cfbc:	cmp	x0, #0x0
   3cfc0:	b.eq	3d018 <__sanitizer_set_death_callback@@Base+0x7378>  // b.none
   3cfc4:	ldr	x0, [sp, #40]
   3cfc8:	str	xzr, [x0, #24]
   3cfcc:	adrp	x0, 39000 <__sanitizer_set_death_callback@@Base+0x3360>
   3cfd0:	add	x3, x0, #0x730
   3cfd4:	mov	x2, #0x18                  	// #24
   3cfd8:	ldr	x1, [sp, #200]
   3cfdc:	ldr	x0, [sp, #208]
   3cfe0:	bl	68f0 <__asan_backtrace_qsort@plt>
   3cfe4:	ldr	x0, [sp, #32]
   3cfe8:	ldr	x1, [sp, #208]
   3cfec:	str	x1, [x0]
   3cff0:	ldr	x0, [sp, #224]
   3cff4:	ldr	x1, [sp, #200]
   3cff8:	str	x1, [x0]
   3cffc:	b	3d01c <__sanitizer_set_death_callback@@Base+0x737c>
   3d000:	nop
   3d004:	b	3d01c <__sanitizer_set_death_callback@@Base+0x737c>
   3d008:	nop
   3d00c:	b	3d01c <__sanitizer_set_death_callback@@Base+0x737c>
   3d010:	nop
   3d014:	b	3d01c <__sanitizer_set_death_callback@@Base+0x737c>
   3d018:	nop
   3d01c:	ldp	x29, x30, [sp, #16]
   3d020:	add	sp, sp, #0xe0
   3d024:	ret
   3d028:	stp	x29, x30, [sp, #-96]!
   3d02c:	mov	x29, sp
   3d030:	str	x0, [sp, #56]
   3d034:	str	x1, [sp, #48]
   3d038:	str	x2, [sp, #40]
   3d03c:	str	x3, [sp, #32]
   3d040:	str	x4, [sp, #24]
   3d044:	str	x5, [sp, #16]
   3d048:	ldr	x0, [sp, #48]
   3d04c:	ldr	x0, [x0, #32]
   3d050:	cmp	x0, #0x0
   3d054:	b.ne	3d060 <__sanitizer_set_death_callback@@Base+0x73c0>  // b.any
   3d058:	mov	w0, #0x0                   	// #0
   3d05c:	b	3d1b8 <__sanitizer_set_death_callback@@Base+0x7518>
   3d060:	ldr	x0, [sp, #48]
   3d064:	ldr	x1, [x0, #24]
   3d068:	ldr	x0, [sp, #48]
   3d06c:	ldr	x2, [x0, #32]
   3d070:	add	x5, sp, #0x38
   3d074:	adrp	x0, 39000 <__sanitizer_set_death_callback@@Base+0x3360>
   3d078:	add	x4, x0, #0x7fc
   3d07c:	mov	x3, #0x18                  	// #24
   3d080:	mov	x0, x5
   3d084:	bl	6e40 <bsearch@plt>
   3d088:	str	x0, [sp, #88]
   3d08c:	ldr	x0, [sp, #88]
   3d090:	cmp	x0, #0x0
   3d094:	b.ne	3d0ac <__sanitizer_set_death_callback@@Base+0x740c>  // b.any
   3d098:	mov	w0, #0x0                   	// #0
   3d09c:	b	3d1b8 <__sanitizer_set_death_callback@@Base+0x7518>
   3d0a0:	ldr	x0, [sp, #88]
   3d0a4:	add	x0, x0, #0x18
   3d0a8:	str	x0, [sp, #88]
   3d0ac:	ldr	x0, [sp, #48]
   3d0b0:	ldr	x0, [x0, #24]
   3d0b4:	ldr	x1, [sp, #88]
   3d0b8:	sub	x0, x1, x0
   3d0bc:	asr	x1, x0, #3
   3d0c0:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   3d0c4:	movk	x0, #0xaaab
   3d0c8:	mul	x0, x1, x0
   3d0cc:	add	x1, x0, #0x1
   3d0d0:	ldr	x0, [sp, #48]
   3d0d4:	ldr	x0, [x0, #32]
   3d0d8:	cmp	x1, x0
   3d0dc:	b.cs	3d110 <__sanitizer_set_death_callback@@Base+0x7470>  // b.hs, b.nlast
   3d0e0:	ldr	x0, [sp, #88]
   3d0e4:	add	x0, x0, #0x18
   3d0e8:	ldr	x1, [x0]
   3d0ec:	ldr	x0, [sp, #56]
   3d0f0:	cmp	x1, x0
   3d0f4:	b.hi	3d110 <__sanitizer_set_death_callback@@Base+0x7470>  // b.pmore
   3d0f8:	ldr	x0, [sp, #88]
   3d0fc:	add	x0, x0, #0x18
   3d100:	ldr	x1, [x0, #8]
   3d104:	ldr	x0, [sp, #56]
   3d108:	cmp	x1, x0
   3d10c:	b.hi	3d0a0 <__sanitizer_set_death_callback@@Base+0x7400>  // b.pmore
   3d110:	ldr	x0, [sp, #88]
   3d114:	ldr	x0, [x0, #16]
   3d118:	str	x0, [sp, #80]
   3d11c:	ldr	x0, [sp, #56]
   3d120:	ldr	x5, [sp, #16]
   3d124:	ldr	x4, [sp, #24]
   3d128:	ldr	x3, [sp, #32]
   3d12c:	ldr	x2, [sp, #40]
   3d130:	ldr	x1, [sp, #80]
   3d134:	bl	3d028 <__sanitizer_set_death_callback@@Base+0x7388>
   3d138:	str	w0, [sp, #76]
   3d13c:	ldr	w0, [sp, #76]
   3d140:	cmp	w0, #0x0
   3d144:	b.eq	3d150 <__sanitizer_set_death_callback@@Base+0x74b0>  // b.none
   3d148:	ldr	w0, [sp, #76]
   3d14c:	b	3d1b8 <__sanitizer_set_death_callback@@Base+0x7518>
   3d150:	ldr	x1, [sp, #56]
   3d154:	ldr	x0, [sp, #24]
   3d158:	ldr	x2, [x0]
   3d15c:	ldr	x0, [sp, #16]
   3d160:	ldr	w3, [x0]
   3d164:	ldr	x0, [sp, #80]
   3d168:	ldr	x0, [x0]
   3d16c:	ldr	x5, [sp, #40]
   3d170:	mov	x4, x0
   3d174:	ldr	x0, [sp, #32]
   3d178:	blr	x5
   3d17c:	str	w0, [sp, #76]
   3d180:	ldr	w0, [sp, #76]
   3d184:	cmp	w0, #0x0
   3d188:	b.eq	3d194 <__sanitizer_set_death_callback@@Base+0x74f4>  // b.none
   3d18c:	ldr	w0, [sp, #76]
   3d190:	b	3d1b8 <__sanitizer_set_death_callback@@Base+0x7518>
   3d194:	ldr	x0, [sp, #80]
   3d198:	ldr	x1, [x0, #8]
   3d19c:	ldr	x0, [sp, #24]
   3d1a0:	str	x1, [x0]
   3d1a4:	ldr	x0, [sp, #80]
   3d1a8:	ldr	w1, [x0, #16]
   3d1ac:	ldr	x0, [sp, #16]
   3d1b0:	str	w1, [x0]
   3d1b4:	mov	w0, #0x0                   	// #0
   3d1b8:	ldp	x29, x30, [sp], #96
   3d1bc:	ret
   3d1c0:	sub	sp, sp, #0x130
   3d1c4:	stp	x29, x30, [sp, #16]
   3d1c8:	add	x29, sp, #0x10
   3d1cc:	str	x0, [sp, #88]
   3d1d0:	str	x1, [sp, #80]
   3d1d4:	str	x2, [sp, #72]
   3d1d8:	str	x3, [sp, #64]
   3d1dc:	str	x4, [sp, #56]
   3d1e0:	str	x5, [sp, #48]
   3d1e4:	str	x6, [sp, #40]
   3d1e8:	ldr	x0, [sp, #40]
   3d1ec:	mov	w1, #0x1                   	// #1
   3d1f0:	str	w1, [x0]
   3d1f4:	ldr	x0, [sp, #80]
   3d1f8:	ldr	x0, [x0, #32]
   3d1fc:	cmp	x0, #0x0
   3d200:	b.eq	3d230 <__sanitizer_set_death_callback@@Base+0x7590>  // b.none
   3d204:	ldr	x0, [sp, #80]
   3d208:	ldr	x1, [x0, #24]
   3d20c:	ldr	x0, [sp, #80]
   3d210:	ldr	x2, [x0, #32]
   3d214:	add	x5, sp, #0x48
   3d218:	adrp	x0, 39000 <__sanitizer_set_death_callback@@Base+0x3360>
   3d21c:	add	x4, x0, #0xabc
   3d220:	mov	x3, #0x18                  	// #24
   3d224:	mov	x0, x5
   3d228:	bl	6e40 <bsearch@plt>
   3d22c:	b	3d234 <__sanitizer_set_death_callback@@Base+0x7594>
   3d230:	mov	x0, #0x0                   	// #0
   3d234:	str	x0, [sp, #296]
   3d238:	ldr	x0, [sp, #296]
   3d23c:	cmp	x0, #0x0
   3d240:	b.ne	3d260 <__sanitizer_set_death_callback@@Base+0x75c0>  // b.any
   3d244:	ldr	x0, [sp, #40]
   3d248:	str	wzr, [x0]
   3d24c:	mov	w0, #0x0                   	// #0
   3d250:	b	3d890 <__sanitizer_set_death_callback@@Base+0x7bf0>
   3d254:	ldr	x0, [sp, #296]
   3d258:	add	x0, x0, #0x18
   3d25c:	str	x0, [sp, #296]
   3d260:	ldr	x0, [sp, #80]
   3d264:	ldr	x0, [x0, #24]
   3d268:	ldr	x1, [sp, #296]
   3d26c:	sub	x0, x1, x0
   3d270:	asr	x1, x0, #3
   3d274:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   3d278:	movk	x0, #0xaaab
   3d27c:	mul	x0, x1, x0
   3d280:	add	x1, x0, #0x1
   3d284:	ldr	x0, [sp, #80]
   3d288:	ldr	x0, [x0, #32]
   3d28c:	cmp	x1, x0
   3d290:	b.cs	3d2c4 <__sanitizer_set_death_callback@@Base+0x7624>  // b.hs, b.nlast
   3d294:	ldr	x0, [sp, #296]
   3d298:	add	x0, x0, #0x18
   3d29c:	ldr	x1, [x0]
   3d2a0:	ldr	x0, [sp, #72]
   3d2a4:	cmp	x1, x0
   3d2a8:	b.hi	3d2c4 <__sanitizer_set_death_callback@@Base+0x7624>  // b.pmore
   3d2ac:	ldr	x0, [sp, #296]
   3d2b0:	add	x0, x0, #0x18
   3d2b4:	ldr	x1, [x0, #8]
   3d2b8:	ldr	x0, [sp, #72]
   3d2bc:	cmp	x1, x0
   3d2c0:	b.hi	3d254 <__sanitizer_set_death_callback@@Base+0x75b4>  // b.pmore
   3d2c4:	ldr	x0, [sp, #296]
   3d2c8:	ldr	x0, [x0, #16]
   3d2cc:	str	x0, [sp, #288]
   3d2d0:	ldr	x0, [sp, #288]
   3d2d4:	ldr	x0, [x0, #104]
   3d2d8:	str	x0, [sp, #200]
   3d2dc:	b	3d330 <__sanitizer_set_death_callback@@Base+0x7690>
   3d2e0:	ldr	x0, [sp, #88]
   3d2e4:	ldr	w0, [x0, #8]
   3d2e8:	cmp	w0, #0x0
   3d2ec:	b.eq	3d300 <__sanitizer_set_death_callback@@Base+0x7660>  // b.none
   3d2f0:	ldr	x0, [sp, #288]
   3d2f4:	add	x0, x0, #0x68
   3d2f8:	ldar	x0, [x0]
   3d2fc:	str	x0, [sp, #200]
   3d300:	ldr	x0, [sp, #200]
   3d304:	cmn	x0, #0x1
   3d308:	b.ne	3d378 <__sanitizer_set_death_callback@@Base+0x76d8>  // b.any
   3d30c:	ldr	x0, [sp, #296]
   3d310:	sub	x0, x0, #0x18
   3d314:	str	x0, [sp, #296]
   3d318:	ldr	x0, [sp, #296]
   3d31c:	ldr	x0, [x0, #16]
   3d320:	str	x0, [sp, #288]
   3d324:	ldr	x0, [sp, #288]
   3d328:	ldr	x0, [x0, #104]
   3d32c:	str	x0, [sp, #200]
   3d330:	ldr	x0, [sp, #80]
   3d334:	ldr	x0, [x0, #24]
   3d338:	ldr	x1, [sp, #296]
   3d33c:	cmp	x1, x0
   3d340:	b.ls	3d37c <__sanitizer_set_death_callback@@Base+0x76dc>  // b.plast
   3d344:	ldr	x0, [sp, #296]
   3d348:	sub	x0, x0, #0x18
   3d34c:	ldr	x1, [x0]
   3d350:	ldr	x0, [sp, #72]
   3d354:	cmp	x1, x0
   3d358:	b.hi	3d37c <__sanitizer_set_death_callback@@Base+0x76dc>  // b.pmore
   3d35c:	ldr	x0, [sp, #296]
   3d360:	sub	x0, x0, #0x18
   3d364:	ldr	x1, [x0, #8]
   3d368:	ldr	x0, [sp, #72]
   3d36c:	cmp	x1, x0
   3d370:	b.hi	3d2e0 <__sanitizer_set_death_callback@@Base+0x7640>  // b.pmore
   3d374:	b	3d37c <__sanitizer_set_death_callback@@Base+0x76dc>
   3d378:	nop
   3d37c:	ldr	x0, [sp, #88]
   3d380:	ldr	w0, [x0, #8]
   3d384:	cmp	w0, #0x0
   3d388:	b.eq	3d39c <__sanitizer_set_death_callback@@Base+0x76fc>  // b.none
   3d38c:	ldr	x0, [sp, #288]
   3d390:	add	x0, x0, #0x68
   3d394:	ldar	x0, [x0]
   3d398:	str	x0, [sp, #200]
   3d39c:	str	wzr, [sp, #284]
   3d3a0:	ldr	x0, [sp, #200]
   3d3a4:	cmp	x0, #0x0
   3d3a8:	b.ne	3d4f8 <__sanitizer_set_death_callback@@Base+0x7858>  // b.any
   3d3ac:	str	xzr, [sp, #192]
   3d3b0:	str	xzr, [sp, #168]
   3d3b4:	ldr	x0, [sp, #296]
   3d3b8:	ldr	x0, [x0, #16]
   3d3bc:	add	x3, sp, #0xa0
   3d3c0:	add	x2, sp, #0xc8
   3d3c4:	add	x1, sp, #0x60
   3d3c8:	mov	x7, x3
   3d3cc:	mov	x6, x2
   3d3d0:	mov	x5, x1
   3d3d4:	mov	x4, x0
   3d3d8:	ldr	x3, [sp, #48]
   3d3dc:	ldr	x2, [sp, #56]
   3d3e0:	ldr	x1, [sp, #80]
   3d3e4:	ldr	x0, [sp, #88]
   3d3e8:	bl	3bc5c <__sanitizer_set_death_callback@@Base+0x5fbc>
   3d3ec:	cmp	w0, #0x0
   3d3f0:	b.eq	3d474 <__sanitizer_set_death_callback@@Base+0x77d4>  // b.none
   3d3f4:	ldr	x0, [sp, #88]
   3d3f8:	ldr	w0, [x0, #8]
   3d3fc:	cmp	w0, #0x0
   3d400:	b.eq	3d40c <__sanitizer_set_death_callback@@Base+0x776c>  // b.none
   3d404:	str	xzr, [sp, #272]
   3d408:	b	3d418 <__sanitizer_set_death_callback@@Base+0x7778>
   3d40c:	ldr	x0, [sp, #80]
   3d410:	add	x0, x0, #0x80
   3d414:	str	x0, [sp, #272]
   3d418:	ldr	x0, [sp, #296]
   3d41c:	ldr	x2, [x0, #16]
   3d420:	add	x3, sp, #0xc0
   3d424:	add	x1, sp, #0x60
   3d428:	add	x0, sp, #0xa8
   3d42c:	str	x0, [sp]
   3d430:	mov	x7, x3
   3d434:	ldr	x6, [sp, #272]
   3d438:	mov	x5, x2
   3d43c:	ldr	x4, [sp, #48]
   3d440:	ldr	x3, [sp, #56]
   3d444:	mov	x2, x1
   3d448:	ldr	x1, [sp, #80]
   3d44c:	ldr	x0, [sp, #88]
   3d450:	bl	3ce48 <__sanitizer_set_death_callback@@Base+0x71a8>
   3d454:	add	x0, sp, #0x60
   3d458:	ldr	x3, [sp, #48]
   3d45c:	ldr	x2, [sp, #56]
   3d460:	mov	x1, x0
   3d464:	ldr	x0, [sp, #88]
   3d468:	bl	3ae3c <__sanitizer_set_death_callback@@Base+0x519c>
   3d46c:	mov	w0, #0x1                   	// #1
   3d470:	str	w0, [sp, #284]
   3d474:	ldr	x0, [sp, #88]
   3d478:	ldr	w0, [x0, #8]
   3d47c:	cmp	w0, #0x0
   3d480:	b.ne	3d4b8 <__sanitizer_set_death_callback@@Base+0x7818>  // b.any
   3d484:	ldr	x1, [sp, #160]
   3d488:	ldr	x0, [sp, #288]
   3d48c:	str	x1, [x0, #112]
   3d490:	ldr	x1, [sp, #192]
   3d494:	ldr	x0, [sp, #288]
   3d498:	str	x1, [x0, #120]
   3d49c:	ldr	x1, [sp, #168]
   3d4a0:	ldr	x0, [sp, #288]
   3d4a4:	str	x1, [x0, #128]
   3d4a8:	ldr	x1, [sp, #200]
   3d4ac:	ldr	x0, [sp, #288]
   3d4b0:	str	x1, [x0, #104]
   3d4b4:	b	3d4f8 <__sanitizer_set_death_callback@@Base+0x7858>
   3d4b8:	ldr	x0, [sp, #288]
   3d4bc:	add	x0, x0, #0x70
   3d4c0:	ldr	x1, [sp, #160]
   3d4c4:	stlr	x1, [x0]
   3d4c8:	ldr	x0, [sp, #288]
   3d4cc:	add	x0, x0, #0x78
   3d4d0:	ldr	x1, [sp, #192]
   3d4d4:	stlr	x1, [x0]
   3d4d8:	ldr	x0, [sp, #288]
   3d4dc:	add	x0, x0, #0x80
   3d4e0:	ldr	x1, [sp, #168]
   3d4e4:	stlr	x1, [x0]
   3d4e8:	ldr	x0, [sp, #288]
   3d4ec:	add	x0, x0, #0x68
   3d4f0:	ldr	x1, [sp, #200]
   3d4f4:	stlr	x1, [x0]
   3d4f8:	ldr	x0, [sp, #200]
   3d4fc:	cmn	x0, #0x1
   3d500:	b.ne	3d55c <__sanitizer_set_death_callback@@Base+0x78bc>  // b.any
   3d504:	ldr	w0, [sp, #284]
   3d508:	cmp	w0, #0x0
   3d50c:	b.eq	3d538 <__sanitizer_set_death_callback@@Base+0x7898>  // b.none
   3d510:	ldr	x0, [sp, #72]
   3d514:	ldr	x6, [sp, #40]
   3d518:	ldr	x5, [sp, #48]
   3d51c:	ldr	x4, [sp, #56]
   3d520:	ldr	x3, [sp, #64]
   3d524:	mov	x2, x0
   3d528:	ldr	x1, [sp, #80]
   3d52c:	ldr	x0, [sp, #88]
   3d530:	bl	3d1c0 <__sanitizer_set_death_callback@@Base+0x7520>
   3d534:	b	3d890 <__sanitizer_set_death_callback@@Base+0x7bf0>
   3d538:	ldr	x0, [sp, #72]
   3d53c:	ldr	x5, [sp, #64]
   3d540:	mov	x4, #0x0                   	// #0
   3d544:	mov	w3, #0x0                   	// #0
   3d548:	mov	x2, #0x0                   	// #0
   3d54c:	mov	x1, x0
   3d550:	ldr	x0, [sp, #48]
   3d554:	blr	x5
   3d558:	b	3d890 <__sanitizer_set_death_callback@@Base+0x7bf0>
   3d55c:	ldr	x1, [sp, #200]
   3d560:	ldr	x0, [sp, #296]
   3d564:	ldr	x0, [x0, #16]
   3d568:	ldr	x2, [x0, #112]
   3d56c:	add	x5, sp, #0x48
   3d570:	adrp	x0, 39000 <__sanitizer_set_death_callback@@Base+0x3360>
   3d574:	add	x4, x0, #0xbd0
   3d578:	mov	x3, #0x18                  	// #24
   3d57c:	mov	x0, x5
   3d580:	bl	6e40 <bsearch@plt>
   3d584:	str	x0, [sp, #256]
   3d588:	ldr	x0, [sp, #256]
   3d58c:	cmp	x0, #0x0
   3d590:	b.ne	3d6e4 <__sanitizer_set_death_callback@@Base+0x7a44>  // b.any
   3d594:	ldr	x0, [sp, #296]
   3d598:	ldr	x0, [x0, #16]
   3d59c:	ldr	x0, [x0, #80]
   3d5a0:	cmp	x0, #0x0
   3d5a4:	b.ne	3d6b8 <__sanitizer_set_death_callback@@Base+0x7a18>  // b.any
   3d5a8:	ldr	x0, [sp, #296]
   3d5ac:	ldr	x0, [x0, #16]
   3d5b0:	ldr	x0, [x0, #64]
   3d5b4:	str	x0, [sp, #264]
   3d5b8:	ldr	x0, [sp, #264]
   3d5bc:	cmp	x0, #0x0
   3d5c0:	b.eq	3d6a8 <__sanitizer_set_death_callback@@Base+0x7a08>  // b.none
   3d5c4:	ldr	x0, [sp, #264]
   3d5c8:	ldrb	w0, [x0]
   3d5cc:	cmp	w0, #0x2f
   3d5d0:	b.eq	3d6a8 <__sanitizer_set_death_callback@@Base+0x7a08>  // b.none
   3d5d4:	ldr	x0, [sp, #296]
   3d5d8:	ldr	x0, [x0, #16]
   3d5dc:	ldr	x0, [x0, #72]
   3d5e0:	cmp	x0, #0x0
   3d5e4:	b.eq	3d6a8 <__sanitizer_set_death_callback@@Base+0x7a08>  // b.none
   3d5e8:	ldr	x0, [sp, #264]
   3d5ec:	bl	6a20 <__asan_internal_strlen@plt>
   3d5f0:	str	x0, [sp, #232]
   3d5f4:	ldr	x0, [sp, #296]
   3d5f8:	ldr	x0, [x0, #16]
   3d5fc:	ldr	x0, [x0, #72]
   3d600:	str	x0, [sp, #224]
   3d604:	ldr	x0, [sp, #224]
   3d608:	bl	6a20 <__asan_internal_strlen@plt>
   3d60c:	str	x0, [sp, #216]
   3d610:	ldr	x1, [sp, #216]
   3d614:	ldr	x0, [sp, #232]
   3d618:	add	x0, x1, x0
   3d61c:	add	x0, x0, #0x2
   3d620:	ldr	x3, [sp, #48]
   3d624:	ldr	x2, [sp, #56]
   3d628:	mov	x1, x0
   3d62c:	ldr	x0, [sp, #88]
   3d630:	bl	6b10 <__asan_backtrace_alloc@plt>
   3d634:	str	x0, [sp, #208]
   3d638:	ldr	x0, [sp, #208]
   3d63c:	cmp	x0, #0x0
   3d640:	b.ne	3d654 <__sanitizer_set_death_callback@@Base+0x79b4>  // b.any
   3d644:	ldr	x0, [sp, #40]
   3d648:	str	wzr, [x0]
   3d64c:	mov	w0, #0x0                   	// #0
   3d650:	b	3d890 <__sanitizer_set_death_callback@@Base+0x7bf0>
   3d654:	ldr	x2, [sp, #216]
   3d658:	ldr	x1, [sp, #224]
   3d65c:	ldr	x0, [sp, #208]
   3d660:	bl	6a10 <__asan_internal_memcpy@plt>
   3d664:	ldr	x1, [sp, #208]
   3d668:	ldr	x0, [sp, #216]
   3d66c:	add	x0, x1, x0
   3d670:	mov	w1, #0x2f                  	// #47
   3d674:	strb	w1, [x0]
   3d678:	ldr	x0, [sp, #216]
   3d67c:	add	x0, x0, #0x1
   3d680:	ldr	x1, [sp, #208]
   3d684:	add	x3, x1, x0
   3d688:	ldr	x0, [sp, #232]
   3d68c:	add	x0, x0, #0x1
   3d690:	mov	x2, x0
   3d694:	ldr	x1, [sp, #264]
   3d698:	mov	x0, x3
   3d69c:	bl	6a10 <__asan_internal_memcpy@plt>
   3d6a0:	ldr	x0, [sp, #208]
   3d6a4:	str	x0, [sp, #264]
   3d6a8:	ldr	x0, [sp, #296]
   3d6ac:	ldr	x0, [x0, #16]
   3d6b0:	ldr	x1, [sp, #264]
   3d6b4:	str	x1, [x0, #80]
   3d6b8:	ldr	x1, [sp, #72]
   3d6bc:	ldr	x0, [sp, #296]
   3d6c0:	ldr	x0, [x0, #16]
   3d6c4:	ldr	x0, [x0, #80]
   3d6c8:	ldr	x5, [sp, #64]
   3d6cc:	mov	x4, #0x0                   	// #0
   3d6d0:	mov	w3, #0x0                   	// #0
   3d6d4:	mov	x2, x0
   3d6d8:	ldr	x0, [sp, #48]
   3d6dc:	blr	x5
   3d6e0:	b	3d890 <__sanitizer_set_death_callback@@Base+0x7bf0>
   3d6e4:	ldr	x0, [sp, #296]
   3d6e8:	ldr	x0, [x0, #16]
   3d6ec:	ldr	x0, [x0, #128]
   3d6f0:	cmp	x0, #0x0
   3d6f4:	b.ne	3d724 <__sanitizer_set_death_callback@@Base+0x7a84>  // b.any
   3d6f8:	ldr	x1, [sp, #72]
   3d6fc:	ldr	x0, [sp, #256]
   3d700:	ldr	x2, [x0, #8]
   3d704:	ldr	x0, [sp, #256]
   3d708:	ldr	w0, [x0, #16]
   3d70c:	ldr	x5, [sp, #64]
   3d710:	mov	x4, #0x0                   	// #0
   3d714:	mov	w3, w0
   3d718:	ldr	x0, [sp, #48]
   3d71c:	blr	x5
   3d720:	b	3d890 <__sanitizer_set_death_callback@@Base+0x7bf0>
   3d724:	ldr	x0, [sp, #296]
   3d728:	ldr	x0, [x0, #16]
   3d72c:	ldr	x1, [x0, #120]
   3d730:	ldr	x0, [sp, #296]
   3d734:	ldr	x0, [x0, #16]
   3d738:	ldr	x2, [x0, #128]
   3d73c:	add	x5, sp, #0x48
   3d740:	adrp	x0, 39000 <__sanitizer_set_death_callback@@Base+0x3360>
   3d744:	add	x4, x0, #0x7fc
   3d748:	mov	x3, #0x18                  	// #24
   3d74c:	mov	x0, x5
   3d750:	bl	6e40 <bsearch@plt>
   3d754:	str	x0, [sp, #192]
   3d758:	ldr	x0, [sp, #192]
   3d75c:	cmp	x0, #0x0
   3d760:	b.ne	3d79c <__sanitizer_set_death_callback@@Base+0x7afc>  // b.any
   3d764:	ldr	x1, [sp, #72]
   3d768:	ldr	x0, [sp, #256]
   3d76c:	ldr	x2, [x0, #8]
   3d770:	ldr	x0, [sp, #256]
   3d774:	ldr	w0, [x0, #16]
   3d778:	ldr	x5, [sp, #64]
   3d77c:	mov	x4, #0x0                   	// #0
   3d780:	mov	w3, w0
   3d784:	ldr	x0, [sp, #48]
   3d788:	blr	x5
   3d78c:	b	3d890 <__sanitizer_set_death_callback@@Base+0x7bf0>
   3d790:	ldr	x0, [sp, #192]
   3d794:	add	x0, x0, #0x18
   3d798:	str	x0, [sp, #192]
   3d79c:	ldr	x1, [sp, #192]
   3d7a0:	ldr	x0, [sp, #296]
   3d7a4:	ldr	x0, [x0, #16]
   3d7a8:	ldr	x0, [x0, #120]
   3d7ac:	sub	x0, x1, x0
   3d7b0:	asr	x1, x0, #3
   3d7b4:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   3d7b8:	movk	x0, #0xaaab
   3d7bc:	mul	x0, x1, x0
   3d7c0:	add	x0, x0, #0x1
   3d7c4:	mov	x1, x0
   3d7c8:	ldr	x0, [sp, #296]
   3d7cc:	ldr	x0, [x0, #16]
   3d7d0:	ldr	x0, [x0, #128]
   3d7d4:	cmp	x1, x0
   3d7d8:	b.cs	3d80c <__sanitizer_set_death_callback@@Base+0x7b6c>  // b.hs, b.nlast
   3d7dc:	ldr	x0, [sp, #192]
   3d7e0:	add	x0, x0, #0x18
   3d7e4:	ldr	x1, [x0]
   3d7e8:	ldr	x0, [sp, #72]
   3d7ec:	cmp	x1, x0
   3d7f0:	b.hi	3d80c <__sanitizer_set_death_callback@@Base+0x7b6c>  // b.pmore
   3d7f4:	ldr	x0, [sp, #192]
   3d7f8:	add	x0, x0, #0x18
   3d7fc:	ldr	x1, [x0, #8]
   3d800:	ldr	x0, [sp, #72]
   3d804:	cmp	x1, x0
   3d808:	b.hi	3d790 <__sanitizer_set_death_callback@@Base+0x7af0>  // b.pmore
   3d80c:	ldr	x0, [sp, #192]
   3d810:	ldr	x0, [x0, #16]
   3d814:	str	x0, [sp, #248]
   3d818:	ldr	x0, [sp, #256]
   3d81c:	ldr	x0, [x0, #8]
   3d820:	str	x0, [sp, #184]
   3d824:	ldr	x0, [sp, #256]
   3d828:	ldr	w0, [x0, #16]
   3d82c:	str	w0, [sp, #180]
   3d830:	ldr	x0, [sp, #72]
   3d834:	add	x2, sp, #0xb4
   3d838:	add	x1, sp, #0xb8
   3d83c:	mov	x5, x2
   3d840:	mov	x4, x1
   3d844:	ldr	x3, [sp, #48]
   3d848:	ldr	x2, [sp, #64]
   3d84c:	ldr	x1, [sp, #248]
   3d850:	bl	3d028 <__sanitizer_set_death_callback@@Base+0x7388>
   3d854:	str	w0, [sp, #244]
   3d858:	ldr	w0, [sp, #244]
   3d85c:	cmp	w0, #0x0
   3d860:	b.eq	3d86c <__sanitizer_set_death_callback@@Base+0x7bcc>  // b.none
   3d864:	ldr	w0, [sp, #244]
   3d868:	b	3d890 <__sanitizer_set_death_callback@@Base+0x7bf0>
   3d86c:	ldr	x1, [sp, #72]
   3d870:	ldr	x2, [sp, #184]
   3d874:	ldr	w3, [sp, #180]
   3d878:	ldr	x0, [sp, #248]
   3d87c:	ldr	x0, [x0]
   3d880:	ldr	x5, [sp, #64]
   3d884:	mov	x4, x0
   3d888:	ldr	x0, [sp, #48]
   3d88c:	blr	x5
   3d890:	ldp	x29, x30, [sp, #16]
   3d894:	add	sp, sp, #0x130
   3d898:	ret
   3d89c:	stp	x29, x30, [sp, #-96]!
   3d8a0:	mov	x29, sp
   3d8a4:	str	x0, [sp, #56]
   3d8a8:	str	x1, [sp, #48]
   3d8ac:	str	x2, [sp, #40]
   3d8b0:	str	x3, [sp, #32]
   3d8b4:	str	x4, [sp, #24]
   3d8b8:	ldr	x0, [sp, #56]
   3d8bc:	ldr	w0, [x0, #8]
   3d8c0:	cmp	w0, #0x0
   3d8c4:	b.ne	3d93c <__sanitizer_set_death_callback@@Base+0x7c9c>  // b.any
   3d8c8:	ldr	x0, [sp, #56]
   3d8cc:	ldr	x0, [x0, #32]
   3d8d0:	str	x0, [sp, #88]
   3d8d4:	b	3d92c <__sanitizer_set_death_callback@@Base+0x7c8c>
   3d8d8:	add	x0, sp, #0x48
   3d8dc:	mov	x6, x0
   3d8e0:	ldr	x5, [sp, #24]
   3d8e4:	ldr	x4, [sp, #32]
   3d8e8:	ldr	x3, [sp, #40]
   3d8ec:	ldr	x2, [sp, #48]
   3d8f0:	ldr	x1, [sp, #88]
   3d8f4:	ldr	x0, [sp, #56]
   3d8f8:	bl	3d1c0 <__sanitizer_set_death_callback@@Base+0x7520>
   3d8fc:	str	w0, [sp, #76]
   3d900:	ldr	w0, [sp, #76]
   3d904:	cmp	w0, #0x0
   3d908:	b.ne	3d918 <__sanitizer_set_death_callback@@Base+0x7c78>  // b.any
   3d90c:	ldr	w0, [sp, #72]
   3d910:	cmp	w0, #0x0
   3d914:	b.eq	3d920 <__sanitizer_set_death_callback@@Base+0x7c80>  // b.none
   3d918:	ldr	w0, [sp, #76]
   3d91c:	b	3d9d4 <__sanitizer_set_death_callback@@Base+0x7d34>
   3d920:	ldr	x0, [sp, #88]
   3d924:	ldr	x0, [x0]
   3d928:	str	x0, [sp, #88]
   3d92c:	ldr	x0, [sp, #88]
   3d930:	cmp	x0, #0x0
   3d934:	b.ne	3d8d8 <__sanitizer_set_death_callback@@Base+0x7c38>  // b.any
   3d938:	b	3d9b8 <__sanitizer_set_death_callback@@Base+0x7d18>
   3d93c:	ldr	x0, [sp, #56]
   3d940:	add	x0, x0, #0x20
   3d944:	str	x0, [sp, #80]
   3d948:	ldr	x0, [sp, #80]
   3d94c:	ldar	x0, [x0]
   3d950:	str	x0, [sp, #88]
   3d954:	ldr	x0, [sp, #88]
   3d958:	cmp	x0, #0x0
   3d95c:	b.eq	3d9b4 <__sanitizer_set_death_callback@@Base+0x7d14>  // b.none
   3d960:	add	x0, sp, #0x48
   3d964:	mov	x6, x0
   3d968:	ldr	x5, [sp, #24]
   3d96c:	ldr	x4, [sp, #32]
   3d970:	ldr	x3, [sp, #40]
   3d974:	ldr	x2, [sp, #48]
   3d978:	ldr	x1, [sp, #88]
   3d97c:	ldr	x0, [sp, #56]
   3d980:	bl	3d1c0 <__sanitizer_set_death_callback@@Base+0x7520>
   3d984:	str	w0, [sp, #76]
   3d988:	ldr	w0, [sp, #76]
   3d98c:	cmp	w0, #0x0
   3d990:	b.ne	3d9a0 <__sanitizer_set_death_callback@@Base+0x7d00>  // b.any
   3d994:	ldr	w0, [sp, #72]
   3d998:	cmp	w0, #0x0
   3d99c:	b.eq	3d9a8 <__sanitizer_set_death_callback@@Base+0x7d08>  // b.none
   3d9a0:	ldr	w0, [sp, #76]
   3d9a4:	b	3d9d4 <__sanitizer_set_death_callback@@Base+0x7d34>
   3d9a8:	ldr	x0, [sp, #88]
   3d9ac:	str	x0, [sp, #80]
   3d9b0:	b	3d948 <__sanitizer_set_death_callback@@Base+0x7ca8>
   3d9b4:	nop
   3d9b8:	ldr	x5, [sp, #40]
   3d9bc:	mov	x4, #0x0                   	// #0
   3d9c0:	mov	w3, #0x0                   	// #0
   3d9c4:	mov	x2, #0x0                   	// #0
   3d9c8:	ldr	x1, [sp, #48]
   3d9cc:	ldr	x0, [sp, #24]
   3d9d0:	blr	x5
   3d9d4:	ldp	x29, x30, [sp], #96
   3d9d8:	ret
   3d9dc:	sub	sp, sp, #0x100
   3d9e0:	stp	x29, x30, [sp, #64]
   3d9e4:	add	x29, sp, #0x40
   3d9e8:	str	x0, [sp, #136]
   3d9ec:	str	x1, [sp, #128]
   3d9f0:	str	x2, [sp, #120]
   3d9f4:	str	x3, [sp, #112]
   3d9f8:	str	x4, [sp, #104]
   3d9fc:	str	x5, [sp, #96]
   3da00:	str	x6, [sp, #88]
   3da04:	str	x7, [sp, #80]
   3da08:	add	x0, sp, #0x98
   3da0c:	str	x0, [sp, #56]
   3da10:	add	x0, sp, #0xb8
   3da14:	str	x0, [sp, #48]
   3da18:	ldr	x0, [sp, #312]
   3da1c:	str	x0, [sp, #40]
   3da20:	ldr	x0, [sp, #304]
   3da24:	str	x0, [sp, #32]
   3da28:	ldr	x0, [sp, #296]
   3da2c:	str	x0, [sp, #24]
   3da30:	ldr	w0, [sp, #288]
   3da34:	str	w0, [sp, #16]
   3da38:	ldr	x0, [sp, #280]
   3da3c:	str	x0, [sp, #8]
   3da40:	ldr	x0, [sp, #272]
   3da44:	str	x0, [sp]
   3da48:	ldr	x7, [sp, #264]
   3da4c:	ldr	x6, [sp, #256]
   3da50:	ldr	x5, [sp, #80]
   3da54:	ldr	x4, [sp, #88]
   3da58:	ldr	x3, [sp, #112]
   3da5c:	ldr	x2, [sp, #120]
   3da60:	ldr	x1, [sp, #128]
   3da64:	ldr	x0, [sp, #136]
   3da68:	bl	3a81c <__sanitizer_set_death_callback@@Base+0x4b7c>
   3da6c:	cmp	w0, #0x0
   3da70:	b.ne	3da7c <__sanitizer_set_death_callback@@Base+0x7ddc>  // b.any
   3da74:	mov	x0, #0x0                   	// #0
   3da78:	b	3dc04 <__sanitizer_set_death_callback@@Base+0x7f64>
   3da7c:	add	x0, sp, #0xb8
   3da80:	ldr	x3, [sp, #312]
   3da84:	ldr	x2, [sp, #304]
   3da88:	mov	x1, x0
   3da8c:	ldr	x0, [sp, #136]
   3da90:	bl	6b60 <__asan_backtrace_vector_release@plt>
   3da94:	cmp	w0, #0x0
   3da98:	b.ne	3daa4 <__sanitizer_set_death_callback@@Base+0x7e04>  // b.any
   3da9c:	mov	x0, #0x0                   	// #0
   3daa0:	b	3dc04 <__sanitizer_set_death_callback@@Base+0x7f64>
   3daa4:	add	x0, sp, #0x98
   3daa8:	ldr	x3, [sp, #312]
   3daac:	ldr	x2, [sp, #304]
   3dab0:	mov	x1, x0
   3dab4:	ldr	x0, [sp, #136]
   3dab8:	bl	6b60 <__asan_backtrace_vector_release@plt>
   3dabc:	cmp	w0, #0x0
   3dac0:	b.ne	3dacc <__sanitizer_set_death_callback@@Base+0x7e2c>  // b.any
   3dac4:	mov	x0, #0x0                   	// #0
   3dac8:	b	3dc04 <__sanitizer_set_death_callback@@Base+0x7f64>
   3dacc:	ldr	x0, [sp, #184]
   3dad0:	str	x0, [sp, #248]
   3dad4:	ldr	x0, [sp, #152]
   3dad8:	str	x0, [sp, #240]
   3dadc:	ldr	x0, [sp, #208]
   3dae0:	str	x0, [sp, #232]
   3dae4:	ldr	x0, [sp, #176]
   3dae8:	str	x0, [sp, #224]
   3daec:	adrp	x0, 39000 <__sanitizer_set_death_callback@@Base+0x3360>
   3daf0:	add	x3, x0, #0x9c4
   3daf4:	mov	x2, #0x18                  	// #24
   3daf8:	ldr	x1, [sp, #232]
   3dafc:	ldr	x0, [sp, #248]
   3db00:	bl	68f0 <__asan_backtrace_qsort@plt>
   3db04:	ldr	x3, [sp, #312]
   3db08:	ldr	x2, [sp, #304]
   3db0c:	mov	x1, #0xa0                  	// #160
   3db10:	ldr	x0, [sp, #136]
   3db14:	bl	6b10 <__asan_backtrace_alloc@plt>
   3db18:	str	x0, [sp, #216]
   3db1c:	ldr	x0, [sp, #216]
   3db20:	cmp	x0, #0x0
   3db24:	b.ne	3db30 <__sanitizer_set_death_callback@@Base+0x7e90>  // b.any
   3db28:	mov	x0, #0x0                   	// #0
   3db2c:	b	3dc04 <__sanitizer_set_death_callback@@Base+0x7f64>
   3db30:	ldr	x0, [sp, #216]
   3db34:	str	xzr, [x0]
   3db38:	ldr	x0, [sp, #216]
   3db3c:	ldr	x1, [sp, #296]
   3db40:	str	x1, [x0, #8]
   3db44:	ldr	x0, [sp, #216]
   3db48:	ldr	x1, [sp, #128]
   3db4c:	str	x1, [x0, #16]
   3db50:	ldr	x0, [sp, #216]
   3db54:	ldr	x1, [sp, #248]
   3db58:	str	x1, [x0, #24]
   3db5c:	ldr	x0, [sp, #216]
   3db60:	ldr	x1, [sp, #232]
   3db64:	str	x1, [x0, #32]
   3db68:	ldr	x0, [sp, #216]
   3db6c:	ldr	x1, [sp, #240]
   3db70:	str	x1, [x0, #40]
   3db74:	ldr	x0, [sp, #216]
   3db78:	ldr	x1, [sp, #224]
   3db7c:	str	x1, [x0, #48]
   3db80:	ldr	x0, [sp, #216]
   3db84:	ldr	x1, [sp, #120]
   3db88:	str	x1, [x0, #56]
   3db8c:	ldr	x0, [sp, #216]
   3db90:	ldr	x1, [sp, #112]
   3db94:	str	x1, [x0, #64]
   3db98:	ldr	x0, [sp, #216]
   3db9c:	ldr	x1, [sp, #104]
   3dba0:	str	x1, [x0, #72]
   3dba4:	ldr	x0, [sp, #216]
   3dba8:	ldr	x1, [sp, #96]
   3dbac:	str	x1, [x0, #80]
   3dbb0:	ldr	x0, [sp, #216]
   3dbb4:	ldr	x1, [sp, #256]
   3dbb8:	str	x1, [x0, #88]
   3dbbc:	ldr	x0, [sp, #216]
   3dbc0:	ldr	x1, [sp, #264]
   3dbc4:	str	x1, [x0, #96]
   3dbc8:	ldr	x0, [sp, #216]
   3dbcc:	ldr	x1, [sp, #272]
   3dbd0:	str	x1, [x0, #104]
   3dbd4:	ldr	x0, [sp, #216]
   3dbd8:	ldr	x1, [sp, #280]
   3dbdc:	str	x1, [x0, #112]
   3dbe0:	ldr	x0, [sp, #216]
   3dbe4:	ldr	w1, [sp, #288]
   3dbe8:	str	w1, [x0, #120]
   3dbec:	ldr	x0, [sp, #216]
   3dbf0:	add	x0, x0, #0x80
   3dbf4:	mov	x2, #0x20                  	// #32
   3dbf8:	mov	w1, #0x0                   	// #0
   3dbfc:	bl	6ab0 <__asan_internal_memset@plt>
   3dc00:	ldr	x0, [sp, #216]
   3dc04:	ldp	x29, x30, [sp, #64]
   3dc08:	add	sp, sp, #0x100
   3dc0c:	ret

000000000003dc10 <__asan_backtrace_dwarf_add@@Base>:
   3dc10:	sub	sp, sp, #0xb0
   3dc14:	stp	x29, x30, [sp, #64]
   3dc18:	add	x29, sp, #0x40
   3dc1c:	str	x0, [sp, #136]
   3dc20:	str	x1, [sp, #128]
   3dc24:	str	x2, [sp, #120]
   3dc28:	str	x3, [sp, #112]
   3dc2c:	str	x4, [sp, #104]
   3dc30:	str	x5, [sp, #96]
   3dc34:	str	x6, [sp, #88]
   3dc38:	str	x7, [sp, #80]
   3dc3c:	ldr	x0, [sp, #232]
   3dc40:	str	x0, [sp, #56]
   3dc44:	ldr	x0, [sp, #224]
   3dc48:	str	x0, [sp, #48]
   3dc4c:	ldr	x0, [sp, #216]
   3dc50:	str	x0, [sp, #40]
   3dc54:	ldr	w0, [sp, #208]
   3dc58:	str	w0, [sp, #32]
   3dc5c:	ldr	x0, [sp, #200]
   3dc60:	str	x0, [sp, #24]
   3dc64:	ldr	x0, [sp, #192]
   3dc68:	str	x0, [sp, #16]
   3dc6c:	ldr	x0, [sp, #184]
   3dc70:	str	x0, [sp, #8]
   3dc74:	ldr	x0, [sp, #176]
   3dc78:	str	x0, [sp]
   3dc7c:	ldr	x7, [sp, #80]
   3dc80:	ldr	x6, [sp, #88]
   3dc84:	ldr	x5, [sp, #96]
   3dc88:	ldr	x4, [sp, #104]
   3dc8c:	ldr	x3, [sp, #112]
   3dc90:	ldr	x2, [sp, #120]
   3dc94:	ldr	x1, [sp, #128]
   3dc98:	ldr	x0, [sp, #136]
   3dc9c:	bl	3d9dc <__sanitizer_set_death_callback@@Base+0x7d3c>
   3dca0:	str	x0, [sp, #152]
   3dca4:	ldr	x0, [sp, #152]
   3dca8:	cmp	x0, #0x0
   3dcac:	b.ne	3dcb8 <__asan_backtrace_dwarf_add@@Base+0xa8>  // b.any
   3dcb0:	mov	w0, #0x0                   	// #0
   3dcb4:	b	3dd98 <__asan_backtrace_dwarf_add@@Base+0x188>
   3dcb8:	ldr	x0, [sp, #248]
   3dcbc:	cmp	x0, #0x0
   3dcc0:	b.eq	3dcd0 <__asan_backtrace_dwarf_add@@Base+0xc0>  // b.none
   3dcc4:	ldr	x0, [sp, #248]
   3dcc8:	ldr	x1, [sp, #152]
   3dccc:	str	x1, [x0]
   3dcd0:	ldr	x0, [sp, #136]
   3dcd4:	ldr	w0, [x0, #8]
   3dcd8:	cmp	w0, #0x0
   3dcdc:	b.ne	3dd1c <__asan_backtrace_dwarf_add@@Base+0x10c>  // b.any
   3dce0:	ldr	x0, [sp, #136]
   3dce4:	add	x0, x0, #0x20
   3dce8:	str	x0, [sp, #168]
   3dcec:	b	3dcfc <__asan_backtrace_dwarf_add@@Base+0xec>
   3dcf0:	ldr	x0, [sp, #168]
   3dcf4:	ldr	x0, [x0]
   3dcf8:	str	x0, [sp, #168]
   3dcfc:	ldr	x0, [sp, #168]
   3dd00:	ldr	x0, [x0]
   3dd04:	cmp	x0, #0x0
   3dd08:	b.ne	3dcf0 <__asan_backtrace_dwarf_add@@Base+0xe0>  // b.any
   3dd0c:	ldr	x0, [sp, #168]
   3dd10:	ldr	x1, [sp, #152]
   3dd14:	str	x1, [x0]
   3dd18:	b	3dd84 <__asan_backtrace_dwarf_add@@Base+0x174>
   3dd1c:	ldr	x0, [sp, #136]
   3dd20:	add	x0, x0, #0x20
   3dd24:	str	x0, [sp, #160]
   3dd28:	ldr	x0, [sp, #160]
   3dd2c:	ldar	x0, [x0]
   3dd30:	str	x0, [sp, #144]
   3dd34:	ldr	x0, [sp, #144]
   3dd38:	cmp	x0, #0x0
   3dd3c:	b.eq	3dd4c <__asan_backtrace_dwarf_add@@Base+0x13c>  // b.none
   3dd40:	ldr	x0, [sp, #144]
   3dd44:	str	x0, [sp, #160]
   3dd48:	b	3dd28 <__asan_backtrace_dwarf_add@@Base+0x118>
   3dd4c:	nop
   3dd50:	ldr	x1, [sp, #152]
   3dd54:	ldr	x0, [sp, #160]
   3dd58:	ldxr	x2, [x0]
   3dd5c:	cbnz	x2, 3dd68 <__asan_backtrace_dwarf_add@@Base+0x158>
   3dd60:	stlxr	w3, x1, [x0]
   3dd64:	cbnz	w3, 3dd58 <__asan_backtrace_dwarf_add@@Base+0x148>
   3dd68:	cmp	x2, #0x0
   3dd6c:	dmb	ish
   3dd70:	cset	w0, eq  // eq = none
   3dd74:	cmp	w0, #0x0
   3dd78:	b.ne	3dd80 <__asan_backtrace_dwarf_add@@Base+0x170>  // b.any
   3dd7c:	b	3dd1c <__asan_backtrace_dwarf_add@@Base+0x10c>
   3dd80:	nop
   3dd84:	ldr	x0, [sp, #240]
   3dd88:	adrp	x1, 3d000 <__sanitizer_set_death_callback@@Base+0x7360>
   3dd8c:	add	x1, x1, #0x89c
   3dd90:	str	x1, [x0]
   3dd94:	mov	w0, #0x1                   	// #1
   3dd98:	ldp	x29, x30, [sp, #64]
   3dd9c:	add	sp, sp, #0xb0
   3dda0:	ret
   3dda4:	stp	x29, x30, [sp, #-160]!
   3dda8:	mov	x29, sp
   3ddac:	str	x0, [sp, #40]
   3ddb0:	str	x1, [sp, #32]
   3ddb4:	str	x2, [sp, #24]
   3ddb8:	ldr	x0, [sp, #40]
   3ddbc:	ldr	w0, [x0, #8]
   3ddc0:	cmp	w0, #0x0
   3ddc4:	b.ne	3ddd8 <__asan_backtrace_dwarf_add@@Base+0x1c8>  // b.any
   3ddc8:	ldr	x0, [sp, #40]
   3ddcc:	ldr	w0, [x0, #56]
   3ddd0:	str	w0, [sp, #156]
   3ddd4:	b	3dde8 <__asan_backtrace_dwarf_add@@Base+0x1d8>
   3ddd8:	ldr	x0, [sp, #40]
   3dddc:	add	x0, x0, #0x38
   3dde0:	ldar	w0, [x0]
   3dde4:	str	w0, [sp, #156]
   3dde8:	ldr	w0, [sp, #156]
   3ddec:	cmp	w0, #0x0
   3ddf0:	b.eq	3de14 <__asan_backtrace_dwarf_add@@Base+0x204>  // b.none
   3ddf4:	ldr	x3, [sp, #32]
   3ddf8:	mov	w2, #0xffffffff            	// #-1
   3ddfc:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   3de00:	add	x1, x0, #0xc8
   3de04:	ldr	x0, [sp, #24]
   3de08:	blr	x3
   3de0c:	mov	w0, #0x0                   	// #0
   3de10:	b	3e0d8 <__asan_backtrace_dwarf_add@@Base+0x4c8>
   3de14:	ldr	x0, [sp, #40]
   3de18:	ldr	w0, [x0, #8]
   3de1c:	cmp	w0, #0x0
   3de20:	b.ne	3de34 <__asan_backtrace_dwarf_add@@Base+0x224>  // b.any
   3de24:	ldr	x0, [sp, #40]
   3de28:	ldr	x0, [x0, #24]
   3de2c:	str	x0, [sp, #128]
   3de30:	b	3de44 <__asan_backtrace_dwarf_add@@Base+0x234>
   3de34:	ldr	x0, [sp, #40]
   3de38:	add	x0, x0, #0x18
   3de3c:	ldar	x0, [x0]
   3de40:	str	x0, [sp, #128]
   3de44:	ldr	x0, [sp, #128]
   3de48:	cmp	x0, #0x0
   3de4c:	b.eq	3de58 <__asan_backtrace_dwarf_add@@Base+0x248>  // b.none
   3de50:	mov	w0, #0x1                   	// #1
   3de54:	b	3e0d8 <__asan_backtrace_dwarf_add@@Base+0x4c8>
   3de58:	mov	w0, #0xffffffff            	// #-1
   3de5c:	str	w0, [sp, #144]
   3de60:	str	wzr, [sp, #148]
   3de64:	str	wzr, [sp, #152]
   3de68:	b	3dfa8 <__asan_backtrace_dwarf_add@@Base+0x398>
   3de6c:	ldr	w0, [sp, #152]
   3de70:	cmp	w0, #0x4
   3de74:	b.eq	3df08 <__asan_backtrace_dwarf_add@@Base+0x2f8>  // b.none
   3de78:	ldr	w0, [sp, #152]
   3de7c:	cmp	w0, #0x4
   3de80:	b.gt	3df38 <__asan_backtrace_dwarf_add@@Base+0x328>
   3de84:	ldr	w0, [sp, #152]
   3de88:	cmp	w0, #0x3
   3de8c:	b.eq	3def8 <__asan_backtrace_dwarf_add@@Base+0x2e8>  // b.none
   3de90:	ldr	w0, [sp, #152]
   3de94:	cmp	w0, #0x3
   3de98:	b.gt	3df38 <__asan_backtrace_dwarf_add@@Base+0x328>
   3de9c:	ldr	w0, [sp, #152]
   3dea0:	cmp	w0, #0x2
   3dea4:	b.eq	3dee8 <__asan_backtrace_dwarf_add@@Base+0x2d8>  // b.none
   3dea8:	ldr	w0, [sp, #152]
   3deac:	cmp	w0, #0x2
   3deb0:	b.gt	3df38 <__asan_backtrace_dwarf_add@@Base+0x328>
   3deb4:	ldr	w0, [sp, #152]
   3deb8:	cmp	w0, #0x0
   3debc:	b.eq	3ded0 <__asan_backtrace_dwarf_add@@Base+0x2c0>  // b.none
   3dec0:	ldr	w0, [sp, #152]
   3dec4:	cmp	w0, #0x1
   3dec8:	b.eq	3dee0 <__asan_backtrace_dwarf_add@@Base+0x2d0>  // b.none
   3decc:	b	3df38 <__asan_backtrace_dwarf_add@@Base+0x328>
   3ded0:	ldr	x0, [sp, #40]
   3ded4:	ldr	x0, [x0]
   3ded8:	str	x0, [sp, #136]
   3dedc:	b	3df3c <__asan_backtrace_dwarf_add@@Base+0x32c>
   3dee0:	str	xzr, [sp, #136]
   3dee4:	b	3df3c <__asan_backtrace_dwarf_add@@Base+0x32c>
   3dee8:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   3deec:	add	x0, x0, #0xf0
   3def0:	str	x0, [sp, #136]
   3def4:	b	3df3c <__asan_backtrace_dwarf_add@@Base+0x32c>
   3def8:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   3defc:	add	x0, x0, #0x100
   3df00:	str	x0, [sp, #136]
   3df04:	b	3df3c <__asan_backtrace_dwarf_add@@Base+0x32c>
   3df08:	bl	6be0 <getpid@plt>
   3df0c:	sxtw	x0, w0
   3df10:	add	x4, sp, #0x40
   3df14:	mov	x3, x0
   3df18:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   3df1c:	add	x2, x0, #0x118
   3df20:	mov	x1, #0x40                  	// #64
   3df24:	mov	x0, x4
   3df28:	bl	6c70 <snprintf@plt>
   3df2c:	add	x0, sp, #0x40
   3df30:	str	x0, [sp, #136]
   3df34:	b	3df3c <__asan_backtrace_dwarf_add@@Base+0x32c>
   3df38:	bl	6e30 <abort@plt>
   3df3c:	ldr	x0, [sp, #136]
   3df40:	cmp	x0, #0x0
   3df44:	b.eq	3df98 <__asan_backtrace_dwarf_add@@Base+0x388>  // b.none
   3df48:	add	x0, sp, #0x3c
   3df4c:	mov	x3, x0
   3df50:	ldr	x2, [sp, #24]
   3df54:	ldr	x1, [sp, #32]
   3df58:	ldr	x0, [sp, #136]
   3df5c:	bl	6f90 <__asan_backtrace_open@plt>
   3df60:	str	w0, [sp, #144]
   3df64:	ldr	w0, [sp, #144]
   3df68:	cmp	w0, #0x0
   3df6c:	b.ge	3df88 <__asan_backtrace_dwarf_add@@Base+0x378>  // b.tcont
   3df70:	ldr	w0, [sp, #60]
   3df74:	cmp	w0, #0x0
   3df78:	b.ne	3df88 <__asan_backtrace_dwarf_add@@Base+0x378>  // b.any
   3df7c:	mov	w0, #0x1                   	// #1
   3df80:	str	w0, [sp, #148]
   3df84:	b	3dfbc <__asan_backtrace_dwarf_add@@Base+0x3ac>
   3df88:	ldr	w0, [sp, #144]
   3df8c:	cmp	w0, #0x0
   3df90:	b.ge	3dfb8 <__asan_backtrace_dwarf_add@@Base+0x3a8>  // b.tcont
   3df94:	b	3df9c <__asan_backtrace_dwarf_add@@Base+0x38c>
   3df98:	nop
   3df9c:	ldr	w0, [sp, #152]
   3dfa0:	add	w0, w0, #0x1
   3dfa4:	str	w0, [sp, #152]
   3dfa8:	ldr	w0, [sp, #152]
   3dfac:	cmp	w0, #0x4
   3dfb0:	b.le	3de6c <__asan_backtrace_dwarf_add@@Base+0x25c>
   3dfb4:	b	3dfbc <__asan_backtrace_dwarf_add@@Base+0x3ac>
   3dfb8:	nop
   3dfbc:	ldr	w0, [sp, #144]
   3dfc0:	cmp	w0, #0x0
   3dfc4:	b.ge	3e024 <__asan_backtrace_dwarf_add@@Base+0x414>  // b.tcont
   3dfc8:	ldr	w0, [sp, #148]
   3dfcc:	cmp	w0, #0x0
   3dfd0:	b.ne	3e01c <__asan_backtrace_dwarf_add@@Base+0x40c>  // b.any
   3dfd4:	ldr	x0, [sp, #40]
   3dfd8:	ldr	x0, [x0]
   3dfdc:	cmp	x0, #0x0
   3dfe0:	b.eq	3e004 <__asan_backtrace_dwarf_add@@Base+0x3f4>  // b.none
   3dfe4:	ldr	x0, [sp, #40]
   3dfe8:	ldr	x0, [x0]
   3dfec:	ldr	x3, [sp, #32]
   3dff0:	mov	w2, #0x2                   	// #2
   3dff4:	mov	x1, x0
   3dff8:	ldr	x0, [sp, #24]
   3dffc:	blr	x3
   3e000:	b	3e01c <__asan_backtrace_dwarf_add@@Base+0x40c>
   3e004:	ldr	x3, [sp, #32]
   3e008:	mov	w2, #0x0                   	// #0
   3e00c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   3e010:	add	x1, x0, #0x130
   3e014:	ldr	x0, [sp, #24]
   3e018:	blr	x3
   3e01c:	mov	w0, #0x1                   	// #1
   3e020:	str	w0, [sp, #156]
   3e024:	ldr	w0, [sp, #156]
   3e028:	cmp	w0, #0x0
   3e02c:	b.ne	3e060 <__asan_backtrace_dwarf_add@@Base+0x450>  // b.any
   3e030:	add	x0, sp, #0x80
   3e034:	mov	x5, x0
   3e038:	ldr	x4, [sp, #24]
   3e03c:	ldr	x3, [sp, #32]
   3e040:	ldr	w2, [sp, #144]
   3e044:	ldr	x1, [sp, #136]
   3e048:	ldr	x0, [sp, #40]
   3e04c:	bl	6e50 <__asan_backtrace_initialize@plt>
   3e050:	cmp	w0, #0x0
   3e054:	b.ne	3e060 <__asan_backtrace_dwarf_add@@Base+0x450>  // b.any
   3e058:	mov	w0, #0x1                   	// #1
   3e05c:	str	w0, [sp, #156]
   3e060:	ldr	w0, [sp, #156]
   3e064:	cmp	w0, #0x0
   3e068:	b.eq	3e0a4 <__asan_backtrace_dwarf_add@@Base+0x494>  // b.none
   3e06c:	ldr	x0, [sp, #40]
   3e070:	ldr	w0, [x0, #8]
   3e074:	cmp	w0, #0x0
   3e078:	b.ne	3e08c <__asan_backtrace_dwarf_add@@Base+0x47c>  // b.any
   3e07c:	ldr	x0, [sp, #40]
   3e080:	mov	w1, #0x1                   	// #1
   3e084:	str	w1, [x0, #56]
   3e088:	b	3e09c <__asan_backtrace_dwarf_add@@Base+0x48c>
   3e08c:	ldr	x0, [sp, #40]
   3e090:	add	x0, x0, #0x38
   3e094:	mov	w1, #0x1                   	// #1
   3e098:	stlr	w1, [x0]
   3e09c:	mov	w0, #0x0                   	// #0
   3e0a0:	b	3e0d8 <__asan_backtrace_dwarf_add@@Base+0x4c8>
   3e0a4:	ldr	x0, [sp, #40]
   3e0a8:	ldr	w0, [x0, #8]
   3e0ac:	cmp	w0, #0x0
   3e0b0:	b.ne	3e0c4 <__asan_backtrace_dwarf_add@@Base+0x4b4>  // b.any
   3e0b4:	ldr	x1, [sp, #128]
   3e0b8:	ldr	x0, [sp, #40]
   3e0bc:	str	x1, [x0, #24]
   3e0c0:	b	3e0d4 <__asan_backtrace_dwarf_add@@Base+0x4c4>
   3e0c4:	ldr	x0, [sp, #40]
   3e0c8:	add	x0, x0, #0x18
   3e0cc:	ldr	x1, [sp, #128]
   3e0d0:	stlr	x1, [x0]
   3e0d4:	mov	w0, #0x1                   	// #1
   3e0d8:	ldp	x29, x30, [sp], #160
   3e0dc:	ret

000000000003e0e0 <__asan_backtrace_pcinfo@@Base>:
   3e0e0:	stp	x29, x30, [sp, #-64]!
   3e0e4:	mov	x29, sp
   3e0e8:	str	x0, [sp, #56]
   3e0ec:	str	x1, [sp, #48]
   3e0f0:	str	x2, [sp, #40]
   3e0f4:	str	x3, [sp, #32]
   3e0f8:	str	x4, [sp, #24]
   3e0fc:	ldr	x2, [sp, #24]
   3e100:	ldr	x1, [sp, #32]
   3e104:	ldr	x0, [sp, #56]
   3e108:	bl	3dda4 <__asan_backtrace_dwarf_add@@Base+0x194>
   3e10c:	cmp	w0, #0x0
   3e110:	b.ne	3e11c <__asan_backtrace_pcinfo@@Base+0x3c>  // b.any
   3e114:	mov	w0, #0x0                   	// #0
   3e118:	b	3e154 <__asan_backtrace_pcinfo@@Base+0x74>
   3e11c:	ldr	x0, [sp, #56]
   3e120:	ldr	w0, [x0, #56]
   3e124:	cmp	w0, #0x0
   3e128:	b.eq	3e134 <__asan_backtrace_pcinfo@@Base+0x54>  // b.none
   3e12c:	mov	w0, #0x0                   	// #0
   3e130:	b	3e154 <__asan_backtrace_pcinfo@@Base+0x74>
   3e134:	ldr	x0, [sp, #56]
   3e138:	ldr	x5, [x0, #24]
   3e13c:	ldr	x4, [sp, #24]
   3e140:	ldr	x3, [sp, #32]
   3e144:	ldr	x2, [sp, #40]
   3e148:	ldr	x1, [sp, #48]
   3e14c:	ldr	x0, [sp, #56]
   3e150:	blr	x5
   3e154:	ldp	x29, x30, [sp], #64
   3e158:	ret

000000000003e15c <__asan_backtrace_syminfo@@Base>:
   3e15c:	stp	x29, x30, [sp, #-64]!
   3e160:	mov	x29, sp
   3e164:	str	x0, [sp, #56]
   3e168:	str	x1, [sp, #48]
   3e16c:	str	x2, [sp, #40]
   3e170:	str	x3, [sp, #32]
   3e174:	str	x4, [sp, #24]
   3e178:	ldr	x2, [sp, #24]
   3e17c:	ldr	x1, [sp, #32]
   3e180:	ldr	x0, [sp, #56]
   3e184:	bl	3dda4 <__asan_backtrace_dwarf_add@@Base+0x194>
   3e188:	cmp	w0, #0x0
   3e18c:	b.ne	3e198 <__asan_backtrace_syminfo@@Base+0x3c>  // b.any
   3e190:	mov	w0, #0x0                   	// #0
   3e194:	b	3e1d4 <__asan_backtrace_syminfo@@Base+0x78>
   3e198:	ldr	x0, [sp, #56]
   3e19c:	ldr	w0, [x0, #56]
   3e1a0:	cmp	w0, #0x0
   3e1a4:	b.eq	3e1b0 <__asan_backtrace_syminfo@@Base+0x54>  // b.none
   3e1a8:	mov	w0, #0x0                   	// #0
   3e1ac:	b	3e1d4 <__asan_backtrace_syminfo@@Base+0x78>
   3e1b0:	ldr	x0, [sp, #56]
   3e1b4:	ldr	x5, [x0, #40]
   3e1b8:	ldr	x4, [sp, #24]
   3e1bc:	ldr	x3, [sp, #32]
   3e1c0:	ldr	x2, [sp, #40]
   3e1c4:	ldr	x1, [sp, #48]
   3e1c8:	ldr	x0, [sp, #56]
   3e1cc:	blr	x5
   3e1d0:	mov	w0, #0x1                   	// #1
   3e1d4:	ldp	x29, x30, [sp], #64
   3e1d8:	ret

000000000003e1dc <__asan_backtrace_open@@Base>:
   3e1dc:	stp	x29, x30, [sp, #-64]!
   3e1e0:	mov	x29, sp
   3e1e4:	str	x0, [sp, #40]
   3e1e8:	str	x1, [sp, #32]
   3e1ec:	str	x2, [sp, #24]
   3e1f0:	str	x3, [sp, #16]
   3e1f4:	ldr	x0, [sp, #16]
   3e1f8:	cmp	x0, #0x0
   3e1fc:	b.eq	3e208 <__asan_backtrace_open@@Base+0x2c>  // b.none
   3e200:	ldr	x0, [sp, #16]
   3e204:	str	wzr, [x0]
   3e208:	mov	w1, #0x80000               	// #524288
   3e20c:	ldr	x0, [sp, #40]
   3e210:	bl	6a30 <open@plt>
   3e214:	str	w0, [sp, #60]
   3e218:	ldr	w0, [sp, #60]
   3e21c:	cmp	w0, #0x0
   3e220:	b.ge	3e274 <__asan_backtrace_open@@Base+0x98>  // b.tcont
   3e224:	ldr	x0, [sp, #16]
   3e228:	cmp	x0, #0x0
   3e22c:	b.eq	3e250 <__asan_backtrace_open@@Base+0x74>  // b.none
   3e230:	bl	6d00 <__errno_location@plt>
   3e234:	ldr	w0, [x0]
   3e238:	cmp	w0, #0x2
   3e23c:	b.ne	3e250 <__asan_backtrace_open@@Base+0x74>  // b.any
   3e240:	ldr	x0, [sp, #16]
   3e244:	mov	w1, #0x1                   	// #1
   3e248:	str	w1, [x0]
   3e24c:	b	3e26c <__asan_backtrace_open@@Base+0x90>
   3e250:	bl	6d00 <__errno_location@plt>
   3e254:	ldr	w0, [x0]
   3e258:	ldr	x3, [sp, #32]
   3e25c:	mov	w2, w0
   3e260:	ldr	x1, [sp, #40]
   3e264:	ldr	x0, [sp, #24]
   3e268:	blr	x3
   3e26c:	mov	w0, #0xffffffff            	// #-1
   3e270:	b	3e288 <__asan_backtrace_open@@Base+0xac>
   3e274:	mov	w2, #0x1                   	// #1
   3e278:	mov	w1, #0x2                   	// #2
   3e27c:	ldr	w0, [sp, #60]
   3e280:	bl	6f20 <fcntl@plt>
   3e284:	ldr	w0, [sp, #60]
   3e288:	ldp	x29, x30, [sp], #64
   3e28c:	ret

000000000003e290 <__asan_backtrace_close@@Base>:
   3e290:	stp	x29, x30, [sp, #-48]!
   3e294:	mov	x29, sp
   3e298:	str	w0, [sp, #44]
   3e29c:	str	x1, [sp, #32]
   3e2a0:	str	x2, [sp, #24]
   3e2a4:	ldr	w0, [sp, #44]
   3e2a8:	bl	6da0 <close@plt>
   3e2ac:	cmp	w0, #0x0
   3e2b0:	b.ge	3e2dc <__asan_backtrace_close@@Base+0x4c>  // b.tcont
   3e2b4:	bl	6d00 <__errno_location@plt>
   3e2b8:	ldr	w0, [x0]
   3e2bc:	ldr	x3, [sp, #32]
   3e2c0:	mov	w2, w0
   3e2c4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   3e2c8:	add	x1, x0, #0x160
   3e2cc:	ldr	x0, [sp, #24]
   3e2d0:	blr	x3
   3e2d4:	mov	w0, #0x0                   	// #0
   3e2d8:	b	3e2e0 <__asan_backtrace_close@@Base+0x50>
   3e2dc:	mov	w0, #0x1                   	// #1
   3e2e0:	ldp	x29, x30, [sp], #48
   3e2e4:	ret
   3e2e8:	sub	sp, sp, #0x30
   3e2ec:	str	x0, [sp, #24]
   3e2f0:	str	x1, [sp, #16]
   3e2f4:	str	x2, [sp, #8]
   3e2f8:	str	xzr, [sp, #40]
   3e2fc:	b	3e34c <__asan_backtrace_close@@Base+0xbc>
   3e300:	ldr	x0, [sp, #24]
   3e304:	ldrb	w0, [x0]
   3e308:	strb	w0, [sp, #39]
   3e30c:	ldr	x0, [sp, #16]
   3e310:	ldrb	w1, [x0]
   3e314:	ldr	x0, [sp, #24]
   3e318:	strb	w1, [x0]
   3e31c:	ldr	x0, [sp, #16]
   3e320:	ldrb	w1, [sp, #39]
   3e324:	strb	w1, [x0]
   3e328:	ldr	x0, [sp, #40]
   3e32c:	add	x0, x0, #0x1
   3e330:	str	x0, [sp, #40]
   3e334:	ldr	x0, [sp, #24]
   3e338:	add	x0, x0, #0x1
   3e33c:	str	x0, [sp, #24]
   3e340:	ldr	x0, [sp, #16]
   3e344:	add	x0, x0, #0x1
   3e348:	str	x0, [sp, #16]
   3e34c:	ldr	x1, [sp, #40]
   3e350:	ldr	x0, [sp, #8]
   3e354:	cmp	x1, x0
   3e358:	b.cc	3e300 <__asan_backtrace_close@@Base+0x70>  // b.lo, b.ul, b.last
   3e35c:	nop
   3e360:	nop
   3e364:	add	sp, sp, #0x30
   3e368:	ret

000000000003e36c <__asan_backtrace_qsort@@Base>:
   3e36c:	stp	x29, x30, [sp, #-80]!
   3e370:	mov	x29, sp
   3e374:	str	x0, [sp, #40]
   3e378:	str	x1, [sp, #32]
   3e37c:	str	x2, [sp, #24]
   3e380:	str	x3, [sp, #16]
   3e384:	ldr	x0, [sp, #40]
   3e388:	str	x0, [sp, #72]
   3e38c:	ldr	x0, [sp, #32]
   3e390:	cmp	x0, #0x1
   3e394:	b.ls	3e540 <__asan_backtrace_qsort@@Base+0x1d4>  // b.plast
   3e398:	ldr	x0, [sp, #32]
   3e39c:	lsr	x1, x0, #1
   3e3a0:	ldr	x0, [sp, #24]
   3e3a4:	mul	x0, x1, x0
   3e3a8:	ldr	x1, [sp, #72]
   3e3ac:	add	x0, x1, x0
   3e3b0:	ldr	x2, [sp, #24]
   3e3b4:	mov	x1, x0
   3e3b8:	ldr	x0, [sp, #72]
   3e3bc:	bl	3e2e8 <__asan_backtrace_close@@Base+0x58>
   3e3c0:	str	xzr, [sp, #56]
   3e3c4:	mov	x0, #0x1                   	// #1
   3e3c8:	str	x0, [sp, #64]
   3e3cc:	b	3e45c <__asan_backtrace_qsort@@Base+0xf0>
   3e3d0:	ldr	x1, [sp, #64]
   3e3d4:	ldr	x0, [sp, #24]
   3e3d8:	mul	x0, x1, x0
   3e3dc:	ldr	x1, [sp, #72]
   3e3e0:	add	x0, x1, x0
   3e3e4:	ldr	x2, [sp, #16]
   3e3e8:	mov	x1, x0
   3e3ec:	ldr	x0, [sp, #72]
   3e3f0:	blr	x2
   3e3f4:	cmp	w0, #0x0
   3e3f8:	b.le	3e450 <__asan_backtrace_qsort@@Base+0xe4>
   3e3fc:	ldr	x0, [sp, #56]
   3e400:	add	x0, x0, #0x1
   3e404:	str	x0, [sp, #56]
   3e408:	ldr	x1, [sp, #64]
   3e40c:	ldr	x0, [sp, #56]
   3e410:	cmp	x1, x0
   3e414:	b.eq	3e450 <__asan_backtrace_qsort@@Base+0xe4>  // b.none
   3e418:	ldr	x1, [sp, #56]
   3e41c:	ldr	x0, [sp, #24]
   3e420:	mul	x0, x1, x0
   3e424:	ldr	x1, [sp, #72]
   3e428:	add	x3, x1, x0
   3e42c:	ldr	x1, [sp, #64]
   3e430:	ldr	x0, [sp, #24]
   3e434:	mul	x0, x1, x0
   3e438:	ldr	x1, [sp, #72]
   3e43c:	add	x0, x1, x0
   3e440:	ldr	x2, [sp, #24]
   3e444:	mov	x1, x0
   3e448:	mov	x0, x3
   3e44c:	bl	3e2e8 <__asan_backtrace_close@@Base+0x58>
   3e450:	ldr	x0, [sp, #64]
   3e454:	add	x0, x0, #0x1
   3e458:	str	x0, [sp, #64]
   3e45c:	ldr	x1, [sp, #64]
   3e460:	ldr	x0, [sp, #32]
   3e464:	cmp	x1, x0
   3e468:	b.cc	3e3d0 <__asan_backtrace_qsort@@Base+0x64>  // b.lo, b.ul, b.last
   3e46c:	ldr	x0, [sp, #56]
   3e470:	cmp	x0, #0x0
   3e474:	b.eq	3e49c <__asan_backtrace_qsort@@Base+0x130>  // b.none
   3e478:	ldr	x1, [sp, #56]
   3e47c:	ldr	x0, [sp, #24]
   3e480:	mul	x0, x1, x0
   3e484:	ldr	x1, [sp, #72]
   3e488:	add	x0, x1, x0
   3e48c:	ldr	x2, [sp, #24]
   3e490:	mov	x1, x0
   3e494:	ldr	x0, [sp, #72]
   3e498:	bl	3e2e8 <__asan_backtrace_close@@Base+0x58>
   3e49c:	ldr	x0, [sp, #56]
   3e4a0:	lsl	x0, x0, #1
   3e4a4:	ldr	x1, [sp, #32]
   3e4a8:	cmp	x1, x0
   3e4ac:	b.ls	3e4f8 <__asan_backtrace_qsort@@Base+0x18c>  // b.plast
   3e4b0:	ldr	x3, [sp, #16]
   3e4b4:	ldr	x2, [sp, #24]
   3e4b8:	ldr	x1, [sp, #56]
   3e4bc:	ldr	x0, [sp, #72]
   3e4c0:	bl	3e36c <__asan_backtrace_qsort@@Base>
   3e4c4:	ldr	x0, [sp, #56]
   3e4c8:	add	x1, x0, #0x1
   3e4cc:	ldr	x0, [sp, #24]
   3e4d0:	mul	x0, x1, x0
   3e4d4:	ldr	x1, [sp, #72]
   3e4d8:	add	x0, x1, x0
   3e4dc:	str	x0, [sp, #72]
   3e4e0:	ldr	x1, [sp, #32]
   3e4e4:	ldr	x0, [sp, #56]
   3e4e8:	sub	x0, x1, x0
   3e4ec:	sub	x0, x0, #0x1
   3e4f0:	str	x0, [sp, #32]
   3e4f4:	b	3e38c <__asan_backtrace_qsort@@Base+0x20>
   3e4f8:	ldr	x0, [sp, #56]
   3e4fc:	add	x1, x0, #0x1
   3e500:	ldr	x0, [sp, #24]
   3e504:	mul	x0, x1, x0
   3e508:	ldr	x1, [sp, #72]
   3e50c:	add	x4, x1, x0
   3e510:	ldr	x1, [sp, #32]
   3e514:	ldr	x0, [sp, #56]
   3e518:	sub	x0, x1, x0
   3e51c:	sub	x0, x0, #0x1
   3e520:	ldr	x3, [sp, #16]
   3e524:	ldr	x2, [sp, #24]
   3e528:	mov	x1, x0
   3e52c:	mov	x0, x4
   3e530:	bl	3e36c <__asan_backtrace_qsort@@Base>
   3e534:	ldr	x0, [sp, #56]
   3e538:	str	x0, [sp, #32]
   3e53c:	b	3e38c <__asan_backtrace_qsort@@Base+0x20>
   3e540:	nop
   3e544:	ldp	x29, x30, [sp], #80
   3e548:	ret

000000000003e54c <__asan_backtrace_create_state@@Base>:
   3e54c:	stp	x29, x30, [sp, #-128]!
   3e550:	mov	x29, sp
   3e554:	str	x0, [sp, #40]
   3e558:	str	w1, [sp, #36]
   3e55c:	str	x2, [sp, #24]
   3e560:	str	x3, [sp, #16]
   3e564:	add	x0, sp, #0x30
   3e568:	mov	x2, #0x48                  	// #72
   3e56c:	mov	w1, #0x0                   	// #0
   3e570:	bl	6ab0 <__asan_internal_memset@plt>
   3e574:	ldr	x0, [sp, #40]
   3e578:	str	x0, [sp, #48]
   3e57c:	ldr	w0, [sp, #36]
   3e580:	str	w0, [sp, #56]
   3e584:	add	x0, sp, #0x30
   3e588:	ldr	x3, [sp, #16]
   3e58c:	ldr	x2, [sp, #24]
   3e590:	mov	x1, #0x48                  	// #72
   3e594:	bl	6b10 <__asan_backtrace_alloc@plt>
   3e598:	str	x0, [sp, #120]
   3e59c:	ldr	x0, [sp, #120]
   3e5a0:	cmp	x0, #0x0
   3e5a4:	b.ne	3e5b0 <__asan_backtrace_create_state@@Base+0x64>  // b.any
   3e5a8:	mov	x0, #0x0                   	// #0
   3e5ac:	b	3e5e8 <__asan_backtrace_create_state@@Base+0x9c>
   3e5b0:	ldr	x0, [sp, #120]
   3e5b4:	mov	x1, x0
   3e5b8:	add	x0, sp, #0x30
   3e5bc:	ldp	x2, x3, [x0]
   3e5c0:	stp	x2, x3, [x1]
   3e5c4:	ldp	x2, x3, [x0, #16]
   3e5c8:	stp	x2, x3, [x1, #16]
   3e5cc:	ldp	x2, x3, [x0, #32]
   3e5d0:	stp	x2, x3, [x1, #32]
   3e5d4:	ldp	x2, x3, [x0, #48]
   3e5d8:	stp	x2, x3, [x1, #48]
   3e5dc:	ldr	x0, [x0, #64]
   3e5e0:	str	x0, [x1, #64]
   3e5e4:	ldr	x0, [sp, #120]
   3e5e8:	ldp	x29, x30, [sp], #128
   3e5ec:	ret
   3e5f0:	sub	sp, sp, #0x10
   3e5f4:	str	w0, [sp, #12]
   3e5f8:	ldr	w0, [sp, #12]
   3e5fc:	sub	w0, w0, #0x1c
   3e600:	cmp	w0, #0x34
   3e604:	cset	w1, hi  // hi = pmore
   3e608:	and	w1, w1, #0xff
   3e60c:	cmp	w1, #0x0
   3e610:	b.ne	3e644 <__asan_backtrace_create_state@@Base+0xf8>  // b.any
   3e614:	mov	x1, #0x1                   	// #1
   3e618:	lsl	x1, x1, x0
   3e61c:	mov	x0, #0x1f                  	// #31
   3e620:	movk	x0, #0x1a, lsl #48
   3e624:	and	x0, x1, x0
   3e628:	cmp	x0, #0x0
   3e62c:	cset	w0, ne  // ne = any
   3e630:	and	w0, w0, #0xff
   3e634:	cmp	w0, #0x0
   3e638:	b.eq	3e644 <__asan_backtrace_create_state@@Base+0xf8>  // b.none
   3e63c:	mov	w0, #0x1                   	// #1
   3e640:	b	3e64c <__asan_backtrace_create_state@@Base+0x100>
   3e644:	nop
   3e648:	mov	w0, #0x0                   	// #0
   3e64c:	add	sp, sp, #0x10
   3e650:	ret

000000000003e654 <__asan_cplus_demangle_fill_name@@Base>:
   3e654:	sub	sp, sp, #0x20
   3e658:	str	x0, [sp, #24]
   3e65c:	str	x1, [sp, #16]
   3e660:	str	w2, [sp, #12]
   3e664:	ldr	x0, [sp, #24]
   3e668:	cmp	x0, #0x0
   3e66c:	b.eq	3e688 <__asan_cplus_demangle_fill_name@@Base+0x34>  // b.none
   3e670:	ldr	x0, [sp, #16]
   3e674:	cmp	x0, #0x0
   3e678:	b.eq	3e688 <__asan_cplus_demangle_fill_name@@Base+0x34>  // b.none
   3e67c:	ldr	w0, [sp, #12]
   3e680:	cmp	w0, #0x0
   3e684:	b.gt	3e690 <__asan_cplus_demangle_fill_name@@Base+0x3c>
   3e688:	mov	w0, #0x0                   	// #0
   3e68c:	b	3e6bc <__asan_cplus_demangle_fill_name@@Base+0x68>
   3e690:	ldr	x0, [sp, #24]
   3e694:	str	wzr, [x0, #4]
   3e698:	ldr	x0, [sp, #24]
   3e69c:	str	wzr, [x0]
   3e6a0:	ldr	x0, [sp, #24]
   3e6a4:	ldr	x1, [sp, #16]
   3e6a8:	str	x1, [x0, #8]
   3e6ac:	ldr	x0, [sp, #24]
   3e6b0:	ldr	w1, [sp, #12]
   3e6b4:	str	w1, [x0, #16]
   3e6b8:	mov	w0, #0x1                   	// #1
   3e6bc:	add	sp, sp, #0x20
   3e6c0:	ret

000000000003e6c4 <__asan_cplus_demangle_fill_extended_operator@@Base>:
   3e6c4:	sub	sp, sp, #0x20
   3e6c8:	str	x0, [sp, #24]
   3e6cc:	str	w1, [sp, #20]
   3e6d0:	str	x2, [sp, #8]
   3e6d4:	ldr	x0, [sp, #24]
   3e6d8:	cmp	x0, #0x0
   3e6dc:	b.eq	3e6f8 <__asan_cplus_demangle_fill_extended_operator@@Base+0x34>  // b.none
   3e6e0:	ldr	w0, [sp, #20]
   3e6e4:	cmp	w0, #0x0
   3e6e8:	b.lt	3e6f8 <__asan_cplus_demangle_fill_extended_operator@@Base+0x34>  // b.tstop
   3e6ec:	ldr	x0, [sp, #8]
   3e6f0:	cmp	x0, #0x0
   3e6f4:	b.ne	3e700 <__asan_cplus_demangle_fill_extended_operator@@Base+0x3c>  // b.any
   3e6f8:	mov	w0, #0x0                   	// #0
   3e6fc:	b	3e730 <__asan_cplus_demangle_fill_extended_operator@@Base+0x6c>
   3e700:	ldr	x0, [sp, #24]
   3e704:	str	wzr, [x0, #4]
   3e708:	ldr	x0, [sp, #24]
   3e70c:	mov	w1, #0x33                  	// #51
   3e710:	str	w1, [x0]
   3e714:	ldr	x0, [sp, #24]
   3e718:	ldr	w1, [sp, #20]
   3e71c:	str	w1, [x0, #8]
   3e720:	ldr	x0, [sp, #24]
   3e724:	ldr	x1, [sp, #8]
   3e728:	str	x1, [x0, #16]
   3e72c:	mov	w0, #0x1                   	// #1
   3e730:	add	sp, sp, #0x20
   3e734:	ret

000000000003e738 <__asan_cplus_demangle_fill_ctor@@Base>:
   3e738:	sub	sp, sp, #0x20
   3e73c:	str	x0, [sp, #24]
   3e740:	str	w1, [sp, #20]
   3e744:	str	x2, [sp, #8]
   3e748:	ldr	x0, [sp, #24]
   3e74c:	cmp	x0, #0x0
   3e750:	b.eq	3e778 <__asan_cplus_demangle_fill_ctor@@Base+0x40>  // b.none
   3e754:	ldr	x0, [sp, #8]
   3e758:	cmp	x0, #0x0
   3e75c:	b.eq	3e778 <__asan_cplus_demangle_fill_ctor@@Base+0x40>  // b.none
   3e760:	ldr	w0, [sp, #20]
   3e764:	cmp	w0, #0x0
   3e768:	b.le	3e778 <__asan_cplus_demangle_fill_ctor@@Base+0x40>
   3e76c:	ldr	w0, [sp, #20]
   3e770:	cmp	w0, #0x5
   3e774:	b.le	3e780 <__asan_cplus_demangle_fill_ctor@@Base+0x48>
   3e778:	mov	w0, #0x0                   	// #0
   3e77c:	b	3e7b0 <__asan_cplus_demangle_fill_ctor@@Base+0x78>
   3e780:	ldr	x0, [sp, #24]
   3e784:	str	wzr, [x0, #4]
   3e788:	ldr	x0, [sp, #24]
   3e78c:	mov	w1, #0x7                   	// #7
   3e790:	str	w1, [x0]
   3e794:	ldr	x0, [sp, #24]
   3e798:	ldr	w1, [sp, #20]
   3e79c:	str	w1, [x0, #8]
   3e7a0:	ldr	x0, [sp, #24]
   3e7a4:	ldr	x1, [sp, #8]
   3e7a8:	str	x1, [x0, #16]
   3e7ac:	mov	w0, #0x1                   	// #1
   3e7b0:	add	sp, sp, #0x20
   3e7b4:	ret

000000000003e7b8 <__asan_cplus_demangle_fill_dtor@@Base>:
   3e7b8:	sub	sp, sp, #0x20
   3e7bc:	str	x0, [sp, #24]
   3e7c0:	str	w1, [sp, #20]
   3e7c4:	str	x2, [sp, #8]
   3e7c8:	ldr	x0, [sp, #24]
   3e7cc:	cmp	x0, #0x0
   3e7d0:	b.eq	3e7f8 <__asan_cplus_demangle_fill_dtor@@Base+0x40>  // b.none
   3e7d4:	ldr	x0, [sp, #8]
   3e7d8:	cmp	x0, #0x0
   3e7dc:	b.eq	3e7f8 <__asan_cplus_demangle_fill_dtor@@Base+0x40>  // b.none
   3e7e0:	ldr	w0, [sp, #20]
   3e7e4:	cmp	w0, #0x0
   3e7e8:	b.le	3e7f8 <__asan_cplus_demangle_fill_dtor@@Base+0x40>
   3e7ec:	ldr	w0, [sp, #20]
   3e7f0:	cmp	w0, #0x5
   3e7f4:	b.le	3e800 <__asan_cplus_demangle_fill_dtor@@Base+0x48>
   3e7f8:	mov	w0, #0x0                   	// #0
   3e7fc:	b	3e830 <__asan_cplus_demangle_fill_dtor@@Base+0x78>
   3e800:	ldr	x0, [sp, #24]
   3e804:	str	wzr, [x0, #4]
   3e808:	ldr	x0, [sp, #24]
   3e80c:	mov	w1, #0x8                   	// #8
   3e810:	str	w1, [x0]
   3e814:	ldr	x0, [sp, #24]
   3e818:	ldr	w1, [sp, #20]
   3e81c:	str	w1, [x0, #8]
   3e820:	ldr	x0, [sp, #24]
   3e824:	ldr	x1, [sp, #8]
   3e828:	str	x1, [x0, #16]
   3e82c:	mov	w0, #0x1                   	// #1
   3e830:	add	sp, sp, #0x20
   3e834:	ret
   3e838:	sub	sp, sp, #0x20
   3e83c:	str	x0, [sp, #8]
   3e840:	ldr	x0, [sp, #8]
   3e844:	ldr	w1, [x0, #40]
   3e848:	ldr	x0, [sp, #8]
   3e84c:	ldr	w0, [x0, #44]
   3e850:	cmp	w1, w0
   3e854:	b.lt	3e860 <__asan_cplus_demangle_fill_dtor@@Base+0xa8>  // b.tstop
   3e858:	mov	x0, #0x0                   	// #0
   3e85c:	b	3e8ac <__asan_cplus_demangle_fill_dtor@@Base+0xf4>
   3e860:	ldr	x0, [sp, #8]
   3e864:	ldr	x2, [x0, #32]
   3e868:	ldr	x0, [sp, #8]
   3e86c:	ldr	w0, [x0, #40]
   3e870:	sxtw	x1, w0
   3e874:	mov	x0, x1
   3e878:	lsl	x0, x0, #1
   3e87c:	add	x0, x0, x1
   3e880:	lsl	x0, x0, #3
   3e884:	add	x0, x2, x0
   3e888:	str	x0, [sp, #24]
   3e88c:	ldr	x0, [sp, #24]
   3e890:	str	wzr, [x0, #4]
   3e894:	ldr	x0, [sp, #8]
   3e898:	ldr	w0, [x0, #40]
   3e89c:	add	w1, w0, #0x1
   3e8a0:	ldr	x0, [sp, #8]
   3e8a4:	str	w1, [x0, #40]
   3e8a8:	ldr	x0, [sp, #24]
   3e8ac:	add	sp, sp, #0x20
   3e8b0:	ret
   3e8b4:	stp	x29, x30, [sp, #-64]!
   3e8b8:	mov	x29, sp
   3e8bc:	str	x0, [sp, #40]
   3e8c0:	str	w1, [sp, #36]
   3e8c4:	str	x2, [sp, #24]
   3e8c8:	str	x3, [sp, #16]
   3e8cc:	ldr	w0, [sp, #36]
   3e8d0:	sub	w0, w0, #0x1
   3e8d4:	cmp	w0, #0x4f
   3e8d8:	b.hi	3e93c <__asan_cplus_demangle_fill_dtor@@Base+0x184>  // b.pmore
   3e8dc:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   3e8e0:	add	x1, x1, #0x168
   3e8e4:	ldr	w0, [x1, w0, uxtw #2]
   3e8e8:	adr	x1, 3e8f4 <__asan_cplus_demangle_fill_dtor@@Base+0x13c>
   3e8ec:	add	x0, x1, w0, sxtw #2
   3e8f0:	br	x0
   3e8f4:	ldr	x0, [sp, #24]
   3e8f8:	cmp	x0, #0x0
   3e8fc:	b.eq	3e90c <__asan_cplus_demangle_fill_dtor@@Base+0x154>  // b.none
   3e900:	ldr	x0, [sp, #16]
   3e904:	cmp	x0, #0x0
   3e908:	b.ne	3e94c <__asan_cplus_demangle_fill_dtor@@Base+0x194>  // b.any
   3e90c:	mov	x0, #0x0                   	// #0
   3e910:	b	3e9a0 <__asan_cplus_demangle_fill_dtor@@Base+0x1e8>
   3e914:	ldr	x0, [sp, #24]
   3e918:	cmp	x0, #0x0
   3e91c:	b.ne	3e954 <__asan_cplus_demangle_fill_dtor@@Base+0x19c>  // b.any
   3e920:	mov	x0, #0x0                   	// #0
   3e924:	b	3e9a0 <__asan_cplus_demangle_fill_dtor@@Base+0x1e8>
   3e928:	ldr	x0, [sp, #16]
   3e92c:	cmp	x0, #0x0
   3e930:	b.ne	3e95c <__asan_cplus_demangle_fill_dtor@@Base+0x1a4>  // b.any
   3e934:	mov	x0, #0x0                   	// #0
   3e938:	b	3e9a0 <__asan_cplus_demangle_fill_dtor@@Base+0x1e8>
   3e93c:	mov	x0, #0x0                   	// #0
   3e940:	b	3e9a0 <__asan_cplus_demangle_fill_dtor@@Base+0x1e8>
   3e944:	nop
   3e948:	b	3e960 <__asan_cplus_demangle_fill_dtor@@Base+0x1a8>
   3e94c:	nop
   3e950:	b	3e960 <__asan_cplus_demangle_fill_dtor@@Base+0x1a8>
   3e954:	nop
   3e958:	b	3e960 <__asan_cplus_demangle_fill_dtor@@Base+0x1a8>
   3e95c:	nop
   3e960:	ldr	x0, [sp, #40]
   3e964:	bl	3e838 <__asan_cplus_demangle_fill_dtor@@Base+0x80>
   3e968:	str	x0, [sp, #56]
   3e96c:	ldr	x0, [sp, #56]
   3e970:	cmp	x0, #0x0
   3e974:	b.eq	3e99c <__asan_cplus_demangle_fill_dtor@@Base+0x1e4>  // b.none
   3e978:	ldr	x0, [sp, #56]
   3e97c:	ldr	w1, [sp, #36]
   3e980:	str	w1, [x0]
   3e984:	ldr	x0, [sp, #56]
   3e988:	ldr	x1, [sp, #24]
   3e98c:	str	x1, [x0, #8]
   3e990:	ldr	x0, [sp, #56]
   3e994:	ldr	x1, [sp, #16]
   3e998:	str	x1, [x0, #16]
   3e99c:	ldr	x0, [sp, #56]
   3e9a0:	ldp	x29, x30, [sp], #64
   3e9a4:	ret
   3e9a8:	stp	x29, x30, [sp, #-32]!
   3e9ac:	mov	x29, sp
   3e9b0:	str	x0, [sp, #24]
   3e9b4:	str	x1, [sp, #16]
   3e9b8:	ldr	x0, [sp, #24]
   3e9bc:	ldr	x0, [x0, #24]
   3e9c0:	ldrb	w0, [x0]
   3e9c4:	cmp	w0, #0x5f
   3e9c8:	b.ne	3e9e4 <__asan_cplus_demangle_fill_dtor@@Base+0x22c>  // b.any
   3e9cc:	ldr	x0, [sp, #24]
   3e9d0:	ldr	x0, [x0, #24]
   3e9d4:	add	x0, x0, #0x1
   3e9d8:	ldrb	w0, [x0]
   3e9dc:	cmp	w0, #0x5a
   3e9e0:	b.eq	3ea00 <__asan_cplus_demangle_fill_dtor@@Base+0x248>  // b.none
   3e9e4:	ldr	x0, [sp, #16]
   3e9e8:	bl	6a20 <__asan_internal_strlen@plt>
   3e9ec:	mov	w2, w0
   3e9f0:	ldr	x1, [sp, #16]
   3e9f4:	ldr	x0, [sp, #24]
   3e9f8:	bl	3ea28 <__asan_cplus_demangle_fill_dtor@@Base+0x270>
   3e9fc:	b	3ea20 <__asan_cplus_demangle_fill_dtor@@Base+0x268>
   3ea00:	ldr	x0, [sp, #24]
   3ea04:	ldr	x0, [x0, #24]
   3ea08:	add	x1, x0, #0x2
   3ea0c:	ldr	x0, [sp, #24]
   3ea10:	str	x1, [x0, #24]
   3ea14:	mov	w1, #0x0                   	// #0
   3ea18:	ldr	x0, [sp, #24]
   3ea1c:	bl	3f010 <__asan_cplus_demangle_mangled_name@@Base+0x2bc>
   3ea20:	ldp	x29, x30, [sp], #32
   3ea24:	ret
   3ea28:	stp	x29, x30, [sp, #-64]!
   3ea2c:	mov	x29, sp
   3ea30:	str	x0, [sp, #40]
   3ea34:	str	x1, [sp, #32]
   3ea38:	str	w2, [sp, #28]
   3ea3c:	ldr	x0, [sp, #40]
   3ea40:	bl	3e838 <__asan_cplus_demangle_fill_dtor@@Base+0x80>
   3ea44:	str	x0, [sp, #56]
   3ea48:	ldr	w2, [sp, #28]
   3ea4c:	ldr	x1, [sp, #32]
   3ea50:	ldr	x0, [sp, #56]
   3ea54:	bl	6a00 <__asan_cplus_demangle_fill_name@plt>
   3ea58:	cmp	w0, #0x0
   3ea5c:	b.ne	3ea68 <__asan_cplus_demangle_fill_dtor@@Base+0x2b0>  // b.any
   3ea60:	mov	x0, #0x0                   	// #0
   3ea64:	b	3ea6c <__asan_cplus_demangle_fill_dtor@@Base+0x2b4>
   3ea68:	ldr	x0, [sp, #56]
   3ea6c:	ldp	x29, x30, [sp], #64
   3ea70:	ret
   3ea74:	stp	x29, x30, [sp, #-48]!
   3ea78:	mov	x29, sp
   3ea7c:	str	x0, [sp, #24]
   3ea80:	str	x1, [sp, #16]
   3ea84:	ldr	x0, [sp, #16]
   3ea88:	cmp	x0, #0x0
   3ea8c:	b.ne	3ea98 <__asan_cplus_demangle_fill_dtor@@Base+0x2e0>  // b.any
   3ea90:	mov	x0, #0x0                   	// #0
   3ea94:	b	3eacc <__asan_cplus_demangle_fill_dtor@@Base+0x314>
   3ea98:	ldr	x0, [sp, #24]
   3ea9c:	bl	3e838 <__asan_cplus_demangle_fill_dtor@@Base+0x80>
   3eaa0:	str	x0, [sp, #40]
   3eaa4:	ldr	x0, [sp, #40]
   3eaa8:	cmp	x0, #0x0
   3eaac:	b.eq	3eac8 <__asan_cplus_demangle_fill_dtor@@Base+0x310>  // b.none
   3eab0:	ldr	x0, [sp, #40]
   3eab4:	mov	w1, #0x27                  	// #39
   3eab8:	str	w1, [x0]
   3eabc:	ldr	x0, [sp, #40]
   3eac0:	ldr	x1, [sp, #16]
   3eac4:	str	x1, [x0, #8]
   3eac8:	ldr	x0, [sp, #40]
   3eacc:	ldp	x29, x30, [sp], #48
   3ead0:	ret
   3ead4:	stp	x29, x30, [sp, #-48]!
   3ead8:	mov	x29, sp
   3eadc:	str	x0, [sp, #24]
   3eae0:	str	x1, [sp, #16]
   3eae4:	ldr	x0, [sp, #24]
   3eae8:	bl	3e838 <__asan_cplus_demangle_fill_dtor@@Base+0x80>
   3eaec:	str	x0, [sp, #40]
   3eaf0:	ldr	x0, [sp, #40]
   3eaf4:	cmp	x0, #0x0
   3eaf8:	b.eq	3eb14 <__asan_cplus_demangle_fill_dtor@@Base+0x35c>  // b.none
   3eafc:	ldr	x0, [sp, #40]
   3eb00:	mov	w1, #0x32                  	// #50
   3eb04:	str	w1, [x0]
   3eb08:	ldr	x0, [sp, #40]
   3eb0c:	ldr	x1, [sp, #16]
   3eb10:	str	x1, [x0, #8]
   3eb14:	ldr	x0, [sp, #40]
   3eb18:	ldp	x29, x30, [sp], #48
   3eb1c:	ret
   3eb20:	stp	x29, x30, [sp, #-64]!
   3eb24:	mov	x29, sp
   3eb28:	str	x0, [sp, #40]
   3eb2c:	str	w1, [sp, #36]
   3eb30:	str	x2, [sp, #24]
   3eb34:	ldr	x0, [sp, #40]
   3eb38:	bl	3e838 <__asan_cplus_demangle_fill_dtor@@Base+0x80>
   3eb3c:	str	x0, [sp, #56]
   3eb40:	ldr	x2, [sp, #24]
   3eb44:	ldr	w1, [sp, #36]
   3eb48:	ldr	x0, [sp, #56]
   3eb4c:	bl	6d60 <__asan_cplus_demangle_fill_extended_operator@plt>
   3eb50:	cmp	w0, #0x0
   3eb54:	b.ne	3eb60 <__asan_cplus_demangle_fill_dtor@@Base+0x3a8>  // b.any
   3eb58:	mov	x0, #0x0                   	// #0
   3eb5c:	b	3eb64 <__asan_cplus_demangle_fill_dtor@@Base+0x3ac>
   3eb60:	ldr	x0, [sp, #56]
   3eb64:	ldp	x29, x30, [sp], #64
   3eb68:	ret
   3eb6c:	stp	x29, x30, [sp, #-64]!
   3eb70:	mov	x29, sp
   3eb74:	str	x0, [sp, #40]
   3eb78:	str	w1, [sp, #36]
   3eb7c:	str	x2, [sp, #24]
   3eb80:	ldr	x0, [sp, #40]
   3eb84:	bl	3e838 <__asan_cplus_demangle_fill_dtor@@Base+0x80>
   3eb88:	str	x0, [sp, #56]
   3eb8c:	ldr	x0, [sp, #56]
   3eb90:	cmp	x0, #0x0
   3eb94:	b.eq	3ebbc <__asan_cplus_demangle_fill_dtor@@Base+0x404>  // b.none
   3eb98:	ldr	x0, [sp, #56]
   3eb9c:	mov	w1, #0x47                  	// #71
   3eba0:	str	w1, [x0]
   3eba4:	ldr	x0, [sp, #56]
   3eba8:	ldr	w1, [sp, #36]
   3ebac:	str	w1, [x0, #16]
   3ebb0:	ldr	x0, [sp, #56]
   3ebb4:	ldr	x1, [sp, #24]
   3ebb8:	str	x1, [x0, #8]
   3ebbc:	ldr	x0, [sp, #56]
   3ebc0:	ldp	x29, x30, [sp], #64
   3ebc4:	ret
   3ebc8:	stp	x29, x30, [sp, #-64]!
   3ebcc:	mov	x29, sp
   3ebd0:	str	x0, [sp, #40]
   3ebd4:	str	w1, [sp, #36]
   3ebd8:	str	x2, [sp, #24]
   3ebdc:	ldr	x0, [sp, #40]
   3ebe0:	bl	3e838 <__asan_cplus_demangle_fill_dtor@@Base+0x80>
   3ebe4:	str	x0, [sp, #56]
   3ebe8:	ldr	x2, [sp, #24]
   3ebec:	ldr	w1, [sp, #36]
   3ebf0:	ldr	x0, [sp, #56]
   3ebf4:	bl	6dd0 <__asan_cplus_demangle_fill_ctor@plt>
   3ebf8:	cmp	w0, #0x0
   3ebfc:	b.ne	3ec08 <__asan_cplus_demangle_fill_dtor@@Base+0x450>  // b.any
   3ec00:	mov	x0, #0x0                   	// #0
   3ec04:	b	3ec0c <__asan_cplus_demangle_fill_dtor@@Base+0x454>
   3ec08:	ldr	x0, [sp, #56]
   3ec0c:	ldp	x29, x30, [sp], #64
   3ec10:	ret
   3ec14:	stp	x29, x30, [sp, #-64]!
   3ec18:	mov	x29, sp
   3ec1c:	str	x0, [sp, #40]
   3ec20:	str	w1, [sp, #36]
   3ec24:	str	x2, [sp, #24]
   3ec28:	ldr	x0, [sp, #40]
   3ec2c:	bl	3e838 <__asan_cplus_demangle_fill_dtor@@Base+0x80>
   3ec30:	str	x0, [sp, #56]
   3ec34:	ldr	x2, [sp, #24]
   3ec38:	ldr	w1, [sp, #36]
   3ec3c:	ldr	x0, [sp, #56]
   3ec40:	bl	6f70 <__asan_cplus_demangle_fill_dtor@plt>
   3ec44:	cmp	w0, #0x0
   3ec48:	b.ne	3ec54 <__asan_cplus_demangle_fill_dtor@@Base+0x49c>  // b.any
   3ec4c:	mov	x0, #0x0                   	// #0
   3ec50:	b	3ec58 <__asan_cplus_demangle_fill_dtor@@Base+0x4a0>
   3ec54:	ldr	x0, [sp, #56]
   3ec58:	ldp	x29, x30, [sp], #64
   3ec5c:	ret
   3ec60:	stp	x29, x30, [sp, #-48]!
   3ec64:	mov	x29, sp
   3ec68:	str	x0, [sp, #24]
   3ec6c:	str	w1, [sp, #20]
   3ec70:	ldr	x0, [sp, #24]
   3ec74:	bl	3e838 <__asan_cplus_demangle_fill_dtor@@Base+0x80>
   3ec78:	str	x0, [sp, #40]
   3ec7c:	ldr	x0, [sp, #40]
   3ec80:	cmp	x0, #0x0
   3ec84:	b.eq	3eca0 <__asan_cplus_demangle_fill_dtor@@Base+0x4e8>  // b.none
   3ec88:	ldr	x0, [sp, #40]
   3ec8c:	mov	w1, #0x5                   	// #5
   3ec90:	str	w1, [x0]
   3ec94:	ldrsw	x1, [sp, #20]
   3ec98:	ldr	x0, [sp, #40]
   3ec9c:	str	x1, [x0, #8]
   3eca0:	ldr	x0, [sp, #40]
   3eca4:	ldp	x29, x30, [sp], #48
   3eca8:	ret
   3ecac:	stp	x29, x30, [sp, #-48]!
   3ecb0:	mov	x29, sp
   3ecb4:	str	x0, [sp, #24]
   3ecb8:	str	w1, [sp, #20]
   3ecbc:	ldr	x0, [sp, #24]
   3ecc0:	bl	3e838 <__asan_cplus_demangle_fill_dtor@@Base+0x80>
   3ecc4:	str	x0, [sp, #40]
   3ecc8:	ldr	x0, [sp, #40]
   3eccc:	cmp	x0, #0x0
   3ecd0:	b.eq	3ecec <__asan_cplus_demangle_fill_dtor@@Base+0x534>  // b.none
   3ecd4:	ldr	x0, [sp, #40]
   3ecd8:	mov	w1, #0x6                   	// #6
   3ecdc:	str	w1, [x0]
   3ece0:	ldrsw	x1, [sp, #20]
   3ece4:	ldr	x0, [sp, #40]
   3ece8:	str	x1, [x0, #8]
   3ecec:	ldr	x0, [sp, #40]
   3ecf0:	ldp	x29, x30, [sp], #48
   3ecf4:	ret
   3ecf8:	stp	x29, x30, [sp, #-64]!
   3ecfc:	mov	x29, sp
   3ed00:	str	x0, [sp, #40]
   3ed04:	str	x1, [sp, #32]
   3ed08:	str	w2, [sp, #28]
   3ed0c:	ldr	x0, [sp, #40]
   3ed10:	bl	3e838 <__asan_cplus_demangle_fill_dtor@@Base+0x80>
   3ed14:	str	x0, [sp, #56]
   3ed18:	ldr	x0, [sp, #56]
   3ed1c:	cmp	x0, #0x0
   3ed20:	b.eq	3ed48 <__asan_cplus_demangle_fill_dtor@@Base+0x590>  // b.none
   3ed24:	ldr	x0, [sp, #56]
   3ed28:	mov	w1, #0x18                  	// #24
   3ed2c:	str	w1, [x0]
   3ed30:	ldr	x0, [sp, #56]
   3ed34:	ldr	x1, [sp, #32]
   3ed38:	str	x1, [x0, #8]
   3ed3c:	ldr	x0, [sp, #56]
   3ed40:	ldr	w1, [sp, #28]
   3ed44:	str	w1, [x0, #16]
   3ed48:	ldr	x0, [sp, #56]
   3ed4c:	ldp	x29, x30, [sp], #64
   3ed50:	ret

000000000003ed54 <__asan_cplus_demangle_mangled_name@@Base>:
   3ed54:	stp	x29, x30, [sp, #-48]!
   3ed58:	mov	x29, sp
   3ed5c:	str	x0, [sp, #24]
   3ed60:	str	w1, [sp, #20]
   3ed64:	ldr	x0, [sp, #24]
   3ed68:	ldr	x0, [x0, #24]
   3ed6c:	ldrb	w0, [x0]
   3ed70:	cmp	w0, #0x5f
   3ed74:	b.ne	3ed94 <__asan_cplus_demangle_mangled_name@@Base+0x40>  // b.any
   3ed78:	ldr	x0, [sp, #24]
   3ed7c:	ldr	x0, [x0, #24]
   3ed80:	add	x1, x0, #0x1
   3ed84:	ldr	x0, [sp, #24]
   3ed88:	str	x1, [x0, #24]
   3ed8c:	mov	w0, #0x0                   	// #0
   3ed90:	b	3ed98 <__asan_cplus_demangle_mangled_name@@Base+0x44>
   3ed94:	mov	w0, #0x1                   	// #1
   3ed98:	cmp	w0, #0x0
   3ed9c:	b.eq	3edb4 <__asan_cplus_demangle_mangled_name@@Base+0x60>  // b.none
   3eda0:	ldr	w0, [sp, #20]
   3eda4:	cmp	w0, #0x0
   3eda8:	b.eq	3edb4 <__asan_cplus_demangle_mangled_name@@Base+0x60>  // b.none
   3edac:	mov	x0, #0x0                   	// #0
   3edb0:	b	3eecc <__asan_cplus_demangle_mangled_name@@Base+0x178>
   3edb4:	ldr	x0, [sp, #24]
   3edb8:	ldr	x0, [x0, #24]
   3edbc:	ldrb	w0, [x0]
   3edc0:	cmp	w0, #0x5a
   3edc4:	b.ne	3ede4 <__asan_cplus_demangle_mangled_name@@Base+0x90>  // b.any
   3edc8:	ldr	x0, [sp, #24]
   3edcc:	ldr	x0, [x0, #24]
   3edd0:	add	x1, x0, #0x1
   3edd4:	ldr	x0, [sp, #24]
   3edd8:	str	x1, [x0, #24]
   3eddc:	mov	w0, #0x0                   	// #0
   3ede0:	b	3ede8 <__asan_cplus_demangle_mangled_name@@Base+0x94>
   3ede4:	mov	w0, #0x1                   	// #1
   3ede8:	cmp	w0, #0x0
   3edec:	b.eq	3edf8 <__asan_cplus_demangle_mangled_name@@Base+0xa4>  // b.none
   3edf0:	mov	x0, #0x0                   	// #0
   3edf4:	b	3eecc <__asan_cplus_demangle_mangled_name@@Base+0x178>
   3edf8:	ldr	w1, [sp, #20]
   3edfc:	ldr	x0, [sp, #24]
   3ee00:	bl	3f010 <__asan_cplus_demangle_mangled_name@@Base+0x2bc>
   3ee04:	str	x0, [sp, #40]
   3ee08:	ldr	w0, [sp, #20]
   3ee0c:	cmp	w0, #0x0
   3ee10:	b.eq	3eec8 <__asan_cplus_demangle_mangled_name@@Base+0x174>  // b.none
   3ee14:	ldr	x0, [sp, #24]
   3ee18:	ldr	w0, [x0, #16]
   3ee1c:	and	w0, w0, #0x1
   3ee20:	cmp	w0, #0x0
   3ee24:	b.eq	3eec8 <__asan_cplus_demangle_mangled_name@@Base+0x174>  // b.none
   3ee28:	b	3ee3c <__asan_cplus_demangle_mangled_name@@Base+0xe8>
   3ee2c:	ldr	x1, [sp, #40]
   3ee30:	ldr	x0, [sp, #24]
   3ee34:	bl	4395c <__asan_cplus_demangle_type@@Base+0x2c98>
   3ee38:	str	x0, [sp, #40]
   3ee3c:	ldr	x0, [sp, #24]
   3ee40:	ldr	x0, [x0, #24]
   3ee44:	ldrb	w0, [x0]
   3ee48:	cmp	w0, #0x2e
   3ee4c:	b.ne	3eec8 <__asan_cplus_demangle_mangled_name@@Base+0x174>  // b.any
   3ee50:	ldr	x0, [sp, #24]
   3ee54:	ldr	x0, [x0, #24]
   3ee58:	add	x0, x0, #0x1
   3ee5c:	ldrb	w0, [x0]
   3ee60:	cmp	w0, #0x60
   3ee64:	b.ls	3ee80 <__asan_cplus_demangle_mangled_name@@Base+0x12c>  // b.plast
   3ee68:	ldr	x0, [sp, #24]
   3ee6c:	ldr	x0, [x0, #24]
   3ee70:	add	x0, x0, #0x1
   3ee74:	ldrb	w0, [x0]
   3ee78:	cmp	w0, #0x7a
   3ee7c:	b.ls	3ee2c <__asan_cplus_demangle_mangled_name@@Base+0xd8>  // b.plast
   3ee80:	ldr	x0, [sp, #24]
   3ee84:	ldr	x0, [x0, #24]
   3ee88:	add	x0, x0, #0x1
   3ee8c:	ldrb	w0, [x0]
   3ee90:	cmp	w0, #0x5f
   3ee94:	b.eq	3ee2c <__asan_cplus_demangle_mangled_name@@Base+0xd8>  // b.none
   3ee98:	ldr	x0, [sp, #24]
   3ee9c:	ldr	x0, [x0, #24]
   3eea0:	add	x0, x0, #0x1
   3eea4:	ldrb	w0, [x0]
   3eea8:	cmp	w0, #0x2f
   3eeac:	b.ls	3eec8 <__asan_cplus_demangle_mangled_name@@Base+0x174>  // b.plast
   3eeb0:	ldr	x0, [sp, #24]
   3eeb4:	ldr	x0, [x0, #24]
   3eeb8:	add	x0, x0, #0x1
   3eebc:	ldrb	w0, [x0]
   3eec0:	cmp	w0, #0x39
   3eec4:	b.ls	3ee2c <__asan_cplus_demangle_mangled_name@@Base+0xd8>  // b.plast
   3eec8:	ldr	x0, [sp, #40]
   3eecc:	ldp	x29, x30, [sp], #48
   3eed0:	ret
   3eed4:	stp	x29, x30, [sp, #-32]!
   3eed8:	mov	x29, sp
   3eedc:	str	x0, [sp, #24]
   3eee0:	ldr	x0, [sp, #24]
   3eee4:	cmp	x0, #0x0
   3eee8:	b.ne	3eef4 <__asan_cplus_demangle_mangled_name@@Base+0x1a0>  // b.any
   3eeec:	mov	w0, #0x0                   	// #0
   3eef0:	b	3ef8c <__asan_cplus_demangle_mangled_name@@Base+0x238>
   3eef4:	ldr	x0, [sp, #24]
   3eef8:	ldr	w0, [x0]
   3eefc:	cmp	w0, #0x50
   3ef00:	b.hi	3ef4c <__asan_cplus_demangle_mangled_name@@Base+0x1f8>  // b.pmore
   3ef04:	cmp	w0, #0x1c
   3ef08:	b.cs	3ef20 <__asan_cplus_demangle_mangled_name@@Base+0x1cc>  // b.hs, b.nlast
   3ef0c:	cmp	w0, #0x2
   3ef10:	b.eq	3ef54 <__asan_cplus_demangle_mangled_name@@Base+0x200>  // b.none
   3ef14:	cmp	w0, #0x4
   3ef18:	b.eq	3ef64 <__asan_cplus_demangle_mangled_name@@Base+0x210>  // b.none
   3ef1c:	b	3ef4c <__asan_cplus_demangle_mangled_name@@Base+0x1f8>
   3ef20:	sub	w0, w0, #0x1c
   3ef24:	mov	x1, #0x1                   	// #1
   3ef28:	lsl	x1, x1, x0
   3ef2c:	mov	x0, #0x1f                  	// #31
   3ef30:	movk	x0, #0x1a, lsl #48
   3ef34:	and	x0, x1, x0
   3ef38:	cmp	x0, #0x0
   3ef3c:	cset	w0, ne  // ne = any
   3ef40:	and	w0, w0, #0xff
   3ef44:	cmp	w0, #0x0
   3ef48:	b.ne	3ef80 <__asan_cplus_demangle_mangled_name@@Base+0x22c>  // b.any
   3ef4c:	mov	w0, #0x0                   	// #0
   3ef50:	b	3ef8c <__asan_cplus_demangle_mangled_name@@Base+0x238>
   3ef54:	ldr	x0, [sp, #24]
   3ef58:	ldr	x0, [x0, #16]
   3ef5c:	bl	3eed4 <__asan_cplus_demangle_mangled_name@@Base+0x180>
   3ef60:	b	3ef8c <__asan_cplus_demangle_mangled_name@@Base+0x238>
   3ef64:	ldr	x0, [sp, #24]
   3ef68:	ldr	x0, [x0, #8]
   3ef6c:	bl	3ef94 <__asan_cplus_demangle_mangled_name@@Base+0x240>
   3ef70:	cmp	w0, #0x0
   3ef74:	cset	w0, eq  // eq = none
   3ef78:	and	w0, w0, #0xff
   3ef7c:	b	3ef8c <__asan_cplus_demangle_mangled_name@@Base+0x238>
   3ef80:	ldr	x0, [sp, #24]
   3ef84:	ldr	x0, [x0, #8]
   3ef88:	bl	3eed4 <__asan_cplus_demangle_mangled_name@@Base+0x180>
   3ef8c:	ldp	x29, x30, [sp], #32
   3ef90:	ret
   3ef94:	stp	x29, x30, [sp, #-32]!
   3ef98:	mov	x29, sp
   3ef9c:	str	x0, [sp, #24]
   3efa0:	ldr	x0, [sp, #24]
   3efa4:	cmp	x0, #0x0
   3efa8:	b.ne	3efb4 <__asan_cplus_demangle_mangled_name@@Base+0x260>  // b.any
   3efac:	mov	w0, #0x0                   	// #0
   3efb0:	b	3f008 <__asan_cplus_demangle_mangled_name@@Base+0x2b4>
   3efb4:	ldr	x0, [sp, #24]
   3efb8:	ldr	w0, [x0]
   3efbc:	cmp	w0, #0x35
   3efc0:	b.eq	3f004 <__asan_cplus_demangle_mangled_name@@Base+0x2b0>  // b.none
   3efc4:	cmp	w0, #0x35
   3efc8:	b.hi	3efec <__asan_cplus_demangle_mangled_name@@Base+0x298>  // b.pmore
   3efcc:	cmp	w0, #0x2
   3efd0:	b.hi	3efe0 <__asan_cplus_demangle_mangled_name@@Base+0x28c>  // b.pmore
   3efd4:	cmp	w0, #0x0
   3efd8:	b.ne	3eff4 <__asan_cplus_demangle_mangled_name@@Base+0x2a0>  // b.any
   3efdc:	b	3efec <__asan_cplus_demangle_mangled_name@@Base+0x298>
   3efe0:	sub	w0, w0, #0x7
   3efe4:	cmp	w0, #0x1
   3efe8:	b.ls	3f004 <__asan_cplus_demangle_mangled_name@@Base+0x2b0>  // b.plast
   3efec:	mov	w0, #0x0                   	// #0
   3eff0:	b	3f008 <__asan_cplus_demangle_mangled_name@@Base+0x2b4>
   3eff4:	ldr	x0, [sp, #24]
   3eff8:	ldr	x0, [x0, #16]
   3effc:	bl	3ef94 <__asan_cplus_demangle_mangled_name@@Base+0x240>
   3f000:	b	3f008 <__asan_cplus_demangle_mangled_name@@Base+0x2b4>
   3f004:	mov	w0, #0x1                   	// #1
   3f008:	ldp	x29, x30, [sp], #32
   3f00c:	ret
   3f010:	stp	x29, x30, [sp, #-64]!
   3f014:	mov	x29, sp
   3f018:	str	x0, [sp, #24]
   3f01c:	str	w1, [sp, #20]
   3f020:	ldr	x0, [sp, #24]
   3f024:	ldr	x0, [x0, #24]
   3f028:	ldrb	w0, [x0]
   3f02c:	strb	w0, [sp, #55]
   3f030:	ldrb	w0, [sp, #55]
   3f034:	cmp	w0, #0x47
   3f038:	b.eq	3f048 <__asan_cplus_demangle_mangled_name@@Base+0x2f4>  // b.none
   3f03c:	ldrb	w0, [sp, #55]
   3f040:	cmp	w0, #0x54
   3f044:	b.ne	3f058 <__asan_cplus_demangle_mangled_name@@Base+0x304>  // b.any
   3f048:	ldr	x0, [sp, #24]
   3f04c:	bl	40278 <__asan_cplus_demangle_mangled_name@@Base+0x1524>
   3f050:	str	x0, [sp, #56]
   3f054:	b	3f198 <__asan_cplus_demangle_mangled_name@@Base+0x444>
   3f058:	ldr	x0, [sp, #24]
   3f05c:	bl	3f230 <__asan_cplus_demangle_mangled_name@@Base+0x4dc>
   3f060:	str	x0, [sp, #56]
   3f064:	ldr	x0, [sp, #56]
   3f068:	cmp	x0, #0x0
   3f06c:	b.eq	3f198 <__asan_cplus_demangle_mangled_name@@Base+0x444>  // b.none
   3f070:	ldr	w0, [sp, #20]
   3f074:	cmp	w0, #0x0
   3f078:	b.eq	3f0f8 <__asan_cplus_demangle_mangled_name@@Base+0x3a4>  // b.none
   3f07c:	ldr	x0, [sp, #24]
   3f080:	ldr	w0, [x0, #16]
   3f084:	and	w0, w0, #0x1
   3f088:	cmp	w0, #0x0
   3f08c:	b.ne	3f0f8 <__asan_cplus_demangle_mangled_name@@Base+0x3a4>  // b.any
   3f090:	b	3f0a0 <__asan_cplus_demangle_mangled_name@@Base+0x34c>
   3f094:	ldr	x0, [sp, #56]
   3f098:	ldr	x0, [x0, #8]
   3f09c:	str	x0, [sp, #56]
   3f0a0:	ldr	x0, [sp, #56]
   3f0a4:	ldr	w0, [x0]
   3f0a8:	bl	3e5f0 <__asan_backtrace_create_state@@Base+0xa4>
   3f0ac:	cmp	w0, #0x0
   3f0b0:	b.ne	3f094 <__asan_cplus_demangle_mangled_name@@Base+0x340>  // b.any
   3f0b4:	ldr	x0, [sp, #56]
   3f0b8:	ldr	w0, [x0]
   3f0bc:	cmp	w0, #0x2
   3f0c0:	b.ne	3f198 <__asan_cplus_demangle_mangled_name@@Base+0x444>  // b.any
   3f0c4:	b	3f0dc <__asan_cplus_demangle_mangled_name@@Base+0x388>
   3f0c8:	ldr	x0, [sp, #56]
   3f0cc:	ldr	x0, [x0, #16]
   3f0d0:	ldr	x1, [x0, #8]
   3f0d4:	ldr	x0, [sp, #56]
   3f0d8:	str	x1, [x0, #16]
   3f0dc:	ldr	x0, [sp, #56]
   3f0e0:	ldr	x0, [x0, #16]
   3f0e4:	ldr	w0, [x0]
   3f0e8:	bl	3e5f0 <__asan_backtrace_create_state@@Base+0xa4>
   3f0ec:	cmp	w0, #0x0
   3f0f0:	b.ne	3f0c8 <__asan_cplus_demangle_mangled_name@@Base+0x374>  // b.any
   3f0f4:	b	3f198 <__asan_cplus_demangle_mangled_name@@Base+0x444>
   3f0f8:	ldr	x0, [sp, #24]
   3f0fc:	ldr	x0, [x0, #24]
   3f100:	ldrb	w0, [x0]
   3f104:	strb	w0, [sp, #55]
   3f108:	ldrb	w0, [sp, #55]
   3f10c:	cmp	w0, #0x0
   3f110:	b.eq	3f198 <__asan_cplus_demangle_mangled_name@@Base+0x444>  // b.none
   3f114:	ldrb	w0, [sp, #55]
   3f118:	cmp	w0, #0x45
   3f11c:	b.eq	3f198 <__asan_cplus_demangle_mangled_name@@Base+0x444>  // b.none
   3f120:	ldr	x0, [sp, #56]
   3f124:	bl	3eed4 <__asan_cplus_demangle_mangled_name@@Base+0x180>
   3f128:	mov	w1, w0
   3f12c:	ldr	x0, [sp, #24]
   3f130:	bl	41f30 <__asan_cplus_demangle_type@@Base+0x126c>
   3f134:	str	x0, [sp, #40]
   3f138:	ldr	x0, [sp, #40]
   3f13c:	cmp	x0, #0x0
   3f140:	b.eq	3f194 <__asan_cplus_demangle_mangled_name@@Base+0x440>  // b.none
   3f144:	ldr	w0, [sp, #20]
   3f148:	cmp	w0, #0x0
   3f14c:	b.ne	3f178 <__asan_cplus_demangle_mangled_name@@Base+0x424>  // b.any
   3f150:	ldr	x0, [sp, #56]
   3f154:	ldr	w0, [x0]
   3f158:	cmp	w0, #0x2
   3f15c:	b.ne	3f178 <__asan_cplus_demangle_mangled_name@@Base+0x424>  // b.any
   3f160:	ldr	x0, [sp, #40]
   3f164:	ldr	w0, [x0]
   3f168:	cmp	w0, #0x29
   3f16c:	b.ne	3f178 <__asan_cplus_demangle_mangled_name@@Base+0x424>  // b.any
   3f170:	ldr	x0, [sp, #40]
   3f174:	str	xzr, [x0, #8]
   3f178:	ldr	x3, [sp, #40]
   3f17c:	ldr	x2, [sp, #56]
   3f180:	mov	w1, #0x3                   	// #3
   3f184:	ldr	x0, [sp, #24]
   3f188:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3f18c:	str	x0, [sp, #56]
   3f190:	b	3f198 <__asan_cplus_demangle_mangled_name@@Base+0x444>
   3f194:	str	xzr, [sp, #56]
   3f198:	ldr	x0, [sp, #56]
   3f19c:	ldp	x29, x30, [sp], #64
   3f1a0:	ret
   3f1a4:	stp	x29, x30, [sp, #-64]!
   3f1a8:	mov	x29, sp
   3f1ac:	str	x0, [sp, #24]
   3f1b0:	str	x1, [sp, #16]
   3f1b4:	ldr	x0, [sp, #24]
   3f1b8:	ldr	x0, [x0, #64]
   3f1bc:	str	x0, [sp, #56]
   3f1c0:	b	3f1fc <__asan_cplus_demangle_mangled_name@@Base+0x4a8>
   3f1c4:	ldr	x0, [sp, #24]
   3f1c8:	ldr	x0, [x0, #24]
   3f1cc:	add	x1, x0, #0x1
   3f1d0:	ldr	x0, [sp, #24]
   3f1d4:	str	x1, [x0, #24]
   3f1d8:	ldr	x0, [sp, #24]
   3f1dc:	bl	3f9b4 <__asan_cplus_demangle_mangled_name@@Base+0xc60>
   3f1e0:	str	x0, [sp, #40]
   3f1e4:	ldr	x3, [sp, #40]
   3f1e8:	ldr	x2, [sp, #16]
   3f1ec:	mov	w1, #0x4c                  	// #76
   3f1f0:	ldr	x0, [sp, #24]
   3f1f4:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3f1f8:	str	x0, [sp, #16]
   3f1fc:	ldr	x0, [sp, #24]
   3f200:	ldr	x0, [x0, #24]
   3f204:	ldrb	w0, [x0]
   3f208:	strb	w0, [sp, #55]
   3f20c:	ldrb	w0, [sp, #55]
   3f210:	cmp	w0, #0x42
   3f214:	b.eq	3f1c4 <__asan_cplus_demangle_mangled_name@@Base+0x470>  // b.none
   3f218:	ldr	x0, [sp, #24]
   3f21c:	ldr	x1, [sp, #56]
   3f220:	str	x1, [x0, #64]
   3f224:	ldr	x0, [sp, #16]
   3f228:	ldp	x29, x30, [sp], #64
   3f22c:	ret
   3f230:	stp	x29, x30, [sp, #-64]!
   3f234:	mov	x29, sp
   3f238:	str	x19, [sp, #16]
   3f23c:	str	x0, [sp, #40]
   3f240:	ldr	x0, [sp, #40]
   3f244:	ldr	x0, [x0, #24]
   3f248:	ldrb	w0, [x0]
   3f24c:	strb	w0, [sp, #51]
   3f250:	ldrb	w0, [sp, #51]
   3f254:	cmp	w0, #0x5a
   3f258:	b.eq	3f294 <__asan_cplus_demangle_mangled_name@@Base+0x540>  // b.none
   3f25c:	cmp	w0, #0x5a
   3f260:	b.gt	3f3a8 <__asan_cplus_demangle_mangled_name@@Base+0x654>
   3f264:	cmp	w0, #0x55
   3f268:	b.eq	3f2a0 <__asan_cplus_demangle_mangled_name@@Base+0x54c>  // b.none
   3f26c:	cmp	w0, #0x55
   3f270:	b.gt	3f3a8 <__asan_cplus_demangle_mangled_name@@Base+0x654>
   3f274:	cmp	w0, #0x4e
   3f278:	b.eq	3f288 <__asan_cplus_demangle_mangled_name@@Base+0x534>  // b.none
   3f27c:	cmp	w0, #0x53
   3f280:	b.eq	3f2ac <__asan_cplus_demangle_mangled_name@@Base+0x558>  // b.none
   3f284:	b	3f3a8 <__asan_cplus_demangle_mangled_name@@Base+0x654>
   3f288:	ldr	x0, [sp, #40]
   3f28c:	bl	3f414 <__asan_cplus_demangle_mangled_name@@Base+0x6c0>
   3f290:	b	3f408 <__asan_cplus_demangle_mangled_name@@Base+0x6b4>
   3f294:	ldr	x0, [sp, #40]
   3f298:	bl	433c4 <__asan_cplus_demangle_type@@Base+0x2700>
   3f29c:	b	3f408 <__asan_cplus_demangle_mangled_name@@Base+0x6b4>
   3f2a0:	ldr	x0, [sp, #40]
   3f2a4:	bl	3f770 <__asan_cplus_demangle_mangled_name@@Base+0xa1c>
   3f2a8:	b	3f408 <__asan_cplus_demangle_mangled_name@@Base+0x6b4>
   3f2ac:	ldr	x0, [sp, #40]
   3f2b0:	ldr	x0, [x0, #24]
   3f2b4:	add	x0, x0, #0x1
   3f2b8:	ldrb	w0, [x0]
   3f2bc:	cmp	w0, #0x74
   3f2c0:	b.eq	3f2e0 <__asan_cplus_demangle_mangled_name@@Base+0x58c>  // b.none
   3f2c4:	mov	w1, #0x0                   	// #0
   3f2c8:	ldr	x0, [sp, #40]
   3f2cc:	bl	43b70 <__asan_cplus_demangle_type@@Base+0x2eac>
   3f2d0:	str	x0, [sp, #56]
   3f2d4:	mov	w0, #0x1                   	// #1
   3f2d8:	str	w0, [sp, #52]
   3f2dc:	b	3f344 <__asan_cplus_demangle_mangled_name@@Base+0x5f0>
   3f2e0:	ldr	x0, [sp, #40]
   3f2e4:	ldr	x0, [x0, #24]
   3f2e8:	add	x1, x0, #0x2
   3f2ec:	ldr	x0, [sp, #40]
   3f2f0:	str	x1, [x0, #24]
   3f2f4:	mov	w2, #0x3                   	// #3
   3f2f8:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   3f2fc:	add	x1, x0, #0x2a8
   3f300:	ldr	x0, [sp, #40]
   3f304:	bl	3ea28 <__asan_cplus_demangle_fill_dtor@@Base+0x270>
   3f308:	mov	x19, x0
   3f30c:	ldr	x0, [sp, #40]
   3f310:	bl	3f770 <__asan_cplus_demangle_mangled_name@@Base+0xa1c>
   3f314:	mov	x3, x0
   3f318:	mov	x2, x19
   3f31c:	mov	w1, #0x1                   	// #1
   3f320:	ldr	x0, [sp, #40]
   3f324:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3f328:	str	x0, [sp, #56]
   3f32c:	ldr	x0, [sp, #40]
   3f330:	ldr	w0, [x0, #72]
   3f334:	add	w1, w0, #0x3
   3f338:	ldr	x0, [sp, #40]
   3f33c:	str	w1, [x0, #72]
   3f340:	str	wzr, [sp, #52]
   3f344:	ldr	x0, [sp, #40]
   3f348:	ldr	x0, [x0, #24]
   3f34c:	ldrb	w0, [x0]
   3f350:	cmp	w0, #0x49
   3f354:	b.ne	3f3a0 <__asan_cplus_demangle_mangled_name@@Base+0x64c>  // b.any
   3f358:	ldr	w0, [sp, #52]
   3f35c:	cmp	w0, #0x0
   3f360:	b.ne	3f380 <__asan_cplus_demangle_mangled_name@@Base+0x62c>  // b.any
   3f364:	ldr	x1, [sp, #56]
   3f368:	ldr	x0, [sp, #40]
   3f36c:	bl	43aec <__asan_cplus_demangle_type@@Base+0x2e28>
   3f370:	cmp	w0, #0x0
   3f374:	b.ne	3f380 <__asan_cplus_demangle_mangled_name@@Base+0x62c>  // b.any
   3f378:	mov	x0, #0x0                   	// #0
   3f37c:	b	3f408 <__asan_cplus_demangle_mangled_name@@Base+0x6b4>
   3f380:	ldr	x0, [sp, #40]
   3f384:	bl	42438 <__asan_cplus_demangle_type@@Base+0x1774>
   3f388:	mov	x3, x0
   3f38c:	ldr	x2, [sp, #56]
   3f390:	mov	w1, #0x4                   	// #4
   3f394:	ldr	x0, [sp, #40]
   3f398:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3f39c:	str	x0, [sp, #56]
   3f3a0:	ldr	x0, [sp, #56]
   3f3a4:	b	3f408 <__asan_cplus_demangle_mangled_name@@Base+0x6b4>
   3f3a8:	ldr	x0, [sp, #40]
   3f3ac:	bl	3f770 <__asan_cplus_demangle_mangled_name@@Base+0xa1c>
   3f3b0:	str	x0, [sp, #56]
   3f3b4:	ldr	x0, [sp, #40]
   3f3b8:	ldr	x0, [x0, #24]
   3f3bc:	ldrb	w0, [x0]
   3f3c0:	cmp	w0, #0x49
   3f3c4:	b.ne	3f404 <__asan_cplus_demangle_mangled_name@@Base+0x6b0>  // b.any
   3f3c8:	ldr	x1, [sp, #56]
   3f3cc:	ldr	x0, [sp, #40]
   3f3d0:	bl	43aec <__asan_cplus_demangle_type@@Base+0x2e28>
   3f3d4:	cmp	w0, #0x0
   3f3d8:	b.ne	3f3e4 <__asan_cplus_demangle_mangled_name@@Base+0x690>  // b.any
   3f3dc:	mov	x0, #0x0                   	// #0
   3f3e0:	b	3f408 <__asan_cplus_demangle_mangled_name@@Base+0x6b4>
   3f3e4:	ldr	x0, [sp, #40]
   3f3e8:	bl	42438 <__asan_cplus_demangle_type@@Base+0x1774>
   3f3ec:	mov	x3, x0
   3f3f0:	ldr	x2, [sp, #56]
   3f3f4:	mov	w1, #0x4                   	// #4
   3f3f8:	ldr	x0, [sp, #40]
   3f3fc:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3f400:	str	x0, [sp, #56]
   3f404:	ldr	x0, [sp, #56]
   3f408:	ldr	x19, [sp, #16]
   3f40c:	ldp	x29, x30, [sp], #64
   3f410:	ret
   3f414:	stp	x29, x30, [sp, #-64]!
   3f418:	mov	x29, sp
   3f41c:	str	x0, [sp, #24]
   3f420:	ldr	x0, [sp, #24]
   3f424:	ldr	x0, [x0, #24]
   3f428:	ldrb	w0, [x0]
   3f42c:	cmp	w0, #0x4e
   3f430:	b.ne	3f450 <__asan_cplus_demangle_mangled_name@@Base+0x6fc>  // b.any
   3f434:	ldr	x0, [sp, #24]
   3f438:	ldr	x0, [x0, #24]
   3f43c:	add	x1, x0, #0x1
   3f440:	ldr	x0, [sp, #24]
   3f444:	str	x1, [x0, #24]
   3f448:	mov	w0, #0x0                   	// #0
   3f44c:	b	3f454 <__asan_cplus_demangle_mangled_name@@Base+0x700>
   3f450:	mov	w0, #0x1                   	// #1
   3f454:	cmp	w0, #0x0
   3f458:	b.eq	3f464 <__asan_cplus_demangle_mangled_name@@Base+0x710>  // b.none
   3f45c:	mov	x0, #0x0                   	// #0
   3f460:	b	3f534 <__asan_cplus_demangle_mangled_name@@Base+0x7e0>
   3f464:	add	x0, sp, #0x28
   3f468:	mov	w2, #0x1                   	// #1
   3f46c:	mov	x1, x0
   3f470:	ldr	x0, [sp, #24]
   3f474:	bl	417cc <__asan_cplus_demangle_type@@Base+0xb08>
   3f478:	str	x0, [sp, #56]
   3f47c:	ldr	x0, [sp, #56]
   3f480:	cmp	x0, #0x0
   3f484:	b.ne	3f490 <__asan_cplus_demangle_mangled_name@@Base+0x73c>  // b.any
   3f488:	mov	x0, #0x0                   	// #0
   3f48c:	b	3f534 <__asan_cplus_demangle_mangled_name@@Base+0x7e0>
   3f490:	mov	x1, #0x0                   	// #0
   3f494:	ldr	x0, [sp, #24]
   3f498:	bl	41bac <__asan_cplus_demangle_type@@Base+0xee8>
   3f49c:	str	x0, [sp, #48]
   3f4a0:	ldr	x0, [sp, #24]
   3f4a4:	bl	3f53c <__asan_cplus_demangle_mangled_name@@Base+0x7e8>
   3f4a8:	mov	x1, x0
   3f4ac:	ldr	x0, [sp, #56]
   3f4b0:	str	x1, [x0]
   3f4b4:	ldr	x0, [sp, #56]
   3f4b8:	ldr	x0, [x0]
   3f4bc:	cmp	x0, #0x0
   3f4c0:	b.ne	3f4cc <__asan_cplus_demangle_mangled_name@@Base+0x778>  // b.any
   3f4c4:	mov	x0, #0x0                   	// #0
   3f4c8:	b	3f534 <__asan_cplus_demangle_mangled_name@@Base+0x7e0>
   3f4cc:	ldr	x0, [sp, #48]
   3f4d0:	cmp	x0, #0x0
   3f4d4:	b.eq	3f4ec <__asan_cplus_demangle_mangled_name@@Base+0x798>  // b.none
   3f4d8:	ldr	x1, [sp, #40]
   3f4dc:	ldr	x0, [sp, #48]
   3f4e0:	str	x1, [x0, #8]
   3f4e4:	ldr	x0, [sp, #48]
   3f4e8:	str	x0, [sp, #40]
   3f4ec:	ldr	x0, [sp, #24]
   3f4f0:	ldr	x0, [x0, #24]
   3f4f4:	ldrb	w0, [x0]
   3f4f8:	cmp	w0, #0x45
   3f4fc:	b.ne	3f51c <__asan_cplus_demangle_mangled_name@@Base+0x7c8>  // b.any
   3f500:	ldr	x0, [sp, #24]
   3f504:	ldr	x0, [x0, #24]
   3f508:	add	x1, x0, #0x1
   3f50c:	ldr	x0, [sp, #24]
   3f510:	str	x1, [x0, #24]
   3f514:	mov	w0, #0x0                   	// #0
   3f518:	b	3f520 <__asan_cplus_demangle_mangled_name@@Base+0x7cc>
   3f51c:	mov	w0, #0x1                   	// #1
   3f520:	cmp	w0, #0x0
   3f524:	b.eq	3f530 <__asan_cplus_demangle_mangled_name@@Base+0x7dc>  // b.none
   3f528:	mov	x0, #0x0                   	// #0
   3f52c:	b	3f534 <__asan_cplus_demangle_mangled_name@@Base+0x7e0>
   3f530:	ldr	x0, [sp, #40]
   3f534:	ldp	x29, x30, [sp], #64
   3f538:	ret
   3f53c:	stp	x29, x30, [sp, #-64]!
   3f540:	mov	x29, sp
   3f544:	str	x0, [sp, #24]
   3f548:	str	xzr, [sp, #56]
   3f54c:	ldr	x0, [sp, #24]
   3f550:	ldr	x0, [x0, #24]
   3f554:	ldrb	w0, [x0]
   3f558:	strb	w0, [sp, #39]
   3f55c:	ldrb	w0, [sp, #39]
   3f560:	cmp	w0, #0x0
   3f564:	b.ne	3f570 <__asan_cplus_demangle_mangled_name@@Base+0x81c>  // b.any
   3f568:	mov	x0, #0x0                   	// #0
   3f56c:	b	3f768 <__asan_cplus_demangle_mangled_name@@Base+0xa14>
   3f570:	mov	w0, #0x1                   	// #1
   3f574:	str	w0, [sp, #52]
   3f578:	ldrb	w0, [sp, #39]
   3f57c:	cmp	w0, #0x44
   3f580:	b.ne	3f5cc <__asan_cplus_demangle_mangled_name@@Base+0x878>  // b.any
   3f584:	ldr	x0, [sp, #24]
   3f588:	ldr	x0, [x0, #24]
   3f58c:	ldrb	w0, [x0, #1]
   3f590:	strb	w0, [sp, #38]
   3f594:	ldrb	w0, [sp, #38]
   3f598:	cmp	w0, #0x54
   3f59c:	b.eq	3f5ac <__asan_cplus_demangle_mangled_name@@Base+0x858>  // b.none
   3f5a0:	ldrb	w0, [sp, #38]
   3f5a4:	cmp	w0, #0x74
   3f5a8:	b.ne	3f5bc <__asan_cplus_demangle_mangled_name@@Base+0x868>  // b.any
   3f5ac:	ldr	x0, [sp, #24]
   3f5b0:	bl	6990 <__asan_cplus_demangle_type@plt>
   3f5b4:	str	x0, [sp, #40]
   3f5b8:	b	3f6f8 <__asan_cplus_demangle_mangled_name@@Base+0x9a4>
   3f5bc:	ldr	x0, [sp, #24]
   3f5c0:	bl	3f770 <__asan_cplus_demangle_mangled_name@@Base+0xa1c>
   3f5c4:	str	x0, [sp, #40]
   3f5c8:	b	3f6f8 <__asan_cplus_demangle_mangled_name@@Base+0x9a4>
   3f5cc:	ldrb	w0, [sp, #39]
   3f5d0:	cmp	w0, #0x2f
   3f5d4:	b.ls	3f5e4 <__asan_cplus_demangle_mangled_name@@Base+0x890>  // b.plast
   3f5d8:	ldrb	w0, [sp, #39]
   3f5dc:	cmp	w0, #0x39
   3f5e0:	b.ls	3f620 <__asan_cplus_demangle_mangled_name@@Base+0x8cc>  // b.plast
   3f5e4:	ldrb	w0, [sp, #39]
   3f5e8:	cmp	w0, #0x60
   3f5ec:	b.ls	3f5fc <__asan_cplus_demangle_mangled_name@@Base+0x8a8>  // b.plast
   3f5f0:	ldrb	w0, [sp, #39]
   3f5f4:	cmp	w0, #0x7a
   3f5f8:	b.ls	3f620 <__asan_cplus_demangle_mangled_name@@Base+0x8cc>  // b.plast
   3f5fc:	ldrb	w0, [sp, #39]
   3f600:	cmp	w0, #0x43
   3f604:	b.eq	3f620 <__asan_cplus_demangle_mangled_name@@Base+0x8cc>  // b.none
   3f608:	ldrb	w0, [sp, #39]
   3f60c:	cmp	w0, #0x55
   3f610:	b.eq	3f620 <__asan_cplus_demangle_mangled_name@@Base+0x8cc>  // b.none
   3f614:	ldrb	w0, [sp, #39]
   3f618:	cmp	w0, #0x4c
   3f61c:	b.ne	3f630 <__asan_cplus_demangle_mangled_name@@Base+0x8dc>  // b.any
   3f620:	ldr	x0, [sp, #24]
   3f624:	bl	3f770 <__asan_cplus_demangle_mangled_name@@Base+0xa1c>
   3f628:	str	x0, [sp, #40]
   3f62c:	b	3f6f8 <__asan_cplus_demangle_mangled_name@@Base+0x9a4>
   3f630:	ldrb	w0, [sp, #39]
   3f634:	cmp	w0, #0x53
   3f638:	b.ne	3f650 <__asan_cplus_demangle_mangled_name@@Base+0x8fc>  // b.any
   3f63c:	mov	w1, #0x1                   	// #1
   3f640:	ldr	x0, [sp, #24]
   3f644:	bl	43b70 <__asan_cplus_demangle_type@@Base+0x2eac>
   3f648:	str	x0, [sp, #40]
   3f64c:	b	3f6f8 <__asan_cplus_demangle_mangled_name@@Base+0x9a4>
   3f650:	ldrb	w0, [sp, #39]
   3f654:	cmp	w0, #0x49
   3f658:	b.ne	3f688 <__asan_cplus_demangle_mangled_name@@Base+0x934>  // b.any
   3f65c:	ldr	x0, [sp, #56]
   3f660:	cmp	x0, #0x0
   3f664:	b.ne	3f670 <__asan_cplus_demangle_mangled_name@@Base+0x91c>  // b.any
   3f668:	mov	x0, #0x0                   	// #0
   3f66c:	b	3f768 <__asan_cplus_demangle_mangled_name@@Base+0xa14>
   3f670:	mov	w0, #0x4                   	// #4
   3f674:	str	w0, [sp, #52]
   3f678:	ldr	x0, [sp, #24]
   3f67c:	bl	42438 <__asan_cplus_demangle_type@@Base+0x1774>
   3f680:	str	x0, [sp, #40]
   3f684:	b	3f6f8 <__asan_cplus_demangle_mangled_name@@Base+0x9a4>
   3f688:	ldrb	w0, [sp, #39]
   3f68c:	cmp	w0, #0x54
   3f690:	b.ne	3f6a4 <__asan_cplus_demangle_mangled_name@@Base+0x950>  // b.any
   3f694:	ldr	x0, [sp, #24]
   3f698:	bl	423b4 <__asan_cplus_demangle_type@@Base+0x16f0>
   3f69c:	str	x0, [sp, #40]
   3f6a0:	b	3f6f8 <__asan_cplus_demangle_mangled_name@@Base+0x9a4>
   3f6a4:	ldrb	w0, [sp, #39]
   3f6a8:	cmp	w0, #0x45
   3f6ac:	b.ne	3f6b8 <__asan_cplus_demangle_mangled_name@@Base+0x964>  // b.any
   3f6b0:	ldr	x0, [sp, #56]
   3f6b4:	b	3f768 <__asan_cplus_demangle_mangled_name@@Base+0xa14>
   3f6b8:	ldrb	w0, [sp, #39]
   3f6bc:	cmp	w0, #0x4d
   3f6c0:	b.ne	3f6f0 <__asan_cplus_demangle_mangled_name@@Base+0x99c>  // b.any
   3f6c4:	ldr	x0, [sp, #56]
   3f6c8:	cmp	x0, #0x0
   3f6cc:	b.ne	3f6d8 <__asan_cplus_demangle_mangled_name@@Base+0x984>  // b.any
   3f6d0:	mov	x0, #0x0                   	// #0
   3f6d4:	b	3f768 <__asan_cplus_demangle_mangled_name@@Base+0xa14>
   3f6d8:	ldr	x0, [sp, #24]
   3f6dc:	ldr	x0, [x0, #24]
   3f6e0:	add	x1, x0, #0x1
   3f6e4:	ldr	x0, [sp, #24]
   3f6e8:	str	x1, [x0, #24]
   3f6ec:	b	3f764 <__asan_cplus_demangle_mangled_name@@Base+0xa10>
   3f6f0:	mov	x0, #0x0                   	// #0
   3f6f4:	b	3f768 <__asan_cplus_demangle_mangled_name@@Base+0xa14>
   3f6f8:	ldr	x0, [sp, #56]
   3f6fc:	cmp	x0, #0x0
   3f700:	b.ne	3f710 <__asan_cplus_demangle_mangled_name@@Base+0x9bc>  // b.any
   3f704:	ldr	x0, [sp, #40]
   3f708:	str	x0, [sp, #56]
   3f70c:	b	3f728 <__asan_cplus_demangle_mangled_name@@Base+0x9d4>
   3f710:	ldr	x3, [sp, #40]
   3f714:	ldr	x2, [sp, #56]
   3f718:	ldr	w1, [sp, #52]
   3f71c:	ldr	x0, [sp, #24]
   3f720:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3f724:	str	x0, [sp, #56]
   3f728:	ldrb	w0, [sp, #39]
   3f72c:	cmp	w0, #0x53
   3f730:	b.eq	3f54c <__asan_cplus_demangle_mangled_name@@Base+0x7f8>  // b.none
   3f734:	ldr	x0, [sp, #24]
   3f738:	ldr	x0, [x0, #24]
   3f73c:	ldrb	w0, [x0]
   3f740:	cmp	w0, #0x45
   3f744:	b.eq	3f54c <__asan_cplus_demangle_mangled_name@@Base+0x7f8>  // b.none
   3f748:	ldr	x1, [sp, #56]
   3f74c:	ldr	x0, [sp, #24]
   3f750:	bl	43aec <__asan_cplus_demangle_type@@Base+0x2e28>
   3f754:	cmp	w0, #0x0
   3f758:	b.ne	3f54c <__asan_cplus_demangle_mangled_name@@Base+0x7f8>  // b.any
   3f75c:	mov	x0, #0x0                   	// #0
   3f760:	b	3f768 <__asan_cplus_demangle_mangled_name@@Base+0xa14>
   3f764:	b	3f54c <__asan_cplus_demangle_mangled_name@@Base+0x7f8>
   3f768:	ldp	x29, x30, [sp], #64
   3f76c:	ret
   3f770:	stp	x29, x30, [sp, #-48]!
   3f774:	mov	x29, sp
   3f778:	str	x0, [sp, #24]
   3f77c:	ldr	x0, [sp, #24]
   3f780:	ldr	x0, [x0, #24]
   3f784:	ldrb	w0, [x0]
   3f788:	strb	w0, [sp, #39]
   3f78c:	ldrb	w0, [sp, #39]
   3f790:	cmp	w0, #0x2f
   3f794:	b.ls	3f7b4 <__asan_cplus_demangle_mangled_name@@Base+0xa60>  // b.plast
   3f798:	ldrb	w0, [sp, #39]
   3f79c:	cmp	w0, #0x39
   3f7a0:	b.hi	3f7b4 <__asan_cplus_demangle_mangled_name@@Base+0xa60>  // b.pmore
   3f7a4:	ldr	x0, [sp, #24]
   3f7a8:	bl	3f9b4 <__asan_cplus_demangle_mangled_name@@Base+0xc60>
   3f7ac:	str	x0, [sp, #40]
   3f7b0:	b	3f984 <__asan_cplus_demangle_mangled_name@@Base+0xc30>
   3f7b4:	ldrb	w0, [sp, #39]
   3f7b8:	cmp	w0, #0x60
   3f7bc:	b.ls	3f8a0 <__asan_cplus_demangle_mangled_name@@Base+0xb4c>  // b.plast
   3f7c0:	ldrb	w0, [sp, #39]
   3f7c4:	cmp	w0, #0x7a
   3f7c8:	b.hi	3f8a0 <__asan_cplus_demangle_mangled_name@@Base+0xb4c>  // b.pmore
   3f7cc:	ldrb	w0, [sp, #39]
   3f7d0:	cmp	w0, #0x6f
   3f7d4:	b.ne	3f804 <__asan_cplus_demangle_mangled_name@@Base+0xab0>  // b.any
   3f7d8:	ldr	x0, [sp, #24]
   3f7dc:	ldr	x0, [x0, #24]
   3f7e0:	add	x0, x0, #0x1
   3f7e4:	ldrb	w0, [x0]
   3f7e8:	cmp	w0, #0x6e
   3f7ec:	b.ne	3f804 <__asan_cplus_demangle_mangled_name@@Base+0xab0>  // b.any
   3f7f0:	ldr	x0, [sp, #24]
   3f7f4:	ldr	x0, [x0, #24]
   3f7f8:	add	x1, x0, #0x2
   3f7fc:	ldr	x0, [sp, #24]
   3f800:	str	x1, [x0, #24]
   3f804:	ldr	x0, [sp, #24]
   3f808:	bl	3fce0 <__asan_cplus_demangle_mangled_name@@Base+0xf8c>
   3f80c:	str	x0, [sp, #40]
   3f810:	ldr	x0, [sp, #40]
   3f814:	cmp	x0, #0x0
   3f818:	b.eq	3f980 <__asan_cplus_demangle_mangled_name@@Base+0xc2c>  // b.none
   3f81c:	ldr	x0, [sp, #40]
   3f820:	ldr	w0, [x0]
   3f824:	cmp	w0, #0x32
   3f828:	b.ne	3f980 <__asan_cplus_demangle_mangled_name@@Base+0xc2c>  // b.any
   3f82c:	ldr	x0, [sp, #24]
   3f830:	ldr	w0, [x0, #72]
   3f834:	mov	w1, w0
   3f838:	ldr	x0, [sp, #40]
   3f83c:	ldr	x0, [x0, #8]
   3f840:	ldr	w0, [x0, #16]
   3f844:	add	w0, w1, w0
   3f848:	add	w0, w0, #0x7
   3f84c:	mov	w1, w0
   3f850:	ldr	x0, [sp, #24]
   3f854:	str	w1, [x0, #72]
   3f858:	ldr	x0, [sp, #40]
   3f85c:	ldr	x0, [x0, #8]
   3f860:	ldr	x2, [x0]
   3f864:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   3f868:	add	x1, x0, #0x2b0
   3f86c:	mov	x0, x2
   3f870:	bl	6d70 <__asan_internal_strcmp@plt>
   3f874:	cmp	w0, #0x0
   3f878:	b.ne	3f980 <__asan_cplus_demangle_mangled_name@@Base+0xc2c>  // b.any
   3f87c:	ldr	x0, [sp, #24]
   3f880:	bl	3f9b4 <__asan_cplus_demangle_mangled_name@@Base+0xc60>
   3f884:	mov	x3, x0
   3f888:	ldr	x2, [sp, #40]
   3f88c:	mov	w1, #0x37                  	// #55
   3f890:	ldr	x0, [sp, #24]
   3f894:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3f898:	str	x0, [sp, #40]
   3f89c:	b	3f980 <__asan_cplus_demangle_mangled_name@@Base+0xc2c>
   3f8a0:	ldrb	w0, [sp, #39]
   3f8a4:	cmp	w0, #0x43
   3f8a8:	b.eq	3f8b8 <__asan_cplus_demangle_mangled_name@@Base+0xb64>  // b.none
   3f8ac:	ldrb	w0, [sp, #39]
   3f8b0:	cmp	w0, #0x44
   3f8b4:	b.ne	3f8c8 <__asan_cplus_demangle_mangled_name@@Base+0xb74>  // b.any
   3f8b8:	ldr	x0, [sp, #24]
   3f8bc:	bl	40990 <__asan_cplus_demangle_mangled_name@@Base+0x1c3c>
   3f8c0:	str	x0, [sp, #40]
   3f8c4:	b	3f984 <__asan_cplus_demangle_mangled_name@@Base+0xc30>
   3f8c8:	ldrb	w0, [sp, #39]
   3f8cc:	cmp	w0, #0x4c
   3f8d0:	b.ne	3f920 <__asan_cplus_demangle_mangled_name@@Base+0xbcc>  // b.any
   3f8d4:	ldr	x0, [sp, #24]
   3f8d8:	ldr	x0, [x0, #24]
   3f8dc:	add	x1, x0, #0x1
   3f8e0:	ldr	x0, [sp, #24]
   3f8e4:	str	x1, [x0, #24]
   3f8e8:	ldr	x0, [sp, #24]
   3f8ec:	bl	3f9b4 <__asan_cplus_demangle_mangled_name@@Base+0xc60>
   3f8f0:	str	x0, [sp, #40]
   3f8f4:	ldr	x0, [sp, #40]
   3f8f8:	cmp	x0, #0x0
   3f8fc:	b.ne	3f908 <__asan_cplus_demangle_mangled_name@@Base+0xbb4>  // b.any
   3f900:	mov	x0, #0x0                   	// #0
   3f904:	b	3f9ac <__asan_cplus_demangle_mangled_name@@Base+0xc58>
   3f908:	ldr	x0, [sp, #24]
   3f90c:	bl	435e4 <__asan_cplus_demangle_type@@Base+0x2920>
   3f910:	cmp	w0, #0x0
   3f914:	b.ne	3f984 <__asan_cplus_demangle_mangled_name@@Base+0xc30>  // b.any
   3f918:	mov	x0, #0x0                   	// #0
   3f91c:	b	3f9ac <__asan_cplus_demangle_mangled_name@@Base+0xc58>
   3f920:	ldrb	w0, [sp, #39]
   3f924:	cmp	w0, #0x55
   3f928:	b.ne	3f978 <__asan_cplus_demangle_mangled_name@@Base+0xc24>  // b.any
   3f92c:	ldr	x0, [sp, #24]
   3f930:	ldr	x0, [x0, #24]
   3f934:	add	x0, x0, #0x1
   3f938:	ldrb	w0, [x0]
   3f93c:	cmp	w0, #0x6c
   3f940:	b.eq	3f950 <__asan_cplus_demangle_mangled_name@@Base+0xbfc>  // b.none
   3f944:	cmp	w0, #0x74
   3f948:	b.eq	3f960 <__asan_cplus_demangle_mangled_name@@Base+0xc0c>  // b.none
   3f94c:	b	3f970 <__asan_cplus_demangle_mangled_name@@Base+0xc1c>
   3f950:	ldr	x0, [sp, #24]
   3f954:	bl	436d4 <__asan_cplus_demangle_type@@Base+0x2a10>
   3f958:	str	x0, [sp, #40]
   3f95c:	b	3f984 <__asan_cplus_demangle_mangled_name@@Base+0xc30>
   3f960:	ldr	x0, [sp, #24]
   3f964:	bl	43850 <__asan_cplus_demangle_type@@Base+0x2b8c>
   3f968:	str	x0, [sp, #40]
   3f96c:	b	3f984 <__asan_cplus_demangle_mangled_name@@Base+0xc30>
   3f970:	mov	x0, #0x0                   	// #0
   3f974:	b	3f9ac <__asan_cplus_demangle_mangled_name@@Base+0xc58>
   3f978:	mov	x0, #0x0                   	// #0
   3f97c:	b	3f9ac <__asan_cplus_demangle_mangled_name@@Base+0xc58>
   3f980:	nop
   3f984:	ldr	x0, [sp, #24]
   3f988:	ldr	x0, [x0, #24]
   3f98c:	ldrb	w0, [x0]
   3f990:	cmp	w0, #0x42
   3f994:	b.ne	3f9a8 <__asan_cplus_demangle_mangled_name@@Base+0xc54>  // b.any
   3f998:	ldr	x1, [sp, #40]
   3f99c:	ldr	x0, [sp, #24]
   3f9a0:	bl	3f1a4 <__asan_cplus_demangle_mangled_name@@Base+0x450>
   3f9a4:	str	x0, [sp, #40]
   3f9a8:	ldr	x0, [sp, #40]
   3f9ac:	ldp	x29, x30, [sp], #48
   3f9b0:	ret
   3f9b4:	stp	x29, x30, [sp, #-48]!
   3f9b8:	mov	x29, sp
   3f9bc:	str	x0, [sp, #24]
   3f9c0:	ldr	x0, [sp, #24]
   3f9c4:	bl	3fa08 <__asan_cplus_demangle_mangled_name@@Base+0xcb4>
   3f9c8:	str	w0, [sp, #44]
   3f9cc:	ldr	w0, [sp, #44]
   3f9d0:	cmp	w0, #0x0
   3f9d4:	b.gt	3f9e0 <__asan_cplus_demangle_mangled_name@@Base+0xc8c>
   3f9d8:	mov	x0, #0x0                   	// #0
   3f9dc:	b	3fa00 <__asan_cplus_demangle_mangled_name@@Base+0xcac>
   3f9e0:	ldr	w1, [sp, #44]
   3f9e4:	ldr	x0, [sp, #24]
   3f9e8:	bl	3fb80 <__asan_cplus_demangle_mangled_name@@Base+0xe2c>
   3f9ec:	str	x0, [sp, #32]
   3f9f0:	ldr	x0, [sp, #24]
   3f9f4:	ldr	x1, [sp, #32]
   3f9f8:	str	x1, [x0, #64]
   3f9fc:	ldr	x0, [sp, #32]
   3fa00:	ldp	x29, x30, [sp], #48
   3fa04:	ret
   3fa08:	sub	sp, sp, #0x20
   3fa0c:	str	x0, [sp, #8]
   3fa10:	str	wzr, [sp, #28]
   3fa14:	ldr	x0, [sp, #8]
   3fa18:	ldr	x0, [x0, #24]
   3fa1c:	ldrb	w0, [x0]
   3fa20:	strb	w0, [sp, #27]
   3fa24:	ldrb	w0, [sp, #27]
   3fa28:	cmp	w0, #0x6e
   3fa2c:	b.ne	3fa5c <__asan_cplus_demangle_mangled_name@@Base+0xd08>  // b.any
   3fa30:	mov	w0, #0x1                   	// #1
   3fa34:	str	w0, [sp, #28]
   3fa38:	ldr	x0, [sp, #8]
   3fa3c:	ldr	x0, [x0, #24]
   3fa40:	add	x1, x0, #0x1
   3fa44:	ldr	x0, [sp, #8]
   3fa48:	str	x1, [x0, #24]
   3fa4c:	ldr	x0, [sp, #8]
   3fa50:	ldr	x0, [x0, #24]
   3fa54:	ldrb	w0, [x0]
   3fa58:	strb	w0, [sp, #27]
   3fa5c:	str	wzr, [sp, #20]
   3fa60:	ldrb	w0, [sp, #27]
   3fa64:	cmp	w0, #0x2f
   3fa68:	b.ls	3fa78 <__asan_cplus_demangle_mangled_name@@Base+0xd24>  // b.plast
   3fa6c:	ldrb	w0, [sp, #27]
   3fa70:	cmp	w0, #0x39
   3fa74:	b.ls	3fa98 <__asan_cplus_demangle_mangled_name@@Base+0xd44>  // b.plast
   3fa78:	ldr	w0, [sp, #28]
   3fa7c:	cmp	w0, #0x0
   3fa80:	b.eq	3fa90 <__asan_cplus_demangle_mangled_name@@Base+0xd3c>  // b.none
   3fa84:	ldr	w0, [sp, #20]
   3fa88:	neg	w0, w0
   3fa8c:	str	w0, [sp, #20]
   3fa90:	ldr	w0, [sp, #20]
   3fa94:	b	3fb28 <__asan_cplus_demangle_mangled_name@@Base+0xdd4>
   3fa98:	ldrb	w0, [sp, #27]
   3fa9c:	sub	w0, w0, #0x30
   3faa0:	mov	w1, #0x7fffffff            	// #2147483647
   3faa4:	sub	w0, w1, w0
   3faa8:	mov	w1, #0x6667                	// #26215
   3faac:	movk	w1, #0x6666, lsl #16
   3fab0:	smull	x1, w0, w1
   3fab4:	lsr	x1, x1, #32
   3fab8:	asr	w1, w1, #2
   3fabc:	asr	w0, w0, #31
   3fac0:	sub	w0, w1, w0
   3fac4:	ldr	w1, [sp, #20]
   3fac8:	cmp	w1, w0
   3facc:	b.le	3fad8 <__asan_cplus_demangle_mangled_name@@Base+0xd84>
   3fad0:	mov	w0, #0xffffffff            	// #-1
   3fad4:	b	3fb28 <__asan_cplus_demangle_mangled_name@@Base+0xdd4>
   3fad8:	ldr	w1, [sp, #20]
   3fadc:	mov	w0, w1
   3fae0:	lsl	w0, w0, #2
   3fae4:	add	w0, w0, w1
   3fae8:	lsl	w0, w0, #1
   3faec:	mov	w1, w0
   3faf0:	ldrb	w0, [sp, #27]
   3faf4:	add	w0, w1, w0
   3faf8:	sub	w0, w0, #0x30
   3fafc:	str	w0, [sp, #20]
   3fb00:	ldr	x0, [sp, #8]
   3fb04:	ldr	x0, [x0, #24]
   3fb08:	add	x1, x0, #0x1
   3fb0c:	ldr	x0, [sp, #8]
   3fb10:	str	x1, [x0, #24]
   3fb14:	ldr	x0, [sp, #8]
   3fb18:	ldr	x0, [x0, #24]
   3fb1c:	ldrb	w0, [x0]
   3fb20:	strb	w0, [sp, #27]
   3fb24:	b	3fa60 <__asan_cplus_demangle_mangled_name@@Base+0xd0c>
   3fb28:	add	sp, sp, #0x20
   3fb2c:	ret
   3fb30:	stp	x29, x30, [sp, #-48]!
   3fb34:	mov	x29, sp
   3fb38:	str	x0, [sp, #24]
   3fb3c:	ldr	x0, [sp, #24]
   3fb40:	bl	3e838 <__asan_cplus_demangle_fill_dtor@@Base+0x80>
   3fb44:	str	x0, [sp, #40]
   3fb48:	ldr	x0, [sp, #40]
   3fb4c:	cmp	x0, #0x0
   3fb50:	b.eq	3fb74 <__asan_cplus_demangle_mangled_name@@Base+0xe20>  // b.none
   3fb54:	ldr	x0, [sp, #40]
   3fb58:	mov	w1, #0x42                  	// #66
   3fb5c:	str	w1, [x0]
   3fb60:	ldr	x0, [sp, #24]
   3fb64:	bl	3fa08 <__asan_cplus_demangle_mangled_name@@Base+0xcb4>
   3fb68:	sxtw	x1, w0
   3fb6c:	ldr	x0, [sp, #40]
   3fb70:	str	x1, [x0, #8]
   3fb74:	ldr	x0, [sp, #40]
   3fb78:	ldp	x29, x30, [sp], #48
   3fb7c:	ret
   3fb80:	stp	x29, x30, [sp, #-48]!
   3fb84:	mov	x29, sp
   3fb88:	str	x0, [sp, #24]
   3fb8c:	str	w1, [sp, #20]
   3fb90:	ldr	x0, [sp, #24]
   3fb94:	ldr	x0, [x0, #24]
   3fb98:	str	x0, [sp, #40]
   3fb9c:	ldr	x0, [sp, #24]
   3fba0:	ldr	x1, [x0, #8]
   3fba4:	ldr	x0, [sp, #40]
   3fba8:	sub	x1, x1, x0
   3fbac:	ldrsw	x0, [sp, #20]
   3fbb0:	cmp	x1, x0
   3fbb4:	b.ge	3fbc0 <__asan_cplus_demangle_mangled_name@@Base+0xe6c>  // b.tcont
   3fbb8:	mov	x0, #0x0                   	// #0
   3fbbc:	b	3fcd8 <__asan_cplus_demangle_mangled_name@@Base+0xf84>
   3fbc0:	ldr	x0, [sp, #24]
   3fbc4:	ldr	x1, [x0, #24]
   3fbc8:	ldrsw	x0, [sp, #20]
   3fbcc:	add	x1, x1, x0
   3fbd0:	ldr	x0, [sp, #24]
   3fbd4:	str	x1, [x0, #24]
   3fbd8:	ldr	x0, [sp, #24]
   3fbdc:	ldr	w0, [x0, #16]
   3fbe0:	and	w0, w0, #0x4
   3fbe4:	cmp	w0, #0x0
   3fbe8:	b.eq	3fc14 <__asan_cplus_demangle_mangled_name@@Base+0xec0>  // b.none
   3fbec:	ldr	x0, [sp, #24]
   3fbf0:	ldr	x0, [x0, #24]
   3fbf4:	ldrb	w0, [x0]
   3fbf8:	cmp	w0, #0x24
   3fbfc:	b.ne	3fc14 <__asan_cplus_demangle_mangled_name@@Base+0xec0>  // b.any
   3fc00:	ldr	x0, [sp, #24]
   3fc04:	ldr	x0, [x0, #24]
   3fc08:	add	x1, x0, #0x1
   3fc0c:	ldr	x0, [sp, #24]
   3fc10:	str	x1, [x0, #24]
   3fc14:	ldr	w0, [sp, #20]
   3fc18:	cmp	w0, #0x9
   3fc1c:	b.le	3fcc8 <__asan_cplus_demangle_mangled_name@@Base+0xf74>
   3fc20:	mov	x2, #0x8                   	// #8
   3fc24:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   3fc28:	add	x1, x0, #0x2b8
   3fc2c:	ldr	x0, [sp, #40]
   3fc30:	bl	6e70 <__asan_internal_memcmp@plt>
   3fc34:	cmp	w0, #0x0
   3fc38:	b.ne	3fcc8 <__asan_cplus_demangle_mangled_name@@Base+0xf74>  // b.any
   3fc3c:	ldr	x0, [sp, #40]
   3fc40:	add	x0, x0, #0x8
   3fc44:	str	x0, [sp, #32]
   3fc48:	ldr	x0, [sp, #32]
   3fc4c:	ldrb	w0, [x0]
   3fc50:	cmp	w0, #0x2e
   3fc54:	b.eq	3fc78 <__asan_cplus_demangle_mangled_name@@Base+0xf24>  // b.none
   3fc58:	ldr	x0, [sp, #32]
   3fc5c:	ldrb	w0, [x0]
   3fc60:	cmp	w0, #0x5f
   3fc64:	b.eq	3fc78 <__asan_cplus_demangle_mangled_name@@Base+0xf24>  // b.none
   3fc68:	ldr	x0, [sp, #32]
   3fc6c:	ldrb	w0, [x0]
   3fc70:	cmp	w0, #0x24
   3fc74:	b.ne	3fcc8 <__asan_cplus_demangle_mangled_name@@Base+0xf74>  // b.any
   3fc78:	ldr	x0, [sp, #32]
   3fc7c:	add	x0, x0, #0x1
   3fc80:	ldrb	w0, [x0]
   3fc84:	cmp	w0, #0x4e
   3fc88:	b.ne	3fcc8 <__asan_cplus_demangle_mangled_name@@Base+0xf74>  // b.any
   3fc8c:	ldr	x0, [sp, #24]
   3fc90:	ldr	w0, [x0, #72]
   3fc94:	mov	w1, w0
   3fc98:	ldr	w0, [sp, #20]
   3fc9c:	sub	w0, w1, w0
   3fca0:	add	w0, w0, #0x16
   3fca4:	mov	w1, w0
   3fca8:	ldr	x0, [sp, #24]
   3fcac:	str	w1, [x0, #72]
   3fcb0:	mov	w2, #0x15                  	// #21
   3fcb4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   3fcb8:	add	x1, x0, #0x2c8
   3fcbc:	ldr	x0, [sp, #24]
   3fcc0:	bl	3ea28 <__asan_cplus_demangle_fill_dtor@@Base+0x270>
   3fcc4:	b	3fcd8 <__asan_cplus_demangle_mangled_name@@Base+0xf84>
   3fcc8:	ldr	w2, [sp, #20]
   3fccc:	ldr	x1, [sp, #40]
   3fcd0:	ldr	x0, [sp, #24]
   3fcd4:	bl	3ea28 <__asan_cplus_demangle_fill_dtor@@Base+0x270>
   3fcd8:	ldp	x29, x30, [sp], #48
   3fcdc:	ret
   3fce0:	stp	x29, x30, [sp, #-96]!
   3fce4:	mov	x29, sp
   3fce8:	str	x19, [sp, #16]
   3fcec:	str	x0, [sp, #40]
   3fcf0:	ldr	x0, [sp, #40]
   3fcf4:	ldr	x0, [x0, #24]
   3fcf8:	ldrb	w0, [x0]
   3fcfc:	cmp	w0, #0x0
   3fd00:	b.eq	3fd20 <__asan_cplus_demangle_mangled_name@@Base+0xfcc>  // b.none
   3fd04:	ldr	x0, [sp, #40]
   3fd08:	ldr	x0, [x0, #24]
   3fd0c:	add	x2, x0, #0x1
   3fd10:	ldr	x1, [sp, #40]
   3fd14:	str	x2, [x1, #24]
   3fd18:	ldrb	w0, [x0]
   3fd1c:	b	3fd24 <__asan_cplus_demangle_mangled_name@@Base+0xfd0>
   3fd20:	mov	w0, #0x0                   	// #0
   3fd24:	strb	w0, [sp, #79]
   3fd28:	ldr	x0, [sp, #40]
   3fd2c:	ldr	x0, [x0, #24]
   3fd30:	ldrb	w0, [x0]
   3fd34:	cmp	w0, #0x0
   3fd38:	b.eq	3fd58 <__asan_cplus_demangle_mangled_name@@Base+0x1004>  // b.none
   3fd3c:	ldr	x0, [sp, #40]
   3fd40:	ldr	x0, [x0, #24]
   3fd44:	add	x2, x0, #0x1
   3fd48:	ldr	x1, [sp, #40]
   3fd4c:	str	x2, [x1, #24]
   3fd50:	ldrb	w0, [x0]
   3fd54:	b	3fd5c <__asan_cplus_demangle_mangled_name@@Base+0x1008>
   3fd58:	mov	w0, #0x0                   	// #0
   3fd5c:	strb	w0, [sp, #78]
   3fd60:	ldrb	w0, [sp, #79]
   3fd64:	cmp	w0, #0x76
   3fd68:	b.ne	3fda8 <__asan_cplus_demangle_mangled_name@@Base+0x1054>  // b.any
   3fd6c:	ldrb	w0, [sp, #78]
   3fd70:	cmp	w0, #0x2f
   3fd74:	b.ls	3fda8 <__asan_cplus_demangle_mangled_name@@Base+0x1054>  // b.plast
   3fd78:	ldrb	w0, [sp, #78]
   3fd7c:	cmp	w0, #0x39
   3fd80:	b.hi	3fda8 <__asan_cplus_demangle_mangled_name@@Base+0x1054>  // b.pmore
   3fd84:	ldrb	w0, [sp, #78]
   3fd88:	sub	w19, w0, #0x30
   3fd8c:	ldr	x0, [sp, #40]
   3fd90:	bl	3f9b4 <__asan_cplus_demangle_mangled_name@@Base+0xc60>
   3fd94:	mov	x2, x0
   3fd98:	mov	w1, w19
   3fd9c:	ldr	x0, [sp, #40]
   3fda0:	bl	3eb20 <__asan_cplus_demangle_fill_dtor@@Base+0x368>
   3fda4:	b	3ff68 <__asan_cplus_demangle_mangled_name@@Base+0x1214>
   3fda8:	ldrb	w0, [sp, #79]
   3fdac:	cmp	w0, #0x63
   3fdb0:	b.ne	3fe50 <__asan_cplus_demangle_mangled_name@@Base+0x10fc>  // b.any
   3fdb4:	ldrb	w0, [sp, #78]
   3fdb8:	cmp	w0, #0x76
   3fdbc:	b.ne	3fe50 <__asan_cplus_demangle_mangled_name@@Base+0x10fc>  // b.any
   3fdc0:	ldr	x0, [sp, #40]
   3fdc4:	ldr	w0, [x0, #80]
   3fdc8:	str	w0, [sp, #72]
   3fdcc:	ldr	x0, [sp, #40]
   3fdd0:	ldr	w0, [x0, #76]
   3fdd4:	cmp	w0, #0x0
   3fdd8:	cset	w0, eq  // eq = none
   3fddc:	and	w0, w0, #0xff
   3fde0:	mov	w1, w0
   3fde4:	ldr	x0, [sp, #40]
   3fde8:	str	w1, [x0, #80]
   3fdec:	ldr	x0, [sp, #40]
   3fdf0:	bl	6990 <__asan_cplus_demangle_type@plt>
   3fdf4:	str	x0, [sp, #64]
   3fdf8:	ldr	x0, [sp, #40]
   3fdfc:	ldr	w0, [x0, #80]
   3fe00:	cmp	w0, #0x0
   3fe04:	b.eq	3fe24 <__asan_cplus_demangle_mangled_name@@Base+0x10d0>  // b.none
   3fe08:	mov	x3, #0x0                   	// #0
   3fe0c:	ldr	x2, [sp, #64]
   3fe10:	mov	w1, #0x35                  	// #53
   3fe14:	ldr	x0, [sp, #40]
   3fe18:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3fe1c:	str	x0, [sp, #88]
   3fe20:	b	3fe3c <__asan_cplus_demangle_mangled_name@@Base+0x10e8>
   3fe24:	mov	x3, #0x0                   	// #0
   3fe28:	ldr	x2, [sp, #64]
   3fe2c:	mov	w1, #0x34                  	// #52
   3fe30:	ldr	x0, [sp, #40]
   3fe34:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   3fe38:	str	x0, [sp, #88]
   3fe3c:	ldr	x0, [sp, #40]
   3fe40:	ldr	w1, [sp, #72]
   3fe44:	str	w1, [x0, #80]
   3fe48:	ldr	x0, [sp, #88]
   3fe4c:	b	3ff68 <__asan_cplus_demangle_mangled_name@@Base+0x1214>
   3fe50:	str	wzr, [sp, #84]
   3fe54:	mov	w0, #0x43                  	// #67
   3fe58:	str	w0, [sp, #80]
   3fe5c:	ldr	w1, [sp, #80]
   3fe60:	ldr	w0, [sp, #84]
   3fe64:	sub	w0, w1, w0
   3fe68:	lsr	w1, w0, #31
   3fe6c:	add	w0, w1, w0
   3fe70:	asr	w0, w0, #1
   3fe74:	mov	w1, w0
   3fe78:	ldr	w0, [sp, #84]
   3fe7c:	add	w0, w0, w1
   3fe80:	str	w0, [sp, #60]
   3fe84:	ldrsw	x1, [sp, #60]
   3fe88:	mov	x0, x1
   3fe8c:	lsl	x0, x0, #1
   3fe90:	add	x0, x0, x1
   3fe94:	lsl	x0, x0, #3
   3fe98:	mov	x1, x0
   3fe9c:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   3fea0:	ldr	x0, [x0, #3760]
   3fea4:	add	x0, x1, x0
   3fea8:	str	x0, [sp, #48]
   3feac:	ldr	x0, [sp, #48]
   3feb0:	ldr	x0, [x0]
   3feb4:	ldrb	w0, [x0]
   3feb8:	ldrb	w1, [sp, #79]
   3febc:	cmp	w1, w0
   3fec0:	b.ne	3fef0 <__asan_cplus_demangle_mangled_name@@Base+0x119c>  // b.any
   3fec4:	ldr	x0, [sp, #48]
   3fec8:	ldr	x0, [x0]
   3fecc:	add	x0, x0, #0x1
   3fed0:	ldrb	w0, [x0]
   3fed4:	ldrb	w1, [sp, #78]
   3fed8:	cmp	w1, w0
   3fedc:	b.ne	3fef0 <__asan_cplus_demangle_mangled_name@@Base+0x119c>  // b.any
   3fee0:	ldr	x1, [sp, #48]
   3fee4:	ldr	x0, [sp, #40]
   3fee8:	bl	3ead4 <__asan_cplus_demangle_fill_dtor@@Base+0x31c>
   3feec:	b	3ff68 <__asan_cplus_demangle_mangled_name@@Base+0x1214>
   3fef0:	ldr	x0, [sp, #48]
   3fef4:	ldr	x0, [x0]
   3fef8:	ldrb	w0, [x0]
   3fefc:	ldrb	w1, [sp, #79]
   3ff00:	cmp	w1, w0
   3ff04:	b.cc	3ff3c <__asan_cplus_demangle_mangled_name@@Base+0x11e8>  // b.lo, b.ul, b.last
   3ff08:	ldr	x0, [sp, #48]
   3ff0c:	ldr	x0, [x0]
   3ff10:	ldrb	w0, [x0]
   3ff14:	ldrb	w1, [sp, #79]
   3ff18:	cmp	w1, w0
   3ff1c:	b.ne	3ff48 <__asan_cplus_demangle_mangled_name@@Base+0x11f4>  // b.any
   3ff20:	ldr	x0, [sp, #48]
   3ff24:	ldr	x0, [x0]
   3ff28:	add	x0, x0, #0x1
   3ff2c:	ldrb	w0, [x0]
   3ff30:	ldrb	w1, [sp, #78]
   3ff34:	cmp	w1, w0
   3ff38:	b.cs	3ff48 <__asan_cplus_demangle_mangled_name@@Base+0x11f4>  // b.hs, b.nlast
   3ff3c:	ldr	w0, [sp, #60]
   3ff40:	str	w0, [sp, #80]
   3ff44:	b	3ff54 <__asan_cplus_demangle_mangled_name@@Base+0x1200>
   3ff48:	ldr	w0, [sp, #60]
   3ff4c:	add	w0, w0, #0x1
   3ff50:	str	w0, [sp, #84]
   3ff54:	ldr	w1, [sp, #84]
   3ff58:	ldr	w0, [sp, #80]
   3ff5c:	cmp	w1, w0
   3ff60:	b.ne	3fe5c <__asan_cplus_demangle_mangled_name@@Base+0x1108>  // b.any
   3ff64:	mov	x0, #0x0                   	// #0
   3ff68:	ldr	x19, [sp, #16]
   3ff6c:	ldp	x29, x30, [sp], #96
   3ff70:	ret
   3ff74:	stp	x29, x30, [sp, #-48]!
   3ff78:	mov	x29, sp
   3ff7c:	str	x0, [sp, #24]
   3ff80:	str	w1, [sp, #20]
   3ff84:	ldr	x0, [sp, #24]
   3ff88:	bl	3e838 <__asan_cplus_demangle_fill_dtor@@Base+0x80>
   3ff8c:	str	x0, [sp, #40]
   3ff90:	ldr	x0, [sp, #40]
   3ff94:	cmp	x0, #0x0
   3ff98:	b.eq	3ffb4 <__asan_cplus_demangle_mangled_name@@Base+0x1260>  // b.none
   3ff9c:	ldr	x0, [sp, #40]
   3ffa0:	mov	w1, #0x41                  	// #65
   3ffa4:	str	w1, [x0]
   3ffa8:	ldr	x0, [sp, #40]
   3ffac:	ldr	w1, [sp, #20]
   3ffb0:	str	w1, [x0, #8]
   3ffb4:	ldr	x0, [sp, #40]
   3ffb8:	ldp	x29, x30, [sp], #48
   3ffbc:	ret
   3ffc0:	stp	x29, x30, [sp, #-80]!
   3ffc4:	mov	x29, sp
   3ffc8:	str	x0, [sp, #24]
   3ffcc:	str	xzr, [sp, #72]
   3ffd0:	str	xzr, [sp, #64]
   3ffd4:	ldr	x0, [sp, #24]
   3ffd8:	bl	3fa08 <__asan_cplus_demangle_mangled_name@@Base+0xcb4>
   3ffdc:	str	w0, [sp, #60]
   3ffe0:	ldr	w0, [sp, #60]
   3ffe4:	cmp	w0, #0x1
   3ffe8:	b.gt	3fff4 <__asan_cplus_demangle_mangled_name@@Base+0x12a0>
   3ffec:	mov	x0, #0x0                   	// #0
   3fff0:	b	40270 <__asan_cplus_demangle_mangled_name@@Base+0x151c>
   3fff4:	ldr	x0, [sp, #24]
   3fff8:	ldr	x0, [x0, #24]
   3fffc:	ldrb	w0, [x0]
   40000:	cmp	w0, #0x0
   40004:	b.eq	40028 <__asan_cplus_demangle_mangled_name@@Base+0x12d4>  // b.none
   40008:	ldr	x0, [sp, #24]
   4000c:	ldr	x0, [x0, #24]
   40010:	add	x2, x0, #0x1
   40014:	ldr	x1, [sp, #24]
   40018:	str	x2, [x1, #24]
   4001c:	ldrb	w0, [x0]
   40020:	cmp	w0, #0x5f
   40024:	b.eq	40030 <__asan_cplus_demangle_mangled_name@@Base+0x12dc>  // b.none
   40028:	mov	x0, #0x0                   	// #0
   4002c:	b	40270 <__asan_cplus_demangle_mangled_name@@Base+0x151c>
   40030:	ldr	w0, [sp, #60]
   40034:	sub	w0, w0, #0x1
   40038:	str	w0, [sp, #60]
   4003c:	ldr	x0, [sp, #24]
   40040:	ldr	x0, [x0, #24]
   40044:	str	x0, [sp, #40]
   40048:	str	wzr, [sp, #56]
   4004c:	b	40248 <__asan_cplus_demangle_mangled_name@@Base+0x14f4>
   40050:	ldrsw	x0, [sp, #56]
   40054:	ldr	x1, [sp, #40]
   40058:	add	x0, x1, x0
   4005c:	ldrb	w0, [x0]
   40060:	strb	w0, [sp, #55]
   40064:	ldrb	w0, [sp, #55]
   40068:	cmp	w0, #0x0
   4006c:	b.ne	40078 <__asan_cplus_demangle_mangled_name@@Base+0x1324>  // b.any
   40070:	mov	x0, #0x0                   	// #0
   40074:	b	40270 <__asan_cplus_demangle_mangled_name@@Base+0x151c>
   40078:	ldrb	w0, [sp, #55]
   4007c:	cmp	w0, #0x24
   40080:	b.ne	40164 <__asan_cplus_demangle_mangled_name@@Base+0x1410>  // b.any
   40084:	ldr	w0, [sp, #56]
   40088:	add	w0, w0, #0x1
   4008c:	str	w0, [sp, #56]
   40090:	ldr	w0, [sp, #56]
   40094:	add	w1, w0, #0x1
   40098:	str	w1, [sp, #56]
   4009c:	sxtw	x0, w0
   400a0:	ldr	x1, [sp, #40]
   400a4:	add	x0, x1, x0
   400a8:	ldrb	w0, [x0]
   400ac:	cmp	w0, #0x5f
   400b0:	b.eq	400d8 <__asan_cplus_demangle_mangled_name@@Base+0x1384>  // b.none
   400b4:	cmp	w0, #0x5f
   400b8:	b.gt	400f0 <__asan_cplus_demangle_mangled_name@@Base+0x139c>
   400bc:	cmp	w0, #0x24
   400c0:	b.eq	400e4 <__asan_cplus_demangle_mangled_name@@Base+0x1390>  // b.none
   400c4:	cmp	w0, #0x53
   400c8:	b.ne	400f0 <__asan_cplus_demangle_mangled_name@@Base+0x139c>  // b.any
   400cc:	mov	w0, #0x2f                  	// #47
   400d0:	strb	w0, [sp, #55]
   400d4:	b	400f8 <__asan_cplus_demangle_mangled_name@@Base+0x13a4>
   400d8:	mov	w0, #0x2e                  	// #46
   400dc:	strb	w0, [sp, #55]
   400e0:	b	400f8 <__asan_cplus_demangle_mangled_name@@Base+0x13a4>
   400e4:	mov	w0, #0x24                  	// #36
   400e8:	strb	w0, [sp, #55]
   400ec:	b	400f8 <__asan_cplus_demangle_mangled_name@@Base+0x13a4>
   400f0:	mov	x0, #0x0                   	// #0
   400f4:	b	40270 <__asan_cplus_demangle_mangled_name@@Base+0x151c>
   400f8:	ldrb	w0, [sp, #55]
   400fc:	mov	w1, w0
   40100:	ldr	x0, [sp, #24]
   40104:	bl	3ff74 <__asan_cplus_demangle_mangled_name@@Base+0x1220>
   40108:	str	x0, [sp, #64]
   4010c:	ldr	x0, [sp, #24]
   40110:	ldr	x1, [x0, #24]
   40114:	ldrsw	x0, [sp, #56]
   40118:	add	x1, x1, x0
   4011c:	ldr	x0, [sp, #24]
   40120:	str	x1, [x0, #24]
   40124:	ldr	x0, [sp, #24]
   40128:	ldr	x0, [x0, #24]
   4012c:	str	x0, [sp, #40]
   40130:	ldr	w1, [sp, #60]
   40134:	ldr	w0, [sp, #56]
   40138:	sub	w0, w1, w0
   4013c:	str	w0, [sp, #60]
   40140:	str	wzr, [sp, #56]
   40144:	ldr	x0, [sp, #64]
   40148:	cmp	x0, #0x0
   4014c:	b.ne	40204 <__asan_cplus_demangle_mangled_name@@Base+0x14b0>  // b.any
   40150:	mov	x0, #0x0                   	// #0
   40154:	b	40270 <__asan_cplus_demangle_mangled_name@@Base+0x151c>
   40158:	ldr	w0, [sp, #56]
   4015c:	add	w0, w0, #0x1
   40160:	str	w0, [sp, #56]
   40164:	ldr	w1, [sp, #56]
   40168:	ldr	w0, [sp, #60]
   4016c:	cmp	w1, w0
   40170:	b.ge	401a4 <__asan_cplus_demangle_mangled_name@@Base+0x1450>  // b.tcont
   40174:	ldrsw	x0, [sp, #56]
   40178:	ldr	x1, [sp, #40]
   4017c:	add	x0, x1, x0
   40180:	ldrb	w0, [x0]
   40184:	cmp	w0, #0x0
   40188:	b.eq	401a4 <__asan_cplus_demangle_mangled_name@@Base+0x1450>  // b.none
   4018c:	ldrsw	x0, [sp, #56]
   40190:	ldr	x1, [sp, #40]
   40194:	add	x0, x1, x0
   40198:	ldrb	w0, [x0]
   4019c:	cmp	w0, #0x24
   401a0:	b.ne	40158 <__asan_cplus_demangle_mangled_name@@Base+0x1404>  // b.any
   401a4:	ldr	w2, [sp, #56]
   401a8:	ldr	x1, [sp, #40]
   401ac:	ldr	x0, [sp, #24]
   401b0:	bl	3ea28 <__asan_cplus_demangle_fill_dtor@@Base+0x270>
   401b4:	str	x0, [sp, #64]
   401b8:	ldr	x0, [sp, #24]
   401bc:	ldr	x1, [x0, #24]
   401c0:	ldrsw	x0, [sp, #56]
   401c4:	add	x1, x1, x0
   401c8:	ldr	x0, [sp, #24]
   401cc:	str	x1, [x0, #24]
   401d0:	ldr	x0, [sp, #24]
   401d4:	ldr	x0, [x0, #24]
   401d8:	str	x0, [sp, #40]
   401dc:	ldr	w1, [sp, #60]
   401e0:	ldr	w0, [sp, #56]
   401e4:	sub	w0, w1, w0
   401e8:	str	w0, [sp, #60]
   401ec:	str	wzr, [sp, #56]
   401f0:	ldr	x0, [sp, #64]
   401f4:	cmp	x0, #0x0
   401f8:	b.ne	40204 <__asan_cplus_demangle_mangled_name@@Base+0x14b0>  // b.any
   401fc:	mov	x0, #0x0                   	// #0
   40200:	b	40270 <__asan_cplus_demangle_mangled_name@@Base+0x151c>
   40204:	ldr	x0, [sp, #72]
   40208:	cmp	x0, #0x0
   4020c:	b.ne	4021c <__asan_cplus_demangle_mangled_name@@Base+0x14c8>  // b.any
   40210:	ldr	x0, [sp, #64]
   40214:	str	x0, [sp, #72]
   40218:	b	40248 <__asan_cplus_demangle_mangled_name@@Base+0x14f4>
   4021c:	ldr	x3, [sp, #64]
   40220:	ldr	x2, [sp, #72]
   40224:	mov	w1, #0x40                  	// #64
   40228:	ldr	x0, [sp, #24]
   4022c:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   40230:	str	x0, [sp, #72]
   40234:	ldr	x0, [sp, #72]
   40238:	cmp	x0, #0x0
   4023c:	b.ne	40248 <__asan_cplus_demangle_mangled_name@@Base+0x14f4>  // b.any
   40240:	mov	x0, #0x0                   	// #0
   40244:	b	40270 <__asan_cplus_demangle_mangled_name@@Base+0x151c>
   40248:	ldr	w0, [sp, #60]
   4024c:	cmp	w0, #0x0
   40250:	b.gt	40050 <__asan_cplus_demangle_mangled_name@@Base+0x12fc>
   40254:	mov	x3, #0x0                   	// #0
   40258:	ldr	x2, [sp, #72]
   4025c:	mov	w1, #0x3f                  	// #63
   40260:	ldr	x0, [sp, #24]
   40264:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   40268:	str	x0, [sp, #72]
   4026c:	ldr	x0, [sp, #72]
   40270:	ldp	x29, x30, [sp], #80
   40274:	ret
   40278:	stp	x29, x30, [sp, #-64]!
   4027c:	mov	x29, sp
   40280:	str	x0, [sp, #24]
   40284:	ldr	x0, [sp, #24]
   40288:	ldr	w0, [x0, #72]
   4028c:	add	w1, w0, #0x14
   40290:	ldr	x0, [sp, #24]
   40294:	str	w1, [x0, #72]
   40298:	ldr	x0, [sp, #24]
   4029c:	ldr	x0, [x0, #24]
   402a0:	ldrb	w0, [x0]
   402a4:	cmp	w0, #0x54
   402a8:	b.ne	402c8 <__asan_cplus_demangle_mangled_name@@Base+0x1574>  // b.any
   402ac:	ldr	x0, [sp, #24]
   402b0:	ldr	x0, [x0, #24]
   402b4:	add	x1, x0, #0x1
   402b8:	ldr	x0, [sp, #24]
   402bc:	str	x1, [x0, #24]
   402c0:	mov	w0, #0x1                   	// #1
   402c4:	b	402cc <__asan_cplus_demangle_mangled_name@@Base+0x1578>
   402c8:	mov	w0, #0x0                   	// #0
   402cc:	cmp	w0, #0x0
   402d0:	b.eq	406a0 <__asan_cplus_demangle_mangled_name@@Base+0x194c>  // b.none
   402d4:	ldr	x0, [sp, #24]
   402d8:	ldr	x0, [x0, #24]
   402dc:	ldrb	w0, [x0]
   402e0:	cmp	w0, #0x0
   402e4:	b.eq	40304 <__asan_cplus_demangle_mangled_name@@Base+0x15b0>  // b.none
   402e8:	ldr	x0, [sp, #24]
   402ec:	ldr	x0, [x0, #24]
   402f0:	add	x2, x0, #0x1
   402f4:	ldr	x1, [sp, #24]
   402f8:	str	x2, [x1, #24]
   402fc:	ldrb	w0, [x0]
   40300:	b	40308 <__asan_cplus_demangle_mangled_name@@Base+0x15b4>
   40304:	mov	w0, #0x0                   	// #0
   40308:	cmp	w0, #0x76
   4030c:	b.eq	404b4 <__asan_cplus_demangle_mangled_name@@Base+0x1760>  // b.none
   40310:	cmp	w0, #0x76
   40314:	b.gt	40698 <__asan_cplus_demangle_mangled_name@@Base+0x1944>
   40318:	cmp	w0, #0x68
   4031c:	b.eq	40474 <__asan_cplus_demangle_mangled_name@@Base+0x1720>  // b.none
   40320:	cmp	w0, #0x68
   40324:	b.gt	40698 <__asan_cplus_demangle_mangled_name@@Base+0x1944>
   40328:	cmp	w0, #0x63
   4032c:	b.eq	404f4 <__asan_cplus_demangle_mangled_name@@Base+0x17a0>  // b.none
   40330:	cmp	w0, #0x63
   40334:	b.gt	40698 <__asan_cplus_demangle_mangled_name@@Base+0x1944>
   40338:	cmp	w0, #0x57
   4033c:	b.eq	40658 <__asan_cplus_demangle_mangled_name@@Base+0x1904>  // b.none
   40340:	cmp	w0, #0x57
   40344:	b.gt	40698 <__asan_cplus_demangle_mangled_name@@Base+0x1944>
   40348:	cmp	w0, #0x56
   4034c:	b.eq	403cc <__asan_cplus_demangle_mangled_name@@Base+0x1678>  // b.none
   40350:	cmp	w0, #0x56
   40354:	b.gt	40698 <__asan_cplus_demangle_mangled_name@@Base+0x1944>
   40358:	cmp	w0, #0x54
   4035c:	b.eq	40400 <__asan_cplus_demangle_mangled_name@@Base+0x16ac>  // b.none
   40360:	cmp	w0, #0x54
   40364:	b.gt	40698 <__asan_cplus_demangle_mangled_name@@Base+0x1944>
   40368:	cmp	w0, #0x53
   4036c:	b.eq	40454 <__asan_cplus_demangle_mangled_name@@Base+0x1700>  // b.none
   40370:	cmp	w0, #0x53
   40374:	b.gt	40698 <__asan_cplus_demangle_mangled_name@@Base+0x1944>
   40378:	cmp	w0, #0x4a
   4037c:	b.eq	40618 <__asan_cplus_demangle_mangled_name@@Base+0x18c4>  // b.none
   40380:	cmp	w0, #0x4a
   40384:	b.gt	40698 <__asan_cplus_demangle_mangled_name@@Base+0x1944>
   40388:	cmp	w0, #0x49
   4038c:	b.eq	40434 <__asan_cplus_demangle_mangled_name@@Base+0x16e0>  // b.none
   40390:	cmp	w0, #0x49
   40394:	b.gt	40698 <__asan_cplus_demangle_mangled_name@@Base+0x1944>
   40398:	cmp	w0, #0x48
   4039c:	b.eq	40638 <__asan_cplus_demangle_mangled_name@@Base+0x18e4>  // b.none
   403a0:	cmp	w0, #0x48
   403a4:	b.gt	40698 <__asan_cplus_demangle_mangled_name@@Base+0x1944>
   403a8:	cmp	w0, #0x46
   403ac:	b.eq	405f8 <__asan_cplus_demangle_mangled_name@@Base+0x18a4>  // b.none
   403b0:	cmp	w0, #0x46
   403b4:	b.gt	40698 <__asan_cplus_demangle_mangled_name@@Base+0x1944>
   403b8:	cmp	w0, #0x41
   403bc:	b.eq	40678 <__asan_cplus_demangle_mangled_name@@Base+0x1924>  // b.none
   403c0:	cmp	w0, #0x43
   403c4:	b.eq	40550 <__asan_cplus_demangle_mangled_name@@Base+0x17fc>  // b.none
   403c8:	b	40698 <__asan_cplus_demangle_mangled_name@@Base+0x1944>
   403cc:	ldr	x0, [sp, #24]
   403d0:	ldr	w0, [x0, #72]
   403d4:	sub	w1, w0, #0x5
   403d8:	ldr	x0, [sp, #24]
   403dc:	str	w1, [x0, #72]
   403e0:	ldr	x0, [sp, #24]
   403e4:	bl	6990 <__asan_cplus_demangle_type@plt>
   403e8:	mov	x3, #0x0                   	// #0
   403ec:	mov	x2, x0
   403f0:	mov	w1, #0x9                   	// #9
   403f4:	ldr	x0, [sp, #24]
   403f8:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   403fc:	b	40860 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   40400:	ldr	x0, [sp, #24]
   40404:	ldr	w0, [x0, #72]
   40408:	sub	w1, w0, #0xa
   4040c:	ldr	x0, [sp, #24]
   40410:	str	w1, [x0, #72]
   40414:	ldr	x0, [sp, #24]
   40418:	bl	6990 <__asan_cplus_demangle_type@plt>
   4041c:	mov	x3, #0x0                   	// #0
   40420:	mov	x2, x0
   40424:	mov	w1, #0xa                   	// #10
   40428:	ldr	x0, [sp, #24]
   4042c:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   40430:	b	40860 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   40434:	ldr	x0, [sp, #24]
   40438:	bl	6990 <__asan_cplus_demangle_type@plt>
   4043c:	mov	x3, #0x0                   	// #0
   40440:	mov	x2, x0
   40444:	mov	w1, #0xc                   	// #12
   40448:	ldr	x0, [sp, #24]
   4044c:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   40450:	b	40860 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   40454:	ldr	x0, [sp, #24]
   40458:	bl	6990 <__asan_cplus_demangle_type@plt>
   4045c:	mov	x3, #0x0                   	// #0
   40460:	mov	x2, x0
   40464:	mov	w1, #0xd                   	// #13
   40468:	ldr	x0, [sp, #24]
   4046c:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   40470:	b	40860 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   40474:	mov	w1, #0x68                  	// #104
   40478:	ldr	x0, [sp, #24]
   4047c:	bl	40868 <__asan_cplus_demangle_mangled_name@@Base+0x1b14>
   40480:	cmp	w0, #0x0
   40484:	b.ne	40490 <__asan_cplus_demangle_mangled_name@@Base+0x173c>  // b.any
   40488:	mov	x0, #0x0                   	// #0
   4048c:	b	40860 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   40490:	mov	w1, #0x0                   	// #0
   40494:	ldr	x0, [sp, #24]
   40498:	bl	3f010 <__asan_cplus_demangle_mangled_name@@Base+0x2bc>
   4049c:	mov	x3, #0x0                   	// #0
   404a0:	mov	x2, x0
   404a4:	mov	w1, #0xf                   	// #15
   404a8:	ldr	x0, [sp, #24]
   404ac:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   404b0:	b	40860 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   404b4:	mov	w1, #0x76                  	// #118
   404b8:	ldr	x0, [sp, #24]
   404bc:	bl	40868 <__asan_cplus_demangle_mangled_name@@Base+0x1b14>
   404c0:	cmp	w0, #0x0
   404c4:	b.ne	404d0 <__asan_cplus_demangle_mangled_name@@Base+0x177c>  // b.any
   404c8:	mov	x0, #0x0                   	// #0
   404cc:	b	40860 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   404d0:	mov	w1, #0x0                   	// #0
   404d4:	ldr	x0, [sp, #24]
   404d8:	bl	3f010 <__asan_cplus_demangle_mangled_name@@Base+0x2bc>
   404dc:	mov	x3, #0x0                   	// #0
   404e0:	mov	x2, x0
   404e4:	mov	w1, #0x10                  	// #16
   404e8:	ldr	x0, [sp, #24]
   404ec:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   404f0:	b	40860 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   404f4:	mov	w1, #0x0                   	// #0
   404f8:	ldr	x0, [sp, #24]
   404fc:	bl	40868 <__asan_cplus_demangle_mangled_name@@Base+0x1b14>
   40500:	cmp	w0, #0x0
   40504:	b.ne	40510 <__asan_cplus_demangle_mangled_name@@Base+0x17bc>  // b.any
   40508:	mov	x0, #0x0                   	// #0
   4050c:	b	40860 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   40510:	mov	w1, #0x0                   	// #0
   40514:	ldr	x0, [sp, #24]
   40518:	bl	40868 <__asan_cplus_demangle_mangled_name@@Base+0x1b14>
   4051c:	cmp	w0, #0x0
   40520:	b.ne	4052c <__asan_cplus_demangle_mangled_name@@Base+0x17d8>  // b.any
   40524:	mov	x0, #0x0                   	// #0
   40528:	b	40860 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   4052c:	mov	w1, #0x0                   	// #0
   40530:	ldr	x0, [sp, #24]
   40534:	bl	3f010 <__asan_cplus_demangle_mangled_name@@Base+0x2bc>
   40538:	mov	x3, #0x0                   	// #0
   4053c:	mov	x2, x0
   40540:	mov	w1, #0x11                  	// #17
   40544:	ldr	x0, [sp, #24]
   40548:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   4054c:	b	40860 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   40550:	ldr	x0, [sp, #24]
   40554:	bl	6990 <__asan_cplus_demangle_type@plt>
   40558:	str	x0, [sp, #48]
   4055c:	ldr	x0, [sp, #24]
   40560:	bl	3fa08 <__asan_cplus_demangle_mangled_name@@Base+0xcb4>
   40564:	str	w0, [sp, #44]
   40568:	ldr	w0, [sp, #44]
   4056c:	cmp	w0, #0x0
   40570:	b.ge	4057c <__asan_cplus_demangle_mangled_name@@Base+0x1828>  // b.tcont
   40574:	mov	x0, #0x0                   	// #0
   40578:	b	40860 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   4057c:	ldr	x0, [sp, #24]
   40580:	ldr	x0, [x0, #24]
   40584:	ldrb	w0, [x0]
   40588:	cmp	w0, #0x5f
   4058c:	b.ne	405ac <__asan_cplus_demangle_mangled_name@@Base+0x1858>  // b.any
   40590:	ldr	x0, [sp, #24]
   40594:	ldr	x0, [x0, #24]
   40598:	add	x1, x0, #0x1
   4059c:	ldr	x0, [sp, #24]
   405a0:	str	x1, [x0, #24]
   405a4:	mov	w0, #0x0                   	// #0
   405a8:	b	405b0 <__asan_cplus_demangle_mangled_name@@Base+0x185c>
   405ac:	mov	w0, #0x1                   	// #1
   405b0:	cmp	w0, #0x0
   405b4:	b.eq	405c0 <__asan_cplus_demangle_mangled_name@@Base+0x186c>  // b.none
   405b8:	mov	x0, #0x0                   	// #0
   405bc:	b	40860 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   405c0:	ldr	x0, [sp, #24]
   405c4:	bl	6990 <__asan_cplus_demangle_type@plt>
   405c8:	str	x0, [sp, #32]
   405cc:	ldr	x0, [sp, #24]
   405d0:	ldr	w0, [x0, #72]
   405d4:	add	w1, w0, #0x5
   405d8:	ldr	x0, [sp, #24]
   405dc:	str	w1, [x0, #72]
   405e0:	ldr	x3, [sp, #48]
   405e4:	ldr	x2, [sp, #32]
   405e8:	mov	w1, #0xb                   	// #11
   405ec:	ldr	x0, [sp, #24]
   405f0:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   405f4:	b	40860 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   405f8:	ldr	x0, [sp, #24]
   405fc:	bl	6990 <__asan_cplus_demangle_type@plt>
   40600:	mov	x3, #0x0                   	// #0
   40604:	mov	x2, x0
   40608:	mov	w1, #0xe                   	// #14
   4060c:	ldr	x0, [sp, #24]
   40610:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   40614:	b	40860 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   40618:	ldr	x0, [sp, #24]
   4061c:	bl	6990 <__asan_cplus_demangle_type@plt>
   40620:	mov	x3, #0x0                   	// #0
   40624:	mov	x2, x0
   40628:	mov	w1, #0x12                  	// #18
   4062c:	ldr	x0, [sp, #24]
   40630:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   40634:	b	40860 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   40638:	ldr	x0, [sp, #24]
   4063c:	bl	3f230 <__asan_cplus_demangle_mangled_name@@Base+0x4dc>
   40640:	mov	x3, #0x0                   	// #0
   40644:	mov	x2, x0
   40648:	mov	w1, #0x14                  	// #20
   4064c:	ldr	x0, [sp, #24]
   40650:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   40654:	b	40860 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   40658:	ldr	x0, [sp, #24]
   4065c:	bl	3f230 <__asan_cplus_demangle_mangled_name@@Base+0x4dc>
   40660:	mov	x3, #0x0                   	// #0
   40664:	mov	x2, x0
   40668:	mov	w1, #0x15                  	// #21
   4066c:	ldr	x0, [sp, #24]
   40670:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   40674:	b	40860 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   40678:	ldr	x0, [sp, #24]
   4067c:	bl	425a8 <__asan_cplus_demangle_type@@Base+0x18e4>
   40680:	mov	x3, #0x0                   	// #0
   40684:	mov	x2, x0
   40688:	mov	w1, #0x30                  	// #48
   4068c:	ldr	x0, [sp, #24]
   40690:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   40694:	b	40860 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   40698:	mov	x0, #0x0                   	// #0
   4069c:	b	40860 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   406a0:	ldr	x0, [sp, #24]
   406a4:	ldr	x0, [x0, #24]
   406a8:	ldrb	w0, [x0]
   406ac:	cmp	w0, #0x47
   406b0:	b.ne	406d0 <__asan_cplus_demangle_mangled_name@@Base+0x197c>  // b.any
   406b4:	ldr	x0, [sp, #24]
   406b8:	ldr	x0, [x0, #24]
   406bc:	add	x1, x0, #0x1
   406c0:	ldr	x0, [sp, #24]
   406c4:	str	x1, [x0, #24]
   406c8:	mov	w0, #0x1                   	// #1
   406cc:	b	406d4 <__asan_cplus_demangle_mangled_name@@Base+0x1980>
   406d0:	mov	w0, #0x0                   	// #0
   406d4:	cmp	w0, #0x0
   406d8:	b.eq	4085c <__asan_cplus_demangle_mangled_name@@Base+0x1b08>  // b.none
   406dc:	ldr	x0, [sp, #24]
   406e0:	ldr	x0, [x0, #24]
   406e4:	ldrb	w0, [x0]
   406e8:	cmp	w0, #0x0
   406ec:	b.eq	4070c <__asan_cplus_demangle_mangled_name@@Base+0x19b8>  // b.none
   406f0:	ldr	x0, [sp, #24]
   406f4:	ldr	x0, [x0, #24]
   406f8:	add	x2, x0, #0x1
   406fc:	ldr	x1, [sp, #24]
   40700:	str	x2, [x1, #24]
   40704:	ldrb	w0, [x0]
   40708:	b	40710 <__asan_cplus_demangle_mangled_name@@Base+0x19bc>
   4070c:	mov	w0, #0x0                   	// #0
   40710:	cmp	w0, #0x72
   40714:	b.eq	40848 <__asan_cplus_demangle_mangled_name@@Base+0x1af4>  // b.none
   40718:	cmp	w0, #0x72
   4071c:	b.gt	40854 <__asan_cplus_demangle_mangled_name@@Base+0x1b00>
   40720:	cmp	w0, #0x56
   40724:	b.eq	40754 <__asan_cplus_demangle_mangled_name@@Base+0x1a00>  // b.none
   40728:	cmp	w0, #0x56
   4072c:	b.gt	40854 <__asan_cplus_demangle_mangled_name@@Base+0x1b00>
   40730:	cmp	w0, #0x54
   40734:	b.eq	407c4 <__asan_cplus_demangle_mangled_name@@Base+0x1a70>  // b.none
   40738:	cmp	w0, #0x54
   4073c:	b.gt	40854 <__asan_cplus_demangle_mangled_name@@Base+0x1b00>
   40740:	cmp	w0, #0x41
   40744:	b.eq	407a0 <__asan_cplus_demangle_mangled_name@@Base+0x1a4c>  // b.none
   40748:	cmp	w0, #0x52
   4074c:	b.eq	40774 <__asan_cplus_demangle_mangled_name@@Base+0x1a20>  // b.none
   40750:	b	40854 <__asan_cplus_demangle_mangled_name@@Base+0x1b00>
   40754:	ldr	x0, [sp, #24]
   40758:	bl	3f230 <__asan_cplus_demangle_mangled_name@@Base+0x4dc>
   4075c:	mov	x3, #0x0                   	// #0
   40760:	mov	x2, x0
   40764:	mov	w1, #0x13                  	// #19
   40768:	ldr	x0, [sp, #24]
   4076c:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   40770:	b	40860 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   40774:	ldr	x0, [sp, #24]
   40778:	bl	3f230 <__asan_cplus_demangle_mangled_name@@Base+0x4dc>
   4077c:	str	x0, [sp, #56]
   40780:	ldr	x0, [sp, #24]
   40784:	bl	3fb30 <__asan_cplus_demangle_mangled_name@@Base+0xddc>
   40788:	mov	x3, x0
   4078c:	ldr	x2, [sp, #56]
   40790:	mov	w1, #0x16                  	// #22
   40794:	ldr	x0, [sp, #24]
   40798:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   4079c:	b	40860 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   407a0:	mov	w1, #0x0                   	// #0
   407a4:	ldr	x0, [sp, #24]
   407a8:	bl	3f010 <__asan_cplus_demangle_mangled_name@@Base+0x2bc>
   407ac:	mov	x3, #0x0                   	// #0
   407b0:	mov	x2, x0
   407b4:	mov	w1, #0x17                  	// #23
   407b8:	ldr	x0, [sp, #24]
   407bc:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   407c0:	b	40860 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   407c4:	ldr	x0, [sp, #24]
   407c8:	ldr	x0, [x0, #24]
   407cc:	ldrb	w0, [x0]
   407d0:	cmp	w0, #0x0
   407d4:	b.eq	407f4 <__asan_cplus_demangle_mangled_name@@Base+0x1aa0>  // b.none
   407d8:	ldr	x0, [sp, #24]
   407dc:	ldr	x0, [x0, #24]
   407e0:	add	x2, x0, #0x1
   407e4:	ldr	x1, [sp, #24]
   407e8:	str	x2, [x1, #24]
   407ec:	ldrb	w0, [x0]
   407f0:	b	407f8 <__asan_cplus_demangle_mangled_name@@Base+0x1aa4>
   407f4:	mov	w0, #0x0                   	// #0
   407f8:	cmp	w0, #0x6e
   407fc:	b.ne	40824 <__asan_cplus_demangle_mangled_name@@Base+0x1ad0>  // b.any
   40800:	mov	w1, #0x0                   	// #0
   40804:	ldr	x0, [sp, #24]
   40808:	bl	3f010 <__asan_cplus_demangle_mangled_name@@Base+0x2bc>
   4080c:	mov	x3, #0x0                   	// #0
   40810:	mov	x2, x0
   40814:	mov	w1, #0x4a                  	// #74
   40818:	ldr	x0, [sp, #24]
   4081c:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   40820:	b	40860 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   40824:	mov	w1, #0x0                   	// #0
   40828:	ldr	x0, [sp, #24]
   4082c:	bl	3f010 <__asan_cplus_demangle_mangled_name@@Base+0x2bc>
   40830:	mov	x3, #0x0                   	// #0
   40834:	mov	x2, x0
   40838:	mov	w1, #0x49                  	// #73
   4083c:	ldr	x0, [sp, #24]
   40840:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   40844:	b	40860 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   40848:	ldr	x0, [sp, #24]
   4084c:	bl	3ffc0 <__asan_cplus_demangle_mangled_name@@Base+0x126c>
   40850:	b	40860 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   40854:	mov	x0, #0x0                   	// #0
   40858:	b	40860 <__asan_cplus_demangle_mangled_name@@Base+0x1b0c>
   4085c:	mov	x0, #0x0                   	// #0
   40860:	ldp	x29, x30, [sp], #64
   40864:	ret
   40868:	stp	x29, x30, [sp, #-32]!
   4086c:	mov	x29, sp
   40870:	str	x0, [sp, #24]
   40874:	str	w1, [sp, #20]
   40878:	ldr	w0, [sp, #20]
   4087c:	cmp	w0, #0x0
   40880:	b.ne	408bc <__asan_cplus_demangle_mangled_name@@Base+0x1b68>  // b.any
   40884:	ldr	x0, [sp, #24]
   40888:	ldr	x0, [x0, #24]
   4088c:	ldrb	w0, [x0]
   40890:	cmp	w0, #0x0
   40894:	b.eq	408b4 <__asan_cplus_demangle_mangled_name@@Base+0x1b60>  // b.none
   40898:	ldr	x0, [sp, #24]
   4089c:	ldr	x0, [x0, #24]
   408a0:	add	x2, x0, #0x1
   408a4:	ldr	x1, [sp, #24]
   408a8:	str	x2, [x1, #24]
   408ac:	ldrb	w0, [x0]
   408b0:	b	408b8 <__asan_cplus_demangle_mangled_name@@Base+0x1b64>
   408b4:	mov	w0, #0x0                   	// #0
   408b8:	str	w0, [sp, #20]
   408bc:	ldr	w0, [sp, #20]
   408c0:	cmp	w0, #0x68
   408c4:	b.ne	408d4 <__asan_cplus_demangle_mangled_name@@Base+0x1b80>  // b.any
   408c8:	ldr	x0, [sp, #24]
   408cc:	bl	3fa08 <__asan_cplus_demangle_mangled_name@@Base+0xcb4>
   408d0:	b	40940 <__asan_cplus_demangle_mangled_name@@Base+0x1bec>
   408d4:	ldr	w0, [sp, #20]
   408d8:	cmp	w0, #0x76
   408dc:	b.ne	40938 <__asan_cplus_demangle_mangled_name@@Base+0x1be4>  // b.any
   408e0:	ldr	x0, [sp, #24]
   408e4:	bl	3fa08 <__asan_cplus_demangle_mangled_name@@Base+0xcb4>
   408e8:	ldr	x0, [sp, #24]
   408ec:	ldr	x0, [x0, #24]
   408f0:	ldrb	w0, [x0]
   408f4:	cmp	w0, #0x5f
   408f8:	b.ne	40918 <__asan_cplus_demangle_mangled_name@@Base+0x1bc4>  // b.any
   408fc:	ldr	x0, [sp, #24]
   40900:	ldr	x0, [x0, #24]
   40904:	add	x1, x0, #0x1
   40908:	ldr	x0, [sp, #24]
   4090c:	str	x1, [x0, #24]
   40910:	mov	w0, #0x0                   	// #0
   40914:	b	4091c <__asan_cplus_demangle_mangled_name@@Base+0x1bc8>
   40918:	mov	w0, #0x1                   	// #1
   4091c:	cmp	w0, #0x0
   40920:	b.eq	4092c <__asan_cplus_demangle_mangled_name@@Base+0x1bd8>  // b.none
   40924:	mov	w0, #0x0                   	// #0
   40928:	b	40988 <__asan_cplus_demangle_mangled_name@@Base+0x1c34>
   4092c:	ldr	x0, [sp, #24]
   40930:	bl	3fa08 <__asan_cplus_demangle_mangled_name@@Base+0xcb4>
   40934:	b	40940 <__asan_cplus_demangle_mangled_name@@Base+0x1bec>
   40938:	mov	w0, #0x0                   	// #0
   4093c:	b	40988 <__asan_cplus_demangle_mangled_name@@Base+0x1c34>
   40940:	ldr	x0, [sp, #24]
   40944:	ldr	x0, [x0, #24]
   40948:	ldrb	w0, [x0]
   4094c:	cmp	w0, #0x5f
   40950:	b.ne	40970 <__asan_cplus_demangle_mangled_name@@Base+0x1c1c>  // b.any
   40954:	ldr	x0, [sp, #24]
   40958:	ldr	x0, [x0, #24]
   4095c:	add	x1, x0, #0x1
   40960:	ldr	x0, [sp, #24]
   40964:	str	x1, [x0, #24]
   40968:	mov	w0, #0x0                   	// #0
   4096c:	b	40974 <__asan_cplus_demangle_mangled_name@@Base+0x1c20>
   40970:	mov	w0, #0x1                   	// #1
   40974:	cmp	w0, #0x0
   40978:	b.eq	40984 <__asan_cplus_demangle_mangled_name@@Base+0x1c30>  // b.none
   4097c:	mov	w0, #0x0                   	// #0
   40980:	b	40988 <__asan_cplus_demangle_mangled_name@@Base+0x1c34>
   40984:	mov	w0, #0x1                   	// #1
   40988:	ldp	x29, x30, [sp], #32
   4098c:	ret
   40990:	stp	x29, x30, [sp, #-48]!
   40994:	mov	x29, sp
   40998:	str	x0, [sp, #24]
   4099c:	ldr	x0, [sp, #24]
   409a0:	ldr	x0, [x0, #64]
   409a4:	cmp	x0, #0x0
   409a8:	b.eq	40a18 <__asan_cplus_demangle_mangled_name@@Base+0x1cc4>  // b.none
   409ac:	ldr	x0, [sp, #24]
   409b0:	ldr	x0, [x0, #64]
   409b4:	ldr	w0, [x0]
   409b8:	cmp	w0, #0x0
   409bc:	b.ne	409e4 <__asan_cplus_demangle_mangled_name@@Base+0x1c90>  // b.any
   409c0:	ldr	x0, [sp, #24]
   409c4:	ldr	w1, [x0, #72]
   409c8:	ldr	x0, [sp, #24]
   409cc:	ldr	x0, [x0, #64]
   409d0:	ldr	w0, [x0, #16]
   409d4:	add	w1, w1, w0
   409d8:	ldr	x0, [sp, #24]
   409dc:	str	w1, [x0, #72]
   409e0:	b	40a18 <__asan_cplus_demangle_mangled_name@@Base+0x1cc4>
   409e4:	ldr	x0, [sp, #24]
   409e8:	ldr	x0, [x0, #64]
   409ec:	ldr	w0, [x0]
   409f0:	cmp	w0, #0x18
   409f4:	b.ne	40a18 <__asan_cplus_demangle_mangled_name@@Base+0x1cc4>  // b.any
   409f8:	ldr	x0, [sp, #24]
   409fc:	ldr	w1, [x0, #72]
   40a00:	ldr	x0, [sp, #24]
   40a04:	ldr	x0, [x0, #64]
   40a08:	ldr	w0, [x0, #16]
   40a0c:	add	w1, w1, w0
   40a10:	ldr	x0, [sp, #24]
   40a14:	str	w1, [x0, #72]
   40a18:	ldr	x0, [sp, #24]
   40a1c:	ldr	x0, [x0, #24]
   40a20:	ldrb	w0, [x0]
   40a24:	cmp	w0, #0x43
   40a28:	b.eq	40a38 <__asan_cplus_demangle_mangled_name@@Base+0x1ce4>  // b.none
   40a2c:	cmp	w0, #0x44
   40a30:	b.eq	40b4c <__asan_cplus_demangle_mangled_name@@Base+0x1df8>  // b.none
   40a34:	b	40c14 <__asan_cplus_demangle_mangled_name@@Base+0x1ec0>
   40a38:	str	wzr, [sp, #40]
   40a3c:	ldr	x0, [sp, #24]
   40a40:	ldr	x0, [x0, #24]
   40a44:	add	x0, x0, #0x1
   40a48:	ldrb	w0, [x0]
   40a4c:	cmp	w0, #0x49
   40a50:	b.ne	40a70 <__asan_cplus_demangle_mangled_name@@Base+0x1d1c>  // b.any
   40a54:	mov	w0, #0x1                   	// #1
   40a58:	str	w0, [sp, #40]
   40a5c:	ldr	x0, [sp, #24]
   40a60:	ldr	x0, [x0, #24]
   40a64:	add	x1, x0, #0x1
   40a68:	ldr	x0, [sp, #24]
   40a6c:	str	x1, [x0, #24]
   40a70:	ldr	x0, [sp, #24]
   40a74:	ldr	x0, [x0, #24]
   40a78:	add	x0, x0, #0x1
   40a7c:	ldrb	w0, [x0]
   40a80:	cmp	w0, #0x35
   40a84:	b.eq	40af4 <__asan_cplus_demangle_mangled_name@@Base+0x1da0>  // b.none
   40a88:	cmp	w0, #0x35
   40a8c:	b.gt	40b00 <__asan_cplus_demangle_mangled_name@@Base+0x1dac>
   40a90:	cmp	w0, #0x34
   40a94:	b.eq	40ae8 <__asan_cplus_demangle_mangled_name@@Base+0x1d94>  // b.none
   40a98:	cmp	w0, #0x34
   40a9c:	b.gt	40b00 <__asan_cplus_demangle_mangled_name@@Base+0x1dac>
   40aa0:	cmp	w0, #0x33
   40aa4:	b.eq	40adc <__asan_cplus_demangle_mangled_name@@Base+0x1d88>  // b.none
   40aa8:	cmp	w0, #0x33
   40aac:	b.gt	40b00 <__asan_cplus_demangle_mangled_name@@Base+0x1dac>
   40ab0:	cmp	w0, #0x31
   40ab4:	b.eq	40ac4 <__asan_cplus_demangle_mangled_name@@Base+0x1d70>  // b.none
   40ab8:	cmp	w0, #0x32
   40abc:	b.eq	40ad0 <__asan_cplus_demangle_mangled_name@@Base+0x1d7c>  // b.none
   40ac0:	b	40b00 <__asan_cplus_demangle_mangled_name@@Base+0x1dac>
   40ac4:	mov	w0, #0x1                   	// #1
   40ac8:	str	w0, [sp, #44]
   40acc:	b	40b08 <__asan_cplus_demangle_mangled_name@@Base+0x1db4>
   40ad0:	mov	w0, #0x2                   	// #2
   40ad4:	str	w0, [sp, #44]
   40ad8:	b	40b08 <__asan_cplus_demangle_mangled_name@@Base+0x1db4>
   40adc:	mov	w0, #0x3                   	// #3
   40ae0:	str	w0, [sp, #44]
   40ae4:	b	40b08 <__asan_cplus_demangle_mangled_name@@Base+0x1db4>
   40ae8:	mov	w0, #0x4                   	// #4
   40aec:	str	w0, [sp, #44]
   40af0:	b	40b08 <__asan_cplus_demangle_mangled_name@@Base+0x1db4>
   40af4:	mov	w0, #0x5                   	// #5
   40af8:	str	w0, [sp, #44]
   40afc:	b	40b08 <__asan_cplus_demangle_mangled_name@@Base+0x1db4>
   40b00:	mov	x0, #0x0                   	// #0
   40b04:	b	40c18 <__asan_cplus_demangle_mangled_name@@Base+0x1ec4>
   40b08:	ldr	x0, [sp, #24]
   40b0c:	ldr	x0, [x0, #24]
   40b10:	add	x1, x0, #0x2
   40b14:	ldr	x0, [sp, #24]
   40b18:	str	x1, [x0, #24]
   40b1c:	ldr	w0, [sp, #40]
   40b20:	cmp	w0, #0x0
   40b24:	b.eq	40b30 <__asan_cplus_demangle_mangled_name@@Base+0x1ddc>  // b.none
   40b28:	ldr	x0, [sp, #24]
   40b2c:	bl	6990 <__asan_cplus_demangle_type@plt>
   40b30:	ldr	x0, [sp, #24]
   40b34:	ldr	x0, [x0, #64]
   40b38:	mov	x2, x0
   40b3c:	ldr	w1, [sp, #44]
   40b40:	ldr	x0, [sp, #24]
   40b44:	bl	3ebc8 <__asan_cplus_demangle_fill_dtor@@Base+0x410>
   40b48:	b	40c18 <__asan_cplus_demangle_mangled_name@@Base+0x1ec4>
   40b4c:	ldr	x0, [sp, #24]
   40b50:	ldr	x0, [x0, #24]
   40b54:	add	x0, x0, #0x1
   40b58:	ldrb	w0, [x0]
   40b5c:	cmp	w0, #0x35
   40b60:	b.eq	40bd0 <__asan_cplus_demangle_mangled_name@@Base+0x1e7c>  // b.none
   40b64:	cmp	w0, #0x35
   40b68:	b.gt	40bdc <__asan_cplus_demangle_mangled_name@@Base+0x1e88>
   40b6c:	cmp	w0, #0x34
   40b70:	b.eq	40bc4 <__asan_cplus_demangle_mangled_name@@Base+0x1e70>  // b.none
   40b74:	cmp	w0, #0x34
   40b78:	b.gt	40bdc <__asan_cplus_demangle_mangled_name@@Base+0x1e88>
   40b7c:	cmp	w0, #0x32
   40b80:	b.eq	40bb8 <__asan_cplus_demangle_mangled_name@@Base+0x1e64>  // b.none
   40b84:	cmp	w0, #0x32
   40b88:	b.gt	40bdc <__asan_cplus_demangle_mangled_name@@Base+0x1e88>
   40b8c:	cmp	w0, #0x30
   40b90:	b.eq	40ba0 <__asan_cplus_demangle_mangled_name@@Base+0x1e4c>  // b.none
   40b94:	cmp	w0, #0x31
   40b98:	b.eq	40bac <__asan_cplus_demangle_mangled_name@@Base+0x1e58>  // b.none
   40b9c:	b	40bdc <__asan_cplus_demangle_mangled_name@@Base+0x1e88>
   40ba0:	mov	w0, #0x1                   	// #1
   40ba4:	str	w0, [sp, #36]
   40ba8:	b	40be4 <__asan_cplus_demangle_mangled_name@@Base+0x1e90>
   40bac:	mov	w0, #0x2                   	// #2
   40bb0:	str	w0, [sp, #36]
   40bb4:	b	40be4 <__asan_cplus_demangle_mangled_name@@Base+0x1e90>
   40bb8:	mov	w0, #0x3                   	// #3
   40bbc:	str	w0, [sp, #36]
   40bc0:	b	40be4 <__asan_cplus_demangle_mangled_name@@Base+0x1e90>
   40bc4:	mov	w0, #0x4                   	// #4
   40bc8:	str	w0, [sp, #36]
   40bcc:	b	40be4 <__asan_cplus_demangle_mangled_name@@Base+0x1e90>
   40bd0:	mov	w0, #0x5                   	// #5
   40bd4:	str	w0, [sp, #36]
   40bd8:	b	40be4 <__asan_cplus_demangle_mangled_name@@Base+0x1e90>
   40bdc:	mov	x0, #0x0                   	// #0
   40be0:	b	40c18 <__asan_cplus_demangle_mangled_name@@Base+0x1ec4>
   40be4:	ldr	x0, [sp, #24]
   40be8:	ldr	x0, [x0, #24]
   40bec:	add	x1, x0, #0x2
   40bf0:	ldr	x0, [sp, #24]
   40bf4:	str	x1, [x0, #24]
   40bf8:	ldr	x0, [sp, #24]
   40bfc:	ldr	x0, [x0, #64]
   40c00:	mov	x2, x0
   40c04:	ldr	w1, [sp, #36]
   40c08:	ldr	x0, [sp, #24]
   40c0c:	bl	3ec14 <__asan_cplus_demangle_fill_dtor@@Base+0x45c>
   40c10:	b	40c18 <__asan_cplus_demangle_mangled_name@@Base+0x1ec4>
   40c14:	mov	x0, #0x0                   	// #0
   40c18:	ldp	x29, x30, [sp], #48
   40c1c:	ret
   40c20:	sub	sp, sp, #0x20
   40c24:	str	x0, [sp, #8]
   40c28:	ldr	x0, [sp, #8]
   40c2c:	ldr	x0, [x0, #24]
   40c30:	ldrb	w0, [x0]
   40c34:	strb	w0, [sp, #31]
   40c38:	ldrb	w0, [sp, #31]
   40c3c:	cmp	w0, #0x72
   40c40:	b.eq	40c5c <__asan_cplus_demangle_mangled_name@@Base+0x1f08>  // b.none
   40c44:	ldrb	w0, [sp, #31]
   40c48:	cmp	w0, #0x56
   40c4c:	b.eq	40c5c <__asan_cplus_demangle_mangled_name@@Base+0x1f08>  // b.none
   40c50:	ldrb	w0, [sp, #31]
   40c54:	cmp	w0, #0x4b
   40c58:	b.ne	40c64 <__asan_cplus_demangle_mangled_name@@Base+0x1f10>  // b.any
   40c5c:	mov	w0, #0x1                   	// #1
   40c60:	b	40cbc <__asan_cplus_demangle_mangled_name@@Base+0x1f68>
   40c64:	ldrb	w0, [sp, #31]
   40c68:	cmp	w0, #0x44
   40c6c:	b.ne	40cb8 <__asan_cplus_demangle_mangled_name@@Base+0x1f64>  // b.any
   40c70:	ldr	x0, [sp, #8]
   40c74:	ldr	x0, [x0, #24]
   40c78:	ldrb	w0, [x0, #1]
   40c7c:	strb	w0, [sp, #31]
   40c80:	ldrb	w0, [sp, #31]
   40c84:	cmp	w0, #0x78
   40c88:	b.eq	40cb0 <__asan_cplus_demangle_mangled_name@@Base+0x1f5c>  // b.none
   40c8c:	ldrb	w0, [sp, #31]
   40c90:	cmp	w0, #0x6f
   40c94:	b.eq	40cb0 <__asan_cplus_demangle_mangled_name@@Base+0x1f5c>  // b.none
   40c98:	ldrb	w0, [sp, #31]
   40c9c:	cmp	w0, #0x4f
   40ca0:	b.eq	40cb0 <__asan_cplus_demangle_mangled_name@@Base+0x1f5c>  // b.none
   40ca4:	ldrb	w0, [sp, #31]
   40ca8:	cmp	w0, #0x77
   40cac:	b.ne	40cb8 <__asan_cplus_demangle_mangled_name@@Base+0x1f64>  // b.any
   40cb0:	mov	w0, #0x1                   	// #1
   40cb4:	b	40cbc <__asan_cplus_demangle_mangled_name@@Base+0x1f68>
   40cb8:	mov	w0, #0x0                   	// #0
   40cbc:	add	sp, sp, #0x20
   40cc0:	ret

0000000000040cc4 <__asan_cplus_demangle_type@@Base>:
   40cc4:	stp	x29, x30, [sp, #-128]!
   40cc8:	mov	x29, sp
   40ccc:	str	x19, [sp, #16]
   40cd0:	str	x0, [sp, #40]
   40cd4:	ldr	x0, [sp, #40]
   40cd8:	bl	40c20 <__asan_cplus_demangle_mangled_name@@Base+0x1ecc>
   40cdc:	cmp	w0, #0x0
   40ce0:	b.eq	40df0 <__asan_cplus_demangle_type@@Base+0x12c>  // b.none
   40ce4:	add	x0, sp, #0x50
   40ce8:	mov	w2, #0x0                   	// #0
   40cec:	mov	x1, x0
   40cf0:	ldr	x0, [sp, #40]
   40cf4:	bl	417cc <__asan_cplus_demangle_type@@Base+0xb08>
   40cf8:	str	x0, [sp, #96]
   40cfc:	ldr	x0, [sp, #96]
   40d00:	cmp	x0, #0x0
   40d04:	b.ne	40d10 <__asan_cplus_demangle_type@@Base+0x4c>  // b.any
   40d08:	mov	x0, #0x0                   	// #0
   40d0c:	b	417c0 <__asan_cplus_demangle_type@@Base+0xafc>
   40d10:	ldr	x0, [sp, #40]
   40d14:	ldr	x0, [x0, #24]
   40d18:	ldrb	w0, [x0]
   40d1c:	cmp	w0, #0x46
   40d20:	b.ne	40d3c <__asan_cplus_demangle_type@@Base+0x78>  // b.any
   40d24:	ldr	x0, [sp, #40]
   40d28:	bl	41c74 <__asan_cplus_demangle_type@@Base+0xfb0>
   40d2c:	mov	x1, x0
   40d30:	ldr	x0, [sp, #96]
   40d34:	str	x1, [x0]
   40d38:	b	40d50 <__asan_cplus_demangle_type@@Base+0x8c>
   40d3c:	ldr	x0, [sp, #40]
   40d40:	bl	40cc4 <__asan_cplus_demangle_type@@Base>
   40d44:	mov	x1, x0
   40d48:	ldr	x0, [sp, #96]
   40d4c:	str	x1, [x0]
   40d50:	ldr	x0, [sp, #96]
   40d54:	ldr	x0, [x0]
   40d58:	cmp	x0, #0x0
   40d5c:	b.ne	40d68 <__asan_cplus_demangle_type@@Base+0xa4>  // b.any
   40d60:	mov	x0, #0x0                   	// #0
   40d64:	b	417c0 <__asan_cplus_demangle_type@@Base+0xafc>
   40d68:	ldr	x0, [sp, #96]
   40d6c:	ldr	x0, [x0]
   40d70:	ldr	w0, [x0]
   40d74:	cmp	w0, #0x20
   40d78:	b.eq	40d90 <__asan_cplus_demangle_type@@Base+0xcc>  // b.none
   40d7c:	ldr	x0, [sp, #96]
   40d80:	ldr	x0, [x0]
   40d84:	ldr	w0, [x0]
   40d88:	cmp	w0, #0x1f
   40d8c:	b.ne	40dc8 <__asan_cplus_demangle_type@@Base+0x104>  // b.any
   40d90:	ldr	x0, [sp, #96]
   40d94:	ldr	x0, [x0]
   40d98:	ldr	x0, [x0, #8]
   40d9c:	str	x0, [sp, #88]
   40da0:	ldr	x0, [sp, #96]
   40da4:	ldr	x0, [x0]
   40da8:	ldr	x1, [sp, #80]
   40dac:	str	x1, [x0, #8]
   40db0:	ldr	x0, [sp, #96]
   40db4:	ldr	x0, [x0]
   40db8:	str	x0, [sp, #80]
   40dbc:	ldr	x0, [sp, #96]
   40dc0:	ldr	x1, [sp, #88]
   40dc4:	str	x1, [x0]
   40dc8:	ldr	x0, [sp, #80]
   40dcc:	mov	x1, x0
   40dd0:	ldr	x0, [sp, #40]
   40dd4:	bl	43aec <__asan_cplus_demangle_type@@Base+0x2e28>
   40dd8:	cmp	w0, #0x0
   40ddc:	b.ne	40de8 <__asan_cplus_demangle_type@@Base+0x124>  // b.any
   40de0:	mov	x0, #0x0                   	// #0
   40de4:	b	417c0 <__asan_cplus_demangle_type@@Base+0xafc>
   40de8:	ldr	x0, [sp, #80]
   40dec:	b	417c0 <__asan_cplus_demangle_type@@Base+0xafc>
   40df0:	mov	w0, #0x1                   	// #1
   40df4:	str	w0, [sp, #124]
   40df8:	ldr	x0, [sp, #40]
   40dfc:	ldr	x0, [x0, #24]
   40e00:	ldrb	w0, [x0]
   40e04:	strb	w0, [sp, #123]
   40e08:	ldrb	w0, [sp, #123]
   40e0c:	sub	w0, w0, #0x30
   40e10:	cmp	w0, #0x4a
   40e14:	b.hi	4177c <__asan_cplus_demangle_type@@Base+0xab8>  // b.pmore
   40e18:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   40e1c:	add	x1, x1, #0x8b8
   40e20:	ldr	w0, [x1, w0, uxtw #2]
   40e24:	adr	x1, 40e30 <__asan_cplus_demangle_type@@Base+0x16c>
   40e28:	add	x0, x1, w0, sxtw #2
   40e2c:	br	x0
   40e30:	ldrb	w0, [sp, #123]
   40e34:	sub	w0, w0, #0x61
   40e38:	sxtw	x0, w0
   40e3c:	lsl	x1, x0, #5
   40e40:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   40e44:	ldr	x0, [x0, #3736]
   40e48:	add	x0, x1, x0
   40e4c:	mov	x1, x0
   40e50:	ldr	x0, [sp, #40]
   40e54:	bl	3ea74 <__asan_cplus_demangle_fill_dtor@@Base+0x2bc>
   40e58:	str	x0, [sp, #80]
   40e5c:	ldr	x0, [sp, #40]
   40e60:	ldr	w1, [x0, #72]
   40e64:	ldr	x0, [sp, #80]
   40e68:	ldr	x0, [x0, #8]
   40e6c:	ldr	w0, [x0, #8]
   40e70:	add	w1, w1, w0
   40e74:	ldr	x0, [sp, #40]
   40e78:	str	w1, [x0, #72]
   40e7c:	str	wzr, [sp, #124]
   40e80:	ldr	x0, [sp, #40]
   40e84:	ldr	x0, [x0, #24]
   40e88:	add	x1, x0, #0x1
   40e8c:	ldr	x0, [sp, #40]
   40e90:	str	x1, [x0, #24]
   40e94:	b	41790 <__asan_cplus_demangle_type@@Base+0xacc>
   40e98:	ldr	x0, [sp, #40]
   40e9c:	ldr	x0, [x0, #24]
   40ea0:	add	x1, x0, #0x1
   40ea4:	ldr	x0, [sp, #40]
   40ea8:	str	x1, [x0, #24]
   40eac:	ldr	x0, [sp, #40]
   40eb0:	bl	3f9b4 <__asan_cplus_demangle_mangled_name@@Base+0xc60>
   40eb4:	mov	x3, #0x0                   	// #0
   40eb8:	mov	x2, x0
   40ebc:	mov	w1, #0x28                  	// #40
   40ec0:	ldr	x0, [sp, #40]
   40ec4:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   40ec8:	str	x0, [sp, #80]
   40ecc:	b	41790 <__asan_cplus_demangle_type@@Base+0xacc>
   40ed0:	ldr	x0, [sp, #40]
   40ed4:	bl	41c74 <__asan_cplus_demangle_type@@Base+0xfb0>
   40ed8:	str	x0, [sp, #80]
   40edc:	b	41790 <__asan_cplus_demangle_type@@Base+0xacc>
   40ee0:	ldr	x0, [sp, #40]
   40ee4:	bl	41fe4 <__asan_cplus_demangle_type@@Base+0x1320>
   40ee8:	str	x0, [sp, #80]
   40eec:	b	41790 <__asan_cplus_demangle_type@@Base+0xacc>
   40ef0:	ldr	x0, [sp, #40]
   40ef4:	bl	42000 <__asan_cplus_demangle_type@@Base+0x133c>
   40ef8:	str	x0, [sp, #80]
   40efc:	b	41790 <__asan_cplus_demangle_type@@Base+0xacc>
   40f00:	ldr	x0, [sp, #40]
   40f04:	bl	4226c <__asan_cplus_demangle_type@@Base+0x15a8>
   40f08:	str	x0, [sp, #80]
   40f0c:	b	41790 <__asan_cplus_demangle_type@@Base+0xacc>
   40f10:	ldr	x0, [sp, #40]
   40f14:	bl	423b4 <__asan_cplus_demangle_type@@Base+0x16f0>
   40f18:	str	x0, [sp, #80]
   40f1c:	ldr	x0, [sp, #40]
   40f20:	ldr	x0, [x0, #24]
   40f24:	ldrb	w0, [x0]
   40f28:	cmp	w0, #0x49
   40f2c:	b.ne	41784 <__asan_cplus_demangle_type@@Base+0xac0>  // b.any
   40f30:	ldr	x0, [sp, #40]
   40f34:	ldr	w0, [x0, #80]
   40f38:	cmp	w0, #0x0
   40f3c:	b.ne	40f88 <__asan_cplus_demangle_type@@Base+0x2c4>  // b.any
   40f40:	ldr	x0, [sp, #80]
   40f44:	mov	x1, x0
   40f48:	ldr	x0, [sp, #40]
   40f4c:	bl	43aec <__asan_cplus_demangle_type@@Base+0x2e28>
   40f50:	cmp	w0, #0x0
   40f54:	b.ne	40f60 <__asan_cplus_demangle_type@@Base+0x29c>  // b.any
   40f58:	mov	x0, #0x0                   	// #0
   40f5c:	b	417c0 <__asan_cplus_demangle_type@@Base+0xafc>
   40f60:	ldr	x19, [sp, #80]
   40f64:	ldr	x0, [sp, #40]
   40f68:	bl	42438 <__asan_cplus_demangle_type@@Base+0x1774>
   40f6c:	mov	x3, x0
   40f70:	mov	x2, x19
   40f74:	mov	w1, #0x4                   	// #4
   40f78:	ldr	x0, [sp, #40]
   40f7c:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   40f80:	str	x0, [sp, #80]
   40f84:	b	41784 <__asan_cplus_demangle_type@@Base+0xac0>
   40f88:	add	x0, sp, #0x38
   40f8c:	mov	x1, x0
   40f90:	ldr	x0, [sp, #40]
   40f94:	bl	43f2c <__asan_cplus_demangle_type@@Base+0x3268>
   40f98:	ldr	x0, [sp, #40]
   40f9c:	bl	42438 <__asan_cplus_demangle_type@@Base+0x1774>
   40fa0:	str	x0, [sp, #112]
   40fa4:	ldr	x0, [sp, #40]
   40fa8:	ldr	x0, [x0, #24]
   40fac:	ldrb	w0, [x0]
   40fb0:	cmp	w0, #0x49
   40fb4:	b.ne	40ff8 <__asan_cplus_demangle_type@@Base+0x334>  // b.any
   40fb8:	ldr	x0, [sp, #80]
   40fbc:	mov	x1, x0
   40fc0:	ldr	x0, [sp, #40]
   40fc4:	bl	43aec <__asan_cplus_demangle_type@@Base+0x2e28>
   40fc8:	cmp	w0, #0x0
   40fcc:	b.ne	40fd8 <__asan_cplus_demangle_type@@Base+0x314>  // b.any
   40fd0:	mov	x0, #0x0                   	// #0
   40fd4:	b	417c0 <__asan_cplus_demangle_type@@Base+0xafc>
   40fd8:	ldr	x0, [sp, #80]
   40fdc:	ldr	x3, [sp, #112]
   40fe0:	mov	x2, x0
   40fe4:	mov	w1, #0x4                   	// #4
   40fe8:	ldr	x0, [sp, #40]
   40fec:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   40ff0:	str	x0, [sp, #80]
   40ff4:	b	41784 <__asan_cplus_demangle_type@@Base+0xac0>
   40ff8:	add	x0, sp, #0x38
   40ffc:	mov	x1, x0
   41000:	ldr	x0, [sp, #40]
   41004:	bl	43f84 <__asan_cplus_demangle_type@@Base+0x32c0>
   41008:	b	41784 <__asan_cplus_demangle_type@@Base+0xac0>
   4100c:	ldr	x0, [sp, #40]
   41010:	ldr	x0, [x0, #24]
   41014:	ldrb	w0, [x0, #1]
   41018:	strb	w0, [sp, #111]
   4101c:	ldrb	w0, [sp, #111]
   41020:	cmp	w0, #0x2f
   41024:	b.ls	41034 <__asan_cplus_demangle_type@@Base+0x370>  // b.plast
   41028:	ldrb	w0, [sp, #111]
   4102c:	cmp	w0, #0x39
   41030:	b.ls	41058 <__asan_cplus_demangle_type@@Base+0x394>  // b.plast
   41034:	ldrb	w0, [sp, #111]
   41038:	cmp	w0, #0x5f
   4103c:	b.eq	41058 <__asan_cplus_demangle_type@@Base+0x394>  // b.none
   41040:	ldrb	w0, [sp, #111]
   41044:	cmp	w0, #0x40
   41048:	b.ls	410ac <__asan_cplus_demangle_type@@Base+0x3e8>  // b.plast
   4104c:	ldrb	w0, [sp, #111]
   41050:	cmp	w0, #0x5a
   41054:	b.hi	410ac <__asan_cplus_demangle_type@@Base+0x3e8>  // b.pmore
   41058:	mov	w1, #0x0                   	// #0
   4105c:	ldr	x0, [sp, #40]
   41060:	bl	43b70 <__asan_cplus_demangle_type@@Base+0x2eac>
   41064:	str	x0, [sp, #80]
   41068:	ldr	x0, [sp, #40]
   4106c:	ldr	x0, [x0, #24]
   41070:	ldrb	w0, [x0]
   41074:	cmp	w0, #0x49
   41078:	b.ne	410a4 <__asan_cplus_demangle_type@@Base+0x3e0>  // b.any
   4107c:	ldr	x19, [sp, #80]
   41080:	ldr	x0, [sp, #40]
   41084:	bl	42438 <__asan_cplus_demangle_type@@Base+0x1774>
   41088:	mov	x3, x0
   4108c:	mov	x2, x19
   41090:	mov	w1, #0x4                   	// #4
   41094:	ldr	x0, [sp, #40]
   41098:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   4109c:	str	x0, [sp, #80]
   410a0:	b	410dc <__asan_cplus_demangle_type@@Base+0x418>
   410a4:	str	wzr, [sp, #124]
   410a8:	b	410dc <__asan_cplus_demangle_type@@Base+0x418>
   410ac:	ldr	x0, [sp, #40]
   410b0:	bl	41fe4 <__asan_cplus_demangle_type@@Base+0x1320>
   410b4:	str	x0, [sp, #80]
   410b8:	ldr	x0, [sp, #80]
   410bc:	cmp	x0, #0x0
   410c0:	b.eq	4178c <__asan_cplus_demangle_type@@Base+0xac8>  // b.none
   410c4:	ldr	x0, [sp, #80]
   410c8:	ldr	w0, [x0]
   410cc:	cmp	w0, #0x18
   410d0:	b.ne	4178c <__asan_cplus_demangle_type@@Base+0xac8>  // b.any
   410d4:	str	wzr, [sp, #124]
   410d8:	b	4178c <__asan_cplus_demangle_type@@Base+0xac8>
   410dc:	b	4178c <__asan_cplus_demangle_type@@Base+0xac8>
   410e0:	ldr	x0, [sp, #40]
   410e4:	ldr	x0, [x0, #24]
   410e8:	add	x1, x0, #0x1
   410ec:	ldr	x0, [sp, #40]
   410f0:	str	x1, [x0, #24]
   410f4:	ldr	x0, [sp, #40]
   410f8:	bl	40cc4 <__asan_cplus_demangle_type@@Base>
   410fc:	mov	x3, #0x0                   	// #0
   41100:	mov	x2, x0
   41104:	mov	w1, #0x24                  	// #36
   41108:	ldr	x0, [sp, #40]
   4110c:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   41110:	str	x0, [sp, #80]
   41114:	b	41790 <__asan_cplus_demangle_type@@Base+0xacc>
   41118:	ldr	x0, [sp, #40]
   4111c:	ldr	x0, [x0, #24]
   41120:	add	x1, x0, #0x1
   41124:	ldr	x0, [sp, #40]
   41128:	str	x1, [x0, #24]
   4112c:	ldr	x0, [sp, #40]
   41130:	bl	40cc4 <__asan_cplus_demangle_type@@Base>
   41134:	mov	x3, #0x0                   	// #0
   41138:	mov	x2, x0
   4113c:	mov	w1, #0x22                  	// #34
   41140:	ldr	x0, [sp, #40]
   41144:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   41148:	str	x0, [sp, #80]
   4114c:	b	41790 <__asan_cplus_demangle_type@@Base+0xacc>
   41150:	ldr	x0, [sp, #40]
   41154:	ldr	x0, [x0, #24]
   41158:	add	x1, x0, #0x1
   4115c:	ldr	x0, [sp, #40]
   41160:	str	x1, [x0, #24]
   41164:	ldr	x0, [sp, #40]
   41168:	bl	40cc4 <__asan_cplus_demangle_type@@Base>
   4116c:	mov	x3, #0x0                   	// #0
   41170:	mov	x2, x0
   41174:	mov	w1, #0x23                  	// #35
   41178:	ldr	x0, [sp, #40]
   4117c:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   41180:	str	x0, [sp, #80]
   41184:	b	41790 <__asan_cplus_demangle_type@@Base+0xacc>
   41188:	ldr	x0, [sp, #40]
   4118c:	ldr	x0, [x0, #24]
   41190:	add	x1, x0, #0x1
   41194:	ldr	x0, [sp, #40]
   41198:	str	x1, [x0, #24]
   4119c:	ldr	x0, [sp, #40]
   411a0:	bl	40cc4 <__asan_cplus_demangle_type@@Base>
   411a4:	mov	x3, #0x0                   	// #0
   411a8:	mov	x2, x0
   411ac:	mov	w1, #0x25                  	// #37
   411b0:	ldr	x0, [sp, #40]
   411b4:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   411b8:	str	x0, [sp, #80]
   411bc:	b	41790 <__asan_cplus_demangle_type@@Base+0xacc>
   411c0:	ldr	x0, [sp, #40]
   411c4:	ldr	x0, [x0, #24]
   411c8:	add	x1, x0, #0x1
   411cc:	ldr	x0, [sp, #40]
   411d0:	str	x1, [x0, #24]
   411d4:	ldr	x0, [sp, #40]
   411d8:	bl	40cc4 <__asan_cplus_demangle_type@@Base>
   411dc:	mov	x3, #0x0                   	// #0
   411e0:	mov	x2, x0
   411e4:	mov	w1, #0x26                  	// #38
   411e8:	ldr	x0, [sp, #40]
   411ec:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   411f0:	str	x0, [sp, #80]
   411f4:	b	41790 <__asan_cplus_demangle_type@@Base+0xacc>
   411f8:	ldr	x0, [sp, #40]
   411fc:	ldr	x0, [x0, #24]
   41200:	add	x1, x0, #0x1
   41204:	ldr	x0, [sp, #40]
   41208:	str	x1, [x0, #24]
   4120c:	ldr	x0, [sp, #40]
   41210:	bl	3f9b4 <__asan_cplus_demangle_mangled_name@@Base+0xc60>
   41214:	str	x0, [sp, #80]
   41218:	ldr	x0, [sp, #40]
   4121c:	ldr	x0, [x0, #24]
   41220:	ldrb	w0, [x0]
   41224:	cmp	w0, #0x49
   41228:	b.ne	41250 <__asan_cplus_demangle_type@@Base+0x58c>  // b.any
   4122c:	ldr	x19, [sp, #80]
   41230:	ldr	x0, [sp, #40]
   41234:	bl	42438 <__asan_cplus_demangle_type@@Base+0x1774>
   41238:	mov	x3, x0
   4123c:	mov	x2, x19
   41240:	mov	w1, #0x4                   	// #4
   41244:	ldr	x0, [sp, #40]
   41248:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   4124c:	str	x0, [sp, #80]
   41250:	ldr	x0, [sp, #40]
   41254:	bl	40cc4 <__asan_cplus_demangle_type@@Base>
   41258:	mov	x1, x0
   4125c:	ldr	x0, [sp, #80]
   41260:	mov	x3, x0
   41264:	mov	x2, x1
   41268:	mov	w1, #0x21                  	// #33
   4126c:	ldr	x0, [sp, #40]
   41270:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   41274:	str	x0, [sp, #80]
   41278:	b	41790 <__asan_cplus_demangle_type@@Base+0xacc>
   4127c:	str	wzr, [sp, #124]
   41280:	ldr	x0, [sp, #40]
   41284:	ldr	x0, [x0, #24]
   41288:	add	x1, x0, #0x1
   4128c:	ldr	x0, [sp, #40]
   41290:	str	x1, [x0, #24]
   41294:	ldr	x0, [sp, #40]
   41298:	ldr	x0, [x0, #24]
   4129c:	ldrb	w0, [x0]
   412a0:	cmp	w0, #0x0
   412a4:	b.eq	412c4 <__asan_cplus_demangle_type@@Base+0x600>  // b.none
   412a8:	ldr	x0, [sp, #40]
   412ac:	ldr	x0, [x0, #24]
   412b0:	add	x2, x0, #0x1
   412b4:	ldr	x1, [sp, #40]
   412b8:	str	x2, [x1, #24]
   412bc:	ldrb	w0, [x0]
   412c0:	b	412c8 <__asan_cplus_demangle_type@@Base+0x604>
   412c4:	mov	w0, #0x0                   	// #0
   412c8:	strb	w0, [sp, #123]
   412cc:	ldrb	w0, [sp, #123]
   412d0:	cmp	w0, #0x76
   412d4:	b.eq	4171c <__asan_cplus_demangle_type@@Base+0xa58>  // b.none
   412d8:	cmp	w0, #0x76
   412dc:	b.gt	41770 <__asan_cplus_demangle_type@@Base+0xaac>
   412e0:	cmp	w0, #0x75
   412e4:	b.eq	41574 <__asan_cplus_demangle_type@@Base+0x8b0>  // b.none
   412e8:	cmp	w0, #0x75
   412ec:	b.gt	41770 <__asan_cplus_demangle_type@@Base+0xaac>
   412f0:	cmp	w0, #0x74
   412f4:	b.eq	413b0 <__asan_cplus_demangle_type@@Base+0x6ec>  // b.none
   412f8:	cmp	w0, #0x74
   412fc:	b.gt	41770 <__asan_cplus_demangle_type@@Base+0xaac>
   41300:	cmp	w0, #0x73
   41304:	b.eq	415b0 <__asan_cplus_demangle_type@@Base+0x8ec>  // b.none
   41308:	cmp	w0, #0x73
   4130c:	b.gt	41770 <__asan_cplus_demangle_type@@Base+0xaac>
   41310:	cmp	w0, #0x70
   41314:	b.eq	41420 <__asan_cplus_demangle_type@@Base+0x75c>  // b.none
   41318:	cmp	w0, #0x70
   4131c:	b.gt	41770 <__asan_cplus_demangle_type@@Base+0xaac>
   41320:	cmp	w0, #0x6e
   41324:	b.eq	41734 <__asan_cplus_demangle_type@@Base+0xa70>  // b.none
   41328:	cmp	w0, #0x6e
   4132c:	b.gt	41770 <__asan_cplus_demangle_type@@Base+0xaac>
   41330:	cmp	w0, #0x69
   41334:	b.eq	415ec <__asan_cplus_demangle_type@@Base+0x928>  // b.none
   41338:	cmp	w0, #0x69
   4133c:	b.gt	41770 <__asan_cplus_demangle_type@@Base+0xaac>
   41340:	cmp	w0, #0x68
   41344:	b.eq	41538 <__asan_cplus_demangle_type@@Base+0x874>  // b.none
   41348:	cmp	w0, #0x68
   4134c:	b.gt	41770 <__asan_cplus_demangle_type@@Base+0xaac>
   41350:	cmp	w0, #0x66
   41354:	b.eq	41484 <__asan_cplus_demangle_type@@Base+0x7c0>  // b.none
   41358:	cmp	w0, #0x66
   4135c:	b.gt	41770 <__asan_cplus_demangle_type@@Base+0xaac>
   41360:	cmp	w0, #0x65
   41364:	b.eq	414fc <__asan_cplus_demangle_type@@Base+0x838>  // b.none
   41368:	cmp	w0, #0x65
   4136c:	b.gt	41770 <__asan_cplus_demangle_type@@Base+0xaac>
   41370:	cmp	w0, #0x64
   41374:	b.eq	414c0 <__asan_cplus_demangle_type@@Base+0x7fc>  // b.none
   41378:	cmp	w0, #0x64
   4137c:	b.gt	41770 <__asan_cplus_demangle_type@@Base+0xaac>
   41380:	cmp	w0, #0x63
   41384:	b.eq	41468 <__asan_cplus_demangle_type@@Base+0x7a4>  // b.none
   41388:	cmp	w0, #0x63
   4138c:	b.gt	41770 <__asan_cplus_demangle_type@@Base+0xaac>
   41390:	cmp	w0, #0x61
   41394:	b.eq	4144c <__asan_cplus_demangle_type@@Base+0x788>  // b.none
   41398:	cmp	w0, #0x61
   4139c:	b.gt	41770 <__asan_cplus_demangle_type@@Base+0xaac>
   413a0:	cmp	w0, #0x46
   413a4:	b.eq	41628 <__asan_cplus_demangle_type@@Base+0x964>  // b.none
   413a8:	cmp	w0, #0x54
   413ac:	b.ne	41770 <__asan_cplus_demangle_type@@Base+0xaac>  // b.any
   413b0:	ldr	x0, [sp, #40]
   413b4:	bl	43178 <__asan_cplus_demangle_type@@Base+0x24b4>
   413b8:	mov	x3, #0x0                   	// #0
   413bc:	mov	x2, x0
   413c0:	mov	w1, #0x43                  	// #67
   413c4:	ldr	x0, [sp, #40]
   413c8:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   413cc:	str	x0, [sp, #80]
   413d0:	ldr	x0, [sp, #80]
   413d4:	cmp	x0, #0x0
   413d8:	b.eq	41414 <__asan_cplus_demangle_type@@Base+0x750>  // b.none
   413dc:	ldr	x0, [sp, #40]
   413e0:	ldr	x0, [x0, #24]
   413e4:	ldrb	w0, [x0]
   413e8:	cmp	w0, #0x0
   413ec:	b.eq	41410 <__asan_cplus_demangle_type@@Base+0x74c>  // b.none
   413f0:	ldr	x0, [sp, #40]
   413f4:	ldr	x0, [x0, #24]
   413f8:	add	x2, x0, #0x1
   413fc:	ldr	x1, [sp, #40]
   41400:	str	x2, [x1, #24]
   41404:	ldrb	w0, [x0]
   41408:	cmp	w0, #0x45
   4140c:	b.eq	41414 <__asan_cplus_demangle_type@@Base+0x750>  // b.none
   41410:	str	xzr, [sp, #80]
   41414:	mov	w0, #0x1                   	// #1
   41418:	str	w0, [sp, #124]
   4141c:	b	41778 <__asan_cplus_demangle_type@@Base+0xab4>
   41420:	ldr	x0, [sp, #40]
   41424:	bl	40cc4 <__asan_cplus_demangle_type@@Base>
   41428:	mov	x3, #0x0                   	// #0
   4142c:	mov	x2, x0
   41430:	mov	w1, #0x4b                  	// #75
   41434:	ldr	x0, [sp, #40]
   41438:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   4143c:	str	x0, [sp, #80]
   41440:	mov	w0, #0x1                   	// #1
   41444:	str	w0, [sp, #124]
   41448:	b	41778 <__asan_cplus_demangle_type@@Base+0xab4>
   4144c:	mov	w2, #0x4                   	// #4
   41450:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   41454:	add	x1, x0, #0x8a0
   41458:	ldr	x0, [sp, #40]
   4145c:	bl	3ea28 <__asan_cplus_demangle_fill_dtor@@Base+0x270>
   41460:	str	x0, [sp, #80]
   41464:	b	41778 <__asan_cplus_demangle_type@@Base+0xab4>
   41468:	mov	w2, #0xe                   	// #14
   4146c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   41470:	add	x1, x0, #0x8a8
   41474:	ldr	x0, [sp, #40]
   41478:	bl	3ea28 <__asan_cplus_demangle_fill_dtor@@Base+0x270>
   4147c:	str	x0, [sp, #80]
   41480:	b	41778 <__asan_cplus_demangle_type@@Base+0xab4>
   41484:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   41488:	ldr	x0, [x0, #3736]
   4148c:	add	x1, x0, #0x340
   41490:	ldr	x0, [sp, #40]
   41494:	bl	3ea74 <__asan_cplus_demangle_fill_dtor@@Base+0x2bc>
   41498:	str	x0, [sp, #80]
   4149c:	ldr	x0, [sp, #40]
   414a0:	ldr	w1, [x0, #72]
   414a4:	ldr	x0, [sp, #80]
   414a8:	ldr	x0, [x0, #8]
   414ac:	ldr	w0, [x0, #8]
   414b0:	add	w1, w1, w0
   414b4:	ldr	x0, [sp, #40]
   414b8:	str	w1, [x0, #72]
   414bc:	b	41778 <__asan_cplus_demangle_type@@Base+0xab4>
   414c0:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   414c4:	ldr	x0, [x0, #3736]
   414c8:	add	x1, x0, #0x360
   414cc:	ldr	x0, [sp, #40]
   414d0:	bl	3ea74 <__asan_cplus_demangle_fill_dtor@@Base+0x2bc>
   414d4:	str	x0, [sp, #80]
   414d8:	ldr	x0, [sp, #40]
   414dc:	ldr	w1, [x0, #72]
   414e0:	ldr	x0, [sp, #80]
   414e4:	ldr	x0, [x0, #8]
   414e8:	ldr	w0, [x0, #8]
   414ec:	add	w1, w1, w0
   414f0:	ldr	x0, [sp, #40]
   414f4:	str	w1, [x0, #72]
   414f8:	b	41778 <__asan_cplus_demangle_type@@Base+0xab4>
   414fc:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   41500:	ldr	x0, [x0, #3736]
   41504:	add	x1, x0, #0x380
   41508:	ldr	x0, [sp, #40]
   4150c:	bl	3ea74 <__asan_cplus_demangle_fill_dtor@@Base+0x2bc>
   41510:	str	x0, [sp, #80]
   41514:	ldr	x0, [sp, #40]
   41518:	ldr	w1, [x0, #72]
   4151c:	ldr	x0, [sp, #80]
   41520:	ldr	x0, [x0, #8]
   41524:	ldr	w0, [x0, #8]
   41528:	add	w1, w1, w0
   4152c:	ldr	x0, [sp, #40]
   41530:	str	w1, [x0, #72]
   41534:	b	41778 <__asan_cplus_demangle_type@@Base+0xab4>
   41538:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   4153c:	ldr	x0, [x0, #3736]
   41540:	add	x1, x0, #0x3a0
   41544:	ldr	x0, [sp, #40]
   41548:	bl	3ea74 <__asan_cplus_demangle_fill_dtor@@Base+0x2bc>
   4154c:	str	x0, [sp, #80]
   41550:	ldr	x0, [sp, #40]
   41554:	ldr	w1, [x0, #72]
   41558:	ldr	x0, [sp, #80]
   4155c:	ldr	x0, [x0, #8]
   41560:	ldr	w0, [x0, #8]
   41564:	add	w1, w1, w0
   41568:	ldr	x0, [sp, #40]
   4156c:	str	w1, [x0, #72]
   41570:	b	41778 <__asan_cplus_demangle_type@@Base+0xab4>
   41574:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   41578:	ldr	x0, [x0, #3736]
   4157c:	add	x1, x0, #0x3c0
   41580:	ldr	x0, [sp, #40]
   41584:	bl	3ea74 <__asan_cplus_demangle_fill_dtor@@Base+0x2bc>
   41588:	str	x0, [sp, #80]
   4158c:	ldr	x0, [sp, #40]
   41590:	ldr	w1, [x0, #72]
   41594:	ldr	x0, [sp, #80]
   41598:	ldr	x0, [x0, #8]
   4159c:	ldr	w0, [x0, #8]
   415a0:	add	w1, w1, w0
   415a4:	ldr	x0, [sp, #40]
   415a8:	str	w1, [x0, #72]
   415ac:	b	41778 <__asan_cplus_demangle_type@@Base+0xab4>
   415b0:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   415b4:	ldr	x0, [x0, #3736]
   415b8:	add	x1, x0, #0x3e0
   415bc:	ldr	x0, [sp, #40]
   415c0:	bl	3ea74 <__asan_cplus_demangle_fill_dtor@@Base+0x2bc>
   415c4:	str	x0, [sp, #80]
   415c8:	ldr	x0, [sp, #40]
   415cc:	ldr	w1, [x0, #72]
   415d0:	ldr	x0, [sp, #80]
   415d4:	ldr	x0, [x0, #8]
   415d8:	ldr	w0, [x0, #8]
   415dc:	add	w1, w1, w0
   415e0:	ldr	x0, [sp, #40]
   415e4:	str	w1, [x0, #72]
   415e8:	b	41778 <__asan_cplus_demangle_type@@Base+0xab4>
   415ec:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   415f0:	ldr	x0, [x0, #3736]
   415f4:	add	x1, x0, #0x400
   415f8:	ldr	x0, [sp, #40]
   415fc:	bl	3ea74 <__asan_cplus_demangle_fill_dtor@@Base+0x2bc>
   41600:	str	x0, [sp, #80]
   41604:	ldr	x0, [sp, #40]
   41608:	ldr	w1, [x0, #72]
   4160c:	ldr	x0, [sp, #80]
   41610:	ldr	x0, [x0, #8]
   41614:	ldr	w0, [x0, #8]
   41618:	add	w1, w1, w0
   4161c:	ldr	x0, [sp, #40]
   41620:	str	w1, [x0, #72]
   41624:	b	41778 <__asan_cplus_demangle_type@@Base+0xab4>
   41628:	ldr	x0, [sp, #40]
   4162c:	bl	3e838 <__asan_cplus_demangle_fill_dtor@@Base+0x80>
   41630:	str	x0, [sp, #80]
   41634:	ldr	x0, [sp, #80]
   41638:	mov	w1, #0x2c                  	// #44
   4163c:	str	w1, [x0]
   41640:	ldr	x0, [sp, #40]
   41644:	ldr	x0, [x0, #24]
   41648:	ldrb	w0, [x0]
   4164c:	cmp	w0, #0x2f
   41650:	b.ls	41670 <__asan_cplus_demangle_type@@Base+0x9ac>  // b.plast
   41654:	ldr	x0, [sp, #40]
   41658:	ldr	x0, [x0, #24]
   4165c:	ldrb	w0, [x0]
   41660:	cmp	w0, #0x39
   41664:	b.hi	41670 <__asan_cplus_demangle_type@@Base+0x9ac>  // b.pmore
   41668:	mov	w1, #0x1                   	// #1
   4166c:	b	41674 <__asan_cplus_demangle_type@@Base+0x9b0>
   41670:	mov	w1, #0x0                   	// #0
   41674:	ldr	x0, [sp, #80]
   41678:	sxth	w1, w1
   4167c:	strh	w1, [x0, #16]
   41680:	ldrsh	w0, [x0, #16]
   41684:	cmp	w0, #0x0
   41688:	b.eq	41694 <__asan_cplus_demangle_type@@Base+0x9d0>  // b.none
   4168c:	ldr	x0, [sp, #40]
   41690:	bl	3fa08 <__asan_cplus_demangle_mangled_name@@Base+0xcb4>
   41694:	ldr	x19, [sp, #80]
   41698:	ldr	x0, [sp, #40]
   4169c:	bl	40cc4 <__asan_cplus_demangle_type@@Base>
   416a0:	str	x0, [x19, #8]
   416a4:	ldr	x0, [sp, #80]
   416a8:	ldr	x0, [x0, #8]
   416ac:	cmp	x0, #0x0
   416b0:	b.ne	416bc <__asan_cplus_demangle_type@@Base+0x9f8>  // b.any
   416b4:	mov	x0, #0x0                   	// #0
   416b8:	b	417c0 <__asan_cplus_demangle_type@@Base+0xafc>
   416bc:	ldr	x0, [sp, #40]
   416c0:	bl	3fa08 <__asan_cplus_demangle_mangled_name@@Base+0xcb4>
   416c4:	ldr	x0, [sp, #40]
   416c8:	ldr	x0, [x0, #24]
   416cc:	ldrb	w0, [x0]
   416d0:	cmp	w0, #0x0
   416d4:	b.eq	416f4 <__asan_cplus_demangle_type@@Base+0xa30>  // b.none
   416d8:	ldr	x0, [sp, #40]
   416dc:	ldr	x0, [x0, #24]
   416e0:	add	x2, x0, #0x1
   416e4:	ldr	x1, [sp, #40]
   416e8:	str	x2, [x1, #24]
   416ec:	ldrb	w0, [x0]
   416f0:	b	416f8 <__asan_cplus_demangle_type@@Base+0xa34>
   416f4:	mov	w0, #0x0                   	// #0
   416f8:	strb	w0, [sp, #123]
   416fc:	ldrb	w0, [sp, #123]
   41700:	cmp	w0, #0x73
   41704:	cset	w0, eq  // eq = none
   41708:	and	w1, w0, #0xff
   4170c:	ldr	x0, [sp, #80]
   41710:	sxth	w1, w1
   41714:	strh	w1, [x0, #18]
   41718:	b	41778 <__asan_cplus_demangle_type@@Base+0xab4>
   4171c:	ldr	x0, [sp, #40]
   41720:	bl	42198 <__asan_cplus_demangle_type@@Base+0x14d4>
   41724:	str	x0, [sp, #80]
   41728:	mov	w0, #0x1                   	// #1
   4172c:	str	w0, [sp, #124]
   41730:	b	41778 <__asan_cplus_demangle_type@@Base+0xab4>
   41734:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   41738:	ldr	x0, [x0, #3736]
   4173c:	add	x1, x0, #0x420
   41740:	ldr	x0, [sp, #40]
   41744:	bl	3ea74 <__asan_cplus_demangle_fill_dtor@@Base+0x2bc>
   41748:	str	x0, [sp, #80]
   4174c:	ldr	x0, [sp, #40]
   41750:	ldr	w1, [x0, #72]
   41754:	ldr	x0, [sp, #80]
   41758:	ldr	x0, [x0, #8]
   4175c:	ldr	w0, [x0, #8]
   41760:	add	w1, w1, w0
   41764:	ldr	x0, [sp, #40]
   41768:	str	w1, [x0, #72]
   4176c:	b	41778 <__asan_cplus_demangle_type@@Base+0xab4>
   41770:	mov	x0, #0x0                   	// #0
   41774:	b	417c0 <__asan_cplus_demangle_type@@Base+0xafc>
   41778:	b	41790 <__asan_cplus_demangle_type@@Base+0xacc>
   4177c:	mov	x0, #0x0                   	// #0
   41780:	b	417c0 <__asan_cplus_demangle_type@@Base+0xafc>
   41784:	nop
   41788:	b	41790 <__asan_cplus_demangle_type@@Base+0xacc>
   4178c:	nop
   41790:	ldr	w0, [sp, #124]
   41794:	cmp	w0, #0x0
   41798:	b.eq	417bc <__asan_cplus_demangle_type@@Base+0xaf8>  // b.none
   4179c:	ldr	x0, [sp, #80]
   417a0:	mov	x1, x0
   417a4:	ldr	x0, [sp, #40]
   417a8:	bl	43aec <__asan_cplus_demangle_type@@Base+0x2e28>
   417ac:	cmp	w0, #0x0
   417b0:	b.ne	417bc <__asan_cplus_demangle_type@@Base+0xaf8>  // b.any
   417b4:	mov	x0, #0x0                   	// #0
   417b8:	b	417c0 <__asan_cplus_demangle_type@@Base+0xafc>
   417bc:	ldr	x0, [sp, #80]
   417c0:	ldr	x19, [sp, #16]
   417c4:	ldp	x29, x30, [sp], #128
   417c8:	ret
   417cc:	stp	x29, x30, [sp, #-80]!
   417d0:	mov	x29, sp
   417d4:	str	x0, [sp, #40]
   417d8:	str	x1, [sp, #32]
   417dc:	str	w2, [sp, #28]
   417e0:	ldr	x0, [sp, #32]
   417e4:	str	x0, [sp, #72]
   417e8:	ldr	x0, [sp, #40]
   417ec:	ldr	x0, [x0, #24]
   417f0:	ldrb	w0, [x0]
   417f4:	strb	w0, [sp, #71]
   417f8:	b	41ae4 <__asan_cplus_demangle_type@@Base+0xe20>
   417fc:	str	xzr, [sp, #56]
   41800:	ldr	x0, [sp, #40]
   41804:	ldr	x0, [x0, #24]
   41808:	add	x1, x0, #0x1
   4180c:	ldr	x0, [sp, #40]
   41810:	str	x1, [x0, #24]
   41814:	ldrb	w0, [sp, #71]
   41818:	cmp	w0, #0x72
   4181c:	b.ne	41858 <__asan_cplus_demangle_type@@Base+0xb94>  // b.any
   41820:	ldr	w0, [sp, #28]
   41824:	cmp	w0, #0x0
   41828:	b.eq	41834 <__asan_cplus_demangle_type@@Base+0xb70>  // b.none
   4182c:	mov	w0, #0x1c                  	// #28
   41830:	b	41838 <__asan_cplus_demangle_type@@Base+0xb74>
   41834:	mov	w0, #0x19                  	// #25
   41838:	str	w0, [sp, #64]
   4183c:	ldr	x0, [sp, #40]
   41840:	ldr	w0, [x0, #72]
   41844:	add	w0, w0, #0x9
   41848:	mov	w1, w0
   4184c:	ldr	x0, [sp, #40]
   41850:	str	w1, [x0, #72]
   41854:	b	41a8c <__asan_cplus_demangle_type@@Base+0xdc8>
   41858:	ldrb	w0, [sp, #71]
   4185c:	cmp	w0, #0x56
   41860:	b.ne	4189c <__asan_cplus_demangle_type@@Base+0xbd8>  // b.any
   41864:	ldr	w0, [sp, #28]
   41868:	cmp	w0, #0x0
   4186c:	b.eq	41878 <__asan_cplus_demangle_type@@Base+0xbb4>  // b.none
   41870:	mov	w0, #0x1d                  	// #29
   41874:	b	4187c <__asan_cplus_demangle_type@@Base+0xbb8>
   41878:	mov	w0, #0x1a                  	// #26
   4187c:	str	w0, [sp, #64]
   41880:	ldr	x0, [sp, #40]
   41884:	ldr	w0, [x0, #72]
   41888:	add	w0, w0, #0x9
   4188c:	mov	w1, w0
   41890:	ldr	x0, [sp, #40]
   41894:	str	w1, [x0, #72]
   41898:	b	41a8c <__asan_cplus_demangle_type@@Base+0xdc8>
   4189c:	ldrb	w0, [sp, #71]
   418a0:	cmp	w0, #0x4b
   418a4:	b.ne	418e0 <__asan_cplus_demangle_type@@Base+0xc1c>  // b.any
   418a8:	ldr	w0, [sp, #28]
   418ac:	cmp	w0, #0x0
   418b0:	b.eq	418bc <__asan_cplus_demangle_type@@Base+0xbf8>  // b.none
   418b4:	mov	w0, #0x1e                  	// #30
   418b8:	b	418c0 <__asan_cplus_demangle_type@@Base+0xbfc>
   418bc:	mov	w0, #0x1b                  	// #27
   418c0:	str	w0, [sp, #64]
   418c4:	ldr	x0, [sp, #40]
   418c8:	ldr	w0, [x0, #72]
   418cc:	add	w0, w0, #0x6
   418d0:	mov	w1, w0
   418d4:	ldr	x0, [sp, #40]
   418d8:	str	w1, [x0, #72]
   418dc:	b	41a8c <__asan_cplus_demangle_type@@Base+0xdc8>
   418e0:	ldr	x0, [sp, #40]
   418e4:	ldr	x0, [x0, #24]
   418e8:	ldrb	w0, [x0]
   418ec:	cmp	w0, #0x0
   418f0:	b.eq	41910 <__asan_cplus_demangle_type@@Base+0xc4c>  // b.none
   418f4:	ldr	x0, [sp, #40]
   418f8:	ldr	x0, [x0, #24]
   418fc:	add	x2, x0, #0x1
   41900:	ldr	x1, [sp, #40]
   41904:	str	x2, [x1, #24]
   41908:	ldrb	w0, [x0]
   4190c:	b	41914 <__asan_cplus_demangle_type@@Base+0xc50>
   41910:	mov	w0, #0x0                   	// #0
   41914:	strb	w0, [sp, #71]
   41918:	ldrb	w0, [sp, #71]
   4191c:	cmp	w0, #0x78
   41920:	b.ne	41948 <__asan_cplus_demangle_type@@Base+0xc84>  // b.any
   41924:	mov	w0, #0x4d                  	// #77
   41928:	str	w0, [sp, #64]
   4192c:	ldr	x0, [sp, #40]
   41930:	ldr	w0, [x0, #72]
   41934:	add	w0, w0, #0x11
   41938:	mov	w1, w0
   4193c:	ldr	x0, [sp, #40]
   41940:	str	w1, [x0, #72]
   41944:	b	41a8c <__asan_cplus_demangle_type@@Base+0xdc8>
   41948:	ldrb	w0, [sp, #71]
   4194c:	cmp	w0, #0x6f
   41950:	b.eq	41960 <__asan_cplus_demangle_type@@Base+0xc9c>  // b.none
   41954:	ldrb	w0, [sp, #71]
   41958:	cmp	w0, #0x4f
   4195c:	b.ne	419f0 <__asan_cplus_demangle_type@@Base+0xd2c>  // b.any
   41960:	mov	w0, #0x4f                  	// #79
   41964:	str	w0, [sp, #64]
   41968:	ldr	x0, [sp, #40]
   4196c:	ldr	w0, [x0, #72]
   41970:	add	w0, w0, #0x9
   41974:	mov	w1, w0
   41978:	ldr	x0, [sp, #40]
   4197c:	str	w1, [x0, #72]
   41980:	ldrb	w0, [sp, #71]
   41984:	cmp	w0, #0x4f
   41988:	b.ne	41a88 <__asan_cplus_demangle_type@@Base+0xdc4>  // b.any
   4198c:	ldr	x0, [sp, #40]
   41990:	bl	43178 <__asan_cplus_demangle_type@@Base+0x24b4>
   41994:	str	x0, [sp, #56]
   41998:	ldr	x0, [sp, #56]
   4199c:	cmp	x0, #0x0
   419a0:	b.ne	419ac <__asan_cplus_demangle_type@@Base+0xce8>  // b.any
   419a4:	mov	x0, #0x0                   	// #0
   419a8:	b	41ba4 <__asan_cplus_demangle_type@@Base+0xee0>
   419ac:	ldr	x0, [sp, #40]
   419b0:	ldr	x0, [x0, #24]
   419b4:	ldrb	w0, [x0]
   419b8:	cmp	w0, #0x45
   419bc:	b.ne	419dc <__asan_cplus_demangle_type@@Base+0xd18>  // b.any
   419c0:	ldr	x0, [sp, #40]
   419c4:	ldr	x0, [x0, #24]
   419c8:	add	x1, x0, #0x1
   419cc:	ldr	x0, [sp, #40]
   419d0:	str	x1, [x0, #24]
   419d4:	mov	w0, #0x0                   	// #0
   419d8:	b	419e0 <__asan_cplus_demangle_type@@Base+0xd1c>
   419dc:	mov	w0, #0x1                   	// #1
   419e0:	cmp	w0, #0x0
   419e4:	b.eq	41a88 <__asan_cplus_demangle_type@@Base+0xdc4>  // b.none
   419e8:	mov	x0, #0x0                   	// #0
   419ec:	b	41ba4 <__asan_cplus_demangle_type@@Base+0xee0>
   419f0:	ldrb	w0, [sp, #71]
   419f4:	cmp	w0, #0x77
   419f8:	b.ne	41a80 <__asan_cplus_demangle_type@@Base+0xdbc>  // b.any
   419fc:	mov	w0, #0x50                  	// #80
   41a00:	str	w0, [sp, #64]
   41a04:	ldr	x0, [sp, #40]
   41a08:	ldr	w0, [x0, #72]
   41a0c:	add	w0, w0, #0x6
   41a10:	mov	w1, w0
   41a14:	ldr	x0, [sp, #40]
   41a18:	str	w1, [x0, #72]
   41a1c:	ldr	x0, [sp, #40]
   41a20:	bl	41dbc <__asan_cplus_demangle_type@@Base+0x10f8>
   41a24:	str	x0, [sp, #56]
   41a28:	ldr	x0, [sp, #56]
   41a2c:	cmp	x0, #0x0
   41a30:	b.ne	41a3c <__asan_cplus_demangle_type@@Base+0xd78>  // b.any
   41a34:	mov	x0, #0x0                   	// #0
   41a38:	b	41ba4 <__asan_cplus_demangle_type@@Base+0xee0>
   41a3c:	ldr	x0, [sp, #40]
   41a40:	ldr	x0, [x0, #24]
   41a44:	ldrb	w0, [x0]
   41a48:	cmp	w0, #0x45
   41a4c:	b.ne	41a6c <__asan_cplus_demangle_type@@Base+0xda8>  // b.any
   41a50:	ldr	x0, [sp, #40]
   41a54:	ldr	x0, [x0, #24]
   41a58:	add	x1, x0, #0x1
   41a5c:	ldr	x0, [sp, #40]
   41a60:	str	x1, [x0, #24]
   41a64:	mov	w0, #0x0                   	// #0
   41a68:	b	41a70 <__asan_cplus_demangle_type@@Base+0xdac>
   41a6c:	mov	w0, #0x1                   	// #1
   41a70:	cmp	w0, #0x0
   41a74:	b.eq	41a8c <__asan_cplus_demangle_type@@Base+0xdc8>  // b.none
   41a78:	mov	x0, #0x0                   	// #0
   41a7c:	b	41ba4 <__asan_cplus_demangle_type@@Base+0xee0>
   41a80:	mov	x0, #0x0                   	// #0
   41a84:	b	41ba4 <__asan_cplus_demangle_type@@Base+0xee0>
   41a88:	nop
   41a8c:	ldr	x3, [sp, #56]
   41a90:	mov	x2, #0x0                   	// #0
   41a94:	ldr	w1, [sp, #64]
   41a98:	ldr	x0, [sp, #40]
   41a9c:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   41aa0:	mov	x1, x0
   41aa4:	ldr	x0, [sp, #32]
   41aa8:	str	x1, [x0]
   41aac:	ldr	x0, [sp, #32]
   41ab0:	ldr	x0, [x0]
   41ab4:	cmp	x0, #0x0
   41ab8:	b.ne	41ac4 <__asan_cplus_demangle_type@@Base+0xe00>  // b.any
   41abc:	mov	x0, #0x0                   	// #0
   41ac0:	b	41ba4 <__asan_cplus_demangle_type@@Base+0xee0>
   41ac4:	ldr	x0, [sp, #32]
   41ac8:	ldr	x0, [x0]
   41acc:	add	x0, x0, #0x8
   41ad0:	str	x0, [sp, #32]
   41ad4:	ldr	x0, [sp, #40]
   41ad8:	ldr	x0, [x0, #24]
   41adc:	ldrb	w0, [x0]
   41ae0:	strb	w0, [sp, #71]
   41ae4:	ldr	x0, [sp, #40]
   41ae8:	bl	40c20 <__asan_cplus_demangle_mangled_name@@Base+0x1ecc>
   41aec:	cmp	w0, #0x0
   41af0:	b.ne	417fc <__asan_cplus_demangle_type@@Base+0xb38>  // b.any
   41af4:	ldr	w0, [sp, #28]
   41af8:	cmp	w0, #0x0
   41afc:	b.ne	41ba0 <__asan_cplus_demangle_type@@Base+0xedc>  // b.any
   41b00:	ldrb	w0, [sp, #71]
   41b04:	cmp	w0, #0x46
   41b08:	b.ne	41ba0 <__asan_cplus_demangle_type@@Base+0xedc>  // b.any
   41b0c:	b	41b90 <__asan_cplus_demangle_type@@Base+0xecc>
   41b10:	ldr	x0, [sp, #72]
   41b14:	ldr	x0, [x0]
   41b18:	ldr	w0, [x0]
   41b1c:	cmp	w0, #0x1b
   41b20:	b.eq	41b68 <__asan_cplus_demangle_type@@Base+0xea4>  // b.none
   41b24:	cmp	w0, #0x1b
   41b28:	b.hi	41b7c <__asan_cplus_demangle_type@@Base+0xeb8>  // b.pmore
   41b2c:	cmp	w0, #0x19
   41b30:	b.eq	41b40 <__asan_cplus_demangle_type@@Base+0xe7c>  // b.none
   41b34:	cmp	w0, #0x1a
   41b38:	b.eq	41b54 <__asan_cplus_demangle_type@@Base+0xe90>  // b.none
   41b3c:	b	41b7c <__asan_cplus_demangle_type@@Base+0xeb8>
   41b40:	ldr	x0, [sp, #72]
   41b44:	ldr	x0, [x0]
   41b48:	mov	w1, #0x1c                  	// #28
   41b4c:	str	w1, [x0]
   41b50:	b	41b80 <__asan_cplus_demangle_type@@Base+0xebc>
   41b54:	ldr	x0, [sp, #72]
   41b58:	ldr	x0, [x0]
   41b5c:	mov	w1, #0x1d                  	// #29
   41b60:	str	w1, [x0]
   41b64:	b	41b80 <__asan_cplus_demangle_type@@Base+0xebc>
   41b68:	ldr	x0, [sp, #72]
   41b6c:	ldr	x0, [x0]
   41b70:	mov	w1, #0x1e                  	// #30
   41b74:	str	w1, [x0]
   41b78:	b	41b80 <__asan_cplus_demangle_type@@Base+0xebc>
   41b7c:	nop
   41b80:	ldr	x0, [sp, #72]
   41b84:	ldr	x0, [x0]
   41b88:	add	x0, x0, #0x8
   41b8c:	str	x0, [sp, #72]
   41b90:	ldr	x1, [sp, #72]
   41b94:	ldr	x0, [sp, #32]
   41b98:	cmp	x1, x0
   41b9c:	b.ne	41b10 <__asan_cplus_demangle_type@@Base+0xe4c>  // b.any
   41ba0:	ldr	x0, [sp, #32]
   41ba4:	ldp	x29, x30, [sp], #80
   41ba8:	ret
   41bac:	stp	x29, x30, [sp, #-48]!
   41bb0:	mov	x29, sp
   41bb4:	str	x0, [sp, #24]
   41bb8:	str	x1, [sp, #16]
   41bbc:	ldr	x0, [sp, #16]
   41bc0:	str	x0, [sp, #40]
   41bc4:	ldr	x0, [sp, #24]
   41bc8:	ldr	x0, [x0, #24]
   41bcc:	ldrb	w0, [x0]
   41bd0:	strb	w0, [sp, #35]
   41bd4:	ldrb	w0, [sp, #35]
   41bd8:	cmp	w0, #0x52
   41bdc:	b.eq	41bec <__asan_cplus_demangle_type@@Base+0xf28>  // b.none
   41be0:	ldrb	w0, [sp, #35]
   41be4:	cmp	w0, #0x4f
   41be8:	b.ne	41c68 <__asan_cplus_demangle_type@@Base+0xfa4>  // b.any
   41bec:	ldrb	w0, [sp, #35]
   41bf0:	cmp	w0, #0x52
   41bf4:	b.ne	41c1c <__asan_cplus_demangle_type@@Base+0xf58>  // b.any
   41bf8:	mov	w0, #0x1f                  	// #31
   41bfc:	str	w0, [sp, #36]
   41c00:	ldr	x0, [sp, #24]
   41c04:	ldr	w0, [x0, #72]
   41c08:	add	w0, w0, #0x2
   41c0c:	mov	w1, w0
   41c10:	ldr	x0, [sp, #24]
   41c14:	str	w1, [x0, #72]
   41c18:	b	41c3c <__asan_cplus_demangle_type@@Base+0xf78>
   41c1c:	mov	w0, #0x20                  	// #32
   41c20:	str	w0, [sp, #36]
   41c24:	ldr	x0, [sp, #24]
   41c28:	ldr	w0, [x0, #72]
   41c2c:	add	w0, w0, #0x3
   41c30:	mov	w1, w0
   41c34:	ldr	x0, [sp, #24]
   41c38:	str	w1, [x0, #72]
   41c3c:	ldr	x0, [sp, #24]
   41c40:	ldr	x0, [x0, #24]
   41c44:	add	x1, x0, #0x1
   41c48:	ldr	x0, [sp, #24]
   41c4c:	str	x1, [x0, #24]
   41c50:	mov	x3, #0x0                   	// #0
   41c54:	ldr	x2, [sp, #40]
   41c58:	ldr	w1, [sp, #36]
   41c5c:	ldr	x0, [sp, #24]
   41c60:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   41c64:	str	x0, [sp, #40]
   41c68:	ldr	x0, [sp, #40]
   41c6c:	ldp	x29, x30, [sp], #48
   41c70:	ret
   41c74:	stp	x29, x30, [sp, #-48]!
   41c78:	mov	x29, sp
   41c7c:	str	x0, [sp, #24]
   41c80:	str	xzr, [sp, #40]
   41c84:	ldr	x0, [sp, #24]
   41c88:	ldr	w0, [x0, #16]
   41c8c:	and	w0, w0, #0x40000
   41c90:	cmp	w0, #0x0
   41c94:	b.ne	41cc4 <__asan_cplus_demangle_type@@Base+0x1000>  // b.any
   41c98:	ldr	x0, [sp, #24]
   41c9c:	ldr	w0, [x0, #84]
   41ca0:	cmp	w0, #0x800
   41ca4:	b.ls	41cb0 <__asan_cplus_demangle_type@@Base+0xfec>  // b.plast
   41ca8:	mov	x0, #0x0                   	// #0
   41cac:	b	41db4 <__asan_cplus_demangle_type@@Base+0x10f0>
   41cb0:	ldr	x0, [sp, #24]
   41cb4:	ldr	w0, [x0, #84]
   41cb8:	add	w1, w0, #0x1
   41cbc:	ldr	x0, [sp, #24]
   41cc0:	str	w1, [x0, #84]
   41cc4:	ldr	x0, [sp, #24]
   41cc8:	ldr	x0, [x0, #24]
   41ccc:	ldrb	w0, [x0]
   41cd0:	cmp	w0, #0x46
   41cd4:	b.ne	41cf4 <__asan_cplus_demangle_type@@Base+0x1030>  // b.any
   41cd8:	ldr	x0, [sp, #24]
   41cdc:	ldr	x0, [x0, #24]
   41ce0:	add	x1, x0, #0x1
   41ce4:	ldr	x0, [sp, #24]
   41ce8:	str	x1, [x0, #24]
   41cec:	mov	w0, #0x1                   	// #1
   41cf0:	b	41cf8 <__asan_cplus_demangle_type@@Base+0x1034>
   41cf4:	mov	w0, #0x0                   	// #0
   41cf8:	cmp	w0, #0x0
   41cfc:	b.eq	41d88 <__asan_cplus_demangle_type@@Base+0x10c4>  // b.none
   41d00:	ldr	x0, [sp, #24]
   41d04:	ldr	x0, [x0, #24]
   41d08:	ldrb	w0, [x0]
   41d0c:	cmp	w0, #0x59
   41d10:	b.ne	41d28 <__asan_cplus_demangle_type@@Base+0x1064>  // b.any
   41d14:	ldr	x0, [sp, #24]
   41d18:	ldr	x0, [x0, #24]
   41d1c:	add	x1, x0, #0x1
   41d20:	ldr	x0, [sp, #24]
   41d24:	str	x1, [x0, #24]
   41d28:	mov	w1, #0x1                   	// #1
   41d2c:	ldr	x0, [sp, #24]
   41d30:	bl	41f30 <__asan_cplus_demangle_type@@Base+0x126c>
   41d34:	str	x0, [sp, #40]
   41d38:	ldr	x1, [sp, #40]
   41d3c:	ldr	x0, [sp, #24]
   41d40:	bl	41bac <__asan_cplus_demangle_type@@Base+0xee8>
   41d44:	str	x0, [sp, #40]
   41d48:	ldr	x0, [sp, #24]
   41d4c:	ldr	x0, [x0, #24]
   41d50:	ldrb	w0, [x0]
   41d54:	cmp	w0, #0x45
   41d58:	b.ne	41d78 <__asan_cplus_demangle_type@@Base+0x10b4>  // b.any
   41d5c:	ldr	x0, [sp, #24]
   41d60:	ldr	x0, [x0, #24]
   41d64:	add	x1, x0, #0x1
   41d68:	ldr	x0, [sp, #24]
   41d6c:	str	x1, [x0, #24]
   41d70:	mov	w0, #0x0                   	// #0
   41d74:	b	41d7c <__asan_cplus_demangle_type@@Base+0x10b8>
   41d78:	mov	w0, #0x1                   	// #1
   41d7c:	cmp	w0, #0x0
   41d80:	b.eq	41d88 <__asan_cplus_demangle_type@@Base+0x10c4>  // b.none
   41d84:	str	xzr, [sp, #40]
   41d88:	ldr	x0, [sp, #24]
   41d8c:	ldr	w0, [x0, #16]
   41d90:	and	w0, w0, #0x40000
   41d94:	cmp	w0, #0x0
   41d98:	b.ne	41db0 <__asan_cplus_demangle_type@@Base+0x10ec>  // b.any
   41d9c:	ldr	x0, [sp, #24]
   41da0:	ldr	w0, [x0, #84]
   41da4:	sub	w1, w0, #0x1
   41da8:	ldr	x0, [sp, #24]
   41dac:	str	w1, [x0, #84]
   41db0:	ldr	x0, [sp, #40]
   41db4:	ldp	x29, x30, [sp], #48
   41db8:	ret
   41dbc:	stp	x29, x30, [sp, #-64]!
   41dc0:	mov	x29, sp
   41dc4:	str	x0, [sp, #24]
   41dc8:	str	xzr, [sp, #32]
   41dcc:	add	x0, sp, #0x20
   41dd0:	str	x0, [sp, #56]
   41dd4:	ldr	x0, [sp, #24]
   41dd8:	ldr	x0, [x0, #24]
   41ddc:	ldrb	w0, [x0]
   41de0:	strb	w0, [sp, #55]
   41de4:	ldrb	w0, [sp, #55]
   41de8:	cmp	w0, #0x0
   41dec:	b.eq	41ea8 <__asan_cplus_demangle_type@@Base+0x11e4>  // b.none
   41df0:	ldrb	w0, [sp, #55]
   41df4:	cmp	w0, #0x45
   41df8:	b.eq	41ea8 <__asan_cplus_demangle_type@@Base+0x11e4>  // b.none
   41dfc:	ldrb	w0, [sp, #55]
   41e00:	cmp	w0, #0x2e
   41e04:	b.eq	41ea8 <__asan_cplus_demangle_type@@Base+0x11e4>  // b.none
   41e08:	ldrb	w0, [sp, #55]
   41e0c:	cmp	w0, #0x52
   41e10:	b.eq	41e20 <__asan_cplus_demangle_type@@Base+0x115c>  // b.none
   41e14:	ldrb	w0, [sp, #55]
   41e18:	cmp	w0, #0x4f
   41e1c:	b.ne	41e38 <__asan_cplus_demangle_type@@Base+0x1174>  // b.any
   41e20:	ldr	x0, [sp, #24]
   41e24:	ldr	x0, [x0, #24]
   41e28:	add	x0, x0, #0x1
   41e2c:	ldrb	w0, [x0]
   41e30:	cmp	w0, #0x45
   41e34:	b.eq	41ea4 <__asan_cplus_demangle_type@@Base+0x11e0>  // b.none
   41e38:	ldr	x0, [sp, #24]
   41e3c:	bl	6990 <__asan_cplus_demangle_type@plt>
   41e40:	str	x0, [sp, #40]
   41e44:	ldr	x0, [sp, #40]
   41e48:	cmp	x0, #0x0
   41e4c:	b.ne	41e58 <__asan_cplus_demangle_type@@Base+0x1194>  // b.any
   41e50:	mov	x0, #0x0                   	// #0
   41e54:	b	41f28 <__asan_cplus_demangle_type@@Base+0x1264>
   41e58:	mov	x3, #0x0                   	// #0
   41e5c:	ldr	x2, [sp, #40]
   41e60:	mov	w1, #0x2e                  	// #46
   41e64:	ldr	x0, [sp, #24]
   41e68:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   41e6c:	mov	x1, x0
   41e70:	ldr	x0, [sp, #56]
   41e74:	str	x1, [x0]
   41e78:	ldr	x0, [sp, #56]
   41e7c:	ldr	x0, [x0]
   41e80:	cmp	x0, #0x0
   41e84:	b.ne	41e90 <__asan_cplus_demangle_type@@Base+0x11cc>  // b.any
   41e88:	mov	x0, #0x0                   	// #0
   41e8c:	b	41f28 <__asan_cplus_demangle_type@@Base+0x1264>
   41e90:	ldr	x0, [sp, #56]
   41e94:	ldr	x0, [x0]
   41e98:	add	x0, x0, #0x10
   41e9c:	str	x0, [sp, #56]
   41ea0:	b	41dd4 <__asan_cplus_demangle_type@@Base+0x1110>
   41ea4:	nop
   41ea8:	ldr	x0, [sp, #32]
   41eac:	cmp	x0, #0x0
   41eb0:	b.ne	41ebc <__asan_cplus_demangle_type@@Base+0x11f8>  // b.any
   41eb4:	mov	x0, #0x0                   	// #0
   41eb8:	b	41f28 <__asan_cplus_demangle_type@@Base+0x1264>
   41ebc:	ldr	x0, [sp, #32]
   41ec0:	ldr	x0, [x0, #16]
   41ec4:	cmp	x0, #0x0
   41ec8:	b.ne	41f24 <__asan_cplus_demangle_type@@Base+0x1260>  // b.any
   41ecc:	ldr	x0, [sp, #32]
   41ed0:	ldr	x0, [x0, #8]
   41ed4:	ldr	w0, [x0]
   41ed8:	cmp	w0, #0x27
   41edc:	b.ne	41f24 <__asan_cplus_demangle_type@@Base+0x1260>  // b.any
   41ee0:	ldr	x0, [sp, #32]
   41ee4:	ldr	x0, [x0, #8]
   41ee8:	ldr	x0, [x0, #8]
   41eec:	ldr	w0, [x0, #28]
   41ef0:	cmp	w0, #0x9
   41ef4:	b.ne	41f24 <__asan_cplus_demangle_type@@Base+0x1260>  // b.any
   41ef8:	ldr	x0, [sp, #24]
   41efc:	ldr	w1, [x0, #72]
   41f00:	ldr	x0, [sp, #32]
   41f04:	ldr	x0, [x0, #8]
   41f08:	ldr	x0, [x0, #8]
   41f0c:	ldr	w0, [x0, #8]
   41f10:	sub	w1, w1, w0
   41f14:	ldr	x0, [sp, #24]
   41f18:	str	w1, [x0, #72]
   41f1c:	ldr	x0, [sp, #32]
   41f20:	str	xzr, [x0, #8]
   41f24:	ldr	x0, [sp, #32]
   41f28:	ldp	x29, x30, [sp], #64
   41f2c:	ret
   41f30:	stp	x29, x30, [sp, #-64]!
   41f34:	mov	x29, sp
   41f38:	str	x0, [sp, #24]
   41f3c:	str	w1, [sp, #20]
   41f40:	ldr	x0, [sp, #24]
   41f44:	ldr	x0, [x0, #24]
   41f48:	ldrb	w0, [x0]
   41f4c:	strb	w0, [sp, #55]
   41f50:	ldrb	w0, [sp, #55]
   41f54:	cmp	w0, #0x4a
   41f58:	b.ne	41f78 <__asan_cplus_demangle_type@@Base+0x12b4>  // b.any
   41f5c:	ldr	x0, [sp, #24]
   41f60:	ldr	x0, [x0, #24]
   41f64:	add	x1, x0, #0x1
   41f68:	ldr	x0, [sp, #24]
   41f6c:	str	x1, [x0, #24]
   41f70:	mov	w0, #0x1                   	// #1
   41f74:	str	w0, [sp, #20]
   41f78:	ldr	w0, [sp, #20]
   41f7c:	cmp	w0, #0x0
   41f80:	b.eq	41fa4 <__asan_cplus_demangle_type@@Base+0x12e0>  // b.none
   41f84:	ldr	x0, [sp, #24]
   41f88:	bl	6990 <__asan_cplus_demangle_type@plt>
   41f8c:	str	x0, [sp, #56]
   41f90:	ldr	x0, [sp, #56]
   41f94:	cmp	x0, #0x0
   41f98:	b.ne	41fa8 <__asan_cplus_demangle_type@@Base+0x12e4>  // b.any
   41f9c:	mov	x0, #0x0                   	// #0
   41fa0:	b	41fdc <__asan_cplus_demangle_type@@Base+0x1318>
   41fa4:	str	xzr, [sp, #56]
   41fa8:	ldr	x0, [sp, #24]
   41fac:	bl	41dbc <__asan_cplus_demangle_type@@Base+0x10f8>
   41fb0:	str	x0, [sp, #40]
   41fb4:	ldr	x0, [sp, #40]
   41fb8:	cmp	x0, #0x0
   41fbc:	b.ne	41fc8 <__asan_cplus_demangle_type@@Base+0x1304>  // b.any
   41fc0:	mov	x0, #0x0                   	// #0
   41fc4:	b	41fdc <__asan_cplus_demangle_type@@Base+0x1318>
   41fc8:	ldr	x3, [sp, #40]
   41fcc:	ldr	x2, [sp, #56]
   41fd0:	mov	w1, #0x29                  	// #41
   41fd4:	ldr	x0, [sp, #24]
   41fd8:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   41fdc:	ldp	x29, x30, [sp], #64
   41fe0:	ret
   41fe4:	stp	x29, x30, [sp, #-32]!
   41fe8:	mov	x29, sp
   41fec:	str	x0, [sp, #24]
   41ff0:	ldr	x0, [sp, #24]
   41ff4:	bl	3f230 <__asan_cplus_demangle_mangled_name@@Base+0x4dc>
   41ff8:	ldp	x29, x30, [sp], #32
   41ffc:	ret
   42000:	stp	x29, x30, [sp, #-64]!
   42004:	mov	x29, sp
   42008:	str	x0, [sp, #24]
   4200c:	ldr	x0, [sp, #24]
   42010:	ldr	x0, [x0, #24]
   42014:	ldrb	w0, [x0]
   42018:	cmp	w0, #0x41
   4201c:	b.ne	4203c <__asan_cplus_demangle_type@@Base+0x1378>  // b.any
   42020:	ldr	x0, [sp, #24]
   42024:	ldr	x0, [x0, #24]
   42028:	add	x1, x0, #0x1
   4202c:	ldr	x0, [sp, #24]
   42030:	str	x1, [x0, #24]
   42034:	mov	w0, #0x0                   	// #0
   42038:	b	42040 <__asan_cplus_demangle_type@@Base+0x137c>
   4203c:	mov	w0, #0x1                   	// #1
   42040:	cmp	w0, #0x0
   42044:	b.eq	42050 <__asan_cplus_demangle_type@@Base+0x138c>  // b.none
   42048:	mov	x0, #0x0                   	// #0
   4204c:	b	42190 <__asan_cplus_demangle_type@@Base+0x14cc>
   42050:	ldr	x0, [sp, #24]
   42054:	ldr	x0, [x0, #24]
   42058:	ldrb	w0, [x0]
   4205c:	strb	w0, [sp, #55]
   42060:	ldrb	w0, [sp, #55]
   42064:	cmp	w0, #0x5f
   42068:	b.ne	42074 <__asan_cplus_demangle_type@@Base+0x13b0>  // b.any
   4206c:	str	xzr, [sp, #56]
   42070:	b	42130 <__asan_cplus_demangle_type@@Base+0x146c>
   42074:	ldrb	w0, [sp, #55]
   42078:	cmp	w0, #0x2f
   4207c:	b.ls	4210c <__asan_cplus_demangle_type@@Base+0x1448>  // b.plast
   42080:	ldrb	w0, [sp, #55]
   42084:	cmp	w0, #0x39
   42088:	b.hi	4210c <__asan_cplus_demangle_type@@Base+0x1448>  // b.pmore
   4208c:	ldr	x0, [sp, #24]
   42090:	ldr	x0, [x0, #24]
   42094:	str	x0, [sp, #40]
   42098:	ldr	x0, [sp, #24]
   4209c:	ldr	x0, [x0, #24]
   420a0:	add	x1, x0, #0x1
   420a4:	ldr	x0, [sp, #24]
   420a8:	str	x1, [x0, #24]
   420ac:	ldr	x0, [sp, #24]
   420b0:	ldr	x0, [x0, #24]
   420b4:	ldrb	w0, [x0]
   420b8:	strb	w0, [sp, #55]
   420bc:	ldrb	w0, [sp, #55]
   420c0:	cmp	w0, #0x2f
   420c4:	b.ls	420d4 <__asan_cplus_demangle_type@@Base+0x1410>  // b.plast
   420c8:	ldrb	w0, [sp, #55]
   420cc:	cmp	w0, #0x39
   420d0:	b.ls	42098 <__asan_cplus_demangle_type@@Base+0x13d4>  // b.plast
   420d4:	ldr	x0, [sp, #24]
   420d8:	ldr	x1, [x0, #24]
   420dc:	ldr	x0, [sp, #40]
   420e0:	sub	x0, x1, x0
   420e4:	mov	w2, w0
   420e8:	ldr	x1, [sp, #40]
   420ec:	ldr	x0, [sp, #24]
   420f0:	bl	3ea28 <__asan_cplus_demangle_fill_dtor@@Base+0x270>
   420f4:	str	x0, [sp, #56]
   420f8:	ldr	x0, [sp, #56]
   420fc:	cmp	x0, #0x0
   42100:	b.ne	4212c <__asan_cplus_demangle_type@@Base+0x1468>  // b.any
   42104:	mov	x0, #0x0                   	// #0
   42108:	b	42190 <__asan_cplus_demangle_type@@Base+0x14cc>
   4210c:	ldr	x0, [sp, #24]
   42110:	bl	43178 <__asan_cplus_demangle_type@@Base+0x24b4>
   42114:	str	x0, [sp, #56]
   42118:	ldr	x0, [sp, #56]
   4211c:	cmp	x0, #0x0
   42120:	b.ne	42130 <__asan_cplus_demangle_type@@Base+0x146c>  // b.any
   42124:	mov	x0, #0x0                   	// #0
   42128:	b	42190 <__asan_cplus_demangle_type@@Base+0x14cc>
   4212c:	nop
   42130:	ldr	x0, [sp, #24]
   42134:	ldr	x0, [x0, #24]
   42138:	ldrb	w0, [x0]
   4213c:	cmp	w0, #0x5f
   42140:	b.ne	42160 <__asan_cplus_demangle_type@@Base+0x149c>  // b.any
   42144:	ldr	x0, [sp, #24]
   42148:	ldr	x0, [x0, #24]
   4214c:	add	x1, x0, #0x1
   42150:	ldr	x0, [sp, #24]
   42154:	str	x1, [x0, #24]
   42158:	mov	w0, #0x0                   	// #0
   4215c:	b	42164 <__asan_cplus_demangle_type@@Base+0x14a0>
   42160:	mov	w0, #0x1                   	// #1
   42164:	cmp	w0, #0x0
   42168:	b.eq	42174 <__asan_cplus_demangle_type@@Base+0x14b0>  // b.none
   4216c:	mov	x0, #0x0                   	// #0
   42170:	b	42190 <__asan_cplus_demangle_type@@Base+0x14cc>
   42174:	ldr	x0, [sp, #24]
   42178:	bl	6990 <__asan_cplus_demangle_type@plt>
   4217c:	mov	x3, x0
   42180:	ldr	x2, [sp, #56]
   42184:	mov	w1, #0x2a                  	// #42
   42188:	ldr	x0, [sp, #24]
   4218c:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   42190:	ldp	x29, x30, [sp], #64
   42194:	ret
   42198:	stp	x29, x30, [sp, #-48]!
   4219c:	mov	x29, sp
   421a0:	str	x0, [sp, #24]
   421a4:	ldr	x0, [sp, #24]
   421a8:	ldr	x0, [x0, #24]
   421ac:	ldrb	w0, [x0]
   421b0:	strb	w0, [sp, #39]
   421b4:	ldrb	w0, [sp, #39]
   421b8:	cmp	w0, #0x5f
   421bc:	b.ne	421e4 <__asan_cplus_demangle_type@@Base+0x1520>  // b.any
   421c0:	ldr	x0, [sp, #24]
   421c4:	ldr	x0, [x0, #24]
   421c8:	add	x1, x0, #0x1
   421cc:	ldr	x0, [sp, #24]
   421d0:	str	x1, [x0, #24]
   421d4:	ldr	x0, [sp, #24]
   421d8:	bl	43178 <__asan_cplus_demangle_type@@Base+0x24b4>
   421dc:	str	x0, [sp, #40]
   421e0:	b	421f0 <__asan_cplus_demangle_type@@Base+0x152c>
   421e4:	ldr	x0, [sp, #24]
   421e8:	bl	3fb30 <__asan_cplus_demangle_mangled_name@@Base+0xddc>
   421ec:	str	x0, [sp, #40]
   421f0:	ldr	x0, [sp, #40]
   421f4:	cmp	x0, #0x0
   421f8:	b.ne	42204 <__asan_cplus_demangle_type@@Base+0x1540>  // b.any
   421fc:	mov	x0, #0x0                   	// #0
   42200:	b	42264 <__asan_cplus_demangle_type@@Base+0x15a0>
   42204:	ldr	x0, [sp, #24]
   42208:	ldr	x0, [x0, #24]
   4220c:	ldrb	w0, [x0]
   42210:	cmp	w0, #0x5f
   42214:	b.ne	42234 <__asan_cplus_demangle_type@@Base+0x1570>  // b.any
   42218:	ldr	x0, [sp, #24]
   4221c:	ldr	x0, [x0, #24]
   42220:	add	x1, x0, #0x1
   42224:	ldr	x0, [sp, #24]
   42228:	str	x1, [x0, #24]
   4222c:	mov	w0, #0x0                   	// #0
   42230:	b	42238 <__asan_cplus_demangle_type@@Base+0x1574>
   42234:	mov	w0, #0x1                   	// #1
   42238:	cmp	w0, #0x0
   4223c:	b.eq	42248 <__asan_cplus_demangle_type@@Base+0x1584>  // b.none
   42240:	mov	x0, #0x0                   	// #0
   42244:	b	42264 <__asan_cplus_demangle_type@@Base+0x15a0>
   42248:	ldr	x0, [sp, #24]
   4224c:	bl	6990 <__asan_cplus_demangle_type@plt>
   42250:	mov	x3, x0
   42254:	ldr	x2, [sp, #40]
   42258:	mov	w1, #0x2d                  	// #45
   4225c:	ldr	x0, [sp, #24]
   42260:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   42264:	ldp	x29, x30, [sp], #48
   42268:	ret
   4226c:	stp	x29, x30, [sp, #-48]!
   42270:	mov	x29, sp
   42274:	str	x0, [sp, #24]
   42278:	ldr	x0, [sp, #24]
   4227c:	ldr	x0, [x0, #24]
   42280:	ldrb	w0, [x0]
   42284:	cmp	w0, #0x4d
   42288:	b.ne	422a8 <__asan_cplus_demangle_type@@Base+0x15e4>  // b.any
   4228c:	ldr	x0, [sp, #24]
   42290:	ldr	x0, [x0, #24]
   42294:	add	x1, x0, #0x1
   42298:	ldr	x0, [sp, #24]
   4229c:	str	x1, [x0, #24]
   422a0:	mov	w0, #0x0                   	// #0
   422a4:	b	422ac <__asan_cplus_demangle_type@@Base+0x15e8>
   422a8:	mov	w0, #0x1                   	// #1
   422ac:	cmp	w0, #0x0
   422b0:	b.eq	422bc <__asan_cplus_demangle_type@@Base+0x15f8>  // b.none
   422b4:	mov	x0, #0x0                   	// #0
   422b8:	b	42310 <__asan_cplus_demangle_type@@Base+0x164c>
   422bc:	ldr	x0, [sp, #24]
   422c0:	bl	6990 <__asan_cplus_demangle_type@plt>
   422c4:	str	x0, [sp, #40]
   422c8:	ldr	x0, [sp, #40]
   422cc:	cmp	x0, #0x0
   422d0:	b.ne	422dc <__asan_cplus_demangle_type@@Base+0x1618>  // b.any
   422d4:	mov	x0, #0x0                   	// #0
   422d8:	b	42310 <__asan_cplus_demangle_type@@Base+0x164c>
   422dc:	ldr	x0, [sp, #24]
   422e0:	bl	6990 <__asan_cplus_demangle_type@plt>
   422e4:	str	x0, [sp, #32]
   422e8:	ldr	x0, [sp, #32]
   422ec:	cmp	x0, #0x0
   422f0:	b.ne	422fc <__asan_cplus_demangle_type@@Base+0x1638>  // b.any
   422f4:	mov	x0, #0x0                   	// #0
   422f8:	b	42310 <__asan_cplus_demangle_type@@Base+0x164c>
   422fc:	ldr	x3, [sp, #32]
   42300:	ldr	x2, [sp, #40]
   42304:	mov	w1, #0x2b                  	// #43
   42308:	ldr	x0, [sp, #24]
   4230c:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   42310:	ldp	x29, x30, [sp], #48
   42314:	ret
   42318:	stp	x29, x30, [sp, #-48]!
   4231c:	mov	x29, sp
   42320:	str	x0, [sp, #24]
   42324:	ldr	x0, [sp, #24]
   42328:	ldr	x0, [x0, #24]
   4232c:	ldrb	w0, [x0]
   42330:	cmp	w0, #0x5f
   42334:	b.ne	42340 <__asan_cplus_demangle_type@@Base+0x167c>  // b.any
   42338:	str	wzr, [sp, #44]
   4233c:	b	4236c <__asan_cplus_demangle_type@@Base+0x16a8>
   42340:	ldr	x0, [sp, #24]
   42344:	ldr	x0, [x0, #24]
   42348:	ldrb	w0, [x0]
   4234c:	cmp	w0, #0x6e
   42350:	b.ne	4235c <__asan_cplus_demangle_type@@Base+0x1698>  // b.any
   42354:	mov	w0, #0xffffffff            	// #-1
   42358:	b	423ac <__asan_cplus_demangle_type@@Base+0x16e8>
   4235c:	ldr	x0, [sp, #24]
   42360:	bl	3fa08 <__asan_cplus_demangle_mangled_name@@Base+0xcb4>
   42364:	add	w0, w0, #0x1
   42368:	str	w0, [sp, #44]
   4236c:	ldr	w0, [sp, #44]
   42370:	cmp	w0, #0x0
   42374:	b.lt	423a8 <__asan_cplus_demangle_type@@Base+0x16e4>  // b.tstop
   42378:	ldr	x0, [sp, #24]
   4237c:	ldr	x0, [x0, #24]
   42380:	ldrb	w0, [x0]
   42384:	cmp	w0, #0x5f
   42388:	b.ne	423a8 <__asan_cplus_demangle_type@@Base+0x16e4>  // b.any
   4238c:	ldr	x0, [sp, #24]
   42390:	ldr	x0, [x0, #24]
   42394:	add	x1, x0, #0x1
   42398:	ldr	x0, [sp, #24]
   4239c:	str	x1, [x0, #24]
   423a0:	ldr	w0, [sp, #44]
   423a4:	b	423ac <__asan_cplus_demangle_type@@Base+0x16e8>
   423a8:	mov	w0, #0xffffffff            	// #-1
   423ac:	ldp	x29, x30, [sp], #48
   423b0:	ret
   423b4:	stp	x29, x30, [sp, #-48]!
   423b8:	mov	x29, sp
   423bc:	str	x0, [sp, #24]
   423c0:	ldr	x0, [sp, #24]
   423c4:	ldr	x0, [x0, #24]
   423c8:	ldrb	w0, [x0]
   423cc:	cmp	w0, #0x54
   423d0:	b.ne	423f0 <__asan_cplus_demangle_type@@Base+0x172c>  // b.any
   423d4:	ldr	x0, [sp, #24]
   423d8:	ldr	x0, [x0, #24]
   423dc:	add	x1, x0, #0x1
   423e0:	ldr	x0, [sp, #24]
   423e4:	str	x1, [x0, #24]
   423e8:	mov	w0, #0x0                   	// #0
   423ec:	b	423f4 <__asan_cplus_demangle_type@@Base+0x1730>
   423f0:	mov	w0, #0x1                   	// #1
   423f4:	cmp	w0, #0x0
   423f8:	b.eq	42404 <__asan_cplus_demangle_type@@Base+0x1740>  // b.none
   423fc:	mov	x0, #0x0                   	// #0
   42400:	b	42430 <__asan_cplus_demangle_type@@Base+0x176c>
   42404:	ldr	x0, [sp, #24]
   42408:	bl	42318 <__asan_cplus_demangle_type@@Base+0x1654>
   4240c:	str	w0, [sp, #44]
   42410:	ldr	w0, [sp, #44]
   42414:	cmp	w0, #0x0
   42418:	b.ge	42424 <__asan_cplus_demangle_type@@Base+0x1760>  // b.tcont
   4241c:	mov	x0, #0x0                   	// #0
   42420:	b	42430 <__asan_cplus_demangle_type@@Base+0x176c>
   42424:	ldr	w1, [sp, #44]
   42428:	ldr	x0, [sp, #24]
   4242c:	bl	3ec60 <__asan_cplus_demangle_fill_dtor@@Base+0x4a8>
   42430:	ldp	x29, x30, [sp], #48
   42434:	ret
   42438:	stp	x29, x30, [sp, #-32]!
   4243c:	mov	x29, sp
   42440:	str	x0, [sp, #24]
   42444:	ldr	x0, [sp, #24]
   42448:	ldr	x0, [x0, #24]
   4244c:	ldrb	w0, [x0]
   42450:	cmp	w0, #0x49
   42454:	b.eq	42474 <__asan_cplus_demangle_type@@Base+0x17b0>  // b.none
   42458:	ldr	x0, [sp, #24]
   4245c:	ldr	x0, [x0, #24]
   42460:	ldrb	w0, [x0]
   42464:	cmp	w0, #0x4a
   42468:	b.eq	42474 <__asan_cplus_demangle_type@@Base+0x17b0>  // b.none
   4246c:	mov	x0, #0x0                   	// #0
   42470:	b	42490 <__asan_cplus_demangle_type@@Base+0x17cc>
   42474:	ldr	x0, [sp, #24]
   42478:	ldr	x0, [x0, #24]
   4247c:	add	x1, x0, #0x1
   42480:	ldr	x0, [sp, #24]
   42484:	str	x1, [x0, #24]
   42488:	ldr	x0, [sp, #24]
   4248c:	bl	42498 <__asan_cplus_demangle_type@@Base+0x17d4>
   42490:	ldp	x29, x30, [sp], #32
   42494:	ret
   42498:	stp	x29, x30, [sp, #-64]!
   4249c:	mov	x29, sp
   424a0:	str	x0, [sp, #24]
   424a4:	ldr	x0, [sp, #24]
   424a8:	ldr	x0, [x0, #64]
   424ac:	str	x0, [sp, #48]
   424b0:	ldr	x0, [sp, #24]
   424b4:	ldr	x0, [x0, #24]
   424b8:	ldrb	w0, [x0]
   424bc:	cmp	w0, #0x45
   424c0:	b.ne	424f0 <__asan_cplus_demangle_type@@Base+0x182c>  // b.any
   424c4:	ldr	x0, [sp, #24]
   424c8:	ldr	x0, [x0, #24]
   424cc:	add	x1, x0, #0x1
   424d0:	ldr	x0, [sp, #24]
   424d4:	str	x1, [x0, #24]
   424d8:	mov	x3, #0x0                   	// #0
   424dc:	mov	x2, #0x0                   	// #0
   424e0:	mov	w1, #0x2f                  	// #47
   424e4:	ldr	x0, [sp, #24]
   424e8:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   424ec:	b	425a0 <__asan_cplus_demangle_type@@Base+0x18dc>
   424f0:	str	xzr, [sp, #32]
   424f4:	add	x0, sp, #0x20
   424f8:	str	x0, [sp, #56]
   424fc:	ldr	x0, [sp, #24]
   42500:	bl	425a8 <__asan_cplus_demangle_type@@Base+0x18e4>
   42504:	str	x0, [sp, #40]
   42508:	ldr	x0, [sp, #40]
   4250c:	cmp	x0, #0x0
   42510:	b.ne	4251c <__asan_cplus_demangle_type@@Base+0x1858>  // b.any
   42514:	mov	x0, #0x0                   	// #0
   42518:	b	425a0 <__asan_cplus_demangle_type@@Base+0x18dc>
   4251c:	mov	x3, #0x0                   	// #0
   42520:	ldr	x2, [sp, #40]
   42524:	mov	w1, #0x2f                  	// #47
   42528:	ldr	x0, [sp, #24]
   4252c:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   42530:	mov	x1, x0
   42534:	ldr	x0, [sp, #56]
   42538:	str	x1, [x0]
   4253c:	ldr	x0, [sp, #56]
   42540:	ldr	x0, [x0]
   42544:	cmp	x0, #0x0
   42548:	b.ne	42554 <__asan_cplus_demangle_type@@Base+0x1890>  // b.any
   4254c:	mov	x0, #0x0                   	// #0
   42550:	b	425a0 <__asan_cplus_demangle_type@@Base+0x18dc>
   42554:	ldr	x0, [sp, #56]
   42558:	ldr	x0, [x0]
   4255c:	add	x0, x0, #0x10
   42560:	str	x0, [sp, #56]
   42564:	ldr	x0, [sp, #24]
   42568:	ldr	x0, [x0, #24]
   4256c:	ldrb	w0, [x0]
   42570:	cmp	w0, #0x45
   42574:	b.ne	424fc <__asan_cplus_demangle_type@@Base+0x1838>  // b.any
   42578:	ldr	x0, [sp, #24]
   4257c:	ldr	x0, [x0, #24]
   42580:	add	x1, x0, #0x1
   42584:	ldr	x0, [sp, #24]
   42588:	str	x1, [x0, #24]
   4258c:	nop
   42590:	ldr	x0, [sp, #24]
   42594:	ldr	x1, [sp, #48]
   42598:	str	x1, [x0, #64]
   4259c:	ldr	x0, [sp, #32]
   425a0:	ldp	x29, x30, [sp], #64
   425a4:	ret
   425a8:	stp	x29, x30, [sp, #-48]!
   425ac:	mov	x29, sp
   425b0:	str	x0, [sp, #24]
   425b4:	ldr	x0, [sp, #24]
   425b8:	ldr	x0, [x0, #24]
   425bc:	ldrb	w0, [x0]
   425c0:	cmp	w0, #0x58
   425c4:	b.eq	425f0 <__asan_cplus_demangle_type@@Base+0x192c>  // b.none
   425c8:	cmp	w0, #0x58
   425cc:	b.gt	42674 <__asan_cplus_demangle_type@@Base+0x19b0>
   425d0:	cmp	w0, #0x4a
   425d4:	b.gt	425e4 <__asan_cplus_demangle_type@@Base+0x1920>
   425d8:	cmp	w0, #0x49
   425dc:	b.ge	42668 <__asan_cplus_demangle_type@@Base+0x19a4>  // b.tcont
   425e0:	b	42674 <__asan_cplus_demangle_type@@Base+0x19b0>
   425e4:	cmp	w0, #0x4c
   425e8:	b.eq	4265c <__asan_cplus_demangle_type@@Base+0x1998>  // b.none
   425ec:	b	42674 <__asan_cplus_demangle_type@@Base+0x19b0>
   425f0:	ldr	x0, [sp, #24]
   425f4:	ldr	x0, [x0, #24]
   425f8:	add	x1, x0, #0x1
   425fc:	ldr	x0, [sp, #24]
   42600:	str	x1, [x0, #24]
   42604:	ldr	x0, [sp, #24]
   42608:	bl	43178 <__asan_cplus_demangle_type@@Base+0x24b4>
   4260c:	str	x0, [sp, #40]
   42610:	ldr	x0, [sp, #24]
   42614:	ldr	x0, [x0, #24]
   42618:	ldrb	w0, [x0]
   4261c:	cmp	w0, #0x45
   42620:	b.ne	42640 <__asan_cplus_demangle_type@@Base+0x197c>  // b.any
   42624:	ldr	x0, [sp, #24]
   42628:	ldr	x0, [x0, #24]
   4262c:	add	x1, x0, #0x1
   42630:	ldr	x0, [sp, #24]
   42634:	str	x1, [x0, #24]
   42638:	mov	w0, #0x0                   	// #0
   4263c:	b	42644 <__asan_cplus_demangle_type@@Base+0x1980>
   42640:	mov	w0, #0x1                   	// #1
   42644:	cmp	w0, #0x0
   42648:	b.eq	42654 <__asan_cplus_demangle_type@@Base+0x1990>  // b.none
   4264c:	mov	x0, #0x0                   	// #0
   42650:	b	4267c <__asan_cplus_demangle_type@@Base+0x19b8>
   42654:	ldr	x0, [sp, #40]
   42658:	b	4267c <__asan_cplus_demangle_type@@Base+0x19b8>
   4265c:	ldr	x0, [sp, #24]
   42660:	bl	431c0 <__asan_cplus_demangle_type@@Base+0x24fc>
   42664:	b	4267c <__asan_cplus_demangle_type@@Base+0x19b8>
   42668:	ldr	x0, [sp, #24]
   4266c:	bl	42438 <__asan_cplus_demangle_type@@Base+0x1774>
   42670:	b	4267c <__asan_cplus_demangle_type@@Base+0x19b8>
   42674:	ldr	x0, [sp, #24]
   42678:	bl	6990 <__asan_cplus_demangle_type@plt>
   4267c:	ldp	x29, x30, [sp], #48
   42680:	ret
   42684:	stp	x29, x30, [sp, #-64]!
   42688:	mov	x29, sp
   4268c:	str	x0, [sp, #24]
   42690:	strb	w1, [sp, #23]
   42694:	str	xzr, [sp, #40]
   42698:	add	x0, sp, #0x28
   4269c:	str	x0, [sp, #56]
   426a0:	ldr	x0, [sp, #24]
   426a4:	ldr	x0, [x0, #24]
   426a8:	ldrb	w0, [x0]
   426ac:	ldrb	w1, [sp, #23]
   426b0:	cmp	w1, w0
   426b4:	b.ne	426e4 <__asan_cplus_demangle_type@@Base+0x1a20>  // b.any
   426b8:	ldr	x0, [sp, #24]
   426bc:	ldr	x0, [x0, #24]
   426c0:	add	x1, x0, #0x1
   426c4:	ldr	x0, [sp, #24]
   426c8:	str	x1, [x0, #24]
   426cc:	mov	x3, #0x0                   	// #0
   426d0:	mov	x2, #0x0                   	// #0
   426d4:	mov	w1, #0x2e                  	// #46
   426d8:	ldr	x0, [sp, #24]
   426dc:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   426e0:	b	42780 <__asan_cplus_demangle_type@@Base+0x1abc>
   426e4:	ldr	x0, [sp, #24]
   426e8:	bl	43178 <__asan_cplus_demangle_type@@Base+0x24b4>
   426ec:	str	x0, [sp, #48]
   426f0:	ldr	x0, [sp, #48]
   426f4:	cmp	x0, #0x0
   426f8:	b.ne	42704 <__asan_cplus_demangle_type@@Base+0x1a40>  // b.any
   426fc:	mov	x0, #0x0                   	// #0
   42700:	b	42780 <__asan_cplus_demangle_type@@Base+0x1abc>
   42704:	mov	x3, #0x0                   	// #0
   42708:	ldr	x2, [sp, #48]
   4270c:	mov	w1, #0x2e                  	// #46
   42710:	ldr	x0, [sp, #24]
   42714:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   42718:	mov	x1, x0
   4271c:	ldr	x0, [sp, #56]
   42720:	str	x1, [x0]
   42724:	ldr	x0, [sp, #56]
   42728:	ldr	x0, [x0]
   4272c:	cmp	x0, #0x0
   42730:	b.ne	4273c <__asan_cplus_demangle_type@@Base+0x1a78>  // b.any
   42734:	mov	x0, #0x0                   	// #0
   42738:	b	42780 <__asan_cplus_demangle_type@@Base+0x1abc>
   4273c:	ldr	x0, [sp, #56]
   42740:	ldr	x0, [x0]
   42744:	add	x0, x0, #0x10
   42748:	str	x0, [sp, #56]
   4274c:	ldr	x0, [sp, #24]
   42750:	ldr	x0, [x0, #24]
   42754:	ldrb	w0, [x0]
   42758:	ldrb	w1, [sp, #23]
   4275c:	cmp	w1, w0
   42760:	b.ne	426e4 <__asan_cplus_demangle_type@@Base+0x1a20>  // b.any
   42764:	ldr	x0, [sp, #24]
   42768:	ldr	x0, [x0, #24]
   4276c:	add	x1, x0, #0x1
   42770:	ldr	x0, [sp, #24]
   42774:	str	x1, [x0, #24]
   42778:	nop
   4277c:	ldr	x0, [sp, #40]
   42780:	ldp	x29, x30, [sp], #64
   42784:	ret
   42788:	sub	sp, sp, #0x20
   4278c:	str	x0, [sp, #8]
   42790:	ldr	x0, [sp, #8]
   42794:	ldr	x0, [x0, #8]
   42798:	ldr	x0, [x0]
   4279c:	str	x0, [sp, #24]
   427a0:	ldr	x0, [sp, #24]
   427a4:	add	x0, x0, #0x1
   427a8:	ldrb	w0, [x0]
   427ac:	cmp	w0, #0x63
   427b0:	b.ne	427fc <__asan_cplus_demangle_type@@Base+0x1b38>  // b.any
   427b4:	ldr	x0, [sp, #24]
   427b8:	ldrb	w0, [x0]
   427bc:	cmp	w0, #0x73
   427c0:	b.eq	427f4 <__asan_cplus_demangle_type@@Base+0x1b30>  // b.none
   427c4:	ldr	x0, [sp, #24]
   427c8:	ldrb	w0, [x0]
   427cc:	cmp	w0, #0x64
   427d0:	b.eq	427f4 <__asan_cplus_demangle_type@@Base+0x1b30>  // b.none
   427d4:	ldr	x0, [sp, #24]
   427d8:	ldrb	w0, [x0]
   427dc:	cmp	w0, #0x63
   427e0:	b.eq	427f4 <__asan_cplus_demangle_type@@Base+0x1b30>  // b.none
   427e4:	ldr	x0, [sp, #24]
   427e8:	ldrb	w0, [x0]
   427ec:	cmp	w0, #0x72
   427f0:	b.ne	427fc <__asan_cplus_demangle_type@@Base+0x1b38>  // b.any
   427f4:	mov	w0, #0x1                   	// #1
   427f8:	b	42800 <__asan_cplus_demangle_type@@Base+0x1b3c>
   427fc:	mov	w0, #0x0                   	// #0
   42800:	add	sp, sp, #0x20
   42804:	ret
   42808:	stp	x29, x30, [sp, #-160]!
   4280c:	mov	x29, sp
   42810:	str	x0, [sp, #24]
   42814:	ldr	x0, [sp, #24]
   42818:	ldr	x0, [x0, #24]
   4281c:	ldrb	w0, [x0]
   42820:	strb	w0, [sp, #71]
   42824:	ldrb	w0, [sp, #71]
   42828:	cmp	w0, #0x4c
   4282c:	b.ne	4283c <__asan_cplus_demangle_type@@Base+0x1b78>  // b.any
   42830:	ldr	x0, [sp, #24]
   42834:	bl	431c0 <__asan_cplus_demangle_type@@Base+0x24fc>
   42838:	b	43170 <__asan_cplus_demangle_type@@Base+0x24ac>
   4283c:	ldrb	w0, [sp, #71]
   42840:	cmp	w0, #0x54
   42844:	b.ne	42854 <__asan_cplus_demangle_type@@Base+0x1b90>  // b.any
   42848:	ldr	x0, [sp, #24]
   4284c:	bl	423b4 <__asan_cplus_demangle_type@@Base+0x16f0>
   42850:	b	43170 <__asan_cplus_demangle_type@@Base+0x24ac>
   42854:	ldrb	w0, [sp, #71]
   42858:	cmp	w0, #0x73
   4285c:	b.ne	42904 <__asan_cplus_demangle_type@@Base+0x1c40>  // b.any
   42860:	ldr	x0, [sp, #24]
   42864:	ldr	x0, [x0, #24]
   42868:	add	x0, x0, #0x1
   4286c:	ldrb	w0, [x0]
   42870:	cmp	w0, #0x72
   42874:	b.ne	42904 <__asan_cplus_demangle_type@@Base+0x1c40>  // b.any
   42878:	ldr	x0, [sp, #24]
   4287c:	ldr	x0, [x0, #24]
   42880:	add	x1, x0, #0x2
   42884:	ldr	x0, [sp, #24]
   42888:	str	x1, [x0, #24]
   4288c:	ldr	x0, [sp, #24]
   42890:	bl	6990 <__asan_cplus_demangle_type@plt>
   42894:	str	x0, [sp, #56]
   42898:	ldr	x0, [sp, #24]
   4289c:	bl	3f770 <__asan_cplus_demangle_mangled_name@@Base+0xa1c>
   428a0:	str	x0, [sp, #48]
   428a4:	ldr	x0, [sp, #24]
   428a8:	ldr	x0, [x0, #24]
   428ac:	ldrb	w0, [x0]
   428b0:	cmp	w0, #0x49
   428b4:	b.eq	428d0 <__asan_cplus_demangle_type@@Base+0x1c0c>  // b.none
   428b8:	ldr	x3, [sp, #48]
   428bc:	ldr	x2, [sp, #56]
   428c0:	mov	w1, #0x1                   	// #1
   428c4:	ldr	x0, [sp, #24]
   428c8:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   428cc:	b	43170 <__asan_cplus_demangle_type@@Base+0x24ac>
   428d0:	ldr	x0, [sp, #24]
   428d4:	bl	42438 <__asan_cplus_demangle_type@@Base+0x1774>
   428d8:	mov	x3, x0
   428dc:	ldr	x2, [sp, #48]
   428e0:	mov	w1, #0x4                   	// #4
   428e4:	ldr	x0, [sp, #24]
   428e8:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   428ec:	mov	x3, x0
   428f0:	ldr	x2, [sp, #56]
   428f4:	mov	w1, #0x1                   	// #1
   428f8:	ldr	x0, [sp, #24]
   428fc:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   42900:	b	43170 <__asan_cplus_demangle_type@@Base+0x24ac>
   42904:	ldrb	w0, [sp, #71]
   42908:	cmp	w0, #0x73
   4290c:	b.ne	4295c <__asan_cplus_demangle_type@@Base+0x1c98>  // b.any
   42910:	ldr	x0, [sp, #24]
   42914:	ldr	x0, [x0, #24]
   42918:	add	x0, x0, #0x1
   4291c:	ldrb	w0, [x0]
   42920:	cmp	w0, #0x70
   42924:	b.ne	4295c <__asan_cplus_demangle_type@@Base+0x1c98>  // b.any
   42928:	ldr	x0, [sp, #24]
   4292c:	ldr	x0, [x0, #24]
   42930:	add	x1, x0, #0x2
   42934:	ldr	x0, [sp, #24]
   42938:	str	x1, [x0, #24]
   4293c:	ldr	x0, [sp, #24]
   42940:	bl	42808 <__asan_cplus_demangle_type@@Base+0x1b44>
   42944:	mov	x3, #0x0                   	// #0
   42948:	mov	x2, x0
   4294c:	mov	w1, #0x4b                  	// #75
   42950:	ldr	x0, [sp, #24]
   42954:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   42958:	b	43170 <__asan_cplus_demangle_type@@Base+0x24ac>
   4295c:	ldrb	w0, [sp, #71]
   42960:	cmp	w0, #0x66
   42964:	b.ne	42a10 <__asan_cplus_demangle_type@@Base+0x1d4c>  // b.any
   42968:	ldr	x0, [sp, #24]
   4296c:	ldr	x0, [x0, #24]
   42970:	add	x0, x0, #0x1
   42974:	ldrb	w0, [x0]
   42978:	cmp	w0, #0x70
   4297c:	b.ne	42a10 <__asan_cplus_demangle_type@@Base+0x1d4c>  // b.any
   42980:	ldr	x0, [sp, #24]
   42984:	ldr	x0, [x0, #24]
   42988:	add	x1, x0, #0x2
   4298c:	ldr	x0, [sp, #24]
   42990:	str	x1, [x0, #24]
   42994:	ldr	x0, [sp, #24]
   42998:	ldr	x0, [x0, #24]
   4299c:	ldrb	w0, [x0]
   429a0:	cmp	w0, #0x54
   429a4:	b.ne	429c4 <__asan_cplus_demangle_type@@Base+0x1d00>  // b.any
   429a8:	ldr	x0, [sp, #24]
   429ac:	ldr	x0, [x0, #24]
   429b0:	add	x1, x0, #0x1
   429b4:	ldr	x0, [sp, #24]
   429b8:	str	x1, [x0, #24]
   429bc:	str	wzr, [sp, #156]
   429c0:	b	42a00 <__asan_cplus_demangle_type@@Base+0x1d3c>
   429c4:	ldr	x0, [sp, #24]
   429c8:	bl	42318 <__asan_cplus_demangle_type@@Base+0x1654>
   429cc:	str	w0, [sp, #156]
   429d0:	ldr	w1, [sp, #156]
   429d4:	mov	w0, #0x7fffffff            	// #2147483647
   429d8:	cmp	w1, w0
   429dc:	b.eq	429ec <__asan_cplus_demangle_type@@Base+0x1d28>  // b.none
   429e0:	ldr	w0, [sp, #156]
   429e4:	cmn	w0, #0x1
   429e8:	b.ne	429f4 <__asan_cplus_demangle_type@@Base+0x1d30>  // b.any
   429ec:	mov	x0, #0x0                   	// #0
   429f0:	b	43170 <__asan_cplus_demangle_type@@Base+0x24ac>
   429f4:	ldr	w0, [sp, #156]
   429f8:	add	w0, w0, #0x1
   429fc:	str	w0, [sp, #156]
   42a00:	ldr	w1, [sp, #156]
   42a04:	ldr	x0, [sp, #24]
   42a08:	bl	3ecac <__asan_cplus_demangle_fill_dtor@@Base+0x4f4>
   42a0c:	b	43170 <__asan_cplus_demangle_type@@Base+0x24ac>
   42a10:	ldrb	w0, [sp, #71]
   42a14:	cmp	w0, #0x2f
   42a18:	b.ls	42a28 <__asan_cplus_demangle_type@@Base+0x1d64>  // b.plast
   42a1c:	ldrb	w0, [sp, #71]
   42a20:	cmp	w0, #0x39
   42a24:	b.ls	42a4c <__asan_cplus_demangle_type@@Base+0x1d88>  // b.plast
   42a28:	ldrb	w0, [sp, #71]
   42a2c:	cmp	w0, #0x6f
   42a30:	b.ne	42ac8 <__asan_cplus_demangle_type@@Base+0x1e04>  // b.any
   42a34:	ldr	x0, [sp, #24]
   42a38:	ldr	x0, [x0, #24]
   42a3c:	add	x0, x0, #0x1
   42a40:	ldrb	w0, [x0]
   42a44:	cmp	w0, #0x6e
   42a48:	b.ne	42ac8 <__asan_cplus_demangle_type@@Base+0x1e04>  // b.any
   42a4c:	ldrb	w0, [sp, #71]
   42a50:	cmp	w0, #0x6f
   42a54:	b.ne	42a6c <__asan_cplus_demangle_type@@Base+0x1da8>  // b.any
   42a58:	ldr	x0, [sp, #24]
   42a5c:	ldr	x0, [x0, #24]
   42a60:	add	x1, x0, #0x2
   42a64:	ldr	x0, [sp, #24]
   42a68:	str	x1, [x0, #24]
   42a6c:	ldr	x0, [sp, #24]
   42a70:	bl	3f770 <__asan_cplus_demangle_mangled_name@@Base+0xa1c>
   42a74:	str	x0, [sp, #32]
   42a78:	ldr	x0, [sp, #32]
   42a7c:	cmp	x0, #0x0
   42a80:	b.ne	42a8c <__asan_cplus_demangle_type@@Base+0x1dc8>  // b.any
   42a84:	mov	x0, #0x0                   	// #0
   42a88:	b	43170 <__asan_cplus_demangle_type@@Base+0x24ac>
   42a8c:	ldr	x0, [sp, #24]
   42a90:	ldr	x0, [x0, #24]
   42a94:	ldrb	w0, [x0]
   42a98:	cmp	w0, #0x49
   42a9c:	b.ne	42ac0 <__asan_cplus_demangle_type@@Base+0x1dfc>  // b.any
   42aa0:	ldr	x0, [sp, #24]
   42aa4:	bl	42438 <__asan_cplus_demangle_type@@Base+0x1774>
   42aa8:	mov	x3, x0
   42aac:	ldr	x2, [sp, #32]
   42ab0:	mov	w1, #0x4                   	// #4
   42ab4:	ldr	x0, [sp, #24]
   42ab8:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   42abc:	b	43170 <__asan_cplus_demangle_type@@Base+0x24ac>
   42ac0:	ldr	x0, [sp, #32]
   42ac4:	b	43170 <__asan_cplus_demangle_type@@Base+0x24ac>
   42ac8:	ldrb	w0, [sp, #71]
   42acc:	cmp	w0, #0x69
   42ad0:	b.eq	42ae0 <__asan_cplus_demangle_type@@Base+0x1e1c>  // b.none
   42ad4:	ldrb	w0, [sp, #71]
   42ad8:	cmp	w0, #0x74
   42adc:	b.ne	42b6c <__asan_cplus_demangle_type@@Base+0x1ea8>  // b.any
   42ae0:	ldr	x0, [sp, #24]
   42ae4:	ldr	x0, [x0, #24]
   42ae8:	add	x0, x0, #0x1
   42aec:	ldrb	w0, [x0]
   42af0:	cmp	w0, #0x6c
   42af4:	b.ne	42b6c <__asan_cplus_demangle_type@@Base+0x1ea8>  // b.any
   42af8:	str	xzr, [sp, #144]
   42afc:	ldr	x0, [sp, #24]
   42b00:	ldr	x0, [x0, #24]
   42b04:	add	x1, x0, #0x2
   42b08:	ldr	x0, [sp, #24]
   42b0c:	str	x1, [x0, #24]
   42b10:	ldrb	w0, [sp, #71]
   42b14:	cmp	w0, #0x74
   42b18:	b.ne	42b28 <__asan_cplus_demangle_type@@Base+0x1e64>  // b.any
   42b1c:	ldr	x0, [sp, #24]
   42b20:	bl	6990 <__asan_cplus_demangle_type@plt>
   42b24:	str	x0, [sp, #144]
   42b28:	ldr	x0, [sp, #24]
   42b2c:	ldr	x0, [x0, #24]
   42b30:	add	x0, x0, #0x1
   42b34:	ldrb	w0, [x0]
   42b38:	cmp	w0, #0x0
   42b3c:	b.ne	42b48 <__asan_cplus_demangle_type@@Base+0x1e84>  // b.any
   42b40:	mov	x0, #0x0                   	// #0
   42b44:	b	43170 <__asan_cplus_demangle_type@@Base+0x24ac>
   42b48:	mov	w1, #0x45                  	// #69
   42b4c:	ldr	x0, [sp, #24]
   42b50:	bl	42684 <__asan_cplus_demangle_type@@Base+0x19c0>
   42b54:	mov	x3, x0
   42b58:	ldr	x2, [sp, #144]
   42b5c:	mov	w1, #0x31                  	// #49
   42b60:	ldr	x0, [sp, #24]
   42b64:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   42b68:	b	43170 <__asan_cplus_demangle_type@@Base+0x24ac>
   42b6c:	str	xzr, [sp, #136]
   42b70:	ldr	x0, [sp, #24]
   42b74:	bl	3fce0 <__asan_cplus_demangle_mangled_name@@Base+0xf8c>
   42b78:	str	x0, [sp, #40]
   42b7c:	ldr	x0, [sp, #40]
   42b80:	cmp	x0, #0x0
   42b84:	b.ne	42b90 <__asan_cplus_demangle_type@@Base+0x1ecc>  // b.any
   42b88:	mov	x0, #0x0                   	// #0
   42b8c:	b	43170 <__asan_cplus_demangle_type@@Base+0x24ac>
   42b90:	ldr	x0, [sp, #40]
   42b94:	ldr	w0, [x0]
   42b98:	cmp	w0, #0x32
   42b9c:	b.ne	42c0c <__asan_cplus_demangle_type@@Base+0x1f48>  // b.any
   42ba0:	ldr	x0, [sp, #40]
   42ba4:	ldr	x0, [x0, #8]
   42ba8:	ldr	x0, [x0]
   42bac:	str	x0, [sp, #136]
   42bb0:	ldr	x0, [sp, #24]
   42bb4:	ldr	w1, [x0, #72]
   42bb8:	ldr	x0, [sp, #40]
   42bbc:	ldr	x0, [x0, #8]
   42bc0:	ldr	w0, [x0, #16]
   42bc4:	sub	w0, w0, #0x2
   42bc8:	add	w1, w1, w0
   42bcc:	ldr	x0, [sp, #24]
   42bd0:	str	w1, [x0, #72]
   42bd4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   42bd8:	add	x1, x0, #0x6c8
   42bdc:	ldr	x0, [sp, #136]
   42be0:	bl	6d70 <__asan_internal_strcmp@plt>
   42be4:	cmp	w0, #0x0
   42be8:	b.ne	42c0c <__asan_cplus_demangle_type@@Base+0x1f48>  // b.any
   42bec:	ldr	x0, [sp, #24]
   42bf0:	bl	6990 <__asan_cplus_demangle_type@plt>
   42bf4:	mov	x3, x0
   42bf8:	ldr	x2, [sp, #40]
   42bfc:	mov	w1, #0x37                  	// #55
   42c00:	ldr	x0, [sp, #24]
   42c04:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   42c08:	b	43170 <__asan_cplus_demangle_type@@Base+0x24ac>
   42c0c:	ldr	x0, [sp, #40]
   42c10:	ldr	w0, [x0]
   42c14:	cmp	w0, #0x34
   42c18:	b.eq	42c60 <__asan_cplus_demangle_type@@Base+0x1f9c>  // b.none
   42c1c:	cmp	w0, #0x34
   42c20:	b.hi	42c34 <__asan_cplus_demangle_type@@Base+0x1f70>  // b.pmore
   42c24:	cmp	w0, #0x32
   42c28:	b.eq	42c3c <__asan_cplus_demangle_type@@Base+0x1f78>  // b.none
   42c2c:	cmp	w0, #0x33
   42c30:	b.eq	42c50 <__asan_cplus_demangle_type@@Base+0x1f8c>  // b.none
   42c34:	mov	x0, #0x0                   	// #0
   42c38:	b	43170 <__asan_cplus_demangle_type@@Base+0x24ac>
   42c3c:	ldr	x0, [sp, #40]
   42c40:	ldr	x0, [x0, #8]
   42c44:	ldr	w0, [x0, #20]
   42c48:	str	w0, [sp, #132]
   42c4c:	b	42c6c <__asan_cplus_demangle_type@@Base+0x1fa8>
   42c50:	ldr	x0, [sp, #40]
   42c54:	ldr	w0, [x0, #8]
   42c58:	str	w0, [sp, #132]
   42c5c:	b	42c6c <__asan_cplus_demangle_type@@Base+0x1fa8>
   42c60:	mov	w0, #0x1                   	// #1
   42c64:	str	w0, [sp, #132]
   42c68:	nop
   42c6c:	ldr	w0, [sp, #132]
   42c70:	cmp	w0, #0x3
   42c74:	b.eq	42f54 <__asan_cplus_demangle_type@@Base+0x2290>  // b.none
   42c78:	ldr	w0, [sp, #132]
   42c7c:	cmp	w0, #0x3
   42c80:	b.gt	4316c <__asan_cplus_demangle_type@@Base+0x24a8>
   42c84:	ldr	w0, [sp, #132]
   42c88:	cmp	w0, #0x2
   42c8c:	b.eq	42e1c <__asan_cplus_demangle_type@@Base+0x2158>  // b.none
   42c90:	ldr	w0, [sp, #132]
   42c94:	cmp	w0, #0x2
   42c98:	b.gt	4316c <__asan_cplus_demangle_type@@Base+0x24a8>
   42c9c:	ldr	w0, [sp, #132]
   42ca0:	cmp	w0, #0x0
   42ca4:	b.eq	42cb8 <__asan_cplus_demangle_type@@Base+0x1ff4>  // b.none
   42ca8:	ldr	w0, [sp, #132]
   42cac:	cmp	w0, #0x1
   42cb0:	b.eq	42cd0 <__asan_cplus_demangle_type@@Base+0x200c>  // b.none
   42cb4:	b	4316c <__asan_cplus_demangle_type@@Base+0x24a8>
   42cb8:	mov	x3, #0x0                   	// #0
   42cbc:	ldr	x2, [sp, #40]
   42cc0:	mov	w1, #0x36                  	// #54
   42cc4:	ldr	x0, [sp, #24]
   42cc8:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   42ccc:	b	43170 <__asan_cplus_demangle_type@@Base+0x24ac>
   42cd0:	str	wzr, [sp, #116]
   42cd4:	ldr	x0, [sp, #136]
   42cd8:	cmp	x0, #0x0
   42cdc:	b.eq	42d54 <__asan_cplus_demangle_type@@Base+0x2090>  // b.none
   42ce0:	ldr	x0, [sp, #136]
   42ce4:	ldrb	w0, [x0]
   42ce8:	cmp	w0, #0x70
   42cec:	b.eq	42d00 <__asan_cplus_demangle_type@@Base+0x203c>  // b.none
   42cf0:	ldr	x0, [sp, #136]
   42cf4:	ldrb	w0, [x0]
   42cf8:	cmp	w0, #0x6d
   42cfc:	b.ne	42d54 <__asan_cplus_demangle_type@@Base+0x2090>  // b.any
   42d00:	ldr	x0, [sp, #136]
   42d04:	add	x0, x0, #0x1
   42d08:	ldrb	w1, [x0]
   42d0c:	ldr	x0, [sp, #136]
   42d10:	ldrb	w0, [x0]
   42d14:	cmp	w1, w0
   42d18:	b.ne	42d54 <__asan_cplus_demangle_type@@Base+0x2090>  // b.any
   42d1c:	ldr	x0, [sp, #24]
   42d20:	ldr	x0, [x0, #24]
   42d24:	ldrb	w0, [x0]
   42d28:	cmp	w0, #0x5f
   42d2c:	b.ne	42d4c <__asan_cplus_demangle_type@@Base+0x2088>  // b.any
   42d30:	ldr	x0, [sp, #24]
   42d34:	ldr	x0, [x0, #24]
   42d38:	add	x1, x0, #0x1
   42d3c:	ldr	x0, [sp, #24]
   42d40:	str	x1, [x0, #24]
   42d44:	mov	w0, #0x0                   	// #0
   42d48:	b	42d50 <__asan_cplus_demangle_type@@Base+0x208c>
   42d4c:	mov	w0, #0x1                   	// #1
   42d50:	str	w0, [sp, #116]
   42d54:	ldr	x0, [sp, #40]
   42d58:	ldr	w0, [x0]
   42d5c:	cmp	w0, #0x34
   42d60:	b.ne	42da0 <__asan_cplus_demangle_type@@Base+0x20dc>  // b.any
   42d64:	ldr	x0, [sp, #24]
   42d68:	ldr	x0, [x0, #24]
   42d6c:	ldrb	w0, [x0]
   42d70:	cmp	w0, #0x5f
   42d74:	b.ne	42da0 <__asan_cplus_demangle_type@@Base+0x20dc>  // b.any
   42d78:	ldr	x0, [sp, #24]
   42d7c:	ldr	x0, [x0, #24]
   42d80:	add	x1, x0, #0x1
   42d84:	ldr	x0, [sp, #24]
   42d88:	str	x1, [x0, #24]
   42d8c:	mov	w1, #0x45                  	// #69
   42d90:	ldr	x0, [sp, #24]
   42d94:	bl	42684 <__asan_cplus_demangle_type@@Base+0x19c0>
   42d98:	str	x0, [sp, #120]
   42d9c:	b	42de0 <__asan_cplus_demangle_type@@Base+0x211c>
   42da0:	ldr	x0, [sp, #136]
   42da4:	cmp	x0, #0x0
   42da8:	b.eq	42dd4 <__asan_cplus_demangle_type@@Base+0x2110>  // b.none
   42dac:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   42db0:	add	x1, x0, #0x690
   42db4:	ldr	x0, [sp, #136]
   42db8:	bl	6d70 <__asan_internal_strcmp@plt>
   42dbc:	cmp	w0, #0x0
   42dc0:	b.ne	42dd4 <__asan_cplus_demangle_type@@Base+0x2110>  // b.any
   42dc4:	ldr	x0, [sp, #24]
   42dc8:	bl	42498 <__asan_cplus_demangle_type@@Base+0x17d4>
   42dcc:	str	x0, [sp, #120]
   42dd0:	b	42de0 <__asan_cplus_demangle_type@@Base+0x211c>
   42dd4:	ldr	x0, [sp, #24]
   42dd8:	bl	42808 <__asan_cplus_demangle_type@@Base+0x1b44>
   42ddc:	str	x0, [sp, #120]
   42de0:	ldr	w0, [sp, #116]
   42de4:	cmp	w0, #0x0
   42de8:	b.eq	42e04 <__asan_cplus_demangle_type@@Base+0x2140>  // b.none
   42dec:	ldr	x3, [sp, #120]
   42df0:	ldr	x2, [sp, #120]
   42df4:	mov	w1, #0x39                  	// #57
   42df8:	ldr	x0, [sp, #24]
   42dfc:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   42e00:	str	x0, [sp, #120]
   42e04:	ldr	x3, [sp, #120]
   42e08:	ldr	x2, [sp, #40]
   42e0c:	mov	w1, #0x37                  	// #55
   42e10:	ldr	x0, [sp, #24]
   42e14:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   42e18:	b	43170 <__asan_cplus_demangle_type@@Base+0x24ac>
   42e1c:	ldr	x0, [sp, #136]
   42e20:	cmp	x0, #0x0
   42e24:	b.ne	42e30 <__asan_cplus_demangle_type@@Base+0x216c>  // b.any
   42e28:	mov	x0, #0x0                   	// #0
   42e2c:	b	43170 <__asan_cplus_demangle_type@@Base+0x24ac>
   42e30:	ldr	x0, [sp, #40]
   42e34:	bl	42788 <__asan_cplus_demangle_type@@Base+0x1ac4>
   42e38:	cmp	w0, #0x0
   42e3c:	b.eq	42e50 <__asan_cplus_demangle_type@@Base+0x218c>  // b.none
   42e40:	ldr	x0, [sp, #24]
   42e44:	bl	6990 <__asan_cplus_demangle_type@plt>
   42e48:	str	x0, [sp, #104]
   42e4c:	b	42e7c <__asan_cplus_demangle_type@@Base+0x21b8>
   42e50:	ldr	x0, [sp, #136]
   42e54:	ldrb	w0, [x0]
   42e58:	cmp	w0, #0x66
   42e5c:	b.ne	42e70 <__asan_cplus_demangle_type@@Base+0x21ac>  // b.any
   42e60:	ldr	x0, [sp, #24]
   42e64:	bl	3fce0 <__asan_cplus_demangle_mangled_name@@Base+0xf8c>
   42e68:	str	x0, [sp, #104]
   42e6c:	b	42e7c <__asan_cplus_demangle_type@@Base+0x21b8>
   42e70:	ldr	x0, [sp, #24]
   42e74:	bl	42808 <__asan_cplus_demangle_type@@Base+0x1b44>
   42e78:	str	x0, [sp, #104]
   42e7c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   42e80:	add	x1, x0, #0x360
   42e84:	ldr	x0, [sp, #136]
   42e88:	bl	6d70 <__asan_internal_strcmp@plt>
   42e8c:	cmp	w0, #0x0
   42e90:	b.ne	42ea8 <__asan_cplus_demangle_type@@Base+0x21e4>  // b.any
   42e94:	mov	w1, #0x45                  	// #69
   42e98:	ldr	x0, [sp, #24]
   42e9c:	bl	42684 <__asan_cplus_demangle_type@@Base+0x19c0>
   42ea0:	str	x0, [sp, #96]
   42ea4:	b	42f28 <__asan_cplus_demangle_type@@Base+0x2264>
   42ea8:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   42eac:	add	x1, x0, #0x400
   42eb0:	ldr	x0, [sp, #136]
   42eb4:	bl	6d70 <__asan_internal_strcmp@plt>
   42eb8:	cmp	w0, #0x0
   42ebc:	b.eq	42ed8 <__asan_cplus_demangle_type@@Base+0x2214>  // b.none
   42ec0:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   42ec4:	add	x1, x0, #0x610
   42ec8:	ldr	x0, [sp, #136]
   42ecc:	bl	6d70 <__asan_internal_strcmp@plt>
   42ed0:	cmp	w0, #0x0
   42ed4:	b.ne	42f1c <__asan_cplus_demangle_type@@Base+0x2258>  // b.any
   42ed8:	ldr	x0, [sp, #24]
   42edc:	bl	3f770 <__asan_cplus_demangle_mangled_name@@Base+0xa1c>
   42ee0:	str	x0, [sp, #96]
   42ee4:	ldr	x0, [sp, #24]
   42ee8:	ldr	x0, [x0, #24]
   42eec:	ldrb	w0, [x0]
   42ef0:	cmp	w0, #0x49
   42ef4:	b.ne	42f28 <__asan_cplus_demangle_type@@Base+0x2264>  // b.any
   42ef8:	ldr	x0, [sp, #24]
   42efc:	bl	42438 <__asan_cplus_demangle_type@@Base+0x1774>
   42f00:	mov	x3, x0
   42f04:	ldr	x2, [sp, #96]
   42f08:	mov	w1, #0x4                   	// #4
   42f0c:	ldr	x0, [sp, #24]
   42f10:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   42f14:	str	x0, [sp, #96]
   42f18:	b	42f28 <__asan_cplus_demangle_type@@Base+0x2264>
   42f1c:	ldr	x0, [sp, #24]
   42f20:	bl	42808 <__asan_cplus_demangle_type@@Base+0x1b44>
   42f24:	str	x0, [sp, #96]
   42f28:	ldr	x3, [sp, #96]
   42f2c:	ldr	x2, [sp, #104]
   42f30:	mov	w1, #0x39                  	// #57
   42f34:	ldr	x0, [sp, #24]
   42f38:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   42f3c:	mov	x3, x0
   42f40:	ldr	x2, [sp, #40]
   42f44:	mov	w1, #0x38                  	// #56
   42f48:	ldr	x0, [sp, #24]
   42f4c:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   42f50:	b	43170 <__asan_cplus_demangle_type@@Base+0x24ac>
   42f54:	ldr	x0, [sp, #136]
   42f58:	cmp	x0, #0x0
   42f5c:	b.ne	42f68 <__asan_cplus_demangle_type@@Base+0x22a4>  // b.any
   42f60:	mov	x0, #0x0                   	// #0
   42f64:	b	43170 <__asan_cplus_demangle_type@@Base+0x24ac>
   42f68:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   42f6c:	add	x1, x0, #0x620
   42f70:	ldr	x0, [sp, #136]
   42f74:	bl	6d70 <__asan_internal_strcmp@plt>
   42f78:	cmp	w0, #0x0
   42f7c:	b.ne	42fb8 <__asan_cplus_demangle_type@@Base+0x22f4>  // b.any
   42f80:	ldr	x0, [sp, #24]
   42f84:	bl	42808 <__asan_cplus_demangle_type@@Base+0x1b44>
   42f88:	str	x0, [sp, #88]
   42f8c:	ldr	x0, [sp, #24]
   42f90:	bl	42808 <__asan_cplus_demangle_type@@Base+0x1b44>
   42f94:	str	x0, [sp, #80]
   42f98:	ldr	x0, [sp, #24]
   42f9c:	bl	42808 <__asan_cplus_demangle_type@@Base+0x1b44>
   42fa0:	str	x0, [sp, #72]
   42fa4:	ldr	x0, [sp, #72]
   42fa8:	cmp	x0, #0x0
   42fac:	b.ne	4312c <__asan_cplus_demangle_type@@Base+0x2468>  // b.any
   42fb0:	mov	x0, #0x0                   	// #0
   42fb4:	b	43170 <__asan_cplus_demangle_type@@Base+0x24ac>
   42fb8:	ldr	x0, [sp, #136]
   42fbc:	ldrb	w0, [x0]
   42fc0:	cmp	w0, #0x66
   42fc4:	b.ne	43000 <__asan_cplus_demangle_type@@Base+0x233c>  // b.any
   42fc8:	ldr	x0, [sp, #24]
   42fcc:	bl	3fce0 <__asan_cplus_demangle_mangled_name@@Base+0xf8c>
   42fd0:	str	x0, [sp, #88]
   42fd4:	ldr	x0, [sp, #24]
   42fd8:	bl	42808 <__asan_cplus_demangle_type@@Base+0x1b44>
   42fdc:	str	x0, [sp, #80]
   42fe0:	ldr	x0, [sp, #24]
   42fe4:	bl	42808 <__asan_cplus_demangle_type@@Base+0x1b44>
   42fe8:	str	x0, [sp, #72]
   42fec:	ldr	x0, [sp, #72]
   42ff0:	cmp	x0, #0x0
   42ff4:	b.ne	4312c <__asan_cplus_demangle_type@@Base+0x2468>  // b.any
   42ff8:	mov	x0, #0x0                   	// #0
   42ffc:	b	43170 <__asan_cplus_demangle_type@@Base+0x24ac>
   43000:	ldr	x0, [sp, #136]
   43004:	ldrb	w0, [x0]
   43008:	cmp	w0, #0x6e
   4300c:	b.ne	43124 <__asan_cplus_demangle_type@@Base+0x2460>  // b.any
   43010:	ldr	x0, [sp, #136]
   43014:	add	x0, x0, #0x1
   43018:	ldrb	w0, [x0]
   4301c:	cmp	w0, #0x77
   43020:	b.eq	43040 <__asan_cplus_demangle_type@@Base+0x237c>  // b.none
   43024:	ldr	x0, [sp, #136]
   43028:	add	x0, x0, #0x1
   4302c:	ldrb	w0, [x0]
   43030:	cmp	w0, #0x61
   43034:	b.eq	43040 <__asan_cplus_demangle_type@@Base+0x237c>  // b.none
   43038:	mov	x0, #0x0                   	// #0
   4303c:	b	43170 <__asan_cplus_demangle_type@@Base+0x24ac>
   43040:	mov	w1, #0x5f                  	// #95
   43044:	ldr	x0, [sp, #24]
   43048:	bl	42684 <__asan_cplus_demangle_type@@Base+0x19c0>
   4304c:	str	x0, [sp, #88]
   43050:	ldr	x0, [sp, #24]
   43054:	bl	6990 <__asan_cplus_demangle_type@plt>
   43058:	str	x0, [sp, #80]
   4305c:	ldr	x0, [sp, #24]
   43060:	ldr	x0, [x0, #24]
   43064:	ldrb	w0, [x0]
   43068:	cmp	w0, #0x45
   4306c:	b.ne	4308c <__asan_cplus_demangle_type@@Base+0x23c8>  // b.any
   43070:	ldr	x0, [sp, #24]
   43074:	ldr	x0, [x0, #24]
   43078:	add	x1, x0, #0x1
   4307c:	ldr	x0, [sp, #24]
   43080:	str	x1, [x0, #24]
   43084:	str	xzr, [sp, #72]
   43088:	b	4312c <__asan_cplus_demangle_type@@Base+0x2468>
   4308c:	ldr	x0, [sp, #24]
   43090:	ldr	x0, [x0, #24]
   43094:	ldrb	w0, [x0]
   43098:	cmp	w0, #0x70
   4309c:	b.ne	430e0 <__asan_cplus_demangle_type@@Base+0x241c>  // b.any
   430a0:	ldr	x0, [sp, #24]
   430a4:	ldr	x0, [x0, #24]
   430a8:	add	x0, x0, #0x1
   430ac:	ldrb	w0, [x0]
   430b0:	cmp	w0, #0x69
   430b4:	b.ne	430e0 <__asan_cplus_demangle_type@@Base+0x241c>  // b.any
   430b8:	ldr	x0, [sp, #24]
   430bc:	ldr	x0, [x0, #24]
   430c0:	add	x1, x0, #0x2
   430c4:	ldr	x0, [sp, #24]
   430c8:	str	x1, [x0, #24]
   430cc:	mov	w1, #0x45                  	// #69
   430d0:	ldr	x0, [sp, #24]
   430d4:	bl	42684 <__asan_cplus_demangle_type@@Base+0x19c0>
   430d8:	str	x0, [sp, #72]
   430dc:	b	4312c <__asan_cplus_demangle_type@@Base+0x2468>
   430e0:	ldr	x0, [sp, #24]
   430e4:	ldr	x0, [x0, #24]
   430e8:	ldrb	w0, [x0]
   430ec:	cmp	w0, #0x69
   430f0:	b.ne	4311c <__asan_cplus_demangle_type@@Base+0x2458>  // b.any
   430f4:	ldr	x0, [sp, #24]
   430f8:	ldr	x0, [x0, #24]
   430fc:	add	x0, x0, #0x1
   43100:	ldrb	w0, [x0]
   43104:	cmp	w0, #0x6c
   43108:	b.ne	4311c <__asan_cplus_demangle_type@@Base+0x2458>  // b.any
   4310c:	ldr	x0, [sp, #24]
   43110:	bl	42808 <__asan_cplus_demangle_type@@Base+0x1b44>
   43114:	str	x0, [sp, #72]
   43118:	b	4312c <__asan_cplus_demangle_type@@Base+0x2468>
   4311c:	mov	x0, #0x0                   	// #0
   43120:	b	43170 <__asan_cplus_demangle_type@@Base+0x24ac>
   43124:	mov	x0, #0x0                   	// #0
   43128:	b	43170 <__asan_cplus_demangle_type@@Base+0x24ac>
   4312c:	ldr	x3, [sp, #72]
   43130:	ldr	x2, [sp, #80]
   43134:	mov	w1, #0x3c                  	// #60
   43138:	ldr	x0, [sp, #24]
   4313c:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   43140:	mov	x3, x0
   43144:	ldr	x2, [sp, #88]
   43148:	mov	w1, #0x3b                  	// #59
   4314c:	ldr	x0, [sp, #24]
   43150:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   43154:	mov	x3, x0
   43158:	ldr	x2, [sp, #40]
   4315c:	mov	w1, #0x3a                  	// #58
   43160:	ldr	x0, [sp, #24]
   43164:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   43168:	b	43170 <__asan_cplus_demangle_type@@Base+0x24ac>
   4316c:	mov	x0, #0x0                   	// #0
   43170:	ldp	x29, x30, [sp], #160
   43174:	ret
   43178:	stp	x29, x30, [sp, #-48]!
   4317c:	mov	x29, sp
   43180:	str	x0, [sp, #24]
   43184:	ldr	x0, [sp, #24]
   43188:	ldr	w0, [x0, #76]
   4318c:	str	w0, [sp, #44]
   43190:	ldr	x0, [sp, #24]
   43194:	mov	w1, #0x1                   	// #1
   43198:	str	w1, [x0, #76]
   4319c:	ldr	x0, [sp, #24]
   431a0:	bl	42808 <__asan_cplus_demangle_type@@Base+0x1b44>
   431a4:	str	x0, [sp, #32]
   431a8:	ldr	x0, [sp, #24]
   431ac:	ldr	w1, [sp, #44]
   431b0:	str	w1, [x0, #76]
   431b4:	ldr	x0, [sp, #32]
   431b8:	ldp	x29, x30, [sp], #48
   431bc:	ret
   431c0:	stp	x29, x30, [sp, #-64]!
   431c4:	mov	x29, sp
   431c8:	str	x0, [sp, #24]
   431cc:	ldr	x0, [sp, #24]
   431d0:	ldr	x0, [x0, #24]
   431d4:	ldrb	w0, [x0]
   431d8:	cmp	w0, #0x4c
   431dc:	b.ne	431fc <__asan_cplus_demangle_type@@Base+0x2538>  // b.any
   431e0:	ldr	x0, [sp, #24]
   431e4:	ldr	x0, [x0, #24]
   431e8:	add	x1, x0, #0x1
   431ec:	ldr	x0, [sp, #24]
   431f0:	str	x1, [x0, #24]
   431f4:	mov	w0, #0x0                   	// #0
   431f8:	b	43200 <__asan_cplus_demangle_type@@Base+0x253c>
   431fc:	mov	w0, #0x1                   	// #1
   43200:	cmp	w0, #0x0
   43204:	b.eq	43210 <__asan_cplus_demangle_type@@Base+0x254c>  // b.none
   43208:	mov	x0, #0x0                   	// #0
   4320c:	b	433bc <__asan_cplus_demangle_type@@Base+0x26f8>
   43210:	ldr	x0, [sp, #24]
   43214:	ldr	x0, [x0, #24]
   43218:	ldrb	w0, [x0]
   4321c:	cmp	w0, #0x5f
   43220:	b.eq	43238 <__asan_cplus_demangle_type@@Base+0x2574>  // b.none
   43224:	ldr	x0, [sp, #24]
   43228:	ldr	x0, [x0, #24]
   4322c:	ldrb	w0, [x0]
   43230:	cmp	w0, #0x5a
   43234:	b.ne	4324c <__asan_cplus_demangle_type@@Base+0x2588>  // b.any
   43238:	mov	w1, #0x0                   	// #0
   4323c:	ldr	x0, [sp, #24]
   43240:	bl	6ef0 <__asan_cplus_demangle_mangled_name@plt>
   43244:	str	x0, [sp, #56]
   43248:	b	43374 <__asan_cplus_demangle_type@@Base+0x26b0>
   4324c:	ldr	x0, [sp, #24]
   43250:	bl	6990 <__asan_cplus_demangle_type@plt>
   43254:	str	x0, [sp, #40]
   43258:	ldr	x0, [sp, #40]
   4325c:	cmp	x0, #0x0
   43260:	b.ne	4326c <__asan_cplus_demangle_type@@Base+0x25a8>  // b.any
   43264:	mov	x0, #0x0                   	// #0
   43268:	b	433bc <__asan_cplus_demangle_type@@Base+0x26f8>
   4326c:	ldr	x0, [sp, #40]
   43270:	ldr	w0, [x0]
   43274:	cmp	w0, #0x27
   43278:	b.ne	432b0 <__asan_cplus_demangle_type@@Base+0x25ec>  // b.any
   4327c:	ldr	x0, [sp, #40]
   43280:	ldr	x0, [x0, #8]
   43284:	ldr	w0, [x0, #28]
   43288:	cmp	w0, #0x0
   4328c:	b.eq	432b0 <__asan_cplus_demangle_type@@Base+0x25ec>  // b.none
   43290:	ldr	x0, [sp, #24]
   43294:	ldr	w1, [x0, #72]
   43298:	ldr	x0, [sp, #40]
   4329c:	ldr	x0, [x0, #8]
   432a0:	ldr	w0, [x0, #8]
   432a4:	sub	w1, w1, w0
   432a8:	ldr	x0, [sp, #24]
   432ac:	str	w1, [x0, #72]
   432b0:	mov	w0, #0x3d                  	// #61
   432b4:	str	w0, [sp, #52]
   432b8:	ldr	x0, [sp, #24]
   432bc:	ldr	x0, [x0, #24]
   432c0:	ldrb	w0, [x0]
   432c4:	cmp	w0, #0x6e
   432c8:	b.ne	432e8 <__asan_cplus_demangle_type@@Base+0x2624>  // b.any
   432cc:	mov	w0, #0x3e                  	// #62
   432d0:	str	w0, [sp, #52]
   432d4:	ldr	x0, [sp, #24]
   432d8:	ldr	x0, [x0, #24]
   432dc:	add	x1, x0, #0x1
   432e0:	ldr	x0, [sp, #24]
   432e4:	str	x1, [x0, #24]
   432e8:	ldr	x0, [sp, #24]
   432ec:	ldr	x0, [x0, #24]
   432f0:	str	x0, [sp, #32]
   432f4:	b	43328 <__asan_cplus_demangle_type@@Base+0x2664>
   432f8:	ldr	x0, [sp, #24]
   432fc:	ldr	x0, [x0, #24]
   43300:	ldrb	w0, [x0]
   43304:	cmp	w0, #0x0
   43308:	b.ne	43314 <__asan_cplus_demangle_type@@Base+0x2650>  // b.any
   4330c:	mov	x0, #0x0                   	// #0
   43310:	b	433bc <__asan_cplus_demangle_type@@Base+0x26f8>
   43314:	ldr	x0, [sp, #24]
   43318:	ldr	x0, [x0, #24]
   4331c:	add	x1, x0, #0x1
   43320:	ldr	x0, [sp, #24]
   43324:	str	x1, [x0, #24]
   43328:	ldr	x0, [sp, #24]
   4332c:	ldr	x0, [x0, #24]
   43330:	ldrb	w0, [x0]
   43334:	cmp	w0, #0x45
   43338:	b.ne	432f8 <__asan_cplus_demangle_type@@Base+0x2634>  // b.any
   4333c:	ldr	x0, [sp, #24]
   43340:	ldr	x1, [x0, #24]
   43344:	ldr	x0, [sp, #32]
   43348:	sub	x0, x1, x0
   4334c:	mov	w2, w0
   43350:	ldr	x1, [sp, #32]
   43354:	ldr	x0, [sp, #24]
   43358:	bl	3ea28 <__asan_cplus_demangle_fill_dtor@@Base+0x270>
   4335c:	mov	x3, x0
   43360:	ldr	x2, [sp, #40]
   43364:	ldr	w1, [sp, #52]
   43368:	ldr	x0, [sp, #24]
   4336c:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   43370:	str	x0, [sp, #56]
   43374:	ldr	x0, [sp, #24]
   43378:	ldr	x0, [x0, #24]
   4337c:	ldrb	w0, [x0]
   43380:	cmp	w0, #0x45
   43384:	b.ne	433a4 <__asan_cplus_demangle_type@@Base+0x26e0>  // b.any
   43388:	ldr	x0, [sp, #24]
   4338c:	ldr	x0, [x0, #24]
   43390:	add	x1, x0, #0x1
   43394:	ldr	x0, [sp, #24]
   43398:	str	x1, [x0, #24]
   4339c:	mov	w0, #0x0                   	// #0
   433a0:	b	433a8 <__asan_cplus_demangle_type@@Base+0x26e4>
   433a4:	mov	w0, #0x1                   	// #1
   433a8:	cmp	w0, #0x0
   433ac:	b.eq	433b8 <__asan_cplus_demangle_type@@Base+0x26f4>  // b.none
   433b0:	mov	x0, #0x0                   	// #0
   433b4:	b	433bc <__asan_cplus_demangle_type@@Base+0x26f8>
   433b8:	ldr	x0, [sp, #56]
   433bc:	ldp	x29, x30, [sp], #64
   433c0:	ret
   433c4:	stp	x29, x30, [sp, #-64]!
   433c8:	mov	x29, sp
   433cc:	str	x0, [sp, #24]
   433d0:	ldr	x0, [sp, #24]
   433d4:	ldr	x0, [x0, #24]
   433d8:	ldrb	w0, [x0]
   433dc:	cmp	w0, #0x5a
   433e0:	b.ne	43400 <__asan_cplus_demangle_type@@Base+0x273c>  // b.any
   433e4:	ldr	x0, [sp, #24]
   433e8:	ldr	x0, [x0, #24]
   433ec:	add	x1, x0, #0x1
   433f0:	ldr	x0, [sp, #24]
   433f4:	str	x1, [x0, #24]
   433f8:	mov	w0, #0x0                   	// #0
   433fc:	b	43404 <__asan_cplus_demangle_type@@Base+0x2740>
   43400:	mov	w0, #0x1                   	// #1
   43404:	cmp	w0, #0x0
   43408:	b.eq	43414 <__asan_cplus_demangle_type@@Base+0x2750>  // b.none
   4340c:	mov	x0, #0x0                   	// #0
   43410:	b	435dc <__asan_cplus_demangle_type@@Base+0x2918>
   43414:	mov	w1, #0x0                   	// #0
   43418:	ldr	x0, [sp, #24]
   4341c:	bl	3f010 <__asan_cplus_demangle_mangled_name@@Base+0x2bc>
   43420:	str	x0, [sp, #40]
   43424:	ldr	x0, [sp, #40]
   43428:	cmp	x0, #0x0
   4342c:	b.ne	43438 <__asan_cplus_demangle_type@@Base+0x2774>  // b.any
   43430:	mov	x0, #0x0                   	// #0
   43434:	b	435dc <__asan_cplus_demangle_type@@Base+0x2918>
   43438:	ldr	x0, [sp, #24]
   4343c:	ldr	x0, [x0, #24]
   43440:	ldrb	w0, [x0]
   43444:	cmp	w0, #0x45
   43448:	b.ne	43468 <__asan_cplus_demangle_type@@Base+0x27a4>  // b.any
   4344c:	ldr	x0, [sp, #24]
   43450:	ldr	x0, [x0, #24]
   43454:	add	x1, x0, #0x1
   43458:	ldr	x0, [sp, #24]
   4345c:	str	x1, [x0, #24]
   43460:	mov	w0, #0x0                   	// #0
   43464:	b	4346c <__asan_cplus_demangle_type@@Base+0x27a8>
   43468:	mov	w0, #0x1                   	// #1
   4346c:	cmp	w0, #0x0
   43470:	b.eq	4347c <__asan_cplus_demangle_type@@Base+0x27b8>  // b.none
   43474:	mov	x0, #0x0                   	// #0
   43478:	b	435dc <__asan_cplus_demangle_type@@Base+0x2918>
   4347c:	ldr	x0, [sp, #24]
   43480:	ldr	x0, [x0, #24]
   43484:	ldrb	w0, [x0]
   43488:	cmp	w0, #0x73
   4348c:	b.ne	434d8 <__asan_cplus_demangle_type@@Base+0x2814>  // b.any
   43490:	ldr	x0, [sp, #24]
   43494:	ldr	x0, [x0, #24]
   43498:	add	x1, x0, #0x1
   4349c:	ldr	x0, [sp, #24]
   434a0:	str	x1, [x0, #24]
   434a4:	ldr	x0, [sp, #24]
   434a8:	bl	435e4 <__asan_cplus_demangle_type@@Base+0x2920>
   434ac:	cmp	w0, #0x0
   434b0:	b.ne	434bc <__asan_cplus_demangle_type@@Base+0x27f8>  // b.any
   434b4:	mov	x0, #0x0                   	// #0
   434b8:	b	435dc <__asan_cplus_demangle_type@@Base+0x2918>
   434bc:	mov	w2, #0xe                   	// #14
   434c0:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   434c4:	add	x1, x0, #0x9e8
   434c8:	ldr	x0, [sp, #24]
   434cc:	bl	3ea28 <__asan_cplus_demangle_fill_dtor@@Base+0x270>
   434d0:	str	x0, [sp, #56]
   434d4:	b	43598 <__asan_cplus_demangle_type@@Base+0x28d4>
   434d8:	mov	w0, #0xffffffff            	// #-1
   434dc:	str	w0, [sp, #52]
   434e0:	ldr	x0, [sp, #24]
   434e4:	ldr	x0, [x0, #24]
   434e8:	ldrb	w0, [x0]
   434ec:	cmp	w0, #0x64
   434f0:	b.ne	43528 <__asan_cplus_demangle_type@@Base+0x2864>  // b.any
   434f4:	ldr	x0, [sp, #24]
   434f8:	ldr	x0, [x0, #24]
   434fc:	add	x1, x0, #0x1
   43500:	ldr	x0, [sp, #24]
   43504:	str	x1, [x0, #24]
   43508:	ldr	x0, [sp, #24]
   4350c:	bl	42318 <__asan_cplus_demangle_type@@Base+0x1654>
   43510:	str	w0, [sp, #52]
   43514:	ldr	w0, [sp, #52]
   43518:	cmp	w0, #0x0
   4351c:	b.ge	43528 <__asan_cplus_demangle_type@@Base+0x2864>  // b.tcont
   43520:	mov	x0, #0x0                   	// #0
   43524:	b	435dc <__asan_cplus_demangle_type@@Base+0x2918>
   43528:	ldr	x0, [sp, #24]
   4352c:	bl	3f230 <__asan_cplus_demangle_mangled_name@@Base+0x4dc>
   43530:	str	x0, [sp, #56]
   43534:	ldr	x0, [sp, #56]
   43538:	cmp	x0, #0x0
   4353c:	b.eq	43578 <__asan_cplus_demangle_type@@Base+0x28b4>  // b.none
   43540:	ldr	x0, [sp, #56]
   43544:	ldr	w0, [x0]
   43548:	cmp	w0, #0x46
   4354c:	b.eq	43578 <__asan_cplus_demangle_type@@Base+0x28b4>  // b.none
   43550:	ldr	x0, [sp, #56]
   43554:	ldr	w0, [x0]
   43558:	cmp	w0, #0x48
   4355c:	b.eq	43578 <__asan_cplus_demangle_type@@Base+0x28b4>  // b.none
   43560:	ldr	x0, [sp, #24]
   43564:	bl	435e4 <__asan_cplus_demangle_type@@Base+0x2920>
   43568:	cmp	w0, #0x0
   4356c:	b.ne	43578 <__asan_cplus_demangle_type@@Base+0x28b4>  // b.any
   43570:	mov	x0, #0x0                   	// #0
   43574:	b	435dc <__asan_cplus_demangle_type@@Base+0x2918>
   43578:	ldr	w0, [sp, #52]
   4357c:	cmp	w0, #0x0
   43580:	b.lt	43598 <__asan_cplus_demangle_type@@Base+0x28d4>  // b.tstop
   43584:	ldr	x2, [sp, #56]
   43588:	ldr	w1, [sp, #52]
   4358c:	ldr	x0, [sp, #24]
   43590:	bl	3eb6c <__asan_cplus_demangle_fill_dtor@@Base+0x3b4>
   43594:	str	x0, [sp, #56]
   43598:	ldr	x0, [sp, #40]
   4359c:	ldr	w0, [x0]
   435a0:	cmp	w0, #0x3
   435a4:	b.ne	435c8 <__asan_cplus_demangle_type@@Base+0x2904>  // b.any
   435a8:	ldr	x0, [sp, #40]
   435ac:	ldr	x0, [x0, #16]
   435b0:	ldr	w0, [x0]
   435b4:	cmp	w0, #0x29
   435b8:	b.ne	435c8 <__asan_cplus_demangle_type@@Base+0x2904>  // b.any
   435bc:	ldr	x0, [sp, #40]
   435c0:	ldr	x0, [x0, #16]
   435c4:	str	xzr, [x0, #8]
   435c8:	ldr	x3, [sp, #56]
   435cc:	ldr	x2, [sp, #40]
   435d0:	mov	w1, #0x2                   	// #2
   435d4:	ldr	x0, [sp, #24]
   435d8:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   435dc:	ldp	x29, x30, [sp], #64
   435e0:	ret
   435e4:	stp	x29, x30, [sp, #-48]!
   435e8:	mov	x29, sp
   435ec:	str	x0, [sp, #24]
   435f0:	mov	w0, #0x1                   	// #1
   435f4:	str	w0, [sp, #44]
   435f8:	ldr	x0, [sp, #24]
   435fc:	ldr	x0, [x0, #24]
   43600:	ldrb	w0, [x0]
   43604:	cmp	w0, #0x5f
   43608:	b.eq	43614 <__asan_cplus_demangle_type@@Base+0x2950>  // b.none
   4360c:	mov	w0, #0x1                   	// #1
   43610:	b	436cc <__asan_cplus_demangle_type@@Base+0x2a08>
   43614:	ldr	x0, [sp, #24]
   43618:	ldr	x0, [x0, #24]
   4361c:	add	x1, x0, #0x1
   43620:	ldr	x0, [sp, #24]
   43624:	str	x1, [x0, #24]
   43628:	ldr	x0, [sp, #24]
   4362c:	ldr	x0, [x0, #24]
   43630:	ldrb	w0, [x0]
   43634:	cmp	w0, #0x5f
   43638:	b.ne	4365c <__asan_cplus_demangle_type@@Base+0x2998>  // b.any
   4363c:	ldr	w0, [sp, #44]
   43640:	add	w0, w0, #0x1
   43644:	str	w0, [sp, #44]
   43648:	ldr	x0, [sp, #24]
   4364c:	ldr	x0, [x0, #24]
   43650:	add	x1, x0, #0x1
   43654:	ldr	x0, [sp, #24]
   43658:	str	x1, [x0, #24]
   4365c:	ldr	x0, [sp, #24]
   43660:	bl	3fa08 <__asan_cplus_demangle_mangled_name@@Base+0xcb4>
   43664:	str	w0, [sp, #40]
   43668:	ldr	w0, [sp, #40]
   4366c:	cmp	w0, #0x0
   43670:	b.ge	4367c <__asan_cplus_demangle_type@@Base+0x29b8>  // b.tcont
   43674:	mov	w0, #0x0                   	// #0
   43678:	b	436cc <__asan_cplus_demangle_type@@Base+0x2a08>
   4367c:	ldr	w0, [sp, #44]
   43680:	cmp	w0, #0x1
   43684:	b.le	436c8 <__asan_cplus_demangle_type@@Base+0x2a04>
   43688:	ldr	w0, [sp, #40]
   4368c:	cmp	w0, #0x9
   43690:	b.le	436c8 <__asan_cplus_demangle_type@@Base+0x2a04>
   43694:	ldr	x0, [sp, #24]
   43698:	ldr	x0, [x0, #24]
   4369c:	ldrb	w0, [x0]
   436a0:	cmp	w0, #0x5f
   436a4:	b.ne	436c0 <__asan_cplus_demangle_type@@Base+0x29fc>  // b.any
   436a8:	ldr	x0, [sp, #24]
   436ac:	ldr	x0, [x0, #24]
   436b0:	add	x1, x0, #0x1
   436b4:	ldr	x0, [sp, #24]
   436b8:	str	x1, [x0, #24]
   436bc:	b	436c8 <__asan_cplus_demangle_type@@Base+0x2a04>
   436c0:	mov	w0, #0x0                   	// #0
   436c4:	b	436cc <__asan_cplus_demangle_type@@Base+0x2a08>
   436c8:	mov	w0, #0x1                   	// #1
   436cc:	ldp	x29, x30, [sp], #48
   436d0:	ret
   436d4:	stp	x29, x30, [sp, #-64]!
   436d8:	mov	x29, sp
   436dc:	str	x0, [sp, #24]
   436e0:	ldr	x0, [sp, #24]
   436e4:	ldr	x0, [x0, #24]
   436e8:	ldrb	w0, [x0]
   436ec:	cmp	w0, #0x55
   436f0:	b.ne	43710 <__asan_cplus_demangle_type@@Base+0x2a4c>  // b.any
   436f4:	ldr	x0, [sp, #24]
   436f8:	ldr	x0, [x0, #24]
   436fc:	add	x1, x0, #0x1
   43700:	ldr	x0, [sp, #24]
   43704:	str	x1, [x0, #24]
   43708:	mov	w0, #0x0                   	// #0
   4370c:	b	43714 <__asan_cplus_demangle_type@@Base+0x2a50>
   43710:	mov	w0, #0x1                   	// #1
   43714:	cmp	w0, #0x0
   43718:	b.eq	43724 <__asan_cplus_demangle_type@@Base+0x2a60>  // b.none
   4371c:	mov	x0, #0x0                   	// #0
   43720:	b	43848 <__asan_cplus_demangle_type@@Base+0x2b84>
   43724:	ldr	x0, [sp, #24]
   43728:	ldr	x0, [x0, #24]
   4372c:	ldrb	w0, [x0]
   43730:	cmp	w0, #0x6c
   43734:	b.ne	43754 <__asan_cplus_demangle_type@@Base+0x2a90>  // b.any
   43738:	ldr	x0, [sp, #24]
   4373c:	ldr	x0, [x0, #24]
   43740:	add	x1, x0, #0x1
   43744:	ldr	x0, [sp, #24]
   43748:	str	x1, [x0, #24]
   4374c:	mov	w0, #0x0                   	// #0
   43750:	b	43758 <__asan_cplus_demangle_type@@Base+0x2a94>
   43754:	mov	w0, #0x1                   	// #1
   43758:	cmp	w0, #0x0
   4375c:	b.eq	43768 <__asan_cplus_demangle_type@@Base+0x2aa4>  // b.none
   43760:	mov	x0, #0x0                   	// #0
   43764:	b	43848 <__asan_cplus_demangle_type@@Base+0x2b84>
   43768:	ldr	x0, [sp, #24]
   4376c:	bl	41dbc <__asan_cplus_demangle_type@@Base+0x10f8>
   43770:	str	x0, [sp, #56]
   43774:	ldr	x0, [sp, #56]
   43778:	cmp	x0, #0x0
   4377c:	b.ne	43788 <__asan_cplus_demangle_type@@Base+0x2ac4>  // b.any
   43780:	mov	x0, #0x0                   	// #0
   43784:	b	43848 <__asan_cplus_demangle_type@@Base+0x2b84>
   43788:	ldr	x0, [sp, #24]
   4378c:	ldr	x0, [x0, #24]
   43790:	ldrb	w0, [x0]
   43794:	cmp	w0, #0x45
   43798:	b.ne	437b8 <__asan_cplus_demangle_type@@Base+0x2af4>  // b.any
   4379c:	ldr	x0, [sp, #24]
   437a0:	ldr	x0, [x0, #24]
   437a4:	add	x1, x0, #0x1
   437a8:	ldr	x0, [sp, #24]
   437ac:	str	x1, [x0, #24]
   437b0:	mov	w0, #0x0                   	// #0
   437b4:	b	437bc <__asan_cplus_demangle_type@@Base+0x2af8>
   437b8:	mov	w0, #0x1                   	// #1
   437bc:	cmp	w0, #0x0
   437c0:	b.eq	437cc <__asan_cplus_demangle_type@@Base+0x2b08>  // b.none
   437c4:	mov	x0, #0x0                   	// #0
   437c8:	b	43848 <__asan_cplus_demangle_type@@Base+0x2b84>
   437cc:	ldr	x0, [sp, #24]
   437d0:	bl	42318 <__asan_cplus_demangle_type@@Base+0x1654>
   437d4:	str	w0, [sp, #52]
   437d8:	ldr	w0, [sp, #52]
   437dc:	cmp	w0, #0x0
   437e0:	b.ge	437ec <__asan_cplus_demangle_type@@Base+0x2b28>  // b.tcont
   437e4:	mov	x0, #0x0                   	// #0
   437e8:	b	43848 <__asan_cplus_demangle_type@@Base+0x2b84>
   437ec:	ldr	x0, [sp, #24]
   437f0:	bl	3e838 <__asan_cplus_demangle_fill_dtor@@Base+0x80>
   437f4:	str	x0, [sp, #40]
   437f8:	ldr	x0, [sp, #40]
   437fc:	cmp	x0, #0x0
   43800:	b.eq	43828 <__asan_cplus_demangle_type@@Base+0x2b64>  // b.none
   43804:	ldr	x0, [sp, #40]
   43808:	mov	w1, #0x46                  	// #70
   4380c:	str	w1, [x0]
   43810:	ldr	x0, [sp, #40]
   43814:	ldr	x1, [sp, #56]
   43818:	str	x1, [x0, #8]
   4381c:	ldr	x0, [sp, #40]
   43820:	ldr	w1, [sp, #52]
   43824:	str	w1, [x0, #16]
   43828:	ldr	x1, [sp, #40]
   4382c:	ldr	x0, [sp, #24]
   43830:	bl	43aec <__asan_cplus_demangle_type@@Base+0x2e28>
   43834:	cmp	w0, #0x0
   43838:	b.ne	43844 <__asan_cplus_demangle_type@@Base+0x2b80>  // b.any
   4383c:	mov	x0, #0x0                   	// #0
   43840:	b	43848 <__asan_cplus_demangle_type@@Base+0x2b84>
   43844:	ldr	x0, [sp, #40]
   43848:	ldp	x29, x30, [sp], #64
   4384c:	ret
   43850:	stp	x29, x30, [sp, #-48]!
   43854:	mov	x29, sp
   43858:	str	x0, [sp, #24]
   4385c:	ldr	x0, [sp, #24]
   43860:	ldr	x0, [x0, #24]
   43864:	ldrb	w0, [x0]
   43868:	cmp	w0, #0x55
   4386c:	b.ne	4388c <__asan_cplus_demangle_type@@Base+0x2bc8>  // b.any
   43870:	ldr	x0, [sp, #24]
   43874:	ldr	x0, [x0, #24]
   43878:	add	x1, x0, #0x1
   4387c:	ldr	x0, [sp, #24]
   43880:	str	x1, [x0, #24]
   43884:	mov	w0, #0x0                   	// #0
   43888:	b	43890 <__asan_cplus_demangle_type@@Base+0x2bcc>
   4388c:	mov	w0, #0x1                   	// #1
   43890:	cmp	w0, #0x0
   43894:	b.eq	438a0 <__asan_cplus_demangle_type@@Base+0x2bdc>  // b.none
   43898:	mov	x0, #0x0                   	// #0
   4389c:	b	43954 <__asan_cplus_demangle_type@@Base+0x2c90>
   438a0:	ldr	x0, [sp, #24]
   438a4:	ldr	x0, [x0, #24]
   438a8:	ldrb	w0, [x0]
   438ac:	cmp	w0, #0x74
   438b0:	b.ne	438d0 <__asan_cplus_demangle_type@@Base+0x2c0c>  // b.any
   438b4:	ldr	x0, [sp, #24]
   438b8:	ldr	x0, [x0, #24]
   438bc:	add	x1, x0, #0x1
   438c0:	ldr	x0, [sp, #24]
   438c4:	str	x1, [x0, #24]
   438c8:	mov	w0, #0x0                   	// #0
   438cc:	b	438d4 <__asan_cplus_demangle_type@@Base+0x2c10>
   438d0:	mov	w0, #0x1                   	// #1
   438d4:	cmp	w0, #0x0
   438d8:	b.eq	438e4 <__asan_cplus_demangle_type@@Base+0x2c20>  // b.none
   438dc:	mov	x0, #0x0                   	// #0
   438e0:	b	43954 <__asan_cplus_demangle_type@@Base+0x2c90>
   438e4:	ldr	x0, [sp, #24]
   438e8:	bl	42318 <__asan_cplus_demangle_type@@Base+0x1654>
   438ec:	str	w0, [sp, #44]
   438f0:	ldr	w0, [sp, #44]
   438f4:	cmp	w0, #0x0
   438f8:	b.ge	43904 <__asan_cplus_demangle_type@@Base+0x2c40>  // b.tcont
   438fc:	mov	x0, #0x0                   	// #0
   43900:	b	43954 <__asan_cplus_demangle_type@@Base+0x2c90>
   43904:	ldr	x0, [sp, #24]
   43908:	bl	3e838 <__asan_cplus_demangle_fill_dtor@@Base+0x80>
   4390c:	str	x0, [sp, #32]
   43910:	ldr	x0, [sp, #32]
   43914:	cmp	x0, #0x0
   43918:	b.eq	43934 <__asan_cplus_demangle_type@@Base+0x2c70>  // b.none
   4391c:	ldr	x0, [sp, #32]
   43920:	mov	w1, #0x48                  	// #72
   43924:	str	w1, [x0]
   43928:	ldrsw	x1, [sp, #44]
   4392c:	ldr	x0, [sp, #32]
   43930:	str	x1, [x0, #8]
   43934:	ldr	x1, [sp, #32]
   43938:	ldr	x0, [sp, #24]
   4393c:	bl	43aec <__asan_cplus_demangle_type@@Base+0x2e28>
   43940:	cmp	w0, #0x0
   43944:	b.ne	43950 <__asan_cplus_demangle_type@@Base+0x2c8c>  // b.any
   43948:	mov	x0, #0x0                   	// #0
   4394c:	b	43954 <__asan_cplus_demangle_type@@Base+0x2c90>
   43950:	ldr	x0, [sp, #32]
   43954:	ldp	x29, x30, [sp], #48
   43958:	ret
   4395c:	stp	x29, x30, [sp, #-64]!
   43960:	mov	x29, sp
   43964:	str	x0, [sp, #24]
   43968:	str	x1, [sp, #16]
   4396c:	ldr	x0, [sp, #24]
   43970:	ldr	x0, [x0, #24]
   43974:	str	x0, [sp, #48]
   43978:	ldr	x0, [sp, #48]
   4397c:	str	x0, [sp, #56]
   43980:	ldr	x0, [sp, #56]
   43984:	ldrb	w0, [x0]
   43988:	cmp	w0, #0x2e
   4398c:	b.ne	43a58 <__asan_cplus_demangle_type@@Base+0x2d94>  // b.any
   43990:	ldr	x0, [sp, #56]
   43994:	add	x0, x0, #0x1
   43998:	ldrb	w0, [x0]
   4399c:	cmp	w0, #0x60
   439a0:	b.ls	439b8 <__asan_cplus_demangle_type@@Base+0x2cf4>  // b.plast
   439a4:	ldr	x0, [sp, #56]
   439a8:	add	x0, x0, #0x1
   439ac:	ldrb	w0, [x0]
   439b0:	cmp	w0, #0x7a
   439b4:	b.ls	439cc <__asan_cplus_demangle_type@@Base+0x2d08>  // b.plast
   439b8:	ldr	x0, [sp, #56]
   439bc:	add	x0, x0, #0x1
   439c0:	ldrb	w0, [x0]
   439c4:	cmp	w0, #0x5f
   439c8:	b.ne	43a58 <__asan_cplus_demangle_type@@Base+0x2d94>  // b.any
   439cc:	ldr	x0, [sp, #56]
   439d0:	add	x0, x0, #0x2
   439d4:	str	x0, [sp, #56]
   439d8:	b	439e8 <__asan_cplus_demangle_type@@Base+0x2d24>
   439dc:	ldr	x0, [sp, #56]
   439e0:	add	x0, x0, #0x1
   439e4:	str	x0, [sp, #56]
   439e8:	ldr	x0, [sp, #56]
   439ec:	ldrb	w0, [x0]
   439f0:	cmp	w0, #0x60
   439f4:	b.ls	43a08 <__asan_cplus_demangle_type@@Base+0x2d44>  // b.plast
   439f8:	ldr	x0, [sp, #56]
   439fc:	ldrb	w0, [x0]
   43a00:	cmp	w0, #0x7a
   43a04:	b.ls	439dc <__asan_cplus_demangle_type@@Base+0x2d18>  // b.plast
   43a08:	ldr	x0, [sp, #56]
   43a0c:	ldrb	w0, [x0]
   43a10:	cmp	w0, #0x5f
   43a14:	b.eq	439dc <__asan_cplus_demangle_type@@Base+0x2d18>  // b.none
   43a18:	b	43a58 <__asan_cplus_demangle_type@@Base+0x2d94>
   43a1c:	ldr	x0, [sp, #56]
   43a20:	add	x0, x0, #0x2
   43a24:	str	x0, [sp, #56]
   43a28:	b	43a38 <__asan_cplus_demangle_type@@Base+0x2d74>
   43a2c:	ldr	x0, [sp, #56]
   43a30:	add	x0, x0, #0x1
   43a34:	str	x0, [sp, #56]
   43a38:	ldr	x0, [sp, #56]
   43a3c:	ldrb	w0, [x0]
   43a40:	cmp	w0, #0x2f
   43a44:	b.ls	43a58 <__asan_cplus_demangle_type@@Base+0x2d94>  // b.plast
   43a48:	ldr	x0, [sp, #56]
   43a4c:	ldrb	w0, [x0]
   43a50:	cmp	w0, #0x39
   43a54:	b.ls	43a2c <__asan_cplus_demangle_type@@Base+0x2d68>  // b.plast
   43a58:	ldr	x0, [sp, #56]
   43a5c:	ldrb	w0, [x0]
   43a60:	cmp	w0, #0x2e
   43a64:	b.ne	43a90 <__asan_cplus_demangle_type@@Base+0x2dcc>  // b.any
   43a68:	ldr	x0, [sp, #56]
   43a6c:	add	x0, x0, #0x1
   43a70:	ldrb	w0, [x0]
   43a74:	cmp	w0, #0x2f
   43a78:	b.ls	43a90 <__asan_cplus_demangle_type@@Base+0x2dcc>  // b.plast
   43a7c:	ldr	x0, [sp, #56]
   43a80:	add	x0, x0, #0x1
   43a84:	ldrb	w0, [x0]
   43a88:	cmp	w0, #0x39
   43a8c:	b.ls	43a1c <__asan_cplus_demangle_type@@Base+0x2d58>  // b.plast
   43a90:	ldr	x0, [sp, #24]
   43a94:	ldr	x0, [x0, #24]
   43a98:	ldr	x2, [sp, #56]
   43a9c:	ldr	x1, [sp, #48]
   43aa0:	sub	x1, x2, x1
   43aa4:	add	x1, x0, x1
   43aa8:	ldr	x0, [sp, #24]
   43aac:	str	x1, [x0, #24]
   43ab0:	ldr	x1, [sp, #56]
   43ab4:	ldr	x0, [sp, #48]
   43ab8:	sub	x0, x1, x0
   43abc:	mov	w2, w0
   43ac0:	ldr	x1, [sp, #48]
   43ac4:	ldr	x0, [sp, #24]
   43ac8:	bl	3ea28 <__asan_cplus_demangle_fill_dtor@@Base+0x270>
   43acc:	str	x0, [sp, #40]
   43ad0:	ldr	x3, [sp, #40]
   43ad4:	ldr	x2, [sp, #16]
   43ad8:	mov	w1, #0x4e                  	// #78
   43adc:	ldr	x0, [sp, #24]
   43ae0:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   43ae4:	ldp	x29, x30, [sp], #64
   43ae8:	ret
   43aec:	sub	sp, sp, #0x10
   43af0:	str	x0, [sp, #8]
   43af4:	str	x1, [sp]
   43af8:	ldr	x0, [sp]
   43afc:	cmp	x0, #0x0
   43b00:	b.ne	43b0c <__asan_cplus_demangle_type@@Base+0x2e48>  // b.any
   43b04:	mov	w0, #0x0                   	// #0
   43b08:	b	43b68 <__asan_cplus_demangle_type@@Base+0x2ea4>
   43b0c:	ldr	x0, [sp, #8]
   43b10:	ldr	w1, [x0, #56]
   43b14:	ldr	x0, [sp, #8]
   43b18:	ldr	w0, [x0, #60]
   43b1c:	cmp	w1, w0
   43b20:	b.lt	43b2c <__asan_cplus_demangle_type@@Base+0x2e68>  // b.tstop
   43b24:	mov	w0, #0x0                   	// #0
   43b28:	b	43b68 <__asan_cplus_demangle_type@@Base+0x2ea4>
   43b2c:	ldr	x0, [sp, #8]
   43b30:	ldr	x1, [x0, #48]
   43b34:	ldr	x0, [sp, #8]
   43b38:	ldr	w0, [x0, #56]
   43b3c:	sxtw	x0, w0
   43b40:	lsl	x0, x0, #3
   43b44:	add	x0, x1, x0
   43b48:	ldr	x1, [sp]
   43b4c:	str	x1, [x0]
   43b50:	ldr	x0, [sp, #8]
   43b54:	ldr	w0, [x0, #56]
   43b58:	add	w1, w0, #0x1
   43b5c:	ldr	x0, [sp, #8]
   43b60:	str	w1, [x0, #56]
   43b64:	mov	w0, #0x1                   	// #1
   43b68:	add	sp, sp, #0x10
   43b6c:	ret
   43b70:	stp	x29, x30, [sp, #-96]!
   43b74:	mov	x29, sp
   43b78:	str	x0, [sp, #24]
   43b7c:	str	w1, [sp, #20]
   43b80:	ldr	x0, [sp, #24]
   43b84:	ldr	x0, [x0, #24]
   43b88:	ldrb	w0, [x0]
   43b8c:	cmp	w0, #0x53
   43b90:	b.ne	43bb0 <__asan_cplus_demangle_type@@Base+0x2eec>  // b.any
   43b94:	ldr	x0, [sp, #24]
   43b98:	ldr	x0, [x0, #24]
   43b9c:	add	x1, x0, #0x1
   43ba0:	ldr	x0, [sp, #24]
   43ba4:	str	x1, [x0, #24]
   43ba8:	mov	w0, #0x0                   	// #0
   43bac:	b	43bb4 <__asan_cplus_demangle_type@@Base+0x2ef0>
   43bb0:	mov	w0, #0x1                   	// #1
   43bb4:	cmp	w0, #0x0
   43bb8:	b.eq	43bc4 <__asan_cplus_demangle_type@@Base+0x2f00>  // b.none
   43bbc:	mov	x0, #0x0                   	// #0
   43bc0:	b	43f24 <__asan_cplus_demangle_type@@Base+0x3260>
   43bc4:	ldr	x0, [sp, #24]
   43bc8:	ldr	x0, [x0, #24]
   43bcc:	ldrb	w0, [x0]
   43bd0:	cmp	w0, #0x0
   43bd4:	b.eq	43bf4 <__asan_cplus_demangle_type@@Base+0x2f30>  // b.none
   43bd8:	ldr	x0, [sp, #24]
   43bdc:	ldr	x0, [x0, #24]
   43be0:	add	x2, x0, #0x1
   43be4:	ldr	x1, [sp, #24]
   43be8:	str	x2, [x1, #24]
   43bec:	ldrb	w0, [x0]
   43bf0:	b	43bf8 <__asan_cplus_demangle_type@@Base+0x2f34>
   43bf4:	mov	w0, #0x0                   	// #0
   43bf8:	strb	w0, [sp, #95]
   43bfc:	ldrb	w0, [sp, #95]
   43c00:	cmp	w0, #0x5f
   43c04:	b.eq	43c38 <__asan_cplus_demangle_type@@Base+0x2f74>  // b.none
   43c08:	ldrb	w0, [sp, #95]
   43c0c:	cmp	w0, #0x2f
   43c10:	b.ls	43c20 <__asan_cplus_demangle_type@@Base+0x2f5c>  // b.plast
   43c14:	ldrb	w0, [sp, #95]
   43c18:	cmp	w0, #0x39
   43c1c:	b.ls	43c38 <__asan_cplus_demangle_type@@Base+0x2f74>  // b.plast
   43c20:	ldrb	w0, [sp, #95]
   43c24:	cmp	w0, #0x40
   43c28:	b.ls	43d84 <__asan_cplus_demangle_type@@Base+0x30c0>  // b.plast
   43c2c:	ldrb	w0, [sp, #95]
   43c30:	cmp	w0, #0x5a
   43c34:	b.hi	43d84 <__asan_cplus_demangle_type@@Base+0x30c0>  // b.pmore
   43c38:	str	wzr, [sp, #88]
   43c3c:	ldrb	w0, [sp, #95]
   43c40:	cmp	w0, #0x5f
   43c44:	b.eq	43d48 <__asan_cplus_demangle_type@@Base+0x3084>  // b.none
   43c48:	ldrb	w0, [sp, #95]
   43c4c:	cmp	w0, #0x2f
   43c50:	b.ls	43c8c <__asan_cplus_demangle_type@@Base+0x2fc8>  // b.plast
   43c54:	ldrb	w0, [sp, #95]
   43c58:	cmp	w0, #0x39
   43c5c:	b.hi	43c8c <__asan_cplus_demangle_type@@Base+0x2fc8>  // b.pmore
   43c60:	ldr	w1, [sp, #88]
   43c64:	mov	w0, w1
   43c68:	lsl	w0, w0, #3
   43c6c:	add	w0, w0, w1
   43c70:	lsl	w0, w0, #2
   43c74:	mov	w1, w0
   43c78:	ldrb	w0, [sp, #95]
   43c7c:	add	w0, w1, w0
   43c80:	sub	w0, w0, #0x30
   43c84:	str	w0, [sp, #84]
   43c88:	b	43cd8 <__asan_cplus_demangle_type@@Base+0x3014>
   43c8c:	ldrb	w0, [sp, #95]
   43c90:	cmp	w0, #0x40
   43c94:	b.ls	43cd0 <__asan_cplus_demangle_type@@Base+0x300c>  // b.plast
   43c98:	ldrb	w0, [sp, #95]
   43c9c:	cmp	w0, #0x5a
   43ca0:	b.hi	43cd0 <__asan_cplus_demangle_type@@Base+0x300c>  // b.pmore
   43ca4:	ldr	w1, [sp, #88]
   43ca8:	mov	w0, w1
   43cac:	lsl	w0, w0, #3
   43cb0:	add	w0, w0, w1
   43cb4:	lsl	w0, w0, #2
   43cb8:	mov	w1, w0
   43cbc:	ldrb	w0, [sp, #95]
   43cc0:	add	w0, w1, w0
   43cc4:	sub	w0, w0, #0x37
   43cc8:	str	w0, [sp, #84]
   43ccc:	b	43cd8 <__asan_cplus_demangle_type@@Base+0x3014>
   43cd0:	mov	x0, #0x0                   	// #0
   43cd4:	b	43f24 <__asan_cplus_demangle_type@@Base+0x3260>
   43cd8:	ldr	w1, [sp, #84]
   43cdc:	ldr	w0, [sp, #88]
   43ce0:	cmp	w1, w0
   43ce4:	b.cs	43cf0 <__asan_cplus_demangle_type@@Base+0x302c>  // b.hs, b.nlast
   43ce8:	mov	x0, #0x0                   	// #0
   43cec:	b	43f24 <__asan_cplus_demangle_type@@Base+0x3260>
   43cf0:	ldr	w0, [sp, #84]
   43cf4:	str	w0, [sp, #88]
   43cf8:	ldr	x0, [sp, #24]
   43cfc:	ldr	x0, [x0, #24]
   43d00:	ldrb	w0, [x0]
   43d04:	cmp	w0, #0x0
   43d08:	b.eq	43d28 <__asan_cplus_demangle_type@@Base+0x3064>  // b.none
   43d0c:	ldr	x0, [sp, #24]
   43d10:	ldr	x0, [x0, #24]
   43d14:	add	x2, x0, #0x1
   43d18:	ldr	x1, [sp, #24]
   43d1c:	str	x2, [x1, #24]
   43d20:	ldrb	w0, [x0]
   43d24:	b	43d2c <__asan_cplus_demangle_type@@Base+0x3068>
   43d28:	mov	w0, #0x0                   	// #0
   43d2c:	strb	w0, [sp, #95]
   43d30:	ldrb	w0, [sp, #95]
   43d34:	cmp	w0, #0x5f
   43d38:	b.ne	43c48 <__asan_cplus_demangle_type@@Base+0x2f84>  // b.any
   43d3c:	ldr	w0, [sp, #88]
   43d40:	add	w0, w0, #0x1
   43d44:	str	w0, [sp, #88]
   43d48:	ldr	x0, [sp, #24]
   43d4c:	ldr	w0, [x0, #56]
   43d50:	mov	w1, w0
   43d54:	ldr	w0, [sp, #88]
   43d58:	cmp	w0, w1
   43d5c:	b.cc	43d68 <__asan_cplus_demangle_type@@Base+0x30a4>  // b.lo, b.ul, b.last
   43d60:	mov	x0, #0x0                   	// #0
   43d64:	b	43f24 <__asan_cplus_demangle_type@@Base+0x3260>
   43d68:	ldr	x0, [sp, #24]
   43d6c:	ldr	x1, [x0, #48]
   43d70:	ldr	w0, [sp, #88]
   43d74:	lsl	x0, x0, #3
   43d78:	add	x0, x1, x0
   43d7c:	ldr	x0, [x0]
   43d80:	b	43f24 <__asan_cplus_demangle_type@@Base+0x3260>
   43d84:	ldr	x0, [sp, #24]
   43d88:	ldr	w0, [x0, #16]
   43d8c:	and	w0, w0, #0x8
   43d90:	cmp	w0, #0x0
   43d94:	cset	w0, ne  // ne = any
   43d98:	and	w0, w0, #0xff
   43d9c:	str	w0, [sp, #80]
   43da0:	ldr	w0, [sp, #80]
   43da4:	cmp	w0, #0x0
   43da8:	b.ne	43de8 <__asan_cplus_demangle_type@@Base+0x3124>  // b.any
   43dac:	ldr	w0, [sp, #20]
   43db0:	cmp	w0, #0x0
   43db4:	b.eq	43de8 <__asan_cplus_demangle_type@@Base+0x3124>  // b.none
   43db8:	ldr	x0, [sp, #24]
   43dbc:	ldr	x0, [x0, #24]
   43dc0:	ldrb	w0, [x0]
   43dc4:	strb	w0, [sp, #47]
   43dc8:	ldrb	w0, [sp, #47]
   43dcc:	cmp	w0, #0x43
   43dd0:	b.eq	43de0 <__asan_cplus_demangle_type@@Base+0x311c>  // b.none
   43dd4:	ldrb	w0, [sp, #47]
   43dd8:	cmp	w0, #0x44
   43ddc:	b.ne	43de8 <__asan_cplus_demangle_type@@Base+0x3124>  // b.any
   43de0:	mov	w0, #0x1                   	// #1
   43de4:	str	w0, [sp, #80]
   43de8:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   43dec:	add	x0, x0, #0xa88
   43df0:	str	x0, [sp, #32]
   43df4:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   43df8:	add	x0, x0, #0x900
   43dfc:	str	x0, [sp, #72]
   43e00:	b	43f10 <__asan_cplus_demangle_type@@Base+0x324c>
   43e04:	ldr	x0, [sp, #72]
   43e08:	ldrb	w0, [x0]
   43e0c:	ldrb	w1, [sp, #95]
   43e10:	cmp	w1, w0
   43e14:	b.ne	43f04 <__asan_cplus_demangle_type@@Base+0x3240>  // b.any
   43e18:	ldr	x0, [sp, #72]
   43e1c:	ldr	x0, [x0, #40]
   43e20:	cmp	x0, #0x0
   43e24:	b.eq	43e50 <__asan_cplus_demangle_type@@Base+0x318c>  // b.none
   43e28:	ldr	x0, [sp, #72]
   43e2c:	ldr	x1, [x0, #40]
   43e30:	ldr	x0, [sp, #72]
   43e34:	ldr	w0, [x0, #48]
   43e38:	mov	w2, w0
   43e3c:	ldr	x0, [sp, #24]
   43e40:	bl	3ecf8 <__asan_cplus_demangle_fill_dtor@@Base+0x540>
   43e44:	mov	x1, x0
   43e48:	ldr	x0, [sp, #24]
   43e4c:	str	x1, [x0, #64]
   43e50:	ldr	w0, [sp, #80]
   43e54:	cmp	w0, #0x0
   43e58:	b.eq	43e78 <__asan_cplus_demangle_type@@Base+0x31b4>  // b.none
   43e5c:	ldr	x0, [sp, #72]
   43e60:	ldr	x0, [x0, #24]
   43e64:	str	x0, [sp, #64]
   43e68:	ldr	x0, [sp, #72]
   43e6c:	ldr	w0, [x0, #32]
   43e70:	str	w0, [sp, #60]
   43e74:	b	43e90 <__asan_cplus_demangle_type@@Base+0x31cc>
   43e78:	ldr	x0, [sp, #72]
   43e7c:	ldr	x0, [x0, #8]
   43e80:	str	x0, [sp, #64]
   43e84:	ldr	x0, [sp, #72]
   43e88:	ldr	w0, [x0, #16]
   43e8c:	str	w0, [sp, #60]
   43e90:	ldr	x0, [sp, #24]
   43e94:	ldr	w1, [x0, #72]
   43e98:	ldr	w0, [sp, #60]
   43e9c:	add	w1, w1, w0
   43ea0:	ldr	x0, [sp, #24]
   43ea4:	str	w1, [x0, #72]
   43ea8:	ldr	w2, [sp, #60]
   43eac:	ldr	x1, [sp, #64]
   43eb0:	ldr	x0, [sp, #24]
   43eb4:	bl	3ecf8 <__asan_cplus_demangle_fill_dtor@@Base+0x540>
   43eb8:	str	x0, [sp, #48]
   43ebc:	ldr	x0, [sp, #24]
   43ec0:	ldr	x0, [x0, #24]
   43ec4:	ldrb	w0, [x0]
   43ec8:	cmp	w0, #0x42
   43ecc:	b.ne	43efc <__asan_cplus_demangle_type@@Base+0x3238>  // b.any
   43ed0:	ldr	x1, [sp, #48]
   43ed4:	ldr	x0, [sp, #24]
   43ed8:	bl	3f1a4 <__asan_cplus_demangle_mangled_name@@Base+0x450>
   43edc:	str	x0, [sp, #48]
   43ee0:	ldr	x1, [sp, #48]
   43ee4:	ldr	x0, [sp, #24]
   43ee8:	bl	43aec <__asan_cplus_demangle_type@@Base+0x2e28>
   43eec:	cmp	w0, #0x0
   43ef0:	b.ne	43efc <__asan_cplus_demangle_type@@Base+0x3238>  // b.any
   43ef4:	mov	x0, #0x0                   	// #0
   43ef8:	b	43f24 <__asan_cplus_demangle_type@@Base+0x3260>
   43efc:	ldr	x0, [sp, #48]
   43f00:	b	43f24 <__asan_cplus_demangle_type@@Base+0x3260>
   43f04:	ldr	x0, [sp, #72]
   43f08:	add	x0, x0, #0x38
   43f0c:	str	x0, [sp, #72]
   43f10:	ldr	x1, [sp, #72]
   43f14:	ldr	x0, [sp, #32]
   43f18:	cmp	x1, x0
   43f1c:	b.cc	43e04 <__asan_cplus_demangle_type@@Base+0x3140>  // b.lo, b.ul, b.last
   43f20:	mov	x0, #0x0                   	// #0
   43f24:	ldp	x29, x30, [sp], #96
   43f28:	ret
   43f2c:	sub	sp, sp, #0x10
   43f30:	str	x0, [sp, #8]
   43f34:	str	x1, [sp]
   43f38:	ldr	x0, [sp, #8]
   43f3c:	ldr	x1, [x0, #24]
   43f40:	ldr	x0, [sp]
   43f44:	str	x1, [x0]
   43f48:	ldr	x0, [sp, #8]
   43f4c:	ldr	w1, [x0, #40]
   43f50:	ldr	x0, [sp]
   43f54:	str	w1, [x0, #8]
   43f58:	ldr	x0, [sp, #8]
   43f5c:	ldr	w1, [x0, #56]
   43f60:	ldr	x0, [sp]
   43f64:	str	w1, [x0, #12]
   43f68:	ldr	x0, [sp, #8]
   43f6c:	ldr	w1, [x0, #72]
   43f70:	ldr	x0, [sp]
   43f74:	str	w1, [x0, #16]
   43f78:	nop
   43f7c:	add	sp, sp, #0x10
   43f80:	ret
   43f84:	sub	sp, sp, #0x10
   43f88:	str	x0, [sp, #8]
   43f8c:	str	x1, [sp]
   43f90:	ldr	x0, [sp]
   43f94:	ldr	x1, [x0]
   43f98:	ldr	x0, [sp, #8]
   43f9c:	str	x1, [x0, #24]
   43fa0:	ldr	x0, [sp]
   43fa4:	ldr	w1, [x0, #8]
   43fa8:	ldr	x0, [sp, #8]
   43fac:	str	w1, [x0, #40]
   43fb0:	ldr	x0, [sp]
   43fb4:	ldr	w1, [x0, #12]
   43fb8:	ldr	x0, [sp, #8]
   43fbc:	str	w1, [x0, #56]
   43fc0:	ldr	x0, [sp]
   43fc4:	ldr	w1, [x0, #16]
   43fc8:	ldr	x0, [sp, #8]
   43fcc:	str	w1, [x0, #72]
   43fd0:	nop
   43fd4:	add	sp, sp, #0x10
   43fd8:	ret
   43fdc:	stp	x29, x30, [sp, #-32]!
   43fe0:	mov	x29, sp
   43fe4:	str	x0, [sp, #24]
   43fe8:	str	x1, [sp, #16]
   43fec:	ldr	x0, [sp, #24]
   43ff0:	str	xzr, [x0]
   43ff4:	ldr	x0, [sp, #24]
   43ff8:	str	xzr, [x0, #8]
   43ffc:	ldr	x0, [sp, #24]
   44000:	str	xzr, [x0, #16]
   44004:	ldr	x0, [sp, #24]
   44008:	str	wzr, [x0, #24]
   4400c:	ldr	x0, [sp, #16]
   44010:	cmp	x0, #0x0
   44014:	b.eq	44024 <__asan_cplus_demangle_type@@Base+0x3360>  // b.none
   44018:	ldr	x1, [sp, #16]
   4401c:	ldr	x0, [sp, #24]
   44020:	bl	44030 <__asan_cplus_demangle_type@@Base+0x336c>
   44024:	nop
   44028:	ldp	x29, x30, [sp], #32
   4402c:	ret
   44030:	stp	x29, x30, [sp, #-48]!
   44034:	mov	x29, sp
   44038:	str	x0, [sp, #24]
   4403c:	str	x1, [sp, #16]
   44040:	ldr	x0, [sp, #24]
   44044:	ldr	w0, [x0, #24]
   44048:	cmp	w0, #0x0
   4404c:	b.ne	44104 <__asan_cplus_demangle_type@@Base+0x3440>  // b.any
   44050:	ldr	x0, [sp, #24]
   44054:	ldr	x0, [x0, #16]
   44058:	cmp	x0, #0x0
   4405c:	b.eq	4406c <__asan_cplus_demangle_type@@Base+0x33a8>  // b.none
   44060:	ldr	x0, [sp, #24]
   44064:	ldr	x0, [x0, #16]
   44068:	b	44070 <__asan_cplus_demangle_type@@Base+0x33ac>
   4406c:	mov	x0, #0x2                   	// #2
   44070:	str	x0, [sp, #40]
   44074:	b	44084 <__asan_cplus_demangle_type@@Base+0x33c0>
   44078:	ldr	x0, [sp, #40]
   4407c:	lsl	x0, x0, #1
   44080:	str	x0, [sp, #40]
   44084:	ldr	x1, [sp, #40]
   44088:	ldr	x0, [sp, #16]
   4408c:	cmp	x1, x0
   44090:	b.cc	44078 <__asan_cplus_demangle_type@@Base+0x33b4>  // b.lo, b.ul, b.last
   44094:	ldr	x0, [sp, #24]
   44098:	ldr	x0, [x0]
   4409c:	ldr	x1, [sp, #40]
   440a0:	bl	6e90 <realloc@plt>
   440a4:	str	x0, [sp, #32]
   440a8:	ldr	x0, [sp, #32]
   440ac:	cmp	x0, #0x0
   440b0:	b.ne	440e8 <__asan_cplus_demangle_type@@Base+0x3424>  // b.any
   440b4:	ldr	x0, [sp, #24]
   440b8:	ldr	x0, [x0]
   440bc:	bl	6930 <free@plt>
   440c0:	ldr	x0, [sp, #24]
   440c4:	str	xzr, [x0]
   440c8:	ldr	x0, [sp, #24]
   440cc:	str	xzr, [x0, #8]
   440d0:	ldr	x0, [sp, #24]
   440d4:	str	xzr, [x0, #16]
   440d8:	ldr	x0, [sp, #24]
   440dc:	mov	w1, #0x1                   	// #1
   440e0:	str	w1, [x0, #24]
   440e4:	b	44108 <__asan_cplus_demangle_type@@Base+0x3444>
   440e8:	ldr	x0, [sp, #24]
   440ec:	ldr	x1, [sp, #32]
   440f0:	str	x1, [x0]
   440f4:	ldr	x0, [sp, #24]
   440f8:	ldr	x1, [sp, #40]
   440fc:	str	x1, [x0, #16]
   44100:	b	44108 <__asan_cplus_demangle_type@@Base+0x3444>
   44104:	nop
   44108:	ldp	x29, x30, [sp], #48
   4410c:	ret
   44110:	stp	x29, x30, [sp, #-64]!
   44114:	mov	x29, sp
   44118:	str	x0, [sp, #40]
   4411c:	str	x1, [sp, #32]
   44120:	str	x2, [sp, #24]
   44124:	ldr	x0, [sp, #40]
   44128:	ldr	x1, [x0, #8]
   4412c:	ldr	x0, [sp, #24]
   44130:	add	x0, x1, x0
   44134:	add	x0, x0, #0x1
   44138:	str	x0, [sp, #56]
   4413c:	ldr	x0, [sp, #40]
   44140:	ldr	x0, [x0, #16]
   44144:	ldr	x1, [sp, #56]
   44148:	cmp	x1, x0
   4414c:	b.ls	4415c <__asan_cplus_demangle_type@@Base+0x3498>  // b.plast
   44150:	ldr	x1, [sp, #56]
   44154:	ldr	x0, [sp, #40]
   44158:	bl	44030 <__asan_cplus_demangle_type@@Base+0x336c>
   4415c:	ldr	x0, [sp, #40]
   44160:	ldr	w0, [x0, #24]
   44164:	cmp	w0, #0x0
   44168:	b.ne	441c8 <__asan_cplus_demangle_type@@Base+0x3504>  // b.any
   4416c:	ldr	x0, [sp, #40]
   44170:	ldr	x1, [x0]
   44174:	ldr	x0, [sp, #40]
   44178:	ldr	x0, [x0, #8]
   4417c:	add	x0, x1, x0
   44180:	ldr	x2, [sp, #24]
   44184:	ldr	x1, [sp, #32]
   44188:	bl	6a10 <__asan_internal_memcpy@plt>
   4418c:	ldr	x0, [sp, #40]
   44190:	ldr	x1, [x0]
   44194:	ldr	x0, [sp, #40]
   44198:	ldr	x2, [x0, #8]
   4419c:	ldr	x0, [sp, #24]
   441a0:	add	x0, x2, x0
   441a4:	add	x0, x1, x0
   441a8:	strb	wzr, [x0]
   441ac:	ldr	x0, [sp, #40]
   441b0:	ldr	x1, [x0, #8]
   441b4:	ldr	x0, [sp, #24]
   441b8:	add	x1, x1, x0
   441bc:	ldr	x0, [sp, #40]
   441c0:	str	x1, [x0, #8]
   441c4:	b	441cc <__asan_cplus_demangle_type@@Base+0x3508>
   441c8:	nop
   441cc:	ldp	x29, x30, [sp], #64
   441d0:	ret
   441d4:	stp	x29, x30, [sp, #-64]!
   441d8:	mov	x29, sp
   441dc:	str	x0, [sp, #40]
   441e0:	str	x1, [sp, #32]
   441e4:	str	x2, [sp, #24]
   441e8:	ldr	x0, [sp, #24]
   441ec:	str	x0, [sp, #56]
   441f0:	ldr	x2, [sp, #32]
   441f4:	ldr	x1, [sp, #40]
   441f8:	ldr	x0, [sp, #56]
   441fc:	bl	44110 <__asan_cplus_demangle_type@@Base+0x344c>
   44200:	nop
   44204:	ldp	x29, x30, [sp], #64
   44208:	ret
   4420c:	stp	x29, x30, [sp, #-32]!
   44210:	mov	x29, sp
   44214:	str	x0, [sp, #24]
   44218:	str	x1, [sp, #16]
   4421c:	ldr	x0, [sp, #16]
   44220:	cmp	x0, #0x0
   44224:	b.eq	44388 <__asan_cplus_demangle_type@@Base+0x36c4>  // b.none
   44228:	ldr	x0, [sp, #16]
   4422c:	ldr	w0, [x0]
   44230:	cmp	w0, #0x50
   44234:	b.hi	4439c <__asan_cplus_demangle_type@@Base+0x36d8>  // b.pmore
   44238:	adrp	x1, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   4423c:	add	x1, x1, #0xba0
   44240:	ldr	w0, [x1, w0, uxtw #2]
   44244:	adr	x1, 44250 <__asan_cplus_demangle_type@@Base+0x358c>
   44248:	add	x0, x1, w0, sxtw #2
   4424c:	br	x0
   44250:	ldr	x0, [sp, #24]
   44254:	ldr	w0, [x0, #364]
   44258:	add	w1, w0, #0x1
   4425c:	ldr	x0, [sp, #24]
   44260:	str	w1, [x0, #364]
   44264:	b	44294 <__asan_cplus_demangle_type@@Base+0x35d0>
   44268:	ldr	x0, [sp, #16]
   4426c:	ldr	x0, [x0, #8]
   44270:	ldr	w0, [x0]
   44274:	cmp	w0, #0x5
   44278:	b.ne	44290 <__asan_cplus_demangle_type@@Base+0x35cc>  // b.any
   4427c:	ldr	x0, [sp, #24]
   44280:	ldr	w0, [x0, #348]
   44284:	add	w1, w0, #0x1
   44288:	ldr	x0, [sp, #24]
   4428c:	str	w1, [x0, #348]
   44290:	nop
   44294:	ldr	x0, [sp, #24]
   44298:	ldr	w0, [x0, #308]
   4429c:	cmp	w0, #0x800
   442a0:	b.gt	44398 <__asan_cplus_demangle_type@@Base+0x36d4>
   442a4:	ldr	x0, [sp, #24]
   442a8:	ldr	w0, [x0, #308]
   442ac:	add	w1, w0, #0x1
   442b0:	ldr	x0, [sp, #24]
   442b4:	str	w1, [x0, #308]
   442b8:	ldr	x0, [sp, #16]
   442bc:	ldr	x0, [x0, #8]
   442c0:	mov	x1, x0
   442c4:	ldr	x0, [sp, #24]
   442c8:	bl	4420c <__asan_cplus_demangle_type@@Base+0x3548>
   442cc:	ldr	x0, [sp, #16]
   442d0:	ldr	x0, [x0, #16]
   442d4:	mov	x1, x0
   442d8:	ldr	x0, [sp, #24]
   442dc:	bl	4420c <__asan_cplus_demangle_type@@Base+0x3548>
   442e0:	ldr	x0, [sp, #24]
   442e4:	ldr	w0, [x0, #308]
   442e8:	sub	w1, w0, #0x1
   442ec:	ldr	x0, [sp, #24]
   442f0:	str	w1, [x0, #308]
   442f4:	b	4439c <__asan_cplus_demangle_type@@Base+0x36d8>
   442f8:	ldr	x0, [sp, #16]
   442fc:	ldr	x0, [x0, #16]
   44300:	mov	x1, x0
   44304:	ldr	x0, [sp, #24]
   44308:	bl	4420c <__asan_cplus_demangle_type@@Base+0x3548>
   4430c:	b	4439c <__asan_cplus_demangle_type@@Base+0x36d8>
   44310:	ldr	x0, [sp, #16]
   44314:	ldr	x0, [x0, #16]
   44318:	mov	x1, x0
   4431c:	ldr	x0, [sp, #24]
   44320:	bl	4420c <__asan_cplus_demangle_type@@Base+0x3548>
   44324:	b	4439c <__asan_cplus_demangle_type@@Base+0x36d8>
   44328:	ldr	x0, [sp, #16]
   4432c:	ldr	x0, [x0, #16]
   44330:	mov	x1, x0
   44334:	ldr	x0, [sp, #24]
   44338:	bl	4420c <__asan_cplus_demangle_type@@Base+0x3548>
   4433c:	b	4439c <__asan_cplus_demangle_type@@Base+0x36d8>
   44340:	ldr	x0, [sp, #16]
   44344:	ldr	x0, [x0, #8]
   44348:	mov	x1, x0
   4434c:	ldr	x0, [sp, #24]
   44350:	bl	4420c <__asan_cplus_demangle_type@@Base+0x3548>
   44354:	b	4439c <__asan_cplus_demangle_type@@Base+0x36d8>
   44358:	ldr	x0, [sp, #16]
   4435c:	ldr	x0, [x0, #8]
   44360:	mov	x1, x0
   44364:	ldr	x0, [sp, #24]
   44368:	bl	4420c <__asan_cplus_demangle_type@@Base+0x3548>
   4436c:	b	4439c <__asan_cplus_demangle_type@@Base+0x36d8>
   44370:	ldr	x0, [sp, #16]
   44374:	ldr	x0, [x0, #8]
   44378:	mov	x1, x0
   4437c:	ldr	x0, [sp, #24]
   44380:	bl	4420c <__asan_cplus_demangle_type@@Base+0x3548>
   44384:	b	4439c <__asan_cplus_demangle_type@@Base+0x36d8>
   44388:	nop
   4438c:	b	4439c <__asan_cplus_demangle_type@@Base+0x36d8>
   44390:	nop
   44394:	b	4439c <__asan_cplus_demangle_type@@Base+0x36d8>
   44398:	nop
   4439c:	ldp	x29, x30, [sp], #32
   443a0:	ret
   443a4:	stp	x29, x30, [sp, #-48]!
   443a8:	mov	x29, sp
   443ac:	str	x0, [sp, #40]
   443b0:	str	x1, [sp, #32]
   443b4:	str	x2, [sp, #24]
   443b8:	str	x3, [sp, #16]
   443bc:	ldr	x0, [sp, #40]
   443c0:	str	xzr, [x0, #256]
   443c4:	ldr	x0, [sp, #40]
   443c8:	strb	wzr, [x0, #264]
   443cc:	ldr	x0, [sp, #40]
   443d0:	str	xzr, [x0, #288]
   443d4:	ldr	x0, [sp, #40]
   443d8:	str	xzr, [x0, #296]
   443dc:	ldr	x0, [sp, #40]
   443e0:	str	wzr, [x0, #316]
   443e4:	ldr	x0, [sp, #40]
   443e8:	str	xzr, [x0, #320]
   443ec:	ldr	x0, [sp, #40]
   443f0:	ldr	x1, [sp, #32]
   443f4:	str	x1, [x0, #272]
   443f8:	ldr	x0, [sp, #40]
   443fc:	ldr	x1, [sp, #24]
   44400:	str	x1, [x0, #280]
   44404:	ldr	x0, [sp, #40]
   44408:	str	wzr, [x0, #304]
   4440c:	ldr	x0, [sp, #40]
   44410:	str	wzr, [x0, #308]
   44414:	ldr	x0, [sp, #40]
   44418:	str	wzr, [x0, #312]
   4441c:	ldr	x0, [sp, #40]
   44420:	str	xzr, [x0, #328]
   44424:	ldr	x0, [sp, #40]
   44428:	str	xzr, [x0, #336]
   4442c:	ldr	x0, [sp, #40]
   44430:	str	wzr, [x0, #344]
   44434:	ldr	x0, [sp, #40]
   44438:	str	wzr, [x0, #348]
   4443c:	ldr	x0, [sp, #40]
   44440:	str	xzr, [x0, #352]
   44444:	ldr	x0, [sp, #40]
   44448:	str	wzr, [x0, #360]
   4444c:	ldr	x0, [sp, #40]
   44450:	str	wzr, [x0, #364]
   44454:	ldr	x1, [sp, #16]
   44458:	ldr	x0, [sp, #40]
   4445c:	bl	4420c <__asan_cplus_demangle_type@@Base+0x3548>
   44460:	ldr	x0, [sp, #40]
   44464:	ldr	w0, [x0, #308]
   44468:	cmp	w0, #0x7ff
   4446c:	b.gt	44478 <__asan_cplus_demangle_type@@Base+0x37b4>
   44470:	ldr	x0, [sp, #40]
   44474:	str	wzr, [x0, #308]
   44478:	ldr	x0, [sp, #40]
   4447c:	ldr	w1, [x0, #364]
   44480:	ldr	x0, [sp, #40]
   44484:	ldr	w0, [x0, #348]
   44488:	mul	w1, w1, w0
   4448c:	ldr	x0, [sp, #40]
   44490:	str	w1, [x0, #364]
   44494:	ldr	x0, [sp, #40]
   44498:	str	xzr, [x0, #368]
   4449c:	nop
   444a0:	ldp	x29, x30, [sp], #48
   444a4:	ret
   444a8:	sub	sp, sp, #0x10
   444ac:	str	x0, [sp, #8]
   444b0:	ldr	x0, [sp, #8]
   444b4:	mov	w1, #0x1                   	// #1
   444b8:	str	w1, [x0, #304]
   444bc:	nop
   444c0:	add	sp, sp, #0x10
   444c4:	ret
   444c8:	sub	sp, sp, #0x10
   444cc:	str	x0, [sp, #8]
   444d0:	ldr	x0, [sp, #8]
   444d4:	ldr	w0, [x0, #304]
   444d8:	cmp	w0, #0x0
   444dc:	cset	w0, ne  // ne = any
   444e0:	and	w0, w0, #0xff
   444e4:	add	sp, sp, #0x10
   444e8:	ret
   444ec:	stp	x29, x30, [sp, #-32]!
   444f0:	mov	x29, sp
   444f4:	str	x0, [sp, #24]
   444f8:	ldr	x0, [sp, #24]
   444fc:	ldr	x0, [x0, #256]
   44500:	ldr	x1, [sp, #24]
   44504:	strb	wzr, [x1, x0]
   44508:	ldr	x0, [sp, #24]
   4450c:	ldr	x3, [x0, #272]
   44510:	ldr	x4, [sp, #24]
   44514:	ldr	x0, [sp, #24]
   44518:	ldr	x1, [x0, #256]
   4451c:	ldr	x0, [sp, #24]
   44520:	ldr	x0, [x0, #280]
   44524:	mov	x2, x0
   44528:	mov	x0, x4
   4452c:	blr	x3
   44530:	ldr	x0, [sp, #24]
   44534:	str	xzr, [x0, #256]
   44538:	ldr	x0, [sp, #24]
   4453c:	ldr	x0, [x0, #320]
   44540:	add	x1, x0, #0x1
   44544:	ldr	x0, [sp, #24]
   44548:	str	x1, [x0, #320]
   4454c:	nop
   44550:	ldp	x29, x30, [sp], #32
   44554:	ret
   44558:	stp	x29, x30, [sp, #-32]!
   4455c:	mov	x29, sp
   44560:	str	x0, [sp, #24]
   44564:	strb	w1, [sp, #23]
   44568:	ldr	x0, [sp, #24]
   4456c:	ldr	x0, [x0, #256]
   44570:	cmp	x0, #0xff
   44574:	b.ne	44580 <__asan_cplus_demangle_type@@Base+0x38bc>  // b.any
   44578:	ldr	x0, [sp, #24]
   4457c:	bl	444ec <__asan_cplus_demangle_type@@Base+0x3828>
   44580:	ldr	x0, [sp, #24]
   44584:	ldr	x0, [x0, #256]
   44588:	add	x2, x0, #0x1
   4458c:	ldr	x1, [sp, #24]
   44590:	str	x2, [x1, #256]
   44594:	ldr	x1, [sp, #24]
   44598:	ldrb	w2, [sp, #23]
   4459c:	strb	w2, [x1, x0]
   445a0:	ldr	x0, [sp, #24]
   445a4:	ldrb	w1, [sp, #23]
   445a8:	strb	w1, [x0, #264]
   445ac:	nop
   445b0:	ldp	x29, x30, [sp], #32
   445b4:	ret
   445b8:	stp	x29, x30, [sp, #-64]!
   445bc:	mov	x29, sp
   445c0:	str	x0, [sp, #40]
   445c4:	str	x1, [sp, #32]
   445c8:	str	x2, [sp, #24]
   445cc:	str	xzr, [sp, #56]
   445d0:	b	445fc <__asan_cplus_demangle_type@@Base+0x3938>
   445d4:	ldr	x1, [sp, #32]
   445d8:	ldr	x0, [sp, #56]
   445dc:	add	x0, x1, x0
   445e0:	ldrb	w0, [x0]
   445e4:	mov	w1, w0
   445e8:	ldr	x0, [sp, #40]
   445ec:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   445f0:	ldr	x0, [sp, #56]
   445f4:	add	x0, x0, #0x1
   445f8:	str	x0, [sp, #56]
   445fc:	ldr	x1, [sp, #56]
   44600:	ldr	x0, [sp, #24]
   44604:	cmp	x1, x0
   44608:	b.cc	445d4 <__asan_cplus_demangle_type@@Base+0x3910>  // b.lo, b.ul, b.last
   4460c:	nop
   44610:	nop
   44614:	ldp	x29, x30, [sp], #64
   44618:	ret
   4461c:	stp	x29, x30, [sp, #-32]!
   44620:	mov	x29, sp
   44624:	str	x0, [sp, #24]
   44628:	str	x1, [sp, #16]
   4462c:	ldr	x0, [sp, #16]
   44630:	bl	6a20 <__asan_internal_strlen@plt>
   44634:	mov	x2, x0
   44638:	ldr	x1, [sp, #16]
   4463c:	ldr	x0, [sp, #24]
   44640:	bl	445b8 <__asan_cplus_demangle_type@@Base+0x38f4>
   44644:	nop
   44648:	ldp	x29, x30, [sp], #32
   4464c:	ret
   44650:	stp	x29, x30, [sp, #-64]!
   44654:	mov	x29, sp
   44658:	str	x0, [sp, #24]
   4465c:	str	w1, [sp, #20]
   44660:	add	x3, sp, #0x20
   44664:	ldr	w2, [sp, #20]
   44668:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   4466c:	add	x1, x0, #0xce8
   44670:	mov	x0, x3
   44674:	bl	6b50 <sprintf@plt>
   44678:	add	x0, sp, #0x20
   4467c:	mov	x1, x0
   44680:	ldr	x0, [sp, #24]
   44684:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   44688:	nop
   4468c:	ldp	x29, x30, [sp], #64
   44690:	ret
   44694:	sub	sp, sp, #0x10
   44698:	str	x0, [sp, #8]
   4469c:	ldr	x0, [sp, #8]
   446a0:	ldrb	w0, [x0, #264]
   446a4:	add	sp, sp, #0x10
   446a8:	ret

00000000000446ac <__asan_cplus_demangle_print_callback@@Base>:
   446ac:	sub	sp, sp, #0x260
   446b0:	stp	x29, x30, [sp]
   446b4:	mov	x29, sp
   446b8:	stp	x19, x20, [sp, #16]
   446bc:	stp	x21, x22, [sp, #32]
   446c0:	stp	x23, x24, [sp, #48]
   446c4:	stp	x25, x26, [sp, #64]
   446c8:	str	x27, [sp, #80]
   446cc:	str	w0, [x29, #188]
   446d0:	str	x1, [x29, #176]
   446d4:	str	x2, [x29, #168]
   446d8:	str	x3, [x29, #160]
   446dc:	add	x0, x29, #0xc8
   446e0:	ldr	x3, [x29, #176]
   446e4:	ldr	x2, [x29, #160]
   446e8:	ldr	x1, [x29, #168]
   446ec:	bl	443a4 <__asan_cplus_demangle_type@@Base+0x36e0>
   446f0:	mov	x0, sp
   446f4:	mov	x19, x0
   446f8:	ldr	w0, [x29, #548]
   446fc:	mov	w1, #0x1                   	// #1
   44700:	cmp	w0, #0x0
   44704:	csel	w0, w0, w1, gt
   44708:	sxtw	x1, w0
   4470c:	sub	x1, x1, #0x1
   44710:	str	x1, [x29, #600]
   44714:	sxtw	x1, w0
   44718:	str	x1, [x29, #144]
   4471c:	str	xzr, [x29, #152]
   44720:	ldp	x2, x3, [x29, #144]
   44724:	mov	x1, x2
   44728:	lsr	x1, x1, #57
   4472c:	mov	x4, x3
   44730:	lsl	x27, x4, #7
   44734:	orr	x27, x1, x27
   44738:	mov	x1, x2
   4473c:	lsl	x26, x1, #7
   44740:	sxtw	x1, w0
   44744:	str	x1, [x29, #128]
   44748:	str	xzr, [x29, #136]
   4474c:	ldp	x2, x3, [x29, #128]
   44750:	mov	x1, x2
   44754:	lsr	x1, x1, #57
   44758:	mov	x4, x3
   4475c:	lsl	x25, x4, #7
   44760:	orr	x25, x1, x25
   44764:	mov	x1, x2
   44768:	lsl	x24, x1, #7
   4476c:	sxtw	x0, w0
   44770:	lsl	x0, x0, #4
   44774:	add	x0, x0, #0xf
   44778:	lsr	x0, x0, #4
   4477c:	lsl	x0, x0, #4
   44780:	sub	sp, sp, x0
   44784:	mov	x0, sp
   44788:	add	x0, x0, #0x7
   4478c:	lsr	x0, x0, #3
   44790:	lsl	x0, x0, #3
   44794:	str	x0, [x29, #592]
   44798:	ldr	w0, [x29, #564]
   4479c:	mov	w1, #0x1                   	// #1
   447a0:	cmp	w0, #0x0
   447a4:	csel	w0, w0, w1, gt
   447a8:	sxtw	x1, w0
   447ac:	sub	x1, x1, #0x1
   447b0:	str	x1, [x29, #584]
   447b4:	sxtw	x1, w0
   447b8:	str	x1, [x29, #112]
   447bc:	str	xzr, [x29, #120]
   447c0:	ldp	x2, x3, [x29, #112]
   447c4:	mov	x1, x2
   447c8:	lsr	x1, x1, #57
   447cc:	mov	x4, x3
   447d0:	lsl	x23, x4, #7
   447d4:	orr	x23, x1, x23
   447d8:	mov	x1, x2
   447dc:	lsl	x22, x1, #7
   447e0:	sxtw	x1, w0
   447e4:	str	x1, [x29, #96]
   447e8:	str	xzr, [x29, #104]
   447ec:	ldp	x2, x3, [x29, #96]
   447f0:	mov	x1, x2
   447f4:	lsr	x1, x1, #57
   447f8:	mov	x4, x3
   447fc:	lsl	x21, x4, #7
   44800:	orr	x21, x1, x21
   44804:	mov	x1, x2
   44808:	lsl	x20, x1, #7
   4480c:	sxtw	x0, w0
   44810:	lsl	x0, x0, #4
   44814:	add	x0, x0, #0xf
   44818:	lsr	x0, x0, #4
   4481c:	lsl	x0, x0, #4
   44820:	sub	sp, sp, x0
   44824:	mov	x0, sp
   44828:	add	x0, x0, #0x7
   4482c:	lsr	x0, x0, #3
   44830:	lsl	x0, x0, #3
   44834:	str	x0, [x29, #576]
   44838:	ldr	x0, [x29, #592]
   4483c:	str	x0, [x29, #536]
   44840:	ldr	x0, [x29, #576]
   44844:	str	x0, [x29, #552]
   44848:	add	x0, x29, #0xc8
   4484c:	ldr	x2, [x29, #176]
   44850:	ldr	w1, [x29, #188]
   44854:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   44858:	mov	sp, x19
   4485c:	add	x0, x29, #0xc8
   44860:	bl	444ec <__asan_cplus_demangle_type@@Base+0x3828>
   44864:	add	x0, x29, #0xc8
   44868:	bl	444c8 <__asan_cplus_demangle_type@@Base+0x3804>
   4486c:	cmp	w0, #0x0
   44870:	cset	w0, eq  // eq = none
   44874:	and	w0, w0, #0xff
   44878:	mov	sp, x29
   4487c:	ldp	x19, x20, [sp, #16]
   44880:	ldp	x21, x22, [sp, #32]
   44884:	ldp	x23, x24, [sp, #48]
   44888:	ldp	x25, x26, [sp, #64]
   4488c:	ldr	x27, [sp, #80]
   44890:	ldp	x29, x30, [sp]
   44894:	add	sp, sp, #0x260
   44898:	ret

000000000004489c <__asan_cplus_demangle_print@@Base>:
   4489c:	stp	x29, x30, [sp, #-80]!
   448a0:	mov	x29, sp
   448a4:	str	w0, [sp, #44]
   448a8:	str	x1, [sp, #32]
   448ac:	str	w2, [sp, #40]
   448b0:	str	x3, [sp, #24]
   448b4:	ldrsw	x1, [sp, #40]
   448b8:	add	x0, sp, #0x30
   448bc:	bl	43fdc <__asan_cplus_demangle_type@@Base+0x3318>
   448c0:	add	x0, sp, #0x30
   448c4:	mov	x3, x0
   448c8:	adrp	x0, 44000 <__asan_cplus_demangle_type@@Base+0x333c>
   448cc:	add	x2, x0, #0x1d4
   448d0:	ldr	x1, [sp, #32]
   448d4:	ldr	w0, [sp, #44]
   448d8:	bl	6c50 <__asan_cplus_demangle_print_callback@plt>
   448dc:	cmp	w0, #0x0
   448e0:	b.ne	448fc <__asan_cplus_demangle_print@@Base+0x60>  // b.any
   448e4:	ldr	x0, [sp, #48]
   448e8:	bl	6930 <free@plt>
   448ec:	ldr	x0, [sp, #24]
   448f0:	str	xzr, [x0]
   448f4:	mov	x0, #0x0                   	// #0
   448f8:	b	44920 <__asan_cplus_demangle_print@@Base+0x84>
   448fc:	ldr	w0, [sp, #72]
   44900:	cmp	w0, #0x0
   44904:	b.ne	44910 <__asan_cplus_demangle_print@@Base+0x74>  // b.any
   44908:	ldr	x0, [sp, #64]
   4490c:	b	44914 <__asan_cplus_demangle_print@@Base+0x78>
   44910:	mov	x0, #0x1                   	// #1
   44914:	ldr	x1, [sp, #24]
   44918:	str	x0, [x1]
   4491c:	ldr	x0, [sp, #48]
   44920:	ldp	x29, x30, [sp], #80
   44924:	ret
   44928:	sub	sp, sp, #0x20
   4492c:	str	x0, [sp, #8]
   44930:	str	w1, [sp, #4]
   44934:	ldr	w0, [sp, #4]
   44938:	cmp	w0, #0x0
   4493c:	b.ge	44948 <__asan_cplus_demangle_print@@Base+0xac>  // b.tcont
   44940:	ldr	x0, [sp, #8]
   44944:	b	449cc <__asan_cplus_demangle_print@@Base+0x130>
   44948:	ldr	x0, [sp, #8]
   4494c:	str	x0, [sp, #24]
   44950:	b	44990 <__asan_cplus_demangle_print@@Base+0xf4>
   44954:	ldr	x0, [sp, #24]
   44958:	ldr	w0, [x0]
   4495c:	cmp	w0, #0x2f
   44960:	b.eq	4496c <__asan_cplus_demangle_print@@Base+0xd0>  // b.none
   44964:	mov	x0, #0x0                   	// #0
   44968:	b	449cc <__asan_cplus_demangle_print@@Base+0x130>
   4496c:	ldr	w0, [sp, #4]
   44970:	cmp	w0, #0x0
   44974:	b.le	449a0 <__asan_cplus_demangle_print@@Base+0x104>
   44978:	ldr	w0, [sp, #4]
   4497c:	sub	w0, w0, #0x1
   44980:	str	w0, [sp, #4]
   44984:	ldr	x0, [sp, #24]
   44988:	ldr	x0, [x0, #16]
   4498c:	str	x0, [sp, #24]
   44990:	ldr	x0, [sp, #24]
   44994:	cmp	x0, #0x0
   44998:	b.ne	44954 <__asan_cplus_demangle_print@@Base+0xb8>  // b.any
   4499c:	b	449a4 <__asan_cplus_demangle_print@@Base+0x108>
   449a0:	nop
   449a4:	ldr	w0, [sp, #4]
   449a8:	cmp	w0, #0x0
   449ac:	b.ne	449bc <__asan_cplus_demangle_print@@Base+0x120>  // b.any
   449b0:	ldr	x0, [sp, #24]
   449b4:	cmp	x0, #0x0
   449b8:	b.ne	449c4 <__asan_cplus_demangle_print@@Base+0x128>  // b.any
   449bc:	mov	x0, #0x0                   	// #0
   449c0:	b	449cc <__asan_cplus_demangle_print@@Base+0x130>
   449c4:	ldr	x0, [sp, #24]
   449c8:	ldr	x0, [x0, #8]
   449cc:	add	sp, sp, #0x20
   449d0:	ret
   449d4:	stp	x29, x30, [sp, #-32]!
   449d8:	mov	x29, sp
   449dc:	str	x0, [sp, #24]
   449e0:	str	x1, [sp, #16]
   449e4:	ldr	x0, [sp, #24]
   449e8:	ldr	x0, [x0, #288]
   449ec:	cmp	x0, #0x0
   449f0:	b.ne	44a04 <__asan_cplus_demangle_print@@Base+0x168>  // b.any
   449f4:	ldr	x0, [sp, #24]
   449f8:	bl	444a8 <__asan_cplus_demangle_type@@Base+0x37e4>
   449fc:	mov	x0, #0x0                   	// #0
   44a00:	b	44a28 <__asan_cplus_demangle_print@@Base+0x18c>
   44a04:	ldr	x0, [sp, #24]
   44a08:	ldr	x0, [x0, #288]
   44a0c:	ldr	x0, [x0, #8]
   44a10:	ldr	x2, [x0, #16]
   44a14:	ldr	x0, [sp, #16]
   44a18:	ldr	x0, [x0, #8]
   44a1c:	mov	w1, w0
   44a20:	mov	x0, x2
   44a24:	bl	44928 <__asan_cplus_demangle_print@@Base+0x8c>
   44a28:	ldp	x29, x30, [sp], #32
   44a2c:	ret
   44a30:	stp	x29, x30, [sp, #-48]!
   44a34:	mov	x29, sp
   44a38:	str	x0, [sp, #24]
   44a3c:	str	x1, [sp, #16]
   44a40:	ldr	x0, [sp, #16]
   44a44:	cmp	x0, #0x0
   44a48:	b.ne	44a54 <__asan_cplus_demangle_print@@Base+0x1b8>  // b.any
   44a4c:	mov	x0, #0x0                   	// #0
   44a50:	b	44bec <__asan_cplus_demangle_print@@Base+0x350>
   44a54:	ldr	x0, [sp, #16]
   44a58:	ldr	w0, [x0]
   44a5c:	cmp	w0, #0x4c
   44a60:	b.hi	44bac <__asan_cplus_demangle_print@@Base+0x310>  // b.pmore
   44a64:	cmp	w0, #0x18
   44a68:	b.cs	44ab0 <__asan_cplus_demangle_print@@Base+0x214>  // b.hs, b.nlast
   44a6c:	cmp	w0, #0x8
   44a70:	b.eq	44b94 <__asan_cplus_demangle_print@@Base+0x2f8>  // b.none
   44a74:	cmp	w0, #0x8
   44a78:	b.hi	44bac <__asan_cplus_demangle_print@@Base+0x310>  // b.pmore
   44a7c:	cmp	w0, #0x7
   44a80:	b.eq	44b7c <__asan_cplus_demangle_print@@Base+0x2e0>  // b.none
   44a84:	cmp	w0, #0x7
   44a88:	b.hi	44bac <__asan_cplus_demangle_print@@Base+0x310>  // b.pmore
   44a8c:	cmp	w0, #0x6
   44a90:	b.eq	44b5c <__asan_cplus_demangle_print@@Base+0x2c0>  // b.none
   44a94:	cmp	w0, #0x6
   44a98:	b.hi	44bac <__asan_cplus_demangle_print@@Base+0x310>  // b.pmore
   44a9c:	cmp	w0, #0x0
   44aa0:	b.eq	44b5c <__asan_cplus_demangle_print@@Base+0x2c0>  // b.none
   44aa4:	cmp	w0, #0x5
   44aa8:	b.eq	44b18 <__asan_cplus_demangle_print@@Base+0x27c>  // b.none
   44aac:	b	44bac <__asan_cplus_demangle_print@@Base+0x310>
   44ab0:	sub	w0, w0, #0x18
   44ab4:	mov	x1, #0x1                   	// #1
   44ab8:	lsl	x0, x1, x0
   44abc:	mov	x1, #0x8001                	// #32769
   44ac0:	movk	x1, #0x410, lsl #16
   44ac4:	movk	x1, #0xc600, lsl #32
   44ac8:	movk	x1, #0x11, lsl #48
   44acc:	and	x1, x0, x1
   44ad0:	cmp	x1, #0x0
   44ad4:	cset	w1, ne  // ne = any
   44ad8:	and	w1, w1, #0xff
   44adc:	cmp	w1, #0x0
   44ae0:	b.ne	44b5c <__asan_cplus_demangle_print@@Base+0x2c0>  // b.any
   44ae4:	and	x1, x0, #0x8000000
   44ae8:	cmp	x1, #0x0
   44aec:	cset	w1, ne  // ne = any
   44af0:	and	w1, w1, #0xff
   44af4:	cmp	w1, #0x0
   44af8:	b.ne	44b64 <__asan_cplus_demangle_print@@Base+0x2c8>  // b.any
   44afc:	and	x0, x0, #0x8000000000000
   44b00:	cmp	x0, #0x0
   44b04:	cset	w0, ne  // ne = any
   44b08:	and	w0, w0, #0xff
   44b0c:	cmp	w0, #0x0
   44b10:	b.ne	44b54 <__asan_cplus_demangle_print@@Base+0x2b8>  // b.any
   44b14:	b	44bac <__asan_cplus_demangle_print@@Base+0x310>
   44b18:	ldr	x1, [sp, #16]
   44b1c:	ldr	x0, [sp, #24]
   44b20:	bl	449d4 <__asan_cplus_demangle_print@@Base+0x138>
   44b24:	str	x0, [sp, #40]
   44b28:	ldr	x0, [sp, #40]
   44b2c:	cmp	x0, #0x0
   44b30:	b.eq	44b4c <__asan_cplus_demangle_print@@Base+0x2b0>  // b.none
   44b34:	ldr	x0, [sp, #40]
   44b38:	ldr	w0, [x0]
   44b3c:	cmp	w0, #0x2f
   44b40:	b.ne	44b4c <__asan_cplus_demangle_print@@Base+0x2b0>  // b.any
   44b44:	ldr	x0, [sp, #40]
   44b48:	b	44bec <__asan_cplus_demangle_print@@Base+0x350>
   44b4c:	mov	x0, #0x0                   	// #0
   44b50:	b	44bec <__asan_cplus_demangle_print@@Base+0x350>
   44b54:	mov	x0, #0x0                   	// #0
   44b58:	b	44bec <__asan_cplus_demangle_print@@Base+0x350>
   44b5c:	mov	x0, #0x0                   	// #0
   44b60:	b	44bec <__asan_cplus_demangle_print@@Base+0x350>
   44b64:	ldr	x0, [sp, #16]
   44b68:	ldr	x0, [x0, #16]
   44b6c:	mov	x1, x0
   44b70:	ldr	x0, [sp, #24]
   44b74:	bl	44a30 <__asan_cplus_demangle_print@@Base+0x194>
   44b78:	b	44bec <__asan_cplus_demangle_print@@Base+0x350>
   44b7c:	ldr	x0, [sp, #16]
   44b80:	ldr	x0, [x0, #16]
   44b84:	mov	x1, x0
   44b88:	ldr	x0, [sp, #24]
   44b8c:	bl	44a30 <__asan_cplus_demangle_print@@Base+0x194>
   44b90:	b	44bec <__asan_cplus_demangle_print@@Base+0x350>
   44b94:	ldr	x0, [sp, #16]
   44b98:	ldr	x0, [x0, #16]
   44b9c:	mov	x1, x0
   44ba0:	ldr	x0, [sp, #24]
   44ba4:	bl	44a30 <__asan_cplus_demangle_print@@Base+0x194>
   44ba8:	b	44bec <__asan_cplus_demangle_print@@Base+0x350>
   44bac:	ldr	x0, [sp, #16]
   44bb0:	ldr	x0, [x0, #8]
   44bb4:	mov	x1, x0
   44bb8:	ldr	x0, [sp, #24]
   44bbc:	bl	44a30 <__asan_cplus_demangle_print@@Base+0x194>
   44bc0:	str	x0, [sp, #40]
   44bc4:	ldr	x0, [sp, #40]
   44bc8:	cmp	x0, #0x0
   44bcc:	b.eq	44bd8 <__asan_cplus_demangle_print@@Base+0x33c>  // b.none
   44bd0:	ldr	x0, [sp, #40]
   44bd4:	b	44bec <__asan_cplus_demangle_print@@Base+0x350>
   44bd8:	ldr	x0, [sp, #16]
   44bdc:	ldr	x0, [x0, #16]
   44be0:	mov	x1, x0
   44be4:	ldr	x0, [sp, #24]
   44be8:	bl	44a30 <__asan_cplus_demangle_print@@Base+0x194>
   44bec:	ldp	x29, x30, [sp], #48
   44bf0:	ret
   44bf4:	sub	sp, sp, #0x20
   44bf8:	str	x0, [sp, #8]
   44bfc:	str	wzr, [sp, #28]
   44c00:	b	44c1c <__asan_cplus_demangle_print@@Base+0x380>
   44c04:	ldr	w0, [sp, #28]
   44c08:	add	w0, w0, #0x1
   44c0c:	str	w0, [sp, #28]
   44c10:	ldr	x0, [sp, #8]
   44c14:	ldr	x0, [x0, #16]
   44c18:	str	x0, [sp, #8]
   44c1c:	ldr	x0, [sp, #8]
   44c20:	cmp	x0, #0x0
   44c24:	b.eq	44c48 <__asan_cplus_demangle_print@@Base+0x3ac>  // b.none
   44c28:	ldr	x0, [sp, #8]
   44c2c:	ldr	w0, [x0]
   44c30:	cmp	w0, #0x2f
   44c34:	b.ne	44c48 <__asan_cplus_demangle_print@@Base+0x3ac>  // b.any
   44c38:	ldr	x0, [sp, #8]
   44c3c:	ldr	x0, [x0, #8]
   44c40:	cmp	x0, #0x0
   44c44:	b.ne	44c04 <__asan_cplus_demangle_print@@Base+0x368>  // b.any
   44c48:	ldr	w0, [sp, #28]
   44c4c:	add	sp, sp, #0x20
   44c50:	ret
   44c54:	stp	x29, x30, [sp, #-64]!
   44c58:	mov	x29, sp
   44c5c:	str	x0, [sp, #24]
   44c60:	str	x1, [sp, #16]
   44c64:	str	wzr, [sp, #60]
   44c68:	b	44ce0 <__asan_cplus_demangle_print@@Base+0x444>
   44c6c:	ldr	x0, [sp, #16]
   44c70:	ldr	x0, [x0, #8]
   44c74:	str	x0, [sp, #48]
   44c78:	ldr	x0, [sp, #48]
   44c7c:	cmp	x0, #0x0
   44c80:	b.eq	44d00 <__asan_cplus_demangle_print@@Base+0x464>  // b.none
   44c84:	ldr	x0, [sp, #48]
   44c88:	ldr	w0, [x0]
   44c8c:	cmp	w0, #0x4b
   44c90:	b.ne	44cc8 <__asan_cplus_demangle_print@@Base+0x42c>  // b.any
   44c94:	ldr	x0, [sp, #48]
   44c98:	ldr	x0, [x0, #8]
   44c9c:	mov	x1, x0
   44ca0:	ldr	x0, [sp, #24]
   44ca4:	bl	44a30 <__asan_cplus_demangle_print@@Base+0x194>
   44ca8:	str	x0, [sp, #40]
   44cac:	ldr	x0, [sp, #40]
   44cb0:	bl	44bf4 <__asan_cplus_demangle_print@@Base+0x358>
   44cb4:	mov	w1, w0
   44cb8:	ldr	w0, [sp, #60]
   44cbc:	add	w0, w0, w1
   44cc0:	str	w0, [sp, #60]
   44cc4:	b	44cd4 <__asan_cplus_demangle_print@@Base+0x438>
   44cc8:	ldr	w0, [sp, #60]
   44ccc:	add	w0, w0, #0x1
   44cd0:	str	w0, [sp, #60]
   44cd4:	ldr	x0, [sp, #16]
   44cd8:	ldr	x0, [x0, #16]
   44cdc:	str	x0, [sp, #16]
   44ce0:	ldr	x0, [sp, #16]
   44ce4:	cmp	x0, #0x0
   44ce8:	b.eq	44d04 <__asan_cplus_demangle_print@@Base+0x468>  // b.none
   44cec:	ldr	x0, [sp, #16]
   44cf0:	ldr	w0, [x0]
   44cf4:	cmp	w0, #0x2f
   44cf8:	b.eq	44c6c <__asan_cplus_demangle_print@@Base+0x3d0>  // b.none
   44cfc:	b	44d04 <__asan_cplus_demangle_print@@Base+0x468>
   44d00:	nop
   44d04:	ldr	w0, [sp, #60]
   44d08:	ldp	x29, x30, [sp], #64
   44d0c:	ret
   44d10:	stp	x29, x30, [sp, #-64]!
   44d14:	mov	x29, sp
   44d18:	str	x0, [sp, #40]
   44d1c:	str	w1, [sp, #36]
   44d20:	str	x2, [sp, #24]
   44d24:	str	wzr, [sp, #60]
   44d28:	ldr	x0, [sp, #24]
   44d2c:	ldr	w0, [x0]
   44d30:	cmp	w0, #0x0
   44d34:	b.eq	44d68 <__asan_cplus_demangle_print@@Base+0x4cc>  // b.none
   44d38:	ldr	x0, [sp, #24]
   44d3c:	ldr	w0, [x0]
   44d40:	cmp	w0, #0x1
   44d44:	b.eq	44d68 <__asan_cplus_demangle_print@@Base+0x4cc>  // b.none
   44d48:	ldr	x0, [sp, #24]
   44d4c:	ldr	w0, [x0]
   44d50:	cmp	w0, #0x31
   44d54:	b.eq	44d68 <__asan_cplus_demangle_print@@Base+0x4cc>  // b.none
   44d58:	ldr	x0, [sp, #24]
   44d5c:	ldr	w0, [x0]
   44d60:	cmp	w0, #0x6
   44d64:	b.ne	44d70 <__asan_cplus_demangle_print@@Base+0x4d4>  // b.any
   44d68:	mov	w0, #0x1                   	// #1
   44d6c:	str	w0, [sp, #60]
   44d70:	ldr	w0, [sp, #60]
   44d74:	cmp	w0, #0x0
   44d78:	b.ne	44d88 <__asan_cplus_demangle_print@@Base+0x4ec>  // b.any
   44d7c:	mov	w1, #0x28                  	// #40
   44d80:	ldr	x0, [sp, #40]
   44d84:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   44d88:	ldr	x2, [sp, #24]
   44d8c:	ldr	w1, [sp, #36]
   44d90:	ldr	x0, [sp, #40]
   44d94:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   44d98:	ldr	w0, [sp, #60]
   44d9c:	cmp	w0, #0x0
   44da0:	b.ne	44db0 <__asan_cplus_demangle_print@@Base+0x514>  // b.any
   44da4:	mov	w1, #0x29                  	// #41
   44da8:	ldr	x0, [sp, #40]
   44dac:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   44db0:	nop
   44db4:	ldp	x29, x30, [sp], #64
   44db8:	ret
   44dbc:	stp	x29, x30, [sp, #-64]!
   44dc0:	mov	x29, sp
   44dc4:	str	x0, [sp, #24]
   44dc8:	str	x1, [sp, #16]
   44dcc:	ldr	x0, [sp, #24]
   44dd0:	ldr	w1, [x0, #344]
   44dd4:	ldr	x0, [sp, #24]
   44dd8:	ldr	w0, [x0, #348]
   44ddc:	cmp	w1, w0
   44de0:	b.lt	44df0 <__asan_cplus_demangle_print@@Base+0x554>  // b.tstop
   44de4:	ldr	x0, [sp, #24]
   44de8:	bl	444a8 <__asan_cplus_demangle_type@@Base+0x37e4>
   44dec:	b	44ee8 <__asan_cplus_demangle_print@@Base+0x64c>
   44df0:	ldr	x0, [sp, #24]
   44df4:	ldr	x1, [x0, #336]
   44df8:	ldr	x0, [sp, #24]
   44dfc:	ldr	w0, [x0, #344]
   44e00:	sxtw	x0, w0
   44e04:	lsl	x0, x0, #4
   44e08:	add	x0, x1, x0
   44e0c:	str	x0, [sp, #40]
   44e10:	ldr	x0, [sp, #24]
   44e14:	ldr	w0, [x0, #344]
   44e18:	add	w1, w0, #0x1
   44e1c:	ldr	x0, [sp, #24]
   44e20:	str	w1, [x0, #344]
   44e24:	ldr	x0, [sp, #40]
   44e28:	ldr	x1, [sp, #16]
   44e2c:	str	x1, [x0]
   44e30:	ldr	x0, [sp, #40]
   44e34:	add	x0, x0, #0x8
   44e38:	str	x0, [sp, #48]
   44e3c:	ldr	x0, [sp, #24]
   44e40:	ldr	x0, [x0, #288]
   44e44:	str	x0, [sp, #56]
   44e48:	b	44ed4 <__asan_cplus_demangle_print@@Base+0x638>
   44e4c:	ldr	x0, [sp, #24]
   44e50:	ldr	w1, [x0, #360]
   44e54:	ldr	x0, [sp, #24]
   44e58:	ldr	w0, [x0, #364]
   44e5c:	cmp	w1, w0
   44e60:	b.lt	44e70 <__asan_cplus_demangle_print@@Base+0x5d4>  // b.tstop
   44e64:	ldr	x0, [sp, #24]
   44e68:	bl	444a8 <__asan_cplus_demangle_type@@Base+0x37e4>
   44e6c:	b	44ee8 <__asan_cplus_demangle_print@@Base+0x64c>
   44e70:	ldr	x0, [sp, #24]
   44e74:	ldr	x1, [x0, #352]
   44e78:	ldr	x0, [sp, #24]
   44e7c:	ldr	w0, [x0, #360]
   44e80:	sxtw	x0, w0
   44e84:	lsl	x0, x0, #4
   44e88:	add	x0, x1, x0
   44e8c:	str	x0, [sp, #32]
   44e90:	ldr	x0, [sp, #24]
   44e94:	ldr	w0, [x0, #360]
   44e98:	add	w1, w0, #0x1
   44e9c:	ldr	x0, [sp, #24]
   44ea0:	str	w1, [x0, #360]
   44ea4:	ldr	x0, [sp, #56]
   44ea8:	ldr	x1, [x0, #8]
   44eac:	ldr	x0, [sp, #32]
   44eb0:	str	x1, [x0, #8]
   44eb4:	ldr	x0, [sp, #48]
   44eb8:	ldr	x1, [sp, #32]
   44ebc:	str	x1, [x0]
   44ec0:	ldr	x0, [sp, #32]
   44ec4:	str	x0, [sp, #48]
   44ec8:	ldr	x0, [sp, #56]
   44ecc:	ldr	x0, [x0]
   44ed0:	str	x0, [sp, #56]
   44ed4:	ldr	x0, [sp, #56]
   44ed8:	cmp	x0, #0x0
   44edc:	b.ne	44e4c <__asan_cplus_demangle_print@@Base+0x5b0>  // b.any
   44ee0:	ldr	x0, [sp, #48]
   44ee4:	str	xzr, [x0]
   44ee8:	ldp	x29, x30, [sp], #64
   44eec:	ret
   44ef0:	sub	sp, sp, #0x20
   44ef4:	str	x0, [sp, #8]
   44ef8:	str	x1, [sp]
   44efc:	str	wzr, [sp, #28]
   44f00:	b	44f4c <__asan_cplus_demangle_print@@Base+0x6b0>
   44f04:	ldr	x0, [sp, #8]
   44f08:	ldr	x1, [x0, #336]
   44f0c:	ldrsw	x0, [sp, #28]
   44f10:	lsl	x0, x0, #4
   44f14:	add	x0, x1, x0
   44f18:	ldr	x0, [x0]
   44f1c:	ldr	x1, [sp]
   44f20:	cmp	x1, x0
   44f24:	b.ne	44f40 <__asan_cplus_demangle_print@@Base+0x6a4>  // b.any
   44f28:	ldr	x0, [sp, #8]
   44f2c:	ldr	x1, [x0, #336]
   44f30:	ldrsw	x0, [sp, #28]
   44f34:	lsl	x0, x0, #4
   44f38:	add	x0, x1, x0
   44f3c:	b	44f64 <__asan_cplus_demangle_print@@Base+0x6c8>
   44f40:	ldr	w0, [sp, #28]
   44f44:	add	w0, w0, #0x1
   44f48:	str	w0, [sp, #28]
   44f4c:	ldr	x0, [sp, #8]
   44f50:	ldr	w0, [x0, #344]
   44f54:	ldr	w1, [sp, #28]
   44f58:	cmp	w1, w0
   44f5c:	b.lt	44f04 <__asan_cplus_demangle_print@@Base+0x668>  // b.tstop
   44f60:	mov	x0, #0x0                   	// #0
   44f64:	add	sp, sp, #0x20
   44f68:	ret
   44f6c:	stp	x29, x30, [sp, #-96]!
   44f70:	mov	x29, sp
   44f74:	str	x0, [sp, #40]
   44f78:	str	w1, [sp, #36]
   44f7c:	str	x2, [sp, #24]
   44f80:	ldr	x0, [sp, #24]
   44f84:	ldr	x0, [x0, #8]
   44f88:	ldr	x0, [x0, #8]
   44f8c:	ldr	x0, [x0]
   44f90:	str	x0, [sp, #72]
   44f94:	ldr	x0, [sp, #72]
   44f98:	ldrb	w0, [x0]
   44f9c:	cmp	w0, #0x66
   44fa0:	b.eq	44fac <__asan_cplus_demangle_print@@Base+0x710>  // b.none
   44fa4:	mov	w0, #0x0                   	// #0
   44fa8:	b	45150 <__asan_cplus_demangle_print@@Base+0x8b4>
   44fac:	ldr	x0, [sp, #24]
   44fb0:	ldr	x0, [x0, #16]
   44fb4:	str	x0, [sp, #64]
   44fb8:	ldr	x0, [sp, #64]
   44fbc:	ldr	x0, [x0, #8]
   44fc0:	str	x0, [sp, #56]
   44fc4:	ldr	x0, [sp, #64]
   44fc8:	ldr	x0, [x0, #16]
   44fcc:	str	x0, [sp, #88]
   44fd0:	str	xzr, [sp, #80]
   44fd4:	ldr	x0, [sp, #88]
   44fd8:	ldr	w0, [x0]
   44fdc:	cmp	w0, #0x3c
   44fe0:	b.ne	44ffc <__asan_cplus_demangle_print@@Base+0x760>  // b.any
   44fe4:	ldr	x0, [sp, #88]
   44fe8:	ldr	x0, [x0, #16]
   44fec:	str	x0, [sp, #80]
   44ff0:	ldr	x0, [sp, #88]
   44ff4:	ldr	x0, [x0, #8]
   44ff8:	str	x0, [sp, #88]
   44ffc:	ldr	x0, [sp, #40]
   45000:	ldr	w0, [x0, #316]
   45004:	str	w0, [sp, #52]
   45008:	ldr	x0, [sp, #40]
   4500c:	mov	w1, #0xffffffff            	// #-1
   45010:	str	w1, [x0, #316]
   45014:	ldr	x0, [sp, #72]
   45018:	add	x0, x0, #0x1
   4501c:	ldrb	w0, [x0]
   45020:	cmp	w0, #0x72
   45024:	b.eq	45094 <__asan_cplus_demangle_print@@Base+0x7f8>  // b.none
   45028:	cmp	w0, #0x72
   4502c:	b.gt	45140 <__asan_cplus_demangle_print@@Base+0x8a4>
   45030:	cmp	w0, #0x6c
   45034:	b.eq	45054 <__asan_cplus_demangle_print@@Base+0x7b8>  // b.none
   45038:	cmp	w0, #0x6c
   4503c:	b.gt	45140 <__asan_cplus_demangle_print@@Base+0x8a4>
   45040:	cmp	w0, #0x4c
   45044:	b.eq	450d4 <__asan_cplus_demangle_print@@Base+0x838>  // b.none
   45048:	cmp	w0, #0x52
   4504c:	b.eq	450d4 <__asan_cplus_demangle_print@@Base+0x838>  // b.none
   45050:	b	45140 <__asan_cplus_demangle_print@@Base+0x8a4>
   45054:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   45058:	add	x1, x0, #0xcf0
   4505c:	ldr	x0, [sp, #40]
   45060:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   45064:	ldr	x2, [sp, #56]
   45068:	ldr	w1, [sp, #36]
   4506c:	ldr	x0, [sp, #40]
   45070:	bl	47f48 <__asan_cplus_demangle_print@@Base+0x36ac>
   45074:	ldr	x2, [sp, #88]
   45078:	ldr	w1, [sp, #36]
   4507c:	ldr	x0, [sp, #40]
   45080:	bl	44d10 <__asan_cplus_demangle_print@@Base+0x474>
   45084:	mov	w1, #0x29                  	// #41
   45088:	ldr	x0, [sp, #40]
   4508c:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   45090:	b	45140 <__asan_cplus_demangle_print@@Base+0x8a4>
   45094:	mov	w1, #0x28                  	// #40
   45098:	ldr	x0, [sp, #40]
   4509c:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   450a0:	ldr	x2, [sp, #88]
   450a4:	ldr	w1, [sp, #36]
   450a8:	ldr	x0, [sp, #40]
   450ac:	bl	44d10 <__asan_cplus_demangle_print@@Base+0x474>
   450b0:	ldr	x2, [sp, #56]
   450b4:	ldr	w1, [sp, #36]
   450b8:	ldr	x0, [sp, #40]
   450bc:	bl	47f48 <__asan_cplus_demangle_print@@Base+0x36ac>
   450c0:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   450c4:	add	x1, x0, #0xcf8
   450c8:	ldr	x0, [sp, #40]
   450cc:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   450d0:	b	45140 <__asan_cplus_demangle_print@@Base+0x8a4>
   450d4:	mov	w1, #0x28                  	// #40
   450d8:	ldr	x0, [sp, #40]
   450dc:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   450e0:	ldr	x2, [sp, #88]
   450e4:	ldr	w1, [sp, #36]
   450e8:	ldr	x0, [sp, #40]
   450ec:	bl	44d10 <__asan_cplus_demangle_print@@Base+0x474>
   450f0:	ldr	x2, [sp, #56]
   450f4:	ldr	w1, [sp, #36]
   450f8:	ldr	x0, [sp, #40]
   450fc:	bl	47f48 <__asan_cplus_demangle_print@@Base+0x36ac>
   45100:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   45104:	add	x1, x0, #0x458
   45108:	ldr	x0, [sp, #40]
   4510c:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   45110:	ldr	x2, [sp, #56]
   45114:	ldr	w1, [sp, #36]
   45118:	ldr	x0, [sp, #40]
   4511c:	bl	47f48 <__asan_cplus_demangle_print@@Base+0x36ac>
   45120:	ldr	x2, [sp, #80]
   45124:	ldr	w1, [sp, #36]
   45128:	ldr	x0, [sp, #40]
   4512c:	bl	44d10 <__asan_cplus_demangle_print@@Base+0x474>
   45130:	mov	w1, #0x29                  	// #41
   45134:	ldr	x0, [sp, #40]
   45138:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   4513c:	nop
   45140:	ldr	x0, [sp, #40]
   45144:	ldr	w1, [sp, #52]
   45148:	str	w1, [x0, #316]
   4514c:	mov	w0, #0x1                   	// #1
   45150:	ldp	x29, x30, [sp], #96
   45154:	ret
   45158:	sub	sp, sp, #0x200
   4515c:	stp	x29, x30, [sp]
   45160:	mov	x29, sp
   45164:	str	x0, [sp, #40]
   45168:	str	w1, [sp, #36]
   4516c:	str	x2, [sp, #24]
   45170:	str	xzr, [sp, #504]
   45174:	str	wzr, [sp, #492]
   45178:	ldr	x0, [sp, #24]
   4517c:	cmp	x0, #0x0
   45180:	b.ne	45190 <__asan_cplus_demangle_print@@Base+0x8f4>  // b.any
   45184:	ldr	x0, [sp, #40]
   45188:	bl	444a8 <__asan_cplus_demangle_type@@Base+0x37e4>
   4518c:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   45190:	ldr	x0, [sp, #40]
   45194:	bl	444c8 <__asan_cplus_demangle_type@@Base+0x3804>
   45198:	cmp	w0, #0x0
   4519c:	b.ne	4732c <__asan_cplus_demangle_print@@Base+0x2a90>  // b.any
   451a0:	ldr	x0, [sp, #24]
   451a4:	ldr	w0, [x0]
   451a8:	cmp	w0, #0x50
   451ac:	b.hi	47320 <__asan_cplus_demangle_print@@Base+0x2a84>  // b.pmore
   451b0:	adrp	x1, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   451b4:	add	x1, x1, #0x1c
   451b8:	ldr	w0, [x1, w0, uxtw #2]
   451bc:	adr	x1, 451c8 <__asan_cplus_demangle_print@@Base+0x92c>
   451c0:	add	x0, x1, w0, sxtw #2
   451c4:	br	x0
   451c8:	ldr	w0, [sp, #36]
   451cc:	and	w0, w0, #0x4
   451d0:	cmp	w0, #0x0
   451d4:	b.ne	451fc <__asan_cplus_demangle_print@@Base+0x960>  // b.any
   451d8:	ldr	x0, [sp, #24]
   451dc:	ldr	x1, [x0, #8]
   451e0:	ldr	x0, [sp, #24]
   451e4:	ldr	w0, [x0, #16]
   451e8:	sxtw	x0, w0
   451ec:	mov	x2, x0
   451f0:	ldr	x0, [sp, #40]
   451f4:	bl	445b8 <__asan_cplus_demangle_type@@Base+0x38f4>
   451f8:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   451fc:	ldr	x0, [sp, #24]
   45200:	ldr	x1, [x0, #8]
   45204:	ldr	x0, [sp, #24]
   45208:	ldr	w0, [x0, #16]
   4520c:	mov	w2, w0
   45210:	ldr	x0, [sp, #40]
   45214:	bl	4746c <__asan_cplus_demangle_print@@Base+0x2bd0>
   45218:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   4521c:	ldr	x0, [sp, #24]
   45220:	ldr	x0, [x0, #8]
   45224:	mov	x2, x0
   45228:	ldr	w1, [sp, #36]
   4522c:	ldr	x0, [sp, #40]
   45230:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   45234:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   45238:	add	x1, x0, #0xd00
   4523c:	ldr	x0, [sp, #40]
   45240:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   45244:	ldr	x0, [sp, #24]
   45248:	ldr	x0, [x0, #16]
   4524c:	mov	x2, x0
   45250:	ldr	w1, [sp, #36]
   45254:	ldr	x0, [sp, #40]
   45258:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   4525c:	mov	w1, #0x5d                  	// #93
   45260:	ldr	x0, [sp, #40]
   45264:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   45268:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   4526c:	ldr	x0, [sp, #24]
   45270:	ldr	x0, [x0, #8]
   45274:	mov	x2, x0
   45278:	ldr	w1, [sp, #36]
   4527c:	ldr	x0, [sp, #40]
   45280:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   45284:	ldr	w0, [sp, #36]
   45288:	and	w0, w0, #0x4
   4528c:	cmp	w0, #0x0
   45290:	b.ne	452a8 <__asan_cplus_demangle_print@@Base+0xa0c>  // b.any
   45294:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   45298:	add	x1, x0, #0x490
   4529c:	ldr	x0, [sp, #40]
   452a0:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   452a4:	b	452b4 <__asan_cplus_demangle_print@@Base+0xa18>
   452a8:	mov	w1, #0x2e                  	// #46
   452ac:	ldr	x0, [sp, #40]
   452b0:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   452b4:	ldr	x0, [sp, #24]
   452b8:	ldr	x0, [x0, #16]
   452bc:	str	x0, [sp, #480]
   452c0:	ldr	x0, [sp, #480]
   452c4:	ldr	w0, [x0]
   452c8:	cmp	w0, #0x47
   452cc:	b.ne	45314 <__asan_cplus_demangle_print@@Base+0xa78>  // b.any
   452d0:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   452d4:	add	x1, x0, #0xd08
   452d8:	ldr	x0, [sp, #40]
   452dc:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   452e0:	ldr	x0, [sp, #480]
   452e4:	ldr	w0, [x0, #16]
   452e8:	add	w0, w0, #0x1
   452ec:	mov	w1, w0
   452f0:	ldr	x0, [sp, #40]
   452f4:	bl	44650 <__asan_cplus_demangle_type@@Base+0x398c>
   452f8:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   452fc:	add	x1, x0, #0xd18
   45300:	ldr	x0, [sp, #40]
   45304:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   45308:	ldr	x0, [sp, #480]
   4530c:	ldr	x0, [x0, #8]
   45310:	str	x0, [sp, #480]
   45314:	ldr	x2, [sp, #480]
   45318:	ldr	w1, [sp, #36]
   4531c:	ldr	x0, [sp, #40]
   45320:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   45324:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   45328:	ldr	x0, [sp, #40]
   4532c:	ldr	x0, [x0, #296]
   45330:	str	x0, [sp, #192]
   45334:	ldr	x0, [sp, #40]
   45338:	str	xzr, [x0, #296]
   4533c:	str	wzr, [sp, #468]
   45340:	ldr	x0, [sp, #24]
   45344:	ldr	x0, [x0, #8]
   45348:	str	x0, [sp, #472]
   4534c:	b	45400 <__asan_cplus_demangle_print@@Base+0xb64>
   45350:	ldr	w0, [sp, #468]
   45354:	cmp	w0, #0x3
   45358:	b.ls	45368 <__asan_cplus_demangle_print@@Base+0xacc>  // b.plast
   4535c:	ldr	x0, [sp, #40]
   45360:	bl	444a8 <__asan_cplus_demangle_type@@Base+0x37e4>
   45364:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   45368:	ldr	x0, [sp, #40]
   4536c:	ldr	x2, [x0, #296]
   45370:	ldr	w0, [sp, #468]
   45374:	lsl	x0, x0, #5
   45378:	add	x1, sp, #0x30
   4537c:	str	x2, [x1, x0]
   45380:	add	x1, sp, #0x30
   45384:	ldr	w0, [sp, #468]
   45388:	lsl	x0, x0, #5
   4538c:	add	x1, x1, x0
   45390:	ldr	x0, [sp, #40]
   45394:	str	x1, [x0, #296]
   45398:	ldr	w0, [sp, #468]
   4539c:	lsl	x0, x0, #5
   453a0:	add	x1, sp, #0x38
   453a4:	ldr	x2, [sp, #472]
   453a8:	str	x2, [x1, x0]
   453ac:	ldr	w0, [sp, #468]
   453b0:	lsl	x0, x0, #5
   453b4:	add	x1, sp, #0x40
   453b8:	str	wzr, [x1, x0]
   453bc:	ldr	x0, [sp, #40]
   453c0:	ldr	x2, [x0, #288]
   453c4:	ldr	w0, [sp, #468]
   453c8:	lsl	x0, x0, #5
   453cc:	add	x1, sp, #0x48
   453d0:	str	x2, [x1, x0]
   453d4:	ldr	w0, [sp, #468]
   453d8:	add	w0, w0, #0x1
   453dc:	str	w0, [sp, #468]
   453e0:	ldr	x0, [sp, #472]
   453e4:	ldr	w0, [x0]
   453e8:	bl	3e5f0 <__asan_backtrace_create_state@@Base+0xa4>
   453ec:	cmp	w0, #0x0
   453f0:	b.eq	45410 <__asan_cplus_demangle_print@@Base+0xb74>  // b.none
   453f4:	ldr	x0, [sp, #472]
   453f8:	ldr	x0, [x0, #8]
   453fc:	str	x0, [sp, #472]
   45400:	ldr	x0, [sp, #472]
   45404:	cmp	x0, #0x0
   45408:	b.ne	45350 <__asan_cplus_demangle_print@@Base+0xab4>  // b.any
   4540c:	b	45414 <__asan_cplus_demangle_print@@Base+0xb78>
   45410:	nop
   45414:	ldr	x0, [sp, #472]
   45418:	cmp	x0, #0x0
   4541c:	b.ne	4542c <__asan_cplus_demangle_print@@Base+0xb90>  // b.any
   45420:	ldr	x0, [sp, #40]
   45424:	bl	444a8 <__asan_cplus_demangle_type@@Base+0x37e4>
   45428:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   4542c:	ldr	x0, [sp, #472]
   45430:	ldr	w0, [x0]
   45434:	cmp	w0, #0x2
   45438:	b.ne	4558c <__asan_cplus_demangle_print@@Base+0xcf0>  // b.any
   4543c:	ldr	x0, [sp, #472]
   45440:	ldr	x0, [x0, #16]
   45444:	str	x0, [sp, #472]
   45448:	ldr	x0, [sp, #472]
   4544c:	ldr	w0, [x0]
   45450:	cmp	w0, #0x47
   45454:	b.ne	45464 <__asan_cplus_demangle_print@@Base+0xbc8>  // b.any
   45458:	ldr	x0, [sp, #472]
   4545c:	ldr	x0, [x0, #8]
   45460:	str	x0, [sp, #472]
   45464:	ldr	x0, [sp, #472]
   45468:	cmp	x0, #0x0
   4546c:	b.ne	45578 <__asan_cplus_demangle_print@@Base+0xcdc>  // b.any
   45470:	ldr	x0, [sp, #40]
   45474:	bl	444a8 <__asan_cplus_demangle_type@@Base+0x37e4>
   45478:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   4547c:	ldr	w0, [sp, #468]
   45480:	cmp	w0, #0x3
   45484:	b.ls	45494 <__asan_cplus_demangle_print@@Base+0xbf8>  // b.plast
   45488:	ldr	x0, [sp, #40]
   4548c:	bl	444a8 <__asan_cplus_demangle_type@@Base+0x37e4>
   45490:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   45494:	ldr	w0, [sp, #468]
   45498:	sub	w1, w0, #0x1
   4549c:	ldr	w0, [sp, #468]
   454a0:	lsl	x2, x0, #5
   454a4:	add	x3, sp, #0x30
   454a8:	mov	w0, w1
   454ac:	lsl	x0, x0, #5
   454b0:	add	x1, sp, #0x30
   454b4:	add	x2, x3, x2
   454b8:	add	x3, x1, x0
   454bc:	ldp	x0, x1, [x3]
   454c0:	stp	x0, x1, [x2]
   454c4:	ldp	x0, x1, [x3, #16]
   454c8:	stp	x0, x1, [x2, #16]
   454cc:	ldr	w0, [sp, #468]
   454d0:	sub	w0, w0, #0x1
   454d4:	add	x1, sp, #0x30
   454d8:	mov	w0, w0
   454dc:	lsl	x0, x0, #5
   454e0:	add	x2, x1, x0
   454e4:	ldr	w0, [sp, #468]
   454e8:	lsl	x0, x0, #5
   454ec:	add	x1, sp, #0x30
   454f0:	str	x2, [x1, x0]
   454f4:	add	x1, sp, #0x30
   454f8:	ldr	w0, [sp, #468]
   454fc:	lsl	x0, x0, #5
   45500:	add	x1, x1, x0
   45504:	ldr	x0, [sp, #40]
   45508:	str	x1, [x0, #296]
   4550c:	ldr	w0, [sp, #468]
   45510:	sub	w0, w0, #0x1
   45514:	mov	w0, w0
   45518:	lsl	x0, x0, #5
   4551c:	add	x1, sp, #0x38
   45520:	ldr	x2, [sp, #472]
   45524:	str	x2, [x1, x0]
   45528:	ldr	w0, [sp, #468]
   4552c:	sub	w0, w0, #0x1
   45530:	mov	w0, w0
   45534:	lsl	x0, x0, #5
   45538:	add	x1, sp, #0x40
   4553c:	str	wzr, [x1, x0]
   45540:	ldr	w0, [sp, #468]
   45544:	sub	w1, w0, #0x1
   45548:	ldr	x0, [sp, #40]
   4554c:	ldr	x2, [x0, #288]
   45550:	mov	w0, w1
   45554:	lsl	x0, x0, #5
   45558:	add	x1, sp, #0x48
   4555c:	str	x2, [x1, x0]
   45560:	ldr	w0, [sp, #468]
   45564:	add	w0, w0, #0x1
   45568:	str	w0, [sp, #468]
   4556c:	ldr	x0, [sp, #472]
   45570:	ldr	x0, [x0, #8]
   45574:	str	x0, [sp, #472]
   45578:	ldr	x0, [sp, #472]
   4557c:	ldr	w0, [x0]
   45580:	bl	3e5f0 <__asan_backtrace_create_state@@Base+0xa4>
   45584:	cmp	w0, #0x0
   45588:	b.ne	4547c <__asan_cplus_demangle_print@@Base+0xbe0>  // b.any
   4558c:	ldr	x0, [sp, #472]
   45590:	ldr	w0, [x0]
   45594:	cmp	w0, #0x4
   45598:	b.ne	455bc <__asan_cplus_demangle_print@@Base+0xd20>  // b.any
   4559c:	ldr	x0, [sp, #40]
   455a0:	ldr	x0, [x0, #288]
   455a4:	str	x0, [sp, #176]
   455a8:	ldr	x0, [sp, #40]
   455ac:	add	x1, sp, #0xb0
   455b0:	str	x1, [x0, #288]
   455b4:	ldr	x0, [sp, #472]
   455b8:	str	x0, [sp, #184]
   455bc:	ldr	x0, [sp, #24]
   455c0:	ldr	x0, [x0, #16]
   455c4:	mov	x2, x0
   455c8:	ldr	w1, [sp, #36]
   455cc:	ldr	x0, [sp, #40]
   455d0:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   455d4:	ldr	x0, [sp, #472]
   455d8:	ldr	w0, [x0]
   455dc:	cmp	w0, #0x4
   455e0:	b.ne	45644 <__asan_cplus_demangle_print@@Base+0xda8>  // b.any
   455e4:	ldr	x1, [sp, #176]
   455e8:	ldr	x0, [sp, #40]
   455ec:	str	x1, [x0, #288]
   455f0:	b	45644 <__asan_cplus_demangle_print@@Base+0xda8>
   455f4:	ldr	w0, [sp, #468]
   455f8:	sub	w0, w0, #0x1
   455fc:	str	w0, [sp, #468]
   45600:	ldr	w0, [sp, #468]
   45604:	lsl	x0, x0, #5
   45608:	add	x1, sp, #0x40
   4560c:	ldr	w0, [x1, x0]
   45610:	cmp	w0, #0x0
   45614:	b.ne	45644 <__asan_cplus_demangle_print@@Base+0xda8>  // b.any
   45618:	mov	w1, #0x20                  	// #32
   4561c:	ldr	x0, [sp, #40]
   45620:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   45624:	ldr	w0, [sp, #468]
   45628:	lsl	x0, x0, #5
   4562c:	add	x1, sp, #0x38
   45630:	ldr	x0, [x1, x0]
   45634:	mov	x2, x0
   45638:	ldr	w1, [sp, #36]
   4563c:	ldr	x0, [sp, #40]
   45640:	bl	47908 <__asan_cplus_demangle_print@@Base+0x306c>
   45644:	ldr	w0, [sp, #468]
   45648:	cmp	w0, #0x0
   4564c:	b.ne	455f4 <__asan_cplus_demangle_print@@Base+0xd58>  // b.any
   45650:	ldr	x0, [sp, #40]
   45654:	ldr	x1, [sp, #192]
   45658:	str	x1, [x0, #296]
   4565c:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   45660:	ldr	x0, [sp, #40]
   45664:	ldr	x0, [x0, #368]
   45668:	str	x0, [sp, #216]
   4566c:	ldr	x0, [sp, #40]
   45670:	ldr	x1, [sp, #24]
   45674:	str	x1, [x0, #368]
   45678:	ldr	x0, [sp, #40]
   4567c:	ldr	x0, [x0, #296]
   45680:	str	x0, [sp, #208]
   45684:	ldr	x0, [sp, #40]
   45688:	str	xzr, [x0, #296]
   4568c:	ldr	x0, [sp, #24]
   45690:	ldr	x0, [x0, #8]
   45694:	str	x0, [sp, #200]
   45698:	ldr	w0, [sp, #36]
   4569c:	and	w0, w0, #0x4
   456a0:	cmp	w0, #0x0
   456a4:	b.eq	45718 <__asan_cplus_demangle_print@@Base+0xe7c>  // b.none
   456a8:	ldr	x0, [sp, #200]
   456ac:	ldr	w0, [x0]
   456b0:	cmp	w0, #0x0
   456b4:	b.ne	45718 <__asan_cplus_demangle_print@@Base+0xe7c>  // b.any
   456b8:	ldr	x0, [sp, #200]
   456bc:	ldr	w0, [x0, #16]
   456c0:	cmp	w0, #0x6
   456c4:	b.ne	45718 <__asan_cplus_demangle_print@@Base+0xe7c>  // b.any
   456c8:	ldr	x0, [sp, #200]
   456cc:	ldr	x3, [x0, #8]
   456d0:	mov	x2, #0x6                   	// #6
   456d4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   456d8:	add	x1, x0, #0xd20
   456dc:	mov	x0, x3
   456e0:	bl	6db0 <__asan_internal_strncmp@plt>
   456e4:	cmp	w0, #0x0
   456e8:	b.ne	45718 <__asan_cplus_demangle_print@@Base+0xe7c>  // b.any
   456ec:	ldr	x0, [sp, #24]
   456f0:	ldr	x0, [x0, #16]
   456f4:	mov	x2, x0
   456f8:	ldr	w1, [sp, #36]
   456fc:	ldr	x0, [sp, #40]
   45700:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   45704:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   45708:	add	x1, x0, #0x4b0
   4570c:	ldr	x0, [sp, #40]
   45710:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   45714:	b	45798 <__asan_cplus_demangle_print@@Base+0xefc>
   45718:	ldr	x2, [sp, #200]
   4571c:	ldr	w1, [sp, #36]
   45720:	ldr	x0, [sp, #40]
   45724:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   45728:	ldr	x0, [sp, #40]
   4572c:	bl	44694 <__asan_cplus_demangle_type@@Base+0x39d0>
   45730:	and	w0, w0, #0xff
   45734:	cmp	w0, #0x3c
   45738:	b.ne	45748 <__asan_cplus_demangle_print@@Base+0xeac>  // b.any
   4573c:	mov	w1, #0x20                  	// #32
   45740:	ldr	x0, [sp, #40]
   45744:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   45748:	mov	w1, #0x3c                  	// #60
   4574c:	ldr	x0, [sp, #40]
   45750:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   45754:	ldr	x0, [sp, #24]
   45758:	ldr	x0, [x0, #16]
   4575c:	mov	x2, x0
   45760:	ldr	w1, [sp, #36]
   45764:	ldr	x0, [sp, #40]
   45768:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   4576c:	ldr	x0, [sp, #40]
   45770:	bl	44694 <__asan_cplus_demangle_type@@Base+0x39d0>
   45774:	and	w0, w0, #0xff
   45778:	cmp	w0, #0x3e
   4577c:	b.ne	4578c <__asan_cplus_demangle_print@@Base+0xef0>  // b.any
   45780:	mov	w1, #0x20                  	// #32
   45784:	ldr	x0, [sp, #40]
   45788:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   4578c:	mov	w1, #0x3e                  	// #62
   45790:	ldr	x0, [sp, #40]
   45794:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   45798:	ldr	x0, [sp, #40]
   4579c:	ldr	x1, [sp, #208]
   457a0:	str	x1, [x0, #296]
   457a4:	ldr	x0, [sp, #40]
   457a8:	ldr	x1, [sp, #216]
   457ac:	str	x1, [x0, #368]
   457b0:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   457b4:	ldr	x0, [sp, #40]
   457b8:	ldr	w0, [x0, #312]
   457bc:	cmp	w0, #0x0
   457c0:	b.eq	457f4 <__asan_cplus_demangle_print@@Base+0xf58>  // b.none
   457c4:	mov	x2, #0x5                   	// #5
   457c8:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   457cc:	add	x1, x0, #0xd28
   457d0:	ldr	x0, [sp, #40]
   457d4:	bl	445b8 <__asan_cplus_demangle_type@@Base+0x38f4>
   457d8:	ldr	x0, [sp, #24]
   457dc:	ldr	x0, [x0, #8]
   457e0:	add	w0, w0, #0x1
   457e4:	mov	w1, w0
   457e8:	ldr	x0, [sp, #40]
   457ec:	bl	44650 <__asan_cplus_demangle_type@@Base+0x398c>
   457f0:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   457f4:	ldr	x1, [sp, #24]
   457f8:	ldr	x0, [sp, #40]
   457fc:	bl	449d4 <__asan_cplus_demangle_print@@Base+0x138>
   45800:	str	x0, [sp, #456]
   45804:	ldr	x0, [sp, #456]
   45808:	cmp	x0, #0x0
   4580c:	b.eq	45838 <__asan_cplus_demangle_print@@Base+0xf9c>  // b.none
   45810:	ldr	x0, [sp, #456]
   45814:	ldr	w0, [x0]
   45818:	cmp	w0, #0x2f
   4581c:	b.ne	45838 <__asan_cplus_demangle_print@@Base+0xf9c>  // b.any
   45820:	ldr	x0, [sp, #40]
   45824:	ldr	w0, [x0, #316]
   45828:	mov	w1, w0
   4582c:	ldr	x0, [sp, #456]
   45830:	bl	44928 <__asan_cplus_demangle_print@@Base+0x8c>
   45834:	str	x0, [sp, #456]
   45838:	ldr	x0, [sp, #456]
   4583c:	cmp	x0, #0x0
   45840:	b.ne	45850 <__asan_cplus_demangle_print@@Base+0xfb4>  // b.any
   45844:	ldr	x0, [sp, #40]
   45848:	bl	444a8 <__asan_cplus_demangle_type@@Base+0x37e4>
   4584c:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   45850:	ldr	x0, [sp, #40]
   45854:	ldr	x0, [x0, #288]
   45858:	str	x0, [sp, #224]
   4585c:	ldr	x0, [sp, #224]
   45860:	ldr	x1, [x0]
   45864:	ldr	x0, [sp, #40]
   45868:	str	x1, [x0, #288]
   4586c:	ldr	x2, [sp, #456]
   45870:	ldr	w1, [sp, #36]
   45874:	ldr	x0, [sp, #40]
   45878:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   4587c:	ldr	x0, [sp, #40]
   45880:	ldr	x1, [sp, #224]
   45884:	str	x1, [x0, #288]
   45888:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   4588c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   45890:	add	x1, x0, #0xd30
   45894:	ldr	x0, [sp, #40]
   45898:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   4589c:	ldr	x0, [sp, #24]
   458a0:	ldr	x0, [x0, #8]
   458a4:	mov	x2, x0
   458a8:	ldr	w1, [sp, #36]
   458ac:	ldr	x0, [sp, #40]
   458b0:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   458b4:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   458b8:	ldr	x0, [sp, #24]
   458bc:	ldr	x0, [x0, #16]
   458c0:	mov	x2, x0
   458c4:	ldr	w1, [sp, #36]
   458c8:	ldr	x0, [sp, #40]
   458cc:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   458d0:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   458d4:	mov	w1, #0x7e                  	// #126
   458d8:	ldr	x0, [sp, #40]
   458dc:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   458e0:	ldr	x0, [sp, #24]
   458e4:	ldr	x0, [x0, #16]
   458e8:	mov	x2, x0
   458ec:	ldr	w1, [sp, #36]
   458f0:	ldr	x0, [sp, #40]
   458f4:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   458f8:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   458fc:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   45900:	add	x1, x0, #0xd50
   45904:	ldr	x0, [sp, #40]
   45908:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   4590c:	ldr	x0, [sp, #24]
   45910:	ldr	x0, [x0, #8]
   45914:	mov	x2, x0
   45918:	ldr	w1, [sp, #36]
   4591c:	ldr	x0, [sp, #40]
   45920:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   45924:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   45928:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   4592c:	add	x1, x0, #0xd60
   45930:	ldr	x0, [sp, #40]
   45934:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   45938:	ldr	x0, [sp, #24]
   4593c:	ldr	x0, [x0, #8]
   45940:	mov	x2, x0
   45944:	ldr	w1, [sp, #36]
   45948:	ldr	x0, [sp, #40]
   4594c:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   45950:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   45954:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   45958:	add	x1, x0, #0xd70
   4595c:	ldr	x0, [sp, #40]
   45960:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   45964:	ldr	x0, [sp, #24]
   45968:	ldr	x0, [x0, #8]
   4596c:	mov	x2, x0
   45970:	ldr	w1, [sp, #36]
   45974:	ldr	x0, [sp, #40]
   45978:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   4597c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   45980:	add	x1, x0, #0xd90
   45984:	ldr	x0, [sp, #40]
   45988:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   4598c:	ldr	x0, [sp, #24]
   45990:	ldr	x0, [x0, #16]
   45994:	mov	x2, x0
   45998:	ldr	w1, [sp, #36]
   4599c:	ldr	x0, [sp, #40]
   459a0:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   459a4:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   459a8:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   459ac:	add	x1, x0, #0xd98
   459b0:	ldr	x0, [sp, #40]
   459b4:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   459b8:	ldr	x0, [sp, #24]
   459bc:	ldr	x0, [x0, #8]
   459c0:	mov	x2, x0
   459c4:	ldr	w1, [sp, #36]
   459c8:	ldr	x0, [sp, #40]
   459cc:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   459d0:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   459d4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   459d8:	add	x1, x0, #0xda8
   459dc:	ldr	x0, [sp, #40]
   459e0:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   459e4:	ldr	x0, [sp, #24]
   459e8:	ldr	x0, [x0, #8]
   459ec:	mov	x2, x0
   459f0:	ldr	w1, [sp, #36]
   459f4:	ldr	x0, [sp, #40]
   459f8:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   459fc:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   45a00:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   45a04:	add	x1, x0, #0xdc0
   45a08:	ldr	x0, [sp, #40]
   45a0c:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   45a10:	ldr	x0, [sp, #24]
   45a14:	ldr	x0, [x0, #8]
   45a18:	mov	x2, x0
   45a1c:	ldr	w1, [sp, #36]
   45a20:	ldr	x0, [sp, #40]
   45a24:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   45a28:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   45a2c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   45a30:	add	x1, x0, #0xdd8
   45a34:	ldr	x0, [sp, #40]
   45a38:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   45a3c:	ldr	x0, [sp, #24]
   45a40:	ldr	x0, [x0, #8]
   45a44:	mov	x2, x0
   45a48:	ldr	w1, [sp, #36]
   45a4c:	ldr	x0, [sp, #40]
   45a50:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   45a54:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   45a58:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   45a5c:	add	x1, x0, #0xdf0
   45a60:	ldr	x0, [sp, #40]
   45a64:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   45a68:	ldr	x0, [sp, #24]
   45a6c:	ldr	x0, [x0, #8]
   45a70:	mov	x2, x0
   45a74:	ldr	w1, [sp, #36]
   45a78:	ldr	x0, [sp, #40]
   45a7c:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   45a80:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   45a84:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   45a88:	add	x1, x0, #0xe08
   45a8c:	ldr	x0, [sp, #40]
   45a90:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   45a94:	ldr	x0, [sp, #24]
   45a98:	ldr	x0, [x0, #8]
   45a9c:	mov	x2, x0
   45aa0:	ldr	w1, [sp, #36]
   45aa4:	ldr	x0, [sp, #40]
   45aa8:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   45aac:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   45ab0:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   45ab4:	add	x1, x0, #0xe28
   45ab8:	ldr	x0, [sp, #40]
   45abc:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   45ac0:	ldr	x0, [sp, #24]
   45ac4:	ldr	x0, [x0, #8]
   45ac8:	mov	x2, x0
   45acc:	ldr	w1, [sp, #36]
   45ad0:	ldr	x0, [sp, #40]
   45ad4:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   45ad8:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   45adc:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   45ae0:	add	x1, x0, #0xe38
   45ae4:	ldr	x0, [sp, #40]
   45ae8:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   45aec:	ldr	x0, [sp, #24]
   45af0:	ldr	x0, [x0, #8]
   45af4:	mov	x2, x0
   45af8:	ldr	w1, [sp, #36]
   45afc:	ldr	x0, [sp, #40]
   45b00:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   45b04:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   45b08:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   45b0c:	add	x1, x0, #0xe50
   45b10:	ldr	x0, [sp, #40]
   45b14:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   45b18:	ldr	x0, [sp, #24]
   45b1c:	ldr	x0, [x0, #8]
   45b20:	mov	x2, x0
   45b24:	ldr	w1, [sp, #36]
   45b28:	ldr	x0, [sp, #40]
   45b2c:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   45b30:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   45b34:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   45b38:	add	x1, x0, #0xe68
   45b3c:	ldr	x0, [sp, #40]
   45b40:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   45b44:	ldr	x0, [sp, #24]
   45b48:	ldr	x0, [x0, #8]
   45b4c:	mov	x2, x0
   45b50:	ldr	w1, [sp, #36]
   45b54:	ldr	x0, [sp, #40]
   45b58:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   45b5c:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   45b60:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   45b64:	add	x1, x0, #0xe88
   45b68:	ldr	x0, [sp, #40]
   45b6c:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   45b70:	ldr	x0, [sp, #24]
   45b74:	ldr	x0, [x0, #16]
   45b78:	mov	x2, x0
   45b7c:	ldr	w1, [sp, #36]
   45b80:	ldr	x0, [sp, #40]
   45b84:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   45b88:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   45b8c:	add	x1, x0, #0xea0
   45b90:	ldr	x0, [sp, #40]
   45b94:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   45b98:	ldr	x0, [sp, #24]
   45b9c:	ldr	x0, [x0, #8]
   45ba0:	mov	x2, x0
   45ba4:	ldr	w1, [sp, #36]
   45ba8:	ldr	x0, [sp, #40]
   45bac:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   45bb0:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   45bb4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   45bb8:	add	x1, x0, #0xea8
   45bbc:	ldr	x0, [sp, #40]
   45bc0:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   45bc4:	ldr	x0, [sp, #24]
   45bc8:	ldr	x0, [x0, #8]
   45bcc:	mov	x2, x0
   45bd0:	ldr	w1, [sp, #36]
   45bd4:	ldr	x0, [sp, #40]
   45bd8:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   45bdc:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   45be0:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   45be4:	add	x1, x0, #0xec0
   45be8:	ldr	x0, [sp, #40]
   45bec:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   45bf0:	ldr	x0, [sp, #24]
   45bf4:	ldr	x0, [x0, #8]
   45bf8:	mov	x2, x0
   45bfc:	ldr	w1, [sp, #36]
   45c00:	ldr	x0, [sp, #40]
   45c04:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   45c08:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   45c0c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   45c10:	add	x1, x0, #0xed8
   45c14:	ldr	x0, [sp, #40]
   45c18:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   45c1c:	ldr	x0, [sp, #24]
   45c20:	ldr	x0, [x0, #8]
   45c24:	mov	x2, x0
   45c28:	ldr	w1, [sp, #36]
   45c2c:	ldr	x0, [sp, #40]
   45c30:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   45c34:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   45c38:	ldr	x0, [sp, #24]
   45c3c:	ldr	x1, [x0, #8]
   45c40:	ldr	x0, [sp, #24]
   45c44:	ldr	w0, [x0, #16]
   45c48:	sxtw	x0, w0
   45c4c:	mov	x2, x0
   45c50:	ldr	x0, [sp, #40]
   45c54:	bl	445b8 <__asan_cplus_demangle_type@@Base+0x38f4>
   45c58:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   45c5c:	ldr	x0, [sp, #40]
   45c60:	ldr	x0, [x0, #296]
   45c64:	str	x0, [sp, #448]
   45c68:	b	45cfc <__asan_cplus_demangle_print@@Base+0x1460>
   45c6c:	ldr	x0, [sp, #448]
   45c70:	ldr	w0, [x0, #16]
   45c74:	cmp	w0, #0x0
   45c78:	b.ne	45cf0 <__asan_cplus_demangle_print@@Base+0x1454>  // b.any
   45c7c:	ldr	x0, [sp, #448]
   45c80:	ldr	x0, [x0, #8]
   45c84:	ldr	w0, [x0]
   45c88:	cmp	w0, #0x19
   45c8c:	b.eq	45cb8 <__asan_cplus_demangle_print@@Base+0x141c>  // b.none
   45c90:	ldr	x0, [sp, #448]
   45c94:	ldr	x0, [x0, #8]
   45c98:	ldr	w0, [x0]
   45c9c:	cmp	w0, #0x1a
   45ca0:	b.eq	45cb8 <__asan_cplus_demangle_print@@Base+0x141c>  // b.none
   45ca4:	ldr	x0, [sp, #448]
   45ca8:	ldr	x0, [x0, #8]
   45cac:	ldr	w0, [x0]
   45cb0:	cmp	w0, #0x1b
   45cb4:	b.ne	45d0c <__asan_cplus_demangle_print@@Base+0x1470>  // b.any
   45cb8:	ldr	x0, [sp, #448]
   45cbc:	ldr	x0, [x0, #8]
   45cc0:	ldr	w1, [x0]
   45cc4:	ldr	x0, [sp, #24]
   45cc8:	ldr	w0, [x0]
   45ccc:	cmp	w1, w0
   45cd0:	b.ne	45cf0 <__asan_cplus_demangle_print@@Base+0x1454>  // b.any
   45cd4:	ldr	x0, [sp, #24]
   45cd8:	ldr	x0, [x0, #8]
   45cdc:	mov	x2, x0
   45ce0:	ldr	w1, [sp, #36]
   45ce4:	ldr	x0, [sp, #40]
   45ce8:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   45cec:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   45cf0:	ldr	x0, [sp, #448]
   45cf4:	ldr	x0, [x0]
   45cf8:	str	x0, [sp, #448]
   45cfc:	ldr	x0, [sp, #448]
   45d00:	cmp	x0, #0x0
   45d04:	b.ne	45c6c <__asan_cplus_demangle_print@@Base+0x13d0>  // b.any
   45d08:	b	45ef4 <__asan_cplus_demangle_print@@Base+0x1658>
   45d0c:	nop
   45d10:	b	45ef4 <__asan_cplus_demangle_print@@Base+0x1658>
   45d14:	ldr	x0, [sp, #24]
   45d18:	ldr	x0, [x0, #8]
   45d1c:	str	x0, [sp, #440]
   45d20:	ldr	x0, [sp, #40]
   45d24:	ldr	w0, [x0, #312]
   45d28:	cmp	w0, #0x0
   45d2c:	b.ne	45e9c <__asan_cplus_demangle_print@@Base+0x1600>  // b.any
   45d30:	ldr	x0, [sp, #440]
   45d34:	ldr	w0, [x0]
   45d38:	cmp	w0, #0x5
   45d3c:	b.ne	45e9c <__asan_cplus_demangle_print@@Base+0x1600>  // b.any
   45d40:	ldr	x1, [sp, #440]
   45d44:	ldr	x0, [sp, #40]
   45d48:	bl	44ef0 <__asan_cplus_demangle_print@@Base+0x654>
   45d4c:	str	x0, [sp, #240]
   45d50:	ldr	x0, [sp, #240]
   45d54:	cmp	x0, #0x0
   45d58:	b.ne	45d7c <__asan_cplus_demangle_print@@Base+0x14e0>  // b.any
   45d5c:	ldr	x1, [sp, #440]
   45d60:	ldr	x0, [sp, #40]
   45d64:	bl	44dbc <__asan_cplus_demangle_print@@Base+0x520>
   45d68:	ldr	x0, [sp, #40]
   45d6c:	bl	444c8 <__asan_cplus_demangle_type@@Base+0x3804>
   45d70:	cmp	w0, #0x0
   45d74:	b.eq	45e20 <__asan_cplus_demangle_print@@Base+0x1584>  // b.none
   45d78:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   45d7c:	str	wzr, [sp, #420]
   45d80:	ldr	x0, [sp, #40]
   45d84:	ldr	x0, [x0, #328]
   45d88:	str	x0, [sp, #424]
   45d8c:	b	45de4 <__asan_cplus_demangle_print@@Base+0x1548>
   45d90:	ldr	x0, [sp, #424]
   45d94:	ldr	x0, [x0]
   45d98:	ldr	x1, [sp, #440]
   45d9c:	cmp	x1, x0
   45da0:	b.eq	45dcc <__asan_cplus_demangle_print@@Base+0x1530>  // b.none
   45da4:	ldr	x0, [sp, #424]
   45da8:	ldr	x0, [x0]
   45dac:	ldr	x1, [sp, #24]
   45db0:	cmp	x1, x0
   45db4:	b.ne	45dd8 <__asan_cplus_demangle_print@@Base+0x153c>  // b.any
   45db8:	ldr	x0, [sp, #40]
   45dbc:	ldr	x0, [x0, #328]
   45dc0:	ldr	x1, [sp, #424]
   45dc4:	cmp	x1, x0
   45dc8:	b.eq	45dd8 <__asan_cplus_demangle_print@@Base+0x153c>  // b.none
   45dcc:	mov	w0, #0x1                   	// #1
   45dd0:	str	w0, [sp, #420]
   45dd4:	b	45df0 <__asan_cplus_demangle_print@@Base+0x1554>
   45dd8:	ldr	x0, [sp, #424]
   45ddc:	ldr	x0, [x0, #8]
   45de0:	str	x0, [sp, #424]
   45de4:	ldr	x0, [sp, #424]
   45de8:	cmp	x0, #0x0
   45dec:	b.ne	45d90 <__asan_cplus_demangle_print@@Base+0x14f4>  // b.any
   45df0:	ldr	w0, [sp, #420]
   45df4:	cmp	w0, #0x0
   45df8:	b.ne	45e20 <__asan_cplus_demangle_print@@Base+0x1584>  // b.any
   45dfc:	ldr	x0, [sp, #40]
   45e00:	ldr	x0, [x0, #288]
   45e04:	str	x0, [sp, #496]
   45e08:	ldr	x0, [sp, #240]
   45e0c:	ldr	x1, [x0, #8]
   45e10:	ldr	x0, [sp, #40]
   45e14:	str	x1, [x0, #288]
   45e18:	mov	w0, #0x1                   	// #1
   45e1c:	str	w0, [sp, #492]
   45e20:	ldr	x1, [sp, #440]
   45e24:	ldr	x0, [sp, #40]
   45e28:	bl	449d4 <__asan_cplus_demangle_print@@Base+0x138>
   45e2c:	str	x0, [sp, #432]
   45e30:	ldr	x0, [sp, #432]
   45e34:	cmp	x0, #0x0
   45e38:	b.eq	45e64 <__asan_cplus_demangle_print@@Base+0x15c8>  // b.none
   45e3c:	ldr	x0, [sp, #432]
   45e40:	ldr	w0, [x0]
   45e44:	cmp	w0, #0x2f
   45e48:	b.ne	45e64 <__asan_cplus_demangle_print@@Base+0x15c8>  // b.any
   45e4c:	ldr	x0, [sp, #40]
   45e50:	ldr	w0, [x0, #316]
   45e54:	mov	w1, w0
   45e58:	ldr	x0, [sp, #432]
   45e5c:	bl	44928 <__asan_cplus_demangle_print@@Base+0x8c>
   45e60:	str	x0, [sp, #432]
   45e64:	ldr	x0, [sp, #432]
   45e68:	cmp	x0, #0x0
   45e6c:	b.ne	45e94 <__asan_cplus_demangle_print@@Base+0x15f8>  // b.any
   45e70:	ldr	w0, [sp, #492]
   45e74:	cmp	w0, #0x0
   45e78:	b.eq	45e88 <__asan_cplus_demangle_print@@Base+0x15ec>  // b.none
   45e7c:	ldr	x0, [sp, #40]
   45e80:	ldr	x1, [sp, #496]
   45e84:	str	x1, [x0, #288]
   45e88:	ldr	x0, [sp, #40]
   45e8c:	bl	444a8 <__asan_cplus_demangle_type@@Base+0x37e4>
   45e90:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   45e94:	ldr	x0, [sp, #432]
   45e98:	str	x0, [sp, #440]
   45e9c:	ldr	x0, [sp, #440]
   45ea0:	ldr	w0, [x0]
   45ea4:	cmp	w0, #0x23
   45ea8:	b.eq	45ec4 <__asan_cplus_demangle_print@@Base+0x1628>  // b.none
   45eac:	ldr	x0, [sp, #440]
   45eb0:	ldr	w1, [x0]
   45eb4:	ldr	x0, [sp, #24]
   45eb8:	ldr	w0, [x0]
   45ebc:	cmp	w1, w0
   45ec0:	b.ne	45ed0 <__asan_cplus_demangle_print@@Base+0x1634>  // b.any
   45ec4:	ldr	x0, [sp, #440]
   45ec8:	str	x0, [sp, #24]
   45ecc:	b	45ef4 <__asan_cplus_demangle_print@@Base+0x1658>
   45ed0:	ldr	x0, [sp, #440]
   45ed4:	ldr	w0, [x0]
   45ed8:	cmp	w0, #0x24
   45edc:	b.ne	45ef0 <__asan_cplus_demangle_print@@Base+0x1654>  // b.any
   45ee0:	ldr	x0, [sp, #440]
   45ee4:	ldr	x0, [x0, #8]
   45ee8:	str	x0, [sp, #504]
   45eec:	b	45ef4 <__asan_cplus_demangle_print@@Base+0x1658>
   45ef0:	nop
   45ef4:	ldr	x0, [sp, #40]
   45ef8:	ldr	x0, [x0, #296]
   45efc:	str	x0, [sp, #48]
   45f00:	ldr	x0, [sp, #40]
   45f04:	add	x1, sp, #0x30
   45f08:	str	x1, [x0, #296]
   45f0c:	ldr	x0, [sp, #24]
   45f10:	str	x0, [sp, #56]
   45f14:	str	wzr, [sp, #64]
   45f18:	ldr	x0, [sp, #40]
   45f1c:	ldr	x0, [x0, #288]
   45f20:	str	x0, [sp, #72]
   45f24:	ldr	x0, [sp, #504]
   45f28:	cmp	x0, #0x0
   45f2c:	b.ne	45f3c <__asan_cplus_demangle_print@@Base+0x16a0>  // b.any
   45f30:	ldr	x0, [sp, #24]
   45f34:	ldr	x0, [x0, #8]
   45f38:	str	x0, [sp, #504]
   45f3c:	ldr	x2, [sp, #504]
   45f40:	ldr	w1, [sp, #36]
   45f44:	ldr	x0, [sp, #40]
   45f48:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   45f4c:	ldr	w0, [sp, #64]
   45f50:	cmp	w0, #0x0
   45f54:	b.ne	45f68 <__asan_cplus_demangle_print@@Base+0x16cc>  // b.any
   45f58:	ldr	x2, [sp, #24]
   45f5c:	ldr	w1, [sp, #36]
   45f60:	ldr	x0, [sp, #40]
   45f64:	bl	47908 <__asan_cplus_demangle_print@@Base+0x306c>
   45f68:	ldr	x1, [sp, #48]
   45f6c:	ldr	x0, [sp, #40]
   45f70:	str	x1, [x0, #296]
   45f74:	ldr	w0, [sp, #492]
   45f78:	cmp	w0, #0x0
   45f7c:	b.eq	47334 <__asan_cplus_demangle_print@@Base+0x2a98>  // b.none
   45f80:	ldr	x0, [sp, #40]
   45f84:	ldr	x1, [sp, #496]
   45f88:	str	x1, [x0, #288]
   45f8c:	b	47334 <__asan_cplus_demangle_print@@Base+0x2a98>
   45f90:	ldr	w0, [sp, #36]
   45f94:	and	w0, w0, #0x4
   45f98:	cmp	w0, #0x0
   45f9c:	b.ne	45fcc <__asan_cplus_demangle_print@@Base+0x1730>  // b.any
   45fa0:	ldr	x0, [sp, #24]
   45fa4:	ldr	x0, [x0, #8]
   45fa8:	ldr	x1, [x0]
   45fac:	ldr	x0, [sp, #24]
   45fb0:	ldr	x0, [x0, #8]
   45fb4:	ldr	w0, [x0, #8]
   45fb8:	sxtw	x0, w0
   45fbc:	mov	x2, x0
   45fc0:	ldr	x0, [sp, #40]
   45fc4:	bl	445b8 <__asan_cplus_demangle_type@@Base+0x38f4>
   45fc8:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   45fcc:	ldr	x0, [sp, #24]
   45fd0:	ldr	x0, [x0, #8]
   45fd4:	ldr	x1, [x0, #16]
   45fd8:	ldr	x0, [sp, #24]
   45fdc:	ldr	x0, [x0, #8]
   45fe0:	ldr	w0, [x0, #24]
   45fe4:	sxtw	x0, w0
   45fe8:	mov	x2, x0
   45fec:	ldr	x0, [sp, #40]
   45ff0:	bl	445b8 <__asan_cplus_demangle_type@@Base+0x38f4>
   45ff4:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   45ff8:	ldr	x0, [sp, #24]
   45ffc:	ldr	x0, [x0, #8]
   46000:	mov	x2, x0
   46004:	ldr	w1, [sp, #36]
   46008:	ldr	x0, [sp, #40]
   4600c:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   46010:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   46014:	ldr	w0, [sp, #36]
   46018:	and	w0, w0, #0x20
   4601c:	cmp	w0, #0x0
   46020:	b.eq	46044 <__asan_cplus_demangle_print@@Base+0x17a8>  // b.none
   46024:	ldr	w0, [sp, #36]
   46028:	and	w1, w0, #0xffffff9f
   4602c:	ldr	x0, [sp, #40]
   46030:	ldr	x0, [x0, #296]
   46034:	mov	x3, x0
   46038:	ldr	x2, [sp, #24]
   4603c:	ldr	x0, [sp, #40]
   46040:	bl	47bbc <__asan_cplus_demangle_print@@Base+0x3320>
   46044:	ldr	x0, [sp, #24]
   46048:	ldr	x0, [x0, #8]
   4604c:	cmp	x0, #0x0
   46050:	b.eq	46084 <__asan_cplus_demangle_print@@Base+0x17e8>  // b.none
   46054:	ldr	w0, [sp, #36]
   46058:	and	w0, w0, #0x20
   4605c:	cmp	w0, #0x0
   46060:	b.eq	46084 <__asan_cplus_demangle_print@@Base+0x17e8>  // b.none
   46064:	ldr	w0, [sp, #36]
   46068:	and	w1, w0, #0xffffff9f
   4606c:	ldr	x0, [sp, #24]
   46070:	ldr	x0, [x0, #8]
   46074:	mov	x2, x0
   46078:	ldr	x0, [sp, #40]
   4607c:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   46080:	b	46124 <__asan_cplus_demangle_print@@Base+0x1888>
   46084:	ldr	x0, [sp, #24]
   46088:	ldr	x0, [x0, #8]
   4608c:	cmp	x0, #0x0
   46090:	b.eq	46124 <__asan_cplus_demangle_print@@Base+0x1888>  // b.none
   46094:	ldr	w0, [sp, #36]
   46098:	and	w0, w0, #0x40
   4609c:	cmp	w0, #0x0
   460a0:	b.ne	46124 <__asan_cplus_demangle_print@@Base+0x1888>  // b.any
   460a4:	ldr	x0, [sp, #40]
   460a8:	ldr	x0, [x0, #296]
   460ac:	str	x0, [sp, #48]
   460b0:	ldr	x0, [sp, #40]
   460b4:	add	x1, sp, #0x30
   460b8:	str	x1, [x0, #296]
   460bc:	ldr	x0, [sp, #24]
   460c0:	str	x0, [sp, #56]
   460c4:	str	wzr, [sp, #64]
   460c8:	ldr	x0, [sp, #40]
   460cc:	ldr	x0, [x0, #288]
   460d0:	str	x0, [sp, #72]
   460d4:	ldr	w0, [sp, #36]
   460d8:	and	w1, w0, #0xffffff9f
   460dc:	ldr	x0, [sp, #24]
   460e0:	ldr	x0, [x0, #8]
   460e4:	mov	x2, x0
   460e8:	ldr	x0, [sp, #40]
   460ec:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   460f0:	ldr	x1, [sp, #48]
   460f4:	ldr	x0, [sp, #40]
   460f8:	str	x1, [x0, #296]
   460fc:	ldr	w0, [sp, #64]
   46100:	cmp	w0, #0x0
   46104:	b.ne	4733c <__asan_cplus_demangle_print@@Base+0x2aa0>  // b.any
   46108:	ldr	w0, [sp, #36]
   4610c:	and	w0, w0, #0x20
   46110:	cmp	w0, #0x0
   46114:	b.ne	46124 <__asan_cplus_demangle_print@@Base+0x1888>  // b.any
   46118:	mov	w1, #0x20                  	// #32
   4611c:	ldr	x0, [sp, #40]
   46120:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   46124:	ldr	w0, [sp, #36]
   46128:	and	w0, w0, #0x20
   4612c:	cmp	w0, #0x0
   46130:	b.ne	47344 <__asan_cplus_demangle_print@@Base+0x2aa8>  // b.any
   46134:	ldr	w0, [sp, #36]
   46138:	and	w1, w0, #0xffffff9f
   4613c:	ldr	x0, [sp, #40]
   46140:	ldr	x0, [x0, #296]
   46144:	mov	x3, x0
   46148:	ldr	x2, [sp, #24]
   4614c:	ldr	x0, [sp, #40]
   46150:	bl	47bbc <__asan_cplus_demangle_print@@Base+0x3320>
   46154:	b	47344 <__asan_cplus_demangle_print@@Base+0x2aa8>
   46158:	ldr	x0, [sp, #40]
   4615c:	ldr	x0, [x0, #296]
   46160:	str	x0, [sp, #248]
   46164:	ldr	x0, [sp, #248]
   46168:	str	x0, [sp, #48]
   4616c:	ldr	x0, [sp, #40]
   46170:	add	x1, sp, #0x30
   46174:	str	x1, [x0, #296]
   46178:	ldr	x0, [sp, #24]
   4617c:	str	x0, [sp, #56]
   46180:	str	wzr, [sp, #64]
   46184:	ldr	x0, [sp, #40]
   46188:	ldr	x0, [x0, #288]
   4618c:	str	x0, [sp, #72]
   46190:	mov	w0, #0x1                   	// #1
   46194:	str	w0, [sp, #416]
   46198:	ldr	x0, [sp, #248]
   4619c:	str	x0, [sp, #408]
   461a0:	b	46244 <__asan_cplus_demangle_print@@Base+0x19a8>
   461a4:	ldr	x0, [sp, #408]
   461a8:	ldr	w0, [x0, #16]
   461ac:	cmp	w0, #0x0
   461b0:	b.ne	46238 <__asan_cplus_demangle_print@@Base+0x199c>  // b.any
   461b4:	ldr	w0, [sp, #416]
   461b8:	cmp	w0, #0x3
   461bc:	b.ls	461cc <__asan_cplus_demangle_print@@Base+0x1930>  // b.plast
   461c0:	ldr	x0, [sp, #40]
   461c4:	bl	444a8 <__asan_cplus_demangle_type@@Base+0x37e4>
   461c8:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   461cc:	ldr	w0, [sp, #416]
   461d0:	lsl	x0, x0, #5
   461d4:	add	x1, sp, #0x30
   461d8:	ldr	x3, [sp, #408]
   461dc:	add	x2, x1, x0
   461e0:	ldp	x0, x1, [x3]
   461e4:	stp	x0, x1, [x2]
   461e8:	ldp	x0, x1, [x3, #16]
   461ec:	stp	x0, x1, [x2, #16]
   461f0:	ldr	x0, [sp, #40]
   461f4:	ldr	x2, [x0, #296]
   461f8:	ldr	w0, [sp, #416]
   461fc:	lsl	x0, x0, #5
   46200:	add	x1, sp, #0x30
   46204:	str	x2, [x1, x0]
   46208:	add	x1, sp, #0x30
   4620c:	ldr	w0, [sp, #416]
   46210:	lsl	x0, x0, #5
   46214:	add	x1, x1, x0
   46218:	ldr	x0, [sp, #40]
   4621c:	str	x1, [x0, #296]
   46220:	ldr	x0, [sp, #408]
   46224:	mov	w1, #0x1                   	// #1
   46228:	str	w1, [x0, #16]
   4622c:	ldr	w0, [sp, #416]
   46230:	add	w0, w0, #0x1
   46234:	str	w0, [sp, #416]
   46238:	ldr	x0, [sp, #408]
   4623c:	ldr	x0, [x0]
   46240:	str	x0, [sp, #408]
   46244:	ldr	x0, [sp, #408]
   46248:	cmp	x0, #0x0
   4624c:	b.eq	4628c <__asan_cplus_demangle_print@@Base+0x19f0>  // b.none
   46250:	ldr	x0, [sp, #408]
   46254:	ldr	x0, [x0, #8]
   46258:	ldr	w0, [x0]
   4625c:	cmp	w0, #0x19
   46260:	b.eq	461a4 <__asan_cplus_demangle_print@@Base+0x1908>  // b.none
   46264:	ldr	x0, [sp, #408]
   46268:	ldr	x0, [x0, #8]
   4626c:	ldr	w0, [x0]
   46270:	cmp	w0, #0x1a
   46274:	b.eq	461a4 <__asan_cplus_demangle_print@@Base+0x1908>  // b.none
   46278:	ldr	x0, [sp, #408]
   4627c:	ldr	x0, [x0, #8]
   46280:	ldr	w0, [x0]
   46284:	cmp	w0, #0x1b
   46288:	b.eq	461a4 <__asan_cplus_demangle_print@@Base+0x1908>  // b.none
   4628c:	ldr	x0, [sp, #24]
   46290:	ldr	x0, [x0, #16]
   46294:	mov	x2, x0
   46298:	ldr	w1, [sp, #36]
   4629c:	ldr	x0, [sp, #40]
   462a0:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   462a4:	ldr	x0, [sp, #40]
   462a8:	ldr	x1, [sp, #248]
   462ac:	str	x1, [x0, #296]
   462b0:	ldr	w0, [sp, #64]
   462b4:	cmp	w0, #0x0
   462b8:	b.ne	4734c <__asan_cplus_demangle_print@@Base+0x2ab0>  // b.any
   462bc:	b	462ec <__asan_cplus_demangle_print@@Base+0x1a50>
   462c0:	ldr	w0, [sp, #416]
   462c4:	sub	w0, w0, #0x1
   462c8:	str	w0, [sp, #416]
   462cc:	ldr	w0, [sp, #416]
   462d0:	lsl	x0, x0, #5
   462d4:	add	x1, sp, #0x38
   462d8:	ldr	x0, [x1, x0]
   462dc:	mov	x2, x0
   462e0:	ldr	w1, [sp, #36]
   462e4:	ldr	x0, [sp, #40]
   462e8:	bl	47908 <__asan_cplus_demangle_print@@Base+0x306c>
   462ec:	ldr	w0, [sp, #416]
   462f0:	cmp	w0, #0x1
   462f4:	b.hi	462c0 <__asan_cplus_demangle_print@@Base+0x1a24>  // b.pmore
   462f8:	ldr	x0, [sp, #40]
   462fc:	ldr	x0, [x0, #296]
   46300:	mov	x3, x0
   46304:	ldr	x2, [sp, #24]
   46308:	ldr	w1, [sp, #36]
   4630c:	ldr	x0, [sp, #40]
   46310:	bl	47e08 <__asan_cplus_demangle_print@@Base+0x356c>
   46314:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   46318:	ldr	x0, [sp, #40]
   4631c:	ldr	x0, [x0, #296]
   46320:	str	x0, [sp, #48]
   46324:	ldr	x0, [sp, #40]
   46328:	add	x1, sp, #0x30
   4632c:	str	x1, [x0, #296]
   46330:	ldr	x0, [sp, #24]
   46334:	str	x0, [sp, #56]
   46338:	str	wzr, [sp, #64]
   4633c:	ldr	x0, [sp, #40]
   46340:	ldr	x0, [x0, #288]
   46344:	str	x0, [sp, #72]
   46348:	ldr	x0, [sp, #24]
   4634c:	ldr	x0, [x0, #16]
   46350:	mov	x2, x0
   46354:	ldr	w1, [sp, #36]
   46358:	ldr	x0, [sp, #40]
   4635c:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   46360:	ldr	w0, [sp, #64]
   46364:	cmp	w0, #0x0
   46368:	b.ne	4637c <__asan_cplus_demangle_print@@Base+0x1ae0>  // b.any
   4636c:	ldr	x2, [sp, #24]
   46370:	ldr	w1, [sp, #36]
   46374:	ldr	x0, [sp, #40]
   46378:	bl	47908 <__asan_cplus_demangle_print@@Base+0x306c>
   4637c:	ldr	x1, [sp, #48]
   46380:	ldr	x0, [sp, #40]
   46384:	str	x1, [x0, #296]
   46388:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   4638c:	ldr	x0, [sp, #24]
   46390:	ldrsh	w0, [x0, #18]
   46394:	cmp	w0, #0x0
   46398:	b.eq	463ac <__asan_cplus_demangle_print@@Base+0x1b10>  // b.none
   4639c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   463a0:	add	x1, x0, #0xef8
   463a4:	ldr	x0, [sp, #40]
   463a8:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   463ac:	ldr	x0, [sp, #24]
   463b0:	ldr	x0, [x0, #8]
   463b4:	ldr	x1, [x0, #8]
   463b8:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   463bc:	ldr	x0, [x0, #3736]
   463c0:	add	x0, x0, #0x100
   463c4:	cmp	x1, x0
   463c8:	b.eq	463f0 <__asan_cplus_demangle_print@@Base+0x1b54>  // b.none
   463cc:	ldr	x0, [sp, #24]
   463d0:	ldr	x0, [x0, #8]
   463d4:	mov	x2, x0
   463d8:	ldr	w1, [sp, #36]
   463dc:	ldr	x0, [sp, #40]
   463e0:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   463e4:	mov	w1, #0x20                  	// #32
   463e8:	ldr	x0, [sp, #40]
   463ec:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   463f0:	ldr	x0, [sp, #24]
   463f4:	ldrsh	w0, [x0, #16]
   463f8:	cmp	w0, #0x0
   463fc:	b.eq	46414 <__asan_cplus_demangle_print@@Base+0x1b78>  // b.none
   46400:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   46404:	add	x1, x0, #0xf00
   46408:	ldr	x0, [sp, #40]
   4640c:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   46410:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   46414:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   46418:	add	x1, x0, #0xf08
   4641c:	ldr	x0, [sp, #40]
   46420:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   46424:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   46428:	ldr	x0, [sp, #24]
   4642c:	ldr	x0, [x0, #8]
   46430:	cmp	x0, #0x0
   46434:	b.eq	46450 <__asan_cplus_demangle_print@@Base+0x1bb4>  // b.none
   46438:	ldr	x0, [sp, #24]
   4643c:	ldr	x0, [x0, #8]
   46440:	mov	x2, x0
   46444:	ldr	w1, [sp, #36]
   46448:	ldr	x0, [sp, #40]
   4644c:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   46450:	ldr	x0, [sp, #24]
   46454:	ldr	x0, [x0, #16]
   46458:	cmp	x0, #0x0
   4645c:	b.eq	47354 <__asan_cplus_demangle_print@@Base+0x2ab8>  // b.none
   46460:	ldr	x0, [sp, #40]
   46464:	ldr	x0, [x0, #256]
   46468:	cmp	x0, #0xfd
   4646c:	b.ls	46478 <__asan_cplus_demangle_print@@Base+0x1bdc>  // b.plast
   46470:	ldr	x0, [sp, #40]
   46474:	bl	444ec <__asan_cplus_demangle_type@@Base+0x3828>
   46478:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   4647c:	add	x1, x0, #0xf10
   46480:	ldr	x0, [sp, #40]
   46484:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   46488:	ldr	x0, [sp, #40]
   4648c:	ldr	x0, [x0, #256]
   46490:	str	x0, [sp, #264]
   46494:	ldr	x0, [sp, #40]
   46498:	ldr	x0, [x0, #320]
   4649c:	str	x0, [sp, #256]
   464a0:	ldr	x0, [sp, #24]
   464a4:	ldr	x0, [x0, #16]
   464a8:	mov	x2, x0
   464ac:	ldr	w1, [sp, #36]
   464b0:	ldr	x0, [sp, #40]
   464b4:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   464b8:	ldr	x0, [sp, #40]
   464bc:	ldr	x0, [x0, #320]
   464c0:	ldr	x1, [sp, #256]
   464c4:	cmp	x1, x0
   464c8:	b.ne	47354 <__asan_cplus_demangle_print@@Base+0x2ab8>  // b.any
   464cc:	ldr	x0, [sp, #40]
   464d0:	ldr	x0, [x0, #256]
   464d4:	ldr	x1, [sp, #264]
   464d8:	cmp	x1, x0
   464dc:	b.ne	47354 <__asan_cplus_demangle_print@@Base+0x2ab8>  // b.any
   464e0:	ldr	x0, [sp, #40]
   464e4:	ldr	x0, [x0, #256]
   464e8:	sub	x1, x0, #0x2
   464ec:	ldr	x0, [sp, #40]
   464f0:	str	x1, [x0, #256]
   464f4:	b	47354 <__asan_cplus_demangle_print@@Base+0x2ab8>
   464f8:	ldr	x0, [sp, #24]
   464fc:	ldr	x0, [x0, #8]
   46500:	str	x0, [sp, #280]
   46504:	ldr	x0, [sp, #24]
   46508:	ldr	x0, [x0, #16]
   4650c:	str	x0, [sp, #272]
   46510:	ldr	x0, [sp, #280]
   46514:	cmp	x0, #0x0
   46518:	b.eq	4652c <__asan_cplus_demangle_print@@Base+0x1c90>  // b.none
   4651c:	ldr	x2, [sp, #280]
   46520:	ldr	w1, [sp, #36]
   46524:	ldr	x0, [sp, #40]
   46528:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   4652c:	mov	w1, #0x7b                  	// #123
   46530:	ldr	x0, [sp, #40]
   46534:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   46538:	ldr	x2, [sp, #272]
   4653c:	ldr	w1, [sp, #36]
   46540:	ldr	x0, [sp, #40]
   46544:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   46548:	mov	w1, #0x7d                  	// #125
   4654c:	ldr	x0, [sp, #40]
   46550:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   46554:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   46558:	ldr	x0, [sp, #24]
   4655c:	ldr	x0, [x0, #8]
   46560:	str	x0, [sp, #288]
   46564:	ldr	x0, [sp, #288]
   46568:	ldr	w0, [x0, #16]
   4656c:	str	w0, [sp, #404]
   46570:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   46574:	add	x1, x0, #0xf18
   46578:	ldr	x0, [sp, #40]
   4657c:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   46580:	ldr	x0, [sp, #288]
   46584:	ldr	x0, [x0, #8]
   46588:	ldrb	w0, [x0]
   4658c:	cmp	w0, #0x60
   46590:	b.ls	465b4 <__asan_cplus_demangle_print@@Base+0x1d18>  // b.plast
   46594:	ldr	x0, [sp, #288]
   46598:	ldr	x0, [x0, #8]
   4659c:	ldrb	w0, [x0]
   465a0:	cmp	w0, #0x7a
   465a4:	b.hi	465b4 <__asan_cplus_demangle_print@@Base+0x1d18>  // b.pmore
   465a8:	mov	w1, #0x20                  	// #32
   465ac:	ldr	x0, [sp, #40]
   465b0:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   465b4:	ldr	x0, [sp, #288]
   465b8:	ldr	x1, [x0, #8]
   465bc:	ldrsw	x0, [sp, #404]
   465c0:	sub	x0, x0, #0x1
   465c4:	add	x0, x1, x0
   465c8:	ldrb	w0, [x0]
   465cc:	cmp	w0, #0x20
   465d0:	b.ne	465e0 <__asan_cplus_demangle_print@@Base+0x1d44>  // b.any
   465d4:	ldr	w0, [sp, #404]
   465d8:	sub	w0, w0, #0x1
   465dc:	str	w0, [sp, #404]
   465e0:	ldr	x0, [sp, #288]
   465e4:	ldr	x0, [x0, #8]
   465e8:	ldrsw	x1, [sp, #404]
   465ec:	mov	x2, x1
   465f0:	mov	x1, x0
   465f4:	ldr	x0, [sp, #40]
   465f8:	bl	445b8 <__asan_cplus_demangle_type@@Base+0x38f4>
   465fc:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   46600:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   46604:	add	x1, x0, #0xf28
   46608:	ldr	x0, [sp, #40]
   4660c:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   46610:	ldr	x0, [sp, #24]
   46614:	ldr	x0, [x0, #16]
   46618:	mov	x2, x0
   4661c:	ldr	w1, [sp, #36]
   46620:	ldr	x0, [sp, #40]
   46624:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   46628:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   4662c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   46630:	add	x1, x0, #0xf28
   46634:	ldr	x0, [sp, #40]
   46638:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   4663c:	ldr	x2, [sp, #24]
   46640:	ldr	w1, [sp, #36]
   46644:	ldr	x0, [sp, #40]
   46648:	bl	47fec <__asan_cplus_demangle_print@@Base+0x3750>
   4664c:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   46650:	ldr	x0, [sp, #24]
   46654:	ldr	x0, [x0, #8]
   46658:	mov	x2, x0
   4665c:	ldr	w1, [sp, #36]
   46660:	ldr	x0, [sp, #40]
   46664:	bl	47f48 <__asan_cplus_demangle_print@@Base+0x36ac>
   46668:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   4666c:	ldr	x0, [sp, #24]
   46670:	ldr	x0, [x0, #8]
   46674:	str	x0, [sp, #312]
   46678:	ldr	x0, [sp, #24]
   4667c:	ldr	x0, [x0, #16]
   46680:	str	x0, [sp, #392]
   46684:	str	xzr, [sp, #384]
   46688:	ldr	x0, [sp, #312]
   4668c:	ldr	w0, [x0]
   46690:	cmp	w0, #0x32
   46694:	b.ne	46744 <__asan_cplus_demangle_print@@Base+0x1ea8>  // b.any
   46698:	ldr	x0, [sp, #312]
   4669c:	ldr	x0, [x0, #8]
   466a0:	ldr	x0, [x0]
   466a4:	str	x0, [sp, #384]
   466a8:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   466ac:	add	x1, x0, #0x310
   466b0:	ldr	x0, [sp, #384]
   466b4:	bl	6d70 <__asan_internal_strcmp@plt>
   466b8:	cmp	w0, #0x0
   466bc:	b.ne	46704 <__asan_cplus_demangle_print@@Base+0x1e68>  // b.any
   466c0:	ldr	x0, [sp, #392]
   466c4:	ldr	w0, [x0]
   466c8:	cmp	w0, #0x3
   466cc:	b.ne	46704 <__asan_cplus_demangle_print@@Base+0x1e68>  // b.any
   466d0:	ldr	x0, [sp, #392]
   466d4:	ldr	x0, [x0, #8]
   466d8:	ldr	w0, [x0]
   466dc:	cmp	w0, #0x1
   466e0:	b.ne	46704 <__asan_cplus_demangle_print@@Base+0x1e68>  // b.any
   466e4:	ldr	x0, [sp, #392]
   466e8:	ldr	x0, [x0, #16]
   466ec:	ldr	w0, [x0]
   466f0:	cmp	w0, #0x29
   466f4:	b.ne	46704 <__asan_cplus_demangle_print@@Base+0x1e68>  // b.any
   466f8:	ldr	x0, [sp, #392]
   466fc:	ldr	x0, [x0, #8]
   46700:	str	x0, [sp, #392]
   46704:	ldr	x0, [sp, #392]
   46708:	ldr	w0, [x0]
   4670c:	cmp	w0, #0x39
   46710:	b.ne	46744 <__asan_cplus_demangle_print@@Base+0x1ea8>  // b.any
   46714:	ldr	x0, [sp, #392]
   46718:	ldr	x0, [x0, #8]
   4671c:	str	x0, [sp, #392]
   46720:	ldr	x2, [sp, #392]
   46724:	ldr	w1, [sp, #36]
   46728:	ldr	x0, [sp, #40]
   4672c:	bl	44d10 <__asan_cplus_demangle_print@@Base+0x474>
   46730:	ldr	x2, [sp, #312]
   46734:	ldr	w1, [sp, #36]
   46738:	ldr	x0, [sp, #40]
   4673c:	bl	47f48 <__asan_cplus_demangle_print@@Base+0x36ac>
   46740:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   46744:	ldr	x0, [sp, #384]
   46748:	cmp	x0, #0x0
   4674c:	b.eq	46794 <__asan_cplus_demangle_print@@Base+0x1ef8>  // b.none
   46750:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   46754:	add	x1, x0, #0x6a8
   46758:	ldr	x0, [sp, #384]
   4675c:	bl	6d70 <__asan_internal_strcmp@plt>
   46760:	cmp	w0, #0x0
   46764:	b.ne	46794 <__asan_cplus_demangle_print@@Base+0x1ef8>  // b.any
   46768:	ldr	x1, [sp, #392]
   4676c:	ldr	x0, [sp, #40]
   46770:	bl	44a30 <__asan_cplus_demangle_print@@Base+0x194>
   46774:	str	x0, [sp, #304]
   46778:	ldr	x0, [sp, #304]
   4677c:	bl	44bf4 <__asan_cplus_demangle_print@@Base+0x358>
   46780:	str	w0, [sp, #300]
   46784:	ldr	w1, [sp, #300]
   46788:	ldr	x0, [sp, #40]
   4678c:	bl	44650 <__asan_cplus_demangle_type@@Base+0x398c>
   46790:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   46794:	ldr	x0, [sp, #384]
   46798:	cmp	x0, #0x0
   4679c:	b.eq	467d8 <__asan_cplus_demangle_print@@Base+0x1f3c>  // b.none
   467a0:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   467a4:	add	x1, x0, #0x690
   467a8:	ldr	x0, [sp, #384]
   467ac:	bl	6d70 <__asan_internal_strcmp@plt>
   467b0:	cmp	w0, #0x0
   467b4:	b.ne	467d8 <__asan_cplus_demangle_print@@Base+0x1f3c>  // b.any
   467b8:	ldr	x1, [sp, #392]
   467bc:	ldr	x0, [sp, #40]
   467c0:	bl	44c54 <__asan_cplus_demangle_print@@Base+0x3b8>
   467c4:	str	w0, [sp, #296]
   467c8:	ldr	w1, [sp, #296]
   467cc:	ldr	x0, [sp, #40]
   467d0:	bl	44650 <__asan_cplus_demangle_type@@Base+0x398c>
   467d4:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   467d8:	ldr	x0, [sp, #312]
   467dc:	ldr	w0, [x0]
   467e0:	cmp	w0, #0x34
   467e4:	b.eq	467fc <__asan_cplus_demangle_print@@Base+0x1f60>  // b.none
   467e8:	ldr	x2, [sp, #312]
   467ec:	ldr	w1, [sp, #36]
   467f0:	ldr	x0, [sp, #40]
   467f4:	bl	47f48 <__asan_cplus_demangle_print@@Base+0x36ac>
   467f8:	b	46824 <__asan_cplus_demangle_print@@Base+0x1f88>
   467fc:	mov	w1, #0x28                  	// #40
   46800:	ldr	x0, [sp, #40]
   46804:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   46808:	ldr	x2, [sp, #312]
   4680c:	ldr	w1, [sp, #36]
   46810:	ldr	x0, [sp, #40]
   46814:	bl	47fb4 <__asan_cplus_demangle_print@@Base+0x3718>
   46818:	mov	w1, #0x29                  	// #41
   4681c:	ldr	x0, [sp, #40]
   46820:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   46824:	ldr	x0, [sp, #384]
   46828:	cmp	x0, #0x0
   4682c:	b.eq	4685c <__asan_cplus_demangle_print@@Base+0x1fc0>  // b.none
   46830:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   46834:	add	x1, x0, #0x488
   46838:	ldr	x0, [sp, #384]
   4683c:	bl	6d70 <__asan_internal_strcmp@plt>
   46840:	cmp	w0, #0x0
   46844:	b.ne	4685c <__asan_cplus_demangle_print@@Base+0x1fc0>  // b.any
   46848:	ldr	x2, [sp, #392]
   4684c:	ldr	w1, [sp, #36]
   46850:	ldr	x0, [sp, #40]
   46854:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   46858:	b	468c0 <__asan_cplus_demangle_print@@Base+0x2024>
   4685c:	ldr	x0, [sp, #384]
   46860:	cmp	x0, #0x0
   46864:	b.eq	468ac <__asan_cplus_demangle_print@@Base+0x2010>  // b.none
   46868:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   4686c:	add	x1, x0, #0x6c8
   46870:	ldr	x0, [sp, #384]
   46874:	bl	6d70 <__asan_internal_strcmp@plt>
   46878:	cmp	w0, #0x0
   4687c:	b.ne	468ac <__asan_cplus_demangle_print@@Base+0x2010>  // b.any
   46880:	mov	w1, #0x28                  	// #40
   46884:	ldr	x0, [sp, #40]
   46888:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   4688c:	ldr	x2, [sp, #392]
   46890:	ldr	w1, [sp, #36]
   46894:	ldr	x0, [sp, #40]
   46898:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   4689c:	mov	w1, #0x29                  	// #41
   468a0:	ldr	x0, [sp, #40]
   468a4:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   468a8:	b	468c0 <__asan_cplus_demangle_print@@Base+0x2024>
   468ac:	ldr	x2, [sp, #392]
   468b0:	ldr	w1, [sp, #36]
   468b4:	ldr	x0, [sp, #40]
   468b8:	bl	44d10 <__asan_cplus_demangle_print@@Base+0x474>
   468bc:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   468c0:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   468c4:	ldr	x0, [sp, #24]
   468c8:	ldr	x0, [x0, #16]
   468cc:	ldr	w0, [x0]
   468d0:	cmp	w0, #0x39
   468d4:	b.eq	468e4 <__asan_cplus_demangle_print@@Base+0x2048>  // b.none
   468d8:	ldr	x0, [sp, #40]
   468dc:	bl	444a8 <__asan_cplus_demangle_type@@Base+0x37e4>
   468e0:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   468e4:	ldr	x0, [sp, #24]
   468e8:	ldr	x0, [x0, #8]
   468ec:	bl	42788 <__asan_cplus_demangle_type@@Base+0x1ac4>
   468f0:	cmp	w0, #0x0
   468f4:	b.eq	46974 <__asan_cplus_demangle_print@@Base+0x20d8>  // b.none
   468f8:	ldr	x0, [sp, #24]
   468fc:	ldr	x0, [x0, #8]
   46900:	mov	x2, x0
   46904:	ldr	w1, [sp, #36]
   46908:	ldr	x0, [sp, #40]
   4690c:	bl	47f48 <__asan_cplus_demangle_print@@Base+0x36ac>
   46910:	mov	w1, #0x3c                  	// #60
   46914:	ldr	x0, [sp, #40]
   46918:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   4691c:	ldr	x0, [sp, #24]
   46920:	ldr	x0, [x0, #16]
   46924:	ldr	x0, [x0, #8]
   46928:	mov	x2, x0
   4692c:	ldr	w1, [sp, #36]
   46930:	ldr	x0, [sp, #40]
   46934:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   46938:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   4693c:	add	x1, x0, #0xf38
   46940:	ldr	x0, [sp, #40]
   46944:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   46948:	ldr	x0, [sp, #24]
   4694c:	ldr	x0, [x0, #16]
   46950:	ldr	x0, [x0, #16]
   46954:	mov	x2, x0
   46958:	ldr	w1, [sp, #36]
   4695c:	ldr	x0, [sp, #40]
   46960:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   46964:	mov	w1, #0x29                  	// #41
   46968:	ldr	x0, [sp, #40]
   4696c:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   46970:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   46974:	ldr	x2, [sp, #24]
   46978:	ldr	w1, [sp, #36]
   4697c:	ldr	x0, [sp, #40]
   46980:	bl	44f6c <__asan_cplus_demangle_print@@Base+0x6d0>
   46984:	cmp	w0, #0x0
   46988:	b.ne	4735c <__asan_cplus_demangle_print@@Base+0x2ac0>  // b.any
   4698c:	ldr	x0, [sp, #24]
   46990:	ldr	x0, [x0, #8]
   46994:	ldr	w0, [x0]
   46998:	cmp	w0, #0x32
   4699c:	b.ne	469e0 <__asan_cplus_demangle_print@@Base+0x2144>  // b.any
   469a0:	ldr	x0, [sp, #24]
   469a4:	ldr	x0, [x0, #8]
   469a8:	ldr	x0, [x0, #8]
   469ac:	ldr	w0, [x0, #16]
   469b0:	cmp	w0, #0x1
   469b4:	b.ne	469e0 <__asan_cplus_demangle_print@@Base+0x2144>  // b.any
   469b8:	ldr	x0, [sp, #24]
   469bc:	ldr	x0, [x0, #8]
   469c0:	ldr	x0, [x0, #8]
   469c4:	ldr	x0, [x0, #8]
   469c8:	ldrb	w0, [x0]
   469cc:	cmp	w0, #0x3e
   469d0:	b.ne	469e0 <__asan_cplus_demangle_print@@Base+0x2144>  // b.any
   469d4:	mov	w1, #0x28                  	// #40
   469d8:	ldr	x0, [sp, #40]
   469dc:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   469e0:	ldr	x0, [sp, #24]
   469e4:	ldr	x0, [x0, #8]
   469e8:	ldr	x0, [x0, #8]
   469ec:	ldr	x2, [x0]
   469f0:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   469f4:	add	x1, x0, #0x360
   469f8:	mov	x0, x2
   469fc:	bl	6d70 <__asan_internal_strcmp@plt>
   46a00:	cmp	w0, #0x0
   46a04:	b.ne	46a68 <__asan_cplus_demangle_print@@Base+0x21cc>  // b.any
   46a08:	ldr	x0, [sp, #24]
   46a0c:	ldr	x0, [x0, #16]
   46a10:	ldr	x0, [x0, #8]
   46a14:	ldr	w0, [x0]
   46a18:	cmp	w0, #0x3
   46a1c:	b.ne	46a68 <__asan_cplus_demangle_print@@Base+0x21cc>  // b.any
   46a20:	ldr	x0, [sp, #24]
   46a24:	ldr	x0, [x0, #16]
   46a28:	ldr	x0, [x0, #8]
   46a2c:	str	x0, [sp, #320]
   46a30:	ldr	x0, [sp, #320]
   46a34:	ldr	x0, [x0, #16]
   46a38:	ldr	w0, [x0]
   46a3c:	cmp	w0, #0x29
   46a40:	b.eq	46a4c <__asan_cplus_demangle_print@@Base+0x21b0>  // b.none
   46a44:	ldr	x0, [sp, #40]
   46a48:	bl	444a8 <__asan_cplus_demangle_type@@Base+0x37e4>
   46a4c:	ldr	x0, [sp, #320]
   46a50:	ldr	x0, [x0, #8]
   46a54:	mov	x2, x0
   46a58:	ldr	w1, [sp, #36]
   46a5c:	ldr	x0, [sp, #40]
   46a60:	bl	44d10 <__asan_cplus_demangle_print@@Base+0x474>
   46a64:	b	46a84 <__asan_cplus_demangle_print@@Base+0x21e8>
   46a68:	ldr	x0, [sp, #24]
   46a6c:	ldr	x0, [x0, #16]
   46a70:	ldr	x0, [x0, #8]
   46a74:	mov	x2, x0
   46a78:	ldr	w1, [sp, #36]
   46a7c:	ldr	x0, [sp, #40]
   46a80:	bl	44d10 <__asan_cplus_demangle_print@@Base+0x474>
   46a84:	ldr	x0, [sp, #24]
   46a88:	ldr	x0, [x0, #8]
   46a8c:	ldr	x0, [x0, #8]
   46a90:	ldr	x2, [x0]
   46a94:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   46a98:	add	x1, x0, #0x4a8
   46a9c:	mov	x0, x2
   46aa0:	bl	6d70 <__asan_internal_strcmp@plt>
   46aa4:	cmp	w0, #0x0
   46aa8:	b.ne	46ae4 <__asan_cplus_demangle_print@@Base+0x2248>  // b.any
   46aac:	mov	w1, #0x5b                  	// #91
   46ab0:	ldr	x0, [sp, #40]
   46ab4:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   46ab8:	ldr	x0, [sp, #24]
   46abc:	ldr	x0, [x0, #16]
   46ac0:	ldr	x0, [x0, #16]
   46ac4:	mov	x2, x0
   46ac8:	ldr	w1, [sp, #36]
   46acc:	ldr	x0, [sp, #40]
   46ad0:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   46ad4:	mov	w1, #0x5d                  	// #93
   46ad8:	ldr	x0, [sp, #40]
   46adc:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   46ae0:	b	46b40 <__asan_cplus_demangle_print@@Base+0x22a4>
   46ae4:	ldr	x0, [sp, #24]
   46ae8:	ldr	x0, [x0, #8]
   46aec:	ldr	x0, [x0, #8]
   46af0:	ldr	x2, [x0]
   46af4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   46af8:	add	x1, x0, #0x360
   46afc:	mov	x0, x2
   46b00:	bl	6d70 <__asan_internal_strcmp@plt>
   46b04:	cmp	w0, #0x0
   46b08:	b.eq	46b24 <__asan_cplus_demangle_print@@Base+0x2288>  // b.none
   46b0c:	ldr	x0, [sp, #24]
   46b10:	ldr	x0, [x0, #8]
   46b14:	mov	x2, x0
   46b18:	ldr	w1, [sp, #36]
   46b1c:	ldr	x0, [sp, #40]
   46b20:	bl	47f48 <__asan_cplus_demangle_print@@Base+0x36ac>
   46b24:	ldr	x0, [sp, #24]
   46b28:	ldr	x0, [x0, #16]
   46b2c:	ldr	x0, [x0, #16]
   46b30:	mov	x2, x0
   46b34:	ldr	w1, [sp, #36]
   46b38:	ldr	x0, [sp, #40]
   46b3c:	bl	44d10 <__asan_cplus_demangle_print@@Base+0x474>
   46b40:	ldr	x0, [sp, #24]
   46b44:	ldr	x0, [x0, #8]
   46b48:	ldr	w0, [x0]
   46b4c:	cmp	w0, #0x32
   46b50:	b.ne	47364 <__asan_cplus_demangle_print@@Base+0x2ac8>  // b.any
   46b54:	ldr	x0, [sp, #24]
   46b58:	ldr	x0, [x0, #8]
   46b5c:	ldr	x0, [x0, #8]
   46b60:	ldr	w0, [x0, #16]
   46b64:	cmp	w0, #0x1
   46b68:	b.ne	47364 <__asan_cplus_demangle_print@@Base+0x2ac8>  // b.any
   46b6c:	ldr	x0, [sp, #24]
   46b70:	ldr	x0, [x0, #8]
   46b74:	ldr	x0, [x0, #8]
   46b78:	ldr	x0, [x0, #8]
   46b7c:	ldrb	w0, [x0]
   46b80:	cmp	w0, #0x3e
   46b84:	b.ne	47364 <__asan_cplus_demangle_print@@Base+0x2ac8>  // b.any
   46b88:	mov	w1, #0x29                  	// #41
   46b8c:	ldr	x0, [sp, #40]
   46b90:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   46b94:	b	47364 <__asan_cplus_demangle_print@@Base+0x2ac8>
   46b98:	ldr	x0, [sp, #40]
   46b9c:	bl	444a8 <__asan_cplus_demangle_type@@Base+0x37e4>
   46ba0:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   46ba4:	ldr	x0, [sp, #24]
   46ba8:	ldr	x0, [x0, #16]
   46bac:	ldr	w0, [x0]
   46bb0:	cmp	w0, #0x3b
   46bb4:	b.ne	46bd0 <__asan_cplus_demangle_print@@Base+0x2334>  // b.any
   46bb8:	ldr	x0, [sp, #24]
   46bbc:	ldr	x0, [x0, #16]
   46bc0:	ldr	x0, [x0, #16]
   46bc4:	ldr	w0, [x0]
   46bc8:	cmp	w0, #0x3c
   46bcc:	b.eq	46bdc <__asan_cplus_demangle_print@@Base+0x2340>  // b.none
   46bd0:	ldr	x0, [sp, #40]
   46bd4:	bl	444a8 <__asan_cplus_demangle_type@@Base+0x37e4>
   46bd8:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   46bdc:	ldr	x2, [sp, #24]
   46be0:	ldr	w1, [sp, #36]
   46be4:	ldr	x0, [sp, #40]
   46be8:	bl	44f6c <__asan_cplus_demangle_print@@Base+0x6d0>
   46bec:	cmp	w0, #0x0
   46bf0:	b.ne	4736c <__asan_cplus_demangle_print@@Base+0x2ad0>  // b.any
   46bf4:	ldr	x0, [sp, #24]
   46bf8:	ldr	x0, [x0, #8]
   46bfc:	str	x0, [sp, #352]
   46c00:	ldr	x0, [sp, #24]
   46c04:	ldr	x0, [x0, #16]
   46c08:	ldr	x0, [x0, #8]
   46c0c:	str	x0, [sp, #344]
   46c10:	ldr	x0, [sp, #24]
   46c14:	ldr	x0, [x0, #16]
   46c18:	ldr	x0, [x0, #16]
   46c1c:	ldr	x0, [x0, #8]
   46c20:	str	x0, [sp, #336]
   46c24:	ldr	x0, [sp, #24]
   46c28:	ldr	x0, [x0, #16]
   46c2c:	ldr	x0, [x0, #16]
   46c30:	ldr	x0, [x0, #16]
   46c34:	str	x0, [sp, #328]
   46c38:	ldr	x0, [sp, #352]
   46c3c:	ldr	x0, [x0, #8]
   46c40:	ldr	x2, [x0]
   46c44:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   46c48:	add	x1, x0, #0x620
   46c4c:	mov	x0, x2
   46c50:	bl	6d70 <__asan_internal_strcmp@plt>
   46c54:	cmp	w0, #0x0
   46c58:	b.ne	46cb0 <__asan_cplus_demangle_print@@Base+0x2414>  // b.any
   46c5c:	ldr	x2, [sp, #344]
   46c60:	ldr	w1, [sp, #36]
   46c64:	ldr	x0, [sp, #40]
   46c68:	bl	44d10 <__asan_cplus_demangle_print@@Base+0x474>
   46c6c:	ldr	x2, [sp, #352]
   46c70:	ldr	w1, [sp, #36]
   46c74:	ldr	x0, [sp, #40]
   46c78:	bl	47f48 <__asan_cplus_demangle_print@@Base+0x36ac>
   46c7c:	ldr	x2, [sp, #336]
   46c80:	ldr	w1, [sp, #36]
   46c84:	ldr	x0, [sp, #40]
   46c88:	bl	44d10 <__asan_cplus_demangle_print@@Base+0x474>
   46c8c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   46c90:	add	x1, x0, #0xf40
   46c94:	ldr	x0, [sp, #40]
   46c98:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   46c9c:	ldr	x2, [sp, #328]
   46ca0:	ldr	w1, [sp, #36]
   46ca4:	ldr	x0, [sp, #40]
   46ca8:	bl	44d10 <__asan_cplus_demangle_print@@Base+0x474>
   46cac:	b	47374 <__asan_cplus_demangle_print@@Base+0x2ad8>
   46cb0:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   46cb4:	add	x1, x0, #0xf48
   46cb8:	ldr	x0, [sp, #40]
   46cbc:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   46cc0:	ldr	x0, [sp, #344]
   46cc4:	ldr	x0, [x0, #8]
   46cc8:	cmp	x0, #0x0
   46ccc:	b.eq	46cec <__asan_cplus_demangle_print@@Base+0x2450>  // b.none
   46cd0:	ldr	x2, [sp, #344]
   46cd4:	ldr	w1, [sp, #36]
   46cd8:	ldr	x0, [sp, #40]
   46cdc:	bl	44d10 <__asan_cplus_demangle_print@@Base+0x474>
   46ce0:	mov	w1, #0x20                  	// #32
   46ce4:	ldr	x0, [sp, #40]
   46ce8:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   46cec:	ldr	x2, [sp, #336]
   46cf0:	ldr	w1, [sp, #36]
   46cf4:	ldr	x0, [sp, #40]
   46cf8:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   46cfc:	ldr	x0, [sp, #328]
   46d00:	cmp	x0, #0x0
   46d04:	b.eq	47374 <__asan_cplus_demangle_print@@Base+0x2ad8>  // b.none
   46d08:	ldr	x2, [sp, #328]
   46d0c:	ldr	w1, [sp, #36]
   46d10:	ldr	x0, [sp, #40]
   46d14:	bl	44d10 <__asan_cplus_demangle_print@@Base+0x474>
   46d18:	b	47374 <__asan_cplus_demangle_print@@Base+0x2ad8>
   46d1c:	ldr	x0, [sp, #40]
   46d20:	bl	444a8 <__asan_cplus_demangle_type@@Base+0x37e4>
   46d24:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   46d28:	str	wzr, [sp, #380]
   46d2c:	ldr	x0, [sp, #24]
   46d30:	ldr	x0, [x0, #8]
   46d34:	ldr	w0, [x0]
   46d38:	cmp	w0, #0x27
   46d3c:	b.ne	46f1c <__asan_cplus_demangle_print@@Base+0x2680>  // b.any
   46d40:	ldr	x0, [sp, #24]
   46d44:	ldr	x0, [x0, #8]
   46d48:	ldr	x0, [x0, #8]
   46d4c:	ldr	w0, [x0, #28]
   46d50:	str	w0, [sp, #380]
   46d54:	ldr	w0, [sp, #380]
   46d58:	cmp	w0, #0x6
   46d5c:	b.hi	46d70 <__asan_cplus_demangle_print@@Base+0x24d4>  // b.pmore
   46d60:	ldr	w0, [sp, #380]
   46d64:	cmp	w0, #0x0
   46d68:	b.ne	46d80 <__asan_cplus_demangle_print@@Base+0x24e4>  // b.any
   46d6c:	b	46f28 <__asan_cplus_demangle_print@@Base+0x268c>
   46d70:	ldr	w0, [sp, #380]
   46d74:	cmp	w0, #0x7
   46d78:	b.eq	46e90 <__asan_cplus_demangle_print@@Base+0x25f4>  // b.none
   46d7c:	b	46f28 <__asan_cplus_demangle_print@@Base+0x268c>
   46d80:	ldr	x0, [sp, #24]
   46d84:	ldr	x0, [x0, #16]
   46d88:	ldr	w0, [x0]
   46d8c:	cmp	w0, #0x0
   46d90:	b.ne	46f24 <__asan_cplus_demangle_print@@Base+0x2688>  // b.any
   46d94:	ldr	x0, [sp, #24]
   46d98:	ldr	w0, [x0]
   46d9c:	cmp	w0, #0x3e
   46da0:	b.ne	46db0 <__asan_cplus_demangle_print@@Base+0x2514>  // b.any
   46da4:	mov	w1, #0x2d                  	// #45
   46da8:	ldr	x0, [sp, #40]
   46dac:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   46db0:	ldr	x0, [sp, #24]
   46db4:	ldr	x0, [x0, #16]
   46db8:	mov	x2, x0
   46dbc:	ldr	w1, [sp, #36]
   46dc0:	ldr	x0, [sp, #40]
   46dc4:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   46dc8:	ldr	w0, [sp, #380]
   46dcc:	cmp	w0, #0x6
   46dd0:	b.eq	46e74 <__asan_cplus_demangle_print@@Base+0x25d8>  // b.none
   46dd4:	ldr	w0, [sp, #380]
   46dd8:	cmp	w0, #0x6
   46ddc:	b.hi	46e88 <__asan_cplus_demangle_print@@Base+0x25ec>  // b.pmore
   46de0:	ldr	w0, [sp, #380]
   46de4:	cmp	w0, #0x5
   46de8:	b.eq	46e60 <__asan_cplus_demangle_print@@Base+0x25c4>  // b.none
   46dec:	ldr	w0, [sp, #380]
   46df0:	cmp	w0, #0x5
   46df4:	b.hi	46e88 <__asan_cplus_demangle_print@@Base+0x25ec>  // b.pmore
   46df8:	ldr	w0, [sp, #380]
   46dfc:	cmp	w0, #0x4
   46e00:	b.eq	46e4c <__asan_cplus_demangle_print@@Base+0x25b0>  // b.none
   46e04:	ldr	w0, [sp, #380]
   46e08:	cmp	w0, #0x4
   46e0c:	b.hi	46e88 <__asan_cplus_demangle_print@@Base+0x25ec>  // b.pmore
   46e10:	ldr	w0, [sp, #380]
   46e14:	cmp	w0, #0x2
   46e18:	b.eq	46e2c <__asan_cplus_demangle_print@@Base+0x2590>  // b.none
   46e1c:	ldr	w0, [sp, #380]
   46e20:	cmp	w0, #0x3
   46e24:	b.eq	46e3c <__asan_cplus_demangle_print@@Base+0x25a0>  // b.none
   46e28:	b	46e88 <__asan_cplus_demangle_print@@Base+0x25ec>
   46e2c:	mov	w1, #0x75                  	// #117
   46e30:	ldr	x0, [sp, #40]
   46e34:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   46e38:	b	46e8c <__asan_cplus_demangle_print@@Base+0x25f0>
   46e3c:	mov	w1, #0x6c                  	// #108
   46e40:	ldr	x0, [sp, #40]
   46e44:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   46e48:	b	46e8c <__asan_cplus_demangle_print@@Base+0x25f0>
   46e4c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   46e50:	add	x1, x0, #0xf50
   46e54:	ldr	x0, [sp, #40]
   46e58:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   46e5c:	b	46e8c <__asan_cplus_demangle_print@@Base+0x25f0>
   46e60:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   46e64:	add	x1, x0, #0xf58
   46e68:	ldr	x0, [sp, #40]
   46e6c:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   46e70:	b	46e8c <__asan_cplus_demangle_print@@Base+0x25f0>
   46e74:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   46e78:	add	x1, x0, #0xf60
   46e7c:	ldr	x0, [sp, #40]
   46e80:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   46e84:	b	46e8c <__asan_cplus_demangle_print@@Base+0x25f0>
   46e88:	nop
   46e8c:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   46e90:	ldr	x0, [sp, #24]
   46e94:	ldr	x0, [x0, #16]
   46e98:	ldr	w0, [x0]
   46e9c:	cmp	w0, #0x0
   46ea0:	b.ne	46f14 <__asan_cplus_demangle_print@@Base+0x2678>  // b.any
   46ea4:	ldr	x0, [sp, #24]
   46ea8:	ldr	x0, [x0, #16]
   46eac:	ldr	w0, [x0, #16]
   46eb0:	cmp	w0, #0x1
   46eb4:	b.ne	46f14 <__asan_cplus_demangle_print@@Base+0x2678>  // b.any
   46eb8:	ldr	x0, [sp, #24]
   46ebc:	ldr	w0, [x0]
   46ec0:	cmp	w0, #0x3d
   46ec4:	b.ne	46f14 <__asan_cplus_demangle_print@@Base+0x2678>  // b.any
   46ec8:	ldr	x0, [sp, #24]
   46ecc:	ldr	x0, [x0, #16]
   46ed0:	ldr	x0, [x0, #8]
   46ed4:	ldrb	w0, [x0]
   46ed8:	cmp	w0, #0x30
   46edc:	b.eq	46eec <__asan_cplus_demangle_print@@Base+0x2650>  // b.none
   46ee0:	cmp	w0, #0x31
   46ee4:	b.eq	46f00 <__asan_cplus_demangle_print@@Base+0x2664>  // b.none
   46ee8:	b	46f18 <__asan_cplus_demangle_print@@Base+0x267c>
   46eec:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   46ef0:	add	x1, x0, #0xf68
   46ef4:	ldr	x0, [sp, #40]
   46ef8:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   46efc:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   46f00:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   46f04:	add	x1, x0, #0xf70
   46f08:	ldr	x0, [sp, #40]
   46f0c:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   46f10:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   46f14:	nop
   46f18:	b	46f28 <__asan_cplus_demangle_print@@Base+0x268c>
   46f1c:	nop
   46f20:	b	46f28 <__asan_cplus_demangle_print@@Base+0x268c>
   46f24:	nop
   46f28:	mov	w1, #0x28                  	// #40
   46f2c:	ldr	x0, [sp, #40]
   46f30:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   46f34:	ldr	x0, [sp, #24]
   46f38:	ldr	x0, [x0, #8]
   46f3c:	mov	x2, x0
   46f40:	ldr	w1, [sp, #36]
   46f44:	ldr	x0, [sp, #40]
   46f48:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   46f4c:	mov	w1, #0x29                  	// #41
   46f50:	ldr	x0, [sp, #40]
   46f54:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   46f58:	ldr	x0, [sp, #24]
   46f5c:	ldr	w0, [x0]
   46f60:	cmp	w0, #0x3e
   46f64:	b.ne	46f74 <__asan_cplus_demangle_print@@Base+0x26d8>  // b.any
   46f68:	mov	w1, #0x2d                  	// #45
   46f6c:	ldr	x0, [sp, #40]
   46f70:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   46f74:	ldr	w0, [sp, #380]
   46f78:	cmp	w0, #0x8
   46f7c:	b.ne	46f8c <__asan_cplus_demangle_print@@Base+0x26f0>  // b.any
   46f80:	mov	w1, #0x5b                  	// #91
   46f84:	ldr	x0, [sp, #40]
   46f88:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   46f8c:	ldr	x0, [sp, #24]
   46f90:	ldr	x0, [x0, #16]
   46f94:	mov	x2, x0
   46f98:	ldr	w1, [sp, #36]
   46f9c:	ldr	x0, [sp, #40]
   46fa0:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   46fa4:	ldr	w0, [sp, #380]
   46fa8:	cmp	w0, #0x8
   46fac:	b.ne	4737c <__asan_cplus_demangle_print@@Base+0x2ae0>  // b.any
   46fb0:	mov	w1, #0x5d                  	// #93
   46fb4:	ldr	x0, [sp, #40]
   46fb8:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   46fbc:	b	4737c <__asan_cplus_demangle_print@@Base+0x2ae0>
   46fc0:	ldr	x0, [sp, #24]
   46fc4:	ldr	x0, [x0, #8]
   46fc8:	mov	w1, w0
   46fcc:	ldr	x0, [sp, #40]
   46fd0:	bl	44650 <__asan_cplus_demangle_type@@Base+0x398c>
   46fd4:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   46fd8:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   46fdc:	add	x1, x0, #0xf78
   46fe0:	ldr	x0, [sp, #40]
   46fe4:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   46fe8:	ldr	x0, [sp, #24]
   46fec:	ldr	x0, [x0, #8]
   46ff0:	mov	x2, x0
   46ff4:	ldr	w1, [sp, #36]
   46ff8:	ldr	x0, [sp, #40]
   46ffc:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   47000:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   47004:	ldr	x0, [sp, #24]
   47008:	ldr	x0, [x0, #8]
   4700c:	mov	x2, x0
   47010:	ldr	w1, [sp, #36]
   47014:	ldr	x0, [sp, #40]
   47018:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   4701c:	ldr	x0, [sp, #24]
   47020:	ldr	x0, [x0, #16]
   47024:	mov	x2, x0
   47028:	ldr	w1, [sp, #36]
   4702c:	ldr	x0, [sp, #40]
   47030:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   47034:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   47038:	ldr	x0, [sp, #24]
   4703c:	ldr	w0, [x0, #8]
   47040:	and	w0, w0, #0xff
   47044:	mov	w1, w0
   47048:	ldr	x0, [sp, #40]
   4704c:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   47050:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   47054:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   47058:	add	x1, x0, #0xf88
   4705c:	ldr	x0, [sp, #40]
   47060:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   47064:	ldr	x0, [sp, #24]
   47068:	ldr	x0, [x0, #8]
   4706c:	mov	x2, x0
   47070:	ldr	w1, [sp, #36]
   47074:	ldr	x0, [sp, #40]
   47078:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   4707c:	mov	w1, #0x29                  	// #41
   47080:	ldr	x0, [sp, #40]
   47084:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   47088:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   4708c:	ldr	x0, [sp, #24]
   47090:	ldr	x0, [x0, #8]
   47094:	mov	x1, x0
   47098:	ldr	x0, [sp, #40]
   4709c:	bl	44a30 <__asan_cplus_demangle_print@@Base+0x194>
   470a0:	str	x0, [sp, #368]
   470a4:	ldr	x0, [sp, #368]
   470a8:	cmp	x0, #0x0
   470ac:	b.ne	470dc <__asan_cplus_demangle_print@@Base+0x2840>  // b.any
   470b0:	ldr	x0, [sp, #24]
   470b4:	ldr	x0, [x0, #8]
   470b8:	mov	x2, x0
   470bc:	ldr	w1, [sp, #36]
   470c0:	ldr	x0, [sp, #40]
   470c4:	bl	44d10 <__asan_cplus_demangle_print@@Base+0x474>
   470c8:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   470cc:	add	x1, x0, #0x458
   470d0:	ldr	x0, [sp, #40]
   470d4:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   470d8:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   470dc:	ldr	x0, [sp, #368]
   470e0:	bl	44bf4 <__asan_cplus_demangle_print@@Base+0x358>
   470e4:	str	w0, [sp, #364]
   470e8:	ldr	x0, [sp, #24]
   470ec:	ldr	x0, [x0, #8]
   470f0:	str	x0, [sp, #24]
   470f4:	str	wzr, [sp, #376]
   470f8:	b	47148 <__asan_cplus_demangle_print@@Base+0x28ac>
   470fc:	ldr	x0, [sp, #40]
   47100:	ldr	w1, [sp, #376]
   47104:	str	w1, [x0, #316]
   47108:	ldr	x2, [sp, #24]
   4710c:	ldr	w1, [sp, #36]
   47110:	ldr	x0, [sp, #40]
   47114:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   47118:	ldr	w0, [sp, #364]
   4711c:	sub	w0, w0, #0x1
   47120:	ldr	w1, [sp, #376]
   47124:	cmp	w1, w0
   47128:	b.ge	4713c <__asan_cplus_demangle_print@@Base+0x28a0>  // b.tcont
   4712c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   47130:	add	x1, x0, #0xf10
   47134:	ldr	x0, [sp, #40]
   47138:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   4713c:	ldr	w0, [sp, #376]
   47140:	add	w0, w0, #0x1
   47144:	str	w0, [sp, #376]
   47148:	ldr	w1, [sp, #376]
   4714c:	ldr	w0, [sp, #364]
   47150:	cmp	w1, w0
   47154:	b.lt	470fc <__asan_cplus_demangle_print@@Base+0x2860>  // b.tstop
   47158:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   4715c:	ldr	x0, [sp, #24]
   47160:	ldr	x0, [x0, #8]
   47164:	str	x0, [sp, #232]
   47168:	ldr	x0, [sp, #232]
   4716c:	cmp	x0, #0x0
   47170:	b.ne	47188 <__asan_cplus_demangle_print@@Base+0x28ec>  // b.any
   47174:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   47178:	add	x1, x0, #0xf98
   4717c:	ldr	x0, [sp, #40]
   47180:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   47184:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   47188:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   4718c:	add	x1, x0, #0xfa0
   47190:	ldr	x0, [sp, #40]
   47194:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   47198:	ldr	x0, [sp, #232]
   4719c:	mov	w1, w0
   471a0:	ldr	x0, [sp, #40]
   471a4:	bl	44650 <__asan_cplus_demangle_type@@Base+0x398c>
   471a8:	mov	w1, #0x7d                  	// #125
   471ac:	ldr	x0, [sp, #40]
   471b0:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   471b4:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   471b8:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   471bc:	add	x1, x0, #0xfa8
   471c0:	ldr	x0, [sp, #40]
   471c4:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   471c8:	ldr	x0, [sp, #24]
   471cc:	ldr	x0, [x0, #8]
   471d0:	mov	x2, x0
   471d4:	ldr	w1, [sp, #36]
   471d8:	ldr	x0, [sp, #40]
   471dc:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   471e0:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   471e4:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   471e8:	add	x1, x0, #0xfc8
   471ec:	ldr	x0, [sp, #40]
   471f0:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   471f4:	ldr	x0, [sp, #24]
   471f8:	ldr	x0, [x0, #8]
   471fc:	mov	x2, x0
   47200:	ldr	w1, [sp, #36]
   47204:	ldr	x0, [sp, #40]
   47208:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   4720c:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   47210:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   47214:	add	x1, x0, #0xfe8
   47218:	ldr	x0, [sp, #40]
   4721c:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   47220:	ldr	x0, [sp, #40]
   47224:	ldr	w0, [x0, #312]
   47228:	add	w1, w0, #0x1
   4722c:	ldr	x0, [sp, #40]
   47230:	str	w1, [x0, #312]
   47234:	ldr	x0, [sp, #24]
   47238:	ldr	x0, [x0, #8]
   4723c:	mov	x2, x0
   47240:	ldr	w1, [sp, #36]
   47244:	ldr	x0, [sp, #40]
   47248:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   4724c:	ldr	x0, [sp, #40]
   47250:	ldr	w0, [x0, #312]
   47254:	sub	w1, w0, #0x1
   47258:	ldr	x0, [sp, #40]
   4725c:	str	w1, [x0, #312]
   47260:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   47264:	add	x1, x0, #0xff8
   47268:	ldr	x0, [sp, #40]
   4726c:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   47270:	ldr	x0, [sp, #24]
   47274:	ldr	w0, [x0, #16]
   47278:	add	w0, w0, #0x1
   4727c:	mov	w1, w0
   47280:	ldr	x0, [sp, #40]
   47284:	bl	44650 <__asan_cplus_demangle_type@@Base+0x398c>
   47288:	mov	w1, #0x7d                  	// #125
   4728c:	ldr	x0, [sp, #40]
   47290:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   47294:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   47298:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   4729c:	add	x1, x0, #0x0
   472a0:	ldr	x0, [sp, #40]
   472a4:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   472a8:	ldr	x0, [sp, #24]
   472ac:	ldr	x0, [x0, #8]
   472b0:	add	w0, w0, #0x1
   472b4:	mov	w1, w0
   472b8:	ldr	x0, [sp, #40]
   472bc:	bl	44650 <__asan_cplus_demangle_type@@Base+0x398c>
   472c0:	mov	w1, #0x7d                  	// #125
   472c4:	ldr	x0, [sp, #40]
   472c8:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   472cc:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   472d0:	ldr	x0, [sp, #24]
   472d4:	ldr	x0, [x0, #8]
   472d8:	mov	x2, x0
   472dc:	ldr	w1, [sp, #36]
   472e0:	ldr	x0, [sp, #40]
   472e4:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   472e8:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   472ec:	add	x1, x0, #0x10
   472f0:	ldr	x0, [sp, #40]
   472f4:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   472f8:	ldr	x0, [sp, #24]
   472fc:	ldr	x0, [x0, #16]
   47300:	mov	x2, x0
   47304:	ldr	w1, [sp, #36]
   47308:	ldr	x0, [sp, #40]
   4730c:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   47310:	mov	w1, #0x5d                  	// #93
   47314:	ldr	x0, [sp, #40]
   47318:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   4731c:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   47320:	ldr	x0, [sp, #40]
   47324:	bl	444a8 <__asan_cplus_demangle_type@@Base+0x37e4>
   47328:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   4732c:	nop
   47330:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   47334:	nop
   47338:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   4733c:	nop
   47340:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   47344:	nop
   47348:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   4734c:	nop
   47350:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   47354:	nop
   47358:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   4735c:	nop
   47360:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   47364:	nop
   47368:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   4736c:	nop
   47370:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   47374:	nop
   47378:	b	47380 <__asan_cplus_demangle_print@@Base+0x2ae4>
   4737c:	nop
   47380:	ldp	x29, x30, [sp]
   47384:	add	sp, sp, #0x200
   47388:	ret
   4738c:	stp	x29, x30, [sp, #-64]!
   47390:	mov	x29, sp
   47394:	str	x0, [sp, #40]
   47398:	str	w1, [sp, #36]
   4739c:	str	x2, [sp, #24]
   473a0:	ldr	x0, [sp, #24]
   473a4:	cmp	x0, #0x0
   473a8:	b.eq	473cc <__asan_cplus_demangle_print@@Base+0x2b30>  // b.none
   473ac:	ldr	x0, [sp, #24]
   473b0:	ldr	w0, [x0, #4]
   473b4:	cmp	w0, #0x1
   473b8:	b.gt	473cc <__asan_cplus_demangle_print@@Base+0x2b30>
   473bc:	ldr	x0, [sp, #40]
   473c0:	ldr	w0, [x0, #308]
   473c4:	cmp	w0, #0x400
   473c8:	b.le	473d8 <__asan_cplus_demangle_print@@Base+0x2b3c>
   473cc:	ldr	x0, [sp, #40]
   473d0:	bl	444a8 <__asan_cplus_demangle_type@@Base+0x37e4>
   473d4:	b	47464 <__asan_cplus_demangle_print@@Base+0x2bc8>
   473d8:	ldr	x0, [sp, #24]
   473dc:	ldr	w0, [x0, #4]
   473e0:	add	w1, w0, #0x1
   473e4:	ldr	x0, [sp, #24]
   473e8:	str	w1, [x0, #4]
   473ec:	ldr	x0, [sp, #40]
   473f0:	ldr	w0, [x0, #308]
   473f4:	add	w1, w0, #0x1
   473f8:	ldr	x0, [sp, #40]
   473fc:	str	w1, [x0, #308]
   47400:	ldr	x0, [sp, #24]
   47404:	str	x0, [sp, #48]
   47408:	ldr	x0, [sp, #40]
   4740c:	ldr	x0, [x0, #328]
   47410:	str	x0, [sp, #56]
   47414:	ldr	x0, [sp, #40]
   47418:	add	x1, sp, #0x30
   4741c:	str	x1, [x0, #328]
   47420:	ldr	x2, [sp, #24]
   47424:	ldr	w1, [sp, #36]
   47428:	ldr	x0, [sp, #40]
   4742c:	bl	45158 <__asan_cplus_demangle_print@@Base+0x8bc>
   47430:	ldr	x1, [sp, #56]
   47434:	ldr	x0, [sp, #40]
   47438:	str	x1, [x0, #328]
   4743c:	ldr	x0, [sp, #24]
   47440:	ldr	w0, [x0, #4]
   47444:	sub	w1, w0, #0x1
   47448:	ldr	x0, [sp, #24]
   4744c:	str	w1, [x0, #4]
   47450:	ldr	x0, [sp, #40]
   47454:	ldr	w0, [x0, #308]
   47458:	sub	w1, w0, #0x1
   4745c:	ldr	x0, [sp, #40]
   47460:	str	w1, [x0, #308]
   47464:	ldp	x29, x30, [sp], #64
   47468:	ret
   4746c:	stp	x29, x30, [sp, #-96]!
   47470:	mov	x29, sp
   47474:	str	x0, [sp, #40]
   47478:	str	x1, [sp, #32]
   4747c:	str	w2, [sp, #28]
   47480:	ldrsw	x0, [sp, #28]
   47484:	ldr	x1, [sp, #32]
   47488:	add	x0, x1, x0
   4748c:	str	x0, [sp, #56]
   47490:	ldr	x0, [sp, #32]
   47494:	str	x0, [sp, #88]
   47498:	b	47630 <__asan_cplus_demangle_print@@Base+0x2d94>
   4749c:	ldr	x1, [sp, #56]
   474a0:	ldr	x0, [sp, #88]
   474a4:	sub	x0, x1, x0
   474a8:	cmp	x0, #0x3
   474ac:	b.le	47610 <__asan_cplus_demangle_print@@Base+0x2d74>
   474b0:	ldr	x0, [sp, #88]
   474b4:	ldrb	w0, [x0]
   474b8:	cmp	w0, #0x5f
   474bc:	b.ne	47610 <__asan_cplus_demangle_print@@Base+0x2d74>  // b.any
   474c0:	ldr	x0, [sp, #88]
   474c4:	add	x0, x0, #0x1
   474c8:	ldrb	w0, [x0]
   474cc:	cmp	w0, #0x5f
   474d0:	b.ne	47610 <__asan_cplus_demangle_print@@Base+0x2d74>  // b.any
   474d4:	ldr	x0, [sp, #88]
   474d8:	add	x0, x0, #0x2
   474dc:	ldrb	w0, [x0]
   474e0:	cmp	w0, #0x55
   474e4:	b.ne	47610 <__asan_cplus_demangle_print@@Base+0x2d74>  // b.any
   474e8:	str	xzr, [sp, #80]
   474ec:	ldr	x0, [sp, #88]
   474f0:	add	x0, x0, #0x3
   474f4:	str	x0, [sp, #72]
   474f8:	b	475b4 <__asan_cplus_demangle_print@@Base+0x2d18>
   474fc:	ldr	x0, [sp, #72]
   47500:	ldrb	w0, [x0]
   47504:	cmp	w0, #0x2f
   47508:	b.ls	47530 <__asan_cplus_demangle_print@@Base+0x2c94>  // b.plast
   4750c:	ldr	x0, [sp, #72]
   47510:	ldrb	w0, [x0]
   47514:	cmp	w0, #0x39
   47518:	b.hi	47530 <__asan_cplus_demangle_print@@Base+0x2c94>  // b.pmore
   4751c:	ldr	x0, [sp, #72]
   47520:	ldrb	w0, [x0]
   47524:	sub	w0, w0, #0x30
   47528:	str	w0, [sp, #68]
   4752c:	b	47594 <__asan_cplus_demangle_print@@Base+0x2cf8>
   47530:	ldr	x0, [sp, #72]
   47534:	ldrb	w0, [x0]
   47538:	cmp	w0, #0x40
   4753c:	b.ls	47564 <__asan_cplus_demangle_print@@Base+0x2cc8>  // b.plast
   47540:	ldr	x0, [sp, #72]
   47544:	ldrb	w0, [x0]
   47548:	cmp	w0, #0x46
   4754c:	b.hi	47564 <__asan_cplus_demangle_print@@Base+0x2cc8>  // b.pmore
   47550:	ldr	x0, [sp, #72]
   47554:	ldrb	w0, [x0]
   47558:	sub	w0, w0, #0x37
   4755c:	str	w0, [sp, #68]
   47560:	b	47594 <__asan_cplus_demangle_print@@Base+0x2cf8>
   47564:	ldr	x0, [sp, #72]
   47568:	ldrb	w0, [x0]
   4756c:	cmp	w0, #0x60
   47570:	b.ls	475c4 <__asan_cplus_demangle_print@@Base+0x2d28>  // b.plast
   47574:	ldr	x0, [sp, #72]
   47578:	ldrb	w0, [x0]
   4757c:	cmp	w0, #0x66
   47580:	b.hi	475c4 <__asan_cplus_demangle_print@@Base+0x2d28>  // b.pmore
   47584:	ldr	x0, [sp, #72]
   47588:	ldrb	w0, [x0]
   4758c:	sub	w0, w0, #0x57
   47590:	str	w0, [sp, #68]
   47594:	ldr	x0, [sp, #80]
   47598:	lsl	x1, x0, #4
   4759c:	ldrsw	x0, [sp, #68]
   475a0:	add	x0, x1, x0
   475a4:	str	x0, [sp, #80]
   475a8:	ldr	x0, [sp, #72]
   475ac:	add	x0, x0, #0x1
   475b0:	str	x0, [sp, #72]
   475b4:	ldr	x1, [sp, #72]
   475b8:	ldr	x0, [sp, #56]
   475bc:	cmp	x1, x0
   475c0:	b.cc	474fc <__asan_cplus_demangle_print@@Base+0x2c60>  // b.lo, b.ul, b.last
   475c4:	ldr	x1, [sp, #72]
   475c8:	ldr	x0, [sp, #56]
   475cc:	cmp	x1, x0
   475d0:	b.cs	47610 <__asan_cplus_demangle_print@@Base+0x2d74>  // b.hs, b.nlast
   475d4:	ldr	x0, [sp, #72]
   475d8:	ldrb	w0, [x0]
   475dc:	cmp	w0, #0x5f
   475e0:	b.ne	47610 <__asan_cplus_demangle_print@@Base+0x2d74>  // b.any
   475e4:	ldr	x0, [sp, #80]
   475e8:	cmp	x0, #0xff
   475ec:	b.hi	47610 <__asan_cplus_demangle_print@@Base+0x2d74>  // b.pmore
   475f0:	ldr	x0, [sp, #80]
   475f4:	and	w0, w0, #0xff
   475f8:	mov	w1, w0
   475fc:	ldr	x0, [sp, #40]
   47600:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   47604:	ldr	x0, [sp, #72]
   47608:	str	x0, [sp, #88]
   4760c:	b	47624 <__asan_cplus_demangle_print@@Base+0x2d88>
   47610:	ldr	x0, [sp, #88]
   47614:	ldrb	w0, [x0]
   47618:	mov	w1, w0
   4761c:	ldr	x0, [sp, #40]
   47620:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   47624:	ldr	x0, [sp, #88]
   47628:	add	x0, x0, #0x1
   4762c:	str	x0, [sp, #88]
   47630:	ldr	x1, [sp, #88]
   47634:	ldr	x0, [sp, #56]
   47638:	cmp	x1, x0
   4763c:	b.cc	4749c <__asan_cplus_demangle_print@@Base+0x2c00>  // b.lo, b.ul, b.last
   47640:	nop
   47644:	nop
   47648:	ldp	x29, x30, [sp], #96
   4764c:	ret
   47650:	stp	x29, x30, [sp, #-80]!
   47654:	mov	x29, sp
   47658:	str	x0, [sp, #40]
   4765c:	str	w1, [sp, #36]
   47660:	str	x2, [sp, #24]
   47664:	str	w3, [sp, #32]
   47668:	ldr	x0, [sp, #24]
   4766c:	cmp	x0, #0x0
   47670:	b.eq	478fc <__asan_cplus_demangle_print@@Base+0x3060>  // b.none
   47674:	ldr	x0, [sp, #40]
   47678:	bl	444c8 <__asan_cplus_demangle_type@@Base+0x3804>
   4767c:	cmp	w0, #0x0
   47680:	b.ne	478fc <__asan_cplus_demangle_print@@Base+0x3060>  // b.any
   47684:	ldr	x0, [sp, #24]
   47688:	ldr	w0, [x0, #16]
   4768c:	cmp	w0, #0x0
   47690:	b.ne	476b8 <__asan_cplus_demangle_print@@Base+0x2e1c>  // b.any
   47694:	ldr	w0, [sp, #32]
   47698:	cmp	w0, #0x0
   4769c:	b.ne	476d8 <__asan_cplus_demangle_print@@Base+0x2e3c>  // b.any
   476a0:	ldr	x0, [sp, #24]
   476a4:	ldr	x0, [x0, #8]
   476a8:	ldr	w0, [x0]
   476ac:	bl	3e5f0 <__asan_backtrace_create_state@@Base+0xa4>
   476b0:	cmp	w0, #0x0
   476b4:	b.eq	476d8 <__asan_cplus_demangle_print@@Base+0x2e3c>  // b.none
   476b8:	ldr	x0, [sp, #24]
   476bc:	ldr	x0, [x0]
   476c0:	ldr	w3, [sp, #32]
   476c4:	mov	x2, x0
   476c8:	ldr	w1, [sp, #36]
   476cc:	ldr	x0, [sp, #40]
   476d0:	bl	47650 <__asan_cplus_demangle_print@@Base+0x2db4>
   476d4:	b	47900 <__asan_cplus_demangle_print@@Base+0x3064>
   476d8:	ldr	x0, [sp, #24]
   476dc:	mov	w1, #0x1                   	// #1
   476e0:	str	w1, [x0, #16]
   476e4:	ldr	x0, [sp, #40]
   476e8:	ldr	x0, [x0, #288]
   476ec:	str	x0, [sp, #64]
   476f0:	ldr	x0, [sp, #24]
   476f4:	ldr	x1, [x0, #24]
   476f8:	ldr	x0, [sp, #40]
   476fc:	str	x1, [x0, #288]
   47700:	ldr	x0, [sp, #24]
   47704:	ldr	x0, [x0, #8]
   47708:	ldr	w0, [x0]
   4770c:	cmp	w0, #0x29
   47710:	b.ne	47748 <__asan_cplus_demangle_print@@Base+0x2eac>  // b.any
   47714:	ldr	x0, [sp, #24]
   47718:	ldr	x1, [x0, #8]
   4771c:	ldr	x0, [sp, #24]
   47720:	ldr	x0, [x0]
   47724:	mov	x3, x0
   47728:	mov	x2, x1
   4772c:	ldr	w1, [sp, #36]
   47730:	ldr	x0, [sp, #40]
   47734:	bl	47bbc <__asan_cplus_demangle_print@@Base+0x3320>
   47738:	ldr	x0, [sp, #40]
   4773c:	ldr	x1, [sp, #64]
   47740:	str	x1, [x0, #288]
   47744:	b	47900 <__asan_cplus_demangle_print@@Base+0x3064>
   47748:	ldr	x0, [sp, #24]
   4774c:	ldr	x0, [x0, #8]
   47750:	ldr	w0, [x0]
   47754:	cmp	w0, #0x2a
   47758:	b.ne	47790 <__asan_cplus_demangle_print@@Base+0x2ef4>  // b.any
   4775c:	ldr	x0, [sp, #24]
   47760:	ldr	x1, [x0, #8]
   47764:	ldr	x0, [sp, #24]
   47768:	ldr	x0, [x0]
   4776c:	mov	x3, x0
   47770:	mov	x2, x1
   47774:	ldr	w1, [sp, #36]
   47778:	ldr	x0, [sp, #40]
   4777c:	bl	47e08 <__asan_cplus_demangle_print@@Base+0x356c>
   47780:	ldr	x0, [sp, #40]
   47784:	ldr	x1, [sp, #64]
   47788:	str	x1, [x0, #288]
   4778c:	b	47900 <__asan_cplus_demangle_print@@Base+0x3064>
   47790:	ldr	x0, [sp, #24]
   47794:	ldr	x0, [x0, #8]
   47798:	ldr	w0, [x0]
   4779c:	cmp	w0, #0x2
   477a0:	b.ne	478b8 <__asan_cplus_demangle_print@@Base+0x301c>  // b.any
   477a4:	ldr	x0, [sp, #40]
   477a8:	ldr	x0, [x0, #296]
   477ac:	str	x0, [sp, #56]
   477b0:	ldr	x0, [sp, #40]
   477b4:	str	xzr, [x0, #296]
   477b8:	ldr	x0, [sp, #24]
   477bc:	ldr	x0, [x0, #8]
   477c0:	ldr	x0, [x0, #8]
   477c4:	mov	x2, x0
   477c8:	ldr	w1, [sp, #36]
   477cc:	ldr	x0, [sp, #40]
   477d0:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   477d4:	ldr	x0, [sp, #40]
   477d8:	ldr	x1, [sp, #56]
   477dc:	str	x1, [x0, #296]
   477e0:	ldr	w0, [sp, #36]
   477e4:	and	w0, w0, #0x4
   477e8:	cmp	w0, #0x0
   477ec:	b.ne	47804 <__asan_cplus_demangle_print@@Base+0x2f68>  // b.any
   477f0:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   477f4:	add	x1, x0, #0x490
   477f8:	ldr	x0, [sp, #40]
   477fc:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   47800:	b	47810 <__asan_cplus_demangle_print@@Base+0x2f74>
   47804:	mov	w1, #0x2e                  	// #46
   47808:	ldr	x0, [sp, #40]
   4780c:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   47810:	ldr	x0, [sp, #24]
   47814:	ldr	x0, [x0, #8]
   47818:	ldr	x0, [x0, #16]
   4781c:	str	x0, [sp, #72]
   47820:	ldr	x0, [sp, #72]
   47824:	ldr	w0, [x0]
   47828:	cmp	w0, #0x47
   4782c:	b.ne	47884 <__asan_cplus_demangle_print@@Base+0x2fe8>  // b.any
   47830:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   47834:	add	x1, x0, #0xd08
   47838:	ldr	x0, [sp, #40]
   4783c:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   47840:	ldr	x0, [sp, #72]
   47844:	ldr	w0, [x0, #16]
   47848:	add	w0, w0, #0x1
   4784c:	mov	w1, w0
   47850:	ldr	x0, [sp, #40]
   47854:	bl	44650 <__asan_cplus_demangle_type@@Base+0x398c>
   47858:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   4785c:	add	x1, x0, #0xd18
   47860:	ldr	x0, [sp, #40]
   47864:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   47868:	ldr	x0, [sp, #72]
   4786c:	ldr	x0, [x0, #8]
   47870:	str	x0, [sp, #72]
   47874:	b	47884 <__asan_cplus_demangle_print@@Base+0x2fe8>
   47878:	ldr	x0, [sp, #72]
   4787c:	ldr	x0, [x0, #8]
   47880:	str	x0, [sp, #72]
   47884:	ldr	x0, [sp, #72]
   47888:	ldr	w0, [x0]
   4788c:	bl	3e5f0 <__asan_backtrace_create_state@@Base+0xa4>
   47890:	cmp	w0, #0x0
   47894:	b.ne	47878 <__asan_cplus_demangle_print@@Base+0x2fdc>  // b.any
   47898:	ldr	x2, [sp, #72]
   4789c:	ldr	w1, [sp, #36]
   478a0:	ldr	x0, [sp, #40]
   478a4:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   478a8:	ldr	x0, [sp, #40]
   478ac:	ldr	x1, [sp, #64]
   478b0:	str	x1, [x0, #288]
   478b4:	b	47900 <__asan_cplus_demangle_print@@Base+0x3064>
   478b8:	ldr	x0, [sp, #24]
   478bc:	ldr	x0, [x0, #8]
   478c0:	mov	x2, x0
   478c4:	ldr	w1, [sp, #36]
   478c8:	ldr	x0, [sp, #40]
   478cc:	bl	47908 <__asan_cplus_demangle_print@@Base+0x306c>
   478d0:	ldr	x0, [sp, #40]
   478d4:	ldr	x1, [sp, #64]
   478d8:	str	x1, [x0, #288]
   478dc:	ldr	x0, [sp, #24]
   478e0:	ldr	x0, [x0]
   478e4:	ldr	w3, [sp, #32]
   478e8:	mov	x2, x0
   478ec:	ldr	w1, [sp, #36]
   478f0:	ldr	x0, [sp, #40]
   478f4:	bl	47650 <__asan_cplus_demangle_print@@Base+0x2db4>
   478f8:	b	47900 <__asan_cplus_demangle_print@@Base+0x3064>
   478fc:	nop
   47900:	ldp	x29, x30, [sp], #80
   47904:	ret
   47908:	stp	x29, x30, [sp, #-48]!
   4790c:	mov	x29, sp
   47910:	str	x0, [sp, #40]
   47914:	str	w1, [sp, #36]
   47918:	str	x2, [sp, #24]
   4791c:	ldr	x0, [sp, #24]
   47920:	ldr	w0, [x0]
   47924:	sub	w0, w0, #0x3
   47928:	cmp	w0, #0x4d
   4792c:	b.hi	47b8c <__asan_cplus_demangle_print@@Base+0x32f0>  // b.pmore
   47930:	adrp	x1, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   47934:	add	x1, x1, #0x1ec
   47938:	ldr	w0, [x1, w0, uxtw #2]
   4793c:	adr	x1, 47948 <__asan_cplus_demangle_print@@Base+0x30ac>
   47940:	add	x0, x1, w0, sxtw #2
   47944:	br	x0
   47948:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   4794c:	add	x1, x0, #0x160
   47950:	ldr	x0, [sp, #40]
   47954:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   47958:	b	47bb4 <__asan_cplus_demangle_print@@Base+0x3318>
   4795c:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   47960:	add	x1, x0, #0x170
   47964:	ldr	x0, [sp, #40]
   47968:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   4796c:	b	47bb4 <__asan_cplus_demangle_print@@Base+0x3318>
   47970:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   47974:	add	x1, x0, #0x180
   47978:	ldr	x0, [sp, #40]
   4797c:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   47980:	b	47bb4 <__asan_cplus_demangle_print@@Base+0x3318>
   47984:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   47988:	add	x1, x0, #0x188
   4798c:	ldr	x0, [sp, #40]
   47990:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   47994:	b	47bb4 <__asan_cplus_demangle_print@@Base+0x3318>
   47998:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   4799c:	add	x1, x0, #0x1a0
   479a0:	ldr	x0, [sp, #40]
   479a4:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   479a8:	ldr	x0, [sp, #24]
   479ac:	ldr	x0, [x0, #16]
   479b0:	cmp	x0, #0x0
   479b4:	b.eq	47ba0 <__asan_cplus_demangle_print@@Base+0x3304>  // b.none
   479b8:	mov	w1, #0x28                  	// #40
   479bc:	ldr	x0, [sp, #40]
   479c0:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   479c4:	ldr	x0, [sp, #24]
   479c8:	ldr	x0, [x0, #16]
   479cc:	mov	x2, x0
   479d0:	ldr	w1, [sp, #36]
   479d4:	ldr	x0, [sp, #40]
   479d8:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   479dc:	mov	w1, #0x29                  	// #41
   479e0:	ldr	x0, [sp, #40]
   479e4:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   479e8:	b	47ba0 <__asan_cplus_demangle_print@@Base+0x3304>
   479ec:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   479f0:	add	x1, x0, #0x1b0
   479f4:	ldr	x0, [sp, #40]
   479f8:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   479fc:	ldr	x0, [sp, #24]
   47a00:	ldr	x0, [x0, #16]
   47a04:	cmp	x0, #0x0
   47a08:	b.eq	47ba8 <__asan_cplus_demangle_print@@Base+0x330c>  // b.none
   47a0c:	mov	w1, #0x28                  	// #40
   47a10:	ldr	x0, [sp, #40]
   47a14:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   47a18:	ldr	x0, [sp, #24]
   47a1c:	ldr	x0, [x0, #16]
   47a20:	mov	x2, x0
   47a24:	ldr	w1, [sp, #36]
   47a28:	ldr	x0, [sp, #40]
   47a2c:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   47a30:	mov	w1, #0x29                  	// #41
   47a34:	ldr	x0, [sp, #40]
   47a38:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   47a3c:	b	47ba8 <__asan_cplus_demangle_print@@Base+0x330c>
   47a40:	mov	w1, #0x20                  	// #32
   47a44:	ldr	x0, [sp, #40]
   47a48:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   47a4c:	ldr	x0, [sp, #24]
   47a50:	ldr	x0, [x0, #16]
   47a54:	mov	x2, x0
   47a58:	ldr	w1, [sp, #36]
   47a5c:	ldr	x0, [sp, #40]
   47a60:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   47a64:	b	47bb4 <__asan_cplus_demangle_print@@Base+0x3318>
   47a68:	ldr	w0, [sp, #36]
   47a6c:	and	w0, w0, #0x4
   47a70:	cmp	w0, #0x0
   47a74:	b.ne	47bb0 <__asan_cplus_demangle_print@@Base+0x3314>  // b.any
   47a78:	mov	w1, #0x2a                  	// #42
   47a7c:	ldr	x0, [sp, #40]
   47a80:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   47a84:	b	47bb0 <__asan_cplus_demangle_print@@Base+0x3314>
   47a88:	mov	w1, #0x20                  	// #32
   47a8c:	ldr	x0, [sp, #40]
   47a90:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   47a94:	mov	w1, #0x26                  	// #38
   47a98:	ldr	x0, [sp, #40]
   47a9c:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   47aa0:	b	47bb4 <__asan_cplus_demangle_print@@Base+0x3318>
   47aa4:	mov	w1, #0x20                  	// #32
   47aa8:	ldr	x0, [sp, #40]
   47aac:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   47ab0:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   47ab4:	add	x1, x0, #0x308
   47ab8:	ldr	x0, [sp, #40]
   47abc:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   47ac0:	b	47bb4 <__asan_cplus_demangle_print@@Base+0x3318>
   47ac4:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   47ac8:	add	x1, x0, #0x1b8
   47acc:	ldr	x0, [sp, #40]
   47ad0:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   47ad4:	b	47bb4 <__asan_cplus_demangle_print@@Base+0x3318>
   47ad8:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   47adc:	add	x1, x0, #0x1c8
   47ae0:	ldr	x0, [sp, #40]
   47ae4:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   47ae8:	b	47bb4 <__asan_cplus_demangle_print@@Base+0x3318>
   47aec:	ldr	x0, [sp, #40]
   47af0:	bl	44694 <__asan_cplus_demangle_type@@Base+0x39d0>
   47af4:	and	w0, w0, #0xff
   47af8:	cmp	w0, #0x28
   47afc:	b.eq	47b0c <__asan_cplus_demangle_print@@Base+0x3270>  // b.none
   47b00:	mov	w1, #0x20                  	// #32
   47b04:	ldr	x0, [sp, #40]
   47b08:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   47b0c:	ldr	x0, [sp, #24]
   47b10:	ldr	x0, [x0, #8]
   47b14:	mov	x2, x0
   47b18:	ldr	w1, [sp, #36]
   47b1c:	ldr	x0, [sp, #40]
   47b20:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   47b24:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   47b28:	add	x1, x0, #0x1d8
   47b2c:	ldr	x0, [sp, #40]
   47b30:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   47b34:	b	47bb4 <__asan_cplus_demangle_print@@Base+0x3318>
   47b38:	ldr	x0, [sp, #24]
   47b3c:	ldr	x0, [x0, #8]
   47b40:	mov	x2, x0
   47b44:	ldr	w1, [sp, #36]
   47b48:	ldr	x0, [sp, #40]
   47b4c:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   47b50:	b	47bb4 <__asan_cplus_demangle_print@@Base+0x3318>
   47b54:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   47b58:	add	x1, x0, #0x1e0
   47b5c:	ldr	x0, [sp, #40]
   47b60:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   47b64:	ldr	x0, [sp, #24]
   47b68:	ldr	x0, [x0, #8]
   47b6c:	mov	x2, x0
   47b70:	ldr	w1, [sp, #36]
   47b74:	ldr	x0, [sp, #40]
   47b78:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   47b7c:	mov	w1, #0x29                  	// #41
   47b80:	ldr	x0, [sp, #40]
   47b84:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   47b88:	b	47bb4 <__asan_cplus_demangle_print@@Base+0x3318>
   47b8c:	ldr	x2, [sp, #24]
   47b90:	ldr	w1, [sp, #36]
   47b94:	ldr	x0, [sp, #40]
   47b98:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   47b9c:	b	47bb4 <__asan_cplus_demangle_print@@Base+0x3318>
   47ba0:	nop
   47ba4:	b	47bb4 <__asan_cplus_demangle_print@@Base+0x3318>
   47ba8:	nop
   47bac:	b	47bb4 <__asan_cplus_demangle_print@@Base+0x3318>
   47bb0:	nop
   47bb4:	ldp	x29, x30, [sp], #48
   47bb8:	ret
   47bbc:	stp	x29, x30, [sp, #-80]!
   47bc0:	mov	x29, sp
   47bc4:	str	x0, [sp, #40]
   47bc8:	str	w1, [sp, #36]
   47bcc:	str	x2, [sp, #24]
   47bd0:	str	x3, [sp, #16]
   47bd4:	str	wzr, [sp, #76]
   47bd8:	str	wzr, [sp, #72]
   47bdc:	ldr	x0, [sp, #16]
   47be0:	str	x0, [sp, #64]
   47be4:	b	47cc0 <__asan_cplus_demangle_print@@Base+0x3424>
   47be8:	ldr	x0, [sp, #64]
   47bec:	ldr	w0, [x0, #16]
   47bf0:	cmp	w0, #0x0
   47bf4:	b.ne	47cd0 <__asan_cplus_demangle_print@@Base+0x3434>  // b.any
   47bf8:	ldr	x0, [sp, #64]
   47bfc:	ldr	x0, [x0, #8]
   47c00:	ldr	w0, [x0]
   47c04:	sub	w0, w0, #0x19
   47c08:	cmp	w0, #0x37
   47c0c:	cset	w1, hi  // hi = pmore
   47c10:	and	w1, w1, #0xff
   47c14:	cmp	w1, #0x0
   47c18:	b.ne	47c9c <__asan_cplus_demangle_print@@Base+0x3400>  // b.any
   47c1c:	mov	x1, #0x1                   	// #1
   47c20:	lsl	x0, x1, x0
   47c24:	mov	x1, #0xf8                  	// #248
   47c28:	movk	x1, #0xd0, lsl #48
   47c2c:	and	x1, x0, x1
   47c30:	cmp	x1, #0x0
   47c34:	cset	w1, ne  // ne = any
   47c38:	and	w1, w1, #0xff
   47c3c:	cmp	w1, #0x0
   47c40:	b.ne	47ca4 <__asan_cplus_demangle_print@@Base+0x3408>  // b.any
   47c44:	mov	x1, #0x3107                	// #12551
   47c48:	movk	x1, #0x4, lsl #16
   47c4c:	and	x1, x0, x1
   47c50:	cmp	x1, #0x0
   47c54:	cset	w1, ne  // ne = any
   47c58:	and	w1, w1, #0xff
   47c5c:	cmp	w1, #0x0
   47c60:	b.ne	47c88 <__asan_cplus_demangle_print@@Base+0x33ec>  // b.any
   47c64:	and	x0, x0, #0xe00
   47c68:	cmp	x0, #0x0
   47c6c:	cset	w0, ne  // ne = any
   47c70:	and	w0, w0, #0xff
   47c74:	cmp	w0, #0x0
   47c78:	b.eq	47c9c <__asan_cplus_demangle_print@@Base+0x3400>  // b.none
   47c7c:	mov	w0, #0x1                   	// #1
   47c80:	str	w0, [sp, #76]
   47c84:	b	47ca8 <__asan_cplus_demangle_print@@Base+0x340c>
   47c88:	mov	w0, #0x1                   	// #1
   47c8c:	str	w0, [sp, #72]
   47c90:	mov	w0, #0x1                   	// #1
   47c94:	str	w0, [sp, #76]
   47c98:	b	47ca8 <__asan_cplus_demangle_print@@Base+0x340c>
   47c9c:	nop
   47ca0:	b	47ca8 <__asan_cplus_demangle_print@@Base+0x340c>
   47ca4:	nop
   47ca8:	ldr	w0, [sp, #76]
   47cac:	cmp	w0, #0x0
   47cb0:	b.ne	47cd8 <__asan_cplus_demangle_print@@Base+0x343c>  // b.any
   47cb4:	ldr	x0, [sp, #64]
   47cb8:	ldr	x0, [x0]
   47cbc:	str	x0, [sp, #64]
   47cc0:	ldr	x0, [sp, #64]
   47cc4:	cmp	x0, #0x0
   47cc8:	b.ne	47be8 <__asan_cplus_demangle_print@@Base+0x334c>  // b.any
   47ccc:	b	47cdc <__asan_cplus_demangle_print@@Base+0x3440>
   47cd0:	nop
   47cd4:	b	47cdc <__asan_cplus_demangle_print@@Base+0x3440>
   47cd8:	nop
   47cdc:	ldr	w0, [sp, #76]
   47ce0:	cmp	w0, #0x0
   47ce4:	b.eq	47d5c <__asan_cplus_demangle_print@@Base+0x34c0>  // b.none
   47ce8:	ldr	w0, [sp, #72]
   47cec:	cmp	w0, #0x0
   47cf0:	b.ne	47d24 <__asan_cplus_demangle_print@@Base+0x3488>  // b.any
   47cf4:	ldr	x0, [sp, #40]
   47cf8:	bl	44694 <__asan_cplus_demangle_type@@Base+0x39d0>
   47cfc:	and	w0, w0, #0xff
   47d00:	cmp	w0, #0x28
   47d04:	b.eq	47d24 <__asan_cplus_demangle_print@@Base+0x3488>  // b.none
   47d08:	ldr	x0, [sp, #40]
   47d0c:	bl	44694 <__asan_cplus_demangle_type@@Base+0x39d0>
   47d10:	and	w0, w0, #0xff
   47d14:	cmp	w0, #0x2a
   47d18:	b.eq	47d24 <__asan_cplus_demangle_print@@Base+0x3488>  // b.none
   47d1c:	mov	w0, #0x1                   	// #1
   47d20:	str	w0, [sp, #72]
   47d24:	ldr	w0, [sp, #72]
   47d28:	cmp	w0, #0x0
   47d2c:	b.eq	47d50 <__asan_cplus_demangle_print@@Base+0x34b4>  // b.none
   47d30:	ldr	x0, [sp, #40]
   47d34:	bl	44694 <__asan_cplus_demangle_type@@Base+0x39d0>
   47d38:	and	w0, w0, #0xff
   47d3c:	cmp	w0, #0x20
   47d40:	b.eq	47d50 <__asan_cplus_demangle_print@@Base+0x34b4>  // b.none
   47d44:	mov	w1, #0x20                  	// #32
   47d48:	ldr	x0, [sp, #40]
   47d4c:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   47d50:	mov	w1, #0x28                  	// #40
   47d54:	ldr	x0, [sp, #40]
   47d58:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   47d5c:	ldr	x0, [sp, #40]
   47d60:	ldr	x0, [x0, #296]
   47d64:	str	x0, [sp, #56]
   47d68:	ldr	x0, [sp, #40]
   47d6c:	str	xzr, [x0, #296]
   47d70:	mov	w3, #0x0                   	// #0
   47d74:	ldr	x2, [sp, #16]
   47d78:	ldr	w1, [sp, #36]
   47d7c:	ldr	x0, [sp, #40]
   47d80:	bl	47650 <__asan_cplus_demangle_print@@Base+0x2db4>
   47d84:	ldr	w0, [sp, #76]
   47d88:	cmp	w0, #0x0
   47d8c:	b.eq	47d9c <__asan_cplus_demangle_print@@Base+0x3500>  // b.none
   47d90:	mov	w1, #0x29                  	// #41
   47d94:	ldr	x0, [sp, #40]
   47d98:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   47d9c:	mov	w1, #0x28                  	// #40
   47da0:	ldr	x0, [sp, #40]
   47da4:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   47da8:	ldr	x0, [sp, #24]
   47dac:	ldr	x0, [x0, #16]
   47db0:	cmp	x0, #0x0
   47db4:	b.eq	47dd0 <__asan_cplus_demangle_print@@Base+0x3534>  // b.none
   47db8:	ldr	x0, [sp, #24]
   47dbc:	ldr	x0, [x0, #16]
   47dc0:	mov	x2, x0
   47dc4:	ldr	w1, [sp, #36]
   47dc8:	ldr	x0, [sp, #40]
   47dcc:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   47dd0:	mov	w1, #0x29                  	// #41
   47dd4:	ldr	x0, [sp, #40]
   47dd8:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   47ddc:	mov	w3, #0x1                   	// #1
   47de0:	ldr	x2, [sp, #16]
   47de4:	ldr	w1, [sp, #36]
   47de8:	ldr	x0, [sp, #40]
   47dec:	bl	47650 <__asan_cplus_demangle_print@@Base+0x2db4>
   47df0:	ldr	x0, [sp, #40]
   47df4:	ldr	x1, [sp, #56]
   47df8:	str	x1, [x0, #296]
   47dfc:	nop
   47e00:	ldp	x29, x30, [sp], #80
   47e04:	ret
   47e08:	stp	x29, x30, [sp, #-64]!
   47e0c:	mov	x29, sp
   47e10:	str	x0, [sp, #40]
   47e14:	str	w1, [sp, #36]
   47e18:	str	x2, [sp, #24]
   47e1c:	str	x3, [sp, #16]
   47e20:	mov	w0, #0x1                   	// #1
   47e24:	str	w0, [sp, #60]
   47e28:	ldr	x0, [sp, #16]
   47e2c:	cmp	x0, #0x0
   47e30:	b.eq	47ee4 <__asan_cplus_demangle_print@@Base+0x3648>  // b.none
   47e34:	str	wzr, [sp, #56]
   47e38:	ldr	x0, [sp, #16]
   47e3c:	str	x0, [sp, #48]
   47e40:	b	47e90 <__asan_cplus_demangle_print@@Base+0x35f4>
   47e44:	ldr	x0, [sp, #48]
   47e48:	ldr	w0, [x0, #16]
   47e4c:	cmp	w0, #0x0
   47e50:	b.ne	47e84 <__asan_cplus_demangle_print@@Base+0x35e8>  // b.any
   47e54:	ldr	x0, [sp, #48]
   47e58:	ldr	x0, [x0, #8]
   47e5c:	ldr	w0, [x0]
   47e60:	cmp	w0, #0x2a
   47e64:	b.ne	47e70 <__asan_cplus_demangle_print@@Base+0x35d4>  // b.any
   47e68:	str	wzr, [sp, #60]
   47e6c:	b	47e9c <__asan_cplus_demangle_print@@Base+0x3600>
   47e70:	mov	w0, #0x1                   	// #1
   47e74:	str	w0, [sp, #56]
   47e78:	mov	w0, #0x1                   	// #1
   47e7c:	str	w0, [sp, #60]
   47e80:	b	47e9c <__asan_cplus_demangle_print@@Base+0x3600>
   47e84:	ldr	x0, [sp, #48]
   47e88:	ldr	x0, [x0]
   47e8c:	str	x0, [sp, #48]
   47e90:	ldr	x0, [sp, #48]
   47e94:	cmp	x0, #0x0
   47e98:	b.ne	47e44 <__asan_cplus_demangle_print@@Base+0x35a8>  // b.any
   47e9c:	ldr	w0, [sp, #56]
   47ea0:	cmp	w0, #0x0
   47ea4:	b.eq	47eb8 <__asan_cplus_demangle_print@@Base+0x361c>  // b.none
   47ea8:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   47eac:	add	x1, x0, #0x328
   47eb0:	ldr	x0, [sp, #40]
   47eb4:	bl	4461c <__asan_cplus_demangle_type@@Base+0x3958>
   47eb8:	mov	w3, #0x0                   	// #0
   47ebc:	ldr	x2, [sp, #16]
   47ec0:	ldr	w1, [sp, #36]
   47ec4:	ldr	x0, [sp, #40]
   47ec8:	bl	47650 <__asan_cplus_demangle_print@@Base+0x2db4>
   47ecc:	ldr	w0, [sp, #56]
   47ed0:	cmp	w0, #0x0
   47ed4:	b.eq	47ee4 <__asan_cplus_demangle_print@@Base+0x3648>  // b.none
   47ed8:	mov	w1, #0x29                  	// #41
   47edc:	ldr	x0, [sp, #40]
   47ee0:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   47ee4:	ldr	w0, [sp, #60]
   47ee8:	cmp	w0, #0x0
   47eec:	b.eq	47efc <__asan_cplus_demangle_print@@Base+0x3660>  // b.none
   47ef0:	mov	w1, #0x20                  	// #32
   47ef4:	ldr	x0, [sp, #40]
   47ef8:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   47efc:	mov	w1, #0x5b                  	// #91
   47f00:	ldr	x0, [sp, #40]
   47f04:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   47f08:	ldr	x0, [sp, #24]
   47f0c:	ldr	x0, [x0, #8]
   47f10:	cmp	x0, #0x0
   47f14:	b.eq	47f30 <__asan_cplus_demangle_print@@Base+0x3694>  // b.none
   47f18:	ldr	x0, [sp, #24]
   47f1c:	ldr	x0, [x0, #8]
   47f20:	mov	x2, x0
   47f24:	ldr	w1, [sp, #36]
   47f28:	ldr	x0, [sp, #40]
   47f2c:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   47f30:	mov	w1, #0x5d                  	// #93
   47f34:	ldr	x0, [sp, #40]
   47f38:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   47f3c:	nop
   47f40:	ldp	x29, x30, [sp], #64
   47f44:	ret
   47f48:	stp	x29, x30, [sp, #-48]!
   47f4c:	mov	x29, sp
   47f50:	str	x0, [sp, #40]
   47f54:	str	w1, [sp, #36]
   47f58:	str	x2, [sp, #24]
   47f5c:	ldr	x0, [sp, #24]
   47f60:	ldr	w0, [x0]
   47f64:	cmp	w0, #0x32
   47f68:	b.ne	47f98 <__asan_cplus_demangle_print@@Base+0x36fc>  // b.any
   47f6c:	ldr	x0, [sp, #24]
   47f70:	ldr	x0, [x0, #8]
   47f74:	ldr	x1, [x0, #8]
   47f78:	ldr	x0, [sp, #24]
   47f7c:	ldr	x0, [x0, #8]
   47f80:	ldr	w0, [x0, #16]
   47f84:	sxtw	x0, w0
   47f88:	mov	x2, x0
   47f8c:	ldr	x0, [sp, #40]
   47f90:	bl	445b8 <__asan_cplus_demangle_type@@Base+0x38f4>
   47f94:	b	47fa8 <__asan_cplus_demangle_print@@Base+0x370c>
   47f98:	ldr	x2, [sp, #24]
   47f9c:	ldr	w1, [sp, #36]
   47fa0:	ldr	x0, [sp, #40]
   47fa4:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   47fa8:	nop
   47fac:	ldp	x29, x30, [sp], #48
   47fb0:	ret
   47fb4:	stp	x29, x30, [sp, #-48]!
   47fb8:	mov	x29, sp
   47fbc:	str	x0, [sp, #40]
   47fc0:	str	w1, [sp, #36]
   47fc4:	str	x2, [sp, #24]
   47fc8:	ldr	x0, [sp, #24]
   47fcc:	ldr	x0, [x0, #8]
   47fd0:	mov	x2, x0
   47fd4:	ldr	w1, [sp, #36]
   47fd8:	ldr	x0, [sp, #40]
   47fdc:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   47fe0:	nop
   47fe4:	ldp	x29, x30, [sp], #48
   47fe8:	ret
   47fec:	stp	x29, x30, [sp, #-64]!
   47ff0:	mov	x29, sp
   47ff4:	str	x0, [sp, #40]
   47ff8:	str	w1, [sp, #36]
   47ffc:	str	x2, [sp, #24]
   48000:	ldr	x0, [sp, #40]
   48004:	ldr	x0, [x0, #368]
   48008:	cmp	x0, #0x0
   4800c:	b.eq	48034 <__asan_cplus_demangle_print@@Base+0x3798>  // b.none
   48010:	ldr	x0, [sp, #40]
   48014:	ldr	x0, [x0, #288]
   48018:	str	x0, [sp, #48]
   4801c:	ldr	x0, [sp, #40]
   48020:	add	x1, sp, #0x30
   48024:	str	x1, [x0, #288]
   48028:	ldr	x0, [sp, #40]
   4802c:	ldr	x0, [x0, #368]
   48030:	str	x0, [sp, #56]
   48034:	ldr	x0, [sp, #24]
   48038:	ldr	x0, [x0, #8]
   4803c:	ldr	w0, [x0]
   48040:	cmp	w0, #0x4
   48044:	b.eq	48080 <__asan_cplus_demangle_print@@Base+0x37e4>  // b.none
   48048:	ldr	x0, [sp, #24]
   4804c:	ldr	x0, [x0, #8]
   48050:	mov	x2, x0
   48054:	ldr	w1, [sp, #36]
   48058:	ldr	x0, [sp, #40]
   4805c:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   48060:	ldr	x0, [sp, #40]
   48064:	ldr	x0, [x0, #368]
   48068:	cmp	x0, #0x0
   4806c:	b.eq	4812c <__asan_cplus_demangle_print@@Base+0x3890>  // b.none
   48070:	ldr	x1, [sp, #48]
   48074:	ldr	x0, [sp, #40]
   48078:	str	x1, [x0, #288]
   4807c:	b	4812c <__asan_cplus_demangle_print@@Base+0x3890>
   48080:	ldr	x0, [sp, #24]
   48084:	ldr	x0, [x0, #8]
   48088:	ldr	x0, [x0, #8]
   4808c:	mov	x2, x0
   48090:	ldr	w1, [sp, #36]
   48094:	ldr	x0, [sp, #40]
   48098:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   4809c:	ldr	x0, [sp, #40]
   480a0:	ldr	x0, [x0, #368]
   480a4:	cmp	x0, #0x0
   480a8:	b.eq	480b8 <__asan_cplus_demangle_print@@Base+0x381c>  // b.none
   480ac:	ldr	x1, [sp, #48]
   480b0:	ldr	x0, [sp, #40]
   480b4:	str	x1, [x0, #288]
   480b8:	ldr	x0, [sp, #40]
   480bc:	bl	44694 <__asan_cplus_demangle_type@@Base+0x39d0>
   480c0:	and	w0, w0, #0xff
   480c4:	cmp	w0, #0x3c
   480c8:	b.ne	480d8 <__asan_cplus_demangle_print@@Base+0x383c>  // b.any
   480cc:	mov	w1, #0x20                  	// #32
   480d0:	ldr	x0, [sp, #40]
   480d4:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   480d8:	mov	w1, #0x3c                  	// #60
   480dc:	ldr	x0, [sp, #40]
   480e0:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   480e4:	ldr	x0, [sp, #24]
   480e8:	ldr	x0, [x0, #8]
   480ec:	ldr	x0, [x0, #16]
   480f0:	mov	x2, x0
   480f4:	ldr	w1, [sp, #36]
   480f8:	ldr	x0, [sp, #40]
   480fc:	bl	4738c <__asan_cplus_demangle_print@@Base+0x2af0>
   48100:	ldr	x0, [sp, #40]
   48104:	bl	44694 <__asan_cplus_demangle_type@@Base+0x39d0>
   48108:	and	w0, w0, #0xff
   4810c:	cmp	w0, #0x3e
   48110:	b.ne	48120 <__asan_cplus_demangle_print@@Base+0x3884>  // b.any
   48114:	mov	w1, #0x20                  	// #32
   48118:	ldr	x0, [sp, #40]
   4811c:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   48120:	mov	w1, #0x3e                  	// #62
   48124:	ldr	x0, [sp, #40]
   48128:	bl	44558 <__asan_cplus_demangle_type@@Base+0x3894>
   4812c:	nop
   48130:	ldp	x29, x30, [sp], #64
   48134:	ret

0000000000048138 <__asan_cplus_demangle_init_info@@Base>:
   48138:	sub	sp, sp, #0x20
   4813c:	str	x0, [sp, #24]
   48140:	str	w1, [sp, #20]
   48144:	str	x2, [sp, #8]
   48148:	str	x3, [sp]
   4814c:	ldr	x0, [sp]
   48150:	ldr	x1, [sp, #24]
   48154:	str	x1, [x0]
   48158:	ldr	x1, [sp, #24]
   4815c:	ldr	x0, [sp, #8]
   48160:	add	x1, x1, x0
   48164:	ldr	x0, [sp]
   48168:	str	x1, [x0, #8]
   4816c:	ldr	x0, [sp]
   48170:	ldr	w1, [sp, #20]
   48174:	str	w1, [x0, #16]
   48178:	ldr	x0, [sp]
   4817c:	ldr	x1, [sp, #24]
   48180:	str	x1, [x0, #24]
   48184:	ldr	x0, [sp, #8]
   48188:	lsl	w0, w0, #1
   4818c:	mov	w1, w0
   48190:	ldr	x0, [sp]
   48194:	str	w1, [x0, #44]
   48198:	ldr	x0, [sp]
   4819c:	str	wzr, [x0, #40]
   481a0:	ldr	x0, [sp, #8]
   481a4:	mov	w1, w0
   481a8:	ldr	x0, [sp]
   481ac:	str	w1, [x0, #60]
   481b0:	ldr	x0, [sp]
   481b4:	str	wzr, [x0, #56]
   481b8:	ldr	x0, [sp]
   481bc:	str	xzr, [x0, #64]
   481c0:	ldr	x0, [sp]
   481c4:	str	wzr, [x0, #72]
   481c8:	ldr	x0, [sp]
   481cc:	str	wzr, [x0, #76]
   481d0:	ldr	x0, [sp]
   481d4:	str	wzr, [x0, #80]
   481d8:	ldr	x0, [sp]
   481dc:	str	wzr, [x0, #84]
   481e0:	nop
   481e4:	add	sp, sp, #0x20
   481e8:	ret
   481ec:	stp	x29, x30, [sp, #-400]!
   481f0:	mov	x29, sp
   481f4:	stp	x19, x20, [sp, #16]
   481f8:	stp	x21, x22, [sp, #32]
   481fc:	stp	x23, x24, [sp, #48]
   48200:	stp	x25, x26, [sp, #64]
   48204:	stp	x27, x28, [sp, #80]
   48208:	str	x0, [x29, #248]
   4820c:	str	w1, [x29, #244]
   48210:	str	x2, [x29, #232]
   48214:	str	x3, [x29, #224]
   48218:	ldr	x0, [x29, #248]
   4821c:	ldrb	w0, [x0]
   48220:	cmp	w0, #0x5f
   48224:	b.ne	48248 <__asan_cplus_demangle_init_info@@Base+0x110>  // b.any
   48228:	ldr	x0, [x29, #248]
   4822c:	add	x0, x0, #0x1
   48230:	ldrb	w0, [x0]
   48234:	cmp	w0, #0x5a
   48238:	b.ne	48248 <__asan_cplus_demangle_init_info@@Base+0x110>  // b.any
   4823c:	mov	w0, #0x1                   	// #1
   48240:	str	w0, [x29, #388]
   48244:	b	48320 <__asan_cplus_demangle_init_info@@Base+0x1e8>
   48248:	mov	x2, #0x8                   	// #8
   4824c:	adrp	x0, 5b000 <__asan_backtrace_vector_release@@Base+0xc340>
   48250:	add	x1, x0, #0x2b8
   48254:	ldr	x0, [x29, #248]
   48258:	bl	6db0 <__asan_internal_strncmp@plt>
   4825c:	cmp	w0, #0x0
   48260:	b.ne	48304 <__asan_cplus_demangle_init_info@@Base+0x1cc>  // b.any
   48264:	ldr	x0, [x29, #248]
   48268:	add	x0, x0, #0x8
   4826c:	ldrb	w0, [x0]
   48270:	cmp	w0, #0x2e
   48274:	b.eq	482a0 <__asan_cplus_demangle_init_info@@Base+0x168>  // b.none
   48278:	ldr	x0, [x29, #248]
   4827c:	add	x0, x0, #0x8
   48280:	ldrb	w0, [x0]
   48284:	cmp	w0, #0x5f
   48288:	b.eq	482a0 <__asan_cplus_demangle_init_info@@Base+0x168>  // b.none
   4828c:	ldr	x0, [x29, #248]
   48290:	add	x0, x0, #0x8
   48294:	ldrb	w0, [x0]
   48298:	cmp	w0, #0x24
   4829c:	b.ne	48304 <__asan_cplus_demangle_init_info@@Base+0x1cc>  // b.any
   482a0:	ldr	x0, [x29, #248]
   482a4:	add	x0, x0, #0x9
   482a8:	ldrb	w0, [x0]
   482ac:	cmp	w0, #0x44
   482b0:	b.eq	482c8 <__asan_cplus_demangle_init_info@@Base+0x190>  // b.none
   482b4:	ldr	x0, [x29, #248]
   482b8:	add	x0, x0, #0x9
   482bc:	ldrb	w0, [x0]
   482c0:	cmp	w0, #0x49
   482c4:	b.ne	48304 <__asan_cplus_demangle_init_info@@Base+0x1cc>  // b.any
   482c8:	ldr	x0, [x29, #248]
   482cc:	add	x0, x0, #0xa
   482d0:	ldrb	w0, [x0]
   482d4:	cmp	w0, #0x5f
   482d8:	b.ne	48304 <__asan_cplus_demangle_init_info@@Base+0x1cc>  // b.any
   482dc:	ldr	x0, [x29, #248]
   482e0:	add	x0, x0, #0x9
   482e4:	ldrb	w0, [x0]
   482e8:	cmp	w0, #0x49
   482ec:	b.ne	482f8 <__asan_cplus_demangle_init_info@@Base+0x1c0>  // b.any
   482f0:	mov	w0, #0x2                   	// #2
   482f4:	b	482fc <__asan_cplus_demangle_init_info@@Base+0x1c4>
   482f8:	mov	w0, #0x3                   	// #3
   482fc:	str	w0, [x29, #388]
   48300:	b	48320 <__asan_cplus_demangle_init_info@@Base+0x1e8>
   48304:	ldr	w0, [x29, #244]
   48308:	and	w0, w0, #0x10
   4830c:	cmp	w0, #0x0
   48310:	b.ne	4831c <__asan_cplus_demangle_init_info@@Base+0x1e4>  // b.any
   48314:	mov	w0, #0x0                   	// #0
   48318:	b	4867c <__asan_cplus_demangle_init_info@@Base+0x544>
   4831c:	str	wzr, [x29, #388]
   48320:	ldr	x0, [x29, #248]
   48324:	bl	6a20 <__asan_internal_strlen@plt>
   48328:	mov	x1, x0
   4832c:	add	x0, x29, #0x100
   48330:	mov	x3, x0
   48334:	mov	x2, x1
   48338:	ldr	w1, [x29, #244]
   4833c:	ldr	x0, [x29, #248]
   48340:	bl	68e0 <__asan_cplus_demangle_init_info@plt>
   48344:	ldr	w0, [x29, #244]
   48348:	and	w0, w0, #0x40000
   4834c:	cmp	w0, #0x0
   48350:	b.ne	48368 <__asan_cplus_demangle_init_info@@Base+0x230>  // b.any
   48354:	ldr	w0, [x29, #300]
   48358:	cmp	w0, #0x800
   4835c:	b.ls	48368 <__asan_cplus_demangle_init_info@@Base+0x230>  // b.plast
   48360:	mov	w0, #0x0                   	// #0
   48364:	b	4867c <__asan_cplus_demangle_init_info@@Base+0x544>
   48368:	mov	x0, sp
   4836c:	mov	x28, x0
   48370:	ldr	w2, [x29, #300]
   48374:	sxtw	x0, w2
   48378:	sub	x0, x0, #0x1
   4837c:	str	x0, [x29, #376]
   48380:	sxtw	x0, w2
   48384:	str	x0, [x29, #176]
   48388:	str	xzr, [x29, #184]
   4838c:	ldp	x4, x5, [x29, #176]
   48390:	mov	x0, x4
   48394:	mov	x1, x5
   48398:	lsr	x3, x0, #63
   4839c:	lsl	x27, x1, #1
   483a0:	orr	x27, x3, x27
   483a4:	lsl	x26, x0, #1
   483a8:	mov	x0, x26
   483ac:	mov	x1, x27
   483b0:	mov	x3, x4
   483b4:	adds	x3, x0, x3
   483b8:	mov	x4, x5
   483bc:	adc	x0, x1, x4
   483c0:	str	x3, [x29, #112]
   483c4:	str	x0, [x29, #120]
   483c8:	ldp	x4, x5, [x29, #112]
   483cc:	mov	x0, x4
   483d0:	lsr	x0, x0, #58
   483d4:	mov	x1, x5
   483d8:	lsl	x25, x1, #6
   483dc:	orr	x25, x0, x25
   483e0:	mov	x0, x4
   483e4:	lsl	x24, x0, #6
   483e8:	sxtw	x1, w2
   483ec:	mov	x0, x1
   483f0:	lsl	x0, x0, #1
   483f4:	add	x0, x0, x1
   483f8:	lsl	x0, x0, #3
   483fc:	sxtw	x0, w2
   48400:	str	x0, [x29, #160]
   48404:	str	xzr, [x29, #168]
   48408:	ldp	x4, x5, [x29, #160]
   4840c:	mov	x0, x4
   48410:	mov	x1, x5
   48414:	lsr	x3, x0, #63
   48418:	lsl	x23, x1, #1
   4841c:	orr	x23, x3, x23
   48420:	lsl	x22, x0, #1
   48424:	mov	x0, x22
   48428:	mov	x1, x23
   4842c:	mov	x3, x4
   48430:	adds	x3, x0, x3
   48434:	mov	x4, x5
   48438:	adc	x0, x1, x4
   4843c:	str	x3, [x29, #96]
   48440:	str	x0, [x29, #104]
   48444:	ldp	x4, x5, [x29, #96]
   48448:	mov	x0, x4
   4844c:	lsr	x0, x0, #58
   48450:	mov	x1, x5
   48454:	lsl	x21, x1, #6
   48458:	orr	x21, x0, x21
   4845c:	mov	x0, x4
   48460:	lsl	x20, x0, #6
   48464:	sxtw	x1, w2
   48468:	mov	x0, x1
   4846c:	lsl	x0, x0, #1
   48470:	add	x0, x0, x1
   48474:	lsl	x0, x0, #3
   48478:	add	x0, x0, #0xf
   4847c:	lsr	x0, x0, #4
   48480:	lsl	x0, x0, #4
   48484:	sub	sp, sp, x0
   48488:	mov	x0, sp
   4848c:	add	x0, x0, #0x7
   48490:	lsr	x0, x0, #3
   48494:	lsl	x0, x0, #3
   48498:	str	x0, [x29, #368]
   4849c:	ldr	w0, [x29, #316]
   484a0:	sxtw	x1, w0
   484a4:	sub	x1, x1, #0x1
   484a8:	str	x1, [x29, #360]
   484ac:	sxtw	x1, w0
   484b0:	str	x1, [x29, #144]
   484b4:	str	xzr, [x29, #152]
   484b8:	ldp	x2, x3, [x29, #144]
   484bc:	mov	x1, x2
   484c0:	lsr	x1, x1, #58
   484c4:	mov	x4, x3
   484c8:	lsl	x4, x4, #6
   484cc:	str	x4, [x29, #216]
   484d0:	ldr	x4, [x29, #216]
   484d4:	orr	x1, x1, x4
   484d8:	str	x1, [x29, #216]
   484dc:	mov	x1, x2
   484e0:	lsl	x1, x1, #6
   484e4:	str	x1, [x29, #208]
   484e8:	sxtw	x1, w0
   484ec:	str	x1, [x29, #128]
   484f0:	str	xzr, [x29, #136]
   484f4:	ldp	x2, x3, [x29, #128]
   484f8:	mov	x1, x2
   484fc:	lsr	x1, x1, #58
   48500:	mov	x4, x3
   48504:	lsl	x4, x4, #6
   48508:	str	x4, [x29, #200]
   4850c:	ldr	x4, [x29, #200]
   48510:	orr	x1, x1, x4
   48514:	str	x1, [x29, #200]
   48518:	mov	x1, x2
   4851c:	lsl	x1, x1, #6
   48520:	str	x1, [x29, #192]
   48524:	sxtw	x0, w0
   48528:	lsl	x0, x0, #3
   4852c:	add	x0, x0, #0xf
   48530:	lsr	x0, x0, #4
   48534:	lsl	x0, x0, #4
   48538:	sub	sp, sp, x0
   4853c:	mov	x0, sp
   48540:	add	x0, x0, #0x7
   48544:	lsr	x0, x0, #3
   48548:	lsl	x0, x0, #3
   4854c:	str	x0, [x29, #352]
   48550:	ldr	x0, [x29, #368]
   48554:	str	x0, [x29, #288]
   48558:	ldr	x0, [x29, #352]
   4855c:	str	x0, [x29, #304]
   48560:	ldr	w0, [x29, #388]
   48564:	cmp	w0, #0x3
   48568:	b.hi	48620 <__asan_cplus_demangle_init_info@@Base+0x4e8>  // b.pmore
   4856c:	ldr	w0, [x29, #388]
   48570:	cmp	w0, #0x2
   48574:	b.cs	485b8 <__asan_cplus_demangle_init_info@@Base+0x480>  // b.hs, b.nlast
   48578:	ldr	w0, [x29, #388]
   4857c:	cmp	w0, #0x0
   48580:	b.eq	48594 <__asan_cplus_demangle_init_info@@Base+0x45c>  // b.none
   48584:	ldr	w0, [x29, #388]
   48588:	cmp	w0, #0x1
   4858c:	b.eq	485a4 <__asan_cplus_demangle_init_info@@Base+0x46c>  // b.none
   48590:	b	48620 <__asan_cplus_demangle_init_info@@Base+0x4e8>
   48594:	add	x0, x29, #0x100
   48598:	bl	6990 <__asan_cplus_demangle_type@plt>
   4859c:	str	x0, [x29, #392]
   485a0:	b	48624 <__asan_cplus_demangle_init_info@@Base+0x4ec>
   485a4:	add	x0, x29, #0x100
   485a8:	mov	w1, #0x1                   	// #1
   485ac:	bl	6ef0 <__asan_cplus_demangle_mangled_name@plt>
   485b0:	str	x0, [x29, #392]
   485b4:	b	48624 <__asan_cplus_demangle_init_info@@Base+0x4ec>
   485b8:	ldr	x0, [x29, #280]
   485bc:	add	x0, x0, #0xb
   485c0:	str	x0, [x29, #280]
   485c4:	ldr	w0, [x29, #388]
   485c8:	cmp	w0, #0x2
   485cc:	b.ne	485d8 <__asan_cplus_demangle_init_info@@Base+0x4a0>  // b.any
   485d0:	mov	w19, #0x44                  	// #68
   485d4:	b	485dc <__asan_cplus_demangle_init_info@@Base+0x4a4>
   485d8:	mov	w19, #0x45                  	// #69
   485dc:	ldr	x1, [x29, #280]
   485e0:	add	x0, x29, #0x100
   485e4:	bl	3e9a8 <__asan_cplus_demangle_fill_dtor@@Base+0x1f0>
   485e8:	mov	x1, x0
   485ec:	add	x0, x29, #0x100
   485f0:	mov	x3, #0x0                   	// #0
   485f4:	mov	x2, x1
   485f8:	mov	w1, w19
   485fc:	bl	3e8b4 <__asan_cplus_demangle_fill_dtor@@Base+0xfc>
   48600:	str	x0, [x29, #392]
   48604:	ldr	x0, [x29, #280]
   48608:	bl	6a20 <__asan_internal_strlen@plt>
   4860c:	mov	x1, x0
   48610:	ldr	x0, [x29, #280]
   48614:	add	x0, x0, x1
   48618:	str	x0, [x29, #280]
   4861c:	b	48624 <__asan_cplus_demangle_init_info@@Base+0x4ec>
   48620:	bl	6e30 <abort@plt>
   48624:	ldr	w0, [x29, #244]
   48628:	and	w0, w0, #0x1
   4862c:	cmp	w0, #0x0
   48630:	b.eq	48648 <__asan_cplus_demangle_init_info@@Base+0x510>  // b.none
   48634:	ldr	x0, [x29, #280]
   48638:	ldrb	w0, [x0]
   4863c:	cmp	w0, #0x0
   48640:	b.eq	48648 <__asan_cplus_demangle_init_info@@Base+0x510>  // b.none
   48644:	str	xzr, [x29, #392]
   48648:	ldr	x0, [x29, #392]
   4864c:	cmp	x0, #0x0
   48650:	b.eq	4866c <__asan_cplus_demangle_init_info@@Base+0x534>  // b.none
   48654:	ldr	x3, [x29, #224]
   48658:	ldr	x2, [x29, #232]
   4865c:	ldr	x1, [x29, #392]
   48660:	ldr	w0, [x29, #244]
   48664:	bl	6c50 <__asan_cplus_demangle_print_callback@plt>
   48668:	b	48670 <__asan_cplus_demangle_init_info@@Base+0x538>
   4866c:	mov	w0, #0x0                   	// #0
   48670:	str	w0, [x29, #348]
   48674:	mov	sp, x28
   48678:	ldr	w0, [x29, #348]
   4867c:	mov	sp, x29
   48680:	ldp	x19, x20, [sp, #16]
   48684:	ldp	x21, x22, [sp, #32]
   48688:	ldp	x23, x24, [sp, #48]
   4868c:	ldp	x25, x26, [sp, #64]
   48690:	ldp	x27, x28, [sp, #80]
   48694:	ldp	x29, x30, [sp], #400
   48698:	ret
   4869c:	stp	x29, x30, [sp, #-96]!
   486a0:	mov	x29, sp
   486a4:	str	x0, [sp, #40]
   486a8:	str	w1, [sp, #36]
   486ac:	str	x2, [sp, #24]
   486b0:	add	x0, sp, #0x38
   486b4:	mov	x1, #0x0                   	// #0
   486b8:	bl	43fdc <__asan_cplus_demangle_type@@Base+0x3318>
   486bc:	add	x0, sp, #0x38
   486c0:	mov	x3, x0
   486c4:	adrp	x0, 44000 <__asan_cplus_demangle_type@@Base+0x333c>
   486c8:	add	x2, x0, #0x1d4
   486cc:	ldr	w1, [sp, #36]
   486d0:	ldr	x0, [sp, #40]
   486d4:	bl	481ec <__asan_cplus_demangle_init_info@@Base+0xb4>
   486d8:	str	w0, [sp, #92]
   486dc:	ldr	w0, [sp, #92]
   486e0:	cmp	w0, #0x0
   486e4:	b.ne	48700 <__asan_cplus_demangle_init_info@@Base+0x5c8>  // b.any
   486e8:	ldr	x0, [sp, #56]
   486ec:	bl	6930 <free@plt>
   486f0:	ldr	x0, [sp, #24]
   486f4:	str	xzr, [x0]
   486f8:	mov	x0, #0x0                   	// #0
   486fc:	b	48724 <__asan_cplus_demangle_init_info@@Base+0x5ec>
   48700:	ldr	w0, [sp, #80]
   48704:	cmp	w0, #0x0
   48708:	b.ne	48714 <__asan_cplus_demangle_init_info@@Base+0x5dc>  // b.any
   4870c:	ldr	x0, [sp, #72]
   48710:	b	48718 <__asan_cplus_demangle_init_info@@Base+0x5e0>
   48714:	mov	x0, #0x1                   	// #1
   48718:	ldr	x1, [sp, #24]
   4871c:	str	x0, [x1]
   48720:	ldr	x0, [sp, #56]
   48724:	ldp	x29, x30, [sp], #96
   48728:	ret

000000000004872c <__asan_cplus_demangle_v3@@Base>:
   4872c:	stp	x29, x30, [sp, #-48]!
   48730:	mov	x29, sp
   48734:	str	x0, [sp, #24]
   48738:	str	w1, [sp, #20]
   4873c:	add	x0, sp, #0x28
   48740:	mov	x2, x0
   48744:	ldr	w1, [sp, #20]
   48748:	ldr	x0, [sp, #24]
   4874c:	bl	4869c <__asan_cplus_demangle_init_info@@Base+0x564>
   48750:	ldp	x29, x30, [sp], #48
   48754:	ret

0000000000048758 <__asan_cplus_demangle_v3_callback@@Base>:
   48758:	stp	x29, x30, [sp, #-48]!
   4875c:	mov	x29, sp
   48760:	str	x0, [sp, #40]
   48764:	str	w1, [sp, #36]
   48768:	str	x2, [sp, #24]
   4876c:	str	x3, [sp, #16]
   48770:	ldr	x3, [sp, #16]
   48774:	ldr	x2, [sp, #24]
   48778:	ldr	w1, [sp, #36]
   4877c:	ldr	x0, [sp, #40]
   48780:	bl	481ec <__asan_cplus_demangle_init_info@@Base+0xb4>
   48784:	ldp	x29, x30, [sp], #48
   48788:	ret

000000000004878c <__asan_java_demangle_v3@@Base>:
   4878c:	stp	x29, x30, [sp, #-48]!
   48790:	mov	x29, sp
   48794:	str	x0, [sp, #24]
   48798:	add	x0, sp, #0x28
   4879c:	mov	x2, x0
   487a0:	mov	w1, #0x25                  	// #37
   487a4:	ldr	x0, [sp, #24]
   487a8:	bl	4869c <__asan_cplus_demangle_init_info@@Base+0x564>
   487ac:	ldp	x29, x30, [sp], #48
   487b0:	ret

00000000000487b4 <__asan_java_demangle_v3_callback@@Base>:
   487b4:	stp	x29, x30, [sp, #-48]!
   487b8:	mov	x29, sp
   487bc:	str	x0, [sp, #40]
   487c0:	str	x1, [sp, #32]
   487c4:	str	x2, [sp, #24]
   487c8:	ldr	x3, [sp, #24]
   487cc:	ldr	x2, [sp, #32]
   487d0:	mov	w1, #0x25                  	// #37
   487d4:	ldr	x0, [sp, #40]
   487d8:	bl	481ec <__asan_cplus_demangle_init_info@@Base+0xb4>
   487dc:	ldp	x29, x30, [sp], #48
   487e0:	ret
   487e4:	stp	x29, x30, [sp, #-400]!
   487e8:	mov	x29, sp
   487ec:	stp	x19, x20, [sp, #16]
   487f0:	stp	x21, x22, [sp, #32]
   487f4:	stp	x23, x24, [sp, #48]
   487f8:	stp	x25, x26, [sp, #64]
   487fc:	str	x27, [sp, #80]
   48800:	str	x0, [x29, #248]
   48804:	str	x1, [x29, #240]
   48808:	str	x2, [x29, #232]
   4880c:	ldr	x0, [x29, #240]
   48810:	str	wzr, [x0]
   48814:	ldr	x0, [x29, #232]
   48818:	str	wzr, [x0]
   4881c:	ldr	x0, [x29, #248]
   48820:	bl	6a20 <__asan_internal_strlen@plt>
   48824:	mov	x1, x0
   48828:	add	x0, x29, #0x108
   4882c:	mov	x3, x0
   48830:	mov	x2, x1
   48834:	mov	w1, #0x4000                	// #16384
   48838:	ldr	x0, [x29, #248]
   4883c:	bl	68e0 <__asan_cplus_demangle_init_info@plt>
   48840:	mov	x0, sp
   48844:	mov	x19, x0
   48848:	ldr	w2, [x29, #308]
   4884c:	sxtw	x0, w2
   48850:	sub	x0, x0, #0x1
   48854:	str	x0, [x29, #376]
   48858:	sxtw	x0, w2
   4885c:	str	x0, [x29, #176]
   48860:	str	xzr, [x29, #184]
   48864:	ldp	x4, x5, [x29, #176]
   48868:	mov	x0, x4
   4886c:	mov	x1, x5
   48870:	lsr	x3, x0, #63
   48874:	lsl	x27, x1, #1
   48878:	orr	x27, x3, x27
   4887c:	lsl	x26, x0, #1
   48880:	mov	x0, x26
   48884:	mov	x1, x27
   48888:	mov	x3, x4
   4888c:	adds	x3, x0, x3
   48890:	mov	x4, x5
   48894:	adc	x0, x1, x4
   48898:	str	x3, [x29, #112]
   4889c:	str	x0, [x29, #120]
   488a0:	ldp	x4, x5, [x29, #112]
   488a4:	mov	x0, x4
   488a8:	lsr	x0, x0, #58
   488ac:	mov	x1, x5
   488b0:	lsl	x25, x1, #6
   488b4:	orr	x25, x0, x25
   488b8:	mov	x0, x4
   488bc:	lsl	x24, x0, #6
   488c0:	sxtw	x1, w2
   488c4:	mov	x0, x1
   488c8:	lsl	x0, x0, #1
   488cc:	add	x0, x0, x1
   488d0:	lsl	x0, x0, #3
   488d4:	sxtw	x0, w2
   488d8:	str	x0, [x29, #160]
   488dc:	str	xzr, [x29, #168]
   488e0:	ldp	x4, x5, [x29, #160]
   488e4:	mov	x0, x4
   488e8:	mov	x1, x5
   488ec:	lsr	x3, x0, #63
   488f0:	lsl	x23, x1, #1
   488f4:	orr	x23, x3, x23
   488f8:	lsl	x22, x0, #1
   488fc:	mov	x0, x22
   48900:	mov	x1, x23
   48904:	mov	x3, x4
   48908:	adds	x3, x0, x3
   4890c:	mov	x4, x5
   48910:	adc	x0, x1, x4
   48914:	str	x3, [x29, #96]
   48918:	str	x0, [x29, #104]
   4891c:	ldp	x4, x5, [x29, #96]
   48920:	mov	x0, x4
   48924:	lsr	x0, x0, #58
   48928:	mov	x1, x5
   4892c:	lsl	x21, x1, #6
   48930:	orr	x21, x0, x21
   48934:	mov	x0, x4
   48938:	lsl	x20, x0, #6
   4893c:	sxtw	x1, w2
   48940:	mov	x0, x1
   48944:	lsl	x0, x0, #1
   48948:	add	x0, x0, x1
   4894c:	lsl	x0, x0, #3
   48950:	add	x0, x0, #0xf
   48954:	lsr	x0, x0, #4
   48958:	lsl	x0, x0, #4
   4895c:	sub	sp, sp, x0
   48960:	mov	x0, sp
   48964:	add	x0, x0, #0x7
   48968:	lsr	x0, x0, #3
   4896c:	lsl	x0, x0, #3
   48970:	str	x0, [x29, #368]
   48974:	ldr	w0, [x29, #324]
   48978:	sxtw	x1, w0
   4897c:	sub	x1, x1, #0x1
   48980:	str	x1, [x29, #360]
   48984:	sxtw	x1, w0
   48988:	str	x1, [x29, #144]
   4898c:	str	xzr, [x29, #152]
   48990:	ldp	x2, x3, [x29, #144]
   48994:	mov	x1, x2
   48998:	lsr	x1, x1, #58
   4899c:	mov	x4, x3
   489a0:	lsl	x4, x4, #6
   489a4:	str	x4, [x29, #216]
   489a8:	ldr	x4, [x29, #216]
   489ac:	orr	x1, x1, x4
   489b0:	str	x1, [x29, #216]
   489b4:	mov	x1, x2
   489b8:	lsl	x1, x1, #6
   489bc:	str	x1, [x29, #208]
   489c0:	sxtw	x1, w0
   489c4:	str	x1, [x29, #128]
   489c8:	str	xzr, [x29, #136]
   489cc:	ldp	x2, x3, [x29, #128]
   489d0:	mov	x1, x2
   489d4:	lsr	x1, x1, #58
   489d8:	mov	x4, x3
   489dc:	lsl	x4, x4, #6
   489e0:	str	x4, [x29, #200]
   489e4:	ldr	x4, [x29, #200]
   489e8:	orr	x1, x1, x4
   489ec:	str	x1, [x29, #200]
   489f0:	mov	x1, x2
   489f4:	lsl	x1, x1, #6
   489f8:	str	x1, [x29, #192]
   489fc:	sxtw	x0, w0
   48a00:	lsl	x0, x0, #3
   48a04:	add	x0, x0, #0xf
   48a08:	lsr	x0, x0, #4
   48a0c:	lsl	x0, x0, #4
   48a10:	sub	sp, sp, x0
   48a14:	mov	x0, sp
   48a18:	add	x0, x0, #0x7
   48a1c:	lsr	x0, x0, #3
   48a20:	lsl	x0, x0, #3
   48a24:	str	x0, [x29, #352]
   48a28:	ldr	x0, [x29, #368]
   48a2c:	str	x0, [x29, #296]
   48a30:	ldr	x0, [x29, #352]
   48a34:	str	x0, [x29, #312]
   48a38:	add	x0, x29, #0x108
   48a3c:	mov	w1, #0x1                   	// #1
   48a40:	bl	6ef0 <__asan_cplus_demangle_mangled_name@plt>
   48a44:	str	x0, [x29, #384]
   48a48:	str	wzr, [x29, #396]
   48a4c:	b	48b00 <__asan_java_demangle_v3_callback@@Base+0x34c>
   48a50:	ldr	x0, [x29, #384]
   48a54:	ldr	w0, [x0]
   48a58:	cmp	w0, #0x8
   48a5c:	b.eq	48ae0 <__asan_java_demangle_v3_callback@@Base+0x32c>  // b.none
   48a60:	cmp	w0, #0x8
   48a64:	b.hi	48a98 <__asan_java_demangle_v3_callback@@Base+0x2e4>  // b.pmore
   48a68:	cmp	w0, #0x7
   48a6c:	b.eq	48ac0 <__asan_java_demangle_v3_callback@@Base+0x30c>  // b.none
   48a70:	cmp	w0, #0x7
   48a74:	b.hi	48a98 <__asan_java_demangle_v3_callback@@Base+0x2e4>  // b.pmore
   48a78:	cmp	w0, #0x2
   48a7c:	b.hi	48a8c <__asan_java_demangle_v3_callback@@Base+0x2d8>  // b.pmore
   48a80:	cmp	w0, #0x0
   48a84:	b.ne	48ab0 <__asan_java_demangle_v3_callback@@Base+0x2fc>  // b.any
   48a88:	b	48a98 <__asan_java_demangle_v3_callback@@Base+0x2e4>
   48a8c:	sub	w0, w0, #0x3
   48a90:	cmp	w0, #0x1
   48a94:	b.ls	48aa0 <__asan_java_demangle_v3_callback@@Base+0x2ec>  // b.plast
   48a98:	str	xzr, [x29, #384]
   48a9c:	b	48b00 <__asan_java_demangle_v3_callback@@Base+0x34c>
   48aa0:	ldr	x0, [x29, #384]
   48aa4:	ldr	x0, [x0, #8]
   48aa8:	str	x0, [x29, #384]
   48aac:	b	48b00 <__asan_java_demangle_v3_callback@@Base+0x34c>
   48ab0:	ldr	x0, [x29, #384]
   48ab4:	ldr	x0, [x0, #16]
   48ab8:	str	x0, [x29, #384]
   48abc:	b	48b00 <__asan_java_demangle_v3_callback@@Base+0x34c>
   48ac0:	ldr	x0, [x29, #384]
   48ac4:	ldr	w1, [x0, #8]
   48ac8:	ldr	x0, [x29, #240]
   48acc:	str	w1, [x0]
   48ad0:	mov	w0, #0x1                   	// #1
   48ad4:	str	w0, [x29, #396]
   48ad8:	str	xzr, [x29, #384]
   48adc:	b	48b00 <__asan_java_demangle_v3_callback@@Base+0x34c>
   48ae0:	ldr	x0, [x29, #384]
   48ae4:	ldr	w1, [x0, #8]
   48ae8:	ldr	x0, [x29, #232]
   48aec:	str	w1, [x0]
   48af0:	mov	w0, #0x1                   	// #1
   48af4:	str	w0, [x29, #396]
   48af8:	str	xzr, [x29, #384]
   48afc:	nop
   48b00:	ldr	x0, [x29, #384]
   48b04:	cmp	x0, #0x0
   48b08:	b.ne	48a50 <__asan_java_demangle_v3_callback@@Base+0x29c>  // b.any
   48b0c:	mov	sp, x19
   48b10:	ldr	w0, [x29, #396]
   48b14:	mov	sp, x29
   48b18:	ldp	x19, x20, [sp, #16]
   48b1c:	ldp	x21, x22, [sp, #32]
   48b20:	ldp	x23, x24, [sp, #48]
   48b24:	ldp	x25, x26, [sp, #64]
   48b28:	ldr	x27, [sp, #80]
   48b2c:	ldp	x29, x30, [sp], #400
   48b30:	ret

0000000000048b34 <__asan_is_gnu_v3_mangled_ctor@@Base>:
   48b34:	stp	x29, x30, [sp, #-48]!
   48b38:	mov	x29, sp
   48b3c:	str	x0, [sp, #24]
   48b40:	add	x1, sp, #0x28
   48b44:	add	x0, sp, #0x2c
   48b48:	mov	x2, x1
   48b4c:	mov	x1, x0
   48b50:	ldr	x0, [sp, #24]
   48b54:	bl	487e4 <__asan_java_demangle_v3_callback@@Base+0x30>
   48b58:	cmp	w0, #0x0
   48b5c:	b.ne	48b68 <__asan_is_gnu_v3_mangled_ctor@@Base+0x34>  // b.any
   48b60:	mov	w0, #0x0                   	// #0
   48b64:	b	48b6c <__asan_is_gnu_v3_mangled_ctor@@Base+0x38>
   48b68:	ldr	w0, [sp, #44]
   48b6c:	ldp	x29, x30, [sp], #48
   48b70:	ret

0000000000048b74 <__asan_is_gnu_v3_mangled_dtor@@Base>:
   48b74:	stp	x29, x30, [sp, #-48]!
   48b78:	mov	x29, sp
   48b7c:	str	x0, [sp, #24]
   48b80:	add	x1, sp, #0x28
   48b84:	add	x0, sp, #0x2c
   48b88:	mov	x2, x1
   48b8c:	mov	x1, x0
   48b90:	ldr	x0, [sp, #24]
   48b94:	bl	487e4 <__asan_java_demangle_v3_callback@@Base+0x30>
   48b98:	cmp	w0, #0x0
   48b9c:	b.ne	48ba8 <__asan_is_gnu_v3_mangled_dtor@@Base+0x34>  // b.any
   48ba0:	mov	w0, #0x0                   	// #0
   48ba4:	b	48bac <__asan_is_gnu_v3_mangled_dtor@@Base+0x38>
   48ba8:	ldr	w0, [sp, #40]
   48bac:	ldp	x29, x30, [sp], #48
   48bb0:	ret

0000000000048bb4 <__asan_internal_memcpy@@Base>:
   48bb4:	stp	x29, x30, [sp, #-48]!
   48bb8:	mov	x29, sp
   48bbc:	str	x0, [sp, #40]
   48bc0:	str	x1, [sp, #32]
   48bc4:	str	x2, [sp, #24]
   48bc8:	ldr	x2, [sp, #24]
   48bcc:	ldr	x1, [sp, #32]
   48bd0:	ldr	x0, [sp, #40]
   48bd4:	bl	215ac <__sanitizer_set_report_fd@@Base+0x23b4>
   48bd8:	ldp	x29, x30, [sp], #48
   48bdc:	ret

0000000000048be0 <__asan_internal_memset@@Base>:
   48be0:	stp	x29, x30, [sp, #-48]!
   48be4:	mov	x29, sp
   48be8:	str	x0, [sp, #40]
   48bec:	str	w1, [sp, #36]
   48bf0:	str	x2, [sp, #24]
   48bf4:	ldr	x2, [sp, #24]
   48bf8:	ldr	w1, [sp, #36]
   48bfc:	ldr	x0, [sp, #40]
   48c00:	bl	21754 <__sanitizer_set_report_fd@@Base+0x255c>
   48c04:	ldp	x29, x30, [sp], #48
   48c08:	ret

0000000000048c0c <__asan_internal_memcmp@@Base>:
   48c0c:	stp	x29, x30, [sp, #-48]!
   48c10:	mov	x29, sp
   48c14:	str	x0, [sp, #40]
   48c18:	str	x1, [sp, #32]
   48c1c:	str	x2, [sp, #24]
   48c20:	ldr	x2, [sp, #24]
   48c24:	ldr	x1, [sp, #32]
   48c28:	ldr	x0, [sp, #40]
   48c2c:	bl	21504 <__sanitizer_set_report_fd@@Base+0x230c>
   48c30:	ldp	x29, x30, [sp], #48
   48c34:	ret

0000000000048c38 <__asan_internal_strcmp@@Base>:
   48c38:	stp	x29, x30, [sp, #-32]!
   48c3c:	mov	x29, sp
   48c40:	str	x0, [sp, #24]
   48c44:	str	x1, [sp, #16]
   48c48:	ldr	x1, [sp, #16]
   48c4c:	ldr	x0, [sp, #24]
   48c50:	bl	21950 <__sanitizer_set_report_fd@@Base+0x2758>
   48c54:	ldp	x29, x30, [sp], #32
   48c58:	ret

0000000000048c5c <__asan_internal_strncmp@@Base>:
   48c5c:	stp	x29, x30, [sp, #-48]!
   48c60:	mov	x29, sp
   48c64:	str	x0, [sp, #40]
   48c68:	str	x1, [sp, #32]
   48c6c:	str	x2, [sp, #24]
   48c70:	ldr	x2, [sp, #24]
   48c74:	ldr	x1, [sp, #32]
   48c78:	ldr	x0, [sp, #40]
   48c7c:	bl	219dc <__sanitizer_set_report_fd@@Base+0x27e4>
   48c80:	ldp	x29, x30, [sp], #48
   48c84:	ret

0000000000048c88 <__asan_internal_strlen@@Base>:
   48c88:	stp	x29, x30, [sp, #-32]!
   48c8c:	mov	x29, sp
   48c90:	str	x0, [sp, #24]
   48c94:	ldr	x0, [sp, #24]
   48c98:	bl	21bac <__sanitizer_set_report_fd@@Base+0x29b4>
   48c9c:	ldp	x29, x30, [sp], #32
   48ca0:	ret

0000000000048ca4 <__asan_internal_strnlen@@Base>:
   48ca4:	stp	x29, x30, [sp, #-32]!
   48ca8:	mov	x29, sp
   48cac:	str	x0, [sp, #24]
   48cb0:	str	x1, [sp, #16]
   48cb4:	ldr	x1, [sp, #16]
   48cb8:	ldr	x0, [sp, #24]
   48cbc:	bl	21e9c <__sanitizer_set_report_fd@@Base+0x2ca4>
   48cc0:	ldp	x29, x30, [sp], #32
   48cc4:	ret
   48cc8:	sub	sp, sp, #0x30
   48ccc:	str	w0, [sp, #28]
   48cd0:	str	x1, [sp, #16]
   48cd4:	str	x2, [sp, #8]
   48cd8:	ldr	w0, [sp, #28]
   48cdc:	mvn	w0, w0
   48ce0:	str	w0, [sp, #28]
   48ce4:	ldr	x1, [sp, #16]
   48ce8:	ldr	x0, [sp, #8]
   48cec:	add	x0, x1, x0
   48cf0:	str	x0, [sp, #40]
   48cf4:	b	48d3c <__asan_internal_strnlen@@Base+0x98>
   48cf8:	ldr	x0, [sp, #16]
   48cfc:	ldrb	w0, [x0]
   48d00:	mov	w1, w0
   48d04:	ldr	w0, [sp, #28]
   48d08:	eor	w0, w1, w0
   48d0c:	and	w1, w0, #0xff
   48d10:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   48d14:	add	x0, x0, #0xb70
   48d18:	mov	w1, w1
   48d1c:	ldr	w1, [x0, x1, lsl #2]
   48d20:	ldr	w0, [sp, #28]
   48d24:	lsr	w0, w0, #8
   48d28:	eor	w0, w1, w0
   48d2c:	str	w0, [sp, #28]
   48d30:	ldr	x0, [sp, #16]
   48d34:	add	x0, x0, #0x1
   48d38:	str	x0, [sp, #16]
   48d3c:	ldr	x1, [sp, #16]
   48d40:	ldr	x0, [sp, #40]
   48d44:	cmp	x1, x0
   48d48:	b.cc	48cf8 <__asan_internal_strnlen@@Base+0x54>  // b.lo, b.ul, b.last
   48d4c:	ldr	w0, [sp, #28]
   48d50:	mvn	w0, w0
   48d54:	add	sp, sp, #0x30
   48d58:	ret
   48d5c:	stp	x29, x30, [sp, #-208]!
   48d60:	mov	x29, sp
   48d64:	str	x0, [sp, #40]
   48d68:	str	w1, [sp, #36]
   48d6c:	str	x2, [sp, #24]
   48d70:	str	x3, [sp, #16]
   48d74:	add	x0, sp, #0x48
   48d78:	mov	x1, x0
   48d7c:	ldr	w0, [sp, #36]
   48d80:	bl	4ed80 <__asan_backtrace_vector_release@@Base+0xc0>
   48d84:	cmp	w0, #0x0
   48d88:	b.ge	48db4 <__asan_internal_strnlen@@Base+0x110>  // b.tcont
   48d8c:	bl	6d00 <__errno_location@plt>
   48d90:	ldr	w0, [x0]
   48d94:	ldr	x3, [sp, #24]
   48d98:	mov	w2, w0
   48d9c:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   48da0:	add	x1, x0, #0x488
   48da4:	ldr	x0, [sp, #16]
   48da8:	blr	x3
   48dac:	mov	w0, #0x0                   	// #0
   48db0:	b	48e28 <__asan_internal_strnlen@@Base+0x184>
   48db4:	ldr	x0, [sp, #120]
   48db8:	mov	x1, x0
   48dbc:	add	x0, sp, #0x30
   48dc0:	mov	x6, x0
   48dc4:	ldr	x5, [sp, #16]
   48dc8:	ldr	x4, [sp, #24]
   48dcc:	mov	x3, x1
   48dd0:	mov	x2, #0x0                   	// #0
   48dd4:	ldr	w1, [sp, #36]
   48dd8:	ldr	x0, [sp, #40]
   48ddc:	bl	6d20 <__asan_backtrace_get_view@plt>
   48de0:	cmp	w0, #0x0
   48de4:	b.ne	48df0 <__asan_internal_strnlen@@Base+0x14c>  // b.any
   48de8:	mov	w0, #0x0                   	// #0
   48dec:	b	48e28 <__asan_internal_strnlen@@Base+0x184>
   48df0:	ldr	x0, [sp, #48]
   48df4:	ldr	x1, [sp, #120]
   48df8:	mov	x2, x1
   48dfc:	mov	x1, x0
   48e00:	mov	w0, #0x0                   	// #0
   48e04:	bl	48cc8 <__asan_internal_strnlen@@Base+0x24>
   48e08:	str	w0, [sp, #204]
   48e0c:	add	x0, sp, #0x30
   48e10:	ldr	x3, [sp, #16]
   48e14:	ldr	x2, [sp, #24]
   48e18:	mov	x1, x0
   48e1c:	ldr	x0, [sp, #40]
   48e20:	bl	69a0 <__asan_backtrace_release_view@plt>
   48e24:	ldr	w0, [sp, #204]
   48e28:	ldp	x29, x30, [sp], #208
   48e2c:	ret
   48e30:	stp	x29, x30, [sp, #-64]!
   48e34:	mov	x29, sp
   48e38:	str	x0, [sp, #56]
   48e3c:	str	x1, [sp, #48]
   48e40:	str	x2, [sp, #40]
   48e44:	str	x3, [sp, #32]
   48e48:	str	x4, [sp, #24]
   48e4c:	ldr	x3, [sp, #32]
   48e50:	mov	w2, #0xffffffff            	// #-1
   48e54:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   48e58:	add	x1, x0, #0x490
   48e5c:	ldr	x0, [sp, #24]
   48e60:	blr	x3
   48e64:	mov	w0, #0x0                   	// #0
   48e68:	ldp	x29, x30, [sp], #64
   48e6c:	ret
   48e70:	stp	x29, x30, [sp, #-64]!
   48e74:	mov	x29, sp
   48e78:	str	x0, [sp, #56]
   48e7c:	str	x1, [sp, #48]
   48e80:	str	x2, [sp, #40]
   48e84:	str	x3, [sp, #32]
   48e88:	str	x4, [sp, #24]
   48e8c:	ldr	x3, [sp, #32]
   48e90:	mov	w2, #0xffffffff            	// #-1
   48e94:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   48e98:	add	x1, x0, #0x4b0
   48e9c:	ldr	x0, [sp, #24]
   48ea0:	blr	x3
   48ea4:	nop
   48ea8:	ldp	x29, x30, [sp], #64
   48eac:	ret
   48eb0:	sub	sp, sp, #0x20
   48eb4:	str	x0, [sp, #8]
   48eb8:	str	x1, [sp]
   48ebc:	ldr	x0, [sp, #8]
   48ec0:	str	x0, [sp, #24]
   48ec4:	ldr	x0, [sp]
   48ec8:	str	x0, [sp, #16]
   48ecc:	ldr	x0, [sp, #24]
   48ed0:	ldr	x1, [x0, #8]
   48ed4:	ldr	x0, [sp, #16]
   48ed8:	ldr	x0, [x0, #8]
   48edc:	cmp	x1, x0
   48ee0:	b.cs	48eec <__asan_internal_strnlen@@Base+0x248>  // b.hs, b.nlast
   48ee4:	mov	w0, #0xffffffff            	// #-1
   48ee8:	b	48f10 <__asan_internal_strnlen@@Base+0x26c>
   48eec:	ldr	x0, [sp, #24]
   48ef0:	ldr	x1, [x0, #8]
   48ef4:	ldr	x0, [sp, #16]
   48ef8:	ldr	x0, [x0, #8]
   48efc:	cmp	x1, x0
   48f00:	b.ls	48f0c <__asan_internal_strnlen@@Base+0x268>  // b.plast
   48f04:	mov	w0, #0x1                   	// #1
   48f08:	b	48f10 <__asan_internal_strnlen@@Base+0x26c>
   48f0c:	mov	w0, #0x0                   	// #0
   48f10:	add	sp, sp, #0x20
   48f14:	ret
   48f18:	sub	sp, sp, #0x30
   48f1c:	str	x0, [sp, #8]
   48f20:	str	x1, [sp]
   48f24:	ldr	x0, [sp, #8]
   48f28:	str	x0, [sp, #40]
   48f2c:	ldr	x0, [sp]
   48f30:	str	x0, [sp, #32]
   48f34:	ldr	x0, [sp, #40]
   48f38:	ldr	x0, [x0]
   48f3c:	str	x0, [sp, #24]
   48f40:	ldr	x0, [sp, #32]
   48f44:	ldr	x0, [x0, #8]
   48f48:	ldr	x1, [sp, #24]
   48f4c:	cmp	x1, x0
   48f50:	b.cs	48f5c <__asan_internal_strnlen@@Base+0x2b8>  // b.hs, b.nlast
   48f54:	mov	w0, #0xffffffff            	// #-1
   48f58:	b	48f88 <__asan_internal_strnlen@@Base+0x2e4>
   48f5c:	ldr	x0, [sp, #32]
   48f60:	ldr	x1, [x0, #8]
   48f64:	ldr	x0, [sp, #32]
   48f68:	ldr	x0, [x0, #16]
   48f6c:	add	x0, x1, x0
   48f70:	ldr	x1, [sp, #24]
   48f74:	cmp	x1, x0
   48f78:	b.cc	48f84 <__asan_internal_strnlen@@Base+0x2e0>  // b.lo, b.ul, b.last
   48f7c:	mov	w0, #0x1                   	// #1
   48f80:	b	48f88 <__asan_internal_strnlen@@Base+0x2e4>
   48f84:	mov	w0, #0x0                   	// #0
   48f88:	add	sp, sp, #0x30
   48f8c:	ret
   48f90:	stp	x29, x30, [sp, #-144]!
   48f94:	mov	x29, sp
   48f98:	str	x0, [sp, #72]
   48f9c:	str	x1, [sp, #64]
   48fa0:	str	x2, [sp, #56]
   48fa4:	str	x3, [sp, #48]
   48fa8:	str	x4, [sp, #40]
   48fac:	str	x5, [sp, #32]
   48fb0:	str	x6, [sp, #24]
   48fb4:	str	x7, [sp, #16]
   48fb8:	ldr	x1, [sp, #48]
   48fbc:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   48fc0:	movk	x0, #0xaaab
   48fc4:	umulh	x0, x1, x0
   48fc8:	lsr	x0, x0, #4
   48fcc:	str	x0, [sp, #104]
   48fd0:	ldr	x0, [sp, #56]
   48fd4:	str	x0, [sp, #136]
   48fd8:	str	xzr, [sp, #128]
   48fdc:	str	xzr, [sp, #120]
   48fe0:	b	49040 <__asan_internal_strnlen@@Base+0x39c>
   48fe4:	ldr	x0, [sp, #136]
   48fe8:	ldrb	w0, [x0, #4]
   48fec:	and	w0, w0, #0xf
   48ff0:	str	w0, [sp, #80]
   48ff4:	ldr	w0, [sp, #80]
   48ff8:	cmp	w0, #0x2
   48ffc:	b.eq	4900c <__asan_internal_strnlen@@Base+0x368>  // b.none
   49000:	ldr	w0, [sp, #80]
   49004:	cmp	w0, #0x1
   49008:	b.ne	49028 <__asan_internal_strnlen@@Base+0x384>  // b.any
   4900c:	ldr	x0, [sp, #136]
   49010:	ldrh	w0, [x0, #6]
   49014:	cmp	w0, #0x0
   49018:	b.eq	49028 <__asan_internal_strnlen@@Base+0x384>  // b.none
   4901c:	ldr	x0, [sp, #128]
   49020:	add	x0, x0, #0x1
   49024:	str	x0, [sp, #128]
   49028:	ldr	x0, [sp, #120]
   4902c:	add	x0, x0, #0x1
   49030:	str	x0, [sp, #120]
   49034:	ldr	x0, [sp, #136]
   49038:	add	x0, x0, #0x18
   4903c:	str	x0, [sp, #136]
   49040:	ldr	x1, [sp, #120]
   49044:	ldr	x0, [sp, #104]
   49048:	cmp	x1, x0
   4904c:	b.cc	48fe4 <__asan_internal_strnlen@@Base+0x340>  // b.lo, b.ul, b.last
   49050:	ldr	x1, [sp, #128]
   49054:	mov	x0, x1
   49058:	lsl	x0, x0, #1
   4905c:	add	x0, x0, x1
   49060:	lsl	x0, x0, #3
   49064:	str	x0, [sp, #96]
   49068:	ldr	x3, [sp, #16]
   4906c:	ldr	x2, [sp, #24]
   49070:	ldr	x1, [sp, #96]
   49074:	ldr	x0, [sp, #72]
   49078:	bl	6b10 <__asan_backtrace_alloc@plt>
   4907c:	str	x0, [sp, #88]
   49080:	ldr	x0, [sp, #88]
   49084:	cmp	x0, #0x0
   49088:	b.ne	49094 <__asan_internal_strnlen@@Base+0x3f0>  // b.any
   4908c:	mov	w0, #0x0                   	// #0
   49090:	b	49324 <__asan_internal_strnlen@@Base+0x680>
   49094:	ldr	x0, [sp, #56]
   49098:	str	x0, [sp, #136]
   4909c:	str	wzr, [sp, #116]
   490a0:	str	xzr, [sp, #120]
   490a4:	b	492d8 <__asan_internal_strnlen@@Base+0x634>
   490a8:	ldr	x0, [sp, #136]
   490ac:	ldrb	w0, [x0, #4]
   490b0:	and	w0, w0, #0xf
   490b4:	str	w0, [sp, #84]
   490b8:	ldr	w0, [sp, #84]
   490bc:	cmp	w0, #0x2
   490c0:	b.eq	490d0 <__asan_internal_strnlen@@Base+0x42c>  // b.none
   490c4:	ldr	w0, [sp, #84]
   490c8:	cmp	w0, #0x1
   490cc:	b.ne	492b4 <__asan_internal_strnlen@@Base+0x610>  // b.any
   490d0:	ldr	x0, [sp, #136]
   490d4:	ldrh	w0, [x0, #6]
   490d8:	cmp	w0, #0x0
   490dc:	b.eq	492bc <__asan_internal_strnlen@@Base+0x618>  // b.none
   490e0:	ldr	x0, [sp, #136]
   490e4:	ldr	w0, [x0]
   490e8:	mov	w0, w0
   490ec:	ldr	x1, [sp, #32]
   490f0:	cmp	x1, x0
   490f4:	b.hi	49130 <__asan_internal_strnlen@@Base+0x48c>  // b.pmore
   490f8:	ldr	x3, [sp, #24]
   490fc:	mov	w2, #0x0                   	// #0
   49100:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   49104:	add	x1, x0, #0x4d8
   49108:	ldr	x0, [sp, #16]
   4910c:	blr	x3
   49110:	ldr	x4, [sp, #16]
   49114:	ldr	x3, [sp, #24]
   49118:	ldr	x2, [sp, #96]
   4911c:	ldr	x1, [sp, #88]
   49120:	ldr	x0, [sp, #72]
   49124:	bl	6e00 <__asan_backtrace_free@plt>
   49128:	mov	w0, #0x0                   	// #0
   4912c:	b	49324 <__asan_internal_strnlen@@Base+0x680>
   49130:	ldr	x0, [sp, #136]
   49134:	ldr	w0, [x0]
   49138:	mov	w2, w0
   4913c:	ldr	w1, [sp, #116]
   49140:	mov	x0, x1
   49144:	lsl	x0, x0, #1
   49148:	add	x0, x0, x1
   4914c:	lsl	x0, x0, #3
   49150:	mov	x1, x0
   49154:	ldr	x0, [sp, #88]
   49158:	add	x0, x0, x1
   4915c:	ldr	x1, [sp, #40]
   49160:	add	x1, x1, x2
   49164:	str	x1, [x0]
   49168:	ldr	x0, [sp, #152]
   4916c:	cmp	x0, #0x0
   49170:	b.eq	491fc <__asan_internal_strnlen@@Base+0x558>  // b.none
   49174:	ldr	x0, [sp, #136]
   49178:	ldr	x1, [x0, #8]
   4917c:	ldr	x0, [sp, #152]
   49180:	ldr	x0, [x0]
   49184:	cmp	x1, x0
   49188:	b.cc	491fc <__asan_internal_strnlen@@Base+0x558>  // b.lo, b.ul, b.last
   4918c:	ldr	x0, [sp, #136]
   49190:	ldr	x1, [x0, #8]
   49194:	ldr	x0, [sp, #152]
   49198:	ldr	x2, [x0]
   4919c:	ldr	x0, [sp, #152]
   491a0:	ldr	x0, [x0, #16]
   491a4:	add	x0, x2, x0
   491a8:	cmp	x1, x0
   491ac:	b.cs	491fc <__asan_internal_strnlen@@Base+0x558>  // b.hs, b.nlast
   491b0:	ldr	x0, [sp, #152]
   491b4:	ldr	x1, [x0, #8]
   491b8:	ldr	x0, [sp, #136]
   491bc:	ldr	x2, [x0, #8]
   491c0:	ldr	x0, [sp, #152]
   491c4:	ldr	x0, [x0]
   491c8:	sub	x0, x2, x0
   491cc:	add	x2, x1, x0
   491d0:	ldr	w1, [sp, #116]
   491d4:	mov	x0, x1
   491d8:	lsl	x0, x0, #1
   491dc:	add	x0, x0, x1
   491e0:	lsl	x0, x0, #3
   491e4:	mov	x1, x0
   491e8:	ldr	x0, [sp, #88]
   491ec:	add	x0, x0, x1
   491f0:	ldr	x1, [x2]
   491f4:	str	x1, [x0, #8]
   491f8:	b	49228 <__asan_internal_strnlen@@Base+0x584>
   491fc:	ldr	w1, [sp, #116]
   49200:	mov	x0, x1
   49204:	lsl	x0, x0, #1
   49208:	add	x0, x0, x1
   4920c:	lsl	x0, x0, #3
   49210:	mov	x1, x0
   49214:	ldr	x0, [sp, #88]
   49218:	add	x0, x0, x1
   4921c:	ldr	x1, [sp, #136]
   49220:	ldr	x1, [x1, #8]
   49224:	str	x1, [x0, #8]
   49228:	ldr	w1, [sp, #116]
   4922c:	mov	x0, x1
   49230:	lsl	x0, x0, #1
   49234:	add	x0, x0, x1
   49238:	lsl	x0, x0, #3
   4923c:	mov	x1, x0
   49240:	ldr	x0, [sp, #88]
   49244:	add	x0, x0, x1
   49248:	ldr	x2, [x0, #8]
   4924c:	ldr	w1, [sp, #116]
   49250:	mov	x0, x1
   49254:	lsl	x0, x0, #1
   49258:	add	x0, x0, x1
   4925c:	lsl	x0, x0, #3
   49260:	mov	x1, x0
   49264:	ldr	x0, [sp, #88]
   49268:	add	x0, x0, x1
   4926c:	ldr	x1, [sp, #64]
   49270:	add	x1, x2, x1
   49274:	str	x1, [x0, #8]
   49278:	ldr	w1, [sp, #116]
   4927c:	mov	x0, x1
   49280:	lsl	x0, x0, #1
   49284:	add	x0, x0, x1
   49288:	lsl	x0, x0, #3
   4928c:	mov	x1, x0
   49290:	ldr	x0, [sp, #88]
   49294:	add	x0, x0, x1
   49298:	ldr	x1, [sp, #136]
   4929c:	ldr	x1, [x1, #16]
   492a0:	str	x1, [x0, #16]
   492a4:	ldr	w0, [sp, #116]
   492a8:	add	w0, w0, #0x1
   492ac:	str	w0, [sp, #116]
   492b0:	b	492c0 <__asan_internal_strnlen@@Base+0x61c>
   492b4:	nop
   492b8:	b	492c0 <__asan_internal_strnlen@@Base+0x61c>
   492bc:	nop
   492c0:	ldr	x0, [sp, #120]
   492c4:	add	x0, x0, #0x1
   492c8:	str	x0, [sp, #120]
   492cc:	ldr	x0, [sp, #136]
   492d0:	add	x0, x0, #0x18
   492d4:	str	x0, [sp, #136]
   492d8:	ldr	x1, [sp, #120]
   492dc:	ldr	x0, [sp, #104]
   492e0:	cmp	x1, x0
   492e4:	b.cc	490a8 <__asan_internal_strnlen@@Base+0x404>  // b.lo, b.ul, b.last
   492e8:	adrp	x0, 48000 <__asan_cplus_demangle_print@@Base+0x3764>
   492ec:	add	x3, x0, #0xeb0
   492f0:	mov	x2, #0x18                  	// #24
   492f4:	ldr	x1, [sp, #128]
   492f8:	ldr	x0, [sp, #88]
   492fc:	bl	68f0 <__asan_backtrace_qsort@plt>
   49300:	ldr	x0, [sp, #144]
   49304:	str	xzr, [x0]
   49308:	ldr	x0, [sp, #144]
   4930c:	ldr	x1, [sp, #88]
   49310:	str	x1, [x0, #8]
   49314:	ldr	x0, [sp, #144]
   49318:	ldr	x1, [sp, #128]
   4931c:	str	x1, [x0, #16]
   49320:	mov	w0, #0x1                   	// #1
   49324:	ldp	x29, x30, [sp], #144
   49328:	ret
   4932c:	sub	sp, sp, #0x30
   49330:	str	x0, [sp, #8]
   49334:	str	x1, [sp]
   49338:	ldr	x0, [sp, #8]
   4933c:	ldr	w0, [x0, #8]
   49340:	cmp	w0, #0x0
   49344:	b.ne	49384 <__asan_internal_strnlen@@Base+0x6e0>  // b.any
   49348:	ldr	x0, [sp, #8]
   4934c:	add	x0, x0, #0x30
   49350:	str	x0, [sp, #40]
   49354:	b	49364 <__asan_internal_strnlen@@Base+0x6c0>
   49358:	ldr	x0, [sp, #40]
   4935c:	ldr	x0, [x0]
   49360:	str	x0, [sp, #40]
   49364:	ldr	x0, [sp, #40]
   49368:	ldr	x0, [x0]
   4936c:	cmp	x0, #0x0
   49370:	b.ne	49358 <__asan_internal_strnlen@@Base+0x6b4>  // b.any
   49374:	ldr	x0, [sp, #40]
   49378:	ldr	x1, [sp]
   4937c:	str	x1, [x0]
   49380:	b	493ec <__asan_internal_strnlen@@Base+0x748>
   49384:	ldr	x0, [sp, #8]
   49388:	add	x0, x0, #0x30
   4938c:	str	x0, [sp, #32]
   49390:	ldr	x0, [sp, #32]
   49394:	ldar	x0, [x0]
   49398:	str	x0, [sp, #24]
   4939c:	ldr	x0, [sp, #24]
   493a0:	cmp	x0, #0x0
   493a4:	b.eq	493b4 <__asan_internal_strnlen@@Base+0x710>  // b.none
   493a8:	ldr	x0, [sp, #24]
   493ac:	str	x0, [sp, #32]
   493b0:	b	49390 <__asan_internal_strnlen@@Base+0x6ec>
   493b4:	nop
   493b8:	ldr	x1, [sp]
   493bc:	ldr	x0, [sp, #32]
   493c0:	ldxr	x2, [x0]
   493c4:	cbnz	x2, 493d0 <__asan_internal_strnlen@@Base+0x72c>
   493c8:	stlxr	w3, x1, [x0]
   493cc:	cbnz	w3, 493c0 <__asan_internal_strnlen@@Base+0x71c>
   493d0:	cmp	x2, #0x0
   493d4:	dmb	ish
   493d8:	cset	w0, eq  // eq = none
   493dc:	cmp	w0, #0x0
   493e0:	b.ne	493e8 <__asan_internal_strnlen@@Base+0x744>  // b.any
   493e4:	b	49384 <__asan_internal_strnlen@@Base+0x6e0>
   493e8:	nop
   493ec:	nop
   493f0:	add	sp, sp, #0x30
   493f4:	ret
   493f8:	stp	x29, x30, [sp, #-96]!
   493fc:	mov	x29, sp
   49400:	str	x0, [sp, #56]
   49404:	str	x1, [sp, #48]
   49408:	str	x2, [sp, #40]
   4940c:	str	x3, [sp, #32]
   49410:	str	x4, [sp, #24]
   49414:	str	xzr, [sp, #80]
   49418:	ldr	x0, [sp, #56]
   4941c:	ldr	w0, [x0, #8]
   49420:	cmp	w0, #0x0
   49424:	b.ne	4948c <__asan_internal_strnlen@@Base+0x7e8>  // b.any
   49428:	ldr	x0, [sp, #56]
   4942c:	ldr	x0, [x0, #48]
   49430:	str	x0, [sp, #88]
   49434:	b	4947c <__asan_internal_strnlen@@Base+0x7d8>
   49438:	ldr	x0, [sp, #88]
   4943c:	ldr	x1, [x0, #8]
   49440:	ldr	x0, [sp, #88]
   49444:	ldr	x2, [x0, #16]
   49448:	add	x5, sp, #0x30
   4944c:	adrp	x0, 48000 <__asan_cplus_demangle_print@@Base+0x3764>
   49450:	add	x4, x0, #0xf18
   49454:	mov	x3, #0x18                  	// #24
   49458:	mov	x0, x5
   4945c:	bl	6e40 <bsearch@plt>
   49460:	str	x0, [sp, #80]
   49464:	ldr	x0, [sp, #80]
   49468:	cmp	x0, #0x0
   4946c:	b.ne	494f4 <__asan_internal_strnlen@@Base+0x850>  // b.any
   49470:	ldr	x0, [sp, #88]
   49474:	ldr	x0, [x0]
   49478:	str	x0, [sp, #88]
   4947c:	ldr	x0, [sp, #88]
   49480:	cmp	x0, #0x0
   49484:	b.ne	49438 <__asan_internal_strnlen@@Base+0x794>  // b.any
   49488:	b	49508 <__asan_internal_strnlen@@Base+0x864>
   4948c:	ldr	x0, [sp, #56]
   49490:	add	x0, x0, #0x30
   49494:	str	x0, [sp, #72]
   49498:	ldr	x0, [sp, #72]
   4949c:	ldar	x0, [x0]
   494a0:	str	x0, [sp, #88]
   494a4:	ldr	x0, [sp, #88]
   494a8:	cmp	x0, #0x0
   494ac:	b.eq	494fc <__asan_internal_strnlen@@Base+0x858>  // b.none
   494b0:	ldr	x0, [sp, #88]
   494b4:	ldr	x1, [x0, #8]
   494b8:	ldr	x0, [sp, #88]
   494bc:	ldr	x2, [x0, #16]
   494c0:	add	x5, sp, #0x30
   494c4:	adrp	x0, 48000 <__asan_cplus_demangle_print@@Base+0x3764>
   494c8:	add	x4, x0, #0xf18
   494cc:	mov	x3, #0x18                  	// #24
   494d0:	mov	x0, x5
   494d4:	bl	6e40 <bsearch@plt>
   494d8:	str	x0, [sp, #80]
   494dc:	ldr	x0, [sp, #80]
   494e0:	cmp	x0, #0x0
   494e4:	b.ne	49504 <__asan_internal_strnlen@@Base+0x860>  // b.any
   494e8:	ldr	x0, [sp, #88]
   494ec:	str	x0, [sp, #72]
   494f0:	b	49498 <__asan_internal_strnlen@@Base+0x7f4>
   494f4:	nop
   494f8:	b	49508 <__asan_internal_strnlen@@Base+0x864>
   494fc:	nop
   49500:	b	49508 <__asan_internal_strnlen@@Base+0x864>
   49504:	nop
   49508:	ldr	x0, [sp, #80]
   4950c:	cmp	x0, #0x0
   49510:	b.ne	49538 <__asan_internal_strnlen@@Base+0x894>  // b.any
   49514:	ldr	x0, [sp, #48]
   49518:	ldr	x5, [sp, #40]
   4951c:	mov	x4, #0x0                   	// #0
   49520:	mov	x3, #0x0                   	// #0
   49524:	mov	x2, #0x0                   	// #0
   49528:	mov	x1, x0
   4952c:	ldr	x0, [sp, #24]
   49530:	blr	x5
   49534:	b	49564 <__asan_internal_strnlen@@Base+0x8c0>
   49538:	ldr	x1, [sp, #48]
   4953c:	ldr	x0, [sp, #80]
   49540:	ldr	x2, [x0]
   49544:	ldr	x0, [sp, #80]
   49548:	ldr	x3, [x0, #8]
   4954c:	ldr	x0, [sp, #80]
   49550:	ldr	x0, [x0, #16]
   49554:	ldr	x5, [sp, #40]
   49558:	mov	x4, x0
   4955c:	ldr	x0, [sp, #24]
   49560:	blr	x5
   49564:	nop
   49568:	ldp	x29, x30, [sp], #96
   4956c:	ret
   49570:	stp	x29, x30, [sp, #-160]!
   49574:	mov	x29, sp
   49578:	str	x0, [sp, #24]
   4957c:	add	x0, sp, #0x20
   49580:	mov	x1, x0
   49584:	ldr	x0, [sp, #24]
   49588:	bl	4ed90 <__asan_backtrace_vector_release@@Base+0xd0>
   4958c:	cmp	w0, #0x0
   49590:	b.ge	4959c <__asan_internal_strnlen@@Base+0x8f8>  // b.tcont
   49594:	mov	w0, #0x0                   	// #0
   49598:	b	495b0 <__asan_internal_strnlen@@Base+0x90c>
   4959c:	ldr	w0, [sp, #48]
   495a0:	and	w0, w0, #0xf000
   495a4:	cmp	w0, #0xa, lsl #12
   495a8:	cset	w0, eq  // eq = none
   495ac:	and	w0, w0, #0xff
   495b0:	ldp	x29, x30, [sp], #160
   495b4:	ret
   495b8:	stp	x29, x30, [sp, #-96]!
   495bc:	mov	x29, sp
   495c0:	str	x0, [sp, #56]
   495c4:	str	x1, [sp, #48]
   495c8:	str	x2, [sp, #40]
   495cc:	str	x3, [sp, #32]
   495d0:	str	x4, [sp, #24]
   495d4:	mov	x0, #0x80                  	// #128
   495d8:	str	x0, [sp, #88]
   495dc:	ldr	x3, [sp, #32]
   495e0:	ldr	x2, [sp, #40]
   495e4:	ldr	x1, [sp, #88]
   495e8:	ldr	x0, [sp, #56]
   495ec:	bl	6b10 <__asan_backtrace_alloc@plt>
   495f0:	str	x0, [sp, #80]
   495f4:	ldr	x0, [sp, #80]
   495f8:	cmp	x0, #0x0
   495fc:	b.ne	49608 <__asan_internal_strnlen@@Base+0x964>  // b.any
   49600:	mov	x0, #0x0                   	// #0
   49604:	b	496a8 <__asan_internal_strnlen@@Base+0xa04>
   49608:	ldr	x2, [sp, #88]
   4960c:	ldr	x1, [sp, #80]
   49610:	ldr	x0, [sp, #48]
   49614:	bl	6900 <readlink@plt>
   49618:	str	x0, [sp, #72]
   4961c:	ldr	x0, [sp, #72]
   49620:	cmp	x0, #0x0
   49624:	b.ge	49648 <__asan_internal_strnlen@@Base+0x9a4>  // b.tcont
   49628:	ldr	x4, [sp, #32]
   4962c:	ldr	x3, [sp, #40]
   49630:	ldr	x2, [sp, #88]
   49634:	ldr	x1, [sp, #80]
   49638:	ldr	x0, [sp, #56]
   4963c:	bl	6e00 <__asan_backtrace_free@plt>
   49640:	mov	x0, #0x0                   	// #0
   49644:	b	496a8 <__asan_internal_strnlen@@Base+0xa04>
   49648:	ldr	x0, [sp, #88]
   4964c:	sub	x1, x0, #0x1
   49650:	ldr	x0, [sp, #72]
   49654:	cmp	x1, x0
   49658:	b.ls	49680 <__asan_internal_strnlen@@Base+0x9dc>  // b.plast
   4965c:	ldr	x0, [sp, #72]
   49660:	ldr	x1, [sp, #80]
   49664:	add	x0, x1, x0
   49668:	strb	wzr, [x0]
   4966c:	ldr	x0, [sp, #24]
   49670:	ldr	x1, [sp, #88]
   49674:	str	x1, [x0]
   49678:	ldr	x0, [sp, #80]
   4967c:	b	496a8 <__asan_internal_strnlen@@Base+0xa04>
   49680:	ldr	x4, [sp, #32]
   49684:	ldr	x3, [sp, #40]
   49688:	ldr	x2, [sp, #88]
   4968c:	ldr	x1, [sp, #80]
   49690:	ldr	x0, [sp, #56]
   49694:	bl	6e00 <__asan_backtrace_free@plt>
   49698:	ldr	x0, [sp, #88]
   4969c:	lsl	x0, x0, #1
   496a0:	str	x0, [sp, #88]
   496a4:	b	495dc <__asan_internal_strnlen@@Base+0x938>
   496a8:	ldp	x29, x30, [sp], #96
   496ac:	ret
   496b0:	stp	x29, x30, [sp, #-144]!
   496b4:	mov	x29, sp
   496b8:	str	x0, [sp, #56]
   496bc:	str	x1, [sp, #48]
   496c0:	str	x2, [sp, #40]
   496c4:	str	x3, [sp, #32]
   496c8:	str	x4, [sp, #24]
   496cc:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   496d0:	add	x0, x0, #0x500
   496d4:	str	x0, [sp, #120]
   496d8:	ldr	x0, [sp, #120]
   496dc:	bl	6a20 <__asan_internal_strlen@plt>
   496e0:	str	x0, [sp, #112]
   496e4:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   496e8:	add	x0, x0, #0x520
   496ec:	str	x0, [sp, #104]
   496f0:	ldr	x0, [sp, #104]
   496f4:	bl	6a20 <__asan_internal_strlen@plt>
   496f8:	str	x0, [sp, #96]
   496fc:	ldr	x0, [sp, #40]
   49700:	lsl	x1, x0, #1
   49704:	ldr	x0, [sp, #112]
   49708:	add	x1, x1, x0
   4970c:	ldr	x0, [sp, #96]
   49710:	add	x0, x1, x0
   49714:	add	x0, x0, #0x2
   49718:	str	x0, [sp, #88]
   4971c:	ldr	x3, [sp, #24]
   49720:	ldr	x2, [sp, #32]
   49724:	ldr	x1, [sp, #88]
   49728:	ldr	x0, [sp, #56]
   4972c:	bl	6b10 <__asan_backtrace_alloc@plt>
   49730:	str	x0, [sp, #80]
   49734:	ldr	x0, [sp, #80]
   49738:	cmp	x0, #0x0
   4973c:	b.ne	49748 <__asan_internal_strnlen@@Base+0xaa4>  // b.any
   49740:	mov	w0, #0xffffffff            	// #-1
   49744:	b	498a8 <__asan_internal_strnlen@@Base+0xc04>
   49748:	ldr	x0, [sp, #80]
   4974c:	str	x0, [sp, #136]
   49750:	ldr	x2, [sp, #112]
   49754:	ldr	x1, [sp, #120]
   49758:	ldr	x0, [sp, #136]
   4975c:	bl	6a10 <__asan_internal_memcpy@plt>
   49760:	ldr	x1, [sp, #136]
   49764:	ldr	x0, [sp, #112]
   49768:	add	x0, x1, x0
   4976c:	str	x0, [sp, #136]
   49770:	str	xzr, [sp, #128]
   49774:	b	49840 <__asan_internal_strnlen@@Base+0xb9c>
   49778:	ldr	x1, [sp, #48]
   4977c:	ldr	x0, [sp, #128]
   49780:	add	x0, x1, x0
   49784:	ldrb	w0, [x0]
   49788:	strb	w0, [sp, #75]
   4978c:	ldrb	w0, [sp, #75]
   49790:	lsr	w0, w0, #4
   49794:	strb	w0, [sp, #74]
   49798:	ldrb	w0, [sp, #74]
   4979c:	cmp	w0, #0x9
   497a0:	b.hi	497b4 <__asan_internal_strnlen@@Base+0xb10>  // b.pmore
   497a4:	ldrb	w0, [sp, #74]
   497a8:	add	w0, w0, #0x30
   497ac:	and	w1, w0, #0xff
   497b0:	b	497c0 <__asan_internal_strnlen@@Base+0xb1c>
   497b4:	ldrb	w0, [sp, #74]
   497b8:	add	w0, w0, #0x57
   497bc:	and	w1, w0, #0xff
   497c0:	ldr	x0, [sp, #136]
   497c4:	add	x2, x0, #0x1
   497c8:	str	x2, [sp, #136]
   497cc:	strb	w1, [x0]
   497d0:	ldrb	w0, [sp, #75]
   497d4:	and	w0, w0, #0xf
   497d8:	strb	w0, [sp, #74]
   497dc:	ldrb	w0, [sp, #74]
   497e0:	cmp	w0, #0x9
   497e4:	b.hi	497f8 <__asan_internal_strnlen@@Base+0xb54>  // b.pmore
   497e8:	ldrb	w0, [sp, #74]
   497ec:	add	w0, w0, #0x30
   497f0:	and	w1, w0, #0xff
   497f4:	b	49804 <__asan_internal_strnlen@@Base+0xb60>
   497f8:	ldrb	w0, [sp, #74]
   497fc:	add	w0, w0, #0x57
   49800:	and	w1, w0, #0xff
   49804:	ldr	x0, [sp, #136]
   49808:	add	x2, x0, #0x1
   4980c:	str	x2, [sp, #136]
   49810:	strb	w1, [x0]
   49814:	ldr	x0, [sp, #128]
   49818:	cmp	x0, #0x0
   4981c:	b.ne	49834 <__asan_internal_strnlen@@Base+0xb90>  // b.any
   49820:	ldr	x0, [sp, #136]
   49824:	add	x1, x0, #0x1
   49828:	str	x1, [sp, #136]
   4982c:	mov	w1, #0x2f                  	// #47
   49830:	strb	w1, [x0]
   49834:	ldr	x0, [sp, #128]
   49838:	add	x0, x0, #0x1
   4983c:	str	x0, [sp, #128]
   49840:	ldr	x1, [sp, #128]
   49844:	ldr	x0, [sp, #40]
   49848:	cmp	x1, x0
   4984c:	b.cc	49778 <__asan_internal_strnlen@@Base+0xad4>  // b.lo, b.ul, b.last
   49850:	ldr	x2, [sp, #96]
   49854:	ldr	x1, [sp, #104]
   49858:	ldr	x0, [sp, #136]
   4985c:	bl	6a10 <__asan_internal_memcpy@plt>
   49860:	ldr	x1, [sp, #136]
   49864:	ldr	x0, [sp, #96]
   49868:	add	x0, x1, x0
   4986c:	strb	wzr, [x0]
   49870:	add	x0, sp, #0x44
   49874:	mov	x3, x0
   49878:	ldr	x2, [sp, #24]
   4987c:	ldr	x1, [sp, #32]
   49880:	ldr	x0, [sp, #80]
   49884:	bl	6f90 <__asan_backtrace_open@plt>
   49888:	str	w0, [sp, #76]
   4988c:	ldr	x4, [sp, #24]
   49890:	ldr	x3, [sp, #32]
   49894:	ldr	x2, [sp, #88]
   49898:	ldr	x1, [sp, #80]
   4989c:	ldr	x0, [sp, #56]
   498a0:	bl	6e00 <__asan_backtrace_free@plt>
   498a4:	ldr	w0, [sp, #76]
   498a8:	ldp	x29, x30, [sp], #144
   498ac:	ret
   498b0:	stp	x29, x30, [sp, #-112]!
   498b4:	mov	x29, sp
   498b8:	str	x0, [sp, #72]
   498bc:	str	x1, [sp, #64]
   498c0:	str	x2, [sp, #56]
   498c4:	str	x3, [sp, #48]
   498c8:	str	x4, [sp, #40]
   498cc:	str	x5, [sp, #32]
   498d0:	str	x6, [sp, #24]
   498d4:	str	x7, [sp, #16]
   498d8:	ldr	x0, [sp, #32]
   498dc:	bl	6a20 <__asan_internal_strlen@plt>
   498e0:	str	x0, [sp, #104]
   498e4:	ldr	x1, [sp, #56]
   498e8:	ldr	x0, [sp, #40]
   498ec:	add	x1, x1, x0
   498f0:	ldr	x0, [sp, #104]
   498f4:	add	x0, x1, x0
   498f8:	add	x0, x0, #0x1
   498fc:	str	x0, [sp, #96]
   49900:	ldr	x3, [sp, #16]
   49904:	ldr	x2, [sp, #24]
   49908:	ldr	x1, [sp, #96]
   4990c:	ldr	x0, [sp, #72]
   49910:	bl	6b10 <__asan_backtrace_alloc@plt>
   49914:	str	x0, [sp, #88]
   49918:	ldr	x0, [sp, #88]
   4991c:	cmp	x0, #0x0
   49920:	b.ne	4992c <__asan_internal_strnlen@@Base+0xc88>  // b.any
   49924:	mov	w0, #0xffffffff            	// #-1
   49928:	b	499cc <__asan_internal_strnlen@@Base+0xd28>
   4992c:	ldr	x2, [sp, #56]
   49930:	ldr	x1, [sp, #64]
   49934:	ldr	x0, [sp, #88]
   49938:	bl	6a10 <__asan_internal_memcpy@plt>
   4993c:	ldr	x1, [sp, #88]
   49940:	ldr	x0, [sp, #56]
   49944:	add	x0, x1, x0
   49948:	ldr	x2, [sp, #40]
   4994c:	ldr	x1, [sp, #48]
   49950:	bl	6a10 <__asan_internal_memcpy@plt>
   49954:	ldr	x1, [sp, #56]
   49958:	ldr	x0, [sp, #40]
   4995c:	add	x0, x1, x0
   49960:	ldr	x1, [sp, #88]
   49964:	add	x0, x1, x0
   49968:	ldr	x2, [sp, #104]
   4996c:	ldr	x1, [sp, #32]
   49970:	bl	6a10 <__asan_internal_memcpy@plt>
   49974:	ldr	x1, [sp, #56]
   49978:	ldr	x0, [sp, #40]
   4997c:	add	x1, x1, x0
   49980:	ldr	x0, [sp, #104]
   49984:	add	x0, x1, x0
   49988:	ldr	x1, [sp, #88]
   4998c:	add	x0, x1, x0
   49990:	strb	wzr, [x0]
   49994:	add	x0, sp, #0x50
   49998:	mov	x3, x0
   4999c:	ldr	x2, [sp, #16]
   499a0:	ldr	x1, [sp, #24]
   499a4:	ldr	x0, [sp, #88]
   499a8:	bl	6f90 <__asan_backtrace_open@plt>
   499ac:	str	w0, [sp, #84]
   499b0:	ldr	x4, [sp, #16]
   499b4:	ldr	x3, [sp, #24]
   499b8:	ldr	x2, [sp, #96]
   499bc:	ldr	x1, [sp, #88]
   499c0:	ldr	x0, [sp, #72]
   499c4:	bl	6e00 <__asan_backtrace_free@plt>
   499c8:	ldr	w0, [sp, #84]
   499cc:	ldp	x29, x30, [sp], #112
   499d0:	ret
   499d4:	stp	x29, x30, [sp, #-176]!
   499d8:	mov	x29, sp
   499dc:	str	x19, [sp, #16]
   499e0:	str	x0, [sp, #72]
   499e4:	str	x1, [sp, #64]
   499e8:	str	x2, [sp, #56]
   499ec:	str	x3, [sp, #48]
   499f0:	str	x4, [sp, #40]
   499f4:	mov	w0, #0xffffffff            	// #-1
   499f8:	str	w0, [sp, #172]
   499fc:	str	xzr, [sp, #160]
   49a00:	str	xzr, [sp, #152]
   49a04:	b	49ba8 <__asan_internal_strnlen@@Base+0xf04>
   49a08:	add	x0, sp, #0x58
   49a0c:	mov	x4, x0
   49a10:	ldr	x3, [sp, #40]
   49a14:	ldr	x2, [sp, #48]
   49a18:	ldr	x1, [sp, #64]
   49a1c:	ldr	x0, [sp, #72]
   49a20:	bl	495b8 <__asan_internal_strnlen@@Base+0x914>
   49a24:	str	x0, [sp, #128]
   49a28:	ldr	x0, [sp, #128]
   49a2c:	cmp	x0, #0x0
   49a30:	b.eq	49bbc <__asan_internal_strnlen@@Base+0xf18>  // b.none
   49a34:	ldr	x0, [sp, #128]
   49a38:	ldrb	w0, [x0]
   49a3c:	cmp	w0, #0x2f
   49a40:	b.ne	49a50 <__asan_internal_strnlen@@Base+0xdac>  // b.any
   49a44:	ldr	x0, [sp, #128]
   49a48:	str	x0, [sp, #64]
   49a4c:	b	49b74 <__asan_internal_strnlen@@Base+0xed0>
   49a50:	mov	w1, #0x2f                  	// #47
   49a54:	ldr	x0, [sp, #64]
   49a58:	bl	6cf0 <strrchr@plt>
   49a5c:	str	x0, [sp, #120]
   49a60:	ldr	x0, [sp, #120]
   49a64:	cmp	x0, #0x0
   49a68:	b.ne	49a78 <__asan_internal_strnlen@@Base+0xdd4>  // b.any
   49a6c:	ldr	x0, [sp, #128]
   49a70:	str	x0, [sp, #64]
   49a74:	b	49b74 <__asan_internal_strnlen@@Base+0xed0>
   49a78:	ldr	x0, [sp, #120]
   49a7c:	add	x0, x0, #0x1
   49a80:	str	x0, [sp, #120]
   49a84:	ldr	x1, [sp, #120]
   49a88:	ldr	x0, [sp, #64]
   49a8c:	sub	x0, x1, x0
   49a90:	mov	x19, x0
   49a94:	ldr	x0, [sp, #128]
   49a98:	bl	6a20 <__asan_internal_strlen@plt>
   49a9c:	add	x0, x19, x0
   49aa0:	add	x0, x0, #0x1
   49aa4:	str	x0, [sp, #112]
   49aa8:	ldr	x3, [sp, #40]
   49aac:	ldr	x2, [sp, #48]
   49ab0:	ldr	x1, [sp, #112]
   49ab4:	ldr	x0, [sp, #72]
   49ab8:	bl	6b10 <__asan_backtrace_alloc@plt>
   49abc:	str	x0, [sp, #104]
   49ac0:	ldr	x0, [sp, #104]
   49ac4:	cmp	x0, #0x0
   49ac8:	b.eq	49cf8 <__asan_internal_strnlen@@Base+0x1054>  // b.none
   49acc:	ldr	x1, [sp, #120]
   49ad0:	ldr	x0, [sp, #64]
   49ad4:	sub	x0, x1, x0
   49ad8:	mov	x2, x0
   49adc:	ldr	x1, [sp, #64]
   49ae0:	ldr	x0, [sp, #104]
   49ae4:	bl	6a10 <__asan_internal_memcpy@plt>
   49ae8:	ldr	x1, [sp, #120]
   49aec:	ldr	x0, [sp, #64]
   49af0:	sub	x0, x1, x0
   49af4:	mov	x1, x0
   49af8:	ldr	x0, [sp, #104]
   49afc:	add	x19, x0, x1
   49b00:	ldr	x0, [sp, #128]
   49b04:	bl	6a20 <__asan_internal_strlen@plt>
   49b08:	mov	x2, x0
   49b0c:	ldr	x1, [sp, #128]
   49b10:	mov	x0, x19
   49b14:	bl	6a10 <__asan_internal_memcpy@plt>
   49b18:	ldr	x1, [sp, #120]
   49b1c:	ldr	x0, [sp, #64]
   49b20:	sub	x0, x1, x0
   49b24:	mov	x19, x0
   49b28:	ldr	x0, [sp, #128]
   49b2c:	bl	6a20 <__asan_internal_strlen@plt>
   49b30:	add	x0, x19, x0
   49b34:	ldr	x1, [sp, #104]
   49b38:	add	x0, x1, x0
   49b3c:	strb	wzr, [x0]
   49b40:	ldr	x0, [sp, #88]
   49b44:	ldr	x4, [sp, #40]
   49b48:	ldr	x3, [sp, #48]
   49b4c:	mov	x2, x0
   49b50:	ldr	x1, [sp, #128]
   49b54:	ldr	x0, [sp, #72]
   49b58:	bl	6e00 <__asan_backtrace_free@plt>
   49b5c:	ldr	x0, [sp, #104]
   49b60:	str	x0, [sp, #64]
   49b64:	ldr	x0, [sp, #104]
   49b68:	str	x0, [sp, #128]
   49b6c:	ldr	x0, [sp, #112]
   49b70:	str	x0, [sp, #88]
   49b74:	ldr	x0, [sp, #160]
   49b78:	cmp	x0, #0x0
   49b7c:	b.eq	49b98 <__asan_internal_strnlen@@Base+0xef4>  // b.none
   49b80:	ldr	x4, [sp, #40]
   49b84:	ldr	x3, [sp, #48]
   49b88:	ldr	x2, [sp, #152]
   49b8c:	ldr	x1, [sp, #160]
   49b90:	ldr	x0, [sp, #72]
   49b94:	bl	6e00 <__asan_backtrace_free@plt>
   49b98:	ldr	x0, [sp, #128]
   49b9c:	str	x0, [sp, #160]
   49ba0:	ldr	x0, [sp, #88]
   49ba4:	str	x0, [sp, #152]
   49ba8:	ldr	x0, [sp, #64]
   49bac:	bl	49570 <__asan_internal_strnlen@@Base+0x8cc>
   49bb0:	cmp	w0, #0x0
   49bb4:	b.ne	49a08 <__asan_internal_strnlen@@Base+0xd64>  // b.any
   49bb8:	b	49bc0 <__asan_internal_strnlen@@Base+0xf1c>
   49bbc:	nop
   49bc0:	mov	w1, #0x2f                  	// #47
   49bc4:	ldr	x0, [sp, #64]
   49bc8:	bl	6cf0 <strrchr@plt>
   49bcc:	str	x0, [sp, #120]
   49bd0:	ldr	x0, [sp, #120]
   49bd4:	cmp	x0, #0x0
   49bd8:	b.ne	49bf0 <__asan_internal_strnlen@@Base+0xf4c>  // b.any
   49bdc:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   49be0:	add	x0, x0, #0x528
   49be4:	str	x0, [sp, #144]
   49be8:	str	xzr, [sp, #136]
   49bec:	b	49c14 <__asan_internal_strnlen@@Base+0xf70>
   49bf0:	ldr	x0, [sp, #120]
   49bf4:	add	x0, x0, #0x1
   49bf8:	str	x0, [sp, #120]
   49bfc:	ldr	x0, [sp, #64]
   49c00:	str	x0, [sp, #144]
   49c04:	ldr	x1, [sp, #120]
   49c08:	ldr	x0, [sp, #64]
   49c0c:	sub	x0, x1, x0
   49c10:	str	x0, [sp, #136]
   49c14:	ldr	x7, [sp, #40]
   49c18:	ldr	x6, [sp, #48]
   49c1c:	ldr	x5, [sp, #56]
   49c20:	mov	x4, #0x0                   	// #0
   49c24:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   49c28:	add	x3, x0, #0x528
   49c2c:	ldr	x2, [sp, #136]
   49c30:	ldr	x1, [sp, #144]
   49c34:	ldr	x0, [sp, #72]
   49c38:	bl	498b0 <__asan_internal_strnlen@@Base+0xc0c>
   49c3c:	str	w0, [sp, #100]
   49c40:	ldr	w0, [sp, #100]
   49c44:	cmp	w0, #0x0
   49c48:	b.lt	49c58 <__asan_internal_strnlen@@Base+0xfb4>  // b.tstop
   49c4c:	ldr	w0, [sp, #100]
   49c50:	str	w0, [sp, #172]
   49c54:	b	49d04 <__asan_internal_strnlen@@Base+0x1060>
   49c58:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   49c5c:	add	x0, x0, #0x530
   49c60:	bl	6a20 <__asan_internal_strlen@plt>
   49c64:	ldr	x7, [sp, #40]
   49c68:	ldr	x6, [sp, #48]
   49c6c:	ldr	x5, [sp, #56]
   49c70:	mov	x4, x0
   49c74:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   49c78:	add	x3, x0, #0x530
   49c7c:	ldr	x2, [sp, #136]
   49c80:	ldr	x1, [sp, #144]
   49c84:	ldr	x0, [sp, #72]
   49c88:	bl	498b0 <__asan_internal_strnlen@@Base+0xc0c>
   49c8c:	str	w0, [sp, #100]
   49c90:	ldr	w0, [sp, #100]
   49c94:	cmp	w0, #0x0
   49c98:	b.lt	49ca8 <__asan_internal_strnlen@@Base+0x1004>  // b.tstop
   49c9c:	ldr	w0, [sp, #100]
   49ca0:	str	w0, [sp, #172]
   49ca4:	b	49d04 <__asan_internal_strnlen@@Base+0x1060>
   49ca8:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   49cac:	add	x0, x0, #0x538
   49cb0:	bl	6a20 <__asan_internal_strlen@plt>
   49cb4:	ldr	x7, [sp, #40]
   49cb8:	ldr	x6, [sp, #48]
   49cbc:	ldr	x5, [sp, #56]
   49cc0:	ldr	x4, [sp, #136]
   49cc4:	ldr	x3, [sp, #144]
   49cc8:	mov	x2, x0
   49ccc:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   49cd0:	add	x1, x0, #0x538
   49cd4:	ldr	x0, [sp, #72]
   49cd8:	bl	498b0 <__asan_internal_strnlen@@Base+0xc0c>
   49cdc:	str	w0, [sp, #100]
   49ce0:	ldr	w0, [sp, #100]
   49ce4:	cmp	w0, #0x0
   49ce8:	b.lt	49d00 <__asan_internal_strnlen@@Base+0x105c>  // b.tstop
   49cec:	ldr	w0, [sp, #100]
   49cf0:	str	w0, [sp, #172]
   49cf4:	b	49d04 <__asan_internal_strnlen@@Base+0x1060>
   49cf8:	nop
   49cfc:	b	49d04 <__asan_internal_strnlen@@Base+0x1060>
   49d00:	nop
   49d04:	ldr	x0, [sp, #160]
   49d08:	cmp	x0, #0x0
   49d0c:	b.eq	49d34 <__asan_internal_strnlen@@Base+0x1090>  // b.none
   49d10:	ldr	x0, [sp, #152]
   49d14:	cmp	x0, #0x0
   49d18:	b.eq	49d34 <__asan_internal_strnlen@@Base+0x1090>  // b.none
   49d1c:	ldr	x4, [sp, #40]
   49d20:	ldr	x3, [sp, #48]
   49d24:	ldr	x2, [sp, #152]
   49d28:	ldr	x1, [sp, #160]
   49d2c:	ldr	x0, [sp, #72]
   49d30:	bl	6e00 <__asan_backtrace_free@plt>
   49d34:	ldr	w0, [sp, #172]
   49d38:	ldr	x19, [sp, #16]
   49d3c:	ldp	x29, x30, [sp], #176
   49d40:	ret
   49d44:	stp	x29, x30, [sp, #-80]!
   49d48:	mov	x29, sp
   49d4c:	str	x0, [sp, #56]
   49d50:	str	x1, [sp, #48]
   49d54:	str	x2, [sp, #40]
   49d58:	str	w3, [sp, #36]
   49d5c:	str	x4, [sp, #24]
   49d60:	str	x5, [sp, #16]
   49d64:	ldr	x4, [sp, #16]
   49d68:	ldr	x3, [sp, #24]
   49d6c:	ldr	x2, [sp, #40]
   49d70:	ldr	x1, [sp, #48]
   49d74:	ldr	x0, [sp, #56]
   49d78:	bl	499d4 <__asan_internal_strnlen@@Base+0xd30>
   49d7c:	str	w0, [sp, #76]
   49d80:	ldr	w0, [sp, #76]
   49d84:	cmp	w0, #0x0
   49d88:	b.ge	49d94 <__asan_internal_strnlen@@Base+0x10f0>  // b.tcont
   49d8c:	mov	w0, #0xffffffff            	// #-1
   49d90:	b	49de4 <__asan_internal_strnlen@@Base+0x1140>
   49d94:	ldr	w0, [sp, #36]
   49d98:	cmp	w0, #0x0
   49d9c:	b.eq	49de0 <__asan_internal_strnlen@@Base+0x113c>  // b.none
   49da0:	ldr	x3, [sp, #16]
   49da4:	ldr	x2, [sp, #24]
   49da8:	ldr	w1, [sp, #76]
   49dac:	ldr	x0, [sp, #56]
   49db0:	bl	48d5c <__asan_internal_strnlen@@Base+0xb8>
   49db4:	str	w0, [sp, #72]
   49db8:	ldr	w1, [sp, #72]
   49dbc:	ldr	w0, [sp, #36]
   49dc0:	cmp	w1, w0
   49dc4:	b.eq	49de0 <__asan_internal_strnlen@@Base+0x113c>  // b.none
   49dc8:	ldr	x2, [sp, #16]
   49dcc:	ldr	x1, [sp, #24]
   49dd0:	ldr	w0, [sp, #76]
   49dd4:	bl	6ee0 <__asan_backtrace_close@plt>
   49dd8:	mov	w0, #0xffffffff            	// #-1
   49ddc:	b	49de4 <__asan_internal_strnlen@@Base+0x1140>
   49de0:	ldr	w0, [sp, #76]
   49de4:	ldp	x29, x30, [sp], #80
   49de8:	ret
   49dec:	nop
   49df0:	ret
   49df4:	stp	x29, x30, [sp, #-80]!
   49df8:	mov	x29, sp
   49dfc:	str	x0, [sp, #40]
   49e00:	str	x1, [sp, #32]
   49e04:	str	x2, [sp, #24]
   49e08:	str	x3, [sp, #16]
   49e0c:	ldr	x0, [sp, #16]
   49e10:	ldr	w0, [x0]
   49e14:	str	w0, [sp, #76]
   49e18:	ldr	w0, [sp, #76]
   49e1c:	cmp	w0, #0xe
   49e20:	b.ls	49e2c <__asan_internal_strnlen@@Base+0x1188>  // b.plast
   49e24:	mov	w0, #0x1                   	// #1
   49e28:	b	49ee0 <__asan_internal_strnlen@@Base+0x123c>
   49e2c:	ldr	x0, [sp, #40]
   49e30:	ldr	x0, [x0]
   49e34:	str	x0, [sp, #64]
   49e38:	ldr	x0, [sp, #24]
   49e3c:	ldr	x0, [x0]
   49e40:	str	x0, [sp, #56]
   49e44:	ldr	x1, [sp, #32]
   49e48:	ldr	x0, [sp, #64]
   49e4c:	sub	x0, x1, x0
   49e50:	cmp	x0, #0x3
   49e54:	cset	w0, le
   49e58:	and	w0, w0, #0xff
   49e5c:	and	x0, x0, #0xff
   49e60:	cmp	x0, #0x0
   49e64:	b.eq	49e74 <__asan_internal_strnlen@@Base+0x11d0>  // b.none
   49e68:	bl	49dec <__asan_internal_strnlen@@Base+0x1148>
   49e6c:	mov	w0, #0x0                   	// #0
   49e70:	b	49ee0 <__asan_internal_strnlen@@Base+0x123c>
   49e74:	ldr	x0, [sp, #64]
   49e78:	ldr	w0, [x0]
   49e7c:	str	w0, [sp, #52]
   49e80:	ldr	w1, [sp, #52]
   49e84:	ldr	w0, [sp, #76]
   49e88:	lsl	x0, x1, x0
   49e8c:	ldr	x1, [sp, #56]
   49e90:	orr	x0, x1, x0
   49e94:	str	x0, [sp, #56]
   49e98:	ldr	w0, [sp, #76]
   49e9c:	add	w0, w0, #0x20
   49ea0:	str	w0, [sp, #76]
   49ea4:	ldr	x0, [sp, #64]
   49ea8:	add	x0, x0, #0x4
   49eac:	str	x0, [sp, #64]
   49eb0:	ldr	x0, [sp, #64]
   49eb4:	prfm	pldl1strm, [x0]
   49eb8:	ldr	x0, [sp, #40]
   49ebc:	ldr	x1, [sp, #64]
   49ec0:	str	x1, [x0]
   49ec4:	ldr	x0, [sp, #24]
   49ec8:	ldr	x1, [sp, #56]
   49ecc:	str	x1, [x0]
   49ed0:	ldr	x0, [sp, #16]
   49ed4:	ldr	w1, [sp, #76]
   49ed8:	str	w1, [x0]
   49edc:	mov	w0, #0x1                   	// #1
   49ee0:	ldp	x29, x30, [sp], #80
   49ee4:	ret
   49ee8:	stp	x29, x30, [sp, #-304]!
   49eec:	mov	x29, sp
   49ef0:	str	x0, [sp, #40]
   49ef4:	str	x1, [sp, #32]
   49ef8:	str	x2, [sp, #24]
   49efc:	str	x3, [sp, #16]
   49f00:	ldr	x0, [sp, #24]
   49f04:	add	x0, x0, #0x1, lsl #12
   49f08:	str	x0, [sp, #184]
   49f0c:	add	x0, sp, #0x88
   49f10:	mov	x2, #0x20                  	// #32
   49f14:	mov	w1, #0x0                   	// #0
   49f18:	bl	6ab0 <__asan_internal_memset@plt>
   49f1c:	str	xzr, [sp, #296]
   49f20:	b	4a08c <__asan_internal_strnlen@@Base+0x13e8>
   49f24:	ldr	x1, [sp, #40]
   49f28:	ldr	x0, [sp, #296]
   49f2c:	add	x0, x1, x0
   49f30:	ldrb	w0, [x0]
   49f34:	cmp	w0, #0xf
   49f38:	cset	w0, hi  // hi = pmore
   49f3c:	and	w0, w0, #0xff
   49f40:	and	x0, x0, #0xff
   49f44:	cmp	x0, #0x0
   49f48:	b.eq	49f58 <__asan_internal_strnlen@@Base+0x12b4>  // b.none
   49f4c:	bl	49dec <__asan_internal_strnlen@@Base+0x1148>
   49f50:	mov	w0, #0x0                   	// #0
   49f54:	b	4a800 <__asan_internal_strnlen@@Base+0x1b5c>
   49f58:	ldr	x1, [sp, #40]
   49f5c:	ldr	x0, [sp, #296]
   49f60:	add	x0, x1, x0
   49f64:	ldrb	w0, [x0]
   49f68:	sxtw	x0, w0
   49f6c:	lsl	x0, x0, #1
   49f70:	add	x1, sp, #0x88
   49f74:	ldrh	w0, [x1, x0]
   49f78:	cmp	w0, #0x0
   49f7c:	b.ne	49fdc <__asan_internal_strnlen@@Base+0x1338>  // b.any
   49f80:	ldr	x1, [sp, #40]
   49f84:	ldr	x0, [sp, #296]
   49f88:	add	x0, x1, x0
   49f8c:	ldrb	w0, [x0]
   49f90:	mov	w1, w0
   49f94:	ldr	x0, [sp, #296]
   49f98:	and	w2, w0, #0xffff
   49f9c:	sxtw	x0, w1
   49fa0:	lsl	x0, x0, #1
   49fa4:	add	x1, sp, #0x68
   49fa8:	strh	w2, [x1, x0]
   49fac:	ldr	x1, [sp, #40]
   49fb0:	ldr	x0, [sp, #296]
   49fb4:	add	x0, x1, x0
   49fb8:	ldrb	w0, [x0]
   49fbc:	mov	w1, w0
   49fc0:	ldr	x0, [sp, #296]
   49fc4:	and	w2, w0, #0xffff
   49fc8:	sxtw	x0, w1
   49fcc:	lsl	x0, x0, #1
   49fd0:	add	x1, sp, #0x48
   49fd4:	strh	w2, [x1, x0]
   49fd8:	b	4a044 <__asan_internal_strnlen@@Base+0x13a0>
   49fdc:	ldr	x1, [sp, #40]
   49fe0:	ldr	x0, [sp, #296]
   49fe4:	add	x0, x1, x0
   49fe8:	ldrb	w0, [x0]
   49fec:	sxtw	x0, w0
   49ff0:	lsl	x0, x0, #1
   49ff4:	add	x1, sp, #0x48
   49ff8:	ldrh	w0, [x1, x0]
   49ffc:	and	x0, x0, #0xffff
   4a000:	lsl	x0, x0, #1
   4a004:	ldr	x1, [sp, #184]
   4a008:	add	x0, x1, x0
   4a00c:	ldr	x1, [sp, #296]
   4a010:	and	w1, w1, #0xffff
   4a014:	strh	w1, [x0]
   4a018:	ldr	x1, [sp, #40]
   4a01c:	ldr	x0, [sp, #296]
   4a020:	add	x0, x1, x0
   4a024:	ldrb	w0, [x0]
   4a028:	mov	w1, w0
   4a02c:	ldr	x0, [sp, #296]
   4a030:	and	w2, w0, #0xffff
   4a034:	sxtw	x0, w1
   4a038:	lsl	x0, x0, #1
   4a03c:	add	x1, sp, #0x48
   4a040:	strh	w2, [x1, x0]
   4a044:	ldr	x1, [sp, #40]
   4a048:	ldr	x0, [sp, #296]
   4a04c:	add	x0, x1, x0
   4a050:	ldrb	w0, [x0]
   4a054:	mov	w3, w0
   4a058:	sxtw	x0, w3
   4a05c:	lsl	x0, x0, #1
   4a060:	add	x1, sp, #0x88
   4a064:	ldrh	w0, [x1, x0]
   4a068:	add	w0, w0, #0x1
   4a06c:	and	w2, w0, #0xffff
   4a070:	sxtw	x0, w3
   4a074:	lsl	x0, x0, #1
   4a078:	add	x1, sp, #0x88
   4a07c:	strh	w2, [x1, x0]
   4a080:	ldr	x0, [sp, #296]
   4a084:	add	x0, x0, #0x1
   4a088:	str	x0, [sp, #296]
   4a08c:	ldr	x1, [sp, #296]
   4a090:	ldr	x0, [sp, #32]
   4a094:	cmp	x1, x0
   4a098:	b.cc	49f24 <__asan_internal_strnlen@@Base+0x1280>  // b.lo, b.ul, b.last
   4a09c:	mov	x2, #0x800                 	// #2048
   4a0a0:	mov	w1, #0x0                   	// #0
   4a0a4:	ldr	x0, [sp, #16]
   4a0a8:	bl	6ab0 <__asan_internal_memset@plt>
   4a0ac:	str	wzr, [sp, #284]
   4a0b0:	mov	x0, #0x1                   	// #1
   4a0b4:	str	x0, [sp, #288]
   4a0b8:	b	4a2d8 <__asan_internal_strnlen@@Base+0x1634>
   4a0bc:	ldr	x0, [sp, #288]
   4a0c0:	lsl	x0, x0, #1
   4a0c4:	add	x1, sp, #0x88
   4a0c8:	ldrh	w0, [x1, x0]
   4a0cc:	str	w0, [sp, #172]
   4a0d0:	ldr	w0, [sp, #172]
   4a0d4:	cmp	w0, #0x0
   4a0d8:	b.eq	4a2c8 <__asan_internal_strnlen@@Base+0x1624>  // b.none
   4a0dc:	ldr	x0, [sp, #288]
   4a0e0:	mov	w1, w0
   4a0e4:	mov	w0, #0x1                   	// #1
   4a0e8:	lsl	w0, w0, w1
   4a0ec:	ldr	w1, [sp, #172]
   4a0f0:	cmp	w1, w0
   4a0f4:	cset	w0, hi  // hi = pmore
   4a0f8:	and	w0, w0, #0xff
   4a0fc:	and	x0, x0, #0xff
   4a100:	cmp	x0, #0x0
   4a104:	b.eq	4a114 <__asan_internal_strnlen@@Base+0x1470>  // b.none
   4a108:	bl	49dec <__asan_internal_strnlen@@Base+0x1148>
   4a10c:	mov	w0, #0x0                   	// #0
   4a110:	b	4a800 <__asan_internal_strnlen@@Base+0x1b5c>
   4a114:	ldr	x0, [sp, #288]
   4a118:	lsl	x0, x0, #1
   4a11c:	add	x1, sp, #0x68
   4a120:	ldrh	w0, [x1, x0]
   4a124:	str	w0, [sp, #268]
   4a128:	str	xzr, [sp, #296]
   4a12c:	b	4a2b4 <__asan_internal_strnlen@@Base+0x1610>
   4a130:	ldr	w0, [sp, #268]
   4a134:	and	w0, w0, #0xfffffe00
   4a138:	cmp	w0, #0x0
   4a13c:	cset	w0, ne  // ne = any
   4a140:	and	w0, w0, #0xff
   4a144:	and	x0, x0, #0xff
   4a148:	cmp	x0, #0x0
   4a14c:	b.eq	4a15c <__asan_internal_strnlen@@Base+0x14b8>  // b.none
   4a150:	bl	49dec <__asan_internal_strnlen@@Base+0x1148>
   4a154:	mov	w0, #0x0                   	// #0
   4a158:	b	4a800 <__asan_internal_strnlen@@Base+0x1b5c>
   4a15c:	ldr	w0, [sp, #268]
   4a160:	and	w1, w0, #0xffff
   4a164:	ldr	x0, [sp, #288]
   4a168:	and	w0, w0, #0xffff
   4a16c:	sub	w0, w0, #0x1
   4a170:	and	w0, w0, #0xffff
   4a174:	ubfiz	w0, w0, #9, #7
   4a178:	and	w0, w0, #0xffff
   4a17c:	orr	w0, w1, w0
   4a180:	strh	w0, [sp, #170]
   4a184:	ldr	w0, [sp, #284]
   4a188:	str	x0, [sp, #256]
   4a18c:	b	4a200 <__asan_internal_strnlen@@Base+0x155c>
   4a190:	ldr	x0, [sp, #256]
   4a194:	lsl	x0, x0, #1
   4a198:	ldr	x1, [sp, #16]
   4a19c:	add	x0, x1, x0
   4a1a0:	ldrh	w0, [x0]
   4a1a4:	cmp	w0, #0x0
   4a1a8:	cset	w0, ne  // ne = any
   4a1ac:	and	w0, w0, #0xff
   4a1b0:	and	x0, x0, #0xff
   4a1b4:	cmp	x0, #0x0
   4a1b8:	b.eq	4a1c8 <__asan_internal_strnlen@@Base+0x1524>  // b.none
   4a1bc:	bl	49dec <__asan_internal_strnlen@@Base+0x1148>
   4a1c0:	mov	w0, #0x0                   	// #0
   4a1c4:	b	4a800 <__asan_internal_strnlen@@Base+0x1b5c>
   4a1c8:	ldr	x0, [sp, #256]
   4a1cc:	lsl	x0, x0, #1
   4a1d0:	ldr	x1, [sp, #16]
   4a1d4:	add	x0, x1, x0
   4a1d8:	ldrh	w1, [sp, #170]
   4a1dc:	strh	w1, [x0]
   4a1e0:	ldr	x0, [sp, #288]
   4a1e4:	mov	w1, w0
   4a1e8:	mov	w0, #0x1                   	// #1
   4a1ec:	lsl	w0, w0, w1
   4a1f0:	sxtw	x0, w0
   4a1f4:	ldr	x1, [sp, #256]
   4a1f8:	add	x0, x1, x0
   4a1fc:	str	x0, [sp, #256]
   4a200:	ldr	x0, [sp, #256]
   4a204:	cmp	x0, #0xff
   4a208:	b.ls	4a190 <__asan_internal_strnlen@@Base+0x14ec>  // b.plast
   4a20c:	ldr	x0, [sp, #296]
   4a210:	add	x1, x0, #0x1
   4a214:	ldr	w0, [sp, #172]
   4a218:	cmp	x1, x0
   4a21c:	b.cs	4a238 <__asan_internal_strnlen@@Base+0x1594>  // b.hs, b.nlast
   4a220:	ldr	w0, [sp, #268]
   4a224:	lsl	x0, x0, #1
   4a228:	ldr	x1, [sp, #184]
   4a22c:	add	x0, x1, x0
   4a230:	ldrh	w0, [x0]
   4a234:	str	w0, [sp, #268]
   4a238:	ldr	x0, [sp, #288]
   4a23c:	sub	w0, w0, #0x1
   4a240:	mov	w1, #0x1                   	// #1
   4a244:	lsl	w0, w1, w0
   4a248:	str	w0, [sp, #252]
   4a24c:	b	4a25c <__asan_internal_strnlen@@Base+0x15b8>
   4a250:	ldr	w0, [sp, #252]
   4a254:	lsr	w0, w0, #1
   4a258:	str	w0, [sp, #252]
   4a25c:	ldr	w1, [sp, #284]
   4a260:	ldr	w0, [sp, #252]
   4a264:	and	w0, w1, w0
   4a268:	cmp	w0, #0x0
   4a26c:	b.ne	4a250 <__asan_internal_strnlen@@Base+0x15ac>  // b.any
   4a270:	ldr	w0, [sp, #252]
   4a274:	cmp	w0, #0x0
   4a278:	b.ne	4a284 <__asan_internal_strnlen@@Base+0x15e0>  // b.any
   4a27c:	str	wzr, [sp, #284]
   4a280:	b	4a2a8 <__asan_internal_strnlen@@Base+0x1604>
   4a284:	ldr	w0, [sp, #252]
   4a288:	sub	w0, w0, #0x1
   4a28c:	ldr	w1, [sp, #284]
   4a290:	and	w0, w1, w0
   4a294:	str	w0, [sp, #284]
   4a298:	ldr	w1, [sp, #284]
   4a29c:	ldr	w0, [sp, #252]
   4a2a0:	add	w0, w1, w0
   4a2a4:	str	w0, [sp, #284]
   4a2a8:	ldr	x0, [sp, #296]
   4a2ac:	add	x0, x0, #0x1
   4a2b0:	str	x0, [sp, #296]
   4a2b4:	ldr	w0, [sp, #172]
   4a2b8:	ldr	x1, [sp, #296]
   4a2bc:	cmp	x1, x0
   4a2c0:	b.cc	4a130 <__asan_internal_strnlen@@Base+0x148c>  // b.lo, b.ul, b.last
   4a2c4:	b	4a2cc <__asan_internal_strnlen@@Base+0x1628>
   4a2c8:	nop
   4a2cc:	ldr	x0, [sp, #288]
   4a2d0:	add	x0, x0, #0x1
   4a2d4:	str	x0, [sp, #288]
   4a2d8:	ldr	x0, [sp, #288]
   4a2dc:	cmp	x0, #0x8
   4a2e0:	b.ls	4a0bc <__asan_internal_strnlen@@Base+0x1418>  // b.plast
   4a2e4:	mov	x0, #0x9                   	// #9
   4a2e8:	str	x0, [sp, #288]
   4a2ec:	b	4a450 <__asan_internal_strnlen@@Base+0x17ac>
   4a2f0:	ldr	x0, [sp, #288]
   4a2f4:	lsl	x0, x0, #1
   4a2f8:	add	x1, sp, #0x88
   4a2fc:	ldrh	w0, [x1, x0]
   4a300:	str	w0, [sp, #248]
   4a304:	ldr	w0, [sp, #248]
   4a308:	cmp	w0, #0x0
   4a30c:	b.eq	4a440 <__asan_internal_strnlen@@Base+0x179c>  // b.none
   4a310:	ldr	x0, [sp, #288]
   4a314:	sub	x0, x0, #0x9
   4a318:	ldr	w1, [sp, #284]
   4a31c:	and	w2, w1, #0xffff
   4a320:	lsl	x0, x0, #1
   4a324:	add	x1, sp, #0x38
   4a328:	strh	w2, [x1, x0]
   4a32c:	str	wzr, [sp, #244]
   4a330:	b	4a408 <__asan_internal_strnlen@@Base+0x1764>
   4a334:	ldr	w0, [sp, #244]
   4a338:	ldr	w1, [sp, #248]
   4a33c:	lsr	w0, w1, w0
   4a340:	and	w0, w0, #0x1
   4a344:	cmp	w0, #0x0
   4a348:	b.eq	4a3fc <__asan_internal_strnlen@@Base+0x1758>  // b.none
   4a34c:	ldr	x0, [sp, #288]
   4a350:	mov	w1, w0
   4a354:	ldr	w0, [sp, #244]
   4a358:	sub	w0, w1, w0
   4a35c:	sub	w0, w0, #0x1
   4a360:	mov	w1, #0x1                   	// #1
   4a364:	lsl	w0, w1, w0
   4a368:	str	w0, [sp, #236]
   4a36c:	str	wzr, [sp, #240]
   4a370:	b	4a3c8 <__asan_internal_strnlen@@Base+0x1724>
   4a374:	ldr	w1, [sp, #284]
   4a378:	ldr	w0, [sp, #236]
   4a37c:	and	w0, w1, w0
   4a380:	cmp	w0, #0x0
   4a384:	b.ne	4a39c <__asan_internal_strnlen@@Base+0x16f8>  // b.any
   4a388:	ldr	w1, [sp, #284]
   4a38c:	ldr	w0, [sp, #236]
   4a390:	add	w0, w1, w0
   4a394:	str	w0, [sp, #284]
   4a398:	b	4a3e0 <__asan_internal_strnlen@@Base+0x173c>
   4a39c:	ldr	w0, [sp, #236]
   4a3a0:	mvn	w0, w0
   4a3a4:	ldr	w1, [sp, #284]
   4a3a8:	and	w0, w1, w0
   4a3ac:	str	w0, [sp, #284]
   4a3b0:	ldr	w0, [sp, #240]
   4a3b4:	add	w0, w0, #0x1
   4a3b8:	str	w0, [sp, #240]
   4a3bc:	ldr	w0, [sp, #236]
   4a3c0:	lsr	w0, w0, #1
   4a3c4:	str	w0, [sp, #236]
   4a3c8:	ldr	w1, [sp, #240]
   4a3cc:	ldr	w0, [sp, #244]
   4a3d0:	ldr	x2, [sp, #288]
   4a3d4:	sub	x0, x2, x0
   4a3d8:	cmp	x1, x0
   4a3dc:	b.cc	4a374 <__asan_internal_strnlen@@Base+0x16d0>  // b.lo, b.ul, b.last
   4a3e0:	ldr	w0, [sp, #244]
   4a3e4:	mov	w1, #0x1                   	// #1
   4a3e8:	lsl	w0, w1, w0
   4a3ec:	mvn	w0, w0
   4a3f0:	ldr	w1, [sp, #248]
   4a3f4:	and	w0, w1, w0
   4a3f8:	str	w0, [sp, #248]
   4a3fc:	ldr	w0, [sp, #244]
   4a400:	add	w0, w0, #0x1
   4a404:	str	w0, [sp, #244]
   4a408:	ldr	w0, [sp, #244]
   4a40c:	ldr	x1, [sp, #288]
   4a410:	cmp	x1, x0
   4a414:	b.hi	4a334 <__asan_internal_strnlen@@Base+0x1690>  // b.pmore
   4a418:	ldr	w0, [sp, #248]
   4a41c:	cmp	w0, #0x0
   4a420:	cset	w0, ne  // ne = any
   4a424:	and	w0, w0, #0xff
   4a428:	and	x0, x0, #0xff
   4a42c:	cmp	x0, #0x0
   4a430:	b.eq	4a444 <__asan_internal_strnlen@@Base+0x17a0>  // b.none
   4a434:	bl	49dec <__asan_internal_strnlen@@Base+0x1148>
   4a438:	mov	w0, #0x0                   	// #0
   4a43c:	b	4a800 <__asan_internal_strnlen@@Base+0x1b5c>
   4a440:	nop
   4a444:	ldr	x0, [sp, #288]
   4a448:	add	x0, x0, #0x1
   4a44c:	str	x0, [sp, #288]
   4a450:	ldr	x0, [sp, #288]
   4a454:	cmp	x0, #0xf
   4a458:	b.ls	4a2f0 <__asan_internal_strnlen@@Base+0x164c>  // b.plast
   4a45c:	str	xzr, [sp, #272]
   4a460:	mov	x0, #0xf                   	// #15
   4a464:	str	x0, [sp, #288]
   4a468:	b	4a7f0 <__asan_internal_strnlen@@Base+0x1b4c>
   4a46c:	ldr	x0, [sp, #288]
   4a470:	lsl	x0, x0, #1
   4a474:	add	x1, sp, #0x88
   4a478:	ldrh	w0, [x1, x0]
   4a47c:	str	w0, [sp, #180]
   4a480:	ldr	w0, [sp, #180]
   4a484:	cmp	w0, #0x0
   4a488:	b.eq	4a7e0 <__asan_internal_strnlen@@Base+0x1b3c>  // b.none
   4a48c:	ldr	x0, [sp, #288]
   4a490:	lsl	x0, x0, #1
   4a494:	add	x1, sp, #0x68
   4a498:	ldrh	w0, [x1, x0]
   4a49c:	str	w0, [sp, #232]
   4a4a0:	ldr	x0, [sp, #288]
   4a4a4:	sub	x0, x0, #0x9
   4a4a8:	lsl	x0, x0, #1
   4a4ac:	add	x1, sp, #0x38
   4a4b0:	ldrh	w0, [x1, x0]
   4a4b4:	str	w0, [sp, #284]
   4a4b8:	mov	x0, #0x100                 	// #256
   4a4bc:	str	x0, [sp, #224]
   4a4c0:	str	xzr, [sp, #216]
   4a4c4:	str	xzr, [sp, #208]
   4a4c8:	str	xzr, [sp, #296]
   4a4cc:	b	4a7cc <__asan_internal_strnlen@@Base+0x1b28>
   4a4d0:	ldr	w0, [sp, #284]
   4a4d4:	and	x0, x0, #0xff
   4a4d8:	ldr	x1, [sp, #224]
   4a4dc:	cmp	x1, x0
   4a4e0:	b.eq	4a640 <__asan_internal_strnlen@@Base+0x199c>  // b.none
   4a4e4:	ldr	w0, [sp, #284]
   4a4e8:	and	x0, x0, #0xff
   4a4ec:	str	x0, [sp, #224]
   4a4f0:	ldr	x0, [sp, #224]
   4a4f4:	lsl	x0, x0, #1
   4a4f8:	ldr	x1, [sp, #16]
   4a4fc:	add	x0, x1, x0
   4a500:	ldrh	w0, [x0]
   4a504:	strh	w0, [sp, #178]
   4a508:	ldrh	w0, [sp, #178]
   4a50c:	cmp	w0, #0x0
   4a510:	b.ne	4a5c0 <__asan_internal_strnlen@@Base+0x191c>  // b.any
   4a514:	ldr	x0, [sp, #272]
   4a518:	and	x0, x0, #0x1ff
   4a51c:	ldr	x1, [sp, #272]
   4a520:	cmp	x1, x0
   4a524:	cset	w0, ne  // ne = any
   4a528:	and	w0, w0, #0xff
   4a52c:	and	x0, x0, #0xff
   4a530:	cmp	x0, #0x0
   4a534:	b.eq	4a544 <__asan_internal_strnlen@@Base+0x18a0>  // b.none
   4a538:	bl	49dec <__asan_internal_strnlen@@Base+0x1148>
   4a53c:	mov	w0, #0x0                   	// #0
   4a540:	b	4a800 <__asan_internal_strnlen@@Base+0x1b5c>
   4a544:	ldr	x0, [sp, #272]
   4a548:	str	x0, [sp, #216]
   4a54c:	ldr	x0, [sp, #288]
   4a550:	sub	x0, x0, #0x8
   4a554:	str	x0, [sp, #208]
   4a558:	ldr	x0, [sp, #208]
   4a55c:	mov	w1, w0
   4a560:	mov	w0, #0x1                   	// #1
   4a564:	lsl	w0, w0, w1
   4a568:	sxtw	x0, w0
   4a56c:	ldr	x1, [sp, #272]
   4a570:	add	x0, x1, x0
   4a574:	str	x0, [sp, #272]
   4a578:	ldr	x0, [sp, #288]
   4a57c:	and	w0, w0, #0xffff
   4a580:	sub	w0, w0, #0x8
   4a584:	and	w0, w0, #0xffff
   4a588:	ubfiz	w0, w0, #9, #7
   4a58c:	and	w1, w0, #0xffff
   4a590:	ldr	x0, [sp, #216]
   4a594:	and	w0, w0, #0xffff
   4a598:	add	w0, w1, w0
   4a59c:	and	w1, w0, #0xffff
   4a5a0:	ldr	x0, [sp, #224]
   4a5a4:	lsl	x0, x0, #1
   4a5a8:	ldr	x2, [sp, #16]
   4a5ac:	add	x0, x2, x0
   4a5b0:	add	w1, w1, #0x1, lsl #12
   4a5b4:	and	w1, w1, #0xffff
   4a5b8:	strh	w1, [x0]
   4a5bc:	b	4a640 <__asan_internal_strnlen@@Base+0x199c>
   4a5c0:	ldrh	w0, [sp, #178]
   4a5c4:	and	w0, w0, #0x1000
   4a5c8:	cmp	w0, #0x0
   4a5cc:	cset	w0, eq  // eq = none
   4a5d0:	and	w0, w0, #0xff
   4a5d4:	and	x0, x0, #0xff
   4a5d8:	cmp	x0, #0x0
   4a5dc:	b.eq	4a5ec <__asan_internal_strnlen@@Base+0x1948>  // b.none
   4a5e0:	bl	49dec <__asan_internal_strnlen@@Base+0x1148>
   4a5e4:	mov	w0, #0x0                   	// #0
   4a5e8:	b	4a800 <__asan_internal_strnlen@@Base+0x1b5c>
   4a5ec:	ldrh	w0, [sp, #178]
   4a5f0:	and	x0, x0, #0x1ff
   4a5f4:	str	x0, [sp, #216]
   4a5f8:	ldrh	w0, [sp, #178]
   4a5fc:	lsr	w0, w0, #9
   4a600:	and	w0, w0, #0xffff
   4a604:	and	x0, x0, #0xffff
   4a608:	and	x0, x0, #0x7
   4a60c:	str	x0, [sp, #208]
   4a610:	ldr	x0, [sp, #288]
   4a614:	sub	x0, x0, #0x8
   4a618:	ldr	x1, [sp, #208]
   4a61c:	cmp	x1, x0
   4a620:	cset	w0, cc  // cc = lo, ul, last
   4a624:	and	w0, w0, #0xff
   4a628:	and	x0, x0, #0xff
   4a62c:	cmp	x0, #0x0
   4a630:	b.eq	4a640 <__asan_internal_strnlen@@Base+0x199c>  // b.none
   4a634:	bl	49dec <__asan_internal_strnlen@@Base+0x1148>
   4a638:	mov	w0, #0x0                   	// #0
   4a63c:	b	4a800 <__asan_internal_strnlen@@Base+0x1b5c>
   4a640:	ldr	w0, [sp, #232]
   4a644:	and	w1, w0, #0xffff
   4a648:	ldr	x0, [sp, #288]
   4a64c:	and	w0, w0, #0xffff
   4a650:	sub	w0, w0, #0x8
   4a654:	and	w0, w0, #0xffff
   4a658:	ubfiz	w0, w0, #9, #7
   4a65c:	and	w0, w0, #0xffff
   4a660:	orr	w0, w1, w0
   4a664:	strh	w0, [sp, #176]
   4a668:	ldr	w0, [sp, #284]
   4a66c:	lsr	w0, w0, #8
   4a670:	mov	w0, w0
   4a674:	str	x0, [sp, #200]
   4a678:	b	4a704 <__asan_internal_strnlen@@Base+0x1a60>
   4a67c:	ldr	x1, [sp, #216]
   4a680:	ldr	x0, [sp, #200]
   4a684:	add	x0, x1, x0
   4a688:	add	x0, x0, #0x100
   4a68c:	lsl	x0, x0, #1
   4a690:	ldr	x1, [sp, #16]
   4a694:	add	x0, x1, x0
   4a698:	ldrh	w0, [x0]
   4a69c:	cmp	w0, #0x0
   4a6a0:	cset	w0, ne  // ne = any
   4a6a4:	and	w0, w0, #0xff
   4a6a8:	and	x0, x0, #0xff
   4a6ac:	cmp	x0, #0x0
   4a6b0:	b.eq	4a6c0 <__asan_internal_strnlen@@Base+0x1a1c>  // b.none
   4a6b4:	bl	49dec <__asan_internal_strnlen@@Base+0x1148>
   4a6b8:	mov	w0, #0x0                   	// #0
   4a6bc:	b	4a800 <__asan_internal_strnlen@@Base+0x1b5c>
   4a6c0:	ldr	x1, [sp, #216]
   4a6c4:	ldr	x0, [sp, #200]
   4a6c8:	add	x0, x1, x0
   4a6cc:	add	x0, x0, #0x100
   4a6d0:	lsl	x0, x0, #1
   4a6d4:	ldr	x1, [sp, #16]
   4a6d8:	add	x0, x1, x0
   4a6dc:	ldrh	w1, [sp, #176]
   4a6e0:	strh	w1, [x0]
   4a6e4:	ldr	x0, [sp, #288]
   4a6e8:	sub	w0, w0, #0x8
   4a6ec:	mov	w1, #0x1                   	// #1
   4a6f0:	lsl	w0, w1, w0
   4a6f4:	mov	w0, w0
   4a6f8:	ldr	x1, [sp, #200]
   4a6fc:	add	x0, x1, x0
   4a700:	str	x0, [sp, #200]
   4a704:	ldr	x0, [sp, #208]
   4a708:	mov	w1, w0
   4a70c:	mov	w0, #0x1                   	// #1
   4a710:	lsl	w0, w0, w1
   4a714:	mov	w0, w0
   4a718:	ldr	x1, [sp, #200]
   4a71c:	cmp	x1, x0
   4a720:	b.cc	4a67c <__asan_internal_strnlen@@Base+0x19d8>  // b.lo, b.ul, b.last
   4a724:	ldr	x0, [sp, #296]
   4a728:	add	x1, x0, #0x1
   4a72c:	ldr	w0, [sp, #180]
   4a730:	cmp	x1, x0
   4a734:	b.cs	4a750 <__asan_internal_strnlen@@Base+0x1aac>  // b.hs, b.nlast
   4a738:	ldr	w0, [sp, #232]
   4a73c:	lsl	x0, x0, #1
   4a740:	ldr	x1, [sp, #184]
   4a744:	add	x0, x1, x0
   4a748:	ldrh	w0, [x0]
   4a74c:	str	w0, [sp, #232]
   4a750:	ldr	x0, [sp, #288]
   4a754:	sub	w0, w0, #0x1
   4a758:	mov	w1, #0x1                   	// #1
   4a75c:	lsl	w0, w1, w0
   4a760:	str	w0, [sp, #196]
   4a764:	b	4a774 <__asan_internal_strnlen@@Base+0x1ad0>
   4a768:	ldr	w0, [sp, #196]
   4a76c:	lsr	w0, w0, #1
   4a770:	str	w0, [sp, #196]
   4a774:	ldr	w1, [sp, #284]
   4a778:	ldr	w0, [sp, #196]
   4a77c:	and	w0, w1, w0
   4a780:	cmp	w0, #0x0
   4a784:	b.ne	4a768 <__asan_internal_strnlen@@Base+0x1ac4>  // b.any
   4a788:	ldr	w0, [sp, #196]
   4a78c:	cmp	w0, #0x0
   4a790:	b.ne	4a79c <__asan_internal_strnlen@@Base+0x1af8>  // b.any
   4a794:	str	wzr, [sp, #284]
   4a798:	b	4a7c0 <__asan_internal_strnlen@@Base+0x1b1c>
   4a79c:	ldr	w0, [sp, #196]
   4a7a0:	sub	w0, w0, #0x1
   4a7a4:	ldr	w1, [sp, #284]
   4a7a8:	and	w0, w1, w0
   4a7ac:	str	w0, [sp, #284]
   4a7b0:	ldr	w1, [sp, #284]
   4a7b4:	ldr	w0, [sp, #196]
   4a7b8:	add	w0, w1, w0
   4a7bc:	str	w0, [sp, #284]
   4a7c0:	ldr	x0, [sp, #296]
   4a7c4:	add	x0, x0, #0x1
   4a7c8:	str	x0, [sp, #296]
   4a7cc:	ldr	w0, [sp, #180]
   4a7d0:	ldr	x1, [sp, #296]
   4a7d4:	cmp	x1, x0
   4a7d8:	b.cc	4a4d0 <__asan_internal_strnlen@@Base+0x182c>  // b.lo, b.ul, b.last
   4a7dc:	b	4a7e4 <__asan_internal_strnlen@@Base+0x1b40>
   4a7e0:	nop
   4a7e4:	ldr	x0, [sp, #288]
   4a7e8:	sub	x0, x0, #0x1
   4a7ec:	str	x0, [sp, #288]
   4a7f0:	ldr	x0, [sp, #288]
   4a7f4:	cmp	x0, #0x8
   4a7f8:	b.hi	4a46c <__asan_internal_strnlen@@Base+0x17c8>  // b.pmore
   4a7fc:	mov	w0, #0x1                   	// #1
   4a800:	ldp	x29, x30, [sp], #304
   4a804:	ret
   4a808:	stp	x29, x30, [sp, #-256]!
   4a80c:	mov	x29, sp
   4a810:	str	x0, [sp, #56]
   4a814:	str	x1, [sp, #48]
   4a818:	str	x2, [sp, #40]
   4a81c:	str	x3, [sp, #32]
   4a820:	str	x4, [sp, #24]
   4a824:	ldr	x0, [sp, #32]
   4a828:	str	x0, [sp, #200]
   4a82c:	ldr	x1, [sp, #56]
   4a830:	ldr	x0, [sp, #48]
   4a834:	add	x0, x1, x0
   4a838:	str	x0, [sp, #192]
   4a83c:	ldr	x1, [sp, #32]
   4a840:	ldr	x0, [sp, #24]
   4a844:	add	x0, x1, x0
   4a848:	str	x0, [sp, #184]
   4a84c:	b	4bee0 <__asan_internal_strnlen@@Base+0x323c>
   4a850:	ldr	x0, [sp, #56]
   4a854:	ldrb	w0, [x0]
   4a858:	and	w0, w0, #0xf
   4a85c:	cmp	w0, #0x8
   4a860:	cset	w0, ne  // ne = any
   4a864:	and	w0, w0, #0xff
   4a868:	and	x0, x0, #0xff
   4a86c:	cmp	x0, #0x0
   4a870:	b.eq	4a880 <__asan_internal_strnlen@@Base+0x1bdc>  // b.none
   4a874:	bl	49dec <__asan_internal_strnlen@@Base+0x1148>
   4a878:	mov	w0, #0x0                   	// #0
   4a87c:	b	4bf24 <__asan_internal_strnlen@@Base+0x3280>
   4a880:	ldr	x0, [sp, #56]
   4a884:	ldrb	w0, [x0]
   4a888:	lsr	w0, w0, #4
   4a88c:	and	w0, w0, #0xff
   4a890:	cmp	w0, #0x7
   4a894:	cset	w0, hi  // hi = pmore
   4a898:	and	w0, w0, #0xff
   4a89c:	and	x0, x0, #0xff
   4a8a0:	cmp	x0, #0x0
   4a8a4:	b.eq	4a8b4 <__asan_internal_strnlen@@Base+0x1c10>  // b.none
   4a8a8:	bl	49dec <__asan_internal_strnlen@@Base+0x1148>
   4a8ac:	mov	w0, #0x0                   	// #0
   4a8b0:	b	4bf24 <__asan_internal_strnlen@@Base+0x3280>
   4a8b4:	ldr	x0, [sp, #56]
   4a8b8:	add	x0, x0, #0x1
   4a8bc:	ldrb	w0, [x0]
   4a8c0:	and	w0, w0, #0x20
   4a8c4:	cmp	w0, #0x0
   4a8c8:	cset	w0, ne  // ne = any
   4a8cc:	and	w0, w0, #0xff
   4a8d0:	and	x0, x0, #0xff
   4a8d4:	cmp	x0, #0x0
   4a8d8:	b.eq	4a8e8 <__asan_internal_strnlen@@Base+0x1c44>  // b.none
   4a8dc:	bl	49dec <__asan_internal_strnlen@@Base+0x1148>
   4a8e0:	mov	w0, #0x0                   	// #0
   4a8e4:	b	4bf24 <__asan_internal_strnlen@@Base+0x3280>
   4a8e8:	ldr	x0, [sp, #56]
   4a8ec:	ldrb	w0, [x0]
   4a8f0:	lsl	w0, w0, #8
   4a8f4:	ldr	x1, [sp, #56]
   4a8f8:	add	x1, x1, #0x1
   4a8fc:	ldrb	w1, [x1]
   4a900:	orr	w0, w0, w1
   4a904:	sxtw	x0, w0
   4a908:	str	x0, [sp, #88]
   4a90c:	ldr	x2, [sp, #88]
   4a910:	mov	x0, #0x4211                	// #16913
   4a914:	movk	x0, #0x2108, lsl #16
   4a918:	movk	x0, #0x1084, lsl #32
   4a91c:	movk	x0, #0x842, lsl #48
   4a920:	umulh	x0, x2, x0
   4a924:	sub	x1, x2, x0
   4a928:	lsr	x1, x1, #1
   4a92c:	add	x0, x0, x1
   4a930:	lsr	x1, x0, #4
   4a934:	mov	x0, x1
   4a938:	lsl	x0, x0, #5
   4a93c:	sub	x0, x0, x1
   4a940:	sub	x1, x2, x0
   4a944:	cmp	x1, #0x0
   4a948:	cset	w0, ne  // ne = any
   4a94c:	and	w0, w0, #0xff
   4a950:	and	x0, x0, #0xff
   4a954:	cmp	x0, #0x0
   4a958:	b.eq	4a968 <__asan_internal_strnlen@@Base+0x1cc4>  // b.none
   4a95c:	bl	49dec <__asan_internal_strnlen@@Base+0x1148>
   4a960:	mov	w0, #0x0                   	// #0
   4a964:	b	4bf24 <__asan_internal_strnlen@@Base+0x3280>
   4a968:	ldr	x0, [sp, #56]
   4a96c:	add	x0, x0, #0x2
   4a970:	str	x0, [sp, #56]
   4a974:	str	xzr, [sp, #88]
   4a978:	str	wzr, [sp, #84]
   4a97c:	b	4a9b8 <__asan_internal_strnlen@@Base+0x1d14>
   4a980:	ldr	x0, [sp, #56]
   4a984:	ldrb	w0, [x0]
   4a988:	and	x1, x0, #0xff
   4a98c:	ldr	w0, [sp, #84]
   4a990:	lsl	x1, x1, x0
   4a994:	ldr	x0, [sp, #88]
   4a998:	orr	x0, x1, x0
   4a99c:	str	x0, [sp, #88]
   4a9a0:	ldr	w0, [sp, #84]
   4a9a4:	add	w0, w0, #0x8
   4a9a8:	str	w0, [sp, #84]
   4a9ac:	ldr	x0, [sp, #56]
   4a9b0:	add	x0, x0, #0x1
   4a9b4:	str	x0, [sp, #56]
   4a9b8:	ldr	x0, [sp, #56]
   4a9bc:	and	x0, x0, #0x3
   4a9c0:	cmp	x0, #0x0
   4a9c4:	b.ne	4a980 <__asan_internal_strnlen@@Base+0x1cdc>  // b.any
   4a9c8:	str	wzr, [sp, #252]
   4a9cc:	b	4bed4 <__asan_internal_strnlen@@Base+0x3230>
   4a9d0:	add	x2, sp, #0x54
   4a9d4:	add	x1, sp, #0x58
   4a9d8:	add	x0, sp, #0x38
   4a9dc:	mov	x3, x2
   4a9e0:	mov	x2, x1
   4a9e4:	ldr	x1, [sp, #192]
   4a9e8:	bl	49df4 <__asan_internal_strnlen@@Base+0x1150>
   4a9ec:	cmp	w0, #0x0
   4a9f0:	b.ne	4a9fc <__asan_internal_strnlen@@Base+0x1d58>  // b.any
   4a9f4:	mov	w0, #0x0                   	// #0
   4a9f8:	b	4bf24 <__asan_internal_strnlen@@Base+0x3280>
   4a9fc:	ldr	x0, [sp, #88]
   4aa00:	and	w0, w0, #0x1
   4aa04:	str	w0, [sp, #252]
   4aa08:	ldr	x0, [sp, #88]
   4aa0c:	lsr	x0, x0, #1
   4aa10:	and	w0, w0, #0x3
   4aa14:	str	w0, [sp, #180]
   4aa18:	ldr	x0, [sp, #88]
   4aa1c:	lsr	x0, x0, #3
   4aa20:	str	x0, [sp, #88]
   4aa24:	ldr	w0, [sp, #84]
   4aa28:	sub	w0, w0, #0x3
   4aa2c:	str	w0, [sp, #84]
   4aa30:	ldr	w0, [sp, #180]
   4aa34:	cmp	w0, #0x3
   4aa38:	cset	w0, eq  // eq = none
   4aa3c:	and	w0, w0, #0xff
   4aa40:	and	x0, x0, #0xff
   4aa44:	cmp	x0, #0x0
   4aa48:	b.eq	4aa58 <__asan_internal_strnlen@@Base+0x1db4>  // b.none
   4aa4c:	bl	49dec <__asan_internal_strnlen@@Base+0x1148>
   4aa50:	mov	w0, #0x0                   	// #0
   4aa54:	b	4bf24 <__asan_internal_strnlen@@Base+0x3280>
   4aa58:	ldr	w0, [sp, #180]
   4aa5c:	cmp	w0, #0x0
   4aa60:	b.ne	4ac48 <__asan_internal_strnlen@@Base+0x1fa4>  // b.any
   4aa64:	b	4aa80 <__asan_internal_strnlen@@Base+0x1ddc>
   4aa68:	ldr	x0, [sp, #56]
   4aa6c:	sub	x0, x0, #0x1
   4aa70:	str	x0, [sp, #56]
   4aa74:	ldr	w0, [sp, #84]
   4aa78:	sub	w0, w0, #0x8
   4aa7c:	str	w0, [sp, #84]
   4aa80:	ldr	w0, [sp, #84]
   4aa84:	cmp	w0, #0x8
   4aa88:	b.hi	4aa68 <__asan_internal_strnlen@@Base+0x1dc4>  // b.pmore
   4aa8c:	str	xzr, [sp, #88]
   4aa90:	str	wzr, [sp, #84]
   4aa94:	ldr	x0, [sp, #56]
   4aa98:	ldr	x1, [sp, #192]
   4aa9c:	sub	x0, x1, x0
   4aaa0:	cmp	x0, #0x3
   4aaa4:	cset	w0, le
   4aaa8:	and	w0, w0, #0xff
   4aaac:	and	x0, x0, #0xff
   4aab0:	cmp	x0, #0x0
   4aab4:	b.eq	4aac4 <__asan_internal_strnlen@@Base+0x1e20>  // b.none
   4aab8:	bl	49dec <__asan_internal_strnlen@@Base+0x1148>
   4aabc:	mov	w0, #0x0                   	// #0
   4aac0:	b	4bf24 <__asan_internal_strnlen@@Base+0x3280>
   4aac4:	ldr	x0, [sp, #56]
   4aac8:	ldrb	w0, [x0]
   4aacc:	sxth	w1, w0
   4aad0:	ldr	x0, [sp, #56]
   4aad4:	add	x0, x0, #0x1
   4aad8:	ldrb	w0, [x0]
   4aadc:	lsl	w0, w0, #8
   4aae0:	sxth	w0, w0
   4aae4:	orr	w0, w1, w0
   4aae8:	sxth	w0, w0
   4aaec:	strh	w0, [sp, #98]
   4aaf0:	ldr	x0, [sp, #56]
   4aaf4:	add	x0, x0, #0x2
   4aaf8:	ldrb	w0, [x0]
   4aafc:	sxth	w1, w0
   4ab00:	ldr	x0, [sp, #56]
   4ab04:	add	x0, x0, #0x3
   4ab08:	ldrb	w0, [x0]
   4ab0c:	lsl	w0, w0, #8
   4ab10:	sxth	w0, w0
   4ab14:	orr	w0, w1, w0
   4ab18:	sxth	w0, w0
   4ab1c:	strh	w0, [sp, #96]
   4ab20:	ldr	x0, [sp, #56]
   4ab24:	add	x0, x0, #0x4
   4ab28:	str	x0, [sp, #56]
   4ab2c:	ldrh	w0, [sp, #96]
   4ab30:	mvn	w0, w0
   4ab34:	strh	w0, [sp, #96]
   4ab38:	ldrh	w1, [sp, #98]
   4ab3c:	ldrh	w0, [sp, #96]
   4ab40:	cmp	w1, w0
   4ab44:	cset	w0, ne  // ne = any
   4ab48:	and	w0, w0, #0xff
   4ab4c:	and	x0, x0, #0xff
   4ab50:	cmp	x0, #0x0
   4ab54:	b.eq	4ab64 <__asan_internal_strnlen@@Base+0x1ec0>  // b.none
   4ab58:	bl	49dec <__asan_internal_strnlen@@Base+0x1148>
   4ab5c:	mov	w0, #0x0                   	// #0
   4ab60:	b	4bf24 <__asan_internal_strnlen@@Base+0x3280>
   4ab64:	ldrh	w0, [sp, #98]
   4ab68:	ldr	x1, [sp, #56]
   4ab6c:	ldr	x2, [sp, #192]
   4ab70:	sub	x1, x2, x1
   4ab74:	cmp	w0, w1
   4ab78:	cset	w0, hi  // hi = pmore
   4ab7c:	and	w0, w0, #0xff
   4ab80:	and	x0, x0, #0xff
   4ab84:	cmp	x0, #0x0
   4ab88:	b.ne	4abb4 <__asan_internal_strnlen@@Base+0x1f10>  // b.any
   4ab8c:	ldrh	w0, [sp, #98]
   4ab90:	ldr	x2, [sp, #184]
   4ab94:	ldr	x1, [sp, #32]
   4ab98:	sub	x1, x2, x1
   4ab9c:	cmp	w0, w1
   4aba0:	cset	w0, hi  // hi = pmore
   4aba4:	and	w0, w0, #0xff
   4aba8:	and	x0, x0, #0xff
   4abac:	cmp	x0, #0x0
   4abb0:	b.eq	4abc0 <__asan_internal_strnlen@@Base+0x1f1c>  // b.none
   4abb4:	bl	49dec <__asan_internal_strnlen@@Base+0x1148>
   4abb8:	mov	w0, #0x0                   	// #0
   4abbc:	b	4bf24 <__asan_internal_strnlen@@Base+0x3280>
   4abc0:	ldr	x0, [sp, #56]
   4abc4:	ldrh	w1, [sp, #98]
   4abc8:	mov	x2, x1
   4abcc:	mov	x1, x0
   4abd0:	ldr	x0, [sp, #32]
   4abd4:	bl	6a10 <__asan_internal_memcpy@plt>
   4abd8:	ldrh	w0, [sp, #98]
   4abdc:	ldr	x1, [sp, #32]
   4abe0:	add	x0, x1, x0
   4abe4:	str	x0, [sp, #32]
   4abe8:	ldr	x1, [sp, #56]
   4abec:	ldrh	w0, [sp, #98]
   4abf0:	add	x0, x1, x0
   4abf4:	str	x0, [sp, #56]
   4abf8:	b	4ac34 <__asan_internal_strnlen@@Base+0x1f90>
   4abfc:	ldr	x0, [sp, #56]
   4ac00:	ldrb	w0, [x0]
   4ac04:	and	x1, x0, #0xff
   4ac08:	ldr	w0, [sp, #84]
   4ac0c:	lsl	x1, x1, x0
   4ac10:	ldr	x0, [sp, #88]
   4ac14:	orr	x0, x1, x0
   4ac18:	str	x0, [sp, #88]
   4ac1c:	ldr	w0, [sp, #84]
   4ac20:	add	w0, w0, #0x8
   4ac24:	str	w0, [sp, #84]
   4ac28:	ldr	x0, [sp, #56]
   4ac2c:	add	x0, x0, #0x1
   4ac30:	str	x0, [sp, #56]
   4ac34:	ldr	x0, [sp, #56]
   4ac38:	and	x0, x0, #0x3
   4ac3c:	cmp	x0, #0x0
   4ac40:	b.ne	4abfc <__asan_internal_strnlen@@Base+0x1f58>  // b.any
   4ac44:	b	4bed4 <__asan_internal_strnlen@@Base+0x3230>
   4ac48:	ldr	w0, [sp, #180]
   4ac4c:	cmp	w0, #0x1
   4ac50:	b.ne	4ac70 <__asan_internal_strnlen@@Base+0x1fcc>  // b.any
   4ac54:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   4ac58:	add	x0, x0, #0x548
   4ac5c:	str	x0, [sp, #240]
   4ac60:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   4ac64:	add	x0, x0, #0x828
   4ac68:	str	x0, [sp, #232]
   4ac6c:	b	4b7e8 <__asan_internal_strnlen@@Base+0x2b44>
   4ac70:	add	x2, sp, #0x54
   4ac74:	add	x1, sp, #0x58
   4ac78:	add	x0, sp, #0x38
   4ac7c:	mov	x3, x2
   4ac80:	mov	x2, x1
   4ac84:	ldr	x1, [sp, #192]
   4ac88:	bl	49df4 <__asan_internal_strnlen@@Base+0x1150>
   4ac8c:	cmp	w0, #0x0
   4ac90:	b.ne	4ac9c <__asan_internal_strnlen@@Base+0x1ff8>  // b.any
   4ac94:	mov	w0, #0x0                   	// #0
   4ac98:	b	4bf24 <__asan_internal_strnlen@@Base+0x3280>
   4ac9c:	ldr	x0, [sp, #88]
   4aca0:	and	w0, w0, #0x1f
   4aca4:	add	w0, w0, #0x101
   4aca8:	str	w0, [sp, #176]
   4acac:	ldr	x0, [sp, #88]
   4acb0:	lsr	x0, x0, #5
   4acb4:	str	x0, [sp, #88]
   4acb8:	ldr	x0, [sp, #88]
   4acbc:	and	w0, w0, #0x1f
   4acc0:	add	w0, w0, #0x1
   4acc4:	str	w0, [sp, #172]
   4acc8:	ldr	x0, [sp, #88]
   4accc:	lsr	x0, x0, #5
   4acd0:	str	x0, [sp, #88]
   4acd4:	ldr	x0, [sp, #88]
   4acd8:	and	w0, w0, #0xf
   4acdc:	add	w0, w0, #0x4
   4ace0:	str	w0, [sp, #168]
   4ace4:	ldr	x0, [sp, #88]
   4ace8:	lsr	x0, x0, #4
   4acec:	str	x0, [sp, #88]
   4acf0:	ldr	w0, [sp, #84]
   4acf4:	sub	w0, w0, #0xe
   4acf8:	str	w0, [sp, #84]
   4acfc:	ldr	w0, [sp, #176]
   4ad00:	cmp	w0, #0x11e
   4ad04:	cset	w0, hi  // hi = pmore
   4ad08:	and	w0, w0, #0xff
   4ad0c:	and	x0, x0, #0xff
   4ad10:	cmp	x0, #0x0
   4ad14:	b.ne	4ad34 <__asan_internal_strnlen@@Base+0x2090>  // b.any
   4ad18:	ldr	w0, [sp, #172]
   4ad1c:	cmp	w0, #0x1e
   4ad20:	cset	w0, hi  // hi = pmore
   4ad24:	and	w0, w0, #0xff
   4ad28:	and	x0, x0, #0xff
   4ad2c:	cmp	x0, #0x0
   4ad30:	b.eq	4ad40 <__asan_internal_strnlen@@Base+0x209c>  // b.none
   4ad34:	bl	49dec <__asan_internal_strnlen@@Base+0x1148>
   4ad38:	mov	w0, #0x0                   	// #0
   4ad3c:	b	4b7e4 <__asan_internal_strnlen@@Base+0x2b40>
   4ad40:	add	x0, sp, #0x40
   4ad44:	mov	x2, #0x13                  	// #19
   4ad48:	mov	w1, #0x0                   	// #0
   4ad4c:	bl	6ab0 <__asan_internal_memset@plt>
   4ad50:	add	x2, sp, #0x54
   4ad54:	add	x1, sp, #0x58
   4ad58:	add	x0, sp, #0x38
   4ad5c:	mov	x3, x2
   4ad60:	mov	x2, x1
   4ad64:	ldr	x1, [sp, #192]
   4ad68:	bl	49df4 <__asan_internal_strnlen@@Base+0x1150>
   4ad6c:	cmp	w0, #0x0
   4ad70:	b.ne	4ad7c <__asan_internal_strnlen@@Base+0x20d8>  // b.any
   4ad74:	mov	w0, #0x0                   	// #0
   4ad78:	b	4b7e4 <__asan_internal_strnlen@@Base+0x2b40>
   4ad7c:	ldr	x0, [sp, #88]
   4ad80:	and	w0, w0, #0xff
   4ad84:	and	w0, w0, #0x7
   4ad88:	and	w0, w0, #0xff
   4ad8c:	strb	w0, [sp, #80]
   4ad90:	ldr	x0, [sp, #88]
   4ad94:	lsr	x0, x0, #3
   4ad98:	and	w0, w0, #0xff
   4ad9c:	and	w0, w0, #0x7
   4ada0:	and	w0, w0, #0xff
   4ada4:	strb	w0, [sp, #81]
   4ada8:	ldr	x0, [sp, #88]
   4adac:	lsr	x0, x0, #6
   4adb0:	and	w0, w0, #0xff
   4adb4:	and	w0, w0, #0x7
   4adb8:	and	w0, w0, #0xff
   4adbc:	strb	w0, [sp, #82]
   4adc0:	ldr	x0, [sp, #88]
   4adc4:	lsr	x0, x0, #9
   4adc8:	and	w0, w0, #0xff
   4adcc:	and	w0, w0, #0x7
   4add0:	and	w0, w0, #0xff
   4add4:	strb	w0, [sp, #64]
   4add8:	ldr	x0, [sp, #88]
   4addc:	lsr	x0, x0, #12
   4ade0:	str	x0, [sp, #88]
   4ade4:	ldr	w0, [sp, #84]
   4ade8:	sub	w0, w0, #0xc
   4adec:	str	w0, [sp, #84]
   4adf0:	ldr	w0, [sp, #168]
   4adf4:	cmp	w0, #0x4
   4adf8:	b.eq	4b1c0 <__asan_internal_strnlen@@Base+0x251c>  // b.none
   4adfc:	ldr	x0, [sp, #88]
   4ae00:	and	w0, w0, #0xff
   4ae04:	and	w0, w0, #0x7
   4ae08:	and	w0, w0, #0xff
   4ae0c:	strb	w0, [sp, #72]
   4ae10:	ldr	x0, [sp, #88]
   4ae14:	lsr	x0, x0, #3
   4ae18:	str	x0, [sp, #88]
   4ae1c:	ldr	w0, [sp, #84]
   4ae20:	sub	w0, w0, #0x3
   4ae24:	str	w0, [sp, #84]
   4ae28:	ldr	w0, [sp, #168]
   4ae2c:	cmp	w0, #0x5
   4ae30:	b.eq	4b1c8 <__asan_internal_strnlen@@Base+0x2524>  // b.none
   4ae34:	add	x2, sp, #0x54
   4ae38:	add	x1, sp, #0x58
   4ae3c:	add	x0, sp, #0x38
   4ae40:	mov	x3, x2
   4ae44:	mov	x2, x1
   4ae48:	ldr	x1, [sp, #192]
   4ae4c:	bl	49df4 <__asan_internal_strnlen@@Base+0x1150>
   4ae50:	cmp	w0, #0x0
   4ae54:	b.ne	4ae60 <__asan_internal_strnlen@@Base+0x21bc>  // b.any
   4ae58:	mov	w0, #0x0                   	// #0
   4ae5c:	b	4b7e4 <__asan_internal_strnlen@@Base+0x2b40>
   4ae60:	ldr	x0, [sp, #88]
   4ae64:	and	w0, w0, #0xff
   4ae68:	and	w0, w0, #0x7
   4ae6c:	and	w0, w0, #0xff
   4ae70:	strb	w0, [sp, #71]
   4ae74:	ldr	x0, [sp, #88]
   4ae78:	lsr	x0, x0, #3
   4ae7c:	str	x0, [sp, #88]
   4ae80:	ldr	w0, [sp, #84]
   4ae84:	sub	w0, w0, #0x3
   4ae88:	str	w0, [sp, #84]
   4ae8c:	ldr	w0, [sp, #168]
   4ae90:	cmp	w0, #0x6
   4ae94:	b.eq	4b1d0 <__asan_internal_strnlen@@Base+0x252c>  // b.none
   4ae98:	ldr	x0, [sp, #88]
   4ae9c:	and	w0, w0, #0xff
   4aea0:	and	w0, w0, #0x7
   4aea4:	and	w0, w0, #0xff
   4aea8:	strb	w0, [sp, #73]
   4aeac:	ldr	x0, [sp, #88]
   4aeb0:	lsr	x0, x0, #3
   4aeb4:	str	x0, [sp, #88]
   4aeb8:	ldr	w0, [sp, #84]
   4aebc:	sub	w0, w0, #0x3
   4aec0:	str	w0, [sp, #84]
   4aec4:	ldr	w0, [sp, #168]
   4aec8:	cmp	w0, #0x7
   4aecc:	b.eq	4b1d8 <__asan_internal_strnlen@@Base+0x2534>  // b.none
   4aed0:	ldr	x0, [sp, #88]
   4aed4:	and	w0, w0, #0xff
   4aed8:	and	w0, w0, #0x7
   4aedc:	and	w0, w0, #0xff
   4aee0:	strb	w0, [sp, #70]
   4aee4:	ldr	x0, [sp, #88]
   4aee8:	lsr	x0, x0, #3
   4aeec:	str	x0, [sp, #88]
   4aef0:	ldr	w0, [sp, #84]
   4aef4:	sub	w0, w0, #0x3
   4aef8:	str	w0, [sp, #84]
   4aefc:	ldr	w0, [sp, #168]
   4af00:	cmp	w0, #0x8
   4af04:	b.eq	4b1e0 <__asan_internal_strnlen@@Base+0x253c>  // b.none
   4af08:	ldr	x0, [sp, #88]
   4af0c:	and	w0, w0, #0xff
   4af10:	and	w0, w0, #0x7
   4af14:	and	w0, w0, #0xff
   4af18:	strb	w0, [sp, #74]
   4af1c:	ldr	x0, [sp, #88]
   4af20:	lsr	x0, x0, #3
   4af24:	str	x0, [sp, #88]
   4af28:	ldr	w0, [sp, #84]
   4af2c:	sub	w0, w0, #0x3
   4af30:	str	w0, [sp, #84]
   4af34:	ldr	w0, [sp, #168]
   4af38:	cmp	w0, #0x9
   4af3c:	b.eq	4b1e8 <__asan_internal_strnlen@@Base+0x2544>  // b.none
   4af40:	ldr	x0, [sp, #88]
   4af44:	and	w0, w0, #0xff
   4af48:	and	w0, w0, #0x7
   4af4c:	and	w0, w0, #0xff
   4af50:	strb	w0, [sp, #69]
   4af54:	ldr	x0, [sp, #88]
   4af58:	lsr	x0, x0, #3
   4af5c:	str	x0, [sp, #88]
   4af60:	ldr	w0, [sp, #84]
   4af64:	sub	w0, w0, #0x3
   4af68:	str	w0, [sp, #84]
   4af6c:	ldr	w0, [sp, #168]
   4af70:	cmp	w0, #0xa
   4af74:	b.eq	4b1f0 <__asan_internal_strnlen@@Base+0x254c>  // b.none
   4af78:	add	x2, sp, #0x54
   4af7c:	add	x1, sp, #0x58
   4af80:	add	x0, sp, #0x38
   4af84:	mov	x3, x2
   4af88:	mov	x2, x1
   4af8c:	ldr	x1, [sp, #192]
   4af90:	bl	49df4 <__asan_internal_strnlen@@Base+0x1150>
   4af94:	cmp	w0, #0x0
   4af98:	b.ne	4afa4 <__asan_internal_strnlen@@Base+0x2300>  // b.any
   4af9c:	mov	w0, #0x0                   	// #0
   4afa0:	b	4b7e4 <__asan_internal_strnlen@@Base+0x2b40>
   4afa4:	ldr	x0, [sp, #88]
   4afa8:	and	w0, w0, #0xff
   4afac:	and	w0, w0, #0x7
   4afb0:	and	w0, w0, #0xff
   4afb4:	strb	w0, [sp, #75]
   4afb8:	ldr	x0, [sp, #88]
   4afbc:	lsr	x0, x0, #3
   4afc0:	str	x0, [sp, #88]
   4afc4:	ldr	w0, [sp, #84]
   4afc8:	sub	w0, w0, #0x3
   4afcc:	str	w0, [sp, #84]
   4afd0:	ldr	w0, [sp, #168]
   4afd4:	cmp	w0, #0xb
   4afd8:	b.eq	4b1f8 <__asan_internal_strnlen@@Base+0x2554>  // b.none
   4afdc:	ldr	x0, [sp, #88]
   4afe0:	and	w0, w0, #0xff
   4afe4:	and	w0, w0, #0x7
   4afe8:	and	w0, w0, #0xff
   4afec:	strb	w0, [sp, #68]
   4aff0:	ldr	x0, [sp, #88]
   4aff4:	lsr	x0, x0, #3
   4aff8:	str	x0, [sp, #88]
   4affc:	ldr	w0, [sp, #84]
   4b000:	sub	w0, w0, #0x3
   4b004:	str	w0, [sp, #84]
   4b008:	ldr	w0, [sp, #168]
   4b00c:	cmp	w0, #0xc
   4b010:	b.eq	4b200 <__asan_internal_strnlen@@Base+0x255c>  // b.none
   4b014:	ldr	x0, [sp, #88]
   4b018:	and	w0, w0, #0xff
   4b01c:	and	w0, w0, #0x7
   4b020:	and	w0, w0, #0xff
   4b024:	strb	w0, [sp, #76]
   4b028:	ldr	x0, [sp, #88]
   4b02c:	lsr	x0, x0, #3
   4b030:	str	x0, [sp, #88]
   4b034:	ldr	w0, [sp, #84]
   4b038:	sub	w0, w0, #0x3
   4b03c:	str	w0, [sp, #84]
   4b040:	ldr	w0, [sp, #168]
   4b044:	cmp	w0, #0xd
   4b048:	b.eq	4b208 <__asan_internal_strnlen@@Base+0x2564>  // b.none
   4b04c:	ldr	x0, [sp, #88]
   4b050:	and	w0, w0, #0xff
   4b054:	and	w0, w0, #0x7
   4b058:	and	w0, w0, #0xff
   4b05c:	strb	w0, [sp, #67]
   4b060:	ldr	x0, [sp, #88]
   4b064:	lsr	x0, x0, #3
   4b068:	str	x0, [sp, #88]
   4b06c:	ldr	w0, [sp, #84]
   4b070:	sub	w0, w0, #0x3
   4b074:	str	w0, [sp, #84]
   4b078:	ldr	w0, [sp, #168]
   4b07c:	cmp	w0, #0xe
   4b080:	b.eq	4b210 <__asan_internal_strnlen@@Base+0x256c>  // b.none
   4b084:	ldr	x0, [sp, #88]
   4b088:	and	w0, w0, #0xff
   4b08c:	and	w0, w0, #0x7
   4b090:	and	w0, w0, #0xff
   4b094:	strb	w0, [sp, #77]
   4b098:	ldr	x0, [sp, #88]
   4b09c:	lsr	x0, x0, #3
   4b0a0:	str	x0, [sp, #88]
   4b0a4:	ldr	w0, [sp, #84]
   4b0a8:	sub	w0, w0, #0x3
   4b0ac:	str	w0, [sp, #84]
   4b0b0:	ldr	w0, [sp, #168]
   4b0b4:	cmp	w0, #0xf
   4b0b8:	b.eq	4b218 <__asan_internal_strnlen@@Base+0x2574>  // b.none
   4b0bc:	add	x2, sp, #0x54
   4b0c0:	add	x1, sp, #0x58
   4b0c4:	add	x0, sp, #0x38
   4b0c8:	mov	x3, x2
   4b0cc:	mov	x2, x1
   4b0d0:	ldr	x1, [sp, #192]
   4b0d4:	bl	49df4 <__asan_internal_strnlen@@Base+0x1150>
   4b0d8:	cmp	w0, #0x0
   4b0dc:	b.ne	4b0e8 <__asan_internal_strnlen@@Base+0x2444>  // b.any
   4b0e0:	mov	w0, #0x0                   	// #0
   4b0e4:	b	4b7e4 <__asan_internal_strnlen@@Base+0x2b40>
   4b0e8:	ldr	x0, [sp, #88]
   4b0ec:	and	w0, w0, #0xff
   4b0f0:	and	w0, w0, #0x7
   4b0f4:	and	w0, w0, #0xff
   4b0f8:	strb	w0, [sp, #66]
   4b0fc:	ldr	x0, [sp, #88]
   4b100:	lsr	x0, x0, #3
   4b104:	str	x0, [sp, #88]
   4b108:	ldr	w0, [sp, #84]
   4b10c:	sub	w0, w0, #0x3
   4b110:	str	w0, [sp, #84]
   4b114:	ldr	w0, [sp, #168]
   4b118:	cmp	w0, #0x10
   4b11c:	b.eq	4b220 <__asan_internal_strnlen@@Base+0x257c>  // b.none
   4b120:	ldr	x0, [sp, #88]
   4b124:	and	w0, w0, #0xff
   4b128:	and	w0, w0, #0x7
   4b12c:	and	w0, w0, #0xff
   4b130:	strb	w0, [sp, #78]
   4b134:	ldr	x0, [sp, #88]
   4b138:	lsr	x0, x0, #3
   4b13c:	str	x0, [sp, #88]
   4b140:	ldr	w0, [sp, #84]
   4b144:	sub	w0, w0, #0x3
   4b148:	str	w0, [sp, #84]
   4b14c:	ldr	w0, [sp, #168]
   4b150:	cmp	w0, #0x11
   4b154:	b.eq	4b228 <__asan_internal_strnlen@@Base+0x2584>  // b.none
   4b158:	ldr	x0, [sp, #88]
   4b15c:	and	w0, w0, #0xff
   4b160:	and	w0, w0, #0x7
   4b164:	and	w0, w0, #0xff
   4b168:	strb	w0, [sp, #65]
   4b16c:	ldr	x0, [sp, #88]
   4b170:	lsr	x0, x0, #3
   4b174:	str	x0, [sp, #88]
   4b178:	ldr	w0, [sp, #84]
   4b17c:	sub	w0, w0, #0x3
   4b180:	str	w0, [sp, #84]
   4b184:	ldr	w0, [sp, #168]
   4b188:	cmp	w0, #0x12
   4b18c:	b.eq	4b230 <__asan_internal_strnlen@@Base+0x258c>  // b.none
   4b190:	ldr	x0, [sp, #88]
   4b194:	and	w0, w0, #0xff
   4b198:	and	w0, w0, #0x7
   4b19c:	and	w0, w0, #0xff
   4b1a0:	strb	w0, [sp, #79]
   4b1a4:	ldr	x0, [sp, #88]
   4b1a8:	lsr	x0, x0, #3
   4b1ac:	str	x0, [sp, #88]
   4b1b0:	ldr	w0, [sp, #84]
   4b1b4:	sub	w0, w0, #0x3
   4b1b8:	str	w0, [sp, #84]
   4b1bc:	b	4b234 <__asan_internal_strnlen@@Base+0x2590>
   4b1c0:	nop
   4b1c4:	b	4b234 <__asan_internal_strnlen@@Base+0x2590>
   4b1c8:	nop
   4b1cc:	b	4b234 <__asan_internal_strnlen@@Base+0x2590>
   4b1d0:	nop
   4b1d4:	b	4b234 <__asan_internal_strnlen@@Base+0x2590>
   4b1d8:	nop
   4b1dc:	b	4b234 <__asan_internal_strnlen@@Base+0x2590>
   4b1e0:	nop
   4b1e4:	b	4b234 <__asan_internal_strnlen@@Base+0x2590>
   4b1e8:	nop
   4b1ec:	b	4b234 <__asan_internal_strnlen@@Base+0x2590>
   4b1f0:	nop
   4b1f4:	b	4b234 <__asan_internal_strnlen@@Base+0x2590>
   4b1f8:	nop
   4b1fc:	b	4b234 <__asan_internal_strnlen@@Base+0x2590>
   4b200:	nop
   4b204:	b	4b234 <__asan_internal_strnlen@@Base+0x2590>
   4b208:	nop
   4b20c:	b	4b234 <__asan_internal_strnlen@@Base+0x2590>
   4b210:	nop
   4b214:	b	4b234 <__asan_internal_strnlen@@Base+0x2590>
   4b218:	nop
   4b21c:	b	4b234 <__asan_internal_strnlen@@Base+0x2590>
   4b220:	nop
   4b224:	b	4b234 <__asan_internal_strnlen@@Base+0x2590>
   4b228:	nop
   4b22c:	b	4b234 <__asan_internal_strnlen@@Base+0x2590>
   4b230:	nop
   4b234:	add	x0, sp, #0x40
   4b238:	ldr	x3, [sp, #40]
   4b23c:	ldr	x2, [sp, #40]
   4b240:	mov	x1, #0x13                  	// #19
   4b244:	bl	49ee8 <__asan_internal_strnlen@@Base+0x1244>
   4b248:	cmp	w0, #0x0
   4b24c:	b.ne	4b258 <__asan_internal_strnlen@@Base+0x25b4>  // b.any
   4b250:	mov	w0, #0x0                   	// #0
   4b254:	b	4b7e4 <__asan_internal_strnlen@@Base+0x2b40>
   4b258:	ldr	x1, [sp, #40]
   4b25c:	mov	x0, #0x1278                	// #4728
   4b260:	add	x0, x1, x0
   4b264:	str	x0, [sp, #160]
   4b268:	ldr	x0, [sp, #160]
   4b26c:	str	x0, [sp, #224]
   4b270:	ldr	w1, [sp, #176]
   4b274:	ldr	w0, [sp, #172]
   4b278:	add	x0, x1, x0
   4b27c:	ldr	x1, [sp, #224]
   4b280:	add	x0, x1, x0
   4b284:	str	x0, [sp, #152]
   4b288:	b	4b724 <__asan_internal_strnlen@@Base+0x2a80>
   4b28c:	add	x2, sp, #0x54
   4b290:	add	x1, sp, #0x58
   4b294:	add	x0, sp, #0x38
   4b298:	mov	x3, x2
   4b29c:	mov	x2, x1
   4b2a0:	ldr	x1, [sp, #192]
   4b2a4:	bl	49df4 <__asan_internal_strnlen@@Base+0x1150>
   4b2a8:	cmp	w0, #0x0
   4b2ac:	b.ne	4b2b8 <__asan_internal_strnlen@@Base+0x2614>  // b.any
   4b2b0:	mov	w0, #0x0                   	// #0
   4b2b4:	b	4b7e4 <__asan_internal_strnlen@@Base+0x2b40>
   4b2b8:	ldr	x0, [sp, #88]
   4b2bc:	and	x0, x0, #0xff
   4b2c0:	lsl	x0, x0, #1
   4b2c4:	ldr	x1, [sp, #40]
   4b2c8:	add	x0, x1, x0
   4b2cc:	ldrh	w0, [x0]
   4b2d0:	strh	w0, [sp, #150]
   4b2d4:	ldrh	w0, [sp, #150]
   4b2d8:	and	w0, w0, #0x1000
   4b2dc:	cmp	w0, #0x0
   4b2e0:	cset	w0, ne  // ne = any
   4b2e4:	and	w0, w0, #0xff
   4b2e8:	and	x0, x0, #0xff
   4b2ec:	cmp	x0, #0x0
   4b2f0:	b.eq	4b300 <__asan_internal_strnlen@@Base+0x265c>  // b.none
   4b2f4:	bl	49dec <__asan_internal_strnlen@@Base+0x1148>
   4b2f8:	mov	w0, #0x0                   	// #0
   4b2fc:	b	4b7e4 <__asan_internal_strnlen@@Base+0x2b40>
   4b300:	ldrh	w0, [sp, #150]
   4b304:	lsr	w0, w0, #9
   4b308:	and	w0, w0, #0xffff
   4b30c:	and	w0, w0, #0x7
   4b310:	str	w0, [sp, #144]
   4b314:	ldr	x1, [sp, #88]
   4b318:	ldr	w0, [sp, #144]
   4b31c:	add	w0, w0, #0x1
   4b320:	lsr	x0, x1, x0
   4b324:	str	x0, [sp, #88]
   4b328:	ldr	w1, [sp, #84]
   4b32c:	ldr	w0, [sp, #144]
   4b330:	sub	w0, w1, w0
   4b334:	sub	w0, w0, #0x1
   4b338:	str	w0, [sp, #84]
   4b33c:	ldrh	w0, [sp, #150]
   4b340:	and	w0, w0, #0x1ff
   4b344:	strh	w0, [sp, #142]
   4b348:	ldrh	w0, [sp, #142]
   4b34c:	cmp	w0, #0xf
   4b350:	b.hi	4b370 <__asan_internal_strnlen@@Base+0x26cc>  // b.pmore
   4b354:	ldr	x0, [sp, #224]
   4b358:	add	x1, x0, #0x1
   4b35c:	str	x1, [sp, #224]
   4b360:	ldrh	w1, [sp, #142]
   4b364:	and	w1, w1, #0xff
   4b368:	strb	w1, [x0]
   4b36c:	b	4b724 <__asan_internal_strnlen@@Base+0x2a80>
   4b370:	ldrh	w0, [sp, #142]
   4b374:	cmp	w0, #0x10
   4b378:	b.ne	4b4e0 <__asan_internal_strnlen@@Base+0x283c>  // b.any
   4b37c:	ldr	x1, [sp, #224]
   4b380:	ldr	x0, [sp, #160]
   4b384:	cmp	x1, x0
   4b388:	cset	w0, eq  // eq = none
   4b38c:	and	w0, w0, #0xff
   4b390:	and	x0, x0, #0xff
   4b394:	cmp	x0, #0x0
   4b398:	b.eq	4b3a8 <__asan_internal_strnlen@@Base+0x2704>  // b.none
   4b39c:	bl	49dec <__asan_internal_strnlen@@Base+0x1148>
   4b3a0:	mov	w0, #0x0                   	// #0
   4b3a4:	b	4b7e4 <__asan_internal_strnlen@@Base+0x2b40>
   4b3a8:	ldr	x0, [sp, #88]
   4b3ac:	and	w0, w0, #0x3
   4b3b0:	add	w0, w0, #0x3
   4b3b4:	str	w0, [sp, #128]
   4b3b8:	ldr	x0, [sp, #88]
   4b3bc:	lsr	x0, x0, #2
   4b3c0:	str	x0, [sp, #88]
   4b3c4:	ldr	w0, [sp, #84]
   4b3c8:	sub	w0, w0, #0x2
   4b3cc:	str	w0, [sp, #84]
   4b3d0:	ldr	x1, [sp, #152]
   4b3d4:	ldr	x0, [sp, #224]
   4b3d8:	sub	x0, x1, x0
   4b3dc:	mov	w1, w0
   4b3e0:	ldr	w0, [sp, #128]
   4b3e4:	cmp	w0, w1
   4b3e8:	cset	w0, hi  // hi = pmore
   4b3ec:	and	w0, w0, #0xff
   4b3f0:	and	x0, x0, #0xff
   4b3f4:	cmp	x0, #0x0
   4b3f8:	b.eq	4b408 <__asan_internal_strnlen@@Base+0x2764>  // b.none
   4b3fc:	bl	49dec <__asan_internal_strnlen@@Base+0x1148>
   4b400:	mov	w0, #0x0                   	// #0
   4b404:	b	4b7e4 <__asan_internal_strnlen@@Base+0x2b40>
   4b408:	ldr	x0, [sp, #224]
   4b40c:	sub	x0, x0, #0x1
   4b410:	ldrb	w0, [x0]
   4b414:	str	w0, [sp, #124]
   4b418:	ldr	w0, [sp, #128]
   4b41c:	cmp	w0, #0x6
   4b420:	b.eq	4b44c <__asan_internal_strnlen@@Base+0x27a8>  // b.none
   4b424:	ldr	w0, [sp, #128]
   4b428:	cmp	w0, #0x6
   4b42c:	b.hi	4b494 <__asan_internal_strnlen@@Base+0x27f0>  // b.pmore
   4b430:	ldr	w0, [sp, #128]
   4b434:	cmp	w0, #0x4
   4b438:	b.eq	4b47c <__asan_internal_strnlen@@Base+0x27d8>  // b.none
   4b43c:	ldr	w0, [sp, #128]
   4b440:	cmp	w0, #0x5
   4b444:	b.eq	4b464 <__asan_internal_strnlen@@Base+0x27c0>  // b.none
   4b448:	b	4b494 <__asan_internal_strnlen@@Base+0x27f0>
   4b44c:	ldr	x0, [sp, #224]
   4b450:	add	x1, x0, #0x1
   4b454:	str	x1, [sp, #224]
   4b458:	ldr	w1, [sp, #124]
   4b45c:	and	w1, w1, #0xff
   4b460:	strb	w1, [x0]
   4b464:	ldr	x0, [sp, #224]
   4b468:	add	x1, x0, #0x1
   4b46c:	str	x1, [sp, #224]
   4b470:	ldr	w1, [sp, #124]
   4b474:	and	w1, w1, #0xff
   4b478:	strb	w1, [x0]
   4b47c:	ldr	x0, [sp, #224]
   4b480:	add	x1, x0, #0x1
   4b484:	str	x1, [sp, #224]
   4b488:	ldr	w1, [sp, #124]
   4b48c:	and	w1, w1, #0xff
   4b490:	strb	w1, [x0]
   4b494:	ldr	x0, [sp, #224]
   4b498:	add	x1, x0, #0x1
   4b49c:	str	x1, [sp, #224]
   4b4a0:	ldr	w1, [sp, #124]
   4b4a4:	and	w1, w1, #0xff
   4b4a8:	strb	w1, [x0]
   4b4ac:	ldr	x0, [sp, #224]
   4b4b0:	add	x1, x0, #0x1
   4b4b4:	str	x1, [sp, #224]
   4b4b8:	ldr	w1, [sp, #124]
   4b4bc:	and	w1, w1, #0xff
   4b4c0:	strb	w1, [x0]
   4b4c4:	ldr	x0, [sp, #224]
   4b4c8:	add	x1, x0, #0x1
   4b4cc:	str	x1, [sp, #224]
   4b4d0:	ldr	w1, [sp, #124]
   4b4d4:	and	w1, w1, #0xff
   4b4d8:	strb	w1, [x0]
   4b4dc:	b	4b724 <__asan_internal_strnlen@@Base+0x2a80>
   4b4e0:	ldrh	w0, [sp, #142]
   4b4e4:	cmp	w0, #0x11
   4b4e8:	b.ne	4b684 <__asan_internal_strnlen@@Base+0x29e0>  // b.any
   4b4ec:	ldr	x0, [sp, #88]
   4b4f0:	and	w0, w0, #0x7
   4b4f4:	add	w0, w0, #0x3
   4b4f8:	str	w0, [sp, #132]
   4b4fc:	ldr	x0, [sp, #88]
   4b500:	lsr	x0, x0, #3
   4b504:	str	x0, [sp, #88]
   4b508:	ldr	w0, [sp, #84]
   4b50c:	sub	w0, w0, #0x3
   4b510:	str	w0, [sp, #84]
   4b514:	ldr	x1, [sp, #152]
   4b518:	ldr	x0, [sp, #224]
   4b51c:	sub	x0, x1, x0
   4b520:	mov	w1, w0
   4b524:	ldr	w0, [sp, #132]
   4b528:	cmp	w0, w1
   4b52c:	cset	w0, hi  // hi = pmore
   4b530:	and	w0, w0, #0xff
   4b534:	and	x0, x0, #0xff
   4b538:	cmp	x0, #0x0
   4b53c:	b.eq	4b54c <__asan_internal_strnlen@@Base+0x28a8>  // b.none
   4b540:	bl	49dec <__asan_internal_strnlen@@Base+0x1148>
   4b544:	mov	w0, #0x0                   	// #0
   4b548:	b	4b7e4 <__asan_internal_strnlen@@Base+0x2b40>
   4b54c:	ldr	w0, [sp, #132]
   4b550:	cmp	w0, #0xa
   4b554:	b.eq	4b5e0 <__asan_internal_strnlen@@Base+0x293c>  // b.none
   4b558:	ldr	w0, [sp, #132]
   4b55c:	cmp	w0, #0xa
   4b560:	b.hi	4b650 <__asan_internal_strnlen@@Base+0x29ac>  // b.pmore
   4b564:	ldr	w0, [sp, #132]
   4b568:	cmp	w0, #0x9
   4b56c:	b.eq	4b5f0 <__asan_internal_strnlen@@Base+0x294c>  // b.none
   4b570:	ldr	w0, [sp, #132]
   4b574:	cmp	w0, #0x9
   4b578:	b.hi	4b650 <__asan_internal_strnlen@@Base+0x29ac>  // b.pmore
   4b57c:	ldr	w0, [sp, #132]
   4b580:	cmp	w0, #0x8
   4b584:	b.eq	4b600 <__asan_internal_strnlen@@Base+0x295c>  // b.none
   4b588:	ldr	w0, [sp, #132]
   4b58c:	cmp	w0, #0x8
   4b590:	b.hi	4b650 <__asan_internal_strnlen@@Base+0x29ac>  // b.pmore
   4b594:	ldr	w0, [sp, #132]
   4b598:	cmp	w0, #0x7
   4b59c:	b.eq	4b610 <__asan_internal_strnlen@@Base+0x296c>  // b.none
   4b5a0:	ldr	w0, [sp, #132]
   4b5a4:	cmp	w0, #0x7
   4b5a8:	b.hi	4b650 <__asan_internal_strnlen@@Base+0x29ac>  // b.pmore
   4b5ac:	ldr	w0, [sp, #132]
   4b5b0:	cmp	w0, #0x6
   4b5b4:	b.eq	4b620 <__asan_internal_strnlen@@Base+0x297c>  // b.none
   4b5b8:	ldr	w0, [sp, #132]
   4b5bc:	cmp	w0, #0x6
   4b5c0:	b.hi	4b650 <__asan_internal_strnlen@@Base+0x29ac>  // b.pmore
   4b5c4:	ldr	w0, [sp, #132]
   4b5c8:	cmp	w0, #0x4
   4b5cc:	b.eq	4b640 <__asan_internal_strnlen@@Base+0x299c>  // b.none
   4b5d0:	ldr	w0, [sp, #132]
   4b5d4:	cmp	w0, #0x5
   4b5d8:	b.eq	4b630 <__asan_internal_strnlen@@Base+0x298c>  // b.none
   4b5dc:	b	4b650 <__asan_internal_strnlen@@Base+0x29ac>
   4b5e0:	ldr	x0, [sp, #224]
   4b5e4:	add	x1, x0, #0x1
   4b5e8:	str	x1, [sp, #224]
   4b5ec:	strb	wzr, [x0]
   4b5f0:	ldr	x0, [sp, #224]
   4b5f4:	add	x1, x0, #0x1
   4b5f8:	str	x1, [sp, #224]
   4b5fc:	strb	wzr, [x0]
   4b600:	ldr	x0, [sp, #224]
   4b604:	add	x1, x0, #0x1
   4b608:	str	x1, [sp, #224]
   4b60c:	strb	wzr, [x0]
   4b610:	ldr	x0, [sp, #224]
   4b614:	add	x1, x0, #0x1
   4b618:	str	x1, [sp, #224]
   4b61c:	strb	wzr, [x0]
   4b620:	ldr	x0, [sp, #224]
   4b624:	add	x1, x0, #0x1
   4b628:	str	x1, [sp, #224]
   4b62c:	strb	wzr, [x0]
   4b630:	ldr	x0, [sp, #224]
   4b634:	add	x1, x0, #0x1
   4b638:	str	x1, [sp, #224]
   4b63c:	strb	wzr, [x0]
   4b640:	ldr	x0, [sp, #224]
   4b644:	add	x1, x0, #0x1
   4b648:	str	x1, [sp, #224]
   4b64c:	strb	wzr, [x0]
   4b650:	ldr	x0, [sp, #224]
   4b654:	add	x1, x0, #0x1
   4b658:	str	x1, [sp, #224]
   4b65c:	strb	wzr, [x0]
   4b660:	ldr	x0, [sp, #224]
   4b664:	add	x1, x0, #0x1
   4b668:	str	x1, [sp, #224]
   4b66c:	strb	wzr, [x0]
   4b670:	ldr	x0, [sp, #224]
   4b674:	add	x1, x0, #0x1
   4b678:	str	x1, [sp, #224]
   4b67c:	strb	wzr, [x0]
   4b680:	b	4b724 <__asan_internal_strnlen@@Base+0x2a80>
   4b684:	ldrh	w0, [sp, #142]
   4b688:	cmp	w0, #0x12
   4b68c:	b.ne	4b718 <__asan_internal_strnlen@@Base+0x2a74>  // b.any
   4b690:	ldr	x0, [sp, #88]
   4b694:	and	w0, w0, #0x7f
   4b698:	add	w0, w0, #0xb
   4b69c:	str	w0, [sp, #136]
   4b6a0:	ldr	x0, [sp, #88]
   4b6a4:	lsr	x0, x0, #7
   4b6a8:	str	x0, [sp, #88]
   4b6ac:	ldr	w0, [sp, #84]
   4b6b0:	sub	w0, w0, #0x7
   4b6b4:	str	w0, [sp, #84]
   4b6b8:	ldr	x1, [sp, #152]
   4b6bc:	ldr	x0, [sp, #224]
   4b6c0:	sub	x0, x1, x0
   4b6c4:	mov	w1, w0
   4b6c8:	ldr	w0, [sp, #136]
   4b6cc:	cmp	w0, w1
   4b6d0:	cset	w0, hi  // hi = pmore
   4b6d4:	and	w0, w0, #0xff
   4b6d8:	and	x0, x0, #0xff
   4b6dc:	cmp	x0, #0x0
   4b6e0:	b.eq	4b6f0 <__asan_internal_strnlen@@Base+0x2a4c>  // b.none
   4b6e4:	bl	49dec <__asan_internal_strnlen@@Base+0x1148>
   4b6e8:	mov	w0, #0x0                   	// #0
   4b6ec:	b	4b7e4 <__asan_internal_strnlen@@Base+0x2b40>
   4b6f0:	ldr	w0, [sp, #136]
   4b6f4:	mov	x2, x0
   4b6f8:	mov	w1, #0x0                   	// #0
   4b6fc:	ldr	x0, [sp, #224]
   4b700:	bl	6ab0 <__asan_internal_memset@plt>
   4b704:	ldr	w0, [sp, #136]
   4b708:	ldr	x1, [sp, #224]
   4b70c:	add	x0, x1, x0
   4b710:	str	x0, [sp, #224]
   4b714:	b	4b724 <__asan_internal_strnlen@@Base+0x2a80>
   4b718:	bl	49dec <__asan_internal_strnlen@@Base+0x1148>
   4b71c:	mov	w0, #0x0                   	// #0
   4b720:	b	4b7e4 <__asan_internal_strnlen@@Base+0x2b40>
   4b724:	ldr	x1, [sp, #224]
   4b728:	ldr	x0, [sp, #152]
   4b72c:	cmp	x1, x0
   4b730:	b.cc	4b28c <__asan_internal_strnlen@@Base+0x25e8>  // b.lo, b.ul, b.last
   4b734:	ldr	x0, [sp, #160]
   4b738:	str	x0, [sp, #224]
   4b73c:	ldr	x0, [sp, #224]
   4b740:	add	x0, x0, #0x100
   4b744:	ldrb	w0, [x0]
   4b748:	cmp	w0, #0x0
   4b74c:	cset	w0, eq  // eq = none
   4b750:	and	w0, w0, #0xff
   4b754:	and	x0, x0, #0xff
   4b758:	cmp	x0, #0x0
   4b75c:	b.eq	4b76c <__asan_internal_strnlen@@Base+0x2ac8>  // b.none
   4b760:	bl	49dec <__asan_internal_strnlen@@Base+0x1148>
   4b764:	mov	w0, #0x0                   	// #0
   4b768:	b	4b7e4 <__asan_internal_strnlen@@Base+0x2b40>
   4b76c:	ldr	w0, [sp, #176]
   4b770:	ldr	x3, [sp, #40]
   4b774:	ldr	x2, [sp, #40]
   4b778:	mov	x1, x0
   4b77c:	ldr	x0, [sp, #224]
   4b780:	bl	49ee8 <__asan_internal_strnlen@@Base+0x1244>
   4b784:	cmp	w0, #0x0
   4b788:	b.ne	4b794 <__asan_internal_strnlen@@Base+0x2af0>  // b.any
   4b78c:	mov	w0, #0x0                   	// #0
   4b790:	b	4b7e4 <__asan_internal_strnlen@@Base+0x2b40>
   4b794:	ldr	w0, [sp, #176]
   4b798:	ldr	x1, [sp, #224]
   4b79c:	add	x4, x1, x0
   4b7a0:	ldr	w1, [sp, #172]
   4b7a4:	ldr	x0, [sp, #40]
   4b7a8:	add	x0, x0, #0x800
   4b7ac:	mov	x3, x0
   4b7b0:	ldr	x2, [sp, #40]
   4b7b4:	mov	x0, x4
   4b7b8:	bl	49ee8 <__asan_internal_strnlen@@Base+0x1244>
   4b7bc:	cmp	w0, #0x0
   4b7c0:	b.ne	4b7cc <__asan_internal_strnlen@@Base+0x2b28>  // b.any
   4b7c4:	mov	w0, #0x0                   	// #0
   4b7c8:	b	4b7e4 <__asan_internal_strnlen@@Base+0x2b40>
   4b7cc:	ldr	x0, [sp, #40]
   4b7d0:	str	x0, [sp, #240]
   4b7d4:	ldr	x0, [sp, #40]
   4b7d8:	add	x0, x0, #0x800
   4b7dc:	str	x0, [sp, #232]
   4b7e0:	b	4b7e8 <__asan_internal_strnlen@@Base+0x2b44>
   4b7e4:	b	4bf24 <__asan_internal_strnlen@@Base+0x3280>
   4b7e8:	add	x2, sp, #0x54
   4b7ec:	add	x1, sp, #0x58
   4b7f0:	add	x0, sp, #0x38
   4b7f4:	mov	x3, x2
   4b7f8:	mov	x2, x1
   4b7fc:	ldr	x1, [sp, #192]
   4b800:	bl	49df4 <__asan_internal_strnlen@@Base+0x1150>
   4b804:	cmp	w0, #0x0
   4b808:	b.ne	4b814 <__asan_internal_strnlen@@Base+0x2b70>  // b.any
   4b80c:	mov	w0, #0x0                   	// #0
   4b810:	b	4bf24 <__asan_internal_strnlen@@Base+0x3280>
   4b814:	ldr	x0, [sp, #88]
   4b818:	and	x0, x0, #0xff
   4b81c:	lsl	x0, x0, #1
   4b820:	ldr	x1, [sp, #240]
   4b824:	add	x0, x1, x0
   4b828:	ldrh	w0, [x0]
   4b82c:	strh	w0, [sp, #122]
   4b830:	ldrh	w0, [sp, #122]
   4b834:	lsr	w0, w0, #9
   4b838:	and	w0, w0, #0xffff
   4b83c:	and	w0, w0, #0x7
   4b840:	str	w0, [sp, #116]
   4b844:	ldrh	w0, [sp, #122]
   4b848:	and	w0, w0, #0x1ff
   4b84c:	strh	w0, [sp, #114]
   4b850:	ldrh	w0, [sp, #122]
   4b854:	and	w0, w0, #0x1000
   4b858:	cmp	w0, #0x0
   4b85c:	b.ne	4b894 <__asan_internal_strnlen@@Base+0x2bf0>  // b.any
   4b860:	ldrh	w0, [sp, #114]
   4b864:	str	w0, [sp, #220]
   4b868:	ldr	x1, [sp, #88]
   4b86c:	ldr	w0, [sp, #116]
   4b870:	add	w0, w0, #0x1
   4b874:	lsr	x0, x1, x0
   4b878:	str	x0, [sp, #88]
   4b87c:	ldr	w1, [sp, #84]
   4b880:	ldr	w0, [sp, #116]
   4b884:	sub	w0, w1, w0
   4b888:	sub	w0, w0, #0x1
   4b88c:	str	w0, [sp, #84]
   4b890:	b	4b920 <__asan_internal_strnlen@@Base+0x2c7c>
   4b894:	ldrh	w0, [sp, #114]
   4b898:	add	w0, w0, #0x100
   4b89c:	sxtw	x1, w0
   4b8a0:	ldr	x0, [sp, #88]
   4b8a4:	lsr	x2, x0, #8
   4b8a8:	ldr	w0, [sp, #116]
   4b8ac:	mov	w3, #0x1                   	// #1
   4b8b0:	lsl	w0, w3, w0
   4b8b4:	sub	w0, w0, #0x1
   4b8b8:	mov	w0, w0
   4b8bc:	and	x0, x2, x0
   4b8c0:	add	x0, x1, x0
   4b8c4:	lsl	x0, x0, #1
   4b8c8:	ldr	x1, [sp, #240]
   4b8cc:	add	x0, x1, x0
   4b8d0:	ldrh	w0, [x0]
   4b8d4:	strh	w0, [sp, #122]
   4b8d8:	ldrh	w0, [sp, #122]
   4b8dc:	lsr	w0, w0, #9
   4b8e0:	and	w0, w0, #0xffff
   4b8e4:	and	w0, w0, #0x7
   4b8e8:	str	w0, [sp, #116]
   4b8ec:	ldrh	w0, [sp, #122]
   4b8f0:	and	w0, w0, #0x1ff
   4b8f4:	str	w0, [sp, #220]
   4b8f8:	ldr	x1, [sp, #88]
   4b8fc:	ldr	w0, [sp, #116]
   4b900:	add	w0, w0, #0x8
   4b904:	lsr	x0, x1, x0
   4b908:	str	x0, [sp, #88]
   4b90c:	ldr	w1, [sp, #84]
   4b910:	ldr	w0, [sp, #116]
   4b914:	sub	w0, w1, w0
   4b918:	sub	w0, w0, #0x8
   4b91c:	str	w0, [sp, #84]
   4b920:	ldr	w0, [sp, #220]
   4b924:	cmp	w0, #0xff
   4b928:	b.hi	4b97c <__asan_internal_strnlen@@Base+0x2cd8>  // b.pmore
   4b92c:	ldr	x1, [sp, #32]
   4b930:	ldr	x0, [sp, #184]
   4b934:	cmp	x1, x0
   4b938:	cset	w0, eq  // eq = none
   4b93c:	and	w0, w0, #0xff
   4b940:	and	x0, x0, #0xff
   4b944:	cmp	x0, #0x0
   4b948:	b.eq	4b958 <__asan_internal_strnlen@@Base+0x2cb4>  // b.none
   4b94c:	bl	49dec <__asan_internal_strnlen@@Base+0x1148>
   4b950:	mov	w0, #0x0                   	// #0
   4b954:	b	4bf24 <__asan_internal_strnlen@@Base+0x3280>
   4b958:	ldr	x0, [sp, #32]
   4b95c:	add	x1, x0, #0x1
   4b960:	str	x1, [sp, #32]
   4b964:	ldr	w1, [sp, #220]
   4b968:	and	w1, w1, #0xff
   4b96c:	strb	w1, [x0]
   4b970:	ldr	x0, [sp, #32]
   4b974:	prfm	pstl1keep, [x0]
   4b978:	b	4b7e8 <__asan_internal_strnlen@@Base+0x2b44>
   4b97c:	ldr	w0, [sp, #220]
   4b980:	cmp	w0, #0x100
   4b984:	b.ne	4b98c <__asan_internal_strnlen@@Base+0x2ce8>  // b.any
   4b988:	b	4bed4 <__asan_internal_strnlen@@Base+0x3230>
   4b98c:	ldr	w0, [sp, #220]
   4b990:	cmp	w0, #0x108
   4b994:	b.hi	4b9a8 <__asan_internal_strnlen@@Base+0x2d04>  // b.pmore
   4b998:	ldr	w0, [sp, #220]
   4b99c:	sub	w0, w0, #0xfe
   4b9a0:	str	w0, [sp, #212]
   4b9a4:	b	4babc <__asan_internal_strnlen@@Base+0x2e18>
   4b9a8:	ldr	w0, [sp, #220]
   4b9ac:	cmp	w0, #0x11d
   4b9b0:	b.ne	4b9c0 <__asan_internal_strnlen@@Base+0x2d1c>  // b.any
   4b9b4:	mov	w0, #0x102                 	// #258
   4b9b8:	str	w0, [sp, #212]
   4b9bc:	b	4babc <__asan_internal_strnlen@@Base+0x2e18>
   4b9c0:	ldr	w0, [sp, #220]
   4b9c4:	cmp	w0, #0x11d
   4b9c8:	cset	w0, hi  // hi = pmore
   4b9cc:	and	w0, w0, #0xff
   4b9d0:	and	x0, x0, #0xff
   4b9d4:	cmp	x0, #0x0
   4b9d8:	b.eq	4b9e8 <__asan_internal_strnlen@@Base+0x2d44>  // b.none
   4b9dc:	bl	49dec <__asan_internal_strnlen@@Base+0x1148>
   4b9e0:	mov	w0, #0x0                   	// #0
   4b9e4:	b	4bf24 <__asan_internal_strnlen@@Base+0x3280>
   4b9e8:	add	x2, sp, #0x54
   4b9ec:	add	x1, sp, #0x58
   4b9f0:	add	x0, sp, #0x38
   4b9f4:	mov	x3, x2
   4b9f8:	mov	x2, x1
   4b9fc:	ldr	x1, [sp, #192]
   4ba00:	bl	49df4 <__asan_internal_strnlen@@Base+0x1150>
   4ba04:	cmp	w0, #0x0
   4ba08:	b.ne	4ba14 <__asan_internal_strnlen@@Base+0x2d70>  // b.any
   4ba0c:	mov	w0, #0x0                   	// #0
   4ba10:	b	4bf24 <__asan_internal_strnlen@@Base+0x3280>
   4ba14:	ldr	w0, [sp, #220]
   4ba18:	sub	w0, w0, #0x109
   4ba1c:	str	w0, [sp, #220]
   4ba20:	ldr	w0, [sp, #220]
   4ba24:	lsr	w0, w0, #2
   4ba28:	add	w0, w0, #0x1
   4ba2c:	str	w0, [sp, #108]
   4ba30:	ldr	w0, [sp, #220]
   4ba34:	and	w1, w0, #0x3
   4ba38:	ldr	w0, [sp, #108]
   4ba3c:	lsl	w0, w1, w0
   4ba40:	str	w0, [sp, #212]
   4ba44:	ldr	w0, [sp, #212]
   4ba48:	add	w0, w0, #0xb
   4ba4c:	str	w0, [sp, #212]
   4ba50:	ldr	w0, [sp, #108]
   4ba54:	sub	w0, w0, #0x1
   4ba58:	mov	w1, #0x1                   	// #1
   4ba5c:	lsl	w0, w1, w0
   4ba60:	sub	w0, w0, #0x1
   4ba64:	lsl	w0, w0, #3
   4ba68:	ldr	w1, [sp, #212]
   4ba6c:	add	w0, w1, w0
   4ba70:	str	w0, [sp, #212]
   4ba74:	ldr	x0, [sp, #88]
   4ba78:	mov	w2, w0
   4ba7c:	ldr	w0, [sp, #108]
   4ba80:	mov	w1, #0xffffffff            	// #-1
   4ba84:	lsl	w0, w1, w0
   4ba88:	mvn	w0, w0
   4ba8c:	and	w0, w2, w0
   4ba90:	ldr	w1, [sp, #212]
   4ba94:	add	w0, w1, w0
   4ba98:	str	w0, [sp, #212]
   4ba9c:	ldr	x1, [sp, #88]
   4baa0:	ldr	w0, [sp, #108]
   4baa4:	lsr	x0, x1, x0
   4baa8:	str	x0, [sp, #88]
   4baac:	ldr	w1, [sp, #84]
   4bab0:	ldr	w0, [sp, #108]
   4bab4:	sub	w0, w1, w0
   4bab8:	str	w0, [sp, #84]
   4babc:	add	x2, sp, #0x54
   4bac0:	add	x1, sp, #0x58
   4bac4:	add	x0, sp, #0x38
   4bac8:	mov	x3, x2
   4bacc:	mov	x2, x1
   4bad0:	ldr	x1, [sp, #192]
   4bad4:	bl	49df4 <__asan_internal_strnlen@@Base+0x1150>
   4bad8:	cmp	w0, #0x0
   4badc:	b.ne	4bae8 <__asan_internal_strnlen@@Base+0x2e44>  // b.any
   4bae0:	mov	w0, #0x0                   	// #0
   4bae4:	b	4bf24 <__asan_internal_strnlen@@Base+0x3280>
   4bae8:	ldr	x0, [sp, #88]
   4baec:	and	x0, x0, #0xff
   4baf0:	lsl	x0, x0, #1
   4baf4:	ldr	x1, [sp, #232]
   4baf8:	add	x0, x1, x0
   4bafc:	ldrh	w0, [x0]
   4bb00:	strh	w0, [sp, #122]
   4bb04:	ldrh	w0, [sp, #122]
   4bb08:	lsr	w0, w0, #9
   4bb0c:	and	w0, w0, #0xffff
   4bb10:	and	w0, w0, #0x7
   4bb14:	str	w0, [sp, #116]
   4bb18:	ldrh	w0, [sp, #122]
   4bb1c:	and	w0, w0, #0x1ff
   4bb20:	strh	w0, [sp, #114]
   4bb24:	ldrh	w0, [sp, #122]
   4bb28:	and	w0, w0, #0x1000
   4bb2c:	cmp	w0, #0x0
   4bb30:	b.ne	4bb68 <__asan_internal_strnlen@@Base+0x2ec4>  // b.any
   4bb34:	ldrh	w0, [sp, #114]
   4bb38:	str	w0, [sp, #216]
   4bb3c:	ldr	x1, [sp, #88]
   4bb40:	ldr	w0, [sp, #116]
   4bb44:	add	w0, w0, #0x1
   4bb48:	lsr	x0, x1, x0
   4bb4c:	str	x0, [sp, #88]
   4bb50:	ldr	w1, [sp, #84]
   4bb54:	ldr	w0, [sp, #116]
   4bb58:	sub	w0, w1, w0
   4bb5c:	sub	w0, w0, #0x1
   4bb60:	str	w0, [sp, #84]
   4bb64:	b	4bbf4 <__asan_internal_strnlen@@Base+0x2f50>
   4bb68:	ldrh	w0, [sp, #114]
   4bb6c:	add	w0, w0, #0x100
   4bb70:	sxtw	x1, w0
   4bb74:	ldr	x0, [sp, #88]
   4bb78:	lsr	x2, x0, #8
   4bb7c:	ldr	w0, [sp, #116]
   4bb80:	mov	w3, #0x1                   	// #1
   4bb84:	lsl	w0, w3, w0
   4bb88:	sub	w0, w0, #0x1
   4bb8c:	mov	w0, w0
   4bb90:	and	x0, x2, x0
   4bb94:	add	x0, x1, x0
   4bb98:	lsl	x0, x0, #1
   4bb9c:	ldr	x1, [sp, #232]
   4bba0:	add	x0, x1, x0
   4bba4:	ldrh	w0, [x0]
   4bba8:	strh	w0, [sp, #122]
   4bbac:	ldrh	w0, [sp, #122]
   4bbb0:	lsr	w0, w0, #9
   4bbb4:	and	w0, w0, #0xffff
   4bbb8:	and	w0, w0, #0x7
   4bbbc:	str	w0, [sp, #116]
   4bbc0:	ldrh	w0, [sp, #122]
   4bbc4:	and	w0, w0, #0x1ff
   4bbc8:	str	w0, [sp, #216]
   4bbcc:	ldr	x1, [sp, #88]
   4bbd0:	ldr	w0, [sp, #116]
   4bbd4:	add	w0, w0, #0x8
   4bbd8:	lsr	x0, x1, x0
   4bbdc:	str	x0, [sp, #88]
   4bbe0:	ldr	w1, [sp, #84]
   4bbe4:	ldr	w0, [sp, #116]
   4bbe8:	sub	w0, w1, w0
   4bbec:	sub	w0, w0, #0x8
   4bbf0:	str	w0, [sp, #84]
   4bbf4:	ldr	w0, [sp, #216]
   4bbf8:	cmp	w0, #0x0
   4bbfc:	b.ne	4bc98 <__asan_internal_strnlen@@Base+0x2ff4>  // b.any
   4bc00:	ldr	x1, [sp, #32]
   4bc04:	ldr	x0, [sp, #200]
   4bc08:	cmp	x1, x0
   4bc0c:	cset	w0, eq  // eq = none
   4bc10:	and	w0, w0, #0xff
   4bc14:	and	x0, x0, #0xff
   4bc18:	cmp	x0, #0x0
   4bc1c:	b.eq	4bc2c <__asan_internal_strnlen@@Base+0x2f88>  // b.none
   4bc20:	bl	49dec <__asan_internal_strnlen@@Base+0x1148>
   4bc24:	mov	w0, #0x0                   	// #0
   4bc28:	b	4bf24 <__asan_internal_strnlen@@Base+0x3280>
   4bc2c:	ldr	x1, [sp, #184]
   4bc30:	ldr	x0, [sp, #32]
   4bc34:	sub	x0, x1, x0
   4bc38:	mov	w1, w0
   4bc3c:	ldr	w0, [sp, #212]
   4bc40:	cmp	w0, w1
   4bc44:	cset	w0, hi  // hi = pmore
   4bc48:	and	w0, w0, #0xff
   4bc4c:	and	x0, x0, #0xff
   4bc50:	cmp	x0, #0x0
   4bc54:	b.eq	4bc64 <__asan_internal_strnlen@@Base+0x2fc0>  // b.none
   4bc58:	bl	49dec <__asan_internal_strnlen@@Base+0x1148>
   4bc5c:	mov	w0, #0x0                   	// #0
   4bc60:	b	4bf24 <__asan_internal_strnlen@@Base+0x3280>
   4bc64:	ldr	x0, [sp, #32]
   4bc68:	sub	x0, x0, #0x1
   4bc6c:	ldrb	w0, [x0]
   4bc70:	mov	w1, w0
   4bc74:	ldr	w0, [sp, #212]
   4bc78:	mov	x2, x0
   4bc7c:	ldr	x0, [sp, #32]
   4bc80:	bl	6ab0 <__asan_internal_memset@plt>
   4bc84:	ldr	w0, [sp, #212]
   4bc88:	ldr	x1, [sp, #32]
   4bc8c:	add	x0, x1, x0
   4bc90:	str	x0, [sp, #32]
   4bc94:	b	4b7e8 <__asan_internal_strnlen@@Base+0x2b44>
   4bc98:	ldr	w0, [sp, #216]
   4bc9c:	cmp	w0, #0x1d
   4bca0:	cset	w0, hi  // hi = pmore
   4bca4:	and	w0, w0, #0xff
   4bca8:	and	x0, x0, #0xff
   4bcac:	cmp	x0, #0x0
   4bcb0:	b.eq	4bcc0 <__asan_internal_strnlen@@Base+0x301c>  // b.none
   4bcb4:	bl	49dec <__asan_internal_strnlen@@Base+0x1148>
   4bcb8:	mov	w0, #0x0                   	// #0
   4bcbc:	b	4bf24 <__asan_internal_strnlen@@Base+0x3280>
   4bcc0:	ldr	w0, [sp, #216]
   4bcc4:	cmp	w0, #0x3
   4bcc8:	b.hi	4bcdc <__asan_internal_strnlen@@Base+0x3038>  // b.pmore
   4bccc:	ldr	w0, [sp, #216]
   4bcd0:	add	w0, w0, #0x1
   4bcd4:	str	w0, [sp, #216]
   4bcd8:	b	4bdb0 <__asan_internal_strnlen@@Base+0x310c>
   4bcdc:	add	x2, sp, #0x54
   4bce0:	add	x1, sp, #0x58
   4bce4:	add	x0, sp, #0x38
   4bce8:	mov	x3, x2
   4bcec:	mov	x2, x1
   4bcf0:	ldr	x1, [sp, #192]
   4bcf4:	bl	49df4 <__asan_internal_strnlen@@Base+0x1150>
   4bcf8:	cmp	w0, #0x0
   4bcfc:	b.ne	4bd08 <__asan_internal_strnlen@@Base+0x3064>  // b.any
   4bd00:	mov	w0, #0x0                   	// #0
   4bd04:	b	4bf24 <__asan_internal_strnlen@@Base+0x3280>
   4bd08:	ldr	w0, [sp, #216]
   4bd0c:	sub	w0, w0, #0x4
   4bd10:	str	w0, [sp, #216]
   4bd14:	ldr	w0, [sp, #216]
   4bd18:	lsr	w0, w0, #1
   4bd1c:	add	w0, w0, #0x1
   4bd20:	str	w0, [sp, #104]
   4bd24:	ldr	w0, [sp, #216]
   4bd28:	and	w1, w0, #0x1
   4bd2c:	ldr	w0, [sp, #104]
   4bd30:	lsl	w0, w1, w0
   4bd34:	str	w0, [sp, #216]
   4bd38:	ldr	w0, [sp, #216]
   4bd3c:	add	w0, w0, #0x5
   4bd40:	str	w0, [sp, #216]
   4bd44:	ldr	w0, [sp, #104]
   4bd48:	sub	w0, w0, #0x1
   4bd4c:	mov	w1, #0x1                   	// #1
   4bd50:	lsl	w0, w1, w0
   4bd54:	sub	w0, w0, #0x1
   4bd58:	lsl	w0, w0, #2
   4bd5c:	ldr	w1, [sp, #216]
   4bd60:	add	w0, w1, w0
   4bd64:	str	w0, [sp, #216]
   4bd68:	ldr	x0, [sp, #88]
   4bd6c:	mov	w2, w0
   4bd70:	ldr	w0, [sp, #104]
   4bd74:	mov	w1, #0xffffffff            	// #-1
   4bd78:	lsl	w0, w1, w0
   4bd7c:	mvn	w0, w0
   4bd80:	and	w0, w2, w0
   4bd84:	ldr	w1, [sp, #216]
   4bd88:	add	w0, w1, w0
   4bd8c:	str	w0, [sp, #216]
   4bd90:	ldr	x1, [sp, #88]
   4bd94:	ldr	w0, [sp, #104]
   4bd98:	lsr	x0, x1, x0
   4bd9c:	str	x0, [sp, #88]
   4bda0:	ldr	w1, [sp, #84]
   4bda4:	ldr	w0, [sp, #104]
   4bda8:	sub	w0, w1, w0
   4bdac:	str	w0, [sp, #84]
   4bdb0:	ldr	x1, [sp, #32]
   4bdb4:	ldr	x0, [sp, #200]
   4bdb8:	sub	x0, x1, x0
   4bdbc:	mov	w1, w0
   4bdc0:	ldr	w0, [sp, #216]
   4bdc4:	cmp	w0, w1
   4bdc8:	cset	w0, hi  // hi = pmore
   4bdcc:	and	w0, w0, #0xff
   4bdd0:	and	x0, x0, #0xff
   4bdd4:	cmp	x0, #0x0
   4bdd8:	b.eq	4bde8 <__asan_internal_strnlen@@Base+0x3144>  // b.none
   4bddc:	bl	49dec <__asan_internal_strnlen@@Base+0x1148>
   4bde0:	mov	w0, #0x0                   	// #0
   4bde4:	b	4bf24 <__asan_internal_strnlen@@Base+0x3280>
   4bde8:	ldr	x1, [sp, #184]
   4bdec:	ldr	x0, [sp, #32]
   4bdf0:	sub	x0, x1, x0
   4bdf4:	mov	w1, w0
   4bdf8:	ldr	w0, [sp, #212]
   4bdfc:	cmp	w0, w1
   4be00:	cset	w0, hi  // hi = pmore
   4be04:	and	w0, w0, #0xff
   4be08:	and	x0, x0, #0xff
   4be0c:	cmp	x0, #0x0
   4be10:	b.eq	4be20 <__asan_internal_strnlen@@Base+0x317c>  // b.none
   4be14:	bl	49dec <__asan_internal_strnlen@@Base+0x1148>
   4be18:	mov	w0, #0x0                   	// #0
   4be1c:	b	4bf24 <__asan_internal_strnlen@@Base+0x3280>
   4be20:	ldr	w1, [sp, #216]
   4be24:	ldr	w0, [sp, #212]
   4be28:	cmp	w1, w0
   4be2c:	b.cc	4bec4 <__asan_internal_strnlen@@Base+0x3220>  // b.lo, b.ul, b.last
   4be30:	ldr	w0, [sp, #216]
   4be34:	neg	x0, x0
   4be38:	ldr	x1, [sp, #32]
   4be3c:	add	x0, x1, x0
   4be40:	ldr	w1, [sp, #212]
   4be44:	mov	x2, x1
   4be48:	mov	x1, x0
   4be4c:	ldr	x0, [sp, #32]
   4be50:	bl	6a10 <__asan_internal_memcpy@plt>
   4be54:	ldr	w0, [sp, #212]
   4be58:	ldr	x1, [sp, #32]
   4be5c:	add	x0, x1, x0
   4be60:	str	x0, [sp, #32]
   4be64:	b	4b7e8 <__asan_internal_strnlen@@Base+0x2b44>
   4be68:	ldr	w0, [sp, #212]
   4be6c:	ldr	w2, [sp, #216]
   4be70:	ldr	w1, [sp, #216]
   4be74:	cmp	w2, w0
   4be78:	csel	w0, w1, w0, ls  // ls = plast
   4be7c:	str	w0, [sp, #100]
   4be80:	ldr	w0, [sp, #216]
   4be84:	neg	x0, x0
   4be88:	ldr	x1, [sp, #32]
   4be8c:	add	x0, x1, x0
   4be90:	ldr	w1, [sp, #100]
   4be94:	mov	x2, x1
   4be98:	mov	x1, x0
   4be9c:	ldr	x0, [sp, #32]
   4bea0:	bl	6a10 <__asan_internal_memcpy@plt>
   4bea4:	ldr	w1, [sp, #212]
   4bea8:	ldr	w0, [sp, #100]
   4beac:	sub	w0, w1, w0
   4beb0:	str	w0, [sp, #212]
   4beb4:	ldr	w0, [sp, #100]
   4beb8:	ldr	x1, [sp, #32]
   4bebc:	add	x0, x1, x0
   4bec0:	str	x0, [sp, #32]
   4bec4:	ldr	w0, [sp, #212]
   4bec8:	cmp	w0, #0x0
   4becc:	b.ne	4be68 <__asan_internal_strnlen@@Base+0x31c4>  // b.any
   4bed0:	b	4b7e8 <__asan_internal_strnlen@@Base+0x2b44>
   4bed4:	ldr	w0, [sp, #252]
   4bed8:	cmp	w0, #0x0
   4bedc:	b.eq	4a9d0 <__asan_internal_strnlen@@Base+0x1d2c>  // b.none
   4bee0:	ldr	x0, [sp, #56]
   4bee4:	ldr	x1, [sp, #192]
   4bee8:	sub	x0, x1, x0
   4beec:	cmp	x0, #0x4
   4bef0:	b.gt	4a850 <__asan_internal_strnlen@@Base+0x1bac>
   4bef4:	ldr	x1, [sp, #32]
   4bef8:	ldr	x0, [sp, #184]
   4befc:	cmp	x1, x0
   4bf00:	cset	w0, ne  // ne = any
   4bf04:	and	w0, w0, #0xff
   4bf08:	and	x0, x0, #0xff
   4bf0c:	cmp	x0, #0x0
   4bf10:	b.eq	4bf20 <__asan_internal_strnlen@@Base+0x327c>  // b.none
   4bf14:	bl	49dec <__asan_internal_strnlen@@Base+0x1148>
   4bf18:	mov	w0, #0x0                   	// #0
   4bf1c:	b	4bf24 <__asan_internal_strnlen@@Base+0x3280>
   4bf20:	mov	w0, #0x1                   	// #1
   4bf24:	ldp	x29, x30, [sp], #256
   4bf28:	ret
   4bf2c:	stp	x29, x30, [sp, #-80]!
   4bf30:	mov	x29, sp
   4bf34:	str	x0, [sp, #40]
   4bf38:	str	x1, [sp, #32]
   4bf3c:	str	x2, [sp, #24]
   4bf40:	str	wzr, [sp, #72]
   4bf44:	str	wzr, [sp, #76]
   4bf48:	b	4bf78 <__asan_internal_strnlen@@Base+0x32d4>
   4bf4c:	ldr	w0, [sp, #72]
   4bf50:	lsl	w0, w0, #8
   4bf54:	ldr	w1, [sp, #76]
   4bf58:	ldr	x2, [sp, #40]
   4bf5c:	add	x1, x2, x1
   4bf60:	ldrb	w1, [x1]
   4bf64:	orr	w0, w0, w1
   4bf68:	str	w0, [sp, #72]
   4bf6c:	ldr	w0, [sp, #76]
   4bf70:	add	w0, w0, #0x1
   4bf74:	str	w0, [sp, #76]
   4bf78:	ldr	w0, [sp, #76]
   4bf7c:	cmp	w0, #0x3
   4bf80:	b.ls	4bf4c <__asan_internal_strnlen@@Base+0x32a8>  // b.plast
   4bf84:	mov	w0, #0x1                   	// #1
   4bf88:	str	w0, [sp, #60]
   4bf8c:	str	wzr, [sp, #56]
   4bf90:	ldr	x0, [sp, #32]
   4bf94:	str	x0, [sp, #64]
   4bf98:	ldr	x0, [sp, #24]
   4bf9c:	str	x0, [sp, #48]
   4bfa0:	b	4c328 <__asan_internal_strnlen@@Base+0x3684>
   4bfa4:	str	wzr, [sp, #76]
   4bfa8:	b	4c2b8 <__asan_internal_strnlen@@Base+0x3614>
   4bfac:	ldr	x0, [sp, #64]
   4bfb0:	add	x1, x0, #0x1
   4bfb4:	str	x1, [sp, #64]
   4bfb8:	ldrb	w0, [x0]
   4bfbc:	mov	w1, w0
   4bfc0:	ldr	w0, [sp, #60]
   4bfc4:	add	w0, w0, w1
   4bfc8:	str	w0, [sp, #60]
   4bfcc:	ldr	w1, [sp, #56]
   4bfd0:	ldr	w0, [sp, #60]
   4bfd4:	add	w0, w1, w0
   4bfd8:	str	w0, [sp, #56]
   4bfdc:	ldr	x0, [sp, #64]
   4bfe0:	add	x1, x0, #0x1
   4bfe4:	str	x1, [sp, #64]
   4bfe8:	ldrb	w0, [x0]
   4bfec:	mov	w1, w0
   4bff0:	ldr	w0, [sp, #60]
   4bff4:	add	w0, w0, w1
   4bff8:	str	w0, [sp, #60]
   4bffc:	ldr	w1, [sp, #56]
   4c000:	ldr	w0, [sp, #60]
   4c004:	add	w0, w1, w0
   4c008:	str	w0, [sp, #56]
   4c00c:	ldr	x0, [sp, #64]
   4c010:	add	x1, x0, #0x1
   4c014:	str	x1, [sp, #64]
   4c018:	ldrb	w0, [x0]
   4c01c:	mov	w1, w0
   4c020:	ldr	w0, [sp, #60]
   4c024:	add	w0, w0, w1
   4c028:	str	w0, [sp, #60]
   4c02c:	ldr	w1, [sp, #56]
   4c030:	ldr	w0, [sp, #60]
   4c034:	add	w0, w1, w0
   4c038:	str	w0, [sp, #56]
   4c03c:	ldr	x0, [sp, #64]
   4c040:	add	x1, x0, #0x1
   4c044:	str	x1, [sp, #64]
   4c048:	ldrb	w0, [x0]
   4c04c:	mov	w1, w0
   4c050:	ldr	w0, [sp, #60]
   4c054:	add	w0, w0, w1
   4c058:	str	w0, [sp, #60]
   4c05c:	ldr	w1, [sp, #56]
   4c060:	ldr	w0, [sp, #60]
   4c064:	add	w0, w1, w0
   4c068:	str	w0, [sp, #56]
   4c06c:	ldr	x0, [sp, #64]
   4c070:	add	x1, x0, #0x1
   4c074:	str	x1, [sp, #64]
   4c078:	ldrb	w0, [x0]
   4c07c:	mov	w1, w0
   4c080:	ldr	w0, [sp, #60]
   4c084:	add	w0, w0, w1
   4c088:	str	w0, [sp, #60]
   4c08c:	ldr	w1, [sp, #56]
   4c090:	ldr	w0, [sp, #60]
   4c094:	add	w0, w1, w0
   4c098:	str	w0, [sp, #56]
   4c09c:	ldr	x0, [sp, #64]
   4c0a0:	add	x1, x0, #0x1
   4c0a4:	str	x1, [sp, #64]
   4c0a8:	ldrb	w0, [x0]
   4c0ac:	mov	w1, w0
   4c0b0:	ldr	w0, [sp, #60]
   4c0b4:	add	w0, w0, w1
   4c0b8:	str	w0, [sp, #60]
   4c0bc:	ldr	w1, [sp, #56]
   4c0c0:	ldr	w0, [sp, #60]
   4c0c4:	add	w0, w1, w0
   4c0c8:	str	w0, [sp, #56]
   4c0cc:	ldr	x0, [sp, #64]
   4c0d0:	add	x1, x0, #0x1
   4c0d4:	str	x1, [sp, #64]
   4c0d8:	ldrb	w0, [x0]
   4c0dc:	mov	w1, w0
   4c0e0:	ldr	w0, [sp, #60]
   4c0e4:	add	w0, w0, w1
   4c0e8:	str	w0, [sp, #60]
   4c0ec:	ldr	w1, [sp, #56]
   4c0f0:	ldr	w0, [sp, #60]
   4c0f4:	add	w0, w1, w0
   4c0f8:	str	w0, [sp, #56]
   4c0fc:	ldr	x0, [sp, #64]
   4c100:	add	x1, x0, #0x1
   4c104:	str	x1, [sp, #64]
   4c108:	ldrb	w0, [x0]
   4c10c:	mov	w1, w0
   4c110:	ldr	w0, [sp, #60]
   4c114:	add	w0, w0, w1
   4c118:	str	w0, [sp, #60]
   4c11c:	ldr	w1, [sp, #56]
   4c120:	ldr	w0, [sp, #60]
   4c124:	add	w0, w1, w0
   4c128:	str	w0, [sp, #56]
   4c12c:	ldr	x0, [sp, #64]
   4c130:	add	x1, x0, #0x1
   4c134:	str	x1, [sp, #64]
   4c138:	ldrb	w0, [x0]
   4c13c:	mov	w1, w0
   4c140:	ldr	w0, [sp, #60]
   4c144:	add	w0, w0, w1
   4c148:	str	w0, [sp, #60]
   4c14c:	ldr	w1, [sp, #56]
   4c150:	ldr	w0, [sp, #60]
   4c154:	add	w0, w1, w0
   4c158:	str	w0, [sp, #56]
   4c15c:	ldr	x0, [sp, #64]
   4c160:	add	x1, x0, #0x1
   4c164:	str	x1, [sp, #64]
   4c168:	ldrb	w0, [x0]
   4c16c:	mov	w1, w0
   4c170:	ldr	w0, [sp, #60]
   4c174:	add	w0, w0, w1
   4c178:	str	w0, [sp, #60]
   4c17c:	ldr	w1, [sp, #56]
   4c180:	ldr	w0, [sp, #60]
   4c184:	add	w0, w1, w0
   4c188:	str	w0, [sp, #56]
   4c18c:	ldr	x0, [sp, #64]
   4c190:	add	x1, x0, #0x1
   4c194:	str	x1, [sp, #64]
   4c198:	ldrb	w0, [x0]
   4c19c:	mov	w1, w0
   4c1a0:	ldr	w0, [sp, #60]
   4c1a4:	add	w0, w0, w1
   4c1a8:	str	w0, [sp, #60]
   4c1ac:	ldr	w1, [sp, #56]
   4c1b0:	ldr	w0, [sp, #60]
   4c1b4:	add	w0, w1, w0
   4c1b8:	str	w0, [sp, #56]
   4c1bc:	ldr	x0, [sp, #64]
   4c1c0:	add	x1, x0, #0x1
   4c1c4:	str	x1, [sp, #64]
   4c1c8:	ldrb	w0, [x0]
   4c1cc:	mov	w1, w0
   4c1d0:	ldr	w0, [sp, #60]
   4c1d4:	add	w0, w0, w1
   4c1d8:	str	w0, [sp, #60]
   4c1dc:	ldr	w1, [sp, #56]
   4c1e0:	ldr	w0, [sp, #60]
   4c1e4:	add	w0, w1, w0
   4c1e8:	str	w0, [sp, #56]
   4c1ec:	ldr	x0, [sp, #64]
   4c1f0:	add	x1, x0, #0x1
   4c1f4:	str	x1, [sp, #64]
   4c1f8:	ldrb	w0, [x0]
   4c1fc:	mov	w1, w0
   4c200:	ldr	w0, [sp, #60]
   4c204:	add	w0, w0, w1
   4c208:	str	w0, [sp, #60]
   4c20c:	ldr	w1, [sp, #56]
   4c210:	ldr	w0, [sp, #60]
   4c214:	add	w0, w1, w0
   4c218:	str	w0, [sp, #56]
   4c21c:	ldr	x0, [sp, #64]
   4c220:	add	x1, x0, #0x1
   4c224:	str	x1, [sp, #64]
   4c228:	ldrb	w0, [x0]
   4c22c:	mov	w1, w0
   4c230:	ldr	w0, [sp, #60]
   4c234:	add	w0, w0, w1
   4c238:	str	w0, [sp, #60]
   4c23c:	ldr	w1, [sp, #56]
   4c240:	ldr	w0, [sp, #60]
   4c244:	add	w0, w1, w0
   4c248:	str	w0, [sp, #56]
   4c24c:	ldr	x0, [sp, #64]
   4c250:	add	x1, x0, #0x1
   4c254:	str	x1, [sp, #64]
   4c258:	ldrb	w0, [x0]
   4c25c:	mov	w1, w0
   4c260:	ldr	w0, [sp, #60]
   4c264:	add	w0, w0, w1
   4c268:	str	w0, [sp, #60]
   4c26c:	ldr	w1, [sp, #56]
   4c270:	ldr	w0, [sp, #60]
   4c274:	add	w0, w1, w0
   4c278:	str	w0, [sp, #56]
   4c27c:	ldr	x0, [sp, #64]
   4c280:	add	x1, x0, #0x1
   4c284:	str	x1, [sp, #64]
   4c288:	ldrb	w0, [x0]
   4c28c:	mov	w1, w0
   4c290:	ldr	w0, [sp, #60]
   4c294:	add	w0, w0, w1
   4c298:	str	w0, [sp, #60]
   4c29c:	ldr	w1, [sp, #56]
   4c2a0:	ldr	w0, [sp, #60]
   4c2a4:	add	w0, w1, w0
   4c2a8:	str	w0, [sp, #56]
   4c2ac:	ldr	w0, [sp, #76]
   4c2b0:	add	w0, w0, #0x10
   4c2b4:	str	w0, [sp, #76]
   4c2b8:	ldr	w1, [sp, #76]
   4c2bc:	mov	w0, #0x15af                	// #5551
   4c2c0:	cmp	w1, w0
   4c2c4:	b.ls	4bfac <__asan_internal_strnlen@@Base+0x3308>  // b.plast
   4c2c8:	ldr	x1, [sp, #48]
   4c2cc:	mov	x0, #0xffffffffffffea50    	// #-5552
   4c2d0:	add	x0, x1, x0
   4c2d4:	str	x0, [sp, #48]
   4c2d8:	ldr	w0, [sp, #60]
   4c2dc:	mov	w1, #0x8071                	// #32881
   4c2e0:	movk	w1, #0x8007, lsl #16
   4c2e4:	umull	x1, w0, w1
   4c2e8:	lsr	x1, x1, #32
   4c2ec:	lsr	w2, w1, #15
   4c2f0:	mov	w1, #0xfff1                	// #65521
   4c2f4:	mul	w1, w2, w1
   4c2f8:	sub	w0, w0, w1
   4c2fc:	str	w0, [sp, #60]
   4c300:	ldr	w0, [sp, #56]
   4c304:	mov	w1, #0x8071                	// #32881
   4c308:	movk	w1, #0x8007, lsl #16
   4c30c:	umull	x1, w0, w1
   4c310:	lsr	x1, x1, #32
   4c314:	lsr	w2, w1, #15
   4c318:	mov	w1, #0xfff1                	// #65521
   4c31c:	mul	w1, w2, w1
   4c320:	sub	w0, w0, w1
   4c324:	str	w0, [sp, #56]
   4c328:	ldr	x1, [sp, #48]
   4c32c:	mov	x0, #0x15af                	// #5551
   4c330:	cmp	x1, x0
   4c334:	b.hi	4bfa4 <__asan_internal_strnlen@@Base+0x3300>  // b.pmore
   4c338:	b	4c648 <__asan_internal_strnlen@@Base+0x39a4>
   4c33c:	ldr	x0, [sp, #64]
   4c340:	add	x1, x0, #0x1
   4c344:	str	x1, [sp, #64]
   4c348:	ldrb	w0, [x0]
   4c34c:	mov	w1, w0
   4c350:	ldr	w0, [sp, #60]
   4c354:	add	w0, w0, w1
   4c358:	str	w0, [sp, #60]
   4c35c:	ldr	w1, [sp, #56]
   4c360:	ldr	w0, [sp, #60]
   4c364:	add	w0, w1, w0
   4c368:	str	w0, [sp, #56]
   4c36c:	ldr	x0, [sp, #64]
   4c370:	add	x1, x0, #0x1
   4c374:	str	x1, [sp, #64]
   4c378:	ldrb	w0, [x0]
   4c37c:	mov	w1, w0
   4c380:	ldr	w0, [sp, #60]
   4c384:	add	w0, w0, w1
   4c388:	str	w0, [sp, #60]
   4c38c:	ldr	w1, [sp, #56]
   4c390:	ldr	w0, [sp, #60]
   4c394:	add	w0, w1, w0
   4c398:	str	w0, [sp, #56]
   4c39c:	ldr	x0, [sp, #64]
   4c3a0:	add	x1, x0, #0x1
   4c3a4:	str	x1, [sp, #64]
   4c3a8:	ldrb	w0, [x0]
   4c3ac:	mov	w1, w0
   4c3b0:	ldr	w0, [sp, #60]
   4c3b4:	add	w0, w0, w1
   4c3b8:	str	w0, [sp, #60]
   4c3bc:	ldr	w1, [sp, #56]
   4c3c0:	ldr	w0, [sp, #60]
   4c3c4:	add	w0, w1, w0
   4c3c8:	str	w0, [sp, #56]
   4c3cc:	ldr	x0, [sp, #64]
   4c3d0:	add	x1, x0, #0x1
   4c3d4:	str	x1, [sp, #64]
   4c3d8:	ldrb	w0, [x0]
   4c3dc:	mov	w1, w0
   4c3e0:	ldr	w0, [sp, #60]
   4c3e4:	add	w0, w0, w1
   4c3e8:	str	w0, [sp, #60]
   4c3ec:	ldr	w1, [sp, #56]
   4c3f0:	ldr	w0, [sp, #60]
   4c3f4:	add	w0, w1, w0
   4c3f8:	str	w0, [sp, #56]
   4c3fc:	ldr	x0, [sp, #64]
   4c400:	add	x1, x0, #0x1
   4c404:	str	x1, [sp, #64]
   4c408:	ldrb	w0, [x0]
   4c40c:	mov	w1, w0
   4c410:	ldr	w0, [sp, #60]
   4c414:	add	w0, w0, w1
   4c418:	str	w0, [sp, #60]
   4c41c:	ldr	w1, [sp, #56]
   4c420:	ldr	w0, [sp, #60]
   4c424:	add	w0, w1, w0
   4c428:	str	w0, [sp, #56]
   4c42c:	ldr	x0, [sp, #64]
   4c430:	add	x1, x0, #0x1
   4c434:	str	x1, [sp, #64]
   4c438:	ldrb	w0, [x0]
   4c43c:	mov	w1, w0
   4c440:	ldr	w0, [sp, #60]
   4c444:	add	w0, w0, w1
   4c448:	str	w0, [sp, #60]
   4c44c:	ldr	w1, [sp, #56]
   4c450:	ldr	w0, [sp, #60]
   4c454:	add	w0, w1, w0
   4c458:	str	w0, [sp, #56]
   4c45c:	ldr	x0, [sp, #64]
   4c460:	add	x1, x0, #0x1
   4c464:	str	x1, [sp, #64]
   4c468:	ldrb	w0, [x0]
   4c46c:	mov	w1, w0
   4c470:	ldr	w0, [sp, #60]
   4c474:	add	w0, w0, w1
   4c478:	str	w0, [sp, #60]
   4c47c:	ldr	w1, [sp, #56]
   4c480:	ldr	w0, [sp, #60]
   4c484:	add	w0, w1, w0
   4c488:	str	w0, [sp, #56]
   4c48c:	ldr	x0, [sp, #64]
   4c490:	add	x1, x0, #0x1
   4c494:	str	x1, [sp, #64]
   4c498:	ldrb	w0, [x0]
   4c49c:	mov	w1, w0
   4c4a0:	ldr	w0, [sp, #60]
   4c4a4:	add	w0, w0, w1
   4c4a8:	str	w0, [sp, #60]
   4c4ac:	ldr	w1, [sp, #56]
   4c4b0:	ldr	w0, [sp, #60]
   4c4b4:	add	w0, w1, w0
   4c4b8:	str	w0, [sp, #56]
   4c4bc:	ldr	x0, [sp, #64]
   4c4c0:	add	x1, x0, #0x1
   4c4c4:	str	x1, [sp, #64]
   4c4c8:	ldrb	w0, [x0]
   4c4cc:	mov	w1, w0
   4c4d0:	ldr	w0, [sp, #60]
   4c4d4:	add	w0, w0, w1
   4c4d8:	str	w0, [sp, #60]
   4c4dc:	ldr	w1, [sp, #56]
   4c4e0:	ldr	w0, [sp, #60]
   4c4e4:	add	w0, w1, w0
   4c4e8:	str	w0, [sp, #56]
   4c4ec:	ldr	x0, [sp, #64]
   4c4f0:	add	x1, x0, #0x1
   4c4f4:	str	x1, [sp, #64]
   4c4f8:	ldrb	w0, [x0]
   4c4fc:	mov	w1, w0
   4c500:	ldr	w0, [sp, #60]
   4c504:	add	w0, w0, w1
   4c508:	str	w0, [sp, #60]
   4c50c:	ldr	w1, [sp, #56]
   4c510:	ldr	w0, [sp, #60]
   4c514:	add	w0, w1, w0
   4c518:	str	w0, [sp, #56]
   4c51c:	ldr	x0, [sp, #64]
   4c520:	add	x1, x0, #0x1
   4c524:	str	x1, [sp, #64]
   4c528:	ldrb	w0, [x0]
   4c52c:	mov	w1, w0
   4c530:	ldr	w0, [sp, #60]
   4c534:	add	w0, w0, w1
   4c538:	str	w0, [sp, #60]
   4c53c:	ldr	w1, [sp, #56]
   4c540:	ldr	w0, [sp, #60]
   4c544:	add	w0, w1, w0
   4c548:	str	w0, [sp, #56]
   4c54c:	ldr	x0, [sp, #64]
   4c550:	add	x1, x0, #0x1
   4c554:	str	x1, [sp, #64]
   4c558:	ldrb	w0, [x0]
   4c55c:	mov	w1, w0
   4c560:	ldr	w0, [sp, #60]
   4c564:	add	w0, w0, w1
   4c568:	str	w0, [sp, #60]
   4c56c:	ldr	w1, [sp, #56]
   4c570:	ldr	w0, [sp, #60]
   4c574:	add	w0, w1, w0
   4c578:	str	w0, [sp, #56]
   4c57c:	ldr	x0, [sp, #64]
   4c580:	add	x1, x0, #0x1
   4c584:	str	x1, [sp, #64]
   4c588:	ldrb	w0, [x0]
   4c58c:	mov	w1, w0
   4c590:	ldr	w0, [sp, #60]
   4c594:	add	w0, w0, w1
   4c598:	str	w0, [sp, #60]
   4c59c:	ldr	w1, [sp, #56]
   4c5a0:	ldr	w0, [sp, #60]
   4c5a4:	add	w0, w1, w0
   4c5a8:	str	w0, [sp, #56]
   4c5ac:	ldr	x0, [sp, #64]
   4c5b0:	add	x1, x0, #0x1
   4c5b4:	str	x1, [sp, #64]
   4c5b8:	ldrb	w0, [x0]
   4c5bc:	mov	w1, w0
   4c5c0:	ldr	w0, [sp, #60]
   4c5c4:	add	w0, w0, w1
   4c5c8:	str	w0, [sp, #60]
   4c5cc:	ldr	w1, [sp, #56]
   4c5d0:	ldr	w0, [sp, #60]
   4c5d4:	add	w0, w1, w0
   4c5d8:	str	w0, [sp, #56]
   4c5dc:	ldr	x0, [sp, #64]
   4c5e0:	add	x1, x0, #0x1
   4c5e4:	str	x1, [sp, #64]
   4c5e8:	ldrb	w0, [x0]
   4c5ec:	mov	w1, w0
   4c5f0:	ldr	w0, [sp, #60]
   4c5f4:	add	w0, w0, w1
   4c5f8:	str	w0, [sp, #60]
   4c5fc:	ldr	w1, [sp, #56]
   4c600:	ldr	w0, [sp, #60]
   4c604:	add	w0, w1, w0
   4c608:	str	w0, [sp, #56]
   4c60c:	ldr	x0, [sp, #64]
   4c610:	add	x1, x0, #0x1
   4c614:	str	x1, [sp, #64]
   4c618:	ldrb	w0, [x0]
   4c61c:	mov	w1, w0
   4c620:	ldr	w0, [sp, #60]
   4c624:	add	w0, w0, w1
   4c628:	str	w0, [sp, #60]
   4c62c:	ldr	w1, [sp, #56]
   4c630:	ldr	w0, [sp, #60]
   4c634:	add	w0, w1, w0
   4c638:	str	w0, [sp, #56]
   4c63c:	ldr	x0, [sp, #48]
   4c640:	sub	x0, x0, #0x10
   4c644:	str	x0, [sp, #48]
   4c648:	ldr	x0, [sp, #48]
   4c64c:	cmp	x0, #0xf
   4c650:	b.hi	4c33c <__asan_internal_strnlen@@Base+0x3698>  // b.pmore
   4c654:	str	wzr, [sp, #76]
   4c658:	b	4c698 <__asan_internal_strnlen@@Base+0x39f4>
   4c65c:	ldr	x0, [sp, #64]
   4c660:	add	x1, x0, #0x1
   4c664:	str	x1, [sp, #64]
   4c668:	ldrb	w0, [x0]
   4c66c:	mov	w1, w0
   4c670:	ldr	w0, [sp, #60]
   4c674:	add	w0, w0, w1
   4c678:	str	w0, [sp, #60]
   4c67c:	ldr	w1, [sp, #56]
   4c680:	ldr	w0, [sp, #60]
   4c684:	add	w0, w1, w0
   4c688:	str	w0, [sp, #56]
   4c68c:	ldr	w0, [sp, #76]
   4c690:	add	w0, w0, #0x1
   4c694:	str	w0, [sp, #76]
   4c698:	ldr	w0, [sp, #76]
   4c69c:	ldr	x1, [sp, #48]
   4c6a0:	cmp	x1, x0
   4c6a4:	b.hi	4c65c <__asan_internal_strnlen@@Base+0x39b8>  // b.pmore
   4c6a8:	ldr	w0, [sp, #60]
   4c6ac:	mov	w1, #0x8071                	// #32881
   4c6b0:	movk	w1, #0x8007, lsl #16
   4c6b4:	umull	x1, w0, w1
   4c6b8:	lsr	x1, x1, #32
   4c6bc:	lsr	w2, w1, #15
   4c6c0:	mov	w1, #0xfff1                	// #65521
   4c6c4:	mul	w1, w2, w1
   4c6c8:	sub	w0, w0, w1
   4c6cc:	str	w0, [sp, #60]
   4c6d0:	ldr	w0, [sp, #56]
   4c6d4:	mov	w1, #0x8071                	// #32881
   4c6d8:	movk	w1, #0x8007, lsl #16
   4c6dc:	umull	x1, w0, w1
   4c6e0:	lsr	x1, x1, #32
   4c6e4:	lsr	w2, w1, #15
   4c6e8:	mov	w1, #0xfff1                	// #65521
   4c6ec:	mul	w1, w2, w1
   4c6f0:	sub	w0, w0, w1
   4c6f4:	str	w0, [sp, #56]
   4c6f8:	ldr	w0, [sp, #56]
   4c6fc:	lsl	w1, w0, #16
   4c700:	ldr	w0, [sp, #60]
   4c704:	add	w0, w1, w0
   4c708:	ldr	w1, [sp, #72]
   4c70c:	cmp	w1, w0
   4c710:	cset	w0, ne  // ne = any
   4c714:	and	w0, w0, #0xff
   4c718:	and	x0, x0, #0xff
   4c71c:	cmp	x0, #0x0
   4c720:	b.eq	4c730 <__asan_internal_strnlen@@Base+0x3a8c>  // b.none
   4c724:	bl	49dec <__asan_internal_strnlen@@Base+0x1148>
   4c728:	mov	w0, #0x0                   	// #0
   4c72c:	b	4c734 <__asan_internal_strnlen@@Base+0x3a90>
   4c730:	mov	w0, #0x1                   	// #1
   4c734:	ldp	x29, x30, [sp], #80
   4c738:	ret
   4c73c:	stp	x29, x30, [sp, #-64]!
   4c740:	mov	x29, sp
   4c744:	str	x0, [sp, #56]
   4c748:	str	x1, [sp, #48]
   4c74c:	str	x2, [sp, #40]
   4c750:	str	x3, [sp, #32]
   4c754:	str	x4, [sp, #24]
   4c758:	ldr	x4, [sp, #24]
   4c75c:	ldr	x3, [sp, #32]
   4c760:	ldr	x2, [sp, #40]
   4c764:	ldr	x1, [sp, #48]
   4c768:	ldr	x0, [sp, #56]
   4c76c:	bl	4a808 <__asan_internal_strnlen@@Base+0x1b64>
   4c770:	cmp	w0, #0x0
   4c774:	b.ne	4c780 <__asan_internal_strnlen@@Base+0x3adc>  // b.any
   4c778:	mov	w0, #0x0                   	// #0
   4c77c:	b	4c7b0 <__asan_internal_strnlen@@Base+0x3b0c>
   4c780:	ldr	x0, [sp, #48]
   4c784:	sub	x0, x0, #0x4
   4c788:	ldr	x1, [sp, #56]
   4c78c:	add	x0, x1, x0
   4c790:	ldr	x2, [sp, #24]
   4c794:	ldr	x1, [sp, #32]
   4c798:	bl	4bf2c <__asan_internal_strnlen@@Base+0x3288>
   4c79c:	cmp	w0, #0x0
   4c7a0:	b.ne	4c7ac <__asan_internal_strnlen@@Base+0x3b08>  // b.any
   4c7a4:	mov	w0, #0x0                   	// #0
   4c7a8:	b	4c7b0 <__asan_internal_strnlen@@Base+0x3b0c>
   4c7ac:	mov	w0, #0x1                   	// #1
   4c7b0:	ldp	x29, x30, [sp], #64
   4c7b4:	ret
   4c7b8:	stp	x29, x30, [sp, #-112]!
   4c7bc:	mov	x29, sp
   4c7c0:	str	x0, [sp, #72]
   4c7c4:	str	x1, [sp, #64]
   4c7c8:	str	x2, [sp, #56]
   4c7cc:	str	x3, [sp, #48]
   4c7d0:	str	x4, [sp, #40]
   4c7d4:	str	x5, [sp, #32]
   4c7d8:	str	x6, [sp, #24]
   4c7dc:	str	x7, [sp, #16]
   4c7e0:	ldr	x0, [sp, #24]
   4c7e4:	str	xzr, [x0]
   4c7e8:	ldr	x0, [sp, #16]
   4c7ec:	str	xzr, [x0]
   4c7f0:	ldr	x0, [sp, #56]
   4c7f4:	cmp	x0, #0xb
   4c7f8:	b.ls	4c818 <__asan_internal_strnlen@@Base+0x3b74>  // b.plast
   4c7fc:	mov	x2, #0x4                   	// #4
   4c800:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   4c804:	add	x1, x0, #0xa28
   4c808:	ldr	x0, [sp, #64]
   4c80c:	bl	6e70 <__asan_internal_memcmp@plt>
   4c810:	cmp	w0, #0x0
   4c814:	b.eq	4c820 <__asan_internal_strnlen@@Base+0x3b7c>  // b.none
   4c818:	mov	w0, #0x1                   	// #1
   4c81c:	b	4c920 <__asan_internal_strnlen@@Base+0x3c7c>
   4c820:	str	xzr, [sp, #104]
   4c824:	str	xzr, [sp, #96]
   4c828:	b	4c860 <__asan_internal_strnlen@@Base+0x3bbc>
   4c82c:	ldr	x0, [sp, #104]
   4c830:	lsl	x1, x0, #8
   4c834:	ldr	x0, [sp, #96]
   4c838:	add	x0, x0, #0x4
   4c83c:	ldr	x2, [sp, #64]
   4c840:	add	x0, x2, x0
   4c844:	ldrb	w0, [x0]
   4c848:	and	x0, x0, #0xff
   4c84c:	orr	x0, x1, x0
   4c850:	str	x0, [sp, #104]
   4c854:	ldr	x0, [sp, #96]
   4c858:	add	x0, x0, #0x1
   4c85c:	str	x0, [sp, #96]
   4c860:	ldr	x0, [sp, #96]
   4c864:	cmp	x0, #0x7
   4c868:	b.ls	4c82c <__asan_internal_strnlen@@Base+0x3b88>  // b.plast
   4c86c:	ldr	x0, [sp, #24]
   4c870:	ldr	x0, [x0]
   4c874:	cmp	x0, #0x0
   4c878:	b.eq	4c8a0 <__asan_internal_strnlen@@Base+0x3bfc>  // b.none
   4c87c:	ldr	x0, [sp, #16]
   4c880:	ldr	x0, [x0]
   4c884:	ldr	x1, [sp, #104]
   4c888:	cmp	x1, x0
   4c88c:	b.hi	4c8a0 <__asan_internal_strnlen@@Base+0x3bfc>  // b.pmore
   4c890:	ldr	x0, [sp, #24]
   4c894:	ldr	x0, [x0]
   4c898:	str	x0, [sp, #88]
   4c89c:	b	4c8cc <__asan_internal_strnlen@@Base+0x3c28>
   4c8a0:	ldr	x3, [sp, #32]
   4c8a4:	ldr	x2, [sp, #40]
   4c8a8:	ldr	x1, [sp, #104]
   4c8ac:	ldr	x0, [sp, #72]
   4c8b0:	bl	6b10 <__asan_backtrace_alloc@plt>
   4c8b4:	str	x0, [sp, #88]
   4c8b8:	ldr	x0, [sp, #88]
   4c8bc:	cmp	x0, #0x0
   4c8c0:	b.ne	4c8cc <__asan_internal_strnlen@@Base+0x3c28>  // b.any
   4c8c4:	mov	w0, #0x0                   	// #0
   4c8c8:	b	4c920 <__asan_internal_strnlen@@Base+0x3c7c>
   4c8cc:	ldr	x0, [sp, #64]
   4c8d0:	add	x5, x0, #0xc
   4c8d4:	ldr	x0, [sp, #56]
   4c8d8:	sub	x0, x0, #0xc
   4c8dc:	ldr	x4, [sp, #104]
   4c8e0:	ldr	x3, [sp, #88]
   4c8e4:	ldr	x2, [sp, #48]
   4c8e8:	mov	x1, x0
   4c8ec:	mov	x0, x5
   4c8f0:	bl	4c73c <__asan_internal_strnlen@@Base+0x3a98>
   4c8f4:	cmp	w0, #0x0
   4c8f8:	b.ne	4c904 <__asan_internal_strnlen@@Base+0x3c60>  // b.any
   4c8fc:	mov	w0, #0x1                   	// #1
   4c900:	b	4c920 <__asan_internal_strnlen@@Base+0x3c7c>
   4c904:	ldr	x0, [sp, #24]
   4c908:	ldr	x1, [sp, #88]
   4c90c:	str	x1, [x0]
   4c910:	ldr	x0, [sp, #16]
   4c914:	ldr	x1, [sp, #104]
   4c918:	str	x1, [x0]
   4c91c:	mov	w0, #0x1                   	// #1
   4c920:	ldp	x29, x30, [sp], #112
   4c924:	ret
   4c928:	stp	x29, x30, [sp, #-96]!
   4c92c:	mov	x29, sp
   4c930:	str	x0, [sp, #72]
   4c934:	str	x1, [sp, #64]
   4c938:	str	x2, [sp, #56]
   4c93c:	str	x3, [sp, #48]
   4c940:	str	x4, [sp, #40]
   4c944:	str	x5, [sp, #32]
   4c948:	str	x6, [sp, #24]
   4c94c:	str	x7, [sp, #16]
   4c950:	ldr	x0, [sp, #24]
   4c954:	str	xzr, [x0]
   4c958:	ldr	x0, [sp, #16]
   4c95c:	str	xzr, [x0]
   4c960:	ldr	x0, [sp, #56]
   4c964:	cmp	x0, #0x17
   4c968:	b.hi	4c974 <__asan_internal_strnlen@@Base+0x3cd0>  // b.pmore
   4c96c:	mov	w0, #0x1                   	// #1
   4c970:	b	4ca5c <__asan_internal_strnlen@@Base+0x3db8>
   4c974:	ldr	x0, [sp, #64]
   4c978:	str	x0, [sp, #80]
   4c97c:	ldr	x0, [sp, #80]
   4c980:	ldr	w0, [x0]
   4c984:	cmp	w0, #0x1
   4c988:	b.eq	4c994 <__asan_internal_strnlen@@Base+0x3cf0>  // b.none
   4c98c:	mov	w0, #0x1                   	// #1
   4c990:	b	4ca5c <__asan_internal_strnlen@@Base+0x3db8>
   4c994:	ldr	x0, [sp, #24]
   4c998:	ldr	x0, [x0]
   4c99c:	cmp	x0, #0x0
   4c9a0:	b.eq	4c9cc <__asan_internal_strnlen@@Base+0x3d28>  // b.none
   4c9a4:	ldr	x0, [sp, #16]
   4c9a8:	ldr	x1, [x0]
   4c9ac:	ldr	x0, [sp, #80]
   4c9b0:	ldr	x0, [x0, #8]
   4c9b4:	cmp	x1, x0
   4c9b8:	b.cc	4c9cc <__asan_internal_strnlen@@Base+0x3d28>  // b.lo, b.ul, b.last
   4c9bc:	ldr	x0, [sp, #24]
   4c9c0:	ldr	x0, [x0]
   4c9c4:	str	x0, [sp, #88]
   4c9c8:	b	4ca00 <__asan_internal_strnlen@@Base+0x3d5c>
   4c9cc:	ldr	x0, [sp, #80]
   4c9d0:	ldr	x0, [x0, #8]
   4c9d4:	ldr	x3, [sp, #32]
   4c9d8:	ldr	x2, [sp, #40]
   4c9dc:	mov	x1, x0
   4c9e0:	ldr	x0, [sp, #72]
   4c9e4:	bl	6b10 <__asan_backtrace_alloc@plt>
   4c9e8:	str	x0, [sp, #88]
   4c9ec:	ldr	x0, [sp, #88]
   4c9f0:	cmp	x0, #0x0
   4c9f4:	b.ne	4ca00 <__asan_internal_strnlen@@Base+0x3d5c>  // b.any
   4c9f8:	mov	w0, #0x0                   	// #0
   4c9fc:	b	4ca5c <__asan_internal_strnlen@@Base+0x3db8>
   4ca00:	ldr	x0, [sp, #64]
   4ca04:	add	x5, x0, #0x18
   4ca08:	ldr	x0, [sp, #56]
   4ca0c:	sub	x1, x0, #0x18
   4ca10:	ldr	x0, [sp, #80]
   4ca14:	ldr	x0, [x0, #8]
   4ca18:	mov	x4, x0
   4ca1c:	ldr	x3, [sp, #88]
   4ca20:	ldr	x2, [sp, #48]
   4ca24:	mov	x0, x5
   4ca28:	bl	4c73c <__asan_internal_strnlen@@Base+0x3a98>
   4ca2c:	cmp	w0, #0x0
   4ca30:	b.ne	4ca3c <__asan_internal_strnlen@@Base+0x3d98>  // b.any
   4ca34:	mov	w0, #0x1                   	// #1
   4ca38:	b	4ca5c <__asan_internal_strnlen@@Base+0x3db8>
   4ca3c:	ldr	x0, [sp, #24]
   4ca40:	ldr	x1, [sp, #88]
   4ca44:	str	x1, [x0]
   4ca48:	ldr	x0, [sp, #80]
   4ca4c:	ldr	x1, [x0, #8]
   4ca50:	ldr	x0, [sp, #16]
   4ca54:	str	x1, [x0]
   4ca58:	mov	w0, #0x1                   	// #1
   4ca5c:	ldp	x29, x30, [sp], #96
   4ca60:	ret

000000000004ca64 <__asan_backtrace_uncompress_zdebug@@Base>:
   4ca64:	stp	x29, x30, [sp, #-96]!
   4ca68:	mov	x29, sp
   4ca6c:	str	x0, [sp, #72]
   4ca70:	str	x1, [sp, #64]
   4ca74:	str	x2, [sp, #56]
   4ca78:	str	x3, [sp, #48]
   4ca7c:	str	x4, [sp, #40]
   4ca80:	str	x5, [sp, #32]
   4ca84:	str	x6, [sp, #24]
   4ca88:	ldr	x3, [sp, #40]
   4ca8c:	ldr	x2, [sp, #48]
   4ca90:	mov	x1, #0x13b4                	// #5044
   4ca94:	ldr	x0, [sp, #72]
   4ca98:	bl	6b10 <__asan_backtrace_alloc@plt>
   4ca9c:	str	x0, [sp, #88]
   4caa0:	ldr	x0, [sp, #88]
   4caa4:	cmp	x0, #0x0
   4caa8:	b.ne	4cab4 <__asan_backtrace_uncompress_zdebug@@Base+0x50>  // b.any
   4caac:	mov	w0, #0x0                   	// #0
   4cab0:	b	4caf8 <__asan_backtrace_uncompress_zdebug@@Base+0x94>
   4cab4:	ldr	x7, [sp, #24]
   4cab8:	ldr	x6, [sp, #32]
   4cabc:	ldr	x5, [sp, #40]
   4cac0:	ldr	x4, [sp, #48]
   4cac4:	ldr	x3, [sp, #88]
   4cac8:	ldr	x2, [sp, #56]
   4cacc:	ldr	x1, [sp, #64]
   4cad0:	ldr	x0, [sp, #72]
   4cad4:	bl	4c7b8 <__asan_internal_strnlen@@Base+0x3b14>
   4cad8:	str	w0, [sp, #84]
   4cadc:	ldr	x4, [sp, #40]
   4cae0:	ldr	x3, [sp, #48]
   4cae4:	mov	x2, #0x13b4                	// #5044
   4cae8:	ldr	x1, [sp, #88]
   4caec:	ldr	x0, [sp, #72]
   4caf0:	bl	6e00 <__asan_backtrace_free@plt>
   4caf4:	ldr	w0, [sp, #84]
   4caf8:	ldp	x29, x30, [sp], #96
   4cafc:	ret
   4cb00:	sub	sp, sp, #0x4c0
   4cb04:	stp	x29, x30, [sp, #80]
   4cb08:	add	x29, sp, #0x50
   4cb0c:	str	x0, [sp, #152]
   4cb10:	str	x1, [sp, #144]
   4cb14:	str	w2, [sp, #140]
   4cb18:	str	x3, [sp, #128]
   4cb1c:	str	x4, [sp, #120]
   4cb20:	str	x5, [sp, #112]
   4cb24:	str	x6, [sp, #104]
   4cb28:	str	x7, [sp, #96]
   4cb2c:	ldr	w0, [sp, #1240]
   4cb30:	cmp	w0, #0x0
   4cb34:	b.ne	4cb48 <__asan_backtrace_uncompress_zdebug@@Base+0xe4>  // b.any
   4cb38:	ldr	x0, [sp, #96]
   4cb3c:	str	wzr, [x0]
   4cb40:	ldr	x0, [sp, #1216]
   4cb44:	str	wzr, [x0]
   4cb48:	str	wzr, [sp, #1204]
   4cb4c:	str	wzr, [sp, #1200]
   4cb50:	str	wzr, [sp, #1184]
   4cb54:	str	wzr, [sp, #1180]
   4cb58:	str	wzr, [sp, #1176]
   4cb5c:	str	xzr, [sp, #1168]
   4cb60:	str	wzr, [sp, #1164]
   4cb64:	str	wzr, [sp, #1160]
   4cb68:	str	xzr, [sp, #1152]
   4cb6c:	str	wzr, [sp, #1148]
   4cb70:	str	wzr, [sp, #1144]
   4cb74:	str	xzr, [sp, #1136]
   4cb78:	str	xzr, [sp, #1128]
   4cb7c:	str	wzr, [sp, #1124]
   4cb80:	str	wzr, [sp, #1100]
   4cb84:	str	xzr, [sp, #1080]
   4cb88:	add	x0, sp, #0x358
   4cb8c:	mov	x6, x0
   4cb90:	ldr	x5, [sp, #112]
   4cb94:	ldr	x4, [sp, #120]
   4cb98:	mov	x3, #0x40                  	// #64
   4cb9c:	mov	x2, #0x0                   	// #0
   4cba0:	ldr	w1, [sp, #140]
   4cba4:	ldr	x0, [sp, #152]
   4cba8:	bl	6d20 <__asan_backtrace_get_view@plt>
   4cbac:	cmp	w0, #0x0
   4cbb0:	b.eq	4dec4 <__asan_backtrace_uncompress_zdebug@@Base+0x1460>  // b.none
   4cbb4:	ldr	x1, [sp, #856]
   4cbb8:	add	x0, sp, #0x318
   4cbbc:	mov	x2, #0x40                  	// #64
   4cbc0:	bl	6a10 <__asan_internal_memcpy@plt>
   4cbc4:	add	x0, sp, #0x358
   4cbc8:	ldr	x3, [sp, #112]
   4cbcc:	ldr	x2, [sp, #120]
   4cbd0:	mov	x1, x0
   4cbd4:	ldr	x0, [sp, #152]
   4cbd8:	bl	69a0 <__asan_backtrace_release_view@plt>
   4cbdc:	ldrb	w0, [sp, #792]
   4cbe0:	cmp	w0, #0x7f
   4cbe4:	b.ne	4cc0c <__asan_backtrace_uncompress_zdebug@@Base+0x1a8>  // b.any
   4cbe8:	ldrb	w0, [sp, #793]
   4cbec:	cmp	w0, #0x45
   4cbf0:	b.ne	4cc0c <__asan_backtrace_uncompress_zdebug@@Base+0x1a8>  // b.any
   4cbf4:	ldrb	w0, [sp, #794]
   4cbf8:	cmp	w0, #0x4c
   4cbfc:	b.ne	4cc0c <__asan_backtrace_uncompress_zdebug@@Base+0x1a8>  // b.any
   4cc00:	ldrb	w0, [sp, #795]
   4cc04:	cmp	w0, #0x46
   4cc08:	b.eq	4cc28 <__asan_backtrace_uncompress_zdebug@@Base+0x1c4>  // b.none
   4cc0c:	ldr	x3, [sp, #120]
   4cc10:	mov	w2, #0x0                   	// #0
   4cc14:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   4cc18:	add	x1, x0, #0xa30
   4cc1c:	ldr	x0, [sp, #112]
   4cc20:	blr	x3
   4cc24:	b	4df68 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   4cc28:	ldrb	w0, [sp, #798]
   4cc2c:	cmp	w0, #0x1
   4cc30:	b.eq	4cc50 <__asan_backtrace_uncompress_zdebug@@Base+0x1ec>  // b.none
   4cc34:	ldr	x3, [sp, #120]
   4cc38:	mov	w2, #0x0                   	// #0
   4cc3c:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   4cc40:	add	x1, x0, #0xa50
   4cc44:	ldr	x0, [sp, #112]
   4cc48:	blr	x3
   4cc4c:	b	4df68 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   4cc50:	ldrb	w0, [sp, #796]
   4cc54:	cmp	w0, #0x2
   4cc58:	b.eq	4cc78 <__asan_backtrace_uncompress_zdebug@@Base+0x214>  // b.none
   4cc5c:	ldr	x3, [sp, #120]
   4cc60:	mov	w2, #0x0                   	// #0
   4cc64:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   4cc68:	add	x1, x0, #0xa80
   4cc6c:	ldr	x0, [sp, #112]
   4cc70:	blr	x3
   4cc74:	b	4df68 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   4cc78:	ldrb	w0, [sp, #797]
   4cc7c:	cmp	w0, #0x1
   4cc80:	b.eq	4ccac <__asan_backtrace_uncompress_zdebug@@Base+0x248>  // b.none
   4cc84:	ldrb	w0, [sp, #797]
   4cc88:	cmp	w0, #0x2
   4cc8c:	b.eq	4ccac <__asan_backtrace_uncompress_zdebug@@Base+0x248>  // b.none
   4cc90:	ldr	x3, [sp, #120]
   4cc94:	mov	w2, #0x0                   	// #0
   4cc98:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   4cc9c:	add	x1, x0, #0xaa8
   4cca0:	ldr	x0, [sp, #112]
   4cca4:	blr	x3
   4cca8:	b	4df68 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   4ccac:	ldr	w0, [sp, #1232]
   4ccb0:	cmp	w0, #0x0
   4ccb4:	b.eq	4cccc <__asan_backtrace_uncompress_zdebug@@Base+0x268>  // b.none
   4ccb8:	ldrh	w0, [sp, #808]
   4ccbc:	cmp	w0, #0x3
   4ccc0:	b.ne	4cccc <__asan_backtrace_uncompress_zdebug@@Base+0x268>  // b.any
   4ccc4:	mov	w0, #0xffffffff            	// #-1
   4ccc8:	b	4e0d0 <__asan_backtrace_uncompress_zdebug@@Base+0x166c>
   4cccc:	ldr	x0, [sp, #832]
   4ccd0:	str	x0, [sp, #1064]
   4ccd4:	ldrh	w0, [sp, #852]
   4ccd8:	str	w0, [sp, #1212]
   4ccdc:	ldrh	w0, [sp, #854]
   4cce0:	str	w0, [sp, #1208]
   4cce4:	ldr	w0, [sp, #1212]
   4cce8:	cmp	w0, #0x0
   4ccec:	b.eq	4cd00 <__asan_backtrace_uncompress_zdebug@@Base+0x29c>  // b.none
   4ccf0:	ldr	w1, [sp, #1208]
   4ccf4:	mov	w0, #0xffff                	// #65535
   4ccf8:	cmp	w1, w0
   4ccfc:	b.ne	4cdb8 <__asan_backtrace_uncompress_zdebug@@Base+0x354>  // b.any
   4cd00:	ldr	x0, [sp, #1064]
   4cd04:	cmp	x0, #0x0
   4cd08:	b.eq	4cdb8 <__asan_backtrace_uncompress_zdebug@@Base+0x354>  // b.none
   4cd0c:	add	x0, sp, #0xc8
   4cd10:	mov	x6, x0
   4cd14:	ldr	x5, [sp, #112]
   4cd18:	ldr	x4, [sp, #120]
   4cd1c:	mov	x3, #0x8                   	// #8
   4cd20:	ldr	x2, [sp, #1064]
   4cd24:	ldr	w1, [sp, #140]
   4cd28:	ldr	x0, [sp, #152]
   4cd2c:	bl	6d20 <__asan_backtrace_get_view@plt>
   4cd30:	cmp	w0, #0x0
   4cd34:	b.eq	4decc <__asan_backtrace_uncompress_zdebug@@Base+0x1468>  // b.none
   4cd38:	ldr	x0, [sp, #200]
   4cd3c:	str	x0, [sp, #1056]
   4cd40:	ldr	w0, [sp, #1212]
   4cd44:	cmp	w0, #0x0
   4cd48:	b.ne	4cd58 <__asan_backtrace_uncompress_zdebug@@Base+0x2f4>  // b.any
   4cd4c:	ldr	x0, [sp, #1056]
   4cd50:	ldr	x0, [x0, #32]
   4cd54:	str	w0, [sp, #1212]
   4cd58:	ldr	w1, [sp, #1208]
   4cd5c:	mov	w0, #0xffff                	// #65535
   4cd60:	cmp	w1, w0
   4cd64:	b.ne	4cda0 <__asan_backtrace_uncompress_zdebug@@Base+0x33c>  // b.any
   4cd68:	ldr	x0, [sp, #1056]
   4cd6c:	ldr	w0, [x0, #40]
   4cd70:	str	w0, [sp, #1208]
   4cd74:	ldr	w1, [sp, #1208]
   4cd78:	ldr	w0, [sp, #1212]
   4cd7c:	cmp	w1, w0
   4cd80:	b.cc	4cda0 <__asan_backtrace_uncompress_zdebug@@Base+0x33c>  // b.lo, b.ul, b.last
   4cd84:	ldr	w1, [sp, #1208]
   4cd88:	mov	w0, #0xffff                	// #65535
   4cd8c:	cmp	w1, w0
   4cd90:	b.ls	4cda0 <__asan_backtrace_uncompress_zdebug@@Base+0x33c>  // b.plast
   4cd94:	ldr	w0, [sp, #1208]
   4cd98:	sub	w0, w0, #0x100
   4cd9c:	str	w0, [sp, #1208]
   4cda0:	add	x0, sp, #0xc8
   4cda4:	ldr	x3, [sp, #112]
   4cda8:	ldr	x2, [sp, #120]
   4cdac:	mov	x1, x0
   4cdb0:	ldr	x0, [sp, #152]
   4cdb4:	bl	69a0 <__asan_backtrace_release_view@plt>
   4cdb8:	ldr	x0, [sp, #1064]
   4cdbc:	add	x0, x0, #0x40
   4cdc0:	mov	x2, x0
   4cdc4:	ldr	w0, [sp, #1212]
   4cdc8:	sub	w0, w0, #0x1
   4cdcc:	mov	w0, w0
   4cdd0:	lsl	x0, x0, #6
   4cdd4:	add	x1, sp, #0x300
   4cdd8:	mov	x6, x1
   4cddc:	ldr	x5, [sp, #112]
   4cde0:	ldr	x4, [sp, #120]
   4cde4:	mov	x3, x0
   4cde8:	ldr	w1, [sp, #140]
   4cdec:	ldr	x0, [sp, #152]
   4cdf0:	bl	6d20 <__asan_backtrace_get_view@plt>
   4cdf4:	cmp	w0, #0x0
   4cdf8:	b.eq	4ded4 <__asan_backtrace_uncompress_zdebug@@Base+0x1470>  // b.none
   4cdfc:	mov	w0, #0x1                   	// #1
   4ce00:	str	w0, [sp, #1204]
   4ce04:	ldr	x0, [sp, #768]
   4ce08:	str	x0, [sp, #1048]
   4ce0c:	ldr	w0, [sp, #1208]
   4ce10:	sub	w0, w0, #0x1
   4ce14:	mov	w0, w0
   4ce18:	lsl	x0, x0, #6
   4ce1c:	ldr	x1, [sp, #1048]
   4ce20:	add	x0, x1, x0
   4ce24:	str	x0, [sp, #1040]
   4ce28:	ldr	x0, [sp, #1040]
   4ce2c:	ldr	x0, [x0, #32]
   4ce30:	str	x0, [sp, #1032]
   4ce34:	ldr	x0, [sp, #1040]
   4ce38:	ldr	x0, [x0, #24]
   4ce3c:	str	x0, [sp, #1024]
   4ce40:	ldr	x0, [sp, #1040]
   4ce44:	ldr	x0, [x0, #32]
   4ce48:	add	x1, sp, #0x2e8
   4ce4c:	mov	x6, x1
   4ce50:	ldr	x5, [sp, #112]
   4ce54:	ldr	x4, [sp, #120]
   4ce58:	mov	x3, x0
   4ce5c:	ldr	x2, [sp, #1024]
   4ce60:	ldr	w1, [sp, #140]
   4ce64:	ldr	x0, [sp, #152]
   4ce68:	bl	6d20 <__asan_backtrace_get_view@plt>
   4ce6c:	cmp	w0, #0x0
   4ce70:	b.eq	4dedc <__asan_backtrace_uncompress_zdebug@@Base+0x1478>  // b.none
   4ce74:	mov	w0, #0x1                   	// #1
   4ce78:	str	w0, [sp, #1200]
   4ce7c:	ldr	x0, [sp, #744]
   4ce80:	str	x0, [sp, #1016]
   4ce84:	str	wzr, [sp, #1196]
   4ce88:	str	wzr, [sp, #1192]
   4ce8c:	add	x0, sp, #0x1a8
   4ce90:	mov	x2, #0x140                 	// #320
   4ce94:	mov	w1, #0x0                   	// #0
   4ce98:	bl	6ab0 <__asan_internal_memset@plt>
   4ce9c:	mov	w0, #0x1                   	// #1
   4cea0:	str	w0, [sp, #1188]
   4cea4:	b	4d3c4 <__asan_backtrace_uncompress_zdebug@@Base+0x960>
   4cea8:	ldr	w0, [sp, #1188]
   4ceac:	sub	w0, w0, #0x1
   4ceb0:	mov	w0, w0
   4ceb4:	lsl	x0, x0, #6
   4ceb8:	ldr	x1, [sp, #1048]
   4cebc:	add	x0, x1, x0
   4cec0:	str	x0, [sp, #936]
   4cec4:	ldr	x0, [sp, #936]
   4cec8:	ldr	w0, [x0, #4]
   4cecc:	cmp	w0, #0x2
   4ced0:	b.ne	4cee0 <__asan_backtrace_uncompress_zdebug@@Base+0x47c>  // b.any
   4ced4:	ldr	w0, [sp, #1188]
   4ced8:	str	w0, [sp, #1196]
   4cedc:	b	4cef8 <__asan_backtrace_uncompress_zdebug@@Base+0x494>
   4cee0:	ldr	x0, [sp, #936]
   4cee4:	ldr	w0, [x0, #4]
   4cee8:	cmp	w0, #0xb
   4ceec:	b.ne	4cef8 <__asan_backtrace_uncompress_zdebug@@Base+0x494>  // b.any
   4cef0:	ldr	w0, [sp, #1188]
   4cef4:	str	w0, [sp, #1192]
   4cef8:	ldr	x0, [sp, #936]
   4cefc:	ldr	w0, [x0]
   4cf00:	str	w0, [sp, #932]
   4cf04:	ldr	w0, [sp, #932]
   4cf08:	ldr	x1, [sp, #1032]
   4cf0c:	cmp	x1, x0
   4cf10:	b.hi	4cf30 <__asan_backtrace_uncompress_zdebug@@Base+0x4cc>  // b.pmore
   4cf14:	ldr	x3, [sp, #120]
   4cf18:	mov	w2, #0x0                   	// #0
   4cf1c:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   4cf20:	add	x1, x0, #0xad0
   4cf24:	ldr	x0, [sp, #112]
   4cf28:	blr	x3
   4cf2c:	b	4df68 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   4cf30:	ldr	w0, [sp, #932]
   4cf34:	ldr	x1, [sp, #1016]
   4cf38:	add	x0, x1, x0
   4cf3c:	str	x0, [sp, #920]
   4cf40:	str	wzr, [sp, #1076]
   4cf44:	b	4cfdc <__asan_backtrace_uncompress_zdebug@@Base+0x578>
   4cf48:	adrp	x0, 7c000 <__asan_cplus_demangle_operators@@Base+0x1a0>
   4cf4c:	add	x0, x0, #0xa88
   4cf50:	ldrsw	x1, [sp, #1076]
   4cf54:	ldr	x0, [x0, x1, lsl #3]
   4cf58:	mov	x1, x0
   4cf5c:	ldr	x0, [sp, #920]
   4cf60:	bl	6d70 <__asan_internal_strcmp@plt>
   4cf64:	cmp	w0, #0x0
   4cf68:	b.ne	4cfd0 <__asan_backtrace_uncompress_zdebug@@Base+0x56c>  // b.any
   4cf6c:	ldr	x0, [sp, #936]
   4cf70:	ldr	x0, [x0, #24]
   4cf74:	mov	x2, x0
   4cf78:	ldrsw	x0, [sp, #1076]
   4cf7c:	lsl	x0, x0, #5
   4cf80:	add	x1, sp, #0x1a8
   4cf84:	str	x2, [x1, x0]
   4cf88:	ldr	x0, [sp, #936]
   4cf8c:	ldr	x2, [x0, #32]
   4cf90:	ldrsw	x0, [sp, #1076]
   4cf94:	lsl	x0, x0, #5
   4cf98:	add	x1, sp, #0x1b0
   4cf9c:	str	x2, [x1, x0]
   4cfa0:	ldr	x0, [sp, #936]
   4cfa4:	ldr	x0, [x0, #8]
   4cfa8:	and	x0, x0, #0x800
   4cfac:	cmp	x0, #0x0
   4cfb0:	cset	w0, ne  // ne = any
   4cfb4:	and	w0, w0, #0xff
   4cfb8:	mov	w2, w0
   4cfbc:	ldrsw	x0, [sp, #1076]
   4cfc0:	lsl	x0, x0, #5
   4cfc4:	add	x1, sp, #0x1c0
   4cfc8:	str	w2, [x1, x0]
   4cfcc:	b	4cfe8 <__asan_backtrace_uncompress_zdebug@@Base+0x584>
   4cfd0:	ldr	w0, [sp, #1076]
   4cfd4:	add	w0, w0, #0x1
   4cfd8:	str	w0, [sp, #1076]
   4cfdc:	ldr	w0, [sp, #1076]
   4cfe0:	cmp	w0, #0x9
   4cfe4:	b.le	4cf48 <__asan_backtrace_uncompress_zdebug@@Base+0x4e4>
   4cfe8:	ldr	w0, [sp, #1240]
   4cfec:	cmp	w0, #0x0
   4cff0:	b.eq	4d000 <__asan_backtrace_uncompress_zdebug@@Base+0x59c>  // b.none
   4cff4:	ldr	x0, [sp, #1248]
   4cff8:	cmp	x0, #0x0
   4cffc:	b.eq	4d150 <__asan_backtrace_uncompress_zdebug@@Base+0x6ec>  // b.none
   4d000:	ldr	w0, [sp, #1176]
   4d004:	cmp	w0, #0x0
   4d008:	b.ne	4d150 <__asan_backtrace_uncompress_zdebug@@Base+0x6ec>  // b.any
   4d00c:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   4d010:	add	x1, x0, #0xaf0
   4d014:	ldr	x0, [sp, #920]
   4d018:	bl	6d70 <__asan_internal_strcmp@plt>
   4d01c:	cmp	w0, #0x0
   4d020:	b.ne	4d150 <__asan_backtrace_uncompress_zdebug@@Base+0x6ec>  // b.any
   4d024:	ldr	x0, [sp, #936]
   4d028:	ldr	x0, [x0, #24]
   4d02c:	mov	x2, x0
   4d030:	ldr	x0, [sp, #936]
   4d034:	ldr	x0, [x0, #32]
   4d038:	add	x1, sp, #0x160
   4d03c:	mov	x6, x1
   4d040:	ldr	x5, [sp, #112]
   4d044:	ldr	x4, [sp, #120]
   4d048:	mov	x3, x0
   4d04c:	ldr	w1, [sp, #140]
   4d050:	ldr	x0, [sp, #152]
   4d054:	bl	6d20 <__asan_backtrace_get_view@plt>
   4d058:	cmp	w0, #0x0
   4d05c:	b.eq	4dee4 <__asan_backtrace_uncompress_zdebug@@Base+0x1480>  // b.none
   4d060:	mov	w0, #0x1                   	// #1
   4d064:	str	w0, [sp, #1176]
   4d068:	ldr	x0, [sp, #352]
   4d06c:	str	x0, [sp, #912]
   4d070:	ldr	x0, [sp, #912]
   4d074:	ldr	w0, [x0, #8]
   4d078:	cmp	w0, #0x3
   4d07c:	b.ne	4d118 <__asan_backtrace_uncompress_zdebug@@Base+0x6b4>  // b.any
   4d080:	ldr	x0, [sp, #912]
   4d084:	ldr	w0, [x0]
   4d088:	cmp	w0, #0x4
   4d08c:	b.ne	4d118 <__asan_backtrace_uncompress_zdebug@@Base+0x6b4>  // b.any
   4d090:	ldr	x0, [sp, #912]
   4d094:	add	x3, x0, #0xc
   4d098:	mov	x2, #0x4                   	// #4
   4d09c:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   4d0a0:	add	x1, x0, #0xb08
   4d0a4:	mov	x0, x3
   4d0a8:	bl	6db0 <__asan_internal_strncmp@plt>
   4d0ac:	cmp	w0, #0x0
   4d0b0:	b.ne	4d118 <__asan_backtrace_uncompress_zdebug@@Base+0x6b4>  // b.any
   4d0b4:	ldr	x0, [sp, #936]
   4d0b8:	ldr	x1, [x0, #32]
   4d0bc:	ldr	x0, [sp, #912]
   4d0c0:	ldr	w0, [x0]
   4d0c4:	add	w0, w0, #0x3
   4d0c8:	and	w2, w0, #0xfffffffc
   4d0cc:	ldr	x0, [sp, #912]
   4d0d0:	ldr	w0, [x0, #4]
   4d0d4:	add	w0, w2, w0
   4d0d8:	add	w0, w0, #0xc
   4d0dc:	mov	w0, w0
   4d0e0:	cmp	x1, x0
   4d0e4:	b.hi	4d118 <__asan_backtrace_uncompress_zdebug@@Base+0x6b4>  // b.pmore
   4d0e8:	ldr	x0, [sp, #912]
   4d0ec:	add	x1, x0, #0xc
   4d0f0:	ldr	x0, [sp, #912]
   4d0f4:	ldr	w0, [x0]
   4d0f8:	add	w0, w0, #0x3
   4d0fc:	mov	w0, w0
   4d100:	and	x0, x0, #0xfffffffc
   4d104:	add	x0, x1, x0
   4d108:	str	x0, [sp, #1168]
   4d10c:	ldr	x0, [sp, #912]
   4d110:	ldr	w0, [x0, #4]
   4d114:	str	w0, [sp, #1164]
   4d118:	ldr	w0, [sp, #1256]
   4d11c:	cmp	w0, #0x0
   4d120:	b.eq	4d150 <__asan_backtrace_uncompress_zdebug@@Base+0x6ec>  // b.none
   4d124:	ldr	w1, [sp, #1164]
   4d128:	ldr	w0, [sp, #1256]
   4d12c:	cmp	w1, w0
   4d130:	b.ne	4deec <__asan_backtrace_uncompress_zdebug@@Base+0x1488>  // b.any
   4d134:	ldr	w0, [sp, #1164]
   4d138:	mov	x2, x0
   4d13c:	ldr	x1, [sp, #1248]
   4d140:	ldr	x0, [sp, #1168]
   4d144:	bl	6e70 <__asan_internal_memcmp@plt>
   4d148:	cmp	w0, #0x0
   4d14c:	b.ne	4def4 <__asan_backtrace_uncompress_zdebug@@Base+0x1490>  // b.any
   4d150:	ldr	w0, [sp, #1240]
   4d154:	cmp	w0, #0x0
   4d158:	b.ne	4d228 <__asan_backtrace_uncompress_zdebug@@Base+0x7c4>  // b.any
   4d15c:	ldr	w0, [sp, #1160]
   4d160:	cmp	w0, #0x0
   4d164:	b.ne	4d228 <__asan_backtrace_uncompress_zdebug@@Base+0x7c4>  // b.any
   4d168:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   4d16c:	add	x1, x0, #0xb10
   4d170:	ldr	x0, [sp, #920]
   4d174:	bl	6d70 <__asan_internal_strcmp@plt>
   4d178:	cmp	w0, #0x0
   4d17c:	b.ne	4d228 <__asan_backtrace_uncompress_zdebug@@Base+0x7c4>  // b.any
   4d180:	ldr	x0, [sp, #936]
   4d184:	ldr	x0, [x0, #24]
   4d188:	mov	x2, x0
   4d18c:	ldr	x0, [sp, #936]
   4d190:	ldr	x0, [x0, #32]
   4d194:	add	x1, sp, #0x148
   4d198:	mov	x6, x1
   4d19c:	ldr	x5, [sp, #112]
   4d1a0:	ldr	x4, [sp, #120]
   4d1a4:	mov	x3, x0
   4d1a8:	ldr	w1, [sp, #140]
   4d1ac:	ldr	x0, [sp, #152]
   4d1b0:	bl	6d20 <__asan_backtrace_get_view@plt>
   4d1b4:	cmp	w0, #0x0
   4d1b8:	b.eq	4defc <__asan_backtrace_uncompress_zdebug@@Base+0x1498>  // b.none
   4d1bc:	mov	w0, #0x1                   	// #1
   4d1c0:	str	w0, [sp, #1160]
   4d1c4:	ldr	x0, [sp, #328]
   4d1c8:	str	x0, [sp, #904]
   4d1cc:	ldr	x0, [sp, #936]
   4d1d0:	ldr	x0, [x0, #32]
   4d1d4:	mov	x1, x0
   4d1d8:	ldr	x0, [sp, #904]
   4d1dc:	bl	6d90 <__asan_internal_strnlen@plt>
   4d1e0:	str	x0, [sp, #896]
   4d1e4:	ldr	x0, [sp, #896]
   4d1e8:	add	x0, x0, #0x3
   4d1ec:	and	x0, x0, #0xfffffffffffffffc
   4d1f0:	str	x0, [sp, #896]
   4d1f4:	ldr	x0, [sp, #896]
   4d1f8:	add	x1, x0, #0x4
   4d1fc:	ldr	x0, [sp, #936]
   4d200:	ldr	x0, [x0, #32]
   4d204:	cmp	x1, x0
   4d208:	b.hi	4d228 <__asan_backtrace_uncompress_zdebug@@Base+0x7c4>  // b.pmore
   4d20c:	ldr	x0, [sp, #904]
   4d210:	str	x0, [sp, #1152]
   4d214:	ldr	x1, [sp, #904]
   4d218:	ldr	x0, [sp, #896]
   4d21c:	add	x0, x1, x0
   4d220:	ldr	w0, [x0]
   4d224:	str	w0, [sp, #1148]
   4d228:	ldr	w0, [sp, #1144]
   4d22c:	cmp	w0, #0x0
   4d230:	b.ne	4d300 <__asan_backtrace_uncompress_zdebug@@Base+0x89c>  // b.any
   4d234:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   4d238:	add	x1, x0, #0xb20
   4d23c:	ldr	x0, [sp, #920]
   4d240:	bl	6d70 <__asan_internal_strcmp@plt>
   4d244:	cmp	w0, #0x0
   4d248:	b.ne	4d300 <__asan_backtrace_uncompress_zdebug@@Base+0x89c>  // b.any
   4d24c:	ldr	x0, [sp, #936]
   4d250:	ldr	x0, [x0, #24]
   4d254:	mov	x2, x0
   4d258:	ldr	x0, [sp, #936]
   4d25c:	ldr	x0, [x0, #32]
   4d260:	add	x1, sp, #0x130
   4d264:	mov	x6, x1
   4d268:	ldr	x5, [sp, #112]
   4d26c:	ldr	x4, [sp, #120]
   4d270:	mov	x3, x0
   4d274:	ldr	w1, [sp, #140]
   4d278:	ldr	x0, [sp, #152]
   4d27c:	bl	6d20 <__asan_backtrace_get_view@plt>
   4d280:	cmp	w0, #0x0
   4d284:	b.eq	4df04 <__asan_backtrace_uncompress_zdebug@@Base+0x14a0>  // b.none
   4d288:	mov	w0, #0x1                   	// #1
   4d28c:	str	w0, [sp, #1144]
   4d290:	ldr	x0, [sp, #304]
   4d294:	str	x0, [sp, #888]
   4d298:	ldr	x0, [sp, #888]
   4d29c:	str	x0, [sp, #1136]
   4d2a0:	ldr	x0, [sp, #936]
   4d2a4:	ldr	x0, [x0, #32]
   4d2a8:	mov	x1, x0
   4d2ac:	ldr	x0, [sp, #888]
   4d2b0:	bl	6d90 <__asan_internal_strnlen@plt>
   4d2b4:	str	x0, [sp, #880]
   4d2b8:	ldr	x0, [sp, #936]
   4d2bc:	ldr	x0, [x0, #32]
   4d2c0:	ldr	x1, [sp, #880]
   4d2c4:	cmp	x1, x0
   4d2c8:	b.cs	4d300 <__asan_backtrace_uncompress_zdebug@@Base+0x89c>  // b.hs, b.nlast
   4d2cc:	ldr	x0, [sp, #880]
   4d2d0:	add	x0, x0, #0x1
   4d2d4:	str	x0, [sp, #880]
   4d2d8:	ldr	x1, [sp, #888]
   4d2dc:	ldr	x0, [sp, #880]
   4d2e0:	add	x0, x1, x0
   4d2e4:	str	x0, [sp, #1128]
   4d2e8:	ldr	x0, [sp, #936]
   4d2ec:	ldr	x0, [x0, #32]
   4d2f0:	mov	w1, w0
   4d2f4:	ldr	x0, [sp, #880]
   4d2f8:	sub	w0, w1, w0
   4d2fc:	str	w0, [sp, #1124]
   4d300:	ldrh	w0, [sp, #810]
   4d304:	cmp	w0, #0x15
   4d308:	b.ne	4d3b8 <__asan_backtrace_uncompress_zdebug@@Base+0x954>  // b.any
   4d30c:	ldr	w0, [sp, #840]
   4d310:	and	w0, w0, #0x2
   4d314:	cmp	w0, #0x0
   4d318:	b.ne	4d3b8 <__asan_backtrace_uncompress_zdebug@@Base+0x954>  // b.any
   4d31c:	ldr	x0, [sp, #936]
   4d320:	ldr	w0, [x0, #4]
   4d324:	cmp	w0, #0x1
   4d328:	b.ne	4d3b8 <__asan_backtrace_uncompress_zdebug@@Base+0x954>  // b.any
   4d32c:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   4d330:	add	x1, x0, #0xb38
   4d334:	ldr	x0, [sp, #920]
   4d338:	bl	6d70 <__asan_internal_strcmp@plt>
   4d33c:	cmp	w0, #0x0
   4d340:	b.ne	4d3b8 <__asan_backtrace_uncompress_zdebug@@Base+0x954>  // b.any
   4d344:	ldr	x0, [sp, #936]
   4d348:	ldr	x0, [x0, #24]
   4d34c:	mov	x2, x0
   4d350:	ldr	x0, [sp, #936]
   4d354:	ldr	x1, [x0, #32]
   4d358:	add	x0, sp, #0xe8
   4d35c:	add	x0, x0, #0x18
   4d360:	mov	x6, x0
   4d364:	ldr	x5, [sp, #112]
   4d368:	ldr	x4, [sp, #120]
   4d36c:	mov	x3, x1
   4d370:	ldr	w1, [sp, #140]
   4d374:	ldr	x0, [sp, #152]
   4d378:	bl	6d20 <__asan_backtrace_get_view@plt>
   4d37c:	cmp	w0, #0x0
   4d380:	b.eq	4df0c <__asan_backtrace_uncompress_zdebug@@Base+0x14a8>  // b.none
   4d384:	add	x0, sp, #0xe8
   4d388:	str	x0, [sp, #1080]
   4d38c:	ldr	x0, [sp, #936]
   4d390:	ldr	x1, [x0, #16]
   4d394:	ldr	x0, [sp, #1080]
   4d398:	str	x1, [x0]
   4d39c:	ldr	x1, [sp, #256]
   4d3a0:	ldr	x0, [sp, #1080]
   4d3a4:	str	x1, [x0, #8]
   4d3a8:	ldr	x0, [sp, #936]
   4d3ac:	ldr	x1, [x0, #32]
   4d3b0:	ldr	x0, [sp, #1080]
   4d3b4:	str	x1, [x0, #16]
   4d3b8:	ldr	w0, [sp, #1188]
   4d3bc:	add	w0, w0, #0x1
   4d3c0:	str	w0, [sp, #1188]
   4d3c4:	ldr	w1, [sp, #1188]
   4d3c8:	ldr	w0, [sp, #1212]
   4d3cc:	cmp	w1, w0
   4d3d0:	b.cc	4cea8 <__asan_backtrace_uncompress_zdebug@@Base+0x444>  // b.lo, b.ul, b.last
   4d3d4:	ldr	w0, [sp, #1196]
   4d3d8:	cmp	w0, #0x0
   4d3dc:	b.ne	4d3e8 <__asan_backtrace_uncompress_zdebug@@Base+0x984>  // b.any
   4d3e0:	ldr	w0, [sp, #1192]
   4d3e4:	str	w0, [sp, #1196]
   4d3e8:	ldr	w0, [sp, #1196]
   4d3ec:	cmp	w0, #0x0
   4d3f0:	b.eq	4d5c0 <__asan_backtrace_uncompress_zdebug@@Base+0xb5c>  // b.none
   4d3f4:	ldr	w0, [sp, #1240]
   4d3f8:	cmp	w0, #0x0
   4d3fc:	b.ne	4d5c0 <__asan_backtrace_uncompress_zdebug@@Base+0xb5c>  // b.any
   4d400:	ldr	w0, [sp, #1196]
   4d404:	sub	w0, w0, #0x1
   4d408:	mov	w0, w0
   4d40c:	lsl	x0, x0, #6
   4d410:	ldr	x1, [sp, #1048]
   4d414:	add	x0, x1, x0
   4d418:	str	x0, [sp, #1008]
   4d41c:	ldr	x0, [sp, #1008]
   4d420:	ldr	w0, [x0, #40]
   4d424:	str	w0, [sp, #1004]
   4d428:	ldr	w1, [sp, #1004]
   4d42c:	ldr	w0, [sp, #1212]
   4d430:	cmp	w1, w0
   4d434:	b.cc	4d454 <__asan_backtrace_uncompress_zdebug@@Base+0x9f0>  // b.lo, b.ul, b.last
   4d438:	ldr	x3, [sp, #120]
   4d43c:	mov	w2, #0x0                   	// #0
   4d440:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   4d444:	add	x1, x0, #0xb40
   4d448:	ldr	x0, [sp, #112]
   4d44c:	blr	x3
   4d450:	b	4df68 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   4d454:	ldr	w0, [sp, #1004]
   4d458:	sub	w0, w0, #0x1
   4d45c:	mov	w0, w0
   4d460:	lsl	x0, x0, #6
   4d464:	ldr	x1, [sp, #1048]
   4d468:	add	x0, x1, x0
   4d46c:	str	x0, [sp, #992]
   4d470:	ldr	x0, [sp, #1008]
   4d474:	ldr	x0, [x0, #24]
   4d478:	mov	x2, x0
   4d47c:	ldr	x0, [sp, #1008]
   4d480:	ldr	x0, [x0, #32]
   4d484:	add	x1, sp, #0x190
   4d488:	mov	x6, x1
   4d48c:	ldr	x5, [sp, #112]
   4d490:	ldr	x4, [sp, #120]
   4d494:	mov	x3, x0
   4d498:	ldr	w1, [sp, #140]
   4d49c:	ldr	x0, [sp, #152]
   4d4a0:	bl	6d20 <__asan_backtrace_get_view@plt>
   4d4a4:	cmp	w0, #0x0
   4d4a8:	b.eq	4df14 <__asan_backtrace_uncompress_zdebug@@Base+0x14b0>  // b.none
   4d4ac:	mov	w0, #0x1                   	// #1
   4d4b0:	str	w0, [sp, #1184]
   4d4b4:	ldr	x0, [sp, #992]
   4d4b8:	ldr	x0, [x0, #24]
   4d4bc:	mov	x2, x0
   4d4c0:	ldr	x0, [sp, #992]
   4d4c4:	ldr	x0, [x0, #32]
   4d4c8:	add	x1, sp, #0x178
   4d4cc:	mov	x6, x1
   4d4d0:	ldr	x5, [sp, #112]
   4d4d4:	ldr	x4, [sp, #120]
   4d4d8:	mov	x3, x0
   4d4dc:	ldr	w1, [sp, #140]
   4d4e0:	ldr	x0, [sp, #152]
   4d4e4:	bl	6d20 <__asan_backtrace_get_view@plt>
   4d4e8:	cmp	w0, #0x0
   4d4ec:	b.eq	4df1c <__asan_backtrace_uncompress_zdebug@@Base+0x14b8>  // b.none
   4d4f0:	mov	w0, #0x1                   	// #1
   4d4f4:	str	w0, [sp, #1180]
   4d4f8:	ldr	x3, [sp, #112]
   4d4fc:	ldr	x2, [sp, #120]
   4d500:	mov	x1, #0x18                  	// #24
   4d504:	ldr	x0, [sp, #152]
   4d508:	bl	6b10 <__asan_backtrace_alloc@plt>
   4d50c:	str	x0, [sp, #984]
   4d510:	ldr	x0, [sp, #984]
   4d514:	cmp	x0, #0x0
   4d518:	b.eq	4df24 <__asan_backtrace_uncompress_zdebug@@Base+0x14c0>  // b.none
   4d51c:	ldr	x1, [sp, #400]
   4d520:	ldr	x0, [sp, #1008]
   4d524:	ldr	x2, [x0, #32]
   4d528:	ldr	x3, [sp, #376]
   4d52c:	ldr	x0, [sp, #992]
   4d530:	ldr	x4, [x0, #32]
   4d534:	ldr	x0, [sp, #1080]
   4d538:	str	x0, [sp, #8]
   4d53c:	ldr	x0, [sp, #984]
   4d540:	str	x0, [sp]
   4d544:	ldr	x7, [sp, #112]
   4d548:	ldr	x6, [sp, #120]
   4d54c:	mov	x5, x4
   4d550:	mov	x4, x3
   4d554:	mov	x3, x2
   4d558:	mov	x2, x1
   4d55c:	ldr	x1, [sp, #128]
   4d560:	ldr	x0, [sp, #152]
   4d564:	bl	48f90 <__asan_internal_strnlen@@Base+0x2ec>
   4d568:	cmp	w0, #0x0
   4d56c:	b.ne	4d58c <__asan_backtrace_uncompress_zdebug@@Base+0xb28>  // b.any
   4d570:	ldr	x4, [sp, #112]
   4d574:	ldr	x3, [sp, #120]
   4d578:	mov	x2, #0x18                  	// #24
   4d57c:	ldr	x1, [sp, #984]
   4d580:	ldr	x0, [sp, #152]
   4d584:	bl	6e00 <__asan_backtrace_free@plt>
   4d588:	b	4df68 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   4d58c:	add	x0, sp, #0x190
   4d590:	ldr	x3, [sp, #112]
   4d594:	ldr	x2, [sp, #120]
   4d598:	mov	x1, x0
   4d59c:	ldr	x0, [sp, #152]
   4d5a0:	bl	69a0 <__asan_backtrace_release_view@plt>
   4d5a4:	str	wzr, [sp, #1184]
   4d5a8:	ldr	x0, [sp, #96]
   4d5ac:	mov	w1, #0x1                   	// #1
   4d5b0:	str	w1, [x0]
   4d5b4:	ldr	x1, [sp, #984]
   4d5b8:	ldr	x0, [sp, #152]
   4d5bc:	bl	4932c <__asan_internal_strnlen@@Base+0x688>
   4d5c0:	add	x0, sp, #0x300
   4d5c4:	ldr	x3, [sp, #112]
   4d5c8:	ldr	x2, [sp, #120]
   4d5cc:	mov	x1, x0
   4d5d0:	ldr	x0, [sp, #152]
   4d5d4:	bl	69a0 <__asan_backtrace_release_view@plt>
   4d5d8:	str	wzr, [sp, #1204]
   4d5dc:	add	x0, sp, #0x2e8
   4d5e0:	ldr	x3, [sp, #112]
   4d5e4:	ldr	x2, [sp, #120]
   4d5e8:	mov	x1, x0
   4d5ec:	ldr	x0, [sp, #152]
   4d5f0:	bl	69a0 <__asan_backtrace_release_view@plt>
   4d5f4:	str	wzr, [sp, #1200]
   4d5f8:	ldr	x0, [sp, #1168]
   4d5fc:	cmp	x0, #0x0
   4d600:	b.eq	4d714 <__asan_backtrace_uncompress_zdebug@@Base+0xcb0>  // b.none
   4d604:	ldr	w0, [sp, #1164]
   4d608:	ldr	x4, [sp, #112]
   4d60c:	ldr	x3, [sp, #120]
   4d610:	mov	x2, x0
   4d614:	ldr	x1, [sp, #1168]
   4d618:	ldr	x0, [sp, #152]
   4d61c:	bl	496b0 <__asan_internal_strnlen@@Base+0xa0c>
   4d620:	str	w0, [sp, #980]
   4d624:	ldr	w0, [sp, #980]
   4d628:	cmp	w0, #0x0
   4d62c:	b.lt	4d714 <__asan_backtrace_uncompress_zdebug@@Base+0xcb0>  // b.tstop
   4d630:	add	x0, sp, #0x160
   4d634:	ldr	x3, [sp, #112]
   4d638:	ldr	x2, [sp, #120]
   4d63c:	mov	x1, x0
   4d640:	ldr	x0, [sp, #152]
   4d644:	bl	69a0 <__asan_backtrace_release_view@plt>
   4d648:	ldr	w0, [sp, #1160]
   4d64c:	cmp	w0, #0x0
   4d650:	b.eq	4d66c <__asan_backtrace_uncompress_zdebug@@Base+0xc08>  // b.none
   4d654:	add	x0, sp, #0x148
   4d658:	ldr	x3, [sp, #112]
   4d65c:	ldr	x2, [sp, #120]
   4d660:	mov	x1, x0
   4d664:	ldr	x0, [sp, #152]
   4d668:	bl	69a0 <__asan_backtrace_release_view@plt>
   4d66c:	ldr	w0, [sp, #1144]
   4d670:	cmp	w0, #0x0
   4d674:	b.eq	4d690 <__asan_backtrace_uncompress_zdebug@@Base+0xc2c>  // b.none
   4d678:	add	x0, sp, #0x130
   4d67c:	ldr	x3, [sp, #112]
   4d680:	ldr	x2, [sp, #120]
   4d684:	mov	x1, x0
   4d688:	ldr	x0, [sp, #152]
   4d68c:	bl	69a0 <__asan_backtrace_release_view@plt>
   4d690:	str	wzr, [sp, #40]
   4d694:	str	xzr, [sp, #32]
   4d698:	mov	w0, #0x1                   	// #1
   4d69c:	str	w0, [sp, #24]
   4d6a0:	str	wzr, [sp, #16]
   4d6a4:	str	xzr, [sp, #8]
   4d6a8:	ldr	x0, [sp, #1216]
   4d6ac:	str	x0, [sp]
   4d6b0:	ldr	x7, [sp, #96]
   4d6b4:	ldr	x6, [sp, #104]
   4d6b8:	ldr	x5, [sp, #112]
   4d6bc:	ldr	x4, [sp, #120]
   4d6c0:	ldr	x3, [sp, #128]
   4d6c4:	ldr	w2, [sp, #980]
   4d6c8:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   4d6cc:	add	x1, x0, #0x528
   4d6d0:	ldr	x0, [sp, #152]
   4d6d4:	bl	4cb00 <__asan_backtrace_uncompress_zdebug@@Base+0x9c>
   4d6d8:	str	w0, [sp, #976]
   4d6dc:	ldr	w0, [sp, #976]
   4d6e0:	cmp	w0, #0x0
   4d6e4:	b.ge	4d6fc <__asan_backtrace_uncompress_zdebug@@Base+0xc98>  // b.tcont
   4d6e8:	ldr	x2, [sp, #112]
   4d6ec:	ldr	x1, [sp, #120]
   4d6f0:	ldr	w0, [sp, #980]
   4d6f4:	bl	6ee0 <__asan_backtrace_close@plt>
   4d6f8:	b	4d70c <__asan_backtrace_uncompress_zdebug@@Base+0xca8>
   4d6fc:	ldr	x2, [sp, #112]
   4d700:	ldr	x1, [sp, #120]
   4d704:	ldr	w0, [sp, #140]
   4d708:	bl	6ee0 <__asan_backtrace_close@plt>
   4d70c:	ldr	w0, [sp, #976]
   4d710:	b	4e0d0 <__asan_backtrace_uncompress_zdebug@@Base+0x166c>
   4d714:	ldr	w0, [sp, #1176]
   4d718:	cmp	w0, #0x0
   4d71c:	b.eq	4d73c <__asan_backtrace_uncompress_zdebug@@Base+0xcd8>  // b.none
   4d720:	add	x0, sp, #0x160
   4d724:	ldr	x3, [sp, #112]
   4d728:	ldr	x2, [sp, #120]
   4d72c:	mov	x1, x0
   4d730:	ldr	x0, [sp, #152]
   4d734:	bl	69a0 <__asan_backtrace_release_view@plt>
   4d738:	str	wzr, [sp, #1176]
   4d73c:	ldr	x0, [sp, #1080]
   4d740:	cmp	x0, #0x0
   4d744:	b.eq	4d768 <__asan_backtrace_uncompress_zdebug@@Base+0xd04>  // b.none
   4d748:	ldr	x0, [sp, #1080]
   4d74c:	add	x0, x0, #0x18
   4d750:	ldr	x3, [sp, #112]
   4d754:	ldr	x2, [sp, #120]
   4d758:	mov	x1, x0
   4d75c:	ldr	x0, [sp, #152]
   4d760:	bl	69a0 <__asan_backtrace_release_view@plt>
   4d764:	str	xzr, [sp, #1080]
   4d768:	ldr	x0, [sp, #1152]
   4d76c:	cmp	x0, #0x0
   4d770:	b.eq	4d860 <__asan_backtrace_uncompress_zdebug@@Base+0xdfc>  // b.none
   4d774:	ldr	x5, [sp, #112]
   4d778:	ldr	x4, [sp, #120]
   4d77c:	ldr	w3, [sp, #1148]
   4d780:	ldr	x2, [sp, #1152]
   4d784:	ldr	x1, [sp, #144]
   4d788:	ldr	x0, [sp, #152]
   4d78c:	bl	49d44 <__asan_internal_strnlen@@Base+0x10a0>
   4d790:	str	w0, [sp, #972]
   4d794:	ldr	w0, [sp, #972]
   4d798:	cmp	w0, #0x0
   4d79c:	b.lt	4d860 <__asan_backtrace_uncompress_zdebug@@Base+0xdfc>  // b.tstop
   4d7a0:	add	x0, sp, #0x148
   4d7a4:	ldr	x3, [sp, #112]
   4d7a8:	ldr	x2, [sp, #120]
   4d7ac:	mov	x1, x0
   4d7b0:	ldr	x0, [sp, #152]
   4d7b4:	bl	69a0 <__asan_backtrace_release_view@plt>
   4d7b8:	ldr	w0, [sp, #1144]
   4d7bc:	cmp	w0, #0x0
   4d7c0:	b.eq	4d7dc <__asan_backtrace_uncompress_zdebug@@Base+0xd78>  // b.none
   4d7c4:	add	x0, sp, #0x130
   4d7c8:	ldr	x3, [sp, #112]
   4d7cc:	ldr	x2, [sp, #120]
   4d7d0:	mov	x1, x0
   4d7d4:	ldr	x0, [sp, #152]
   4d7d8:	bl	69a0 <__asan_backtrace_release_view@plt>
   4d7dc:	str	wzr, [sp, #40]
   4d7e0:	str	xzr, [sp, #32]
   4d7e4:	mov	w0, #0x1                   	// #1
   4d7e8:	str	w0, [sp, #24]
   4d7ec:	str	wzr, [sp, #16]
   4d7f0:	str	xzr, [sp, #8]
   4d7f4:	ldr	x0, [sp, #1216]
   4d7f8:	str	x0, [sp]
   4d7fc:	ldr	x7, [sp, #96]
   4d800:	ldr	x6, [sp, #104]
   4d804:	ldr	x5, [sp, #112]
   4d808:	ldr	x4, [sp, #120]
   4d80c:	ldr	x3, [sp, #128]
   4d810:	ldr	w2, [sp, #972]
   4d814:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   4d818:	add	x1, x0, #0x528
   4d81c:	ldr	x0, [sp, #152]
   4d820:	bl	4cb00 <__asan_backtrace_uncompress_zdebug@@Base+0x9c>
   4d824:	str	w0, [sp, #968]
   4d828:	ldr	w0, [sp, #968]
   4d82c:	cmp	w0, #0x0
   4d830:	b.ge	4d848 <__asan_backtrace_uncompress_zdebug@@Base+0xde4>  // b.tcont
   4d834:	ldr	x2, [sp, #112]
   4d838:	ldr	x1, [sp, #120]
   4d83c:	ldr	w0, [sp, #972]
   4d840:	bl	6ee0 <__asan_backtrace_close@plt>
   4d844:	b	4d858 <__asan_backtrace_uncompress_zdebug@@Base+0xdf4>
   4d848:	ldr	x2, [sp, #112]
   4d84c:	ldr	x1, [sp, #120]
   4d850:	ldr	w0, [sp, #140]
   4d854:	bl	6ee0 <__asan_backtrace_close@plt>
   4d858:	ldr	w0, [sp, #968]
   4d85c:	b	4e0d0 <__asan_backtrace_uncompress_zdebug@@Base+0x166c>
   4d860:	ldr	w0, [sp, #1160]
   4d864:	cmp	w0, #0x0
   4d868:	b.eq	4d888 <__asan_backtrace_uncompress_zdebug@@Base+0xe24>  // b.none
   4d86c:	add	x0, sp, #0x148
   4d870:	ldr	x3, [sp, #112]
   4d874:	ldr	x2, [sp, #120]
   4d878:	mov	x1, x0
   4d87c:	ldr	x0, [sp, #152]
   4d880:	bl	69a0 <__asan_backtrace_release_view@plt>
   4d884:	str	wzr, [sp, #1160]
   4d888:	str	xzr, [sp, #224]
   4d88c:	ldr	x0, [sp, #1136]
   4d890:	cmp	x0, #0x0
   4d894:	b.eq	4d958 <__asan_backtrace_uncompress_zdebug@@Base+0xef4>  // b.none
   4d898:	ldr	x5, [sp, #112]
   4d89c:	ldr	x4, [sp, #120]
   4d8a0:	mov	w3, #0x0                   	// #0
   4d8a4:	ldr	x2, [sp, #1136]
   4d8a8:	ldr	x1, [sp, #144]
   4d8ac:	ldr	x0, [sp, #152]
   4d8b0:	bl	49d44 <__asan_internal_strnlen@@Base+0x10a0>
   4d8b4:	str	w0, [sp, #964]
   4d8b8:	ldr	w0, [sp, #964]
   4d8bc:	cmp	w0, #0x0
   4d8c0:	b.lt	4d958 <__asan_backtrace_uncompress_zdebug@@Base+0xef4>  // b.tstop
   4d8c4:	ldr	w0, [sp, #1124]
   4d8c8:	str	w0, [sp, #40]
   4d8cc:	ldr	x0, [sp, #1128]
   4d8d0:	str	x0, [sp, #32]
   4d8d4:	mov	w0, #0x1                   	// #1
   4d8d8:	str	w0, [sp, #24]
   4d8dc:	str	wzr, [sp, #16]
   4d8e0:	add	x0, sp, #0xe0
   4d8e4:	str	x0, [sp, #8]
   4d8e8:	ldr	x0, [sp, #1216]
   4d8ec:	str	x0, [sp]
   4d8f0:	ldr	x7, [sp, #96]
   4d8f4:	ldr	x6, [sp, #104]
   4d8f8:	ldr	x5, [sp, #112]
   4d8fc:	ldr	x4, [sp, #120]
   4d900:	ldr	x3, [sp, #128]
   4d904:	ldr	w2, [sp, #964]
   4d908:	ldr	x1, [sp, #144]
   4d90c:	ldr	x0, [sp, #152]
   4d910:	bl	4cb00 <__asan_backtrace_uncompress_zdebug@@Base+0x9c>
   4d914:	str	w0, [sp, #960]
   4d918:	add	x0, sp, #0x130
   4d91c:	ldr	x3, [sp, #112]
   4d920:	ldr	x2, [sp, #120]
   4d924:	mov	x1, x0
   4d928:	ldr	x0, [sp, #152]
   4d92c:	bl	69a0 <__asan_backtrace_release_view@plt>
   4d930:	str	wzr, [sp, #1144]
   4d934:	ldr	w0, [sp, #960]
   4d938:	cmp	w0, #0x0
   4d93c:	b.ge	4d958 <__asan_backtrace_uncompress_zdebug@@Base+0xef4>  // b.tcont
   4d940:	ldr	x2, [sp, #112]
   4d944:	ldr	x1, [sp, #120]
   4d948:	ldr	w0, [sp, #964]
   4d94c:	bl	6ee0 <__asan_backtrace_close@plt>
   4d950:	ldr	w0, [sp, #960]
   4d954:	b	4e0d0 <__asan_backtrace_uncompress_zdebug@@Base+0x166c>
   4d958:	ldr	w0, [sp, #1144]
   4d95c:	cmp	w0, #0x0
   4d960:	b.eq	4d980 <__asan_backtrace_uncompress_zdebug@@Base+0xf1c>  // b.none
   4d964:	add	x0, sp, #0x130
   4d968:	ldr	x3, [sp, #112]
   4d96c:	ldr	x2, [sp, #120]
   4d970:	mov	x1, x0
   4d974:	ldr	x0, [sp, #152]
   4d978:	bl	69a0 <__asan_backtrace_release_view@plt>
   4d97c:	str	wzr, [sp, #1144]
   4d980:	str	xzr, [sp, #1112]
   4d984:	str	xzr, [sp, #1104]
   4d988:	str	wzr, [sp, #1188]
   4d98c:	b	4da3c <__asan_backtrace_uncompress_zdebug@@Base+0xfd8>
   4d990:	ldr	w0, [sp, #1188]
   4d994:	lsl	x0, x0, #5
   4d998:	add	x1, sp, #0x1b0
   4d99c:	ldr	x0, [x1, x0]
   4d9a0:	cmp	x0, #0x0
   4d9a4:	b.eq	4da2c <__asan_backtrace_uncompress_zdebug@@Base+0xfc8>  // b.none
   4d9a8:	ldr	x0, [sp, #1112]
   4d9ac:	cmp	x0, #0x0
   4d9b0:	b.eq	4d9d0 <__asan_backtrace_uncompress_zdebug@@Base+0xf6c>  // b.none
   4d9b4:	ldr	w0, [sp, #1188]
   4d9b8:	lsl	x0, x0, #5
   4d9bc:	add	x1, sp, #0x1a8
   4d9c0:	ldr	x0, [x1, x0]
   4d9c4:	ldr	x1, [sp, #1112]
   4d9c8:	cmp	x1, x0
   4d9cc:	b.le	4d9e4 <__asan_backtrace_uncompress_zdebug@@Base+0xf80>
   4d9d0:	ldr	w0, [sp, #1188]
   4d9d4:	lsl	x0, x0, #5
   4d9d8:	add	x1, sp, #0x1a8
   4d9dc:	ldr	x0, [x1, x0]
   4d9e0:	str	x0, [sp, #1112]
   4d9e4:	ldr	w0, [sp, #1188]
   4d9e8:	lsl	x0, x0, #5
   4d9ec:	add	x1, sp, #0x1a8
   4d9f0:	ldr	x0, [x1, x0]
   4d9f4:	mov	x2, x0
   4d9f8:	ldr	w0, [sp, #1188]
   4d9fc:	lsl	x0, x0, #5
   4da00:	add	x1, sp, #0x1b0
   4da04:	ldr	x0, [x1, x0]
   4da08:	add	x0, x2, x0
   4da0c:	str	x0, [sp, #944]
   4da10:	ldr	x1, [sp, #944]
   4da14:	ldr	x0, [sp, #1104]
   4da18:	cmp	x1, x0
   4da1c:	b.le	4da30 <__asan_backtrace_uncompress_zdebug@@Base+0xfcc>
   4da20:	ldr	x0, [sp, #944]
   4da24:	str	x0, [sp, #1104]
   4da28:	b	4da30 <__asan_backtrace_uncompress_zdebug@@Base+0xfcc>
   4da2c:	nop
   4da30:	ldr	w0, [sp, #1188]
   4da34:	add	w0, w0, #0x1
   4da38:	str	w0, [sp, #1188]
   4da3c:	ldr	w0, [sp, #1188]
   4da40:	cmp	w0, #0x9
   4da44:	b.ls	4d990 <__asan_backtrace_uncompress_zdebug@@Base+0xf2c>  // b.plast
   4da48:	ldr	x0, [sp, #1112]
   4da4c:	cmp	x0, #0x0
   4da50:	b.eq	4da60 <__asan_backtrace_uncompress_zdebug@@Base+0xffc>  // b.none
   4da54:	ldr	x0, [sp, #1104]
   4da58:	cmp	x0, #0x0
   4da5c:	b.ne	4da80 <__asan_backtrace_uncompress_zdebug@@Base+0x101c>  // b.any
   4da60:	ldr	x2, [sp, #112]
   4da64:	ldr	x1, [sp, #120]
   4da68:	ldr	w0, [sp, #140]
   4da6c:	bl	6ee0 <__asan_backtrace_close@plt>
   4da70:	cmp	w0, #0x0
   4da74:	b.eq	4df2c <__asan_backtrace_uncompress_zdebug@@Base+0x14c8>  // b.none
   4da78:	mov	w0, #0x1                   	// #1
   4da7c:	b	4e0d0 <__asan_backtrace_uncompress_zdebug@@Base+0x166c>
   4da80:	ldr	x1, [sp, #1104]
   4da84:	ldr	x0, [sp, #1112]
   4da88:	sub	x0, x1, x0
   4da8c:	mov	x1, x0
   4da90:	add	x0, sp, #0x118
   4da94:	mov	x6, x0
   4da98:	ldr	x5, [sp, #112]
   4da9c:	ldr	x4, [sp, #120]
   4daa0:	mov	x3, x1
   4daa4:	ldr	x2, [sp, #1112]
   4daa8:	ldr	w1, [sp, #140]
   4daac:	ldr	x0, [sp, #152]
   4dab0:	bl	6d20 <__asan_backtrace_get_view@plt>
   4dab4:	cmp	w0, #0x0
   4dab8:	b.eq	4df34 <__asan_backtrace_uncompress_zdebug@@Base+0x14d0>  // b.none
   4dabc:	mov	w0, #0x1                   	// #1
   4dac0:	str	w0, [sp, #1100]
   4dac4:	ldr	x2, [sp, #112]
   4dac8:	ldr	x1, [sp, #120]
   4dacc:	ldr	w0, [sp, #140]
   4dad0:	bl	6ee0 <__asan_backtrace_close@plt>
   4dad4:	cmp	w0, #0x0
   4dad8:	b.eq	4df3c <__asan_backtrace_uncompress_zdebug@@Base+0x14d8>  // b.none
   4dadc:	mov	w0, #0xffffffff            	// #-1
   4dae0:	str	w0, [sp, #140]
   4dae4:	str	wzr, [sp, #1096]
   4dae8:	str	wzr, [sp, #1188]
   4daec:	b	4db70 <__asan_backtrace_uncompress_zdebug@@Base+0x110c>
   4daf0:	ldr	w0, [sp, #1188]
   4daf4:	lsl	x0, x0, #5
   4daf8:	add	x1, sp, #0x1b0
   4dafc:	ldr	x0, [x1, x0]
   4db00:	cmp	x0, #0x0
   4db04:	b.ne	4db1c <__asan_backtrace_uncompress_zdebug@@Base+0x10b8>  // b.any
   4db08:	ldr	w0, [sp, #1188]
   4db0c:	lsl	x0, x0, #5
   4db10:	add	x1, sp, #0x1b8
   4db14:	str	xzr, [x1, x0]
   4db18:	b	4db64 <__asan_backtrace_uncompress_zdebug@@Base+0x1100>
   4db1c:	ldr	x0, [sp, #280]
   4db20:	ldr	w1, [sp, #1188]
   4db24:	lsl	x1, x1, #5
   4db28:	add	x2, sp, #0x1a8
   4db2c:	ldr	x2, [x2, x1]
   4db30:	ldr	x1, [sp, #1112]
   4db34:	sub	x1, x2, x1
   4db38:	add	x2, x0, x1
   4db3c:	ldr	w0, [sp, #1188]
   4db40:	lsl	x0, x0, #5
   4db44:	add	x1, sp, #0x1b8
   4db48:	str	x2, [x1, x0]
   4db4c:	ldr	w0, [sp, #1188]
   4db50:	cmp	w0, #0x4
   4db54:	b.hi	4db64 <__asan_backtrace_uncompress_zdebug@@Base+0x1100>  // b.pmore
   4db58:	ldr	w0, [sp, #1096]
   4db5c:	add	w0, w0, #0x1
   4db60:	str	w0, [sp, #1096]
   4db64:	ldr	w0, [sp, #1188]
   4db68:	add	w0, w0, #0x1
   4db6c:	str	w0, [sp, #1188]
   4db70:	ldr	w0, [sp, #1188]
   4db74:	cmp	w0, #0x9
   4db78:	b.ls	4daf0 <__asan_backtrace_uncompress_zdebug@@Base+0x108c>  // b.plast
   4db7c:	str	xzr, [sp, #1088]
   4db80:	str	wzr, [sp, #1188]
   4db84:	b	4dc88 <__asan_backtrace_uncompress_zdebug@@Base+0x1224>
   4db88:	ldr	w0, [sp, #1188]
   4db8c:	add	w0, w0, #0x5
   4db90:	add	x1, sp, #0x1a8
   4db94:	mov	w0, w0
   4db98:	lsl	x0, x0, #5
   4db9c:	add	x0, x1, x0
   4dba0:	str	x0, [sp, #952]
   4dba4:	ldr	w0, [sp, #1188]
   4dba8:	lsl	x0, x0, #5
   4dbac:	add	x1, sp, #0x1b0
   4dbb0:	ldr	x0, [x1, x0]
   4dbb4:	cmp	x0, #0x0
   4dbb8:	b.ne	4dc7c <__asan_backtrace_uncompress_zdebug@@Base+0x1218>  // b.any
   4dbbc:	ldr	x0, [sp, #952]
   4dbc0:	ldr	x0, [x0, #8]
   4dbc4:	cmp	x0, #0x0
   4dbc8:	b.eq	4dc7c <__asan_backtrace_uncompress_zdebug@@Base+0x1218>  // b.none
   4dbcc:	ldr	x0, [sp, #1088]
   4dbd0:	cmp	x0, #0x0
   4dbd4:	b.ne	4dbfc <__asan_backtrace_uncompress_zdebug@@Base+0x1198>  // b.any
   4dbd8:	ldr	x3, [sp, #112]
   4dbdc:	ldr	x2, [sp, #120]
   4dbe0:	mov	x1, #0x13b4                	// #5044
   4dbe4:	ldr	x0, [sp, #152]
   4dbe8:	bl	6b10 <__asan_backtrace_alloc@plt>
   4dbec:	str	x0, [sp, #1088]
   4dbf0:	ldr	x0, [sp, #1088]
   4dbf4:	cmp	x0, #0x0
   4dbf8:	b.eq	4df44 <__asan_backtrace_uncompress_zdebug@@Base+0x14e0>  // b.none
   4dbfc:	str	xzr, [sp, #192]
   4dc00:	str	xzr, [sp, #184]
   4dc04:	ldr	x0, [sp, #952]
   4dc08:	ldr	x1, [x0, #16]
   4dc0c:	ldr	x0, [sp, #952]
   4dc10:	ldr	x0, [x0, #8]
   4dc14:	add	x3, sp, #0xb8
   4dc18:	add	x2, sp, #0xc0
   4dc1c:	mov	x7, x3
   4dc20:	mov	x6, x2
   4dc24:	ldr	x5, [sp, #112]
   4dc28:	ldr	x4, [sp, #120]
   4dc2c:	ldr	x3, [sp, #1088]
   4dc30:	mov	x2, x0
   4dc34:	ldr	x0, [sp, #152]
   4dc38:	bl	4c7b8 <__asan_internal_strnlen@@Base+0x3b14>
   4dc3c:	cmp	w0, #0x0
   4dc40:	b.eq	4df4c <__asan_backtrace_uncompress_zdebug@@Base+0x14e8>  // b.none
   4dc44:	ldr	x2, [sp, #192]
   4dc48:	ldr	w0, [sp, #1188]
   4dc4c:	lsl	x0, x0, #5
   4dc50:	add	x1, sp, #0x1b8
   4dc54:	str	x2, [x1, x0]
   4dc58:	ldr	x2, [sp, #184]
   4dc5c:	ldr	w0, [sp, #1188]
   4dc60:	lsl	x0, x0, #5
   4dc64:	add	x1, sp, #0x1b0
   4dc68:	str	x2, [x1, x0]
   4dc6c:	ldr	w0, [sp, #1188]
   4dc70:	lsl	x0, x0, #5
   4dc74:	add	x1, sp, #0x1c0
   4dc78:	str	wzr, [x1, x0]
   4dc7c:	ldr	w0, [sp, #1188]
   4dc80:	add	w0, w0, #0x1
   4dc84:	str	w0, [sp, #1188]
   4dc88:	ldr	w0, [sp, #1188]
   4dc8c:	cmp	w0, #0x4
   4dc90:	b.ls	4db88 <__asan_backtrace_uncompress_zdebug@@Base+0x1124>  // b.plast
   4dc94:	str	wzr, [sp, #1188]
   4dc98:	b	4ddb0 <__asan_backtrace_uncompress_zdebug@@Base+0x134c>
   4dc9c:	ldr	w0, [sp, #1188]
   4dca0:	lsl	x0, x0, #5
   4dca4:	add	x1, sp, #0x1b0
   4dca8:	ldr	x0, [x1, x0]
   4dcac:	cmp	x0, #0x0
   4dcb0:	b.eq	4dda0 <__asan_backtrace_uncompress_zdebug@@Base+0x133c>  // b.none
   4dcb4:	ldr	w0, [sp, #1188]
   4dcb8:	lsl	x0, x0, #5
   4dcbc:	add	x1, sp, #0x1c0
   4dcc0:	ldr	w0, [x1, x0]
   4dcc4:	cmp	w0, #0x0
   4dcc8:	b.eq	4dda0 <__asan_backtrace_uncompress_zdebug@@Base+0x133c>  // b.none
   4dccc:	ldr	x0, [sp, #1088]
   4dcd0:	cmp	x0, #0x0
   4dcd4:	b.ne	4dcfc <__asan_backtrace_uncompress_zdebug@@Base+0x1298>  // b.any
   4dcd8:	ldr	x3, [sp, #112]
   4dcdc:	ldr	x2, [sp, #120]
   4dce0:	mov	x1, #0x13b4                	// #5044
   4dce4:	ldr	x0, [sp, #152]
   4dce8:	bl	6b10 <__asan_backtrace_alloc@plt>
   4dcec:	str	x0, [sp, #1088]
   4dcf0:	ldr	x0, [sp, #1088]
   4dcf4:	cmp	x0, #0x0
   4dcf8:	b.eq	4df54 <__asan_backtrace_uncompress_zdebug@@Base+0x14f0>  // b.none
   4dcfc:	str	xzr, [sp, #176]
   4dd00:	str	xzr, [sp, #168]
   4dd04:	ldr	w0, [sp, #1188]
   4dd08:	lsl	x0, x0, #5
   4dd0c:	add	x1, sp, #0x1b8
   4dd10:	ldr	x8, [x1, x0]
   4dd14:	ldr	w0, [sp, #1188]
   4dd18:	lsl	x0, x0, #5
   4dd1c:	add	x1, sp, #0x1b0
   4dd20:	ldr	x0, [x1, x0]
   4dd24:	add	x2, sp, #0xa8
   4dd28:	add	x1, sp, #0xb0
   4dd2c:	mov	x7, x2
   4dd30:	mov	x6, x1
   4dd34:	ldr	x5, [sp, #112]
   4dd38:	ldr	x4, [sp, #120]
   4dd3c:	ldr	x3, [sp, #1088]
   4dd40:	mov	x2, x0
   4dd44:	mov	x1, x8
   4dd48:	ldr	x0, [sp, #152]
   4dd4c:	bl	4c928 <__asan_internal_strnlen@@Base+0x3c84>
   4dd50:	cmp	w0, #0x0
   4dd54:	b.eq	4df5c <__asan_backtrace_uncompress_zdebug@@Base+0x14f8>  // b.none
   4dd58:	ldr	x2, [sp, #176]
   4dd5c:	ldr	w0, [sp, #1188]
   4dd60:	lsl	x0, x0, #5
   4dd64:	add	x1, sp, #0x1b8
   4dd68:	str	x2, [x1, x0]
   4dd6c:	ldr	x2, [sp, #168]
   4dd70:	ldr	w0, [sp, #1188]
   4dd74:	lsl	x0, x0, #5
   4dd78:	add	x1, sp, #0x1b0
   4dd7c:	str	x2, [x1, x0]
   4dd80:	ldr	w0, [sp, #1188]
   4dd84:	lsl	x0, x0, #5
   4dd88:	add	x1, sp, #0x1c0
   4dd8c:	str	wzr, [x1, x0]
   4dd90:	ldr	w0, [sp, #1096]
   4dd94:	sub	w0, w0, #0x1
   4dd98:	str	w0, [sp, #1096]
   4dd9c:	b	4dda4 <__asan_backtrace_uncompress_zdebug@@Base+0x1340>
   4dda0:	nop
   4dda4:	ldr	w0, [sp, #1188]
   4dda8:	add	w0, w0, #0x1
   4ddac:	str	w0, [sp, #1188]
   4ddb0:	ldr	w0, [sp, #1188]
   4ddb4:	cmp	w0, #0x4
   4ddb8:	b.ls	4dc9c <__asan_backtrace_uncompress_zdebug@@Base+0x1238>  // b.plast
   4ddbc:	ldr	x0, [sp, #1088]
   4ddc0:	cmp	x0, #0x0
   4ddc4:	b.eq	4dde0 <__asan_backtrace_uncompress_zdebug@@Base+0x137c>  // b.none
   4ddc8:	ldr	x4, [sp, #112]
   4ddcc:	ldr	x3, [sp, #120]
   4ddd0:	mov	x2, #0x13b4                	// #5044
   4ddd4:	ldr	x1, [sp, #1088]
   4ddd8:	ldr	x0, [sp, #152]
   4dddc:	bl	6e00 <__asan_backtrace_free@plt>
   4dde0:	ldr	w0, [sp, #1100]
   4dde4:	cmp	w0, #0x0
   4dde8:	b.eq	4de14 <__asan_backtrace_uncompress_zdebug@@Base+0x13b0>  // b.none
   4ddec:	ldr	w0, [sp, #1096]
   4ddf0:	cmp	w0, #0x0
   4ddf4:	b.ne	4de14 <__asan_backtrace_uncompress_zdebug@@Base+0x13b0>  // b.any
   4ddf8:	add	x0, sp, #0x118
   4ddfc:	ldr	x3, [sp, #112]
   4de00:	ldr	x2, [sp, #120]
   4de04:	mov	x1, x0
   4de08:	ldr	x0, [sp, #152]
   4de0c:	bl	69a0 <__asan_backtrace_release_view@plt>
   4de10:	str	wzr, [sp, #1100]
   4de14:	ldr	x8, [sp, #440]
   4de18:	ldr	x9, [sp, #432]
   4de1c:	ldr	x10, [sp, #472]
   4de20:	ldr	x11, [sp, #464]
   4de24:	ldr	x6, [sp, #504]
   4de28:	ldr	x7, [sp, #496]
   4de2c:	ldr	x0, [sp, #536]
   4de30:	ldr	x1, [sp, #528]
   4de34:	ldr	x2, [sp, #568]
   4de38:	ldr	x3, [sp, #560]
   4de3c:	ldrb	w4, [sp, #797]
   4de40:	cmp	w4, #0x2
   4de44:	cset	w4, eq  // eq = none
   4de48:	and	w4, w4, #0xff
   4de4c:	mov	w12, w4
   4de50:	ldr	x4, [sp, #224]
   4de54:	ldr	x5, [sp, #1224]
   4de58:	str	x5, [sp, #72]
   4de5c:	ldr	x5, [sp, #104]
   4de60:	str	x5, [sp, #64]
   4de64:	ldr	x5, [sp, #112]
   4de68:	str	x5, [sp, #56]
   4de6c:	ldr	x5, [sp, #120]
   4de70:	str	x5, [sp, #48]
   4de74:	str	x4, [sp, #40]
   4de78:	str	w12, [sp, #32]
   4de7c:	str	x3, [sp, #24]
   4de80:	str	x2, [sp, #16]
   4de84:	str	x1, [sp, #8]
   4de88:	str	x0, [sp]
   4de8c:	mov	x5, x11
   4de90:	mov	x4, x10
   4de94:	mov	x3, x9
   4de98:	mov	x2, x8
   4de9c:	ldr	x1, [sp, #128]
   4dea0:	ldr	x0, [sp, #152]
   4dea4:	bl	69b0 <__asan_backtrace_dwarf_add@plt>
   4dea8:	cmp	w0, #0x0
   4deac:	b.eq	4df64 <__asan_backtrace_uncompress_zdebug@@Base+0x1500>  // b.none
   4deb0:	ldr	x0, [sp, #1216]
   4deb4:	mov	w1, #0x1                   	// #1
   4deb8:	str	w1, [x0]
   4debc:	mov	w0, #0x1                   	// #1
   4dec0:	b	4e0d0 <__asan_backtrace_uncompress_zdebug@@Base+0x166c>
   4dec4:	nop
   4dec8:	b	4df68 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   4decc:	nop
   4ded0:	b	4df68 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   4ded4:	nop
   4ded8:	b	4df68 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   4dedc:	nop
   4dee0:	b	4df68 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   4dee4:	nop
   4dee8:	b	4df68 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   4deec:	nop
   4def0:	b	4df68 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   4def4:	nop
   4def8:	b	4df68 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   4defc:	nop
   4df00:	b	4df68 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   4df04:	nop
   4df08:	b	4df68 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   4df0c:	nop
   4df10:	b	4df68 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   4df14:	nop
   4df18:	b	4df68 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   4df1c:	nop
   4df20:	b	4df68 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   4df24:	nop
   4df28:	b	4df68 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   4df2c:	nop
   4df30:	b	4df68 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   4df34:	nop
   4df38:	b	4df68 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   4df3c:	nop
   4df40:	b	4df68 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   4df44:	nop
   4df48:	b	4df68 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   4df4c:	nop
   4df50:	b	4df68 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   4df54:	nop
   4df58:	b	4df68 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   4df5c:	nop
   4df60:	b	4df68 <__asan_backtrace_uncompress_zdebug@@Base+0x1504>
   4df64:	nop
   4df68:	ldr	w0, [sp, #1204]
   4df6c:	cmp	w0, #0x0
   4df70:	b.eq	4df8c <__asan_backtrace_uncompress_zdebug@@Base+0x1528>  // b.none
   4df74:	add	x0, sp, #0x300
   4df78:	ldr	x3, [sp, #112]
   4df7c:	ldr	x2, [sp, #120]
   4df80:	mov	x1, x0
   4df84:	ldr	x0, [sp, #152]
   4df88:	bl	69a0 <__asan_backtrace_release_view@plt>
   4df8c:	ldr	w0, [sp, #1200]
   4df90:	cmp	w0, #0x0
   4df94:	b.eq	4dfb0 <__asan_backtrace_uncompress_zdebug@@Base+0x154c>  // b.none
   4df98:	add	x0, sp, #0x2e8
   4df9c:	ldr	x3, [sp, #112]
   4dfa0:	ldr	x2, [sp, #120]
   4dfa4:	mov	x1, x0
   4dfa8:	ldr	x0, [sp, #152]
   4dfac:	bl	69a0 <__asan_backtrace_release_view@plt>
   4dfb0:	ldr	w0, [sp, #1184]
   4dfb4:	cmp	w0, #0x0
   4dfb8:	b.eq	4dfd4 <__asan_backtrace_uncompress_zdebug@@Base+0x1570>  // b.none
   4dfbc:	add	x0, sp, #0x190
   4dfc0:	ldr	x3, [sp, #112]
   4dfc4:	ldr	x2, [sp, #120]
   4dfc8:	mov	x1, x0
   4dfcc:	ldr	x0, [sp, #152]
   4dfd0:	bl	69a0 <__asan_backtrace_release_view@plt>
   4dfd4:	ldr	w0, [sp, #1180]
   4dfd8:	cmp	w0, #0x0
   4dfdc:	b.eq	4dff8 <__asan_backtrace_uncompress_zdebug@@Base+0x1594>  // b.none
   4dfe0:	add	x0, sp, #0x178
   4dfe4:	ldr	x3, [sp, #112]
   4dfe8:	ldr	x2, [sp, #120]
   4dfec:	mov	x1, x0
   4dff0:	ldr	x0, [sp, #152]
   4dff4:	bl	69a0 <__asan_backtrace_release_view@plt>
   4dff8:	ldr	w0, [sp, #1160]
   4dffc:	cmp	w0, #0x0
   4e000:	b.eq	4e01c <__asan_backtrace_uncompress_zdebug@@Base+0x15b8>  // b.none
   4e004:	add	x0, sp, #0x148
   4e008:	ldr	x3, [sp, #112]
   4e00c:	ldr	x2, [sp, #120]
   4e010:	mov	x1, x0
   4e014:	ldr	x0, [sp, #152]
   4e018:	bl	69a0 <__asan_backtrace_release_view@plt>
   4e01c:	ldr	w0, [sp, #1144]
   4e020:	cmp	w0, #0x0
   4e024:	b.eq	4e040 <__asan_backtrace_uncompress_zdebug@@Base+0x15dc>  // b.none
   4e028:	add	x0, sp, #0x130
   4e02c:	ldr	x3, [sp, #112]
   4e030:	ldr	x2, [sp, #120]
   4e034:	mov	x1, x0
   4e038:	ldr	x0, [sp, #152]
   4e03c:	bl	69a0 <__asan_backtrace_release_view@plt>
   4e040:	ldr	w0, [sp, #1176]
   4e044:	cmp	w0, #0x0
   4e048:	b.eq	4e064 <__asan_backtrace_uncompress_zdebug@@Base+0x1600>  // b.none
   4e04c:	add	x0, sp, #0x160
   4e050:	ldr	x3, [sp, #112]
   4e054:	ldr	x2, [sp, #120]
   4e058:	mov	x1, x0
   4e05c:	ldr	x0, [sp, #152]
   4e060:	bl	69a0 <__asan_backtrace_release_view@plt>
   4e064:	ldr	w0, [sp, #1100]
   4e068:	cmp	w0, #0x0
   4e06c:	b.eq	4e088 <__asan_backtrace_uncompress_zdebug@@Base+0x1624>  // b.none
   4e070:	add	x0, sp, #0x118
   4e074:	ldr	x3, [sp, #112]
   4e078:	ldr	x2, [sp, #120]
   4e07c:	mov	x1, x0
   4e080:	ldr	x0, [sp, #152]
   4e084:	bl	69a0 <__asan_backtrace_release_view@plt>
   4e088:	ldr	x0, [sp, #1080]
   4e08c:	cmp	x0, #0x0
   4e090:	b.eq	4e0b0 <__asan_backtrace_uncompress_zdebug@@Base+0x164c>  // b.none
   4e094:	ldr	x0, [sp, #1080]
   4e098:	add	x0, x0, #0x18
   4e09c:	ldr	x3, [sp, #112]
   4e0a0:	ldr	x2, [sp, #120]
   4e0a4:	mov	x1, x0
   4e0a8:	ldr	x0, [sp, #152]
   4e0ac:	bl	69a0 <__asan_backtrace_release_view@plt>
   4e0b0:	ldr	w0, [sp, #140]
   4e0b4:	cmn	w0, #0x1
   4e0b8:	b.eq	4e0cc <__asan_backtrace_uncompress_zdebug@@Base+0x1668>  // b.none
   4e0bc:	ldr	x2, [sp, #112]
   4e0c0:	ldr	x1, [sp, #120]
   4e0c4:	ldr	w0, [sp, #140]
   4e0c8:	bl	6ee0 <__asan_backtrace_close@plt>
   4e0cc:	mov	w0, #0x0                   	// #0
   4e0d0:	ldp	x29, x30, [sp, #80]
   4e0d4:	add	sp, sp, #0x4c0
   4e0d8:	ret
   4e0dc:	sub	sp, sp, #0x90
   4e0e0:	stp	x29, x30, [sp, #48]
   4e0e4:	add	x29, sp, #0x30
   4e0e8:	str	x0, [sp, #88]
   4e0ec:	str	x1, [sp, #80]
   4e0f0:	str	x2, [sp, #72]
   4e0f4:	ldr	x0, [sp, #72]
   4e0f8:	str	x0, [sp, #120]
   4e0fc:	ldr	x0, [sp, #88]
   4e100:	ldr	x0, [x0, #8]
   4e104:	cmp	x0, #0x0
   4e108:	b.eq	4e120 <__asan_backtrace_uncompress_zdebug@@Base+0x16bc>  // b.none
   4e10c:	ldr	x0, [sp, #88]
   4e110:	ldr	x0, [x0, #8]
   4e114:	ldrb	w0, [x0]
   4e118:	cmp	w0, #0x0
   4e11c:	b.ne	4e160 <__asan_backtrace_uncompress_zdebug@@Base+0x16fc>  // b.any
   4e120:	ldr	x0, [sp, #120]
   4e124:	ldr	w0, [x0, #56]
   4e128:	cmn	w0, #0x1
   4e12c:	b.ne	4e138 <__asan_backtrace_uncompress_zdebug@@Base+0x16d4>  // b.any
   4e130:	mov	w0, #0x0                   	// #0
   4e134:	b	4e294 <__asan_backtrace_uncompress_zdebug@@Base+0x1830>
   4e138:	ldr	x0, [sp, #120]
   4e13c:	ldr	x0, [x0, #48]
   4e140:	str	x0, [sp, #136]
   4e144:	ldr	x0, [sp, #120]
   4e148:	ldr	w0, [x0, #56]
   4e14c:	str	w0, [sp, #132]
   4e150:	ldr	x0, [sp, #120]
   4e154:	mov	w1, #0xffffffff            	// #-1
   4e158:	str	w1, [x0, #56]
   4e15c:	b	4e1f0 <__asan_backtrace_uncompress_zdebug@@Base+0x178c>
   4e160:	ldr	x0, [sp, #120]
   4e164:	ldr	w0, [x0, #56]
   4e168:	cmn	w0, #0x1
   4e16c:	b.eq	4e1a0 <__asan_backtrace_uncompress_zdebug@@Base+0x173c>  // b.none
   4e170:	ldr	x0, [sp, #120]
   4e174:	ldr	w3, [x0, #56]
   4e178:	ldr	x0, [sp, #120]
   4e17c:	ldr	x1, [x0, #8]
   4e180:	ldr	x0, [sp, #120]
   4e184:	ldr	x0, [x0, #16]
   4e188:	mov	x2, x0
   4e18c:	mov	w0, w3
   4e190:	bl	6ee0 <__asan_backtrace_close@plt>
   4e194:	ldr	x0, [sp, #120]
   4e198:	mov	w1, #0xffffffff            	// #-1
   4e19c:	str	w1, [x0, #56]
   4e1a0:	ldr	x0, [sp, #88]
   4e1a4:	ldr	x0, [x0, #8]
   4e1a8:	str	x0, [sp, #136]
   4e1ac:	ldr	x0, [sp, #88]
   4e1b0:	ldr	x4, [x0, #8]
   4e1b4:	ldr	x0, [sp, #120]
   4e1b8:	ldr	x1, [x0, #8]
   4e1bc:	ldr	x0, [sp, #120]
   4e1c0:	ldr	x0, [x0, #16]
   4e1c4:	add	x2, sp, #0x74
   4e1c8:	mov	x3, x2
   4e1cc:	mov	x2, x0
   4e1d0:	mov	x0, x4
   4e1d4:	bl	6f90 <__asan_backtrace_open@plt>
   4e1d8:	str	w0, [sp, #132]
   4e1dc:	ldr	w0, [sp, #132]
   4e1e0:	cmp	w0, #0x0
   4e1e4:	b.ge	4e1f0 <__asan_backtrace_uncompress_zdebug@@Base+0x178c>  // b.tcont
   4e1e8:	mov	w0, #0x0                   	// #0
   4e1ec:	b	4e294 <__asan_backtrace_uncompress_zdebug@@Base+0x1830>
   4e1f0:	ldr	x0, [sp, #120]
   4e1f4:	ldr	x8, [x0]
   4e1f8:	ldr	x0, [sp, #88]
   4e1fc:	ldr	x1, [x0]
   4e200:	ldr	x0, [sp, #120]
   4e204:	ldr	x2, [x0, #8]
   4e208:	ldr	x0, [sp, #120]
   4e20c:	ldr	x3, [x0, #16]
   4e210:	ldr	x0, [sp, #120]
   4e214:	ldr	x5, [x0, #32]
   4e218:	add	x4, sp, #0x68
   4e21c:	str	wzr, [sp, #40]
   4e220:	str	xzr, [sp, #32]
   4e224:	str	wzr, [sp, #24]
   4e228:	str	wzr, [sp, #16]
   4e22c:	str	xzr, [sp, #8]
   4e230:	add	x0, sp, #0x64
   4e234:	str	x0, [sp]
   4e238:	mov	x7, x5
   4e23c:	mov	x6, x4
   4e240:	mov	x5, x3
   4e244:	mov	x4, x2
   4e248:	mov	x3, x1
   4e24c:	ldr	w2, [sp, #132]
   4e250:	ldr	x1, [sp, #136]
   4e254:	mov	x0, x8
   4e258:	bl	4cb00 <__asan_backtrace_uncompress_zdebug@@Base+0x9c>
   4e25c:	cmp	w0, #0x0
   4e260:	b.eq	4e290 <__asan_backtrace_uncompress_zdebug@@Base+0x182c>  // b.none
   4e264:	ldr	w0, [sp, #100]
   4e268:	cmp	w0, #0x0
   4e26c:	b.eq	4e290 <__asan_backtrace_uncompress_zdebug@@Base+0x182c>  // b.none
   4e270:	ldr	x0, [sp, #120]
   4e274:	ldr	x0, [x0, #40]
   4e278:	mov	w1, #0x1                   	// #1
   4e27c:	str	w1, [x0]
   4e280:	ldr	x0, [sp, #120]
   4e284:	ldr	x0, [x0, #24]
   4e288:	ldr	x1, [sp, #104]
   4e28c:	str	x1, [x0]
   4e290:	mov	w0, #0x0                   	// #0
   4e294:	ldp	x29, x30, [sp, #48]
   4e298:	add	sp, sp, #0x90
   4e29c:	ret

000000000004e2a0 <__asan_backtrace_initialize@@Base>:
   4e2a0:	sub	sp, sp, #0xd0
   4e2a4:	stp	x29, x30, [sp, #48]
   4e2a8:	add	x29, sp, #0x30
   4e2ac:	str	x0, [sp, #104]
   4e2b0:	str	x1, [sp, #96]
   4e2b4:	str	w2, [sp, #92]
   4e2b8:	str	x3, [sp, #80]
   4e2bc:	str	x4, [sp, #72]
   4e2c0:	str	x5, [sp, #64]
   4e2c4:	adrp	x0, 48000 <__asan_cplus_demangle_print@@Base+0x3764>
   4e2c8:	add	x0, x0, #0xe30
   4e2cc:	str	x0, [sp, #184]
   4e2d0:	add	x2, sp, #0xc8
   4e2d4:	add	x1, sp, #0xb8
   4e2d8:	str	wzr, [sp, #40]
   4e2dc:	str	xzr, [sp, #32]
   4e2e0:	str	wzr, [sp, #24]
   4e2e4:	mov	w0, #0x1                   	// #1
   4e2e8:	str	w0, [sp, #16]
   4e2ec:	str	xzr, [sp, #8]
   4e2f0:	add	x0, sp, #0xc4
   4e2f4:	str	x0, [sp]
   4e2f8:	mov	x7, x2
   4e2fc:	mov	x6, x1
   4e300:	ldr	x5, [sp, #72]
   4e304:	ldr	x4, [sp, #80]
   4e308:	mov	x3, #0x0                   	// #0
   4e30c:	ldr	w2, [sp, #92]
   4e310:	ldr	x1, [sp, #96]
   4e314:	ldr	x0, [sp, #104]
   4e318:	bl	4cb00 <__asan_backtrace_uncompress_zdebug@@Base+0x9c>
   4e31c:	str	w0, [sp, #204]
   4e320:	ldr	w0, [sp, #204]
   4e324:	cmp	w0, #0x0
   4e328:	b.ne	4e334 <__asan_backtrace_initialize@@Base+0x94>  // b.any
   4e32c:	mov	w0, #0x0                   	// #0
   4e330:	b	4e4b0 <__asan_backtrace_initialize@@Base+0x210>
   4e334:	ldr	x0, [sp, #104]
   4e338:	str	x0, [sp, #120]
   4e33c:	ldr	x0, [sp, #80]
   4e340:	str	x0, [sp, #128]
   4e344:	ldr	x0, [sp, #72]
   4e348:	str	x0, [sp, #136]
   4e34c:	add	x0, sp, #0xb8
   4e350:	str	x0, [sp, #144]
   4e354:	add	x0, sp, #0xc8
   4e358:	str	x0, [sp, #152]
   4e35c:	add	x0, sp, #0xc4
   4e360:	str	x0, [sp, #160]
   4e364:	ldr	x0, [sp, #96]
   4e368:	str	x0, [sp, #168]
   4e36c:	ldr	w0, [sp, #204]
   4e370:	cmp	w0, #0x0
   4e374:	b.ge	4e380 <__asan_backtrace_initialize@@Base+0xe0>  // b.tcont
   4e378:	ldr	w0, [sp, #92]
   4e37c:	b	4e384 <__asan_backtrace_initialize@@Base+0xe4>
   4e380:	mov	w0, #0xffffffff            	// #-1
   4e384:	str	w0, [sp, #176]
   4e388:	add	x0, sp, #0x78
   4e38c:	mov	x1, x0
   4e390:	adrp	x0, 4e000 <__asan_backtrace_uncompress_zdebug@@Base+0x159c>
   4e394:	add	x0, x0, #0xdc
   4e398:	bl	6ba0 <dl_iterate_phdr@plt>
   4e39c:	ldr	x0, [sp, #104]
   4e3a0:	ldr	w0, [x0, #8]
   4e3a4:	cmp	w0, #0x0
   4e3a8:	b.ne	4e3f0 <__asan_backtrace_initialize@@Base+0x150>  // b.any
   4e3ac:	ldr	w0, [sp, #200]
   4e3b0:	cmp	w0, #0x0
   4e3b4:	b.eq	4e3cc <__asan_backtrace_initialize@@Base+0x12c>  // b.none
   4e3b8:	ldr	x0, [sp, #104]
   4e3bc:	adrp	x1, 49000 <__asan_internal_strnlen@@Base+0x35c>
   4e3c0:	add	x1, x1, #0x3f8
   4e3c4:	str	x1, [x0, #40]
   4e3c8:	b	4e43c <__asan_backtrace_initialize@@Base+0x19c>
   4e3cc:	ldr	x0, [sp, #104]
   4e3d0:	ldr	x0, [x0, #40]
   4e3d4:	cmp	x0, #0x0
   4e3d8:	b.ne	4e43c <__asan_backtrace_initialize@@Base+0x19c>  // b.any
   4e3dc:	ldr	x0, [sp, #104]
   4e3e0:	adrp	x1, 48000 <__asan_cplus_demangle_print@@Base+0x3764>
   4e3e4:	add	x1, x1, #0xe70
   4e3e8:	str	x1, [x0, #40]
   4e3ec:	b	4e43c <__asan_backtrace_initialize@@Base+0x19c>
   4e3f0:	ldr	w0, [sp, #200]
   4e3f4:	cmp	w0, #0x0
   4e3f8:	b.eq	4e414 <__asan_backtrace_initialize@@Base+0x174>  // b.none
   4e3fc:	ldr	x0, [sp, #104]
   4e400:	add	x0, x0, #0x28
   4e404:	adrp	x1, 49000 <__asan_internal_strnlen@@Base+0x35c>
   4e408:	add	x1, x1, #0x3f8
   4e40c:	stlr	x1, [x0]
   4e410:	b	4e43c <__asan_backtrace_initialize@@Base+0x19c>
   4e414:	ldr	x0, [sp, #104]
   4e418:	add	x0, x0, #0x28
   4e41c:	adrp	x1, 48000 <__asan_cplus_demangle_print@@Base+0x3764>
   4e420:	add	x1, x1, #0xe70
   4e424:	ldxr	x2, [x0]
   4e428:	cbnz	x2, 4e434 <__asan_backtrace_initialize@@Base+0x194>
   4e42c:	stlxr	w3, x1, [x0]
   4e430:	cbnz	w3, 4e424 <__asan_backtrace_initialize@@Base+0x184>
   4e434:	cmp	x2, #0x0
   4e438:	dmb	ish
   4e43c:	ldr	x0, [sp, #104]
   4e440:	ldr	w0, [x0, #8]
   4e444:	cmp	w0, #0x0
   4e448:	b.ne	4e460 <__asan_backtrace_initialize@@Base+0x1c0>  // b.any
   4e44c:	ldr	x0, [sp, #104]
   4e450:	ldr	x1, [x0, #24]
   4e454:	ldr	x0, [sp, #64]
   4e458:	str	x1, [x0]
   4e45c:	b	4e478 <__asan_backtrace_initialize@@Base+0x1d8>
   4e460:	ldr	x0, [sp, #104]
   4e464:	add	x0, x0, #0x18
   4e468:	ldar	x0, [x0]
   4e46c:	mov	x1, x0
   4e470:	ldr	x0, [sp, #64]
   4e474:	str	x1, [x0]
   4e478:	ldr	x0, [sp, #64]
   4e47c:	ldr	x0, [x0]
   4e480:	cmp	x0, #0x0
   4e484:	b.eq	4e4a0 <__asan_backtrace_initialize@@Base+0x200>  // b.none
   4e488:	ldr	x0, [sp, #64]
   4e48c:	ldr	x1, [x0]
   4e490:	adrp	x0, 48000 <__asan_cplus_demangle_print@@Base+0x3764>
   4e494:	add	x0, x0, #0xe30
   4e498:	cmp	x1, x0
   4e49c:	b.ne	4e4ac <__asan_backtrace_initialize@@Base+0x20c>  // b.any
   4e4a0:	ldr	x1, [sp, #184]
   4e4a4:	ldr	x0, [sp, #64]
   4e4a8:	str	x1, [x0]
   4e4ac:	mov	w0, #0x1                   	// #1
   4e4b0:	ldp	x29, x30, [sp, #48]
   4e4b4:	add	sp, sp, #0xd0
   4e4b8:	ret

000000000004e4bc <__asan_backtrace_get_view@@Base>:
   4e4bc:	stp	x29, x30, [sp, #-112]!
   4e4c0:	mov	x29, sp
   4e4c4:	str	x0, [sp, #72]
   4e4c8:	str	w1, [sp, #68]
   4e4cc:	str	x2, [sp, #56]
   4e4d0:	str	x3, [sp, #48]
   4e4d4:	str	x4, [sp, #40]
   4e4d8:	str	x5, [sp, #32]
   4e4dc:	str	x6, [sp, #24]
   4e4e0:	bl	6ec0 <getpagesize@plt>
   4e4e4:	sxtw	x0, w0
   4e4e8:	str	x0, [sp, #104]
   4e4ec:	ldr	x0, [sp, #56]
   4e4f0:	ldr	x1, [sp, #104]
   4e4f4:	udiv	x2, x0, x1
   4e4f8:	ldr	x1, [sp, #104]
   4e4fc:	mul	x1, x2, x1
   4e500:	sub	x0, x0, x1
   4e504:	str	w0, [sp, #100]
   4e508:	ldr	w0, [sp, #100]
   4e50c:	ldr	x1, [sp, #56]
   4e510:	sub	x0, x1, x0
   4e514:	str	x0, [sp, #88]
   4e518:	ldr	w0, [sp, #100]
   4e51c:	ldr	x1, [sp, #48]
   4e520:	add	x0, x1, x0
   4e524:	str	x0, [sp, #48]
   4e528:	ldr	x1, [sp, #104]
   4e52c:	ldr	x0, [sp, #48]
   4e530:	add	x0, x1, x0
   4e534:	sub	x1, x0, #0x1
   4e538:	ldr	x0, [sp, #104]
   4e53c:	neg	x0, x0
   4e540:	and	x0, x1, x0
   4e544:	str	x0, [sp, #48]
   4e548:	ldr	x5, [sp, #88]
   4e54c:	ldr	w4, [sp, #68]
   4e550:	mov	w3, #0x2                   	// #2
   4e554:	mov	w2, #0x1                   	// #1
   4e558:	ldr	x1, [sp, #48]
   4e55c:	mov	x0, #0x0                   	// #0
   4e560:	bl	6c20 <mmap@plt>
   4e564:	str	x0, [sp, #80]
   4e568:	ldr	x0, [sp, #80]
   4e56c:	cmn	x0, #0x1
   4e570:	b.ne	4e59c <__asan_backtrace_get_view@@Base+0xe0>  // b.any
   4e574:	bl	6d00 <__errno_location@plt>
   4e578:	ldr	w0, [x0]
   4e57c:	ldr	x3, [sp, #40]
   4e580:	mov	w2, w0
   4e584:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   4e588:	add	x1, x0, #0xf70
   4e58c:	ldr	x0, [sp, #32]
   4e590:	blr	x3
   4e594:	mov	w0, #0x0                   	// #0
   4e598:	b	4e5cc <__asan_backtrace_get_view@@Base+0x110>
   4e59c:	ldr	w0, [sp, #100]
   4e5a0:	ldr	x1, [sp, #80]
   4e5a4:	add	x1, x1, x0
   4e5a8:	ldr	x0, [sp, #24]
   4e5ac:	str	x1, [x0]
   4e5b0:	ldr	x0, [sp, #24]
   4e5b4:	ldr	x1, [sp, #80]
   4e5b8:	str	x1, [x0, #8]
   4e5bc:	ldr	x0, [sp, #24]
   4e5c0:	ldr	x1, [sp, #48]
   4e5c4:	str	x1, [x0, #16]
   4e5c8:	mov	w0, #0x1                   	// #1
   4e5cc:	ldp	x29, x30, [sp], #112
   4e5d0:	ret

000000000004e5d4 <__asan_backtrace_release_view@@Base>:
   4e5d4:	stp	x29, x30, [sp, #-64]!
   4e5d8:	mov	x29, sp
   4e5dc:	str	x0, [sp, #40]
   4e5e0:	str	x1, [sp, #32]
   4e5e4:	str	x2, [sp, #24]
   4e5e8:	str	x3, [sp, #16]
   4e5ec:	ldr	x0, [sp, #32]
   4e5f0:	ldr	x0, [x0, #8]
   4e5f4:	str	x0, [sp, #56]
   4e5f8:	ldr	x2, [sp, #56]
   4e5fc:	ldr	x0, [sp, #32]
   4e600:	ldr	x0, [x0, #16]
   4e604:	mov	x1, x0
   4e608:	mov	x0, x2
   4e60c:	bl	6c40 <munmap@plt>
   4e610:	cmp	w0, #0x0
   4e614:	b.ge	4e638 <__asan_backtrace_release_view@@Base+0x64>  // b.tcont
   4e618:	bl	6d00 <__errno_location@plt>
   4e61c:	ldr	w0, [x0]
   4e620:	ldr	x3, [sp, #24]
   4e624:	mov	w2, w0
   4e628:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   4e62c:	add	x1, x0, #0xf78
   4e630:	ldr	x0, [sp, #16]
   4e634:	blr	x3
   4e638:	nop
   4e63c:	ldp	x29, x30, [sp], #64
   4e640:	ret
   4e644:	sub	sp, sp, #0x40
   4e648:	str	x0, [sp, #24]
   4e64c:	str	x1, [sp, #16]
   4e650:	str	x2, [sp, #8]
   4e654:	ldr	x0, [sp, #8]
   4e658:	cmp	x0, #0xf
   4e65c:	b.ls	4e744 <__asan_backtrace_release_view@@Base+0x170>  // b.plast
   4e660:	str	xzr, [sp, #56]
   4e664:	str	xzr, [sp, #48]
   4e668:	ldr	x0, [sp, #24]
   4e66c:	add	x0, x0, #0x40
   4e670:	str	x0, [sp, #40]
   4e674:	b	4e6c4 <__asan_backtrace_release_view@@Base+0xf0>
   4e678:	ldr	x0, [sp, #48]
   4e67c:	cmp	x0, #0x0
   4e680:	b.eq	4e6a4 <__asan_backtrace_release_view@@Base+0xd0>  // b.none
   4e684:	ldr	x0, [sp, #40]
   4e688:	ldr	x0, [x0]
   4e68c:	ldr	x1, [x0, #8]
   4e690:	ldr	x0, [sp, #48]
   4e694:	ldr	x0, [x0]
   4e698:	ldr	x0, [x0, #8]
   4e69c:	cmp	x1, x0
   4e6a0:	b.cs	4e6ac <__asan_backtrace_release_view@@Base+0xd8>  // b.hs, b.nlast
   4e6a4:	ldr	x0, [sp, #40]
   4e6a8:	str	x0, [sp, #48]
   4e6ac:	ldr	x0, [sp, #56]
   4e6b0:	add	x0, x0, #0x1
   4e6b4:	str	x0, [sp, #56]
   4e6b8:	ldr	x0, [sp, #40]
   4e6bc:	ldr	x0, [x0]
   4e6c0:	str	x0, [sp, #40]
   4e6c4:	ldr	x0, [sp, #40]
   4e6c8:	ldr	x0, [x0]
   4e6cc:	cmp	x0, #0x0
   4e6d0:	b.ne	4e678 <__asan_backtrace_release_view@@Base+0xa4>  // b.any
   4e6d4:	ldr	x0, [sp, #56]
   4e6d8:	cmp	x0, #0xf
   4e6dc:	b.ls	4e70c <__asan_backtrace_release_view@@Base+0x138>  // b.plast
   4e6e0:	ldr	x0, [sp, #48]
   4e6e4:	ldr	x0, [x0]
   4e6e8:	ldr	x0, [x0, #8]
   4e6ec:	ldr	x1, [sp, #8]
   4e6f0:	cmp	x1, x0
   4e6f4:	b.ls	4e740 <__asan_backtrace_release_view@@Base+0x16c>  // b.plast
   4e6f8:	ldr	x0, [sp, #48]
   4e6fc:	ldr	x0, [x0]
   4e700:	ldr	x1, [x0]
   4e704:	ldr	x0, [sp, #48]
   4e708:	str	x1, [x0]
   4e70c:	ldr	x0, [sp, #16]
   4e710:	str	x0, [sp, #32]
   4e714:	ldr	x0, [sp, #24]
   4e718:	ldr	x1, [x0, #64]
   4e71c:	ldr	x0, [sp, #32]
   4e720:	str	x1, [x0]
   4e724:	ldr	x0, [sp, #32]
   4e728:	ldr	x1, [sp, #8]
   4e72c:	str	x1, [x0, #8]
   4e730:	ldr	x0, [sp, #24]
   4e734:	ldr	x1, [sp, #32]
   4e738:	str	x1, [x0, #64]
   4e73c:	b	4e744 <__asan_backtrace_release_view@@Base+0x170>
   4e740:	nop
   4e744:	add	sp, sp, #0x40
   4e748:	ret

000000000004e74c <__asan_backtrace_alloc@@Base>:
   4e74c:	stp	x29, x30, [sp, #-112]!
   4e750:	mov	x29, sp
   4e754:	str	x0, [sp, #40]
   4e758:	str	x1, [sp, #32]
   4e75c:	str	x2, [sp, #24]
   4e760:	str	x3, [sp, #16]
   4e764:	str	xzr, [sp, #104]
   4e768:	ldr	x0, [sp, #40]
   4e76c:	ldr	w0, [x0, #8]
   4e770:	cmp	w0, #0x0
   4e774:	b.ne	4e784 <__asan_backtrace_alloc@@Base+0x38>  // b.any
   4e778:	mov	w0, #0x1                   	// #1
   4e77c:	str	w0, [sp, #100]
   4e780:	b	4e7b0 <__asan_backtrace_alloc@@Base+0x64>
   4e784:	ldr	x0, [sp, #40]
   4e788:	add	x1, x0, #0x3c
   4e78c:	mov	w2, #0x1                   	// #1
   4e790:	ldxr	w0, [x1]
   4e794:	stxr	w3, w2, [x1]
   4e798:	cbnz	w3, 4e790 <__asan_backtrace_alloc@@Base+0x44>
   4e79c:	dmb	ish
   4e7a0:	cmp	w0, #0x0
   4e7a4:	cset	w0, eq  // eq = none
   4e7a8:	and	w0, w0, #0xff
   4e7ac:	str	w0, [sp, #100]
   4e7b0:	ldr	w0, [sp, #100]
   4e7b4:	cmp	w0, #0x0
   4e7b8:	b.eq	4e894 <__asan_backtrace_alloc@@Base+0x148>  // b.none
   4e7bc:	ldr	x0, [sp, #40]
   4e7c0:	add	x0, x0, #0x40
   4e7c4:	str	x0, [sp, #88]
   4e7c8:	b	4e868 <__asan_backtrace_alloc@@Base+0x11c>
   4e7cc:	ldr	x0, [sp, #88]
   4e7d0:	ldr	x0, [x0]
   4e7d4:	ldr	x0, [x0, #8]
   4e7d8:	ldr	x1, [sp, #32]
   4e7dc:	cmp	x1, x0
   4e7e0:	b.hi	4e85c <__asan_backtrace_alloc@@Base+0x110>  // b.pmore
   4e7e4:	ldr	x0, [sp, #88]
   4e7e8:	ldr	x0, [x0]
   4e7ec:	str	x0, [sp, #80]
   4e7f0:	ldr	x0, [sp, #80]
   4e7f4:	ldr	x1, [x0]
   4e7f8:	ldr	x0, [sp, #88]
   4e7fc:	str	x1, [x0]
   4e800:	ldr	x0, [sp, #32]
   4e804:	add	x0, x0, #0x7
   4e808:	and	x0, x0, #0xfffffffffffffff8
   4e80c:	str	x0, [sp, #32]
   4e810:	ldr	x0, [sp, #80]
   4e814:	ldr	x0, [x0, #8]
   4e818:	ldr	x1, [sp, #32]
   4e81c:	cmp	x1, x0
   4e820:	b.cs	4e850 <__asan_backtrace_alloc@@Base+0x104>  // b.hs, b.nlast
   4e824:	ldr	x1, [sp, #80]
   4e828:	ldr	x0, [sp, #32]
   4e82c:	add	x3, x1, x0
   4e830:	ldr	x0, [sp, #80]
   4e834:	ldr	x1, [x0, #8]
   4e838:	ldr	x0, [sp, #32]
   4e83c:	sub	x0, x1, x0
   4e840:	mov	x2, x0
   4e844:	mov	x1, x3
   4e848:	ldr	x0, [sp, #40]
   4e84c:	bl	4e644 <__asan_backtrace_release_view@@Base+0x70>
   4e850:	ldr	x0, [sp, #80]
   4e854:	str	x0, [sp, #104]
   4e858:	b	4e878 <__asan_backtrace_alloc@@Base+0x12c>
   4e85c:	ldr	x0, [sp, #88]
   4e860:	ldr	x0, [x0]
   4e864:	str	x0, [sp, #88]
   4e868:	ldr	x0, [sp, #88]
   4e86c:	ldr	x0, [x0]
   4e870:	cmp	x0, #0x0
   4e874:	b.ne	4e7cc <__asan_backtrace_alloc@@Base+0x80>  // b.any
   4e878:	ldr	x0, [sp, #40]
   4e87c:	ldr	w0, [x0, #8]
   4e880:	cmp	w0, #0x0
   4e884:	b.eq	4e894 <__asan_backtrace_alloc@@Base+0x148>  // b.none
   4e888:	ldr	x0, [sp, #40]
   4e88c:	add	x0, x0, #0x3c
   4e890:	stlr	wzr, [x0]
   4e894:	ldr	x0, [sp, #104]
   4e898:	cmp	x0, #0x0
   4e89c:	b.ne	4e980 <__asan_backtrace_alloc@@Base+0x234>  // b.any
   4e8a0:	bl	6ec0 <getpagesize@plt>
   4e8a4:	sxtw	x0, w0
   4e8a8:	str	x0, [sp, #72]
   4e8ac:	ldr	x1, [sp, #32]
   4e8b0:	ldr	x0, [sp, #72]
   4e8b4:	add	x0, x1, x0
   4e8b8:	sub	x1, x0, #0x1
   4e8bc:	ldr	x0, [sp, #72]
   4e8c0:	neg	x0, x0
   4e8c4:	and	x0, x1, x0
   4e8c8:	str	x0, [sp, #64]
   4e8cc:	mov	x5, #0x0                   	// #0
   4e8d0:	mov	w4, #0xffffffff            	// #-1
   4e8d4:	mov	w3, #0x22                  	// #34
   4e8d8:	mov	w2, #0x3                   	// #3
   4e8dc:	ldr	x1, [sp, #64]
   4e8e0:	mov	x0, #0x0                   	// #0
   4e8e4:	bl	6c20 <mmap@plt>
   4e8e8:	str	x0, [sp, #56]
   4e8ec:	ldr	x0, [sp, #56]
   4e8f0:	cmn	x0, #0x1
   4e8f4:	b.ne	4e928 <__asan_backtrace_alloc@@Base+0x1dc>  // b.any
   4e8f8:	ldr	x0, [sp, #24]
   4e8fc:	cmp	x0, #0x0
   4e900:	b.eq	4e980 <__asan_backtrace_alloc@@Base+0x234>  // b.none
   4e904:	bl	6d00 <__errno_location@plt>
   4e908:	ldr	w0, [x0]
   4e90c:	ldr	x3, [sp, #24]
   4e910:	mov	w2, w0
   4e914:	adrp	x0, 5c000 <__asan_backtrace_vector_release@@Base+0xd340>
   4e918:	add	x1, x0, #0xf80
   4e91c:	ldr	x0, [sp, #16]
   4e920:	blr	x3
   4e924:	b	4e980 <__asan_backtrace_alloc@@Base+0x234>
   4e928:	ldr	x0, [sp, #32]
   4e92c:	add	x0, x0, #0x7
   4e930:	and	x0, x0, #0xfffffffffffffff8
   4e934:	str	x0, [sp, #32]
   4e938:	ldr	x1, [sp, #32]
   4e93c:	ldr	x0, [sp, #64]
   4e940:	cmp	x1, x0
   4e944:	b.cs	4e978 <__asan_backtrace_alloc@@Base+0x22c>  // b.hs, b.nlast
   4e948:	ldr	x1, [sp, #56]
   4e94c:	ldr	x0, [sp, #32]
   4e950:	add	x5, x1, x0
   4e954:	ldr	x1, [sp, #64]
   4e958:	ldr	x0, [sp, #32]
   4e95c:	sub	x0, x1, x0
   4e960:	ldr	x4, [sp, #16]
   4e964:	ldr	x3, [sp, #24]
   4e968:	mov	x2, x0
   4e96c:	mov	x1, x5
   4e970:	ldr	x0, [sp, #40]
   4e974:	bl	6e00 <__asan_backtrace_free@plt>
   4e978:	ldr	x0, [sp, #56]
   4e97c:	str	x0, [sp, #104]
   4e980:	ldr	x0, [sp, #104]
   4e984:	ldp	x29, x30, [sp], #112
   4e988:	ret

000000000004e98c <__asan_backtrace_free@@Base>:
   4e98c:	stp	x29, x30, [sp, #-80]!
   4e990:	mov	x29, sp
   4e994:	str	x0, [sp, #56]
   4e998:	str	x1, [sp, #48]
   4e99c:	str	x2, [sp, #40]
   4e9a0:	str	x3, [sp, #32]
   4e9a4:	str	x4, [sp, #24]
   4e9a8:	ldr	x1, [sp, #40]
   4e9ac:	mov	x0, #0xffff                	// #65535
   4e9b0:	cmp	x1, x0
   4e9b4:	b.ls	4ea08 <__asan_backtrace_free@@Base+0x7c>  // b.plast
   4e9b8:	bl	6ec0 <getpagesize@plt>
   4e9bc:	sxtw	x0, w0
   4e9c0:	str	x0, [sp, #64]
   4e9c4:	ldr	x0, [sp, #64]
   4e9c8:	sub	x1, x0, #0x1
   4e9cc:	ldr	x0, [sp, #48]
   4e9d0:	and	x0, x1, x0
   4e9d4:	cmp	x0, #0x0
   4e9d8:	b.ne	4ea08 <__asan_backtrace_free@@Base+0x7c>  // b.any
   4e9dc:	ldr	x0, [sp, #64]
   4e9e0:	sub	x1, x0, #0x1
   4e9e4:	ldr	x0, [sp, #40]
   4e9e8:	and	x0, x1, x0
   4e9ec:	cmp	x0, #0x0
   4e9f0:	b.ne	4ea08 <__asan_backtrace_free@@Base+0x7c>  // b.any
   4e9f4:	ldr	x1, [sp, #40]
   4e9f8:	ldr	x0, [sp, #48]
   4e9fc:	bl	6c40 <munmap@plt>
   4ea00:	cmp	w0, #0x0
   4ea04:	b.eq	4ea8c <__asan_backtrace_free@@Base+0x100>  // b.none
   4ea08:	ldr	x0, [sp, #56]
   4ea0c:	ldr	w0, [x0, #8]
   4ea10:	cmp	w0, #0x0
   4ea14:	b.ne	4ea24 <__asan_backtrace_free@@Base+0x98>  // b.any
   4ea18:	mov	w0, #0x1                   	// #1
   4ea1c:	str	w0, [sp, #76]
   4ea20:	b	4ea50 <__asan_backtrace_free@@Base+0xc4>
   4ea24:	ldr	x0, [sp, #56]
   4ea28:	add	x1, x0, #0x3c
   4ea2c:	mov	w2, #0x1                   	// #1
   4ea30:	ldxr	w0, [x1]
   4ea34:	stxr	w3, w2, [x1]
   4ea38:	cbnz	w3, 4ea30 <__asan_backtrace_free@@Base+0xa4>
   4ea3c:	dmb	ish
   4ea40:	cmp	w0, #0x0
   4ea44:	cset	w0, eq  // eq = none
   4ea48:	and	w0, w0, #0xff
   4ea4c:	str	w0, [sp, #76]
   4ea50:	ldr	w0, [sp, #76]
   4ea54:	cmp	w0, #0x0
   4ea58:	b.eq	4ea90 <__asan_backtrace_free@@Base+0x104>  // b.none
   4ea5c:	ldr	x2, [sp, #40]
   4ea60:	ldr	x1, [sp, #48]
   4ea64:	ldr	x0, [sp, #56]
   4ea68:	bl	4e644 <__asan_backtrace_release_view@@Base+0x70>
   4ea6c:	ldr	x0, [sp, #56]
   4ea70:	ldr	w0, [x0, #8]
   4ea74:	cmp	w0, #0x0
   4ea78:	b.eq	4ea90 <__asan_backtrace_free@@Base+0x104>  // b.none
   4ea7c:	ldr	x0, [sp, #56]
   4ea80:	add	x0, x0, #0x3c
   4ea84:	stlr	wzr, [x0]
   4ea88:	b	4ea90 <__asan_backtrace_free@@Base+0x104>
   4ea8c:	nop
   4ea90:	ldp	x29, x30, [sp], #80
   4ea94:	ret

000000000004ea98 <__asan_backtrace_vector_grow@@Base>:
   4ea98:	stp	x29, x30, [sp, #-96]!
   4ea9c:	mov	x29, sp
   4eaa0:	str	x0, [sp, #56]
   4eaa4:	str	x1, [sp, #48]
   4eaa8:	str	x2, [sp, #40]
   4eaac:	str	x3, [sp, #32]
   4eab0:	str	x4, [sp, #24]
   4eab4:	ldr	x0, [sp, #24]
   4eab8:	ldr	x0, [x0, #16]
   4eabc:	ldr	x1, [sp, #48]
   4eac0:	cmp	x1, x0
   4eac4:	b.ls	4ec1c <__asan_backtrace_vector_grow@@Base+0x184>  // b.plast
   4eac8:	bl	6ec0 <getpagesize@plt>
   4eacc:	sxtw	x0, w0
   4ead0:	str	x0, [sp, #80]
   4ead4:	ldr	x0, [sp, #24]
   4ead8:	ldr	x0, [x0, #8]
   4eadc:	ldr	x1, [sp, #48]
   4eae0:	add	x0, x1, x0
   4eae4:	str	x0, [sp, #88]
   4eae8:	ldr	x0, [sp, #24]
   4eaec:	ldr	x0, [x0, #8]
   4eaf0:	cmp	x0, #0x0
   4eaf4:	b.ne	4eb08 <__asan_backtrace_vector_grow@@Base+0x70>  // b.any
   4eaf8:	ldr	x0, [sp, #48]
   4eafc:	lsl	x0, x0, #4
   4eb00:	str	x0, [sp, #88]
   4eb04:	b	4eb6c <__asan_backtrace_vector_grow@@Base+0xd4>
   4eb08:	ldr	x1, [sp, #88]
   4eb0c:	ldr	x0, [sp, #80]
   4eb10:	cmp	x1, x0
   4eb14:	b.cs	4eb40 <__asan_backtrace_vector_grow@@Base+0xa8>  // b.hs, b.nlast
   4eb18:	ldr	x0, [sp, #88]
   4eb1c:	lsl	x0, x0, #1
   4eb20:	str	x0, [sp, #88]
   4eb24:	ldr	x1, [sp, #88]
   4eb28:	ldr	x0, [sp, #80]
   4eb2c:	cmp	x1, x0
   4eb30:	b.ls	4eb6c <__asan_backtrace_vector_grow@@Base+0xd4>  // b.plast
   4eb34:	ldr	x0, [sp, #80]
   4eb38:	str	x0, [sp, #88]
   4eb3c:	b	4eb6c <__asan_backtrace_vector_grow@@Base+0xd4>
   4eb40:	ldr	x0, [sp, #88]
   4eb44:	lsl	x0, x0, #1
   4eb48:	str	x0, [sp, #88]
   4eb4c:	ldr	x1, [sp, #88]
   4eb50:	ldr	x0, [sp, #80]
   4eb54:	add	x0, x1, x0
   4eb58:	sub	x1, x0, #0x1
   4eb5c:	ldr	x0, [sp, #80]
   4eb60:	neg	x0, x0
   4eb64:	and	x0, x1, x0
   4eb68:	str	x0, [sp, #88]
   4eb6c:	ldr	x3, [sp, #32]
   4eb70:	ldr	x2, [sp, #40]
   4eb74:	ldr	x1, [sp, #88]
   4eb78:	ldr	x0, [sp, #56]
   4eb7c:	bl	6b10 <__asan_backtrace_alloc@plt>
   4eb80:	str	x0, [sp, #72]
   4eb84:	ldr	x0, [sp, #72]
   4eb88:	cmp	x0, #0x0
   4eb8c:	b.ne	4eb98 <__asan_backtrace_vector_grow@@Base+0x100>  // b.any
   4eb90:	mov	x0, #0x0                   	// #0
   4eb94:	b	4ec68 <__asan_backtrace_vector_grow@@Base+0x1d0>
   4eb98:	ldr	x0, [sp, #24]
   4eb9c:	ldr	x0, [x0]
   4eba0:	cmp	x0, #0x0
   4eba4:	b.eq	4ebf8 <__asan_backtrace_vector_grow@@Base+0x160>  // b.none
   4eba8:	ldr	x0, [sp, #24]
   4ebac:	ldr	x1, [x0]
   4ebb0:	ldr	x0, [sp, #24]
   4ebb4:	ldr	x0, [x0, #8]
   4ebb8:	mov	x2, x0
   4ebbc:	ldr	x0, [sp, #72]
   4ebc0:	bl	6a10 <__asan_internal_memcpy@plt>
   4ebc4:	ldr	x0, [sp, #24]
   4ebc8:	ldr	x5, [x0]
   4ebcc:	ldr	x0, [sp, #24]
   4ebd0:	ldr	x1, [x0, #8]
   4ebd4:	ldr	x0, [sp, #24]
   4ebd8:	ldr	x0, [x0, #16]
   4ebdc:	add	x0, x1, x0
   4ebe0:	ldr	x4, [sp, #32]
   4ebe4:	ldr	x3, [sp, #40]
   4ebe8:	mov	x2, x0
   4ebec:	mov	x1, x5
   4ebf0:	ldr	x0, [sp, #56]
   4ebf4:	bl	6e00 <__asan_backtrace_free@plt>
   4ebf8:	ldr	x0, [sp, #24]
   4ebfc:	ldr	x1, [sp, #72]
   4ec00:	str	x1, [x0]
   4ec04:	ldr	x0, [sp, #24]
   4ec08:	ldr	x0, [x0, #8]
   4ec0c:	ldr	x1, [sp, #88]
   4ec10:	sub	x1, x1, x0
   4ec14:	ldr	x0, [sp, #24]
   4ec18:	str	x1, [x0, #16]
   4ec1c:	ldr	x0, [sp, #24]
   4ec20:	ldr	x1, [x0]
   4ec24:	ldr	x0, [sp, #24]
   4ec28:	ldr	x0, [x0, #8]
   4ec2c:	add	x0, x1, x0
   4ec30:	str	x0, [sp, #64]
   4ec34:	ldr	x0, [sp, #24]
   4ec38:	ldr	x1, [x0, #8]
   4ec3c:	ldr	x0, [sp, #48]
   4ec40:	add	x1, x1, x0
   4ec44:	ldr	x0, [sp, #24]
   4ec48:	str	x1, [x0, #8]
   4ec4c:	ldr	x0, [sp, #24]
   4ec50:	ldr	x1, [x0, #16]
   4ec54:	ldr	x0, [sp, #48]
   4ec58:	sub	x1, x1, x0
   4ec5c:	ldr	x0, [sp, #24]
   4ec60:	str	x1, [x0, #16]
   4ec64:	ldr	x0, [sp, #64]
   4ec68:	ldp	x29, x30, [sp], #96
   4ec6c:	ret

000000000004ec70 <__asan_backtrace_vector_finish@@Base>:
   4ec70:	sub	sp, sp, #0x30
   4ec74:	str	x0, [sp, #24]
   4ec78:	str	x1, [sp, #16]
   4ec7c:	str	x2, [sp, #8]
   4ec80:	str	x3, [sp]
   4ec84:	ldr	x0, [sp, #16]
   4ec88:	ldr	x0, [x0]
   4ec8c:	str	x0, [sp, #40]
   4ec90:	ldr	x0, [sp, #16]
   4ec94:	ldr	x1, [x0]
   4ec98:	ldr	x0, [sp, #16]
   4ec9c:	ldr	x0, [x0, #8]
   4eca0:	add	x1, x1, x0
   4eca4:	ldr	x0, [sp, #16]
   4eca8:	str	x1, [x0]
   4ecac:	ldr	x0, [sp, #16]
   4ecb0:	str	xzr, [x0, #8]
   4ecb4:	ldr	x0, [sp, #40]
   4ecb8:	add	sp, sp, #0x30
   4ecbc:	ret

000000000004ecc0 <__asan_backtrace_vector_release@@Base>:
   4ecc0:	stp	x29, x30, [sp, #-80]!
   4ecc4:	mov	x29, sp
   4ecc8:	str	x0, [sp, #40]
   4eccc:	str	x1, [sp, #32]
   4ecd0:	str	x2, [sp, #24]
   4ecd4:	str	x3, [sp, #16]
   4ecd8:	ldr	x0, [sp, #32]
   4ecdc:	ldr	x0, [x0, #8]
   4ece0:	str	x0, [sp, #72]
   4ece4:	ldr	x0, [sp, #32]
   4ece8:	ldr	x0, [x0, #16]
   4ecec:	str	x0, [sp, #64]
   4ecf0:	ldr	x0, [sp, #72]
   4ecf4:	add	x0, x0, #0x7
   4ecf8:	and	x0, x0, #0xfffffffffffffff8
   4ecfc:	str	x0, [sp, #56]
   4ed00:	ldr	x1, [sp, #72]
   4ed04:	ldr	x0, [sp, #56]
   4ed08:	sub	x0, x1, x0
   4ed0c:	ldr	x1, [sp, #64]
   4ed10:	add	x0, x1, x0
   4ed14:	str	x0, [sp, #64]
   4ed18:	ldr	x0, [sp, #32]
   4ed1c:	ldr	x1, [x0]
   4ed20:	ldr	x0, [sp, #56]
   4ed24:	add	x0, x1, x0
   4ed28:	ldr	x4, [sp, #16]
   4ed2c:	ldr	x3, [sp, #24]
   4ed30:	ldr	x2, [sp, #64]
   4ed34:	mov	x1, x0
   4ed38:	ldr	x0, [sp, #40]
   4ed3c:	bl	6e00 <__asan_backtrace_free@plt>
   4ed40:	ldr	x0, [sp, #32]
   4ed44:	str	xzr, [x0, #16]
   4ed48:	ldr	x0, [sp, #32]
   4ed4c:	ldr	x0, [x0, #8]
   4ed50:	cmp	x0, #0x0
   4ed54:	b.ne	4ed60 <__asan_backtrace_vector_release@@Base+0xa0>  // b.any
   4ed58:	ldr	x0, [sp, #32]
   4ed5c:	str	xzr, [x0]
   4ed60:	mov	w0, #0x1                   	// #1
   4ed64:	ldp	x29, x30, [sp], #80
   4ed68:	ret
   4ed6c:	nop
   4ed70:	adrp	x2, 7d000 <_Unwind_Backtrace@GCC_3.3>
   4ed74:	mov	x1, #0x0                   	// #0
   4ed78:	ldr	x2, [x2, #936]
   4ed7c:	b	6c60 <__cxa_atexit@plt>
   4ed80:	mov	x2, x1
   4ed84:	mov	w1, w0
   4ed88:	mov	w0, #0x0                   	// #0
   4ed8c:	b	68a0 <__fxstat@plt>
   4ed90:	mov	x2, x1
   4ed94:	mov	x1, x0
   4ed98:	mov	w0, #0x0                   	// #0
   4ed9c:	b	6e10 <__lxstat@plt>

Disassembly of section .fini:

000000000004eda0 <.fini>:
   4eda0:	stp	x29, x30, [sp, #-16]!
   4eda4:	mov	x29, sp
   4eda8:	ldp	x29, x30, [sp], #16
   4edac:	ret
