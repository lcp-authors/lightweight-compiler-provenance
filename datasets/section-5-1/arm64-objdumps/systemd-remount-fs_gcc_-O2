
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-remount-fs_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004011b8 <_init>:
  4011b8:	stp	x29, x30, [sp, #-16]!
  4011bc:	mov	x29, sp
  4011c0:	bl	401980 <call_weak_fn>
  4011c4:	ldp	x29, x30, [sp], #16
  4011c8:	ret

Disassembly of section .plt:

00000000004011d0 <.plt>:
  4011d0:	stp	x16, x30, [sp, #-16]!
  4011d4:	adrp	x16, 413000 <__FRAME_END__+0x107f8>
  4011d8:	ldr	x17, [x16, #3744]
  4011dc:	add	x16, x16, #0xea0
  4011e0:	br	x17
  4011e4:	nop
  4011e8:	nop
  4011ec:	nop

00000000004011f0 <internal_hashmap_remove@plt>:
  4011f0:	adrp	x16, 413000 <__FRAME_END__+0x107f8>
  4011f4:	ldr	x17, [x16, #3752]
  4011f8:	add	x16, x16, #0xea8
  4011fc:	br	x17

0000000000401200 <internal_hashmap_free@plt>:
  401200:	adrp	x16, 413000 <__FRAME_END__+0x107f8>
  401204:	ldr	x17, [x16, #3760]
  401208:	add	x16, x16, #0xeb0
  40120c:	br	x17

0000000000401210 <__libc_start_main@plt>:
  401210:	adrp	x16, 413000 <__FRAME_END__+0x107f8>
  401214:	ldr	x17, [x16, #3768]
  401218:	add	x16, x16, #0xeb8
  40121c:	br	x17

0000000000401220 <__gmon_start__@plt>:
  401220:	adrp	x16, 413000 <__FRAME_END__+0x107f8>
  401224:	ldr	x17, [x16, #3776]
  401228:	add	x16, x16, #0xec0
  40122c:	br	x17

0000000000401230 <polkit_agent_close@plt>:
  401230:	adrp	x16, 413000 <__FRAME_END__+0x107f8>
  401234:	ldr	x17, [x16, #3784]
  401238:	add	x16, x16, #0xec8
  40123c:	br	x17

0000000000401240 <path_equal@plt>:
  401240:	adrp	x16, 413000 <__FRAME_END__+0x107f8>
  401244:	ldr	x17, [x16, #3792]
  401248:	add	x16, x16, #0xed0
  40124c:	br	x17

0000000000401250 <log_setup_service@plt>:
  401250:	adrp	x16, 413000 <__FRAME_END__+0x107f8>
  401254:	ldr	x17, [x16, #3800]
  401258:	add	x16, x16, #0xed8
  40125c:	br	x17

0000000000401260 <log_assert_failed_realm@plt>:
  401260:	adrp	x16, 413000 <__FRAME_END__+0x107f8>
  401264:	ldr	x17, [x16, #3808]
  401268:	add	x16, x16, #0xee0
  40126c:	br	x17

0000000000401270 <_exit@plt>:
  401270:	adrp	x16, 413000 <__FRAME_END__+0x107f8>
  401274:	ldr	x17, [x16, #3816]
  401278:	add	x16, x16, #0xee8
  40127c:	br	x17

0000000000401280 <umask@plt>:
  401280:	adrp	x16, 413000 <__FRAME_END__+0x107f8>
  401284:	ldr	x17, [x16, #3824]
  401288:	add	x16, x16, #0xef0
  40128c:	br	x17

0000000000401290 <secure_getenv@plt>:
  401290:	adrp	x16, 413000 <__FRAME_END__+0x107f8>
  401294:	ldr	x17, [x16, #3832]
  401298:	add	x16, x16, #0xef8
  40129c:	br	x17

00000000004012a0 <setmntent@plt>:
  4012a0:	adrp	x16, 413000 <__FRAME_END__+0x107f8>
  4012a4:	ldr	x17, [x16, #3840]
  4012a8:	add	x16, x16, #0xf00
  4012ac:	br	x17

00000000004012b0 <is_efi_boot@plt>:
  4012b0:	adrp	x16, 413000 <__FRAME_END__+0x107f8>
  4012b4:	ldr	x17, [x16, #3848]
  4012b8:	add	x16, x16, #0xf08
  4012bc:	br	x17

00000000004012c0 <abort@plt>:
  4012c0:	adrp	x16, 413000 <__FRAME_END__+0x107f8>
  4012c4:	ldr	x17, [x16, #3856]
  4012c8:	add	x16, x16, #0xf10
  4012cc:	br	x17

00000000004012d0 <getmntent@plt>:
  4012d0:	adrp	x16, 413000 <__FRAME_END__+0x107f8>
  4012d4:	ldr	x17, [x16, #3864]
  4012d8:	add	x16, x16, #0xf18
  4012dc:	br	x17

00000000004012e0 <endmntent@plt>:
  4012e0:	adrp	x16, 413000 <__FRAME_END__+0x107f8>
  4012e4:	ldr	x17, [x16, #3872]
  4012e8:	add	x16, x16, #0xf20
  4012ec:	br	x17

00000000004012f0 <path_startswith@plt>:
  4012f0:	adrp	x16, 413000 <__FRAME_END__+0x107f8>
  4012f4:	ldr	x17, [x16, #3880]
  4012f8:	add	x16, x16, #0xf28
  4012fc:	br	x17

0000000000401300 <cg_is_unified_wanted@plt>:
  401300:	adrp	x16, 413000 <__FRAME_END__+0x107f8>
  401304:	ldr	x17, [x16, #3888]
  401308:	add	x16, x16, #0xf30
  40130c:	br	x17

0000000000401310 <getenv_bool@plt>:
  401310:	adrp	x16, 413000 <__FRAME_END__+0x107f8>
  401314:	ldr	x17, [x16, #3896]
  401318:	add	x16, x16, #0xf38
  40131c:	br	x17

0000000000401320 <__errno_location@plt>:
  401320:	adrp	x16, 413000 <__FRAME_END__+0x107f8>
  401324:	ldr	x17, [x16, #3904]
  401328:	add	x16, x16, #0xf40
  40132c:	br	x17

0000000000401330 <__stack_chk_fail@plt>:
  401330:	adrp	x16, 413000 <__FRAME_END__+0x107f8>
  401334:	ldr	x17, [x16, #3912]
  401338:	add	x16, x16, #0xf48
  40133c:	br	x17

0000000000401340 <waitid@plt>:
  401340:	adrp	x16, 413000 <__FRAME_END__+0x107f8>
  401344:	ldr	x17, [x16, #3920]
  401348:	add	x16, x16, #0xf50
  40134c:	br	x17

0000000000401350 <ask_password_agent_close@plt>:
  401350:	adrp	x16, 413000 <__FRAME_END__+0x107f8>
  401354:	ldr	x17, [x16, #3928]
  401358:	add	x16, x16, #0xf58
  40135c:	br	x17

0000000000401360 <signal_to_string@plt>:
  401360:	adrp	x16, 413000 <__FRAME_END__+0x107f8>
  401364:	ldr	x17, [x16, #3936]
  401368:	add	x16, x16, #0xf60
  40136c:	br	x17

0000000000401370 <pager_close@plt>:
  401370:	adrp	x16, 413000 <__FRAME_END__+0x107f8>
  401374:	ldr	x17, [x16, #3944]
  401378:	add	x16, x16, #0xf68
  40137c:	br	x17

0000000000401380 <cg_is_legacy_wanted@plt>:
  401380:	adrp	x16, 413000 <__FRAME_END__+0x107f8>
  401384:	ldr	x17, [x16, #3952]
  401388:	add	x16, x16, #0xf70
  40138c:	br	x17

0000000000401390 <mac_smack_use@plt>:
  401390:	adrp	x16, 413000 <__FRAME_END__+0x107f8>
  401394:	ldr	x17, [x16, #3960]
  401398:	add	x16, x16, #0xf78
  40139c:	br	x17

00000000004013a0 <internal_hashmap_size@plt>:
  4013a0:	adrp	x16, 413000 <__FRAME_END__+0x107f8>
  4013a4:	ldr	x17, [x16, #3968]
  4013a8:	add	x16, x16, #0xf80
  4013ac:	br	x17

00000000004013b0 <log_internal_realm@plt>:
  4013b0:	adrp	x16, 413000 <__FRAME_END__+0x107f8>
  4013b4:	ldr	x17, [x16, #3976]
  4013b8:	add	x16, x16, #0xf88
  4013bc:	br	x17

00000000004013c0 <hashmap_put@plt>:
  4013c0:	adrp	x16, 413000 <__FRAME_END__+0x107f8>
  4013c4:	ldr	x17, [x16, #3984]
  4013c8:	add	x16, x16, #0xf90
  4013cc:	br	x17

00000000004013d0 <strdup@plt>:
  4013d0:	adrp	x16, 413000 <__FRAME_END__+0x107f8>
  4013d4:	ldr	x17, [x16, #3992]
  4013d8:	add	x16, x16, #0xf98
  4013dc:	br	x17

00000000004013e0 <execv@plt>:
  4013e0:	adrp	x16, 413000 <__FRAME_END__+0x107f8>
  4013e4:	ldr	x17, [x16, #4000]
  4013e8:	add	x16, x16, #0xfa0
  4013ec:	br	x17

00000000004013f0 <safe_fork_full@plt>:
  4013f0:	adrp	x16, 413000 <__FRAME_END__+0x107f8>
  4013f4:	ldr	x17, [x16, #4008]
  4013f8:	add	x16, x16, #0xfa8
  4013fc:	br	x17

0000000000401400 <free@plt>:
  401400:	adrp	x16, 413000 <__FRAME_END__+0x107f8>
  401404:	ldr	x17, [x16, #4016]
  401408:	add	x16, x16, #0xfb0
  40140c:	br	x17

0000000000401410 <cg_is_hybrid_wanted@plt>:
  401410:	adrp	x16, 413000 <__FRAME_END__+0x107f8>
  401414:	ldr	x17, [x16, #4024]
  401418:	add	x16, x16, #0xfb8
  40141c:	br	x17

0000000000401420 <internal_hashmap_ensure_allocated@plt>:
  401420:	adrp	x16, 413000 <__FRAME_END__+0x107f8>
  401424:	ldr	x17, [x16, #4032]
  401428:	add	x16, x16, #0xfc0
  40142c:	br	x17

0000000000401430 <mac_selinux_finish@plt>:
  401430:	adrp	x16, 413000 <__FRAME_END__+0x107f8>
  401434:	ldr	x17, [x16, #4040]
  401438:	add	x16, x16, #0xfc8
  40143c:	br	x17

0000000000401440 <is_clean_exit@plt>:
  401440:	adrp	x16, 413000 <__FRAME_END__+0x107f8>
  401444:	ldr	x17, [x16, #4048]
  401448:	add	x16, x16, #0xfd0
  40144c:	br	x17

0000000000401450 <log_oom_internal@plt>:
  401450:	adrp	x16, 413000 <__FRAME_END__+0x107f8>
  401454:	ldr	x17, [x16, #4056]
  401458:	add	x16, x16, #0xfd8
  40145c:	br	x17

0000000000401460 <memset@plt>:
  401460:	adrp	x16, 413000 <__FRAME_END__+0x107f8>
  401464:	ldr	x17, [x16, #4064]
  401468:	add	x16, x16, #0xfe0
  40146c:	br	x17

0000000000401470 <log_get_max_level_realm@plt>:
  401470:	adrp	x16, 413000 <__FRAME_END__+0x107f8>
  401474:	ldr	x17, [x16, #4072]
  401478:	add	x16, x16, #0xfe8
  40147c:	br	x17

Disassembly of section .text:

0000000000401480 <main>:
  401480:	stp	x29, x30, [sp, #-224]!
  401484:	adrp	x3, 414000 <saved_argv@@SD_SHARED>
  401488:	adrp	x2, 414000 <saved_argv@@SD_SHARED>
  40148c:	mov	x29, sp
  401490:	stp	x21, x22, [sp, #32]
  401494:	adrp	x22, 413000 <__FRAME_END__+0x107f8>
  401498:	add	x22, x22, #0x7f8
  40149c:	str	w0, [x3, #8]
  4014a0:	stp	x19, x20, [sp, #16]
  4014a4:	mov	w19, w0
  4014a8:	ldr	x0, [x22]
  4014ac:	str	x0, [sp, #216]
  4014b0:	mov	x0, #0x0                   	// #0
  4014b4:	str	x1, [x2]
  4014b8:	str	xzr, [sp, #80]
  4014bc:	bl	401250 <log_setup_service@plt>
  4014c0:	cmp	w19, #0x1
  4014c4:	b.le	401560 <main+0xe0>
  4014c8:	mov	w0, #0x0                   	// #0
  4014cc:	bl	401470 <log_get_max_level_realm@plt>
  4014d0:	cmp	w0, #0x2
  4014d4:	b.gt	40163c <main+0x1bc>
  4014d8:	mov	w20, #0xffffffea            	// #-22
  4014dc:	ldr	x0, [sp, #80]
  4014e0:	cbz	x0, 4014f4 <main+0x74>
  4014e4:	adrp	x2, 401000 <_init-0x1b8>
  4014e8:	mov	x1, #0x0                   	// #0
  4014ec:	add	x2, x2, #0x400
  4014f0:	bl	401200 <internal_hashmap_free@plt>
  4014f4:	bl	401350 <ask_password_agent_close@plt>
  4014f8:	bl	401230 <polkit_agent_close@plt>
  4014fc:	bl	401370 <pager_close@plt>
  401500:	bl	401430 <mac_selinux_finish@plt>
  401504:	adrp	x0, 401000 <_init-0x1b8>
  401508:	ldr	x19, [x0, #4080]
  40150c:	cbz	x19, 40153c <main+0xbc>
  401510:	adrp	x0, 401000 <_init-0x1b8>
  401514:	add	x19, x19, #0x7
  401518:	and	x19, x19, #0xfffffffffffffff8
  40151c:	ldr	x21, [x0, #4088]
  401520:	cmp	x19, x21
  401524:	b.cs	40153c <main+0xbc>  // b.hs, b.nlast
  401528:	ldp	x0, x1, [x19]
  40152c:	add	x19, x19, #0x10
  401530:	blr	x1
  401534:	cmp	x19, x21
  401538:	b.cc	401528 <main+0xa8>  // b.lo, b.ul, b.last
  40153c:	lsr	w0, w20, #31
  401540:	ldr	x2, [sp, #216]
  401544:	ldr	x1, [x22]
  401548:	eor	x1, x2, x1
  40154c:	cbnz	x1, 401924 <main+0x4a4>
  401550:	ldp	x19, x20, [sp, #16]
  401554:	ldp	x21, x22, [sp, #32]
  401558:	ldp	x29, x30, [sp], #224
  40155c:	ret
  401560:	mov	w0, #0x12                  	// #18
  401564:	adrp	x19, 401000 <_init-0x1b8>
  401568:	add	x19, x19, #0xef8
  40156c:	stp	x23, x24, [sp, #48]
  401570:	bl	401280 <umask@plt>
  401574:	mov	x0, x19
  401578:	bl	401290 <secure_getenv@plt>
  40157c:	cbz	x0, 4017d0 <main+0x350>
  401580:	adrp	x1, 401000 <_init-0x1b8>
  401584:	add	x1, x1, #0xf08
  401588:	bl	4012a0 <setmntent@plt>
  40158c:	mov	x23, x0
  401590:	cbz	x0, 401798 <main+0x318>
  401594:	adrp	x24, 401000 <_init-0x1b8>
  401598:	mov	w21, #0x0                   	// #0
  40159c:	add	x24, x24, #0xde0
  4015a0:	str	x25, [sp, #64]
  4015a4:	adrp	x25, 402000 <_fini+0x244>
  4015a8:	add	x25, x25, #0x0
  4015ac:	b	4015e0 <main+0x160>
  4015b0:	ldr	x20, [x19, #8]
  4015b4:	mov	x1, x24
  4015b8:	mov	x0, x20
  4015bc:	bl	401240 <path_equal@plt>
  4015c0:	ands	w1, w0, #0xff
  4015c4:	add	x2, sp, #0x50
  4015c8:	mov	x0, x20
  4015cc:	csel	w21, w21, w1, eq  // eq = none
  4015d0:	mov	w1, #0x0                   	// #0
  4015d4:	bl	401a40 <do_remount>
  4015d8:	mov	w20, w0
  4015dc:	tbnz	w0, #31, 401728 <main+0x2a8>
  4015e0:	mov	x0, x23
  4015e4:	bl	4012d0 <getmntent@plt>
  4015e8:	mov	x19, x0
  4015ec:	cbz	x0, 401670 <main+0x1f0>
  4015f0:	ldr	x0, [x19, #8]
  4015f4:	bl	401cb0 <mount_point_is_api>
  4015f8:	tst	w0, #0xff
  4015fc:	b.ne	4015b0 <main+0x130>  // b.any
  401600:	ldp	x1, x0, [x25]
  401604:	stp	x1, x0, [sp, #88]
  401608:	ldr	x0, [x25, #16]
  40160c:	str	x0, [sp, #104]
  401610:	cbz	x1, 4015e0 <main+0x160>
  401614:	ldr	x20, [x19, #8]
  401618:	add	x19, sp, #0x58
  40161c:	b	401628 <main+0x1a8>
  401620:	ldr	x1, [x19, #8]!
  401624:	cbz	x1, 4015e0 <main+0x160>
  401628:	mov	x0, x20
  40162c:	bl	401240 <path_equal@plt>
  401630:	tst	w0, #0xff
  401634:	b.eq	401620 <main+0x1a0>  // b.none
  401638:	b	4015b4 <main+0x134>
  40163c:	mov	w1, #0x16                  	// #22
  401640:	adrp	x5, 401000 <_init-0x1b8>
  401644:	movk	w1, #0x4000, lsl #16
  401648:	add	x5, x5, #0xed0
  40164c:	adrp	x4, 402000 <_fini+0x244>
  401650:	adrp	x2, 401000 <_init-0x1b8>
  401654:	add	x4, x4, #0x48
  401658:	add	x2, x2, #0xe43
  40165c:	mov	w3, #0x55                  	// #85
  401660:	mov	w0, #0x3                   	// #3
  401664:	bl	4013b0 <log_internal_realm@plt>
  401668:	mov	w20, w0
  40166c:	b	4014dc <main+0x5c>
  401670:	ldr	x25, [sp, #64]
  401674:	cbnz	w21, 4016a4 <main+0x224>
  401678:	adrp	x0, 401000 <_init-0x1b8>
  40167c:	add	x0, x0, #0xf10
  401680:	bl	401310 <getenv_bool@plt>
  401684:	cmp	w0, #0x0
  401688:	mov	w19, w0
  40168c:	ccmn	w0, #0x6, #0x4, lt  // lt = tstop
  401690:	b.eq	4017dc <main+0x35c>  // b.none
  401694:	mov	w0, #0x0                   	// #0
  401698:	bl	401470 <log_get_max_level_realm@plt>
  40169c:	cmp	w0, #0x3
  4016a0:	b.gt	401834 <main+0x3b4>
  4016a4:	adrp	x24, 401000 <_init-0x1b8>
  4016a8:	adrp	x21, 402000 <_fini+0x244>
  4016ac:	add	x24, x24, #0xfc0
  4016b0:	add	x21, x21, #0x48
  4016b4:	mov	w20, #0x0                   	// #0
  4016b8:	ldr	x0, [sp, #80]
  4016bc:	bl	4013a0 <internal_hashmap_size@plt>
  4016c0:	cbz	w0, 40171c <main+0x29c>
  4016c4:	mov	x2, #0x80                  	// #128
  4016c8:	mov	w1, #0x0                   	// #0
  4016cc:	add	x0, sp, #0x58
  4016d0:	bl	401460 <memset@plt>
  4016d4:	add	x2, sp, #0x58
  4016d8:	mov	w3, #0x4                   	// #4
  4016dc:	mov	w1, #0x0                   	// #0
  4016e0:	mov	w0, #0x0                   	// #0
  4016e4:	bl	401340 <waitid@plt>
  4016e8:	tbz	w0, #31, 40173c <main+0x2bc>
  4016ec:	bl	401320 <__errno_location@plt>
  4016f0:	ldr	w19, [x0]
  4016f4:	cmp	w19, #0x4
  4016f8:	b.eq	4016b8 <main+0x238>  // b.none
  4016fc:	mov	w0, #0x0                   	// #0
  401700:	bl	401470 <log_get_max_level_realm@plt>
  401704:	cmp	w0, #0x2
  401708:	b.gt	401804 <main+0x384>
  40170c:	cmp	w19, #0x0
  401710:	cneg	w19, w19, lt  // lt = tstop
  401714:	and	w20, w19, #0xff
  401718:	neg	w20, w20
  40171c:	cbnz	x23, 40172c <main+0x2ac>
  401720:	ldp	x23, x24, [sp, #48]
  401724:	b	4014dc <main+0x5c>
  401728:	ldr	x25, [sp, #64]
  40172c:	mov	x0, x23
  401730:	bl	4012e0 <endmntent@plt>
  401734:	ldp	x23, x24, [sp, #48]
  401738:	b	4014dc <main+0x5c>
  40173c:	ldrsw	x1, [sp, #104]
  401740:	ldr	x0, [sp, #80]
  401744:	bl	4011f0 <internal_hashmap_remove@plt>
  401748:	mov	x19, x0
  40174c:	cbz	x0, 40178c <main+0x30c>
  401750:	ldr	w0, [sp, #96]
  401754:	mov	x3, #0x0                   	// #0
  401758:	ldr	w1, [sp, #112]
  40175c:	mov	w2, #0x1                   	// #1
  401760:	bl	401440 <is_clean_exit@plt>
  401764:	tst	w0, #0xff
  401768:	b.ne	40178c <main+0x30c>  // b.any
  40176c:	mov	w0, #0x0                   	// #0
  401770:	bl	401470 <log_get_max_level_realm@plt>
  401774:	ldr	w20, [sp, #96]
  401778:	cmp	w20, #0x1
  40177c:	b.eq	4018dc <main+0x45c>  // b.none
  401780:	cmp	w0, #0x2
  401784:	b.gt	4018a4 <main+0x424>
  401788:	mov	w20, #0xfffffff8            	// #-8
  40178c:	mov	x0, x19
  401790:	bl	401400 <free@plt>
  401794:	b	4016b8 <main+0x238>
  401798:	bl	401320 <__errno_location@plt>
  40179c:	ldr	w20, [x0]
  4017a0:	cmp	w20, #0x2
  4017a4:	b.eq	401678 <main+0x1f8>  // b.none
  4017a8:	mov	w0, #0x0                   	// #0
  4017ac:	bl	401470 <log_get_max_level_realm@plt>
  4017b0:	cmp	w0, #0x2
  4017b4:	b.gt	401860 <main+0x3e0>
  4017b8:	cmp	w20, #0x0
  4017bc:	cneg	w20, w20, lt  // lt = tstop
  4017c0:	and	w20, w20, #0xff
  4017c4:	neg	w20, w20
  4017c8:	ldp	x23, x24, [sp, #48]
  4017cc:	b	4014dc <main+0x5c>
  4017d0:	adrp	x0, 401000 <_init-0x1b8>
  4017d4:	add	x0, x0, #0xec0
  4017d8:	b	401580 <main+0x100>
  4017dc:	cmp	w0, #0x0
  4017e0:	b.le	4016a4 <main+0x224>
  4017e4:	add	x2, sp, #0x50
  4017e8:	adrp	x0, 401000 <_init-0x1b8>
  4017ec:	mov	w1, #0x1                   	// #1
  4017f0:	add	x0, x0, #0xde0
  4017f4:	bl	401a40 <do_remount>
  4017f8:	mov	w20, w0
  4017fc:	tbz	w0, #31, 4016a4 <main+0x224>
  401800:	b	40171c <main+0x29c>
  401804:	mov	w1, w19
  401808:	adrp	x5, 401000 <_init-0x1b8>
  40180c:	adrp	x4, 402000 <_fini+0x244>
  401810:	add	x5, x5, #0xf78
  401814:	add	x4, x4, #0x48
  401818:	adrp	x2, 401000 <_init-0x1b8>
  40181c:	mov	w3, #0x86                  	// #134
  401820:	add	x2, x2, #0xe43
  401824:	mov	w0, #0x3                   	// #3
  401828:	bl	4013b0 <log_internal_realm@plt>
  40182c:	mov	w20, w0
  401830:	b	40171c <main+0x29c>
  401834:	mov	w1, w19
  401838:	adrp	x5, 401000 <_init-0x1b8>
  40183c:	adrp	x4, 402000 <_fini+0x244>
  401840:	add	x5, x5, #0xf40
  401844:	add	x4, x4, #0x48
  401848:	adrp	x2, 401000 <_init-0x1b8>
  40184c:	mov	w3, #0x74                  	// #116
  401850:	add	x2, x2, #0xe43
  401854:	mov	w0, #0x4                   	// #4
  401858:	bl	4013b0 <log_internal_realm@plt>
  40185c:	b	4016a4 <main+0x224>
  401860:	mov	x0, x19
  401864:	bl	401290 <secure_getenv@plt>
  401868:	mov	x6, x0
  40186c:	cbz	x0, 401918 <main+0x498>
  401870:	mov	w1, w20
  401874:	adrp	x5, 401000 <_init-0x1b8>
  401878:	adrp	x4, 402000 <_fini+0x244>
  40187c:	add	x5, x5, #0xf28
  401880:	add	x4, x4, #0x48
  401884:	adrp	x2, 401000 <_init-0x1b8>
  401888:	mov	w3, #0x5d                  	// #93
  40188c:	add	x2, x2, #0xe43
  401890:	mov	w0, #0x3                   	// #3
  401894:	bl	4013b0 <log_internal_realm@plt>
  401898:	mov	w20, w0
  40189c:	ldp	x23, x24, [sp, #48]
  4018a0:	b	4014dc <main+0x5c>
  4018a4:	ldr	w0, [sp, #112]
  4018a8:	mov	w20, #0xfffffff8            	// #-8
  4018ac:	bl	401360 <signal_to_string@plt>
  4018b0:	mov	x7, x0
  4018b4:	mov	x6, x19
  4018b8:	mov	x5, x24
  4018bc:	mov	x4, x21
  4018c0:	adrp	x2, 401000 <_init-0x1b8>
  4018c4:	mov	w3, #0x8f                  	// #143
  4018c8:	add	x2, x2, #0xe43
  4018cc:	mov	w1, #0x0                   	// #0
  4018d0:	mov	w0, #0x3                   	// #3
  4018d4:	bl	4013b0 <log_internal_realm@plt>
  4018d8:	b	40178c <main+0x30c>
  4018dc:	cmp	w0, #0x2
  4018e0:	b.le	401788 <main+0x308>
  4018e4:	ldr	w7, [sp, #112]
  4018e8:	mov	x6, x19
  4018ec:	mov	x4, x21
  4018f0:	adrp	x5, 401000 <_init-0x1b8>
  4018f4:	adrp	x2, 401000 <_init-0x1b8>
  4018f8:	add	x5, x5, #0xf90
  4018fc:	add	x2, x2, #0xe43
  401900:	mov	w3, #0x8d                  	// #141
  401904:	mov	w1, #0x0                   	// #0
  401908:	mov	w20, #0xfffffff8            	// #-8
  40190c:	mov	w0, #0x3                   	// #3
  401910:	bl	4013b0 <log_internal_realm@plt>
  401914:	b	40178c <main+0x30c>
  401918:	adrp	x6, 401000 <_init-0x1b8>
  40191c:	add	x6, x6, #0xec0
  401920:	b	401870 <main+0x3f0>
  401924:	stp	x23, x24, [sp, #48]
  401928:	str	x25, [sp, #64]
  40192c:	bl	401330 <__stack_chk_fail@plt>

0000000000401930 <_start>:
  401930:	mov	x29, #0x0                   	// #0
  401934:	mov	x30, #0x0                   	// #0
  401938:	mov	x5, x0
  40193c:	ldr	x1, [sp]
  401940:	add	x2, sp, #0x8
  401944:	mov	x6, sp
  401948:	movz	x0, #0x0, lsl #48
  40194c:	movk	x0, #0x0, lsl #32
  401950:	movk	x0, #0x40, lsl #16
  401954:	movk	x0, #0x1480
  401958:	movz	x3, #0x0, lsl #48
  40195c:	movk	x3, #0x0, lsl #32
  401960:	movk	x3, #0x40, lsl #16
  401964:	movk	x3, #0x1d38
  401968:	movz	x4, #0x0, lsl #48
  40196c:	movk	x4, #0x0, lsl #32
  401970:	movk	x4, #0x40, lsl #16
  401974:	movk	x4, #0x1db8
  401978:	bl	401210 <__libc_start_main@plt>
  40197c:	bl	4012c0 <abort@plt>

0000000000401980 <call_weak_fn>:
  401980:	adrp	x0, 413000 <__FRAME_END__+0x107f8>
  401984:	ldr	x0, [x0, #4088]
  401988:	cbz	x0, 401990 <call_weak_fn+0x10>
  40198c:	b	401220 <__gmon_start__@plt>
  401990:	ret
  401994:	nop

0000000000401998 <deregister_tm_clones>:
  401998:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  40199c:	add	x0, x0, #0x0
  4019a0:	adrp	x1, 414000 <saved_argv@@SD_SHARED>
  4019a4:	add	x1, x1, #0x0
  4019a8:	cmp	x1, x0
  4019ac:	b.eq	4019c4 <deregister_tm_clones+0x2c>  // b.none
  4019b0:	adrp	x1, 401000 <_init-0x1b8>
  4019b4:	ldr	x1, [x1, #3536]
  4019b8:	cbz	x1, 4019c4 <deregister_tm_clones+0x2c>
  4019bc:	mov	x16, x1
  4019c0:	br	x16
  4019c4:	ret

00000000004019c8 <register_tm_clones>:
  4019c8:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  4019cc:	add	x0, x0, #0x0
  4019d0:	adrp	x1, 414000 <saved_argv@@SD_SHARED>
  4019d4:	add	x1, x1, #0x0
  4019d8:	sub	x1, x1, x0
  4019dc:	lsr	x2, x1, #63
  4019e0:	add	x1, x2, x1, asr #3
  4019e4:	cmp	xzr, x1, asr #1
  4019e8:	asr	x1, x1, #1
  4019ec:	b.eq	401a04 <register_tm_clones+0x3c>  // b.none
  4019f0:	adrp	x2, 401000 <_init-0x1b8>
  4019f4:	ldr	x2, [x2, #3544]
  4019f8:	cbz	x2, 401a04 <register_tm_clones+0x3c>
  4019fc:	mov	x16, x2
  401a00:	br	x16
  401a04:	ret

0000000000401a08 <__do_global_dtors_aux>:
  401a08:	stp	x29, x30, [sp, #-32]!
  401a0c:	mov	x29, sp
  401a10:	str	x19, [sp, #16]
  401a14:	adrp	x19, 414000 <saved_argv@@SD_SHARED>
  401a18:	ldrb	w0, [x19, #12]
  401a1c:	cbnz	w0, 401a2c <__do_global_dtors_aux+0x24>
  401a20:	bl	401998 <deregister_tm_clones>
  401a24:	mov	w0, #0x1                   	// #1
  401a28:	strb	w0, [x19, #12]
  401a2c:	ldr	x19, [sp, #16]
  401a30:	ldp	x29, x30, [sp], #32
  401a34:	ret

0000000000401a38 <frame_dummy>:
  401a38:	b	4019c8 <register_tm_clones>
  401a3c:	nop

0000000000401a40 <do_remount>:
  401a40:	stp	x29, x30, [sp, #-128]!
  401a44:	mov	x29, sp
  401a48:	stp	x19, x20, [sp, #16]
  401a4c:	adrp	x20, 413000 <__FRAME_END__+0x107f8>
  401a50:	add	x20, x20, #0x7f8
  401a54:	ldr	x3, [x20]
  401a58:	str	x3, [sp, #120]
  401a5c:	mov	x3, #0x0                   	// #0
  401a60:	stp	x21, x22, [sp, #32]
  401a64:	mov	x21, x0
  401a68:	mov	x22, x2
  401a6c:	mov	w0, #0x0                   	// #0
  401a70:	str	x23, [sp, #48]
  401a74:	and	w23, w1, #0xff
  401a78:	bl	401470 <log_get_max_level_realm@plt>
  401a7c:	cmp	w0, #0x6
  401a80:	b.gt	401b3c <do_remount+0xfc>
  401a84:	cmp	w23, #0x0
  401a88:	adrp	x1, 401000 <_init-0x1b8>
  401a8c:	adrp	x0, 401000 <_init-0x1b8>
  401a90:	add	x1, x1, #0xe00
  401a94:	add	x0, x0, #0xdf0
  401a98:	add	x4, sp, #0x4c
  401a9c:	csel	x0, x0, x1, ne  // ne = any
  401aa0:	mov	w3, #0x225                 	// #549
  401aa4:	mov	x2, #0x0                   	// #0
  401aa8:	mov	x1, #0x0                   	// #0
  401aac:	bl	4013f0 <safe_fork_full@plt>
  401ab0:	mov	w19, w0
  401ab4:	cmp	w0, #0x0
  401ab8:	b.lt	401b14 <do_remount+0xd4>  // b.tstop
  401abc:	b.eq	401c04 <do_remount+0x1c4>  // b.none
  401ac0:	cbz	x21, 401b94 <do_remount+0x154>
  401ac4:	ldr	w19, [sp, #76]
  401ac8:	cmp	w19, #0x0
  401acc:	b.le	401bb8 <do_remount+0x178>
  401ad0:	mov	x0, x22
  401ad4:	mov	x1, #0x0                   	// #0
  401ad8:	bl	401420 <internal_hashmap_ensure_allocated@plt>
  401adc:	tbnz	w0, #31, 401b6c <do_remount+0x12c>
  401ae0:	mov	x0, x21
  401ae4:	bl	4013d0 <strdup@plt>
  401ae8:	mov	x21, x0
  401aec:	cbz	x0, 401c58 <do_remount+0x218>
  401af0:	mov	x2, x0
  401af4:	sxtw	x1, w19
  401af8:	ldr	x0, [x22]
  401afc:	bl	4013c0 <hashmap_put@plt>
  401b00:	tbnz	w0, #31, 401bdc <do_remount+0x19c>
  401b04:	mov	x21, #0x0                   	// #0
  401b08:	mov	w19, #0x0                   	// #0
  401b0c:	mov	x0, x21
  401b10:	bl	401400 <free@plt>
  401b14:	ldr	x1, [sp, #120]
  401b18:	ldr	x0, [x20]
  401b1c:	eor	x0, x1, x0
  401b20:	cbnz	x0, 401c00 <do_remount+0x1c0>
  401b24:	mov	w0, w19
  401b28:	ldp	x19, x20, [sp, #16]
  401b2c:	ldp	x21, x22, [sp, #32]
  401b30:	ldr	x23, [sp, #48]
  401b34:	ldp	x29, x30, [sp], #128
  401b38:	ret
  401b3c:	mov	x6, x21
  401b40:	adrp	x5, 401000 <_init-0x1b8>
  401b44:	adrp	x4, 402000 <_fini+0x244>
  401b48:	add	x5, x5, #0xe28
  401b4c:	add	x4, x4, #0x38
  401b50:	adrp	x2, 401000 <_init-0x1b8>
  401b54:	mov	w3, #0x36                  	// #54
  401b58:	add	x2, x2, #0xe43
  401b5c:	mov	w1, #0x0                   	// #0
  401b60:	mov	w0, #0x7                   	// #7
  401b64:	bl	4013b0 <log_internal_realm@plt>
  401b68:	b	401a84 <do_remount+0x44>
  401b6c:	adrp	x3, 402000 <_fini+0x244>
  401b70:	adrp	x1, 401000 <_init-0x1b8>
  401b74:	add	x3, x3, #0x28
  401b78:	add	x1, x1, #0xe43
  401b7c:	mov	w2, #0x24                  	// #36
  401b80:	mov	w0, #0x0                   	// #0
  401b84:	mov	x21, #0x0                   	// #0
  401b88:	bl	401450 <log_oom_internal@plt>
  401b8c:	mov	w19, w0
  401b90:	b	401b0c <do_remount+0xcc>
  401b94:	adrp	x4, 402000 <_fini+0x244>
  401b98:	adrp	x1, 401000 <_init-0x1b8>
  401b9c:	adrp	x2, 401000 <_init-0x1b8>
  401ba0:	add	x4, x4, #0x18
  401ba4:	add	x1, x1, #0xea0
  401ba8:	add	x2, x2, #0xe43
  401bac:	mov	w3, #0x1f                  	// #31
  401bb0:	mov	w0, #0x0                   	// #0
  401bb4:	bl	401260 <log_assert_failed_realm@plt>
  401bb8:	adrp	x4, 402000 <_fini+0x244>
  401bbc:	adrp	x1, 401000 <_init-0x1b8>
  401bc0:	adrp	x2, 401000 <_init-0x1b8>
  401bc4:	add	x4, x4, #0x18
  401bc8:	add	x1, x1, #0xea8
  401bcc:	add	x2, x2, #0xe43
  401bd0:	mov	w3, #0x20                  	// #32
  401bd4:	mov	w0, #0x0                   	// #0
  401bd8:	bl	401260 <log_assert_failed_realm@plt>
  401bdc:	adrp	x3, 402000 <_fini+0x244>
  401be0:	adrp	x1, 401000 <_init-0x1b8>
  401be4:	add	x3, x3, #0x28
  401be8:	add	x1, x1, #0xe43
  401bec:	mov	w2, #0x2c                  	// #44
  401bf0:	mov	w0, #0x0                   	// #0
  401bf4:	bl	401450 <log_oom_internal@plt>
  401bf8:	mov	w19, w0
  401bfc:	b	401b0c <do_remount+0xcc>
  401c00:	bl	401330 <__stack_chk_fail@plt>
  401c04:	cmp	w23, #0x0
  401c08:	adrp	x3, 401000 <_init-0x1b8>
  401c0c:	adrp	x2, 401000 <_init-0x1b8>
  401c10:	add	x3, x3, #0xe20
  401c14:	add	x2, x2, #0xe10
  401c18:	add	x1, sp, #0x50
  401c1c:	csel	x2, x2, x3, ne  // ne = any
  401c20:	adrp	x3, 401000 <_init-0x1b8>
  401c24:	add	x3, x3, #0xe70
  401c28:	adrp	x0, 401000 <_init-0x1b8>
  401c2c:	add	x0, x0, #0xe60
  401c30:	stp	x0, x21, [sp, #80]
  401c34:	stp	x3, x2, [sp, #96]
  401c38:	str	xzr, [sp, #112]
  401c3c:	bl	4013e0 <execv@plt>
  401c40:	mov	w0, #0x0                   	// #0
  401c44:	bl	401470 <log_get_max_level_realm@plt>
  401c48:	cmp	w0, #0x2
  401c4c:	b.gt	401c7c <do_remount+0x23c>
  401c50:	mov	w0, #0x1                   	// #1
  401c54:	bl	401270 <_exit@plt>
  401c58:	adrp	x3, 402000 <_fini+0x244>
  401c5c:	adrp	x1, 401000 <_init-0x1b8>
  401c60:	add	x3, x3, #0x28
  401c64:	add	x1, x1, #0xe43
  401c68:	mov	w2, #0x28                  	// #40
  401c6c:	mov	w0, #0x0                   	// #0
  401c70:	bl	401450 <log_oom_internal@plt>
  401c74:	mov	w19, w0
  401c78:	b	401b0c <do_remount+0xcc>
  401c7c:	bl	401320 <__errno_location@plt>
  401c80:	ldr	w1, [x0]
  401c84:	adrp	x5, 401000 <_init-0x1b8>
  401c88:	adrp	x4, 402000 <_fini+0x244>
  401c8c:	add	x5, x5, #0xe78
  401c90:	add	x4, x4, #0x38
  401c94:	adrp	x2, 401000 <_init-0x1b8>
  401c98:	mov	w3, #0x43                  	// #67
  401c9c:	add	x2, x2, #0xe43
  401ca0:	mov	w0, #0x3                   	// #3
  401ca4:	bl	4013b0 <log_internal_realm@plt>
  401ca8:	b	401c50 <do_remount+0x210>
  401cac:	nop

0000000000401cb0 <mount_point_is_api>:
  401cb0:	stp	x29, x30, [sp, #-48]!
  401cb4:	adrp	x1, 402000 <_fini+0x244>
  401cb8:	add	x1, x1, #0xb0
  401cbc:	mov	x29, sp
  401cc0:	stp	x19, x20, [sp, #16]
  401cc4:	adrp	x20, 413000 <__FRAME_END__+0x107f8>
  401cc8:	add	x20, x20, #0x800
  401ccc:	add	x19, x20, #0x40
  401cd0:	add	x20, x20, #0x468
  401cd4:	str	x21, [sp, #32]
  401cd8:	mov	x21, x0
  401cdc:	b	401cec <mount_point_is_api+0x3c>
  401ce0:	cmp	x19, x20
  401ce4:	b.eq	401d0c <mount_point_is_api+0x5c>  // b.none
  401ce8:	ldr	x1, [x19], #56
  401cec:	mov	x0, x21
  401cf0:	bl	401240 <path_equal@plt>
  401cf4:	ands	w0, w0, #0xff
  401cf8:	b.eq	401ce0 <mount_point_is_api+0x30>  // b.none
  401cfc:	ldp	x19, x20, [sp, #16]
  401d00:	ldr	x21, [sp, #32]
  401d04:	ldp	x29, x30, [sp], #48
  401d08:	ret
  401d0c:	mov	x0, x21
  401d10:	adrp	x1, 402000 <_fini+0x244>
  401d14:	add	x1, x1, #0x80
  401d18:	bl	4012f0 <path_startswith@plt>
  401d1c:	cmp	x0, #0x0
  401d20:	cset	w0, ne  // ne = any
  401d24:	ldp	x19, x20, [sp, #16]
  401d28:	ldr	x21, [sp, #32]
  401d2c:	ldp	x29, x30, [sp], #48
  401d30:	ret
  401d34:	nop

0000000000401d38 <__libc_csu_init>:
  401d38:	stp	x29, x30, [sp, #-64]!
  401d3c:	mov	x29, sp
  401d40:	stp	x19, x20, [sp, #16]
  401d44:	adrp	x20, 413000 <__FRAME_END__+0x107f8>
  401d48:	add	x20, x20, #0x7f0
  401d4c:	stp	x21, x22, [sp, #32]
  401d50:	adrp	x21, 413000 <__FRAME_END__+0x107f8>
  401d54:	add	x21, x21, #0x7e8
  401d58:	sub	x20, x20, x21
  401d5c:	mov	w22, w0
  401d60:	stp	x23, x24, [sp, #48]
  401d64:	mov	x23, x1
  401d68:	mov	x24, x2
  401d6c:	bl	4011b8 <_init>
  401d70:	cmp	xzr, x20, asr #3
  401d74:	b.eq	401da0 <__libc_csu_init+0x68>  // b.none
  401d78:	asr	x20, x20, #3
  401d7c:	mov	x19, #0x0                   	// #0
  401d80:	ldr	x3, [x21, x19, lsl #3]
  401d84:	mov	x2, x24
  401d88:	add	x19, x19, #0x1
  401d8c:	mov	x1, x23
  401d90:	mov	w0, w22
  401d94:	blr	x3
  401d98:	cmp	x20, x19
  401d9c:	b.ne	401d80 <__libc_csu_init+0x48>  // b.any
  401da0:	ldp	x19, x20, [sp, #16]
  401da4:	ldp	x21, x22, [sp, #32]
  401da8:	ldp	x23, x24, [sp, #48]
  401dac:	ldp	x29, x30, [sp], #64
  401db0:	ret
  401db4:	nop

0000000000401db8 <__libc_csu_fini>:
  401db8:	ret

Disassembly of section .fini:

0000000000401dbc <_fini>:
  401dbc:	stp	x29, x30, [sp, #-16]!
  401dc0:	mov	x29, sp
  401dc4:	ldp	x29, x30, [sp], #16
  401dc8:	ret
