In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMFuzzMutate.a_clang_-O3:

FuzzerCLI.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm17parseFuzzerCLOptsEiPPc>:
       0:	stp	x29, x30, [sp, #-96]!
       4:	stp	x28, x27, [sp, #16]
       8:	stp	x26, x25, [sp, #32]
       c:	stp	x24, x23, [sp, #48]
      10:	stp	x22, x21, [sp, #64]
      14:	stp	x20, x19, [sp, #80]
      18:	mov	x29, sp
      1c:	mov	w20, w0
      20:	mov	w0, #0x8                   	// #8
      24:	mov	x21, x1
      28:	bl	0 <_Znwm>
      2c:	ldr	x8, [x21]
      30:	mov	x23, x0
      34:	mov	x19, x0
      38:	cmp	w20, #0x2
      3c:	str	x8, [x23], #8
      40:	b.lt	e4 <_ZN4llvm17parseFuzzerCLOptsEiPPc+0xe4>  // b.tstop
      44:	mov	x24, #0x692d                	// #26925
      48:	mov	x25, #0x6572                	// #25970
      4c:	mov	x27, #0x5f67                	// #24423
      50:	movk	x24, #0x6e67, lsl #16
      54:	movk	x25, #0x616d, lsl #16
      58:	movk	x27, #0x7261, lsl #16
      5c:	movk	x24, #0x726f, lsl #32
      60:	movk	x25, #0x6e69, lsl #32
      64:	movk	x27, #0x7367, lsl #32
      68:	mov	w26, #0x1                   	// #1
      6c:	movk	x24, #0x5f65, lsl #48
      70:	movk	x25, #0x6e69, lsl #48
      74:	movk	x27, #0x313d, lsl #48
      78:	b	88 <_ZN4llvm17parseFuzzerCLOptsEiPPc+0x88>
      7c:	add	w8, w28, #0x1
      80:	cmp	w8, w20
      84:	b.ge	d8 <_ZN4llvm17parseFuzzerCLOptsEiPPc+0xd8>  // b.tcont
      88:	ldr	x22, [x21, x26, lsl #3]
      8c:	mov	x28, x26
      90:	add	x26, x26, #0x1
      94:	cbz	x22, 7c <_ZN4llvm17parseFuzzerCLOptsEiPPc+0x7c>
      98:	mov	x0, x22
      9c:	bl	0 <strlen>
      a0:	cmp	x0, #0x18
      a4:	mov	w8, w26
      a8:	b.ne	80 <_ZN4llvm17parseFuzzerCLOptsEiPPc+0x80>  // b.any
      ac:	ldp	x8, x9, [x22]
      b0:	ldr	x10, [x22, #16]
      b4:	eor	x8, x8, x24
      b8:	eor	x9, x9, x25
      bc:	eor	x10, x10, x27
      c0:	orr	x8, x8, x9
      c4:	orr	x8, x8, x10
      c8:	cbz	x8, d4 <_ZN4llvm17parseFuzzerCLOptsEiPPc+0xd4>
      cc:	cmp	w26, w20
      d0:	b.lt	88 <_ZN4llvm17parseFuzzerCLOptsEiPPc+0x88>  // b.tstop
      d4:	add	w8, w28, #0x1
      d8:	cmp	w8, w20
      dc:	b.lt	f0 <_ZN4llvm17parseFuzzerCLOptsEiPPc+0xf0>  // b.tstop
      e0:	b	1bc <_ZN4llvm17parseFuzzerCLOptsEiPPc+0x1bc>
      e4:	mov	w8, #0x1                   	// #1
      e8:	cmp	w8, w20
      ec:	b.ge	1bc <_ZN4llvm17parseFuzzerCLOptsEiPPc+0x1bc>  // b.tcont
      f0:	add	x22, x21, w8, sxtw #3
      f4:	sub	w24, w20, w8
      f8:	mov	x25, #0x7ffffffffffffff8    	// #9223372036854775800
      fc:	mov	x26, #0xfffffffffffffff     	// #1152921504606846975
     100:	mov	x8, x23
     104:	b	11c <_ZN4llvm17parseFuzzerCLOptsEiPPc+0x11c>
     108:	ldr	x9, [x22], #8
     10c:	str	x9, [x23]
     110:	add	x23, x23, #0x8
     114:	subs	w24, w24, #0x1
     118:	b.eq	1bc <_ZN4llvm17parseFuzzerCLOptsEiPPc+0x1bc>  // b.none
     11c:	cmp	x8, x23
     120:	b.ne	108 <_ZN4llvm17parseFuzzerCLOptsEiPPc+0x108>  // b.any
     124:	sub	x20, x23, x19
     128:	cmp	x20, x25
     12c:	b.eq	224 <_ZN4llvm17parseFuzzerCLOptsEiPPc+0x224>  // b.none
     130:	asr	x23, x20, #3
     134:	cmp	x20, #0x0
     138:	csinc	x8, x23, xzr, ne  // ne = any
     13c:	adds	x8, x8, x23
     140:	lsr	x10, x8, #60
     144:	cset	w9, cs  // cs = hs, nlast
     148:	cmp	x10, #0x0
     14c:	cset	w10, ne  // ne = any
     150:	orr	w9, w9, w10
     154:	cmp	w9, #0x0
     158:	csel	x27, x26, x8, ne  // ne = any
     15c:	cbz	x27, 170 <_ZN4llvm17parseFuzzerCLOptsEiPPc+0x170>
     160:	lsl	x0, x27, #3
     164:	bl	0 <_Znwm>
     168:	mov	x21, x0
     16c:	b	174 <_ZN4llvm17parseFuzzerCLOptsEiPPc+0x174>
     170:	mov	x21, xzr
     174:	ldr	x8, [x22]
     178:	add	x23, x21, x23, lsl #3
     17c:	cmp	x20, #0x1
     180:	str	x8, [x23]
     184:	b.lt	198 <_ZN4llvm17parseFuzzerCLOptsEiPPc+0x198>  // b.tstop
     188:	mov	x0, x21
     18c:	mov	x1, x19
     190:	mov	x2, x20
     194:	bl	0 <memmove>
     198:	cbz	x19, 1a4 <_ZN4llvm17parseFuzzerCLOptsEiPPc+0x1a4>
     19c:	mov	x0, x19
     1a0:	bl	0 <_ZdlPv>
     1a4:	add	x8, x21, x27, lsl #3
     1a8:	mov	x19, x21
     1ac:	add	x23, x23, #0x8
     1b0:	subs	w24, w24, #0x1
     1b4:	add	x22, x22, #0x8
     1b8:	b.ne	11c <_ZN4llvm17parseFuzzerCLOptsEiPPc+0x11c>  // b.any
     1bc:	sub	x8, x23, x19
     1c0:	adrp	x2, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     1c4:	lsr	x0, x8, #3
     1c8:	add	x2, x2, #0x0
     1cc:	mov	x1, x19
     1d0:	mov	x3, xzr
     1d4:	mov	x4, xzr
     1d8:	mov	x5, xzr
     1dc:	mov	w6, wzr
     1e0:	bl	0 <_ZN4llvm2cl23ParseCommandLineOptionsEiPKPKcNS_9StringRefEPNS_11raw_ostreamES2_b>
     1e4:	cbz	x19, 208 <_ZN4llvm17parseFuzzerCLOptsEiPPc+0x208>
     1e8:	mov	x0, x19
     1ec:	ldp	x20, x19, [sp, #80]
     1f0:	ldp	x22, x21, [sp, #64]
     1f4:	ldp	x24, x23, [sp, #48]
     1f8:	ldp	x26, x25, [sp, #32]
     1fc:	ldp	x28, x27, [sp, #16]
     200:	ldp	x29, x30, [sp], #96
     204:	b	0 <_ZdlPv>
     208:	ldp	x20, x19, [sp, #80]
     20c:	ldp	x22, x21, [sp, #64]
     210:	ldp	x24, x23, [sp, #48]
     214:	ldp	x26, x25, [sp, #32]
     218:	ldp	x28, x27, [sp, #16]
     21c:	ldp	x29, x30, [sp], #96
     220:	ret
     224:	adrp	x0, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     228:	add	x0, x0, #0x0
     22c:	bl	0 <_ZSt20__throw_length_errorPKc>

0000000000000230 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE>:
     230:	sub	sp, sp, #0x180
     234:	stp	x29, x30, [sp, #288]
     238:	stp	x28, x27, [sp, #304]
     23c:	stp	x26, x25, [sp, #320]
     240:	stp	x24, x23, [sp, #336]
     244:	stp	x22, x21, [sp, #352]
     248:	stp	x20, x19, [sp, #368]
     24c:	add	x29, sp, #0x120
     250:	add	x8, sp, #0x70
     254:	mov	x20, x0
     258:	stp	x0, x1, [x29, #-32]
     25c:	add	x0, x8, #0x10
     260:	str	x0, [sp, #112]
     264:	cbz	x20, 2ac <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x7c>
     268:	mov	x19, x1
     26c:	cmp	x1, #0x10
     270:	str	x1, [sp, #8]
     274:	b.cc	294 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x64>  // b.lo, b.ul, b.last
     278:	add	x0, sp, #0x70
     27c:	add	x1, sp, #0x8
     280:	mov	x2, xzr
     284:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     288:	ldr	x8, [sp, #8]
     28c:	str	x0, [sp, #112]
     290:	str	x8, [sp, #128]
     294:	cbz	x19, 2c4 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x94>
     298:	cmp	x19, #0x1
     29c:	b.ne	2b8 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x88>  // b.any
     2a0:	ldrb	w8, [x20]
     2a4:	strb	w8, [x0]
     2a8:	b	2c4 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x94>
     2ac:	str	xzr, [sp, #120]
     2b0:	strb	wzr, [sp, #128]
     2b4:	b	2d4 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0xa4>
     2b8:	mov	x1, x20
     2bc:	mov	x2, x19
     2c0:	bl	0 <memcpy>
     2c4:	ldr	x8, [sp, #8]
     2c8:	ldr	x9, [sp, #112]
     2cc:	str	x8, [sp, #120]
     2d0:	strb	wzr, [x9, x8]
     2d4:	mov	w0, #0x20                  	// #32
     2d8:	stp	xzr, xzr, [x29, #-56]
     2dc:	stur	xzr, [x29, #-40]
     2e0:	bl	0 <_Znwm>
     2e4:	ldp	x20, x21, [sp, #112]
     2e8:	mov	x19, x0
     2ec:	add	x8, x0, #0x20
     2f0:	stur	x0, [x29, #-56]
     2f4:	add	x0, x0, #0x10
     2f8:	stur	x8, [x29, #-40]
     2fc:	str	x0, [x19]
     300:	cbnz	x20, 308 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0xd8>
     304:	cbnz	x21, b30 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x900>
     308:	cmp	x21, #0x10
     30c:	str	x21, [sp, #8]
     310:	b.cc	330 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x100>  // b.lo, b.ul, b.last
     314:	add	x1, sp, #0x8
     318:	mov	x0, x19
     31c:	mov	x2, xzr
     320:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     324:	ldr	x8, [sp, #8]
     328:	str	x0, [x19]
     32c:	str	x8, [x19, #16]
     330:	cbz	x21, 354 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x124>
     334:	cmp	x21, #0x1
     338:	b.ne	348 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x118>  // b.any
     33c:	ldrb	w8, [x20]
     340:	strb	w8, [x0]
     344:	b	354 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x124>
     348:	mov	x1, x20
     34c:	mov	x2, x21
     350:	bl	0 <memcpy>
     354:	ldr	x8, [sp, #8]
     358:	ldr	x9, [x19]
     35c:	str	x8, [x19, #8]
     360:	strb	wzr, [x9, x8]
     364:	ldr	x0, [sp, #112]
     368:	add	x9, sp, #0x70
     36c:	add	x9, x9, #0x10
     370:	add	x8, x19, #0x20
     374:	cmp	x0, x9
     378:	stur	x8, [x29, #-48]
     37c:	b.eq	384 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x154>  // b.none
     380:	bl	0 <_ZdlPv>
     384:	adrp	x1, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     388:	add	x1, x1, #0x0
     38c:	sub	x0, x29, #0x20
     390:	mov	w2, #0x2                   	// #2
     394:	mov	x3, xzr
     398:	bl	0 <_ZNK4llvm9StringRef4findES0_m>
     39c:	cmn	x0, #0x1
     3a0:	b.eq	43c <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x20c>  // b.none
     3a4:	ldp	x9, x8, [x29, #-32]
     3a8:	add	x10, x0, #0x2
     3ac:	cmp	x8, x0
     3b0:	csel	x11, x8, x0, cc  // cc = lo, ul, last
     3b4:	cmp	x8, x10
     3b8:	csel	x10, x8, x10, cc  // cc = lo, ul, last
     3bc:	stp	x9, x11, [x29, #-96]
     3c0:	add	x9, x9, x10
     3c4:	subs	x8, x8, x10
     3c8:	stp	x9, x8, [x29, #-80]
     3cc:	b.eq	a8c <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x85c>  // b.none
     3d0:	adrp	x9, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     3d4:	ldr	d0, [x9]
     3d8:	sub	x8, x29, #0x60
     3dc:	add	x0, x8, #0x10
     3e0:	add	x8, sp, #0x70
     3e4:	add	x8, x8, #0x10
     3e8:	add	x1, sp, #0x70
     3ec:	mov	w2, #0x2d                  	// #45
     3f0:	mov	w3, #0xffffffff            	// #-1
     3f4:	mov	w4, #0x1                   	// #1
     3f8:	str	x8, [sp, #112]
     3fc:	str	d0, [sp, #120]
     400:	bl	0 <_ZNK4llvm9StringRef5splitERNS_15SmallVectorImplIS0_EEcib>
     404:	ldr	w8, [sp, #120]
     408:	cbz	w8, 7d8 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x5a8>
     40c:	ldr	x23, [sp, #112]
     410:	add	x9, sp, #0x8
     414:	add	x10, sp, #0x40
     418:	adrp	x19, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     41c:	lsl	x24, x8, #4
     420:	mov	w25, #0x105                 	// #261
     424:	add	x26, sp, #0x60
     428:	add	x19, x19, #0x0
     42c:	mov	w28, #0x6c                  	// #108
     430:	add	x20, x9, #0x10
     434:	add	x27, x10, #0x10
     438:	b	474 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x244>
     43c:	ldur	q0, [x29, #-32]
     440:	stp	xzr, xzr, [x29, #-80]
     444:	stur	q0, [x29, #-96]
     448:	b	a8c <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x85c>
     44c:	sub	x0, x29, #0x38
     450:	add	x2, sp, #0x8
     454:	bl	0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     458:	ldr	x0, [sp, #8]
     45c:	cmp	x0, x20
     460:	b.eq	468 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x238>  // b.none
     464:	bl	0 <_ZdlPv>
     468:	subs	x24, x24, #0x10
     46c:	add	x23, x23, #0x10
     470:	b.eq	7d8 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x5a8>  // b.none
     474:	ldr	q0, [x23]
     478:	str	q0, [sp, #96]
     47c:	ldr	x21, [sp, #104]
     480:	cbz	x21, 510 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x2e0>
     484:	cmp	x21, #0x5
     488:	b.ne	500 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x2d0>  // b.any
     48c:	ldr	x22, [sp, #96]
     490:	mov	w10, #0x6967                	// #26983
     494:	movk	w10, #0x6573, lsl #16
     498:	ldr	w8, [x22]
     49c:	ldrb	w9, [x22, #4]
     4a0:	eor	w8, w8, w10
     4a4:	eor	w9, w9, w28
     4a8:	orr	w8, w8, w9
     4ac:	cbz	w8, 6d0 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x4a0>
     4b0:	ldrb	w8, [x22]
     4b4:	cmp	w8, #0x4f
     4b8:	b.ne	510 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x2e0>  // b.any
     4bc:	cmp	x21, #0x10
     4c0:	mov	x0, x27
     4c4:	str	x27, [sp, #64]
     4c8:	stur	x21, [x29, #-16]
     4cc:	b.cc	4ec <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x2bc>  // b.lo, b.ul, b.last
     4d0:	add	x0, sp, #0x40
     4d4:	sub	x1, x29, #0x10
     4d8:	mov	x2, xzr
     4dc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     4e0:	ldur	x8, [x29, #-16]
     4e4:	str	x0, [sp, #64]
     4e8:	str	x8, [sp, #80]
     4ec:	cmp	x21, #0x1
     4f0:	b.ne	59c <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x36c>  // b.any
     4f4:	ldrb	w8, [x22]
     4f8:	strb	w8, [x0]
     4fc:	b	5a8 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x378>
     500:	ldr	x22, [sp, #96]
     504:	ldrb	w8, [x22]
     508:	cmp	w8, #0x4f
     50c:	b.eq	4bc <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x28c>  // b.none
     510:	add	x0, sp, #0x8
     514:	add	x1, sp, #0x40
     518:	strh	w25, [sp, #80]
     51c:	stp	x26, xzr, [sp, #64]
     520:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
     524:	ldr	x0, [sp, #8]
     528:	ldr	w21, [sp, #40]
     52c:	cmp	x0, x20
     530:	b.eq	538 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x308>  // b.none
     534:	bl	0 <_ZdlPv>
     538:	cbz	w21, af0 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x8c0>
     53c:	ldr	x21, [sp, #96]
     540:	cbz	x21, 590 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x360>
     544:	ldr	x22, [sp, #104]
     548:	mov	x0, x27
     54c:	str	x27, [sp, #64]
     550:	cmp	x22, #0x10
     554:	stur	x22, [x29, #-16]
     558:	b.cc	578 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x348>  // b.lo, b.ul, b.last
     55c:	add	x0, sp, #0x40
     560:	sub	x1, x29, #0x10
     564:	mov	x2, xzr
     568:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     56c:	ldur	x8, [x29, #-16]
     570:	str	x0, [sp, #64]
     574:	str	x8, [sp, #80]
     578:	cbz	x22, 5e0 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x3b0>
     57c:	cmp	x22, #0x1
     580:	b.ne	5d4 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x3a4>  // b.any
     584:	ldrb	w8, [x21]
     588:	strb	w8, [x0]
     58c:	b	5e0 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x3b0>
     590:	stp	x27, xzr, [sp, #64]
     594:	strb	wzr, [sp, #80]
     598:	b	5f0 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x3c0>
     59c:	mov	x1, x22
     5a0:	mov	x2, x21
     5a4:	bl	0 <memcpy>
     5a8:	ldur	x8, [x29, #-16]
     5ac:	ldr	x9, [sp, #64]
     5b0:	adrp	x3, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     5b4:	add	x0, sp, #0x40
     5b8:	mov	w4, #0x1                   	// #1
     5bc:	mov	x1, xzr
     5c0:	mov	x2, xzr
     5c4:	add	x3, x3, #0x0
     5c8:	str	x8, [sp, #72]
     5cc:	strb	wzr, [x9, x8]
     5d0:	b	604 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x3d4>
     5d4:	mov	x1, x21
     5d8:	mov	x2, x22
     5dc:	bl	0 <memcpy>
     5e0:	ldur	x8, [x29, #-16]
     5e4:	ldr	x9, [sp, #64]
     5e8:	str	x8, [sp, #72]
     5ec:	strb	wzr, [x9, x8]
     5f0:	add	x0, sp, #0x40
     5f4:	mov	w4, #0x9                   	// #9
     5f8:	mov	x1, xzr
     5fc:	mov	x2, xzr
     600:	mov	x3, x19
     604:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
     608:	str	x20, [sp, #8]
     60c:	mov	x8, x0
     610:	ldr	x9, [x8], #16
     614:	cmp	x9, x8
     618:	b.eq	62c <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x3fc>  // b.none
     61c:	str	x9, [sp, #8]
     620:	ldr	x9, [x0, #16]
     624:	str	x9, [sp, #24]
     628:	b	634 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x404>
     62c:	ldr	q0, [x9]
     630:	str	q0, [x20]
     634:	ldr	x9, [x0, #8]
     638:	str	x9, [sp, #16]
     63c:	stp	x8, xzr, [x0]
     640:	strb	wzr, [x0, #16]
     644:	ldp	x1, x8, [x29, #-48]
     648:	cmp	x1, x8
     64c:	b.eq	674 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x444>  // b.none
     650:	add	x8, x1, #0x10
     654:	str	x8, [x1]
     658:	ldr	x9, [sp, #8]
     65c:	cmp	x9, x20
     660:	b.eq	6a0 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x470>  // b.none
     664:	str	x9, [x1]
     668:	ldr	x8, [sp, #24]
     66c:	str	x8, [x1, #16]
     670:	b	6a8 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x478>
     674:	sub	x0, x29, #0x38
     678:	add	x2, sp, #0x8
     67c:	bl	0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     680:	ldr	x0, [sp, #8]
     684:	cmp	x0, x20
     688:	b.eq	690 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x460>  // b.none
     68c:	bl	0 <_ZdlPv>
     690:	ldr	x0, [sp, #64]
     694:	cmp	x0, x27
     698:	b.ne	464 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x234>  // b.any
     69c:	b	468 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x238>
     6a0:	ldr	q0, [x20]
     6a4:	str	q0, [x8]
     6a8:	ldr	x8, [sp, #16]
     6ac:	add	x9, x1, #0x20
     6b0:	str	x8, [x1, #8]
     6b4:	stp	x20, xzr, [sp, #8]
     6b8:	strb	wzr, [sp, #24]
     6bc:	stur	x9, [x29, #-48]
     6c0:	ldr	x0, [sp, #64]
     6c4:	cmp	x0, x27
     6c8:	b.ne	464 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x234>  // b.any
     6cc:	b	468 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x238>
     6d0:	adrp	x8, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     6d4:	add	x8, x8, #0x0
     6d8:	ldr	x8, [x8]
     6dc:	ldp	x1, x9, [x29, #-48]
     6e0:	mov	w10, #0x7369                	// #29545
     6e4:	movk	w10, #0x6c65, lsl #16
     6e8:	str	x8, [x20]
     6ec:	mov	w8, #0xc                   	// #12
     6f0:	cmp	x1, x9
     6f4:	str	w10, [x20, #8]
     6f8:	stp	x20, x8, [sp, #8]
     6fc:	strb	wzr, [sp, #36]
     700:	b.eq	728 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x4f8>  // b.none
     704:	add	x8, x1, #0x10
     708:	str	x8, [x1]
     70c:	ldr	x9, [sp, #8]
     710:	cmp	x9, x20
     714:	b.eq	748 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x518>  // b.none
     718:	str	x9, [x1]
     71c:	ldr	x8, [sp, #24]
     720:	str	x8, [x1, #16]
     724:	b	750 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x520>
     728:	sub	x0, x29, #0x38
     72c:	add	x2, sp, #0x8
     730:	bl	0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     734:	ldr	x0, [sp, #8]
     738:	cmp	x0, x20
     73c:	b.eq	768 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x538>  // b.none
     740:	bl	0 <_ZdlPv>
     744:	b	768 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x538>
     748:	ldr	q0, [x20]
     74c:	str	q0, [x8]
     750:	mov	w8, #0xc                   	// #12
     754:	str	x8, [x1, #8]
     758:	add	x8, x1, #0x20
     75c:	stp	x20, xzr, [sp, #8]
     760:	strb	wzr, [sp, #24]
     764:	stur	x8, [x29, #-48]
     768:	ldp	x1, x8, [x29, #-48]
     76c:	mov	w9, #0x30                  	// #48
     770:	strb	w9, [x20, #2]
     774:	mov	w9, #0x4f2d                	// #20269
     778:	strh	w9, [x20]
     77c:	mov	w9, #0x3                   	// #3
     780:	cmp	x1, x8
     784:	stp	x20, x9, [sp, #8]
     788:	strb	wzr, [sp, #27]
     78c:	b.eq	44c <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x21c>  // b.none
     790:	add	x8, x1, #0x10
     794:	str	x8, [x1]
     798:	ldr	x9, [sp, #8]
     79c:	cmp	x9, x20
     7a0:	b.eq	7b4 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x584>  // b.none
     7a4:	str	x9, [x1]
     7a8:	ldr	x8, [sp, #24]
     7ac:	str	x8, [x1, #16]
     7b0:	b	7bc <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x58c>
     7b4:	ldr	q0, [x20]
     7b8:	str	q0, [x8]
     7bc:	mov	w8, #0x3                   	// #3
     7c0:	str	x8, [x1, #8]
     7c4:	add	x8, x1, #0x20
     7c8:	stp	x20, xzr, [sp, #8]
     7cc:	strb	wzr, [sp, #24]
     7d0:	stur	x8, [x29, #-48]
     7d4:	b	468 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x238>
     7d8:	bl	0 <_ZN4llvm4errsEv>
     7dc:	mov	x19, x0
     7e0:	ldp	x8, x0, [x0, #16]
     7e4:	ldp	x1, x20, [x29, #-96]
     7e8:	sub	x8, x8, x0
     7ec:	cmp	x20, x8
     7f0:	b.ls	80c <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x5dc>  // b.plast
     7f4:	mov	x0, x19
     7f8:	mov	x2, x20
     7fc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     800:	mov	x19, x0
     804:	ldr	x0, [x0, #24]
     808:	b	824 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x5f4>
     80c:	cbz	x20, 824 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x5f4>
     810:	mov	x2, x20
     814:	bl	0 <memcpy>
     818:	ldr	x8, [x19, #24]
     81c:	add	x0, x8, x20
     820:	str	x0, [x19, #24]
     824:	ldr	x8, [x19, #16]
     828:	sub	x8, x8, x0
     82c:	cmp	x8, #0xf
     830:	b.hi	84c <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x61c>  // b.pmore
     834:	adrp	x1, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     838:	add	x1, x1, #0x0
     83c:	mov	w2, #0x10                  	// #16
     840:	mov	x0, x19
     844:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     848:	b	868 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x638>
     84c:	adrp	x8, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     850:	add	x8, x8, #0x0
     854:	ldr	q0, [x8]
     858:	str	q0, [x0]
     85c:	ldr	x8, [x19, #24]
     860:	add	x8, x8, #0x10
     864:	str	x8, [x19, #24]
     868:	ldp	x9, x8, [x29, #-56]
     86c:	sub	x8, x8, x9
     870:	lsr	x21, x8, #5
     874:	bl	0 <_ZN4llvm4errsEv>
     878:	mov	x8, x0
     87c:	ldr	x10, [x0, #16]
     880:	ldr	x9, [x8, #24]!
     884:	cmp	x10, x9
     888:	cset	w10, eq  // eq = none
     88c:	cmp	w21, #0x2
     890:	b.lt	908 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x6d8>  // b.tstop
     894:	mov	w11, #0x1                   	// #1
     898:	adrp	x19, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     89c:	mov	x20, xzr
     8a0:	add	x19, x19, #0x0
     8a4:	sub	x21, x11, w21, uxtw
     8a8:	mov	w22, #0x20                  	// #32
     8ac:	b	8f4 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x6c4>
     8b0:	strb	w22, [x9]
     8b4:	ldr	x9, [x8]
     8b8:	add	x9, x9, #0x1
     8bc:	str	x9, [x8]
     8c0:	ldur	x8, [x29, #-56]
     8c4:	add	x8, x8, x20
     8c8:	ldp	x1, x2, [x8, #32]
     8cc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     8d0:	bl	0 <_ZN4llvm4errsEv>
     8d4:	mov	x8, x0
     8d8:	ldr	x10, [x0, #16]
     8dc:	ldr	x9, [x8, #24]!
     8e0:	add	x20, x20, #0x20
     8e4:	cmp	x10, x9
     8e8:	cset	w10, eq  // eq = none
     8ec:	adds	x21, x21, #0x1
     8f0:	b.cs	908 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x6d8>  // b.hs, b.nlast
     8f4:	tbz	w10, #0, 8b0 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x680>
     8f8:	mov	w2, #0x1                   	// #1
     8fc:	mov	x1, x19
     900:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     904:	b	8c0 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x690>
     908:	cbz	w10, 920 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x6f0>
     90c:	adrp	x1, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     910:	add	x1, x1, #0x0
     914:	mov	w2, #0x1                   	// #1
     918:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     91c:	b	934 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x704>
     920:	mov	w10, #0xa                   	// #10
     924:	strb	w10, [x9]
     928:	ldr	x9, [x8]
     92c:	add	x9, x9, #0x1
     930:	str	x9, [x8]
     934:	ldp	x22, x23, [x29, #-56]
     938:	sub	x8, x23, x22
     93c:	asr	x20, x8, #5
     940:	lsr	x9, x20, #60
     944:	cbnz	x9, b3c <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x90c>
     948:	cbz	x8, a30 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x800>
     94c:	asr	x0, x8, #2
     950:	bl	0 <_Znwm>
     954:	ldp	x22, x23, [x29, #-56]
     958:	mov	x19, x0
     95c:	add	x8, x0, x20, lsl #3
     960:	cmp	x22, x23
     964:	b.eq	a3c <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x80c>  // b.none
     968:	mov	x24, #0x7ffffffffffffff8    	// #9223372036854775800
     96c:	mov	x25, #0xfffffffffffffff     	// #1152921504606846975
     970:	mov	x26, x19
     974:	b	98c <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x75c>
     978:	str	x27, [x26]
     97c:	add	x22, x22, #0x20
     980:	cmp	x23, x22
     984:	add	x26, x26, #0x8
     988:	b.eq	a40 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x810>  // b.none
     98c:	ldr	x27, [x22]
     990:	cmp	x26, x8
     994:	b.ne	978 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x748>  // b.any
     998:	sub	x20, x26, x19
     99c:	cmp	x20, x24
     9a0:	b.eq	b24 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x8f4>  // b.none
     9a4:	asr	x26, x20, #3
     9a8:	cmp	x20, #0x0
     9ac:	csinc	x8, x26, xzr, ne  // ne = any
     9b0:	adds	x8, x8, x26
     9b4:	lsr	x10, x8, #60
     9b8:	cset	w9, cs  // cs = hs, nlast
     9bc:	cmp	x10, #0x0
     9c0:	cset	w10, ne  // ne = any
     9c4:	orr	w9, w9, w10
     9c8:	cmp	w9, #0x0
     9cc:	csel	x28, x25, x8, ne  // ne = any
     9d0:	cbz	x28, a18 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x7e8>
     9d4:	lsl	x0, x28, #3
     9d8:	bl	0 <_Znwm>
     9dc:	mov	x21, x0
     9e0:	add	x26, x21, x26, lsl #3
     9e4:	cmp	x20, #0x1
     9e8:	str	x27, [x26]
     9ec:	b.lt	a00 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x7d0>  // b.tstop
     9f0:	mov	x0, x21
     9f4:	mov	x1, x19
     9f8:	mov	x2, x20
     9fc:	bl	0 <memmove>
     a00:	cbz	x19, a0c <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x7dc>
     a04:	mov	x0, x19
     a08:	bl	0 <_ZdlPv>
     a0c:	add	x8, x21, x28, lsl #3
     a10:	mov	x19, x21
     a14:	b	97c <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x74c>
     a18:	mov	x21, xzr
     a1c:	add	x26, x21, x26, lsl #3
     a20:	cmp	x20, #0x1
     a24:	str	x27, [x26]
     a28:	b.ge	9f0 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x7c0>  // b.tcont
     a2c:	b	a00 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x7d0>
     a30:	mov	x19, xzr
     a34:	cmp	x22, x23
     a38:	b.ne	968 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x738>  // b.any
     a3c:	mov	x26, x19
     a40:	sub	x8, x26, x19
     a44:	adrp	x2, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     a48:	lsr	x0, x8, #3
     a4c:	add	x2, x2, #0x0
     a50:	mov	x1, x19
     a54:	mov	x3, xzr
     a58:	mov	x4, xzr
     a5c:	mov	x5, xzr
     a60:	mov	w6, wzr
     a64:	bl	0 <_ZN4llvm2cl23ParseCommandLineOptionsEiPKPKcNS_9StringRefEPNS_11raw_ostreamES2_b>
     a68:	cbz	x19, a74 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x844>
     a6c:	mov	x0, x19
     a70:	bl	0 <_ZdlPv>
     a74:	ldr	x0, [sp, #112]
     a78:	add	x8, sp, #0x70
     a7c:	add	x8, x8, #0x10
     a80:	cmp	x0, x8
     a84:	b.eq	a8c <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x85c>  // b.none
     a88:	bl	0 <free>
     a8c:	ldp	x19, x20, [x29, #-56]
     a90:	cmp	x19, x20
     a94:	b.ne	ad0 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x8a0>  // b.any
     a98:	cbz	x19, aa4 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x874>
     a9c:	mov	x0, x19
     aa0:	bl	0 <_ZdlPv>
     aa4:	ldp	x20, x19, [sp, #368]
     aa8:	ldp	x22, x21, [sp, #352]
     aac:	ldp	x24, x23, [sp, #336]
     ab0:	ldp	x26, x25, [sp, #320]
     ab4:	ldp	x28, x27, [sp, #304]
     ab8:	ldp	x29, x30, [sp, #288]
     abc:	add	sp, sp, #0x180
     ac0:	ret
     ac4:	add	x19, x19, #0x10
     ac8:	cmp	x19, x20
     acc:	b.eq	ae4 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x8b4>  // b.none
     ad0:	ldr	x0, [x19], #16
     ad4:	cmp	x0, x19
     ad8:	b.eq	ac4 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x894>  // b.none
     adc:	bl	0 <_ZdlPv>
     ae0:	b	ac4 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x894>
     ae4:	ldur	x19, [x29, #-56]
     ae8:	cbnz	x19, a9c <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x86c>
     aec:	b	aa4 <_ZN4llvm27handleExecNameEncodedBEOptsENS_9StringRefE+0x874>
     af0:	bl	0 <_ZN4llvm4errsEv>
     af4:	ldp	x1, x2, [x29, #-32]
     af8:	bl	0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     afc:	adrp	x1, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     b00:	add	x1, x1, #0x0
     b04:	bl	0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     b08:	ldp	x1, x2, [sp, #96]
     b0c:	bl	0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     b10:	adrp	x1, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     b14:	add	x1, x1, #0x0
     b18:	bl	0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     b1c:	mov	w0, #0x1                   	// #1
     b20:	bl	0 <exit>
     b24:	adrp	x0, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     b28:	add	x0, x0, #0x0
     b2c:	bl	0 <_ZSt20__throw_length_errorPKc>
     b30:	adrp	x0, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     b34:	add	x0, x0, #0x0
     b38:	bl	0 <_ZSt19__throw_logic_errorPKc>
     b3c:	adrp	x0, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     b40:	add	x0, x0, #0x0
     b44:	bl	0 <_ZSt20__throw_length_errorPKc>

0000000000000b48 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE>:
     b48:	sub	sp, sp, #0x180
     b4c:	stp	x29, x30, [sp, #288]
     b50:	stp	x28, x27, [sp, #304]
     b54:	stp	x26, x25, [sp, #320]
     b58:	stp	x24, x23, [sp, #336]
     b5c:	stp	x22, x21, [sp, #352]
     b60:	stp	x20, x19, [sp, #368]
     b64:	add	x29, sp, #0x120
     b68:	add	x8, sp, #0x70
     b6c:	mov	x20, x0
     b70:	stp	x0, x1, [x29, #-32]
     b74:	add	x0, x8, #0x10
     b78:	str	x0, [sp, #112]
     b7c:	cbz	x20, bc4 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x7c>
     b80:	mov	x19, x1
     b84:	cmp	x1, #0x10
     b88:	str	x1, [sp, #40]
     b8c:	b.cc	bac <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x64>  // b.lo, b.ul, b.last
     b90:	add	x0, sp, #0x70
     b94:	add	x1, sp, #0x28
     b98:	mov	x2, xzr
     b9c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     ba0:	ldr	x8, [sp, #40]
     ba4:	str	x0, [sp, #112]
     ba8:	str	x8, [sp, #128]
     bac:	cbz	x19, bdc <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x94>
     bb0:	cmp	x19, #0x1
     bb4:	b.ne	bd0 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x88>  // b.any
     bb8:	ldrb	w8, [x20]
     bbc:	strb	w8, [x0]
     bc0:	b	bdc <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x94>
     bc4:	str	xzr, [sp, #120]
     bc8:	strb	wzr, [sp, #128]
     bcc:	b	bec <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xa4>
     bd0:	mov	x1, x20
     bd4:	mov	x2, x19
     bd8:	bl	0 <memcpy>
     bdc:	ldr	x8, [sp, #40]
     be0:	ldr	x9, [sp, #112]
     be4:	str	x8, [sp, #120]
     be8:	strb	wzr, [x9, x8]
     bec:	mov	w0, #0x20                  	// #32
     bf0:	stp	xzr, xzr, [x29, #-56]
     bf4:	stur	xzr, [x29, #-40]
     bf8:	bl	0 <_Znwm>
     bfc:	ldp	x20, x21, [sp, #112]
     c00:	mov	x19, x0
     c04:	add	x8, x0, #0x20
     c08:	stur	x0, [x29, #-56]
     c0c:	add	x0, x0, #0x10
     c10:	stur	x8, [x29, #-40]
     c14:	str	x0, [x19]
     c18:	cbnz	x20, c20 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xd8>
     c1c:	cbnz	x21, 18c4 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xd7c>
     c20:	cmp	x21, #0x10
     c24:	str	x21, [sp, #40]
     c28:	b.cc	c48 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x100>  // b.lo, b.ul, b.last
     c2c:	add	x1, sp, #0x28
     c30:	mov	x0, x19
     c34:	mov	x2, xzr
     c38:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     c3c:	ldr	x8, [sp, #40]
     c40:	str	x0, [x19]
     c44:	str	x8, [x19, #16]
     c48:	cbz	x21, c6c <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x124>
     c4c:	cmp	x21, #0x1
     c50:	b.ne	c60 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x118>  // b.any
     c54:	ldrb	w8, [x20]
     c58:	strb	w8, [x0]
     c5c:	b	c6c <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x124>
     c60:	mov	x1, x20
     c64:	mov	x2, x21
     c68:	bl	0 <memcpy>
     c6c:	ldr	x8, [sp, #40]
     c70:	ldr	x9, [x19]
     c74:	str	x8, [x19, #8]
     c78:	strb	wzr, [x9, x8]
     c7c:	ldr	x0, [sp, #112]
     c80:	add	x9, sp, #0x70
     c84:	add	x9, x9, #0x10
     c88:	add	x8, x19, #0x20
     c8c:	cmp	x0, x9
     c90:	stur	x8, [x29, #-48]
     c94:	b.eq	c9c <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x154>  // b.none
     c98:	bl	0 <_ZdlPv>
     c9c:	adrp	x1, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     ca0:	add	x1, x1, #0x0
     ca4:	sub	x0, x29, #0x20
     ca8:	mov	w2, #0x2                   	// #2
     cac:	mov	x3, xzr
     cb0:	bl	0 <_ZNK4llvm9StringRef4findES0_m>
     cb4:	cmn	x0, #0x1
     cb8:	b.eq	1580 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xa38>  // b.none
     cbc:	ldp	x9, x8, [x29, #-32]
     cc0:	add	x10, x0, #0x2
     cc4:	cmp	x8, x0
     cc8:	csel	x11, x8, x0, cc  // cc = lo, ul, last
     ccc:	cmp	x8, x10
     cd0:	csel	x10, x8, x10, cc  // cc = lo, ul, last
     cd4:	stp	x9, x11, [x29, #-96]
     cd8:	add	x9, x9, x10
     cdc:	subs	x8, x8, x10
     ce0:	stp	x9, x8, [x29, #-80]
     ce4:	b.eq	1820 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xcd8>  // b.none
     ce8:	adrp	x9, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     cec:	ldr	d0, [x9]
     cf0:	sub	x8, x29, #0x60
     cf4:	add	x0, x8, #0x10
     cf8:	add	x8, sp, #0x70
     cfc:	add	x8, x8, #0x10
     d00:	add	x1, sp, #0x70
     d04:	mov	w2, #0x2d                  	// #45
     d08:	mov	w3, #0xffffffff            	// #-1
     d0c:	mov	w4, #0x1                   	// #1
     d10:	str	x8, [sp, #112]
     d14:	str	d0, [sp, #120]
     d18:	bl	0 <_ZNK4llvm9StringRef5splitERNS_15SmallVectorImplIS0_EEcib>
     d1c:	ldr	w8, [sp, #120]
     d20:	cbz	w8, 154c <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xa04>
     d24:	ldr	x21, [sp, #112]
     d28:	add	x9, sp, #0x28
     d2c:	add	x10, sp, #0x8
     d30:	adrp	x19, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     d34:	adrp	x23, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     d38:	lsl	x24, x8, #4
     d3c:	mov	w25, #0x105                 	// #261
     d40:	add	x28, sp, #0x60
     d44:	add	x19, x19, #0x0
     d48:	add	x23, x23, #0x0
     d4c:	add	x26, x9, #0x10
     d50:	add	x22, x10, #0x10
     d54:	b	d80 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x238>
     d58:	sub	x0, x29, #0x38
     d5c:	add	x2, sp, #0x28
     d60:	bl	0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     d64:	ldr	x0, [sp, #40]
     d68:	cmp	x0, x26
     d6c:	b.eq	d74 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x22c>  // b.none
     d70:	bl	0 <_ZdlPv>
     d74:	subs	x24, x24, #0x10
     d78:	add	x21, x21, #0x10
     d7c:	b.eq	154c <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xa04>  // b.none
     d80:	ldr	q0, [x21]
     d84:	str	q0, [sp, #96]
     d88:	ldr	x27, [sp, #104]
     d8c:	sub	x8, x27, #0x3
     d90:	cmp	x8, #0xd
     d94:	b.hi	1144 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x5fc>  // b.pmore
     d98:	ldr	x20, [sp, #96]
     d9c:	adr	x9, dac <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x264>
     da0:	ldrb	w10, [x23, x8]
     da4:	add	x9, x9, x10, lsl #2
     da8:	br	x9
     dac:	adrp	x1, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     db0:	mov	x0, x20
     db4:	add	x1, x1, #0x0
     db8:	mov	x2, x27
     dbc:	bl	0 <bcmp>
     dc0:	cbnz	w0, 1144 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x5fc>
     dc4:	adrp	x8, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     dc8:	add	x8, x8, #0x0
     dcc:	ldr	x8, [x8]
     dd0:	ldp	x1, x9, [x29, #-48]
     dd4:	str	x8, [x26]
     dd8:	mov	w8, #0x673d                	// #26429
     ddc:	movk	w8, #0x6e76, lsl #16
     de0:	stur	w8, [x26, #7]
     de4:	mov	w8, #0xb                   	// #11
     de8:	cmp	x1, x9
     dec:	stp	x26, x8, [sp, #40]
     df0:	strb	wzr, [sp, #67]
     df4:	b.eq	d58 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x210>  // b.none
     df8:	add	x8, x1, #0x10
     dfc:	str	x8, [x1]
     e00:	ldr	x9, [sp, #40]
     e04:	cmp	x9, x26
     e08:	b.eq	1518 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x9d0>  // b.none
     e0c:	str	x9, [x1]
     e10:	ldr	x8, [sp, #56]
     e14:	str	x8, [x1, #16]
     e18:	b	1520 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x9d8>
     e1c:	adrp	x1, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     e20:	mov	x0, x20
     e24:	add	x1, x1, #0x0
     e28:	mov	x2, x27
     e2c:	bl	0 <bcmp>
     e30:	cbnz	w0, 1144 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x5fc>
     e34:	adrp	x8, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     e38:	add	x8, x8, #0x0
     e3c:	mov	x9, x8
     e40:	ldur	x8, [x8, #7]
     e44:	ldp	x1, x10, [x29, #-48]
     e48:	ldr	x9, [x9]
     e4c:	stur	x8, [x26, #7]
     e50:	mov	w8, #0xf                   	// #15
     e54:	cmp	x1, x10
     e58:	str	x9, [x26]
     e5c:	stp	x26, x8, [sp, #40]
     e60:	strb	wzr, [sp, #71]
     e64:	b.eq	d58 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x210>  // b.none
     e68:	add	x8, x1, #0x10
     e6c:	str	x8, [x1]
     e70:	ldr	x9, [sp, #40]
     e74:	cmp	x9, x26
     e78:	b.eq	1508 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x9c0>  // b.none
     e7c:	str	x9, [x1]
     e80:	ldr	x8, [sp, #56]
     e84:	str	x8, [x1, #16]
     e88:	mov	w8, #0xf                   	// #15
     e8c:	b	1524 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x9dc>
     e90:	adrp	x1, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     e94:	mov	x0, x20
     e98:	add	x1, x1, #0x0
     e9c:	mov	x2, x27
     ea0:	bl	0 <bcmp>
     ea4:	cbnz	w0, 1144 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x5fc>
     ea8:	mov	w8, #0x16                  	// #22
     eac:	add	x0, sp, #0x28
     eb0:	add	x1, sp, #0x8
     eb4:	mov	x2, xzr
     eb8:	str	x26, [sp, #40]
     ebc:	str	x8, [sp, #8]
     ec0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     ec4:	ldr	x8, [sp, #8]
     ec8:	adrp	x10, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     ecc:	add	x10, x10, #0x0
     ed0:	b	1314 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x7cc>
     ed4:	adrp	x1, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     ed8:	mov	x0, x20
     edc:	add	x1, x1, #0x0
     ee0:	mov	x2, x27
     ee4:	bl	0 <bcmp>
     ee8:	cbz	w0, 12cc <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x784>
     eec:	adrp	x1, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     ef0:	mov	x0, x20
     ef4:	add	x1, x1, #0x0
     ef8:	mov	x2, x27
     efc:	bl	0 <bcmp>
     f00:	cbz	w0, 13bc <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x874>
     f04:	adrp	x1, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     f08:	mov	x0, x20
     f0c:	add	x1, x1, #0x0
     f10:	mov	x2, x27
     f14:	bl	0 <bcmp>
     f18:	cbnz	w0, 1144 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x5fc>
     f1c:	adrp	x8, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     f20:	add	x8, x8, #0x0
     f24:	ldr	x8, [x8]
     f28:	ldp	x1, x9, [x29, #-48]
     f2c:	mov	w10, #0x7269                	// #29289
     f30:	str	x26, [sp, #40]
     f34:	movk	w10, #0x6563, lsl #16
     f38:	b	13d8 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x890>
     f3c:	adrp	x1, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     f40:	mov	x0, x20
     f44:	add	x1, x1, #0x0
     f48:	mov	x2, x27
     f4c:	bl	0 <bcmp>
     f50:	cbz	w0, 12ec <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x7a4>
     f54:	adrp	x1, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     f58:	mov	x0, x20
     f5c:	add	x1, x1, #0x0
     f60:	mov	x2, x27
     f64:	bl	0 <bcmp>
     f68:	cbnz	w0, 1144 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x5fc>
     f6c:	mov	w8, #0x16                  	// #22
     f70:	add	x0, sp, #0x28
     f74:	add	x1, sp, #0x8
     f78:	mov	x2, xzr
     f7c:	str	x26, [sp, #40]
     f80:	str	x8, [sp, #8]
     f84:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     f88:	ldr	x8, [sp, #8]
     f8c:	adrp	x10, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     f90:	add	x10, x10, #0x0
     f94:	b	1314 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x7cc>
     f98:	adrp	x1, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     f9c:	mov	x0, x20
     fa0:	add	x1, x1, #0x0
     fa4:	mov	x2, x27
     fa8:	bl	0 <bcmp>
     fac:	cbnz	w0, 1144 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x5fc>
     fb0:	mov	w8, #0x17                  	// #23
     fb4:	add	x0, sp, #0x28
     fb8:	add	x1, sp, #0x8
     fbc:	mov	x2, xzr
     fc0:	str	x26, [sp, #40]
     fc4:	str	x8, [sp, #8]
     fc8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     fcc:	adrp	x10, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     fd0:	add	x10, x10, #0x0
     fd4:	ldr	x8, [sp, #8]
     fd8:	ldur	x9, [x10, #15]
     fdc:	ldr	q0, [x10]
     fe0:	str	x0, [sp, #40]
     fe4:	str	x8, [sp, #56]
     fe8:	stur	x9, [x0, #15]
     fec:	str	q0, [x0]
     ff0:	b	14a8 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x960>
     ff4:	adrp	x1, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
     ff8:	mov	x0, x20
     ffc:	add	x1, x1, #0x0
    1000:	mov	x2, x27
    1004:	bl	0 <bcmp>
    1008:	cbnz	w0, 1144 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x5fc>
    100c:	mov	w8, #0x11                  	// #17
    1010:	add	x0, sp, #0x28
    1014:	add	x1, sp, #0x8
    1018:	mov	x2, xzr
    101c:	str	x26, [sp, #40]
    1020:	str	x8, [sp, #8]
    1024:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    1028:	adrp	x9, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    102c:	add	x9, x9, #0x0
    1030:	ldr	x8, [sp, #8]
    1034:	ldr	q0, [x9]
    1038:	mov	w9, #0x65                  	// #101
    103c:	str	x0, [sp, #40]
    1040:	str	x8, [sp, #56]
    1044:	str	q0, [x0]
    1048:	strb	w9, [x0, #16]
    104c:	b	14a8 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x960>
    1050:	ldr	x8, [x20]
    1054:	mov	x10, #0x6e69                	// #28265
    1058:	movk	x10, #0x7473, lsl #16
    105c:	movk	x10, #0x6f63, lsl #32
    1060:	movk	x10, #0x626d, lsl #48
    1064:	ldur	x9, [x20, #3]
    1068:	eor	x8, x8, x10
    106c:	mov	x10, #0x6374                	// #25460
    1070:	movk	x10, #0x6d6f, lsl #16
    1074:	movk	x10, #0x6962, lsl #32
    1078:	movk	x10, #0x656e, lsl #48
    107c:	eor	x9, x9, x10
    1080:	orr	x8, x8, x9
    1084:	cbz	x8, 1330 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x7e8>
    1088:	adrp	x1, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    108c:	mov	x0, x20
    1090:	add	x1, x1, #0x0
    1094:	mov	x2, x27
    1098:	bl	0 <bcmp>
    109c:	cbz	w0, 141c <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x8d4>
    10a0:	adrp	x1, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    10a4:	mov	x0, x20
    10a8:	add	x1, x1, #0x0
    10ac:	mov	x2, x27
    10b0:	bl	0 <bcmp>
    10b4:	cbz	w0, 1464 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x91c>
    10b8:	adrp	x1, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    10bc:	mov	x0, x20
    10c0:	add	x1, x1, #0x0
    10c4:	mov	x2, x27
    10c8:	bl	0 <bcmp>
    10cc:	cbnz	w0, 1144 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x5fc>
    10d0:	adrp	x8, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    10d4:	add	x8, x8, #0x0
    10d8:	mov	x9, x8
    10dc:	ldur	x8, [x8, #6]
    10e0:	ldp	x1, x10, [x29, #-48]
    10e4:	ldr	x9, [x9]
    10e8:	stur	x8, [x26, #6]
    10ec:	mov	w8, #0xe                   	// #14
    10f0:	cmp	x1, x10
    10f4:	str	x9, [x26]
    10f8:	stp	x26, x8, [sp, #40]
    10fc:	strb	wzr, [sp, #70]
    1100:	b.eq	d58 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x210>  // b.none
    1104:	add	x8, x1, #0x10
    1108:	str	x8, [x1]
    110c:	ldr	x9, [sp, #40]
    1110:	cmp	x9, x26
    1114:	b.eq	153c <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x9f4>  // b.none
    1118:	str	x9, [x1]
    111c:	ldr	x8, [sp, #56]
    1120:	str	x8, [x1, #16]
    1124:	mov	w8, #0xe                   	// #14
    1128:	b	1524 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x9dc>
    112c:	adrp	x1, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    1130:	mov	x0, x20
    1134:	add	x1, x1, #0x0
    1138:	mov	x2, x27
    113c:	bl	0 <bcmp>
    1140:	cbz	w0, 1378 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x830>
    1144:	add	x0, sp, #0x28
    1148:	add	x1, sp, #0x8
    114c:	strh	w25, [sp, #24]
    1150:	stp	x28, xzr, [sp, #8]
    1154:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
    1158:	ldr	x0, [sp, #40]
    115c:	ldr	w20, [sp, #72]
    1160:	cmp	x0, x26
    1164:	b.eq	116c <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x624>  // b.none
    1168:	bl	0 <_ZdlPv>
    116c:	cbz	w20, 1884 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xd3c>
    1170:	ldr	x20, [sp, #96]
    1174:	cbz	x20, 11c4 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x67c>
    1178:	ldr	x27, [sp, #104]
    117c:	mov	x0, x22
    1180:	str	x22, [sp, #8]
    1184:	cmp	x27, #0x10
    1188:	stur	x27, [x29, #-16]
    118c:	b.cc	11ac <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x664>  // b.lo, b.ul, b.last
    1190:	add	x0, sp, #0x8
    1194:	sub	x1, x29, #0x10
    1198:	mov	x2, xzr
    119c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    11a0:	ldur	x8, [x29, #-16]
    11a4:	str	x0, [sp, #8]
    11a8:	str	x8, [sp, #24]
    11ac:	cbz	x27, 11dc <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x694>
    11b0:	cmp	x27, #0x1
    11b4:	b.ne	11d0 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x688>  // b.any
    11b8:	ldrb	w8, [x20]
    11bc:	strb	w8, [x0]
    11c0:	b	11dc <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x694>
    11c4:	stp	x22, xzr, [sp, #8]
    11c8:	strb	wzr, [sp, #24]
    11cc:	b	11ec <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x6a4>
    11d0:	mov	x1, x20
    11d4:	mov	x2, x27
    11d8:	bl	0 <memcpy>
    11dc:	ldur	x8, [x29, #-16]
    11e0:	ldr	x9, [sp, #8]
    11e4:	str	x8, [sp, #16]
    11e8:	strb	wzr, [x9, x8]
    11ec:	add	x0, sp, #0x8
    11f0:	mov	w4, #0x9                   	// #9
    11f4:	mov	x1, xzr
    11f8:	mov	x2, xzr
    11fc:	mov	x3, x19
    1200:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    1204:	str	x26, [sp, #40]
    1208:	mov	x8, x0
    120c:	ldr	x9, [x8], #16
    1210:	cmp	x9, x8
    1214:	b.eq	1228 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x6e0>  // b.none
    1218:	str	x9, [sp, #40]
    121c:	ldr	x9, [x0, #16]
    1220:	str	x9, [sp, #56]
    1224:	b	1230 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x6e8>
    1228:	ldr	q0, [x9]
    122c:	str	q0, [x26]
    1230:	ldr	x9, [x0, #8]
    1234:	str	x9, [sp, #48]
    1238:	stp	x8, xzr, [x0]
    123c:	strb	wzr, [x0, #16]
    1240:	ldp	x1, x8, [x29, #-48]
    1244:	cmp	x1, x8
    1248:	b.eq	1270 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x728>  // b.none
    124c:	add	x8, x1, #0x10
    1250:	str	x8, [x1]
    1254:	ldr	x9, [sp, #40]
    1258:	cmp	x9, x26
    125c:	b.eq	129c <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x754>  // b.none
    1260:	str	x9, [x1]
    1264:	ldr	x8, [sp, #56]
    1268:	str	x8, [x1, #16]
    126c:	b	12a4 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x75c>
    1270:	sub	x0, x29, #0x38
    1274:	add	x2, sp, #0x28
    1278:	bl	0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    127c:	ldr	x0, [sp, #40]
    1280:	cmp	x0, x26
    1284:	b.eq	128c <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x744>  // b.none
    1288:	bl	0 <_ZdlPv>
    128c:	ldr	x0, [sp, #8]
    1290:	cmp	x0, x22
    1294:	b.ne	d70 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x228>  // b.any
    1298:	b	d74 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x22c>
    129c:	ldr	q0, [x26]
    12a0:	str	q0, [x8]
    12a4:	ldr	x8, [sp, #48]
    12a8:	add	x9, x1, #0x20
    12ac:	str	x8, [x1, #8]
    12b0:	stp	x26, xzr, [sp, #40]
    12b4:	strb	wzr, [sp, #56]
    12b8:	stur	x9, [x29, #-48]
    12bc:	ldr	x0, [sp, #8]
    12c0:	cmp	x0, x22
    12c4:	b.ne	d70 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x228>  // b.any
    12c8:	b	d74 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x22c>
    12cc:	adrp	x8, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    12d0:	add	x8, x8, #0x0
    12d4:	ldr	x8, [x8]
    12d8:	ldp	x1, x9, [x29, #-48]
    12dc:	mov	w10, #0x6373                	// #25459
    12e0:	movk	w10, #0x7063, lsl #16
    12e4:	str	x26, [sp, #40]
    12e8:	b	13d8 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x890>
    12ec:	mov	w8, #0x16                  	// #22
    12f0:	add	x0, sp, #0x28
    12f4:	add	x1, sp, #0x8
    12f8:	mov	x2, xzr
    12fc:	str	x26, [sp, #40]
    1300:	str	x8, [sp, #8]
    1304:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    1308:	ldr	x8, [sp, #8]
    130c:	adrp	x10, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    1310:	add	x10, x10, #0x0
    1314:	ldur	x9, [x10, #14]
    1318:	ldr	q0, [x10]
    131c:	str	x0, [sp, #40]
    1320:	str	x8, [sp, #56]
    1324:	stur	x9, [x0, #14]
    1328:	str	q0, [x0]
    132c:	b	14a8 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x960>
    1330:	mov	w8, #0x13                  	// #19
    1334:	add	x0, sp, #0x28
    1338:	add	x1, sp, #0x8
    133c:	mov	x2, xzr
    1340:	str	x26, [sp, #40]
    1344:	str	x8, [sp, #8]
    1348:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    134c:	adrp	x9, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    1350:	add	x9, x9, #0x0
    1354:	ldr	x8, [sp, #8]
    1358:	ldr	q0, [x9]
    135c:	mov	w9, #0x6962                	// #26978
    1360:	movk	w9, #0x656e, lsl #16
    1364:	str	x0, [sp, #40]
    1368:	str	x8, [sp, #56]
    136c:	str	q0, [x0]
    1370:	stur	w9, [x0, #15]
    1374:	b	14a8 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x960>
    1378:	mov	w8, #0x18                  	// #24
    137c:	add	x0, sp, #0x28
    1380:	add	x1, sp, #0x8
    1384:	mov	x2, xzr
    1388:	str	x26, [sp, #40]
    138c:	str	x8, [sp, #8]
    1390:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    1394:	adrp	x10, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    1398:	add	x10, x10, #0x0
    139c:	ldr	x8, [sp, #8]
    13a0:	ldr	x9, [x10, #16]
    13a4:	ldr	q0, [x10]
    13a8:	str	x0, [sp, #40]
    13ac:	str	x8, [sp, #56]
    13b0:	str	x9, [x0, #16]
    13b4:	str	q0, [x0]
    13b8:	b	14a8 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x960>
    13bc:	adrp	x8, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    13c0:	add	x8, x8, #0x0
    13c4:	ldr	x8, [x8]
    13c8:	ldp	x1, x9, [x29, #-48]
    13cc:	mov	w10, #0x696c                	// #26988
    13d0:	str	x26, [sp, #40]
    13d4:	movk	w10, #0x6d63, lsl #16
    13d8:	str	x8, [x26]
    13dc:	mov	w8, #0xc                   	// #12
    13e0:	cmp	x1, x9
    13e4:	str	w10, [x26, #8]
    13e8:	str	x8, [sp, #48]
    13ec:	strb	wzr, [sp, #68]
    13f0:	b.eq	d58 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x210>  // b.none
    13f4:	add	x8, x1, #0x10
    13f8:	str	x8, [x1]
    13fc:	ldr	x9, [sp, #40]
    1400:	cmp	x9, x26
    1404:	b.eq	1454 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x90c>  // b.none
    1408:	str	x9, [x1]
    140c:	ldr	x8, [sp, #56]
    1410:	str	x8, [x1, #16]
    1414:	mov	w8, #0xc                   	// #12
    1418:	b	1524 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x9dc>
    141c:	mov	w8, #0x14                  	// #20
    1420:	add	x0, sp, #0x28
    1424:	add	x1, sp, #0x8
    1428:	mov	x2, xzr
    142c:	str	x26, [sp, #40]
    1430:	str	x8, [sp, #8]
    1434:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    1438:	adrp	x9, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    143c:	add	x9, x9, #0x0
    1440:	ldr	x8, [sp, #8]
    1444:	ldr	q0, [x9]
    1448:	mov	w9, #0x632d                	// #25389
    144c:	movk	w9, #0x6766, lsl #16
    1450:	b	1498 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x950>
    1454:	ldr	q0, [x26]
    1458:	str	q0, [x8]
    145c:	mov	w8, #0xc                   	// #12
    1460:	b	1524 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x9dc>
    1464:	mov	w8, #0x14                  	// #20
    1468:	add	x0, sp, #0x28
    146c:	add	x1, sp, #0x8
    1470:	mov	x2, xzr
    1474:	str	x26, [sp, #40]
    1478:	str	x8, [sp, #8]
    147c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    1480:	adrp	x9, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    1484:	add	x9, x9, #0x0
    1488:	ldr	x8, [sp, #8]
    148c:	ldr	q0, [x9]
    1490:	mov	w9, #0x7461                	// #29793
    1494:	movk	w9, #0x2965, lsl #16
    1498:	str	x0, [sp, #40]
    149c:	str	x8, [sp, #56]
    14a0:	str	q0, [x0]
    14a4:	str	w9, [x0, #16]
    14a8:	ldr	x9, [sp, #40]
    14ac:	str	x8, [sp, #48]
    14b0:	strb	wzr, [x9, x8]
    14b4:	ldp	x1, x8, [x29, #-48]
    14b8:	cmp	x1, x8
    14bc:	b.eq	d58 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x210>  // b.none
    14c0:	add	x8, x1, #0x10
    14c4:	str	x8, [x1]
    14c8:	ldr	x9, [sp, #40]
    14cc:	cmp	x9, x26
    14d0:	b.eq	14e4 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x99c>  // b.none
    14d4:	str	x9, [x1]
    14d8:	ldr	x8, [sp, #56]
    14dc:	str	x8, [x1, #16]
    14e0:	b	14ec <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x9a4>
    14e4:	ldr	q0, [x26]
    14e8:	str	q0, [x8]
    14ec:	ldr	x8, [sp, #48]
    14f0:	add	x9, x1, #0x20
    14f4:	str	x8, [x1, #8]
    14f8:	stp	x26, xzr, [sp, #40]
    14fc:	strb	wzr, [sp, #56]
    1500:	stur	x9, [x29, #-48]
    1504:	b	d74 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x22c>
    1508:	ldr	q0, [x26]
    150c:	str	q0, [x8]
    1510:	mov	w8, #0xf                   	// #15
    1514:	b	1524 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x9dc>
    1518:	ldr	q0, [x26]
    151c:	str	q0, [x8]
    1520:	mov	w8, #0xb                   	// #11
    1524:	str	x8, [x1, #8]
    1528:	add	x8, x1, #0x20
    152c:	stp	x26, xzr, [sp, #40]
    1530:	strb	wzr, [sp, #56]
    1534:	stur	x8, [x29, #-48]
    1538:	b	d74 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x22c>
    153c:	ldr	q0, [x26]
    1540:	str	q0, [x8]
    1544:	mov	w8, #0xe                   	// #14
    1548:	b	1524 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0x9dc>
    154c:	bl	0 <_ZN4llvm4errsEv>
    1550:	mov	x19, x0
    1554:	ldp	x8, x0, [x0, #16]
    1558:	ldp	x1, x20, [x29, #-96]
    155c:	sub	x8, x8, x0
    1560:	cmp	x20, x8
    1564:	b.ls	1590 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xa48>  // b.plast
    1568:	mov	x0, x19
    156c:	mov	x2, x20
    1570:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1574:	mov	x19, x0
    1578:	ldr	x0, [x0, #24]
    157c:	b	15a8 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xa60>
    1580:	ldur	q0, [x29, #-32]
    1584:	stp	xzr, xzr, [x29, #-80]
    1588:	stur	q0, [x29, #-96]
    158c:	b	1820 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xcd8>
    1590:	cbz	x20, 15a8 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xa60>
    1594:	mov	x2, x20
    1598:	bl	0 <memcpy>
    159c:	ldr	x8, [x19, #24]
    15a0:	add	x0, x8, x20
    15a4:	str	x0, [x19, #24]
    15a8:	ldr	x8, [x19, #16]
    15ac:	sub	x8, x8, x0
    15b0:	cmp	x8, #0xf
    15b4:	b.hi	15d0 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xa88>  // b.pmore
    15b8:	adrp	x1, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    15bc:	add	x1, x1, #0x0
    15c0:	mov	w2, #0x10                  	// #16
    15c4:	mov	x0, x19
    15c8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    15cc:	b	15ec <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xaa4>
    15d0:	adrp	x8, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    15d4:	add	x8, x8, #0x0
    15d8:	ldr	q0, [x8]
    15dc:	str	q0, [x0]
    15e0:	ldr	x8, [x19, #24]
    15e4:	add	x8, x8, #0x10
    15e8:	str	x8, [x19, #24]
    15ec:	ldp	x9, x8, [x29, #-56]
    15f0:	sub	x8, x8, x9
    15f4:	lsr	x21, x8, #5
    15f8:	bl	0 <_ZN4llvm4errsEv>
    15fc:	mov	x8, x0
    1600:	ldr	x10, [x0, #16]
    1604:	ldr	x9, [x8, #24]!
    1608:	cmp	x10, x9
    160c:	cset	w10, eq  // eq = none
    1610:	cmp	w21, #0x2
    1614:	b.lt	168c <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xb44>  // b.tstop
    1618:	mov	w11, #0x1                   	// #1
    161c:	adrp	x19, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    1620:	mov	x20, xzr
    1624:	add	x19, x19, #0x0
    1628:	sub	x21, x11, w21, uxtw
    162c:	mov	w22, #0x20                  	// #32
    1630:	b	1678 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xb30>
    1634:	strb	w22, [x9]
    1638:	ldr	x9, [x8]
    163c:	add	x9, x9, #0x1
    1640:	str	x9, [x8]
    1644:	ldur	x8, [x29, #-56]
    1648:	add	x8, x8, x20
    164c:	ldp	x1, x2, [x8, #32]
    1650:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1654:	bl	0 <_ZN4llvm4errsEv>
    1658:	mov	x8, x0
    165c:	ldr	x10, [x0, #16]
    1660:	ldr	x9, [x8, #24]!
    1664:	add	x20, x20, #0x20
    1668:	cmp	x10, x9
    166c:	cset	w10, eq  // eq = none
    1670:	adds	x21, x21, #0x1
    1674:	b.cs	168c <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xb44>  // b.hs, b.nlast
    1678:	tbz	w10, #0, 1634 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xaec>
    167c:	mov	w2, #0x1                   	// #1
    1680:	mov	x1, x19
    1684:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1688:	b	1644 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xafc>
    168c:	cbz	w10, 16a4 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xb5c>
    1690:	adrp	x1, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    1694:	add	x1, x1, #0x0
    1698:	mov	w2, #0x1                   	// #1
    169c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    16a0:	b	16b8 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xb70>
    16a4:	mov	w10, #0xa                   	// #10
    16a8:	strb	w10, [x9]
    16ac:	ldr	x9, [x8]
    16b0:	add	x9, x9, #0x1
    16b4:	str	x9, [x8]
    16b8:	ldp	x22, x23, [x29, #-56]
    16bc:	sub	x8, x23, x22
    16c0:	asr	x20, x8, #5
    16c4:	lsr	x9, x20, #60
    16c8:	cbnz	x9, 18d0 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xd88>
    16cc:	cbz	x8, 17c4 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xc7c>
    16d0:	asr	x0, x8, #2
    16d4:	bl	0 <_Znwm>
    16d8:	ldp	x22, x23, [x29, #-56]
    16dc:	mov	x19, x0
    16e0:	add	x8, x0, x20, lsl #3
    16e4:	cmp	x22, x23
    16e8:	b.eq	17d0 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xc88>  // b.none
    16ec:	mov	x24, #0x7ffffffffffffff8    	// #9223372036854775800
    16f0:	mov	x25, #0xfffffffffffffff     	// #1152921504606846975
    16f4:	mov	x26, x19
    16f8:	b	1710 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xbc8>
    16fc:	str	x27, [x26]
    1700:	add	x22, x22, #0x20
    1704:	cmp	x23, x22
    1708:	add	x26, x26, #0x8
    170c:	b.eq	17d4 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xc8c>  // b.none
    1710:	ldr	x27, [x22]
    1714:	cmp	x26, x8
    1718:	b.ne	16fc <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xbb4>  // b.any
    171c:	sub	x20, x26, x19
    1720:	cmp	x20, x24
    1724:	b.eq	18b8 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xd70>  // b.none
    1728:	asr	x26, x20, #3
    172c:	cmp	x20, #0x0
    1730:	csinc	x8, x26, xzr, ne  // ne = any
    1734:	adds	x8, x8, x26
    1738:	lsr	x10, x8, #60
    173c:	cset	w9, cs  // cs = hs, nlast
    1740:	cmp	x10, #0x0
    1744:	cset	w10, ne  // ne = any
    1748:	orr	w9, w9, w10
    174c:	cmp	w9, #0x0
    1750:	csel	x28, x25, x8, ne  // ne = any
    1754:	cbz	x28, 17ac <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xc64>
    1758:	lsl	x0, x28, #3
    175c:	bl	0 <_Znwm>
    1760:	mov	x21, x0
    1764:	add	x26, x21, x26, lsl #3
    1768:	cmp	x20, #0x1
    176c:	str	x27, [x26]
    1770:	b.lt	1784 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xc3c>  // b.tstop
    1774:	mov	x0, x21
    1778:	mov	x1, x19
    177c:	mov	x2, x20
    1780:	bl	0 <memmove>
    1784:	cbz	x19, 1790 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xc48>
    1788:	mov	x0, x19
    178c:	bl	0 <_ZdlPv>
    1790:	add	x8, x21, x28, lsl #3
    1794:	mov	x19, x21
    1798:	add	x22, x22, #0x20
    179c:	cmp	x23, x22
    17a0:	add	x26, x26, #0x8
    17a4:	b.ne	1710 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xbc8>  // b.any
    17a8:	b	17d4 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xc8c>
    17ac:	mov	x21, xzr
    17b0:	add	x26, x21, x26, lsl #3
    17b4:	cmp	x20, #0x1
    17b8:	str	x27, [x26]
    17bc:	b.ge	1774 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xc2c>  // b.tcont
    17c0:	b	1784 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xc3c>
    17c4:	mov	x19, xzr
    17c8:	cmp	x22, x23
    17cc:	b.ne	16ec <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xba4>  // b.any
    17d0:	mov	x26, x19
    17d4:	sub	x8, x26, x19
    17d8:	adrp	x2, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    17dc:	lsr	x0, x8, #3
    17e0:	add	x2, x2, #0x0
    17e4:	mov	x1, x19
    17e8:	mov	x3, xzr
    17ec:	mov	x4, xzr
    17f0:	mov	x5, xzr
    17f4:	mov	w6, wzr
    17f8:	bl	0 <_ZN4llvm2cl23ParseCommandLineOptionsEiPKPKcNS_9StringRefEPNS_11raw_ostreamES2_b>
    17fc:	cbz	x19, 1808 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xcc0>
    1800:	mov	x0, x19
    1804:	bl	0 <_ZdlPv>
    1808:	ldr	x0, [sp, #112]
    180c:	add	x8, sp, #0x70
    1810:	add	x8, x8, #0x10
    1814:	cmp	x0, x8
    1818:	b.eq	1820 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xcd8>  // b.none
    181c:	bl	0 <free>
    1820:	ldp	x19, x20, [x29, #-56]
    1824:	cmp	x19, x20
    1828:	b.ne	1864 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xd1c>  // b.any
    182c:	cbz	x19, 1838 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xcf0>
    1830:	mov	x0, x19
    1834:	bl	0 <_ZdlPv>
    1838:	ldp	x20, x19, [sp, #368]
    183c:	ldp	x22, x21, [sp, #352]
    1840:	ldp	x24, x23, [sp, #336]
    1844:	ldp	x26, x25, [sp, #320]
    1848:	ldp	x28, x27, [sp, #304]
    184c:	ldp	x29, x30, [sp, #288]
    1850:	add	sp, sp, #0x180
    1854:	ret
    1858:	add	x19, x19, #0x10
    185c:	cmp	x19, x20
    1860:	b.eq	1878 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xd30>  // b.none
    1864:	ldr	x0, [x19], #16
    1868:	cmp	x0, x19
    186c:	b.eq	1858 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xd10>  // b.none
    1870:	bl	0 <_ZdlPv>
    1874:	b	1858 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xd10>
    1878:	ldur	x19, [x29, #-56]
    187c:	cbnz	x19, 1830 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xce8>
    1880:	b	1838 <_ZN4llvm34handleExecNameEncodedOptimizerOptsENS_9StringRefE+0xcf0>
    1884:	bl	0 <_ZN4llvm4errsEv>
    1888:	ldp	x1, x2, [x29, #-32]
    188c:	bl	0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    1890:	adrp	x1, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    1894:	add	x1, x1, #0x0
    1898:	bl	0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    189c:	ldp	x1, x2, [sp, #96]
    18a0:	bl	0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    18a4:	adrp	x1, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    18a8:	add	x1, x1, #0x0
    18ac:	bl	0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    18b0:	mov	w0, #0x1                   	// #1
    18b4:	bl	0 <exit>
    18b8:	adrp	x0, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    18bc:	add	x0, x0, #0x0
    18c0:	bl	0 <_ZSt20__throw_length_errorPKc>
    18c4:	adrp	x0, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    18c8:	add	x0, x0, #0x0
    18cc:	bl	0 <_ZSt19__throw_logic_errorPKc>
    18d0:	adrp	x0, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    18d4:	add	x0, x0, #0x0
    18d8:	bl	0 <_ZSt20__throw_length_errorPKc>

00000000000018dc <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E>:
    18dc:	sub	sp, sp, #0xc0
    18e0:	stp	x29, x30, [sp, #96]
    18e4:	stp	x28, x27, [sp, #112]
    18e8:	stp	x26, x25, [sp, #128]
    18ec:	stp	x24, x23, [sp, #144]
    18f0:	stp	x22, x21, [sp, #160]
    18f4:	stp	x20, x19, [sp, #176]
    18f8:	add	x29, sp, #0x60
    18fc:	mov	x20, x3
    1900:	mov	x19, x2
    1904:	stur	w0, [x29, #-4]
    1908:	stur	x1, [x29, #-16]
    190c:	bl	0 <_ZN4llvm4errsEv>
    1910:	ldp	x9, x8, [x0, #16]
    1914:	sub	x9, x9, x8
    1918:	cmp	x9, #0x2a
    191c:	b.hi	19a0 <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0xc4>  // b.pmore
    1920:	adrp	x1, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    1924:	add	x1, x1, #0x0
    1928:	mov	w2, #0x2b                  	// #43
    192c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1930:	ldp	x9, x8, [x0, #16]
    1934:	sub	x9, x9, x8
    1938:	cmp	x9, #0x21
    193c:	b.ls	19d0 <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0xf4>  // b.plast
    1940:	adrp	x9, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    1944:	add	x9, x9, #0x0
    1948:	ldp	q1, q0, [x9]
    194c:	mov	w9, #0xa2e                 	// #2606
    1950:	strh	w9, [x8, #32]
    1954:	stp	q1, q0, [x8]
    1958:	ldr	x8, [x0, #24]
    195c:	add	x8, x8, #0x22
    1960:	str	x8, [x0, #24]
    1964:	sub	x0, x29, #0x4
    1968:	sub	x1, x29, #0x10
    196c:	blr	x20
    1970:	cbz	w0, 19f0 <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x114>
    1974:	mov	w26, w0
    1978:	bl	0 <_ZN4llvm4errsEv>
    197c:	ldp	x9, x8, [x0, #16]
    1980:	sub	x9, x9, x8
    1984:	cmp	x9, #0x15
    1988:	b.hi	1dd4 <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x4f8>  // b.pmore
    198c:	adrp	x1, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    1990:	add	x1, x1, #0x0
    1994:	mov	w2, #0x16                  	// #22
    1998:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    199c:	b	1e00 <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x524>
    19a0:	adrp	x9, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    19a4:	add	x9, x9, #0x0
    19a8:	ldur	q0, [x9, #27]
    19ac:	ldp	q2, q1, [x9]
    19b0:	stur	q0, [x8, #27]
    19b4:	stp	q2, q1, [x8]
    19b8:	ldp	x9, x8, [x0, #16]
    19bc:	add	x8, x8, #0x2b
    19c0:	str	x8, [x0, #24]
    19c4:	sub	x9, x9, x8
    19c8:	cmp	x9, #0x21
    19cc:	b.hi	1940 <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x64>  // b.pmore
    19d0:	adrp	x1, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    19d4:	add	x1, x1, #0x0
    19d8:	mov	w2, #0x22                  	// #34
    19dc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    19e0:	sub	x0, x29, #0x4
    19e4:	sub	x1, x29, #0x10
    19e8:	blr	x20
    19ec:	cbnz	w0, 1974 <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x98>
    19f0:	ldur	w21, [x29, #-4]
    19f4:	cmp	w21, #0x2
    19f8:	b.lt	1dfc <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x520>  // b.tstop
    19fc:	add	x8, sp, #0x8
    1a00:	adrp	x23, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    1a04:	mov	w26, wzr
    1a08:	mov	w22, #0x1                   	// #1
    1a0c:	mov	w24, #0x105                 	// #261
    1a10:	sub	x25, x29, #0x20
    1a14:	add	x23, x23, #0x0
    1a18:	add	x20, x8, #0x10
    1a1c:	b	1a38 <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x15c>
    1a20:	str	xzr, [sp, #40]
    1a24:	cbnz	w21, 1e00 <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x524>
    1a28:	ldur	w21, [x29, #-4]
    1a2c:	add	x22, x22, #0x1
    1a30:	cmp	x22, w21, sxtw
    1a34:	b.ge	1dfc <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x520>  // b.tcont
    1a38:	ldur	x8, [x29, #-16]
    1a3c:	ldr	x27, [x8, x22, lsl #3]
    1a40:	stur	x27, [x29, #-32]
    1a44:	cbz	x27, 1ac0 <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x1e4>
    1a48:	mov	x0, x27
    1a4c:	bl	0 <strlen>
    1a50:	stur	x0, [x29, #-24]
    1a54:	cbz	x0, 1ac4 <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x1e8>
    1a58:	ldrb	w8, [x27]
    1a5c:	cmp	w8, #0x2d
    1a60:	b.ne	1ac4 <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x1e8>  // b.any
    1a64:	cmp	x0, #0x18
    1a68:	b.ne	1a2c <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x150>  // b.any
    1a6c:	ldp	x8, x9, [x27]
    1a70:	mov	x11, #0x692d                	// #26925
    1a74:	movk	x11, #0x6e67, lsl #16
    1a78:	movk	x11, #0x726f, lsl #32
    1a7c:	movk	x11, #0x5f65, lsl #48
    1a80:	eor	x8, x8, x11
    1a84:	mov	x11, #0x6572                	// #25970
    1a88:	movk	x11, #0x616d, lsl #16
    1a8c:	movk	x11, #0x6e69, lsl #32
    1a90:	movk	x11, #0x6e69, lsl #48
    1a94:	ldr	x10, [x27, #16]
    1a98:	eor	x9, x9, x11
    1a9c:	mov	x11, #0x5f67                	// #24423
    1aa0:	movk	x11, #0x7261, lsl #16
    1aa4:	movk	x11, #0x7367, lsl #32
    1aa8:	movk	x11, #0x313d, lsl #48
    1aac:	eor	x10, x10, x11
    1ab0:	orr	x8, x8, x9
    1ab4:	orr	x8, x8, x10
    1ab8:	cbnz	x8, 1a2c <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x150>
    1abc:	b	1dfc <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x520>
    1ac0:	stur	xzr, [x29, #-24]
    1ac4:	add	x8, sp, #0x28
    1ac8:	add	x0, sp, #0x8
    1acc:	mov	x1, #0xffffffffffffffff    	// #-1
    1ad0:	mov	w2, wzr
    1ad4:	mov	w3, wzr
    1ad8:	strh	w24, [sp, #24]
    1adc:	stp	x25, xzr, [sp, #8]
    1ae0:	bl	0 <_ZN4llvm12MemoryBuffer7getFileERKNS_5TwineElbb>
    1ae4:	ldrb	w8, [sp, #56]
    1ae8:	tbnz	w8, #0, 1b2c <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x250>
    1aec:	ldr	x27, [sp, #40]
    1af0:	str	xzr, [sp, #40]
    1af4:	bl	0 <_ZN4llvm4errsEv>
    1af8:	ldp	x9, x8, [x0, #16]
    1afc:	mov	x28, x0
    1b00:	sub	x9, x9, x8
    1b04:	cmp	x9, #0x8
    1b08:	b.hi	1b6c <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x290>  // b.pmore
    1b0c:	adrp	x1, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    1b10:	mov	w2, #0x9                   	// #9
    1b14:	mov	x0, x28
    1b18:	add	x1, x1, #0x0
    1b1c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1b20:	mov	x28, x0
    1b24:	ldr	x0, [x0, #24]
    1b28:	b	1b90 <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x2b4>
    1b2c:	ldr	w26, [sp, #40]
    1b30:	cbz	w26, 1e24 <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x548>
    1b34:	ldr	x27, [sp, #48]
    1b38:	bl	0 <_ZN4llvm4errsEv>
    1b3c:	ldp	x9, x8, [x0, #16]
    1b40:	mov	x28, x0
    1b44:	sub	x9, x9, x8
    1b48:	cmp	x9, #0x13
    1b4c:	b.hi	1c94 <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x3b8>  // b.pmore
    1b50:	mov	w2, #0x14                  	// #20
    1b54:	mov	x0, x28
    1b58:	mov	x1, x23
    1b5c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1b60:	mov	x28, x0
    1b64:	ldr	x0, [x0, #24]
    1b68:	b	1cb4 <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x3d8>
    1b6c:	adrp	x9, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    1b70:	add	x9, x9, #0x0
    1b74:	ldr	x9, [x9]
    1b78:	mov	w10, #0x20                  	// #32
    1b7c:	strb	w10, [x8, #8]
    1b80:	str	x9, [x8]
    1b84:	ldr	x8, [x28, #24]
    1b88:	add	x0, x8, #0x9
    1b8c:	str	x0, [x28, #24]
    1b90:	ldr	x8, [x28, #16]
    1b94:	ldp	x1, x21, [x29, #-32]
    1b98:	sub	x8, x8, x0
    1b9c:	cmp	x21, x8
    1ba0:	b.ls	1bbc <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x2e0>  // b.plast
    1ba4:	mov	x0, x28
    1ba8:	mov	x2, x21
    1bac:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1bb0:	mov	x28, x0
    1bb4:	ldr	x0, [x0, #24]
    1bb8:	b	1bd4 <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x2f8>
    1bbc:	cbz	x21, 1bd4 <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x2f8>
    1bc0:	mov	x2, x21
    1bc4:	bl	0 <memcpy>
    1bc8:	ldr	x8, [x28, #24]
    1bcc:	add	x0, x8, x21
    1bd0:	str	x0, [x28, #24]
    1bd4:	ldr	x8, [x28, #16]
    1bd8:	sub	x8, x8, x0
    1bdc:	cmp	x8, #0x1
    1be0:	b.hi	1c00 <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x324>  // b.pmore
    1be4:	adrp	x1, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    1be8:	mov	w2, #0x2                   	// #2
    1bec:	mov	x0, x28
    1bf0:	add	x1, x1, #0x0
    1bf4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1bf8:	mov	x28, x0
    1bfc:	b	1c14 <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x338>
    1c00:	mov	w8, #0x2820                	// #10272
    1c04:	strh	w8, [x0]
    1c08:	ldr	x8, [x28, #24]
    1c0c:	add	x8, x8, #0x2
    1c10:	str	x8, [x28, #24]
    1c14:	ldp	x9, x8, [x27, #8]
    1c18:	mov	x0, x28
    1c1c:	sub	x1, x8, x9
    1c20:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1c24:	ldp	x9, x8, [x0, #16]
    1c28:	sub	x9, x9, x8
    1c2c:	cmp	x9, #0x7
    1c30:	b.hi	1c48 <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x36c>  // b.pmore
    1c34:	adrp	x1, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    1c38:	mov	w2, #0x8                   	// #8
    1c3c:	add	x1, x1, #0x0
    1c40:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1c44:	b	1c68 <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x38c>
    1c48:	mov	x9, #0x6220                	// #25120
    1c4c:	movk	x9, #0x7479, lsl #16
    1c50:	movk	x9, #0x7365, lsl #32
    1c54:	movk	x9, #0xa29, lsl #48
    1c58:	str	x9, [x8]
    1c5c:	ldr	x8, [x0, #24]
    1c60:	add	x8, x8, #0x8
    1c64:	str	x8, [x0, #24]
    1c68:	ldp	x0, x8, [x27, #8]
    1c6c:	sub	x1, x8, x0
    1c70:	blr	x19
    1c74:	ldr	x8, [x27]
    1c78:	mov	x0, x27
    1c7c:	ldr	x8, [x8, #8]
    1c80:	blr	x8
    1c84:	mov	w21, wzr
    1c88:	ldrb	w8, [sp, #56]
    1c8c:	tbnz	w8, #0, 1a24 <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x148>
    1c90:	b	1dbc <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x4e0>
    1c94:	ldr	q0, [x23]
    1c98:	mov	w9, #0x656c                	// #25964
    1c9c:	movk	w9, #0x203a, lsl #16
    1ca0:	str	w9, [x8, #16]
    1ca4:	str	q0, [x8]
    1ca8:	ldr	x8, [x28, #24]
    1cac:	add	x0, x8, #0x14
    1cb0:	str	x0, [x28, #24]
    1cb4:	ldr	x8, [x28, #16]
    1cb8:	ldp	x1, x21, [x29, #-32]
    1cbc:	sub	x8, x8, x0
    1cc0:	cmp	x21, x8
    1cc4:	b.ls	1ce0 <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x404>  // b.plast
    1cc8:	mov	x0, x28
    1ccc:	mov	x2, x21
    1cd0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1cd4:	mov	x28, x0
    1cd8:	ldr	x0, [x0, #24]
    1cdc:	b	1cf8 <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x41c>
    1ce0:	cbz	x21, 1cf8 <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x41c>
    1ce4:	mov	x2, x21
    1ce8:	bl	0 <memcpy>
    1cec:	ldr	x8, [x28, #24]
    1cf0:	add	x0, x8, x21
    1cf4:	str	x0, [x28, #24]
    1cf8:	ldr	x8, [x28, #16]
    1cfc:	sub	x8, x8, x0
    1d00:	cmp	x8, #0x1
    1d04:	b.hi	1d24 <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x448>  // b.pmore
    1d08:	adrp	x1, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    1d0c:	mov	w2, #0x2                   	// #2
    1d10:	mov	x0, x28
    1d14:	add	x1, x1, #0x0
    1d18:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1d1c:	mov	x28, x0
    1d20:	b	1d38 <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x45c>
    1d24:	mov	w8, #0x203a                	// #8250
    1d28:	strh	w8, [x0]
    1d2c:	ldr	x8, [x28, #24]
    1d30:	add	x8, x8, #0x2
    1d34:	str	x8, [x28, #24]
    1d38:	ldr	x8, [x27]
    1d3c:	mov	x0, x27
    1d40:	mov	w1, w26
    1d44:	ldr	x9, [x8, #32]
    1d48:	add	x8, sp, #0x8
    1d4c:	blr	x9
    1d50:	ldp	x1, x2, [sp, #8]
    1d54:	mov	x0, x28
    1d58:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1d5c:	ldp	x9, x8, [x0, #16]
    1d60:	cmp	x9, x8
    1d64:	b.ne	1d88 <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x4ac>  // b.any
    1d68:	adrp	x1, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    1d6c:	mov	w2, #0x1                   	// #1
    1d70:	add	x1, x1, #0x0
    1d74:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1d78:	ldr	x0, [sp, #8]
    1d7c:	cmp	x0, x20
    1d80:	b.ne	1da8 <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x4cc>  // b.any
    1d84:	b	1dac <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x4d0>
    1d88:	mov	w9, #0xa                   	// #10
    1d8c:	strb	w9, [x8]
    1d90:	ldr	x8, [x0, #24]
    1d94:	add	x8, x8, #0x1
    1d98:	str	x8, [x0, #24]
    1d9c:	ldr	x0, [sp, #8]
    1da0:	cmp	x0, x20
    1da4:	b.eq	1dac <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x4d0>  // b.none
    1da8:	bl	0 <_ZdlPv>
    1dac:	mov	w26, #0x1                   	// #1
    1db0:	mov	w21, #0x1                   	// #1
    1db4:	ldrb	w8, [sp, #56]
    1db8:	tbnz	w8, #0, 1a24 <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x148>
    1dbc:	ldr	x0, [sp, #40]
    1dc0:	cbz	x0, 1a20 <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x144>
    1dc4:	ldr	x8, [x0]
    1dc8:	ldr	x8, [x8, #8]
    1dcc:	blr	x8
    1dd0:	b	1a20 <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x144>
    1dd4:	adrp	x9, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    1dd8:	add	x9, x9, #0x0
    1ddc:	ldur	x10, [x9, #14]
    1de0:	ldr	q0, [x9]
    1de4:	stur	x10, [x8, #14]
    1de8:	str	q0, [x8]
    1dec:	ldr	x8, [x0, #24]
    1df0:	add	x8, x8, #0x16
    1df4:	str	x8, [x0, #24]
    1df8:	b	1e00 <_ZN4llvm17runFuzzerOnInputsEiPPcPFiPKhmEPFiPiPS1_E+0x524>
    1dfc:	mov	w26, wzr
    1e00:	mov	w0, w26
    1e04:	ldp	x20, x19, [sp, #176]
    1e08:	ldp	x22, x21, [sp, #160]
    1e0c:	ldp	x24, x23, [sp, #144]
    1e10:	ldp	x26, x25, [sp, #128]
    1e14:	ldp	x28, x27, [sp, #112]
    1e18:	ldp	x29, x30, [sp, #96]
    1e1c:	add	sp, sp, #0xc0
    1e20:	ret
    1e24:	adrp	x0, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    1e28:	adrp	x1, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    1e2c:	adrp	x3, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    1e30:	add	x0, x0, #0x0
    1e34:	add	x1, x1, #0x0
    1e38:	add	x3, x3, #0x0
    1e3c:	mov	w2, #0xf3                  	// #243
    1e40:	bl	0 <__assert_fail>

0000000000001e44 <_ZN4llvm11parseModuleEPKhmRNS_11LLVMContextE>:
    1e44:	stp	x29, x30, [sp, #-80]!
    1e48:	str	x28, [sp, #16]
    1e4c:	stp	x24, x23, [sp, #32]
    1e50:	stp	x22, x21, [sp, #48]
    1e54:	stp	x20, x19, [sp, #64]
    1e58:	mov	x29, sp
    1e5c:	sub	sp, sp, #0x1d0
    1e60:	mov	x20, x2
    1e64:	cmp	x1, #0x1
    1e68:	mov	x19, x8
    1e6c:	b.hi	1e98 <_ZN4llvm11parseModuleEPKhmRNS_11LLVMContextE+0x54>  // b.pmore
    1e70:	mov	w0, #0x2c8                 	// #712
    1e74:	bl	0 <_Znwm>
    1e78:	adrp	x1, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    1e7c:	add	x1, x1, #0x0
    1e80:	mov	w2, #0x1                   	// #1
    1e84:	mov	x3, x20
    1e88:	mov	x21, x0
    1e8c:	bl	0 <_ZN4llvm6ModuleC1ENS_9StringRefERNS_11LLVMContextE>
    1e90:	str	x21, [x19]
    1e94:	b	20e4 <_ZN4llvm11parseModuleEPKhmRNS_11LLVMContextE+0x2a0>
    1e98:	adrp	x2, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    1e9c:	add	x2, x2, #0x0
    1ea0:	add	x8, x29, #0x18
    1ea4:	mov	w3, #0xc                   	// #12
    1ea8:	mov	w4, wzr
    1eac:	bl	0 <_ZN4llvm12MemoryBuffer12getMemBufferENS_9StringRefES1_b>
    1eb0:	adrp	x8, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    1eb4:	ldr	d0, [x8]
    1eb8:	ldr	x0, [x29, #24]
    1ebc:	add	x24, sp, #0x68
    1ec0:	add	x8, x24, #0xa8
    1ec4:	add	x21, x24, #0x20
    1ec8:	add	x22, x24, #0x50
    1ecc:	add	x23, x24, #0x70
    1ed0:	stp	xzr, x8, [sp, #248]
    1ed4:	add	x8, sp, #0x38
    1ed8:	stp	xzr, xzr, [sp, #104]
    1edc:	strb	wzr, [sp, #136]
    1ee0:	str	xzr, [sp, #152]
    1ee4:	str	wzr, [sp, #160]
    1ee8:	strb	wzr, [sp, #184]
    1eec:	strb	wzr, [sp, #216]
    1ef0:	stp	x21, xzr, [sp, #120]
    1ef4:	stp	x22, xzr, [sp, #168]
    1ef8:	stp	x23, xzr, [sp, #200]
    1efc:	stp	xzr, xzr, [sp, #232]
    1f00:	str	d0, [sp, #264]
    1f04:	bl	0 <_ZNK4llvm12MemoryBuffer15getMemBufferRefEv>
    1f08:	add	x8, sp, #0x58
    1f0c:	add	x0, sp, #0x38
    1f10:	mov	x1, x20
    1f14:	bl	0 <_ZN4llvm16parseBitcodeFileENS_15MemoryBufferRefERNS_11LLVMContextE>
    1f18:	ldrb	w9, [sp, #96]
    1f1c:	and	w8, w9, #0xfffffffd
    1f20:	strb	w8, [sp, #96]
    1f24:	tbnz	w9, #0, 1f30 <_ZN4llvm11parseModuleEPKhmRNS_11LLVMContextE+0xec>
    1f28:	mov	w10, #0x1                   	// #1
    1f2c:	b	1f3c <_ZN4llvm11parseModuleEPKhmRNS_11LLVMContextE+0xf8>
    1f30:	ldr	x10, [sp, #88]
    1f34:	str	xzr, [sp, #88]
    1f38:	orr	x10, x10, #0x1
    1f3c:	tst	x10, #0xfffffffffffffffe
    1f40:	and	x11, x10, #0xfffffffffffffffe
    1f44:	cset	w10, ne  // ne = any
    1f48:	orr	x10, x11, x10
    1f4c:	str	x10, [sp, #48]
    1f50:	cbz	x11, 1fa4 <_ZN4llvm11parseModuleEPKhmRNS_11LLVMContextE+0x160>
    1f54:	bl	0 <_ZN4llvm4errsEv>
    1f58:	ldr	x8, [sp, #48]
    1f5c:	mov	x20, x0
    1f60:	add	x0, sp, #0x8
    1f64:	str	xzr, [sp, #48]
    1f68:	orr	x8, x8, #0x1
    1f6c:	str	x8, [sp, #8]
    1f70:	add	x8, sp, #0x10
    1f74:	bl	0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    1f78:	ldp	x1, x2, [sp, #16]
    1f7c:	mov	x0, x20
    1f80:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1f84:	ldp	x9, x8, [x0, #16]
    1f88:	cmp	x9, x8
    1f8c:	b.ne	1fbc <_ZN4llvm11parseModuleEPKhmRNS_11LLVMContextE+0x178>  // b.any
    1f90:	adrp	x1, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    1f94:	add	x1, x1, #0x0
    1f98:	mov	w2, #0x1                   	// #1
    1f9c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1fa0:	b	1fd0 <_ZN4llvm11parseModuleEPKhmRNS_11LLVMContextE+0x18c>
    1fa4:	cbnz	x10, 2100 <_ZN4llvm11parseModuleEPKhmRNS_11LLVMContextE+0x2bc>
    1fa8:	tbnz	w9, #0, 2118 <_ZN4llvm11parseModuleEPKhmRNS_11LLVMContextE+0x2d4>
    1fac:	ldr	x9, [sp, #88]
    1fb0:	str	xzr, [sp, #88]
    1fb4:	str	x9, [x19]
    1fb8:	b	2000 <_ZN4llvm11parseModuleEPKhmRNS_11LLVMContextE+0x1bc>
    1fbc:	mov	w9, #0xa                   	// #10
    1fc0:	strb	w9, [x8]
    1fc4:	ldr	x8, [x0, #24]
    1fc8:	add	x8, x8, #0x1
    1fcc:	str	x8, [x0, #24]
    1fd0:	ldr	x0, [sp, #16]
    1fd4:	add	x8, sp, #0x10
    1fd8:	add	x8, x8, #0x10
    1fdc:	cmp	x0, x8
    1fe0:	b.eq	1fe8 <_ZN4llvm11parseModuleEPKhmRNS_11LLVMContextE+0x1a4>  // b.none
    1fe4:	bl	0 <_ZdlPv>
    1fe8:	ldr	x8, [sp, #8]
    1fec:	cbnz	x8, 2110 <_ZN4llvm11parseModuleEPKhmRNS_11LLVMContextE+0x2cc>
    1ff0:	ldr	x8, [sp, #48]
    1ff4:	str	xzr, [x19]
    1ff8:	cbnz	x8, 2100 <_ZN4llvm11parseModuleEPKhmRNS_11LLVMContextE+0x2bc>
    1ffc:	ldrb	w8, [sp, #96]
    2000:	tbnz	w8, #1, 2108 <_ZN4llvm11parseModuleEPKhmRNS_11LLVMContextE+0x2c4>
    2004:	tbnz	w8, #0, 2024 <_ZN4llvm11parseModuleEPKhmRNS_11LLVMContextE+0x1e0>
    2008:	ldr	x19, [sp, #88]
    200c:	cbz	x19, 2038 <_ZN4llvm11parseModuleEPKhmRNS_11LLVMContextE+0x1f4>
    2010:	mov	x0, x19
    2014:	bl	0 <_ZN4llvm6ModuleD1Ev>
    2018:	mov	x0, x19
    201c:	bl	0 <_ZdlPv>
    2020:	b	2038 <_ZN4llvm11parseModuleEPKhmRNS_11LLVMContextE+0x1f4>
    2024:	ldr	x0, [sp, #88]
    2028:	cbz	x0, 2038 <_ZN4llvm11parseModuleEPKhmRNS_11LLVMContextE+0x1f4>
    202c:	ldr	x8, [x0]
    2030:	ldr	x8, [x8, #8]
    2034:	blr	x8
    2038:	ldr	w8, [sp, #264]
    203c:	ldr	x19, [sp, #256]
    2040:	add	x20, x24, #0x98
    2044:	str	xzr, [sp, #88]
    2048:	cbz	w8, 2080 <_ZN4llvm11parseModuleEPKhmRNS_11LLVMContextE+0x23c>
    204c:	add	x8, x8, x8, lsl #1
    2050:	lsl	x24, x8, #4
    2054:	b	2060 <_ZN4llvm11parseModuleEPKhmRNS_11LLVMContextE+0x21c>
    2058:	subs	x24, x24, #0x30
    205c:	b.eq	207c <_ZN4llvm11parseModuleEPKhmRNS_11LLVMContextE+0x238>  // b.none
    2060:	add	x8, x19, x24
    2064:	ldur	x0, [x8, #-32]
    2068:	sub	x8, x8, #0x10
    206c:	cmp	x8, x0
    2070:	b.eq	2058 <_ZN4llvm11parseModuleEPKhmRNS_11LLVMContextE+0x214>  // b.none
    2074:	bl	0 <_ZdlPv>
    2078:	b	2058 <_ZN4llvm11parseModuleEPKhmRNS_11LLVMContextE+0x214>
    207c:	ldr	x19, [sp, #256]
    2080:	add	x8, x20, #0x10
    2084:	cmp	x19, x8
    2088:	b.eq	2094 <_ZN4llvm11parseModuleEPKhmRNS_11LLVMContextE+0x250>  // b.none
    208c:	mov	x0, x19
    2090:	bl	0 <free>
    2094:	ldr	x0, [sp, #232]
    2098:	cbz	x0, 20a0 <_ZN4llvm11parseModuleEPKhmRNS_11LLVMContextE+0x25c>
    209c:	bl	0 <_ZdlPv>
    20a0:	ldr	x0, [sp, #200]
    20a4:	cmp	x0, x23
    20a8:	b.eq	20b0 <_ZN4llvm11parseModuleEPKhmRNS_11LLVMContextE+0x26c>  // b.none
    20ac:	bl	0 <_ZdlPv>
    20b0:	ldr	x0, [sp, #168]
    20b4:	cmp	x0, x22
    20b8:	b.eq	20c0 <_ZN4llvm11parseModuleEPKhmRNS_11LLVMContextE+0x27c>  // b.none
    20bc:	bl	0 <_ZdlPv>
    20c0:	ldr	x0, [sp, #120]
    20c4:	cmp	x0, x21
    20c8:	b.eq	20d0 <_ZN4llvm11parseModuleEPKhmRNS_11LLVMContextE+0x28c>  // b.none
    20cc:	bl	0 <_ZdlPv>
    20d0:	ldr	x0, [x29, #24]
    20d4:	cbz	x0, 20e4 <_ZN4llvm11parseModuleEPKhmRNS_11LLVMContextE+0x2a0>
    20d8:	ldr	x8, [x0]
    20dc:	ldr	x8, [x8, #8]
    20e0:	blr	x8
    20e4:	add	sp, sp, #0x1d0
    20e8:	ldp	x20, x19, [sp, #64]
    20ec:	ldp	x22, x21, [sp, #48]
    20f0:	ldp	x24, x23, [sp, #32]
    20f4:	ldr	x28, [sp, #16]
    20f8:	ldp	x29, x30, [sp], #80
    20fc:	ret
    2100:	add	x0, sp, #0x30
    2104:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    2108:	add	x0, sp, #0x58
    210c:	bl	0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    2110:	add	x0, sp, #0x8
    2114:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    2118:	adrp	x0, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    211c:	adrp	x1, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    2120:	adrp	x3, 0 <_ZN4llvm17parseFuzzerCLOptsEiPPc>
    2124:	add	x0, x0, #0x0
    2128:	add	x1, x1, #0x0
    212c:	add	x3, x3, #0x0
    2130:	mov	w2, #0x272                 	// #626
    2134:	bl	0 <__assert_fail>

0000000000002138 <_ZN4llvm11writeModuleERKNS_6ModuleEPhm>:
    2138:	sub	sp, sp, #0x90
    213c:	stp	x29, x30, [sp, #80]
    2140:	str	x23, [sp, #96]
    2144:	stp	x22, x21, [sp, #112]
    2148:	stp	x20, x19, [sp, #128]
    214c:	add	x29, sp, #0x50
    2150:	sturb	wzr, [x29, #-16]
    2154:	stp	xzr, xzr, [sp, #16]
    2158:	adrp	x10, 0 <_ZTVN4llvm18raw_string_ostreamE>
    215c:	ldr	x10, [x10]
    2160:	sub	x8, x29, #0x20
    2164:	mov	w9, #0x1                   	// #1
    2168:	mov	x22, x2
    216c:	mov	x19, x1
    2170:	str	w9, [sp, #32]
    2174:	add	x23, x8, #0x10
    2178:	add	x9, x10, #0x10
    217c:	mov	x1, sp
    2180:	mov	w2, wzr
    2184:	mov	x3, xzr
    2188:	mov	w4, wzr
    218c:	mov	x5, xzr
    2190:	stp	x23, xzr, [x29, #-32]
    2194:	stp	x9, xzr, [sp]
    2198:	str	x8, [sp, #40]
    219c:	bl	0 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE>
    21a0:	mov	x0, sp
    21a4:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
    21a8:	ldp	x20, x21, [x29, #-32]
    21ac:	cmp	x21, x22
    21b0:	mov	x22, xzr
    21b4:	b.hi	21cc <_ZN4llvm11writeModuleERKNS_6ModuleEPhm+0x94>  // b.pmore
    21b8:	mov	x0, x19
    21bc:	mov	x1, x20
    21c0:	mov	x2, x21
    21c4:	bl	0 <memcpy>
    21c8:	mov	x22, x21
    21cc:	cmp	x20, x23
    21d0:	b.eq	21dc <_ZN4llvm11writeModuleERKNS_6ModuleEPhm+0xa4>  // b.none
    21d4:	mov	x0, x20
    21d8:	bl	0 <_ZdlPv>
    21dc:	mov	x0, x22
    21e0:	ldp	x20, x19, [sp, #128]
    21e4:	ldp	x22, x21, [sp, #112]
    21e8:	ldr	x23, [sp, #96]
    21ec:	ldp	x29, x30, [sp, #80]
    21f0:	add	sp, sp, #0x90
    21f4:	ret

00000000000021f8 <_ZN4llvm14parseAndVerifyEPKhmRNS_11LLVMContextE>:
    21f8:	sub	sp, sp, #0x30
    21fc:	stp	x29, x30, [sp, #16]
    2200:	stp	x20, x19, [sp, #32]
    2204:	add	x29, sp, #0x10
    2208:	mov	x19, x8
    220c:	add	x8, sp, #0x8
    2210:	bl	1e44 <_ZN4llvm11parseModuleEPKhmRNS_11LLVMContextE>
    2214:	ldr	x20, [sp, #8]
    2218:	cbz	x20, 2258 <_ZN4llvm14parseAndVerifyEPKhmRNS_11LLVMContextE+0x60>
    221c:	bl	0 <_ZN4llvm4errsEv>
    2220:	mov	x1, x0
    2224:	mov	x0, x20
    2228:	mov	x2, xzr
    222c:	bl	0 <_ZN4llvm12verifyModuleERKNS_6ModuleEPNS_11raw_ostreamEPb>
    2230:	tbz	w0, #0, 226c <_ZN4llvm14parseAndVerifyEPKhmRNS_11LLVMContextE+0x74>
    2234:	mov	x0, x20
    2238:	str	xzr, [x19]
    223c:	bl	0 <_ZN4llvm6ModuleD1Ev>
    2240:	mov	x0, x20
    2244:	bl	0 <_ZdlPv>
    2248:	ldp	x20, x19, [sp, #32]
    224c:	ldp	x29, x30, [sp, #16]
    2250:	add	sp, sp, #0x30
    2254:	ret
    2258:	str	xzr, [x19]
    225c:	ldp	x20, x19, [sp, #32]
    2260:	ldp	x29, x30, [sp, #16]
    2264:	add	sp, sp, #0x30
    2268:	ret
    226c:	str	xzr, [sp, #8]
    2270:	str	x20, [x19]
    2274:	ldp	x20, x19, [sp, #32]
    2278:	ldp	x29, x30, [sp, #16]
    227c:	add	sp, sp, #0x30
    2280:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsENS_9StringRefE:

0000000000000000 <_ZN4llvm11raw_ostreamlsENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x20, x0
  10:	ldp	x8, x0, [x0, #16]
  14:	mov	x19, x2
  18:	sub	x8, x8, x0
  1c:	cmp	x2, x8
  20:	b.ls	38 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x38>  // b.plast
  24:	mov	x0, x20
  28:	mov	x2, x19
  2c:	ldp	x20, x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  38:	cbz	x19, 50 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x50>
  3c:	mov	x2, x19
  40:	bl	0 <memcpy>
  44:	ldr	x8, [x20, #24]
  48:	add	x8, x8, x19
  4c:	str	x8, [x20, #24]
  50:	mov	x0, x20
  54:	ldp	x20, x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cbz	x1, 54 <_ZN4llvm11raw_ostreamlsEPKc+0x54>
  1c:	mov	x0, x20
  20:	bl	0 <strlen>
  24:	mov	x21, x0
  28:	ldp	x8, x0, [x19, #16]
  2c:	sub	x8, x8, x0
  30:	cmp	x21, x8
  34:	b.ls	68 <_ZN4llvm11raw_ostreamlsEPKc+0x68>  // b.plast
  38:	mov	x0, x19
  3c:	mov	x1, x20
  40:	mov	x2, x21
  44:	ldp	x20, x19, [sp, #32]
  48:	ldr	x21, [sp, #16]
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  54:	mov	x21, xzr
  58:	ldp	x8, x0, [x19, #16]
  5c:	sub	x8, x8, x0
  60:	cmp	x21, x8
  64:	b.hi	38 <_ZN4llvm11raw_ostreamlsEPKc+0x38>  // b.pmore
  68:	cbz	x21, 84 <_ZN4llvm11raw_ostreamlsEPKc+0x84>
  6c:	mov	x1, x20
  70:	mov	x2, x21
  74:	bl	0 <memcpy>
  78:	ldr	x8, [x19, #24]
  7c:	add	x8, x8, x21
  80:	str	x8, [x19, #24]
  84:	mov	x0, x19
  88:	ldp	x20, x19, [sp, #32]
  8c:	ldr	x21, [sp, #16]
  90:	ldp	x29, x30, [sp], #48
  94:	ret

Disassembly of section .text._ZN4llvm8toStringB5cxx11ENS_5ErrorE:

0000000000000000 <_ZN4llvm8toStringB5cxx11ENS_5ErrorE>:
   0:	sub	sp, sp, #0xf0
   4:	stp	x29, x30, [sp, #176]
   8:	str	x23, [sp, #192]
   c:	stp	x22, x21, [sp, #208]
  10:	stp	x20, x19, [sp, #224]
  14:	add	x29, sp, #0xb0
  18:	mov	x19, x8
  1c:	adrp	x8, 0 <_ZN4llvm8toStringB5cxx11ENS_5ErrorE>
  20:	ldr	d0, [x8]
  24:	add	x8, sp, #0x8
  28:	add	x9, x8, #0x10
  2c:	stp	x8, x9, [sp]
  30:	str	d0, [sp, #16]
  34:	ldr	x9, [x0]
  38:	str	xzr, [x0]
  3c:	add	x8, x29, #0x18
  40:	add	x0, sp, #0x58
  44:	orr	x9, x9, #0x1
  48:	mov	x1, sp
  4c:	str	x9, [sp, #88]
  50:	bl	0 <_ZN4llvm8toStringB5cxx11ENS_5ErrorE>
  54:	ldr	x8, [x29, #24]
  58:	tst	x8, #0xfffffffffffffffe
  5c:	and	x9, x8, #0xfffffffffffffffe
  60:	cset	w8, ne  // ne = any
  64:	orr	x8, x9, x8
  68:	str	x8, [x29, #24]
  6c:	cbnz	x9, 18c <_ZN4llvm8toStringB5cxx11ENS_5ErrorE+0x18c>
  70:	cbnz	x8, 1fc <_ZN4llvm8toStringB5cxx11ENS_5ErrorE+0x1fc>
  74:	ldr	x8, [sp, #88]
  78:	cbnz	x8, 204 <_ZN4llvm8toStringB5cxx11ENS_5ErrorE+0x204>
  7c:	ldr	w22, [sp, #16]
  80:	ldr	x20, [sp, #8]
  84:	mov	x8, x19
  88:	strb	wzr, [x8, #16]!
  8c:	stp	x8, xzr, [x19]
  90:	cbz	w22, 114 <_ZN4llvm8toStringB5cxx11ENS_5ErrorE+0x114>
  94:	add	x21, x20, x22, lsl #5
  98:	ldr	x8, [x20, #8]
  9c:	sub	x9, x21, x20
  a0:	sub	x9, x9, #0x20
  a4:	lsr	x9, x9, #5
  a8:	add	x9, x9, #0x1
  ac:	madd	x8, x8, x9, x22
  b0:	sub	x1, x8, #0x1
  b4:	mov	x0, x19
  b8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
  bc:	ldp	x1, x2, [x20]
  c0:	mov	x0, x19
  c4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
  c8:	cmp	w22, #0x1
  cc:	b.eq	114 <_ZN4llvm8toStringB5cxx11ENS_5ErrorE+0x114>  // b.none
  d0:	add	x22, x20, #0x20
  d4:	adrp	x20, 0 <_ZN4llvm8toStringB5cxx11ENS_5ErrorE>
  d8:	mov	x23, #0x3fffffffffffffff    	// #4611686018427387903
  dc:	add	x20, x20, #0x0
  e0:	ldr	x8, [x19, #8]
  e4:	cmp	x8, x23
  e8:	b.eq	180 <_ZN4llvm8toStringB5cxx11ENS_5ErrorE+0x180>  // b.none
  ec:	mov	w2, #0x1                   	// #1
  f0:	mov	x0, x19
  f4:	mov	x1, x20
  f8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
  fc:	ldp	x1, x2, [x22]
 100:	mov	x0, x19
 104:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 108:	add	x22, x22, #0x20
 10c:	cmp	x22, x21
 110:	b.ne	e0 <_ZN4llvm8toStringB5cxx11ENS_5ErrorE+0xe0>  // b.any
 114:	ldr	w8, [sp, #16]
 118:	ldr	x19, [sp, #8]
 11c:	cbz	w8, 150 <_ZN4llvm8toStringB5cxx11ENS_5ErrorE+0x150>
 120:	lsl	x20, x8, #5
 124:	b	130 <_ZN4llvm8toStringB5cxx11ENS_5ErrorE+0x130>
 128:	subs	x20, x20, #0x20
 12c:	b.eq	14c <_ZN4llvm8toStringB5cxx11ENS_5ErrorE+0x14c>  // b.none
 130:	add	x8, x19, x20
 134:	ldur	x0, [x8, #-32]
 138:	sub	x8, x8, #0x10
 13c:	cmp	x8, x0
 140:	b.eq	128 <_ZN4llvm8toStringB5cxx11ENS_5ErrorE+0x128>  // b.none
 144:	bl	0 <_ZdlPv>
 148:	b	128 <_ZN4llvm8toStringB5cxx11ENS_5ErrorE+0x128>
 14c:	ldr	x19, [sp, #8]
 150:	add	x8, sp, #0x8
 154:	add	x8, x8, #0x10
 158:	cmp	x19, x8
 15c:	b.eq	168 <_ZN4llvm8toStringB5cxx11ENS_5ErrorE+0x168>  // b.none
 160:	mov	x0, x19
 164:	bl	0 <free>
 168:	ldp	x20, x19, [sp, #224]
 16c:	ldp	x22, x21, [sp, #208]
 170:	ldr	x23, [sp, #192]
 174:	ldp	x29, x30, [sp, #176]
 178:	add	sp, sp, #0xf0
 17c:	ret
 180:	adrp	x0, 0 <_ZN4llvm8toStringB5cxx11ENS_5ErrorE>
 184:	add	x0, x0, #0x0
 188:	bl	0 <_ZSt20__throw_length_errorPKc>
 18c:	sturb	wzr, [x29, #-16]
 190:	stp	xzr, xzr, [x29, #-64]
 194:	adrp	x10, 0 <_ZTVN4llvm18raw_string_ostreamE>
 198:	ldr	x10, [x10]
 19c:	sub	x8, x29, #0x20
 1a0:	mov	w9, #0x1                   	// #1
 1a4:	adrp	x1, 0 <_ZN4llvm8toStringB5cxx11ENS_5ErrorE>
 1a8:	add	x11, x8, #0x10
 1ac:	stur	w9, [x29, #-48]
 1b0:	add	x9, x10, #0x10
 1b4:	add	x1, x1, #0x0
 1b8:	sub	x0, x29, #0x50
 1bc:	stp	x11, xzr, [x29, #-32]
 1c0:	stp	x9, xzr, [x29, #-80]
 1c4:	stur	x8, [x29, #-40]
 1c8:	bl	0 <_ZN4llvm8toStringB5cxx11ENS_5ErrorE>
 1cc:	adrp	x1, 0 <_ZN4llvm8toStringB5cxx11ENS_5ErrorE>
 1d0:	add	x1, x1, #0x0
 1d4:	bl	0 <_ZN4llvm8toStringB5cxx11ENS_5ErrorE>
 1d8:	add	x1, x29, #0x18
 1dc:	bl	0 <_ZN4llvm8toStringB5cxx11ENS_5ErrorE>
 1e0:	sub	x0, x29, #0x50
 1e4:	bl	0 <_ZN4llvm8toStringB5cxx11ENS_5ErrorE>
 1e8:	ldr	x0, [x0]
 1ec:	adrp	x1, 0 <_ZN4llvm8toStringB5cxx11ENS_5ErrorE>
 1f0:	add	x1, x1, #0x0
 1f4:	mov	w2, #0x2c9                 	// #713
 1f8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 1fc:	add	x0, x29, #0x18
 200:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 204:	add	x0, sp, #0x58
 208:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZN4llvm12handleErrorsIJZNS_8toStringB5cxx11ENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_:

0000000000000000 <_ZN4llvm12handleErrorsIJZNS_8toStringB5cxx11ENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	str	x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	mov	x19, x8
  1c:	ldr	x8, [x0]
  20:	tst	x8, #0xfffffffffffffffe
  24:	and	x21, x8, #0xfffffffffffffffe
  28:	cset	w8, ne  // ne = any
  2c:	orr	x8, x21, x8
  30:	str	x8, [x0]
  34:	cbz	x21, 104 <_ZN4llvm12handleErrorsIJZNS_8toStringB5cxx11ENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x104>
  38:	str	xzr, [x0]
  3c:	ldr	x8, [x21]
  40:	mov	x20, x1
  44:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  48:	mov	x0, x21
  4c:	ldr	x8, [x8, #48]
  50:	ldr	x1, [x1]
  54:	blr	x8
  58:	tbz	w0, #0, 110 <_ZN4llvm12handleErrorsIJZNS_8toStringB5cxx11ENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x110>
  5c:	mov	w8, #0x1                   	// #1
  60:	str	x8, [x19]
  64:	ldp	x22, x8, [x21, #8]
  68:	cmp	x22, x8
  6c:	b.eq	140 <_ZN4llvm12handleErrorsIJZNS_8toStringB5cxx11ENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x140>  // b.none
  70:	sub	x23, x8, #0x8
  74:	mov	w8, #0x1                   	// #1
  78:	orr	x8, x8, #0x1
  7c:	stur	x8, [x29, #-8]
  80:	str	xzr, [x19]
  84:	ldr	x8, [x22]
  88:	str	xzr, [x22]
  8c:	add	x0, sp, #0x8
  90:	mov	x1, x20
  94:	str	x8, [sp, #8]
  98:	add	x8, sp, #0x10
  9c:	bl	0 <_ZN4llvm12handleErrorsIJZNS_8toStringB5cxx11ENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
  a0:	add	x8, x29, #0x18
  a4:	sub	x0, x29, #0x8
  a8:	add	x1, sp, #0x10
  ac:	bl	0 <_ZN4llvm12handleErrorsIJZNS_8toStringB5cxx11ENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
  b0:	ldr	x8, [x19]
  b4:	cbnz	x8, 168 <_ZN4llvm12handleErrorsIJZNS_8toStringB5cxx11ENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x168>
  b8:	ldr	x8, [x29, #24]
  bc:	ldr	x9, [sp, #16]
  c0:	str	xzr, [x29, #24]
  c4:	orr	x8, x8, #0x1
  c8:	str	x8, [x19]
  cc:	cbnz	x9, 170 <_ZN4llvm12handleErrorsIJZNS_8toStringB5cxx11ENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x170>
  d0:	ldr	x0, [sp, #8]
  d4:	cbz	x0, e4 <_ZN4llvm12handleErrorsIJZNS_8toStringB5cxx11ENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0xe4>
  d8:	ldr	x8, [x0]
  dc:	ldr	x8, [x8, #8]
  e0:	blr	x8
  e4:	ldur	x8, [x29, #-8]
  e8:	str	xzr, [sp, #8]
  ec:	cbnz	x8, 178 <_ZN4llvm12handleErrorsIJZNS_8toStringB5cxx11ENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x178>
  f0:	cmp	x23, x22
  f4:	b.eq	140 <_ZN4llvm12handleErrorsIJZNS_8toStringB5cxx11ENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x140>  // b.none
  f8:	ldr	x8, [x19]
  fc:	add	x22, x22, #0x8
 100:	b	78 <_ZN4llvm12handleErrorsIJZNS_8toStringB5cxx11ENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x78>
 104:	mov	w8, #0x1                   	// #1
 108:	str	x8, [x19]
 10c:	b	150 <_ZN4llvm12handleErrorsIJZNS_8toStringB5cxx11ENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x150>
 110:	mov	x0, sp
 114:	mov	x8, x19
 118:	mov	x1, x20
 11c:	str	x21, [sp]
 120:	bl	0 <_ZN4llvm12handleErrorsIJZNS_8toStringB5cxx11ENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 124:	ldr	x0, [sp]
 128:	cbz	x0, 138 <_ZN4llvm12handleErrorsIJZNS_8toStringB5cxx11ENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x138>
 12c:	ldr	x8, [x0]
 130:	ldr	x8, [x8, #8]
 134:	blr	x8
 138:	str	xzr, [sp]
 13c:	b	150 <_ZN4llvm12handleErrorsIJZNS_8toStringB5cxx11ENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x150>
 140:	ldr	x8, [x21]
 144:	mov	x0, x21
 148:	ldr	x8, [x8, #8]
 14c:	blr	x8
 150:	ldp	x20, x19, [sp, #80]
 154:	ldp	x22, x21, [sp, #64]
 158:	ldr	x23, [sp, #48]
 15c:	ldp	x29, x30, [sp, #32]
 160:	add	sp, sp, #0x60
 164:	ret
 168:	mov	x0, x19
 16c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 170:	add	x0, sp, #0x10
 174:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 178:	sub	x0, x29, #0x8
 17c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE:

0000000000000000 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x1]
  10:	mov	x19, x0
  14:	ands	x8, x8, #0xfffffffffffffffe
  18:	b.eq	40 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE+0x40>  // b.none
  1c:	ldr	x9, [x8]
  20:	mov	x0, x8
  24:	mov	x1, x19
  28:	ldr	x9, [x9, #16]
  2c:	blr	x9
  30:	mov	x0, x19
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret
  40:	ldp	x9, x8, [x19, #16]
  44:	sub	x9, x9, x8
  48:	cmp	x9, #0x6
  4c:	b.hi	74 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE+0x74>  // b.pmore
  50:	adrp	x1, 0 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE>
  54:	add	x1, x1, #0x0
  58:	mov	w2, #0x7                   	// #7
  5c:	mov	x0, x19
  60:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  64:	mov	x0, x19
  68:	ldr	x19, [sp, #16]
  6c:	ldp	x29, x30, [sp], #32
  70:	ret
  74:	mov	w9, #0x6563                	// #25955
  78:	mov	w10, #0x7573                	// #30067
  7c:	movk	w9, #0x7373, lsl #16
  80:	movk	w10, #0x6363, lsl #16
  84:	stur	w9, [x8, #3]
  88:	str	w10, [x8]
  8c:	ldr	x8, [x19, #24]
  90:	add	x8, x8, #0x7
  94:	str	x8, [x19, #24]
  98:	mov	x0, x19
  9c:	ldr	x19, [sp, #16]
  a0:	ldp	x29, x30, [sp], #32
  a4:	ret

Disassembly of section .text._ZN4llvm18raw_string_ostream3strB5cxx11Ev:

0000000000000000 <_ZN4llvm18raw_string_ostream3strB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x0, #24]
  10:	ldr	x9, [x0, #8]
  14:	mov	x19, x0
  18:	cmp	x8, x9
  1c:	b.eq	28 <_ZN4llvm18raw_string_ostream3strB5cxx11Ev+0x28>  // b.none
  20:	mov	x0, x19
  24:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  28:	ldr	x0, [x19, #40]
  2c:	ldr	x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret

Disassembly of section .text._ZN4llvm9ErrorList4joinENS_5ErrorES1_:

0000000000000000 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #16]
   8:	str	x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	add	x29, sp, #0x10
  1c:	mov	x19, x8
  20:	ldr	x8, [x0]
  24:	mov	x20, x1
  28:	tst	x8, #0xfffffffffffffffe
  2c:	and	x9, x8, #0xfffffffffffffffe
  30:	cset	w8, ne  // ne = any
  34:	orr	x8, x9, x8
  38:	str	x8, [x0]
  3c:	cbz	x9, 320 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x320>
  40:	ldr	x8, [x20]
  44:	mov	x21, x0
  48:	tst	x8, #0xfffffffffffffffe
  4c:	and	x9, x8, #0xfffffffffffffffe
  50:	cset	w8, ne  // ne = any
  54:	orr	x8, x9, x8
  58:	str	x8, [x20]
  5c:	cbz	x9, 2ec <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x2ec>
  60:	ldr	x9, [x21]
  64:	ands	x0, x9, #0xfffffffffffffffe
  68:	b.eq	128 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x128>  // b.none
  6c:	ldr	x8, [x0]
  70:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  74:	ldr	x8, [x8, #48]
  78:	ldr	x1, [x1]
  7c:	blr	x8
  80:	tbz	w0, #0, 124 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x124>
  84:	ldr	x8, [x20]
  88:	ldr	x9, [x21]
  8c:	ands	x0, x8, #0xfffffffffffffffe
  90:	and	x24, x9, #0xfffffffffffffffe
  94:	b.eq	268 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x268>  // b.none
  98:	ldr	x8, [x0]
  9c:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  a0:	ldr	x8, [x8, #48]
  a4:	ldr	x1, [x1]
  a8:	blr	x8
  ac:	ldr	x8, [x20]
  b0:	and	x22, x8, #0xfffffffffffffffe
  b4:	tbz	w0, #0, 26c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x26c>
  b8:	str	xzr, [x20]
  bc:	ldp	x20, x25, [x22, #8]
  c0:	cmp	x20, x25
  c4:	b.eq	114 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x114>  // b.none
  c8:	add	x23, x24, #0x8
  cc:	b	e8 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0xe8>
  d0:	mov	x0, x23
  d4:	mov	x2, x20
  d8:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
  dc:	add	x20, x20, #0x8
  e0:	cmp	x25, x20
  e4:	b.eq	114 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x114>  // b.none
  e8:	ldp	x1, x8, [x24, #16]
  ec:	cmp	x1, x8
  f0:	b.eq	d0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0xd0>  // b.none
  f4:	ldr	x8, [x20]
  f8:	str	xzr, [x20], #8
  fc:	str	x8, [x1]
 100:	ldr	x8, [x24, #16]
 104:	add	x8, x8, #0x8
 108:	str	x8, [x24, #16]
 10c:	cmp	x25, x20
 110:	b.ne	e8 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0xe8>  // b.any
 114:	cbz	x22, 2ec <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x2ec>
 118:	ldr	x8, [x22]
 11c:	mov	x0, x22
 120:	b	2e4 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x2e4>
 124:	ldr	x8, [x20]
 128:	ands	x0, x8, #0xfffffffffffffffe
 12c:	b.eq	1f4 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1f4>  // b.none
 130:	ldr	x8, [x0]
 134:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 138:	ldr	x8, [x8, #48]
 13c:	ldr	x1, [x1]
 140:	blr	x8
 144:	tbz	w0, #0, 1f4 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1f4>
 148:	ldr	x8, [x20]
 14c:	and	x8, x8, #0xfffffffffffffffe
 150:	mov	x0, x8
 154:	ldr	x13, [x0, #8]!
 158:	ldr	x9, [x21]
 15c:	and	x11, x9, #0xfffffffffffffffe
 160:	str	x11, [x29, #24]
 164:	str	xzr, [x21]
 168:	ldr	x9, [x0]
 16c:	ldp	x10, x12, [x8, #16]
 170:	sub	x14, x13, x9
 174:	cmp	x10, x12
 178:	asr	x12, x14, #3
 17c:	b.eq	2bc <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x2bc>  // b.none
 180:	cmp	x10, x13
 184:	b.eq	300 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x300>  // b.none
 188:	ldur	x11, [x10, #-8]
 18c:	add	x21, x9, x12, lsl #3
 190:	stp	xzr, x11, [x10, #-8]
 194:	ldr	x10, [x8, #16]
 198:	sub	x9, x10, #0x8
 19c:	add	x11, x10, #0x8
 1a0:	sub	x10, x9, x21
 1a4:	cmp	x10, #0x1
 1a8:	str	x11, [x8, #16]
 1ac:	b.lt	298 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x298>  // b.tstop
 1b0:	lsr	x8, x10, #3
 1b4:	add	x22, x8, #0x1
 1b8:	mov	x23, x9
 1bc:	b	1d0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1d0>
 1c0:	sub	x22, x22, #0x1
 1c4:	cmp	x22, #0x1
 1c8:	mov	x9, x23
 1cc:	b.le	298 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x298>
 1d0:	ldr	x8, [x23, #-8]!
 1d4:	str	xzr, [x23]
 1d8:	ldr	x0, [x9]
 1dc:	str	x8, [x9]
 1e0:	cbz	x0, 1c0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1c0>
 1e4:	ldr	x8, [x0]
 1e8:	ldr	x8, [x8, #8]
 1ec:	blr	x8
 1f0:	b	1c0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1c0>
 1f4:	mov	w0, #0x20                  	// #32
 1f8:	bl	0 <_Znwm>
 1fc:	ldr	x8, [x21]
 200:	add	x1, sp, #0x8
 204:	mov	x2, sp
 208:	mov	x22, x0
 20c:	and	x8, x8, #0xfffffffffffffffe
 210:	str	x8, [sp, #8]
 214:	str	xzr, [x21]
 218:	ldr	x8, [x20]
 21c:	and	x8, x8, #0xfffffffffffffffe
 220:	str	x8, [sp]
 224:	str	xzr, [x20]
 228:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 22c:	ldr	x0, [sp]
 230:	orr	x8, x22, #0x1
 234:	str	x8, [x19]
 238:	cbz	x0, 248 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x248>
 23c:	ldr	x8, [x0]
 240:	ldr	x8, [x8, #8]
 244:	blr	x8
 248:	ldr	x0, [sp, #8]
 24c:	str	xzr, [sp]
 250:	cbz	x0, 260 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x260>
 254:	ldr	x8, [x0]
 258:	ldr	x8, [x8, #8]
 25c:	blr	x8
 260:	str	xzr, [sp, #8]
 264:	b	330 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x330>
 268:	mov	x22, xzr
 26c:	str	x22, [x29, #24]
 270:	str	xzr, [x20]
 274:	ldp	x1, x8, [x24, #16]
 278:	cmp	x1, x8
 27c:	b.eq	2cc <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x2cc>  // b.none
 280:	str	xzr, [x29, #24]
 284:	str	x22, [x1], #8
 288:	str	x1, [x24, #16]
 28c:	ldr	x0, [x29, #24]
 290:	cbnz	x0, 2e0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x2e0>
 294:	b	2ec <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x2ec>
 298:	ldr	x8, [x29, #24]
 29c:	str	xzr, [x29, #24]
 2a0:	ldr	x0, [x21]
 2a4:	str	x8, [x21]
 2a8:	cbz	x0, 30c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x30c>
 2ac:	ldr	x8, [x0]
 2b0:	ldr	x8, [x8, #8]
 2b4:	blr	x8
 2b8:	b	30c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x30c>
 2bc:	add	x1, x9, x12, lsl #3
 2c0:	add	x2, x29, #0x18
 2c4:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 2c8:	b	30c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x30c>
 2cc:	add	x0, x24, #0x8
 2d0:	add	x2, x29, #0x18
 2d4:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 2d8:	ldr	x0, [x29, #24]
 2dc:	cbz	x0, 2ec <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x2ec>
 2e0:	ldr	x8, [x0]
 2e4:	ldr	x8, [x8, #8]
 2e8:	blr	x8
 2ec:	ldr	x8, [x21]
 2f0:	orr	x8, x8, #0x1
 2f4:	str	x8, [x19]
 2f8:	str	xzr, [x21]
 2fc:	b	330 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x330>
 300:	str	xzr, [x29, #24]
 304:	str	x11, [x10], #8
 308:	str	x10, [x8, #16]
 30c:	ldr	x0, [x29, #24]
 310:	cbz	x0, 320 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x320>
 314:	ldr	x8, [x0]
 318:	ldr	x8, [x8, #8]
 31c:	blr	x8
 320:	ldr	x8, [x20]
 324:	orr	x8, x8, #0x1
 328:	str	x8, [x19]
 32c:	str	xzr, [x20]
 330:	ldp	x20, x19, [sp, #80]
 334:	ldp	x22, x21, [sp, #64]
 338:	ldp	x24, x23, [sp, #48]
 33c:	ldr	x25, [sp, #32]
 340:	ldp	x29, x30, [sp, #16]
 344:	add	sp, sp, #0x60
 348:	ret

Disassembly of section .text._ZN4llvm15handleErrorImplIZNS_8toStringB5cxx11ENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_:

0000000000000000 <_ZN4llvm15handleErrorImplIZNS_8toStringB5cxx11ENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x22, x21, [sp, #48]
   c:	stp	x20, x19, [sp, #64]
  10:	add	x29, sp, #0x20
  14:	mov	x22, x0
  18:	ldr	x0, [x0]
  1c:	mov	x21, x1
  20:	adrp	x1, 0 <_ZN4llvm13ErrorInfoBase2IDE>
  24:	mov	x19, x8
  28:	ldr	x9, [x0]
  2c:	ldr	x9, [x9, #48]
  30:	ldr	x1, [x1]
  34:	blr	x9
  38:	ldr	x20, [x22]
  3c:	str	xzr, [x22]
  40:	tbz	w0, #0, bc <_ZN4llvm15handleErrorImplIZNS_8toStringB5cxx11ENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_+0xbc>
  44:	ldr	x8, [x20]
  48:	adrp	x1, 0 <_ZN4llvm13ErrorInfoBase2IDE>
  4c:	mov	x0, x20
  50:	ldr	x8, [x8, #48]
  54:	ldr	x1, [x1]
  58:	blr	x8
  5c:	tbz	w0, #0, 138 <_ZN4llvm15handleErrorImplIZNS_8toStringB5cxx11ENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_+0x138>
  60:	ldr	x8, [x20]
  64:	ldr	x21, [x21]
  68:	mov	x0, x20
  6c:	mov	x22, sp
  70:	ldr	x9, [x8, #24]
  74:	mov	x8, sp
  78:	blr	x9
  7c:	ldp	w9, w8, [x21, #8]
  80:	cmp	w9, w8
  84:	b.cs	124 <_ZN4llvm15handleErrorImplIZNS_8toStringB5cxx11ENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_+0x124>  // b.hs, b.nlast
  88:	ldr	x8, [x21]
  8c:	mov	w9, w9
  90:	add	x10, x22, #0x10
  94:	add	x11, x8, x9, lsl #5
  98:	add	x12, x11, #0x10
  9c:	str	x12, [x11]
  a0:	ldr	x13, [sp]
  a4:	cmp	x13, x10
  a8:	b.eq	c8 <_ZN4llvm15handleErrorImplIZNS_8toStringB5cxx11ENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_+0xc8>  // b.none
  ac:	str	x13, [x11]
  b0:	ldr	x12, [sp, #16]
  b4:	str	x12, [x11, #16]
  b8:	b	d0 <_ZN4llvm15handleErrorImplIZNS_8toStringB5cxx11ENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_+0xd0>
  bc:	orr	x8, x20, #0x1
  c0:	str	x8, [x19]
  c4:	b	110 <_ZN4llvm15handleErrorImplIZNS_8toStringB5cxx11ENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_+0x110>
  c8:	ldr	q0, [x13]
  cc:	str	q0, [x12]
  d0:	ldr	x11, [sp, #8]
  d4:	add	x8, x8, x9, lsl #5
  d8:	str	x11, [x8, #8]
  dc:	stp	x10, xzr, [sp]
  e0:	strb	wzr, [sp, #16]
  e4:	ldp	w8, w9, [x21, #8]
  e8:	cmp	w8, w9
  ec:	b.cs	158 <_ZN4llvm15handleErrorImplIZNS_8toStringB5cxx11ENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_+0x158>  // b.hs, b.nlast
  f0:	add	w8, w8, #0x1
  f4:	mov	w9, #0x1                   	// #1
  f8:	str	w8, [x21, #8]
  fc:	str	x9, [x19]
 100:	ldr	x8, [x20]
 104:	mov	x0, x20
 108:	ldr	x8, [x8, #8]
 10c:	blr	x8
 110:	ldp	x20, x19, [sp, #64]
 114:	ldp	x22, x21, [sp, #48]
 118:	ldp	x29, x30, [sp, #32]
 11c:	add	sp, sp, #0x50
 120:	ret
 124:	mov	x0, x21
 128:	mov	x1, xzr
 12c:	bl	0 <_ZN4llvm15handleErrorImplIZNS_8toStringB5cxx11ENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_>
 130:	ldr	w9, [x21, #8]
 134:	b	88 <_ZN4llvm15handleErrorImplIZNS_8toStringB5cxx11ENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_+0x88>
 138:	adrp	x0, 0 <_ZN4llvm15handleErrorImplIZNS_8toStringB5cxx11ENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_>
 13c:	adrp	x1, 0 <_ZN4llvm15handleErrorImplIZNS_8toStringB5cxx11ENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_>
 140:	adrp	x3, 0 <_ZN4llvm15handleErrorImplIZNS_8toStringB5cxx11ENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_>
 144:	add	x0, x0, #0x0
 148:	add	x1, x1, #0x0
 14c:	add	x3, x3, #0x0
 150:	mov	w2, #0x329                 	// #809
 154:	bl	0 <__assert_fail>
 158:	adrp	x0, 0 <_ZN4llvm15handleErrorImplIZNS_8toStringB5cxx11ENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_>
 15c:	adrp	x1, 0 <_ZN4llvm15handleErrorImplIZNS_8toStringB5cxx11ENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_>
 160:	adrp	x3, 0 <_ZN4llvm15handleErrorImplIZNS_8toStringB5cxx11ENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_>
 164:	add	x0, x0, #0x0
 168:	add	x1, x1, #0x0
 16c:	add	x3, x3, #0x0
 170:	mov	w2, #0x43                  	// #67
 174:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_:

0000000000000000 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	adrp	x8, 0 <_ZTVN4llvm9ErrorListE>
  14:	ldr	x8, [x8]
  18:	mov	x20, x0
  1c:	mov	x19, x0
  20:	mov	x22, x1
  24:	add	x8, x8, #0x10
  28:	str	x8, [x0]
  2c:	str	xzr, [x20, #8]!
  30:	stp	xzr, xzr, [x0, #16]
  34:	ldr	x0, [x1]
  38:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  3c:	mov	x21, x2
  40:	ldr	x8, [x0]
  44:	ldr	x8, [x8, #48]
  48:	ldr	x1, [x1]
  4c:	blr	x8
  50:	tbnz	w0, #0, f8 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_+0xf8>
  54:	ldr	x0, [x21]
  58:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  5c:	ldr	x8, [x0]
  60:	ldr	x8, [x8, #48]
  64:	ldr	x1, [x1]
  68:	blr	x8
  6c:	tbnz	w0, #0, f8 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_+0xf8>
  70:	ldp	x1, x8, [x19, #16]
  74:	cmp	x1, x8
  78:	b.eq	c8 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_+0xc8>  // b.none
  7c:	ldr	x8, [x22]
  80:	str	xzr, [x22]
  84:	str	x8, [x1]
  88:	ldr	x8, [x19, #16]
  8c:	add	x1, x8, #0x8
  90:	str	x1, [x19, #16]
  94:	ldr	x8, [x19, #24]
  98:	cmp	x1, x8
  9c:	b.eq	e0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_+0xe0>  // b.none
  a0:	ldr	x8, [x21]
  a4:	str	xzr, [x21]
  a8:	str	x8, [x1]
  ac:	ldr	x8, [x19, #16]
  b0:	add	x8, x8, #0x8
  b4:	str	x8, [x19, #16]
  b8:	ldp	x20, x19, [sp, #32]
  bc:	ldp	x22, x21, [sp, #16]
  c0:	ldp	x29, x30, [sp], #48
  c4:	ret
  c8:	mov	x0, x20
  cc:	mov	x2, x22
  d0:	bl	0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>
  d4:	ldp	x1, x8, [x19, #16]
  d8:	cmp	x1, x8
  dc:	b.ne	a0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_+0xa0>  // b.any
  e0:	mov	x0, x20
  e4:	mov	x2, x21
  e8:	ldp	x20, x19, [sp, #32]
  ec:	ldp	x22, x21, [sp, #16]
  f0:	ldp	x29, x30, [sp], #48
  f4:	b	0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>
  f8:	adrp	x0, 0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>
  fc:	adrp	x1, 0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>
 100:	adrp	x3, 0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0x182                 	// #386
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldp	x20, x24, [x0]
  1c:	mov	x9, #0x7ffffffffffffff8    	// #9223372036854775800
  20:	sub	x8, x24, x20
  24:	cmp	x8, x9
  28:	b.eq	144 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x144>  // b.none
  2c:	asr	x9, x8, #3
  30:	cmp	x8, #0x0
  34:	csinc	x10, x9, xzr, ne  // ne = any
  38:	adds	x9, x10, x9
  3c:	lsr	x11, x9, #60
  40:	cset	w10, cs  // cs = hs, nlast
  44:	cmp	x11, #0x0
  48:	cset	w11, ne  // ne = any
  4c:	orr	w10, w10, w11
  50:	mov	x8, #0xfffffffffffffff     	// #1152921504606846975
  54:	cmp	w10, #0x0
  58:	csel	x25, x8, x9, ne  // ne = any
  5c:	sub	x8, x1, x20
  60:	mov	x23, x2
  64:	mov	x19, x0
  68:	mov	x21, x1
  6c:	asr	x26, x8, #3
  70:	cbz	x25, 84 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x84>
  74:	lsl	x0, x25, #3
  78:	bl	0 <_Znwm>
  7c:	mov	x22, x0
  80:	b	88 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x88>
  84:	mov	x22, xzr
  88:	ldr	x8, [x23]
  8c:	str	xzr, [x23]
  90:	cmp	x20, x21
  94:	mov	x23, x22
  98:	str	x8, [x22, x26, lsl #3]
  9c:	b.eq	e4 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xe4>  // b.none
  a0:	mov	x23, x22
  a4:	mov	x26, x20
  a8:	b	bc <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xbc>
  ac:	str	xzr, [x26], #8
  b0:	cmp	x21, x26
  b4:	add	x23, x23, #0x8
  b8:	b.eq	e4 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xe4>  // b.none
  bc:	ldr	x8, [x26]
  c0:	str	xzr, [x26]
  c4:	str	x8, [x23]
  c8:	ldr	x0, [x26]
  cc:	cbz	x0, ac <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xac>
  d0:	ldr	x8, [x0]
  d4:	ldr	x8, [x8, #8]
  d8:	blr	x8
  dc:	b	ac <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xac>
  e0:	str	xzr, [x21], #8
  e4:	cmp	x24, x21
  e8:	add	x23, x23, #0x8
  ec:	b.eq	114 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x114>  // b.none
  f0:	ldr	x8, [x21]
  f4:	str	xzr, [x21]
  f8:	str	x8, [x23]
  fc:	ldr	x0, [x21]
 100:	cbz	x0, e0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xe0>
 104:	ldr	x8, [x0]
 108:	ldr	x8, [x8, #8]
 10c:	blr	x8
 110:	b	e0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xe0>
 114:	cbz	x20, 120 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x120>
 118:	mov	x0, x20
 11c:	bl	0 <_ZdlPv>
 120:	add	x8, x22, x25, lsl #3
 124:	stp	x22, x23, [x19]
 128:	str	x8, [x19, #16]
 12c:	ldp	x20, x19, [sp, #64]
 130:	ldp	x22, x21, [sp, #48]
 134:	ldp	x24, x23, [sp, #32]
 138:	ldp	x26, x25, [sp, #16]
 13c:	ldp	x29, x30, [sp], #80
 140:	ret
 144:	adrp	x0, 0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
 148:	add	x0, x0, #0x0
 14c:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x20, x1
  18:	lsr	x8, x1, #32
  1c:	mov	x19, x0
  20:	cbz	x8, 34 <_ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm+0x34>
  24:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm>
  28:	add	x0, x0, #0x0
  2c:	mov	w1, #0x1                   	// #1
  30:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  34:	ldr	w8, [x19, #12]
  38:	add	x8, x8, #0x2
  3c:	orr	x8, x8, x8, lsr #1
  40:	orr	x8, x8, x8, lsr #2
  44:	orr	x8, x8, x8, lsr #4
  48:	orr	x8, x8, x8, lsr #8
  4c:	orr	x8, x8, x8, lsr #16
  50:	orr	x8, x8, x8, lsr #32
  54:	add	x9, x8, #0x1
  58:	cmp	x9, x20
  5c:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  60:	mov	w9, #0xffffffff            	// #-1
  64:	cmp	x8, x9
  68:	csel	x22, x8, x9, cc  // cc = lo, ul, last
  6c:	lsl	x0, x22, #5
  70:	bl	0 <malloc>
  74:	mov	x20, x0
  78:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm+0xb8>
  7c:	cbz	x22, 98 <_ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm+0x98>
  80:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm>
  84:	add	x0, x0, #0x0
  88:	mov	w1, #0x1                   	// #1
  8c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  90:	mov	x20, xzr
  94:	b	b8 <_ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm+0xb8>
  98:	mov	w0, #0x1                   	// #1
  9c:	bl	0 <malloc>
  a0:	mov	x20, x0
  a4:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm+0xb8>
  a8:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm>
  ac:	add	x0, x0, #0x0
  b0:	mov	w1, #0x1                   	// #1
  b4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b8:	ldr	w8, [x19, #8]
  bc:	ldr	x21, [x19]
  c0:	cbz	w8, 158 <_ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm+0x158>
  c4:	add	x8, x21, x8, lsl #5
  c8:	add	x9, x20, #0x10
  cc:	add	x10, x21, #0x10
  d0:	b	100 <_ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm+0x100>
  d4:	stur	x11, [x9, #-16]
  d8:	ldr	x11, [x10]
  dc:	str	x11, [x9]
  e0:	ldur	x11, [x10, #-8]
  e4:	add	x12, x10, #0x10
  e8:	cmp	x12, x8
  ec:	stur	x11, [x9, #-8]
  f0:	stp	x10, xzr, [x10, #-16]
  f4:	strb	wzr, [x10], #32
  f8:	add	x9, x9, #0x20
  fc:	b.eq	11c <_ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm+0x11c>  // b.none
 100:	stur	x9, [x9, #-16]
 104:	ldur	x11, [x10, #-16]
 108:	cmp	x11, x10
 10c:	b.ne	d4 <_ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm+0xd4>  // b.any
 110:	ldr	q0, [x11]
 114:	str	q0, [x9]
 118:	b	e0 <_ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm+0xe0>
 11c:	ldr	w8, [x19, #8]
 120:	ldr	x21, [x19]
 124:	cbz	w8, 158 <_ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm+0x158>
 128:	lsl	x23, x8, #5
 12c:	b	138 <_ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm+0x138>
 130:	subs	x23, x23, #0x20
 134:	b.eq	154 <_ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm+0x154>  // b.none
 138:	add	x8, x21, x23
 13c:	ldur	x0, [x8, #-32]
 140:	sub	x8, x8, #0x10
 144:	cmp	x8, x0
 148:	b.eq	130 <_ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm+0x130>  // b.none
 14c:	bl	0 <_ZdlPv>
 150:	b	130 <_ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm+0x130>
 154:	ldr	x21, [x19]
 158:	add	x8, x19, #0x10
 15c:	cmp	x21, x8
 160:	b.eq	16c <_ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm+0x16c>  // b.none
 164:	mov	x0, x21
 168:	bl	0 <free>
 16c:	str	x20, [x19]
 170:	str	w22, [x19, #12]
 174:	ldp	x20, x19, [sp, #48]
 178:	ldp	x22, x21, [sp, #32]
 17c:	ldr	x23, [sp, #16]
 180:	ldp	x29, x30, [sp], #64
 184:	ret

Disassembly of section .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:

0000000000000000 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldp	x20, x24, [x0]
  1c:	mov	x9, #0x7fffffffffffffe0    	// #9223372036854775776
  20:	sub	x8, x24, x20
  24:	cmp	x8, x9
  28:	b.eq	1d8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1d8>  // b.none
  2c:	asr	x9, x8, #5
  30:	cmp	x8, #0x0
  34:	csinc	x10, x9, xzr, ne  // ne = any
  38:	adds	x9, x10, x9
  3c:	lsr	x11, x9, #58
  40:	cset	w10, cs  // cs = hs, nlast
  44:	cmp	x11, #0x0
  48:	cset	w11, ne  // ne = any
  4c:	orr	w10, w10, w11
  50:	mov	x8, #0x3ffffffffffffff     	// #288230376151711743
  54:	cmp	w10, #0x0
  58:	csel	x25, x8, x9, ne  // ne = any
  5c:	sub	x8, x1, x20
  60:	mov	x23, x2
  64:	mov	x19, x0
  68:	mov	x21, x1
  6c:	asr	x26, x8, #5
  70:	cbz	x25, 84 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x84>
  74:	lsl	x0, x25, #5
  78:	bl	0 <_Znwm>
  7c:	mov	x22, x0
  80:	b	88 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x88>
  84:	mov	x22, xzr
  88:	add	x9, x22, x26, lsl #5
  8c:	add	x10, x9, #0x10
  90:	str	x10, [x9]
  94:	mov	x8, x23
  98:	ldr	x11, [x8], #16
  9c:	cmp	x11, x8
  a0:	b.eq	b4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xb4>  // b.none
  a4:	str	x11, [x9]
  a8:	ldr	x10, [x23, #16]
  ac:	str	x10, [x9, #16]
  b0:	b	bc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xbc>
  b4:	ldr	q0, [x11]
  b8:	str	q0, [x10]
  bc:	ldr	x9, [x23, #8]
  c0:	add	x10, x22, x26, lsl #5
  c4:	cmp	x20, x21
  c8:	str	x9, [x10, #8]
  cc:	stp	x8, xzr, [x23]
  d0:	mov	x8, x22
  d4:	strb	wzr, [x23, #16]
  d8:	b.eq	134 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x134>  // b.none
  dc:	add	x8, x22, #0x10
  e0:	add	x9, x20, #0x10
  e4:	b	114 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x114>
  e8:	stur	x10, [x8, #-16]
  ec:	ldr	x10, [x9]
  f0:	str	x10, [x8]
  f4:	ldur	x10, [x9, #-8]
  f8:	add	x11, x9, #0x10
  fc:	cmp	x11, x21
 100:	stur	x10, [x8, #-8]
 104:	stp	x9, xzr, [x9, #-16]
 108:	strb	wzr, [x9], #32
 10c:	add	x8, x8, #0x20
 110:	b.eq	130 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x130>  // b.none
 114:	stur	x8, [x8, #-16]
 118:	ldur	x10, [x9, #-16]
 11c:	cmp	x10, x9
 120:	b.ne	e8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xe8>  // b.any
 124:	ldr	q0, [x10]
 128:	str	q0, [x8]
 12c:	b	f4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xf4>
 130:	sub	x8, x8, #0x10
 134:	cmp	x24, x21
 138:	b.eq	1a4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1a4>  // b.none
 13c:	mov	x9, xzr
 140:	b	174 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x174>
 144:	str	x13, [x11, #32]
 148:	ldr	x12, [x12, #16]
 14c:	str	x12, [x11, #48]
 150:	ldur	x11, [x10, #-8]
 154:	add	x13, x10, #0x10
 158:	add	x12, x8, x9
 15c:	cmp	x13, x24
 160:	add	x9, x9, #0x20
 164:	str	x11, [x12, #40]
 168:	stp	x10, xzr, [x10, #-16]
 16c:	strb	wzr, [x10]
 170:	b.eq	1a0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1a0>  // b.none
 174:	add	x11, x8, x9
 178:	add	x10, x11, #0x30
 17c:	add	x12, x21, x9
 180:	str	x10, [x11, #32]
 184:	mov	x10, x12
 188:	ldr	x13, [x10], #16
 18c:	cmp	x13, x10
 190:	b.ne	144 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x144>  // b.any
 194:	ldr	q0, [x13]
 198:	str	q0, [x11, #48]
 19c:	b	150 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x150>
 1a0:	add	x8, x8, x9
 1a4:	add	x21, x8, #0x20
 1a8:	cbz	x20, 1b4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1b4>
 1ac:	mov	x0, x20
 1b0:	bl	0 <_ZdlPv>
 1b4:	add	x8, x22, x25, lsl #5
 1b8:	stp	x22, x21, [x19]
 1bc:	str	x8, [x19, #16]
 1c0:	ldp	x20, x19, [sp, #64]
 1c4:	ldp	x22, x21, [sp, #48]
 1c8:	ldp	x24, x23, [sp, #32]
 1cc:	ldp	x26, x25, [sp, #16]
 1d0:	ldp	x29, x30, [sp], #80
 1d4:	ret
 1d8:	adrp	x0, 0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
 1dc:	add	x0, x0, #0x0
 1e0:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNK4llvm8ExpectedISt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedISt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	ldp	x9, x8, [x0, #16]
  18:	sub	x9, x9, x8
  1c:	cmp	x9, #0x39
  20:	b.hi	38 <_ZNK4llvm8ExpectedISt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv+0x38>  // b.pmore
  24:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
  28:	add	x1, x1, #0x0
  2c:	mov	w2, #0x3a                  	// #58
  30:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  34:	b	64 <_ZNK4llvm8ExpectedISt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv+0x64>
  38:	adrp	x9, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
  3c:	add	x9, x9, #0x0
  40:	ldur	q0, [x9, #42]
  44:	ldp	q2, q1, [x9, #16]
  48:	ldr	q3, [x9]
  4c:	stur	q0, [x8, #42]
  50:	stp	q2, q1, [x8, #16]
  54:	str	q3, [x8]
  58:	ldr	x8, [x0, #24]
  5c:	add	x8, x8, #0x3a
  60:	str	x8, [x0, #24]
  64:	ldrb	w20, [x19, #8]
  68:	bl	0 <_ZN4llvm4dbgsEv>
  6c:	ldp	x9, x8, [x0, #16]
  70:	sub	x9, x9, x8
  74:	tbnz	w20, #0, 94 <_ZNK4llvm8ExpectedISt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv+0x94>
  78:	cmp	x9, #0x82
  7c:	b.hi	d4 <_ZNK4llvm8ExpectedISt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv+0xd4>  // b.pmore
  80:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
  84:	add	x1, x1, #0x0
  88:	mov	w2, #0x83                  	// #131
  8c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  90:	bl	0 <abort>
  94:	cmp	x9, #0x26
  98:	b.hi	118 <_ZNK4llvm8ExpectedISt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv+0x118>  // b.pmore
  9c:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
  a0:	add	x1, x1, #0x0
  a4:	mov	w2, #0x27                  	// #39
  a8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  ac:	ldrb	w8, [x19, #8]
  b0:	tbz	w8, #0, 144 <_ZNK4llvm8ExpectedISt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv+0x144>
  b4:	ldr	x19, [x19]
  b8:	bl	0 <_ZN4llvm4dbgsEv>
  bc:	ldr	x8, [x19]
  c0:	mov	x1, x0
  c4:	mov	x0, x19
  c8:	ldr	x8, [x8, #16]
  cc:	blr	x8
  d0:	bl	0 <abort>
  d4:	adrp	x9, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
  d8:	add	x9, x9, #0x0
  dc:	ldp	q1, q0, [x9, #32]
  e0:	ldp	q2, q3, [x9]
  e4:	stp	q1, q0, [x8, #32]
  e8:	ldp	q0, q1, [x9, #96]
  ec:	stp	q2, q3, [x8]
  f0:	ldp	q2, q3, [x9, #64]
  f4:	mov	w9, #0x2964                	// #10596
  f8:	movk	w9, #0xa2e, lsl #16
  fc:	stur	w9, [x8, #127]
 100:	stp	q0, q1, [x8, #96]
 104:	stp	q2, q3, [x8, #64]
 108:	ldr	x8, [x0, #24]
 10c:	add	x8, x8, #0x83
 110:	str	x8, [x0, #24]
 114:	bl	0 <abort>
 118:	adrp	x9, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
 11c:	add	x9, x9, #0x0
 120:	ldur	x10, [x9, #31]
 124:	ldp	q1, q0, [x9]
 128:	stur	x10, [x8, #31]
 12c:	stp	q1, q0, [x8]
 130:	ldr	x8, [x0, #24]
 134:	add	x8, x8, #0x27
 138:	str	x8, [x0, #24]
 13c:	ldrb	w8, [x19, #8]
 140:	tbnz	w8, #0, b4 <_ZNK4llvm8ExpectedISt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv+0xb4>
 144:	adrp	x0, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
 148:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
 14c:	adrp	x3, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_6ModuleESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
 150:	add	x0, x0, #0x0
 154:	add	x1, x1, #0x0
 158:	add	x3, x3, #0x0
 15c:	mov	w2, #0x281                 	// #641
 160:	bl	0 <__assert_fail>

IRMutator.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>:
       0:	sub	sp, sp, #0x70
       4:	stp	x29, x30, [sp, #32]
       8:	stp	x26, x25, [sp, #48]
       c:	stp	x24, x23, [sp, #64]
      10:	stp	x22, x21, [sp, #80]
      14:	stp	x20, x19, [sp, #96]
      18:	add	x29, sp, #0x20
      1c:	mov	x25, x1
      20:	ldr	x8, [x25, #24]!
      24:	mov	x19, x2
      28:	mov	x21, x1
      2c:	mov	x20, x0
      30:	and	x8, x8, #0xfffffffffffffff8
      34:	cmp	x25, x8
      38:	b.ne	dc <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE+0xdc>  // b.any
      3c:	ldr	x22, [x21]
      40:	mov	x0, x22
      44:	bl	0 <_ZN4llvm4Type9getVoidTyERNS_11LLVMContextE>
      48:	mov	x1, xzr
      4c:	mov	x2, xzr
      50:	mov	w3, wzr
      54:	bl	0 <_ZN4llvm12FunctionType3getEPNS_4TypeENS_8ArrayRefIS2_EEb>
      58:	adrp	x8, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
      5c:	mov	x23, x0
      60:	add	x8, x8, #0x0
      64:	mov	w26, #0x103                 	// #259
      68:	mov	w0, #0x78                  	// #120
      6c:	stp	x8, xzr, [sp, #8]
      70:	strh	w26, [sp, #24]
      74:	bl	0 <_ZN4llvm4UsernwEm>
      78:	add	x4, sp, #0x8
      7c:	mov	w3, #0xffffffff            	// #-1
      80:	mov	x1, x23
      84:	mov	w2, wzr
      88:	mov	x5, x21
      8c:	mov	x24, x0
      90:	bl	0 <_ZN4llvm8FunctionC1EPNS_12FunctionTypeENS_11GlobalValue12LinkageTypesEjRKNS_5TwineEPNS_6ModuleE>
      94:	adrp	x8, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
      98:	add	x8, x8, #0x0
      9c:	mov	w0, #0x40                  	// #64
      a0:	stp	x8, xzr, [sp, #8]
      a4:	strh	w26, [sp, #24]
      a8:	bl	0 <_Znwm>
      ac:	add	x2, sp, #0x8
      b0:	mov	x1, x22
      b4:	mov	x3, x24
      b8:	mov	x4, xzr
      bc:	mov	x23, x0
      c0:	bl	0 <_ZN4llvm10BasicBlockC1ERNS_11LLVMContextERKNS_5TwineEPNS_8FunctionEPS0_>
      c4:	mov	w0, #0x38                  	// #56
      c8:	mov	w1, wzr
      cc:	bl	0 <_ZN4llvm4UsernwEmj>
      d0:	mov	x1, x22
      d4:	mov	x2, x23
      d8:	bl	0 <_ZN4llvm10ReturnInstC1ERNS_11LLVMContextEPNS_10BasicBlockE>
      dc:	ldr	x23, [x21, #32]
      e0:	cmp	x25, x23
      e4:	b.eq	1a0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE+0x1a0>  // b.none
      e8:	mov	x21, xzr
      ec:	mov	x24, xzr
      f0:	mov	w26, #0x1                   	// #1
      f4:	b	104 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE+0x104>
      f8:	ldr	x23, [x23, #8]
      fc:	cmp	x25, x23
     100:	b.eq	148 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE+0x148>  // b.none
     104:	ldrb	w8, [x23]
     108:	tbnz	w8, #2, 180 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE+0x180>
     10c:	sub	x8, x23, #0x38
     110:	cmp	x23, #0x0
     114:	csel	x22, xzr, x8, eq  // eq = none
     118:	mov	x0, x22
     11c:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
     120:	tbnz	w0, #0, f8 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE+0xf8>
     124:	add	x24, x24, #0x1
     128:	add	x0, sp, #0x8
     12c:	add	x2, sp, #0x8
     130:	mov	x1, x19
     134:	stp	x26, x24, [sp, #8]
     138:	bl	0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     13c:	cmp	x0, #0x1
     140:	csel	x21, x21, x22, hi  // hi = pmore
     144:	b	f8 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE+0xf8>
     148:	cbz	x24, 1a0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE+0x1a0>
     14c:	ldr	x8, [x20]
     150:	mov	x0, x20
     154:	mov	x1, x21
     158:	mov	x2, x19
     15c:	ldr	x8, [x8, #32]
     160:	blr	x8
     164:	ldp	x20, x19, [sp, #96]
     168:	ldp	x22, x21, [sp, #80]
     16c:	ldp	x24, x23, [sp, #64]
     170:	ldp	x26, x25, [sp, #48]
     174:	ldp	x29, x30, [sp, #32]
     178:	add	sp, sp, #0x70
     17c:	ret
     180:	adrp	x0, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     184:	adrp	x1, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     188:	adrp	x3, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     18c:	add	x0, x0, #0x0
     190:	add	x1, x1, #0x0
     194:	add	x3, x3, #0x0
     198:	mov	w2, #0x8b                  	// #139
     19c:	bl	0 <__assert_fail>
     1a0:	adrp	x0, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     1a4:	adrp	x1, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     1a8:	adrp	x3, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     1ac:	add	x0, x0, #0x0
     1b0:	add	x1, x1, #0x0
     1b4:	add	x3, x3, #0x0
     1b8:	mov	w2, #0x2d                  	// #45
     1bc:	bl	0 <__assert_fail>

00000000000001c0 <_ZN4llvm18IRMutationStrategy6mutateERNS_8FunctionERNS_15RandomIRBuilderE>:
     1c0:	sub	sp, sp, #0x60
     1c4:	stp	x29, x30, [sp, #16]
     1c8:	str	x25, [sp, #32]
     1cc:	stp	x24, x23, [sp, #48]
     1d0:	stp	x22, x21, [sp, #64]
     1d4:	stp	x20, x19, [sp, #80]
     1d8:	add	x29, sp, #0x10
     1dc:	ldr	x22, [x1, #80]
     1e0:	add	x23, x1, #0x48
     1e4:	cmp	x23, x22
     1e8:	b.eq	29c <_ZN4llvm18IRMutationStrategy6mutateERNS_8FunctionERNS_15RandomIRBuilderE+0xdc>  // b.none
     1ec:	mov	x19, x2
     1f0:	mov	x20, x0
     1f4:	mov	x21, xzr
     1f8:	mov	w24, #0x1                   	// #1
     1fc:	mov	w25, #0x1                   	// #1
     200:	ldrb	w8, [x22]
     204:	tbnz	w8, #2, 27c <_ZN4llvm18IRMutationStrategy6mutateERNS_8FunctionERNS_15RandomIRBuilderE+0xbc>
     208:	mov	x0, sp
     20c:	mov	x2, sp
     210:	mov	x1, x19
     214:	stp	x24, x25, [sp]
     218:	bl	0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     21c:	sub	x8, x22, #0x18
     220:	cmp	x22, #0x0
     224:	ldr	x22, [x22, #8]
     228:	csel	x8, xzr, x8, eq  // eq = none
     22c:	cmp	x0, #0x1
     230:	csel	x21, x21, x8, hi  // hi = pmore
     234:	cmp	x23, x22
     238:	add	x25, x25, #0x1
     23c:	b.ne	200 <_ZN4llvm18IRMutationStrategy6mutateERNS_8FunctionERNS_15RandomIRBuilderE+0x40>  // b.any
     240:	cmp	x25, #0x1
     244:	b.eq	29c <_ZN4llvm18IRMutationStrategy6mutateERNS_8FunctionERNS_15RandomIRBuilderE+0xdc>  // b.none
     248:	ldr	x8, [x20]
     24c:	mov	x0, x20
     250:	mov	x1, x21
     254:	mov	x2, x19
     258:	ldr	x8, [x8, #40]
     25c:	blr	x8
     260:	ldp	x20, x19, [sp, #80]
     264:	ldp	x22, x21, [sp, #64]
     268:	ldp	x24, x23, [sp, #48]
     26c:	ldr	x25, [sp, #32]
     270:	ldp	x29, x30, [sp, #16]
     274:	add	sp, sp, #0x60
     278:	ret
     27c:	adrp	x0, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     280:	adrp	x1, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     284:	adrp	x3, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     288:	add	x0, x0, #0x0
     28c:	add	x1, x1, #0x0
     290:	add	x3, x3, #0x0
     294:	mov	w2, #0x8b                  	// #139
     298:	bl	0 <__assert_fail>
     29c:	adrp	x0, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     2a0:	adrp	x1, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     2a4:	adrp	x3, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     2a8:	add	x0, x0, #0x0
     2ac:	add	x1, x1, #0x0
     2b0:	add	x3, x3, #0x0
     2b4:	mov	w2, #0x2d                  	// #45
     2b8:	bl	0 <__assert_fail>

00000000000002bc <_ZN4llvm18IRMutationStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE>:
     2bc:	sub	sp, sp, #0x60
     2c0:	stp	x29, x30, [sp, #16]
     2c4:	str	x25, [sp, #32]
     2c8:	stp	x24, x23, [sp, #48]
     2cc:	stp	x22, x21, [sp, #64]
     2d0:	stp	x20, x19, [sp, #80]
     2d4:	add	x29, sp, #0x10
     2d8:	ldr	x22, [x1, #48]
     2dc:	add	x23, x1, #0x28
     2e0:	cmp	x23, x22
     2e4:	b.eq	398 <_ZN4llvm18IRMutationStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0xdc>  // b.none
     2e8:	mov	x19, x2
     2ec:	mov	x20, x0
     2f0:	mov	x21, xzr
     2f4:	mov	w24, #0x1                   	// #1
     2f8:	mov	w25, #0x1                   	// #1
     2fc:	ldrb	w8, [x22]
     300:	tbnz	w8, #2, 378 <_ZN4llvm18IRMutationStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0xbc>
     304:	mov	x0, sp
     308:	mov	x2, sp
     30c:	mov	x1, x19
     310:	stp	x24, x25, [sp]
     314:	bl	0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     318:	sub	x8, x22, #0x18
     31c:	cmp	x22, #0x0
     320:	ldr	x22, [x22, #8]
     324:	csel	x8, xzr, x8, eq  // eq = none
     328:	cmp	x0, #0x1
     32c:	csel	x21, x21, x8, hi  // hi = pmore
     330:	cmp	x23, x22
     334:	add	x25, x25, #0x1
     338:	b.ne	2fc <_ZN4llvm18IRMutationStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0x40>  // b.any
     33c:	cmp	x25, #0x1
     340:	b.eq	398 <_ZN4llvm18IRMutationStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0xdc>  // b.none
     344:	ldr	x8, [x20]
     348:	mov	x0, x20
     34c:	mov	x1, x21
     350:	mov	x2, x19
     354:	ldr	x8, [x8, #48]
     358:	blr	x8
     35c:	ldp	x20, x19, [sp, #80]
     360:	ldp	x22, x21, [sp, #64]
     364:	ldp	x24, x23, [sp, #48]
     368:	ldr	x25, [sp, #32]
     36c:	ldp	x29, x30, [sp, #16]
     370:	add	sp, sp, #0x60
     374:	ret
     378:	adrp	x0, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     37c:	adrp	x1, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     380:	adrp	x3, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     384:	add	x0, x0, #0x0
     388:	add	x1, x1, #0x0
     38c:	add	x3, x3, #0x0
     390:	mov	w2, #0x8b                  	// #139
     394:	bl	0 <__assert_fail>
     398:	adrp	x0, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     39c:	adrp	x1, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     3a0:	adrp	x3, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     3a4:	add	x0, x0, #0x0
     3a8:	add	x1, x1, #0x0
     3ac:	add	x3, x3, #0x0
     3b0:	mov	w2, #0x2d                  	// #45
     3b4:	bl	0 <__assert_fail>

00000000000003b8 <_ZN4llvm9IRMutator12mutateModuleERNS_6ModuleEimm>:
     3b8:	stp	x29, x30, [sp, #-96]!
     3bc:	stp	x28, x27, [sp, #16]
     3c0:	stp	x26, x25, [sp, #32]
     3c4:	stp	x24, x23, [sp, #48]
     3c8:	stp	x22, x21, [sp, #64]
     3cc:	stp	x20, x19, [sp, #80]
     3d0:	mov	x29, sp
     3d4:	sub	sp, sp, #0x1, lsl #12
     3d8:	sub	sp, sp, #0x450
     3dc:	ldp	x25, x19, [x0]
     3e0:	mov	x21, x4
     3e4:	mov	x22, x3
     3e8:	stp	x0, x1, [sp, #16]
     3ec:	cmp	x25, x19
     3f0:	b.eq	4f0 <_ZN4llvm9IRMutator12mutateModuleERNS_6ModuleEimm+0x138>  // b.none
     3f4:	mov	x20, x1
     3f8:	mov	x24, xzr
     3fc:	mov	x23, xzr
     400:	mov	x26, xzr
     404:	str	w2, [sp, #8]
     408:	b	420 <_ZN4llvm9IRMutator12mutateModuleERNS_6ModuleEimm+0x68>
     40c:	str	x27, [x23]
     410:	add	x25, x25, #0x20
     414:	cmp	x19, x25
     418:	add	x23, x23, #0x8
     41c:	b.eq	4e8 <_ZN4llvm9IRMutator12mutateModuleERNS_6ModuleEimm+0x130>  // b.none
     420:	ldr	x8, [x25, #16]
     424:	cbz	x8, 6a4 <_ZN4llvm9IRMutator12mutateModuleERNS_6ModuleEimm+0x2ec>
     428:	ldr	x1, [x20]
     42c:	ldr	x8, [x25, #24]
     430:	mov	x0, x25
     434:	blr	x8
     438:	cmp	x26, x23
     43c:	mov	x27, x0
     440:	b.ne	40c <_ZN4llvm9IRMutator12mutateModuleERNS_6ModuleEimm+0x54>  // b.any
     444:	sub	x26, x23, x24
     448:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
     44c:	cmp	x26, x8
     450:	b.eq	6a8 <_ZN4llvm9IRMutator12mutateModuleERNS_6ModuleEimm+0x2f0>  // b.none
     454:	asr	x23, x26, #3
     458:	cmp	x26, #0x0
     45c:	csinc	x8, x23, xzr, ne  // ne = any
     460:	adds	x8, x8, x23
     464:	lsr	x10, x8, #60
     468:	cset	w9, cs  // cs = hs, nlast
     46c:	cmp	x10, #0x0
     470:	cset	w10, ne  // ne = any
     474:	orr	w9, w9, w10
     478:	cmp	w9, #0x0
     47c:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
     480:	csel	x20, x9, x8, ne  // ne = any
     484:	cbz	x20, 4d0 <_ZN4llvm9IRMutator12mutateModuleERNS_6ModuleEimm+0x118>
     488:	lsl	x0, x20, #3
     48c:	bl	0 <_Znwm>
     490:	mov	x28, x0
     494:	add	x23, x28, x23, lsl #3
     498:	cmp	x26, #0x1
     49c:	str	x27, [x23]
     4a0:	b.lt	4b4 <_ZN4llvm9IRMutator12mutateModuleERNS_6ModuleEimm+0xfc>  // b.tstop
     4a4:	mov	x0, x28
     4a8:	mov	x1, x24
     4ac:	mov	x2, x26
     4b0:	bl	0 <memmove>
     4b4:	cbz	x24, 4c0 <_ZN4llvm9IRMutator12mutateModuleERNS_6ModuleEimm+0x108>
     4b8:	mov	x0, x24
     4bc:	bl	0 <_ZdlPv>
     4c0:	add	x26, x28, x20, lsl #3
     4c4:	ldr	x20, [sp, #24]
     4c8:	mov	x24, x28
     4cc:	b	410 <_ZN4llvm9IRMutator12mutateModuleERNS_6ModuleEimm+0x58>
     4d0:	mov	x28, xzr
     4d4:	add	x23, x28, x23, lsl #3
     4d8:	cmp	x26, #0x1
     4dc:	str	x27, [x23]
     4e0:	b.ge	4a4 <_ZN4llvm9IRMutator12mutateModuleERNS_6ModuleEimm+0xec>  // b.tcont
     4e4:	b	4b4 <_ZN4llvm9IRMutator12mutateModuleERNS_6ModuleEimm+0xfc>
     4e8:	ldr	w2, [sp, #8]
     4ec:	b	4f8 <_ZN4llvm9IRMutator12mutateModuleERNS_6ModuleEimm+0x140>
     4f0:	mov	x23, xzr
     4f4:	mov	x24, xzr
     4f8:	mov	w10, #0x8965                	// #35173
     4fc:	mov	w11, #0xa41b                	// #42011
     500:	sub	x25, x23, x24
     504:	mov	w9, w2
     508:	mov	w8, #0x1                   	// #1
     50c:	movk	w10, #0x6c07, lsl #16
     510:	movk	w11, #0x1a41, lsl #16
     514:	mov	w12, #0x270                 	// #624
     518:	add	x13, sp, #0x20
     51c:	str	x9, [sp, #32]
     520:	lsr	x14, x9, #30
     524:	ubfx	w16, w8, #4, #12
     528:	eor	w9, w14, w9
     52c:	umull	x14, w16, w11
     530:	and	w15, w8, #0xffff
     534:	lsr	x14, x14, #34
     538:	msub	w14, w14, w12, w15
     53c:	madd	w9, w9, w10, w14
     540:	str	x9, [x13, x8, lsl #3]
     544:	add	x8, x8, #0x1
     548:	cmp	x8, #0x270
     54c:	b.ne	520 <_ZN4llvm9IRMutator12mutateModuleERNS_6ModuleEimm+0x168>  // b.any
     550:	adrp	x12, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     554:	ldr	d0, [x12]
     558:	asr	x26, x25, #3
     55c:	mov	w9, #0x1388                	// #5000
     560:	add	x10, sp, #0x20
     564:	mov	w11, #0x1398                	// #5016
     568:	add	x19, x10, x9
     56c:	add	x1, x10, x11
     570:	cmp	x26, #0x11
     574:	str	x8, [sp, #5024]
     578:	str	x1, [sp, #5032]
     57c:	str	d0, [sp, #5040]
     580:	b.cc	594 <_ZN4llvm9IRMutator12mutateModuleERNS_6ModuleEimm+0x1dc>  // b.lo, b.ul, b.last
     584:	mov	w3, #0x8                   	// #8
     588:	mov	x0, x19
     58c:	mov	x2, x26
     590:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     594:	cbz	x25, 5b0 <_ZN4llvm9IRMutator12mutateModuleERNS_6ModuleEimm+0x1f8>
     598:	ldr	x8, [sp, #5032]
     59c:	ldr	w9, [sp, #5040]
     5a0:	mov	x1, x24
     5a4:	mov	x2, x25
     5a8:	add	x0, x8, x9, lsl #3
     5ac:	bl	0 <memcpy>
     5b0:	ldr	w8, [sp, #5040]
     5b4:	ldr	w9, [sp, #5044]
     5b8:	str	x24, [sp, #8]
     5bc:	add	x8, x26, x8
     5c0:	cmp	x8, x9
     5c4:	b.hi	6d4 <_ZN4llvm9IRMutator12mutateModuleERNS_6ModuleEimm+0x31c>  // b.pmore
     5c8:	str	w8, [sp, #5040]
     5cc:	ldr	x8, [sp, #16]
     5d0:	ldp	x28, x24, [x8, #24]
     5d4:	cmp	x28, x24
     5d8:	b.eq	6b4 <_ZN4llvm9IRMutator12mutateModuleERNS_6ModuleEimm+0x2fc>  // b.none
     5dc:	mov	x25, xzr
     5e0:	mov	x23, xzr
     5e4:	mov	w20, #0x1                   	// #1
     5e8:	b	5f8 <_ZN4llvm9IRMutator12mutateModuleERNS_6ModuleEimm+0x240>
     5ec:	add	x28, x28, #0x8
     5f0:	cmp	x24, x28
     5f4:	b.eq	644 <_ZN4llvm9IRMutator12mutateModuleERNS_6ModuleEimm+0x28c>  // b.none
     5f8:	ldr	x26, [x28]
     5fc:	mov	x1, x22
     600:	mov	x2, x21
     604:	mov	x3, x25
     608:	ldr	x8, [x26]
     60c:	mov	x0, x26
     610:	ldr	x8, [x8, #16]
     614:	blr	x8
     618:	cbz	x0, 5ec <_ZN4llvm9IRMutator12mutateModuleERNS_6ModuleEimm+0x234>
     61c:	mov	x27, x0
     620:	add	x25, x0, x25
     624:	sub	x0, x29, #0x18
     628:	add	x1, sp, #0x20
     62c:	sub	x2, x29, #0x18
     630:	stp	x20, x25, [x29, #-24]
     634:	bl	0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     638:	cmp	x0, x27
     63c:	csel	x23, x23, x26, hi  // hi = pmore
     640:	b	5ec <_ZN4llvm9IRMutator12mutateModuleERNS_6ModuleEimm+0x234>
     644:	cbz	x25, 6b4 <_ZN4llvm9IRMutator12mutateModuleERNS_6ModuleEimm+0x2fc>
     648:	ldr	x8, [x23]
     64c:	ldr	x1, [sp, #24]
     650:	add	x2, sp, #0x20
     654:	mov	x0, x23
     658:	ldr	x8, [x8, #24]
     65c:	blr	x8
     660:	ldr	x0, [sp, #5032]
     664:	add	x8, x19, #0x10
     668:	cmp	x0, x8
     66c:	b.eq	674 <_ZN4llvm9IRMutator12mutateModuleERNS_6ModuleEimm+0x2bc>  // b.none
     670:	bl	0 <free>
     674:	ldr	x0, [sp, #8]
     678:	cbz	x0, 680 <_ZN4llvm9IRMutator12mutateModuleERNS_6ModuleEimm+0x2c8>
     67c:	bl	0 <_ZdlPv>
     680:	add	sp, sp, #0x1, lsl #12
     684:	add	sp, sp, #0x450
     688:	ldp	x20, x19, [sp, #80]
     68c:	ldp	x22, x21, [sp, #64]
     690:	ldp	x24, x23, [sp, #48]
     694:	ldp	x26, x25, [sp, #32]
     698:	ldp	x28, x27, [sp, #16]
     69c:	ldp	x29, x30, [sp], #96
     6a0:	ret
     6a4:	bl	0 <_ZSt25__throw_bad_function_callv>
     6a8:	adrp	x0, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     6ac:	add	x0, x0, #0x0
     6b0:	bl	0 <_ZSt20__throw_length_errorPKc>
     6b4:	adrp	x0, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     6b8:	adrp	x1, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     6bc:	adrp	x3, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     6c0:	add	x0, x0, #0x0
     6c4:	add	x1, x1, #0x0
     6c8:	add	x3, x3, #0x0
     6cc:	mov	w2, #0x2d                  	// #45
     6d0:	bl	0 <__assert_fail>
     6d4:	adrp	x0, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     6d8:	adrp	x1, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     6dc:	adrp	x3, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     6e0:	add	x0, x0, #0x0
     6e4:	add	x1, x1, #0x0
     6e8:	add	x3, x3, #0x0
     6ec:	mov	w2, #0x43                  	// #67
     6f0:	bl	0 <__assert_fail>

00000000000006f4 <_ZN4llvm18InjectorIRStrategy6mutateERNS_8FunctionERNS_15RandomIRBuilderE>:
     6f4:	sub	sp, sp, #0x60
     6f8:	stp	x29, x30, [sp, #16]
     6fc:	stp	x26, x25, [sp, #32]
     700:	stp	x24, x23, [sp, #48]
     704:	stp	x22, x21, [sp, #64]
     708:	stp	x20, x19, [sp, #80]
     70c:	add	x29, sp, #0x10
     710:	ldr	x23, [x1, #80]
     714:	add	x24, x1, #0x48
     718:	cmp	x24, x23
     71c:	b.eq	7dc <_ZN4llvm18InjectorIRStrategy6mutateERNS_8FunctionERNS_15RandomIRBuilderE+0xe8>  // b.none
     720:	mov	x20, x2
     724:	mov	x19, x1
     728:	mov	x21, x0
     72c:	mov	x22, xzr
     730:	mov	w25, #0x1                   	// #1
     734:	mov	w26, #0x1                   	// #1
     738:	ldrb	w8, [x23]
     73c:	tbnz	w8, #2, 7bc <_ZN4llvm18InjectorIRStrategy6mutateERNS_8FunctionERNS_15RandomIRBuilderE+0xc8>
     740:	mov	x0, sp
     744:	mov	x2, sp
     748:	mov	x1, x20
     74c:	stp	x25, x26, [sp]
     750:	bl	0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     754:	sub	x8, x23, #0x18
     758:	cmp	x23, #0x0
     75c:	ldr	x23, [x23, #8]
     760:	csel	x8, xzr, x8, eq  // eq = none
     764:	cmp	x0, #0x1
     768:	csel	x22, x22, x8, hi  // hi = pmore
     76c:	cmp	x24, x23
     770:	add	x26, x26, #0x1
     774:	b.ne	738 <_ZN4llvm18InjectorIRStrategy6mutateERNS_8FunctionERNS_15RandomIRBuilderE+0x44>  // b.any
     778:	cmp	x26, #0x1
     77c:	b.eq	7dc <_ZN4llvm18InjectorIRStrategy6mutateERNS_8FunctionERNS_15RandomIRBuilderE+0xe8>  // b.none
     780:	ldr	x8, [x21]
     784:	mov	x0, x21
     788:	mov	x1, x22
     78c:	mov	x2, x20
     790:	ldr	x8, [x8, #40]
     794:	blr	x8
     798:	mov	x0, x19
     79c:	bl	7fc <_ZL17eliminateDeadCodeRN4llvm8FunctionE>
     7a0:	ldp	x20, x19, [sp, #80]
     7a4:	ldp	x22, x21, [sp, #64]
     7a8:	ldp	x24, x23, [sp, #48]
     7ac:	ldp	x26, x25, [sp, #32]
     7b0:	ldp	x29, x30, [sp, #16]
     7b4:	add	sp, sp, #0x60
     7b8:	ret
     7bc:	adrp	x0, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     7c0:	adrp	x1, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     7c4:	adrp	x3, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     7c8:	add	x0, x0, #0x0
     7cc:	add	x1, x1, #0x0
     7d0:	add	x3, x3, #0x0
     7d4:	mov	w2, #0x8b                  	// #139
     7d8:	bl	0 <__assert_fail>
     7dc:	adrp	x0, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     7e0:	adrp	x1, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     7e4:	adrp	x3, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     7e8:	add	x0, x0, #0x0
     7ec:	add	x1, x1, #0x0
     7f0:	add	x3, x3, #0x0
     7f4:	mov	w2, #0x2d                  	// #45
     7f8:	bl	0 <__assert_fail>

00000000000007fc <_ZL17eliminateDeadCodeRN4llvm8FunctionE>:
     7fc:	sub	sp, sp, #0x130
     800:	stp	x29, x30, [sp, #256]
     804:	str	x28, [sp, #272]
     808:	stp	x20, x19, [sp, #288]
     80c:	add	x29, sp, #0x100
     810:	mov	x19, x0
     814:	mov	w0, #0x10                  	// #16
     818:	stp	xzr, xzr, [x29, #-32]
     81c:	sturb	wzr, [x29, #-8]
     820:	stur	xzr, [x29, #-16]
     824:	bl	0 <_Znwm>
     828:	adrp	x8, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     82c:	ldr	x8, [x8]
     830:	str	x0, [sp, #120]
     834:	add	x2, sp, #0x78
     838:	mov	x1, xzr
     83c:	add	x8, x8, #0x10
     840:	str	x8, [x0]
     844:	sub	x0, x29, #0x20
     848:	bl	0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     84c:	stp	xzr, xzr, [sp, #120]
     850:	str	wzr, [sp, #144]
     854:	str	xzr, [sp, #136]
     858:	stp	xzr, xzr, [sp, #160]
     85c:	str	xzr, [sp, #152]
     860:	str	wzr, [sp, #176]
     864:	stp	xzr, xzr, [sp, #192]
     868:	str	xzr, [sp, #184]
     86c:	str	wzr, [sp, #208]
     870:	strb	wzr, [sp, #216]
     874:	adrp	x8, 0 <_ZN4llvm21TargetLibraryAnalysis3KeyE>
     878:	ldr	x8, [x8]
     87c:	add	x0, sp, #0x78
     880:	add	x1, x29, #0x18
     884:	add	x2, x29, #0x18
     888:	mov	x3, xzr
     88c:	str	x8, [x29, #24]
     890:	bl	0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     894:	ldr	x8, [x29, #24]
     898:	mov	x9, xzr
     89c:	stp	x8, xzr, [x0]
     8a0:	cbnz	x9, 8e4 <_ZL17eliminateDeadCodeRN4llvm8FunctionE+0xe8>
     8a4:	mov	x20, x0
     8a8:	mov	w0, #0xd8                  	// #216
     8ac:	bl	0 <_Znwm>
     8b0:	adrp	x9, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     8b4:	ldr	x9, [x9]
     8b8:	strb	wzr, [x0, #8]
     8bc:	strb	wzr, [x0, #208]
     8c0:	mov	x8, x0
     8c4:	add	x9, x9, #0x10
     8c8:	str	x9, [x0]
     8cc:	ldr	x0, [x20, #8]
     8d0:	str	x8, [x20, #8]
     8d4:	cbz	x0, 8e4 <_ZL17eliminateDeadCodeRN4llvm8FunctionE+0xe8>
     8d8:	ldr	x8, [x0]
     8dc:	ldr	x8, [x8, #8]
     8e0:	blr	x8
     8e4:	adrp	x8, 0 <_ZN4llvm27PassInstrumentationAnalysis3KeyE>
     8e8:	ldr	w10, [sp, #144]
     8ec:	ldr	x8, [x8]
     8f0:	str	x8, [x29, #24]
     8f4:	cbz	w10, 968 <_ZL17eliminateDeadCodeRN4llvm8FunctionE+0x16c>
     8f8:	orr	x9, x8, #0x8
     8fc:	cmn	x9, #0x8
     900:	b.eq	a80 <_ZL17eliminateDeadCodeRN4llvm8FunctionE+0x284>  // b.none
     904:	ldr	x9, [sp, #128]
     908:	ubfx	x11, x8, #4, #28
     90c:	sub	w10, w10, #0x1
     910:	eor	w11, w11, w8, lsr #9
     914:	and	w11, w10, w11
     918:	add	x20, x9, w11, uxtw #4
     91c:	ldr	x13, [x20]
     920:	cmp	x13, x8
     924:	b.eq	988 <_ZL17eliminateDeadCodeRN4llvm8FunctionE+0x18c>  // b.none
     928:	mov	x12, xzr
     92c:	mov	w15, #0x1                   	// #1
     930:	mov	x14, #0xfffffffffffffff0    	// #-16
     934:	cmn	x13, #0x8
     938:	b.eq	a74 <_ZL17eliminateDeadCodeRN4llvm8FunctionE+0x278>  // b.none
     93c:	cmp	x12, #0x0
     940:	add	w11, w11, w15
     944:	ccmp	x13, x14, #0x0, eq  // eq = none
     948:	and	w11, w11, w10
     94c:	csel	x12, x12, x20, ne  // ne = any
     950:	add	x20, x9, w11, uxtw #4
     954:	ldr	x13, [x20]
     958:	add	w15, w15, #0x1
     95c:	cmp	x13, x8
     960:	b.eq	988 <_ZL17eliminateDeadCodeRN4llvm8FunctionE+0x18c>  // b.none
     964:	b	934 <_ZL17eliminateDeadCodeRN4llvm8FunctionE+0x138>
     968:	mov	x3, xzr
     96c:	add	x0, sp, #0x78
     970:	add	x1, x29, #0x18
     974:	add	x2, x29, #0x18
     978:	bl	0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     97c:	ldr	x8, [x29, #24]
     980:	mov	x20, x0
     984:	stp	x8, xzr, [x0]
     988:	ldr	x8, [x20, #8]
     98c:	cbnz	x8, 9c4 <_ZL17eliminateDeadCodeRN4llvm8FunctionE+0x1c8>
     990:	mov	w0, #0x10                  	// #16
     994:	bl	0 <_Znwm>
     998:	adrp	x9, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     99c:	ldr	x9, [x9]
     9a0:	mov	x8, x0
     9a4:	add	x9, x9, #0x10
     9a8:	stp	x9, xzr, [x0]
     9ac:	ldr	x0, [x20, #8]
     9b0:	str	x8, [x20, #8]
     9b4:	cbz	x0, 9c4 <_ZL17eliminateDeadCodeRN4llvm8FunctionE+0x1c8>
     9b8:	ldr	x8, [x0]
     9bc:	ldr	x8, [x8, #8]
     9c0:	blr	x8
     9c4:	add	x8, sp, #0x8
     9c8:	sub	x0, x29, #0x20
     9cc:	add	x2, sp, #0x78
     9d0:	mov	x1, x19
     9d4:	bl	0 <_ZN4llvm11PassManagerINS_8FunctionENS_15AnalysisManagerIS1_JEEEJEE3runERS1_RS3_>
     9d8:	ldp	x8, x0, [sp, #72]
     9dc:	cmp	x0, x8
     9e0:	b.eq	9e8 <_ZL17eliminateDeadCodeRN4llvm8FunctionE+0x1ec>  // b.none
     9e4:	bl	0 <free>
     9e8:	ldr	x8, [sp, #64]
     9ec:	ldp	x9, x0, [sp, #16]
     9f0:	add	x8, x8, #0x1
     9f4:	cmp	x0, x9
     9f8:	str	x8, [sp, #64]
     9fc:	b.eq	a04 <_ZL17eliminateDeadCodeRN4llvm8FunctionE+0x208>  // b.none
     a00:	bl	0 <free>
     a04:	ldr	x8, [sp, #8]
     a08:	add	x0, sp, #0x78
     a0c:	add	x8, x8, #0x1
     a10:	str	x8, [sp, #8]
     a14:	bl	0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     a18:	ldp	x19, x20, [x29, #-32]
     a1c:	cmp	x19, x20
     a20:	b.ne	a50 <_ZL17eliminateDeadCodeRN4llvm8FunctionE+0x254>  // b.any
     a24:	cbz	x19, a30 <_ZL17eliminateDeadCodeRN4llvm8FunctionE+0x234>
     a28:	mov	x0, x19
     a2c:	bl	0 <_ZdlPv>
     a30:	ldp	x20, x19, [sp, #288]
     a34:	ldr	x28, [sp, #272]
     a38:	ldp	x29, x30, [sp, #256]
     a3c:	add	sp, sp, #0x130
     a40:	ret
     a44:	str	xzr, [x19], #8
     a48:	cmp	x20, x19
     a4c:	b.eq	a68 <_ZL17eliminateDeadCodeRN4llvm8FunctionE+0x26c>  // b.none
     a50:	ldr	x0, [x19]
     a54:	cbz	x0, a44 <_ZL17eliminateDeadCodeRN4llvm8FunctionE+0x248>
     a58:	ldr	x8, [x0]
     a5c:	ldr	x8, [x8, #8]
     a60:	blr	x8
     a64:	b	a44 <_ZL17eliminateDeadCodeRN4llvm8FunctionE+0x248>
     a68:	ldur	x19, [x29, #-32]
     a6c:	cbnz	x19, a28 <_ZL17eliminateDeadCodeRN4llvm8FunctionE+0x22c>
     a70:	b	a30 <_ZL17eliminateDeadCodeRN4llvm8FunctionE+0x234>
     a74:	cmp	x12, #0x0
     a78:	csel	x3, x20, x12, eq  // eq = none
     a7c:	b	96c <_ZL17eliminateDeadCodeRN4llvm8FunctionE+0x170>
     a80:	adrp	x0, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     a84:	adrp	x1, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     a88:	adrp	x3, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     a8c:	add	x0, x0, #0x0
     a90:	add	x1, x1, #0x0
     a94:	add	x3, x3, #0x0
     a98:	mov	w2, #0x252                 	// #594
     a9c:	bl	0 <__assert_fail>

0000000000000aa0 <_ZN4llvm18InjectorIRStrategy13getDefaultOpsEv>:
     aa0:	stp	x29, x30, [sp, #-32]!
     aa4:	str	x19, [sp, #16]
     aa8:	mov	x29, sp
     aac:	mov	x0, x8
     ab0:	mov	x19, x8
     ab4:	stp	xzr, xzr, [x8]
     ab8:	str	xzr, [x8, #16]
     abc:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
     ac0:	mov	x0, x19
     ac4:	bl	0 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
     ac8:	mov	x0, x19
     acc:	bl	0 <_ZN4llvm28describeFuzzerControlFlowOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
     ad0:	mov	x0, x19
     ad4:	bl	0 <_ZN4llvm24describeFuzzerPointerOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
     ad8:	mov	x0, x19
     adc:	bl	0 <_ZN4llvm26describeFuzzerAggregateOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
     ae0:	mov	x0, x19
     ae4:	ldr	x19, [sp, #16]
     ae8:	ldp	x29, x30, [sp], #32
     aec:	b	0 <_ZN4llvm23describeFuzzerVectorOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>

0000000000000af0 <_ZN4llvm18InjectorIRStrategy15chooseOperationEPNS_5ValueERNS_15RandomIRBuilderE>:
     af0:	sub	sp, sp, #0x180
     af4:	str	d8, [sp, #272]
     af8:	stp	x29, x30, [sp, #288]
     afc:	stp	x28, x27, [sp, #304]
     b00:	stp	x26, x25, [sp, #320]
     b04:	stp	x24, x23, [sp, #336]
     b08:	stp	x22, x21, [sp, #352]
     b0c:	stp	x20, x19, [sp, #368]
     b10:	add	x29, sp, #0x110
     b14:	ldp	x24, x23, [x0, #8]
     b18:	mov	x22, x2
     b1c:	mov	x21, x1
     b20:	mov	x19, x0
     b24:	cmp	x23, x24
     b28:	mov	x20, x8
     b2c:	b.eq	b70 <_ZN4llvm18InjectorIRStrategy15chooseOperationEPNS_5ValueERNS_15RandomIRBuilderE+0x80>  // b.none
     b30:	ldr	w8, [x24, #16]
     b34:	cbz	w8, de0 <_ZN4llvm18InjectorIRStrategy15chooseOperationEPNS_5ValueERNS_15RandomIRBuilderE+0x2f0>
     b38:	ldr	x0, [x24, #8]
     b3c:	stp	xzr, xzr, [sp, #8]
     b40:	stur	x21, [x29, #-64]
     b44:	ldr	x8, [x0, #16]
     b48:	cbz	x8, ddc <_ZN4llvm18InjectorIRStrategy15chooseOperationEPNS_5ValueERNS_15RandomIRBuilderE+0x2ec>
     b4c:	ldr	x8, [x0, #24]
     b50:	add	x1, sp, #0x8
     b54:	sub	x2, x29, #0x40
     b58:	blr	x8
     b5c:	tbnz	w0, #0, b70 <_ZN4llvm18InjectorIRStrategy15chooseOperationEPNS_5ValueERNS_15RandomIRBuilderE+0x80>
     b60:	add	x24, x24, #0xb8
     b64:	cmp	x24, x23
     b68:	b.ne	b30 <_ZN4llvm18InjectorIRStrategy15chooseOperationEPNS_5ValueERNS_15RandomIRBuilderE+0x40>  // b.any
     b6c:	mov	x24, x23
     b70:	ldr	x25, [x19, #16]
     b74:	adrp	x8, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     b78:	ldr	d8, [x8]
     b7c:	add	x9, sp, #0x8
     b80:	add	x8, x9, #0x20
     b84:	add	x19, x9, #0x10
     b88:	str	x8, [sp, #24]
     b8c:	cmp	x25, x24
     b90:	mov	x8, xzr
     b94:	str	x22, [sp, #8]
     b98:	str	wzr, [sp, #16]
     b9c:	str	d8, [sp, #32]
     ba0:	str	xzr, [sp, #184]
     ba4:	str	xzr, [sp, #200]
     ba8:	b.eq	d24 <_ZN4llvm18InjectorIRStrategy15chooseOperationEPNS_5ValueERNS_15RandomIRBuilderE+0x234>  // b.none
     bac:	sub	x26, x29, #0x40
     bb0:	add	x27, x9, #0xa0
     bb4:	mov	w28, #0x1                   	// #1
     bb8:	add	x8, x8, #0x1
     bbc:	sub	x0, x29, #0x40
     bc0:	sub	x2, x29, #0x40
     bc4:	mov	x1, x22
     bc8:	str	x8, [sp, #200]
     bcc:	stp	x28, x8, [x29, #-64]
     bd0:	bl	0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     bd4:	cmp	x0, #0x1
     bd8:	b.hi	c50 <_ZN4llvm18InjectorIRStrategy15chooseOperationEPNS_5ValueERNS_15RandomIRBuilderE+0x160>  // b.pmore
     bdc:	ldr	w8, [x24]
     be0:	add	x1, x24, #0x8
     be4:	mov	x0, x19
     be8:	str	w8, [sp, #16]
     bec:	bl	0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     bf0:	stur	xzr, [x29, #-48]
     bf4:	ldr	x8, [x24, #168]
     bf8:	cbz	x8, c18 <_ZN4llvm18InjectorIRStrategy15chooseOperationEPNS_5ValueERNS_15RandomIRBuilderE+0x128>
     bfc:	add	x1, x24, #0x98
     c00:	sub	x0, x29, #0x40
     c04:	mov	w2, #0x2                   	// #2
     c08:	blr	x8
     c0c:	ldp	x9, x8, [x24, #168]
     c10:	stp	x9, x8, [x29, #-48]
     c14:	b	c1c <_ZN4llvm18InjectorIRStrategy15chooseOperationEPNS_5ValueERNS_15RandomIRBuilderE+0x12c>
     c18:	mov	x9, xzr
     c1c:	ldr	q0, [x26]
     c20:	ldr	q1, [x27]
     c24:	str	q0, [x27]
     c28:	ldur	q2, [sp, #184]
     c2c:	stp	x9, x8, [sp, #184]
     c30:	str	q0, [x26, #32]
     c34:	fmov	x8, d2
     c38:	stp	q1, q2, [x26]
     c3c:	cbz	x8, c50 <_ZN4llvm18InjectorIRStrategy15chooseOperationEPNS_5ValueERNS_15RandomIRBuilderE+0x160>
     c40:	sub	x0, x29, #0x40
     c44:	sub	x1, x29, #0x40
     c48:	mov	w2, #0x3                   	// #3
     c4c:	blr	x8
     c50:	add	x8, x24, #0xb8
     c54:	cmp	x8, x23
     c58:	mov	x24, x23
     c5c:	b.eq	ca4 <_ZN4llvm18InjectorIRStrategy15chooseOperationEPNS_5ValueERNS_15RandomIRBuilderE+0x1b4>  // b.none
     c60:	mov	x24, x8
     c64:	ldr	w8, [x24, #16]
     c68:	cbz	w8, de0 <_ZN4llvm18InjectorIRStrategy15chooseOperationEPNS_5ValueERNS_15RandomIRBuilderE+0x2f0>
     c6c:	ldr	x0, [x24, #8]
     c70:	stp	xzr, xzr, [x29, #-64]
     c74:	stur	x21, [x29, #-32]
     c78:	ldr	x8, [x0, #16]
     c7c:	cbz	x8, ddc <_ZN4llvm18InjectorIRStrategy15chooseOperationEPNS_5ValueERNS_15RandomIRBuilderE+0x2ec>
     c80:	ldr	x8, [x0, #24]
     c84:	sub	x1, x29, #0x40
     c88:	sub	x2, x29, #0x20
     c8c:	blr	x8
     c90:	tbnz	w0, #0, ca4 <_ZN4llvm18InjectorIRStrategy15chooseOperationEPNS_5ValueERNS_15RandomIRBuilderE+0x1b4>
     c94:	add	x24, x24, #0xb8
     c98:	cmp	x23, x24
     c9c:	b.ne	c64 <_ZN4llvm18InjectorIRStrategy15chooseOperationEPNS_5ValueERNS_15RandomIRBuilderE+0x174>  // b.any
     ca0:	mov	x24, x23
     ca4:	ldr	x8, [sp, #200]
     ca8:	cmp	x24, x25
     cac:	b.eq	cb8 <_ZN4llvm18InjectorIRStrategy15chooseOperationEPNS_5ValueERNS_15RandomIRBuilderE+0x1c8>  // b.none
     cb0:	ldr	x22, [sp, #8]
     cb4:	b	bb8 <_ZN4llvm18InjectorIRStrategy15chooseOperationEPNS_5ValueERNS_15RandomIRBuilderE+0xc8>
     cb8:	cbz	x8, d20 <_ZN4llvm18InjectorIRStrategy15chooseOperationEPNS_5ValueERNS_15RandomIRBuilderE+0x230>
     cbc:	ldr	w8, [sp, #16]
     cc0:	ldr	w9, [sp, #32]
     cc4:	add	x10, x20, #0x18
     cc8:	mov	x0, x20
     ccc:	str	w8, [x20]
     cd0:	str	x10, [x0, #8]!
     cd4:	str	d8, [x20, #16]
     cd8:	cbz	w9, ce4 <_ZN4llvm18InjectorIRStrategy15chooseOperationEPNS_5ValueERNS_15RandomIRBuilderE+0x1f4>
     cdc:	mov	x1, x19
     ce0:	bl	0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     ce4:	ldr	x8, [sp, #184]
     ce8:	str	xzr, [x20, #168]
     cec:	cbz	x8, d10 <_ZN4llvm18InjectorIRStrategy15chooseOperationEPNS_5ValueERNS_15RandomIRBuilderE+0x220>
     cf0:	add	x9, sp, #0x8
     cf4:	add	x0, x20, #0x98
     cf8:	add	x1, x9, #0xa0
     cfc:	mov	w2, #0x2                   	// #2
     d00:	blr	x8
     d04:	ldur	q0, [sp, #184]
     d08:	fmov	x8, d0
     d0c:	stur	q0, [x20, #168]
     d10:	mov	w9, #0x1                   	// #1
     d14:	strb	w9, [x20, #184]
     d18:	cbnz	x8, d34 <_ZN4llvm18InjectorIRStrategy15chooseOperationEPNS_5ValueERNS_15RandomIRBuilderE+0x244>
     d1c:	b	d48 <_ZN4llvm18InjectorIRStrategy15chooseOperationEPNS_5ValueERNS_15RandomIRBuilderE+0x258>
     d20:	ldr	x8, [sp, #184]
     d24:	mov	w9, wzr
     d28:	strb	wzr, [x20]
     d2c:	strb	w9, [x20, #184]
     d30:	cbz	x8, d48 <_ZN4llvm18InjectorIRStrategy15chooseOperationEPNS_5ValueERNS_15RandomIRBuilderE+0x258>
     d34:	add	x9, sp, #0x8
     d38:	add	x0, x9, #0xa0
     d3c:	mov	w2, #0x3                   	// #3
     d40:	mov	x1, x0
     d44:	blr	x8
     d48:	ldr	w8, [sp, #32]
     d4c:	ldr	x20, [sp, #24]
     d50:	cbz	w8, da4 <_ZN4llvm18InjectorIRStrategy15chooseOperationEPNS_5ValueERNS_15RandomIRBuilderE+0x2b4>
     d54:	lsl	x21, x8, #6
     d58:	b	d64 <_ZN4llvm18InjectorIRStrategy15chooseOperationEPNS_5ValueERNS_15RandomIRBuilderE+0x274>
     d5c:	subs	x21, x21, #0x40
     d60:	b.eq	da0 <_ZN4llvm18InjectorIRStrategy15chooseOperationEPNS_5ValueERNS_15RandomIRBuilderE+0x2b0>  // b.none
     d64:	add	x22, x20, x21
     d68:	ldur	x8, [x22, #-16]
     d6c:	cbz	x8, d80 <_ZN4llvm18InjectorIRStrategy15chooseOperationEPNS_5ValueERNS_15RandomIRBuilderE+0x290>
     d70:	sub	x0, x22, #0x20
     d74:	mov	w2, #0x3                   	// #3
     d78:	mov	x1, x0
     d7c:	blr	x8
     d80:	ldur	x8, [x22, #-48]
     d84:	cbz	x8, d5c <_ZN4llvm18InjectorIRStrategy15chooseOperationEPNS_5ValueERNS_15RandomIRBuilderE+0x26c>
     d88:	add	x9, x20, x21
     d8c:	sub	x0, x9, #0x40
     d90:	mov	w2, #0x3                   	// #3
     d94:	mov	x1, x0
     d98:	blr	x8
     d9c:	b	d5c <_ZN4llvm18InjectorIRStrategy15chooseOperationEPNS_5ValueERNS_15RandomIRBuilderE+0x26c>
     da0:	ldr	x20, [sp, #24]
     da4:	add	x8, x19, #0x10
     da8:	cmp	x20, x8
     dac:	b.eq	db8 <_ZN4llvm18InjectorIRStrategy15chooseOperationEPNS_5ValueERNS_15RandomIRBuilderE+0x2c8>  // b.none
     db0:	mov	x0, x20
     db4:	bl	0 <free>
     db8:	ldp	x20, x19, [sp, #368]
     dbc:	ldp	x22, x21, [sp, #352]
     dc0:	ldp	x24, x23, [sp, #336]
     dc4:	ldp	x26, x25, [sp, #320]
     dc8:	ldp	x28, x27, [sp, #304]
     dcc:	ldp	x29, x30, [sp, #288]
     dd0:	ldr	d8, [sp, #272]
     dd4:	add	sp, sp, #0x180
     dd8:	ret
     ddc:	bl	0 <_ZSt25__throw_bad_function_callv>
     de0:	adrp	x0, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     de4:	adrp	x1, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     de8:	adrp	x3, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     dec:	add	x0, x0, #0x0
     df0:	add	x1, x1, #0x0
     df4:	add	x3, x3, #0x0
     df8:	mov	w2, #0x95                  	// #149
     dfc:	bl	0 <__assert_fail>

0000000000000e00 <_ZN4llvm18InjectorIRStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE>:
     e00:	stp	x29, x30, [sp, #-96]!
     e04:	stp	x28, x27, [sp, #16]
     e08:	stp	x26, x25, [sp, #32]
     e0c:	stp	x24, x23, [sp, #48]
     e10:	stp	x22, x21, [sp, #64]
     e14:	stp	x20, x19, [sp, #80]
     e18:	mov	x29, sp
     e1c:	sub	sp, sp, #0x260
     e20:	adrp	x8, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     e24:	ldr	d0, [x8]
     e28:	add	x8, sp, #0x130
     e2c:	mov	x24, x0
     e30:	add	x21, x8, #0x10
     e34:	mov	x0, x1
     e38:	mov	x20, x2
     e3c:	mov	x19, x1
     e40:	str	x21, [sp, #304]
     e44:	str	d0, [sp, #312]
     e48:	bl	0 <_ZNK4llvm10BasicBlock19getFirstInsertionPtEv>
     e4c:	add	x23, x19, #0x28
     e50:	cmp	x23, x0
     e54:	b.eq	ecc <_ZN4llvm18InjectorIRStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0xcc>  // b.none
     e58:	mov	x22, x0
     e5c:	ldrb	w8, [x22]
     e60:	tbnz	w8, #2, 124c <_ZN4llvm18InjectorIRStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0x44c>
     e64:	ldr	w8, [sp, #312]
     e68:	ldr	w9, [sp, #316]
     e6c:	sub	x10, x22, #0x18
     e70:	cmp	x22, #0x0
     e74:	csel	x25, xzr, x10, eq  // eq = none
     e78:	cmp	w8, w9
     e7c:	b.cs	eb0 <_ZN4llvm18InjectorIRStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0xb0>  // b.hs, b.nlast
     e80:	ldr	x9, [sp, #304]
     e84:	str	x25, [x9, w8, uxtw #3]
     e88:	ldr	w8, [sp, #312]
     e8c:	ldr	w9, [sp, #316]
     e90:	cmp	w8, w9
     e94:	b.cs	122c <_ZN4llvm18InjectorIRStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0x42c>  // b.hs, b.nlast
     e98:	add	w8, w8, #0x1
     e9c:	str	w8, [sp, #312]
     ea0:	ldr	x22, [x22, #8]
     ea4:	cmp	x23, x22
     ea8:	b.ne	e5c <_ZN4llvm18InjectorIRStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0x5c>  // b.any
     eac:	b	ed4 <_ZN4llvm18InjectorIRStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0xd4>
     eb0:	add	x0, sp, #0x130
     eb4:	mov	w3, #0x8                   	// #8
     eb8:	mov	x1, x21
     ebc:	mov	x2, xzr
     ec0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     ec4:	ldr	w8, [sp, #312]
     ec8:	b	e80 <_ZN4llvm18InjectorIRStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0x80>
     ecc:	ldr	w8, [sp, #312]
     ed0:	cbz	w8, 11d8 <_ZN4llvm18InjectorIRStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0x3d8>
     ed4:	mov	w8, w8
     ed8:	sub	x8, x8, #0x1
     edc:	add	x0, sp, #0x50
     ee0:	add	x2, sp, #0x50
     ee4:	mov	x1, x20
     ee8:	stp	xzr, x8, [sp, #80]
     eec:	bl	0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     ef0:	ldr	w26, [sp, #312]
     ef4:	cmp	x0, x26
     ef8:	b.hi	126c <_ZN4llvm18InjectorIRStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0x46c>  // b.pmore
     efc:	ldr	x22, [sp, #304]
     f00:	adrp	x8, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
     f04:	ldr	d0, [x8]
     f08:	mov	x21, x0
     f0c:	add	x8, sp, #0x110
     f10:	add	x23, x8, #0x10
     f14:	mov	x0, x20
     f18:	mov	x1, x19
     f1c:	mov	x2, x22
     f20:	mov	x3, x21
     f24:	str	x23, [sp, #272]
     f28:	str	d0, [sp, #280]
     f2c:	bl	0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
     f30:	ldr	w8, [sp, #280]
     f34:	ldr	w9, [sp, #284]
     f38:	mov	x25, x0
     f3c:	cmp	w8, w9
     f40:	b.cs	1210 <_ZN4llvm18InjectorIRStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0x410>  // b.hs, b.nlast
     f44:	ldr	x9, [sp, #272]
     f48:	str	x25, [x9, w8, uxtw #3]
     f4c:	ldr	w8, [sp, #280]
     f50:	ldr	w9, [sp, #284]
     f54:	cmp	w8, w9
     f58:	b.cs	122c <_ZN4llvm18InjectorIRStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0x42c>  // b.hs, b.nlast
     f5c:	ldr	x9, [sp, #272]
     f60:	add	w8, w8, #0x1
     f64:	str	w8, [sp, #280]
     f68:	add	x8, sp, #0x50
     f6c:	ldr	x1, [x9]
     f70:	mov	x0, x24
     f74:	mov	x2, x20
     f78:	add	x25, sp, #0x50
     f7c:	bl	af0 <_ZN4llvm18InjectorIRStrategy15chooseOperationEPNS_5ValueERNS_15RandomIRBuilderE>
     f80:	ldrb	w8, [sp, #264]
     f84:	cbz	w8, 11c0 <_ZN4llvm18InjectorIRStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0x3c0>
     f88:	ldr	w8, [sp, #96]
     f8c:	cmp	w8, #0x1
     f90:	b.eq	10c4 <_ZN4llvm18InjectorIRStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0x2c4>  // b.none
     f94:	ldr	x9, [sp, #88]
     f98:	add	x10, sp, #0x10
     f9c:	lsl	x8, x8, #6
     fa0:	add	x24, x10, #0x20
     fa4:	add	x25, x9, #0x40
     fa8:	sub	x28, x8, #0x40
     fac:	str	x26, [sp, #8]
     fb0:	b	fc0 <_ZN4llvm18InjectorIRStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0x1c0>
     fb4:	subs	x28, x28, #0x40
     fb8:	add	x25, x25, #0x40
     fbc:	b.eq	10b4 <_ZN4llvm18InjectorIRStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0x2b4>  // b.none
     fc0:	str	xzr, [sp, #32]
     fc4:	ldr	x26, [sp, #272]
     fc8:	ldr	x8, [x25, #16]
     fcc:	ldr	w27, [sp, #280]
     fd0:	cbz	x8, fec <_ZN4llvm18InjectorIRStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0x1ec>
     fd4:	add	x0, sp, #0x10
     fd8:	mov	w2, #0x2                   	// #2
     fdc:	mov	x1, x25
     fe0:	blr	x8
     fe4:	ldr	q0, [x25, #16]
     fe8:	str	q0, [sp, #32]
     fec:	str	xzr, [sp, #64]
     ff0:	ldr	x8, [x25, #48]
     ff4:	cbz	x8, 1010 <_ZN4llvm18InjectorIRStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0x210>
     ff8:	add	x1, x25, #0x20
     ffc:	mov	w2, #0x2                   	// #2
    1000:	mov	x0, x24
    1004:	blr	x8
    1008:	ldr	q0, [x25, #48]
    100c:	str	q0, [sp, #64]
    1010:	add	x6, sp, #0x10
    1014:	mov	x0, x20
    1018:	mov	x1, x19
    101c:	mov	x2, x22
    1020:	mov	x3, x21
    1024:	mov	x4, x26
    1028:	mov	x5, x27
    102c:	bl	0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE>
    1030:	ldr	w8, [sp, #280]
    1034:	ldr	w9, [sp, #284]
    1038:	mov	x26, x0
    103c:	cmp	w8, w9
    1040:	b.cs	1098 <_ZN4llvm18InjectorIRStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0x298>  // b.hs, b.nlast
    1044:	ldr	x9, [sp, #272]
    1048:	str	x26, [x9, w8, uxtw #3]
    104c:	ldr	w9, [sp, #280]
    1050:	ldr	w8, [sp, #284]
    1054:	cmp	w9, w8
    1058:	b.cs	122c <_ZN4llvm18InjectorIRStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0x42c>  // b.hs, b.nlast
    105c:	ldr	x8, [sp, #64]
    1060:	add	w9, w9, #0x1
    1064:	str	w9, [sp, #280]
    1068:	cbz	x8, 107c <_ZN4llvm18InjectorIRStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0x27c>
    106c:	mov	w2, #0x3                   	// #3
    1070:	mov	x0, x24
    1074:	mov	x1, x24
    1078:	blr	x8
    107c:	ldr	x8, [sp, #32]
    1080:	cbz	x8, fb4 <_ZN4llvm18InjectorIRStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0x1b4>
    1084:	add	x0, sp, #0x10
    1088:	add	x1, sp, #0x10
    108c:	mov	w2, #0x3                   	// #3
    1090:	blr	x8
    1094:	b	fb4 <_ZN4llvm18InjectorIRStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0x1b4>
    1098:	add	x0, sp, #0x110
    109c:	mov	w3, #0x8                   	// #8
    10a0:	mov	x1, x23
    10a4:	mov	x2, xzr
    10a8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    10ac:	ldr	w8, [sp, #280]
    10b0:	b	1044 <_ZN4llvm18InjectorIRStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0x244>
    10b4:	ldrb	w8, [sp, #264]
    10b8:	ldr	x26, [sp, #8]
    10bc:	add	x25, sp, #0x50
    10c0:	cbz	w8, 12b0 <_ZN4llvm18InjectorIRStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0x4b0>
    10c4:	ldr	w8, [sp, #312]
    10c8:	cmp	x21, x8
    10cc:	b.cs	128c <_ZN4llvm18InjectorIRStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0x48c>  // b.hs, b.nlast
    10d0:	ldr	x8, [sp, #304]
    10d4:	ldr	w9, [sp, #280]
    10d8:	ldr	x10, [sp, #272]
    10dc:	ldr	x11, [sp, #248]
    10e0:	ldr	x8, [x8, x21, lsl #3]
    10e4:	stp	x10, x9, [x29, #-24]
    10e8:	stur	x8, [x29, #-32]
    10ec:	cbz	x11, 12ac <_ZN4llvm18InjectorIRStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0x4ac>
    10f0:	ldr	x8, [sp, #256]
    10f4:	add	x9, sp, #0x50
    10f8:	add	x23, x9, #0x98
    10fc:	sub	x1, x29, #0x18
    1100:	sub	x2, x29, #0x20
    1104:	mov	x0, x23
    1108:	blr	x8
    110c:	cbz	x0, 1128 <_ZN4llvm18InjectorIRStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0x328>
    1110:	mov	x4, x0
    1114:	sub	x3, x26, x21
    1118:	add	x2, x22, x21, lsl #3
    111c:	mov	x0, x20
    1120:	mov	x1, x19
    1124:	bl	0 <_ZN4llvm15RandomIRBuilder13connectToSinkERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEEPNS_5ValueE>
    1128:	ldrb	w8, [sp, #264]
    112c:	cbz	w8, 11c0 <_ZN4llvm18InjectorIRStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0x3c0>
    1130:	ldr	x8, [sp, #248]
    1134:	cbz	x8, 1148 <_ZN4llvm18InjectorIRStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0x348>
    1138:	mov	w2, #0x3                   	// #3
    113c:	mov	x0, x23
    1140:	mov	x1, x23
    1144:	blr	x8
    1148:	ldr	w8, [sp, #96]
    114c:	ldr	x19, [sp, #88]
    1150:	add	x20, x25, #0x8
    1154:	cbz	w8, 11a8 <_ZN4llvm18InjectorIRStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0x3a8>
    1158:	lsl	x21, x8, #6
    115c:	b	1168 <_ZN4llvm18InjectorIRStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0x368>
    1160:	subs	x21, x21, #0x40
    1164:	b.eq	11a4 <_ZN4llvm18InjectorIRStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0x3a4>  // b.none
    1168:	add	x22, x19, x21
    116c:	ldur	x8, [x22, #-16]
    1170:	cbz	x8, 1184 <_ZN4llvm18InjectorIRStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0x384>
    1174:	sub	x0, x22, #0x20
    1178:	mov	w2, #0x3                   	// #3
    117c:	mov	x1, x0
    1180:	blr	x8
    1184:	ldur	x8, [x22, #-48]
    1188:	cbz	x8, 1160 <_ZN4llvm18InjectorIRStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0x360>
    118c:	add	x9, x19, x21
    1190:	sub	x0, x9, #0x40
    1194:	mov	w2, #0x3                   	// #3
    1198:	mov	x1, x0
    119c:	blr	x8
    11a0:	b	1160 <_ZN4llvm18InjectorIRStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0x360>
    11a4:	ldr	x19, [sp, #88]
    11a8:	add	x8, x20, #0x10
    11ac:	cmp	x19, x8
    11b0:	b.eq	11bc <_ZN4llvm18InjectorIRStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0x3bc>  // b.none
    11b4:	mov	x0, x19
    11b8:	bl	0 <free>
    11bc:	strb	wzr, [sp, #264]
    11c0:	ldr	x0, [sp, #272]
    11c4:	add	x8, sp, #0x110
    11c8:	add	x8, x8, #0x10
    11cc:	cmp	x0, x8
    11d0:	b.eq	11d8 <_ZN4llvm18InjectorIRStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0x3d8>  // b.none
    11d4:	bl	0 <free>
    11d8:	ldr	x0, [sp, #304]
    11dc:	add	x8, sp, #0x130
    11e0:	add	x8, x8, #0x10
    11e4:	cmp	x0, x8
    11e8:	b.eq	11f0 <_ZN4llvm18InjectorIRStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0x3f0>  // b.none
    11ec:	bl	0 <free>
    11f0:	add	sp, sp, #0x260
    11f4:	ldp	x20, x19, [sp, #80]
    11f8:	ldp	x22, x21, [sp, #64]
    11fc:	ldp	x24, x23, [sp, #48]
    1200:	ldp	x26, x25, [sp, #32]
    1204:	ldp	x28, x27, [sp, #16]
    1208:	ldp	x29, x30, [sp], #96
    120c:	ret
    1210:	add	x0, sp, #0x110
    1214:	mov	w3, #0x8                   	// #8
    1218:	mov	x1, x23
    121c:	mov	x2, xzr
    1220:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1224:	ldr	w8, [sp, #280]
    1228:	b	f44 <_ZN4llvm18InjectorIRStrategy6mutateERNS_10BasicBlockERNS_15RandomIRBuilderE+0x144>
    122c:	adrp	x0, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
    1230:	adrp	x1, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
    1234:	adrp	x3, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
    1238:	add	x0, x0, #0x0
    123c:	add	x1, x1, #0x0
    1240:	add	x3, x3, #0x0
    1244:	mov	w2, #0x43                  	// #67
    1248:	bl	0 <__assert_fail>
    124c:	adrp	x0, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
    1250:	adrp	x1, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
    1254:	adrp	x3, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
    1258:	add	x0, x0, #0x0
    125c:	add	x1, x1, #0x0
    1260:	add	x3, x3, #0x0
    1264:	mov	w2, #0x8b                  	// #139
    1268:	bl	0 <__assert_fail>
    126c:	adrp	x0, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
    1270:	adrp	x1, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
    1274:	adrp	x3, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
    1278:	add	x0, x0, #0x0
    127c:	add	x1, x1, #0x0
    1280:	add	x3, x3, #0x0
    1284:	mov	w2, #0xbd                  	// #189
    1288:	bl	0 <__assert_fail>
    128c:	adrp	x0, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
    1290:	adrp	x1, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
    1294:	adrp	x3, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
    1298:	add	x0, x0, #0x0
    129c:	add	x1, x1, #0x0
    12a0:	add	x3, x3, #0x0
    12a4:	mov	w2, #0x95                  	// #149
    12a8:	bl	0 <__assert_fail>
    12ac:	bl	0 <_ZSt25__throw_bad_function_callv>
    12b0:	adrp	x0, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
    12b4:	adrp	x1, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
    12b8:	adrp	x3, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
    12bc:	add	x0, x0, #0x0
    12c0:	add	x1, x1, #0x0
    12c4:	add	x3, x3, #0x0
    12c8:	mov	w2, #0x49                  	// #73
    12cc:	bl	0 <__assert_fail>

00000000000012d0 <_ZN4llvm21InstDeleterIRStrategy9getWeightEmmm>:
    12d0:	sub	x8, x2, #0xc8
    12d4:	cmp	x8, x1
    12d8:	b.cs	12f0 <_ZN4llvm21InstDeleterIRStrategy9getWeightEmmm+0x20>  // b.hs, b.nlast
    12dc:	mov	w8, #0x64                  	// #100
    12e0:	mul	x8, x3, x8
    12e4:	cmp	x3, #0x0
    12e8:	csinc	x0, x8, xzr, ne  // ne = any
    12ec:	ret
    12f0:	sub	x8, x2, x1
    12f4:	add	x8, x8, #0x3e8
    12f8:	mul	x8, x3, x8
    12fc:	neg	x8, x8, lsl #1
    1300:	sxtw	x9, w8
    1304:	cmp	w8, #0x0
    1308:	csel	x0, xzr, x9, lt  // lt = tstop
    130c:	ret

0000000000001310 <_ZN4llvm21InstDeleterIRStrategy6mutateERNS_8FunctionERNS_15RandomIRBuilderE>:
    1310:	sub	sp, sp, #0x90
    1314:	stp	x29, x30, [sp, #48]
    1318:	stp	x28, x27, [sp, #64]
    131c:	stp	x26, x25, [sp, #80]
    1320:	stp	x24, x23, [sp, #96]
    1324:	stp	x22, x21, [sp, #112]
    1328:	stp	x20, x19, [sp, #128]
    132c:	add	x29, sp, #0x30
    1330:	stp	x0, x2, [sp, #8]
    1334:	add	x0, sp, #0x18
    1338:	mov	x19, x1
    133c:	bl	0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
    1340:	ldp	x24, x26, [sp, #24]
    1344:	ldr	x28, [sp, #40]
    1348:	add	x25, x19, #0x48
    134c:	cmp	x24, x25
    1350:	cset	w8, ne  // ne = any
    1354:	cmp	x28, #0x0
    1358:	cset	w9, ne  // ne = any
    135c:	cmp	x25, x26
    1360:	b.ne	13b4 <_ZN4llvm21InstDeleterIRStrategy6mutateERNS_8FunctionERNS_15RandomIRBuilderE+0xa4>  // b.any
    1364:	and	w8, w8, w9
    1368:	cbnz	w8, 13b4 <_ZN4llvm21InstDeleterIRStrategy6mutateERNS_8FunctionERNS_15RandomIRBuilderE+0xa4>
    136c:	mov	x27, xzr
    1370:	mov	x22, xzr
    1374:	cbz	x27, 1394 <_ZN4llvm21InstDeleterIRStrategy6mutateERNS_8FunctionERNS_15RandomIRBuilderE+0x84>
    1378:	ldp	x0, x2, [sp, #8]
    137c:	mov	x1, x22
    1380:	ldr	x8, [x0]
    1384:	ldr	x8, [x8, #48]
    1388:	blr	x8
    138c:	mov	x0, x19
    1390:	bl	7fc <_ZL17eliminateDeadCodeRN4llvm8FunctionE>
    1394:	ldp	x20, x19, [sp, #128]
    1398:	ldp	x22, x21, [sp, #112]
    139c:	ldp	x24, x23, [sp, #96]
    13a0:	ldp	x26, x25, [sp, #80]
    13a4:	ldp	x28, x27, [sp, #64]
    13a8:	ldp	x29, x30, [sp, #48]
    13ac:	add	sp, sp, #0x90
    13b0:	ret
    13b4:	mov	x21, #0x1                   	// #1
    13b8:	movk	x21, #0x600, lsl #32
    13bc:	mov	x22, xzr
    13c0:	mov	x27, xzr
    13c4:	mov	w20, #0x1                   	// #1
    13c8:	movk	x21, #0x100, lsl #48
    13cc:	ldrb	w8, [x28]
    13d0:	tbnz	w8, #2, 14dc <_ZN4llvm21InstDeleterIRStrategy6mutateERNS_8FunctionERNS_15RandomIRBuilderE+0x1cc>
    13d4:	sub	x8, x28, #0x18
    13d8:	cmp	x28, #0x0
    13dc:	csel	x23, xzr, x8, eq  // eq = none
    13e0:	ldrb	w8, [x23, #16]
    13e4:	sub	w9, w8, #0x19
    13e8:	cmp	w9, #0xb
    13ec:	b.cc	1408 <_ZN4llvm21InstDeleterIRStrategy6mutateERNS_8FunctionERNS_15RandomIRBuilderE+0xf8>  // b.lo, b.ul, b.last
    13f0:	sub	w8, w8, #0x22
    13f4:	cmp	w8, #0x38
    13f8:	b.hi	1480 <_ZN4llvm21InstDeleterIRStrategy6mutateERNS_8FunctionERNS_15RandomIRBuilderE+0x170>  // b.pmore
    13fc:	lsl	x8, x20, x8
    1400:	tst	x8, x21
    1404:	b.eq	1480 <_ZN4llvm21InstDeleterIRStrategy6mutateERNS_8FunctionERNS_15RandomIRBuilderE+0x170>  // b.none
    1408:	ldrb	w8, [x26]
    140c:	tbnz	w8, #2, 14bc <_ZN4llvm21InstDeleterIRStrategy6mutateERNS_8FunctionERNS_15RandomIRBuilderE+0x1ac>
    1410:	ldr	x28, [x28, #8]
    1414:	sub	x8, x26, #0x18
    1418:	cmp	x26, #0x0
    141c:	csel	x8, xzr, x8, eq  // eq = none
    1420:	add	x8, x8, #0x28
    1424:	cmp	x8, x28
    1428:	b.ne	145c <_ZN4llvm21InstDeleterIRStrategy6mutateERNS_8FunctionERNS_15RandomIRBuilderE+0x14c>  // b.any
    142c:	ldr	x26, [x26, #8]
    1430:	cmp	x24, x26
    1434:	b.eq	145c <_ZN4llvm21InstDeleterIRStrategy6mutateERNS_8FunctionERNS_15RandomIRBuilderE+0x14c>  // b.none
    1438:	ldrb	w8, [x26]
    143c:	tbnz	w8, #2, 14bc <_ZN4llvm21InstDeleterIRStrategy6mutateERNS_8FunctionERNS_15RandomIRBuilderE+0x1ac>
    1440:	sub	x8, x26, #0x18
    1444:	cmp	x26, #0x0
    1448:	csel	x8, xzr, x8, eq  // eq = none
    144c:	ldr	x28, [x8, #48]
    1450:	add	x8, x8, #0x28
    1454:	cmp	x8, x28
    1458:	b.eq	142c <_ZN4llvm21InstDeleterIRStrategy6mutateERNS_8FunctionERNS_15RandomIRBuilderE+0x11c>  // b.none
    145c:	cmp	x24, x25
    1460:	cset	w8, ne  // ne = any
    1464:	cmp	x28, #0x0
    1468:	cset	w9, ne  // ne = any
    146c:	cmp	x25, x26
    1470:	b.ne	13cc <_ZN4llvm21InstDeleterIRStrategy6mutateERNS_8FunctionERNS_15RandomIRBuilderE+0xbc>  // b.any
    1474:	and	w8, w8, w9
    1478:	tbnz	w8, #0, 13cc <_ZN4llvm21InstDeleterIRStrategy6mutateERNS_8FunctionERNS_15RandomIRBuilderE+0xbc>
    147c:	b	1374 <_ZN4llvm21InstDeleterIRStrategy6mutateERNS_8FunctionERNS_15RandomIRBuilderE+0x64>
    1480:	mov	x0, x23
    1484:	bl	0 <_ZNK4llvm5Value12isSwiftErrorEv>
    1488:	tbnz	w0, #0, 1408 <_ZN4llvm21InstDeleterIRStrategy6mutateERNS_8FunctionERNS_15RandomIRBuilderE+0xf8>
    148c:	ldrb	w8, [x23, #16]
    1490:	cmp	w8, #0x4f
    1494:	b.eq	1408 <_ZN4llvm21InstDeleterIRStrategy6mutateERNS_8FunctionERNS_15RandomIRBuilderE+0xf8>  // b.none
    1498:	ldr	x1, [sp, #16]
    149c:	add	x27, x27, #0x1
    14a0:	add	x0, sp, #0x18
    14a4:	add	x2, sp, #0x18
    14a8:	stp	x20, x27, [sp, #24]
    14ac:	bl	0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
    14b0:	cmp	x0, #0x1
    14b4:	csel	x22, x22, x23, hi  // hi = pmore
    14b8:	b	1408 <_ZN4llvm21InstDeleterIRStrategy6mutateERNS_8FunctionERNS_15RandomIRBuilderE+0xf8>
    14bc:	adrp	x0, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
    14c0:	adrp	x1, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
    14c4:	adrp	x3, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
    14c8:	add	x0, x0, #0x0
    14cc:	add	x1, x1, #0x0
    14d0:	add	x3, x3, #0x0
    14d4:	mov	w2, #0x8b                  	// #139
    14d8:	bl	0 <__assert_fail>
    14dc:	adrp	x0, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
    14e0:	adrp	x1, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
    14e4:	adrp	x3, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
    14e8:	add	x0, x0, #0x0
    14ec:	add	x1, x1, #0x0
    14f0:	add	x3, x3, #0x0
    14f4:	mov	w2, #0x8b                  	// #139
    14f8:	bl	0 <__assert_fail>

00000000000014fc <_ZN4llvm21InstDeleterIRStrategy6mutateERNS_11InstructionERNS_15RandomIRBuilderE>:
    14fc:	stp	x29, x30, [sp, #-96]!
    1500:	stp	x28, x27, [sp, #16]
    1504:	stp	x26, x25, [sp, #32]
    1508:	stp	x24, x23, [sp, #48]
    150c:	stp	x22, x21, [sp, #64]
    1510:	stp	x20, x19, [sp, #80]
    1514:	mov	x29, sp
    1518:	sub	sp, sp, #0x1c0
    151c:	ldrb	w8, [x1, #16]
    1520:	sub	w8, w8, #0x19
    1524:	cmp	w8, #0xa
    1528:	b.ls	1838 <_ZN4llvm21InstDeleterIRStrategy6mutateERNS_11InstructionERNS_15RandomIRBuilderE+0x33c>  // b.plast
    152c:	ldr	x8, [x1]
    1530:	mov	x19, x1
    1534:	ldrb	w9, [x8, #8]
    1538:	cbz	w9, 1678 <_ZN4llvm21InstDeleterIRStrategy6mutateERNS_11InstructionERNS_15RandomIRBuilderE+0x17c>
    153c:	stur	x8, [x29, #-104]
    1540:	stur	x8, [x29, #-72]
    1544:	adrp	x8, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
    1548:	adrp	x9, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
    154c:	adrp	x10, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
    1550:	ldr	d0, [x8]
    1554:	add	x9, x9, #0x0
    1558:	add	x10, x10, #0x0
    155c:	adrp	x11, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
    1560:	stp	x10, x9, [x29, #-88]
    1564:	adrp	x10, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
    1568:	add	x8, sp, #0x48
    156c:	add	x11, x11, #0x0
    1570:	add	x10, x10, #0x0
    1574:	add	x23, x8, #0x10
    1578:	stp	x10, x11, [x29, #-56]
    157c:	str	x23, [sp, #72]
    1580:	str	d0, [sp, #80]
    1584:	ldr	x22, [x19, #40]
    1588:	mov	x21, x2
    158c:	mov	x0, x22
    1590:	bl	0 <_ZNK4llvm10BasicBlock19getFirstInsertionPtEv>
    1594:	add	x25, x19, #0x18
    1598:	cmp	x25, x0
    159c:	b.eq	169c <_ZN4llvm21InstDeleterIRStrategy6mutateERNS_11InstructionERNS_15RandomIRBuilderE+0x1a0>  // b.none
    15a0:	mov	x24, x0
    15a4:	mov	x20, xzr
    15a8:	mov	x26, xzr
    15ac:	mov	w27, #0x1                   	// #1
    15b0:	ldrb	w8, [x24]
    15b4:	tbnz	w8, #2, 17f4 <_ZN4llvm21InstDeleterIRStrategy6mutateERNS_11InstructionERNS_15RandomIRBuilderE+0x2f8>
    15b8:	ldur	x9, [x29, #-88]
    15bc:	sub	x8, x24, #0x18
    15c0:	cmp	x24, #0x0
    15c4:	csel	x28, xzr, x8, eq  // eq = none
    15c8:	stp	xzr, xzr, [x29, #-32]
    15cc:	stur	x28, [x29, #-40]
    15d0:	cbz	x9, 1814 <_ZN4llvm21InstDeleterIRStrategy6mutateERNS_11InstructionERNS_15RandomIRBuilderE+0x318>
    15d4:	ldur	x8, [x29, #-80]
    15d8:	sub	x0, x29, #0x68
    15dc:	sub	x1, x29, #0x20
    15e0:	sub	x2, x29, #0x28
    15e4:	blr	x8
    15e8:	tbz	w0, #0, 1614 <_ZN4llvm21InstDeleterIRStrategy6mutateERNS_11InstructionERNS_15RandomIRBuilderE+0x118>
    15ec:	ldrb	w8, [x24]
    15f0:	tbnz	w8, #2, 17f4 <_ZN4llvm21InstDeleterIRStrategy6mutateERNS_11InstructionERNS_15RandomIRBuilderE+0x2f8>
    15f4:	add	x26, x26, #0x1
    15f8:	sub	x0, x29, #0x20
    15fc:	sub	x2, x29, #0x20
    1600:	mov	x1, x21
    1604:	stp	x27, x26, [x29, #-32]
    1608:	bl	0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
    160c:	cmp	x0, #0x1
    1610:	csel	x20, x20, x28, hi  // hi = pmore
    1614:	ldrb	w8, [x24]
    1618:	tbnz	w8, #2, 17f4 <_ZN4llvm21InstDeleterIRStrategy6mutateERNS_11InstructionERNS_15RandomIRBuilderE+0x2f8>
    161c:	ldp	w8, w9, [sp, #80]
    1620:	cmp	w8, w9
    1624:	b.cs	1654 <_ZN4llvm21InstDeleterIRStrategy6mutateERNS_11InstructionERNS_15RandomIRBuilderE+0x158>  // b.hs, b.nlast
    1628:	ldr	x9, [sp, #72]
    162c:	str	x28, [x9, w8, uxtw #3]
    1630:	ldp	w8, w9, [sp, #80]
    1634:	cmp	w8, w9
    1638:	b.cs	1818 <_ZN4llvm21InstDeleterIRStrategy6mutateERNS_11InstructionERNS_15RandomIRBuilderE+0x31c>  // b.hs, b.nlast
    163c:	add	w8, w8, #0x1
    1640:	str	w8, [sp, #80]
    1644:	ldr	x24, [x24, #8]
    1648:	cmp	x25, x24
    164c:	b.ne	15b0 <_ZN4llvm21InstDeleterIRStrategy6mutateERNS_11InstructionERNS_15RandomIRBuilderE+0xb4>  // b.any
    1650:	b	1670 <_ZN4llvm21InstDeleterIRStrategy6mutateERNS_11InstructionERNS_15RandomIRBuilderE+0x174>
    1654:	add	x0, sp, #0x48
    1658:	mov	w3, #0x8                   	// #8
    165c:	mov	x1, x23
    1660:	mov	x2, xzr
    1664:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1668:	ldr	w8, [sp, #80]
    166c:	b	1628 <_ZN4llvm21InstDeleterIRStrategy6mutateERNS_11InstructionERNS_15RandomIRBuilderE+0x12c>
    1670:	cbnz	x26, 1774 <_ZN4llvm21InstDeleterIRStrategy6mutateERNS_11InstructionERNS_15RandomIRBuilderE+0x278>
    1674:	b	16a0 <_ZN4llvm21InstDeleterIRStrategy6mutateERNS_11InstructionERNS_15RandomIRBuilderE+0x1a4>
    1678:	mov	x0, x19
    167c:	add	sp, sp, #0x1c0
    1680:	ldp	x20, x19, [sp, #80]
    1684:	ldp	x22, x21, [sp, #64]
    1688:	ldp	x24, x23, [sp, #48]
    168c:	ldp	x26, x25, [sp, #32]
    1690:	ldp	x28, x27, [sp, #16]
    1694:	ldp	x29, x30, [sp], #96
    1698:	b	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    169c:	mov	x20, xzr
    16a0:	ldr	x23, [sp, #72]
    16a4:	ldur	x8, [x29, #-88]
    16a8:	ldr	w24, [sp, #80]
    16ac:	str	xzr, [sp, #24]
    16b0:	cbz	x8, 16cc <_ZN4llvm21InstDeleterIRStrategy6mutateERNS_11InstructionERNS_15RandomIRBuilderE+0x1d0>
    16b4:	add	x0, sp, #0x8
    16b8:	sub	x1, x29, #0x68
    16bc:	mov	w2, #0x2                   	// #2
    16c0:	blr	x8
    16c4:	ldur	q0, [x29, #-88]
    16c8:	stur	q0, [sp, #24]
    16cc:	ldur	x8, [x29, #-56]
    16d0:	str	xzr, [sp, #56]
    16d4:	cbz	x8, 16f8 <_ZN4llvm21InstDeleterIRStrategy6mutateERNS_11InstructionERNS_15RandomIRBuilderE+0x1fc>
    16d8:	add	x9, sp, #0x8
    16dc:	sub	x10, x29, #0x68
    16e0:	add	x0, x9, #0x20
    16e4:	add	x1, x10, #0x20
    16e8:	mov	w2, #0x2                   	// #2
    16ec:	blr	x8
    16f0:	ldur	q0, [x29, #-56]
    16f4:	stur	q0, [sp, #56]
    16f8:	add	x6, sp, #0x8
    16fc:	mov	x0, x21
    1700:	mov	x1, x22
    1704:	mov	x2, x23
    1708:	mov	x3, x24
    170c:	mov	x4, xzr
    1710:	mov	x5, xzr
    1714:	add	x25, sp, #0x8
    1718:	bl	0 <_ZN4llvm15RandomIRBuilder9newSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE>
    171c:	mov	w8, #0x1                   	// #1
    1720:	mov	x22, x0
    1724:	dup	v0.2d, x8
    1728:	sub	x0, x29, #0x20
    172c:	sub	x2, x29, #0x20
    1730:	mov	x1, x21
    1734:	stur	q0, [x29, #-32]
    1738:	bl	0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
    173c:	ldr	x8, [sp, #56]
    1740:	cmp	x0, #0x1
    1744:	csel	x20, x20, x22, hi  // hi = pmore
    1748:	cbz	x8, 175c <_ZN4llvm21InstDeleterIRStrategy6mutateERNS_11InstructionERNS_15RandomIRBuilderE+0x260>
    174c:	add	x0, x25, #0x20
    1750:	mov	w2, #0x3                   	// #3
    1754:	mov	x1, x0
    1758:	blr	x8
    175c:	ldr	x8, [sp, #24]
    1760:	cbz	x8, 1774 <_ZN4llvm21InstDeleterIRStrategy6mutateERNS_11InstructionERNS_15RandomIRBuilderE+0x278>
    1764:	add	x0, sp, #0x8
    1768:	add	x1, sp, #0x8
    176c:	mov	w2, #0x3                   	// #3
    1770:	blr	x8
    1774:	mov	x0, x19
    1778:	mov	x1, x20
    177c:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    1780:	mov	x0, x19
    1784:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    1788:	ldr	x0, [sp, #72]
    178c:	add	x8, sp, #0x48
    1790:	add	x8, x8, #0x10
    1794:	cmp	x0, x8
    1798:	b.eq	17a0 <_ZN4llvm21InstDeleterIRStrategy6mutateERNS_11InstructionERNS_15RandomIRBuilderE+0x2a4>  // b.none
    179c:	bl	0 <free>
    17a0:	ldur	x8, [x29, #-56]
    17a4:	cbz	x8, 17bc <_ZN4llvm21InstDeleterIRStrategy6mutateERNS_11InstructionERNS_15RandomIRBuilderE+0x2c0>
    17a8:	sub	x9, x29, #0x68
    17ac:	add	x0, x9, #0x20
    17b0:	mov	w2, #0x3                   	// #3
    17b4:	mov	x1, x0
    17b8:	blr	x8
    17bc:	ldur	x8, [x29, #-88]
    17c0:	cbz	x8, 17d4 <_ZN4llvm21InstDeleterIRStrategy6mutateERNS_11InstructionERNS_15RandomIRBuilderE+0x2d8>
    17c4:	sub	x0, x29, #0x68
    17c8:	sub	x1, x29, #0x68
    17cc:	mov	w2, #0x3                   	// #3
    17d0:	blr	x8
    17d4:	add	sp, sp, #0x1c0
    17d8:	ldp	x20, x19, [sp, #80]
    17dc:	ldp	x22, x21, [sp, #64]
    17e0:	ldp	x24, x23, [sp, #48]
    17e4:	ldp	x26, x25, [sp, #32]
    17e8:	ldp	x28, x27, [sp, #16]
    17ec:	ldp	x29, x30, [sp], #96
    17f0:	ret
    17f4:	adrp	x0, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
    17f8:	adrp	x1, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
    17fc:	adrp	x3, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
    1800:	add	x0, x0, #0x0
    1804:	add	x1, x1, #0x0
    1808:	add	x3, x3, #0x0
    180c:	mov	w2, #0x8b                  	// #139
    1810:	bl	0 <__assert_fail>
    1814:	bl	0 <_ZSt25__throw_bad_function_callv>
    1818:	adrp	x0, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
    181c:	adrp	x1, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
    1820:	adrp	x3, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
    1824:	add	x0, x0, #0x0
    1828:	add	x1, x1, #0x0
    182c:	add	x3, x3, #0x0
    1830:	mov	w2, #0x43                  	// #67
    1834:	bl	0 <__assert_fail>
    1838:	adrp	x0, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
    183c:	adrp	x1, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
    1840:	adrp	x3, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_6ModuleERNS_15RandomIRBuilderE>
    1844:	add	x0, x0, #0x0
    1848:	add	x1, x1, #0x0
    184c:	add	x3, x3, #0x0
    1850:	mov	w2, #0xad                  	// #173
    1854:	bl	0 <__assert_fail>

0000000000001858 <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZNS0_8fuzzeropL8onlyTypeEPNS0_4TypeEEUlS4_S6_E_E9_M_invokeERKSt9_Any_dataOS4_OS6_>:
    1858:	ldr	x8, [x2]
    185c:	ldr	x9, [x0]
    1860:	ldr	x8, [x8]
    1864:	cmp	x8, x9
    1868:	cset	w0, eq  // eq = none
    186c:	ret

0000000000001870 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzeropL8onlyTypeEPNS1_4TypeEEUlNS1_8ArrayRefIPNS1_5ValueEEEPKS6_E_E10_M_managerERSt9_Any_dataRKSD_St18_Manager_operation>:
    1870:	cmp	w2, #0x2
    1874:	b.eq	188c <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzeropL8onlyTypeEPNS1_4TypeEEUlNS1_8ArrayRefIPNS1_5ValueEEEPKS6_E_E10_M_managerERSt9_Any_dataRKSD_St18_Manager_operation+0x1c>  // b.none
    1878:	cmp	w2, #0x1
    187c:	b.ne	1894 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzeropL8onlyTypeEPNS1_4TypeEEUlNS1_8ArrayRefIPNS1_5ValueEEEPKS6_E_E10_M_managerERSt9_Any_dataRKSD_St18_Manager_operation+0x24>  // b.any
    1880:	str	x1, [x0]
    1884:	mov	w0, wzr
    1888:	ret
    188c:	ldr	x8, [x1]
    1890:	str	x8, [x0]
    1894:	mov	w0, wzr
    1898:	ret

000000000000189c <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzeropL8onlyTypeESB_EUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_>:
    189c:	ldr	x0, [x0]
    18a0:	b	0 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeE>

00000000000018a4 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzeropL8onlyTypeEPNS1_4TypeEEUlNS1_8ArrayRefIPNS1_5ValueEEENS5_IS4_EEE_E10_M_managerERSt9_Any_dataRKSC_St18_Manager_operation>:
    18a4:	cmp	w2, #0x2
    18a8:	b.eq	18c0 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzeropL8onlyTypeEPNS1_4TypeEEUlNS1_8ArrayRefIPNS1_5ValueEEENS5_IS4_EEE_E10_M_managerERSt9_Any_dataRKSC_St18_Manager_operation+0x1c>  // b.none
    18ac:	cmp	w2, #0x1
    18b0:	b.ne	18c8 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzeropL8onlyTypeEPNS1_4TypeEEUlNS1_8ArrayRefIPNS1_5ValueEEENS5_IS4_EEE_E10_M_managerERSt9_Any_dataRKSC_St18_Manager_operation+0x24>  // b.any
    18b4:	str	x1, [x0]
    18b8:	mov	w0, wzr
    18bc:	ret
    18c0:	ldr	x8, [x1]
    18c4:	str	x8, [x0]
    18c8:	mov	w0, wzr
    18cc:	ret

Disassembly of section .text._ZN4llvm18IRMutationStrategyD0Ev:

0000000000000000 <_ZN4llvm18IRMutationStrategyD0Ev>:
   0:	brk	#0x1

Disassembly of section .text._ZN4llvm18IRMutationStrategy6mutateERNS_11InstructionERNS_15RandomIRBuilderE:

0000000000000000 <_ZN4llvm18IRMutationStrategy6mutateERNS_11InstructionERNS_15RandomIRBuilderE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	adrp	x0, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_11InstructionERNS_15RandomIRBuilderE>
   c:	adrp	x1, 0 <_ZN4llvm18IRMutationStrategy6mutateERNS_11InstructionERNS_15RandomIRBuilderE>
  10:	add	x0, x0, #0x0
  14:	add	x1, x1, #0x0
  18:	mov	w2, #0x34                  	// #52
  1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm18InjectorIRStrategyD2Ev:

0000000000000000 <_ZN4llvm18InjectorIRStrategyD2Ev>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	adrp	x8, 48 <_ZN4llvm18InjectorIRStrategyD2Ev+0x48>
  1c:	ldp	x19, x22, [x0, #8]
  20:	ldr	x8, [x8]
  24:	cmp	x19, x22
  28:	add	x8, x8, #0x10
  2c:	str	x8, [x0]
  30:	b.eq	dc <_ZN4llvm18InjectorIRStrategyD2Ev+0xdc>  // b.none
  34:	mov	x20, x0
  38:	b	48 <_ZN4llvm18InjectorIRStrategyD2Ev+0x48>
  3c:	add	x19, x19, #0xb8
  40:	cmp	x19, x22
  44:	b.eq	d8 <_ZN4llvm18InjectorIRStrategyD2Ev+0xd8>  // b.none
  48:	ldr	x8, [x19, #168]
  4c:	cbz	x8, 60 <_ZN4llvm18InjectorIRStrategyD2Ev+0x60>
  50:	add	x0, x19, #0x98
  54:	mov	w2, #0x3                   	// #3
  58:	mov	x1, x0
  5c:	blr	x8
  60:	mov	x23, x19
  64:	ldr	x21, [x23, #8]!
  68:	ldr	w8, [x23, #8]
  6c:	cbz	w8, c0 <_ZN4llvm18InjectorIRStrategyD2Ev+0xc0>
  70:	lsl	x24, x8, #6
  74:	b	80 <_ZN4llvm18InjectorIRStrategyD2Ev+0x80>
  78:	subs	x24, x24, #0x40
  7c:	b.eq	bc <_ZN4llvm18InjectorIRStrategyD2Ev+0xbc>  // b.none
  80:	add	x25, x21, x24
  84:	ldur	x8, [x25, #-16]
  88:	cbz	x8, 9c <_ZN4llvm18InjectorIRStrategyD2Ev+0x9c>
  8c:	sub	x0, x25, #0x20
  90:	mov	w2, #0x3                   	// #3
  94:	mov	x1, x0
  98:	blr	x8
  9c:	ldur	x8, [x25, #-48]
  a0:	cbz	x8, 78 <_ZN4llvm18InjectorIRStrategyD2Ev+0x78>
  a4:	add	x9, x21, x24
  a8:	sub	x0, x9, #0x40
  ac:	mov	w2, #0x3                   	// #3
  b0:	mov	x1, x0
  b4:	blr	x8
  b8:	b	78 <_ZN4llvm18InjectorIRStrategyD2Ev+0x78>
  bc:	ldr	x21, [x23]
  c0:	add	x8, x23, #0x10
  c4:	cmp	x21, x8
  c8:	b.eq	3c <_ZN4llvm18InjectorIRStrategyD2Ev+0x3c>  // b.none
  cc:	mov	x0, x21
  d0:	bl	0 <free>
  d4:	b	3c <_ZN4llvm18InjectorIRStrategyD2Ev+0x3c>
  d8:	ldr	x19, [x20, #8]
  dc:	cbz	x19, fc <_ZN4llvm18InjectorIRStrategyD2Ev+0xfc>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #64]
  e8:	ldp	x22, x21, [sp, #48]
  ec:	ldp	x24, x23, [sp, #32]
  f0:	ldr	x25, [sp, #16]
  f4:	ldp	x29, x30, [sp], #80
  f8:	b	0 <_ZdlPv>
  fc:	ldp	x20, x19, [sp, #64]
 100:	ldp	x22, x21, [sp, #48]
 104:	ldp	x24, x23, [sp, #32]
 108:	ldr	x25, [sp, #16]
 10c:	ldp	x29, x30, [sp], #80
 110:	ret

Disassembly of section .text._ZN4llvm18InjectorIRStrategyD0Ev:

0000000000000000 <_ZN4llvm18InjectorIRStrategyD0Ev>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	adrp	x8, 48 <_ZN4llvm18InjectorIRStrategyD0Ev+0x48>
  1c:	ldp	x20, x22, [x0, #8]
  20:	ldr	x8, [x8]
  24:	mov	x19, x0
  28:	cmp	x20, x22
  2c:	add	x8, x8, #0x10
  30:	str	x8, [x0]
  34:	b.ne	6c <_ZN4llvm18InjectorIRStrategyD0Ev+0x6c>  // b.any
  38:	cbz	x20, 44 <_ZN4llvm18InjectorIRStrategyD0Ev+0x44>
  3c:	mov	x0, x20
  40:	bl	0 <_ZdlPv>
  44:	mov	x0, x19
  48:	ldp	x20, x19, [sp, #64]
  4c:	ldp	x22, x21, [sp, #48]
  50:	ldp	x24, x23, [sp, #32]
  54:	ldr	x25, [sp, #16]
  58:	ldp	x29, x30, [sp], #80
  5c:	b	0 <_ZdlPv>
  60:	add	x20, x20, #0xb8
  64:	cmp	x20, x22
  68:	b.eq	fc <_ZN4llvm18InjectorIRStrategyD0Ev+0xfc>  // b.none
  6c:	ldr	x8, [x20, #168]
  70:	cbz	x8, 84 <_ZN4llvm18InjectorIRStrategyD0Ev+0x84>
  74:	add	x0, x20, #0x98
  78:	mov	w2, #0x3                   	// #3
  7c:	mov	x1, x0
  80:	blr	x8
  84:	mov	x23, x20
  88:	ldr	x21, [x23, #8]!
  8c:	ldr	w8, [x23, #8]
  90:	cbz	w8, e4 <_ZN4llvm18InjectorIRStrategyD0Ev+0xe4>
  94:	lsl	x24, x8, #6
  98:	b	a4 <_ZN4llvm18InjectorIRStrategyD0Ev+0xa4>
  9c:	subs	x24, x24, #0x40
  a0:	b.eq	e0 <_ZN4llvm18InjectorIRStrategyD0Ev+0xe0>  // b.none
  a4:	add	x25, x21, x24
  a8:	ldur	x8, [x25, #-16]
  ac:	cbz	x8, c0 <_ZN4llvm18InjectorIRStrategyD0Ev+0xc0>
  b0:	sub	x0, x25, #0x20
  b4:	mov	w2, #0x3                   	// #3
  b8:	mov	x1, x0
  bc:	blr	x8
  c0:	ldur	x8, [x25, #-48]
  c4:	cbz	x8, 9c <_ZN4llvm18InjectorIRStrategyD0Ev+0x9c>
  c8:	add	x9, x21, x24
  cc:	sub	x0, x9, #0x40
  d0:	mov	w2, #0x3                   	// #3
  d4:	mov	x1, x0
  d8:	blr	x8
  dc:	b	9c <_ZN4llvm18InjectorIRStrategyD0Ev+0x9c>
  e0:	ldr	x21, [x23]
  e4:	add	x8, x23, #0x10
  e8:	cmp	x21, x8
  ec:	b.eq	60 <_ZN4llvm18InjectorIRStrategyD0Ev+0x60>  // b.none
  f0:	mov	x0, x21
  f4:	bl	0 <free>
  f8:	b	60 <_ZN4llvm18InjectorIRStrategyD0Ev+0x60>
  fc:	ldr	x20, [x19, #8]
 100:	cbnz	x20, 3c <_ZN4llvm18InjectorIRStrategyD0Ev+0x3c>
 104:	b	44 <_ZN4llvm18InjectorIRStrategyD0Ev+0x44>

Disassembly of section .text._ZN4llvm18InjectorIRStrategy9getWeightEmmm:

0000000000000000 <_ZN4llvm18InjectorIRStrategy9getWeightEmmm>:
   0:	ldp	x9, x8, [x0, #8]
   4:	sub	x8, x8, x9
   8:	mov	x9, #0x37a7                	// #14247
   c:	movk	x9, #0xe9bd, lsl #16
  10:	movk	x9, #0x6f4d, lsl #32
  14:	asr	x8, x8, #3
  18:	movk	x9, #0xd37a, lsl #48
  1c:	mul	x0, x8, x9
  20:	ret

Disassembly of section .text._ZN4llvm18IRMutationStrategyD2Ev:

0000000000000000 <_ZN4llvm18IRMutationStrategyD2Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm21InstDeleterIRStrategyD0Ev:

0000000000000000 <_ZN4llvm21InstDeleterIRStrategyD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm15AnalysisManagerINS_8FunctionEJEED2Ev:

0000000000000000 <_ZN4llvm15AnalysisManagerINS_8FunctionEJEED2Ev>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x19, x0
  18:	ldr	x0, [x0, #72]
  1c:	bl	0 <_ZdlPv>
  20:	ldr	x9, [x19, #64]
  24:	ldr	w8, [x19, #56]
  28:	add	x9, x9, #0x1
  2c:	str	x9, [x19, #64]
  30:	cbz	w8, a4 <_ZN4llvm15AnalysisManagerINS_8FunctionEJEED2Ev+0xa4>
  34:	ldr	x21, [x19, #40]
  38:	add	x22, x21, x8, lsl #5
  3c:	b	4c <_ZN4llvm15AnalysisManagerINS_8FunctionEJEED2Ev+0x4c>
  40:	add	x21, x21, #0x20
  44:	cmp	x21, x22
  48:	b.eq	a4 <_ZN4llvm15AnalysisManagerINS_8FunctionEJEED2Ev+0xa4>  // b.none
  4c:	ldr	x8, [x21]
  50:	orr	x8, x8, #0x8
  54:	cmn	x8, #0x8
  58:	b.eq	40 <_ZN4llvm15AnalysisManagerINS_8FunctionEJEED2Ev+0x40>  // b.none
  5c:	mov	x23, x21
  60:	ldr	x20, [x23, #8]!
  64:	cmp	x20, x23
  68:	b.ne	88 <_ZN4llvm15AnalysisManagerINS_8FunctionEJEED2Ev+0x88>  // b.any
  6c:	b	40 <_ZN4llvm15AnalysisManagerINS_8FunctionEJEED2Ev+0x40>
  70:	mov	x0, x20
  74:	str	xzr, [x20, #24]
  78:	bl	0 <_ZdlPv>
  7c:	cmp	x24, x23
  80:	mov	x20, x24
  84:	b.eq	40 <_ZN4llvm15AnalysisManagerINS_8FunctionEJEED2Ev+0x40>  // b.none
  88:	ldr	x0, [x20, #24]
  8c:	ldr	x24, [x20]
  90:	cbz	x0, 70 <_ZN4llvm15AnalysisManagerINS_8FunctionEJEED2Ev+0x70>
  94:	ldr	x8, [x0]
  98:	ldr	x8, [x8, #8]
  9c:	blr	x8
  a0:	b	70 <_ZN4llvm15AnalysisManagerINS_8FunctionEJEED2Ev+0x70>
  a4:	ldr	x0, [x19, #40]
  a8:	bl	0 <_ZdlPv>
  ac:	ldr	x9, [x19, #32]
  b0:	ldr	w8, [x19, #24]
  b4:	add	x9, x9, #0x1
  b8:	str	x9, [x19, #32]
  bc:	cbz	w8, 108 <_ZN4llvm15AnalysisManagerINS_8FunctionEJEED2Ev+0x108>
  c0:	ldr	x9, [x19, #8]
  c4:	lsl	x21, x8, #4
  c8:	add	x20, x9, #0x8
  cc:	b	e0 <_ZN4llvm15AnalysisManagerINS_8FunctionEJEED2Ev+0xe0>
  d0:	str	xzr, [x20]
  d4:	subs	x21, x21, #0x10
  d8:	add	x20, x20, #0x10
  dc:	b.eq	108 <_ZN4llvm15AnalysisManagerINS_8FunctionEJEED2Ev+0x108>  // b.none
  e0:	ldur	x8, [x20, #-8]
  e4:	orr	x8, x8, #0x8
  e8:	cmn	x8, #0x8
  ec:	b.eq	d4 <_ZN4llvm15AnalysisManagerINS_8FunctionEJEED2Ev+0xd4>  // b.none
  f0:	ldr	x0, [x20]
  f4:	cbz	x0, d0 <_ZN4llvm15AnalysisManagerINS_8FunctionEJEED2Ev+0xd0>
  f8:	ldr	x8, [x0]
  fc:	ldr	x8, [x8, #8]
 100:	blr	x8
 104:	b	d0 <_ZN4llvm15AnalysisManagerINS_8FunctionEJEED2Ev+0xd0>
 108:	ldr	x0, [x19, #8]
 10c:	bl	0 <_ZdlPv>
 110:	ldr	x8, [x19]
 114:	add	x8, x8, #0x1
 118:	str	x8, [x19]
 11c:	ldp	x20, x19, [sp, #48]
 120:	ldp	x22, x21, [sp, #32]
 124:	ldp	x24, x23, [sp, #16]
 128:	ldp	x29, x30, [sp], #64
 12c:	ret

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm6detail11PassConceptINS1_8FunctionENS1_15AnalysisManagerIS4_JEEEJEEESt14default_deleteIS7_EESaISA_EE17_M_realloc_insertIJPNS2_9PassModelIS4_NS1_7DCEPassENS1_17PreservedAnalysesES6_JEEEEEEvN9__gnu_cxx17__normal_iteratorIPSA_SC_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm6detail11PassConceptINS1_8FunctionENS1_15AnalysisManagerIS4_JEEEJEEESt14default_deleteIS7_EESaISA_EE17_M_realloc_insertIJPNS2_9PassModelIS4_NS1_7DCEPassENS1_17PreservedAnalysesES6_JEEEEEEvN9__gnu_cxx17__normal_iteratorIPSA_SC_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldp	x20, x24, [x0]
  1c:	mov	x9, #0x7ffffffffffffff8    	// #9223372036854775800
  20:	sub	x8, x24, x20
  24:	cmp	x8, x9
  28:	b.eq	140 <_ZNSt6vectorISt10unique_ptrIN4llvm6detail11PassConceptINS1_8FunctionENS1_15AnalysisManagerIS4_JEEEJEEESt14default_deleteIS7_EESaISA_EE17_M_realloc_insertIJPNS2_9PassModelIS4_NS1_7DCEPassENS1_17PreservedAnalysesES6_JEEEEEEvN9__gnu_cxx17__normal_iteratorIPSA_SC_EEDpOT_+0x140>  // b.none
  2c:	asr	x9, x8, #3
  30:	cmp	x8, #0x0
  34:	csinc	x10, x9, xzr, ne  // ne = any
  38:	adds	x9, x10, x9
  3c:	lsr	x11, x9, #60
  40:	cset	w10, cs  // cs = hs, nlast
  44:	cmp	x11, #0x0
  48:	cset	w11, ne  // ne = any
  4c:	orr	w10, w10, w11
  50:	mov	x8, #0xfffffffffffffff     	// #1152921504606846975
  54:	cmp	w10, #0x0
  58:	csel	x25, x8, x9, ne  // ne = any
  5c:	sub	x8, x1, x20
  60:	mov	x23, x2
  64:	mov	x19, x0
  68:	mov	x21, x1
  6c:	asr	x26, x8, #3
  70:	cbz	x25, 84 <_ZNSt6vectorISt10unique_ptrIN4llvm6detail11PassConceptINS1_8FunctionENS1_15AnalysisManagerIS4_JEEEJEEESt14default_deleteIS7_EESaISA_EE17_M_realloc_insertIJPNS2_9PassModelIS4_NS1_7DCEPassENS1_17PreservedAnalysesES6_JEEEEEEvN9__gnu_cxx17__normal_iteratorIPSA_SC_EEDpOT_+0x84>
  74:	lsl	x0, x25, #3
  78:	bl	0 <_Znwm>
  7c:	mov	x22, x0
  80:	b	88 <_ZNSt6vectorISt10unique_ptrIN4llvm6detail11PassConceptINS1_8FunctionENS1_15AnalysisManagerIS4_JEEEJEEESt14default_deleteIS7_EESaISA_EE17_M_realloc_insertIJPNS2_9PassModelIS4_NS1_7DCEPassENS1_17PreservedAnalysesES6_JEEEEEEvN9__gnu_cxx17__normal_iteratorIPSA_SC_EEDpOT_+0x88>
  84:	mov	x22, xzr
  88:	ldr	x8, [x23]
  8c:	cmp	x20, x21
  90:	mov	x23, x22
  94:	str	x8, [x22, x26, lsl #3]
  98:	b.eq	e0 <_ZNSt6vectorISt10unique_ptrIN4llvm6detail11PassConceptINS1_8FunctionENS1_15AnalysisManagerIS4_JEEEJEEESt14default_deleteIS7_EESaISA_EE17_M_realloc_insertIJPNS2_9PassModelIS4_NS1_7DCEPassENS1_17PreservedAnalysesES6_JEEEEEEvN9__gnu_cxx17__normal_iteratorIPSA_SC_EEDpOT_+0xe0>  // b.none
  9c:	mov	x23, x22
  a0:	mov	x26, x20
  a4:	b	b8 <_ZNSt6vectorISt10unique_ptrIN4llvm6detail11PassConceptINS1_8FunctionENS1_15AnalysisManagerIS4_JEEEJEEESt14default_deleteIS7_EESaISA_EE17_M_realloc_insertIJPNS2_9PassModelIS4_NS1_7DCEPassENS1_17PreservedAnalysesES6_JEEEEEEvN9__gnu_cxx17__normal_iteratorIPSA_SC_EEDpOT_+0xb8>
  a8:	str	xzr, [x26], #8
  ac:	cmp	x21, x26
  b0:	add	x23, x23, #0x8
  b4:	b.eq	e0 <_ZNSt6vectorISt10unique_ptrIN4llvm6detail11PassConceptINS1_8FunctionENS1_15AnalysisManagerIS4_JEEEJEEESt14default_deleteIS7_EESaISA_EE17_M_realloc_insertIJPNS2_9PassModelIS4_NS1_7DCEPassENS1_17PreservedAnalysesES6_JEEEEEEvN9__gnu_cxx17__normal_iteratorIPSA_SC_EEDpOT_+0xe0>  // b.none
  b8:	ldr	x8, [x26]
  bc:	str	xzr, [x26]
  c0:	str	x8, [x23]
  c4:	ldr	x0, [x26]
  c8:	cbz	x0, a8 <_ZNSt6vectorISt10unique_ptrIN4llvm6detail11PassConceptINS1_8FunctionENS1_15AnalysisManagerIS4_JEEEJEEESt14default_deleteIS7_EESaISA_EE17_M_realloc_insertIJPNS2_9PassModelIS4_NS1_7DCEPassENS1_17PreservedAnalysesES6_JEEEEEEvN9__gnu_cxx17__normal_iteratorIPSA_SC_EEDpOT_+0xa8>
  cc:	ldr	x8, [x0]
  d0:	ldr	x8, [x8, #8]
  d4:	blr	x8
  d8:	b	a8 <_ZNSt6vectorISt10unique_ptrIN4llvm6detail11PassConceptINS1_8FunctionENS1_15AnalysisManagerIS4_JEEEJEEESt14default_deleteIS7_EESaISA_EE17_M_realloc_insertIJPNS2_9PassModelIS4_NS1_7DCEPassENS1_17PreservedAnalysesES6_JEEEEEEvN9__gnu_cxx17__normal_iteratorIPSA_SC_EEDpOT_+0xa8>
  dc:	str	xzr, [x21], #8
  e0:	cmp	x24, x21
  e4:	add	x23, x23, #0x8
  e8:	b.eq	110 <_ZNSt6vectorISt10unique_ptrIN4llvm6detail11PassConceptINS1_8FunctionENS1_15AnalysisManagerIS4_JEEEJEEESt14default_deleteIS7_EESaISA_EE17_M_realloc_insertIJPNS2_9PassModelIS4_NS1_7DCEPassENS1_17PreservedAnalysesES6_JEEEEEEvN9__gnu_cxx17__normal_iteratorIPSA_SC_EEDpOT_+0x110>  // b.none
  ec:	ldr	x8, [x21]
  f0:	str	xzr, [x21]
  f4:	str	x8, [x23]
  f8:	ldr	x0, [x21]
  fc:	cbz	x0, dc <_ZNSt6vectorISt10unique_ptrIN4llvm6detail11PassConceptINS1_8FunctionENS1_15AnalysisManagerIS4_JEEEJEEESt14default_deleteIS7_EESaISA_EE17_M_realloc_insertIJPNS2_9PassModelIS4_NS1_7DCEPassENS1_17PreservedAnalysesES6_JEEEEEEvN9__gnu_cxx17__normal_iteratorIPSA_SC_EEDpOT_+0xdc>
 100:	ldr	x8, [x0]
 104:	ldr	x8, [x8, #8]
 108:	blr	x8
 10c:	b	dc <_ZNSt6vectorISt10unique_ptrIN4llvm6detail11PassConceptINS1_8FunctionENS1_15AnalysisManagerIS4_JEEEJEEESt14default_deleteIS7_EESaISA_EE17_M_realloc_insertIJPNS2_9PassModelIS4_NS1_7DCEPassENS1_17PreservedAnalysesES6_JEEEEEEvN9__gnu_cxx17__normal_iteratorIPSA_SC_EEDpOT_+0xdc>
 110:	cbz	x20, 11c <_ZNSt6vectorISt10unique_ptrIN4llvm6detail11PassConceptINS1_8FunctionENS1_15AnalysisManagerIS4_JEEEJEEESt14default_deleteIS7_EESaISA_EE17_M_realloc_insertIJPNS2_9PassModelIS4_NS1_7DCEPassENS1_17PreservedAnalysesES6_JEEEEEEvN9__gnu_cxx17__normal_iteratorIPSA_SC_EEDpOT_+0x11c>
 114:	mov	x0, x20
 118:	bl	0 <_ZdlPv>
 11c:	add	x8, x22, x25, lsl #3
 120:	stp	x22, x23, [x19]
 124:	str	x8, [x19, #16]
 128:	ldp	x20, x19, [sp, #64]
 12c:	ldp	x22, x21, [sp, #48]
 130:	ldp	x24, x23, [sp, #32]
 134:	ldp	x26, x25, [sp, #16]
 138:	ldp	x29, x30, [sp], #80
 13c:	ret
 140:	adrp	x0, 0 <_ZNSt6vectorISt10unique_ptrIN4llvm6detail11PassConceptINS1_8FunctionENS1_15AnalysisManagerIS4_JEEEJEEESt14default_deleteIS7_EESaISA_EE17_M_realloc_insertIJPNS2_9PassModelIS4_NS1_7DCEPassENS1_17PreservedAnalysesES6_JEEEEEEvN9__gnu_cxx17__normal_iteratorIPSA_SC_EEDpOT_>
 144:	add	x0, x0, #0x0
 148:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm6detail11PassConceptINS_8FunctionENS_15AnalysisManagerIS2_JEEEJEED2Ev:

0000000000000000 <_ZN4llvm6detail11PassConceptINS_8FunctionENS_15AnalysisManagerIS2_JEEEJEED2Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm6detail9PassModelINS_8FunctionENS_7DCEPassENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEEEJEED0Ev:

0000000000000000 <_ZN4llvm6detail9PassModelINS_8FunctionENS_7DCEPassENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEEEJEED0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm6detail9PassModelINS_8FunctionENS_7DCEPassENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEEEJEE3runERS2_RS6_:

0000000000000000 <_ZN4llvm6detail9PassModelINS_8FunctionENS_7DCEPassENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEEEJEE3runERS2_RS6_>:
   0:	add	x0, x0, #0x8
   4:	b	0 <_ZN4llvm7DCEPass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE>

Disassembly of section .text._ZNK4llvm6detail9PassModelINS_8FunctionENS_7DCEPassENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEEEJEE4nameEv:

0000000000000000 <_ZNK4llvm6detail9PassModelINS_8FunctionENS_7DCEPassENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEEEJEE4nameEv>:
   0:	b	0 <_ZNK4llvm6detail9PassModelINS_8FunctionENS_7DCEPassENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEEEJEE4nameEv>

Disassembly of section .text._ZN4llvm13PassInfoMixinINS_7DCEPassEE4nameEv:

0000000000000000 <_ZN4llvm13PassInfoMixinINS_7DCEPassEE4nameEv>:
   0:	sub	sp, sp, #0x20
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	adrp	x8, 0 <_ZN4llvm13PassInfoMixinINS_7DCEPassEE4nameEv>
  10:	adrp	x1, 0 <_ZN4llvm13PassInfoMixinINS_7DCEPassEE4nameEv>
  14:	add	x8, x8, #0x0
  18:	mov	w9, #0x45                  	// #69
  1c:	add	x1, x1, #0x0
  20:	mov	x0, sp
  24:	mov	w2, #0x12                  	// #18
  28:	mov	x3, xzr
  2c:	stp	x8, x9, [sp]
  30:	bl	0 <_ZNK4llvm9StringRef4findES0_m>
  34:	ldp	x9, x8, [sp]
  38:	cmp	x8, x0
  3c:	csel	x10, x8, x0, cc  // cc = lo, ul, last
  40:	add	x9, x9, x10
  44:	subs	x8, x8, x10
  48:	stp	x9, x8, [sp]
  4c:	b.eq	e8 <_ZN4llvm13PassInfoMixinINS_7DCEPassEE4nameEv+0xe8>  // b.none
  50:	cmp	x8, #0x11
  54:	b.ls	108 <_ZN4llvm13PassInfoMixinINS_7DCEPassEE4nameEv+0x108>  // b.plast
  58:	add	x0, x9, #0x12
  5c:	subs	x9, x8, #0x12
  60:	stp	x0, x9, [sp]
  64:	b.eq	c8 <_ZN4llvm13PassInfoMixinINS_7DCEPassEE4nameEv+0xc8>  // b.none
  68:	add	x9, x0, x9
  6c:	ldurb	w9, [x9, #-1]
  70:	cmp	w9, #0x5d
  74:	b.ne	c8 <_ZN4llvm13PassInfoMixinINS_7DCEPassEE4nameEv+0xc8>  // b.any
  78:	sub	x1, x8, #0x13
  7c:	cmp	x1, #0x6
  80:	b.cc	a8 <_ZN4llvm13PassInfoMixinINS_7DCEPassEE4nameEv+0xa8>  // b.lo, b.ul, b.last
  84:	ldr	w9, [x0]
  88:	ldrh	w10, [x0, #4]
  8c:	mov	w11, #0x6c6c                	// #27756
  90:	movk	w11, #0x6d76, lsl #16
  94:	mov	w12, #0x3a3a                	// #14906
  98:	eor	w9, w9, w11
  9c:	eor	w10, w10, w12
  a0:	orr	w9, w9, w10
  a4:	cbz	w9, b4 <_ZN4llvm13PassInfoMixinINS_7DCEPassEE4nameEv+0xb4>
  a8:	ldp	x29, x30, [sp, #16]
  ac:	add	sp, sp, #0x20
  b0:	ret
  b4:	add	x0, x0, #0x6
  b8:	sub	x1, x8, #0x19
  bc:	ldp	x29, x30, [sp, #16]
  c0:	add	sp, sp, #0x20
  c4:	ret
  c8:	adrp	x0, 0 <_ZN4llvm13PassInfoMixinINS_7DCEPassEE4nameEv>
  cc:	adrp	x1, 0 <_ZN4llvm13PassInfoMixinINS_7DCEPassEE4nameEv>
  d0:	adrp	x3, 0 <_ZN4llvm13PassInfoMixinINS_7DCEPassEE4nameEv>
  d4:	add	x0, x0, #0x0
  d8:	add	x1, x1, #0x0
  dc:	add	x3, x3, #0x0
  e0:	mov	w2, #0x24                  	// #36
  e4:	bl	0 <__assert_fail>
  e8:	adrp	x0, 0 <_ZN4llvm13PassInfoMixinINS_7DCEPassEE4nameEv>
  ec:	adrp	x1, 0 <_ZN4llvm13PassInfoMixinINS_7DCEPassEE4nameEv>
  f0:	adrp	x3, 0 <_ZN4llvm13PassInfoMixinINS_7DCEPassEE4nameEv>
  f4:	add	x0, x0, #0x0
  f8:	add	x1, x1, #0x0
  fc:	add	x3, x3, #0x0
 100:	mov	w2, #0x21                  	// #33
 104:	bl	0 <__assert_fail>
 108:	adrp	x0, 0 <_ZN4llvm13PassInfoMixinINS_7DCEPassEE4nameEv>
 10c:	adrp	x1, 0 <_ZN4llvm13PassInfoMixinINS_7DCEPassEE4nameEv>
 110:	adrp	x3, 0 <_ZN4llvm13PassInfoMixinINS_7DCEPassEE4nameEv>
 114:	add	x0, x0, #0x0
 118:	add	x1, x1, #0x0
 11c:	add	x3, x3, #0x0
 120:	mov	w2, #0x283                 	// #643
 124:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E20InsertIntoBucketImplIS3_EEPSJ_RKS3_RKT_SN_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E20InsertIntoBucketImplIS3_EEPSJ_RKS3_RKT_SN_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #16]
  10:	ldr	w1, [x0, #24]
  14:	ldr	x9, [x0]
  18:	mov	x20, x2
  1c:	lsl	w10, w8, #2
  20:	add	w10, w10, #0x4
  24:	add	w11, w1, w1, lsl #1
  28:	mov	x19, x0
  2c:	add	x9, x9, #0x1
  30:	cmp	w10, w11
  34:	str	x9, [x0]
  38:	b.cs	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E20InsertIntoBucketImplIS3_EEPSJ_RKS3_RKT_SN_+0x8c>  // b.hs, b.nlast
  3c:	ldr	w9, [x19, #20]
  40:	mvn	w8, w8
  44:	add	w8, w1, w8
  48:	sub	w8, w8, w9
  4c:	cmp	w8, w1, lsr #3
  50:	b.ls	114 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E20InsertIntoBucketImplIS3_EEPSJ_RKS3_RKT_SN_+0x114>  // b.plast
  54:	cbz	x3, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E20InsertIntoBucketImplIS3_EEPSJ_RKS3_RKT_SN_+0x1a4>
  58:	ldr	w8, [x19, #16]
  5c:	add	w8, w8, #0x1
  60:	str	w8, [x19, #16]
  64:	ldr	x8, [x3]
  68:	cmn	x8, #0x8
  6c:	b.eq	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E20InsertIntoBucketImplIS3_EEPSJ_RKS3_RKT_SN_+0x7c>  // b.none
  70:	ldr	w8, [x19, #20]
  74:	sub	w8, w8, #0x1
  78:	str	w8, [x19, #20]
  7c:	ldp	x20, x19, [sp, #16]
  80:	mov	x0, x3
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	lsl	w1, w1, #1
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E20InsertIntoBucketImplIS3_EEPSJ_RKS3_RKT_SN_>
  98:	ldr	w10, [x19, #24]
  9c:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E20InsertIntoBucketImplIS3_EEPSJ_RKS3_RKT_SN_+0x1a4>
  a0:	ldr	x8, [x20]
  a4:	orr	x9, x8, #0x8
  a8:	cmn	x9, #0x8
  ac:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E20InsertIntoBucketImplIS3_EEPSJ_RKS3_RKT_SN_+0x1c4>  // b.none
  b0:	ldr	x9, [x19, #8]
  b4:	ubfx	x11, x8, #4, #28
  b8:	eor	w11, w11, w8, lsr #9
  bc:	sub	w10, w10, #0x1
  c0:	and	w11, w11, w10
  c4:	add	x3, x9, w11, uxtw #4
  c8:	ldr	x13, [x3]
  cc:	cmp	x13, x8
  d0:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E20InsertIntoBucketImplIS3_EEPSJ_RKS3_RKT_SN_+0x54>  // b.none
  d4:	mov	x12, xzr
  d8:	mov	w15, #0x1                   	// #1
  dc:	mov	x14, #0xfffffffffffffff0    	// #-16
  e0:	cmn	x13, #0x8
  e4:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E20InsertIntoBucketImplIS3_EEPSJ_RKS3_RKT_SN_+0x198>  // b.none
  e8:	cmp	x12, #0x0
  ec:	add	w11, w11, w15
  f0:	ccmp	x13, x14, #0x0, eq  // eq = none
  f4:	and	w11, w11, w10
  f8:	csel	x12, x12, x3, ne  // ne = any
  fc:	add	x3, x9, w11, uxtw #4
 100:	ldr	x13, [x3]
 104:	add	w15, w15, #0x1
 108:	cmp	x13, x8
 10c:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E20InsertIntoBucketImplIS3_EEPSJ_RKS3_RKT_SN_+0x54>  // b.none
 110:	b	e0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E20InsertIntoBucketImplIS3_EEPSJ_RKS3_RKT_SN_+0xe0>
 114:	mov	x0, x19
 118:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E20InsertIntoBucketImplIS3_EEPSJ_RKS3_RKT_SN_>
 11c:	ldr	w10, [x19, #24]
 120:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E20InsertIntoBucketImplIS3_EEPSJ_RKS3_RKT_SN_+0x1a4>
 124:	ldr	x8, [x20]
 128:	orr	x9, x8, #0x8
 12c:	cmn	x9, #0x8
 130:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E20InsertIntoBucketImplIS3_EEPSJ_RKS3_RKT_SN_+0x1c4>  // b.none
 134:	ldr	x9, [x19, #8]
 138:	ubfx	x11, x8, #4, #28
 13c:	eor	w11, w11, w8, lsr #9
 140:	sub	w10, w10, #0x1
 144:	and	w11, w11, w10
 148:	add	x3, x9, w11, uxtw #4
 14c:	ldr	x13, [x3]
 150:	cmp	x13, x8
 154:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E20InsertIntoBucketImplIS3_EEPSJ_RKS3_RKT_SN_+0x54>  // b.none
 158:	mov	x12, xzr
 15c:	mov	w15, #0x1                   	// #1
 160:	mov	x14, #0xfffffffffffffff0    	// #-16
 164:	cmn	x13, #0x8
 168:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E20InsertIntoBucketImplIS3_EEPSJ_RKS3_RKT_SN_+0x198>  // b.none
 16c:	cmp	x12, #0x0
 170:	add	w11, w11, w15
 174:	ccmp	x13, x14, #0x0, eq  // eq = none
 178:	and	w11, w11, w10
 17c:	csel	x12, x12, x3, ne  // ne = any
 180:	add	x3, x9, w11, uxtw #4
 184:	ldr	x13, [x3]
 188:	add	w15, w15, #0x1
 18c:	cmp	x13, x8
 190:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E20InsertIntoBucketImplIS3_EEPSJ_RKS3_RKT_SN_+0x54>  // b.none
 194:	b	164 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E20InsertIntoBucketImplIS3_EEPSJ_RKS3_RKT_SN_+0x164>
 198:	cmp	x12, #0x0
 19c:	csel	x3, x3, x12, eq  // eq = none
 1a0:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E20InsertIntoBucketImplIS3_EEPSJ_RKS3_RKT_SN_+0x54>
 1a4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E20InsertIntoBucketImplIS3_EEPSJ_RKS3_RKT_SN_>
 1a8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E20InsertIntoBucketImplIS3_EEPSJ_RKS3_RKT_SN_>
 1ac:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E20InsertIntoBucketImplIS3_EEPSJ_RKS3_RKT_SN_>
 1b0:	add	x0, x0, #0x0
 1b4:	add	x1, x1, #0x0
 1b8:	add	x3, x3, #0x0
 1bc:	mov	w2, #0x22f                 	// #559
 1c0:	bl	0 <__assert_fail>
 1c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E20InsertIntoBucketImplIS3_EEPSJ_RKS3_RKT_SN_>
 1c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E20InsertIntoBucketImplIS3_EEPSJ_RKS3_RKT_SN_>
 1cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E20InsertIntoBucketImplIS3_EEPSJ_RKS3_RKT_SN_>
 1d0:	add	x0, x0, #0x0
 1d4:	add	x1, x1, #0x0
 1d8:	add	x3, x3, #0x0
 1dc:	mov	w2, #0x252                 	// #594
 1e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS6_JEE11InvalidatorEJEEESt14default_deleteISB_EENS_12DenseMapInfoIS2_EENS4_12DenseMapPairIS2_SE_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS6_JEE11InvalidatorEJEEESt14default_deleteISB_EENS_12DenseMapInfoIS2_EENS4_12DenseMapPairIS2_SE_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x19, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x19, #8]
  5c:	cbz	x20, 84 <_ZN4llvm8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS6_JEE11InvalidatorEJEEESt14default_deleteISB_EENS_12DenseMapInfoIS2_EENS4_12DenseMapPairIS2_SE_EEE4growEj+0x84>
  60:	add	x2, x20, x21, lsl #4
  64:	mov	x0, x19
  68:	mov	x1, x20
  6c:	bl	0 <_ZN4llvm8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS6_JEE11InvalidatorEJEEESt14default_deleteISB_EENS_12DenseMapInfoIS2_EENS4_12DenseMapPairIS2_SE_EEE4growEj>
  70:	mov	x0, x20
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	ldr	w8, [x19, #24]
  88:	str	xzr, [x19, #16]
  8c:	sub	w9, w8, #0x1
  90:	tst	w8, w9
  94:	b.ne	108 <_ZN4llvm8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS6_JEE11InvalidatorEJEEESt14default_deleteISB_EENS_12DenseMapInfoIS2_EENS4_12DenseMapPairIS2_SE_EEE4growEj+0x108>  // b.any
  98:	cbz	w8, f8 <_ZN4llvm8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS6_JEE11InvalidatorEJEEESt14default_deleteISB_EENS_12DenseMapInfoIS2_EENS4_12DenseMapPairIS2_SE_EEE4growEj+0xf8>
  9c:	lsl	x8, x8, #4
  a0:	subs	x9, x8, #0x10
  a4:	b.eq	e0 <_ZN4llvm8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS6_JEE11InvalidatorEJEEESt14default_deleteISB_EENS_12DenseMapInfoIS2_EENS4_12DenseMapPairIS2_SE_EEE4growEj+0xe0>  // b.none
  a8:	lsr	x9, x9, #4
  ac:	add	x10, x9, #0x1
  b0:	and	x11, x10, #0x1ffffffffffffffe
  b4:	add	x12, x0, #0x10
  b8:	add	x9, x0, x11, lsl #4
  bc:	mov	x13, #0xfffffffffffffff8    	// #-8
  c0:	mov	x14, x11
  c4:	stur	x13, [x12, #-16]
  c8:	str	x13, [x12], #32
  cc:	subs	x14, x14, #0x2
  d0:	b.ne	c4 <_ZN4llvm8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS6_JEE11InvalidatorEJEEESt14default_deleteISB_EENS_12DenseMapInfoIS2_EENS4_12DenseMapPairIS2_SE_EEE4growEj+0xc4>  // b.any
  d4:	cmp	x10, x11
  d8:	b.ne	e4 <_ZN4llvm8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS6_JEE11InvalidatorEJEEESt14default_deleteISB_EENS_12DenseMapInfoIS2_EENS4_12DenseMapPairIS2_SE_EEE4growEj+0xe4>  // b.any
  dc:	b	f8 <_ZN4llvm8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS6_JEE11InvalidatorEJEEESt14default_deleteISB_EENS_12DenseMapInfoIS2_EENS4_12DenseMapPairIS2_SE_EEE4growEj+0xf8>
  e0:	mov	x9, x0
  e4:	add	x8, x0, x8
  e8:	mov	x10, #0xfffffffffffffff8    	// #-8
  ec:	str	x10, [x9], #16
  f0:	cmp	x8, x9
  f4:	b.ne	ec <_ZN4llvm8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS6_JEE11InvalidatorEJEEESt14default_deleteISB_EENS_12DenseMapInfoIS2_EENS4_12DenseMapPairIS2_SE_EEE4growEj+0xec>  // b.any
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret
 108:	adrp	x0, 0 <_ZN4llvm8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS6_JEE11InvalidatorEJEEESt14default_deleteISB_EENS_12DenseMapInfoIS2_EENS4_12DenseMapPairIS2_SE_EEE4growEj>
 10c:	adrp	x1, 0 <_ZN4llvm8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS6_JEE11InvalidatorEJEEESt14default_deleteISB_EENS_12DenseMapInfoIS2_EENS4_12DenseMapPairIS2_SE_EEE4growEj>
 110:	adrp	x3, 0 <_ZN4llvm8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS6_JEE11InvalidatorEJEEESt14default_deleteISB_EENS_12DenseMapInfoIS2_EENS4_12DenseMapPairIS2_SE_EEE4growEj>
 114:	add	x0, x0, #0x0
 118:	add	x1, x1, #0x0
 11c:	add	x3, x3, #0x0
 120:	mov	w2, #0x15c                 	// #348
 124:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E18moveFromOldBucketsEPSJ_SM_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E18moveFromOldBucketsEPSJ_SM_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #24]
  14:	str	xzr, [x0, #16]
  18:	sub	w9, w8, #0x1
  1c:	tst	w8, w9
  20:	b.ne	1c8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E18moveFromOldBucketsEPSJ_SM_+0x1c8>  // b.any
  24:	mov	x19, x2
  28:	mov	x20, x1
  2c:	mov	x21, x0
  30:	cbz	w8, 94 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E18moveFromOldBucketsEPSJ_SM_+0x94>
  34:	ldr	x9, [x21, #8]
  38:	lsl	x10, x8, #4
  3c:	subs	x10, x10, #0x10
  40:	b.eq	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E18moveFromOldBucketsEPSJ_SM_+0x7c>  // b.none
  44:	lsr	x10, x10, #4
  48:	add	x11, x10, #0x1
  4c:	and	x12, x11, #0x1ffffffffffffffe
  50:	add	x13, x9, #0x10
  54:	add	x10, x9, x12, lsl #4
  58:	mov	x14, #0xfffffffffffffff8    	// #-8
  5c:	mov	x15, x12
  60:	stur	x14, [x13, #-16]
  64:	str	x14, [x13], #32
  68:	subs	x15, x15, #0x2
  6c:	b.ne	60 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E18moveFromOldBucketsEPSJ_SM_+0x60>  // b.any
  70:	cmp	x11, x12
  74:	b.ne	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E18moveFromOldBucketsEPSJ_SM_+0x80>  // b.any
  78:	b	94 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E18moveFromOldBucketsEPSJ_SM_+0x94>
  7c:	mov	x10, x9
  80:	add	x8, x9, x8, lsl #4
  84:	mov	x9, #0xfffffffffffffff8    	// #-8
  88:	str	x9, [x10], #16
  8c:	cmp	x8, x10
  90:	b.ne	88 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E18moveFromOldBucketsEPSJ_SM_+0x88>  // b.any
  94:	cmp	x20, x19
  98:	b.eq	178 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E18moveFromOldBucketsEPSJ_SM_+0x178>  // b.none
  9c:	mov	x22, #0xfffffffffffffff0    	// #-16
  a0:	b	b4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E18moveFromOldBucketsEPSJ_SM_+0xb4>
  a4:	str	xzr, [x20, #8]
  a8:	add	x20, x20, #0x10
  ac:	cmp	x20, x19
  b0:	b.eq	178 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E18moveFromOldBucketsEPSJ_SM_+0x178>  // b.none
  b4:	ldr	x8, [x20]
  b8:	orr	x9, x8, #0x8
  bc:	cmn	x9, #0x8
  c0:	b.eq	a8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E18moveFromOldBucketsEPSJ_SM_+0xa8>  // b.none
  c4:	ldr	w10, [x21, #24]
  c8:	cbz	w10, 140 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E18moveFromOldBucketsEPSJ_SM_+0x140>
  cc:	cmn	x8, #0x8
  d0:	b.eq	1a8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E18moveFromOldBucketsEPSJ_SM_+0x1a8>  // b.none
  d4:	ldr	x9, [x21, #8]
  d8:	ubfx	x11, x8, #4, #28
  dc:	eor	w11, w11, w8, lsr #9
  e0:	sub	w10, w10, #0x1
  e4:	and	w12, w11, w10
  e8:	add	x11, x9, w12, uxtw #4
  ec:	ldr	x14, [x11]
  f0:	cmp	x14, x8
  f4:	b.eq	188 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E18moveFromOldBucketsEPSJ_SM_+0x188>  // b.none
  f8:	mov	x13, xzr
  fc:	mov	w15, #0x1                   	// #1
 100:	cmn	x14, #0x8
 104:	b.eq	134 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E18moveFromOldBucketsEPSJ_SM_+0x134>  // b.none
 108:	cmp	x13, #0x0
 10c:	add	w12, w12, w15
 110:	ccmp	x14, x22, #0x0, eq  // eq = none
 114:	and	w12, w12, w10
 118:	csel	x13, x13, x11, ne  // ne = any
 11c:	add	x11, x9, w12, uxtw #4
 120:	ldr	x14, [x11]
 124:	add	w15, w15, #0x1
 128:	cmp	x14, x8
 12c:	b.ne	100 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E18moveFromOldBucketsEPSJ_SM_+0x100>  // b.any
 130:	b	188 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E18moveFromOldBucketsEPSJ_SM_+0x188>
 134:	cmp	x13, #0x0
 138:	csel	x9, x11, x13, eq  // eq = none
 13c:	b	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E18moveFromOldBucketsEPSJ_SM_+0x144>
 140:	mov	x9, xzr
 144:	str	x8, [x9]
 148:	ldr	x8, [x20, #8]
 14c:	str	xzr, [x20, #8]
 150:	str	x8, [x9, #8]
 154:	ldr	w8, [x21, #16]
 158:	add	w8, w8, #0x1
 15c:	str	w8, [x21, #16]
 160:	ldr	x0, [x20, #8]
 164:	cbz	x0, a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E18moveFromOldBucketsEPSJ_SM_+0xa4>
 168:	ldr	x8, [x0]
 16c:	ldr	x8, [x8, #8]
 170:	blr	x8
 174:	b	a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E18moveFromOldBucketsEPSJ_SM_+0xa4>
 178:	ldp	x20, x19, [sp, #32]
 17c:	ldp	x22, x21, [sp, #16]
 180:	ldp	x29, x30, [sp], #48
 184:	ret
 188:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E18moveFromOldBucketsEPSJ_SM_>
 18c:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E18moveFromOldBucketsEPSJ_SM_>
 190:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E18moveFromOldBucketsEPSJ_SM_>
 194:	add	x0, x0, #0x0
 198:	add	x1, x1, #0x0
 19c:	add	x3, x3, #0x0
 1a0:	mov	w2, #0x17a                 	// #378
 1a4:	bl	0 <__assert_fail>
 1a8:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E18moveFromOldBucketsEPSJ_SM_>
 1ac:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E18moveFromOldBucketsEPSJ_SM_>
 1b0:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E18moveFromOldBucketsEPSJ_SM_>
 1b4:	add	x0, x0, #0x0
 1b8:	add	x1, x1, #0x0
 1bc:	add	x3, x3, #0x0
 1c0:	mov	w2, #0x252                 	// #594
 1c4:	bl	0 <__assert_fail>
 1c8:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E18moveFromOldBucketsEPSJ_SM_>
 1cc:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E18moveFromOldBucketsEPSJ_SM_>
 1d0:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E18moveFromOldBucketsEPSJ_SM_>
 1d4:	add	x0, x0, #0x0
 1d8:	add	x1, x1, #0x0
 1dc:	add	x3, x3, #0x0
 1e0:	mov	w2, #0x15c                 	// #348
 1e4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm6detail17AnalysisPassModelINS_8FunctionENS_21TargetLibraryAnalysisENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorEJEED2Ev:

0000000000000000 <_ZN4llvm6detail17AnalysisPassModelINS_8FunctionENS_21TargetLibraryAnalysisENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorEJEED2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	adrp	x9, 0 <_ZN4llvm6detail17AnalysisPassModelINS_8FunctionENS_21TargetLibraryAnalysisENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorEJEED2Ev>
  14:	ldrb	w8, [x0, #208]
  18:	ldr	x9, [x9]
  1c:	add	x9, x9, #0x10
  20:	str	x9, [x0]
  24:	cbz	w8, a4 <_ZN4llvm6detail17AnalysisPassModelINS_8FunctionENS_21TargetLibraryAnalysisENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorEJEED2Ev+0xa4>
  28:	mov	x19, x0
  2c:	ldr	x0, [x0, #184]
  30:	cbz	x0, 38 <_ZN4llvm6detail17AnalysisPassModelINS_8FunctionENS_21TargetLibraryAnalysisENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorEJEED2Ev+0x38>
  34:	bl	0 <_ZdlPv>
  38:	ldr	x0, [x19, #160]
  3c:	cbz	x0, 44 <_ZN4llvm6detail17AnalysisPassModelINS_8FunctionENS_21TargetLibraryAnalysisENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorEJEED2Ev+0x44>
  40:	bl	0 <_ZdlPv>
  44:	ldr	w8, [x19, #144]
  48:	cbz	w8, 8c <_ZN4llvm6detail17AnalysisPassModelINS_8FunctionENS_21TargetLibraryAnalysisENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorEJEED2Ev+0x8c>
  4c:	ldr	x9, [x19, #128]
  50:	add	x8, x8, x8, lsl #2
  54:	lsl	x20, x8, #3
  58:	add	x21, x9, #0x18
  5c:	b	6c <_ZN4llvm6detail17AnalysisPassModelINS_8FunctionENS_21TargetLibraryAnalysisENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorEJEED2Ev+0x6c>
  60:	subs	x20, x20, #0x28
  64:	add	x21, x21, #0x28
  68:	b.eq	8c <_ZN4llvm6detail17AnalysisPassModelINS_8FunctionENS_21TargetLibraryAnalysisENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorEJEED2Ev+0x8c>  // b.none
  6c:	ldur	w8, [x21, #-24]
  70:	cmn	w8, #0x3
  74:	b.hi	60 <_ZN4llvm6detail17AnalysisPassModelINS_8FunctionENS_21TargetLibraryAnalysisENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorEJEED2Ev+0x60>  // b.pmore
  78:	ldur	x0, [x21, #-16]
  7c:	cmp	x21, x0
  80:	b.eq	60 <_ZN4llvm6detail17AnalysisPassModelINS_8FunctionENS_21TargetLibraryAnalysisENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorEJEED2Ev+0x60>  // b.none
  84:	bl	0 <_ZdlPv>
  88:	b	60 <_ZN4llvm6detail17AnalysisPassModelINS_8FunctionENS_21TargetLibraryAnalysisENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorEJEED2Ev+0x60>
  8c:	ldr	x0, [x19, #128]
  90:	bl	0 <_ZdlPv>
  94:	ldr	x8, [x19, #120]
  98:	strb	wzr, [x19, #208]
  9c:	add	x8, x8, #0x1
  a0:	str	x8, [x19, #120]
  a4:	ldp	x20, x19, [sp, #32]
  a8:	ldr	x21, [sp, #16]
  ac:	ldp	x29, x30, [sp], #48
  b0:	ret

Disassembly of section .text._ZN4llvm6detail17AnalysisPassModelINS_8FunctionENS_21TargetLibraryAnalysisENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorEJEED0Ev:

0000000000000000 <_ZN4llvm6detail17AnalysisPassModelINS_8FunctionENS_21TargetLibraryAnalysisENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorEJEED0Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	adrp	x9, 0 <_ZN4llvm6detail17AnalysisPassModelINS_8FunctionENS_21TargetLibraryAnalysisENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorEJEED0Ev>
  14:	ldrb	w8, [x0, #208]
  18:	ldr	x9, [x9]
  1c:	mov	x19, x0
  20:	add	x9, x9, #0x10
  24:	str	x9, [x0]
  28:	cbz	w8, 94 <_ZN4llvm6detail17AnalysisPassModelINS_8FunctionENS_21TargetLibraryAnalysisENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorEJEED0Ev+0x94>
  2c:	ldr	x0, [x19, #184]
  30:	cbz	x0, 38 <_ZN4llvm6detail17AnalysisPassModelINS_8FunctionENS_21TargetLibraryAnalysisENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorEJEED0Ev+0x38>
  34:	bl	0 <_ZdlPv>
  38:	ldr	x0, [x19, #160]
  3c:	cbz	x0, 44 <_ZN4llvm6detail17AnalysisPassModelINS_8FunctionENS_21TargetLibraryAnalysisENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorEJEED0Ev+0x44>
  40:	bl	0 <_ZdlPv>
  44:	ldr	w8, [x19, #144]
  48:	cbz	w8, 8c <_ZN4llvm6detail17AnalysisPassModelINS_8FunctionENS_21TargetLibraryAnalysisENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorEJEED0Ev+0x8c>
  4c:	ldr	x9, [x19, #128]
  50:	add	x8, x8, x8, lsl #2
  54:	lsl	x20, x8, #3
  58:	add	x21, x9, #0x18
  5c:	b	6c <_ZN4llvm6detail17AnalysisPassModelINS_8FunctionENS_21TargetLibraryAnalysisENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorEJEED0Ev+0x6c>
  60:	subs	x20, x20, #0x28
  64:	add	x21, x21, #0x28
  68:	b.eq	8c <_ZN4llvm6detail17AnalysisPassModelINS_8FunctionENS_21TargetLibraryAnalysisENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorEJEED0Ev+0x8c>  // b.none
  6c:	ldur	w8, [x21, #-24]
  70:	cmn	w8, #0x3
  74:	b.hi	60 <_ZN4llvm6detail17AnalysisPassModelINS_8FunctionENS_21TargetLibraryAnalysisENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorEJEED0Ev+0x60>  // b.pmore
  78:	ldur	x0, [x21, #-16]
  7c:	cmp	x21, x0
  80:	b.eq	60 <_ZN4llvm6detail17AnalysisPassModelINS_8FunctionENS_21TargetLibraryAnalysisENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorEJEED0Ev+0x60>  // b.none
  84:	bl	0 <_ZdlPv>
  88:	b	60 <_ZN4llvm6detail17AnalysisPassModelINS_8FunctionENS_21TargetLibraryAnalysisENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorEJEED0Ev+0x60>
  8c:	ldr	x0, [x19, #128]
  90:	bl	0 <_ZdlPv>
  94:	mov	x0, x19
  98:	ldp	x20, x19, [sp, #32]
  9c:	ldr	x21, [sp, #16]
  a0:	ldp	x29, x30, [sp], #48
  a4:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm6detail17AnalysisPassModelINS_8FunctionENS_21TargetLibraryAnalysisENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorEJEE3runERS2_RS6_:

0000000000000000 <_ZN4llvm6detail17AnalysisPassModelINS_8FunctionENS_21TargetLibraryAnalysisENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorEJEE3runERS2_RS6_>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #32]
   8:	str	x19, [sp, #48]
   c:	add	x29, sp, #0x20
  10:	mov	x19, x8
  14:	add	x0, x0, #0x8
  18:	mov	x8, sp
  1c:	bl	0 <_ZN4llvm21TargetLibraryAnalysis3runERKNS_8FunctionERNS_15AnalysisManagerIS1_JEEE>
  20:	add	x8, x29, #0x18
  24:	mov	x0, sp
  28:	bl	0 <_ZN4llvm6detail17AnalysisPassModelINS_8FunctionENS_21TargetLibraryAnalysisENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorEJEE3runERS2_RS6_>
  2c:	ldr	x8, [x29, #24]
  30:	ldr	x0, [sp, #8]
  34:	str	xzr, [x29, #24]
  38:	str	x8, [x19]
  3c:	bl	0 <free>
  40:	ldr	x19, [sp, #48]
  44:	ldp	x29, x30, [sp, #32]
  48:	add	sp, sp, #0x40
  4c:	ret

Disassembly of section .text._ZNK4llvm6detail17AnalysisPassModelINS_8FunctionENS_21TargetLibraryAnalysisENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorEJEE4nameEv:

0000000000000000 <_ZNK4llvm6detail17AnalysisPassModelINS_8FunctionENS_21TargetLibraryAnalysisENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorEJEE4nameEv>:
   0:	b	0 <_ZNK4llvm6detail17AnalysisPassModelINS_8FunctionENS_21TargetLibraryAnalysisENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorEJEE4nameEv>

Disassembly of section .text._ZSt11make_uniqueIN4llvm6detail19AnalysisResultModelINS0_8FunctionENS0_21TargetLibraryAnalysisENS0_17TargetLibraryInfoENS0_17PreservedAnalysesENS0_15AnalysisManagerIS3_JEE11InvalidatorELb1EEEJS5_EENSt9_MakeUniqIT_E15__single_objectEDpOT0_:

0000000000000000 <_ZSt11make_uniqueIN4llvm6detail19AnalysisResultModelINS0_8FunctionENS0_21TargetLibraryAnalysisENS0_17TargetLibraryInfoENS0_17PreservedAnalysesENS0_15AnalysisManagerIS3_JEE11InvalidatorELb1EEEJS5_EENSt9_MakeUniqIT_E15__single_objectEDpOT0_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x22, x0
  1c:	mov	w0, #0x28                  	// #40
  20:	mov	x19, x8
  24:	bl	0 <_Znwm>
  28:	ldr	w24, [x22, #24]
  2c:	ldr	x25, [x22]
  30:	mov	x20, x0
  34:	cbz	w24, 70 <_ZSt11make_uniqueIN4llvm6detail19AnalysisResultModelINS0_8FunctionENS0_21TargetLibraryAnalysisENS0_17TargetLibraryInfoENS0_17PreservedAnalysesENS0_15AnalysisManagerIS3_JEE11InvalidatorELb1EEEJS5_EENSt9_MakeUniqIT_E15__single_objectEDpOT0_+0x70>
  38:	add	w8, w24, #0x3f
  3c:	lsr	w26, w8, #6
  40:	lsl	w23, w26, #3
  44:	mov	x0, x23
  48:	bl	0 <malloc>
  4c:	mov	x21, x0
  50:	cbnz	x0, 98 <_ZSt11make_uniqueIN4llvm6detail19AnalysisResultModelINS0_8FunctionENS0_21TargetLibraryAnalysisENS0_17TargetLibraryInfoENS0_17PreservedAnalysesENS0_15AnalysisManagerIS3_JEE11InvalidatorELb1EEEJS5_EENSt9_MakeUniqIT_E15__single_objectEDpOT0_+0x98>
  54:	cbz	w26, 78 <_ZSt11make_uniqueIN4llvm6detail19AnalysisResultModelINS0_8FunctionENS0_21TargetLibraryAnalysisENS0_17TargetLibraryInfoENS0_17PreservedAnalysesENS0_15AnalysisManagerIS3_JEE11InvalidatorELb1EEEJS5_EENSt9_MakeUniqIT_E15__single_objectEDpOT0_+0x78>
  58:	adrp	x0, 0 <_ZSt11make_uniqueIN4llvm6detail19AnalysisResultModelINS0_8FunctionENS0_21TargetLibraryAnalysisENS0_17TargetLibraryInfoENS0_17PreservedAnalysesENS0_15AnalysisManagerIS3_JEE11InvalidatorELb1EEEJS5_EENSt9_MakeUniqIT_E15__single_objectEDpOT0_>
  5c:	add	x0, x0, #0x0
  60:	mov	w1, #0x1                   	// #1
  64:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  68:	mov	x21, xzr
  6c:	b	98 <_ZSt11make_uniqueIN4llvm6detail19AnalysisResultModelINS0_8FunctionENS0_21TargetLibraryAnalysisENS0_17TargetLibraryInfoENS0_17PreservedAnalysesENS0_15AnalysisManagerIS3_JEE11InvalidatorELb1EEEJS5_EENSt9_MakeUniqIT_E15__single_objectEDpOT0_+0x98>
  70:	mov	x21, xzr
  74:	b	a8 <_ZSt11make_uniqueIN4llvm6detail19AnalysisResultModelINS0_8FunctionENS0_21TargetLibraryAnalysisENS0_17TargetLibraryInfoENS0_17PreservedAnalysesENS0_15AnalysisManagerIS3_JEE11InvalidatorELb1EEEJS5_EENSt9_MakeUniqIT_E15__single_objectEDpOT0_+0xa8>
  78:	mov	w0, #0x1                   	// #1
  7c:	bl	0 <malloc>
  80:	mov	x21, x0
  84:	cbnz	x0, 98 <_ZSt11make_uniqueIN4llvm6detail19AnalysisResultModelINS0_8FunctionENS0_21TargetLibraryAnalysisENS0_17TargetLibraryInfoENS0_17PreservedAnalysesENS0_15AnalysisManagerIS3_JEE11InvalidatorELb1EEEJS5_EENSt9_MakeUniqIT_E15__single_objectEDpOT0_+0x98>
  88:	adrp	x0, 0 <_ZSt11make_uniqueIN4llvm6detail19AnalysisResultModelINS0_8FunctionENS0_21TargetLibraryAnalysisENS0_17TargetLibraryInfoENS0_17PreservedAnalysesENS0_15AnalysisManagerIS3_JEE11InvalidatorELb1EEEJS5_EENSt9_MakeUniqIT_E15__single_objectEDpOT0_>
  8c:	add	x0, x0, #0x0
  90:	mov	w1, #0x1                   	// #1
  94:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  98:	ldr	x1, [x22, #8]
  9c:	mov	x0, x21
  a0:	mov	x2, x23
  a4:	bl	0 <memcpy>
  a8:	adrp	x9, 0 <_ZSt11make_uniqueIN4llvm6detail19AnalysisResultModelINS0_8FunctionENS0_21TargetLibraryAnalysisENS0_17TargetLibraryInfoENS0_17PreservedAnalysesENS0_15AnalysisManagerIS3_JEE11InvalidatorELb1EEEJS5_EENSt9_MakeUniqIT_E15__single_objectEDpOT0_>
  ac:	ldr	x9, [x9]
  b0:	mov	x8, x20
  b4:	str	xzr, [x20, #24]
  b8:	add	x9, x9, #0x10
  bc:	stp	x9, x25, [x20]
  c0:	str	xzr, [x8, #16]!
  c4:	str	w24, [x20, #32]
  c8:	cbz	w24, 100 <_ZSt11make_uniqueIN4llvm6detail19AnalysisResultModelINS0_8FunctionENS0_21TargetLibraryAnalysisENS0_17TargetLibraryInfoENS0_17PreservedAnalysesENS0_15AnalysisManagerIS3_JEE11InvalidatorELb1EEEJS5_EENSt9_MakeUniqIT_E15__single_objectEDpOT0_+0x100>
  cc:	add	w8, w24, #0x3f
  d0:	lsr	w23, w8, #6
  d4:	lsl	x22, x23, #3
  d8:	mov	x0, x22
  dc:	bl	0 <malloc>
  e0:	cbnz	x0, 114 <_ZSt11make_uniqueIN4llvm6detail19AnalysisResultModelINS0_8FunctionENS0_21TargetLibraryAnalysisENS0_17TargetLibraryInfoENS0_17PreservedAnalysesENS0_15AnalysisManagerIS3_JEE11InvalidatorELb1EEEJS5_EENSt9_MakeUniqIT_E15__single_objectEDpOT0_+0x114>
  e4:	cbz	w23, 108 <_ZSt11make_uniqueIN4llvm6detail19AnalysisResultModelINS0_8FunctionENS0_21TargetLibraryAnalysisENS0_17TargetLibraryInfoENS0_17PreservedAnalysesENS0_15AnalysisManagerIS3_JEE11InvalidatorELb1EEEJS5_EENSt9_MakeUniqIT_E15__single_objectEDpOT0_+0x108>
  e8:	adrp	x0, 0 <_ZSt11make_uniqueIN4llvm6detail19AnalysisResultModelINS0_8FunctionENS0_21TargetLibraryAnalysisENS0_17TargetLibraryInfoENS0_17PreservedAnalysesENS0_15AnalysisManagerIS3_JEE11InvalidatorELb1EEEJS5_EENSt9_MakeUniqIT_E15__single_objectEDpOT0_>
  ec:	add	x0, x0, #0x0
  f0:	mov	w1, #0x1                   	// #1
  f4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  f8:	mov	x0, xzr
  fc:	b	114 <_ZSt11make_uniqueIN4llvm6detail19AnalysisResultModelINS0_8FunctionENS0_21TargetLibraryAnalysisENS0_17TargetLibraryInfoENS0_17PreservedAnalysesENS0_15AnalysisManagerIS3_JEE11InvalidatorELb1EEEJS5_EENSt9_MakeUniqIT_E15__single_objectEDpOT0_+0x114>
 100:	stp	xzr, xzr, [x8]
 104:	b	124 <_ZSt11make_uniqueIN4llvm6detail19AnalysisResultModelINS0_8FunctionENS0_21TargetLibraryAnalysisENS0_17TargetLibraryInfoENS0_17PreservedAnalysesENS0_15AnalysisManagerIS3_JEE11InvalidatorELb1EEEJS5_EENSt9_MakeUniqIT_E15__single_objectEDpOT0_+0x124>
 108:	mov	w0, #0x1                   	// #1
 10c:	bl	0 <malloc>
 110:	cbz	x0, e8 <_ZSt11make_uniqueIN4llvm6detail19AnalysisResultModelINS0_8FunctionENS0_21TargetLibraryAnalysisENS0_17TargetLibraryInfoENS0_17PreservedAnalysesENS0_15AnalysisManagerIS3_JEE11InvalidatorELb1EEEJS5_EENSt9_MakeUniqIT_E15__single_objectEDpOT0_+0xe8>
 114:	mov	x1, x21
 118:	mov	x2, x22
 11c:	stp	x0, x23, [x20, #16]
 120:	bl	0 <memcpy>
 124:	str	x20, [x19]
 128:	mov	x0, x21
 12c:	ldp	x20, x19, [sp, #64]
 130:	ldp	x22, x21, [sp, #48]
 134:	ldp	x24, x23, [sp, #32]
 138:	ldp	x26, x25, [sp, #16]
 13c:	ldp	x29, x30, [sp], #80
 140:	b	0 <free>

Disassembly of section .text._ZN4llvm6detail19AnalysisResultModelINS_8FunctionENS_21TargetLibraryAnalysisENS_17TargetLibraryInfoENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorELb1EED2Ev:

0000000000000000 <_ZN4llvm6detail19AnalysisResultModelINS_8FunctionENS_21TargetLibraryAnalysisENS_17TargetLibraryInfoENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorELb1EED2Ev>:
   0:	adrp	x9, 0 <_ZN4llvm6detail19AnalysisResultModelINS_8FunctionENS_21TargetLibraryAnalysisENS_17TargetLibraryInfoENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorELb1EED2Ev>
   4:	ldr	x8, [x0, #16]
   8:	ldr	x9, [x9]
   c:	add	x9, x9, #0x10
  10:	str	x9, [x0]
  14:	mov	x0, x8
  18:	b	0 <free>

Disassembly of section .text._ZN4llvm6detail19AnalysisResultModelINS_8FunctionENS_21TargetLibraryAnalysisENS_17TargetLibraryInfoENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorELb1EED0Ev:

0000000000000000 <_ZN4llvm6detail19AnalysisResultModelINS_8FunctionENS_21TargetLibraryAnalysisENS_17TargetLibraryInfoENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorELb1EED0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm6detail19AnalysisResultModelINS_8FunctionENS_21TargetLibraryAnalysisENS_17TargetLibraryInfoENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorELb1EED0Ev>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #16]
  18:	ldr	x8, [x8]
  1c:	add	x8, x8, #0x10
  20:	str	x8, [x19]
  24:	bl	0 <free>
  28:	mov	x0, x19
  2c:	ldr	x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm6detail19AnalysisResultModelINS_8FunctionENS_21TargetLibraryAnalysisENS_17TargetLibraryInfoENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorELb1EE10invalidateERS2_RKS5_RS8_:

0000000000000000 <_ZN4llvm6detail19AnalysisResultModelINS_8FunctionENS_21TargetLibraryAnalysisENS_17TargetLibraryInfoENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorELb1EE10invalidateERS2_RKS5_RS8_>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZN4llvm13PassInfoMixinINS_21TargetLibraryAnalysisEE4nameEv:

0000000000000000 <_ZN4llvm13PassInfoMixinINS_21TargetLibraryAnalysisEE4nameEv>:
   0:	sub	sp, sp, #0x20
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	adrp	x8, 0 <_ZN4llvm13PassInfoMixinINS_21TargetLibraryAnalysisEE4nameEv>
  10:	adrp	x1, 0 <_ZN4llvm13PassInfoMixinINS_21TargetLibraryAnalysisEE4nameEv>
  14:	add	x8, x8, #0x0
  18:	mov	w9, #0x53                  	// #83
  1c:	add	x1, x1, #0x0
  20:	mov	x0, sp
  24:	mov	w2, #0x12                  	// #18
  28:	mov	x3, xzr
  2c:	stp	x8, x9, [sp]
  30:	bl	0 <_ZNK4llvm9StringRef4findES0_m>
  34:	ldp	x9, x8, [sp]
  38:	cmp	x8, x0
  3c:	csel	x10, x8, x0, cc  // cc = lo, ul, last
  40:	add	x9, x9, x10
  44:	subs	x8, x8, x10
  48:	stp	x9, x8, [sp]
  4c:	b.eq	e8 <_ZN4llvm13PassInfoMixinINS_21TargetLibraryAnalysisEE4nameEv+0xe8>  // b.none
  50:	cmp	x8, #0x11
  54:	b.ls	108 <_ZN4llvm13PassInfoMixinINS_21TargetLibraryAnalysisEE4nameEv+0x108>  // b.plast
  58:	add	x0, x9, #0x12
  5c:	subs	x9, x8, #0x12
  60:	stp	x0, x9, [sp]
  64:	b.eq	c8 <_ZN4llvm13PassInfoMixinINS_21TargetLibraryAnalysisEE4nameEv+0xc8>  // b.none
  68:	add	x9, x0, x9
  6c:	ldurb	w9, [x9, #-1]
  70:	cmp	w9, #0x5d
  74:	b.ne	c8 <_ZN4llvm13PassInfoMixinINS_21TargetLibraryAnalysisEE4nameEv+0xc8>  // b.any
  78:	sub	x1, x8, #0x13
  7c:	cmp	x1, #0x6
  80:	b.cc	a8 <_ZN4llvm13PassInfoMixinINS_21TargetLibraryAnalysisEE4nameEv+0xa8>  // b.lo, b.ul, b.last
  84:	ldr	w9, [x0]
  88:	ldrh	w10, [x0, #4]
  8c:	mov	w11, #0x6c6c                	// #27756
  90:	movk	w11, #0x6d76, lsl #16
  94:	mov	w12, #0x3a3a                	// #14906
  98:	eor	w9, w9, w11
  9c:	eor	w10, w10, w12
  a0:	orr	w9, w9, w10
  a4:	cbz	w9, b4 <_ZN4llvm13PassInfoMixinINS_21TargetLibraryAnalysisEE4nameEv+0xb4>
  a8:	ldp	x29, x30, [sp, #16]
  ac:	add	sp, sp, #0x20
  b0:	ret
  b4:	add	x0, x0, #0x6
  b8:	sub	x1, x8, #0x19
  bc:	ldp	x29, x30, [sp, #16]
  c0:	add	sp, sp, #0x20
  c4:	ret
  c8:	adrp	x0, 0 <_ZN4llvm13PassInfoMixinINS_21TargetLibraryAnalysisEE4nameEv>
  cc:	adrp	x1, 0 <_ZN4llvm13PassInfoMixinINS_21TargetLibraryAnalysisEE4nameEv>
  d0:	adrp	x3, 0 <_ZN4llvm13PassInfoMixinINS_21TargetLibraryAnalysisEE4nameEv>
  d4:	add	x0, x0, #0x0
  d8:	add	x1, x1, #0x0
  dc:	add	x3, x3, #0x0
  e0:	mov	w2, #0x24                  	// #36
  e4:	bl	0 <__assert_fail>
  e8:	adrp	x0, 0 <_ZN4llvm13PassInfoMixinINS_21TargetLibraryAnalysisEE4nameEv>
  ec:	adrp	x1, 0 <_ZN4llvm13PassInfoMixinINS_21TargetLibraryAnalysisEE4nameEv>
  f0:	adrp	x3, 0 <_ZN4llvm13PassInfoMixinINS_21TargetLibraryAnalysisEE4nameEv>
  f4:	add	x0, x0, #0x0
  f8:	add	x1, x1, #0x0
  fc:	add	x3, x3, #0x0
 100:	mov	w2, #0x21                  	// #33
 104:	bl	0 <__assert_fail>
 108:	adrp	x0, 0 <_ZN4llvm13PassInfoMixinINS_21TargetLibraryAnalysisEE4nameEv>
 10c:	adrp	x1, 0 <_ZN4llvm13PassInfoMixinINS_21TargetLibraryAnalysisEE4nameEv>
 110:	adrp	x3, 0 <_ZN4llvm13PassInfoMixinINS_21TargetLibraryAnalysisEE4nameEv>
 114:	add	x0, x0, #0x0
 118:	add	x1, x1, #0x0
 11c:	add	x3, x3, #0x0
 120:	mov	w2, #0x283                 	// #643
 124:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorEJEED2Ev:

0000000000000000 <_ZN4llvm6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorEJEED2Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm6detail17AnalysisPassModelINS_8FunctionENS_27PassInstrumentationAnalysisENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorEJEED0Ev:

0000000000000000 <_ZN4llvm6detail17AnalysisPassModelINS_8FunctionENS_27PassInstrumentationAnalysisENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorEJEED0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm6detail17AnalysisPassModelINS_8FunctionENS_27PassInstrumentationAnalysisENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorEJEE3runERS2_RS6_:

0000000000000000 <_ZN4llvm6detail17AnalysisPassModelINS_8FunctionENS_27PassInstrumentationAnalysisENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorEJEE3runERS2_RS6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x20, [x0, #8]
  10:	mov	w0, #0x10                  	// #16
  14:	mov	x19, x8
  18:	bl	0 <_Znwm>
  1c:	adrp	x8, 0 <_ZN4llvm6detail17AnalysisPassModelINS_8FunctionENS_27PassInstrumentationAnalysisENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorEJEE3runERS2_RS6_>
  20:	ldr	x8, [x8]
  24:	str	x0, [x19]
  28:	add	x8, x8, #0x10
  2c:	stp	x8, x20, [x0]
  30:	ldp	x20, x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	ret

Disassembly of section .text._ZNK4llvm6detail17AnalysisPassModelINS_8FunctionENS_27PassInstrumentationAnalysisENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorEJEE4nameEv:

0000000000000000 <_ZNK4llvm6detail17AnalysisPassModelINS_8FunctionENS_27PassInstrumentationAnalysisENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorEJEE4nameEv>:
   0:	b	0 <_ZNK4llvm6detail17AnalysisPassModelINS_8FunctionENS_27PassInstrumentationAnalysisENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorEJEE4nameEv>

Disassembly of section .text._ZN4llvm6detail21AnalysisResultConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorEED2Ev:

0000000000000000 <_ZN4llvm6detail21AnalysisResultConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorEED2Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm6detail19AnalysisResultModelINS_8FunctionENS_27PassInstrumentationAnalysisENS_19PassInstrumentationENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorELb1EED0Ev:

0000000000000000 <_ZN4llvm6detail19AnalysisResultModelINS_8FunctionENS_27PassInstrumentationAnalysisENS_19PassInstrumentationENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorELb1EED0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm6detail19AnalysisResultModelINS_8FunctionENS_27PassInstrumentationAnalysisENS_19PassInstrumentationENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorELb1EE10invalidateERS2_RKS5_RS8_:

0000000000000000 <_ZN4llvm6detail19AnalysisResultModelINS_8FunctionENS_27PassInstrumentationAnalysisENS_19PassInstrumentationENS_17PreservedAnalysesENS_15AnalysisManagerIS2_JEE11InvalidatorELb1EE10invalidateERS2_RKS5_RS8_>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZN4llvm13PassInfoMixinINS_27PassInstrumentationAnalysisEE4nameEv:

0000000000000000 <_ZN4llvm13PassInfoMixinINS_27PassInstrumentationAnalysisEE4nameEv>:
   0:	sub	sp, sp, #0x20
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	adrp	x8, 0 <_ZN4llvm13PassInfoMixinINS_27PassInstrumentationAnalysisEE4nameEv>
  10:	adrp	x1, 0 <_ZN4llvm13PassInfoMixinINS_27PassInstrumentationAnalysisEE4nameEv>
  14:	add	x8, x8, #0x0
  18:	mov	w9, #0x59                  	// #89
  1c:	add	x1, x1, #0x0
  20:	mov	x0, sp
  24:	mov	w2, #0x12                  	// #18
  28:	mov	x3, xzr
  2c:	stp	x8, x9, [sp]
  30:	bl	0 <_ZNK4llvm9StringRef4findES0_m>
  34:	ldp	x9, x8, [sp]
  38:	cmp	x8, x0
  3c:	csel	x10, x8, x0, cc  // cc = lo, ul, last
  40:	add	x9, x9, x10
  44:	subs	x8, x8, x10
  48:	stp	x9, x8, [sp]
  4c:	b.eq	e8 <_ZN4llvm13PassInfoMixinINS_27PassInstrumentationAnalysisEE4nameEv+0xe8>  // b.none
  50:	cmp	x8, #0x11
  54:	b.ls	108 <_ZN4llvm13PassInfoMixinINS_27PassInstrumentationAnalysisEE4nameEv+0x108>  // b.plast
  58:	add	x0, x9, #0x12
  5c:	subs	x9, x8, #0x12
  60:	stp	x0, x9, [sp]
  64:	b.eq	c8 <_ZN4llvm13PassInfoMixinINS_27PassInstrumentationAnalysisEE4nameEv+0xc8>  // b.none
  68:	add	x9, x0, x9
  6c:	ldurb	w9, [x9, #-1]
  70:	cmp	w9, #0x5d
  74:	b.ne	c8 <_ZN4llvm13PassInfoMixinINS_27PassInstrumentationAnalysisEE4nameEv+0xc8>  // b.any
  78:	sub	x1, x8, #0x13
  7c:	cmp	x1, #0x6
  80:	b.cc	a8 <_ZN4llvm13PassInfoMixinINS_27PassInstrumentationAnalysisEE4nameEv+0xa8>  // b.lo, b.ul, b.last
  84:	ldr	w9, [x0]
  88:	ldrh	w10, [x0, #4]
  8c:	mov	w11, #0x6c6c                	// #27756
  90:	movk	w11, #0x6d76, lsl #16
  94:	mov	w12, #0x3a3a                	// #14906
  98:	eor	w9, w9, w11
  9c:	eor	w10, w10, w12
  a0:	orr	w9, w9, w10
  a4:	cbz	w9, b4 <_ZN4llvm13PassInfoMixinINS_27PassInstrumentationAnalysisEE4nameEv+0xb4>
  a8:	ldp	x29, x30, [sp, #16]
  ac:	add	sp, sp, #0x20
  b0:	ret
  b4:	add	x0, x0, #0x6
  b8:	sub	x1, x8, #0x19
  bc:	ldp	x29, x30, [sp, #16]
  c0:	add	sp, sp, #0x20
  c4:	ret
  c8:	adrp	x0, 0 <_ZN4llvm13PassInfoMixinINS_27PassInstrumentationAnalysisEE4nameEv>
  cc:	adrp	x1, 0 <_ZN4llvm13PassInfoMixinINS_27PassInstrumentationAnalysisEE4nameEv>
  d0:	adrp	x3, 0 <_ZN4llvm13PassInfoMixinINS_27PassInstrumentationAnalysisEE4nameEv>
  d4:	add	x0, x0, #0x0
  d8:	add	x1, x1, #0x0
  dc:	add	x3, x3, #0x0
  e0:	mov	w2, #0x24                  	// #36
  e4:	bl	0 <__assert_fail>
  e8:	adrp	x0, 0 <_ZN4llvm13PassInfoMixinINS_27PassInstrumentationAnalysisEE4nameEv>
  ec:	adrp	x1, 0 <_ZN4llvm13PassInfoMixinINS_27PassInstrumentationAnalysisEE4nameEv>
  f0:	adrp	x3, 0 <_ZN4llvm13PassInfoMixinINS_27PassInstrumentationAnalysisEE4nameEv>
  f4:	add	x0, x0, #0x0
  f8:	add	x1, x1, #0x0
  fc:	add	x3, x3, #0x0
 100:	mov	w2, #0x21                  	// #33
 104:	bl	0 <__assert_fail>
 108:	adrp	x0, 0 <_ZN4llvm13PassInfoMixinINS_27PassInstrumentationAnalysisEE4nameEv>
 10c:	adrp	x1, 0 <_ZN4llvm13PassInfoMixinINS_27PassInstrumentationAnalysisEE4nameEv>
 110:	adrp	x3, 0 <_ZN4llvm13PassInfoMixinINS_27PassInstrumentationAnalysisEE4nameEv>
 114:	add	x0, x0, #0x0
 118:	add	x1, x1, #0x0
 11c:	add	x3, x3, #0x0
 120:	mov	w2, #0x283                 	// #643
 124:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_:

0000000000000000 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	add	x8, x1, #0x48
   c:	str	x8, [x0]
  10:	ldr	x9, [x1, #80]
  14:	cmp	x9, x8
  18:	stp	x9, xzr, [x0, #8]
  1c:	b.eq	a4 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0xa4>  // b.none
  20:	ldrb	w10, [x9]
  24:	tbnz	w10, #2, 84 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x84>
  28:	ldr	x10, [x9, #24]
  2c:	str	x10, [x0, #16]
  30:	ldrb	w11, [x9]
  34:	tbnz	w11, #2, 84 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x84>
  38:	sub	x11, x9, #0x18
  3c:	cmp	x9, #0x0
  40:	csel	x11, xzr, x11, eq  // eq = none
  44:	add	x11, x11, #0x28
  48:	cmp	x10, x11
  4c:	b.ne	a4 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0xa4>  // b.any
  50:	ldr	x9, [x9, #8]
  54:	cmp	x8, x9
  58:	str	x9, [x0, #8]
  5c:	b.eq	a4 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0xa4>  // b.none
  60:	ldrb	w10, [x9]
  64:	tbnz	w10, #2, 84 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x84>
  68:	sub	x10, x9, #0x18
  6c:	cmp	x9, #0x0
  70:	csel	x10, xzr, x10, eq  // eq = none
  74:	ldr	x10, [x10, #48]
  78:	str	x10, [x0, #16]
  7c:	ldrb	w11, [x9]
  80:	tbz	w11, #2, 38 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x38>
  84:	adrp	x0, 0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  88:	adrp	x1, 0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  8c:	adrp	x3, 0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  90:	add	x0, x0, #0x0
  94:	add	x1, x1, #0x0
  98:	add	x3, x3, #0x0
  9c:	mov	w2, #0x8b                  	// #139
  a0:	bl	0 <__assert_fail>
  a4:	ldp	x29, x30, [sp], #16
  a8:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #48]
   8:	stp	x26, x25, [sp, #64]
   c:	stp	x24, x23, [sp, #80]
  10:	stp	x22, x21, [sp, #96]
  14:	stp	x20, x19, [sp, #112]
  18:	add	x29, sp, #0x30
  1c:	mov	x19, x0
  20:	cmp	x0, x1
  24:	b.eq	3f8 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x3f8>  // b.none
  28:	ldr	w20, [x1, #8]
  2c:	ldr	w23, [x19, #8]
  30:	mov	x21, x1
  34:	cmp	w23, w20
  38:	b.cs	9c <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x9c>  // b.hs, b.nlast
  3c:	ldr	w8, [x19, #12]
  40:	cmp	w8, w20
  44:	b.cs	1cc <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x1cc>  // b.hs, b.nlast
  48:	cbz	w23, 2e0 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x2e0>
  4c:	ldr	x22, [x19]
  50:	lsl	x23, x23, #6
  54:	b	60 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x60>
  58:	subs	x23, x23, #0x40
  5c:	b.eq	2e0 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x2e0>  // b.none
  60:	add	x24, x22, x23
  64:	ldur	x8, [x24, #-16]
  68:	cbz	x8, 7c <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x7c>
  6c:	sub	x0, x24, #0x20
  70:	mov	w2, #0x3                   	// #3
  74:	mov	x1, x0
  78:	blr	x8
  7c:	ldur	x8, [x24, #-48]
  80:	cbz	x8, 58 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x58>
  84:	add	x9, x22, x23
  88:	sub	x0, x9, #0x40
  8c:	mov	w2, #0x3                   	// #3
  90:	mov	x1, x0
  94:	blr	x8
  98:	b	58 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x58>
  9c:	ldr	x22, [x19]
  a0:	cbz	w20, 384 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x384>
  a4:	ldr	x8, [x21]
  a8:	add	x23, x20, #0x1
  ac:	add	x21, x8, #0x20
  b0:	b	c8 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0xc8>
  b4:	sub	x23, x23, #0x1
  b8:	add	x22, x22, #0x40
  bc:	cmp	x23, #0x1
  c0:	add	x21, x21, #0x40
  c4:	b.le	1b0 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x1b0>
  c8:	str	xzr, [sp, #16]
  cc:	ldur	x8, [x21, #-16]
  d0:	cbz	x8, f8 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0xf8>
  d4:	sub	x1, x21, #0x20
  d8:	mov	x0, sp
  dc:	mov	w2, #0x2                   	// #2
  e0:	blr	x8
  e4:	ldur	x8, [x21, #-8]
  e8:	str	x8, [sp, #24]
  ec:	ldur	x9, [x21, #-16]
  f0:	str	x9, [sp, #16]
  f4:	b	fc <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0xfc>
  f8:	mov	x9, xzr
  fc:	ldr	q0, [sp]
 100:	stur	q0, [x29, #-16]
 104:	ldr	q1, [x22]
 108:	str	q1, [sp]
 10c:	ldr	x10, [x22, #16]
 110:	str	q0, [x22]
 114:	str	x10, [sp, #16]
 118:	ldr	x11, [x22, #24]
 11c:	str	x9, [x22, #16]
 120:	str	x11, [sp, #24]
 124:	str	x8, [x22, #24]
 128:	cbz	x10, 13c <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x13c>
 12c:	mov	x0, sp
 130:	mov	x1, sp
 134:	mov	w2, #0x3                   	// #3
 138:	blr	x10
 13c:	str	xzr, [sp, #16]
 140:	ldr	x8, [x21, #16]
 144:	cbz	x8, 16c <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x16c>
 148:	mov	x0, sp
 14c:	mov	w2, #0x2                   	// #2
 150:	mov	x1, x21
 154:	blr	x8
 158:	ldr	x8, [x21, #24]
 15c:	str	x8, [sp, #24]
 160:	ldr	x9, [x21, #16]
 164:	str	x9, [sp, #16]
 168:	b	170 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x170>
 16c:	mov	x9, xzr
 170:	ldr	q0, [sp]
 174:	stur	q0, [x29, #-16]
 178:	ldr	q1, [x22, #32]
 17c:	str	q1, [sp]
 180:	ldr	q1, [x22, #48]
 184:	str	q0, [x22, #32]
 188:	str	x9, [x22, #48]
 18c:	str	q1, [sp, #16]
 190:	str	x8, [x22, #56]
 194:	fmov	x8, d1
 198:	cbz	x8, b4 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0xb4>
 19c:	mov	x0, sp
 1a0:	mov	x1, sp
 1a4:	mov	w2, #0x3                   	// #3
 1a8:	blr	x8
 1ac:	b	b4 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0xb4>
 1b0:	mov	x24, x22
 1b4:	ldr	x22, [x19]
 1b8:	ldr	w23, [x19, #8]
 1bc:	add	x21, x22, x23, lsl #6
 1c0:	cmp	x21, x24
 1c4:	b.ne	3a0 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x3a0>  // b.any
 1c8:	b	3e8 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x3e8>
 1cc:	cbz	w23, 3d8 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x3d8>
 1d0:	ldr	x8, [x21]
 1d4:	ldr	x24, [x19]
 1d8:	add	x25, x23, #0x1
 1dc:	add	x22, x8, #0x20
 1e0:	b	1f8 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x1f8>
 1e4:	sub	x25, x25, #0x1
 1e8:	add	x22, x22, #0x40
 1ec:	cmp	x25, #0x1
 1f0:	add	x24, x24, #0x40
 1f4:	b.le	2f4 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x2f4>
 1f8:	str	xzr, [sp, #16]
 1fc:	ldur	x8, [x22, #-16]
 200:	cbz	x8, 228 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x228>
 204:	sub	x1, x22, #0x20
 208:	mov	x0, sp
 20c:	mov	w2, #0x2                   	// #2
 210:	blr	x8
 214:	ldur	x8, [x22, #-8]
 218:	str	x8, [sp, #24]
 21c:	ldur	x9, [x22, #-16]
 220:	str	x9, [sp, #16]
 224:	b	22c <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x22c>
 228:	mov	x9, xzr
 22c:	ldr	q0, [sp]
 230:	stur	q0, [x29, #-16]
 234:	ldr	q1, [x24]
 238:	str	q1, [sp]
 23c:	ldr	x10, [x24, #16]
 240:	str	q0, [x24]
 244:	str	x10, [sp, #16]
 248:	ldr	x11, [x24, #24]
 24c:	str	x9, [x24, #16]
 250:	str	x11, [sp, #24]
 254:	str	x8, [x24, #24]
 258:	cbz	x10, 26c <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x26c>
 25c:	mov	x0, sp
 260:	mov	x1, sp
 264:	mov	w2, #0x3                   	// #3
 268:	blr	x10
 26c:	str	xzr, [sp, #16]
 270:	ldr	x8, [x22, #16]
 274:	cbz	x8, 29c <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x29c>
 278:	mov	x0, sp
 27c:	mov	w2, #0x2                   	// #2
 280:	mov	x1, x22
 284:	blr	x8
 288:	ldr	x8, [x22, #24]
 28c:	str	x8, [sp, #24]
 290:	ldr	x9, [x22, #16]
 294:	str	x9, [sp, #16]
 298:	b	2a0 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x2a0>
 29c:	mov	x9, xzr
 2a0:	ldr	q0, [sp]
 2a4:	stur	q0, [x29, #-16]
 2a8:	ldr	q1, [x24, #32]
 2ac:	str	q1, [sp]
 2b0:	ldr	q1, [x24, #48]
 2b4:	str	q0, [x24, #32]
 2b8:	str	x9, [x24, #48]
 2bc:	str	q1, [sp, #16]
 2c0:	str	x8, [x24, #56]
 2c4:	fmov	x8, d1
 2c8:	cbz	x8, 1e4 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x1e4>
 2cc:	mov	x0, sp
 2d0:	mov	x1, sp
 2d4:	mov	w2, #0x3                   	// #3
 2d8:	blr	x8
 2dc:	b	1e4 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x1e4>
 2e0:	mov	x0, x19
 2e4:	mov	x1, x20
 2e8:	str	wzr, [x19, #8]
 2ec:	bl	0 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_>
 2f0:	mov	x23, xzr
 2f4:	ldr	w8, [x21, #8]
 2f8:	cmp	x23, x8
 2fc:	b.eq	3e8 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x3e8>  // b.none
 300:	ldr	x24, [x21]
 304:	ldr	x25, [x19]
 308:	lsl	x23, x23, #6
 30c:	lsl	x26, x8, #6
 310:	b	328 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x328>
 314:	sub	x26, x26, #0x40
 318:	add	x25, x25, #0x40
 31c:	cmp	x23, x26
 320:	add	x24, x24, #0x40
 324:	b.eq	3e8 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x3e8>  // b.none
 328:	add	x21, x25, x23
 32c:	str	xzr, [x21, #16]
 330:	add	x22, x24, x23
 334:	ldr	x8, [x22, #16]
 338:	cbz	x8, 354 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x354>
 33c:	mov	w2, #0x2                   	// #2
 340:	mov	x0, x21
 344:	mov	x1, x22
 348:	blr	x8
 34c:	ldr	q0, [x22, #16]
 350:	str	q0, [x21, #16]
 354:	str	xzr, [x21, #48]
 358:	ldr	x8, [x22, #48]
 35c:	cbz	x8, 314 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x314>
 360:	add	x21, x25, x23
 364:	add	x22, x24, x23
 368:	add	x0, x21, #0x20
 36c:	add	x1, x22, #0x20
 370:	mov	w2, #0x2                   	// #2
 374:	blr	x8
 378:	ldr	q0, [x22, #48]
 37c:	str	q0, [x21, #48]
 380:	b	314 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x314>
 384:	mov	x24, x22
 388:	add	x21, x22, x23, lsl #6
 38c:	cmp	x21, x24
 390:	b.ne	3a0 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x3a0>  // b.any
 394:	b	3e8 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x3e8>
 398:	cmp	x24, x21
 39c:	b.eq	3e8 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x3e8>  // b.none
 3a0:	ldur	x8, [x21, #-16]
 3a4:	cbz	x8, 3b8 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x3b8>
 3a8:	sub	x0, x21, #0x20
 3ac:	mov	w2, #0x3                   	// #3
 3b0:	mov	x1, x0
 3b4:	blr	x8
 3b8:	ldur	x8, [x21, #-48]
 3bc:	sub	x21, x21, #0x40
 3c0:	cbz	x8, 398 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x398>
 3c4:	mov	w2, #0x3                   	// #3
 3c8:	mov	x0, x21
 3cc:	mov	x1, x21
 3d0:	blr	x8
 3d4:	b	398 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x398>
 3d8:	mov	x23, xzr
 3dc:	ldr	w8, [x21, #8]
 3e0:	cmp	x23, x8
 3e4:	b.ne	300 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x300>  // b.any
 3e8:	ldr	w8, [x19, #12]
 3ec:	cmp	w8, w20
 3f0:	b.cc	418 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x418>  // b.lo, b.ul, b.last
 3f4:	str	w20, [x19, #8]
 3f8:	mov	x0, x19
 3fc:	ldp	x20, x19, [sp, #112]
 400:	ldp	x22, x21, [sp, #96]
 404:	ldp	x24, x23, [sp, #80]
 408:	ldp	x26, x25, [sp, #64]
 40c:	ldp	x29, x30, [sp, #48]
 410:	add	sp, sp, #0x80
 414:	ret
 418:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_>
 41c:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_>
 420:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_>
 424:	add	x0, x0, #0x0
 428:	add	x1, x1, #0x0
 42c:	add	x3, x3, #0x0
 430:	mov	w2, #0x43                  	// #67
 434:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_8fuzzerop10SourcePredELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_8fuzzerop10SourcePredELb0EE4growEm>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	add	x29, sp, #0x10
  18:	mov	x20, x1
  1c:	lsr	x8, x1, #32
  20:	mov	x19, x0
  24:	cbz	x8, 38 <_ZN4llvm23SmallVectorTemplateBaseINS_8fuzzerop10SourcePredELb0EE4growEm+0x38>
  28:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_8fuzzerop10SourcePredELb0EE4growEm>
  2c:	add	x0, x0, #0x0
  30:	mov	w1, #0x1                   	// #1
  34:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  38:	ldr	w8, [x19, #12]
  3c:	add	x8, x8, #0x2
  40:	orr	x8, x8, x8, lsr #1
  44:	orr	x8, x8, x8, lsr #2
  48:	orr	x8, x8, x8, lsr #4
  4c:	orr	x8, x8, x8, lsr #8
  50:	orr	x8, x8, x8, lsr #16
  54:	orr	x8, x8, x8, lsr #32
  58:	add	x9, x8, #0x1
  5c:	cmp	x9, x20
  60:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  64:	mov	w9, #0xffffffff            	// #-1
  68:	cmp	x8, x9
  6c:	csel	x22, x8, x9, cc  // cc = lo, ul, last
  70:	lsl	x0, x22, #6
  74:	bl	0 <malloc>
  78:	mov	x20, x0
  7c:	cbnz	x0, bc <_ZN4llvm23SmallVectorTemplateBaseINS_8fuzzerop10SourcePredELb0EE4growEm+0xbc>
  80:	cbz	x22, 9c <_ZN4llvm23SmallVectorTemplateBaseINS_8fuzzerop10SourcePredELb0EE4growEm+0x9c>
  84:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_8fuzzerop10SourcePredELb0EE4growEm>
  88:	add	x0, x0, #0x0
  8c:	mov	w1, #0x1                   	// #1
  90:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  94:	mov	x20, xzr
  98:	b	bc <_ZN4llvm23SmallVectorTemplateBaseINS_8fuzzerop10SourcePredELb0EE4growEm+0xbc>
  9c:	mov	w0, #0x1                   	// #1
  a0:	bl	0 <malloc>
  a4:	mov	x20, x0
  a8:	cbnz	x0, bc <_ZN4llvm23SmallVectorTemplateBaseINS_8fuzzerop10SourcePredELb0EE4growEm+0xbc>
  ac:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_8fuzzerop10SourcePredELb0EE4growEm>
  b0:	add	x0, x0, #0x0
  b4:	mov	w1, #0x1                   	// #1
  b8:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  bc:	ldr	w8, [x19, #8]
  c0:	ldr	x21, [x19]
  c4:	cbz	w8, 1b4 <_ZN4llvm23SmallVectorTemplateBaseINS_8fuzzerop10SourcePredELb0EE4growEm+0x1b4>
  c8:	add	x8, x21, x8, lsl #6
  cc:	add	x9, x20, #0x20
  d0:	stur	xzr, [x9, #-16]
  d4:	ldr	q0, [x21]
  d8:	str	q0, [sp]
  dc:	ldur	q0, [x9, #-32]
  e0:	str	q0, [x21]
  e4:	ldr	q0, [sp]
  e8:	ldur	x10, [x9, #-16]
  ec:	stur	q0, [x9, #-32]
  f0:	ldr	x11, [x21, #16]
  f4:	str	x10, [x21, #16]
  f8:	ldur	x10, [x9, #-8]
  fc:	stur	x11, [x9, #-16]
 100:	ldr	x11, [x21, #24]
 104:	str	x10, [x21, #24]
 108:	str	xzr, [x9, #16]
 10c:	stur	x11, [x9, #-8]
 110:	ldr	q0, [x21, #32]
 114:	str	q0, [sp]
 118:	ldr	q0, [x9]
 11c:	str	q0, [x21, #32]
 120:	ldr	q0, [sp]
 124:	ldr	x10, [x9, #16]
 128:	str	q0, [x9]
 12c:	ldr	x11, [x21, #48]
 130:	str	x10, [x21, #48]
 134:	ldr	x10, [x9, #24]
 138:	str	x11, [x9, #16]
 13c:	ldr	x11, [x21, #56]
 140:	str	x10, [x21, #56]
 144:	add	x21, x21, #0x40
 148:	cmp	x21, x8
 14c:	str	x11, [x9, #24]
 150:	add	x9, x9, #0x40
 154:	b.ne	d0 <_ZN4llvm23SmallVectorTemplateBaseINS_8fuzzerop10SourcePredELb0EE4growEm+0xd0>  // b.any
 158:	ldr	w8, [x19, #8]
 15c:	ldr	x21, [x19]
 160:	cbz	w8, 1b4 <_ZN4llvm23SmallVectorTemplateBaseINS_8fuzzerop10SourcePredELb0EE4growEm+0x1b4>
 164:	lsl	x23, x8, #6
 168:	b	174 <_ZN4llvm23SmallVectorTemplateBaseINS_8fuzzerop10SourcePredELb0EE4growEm+0x174>
 16c:	subs	x23, x23, #0x40
 170:	b.eq	1b0 <_ZN4llvm23SmallVectorTemplateBaseINS_8fuzzerop10SourcePredELb0EE4growEm+0x1b0>  // b.none
 174:	add	x24, x21, x23
 178:	ldur	x8, [x24, #-16]
 17c:	cbz	x8, 190 <_ZN4llvm23SmallVectorTemplateBaseINS_8fuzzerop10SourcePredELb0EE4growEm+0x190>
 180:	sub	x0, x24, #0x20
 184:	mov	w2, #0x3                   	// #3
 188:	mov	x1, x0
 18c:	blr	x8
 190:	ldur	x8, [x24, #-48]
 194:	cbz	x8, 16c <_ZN4llvm23SmallVectorTemplateBaseINS_8fuzzerop10SourcePredELb0EE4growEm+0x16c>
 198:	add	x9, x21, x23
 19c:	sub	x0, x9, #0x40
 1a0:	mov	w2, #0x3                   	// #3
 1a4:	mov	x1, x0
 1a8:	blr	x8
 1ac:	b	16c <_ZN4llvm23SmallVectorTemplateBaseINS_8fuzzerop10SourcePredELb0EE4growEm+0x16c>
 1b0:	ldr	x21, [x19]
 1b4:	add	x8, x19, #0x10
 1b8:	cmp	x21, x8
 1bc:	b.eq	1c8 <_ZN4llvm23SmallVectorTemplateBaseINS_8fuzzerop10SourcePredELb0EE4growEm+0x1c8>  // b.none
 1c0:	mov	x0, x21
 1c4:	bl	0 <free>
 1c8:	str	x20, [x19]
 1cc:	str	w22, [x19, #12]
 1d0:	ldp	x20, x19, [sp, #64]
 1d4:	ldp	x22, x21, [sp, #48]
 1d8:	ldp	x24, x23, [sp, #32]
 1dc:	ldp	x29, x30, [sp, #16]
 1e0:	add	sp, sp, #0x50
 1e4:	ret

Disassembly of section .text._ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE:

0000000000000000 <_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	add	x29, sp, #0x10
  18:	ldp	x9, x8, [x2]
  1c:	mov	x19, x2
  20:	mov	x20, x1
  24:	sub	x23, x8, x9
  28:	mov	w8, #0xfffffffe            	// #-2
  2c:	cmp	x23, x8
  30:	b.hi	5c <_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE+0x5c>  // b.pmore
  34:	add	x8, x23, #0x1
  38:	mov	w9, #0xffffffff            	// #-1
  3c:	udiv	w21, w9, w8
  40:	mul	x22, x8, x21
  44:	mov	x0, x20
  48:	bl	0 <_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE>
  4c:	cmp	x0, x22
  50:	b.cs	44 <_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE+0x44>  // b.hs, b.nlast
  54:	udiv	x0, x0, x21
  58:	b	b0 <_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE+0xb0>
  5c:	mov	w8, #0xffffffff            	// #-1
  60:	cmp	x23, x8
  64:	b.ne	74 <_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE+0x74>  // b.any
  68:	mov	x0, x20
  6c:	bl	0 <_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE>
  70:	b	b0 <_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE+0xb0>
  74:	mov	x21, x0
  78:	lsr	x24, x23, #32
  7c:	mov	x2, sp
  80:	mov	x0, x21
  84:	mov	x1, x20
  88:	stp	xzr, x24, [sp]
  8c:	bl	0 <_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE>
  90:	mov	x22, x0
  94:	mov	x0, x20
  98:	bl	0 <_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE>
  9c:	adds	x0, x0, x22, lsl #32
  a0:	cset	w8, cs  // cs = hs, nlast
  a4:	cmp	x0, x23
  a8:	b.hi	7c <_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE+0x7c>  // b.pmore
  ac:	tbnz	w8, #0, 7c <_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE+0x7c>
  b0:	ldr	x8, [x19]
  b4:	ldp	x20, x19, [sp, #64]
  b8:	ldp	x22, x21, [sp, #48]
  bc:	ldp	x24, x23, [sp, #32]
  c0:	ldp	x29, x30, [sp, #16]
  c4:	add	x0, x8, x0
  c8:	add	sp, sp, #0x50
  cc:	ret

Disassembly of section .text._ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv:

0000000000000000 <_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv>:
   0:	ldr	x8, [x0, #4992]
   4:	cmp	x8, #0x270
   8:	b.cc	15c <_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv+0x15c>  // b.lo, b.ul, b.last
   c:	ld1r	{v0.2d}, [x0]
  10:	mov	x9, #0xffffffff80000000    	// #-2147483648
  14:	dup	v1.2d, x9
  18:	mov	w9, #0xb0df                	// #45279
  1c:	mov	w10, #0x7ffffffe            	// #2147483646
  20:	mov	w11, #0x1                   	// #1
  24:	movk	w9, #0x9908, lsl #16
  28:	mov	x8, xzr
  2c:	dup	v2.2d, x10
  30:	dup	v3.2d, x11
  34:	dup	v4.2d, x9
  38:	add	x9, x0, x8
  3c:	mov	v5.16b, v0.16b
  40:	ldur	q0, [x9, #8]
  44:	add	x10, x9, #0xc68
  48:	ldr	q6, [x10]
  4c:	add	x8, x8, #0x10
  50:	ext	v5.16b, v5.16b, v0.16b, #8
  54:	and	v7.16b, v0.16b, v2.16b
  58:	and	v5.16b, v5.16b, v1.16b
  5c:	orr	v5.16b, v7.16b, v5.16b
  60:	ushr	v5.2d, v5.2d, #1
  64:	eor	v5.16b, v5.16b, v6.16b
  68:	and	v6.16b, v0.16b, v3.16b
  6c:	cmeq	v6.2d, v6.2d, #0
  70:	bic	v6.16b, v4.16b, v6.16b
  74:	eor	v5.16b, v5.16b, v6.16b
  78:	cmp	x8, #0x710
  7c:	str	q5, [x9]
  80:	b.ne	38 <_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv+0x38>  // b.any
  84:	ldr	x10, [x0, #1816]
  88:	ldr	x11, [x0, #4984]
  8c:	mov	x12, #0xffffffff80000000    	// #-2147483648
  90:	mov	x9, v0.d[1]
  94:	dup	v0.2d, x12
  98:	mov	w12, #0x7ffffffe            	// #2147483646
  9c:	and	x9, x9, #0xffffffff80000000
  a0:	dup	v1.2d, x12
  a4:	and	x12, x10, #0x7ffffffe
  a8:	orr	x9, x12, x9
  ac:	eor	x11, x11, x9, lsr #1
  b0:	mov	w9, #0xb0df                	// #45279
  b4:	movk	w9, #0x9908, lsl #16
  b8:	dup	v3.2d, x10
  bc:	sbfx	x10, x10, #0, #1
  c0:	and	x10, x10, x9
  c4:	eor	x10, x11, x10
  c8:	mov	w11, #0x1                   	// #1
  cc:	mov	x8, xzr
  d0:	dup	v2.2d, x11
  d4:	str	x10, [x0, #1808]
  d8:	add	x10, x0, x8
  dc:	ldr	q4, [x10, #1824]
  e0:	dup	v5.2d, x9
  e4:	add	x8, x8, #0x10
  e8:	cmp	x8, #0xc60
  ec:	ext	v3.16b, v3.16b, v4.16b, #8
  f0:	and	v6.16b, v4.16b, v1.16b
  f4:	and	v3.16b, v3.16b, v0.16b
  f8:	orr	v3.16b, v6.16b, v3.16b
  fc:	and	v6.16b, v4.16b, v2.16b
 100:	cmeq	v6.2d, v6.2d, #0
 104:	bic	v5.16b, v5.16b, v6.16b
 108:	ldr	q6, [x10]
 10c:	ushr	v3.2d, v3.2d, #1
 110:	add	x10, x10, #0x718
 114:	eor	v3.16b, v3.16b, v6.16b
 118:	eor	v3.16b, v3.16b, v5.16b
 11c:	str	q3, [x10]
 120:	mov	v3.16b, v4.16b
 124:	b.ne	d8 <_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv+0xd8>  // b.any
 128:	ldr	x10, [x0, #4984]
 12c:	ldr	x11, [x0]
 130:	ldr	x12, [x0, #3168]
 134:	mov	x8, xzr
 138:	and	x10, x10, #0xffffffff80000000
 13c:	and	x13, x11, #0x7ffffffe
 140:	sbfx	x11, x11, #0, #1
 144:	orr	x10, x13, x10
 148:	and	x9, x11, x9
 14c:	eor	x10, x12, x10, lsr #1
 150:	eor	x9, x10, x9
 154:	str	x9, [x0, #4984]
 158:	str	xzr, [x0, #4992]
 15c:	add	x9, x8, #0x1
 160:	str	x9, [x0, #4992]
 164:	ldr	x8, [x0, x8, lsl #3]
 168:	mov	w9, #0x5680                	// #22144
 16c:	movk	w9, #0x9d2c, lsl #16
 170:	ubfx	x10, x8, #11, #32
 174:	eor	x8, x10, x8
 178:	lsl	w10, w8, #7
 17c:	and	x9, x10, x9
 180:	eor	x8, x9, x8
 184:	lsl	w9, w8, #15
 188:	mov	w10, #0xefc60000            	// #-272236544
 18c:	and	x9, x9, x10
 190:	eor	x8, x9, x8
 194:	eor	x0, x8, x8, lsr #18
 198:	ret

OpDescriptor.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE>:
   0:	sub	sp, sp, #0xb0
   4:	stp	x29, x30, [sp, #80]
   8:	stp	x28, x27, [sp, #96]
   c:	stp	x26, x25, [sp, #112]
  10:	stp	x24, x23, [sp, #128]
  14:	stp	x22, x21, [sp, #144]
  18:	stp	x20, x19, [sp, #160]
  1c:	add	x29, sp, #0x50
  20:	cbz	x0, c88 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xc88>
  24:	ldr	w9, [x0, #8]
  28:	mov	x26, x1
  2c:	mov	x20, x0
  30:	and	w8, w9, #0xff
  34:	cmp	w8, #0xb
  38:	b.ne	6c <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x6c>  // b.any
  3c:	lsr	x28, x9, #8
  40:	stur	w28, [x29, #-24]
  44:	cbz	w28, cc8 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xcc8>
  48:	ubfx	x21, x9, #8, #24
  4c:	cmp	w21, #0x40
  50:	str	x9, [sp, #16]
  54:	b.hi	f8 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xf8>  // b.pmore
  58:	neg	w8, w28
  5c:	mov	x9, #0xffffffffffffffff    	// #-1
  60:	lsr	x8, x9, x8
  64:	stur	x8, [x29, #-32]
  68:	b	108 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x108>
  6c:	sub	w8, w8, #0x1
  70:	cmp	w8, #0x5
  74:	b.hi	cc <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xcc>  // b.pmore
  78:	ldr	x21, [x20]
  7c:	mov	x0, x20
  80:	bl	0 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE>
  84:	sub	x8, x29, #0x20
  88:	mov	x22, x0
  8c:	add	x23, x8, #0x8
  90:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
  94:	mov	x20, x0
  98:	cmp	x0, x22
  9c:	b.eq	770 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x770>  // b.none
  a0:	mov	x0, x23
  a4:	mov	x1, x22
  a8:	mov	w2, wzr
  ac:	bl	0 <_ZN4llvm6detail9IEEEFloatC1ERKNS_12fltSemanticsENS_11APFloatBase16uninitializedTagE>
  b0:	ldur	x8, [x29, #-24]
  b4:	cmp	x20, x8
  b8:	b.eq	78c <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x78c>  // b.none
  bc:	mov	x0, x23
  c0:	mov	w1, wzr
  c4:	bl	0 <_ZN4llvm6detail9IEEEFloat8makeZeroEb>
  c8:	b	79c <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x79c>
  cc:	mov	x0, x20
  d0:	bl	0 <_ZN4llvm10UndefValue3getEPNS_4TypeE>
  d4:	ldp	x8, x9, [x26, #8]
  d8:	mov	x22, x0
  dc:	cmp	x8, x9
  e0:	b.eq	7d8 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x7d8>  // b.none
  e4:	str	x22, [x8]
  e8:	ldr	x8, [x26, #8]
  ec:	add	x8, x8, #0x8
  f0:	str	x8, [x26, #8]
  f4:	b	b84 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xb84>
  f8:	sub	x0, x29, #0x20
  fc:	mov	x1, #0xffffffffffffffff    	// #-1
 100:	mov	w2, #0x1                   	// #1
 104:	bl	0 <_ZN4llvm5APInt12initSlowCaseEmb>
 108:	sub	x1, x29, #0x20
 10c:	mov	x0, x20
 110:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_4TypeERKNS_5APIntE>
 114:	mov	x25, x26
 118:	ldr	x9, [x25, #16]!
 11c:	mov	x23, x0
 120:	mov	x27, x25
 124:	ldr	x8, [x27, #-8]!
 128:	stp	x21, x25, [sp, #24]
 12c:	str	x26, [sp, #40]
 130:	cmp	x8, x9
 134:	b.eq	15c <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x15c>  // b.none
 138:	str	x23, [x8]
 13c:	ldr	x8, [x27]
 140:	mov	x9, x27
 144:	add	x8, x8, #0x8
 148:	str	x8, [x9]
 14c:	ldur	w8, [x29, #-24]
 150:	cmp	w8, #0x41
 154:	b.cs	204 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x204>  // b.hs, b.nlast
 158:	b	210 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x210>
 15c:	ldr	x21, [x26]
 160:	sub	x22, x8, x21
 164:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
 168:	cmp	x22, x8
 16c:	b.eq	c7c <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xc7c>  // b.none
 170:	asr	x26, x22, #3
 174:	cmp	x22, #0x0
 178:	csinc	x8, x26, xzr, ne  // ne = any
 17c:	adds	x8, x8, x26
 180:	lsr	x10, x8, #60
 184:	cset	w9, cs  // cs = hs, nlast
 188:	cmp	x10, #0x0
 18c:	cset	w10, ne  // ne = any
 190:	orr	w9, w9, w10
 194:	cmp	w9, #0x0
 198:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
 19c:	csel	x19, x9, x8, ne  // ne = any
 1a0:	cbz	x19, ba4 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xba4>
 1a4:	lsl	x0, x19, #3
 1a8:	bl	0 <_Znwm>
 1ac:	mov	x24, x0
 1b0:	add	x25, x24, x26, lsl #3
 1b4:	cmp	x22, #0x1
 1b8:	str	x23, [x25]
 1bc:	b.lt	1d0 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x1d0>  // b.tstop
 1c0:	mov	x0, x24
 1c4:	mov	x1, x21
 1c8:	mov	x2, x22
 1cc:	bl	0 <memmove>
 1d0:	ldr	x26, [sp, #40]
 1d4:	add	x22, x25, #0x8
 1d8:	cbz	x21, 1e4 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x1e4>
 1dc:	mov	x0, x21
 1e0:	bl	0 <_ZdlPv>
 1e4:	stp	x24, x22, [x26]
 1e8:	ldp	x21, x25, [sp, #24]
 1ec:	add	x8, x24, x19, lsl #3
 1f0:	mov	x9, x25
 1f4:	str	x8, [x9]
 1f8:	ldur	w8, [x29, #-24]
 1fc:	cmp	w8, #0x41
 200:	b.cc	210 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x210>  // b.lo, b.ul, b.last
 204:	ldur	x0, [x29, #-32]
 208:	cbz	x0, 210 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x210>
 20c:	bl	0 <_ZdaPv>
 210:	cmp	w21, #0x40
 214:	stur	w28, [x29, #-24]
 218:	b.hi	224 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x224>  // b.pmore
 21c:	stur	xzr, [x29, #-32]
 220:	b	234 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x234>
 224:	sub	x0, x29, #0x20
 228:	mov	x1, xzr
 22c:	mov	w2, wzr
 230:	bl	0 <_ZN4llvm5APInt12initSlowCaseEmb>
 234:	sub	x1, x29, #0x20
 238:	mov	x0, x20
 23c:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_4TypeERKNS_5APIntE>
 240:	ldr	x8, [x27]
 244:	ldr	x9, [x25]
 248:	mov	x23, x0
 24c:	cmp	x8, x9
 250:	b.eq	278 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x278>  // b.none
 254:	str	x23, [x8]
 258:	ldr	x8, [x27]
 25c:	mov	x9, x27
 260:	add	x8, x8, #0x8
 264:	str	x8, [x9]
 268:	ldur	w8, [x29, #-24]
 26c:	cmp	w8, #0x41
 270:	b.cs	320 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x320>  // b.hs, b.nlast
 274:	b	32c <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x32c>
 278:	ldr	x21, [x26]
 27c:	sub	x22, x8, x21
 280:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
 284:	cmp	x22, x8
 288:	b.eq	c7c <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xc7c>  // b.none
 28c:	asr	x26, x22, #3
 290:	cmp	x22, #0x0
 294:	csinc	x8, x26, xzr, ne  // ne = any
 298:	adds	x8, x8, x26
 29c:	lsr	x10, x8, #60
 2a0:	cset	w9, cs  // cs = hs, nlast
 2a4:	cmp	x10, #0x0
 2a8:	cset	w10, ne  // ne = any
 2ac:	orr	w9, w9, w10
 2b0:	cmp	w9, #0x0
 2b4:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
 2b8:	csel	x19, x9, x8, ne  // ne = any
 2bc:	cbz	x19, bbc <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xbbc>
 2c0:	lsl	x0, x19, #3
 2c4:	bl	0 <_Znwm>
 2c8:	mov	x24, x0
 2cc:	add	x25, x24, x26, lsl #3
 2d0:	cmp	x22, #0x1
 2d4:	str	x23, [x25]
 2d8:	b.lt	2ec <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x2ec>  // b.tstop
 2dc:	mov	x0, x24
 2e0:	mov	x1, x21
 2e4:	mov	x2, x22
 2e8:	bl	0 <memmove>
 2ec:	ldr	x26, [sp, #40]
 2f0:	add	x22, x25, #0x8
 2f4:	cbz	x21, 300 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x300>
 2f8:	mov	x0, x21
 2fc:	bl	0 <_ZdlPv>
 300:	stp	x24, x22, [x26]
 304:	ldp	x21, x25, [sp, #24]
 308:	add	x8, x24, x19, lsl #3
 30c:	mov	x9, x25
 310:	str	x8, [x9]
 314:	ldur	w8, [x29, #-24]
 318:	cmp	w8, #0x41
 31c:	b.cc	32c <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x32c>  // b.lo, b.ul, b.last
 320:	ldur	x0, [x29, #-32]
 324:	cbz	x0, 32c <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x32c>
 328:	bl	0 <_ZdaPv>
 32c:	cmp	w21, #0x40
 330:	stur	w28, [x29, #-24]
 334:	b.hi	350 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x350>  // b.pmore
 338:	neg	w8, w28
 33c:	mov	x9, #0xffffffffffffffff    	// #-1
 340:	lsr	x8, x9, x8
 344:	stur	x8, [x29, #-32]
 348:	mov	w8, w28
 34c:	b	364 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x364>
 350:	sub	x0, x29, #0x20
 354:	mov	x1, #0xffffffffffffffff    	// #-1
 358:	mov	w2, #0x1                   	// #1
 35c:	bl	0 <_ZN4llvm5APInt12initSlowCaseEmb>
 360:	ldur	w8, [x29, #-24]
 364:	sub	w19, w28, #0x1
 368:	cmp	w8, w19
 36c:	b.ls	ce8 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xce8>  // b.plast
 370:	mov	w9, #0x1                   	// #1
 374:	lsl	x24, x9, x19
 378:	cmp	w8, #0x40
 37c:	mvn	x8, x24
 380:	b.hi	394 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x394>  // b.pmore
 384:	ldur	x9, [x29, #-32]
 388:	and	x8, x9, x8
 38c:	stur	x8, [x29, #-32]
 390:	b	3ac <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x3ac>
 394:	ldur	x9, [x29, #-32]
 398:	lsr	w10, w19, #6
 39c:	lsl	x10, x10, #3
 3a0:	ldr	x11, [x9, x10]
 3a4:	and	x8, x11, x8
 3a8:	str	x8, [x9, x10]
 3ac:	sub	x1, x29, #0x20
 3b0:	mov	x0, x20
 3b4:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_4TypeERKNS_5APIntE>
 3b8:	ldr	x8, [x27]
 3bc:	ldr	x9, [x25]
 3c0:	mov	x23, x0
 3c4:	cmp	x8, x9
 3c8:	b.eq	3f0 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x3f0>  // b.none
 3cc:	str	x23, [x8]
 3d0:	ldr	x8, [x27]
 3d4:	mov	x9, x27
 3d8:	add	x8, x8, #0x8
 3dc:	str	x8, [x9]
 3e0:	ldur	w8, [x29, #-24]
 3e4:	cmp	w8, #0x41
 3e8:	b.cs	4a4 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x4a4>  // b.hs, b.nlast
 3ec:	b	4b0 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x4b0>
 3f0:	ldr	x21, [x26]
 3f4:	sub	x22, x8, x21
 3f8:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
 3fc:	cmp	x22, x8
 400:	b.eq	c7c <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xc7c>  // b.none
 404:	asr	x25, x22, #3
 408:	cmp	x22, #0x0
 40c:	csinc	x8, x25, xzr, ne  // ne = any
 410:	adds	x8, x8, x25
 414:	lsr	x10, x8, #60
 418:	cset	w9, cs  // cs = hs, nlast
 41c:	cmp	x10, #0x0
 420:	cset	w10, ne  // ne = any
 424:	orr	w9, w9, w10
 428:	cmp	w9, #0x0
 42c:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
 430:	csel	x26, x9, x8, ne  // ne = any
 434:	str	x24, [sp, #8]
 438:	cbz	x26, bd4 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xbd4>
 43c:	lsl	x0, x26, #3
 440:	bl	0 <_Znwm>
 444:	mov	x24, x0
 448:	add	x25, x24, x25, lsl #3
 44c:	cmp	x22, #0x1
 450:	str	x23, [x25]
 454:	b.lt	468 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x468>  // b.tstop
 458:	mov	x0, x24
 45c:	mov	x1, x21
 460:	mov	x2, x22
 464:	bl	0 <memmove>
 468:	add	x22, x25, #0x8
 46c:	cbz	x21, 478 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x478>
 470:	mov	x0, x21
 474:	bl	0 <_ZdlPv>
 478:	ldp	x25, x9, [sp, #32]
 47c:	add	x8, x24, x26, lsl #3
 480:	stp	x24, x22, [x9]
 484:	ldr	x21, [sp, #24]
 488:	ldr	x24, [sp, #8]
 48c:	mov	x26, x9
 490:	mov	x9, x25
 494:	str	x8, [x9]
 498:	ldur	w8, [x29, #-24]
 49c:	cmp	w8, #0x41
 4a0:	b.cc	4b0 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x4b0>  // b.lo, b.ul, b.last
 4a4:	ldur	x0, [x29, #-32]
 4a8:	cbz	x0, 4b0 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x4b0>
 4ac:	bl	0 <_ZdaPv>
 4b0:	cmp	w21, #0x40
 4b4:	stur	w28, [x29, #-24]
 4b8:	b.hi	4c8 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x4c8>  // b.pmore
 4bc:	stur	xzr, [x29, #-32]
 4c0:	mov	w8, w28
 4c4:	b	4dc <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x4dc>
 4c8:	sub	x0, x29, #0x20
 4cc:	mov	x1, xzr
 4d0:	mov	w2, wzr
 4d4:	bl	0 <_ZN4llvm5APInt12initSlowCaseEmb>
 4d8:	ldur	w8, [x29, #-24]
 4dc:	cmp	w8, w19
 4e0:	b.ls	ca8 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xca8>  // b.plast
 4e4:	cmp	w8, #0x40
 4e8:	b.hi	4fc <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x4fc>  // b.pmore
 4ec:	ldur	x8, [x29, #-32]
 4f0:	orr	x8, x8, x24
 4f4:	stur	x8, [x29, #-32]
 4f8:	b	514 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x514>
 4fc:	ldur	x8, [x29, #-32]
 500:	lsr	w9, w19, #6
 504:	lsl	x9, x9, #3
 508:	ldr	x10, [x8, x9]
 50c:	orr	x10, x10, x24
 510:	str	x10, [x8, x9]
 514:	sub	x1, x29, #0x20
 518:	mov	x0, x20
 51c:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_4TypeERKNS_5APIntE>
 520:	ldr	x8, [x27]
 524:	ldr	x9, [x25]
 528:	mov	x23, x0
 52c:	cmp	x8, x9
 530:	b.eq	55c <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x55c>  // b.none
 534:	str	x23, [x8]
 538:	ldr	x8, [x27]
 53c:	ldr	x23, [sp, #16]
 540:	mov	x9, x27
 544:	add	x8, x8, #0x8
 548:	str	x8, [x9]
 54c:	ldur	w8, [x29, #-24]
 550:	cmp	w8, #0x41
 554:	b.cs	604 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x604>  // b.hs, b.nlast
 558:	b	610 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x610>
 55c:	ldr	x21, [x26]
 560:	sub	x22, x8, x21
 564:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
 568:	cmp	x22, x8
 56c:	b.eq	c7c <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xc7c>  // b.none
 570:	asr	x25, x22, #3
 574:	cmp	x22, #0x0
 578:	csinc	x8, x25, xzr, ne  // ne = any
 57c:	adds	x8, x8, x25
 580:	lsr	x10, x8, #60
 584:	cset	w9, cs  // cs = hs, nlast
 588:	cmp	x10, #0x0
 58c:	cset	w10, ne  // ne = any
 590:	orr	w9, w9, w10
 594:	cmp	w9, #0x0
 598:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
 59c:	csel	x19, x9, x8, ne  // ne = any
 5a0:	cbz	x19, bec <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xbec>
 5a4:	lsl	x0, x19, #3
 5a8:	bl	0 <_Znwm>
 5ac:	mov	x24, x0
 5b0:	add	x25, x24, x25, lsl #3
 5b4:	cmp	x22, #0x1
 5b8:	str	x23, [x25]
 5bc:	b.lt	5d0 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x5d0>  // b.tstop
 5c0:	mov	x0, x24
 5c4:	mov	x1, x21
 5c8:	mov	x2, x22
 5cc:	bl	0 <memmove>
 5d0:	ldr	x23, [sp, #16]
 5d4:	add	x22, x25, #0x8
 5d8:	cbz	x21, 5e4 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x5e4>
 5dc:	mov	x0, x21
 5e0:	bl	0 <_ZdlPv>
 5e4:	stp	x24, x22, [x26]
 5e8:	ldp	x21, x25, [sp, #24]
 5ec:	add	x8, x24, x19, lsl #3
 5f0:	mov	x9, x25
 5f4:	str	x8, [x9]
 5f8:	ldur	w8, [x29, #-24]
 5fc:	cmp	w8, #0x41
 600:	b.cc	610 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x610>  // b.lo, b.ul, b.last
 604:	ldur	x0, [x29, #-32]
 608:	cbz	x0, 610 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x610>
 60c:	bl	0 <_ZdaPv>
 610:	ubfx	x19, x23, #9, #23
 614:	cmp	w21, #0x40
 618:	stur	w28, [x29, #-24]
 61c:	b.hi	628 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x628>  // b.pmore
 620:	stur	xzr, [x29, #-32]
 624:	b	63c <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x63c>
 628:	sub	x0, x29, #0x20
 62c:	mov	x1, xzr
 630:	mov	w2, wzr
 634:	bl	0 <_ZN4llvm5APInt12initSlowCaseEmb>
 638:	ldur	w28, [x29, #-24]
 63c:	cmp	w28, w19
 640:	b.ls	ca8 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xca8>  // b.plast
 644:	lsr	x8, x23, #9
 648:	mov	w9, #0x1                   	// #1
 64c:	cmp	w28, #0x40
 650:	lsl	x8, x9, x8
 654:	b.hi	668 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x668>  // b.pmore
 658:	ldur	x9, [x29, #-32]
 65c:	orr	x8, x9, x8
 660:	stur	x8, [x29, #-32]
 664:	b	680 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x680>
 668:	ldur	x9, [x29, #-32]
 66c:	lsr	x10, x23, #12
 670:	and	x10, x10, #0xffff8
 674:	ldr	x11, [x9, x10]
 678:	orr	x8, x11, x8
 67c:	str	x8, [x9, x10]
 680:	sub	x1, x29, #0x20
 684:	mov	x0, x20
 688:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_4TypeERKNS_5APIntE>
 68c:	ldr	x8, [x27]
 690:	ldr	x9, [x25]
 694:	mov	x22, x0
 698:	cmp	x8, x9
 69c:	b.eq	6c4 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x6c4>  // b.none
 6a0:	str	x22, [x8]
 6a4:	ldr	x8, [x27]
 6a8:	mov	x25, x27
 6ac:	add	x8, x8, #0x8
 6b0:	str	x8, [x25]
 6b4:	ldur	w8, [x29, #-24]
 6b8:	cmp	w8, #0x41
 6bc:	b.cs	760 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x760>  // b.hs, b.nlast
 6c0:	b	b84 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xb84>
 6c4:	ldr	x20, [x26]
 6c8:	sub	x21, x8, x20
 6cc:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
 6d0:	cmp	x21, x8
 6d4:	b.eq	c7c <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xc7c>  // b.none
 6d8:	asr	x24, x21, #3
 6dc:	cmp	x21, #0x0
 6e0:	csinc	x8, x24, xzr, ne  // ne = any
 6e4:	adds	x8, x8, x24
 6e8:	lsr	x10, x8, #60
 6ec:	cset	w9, cs  // cs = hs, nlast
 6f0:	cmp	x10, #0x0
 6f4:	cset	w10, ne  // ne = any
 6f8:	orr	w9, w9, w10
 6fc:	cmp	w9, #0x0
 700:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
 704:	csel	x19, x9, x8, ne  // ne = any
 708:	cbz	x19, c04 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xc04>
 70c:	lsl	x0, x19, #3
 710:	bl	0 <_Znwm>
 714:	mov	x23, x0
 718:	add	x24, x23, x24, lsl #3
 71c:	cmp	x21, #0x1
 720:	str	x22, [x24]
 724:	b.lt	738 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x738>  // b.tstop
 728:	mov	x0, x23
 72c:	mov	x1, x20
 730:	mov	x2, x21
 734:	bl	0 <memmove>
 738:	add	x21, x24, #0x8
 73c:	cbz	x20, 748 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x748>
 740:	mov	x0, x20
 744:	bl	0 <_ZdlPv>
 748:	add	x8, x23, x19, lsl #3
 74c:	stp	x23, x21, [x26]
 750:	str	x8, [x25]
 754:	ldur	w8, [x29, #-24]
 758:	cmp	w8, #0x41
 75c:	b.cc	b84 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xb84>  // b.lo, b.ul, b.last
 760:	ldur	x0, [x29, #-32]
 764:	cbz	x0, b84 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xb84>
 768:	bl	0 <_ZdaPv>
 76c:	b	b84 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xb84>
 770:	mov	x0, x23
 774:	mov	x1, x22
 778:	mov	w2, wzr
 77c:	bl	0 <_ZN4llvm6detail13DoubleAPFloatC1ERKNS_12fltSemanticsENS_11APFloatBase16uninitializedTagE>
 780:	ldur	x8, [x29, #-24]
 784:	cmp	x20, x8
 788:	b.ne	bc <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xbc>  // b.any
 78c:	sub	x8, x29, #0x20
 790:	add	x0, x8, #0x8
 794:	mov	w1, wzr
 798:	bl	0 <_ZN4llvm6detail13DoubleAPFloat8makeZeroEb>
 79c:	sub	x1, x29, #0x20
 7a0:	mov	x0, x21
 7a4:	bl	0 <_ZN4llvm10ConstantFP3getERNS_11LLVMContextERKNS_7APFloatE>
 7a8:	mov	x27, x26
 7ac:	ldr	x9, [x27, #16]!
 7b0:	mov	x25, x0
 7b4:	mov	x28, x27
 7b8:	ldr	x8, [x28, #-8]!
 7bc:	cmp	x8, x9
 7c0:	b.eq	86c <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x86c>  // b.none
 7c4:	str	x25, [x8]
 7c8:	ldr	x8, [x28]
 7cc:	mov	x9, x28
 7d0:	add	x8, x8, #0x8
 7d4:	b	910 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x910>
 7d8:	ldr	x20, [x26]
 7dc:	sub	x21, x8, x20
 7e0:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
 7e4:	cmp	x21, x8
 7e8:	b.eq	c7c <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xc7c>  // b.none
 7ec:	asr	x24, x21, #3
 7f0:	cmp	x21, #0x0
 7f4:	csinc	x8, x24, xzr, ne  // ne = any
 7f8:	adds	x8, x8, x24
 7fc:	lsr	x10, x8, #60
 800:	cset	w9, cs  // cs = hs, nlast
 804:	cmp	x10, #0x0
 808:	cset	w10, ne  // ne = any
 80c:	orr	w9, w9, w10
 810:	cmp	w9, #0x0
 814:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
 818:	csel	x19, x9, x8, ne  // ne = any
 81c:	cbz	x19, c1c <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xc1c>
 820:	lsl	x0, x19, #3
 824:	bl	0 <_Znwm>
 828:	mov	x23, x0
 82c:	add	x24, x23, x24, lsl #3
 830:	cmp	x21, #0x1
 834:	str	x22, [x24]
 838:	b.lt	84c <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x84c>  // b.tstop
 83c:	mov	x0, x23
 840:	mov	x1, x20
 844:	mov	x2, x21
 848:	bl	0 <memmove>
 84c:	add	x21, x24, #0x8
 850:	cbz	x20, 85c <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x85c>
 854:	mov	x0, x20
 858:	bl	0 <_ZdlPv>
 85c:	add	x8, x23, x19, lsl #3
 860:	stp	x23, x21, [x26]
 864:	str	x8, [x26, #16]
 868:	b	b84 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xb84>
 86c:	ldr	x23, [x26]
 870:	str	x21, [sp, #32]
 874:	sub	x24, x8, x23
 878:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
 87c:	cmp	x24, x8
 880:	b.eq	c7c <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xc7c>  // b.none
 884:	asr	x21, x24, #3
 888:	cmp	x24, #0x0
 88c:	csinc	x8, x21, xzr, ne  // ne = any
 890:	adds	x8, x8, x21
 894:	lsr	x10, x8, #60
 898:	cset	w9, cs  // cs = hs, nlast
 89c:	cmp	x10, #0x0
 8a0:	cset	w10, ne  // ne = any
 8a4:	orr	w9, w9, w10
 8a8:	cmp	w9, #0x0
 8ac:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
 8b0:	csel	x19, x9, x8, ne  // ne = any
 8b4:	str	x26, [sp, #40]
 8b8:	cbz	x19, c34 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xc34>
 8bc:	lsl	x0, x19, #3
 8c0:	bl	0 <_Znwm>
 8c4:	mov	x26, x0
 8c8:	add	x21, x26, x21, lsl #3
 8cc:	cmp	x24, #0x1
 8d0:	str	x25, [x21]
 8d4:	b.lt	8e8 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x8e8>  // b.tstop
 8d8:	mov	x0, x26
 8dc:	mov	x1, x23
 8e0:	mov	x2, x24
 8e4:	bl	0 <memmove>
 8e8:	add	x21, x21, #0x8
 8ec:	cbz	x23, 8f8 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x8f8>
 8f0:	mov	x0, x23
 8f4:	bl	0 <_ZdlPv>
 8f8:	ldr	x9, [sp, #40]
 8fc:	add	x8, x26, x19, lsl #3
 900:	stp	x26, x21, [x9]
 904:	ldr	x21, [sp, #32]
 908:	mov	x26, x9
 90c:	mov	x9, x27
 910:	sub	x0, x29, #0x20
 914:	str	x8, [x9]
 918:	sub	x19, x29, #0x20
 91c:	bl	0 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE>
 920:	add	x23, x19, #0x8
 924:	cmp	x20, x22
 928:	mov	x0, x23
 92c:	mov	x1, x22
 930:	mov	w2, wzr
 934:	b.eq	958 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x958>  // b.none
 938:	bl	0 <_ZN4llvm6detail9IEEEFloatC1ERKNS_12fltSemanticsENS_11APFloatBase16uninitializedTagE>
 93c:	ldur	x8, [x29, #-24]
 940:	cmp	x20, x8
 944:	b.eq	968 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x968>  // b.none
 948:	mov	x0, x23
 94c:	mov	w1, wzr
 950:	bl	0 <_ZN4llvm6detail9IEEEFloat11makeLargestEb>
 954:	b	978 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x978>
 958:	bl	0 <_ZN4llvm6detail13DoubleAPFloatC1ERKNS_12fltSemanticsENS_11APFloatBase16uninitializedTagE>
 95c:	ldur	x8, [x29, #-24]
 960:	cmp	x20, x8
 964:	b.ne	948 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x948>  // b.any
 968:	sub	x8, x29, #0x20
 96c:	add	x0, x8, #0x8
 970:	mov	w1, wzr
 974:	bl	0 <_ZN4llvm6detail13DoubleAPFloat11makeLargestEb>
 978:	sub	x1, x29, #0x20
 97c:	mov	x0, x21
 980:	bl	0 <_ZN4llvm10ConstantFP3getERNS_11LLVMContextERKNS_7APFloatE>
 984:	ldr	x8, [x28]
 988:	ldr	x9, [x27]
 98c:	mov	x25, x0
 990:	cmp	x8, x9
 994:	b.eq	9ac <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x9ac>  // b.none
 998:	str	x25, [x8]
 99c:	ldr	x8, [x28]
 9a0:	mov	x9, x28
 9a4:	add	x8, x8, #0x8
 9a8:	b	a50 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xa50>
 9ac:	ldr	x23, [x26]
 9b0:	str	x21, [sp, #32]
 9b4:	sub	x24, x8, x23
 9b8:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
 9bc:	cmp	x24, x8
 9c0:	b.eq	c7c <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xc7c>  // b.none
 9c4:	asr	x21, x24, #3
 9c8:	cmp	x24, #0x0
 9cc:	csinc	x8, x21, xzr, ne  // ne = any
 9d0:	adds	x8, x8, x21
 9d4:	lsr	x10, x8, #60
 9d8:	cset	w9, cs  // cs = hs, nlast
 9dc:	cmp	x10, #0x0
 9e0:	cset	w10, ne  // ne = any
 9e4:	orr	w9, w9, w10
 9e8:	cmp	w9, #0x0
 9ec:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
 9f0:	csel	x19, x9, x8, ne  // ne = any
 9f4:	str	x26, [sp, #40]
 9f8:	cbz	x19, c4c <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xc4c>
 9fc:	lsl	x0, x19, #3
 a00:	bl	0 <_Znwm>
 a04:	mov	x26, x0
 a08:	add	x21, x26, x21, lsl #3
 a0c:	cmp	x24, #0x1
 a10:	str	x25, [x21]
 a14:	b.lt	a28 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xa28>  // b.tstop
 a18:	mov	x0, x26
 a1c:	mov	x1, x23
 a20:	mov	x2, x24
 a24:	bl	0 <memmove>
 a28:	add	x21, x21, #0x8
 a2c:	cbz	x23, a38 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xa38>
 a30:	mov	x0, x23
 a34:	bl	0 <_ZdlPv>
 a38:	ldr	x9, [sp, #40]
 a3c:	add	x8, x26, x19, lsl #3
 a40:	stp	x26, x21, [x9]
 a44:	ldr	x21, [sp, #32]
 a48:	mov	x26, x9
 a4c:	mov	x9, x27
 a50:	sub	x0, x29, #0x20
 a54:	str	x8, [x9]
 a58:	sub	x19, x29, #0x20
 a5c:	bl	0 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE>
 a60:	add	x23, x19, #0x8
 a64:	cmp	x20, x22
 a68:	mov	x0, x23
 a6c:	mov	x1, x22
 a70:	mov	w2, wzr
 a74:	b.eq	a98 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xa98>  // b.none
 a78:	bl	0 <_ZN4llvm6detail9IEEEFloatC1ERKNS_12fltSemanticsENS_11APFloatBase16uninitializedTagE>
 a7c:	ldur	x8, [x29, #-24]
 a80:	cmp	x20, x8
 a84:	b.eq	aa8 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xaa8>  // b.none
 a88:	mov	x0, x23
 a8c:	mov	w1, wzr
 a90:	bl	0 <_ZN4llvm6detail9IEEEFloat12makeSmallestEb>
 a94:	b	ab8 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xab8>
 a98:	bl	0 <_ZN4llvm6detail13DoubleAPFloatC1ERKNS_12fltSemanticsENS_11APFloatBase16uninitializedTagE>
 a9c:	ldur	x8, [x29, #-24]
 aa0:	cmp	x20, x8
 aa4:	b.ne	a88 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xa88>  // b.any
 aa8:	sub	x8, x29, #0x20
 aac:	add	x0, x8, #0x8
 ab0:	mov	w1, wzr
 ab4:	bl	0 <_ZN4llvm6detail13DoubleAPFloat12makeSmallestEb>
 ab8:	sub	x1, x29, #0x20
 abc:	mov	x0, x21
 ac0:	bl	0 <_ZN4llvm10ConstantFP3getERNS_11LLVMContextERKNS_7APFloatE>
 ac4:	ldr	x8, [x28]
 ac8:	ldr	x9, [x27]
 acc:	mov	x22, x0
 ad0:	cmp	x8, x9
 ad4:	b.eq	aec <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xaec>  // b.none
 ad8:	str	x22, [x8]
 adc:	ldr	x8, [x28]
 ae0:	mov	x27, x28
 ae4:	add	x8, x8, #0x8
 ae8:	b	b78 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xb78>
 aec:	ldr	x20, [x26]
 af0:	sub	x21, x8, x20
 af4:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
 af8:	cmp	x21, x8
 afc:	b.eq	c7c <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xc7c>  // b.none
 b00:	asr	x24, x21, #3
 b04:	cmp	x21, #0x0
 b08:	csinc	x8, x24, xzr, ne  // ne = any
 b0c:	adds	x8, x8, x24
 b10:	lsr	x10, x8, #60
 b14:	cset	w9, cs  // cs = hs, nlast
 b18:	cmp	x10, #0x0
 b1c:	cset	w10, ne  // ne = any
 b20:	orr	w9, w9, w10
 b24:	cmp	w9, #0x0
 b28:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
 b2c:	csel	x19, x9, x8, ne  // ne = any
 b30:	cbz	x19, c64 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xc64>
 b34:	lsl	x0, x19, #3
 b38:	bl	0 <_Znwm>
 b3c:	mov	x23, x0
 b40:	add	x24, x23, x24, lsl #3
 b44:	cmp	x21, #0x1
 b48:	str	x22, [x24]
 b4c:	b.lt	b60 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xb60>  // b.tstop
 b50:	mov	x0, x23
 b54:	mov	x1, x20
 b58:	mov	x2, x21
 b5c:	bl	0 <memmove>
 b60:	add	x21, x24, #0x8
 b64:	cbz	x20, b70 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xb70>
 b68:	mov	x0, x20
 b6c:	bl	0 <_ZdlPv>
 b70:	add	x8, x23, x19, lsl #3
 b74:	stp	x23, x21, [x26]
 b78:	sub	x0, x29, #0x20
 b7c:	str	x8, [x27]
 b80:	bl	0 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE>
 b84:	ldp	x20, x19, [sp, #160]
 b88:	ldp	x22, x21, [sp, #144]
 b8c:	ldp	x24, x23, [sp, #128]
 b90:	ldp	x26, x25, [sp, #112]
 b94:	ldp	x28, x27, [sp, #96]
 b98:	ldp	x29, x30, [sp, #80]
 b9c:	add	sp, sp, #0xb0
 ba0:	ret
 ba4:	mov	x24, xzr
 ba8:	add	x25, x24, x26, lsl #3
 bac:	cmp	x22, #0x1
 bb0:	str	x23, [x25]
 bb4:	b.ge	1c0 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x1c0>  // b.tcont
 bb8:	b	1d0 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x1d0>
 bbc:	mov	x24, xzr
 bc0:	add	x25, x24, x26, lsl #3
 bc4:	cmp	x22, #0x1
 bc8:	str	x23, [x25]
 bcc:	b.ge	2dc <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x2dc>  // b.tcont
 bd0:	b	2ec <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x2ec>
 bd4:	mov	x24, xzr
 bd8:	add	x25, x24, x25, lsl #3
 bdc:	cmp	x22, #0x1
 be0:	str	x23, [x25]
 be4:	b.ge	458 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x458>  // b.tcont
 be8:	b	468 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x468>
 bec:	mov	x24, xzr
 bf0:	add	x25, x24, x25, lsl #3
 bf4:	cmp	x22, #0x1
 bf8:	str	x23, [x25]
 bfc:	b.ge	5c0 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x5c0>  // b.tcont
 c00:	b	5d0 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x5d0>
 c04:	mov	x23, xzr
 c08:	add	x24, x23, x24, lsl #3
 c0c:	cmp	x21, #0x1
 c10:	str	x22, [x24]
 c14:	b.ge	728 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x728>  // b.tcont
 c18:	b	738 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x738>
 c1c:	mov	x23, xzr
 c20:	add	x24, x23, x24, lsl #3
 c24:	cmp	x21, #0x1
 c28:	str	x22, [x24]
 c2c:	b.ge	83c <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x83c>  // b.tcont
 c30:	b	84c <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x84c>
 c34:	mov	x26, xzr
 c38:	add	x21, x26, x21, lsl #3
 c3c:	cmp	x24, #0x1
 c40:	str	x25, [x21]
 c44:	b.ge	8d8 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x8d8>  // b.tcont
 c48:	b	8e8 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0x8e8>
 c4c:	mov	x26, xzr
 c50:	add	x21, x26, x21, lsl #3
 c54:	cmp	x24, #0x1
 c58:	str	x25, [x21]
 c5c:	b.ge	a18 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xa18>  // b.tcont
 c60:	b	a28 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xa28>
 c64:	mov	x23, xzr
 c68:	add	x24, x23, x24, lsl #3
 c6c:	cmp	x21, #0x1
 c70:	str	x22, [x24]
 c74:	b.ge	b50 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xb50>  // b.tcont
 c78:	b	b60 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE+0xb60>
 c7c:	adrp	x0, 0 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE>
 c80:	add	x0, x0, #0x0
 c84:	bl	0 <_ZSt20__throw_length_errorPKc>
 c88:	adrp	x0, 0 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE>
 c8c:	adrp	x1, 0 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE>
 c90:	adrp	x3, 0 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE>
 c94:	add	x0, x0, #0x0
 c98:	add	x1, x1, #0x0
 c9c:	add	x3, x3, #0x0
 ca0:	mov	w2, #0x69                  	// #105
 ca4:	bl	0 <__assert_fail>
 ca8:	adrp	x0, 0 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE>
 cac:	adrp	x1, 0 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE>
 cb0:	adrp	x3, 0 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE>
 cb4:	add	x0, x0, #0x0
 cb8:	add	x1, x1, #0x0
 cbc:	add	x3, x3, #0x0
 cc0:	mov	w2, #0x59d                 	// #1437
 cc4:	bl	0 <__assert_fail>
 cc8:	adrp	x0, 0 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE>
 ccc:	adrp	x1, 0 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE>
 cd0:	adrp	x3, 0 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE>
 cd4:	add	x0, x0, #0x0
 cd8:	add	x1, x1, #0x0
 cdc:	add	x3, x3, #0x0
 ce0:	mov	w2, #0x117                 	// #279
 ce4:	bl	0 <__assert_fail>
 ce8:	adrp	x0, 0 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE>
 cec:	adrp	x1, 0 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE>
 cf0:	adrp	x3, 0 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE>
 cf4:	add	x0, x0, #0x0
 cf8:	add	x1, x1, #0x0
 cfc:	add	x3, x3, #0x0
 d00:	mov	w2, #0x5e7                 	// #1511
 d04:	bl	0 <__assert_fail>

0000000000000d08 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeE>:
 d08:	mov	x1, x8
 d0c:	stp	xzr, xzr, [x8]
 d10:	str	xzr, [x8, #16]
 d14:	b	0 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE>

Disassembly of section .text._ZNK4llvm4Type15getFltSemanticsEv:

0000000000000000 <_ZNK4llvm4Type15getFltSemanticsEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #8]
   c:	sub	w8, w8, #0x1
  10:	cmp	w8, #0x5
  14:	b.hi	60 <_ZNK4llvm4Type15getFltSemanticsEv+0x60>  // b.pmore
  18:	adrp	x9, 0 <_ZNK4llvm4Type15getFltSemanticsEv>
  1c:	add	x9, x9, #0x0
  20:	adr	x10, 30 <_ZNK4llvm4Type15getFltSemanticsEv+0x30>
  24:	ldrb	w11, [x9, x8]
  28:	add	x10, x10, x11, lsl #2
  2c:	br	x10
  30:	ldp	x29, x30, [sp], #16
  34:	b	0 <_ZN4llvm11APFloatBase8IEEEhalfEv>
  38:	ldp	x29, x30, [sp], #16
  3c:	b	0 <_ZN4llvm11APFloatBase8IEEEquadEv>
  40:	ldp	x29, x30, [sp], #16
  44:	b	0 <_ZN4llvm11APFloatBase10IEEEdoubleEv>
  48:	ldp	x29, x30, [sp], #16
  4c:	b	0 <_ZN4llvm11APFloatBase10IEEEsingleEv>
  50:	ldp	x29, x30, [sp], #16
  54:	b	0 <_ZN4llvm11APFloatBase17x87DoubleExtendedEv>
  58:	ldp	x29, x30, [sp], #16
  5c:	b	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
  60:	adrp	x0, 0 <_ZNK4llvm4Type15getFltSemanticsEv>
  64:	adrp	x1, 0 <_ZNK4llvm4Type15getFltSemanticsEv>
  68:	add	x0, x0, #0x0
  6c:	add	x1, x1, #0x0
  70:	mov	w2, #0xb1                  	// #177
  74:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm7APFloatD2Ev:

0000000000000000 <_ZN4llvm7APFloatD2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x0
  14:	ldr	x21, [x20, #8]!
  18:	mov	x19, x0
  1c:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
  20:	cmp	x0, x21
  24:	b.eq	3c <_ZN4llvm7APFloatD2Ev+0x3c>  // b.none
  28:	mov	x0, x20
  2c:	ldp	x20, x19, [sp, #32]
  30:	ldp	x22, x21, [sp, #16]
  34:	ldp	x29, x30, [sp], #48
  38:	b	0 <_ZN4llvm6detail9IEEEFloatD1Ev>
  3c:	ldr	x8, [x19, #16]
  40:	cbz	x8, 70 <_ZN4llvm7APFloatD2Ev+0x70>
  44:	mov	x20, x8
  48:	ldr	x9, [x20, #-8]!
  4c:	cbz	x9, 68 <_ZN4llvm7APFloatD2Ev+0x68>
  50:	lsl	x21, x9, #5
  54:	sub	x22, x8, #0x20
  58:	add	x0, x22, x21
  5c:	bl	0 <_ZN4llvm7APFloatD2Ev>
  60:	subs	x21, x21, #0x20
  64:	b.ne	58 <_ZN4llvm7APFloatD2Ev+0x58>  // b.any
  68:	mov	x0, x20
  6c:	bl	0 <_ZdaPv>
  70:	str	xzr, [x19, #16]
  74:	ldp	x20, x19, [sp, #32]
  78:	ldp	x22, x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	ret

Operations.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>:
       0:	sub	sp, sp, #0x130
       4:	stp	x29, x30, [sp, #208]
       8:	stp	x28, x27, [sp, #224]
       c:	stp	x26, x25, [sp, #240]
      10:	stp	x24, x23, [sp, #256]
      14:	stp	x22, x21, [sp, #272]
      18:	stp	x20, x19, [sp, #288]
      1c:	add	x29, sp, #0xd0
      20:	mov	x19, x0
      24:	add	x8, sp, #0x8
      28:	mov	w0, #0x1                   	// #1
      2c:	mov	w1, #0xd                   	// #13
      30:	add	x22, sp, #0x8
      34:	bl	1d3c <_ZN4llvm8fuzzerop15binOpDescriptorEjNS_11Instruction9BinaryOpsE>
      38:	mov	x21, x19
      3c:	ldr	x20, [x21, #8]!
      40:	adrp	x23, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
      44:	mov	x24, x21
      48:	ldr	x8, [x24, #8]!
      4c:	cmp	x20, x8
      50:	b.eq	1ab8 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1ab8>  // b.none
      54:	ldr	w8, [sp, #8]
      58:	ldr	d0, [x23]
      5c:	add	x9, x20, #0x18
      60:	mov	x0, x20
      64:	str	w8, [x20]
      68:	str	x9, [x0, #8]!
      6c:	str	d0, [x20, #16]
      70:	ldr	w8, [sp, #24]
      74:	cbz	w8, 84 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x84>
      78:	add	x8, sp, #0x8
      7c:	add	x1, x8, #0x8
      80:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
      84:	str	xzr, [x20, #168]
      88:	ldur	q0, [x22, #152]
      8c:	stur	q0, [x22, #184]
      90:	ldur	q1, [x20, #152]
      94:	stur	q1, [x22, #152]
      98:	stur	q0, [x20, #152]
      9c:	ldr	x8, [sp, #176]
      a0:	str	xzr, [sp, #176]
      a4:	ldr	x9, [x20, #176]
      a8:	str	x8, [x20, #168]
      ac:	ldr	x8, [sp, #184]
      b0:	str	x9, [sp, #184]
      b4:	str	x8, [x20, #176]
      b8:	ldr	x8, [x21]
      bc:	add	x8, x8, #0xb8
      c0:	str	x8, [x21]
      c4:	ldr	x8, [sp, #176]
      c8:	cbz	x8, e0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xe0>
      cc:	add	x9, sp, #0x8
      d0:	add	x0, x9, #0x98
      d4:	mov	w2, #0x3                   	// #3
      d8:	mov	x1, x0
      dc:	blr	x8
      e0:	ldr	w8, [sp, #24]
      e4:	ldr	x20, [sp, #16]
      e8:	add	x9, sp, #0x8
      ec:	add	x25, x9, #0x8
      f0:	cbz	w8, 144 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x144>
      f4:	lsl	x26, x8, #6
      f8:	b	104 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x104>
      fc:	subs	x26, x26, #0x40
     100:	b.eq	140 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x140>  // b.none
     104:	add	x27, x20, x26
     108:	ldur	x8, [x27, #-16]
     10c:	cbz	x8, 120 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x120>
     110:	sub	x0, x27, #0x20
     114:	mov	w2, #0x3                   	// #3
     118:	mov	x1, x0
     11c:	blr	x8
     120:	ldur	x8, [x27, #-48]
     124:	cbz	x8, fc <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xfc>
     128:	add	x9, x20, x26
     12c:	sub	x0, x9, #0x40
     130:	mov	w2, #0x3                   	// #3
     134:	mov	x1, x0
     138:	blr	x8
     13c:	b	fc <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xfc>
     140:	ldr	x20, [sp, #16]
     144:	add	x8, x25, #0x10
     148:	cmp	x20, x8
     14c:	b.eq	158 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x158>  // b.none
     150:	mov	x0, x20
     154:	bl	0 <free>
     158:	add	x8, sp, #0x8
     15c:	mov	w0, #0x1                   	// #1
     160:	mov	w1, #0xf                   	// #15
     164:	bl	1d3c <_ZN4llvm8fuzzerop15binOpDescriptorEjNS_11Instruction9BinaryOpsE>
     168:	ldr	x20, [x21]
     16c:	ldr	x8, [x24]
     170:	cmp	x20, x8
     174:	b.eq	1ad4 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1ad4>  // b.none
     178:	ldr	w8, [sp, #8]
     17c:	ldr	d0, [x23]
     180:	add	x9, x20, #0x18
     184:	mov	x0, x20
     188:	str	w8, [x20]
     18c:	str	x9, [x0, #8]!
     190:	str	d0, [x20, #16]
     194:	ldr	w8, [sp, #24]
     198:	cbz	w8, 1a8 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1a8>
     19c:	add	x8, sp, #0x8
     1a0:	add	x1, x8, #0x8
     1a4:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
     1a8:	str	xzr, [x20, #168]
     1ac:	ldur	q0, [x22, #152]
     1b0:	stur	q0, [x22, #184]
     1b4:	ldur	q1, [x20, #152]
     1b8:	stur	q1, [x22, #152]
     1bc:	stur	q0, [x20, #152]
     1c0:	ldr	x8, [sp, #176]
     1c4:	str	xzr, [sp, #176]
     1c8:	ldr	x9, [x20, #176]
     1cc:	str	x8, [x20, #168]
     1d0:	ldr	x8, [sp, #184]
     1d4:	str	x9, [sp, #184]
     1d8:	str	x8, [x20, #176]
     1dc:	ldr	x8, [x21]
     1e0:	add	x8, x8, #0xb8
     1e4:	str	x8, [x21]
     1e8:	ldr	x8, [sp, #176]
     1ec:	cbz	x8, 204 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x204>
     1f0:	add	x9, sp, #0x8
     1f4:	add	x0, x9, #0x98
     1f8:	mov	w2, #0x3                   	// #3
     1fc:	mov	x1, x0
     200:	blr	x8
     204:	ldr	w8, [sp, #24]
     208:	ldr	x20, [sp, #16]
     20c:	add	x9, sp, #0x8
     210:	add	x25, x9, #0x8
     214:	cbz	w8, 268 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x268>
     218:	lsl	x26, x8, #6
     21c:	b	228 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x228>
     220:	subs	x26, x26, #0x40
     224:	b.eq	264 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x264>  // b.none
     228:	add	x27, x20, x26
     22c:	ldur	x8, [x27, #-16]
     230:	cbz	x8, 244 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x244>
     234:	sub	x0, x27, #0x20
     238:	mov	w2, #0x3                   	// #3
     23c:	mov	x1, x0
     240:	blr	x8
     244:	ldur	x8, [x27, #-48]
     248:	cbz	x8, 220 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x220>
     24c:	add	x9, x20, x26
     250:	sub	x0, x9, #0x40
     254:	mov	w2, #0x3                   	// #3
     258:	mov	x1, x0
     25c:	blr	x8
     260:	b	220 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x220>
     264:	ldr	x20, [sp, #16]
     268:	add	x8, x25, #0x10
     26c:	cmp	x20, x8
     270:	b.eq	27c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x27c>  // b.none
     274:	mov	x0, x20
     278:	bl	0 <free>
     27c:	add	x8, sp, #0x8
     280:	mov	w0, #0x1                   	// #1
     284:	mov	w1, #0x11                  	// #17
     288:	bl	1d3c <_ZN4llvm8fuzzerop15binOpDescriptorEjNS_11Instruction9BinaryOpsE>
     28c:	ldr	x20, [x21]
     290:	ldr	x8, [x24]
     294:	cmp	x20, x8
     298:	b.eq	1af0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1af0>  // b.none
     29c:	ldr	w8, [sp, #8]
     2a0:	ldr	d0, [x23]
     2a4:	add	x9, x20, #0x18
     2a8:	mov	x0, x20
     2ac:	str	w8, [x20]
     2b0:	str	x9, [x0, #8]!
     2b4:	str	d0, [x20, #16]
     2b8:	ldr	w8, [sp, #24]
     2bc:	cbz	w8, 2cc <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x2cc>
     2c0:	add	x8, sp, #0x8
     2c4:	add	x1, x8, #0x8
     2c8:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
     2cc:	str	xzr, [x20, #168]
     2d0:	ldur	q0, [x22, #152]
     2d4:	stur	q0, [x22, #184]
     2d8:	ldur	q1, [x20, #152]
     2dc:	stur	q1, [x22, #152]
     2e0:	stur	q0, [x20, #152]
     2e4:	ldr	x8, [sp, #176]
     2e8:	str	xzr, [sp, #176]
     2ec:	ldr	x9, [x20, #176]
     2f0:	str	x8, [x20, #168]
     2f4:	ldr	x8, [sp, #184]
     2f8:	str	x9, [sp, #184]
     2fc:	str	x8, [x20, #176]
     300:	ldr	x8, [x21]
     304:	add	x8, x8, #0xb8
     308:	str	x8, [x21]
     30c:	ldr	x8, [sp, #176]
     310:	cbz	x8, 328 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x328>
     314:	add	x9, sp, #0x8
     318:	add	x0, x9, #0x98
     31c:	mov	w2, #0x3                   	// #3
     320:	mov	x1, x0
     324:	blr	x8
     328:	ldr	w8, [sp, #24]
     32c:	ldr	x20, [sp, #16]
     330:	add	x9, sp, #0x8
     334:	add	x25, x9, #0x8
     338:	cbz	w8, 38c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x38c>
     33c:	lsl	x26, x8, #6
     340:	b	34c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x34c>
     344:	subs	x26, x26, #0x40
     348:	b.eq	388 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x388>  // b.none
     34c:	add	x27, x20, x26
     350:	ldur	x8, [x27, #-16]
     354:	cbz	x8, 368 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x368>
     358:	sub	x0, x27, #0x20
     35c:	mov	w2, #0x3                   	// #3
     360:	mov	x1, x0
     364:	blr	x8
     368:	ldur	x8, [x27, #-48]
     36c:	cbz	x8, 344 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x344>
     370:	add	x9, x20, x26
     374:	sub	x0, x9, #0x40
     378:	mov	w2, #0x3                   	// #3
     37c:	mov	x1, x0
     380:	blr	x8
     384:	b	344 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x344>
     388:	ldr	x20, [sp, #16]
     38c:	add	x8, x25, #0x10
     390:	cmp	x20, x8
     394:	b.eq	3a0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x3a0>  // b.none
     398:	mov	x0, x20
     39c:	bl	0 <free>
     3a0:	add	x8, sp, #0x8
     3a4:	mov	w0, #0x1                   	// #1
     3a8:	mov	w1, #0x14                  	// #20
     3ac:	bl	1d3c <_ZN4llvm8fuzzerop15binOpDescriptorEjNS_11Instruction9BinaryOpsE>
     3b0:	ldr	x20, [x21]
     3b4:	ldr	x8, [x24]
     3b8:	cmp	x20, x8
     3bc:	b.eq	1b0c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1b0c>  // b.none
     3c0:	ldr	w8, [sp, #8]
     3c4:	ldr	d0, [x23]
     3c8:	add	x9, x20, #0x18
     3cc:	mov	x0, x20
     3d0:	str	w8, [x20]
     3d4:	str	x9, [x0, #8]!
     3d8:	str	d0, [x20, #16]
     3dc:	ldr	w8, [sp, #24]
     3e0:	cbz	w8, 3f0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x3f0>
     3e4:	add	x8, sp, #0x8
     3e8:	add	x1, x8, #0x8
     3ec:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
     3f0:	str	xzr, [x20, #168]
     3f4:	ldur	q0, [x22, #152]
     3f8:	stur	q0, [x22, #184]
     3fc:	ldur	q1, [x20, #152]
     400:	stur	q1, [x22, #152]
     404:	stur	q0, [x20, #152]
     408:	ldr	x8, [sp, #176]
     40c:	str	xzr, [sp, #176]
     410:	ldr	x9, [x20, #176]
     414:	str	x8, [x20, #168]
     418:	ldr	x8, [sp, #184]
     41c:	str	x9, [sp, #184]
     420:	str	x8, [x20, #176]
     424:	ldr	x8, [x21]
     428:	add	x8, x8, #0xb8
     42c:	str	x8, [x21]
     430:	ldr	x8, [sp, #176]
     434:	cbz	x8, 44c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x44c>
     438:	add	x9, sp, #0x8
     43c:	add	x0, x9, #0x98
     440:	mov	w2, #0x3                   	// #3
     444:	mov	x1, x0
     448:	blr	x8
     44c:	ldr	w8, [sp, #24]
     450:	ldr	x20, [sp, #16]
     454:	add	x9, sp, #0x8
     458:	add	x25, x9, #0x8
     45c:	cbz	w8, 4b0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x4b0>
     460:	lsl	x26, x8, #6
     464:	b	470 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x470>
     468:	subs	x26, x26, #0x40
     46c:	b.eq	4ac <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x4ac>  // b.none
     470:	add	x27, x20, x26
     474:	ldur	x8, [x27, #-16]
     478:	cbz	x8, 48c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x48c>
     47c:	sub	x0, x27, #0x20
     480:	mov	w2, #0x3                   	// #3
     484:	mov	x1, x0
     488:	blr	x8
     48c:	ldur	x8, [x27, #-48]
     490:	cbz	x8, 468 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x468>
     494:	add	x9, x20, x26
     498:	sub	x0, x9, #0x40
     49c:	mov	w2, #0x3                   	// #3
     4a0:	mov	x1, x0
     4a4:	blr	x8
     4a8:	b	468 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x468>
     4ac:	ldr	x20, [sp, #16]
     4b0:	add	x8, x25, #0x10
     4b4:	cmp	x20, x8
     4b8:	b.eq	4c4 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x4c4>  // b.none
     4bc:	mov	x0, x20
     4c0:	bl	0 <free>
     4c4:	add	x8, sp, #0x8
     4c8:	mov	w0, #0x1                   	// #1
     4cc:	mov	w1, #0x13                  	// #19
     4d0:	bl	1d3c <_ZN4llvm8fuzzerop15binOpDescriptorEjNS_11Instruction9BinaryOpsE>
     4d4:	ldr	x20, [x21]
     4d8:	ldr	x8, [x24]
     4dc:	cmp	x20, x8
     4e0:	b.eq	1b28 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1b28>  // b.none
     4e4:	ldr	w8, [sp, #8]
     4e8:	ldr	d0, [x23]
     4ec:	add	x9, x20, #0x18
     4f0:	mov	x0, x20
     4f4:	str	w8, [x20]
     4f8:	str	x9, [x0, #8]!
     4fc:	str	d0, [x20, #16]
     500:	ldr	w8, [sp, #24]
     504:	cbz	w8, 514 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x514>
     508:	add	x8, sp, #0x8
     50c:	add	x1, x8, #0x8
     510:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
     514:	str	xzr, [x20, #168]
     518:	ldur	q0, [x22, #152]
     51c:	stur	q0, [x22, #184]
     520:	ldur	q1, [x20, #152]
     524:	stur	q1, [x22, #152]
     528:	stur	q0, [x20, #152]
     52c:	ldr	x8, [sp, #176]
     530:	str	xzr, [sp, #176]
     534:	ldr	x9, [x20, #176]
     538:	str	x8, [x20, #168]
     53c:	ldr	x8, [sp, #184]
     540:	str	x9, [sp, #184]
     544:	str	x8, [x20, #176]
     548:	ldr	x8, [x21]
     54c:	add	x8, x8, #0xb8
     550:	str	x8, [x21]
     554:	ldr	x8, [sp, #176]
     558:	cbz	x8, 570 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x570>
     55c:	add	x9, sp, #0x8
     560:	add	x0, x9, #0x98
     564:	mov	w2, #0x3                   	// #3
     568:	mov	x1, x0
     56c:	blr	x8
     570:	ldr	w8, [sp, #24]
     574:	ldr	x20, [sp, #16]
     578:	add	x9, sp, #0x8
     57c:	add	x25, x9, #0x8
     580:	cbz	w8, 5d4 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x5d4>
     584:	lsl	x26, x8, #6
     588:	b	594 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x594>
     58c:	subs	x26, x26, #0x40
     590:	b.eq	5d0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x5d0>  // b.none
     594:	add	x27, x20, x26
     598:	ldur	x8, [x27, #-16]
     59c:	cbz	x8, 5b0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x5b0>
     5a0:	sub	x0, x27, #0x20
     5a4:	mov	w2, #0x3                   	// #3
     5a8:	mov	x1, x0
     5ac:	blr	x8
     5b0:	ldur	x8, [x27, #-48]
     5b4:	cbz	x8, 58c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x58c>
     5b8:	add	x9, x20, x26
     5bc:	sub	x0, x9, #0x40
     5c0:	mov	w2, #0x3                   	// #3
     5c4:	mov	x1, x0
     5c8:	blr	x8
     5cc:	b	58c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x58c>
     5d0:	ldr	x20, [sp, #16]
     5d4:	add	x8, x25, #0x10
     5d8:	cmp	x20, x8
     5dc:	b.eq	5e8 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x5e8>  // b.none
     5e0:	mov	x0, x20
     5e4:	bl	0 <free>
     5e8:	add	x8, sp, #0x8
     5ec:	mov	w0, #0x1                   	// #1
     5f0:	mov	w1, #0x17                  	// #23
     5f4:	bl	1d3c <_ZN4llvm8fuzzerop15binOpDescriptorEjNS_11Instruction9BinaryOpsE>
     5f8:	ldr	x20, [x21]
     5fc:	ldr	x8, [x24]
     600:	cmp	x20, x8
     604:	b.eq	1b44 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1b44>  // b.none
     608:	ldr	w8, [sp, #8]
     60c:	ldr	d0, [x23]
     610:	add	x9, x20, #0x18
     614:	mov	x0, x20
     618:	str	w8, [x20]
     61c:	str	x9, [x0, #8]!
     620:	str	d0, [x20, #16]
     624:	ldr	w8, [sp, #24]
     628:	cbz	w8, 638 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x638>
     62c:	add	x8, sp, #0x8
     630:	add	x1, x8, #0x8
     634:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
     638:	str	xzr, [x20, #168]
     63c:	ldur	q0, [x22, #152]
     640:	stur	q0, [x22, #184]
     644:	ldur	q1, [x20, #152]
     648:	stur	q1, [x22, #152]
     64c:	stur	q0, [x20, #152]
     650:	ldr	x8, [sp, #176]
     654:	str	xzr, [sp, #176]
     658:	ldr	x9, [x20, #176]
     65c:	str	x8, [x20, #168]
     660:	ldr	x8, [sp, #184]
     664:	str	x9, [sp, #184]
     668:	str	x8, [x20, #176]
     66c:	ldr	x8, [x21]
     670:	add	x8, x8, #0xb8
     674:	str	x8, [x21]
     678:	ldr	x8, [sp, #176]
     67c:	cbz	x8, 694 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x694>
     680:	add	x9, sp, #0x8
     684:	add	x0, x9, #0x98
     688:	mov	w2, #0x3                   	// #3
     68c:	mov	x1, x0
     690:	blr	x8
     694:	ldr	w8, [sp, #24]
     698:	ldr	x20, [sp, #16]
     69c:	add	x9, sp, #0x8
     6a0:	add	x25, x9, #0x8
     6a4:	cbz	w8, 6f8 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x6f8>
     6a8:	lsl	x26, x8, #6
     6ac:	b	6b8 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x6b8>
     6b0:	subs	x26, x26, #0x40
     6b4:	b.eq	6f4 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x6f4>  // b.none
     6b8:	add	x27, x20, x26
     6bc:	ldur	x8, [x27, #-16]
     6c0:	cbz	x8, 6d4 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x6d4>
     6c4:	sub	x0, x27, #0x20
     6c8:	mov	w2, #0x3                   	// #3
     6cc:	mov	x1, x0
     6d0:	blr	x8
     6d4:	ldur	x8, [x27, #-48]
     6d8:	cbz	x8, 6b0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x6b0>
     6dc:	add	x9, x20, x26
     6e0:	sub	x0, x9, #0x40
     6e4:	mov	w2, #0x3                   	// #3
     6e8:	mov	x1, x0
     6ec:	blr	x8
     6f0:	b	6b0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x6b0>
     6f4:	ldr	x20, [sp, #16]
     6f8:	add	x8, x25, #0x10
     6fc:	cmp	x20, x8
     700:	b.eq	70c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x70c>  // b.none
     704:	mov	x0, x20
     708:	bl	0 <free>
     70c:	add	x8, sp, #0x8
     710:	mov	w0, #0x1                   	// #1
     714:	mov	w1, #0x16                  	// #22
     718:	bl	1d3c <_ZN4llvm8fuzzerop15binOpDescriptorEjNS_11Instruction9BinaryOpsE>
     71c:	ldr	x20, [x21]
     720:	ldr	x8, [x24]
     724:	cmp	x20, x8
     728:	b.eq	1b60 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1b60>  // b.none
     72c:	ldr	w8, [sp, #8]
     730:	ldr	d0, [x23]
     734:	add	x9, x20, #0x18
     738:	mov	x0, x20
     73c:	str	w8, [x20]
     740:	str	x9, [x0, #8]!
     744:	str	d0, [x20, #16]
     748:	ldr	w8, [sp, #24]
     74c:	cbz	w8, 75c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x75c>
     750:	add	x8, sp, #0x8
     754:	add	x1, x8, #0x8
     758:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
     75c:	str	xzr, [x20, #168]
     760:	ldur	q0, [x22, #152]
     764:	stur	q0, [x22, #184]
     768:	ldur	q1, [x20, #152]
     76c:	stur	q1, [x22, #152]
     770:	stur	q0, [x20, #152]
     774:	ldr	x8, [sp, #176]
     778:	str	xzr, [sp, #176]
     77c:	ldr	x9, [x20, #176]
     780:	str	x8, [x20, #168]
     784:	ldr	x8, [sp, #184]
     788:	str	x9, [sp, #184]
     78c:	str	x8, [x20, #176]
     790:	ldr	x8, [x21]
     794:	add	x8, x8, #0xb8
     798:	str	x8, [x21]
     79c:	ldr	x8, [sp, #176]
     7a0:	cbz	x8, 7b8 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x7b8>
     7a4:	add	x9, sp, #0x8
     7a8:	add	x0, x9, #0x98
     7ac:	mov	w2, #0x3                   	// #3
     7b0:	mov	x1, x0
     7b4:	blr	x8
     7b8:	ldr	w8, [sp, #24]
     7bc:	ldr	x20, [sp, #16]
     7c0:	add	x9, sp, #0x8
     7c4:	add	x25, x9, #0x8
     7c8:	cbz	w8, 81c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x81c>
     7cc:	lsl	x26, x8, #6
     7d0:	b	7dc <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x7dc>
     7d4:	subs	x26, x26, #0x40
     7d8:	b.eq	818 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x818>  // b.none
     7dc:	add	x27, x20, x26
     7e0:	ldur	x8, [x27, #-16]
     7e4:	cbz	x8, 7f8 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x7f8>
     7e8:	sub	x0, x27, #0x20
     7ec:	mov	w2, #0x3                   	// #3
     7f0:	mov	x1, x0
     7f4:	blr	x8
     7f8:	ldur	x8, [x27, #-48]
     7fc:	cbz	x8, 7d4 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x7d4>
     800:	add	x9, x20, x26
     804:	sub	x0, x9, #0x40
     808:	mov	w2, #0x3                   	// #3
     80c:	mov	x1, x0
     810:	blr	x8
     814:	b	7d4 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x7d4>
     818:	ldr	x20, [sp, #16]
     81c:	add	x8, x25, #0x10
     820:	cmp	x20, x8
     824:	b.eq	830 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x830>  // b.none
     828:	mov	x0, x20
     82c:	bl	0 <free>
     830:	add	x8, sp, #0x8
     834:	mov	w0, #0x1                   	// #1
     838:	mov	w1, #0x19                  	// #25
     83c:	bl	1d3c <_ZN4llvm8fuzzerop15binOpDescriptorEjNS_11Instruction9BinaryOpsE>
     840:	ldr	x20, [x21]
     844:	ldr	x8, [x24]
     848:	cmp	x20, x8
     84c:	b.eq	1b7c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1b7c>  // b.none
     850:	ldr	w8, [sp, #8]
     854:	ldr	d0, [x23]
     858:	add	x9, x20, #0x18
     85c:	mov	x0, x20
     860:	str	w8, [x20]
     864:	str	x9, [x0, #8]!
     868:	str	d0, [x20, #16]
     86c:	ldr	w8, [sp, #24]
     870:	cbz	w8, 880 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x880>
     874:	add	x8, sp, #0x8
     878:	add	x1, x8, #0x8
     87c:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
     880:	str	xzr, [x20, #168]
     884:	ldur	q0, [x22, #152]
     888:	stur	q0, [x22, #184]
     88c:	ldur	q1, [x20, #152]
     890:	stur	q1, [x22, #152]
     894:	stur	q0, [x20, #152]
     898:	ldr	x8, [sp, #176]
     89c:	str	xzr, [sp, #176]
     8a0:	ldr	x9, [x20, #176]
     8a4:	str	x8, [x20, #168]
     8a8:	ldr	x8, [sp, #184]
     8ac:	str	x9, [sp, #184]
     8b0:	str	x8, [x20, #176]
     8b4:	ldr	x8, [x21]
     8b8:	add	x8, x8, #0xb8
     8bc:	str	x8, [x21]
     8c0:	ldr	x8, [sp, #176]
     8c4:	cbz	x8, 8dc <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x8dc>
     8c8:	add	x9, sp, #0x8
     8cc:	add	x0, x9, #0x98
     8d0:	mov	w2, #0x3                   	// #3
     8d4:	mov	x1, x0
     8d8:	blr	x8
     8dc:	ldr	w8, [sp, #24]
     8e0:	ldr	x20, [sp, #16]
     8e4:	add	x9, sp, #0x8
     8e8:	add	x25, x9, #0x8
     8ec:	cbz	w8, 940 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x940>
     8f0:	lsl	x26, x8, #6
     8f4:	b	900 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x900>
     8f8:	subs	x26, x26, #0x40
     8fc:	b.eq	93c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x93c>  // b.none
     900:	add	x27, x20, x26
     904:	ldur	x8, [x27, #-16]
     908:	cbz	x8, 91c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x91c>
     90c:	sub	x0, x27, #0x20
     910:	mov	w2, #0x3                   	// #3
     914:	mov	x1, x0
     918:	blr	x8
     91c:	ldur	x8, [x27, #-48]
     920:	cbz	x8, 8f8 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x8f8>
     924:	add	x9, x20, x26
     928:	sub	x0, x9, #0x40
     92c:	mov	w2, #0x3                   	// #3
     930:	mov	x1, x0
     934:	blr	x8
     938:	b	8f8 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x8f8>
     93c:	ldr	x20, [sp, #16]
     940:	add	x8, x25, #0x10
     944:	cmp	x20, x8
     948:	b.eq	954 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x954>  // b.none
     94c:	mov	x0, x20
     950:	bl	0 <free>
     954:	add	x8, sp, #0x8
     958:	mov	w0, #0x1                   	// #1
     95c:	mov	w1, #0x1a                  	// #26
     960:	bl	1d3c <_ZN4llvm8fuzzerop15binOpDescriptorEjNS_11Instruction9BinaryOpsE>
     964:	ldr	x20, [x21]
     968:	ldr	x8, [x24]
     96c:	cmp	x20, x8
     970:	b.eq	1b98 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1b98>  // b.none
     974:	ldr	w8, [sp, #8]
     978:	ldr	d0, [x23]
     97c:	add	x9, x20, #0x18
     980:	mov	x0, x20
     984:	str	w8, [x20]
     988:	str	x9, [x0, #8]!
     98c:	str	d0, [x20, #16]
     990:	ldr	w8, [sp, #24]
     994:	cbz	w8, 9a4 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x9a4>
     998:	add	x8, sp, #0x8
     99c:	add	x1, x8, #0x8
     9a0:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
     9a4:	str	xzr, [x20, #168]
     9a8:	ldur	q0, [x22, #152]
     9ac:	stur	q0, [x22, #184]
     9b0:	ldur	q1, [x20, #152]
     9b4:	stur	q1, [x22, #152]
     9b8:	stur	q0, [x20, #152]
     9bc:	ldr	x8, [sp, #176]
     9c0:	str	xzr, [sp, #176]
     9c4:	ldr	x9, [x20, #176]
     9c8:	str	x8, [x20, #168]
     9cc:	ldr	x8, [sp, #184]
     9d0:	str	x9, [sp, #184]
     9d4:	str	x8, [x20, #176]
     9d8:	ldr	x8, [x21]
     9dc:	add	x8, x8, #0xb8
     9e0:	str	x8, [x21]
     9e4:	ldr	x8, [sp, #176]
     9e8:	cbz	x8, a00 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xa00>
     9ec:	add	x9, sp, #0x8
     9f0:	add	x0, x9, #0x98
     9f4:	mov	w2, #0x3                   	// #3
     9f8:	mov	x1, x0
     9fc:	blr	x8
     a00:	ldr	w8, [sp, #24]
     a04:	ldr	x20, [sp, #16]
     a08:	add	x9, sp, #0x8
     a0c:	add	x25, x9, #0x8
     a10:	cbz	w8, a64 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xa64>
     a14:	lsl	x26, x8, #6
     a18:	b	a24 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xa24>
     a1c:	subs	x26, x26, #0x40
     a20:	b.eq	a60 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xa60>  // b.none
     a24:	add	x27, x20, x26
     a28:	ldur	x8, [x27, #-16]
     a2c:	cbz	x8, a40 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xa40>
     a30:	sub	x0, x27, #0x20
     a34:	mov	w2, #0x3                   	// #3
     a38:	mov	x1, x0
     a3c:	blr	x8
     a40:	ldur	x8, [x27, #-48]
     a44:	cbz	x8, a1c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xa1c>
     a48:	add	x9, x20, x26
     a4c:	sub	x0, x9, #0x40
     a50:	mov	w2, #0x3                   	// #3
     a54:	mov	x1, x0
     a58:	blr	x8
     a5c:	b	a1c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xa1c>
     a60:	ldr	x20, [sp, #16]
     a64:	add	x8, x25, #0x10
     a68:	cmp	x20, x8
     a6c:	b.eq	a78 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xa78>  // b.none
     a70:	mov	x0, x20
     a74:	bl	0 <free>
     a78:	add	x8, sp, #0x8
     a7c:	mov	w0, #0x1                   	// #1
     a80:	mov	w1, #0x1b                  	// #27
     a84:	bl	1d3c <_ZN4llvm8fuzzerop15binOpDescriptorEjNS_11Instruction9BinaryOpsE>
     a88:	ldr	x20, [x21]
     a8c:	ldr	x8, [x24]
     a90:	cmp	x20, x8
     a94:	b.eq	1bb4 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1bb4>  // b.none
     a98:	ldr	w8, [sp, #8]
     a9c:	ldr	d0, [x23]
     aa0:	add	x9, x20, #0x18
     aa4:	mov	x0, x20
     aa8:	str	w8, [x20]
     aac:	str	x9, [x0, #8]!
     ab0:	str	d0, [x20, #16]
     ab4:	ldr	w8, [sp, #24]
     ab8:	cbz	w8, ac8 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xac8>
     abc:	add	x8, sp, #0x8
     ac0:	add	x1, x8, #0x8
     ac4:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
     ac8:	str	xzr, [x20, #168]
     acc:	ldur	q0, [x22, #152]
     ad0:	stur	q0, [x22, #184]
     ad4:	ldur	q1, [x20, #152]
     ad8:	stur	q1, [x22, #152]
     adc:	stur	q0, [x20, #152]
     ae0:	ldr	x8, [sp, #176]
     ae4:	str	xzr, [sp, #176]
     ae8:	ldr	x9, [x20, #176]
     aec:	str	x8, [x20, #168]
     af0:	ldr	x8, [sp, #184]
     af4:	str	x9, [sp, #184]
     af8:	str	x8, [x20, #176]
     afc:	ldr	x8, [x21]
     b00:	add	x8, x8, #0xb8
     b04:	str	x8, [x21]
     b08:	ldr	x8, [sp, #176]
     b0c:	cbz	x8, b24 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xb24>
     b10:	add	x9, sp, #0x8
     b14:	add	x0, x9, #0x98
     b18:	mov	w2, #0x3                   	// #3
     b1c:	mov	x1, x0
     b20:	blr	x8
     b24:	ldr	w8, [sp, #24]
     b28:	ldr	x20, [sp, #16]
     b2c:	add	x9, sp, #0x8
     b30:	add	x25, x9, #0x8
     b34:	cbz	w8, b88 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xb88>
     b38:	lsl	x26, x8, #6
     b3c:	b	b48 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xb48>
     b40:	subs	x26, x26, #0x40
     b44:	b.eq	b84 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xb84>  // b.none
     b48:	add	x27, x20, x26
     b4c:	ldur	x8, [x27, #-16]
     b50:	cbz	x8, b64 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xb64>
     b54:	sub	x0, x27, #0x20
     b58:	mov	w2, #0x3                   	// #3
     b5c:	mov	x1, x0
     b60:	blr	x8
     b64:	ldur	x8, [x27, #-48]
     b68:	cbz	x8, b40 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xb40>
     b6c:	add	x9, x20, x26
     b70:	sub	x0, x9, #0x40
     b74:	mov	w2, #0x3                   	// #3
     b78:	mov	x1, x0
     b7c:	blr	x8
     b80:	b	b40 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xb40>
     b84:	ldr	x20, [sp, #16]
     b88:	add	x8, x25, #0x10
     b8c:	cmp	x20, x8
     b90:	b.eq	b9c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xb9c>  // b.none
     b94:	mov	x0, x20
     b98:	bl	0 <free>
     b9c:	add	x8, sp, #0x8
     ba0:	mov	w0, #0x1                   	// #1
     ba4:	mov	w1, #0x1c                  	// #28
     ba8:	bl	1d3c <_ZN4llvm8fuzzerop15binOpDescriptorEjNS_11Instruction9BinaryOpsE>
     bac:	ldr	x20, [x21]
     bb0:	ldr	x8, [x24]
     bb4:	cmp	x20, x8
     bb8:	b.eq	1bd0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1bd0>  // b.none
     bbc:	ldr	w8, [sp, #8]
     bc0:	ldr	d0, [x23]
     bc4:	add	x9, x20, #0x18
     bc8:	mov	x0, x20
     bcc:	str	w8, [x20]
     bd0:	str	x9, [x0, #8]!
     bd4:	str	d0, [x20, #16]
     bd8:	ldr	w8, [sp, #24]
     bdc:	cbz	w8, bec <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xbec>
     be0:	add	x8, sp, #0x8
     be4:	add	x1, x8, #0x8
     be8:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
     bec:	str	xzr, [x20, #168]
     bf0:	ldur	q0, [x22, #152]
     bf4:	stur	q0, [x22, #184]
     bf8:	ldur	q1, [x20, #152]
     bfc:	stur	q1, [x22, #152]
     c00:	stur	q0, [x20, #152]
     c04:	ldr	x8, [sp, #176]
     c08:	str	xzr, [sp, #176]
     c0c:	ldr	x9, [x20, #176]
     c10:	str	x8, [x20, #168]
     c14:	ldr	x8, [sp, #184]
     c18:	str	x9, [sp, #184]
     c1c:	str	x8, [x20, #176]
     c20:	ldr	x8, [x21]
     c24:	add	x8, x8, #0xb8
     c28:	str	x8, [x21]
     c2c:	ldr	x8, [sp, #176]
     c30:	cbz	x8, c48 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xc48>
     c34:	add	x9, sp, #0x8
     c38:	add	x0, x9, #0x98
     c3c:	mov	w2, #0x3                   	// #3
     c40:	mov	x1, x0
     c44:	blr	x8
     c48:	ldr	w8, [sp, #24]
     c4c:	ldr	x20, [sp, #16]
     c50:	add	x9, sp, #0x8
     c54:	add	x25, x9, #0x8
     c58:	cbz	w8, cac <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xcac>
     c5c:	lsl	x26, x8, #6
     c60:	b	c6c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xc6c>
     c64:	subs	x26, x26, #0x40
     c68:	b.eq	ca8 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xca8>  // b.none
     c6c:	add	x27, x20, x26
     c70:	ldur	x8, [x27, #-16]
     c74:	cbz	x8, c88 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xc88>
     c78:	sub	x0, x27, #0x20
     c7c:	mov	w2, #0x3                   	// #3
     c80:	mov	x1, x0
     c84:	blr	x8
     c88:	ldur	x8, [x27, #-48]
     c8c:	cbz	x8, c64 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xc64>
     c90:	add	x9, x20, x26
     c94:	sub	x0, x9, #0x40
     c98:	mov	w2, #0x3                   	// #3
     c9c:	mov	x1, x0
     ca0:	blr	x8
     ca4:	b	c64 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xc64>
     ca8:	ldr	x20, [sp, #16]
     cac:	add	x8, x25, #0x10
     cb0:	cmp	x20, x8
     cb4:	b.eq	cc0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xcc0>  // b.none
     cb8:	mov	x0, x20
     cbc:	bl	0 <free>
     cc0:	add	x8, sp, #0x8
     cc4:	mov	w0, #0x1                   	// #1
     cc8:	mov	w1, #0x1d                  	// #29
     ccc:	bl	1d3c <_ZN4llvm8fuzzerop15binOpDescriptorEjNS_11Instruction9BinaryOpsE>
     cd0:	ldr	x20, [x21]
     cd4:	ldr	x8, [x24]
     cd8:	cmp	x20, x8
     cdc:	b.eq	1bec <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1bec>  // b.none
     ce0:	ldr	w8, [sp, #8]
     ce4:	ldr	d0, [x23]
     ce8:	add	x9, x20, #0x18
     cec:	mov	x0, x20
     cf0:	str	w8, [x20]
     cf4:	str	x9, [x0, #8]!
     cf8:	str	d0, [x20, #16]
     cfc:	ldr	w8, [sp, #24]
     d00:	cbz	w8, d10 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xd10>
     d04:	add	x8, sp, #0x8
     d08:	add	x1, x8, #0x8
     d0c:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
     d10:	str	xzr, [x20, #168]
     d14:	ldur	q0, [x22, #152]
     d18:	stur	q0, [x22, #184]
     d1c:	ldur	q1, [x20, #152]
     d20:	stur	q1, [x22, #152]
     d24:	stur	q0, [x20, #152]
     d28:	ldr	x8, [sp, #176]
     d2c:	str	xzr, [sp, #176]
     d30:	ldr	x9, [x20, #176]
     d34:	str	x8, [x20, #168]
     d38:	ldr	x8, [sp, #184]
     d3c:	str	x9, [sp, #184]
     d40:	str	x8, [x20, #176]
     d44:	ldr	x8, [x21]
     d48:	add	x8, x8, #0xb8
     d4c:	str	x8, [x21]
     d50:	ldr	x8, [sp, #176]
     d54:	cbz	x8, d6c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xd6c>
     d58:	add	x9, sp, #0x8
     d5c:	add	x0, x9, #0x98
     d60:	mov	w2, #0x3                   	// #3
     d64:	mov	x1, x0
     d68:	blr	x8
     d6c:	ldr	w8, [sp, #24]
     d70:	ldr	x20, [sp, #16]
     d74:	add	x9, sp, #0x8
     d78:	add	x25, x9, #0x8
     d7c:	cbz	w8, dd0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xdd0>
     d80:	lsl	x26, x8, #6
     d84:	b	d90 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xd90>
     d88:	subs	x26, x26, #0x40
     d8c:	b.eq	dcc <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xdcc>  // b.none
     d90:	add	x27, x20, x26
     d94:	ldur	x8, [x27, #-16]
     d98:	cbz	x8, dac <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xdac>
     d9c:	sub	x0, x27, #0x20
     da0:	mov	w2, #0x3                   	// #3
     da4:	mov	x1, x0
     da8:	blr	x8
     dac:	ldur	x8, [x27, #-48]
     db0:	cbz	x8, d88 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xd88>
     db4:	add	x9, x20, x26
     db8:	sub	x0, x9, #0x40
     dbc:	mov	w2, #0x3                   	// #3
     dc0:	mov	x1, x0
     dc4:	blr	x8
     dc8:	b	d88 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xd88>
     dcc:	ldr	x20, [sp, #16]
     dd0:	add	x8, x25, #0x10
     dd4:	cmp	x20, x8
     dd8:	b.eq	de4 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xde4>  // b.none
     ddc:	mov	x0, x20
     de0:	bl	0 <free>
     de4:	add	x8, sp, #0x8
     de8:	mov	w0, #0x1                   	// #1
     dec:	mov	w1, #0x1e                  	// #30
     df0:	bl	1d3c <_ZN4llvm8fuzzerop15binOpDescriptorEjNS_11Instruction9BinaryOpsE>
     df4:	ldr	x20, [x21]
     df8:	ldr	x8, [x24]
     dfc:	cmp	x20, x8
     e00:	b.eq	1c08 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1c08>  // b.none
     e04:	ldr	w8, [sp, #8]
     e08:	ldr	d0, [x23]
     e0c:	add	x9, x20, #0x18
     e10:	mov	x0, x20
     e14:	str	w8, [x20]
     e18:	str	x9, [x0, #8]!
     e1c:	str	d0, [x20, #16]
     e20:	ldr	w8, [sp, #24]
     e24:	cbz	w8, e34 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xe34>
     e28:	add	x8, sp, #0x8
     e2c:	add	x1, x8, #0x8
     e30:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
     e34:	str	xzr, [x20, #168]
     e38:	ldur	q0, [x22, #152]
     e3c:	stur	q0, [x22, #184]
     e40:	ldur	q1, [x20, #152]
     e44:	stur	q1, [x22, #152]
     e48:	stur	q0, [x20, #152]
     e4c:	ldr	x8, [sp, #176]
     e50:	str	xzr, [sp, #176]
     e54:	ldr	x9, [x20, #176]
     e58:	str	x8, [x20, #168]
     e5c:	ldr	x8, [sp, #184]
     e60:	str	x9, [sp, #184]
     e64:	str	x8, [x20, #176]
     e68:	ldr	x8, [x21]
     e6c:	add	x8, x8, #0xb8
     e70:	str	x8, [x21]
     e74:	ldr	x8, [sp, #176]
     e78:	cbz	x8, e90 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xe90>
     e7c:	add	x9, sp, #0x8
     e80:	add	x0, x9, #0x98
     e84:	mov	w2, #0x3                   	// #3
     e88:	mov	x1, x0
     e8c:	blr	x8
     e90:	ldr	w8, [sp, #24]
     e94:	ldr	x20, [sp, #16]
     e98:	add	x9, sp, #0x8
     e9c:	add	x25, x9, #0x8
     ea0:	cbz	w8, ef4 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xef4>
     ea4:	lsl	x26, x8, #6
     ea8:	b	eb4 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xeb4>
     eac:	subs	x26, x26, #0x40
     eb0:	b.eq	ef0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xef0>  // b.none
     eb4:	add	x27, x20, x26
     eb8:	ldur	x8, [x27, #-16]
     ebc:	cbz	x8, ed0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xed0>
     ec0:	sub	x0, x27, #0x20
     ec4:	mov	w2, #0x3                   	// #3
     ec8:	mov	x1, x0
     ecc:	blr	x8
     ed0:	ldur	x8, [x27, #-48]
     ed4:	cbz	x8, eac <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xeac>
     ed8:	add	x9, x20, x26
     edc:	sub	x0, x9, #0x40
     ee0:	mov	w2, #0x3                   	// #3
     ee4:	mov	x1, x0
     ee8:	blr	x8
     eec:	b	eac <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xeac>
     ef0:	ldr	x20, [sp, #16]
     ef4:	add	x8, x25, #0x10
     ef8:	cmp	x20, x8
     efc:	b.eq	f08 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xf08>  // b.none
     f00:	mov	x0, x20
     f04:	bl	0 <free>
     f08:	add	x8, sp, #0x8
     f0c:	mov	w0, #0x1                   	// #1
     f10:	mov	w1, #0x35                  	// #53
     f14:	mov	w2, #0x20                  	// #32
     f18:	bl	1fc0 <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE>
     f1c:	ldr	x20, [x21]
     f20:	ldr	x8, [x24]
     f24:	cmp	x20, x8
     f28:	b.eq	1c24 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1c24>  // b.none
     f2c:	ldr	w8, [sp, #8]
     f30:	ldr	d0, [x23]
     f34:	add	x9, x20, #0x18
     f38:	mov	x0, x20
     f3c:	str	w8, [x20]
     f40:	str	x9, [x0, #8]!
     f44:	str	d0, [x20, #16]
     f48:	ldr	w8, [sp, #24]
     f4c:	cbz	w8, f5c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xf5c>
     f50:	add	x8, sp, #0x8
     f54:	add	x1, x8, #0x8
     f58:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
     f5c:	str	xzr, [x20, #168]
     f60:	ldur	q0, [x22, #152]
     f64:	stur	q0, [x22, #184]
     f68:	ldur	q1, [x20, #152]
     f6c:	stur	q1, [x22, #152]
     f70:	stur	q0, [x20, #152]
     f74:	ldr	x8, [sp, #176]
     f78:	str	xzr, [sp, #176]
     f7c:	ldr	x9, [x20, #176]
     f80:	str	x8, [x20, #168]
     f84:	ldr	x8, [sp, #184]
     f88:	str	x9, [sp, #184]
     f8c:	str	x8, [x20, #176]
     f90:	ldr	x8, [x21]
     f94:	add	x8, x8, #0xb8
     f98:	str	x8, [x21]
     f9c:	ldr	x8, [sp, #176]
     fa0:	cbz	x8, fb8 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xfb8>
     fa4:	add	x9, sp, #0x8
     fa8:	add	x0, x9, #0x98
     fac:	mov	w2, #0x3                   	// #3
     fb0:	mov	x1, x0
     fb4:	blr	x8
     fb8:	ldr	w8, [sp, #24]
     fbc:	ldr	x20, [sp, #16]
     fc0:	add	x9, sp, #0x8
     fc4:	add	x25, x9, #0x8
     fc8:	cbz	w8, 101c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x101c>
     fcc:	lsl	x26, x8, #6
     fd0:	b	fdc <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xfdc>
     fd4:	subs	x26, x26, #0x40
     fd8:	b.eq	1018 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1018>  // b.none
     fdc:	add	x27, x20, x26
     fe0:	ldur	x8, [x27, #-16]
     fe4:	cbz	x8, ff8 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xff8>
     fe8:	sub	x0, x27, #0x20
     fec:	mov	w2, #0x3                   	// #3
     ff0:	mov	x1, x0
     ff4:	blr	x8
     ff8:	ldur	x8, [x27, #-48]
     ffc:	cbz	x8, fd4 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xfd4>
    1000:	add	x9, x20, x26
    1004:	sub	x0, x9, #0x40
    1008:	mov	w2, #0x3                   	// #3
    100c:	mov	x1, x0
    1010:	blr	x8
    1014:	b	fd4 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xfd4>
    1018:	ldr	x20, [sp, #16]
    101c:	add	x8, x25, #0x10
    1020:	cmp	x20, x8
    1024:	b.eq	1030 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1030>  // b.none
    1028:	mov	x0, x20
    102c:	bl	0 <free>
    1030:	add	x8, sp, #0x8
    1034:	mov	w0, #0x1                   	// #1
    1038:	mov	w1, #0x35                  	// #53
    103c:	mov	w2, #0x21                  	// #33
    1040:	bl	1fc0 <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE>
    1044:	ldr	x20, [x21]
    1048:	ldr	x8, [x24]
    104c:	cmp	x20, x8
    1050:	b.eq	1c40 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1c40>  // b.none
    1054:	ldr	w8, [sp, #8]
    1058:	ldr	d0, [x23]
    105c:	add	x9, x20, #0x18
    1060:	mov	x0, x20
    1064:	str	w8, [x20]
    1068:	str	x9, [x0, #8]!
    106c:	str	d0, [x20, #16]
    1070:	ldr	w8, [sp, #24]
    1074:	cbz	w8, 1084 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1084>
    1078:	add	x8, sp, #0x8
    107c:	add	x1, x8, #0x8
    1080:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1084:	str	xzr, [x20, #168]
    1088:	ldur	q0, [x22, #152]
    108c:	stur	q0, [x22, #184]
    1090:	ldur	q1, [x20, #152]
    1094:	stur	q1, [x22, #152]
    1098:	stur	q0, [x20, #152]
    109c:	ldr	x8, [sp, #176]
    10a0:	str	xzr, [sp, #176]
    10a4:	ldr	x9, [x20, #176]
    10a8:	str	x8, [x20, #168]
    10ac:	ldr	x8, [sp, #184]
    10b0:	str	x9, [sp, #184]
    10b4:	str	x8, [x20, #176]
    10b8:	ldr	x8, [x21]
    10bc:	add	x8, x8, #0xb8
    10c0:	str	x8, [x21]
    10c4:	ldr	x8, [sp, #176]
    10c8:	cbz	x8, 10e0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x10e0>
    10cc:	add	x9, sp, #0x8
    10d0:	add	x0, x9, #0x98
    10d4:	mov	w2, #0x3                   	// #3
    10d8:	mov	x1, x0
    10dc:	blr	x8
    10e0:	ldr	w8, [sp, #24]
    10e4:	ldr	x20, [sp, #16]
    10e8:	add	x9, sp, #0x8
    10ec:	add	x25, x9, #0x8
    10f0:	cbz	w8, 1144 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1144>
    10f4:	lsl	x26, x8, #6
    10f8:	b	1104 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1104>
    10fc:	subs	x26, x26, #0x40
    1100:	b.eq	1140 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1140>  // b.none
    1104:	add	x27, x20, x26
    1108:	ldur	x8, [x27, #-16]
    110c:	cbz	x8, 1120 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1120>
    1110:	sub	x0, x27, #0x20
    1114:	mov	w2, #0x3                   	// #3
    1118:	mov	x1, x0
    111c:	blr	x8
    1120:	ldur	x8, [x27, #-48]
    1124:	cbz	x8, 10fc <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x10fc>
    1128:	add	x9, x20, x26
    112c:	sub	x0, x9, #0x40
    1130:	mov	w2, #0x3                   	// #3
    1134:	mov	x1, x0
    1138:	blr	x8
    113c:	b	10fc <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x10fc>
    1140:	ldr	x20, [sp, #16]
    1144:	add	x8, x25, #0x10
    1148:	cmp	x20, x8
    114c:	b.eq	1158 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1158>  // b.none
    1150:	mov	x0, x20
    1154:	bl	0 <free>
    1158:	add	x8, sp, #0x8
    115c:	mov	w0, #0x1                   	// #1
    1160:	mov	w1, #0x35                  	// #53
    1164:	mov	w2, #0x22                  	// #34
    1168:	bl	1fc0 <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE>
    116c:	ldr	x20, [x21]
    1170:	ldr	x8, [x24]
    1174:	cmp	x20, x8
    1178:	b.eq	1c5c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1c5c>  // b.none
    117c:	ldr	w8, [sp, #8]
    1180:	ldr	d0, [x23]
    1184:	add	x9, x20, #0x18
    1188:	mov	x0, x20
    118c:	str	w8, [x20]
    1190:	str	x9, [x0, #8]!
    1194:	str	d0, [x20, #16]
    1198:	ldr	w8, [sp, #24]
    119c:	cbz	w8, 11ac <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x11ac>
    11a0:	add	x8, sp, #0x8
    11a4:	add	x1, x8, #0x8
    11a8:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    11ac:	str	xzr, [x20, #168]
    11b0:	ldur	q0, [x22, #152]
    11b4:	stur	q0, [x22, #184]
    11b8:	ldur	q1, [x20, #152]
    11bc:	stur	q1, [x22, #152]
    11c0:	stur	q0, [x20, #152]
    11c4:	ldr	x8, [sp, #176]
    11c8:	str	xzr, [sp, #176]
    11cc:	ldr	x9, [x20, #176]
    11d0:	str	x8, [x20, #168]
    11d4:	ldr	x8, [sp, #184]
    11d8:	str	x9, [sp, #184]
    11dc:	str	x8, [x20, #176]
    11e0:	ldr	x8, [x21]
    11e4:	add	x8, x8, #0xb8
    11e8:	str	x8, [x21]
    11ec:	ldr	x8, [sp, #176]
    11f0:	cbz	x8, 1208 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1208>
    11f4:	add	x9, sp, #0x8
    11f8:	add	x0, x9, #0x98
    11fc:	mov	w2, #0x3                   	// #3
    1200:	mov	x1, x0
    1204:	blr	x8
    1208:	ldr	w8, [sp, #24]
    120c:	ldr	x20, [sp, #16]
    1210:	add	x9, sp, #0x8
    1214:	add	x25, x9, #0x8
    1218:	cbz	w8, 126c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x126c>
    121c:	lsl	x26, x8, #6
    1220:	b	122c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x122c>
    1224:	subs	x26, x26, #0x40
    1228:	b.eq	1268 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1268>  // b.none
    122c:	add	x27, x20, x26
    1230:	ldur	x8, [x27, #-16]
    1234:	cbz	x8, 1248 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1248>
    1238:	sub	x0, x27, #0x20
    123c:	mov	w2, #0x3                   	// #3
    1240:	mov	x1, x0
    1244:	blr	x8
    1248:	ldur	x8, [x27, #-48]
    124c:	cbz	x8, 1224 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1224>
    1250:	add	x9, x20, x26
    1254:	sub	x0, x9, #0x40
    1258:	mov	w2, #0x3                   	// #3
    125c:	mov	x1, x0
    1260:	blr	x8
    1264:	b	1224 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1224>
    1268:	ldr	x20, [sp, #16]
    126c:	add	x8, x25, #0x10
    1270:	cmp	x20, x8
    1274:	b.eq	1280 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1280>  // b.none
    1278:	mov	x0, x20
    127c:	bl	0 <free>
    1280:	add	x8, sp, #0x8
    1284:	mov	w0, #0x1                   	// #1
    1288:	mov	w1, #0x35                  	// #53
    128c:	mov	w2, #0x23                  	// #35
    1290:	bl	1fc0 <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE>
    1294:	ldr	x20, [x21]
    1298:	ldr	x8, [x24]
    129c:	cmp	x20, x8
    12a0:	b.eq	1c78 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1c78>  // b.none
    12a4:	ldr	w8, [sp, #8]
    12a8:	ldr	d0, [x23]
    12ac:	add	x9, x20, #0x18
    12b0:	mov	x0, x20
    12b4:	str	w8, [x20]
    12b8:	str	x9, [x0, #8]!
    12bc:	str	d0, [x20, #16]
    12c0:	ldr	w8, [sp, #24]
    12c4:	cbz	w8, 12d4 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x12d4>
    12c8:	add	x8, sp, #0x8
    12cc:	add	x1, x8, #0x8
    12d0:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    12d4:	str	xzr, [x20, #168]
    12d8:	ldur	q0, [x22, #152]
    12dc:	stur	q0, [x22, #184]
    12e0:	ldur	q1, [x20, #152]
    12e4:	stur	q1, [x22, #152]
    12e8:	stur	q0, [x20, #152]
    12ec:	ldr	x8, [sp, #176]
    12f0:	str	xzr, [sp, #176]
    12f4:	ldr	x9, [x20, #176]
    12f8:	str	x8, [x20, #168]
    12fc:	ldr	x8, [sp, #184]
    1300:	str	x9, [sp, #184]
    1304:	str	x8, [x20, #176]
    1308:	ldr	x8, [x21]
    130c:	add	x8, x8, #0xb8
    1310:	str	x8, [x21]
    1314:	ldr	x8, [sp, #176]
    1318:	cbz	x8, 1330 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1330>
    131c:	add	x9, sp, #0x8
    1320:	add	x0, x9, #0x98
    1324:	mov	w2, #0x3                   	// #3
    1328:	mov	x1, x0
    132c:	blr	x8
    1330:	ldr	w8, [sp, #24]
    1334:	ldr	x20, [sp, #16]
    1338:	add	x9, sp, #0x8
    133c:	add	x25, x9, #0x8
    1340:	cbz	w8, 1394 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1394>
    1344:	lsl	x26, x8, #6
    1348:	b	1354 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1354>
    134c:	subs	x26, x26, #0x40
    1350:	b.eq	1390 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1390>  // b.none
    1354:	add	x27, x20, x26
    1358:	ldur	x8, [x27, #-16]
    135c:	cbz	x8, 1370 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1370>
    1360:	sub	x0, x27, #0x20
    1364:	mov	w2, #0x3                   	// #3
    1368:	mov	x1, x0
    136c:	blr	x8
    1370:	ldur	x8, [x27, #-48]
    1374:	cbz	x8, 134c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x134c>
    1378:	add	x9, x20, x26
    137c:	sub	x0, x9, #0x40
    1380:	mov	w2, #0x3                   	// #3
    1384:	mov	x1, x0
    1388:	blr	x8
    138c:	b	134c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x134c>
    1390:	ldr	x20, [sp, #16]
    1394:	add	x8, x25, #0x10
    1398:	cmp	x20, x8
    139c:	b.eq	13a8 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x13a8>  // b.none
    13a0:	mov	x0, x20
    13a4:	bl	0 <free>
    13a8:	add	x8, sp, #0x8
    13ac:	mov	w0, #0x1                   	// #1
    13b0:	mov	w1, #0x35                  	// #53
    13b4:	mov	w2, #0x24                  	// #36
    13b8:	bl	1fc0 <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE>
    13bc:	ldr	x20, [x21]
    13c0:	ldr	x8, [x24]
    13c4:	cmp	x20, x8
    13c8:	b.eq	1c94 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1c94>  // b.none
    13cc:	ldr	w8, [sp, #8]
    13d0:	ldr	d0, [x23]
    13d4:	add	x9, x20, #0x18
    13d8:	mov	x0, x20
    13dc:	str	w8, [x20]
    13e0:	str	x9, [x0, #8]!
    13e4:	str	d0, [x20, #16]
    13e8:	ldr	w8, [sp, #24]
    13ec:	cbz	w8, 13fc <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x13fc>
    13f0:	add	x8, sp, #0x8
    13f4:	add	x1, x8, #0x8
    13f8:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    13fc:	str	xzr, [x20, #168]
    1400:	ldur	q0, [x22, #152]
    1404:	stur	q0, [x22, #184]
    1408:	ldur	q1, [x20, #152]
    140c:	stur	q1, [x22, #152]
    1410:	stur	q0, [x20, #152]
    1414:	ldr	x8, [sp, #176]
    1418:	str	xzr, [sp, #176]
    141c:	ldr	x9, [x20, #176]
    1420:	str	x8, [x20, #168]
    1424:	ldr	x8, [sp, #184]
    1428:	str	x9, [sp, #184]
    142c:	str	x8, [x20, #176]
    1430:	ldr	x8, [x21]
    1434:	add	x8, x8, #0xb8
    1438:	str	x8, [x21]
    143c:	ldr	x8, [sp, #176]
    1440:	cbz	x8, 1458 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1458>
    1444:	add	x9, sp, #0x8
    1448:	add	x0, x9, #0x98
    144c:	mov	w2, #0x3                   	// #3
    1450:	mov	x1, x0
    1454:	blr	x8
    1458:	ldr	w8, [sp, #24]
    145c:	ldr	x20, [sp, #16]
    1460:	add	x9, sp, #0x8
    1464:	add	x25, x9, #0x8
    1468:	cbz	w8, 14bc <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x14bc>
    146c:	lsl	x26, x8, #6
    1470:	b	147c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x147c>
    1474:	subs	x26, x26, #0x40
    1478:	b.eq	14b8 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x14b8>  // b.none
    147c:	add	x27, x20, x26
    1480:	ldur	x8, [x27, #-16]
    1484:	cbz	x8, 1498 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1498>
    1488:	sub	x0, x27, #0x20
    148c:	mov	w2, #0x3                   	// #3
    1490:	mov	x1, x0
    1494:	blr	x8
    1498:	ldur	x8, [x27, #-48]
    149c:	cbz	x8, 1474 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1474>
    14a0:	add	x9, x20, x26
    14a4:	sub	x0, x9, #0x40
    14a8:	mov	w2, #0x3                   	// #3
    14ac:	mov	x1, x0
    14b0:	blr	x8
    14b4:	b	1474 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1474>
    14b8:	ldr	x20, [sp, #16]
    14bc:	add	x8, x25, #0x10
    14c0:	cmp	x20, x8
    14c4:	b.eq	14d0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x14d0>  // b.none
    14c8:	mov	x0, x20
    14cc:	bl	0 <free>
    14d0:	add	x8, sp, #0x8
    14d4:	mov	w0, #0x1                   	// #1
    14d8:	mov	w1, #0x35                  	// #53
    14dc:	mov	w2, #0x25                  	// #37
    14e0:	bl	1fc0 <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE>
    14e4:	ldr	x20, [x21]
    14e8:	ldr	x8, [x24]
    14ec:	cmp	x20, x8
    14f0:	b.eq	1cb0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1cb0>  // b.none
    14f4:	ldr	w8, [sp, #8]
    14f8:	ldr	d0, [x23]
    14fc:	add	x9, x20, #0x18
    1500:	mov	x0, x20
    1504:	str	w8, [x20]
    1508:	str	x9, [x0, #8]!
    150c:	str	d0, [x20, #16]
    1510:	ldr	w8, [sp, #24]
    1514:	cbz	w8, 1524 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1524>
    1518:	add	x8, sp, #0x8
    151c:	add	x1, x8, #0x8
    1520:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1524:	str	xzr, [x20, #168]
    1528:	ldur	q0, [x22, #152]
    152c:	stur	q0, [x22, #184]
    1530:	ldur	q1, [x20, #152]
    1534:	stur	q1, [x22, #152]
    1538:	stur	q0, [x20, #152]
    153c:	ldr	x8, [sp, #176]
    1540:	str	xzr, [sp, #176]
    1544:	ldr	x9, [x20, #176]
    1548:	str	x8, [x20, #168]
    154c:	ldr	x8, [sp, #184]
    1550:	str	x9, [sp, #184]
    1554:	str	x8, [x20, #176]
    1558:	ldr	x8, [x21]
    155c:	add	x8, x8, #0xb8
    1560:	str	x8, [x21]
    1564:	ldr	x8, [sp, #176]
    1568:	cbz	x8, 1580 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1580>
    156c:	add	x9, sp, #0x8
    1570:	add	x0, x9, #0x98
    1574:	mov	w2, #0x3                   	// #3
    1578:	mov	x1, x0
    157c:	blr	x8
    1580:	ldr	w8, [sp, #24]
    1584:	ldr	x20, [sp, #16]
    1588:	add	x9, sp, #0x8
    158c:	add	x25, x9, #0x8
    1590:	cbz	w8, 15e4 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x15e4>
    1594:	lsl	x26, x8, #6
    1598:	b	15a4 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x15a4>
    159c:	subs	x26, x26, #0x40
    15a0:	b.eq	15e0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x15e0>  // b.none
    15a4:	add	x27, x20, x26
    15a8:	ldur	x8, [x27, #-16]
    15ac:	cbz	x8, 15c0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x15c0>
    15b0:	sub	x0, x27, #0x20
    15b4:	mov	w2, #0x3                   	// #3
    15b8:	mov	x1, x0
    15bc:	blr	x8
    15c0:	ldur	x8, [x27, #-48]
    15c4:	cbz	x8, 159c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x159c>
    15c8:	add	x9, x20, x26
    15cc:	sub	x0, x9, #0x40
    15d0:	mov	w2, #0x3                   	// #3
    15d4:	mov	x1, x0
    15d8:	blr	x8
    15dc:	b	159c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x159c>
    15e0:	ldr	x20, [sp, #16]
    15e4:	add	x8, x25, #0x10
    15e8:	cmp	x20, x8
    15ec:	b.eq	15f8 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x15f8>  // b.none
    15f0:	mov	x0, x20
    15f4:	bl	0 <free>
    15f8:	add	x8, sp, #0x8
    15fc:	mov	w0, #0x1                   	// #1
    1600:	mov	w1, #0x35                  	// #53
    1604:	mov	w2, #0x26                  	// #38
    1608:	bl	1fc0 <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE>
    160c:	ldr	x20, [x21]
    1610:	ldr	x8, [x24]
    1614:	cmp	x20, x8
    1618:	b.eq	1ccc <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1ccc>  // b.none
    161c:	ldr	w8, [sp, #8]
    1620:	ldr	d0, [x23]
    1624:	add	x9, x20, #0x18
    1628:	mov	x0, x20
    162c:	str	w8, [x20]
    1630:	str	x9, [x0, #8]!
    1634:	str	d0, [x20, #16]
    1638:	ldr	w8, [sp, #24]
    163c:	cbz	w8, 164c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x164c>
    1640:	add	x8, sp, #0x8
    1644:	add	x1, x8, #0x8
    1648:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    164c:	str	xzr, [x20, #168]
    1650:	ldur	q0, [x22, #152]
    1654:	stur	q0, [x22, #184]
    1658:	ldur	q1, [x20, #152]
    165c:	stur	q1, [x22, #152]
    1660:	stur	q0, [x20, #152]
    1664:	ldr	x8, [sp, #176]
    1668:	str	xzr, [sp, #176]
    166c:	ldr	x9, [x20, #176]
    1670:	str	x8, [x20, #168]
    1674:	ldr	x8, [sp, #184]
    1678:	str	x9, [sp, #184]
    167c:	str	x8, [x20, #176]
    1680:	ldr	x8, [x21]
    1684:	add	x8, x8, #0xb8
    1688:	str	x8, [x21]
    168c:	ldr	x8, [sp, #176]
    1690:	cbz	x8, 16a8 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x16a8>
    1694:	add	x9, sp, #0x8
    1698:	add	x0, x9, #0x98
    169c:	mov	w2, #0x3                   	// #3
    16a0:	mov	x1, x0
    16a4:	blr	x8
    16a8:	ldr	w8, [sp, #24]
    16ac:	ldr	x20, [sp, #16]
    16b0:	add	x9, sp, #0x8
    16b4:	add	x25, x9, #0x8
    16b8:	cbz	w8, 170c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x170c>
    16bc:	lsl	x26, x8, #6
    16c0:	b	16cc <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x16cc>
    16c4:	subs	x26, x26, #0x40
    16c8:	b.eq	1708 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1708>  // b.none
    16cc:	add	x27, x20, x26
    16d0:	ldur	x8, [x27, #-16]
    16d4:	cbz	x8, 16e8 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x16e8>
    16d8:	sub	x0, x27, #0x20
    16dc:	mov	w2, #0x3                   	// #3
    16e0:	mov	x1, x0
    16e4:	blr	x8
    16e8:	ldur	x8, [x27, #-48]
    16ec:	cbz	x8, 16c4 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x16c4>
    16f0:	add	x9, x20, x26
    16f4:	sub	x0, x9, #0x40
    16f8:	mov	w2, #0x3                   	// #3
    16fc:	mov	x1, x0
    1700:	blr	x8
    1704:	b	16c4 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x16c4>
    1708:	ldr	x20, [sp, #16]
    170c:	add	x8, x25, #0x10
    1710:	cmp	x20, x8
    1714:	b.eq	1720 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1720>  // b.none
    1718:	mov	x0, x20
    171c:	bl	0 <free>
    1720:	add	x8, sp, #0x8
    1724:	mov	w0, #0x1                   	// #1
    1728:	mov	w1, #0x35                  	// #53
    172c:	mov	w2, #0x27                  	// #39
    1730:	bl	1fc0 <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE>
    1734:	ldr	x20, [x21]
    1738:	ldr	x8, [x24]
    173c:	cmp	x20, x8
    1740:	b.eq	1ce8 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1ce8>  // b.none
    1744:	ldr	w8, [sp, #8]
    1748:	ldr	d0, [x23]
    174c:	add	x9, x20, #0x18
    1750:	mov	x0, x20
    1754:	str	w8, [x20]
    1758:	str	x9, [x0, #8]!
    175c:	str	d0, [x20, #16]
    1760:	ldr	w8, [sp, #24]
    1764:	cbz	w8, 1774 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1774>
    1768:	add	x8, sp, #0x8
    176c:	add	x1, x8, #0x8
    1770:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1774:	str	xzr, [x20, #168]
    1778:	ldur	q0, [x22, #152]
    177c:	stur	q0, [x22, #184]
    1780:	ldur	q1, [x20, #152]
    1784:	stur	q1, [x22, #152]
    1788:	stur	q0, [x20, #152]
    178c:	ldr	x8, [sp, #176]
    1790:	str	xzr, [sp, #176]
    1794:	ldr	x9, [x20, #176]
    1798:	str	x8, [x20, #168]
    179c:	ldr	x8, [sp, #184]
    17a0:	str	x9, [sp, #184]
    17a4:	str	x8, [x20, #176]
    17a8:	ldr	x8, [x21]
    17ac:	add	x8, x8, #0xb8
    17b0:	str	x8, [x21]
    17b4:	ldr	x8, [sp, #176]
    17b8:	cbz	x8, 17d0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x17d0>
    17bc:	add	x9, sp, #0x8
    17c0:	add	x0, x9, #0x98
    17c4:	mov	w2, #0x3                   	// #3
    17c8:	mov	x1, x0
    17cc:	blr	x8
    17d0:	ldr	w8, [sp, #24]
    17d4:	ldr	x20, [sp, #16]
    17d8:	add	x9, sp, #0x8
    17dc:	add	x25, x9, #0x8
    17e0:	cbz	w8, 1834 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1834>
    17e4:	lsl	x26, x8, #6
    17e8:	b	17f4 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x17f4>
    17ec:	subs	x26, x26, #0x40
    17f0:	b.eq	1830 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1830>  // b.none
    17f4:	add	x27, x20, x26
    17f8:	ldur	x8, [x27, #-16]
    17fc:	cbz	x8, 1810 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1810>
    1800:	sub	x0, x27, #0x20
    1804:	mov	w2, #0x3                   	// #3
    1808:	mov	x1, x0
    180c:	blr	x8
    1810:	ldur	x8, [x27, #-48]
    1814:	cbz	x8, 17ec <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x17ec>
    1818:	add	x9, x20, x26
    181c:	sub	x0, x9, #0x40
    1820:	mov	w2, #0x3                   	// #3
    1824:	mov	x1, x0
    1828:	blr	x8
    182c:	b	17ec <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x17ec>
    1830:	ldr	x20, [sp, #16]
    1834:	add	x8, x25, #0x10
    1838:	cmp	x20, x8
    183c:	b.eq	1848 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1848>  // b.none
    1840:	mov	x0, x20
    1844:	bl	0 <free>
    1848:	add	x8, sp, #0x8
    184c:	mov	w0, #0x1                   	// #1
    1850:	mov	w1, #0x35                  	// #53
    1854:	mov	w2, #0x28                  	// #40
    1858:	bl	1fc0 <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE>
    185c:	ldr	x20, [x21]
    1860:	ldr	x8, [x24]
    1864:	cmp	x20, x8
    1868:	b.eq	1d04 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1d04>  // b.none
    186c:	ldr	w8, [sp, #8]
    1870:	ldr	d0, [x23]
    1874:	add	x9, x20, #0x18
    1878:	mov	x0, x20
    187c:	str	w8, [x20]
    1880:	str	x9, [x0, #8]!
    1884:	str	d0, [x20, #16]
    1888:	ldr	w8, [sp, #24]
    188c:	cbz	w8, 189c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x189c>
    1890:	add	x8, sp, #0x8
    1894:	add	x1, x8, #0x8
    1898:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    189c:	str	xzr, [x20, #168]
    18a0:	ldur	q0, [x22, #152]
    18a4:	stur	q0, [x22, #184]
    18a8:	ldur	q1, [x20, #152]
    18ac:	stur	q1, [x22, #152]
    18b0:	stur	q0, [x20, #152]
    18b4:	ldr	x8, [sp, #176]
    18b8:	str	xzr, [sp, #176]
    18bc:	ldr	x9, [x20, #176]
    18c0:	str	x8, [x20, #168]
    18c4:	ldr	x8, [sp, #184]
    18c8:	str	x9, [sp, #184]
    18cc:	str	x8, [x20, #176]
    18d0:	ldr	x8, [x21]
    18d4:	add	x8, x8, #0xb8
    18d8:	str	x8, [x21]
    18dc:	ldr	x8, [sp, #176]
    18e0:	cbz	x8, 18f8 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x18f8>
    18e4:	add	x9, sp, #0x8
    18e8:	add	x0, x9, #0x98
    18ec:	mov	w2, #0x3                   	// #3
    18f0:	mov	x1, x0
    18f4:	blr	x8
    18f8:	ldr	w8, [sp, #24]
    18fc:	ldr	x20, [sp, #16]
    1900:	add	x9, sp, #0x8
    1904:	add	x25, x9, #0x8
    1908:	cbz	w8, 195c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x195c>
    190c:	lsl	x26, x8, #6
    1910:	b	191c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x191c>
    1914:	subs	x26, x26, #0x40
    1918:	b.eq	1958 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1958>  // b.none
    191c:	add	x27, x20, x26
    1920:	ldur	x8, [x27, #-16]
    1924:	cbz	x8, 1938 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1938>
    1928:	sub	x0, x27, #0x20
    192c:	mov	w2, #0x3                   	// #3
    1930:	mov	x1, x0
    1934:	blr	x8
    1938:	ldur	x8, [x27, #-48]
    193c:	cbz	x8, 1914 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1914>
    1940:	add	x9, x20, x26
    1944:	sub	x0, x9, #0x40
    1948:	mov	w2, #0x3                   	// #3
    194c:	mov	x1, x0
    1950:	blr	x8
    1954:	b	1914 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1914>
    1958:	ldr	x20, [sp, #16]
    195c:	add	x8, x25, #0x10
    1960:	cmp	x20, x8
    1964:	b.eq	1970 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1970>  // b.none
    1968:	mov	x0, x20
    196c:	bl	0 <free>
    1970:	add	x8, sp, #0x8
    1974:	mov	w0, #0x1                   	// #1
    1978:	mov	w1, #0x35                  	// #53
    197c:	mov	w2, #0x29                  	// #41
    1980:	bl	1fc0 <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE>
    1984:	ldr	x20, [x21]
    1988:	ldr	x8, [x24]
    198c:	cmp	x20, x8
    1990:	b.eq	1d20 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1d20>  // b.none
    1994:	ldr	w8, [sp, #8]
    1998:	ldr	d0, [x23]
    199c:	add	x9, x20, #0x18
    19a0:	mov	x0, x20
    19a4:	str	w8, [x20]
    19a8:	str	x9, [x0, #8]!
    19ac:	str	d0, [x20, #16]
    19b0:	ldr	w8, [sp, #24]
    19b4:	cbz	w8, 19c4 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x19c4>
    19b8:	add	x8, sp, #0x8
    19bc:	add	x1, x8, #0x8
    19c0:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    19c4:	str	xzr, [x20, #168]
    19c8:	ldur	q0, [x22, #152]
    19cc:	stur	q0, [x22, #184]
    19d0:	ldur	q1, [x20, #152]
    19d4:	stur	q1, [x22, #152]
    19d8:	stur	q0, [x20, #152]
    19dc:	ldr	x8, [sp, #176]
    19e0:	str	xzr, [sp, #176]
    19e4:	ldr	x9, [x20, #176]
    19e8:	str	x8, [x20, #168]
    19ec:	ldr	x8, [sp, #184]
    19f0:	str	x9, [sp, #184]
    19f4:	str	x8, [x20, #176]
    19f8:	ldr	x8, [x21]
    19fc:	add	x8, x8, #0xb8
    1a00:	str	x8, [x21]
    1a04:	ldr	x8, [sp, #176]
    1a08:	cbz	x8, 1a20 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1a20>
    1a0c:	add	x9, sp, #0x8
    1a10:	add	x0, x9, #0x98
    1a14:	mov	w2, #0x3                   	// #3
    1a18:	mov	x1, x0
    1a1c:	blr	x8
    1a20:	ldr	w8, [sp, #24]
    1a24:	ldr	x19, [sp, #16]
    1a28:	add	x9, sp, #0x8
    1a2c:	add	x20, x9, #0x8
    1a30:	cbz	w8, 1a84 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1a84>
    1a34:	lsl	x21, x8, #6
    1a38:	b	1a44 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1a44>
    1a3c:	subs	x21, x21, #0x40
    1a40:	b.eq	1a80 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1a80>  // b.none
    1a44:	add	x22, x19, x21
    1a48:	ldur	x8, [x22, #-16]
    1a4c:	cbz	x8, 1a60 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1a60>
    1a50:	sub	x0, x22, #0x20
    1a54:	mov	w2, #0x3                   	// #3
    1a58:	mov	x1, x0
    1a5c:	blr	x8
    1a60:	ldur	x8, [x22, #-48]
    1a64:	cbz	x8, 1a3c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1a3c>
    1a68:	add	x9, x19, x21
    1a6c:	sub	x0, x9, #0x40
    1a70:	mov	w2, #0x3                   	// #3
    1a74:	mov	x1, x0
    1a78:	blr	x8
    1a7c:	b	1a3c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1a3c>
    1a80:	ldr	x19, [sp, #16]
    1a84:	add	x8, x20, #0x10
    1a88:	cmp	x19, x8
    1a8c:	b.eq	1a98 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1a98>  // b.none
    1a90:	mov	x0, x19
    1a94:	bl	0 <free>
    1a98:	ldp	x20, x19, [sp, #288]
    1a9c:	ldp	x22, x21, [sp, #272]
    1aa0:	ldp	x24, x23, [sp, #256]
    1aa4:	ldp	x26, x25, [sp, #240]
    1aa8:	ldp	x28, x27, [sp, #224]
    1aac:	ldp	x29, x30, [sp, #208]
    1ab0:	add	sp, sp, #0x130
    1ab4:	ret
    1ab8:	add	x2, sp, #0x8
    1abc:	mov	x0, x19
    1ac0:	mov	x1, x20
    1ac4:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1ac8:	ldr	x8, [sp, #176]
    1acc:	cbnz	x8, cc <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xcc>
    1ad0:	b	e0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xe0>
    1ad4:	add	x2, sp, #0x8
    1ad8:	mov	x0, x19
    1adc:	mov	x1, x20
    1ae0:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1ae4:	ldr	x8, [sp, #176]
    1ae8:	cbnz	x8, 1f0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1f0>
    1aec:	b	204 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x204>
    1af0:	add	x2, sp, #0x8
    1af4:	mov	x0, x19
    1af8:	mov	x1, x20
    1afc:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1b00:	ldr	x8, [sp, #176]
    1b04:	cbnz	x8, 314 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x314>
    1b08:	b	328 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x328>
    1b0c:	add	x2, sp, #0x8
    1b10:	mov	x0, x19
    1b14:	mov	x1, x20
    1b18:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1b1c:	ldr	x8, [sp, #176]
    1b20:	cbnz	x8, 438 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x438>
    1b24:	b	44c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x44c>
    1b28:	add	x2, sp, #0x8
    1b2c:	mov	x0, x19
    1b30:	mov	x1, x20
    1b34:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1b38:	ldr	x8, [sp, #176]
    1b3c:	cbnz	x8, 55c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x55c>
    1b40:	b	570 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x570>
    1b44:	add	x2, sp, #0x8
    1b48:	mov	x0, x19
    1b4c:	mov	x1, x20
    1b50:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1b54:	ldr	x8, [sp, #176]
    1b58:	cbnz	x8, 680 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x680>
    1b5c:	b	694 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x694>
    1b60:	add	x2, sp, #0x8
    1b64:	mov	x0, x19
    1b68:	mov	x1, x20
    1b6c:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1b70:	ldr	x8, [sp, #176]
    1b74:	cbnz	x8, 7a4 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x7a4>
    1b78:	b	7b8 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x7b8>
    1b7c:	add	x2, sp, #0x8
    1b80:	mov	x0, x19
    1b84:	mov	x1, x20
    1b88:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1b8c:	ldr	x8, [sp, #176]
    1b90:	cbnz	x8, 8c8 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x8c8>
    1b94:	b	8dc <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x8dc>
    1b98:	add	x2, sp, #0x8
    1b9c:	mov	x0, x19
    1ba0:	mov	x1, x20
    1ba4:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1ba8:	ldr	x8, [sp, #176]
    1bac:	cbnz	x8, 9ec <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x9ec>
    1bb0:	b	a00 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xa00>
    1bb4:	add	x2, sp, #0x8
    1bb8:	mov	x0, x19
    1bbc:	mov	x1, x20
    1bc0:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1bc4:	ldr	x8, [sp, #176]
    1bc8:	cbnz	x8, b10 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xb10>
    1bcc:	b	b24 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xb24>
    1bd0:	add	x2, sp, #0x8
    1bd4:	mov	x0, x19
    1bd8:	mov	x1, x20
    1bdc:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1be0:	ldr	x8, [sp, #176]
    1be4:	cbnz	x8, c34 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xc34>
    1be8:	b	c48 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xc48>
    1bec:	add	x2, sp, #0x8
    1bf0:	mov	x0, x19
    1bf4:	mov	x1, x20
    1bf8:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1bfc:	ldr	x8, [sp, #176]
    1c00:	cbnz	x8, d58 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xd58>
    1c04:	b	d6c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xd6c>
    1c08:	add	x2, sp, #0x8
    1c0c:	mov	x0, x19
    1c10:	mov	x1, x20
    1c14:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1c18:	ldr	x8, [sp, #176]
    1c1c:	cbnz	x8, e7c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xe7c>
    1c20:	b	e90 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xe90>
    1c24:	add	x2, sp, #0x8
    1c28:	mov	x0, x19
    1c2c:	mov	x1, x20
    1c30:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1c34:	ldr	x8, [sp, #176]
    1c38:	cbnz	x8, fa4 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xfa4>
    1c3c:	b	fb8 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xfb8>
    1c40:	add	x2, sp, #0x8
    1c44:	mov	x0, x19
    1c48:	mov	x1, x20
    1c4c:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1c50:	ldr	x8, [sp, #176]
    1c54:	cbnz	x8, 10cc <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x10cc>
    1c58:	b	10e0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x10e0>
    1c5c:	add	x2, sp, #0x8
    1c60:	mov	x0, x19
    1c64:	mov	x1, x20
    1c68:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1c6c:	ldr	x8, [sp, #176]
    1c70:	cbnz	x8, 11f4 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x11f4>
    1c74:	b	1208 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1208>
    1c78:	add	x2, sp, #0x8
    1c7c:	mov	x0, x19
    1c80:	mov	x1, x20
    1c84:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1c88:	ldr	x8, [sp, #176]
    1c8c:	cbnz	x8, 131c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x131c>
    1c90:	b	1330 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1330>
    1c94:	add	x2, sp, #0x8
    1c98:	mov	x0, x19
    1c9c:	mov	x1, x20
    1ca0:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1ca4:	ldr	x8, [sp, #176]
    1ca8:	cbnz	x8, 1444 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1444>
    1cac:	b	1458 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1458>
    1cb0:	add	x2, sp, #0x8
    1cb4:	mov	x0, x19
    1cb8:	mov	x1, x20
    1cbc:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1cc0:	ldr	x8, [sp, #176]
    1cc4:	cbnz	x8, 156c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x156c>
    1cc8:	b	1580 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1580>
    1ccc:	add	x2, sp, #0x8
    1cd0:	mov	x0, x19
    1cd4:	mov	x1, x20
    1cd8:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1cdc:	ldr	x8, [sp, #176]
    1ce0:	cbnz	x8, 1694 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1694>
    1ce4:	b	16a8 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x16a8>
    1ce8:	add	x2, sp, #0x8
    1cec:	mov	x0, x19
    1cf0:	mov	x1, x20
    1cf4:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1cf8:	ldr	x8, [sp, #176]
    1cfc:	cbnz	x8, 17bc <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x17bc>
    1d00:	b	17d0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x17d0>
    1d04:	add	x2, sp, #0x8
    1d08:	mov	x0, x19
    1d0c:	mov	x1, x20
    1d10:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1d14:	ldr	x8, [sp, #176]
    1d18:	cbnz	x8, 18e4 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x18e4>
    1d1c:	b	18f8 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x18f8>
    1d20:	add	x2, sp, #0x8
    1d24:	mov	x0, x19
    1d28:	mov	x1, x20
    1d2c:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1d30:	ldr	x8, [sp, #176]
    1d34:	cbnz	x8, 1a0c <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1a0c>
    1d38:	b	1a20 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1a20>

0000000000001d3c <_ZN4llvm8fuzzerop15binOpDescriptorEjNS_11Instruction9BinaryOpsE>:
    1d3c:	sub	sp, sp, #0xd0
    1d40:	stp	x29, x30, [sp, #160]
    1d44:	str	x21, [sp, #176]
    1d48:	stp	x20, x19, [sp, #192]
    1d4c:	add	x29, sp, #0xa0
    1d50:	cmp	w1, #0x1f
    1d54:	b.hi	1fa8 <_ZN4llvm8fuzzerop15binOpDescriptorEjNS_11Instruction9BinaryOpsE+0x26c>  // b.pmore
    1d58:	mov	x19, x8
    1d5c:	mov	w8, #0x1                   	// #1
    1d60:	mov	w9, #0xa000                	// #40960
    1d64:	lsl	w8, w8, w1
    1d68:	movk	w9, #0x7eda, lsl #16
    1d6c:	mov	w20, w1
    1d70:	tst	w8, w9
    1d74:	b.eq	1d90 <_ZN4llvm8fuzzerop15binOpDescriptorEjNS_11Instruction9BinaryOpsE+0x54>  // b.none
    1d78:	adrp	x8, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1d7c:	adrp	x9, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1d80:	mov	x21, x19
    1d84:	add	x8, x8, #0x0
    1d88:	add	x9, x9, #0x0
    1d8c:	b	1db4 <_ZN4llvm8fuzzerop15binOpDescriptorEjNS_11Instruction9BinaryOpsE+0x78>
    1d90:	mov	w9, #0x4000                	// #16384
    1d94:	movk	w9, #0x125, lsl #16
    1d98:	tst	w8, w9
    1d9c:	b.eq	1f68 <_ZN4llvm8fuzzerop15binOpDescriptorEjNS_11Instruction9BinaryOpsE+0x22c>  // b.none
    1da0:	adrp	x8, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1da4:	adrp	x9, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1da8:	mov	x21, x19
    1dac:	add	x8, x8, #0x0
    1db0:	add	x9, x9, #0x0
    1db4:	str	w0, [x21], #8
    1db8:	mov	x0, sp
    1dbc:	sub	x1, x29, #0x20
    1dc0:	mov	w2, #0x1                   	// #1
    1dc4:	stp	x9, x8, [x29, #-16]
    1dc8:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1dcc:	ldur	x8, [x29, #-16]
    1dd0:	cbz	x8, 1de4 <_ZN4llvm8fuzzerop15binOpDescriptorEjNS_11Instruction9BinaryOpsE+0xa8>
    1dd4:	sub	x0, x29, #0x20
    1dd8:	sub	x1, x29, #0x20
    1ddc:	mov	w2, #0x3                   	// #3
    1de0:	blr	x8
    1de4:	adrp	x13, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1de8:	ldr	x8, [sp, #16]
    1dec:	ldr	d0, [x13]
    1df0:	adrp	x9, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1df4:	adrp	x10, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1df8:	adrp	x11, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1dfc:	adrp	x12, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1e00:	add	x9, x9, #0x0
    1e04:	add	x10, x10, #0x0
    1e08:	add	x11, x11, #0x0
    1e0c:	add	x12, x12, #0x0
    1e10:	add	x21, x21, #0x10
    1e14:	stp	x10, x9, [sp, #80]
    1e18:	stp	x12, x11, [sp, #112]
    1e1c:	str	x21, [x19, #8]
    1e20:	str	d0, [x19, #16]
    1e24:	str	xzr, [x19, #40]
    1e28:	cbz	x8, 1e44 <_ZN4llvm8fuzzerop15binOpDescriptorEjNS_11Instruction9BinaryOpsE+0x108>
    1e2c:	mov	x1, sp
    1e30:	mov	w2, #0x2                   	// #2
    1e34:	mov	x0, x21
    1e38:	blr	x8
    1e3c:	ldr	q0, [sp, #16]
    1e40:	str	q0, [x21, #16]
    1e44:	ldr	x8, [sp, #48]
    1e48:	str	xzr, [x21, #48]
    1e4c:	cbz	x8, 1e6c <_ZN4llvm8fuzzerop15binOpDescriptorEjNS_11Instruction9BinaryOpsE+0x130>
    1e50:	mov	x9, sp
    1e54:	add	x0, x21, #0x20
    1e58:	add	x1, x9, #0x20
    1e5c:	mov	w2, #0x2                   	// #2
    1e60:	blr	x8
    1e64:	ldr	q0, [sp, #48]
    1e68:	str	q0, [x21, #48]
    1e6c:	ldr	x8, [sp, #80]
    1e70:	str	xzr, [x21, #80]
    1e74:	cbz	x8, 1e94 <_ZN4llvm8fuzzerop15binOpDescriptorEjNS_11Instruction9BinaryOpsE+0x158>
    1e78:	mov	x9, sp
    1e7c:	add	x0, x21, #0x40
    1e80:	add	x1, x9, #0x40
    1e84:	mov	w2, #0x2                   	// #2
    1e88:	blr	x8
    1e8c:	ldr	q0, [sp, #80]
    1e90:	str	q0, [x21, #80]
    1e94:	ldr	x8, [sp, #112]
    1e98:	str	xzr, [x21, #112]
    1e9c:	cbz	x8, 1ec0 <_ZN4llvm8fuzzerop15binOpDescriptorEjNS_11Instruction9BinaryOpsE+0x184>
    1ea0:	mov	x9, sp
    1ea4:	add	x0, x21, #0x60
    1ea8:	add	x1, x9, #0x60
    1eac:	mov	w2, #0x2                   	// #2
    1eb0:	blr	x8
    1eb4:	ldr	q0, [sp, #112]
    1eb8:	fmov	x8, d0
    1ebc:	str	q0, [x21, #112]
    1ec0:	ldp	w9, w10, [x19, #16]
    1ec4:	add	x9, x9, #0x2
    1ec8:	cmp	x9, x10
    1ecc:	b.hi	1f88 <_ZN4llvm8fuzzerop15binOpDescriptorEjNS_11Instruction9BinaryOpsE+0x24c>  // b.pmore
    1ed0:	str	w9, [x19, #16]
    1ed4:	adrp	x9, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1ed8:	adrp	x10, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1edc:	add	x9, x9, #0x0
    1ee0:	add	x10, x10, #0x0
    1ee4:	str	w20, [x19, #152]
    1ee8:	stp	x10, x9, [x19, #168]
    1eec:	cbz	x8, 1f04 <_ZN4llvm8fuzzerop15binOpDescriptorEjNS_11Instruction9BinaryOpsE+0x1c8>
    1ef0:	mov	x9, sp
    1ef4:	add	x0, x9, #0x60
    1ef8:	mov	w2, #0x3                   	// #3
    1efc:	mov	x1, x0
    1f00:	blr	x8
    1f04:	ldr	x8, [sp, #80]
    1f08:	cbz	x8, 1f20 <_ZN4llvm8fuzzerop15binOpDescriptorEjNS_11Instruction9BinaryOpsE+0x1e4>
    1f0c:	mov	x9, sp
    1f10:	add	x0, x9, #0x40
    1f14:	mov	w2, #0x3                   	// #3
    1f18:	mov	x1, x0
    1f1c:	blr	x8
    1f20:	ldr	x8, [sp, #48]
    1f24:	cbz	x8, 1f3c <_ZN4llvm8fuzzerop15binOpDescriptorEjNS_11Instruction9BinaryOpsE+0x200>
    1f28:	mov	x9, sp
    1f2c:	add	x0, x9, #0x20
    1f30:	mov	w2, #0x3                   	// #3
    1f34:	mov	x1, x0
    1f38:	blr	x8
    1f3c:	ldr	x8, [sp, #16]
    1f40:	cbz	x8, 1f54 <_ZN4llvm8fuzzerop15binOpDescriptorEjNS_11Instruction9BinaryOpsE+0x218>
    1f44:	mov	x0, sp
    1f48:	mov	x1, sp
    1f4c:	mov	w2, #0x3                   	// #3
    1f50:	blr	x8
    1f54:	ldp	x20, x19, [sp, #192]
    1f58:	ldr	x21, [sp, #176]
    1f5c:	ldp	x29, x30, [sp, #160]
    1f60:	add	sp, sp, #0xd0
    1f64:	ret
    1f68:	cmp	w20, #0x1f
    1f6c:	b.ne	1fa8 <_ZN4llvm8fuzzerop15binOpDescriptorEjNS_11Instruction9BinaryOpsE+0x26c>  // b.any
    1f70:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1f74:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1f78:	add	x0, x0, #0x0
    1f7c:	add	x1, x1, #0x0
    1f80:	mov	w2, #0x76                  	// #118
    1f84:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    1f88:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1f8c:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1f90:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1f94:	add	x0, x0, #0x0
    1f98:	add	x1, x1, #0x0
    1f9c:	add	x3, x3, #0x0
    1fa0:	mov	w2, #0x43                  	// #67
    1fa4:	bl	0 <__assert_fail>
    1fa8:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1fac:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1fb0:	add	x0, x0, #0x0
    1fb4:	add	x1, x1, #0x0
    1fb8:	mov	w2, #0x78                  	// #120
    1fbc:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000001fc0 <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE>:
    1fc0:	sub	sp, sp, #0xd0
    1fc4:	stp	x29, x30, [sp, #160]
    1fc8:	str	x21, [sp, #176]
    1fcc:	stp	x20, x19, [sp, #192]
    1fd0:	add	x29, sp, #0xa0
    1fd4:	mov	w19, w2
    1fd8:	cmp	w1, #0x36
    1fdc:	mov	x20, x8
    1fe0:	b.eq	2128 <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE+0x168>  // b.none
    1fe4:	cmp	w1, #0x35
    1fe8:	b.ne	22f8 <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE+0x338>  // b.any
    1fec:	mov	x21, x20
    1ff0:	adrp	x8, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1ff4:	adrp	x9, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    1ff8:	add	x8, x8, #0x0
    1ffc:	add	x9, x9, #0x0
    2000:	str	w0, [x21], #8
    2004:	mov	x0, sp
    2008:	sub	x1, x29, #0x20
    200c:	mov	w2, #0x1                   	// #1
    2010:	stp	x9, x8, [x29, #-16]
    2014:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    2018:	ldur	x8, [x29, #-16]
    201c:	cbz	x8, 2030 <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE+0x70>
    2020:	sub	x0, x29, #0x20
    2024:	sub	x1, x29, #0x20
    2028:	mov	w2, #0x3                   	// #3
    202c:	blr	x8
    2030:	adrp	x13, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    2034:	ldr	x8, [sp, #16]
    2038:	ldr	d0, [x13]
    203c:	adrp	x9, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    2040:	adrp	x10, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    2044:	adrp	x11, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    2048:	adrp	x12, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    204c:	add	x9, x9, #0x0
    2050:	add	x10, x10, #0x0
    2054:	add	x11, x11, #0x0
    2058:	add	x12, x12, #0x0
    205c:	add	x21, x21, #0x10
    2060:	stp	x10, x9, [sp, #80]
    2064:	stp	x12, x11, [sp, #112]
    2068:	str	x21, [x20, #8]
    206c:	str	d0, [x20, #16]
    2070:	str	xzr, [x20, #40]
    2074:	cbz	x8, 2090 <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE+0xd0>
    2078:	mov	x1, sp
    207c:	mov	w2, #0x2                   	// #2
    2080:	mov	x0, x21
    2084:	blr	x8
    2088:	ldr	q0, [sp, #16]
    208c:	str	q0, [x21, #16]
    2090:	ldr	x8, [sp, #48]
    2094:	str	xzr, [x21, #48]
    2098:	cbz	x8, 20b8 <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE+0xf8>
    209c:	mov	x9, sp
    20a0:	add	x0, x21, #0x20
    20a4:	add	x1, x9, #0x20
    20a8:	mov	w2, #0x2                   	// #2
    20ac:	blr	x8
    20b0:	ldr	q0, [sp, #48]
    20b4:	str	q0, [x21, #48]
    20b8:	ldr	x8, [sp, #80]
    20bc:	str	xzr, [x21, #80]
    20c0:	cbz	x8, 20e0 <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE+0x120>
    20c4:	mov	x9, sp
    20c8:	add	x0, x21, #0x40
    20cc:	add	x1, x9, #0x40
    20d0:	mov	w2, #0x2                   	// #2
    20d4:	blr	x8
    20d8:	ldr	q0, [sp, #80]
    20dc:	str	q0, [x21, #80]
    20e0:	ldr	x8, [sp, #112]
    20e4:	str	xzr, [x21, #112]
    20e8:	cbz	x8, 210c <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE+0x14c>
    20ec:	mov	x9, sp
    20f0:	add	x0, x21, #0x60
    20f4:	add	x1, x9, #0x60
    20f8:	mov	w2, #0x2                   	// #2
    20fc:	blr	x8
    2100:	ldr	q0, [sp, #112]
    2104:	fmov	x8, d0
    2108:	str	q0, [x21, #112]
    210c:	ldp	w9, w10, [x20, #16]
    2110:	add	x9, x9, #0x2
    2114:	cmp	x9, x10
    2118:	b.hi	2310 <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE+0x350>  // b.pmore
    211c:	str	w9, [x20, #16]
    2120:	mov	w9, #0x35                  	// #53
    2124:	b	2260 <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE+0x2a0>
    2128:	mov	x21, x20
    212c:	adrp	x8, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    2130:	adrp	x9, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    2134:	add	x8, x8, #0x0
    2138:	add	x9, x9, #0x0
    213c:	str	w0, [x21], #8
    2140:	mov	x0, sp
    2144:	sub	x1, x29, #0x20
    2148:	mov	w2, #0x1                   	// #1
    214c:	stp	x9, x8, [x29, #-16]
    2150:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    2154:	ldur	x8, [x29, #-16]
    2158:	cbz	x8, 216c <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE+0x1ac>
    215c:	sub	x0, x29, #0x20
    2160:	sub	x1, x29, #0x20
    2164:	mov	w2, #0x3                   	// #3
    2168:	blr	x8
    216c:	adrp	x13, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    2170:	ldr	x8, [sp, #16]
    2174:	ldr	d0, [x13]
    2178:	adrp	x9, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    217c:	adrp	x10, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    2180:	adrp	x11, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    2184:	adrp	x12, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    2188:	add	x9, x9, #0x0
    218c:	add	x10, x10, #0x0
    2190:	add	x11, x11, #0x0
    2194:	add	x12, x12, #0x0
    2198:	add	x21, x21, #0x10
    219c:	stp	x10, x9, [sp, #80]
    21a0:	stp	x12, x11, [sp, #112]
    21a4:	str	x21, [x20, #8]
    21a8:	str	d0, [x20, #16]
    21ac:	str	xzr, [x20, #40]
    21b0:	cbz	x8, 21cc <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE+0x20c>
    21b4:	mov	x1, sp
    21b8:	mov	w2, #0x2                   	// #2
    21bc:	mov	x0, x21
    21c0:	blr	x8
    21c4:	ldr	q0, [sp, #16]
    21c8:	str	q0, [x21, #16]
    21cc:	ldr	x8, [sp, #48]
    21d0:	str	xzr, [x21, #48]
    21d4:	cbz	x8, 21f4 <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE+0x234>
    21d8:	mov	x9, sp
    21dc:	add	x0, x21, #0x20
    21e0:	add	x1, x9, #0x20
    21e4:	mov	w2, #0x2                   	// #2
    21e8:	blr	x8
    21ec:	ldr	q0, [sp, #48]
    21f0:	str	q0, [x21, #48]
    21f4:	ldr	x8, [sp, #80]
    21f8:	str	xzr, [x21, #80]
    21fc:	cbz	x8, 221c <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE+0x25c>
    2200:	mov	x9, sp
    2204:	add	x0, x21, #0x40
    2208:	add	x1, x9, #0x40
    220c:	mov	w2, #0x2                   	// #2
    2210:	blr	x8
    2214:	ldr	q0, [sp, #80]
    2218:	str	q0, [x21, #80]
    221c:	ldr	x8, [sp, #112]
    2220:	str	xzr, [x21, #112]
    2224:	cbz	x8, 2248 <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE+0x288>
    2228:	mov	x9, sp
    222c:	add	x0, x21, #0x60
    2230:	add	x1, x9, #0x60
    2234:	mov	w2, #0x2                   	// #2
    2238:	blr	x8
    223c:	ldr	q0, [sp, #112]
    2240:	fmov	x8, d0
    2244:	str	q0, [x21, #112]
    2248:	ldp	w9, w10, [x20, #16]
    224c:	add	x9, x9, #0x2
    2250:	cmp	x9, x10
    2254:	b.hi	2310 <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE+0x350>  // b.pmore
    2258:	str	w9, [x20, #16]
    225c:	mov	w9, #0x36                  	// #54
    2260:	adrp	x10, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    2264:	adrp	x11, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    2268:	add	x10, x10, #0x0
    226c:	add	x11, x11, #0x0
    2270:	bfi	x9, x19, #32, #32
    2274:	str	x9, [x20, #152]
    2278:	stp	x11, x10, [x20, #168]
    227c:	cbz	x8, 2294 <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE+0x2d4>
    2280:	mov	x9, sp
    2284:	add	x0, x9, #0x60
    2288:	mov	w2, #0x3                   	// #3
    228c:	mov	x1, x0
    2290:	blr	x8
    2294:	ldr	x8, [sp, #80]
    2298:	cbz	x8, 22b0 <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE+0x2f0>
    229c:	mov	x9, sp
    22a0:	add	x0, x9, #0x40
    22a4:	mov	w2, #0x3                   	// #3
    22a8:	mov	x1, x0
    22ac:	blr	x8
    22b0:	ldr	x8, [sp, #48]
    22b4:	cbz	x8, 22cc <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE+0x30c>
    22b8:	mov	x9, sp
    22bc:	add	x0, x9, #0x20
    22c0:	mov	w2, #0x3                   	// #3
    22c4:	mov	x1, x0
    22c8:	blr	x8
    22cc:	ldr	x8, [sp, #16]
    22d0:	cbz	x8, 22e4 <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE+0x324>
    22d4:	mov	x0, sp
    22d8:	mov	x1, sp
    22dc:	mov	w2, #0x3                   	// #3
    22e0:	blr	x8
    22e4:	ldp	x20, x19, [sp, #192]
    22e8:	ldr	x21, [sp, #176]
    22ec:	ldp	x29, x30, [sp, #160]
    22f0:	add	sp, sp, #0xd0
    22f4:	ret
    22f8:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    22fc:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    2300:	add	x0, x0, #0x0
    2304:	add	x1, x1, #0x0
    2308:	mov	w2, #0x88                  	// #136
    230c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    2310:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    2314:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    2318:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    231c:	add	x0, x0, #0x0
    2320:	add	x1, x1, #0x0
    2324:	add	x3, x3, #0x0
    2328:	mov	w2, #0x43                  	// #67
    232c:	bl	0 <__assert_fail>

0000000000002330 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>:
    2330:	sub	sp, sp, #0x130
    2334:	stp	x29, x30, [sp, #208]
    2338:	stp	x28, x27, [sp, #224]
    233c:	stp	x26, x25, [sp, #240]
    2340:	stp	x24, x23, [sp, #256]
    2344:	stp	x22, x21, [sp, #272]
    2348:	stp	x20, x19, [sp, #288]
    234c:	add	x29, sp, #0xd0
    2350:	mov	x19, x0
    2354:	add	x8, sp, #0x8
    2358:	mov	w0, #0x1                   	// #1
    235c:	mov	w1, #0xe                   	// #14
    2360:	add	x22, sp, #0x8
    2364:	bl	1d3c <_ZN4llvm8fuzzerop15binOpDescriptorEjNS_11Instruction9BinaryOpsE>
    2368:	mov	x21, x19
    236c:	ldr	x20, [x21, #8]!
    2370:	adrp	x23, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    2374:	mov	x24, x21
    2378:	ldr	x8, [x24, #8]!
    237c:	cmp	x20, x8
    2380:	b.eq	3bb8 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1888>  // b.none
    2384:	ldr	w8, [sp, #8]
    2388:	ldr	d0, [x23]
    238c:	add	x9, x20, #0x18
    2390:	mov	x0, x20
    2394:	str	w8, [x20]
    2398:	str	x9, [x0, #8]!
    239c:	str	d0, [x20, #16]
    23a0:	ldr	w8, [sp, #24]
    23a4:	cbz	w8, 23b4 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x84>
    23a8:	add	x8, sp, #0x8
    23ac:	add	x1, x8, #0x8
    23b0:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    23b4:	str	xzr, [x20, #168]
    23b8:	ldur	q0, [x22, #152]
    23bc:	stur	q0, [x22, #184]
    23c0:	ldur	q1, [x20, #152]
    23c4:	stur	q1, [x22, #152]
    23c8:	stur	q0, [x20, #152]
    23cc:	ldr	x8, [sp, #176]
    23d0:	str	xzr, [sp, #176]
    23d4:	ldr	x9, [x20, #176]
    23d8:	str	x8, [x20, #168]
    23dc:	ldr	x8, [sp, #184]
    23e0:	str	x9, [sp, #184]
    23e4:	str	x8, [x20, #176]
    23e8:	ldr	x8, [x21]
    23ec:	add	x8, x8, #0xb8
    23f0:	str	x8, [x21]
    23f4:	ldr	x8, [sp, #176]
    23f8:	cbz	x8, 2410 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xe0>
    23fc:	add	x9, sp, #0x8
    2400:	add	x0, x9, #0x98
    2404:	mov	w2, #0x3                   	// #3
    2408:	mov	x1, x0
    240c:	blr	x8
    2410:	ldr	w8, [sp, #24]
    2414:	ldr	x20, [sp, #16]
    2418:	add	x9, sp, #0x8
    241c:	add	x25, x9, #0x8
    2420:	cbz	w8, 2474 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x144>
    2424:	lsl	x26, x8, #6
    2428:	b	2434 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x104>
    242c:	subs	x26, x26, #0x40
    2430:	b.eq	2470 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x140>  // b.none
    2434:	add	x27, x20, x26
    2438:	ldur	x8, [x27, #-16]
    243c:	cbz	x8, 2450 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x120>
    2440:	sub	x0, x27, #0x20
    2444:	mov	w2, #0x3                   	// #3
    2448:	mov	x1, x0
    244c:	blr	x8
    2450:	ldur	x8, [x27, #-48]
    2454:	cbz	x8, 242c <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xfc>
    2458:	add	x9, x20, x26
    245c:	sub	x0, x9, #0x40
    2460:	mov	w2, #0x3                   	// #3
    2464:	mov	x1, x0
    2468:	blr	x8
    246c:	b	242c <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xfc>
    2470:	ldr	x20, [sp, #16]
    2474:	add	x8, x25, #0x10
    2478:	cmp	x20, x8
    247c:	b.eq	2488 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x158>  // b.none
    2480:	mov	x0, x20
    2484:	bl	0 <free>
    2488:	add	x8, sp, #0x8
    248c:	mov	w0, #0x1                   	// #1
    2490:	mov	w1, #0x10                  	// #16
    2494:	bl	1d3c <_ZN4llvm8fuzzerop15binOpDescriptorEjNS_11Instruction9BinaryOpsE>
    2498:	ldr	x20, [x21]
    249c:	ldr	x8, [x24]
    24a0:	cmp	x20, x8
    24a4:	b.eq	3bd4 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x18a4>  // b.none
    24a8:	ldr	w8, [sp, #8]
    24ac:	ldr	d0, [x23]
    24b0:	add	x9, x20, #0x18
    24b4:	mov	x0, x20
    24b8:	str	w8, [x20]
    24bc:	str	x9, [x0, #8]!
    24c0:	str	d0, [x20, #16]
    24c4:	ldr	w8, [sp, #24]
    24c8:	cbz	w8, 24d8 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1a8>
    24cc:	add	x8, sp, #0x8
    24d0:	add	x1, x8, #0x8
    24d4:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    24d8:	str	xzr, [x20, #168]
    24dc:	ldur	q0, [x22, #152]
    24e0:	stur	q0, [x22, #184]
    24e4:	ldur	q1, [x20, #152]
    24e8:	stur	q1, [x22, #152]
    24ec:	stur	q0, [x20, #152]
    24f0:	ldr	x8, [sp, #176]
    24f4:	str	xzr, [sp, #176]
    24f8:	ldr	x9, [x20, #176]
    24fc:	str	x8, [x20, #168]
    2500:	ldr	x8, [sp, #184]
    2504:	str	x9, [sp, #184]
    2508:	str	x8, [x20, #176]
    250c:	ldr	x8, [x21]
    2510:	add	x8, x8, #0xb8
    2514:	str	x8, [x21]
    2518:	ldr	x8, [sp, #176]
    251c:	cbz	x8, 2534 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x204>
    2520:	add	x9, sp, #0x8
    2524:	add	x0, x9, #0x98
    2528:	mov	w2, #0x3                   	// #3
    252c:	mov	x1, x0
    2530:	blr	x8
    2534:	ldr	w8, [sp, #24]
    2538:	ldr	x20, [sp, #16]
    253c:	add	x9, sp, #0x8
    2540:	add	x25, x9, #0x8
    2544:	cbz	w8, 2598 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x268>
    2548:	lsl	x26, x8, #6
    254c:	b	2558 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x228>
    2550:	subs	x26, x26, #0x40
    2554:	b.eq	2594 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x264>  // b.none
    2558:	add	x27, x20, x26
    255c:	ldur	x8, [x27, #-16]
    2560:	cbz	x8, 2574 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x244>
    2564:	sub	x0, x27, #0x20
    2568:	mov	w2, #0x3                   	// #3
    256c:	mov	x1, x0
    2570:	blr	x8
    2574:	ldur	x8, [x27, #-48]
    2578:	cbz	x8, 2550 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x220>
    257c:	add	x9, x20, x26
    2580:	sub	x0, x9, #0x40
    2584:	mov	w2, #0x3                   	// #3
    2588:	mov	x1, x0
    258c:	blr	x8
    2590:	b	2550 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x220>
    2594:	ldr	x20, [sp, #16]
    2598:	add	x8, x25, #0x10
    259c:	cmp	x20, x8
    25a0:	b.eq	25ac <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x27c>  // b.none
    25a4:	mov	x0, x20
    25a8:	bl	0 <free>
    25ac:	add	x8, sp, #0x8
    25b0:	mov	w0, #0x1                   	// #1
    25b4:	mov	w1, #0x12                  	// #18
    25b8:	bl	1d3c <_ZN4llvm8fuzzerop15binOpDescriptorEjNS_11Instruction9BinaryOpsE>
    25bc:	ldr	x20, [x21]
    25c0:	ldr	x8, [x24]
    25c4:	cmp	x20, x8
    25c8:	b.eq	3bf0 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x18c0>  // b.none
    25cc:	ldr	w8, [sp, #8]
    25d0:	ldr	d0, [x23]
    25d4:	add	x9, x20, #0x18
    25d8:	mov	x0, x20
    25dc:	str	w8, [x20]
    25e0:	str	x9, [x0, #8]!
    25e4:	str	d0, [x20, #16]
    25e8:	ldr	w8, [sp, #24]
    25ec:	cbz	w8, 25fc <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x2cc>
    25f0:	add	x8, sp, #0x8
    25f4:	add	x1, x8, #0x8
    25f8:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    25fc:	str	xzr, [x20, #168]
    2600:	ldur	q0, [x22, #152]
    2604:	stur	q0, [x22, #184]
    2608:	ldur	q1, [x20, #152]
    260c:	stur	q1, [x22, #152]
    2610:	stur	q0, [x20, #152]
    2614:	ldr	x8, [sp, #176]
    2618:	str	xzr, [sp, #176]
    261c:	ldr	x9, [x20, #176]
    2620:	str	x8, [x20, #168]
    2624:	ldr	x8, [sp, #184]
    2628:	str	x9, [sp, #184]
    262c:	str	x8, [x20, #176]
    2630:	ldr	x8, [x21]
    2634:	add	x8, x8, #0xb8
    2638:	str	x8, [x21]
    263c:	ldr	x8, [sp, #176]
    2640:	cbz	x8, 2658 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x328>
    2644:	add	x9, sp, #0x8
    2648:	add	x0, x9, #0x98
    264c:	mov	w2, #0x3                   	// #3
    2650:	mov	x1, x0
    2654:	blr	x8
    2658:	ldr	w8, [sp, #24]
    265c:	ldr	x20, [sp, #16]
    2660:	add	x9, sp, #0x8
    2664:	add	x25, x9, #0x8
    2668:	cbz	w8, 26bc <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x38c>
    266c:	lsl	x26, x8, #6
    2670:	b	267c <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x34c>
    2674:	subs	x26, x26, #0x40
    2678:	b.eq	26b8 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x388>  // b.none
    267c:	add	x27, x20, x26
    2680:	ldur	x8, [x27, #-16]
    2684:	cbz	x8, 2698 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x368>
    2688:	sub	x0, x27, #0x20
    268c:	mov	w2, #0x3                   	// #3
    2690:	mov	x1, x0
    2694:	blr	x8
    2698:	ldur	x8, [x27, #-48]
    269c:	cbz	x8, 2674 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x344>
    26a0:	add	x9, x20, x26
    26a4:	sub	x0, x9, #0x40
    26a8:	mov	w2, #0x3                   	// #3
    26ac:	mov	x1, x0
    26b0:	blr	x8
    26b4:	b	2674 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x344>
    26b8:	ldr	x20, [sp, #16]
    26bc:	add	x8, x25, #0x10
    26c0:	cmp	x20, x8
    26c4:	b.eq	26d0 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x3a0>  // b.none
    26c8:	mov	x0, x20
    26cc:	bl	0 <free>
    26d0:	add	x8, sp, #0x8
    26d4:	mov	w0, #0x1                   	// #1
    26d8:	mov	w1, #0x15                  	// #21
    26dc:	bl	1d3c <_ZN4llvm8fuzzerop15binOpDescriptorEjNS_11Instruction9BinaryOpsE>
    26e0:	ldr	x20, [x21]
    26e4:	ldr	x8, [x24]
    26e8:	cmp	x20, x8
    26ec:	b.eq	3c0c <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x18dc>  // b.none
    26f0:	ldr	w8, [sp, #8]
    26f4:	ldr	d0, [x23]
    26f8:	add	x9, x20, #0x18
    26fc:	mov	x0, x20
    2700:	str	w8, [x20]
    2704:	str	x9, [x0, #8]!
    2708:	str	d0, [x20, #16]
    270c:	ldr	w8, [sp, #24]
    2710:	cbz	w8, 2720 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x3f0>
    2714:	add	x8, sp, #0x8
    2718:	add	x1, x8, #0x8
    271c:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    2720:	str	xzr, [x20, #168]
    2724:	ldur	q0, [x22, #152]
    2728:	stur	q0, [x22, #184]
    272c:	ldur	q1, [x20, #152]
    2730:	stur	q1, [x22, #152]
    2734:	stur	q0, [x20, #152]
    2738:	ldr	x8, [sp, #176]
    273c:	str	xzr, [sp, #176]
    2740:	ldr	x9, [x20, #176]
    2744:	str	x8, [x20, #168]
    2748:	ldr	x8, [sp, #184]
    274c:	str	x9, [sp, #184]
    2750:	str	x8, [x20, #176]
    2754:	ldr	x8, [x21]
    2758:	add	x8, x8, #0xb8
    275c:	str	x8, [x21]
    2760:	ldr	x8, [sp, #176]
    2764:	cbz	x8, 277c <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x44c>
    2768:	add	x9, sp, #0x8
    276c:	add	x0, x9, #0x98
    2770:	mov	w2, #0x3                   	// #3
    2774:	mov	x1, x0
    2778:	blr	x8
    277c:	ldr	w8, [sp, #24]
    2780:	ldr	x20, [sp, #16]
    2784:	add	x9, sp, #0x8
    2788:	add	x25, x9, #0x8
    278c:	cbz	w8, 27e0 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x4b0>
    2790:	lsl	x26, x8, #6
    2794:	b	27a0 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x470>
    2798:	subs	x26, x26, #0x40
    279c:	b.eq	27dc <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x4ac>  // b.none
    27a0:	add	x27, x20, x26
    27a4:	ldur	x8, [x27, #-16]
    27a8:	cbz	x8, 27bc <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x48c>
    27ac:	sub	x0, x27, #0x20
    27b0:	mov	w2, #0x3                   	// #3
    27b4:	mov	x1, x0
    27b8:	blr	x8
    27bc:	ldur	x8, [x27, #-48]
    27c0:	cbz	x8, 2798 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x468>
    27c4:	add	x9, x20, x26
    27c8:	sub	x0, x9, #0x40
    27cc:	mov	w2, #0x3                   	// #3
    27d0:	mov	x1, x0
    27d4:	blr	x8
    27d8:	b	2798 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x468>
    27dc:	ldr	x20, [sp, #16]
    27e0:	add	x8, x25, #0x10
    27e4:	cmp	x20, x8
    27e8:	b.eq	27f4 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x4c4>  // b.none
    27ec:	mov	x0, x20
    27f0:	bl	0 <free>
    27f4:	add	x8, sp, #0x8
    27f8:	mov	w0, #0x1                   	// #1
    27fc:	mov	w1, #0x18                  	// #24
    2800:	bl	1d3c <_ZN4llvm8fuzzerop15binOpDescriptorEjNS_11Instruction9BinaryOpsE>
    2804:	ldr	x20, [x21]
    2808:	ldr	x8, [x24]
    280c:	cmp	x20, x8
    2810:	b.eq	3c28 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x18f8>  // b.none
    2814:	ldr	w8, [sp, #8]
    2818:	ldr	d0, [x23]
    281c:	add	x9, x20, #0x18
    2820:	mov	x0, x20
    2824:	str	w8, [x20]
    2828:	str	x9, [x0, #8]!
    282c:	str	d0, [x20, #16]
    2830:	ldr	w8, [sp, #24]
    2834:	cbz	w8, 2844 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x514>
    2838:	add	x8, sp, #0x8
    283c:	add	x1, x8, #0x8
    2840:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    2844:	str	xzr, [x20, #168]
    2848:	ldur	q0, [x22, #152]
    284c:	stur	q0, [x22, #184]
    2850:	ldur	q1, [x20, #152]
    2854:	stur	q1, [x22, #152]
    2858:	stur	q0, [x20, #152]
    285c:	ldr	x8, [sp, #176]
    2860:	str	xzr, [sp, #176]
    2864:	ldr	x9, [x20, #176]
    2868:	str	x8, [x20, #168]
    286c:	ldr	x8, [sp, #184]
    2870:	str	x9, [sp, #184]
    2874:	str	x8, [x20, #176]
    2878:	ldr	x8, [x21]
    287c:	add	x8, x8, #0xb8
    2880:	str	x8, [x21]
    2884:	ldr	x8, [sp, #176]
    2888:	cbz	x8, 28a0 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x570>
    288c:	add	x9, sp, #0x8
    2890:	add	x0, x9, #0x98
    2894:	mov	w2, #0x3                   	// #3
    2898:	mov	x1, x0
    289c:	blr	x8
    28a0:	ldr	w8, [sp, #24]
    28a4:	ldr	x20, [sp, #16]
    28a8:	add	x9, sp, #0x8
    28ac:	add	x25, x9, #0x8
    28b0:	cbz	w8, 2904 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x5d4>
    28b4:	lsl	x26, x8, #6
    28b8:	b	28c4 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x594>
    28bc:	subs	x26, x26, #0x40
    28c0:	b.eq	2900 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x5d0>  // b.none
    28c4:	add	x27, x20, x26
    28c8:	ldur	x8, [x27, #-16]
    28cc:	cbz	x8, 28e0 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x5b0>
    28d0:	sub	x0, x27, #0x20
    28d4:	mov	w2, #0x3                   	// #3
    28d8:	mov	x1, x0
    28dc:	blr	x8
    28e0:	ldur	x8, [x27, #-48]
    28e4:	cbz	x8, 28bc <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x58c>
    28e8:	add	x9, x20, x26
    28ec:	sub	x0, x9, #0x40
    28f0:	mov	w2, #0x3                   	// #3
    28f4:	mov	x1, x0
    28f8:	blr	x8
    28fc:	b	28bc <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x58c>
    2900:	ldr	x20, [sp, #16]
    2904:	add	x8, x25, #0x10
    2908:	cmp	x20, x8
    290c:	b.eq	2918 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x5e8>  // b.none
    2910:	mov	x0, x20
    2914:	bl	0 <free>
    2918:	add	x8, sp, #0x8
    291c:	mov	w0, #0x1                   	// #1
    2920:	mov	w1, #0x36                  	// #54
    2924:	mov	w2, wzr
    2928:	bl	1fc0 <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE>
    292c:	ldr	x20, [x21]
    2930:	ldr	x8, [x24]
    2934:	cmp	x20, x8
    2938:	b.eq	3c44 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1914>  // b.none
    293c:	ldr	w8, [sp, #8]
    2940:	ldr	d0, [x23]
    2944:	add	x9, x20, #0x18
    2948:	mov	x0, x20
    294c:	str	w8, [x20]
    2950:	str	x9, [x0, #8]!
    2954:	str	d0, [x20, #16]
    2958:	ldr	w8, [sp, #24]
    295c:	cbz	w8, 296c <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x63c>
    2960:	add	x8, sp, #0x8
    2964:	add	x1, x8, #0x8
    2968:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    296c:	str	xzr, [x20, #168]
    2970:	ldur	q0, [x22, #152]
    2974:	stur	q0, [x22, #184]
    2978:	ldur	q1, [x20, #152]
    297c:	stur	q1, [x22, #152]
    2980:	stur	q0, [x20, #152]
    2984:	ldr	x8, [sp, #176]
    2988:	str	xzr, [sp, #176]
    298c:	ldr	x9, [x20, #176]
    2990:	str	x8, [x20, #168]
    2994:	ldr	x8, [sp, #184]
    2998:	str	x9, [sp, #184]
    299c:	str	x8, [x20, #176]
    29a0:	ldr	x8, [x21]
    29a4:	add	x8, x8, #0xb8
    29a8:	str	x8, [x21]
    29ac:	ldr	x8, [sp, #176]
    29b0:	cbz	x8, 29c8 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x698>
    29b4:	add	x9, sp, #0x8
    29b8:	add	x0, x9, #0x98
    29bc:	mov	w2, #0x3                   	// #3
    29c0:	mov	x1, x0
    29c4:	blr	x8
    29c8:	ldr	w8, [sp, #24]
    29cc:	ldr	x20, [sp, #16]
    29d0:	add	x9, sp, #0x8
    29d4:	add	x25, x9, #0x8
    29d8:	cbz	w8, 2a2c <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x6fc>
    29dc:	lsl	x26, x8, #6
    29e0:	b	29ec <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x6bc>
    29e4:	subs	x26, x26, #0x40
    29e8:	b.eq	2a28 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x6f8>  // b.none
    29ec:	add	x27, x20, x26
    29f0:	ldur	x8, [x27, #-16]
    29f4:	cbz	x8, 2a08 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x6d8>
    29f8:	sub	x0, x27, #0x20
    29fc:	mov	w2, #0x3                   	// #3
    2a00:	mov	x1, x0
    2a04:	blr	x8
    2a08:	ldur	x8, [x27, #-48]
    2a0c:	cbz	x8, 29e4 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x6b4>
    2a10:	add	x9, x20, x26
    2a14:	sub	x0, x9, #0x40
    2a18:	mov	w2, #0x3                   	// #3
    2a1c:	mov	x1, x0
    2a20:	blr	x8
    2a24:	b	29e4 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x6b4>
    2a28:	ldr	x20, [sp, #16]
    2a2c:	add	x8, x25, #0x10
    2a30:	cmp	x20, x8
    2a34:	b.eq	2a40 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x710>  // b.none
    2a38:	mov	x0, x20
    2a3c:	bl	0 <free>
    2a40:	add	x8, sp, #0x8
    2a44:	mov	w0, #0x1                   	// #1
    2a48:	mov	w1, #0x36                  	// #54
    2a4c:	mov	w2, #0x1                   	// #1
    2a50:	bl	1fc0 <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE>
    2a54:	ldr	x20, [x21]
    2a58:	ldr	x8, [x24]
    2a5c:	cmp	x20, x8
    2a60:	b.eq	3c60 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1930>  // b.none
    2a64:	ldr	w8, [sp, #8]
    2a68:	ldr	d0, [x23]
    2a6c:	add	x9, x20, #0x18
    2a70:	mov	x0, x20
    2a74:	str	w8, [x20]
    2a78:	str	x9, [x0, #8]!
    2a7c:	str	d0, [x20, #16]
    2a80:	ldr	w8, [sp, #24]
    2a84:	cbz	w8, 2a94 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x764>
    2a88:	add	x8, sp, #0x8
    2a8c:	add	x1, x8, #0x8
    2a90:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    2a94:	str	xzr, [x20, #168]
    2a98:	ldur	q0, [x22, #152]
    2a9c:	stur	q0, [x22, #184]
    2aa0:	ldur	q1, [x20, #152]
    2aa4:	stur	q1, [x22, #152]
    2aa8:	stur	q0, [x20, #152]
    2aac:	ldr	x8, [sp, #176]
    2ab0:	str	xzr, [sp, #176]
    2ab4:	ldr	x9, [x20, #176]
    2ab8:	str	x8, [x20, #168]
    2abc:	ldr	x8, [sp, #184]
    2ac0:	str	x9, [sp, #184]
    2ac4:	str	x8, [x20, #176]
    2ac8:	ldr	x8, [x21]
    2acc:	add	x8, x8, #0xb8
    2ad0:	str	x8, [x21]
    2ad4:	ldr	x8, [sp, #176]
    2ad8:	cbz	x8, 2af0 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x7c0>
    2adc:	add	x9, sp, #0x8
    2ae0:	add	x0, x9, #0x98
    2ae4:	mov	w2, #0x3                   	// #3
    2ae8:	mov	x1, x0
    2aec:	blr	x8
    2af0:	ldr	w8, [sp, #24]
    2af4:	ldr	x20, [sp, #16]
    2af8:	add	x9, sp, #0x8
    2afc:	add	x25, x9, #0x8
    2b00:	cbz	w8, 2b54 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x824>
    2b04:	lsl	x26, x8, #6
    2b08:	b	2b14 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x7e4>
    2b0c:	subs	x26, x26, #0x40
    2b10:	b.eq	2b50 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x820>  // b.none
    2b14:	add	x27, x20, x26
    2b18:	ldur	x8, [x27, #-16]
    2b1c:	cbz	x8, 2b30 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x800>
    2b20:	sub	x0, x27, #0x20
    2b24:	mov	w2, #0x3                   	// #3
    2b28:	mov	x1, x0
    2b2c:	blr	x8
    2b30:	ldur	x8, [x27, #-48]
    2b34:	cbz	x8, 2b0c <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x7dc>
    2b38:	add	x9, x20, x26
    2b3c:	sub	x0, x9, #0x40
    2b40:	mov	w2, #0x3                   	// #3
    2b44:	mov	x1, x0
    2b48:	blr	x8
    2b4c:	b	2b0c <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x7dc>
    2b50:	ldr	x20, [sp, #16]
    2b54:	add	x8, x25, #0x10
    2b58:	cmp	x20, x8
    2b5c:	b.eq	2b68 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x838>  // b.none
    2b60:	mov	x0, x20
    2b64:	bl	0 <free>
    2b68:	add	x8, sp, #0x8
    2b6c:	mov	w0, #0x1                   	// #1
    2b70:	mov	w1, #0x36                  	// #54
    2b74:	mov	w2, #0x2                   	// #2
    2b78:	bl	1fc0 <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE>
    2b7c:	ldr	x20, [x21]
    2b80:	ldr	x8, [x24]
    2b84:	cmp	x20, x8
    2b88:	b.eq	3c7c <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x194c>  // b.none
    2b8c:	ldr	w8, [sp, #8]
    2b90:	ldr	d0, [x23]
    2b94:	add	x9, x20, #0x18
    2b98:	mov	x0, x20
    2b9c:	str	w8, [x20]
    2ba0:	str	x9, [x0, #8]!
    2ba4:	str	d0, [x20, #16]
    2ba8:	ldr	w8, [sp, #24]
    2bac:	cbz	w8, 2bbc <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x88c>
    2bb0:	add	x8, sp, #0x8
    2bb4:	add	x1, x8, #0x8
    2bb8:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    2bbc:	str	xzr, [x20, #168]
    2bc0:	ldur	q0, [x22, #152]
    2bc4:	stur	q0, [x22, #184]
    2bc8:	ldur	q1, [x20, #152]
    2bcc:	stur	q1, [x22, #152]
    2bd0:	stur	q0, [x20, #152]
    2bd4:	ldr	x8, [sp, #176]
    2bd8:	str	xzr, [sp, #176]
    2bdc:	ldr	x9, [x20, #176]
    2be0:	str	x8, [x20, #168]
    2be4:	ldr	x8, [sp, #184]
    2be8:	str	x9, [sp, #184]
    2bec:	str	x8, [x20, #176]
    2bf0:	ldr	x8, [x21]
    2bf4:	add	x8, x8, #0xb8
    2bf8:	str	x8, [x21]
    2bfc:	ldr	x8, [sp, #176]
    2c00:	cbz	x8, 2c18 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x8e8>
    2c04:	add	x9, sp, #0x8
    2c08:	add	x0, x9, #0x98
    2c0c:	mov	w2, #0x3                   	// #3
    2c10:	mov	x1, x0
    2c14:	blr	x8
    2c18:	ldr	w8, [sp, #24]
    2c1c:	ldr	x20, [sp, #16]
    2c20:	add	x9, sp, #0x8
    2c24:	add	x25, x9, #0x8
    2c28:	cbz	w8, 2c7c <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x94c>
    2c2c:	lsl	x26, x8, #6
    2c30:	b	2c3c <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x90c>
    2c34:	subs	x26, x26, #0x40
    2c38:	b.eq	2c78 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x948>  // b.none
    2c3c:	add	x27, x20, x26
    2c40:	ldur	x8, [x27, #-16]
    2c44:	cbz	x8, 2c58 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x928>
    2c48:	sub	x0, x27, #0x20
    2c4c:	mov	w2, #0x3                   	// #3
    2c50:	mov	x1, x0
    2c54:	blr	x8
    2c58:	ldur	x8, [x27, #-48]
    2c5c:	cbz	x8, 2c34 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x904>
    2c60:	add	x9, x20, x26
    2c64:	sub	x0, x9, #0x40
    2c68:	mov	w2, #0x3                   	// #3
    2c6c:	mov	x1, x0
    2c70:	blr	x8
    2c74:	b	2c34 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x904>
    2c78:	ldr	x20, [sp, #16]
    2c7c:	add	x8, x25, #0x10
    2c80:	cmp	x20, x8
    2c84:	b.eq	2c90 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x960>  // b.none
    2c88:	mov	x0, x20
    2c8c:	bl	0 <free>
    2c90:	add	x8, sp, #0x8
    2c94:	mov	w0, #0x1                   	// #1
    2c98:	mov	w1, #0x36                  	// #54
    2c9c:	mov	w2, #0x3                   	// #3
    2ca0:	bl	1fc0 <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE>
    2ca4:	ldr	x20, [x21]
    2ca8:	ldr	x8, [x24]
    2cac:	cmp	x20, x8
    2cb0:	b.eq	3c98 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1968>  // b.none
    2cb4:	ldr	w8, [sp, #8]
    2cb8:	ldr	d0, [x23]
    2cbc:	add	x9, x20, #0x18
    2cc0:	mov	x0, x20
    2cc4:	str	w8, [x20]
    2cc8:	str	x9, [x0, #8]!
    2ccc:	str	d0, [x20, #16]
    2cd0:	ldr	w8, [sp, #24]
    2cd4:	cbz	w8, 2ce4 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x9b4>
    2cd8:	add	x8, sp, #0x8
    2cdc:	add	x1, x8, #0x8
    2ce0:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    2ce4:	str	xzr, [x20, #168]
    2ce8:	ldur	q0, [x22, #152]
    2cec:	stur	q0, [x22, #184]
    2cf0:	ldur	q1, [x20, #152]
    2cf4:	stur	q1, [x22, #152]
    2cf8:	stur	q0, [x20, #152]
    2cfc:	ldr	x8, [sp, #176]
    2d00:	str	xzr, [sp, #176]
    2d04:	ldr	x9, [x20, #176]
    2d08:	str	x8, [x20, #168]
    2d0c:	ldr	x8, [sp, #184]
    2d10:	str	x9, [sp, #184]
    2d14:	str	x8, [x20, #176]
    2d18:	ldr	x8, [x21]
    2d1c:	add	x8, x8, #0xb8
    2d20:	str	x8, [x21]
    2d24:	ldr	x8, [sp, #176]
    2d28:	cbz	x8, 2d40 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xa10>
    2d2c:	add	x9, sp, #0x8
    2d30:	add	x0, x9, #0x98
    2d34:	mov	w2, #0x3                   	// #3
    2d38:	mov	x1, x0
    2d3c:	blr	x8
    2d40:	ldr	w8, [sp, #24]
    2d44:	ldr	x20, [sp, #16]
    2d48:	add	x9, sp, #0x8
    2d4c:	add	x25, x9, #0x8
    2d50:	cbz	w8, 2da4 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xa74>
    2d54:	lsl	x26, x8, #6
    2d58:	b	2d64 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xa34>
    2d5c:	subs	x26, x26, #0x40
    2d60:	b.eq	2da0 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xa70>  // b.none
    2d64:	add	x27, x20, x26
    2d68:	ldur	x8, [x27, #-16]
    2d6c:	cbz	x8, 2d80 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xa50>
    2d70:	sub	x0, x27, #0x20
    2d74:	mov	w2, #0x3                   	// #3
    2d78:	mov	x1, x0
    2d7c:	blr	x8
    2d80:	ldur	x8, [x27, #-48]
    2d84:	cbz	x8, 2d5c <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xa2c>
    2d88:	add	x9, x20, x26
    2d8c:	sub	x0, x9, #0x40
    2d90:	mov	w2, #0x3                   	// #3
    2d94:	mov	x1, x0
    2d98:	blr	x8
    2d9c:	b	2d5c <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xa2c>
    2da0:	ldr	x20, [sp, #16]
    2da4:	add	x8, x25, #0x10
    2da8:	cmp	x20, x8
    2dac:	b.eq	2db8 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xa88>  // b.none
    2db0:	mov	x0, x20
    2db4:	bl	0 <free>
    2db8:	add	x8, sp, #0x8
    2dbc:	mov	w0, #0x1                   	// #1
    2dc0:	mov	w1, #0x36                  	// #54
    2dc4:	mov	w2, #0x4                   	// #4
    2dc8:	bl	1fc0 <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE>
    2dcc:	ldr	x20, [x21]
    2dd0:	ldr	x8, [x24]
    2dd4:	cmp	x20, x8
    2dd8:	b.eq	3cb4 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1984>  // b.none
    2ddc:	ldr	w8, [sp, #8]
    2de0:	ldr	d0, [x23]
    2de4:	add	x9, x20, #0x18
    2de8:	mov	x0, x20
    2dec:	str	w8, [x20]
    2df0:	str	x9, [x0, #8]!
    2df4:	str	d0, [x20, #16]
    2df8:	ldr	w8, [sp, #24]
    2dfc:	cbz	w8, 2e0c <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xadc>
    2e00:	add	x8, sp, #0x8
    2e04:	add	x1, x8, #0x8
    2e08:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    2e0c:	str	xzr, [x20, #168]
    2e10:	ldur	q0, [x22, #152]
    2e14:	stur	q0, [x22, #184]
    2e18:	ldur	q1, [x20, #152]
    2e1c:	stur	q1, [x22, #152]
    2e20:	stur	q0, [x20, #152]
    2e24:	ldr	x8, [sp, #176]
    2e28:	str	xzr, [sp, #176]
    2e2c:	ldr	x9, [x20, #176]
    2e30:	str	x8, [x20, #168]
    2e34:	ldr	x8, [sp, #184]
    2e38:	str	x9, [sp, #184]
    2e3c:	str	x8, [x20, #176]
    2e40:	ldr	x8, [x21]
    2e44:	add	x8, x8, #0xb8
    2e48:	str	x8, [x21]
    2e4c:	ldr	x8, [sp, #176]
    2e50:	cbz	x8, 2e68 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xb38>
    2e54:	add	x9, sp, #0x8
    2e58:	add	x0, x9, #0x98
    2e5c:	mov	w2, #0x3                   	// #3
    2e60:	mov	x1, x0
    2e64:	blr	x8
    2e68:	ldr	w8, [sp, #24]
    2e6c:	ldr	x20, [sp, #16]
    2e70:	add	x9, sp, #0x8
    2e74:	add	x25, x9, #0x8
    2e78:	cbz	w8, 2ecc <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xb9c>
    2e7c:	lsl	x26, x8, #6
    2e80:	b	2e8c <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xb5c>
    2e84:	subs	x26, x26, #0x40
    2e88:	b.eq	2ec8 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xb98>  // b.none
    2e8c:	add	x27, x20, x26
    2e90:	ldur	x8, [x27, #-16]
    2e94:	cbz	x8, 2ea8 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xb78>
    2e98:	sub	x0, x27, #0x20
    2e9c:	mov	w2, #0x3                   	// #3
    2ea0:	mov	x1, x0
    2ea4:	blr	x8
    2ea8:	ldur	x8, [x27, #-48]
    2eac:	cbz	x8, 2e84 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xb54>
    2eb0:	add	x9, x20, x26
    2eb4:	sub	x0, x9, #0x40
    2eb8:	mov	w2, #0x3                   	// #3
    2ebc:	mov	x1, x0
    2ec0:	blr	x8
    2ec4:	b	2e84 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xb54>
    2ec8:	ldr	x20, [sp, #16]
    2ecc:	add	x8, x25, #0x10
    2ed0:	cmp	x20, x8
    2ed4:	b.eq	2ee0 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xbb0>  // b.none
    2ed8:	mov	x0, x20
    2edc:	bl	0 <free>
    2ee0:	add	x8, sp, #0x8
    2ee4:	mov	w0, #0x1                   	// #1
    2ee8:	mov	w1, #0x36                  	// #54
    2eec:	mov	w2, #0x5                   	// #5
    2ef0:	bl	1fc0 <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE>
    2ef4:	ldr	x20, [x21]
    2ef8:	ldr	x8, [x24]
    2efc:	cmp	x20, x8
    2f00:	b.eq	3cd0 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x19a0>  // b.none
    2f04:	ldr	w8, [sp, #8]
    2f08:	ldr	d0, [x23]
    2f0c:	add	x9, x20, #0x18
    2f10:	mov	x0, x20
    2f14:	str	w8, [x20]
    2f18:	str	x9, [x0, #8]!
    2f1c:	str	d0, [x20, #16]
    2f20:	ldr	w8, [sp, #24]
    2f24:	cbz	w8, 2f34 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xc04>
    2f28:	add	x8, sp, #0x8
    2f2c:	add	x1, x8, #0x8
    2f30:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    2f34:	str	xzr, [x20, #168]
    2f38:	ldur	q0, [x22, #152]
    2f3c:	stur	q0, [x22, #184]
    2f40:	ldur	q1, [x20, #152]
    2f44:	stur	q1, [x22, #152]
    2f48:	stur	q0, [x20, #152]
    2f4c:	ldr	x8, [sp, #176]
    2f50:	str	xzr, [sp, #176]
    2f54:	ldr	x9, [x20, #176]
    2f58:	str	x8, [x20, #168]
    2f5c:	ldr	x8, [sp, #184]
    2f60:	str	x9, [sp, #184]
    2f64:	str	x8, [x20, #176]
    2f68:	ldr	x8, [x21]
    2f6c:	add	x8, x8, #0xb8
    2f70:	str	x8, [x21]
    2f74:	ldr	x8, [sp, #176]
    2f78:	cbz	x8, 2f90 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xc60>
    2f7c:	add	x9, sp, #0x8
    2f80:	add	x0, x9, #0x98
    2f84:	mov	w2, #0x3                   	// #3
    2f88:	mov	x1, x0
    2f8c:	blr	x8
    2f90:	ldr	w8, [sp, #24]
    2f94:	ldr	x20, [sp, #16]
    2f98:	add	x9, sp, #0x8
    2f9c:	add	x25, x9, #0x8
    2fa0:	cbz	w8, 2ff4 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xcc4>
    2fa4:	lsl	x26, x8, #6
    2fa8:	b	2fb4 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xc84>
    2fac:	subs	x26, x26, #0x40
    2fb0:	b.eq	2ff0 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xcc0>  // b.none
    2fb4:	add	x27, x20, x26
    2fb8:	ldur	x8, [x27, #-16]
    2fbc:	cbz	x8, 2fd0 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xca0>
    2fc0:	sub	x0, x27, #0x20
    2fc4:	mov	w2, #0x3                   	// #3
    2fc8:	mov	x1, x0
    2fcc:	blr	x8
    2fd0:	ldur	x8, [x27, #-48]
    2fd4:	cbz	x8, 2fac <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xc7c>
    2fd8:	add	x9, x20, x26
    2fdc:	sub	x0, x9, #0x40
    2fe0:	mov	w2, #0x3                   	// #3
    2fe4:	mov	x1, x0
    2fe8:	blr	x8
    2fec:	b	2fac <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xc7c>
    2ff0:	ldr	x20, [sp, #16]
    2ff4:	add	x8, x25, #0x10
    2ff8:	cmp	x20, x8
    2ffc:	b.eq	3008 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xcd8>  // b.none
    3000:	mov	x0, x20
    3004:	bl	0 <free>
    3008:	add	x8, sp, #0x8
    300c:	mov	w0, #0x1                   	// #1
    3010:	mov	w1, #0x36                  	// #54
    3014:	mov	w2, #0x6                   	// #6
    3018:	bl	1fc0 <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE>
    301c:	ldr	x20, [x21]
    3020:	ldr	x8, [x24]
    3024:	cmp	x20, x8
    3028:	b.eq	3cec <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x19bc>  // b.none
    302c:	ldr	w8, [sp, #8]
    3030:	ldr	d0, [x23]
    3034:	add	x9, x20, #0x18
    3038:	mov	x0, x20
    303c:	str	w8, [x20]
    3040:	str	x9, [x0, #8]!
    3044:	str	d0, [x20, #16]
    3048:	ldr	w8, [sp, #24]
    304c:	cbz	w8, 305c <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xd2c>
    3050:	add	x8, sp, #0x8
    3054:	add	x1, x8, #0x8
    3058:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    305c:	str	xzr, [x20, #168]
    3060:	ldur	q0, [x22, #152]
    3064:	stur	q0, [x22, #184]
    3068:	ldur	q1, [x20, #152]
    306c:	stur	q1, [x22, #152]
    3070:	stur	q0, [x20, #152]
    3074:	ldr	x8, [sp, #176]
    3078:	str	xzr, [sp, #176]
    307c:	ldr	x9, [x20, #176]
    3080:	str	x8, [x20, #168]
    3084:	ldr	x8, [sp, #184]
    3088:	str	x9, [sp, #184]
    308c:	str	x8, [x20, #176]
    3090:	ldr	x8, [x21]
    3094:	add	x8, x8, #0xb8
    3098:	str	x8, [x21]
    309c:	ldr	x8, [sp, #176]
    30a0:	cbz	x8, 30b8 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xd88>
    30a4:	add	x9, sp, #0x8
    30a8:	add	x0, x9, #0x98
    30ac:	mov	w2, #0x3                   	// #3
    30b0:	mov	x1, x0
    30b4:	blr	x8
    30b8:	ldr	w8, [sp, #24]
    30bc:	ldr	x20, [sp, #16]
    30c0:	add	x9, sp, #0x8
    30c4:	add	x25, x9, #0x8
    30c8:	cbz	w8, 311c <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xdec>
    30cc:	lsl	x26, x8, #6
    30d0:	b	30dc <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xdac>
    30d4:	subs	x26, x26, #0x40
    30d8:	b.eq	3118 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xde8>  // b.none
    30dc:	add	x27, x20, x26
    30e0:	ldur	x8, [x27, #-16]
    30e4:	cbz	x8, 30f8 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xdc8>
    30e8:	sub	x0, x27, #0x20
    30ec:	mov	w2, #0x3                   	// #3
    30f0:	mov	x1, x0
    30f4:	blr	x8
    30f8:	ldur	x8, [x27, #-48]
    30fc:	cbz	x8, 30d4 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xda4>
    3100:	add	x9, x20, x26
    3104:	sub	x0, x9, #0x40
    3108:	mov	w2, #0x3                   	// #3
    310c:	mov	x1, x0
    3110:	blr	x8
    3114:	b	30d4 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xda4>
    3118:	ldr	x20, [sp, #16]
    311c:	add	x8, x25, #0x10
    3120:	cmp	x20, x8
    3124:	b.eq	3130 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xe00>  // b.none
    3128:	mov	x0, x20
    312c:	bl	0 <free>
    3130:	add	x8, sp, #0x8
    3134:	mov	w0, #0x1                   	// #1
    3138:	mov	w1, #0x36                  	// #54
    313c:	mov	w2, #0x7                   	// #7
    3140:	bl	1fc0 <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE>
    3144:	ldr	x20, [x21]
    3148:	ldr	x8, [x24]
    314c:	cmp	x20, x8
    3150:	b.eq	3d08 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x19d8>  // b.none
    3154:	ldr	w8, [sp, #8]
    3158:	ldr	d0, [x23]
    315c:	add	x9, x20, #0x18
    3160:	mov	x0, x20
    3164:	str	w8, [x20]
    3168:	str	x9, [x0, #8]!
    316c:	str	d0, [x20, #16]
    3170:	ldr	w8, [sp, #24]
    3174:	cbz	w8, 3184 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xe54>
    3178:	add	x8, sp, #0x8
    317c:	add	x1, x8, #0x8
    3180:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    3184:	str	xzr, [x20, #168]
    3188:	ldur	q0, [x22, #152]
    318c:	stur	q0, [x22, #184]
    3190:	ldur	q1, [x20, #152]
    3194:	stur	q1, [x22, #152]
    3198:	stur	q0, [x20, #152]
    319c:	ldr	x8, [sp, #176]
    31a0:	str	xzr, [sp, #176]
    31a4:	ldr	x9, [x20, #176]
    31a8:	str	x8, [x20, #168]
    31ac:	ldr	x8, [sp, #184]
    31b0:	str	x9, [sp, #184]
    31b4:	str	x8, [x20, #176]
    31b8:	ldr	x8, [x21]
    31bc:	add	x8, x8, #0xb8
    31c0:	str	x8, [x21]
    31c4:	ldr	x8, [sp, #176]
    31c8:	cbz	x8, 31e0 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xeb0>
    31cc:	add	x9, sp, #0x8
    31d0:	add	x0, x9, #0x98
    31d4:	mov	w2, #0x3                   	// #3
    31d8:	mov	x1, x0
    31dc:	blr	x8
    31e0:	ldr	w8, [sp, #24]
    31e4:	ldr	x20, [sp, #16]
    31e8:	add	x9, sp, #0x8
    31ec:	add	x25, x9, #0x8
    31f0:	cbz	w8, 3244 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xf14>
    31f4:	lsl	x26, x8, #6
    31f8:	b	3204 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xed4>
    31fc:	subs	x26, x26, #0x40
    3200:	b.eq	3240 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xf10>  // b.none
    3204:	add	x27, x20, x26
    3208:	ldur	x8, [x27, #-16]
    320c:	cbz	x8, 3220 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xef0>
    3210:	sub	x0, x27, #0x20
    3214:	mov	w2, #0x3                   	// #3
    3218:	mov	x1, x0
    321c:	blr	x8
    3220:	ldur	x8, [x27, #-48]
    3224:	cbz	x8, 31fc <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xecc>
    3228:	add	x9, x20, x26
    322c:	sub	x0, x9, #0x40
    3230:	mov	w2, #0x3                   	// #3
    3234:	mov	x1, x0
    3238:	blr	x8
    323c:	b	31fc <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xecc>
    3240:	ldr	x20, [sp, #16]
    3244:	add	x8, x25, #0x10
    3248:	cmp	x20, x8
    324c:	b.eq	3258 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xf28>  // b.none
    3250:	mov	x0, x20
    3254:	bl	0 <free>
    3258:	add	x8, sp, #0x8
    325c:	mov	w0, #0x1                   	// #1
    3260:	mov	w1, #0x36                  	// #54
    3264:	mov	w2, #0x8                   	// #8
    3268:	bl	1fc0 <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE>
    326c:	ldr	x20, [x21]
    3270:	ldr	x8, [x24]
    3274:	cmp	x20, x8
    3278:	b.eq	3d24 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x19f4>  // b.none
    327c:	ldr	w8, [sp, #8]
    3280:	ldr	d0, [x23]
    3284:	add	x9, x20, #0x18
    3288:	mov	x0, x20
    328c:	str	w8, [x20]
    3290:	str	x9, [x0, #8]!
    3294:	str	d0, [x20, #16]
    3298:	ldr	w8, [sp, #24]
    329c:	cbz	w8, 32ac <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xf7c>
    32a0:	add	x8, sp, #0x8
    32a4:	add	x1, x8, #0x8
    32a8:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    32ac:	str	xzr, [x20, #168]
    32b0:	ldur	q0, [x22, #152]
    32b4:	stur	q0, [x22, #184]
    32b8:	ldur	q1, [x20, #152]
    32bc:	stur	q1, [x22, #152]
    32c0:	stur	q0, [x20, #152]
    32c4:	ldr	x8, [sp, #176]
    32c8:	str	xzr, [sp, #176]
    32cc:	ldr	x9, [x20, #176]
    32d0:	str	x8, [x20, #168]
    32d4:	ldr	x8, [sp, #184]
    32d8:	str	x9, [sp, #184]
    32dc:	str	x8, [x20, #176]
    32e0:	ldr	x8, [x21]
    32e4:	add	x8, x8, #0xb8
    32e8:	str	x8, [x21]
    32ec:	ldr	x8, [sp, #176]
    32f0:	cbz	x8, 3308 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xfd8>
    32f4:	add	x9, sp, #0x8
    32f8:	add	x0, x9, #0x98
    32fc:	mov	w2, #0x3                   	// #3
    3300:	mov	x1, x0
    3304:	blr	x8
    3308:	ldr	w8, [sp, #24]
    330c:	ldr	x20, [sp, #16]
    3310:	add	x9, sp, #0x8
    3314:	add	x25, x9, #0x8
    3318:	cbz	w8, 336c <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x103c>
    331c:	lsl	x26, x8, #6
    3320:	b	332c <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xffc>
    3324:	subs	x26, x26, #0x40
    3328:	b.eq	3368 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1038>  // b.none
    332c:	add	x27, x20, x26
    3330:	ldur	x8, [x27, #-16]
    3334:	cbz	x8, 3348 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1018>
    3338:	sub	x0, x27, #0x20
    333c:	mov	w2, #0x3                   	// #3
    3340:	mov	x1, x0
    3344:	blr	x8
    3348:	ldur	x8, [x27, #-48]
    334c:	cbz	x8, 3324 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xff4>
    3350:	add	x9, x20, x26
    3354:	sub	x0, x9, #0x40
    3358:	mov	w2, #0x3                   	// #3
    335c:	mov	x1, x0
    3360:	blr	x8
    3364:	b	3324 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xff4>
    3368:	ldr	x20, [sp, #16]
    336c:	add	x8, x25, #0x10
    3370:	cmp	x20, x8
    3374:	b.eq	3380 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1050>  // b.none
    3378:	mov	x0, x20
    337c:	bl	0 <free>
    3380:	add	x8, sp, #0x8
    3384:	mov	w0, #0x1                   	// #1
    3388:	mov	w1, #0x36                  	// #54
    338c:	mov	w2, #0x9                   	// #9
    3390:	bl	1fc0 <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE>
    3394:	ldr	x20, [x21]
    3398:	ldr	x8, [x24]
    339c:	cmp	x20, x8
    33a0:	b.eq	3d40 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1a10>  // b.none
    33a4:	ldr	w8, [sp, #8]
    33a8:	ldr	d0, [x23]
    33ac:	add	x9, x20, #0x18
    33b0:	mov	x0, x20
    33b4:	str	w8, [x20]
    33b8:	str	x9, [x0, #8]!
    33bc:	str	d0, [x20, #16]
    33c0:	ldr	w8, [sp, #24]
    33c4:	cbz	w8, 33d4 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x10a4>
    33c8:	add	x8, sp, #0x8
    33cc:	add	x1, x8, #0x8
    33d0:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    33d4:	str	xzr, [x20, #168]
    33d8:	ldur	q0, [x22, #152]
    33dc:	stur	q0, [x22, #184]
    33e0:	ldur	q1, [x20, #152]
    33e4:	stur	q1, [x22, #152]
    33e8:	stur	q0, [x20, #152]
    33ec:	ldr	x8, [sp, #176]
    33f0:	str	xzr, [sp, #176]
    33f4:	ldr	x9, [x20, #176]
    33f8:	str	x8, [x20, #168]
    33fc:	ldr	x8, [sp, #184]
    3400:	str	x9, [sp, #184]
    3404:	str	x8, [x20, #176]
    3408:	ldr	x8, [x21]
    340c:	add	x8, x8, #0xb8
    3410:	str	x8, [x21]
    3414:	ldr	x8, [sp, #176]
    3418:	cbz	x8, 3430 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1100>
    341c:	add	x9, sp, #0x8
    3420:	add	x0, x9, #0x98
    3424:	mov	w2, #0x3                   	// #3
    3428:	mov	x1, x0
    342c:	blr	x8
    3430:	ldr	w8, [sp, #24]
    3434:	ldr	x20, [sp, #16]
    3438:	add	x9, sp, #0x8
    343c:	add	x25, x9, #0x8
    3440:	cbz	w8, 3494 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1164>
    3444:	lsl	x26, x8, #6
    3448:	b	3454 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1124>
    344c:	subs	x26, x26, #0x40
    3450:	b.eq	3490 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1160>  // b.none
    3454:	add	x27, x20, x26
    3458:	ldur	x8, [x27, #-16]
    345c:	cbz	x8, 3470 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1140>
    3460:	sub	x0, x27, #0x20
    3464:	mov	w2, #0x3                   	// #3
    3468:	mov	x1, x0
    346c:	blr	x8
    3470:	ldur	x8, [x27, #-48]
    3474:	cbz	x8, 344c <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x111c>
    3478:	add	x9, x20, x26
    347c:	sub	x0, x9, #0x40
    3480:	mov	w2, #0x3                   	// #3
    3484:	mov	x1, x0
    3488:	blr	x8
    348c:	b	344c <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x111c>
    3490:	ldr	x20, [sp, #16]
    3494:	add	x8, x25, #0x10
    3498:	cmp	x20, x8
    349c:	b.eq	34a8 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1178>  // b.none
    34a0:	mov	x0, x20
    34a4:	bl	0 <free>
    34a8:	add	x8, sp, #0x8
    34ac:	mov	w0, #0x1                   	// #1
    34b0:	mov	w1, #0x36                  	// #54
    34b4:	mov	w2, #0xa                   	// #10
    34b8:	bl	1fc0 <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE>
    34bc:	ldr	x20, [x21]
    34c0:	ldr	x8, [x24]
    34c4:	cmp	x20, x8
    34c8:	b.eq	3d5c <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1a2c>  // b.none
    34cc:	ldr	w8, [sp, #8]
    34d0:	ldr	d0, [x23]
    34d4:	add	x9, x20, #0x18
    34d8:	mov	x0, x20
    34dc:	str	w8, [x20]
    34e0:	str	x9, [x0, #8]!
    34e4:	str	d0, [x20, #16]
    34e8:	ldr	w8, [sp, #24]
    34ec:	cbz	w8, 34fc <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x11cc>
    34f0:	add	x8, sp, #0x8
    34f4:	add	x1, x8, #0x8
    34f8:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    34fc:	str	xzr, [x20, #168]
    3500:	ldur	q0, [x22, #152]
    3504:	stur	q0, [x22, #184]
    3508:	ldur	q1, [x20, #152]
    350c:	stur	q1, [x22, #152]
    3510:	stur	q0, [x20, #152]
    3514:	ldr	x8, [sp, #176]
    3518:	str	xzr, [sp, #176]
    351c:	ldr	x9, [x20, #176]
    3520:	str	x8, [x20, #168]
    3524:	ldr	x8, [sp, #184]
    3528:	str	x9, [sp, #184]
    352c:	str	x8, [x20, #176]
    3530:	ldr	x8, [x21]
    3534:	add	x8, x8, #0xb8
    3538:	str	x8, [x21]
    353c:	ldr	x8, [sp, #176]
    3540:	cbz	x8, 3558 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1228>
    3544:	add	x9, sp, #0x8
    3548:	add	x0, x9, #0x98
    354c:	mov	w2, #0x3                   	// #3
    3550:	mov	x1, x0
    3554:	blr	x8
    3558:	ldr	w8, [sp, #24]
    355c:	ldr	x20, [sp, #16]
    3560:	add	x9, sp, #0x8
    3564:	add	x25, x9, #0x8
    3568:	cbz	w8, 35bc <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x128c>
    356c:	lsl	x26, x8, #6
    3570:	b	357c <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x124c>
    3574:	subs	x26, x26, #0x40
    3578:	b.eq	35b8 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1288>  // b.none
    357c:	add	x27, x20, x26
    3580:	ldur	x8, [x27, #-16]
    3584:	cbz	x8, 3598 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1268>
    3588:	sub	x0, x27, #0x20
    358c:	mov	w2, #0x3                   	// #3
    3590:	mov	x1, x0
    3594:	blr	x8
    3598:	ldur	x8, [x27, #-48]
    359c:	cbz	x8, 3574 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1244>
    35a0:	add	x9, x20, x26
    35a4:	sub	x0, x9, #0x40
    35a8:	mov	w2, #0x3                   	// #3
    35ac:	mov	x1, x0
    35b0:	blr	x8
    35b4:	b	3574 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1244>
    35b8:	ldr	x20, [sp, #16]
    35bc:	add	x8, x25, #0x10
    35c0:	cmp	x20, x8
    35c4:	b.eq	35d0 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x12a0>  // b.none
    35c8:	mov	x0, x20
    35cc:	bl	0 <free>
    35d0:	add	x8, sp, #0x8
    35d4:	mov	w0, #0x1                   	// #1
    35d8:	mov	w1, #0x36                  	// #54
    35dc:	mov	w2, #0xb                   	// #11
    35e0:	bl	1fc0 <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE>
    35e4:	ldr	x20, [x21]
    35e8:	ldr	x8, [x24]
    35ec:	cmp	x20, x8
    35f0:	b.eq	3d78 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1a48>  // b.none
    35f4:	ldr	w8, [sp, #8]
    35f8:	ldr	d0, [x23]
    35fc:	add	x9, x20, #0x18
    3600:	mov	x0, x20
    3604:	str	w8, [x20]
    3608:	str	x9, [x0, #8]!
    360c:	str	d0, [x20, #16]
    3610:	ldr	w8, [sp, #24]
    3614:	cbz	w8, 3624 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x12f4>
    3618:	add	x8, sp, #0x8
    361c:	add	x1, x8, #0x8
    3620:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    3624:	str	xzr, [x20, #168]
    3628:	ldur	q0, [x22, #152]
    362c:	stur	q0, [x22, #184]
    3630:	ldur	q1, [x20, #152]
    3634:	stur	q1, [x22, #152]
    3638:	stur	q0, [x20, #152]
    363c:	ldr	x8, [sp, #176]
    3640:	str	xzr, [sp, #176]
    3644:	ldr	x9, [x20, #176]
    3648:	str	x8, [x20, #168]
    364c:	ldr	x8, [sp, #184]
    3650:	str	x9, [sp, #184]
    3654:	str	x8, [x20, #176]
    3658:	ldr	x8, [x21]
    365c:	add	x8, x8, #0xb8
    3660:	str	x8, [x21]
    3664:	ldr	x8, [sp, #176]
    3668:	cbz	x8, 3680 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1350>
    366c:	add	x9, sp, #0x8
    3670:	add	x0, x9, #0x98
    3674:	mov	w2, #0x3                   	// #3
    3678:	mov	x1, x0
    367c:	blr	x8
    3680:	ldr	w8, [sp, #24]
    3684:	ldr	x20, [sp, #16]
    3688:	add	x9, sp, #0x8
    368c:	add	x25, x9, #0x8
    3690:	cbz	w8, 36e4 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x13b4>
    3694:	lsl	x26, x8, #6
    3698:	b	36a4 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1374>
    369c:	subs	x26, x26, #0x40
    36a0:	b.eq	36e0 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x13b0>  // b.none
    36a4:	add	x27, x20, x26
    36a8:	ldur	x8, [x27, #-16]
    36ac:	cbz	x8, 36c0 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1390>
    36b0:	sub	x0, x27, #0x20
    36b4:	mov	w2, #0x3                   	// #3
    36b8:	mov	x1, x0
    36bc:	blr	x8
    36c0:	ldur	x8, [x27, #-48]
    36c4:	cbz	x8, 369c <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x136c>
    36c8:	add	x9, x20, x26
    36cc:	sub	x0, x9, #0x40
    36d0:	mov	w2, #0x3                   	// #3
    36d4:	mov	x1, x0
    36d8:	blr	x8
    36dc:	b	369c <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x136c>
    36e0:	ldr	x20, [sp, #16]
    36e4:	add	x8, x25, #0x10
    36e8:	cmp	x20, x8
    36ec:	b.eq	36f8 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x13c8>  // b.none
    36f0:	mov	x0, x20
    36f4:	bl	0 <free>
    36f8:	add	x8, sp, #0x8
    36fc:	mov	w0, #0x1                   	// #1
    3700:	mov	w1, #0x36                  	// #54
    3704:	mov	w2, #0xc                   	// #12
    3708:	bl	1fc0 <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE>
    370c:	ldr	x20, [x21]
    3710:	ldr	x8, [x24]
    3714:	cmp	x20, x8
    3718:	b.eq	3d94 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1a64>  // b.none
    371c:	ldr	w8, [sp, #8]
    3720:	ldr	d0, [x23]
    3724:	add	x9, x20, #0x18
    3728:	mov	x0, x20
    372c:	str	w8, [x20]
    3730:	str	x9, [x0, #8]!
    3734:	str	d0, [x20, #16]
    3738:	ldr	w8, [sp, #24]
    373c:	cbz	w8, 374c <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x141c>
    3740:	add	x8, sp, #0x8
    3744:	add	x1, x8, #0x8
    3748:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    374c:	str	xzr, [x20, #168]
    3750:	ldur	q0, [x22, #152]
    3754:	stur	q0, [x22, #184]
    3758:	ldur	q1, [x20, #152]
    375c:	stur	q1, [x22, #152]
    3760:	stur	q0, [x20, #152]
    3764:	ldr	x8, [sp, #176]
    3768:	str	xzr, [sp, #176]
    376c:	ldr	x9, [x20, #176]
    3770:	str	x8, [x20, #168]
    3774:	ldr	x8, [sp, #184]
    3778:	str	x9, [sp, #184]
    377c:	str	x8, [x20, #176]
    3780:	ldr	x8, [x21]
    3784:	add	x8, x8, #0xb8
    3788:	str	x8, [x21]
    378c:	ldr	x8, [sp, #176]
    3790:	cbz	x8, 37a8 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1478>
    3794:	add	x9, sp, #0x8
    3798:	add	x0, x9, #0x98
    379c:	mov	w2, #0x3                   	// #3
    37a0:	mov	x1, x0
    37a4:	blr	x8
    37a8:	ldr	w8, [sp, #24]
    37ac:	ldr	x20, [sp, #16]
    37b0:	add	x9, sp, #0x8
    37b4:	add	x25, x9, #0x8
    37b8:	cbz	w8, 380c <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x14dc>
    37bc:	lsl	x26, x8, #6
    37c0:	b	37cc <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x149c>
    37c4:	subs	x26, x26, #0x40
    37c8:	b.eq	3808 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x14d8>  // b.none
    37cc:	add	x27, x20, x26
    37d0:	ldur	x8, [x27, #-16]
    37d4:	cbz	x8, 37e8 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x14b8>
    37d8:	sub	x0, x27, #0x20
    37dc:	mov	w2, #0x3                   	// #3
    37e0:	mov	x1, x0
    37e4:	blr	x8
    37e8:	ldur	x8, [x27, #-48]
    37ec:	cbz	x8, 37c4 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1494>
    37f0:	add	x9, x20, x26
    37f4:	sub	x0, x9, #0x40
    37f8:	mov	w2, #0x3                   	// #3
    37fc:	mov	x1, x0
    3800:	blr	x8
    3804:	b	37c4 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1494>
    3808:	ldr	x20, [sp, #16]
    380c:	add	x8, x25, #0x10
    3810:	cmp	x20, x8
    3814:	b.eq	3820 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x14f0>  // b.none
    3818:	mov	x0, x20
    381c:	bl	0 <free>
    3820:	add	x8, sp, #0x8
    3824:	mov	w0, #0x1                   	// #1
    3828:	mov	w1, #0x36                  	// #54
    382c:	mov	w2, #0xd                   	// #13
    3830:	bl	1fc0 <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE>
    3834:	ldr	x20, [x21]
    3838:	ldr	x8, [x24]
    383c:	cmp	x20, x8
    3840:	b.eq	3db0 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1a80>  // b.none
    3844:	ldr	w8, [sp, #8]
    3848:	ldr	d0, [x23]
    384c:	add	x9, x20, #0x18
    3850:	mov	x0, x20
    3854:	str	w8, [x20]
    3858:	str	x9, [x0, #8]!
    385c:	str	d0, [x20, #16]
    3860:	ldr	w8, [sp, #24]
    3864:	cbz	w8, 3874 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1544>
    3868:	add	x8, sp, #0x8
    386c:	add	x1, x8, #0x8
    3870:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    3874:	str	xzr, [x20, #168]
    3878:	ldur	q0, [x22, #152]
    387c:	stur	q0, [x22, #184]
    3880:	ldur	q1, [x20, #152]
    3884:	stur	q1, [x22, #152]
    3888:	stur	q0, [x20, #152]
    388c:	ldr	x8, [sp, #176]
    3890:	str	xzr, [sp, #176]
    3894:	ldr	x9, [x20, #176]
    3898:	str	x8, [x20, #168]
    389c:	ldr	x8, [sp, #184]
    38a0:	str	x9, [sp, #184]
    38a4:	str	x8, [x20, #176]
    38a8:	ldr	x8, [x21]
    38ac:	add	x8, x8, #0xb8
    38b0:	str	x8, [x21]
    38b4:	ldr	x8, [sp, #176]
    38b8:	cbz	x8, 38d0 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x15a0>
    38bc:	add	x9, sp, #0x8
    38c0:	add	x0, x9, #0x98
    38c4:	mov	w2, #0x3                   	// #3
    38c8:	mov	x1, x0
    38cc:	blr	x8
    38d0:	ldr	w8, [sp, #24]
    38d4:	ldr	x20, [sp, #16]
    38d8:	add	x9, sp, #0x8
    38dc:	add	x25, x9, #0x8
    38e0:	cbz	w8, 3934 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1604>
    38e4:	lsl	x26, x8, #6
    38e8:	b	38f4 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x15c4>
    38ec:	subs	x26, x26, #0x40
    38f0:	b.eq	3930 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1600>  // b.none
    38f4:	add	x27, x20, x26
    38f8:	ldur	x8, [x27, #-16]
    38fc:	cbz	x8, 3910 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x15e0>
    3900:	sub	x0, x27, #0x20
    3904:	mov	w2, #0x3                   	// #3
    3908:	mov	x1, x0
    390c:	blr	x8
    3910:	ldur	x8, [x27, #-48]
    3914:	cbz	x8, 38ec <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x15bc>
    3918:	add	x9, x20, x26
    391c:	sub	x0, x9, #0x40
    3920:	mov	w2, #0x3                   	// #3
    3924:	mov	x1, x0
    3928:	blr	x8
    392c:	b	38ec <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x15bc>
    3930:	ldr	x20, [sp, #16]
    3934:	add	x8, x25, #0x10
    3938:	cmp	x20, x8
    393c:	b.eq	3948 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1618>  // b.none
    3940:	mov	x0, x20
    3944:	bl	0 <free>
    3948:	add	x8, sp, #0x8
    394c:	mov	w0, #0x1                   	// #1
    3950:	mov	w1, #0x36                  	// #54
    3954:	mov	w2, #0xe                   	// #14
    3958:	bl	1fc0 <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE>
    395c:	ldr	x20, [x21]
    3960:	ldr	x8, [x24]
    3964:	cmp	x20, x8
    3968:	b.eq	3dcc <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1a9c>  // b.none
    396c:	ldr	w8, [sp, #8]
    3970:	ldr	d0, [x23]
    3974:	add	x9, x20, #0x18
    3978:	mov	x0, x20
    397c:	str	w8, [x20]
    3980:	str	x9, [x0, #8]!
    3984:	str	d0, [x20, #16]
    3988:	ldr	w8, [sp, #24]
    398c:	cbz	w8, 399c <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x166c>
    3990:	add	x8, sp, #0x8
    3994:	add	x1, x8, #0x8
    3998:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    399c:	str	xzr, [x20, #168]
    39a0:	ldur	q0, [x22, #152]
    39a4:	stur	q0, [x22, #184]
    39a8:	ldur	q1, [x20, #152]
    39ac:	stur	q1, [x22, #152]
    39b0:	stur	q0, [x20, #152]
    39b4:	ldr	x8, [sp, #176]
    39b8:	str	xzr, [sp, #176]
    39bc:	ldr	x9, [x20, #176]
    39c0:	str	x8, [x20, #168]
    39c4:	ldr	x8, [sp, #184]
    39c8:	str	x9, [sp, #184]
    39cc:	str	x8, [x20, #176]
    39d0:	ldr	x8, [x21]
    39d4:	add	x8, x8, #0xb8
    39d8:	str	x8, [x21]
    39dc:	ldr	x8, [sp, #176]
    39e0:	cbz	x8, 39f8 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x16c8>
    39e4:	add	x9, sp, #0x8
    39e8:	add	x0, x9, #0x98
    39ec:	mov	w2, #0x3                   	// #3
    39f0:	mov	x1, x0
    39f4:	blr	x8
    39f8:	ldr	w8, [sp, #24]
    39fc:	ldr	x20, [sp, #16]
    3a00:	add	x9, sp, #0x8
    3a04:	add	x25, x9, #0x8
    3a08:	cbz	w8, 3a5c <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x172c>
    3a0c:	lsl	x26, x8, #6
    3a10:	b	3a1c <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x16ec>
    3a14:	subs	x26, x26, #0x40
    3a18:	b.eq	3a58 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1728>  // b.none
    3a1c:	add	x27, x20, x26
    3a20:	ldur	x8, [x27, #-16]
    3a24:	cbz	x8, 3a38 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1708>
    3a28:	sub	x0, x27, #0x20
    3a2c:	mov	w2, #0x3                   	// #3
    3a30:	mov	x1, x0
    3a34:	blr	x8
    3a38:	ldur	x8, [x27, #-48]
    3a3c:	cbz	x8, 3a14 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x16e4>
    3a40:	add	x9, x20, x26
    3a44:	sub	x0, x9, #0x40
    3a48:	mov	w2, #0x3                   	// #3
    3a4c:	mov	x1, x0
    3a50:	blr	x8
    3a54:	b	3a14 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x16e4>
    3a58:	ldr	x20, [sp, #16]
    3a5c:	add	x8, x25, #0x10
    3a60:	cmp	x20, x8
    3a64:	b.eq	3a70 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1740>  // b.none
    3a68:	mov	x0, x20
    3a6c:	bl	0 <free>
    3a70:	add	x8, sp, #0x8
    3a74:	mov	w0, #0x1                   	// #1
    3a78:	mov	w1, #0x36                  	// #54
    3a7c:	mov	w2, #0xf                   	// #15
    3a80:	bl	1fc0 <_ZN4llvm8fuzzerop15cmpOpDescriptorEjNS_11Instruction8OtherOpsENS_7CmpInst9PredicateE>
    3a84:	ldr	x20, [x21]
    3a88:	ldr	x8, [x24]
    3a8c:	cmp	x20, x8
    3a90:	b.eq	3de8 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1ab8>  // b.none
    3a94:	ldr	w8, [sp, #8]
    3a98:	ldr	d0, [x23]
    3a9c:	add	x9, x20, #0x18
    3aa0:	mov	x0, x20
    3aa4:	str	w8, [x20]
    3aa8:	str	x9, [x0, #8]!
    3aac:	str	d0, [x20, #16]
    3ab0:	ldr	w8, [sp, #24]
    3ab4:	cbz	w8, 3ac4 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1794>
    3ab8:	add	x8, sp, #0x8
    3abc:	add	x1, x8, #0x8
    3ac0:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    3ac4:	str	xzr, [x20, #168]
    3ac8:	ldur	q0, [x22, #152]
    3acc:	stur	q0, [x22, #184]
    3ad0:	ldur	q1, [x20, #152]
    3ad4:	stur	q1, [x22, #152]
    3ad8:	stur	q0, [x20, #152]
    3adc:	ldr	x8, [sp, #176]
    3ae0:	str	xzr, [sp, #176]
    3ae4:	ldr	x9, [x20, #176]
    3ae8:	str	x8, [x20, #168]
    3aec:	ldr	x8, [sp, #184]
    3af0:	str	x9, [sp, #184]
    3af4:	str	x8, [x20, #176]
    3af8:	ldr	x8, [x21]
    3afc:	add	x8, x8, #0xb8
    3b00:	str	x8, [x21]
    3b04:	ldr	x8, [sp, #176]
    3b08:	cbz	x8, 3b20 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x17f0>
    3b0c:	add	x9, sp, #0x8
    3b10:	add	x0, x9, #0x98
    3b14:	mov	w2, #0x3                   	// #3
    3b18:	mov	x1, x0
    3b1c:	blr	x8
    3b20:	ldr	w8, [sp, #24]
    3b24:	ldr	x19, [sp, #16]
    3b28:	add	x9, sp, #0x8
    3b2c:	add	x20, x9, #0x8
    3b30:	cbz	w8, 3b84 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1854>
    3b34:	lsl	x21, x8, #6
    3b38:	b	3b44 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1814>
    3b3c:	subs	x21, x21, #0x40
    3b40:	b.eq	3b80 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1850>  // b.none
    3b44:	add	x22, x19, x21
    3b48:	ldur	x8, [x22, #-16]
    3b4c:	cbz	x8, 3b60 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1830>
    3b50:	sub	x0, x22, #0x20
    3b54:	mov	w2, #0x3                   	// #3
    3b58:	mov	x1, x0
    3b5c:	blr	x8
    3b60:	ldur	x8, [x22, #-48]
    3b64:	cbz	x8, 3b3c <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x180c>
    3b68:	add	x9, x19, x21
    3b6c:	sub	x0, x9, #0x40
    3b70:	mov	w2, #0x3                   	// #3
    3b74:	mov	x1, x0
    3b78:	blr	x8
    3b7c:	b	3b3c <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x180c>
    3b80:	ldr	x19, [sp, #16]
    3b84:	add	x8, x20, #0x10
    3b88:	cmp	x19, x8
    3b8c:	b.eq	3b98 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1868>  // b.none
    3b90:	mov	x0, x19
    3b94:	bl	0 <free>
    3b98:	ldp	x20, x19, [sp, #288]
    3b9c:	ldp	x22, x21, [sp, #272]
    3ba0:	ldp	x24, x23, [sp, #256]
    3ba4:	ldp	x26, x25, [sp, #240]
    3ba8:	ldp	x28, x27, [sp, #224]
    3bac:	ldp	x29, x30, [sp, #208]
    3bb0:	add	sp, sp, #0x130
    3bb4:	ret
    3bb8:	add	x2, sp, #0x8
    3bbc:	mov	x0, x19
    3bc0:	mov	x1, x20
    3bc4:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    3bc8:	ldr	x8, [sp, #176]
    3bcc:	cbnz	x8, 23fc <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xcc>
    3bd0:	b	2410 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xe0>
    3bd4:	add	x2, sp, #0x8
    3bd8:	mov	x0, x19
    3bdc:	mov	x1, x20
    3be0:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    3be4:	ldr	x8, [sp, #176]
    3be8:	cbnz	x8, 2520 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1f0>
    3bec:	b	2534 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x204>
    3bf0:	add	x2, sp, #0x8
    3bf4:	mov	x0, x19
    3bf8:	mov	x1, x20
    3bfc:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    3c00:	ldr	x8, [sp, #176]
    3c04:	cbnz	x8, 2644 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x314>
    3c08:	b	2658 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x328>
    3c0c:	add	x2, sp, #0x8
    3c10:	mov	x0, x19
    3c14:	mov	x1, x20
    3c18:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    3c1c:	ldr	x8, [sp, #176]
    3c20:	cbnz	x8, 2768 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x438>
    3c24:	b	277c <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x44c>
    3c28:	add	x2, sp, #0x8
    3c2c:	mov	x0, x19
    3c30:	mov	x1, x20
    3c34:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    3c38:	ldr	x8, [sp, #176]
    3c3c:	cbnz	x8, 288c <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x55c>
    3c40:	b	28a0 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x570>
    3c44:	add	x2, sp, #0x8
    3c48:	mov	x0, x19
    3c4c:	mov	x1, x20
    3c50:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    3c54:	ldr	x8, [sp, #176]
    3c58:	cbnz	x8, 29b4 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x684>
    3c5c:	b	29c8 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x698>
    3c60:	add	x2, sp, #0x8
    3c64:	mov	x0, x19
    3c68:	mov	x1, x20
    3c6c:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    3c70:	ldr	x8, [sp, #176]
    3c74:	cbnz	x8, 2adc <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x7ac>
    3c78:	b	2af0 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x7c0>
    3c7c:	add	x2, sp, #0x8
    3c80:	mov	x0, x19
    3c84:	mov	x1, x20
    3c88:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    3c8c:	ldr	x8, [sp, #176]
    3c90:	cbnz	x8, 2c04 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x8d4>
    3c94:	b	2c18 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x8e8>
    3c98:	add	x2, sp, #0x8
    3c9c:	mov	x0, x19
    3ca0:	mov	x1, x20
    3ca4:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    3ca8:	ldr	x8, [sp, #176]
    3cac:	cbnz	x8, 2d2c <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x9fc>
    3cb0:	b	2d40 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xa10>
    3cb4:	add	x2, sp, #0x8
    3cb8:	mov	x0, x19
    3cbc:	mov	x1, x20
    3cc0:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    3cc4:	ldr	x8, [sp, #176]
    3cc8:	cbnz	x8, 2e54 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xb24>
    3ccc:	b	2e68 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xb38>
    3cd0:	add	x2, sp, #0x8
    3cd4:	mov	x0, x19
    3cd8:	mov	x1, x20
    3cdc:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    3ce0:	ldr	x8, [sp, #176]
    3ce4:	cbnz	x8, 2f7c <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xc4c>
    3ce8:	b	2f90 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xc60>
    3cec:	add	x2, sp, #0x8
    3cf0:	mov	x0, x19
    3cf4:	mov	x1, x20
    3cf8:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    3cfc:	ldr	x8, [sp, #176]
    3d00:	cbnz	x8, 30a4 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xd74>
    3d04:	b	30b8 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xd88>
    3d08:	add	x2, sp, #0x8
    3d0c:	mov	x0, x19
    3d10:	mov	x1, x20
    3d14:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    3d18:	ldr	x8, [sp, #176]
    3d1c:	cbnz	x8, 31cc <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xe9c>
    3d20:	b	31e0 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xeb0>
    3d24:	add	x2, sp, #0x8
    3d28:	mov	x0, x19
    3d2c:	mov	x1, x20
    3d30:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    3d34:	ldr	x8, [sp, #176]
    3d38:	cbnz	x8, 32f4 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xfc4>
    3d3c:	b	3308 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xfd8>
    3d40:	add	x2, sp, #0x8
    3d44:	mov	x0, x19
    3d48:	mov	x1, x20
    3d4c:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    3d50:	ldr	x8, [sp, #176]
    3d54:	cbnz	x8, 341c <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x10ec>
    3d58:	b	3430 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1100>
    3d5c:	add	x2, sp, #0x8
    3d60:	mov	x0, x19
    3d64:	mov	x1, x20
    3d68:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    3d6c:	ldr	x8, [sp, #176]
    3d70:	cbnz	x8, 3544 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1214>
    3d74:	b	3558 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1228>
    3d78:	add	x2, sp, #0x8
    3d7c:	mov	x0, x19
    3d80:	mov	x1, x20
    3d84:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    3d88:	ldr	x8, [sp, #176]
    3d8c:	cbnz	x8, 366c <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x133c>
    3d90:	b	3680 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1350>
    3d94:	add	x2, sp, #0x8
    3d98:	mov	x0, x19
    3d9c:	mov	x1, x20
    3da0:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    3da4:	ldr	x8, [sp, #176]
    3da8:	cbnz	x8, 3794 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1464>
    3dac:	b	37a8 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1478>
    3db0:	add	x2, sp, #0x8
    3db4:	mov	x0, x19
    3db8:	mov	x1, x20
    3dbc:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    3dc0:	ldr	x8, [sp, #176]
    3dc4:	cbnz	x8, 38bc <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x158c>
    3dc8:	b	38d0 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x15a0>
    3dcc:	add	x2, sp, #0x8
    3dd0:	mov	x0, x19
    3dd4:	mov	x1, x20
    3dd8:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    3ddc:	ldr	x8, [sp, #176]
    3de0:	cbnz	x8, 39e4 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x16b4>
    3de4:	b	39f8 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x16c8>
    3de8:	add	x2, sp, #0x8
    3dec:	mov	x0, x19
    3df0:	mov	x1, x20
    3df4:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    3df8:	ldr	x8, [sp, #176]
    3dfc:	cbnz	x8, 3b0c <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x17dc>
    3e00:	b	3b20 <_ZN4llvm22describeFuzzerFloatOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x17f0>

0000000000003e04 <_ZN4llvm28describeFuzzerControlFlowOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>:
    3e04:	sub	sp, sp, #0x100
    3e08:	stp	x29, x30, [sp, #208]
    3e0c:	stp	x22, x21, [sp, #224]
    3e10:	stp	x20, x19, [sp, #240]
    3e14:	add	x29, sp, #0xd0
    3e18:	mov	x19, x0
    3e1c:	add	x8, sp, #0x8
    3e20:	mov	w0, #0x1                   	// #1
    3e24:	bl	3f70 <_ZN4llvm8fuzzerop20splitBlockDescriptorEj>
    3e28:	ldp	x20, x8, [x19, #8]
    3e2c:	cmp	x20, x8
    3e30:	b.eq	3f54 <_ZN4llvm28describeFuzzerControlFlowOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x150>  // b.none
    3e34:	adrp	x9, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    3e38:	ldr	w8, [sp, #8]
    3e3c:	ldr	d0, [x9]
    3e40:	add	x9, x20, #0x18
    3e44:	mov	x0, x20
    3e48:	str	w8, [x20]
    3e4c:	str	x9, [x0, #8]!
    3e50:	str	d0, [x20, #16]
    3e54:	ldr	w8, [sp, #24]
    3e58:	add	x21, sp, #0x8
    3e5c:	cbz	w8, 3e6c <_ZN4llvm28describeFuzzerControlFlowOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x68>
    3e60:	add	x8, sp, #0x8
    3e64:	add	x1, x8, #0x8
    3e68:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    3e6c:	str	xzr, [x20, #168]
    3e70:	ldur	q0, [x21, #152]
    3e74:	stur	q0, [x21, #184]
    3e78:	ldur	q1, [x20, #152]
    3e7c:	stur	q1, [x21, #152]
    3e80:	stur	q0, [x20, #152]
    3e84:	ldr	x8, [sp, #176]
    3e88:	str	xzr, [sp, #176]
    3e8c:	ldr	x9, [x20, #176]
    3e90:	str	x8, [x20, #168]
    3e94:	ldr	x8, [sp, #184]
    3e98:	str	x9, [sp, #184]
    3e9c:	str	x8, [x20, #176]
    3ea0:	ldr	x8, [x19, #8]
    3ea4:	add	x8, x8, #0xb8
    3ea8:	str	x8, [x19, #8]
    3eac:	ldr	x8, [sp, #176]
    3eb0:	cbz	x8, 3ec8 <_ZN4llvm28describeFuzzerControlFlowOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xc4>
    3eb4:	add	x9, sp, #0x8
    3eb8:	add	x0, x9, #0x98
    3ebc:	mov	w2, #0x3                   	// #3
    3ec0:	mov	x1, x0
    3ec4:	blr	x8
    3ec8:	ldr	w8, [sp, #24]
    3ecc:	ldr	x19, [sp, #16]
    3ed0:	add	x9, sp, #0x8
    3ed4:	add	x20, x9, #0x8
    3ed8:	cbz	w8, 3f2c <_ZN4llvm28describeFuzzerControlFlowOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x128>
    3edc:	lsl	x21, x8, #6
    3ee0:	b	3eec <_ZN4llvm28describeFuzzerControlFlowOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xe8>
    3ee4:	subs	x21, x21, #0x40
    3ee8:	b.eq	3f28 <_ZN4llvm28describeFuzzerControlFlowOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x124>  // b.none
    3eec:	add	x22, x19, x21
    3ef0:	ldur	x8, [x22, #-16]
    3ef4:	cbz	x8, 3f08 <_ZN4llvm28describeFuzzerControlFlowOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x104>
    3ef8:	sub	x0, x22, #0x20
    3efc:	mov	w2, #0x3                   	// #3
    3f00:	mov	x1, x0
    3f04:	blr	x8
    3f08:	ldur	x8, [x22, #-48]
    3f0c:	cbz	x8, 3ee4 <_ZN4llvm28describeFuzzerControlFlowOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xe0>
    3f10:	add	x9, x19, x21
    3f14:	sub	x0, x9, #0x40
    3f18:	mov	w2, #0x3                   	// #3
    3f1c:	mov	x1, x0
    3f20:	blr	x8
    3f24:	b	3ee4 <_ZN4llvm28describeFuzzerControlFlowOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xe0>
    3f28:	ldr	x19, [sp, #16]
    3f2c:	add	x8, x20, #0x10
    3f30:	cmp	x19, x8
    3f34:	b.eq	3f40 <_ZN4llvm28describeFuzzerControlFlowOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x13c>  // b.none
    3f38:	mov	x0, x19
    3f3c:	bl	0 <free>
    3f40:	ldp	x20, x19, [sp, #240]
    3f44:	ldp	x22, x21, [sp, #224]
    3f48:	ldp	x29, x30, [sp, #208]
    3f4c:	add	sp, sp, #0x100
    3f50:	ret
    3f54:	add	x2, sp, #0x8
    3f58:	mov	x0, x19
    3f5c:	mov	x1, x20
    3f60:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    3f64:	ldr	x8, [sp, #176]
    3f68:	cbnz	x8, 3eb4 <_ZN4llvm28describeFuzzerControlFlowOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xb0>
    3f6c:	b	3ec8 <_ZN4llvm28describeFuzzerControlFlowOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xc4>

0000000000003f70 <_ZN4llvm8fuzzerop20splitBlockDescriptorEj>:
    3f70:	sub	sp, sp, #0xd0
    3f74:	stp	x29, x30, [sp, #160]
    3f78:	str	x21, [sp, #176]
    3f7c:	stp	x20, x19, [sp, #192]
    3f80:	add	x29, sp, #0xa0
    3f84:	mov	x19, x8
    3f88:	adrp	x8, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    3f8c:	adrp	x9, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    3f90:	mov	w20, w0
    3f94:	add	x8, x8, #0x0
    3f98:	add	x9, x9, #0x0
    3f9c:	sub	x0, x29, #0x40
    3fa0:	add	x1, sp, #0x40
    3fa4:	mov	w2, #0x1                   	// #1
    3fa8:	stp	x9, x8, [sp, #80]
    3fac:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    3fb0:	ldr	x8, [sp, #80]
    3fb4:	cbz	x8, 3fc8 <_ZN4llvm8fuzzerop20splitBlockDescriptorEj+0x58>
    3fb8:	add	x0, sp, #0x40
    3fbc:	add	x1, sp, #0x40
    3fc0:	mov	w2, #0x3                   	// #3
    3fc4:	blr	x8
    3fc8:	ldur	x8, [x29, #-48]
    3fcc:	mov	x21, x19
    3fd0:	str	w20, [x21], #8
    3fd4:	str	xzr, [sp, #16]
    3fd8:	cbz	x8, 412c <_ZN4llvm8fuzzerop20splitBlockDescriptorEj+0x1bc>
    3fdc:	mov	x0, sp
    3fe0:	sub	x1, x29, #0x40
    3fe4:	mov	w2, #0x2                   	// #2
    3fe8:	blr	x8
    3fec:	ldur	q0, [x29, #-48]
    3ff0:	fmov	x9, d0
    3ff4:	str	q0, [sp, #16]
    3ff8:	ldur	x8, [x29, #-16]
    3ffc:	str	xzr, [sp, #48]
    4000:	cbz	x8, 402c <_ZN4llvm8fuzzerop20splitBlockDescriptorEj+0xbc>
    4004:	mov	x9, sp
    4008:	sub	x10, x29, #0x40
    400c:	add	x0, x9, #0x20
    4010:	add	x1, x10, #0x20
    4014:	mov	w2, #0x2                   	// #2
    4018:	blr	x8
    401c:	ldur	q0, [x29, #-16]
    4020:	ldr	x9, [sp, #16]
    4024:	fmov	x8, d0
    4028:	str	q0, [sp, #48]
    402c:	adrp	x10, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    4030:	ldr	d0, [x10]
    4034:	add	x20, x21, #0x10
    4038:	str	x20, [x19, #8]
    403c:	str	xzr, [x19, #40]
    4040:	str	d0, [x19, #16]
    4044:	cbz	x9, 4064 <_ZN4llvm8fuzzerop20splitBlockDescriptorEj+0xf4>
    4048:	mov	x1, sp
    404c:	mov	w2, #0x2                   	// #2
    4050:	mov	x0, x20
    4054:	blr	x9
    4058:	ldr	q0, [sp, #16]
    405c:	ldr	x8, [sp, #48]
    4060:	str	q0, [x20, #16]
    4064:	str	xzr, [x20, #48]
    4068:	cbz	x8, 408c <_ZN4llvm8fuzzerop20splitBlockDescriptorEj+0x11c>
    406c:	mov	x9, sp
    4070:	add	x1, x9, #0x20
    4074:	add	x0, x20, #0x20
    4078:	mov	w2, #0x2                   	// #2
    407c:	blr	x8
    4080:	ldr	q0, [sp, #48]
    4084:	fmov	x8, d0
    4088:	str	q0, [x20, #48]
    408c:	ldp	w9, w10, [x19, #16]
    4090:	cmp	w9, w10
    4094:	b.cs	4140 <_ZN4llvm8fuzzerop20splitBlockDescriptorEj+0x1d0>  // b.hs, b.nlast
    4098:	adrp	x10, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    409c:	adrp	x11, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    40a0:	add	w9, w9, #0x1
    40a4:	add	x10, x10, #0x0
    40a8:	add	x11, x11, #0x0
    40ac:	str	w9, [x19, #16]
    40b0:	stp	x11, x10, [x19, #168]
    40b4:	cbz	x8, 40cc <_ZN4llvm8fuzzerop20splitBlockDescriptorEj+0x15c>
    40b8:	mov	x9, sp
    40bc:	add	x0, x9, #0x20
    40c0:	mov	w2, #0x3                   	// #3
    40c4:	mov	x1, x0
    40c8:	blr	x8
    40cc:	ldr	x8, [sp, #16]
    40d0:	cbz	x8, 40e4 <_ZN4llvm8fuzzerop20splitBlockDescriptorEj+0x174>
    40d4:	mov	x0, sp
    40d8:	mov	x1, sp
    40dc:	mov	w2, #0x3                   	// #3
    40e0:	blr	x8
    40e4:	ldur	x8, [x29, #-16]
    40e8:	cbz	x8, 4100 <_ZN4llvm8fuzzerop20splitBlockDescriptorEj+0x190>
    40ec:	sub	x9, x29, #0x40
    40f0:	add	x0, x9, #0x20
    40f4:	mov	w2, #0x3                   	// #3
    40f8:	mov	x1, x0
    40fc:	blr	x8
    4100:	ldur	x8, [x29, #-48]
    4104:	cbz	x8, 4118 <_ZN4llvm8fuzzerop20splitBlockDescriptorEj+0x1a8>
    4108:	sub	x0, x29, #0x40
    410c:	sub	x1, x29, #0x40
    4110:	mov	w2, #0x3                   	// #3
    4114:	blr	x8
    4118:	ldp	x20, x19, [sp, #192]
    411c:	ldr	x21, [sp, #176]
    4120:	ldp	x29, x30, [sp, #160]
    4124:	add	sp, sp, #0xd0
    4128:	ret
    412c:	mov	x9, xzr
    4130:	ldur	x8, [x29, #-16]
    4134:	str	xzr, [sp, #48]
    4138:	cbnz	x8, 4004 <_ZN4llvm8fuzzerop20splitBlockDescriptorEj+0x94>
    413c:	b	402c <_ZN4llvm8fuzzerop20splitBlockDescriptorEj+0xbc>
    4140:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    4144:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    4148:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    414c:	add	x0, x0, #0x0
    4150:	add	x1, x1, #0x0
    4154:	add	x3, x3, #0x0
    4158:	mov	w2, #0x43                  	// #67
    415c:	bl	0 <__assert_fail>

0000000000004160 <_ZN4llvm24describeFuzzerPointerOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>:
    4160:	sub	sp, sp, #0x100
    4164:	stp	x29, x30, [sp, #208]
    4168:	stp	x22, x21, [sp, #224]
    416c:	stp	x20, x19, [sp, #240]
    4170:	add	x29, sp, #0xd0
    4174:	mov	x19, x0
    4178:	add	x8, sp, #0x8
    417c:	mov	w0, #0x1                   	// #1
    4180:	bl	42cc <_ZN4llvm8fuzzerop13gepDescriptorEj>
    4184:	ldp	x20, x8, [x19, #8]
    4188:	cmp	x20, x8
    418c:	b.eq	42b0 <_ZN4llvm24describeFuzzerPointerOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x150>  // b.none
    4190:	adrp	x9, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    4194:	ldr	w8, [sp, #8]
    4198:	ldr	d0, [x9]
    419c:	add	x9, x20, #0x18
    41a0:	mov	x0, x20
    41a4:	str	w8, [x20]
    41a8:	str	x9, [x0, #8]!
    41ac:	str	d0, [x20, #16]
    41b0:	ldr	w8, [sp, #24]
    41b4:	add	x21, sp, #0x8
    41b8:	cbz	w8, 41c8 <_ZN4llvm24describeFuzzerPointerOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x68>
    41bc:	add	x8, sp, #0x8
    41c0:	add	x1, x8, #0x8
    41c4:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    41c8:	str	xzr, [x20, #168]
    41cc:	ldur	q0, [x21, #152]
    41d0:	stur	q0, [x21, #184]
    41d4:	ldur	q1, [x20, #152]
    41d8:	stur	q1, [x21, #152]
    41dc:	stur	q0, [x20, #152]
    41e0:	ldr	x8, [sp, #176]
    41e4:	str	xzr, [sp, #176]
    41e8:	ldr	x9, [x20, #176]
    41ec:	str	x8, [x20, #168]
    41f0:	ldr	x8, [sp, #184]
    41f4:	str	x9, [sp, #184]
    41f8:	str	x8, [x20, #176]
    41fc:	ldr	x8, [x19, #8]
    4200:	add	x8, x8, #0xb8
    4204:	str	x8, [x19, #8]
    4208:	ldr	x8, [sp, #176]
    420c:	cbz	x8, 4224 <_ZN4llvm24describeFuzzerPointerOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xc4>
    4210:	add	x9, sp, #0x8
    4214:	add	x0, x9, #0x98
    4218:	mov	w2, #0x3                   	// #3
    421c:	mov	x1, x0
    4220:	blr	x8
    4224:	ldr	w8, [sp, #24]
    4228:	ldr	x19, [sp, #16]
    422c:	add	x9, sp, #0x8
    4230:	add	x20, x9, #0x8
    4234:	cbz	w8, 4288 <_ZN4llvm24describeFuzzerPointerOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x128>
    4238:	lsl	x21, x8, #6
    423c:	b	4248 <_ZN4llvm24describeFuzzerPointerOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xe8>
    4240:	subs	x21, x21, #0x40
    4244:	b.eq	4284 <_ZN4llvm24describeFuzzerPointerOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x124>  // b.none
    4248:	add	x22, x19, x21
    424c:	ldur	x8, [x22, #-16]
    4250:	cbz	x8, 4264 <_ZN4llvm24describeFuzzerPointerOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x104>
    4254:	sub	x0, x22, #0x20
    4258:	mov	w2, #0x3                   	// #3
    425c:	mov	x1, x0
    4260:	blr	x8
    4264:	ldur	x8, [x22, #-48]
    4268:	cbz	x8, 4240 <_ZN4llvm24describeFuzzerPointerOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xe0>
    426c:	add	x9, x19, x21
    4270:	sub	x0, x9, #0x40
    4274:	mov	w2, #0x3                   	// #3
    4278:	mov	x1, x0
    427c:	blr	x8
    4280:	b	4240 <_ZN4llvm24describeFuzzerPointerOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xe0>
    4284:	ldr	x19, [sp, #16]
    4288:	add	x8, x20, #0x10
    428c:	cmp	x19, x8
    4290:	b.eq	429c <_ZN4llvm24describeFuzzerPointerOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x13c>  // b.none
    4294:	mov	x0, x19
    4298:	bl	0 <free>
    429c:	ldp	x20, x19, [sp, #240]
    42a0:	ldp	x22, x21, [sp, #224]
    42a4:	ldp	x29, x30, [sp, #208]
    42a8:	add	sp, sp, #0x100
    42ac:	ret
    42b0:	add	x2, sp, #0x8
    42b4:	mov	x0, x19
    42b8:	mov	x1, x20
    42bc:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    42c0:	ldr	x8, [sp, #176]
    42c4:	cbnz	x8, 4210 <_ZN4llvm24describeFuzzerPointerOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xb0>
    42c8:	b	4224 <_ZN4llvm24describeFuzzerPointerOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xc4>

00000000000042cc <_ZN4llvm8fuzzerop13gepDescriptorEj>:
    42cc:	sub	sp, sp, #0xc0
    42d0:	stp	x29, x30, [sp, #160]
    42d4:	stp	x20, x19, [sp, #176]
    42d8:	add	x29, sp, #0xa0
    42dc:	mov	x19, x8
    42e0:	mov	x20, x8
    42e4:	adrp	x8, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    42e8:	adrp	x9, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    42ec:	add	x8, x8, #0x0
    42f0:	add	x9, x9, #0x0
    42f4:	adrp	x10, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    42f8:	adrp	x11, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    42fc:	mov	x12, sp
    4300:	stp	x9, x8, [sp, #16]
    4304:	adrp	x8, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    4308:	adrp	x9, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    430c:	add	x10, x10, #0x0
    4310:	add	x11, x11, #0x0
    4314:	str	w0, [x20], #8
    4318:	add	x8, x8, #0x0
    431c:	add	x9, x9, #0x0
    4320:	add	x0, x12, #0x40
    4324:	sub	x1, x29, #0x20
    4328:	mov	w2, #0x1                   	// #1
    432c:	stp	x11, x10, [sp, #48]
    4330:	stp	x9, x8, [x29, #-16]
    4334:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    4338:	ldur	x8, [x29, #-16]
    433c:	cbz	x8, 4350 <_ZN4llvm8fuzzerop13gepDescriptorEj+0x84>
    4340:	sub	x0, x29, #0x20
    4344:	sub	x1, x29, #0x20
    4348:	mov	w2, #0x3                   	// #3
    434c:	blr	x8
    4350:	adrp	x8, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    4354:	ldr	d0, [x8]
    4358:	ldr	x8, [sp, #16]
    435c:	add	x20, x20, #0x10
    4360:	str	x20, [x19, #8]
    4364:	str	d0, [x19, #16]
    4368:	str	xzr, [x19, #40]
    436c:	cbz	x8, 4388 <_ZN4llvm8fuzzerop13gepDescriptorEj+0xbc>
    4370:	mov	x1, sp
    4374:	mov	w2, #0x2                   	// #2
    4378:	mov	x0, x20
    437c:	blr	x8
    4380:	ldr	q0, [sp, #16]
    4384:	str	q0, [x20, #16]
    4388:	ldr	x8, [sp, #48]
    438c:	str	xzr, [x20, #48]
    4390:	cbz	x8, 43b0 <_ZN4llvm8fuzzerop13gepDescriptorEj+0xe4>
    4394:	mov	x9, sp
    4398:	add	x0, x20, #0x20
    439c:	add	x1, x9, #0x20
    43a0:	mov	w2, #0x2                   	// #2
    43a4:	blr	x8
    43a8:	ldr	q0, [sp, #48]
    43ac:	str	q0, [x20, #48]
    43b0:	ldr	x8, [sp, #80]
    43b4:	str	xzr, [x20, #80]
    43b8:	cbz	x8, 43d8 <_ZN4llvm8fuzzerop13gepDescriptorEj+0x10c>
    43bc:	mov	x9, sp
    43c0:	add	x0, x20, #0x40
    43c4:	add	x1, x9, #0x40
    43c8:	mov	w2, #0x2                   	// #2
    43cc:	blr	x8
    43d0:	ldr	q0, [sp, #80]
    43d4:	str	q0, [x20, #80]
    43d8:	ldr	x8, [sp, #112]
    43dc:	str	xzr, [x20, #112]
    43e0:	cbz	x8, 4404 <_ZN4llvm8fuzzerop13gepDescriptorEj+0x138>
    43e4:	mov	x9, sp
    43e8:	add	x0, x20, #0x60
    43ec:	add	x1, x9, #0x60
    43f0:	mov	w2, #0x2                   	// #2
    43f4:	blr	x8
    43f8:	ldr	q0, [sp, #112]
    43fc:	fmov	x8, d0
    4400:	str	q0, [x20, #112]
    4404:	ldp	w9, w10, [x19, #16]
    4408:	add	x9, x9, #0x2
    440c:	cmp	x9, x10
    4410:	b.hi	44a4 <_ZN4llvm8fuzzerop13gepDescriptorEj+0x1d8>  // b.pmore
    4414:	str	w9, [x19, #16]
    4418:	adrp	x9, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    441c:	adrp	x10, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    4420:	add	x9, x9, #0x0
    4424:	add	x10, x10, #0x0
    4428:	stp	x10, x9, [x19, #168]
    442c:	cbz	x8, 4444 <_ZN4llvm8fuzzerop13gepDescriptorEj+0x178>
    4430:	mov	x9, sp
    4434:	add	x0, x9, #0x60
    4438:	mov	w2, #0x3                   	// #3
    443c:	mov	x1, x0
    4440:	blr	x8
    4444:	ldr	x8, [sp, #80]
    4448:	cbz	x8, 4460 <_ZN4llvm8fuzzerop13gepDescriptorEj+0x194>
    444c:	mov	x9, sp
    4450:	add	x0, x9, #0x40
    4454:	mov	w2, #0x3                   	// #3
    4458:	mov	x1, x0
    445c:	blr	x8
    4460:	ldr	x8, [sp, #48]
    4464:	cbz	x8, 447c <_ZN4llvm8fuzzerop13gepDescriptorEj+0x1b0>
    4468:	mov	x9, sp
    446c:	add	x0, x9, #0x20
    4470:	mov	w2, #0x3                   	// #3
    4474:	mov	x1, x0
    4478:	blr	x8
    447c:	ldr	x8, [sp, #16]
    4480:	cbz	x8, 4494 <_ZN4llvm8fuzzerop13gepDescriptorEj+0x1c8>
    4484:	mov	x0, sp
    4488:	mov	x1, sp
    448c:	mov	w2, #0x3                   	// #3
    4490:	blr	x8
    4494:	ldp	x20, x19, [sp, #176]
    4498:	ldp	x29, x30, [sp, #160]
    449c:	add	sp, sp, #0xc0
    44a0:	ret
    44a4:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    44a8:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    44ac:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    44b0:	add	x0, x0, #0x0
    44b4:	add	x1, x1, #0x0
    44b8:	add	x3, x3, #0x0
    44bc:	mov	w2, #0x43                  	// #67
    44c0:	bl	0 <__assert_fail>

00000000000044c4 <_ZN4llvm26describeFuzzerAggregateOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>:
    44c4:	sub	sp, sp, #0x120
    44c8:	stp	x29, x30, [sp, #208]
    44cc:	stp	x28, x25, [sp, #224]
    44d0:	stp	x24, x23, [sp, #240]
    44d4:	stp	x22, x21, [sp, #256]
    44d8:	stp	x20, x19, [sp, #272]
    44dc:	add	x29, sp, #0xd0
    44e0:	mov	x19, x0
    44e4:	add	x8, sp, #0x8
    44e8:	mov	w0, #0x1                   	// #1
    44ec:	add	x21, sp, #0x8
    44f0:	bl	4778 <_ZN4llvm8fuzzerop22extractValueDescriptorEj>
    44f4:	ldp	x20, x8, [x19, #8]
    44f8:	adrp	x22, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    44fc:	cmp	x20, x8
    4500:	b.eq	4740 <_ZN4llvm26describeFuzzerAggregateOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x27c>  // b.none
    4504:	ldr	w8, [sp, #8]
    4508:	ldr	d0, [x22]
    450c:	add	x9, x20, #0x18
    4510:	mov	x0, x20
    4514:	str	w8, [x20]
    4518:	str	x9, [x0, #8]!
    451c:	str	d0, [x20, #16]
    4520:	ldr	w8, [sp, #24]
    4524:	cbz	w8, 4534 <_ZN4llvm26describeFuzzerAggregateOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x70>
    4528:	add	x8, sp, #0x8
    452c:	add	x1, x8, #0x8
    4530:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    4534:	str	xzr, [x20, #168]
    4538:	ldur	q0, [x21, #152]
    453c:	stur	q0, [x21, #184]
    4540:	ldur	q1, [x20, #152]
    4544:	stur	q1, [x21, #152]
    4548:	stur	q0, [x20, #152]
    454c:	ldr	x8, [sp, #176]
    4550:	str	xzr, [sp, #176]
    4554:	ldr	x9, [x20, #176]
    4558:	str	x8, [x20, #168]
    455c:	ldr	x8, [sp, #184]
    4560:	str	x9, [sp, #184]
    4564:	str	x8, [x20, #176]
    4568:	ldr	x8, [x19, #8]
    456c:	add	x8, x8, #0xb8
    4570:	str	x8, [x19, #8]
    4574:	ldr	x8, [sp, #176]
    4578:	cbz	x8, 4590 <_ZN4llvm26describeFuzzerAggregateOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xcc>
    457c:	add	x9, sp, #0x8
    4580:	add	x0, x9, #0x98
    4584:	mov	w2, #0x3                   	// #3
    4588:	mov	x1, x0
    458c:	blr	x8
    4590:	ldr	w8, [sp, #24]
    4594:	ldr	x20, [sp, #16]
    4598:	add	x9, sp, #0x8
    459c:	add	x23, x9, #0x8
    45a0:	cbz	w8, 45f4 <_ZN4llvm26describeFuzzerAggregateOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x130>
    45a4:	lsl	x24, x8, #6
    45a8:	b	45b4 <_ZN4llvm26describeFuzzerAggregateOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xf0>
    45ac:	subs	x24, x24, #0x40
    45b0:	b.eq	45f0 <_ZN4llvm26describeFuzzerAggregateOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x12c>  // b.none
    45b4:	add	x25, x20, x24
    45b8:	ldur	x8, [x25, #-16]
    45bc:	cbz	x8, 45d0 <_ZN4llvm26describeFuzzerAggregateOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x10c>
    45c0:	sub	x0, x25, #0x20
    45c4:	mov	w2, #0x3                   	// #3
    45c8:	mov	x1, x0
    45cc:	blr	x8
    45d0:	ldur	x8, [x25, #-48]
    45d4:	cbz	x8, 45ac <_ZN4llvm26describeFuzzerAggregateOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xe8>
    45d8:	add	x9, x20, x24
    45dc:	sub	x0, x9, #0x40
    45e0:	mov	w2, #0x3                   	// #3
    45e4:	mov	x1, x0
    45e8:	blr	x8
    45ec:	b	45ac <_ZN4llvm26describeFuzzerAggregateOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xe8>
    45f0:	ldr	x20, [sp, #16]
    45f4:	add	x8, x23, #0x10
    45f8:	cmp	x20, x8
    45fc:	b.eq	4608 <_ZN4llvm26describeFuzzerAggregateOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x144>  // b.none
    4600:	mov	x0, x20
    4604:	bl	0 <free>
    4608:	add	x8, sp, #0x8
    460c:	mov	w0, #0x1                   	// #1
    4610:	bl	496c <_ZN4llvm8fuzzerop21insertValueDescriptorEj>
    4614:	ldp	x20, x8, [x19, #8]
    4618:	cmp	x20, x8
    461c:	b.eq	475c <_ZN4llvm26describeFuzzerAggregateOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x298>  // b.none
    4620:	ldr	w8, [sp, #8]
    4624:	ldr	d0, [x22]
    4628:	add	x9, x20, #0x18
    462c:	mov	x0, x20
    4630:	str	w8, [x20]
    4634:	str	x9, [x0, #8]!
    4638:	str	d0, [x20, #16]
    463c:	ldr	w8, [sp, #24]
    4640:	cbz	w8, 4650 <_ZN4llvm26describeFuzzerAggregateOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x18c>
    4644:	add	x8, sp, #0x8
    4648:	add	x1, x8, #0x8
    464c:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    4650:	str	xzr, [x20, #168]
    4654:	ldur	q0, [x21, #152]
    4658:	stur	q0, [x21, #184]
    465c:	ldur	q1, [x20, #152]
    4660:	stur	q1, [x21, #152]
    4664:	stur	q0, [x20, #152]
    4668:	ldr	x8, [sp, #176]
    466c:	str	xzr, [sp, #176]
    4670:	ldr	x9, [x20, #176]
    4674:	str	x8, [x20, #168]
    4678:	ldr	x8, [sp, #184]
    467c:	str	x9, [sp, #184]
    4680:	str	x8, [x20, #176]
    4684:	ldr	x8, [x19, #8]
    4688:	add	x8, x8, #0xb8
    468c:	str	x8, [x19, #8]
    4690:	ldr	x8, [sp, #176]
    4694:	cbz	x8, 46ac <_ZN4llvm26describeFuzzerAggregateOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1e8>
    4698:	add	x9, sp, #0x8
    469c:	add	x0, x9, #0x98
    46a0:	mov	w2, #0x3                   	// #3
    46a4:	mov	x1, x0
    46a8:	blr	x8
    46ac:	ldr	w8, [sp, #24]
    46b0:	ldr	x19, [sp, #16]
    46b4:	add	x9, sp, #0x8
    46b8:	add	x20, x9, #0x8
    46bc:	cbz	w8, 4710 <_ZN4llvm26describeFuzzerAggregateOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x24c>
    46c0:	lsl	x21, x8, #6
    46c4:	b	46d0 <_ZN4llvm26describeFuzzerAggregateOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x20c>
    46c8:	subs	x21, x21, #0x40
    46cc:	b.eq	470c <_ZN4llvm26describeFuzzerAggregateOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x248>  // b.none
    46d0:	add	x22, x19, x21
    46d4:	ldur	x8, [x22, #-16]
    46d8:	cbz	x8, 46ec <_ZN4llvm26describeFuzzerAggregateOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x228>
    46dc:	sub	x0, x22, #0x20
    46e0:	mov	w2, #0x3                   	// #3
    46e4:	mov	x1, x0
    46e8:	blr	x8
    46ec:	ldur	x8, [x22, #-48]
    46f0:	cbz	x8, 46c8 <_ZN4llvm26describeFuzzerAggregateOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x204>
    46f4:	add	x9, x19, x21
    46f8:	sub	x0, x9, #0x40
    46fc:	mov	w2, #0x3                   	// #3
    4700:	mov	x1, x0
    4704:	blr	x8
    4708:	b	46c8 <_ZN4llvm26describeFuzzerAggregateOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x204>
    470c:	ldr	x19, [sp, #16]
    4710:	add	x8, x20, #0x10
    4714:	cmp	x19, x8
    4718:	b.eq	4724 <_ZN4llvm26describeFuzzerAggregateOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x260>  // b.none
    471c:	mov	x0, x19
    4720:	bl	0 <free>
    4724:	ldp	x20, x19, [sp, #272]
    4728:	ldp	x22, x21, [sp, #256]
    472c:	ldp	x24, x23, [sp, #240]
    4730:	ldp	x28, x25, [sp, #224]
    4734:	ldp	x29, x30, [sp, #208]
    4738:	add	sp, sp, #0x120
    473c:	ret
    4740:	add	x2, sp, #0x8
    4744:	mov	x0, x19
    4748:	mov	x1, x20
    474c:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    4750:	ldr	x8, [sp, #176]
    4754:	cbnz	x8, 457c <_ZN4llvm26describeFuzzerAggregateOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xb8>
    4758:	b	4590 <_ZN4llvm26describeFuzzerAggregateOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xcc>
    475c:	add	x2, sp, #0x8
    4760:	mov	x0, x19
    4764:	mov	x1, x20
    4768:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    476c:	ldr	x8, [sp, #176]
    4770:	cbnz	x8, 4698 <_ZN4llvm26describeFuzzerAggregateOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1d4>
    4774:	b	46ac <_ZN4llvm26describeFuzzerAggregateOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1e8>

0000000000004778 <_ZN4llvm8fuzzerop22extractValueDescriptorEj>:
    4778:	sub	sp, sp, #0xc0
    477c:	stp	x29, x30, [sp, #160]
    4780:	stp	x20, x19, [sp, #176]
    4784:	add	x29, sp, #0xa0
    4788:	mov	x19, x8
    478c:	mov	x20, x8
    4790:	adrp	x8, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    4794:	adrp	x9, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    4798:	add	x8, x8, #0x0
    479c:	add	x9, x9, #0x0
    47a0:	str	w0, [x20], #8
    47a4:	mov	x0, sp
    47a8:	sub	x1, x29, #0x20
    47ac:	mov	w2, #0x1                   	// #1
    47b0:	stp	x9, x8, [x29, #-16]
    47b4:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    47b8:	ldur	x8, [x29, #-16]
    47bc:	cbz	x8, 47d0 <_ZN4llvm8fuzzerop22extractValueDescriptorEj+0x58>
    47c0:	sub	x0, x29, #0x20
    47c4:	sub	x1, x29, #0x20
    47c8:	mov	w2, #0x3                   	// #3
    47cc:	blr	x8
    47d0:	adrp	x13, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    47d4:	ldr	x8, [sp, #16]
    47d8:	ldr	d0, [x13]
    47dc:	adrp	x9, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    47e0:	adrp	x10, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    47e4:	adrp	x11, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    47e8:	adrp	x12, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    47ec:	add	x9, x9, #0x0
    47f0:	add	x10, x10, #0x0
    47f4:	add	x11, x11, #0x0
    47f8:	add	x12, x12, #0x0
    47fc:	add	x20, x20, #0x10
    4800:	stp	x10, x9, [sp, #80]
    4804:	stp	x12, x11, [sp, #112]
    4808:	str	x20, [x19, #8]
    480c:	str	d0, [x19, #16]
    4810:	str	xzr, [x19, #40]
    4814:	cbz	x8, 4830 <_ZN4llvm8fuzzerop22extractValueDescriptorEj+0xb8>
    4818:	mov	x1, sp
    481c:	mov	w2, #0x2                   	// #2
    4820:	mov	x0, x20
    4824:	blr	x8
    4828:	ldr	q0, [sp, #16]
    482c:	str	q0, [x20, #16]
    4830:	ldr	x8, [sp, #48]
    4834:	str	xzr, [x20, #48]
    4838:	cbz	x8, 4858 <_ZN4llvm8fuzzerop22extractValueDescriptorEj+0xe0>
    483c:	mov	x9, sp
    4840:	add	x0, x20, #0x20
    4844:	add	x1, x9, #0x20
    4848:	mov	w2, #0x2                   	// #2
    484c:	blr	x8
    4850:	ldr	q0, [sp, #48]
    4854:	str	q0, [x20, #48]
    4858:	ldr	x8, [sp, #80]
    485c:	str	xzr, [x20, #80]
    4860:	cbz	x8, 4880 <_ZN4llvm8fuzzerop22extractValueDescriptorEj+0x108>
    4864:	mov	x9, sp
    4868:	add	x0, x20, #0x40
    486c:	add	x1, x9, #0x40
    4870:	mov	w2, #0x2                   	// #2
    4874:	blr	x8
    4878:	ldr	q0, [sp, #80]
    487c:	str	q0, [x20, #80]
    4880:	ldr	x8, [sp, #112]
    4884:	str	xzr, [x20, #112]
    4888:	cbz	x8, 48ac <_ZN4llvm8fuzzerop22extractValueDescriptorEj+0x134>
    488c:	mov	x9, sp
    4890:	add	x0, x20, #0x60
    4894:	add	x1, x9, #0x60
    4898:	mov	w2, #0x2                   	// #2
    489c:	blr	x8
    48a0:	ldr	q0, [sp, #112]
    48a4:	fmov	x8, d0
    48a8:	str	q0, [x20, #112]
    48ac:	ldp	w9, w10, [x19, #16]
    48b0:	add	x9, x9, #0x2
    48b4:	cmp	x9, x10
    48b8:	b.hi	494c <_ZN4llvm8fuzzerop22extractValueDescriptorEj+0x1d4>  // b.pmore
    48bc:	str	w9, [x19, #16]
    48c0:	adrp	x9, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    48c4:	adrp	x10, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    48c8:	add	x9, x9, #0x0
    48cc:	add	x10, x10, #0x0
    48d0:	stp	x10, x9, [x19, #168]
    48d4:	cbz	x8, 48ec <_ZN4llvm8fuzzerop22extractValueDescriptorEj+0x174>
    48d8:	mov	x9, sp
    48dc:	add	x0, x9, #0x60
    48e0:	mov	w2, #0x3                   	// #3
    48e4:	mov	x1, x0
    48e8:	blr	x8
    48ec:	ldr	x8, [sp, #80]
    48f0:	cbz	x8, 4908 <_ZN4llvm8fuzzerop22extractValueDescriptorEj+0x190>
    48f4:	mov	x9, sp
    48f8:	add	x0, x9, #0x40
    48fc:	mov	w2, #0x3                   	// #3
    4900:	mov	x1, x0
    4904:	blr	x8
    4908:	ldr	x8, [sp, #48]
    490c:	cbz	x8, 4924 <_ZN4llvm8fuzzerop22extractValueDescriptorEj+0x1ac>
    4910:	mov	x9, sp
    4914:	add	x0, x9, #0x20
    4918:	mov	w2, #0x3                   	// #3
    491c:	mov	x1, x0
    4920:	blr	x8
    4924:	ldr	x8, [sp, #16]
    4928:	cbz	x8, 493c <_ZN4llvm8fuzzerop22extractValueDescriptorEj+0x1c4>
    492c:	mov	x0, sp
    4930:	mov	x1, sp
    4934:	mov	w2, #0x3                   	// #3
    4938:	blr	x8
    493c:	ldp	x20, x19, [sp, #176]
    4940:	ldp	x29, x30, [sp, #160]
    4944:	add	sp, sp, #0xc0
    4948:	ret
    494c:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    4950:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    4954:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    4958:	add	x0, x0, #0x0
    495c:	add	x1, x1, #0x0
    4960:	add	x3, x3, #0x0
    4964:	mov	w2, #0x43                  	// #67
    4968:	bl	0 <__assert_fail>

000000000000496c <_ZN4llvm8fuzzerop21insertValueDescriptorEj>:
    496c:	sub	sp, sp, #0x120
    4970:	stp	x29, x30, [sp, #224]
    4974:	stp	x28, x23, [sp, #240]
    4978:	stp	x22, x21, [sp, #256]
    497c:	stp	x20, x19, [sp, #272]
    4980:	add	x29, sp, #0xe0
    4984:	mov	x19, x8
    4988:	mov	x20, x8
    498c:	adrp	x8, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    4990:	adrp	x9, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    4994:	add	x8, x8, #0x0
    4998:	add	x9, x9, #0x0
    499c:	str	w0, [x20], #8
    49a0:	mov	x0, sp
    49a4:	sub	x1, x29, #0x20
    49a8:	mov	w2, #0x1                   	// #1
    49ac:	stp	x9, x8, [x29, #-16]
    49b0:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    49b4:	ldur	x8, [x29, #-16]
    49b8:	cbz	x8, 49cc <_ZN4llvm8fuzzerop21insertValueDescriptorEj+0x60>
    49bc:	sub	x0, x29, #0x20
    49c0:	sub	x1, x29, #0x20
    49c4:	mov	w2, #0x3                   	// #3
    49c8:	blr	x8
    49cc:	adrp	x8, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    49d0:	adrp	x9, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    49d4:	add	x8, x8, #0x0
    49d8:	add	x9, x9, #0x0
    49dc:	adrp	x12, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    49e0:	stp	x9, x8, [sp, #80]
    49e4:	adrp	x8, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    49e8:	add	x12, x12, #0x0
    49ec:	add	x8, x8, #0x0
    49f0:	stp	x8, x12, [sp, #144]
    49f4:	adrp	x8, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    49f8:	ldr	d0, [x8]
    49fc:	adrp	x9, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    4a00:	adrp	x8, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    4a04:	adrp	x10, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    4a08:	adrp	x11, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    4a0c:	add	x9, x9, #0x0
    4a10:	add	x8, x8, #0x0
    4a14:	add	x10, x10, #0x0
    4a18:	add	x11, x11, #0x0
    4a1c:	stp	x8, x9, [sp, #176]
    4a20:	add	x8, x20, #0x10
    4a24:	mov	w1, #0x3                   	// #3
    4a28:	mov	x0, x20
    4a2c:	stp	x11, x10, [sp, #112]
    4a30:	str	x8, [x19, #8]
    4a34:	str	d0, [x19, #16]
    4a38:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    4a3c:	ldr	w21, [x19, #16]
    4a40:	ldr	x22, [x19, #8]
    4a44:	add	x20, x22, x21, lsl #6
    4a48:	mov	x23, x20
    4a4c:	str	xzr, [x23, #16]!
    4a50:	ldr	x8, [sp, #16]
    4a54:	cbz	x8, 4a70 <_ZN4llvm8fuzzerop21insertValueDescriptorEj+0x104>
    4a58:	mov	x1, sp
    4a5c:	mov	w2, #0x2                   	// #2
    4a60:	mov	x0, x20
    4a64:	blr	x8
    4a68:	ldr	q0, [sp, #16]
    4a6c:	str	q0, [x23]
    4a70:	mov	x23, x20
    4a74:	str	xzr, [x23, #48]!
    4a78:	ldr	x8, [sp, #48]
    4a7c:	cbz	x8, 4aa0 <_ZN4llvm8fuzzerop21insertValueDescriptorEj+0x134>
    4a80:	add	x9, x22, x21, lsl #6
    4a84:	mov	x10, sp
    4a88:	add	x0, x9, #0x20
    4a8c:	add	x1, x10, #0x20
    4a90:	mov	w2, #0x2                   	// #2
    4a94:	blr	x8
    4a98:	ldr	q0, [sp, #48]
    4a9c:	str	q0, [x23]
    4aa0:	str	xzr, [x20, #80]
    4aa4:	ldr	x8, [sp, #80]
    4aa8:	add	x20, x20, #0x40
    4aac:	cbz	x8, 4acc <_ZN4llvm8fuzzerop21insertValueDescriptorEj+0x160>
    4ab0:	mov	x9, sp
    4ab4:	add	x1, x9, #0x40
    4ab8:	mov	w2, #0x2                   	// #2
    4abc:	mov	x0, x20
    4ac0:	blr	x8
    4ac4:	ldr	q0, [sp, #80]
    4ac8:	str	q0, [x20, #16]
    4acc:	str	xzr, [x20, #48]
    4ad0:	ldr	x8, [sp, #112]
    4ad4:	cbz	x8, 4af4 <_ZN4llvm8fuzzerop21insertValueDescriptorEj+0x188>
    4ad8:	mov	x9, sp
    4adc:	add	x0, x20, #0x20
    4ae0:	add	x1, x9, #0x60
    4ae4:	mov	w2, #0x2                   	// #2
    4ae8:	blr	x8
    4aec:	ldr	q0, [sp, #112]
    4af0:	str	q0, [x20, #48]
    4af4:	str	xzr, [x20, #80]
    4af8:	ldr	x8, [sp, #144]
    4afc:	add	x20, x20, #0x40
    4b00:	cbz	x8, 4b20 <_ZN4llvm8fuzzerop21insertValueDescriptorEj+0x1b4>
    4b04:	mov	x9, sp
    4b08:	add	x1, x9, #0x80
    4b0c:	mov	w2, #0x2                   	// #2
    4b10:	mov	x0, x20
    4b14:	blr	x8
    4b18:	ldr	q0, [sp, #144]
    4b1c:	str	q0, [x20, #16]
    4b20:	str	xzr, [x20, #48]
    4b24:	ldr	x8, [sp, #176]
    4b28:	cbz	x8, 4b48 <_ZN4llvm8fuzzerop21insertValueDescriptorEj+0x1dc>
    4b2c:	mov	x9, sp
    4b30:	add	x0, x20, #0x20
    4b34:	add	x1, x9, #0xa0
    4b38:	mov	w2, #0x2                   	// #2
    4b3c:	blr	x8
    4b40:	ldr	q0, [sp, #176]
    4b44:	str	q0, [x20, #48]
    4b48:	ldp	w8, w9, [x19, #16]
    4b4c:	add	x8, x8, #0x3
    4b50:	cmp	x8, x9
    4b54:	b.hi	4c2c <_ZN4llvm8fuzzerop21insertValueDescriptorEj+0x2c0>  // b.pmore
    4b58:	str	w8, [x19, #16]
    4b5c:	ldr	x8, [sp, #176]
    4b60:	adrp	x9, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    4b64:	adrp	x10, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    4b68:	add	x9, x9, #0x0
    4b6c:	add	x10, x10, #0x0
    4b70:	stp	x10, x9, [x19, #168]
    4b74:	cbz	x8, 4b8c <_ZN4llvm8fuzzerop21insertValueDescriptorEj+0x220>
    4b78:	mov	x9, sp
    4b7c:	add	x0, x9, #0xa0
    4b80:	mov	w2, #0x3                   	// #3
    4b84:	mov	x1, x0
    4b88:	blr	x8
    4b8c:	ldr	x8, [sp, #144]
    4b90:	cbz	x8, 4ba8 <_ZN4llvm8fuzzerop21insertValueDescriptorEj+0x23c>
    4b94:	mov	x9, sp
    4b98:	add	x0, x9, #0x80
    4b9c:	mov	w2, #0x3                   	// #3
    4ba0:	mov	x1, x0
    4ba4:	blr	x8
    4ba8:	ldr	x8, [sp, #112]
    4bac:	cbz	x8, 4bc4 <_ZN4llvm8fuzzerop21insertValueDescriptorEj+0x258>
    4bb0:	mov	x9, sp
    4bb4:	add	x0, x9, #0x60
    4bb8:	mov	w2, #0x3                   	// #3
    4bbc:	mov	x1, x0
    4bc0:	blr	x8
    4bc4:	ldr	x8, [sp, #80]
    4bc8:	cbz	x8, 4be0 <_ZN4llvm8fuzzerop21insertValueDescriptorEj+0x274>
    4bcc:	mov	x9, sp
    4bd0:	add	x0, x9, #0x40
    4bd4:	mov	w2, #0x3                   	// #3
    4bd8:	mov	x1, x0
    4bdc:	blr	x8
    4be0:	ldr	x8, [sp, #48]
    4be4:	cbz	x8, 4bfc <_ZN4llvm8fuzzerop21insertValueDescriptorEj+0x290>
    4be8:	mov	x9, sp
    4bec:	add	x0, x9, #0x20
    4bf0:	mov	w2, #0x3                   	// #3
    4bf4:	mov	x1, x0
    4bf8:	blr	x8
    4bfc:	ldr	x8, [sp, #16]
    4c00:	cbz	x8, 4c14 <_ZN4llvm8fuzzerop21insertValueDescriptorEj+0x2a8>
    4c04:	mov	x0, sp
    4c08:	mov	x1, sp
    4c0c:	mov	w2, #0x3                   	// #3
    4c10:	blr	x8
    4c14:	ldp	x20, x19, [sp, #272]
    4c18:	ldp	x22, x21, [sp, #256]
    4c1c:	ldp	x28, x23, [sp, #240]
    4c20:	ldp	x29, x30, [sp, #224]
    4c24:	add	sp, sp, #0x120
    4c28:	ret
    4c2c:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    4c30:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    4c34:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    4c38:	add	x0, x0, #0x0
    4c3c:	add	x1, x1, #0x0
    4c40:	add	x3, x3, #0x0
    4c44:	mov	w2, #0x43                  	// #67
    4c48:	bl	0 <__assert_fail>

0000000000004c4c <_ZN4llvm23describeFuzzerVectorOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>:
    4c4c:	sub	sp, sp, #0x120
    4c50:	stp	x29, x30, [sp, #208]
    4c54:	stp	x28, x25, [sp, #224]
    4c58:	stp	x24, x23, [sp, #240]
    4c5c:	stp	x22, x21, [sp, #256]
    4c60:	stp	x20, x19, [sp, #272]
    4c64:	add	x29, sp, #0xd0
    4c68:	mov	x19, x0
    4c6c:	add	x8, sp, #0x8
    4c70:	mov	w0, #0x1                   	// #1
    4c74:	add	x21, sp, #0x8
    4c78:	bl	5038 <_ZN4llvm8fuzzerop24extractElementDescriptorEj>
    4c7c:	ldp	x20, x8, [x19, #8]
    4c80:	adrp	x22, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    4c84:	cmp	x20, x8
    4c88:	b.eq	4fe4 <_ZN4llvm23describeFuzzerVectorOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x398>  // b.none
    4c8c:	ldr	w8, [sp, #8]
    4c90:	ldr	d0, [x22]
    4c94:	add	x9, x20, #0x18
    4c98:	mov	x0, x20
    4c9c:	str	w8, [x20]
    4ca0:	str	x9, [x0, #8]!
    4ca4:	str	d0, [x20, #16]
    4ca8:	ldr	w8, [sp, #24]
    4cac:	cbz	w8, 4cbc <_ZN4llvm23describeFuzzerVectorOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x70>
    4cb0:	add	x8, sp, #0x8
    4cb4:	add	x1, x8, #0x8
    4cb8:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    4cbc:	str	xzr, [x20, #168]
    4cc0:	ldur	q0, [x21, #152]
    4cc4:	stur	q0, [x21, #184]
    4cc8:	ldur	q1, [x20, #152]
    4ccc:	stur	q1, [x21, #152]
    4cd0:	stur	q0, [x20, #152]
    4cd4:	ldr	x8, [sp, #176]
    4cd8:	str	xzr, [sp, #176]
    4cdc:	ldr	x9, [x20, #176]
    4ce0:	str	x8, [x20, #168]
    4ce4:	ldr	x8, [sp, #184]
    4ce8:	str	x9, [sp, #184]
    4cec:	str	x8, [x20, #176]
    4cf0:	ldr	x8, [x19, #8]
    4cf4:	add	x8, x8, #0xb8
    4cf8:	str	x8, [x19, #8]
    4cfc:	ldr	x8, [sp, #176]
    4d00:	cbz	x8, 4d18 <_ZN4llvm23describeFuzzerVectorOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xcc>
    4d04:	add	x9, sp, #0x8
    4d08:	add	x0, x9, #0x98
    4d0c:	mov	w2, #0x3                   	// #3
    4d10:	mov	x1, x0
    4d14:	blr	x8
    4d18:	ldr	w8, [sp, #24]
    4d1c:	ldr	x20, [sp, #16]
    4d20:	add	x9, sp, #0x8
    4d24:	add	x23, x9, #0x8
    4d28:	cbz	w8, 4d7c <_ZN4llvm23describeFuzzerVectorOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x130>
    4d2c:	lsl	x24, x8, #6
    4d30:	b	4d3c <_ZN4llvm23describeFuzzerVectorOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xf0>
    4d34:	subs	x24, x24, #0x40
    4d38:	b.eq	4d78 <_ZN4llvm23describeFuzzerVectorOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x12c>  // b.none
    4d3c:	add	x25, x20, x24
    4d40:	ldur	x8, [x25, #-16]
    4d44:	cbz	x8, 4d58 <_ZN4llvm23describeFuzzerVectorOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x10c>
    4d48:	sub	x0, x25, #0x20
    4d4c:	mov	w2, #0x3                   	// #3
    4d50:	mov	x1, x0
    4d54:	blr	x8
    4d58:	ldur	x8, [x25, #-48]
    4d5c:	cbz	x8, 4d34 <_ZN4llvm23describeFuzzerVectorOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xe8>
    4d60:	add	x9, x20, x24
    4d64:	sub	x0, x9, #0x40
    4d68:	mov	w2, #0x3                   	// #3
    4d6c:	mov	x1, x0
    4d70:	blr	x8
    4d74:	b	4d34 <_ZN4llvm23describeFuzzerVectorOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xe8>
    4d78:	ldr	x20, [sp, #16]
    4d7c:	add	x8, x23, #0x10
    4d80:	cmp	x20, x8
    4d84:	b.eq	4d90 <_ZN4llvm23describeFuzzerVectorOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x144>  // b.none
    4d88:	mov	x0, x20
    4d8c:	bl	0 <free>
    4d90:	add	x8, sp, #0x8
    4d94:	mov	w0, #0x1                   	// #1
    4d98:	bl	524c <_ZN4llvm8fuzzerop23insertElementDescriptorEj>
    4d9c:	ldp	x20, x8, [x19, #8]
    4da0:	cmp	x20, x8
    4da4:	b.eq	5000 <_ZN4llvm23describeFuzzerVectorOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x3b4>  // b.none
    4da8:	ldr	w8, [sp, #8]
    4dac:	ldr	d0, [x22]
    4db0:	add	x9, x20, #0x18
    4db4:	mov	x0, x20
    4db8:	str	w8, [x20]
    4dbc:	str	x9, [x0, #8]!
    4dc0:	str	d0, [x20, #16]
    4dc4:	ldr	w8, [sp, #24]
    4dc8:	cbz	w8, 4dd8 <_ZN4llvm23describeFuzzerVectorOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x18c>
    4dcc:	add	x8, sp, #0x8
    4dd0:	add	x1, x8, #0x8
    4dd4:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    4dd8:	str	xzr, [x20, #168]
    4ddc:	ldur	q0, [x21, #152]
    4de0:	stur	q0, [x21, #184]
    4de4:	ldur	q1, [x20, #152]
    4de8:	stur	q1, [x21, #152]
    4dec:	stur	q0, [x20, #152]
    4df0:	ldr	x8, [sp, #176]
    4df4:	str	xzr, [sp, #176]
    4df8:	ldr	x9, [x20, #176]
    4dfc:	str	x8, [x20, #168]
    4e00:	ldr	x8, [sp, #184]
    4e04:	str	x9, [sp, #184]
    4e08:	str	x8, [x20, #176]
    4e0c:	ldr	x8, [x19, #8]
    4e10:	add	x8, x8, #0xb8
    4e14:	str	x8, [x19, #8]
    4e18:	ldr	x8, [sp, #176]
    4e1c:	cbz	x8, 4e34 <_ZN4llvm23describeFuzzerVectorOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1e8>
    4e20:	add	x9, sp, #0x8
    4e24:	add	x0, x9, #0x98
    4e28:	mov	w2, #0x3                   	// #3
    4e2c:	mov	x1, x0
    4e30:	blr	x8
    4e34:	ldr	w8, [sp, #24]
    4e38:	ldr	x20, [sp, #16]
    4e3c:	add	x9, sp, #0x8
    4e40:	add	x23, x9, #0x8
    4e44:	cbz	w8, 4e98 <_ZN4llvm23describeFuzzerVectorOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x24c>
    4e48:	lsl	x24, x8, #6
    4e4c:	b	4e58 <_ZN4llvm23describeFuzzerVectorOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x20c>
    4e50:	subs	x24, x24, #0x40
    4e54:	b.eq	4e94 <_ZN4llvm23describeFuzzerVectorOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x248>  // b.none
    4e58:	add	x25, x20, x24
    4e5c:	ldur	x8, [x25, #-16]
    4e60:	cbz	x8, 4e74 <_ZN4llvm23describeFuzzerVectorOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x228>
    4e64:	sub	x0, x25, #0x20
    4e68:	mov	w2, #0x3                   	// #3
    4e6c:	mov	x1, x0
    4e70:	blr	x8
    4e74:	ldur	x8, [x25, #-48]
    4e78:	cbz	x8, 4e50 <_ZN4llvm23describeFuzzerVectorOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x204>
    4e7c:	add	x9, x20, x24
    4e80:	sub	x0, x9, #0x40
    4e84:	mov	w2, #0x3                   	// #3
    4e88:	mov	x1, x0
    4e8c:	blr	x8
    4e90:	b	4e50 <_ZN4llvm23describeFuzzerVectorOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x204>
    4e94:	ldr	x20, [sp, #16]
    4e98:	add	x8, x23, #0x10
    4e9c:	cmp	x20, x8
    4ea0:	b.eq	4eac <_ZN4llvm23describeFuzzerVectorOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x260>  // b.none
    4ea4:	mov	x0, x20
    4ea8:	bl	0 <free>
    4eac:	add	x8, sp, #0x8
    4eb0:	mov	w0, #0x1                   	// #1
    4eb4:	bl	5544 <_ZN4llvm8fuzzerop23shuffleVectorDescriptorEj>
    4eb8:	ldp	x20, x8, [x19, #8]
    4ebc:	cmp	x20, x8
    4ec0:	b.eq	501c <_ZN4llvm23describeFuzzerVectorOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x3d0>  // b.none
    4ec4:	ldr	w8, [sp, #8]
    4ec8:	ldr	d0, [x22]
    4ecc:	add	x9, x20, #0x18
    4ed0:	mov	x0, x20
    4ed4:	str	w8, [x20]
    4ed8:	str	x9, [x0, #8]!
    4edc:	str	d0, [x20, #16]
    4ee0:	ldr	w8, [sp, #24]
    4ee4:	cbz	w8, 4ef4 <_ZN4llvm23describeFuzzerVectorOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x2a8>
    4ee8:	add	x8, sp, #0x8
    4eec:	add	x1, x8, #0x8
    4ef0:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    4ef4:	str	xzr, [x20, #168]
    4ef8:	ldur	q0, [x21, #152]
    4efc:	stur	q0, [x21, #184]
    4f00:	ldur	q1, [x20, #152]
    4f04:	stur	q1, [x21, #152]
    4f08:	stur	q0, [x20, #152]
    4f0c:	ldr	x8, [sp, #176]
    4f10:	str	xzr, [sp, #176]
    4f14:	ldr	x9, [x20, #176]
    4f18:	str	x8, [x20, #168]
    4f1c:	ldr	x8, [sp, #184]
    4f20:	str	x9, [sp, #184]
    4f24:	str	x8, [x20, #176]
    4f28:	ldr	x8, [x19, #8]
    4f2c:	add	x8, x8, #0xb8
    4f30:	str	x8, [x19, #8]
    4f34:	ldr	x8, [sp, #176]
    4f38:	cbz	x8, 4f50 <_ZN4llvm23describeFuzzerVectorOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x304>
    4f3c:	add	x9, sp, #0x8
    4f40:	add	x0, x9, #0x98
    4f44:	mov	w2, #0x3                   	// #3
    4f48:	mov	x1, x0
    4f4c:	blr	x8
    4f50:	ldr	w8, [sp, #24]
    4f54:	ldr	x19, [sp, #16]
    4f58:	add	x9, sp, #0x8
    4f5c:	add	x20, x9, #0x8
    4f60:	cbz	w8, 4fb4 <_ZN4llvm23describeFuzzerVectorOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x368>
    4f64:	lsl	x21, x8, #6
    4f68:	b	4f74 <_ZN4llvm23describeFuzzerVectorOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x328>
    4f6c:	subs	x21, x21, #0x40
    4f70:	b.eq	4fb0 <_ZN4llvm23describeFuzzerVectorOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x364>  // b.none
    4f74:	add	x22, x19, x21
    4f78:	ldur	x8, [x22, #-16]
    4f7c:	cbz	x8, 4f90 <_ZN4llvm23describeFuzzerVectorOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x344>
    4f80:	sub	x0, x22, #0x20
    4f84:	mov	w2, #0x3                   	// #3
    4f88:	mov	x1, x0
    4f8c:	blr	x8
    4f90:	ldur	x8, [x22, #-48]
    4f94:	cbz	x8, 4f6c <_ZN4llvm23describeFuzzerVectorOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x320>
    4f98:	add	x9, x19, x21
    4f9c:	sub	x0, x9, #0x40
    4fa0:	mov	w2, #0x3                   	// #3
    4fa4:	mov	x1, x0
    4fa8:	blr	x8
    4fac:	b	4f6c <_ZN4llvm23describeFuzzerVectorOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x320>
    4fb0:	ldr	x19, [sp, #16]
    4fb4:	add	x8, x20, #0x10
    4fb8:	cmp	x19, x8
    4fbc:	b.eq	4fc8 <_ZN4llvm23describeFuzzerVectorOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x37c>  // b.none
    4fc0:	mov	x0, x19
    4fc4:	bl	0 <free>
    4fc8:	ldp	x20, x19, [sp, #272]
    4fcc:	ldp	x22, x21, [sp, #256]
    4fd0:	ldp	x24, x23, [sp, #240]
    4fd4:	ldp	x28, x25, [sp, #224]
    4fd8:	ldp	x29, x30, [sp, #208]
    4fdc:	add	sp, sp, #0x120
    4fe0:	ret
    4fe4:	add	x2, sp, #0x8
    4fe8:	mov	x0, x19
    4fec:	mov	x1, x20
    4ff0:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    4ff4:	ldr	x8, [sp, #176]
    4ff8:	cbnz	x8, 4d04 <_ZN4llvm23describeFuzzerVectorOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xb8>
    4ffc:	b	4d18 <_ZN4llvm23describeFuzzerVectorOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0xcc>
    5000:	add	x2, sp, #0x8
    5004:	mov	x0, x19
    5008:	mov	x1, x20
    500c:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5010:	ldr	x8, [sp, #176]
    5014:	cbnz	x8, 4e20 <_ZN4llvm23describeFuzzerVectorOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1d4>
    5018:	b	4e34 <_ZN4llvm23describeFuzzerVectorOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x1e8>
    501c:	add	x2, sp, #0x8
    5020:	mov	x0, x19
    5024:	mov	x1, x20
    5028:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    502c:	ldr	x8, [sp, #176]
    5030:	cbnz	x8, 4f3c <_ZN4llvm23describeFuzzerVectorOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x2f0>
    5034:	b	4f50 <_ZN4llvm23describeFuzzerVectorOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE+0x304>

0000000000005038 <_ZN4llvm8fuzzerop24extractElementDescriptorEj>:
    5038:	sub	sp, sp, #0xd0
    503c:	stp	x29, x30, [sp, #160]
    5040:	str	x21, [sp, #176]
    5044:	stp	x20, x19, [sp, #192]
    5048:	add	x29, sp, #0xa0
    504c:	mov	x19, x8
    5050:	mov	x20, x8
    5054:	adrp	x8, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5058:	adrp	x9, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    505c:	add	x8, x8, #0x0
    5060:	add	x9, x9, #0x0
    5064:	str	w0, [x20], #8
    5068:	mov	x0, sp
    506c:	sub	x1, x29, #0x20
    5070:	mov	w2, #0x1                   	// #1
    5074:	stp	x9, x8, [x29, #-16]
    5078:	mov	x21, sp
    507c:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5080:	ldur	x8, [x29, #-16]
    5084:	cbz	x8, 5098 <_ZN4llvm8fuzzerop24extractElementDescriptorEj+0x60>
    5088:	sub	x0, x29, #0x20
    508c:	sub	x1, x29, #0x20
    5090:	mov	w2, #0x3                   	// #3
    5094:	blr	x8
    5098:	adrp	x8, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    509c:	adrp	x9, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    50a0:	add	x0, x21, #0x40
    50a4:	add	x8, x8, #0x0
    50a8:	add	x9, x9, #0x0
    50ac:	sub	x1, x29, #0x20
    50b0:	mov	w2, #0x1                   	// #1
    50b4:	stp	x9, x8, [x29, #-16]
    50b8:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    50bc:	ldur	x8, [x29, #-16]
    50c0:	cbz	x8, 50d4 <_ZN4llvm8fuzzerop24extractElementDescriptorEj+0x9c>
    50c4:	sub	x0, x29, #0x20
    50c8:	sub	x1, x29, #0x20
    50cc:	mov	w2, #0x3                   	// #3
    50d0:	blr	x8
    50d4:	adrp	x8, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    50d8:	ldr	d0, [x8]
    50dc:	ldr	x8, [sp, #16]
    50e0:	add	x20, x20, #0x10
    50e4:	str	x20, [x19, #8]
    50e8:	str	d0, [x19, #16]
    50ec:	str	xzr, [x19, #40]
    50f0:	cbz	x8, 510c <_ZN4llvm8fuzzerop24extractElementDescriptorEj+0xd4>
    50f4:	mov	x1, sp
    50f8:	mov	w2, #0x2                   	// #2
    50fc:	mov	x0, x20
    5100:	blr	x8
    5104:	ldr	q0, [sp, #16]
    5108:	str	q0, [x20, #16]
    510c:	ldr	x8, [sp, #48]
    5110:	str	xzr, [x20, #48]
    5114:	cbz	x8, 5134 <_ZN4llvm8fuzzerop24extractElementDescriptorEj+0xfc>
    5118:	mov	x9, sp
    511c:	add	x0, x20, #0x20
    5120:	add	x1, x9, #0x20
    5124:	mov	w2, #0x2                   	// #2
    5128:	blr	x8
    512c:	ldr	q0, [sp, #48]
    5130:	str	q0, [x20, #48]
    5134:	ldr	x8, [sp, #80]
    5138:	str	xzr, [x20, #80]
    513c:	cbz	x8, 515c <_ZN4llvm8fuzzerop24extractElementDescriptorEj+0x124>
    5140:	mov	x9, sp
    5144:	add	x0, x20, #0x40
    5148:	add	x1, x9, #0x40
    514c:	mov	w2, #0x2                   	// #2
    5150:	blr	x8
    5154:	ldr	q0, [sp, #80]
    5158:	str	q0, [x20, #80]
    515c:	ldr	x8, [sp, #112]
    5160:	str	xzr, [x20, #112]
    5164:	cbz	x8, 5188 <_ZN4llvm8fuzzerop24extractElementDescriptorEj+0x150>
    5168:	mov	x9, sp
    516c:	add	x0, x20, #0x60
    5170:	add	x1, x9, #0x60
    5174:	mov	w2, #0x2                   	// #2
    5178:	blr	x8
    517c:	ldr	q0, [sp, #112]
    5180:	fmov	x8, d0
    5184:	str	q0, [x20, #112]
    5188:	ldp	w9, w10, [x19, #16]
    518c:	add	x9, x9, #0x2
    5190:	cmp	x9, x10
    5194:	b.hi	522c <_ZN4llvm8fuzzerop24extractElementDescriptorEj+0x1f4>  // b.pmore
    5198:	str	w9, [x19, #16]
    519c:	adrp	x9, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    51a0:	adrp	x10, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    51a4:	add	x9, x9, #0x0
    51a8:	add	x10, x10, #0x0
    51ac:	stp	x10, x9, [x19, #168]
    51b0:	cbz	x8, 51c8 <_ZN4llvm8fuzzerop24extractElementDescriptorEj+0x190>
    51b4:	mov	x9, sp
    51b8:	add	x0, x9, #0x60
    51bc:	mov	w2, #0x3                   	// #3
    51c0:	mov	x1, x0
    51c4:	blr	x8
    51c8:	ldr	x8, [sp, #80]
    51cc:	cbz	x8, 51e4 <_ZN4llvm8fuzzerop24extractElementDescriptorEj+0x1ac>
    51d0:	mov	x9, sp
    51d4:	add	x0, x9, #0x40
    51d8:	mov	w2, #0x3                   	// #3
    51dc:	mov	x1, x0
    51e0:	blr	x8
    51e4:	ldr	x8, [sp, #48]
    51e8:	cbz	x8, 5200 <_ZN4llvm8fuzzerop24extractElementDescriptorEj+0x1c8>
    51ec:	mov	x9, sp
    51f0:	add	x0, x9, #0x20
    51f4:	mov	w2, #0x3                   	// #3
    51f8:	mov	x1, x0
    51fc:	blr	x8
    5200:	ldr	x8, [sp, #16]
    5204:	cbz	x8, 5218 <_ZN4llvm8fuzzerop24extractElementDescriptorEj+0x1e0>
    5208:	mov	x0, sp
    520c:	mov	x1, sp
    5210:	mov	w2, #0x3                   	// #3
    5214:	blr	x8
    5218:	ldp	x20, x19, [sp, #192]
    521c:	ldr	x21, [sp, #176]
    5220:	ldp	x29, x30, [sp, #160]
    5224:	add	sp, sp, #0xd0
    5228:	ret
    522c:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5230:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5234:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5238:	add	x0, x0, #0x0
    523c:	add	x1, x1, #0x0
    5240:	add	x3, x3, #0x0
    5244:	mov	w2, #0x43                  	// #67
    5248:	bl	0 <__assert_fail>

000000000000524c <_ZN4llvm8fuzzerop23insertElementDescriptorEj>:
    524c:	sub	sp, sp, #0x120
    5250:	stp	x29, x30, [sp, #224]
    5254:	stp	x28, x23, [sp, #240]
    5258:	stp	x22, x21, [sp, #256]
    525c:	stp	x20, x19, [sp, #272]
    5260:	add	x29, sp, #0xe0
    5264:	mov	x19, x8
    5268:	mov	x20, x8
    526c:	adrp	x8, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5270:	adrp	x9, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5274:	add	x8, x8, #0x0
    5278:	add	x9, x9, #0x0
    527c:	str	w0, [x20], #8
    5280:	mov	x0, sp
    5284:	sub	x1, x29, #0x20
    5288:	mov	w2, #0x1                   	// #1
    528c:	stp	x9, x8, [x29, #-16]
    5290:	mov	x21, sp
    5294:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5298:	ldur	x8, [x29, #-16]
    529c:	cbz	x8, 52b0 <_ZN4llvm8fuzzerop23insertElementDescriptorEj+0x64>
    52a0:	sub	x0, x29, #0x20
    52a4:	sub	x1, x29, #0x20
    52a8:	mov	w2, #0x3                   	// #3
    52ac:	blr	x8
    52b0:	adrp	x8, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    52b4:	adrp	x9, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    52b8:	adrp	x10, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    52bc:	adrp	x11, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    52c0:	adrp	x12, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    52c4:	adrp	x13, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    52c8:	add	x8, x8, #0x0
    52cc:	add	x9, x9, #0x0
    52d0:	add	x10, x10, #0x0
    52d4:	add	x11, x11, #0x0
    52d8:	add	x0, x21, #0x80
    52dc:	add	x12, x12, #0x0
    52e0:	add	x13, x13, #0x0
    52e4:	sub	x1, x29, #0x20
    52e8:	mov	w2, #0x1                   	// #1
    52ec:	stp	x9, x8, [sp, #80]
    52f0:	stp	x11, x10, [sp, #112]
    52f4:	stp	x13, x12, [x29, #-16]
    52f8:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    52fc:	ldur	x8, [x29, #-16]
    5300:	cbz	x8, 5314 <_ZN4llvm8fuzzerop23insertElementDescriptorEj+0xc8>
    5304:	sub	x0, x29, #0x20
    5308:	sub	x1, x29, #0x20
    530c:	mov	w2, #0x3                   	// #3
    5310:	blr	x8
    5314:	adrp	x8, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5318:	ldr	d0, [x8]
    531c:	add	x8, x20, #0x10
    5320:	mov	w1, #0x3                   	// #3
    5324:	mov	x0, x20
    5328:	str	x8, [x19, #8]
    532c:	str	d0, [x19, #16]
    5330:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5334:	ldr	w21, [x19, #16]
    5338:	ldr	x22, [x19, #8]
    533c:	add	x20, x22, x21, lsl #6
    5340:	mov	x23, x20
    5344:	str	xzr, [x23, #16]!
    5348:	ldr	x8, [sp, #16]
    534c:	cbz	x8, 5368 <_ZN4llvm8fuzzerop23insertElementDescriptorEj+0x11c>
    5350:	mov	x1, sp
    5354:	mov	w2, #0x2                   	// #2
    5358:	mov	x0, x20
    535c:	blr	x8
    5360:	ldr	q0, [sp, #16]
    5364:	str	q0, [x23]
    5368:	mov	x23, x20
    536c:	str	xzr, [x23, #48]!
    5370:	ldr	x8, [sp, #48]
    5374:	cbz	x8, 5398 <_ZN4llvm8fuzzerop23insertElementDescriptorEj+0x14c>
    5378:	add	x9, x22, x21, lsl #6
    537c:	mov	x10, sp
    5380:	add	x0, x9, #0x20
    5384:	add	x1, x10, #0x20
    5388:	mov	w2, #0x2                   	// #2
    538c:	blr	x8
    5390:	ldr	q0, [sp, #48]
    5394:	str	q0, [x23]
    5398:	str	xzr, [x20, #80]
    539c:	ldr	x8, [sp, #80]
    53a0:	add	x20, x20, #0x40
    53a4:	cbz	x8, 53c4 <_ZN4llvm8fuzzerop23insertElementDescriptorEj+0x178>
    53a8:	mov	x9, sp
    53ac:	add	x1, x9, #0x40
    53b0:	mov	w2, #0x2                   	// #2
    53b4:	mov	x0, x20
    53b8:	blr	x8
    53bc:	ldr	q0, [sp, #80]
    53c0:	str	q0, [x20, #16]
    53c4:	str	xzr, [x20, #48]
    53c8:	ldr	x8, [sp, #112]
    53cc:	cbz	x8, 53ec <_ZN4llvm8fuzzerop23insertElementDescriptorEj+0x1a0>
    53d0:	mov	x9, sp
    53d4:	add	x0, x20, #0x20
    53d8:	add	x1, x9, #0x60
    53dc:	mov	w2, #0x2                   	// #2
    53e0:	blr	x8
    53e4:	ldr	q0, [sp, #112]
    53e8:	str	q0, [x20, #48]
    53ec:	str	xzr, [x20, #80]
    53f0:	ldr	x8, [sp, #144]
    53f4:	add	x20, x20, #0x40
    53f8:	cbz	x8, 5418 <_ZN4llvm8fuzzerop23insertElementDescriptorEj+0x1cc>
    53fc:	mov	x9, sp
    5400:	add	x1, x9, #0x80
    5404:	mov	w2, #0x2                   	// #2
    5408:	mov	x0, x20
    540c:	blr	x8
    5410:	ldr	q0, [sp, #144]
    5414:	str	q0, [x20, #16]
    5418:	str	xzr, [x20, #48]
    541c:	ldr	x8, [sp, #176]
    5420:	cbz	x8, 5440 <_ZN4llvm8fuzzerop23insertElementDescriptorEj+0x1f4>
    5424:	mov	x9, sp
    5428:	add	x0, x20, #0x20
    542c:	add	x1, x9, #0xa0
    5430:	mov	w2, #0x2                   	// #2
    5434:	blr	x8
    5438:	ldr	q0, [sp, #176]
    543c:	str	q0, [x20, #48]
    5440:	ldp	w8, w9, [x19, #16]
    5444:	add	x8, x8, #0x3
    5448:	cmp	x8, x9
    544c:	b.hi	5524 <_ZN4llvm8fuzzerop23insertElementDescriptorEj+0x2d8>  // b.pmore
    5450:	str	w8, [x19, #16]
    5454:	ldr	x8, [sp, #176]
    5458:	adrp	x9, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    545c:	adrp	x10, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5460:	add	x9, x9, #0x0
    5464:	add	x10, x10, #0x0
    5468:	stp	x10, x9, [x19, #168]
    546c:	cbz	x8, 5484 <_ZN4llvm8fuzzerop23insertElementDescriptorEj+0x238>
    5470:	mov	x9, sp
    5474:	add	x0, x9, #0xa0
    5478:	mov	w2, #0x3                   	// #3
    547c:	mov	x1, x0
    5480:	blr	x8
    5484:	ldr	x8, [sp, #144]
    5488:	cbz	x8, 54a0 <_ZN4llvm8fuzzerop23insertElementDescriptorEj+0x254>
    548c:	mov	x9, sp
    5490:	add	x0, x9, #0x80
    5494:	mov	w2, #0x3                   	// #3
    5498:	mov	x1, x0
    549c:	blr	x8
    54a0:	ldr	x8, [sp, #112]
    54a4:	cbz	x8, 54bc <_ZN4llvm8fuzzerop23insertElementDescriptorEj+0x270>
    54a8:	mov	x9, sp
    54ac:	add	x0, x9, #0x60
    54b0:	mov	w2, #0x3                   	// #3
    54b4:	mov	x1, x0
    54b8:	blr	x8
    54bc:	ldr	x8, [sp, #80]
    54c0:	cbz	x8, 54d8 <_ZN4llvm8fuzzerop23insertElementDescriptorEj+0x28c>
    54c4:	mov	x9, sp
    54c8:	add	x0, x9, #0x40
    54cc:	mov	w2, #0x3                   	// #3
    54d0:	mov	x1, x0
    54d4:	blr	x8
    54d8:	ldr	x8, [sp, #48]
    54dc:	cbz	x8, 54f4 <_ZN4llvm8fuzzerop23insertElementDescriptorEj+0x2a8>
    54e0:	mov	x9, sp
    54e4:	add	x0, x9, #0x20
    54e8:	mov	w2, #0x3                   	// #3
    54ec:	mov	x1, x0
    54f0:	blr	x8
    54f4:	ldr	x8, [sp, #16]
    54f8:	cbz	x8, 550c <_ZN4llvm8fuzzerop23insertElementDescriptorEj+0x2c0>
    54fc:	mov	x0, sp
    5500:	mov	x1, sp
    5504:	mov	w2, #0x3                   	// #3
    5508:	blr	x8
    550c:	ldp	x20, x19, [sp, #272]
    5510:	ldp	x22, x21, [sp, #256]
    5514:	ldp	x28, x23, [sp, #240]
    5518:	ldp	x29, x30, [sp, #224]
    551c:	add	sp, sp, #0x120
    5520:	ret
    5524:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5528:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    552c:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5530:	add	x0, x0, #0x0
    5534:	add	x1, x1, #0x0
    5538:	add	x3, x3, #0x0
    553c:	mov	w2, #0x43                  	// #67
    5540:	bl	0 <__assert_fail>

0000000000005544 <_ZN4llvm8fuzzerop23shuffleVectorDescriptorEj>:
    5544:	sub	sp, sp, #0x120
    5548:	stp	x29, x30, [sp, #224]
    554c:	stp	x28, x23, [sp, #240]
    5550:	stp	x22, x21, [sp, #256]
    5554:	stp	x20, x19, [sp, #272]
    5558:	add	x29, sp, #0xe0
    555c:	mov	x19, x8
    5560:	mov	x20, x8
    5564:	adrp	x8, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5568:	adrp	x9, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    556c:	add	x8, x8, #0x0
    5570:	add	x9, x9, #0x0
    5574:	str	w0, [x20], #8
    5578:	mov	x0, sp
    557c:	sub	x1, x29, #0x20
    5580:	mov	w2, #0x1                   	// #1
    5584:	stp	x9, x8, [x29, #-16]
    5588:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    558c:	ldur	x8, [x29, #-16]
    5590:	cbz	x8, 55a4 <_ZN4llvm8fuzzerop23shuffleVectorDescriptorEj+0x60>
    5594:	sub	x0, x29, #0x20
    5598:	sub	x1, x29, #0x20
    559c:	mov	w2, #0x3                   	// #3
    55a0:	blr	x8
    55a4:	adrp	x8, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    55a8:	adrp	x9, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    55ac:	add	x8, x8, #0x0
    55b0:	add	x9, x9, #0x0
    55b4:	adrp	x12, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    55b8:	stp	x9, x8, [sp, #80]
    55bc:	adrp	x8, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    55c0:	add	x12, x12, #0x0
    55c4:	add	x8, x8, #0x0
    55c8:	stp	x8, x12, [sp, #144]
    55cc:	adrp	x8, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    55d0:	ldr	d0, [x8]
    55d4:	adrp	x9, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    55d8:	adrp	x8, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    55dc:	adrp	x10, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    55e0:	adrp	x11, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    55e4:	add	x9, x9, #0x0
    55e8:	add	x8, x8, #0x0
    55ec:	add	x10, x10, #0x0
    55f0:	add	x11, x11, #0x0
    55f4:	stp	x8, x9, [sp, #176]
    55f8:	add	x8, x20, #0x10
    55fc:	mov	w1, #0x3                   	// #3
    5600:	mov	x0, x20
    5604:	stp	x11, x10, [sp, #112]
    5608:	str	x8, [x19, #8]
    560c:	str	d0, [x19, #16]
    5610:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5614:	ldr	w21, [x19, #16]
    5618:	ldr	x22, [x19, #8]
    561c:	add	x20, x22, x21, lsl #6
    5620:	mov	x23, x20
    5624:	str	xzr, [x23, #16]!
    5628:	ldr	x8, [sp, #16]
    562c:	cbz	x8, 5648 <_ZN4llvm8fuzzerop23shuffleVectorDescriptorEj+0x104>
    5630:	mov	x1, sp
    5634:	mov	w2, #0x2                   	// #2
    5638:	mov	x0, x20
    563c:	blr	x8
    5640:	ldr	q0, [sp, #16]
    5644:	str	q0, [x23]
    5648:	mov	x23, x20
    564c:	str	xzr, [x23, #48]!
    5650:	ldr	x8, [sp, #48]
    5654:	cbz	x8, 5678 <_ZN4llvm8fuzzerop23shuffleVectorDescriptorEj+0x134>
    5658:	add	x9, x22, x21, lsl #6
    565c:	mov	x10, sp
    5660:	add	x0, x9, #0x20
    5664:	add	x1, x10, #0x20
    5668:	mov	w2, #0x2                   	// #2
    566c:	blr	x8
    5670:	ldr	q0, [sp, #48]
    5674:	str	q0, [x23]
    5678:	str	xzr, [x20, #80]
    567c:	ldr	x8, [sp, #80]
    5680:	add	x20, x20, #0x40
    5684:	cbz	x8, 56a4 <_ZN4llvm8fuzzerop23shuffleVectorDescriptorEj+0x160>
    5688:	mov	x9, sp
    568c:	add	x1, x9, #0x40
    5690:	mov	w2, #0x2                   	// #2
    5694:	mov	x0, x20
    5698:	blr	x8
    569c:	ldr	q0, [sp, #80]
    56a0:	str	q0, [x20, #16]
    56a4:	str	xzr, [x20, #48]
    56a8:	ldr	x8, [sp, #112]
    56ac:	cbz	x8, 56cc <_ZN4llvm8fuzzerop23shuffleVectorDescriptorEj+0x188>
    56b0:	mov	x9, sp
    56b4:	add	x0, x20, #0x20
    56b8:	add	x1, x9, #0x60
    56bc:	mov	w2, #0x2                   	// #2
    56c0:	blr	x8
    56c4:	ldr	q0, [sp, #112]
    56c8:	str	q0, [x20, #48]
    56cc:	str	xzr, [x20, #80]
    56d0:	ldr	x8, [sp, #144]
    56d4:	add	x20, x20, #0x40
    56d8:	cbz	x8, 56f8 <_ZN4llvm8fuzzerop23shuffleVectorDescriptorEj+0x1b4>
    56dc:	mov	x9, sp
    56e0:	add	x1, x9, #0x80
    56e4:	mov	w2, #0x2                   	// #2
    56e8:	mov	x0, x20
    56ec:	blr	x8
    56f0:	ldr	q0, [sp, #144]
    56f4:	str	q0, [x20, #16]
    56f8:	str	xzr, [x20, #48]
    56fc:	ldr	x8, [sp, #176]
    5700:	cbz	x8, 5720 <_ZN4llvm8fuzzerop23shuffleVectorDescriptorEj+0x1dc>
    5704:	mov	x9, sp
    5708:	add	x0, x20, #0x20
    570c:	add	x1, x9, #0xa0
    5710:	mov	w2, #0x2                   	// #2
    5714:	blr	x8
    5718:	ldr	q0, [sp, #176]
    571c:	str	q0, [x20, #48]
    5720:	ldp	w8, w9, [x19, #16]
    5724:	add	x8, x8, #0x3
    5728:	cmp	x8, x9
    572c:	b.hi	5804 <_ZN4llvm8fuzzerop23shuffleVectorDescriptorEj+0x2c0>  // b.pmore
    5730:	str	w8, [x19, #16]
    5734:	ldr	x8, [sp, #176]
    5738:	adrp	x9, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    573c:	adrp	x10, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5740:	add	x9, x9, #0x0
    5744:	add	x10, x10, #0x0
    5748:	stp	x10, x9, [x19, #168]
    574c:	cbz	x8, 5764 <_ZN4llvm8fuzzerop23shuffleVectorDescriptorEj+0x220>
    5750:	mov	x9, sp
    5754:	add	x0, x9, #0xa0
    5758:	mov	w2, #0x3                   	// #3
    575c:	mov	x1, x0
    5760:	blr	x8
    5764:	ldr	x8, [sp, #144]
    5768:	cbz	x8, 5780 <_ZN4llvm8fuzzerop23shuffleVectorDescriptorEj+0x23c>
    576c:	mov	x9, sp
    5770:	add	x0, x9, #0x80
    5774:	mov	w2, #0x3                   	// #3
    5778:	mov	x1, x0
    577c:	blr	x8
    5780:	ldr	x8, [sp, #112]
    5784:	cbz	x8, 579c <_ZN4llvm8fuzzerop23shuffleVectorDescriptorEj+0x258>
    5788:	mov	x9, sp
    578c:	add	x0, x9, #0x60
    5790:	mov	w2, #0x3                   	// #3
    5794:	mov	x1, x0
    5798:	blr	x8
    579c:	ldr	x8, [sp, #80]
    57a0:	cbz	x8, 57b8 <_ZN4llvm8fuzzerop23shuffleVectorDescriptorEj+0x274>
    57a4:	mov	x9, sp
    57a8:	add	x0, x9, #0x40
    57ac:	mov	w2, #0x3                   	// #3
    57b0:	mov	x1, x0
    57b4:	blr	x8
    57b8:	ldr	x8, [sp, #48]
    57bc:	cbz	x8, 57d4 <_ZN4llvm8fuzzerop23shuffleVectorDescriptorEj+0x290>
    57c0:	mov	x9, sp
    57c4:	add	x0, x9, #0x20
    57c8:	mov	w2, #0x3                   	// #3
    57cc:	mov	x1, x0
    57d0:	blr	x8
    57d4:	ldr	x8, [sp, #16]
    57d8:	cbz	x8, 57ec <_ZN4llvm8fuzzerop23shuffleVectorDescriptorEj+0x2a8>
    57dc:	mov	x0, sp
    57e0:	mov	x1, sp
    57e4:	mov	w2, #0x3                   	// #3
    57e8:	blr	x8
    57ec:	ldp	x20, x19, [sp, #272]
    57f0:	ldp	x22, x21, [sp, #256]
    57f4:	ldp	x28, x23, [sp, #240]
    57f8:	ldp	x29, x30, [sp, #224]
    57fc:	add	sp, sp, #0x120
    5800:	ret
    5804:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5808:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    580c:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5810:	add	x0, x0, #0x0
    5814:	add	x1, x1, #0x0
    5818:	add	x3, x3, #0x0
    581c:	mov	w2, #0x43                  	// #67
    5820:	bl	0 <__assert_fail>

0000000000005824 <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZNS0_8fuzzeropL10anyIntTypeEvEUlS4_S6_E_E9_M_invokeERKSt9_Any_dataOS4_OS6_>:
    5824:	ldr	x8, [x2]
    5828:	ldr	x8, [x8]
    582c:	ldrb	w8, [x8, #8]
    5830:	cmp	w8, #0xb
    5834:	cset	w0, eq  // eq = none
    5838:	ret

000000000000583c <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzeropL10anyIntTypeEvEUlNS1_8ArrayRefIPNS1_5ValueEEEPKS4_E_E10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation>:
    583c:	cmp	w2, #0x1
    5840:	b.ne	5848 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzeropL10anyIntTypeEvEUlNS1_8ArrayRefIPNS1_5ValueEEEPKS4_E_E10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation+0xc>  // b.any
    5844:	str	x1, [x0]
    5848:	mov	w0, wzr
    584c:	ret

0000000000005850 <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZNS0_8fuzzeropL14matchFirstTypeEvEUlS4_S6_E_E9_M_invokeERKSt9_Any_dataOS4_OS6_>:
    5850:	stp	x29, x30, [sp, #-16]!
    5854:	mov	x29, sp
    5858:	ldr	x8, [x1, #8]
    585c:	cbz	x8, 5884 <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZNS0_8fuzzeropL14matchFirstTypeEvEUlS4_S6_E_E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x34>
    5860:	ldr	x8, [x1]
    5864:	ldr	x9, [x2]
    5868:	ldr	x8, [x8]
    586c:	ldr	x9, [x9]
    5870:	ldr	x8, [x8]
    5874:	cmp	x9, x8
    5878:	cset	w0, eq  // eq = none
    587c:	ldp	x29, x30, [sp], #16
    5880:	ret
    5884:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5888:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    588c:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5890:	add	x0, x0, #0x0
    5894:	add	x1, x1, #0x0
    5898:	add	x3, x3, #0x0
    589c:	mov	w2, #0xc4                  	// #196
    58a0:	bl	0 <__assert_fail>

00000000000058a4 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzeropL14matchFirstTypeEvEUlNS1_8ArrayRefIPNS1_5ValueEEEPKS4_E_E10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation>:
    58a4:	cmp	w2, #0x1
    58a8:	b.ne	58b0 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzeropL14matchFirstTypeEvEUlNS1_8ArrayRefIPNS1_5ValueEEEPKS4_E_E10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation+0xc>  // b.any
    58ac:	str	x1, [x0]
    58b0:	mov	w0, wzr
    58b4:	ret

00000000000058b8 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzeropL14matchFirstTypeEvEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_>:
    58b8:	stp	x29, x30, [sp, #-16]!
    58bc:	mov	x29, sp
    58c0:	ldr	x9, [x1, #8]
    58c4:	cbz	x9, 58dc <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzeropL14matchFirstTypeEvEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x24>
    58c8:	ldr	x9, [x1]
    58cc:	ldr	x9, [x9]
    58d0:	ldr	x0, [x9]
    58d4:	ldp	x29, x30, [sp], #16
    58d8:	b	0 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeE>
    58dc:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    58e0:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    58e4:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    58e8:	add	x0, x0, #0x0
    58ec:	add	x1, x1, #0x0
    58f0:	add	x3, x3, #0x0
    58f4:	mov	w2, #0xc8                  	// #200
    58f8:	bl	0 <__assert_fail>

00000000000058fc <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzeropL14matchFirstTypeEvEUlNS1_8ArrayRefIPNS1_5ValueEEENS3_IPNS1_4TypeEEEE_E10_M_managerERSt9_Any_dataRKSC_St18_Manager_operation>:
    58fc:	cmp	w2, #0x1
    5900:	b.ne	5908 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzeropL14matchFirstTypeEvEUlNS1_8ArrayRefIPNS1_5ValueEEENS3_IPNS1_4TypeEEEE_E10_M_managerERSt9_Any_dataRKSC_St18_Manager_operation+0xc>  // b.any
    5904:	str	x1, [x0]
    5908:	mov	w0, wzr
    590c:	ret

0000000000005910 <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZNS0_8fuzzeropL12anyFloatTypeEvEUlS4_S6_E_E9_M_invokeERKSt9_Any_dataOS4_OS6_>:
    5910:	ldr	x8, [x2]
    5914:	ldr	x8, [x8]
    5918:	ldrb	w8, [x8, #8]
    591c:	sub	w8, w8, #0x1
    5920:	cmp	w8, #0x6
    5924:	cset	w0, cc  // cc = lo, ul, last
    5928:	ret

000000000000592c <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzeropL12anyFloatTypeEvEUlNS1_8ArrayRefIPNS1_5ValueEEEPKS4_E_E10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation>:
    592c:	cmp	w2, #0x1
    5930:	b.ne	5938 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzeropL12anyFloatTypeEvEUlNS1_8ArrayRefIPNS1_5ValueEEEPKS4_E_E10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation+0xc>  // b.any
    5934:	str	x1, [x0]
    5938:	mov	w0, wzr
    593c:	ret

0000000000005940 <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZNS0_8fuzzeropL12sizedPtrTypeEvEUlS4_S6_E_E9_M_invokeERKSt9_Any_dataOS4_OS6_>:
    5940:	stp	x29, x30, [sp, #-32]!
    5944:	str	x19, [sp, #16]
    5948:	mov	x29, sp
    594c:	ldr	x19, [x2]
    5950:	mov	x0, x19
    5954:	bl	0 <_ZNK4llvm5Value12isSwiftErrorEv>
    5958:	tbnz	w0, #0, 59cc <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZNS0_8fuzzeropL12sizedPtrTypeEvEUlS4_S6_E_E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x8c>
    595c:	ldr	x8, [x19]
    5960:	cbz	x8, 59e0 <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZNS0_8fuzzeropL12sizedPtrTypeEvEUlS4_S6_E_E9_M_invokeERKSt9_Any_dataOS4_OS6_+0xa0>
    5964:	ldrb	w9, [x8, #8]
    5968:	cmp	w9, #0xf
    596c:	b.ne	59cc <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZNS0_8fuzzeropL12sizedPtrTypeEvEUlS4_S6_E_E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x8c>  // b.any
    5970:	ldr	x0, [x8, #24]
    5974:	ldrb	w9, [x0, #8]
    5978:	cmp	w9, #0x10
    597c:	b.hi	59cc <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZNS0_8fuzzeropL12sizedPtrTypeEvEUlS4_S6_E_E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x8c>  // b.pmore
    5980:	mov	w8, #0x1                   	// #1
    5984:	lsl	w10, w8, w9
    5988:	mov	w11, #0x8a7e                	// #35454
    598c:	tst	w10, w11
    5990:	b.eq	59a4 <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZNS0_8fuzzeropL12sizedPtrTypeEvEUlS4_S6_E_E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x64>  // b.none
    5994:	ldr	x19, [sp, #16]
    5998:	mov	w0, w8
    599c:	ldp	x29, x30, [sp], #32
    59a0:	ret
    59a4:	mov	w8, #0x1                   	// #1
    59a8:	lsl	w8, w8, w9
    59ac:	mov	w9, #0x6000                	// #24576
    59b0:	movk	w9, #0x1, lsl #16
    59b4:	tst	w8, w9
    59b8:	b.eq	59cc <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZNS0_8fuzzeropL12sizedPtrTypeEvEUlS4_S6_E_E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x8c>  // b.none
    59bc:	ldr	x19, [sp, #16]
    59c0:	mov	x1, xzr
    59c4:	ldp	x29, x30, [sp], #32
    59c8:	b	0 <_ZNK4llvm4Type18isSizedDerivedTypeEPNS_15SmallPtrSetImplIPS0_EE>
    59cc:	mov	w8, wzr
    59d0:	ldr	x19, [sp, #16]
    59d4:	mov	w0, w8
    59d8:	ldp	x29, x30, [sp], #32
    59dc:	ret
    59e0:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    59e4:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    59e8:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    59ec:	add	x0, x0, #0x0
    59f0:	add	x1, x1, #0x0
    59f4:	add	x3, x3, #0x0
    59f8:	mov	w2, #0x69                  	// #105
    59fc:	bl	0 <__assert_fail>

0000000000005a00 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzeropL12sizedPtrTypeEvEUlNS1_8ArrayRefIPNS1_5ValueEEEPKS4_E_E10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation>:
    5a00:	cmp	w2, #0x1
    5a04:	b.ne	5a0c <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzeropL12sizedPtrTypeEvEUlNS1_8ArrayRefIPNS1_5ValueEEEPKS4_E_E10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation+0xc>  // b.any
    5a08:	str	x1, [x0]
    5a0c:	mov	w0, wzr
    5a10:	ret

0000000000005a14 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzeropL12sizedPtrTypeEvEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_>:
    5a14:	stp	x29, x30, [sp, #-96]!
    5a18:	stp	x28, x27, [sp, #16]
    5a1c:	stp	x26, x25, [sp, #32]
    5a20:	stp	x24, x23, [sp, #48]
    5a24:	stp	x22, x21, [sp, #64]
    5a28:	stp	x20, x19, [sp, #80]
    5a2c:	mov	x29, sp
    5a30:	mov	x19, x8
    5a34:	ldp	x24, x8, [x2]
    5a38:	stp	xzr, xzr, [x19]
    5a3c:	str	xzr, [x19, #16]
    5a40:	cbz	x8, 5b80 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzeropL12sizedPtrTypeEvEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x16c>
    5a44:	mov	x20, xzr
    5a48:	mov	x26, xzr
    5a4c:	mov	x28, xzr
    5a50:	lsl	x25, x8, #3
    5a54:	mov	w23, #0x1                   	// #1
    5a58:	mov	w27, #0x8a7e                	// #35454
    5a5c:	b	5a74 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzeropL12sizedPtrTypeEvEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x60>
    5a60:	str	x22, [x28], #8
    5a64:	str	x28, [x19, #8]
    5a68:	subs	x25, x25, #0x8
    5a6c:	add	x24, x24, #0x8
    5a70:	b.eq	5b80 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzeropL12sizedPtrTypeEvEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x16c>  // b.none
    5a74:	ldr	x21, [x24]
    5a78:	ldrb	w8, [x21, #8]
    5a7c:	cmp	w8, #0x10
    5a80:	b.hi	5a68 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzeropL12sizedPtrTypeEvEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x54>  // b.pmore
    5a84:	lsl	w8, w23, w8
    5a88:	tst	w8, w27
    5a8c:	b.eq	5b44 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzeropL12sizedPtrTypeEvEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x130>  // b.none
    5a90:	mov	x0, x21
    5a94:	mov	w1, wzr
    5a98:	bl	0 <_ZN4llvm11PointerType3getEPNS_4TypeEj>
    5a9c:	bl	0 <_ZN4llvm10UndefValue3getEPNS_4TypeE>
    5aa0:	cmp	x28, x26
    5aa4:	mov	x22, x0
    5aa8:	b.ne	5a60 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzeropL12sizedPtrTypeEvEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x4c>  // b.any
    5aac:	sub	x21, x26, x20
    5ab0:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
    5ab4:	cmp	x21, x8
    5ab8:	b.eq	5b9c <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzeropL12sizedPtrTypeEvEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x188>  // b.none
    5abc:	asr	x28, x21, #3
    5ac0:	cmp	x21, #0x0
    5ac4:	csinc	x8, x28, xzr, ne  // ne = any
    5ac8:	adds	x8, x8, x28
    5acc:	lsr	x10, x8, #60
    5ad0:	cset	w9, cs  // cs = hs, nlast
    5ad4:	cmp	x10, #0x0
    5ad8:	cset	w10, ne  // ne = any
    5adc:	orr	w9, w9, w10
    5ae0:	cmp	w9, #0x0
    5ae4:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
    5ae8:	csel	x26, x9, x8, ne  // ne = any
    5aec:	cbz	x26, 5b68 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzeropL12sizedPtrTypeEvEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x154>
    5af0:	lsl	x0, x26, #3
    5af4:	bl	0 <_Znwm>
    5af8:	mov	x23, x0
    5afc:	add	x28, x23, x28, lsl #3
    5b00:	cmp	x21, #0x1
    5b04:	str	x22, [x28]
    5b08:	b.lt	5b1c <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzeropL12sizedPtrTypeEvEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x108>  // b.tstop
    5b0c:	mov	x0, x23
    5b10:	mov	x1, x20
    5b14:	mov	x2, x21
    5b18:	bl	0 <memmove>
    5b1c:	add	x28, x28, #0x8
    5b20:	cbz	x20, 5b2c <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzeropL12sizedPtrTypeEvEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x118>
    5b24:	mov	x0, x20
    5b28:	bl	0 <_ZdlPv>
    5b2c:	stp	x23, x28, [x19]
    5b30:	add	x26, x23, x26, lsl #3
    5b34:	mov	x20, x23
    5b38:	mov	w23, #0x1                   	// #1
    5b3c:	str	x26, [x19, #16]
    5b40:	b	5a68 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzeropL12sizedPtrTypeEvEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x54>
    5b44:	mov	w9, #0x6000                	// #24576
    5b48:	movk	w9, #0x1, lsl #16
    5b4c:	tst	w8, w9
    5b50:	b.eq	5a68 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzeropL12sizedPtrTypeEvEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x54>  // b.none
    5b54:	mov	x0, x21
    5b58:	mov	x1, xzr
    5b5c:	bl	0 <_ZNK4llvm4Type18isSizedDerivedTypeEPNS_15SmallPtrSetImplIPS0_EE>
    5b60:	tbz	w0, #0, 5a68 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzeropL12sizedPtrTypeEvEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x54>
    5b64:	b	5a90 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzeropL12sizedPtrTypeEvEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x7c>
    5b68:	mov	x23, xzr
    5b6c:	add	x28, x23, x28, lsl #3
    5b70:	cmp	x21, #0x1
    5b74:	str	x22, [x28]
    5b78:	b.ge	5b0c <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzeropL12sizedPtrTypeEvEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_+0xf8>  // b.tcont
    5b7c:	b	5b1c <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzeropL12sizedPtrTypeEvEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x108>
    5b80:	ldp	x20, x19, [sp, #80]
    5b84:	ldp	x22, x21, [sp, #64]
    5b88:	ldp	x24, x23, [sp, #48]
    5b8c:	ldp	x26, x25, [sp, #32]
    5b90:	ldp	x28, x27, [sp, #16]
    5b94:	ldp	x29, x30, [sp], #96
    5b98:	ret
    5b9c:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5ba0:	add	x0, x0, #0x0
    5ba4:	bl	0 <_ZSt20__throw_length_errorPKc>

0000000000005ba8 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzeropL12sizedPtrTypeEvEUlNS1_8ArrayRefIPNS1_5ValueEEENS3_IPNS1_4TypeEEEE_E10_M_managerERSt9_Any_dataRKSC_St18_Manager_operation>:
    5ba8:	cmp	w2, #0x1
    5bac:	b.ne	5bb4 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzeropL12sizedPtrTypeEvEUlNS1_8ArrayRefIPNS1_5ValueEEENS3_IPNS1_4TypeEEEE_E10_M_managerERSt9_Any_dataRKSC_St18_Manager_operation+0xc>  // b.any
    5bb0:	str	x1, [x0]
    5bb4:	mov	w0, wzr
    5bb8:	ret

0000000000005bbc <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZNS0_8fuzzeropL16anyAggregateTypeEvEUlS4_S6_E_E9_M_invokeERKSt9_Any_dataOS4_OS6_>:
    5bbc:	stp	x29, x30, [sp, #-16]!
    5bc0:	mov	x29, sp
    5bc4:	ldr	x8, [x2]
    5bc8:	ldr	x8, [x8]
    5bcc:	cbz	x8, 5c1c <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZNS0_8fuzzeropL16anyAggregateTypeEvEUlS4_S6_E_E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x60>
    5bd0:	ldrb	w10, [x8, #8]
    5bd4:	subs	w9, w10, #0xd
    5bd8:	b.eq	5bf8 <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZNS0_8fuzzeropL16anyAggregateTypeEvEUlS4_S6_E_E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x3c>  // b.none
    5bdc:	cmp	w10, #0xe
    5be0:	b.ne	5c0c <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZNS0_8fuzzeropL16anyAggregateTypeEvEUlS4_S6_E_E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x50>  // b.any
    5be4:	ldr	x8, [x8, #32]
    5be8:	cmp	x8, #0x0
    5bec:	cset	w0, ne  // ne = any
    5bf0:	ldp	x29, x30, [sp], #16
    5bf4:	ret
    5bf8:	ldr	w8, [x8, #12]
    5bfc:	cmp	w8, #0x0
    5c00:	cset	w0, ne  // ne = any
    5c04:	ldp	x29, x30, [sp], #16
    5c08:	ret
    5c0c:	cmp	w9, #0x2
    5c10:	cset	w0, cc  // cc = lo, ul, last
    5c14:	ldp	x29, x30, [sp], #16
    5c18:	ret
    5c1c:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5c20:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5c24:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5c28:	add	x0, x0, #0x0
    5c2c:	add	x1, x1, #0x0
    5c30:	add	x3, x3, #0x0
    5c34:	mov	w2, #0x69                  	// #105
    5c38:	bl	0 <__assert_fail>

0000000000005c3c <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzeropL16anyAggregateTypeEvEUlNS1_8ArrayRefIPNS1_5ValueEEEPKS4_E_E10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation>:
    5c3c:	cmp	w2, #0x1
    5c40:	b.ne	5c48 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzeropL16anyAggregateTypeEvEUlNS1_8ArrayRefIPNS1_5ValueEEEPKS4_E_E10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation+0xc>  // b.any
    5c44:	str	x1, [x0]
    5c48:	mov	w0, wzr
    5c4c:	ret

0000000000005c50 <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZL22validExtractValueIndexvE4$_10E9_M_invokeERKSt9_Any_dataOS4_OS6_>:
    5c50:	stp	x29, x30, [sp, #-48]!
    5c54:	str	x21, [sp, #16]
    5c58:	stp	x20, x19, [sp, #32]
    5c5c:	mov	x29, sp
    5c60:	ldr	x8, [x2]
    5c64:	cbz	x8, 5d2c <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZL22validExtractValueIndexvE4$_10E9_M_invokeERKSt9_Any_dataOS4_OS6_+0xdc>
    5c68:	ldrb	w9, [x8, #16]
    5c6c:	cmp	w9, #0xd
    5c70:	b.ne	5d18 <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZL22validExtractValueIndexvE4$_10E9_M_invokeERKSt9_Any_dataOS4_OS6_+0xc8>  // b.any
    5c74:	ldr	x9, [x1, #8]
    5c78:	cbz	x9, 5d4c <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZL22validExtractValueIndexvE4$_10E9_M_invokeERKSt9_Any_dataOS4_OS6_+0xfc>
    5c7c:	ldr	x9, [x1]
    5c80:	ldr	x9, [x9]
    5c84:	ldr	x9, [x9]
    5c88:	ldrb	w10, [x9, #8]
    5c8c:	sub	w11, w10, #0xd
    5c90:	cmp	w11, #0x2
    5c94:	b.cs	5d6c <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZL22validExtractValueIndexvE4$_10E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x11c>  // b.hs, b.nlast
    5c98:	cmp	w10, #0xd
    5c9c:	b.ne	5cc8 <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZL22validExtractValueIndexvE4$_10E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x78>  // b.any
    5ca0:	cbz	x9, 5d8c <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZL22validExtractValueIndexvE4$_10E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x13c>
    5ca4:	ldr	w20, [x9, #12]
    5ca8:	ldr	w21, [x8, #32]
    5cac:	add	x19, x8, #0x18
    5cb0:	cmp	w21, #0x41
    5cb4:	b.cs	5ce0 <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZL22validExtractValueIndexvE4$_10E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x90>  // b.hs, b.nlast
    5cb8:	ldr	x8, [x19]
    5cbc:	cmp	x8, x20
    5cc0:	b.cc	5d04 <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZL22validExtractValueIndexvE4$_10E9_M_invokeERKSt9_Any_dataOS4_OS6_+0xb4>  // b.lo, b.ul, b.last
    5cc4:	b	5d18 <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZL22validExtractValueIndexvE4$_10E9_M_invokeERKSt9_Any_dataOS4_OS6_+0xc8>
    5cc8:	cbz	x9, 5dac <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZL22validExtractValueIndexvE4$_10E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x15c>
    5ccc:	ldr	x20, [x9, #32]
    5cd0:	ldr	w21, [x8, #32]
    5cd4:	add	x19, x8, #0x18
    5cd8:	cmp	w21, #0x41
    5cdc:	b.cc	5cb8 <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZL22validExtractValueIndexvE4$_10E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x68>  // b.lo, b.ul, b.last
    5ce0:	mov	x0, x19
    5ce4:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    5ce8:	sub	w8, w21, w0
    5cec:	cmp	w8, #0x41
    5cf0:	b.cs	5d18 <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZL22validExtractValueIndexvE4$_10E9_M_invokeERKSt9_Any_dataOS4_OS6_+0xc8>  // b.hs, b.nlast
    5cf4:	ldr	x19, [x19]
    5cf8:	ldr	x8, [x19]
    5cfc:	cmp	x8, x20
    5d00:	b.cs	5d18 <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZL22validExtractValueIndexvE4$_10E9_M_invokeERKSt9_Any_dataOS4_OS6_+0xc8>  // b.hs, b.nlast
    5d04:	mov	w0, #0x1                   	// #1
    5d08:	ldp	x20, x19, [sp, #32]
    5d0c:	ldr	x21, [sp, #16]
    5d10:	ldp	x29, x30, [sp], #48
    5d14:	ret
    5d18:	mov	w0, wzr
    5d1c:	ldp	x20, x19, [sp, #32]
    5d20:	ldr	x21, [sp, #16]
    5d24:	ldp	x29, x30, [sp], #48
    5d28:	ret
    5d2c:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5d30:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5d34:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5d38:	add	x0, x0, #0x0
    5d3c:	add	x1, x1, #0x0
    5d40:	add	x3, x3, #0x0
    5d44:	mov	w2, #0x69                  	// #105
    5d48:	bl	0 <__assert_fail>
    5d4c:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5d50:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5d54:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5d58:	add	x0, x0, #0x0
    5d5c:	add	x1, x1, #0x0
    5d60:	add	x3, x3, #0x0
    5d64:	mov	w2, #0xfa                  	// #250
    5d68:	bl	0 <__assert_fail>
    5d6c:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5d70:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5d74:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5d78:	add	x0, x0, #0x0
    5d7c:	add	x1, x1, #0x0
    5d80:	add	x3, x3, #0x0
    5d84:	mov	w2, #0xb7                  	// #183
    5d88:	bl	0 <__assert_fail>
    5d8c:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5d90:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5d94:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5d98:	add	x0, x0, #0x0
    5d9c:	add	x1, x1, #0x0
    5da0:	add	x3, x3, #0x0
    5da4:	mov	w2, #0x69                  	// #105
    5da8:	bl	0 <__assert_fail>
    5dac:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5db0:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5db4:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5db8:	add	x0, x0, #0x0
    5dbc:	add	x1, x1, #0x0
    5dc0:	add	x3, x3, #0x0
    5dc4:	mov	w2, #0x69                  	// #105
    5dc8:	bl	0 <__assert_fail>

0000000000005dcc <_ZNSt14_Function_base13_Base_managerIZL22validExtractValueIndexvE4$_10E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation>:
    5dcc:	cmp	w2, #0x1
    5dd0:	b.ne	5dd8 <_ZNSt14_Function_base13_Base_managerIZL22validExtractValueIndexvE4$_10E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation+0xc>  // b.any
    5dd4:	str	x1, [x0]
    5dd8:	mov	w0, wzr
    5ddc:	ret

0000000000005de0 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL22validExtractValueIndexvE4$_11E9_M_invokeERKSt9_Any_dataOS9_OSC_>:
    5de0:	stp	x29, x30, [sp, #-64]!
    5de4:	stp	x24, x23, [sp, #16]
    5de8:	stp	x22, x21, [sp, #32]
    5dec:	stp	x20, x19, [sp, #48]
    5df0:	mov	x29, sp
    5df4:	mov	x19, x8
    5df8:	ldp	x20, x8, [x1]
    5dfc:	stp	xzr, xzr, [x19]
    5e00:	str	xzr, [x19, #16]
    5e04:	cbz	x8, 5f28 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL22validExtractValueIndexvE4$_11E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x148>
    5e08:	ldr	x0, [x20]
    5e0c:	bl	0 <_ZNK4llvm5Value10getContextEv>
    5e10:	bl	0 <_ZN4llvm4Type10getInt32TyERNS_11LLVMContextE>
    5e14:	ldr	x8, [x20]
    5e18:	ldr	x8, [x8]
    5e1c:	ldrb	w9, [x8, #8]
    5e20:	sub	w10, w9, #0xd
    5e24:	cmp	w10, #0x2
    5e28:	b.cs	5f48 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL22validExtractValueIndexvE4$_11E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x168>  // b.hs, b.nlast
    5e2c:	mov	x20, x0
    5e30:	cmp	w9, #0xd
    5e34:	b.ne	5e44 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL22validExtractValueIndexvE4$_11E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x64>  // b.any
    5e38:	cbz	x8, 5f68 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL22validExtractValueIndexvE4$_11E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x188>
    5e3c:	ldr	w24, [x8, #12]
    5e40:	b	5e4c <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL22validExtractValueIndexvE4$_11E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x6c>
    5e44:	cbz	x8, 5f88 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL22validExtractValueIndexvE4$_11E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x1a8>
    5e48:	ldr	x24, [x8, #32]
    5e4c:	mov	x0, x20
    5e50:	mov	x1, xzr
    5e54:	mov	w2, wzr
    5e58:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
    5e5c:	mov	x21, x0
    5e60:	mov	w0, #0x8                   	// #8
    5e64:	bl	0 <_Znwm>
    5e68:	mov	x8, x0
    5e6c:	cmp	x24, #0x2
    5e70:	str	x21, [x8], #8
    5e74:	stp	x0, x8, [x19]
    5e78:	str	x8, [x19, #16]
    5e7c:	b.cc	5f14 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL22validExtractValueIndexvE4$_11E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x134>  // b.lo, b.ul, b.last
    5e80:	mov	x22, x0
    5e84:	sub	x1, x24, #0x1
    5e88:	mov	x0, x20
    5e8c:	mov	w2, wzr
    5e90:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
    5e94:	mov	x23, x0
    5e98:	mov	w0, #0x10                  	// #16
    5e9c:	bl	0 <_Znwm>
    5ea0:	ldr	x8, [x22]
    5ea4:	mov	x21, x0
    5ea8:	stp	x8, x23, [x0]
    5eac:	add	x23, x0, #0x10
    5eb0:	mov	x0, x22
    5eb4:	bl	0 <_ZdlPv>
    5eb8:	cmp	x24, #0x2
    5ebc:	stp	x21, x23, [x19]
    5ec0:	str	x23, [x19, #16]
    5ec4:	b.eq	5f14 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL22validExtractValueIndexvE4$_11E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x134>  // b.none
    5ec8:	lsr	x1, x24, #1
    5ecc:	mov	x0, x20
    5ed0:	mov	w2, wzr
    5ed4:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
    5ed8:	mov	x20, x0
    5edc:	mov	w0, #0x20                  	// #32
    5ee0:	bl	0 <_Znwm>
    5ee4:	ldr	q0, [x21]
    5ee8:	mov	x22, x0
    5eec:	str	x20, [x0, #16]
    5ef0:	str	q0, [x0]
    5ef4:	mov	x0, x21
    5ef8:	bl	0 <_ZdlPv>
    5efc:	adrp	x8, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5f00:	ldr	q0, [x8]
    5f04:	dup	v1.2d, x22
    5f08:	str	x22, [x19]
    5f0c:	add	v0.2d, v1.2d, v0.2d
    5f10:	stur	q0, [x19, #8]
    5f14:	ldp	x20, x19, [sp, #48]
    5f18:	ldp	x22, x21, [sp, #32]
    5f1c:	ldp	x24, x23, [sp, #16]
    5f20:	ldp	x29, x30, [sp], #64
    5f24:	ret
    5f28:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5f2c:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5f30:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5f34:	add	x0, x0, #0x0
    5f38:	add	x1, x1, #0x0
    5f3c:	add	x3, x3, #0x0
    5f40:	mov	w2, #0xfa                  	// #250
    5f44:	bl	0 <__assert_fail>
    5f48:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5f4c:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5f50:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5f54:	add	x0, x0, #0x0
    5f58:	add	x1, x1, #0x0
    5f5c:	add	x3, x3, #0x0
    5f60:	mov	w2, #0xb7                  	// #183
    5f64:	bl	0 <__assert_fail>
    5f68:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5f6c:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5f70:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5f74:	add	x0, x0, #0x0
    5f78:	add	x1, x1, #0x0
    5f7c:	add	x3, x3, #0x0
    5f80:	mov	w2, #0x69                  	// #105
    5f84:	bl	0 <__assert_fail>
    5f88:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5f8c:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5f90:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    5f94:	add	x0, x0, #0x0
    5f98:	add	x1, x1, #0x0
    5f9c:	add	x3, x3, #0x0
    5fa0:	mov	w2, #0x69                  	// #105
    5fa4:	bl	0 <__assert_fail>

0000000000005fa8 <_ZNSt14_Function_base13_Base_managerIZL22validExtractValueIndexvE4$_11E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation>:
    5fa8:	cmp	w2, #0x1
    5fac:	b.ne	5fb4 <_ZNSt14_Function_base13_Base_managerIZL22validExtractValueIndexvE4$_11E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation+0xc>  // b.any
    5fb0:	str	x1, [x0]
    5fb4:	mov	w0, wzr
    5fb8:	ret

0000000000005fbc <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZL22matchScalarInAggregatevE4$_12E9_M_invokeERKSt9_Any_dataOS4_OS6_>:
    5fbc:	stp	x29, x30, [sp, #-48]!
    5fc0:	stp	x22, x21, [sp, #16]
    5fc4:	stp	x20, x19, [sp, #32]
    5fc8:	mov	x29, sp
    5fcc:	ldr	x8, [x1, #8]
    5fd0:	cbz	x8, 6078 <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZL22matchScalarInAggregatevE4$_12E9_M_invokeERKSt9_Any_dataOS4_OS6_+0xbc>
    5fd4:	ldr	x8, [x1]
    5fd8:	ldr	x8, [x8]
    5fdc:	ldr	x19, [x8]
    5fe0:	cbz	x19, 6098 <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZL22matchScalarInAggregatevE4$_12E9_M_invokeERKSt9_Any_dataOS4_OS6_+0xdc>
    5fe4:	ldrb	w8, [x19, #8]
    5fe8:	ldr	x21, [x2]
    5fec:	cmp	w8, #0xd
    5ff0:	b.eq	601c <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZL22matchScalarInAggregatevE4$_12E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x60>  // b.none
    5ff4:	cmp	w8, #0xe
    5ff8:	b.ne	60b8 <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZL22matchScalarInAggregatevE4$_12E9_M_invokeERKSt9_Any_dataOS4_OS6_+0xfc>  // b.any
    5ffc:	ldr	x8, [x21]
    6000:	ldr	x9, [x19, #24]
    6004:	cmp	x8, x9
    6008:	cset	w0, eq  // eq = none
    600c:	ldp	x20, x19, [sp, #32]
    6010:	ldp	x22, x21, [sp, #16]
    6014:	ldp	x29, x30, [sp], #48
    6018:	ret
    601c:	ldr	w22, [x19, #12]
    6020:	cmp	w22, #0x1
    6024:	b.lt	6050 <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZL22matchScalarInAggregatevE4$_12E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x94>  // b.tstop
    6028:	mov	w20, wzr
    602c:	mov	x0, x19
    6030:	mov	w1, w20
    6034:	bl	0 <_ZNK4llvm13CompositeType14getTypeAtIndexEj>
    6038:	ldr	x8, [x21]
    603c:	cmp	x0, x8
    6040:	b.eq	6064 <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZL22matchScalarInAggregatevE4$_12E9_M_invokeERKSt9_Any_dataOS4_OS6_+0xa8>  // b.none
    6044:	add	w20, w20, #0x1
    6048:	cmp	w22, w20
    604c:	b.ne	602c <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZL22matchScalarInAggregatevE4$_12E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x70>  // b.any
    6050:	mov	w0, wzr
    6054:	ldp	x20, x19, [sp, #32]
    6058:	ldp	x22, x21, [sp, #16]
    605c:	ldp	x29, x30, [sp], #48
    6060:	ret
    6064:	mov	w0, #0x1                   	// #1
    6068:	ldp	x20, x19, [sp, #32]
    606c:	ldp	x22, x21, [sp, #16]
    6070:	ldp	x29, x30, [sp], #48
    6074:	ret
    6078:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    607c:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6080:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6084:	add	x0, x0, #0x0
    6088:	add	x1, x1, #0x0
    608c:	add	x3, x3, #0x0
    6090:	mov	w2, #0xfa                  	// #250
    6094:	bl	0 <__assert_fail>
    6098:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    609c:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    60a0:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    60a4:	add	x0, x0, #0x0
    60a8:	add	x1, x1, #0x0
    60ac:	add	x3, x3, #0x0
    60b0:	mov	w2, #0x69                  	// #105
    60b4:	bl	0 <__assert_fail>
    60b8:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    60bc:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    60c0:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    60c4:	add	x0, x0, #0x0
    60c8:	add	x1, x1, #0x0
    60cc:	add	x3, x3, #0x0
    60d0:	mov	w2, #0x108                 	// #264
    60d4:	bl	0 <__assert_fail>

00000000000060d8 <_ZNSt14_Function_base13_Base_managerIZL22matchScalarInAggregatevE4$_12E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation>:
    60d8:	cmp	w2, #0x1
    60dc:	b.ne	60e4 <_ZNSt14_Function_base13_Base_managerIZL22matchScalarInAggregatevE4$_12E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation+0xc>  // b.any
    60e0:	str	x1, [x0]
    60e4:	mov	w0, wzr
    60e8:	ret

00000000000060ec <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL22matchScalarInAggregatevE4$_13E9_M_invokeERKSt9_Any_dataOS9_OSC_>:
    60ec:	sub	sp, sp, #0x50
    60f0:	stp	x29, x30, [sp, #32]
    60f4:	stp	x22, x21, [sp, #48]
    60f8:	stp	x20, x19, [sp, #64]
    60fc:	add	x29, sp, #0x20
    6100:	ldr	x9, [x1, #8]
    6104:	cbz	x9, 61c4 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL22matchScalarInAggregatevE4$_13E9_M_invokeERKSt9_Any_dataOS9_OSC_+0xd8>
    6108:	mov	x19, x8
    610c:	ldr	x8, [x1]
    6110:	ldr	x9, [x8]
    6114:	ldr	x9, [x9]
    6118:	cbz	x9, 61e4 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL22matchScalarInAggregatevE4$_13E9_M_invokeERKSt9_Any_dataOS9_OSC_+0xf8>
    611c:	ldrb	w10, [x9, #8]
    6120:	cmp	w10, #0xe
    6124:	b.ne	6144 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL22matchScalarInAggregatevE4$_13E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x58>  // b.any
    6128:	ldr	x0, [x9, #24]
    612c:	mov	x8, x19
    6130:	ldp	x20, x19, [sp, #64]
    6134:	ldp	x22, x21, [sp, #48]
    6138:	ldp	x29, x30, [sp, #32]
    613c:	add	sp, sp, #0x50
    6140:	b	0 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeE>
    6144:	stp	xzr, xzr, [sp]
    6148:	str	xzr, [sp, #16]
    614c:	ldr	x8, [x8]
    6150:	ldr	x20, [x8]
    6154:	cbz	x20, 6204 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL22matchScalarInAggregatevE4$_13E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x118>
    6158:	ldrb	w8, [x20, #8]
    615c:	cmp	w8, #0xd
    6160:	b.ne	6224 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL22matchScalarInAggregatevE4$_13E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x138>  // b.any
    6164:	ldr	w22, [x20, #12]
    6168:	cmp	w22, #0x1
    616c:	b.lt	61a0 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL22matchScalarInAggregatevE4$_13E9_M_invokeERKSt9_Any_dataOS9_OSC_+0xb4>  // b.tstop
    6170:	mov	w21, wzr
    6174:	mov	x0, x20
    6178:	mov	w1, w21
    617c:	bl	0 <_ZNK4llvm13CompositeType14getTypeAtIndexEj>
    6180:	mov	x1, sp
    6184:	bl	0 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE>
    6188:	add	w21, w21, #0x1
    618c:	cmp	w22, w21
    6190:	b.ne	6174 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL22matchScalarInAggregatevE4$_13E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x88>  // b.any
    6194:	ldr	q0, [sp]
    6198:	ldr	x8, [sp, #16]
    619c:	b	61a8 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL22matchScalarInAggregatevE4$_13E9_M_invokeERKSt9_Any_dataOS9_OSC_+0xbc>
    61a0:	mov	x8, xzr
    61a4:	movi	v0.2d, #0x0
    61a8:	str	q0, [x19]
    61ac:	str	x8, [x19, #16]
    61b0:	ldp	x20, x19, [sp, #64]
    61b4:	ldp	x22, x21, [sp, #48]
    61b8:	ldp	x29, x30, [sp, #32]
    61bc:	add	sp, sp, #0x50
    61c0:	ret
    61c4:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    61c8:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    61cc:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    61d0:	add	x0, x0, #0x0
    61d4:	add	x1, x1, #0x0
    61d8:	add	x3, x3, #0x0
    61dc:	mov	w2, #0xfa                  	// #250
    61e0:	bl	0 <__assert_fail>
    61e4:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    61e8:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    61ec:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    61f0:	add	x0, x0, #0x0
    61f4:	add	x1, x1, #0x0
    61f8:	add	x3, x3, #0x0
    61fc:	mov	w2, #0x69                  	// #105
    6200:	bl	0 <__assert_fail>
    6204:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6208:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    620c:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6210:	add	x0, x0, #0x0
    6214:	add	x1, x1, #0x0
    6218:	add	x3, x3, #0x0
    621c:	mov	w2, #0x69                  	// #105
    6220:	bl	0 <__assert_fail>
    6224:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6228:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    622c:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6230:	add	x0, x0, #0x0
    6234:	add	x1, x1, #0x0
    6238:	add	x3, x3, #0x0
    623c:	mov	w2, #0x108                 	// #264
    6240:	bl	0 <__assert_fail>

0000000000006244 <_ZNSt14_Function_base13_Base_managerIZL22matchScalarInAggregatevE4$_13E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation>:
    6244:	cmp	w2, #0x1
    6248:	b.ne	6250 <_ZNSt14_Function_base13_Base_managerIZL22matchScalarInAggregatevE4$_13E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation+0xc>  // b.any
    624c:	str	x1, [x0]
    6250:	mov	w0, wzr
    6254:	ret

0000000000006258 <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZL21validInsertValueIndexvE4$_14E9_M_invokeERKSt9_Any_dataOS4_OS6_>:
    6258:	stp	x29, x30, [sp, #-32]!
    625c:	stp	x20, x19, [sp, #16]
    6260:	mov	x29, sp
    6264:	ldr	x20, [x1, #8]
    6268:	cbz	x20, 62f0 <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZL21validInsertValueIndexvE4$_14E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x98>
    626c:	ldr	x19, [x1]
    6270:	ldr	x8, [x19]
    6274:	ldr	x0, [x8]
    6278:	cbz	x0, 6310 <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZL21validInsertValueIndexvE4$_14E9_M_invokeERKSt9_Any_dataOS4_OS6_+0xb8>
    627c:	ldrb	w8, [x0, #8]
    6280:	sub	w9, w8, #0xd
    6284:	cmp	w9, #0x2
    6288:	ccmp	w8, #0x10, #0x4, cs  // cs = hs, nlast
    628c:	b.ne	6330 <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZL21validInsertValueIndexvE4$_14E9_M_invokeERKSt9_Any_dataOS4_OS6_+0xd8>  // b.any
    6290:	ldr	x8, [x2]
    6294:	cbz	x8, 6350 <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZL21validInsertValueIndexvE4$_14E9_M_invokeERKSt9_Any_dataOS4_OS6_+0xf8>
    6298:	ldrb	w9, [x8, #16]
    629c:	cmp	w9, #0xd
    62a0:	b.ne	62d0 <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZL21validInsertValueIndexvE4$_14E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x78>  // b.any
    62a4:	ldr	w9, [x8, #32]
    62a8:	cmp	w9, #0x20
    62ac:	b.ne	62d0 <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZL21validInsertValueIndexvE4$_14E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x78>  // b.any
    62b0:	ldr	w1, [x8, #24]
    62b4:	bl	0 <_ZNK4llvm13CompositeType14getTypeAtIndexEj>
    62b8:	cmp	x20, #0x1
    62bc:	b.ls	62f0 <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZL21validInsertValueIndexvE4$_14E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x98>  // b.plast
    62c0:	ldr	x8, [x19, #8]
    62c4:	ldr	x8, [x8]
    62c8:	cmp	x0, x8
    62cc:	b.eq	62e0 <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZL21validInsertValueIndexvE4$_14E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x88>  // b.none
    62d0:	mov	w0, wzr
    62d4:	ldp	x20, x19, [sp, #16]
    62d8:	ldp	x29, x30, [sp], #32
    62dc:	ret
    62e0:	mov	w0, #0x1                   	// #1
    62e4:	ldp	x20, x19, [sp, #16]
    62e8:	ldp	x29, x30, [sp], #32
    62ec:	ret
    62f0:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    62f4:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    62f8:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    62fc:	add	x0, x0, #0x0
    6300:	add	x1, x1, #0x0
    6304:	add	x3, x3, #0x0
    6308:	mov	w2, #0xfa                  	// #250
    630c:	bl	0 <__assert_fail>
    6310:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6314:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6318:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    631c:	add	x0, x0, #0x0
    6320:	add	x1, x1, #0x0
    6324:	add	x3, x3, #0x0
    6328:	mov	w2, #0x69                  	// #105
    632c:	bl	0 <__assert_fail>
    6330:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6334:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6338:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    633c:	add	x0, x0, #0x0
    6340:	add	x1, x1, #0x0
    6344:	add	x3, x3, #0x0
    6348:	mov	w2, #0x108                 	// #264
    634c:	bl	0 <__assert_fail>
    6350:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6354:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6358:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    635c:	add	x0, x0, #0x0
    6360:	add	x1, x1, #0x0
    6364:	add	x3, x3, #0x0
    6368:	mov	w2, #0x69                  	// #105
    636c:	bl	0 <__assert_fail>

0000000000006370 <_ZNSt14_Function_base13_Base_managerIZL21validInsertValueIndexvE4$_14E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation>:
    6370:	cmp	w2, #0x1
    6374:	b.ne	637c <_ZNSt14_Function_base13_Base_managerIZL21validInsertValueIndexvE4$_14E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation+0xc>  // b.any
    6378:	str	x1, [x0]
    637c:	mov	w0, wzr
    6380:	ret

0000000000006384 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL21validInsertValueIndexvE4$_15E9_M_invokeERKSt9_Any_dataOS9_OSC_>:
    6384:	sub	sp, sp, #0x70
    6388:	stp	x29, x30, [sp, #16]
    638c:	stp	x28, x27, [sp, #32]
    6390:	stp	x26, x25, [sp, #48]
    6394:	stp	x24, x23, [sp, #64]
    6398:	stp	x22, x21, [sp, #80]
    639c:	stp	x20, x19, [sp, #96]
    63a0:	add	x29, sp, #0x10
    63a4:	ldp	x27, x21, [x1]
    63a8:	stp	xzr, xzr, [x8]
    63ac:	str	xzr, [x8, #16]
    63b0:	cbz	x21, 65c0 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL21validInsertValueIndexvE4$_15E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x23c>
    63b4:	ldr	x0, [x27]
    63b8:	mov	x23, x8
    63bc:	bl	0 <_ZNK4llvm5Value10getContextEv>
    63c0:	bl	0 <_ZN4llvm4Type10getInt32TyERNS_11LLVMContextE>
    63c4:	ldr	x8, [x27]
    63c8:	ldr	x20, [x8]
    63cc:	cbz	x20, 6554 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL21validInsertValueIndexvE4$_15E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x1d0>
    63d0:	ldrb	w8, [x20, #8]
    63d4:	mov	x26, x0
    63d8:	sub	w9, w8, #0xd
    63dc:	cmp	w9, #0x2
    63e0:	b.cc	63ec <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL21validInsertValueIndexvE4$_15E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x68>  // b.lo, b.ul, b.last
    63e4:	cmp	w8, #0x10
    63e8:	b.ne	6574 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL21validInsertValueIndexvE4$_15E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x1f0>  // b.any
    63ec:	cmp	w9, #0x2
    63f0:	b.cs	6594 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL21validInsertValueIndexvE4$_15E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x210>  // b.hs, b.nlast
    63f4:	cmp	w8, #0xd
    63f8:	b.ne	640c <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL21validInsertValueIndexvE4$_15E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x88>  // b.any
    63fc:	ldr	w28, [x20, #12]
    6400:	cmp	w28, #0x1
    6404:	b.ge	6418 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL21validInsertValueIndexvE4$_15E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x94>  // b.tcont
    6408:	b	6528 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL21validInsertValueIndexvE4$_15E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x1a4>
    640c:	ldr	w28, [x20, #32]
    6410:	cmp	w28, #0x1
    6414:	b.lt	6528 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL21validInsertValueIndexvE4$_15E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x1a4>  // b.tstop
    6418:	cmp	x21, #0x2
    641c:	b.cc	65b4 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL21validInsertValueIndexvE4$_15E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x230>  // b.lo, b.ul, b.last
    6420:	mov	x21, xzr
    6424:	mov	x24, xzr
    6428:	mov	x22, xzr
    642c:	stp	x26, xzr, [sp]
    6430:	b	6448 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL21validInsertValueIndexvE4$_15E9_M_invokeERKSt9_Any_dataOS9_OSC_+0xc4>
    6434:	str	x25, [x24], #8
    6438:	str	x24, [x23, #8]
    643c:	add	x22, x22, #0x1
    6440:	cmp	x28, x22
    6444:	b.eq	6528 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL21validInsertValueIndexvE4$_15E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x1a4>  // b.none
    6448:	mov	x0, x20
    644c:	mov	w1, w22
    6450:	bl	0 <_ZNK4llvm13CompositeType14getTypeAtIndexEj>
    6454:	ldr	x8, [x27, #8]
    6458:	ldr	x8, [x8]
    645c:	cmp	x0, x8
    6460:	b.ne	643c <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL21validInsertValueIndexvE4$_15E9_M_invokeERKSt9_Any_dataOS9_OSC_+0xb8>  // b.any
    6464:	mov	x0, x26
    6468:	mov	x1, x22
    646c:	mov	w2, wzr
    6470:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
    6474:	cmp	x24, x21
    6478:	mov	x25, x0
    647c:	b.ne	6434 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL21validInsertValueIndexvE4$_15E9_M_invokeERKSt9_Any_dataOS9_OSC_+0xb0>  // b.any
    6480:	ldr	x8, [sp, #8]
    6484:	sub	x24, x21, x8
    6488:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
    648c:	cmp	x24, x8
    6490:	b.eq	6548 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL21validInsertValueIndexvE4$_15E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x1c4>  // b.none
    6494:	asr	x19, x24, #3
    6498:	cmp	x24, #0x0
    649c:	csinc	x8, x19, xzr, ne  // ne = any
    64a0:	adds	x8, x8, x19
    64a4:	lsr	x10, x8, #60
    64a8:	cset	w9, cs  // cs = hs, nlast
    64ac:	cmp	x10, #0x0
    64b0:	cset	w10, ne  // ne = any
    64b4:	orr	w9, w9, w10
    64b8:	cmp	w9, #0x0
    64bc:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
    64c0:	csel	x21, x9, x8, ne  // ne = any
    64c4:	cbz	x21, 64d8 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL21validInsertValueIndexvE4$_15E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x154>
    64c8:	lsl	x0, x21, #3
    64cc:	bl	0 <_Znwm>
    64d0:	mov	x26, x0
    64d4:	b	64dc <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL21validInsertValueIndexvE4$_15E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x158>
    64d8:	mov	x26, xzr
    64dc:	add	x19, x26, x19, lsl #3
    64e0:	str	x25, [x19]
    64e4:	ldr	x25, [sp, #8]
    64e8:	cmp	x24, #0x1
    64ec:	b.lt	6500 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL21validInsertValueIndexvE4$_15E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x17c>  // b.tstop
    64f0:	mov	x0, x26
    64f4:	mov	x1, x25
    64f8:	mov	x2, x24
    64fc:	bl	0 <memmove>
    6500:	add	x24, x19, #0x8
    6504:	cbz	x25, 6510 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL21validInsertValueIndexvE4$_15E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x18c>
    6508:	mov	x0, x25
    650c:	bl	0 <_ZdlPv>
    6510:	stp	x26, x24, [x23]
    6514:	add	x21, x26, x21, lsl #3
    6518:	str	x26, [sp, #8]
    651c:	ldr	x26, [sp]
    6520:	str	x21, [x23, #16]
    6524:	b	643c <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL21validInsertValueIndexvE4$_15E9_M_invokeERKSt9_Any_dataOS9_OSC_+0xb8>
    6528:	ldp	x20, x19, [sp, #96]
    652c:	ldp	x22, x21, [sp, #80]
    6530:	ldp	x24, x23, [sp, #64]
    6534:	ldp	x26, x25, [sp, #48]
    6538:	ldp	x28, x27, [sp, #32]
    653c:	ldp	x29, x30, [sp, #16]
    6540:	add	sp, sp, #0x70
    6544:	ret
    6548:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    654c:	add	x0, x0, #0x0
    6550:	bl	0 <_ZSt20__throw_length_errorPKc>
    6554:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6558:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    655c:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6560:	add	x0, x0, #0x0
    6564:	add	x1, x1, #0x0
    6568:	add	x3, x3, #0x0
    656c:	mov	w2, #0x69                  	// #105
    6570:	bl	0 <__assert_fail>
    6574:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6578:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    657c:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6580:	add	x0, x0, #0x0
    6584:	add	x1, x1, #0x0
    6588:	add	x3, x3, #0x0
    658c:	mov	w2, #0x108                 	// #264
    6590:	bl	0 <__assert_fail>
    6594:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6598:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    659c:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    65a0:	add	x0, x0, #0x0
    65a4:	add	x1, x1, #0x0
    65a8:	add	x3, x3, #0x0
    65ac:	mov	w2, #0xb7                  	// #183
    65b0:	bl	0 <__assert_fail>
    65b4:	mov	x0, x20
    65b8:	mov	w1, wzr
    65bc:	bl	0 <_ZNK4llvm13CompositeType14getTypeAtIndexEj>
    65c0:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    65c4:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    65c8:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    65cc:	add	x0, x0, #0x0
    65d0:	add	x1, x1, #0x0
    65d4:	add	x3, x3, #0x0
    65d8:	mov	w2, #0xfa                  	// #250
    65dc:	bl	0 <__assert_fail>

00000000000065e0 <_ZNSt14_Function_base13_Base_managerIZL21validInsertValueIndexvE4$_15E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation>:
    65e0:	cmp	w2, #0x1
    65e4:	b.ne	65ec <_ZNSt14_Function_base13_Base_managerIZL21validInsertValueIndexvE4$_15E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation+0xc>  // b.any
    65e8:	str	x1, [x0]
    65ec:	mov	w0, wzr
    65f0:	ret

00000000000065f4 <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZNS0_8fuzzeropL13anyVectorTypeEvEUlS4_S6_E_E9_M_invokeERKSt9_Any_dataOS4_OS6_>:
    65f4:	ldr	x8, [x2]
    65f8:	ldr	x8, [x8]
    65fc:	ldrb	w8, [x8, #8]
    6600:	cmp	w8, #0x10
    6604:	cset	w0, eq  // eq = none
    6608:	ret

000000000000660c <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzeropL13anyVectorTypeEvEUlNS1_8ArrayRefIPNS1_5ValueEEEPKS4_E_E10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation>:
    660c:	cmp	w2, #0x1
    6610:	b.ne	6618 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzeropL13anyVectorTypeEvEUlNS1_8ArrayRefIPNS1_5ValueEEEPKS4_E_E10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation+0xc>  // b.any
    6614:	str	x1, [x0]
    6618:	mov	w0, wzr
    661c:	ret

0000000000006620 <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZNS0_8fuzzeropL22matchScalarOfFirstTypeEvEUlS4_S6_E_E9_M_invokeERKSt9_Any_dataOS4_OS6_>:
    6620:	stp	x29, x30, [sp, #-16]!
    6624:	mov	x29, sp
    6628:	ldr	x8, [x1, #8]
    662c:	cbz	x8, 6668 <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZNS0_8fuzzeropL22matchScalarOfFirstTypeEvEUlS4_S6_E_E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x48>
    6630:	ldr	x8, [x1]
    6634:	ldr	x9, [x2]
    6638:	ldr	x8, [x8]
    663c:	ldr	x9, [x9]
    6640:	ldr	x8, [x8]
    6644:	ldrb	w10, [x8, #8]
    6648:	cmp	w10, #0x10
    664c:	b.ne	6658 <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZNS0_8fuzzeropL22matchScalarOfFirstTypeEvEUlS4_S6_E_E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x38>  // b.any
    6650:	ldr	x8, [x8, #16]
    6654:	ldr	x8, [x8]
    6658:	cmp	x9, x8
    665c:	cset	w0, eq  // eq = none
    6660:	ldp	x29, x30, [sp], #16
    6664:	ret
    6668:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    666c:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6670:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6674:	add	x0, x0, #0x0
    6678:	add	x1, x1, #0x0
    667c:	add	x3, x3, #0x0
    6680:	mov	w2, #0xd1                  	// #209
    6684:	bl	0 <__assert_fail>

0000000000006688 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzeropL22matchScalarOfFirstTypeEvEUlNS1_8ArrayRefIPNS1_5ValueEEEPKS4_E_E10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation>:
    6688:	cmp	w2, #0x1
    668c:	b.ne	6694 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzeropL22matchScalarOfFirstTypeEvEUlNS1_8ArrayRefIPNS1_5ValueEEEPKS4_E_E10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation+0xc>  // b.any
    6690:	str	x1, [x0]
    6694:	mov	w0, wzr
    6698:	ret

000000000000669c <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzeropL22matchScalarOfFirstTypeEvEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_>:
    669c:	stp	x29, x30, [sp, #-16]!
    66a0:	mov	x29, sp
    66a4:	ldr	x9, [x1, #8]
    66a8:	cbz	x9, 66d4 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzeropL22matchScalarOfFirstTypeEvEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x38>
    66ac:	ldr	x9, [x1]
    66b0:	ldr	x9, [x9]
    66b4:	ldr	x0, [x9]
    66b8:	ldrb	w9, [x0, #8]
    66bc:	cmp	w9, #0x10
    66c0:	b.ne	66cc <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzeropL22matchScalarOfFirstTypeEvEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x30>  // b.any
    66c4:	ldr	x9, [x0, #16]
    66c8:	ldr	x0, [x9]
    66cc:	ldp	x29, x30, [sp], #16
    66d0:	b	0 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeE>
    66d4:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    66d8:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    66dc:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    66e0:	add	x0, x0, #0x0
    66e4:	add	x1, x1, #0x0
    66e8:	add	x3, x3, #0x0
    66ec:	mov	w2, #0xd5                  	// #213
    66f0:	bl	0 <__assert_fail>

00000000000066f4 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzeropL22matchScalarOfFirstTypeEvEUlNS1_8ArrayRefIPNS1_5ValueEEENS3_IPNS1_4TypeEEEE_E10_M_managerERSt9_Any_dataRKSC_St18_Manager_operation>:
    66f4:	cmp	w2, #0x1
    66f8:	b.ne	6700 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzeropL22matchScalarOfFirstTypeEvEUlNS1_8ArrayRefIPNS1_5ValueEEENS3_IPNS1_4TypeEEEE_E10_M_managerERSt9_Any_dataRKSC_St18_Manager_operation+0xc>  // b.any
    66fc:	str	x1, [x0]
    6700:	mov	w0, wzr
    6704:	ret

0000000000006708 <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZL23validShuffleVectorIndexvE4$_16E9_M_invokeERKSt9_Any_dataOS4_OS6_>:
    6708:	stp	x29, x30, [sp, #-16]!
    670c:	mov	x29, sp
    6710:	ldr	x8, [x1, #8]
    6714:	cbz	x8, 6734 <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZL23validShuffleVectorIndexvE4$_16E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x2c>
    6718:	cmp	x8, #0x1
    671c:	b.eq	6734 <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZL23validShuffleVectorIndexvE4$_16E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x2c>  // b.none
    6720:	ldr	x8, [x1]
    6724:	ldr	x2, [x2]
    6728:	ldp	x0, x1, [x8]
    672c:	ldp	x29, x30, [sp], #16
    6730:	b	0 <_ZN4llvm17ShuffleVectorInst15isValidOperandsEPKNS_5ValueES3_S3_>
    6734:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6738:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    673c:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6740:	add	x0, x0, #0x0
    6744:	add	x1, x1, #0x0
    6748:	add	x3, x3, #0x0
    674c:	mov	w2, #0xfa                  	// #250
    6750:	bl	0 <__assert_fail>

0000000000006754 <_ZNSt14_Function_base13_Base_managerIZL23validShuffleVectorIndexvE4$_16E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation>:
    6754:	cmp	w2, #0x1
    6758:	b.ne	6760 <_ZNSt14_Function_base13_Base_managerIZL23validShuffleVectorIndexvE4$_16E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation+0xc>  // b.any
    675c:	str	x1, [x0]
    6760:	mov	w0, wzr
    6764:	ret

0000000000006768 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL23validShuffleVectorIndexvE4$_17E9_M_invokeERKSt9_Any_dataOS9_OSC_>:
    6768:	stp	x29, x30, [sp, #-32]!
    676c:	stp	x20, x19, [sp, #16]
    6770:	mov	x29, sp
    6774:	ldr	x9, [x1, #8]
    6778:	cbz	x9, 67d8 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL23validShuffleVectorIndexvE4$_17E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x70>
    677c:	mov	x19, x8
    6780:	ldr	x8, [x1]
    6784:	ldr	x0, [x8]
    6788:	ldr	x20, [x0]
    678c:	cbz	x20, 67f8 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL23validShuffleVectorIndexvE4$_17E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x90>
    6790:	ldrb	w8, [x20, #8]
    6794:	cmp	w8, #0x10
    6798:	b.ne	6818 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZL23validShuffleVectorIndexvE4$_17E9_M_invokeERKSt9_Any_dataOS9_OSC_+0xb0>  // b.any
    679c:	bl	0 <_ZNK4llvm5Value10getContextEv>
    67a0:	bl	0 <_ZN4llvm4Type10getInt32TyERNS_11LLVMContextE>
    67a4:	ldr	w1, [x20, #32]
    67a8:	bl	0 <_ZN4llvm10VectorType3getEPNS_4TypeENS_12ElementCountE>
    67ac:	bl	0 <_ZN4llvm10UndefValue3getEPNS_4TypeE>
    67b0:	mov	x20, x0
    67b4:	mov	w0, #0x8                   	// #8
    67b8:	bl	0 <_Znwm>
    67bc:	add	x8, x0, #0x8
    67c0:	str	x20, [x0]
    67c4:	stp	x8, x8, [x19, #8]
    67c8:	str	x0, [x19]
    67cc:	ldp	x20, x19, [sp, #16]
    67d0:	ldp	x29, x30, [sp], #32
    67d4:	ret
    67d8:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    67dc:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    67e0:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    67e4:	add	x0, x0, #0x0
    67e8:	add	x1, x1, #0x0
    67ec:	add	x3, x3, #0x0
    67f0:	mov	w2, #0xfa                  	// #250
    67f4:	bl	0 <__assert_fail>
    67f8:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    67fc:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6800:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6804:	add	x0, x0, #0x0
    6808:	add	x1, x1, #0x0
    680c:	add	x3, x3, #0x0
    6810:	mov	w2, #0x69                  	// #105
    6814:	bl	0 <__assert_fail>
    6818:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    681c:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6820:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6824:	add	x0, x0, #0x0
    6828:	add	x1, x1, #0x0
    682c:	add	x3, x3, #0x0
    6830:	mov	w2, #0x108                 	// #264
    6834:	bl	0 <__assert_fail>

0000000000006838 <_ZNSt14_Function_base13_Base_managerIZL23validShuffleVectorIndexvE4$_17E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation>:
    6838:	cmp	w2, #0x1
    683c:	b.ne	6844 <_ZNSt14_Function_base13_Base_managerIZL23validShuffleVectorIndexvE4$_17E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation+0xc>  // b.any
    6840:	str	x1, [x0]
    6844:	mov	w0, wzr
    6848:	ret

000000000000684c <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop15binOpDescriptorEjNS5_9BinaryOpsEE3$_0E9_M_invokeERKSt9_Any_dataOS4_OS6_>:
    684c:	sub	sp, sp, #0x30
    6850:	stp	x29, x30, [sp, #32]
    6854:	add	x29, sp, #0x20
    6858:	ldr	x8, [x1, #8]
    685c:	cbz	x8, 68a0 <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop15binOpDescriptorEjNS5_9BinaryOpsEE3$_0E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x54>
    6860:	cmp	x8, #0x1
    6864:	b.eq	68a0 <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop15binOpDescriptorEjNS5_9BinaryOpsEE3$_0E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x54>  // b.none
    6868:	ldr	x8, [x1]
    686c:	ldr	x4, [x2]
    6870:	ldr	w0, [x0]
    6874:	adrp	x9, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6878:	ldp	x1, x2, [x8]
    687c:	add	x9, x9, #0x0
    6880:	mov	w8, #0x103                 	// #259
    6884:	add	x3, sp, #0x8
    6888:	stp	x9, xzr, [sp, #8]
    688c:	strh	w8, [sp, #24]
    6890:	bl	0 <_ZN4llvm14BinaryOperator6CreateENS_11Instruction9BinaryOpsEPNS_5ValueES4_RKNS_5TwineEPS1_>
    6894:	ldp	x29, x30, [sp, #32]
    6898:	add	sp, sp, #0x30
    689c:	ret
    68a0:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    68a4:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    68a8:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    68ac:	add	x0, x0, #0x0
    68b0:	add	x1, x1, #0x0
    68b4:	add	x3, x3, #0x0
    68b8:	mov	w2, #0xfa                  	// #250
    68bc:	bl	0 <__assert_fail>

00000000000068c0 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzerop15binOpDescriptorEjNS1_11Instruction9BinaryOpsEE3$_0E10_M_managerERSt9_Any_dataRKS7_St18_Manager_operation>:
    68c0:	cmp	w2, #0x2
    68c4:	b.eq	68dc <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzerop15binOpDescriptorEjNS1_11Instruction9BinaryOpsEE3$_0E10_M_managerERSt9_Any_dataRKS7_St18_Manager_operation+0x1c>  // b.none
    68c8:	cmp	w2, #0x1
    68cc:	b.ne	68e4 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzerop15binOpDescriptorEjNS1_11Instruction9BinaryOpsEE3$_0E10_M_managerERSt9_Any_dataRKS7_St18_Manager_operation+0x24>  // b.any
    68d0:	str	x1, [x0]
    68d4:	mov	w0, wzr
    68d8:	ret
    68dc:	ldr	w8, [x1]
    68e0:	str	w8, [x0]
    68e4:	mov	w0, wzr
    68e8:	ret

00000000000068ec <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop15cmpOpDescriptorEjNS5_8OtherOpsENS0_7CmpInst9PredicateEE3$_1E9_M_invokeERKSt9_Any_dataOS4_OS6_>:
    68ec:	sub	sp, sp, #0x30
    68f0:	stp	x29, x30, [sp, #32]
    68f4:	add	x29, sp, #0x20
    68f8:	ldr	x8, [x1, #8]
    68fc:	cbz	x8, 6944 <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop15cmpOpDescriptorEjNS5_8OtherOpsENS0_7CmpInst9PredicateEE3$_1E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x58>
    6900:	cmp	x8, #0x1
    6904:	b.eq	6944 <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop15cmpOpDescriptorEjNS5_8OtherOpsENS0_7CmpInst9PredicateEE3$_1E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x58>  // b.none
    6908:	ldr	x9, [x1]
    690c:	ldp	w8, w1, [x0]
    6910:	ldr	x5, [x2]
    6914:	adrp	x10, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6918:	ldp	x2, x3, [x9]
    691c:	add	x10, x10, #0x0
    6920:	mov	w9, #0x103                 	// #259
    6924:	add	x4, sp, #0x8
    6928:	mov	w0, w8
    692c:	stp	x10, xzr, [sp, #8]
    6930:	strh	w9, [sp, #24]
    6934:	bl	0 <_ZN4llvm7CmpInst6CreateENS_11Instruction8OtherOpsENS0_9PredicateEPNS_5ValueES5_RKNS_5TwineEPS1_>
    6938:	ldp	x29, x30, [sp, #32]
    693c:	add	sp, sp, #0x30
    6940:	ret
    6944:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6948:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    694c:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6950:	add	x0, x0, #0x0
    6954:	add	x1, x1, #0x0
    6958:	add	x3, x3, #0x0
    695c:	mov	w2, #0xfa                  	// #250
    6960:	bl	0 <__assert_fail>

0000000000006964 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzerop15cmpOpDescriptorEjNS1_11Instruction8OtherOpsENS1_7CmpInst9PredicateEE3$_1E10_M_managerERSt9_Any_dataRKS9_St18_Manager_operation>:
    6964:	cmp	w2, #0x2
    6968:	b.eq	6980 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzerop15cmpOpDescriptorEjNS1_11Instruction8OtherOpsENS1_7CmpInst9PredicateEE3$_1E10_M_managerERSt9_Any_dataRKS9_St18_Manager_operation+0x1c>  // b.none
    696c:	cmp	w2, #0x1
    6970:	b.ne	6988 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzerop15cmpOpDescriptorEjNS1_11Instruction8OtherOpsENS1_7CmpInst9PredicateEE3$_1E10_M_managerERSt9_Any_dataRKS9_St18_Manager_operation+0x24>  // b.any
    6974:	str	x1, [x0]
    6978:	mov	w0, wzr
    697c:	ret
    6980:	ldr	x8, [x1]
    6984:	str	x8, [x0]
    6988:	mov	w0, wzr
    698c:	ret

0000000000006990 <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZNS0_8fuzzerop20splitBlockDescriptorEjE3$_3E9_M_invokeERKSt9_Any_dataOS4_OS6_>:
    6990:	ldr	x8, [x2]
    6994:	mov	w1, #0x1                   	// #1
    6998:	ldr	x0, [x8]
    699c:	b	0 <_ZNK4llvm4Type11isIntegerTyEj>

00000000000069a0 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzerop20splitBlockDescriptorEjE3$_3E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation>:
    69a0:	cmp	w2, #0x1
    69a4:	b.ne	69ac <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzerop20splitBlockDescriptorEjE3$_3E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0xc>  // b.any
    69a8:	str	x1, [x0]
    69ac:	mov	w0, wzr
    69b0:	ret

00000000000069b4 <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop20splitBlockDescriptorEjE3$_2E9_M_invokeERKSt9_Any_dataOS4_OS6_>:
    69b4:	sub	sp, sp, #0x50
    69b8:	stp	x29, x30, [sp, #32]
    69bc:	stp	x22, x21, [sp, #48]
    69c0:	stp	x20, x19, [sp, #64]
    69c4:	add	x29, sp, #0x20
    69c8:	ldr	x8, [x2]
    69cc:	ldp	x21, x22, [x1]
    69d0:	adrp	x9, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    69d4:	add	x9, x9, #0x0
    69d8:	ldr	x19, [x8, #40]
    69dc:	stp	x9, xzr, [sp, #8]
    69e0:	mov	w9, #0x103                 	// #259
    69e4:	add	x1, x8, #0x18
    69e8:	add	x2, sp, #0x8
    69ec:	mov	x0, x19
    69f0:	strh	w9, [sp, #24]
    69f4:	bl	0 <_ZN4llvm10BasicBlock15splitBasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEERKNS_5TwineE>
    69f8:	mov	x20, x0
    69fc:	mov	x0, x19
    6a00:	bl	0 <_ZNK4llvm10BasicBlock14getFirstNonPHIEv>
    6a04:	ldrb	w8, [x0, #16]
    6a08:	sub	w8, w8, #0x22
    6a0c:	cmp	w8, #0x38
    6a10:	b.hi	6a48 <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop20splitBlockDescriptorEjE3$_2E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x94>  // b.pmore
    6a14:	mov	w9, #0x1                   	// #1
    6a18:	lsl	x8, x9, x8
    6a1c:	mov	x9, #0x1                   	// #1
    6a20:	movk	x9, #0x600, lsl #32
    6a24:	movk	x9, #0x100, lsl #48
    6a28:	tst	x8, x9
    6a2c:	b.eq	6a48 <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop20splitBlockDescriptorEjE3$_2E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x94>  // b.none
    6a30:	ldp	x20, x19, [sp, #64]
    6a34:	ldp	x22, x21, [sp, #48]
    6a38:	ldp	x29, x30, [sp, #32]
    6a3c:	mov	x0, xzr
    6a40:	add	sp, sp, #0x50
    6a44:	ret
    6a48:	ldr	x8, [x19, #56]
    6a4c:	ldr	x8, [x8, #80]
    6a50:	ldrb	w9, [x8]
    6a54:	tbnz	w9, #2, 6b6c <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop20splitBlockDescriptorEjE3$_2E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x1b8>
    6a58:	sub	x9, x8, #0x18
    6a5c:	cmp	x8, #0x0
    6a60:	csel	x8, xzr, x9, eq  // eq = none
    6a64:	cmp	x19, x8
    6a68:	b.eq	6a30 <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop20splitBlockDescriptorEjE3$_2E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x7c>  // b.none
    6a6c:	cbz	x22, 6b8c <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop20splitBlockDescriptorEjE3$_2E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x1d8>
    6a70:	ldr	x21, [x21]
    6a74:	mov	x0, x19
    6a78:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    6a7c:	mov	x22, x0
    6a80:	mov	w0, #0x38                  	// #56
    6a84:	mov	w1, #0x3                   	// #3
    6a88:	bl	0 <_ZN4llvm4UsernwEmj>
    6a8c:	mov	x1, x19
    6a90:	mov	x2, x20
    6a94:	mov	x3, x21
    6a98:	mov	x4, x22
    6a9c:	bl	0 <_ZN4llvm10BranchInstC1EPNS_10BasicBlockES2_PNS_5ValueEPNS_11InstructionE>
    6aa0:	mov	x0, x19
    6aa4:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    6aa8:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    6aac:	mov	x0, x19
    6ab0:	bl	0 <_ZN4llvm10BasicBlock4phisEv>
    6ab4:	cmp	x0, x1
    6ab8:	b.eq	6a30 <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop20splitBlockDescriptorEjE3$_2E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x7c>  // b.none
    6abc:	mov	x21, x0
    6ac0:	mov	x20, x1
    6ac4:	ldr	x0, [x21]
    6ac8:	bl	0 <_ZN4llvm10UndefValue3getEPNS_4TypeE>
    6acc:	mov	x1, x0
    6ad0:	mov	x0, x21
    6ad4:	mov	x2, x19
    6ad8:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6adc:	cbz	x21, 6b0c <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop20splitBlockDescriptorEjE3$_2E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x158>
    6ae0:	ldr	x8, [x21, #32]
    6ae4:	ldrb	w9, [x8]
    6ae8:	tbnz	w9, #2, 6b2c <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop20splitBlockDescriptorEjE3$_2E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x178>
    6aec:	cbz	x8, 6b4c <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop20splitBlockDescriptorEjE3$_2E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x198>
    6af0:	ldurb	w9, [x8, #-8]
    6af4:	sub	x8, x8, #0x18
    6af8:	cmp	w9, #0x4f
    6afc:	csel	x21, x8, xzr, eq  // eq = none
    6b00:	cmp	x21, x20
    6b04:	b.ne	6ac4 <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop20splitBlockDescriptorEjE3$_2E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x110>  // b.any
    6b08:	b	6a30 <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop20splitBlockDescriptorEjE3$_2E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x7c>
    6b0c:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6b10:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6b14:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6b18:	add	x0, x0, #0x0
    6b1c:	add	x1, x1, #0x0
    6b20:	add	x3, x3, #0x0
    6b24:	mov	w2, #0x13d                 	// #317
    6b28:	bl	0 <__assert_fail>
    6b2c:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6b30:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6b34:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6b38:	add	x0, x0, #0x0
    6b3c:	add	x1, x1, #0x0
    6b40:	add	x3, x3, #0x0
    6b44:	mov	w2, #0x8b                  	// #139
    6b48:	bl	0 <__assert_fail>
    6b4c:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6b50:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6b54:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6b58:	add	x0, x0, #0x0
    6b5c:	add	x1, x1, #0x0
    6b60:	add	x3, x3, #0x0
    6b64:	mov	w2, #0x5b                  	// #91
    6b68:	bl	0 <__assert_fail>
    6b6c:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6b70:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6b74:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6b78:	add	x0, x0, #0x0
    6b7c:	add	x1, x1, #0x0
    6b80:	add	x3, x3, #0x0
    6b84:	mov	w2, #0x8b                  	// #139
    6b88:	bl	0 <__assert_fail>
    6b8c:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6b90:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6b94:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6b98:	add	x0, x0, #0x0
    6b9c:	add	x1, x1, #0x0
    6ba0:	add	x3, x3, #0x0
    6ba4:	mov	w2, #0xfa                  	// #250
    6ba8:	bl	0 <__assert_fail>

0000000000006bac <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzerop20splitBlockDescriptorEjE3$_2E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation>:
    6bac:	cmp	w2, #0x1
    6bb0:	b.ne	6bb8 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzerop20splitBlockDescriptorEjE3$_2E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0xc>  // b.any
    6bb4:	str	x1, [x0]
    6bb8:	mov	w0, wzr
    6bbc:	ret

0000000000006bc0 <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop13gepDescriptorEjE3$_4E9_M_invokeERKSt9_Any_dataOS4_OS6_>:
    6bc0:	sub	sp, sp, #0x30
    6bc4:	stp	x29, x30, [sp, #32]
    6bc8:	add	x29, sp, #0x20
    6bcc:	ldr	x8, [x1, #8]
    6bd0:	cbz	x8, 6c28 <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop13gepDescriptorEjE3$_4E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x68>
    6bd4:	ldr	x9, [x1]
    6bd8:	ldr	x1, [x9]
    6bdc:	ldr	x10, [x1]
    6be0:	cbz	x10, 6c48 <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop13gepDescriptorEjE3$_4E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x88>
    6be4:	ldrb	w11, [x10, #8]
    6be8:	cmp	w11, #0xf
    6bec:	b.ne	6c68 <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop13gepDescriptorEjE3$_4E9_M_invokeERKSt9_Any_dataOS4_OS6_+0xa8>  // b.any
    6bf0:	ldr	x5, [x2]
    6bf4:	ldr	x0, [x10, #24]
    6bf8:	sub	x3, x8, #0x1
    6bfc:	adrp	x8, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6c00:	add	x8, x8, #0x0
    6c04:	add	x2, x9, #0x8
    6c08:	stp	x8, xzr, [sp, #8]
    6c0c:	mov	w8, #0x103                 	// #259
    6c10:	add	x4, sp, #0x8
    6c14:	strh	w8, [sp, #24]
    6c18:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6c1c:	ldp	x29, x30, [sp, #32]
    6c20:	add	sp, sp, #0x30
    6c24:	ret
    6c28:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6c2c:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6c30:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6c34:	add	x0, x0, #0x0
    6c38:	add	x1, x1, #0x0
    6c3c:	add	x3, x3, #0x0
    6c40:	mov	w2, #0xfa                  	// #250
    6c44:	bl	0 <__assert_fail>
    6c48:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6c4c:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6c50:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6c54:	add	x0, x0, #0x0
    6c58:	add	x1, x1, #0x0
    6c5c:	add	x3, x3, #0x0
    6c60:	mov	w2, #0x69                  	// #105
    6c64:	bl	0 <__assert_fail>
    6c68:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6c6c:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6c70:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6c74:	add	x0, x0, #0x0
    6c78:	add	x1, x1, #0x0
    6c7c:	add	x3, x3, #0x0
    6c80:	mov	w2, #0x108                 	// #264
    6c84:	bl	0 <__assert_fail>

0000000000006c88 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzerop13gepDescriptorEjE3$_4E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation>:
    6c88:	cmp	w2, #0x1
    6c8c:	b.ne	6c94 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzerop13gepDescriptorEjE3$_4E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0xc>  // b.any
    6c90:	str	x1, [x0]
    6c94:	mov	w0, wzr
    6c98:	ret

0000000000006c9c <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop22extractValueDescriptorEjE3$_5E9_M_invokeERKSt9_Any_dataOS4_OS6_>:
    6c9c:	sub	sp, sp, #0x50
    6ca0:	stp	x29, x30, [sp, #32]
    6ca4:	stp	x22, x21, [sp, #48]
    6ca8:	stp	x20, x19, [sp, #64]
    6cac:	add	x29, sp, #0x20
    6cb0:	ldr	x8, [x1, #8]
    6cb4:	cmp	x8, #0x1
    6cb8:	b.ls	6da0 <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop22extractValueDescriptorEjE3$_5E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x104>  // b.plast
    6cbc:	ldr	x21, [x1]
    6cc0:	ldr	x8, [x21, #8]
    6cc4:	cbz	x8, 6dc0 <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop22extractValueDescriptorEjE3$_5E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x124>
    6cc8:	ldrb	w9, [x8, #16]
    6ccc:	cmp	w9, #0xd
    6cd0:	b.ne	6de0 <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop22extractValueDescriptorEjE3$_5E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x144>  // b.any
    6cd4:	ldr	w22, [x8, #32]
    6cd8:	ldr	x19, [x2]
    6cdc:	add	x20, x8, #0x18
    6ce0:	cmp	w22, #0x40
    6ce4:	b.ls	6d00 <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop22extractValueDescriptorEjE3$_5E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x64>  // b.plast
    6ce8:	mov	x0, x20
    6cec:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    6cf0:	sub	w8, w22, w0
    6cf4:	cmp	w8, #0x41
    6cf8:	b.cs	6e20 <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop22extractValueDescriptorEjE3$_5E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x184>  // b.hs, b.nlast
    6cfc:	ldr	x20, [x20]
    6d00:	ldr	x8, [x20]
    6d04:	ldr	x20, [x21]
    6d08:	adrp	x9, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6d0c:	add	x9, x9, #0x0
    6d10:	mov	w10, #0x103                 	// #259
    6d14:	mov	w0, #0x58                  	// #88
    6d18:	mov	w1, #0x1                   	// #1
    6d1c:	stp	x9, xzr, [sp]
    6d20:	stur	w8, [x29, #-4]
    6d24:	strh	w10, [sp, #16]
    6d28:	bl	0 <_ZN4llvm4UsernwEmj>
    6d2c:	ldr	x8, [x20]
    6d30:	mov	x21, x0
    6d34:	sub	x1, x29, #0x4
    6d38:	mov	w2, #0x1                   	// #1
    6d3c:	mov	x0, x8
    6d40:	bl	0 <_ZN4llvm16ExtractValueInst14getIndexedTypeEPNS_4TypeENS_8ArrayRefIjEE>
    6d44:	cbz	x0, 6e00 <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop22extractValueDescriptorEjE3$_5E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x164>
    6d48:	mov	x1, x0
    6d4c:	mov	w2, #0x40                  	// #64
    6d50:	mov	x0, x21
    6d54:	mov	x3, x20
    6d58:	mov	x4, x19
    6d5c:	bl	0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6d60:	adrp	x8, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6d64:	ldr	d0, [x8]
    6d68:	add	x8, x21, #0x48
    6d6c:	sub	x1, x29, #0x4
    6d70:	mov	x3, sp
    6d74:	mov	w2, #0x1                   	// #1
    6d78:	mov	x0, x21
    6d7c:	str	x8, [x21, #56]
    6d80:	str	d0, [x21, #64]
    6d84:	bl	0 <_ZN4llvm16ExtractValueInst4initENS_8ArrayRefIjEERKNS_5TwineE>
    6d88:	mov	x0, x21
    6d8c:	ldp	x20, x19, [sp, #64]
    6d90:	ldp	x22, x21, [sp, #48]
    6d94:	ldp	x29, x30, [sp, #32]
    6d98:	add	sp, sp, #0x50
    6d9c:	ret
    6da0:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6da4:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6da8:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6dac:	add	x0, x0, #0x0
    6db0:	add	x1, x1, #0x0
    6db4:	add	x3, x3, #0x0
    6db8:	mov	w2, #0xfa                  	// #250
    6dbc:	bl	0 <__assert_fail>
    6dc0:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6dc4:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6dc8:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6dcc:	add	x0, x0, #0x0
    6dd0:	add	x1, x1, #0x0
    6dd4:	add	x3, x3, #0x0
    6dd8:	mov	w2, #0x69                  	// #105
    6ddc:	bl	0 <__assert_fail>
    6de0:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6de4:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6de8:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6dec:	add	x0, x0, #0x0
    6df0:	add	x1, x1, #0x0
    6df4:	add	x3, x3, #0x0
    6df8:	mov	w2, #0x108                 	// #264
    6dfc:	bl	0 <__assert_fail>
    6e00:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6e04:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6e08:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6e0c:	add	x0, x0, #0x0
    6e10:	add	x1, x1, #0x0
    6e14:	add	x3, x3, #0x0
    6e18:	mov	w2, #0x375                 	// #885
    6e1c:	bl	0 <__assert_fail>
    6e20:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6e24:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6e28:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6e2c:	add	x0, x0, #0x0
    6e30:	add	x1, x1, #0x0
    6e34:	add	x3, x3, #0x0
    6e38:	mov	w2, #0x657                 	// #1623
    6e3c:	bl	0 <__assert_fail>

0000000000006e40 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzerop22extractValueDescriptorEjE3$_5E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation>:
    6e40:	cmp	w2, #0x1
    6e44:	b.ne	6e4c <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzerop22extractValueDescriptorEjE3$_5E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0xc>  // b.any
    6e48:	str	x1, [x0]
    6e4c:	mov	w0, wzr
    6e50:	ret

0000000000006e54 <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop21insertValueDescriptorEjE3$_6E9_M_invokeERKSt9_Any_dataOS4_OS6_>:
    6e54:	sub	sp, sp, #0x50
    6e58:	stp	x29, x30, [sp, #32]
    6e5c:	stp	x22, x21, [sp, #48]
    6e60:	stp	x20, x19, [sp, #64]
    6e64:	add	x29, sp, #0x20
    6e68:	ldr	x8, [x1, #8]
    6e6c:	cmp	x8, #0x2
    6e70:	b.ls	6f48 <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop21insertValueDescriptorEjE3$_6E9_M_invokeERKSt9_Any_dataOS4_OS6_+0xf4>  // b.plast
    6e74:	ldr	x21, [x1]
    6e78:	ldr	x8, [x21, #16]
    6e7c:	cbz	x8, 6f68 <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop21insertValueDescriptorEjE3$_6E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x114>
    6e80:	ldrb	w9, [x8, #16]
    6e84:	cmp	w9, #0xd
    6e88:	b.ne	6f88 <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop21insertValueDescriptorEjE3$_6E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x134>  // b.any
    6e8c:	ldr	w22, [x8, #32]
    6e90:	ldr	x19, [x2]
    6e94:	add	x20, x8, #0x18
    6e98:	cmp	w22, #0x40
    6e9c:	b.ls	6eb8 <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop21insertValueDescriptorEjE3$_6E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x64>  // b.plast
    6ea0:	mov	x0, x20
    6ea4:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    6ea8:	sub	w8, w22, w0
    6eac:	cmp	w8, #0x41
    6eb0:	b.cs	6fa8 <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop21insertValueDescriptorEjE3$_6E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x154>  // b.hs, b.nlast
    6eb4:	ldr	x20, [x20]
    6eb8:	ldr	x8, [x20]
    6ebc:	ldp	x20, x21, [x21]
    6ec0:	adrp	x9, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6ec4:	add	x9, x9, #0x0
    6ec8:	mov	w10, #0x103                 	// #259
    6ecc:	mov	w0, #0x58                  	// #88
    6ed0:	mov	w1, #0x2                   	// #2
    6ed4:	stp	x9, xzr, [sp]
    6ed8:	stur	w8, [x29, #-4]
    6edc:	strh	w10, [sp, #16]
    6ee0:	bl	0 <_ZN4llvm4UsernwEmj>
    6ee4:	ldr	x1, [x20]
    6ee8:	sub	x3, x0, #0x30
    6eec:	mov	w2, #0x41                  	// #65
    6ef0:	mov	w4, #0x2                   	// #2
    6ef4:	mov	x5, x19
    6ef8:	mov	x22, x0
    6efc:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
    6f00:	adrp	x8, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6f04:	ldr	d0, [x8]
    6f08:	add	x8, x22, #0x48
    6f0c:	sub	x3, x29, #0x4
    6f10:	mov	x5, sp
    6f14:	mov	w4, #0x1                   	// #1
    6f18:	mov	x0, x22
    6f1c:	mov	x1, x20
    6f20:	mov	x2, x21
    6f24:	str	x8, [x22, #56]
    6f28:	str	d0, [x22, #64]
    6f2c:	bl	0 <_ZN4llvm15InsertValueInst4initEPNS_5ValueES2_NS_8ArrayRefIjEERKNS_5TwineE>
    6f30:	mov	x0, x22
    6f34:	ldp	x20, x19, [sp, #64]
    6f38:	ldp	x22, x21, [sp, #48]
    6f3c:	ldp	x29, x30, [sp, #32]
    6f40:	add	sp, sp, #0x50
    6f44:	ret
    6f48:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6f4c:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6f50:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6f54:	add	x0, x0, #0x0
    6f58:	add	x1, x1, #0x0
    6f5c:	add	x3, x3, #0x0
    6f60:	mov	w2, #0xfa                  	// #250
    6f64:	bl	0 <__assert_fail>
    6f68:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6f6c:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6f70:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6f74:	add	x0, x0, #0x0
    6f78:	add	x1, x1, #0x0
    6f7c:	add	x3, x3, #0x0
    6f80:	mov	w2, #0x69                  	// #105
    6f84:	bl	0 <__assert_fail>
    6f88:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6f8c:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6f90:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6f94:	add	x0, x0, #0x0
    6f98:	add	x1, x1, #0x0
    6f9c:	add	x3, x3, #0x0
    6fa0:	mov	w2, #0x108                 	// #264
    6fa4:	bl	0 <__assert_fail>
    6fa8:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6fac:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6fb0:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    6fb4:	add	x0, x0, #0x0
    6fb8:	add	x1, x1, #0x0
    6fbc:	add	x3, x3, #0x0
    6fc0:	mov	w2, #0x657                 	// #1623
    6fc4:	bl	0 <__assert_fail>

0000000000006fc8 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzerop21insertValueDescriptorEjE3$_6E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation>:
    6fc8:	cmp	w2, #0x1
    6fcc:	b.ne	6fd4 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzerop21insertValueDescriptorEjE3$_6E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0xc>  // b.any
    6fd0:	str	x1, [x0]
    6fd4:	mov	w0, wzr
    6fd8:	ret

0000000000006fdc <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop24extractElementDescriptorEjE3$_7E9_M_invokeERKSt9_Any_dataOS4_OS6_>:
    6fdc:	sub	sp, sp, #0x50
    6fe0:	stp	x29, x30, [sp, #32]
    6fe4:	stp	x22, x21, [sp, #48]
    6fe8:	stp	x20, x19, [sp, #64]
    6fec:	add	x29, sp, #0x20
    6ff0:	ldr	x8, [x1, #8]
    6ff4:	cbz	x8, 705c <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop24extractElementDescriptorEjE3$_7E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x80>
    6ff8:	cmp	x8, #0x1
    6ffc:	b.eq	705c <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop24extractElementDescriptorEjE3$_7E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x80>  // b.none
    7000:	ldr	x8, [x1]
    7004:	ldr	x19, [x2]
    7008:	adrp	x9, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    700c:	add	x9, x9, #0x0
    7010:	ldp	x20, x21, [x8]
    7014:	mov	w8, #0x103                 	// #259
    7018:	mov	w0, #0x38                  	// #56
    701c:	mov	w1, #0x2                   	// #2
    7020:	stp	x9, xzr, [sp, #8]
    7024:	strh	w8, [sp, #24]
    7028:	bl	0 <_ZN4llvm4UsernwEmj>
    702c:	add	x3, sp, #0x8
    7030:	mov	x1, x20
    7034:	mov	x2, x21
    7038:	mov	x4, x19
    703c:	mov	x22, x0
    7040:	bl	0 <_ZN4llvm18ExtractElementInstC1EPNS_5ValueES2_RKNS_5TwineEPNS_11InstructionE>
    7044:	mov	x0, x22
    7048:	ldp	x20, x19, [sp, #64]
    704c:	ldp	x22, x21, [sp, #48]
    7050:	ldp	x29, x30, [sp, #32]
    7054:	add	sp, sp, #0x50
    7058:	ret
    705c:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    7060:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    7064:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    7068:	add	x0, x0, #0x0
    706c:	add	x1, x1, #0x0
    7070:	add	x3, x3, #0x0
    7074:	mov	w2, #0xfa                  	// #250
    7078:	bl	0 <__assert_fail>

000000000000707c <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzerop24extractElementDescriptorEjE3$_7E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation>:
    707c:	cmp	w2, #0x1
    7080:	b.ne	7088 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzerop24extractElementDescriptorEjE3$_7E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0xc>  // b.any
    7084:	str	x1, [x0]
    7088:	mov	w0, wzr
    708c:	ret

0000000000007090 <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop23insertElementDescriptorEjE3$_8E9_M_invokeERKSt9_Any_dataOS4_OS6_>:
    7090:	sub	sp, sp, #0x60
    7094:	stp	x29, x30, [sp, #32]
    7098:	str	x23, [sp, #48]
    709c:	stp	x22, x21, [sp, #64]
    70a0:	stp	x20, x19, [sp, #80]
    70a4:	add	x29, sp, #0x20
    70a8:	ldr	x8, [x1, #8]
    70ac:	cbz	x8, 7128 <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop23insertElementDescriptorEjE3$_8E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x98>
    70b0:	cmp	x8, #0x1
    70b4:	b.eq	7128 <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop23insertElementDescriptorEjE3$_8E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x98>  // b.none
    70b8:	cmp	x8, #0x2
    70bc:	b.ls	7128 <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop23insertElementDescriptorEjE3$_8E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x98>  // b.plast
    70c0:	ldr	x8, [x1]
    70c4:	ldr	x19, [x2]
    70c8:	adrp	x9, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    70cc:	add	x9, x9, #0x0
    70d0:	ldp	x20, x21, [x8]
    70d4:	ldr	x22, [x8, #16]
    70d8:	mov	w8, #0x103                 	// #259
    70dc:	mov	w0, #0x38                  	// #56
    70e0:	mov	w1, #0x3                   	// #3
    70e4:	stp	x9, xzr, [sp, #8]
    70e8:	strh	w8, [sp, #24]
    70ec:	bl	0 <_ZN4llvm4UsernwEmj>
    70f0:	add	x4, sp, #0x8
    70f4:	mov	x1, x20
    70f8:	mov	x2, x21
    70fc:	mov	x3, x22
    7100:	mov	x5, x19
    7104:	mov	x23, x0
    7108:	bl	0 <_ZN4llvm17InsertElementInstC1EPNS_5ValueES2_S2_RKNS_5TwineEPNS_11InstructionE>
    710c:	mov	x0, x23
    7110:	ldp	x20, x19, [sp, #80]
    7114:	ldp	x22, x21, [sp, #64]
    7118:	ldr	x23, [sp, #48]
    711c:	ldp	x29, x30, [sp, #32]
    7120:	add	sp, sp, #0x60
    7124:	ret
    7128:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    712c:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    7130:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    7134:	add	x0, x0, #0x0
    7138:	add	x1, x1, #0x0
    713c:	add	x3, x3, #0x0
    7140:	mov	w2, #0xfa                  	// #250
    7144:	bl	0 <__assert_fail>

0000000000007148 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzerop23insertElementDescriptorEjE3$_8E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation>:
    7148:	cmp	w2, #0x1
    714c:	b.ne	7154 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzerop23insertElementDescriptorEjE3$_8E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0xc>  // b.any
    7150:	str	x1, [x0]
    7154:	mov	w0, wzr
    7158:	ret

000000000000715c <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop23shuffleVectorDescriptorEjE3$_9E9_M_invokeERKSt9_Any_dataOS4_OS6_>:
    715c:	sub	sp, sp, #0x50
    7160:	stp	x29, x30, [sp, #32]
    7164:	stp	x22, x21, [sp, #48]
    7168:	stp	x20, x19, [sp, #64]
    716c:	add	x29, sp, #0x20
    7170:	ldp	x21, x22, [x1]
    7174:	ldr	x19, [x2]
    7178:	mov	w0, #0x38                  	// #56
    717c:	mov	w1, #0x3                   	// #3
    7180:	bl	0 <_ZN4llvm4UsernwEmj>
    7184:	cbz	x22, 71dc <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop23shuffleVectorDescriptorEjE3$_9E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x80>
    7188:	cmp	x22, #0x1
    718c:	b.eq	71dc <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop23shuffleVectorDescriptorEjE3$_9E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x80>  // b.none
    7190:	cmp	x22, #0x2
    7194:	b.ls	71dc <_ZNSt17_Function_handlerIFPN4llvm5ValueENS0_8ArrayRefIS2_EEPNS0_11InstructionEEZNS0_8fuzzerop23shuffleVectorDescriptorEjE3$_9E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x80>  // b.plast
    7198:	ldp	x1, x2, [x21]
    719c:	ldr	x3, [x21, #16]
    71a0:	adrp	x8, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    71a4:	add	x8, x8, #0x0
    71a8:	stp	x8, xzr, [sp, #8]
    71ac:	mov	w8, #0x103                 	// #259
    71b0:	add	x4, sp, #0x8
    71b4:	mov	x5, x19
    71b8:	mov	x20, x0
    71bc:	strh	w8, [sp, #24]
    71c0:	bl	0 <_ZN4llvm17ShuffleVectorInstC1EPNS_5ValueES2_S2_RKNS_5TwineEPNS_11InstructionE>
    71c4:	mov	x0, x20
    71c8:	ldp	x20, x19, [sp, #64]
    71cc:	ldp	x22, x21, [sp, #48]
    71d0:	ldp	x29, x30, [sp, #32]
    71d4:	add	sp, sp, #0x50
    71d8:	ret
    71dc:	adrp	x0, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    71e0:	adrp	x1, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    71e4:	adrp	x3, 0 <_ZN4llvm20describeFuzzerIntOpsERSt6vectorINS_8fuzzerop12OpDescriptorESaIS2_EE>
    71e8:	add	x0, x0, #0x0
    71ec:	add	x1, x1, #0x0
    71f0:	add	x3, x3, #0x0
    71f4:	mov	w2, #0xfa                  	// #250
    71f8:	bl	0 <__assert_fail>

00000000000071fc <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzerop23shuffleVectorDescriptorEjE3$_9E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation>:
    71fc:	cmp	w2, #0x1
    7200:	b.ne	7208 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzerop23shuffleVectorDescriptorEjE3$_9E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0xc>  // b.any
    7204:	str	x1, [x0]
    7208:	mov	w0, wzr
    720c:	ret

Disassembly of section .text._ZN4llvm8fuzzerop10SourcePredC2ESt8functionIFbNS_8ArrayRefIPNS_5ValueEEEPKS4_EENS_8NoneTypeE:

0000000000000000 <_ZN4llvm8fuzzerop10SourcePredC2ESt8functionIFbNS_8ArrayRefIPNS_5ValueEEEPKS4_EENS_8NoneTypeE>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #80]
   8:	stp	x22, x21, [sp, #96]
   c:	stp	x20, x19, [sp, #112]
  10:	add	x29, sp, #0x50
  14:	str	xzr, [x0, #16]
  18:	ldr	x8, [x1, #16]
  1c:	mov	x20, x1
  20:	mov	x19, x0
  24:	cbz	x8, 40 <_ZN4llvm8fuzzerop10SourcePredC2ESt8functionIFbNS_8ArrayRefIPNS_5ValueEEEPKS4_EENS_8NoneTypeE+0x40>
  28:	mov	w2, #0x2                   	// #2
  2c:	mov	x0, x19
  30:	mov	x1, x20
  34:	blr	x8
  38:	ldr	q0, [x20, #16]
  3c:	str	q0, [x19, #16]
  40:	str	xzr, [x19, #48]
  44:	str	xzr, [sp, #16]
  48:	ldr	x8, [x20, #16]
  4c:	add	x21, x19, #0x20
  50:	cbz	x8, 70 <_ZN4llvm8fuzzerop10SourcePredC2ESt8functionIFbNS_8ArrayRefIPNS_5ValueEEEPKS4_EENS_8NoneTypeE+0x70>
  54:	mov	x0, sp
  58:	mov	w2, #0x2                   	// #2
  5c:	mov	x1, x20
  60:	blr	x8
  64:	ldp	x20, x22, [x20, #16]
  68:	stp	x20, x22, [sp, #16]
  6c:	b	74 <_ZN4llvm8fuzzerop10SourcePredC2ESt8functionIFbNS_8ArrayRefIPNS_5ValueEEEPKS4_EENS_8NoneTypeE+0x74>
  70:	mov	x20, xzr
  74:	mov	w0, #0x20                  	// #32
  78:	str	xzr, [sp, #16]
  7c:	bl	0 <_Znwm>
  80:	str	x0, [sp, #32]
  84:	ldr	q0, [sp]
  88:	ldr	q1, [sp, #32]
  8c:	stp	x20, x22, [x0, #16]
  90:	adrp	x8, 0 <_ZN4llvm8fuzzerop10SourcePredC2ESt8functionIFbNS_8ArrayRefIPNS_5ValueEEEPKS4_EENS_8NoneTypeE>
  94:	str	q0, [x0]
  98:	stur	q1, [x29, #-16]
  9c:	ldr	q0, [x21]
  a0:	adrp	x9, 0 <_ZN4llvm8fuzzerop10SourcePredC2ESt8functionIFbNS_8ArrayRefIPNS_5ValueEEEPKS4_EENS_8NoneTypeE>
  a4:	add	x8, x8, #0x0
  a8:	add	x9, x9, #0x0
  ac:	str	q0, [sp, #32]
  b0:	str	q1, [x21]
  b4:	ldr	q0, [x19, #48]
  b8:	stp	x8, x9, [x19, #48]
  bc:	fmov	x8, d0
  c0:	str	q0, [sp, #48]
  c4:	cbz	x8, f0 <_ZN4llvm8fuzzerop10SourcePredC2ESt8functionIFbNS_8ArrayRefIPNS_5ValueEEEPKS4_EENS_8NoneTypeE+0xf0>
  c8:	add	x0, sp, #0x20
  cc:	add	x1, sp, #0x20
  d0:	mov	w2, #0x3                   	// #3
  d4:	blr	x8
  d8:	ldr	x8, [sp, #16]
  dc:	cbz	x8, f0 <_ZN4llvm8fuzzerop10SourcePredC2ESt8functionIFbNS_8ArrayRefIPNS_5ValueEEEPKS4_EENS_8NoneTypeE+0xf0>
  e0:	mov	x0, sp
  e4:	mov	x1, sp
  e8:	mov	w2, #0x3                   	// #3
  ec:	blr	x8
  f0:	ldp	x20, x19, [sp, #112]
  f4:	ldp	x22, x21, [sp, #96]
  f8:	ldp	x29, x30, [sp, #80]
  fc:	add	sp, sp, #0x80
 100:	ret

Disassembly of section .text._ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzerop10SourcePredC1ESt8functionIFbS9_PKS7_EENS1_8NoneTypeEEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_:

0000000000000000 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzerop10SourcePredC1ESt8functionIFbS9_PKS7_EENS1_8NoneTypeEEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #16]
   8:	str	x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	add	x29, sp, #0x10
  1c:	mov	x19, x8
  20:	ldr	x20, [x0]
  24:	ldp	x22, x8, [x2]
  28:	ldp	x23, x24, [x1]
  2c:	stp	xzr, xzr, [x19]
  30:	str	xzr, [x19, #16]
  34:	cbz	x8, bc <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzerop10SourcePredC1ESt8functionIFbS9_PKS7_EENS1_8NoneTypeEEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_+0xbc>
  38:	lsl	x25, x8, #3
  3c:	b	4c <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzerop10SourcePredC1ESt8functionIFbS9_PKS7_EENS1_8NoneTypeEEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x4c>
  40:	subs	x25, x25, #0x8
  44:	add	x22, x22, #0x8
  48:	b.eq	90 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzerop10SourcePredC1ESt8functionIFbS9_PKS7_EENS1_8NoneTypeEEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x90>  // b.none
  4c:	ldr	x21, [x22]
  50:	mov	x0, x21
  54:	bl	0 <_ZN4llvm10UndefValue3getEPNS_4TypeE>
  58:	stp	x23, x24, [sp]
  5c:	str	x0, [x29, #24]
  60:	ldr	x8, [x20, #16]
  64:	cbz	x8, b8 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzerop10SourcePredC1ESt8functionIFbS9_PKS7_EENS1_8NoneTypeEEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_+0xb8>
  68:	ldr	x8, [x20, #24]
  6c:	mov	x1, sp
  70:	add	x2, x29, #0x18
  74:	mov	x0, x20
  78:	blr	x8
  7c:	tbz	w0, #0, 40 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzerop10SourcePredC1ESt8functionIFbS9_PKS7_EENS1_8NoneTypeEEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x40>
  80:	mov	x0, x21
  84:	mov	x1, x19
  88:	bl	0 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE>
  8c:	b	40 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzerop10SourcePredC1ESt8functionIFbS9_PKS7_EENS1_8NoneTypeEEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x40>
  90:	ldp	x8, x9, [x19]
  94:	cmp	x8, x9
  98:	b.eq	bc <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzerop10SourcePredC1ESt8functionIFbS9_PKS7_EENS1_8NoneTypeEEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_+0xbc>  // b.none
  9c:	ldp	x20, x19, [sp, #80]
  a0:	ldp	x22, x21, [sp, #64]
  a4:	ldp	x24, x23, [sp, #48]
  a8:	ldr	x25, [sp, #32]
  ac:	ldp	x29, x30, [sp, #16]
  b0:	add	sp, sp, #0x60
  b4:	ret
  b8:	bl	0 <_ZSt25__throw_bad_function_callv>
  bc:	adrp	x0, 0 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzerop10SourcePredC1ESt8functionIFbS9_PKS7_EENS1_8NoneTypeEEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_>
  c0:	add	x0, x0, #0x0
  c4:	mov	w1, #0x1                   	// #1
  c8:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>

Disassembly of section .text._ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzerop10SourcePredC1ESt8functionIFbNS1_8ArrayRefIPNS1_5ValueEEEPKS6_EENS1_8NoneTypeEEUlS8_NS5_IPNS1_4TypeEEEE_E10_M_managerERSt9_Any_dataRKSJ_St18_Manager_operation:

0000000000000000 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzerop10SourcePredC1ESt8functionIFbNS1_8ArrayRefIPNS1_5ValueEEEPKS6_EENS1_8NoneTypeEEUlS8_NS5_IPNS1_4TypeEEEE_E10_M_managerERSt9_Any_dataRKSJ_St18_Manager_operation>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cmp	w2, #0x3
  14:	mov	x19, x0
  18:	b.eq	3c <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzerop10SourcePredC1ESt8functionIFbNS1_8ArrayRefIPNS1_5ValueEEEPKS6_EENS1_8NoneTypeEEUlS8_NS5_IPNS1_4TypeEEEE_E10_M_managerERSt9_Any_dataRKSJ_St18_Manager_operation+0x3c>  // b.none
  1c:	mov	x20, x1
  20:	cmp	w2, #0x2
  24:	b.eq	68 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzerop10SourcePredC1ESt8functionIFbNS1_8ArrayRefIPNS1_5ValueEEEPKS6_EENS1_8NoneTypeEEUlS8_NS5_IPNS1_4TypeEEEE_E10_M_managerERSt9_Any_dataRKSJ_St18_Manager_operation+0x68>  // b.none
  28:	cmp	w2, #0x1
  2c:	b.ne	a0 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzerop10SourcePredC1ESt8functionIFbNS1_8ArrayRefIPNS1_5ValueEEEPKS6_EENS1_8NoneTypeEEUlS8_NS5_IPNS1_4TypeEEEE_E10_M_managerERSt9_Any_dataRKSJ_St18_Manager_operation+0xa0>  // b.any
  30:	ldr	x8, [x20]
  34:	str	x8, [x19]
  38:	b	a0 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzerop10SourcePredC1ESt8functionIFbNS1_8ArrayRefIPNS1_5ValueEEEPKS6_EENS1_8NoneTypeEEUlS8_NS5_IPNS1_4TypeEEEE_E10_M_managerERSt9_Any_dataRKSJ_St18_Manager_operation+0xa0>
  3c:	ldr	x19, [x19]
  40:	cbz	x19, a0 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzerop10SourcePredC1ESt8functionIFbNS1_8ArrayRefIPNS1_5ValueEEEPKS6_EENS1_8NoneTypeEEUlS8_NS5_IPNS1_4TypeEEEE_E10_M_managerERSt9_Any_dataRKSJ_St18_Manager_operation+0xa0>
  44:	ldr	x8, [x19, #16]
  48:	cbz	x8, 5c <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzerop10SourcePredC1ESt8functionIFbNS1_8ArrayRefIPNS1_5ValueEEEPKS6_EENS1_8NoneTypeEEUlS8_NS5_IPNS1_4TypeEEEE_E10_M_managerERSt9_Any_dataRKSJ_St18_Manager_operation+0x5c>
  4c:	mov	w2, #0x3                   	// #3
  50:	mov	x0, x19
  54:	mov	x1, x19
  58:	blr	x8
  5c:	mov	x0, x19
  60:	bl	0 <_ZdlPv>
  64:	b	a0 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzerop10SourcePredC1ESt8functionIFbNS1_8ArrayRefIPNS1_5ValueEEEPKS6_EENS1_8NoneTypeEEUlS8_NS5_IPNS1_4TypeEEEE_E10_M_managerERSt9_Any_dataRKSJ_St18_Manager_operation+0xa0>
  68:	mov	w0, #0x20                  	// #32
  6c:	bl	0 <_Znwm>
  70:	ldr	x21, [x20]
  74:	str	xzr, [x0, #16]
  78:	mov	x20, x0
  7c:	ldr	x8, [x21, #16]
  80:	cbz	x8, 9c <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzerop10SourcePredC1ESt8functionIFbNS1_8ArrayRefIPNS1_5ValueEEEPKS6_EENS1_8NoneTypeEEUlS8_NS5_IPNS1_4TypeEEEE_E10_M_managerERSt9_Any_dataRKSJ_St18_Manager_operation+0x9c>
  84:	mov	w2, #0x2                   	// #2
  88:	mov	x0, x20
  8c:	mov	x1, x21
  90:	blr	x8
  94:	ldr	q0, [x21, #16]
  98:	str	q0, [x20, #16]
  9c:	str	x20, [x19]
  a0:	ldp	x20, x19, [sp, #32]
  a4:	ldr	x21, [sp, #16]
  a8:	mov	w0, wzr
  ac:	ldp	x29, x30, [sp], #48
  b0:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm8fuzzerop12OpDescriptorESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm8fuzzerop12OpDescriptorESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	sub	sp, sp, #0x80
   4:	str	d8, [sp, #16]
   8:	stp	x29, x30, [sp, #32]
   c:	stp	x28, x27, [sp, #48]
  10:	stp	x26, x25, [sp, #64]
  14:	stp	x24, x23, [sp, #80]
  18:	stp	x22, x21, [sp, #96]
  1c:	stp	x20, x19, [sp, #112]
  20:	add	x29, sp, #0x10
  24:	ldp	x20, x24, [x0]
  28:	mov	x9, #0xffffffffffffffb8    	// #-72
  2c:	movk	x9, #0x7fff, lsl #48
  30:	sub	x8, x24, x20
  34:	cmp	x8, x9
  38:	b.eq	330 <_ZNSt6vectorIN4llvm8fuzzerop12OpDescriptorESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x330>  // b.none
  3c:	mov	x10, #0x37a7                	// #14247
  40:	movk	x10, #0xe9bd, lsl #16
  44:	movk	x10, #0x6f4d, lsl #32
  48:	asr	x9, x8, #3
  4c:	movk	x10, #0xd37a, lsl #48
  50:	cmp	x8, #0x0
  54:	mov	x8, #0xb21                 	// #2849
  58:	movk	x8, #0xc859, lsl #16
  5c:	mul	x9, x9, x10
  60:	movk	x8, #0x1642, lsl #32
  64:	sub	x25, x1, x20
  68:	csinc	x12, x9, xzr, ne  // ne = any
  6c:	movk	x8, #0xb2, lsl #48
  70:	asr	x11, x25, #3
  74:	adds	x9, x12, x9
  78:	mul	x26, x11, x10
  7c:	cset	w10, cs  // cs = hs, nlast
  80:	cmp	x9, x8
  84:	cset	w11, hi  // hi = pmore
  88:	orr	w10, w10, w11
  8c:	cmp	w10, #0x0
  90:	csel	x9, x8, x9, ne  // ne = any
  94:	mov	w8, #0xb8                  	// #184
  98:	mov	x19, x0
  9c:	mul	x0, x9, x8
  a0:	mov	x23, x2
  a4:	mov	x22, x1
  a8:	str	x9, [x29, #8]
  ac:	bl	0 <_Znwm>
  b0:	adrp	x10, 0 <_ZNSt6vectorIN4llvm8fuzzerop12OpDescriptorESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
  b4:	ldr	w9, [x23]
  b8:	ldr	d8, [x10]
  bc:	add	x8, x0, x25
  c0:	mov	x21, x0
  c4:	add	x10, x8, #0x18
  c8:	mov	x0, x8
  cc:	str	w9, [x8]
  d0:	str	x10, [x0, #8]!
  d4:	str	d8, [x8, #16]
  d8:	ldr	w8, [x23, #16]
  dc:	cbz	w8, e8 <_ZNSt6vectorIN4llvm8fuzzerop12OpDescriptorESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xe8>
  e0:	add	x1, x23, #0x8
  e4:	bl	0 <_ZNSt6vectorIN4llvm8fuzzerop12OpDescriptorESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
  e8:	mov	w8, #0xb8                  	// #184
  ec:	madd	x8, x26, x8, x21
  f0:	ldur	q0, [x23, #152]
  f4:	ldur	q1, [x8, #152]
  f8:	cmp	x20, x22
  fc:	str	q0, [sp]
 100:	stur	q1, [x23, #152]
 104:	ldr	q0, [sp]
 108:	ldr	x9, [x8, #176]
 10c:	stur	q0, [x8, #152]
 110:	ldur	q0, [x23, #168]
 114:	stp	xzr, x9, [x23, #168]
 118:	stur	q0, [x8, #168]
 11c:	b.eq	230 <_ZNSt6vectorIN4llvm8fuzzerop12OpDescriptorESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x230>  // b.none
 120:	mov	x23, xzr
 124:	b	138 <_ZNSt6vectorIN4llvm8fuzzerop12OpDescriptorESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x138>
 128:	add	x8, x26, #0xb8
 12c:	cmp	x8, x22
 130:	add	x23, x23, #0xb8
 134:	b.eq	198 <_ZNSt6vectorIN4llvm8fuzzerop12OpDescriptorESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x198>  // b.none
 138:	add	x26, x20, x23
 13c:	ldr	w9, [x26]
 140:	add	x8, x21, x23
 144:	add	x27, x8, #0x18
 148:	str	x27, [x8, #8]
 14c:	str	w9, [x8]
 150:	str	d8, [x8, #16]
 154:	ldr	w9, [x26, #16]
 158:	cbz	w9, 168 <_ZNSt6vectorIN4llvm8fuzzerop12OpDescriptorESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x168>
 15c:	add	x0, x8, #0x8
 160:	add	x1, x26, #0x8
 164:	bl	0 <_ZNSt6vectorIN4llvm8fuzzerop12OpDescriptorESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 168:	str	xzr, [x27, #144]
 16c:	ldr	x8, [x26, #168]
 170:	cbz	x8, 128 <_ZNSt6vectorIN4llvm8fuzzerop12OpDescriptorESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x128>
 174:	add	x25, x21, x23
 178:	add	x27, x20, x23
 17c:	add	x0, x25, #0x98
 180:	add	x1, x27, #0x98
 184:	mov	w2, #0x2                   	// #2
 188:	blr	x8
 18c:	ldur	q0, [x27, #168]
 190:	stur	q0, [x25, #168]
 194:	b	128 <_ZNSt6vectorIN4llvm8fuzzerop12OpDescriptorESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x128>
 198:	add	x23, x21, x23
 19c:	cmp	x24, x22
 1a0:	b.eq	23c <_ZNSt6vectorIN4llvm8fuzzerop12OpDescriptorESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x23c>  // b.none
 1a4:	mov	x26, xzr
 1a8:	b	1bc <_ZNSt6vectorIN4llvm8fuzzerop12OpDescriptorESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1bc>
 1ac:	add	x8, x27, #0xb8
 1b0:	cmp	x8, x24
 1b4:	add	x26, x26, #0xb8
 1b8:	b.eq	21c <_ZNSt6vectorIN4llvm8fuzzerop12OpDescriptorESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x21c>  // b.none
 1bc:	add	x27, x22, x26
 1c0:	ldr	w9, [x27]
 1c4:	add	x8, x23, x26
 1c8:	add	x28, x8, #0xd0
 1cc:	str	x28, [x8, #192]
 1d0:	str	w9, [x8, #184]
 1d4:	str	d8, [x8, #200]
 1d8:	ldr	w9, [x27, #16]
 1dc:	cbz	w9, 1ec <_ZNSt6vectorIN4llvm8fuzzerop12OpDescriptorESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1ec>
 1e0:	add	x0, x8, #0xc0
 1e4:	add	x1, x27, #0x8
 1e8:	bl	0 <_ZNSt6vectorIN4llvm8fuzzerop12OpDescriptorESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 1ec:	str	xzr, [x28, #144]
 1f0:	ldr	x8, [x27, #168]
 1f4:	cbz	x8, 1ac <_ZNSt6vectorIN4llvm8fuzzerop12OpDescriptorESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1ac>
 1f8:	add	x25, x23, x26
 1fc:	add	x28, x22, x26
 200:	add	x0, x25, #0x150
 204:	add	x1, x28, #0x98
 208:	mov	w2, #0x2                   	// #2
 20c:	blr	x8
 210:	ldur	q0, [x28, #168]
 214:	str	q0, [x25, #352]
 218:	b	1ac <_ZNSt6vectorIN4llvm8fuzzerop12OpDescriptorESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1ac>
 21c:	add	x8, x23, x26
 220:	add	x23, x8, #0xb8
 224:	cmp	x20, x24
 228:	b.ne	248 <_ZNSt6vectorIN4llvm8fuzzerop12OpDescriptorESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x248>  // b.any
 22c:	b	2ec <_ZNSt6vectorIN4llvm8fuzzerop12OpDescriptorESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x2ec>
 230:	mov	x23, x21
 234:	cmp	x24, x22
 238:	b.ne	1a4 <_ZNSt6vectorIN4llvm8fuzzerop12OpDescriptorESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1a4>  // b.any
 23c:	add	x23, x23, #0xb8
 240:	cmp	x20, x24
 244:	b.eq	2ec <_ZNSt6vectorIN4llvm8fuzzerop12OpDescriptorESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x2ec>  // b.none
 248:	mov	x26, x20
 24c:	b	25c <_ZNSt6vectorIN4llvm8fuzzerop12OpDescriptorESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x25c>
 250:	add	x26, x26, #0xb8
 254:	cmp	x26, x24
 258:	b.eq	2ec <_ZNSt6vectorIN4llvm8fuzzerop12OpDescriptorESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x2ec>  // b.none
 25c:	ldr	x8, [x26, #168]
 260:	cbz	x8, 274 <_ZNSt6vectorIN4llvm8fuzzerop12OpDescriptorESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x274>
 264:	add	x0, x26, #0x98
 268:	mov	w2, #0x3                   	// #3
 26c:	mov	x1, x0
 270:	blr	x8
 274:	mov	x27, x26
 278:	ldr	x22, [x27, #8]!
 27c:	ldr	w8, [x27, #8]
 280:	cbz	w8, 2d4 <_ZNSt6vectorIN4llvm8fuzzerop12OpDescriptorESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x2d4>
 284:	lsl	x28, x8, #6
 288:	b	294 <_ZNSt6vectorIN4llvm8fuzzerop12OpDescriptorESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x294>
 28c:	subs	x28, x28, #0x40
 290:	b.eq	2d0 <_ZNSt6vectorIN4llvm8fuzzerop12OpDescriptorESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x2d0>  // b.none
 294:	add	x25, x22, x28
 298:	ldur	x8, [x25, #-16]
 29c:	cbz	x8, 2b0 <_ZNSt6vectorIN4llvm8fuzzerop12OpDescriptorESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x2b0>
 2a0:	sub	x0, x25, #0x20
 2a4:	mov	w2, #0x3                   	// #3
 2a8:	mov	x1, x0
 2ac:	blr	x8
 2b0:	ldur	x8, [x25, #-48]
 2b4:	cbz	x8, 28c <_ZNSt6vectorIN4llvm8fuzzerop12OpDescriptorESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x28c>
 2b8:	add	x9, x22, x28
 2bc:	sub	x0, x9, #0x40
 2c0:	mov	w2, #0x3                   	// #3
 2c4:	mov	x1, x0
 2c8:	blr	x8
 2cc:	b	28c <_ZNSt6vectorIN4llvm8fuzzerop12OpDescriptorESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x28c>
 2d0:	ldr	x22, [x27]
 2d4:	add	x8, x27, #0x10
 2d8:	cmp	x22, x8
 2dc:	b.eq	250 <_ZNSt6vectorIN4llvm8fuzzerop12OpDescriptorESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x250>  // b.none
 2e0:	mov	x0, x22
 2e4:	bl	0 <free>
 2e8:	b	250 <_ZNSt6vectorIN4llvm8fuzzerop12OpDescriptorESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x250>
 2ec:	cbz	x20, 2f8 <_ZNSt6vectorIN4llvm8fuzzerop12OpDescriptorESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x2f8>
 2f0:	mov	x0, x20
 2f4:	bl	0 <_ZdlPv>
 2f8:	stp	x21, x23, [x19]
 2fc:	ldr	x9, [x29, #8]
 300:	mov	w8, #0xb8                  	// #184
 304:	ldr	d8, [sp, #16]
 308:	madd	x8, x9, x8, x21
 30c:	str	x8, [x19, #16]
 310:	ldp	x20, x19, [sp, #112]
 314:	ldp	x22, x21, [sp, #96]
 318:	ldp	x24, x23, [sp, #80]
 31c:	ldp	x26, x25, [sp, #64]
 320:	ldp	x28, x27, [sp, #48]
 324:	ldp	x29, x30, [sp, #32]
 328:	add	sp, sp, #0x80
 32c:	ret
 330:	adrp	x0, 0 <_ZNSt6vectorIN4llvm8fuzzerop12OpDescriptorESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 334:	add	x0, x0, #0x0
 338:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #48]
   8:	stp	x26, x25, [sp, #64]
   c:	stp	x24, x23, [sp, #80]
  10:	stp	x22, x21, [sp, #96]
  14:	stp	x20, x19, [sp, #112]
  18:	add	x29, sp, #0x30
  1c:	mov	x19, x0
  20:	cmp	x0, x1
  24:	b.eq	cc <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0xcc>  // b.none
  28:	mov	x24, x1
  2c:	ldr	x22, [x24], #16
  30:	mov	x20, x1
  34:	cmp	x22, x24
  38:	b.eq	ec <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0xec>  // b.none
  3c:	ldr	w8, [x19, #8]
  40:	ldr	x21, [x19]
  44:	cbz	w8, 98 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x98>
  48:	lsl	x22, x8, #6
  4c:	b	58 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x58>
  50:	subs	x22, x22, #0x40
  54:	b.eq	94 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x94>  // b.none
  58:	add	x23, x21, x22
  5c:	ldur	x8, [x23, #-16]
  60:	cbz	x8, 74 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x74>
  64:	sub	x0, x23, #0x20
  68:	mov	w2, #0x3                   	// #3
  6c:	mov	x1, x0
  70:	blr	x8
  74:	ldur	x8, [x23, #-48]
  78:	cbz	x8, 50 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x50>
  7c:	add	x9, x21, x22
  80:	sub	x0, x9, #0x40
  84:	mov	w2, #0x3                   	// #3
  88:	mov	x1, x0
  8c:	blr	x8
  90:	b	50 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x50>
  94:	ldr	x21, [x19]
  98:	add	x8, x19, #0x10
  9c:	cmp	x21, x8
  a0:	b.eq	ac <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0xac>  // b.none
  a4:	mov	x0, x21
  a8:	bl	0 <free>
  ac:	ldr	x8, [x20]
  b0:	mov	x23, x20
  b4:	str	x8, [x19]
  b8:	ldr	x8, [x23, #8]!
  bc:	str	x8, [x19, #8]
  c0:	str	x24, [x20]
  c4:	str	wzr, [x20, #12]
  c8:	str	wzr, [x23]
  cc:	mov	x0, x19
  d0:	ldp	x20, x19, [sp, #112]
  d4:	ldp	x22, x21, [sp, #96]
  d8:	ldp	x24, x23, [sp, #80]
  dc:	ldp	x26, x25, [sp, #64]
  e0:	ldp	x29, x30, [sp, #48]
  e4:	add	sp, sp, #0x80
  e8:	ret
  ec:	mov	x23, x20
  f0:	ldr	w21, [x23, #8]!
  f4:	ldr	w24, [x19, #8]
  f8:	cmp	w24, w21
  fc:	b.cs	160 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x160>  // b.hs, b.nlast
 100:	ldr	w8, [x19, #12]
 104:	cmp	w8, w21
 108:	b.cs	240 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x240>  // b.hs, b.nlast
 10c:	cbz	w24, 304 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x304>
 110:	ldr	x22, [x19]
 114:	lsl	x24, x24, #6
 118:	b	124 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x124>
 11c:	subs	x24, x24, #0x40
 120:	b.eq	304 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x304>  // b.none
 124:	add	x25, x22, x24
 128:	ldur	x8, [x25, #-16]
 12c:	cbz	x8, 140 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x140>
 130:	sub	x0, x25, #0x20
 134:	mov	w2, #0x3                   	// #3
 138:	mov	x1, x0
 13c:	blr	x8
 140:	ldur	x8, [x25, #-48]
 144:	cbz	x8, 11c <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x11c>
 148:	add	x9, x22, x24
 14c:	sub	x0, x9, #0x40
 150:	mov	w2, #0x3                   	// #3
 154:	mov	x1, x0
 158:	blr	x8
 15c:	b	11c <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x11c>
 160:	ldr	x25, [x19]
 164:	cbz	w21, 430 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x430>
 168:	add	x24, x21, #0x1
 16c:	b	184 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x184>
 170:	sub	x24, x24, #0x1
 174:	add	x25, x25, #0x40
 178:	cmp	x24, #0x1
 17c:	add	x22, x22, #0x40
 180:	b.le	224 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x224>
 184:	ldr	q0, [x22]
 188:	str	q0, [sp]
 18c:	ldr	q0, [x22]
 190:	ldp	x9, x10, [x22, #16]
 194:	str	xzr, [x22, #16]
 198:	stur	q0, [x29, #-16]
 19c:	ldr	q1, [x25]
 1a0:	str	q1, [sp]
 1a4:	ldr	x8, [x25, #16]
 1a8:	str	q0, [x25]
 1ac:	str	x8, [sp, #16]
 1b0:	ldr	x11, [x25, #24]
 1b4:	str	x9, [x25, #16]
 1b8:	str	x11, [sp, #24]
 1bc:	str	x10, [x25, #24]
 1c0:	cbz	x8, 1d4 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x1d4>
 1c4:	mov	x0, sp
 1c8:	mov	x1, sp
 1cc:	mov	w2, #0x3                   	// #3
 1d0:	blr	x8
 1d4:	ldr	q0, [x22, #32]
 1d8:	str	q0, [sp]
 1dc:	ldr	q0, [x22, #32]
 1e0:	ldp	x8, x9, [x22, #48]
 1e4:	str	xzr, [x22, #48]
 1e8:	stur	q0, [x29, #-16]
 1ec:	ldr	q1, [x25, #32]
 1f0:	str	q1, [sp]
 1f4:	ldr	q1, [x25, #48]
 1f8:	str	x8, [x25, #48]
 1fc:	str	q0, [x25, #32]
 200:	fmov	x8, d1
 204:	str	q1, [sp, #16]
 208:	str	x9, [x25, #56]
 20c:	cbz	x8, 170 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x170>
 210:	mov	x0, sp
 214:	mov	x1, sp
 218:	mov	w2, #0x3                   	// #3
 21c:	blr	x8
 220:	b	170 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x170>
 224:	mov	x26, x25
 228:	ldr	x25, [x19]
 22c:	ldr	w24, [x19, #8]
 230:	add	x22, x25, x24, lsl #6
 234:	cmp	x22, x26
 238:	b.ne	46c <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x46c>  // b.any
 23c:	b	440 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x440>
 240:	cbz	w24, 4e8 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x4e8>
 244:	ldr	x25, [x19]
 248:	add	x26, x24, #0x1
 24c:	b	264 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x264>
 250:	sub	x26, x26, #0x1
 254:	add	x22, x22, #0x40
 258:	cmp	x26, #0x1
 25c:	add	x25, x25, #0x40
 260:	b.le	318 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x318>
 264:	ldr	q0, [x22]
 268:	str	q0, [sp]
 26c:	ldr	q0, [x22]
 270:	ldp	x9, x10, [x22, #16]
 274:	str	xzr, [x22, #16]
 278:	stur	q0, [x29, #-16]
 27c:	ldr	q1, [x25]
 280:	str	q1, [sp]
 284:	ldr	x8, [x25, #16]
 288:	str	q0, [x25]
 28c:	str	x8, [sp, #16]
 290:	ldr	x11, [x25, #24]
 294:	str	x9, [x25, #16]
 298:	str	x11, [sp, #24]
 29c:	str	x10, [x25, #24]
 2a0:	cbz	x8, 2b4 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x2b4>
 2a4:	mov	x0, sp
 2a8:	mov	x1, sp
 2ac:	mov	w2, #0x3                   	// #3
 2b0:	blr	x8
 2b4:	ldr	q0, [x22, #32]
 2b8:	str	q0, [sp]
 2bc:	ldr	q0, [x22, #32]
 2c0:	ldp	x8, x9, [x22, #48]
 2c4:	str	xzr, [x22, #48]
 2c8:	stur	q0, [x29, #-16]
 2cc:	ldr	q1, [x25, #32]
 2d0:	str	q1, [sp]
 2d4:	ldr	q1, [x25, #48]
 2d8:	str	x8, [x25, #48]
 2dc:	str	q0, [x25, #32]
 2e0:	fmov	x8, d1
 2e4:	str	q1, [sp, #16]
 2e8:	str	x9, [x25, #56]
 2ec:	cbz	x8, 250 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x250>
 2f0:	mov	x0, sp
 2f4:	mov	x1, sp
 2f8:	mov	w2, #0x3                   	// #3
 2fc:	blr	x8
 300:	b	250 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x250>
 304:	mov	x0, x19
 308:	mov	x1, x21
 30c:	str	wzr, [x19, #8]
 310:	bl	0 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_>
 314:	mov	x24, xzr
 318:	ldr	w8, [x20, #8]
 31c:	cmp	x24, x8
 320:	b.eq	3c8 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x3c8>  // b.none
 324:	ldr	x10, [x19]
 328:	ldr	x9, [x20]
 32c:	lsl	x11, x24, #6
 330:	add	x10, x10, x11
 334:	add	x8, x9, x8, lsl #6
 338:	add	x9, x9, x11
 33c:	add	x10, x10, #0x20
 340:	stur	xzr, [x10, #-16]
 344:	ldr	q0, [x9]
 348:	str	q0, [sp]
 34c:	ldur	q0, [x10, #-32]
 350:	str	q0, [x9]
 354:	ldr	q0, [sp]
 358:	ldur	x11, [x10, #-16]
 35c:	stur	q0, [x10, #-32]
 360:	ldr	x12, [x9, #16]
 364:	str	x11, [x9, #16]
 368:	ldur	x11, [x10, #-8]
 36c:	stur	x12, [x10, #-16]
 370:	ldr	x12, [x9, #24]
 374:	str	x11, [x9, #24]
 378:	str	xzr, [x10, #16]
 37c:	stur	x12, [x10, #-8]
 380:	ldr	q0, [x9, #32]
 384:	str	q0, [sp]
 388:	ldr	q0, [x10]
 38c:	str	q0, [x9, #32]
 390:	ldr	q0, [sp]
 394:	ldr	x11, [x10, #16]
 398:	str	q0, [x10]
 39c:	ldr	x12, [x9, #48]
 3a0:	str	x11, [x9, #48]
 3a4:	ldr	x11, [x10, #24]
 3a8:	str	x12, [x10, #16]
 3ac:	ldr	x12, [x9, #56]
 3b0:	str	x11, [x9, #56]
 3b4:	add	x9, x9, #0x40
 3b8:	cmp	x9, x8
 3bc:	str	x12, [x10, #24]
 3c0:	add	x10, x10, #0x40
 3c4:	b.ne	340 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x340>  // b.any
 3c8:	ldr	w8, [x19, #12]
 3cc:	cmp	w8, w21
 3d0:	b.cc	4fc <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x4fc>  // b.lo, b.ul, b.last
 3d4:	str	w21, [x19, #8]
 3d8:	ldr	w8, [x20, #8]
 3dc:	cbz	w8, c8 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0xc8>
 3e0:	ldr	x20, [x20]
 3e4:	lsl	x21, x8, #6
 3e8:	b	3f4 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x3f4>
 3ec:	subs	x21, x21, #0x40
 3f0:	b.eq	c8 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0xc8>  // b.none
 3f4:	add	x22, x20, x21
 3f8:	ldur	x8, [x22, #-16]
 3fc:	cbz	x8, 410 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x410>
 400:	sub	x0, x22, #0x20
 404:	mov	w2, #0x3                   	// #3
 408:	mov	x1, x0
 40c:	blr	x8
 410:	ldur	x8, [x22, #-48]
 414:	cbz	x8, 3ec <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x3ec>
 418:	add	x9, x20, x21
 41c:	sub	x0, x9, #0x40
 420:	mov	w2, #0x3                   	// #3
 424:	mov	x1, x0
 428:	blr	x8
 42c:	b	3ec <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x3ec>
 430:	mov	x26, x25
 434:	add	x22, x25, x24, lsl #6
 438:	cmp	x22, x26
 43c:	b.ne	46c <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x46c>  // b.any
 440:	ldr	w8, [x19, #12]
 444:	cmp	w8, w21
 448:	b.cc	4fc <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x4fc>  // b.lo, b.ul, b.last
 44c:	str	w21, [x19, #8]
 450:	ldr	w8, [x20, #8]
 454:	cbz	w8, c8 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0xc8>
 458:	ldr	x20, [x20]
 45c:	lsl	x21, x8, #6
 460:	b	4ac <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x4ac>
 464:	cmp	x26, x22
 468:	b.eq	440 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x440>  // b.none
 46c:	ldur	x8, [x22, #-16]
 470:	cbz	x8, 484 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x484>
 474:	sub	x0, x22, #0x20
 478:	mov	w2, #0x3                   	// #3
 47c:	mov	x1, x0
 480:	blr	x8
 484:	ldur	x8, [x22, #-48]
 488:	sub	x22, x22, #0x40
 48c:	cbz	x8, 464 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x464>
 490:	mov	w2, #0x3                   	// #3
 494:	mov	x0, x22
 498:	mov	x1, x22
 49c:	blr	x8
 4a0:	b	464 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x464>
 4a4:	subs	x21, x21, #0x40
 4a8:	b.eq	c8 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0xc8>  // b.none
 4ac:	add	x22, x20, x21
 4b0:	ldur	x8, [x22, #-16]
 4b4:	cbz	x8, 4c8 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x4c8>
 4b8:	sub	x0, x22, #0x20
 4bc:	mov	w2, #0x3                   	// #3
 4c0:	mov	x1, x0
 4c4:	blr	x8
 4c8:	ldur	x8, [x22, #-48]
 4cc:	cbz	x8, 4a4 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x4a4>
 4d0:	add	x9, x20, x21
 4d4:	sub	x0, x9, #0x40
 4d8:	mov	w2, #0x3                   	// #3
 4dc:	mov	x1, x0
 4e0:	blr	x8
 4e4:	b	4a4 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x4a4>
 4e8:	mov	x24, xzr
 4ec:	ldr	w8, [x20, #8]
 4f0:	cmp	x24, x8
 4f4:	b.ne	324 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x324>  // b.any
 4f8:	b	3c8 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_+0x3c8>
 4fc:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_>
 500:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_>
 504:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSEOS3_>
 508:	add	x0, x0, #0x0
 50c:	add	x1, x1, #0x0
 510:	add	x3, x3, #0x0
 514:	mov	w2, #0x43                  	// #67
 518:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_8fuzzerop10SourcePredELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_8fuzzerop10SourcePredELb0EE4growEm>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	add	x29, sp, #0x10
  18:	mov	x20, x1
  1c:	lsr	x8, x1, #32
  20:	mov	x19, x0
  24:	cbz	x8, 38 <_ZN4llvm23SmallVectorTemplateBaseINS_8fuzzerop10SourcePredELb0EE4growEm+0x38>
  28:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_8fuzzerop10SourcePredELb0EE4growEm>
  2c:	add	x0, x0, #0x0
  30:	mov	w1, #0x1                   	// #1
  34:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  38:	ldr	w8, [x19, #12]
  3c:	add	x8, x8, #0x2
  40:	orr	x8, x8, x8, lsr #1
  44:	orr	x8, x8, x8, lsr #2
  48:	orr	x8, x8, x8, lsr #4
  4c:	orr	x8, x8, x8, lsr #8
  50:	orr	x8, x8, x8, lsr #16
  54:	orr	x8, x8, x8, lsr #32
  58:	add	x9, x8, #0x1
  5c:	cmp	x9, x20
  60:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  64:	mov	w9, #0xffffffff            	// #-1
  68:	cmp	x8, x9
  6c:	csel	x22, x8, x9, cc  // cc = lo, ul, last
  70:	lsl	x0, x22, #6
  74:	bl	0 <malloc>
  78:	mov	x20, x0
  7c:	cbnz	x0, bc <_ZN4llvm23SmallVectorTemplateBaseINS_8fuzzerop10SourcePredELb0EE4growEm+0xbc>
  80:	cbz	x22, 9c <_ZN4llvm23SmallVectorTemplateBaseINS_8fuzzerop10SourcePredELb0EE4growEm+0x9c>
  84:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_8fuzzerop10SourcePredELb0EE4growEm>
  88:	add	x0, x0, #0x0
  8c:	mov	w1, #0x1                   	// #1
  90:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  94:	mov	x20, xzr
  98:	b	bc <_ZN4llvm23SmallVectorTemplateBaseINS_8fuzzerop10SourcePredELb0EE4growEm+0xbc>
  9c:	mov	w0, #0x1                   	// #1
  a0:	bl	0 <malloc>
  a4:	mov	x20, x0
  a8:	cbnz	x0, bc <_ZN4llvm23SmallVectorTemplateBaseINS_8fuzzerop10SourcePredELb0EE4growEm+0xbc>
  ac:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_8fuzzerop10SourcePredELb0EE4growEm>
  b0:	add	x0, x0, #0x0
  b4:	mov	w1, #0x1                   	// #1
  b8:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  bc:	ldr	w8, [x19, #8]
  c0:	ldr	x21, [x19]
  c4:	cbz	w8, 1b4 <_ZN4llvm23SmallVectorTemplateBaseINS_8fuzzerop10SourcePredELb0EE4growEm+0x1b4>
  c8:	add	x8, x21, x8, lsl #6
  cc:	add	x9, x20, #0x20
  d0:	stur	xzr, [x9, #-16]
  d4:	ldr	q0, [x21]
  d8:	str	q0, [sp]
  dc:	ldur	q0, [x9, #-32]
  e0:	str	q0, [x21]
  e4:	ldr	q0, [sp]
  e8:	ldur	x10, [x9, #-16]
  ec:	stur	q0, [x9, #-32]
  f0:	ldr	x11, [x21, #16]
  f4:	str	x10, [x21, #16]
  f8:	ldur	x10, [x9, #-8]
  fc:	stur	x11, [x9, #-16]
 100:	ldr	x11, [x21, #24]
 104:	str	x10, [x21, #24]
 108:	str	xzr, [x9, #16]
 10c:	stur	x11, [x9, #-8]
 110:	ldr	q0, [x21, #32]
 114:	str	q0, [sp]
 118:	ldr	q0, [x9]
 11c:	str	q0, [x21, #32]
 120:	ldr	q0, [sp]
 124:	ldr	x10, [x9, #16]
 128:	str	q0, [x9]
 12c:	ldr	x11, [x21, #48]
 130:	str	x10, [x21, #48]
 134:	ldr	x10, [x9, #24]
 138:	str	x11, [x9, #16]
 13c:	ldr	x11, [x21, #56]
 140:	str	x10, [x21, #56]
 144:	add	x21, x21, #0x40
 148:	cmp	x21, x8
 14c:	str	x11, [x9, #24]
 150:	add	x9, x9, #0x40
 154:	b.ne	d0 <_ZN4llvm23SmallVectorTemplateBaseINS_8fuzzerop10SourcePredELb0EE4growEm+0xd0>  // b.any
 158:	ldr	w8, [x19, #8]
 15c:	ldr	x21, [x19]
 160:	cbz	w8, 1b4 <_ZN4llvm23SmallVectorTemplateBaseINS_8fuzzerop10SourcePredELb0EE4growEm+0x1b4>
 164:	lsl	x23, x8, #6
 168:	b	174 <_ZN4llvm23SmallVectorTemplateBaseINS_8fuzzerop10SourcePredELb0EE4growEm+0x174>
 16c:	subs	x23, x23, #0x40
 170:	b.eq	1b0 <_ZN4llvm23SmallVectorTemplateBaseINS_8fuzzerop10SourcePredELb0EE4growEm+0x1b0>  // b.none
 174:	add	x24, x21, x23
 178:	ldur	x8, [x24, #-16]
 17c:	cbz	x8, 190 <_ZN4llvm23SmallVectorTemplateBaseINS_8fuzzerop10SourcePredELb0EE4growEm+0x190>
 180:	sub	x0, x24, #0x20
 184:	mov	w2, #0x3                   	// #3
 188:	mov	x1, x0
 18c:	blr	x8
 190:	ldur	x8, [x24, #-48]
 194:	cbz	x8, 16c <_ZN4llvm23SmallVectorTemplateBaseINS_8fuzzerop10SourcePredELb0EE4growEm+0x16c>
 198:	add	x9, x21, x23
 19c:	sub	x0, x9, #0x40
 1a0:	mov	w2, #0x3                   	// #3
 1a4:	mov	x1, x0
 1a8:	blr	x8
 1ac:	b	16c <_ZN4llvm23SmallVectorTemplateBaseINS_8fuzzerop10SourcePredELb0EE4growEm+0x16c>
 1b0:	ldr	x21, [x19]
 1b4:	add	x8, x19, #0x10
 1b8:	cmp	x21, x8
 1bc:	b.eq	1c8 <_ZN4llvm23SmallVectorTemplateBaseINS_8fuzzerop10SourcePredELb0EE4growEm+0x1c8>  // b.none
 1c0:	mov	x0, x21
 1c4:	bl	0 <free>
 1c8:	str	x20, [x19]
 1cc:	str	w22, [x19, #12]
 1d0:	ldp	x20, x19, [sp, #64]
 1d4:	ldp	x22, x21, [sp, #48]
 1d8:	ldp	x24, x23, [sp, #32]
 1dc:	ldp	x29, x30, [sp, #16]
 1e0:	add	sp, sp, #0x50
 1e4:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #48]
   8:	stp	x26, x25, [sp, #64]
   c:	stp	x24, x23, [sp, #80]
  10:	stp	x22, x21, [sp, #96]
  14:	stp	x20, x19, [sp, #112]
  18:	add	x29, sp, #0x30
  1c:	mov	x19, x0
  20:	cmp	x0, x1
  24:	b.eq	3f8 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x3f8>  // b.none
  28:	ldr	w20, [x1, #8]
  2c:	ldr	w23, [x19, #8]
  30:	mov	x21, x1
  34:	cmp	w23, w20
  38:	b.cs	9c <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x9c>  // b.hs, b.nlast
  3c:	ldr	w8, [x19, #12]
  40:	cmp	w8, w20
  44:	b.cs	1cc <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x1cc>  // b.hs, b.nlast
  48:	cbz	w23, 2e0 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x2e0>
  4c:	ldr	x22, [x19]
  50:	lsl	x23, x23, #6
  54:	b	60 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x60>
  58:	subs	x23, x23, #0x40
  5c:	b.eq	2e0 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x2e0>  // b.none
  60:	add	x24, x22, x23
  64:	ldur	x8, [x24, #-16]
  68:	cbz	x8, 7c <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x7c>
  6c:	sub	x0, x24, #0x20
  70:	mov	w2, #0x3                   	// #3
  74:	mov	x1, x0
  78:	blr	x8
  7c:	ldur	x8, [x24, #-48]
  80:	cbz	x8, 58 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x58>
  84:	add	x9, x22, x23
  88:	sub	x0, x9, #0x40
  8c:	mov	w2, #0x3                   	// #3
  90:	mov	x1, x0
  94:	blr	x8
  98:	b	58 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x58>
  9c:	ldr	x22, [x19]
  a0:	cbz	w20, 384 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x384>
  a4:	ldr	x8, [x21]
  a8:	add	x23, x20, #0x1
  ac:	add	x21, x8, #0x20
  b0:	b	c8 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0xc8>
  b4:	sub	x23, x23, #0x1
  b8:	add	x22, x22, #0x40
  bc:	cmp	x23, #0x1
  c0:	add	x21, x21, #0x40
  c4:	b.le	1b0 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x1b0>
  c8:	str	xzr, [sp, #16]
  cc:	ldur	x8, [x21, #-16]
  d0:	cbz	x8, f8 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0xf8>
  d4:	sub	x1, x21, #0x20
  d8:	mov	x0, sp
  dc:	mov	w2, #0x2                   	// #2
  e0:	blr	x8
  e4:	ldur	x8, [x21, #-8]
  e8:	str	x8, [sp, #24]
  ec:	ldur	x9, [x21, #-16]
  f0:	str	x9, [sp, #16]
  f4:	b	fc <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0xfc>
  f8:	mov	x9, xzr
  fc:	ldr	q0, [sp]
 100:	stur	q0, [x29, #-16]
 104:	ldr	q1, [x22]
 108:	str	q1, [sp]
 10c:	ldr	x10, [x22, #16]
 110:	str	q0, [x22]
 114:	str	x10, [sp, #16]
 118:	ldr	x11, [x22, #24]
 11c:	str	x9, [x22, #16]
 120:	str	x11, [sp, #24]
 124:	str	x8, [x22, #24]
 128:	cbz	x10, 13c <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x13c>
 12c:	mov	x0, sp
 130:	mov	x1, sp
 134:	mov	w2, #0x3                   	// #3
 138:	blr	x10
 13c:	str	xzr, [sp, #16]
 140:	ldr	x8, [x21, #16]
 144:	cbz	x8, 16c <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x16c>
 148:	mov	x0, sp
 14c:	mov	w2, #0x2                   	// #2
 150:	mov	x1, x21
 154:	blr	x8
 158:	ldr	x8, [x21, #24]
 15c:	str	x8, [sp, #24]
 160:	ldr	x9, [x21, #16]
 164:	str	x9, [sp, #16]
 168:	b	170 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x170>
 16c:	mov	x9, xzr
 170:	ldr	q0, [sp]
 174:	stur	q0, [x29, #-16]
 178:	ldr	q1, [x22, #32]
 17c:	str	q1, [sp]
 180:	ldr	q1, [x22, #48]
 184:	str	q0, [x22, #32]
 188:	str	x9, [x22, #48]
 18c:	str	q1, [sp, #16]
 190:	str	x8, [x22, #56]
 194:	fmov	x8, d1
 198:	cbz	x8, b4 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0xb4>
 19c:	mov	x0, sp
 1a0:	mov	x1, sp
 1a4:	mov	w2, #0x3                   	// #3
 1a8:	blr	x8
 1ac:	b	b4 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0xb4>
 1b0:	mov	x24, x22
 1b4:	ldr	x22, [x19]
 1b8:	ldr	w23, [x19, #8]
 1bc:	add	x21, x22, x23, lsl #6
 1c0:	cmp	x21, x24
 1c4:	b.ne	3a0 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x3a0>  // b.any
 1c8:	b	3e8 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x3e8>
 1cc:	cbz	w23, 3d8 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x3d8>
 1d0:	ldr	x8, [x21]
 1d4:	ldr	x24, [x19]
 1d8:	add	x25, x23, #0x1
 1dc:	add	x22, x8, #0x20
 1e0:	b	1f8 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x1f8>
 1e4:	sub	x25, x25, #0x1
 1e8:	add	x22, x22, #0x40
 1ec:	cmp	x25, #0x1
 1f0:	add	x24, x24, #0x40
 1f4:	b.le	2f4 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x2f4>
 1f8:	str	xzr, [sp, #16]
 1fc:	ldur	x8, [x22, #-16]
 200:	cbz	x8, 228 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x228>
 204:	sub	x1, x22, #0x20
 208:	mov	x0, sp
 20c:	mov	w2, #0x2                   	// #2
 210:	blr	x8
 214:	ldur	x8, [x22, #-8]
 218:	str	x8, [sp, #24]
 21c:	ldur	x9, [x22, #-16]
 220:	str	x9, [sp, #16]
 224:	b	22c <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x22c>
 228:	mov	x9, xzr
 22c:	ldr	q0, [sp]
 230:	stur	q0, [x29, #-16]
 234:	ldr	q1, [x24]
 238:	str	q1, [sp]
 23c:	ldr	x10, [x24, #16]
 240:	str	q0, [x24]
 244:	str	x10, [sp, #16]
 248:	ldr	x11, [x24, #24]
 24c:	str	x9, [x24, #16]
 250:	str	x11, [sp, #24]
 254:	str	x8, [x24, #24]
 258:	cbz	x10, 26c <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x26c>
 25c:	mov	x0, sp
 260:	mov	x1, sp
 264:	mov	w2, #0x3                   	// #3
 268:	blr	x10
 26c:	str	xzr, [sp, #16]
 270:	ldr	x8, [x22, #16]
 274:	cbz	x8, 29c <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x29c>
 278:	mov	x0, sp
 27c:	mov	w2, #0x2                   	// #2
 280:	mov	x1, x22
 284:	blr	x8
 288:	ldr	x8, [x22, #24]
 28c:	str	x8, [sp, #24]
 290:	ldr	x9, [x22, #16]
 294:	str	x9, [sp, #16]
 298:	b	2a0 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x2a0>
 29c:	mov	x9, xzr
 2a0:	ldr	q0, [sp]
 2a4:	stur	q0, [x29, #-16]
 2a8:	ldr	q1, [x24, #32]
 2ac:	str	q1, [sp]
 2b0:	ldr	q1, [x24, #48]
 2b4:	str	q0, [x24, #32]
 2b8:	str	x9, [x24, #48]
 2bc:	str	q1, [sp, #16]
 2c0:	str	x8, [x24, #56]
 2c4:	fmov	x8, d1
 2c8:	cbz	x8, 1e4 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x1e4>
 2cc:	mov	x0, sp
 2d0:	mov	x1, sp
 2d4:	mov	w2, #0x3                   	// #3
 2d8:	blr	x8
 2dc:	b	1e4 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x1e4>
 2e0:	mov	x0, x19
 2e4:	mov	x1, x20
 2e8:	str	wzr, [x19, #8]
 2ec:	bl	0 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_>
 2f0:	mov	x23, xzr
 2f4:	ldr	w8, [x21, #8]
 2f8:	cmp	x23, x8
 2fc:	b.eq	3e8 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x3e8>  // b.none
 300:	ldr	x24, [x21]
 304:	ldr	x25, [x19]
 308:	lsl	x23, x23, #6
 30c:	lsl	x26, x8, #6
 310:	b	328 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x328>
 314:	sub	x26, x26, #0x40
 318:	add	x25, x25, #0x40
 31c:	cmp	x23, x26
 320:	add	x24, x24, #0x40
 324:	b.eq	3e8 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x3e8>  // b.none
 328:	add	x21, x25, x23
 32c:	str	xzr, [x21, #16]
 330:	add	x22, x24, x23
 334:	ldr	x8, [x22, #16]
 338:	cbz	x8, 354 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x354>
 33c:	mov	w2, #0x2                   	// #2
 340:	mov	x0, x21
 344:	mov	x1, x22
 348:	blr	x8
 34c:	ldr	q0, [x22, #16]
 350:	str	q0, [x21, #16]
 354:	str	xzr, [x21, #48]
 358:	ldr	x8, [x22, #48]
 35c:	cbz	x8, 314 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x314>
 360:	add	x21, x25, x23
 364:	add	x22, x24, x23
 368:	add	x0, x21, #0x20
 36c:	add	x1, x22, #0x20
 370:	mov	w2, #0x2                   	// #2
 374:	blr	x8
 378:	ldr	q0, [x22, #48]
 37c:	str	q0, [x21, #48]
 380:	b	314 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x314>
 384:	mov	x24, x22
 388:	add	x21, x22, x23, lsl #6
 38c:	cmp	x21, x24
 390:	b.ne	3a0 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x3a0>  // b.any
 394:	b	3e8 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x3e8>
 398:	cmp	x24, x21
 39c:	b.eq	3e8 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x3e8>  // b.none
 3a0:	ldur	x8, [x21, #-16]
 3a4:	cbz	x8, 3b8 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x3b8>
 3a8:	sub	x0, x21, #0x20
 3ac:	mov	w2, #0x3                   	// #3
 3b0:	mov	x1, x0
 3b4:	blr	x8
 3b8:	ldur	x8, [x21, #-48]
 3bc:	sub	x21, x21, #0x40
 3c0:	cbz	x8, 398 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x398>
 3c4:	mov	w2, #0x3                   	// #3
 3c8:	mov	x0, x21
 3cc:	mov	x1, x21
 3d0:	blr	x8
 3d4:	b	398 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x398>
 3d8:	mov	x23, xzr
 3dc:	ldr	w8, [x21, #8]
 3e0:	cmp	x23, x8
 3e4:	b.ne	300 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x300>  // b.any
 3e8:	ldr	w8, [x19, #12]
 3ec:	cmp	w8, w20
 3f0:	b.cc	418 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_+0x418>  // b.lo, b.ul, b.last
 3f4:	str	w20, [x19, #8]
 3f8:	mov	x0, x19
 3fc:	ldp	x20, x19, [sp, #112]
 400:	ldp	x22, x21, [sp, #96]
 404:	ldp	x24, x23, [sp, #80]
 408:	ldp	x26, x25, [sp, #64]
 40c:	ldp	x29, x30, [sp, #48]
 410:	add	sp, sp, #0x80
 414:	ret
 418:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_>
 41c:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_>
 420:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_8fuzzerop10SourcePredEEaSERKS3_>
 424:	add	x0, x0, #0x0
 428:	add	x1, x1, #0x0
 42c:	add	x3, x3, #0x0
 430:	mov	w2, #0x43                  	// #67
 434:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE:

0000000000000000 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #20]
  14:	ldr	w9, [x0, #56]
  18:	mov	x19, x2
  1c:	mov	x20, x0
  20:	and	w10, w8, #0xfffffff
  24:	cmp	w10, w9
  28:	mov	x21, x1
  2c:	b.ne	3c <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0x3c>  // b.any
  30:	mov	x0, x20
  34:	bl	0 <_ZN4llvm7PHINode12growOperandsEv>
  38:	ldr	w8, [x20, #20]
  3c:	tbz	w8, #30, 180 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0x180>
  40:	and	w9, w8, #0xfffffff
  44:	mov	w10, #0xfffffff             	// #268435455
  48:	cmp	w9, w10
  4c:	b.eq	1a0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0x1a0>  // b.none
  50:	add	w9, w9, #0x1
  54:	and	w8, w8, #0xf0000000
  58:	orr	w8, w9, w8
  5c:	str	w8, [x20, #20]
  60:	cbz	x21, 1c0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0x1c0>
  64:	ldr	x8, [x20]
  68:	ldr	x10, [x21]
  6c:	cmp	x8, x10
  70:	b.ne	1e0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0x1e0>  // b.any
  74:	and	w8, w9, #0xfffffff
  78:	cbz	w8, 200 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0x200>
  7c:	ldur	x9, [x20, #-8]
  80:	sub	w10, w8, #0x1
  84:	mov	w8, #0x18                  	// #24
  88:	umaddl	x8, w10, w8, x9
  8c:	ldr	x11, [x8]
  90:	cbz	x11, c0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0xc0>
  94:	mov	w11, #0x18                  	// #24
  98:	madd	x12, x10, x11, x9
  9c:	ldp	x13, x11, [x12, #8]
  a0:	and	x11, x11, #0xfffffffffffffffc
  a4:	str	x13, [x11]
  a8:	ldr	x12, [x12, #8]
  ac:	cbz	x12, c0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0xc0>
  b0:	ldr	x13, [x12, #16]
  b4:	and	x13, x13, #0x3
  b8:	orr	x11, x13, x11
  bc:	str	x11, [x12, #16]
  c0:	str	x21, [x8]
  c4:	ldr	x11, [x21, #8]!
  c8:	mov	w12, #0x18                  	// #24
  cc:	madd	x12, x10, x12, x9
  d0:	str	x11, [x12, #8]!
  d4:	cbz	x11, f0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0xf0>
  d8:	tst	x12, #0x3
  dc:	b.ne	160 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0x160>  // b.any
  e0:	ldr	x13, [x11, #16]
  e4:	and	x13, x13, #0x3
  e8:	orr	x12, x13, x12
  ec:	str	x12, [x11, #16]
  f0:	tst	x21, #0x3
  f4:	b.ne	160 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0x160>  // b.any
  f8:	mov	w11, #0x18                  	// #24
  fc:	madd	x9, x10, x11, x9
 100:	ldr	x10, [x9, #16]!
 104:	and	x10, x10, #0x3
 108:	orr	x10, x10, x21
 10c:	str	x10, [x9]
 110:	str	x8, [x21]
 114:	cbz	x19, 220 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0x220>
 118:	ldr	w10, [x20, #20]
 11c:	and	x9, x10, #0xfffffff
 120:	sub	w8, w9, #0x1
 124:	tbnz	w10, #30, 138 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0x138>
 128:	mov	w10, #0x18                  	// #24
 12c:	mneg	x9, x9, x10
 130:	add	x9, x20, x9
 134:	b	13c <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0x13c>
 138:	ldur	x9, [x20, #-8]
 13c:	ldr	w10, [x20, #56]
 140:	mov	w11, #0x18                  	// #24
 144:	ldr	x21, [sp, #16]
 148:	madd	x9, x10, x11, x9
 14c:	add	x8, x9, w8, uxtw #3
 150:	str	x19, [x8, #8]
 154:	ldp	x20, x19, [sp, #32]
 158:	ldp	x29, x30, [sp], #48
 15c:	ret
 160:	adrp	x0, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 164:	adrp	x1, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 168:	adrp	x3, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 16c:	add	x0, x0, #0x0
 170:	add	x1, x1, #0x0
 174:	add	x3, x3, #0x0
 178:	mov	w2, #0xb3                  	// #179
 17c:	bl	0 <__assert_fail>
 180:	adrp	x0, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 184:	adrp	x1, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 188:	adrp	x3, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 18c:	add	x0, x0, #0x0
 190:	add	x1, x1, #0x0
 194:	add	x3, x3, #0x0
 198:	mov	w2, #0xd8                  	// #216
 19c:	bl	0 <__assert_fail>
 1a0:	adrp	x0, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 1a4:	adrp	x1, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 1a8:	adrp	x3, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 1ac:	add	x0, x0, #0x0
 1b0:	add	x1, x1, #0x0
 1b4:	add	x3, x3, #0x0
 1b8:	mov	w2, #0xd9                  	// #217
 1bc:	bl	0 <__assert_fail>
 1c0:	adrp	x0, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 1c4:	adrp	x1, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 1c8:	adrp	x3, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 1cc:	add	x0, x0, #0x0
 1d0:	add	x1, x1, #0x0
 1d4:	add	x3, x3, #0x0
 1d8:	mov	w2, #0xa5e                 	// #2654
 1dc:	bl	0 <__assert_fail>
 1e0:	adrp	x0, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 1e4:	adrp	x1, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 1e8:	adrp	x3, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 1ec:	add	x0, x0, #0x0
 1f0:	add	x1, x1, #0x0
 1f4:	add	x3, x3, #0x0
 1f8:	mov	w2, #0xa60                 	// #2656
 1fc:	bl	0 <__assert_fail>
 200:	adrp	x0, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 204:	adrp	x1, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 208:	adrp	x3, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 20c:	add	x0, x0, #0x0
 210:	add	x1, x1, #0x0
 214:	add	x3, x3, #0x0
 218:	mov	w2, #0xadf                 	// #2783
 21c:	bl	0 <__assert_fail>
 220:	adrp	x0, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 224:	adrp	x1, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 228:	adrp	x3, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 22c:	add	x0, x0, #0x0
 230:	add	x1, x1, #0x0
 234:	add	x3, x3, #0x0
 238:	mov	w2, #0xa82                 	// #2690
 23c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x8, [x1]
  1c:	mov	x19, x5
  20:	mov	x20, x4
  24:	mov	x21, x3
  28:	ldrb	w9, [x8, #8]
  2c:	mov	x22, x2
  30:	mov	x23, x1
  34:	mov	x24, x0
  38:	cmp	w9, #0x10
  3c:	b.ne	48 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0x48>  // b.any
  40:	ldr	x8, [x8, #16]
  44:	ldr	x8, [x8]
  48:	cbz	x8, dc <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0xdc>
  4c:	ldrb	w9, [x8, #8]
  50:	cmp	w9, #0xf
  54:	b.ne	fc <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0xfc>  // b.any
  58:	ldr	x8, [x8, #24]
  5c:	cbz	x24, 88 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0x88>
  60:	cmp	x8, x24
  64:	b.eq	8c <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0x8c>  // b.none
  68:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  6c:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  70:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x3a1                 	// #929
  84:	bl	0 <__assert_fail>
  88:	mov	x24, x8
  8c:	add	w25, w21, #0x1
  90:	mov	w0, #0x48                  	// #72
  94:	mov	w1, w25
  98:	bl	0 <_ZN4llvm4UsernwEmj>
  9c:	mov	x1, x24
  a0:	mov	x2, x23
  a4:	mov	x3, x22
  a8:	mov	x4, x21
  ac:	mov	w5, w25
  b0:	mov	x6, x20
  b4:	mov	x7, x19
  b8:	mov	x26, x0
  bc:	bl	0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  c0:	mov	x0, x26
  c4:	ldp	x20, x19, [sp, #64]
  c8:	ldp	x22, x21, [sp, #48]
  cc:	ldp	x24, x23, [sp, #32]
  d0:	ldp	x26, x25, [sp, #16]
  d4:	ldp	x29, x30, [sp], #80
  d8:	ret
  dc:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  e0:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  e4:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x69                  	// #105
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
 100:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
 104:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x108                 	// #264
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x21, x3
  1c:	mov	x22, x2
  20:	mov	x26, x1
  24:	mov	x23, x0
  28:	mov	x0, x1
  2c:	mov	x1, x2
  30:	mov	x2, x3
  34:	mov	x3, x4
  38:	mov	x24, x7
  3c:	mov	x19, x6
  40:	mov	w25, w5
  44:	mov	x20, x4
  48:	bl	0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  4c:	mov	w8, w25
  50:	mov	w9, #0x18                  	// #24
  54:	mneg	x8, x8, x9
  58:	mov	x1, x0
  5c:	add	x3, x23, x8
  60:	mov	w2, #0x22                  	// #34
  64:	mov	x0, x23
  68:	mov	w4, w25
  6c:	mov	x5, x24
  70:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
  74:	mov	x0, x26
  78:	mov	x1, x21
  7c:	mov	x2, x20
  80:	str	x26, [x23, #56]
  84:	bl	0 <_ZN4llvm17GetElementPtrInst14getIndexedTypeEPNS_4TypeENS_8ArrayRefIPNS_5ValueEEE>
  88:	ldr	x8, [x23]
  8c:	str	x0, [x23, #64]
  90:	ldrb	w9, [x8, #8]
  94:	cmp	w9, #0x10
  98:	b.ne	a4 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0xa4>  // b.any
  9c:	ldr	x8, [x8, #16]
  a0:	ldr	x8, [x8]
  a4:	cbz	x8, ec <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0xec>
  a8:	ldrb	w9, [x8, #8]
  ac:	cmp	w9, #0xf
  b0:	b.ne	10c <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0x10c>  // b.any
  b4:	ldr	x8, [x8, #24]
  b8:	cmp	x0, x8
  bc:	b.ne	12c <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0x12c>  // b.any
  c0:	mov	x0, x23
  c4:	mov	x1, x22
  c8:	mov	x2, x21
  cc:	mov	x3, x20
  d0:	mov	x4, x19
  d4:	ldp	x20, x19, [sp, #64]
  d8:	ldp	x22, x21, [sp, #48]
  dc:	ldp	x24, x23, [sp, #32]
  e0:	ldp	x26, x25, [sp, #16]
  e4:	ldp	x29, x30, [sp], #80
  e8:	b	0 <_ZN4llvm17GetElementPtrInst4initEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineE>
  ec:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  f0:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  f4:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  f8:	add	x0, x0, #0x0
  fc:	add	x1, x1, #0x0
 100:	add	x3, x3, #0x0
 104:	mov	w2, #0x69                  	// #105
 108:	bl	0 <__assert_fail>
 10c:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 110:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 114:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 118:	add	x0, x0, #0x0
 11c:	add	x1, x1, #0x0
 120:	add	x3, x3, #0x0
 124:	mov	w2, #0x108                 	// #264
 128:	bl	0 <__assert_fail>
 12c:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 130:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 134:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 138:	add	x0, x0, #0x0
 13c:	add	x1, x1, #0x0
 140:	add	x3, x3, #0x0
 144:	mov	w2, #0x46a                 	// #1130
 148:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE:

0000000000000000 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x2
  14:	mov	x21, x1
  18:	mov	x1, x2
  1c:	mov	x2, x3
  20:	mov	x20, x3
  24:	bl	0 <_ZN4llvm17GetElementPtrInst14getIndexedTypeEPNS_4TypeENS_8ArrayRefIPNS_5ValueEEE>
  28:	cbz	x0, d8 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xd8>
  2c:	ldr	x9, [x21]
  30:	ldr	w8, [x9, #8]
  34:	and	w10, w8, #0xff
  38:	cmp	w10, #0x10
  3c:	b.ne	50 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x50>  // b.any
  40:	ldr	x8, [x9, #16]
  44:	ldr	x8, [x8]
  48:	cbz	x8, 138 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x138>
  4c:	ldr	w8, [x8, #8]
  50:	and	w9, w8, #0xff
  54:	cmp	w9, #0xf
  58:	b.ne	f8 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xf8>  // b.any
  5c:	lsr	w1, w8, #8
  60:	bl	0 <_ZN4llvm11PointerType3getEPNS_4TypeEj>
  64:	ldr	x8, [x21]
  68:	ldrb	w9, [x8, #8]
  6c:	cmp	w9, #0x10
  70:	b.ne	8c <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x8c>  // b.any
  74:	cbz	x8, 118 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x118>
  78:	ldr	w1, [x8, #32]
  7c:	ldp	x20, x19, [sp, #32]
  80:	ldr	x21, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	b	0 <_ZN4llvm10VectorType3getEPNS_4TypeENS_12ElementCountE>
  8c:	cbz	x20, b0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xb0>
  90:	lsl	x8, x20, #3
  94:	ldr	x9, [x19], #8
  98:	ldr	x9, [x9]
  9c:	ldrb	w10, [x9, #8]
  a0:	cmp	w10, #0x10
  a4:	b.eq	c0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xc0>  // b.none
  a8:	subs	x8, x8, #0x8
  ac:	b.ne	94 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x94>  // b.any
  b0:	ldp	x20, x19, [sp, #32]
  b4:	ldr	x21, [sp, #16]
  b8:	ldp	x29, x30, [sp], #48
  bc:	ret
  c0:	cbz	x9, 118 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x118>
  c4:	ldr	w1, [x9, #32]
  c8:	ldp	x20, x19, [sp, #32]
  cc:	ldr	x21, [sp, #16]
  d0:	ldp	x29, x30, [sp], #48
  d4:	b	0 <_ZN4llvm10VectorType3getEPNS_4TypeENS_12ElementCountE>
  d8:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  dc:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  e0:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  e4:	add	x0, x0, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x3, x3, #0x0
  f0:	mov	w2, #0x375                 	// #885
  f4:	bl	0 <__assert_fail>
  f8:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  fc:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 100:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0x108                 	// #264
 114:	bl	0 <__assert_fail>
 118:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 11c:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 120:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 124:	add	x0, x0, #0x0
 128:	add	x1, x1, #0x0
 12c:	add	x3, x3, #0x0
 130:	mov	w2, #0x69                  	// #105
 134:	bl	0 <__assert_fail>
 138:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 13c:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 140:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 144:	add	x0, x0, #0x0
 148:	add	x1, x1, #0x0
 14c:	add	x3, x3, #0x0
 150:	mov	w2, #0x69                  	// #105
 154:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm16UnaryInstructionC2EPNS_4TypeEjPNS_5ValueEPNS_11InstructionE:

0000000000000000 <_ZN4llvm16UnaryInstructionC2EPNS_4TypeEjPNS_5ValueEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	x20, x0, #0x18
  14:	mov	x5, x4
  18:	mov	x19, x3
  1c:	mov	w4, #0x1                   	// #1
  20:	mov	x3, x20
  24:	mov	x21, x0
  28:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
  2c:	ldur	x8, [x21, #-24]
  30:	cbz	x8, 58 <_ZN4llvm16UnaryInstructionC2EPNS_4TypeEjPNS_5ValueEPNS_11InstructionE+0x58>
  34:	ldp	x9, x8, [x20, #8]
  38:	and	x8, x8, #0xfffffffffffffffc
  3c:	str	x9, [x8]
  40:	ldr	x9, [x20, #8]
  44:	cbz	x9, 58 <_ZN4llvm16UnaryInstructionC2EPNS_4TypeEjPNS_5ValueEPNS_11InstructionE+0x58>
  48:	ldr	x10, [x9, #16]
  4c:	and	x10, x10, #0x3
  50:	orr	x8, x10, x8
  54:	str	x8, [x9, #16]
  58:	str	x19, [x20]
  5c:	cbz	x19, a4 <_ZN4llvm16UnaryInstructionC2EPNS_4TypeEjPNS_5ValueEPNS_11InstructionE+0xa4>
  60:	ldr	x8, [x19, #8]!
  64:	mov	x9, x20
  68:	str	x8, [x9, #8]!
  6c:	cbz	x8, 88 <_ZN4llvm16UnaryInstructionC2EPNS_4TypeEjPNS_5ValueEPNS_11InstructionE+0x88>
  70:	tst	x9, #0x3
  74:	b.ne	b4 <_ZN4llvm16UnaryInstructionC2EPNS_4TypeEjPNS_5ValueEPNS_11InstructionE+0xb4>  // b.any
  78:	ldr	x10, [x8, #16]
  7c:	and	x10, x10, #0x3
  80:	orr	x9, x10, x9
  84:	str	x9, [x8, #16]
  88:	tst	x19, #0x3
  8c:	b.ne	b4 <_ZN4llvm16UnaryInstructionC2EPNS_4TypeEjPNS_5ValueEPNS_11InstructionE+0xb4>  // b.any
  90:	ldr	x8, [x20, #16]
  94:	and	x8, x8, #0x3
  98:	orr	x8, x8, x19
  9c:	str	x8, [x20, #16]
  a0:	str	x20, [x19]
  a4:	ldp	x20, x19, [sp, #32]
  a8:	ldr	x21, [sp, #16]
  ac:	ldp	x29, x30, [sp], #48
  b0:	ret
  b4:	adrp	x0, 0 <_ZN4llvm16UnaryInstructionC2EPNS_4TypeEjPNS_5ValueEPNS_11InstructionE>
  b8:	adrp	x1, 0 <_ZN4llvm16UnaryInstructionC2EPNS_4TypeEjPNS_5ValueEPNS_11InstructionE>
  bc:	adrp	x3, 0 <_ZN4llvm16UnaryInstructionC2EPNS_4TypeEjPNS_5ValueEPNS_11InstructionE>
  c0:	add	x0, x0, #0x0
  c4:	add	x1, x1, #0x0
  c8:	add	x3, x3, #0x0
  cc:	mov	w2, #0xb3                  	// #179
  d0:	bl	0 <__assert_fail>

RandomIRBuilder.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>:
   0:	sub	sp, sp, #0xa0
   4:	stp	x29, x30, [sp, #96]
   8:	str	x23, [sp, #112]
   c:	stp	x22, x21, [sp, #128]
  10:	stp	x20, x19, [sp, #144]
  14:	add	x29, sp, #0x60
  18:	adrp	x8, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
  1c:	adrp	x9, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
  20:	mov	x20, x2
  24:	mov	x21, x1
  28:	mov	x22, x0
  2c:	add	x8, x8, #0x0
  30:	add	x9, x9, #0x0
  34:	mov	x0, sp
  38:	sub	x1, x29, #0x20
  3c:	mov	w2, #0x1                   	// #1
  40:	mov	x19, x3
  44:	stp	x9, x8, [x29, #-16]
  48:	bl	0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
  4c:	ldur	x8, [x29, #-16]
  50:	cbz	x8, 64 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE+0x64>
  54:	sub	x0, x29, #0x20
  58:	sub	x1, x29, #0x20
  5c:	mov	w2, #0x3                   	// #3
  60:	blr	x8
  64:	mov	x6, sp
  68:	mov	x0, x22
  6c:	mov	x1, x21
  70:	mov	x2, x20
  74:	mov	x3, x19
  78:	mov	x4, xzr
  7c:	mov	x5, xzr
  80:	mov	x23, sp
  84:	bl	d8 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE>
  88:	ldr	x8, [sp, #48]
  8c:	mov	x19, x0
  90:	cbz	x8, a4 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE+0xa4>
  94:	add	x0, x23, #0x20
  98:	mov	w2, #0x3                   	// #3
  9c:	mov	x1, x0
  a0:	blr	x8
  a4:	ldr	x8, [sp, #16]
  a8:	cbz	x8, bc <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE+0xbc>
  ac:	mov	x0, sp
  b0:	mov	x1, sp
  b4:	mov	w2, #0x3                   	// #3
  b8:	blr	x8
  bc:	mov	x0, x19
  c0:	ldp	x20, x19, [sp, #144]
  c4:	ldp	x22, x21, [sp, #128]
  c8:	ldr	x23, [sp, #112]
  cc:	ldp	x29, x30, [sp, #96]
  d0:	add	sp, sp, #0xa0
  d4:	ret

00000000000000d8 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE>:
  d8:	sub	sp, sp, #0xc0
  dc:	stp	x29, x30, [sp, #96]
  e0:	stp	x28, x27, [sp, #112]
  e4:	stp	x26, x25, [sp, #128]
  e8:	stp	x24, x23, [sp, #144]
  ec:	stp	x22, x21, [sp, #160]
  f0:	stp	x20, x19, [sp, #176]
  f4:	add	x29, sp, #0x60
  f8:	mov	x25, x6
  fc:	mov	x19, x5
 100:	mov	x20, x4
 104:	mov	x21, x3
 108:	mov	x22, x2
 10c:	mov	x23, x1
 110:	mov	x24, x0
 114:	add	x26, x2, x3, lsl #3
 118:	cbz	x3, 170 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0x98>
 11c:	ldr	x8, [x22]
 120:	stp	x20, x19, [x29, #-16]
 124:	stur	x8, [x29, #-24]
 128:	ldr	x8, [x25, #16]
 12c:	cbz	x8, 16c <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0x94>
 130:	mov	x27, x22
 134:	ldr	x8, [x25, #24]
 138:	sub	x1, x29, #0x10
 13c:	sub	x2, x29, #0x18
 140:	mov	x0, x25
 144:	blr	x8
 148:	tbnz	w0, #0, 174 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0x9c>
 14c:	add	x27, x27, #0x8
 150:	cmp	x27, x26
 154:	b.eq	208 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0x130>  // b.none
 158:	ldr	x8, [x27]
 15c:	stp	x20, x19, [x29, #-16]
 160:	stur	x8, [x29, #-24]
 164:	ldr	x8, [x25, #16]
 168:	cbnz	x8, 134 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0x5c>
 16c:	bl	0 <_ZSt25__throw_bad_function_callv>
 170:	mov	x27, x22
 174:	cmp	x26, x27
 178:	str	x23, [sp]
 17c:	b.eq	218 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0x140>  // b.none
 180:	mov	x28, xzr
 184:	mov	x23, xzr
 188:	mov	w8, #0x1                   	// #1
 18c:	add	x23, x23, #0x1
 190:	sub	x0, x29, #0x10
 194:	sub	x2, x29, #0x10
 198:	mov	x1, x24
 19c:	stp	x8, x23, [x29, #-16]
 1a0:	bl	0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 1a4:	cmp	x0, #0x1
 1a8:	b.hi	1b0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0xd8>  // b.pmore
 1ac:	ldr	x28, [x27]
 1b0:	add	x27, x27, #0x8
 1b4:	cmp	x27, x26
 1b8:	b.eq	220 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0x148>  // b.none
 1bc:	ldr	x8, [x27]
 1c0:	stp	x20, x19, [x29, #-16]
 1c4:	stur	x8, [x29, #-24]
 1c8:	ldr	x8, [x25, #16]
 1cc:	cbz	x8, 16c <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0x94>
 1d0:	ldr	x8, [x25, #24]
 1d4:	sub	x1, x29, #0x10
 1d8:	sub	x2, x29, #0x18
 1dc:	mov	x0, x25
 1e0:	blr	x8
 1e4:	tbnz	w0, #0, 1f8 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0x120>
 1e8:	add	x27, x27, #0x8
 1ec:	cmp	x26, x27
 1f0:	b.ne	1bc <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0xe4>  // b.any
 1f4:	b	220 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0x148>
 1f8:	cmp	x26, x27
 1fc:	mov	w8, #0x1                   	// #1
 200:	b.ne	18c <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0xb4>  // b.any
 204:	b	220 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0x148>
 208:	mov	x27, x26
 20c:	cmp	x26, x27
 210:	str	x23, [sp]
 214:	b.ne	180 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0xa8>  // b.any
 218:	mov	x23, xzr
 21c:	mov	x28, xzr
 220:	adds	x8, x23, #0x1
 224:	mov	w9, #0x1                   	// #1
 228:	sub	x0, x29, #0x10
 22c:	sub	x2, x29, #0x10
 230:	mov	x1, x24
 234:	stp	x9, x8, [x29, #-16]
 238:	bl	0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 23c:	cmn	x23, #0x1
 240:	b.cs	318 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0x240>  // b.hs, b.nlast
 244:	cmp	x0, #0x1
 248:	csel	x26, x28, xzr, hi  // hi = pmore
 24c:	cbnz	x26, 2f4 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0x21c>
 250:	str	xzr, [sp, #24]
 254:	ldr	x8, [x25, #16]
 258:	cbz	x8, 274 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0x19c>
 25c:	add	x0, sp, #0x8
 260:	mov	w2, #0x2                   	// #2
 264:	mov	x1, x25
 268:	blr	x8
 26c:	ldr	q0, [x25, #16]
 270:	stur	q0, [sp, #24]
 274:	str	xzr, [sp, #56]
 278:	ldr	x8, [x25, #48]
 27c:	cbz	x8, 29c <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0x1c4>
 280:	add	x9, sp, #0x8
 284:	add	x0, x9, #0x20
 288:	add	x1, x25, #0x20
 28c:	mov	w2, #0x2                   	// #2
 290:	blr	x8
 294:	ldr	q0, [x25, #48]
 298:	stur	q0, [sp, #56]
 29c:	ldr	x1, [sp]
 2a0:	add	x6, sp, #0x8
 2a4:	mov	x0, x24
 2a8:	mov	x2, x22
 2ac:	mov	x3, x21
 2b0:	mov	x4, x20
 2b4:	mov	x5, x19
 2b8:	add	x23, sp, #0x8
 2bc:	bl	338 <_ZN4llvm15RandomIRBuilder9newSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE>
 2c0:	ldr	x8, [sp, #56]
 2c4:	mov	x26, x0
 2c8:	cbz	x8, 2dc <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0x204>
 2cc:	add	x0, x23, #0x20
 2d0:	mov	w2, #0x3                   	// #3
 2d4:	mov	x1, x0
 2d8:	blr	x8
 2dc:	ldr	x8, [sp, #24]
 2e0:	cbz	x8, 2f4 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0x21c>
 2e4:	add	x0, sp, #0x8
 2e8:	add	x1, sp, #0x8
 2ec:	mov	w2, #0x3                   	// #3
 2f0:	blr	x8
 2f4:	mov	x0, x26
 2f8:	ldp	x20, x19, [sp, #176]
 2fc:	ldp	x22, x21, [sp, #160]
 300:	ldp	x24, x23, [sp, #144]
 304:	ldp	x26, x25, [sp, #128]
 308:	ldp	x28, x27, [sp, #112]
 30c:	ldp	x29, x30, [sp, #96]
 310:	add	sp, sp, #0xc0
 314:	ret
 318:	adrp	x0, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 31c:	adrp	x1, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 320:	adrp	x3, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 324:	add	x0, x0, #0x0
 328:	add	x1, x1, #0x0
 32c:	add	x3, x3, #0x0
 330:	mov	w2, #0x2d                  	// #45
 334:	bl	0 <__assert_fail>

0000000000000338 <_ZN4llvm15RandomIRBuilder9newSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE>:
 338:	sub	sp, sp, #0x100
 33c:	stp	x29, x30, [sp, #160]
 340:	stp	x28, x27, [sp, #176]
 344:	stp	x26, x25, [sp, #192]
 348:	stp	x24, x23, [sp, #208]
 34c:	stp	x22, x21, [sp, #224]
 350:	stp	x20, x19, [sp, #240]
 354:	add	x29, sp, #0xa0
 358:	ldr	x8, [x0, #5000]
 35c:	ldr	w9, [x0, #5008]
 360:	stp	x4, x5, [x29, #-16]
 364:	stp	x1, x5, [sp, #24]
 368:	stp	x8, x9, [x29, #-32]
 36c:	ldr	x8, [x6, #48]
 370:	cbz	x8, 5d4 <_ZN4llvm15RandomIRBuilder9newSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0x29c>
 374:	ldr	x9, [x6, #56]
 378:	add	x27, x6, #0x20
 37c:	mov	x26, x2
 380:	mov	x19, x0
 384:	sub	x8, x29, #0x38
 388:	sub	x1, x29, #0x10
 38c:	sub	x2, x29, #0x20
 390:	mov	x0, x27
 394:	mov	x21, x6
 398:	mov	x23, x4
 39c:	mov	x25, x3
 3a0:	blr	x9
 3a4:	ldp	x28, x24, [x29, #-56]
 3a8:	cmp	x28, x24
 3ac:	b.eq	4d0 <_ZN4llvm15RandomIRBuilder9newSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0x198>  // b.none
 3b0:	stp	x26, x23, [sp, #8]
 3b4:	mov	x23, x25
 3b8:	mov	x22, xzr
 3bc:	mov	x20, xzr
 3c0:	mov	w25, #0x1                   	// #1
 3c4:	ldr	x26, [x28], #8
 3c8:	add	x22, x22, #0x1
 3cc:	sub	x0, x29, #0x10
 3d0:	sub	x2, x29, #0x10
 3d4:	mov	x1, x19
 3d8:	stp	x25, x22, [x29, #-16]
 3dc:	bl	0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 3e0:	cmp	x0, #0x1
 3e4:	csel	x20, x20, x26, hi  // hi = pmore
 3e8:	cmp	x24, x28
 3ec:	b.ne	3c4 <_ZN4llvm15RandomIRBuilder9newSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0x8c>  // b.any
 3f0:	ldur	x28, [x29, #-56]
 3f4:	mov	x25, x23
 3f8:	ldp	x26, x23, [sp, #8]
 3fc:	cbz	x28, 408 <_ZN4llvm15RandomIRBuilder9newSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0xd0>
 400:	mov	x0, x28
 404:	bl	0 <_ZdlPv>
 408:	str	xzr, [sp, #56]
 40c:	ldr	x8, [x21, #16]
 410:	cbz	x8, 42c <_ZN4llvm15RandomIRBuilder9newSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0xf4>
 414:	add	x0, sp, #0x28
 418:	mov	w2, #0x2                   	// #2
 41c:	mov	x1, x21
 420:	blr	x8
 424:	ldr	q0, [x21, #16]
 428:	stur	q0, [sp, #56]
 42c:	str	xzr, [sp, #88]
 430:	ldr	x8, [x21, #48]
 434:	cbz	x8, 454 <_ZN4llvm15RandomIRBuilder9newSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0x11c>
 438:	add	x9, sp, #0x28
 43c:	add	x0, x9, #0x20
 440:	mov	w2, #0x2                   	// #2
 444:	mov	x1, x27
 448:	blr	x8
 44c:	ldr	q0, [x21, #48]
 450:	stur	q0, [sp, #88]
 454:	ldr	x27, [sp, #32]
 458:	add	x6, sp, #0x28
 45c:	mov	x0, x19
 460:	mov	x2, x26
 464:	mov	x3, x25
 468:	mov	x4, x23
 46c:	mov	x5, x27
 470:	add	x24, sp, #0x28
 474:	bl	678 <_ZN4llvm15RandomIRBuilder11findPointerERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE>
 478:	ldr	x8, [sp, #88]
 47c:	mov	x25, x0
 480:	cbz	x8, 494 <_ZN4llvm15RandomIRBuilder9newSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0x15c>
 484:	add	x0, x24, #0x20
 488:	mov	w2, #0x3                   	// #3
 48c:	mov	x1, x0
 490:	blr	x8
 494:	ldr	x8, [sp, #56]
 498:	cbz	x8, 4ac <_ZN4llvm15RandomIRBuilder9newSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0x174>
 49c:	add	x0, sp, #0x28
 4a0:	add	x1, sp, #0x28
 4a4:	mov	w2, #0x3                   	// #3
 4a8:	blr	x8
 4ac:	ldr	x24, [sp, #24]
 4b0:	cbz	x25, 5ac <_ZN4llvm15RandomIRBuilder9newSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0x274>
 4b4:	mov	x0, x24
 4b8:	bl	0 <_ZNK4llvm10BasicBlock19getFirstInsertionPtEv>
 4bc:	ldrb	w8, [x25, #16]
 4c0:	cmp	w8, #0x18
 4c4:	b.cs	4e0 <_ZN4llvm15RandomIRBuilder9newSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0x1a8>  // b.hs, b.nlast
 4c8:	mov	x26, x0
 4cc:	b	4f0 <_ZN4llvm15RandomIRBuilder9newSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0x1b8>
 4d0:	mov	x22, xzr
 4d4:	mov	x20, xzr
 4d8:	cbnz	x28, 400 <_ZN4llvm15RandomIRBuilder9newSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0xc8>
 4dc:	b	408 <_ZN4llvm15RandomIRBuilder9newSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0xd0>
 4e0:	ldr	x26, [x25, #32]
 4e4:	add	x8, x24, #0x28
 4e8:	cmp	x8, x26
 4ec:	b.eq	658 <_ZN4llvm15RandomIRBuilder9newSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0x320>  // b.none
 4f0:	mov	w0, #0x40                  	// #64
 4f4:	mov	w1, #0x1                   	// #1
 4f8:	bl	0 <_ZN4llvm4UsernwEmj>
 4fc:	ldr	x8, [x25]
 500:	cbz	x8, 5f8 <_ZN4llvm15RandomIRBuilder9newSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0x2c0>
 504:	ldrb	w9, [x8, #8]
 508:	cmp	w9, #0xf
 50c:	b.ne	618 <_ZN4llvm15RandomIRBuilder9newSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0x2e0>  // b.any
 510:	ldr	x1, [x8, #24]
 514:	adrp	x8, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 518:	add	x8, x8, #0x0
 51c:	mov	w9, #0x103                 	// #259
 520:	stp	x8, xzr, [x29, #-56]
 524:	sturh	w9, [x29, #-40]
 528:	ldrb	w8, [x26]
 52c:	tbnz	w8, #2, 638 <_ZN4llvm15RandomIRBuilder9newSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0x300>
 530:	sub	x8, x26, #0x18
 534:	cmp	x26, #0x0
 538:	csel	x4, xzr, x8, eq  // eq = none
 53c:	sub	x3, x29, #0x38
 540:	mov	x2, x25
 544:	mov	x24, x0
 548:	bl	0 <_ZN4llvm8LoadInstC1EPNS_4TypeEPNS_5ValueERKNS_5TwineEPNS_11InstructionE>
 54c:	stp	x23, x27, [x29, #-56]
 550:	stur	x24, [x29, #-16]
 554:	ldr	x8, [x21, #16]
 558:	cbz	x8, 5d4 <_ZN4llvm15RandomIRBuilder9newSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0x29c>
 55c:	ldr	x8, [x21, #24]
 560:	sub	x1, x29, #0x38
 564:	sub	x2, x29, #0x10
 568:	mov	x0, x21
 56c:	blr	x8
 570:	tbz	w0, #0, 5a4 <_ZN4llvm15RandomIRBuilder9newSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0x26c>
 574:	cbz	x22, 5d8 <_ZN4llvm15RandomIRBuilder9newSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0x2a0>
 578:	lsl	x21, x22, #1
 57c:	mov	w8, #0x1                   	// #1
 580:	sub	x0, x29, #0x38
 584:	sub	x2, x29, #0x38
 588:	mov	x1, x19
 58c:	stp	x8, x21, [x29, #-56]
 590:	bl	0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 594:	cmp	x0, x22
 598:	csel	x20, x20, x24, hi  // hi = pmore
 59c:	mov	x22, x21
 5a0:	b	5ac <_ZN4llvm15RandomIRBuilder9newSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0x274>
 5a4:	mov	x0, x24
 5a8:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
 5ac:	cbz	x22, 5d8 <_ZN4llvm15RandomIRBuilder9newSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0x2a0>
 5b0:	mov	x0, x20
 5b4:	ldp	x20, x19, [sp, #240]
 5b8:	ldp	x22, x21, [sp, #224]
 5bc:	ldp	x24, x23, [sp, #208]
 5c0:	ldp	x26, x25, [sp, #192]
 5c4:	ldp	x28, x27, [sp, #176]
 5c8:	ldp	x29, x30, [sp, #160]
 5cc:	add	sp, sp, #0x100
 5d0:	ret
 5d4:	bl	0 <_ZSt25__throw_bad_function_callv>
 5d8:	adrp	x0, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 5dc:	adrp	x1, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 5e0:	adrp	x3, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 5e4:	add	x0, x0, #0x0
 5e8:	add	x1, x1, #0x0
 5ec:	add	x3, x3, #0x0
 5f0:	mov	w2, #0x42                  	// #66
 5f4:	bl	0 <__assert_fail>
 5f8:	adrp	x0, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 5fc:	adrp	x1, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 600:	adrp	x3, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 604:	add	x0, x0, #0x0
 608:	add	x1, x1, #0x0
 60c:	add	x3, x3, #0x0
 610:	mov	w2, #0x69                  	// #105
 614:	bl	0 <__assert_fail>
 618:	adrp	x0, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 61c:	adrp	x1, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 620:	adrp	x3, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 624:	add	x0, x0, #0x0
 628:	add	x1, x1, #0x0
 62c:	add	x3, x3, #0x0
 630:	mov	w2, #0x108                 	// #264
 634:	bl	0 <__assert_fail>
 638:	adrp	x0, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 63c:	adrp	x1, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 640:	adrp	x3, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 644:	add	x0, x0, #0x0
 648:	add	x1, x1, #0x0
 64c:	add	x3, x3, #0x0
 650:	mov	w2, #0x8b                  	// #139
 654:	bl	0 <__assert_fail>
 658:	adrp	x0, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 65c:	adrp	x1, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 660:	adrp	x3, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 664:	add	x0, x0, #0x0
 668:	add	x1, x1, #0x0
 66c:	add	x3, x3, #0x0
 670:	mov	w2, #0x36                  	// #54
 674:	bl	0 <__assert_fail>

0000000000000678 <_ZN4llvm15RandomIRBuilder11findPointerERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE>:
 678:	sub	sp, sp, #0xb0
 67c:	stp	x29, x30, [sp, #112]
 680:	stp	x24, x23, [sp, #128]
 684:	stp	x22, x21, [sp, #144]
 688:	stp	x20, x19, [sp, #160]
 68c:	add	x29, sp, #0x70
 690:	mov	x19, x0
 694:	add	x21, x2, x3, lsl #3
 698:	add	x22, sp, #0x20
 69c:	sub	x0, x29, #0x20
 6a0:	mov	x20, x6
 6a4:	stp	x4, x5, [sp, #32]
 6a8:	stp	x2, x21, [x29, #-32]
 6ac:	stp	x22, x6, [x29, #-16]
 6b0:	bl	c3c <_ZN4llvm20filter_iterator_baseIPKPNS_11InstructionEZNS_15RandomIRBuilder11findPointerERNS_10BasicBlockENS_8ArrayRefIS2_EENS8_IPNS_5ValueEEENS_8fuzzerop10SourcePredEE3$_1St26bidirectional_iterator_tagE13findNextValidEv>
 6b4:	add	x0, sp, #0x30
 6b8:	stp	x21, x21, [sp, #48]
 6bc:	stp	x22, x20, [sp, #64]
 6c0:	bl	c3c <_ZN4llvm20filter_iterator_baseIPKPNS_11InstructionEZNS_15RandomIRBuilder11findPointerERNS_10BasicBlockENS_8ArrayRefIS2_EENS8_IPNS_5ValueEEENS_8fuzzerop10SourcePredEE3$_1St26bidirectional_iterator_tagE13findNextValidEv>
 6c4:	ldp	q0, q1, [x29, #-32]
 6c8:	ldr	x21, [sp, #48]
 6cc:	stp	q0, q1, [x29, #-32]
 6d0:	ldur	x22, [x29, #-32]
 6d4:	stp	q0, q1, [sp]
 6d8:	cmp	x22, x21
 6dc:	b.eq	73c <_ZN4llvm15RandomIRBuilder11findPointerERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0xc4>  // b.none
 6e0:	mov	x20, xzr
 6e4:	mov	w23, #0x1                   	// #1
 6e8:	mov	w24, #0x1                   	// #1
 6ec:	b	710 <_ZN4llvm15RandomIRBuilder11findPointerERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0x98>
 6f0:	add	x8, x22, #0x8
 6f4:	sub	x0, x29, #0x20
 6f8:	stur	x8, [x29, #-32]
 6fc:	bl	c3c <_ZN4llvm20filter_iterator_baseIPKPNS_11InstructionEZNS_15RandomIRBuilder11findPointerERNS_10BasicBlockENS_8ArrayRefIS2_EENS8_IPNS_5ValueEEENS_8fuzzerop10SourcePredEE3$_1St26bidirectional_iterator_tagE13findNextValidEv>
 700:	ldur	x22, [x29, #-32]
 704:	add	x24, x24, #0x1
 708:	cmp	x22, x21
 70c:	b.eq	734 <_ZN4llvm15RandomIRBuilder11findPointerERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0xbc>  // b.none
 710:	add	x0, sp, #0x30
 714:	add	x2, sp, #0x30
 718:	mov	x1, x19
 71c:	stp	x23, x24, [sp, #48]
 720:	bl	0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 724:	cmp	x0, #0x1
 728:	b.hi	6f0 <_ZN4llvm15RandomIRBuilder11findPointerERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0x78>  // b.pmore
 72c:	ldr	x20, [x22]
 730:	b	6f0 <_ZN4llvm15RandomIRBuilder11findPointerERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0x78>
 734:	cmp	x24, #0x1
 738:	b.ne	740 <_ZN4llvm15RandomIRBuilder11findPointerERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE+0xc8>  // b.any
 73c:	mov	x20, xzr
 740:	mov	x0, x20
 744:	ldp	x20, x19, [sp, #160]
 748:	ldp	x22, x21, [sp, #144]
 74c:	ldp	x24, x23, [sp, #128]
 750:	ldp	x29, x30, [sp, #112]
 754:	add	sp, sp, #0xb0
 758:	ret

000000000000075c <_ZN4llvm15RandomIRBuilder13connectToSinkERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEEPNS_5ValueE>:
 75c:	sub	sp, sp, #0x90
 760:	stp	x29, x30, [sp, #48]
 764:	stp	x28, x27, [sp, #64]
 768:	stp	x26, x25, [sp, #80]
 76c:	stp	x24, x23, [sp, #96]
 770:	stp	x22, x21, [sp, #112]
 774:	stp	x20, x19, [sp, #128]
 778:	add	x29, sp, #0x30
 77c:	mov	x19, x4
 780:	mov	x23, x0
 784:	stp	x1, x2, [sp]
 788:	str	x3, [sp, #16]
 78c:	cbz	x3, 8b8 <_ZN4llvm15RandomIRBuilder13connectToSinkERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEEPNS_5ValueE+0x15c>
 790:	mov	w21, #0x1                   	// #1
 794:	mov	x25, xzr
 798:	mov	x26, xzr
 79c:	add	x8, x2, x3, lsl #3
 7a0:	mov	w22, #0x1                   	// #1
 7a4:	movk	w21, #0x4800, lsl #16
 7a8:	mov	w20, #0xb0000000            	// #-1342177280
 7ac:	mov	x28, x2
 7b0:	str	x8, [sp, #24]
 7b4:	b	7c8 <_ZN4llvm15RandomIRBuilder13connectToSinkERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEEPNS_5ValueE+0x6c>
 7b8:	ldr	x8, [sp, #24]
 7bc:	add	x28, x28, #0x8
 7c0:	cmp	x28, x8
 7c4:	b.eq	8c0 <_ZN4llvm15RandomIRBuilder13connectToSinkERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEEPNS_5ValueE+0x164>  // b.none
 7c8:	ldr	x8, [x28]
 7cc:	cbz	x8, 94c <_ZN4llvm15RandomIRBuilder13connectToSinkERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEEPNS_5ValueE+0x1f0>
 7d0:	ldrb	w9, [x8, #16]
 7d4:	cmp	w9, #0x50
 7d8:	b.ne	7f4 <_ZN4llvm15RandomIRBuilder13connectToSinkERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEEPNS_5ValueE+0x98>  // b.any
 7dc:	ldur	x9, [x8, #-24]
 7e0:	cbz	x9, 7f4 <_ZN4llvm15RandomIRBuilder13connectToSinkERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEEPNS_5ValueE+0x98>
 7e4:	ldrb	w10, [x9, #16]
 7e8:	cbnz	w10, 7f4 <_ZN4llvm15RandomIRBuilder13connectToSinkERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEEPNS_5ValueE+0x98>
 7ec:	ldrb	w9, [x9, #33]
 7f0:	tbnz	w9, #5, 7b8 <_ZN4llvm15RandomIRBuilder13connectToSinkERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEEPNS_5ValueE+0x5c>
 7f4:	ldr	w9, [x8, #20]
 7f8:	tbnz	w9, #30, 814 <_ZN4llvm15RandomIRBuilder13connectToSinkERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEEPNS_5ValueE+0xb8>
 7fc:	and	w9, w9, #0xfffffff
 800:	mov	w10, #0x18                  	// #24
 804:	mneg	x10, x9, x10
 808:	add	x24, x8, x10
 80c:	cbnz	x9, 820 <_ZN4llvm15RandomIRBuilder13connectToSinkERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEEPNS_5ValueE+0xc4>
 810:	b	7b8 <_ZN4llvm15RandomIRBuilder13connectToSinkERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEEPNS_5ValueE+0x5c>
 814:	ldur	x24, [x8, #-8]
 818:	and	x9, x9, #0xfffffff
 81c:	cbz	x9, 7b8 <_ZN4llvm15RandomIRBuilder13connectToSinkERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEEPNS_5ValueE+0x5c>
 820:	add	x8, x9, x9, lsl #1
 824:	lsl	x27, x8, #3
 828:	b	858 <_ZN4llvm15RandomIRBuilder13connectToSinkERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEEPNS_5ValueE+0xfc>
 82c:	add	x26, x26, #0x1
 830:	sub	x0, x29, #0x10
 834:	sub	x2, x29, #0x10
 838:	mov	x1, x23
 83c:	stp	x22, x26, [x29, #-16]
 840:	bl	0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 844:	cmp	x0, #0x1
 848:	csel	x25, x25, x24, hi  // hi = pmore
 84c:	subs	x27, x27, #0x18
 850:	add	x24, x24, #0x18
 854:	b.eq	7b8 <_ZN4llvm15RandomIRBuilder13connectToSinkERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEEPNS_5ValueE+0x5c>  // b.none
 858:	ldr	x8, [x24]
 85c:	ldr	x9, [x19]
 860:	ldr	x8, [x8]
 864:	cmp	x8, x9
 868:	b.ne	84c <_ZN4llvm15RandomIRBuilder13connectToSinkERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEEPNS_5ValueE+0xf0>  // b.any
 86c:	ldr	x8, [x28]
 870:	ldrb	w8, [x8, #16]
 874:	sub	w8, w8, #0x3a
 878:	cmp	w8, #0x1f
 87c:	b.hi	82c <_ZN4llvm15RandomIRBuilder13connectToSinkERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEEPNS_5ValueE+0xd0>  // b.pmore
 880:	lsl	w8, w22, w8
 884:	tst	w8, w21
 888:	b.ne	8a8 <_ZN4llvm15RandomIRBuilder13connectToSinkERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEEPNS_5ValueE+0x14c>  // b.any
 88c:	tst	w8, w20
 890:	b.eq	82c <_ZN4llvm15RandomIRBuilder13connectToSinkERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEEPNS_5ValueE+0xd0>  // b.none
 894:	mov	x0, x24
 898:	bl	0 <_ZNK4llvm3Use12getOperandNoEv>
 89c:	cmp	w0, #0x1
 8a0:	b.ls	82c <_ZN4llvm15RandomIRBuilder13connectToSinkERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEEPNS_5ValueE+0xd0>  // b.plast
 8a4:	b	84c <_ZN4llvm15RandomIRBuilder13connectToSinkERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEEPNS_5ValueE+0xf0>
 8a8:	mov	x0, x24
 8ac:	bl	0 <_ZNK4llvm3Use12getOperandNoEv>
 8b0:	cbnz	w0, 84c <_ZN4llvm15RandomIRBuilder13connectToSinkERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEEPNS_5ValueE+0xf0>
 8b4:	b	82c <_ZN4llvm15RandomIRBuilder13connectToSinkERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEEPNS_5ValueE+0xd0>
 8b8:	mov	x26, xzr
 8bc:	mov	x25, xzr
 8c0:	adds	x8, x26, #0x1
 8c4:	mov	w9, #0x1                   	// #1
 8c8:	sub	x0, x29, #0x10
 8cc:	sub	x2, x29, #0x10
 8d0:	mov	x1, x23
 8d4:	stp	x9, x8, [x29, #-16]
 8d8:	bl	0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 8dc:	cmn	x26, #0x1
 8e0:	b.cs	96c <_ZN4llvm15RandomIRBuilder13connectToSinkERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEEPNS_5ValueE+0x210>  // b.hs, b.nlast
 8e4:	ldp	x2, x3, [sp, #8]
 8e8:	cmp	x0, #0x1
 8ec:	csel	x24, x25, xzr, hi  // hi = pmore
 8f0:	cbz	x24, 91c <_ZN4llvm15RandomIRBuilder13connectToSinkERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEEPNS_5ValueE+0x1c0>
 8f4:	mov	x0, x24
 8f8:	bl	0 <_ZNK4llvm3Use7getUserEv>
 8fc:	mov	x20, x0
 900:	mov	x0, x24
 904:	bl	0 <_ZNK4llvm3Use12getOperandNoEv>
 908:	mov	w1, w0
 90c:	mov	x0, x20
 910:	mov	x2, x19
 914:	bl	0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 918:	b	92c <_ZN4llvm15RandomIRBuilder13connectToSinkERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEEPNS_5ValueE+0x1d0>
 91c:	ldr	x1, [sp]
 920:	mov	x0, x23
 924:	mov	x4, x19
 928:	bl	98c <_ZN4llvm15RandomIRBuilder7newSinkERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEEPNS_5ValueE>
 92c:	ldp	x20, x19, [sp, #128]
 930:	ldp	x22, x21, [sp, #112]
 934:	ldp	x24, x23, [sp, #96]
 938:	ldp	x26, x25, [sp, #80]
 93c:	ldp	x28, x27, [sp, #64]
 940:	ldp	x29, x30, [sp, #48]
 944:	add	sp, sp, #0x90
 948:	ret
 94c:	adrp	x0, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 950:	adrp	x1, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 954:	adrp	x3, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 958:	add	x0, x0, #0x0
 95c:	add	x1, x1, #0x0
 960:	add	x3, x3, #0x0
 964:	mov	w2, #0x69                  	// #105
 968:	bl	0 <__assert_fail>
 96c:	adrp	x0, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 970:	adrp	x1, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 974:	adrp	x3, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 978:	add	x0, x0, #0x0
 97c:	add	x1, x1, #0x0
 980:	add	x3, x3, #0x0
 984:	mov	w2, #0x2d                  	// #45
 988:	bl	0 <__assert_fail>

000000000000098c <_ZN4llvm15RandomIRBuilder7newSinkERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEEPNS_5ValueE>:
 98c:	sub	sp, sp, #0xb0
 990:	stp	x29, x30, [sp, #96]
 994:	str	x25, [sp, #112]
 998:	stp	x24, x23, [sp, #128]
 99c:	stp	x22, x21, [sp, #144]
 9a0:	stp	x20, x19, [sp, #160]
 9a4:	add	x29, sp, #0x60
 9a8:	adrp	x8, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 9ac:	adrp	x9, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 9b0:	adrp	x10, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 9b4:	adrp	x11, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 9b8:	mov	x19, x4
 9bc:	str	x4, [sp, #8]
 9c0:	add	x8, x8, #0x0
 9c4:	add	x9, x9, #0x0
 9c8:	add	x10, x10, #0x0
 9cc:	add	x11, x11, #0x0
 9d0:	add	x4, sp, #0x8
 9d4:	add	x6, sp, #0x20
 9d8:	mov	w5, #0x1                   	// #1
 9dc:	mov	x20, x3
 9e0:	mov	x21, x2
 9e4:	mov	x23, x1
 9e8:	mov	x24, x0
 9ec:	stp	x9, x8, [sp, #48]
 9f0:	stp	x11, x10, [sp, #80]
 9f4:	add	x25, sp, #0x20
 9f8:	bl	678 <_ZN4llvm15RandomIRBuilder11findPointerERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEENS3_IPNS_5ValueEEENS_8fuzzerop10SourcePredE>
 9fc:	ldr	x8, [sp, #80]
 a00:	mov	x22, x0
 a04:	cbz	x8, a18 <_ZN4llvm15RandomIRBuilder7newSinkERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEEPNS_5ValueE+0x8c>
 a08:	add	x0, x25, #0x20
 a0c:	mov	w2, #0x3                   	// #3
 a10:	mov	x1, x0
 a14:	blr	x8
 a18:	ldr	x8, [sp, #48]
 a1c:	cbz	x8, a30 <_ZN4llvm15RandomIRBuilder7newSinkERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEEPNS_5ValueE+0xa4>
 a20:	add	x0, sp, #0x20
 a24:	add	x1, sp, #0x20
 a28:	mov	w2, #0x3                   	// #3
 a2c:	blr	x8
 a30:	cbnz	x22, aac <_ZN4llvm15RandomIRBuilder7newSinkERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEEPNS_5ValueE+0x120>
 a34:	adrp	x8, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 a38:	ldr	d0, [x8]
 a3c:	add	x0, sp, #0x8
 a40:	add	x2, sp, #0x8
 a44:	mov	x1, x24
 a48:	str	d0, [sp, #8]
 a4c:	bl	0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 a50:	cbz	w0, aec <_ZN4llvm15RandomIRBuilder7newSinkERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEEPNS_5ValueE+0x160>
 a54:	mov	w0, #0x40                  	// #64
 a58:	mov	w1, #0x1                   	// #1
 a5c:	bl	0 <_ZN4llvm4UsernwEmj>
 a60:	ldr	x24, [x19]
 a64:	adrp	x8, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 a68:	add	x8, x8, #0x0
 a6c:	mov	x22, x0
 a70:	stp	x8, xzr, [sp, #8]
 a74:	mov	w8, #0x103                 	// #259
 a78:	mov	x0, x23
 a7c:	strh	w8, [sp, #24]
 a80:	bl	0 <_ZNK4llvm10BasicBlock19getFirstInsertionPtEv>
 a84:	ldrb	w8, [x0]
 a88:	tbnz	w8, #2, b30 <_ZN4llvm15RandomIRBuilder7newSinkERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEEPNS_5ValueE+0x1a4>
 a8c:	sub	x8, x0, #0x18
 a90:	cmp	x0, #0x0
 a94:	csel	x4, xzr, x8, eq  // eq = none
 a98:	add	x3, sp, #0x8
 a9c:	mov	x0, x22
 aa0:	mov	x1, x24
 aa4:	mov	w2, wzr
 aa8:	bl	0 <_ZN4llvm10AllocaInstC1EPNS_4TypeEjRKNS_5TwineEPNS_11InstructionE>
 aac:	mov	w0, #0x40                  	// #64
 ab0:	mov	w1, #0x2                   	// #2
 ab4:	bl	0 <_ZN4llvm4UsernwEmj>
 ab8:	cbz	x20, b10 <_ZN4llvm15RandomIRBuilder7newSinkERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEEPNS_5ValueE+0x184>
 abc:	add	x8, x21, x20, lsl #3
 ac0:	ldur	x3, [x8, #-8]
 ac4:	mov	x1, x19
 ac8:	mov	x2, x22
 acc:	bl	0 <_ZN4llvm9StoreInstC1EPNS_5ValueES2_PNS_11InstructionE>
 ad0:	ldp	x20, x19, [sp, #160]
 ad4:	ldp	x22, x21, [sp, #144]
 ad8:	ldp	x24, x23, [sp, #128]
 adc:	ldr	x25, [sp, #112]
 ae0:	ldp	x29, x30, [sp, #96]
 ae4:	add	sp, sp, #0xb0
 ae8:	ret
 aec:	ldr	x0, [x19]
 af0:	mov	w1, wzr
 af4:	bl	0 <_ZN4llvm11PointerType3getEPNS_4TypeEj>
 af8:	bl	0 <_ZN4llvm10UndefValue3getEPNS_4TypeE>
 afc:	mov	x22, x0
 b00:	mov	w0, #0x40                  	// #64
 b04:	mov	w1, #0x2                   	// #2
 b08:	bl	0 <_ZN4llvm4UsernwEmj>
 b0c:	cbnz	x20, abc <_ZN4llvm15RandomIRBuilder7newSinkERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEEPNS_5ValueE+0x130>
 b10:	adrp	x0, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 b14:	adrp	x1, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 b18:	adrp	x3, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 b1c:	add	x0, x0, #0x0
 b20:	add	x1, x1, #0x0
 b24:	add	x3, x3, #0x0
 b28:	mov	w2, #0xa8                  	// #168
 b2c:	bl	0 <__assert_fail>
 b30:	adrp	x0, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 b34:	adrp	x1, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 b38:	adrp	x3, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 b3c:	add	x0, x0, #0x0
 b40:	add	x1, x1, #0x0
 b44:	add	x3, x3, #0x0
 b48:	mov	w2, #0x8b                  	// #139
 b4c:	bl	0 <__assert_fail>

0000000000000b50 <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZNS0_8fuzzeropL7anyTypeEvEUlS4_S6_E_E9_M_invokeERKSt9_Any_dataOS4_OS6_>:
 b50:	ldr	x8, [x2]
 b54:	ldr	x8, [x8]
 b58:	ldrb	w8, [x8, #8]
 b5c:	cmp	w8, #0x0
 b60:	cset	w0, ne  // ne = any
 b64:	ret

0000000000000b68 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzeropL7anyTypeEvEUlNS1_8ArrayRefIPNS1_5ValueEEEPKS4_E_E10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation>:
 b68:	cmp	w2, #0x1
 b6c:	b.ne	b74 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzeropL7anyTypeEvEUlNS1_8ArrayRefIPNS1_5ValueEEEPKS4_E_E10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation+0xc>  // b.any
 b70:	str	x1, [x0]
 b74:	mov	w0, wzr
 b78:	ret

0000000000000b7c <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZNS0_8fuzzeropL14matchFirstTypeEvEUlS4_S6_E_E9_M_invokeERKSt9_Any_dataOS4_OS6_>:
 b7c:	stp	x29, x30, [sp, #-16]!
 b80:	mov	x29, sp
 b84:	ldr	x8, [x1, #8]
 b88:	cbz	x8, bb0 <_ZNSt17_Function_handlerIFbN4llvm8ArrayRefIPNS0_5ValueEEEPKS2_EZNS0_8fuzzeropL14matchFirstTypeEvEUlS4_S6_E_E9_M_invokeERKSt9_Any_dataOS4_OS6_+0x34>
 b8c:	ldr	x8, [x1]
 b90:	ldr	x9, [x2]
 b94:	ldr	x8, [x8]
 b98:	ldr	x9, [x9]
 b9c:	ldr	x8, [x8]
 ba0:	cmp	x9, x8
 ba4:	cset	w0, eq  // eq = none
 ba8:	ldp	x29, x30, [sp], #16
 bac:	ret
 bb0:	adrp	x0, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 bb4:	adrp	x1, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 bb8:	adrp	x3, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 bbc:	add	x0, x0, #0x0
 bc0:	add	x1, x1, #0x0
 bc4:	add	x3, x3, #0x0
 bc8:	mov	w2, #0xc4                  	// #196
 bcc:	bl	0 <__assert_fail>

0000000000000bd0 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzeropL14matchFirstTypeEvEUlNS1_8ArrayRefIPNS1_5ValueEEEPKS4_E_E10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation>:
 bd0:	cmp	w2, #0x1
 bd4:	b.ne	bdc <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzeropL14matchFirstTypeEvEUlNS1_8ArrayRefIPNS1_5ValueEEEPKS4_E_E10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation+0xc>  // b.any
 bd8:	str	x1, [x0]
 bdc:	mov	w0, wzr
 be0:	ret

0000000000000be4 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzeropL14matchFirstTypeEvEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_>:
 be4:	stp	x29, x30, [sp, #-16]!
 be8:	mov	x29, sp
 bec:	ldr	x9, [x1, #8]
 bf0:	cbz	x9, c08 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzeropL14matchFirstTypeEvEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x24>
 bf4:	ldr	x9, [x1]
 bf8:	ldr	x9, [x9]
 bfc:	ldr	x0, [x9]
 c00:	ldp	x29, x30, [sp], #16
 c04:	b	0 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeE>
 c08:	adrp	x0, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 c0c:	adrp	x1, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 c10:	adrp	x3, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 c14:	add	x0, x0, #0x0
 c18:	add	x1, x1, #0x0
 c1c:	add	x3, x3, #0x0
 c20:	mov	w2, #0xc8                  	// #200
 c24:	bl	0 <__assert_fail>

0000000000000c28 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzeropL14matchFirstTypeEvEUlNS1_8ArrayRefIPNS1_5ValueEEENS3_IPNS1_4TypeEEEE_E10_M_managerERSt9_Any_dataRKSC_St18_Manager_operation>:
 c28:	cmp	w2, #0x1
 c2c:	b.ne	c34 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzeropL14matchFirstTypeEvEUlNS1_8ArrayRefIPNS1_5ValueEEENS3_IPNS1_4TypeEEEE_E10_M_managerERSt9_Any_dataRKSC_St18_Manager_operation+0xc>  // b.any
 c30:	str	x1, [x0]
 c34:	mov	w0, wzr
 c38:	ret

0000000000000c3c <_ZN4llvm20filter_iterator_baseIPKPNS_11InstructionEZNS_15RandomIRBuilder11findPointerERNS_10BasicBlockENS_8ArrayRefIS2_EENS8_IPNS_5ValueEEENS_8fuzzerop10SourcePredEE3$_1St26bidirectional_iterator_tagE13findNextValidEv>:
 c3c:	sub	sp, sp, #0x60
 c40:	stp	x29, x30, [sp, #16]
 c44:	str	x25, [sp, #32]
 c48:	stp	x24, x23, [sp, #48]
 c4c:	stp	x22, x21, [sp, #64]
 c50:	stp	x20, x19, [sp, #80]
 c54:	add	x29, sp, #0x10
 c58:	ldp	x8, x9, [x0]
 c5c:	cmp	x8, x9
 c60:	b.eq	d48 <_ZN4llvm20filter_iterator_baseIPKPNS_11InstructionEZNS_15RandomIRBuilder11findPointerERNS_10BasicBlockENS_8ArrayRefIS2_EENS8_IPNS_5ValueEEENS_8fuzzerop10SourcePredEE3$_1St26bidirectional_iterator_tagE13findNextValidEv+0x10c>  // b.none
 c64:	mov	w23, #0x6000                	// #24576
 c68:	mov	x19, x0
 c6c:	mov	w21, #0x1                   	// #1
 c70:	mov	w22, #0x8a7e                	// #35454
 c74:	movk	w23, #0x1, lsl #16
 c78:	b	c90 <_ZN4llvm20filter_iterator_baseIPKPNS_11InstructionEZNS_15RandomIRBuilder11findPointerERNS_10BasicBlockENS_8ArrayRefIS2_EENS8_IPNS_5ValueEEENS_8fuzzerop10SourcePredEE3$_1St26bidirectional_iterator_tagE13findNextValidEv+0x54>
 c7c:	ldp	x8, x9, [x19]
 c80:	add	x8, x8, #0x8
 c84:	cmp	x8, x9
 c88:	str	x8, [x19]
 c8c:	b.eq	d48 <_ZN4llvm20filter_iterator_baseIPKPNS_11InstructionEZNS_15RandomIRBuilder11findPointerERNS_10BasicBlockENS_8ArrayRefIS2_EENS8_IPNS_5ValueEEENS_8fuzzerop10SourcePredEE3$_1St26bidirectional_iterator_tagE13findNextValidEv+0x10c>  // b.none
 c90:	ldr	x8, [x8]
 c94:	ldrb	w9, [x8, #16]
 c98:	sub	w9, w9, #0x19
 c9c:	cmp	w9, #0xb
 ca0:	b.cc	c7c <_ZN4llvm20filter_iterator_baseIPKPNS_11InstructionEZNS_15RandomIRBuilder11findPointerERNS_10BasicBlockENS_8ArrayRefIS2_EENS8_IPNS_5ValueEEENS_8fuzzerop10SourcePredEE3$_1St26bidirectional_iterator_tagE13findNextValidEv+0x40>  // b.lo, b.ul, b.last
 ca4:	ldr	x20, [x8]
 ca8:	cbz	x20, d64 <_ZN4llvm20filter_iterator_baseIPKPNS_11InstructionEZNS_15RandomIRBuilder11findPointerERNS_10BasicBlockENS_8ArrayRefIS2_EENS8_IPNS_5ValueEEENS_8fuzzerop10SourcePredEE3$_1St26bidirectional_iterator_tagE13findNextValidEv+0x128>
 cac:	ldrb	w8, [x20, #8]
 cb0:	cmp	w8, #0xf
 cb4:	b.ne	c7c <_ZN4llvm20filter_iterator_baseIPKPNS_11InstructionEZNS_15RandomIRBuilder11findPointerERNS_10BasicBlockENS_8ArrayRefIS2_EENS8_IPNS_5ValueEEENS_8fuzzerop10SourcePredEE3$_1St26bidirectional_iterator_tagE13findNextValidEv+0x40>  // b.any
 cb8:	ldr	x0, [x20, #24]
 cbc:	ldr	w8, [x0, #8]
 cc0:	and	w9, w8, #0xff
 cc4:	cmp	w9, #0x10
 cc8:	b.hi	c7c <_ZN4llvm20filter_iterator_baseIPKPNS_11InstructionEZNS_15RandomIRBuilder11findPointerERNS_10BasicBlockENS_8ArrayRefIS2_EENS8_IPNS_5ValueEEENS_8fuzzerop10SourcePredEE3$_1St26bidirectional_iterator_tagE13findNextValidEv+0x40>  // b.pmore
 ccc:	lsl	w9, w21, w9
 cd0:	tst	w9, w22
 cd4:	b.eq	d20 <_ZN4llvm20filter_iterator_baseIPKPNS_11InstructionEZNS_15RandomIRBuilder11findPointerERNS_10BasicBlockENS_8ArrayRefIS2_EENS8_IPNS_5ValueEEENS_8fuzzerop10SourcePredEE3$_1St26bidirectional_iterator_tagE13findNextValidEv+0xe4>  // b.none
 cd8:	ands	w8, w8, #0xff
 cdc:	b.eq	c7c <_ZN4llvm20filter_iterator_baseIPKPNS_11InstructionEZNS_15RandomIRBuilder11findPointerERNS_10BasicBlockENS_8ArrayRefIS2_EENS8_IPNS_5ValueEEENS_8fuzzerop10SourcePredEE3$_1St26bidirectional_iterator_tagE13findNextValidEv+0x40>  // b.none
 ce0:	cmp	w8, #0xc
 ce4:	b.eq	c7c <_ZN4llvm20filter_iterator_baseIPKPNS_11InstructionEZNS_15RandomIRBuilder11findPointerERNS_10BasicBlockENS_8ArrayRefIS2_EENS8_IPNS_5ValueEEENS_8fuzzerop10SourcePredEE3$_1St26bidirectional_iterator_tagE13findNextValidEv+0x40>  // b.none
 ce8:	ldp	x8, x20, [x19, #16]
 cec:	ldp	x24, x25, [x8]
 cf0:	bl	0 <_ZN4llvm10UndefValue3getEPNS_4TypeE>
 cf4:	stp	x24, x25, [sp]
 cf8:	str	x0, [x29, #24]
 cfc:	ldr	x8, [x20, #16]
 d00:	cbz	x8, d84 <_ZN4llvm20filter_iterator_baseIPKPNS_11InstructionEZNS_15RandomIRBuilder11findPointerERNS_10BasicBlockENS_8ArrayRefIS2_EENS8_IPNS_5ValueEEENS_8fuzzerop10SourcePredEE3$_1St26bidirectional_iterator_tagE13findNextValidEv+0x148>
 d04:	ldr	x8, [x20, #24]
 d08:	mov	x1, sp
 d0c:	add	x2, x29, #0x18
 d10:	mov	x0, x20
 d14:	blr	x8
 d18:	tbz	w0, #0, c7c <_ZN4llvm20filter_iterator_baseIPKPNS_11InstructionEZNS_15RandomIRBuilder11findPointerERNS_10BasicBlockENS_8ArrayRefIS2_EENS8_IPNS_5ValueEEENS_8fuzzerop10SourcePredEE3$_1St26bidirectional_iterator_tagE13findNextValidEv+0x40>
 d1c:	b	d48 <_ZN4llvm20filter_iterator_baseIPKPNS_11InstructionEZNS_15RandomIRBuilder11findPointerERNS_10BasicBlockENS_8ArrayRefIS2_EENS8_IPNS_5ValueEEENS_8fuzzerop10SourcePredEE3$_1St26bidirectional_iterator_tagE13findNextValidEv+0x10c>
 d20:	tst	w9, w23
 d24:	b.eq	c7c <_ZN4llvm20filter_iterator_baseIPKPNS_11InstructionEZNS_15RandomIRBuilder11findPointerERNS_10BasicBlockENS_8ArrayRefIS2_EENS8_IPNS_5ValueEEENS_8fuzzerop10SourcePredEE3$_1St26bidirectional_iterator_tagE13findNextValidEv+0x40>  // b.none
 d28:	mov	x1, xzr
 d2c:	bl	0 <_ZNK4llvm4Type18isSizedDerivedTypeEPNS_15SmallPtrSetImplIPS0_EE>
 d30:	tbz	w0, #0, c7c <_ZN4llvm20filter_iterator_baseIPKPNS_11InstructionEZNS_15RandomIRBuilder11findPointerERNS_10BasicBlockENS_8ArrayRefIS2_EENS8_IPNS_5ValueEEENS_8fuzzerop10SourcePredEE3$_1St26bidirectional_iterator_tagE13findNextValidEv+0x40>
 d34:	ldr	x0, [x20, #24]
 d38:	ldr	w8, [x0, #8]
 d3c:	ands	w8, w8, #0xff
 d40:	b.ne	ce0 <_ZN4llvm20filter_iterator_baseIPKPNS_11InstructionEZNS_15RandomIRBuilder11findPointerERNS_10BasicBlockENS_8ArrayRefIS2_EENS8_IPNS_5ValueEEENS_8fuzzerop10SourcePredEE3$_1St26bidirectional_iterator_tagE13findNextValidEv+0xa4>  // b.any
 d44:	b	c7c <_ZN4llvm20filter_iterator_baseIPKPNS_11InstructionEZNS_15RandomIRBuilder11findPointerERNS_10BasicBlockENS_8ArrayRefIS2_EENS8_IPNS_5ValueEEENS_8fuzzerop10SourcePredEE3$_1St26bidirectional_iterator_tagE13findNextValidEv+0x40>
 d48:	ldp	x20, x19, [sp, #80]
 d4c:	ldp	x22, x21, [sp, #64]
 d50:	ldp	x24, x23, [sp, #48]
 d54:	ldr	x25, [sp, #32]
 d58:	ldp	x29, x30, [sp, #16]
 d5c:	add	sp, sp, #0x60
 d60:	ret
 d64:	adrp	x0, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 d68:	adrp	x1, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 d6c:	adrp	x3, 0 <_ZN4llvm15RandomIRBuilder18findOrCreateSourceERNS_10BasicBlockENS_8ArrayRefIPNS_11InstructionEEE>
 d70:	add	x0, x0, #0x0
 d74:	add	x1, x1, #0x0
 d78:	add	x3, x3, #0x0
 d7c:	mov	w2, #0x69                  	// #105
 d80:	bl	0 <__assert_fail>
 d84:	bl	0 <_ZSt25__throw_bad_function_callv>

Disassembly of section .text._ZN4llvm4User10setOperandEjPNS_5ValueE:

0000000000000000 <_ZN4llvm4User10setOperandEjPNS_5ValueE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #20]
   c:	and	x8, x9, #0xfffffff
  10:	cmp	w8, w1
  14:	b.ls	f4 <_ZN4llvm4User10setOperandEjPNS_5ValueE+0xf4>  // b.plast
  18:	ldrb	w10, [x0, #16]
  1c:	cmp	w10, #0x10
  20:	b.hi	3c <_ZN4llvm4User10setOperandEjPNS_5ValueE+0x3c>  // b.pmore
  24:	cbz	w10, 3c <_ZN4llvm4User10setOperandEjPNS_5ValueE+0x3c>
  28:	cmp	w10, #0x3
  2c:	b.eq	3c <_ZN4llvm4User10setOperandEjPNS_5ValueE+0x3c>  // b.none
  30:	sub	w10, w10, #0x1
  34:	cmp	w10, #0x1
  38:	b.hi	134 <_ZN4llvm4User10setOperandEjPNS_5ValueE+0x134>  // b.pmore
  3c:	tbnz	w9, #30, 50 <_ZN4llvm4User10setOperandEjPNS_5ValueE+0x50>
  40:	mov	w9, #0x18                  	// #24
  44:	mneg	x8, x8, x9
  48:	add	x8, x0, x8
  4c:	b	54 <_ZN4llvm4User10setOperandEjPNS_5ValueE+0x54>
  50:	ldur	x8, [x0, #-8]
  54:	mov	w9, #0x18                  	// #24
  58:	umaddl	x9, w1, w9, x8
  5c:	ldr	x11, [x9]
  60:	mov	w10, w1
  64:	cbz	x11, 94 <_ZN4llvm4User10setOperandEjPNS_5ValueE+0x94>
  68:	mov	w11, #0x18                  	// #24
  6c:	madd	x12, x10, x11, x8
  70:	ldp	x13, x11, [x12, #8]
  74:	and	x11, x11, #0xfffffffffffffffc
  78:	str	x13, [x11]
  7c:	ldr	x12, [x12, #8]
  80:	cbz	x12, 94 <_ZN4llvm4User10setOperandEjPNS_5ValueE+0x94>
  84:	ldr	x13, [x12, #16]
  88:	and	x13, x13, #0x3
  8c:	orr	x11, x13, x11
  90:	str	x11, [x12, #16]
  94:	str	x2, [x9]
  98:	cbz	x2, ec <_ZN4llvm4User10setOperandEjPNS_5ValueE+0xec>
  9c:	ldr	x11, [x2, #8]!
  a0:	mov	w12, #0x18                  	// #24
  a4:	madd	x12, x10, x12, x8
  a8:	str	x11, [x12, #8]!
  ac:	cbz	x11, c8 <_ZN4llvm4User10setOperandEjPNS_5ValueE+0xc8>
  b0:	tst	x12, #0x3
  b4:	b.ne	114 <_ZN4llvm4User10setOperandEjPNS_5ValueE+0x114>  // b.any
  b8:	ldr	x13, [x11, #16]
  bc:	and	x13, x13, #0x3
  c0:	orr	x12, x13, x12
  c4:	str	x12, [x11, #16]
  c8:	tst	x2, #0x3
  cc:	b.ne	114 <_ZN4llvm4User10setOperandEjPNS_5ValueE+0x114>  // b.any
  d0:	mov	w11, #0x18                  	// #24
  d4:	madd	x8, x10, x11, x8
  d8:	ldr	x10, [x8, #16]!
  dc:	and	x10, x10, #0x3
  e0:	orr	x10, x10, x2
  e4:	str	x10, [x8]
  e8:	str	x9, [x2]
  ec:	ldp	x29, x30, [sp], #16
  f0:	ret
  f4:	adrp	x0, 0 <_ZN4llvm4User10setOperandEjPNS_5ValueE>
  f8:	adrp	x1, 0 <_ZN4llvm4User10setOperandEjPNS_5ValueE>
  fc:	adrp	x3, 0 <_ZN4llvm4User10setOperandEjPNS_5ValueE>
 100:	add	x0, x0, #0x0
 104:	add	x1, x1, #0x0
 108:	add	x3, x3, #0x0
 10c:	mov	w2, #0xaf                  	// #175
 110:	bl	0 <__assert_fail>
 114:	adrp	x0, 0 <_ZN4llvm4User10setOperandEjPNS_5ValueE>
 118:	adrp	x1, 0 <_ZN4llvm4User10setOperandEjPNS_5ValueE>
 11c:	adrp	x3, 0 <_ZN4llvm4User10setOperandEjPNS_5ValueE>
 120:	add	x0, x0, #0x0
 124:	add	x1, x1, #0x0
 128:	add	x3, x3, #0x0
 12c:	mov	w2, #0xb3                  	// #179
 130:	bl	0 <__assert_fail>
 134:	adrp	x0, 0 <_ZN4llvm4User10setOperandEjPNS_5ValueE>
 138:	adrp	x1, 0 <_ZN4llvm4User10setOperandEjPNS_5ValueE>
 13c:	adrp	x3, 0 <_ZN4llvm4User10setOperandEjPNS_5ValueE>
 140:	add	x0, x0, #0x0
 144:	add	x1, x1, #0x0
 148:	add	x3, x3, #0x0
 14c:	mov	w2, #0xb2                  	// #178
 150:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8fuzzerop10SourcePredC2ESt8functionIFbNS_8ArrayRefIPNS_5ValueEEEPKS4_EENS_8NoneTypeE:

0000000000000000 <_ZN4llvm8fuzzerop10SourcePredC2ESt8functionIFbNS_8ArrayRefIPNS_5ValueEEEPKS4_EENS_8NoneTypeE>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #80]
   8:	stp	x22, x21, [sp, #96]
   c:	stp	x20, x19, [sp, #112]
  10:	add	x29, sp, #0x50
  14:	str	xzr, [x0, #16]
  18:	ldr	x8, [x1, #16]
  1c:	mov	x20, x1
  20:	mov	x19, x0
  24:	cbz	x8, 40 <_ZN4llvm8fuzzerop10SourcePredC2ESt8functionIFbNS_8ArrayRefIPNS_5ValueEEEPKS4_EENS_8NoneTypeE+0x40>
  28:	mov	w2, #0x2                   	// #2
  2c:	mov	x0, x19
  30:	mov	x1, x20
  34:	blr	x8
  38:	ldr	q0, [x20, #16]
  3c:	str	q0, [x19, #16]
  40:	str	xzr, [x19, #48]
  44:	str	xzr, [sp, #16]
  48:	ldr	x8, [x20, #16]
  4c:	add	x21, x19, #0x20
  50:	cbz	x8, 70 <_ZN4llvm8fuzzerop10SourcePredC2ESt8functionIFbNS_8ArrayRefIPNS_5ValueEEEPKS4_EENS_8NoneTypeE+0x70>
  54:	mov	x0, sp
  58:	mov	w2, #0x2                   	// #2
  5c:	mov	x1, x20
  60:	blr	x8
  64:	ldp	x20, x22, [x20, #16]
  68:	stp	x20, x22, [sp, #16]
  6c:	b	74 <_ZN4llvm8fuzzerop10SourcePredC2ESt8functionIFbNS_8ArrayRefIPNS_5ValueEEEPKS4_EENS_8NoneTypeE+0x74>
  70:	mov	x20, xzr
  74:	mov	w0, #0x20                  	// #32
  78:	str	xzr, [sp, #16]
  7c:	bl	0 <_Znwm>
  80:	str	x0, [sp, #32]
  84:	ldr	q0, [sp]
  88:	ldr	q1, [sp, #32]
  8c:	stp	x20, x22, [x0, #16]
  90:	adrp	x8, 0 <_ZN4llvm8fuzzerop10SourcePredC2ESt8functionIFbNS_8ArrayRefIPNS_5ValueEEEPKS4_EENS_8NoneTypeE>
  94:	str	q0, [x0]
  98:	stur	q1, [x29, #-16]
  9c:	ldr	q0, [x21]
  a0:	adrp	x9, 0 <_ZN4llvm8fuzzerop10SourcePredC2ESt8functionIFbNS_8ArrayRefIPNS_5ValueEEEPKS4_EENS_8NoneTypeE>
  a4:	add	x8, x8, #0x0
  a8:	add	x9, x9, #0x0
  ac:	str	q0, [sp, #32]
  b0:	str	q1, [x21]
  b4:	ldr	q0, [x19, #48]
  b8:	stp	x8, x9, [x19, #48]
  bc:	fmov	x8, d0
  c0:	str	q0, [sp, #48]
  c4:	cbz	x8, f0 <_ZN4llvm8fuzzerop10SourcePredC2ESt8functionIFbNS_8ArrayRefIPNS_5ValueEEEPKS4_EENS_8NoneTypeE+0xf0>
  c8:	add	x0, sp, #0x20
  cc:	add	x1, sp, #0x20
  d0:	mov	w2, #0x3                   	// #3
  d4:	blr	x8
  d8:	ldr	x8, [sp, #16]
  dc:	cbz	x8, f0 <_ZN4llvm8fuzzerop10SourcePredC2ESt8functionIFbNS_8ArrayRefIPNS_5ValueEEEPKS4_EENS_8NoneTypeE+0xf0>
  e0:	mov	x0, sp
  e4:	mov	x1, sp
  e8:	mov	w2, #0x3                   	// #3
  ec:	blr	x8
  f0:	ldp	x20, x19, [sp, #112]
  f4:	ldp	x22, x21, [sp, #96]
  f8:	ldp	x29, x30, [sp, #80]
  fc:	add	sp, sp, #0x80
 100:	ret

Disassembly of section .text._ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzerop10SourcePredC1ESt8functionIFbS9_PKS7_EENS1_8NoneTypeEEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_:

0000000000000000 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzerop10SourcePredC1ESt8functionIFbS9_PKS7_EENS1_8NoneTypeEEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #16]
   8:	str	x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	add	x29, sp, #0x10
  1c:	mov	x19, x8
  20:	ldr	x20, [x0]
  24:	ldp	x22, x8, [x2]
  28:	ldp	x23, x24, [x1]
  2c:	stp	xzr, xzr, [x19]
  30:	str	xzr, [x19, #16]
  34:	cbz	x8, bc <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzerop10SourcePredC1ESt8functionIFbS9_PKS7_EENS1_8NoneTypeEEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_+0xbc>
  38:	lsl	x25, x8, #3
  3c:	b	4c <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzerop10SourcePredC1ESt8functionIFbS9_PKS7_EENS1_8NoneTypeEEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x4c>
  40:	subs	x25, x25, #0x8
  44:	add	x22, x22, #0x8
  48:	b.eq	90 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzerop10SourcePredC1ESt8functionIFbS9_PKS7_EENS1_8NoneTypeEEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x90>  // b.none
  4c:	ldr	x21, [x22]
  50:	mov	x0, x21
  54:	bl	0 <_ZN4llvm10UndefValue3getEPNS_4TypeE>
  58:	stp	x23, x24, [sp]
  5c:	str	x0, [x29, #24]
  60:	ldr	x8, [x20, #16]
  64:	cbz	x8, b8 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzerop10SourcePredC1ESt8functionIFbS9_PKS7_EENS1_8NoneTypeEEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_+0xb8>
  68:	ldr	x8, [x20, #24]
  6c:	mov	x1, sp
  70:	add	x2, x29, #0x18
  74:	mov	x0, x20
  78:	blr	x8
  7c:	tbz	w0, #0, 40 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzerop10SourcePredC1ESt8functionIFbS9_PKS7_EENS1_8NoneTypeEEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x40>
  80:	mov	x0, x21
  84:	mov	x1, x19
  88:	bl	0 <_ZN4llvm8fuzzerop21makeConstantsWithTypeEPNS_4TypeERSt6vectorIPNS_8ConstantESaIS5_EE>
  8c:	b	40 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzerop10SourcePredC1ESt8functionIFbS9_PKS7_EENS1_8NoneTypeEEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_+0x40>
  90:	ldp	x8, x9, [x19]
  94:	cmp	x8, x9
  98:	b.eq	bc <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzerop10SourcePredC1ESt8functionIFbS9_PKS7_EENS1_8NoneTypeEEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_+0xbc>  // b.none
  9c:	ldp	x20, x19, [sp, #80]
  a0:	ldp	x22, x21, [sp, #64]
  a4:	ldp	x24, x23, [sp, #48]
  a8:	ldr	x25, [sp, #32]
  ac:	ldp	x29, x30, [sp, #16]
  b0:	add	sp, sp, #0x60
  b4:	ret
  b8:	bl	0 <_ZSt25__throw_bad_function_callv>
  bc:	adrp	x0, 0 <_ZNSt17_Function_handlerIFSt6vectorIPN4llvm8ConstantESaIS3_EENS1_8ArrayRefIPNS1_5ValueEEENS6_IPNS1_4TypeEEEEZNS1_8fuzzerop10SourcePredC1ESt8functionIFbS9_PKS7_EENS1_8NoneTypeEEUlS9_SC_E_E9_M_invokeERKSt9_Any_dataOS9_OSC_>
  c0:	add	x0, x0, #0x0
  c4:	mov	w1, #0x1                   	// #1
  c8:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>

Disassembly of section .text._ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzerop10SourcePredC1ESt8functionIFbNS1_8ArrayRefIPNS1_5ValueEEEPKS6_EENS1_8NoneTypeEEUlS8_NS5_IPNS1_4TypeEEEE_E10_M_managerERSt9_Any_dataRKSJ_St18_Manager_operation:

0000000000000000 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzerop10SourcePredC1ESt8functionIFbNS1_8ArrayRefIPNS1_5ValueEEEPKS6_EENS1_8NoneTypeEEUlS8_NS5_IPNS1_4TypeEEEE_E10_M_managerERSt9_Any_dataRKSJ_St18_Manager_operation>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cmp	w2, #0x3
  14:	mov	x19, x0
  18:	b.eq	3c <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzerop10SourcePredC1ESt8functionIFbNS1_8ArrayRefIPNS1_5ValueEEEPKS6_EENS1_8NoneTypeEEUlS8_NS5_IPNS1_4TypeEEEE_E10_M_managerERSt9_Any_dataRKSJ_St18_Manager_operation+0x3c>  // b.none
  1c:	mov	x20, x1
  20:	cmp	w2, #0x2
  24:	b.eq	68 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzerop10SourcePredC1ESt8functionIFbNS1_8ArrayRefIPNS1_5ValueEEEPKS6_EENS1_8NoneTypeEEUlS8_NS5_IPNS1_4TypeEEEE_E10_M_managerERSt9_Any_dataRKSJ_St18_Manager_operation+0x68>  // b.none
  28:	cmp	w2, #0x1
  2c:	b.ne	a0 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzerop10SourcePredC1ESt8functionIFbNS1_8ArrayRefIPNS1_5ValueEEEPKS6_EENS1_8NoneTypeEEUlS8_NS5_IPNS1_4TypeEEEE_E10_M_managerERSt9_Any_dataRKSJ_St18_Manager_operation+0xa0>  // b.any
  30:	ldr	x8, [x20]
  34:	str	x8, [x19]
  38:	b	a0 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzerop10SourcePredC1ESt8functionIFbNS1_8ArrayRefIPNS1_5ValueEEEPKS6_EENS1_8NoneTypeEEUlS8_NS5_IPNS1_4TypeEEEE_E10_M_managerERSt9_Any_dataRKSJ_St18_Manager_operation+0xa0>
  3c:	ldr	x19, [x19]
  40:	cbz	x19, a0 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzerop10SourcePredC1ESt8functionIFbNS1_8ArrayRefIPNS1_5ValueEEEPKS6_EENS1_8NoneTypeEEUlS8_NS5_IPNS1_4TypeEEEE_E10_M_managerERSt9_Any_dataRKSJ_St18_Manager_operation+0xa0>
  44:	ldr	x8, [x19, #16]
  48:	cbz	x8, 5c <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzerop10SourcePredC1ESt8functionIFbNS1_8ArrayRefIPNS1_5ValueEEEPKS6_EENS1_8NoneTypeEEUlS8_NS5_IPNS1_4TypeEEEE_E10_M_managerERSt9_Any_dataRKSJ_St18_Manager_operation+0x5c>
  4c:	mov	w2, #0x3                   	// #3
  50:	mov	x0, x19
  54:	mov	x1, x19
  58:	blr	x8
  5c:	mov	x0, x19
  60:	bl	0 <_ZdlPv>
  64:	b	a0 <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzerop10SourcePredC1ESt8functionIFbNS1_8ArrayRefIPNS1_5ValueEEEPKS6_EENS1_8NoneTypeEEUlS8_NS5_IPNS1_4TypeEEEE_E10_M_managerERSt9_Any_dataRKSJ_St18_Manager_operation+0xa0>
  68:	mov	w0, #0x20                  	// #32
  6c:	bl	0 <_Znwm>
  70:	ldr	x21, [x20]
  74:	str	xzr, [x0, #16]
  78:	mov	x20, x0
  7c:	ldr	x8, [x21, #16]
  80:	cbz	x8, 9c <_ZNSt14_Function_base13_Base_managerIZN4llvm8fuzzerop10SourcePredC1ESt8functionIFbNS1_8ArrayRefIPNS1_5ValueEEEPKS6_EENS1_8NoneTypeEEUlS8_NS5_IPNS1_4TypeEEEE_E10_M_managerERSt9_Any_dataRKSJ_St18_Manager_operation+0x9c>
  84:	mov	w2, #0x2                   	// #2
  88:	mov	x0, x20
  8c:	mov	x1, x21
  90:	blr	x8
  94:	ldr	q0, [x21, #16]
  98:	str	q0, [x20, #16]
  9c:	str	x20, [x19]
  a0:	ldp	x20, x19, [sp, #32]
  a4:	ldr	x21, [sp, #16]
  a8:	mov	w0, wzr
  ac:	ldp	x29, x30, [sp], #48
  b0:	ret

Disassembly of section .text._ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE:

0000000000000000 <_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	add	x29, sp, #0x10
  18:	ldp	x9, x8, [x2]
  1c:	mov	x19, x2
  20:	mov	x20, x1
  24:	sub	x23, x8, x9
  28:	mov	w8, #0xfffffffe            	// #-2
  2c:	cmp	x23, x8
  30:	b.hi	5c <_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE+0x5c>  // b.pmore
  34:	add	x8, x23, #0x1
  38:	mov	w9, #0xffffffff            	// #-1
  3c:	udiv	w21, w9, w8
  40:	mul	x22, x8, x21
  44:	mov	x0, x20
  48:	bl	0 <_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE>
  4c:	cmp	x0, x22
  50:	b.cs	44 <_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE+0x44>  // b.hs, b.nlast
  54:	udiv	x0, x0, x21
  58:	b	b0 <_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE+0xb0>
  5c:	mov	w8, #0xffffffff            	// #-1
  60:	cmp	x23, x8
  64:	b.ne	74 <_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE+0x74>  // b.any
  68:	mov	x0, x20
  6c:	bl	0 <_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE>
  70:	b	b0 <_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE+0xb0>
  74:	mov	x21, x0
  78:	lsr	x24, x23, #32
  7c:	mov	x2, sp
  80:	mov	x0, x21
  84:	mov	x1, x20
  88:	stp	xzr, x24, [sp]
  8c:	bl	0 <_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE>
  90:	mov	x22, x0
  94:	mov	x0, x20
  98:	bl	0 <_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE>
  9c:	adds	x0, x0, x22, lsl #32
  a0:	cset	w8, cs  // cs = hs, nlast
  a4:	cmp	x0, x23
  a8:	b.hi	7c <_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE+0x7c>  // b.pmore
  ac:	tbnz	w8, #0, 7c <_ZNSt24uniform_int_distributionImEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEmRT_RKNS0_10param_typeE+0x7c>
  b0:	ldr	x8, [x19]
  b4:	ldp	x20, x19, [sp, #64]
  b8:	ldp	x22, x21, [sp, #48]
  bc:	ldp	x24, x23, [sp, #32]
  c0:	ldp	x29, x30, [sp, #16]
  c4:	add	x0, x8, x0
  c8:	add	sp, sp, #0x50
  cc:	ret

Disassembly of section .text._ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv:

0000000000000000 <_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv>:
   0:	ldr	x8, [x0, #4992]
   4:	cmp	x8, #0x270
   8:	b.cc	15c <_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv+0x15c>  // b.lo, b.ul, b.last
   c:	ld1r	{v0.2d}, [x0]
  10:	mov	x9, #0xffffffff80000000    	// #-2147483648
  14:	dup	v1.2d, x9
  18:	mov	w9, #0xb0df                	// #45279
  1c:	mov	w10, #0x7ffffffe            	// #2147483646
  20:	mov	w11, #0x1                   	// #1
  24:	movk	w9, #0x9908, lsl #16
  28:	mov	x8, xzr
  2c:	dup	v2.2d, x10
  30:	dup	v3.2d, x11
  34:	dup	v4.2d, x9
  38:	add	x9, x0, x8
  3c:	mov	v5.16b, v0.16b
  40:	ldur	q0, [x9, #8]
  44:	add	x10, x9, #0xc68
  48:	ldr	q6, [x10]
  4c:	add	x8, x8, #0x10
  50:	ext	v5.16b, v5.16b, v0.16b, #8
  54:	and	v7.16b, v0.16b, v2.16b
  58:	and	v5.16b, v5.16b, v1.16b
  5c:	orr	v5.16b, v7.16b, v5.16b
  60:	ushr	v5.2d, v5.2d, #1
  64:	eor	v5.16b, v5.16b, v6.16b
  68:	and	v6.16b, v0.16b, v3.16b
  6c:	cmeq	v6.2d, v6.2d, #0
  70:	bic	v6.16b, v4.16b, v6.16b
  74:	eor	v5.16b, v5.16b, v6.16b
  78:	cmp	x8, #0x710
  7c:	str	q5, [x9]
  80:	b.ne	38 <_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv+0x38>  // b.any
  84:	ldr	x10, [x0, #1816]
  88:	ldr	x11, [x0, #4984]
  8c:	mov	x12, #0xffffffff80000000    	// #-2147483648
  90:	mov	x9, v0.d[1]
  94:	dup	v0.2d, x12
  98:	mov	w12, #0x7ffffffe            	// #2147483646
  9c:	and	x9, x9, #0xffffffff80000000
  a0:	dup	v1.2d, x12
  a4:	and	x12, x10, #0x7ffffffe
  a8:	orr	x9, x12, x9
  ac:	eor	x11, x11, x9, lsr #1
  b0:	mov	w9, #0xb0df                	// #45279
  b4:	movk	w9, #0x9908, lsl #16
  b8:	dup	v3.2d, x10
  bc:	sbfx	x10, x10, #0, #1
  c0:	and	x10, x10, x9
  c4:	eor	x10, x11, x10
  c8:	mov	w11, #0x1                   	// #1
  cc:	mov	x8, xzr
  d0:	dup	v2.2d, x11
  d4:	str	x10, [x0, #1808]
  d8:	add	x10, x0, x8
  dc:	ldr	q4, [x10, #1824]
  e0:	dup	v5.2d, x9
  e4:	add	x8, x8, #0x10
  e8:	cmp	x8, #0xc60
  ec:	ext	v3.16b, v3.16b, v4.16b, #8
  f0:	and	v6.16b, v4.16b, v1.16b
  f4:	and	v3.16b, v3.16b, v0.16b
  f8:	orr	v3.16b, v6.16b, v3.16b
  fc:	and	v6.16b, v4.16b, v2.16b
 100:	cmeq	v6.2d, v6.2d, #0
 104:	bic	v5.16b, v5.16b, v6.16b
 108:	ldr	q6, [x10]
 10c:	ushr	v3.2d, v3.2d, #1
 110:	add	x10, x10, #0x718
 114:	eor	v3.16b, v3.16b, v6.16b
 118:	eor	v3.16b, v3.16b, v5.16b
 11c:	str	q3, [x10]
 120:	mov	v3.16b, v4.16b
 124:	b.ne	d8 <_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEclEv+0xd8>  // b.any
 128:	ldr	x10, [x0, #4984]
 12c:	ldr	x11, [x0]
 130:	ldr	x12, [x0, #3168]
 134:	mov	x8, xzr
 138:	and	x10, x10, #0xffffffff80000000
 13c:	and	x13, x11, #0x7ffffffe
 140:	sbfx	x11, x11, #0, #1
 144:	orr	x10, x13, x10
 148:	and	x9, x11, x9
 14c:	eor	x10, x12, x10, lsr #1
 150:	eor	x9, x10, x9
 154:	str	x9, [x0, #4984]
 158:	str	xzr, [x0, #4992]
 15c:	add	x9, x8, #0x1
 160:	str	x9, [x0, #4992]
 164:	ldr	x8, [x0, x8, lsl #3]
 168:	mov	w9, #0x5680                	// #22144
 16c:	movk	w9, #0x9d2c, lsl #16
 170:	ubfx	x10, x8, #11, #32
 174:	eor	x8, x10, x8
 178:	lsl	w10, w8, #7
 17c:	and	x9, x10, x9
 180:	eor	x8, x9, x8
 184:	lsl	w9, w8, #15
 188:	mov	w10, #0xefc60000            	// #-272236544
 18c:	and	x9, x9, x10
 190:	eor	x8, x9, x8
 194:	eor	x0, x8, x8, lsr #18
 198:	ret

Disassembly of section .text._ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEiRT_RKNS0_10param_typeE:

0000000000000000 <_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEiRT_RKNS0_10param_typeE>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	add	x29, sp, #0x10
  18:	ldpsw	x9, x8, [x2]
  1c:	mov	x19, x2
  20:	mov	x20, x1
  24:	sub	x23, x8, x9
  28:	mov	w8, #0xfffffffe            	// #-2
  2c:	cmp	x23, x8
  30:	b.hi	5c <_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEiRT_RKNS0_10param_typeE+0x5c>  // b.pmore
  34:	add	x8, x23, #0x1
  38:	mov	w9, #0xffffffff            	// #-1
  3c:	udiv	w21, w9, w8
  40:	mul	x22, x8, x21
  44:	mov	x0, x20
  48:	bl	0 <_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEiRT_RKNS0_10param_typeE>
  4c:	cmp	x0, x22
  50:	b.cs	44 <_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEiRT_RKNS0_10param_typeE+0x44>  // b.hs, b.nlast
  54:	udiv	x0, x0, x21
  58:	b	b0 <_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEiRT_RKNS0_10param_typeE+0xb0>
  5c:	mov	w8, #0xffffffff            	// #-1
  60:	cmp	x23, x8
  64:	b.ne	74 <_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEiRT_RKNS0_10param_typeE+0x74>  // b.any
  68:	mov	x0, x20
  6c:	bl	0 <_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEiRT_RKNS0_10param_typeE>
  70:	b	b0 <_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEiRT_RKNS0_10param_typeE+0xb0>
  74:	mov	x21, x0
  78:	lsr	x24, x23, #32
  7c:	add	x2, sp, #0x8
  80:	mov	x0, x21
  84:	mov	x1, x20
  88:	stp	wzr, w24, [sp, #8]
  8c:	bl	0 <_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEiRT_RKNS0_10param_typeE>
  90:	mov	w22, w0
  94:	mov	x0, x20
  98:	bl	0 <_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEiRT_RKNS0_10param_typeE>
  9c:	adds	x0, x0, x22, lsl #32
  a0:	cset	w8, cs  // cs = hs, nlast
  a4:	cmp	x0, x23
  a8:	b.hi	7c <_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEiRT_RKNS0_10param_typeE+0x7c>  // b.pmore
  ac:	tbnz	w8, #0, 7c <_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2636928640ELm15ELm4022730752ELm18ELm1812433253EEEEiRT_RKNS0_10param_typeE+0x7c>
  b0:	ldr	w8, [x19]
  b4:	ldp	x20, x19, [sp, #64]
  b8:	ldp	x22, x21, [sp, #48]
  bc:	ldp	x24, x23, [sp, #32]
  c0:	ldp	x29, x30, [sp, #16]
  c4:	add	w0, w8, w0
  c8:	add	sp, sp, #0x50
  cc:	ret
