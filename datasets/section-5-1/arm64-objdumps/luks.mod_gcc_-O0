
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//luks.mod_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x1268>:
       0:	sub	sp, sp, #0x10
       4:	strh	w0, [sp, #14]
       8:	ldrh	w0, [sp, #14]
       c:	lsl	w0, w0, #8
      10:	sxth	w1, w0
      14:	ldrh	w0, [sp, #14]
      18:	lsr	w0, w0, #8
      1c:	and	w0, w0, #0xffff
      20:	sxth	w0, w0
      24:	orr	w0, w1, w0
      28:	sxth	w0, w0
      2c:	and	w0, w0, #0xffff
      30:	add	sp, sp, #0x10
      34:	ret
      38:	sub	sp, sp, #0x10
      3c:	str	w0, [sp, #12]
      40:	ldr	w0, [sp, #12]
      44:	rev	w0, w0
      48:	add	sp, sp, #0x10
      4c:	ret
      50:	stp	x29, x30, [sp, #-32]!
      54:	mov	x29, sp
      58:	str	x0, [sp, #24]
      5c:	ldr	x0, [sp, #24]
      60:	bl	0 <grub_free>
      64:	nop
      68:	ldp	x29, x30, [sp], #32
      6c:	ret
      70:	stp	x29, x30, [sp, #-32]!
      74:	mov	x29, sp
      78:	str	x0, [sp, #24]
      7c:	ldr	x1, [sp, #24]
      80:	adrp	x0, 0 <grub_mod_init-0x1268>
      84:	add	x0, x0, #0x0
      88:	ldr	x0, [x0]
      8c:	bl	0 <grub_list_push>
      90:	nop
      94:	ldp	x29, x30, [sp], #32
      98:	ret
      9c:	nop
	...
      a8:	stp	x29, x30, [sp, #-32]!
      ac:	mov	x29, sp
      b0:	str	x0, [sp, #24]
      b4:	ldr	x0, [sp, #24]
      b8:	bl	0 <grub_list_remove>
      bc:	nop
      c0:	ldp	x29, x30, [sp], #32
      c4:	ret
      c8:	stp	x29, x30, [sp, #-48]!
      cc:	mov	x29, sp
      d0:	str	x0, [sp, #40]
      d4:	str	x1, [sp, #32]
      d8:	str	x2, [sp, #24]
      dc:	ldr	x2, [sp, #24]
      e0:	ldr	x1, [sp, #32]
      e4:	ldr	x0, [sp, #40]
      e8:	bl	0 <grub_memmove>
      ec:	ldp	x29, x30, [sp], #48
      f0:	ret
      f4:	sub	sp, sp, #0x10
      f8:	str	w0, [sp, #12]
      fc:	ldr	w0, [sp, #12]
     100:	cmp	w0, #0x40
     104:	b.le	120 <grub_mod_init-0x1148>
     108:	ldr	w0, [sp, #12]
     10c:	cmp	w0, #0x5a
     110:	b.gt	120 <grub_mod_init-0x1148>
     114:	ldr	w0, [sp, #12]
     118:	add	w0, w0, #0x20
     11c:	b	124 <grub_mod_init-0x1144>
     120:	ldr	w0, [sp, #12]
     124:	add	sp, sp, #0x10
     128:	ret
     12c:	stp	x29, x30, [sp, #-48]!
     130:	mov	x29, sp
     134:	str	x19, [sp, #16]
     138:	str	x0, [sp, #40]
     13c:	str	x1, [sp, #32]
     140:	b	180 <grub_mod_init-0x10e8>
     144:	ldr	x0, [sp, #40]
     148:	ldrb	w0, [x0]
     14c:	bl	f4 <grub_mod_init-0x1174>
     150:	mov	w19, w0
     154:	ldr	x0, [sp, #32]
     158:	ldrb	w0, [x0]
     15c:	bl	f4 <grub_mod_init-0x1174>
     160:	cmp	w19, w0
     164:	b.ne	1a4 <grub_mod_init-0x10c4>  // b.any
     168:	ldr	x0, [sp, #40]
     16c:	add	x0, x0, #0x1
     170:	str	x0, [sp, #40]
     174:	ldr	x0, [sp, #32]
     178:	add	x0, x0, #0x1
     17c:	str	x0, [sp, #32]
     180:	ldr	x0, [sp, #40]
     184:	ldrb	w0, [x0]
     188:	cmp	w0, #0x0
     18c:	b.eq	1a8 <grub_mod_init-0x10c0>  // b.none
     190:	ldr	x0, [sp, #32]
     194:	ldrb	w0, [x0]
     198:	cmp	w0, #0x0
     19c:	b.ne	144 <grub_mod_init-0x1124>  // b.any
     1a0:	b	1a8 <grub_mod_init-0x10c0>
     1a4:	nop
     1a8:	ldr	x0, [sp, #40]
     1ac:	ldrb	w0, [x0]
     1b0:	bl	f4 <grub_mod_init-0x1174>
     1b4:	mov	w19, w0
     1b8:	ldr	x0, [sp, #32]
     1bc:	ldrb	w0, [x0]
     1c0:	bl	f4 <grub_mod_init-0x1174>
     1c4:	sub	w0, w19, w0
     1c8:	ldr	x19, [sp, #16]
     1cc:	ldp	x29, x30, [sp], #48
     1d0:	ret
     1d4:	sub	sp, sp, #0x3a0
     1d8:	stp	x29, x30, [sp]
     1dc:	mov	x29, sp
     1e0:	str	x0, [sp, #40]
     1e4:	str	x1, [sp, #32]
     1e8:	str	w2, [sp, #28]
     1ec:	str	xzr, [sp, #904]
     1f0:	str	xzr, [sp, #856]
     1f4:	str	xzr, [sp, #896]
     1f8:	str	xzr, [sp, #888]
     1fc:	str	xzr, [sp, #848]
     200:	str	xzr, [sp, #880]
     204:	mov	w0, #0x2                   	// #2
     208:	str	w0, [sp, #872]
     20c:	str	wzr, [sp, #868]
     210:	ldr	w0, [sp, #28]
     214:	cmp	w0, #0x0
     218:	b.eq	224 <grub_mod_init-0x1044>  // b.none
     21c:	mov	x0, #0x0                   	// #0
     220:	b	a78 <grub_mod_init-0x7f0>
     224:	add	x0, sp, #0xe0
     228:	mov	x4, x0
     22c:	mov	x3, #0x250                 	// #592
     230:	mov	x2, #0x0                   	// #0
     234:	mov	x1, #0x0                   	// #0
     238:	ldr	x0, [sp, #40]
     23c:	bl	0 <grub_disk_read>
     240:	str	w0, [sp, #844]
     244:	ldr	w0, [sp, #844]
     248:	cmp	w0, #0x0
     24c:	b.eq	274 <grub_mod_init-0xff4>  // b.none
     250:	ldr	w0, [sp, #844]
     254:	cmp	w0, #0xb
     258:	b.ne	26c <grub_mod_init-0xffc>  // b.any
     25c:	adrp	x0, 0 <grub_mod_init-0x1268>
     260:	add	x0, x0, #0x0
     264:	ldr	x0, [x0]
     268:	str	wzr, [x0]
     26c:	mov	x0, #0x0                   	// #0
     270:	b	a78 <grub_mod_init-0x7f0>
     274:	add	x3, sp, #0xe0
     278:	mov	x2, #0x6                   	// #6
     27c:	adrp	x0, 0 <grub_mod_init-0x1268>
     280:	add	x0, x0, #0x0
     284:	ldr	x1, [x0]
     288:	mov	x0, x3
     28c:	bl	0 <grub_memcmp>
     290:	cmp	w0, #0x0
     294:	b.ne	2ac <grub_mod_init-0xfbc>  // b.any
     298:	ldrh	w0, [sp, #230]
     29c:	bl	0 <grub_mod_init-0x1268>
     2a0:	and	w0, w0, #0xffff
     2a4:	cmp	w0, #0x1
     2a8:	b.eq	2b4 <grub_mod_init-0xfb4>  // b.none
     2ac:	mov	x0, #0x0                   	// #0
     2b0:	b	a78 <grub_mod_init-0x7f0>
     2b4:	add	x0, sp, #0xb0
     2b8:	str	x0, [sp, #912]
     2bc:	add	x0, sp, #0xe0
     2c0:	add	x0, x0, #0xa8
     2c4:	str	x0, [sp, #920]
     2c8:	b	300 <grub_mod_init-0xf68>
     2cc:	ldr	x0, [sp, #920]
     2d0:	ldrb	w0, [x0]
     2d4:	cmp	w0, #0x2d
     2d8:	b.eq	2f4 <grub_mod_init-0xf74>  // b.none
     2dc:	ldr	x0, [sp, #912]
     2e0:	add	x1, x0, #0x1
     2e4:	str	x1, [sp, #912]
     2e8:	ldr	x1, [sp, #920]
     2ec:	ldrb	w1, [x1]
     2f0:	strb	w1, [x0]
     2f4:	ldr	x0, [sp, #920]
     2f8:	add	x0, x0, #0x1
     2fc:	str	x0, [sp, #920]
     300:	add	x0, sp, #0xe0
     304:	add	x0, x0, #0xd0
     308:	ldr	x1, [sp, #920]
     30c:	cmp	x1, x0
     310:	b.cc	2cc <grub_mod_init-0xf9c>  // b.lo, b.ul, b.last
     314:	ldr	x0, [sp, #912]
     318:	strb	wzr, [x0]
     31c:	ldr	x0, [sp, #32]
     320:	cmp	x0, #0x0
     324:	b.eq	380 <grub_mod_init-0xee8>  // b.none
     328:	add	x0, sp, #0xb0
     32c:	mov	x1, x0
     330:	ldr	x0, [sp, #32]
     334:	bl	12c <grub_mod_init-0x113c>
     338:	cmp	w0, #0x0
     33c:	b.eq	380 <grub_mod_init-0xee8>  // b.none
     340:	add	x0, sp, #0xb0
     344:	ldr	x5, [sp, #32]
     348:	mov	x4, x0
     34c:	adrp	x0, 0 <grub_mod_init-0x1268>
     350:	add	x0, x0, #0x0
     354:	ldr	x3, [x0]
     358:	adrp	x0, 0 <grub_mod_init-0x1268>
     35c:	add	x0, x0, #0x0
     360:	ldr	x2, [x0]
     364:	mov	w1, #0x75                  	// #117
     368:	adrp	x0, 0 <grub_mod_init-0x1268>
     36c:	add	x0, x0, #0x0
     370:	ldr	x0, [x0]
     374:	bl	0 <grub_real_dprintf>
     378:	mov	x0, #0x0                   	// #0
     37c:	b	a78 <grub_mod_init-0x7f0>
     380:	add	x0, sp, #0xe0
     384:	add	x1, x0, #0x8
     388:	add	x0, sp, #0x88
     38c:	mov	x2, #0x20                  	// #32
     390:	bl	c8 <grub_mod_init-0x11a0>
     394:	strb	wzr, [sp, #168]
     398:	add	x0, sp, #0xe0
     39c:	add	x1, x0, #0x28
     3a0:	add	x0, sp, #0x60
     3a4:	mov	x2, #0x20                  	// #32
     3a8:	bl	c8 <grub_mod_init-0x11a0>
     3ac:	strb	wzr, [sp, #128]
     3b0:	add	x0, sp, #0xe0
     3b4:	add	x1, x0, #0x48
     3b8:	add	x0, sp, #0x38
     3bc:	mov	x2, #0x20                  	// #32
     3c0:	bl	c8 <grub_mod_init-0x11a0>
     3c4:	strb	wzr, [sp, #88]
     3c8:	add	x0, sp, #0x88
     3cc:	bl	0 <grub_crypto_lookup_cipher_by_name>
     3d0:	str	x0, [sp, #832]
     3d4:	ldr	x0, [sp, #832]
     3d8:	cmp	x0, #0x0
     3dc:	b.ne	404 <grub_mod_init-0xe64>  // b.any
     3e0:	add	x0, sp, #0x88
     3e4:	mov	x2, x0
     3e8:	adrp	x0, 0 <grub_mod_init-0x1268>
     3ec:	add	x0, x0, #0x0
     3f0:	ldr	x1, [x0]
     3f4:	mov	w0, #0x5                   	// #5
     3f8:	bl	0 <grub_error>
     3fc:	mov	x0, #0x0                   	// #0
     400:	b	a78 <grub_mod_init-0x7f0>
     404:	ldr	x0, [sp, #832]
     408:	bl	0 <grub_crypto_cipher_open>
     40c:	str	x0, [sp, #856]
     410:	ldr	x0, [sp, #856]
     414:	cmp	x0, #0x0
     418:	b.ne	424 <grub_mod_init-0xe44>  // b.any
     41c:	mov	x0, #0x0                   	// #0
     420:	b	a78 <grub_mod_init-0x7f0>
     424:	ldr	w0, [sp, #332]
     428:	bl	38 <grub_mod_init-0x1230>
     42c:	cmp	w0, #0x400
     430:	b.ls	464 <grub_mod_init-0xe04>  // b.plast
     434:	ldr	w0, [sp, #332]
     438:	bl	38 <grub_mod_init-0x1230>
     43c:	mov	w2, w0
     440:	adrp	x0, 0 <grub_mod_init-0x1268>
     444:	add	x0, x0, #0x0
     448:	ldr	x1, [x0]
     44c:	mov	w0, #0x12                  	// #18
     450:	bl	0 <grub_error>
     454:	ldr	x0, [sp, #856]
     458:	bl	50 <grub_mod_init-0x1218>
     45c:	mov	x0, #0x0                   	// #0
     460:	b	a78 <grub_mod_init-0x7f0>
     464:	add	x2, sp, #0x60
     468:	adrp	x0, 0 <grub_mod_init-0x1268>
     46c:	add	x0, x0, #0x0
     470:	ldr	x1, [x0]
     474:	mov	x0, x2
     478:	bl	0 <grub_strcmp>
     47c:	cmp	w0, #0x0
     480:	b.ne	498 <grub_mod_init-0xdd0>  // b.any
     484:	str	wzr, [sp, #876]
     488:	mov	w0, #0x1                   	// #1
     48c:	str	w0, [sp, #872]
     490:	str	xzr, [sp, #904]
     494:	b	6f4 <grub_mod_init-0xb74>
     498:	add	x2, sp, #0x60
     49c:	adrp	x0, 0 <grub_mod_init-0x1268>
     4a0:	add	x0, x0, #0x0
     4a4:	ldr	x1, [x0]
     4a8:	mov	x0, x2
     4ac:	bl	0 <grub_strcmp>
     4b0:	cmp	w0, #0x0
     4b4:	b.ne	4d0 <grub_mod_init-0xd98>  // b.any
     4b8:	mov	w0, #0x1                   	// #1
     4bc:	str	w0, [sp, #876]
     4c0:	mov	w0, #0x1                   	// #1
     4c4:	str	w0, [sp, #872]
     4c8:	str	xzr, [sp, #904]
     4cc:	b	6f4 <grub_mod_init-0xb74>
     4d0:	add	x3, sp, #0x60
     4d4:	mov	x2, #0x4                   	// #4
     4d8:	adrp	x0, 0 <grub_mod_init-0x1268>
     4dc:	add	x0, x0, #0x0
     4e0:	ldr	x1, [x0]
     4e4:	mov	x0, x3
     4e8:	bl	0 <grub_memcmp>
     4ec:	cmp	w0, #0x0
     4f0:	b.ne	50c <grub_mod_init-0xd5c>  // b.any
     4f4:	mov	w0, #0x1                   	// #1
     4f8:	str	w0, [sp, #876]
     4fc:	add	x0, sp, #0x60
     500:	add	x0, x0, #0x4
     504:	str	x0, [sp, #904]
     508:	b	6f4 <grub_mod_init-0xb74>
     50c:	add	x3, sp, #0x60
     510:	mov	x2, #0x5                   	// #5
     514:	adrp	x0, 0 <grub_mod_init-0x1268>
     518:	add	x0, x0, #0x0
     51c:	ldr	x1, [x0]
     520:	mov	x0, x3
     524:	bl	0 <grub_memcmp>
     528:	cmp	w0, #0x0
     52c:	b.ne	548 <grub_mod_init-0xd20>  // b.any
     530:	mov	w0, #0x2                   	// #2
     534:	str	w0, [sp, #876]
     538:	add	x0, sp, #0x60
     53c:	add	x0, x0, #0x5
     540:	str	x0, [sp, #904]
     544:	b	6f4 <grub_mod_init-0xb74>
     548:	add	x3, sp, #0x60
     54c:	mov	x2, #0x4                   	// #4
     550:	adrp	x0, 0 <grub_mod_init-0x1268>
     554:	add	x0, x0, #0x0
     558:	ldr	x1, [x0]
     55c:	mov	x0, x3
     560:	bl	0 <grub_memcmp>
     564:	cmp	w0, #0x0
     568:	b.ne	648 <grub_mod_init-0xc20>  // b.any
     56c:	mov	w0, #0x3                   	// #3
     570:	str	w0, [sp, #876]
     574:	add	x0, sp, #0x60
     578:	add	x0, x0, #0x4
     57c:	str	x0, [sp, #904]
     580:	ldr	x0, [sp, #832]
     584:	bl	0 <grub_crypto_cipher_open>
     588:	str	x0, [sp, #896]
     58c:	ldr	x0, [sp, #896]
     590:	cmp	x0, #0x0
     594:	b.ne	5a8 <grub_mod_init-0xcc0>  // b.any
     598:	ldr	x0, [sp, #856]
     59c:	bl	50 <grub_mod_init-0x1218>
     5a0:	mov	x0, #0x0                   	// #0
     5a4:	b	a78 <grub_mod_init-0x7f0>
     5a8:	ldr	x0, [sp, #856]
     5ac:	ldr	x0, [x0]
     5b0:	ldr	x0, [x0, #24]
     5b4:	cmp	x0, #0x10
     5b8:	b.eq	5f8 <grub_mod_init-0xc70>  // b.none
     5bc:	ldr	x0, [sp, #856]
     5c0:	ldr	x0, [x0]
     5c4:	ldr	x0, [x0, #24]
     5c8:	mov	x2, x0
     5cc:	adrp	x0, 0 <grub_mod_init-0x1268>
     5d0:	add	x0, x0, #0x0
     5d4:	ldr	x1, [x0]
     5d8:	mov	w0, #0x12                  	// #18
     5dc:	bl	0 <grub_error>
     5e0:	ldr	x0, [sp, #856]
     5e4:	bl	50 <grub_mod_init-0x1218>
     5e8:	ldr	x0, [sp, #896]
     5ec:	bl	50 <grub_mod_init-0x1218>
     5f0:	mov	x0, #0x0                   	// #0
     5f4:	b	a78 <grub_mod_init-0x7f0>
     5f8:	ldr	x0, [sp, #896]
     5fc:	ldr	x0, [x0]
     600:	ldr	x0, [x0, #24]
     604:	cmp	x0, #0x10
     608:	b.eq	6f4 <grub_mod_init-0xb74>  // b.none
     60c:	ldr	x0, [sp, #856]
     610:	bl	50 <grub_mod_init-0x1218>
     614:	ldr	x0, [sp, #896]
     618:	ldr	x0, [x0]
     61c:	ldr	x0, [x0, #24]
     620:	mov	x2, x0
     624:	adrp	x0, 0 <grub_mod_init-0x1268>
     628:	add	x0, x0, #0x0
     62c:	ldr	x1, [x0]
     630:	mov	w0, #0x12                  	// #18
     634:	bl	0 <grub_error>
     638:	ldr	x0, [sp, #896]
     63c:	bl	50 <grub_mod_init-0x1218>
     640:	mov	x0, #0x0                   	// #0
     644:	b	a78 <grub_mod_init-0x7f0>
     648:	add	x3, sp, #0x60
     64c:	mov	x2, #0x4                   	// #4
     650:	adrp	x0, 0 <grub_mod_init-0x1268>
     654:	add	x0, x0, #0x0
     658:	ldr	x1, [x0]
     65c:	mov	x0, x3
     660:	bl	0 <grub_memcmp>
     664:	cmp	w0, #0x0
     668:	b.ne	6c8 <grub_mod_init-0xba0>  // b.any
     66c:	mov	w0, #0x4                   	// #4
     670:	str	w0, [sp, #876]
     674:	add	x0, sp, #0x60
     678:	add	x0, x0, #0x4
     67c:	str	x0, [sp, #904]
     680:	ldr	x0, [sp, #856]
     684:	ldr	x0, [x0]
     688:	ldr	x0, [x0, #24]
     68c:	cmp	x0, #0x10
     690:	b.eq	6f4 <grub_mod_init-0xb74>  // b.none
     694:	ldr	x0, [sp, #856]
     698:	ldr	x0, [x0]
     69c:	ldr	x0, [x0, #24]
     6a0:	mov	x2, x0
     6a4:	adrp	x0, 0 <grub_mod_init-0x1268>
     6a8:	add	x0, x0, #0x0
     6ac:	ldr	x1, [x0]
     6b0:	mov	w0, #0x12                  	// #18
     6b4:	bl	0 <grub_error>
     6b8:	ldr	x0, [sp, #856]
     6bc:	bl	50 <grub_mod_init-0x1218>
     6c0:	mov	x0, #0x0                   	// #0
     6c4:	b	a78 <grub_mod_init-0x7f0>
     6c8:	ldr	x0, [sp, #856]
     6cc:	bl	50 <grub_mod_init-0x1218>
     6d0:	add	x0, sp, #0x60
     6d4:	mov	x2, x0
     6d8:	adrp	x0, 0 <grub_mod_init-0x1268>
     6dc:	add	x0, x0, #0x0
     6e0:	ldr	x1, [x0]
     6e4:	mov	w0, #0x12                  	// #18
     6e8:	bl	0 <grub_error>
     6ec:	mov	x0, #0x0                   	// #0
     6f0:	b	a78 <grub_mod_init-0x7f0>
     6f4:	ldr	x0, [sp, #904]
     6f8:	cmp	x0, #0x0
     6fc:	b.eq	918 <grub_mod_init-0x950>  // b.none
     700:	mov	x2, #0x5                   	// #5
     704:	adrp	x0, 0 <grub_mod_init-0x1268>
     708:	add	x0, x0, #0x0
     70c:	ldr	x1, [x0]
     710:	ldr	x0, [sp, #904]
     714:	bl	0 <grub_memcmp>
     718:	cmp	w0, #0x0
     71c:	b.ne	72c <grub_mod_init-0xb3c>  // b.any
     720:	mov	w0, #0x1                   	// #1
     724:	str	w0, [sp, #872]
     728:	b	918 <grub_mod_init-0x950>
     72c:	mov	x2, #0x7                   	// #7
     730:	adrp	x0, 0 <grub_mod_init-0x1268>
     734:	add	x0, x0, #0x0
     738:	ldr	x1, [x0]
     73c:	ldr	x0, [sp, #904]
     740:	bl	0 <grub_memcmp>
     744:	cmp	w0, #0x0
     748:	b.ne	758 <grub_mod_init-0xb10>  // b.any
     74c:	mov	w0, #0x2                   	// #2
     750:	str	w0, [sp, #872]
     754:	b	918 <grub_mod_init-0x950>
     758:	mov	x2, #0x5                   	// #5
     75c:	adrp	x0, 0 <grub_mod_init-0x1268>
     760:	add	x0, x0, #0x0
     764:	ldr	x1, [x0]
     768:	ldr	x0, [sp, #904]
     76c:	bl	0 <grub_memcmp>
     770:	cmp	w0, #0x0
     774:	b.ne	814 <grub_mod_init-0xa54>  // b.any
     778:	ldr	x0, [sp, #856]
     77c:	ldr	x0, [x0]
     780:	ldr	x1, [x0, #24]
     784:	ldr	x0, [sp, #856]
     788:	ldr	x0, [x0]
     78c:	ldr	x0, [x0, #24]
     790:	sub	x0, x0, #0x1
     794:	and	x0, x1, x0
     798:	cmp	x0, #0x0
     79c:	b.ne	7b4 <grub_mod_init-0xab4>  // b.any
     7a0:	ldr	x0, [sp, #856]
     7a4:	ldr	x0, [x0]
     7a8:	ldr	x0, [x0, #24]
     7ac:	cmp	x0, #0x0
     7b0:	b.ne	7d8 <grub_mod_init-0xa90>  // b.any
     7b4:	ldr	x0, [sp, #856]
     7b8:	ldr	x0, [x0]
     7bc:	ldr	x0, [x0, #24]
     7c0:	mov	x2, x0
     7c4:	adrp	x0, 0 <grub_mod_init-0x1268>
     7c8:	add	x0, x0, #0x0
     7cc:	ldr	x1, [x0]
     7d0:	mov	w0, #0x12                  	// #18
     7d4:	bl	0 <grub_error>
     7d8:	str	wzr, [sp, #868]
     7dc:	b	7ec <grub_mod_init-0xa7c>
     7e0:	ldr	w0, [sp, #868]
     7e4:	add	w0, w0, #0x1
     7e8:	str	w0, [sp, #868]
     7ec:	ldr	x0, [sp, #856]
     7f0:	ldr	x0, [x0]
     7f4:	ldr	x1, [x0, #24]
     7f8:	ldr	w0, [sp, #868]
     7fc:	lsl	x0, x1, x0
     800:	cmp	x0, #0x1ff
     804:	b.ls	7e0 <grub_mod_init-0xa88>  // b.plast
     808:	mov	w0, #0x4                   	// #4
     80c:	str	w0, [sp, #872]
     810:	b	918 <grub_mod_init-0x950>
     814:	mov	x2, #0x4                   	// #4
     818:	adrp	x0, 0 <grub_mod_init-0x1268>
     81c:	add	x0, x0, #0x0
     820:	ldr	x1, [x0]
     824:	ldr	x0, [sp, #904]
     828:	bl	0 <grub_memcmp>
     82c:	cmp	w0, #0x0
     830:	b.ne	83c <grub_mod_init-0xa2c>  // b.any
     834:	str	wzr, [sp, #872]
     838:	b	918 <grub_mod_init-0x950>
     83c:	mov	x2, #0x6                   	// #6
     840:	adrp	x0, 0 <grub_mod_init-0x1268>
     844:	add	x0, x0, #0x0
     848:	ldr	x1, [x0]
     84c:	ldr	x0, [sp, #904]
     850:	bl	0 <grub_memcmp>
     854:	cmp	w0, #0x0
     858:	b.ne	8e8 <grub_mod_init-0x980>  // b.any
     85c:	ldr	x0, [sp, #904]
     860:	add	x0, x0, #0x6
     864:	str	x0, [sp, #824]
     868:	mov	w0, #0x3                   	// #3
     86c:	str	w0, [sp, #872]
     870:	ldr	x0, [sp, #824]
     874:	bl	0 <grub_crypto_lookup_md_by_name>
     878:	str	x0, [sp, #880]
     87c:	ldr	x0, [sp, #880]
     880:	cmp	x0, #0x0
     884:	b.ne	8b8 <grub_mod_init-0x9b0>  // b.any
     888:	ldr	x0, [sp, #856]
     88c:	bl	50 <grub_mod_init-0x1218>
     890:	ldr	x0, [sp, #896]
     894:	bl	50 <grub_mod_init-0x1218>
     898:	ldr	x2, [sp, #824]
     89c:	adrp	x0, 0 <grub_mod_init-0x1268>
     8a0:	add	x0, x0, #0x0
     8a4:	ldr	x1, [x0]
     8a8:	mov	w0, #0x5                   	// #5
     8ac:	bl	0 <grub_error>
     8b0:	mov	x0, #0x0                   	// #0
     8b4:	b	a78 <grub_mod_init-0x7f0>
     8b8:	ldr	x0, [sp, #832]
     8bc:	bl	0 <grub_crypto_cipher_open>
     8c0:	str	x0, [sp, #888]
     8c4:	ldr	x0, [sp, #888]
     8c8:	cmp	x0, #0x0
     8cc:	b.ne	918 <grub_mod_init-0x950>  // b.any
     8d0:	ldr	x0, [sp, #856]
     8d4:	bl	50 <grub_mod_init-0x1218>
     8d8:	ldr	x0, [sp, #896]
     8dc:	bl	50 <grub_mod_init-0x1218>
     8e0:	mov	x0, #0x0                   	// #0
     8e4:	b	a78 <grub_mod_init-0x7f0>
     8e8:	ldr	x0, [sp, #856]
     8ec:	bl	50 <grub_mod_init-0x1218>
     8f0:	ldr	x0, [sp, #896]
     8f4:	bl	50 <grub_mod_init-0x1218>
     8f8:	ldr	x2, [sp, #904]
     8fc:	adrp	x0, 0 <grub_mod_init-0x1268>
     900:	add	x0, x0, #0x0
     904:	ldr	x1, [x0]
     908:	mov	w0, #0x12                  	// #18
     90c:	bl	0 <grub_error>
     910:	mov	x0, #0x0                   	// #0
     914:	b	a78 <grub_mod_init-0x7f0>
     918:	add	x0, sp, #0x38
     91c:	bl	0 <grub_crypto_lookup_md_by_name>
     920:	str	x0, [sp, #848]
     924:	ldr	x0, [sp, #848]
     928:	cmp	x0, #0x0
     92c:	b.ne	96c <grub_mod_init-0x8fc>  // b.any
     930:	ldr	x0, [sp, #856]
     934:	bl	50 <grub_mod_init-0x1218>
     938:	ldr	x0, [sp, #888]
     93c:	bl	50 <grub_mod_init-0x1218>
     940:	ldr	x0, [sp, #896]
     944:	bl	50 <grub_mod_init-0x1218>
     948:	add	x0, sp, #0x38
     94c:	mov	x2, x0
     950:	adrp	x0, 0 <grub_mod_init-0x1268>
     954:	add	x0, x0, #0x0
     958:	ldr	x1, [x0]
     95c:	mov	w0, #0x5                   	// #5
     960:	bl	0 <grub_error>
     964:	mov	x0, #0x0                   	// #0
     968:	b	a78 <grub_mod_init-0x7f0>
     96c:	mov	x0, #0x238                 	// #568
     970:	bl	0 <grub_zalloc>
     974:	str	x0, [sp, #816]
     978:	ldr	x0, [sp, #816]
     97c:	cmp	x0, #0x0
     980:	b.ne	9a4 <grub_mod_init-0x8c4>  // b.any
     984:	ldr	x0, [sp, #856]
     988:	bl	50 <grub_mod_init-0x1218>
     98c:	ldr	x0, [sp, #888]
     990:	bl	50 <grub_mod_init-0x1218>
     994:	ldr	x0, [sp, #896]
     998:	bl	50 <grub_mod_init-0x1218>
     99c:	mov	x0, #0x0                   	// #0
     9a0:	b	a78 <grub_mod_init-0x7f0>
     9a4:	ldr	x0, [sp, #816]
     9a8:	ldr	x1, [sp, #856]
     9ac:	str	x1, [x0, #56]
     9b0:	ldr	w0, [sp, #328]
     9b4:	bl	38 <grub_mod_init-0x1230>
     9b8:	mov	w1, w0
     9bc:	ldr	x0, [sp, #816]
     9c0:	str	x1, [x0, #24]
     9c4:	ldr	x0, [sp, #816]
     9c8:	str	xzr, [x0, #40]
     9cc:	ldr	x0, [sp, #816]
     9d0:	ldr	w1, [sp, #868]
     9d4:	str	w1, [x0, #112]
     9d8:	ldr	x0, [sp, #816]
     9dc:	ldr	w1, [sp, #876]
     9e0:	str	w1, [x0, #104]
     9e4:	ldr	x0, [sp, #816]
     9e8:	ldr	w1, [sp, #872]
     9ec:	str	w1, [x0, #108]
     9f0:	ldr	x0, [sp, #816]
     9f4:	ldr	x1, [sp, #896]
     9f8:	str	x1, [x0, #64]
     9fc:	ldr	x0, [sp, #816]
     a00:	ldr	x1, [sp, #888]
     a04:	str	x1, [x0, #72]
     a08:	ldr	x0, [sp, #816]
     a0c:	ldr	x1, [sp, #880]
     a10:	str	x1, [x0, #80]
     a14:	ldr	x0, [sp, #816]
     a18:	ldr	x1, [sp, #848]
     a1c:	str	x1, [x0, #88]
     a20:	ldr	x0, [sp, #816]
     a24:	mov	w1, #0x9                   	// #9
     a28:	str	w1, [x0, #456]
     a2c:	ldr	x0, [sp, #40]
     a30:	bl	0 <grub_disk_get_size>
     a34:	mov	x1, x0
     a38:	ldr	x0, [sp, #816]
     a3c:	ldr	x0, [x0, #24]
     a40:	sub	x1, x1, x0
     a44:	ldr	x0, [sp, #816]
     a48:	str	x1, [x0, #32]
     a4c:	ldr	x0, [sp, #816]
     a50:	add	x0, x0, #0x8c
     a54:	add	x1, sp, #0xb0
     a58:	mov	x2, #0x48                  	// #72
     a5c:	bl	c8 <grub_mod_init-0x11a0>
     a60:	ldr	x0, [sp, #816]
     a64:	adrp	x1, 0 <grub_mod_init-0x1268>
     a68:	add	x1, x1, #0x0
     a6c:	ldr	x1, [x1]
     a70:	str	x1, [x0, #448]
     a74:	ldr	x0, [sp, #816]
     a78:	ldp	x29, x30, [sp]
     a7c:	add	sp, sp, #0x3a0
     a80:	ret
     a84:	nop
	...
     b40:	sub	sp, sp, #0x4f0
     b44:	stp	x29, x30, [sp]
     b48:	mov	x29, sp
     b4c:	stp	x19, x20, [sp, #16]
     b50:	str	x21, [sp, #32]
     b54:	str	x0, [sp, #56]
     b58:	str	x1, [sp, #48]
     b5c:	str	xzr, [sp, #1232]
     b60:	stp	xzr, xzr, [sp, #352]
     b64:	add	x0, sp, #0x170
     b68:	mov	x1, #0xf0                  	// #240
     b6c:	mov	x2, x1
     b70:	mov	w1, #0x0                   	// #0
     b74:	bl	0 <memset>
     b78:	mov	x0, #0x1                   	// #1
     b7c:	str	x0, [sp, #1248]
     b80:	add	x0, sp, #0x260
     b84:	mov	x4, x0
     b88:	mov	x3, #0x250                 	// #592
     b8c:	mov	x2, #0x0                   	// #0
     b90:	mov	x1, #0x0                   	// #0
     b94:	ldr	x0, [sp, #56]
     b98:	bl	0 <grub_disk_read>
     b9c:	str	w0, [sp, #1228]
     ba0:	ldr	w0, [sp, #1228]
     ba4:	cmp	w0, #0x0
     ba8:	b.eq	bb4 <grub_mod_init-0x6b4>  // b.none
     bac:	ldr	w0, [sp, #1228]
     bb0:	b	11dc <grub_mod_init-0x8c>
     bb4:	adrp	x0, 0 <grub_mod_init-0x1268>
     bb8:	add	x0, x0, #0x0
     bbc:	ldr	x0, [x0]
     bc0:	bl	0 <grub_puts_>
     bc4:	ldr	w0, [sp, #716]
     bc8:	bl	38 <grub_mod_init-0x1230>
     bcc:	mov	w0, w0
     bd0:	str	x0, [sp, #1216]
     bd4:	ldr	x0, [sp, #1216]
     bd8:	cmp	x0, #0x80
     bdc:	b.ls	bf8 <grub_mod_init-0x670>  // b.plast
     be0:	adrp	x0, 0 <grub_mod_init-0x1268>
     be4:	add	x0, x0, #0x0
     be8:	ldr	x1, [x0]
     bec:	mov	w0, #0x9                   	// #9
     bf0:	bl	0 <grub_error>
     bf4:	b	11dc <grub_mod_init-0x8c>
     bf8:	str	wzr, [sp, #1260]
     bfc:	b	c98 <grub_mod_init-0x5d0>
     c00:	ldr	w1, [sp, #1260]
     c04:	mov	x0, x1
     c08:	lsl	x0, x0, #1
     c0c:	add	x0, x0, x1
     c10:	lsl	x0, x0, #4
     c14:	add	x1, sp, #0x330
     c18:	ldr	w0, [x1, x0]
     c1c:	bl	38 <grub_mod_init-0x1230>
     c20:	mov	w1, w0
     c24:	mov	w0, #0x71f3                	// #29171
     c28:	movk	w0, #0xac, lsl #16
     c2c:	cmp	w1, w0
     c30:	b.ne	c8c <grub_mod_init-0x5dc>  // b.any
     c34:	ldr	w1, [sp, #1260]
     c38:	mov	x0, x1
     c3c:	lsl	x0, x0, #1
     c40:	add	x0, x0, x1
     c44:	lsl	x0, x0, #4
     c48:	add	x1, sp, #0x35c
     c4c:	ldr	w0, [x1, x0]
     c50:	bl	38 <grub_mod_init-0x1230>
     c54:	mov	w0, w0
     c58:	ldr	x1, [sp, #1248]
     c5c:	cmp	x1, x0
     c60:	b.cs	c8c <grub_mod_init-0x5dc>  // b.hs, b.nlast
     c64:	ldr	w1, [sp, #1260]
     c68:	mov	x0, x1
     c6c:	lsl	x0, x0, #1
     c70:	add	x0, x0, x1
     c74:	lsl	x0, x0, #4
     c78:	add	x1, sp, #0x35c
     c7c:	ldr	w0, [x1, x0]
     c80:	bl	38 <grub_mod_init-0x1230>
     c84:	mov	w0, w0
     c88:	str	x0, [sp, #1248]
     c8c:	ldr	w0, [sp, #1260]
     c90:	add	w0, w0, #0x1
     c94:	str	w0, [sp, #1260]
     c98:	ldr	w0, [sp, #1260]
     c9c:	cmp	w0, #0x7
     ca0:	b.ls	c00 <grub_mod_init-0x668>  // b.plast
     ca4:	ldr	x1, [sp, #1216]
     ca8:	ldr	x0, [sp, #1248]
     cac:	mul	x0, x1, x0
     cb0:	bl	0 <grub_malloc>
     cb4:	str	x0, [sp, #1232]
     cb8:	ldr	x0, [sp, #1232]
     cbc:	cmp	x0, #0x0
     cc0:	b.ne	cd8 <grub_mod_init-0x590>  // b.any
     cc4:	adrp	x0, 0 <grub_mod_init-0x1268>
     cc8:	add	x0, x0, #0x0
     ccc:	ldr	x0, [x0]
     cd0:	ldr	w0, [x0]
     cd4:	b	11dc <grub_mod_init-0x8c>
     cd8:	str	xzr, [sp, #1240]
     cdc:	ldr	x0, [sp, #56]
     ce0:	ldr	x0, [x0, #40]
     ce4:	cmp	x0, #0x0
     ce8:	b.eq	cfc <grub_mod_init-0x56c>  // b.none
     cec:	ldr	x0, [sp, #56]
     cf0:	ldr	x0, [x0, #40]
     cf4:	bl	0 <grub_partition_get_name>
     cf8:	str	x0, [sp, #1240]
     cfc:	ldr	x0, [sp, #56]
     d00:	ldr	x5, [x0]
     d04:	ldr	x0, [sp, #56]
     d08:	ldr	x0, [x0, #40]
     d0c:	cmp	x0, #0x0
     d10:	b.eq	d24 <grub_mod_init-0x544>  // b.none
     d14:	adrp	x0, 0 <grub_mod_init-0x1268>
     d18:	add	x0, x0, #0x0
     d1c:	ldr	x1, [x0]
     d20:	b	d30 <grub_mod_init-0x538>
     d24:	adrp	x0, 0 <grub_mod_init-0x1268>
     d28:	add	x0, x0, #0x0
     d2c:	ldr	x1, [x0]
     d30:	ldr	x0, [sp, #1240]
     d34:	cmp	x0, #0x0
     d38:	b.ne	d48 <grub_mod_init-0x520>  // b.any
     d3c:	adrp	x0, 0 <grub_mod_init-0x1268>
     d40:	add	x0, x0, #0x0
     d44:	ldr	x0, [x0]
     d48:	ldr	x2, [sp, #48]
     d4c:	add	x2, x2, #0x8c
     d50:	mov	x4, x2
     d54:	mov	x3, x0
     d58:	mov	x2, x1
     d5c:	mov	x1, x5
     d60:	adrp	x0, 0 <grub_mod_init-0x1268>
     d64:	add	x0, x0, #0x0
     d68:	ldr	x0, [x0]
     d6c:	bl	0 <grub_printf_>
     d70:	ldr	x0, [sp, #1240]
     d74:	bl	0 <grub_free>
     d78:	add	x0, sp, #0x160
     d7c:	mov	w1, #0x100                 	// #256
     d80:	bl	0 <grub_password_get>
     d84:	cmp	w0, #0x0
     d88:	b.ne	dac <grub_mod_init-0x4bc>  // b.any
     d8c:	ldr	x0, [sp, #1232]
     d90:	bl	0 <grub_free>
     d94:	adrp	x0, 0 <grub_mod_init-0x1268>
     d98:	add	x0, x0, #0x0
     d9c:	ldr	x1, [x0]
     da0:	mov	w0, #0x12                  	// #18
     da4:	bl	0 <grub_error>
     da8:	b	11dc <grub_mod_init-0x8c>
     dac:	str	wzr, [sp, #1260]
     db0:	b	11b4 <grub_mod_init-0xb4>
     db4:	ldr	w1, [sp, #1260]
     db8:	mov	x0, x1
     dbc:	lsl	x0, x0, #1
     dc0:	add	x0, x0, x1
     dc4:	lsl	x0, x0, #4
     dc8:	add	x1, sp, #0x330
     dcc:	ldr	w0, [x1, x0]
     dd0:	bl	38 <grub_mod_init-0x1230>
     dd4:	mov	w1, w0
     dd8:	mov	w0, #0x71f3                	// #29171
     ddc:	movk	w0, #0xac, lsl #16
     de0:	cmp	w1, w0
     de4:	b.ne	11a4 <grub_mod_init-0xc4>  // b.any
     de8:	ldr	w4, [sp, #1260]
     dec:	adrp	x0, 0 <grub_mod_init-0x1268>
     df0:	add	x0, x0, #0x0
     df4:	ldr	x3, [x0]
     df8:	adrp	x0, 0 <grub_mod_init-0x1268>
     dfc:	add	x0, x0, #0x0
     e00:	ldr	x2, [x0]
     e04:	mov	w1, #0x170                 	// #368
     e08:	adrp	x0, 0 <grub_mod_init-0x1268>
     e0c:	add	x0, x0, #0x0
     e10:	ldr	x0, [x0]
     e14:	bl	0 <grub_real_dprintf>
     e18:	ldr	x0, [sp, #48]
     e1c:	ldr	x19, [x0, #88]
     e20:	add	x0, sp, #0x160
     e24:	bl	0 <grub_strlen>
     e28:	mov	x21, x0
     e2c:	add	x2, sp, #0x260
     e30:	ldr	w1, [sp, #1260]
     e34:	mov	x0, x1
     e38:	lsl	x0, x0, #1
     e3c:	add	x0, x0, x1
     e40:	lsl	x0, x0, #4
     e44:	add	x0, x0, #0xd0
     e48:	add	x0, x2, x0
     e4c:	add	x20, x0, #0x8
     e50:	ldr	w1, [sp, #1260]
     e54:	mov	x0, x1
     e58:	lsl	x0, x0, #1
     e5c:	add	x0, x0, x1
     e60:	lsl	x0, x0, #4
     e64:	add	x1, sp, #0x334
     e68:	ldr	w0, [x1, x0]
     e6c:	bl	38 <grub_mod_init-0x1230>
     e70:	mov	w2, w0
     e74:	add	x1, sp, #0xc8
     e78:	add	x0, sp, #0x160
     e7c:	ldr	x7, [sp, #1216]
     e80:	mov	x6, x1
     e84:	mov	w5, w2
     e88:	mov	x4, #0x20                  	// #32
     e8c:	mov	x3, x20
     e90:	mov	x2, x21
     e94:	mov	x1, x0
     e98:	mov	x0, x19
     e9c:	bl	0 <grub_crypto_pbkdf2>
     ea0:	str	w0, [sp, #1212]
     ea4:	ldr	w0, [sp, #1212]
     ea8:	cmp	w0, #0x0
     eac:	b.eq	ec4 <grub_mod_init-0x3a4>  // b.none
     eb0:	ldr	x0, [sp, #1232]
     eb4:	bl	0 <grub_free>
     eb8:	ldr	w0, [sp, #1212]
     ebc:	bl	0 <grub_crypto_gcry_error>
     ec0:	b	11dc <grub_mod_init-0x8c>
     ec4:	adrp	x0, 0 <grub_mod_init-0x1268>
     ec8:	add	x0, x0, #0x0
     ecc:	ldr	x3, [x0]
     ed0:	adrp	x0, 0 <grub_mod_init-0x1268>
     ed4:	add	x0, x0, #0x0
     ed8:	ldr	x2, [x0]
     edc:	mov	w1, #0x181                 	// #385
     ee0:	adrp	x0, 0 <grub_mod_init-0x1268>
     ee4:	add	x0, x0, #0x0
     ee8:	ldr	x0, [x0]
     eec:	bl	0 <grub_real_dprintf>
     ef0:	add	x0, sp, #0xc8
     ef4:	ldr	x2, [sp, #1216]
     ef8:	mov	x1, x0
     efc:	ldr	x0, [sp, #48]
     f00:	bl	0 <grub_cryptodisk_setkey>
     f04:	str	w0, [sp, #1212]
     f08:	ldr	w0, [sp, #1212]
     f0c:	cmp	w0, #0x0
     f10:	b.eq	f28 <grub_mod_init-0x340>  // b.none
     f14:	ldr	x0, [sp, #1232]
     f18:	bl	0 <grub_free>
     f1c:	ldr	w0, [sp, #1212]
     f20:	bl	0 <grub_crypto_gcry_error>
     f24:	b	11dc <grub_mod_init-0x8c>
     f28:	ldr	w1, [sp, #1260]
     f2c:	mov	x0, x1
     f30:	lsl	x0, x0, #1
     f34:	add	x0, x0, x1
     f38:	lsl	x0, x0, #4
     f3c:	add	x1, sp, #0x35c
     f40:	ldr	w0, [x1, x0]
     f44:	bl	38 <grub_mod_init-0x1230>
     f48:	mov	w0, w0
     f4c:	ldr	x1, [sp, #1216]
     f50:	mul	x0, x1, x0
     f54:	str	x0, [sp, #1200]
     f58:	ldr	w1, [sp, #1260]
     f5c:	mov	x0, x1
     f60:	lsl	x0, x0, #1
     f64:	add	x0, x0, x1
     f68:	lsl	x0, x0, #4
     f6c:	add	x1, sp, #0x358
     f70:	ldr	w0, [x1, x0]
     f74:	bl	38 <grub_mod_init-0x1230>
     f78:	mov	w0, w0
     f7c:	ldr	x4, [sp, #1232]
     f80:	ldr	x3, [sp, #1200]
     f84:	mov	x2, #0x0                   	// #0
     f88:	mov	x1, x0
     f8c:	ldr	x0, [sp, #56]
     f90:	bl	0 <grub_disk_read>
     f94:	str	w0, [sp, #1228]
     f98:	ldr	w0, [sp, #1228]
     f9c:	cmp	w0, #0x0
     fa0:	b.eq	fb4 <grub_mod_init-0x2b4>  // b.none
     fa4:	ldr	x0, [sp, #1232]
     fa8:	bl	0 <grub_free>
     fac:	ldr	w0, [sp, #1228]
     fb0:	b	11dc <grub_mod_init-0x8c>
     fb4:	mov	x3, #0x0                   	// #0
     fb8:	ldr	x2, [sp, #1200]
     fbc:	ldr	x1, [sp, #1232]
     fc0:	ldr	x0, [sp, #48]
     fc4:	bl	0 <grub_cryptodisk_decrypt>
     fc8:	str	w0, [sp, #1212]
     fcc:	ldr	w0, [sp, #1212]
     fd0:	cmp	w0, #0x0
     fd4:	b.eq	fec <grub_mod_init-0x27c>  // b.none
     fd8:	ldr	x0, [sp, #1232]
     fdc:	bl	0 <grub_free>
     fe0:	ldr	w0, [sp, #1212]
     fe4:	bl	0 <grub_crypto_gcry_error>
     fe8:	b	11dc <grub_mod_init-0x8c>
     fec:	ldr	x0, [sp, #48]
     ff0:	ldr	x19, [x0, #88]
     ff4:	ldr	w1, [sp, #1260]
     ff8:	mov	x0, x1
     ffc:	lsl	x0, x0, #1
    1000:	add	x0, x0, x1
    1004:	lsl	x0, x0, #4
    1008:	add	x1, sp, #0x35c
    100c:	ldr	w0, [x1, x0]
    1010:	bl	38 <grub_mod_init-0x1230>
    1014:	mov	w1, w0
    1018:	add	x0, sp, #0x48
    101c:	mov	x4, x1
    1020:	ldr	x3, [sp, #1216]
    1024:	mov	x2, x0
    1028:	ldr	x1, [sp, #1232]
    102c:	mov	x0, x19
    1030:	bl	162c <AF_merge>
    1034:	str	w0, [sp, #1212]
    1038:	ldr	w0, [sp, #1212]
    103c:	cmp	w0, #0x0
    1040:	b.eq	1058 <grub_mod_init-0x210>  // b.none
    1044:	ldr	x0, [sp, #1232]
    1048:	bl	0 <grub_free>
    104c:	ldr	w0, [sp, #1212]
    1050:	bl	0 <grub_crypto_gcry_error>
    1054:	b	11dc <grub_mod_init-0x8c>
    1058:	adrp	x0, 0 <grub_mod_init-0x1268>
    105c:	add	x0, x0, #0x0
    1060:	ldr	x3, [x0]
    1064:	adrp	x0, 0 <grub_mod_init-0x1268>
    1068:	add	x0, x0, #0x0
    106c:	ldr	x2, [x0]
    1070:	mov	w1, #0x1a7                 	// #423
    1074:	adrp	x0, 0 <grub_mod_init-0x1268>
    1078:	add	x0, x0, #0x0
    107c:	ldr	x0, [x0]
    1080:	bl	0 <grub_real_dprintf>
    1084:	ldr	x0, [sp, #48]
    1088:	ldr	x19, [x0, #88]
    108c:	ldr	w0, [sp, #716]
    1090:	bl	38 <grub_mod_init-0x1230>
    1094:	mov	w20, w0
    1098:	ldr	w0, [sp, #772]
    109c:	bl	38 <grub_mod_init-0x1230>
    10a0:	mov	w3, w0
    10a4:	add	x2, sp, #0x148
    10a8:	add	x0, sp, #0x260
    10ac:	add	x1, x0, #0x84
    10b0:	add	x0, sp, #0x48
    10b4:	mov	x7, #0x14                  	// #20
    10b8:	mov	x6, x2
    10bc:	mov	w5, w3
    10c0:	mov	x4, #0x20                  	// #32
    10c4:	mov	x3, x1
    10c8:	mov	x2, x20
    10cc:	mov	x1, x0
    10d0:	mov	x0, x19
    10d4:	bl	0 <grub_crypto_pbkdf2>
    10d8:	str	w0, [sp, #1212]
    10dc:	ldr	w0, [sp, #1212]
    10e0:	cmp	w0, #0x0
    10e4:	b.eq	10fc <grub_mod_init-0x16c>  // b.none
    10e8:	ldr	x0, [sp, #1232]
    10ec:	bl	0 <grub_free>
    10f0:	ldr	w0, [sp, #1212]
    10f4:	bl	0 <grub_crypto_gcry_error>
    10f8:	b	11dc <grub_mod_init-0x8c>
    10fc:	add	x0, sp, #0x260
    1100:	add	x1, x0, #0x70
    1104:	add	x0, sp, #0x148
    1108:	mov	x2, #0x14                  	// #20
    110c:	bl	0 <grub_memcmp>
    1110:	cmp	w0, #0x0
    1114:	b.eq	1148 <grub_mod_init-0x120>  // b.none
    1118:	adrp	x0, 0 <grub_mod_init-0x1268>
    111c:	add	x0, x0, #0x0
    1120:	ldr	x3, [x0]
    1124:	adrp	x0, 0 <grub_mod_init-0x1268>
    1128:	add	x0, x0, #0x0
    112c:	ldr	x2, [x0]
    1130:	mov	w1, #0x1bd                 	// #445
    1134:	adrp	x0, 0 <grub_mod_init-0x1268>
    1138:	add	x0, x0, #0x0
    113c:	ldr	x0, [x0]
    1140:	bl	0 <grub_real_dprintf>
    1144:	b	11a8 <grub_mod_init-0xc0>
    1148:	ldr	w1, [sp, #1260]
    114c:	adrp	x0, 0 <grub_mod_init-0x1268>
    1150:	add	x0, x0, #0x0
    1154:	ldr	x0, [x0]
    1158:	bl	0 <grub_printf_>
    115c:	add	x0, sp, #0x48
    1160:	ldr	x2, [sp, #1216]
    1164:	mov	x1, x0
    1168:	ldr	x0, [sp, #48]
    116c:	bl	0 <grub_cryptodisk_setkey>
    1170:	str	w0, [sp, #1212]
    1174:	ldr	w0, [sp, #1212]
    1178:	cmp	w0, #0x0
    117c:	b.eq	1194 <grub_mod_init-0xd4>  // b.none
    1180:	ldr	x0, [sp, #1232]
    1184:	bl	0 <grub_free>
    1188:	ldr	w0, [sp, #1212]
    118c:	bl	0 <grub_crypto_gcry_error>
    1190:	b	11dc <grub_mod_init-0x8c>
    1194:	ldr	x0, [sp, #1232]
    1198:	bl	0 <grub_free>
    119c:	mov	w0, #0x0                   	// #0
    11a0:	b	11dc <grub_mod_init-0x8c>
    11a4:	nop
    11a8:	ldr	w0, [sp, #1260]
    11ac:	add	w0, w0, #0x1
    11b0:	str	w0, [sp, #1260]
    11b4:	ldr	w0, [sp, #1260]
    11b8:	cmp	w0, #0x7
    11bc:	b.ls	db4 <grub_mod_init-0x4b4>  // b.plast
    11c0:	ldr	x0, [sp, #1232]
    11c4:	bl	0 <grub_free>
    11c8:	adrp	x0, 0 <grub_mod_init-0x1268>
    11cc:	add	x0, x0, #0x0
    11d0:	ldr	x1, [x0]
    11d4:	mov	w0, #0x1e                  	// #30
    11d8:	bl	0 <grub_error>
    11dc:	ldp	x19, x20, [sp, #16]
    11e0:	ldr	x21, [sp, #32]
    11e4:	ldp	x29, x30, [sp]
    11e8:	add	sp, sp, #0x4f0
    11ec:	ret
	...

0000000000001268 <grub_mod_init>:
    1268:	stp	x29, x30, [sp, #-32]!
    126c:	mov	x29, sp
    1270:	str	x0, [sp, #24]
    1274:	adrp	x0, 0 <grub_mod_init-0x1268>
    1278:	add	x0, x0, #0x0
    127c:	ldr	x0, [x0]
    1280:	bl	70 <grub_mod_init-0x11f8>
    1284:	nop
    1288:	ldp	x29, x30, [sp], #32
    128c:	ret
	...

0000000000001298 <grub_mod_fini>:
    1298:	stp	x29, x30, [sp, #-16]!
    129c:	mov	x29, sp
    12a0:	adrp	x0, 0 <grub_mod_init-0x1268>
    12a4:	add	x0, x0, #0x0
    12a8:	ldr	x0, [x0]
    12ac:	bl	a8 <grub_mod_init-0x11c0>
    12b0:	nop
    12b4:	ldp	x29, x30, [sp], #16
    12b8:	ret
    12bc:	nop
	...
    12c8:	sub	sp, sp, #0x10
    12cc:	str	w0, [sp, #12]
    12d0:	ldr	w0, [sp, #12]
    12d4:	rev	w0, w0
    12d8:	add	sp, sp, #0x10
    12dc:	ret
    12e0:	sub	sp, sp, #0x40
    12e4:	str	x0, [sp, #24]
    12e8:	str	x1, [sp, #16]
    12ec:	str	x2, [sp, #8]
    12f0:	str	x3, [sp]
    12f4:	ldr	x0, [sp, #16]
    12f8:	str	x0, [sp, #56]
    12fc:	ldr	x0, [sp, #8]
    1300:	str	x0, [sp, #48]
    1304:	ldr	x0, [sp, #24]
    1308:	str	x0, [sp, #40]
    130c:	b	1360 <grub_mod_fini+0xc8>
    1310:	ldr	x0, [sp, #56]
    1314:	ldrb	w1, [x0]
    1318:	ldr	x0, [sp, #48]
    131c:	ldrb	w0, [x0]
    1320:	eor	w0, w1, w0
    1324:	and	w1, w0, #0xff
    1328:	ldr	x0, [sp, #40]
    132c:	strb	w1, [x0]
    1330:	ldr	x0, [sp, #56]
    1334:	add	x0, x0, #0x1
    1338:	str	x0, [sp, #56]
    133c:	ldr	x0, [sp, #48]
    1340:	add	x0, x0, #0x1
    1344:	str	x0, [sp, #48]
    1348:	ldr	x0, [sp, #40]
    134c:	add	x0, x0, #0x1
    1350:	str	x0, [sp, #40]
    1354:	ldr	x0, [sp]
    1358:	sub	x0, x0, #0x1
    135c:	str	x0, [sp]
    1360:	ldr	x0, [sp]
    1364:	cmp	x0, #0x0
    1368:	b.eq	13ec <grub_mod_fini+0x154>  // b.none
    136c:	ldr	x0, [sp, #56]
    1370:	and	x0, x0, #0x7
    1374:	cmp	x0, #0x0
    1378:	b.ne	1310 <grub_mod_fini+0x78>  // b.any
    137c:	ldr	x0, [sp, #48]
    1380:	and	x0, x0, #0x7
    1384:	cmp	x0, #0x0
    1388:	b.ne	1310 <grub_mod_fini+0x78>  // b.any
    138c:	ldr	x0, [sp, #40]
    1390:	and	x0, x0, #0x7
    1394:	cmp	x0, #0x0
    1398:	b.ne	1310 <grub_mod_fini+0x78>  // b.any
    139c:	b	13ec <grub_mod_fini+0x154>
    13a0:	ldr	x0, [sp, #56]
    13a4:	ldr	x1, [x0]
    13a8:	ldr	x0, [sp, #48]
    13ac:	ldr	x0, [x0]
    13b0:	eor	x1, x1, x0
    13b4:	ldr	x0, [sp, #40]
    13b8:	str	x1, [x0]
    13bc:	ldr	x0, [sp, #56]
    13c0:	add	x0, x0, #0x8
    13c4:	str	x0, [sp, #56]
    13c8:	ldr	x0, [sp, #48]
    13cc:	add	x0, x0, #0x8
    13d0:	str	x0, [sp, #48]
    13d4:	ldr	x0, [sp, #40]
    13d8:	add	x0, x0, #0x8
    13dc:	str	x0, [sp, #40]
    13e0:	ldr	x0, [sp]
    13e4:	sub	x0, x0, #0x8
    13e8:	str	x0, [sp]
    13ec:	ldr	x0, [sp]
    13f0:	cmp	x0, #0x7
    13f4:	b.hi	13a0 <grub_mod_fini+0x108>  // b.pmore
    13f8:	b	144c <grub_mod_fini+0x1b4>
    13fc:	ldr	x0, [sp, #56]
    1400:	ldrb	w1, [x0]
    1404:	ldr	x0, [sp, #48]
    1408:	ldrb	w0, [x0]
    140c:	eor	w0, w1, w0
    1410:	and	w1, w0, #0xff
    1414:	ldr	x0, [sp, #40]
    1418:	strb	w1, [x0]
    141c:	ldr	x0, [sp, #56]
    1420:	add	x0, x0, #0x1
    1424:	str	x0, [sp, #56]
    1428:	ldr	x0, [sp, #48]
    142c:	add	x0, x0, #0x1
    1430:	str	x0, [sp, #48]
    1434:	ldr	x0, [sp, #40]
    1438:	add	x0, x0, #0x1
    143c:	str	x0, [sp, #40]
    1440:	ldr	x0, [sp]
    1444:	sub	x0, x0, #0x1
    1448:	str	x0, [sp]
    144c:	ldr	x0, [sp]
    1450:	cmp	x0, #0x0
    1454:	b.ne	13fc <grub_mod_fini+0x164>  // b.any
    1458:	nop
    145c:	nop
    1460:	add	sp, sp, #0x40
    1464:	ret
    1468:	stp	x29, x30, [sp, #-48]!
    146c:	mov	x29, sp
    1470:	str	x0, [sp, #40]
    1474:	str	x1, [sp, #32]
    1478:	str	x2, [sp, #24]
    147c:	ldr	x2, [sp, #24]
    1480:	ldr	x1, [sp, #32]
    1484:	ldr	x0, [sp, #40]
    1488:	bl	0 <grub_memmove>
    148c:	ldp	x29, x30, [sp], #48
    1490:	ret
    1494:	stp	x29, x30, [sp, #-208]!
    1498:	mov	x29, sp
    149c:	str	x0, [sp, #40]
    14a0:	str	x1, [sp, #32]
    14a4:	str	x2, [sp, #24]
    14a8:	str	x3, [sp, #16]
    14ac:	ldr	x0, [sp, #40]
    14b0:	ldr	x0, [x0, #32]
    14b4:	ldr	x1, [sp, #16]
    14b8:	udiv	x0, x1, x0
    14bc:	str	x0, [sp, #192]
    14c0:	ldr	x0, [sp, #40]
    14c4:	ldr	x1, [x0, #32]
    14c8:	ldr	x0, [sp, #16]
    14cc:	udiv	x2, x0, x1
    14d0:	mul	x1, x2, x1
    14d4:	sub	x0, x0, x1
    14d8:	str	w0, [sp, #188]
    14dc:	str	xzr, [sp, #200]
    14e0:	b	1578 <grub_mod_fini+0x2e0>
    14e4:	ldr	x0, [sp, #200]
    14e8:	bl	12c8 <grub_mod_fini+0x30>
    14ec:	str	w0, [sp, #184]
    14f0:	add	x1, sp, #0xb8
    14f4:	add	x0, sp, #0x30
    14f8:	mov	x2, #0x4                   	// #4
    14fc:	bl	1468 <grub_mod_fini+0x1d0>
    1500:	add	x0, sp, #0x30
    1504:	add	x0, x0, #0x4
    1508:	ldr	x1, [sp, #40]
    150c:	ldr	x2, [x1, #32]
    1510:	ldr	x1, [sp, #200]
    1514:	mul	x1, x2, x1
    1518:	ldr	x2, [sp, #32]
    151c:	add	x3, x2, x1
    1520:	ldr	x1, [sp, #40]
    1524:	ldr	x1, [x1, #32]
    1528:	mov	x2, x1
    152c:	mov	x1, x3
    1530:	bl	1468 <grub_mod_fini+0x1d0>
    1534:	ldr	x0, [sp, #40]
    1538:	ldr	x1, [x0, #32]
    153c:	ldr	x0, [sp, #200]
    1540:	mul	x0, x1, x0
    1544:	ldr	x1, [sp, #24]
    1548:	add	x1, x1, x0
    154c:	ldr	x0, [sp, #40]
    1550:	ldr	x0, [x0, #32]
    1554:	add	x2, x0, #0x4
    1558:	add	x0, sp, #0x30
    155c:	mov	x3, x2
    1560:	mov	x2, x0
    1564:	ldr	x0, [sp, #40]
    1568:	bl	0 <grub_crypto_hash>
    156c:	ldr	x0, [sp, #200]
    1570:	add	x0, x0, #0x1
    1574:	str	x0, [sp, #200]
    1578:	ldr	x1, [sp, #200]
    157c:	ldr	x0, [sp, #192]
    1580:	cmp	x1, x0
    1584:	b.cc	14e4 <grub_mod_fini+0x24c>  // b.lo, b.ul, b.last
    1588:	ldr	w0, [sp, #188]
    158c:	cmp	w0, #0x0
    1590:	b.eq	1620 <grub_mod_fini+0x388>  // b.none
    1594:	ldr	x0, [sp, #200]
    1598:	bl	12c8 <grub_mod_fini+0x30>
    159c:	str	w0, [sp, #184]
    15a0:	add	x1, sp, #0xb8
    15a4:	add	x0, sp, #0x30
    15a8:	mov	x2, #0x4                   	// #4
    15ac:	bl	1468 <grub_mod_fini+0x1d0>
    15b0:	add	x0, sp, #0x30
    15b4:	add	x0, x0, #0x4
    15b8:	ldr	x1, [sp, #40]
    15bc:	ldr	x2, [x1, #32]
    15c0:	ldr	x1, [sp, #200]
    15c4:	mul	x1, x2, x1
    15c8:	ldr	x2, [sp, #32]
    15cc:	add	x1, x2, x1
    15d0:	ldrsw	x2, [sp, #188]
    15d4:	bl	1468 <grub_mod_fini+0x1d0>
    15d8:	ldrsw	x0, [sp, #188]
    15dc:	add	x2, x0, #0x4
    15e0:	add	x1, sp, #0x30
    15e4:	add	x0, sp, #0x78
    15e8:	mov	x3, x2
    15ec:	mov	x2, x1
    15f0:	mov	x1, x0
    15f4:	ldr	x0, [sp, #40]
    15f8:	bl	0 <grub_crypto_hash>
    15fc:	ldr	x0, [sp, #40]
    1600:	ldr	x1, [x0, #32]
    1604:	ldr	x0, [sp, #200]
    1608:	mul	x0, x1, x0
    160c:	ldr	x1, [sp, #24]
    1610:	add	x0, x1, x0
    1614:	ldrsw	x2, [sp, #188]
    1618:	add	x1, sp, #0x78
    161c:	bl	1468 <grub_mod_fini+0x1d0>
    1620:	nop
    1624:	ldp	x29, x30, [sp], #208
    1628:	ret

000000000000162c <AF_merge>:
    162c:	stp	x29, x30, [sp, #-80]!
    1630:	mov	x29, sp
    1634:	str	x0, [sp, #56]
    1638:	str	x1, [sp, #48]
    163c:	str	x2, [sp, #40]
    1640:	str	x3, [sp, #32]
    1644:	str	x4, [sp, #24]
    1648:	ldr	x0, [sp, #56]
    164c:	ldr	x0, [x0, #32]
    1650:	cmp	x0, #0x40
    1654:	b.hi	1668 <AF_merge+0x3c>  // b.pmore
    1658:	ldr	x0, [sp, #56]
    165c:	ldr	x0, [x0, #32]
    1660:	cmp	x0, #0x0
    1664:	b.ne	1670 <AF_merge+0x44>  // b.any
    1668:	mov	w0, #0xa                   	// #10
    166c:	b	1738 <AF_merge+0x10c>
    1670:	ldr	x0, [sp, #32]
    1674:	bl	0 <grub_zalloc>
    1678:	str	x0, [sp, #64]
    167c:	ldr	x0, [sp, #64]
    1680:	cmp	x0, #0x0
    1684:	b.ne	1690 <AF_merge+0x64>  // b.any
    1688:	mov	w0, #0x22                  	// #34
    168c:	b	1738 <AF_merge+0x10c>
    1690:	ldr	x2, [sp, #32]
    1694:	mov	w1, #0x0                   	// #0
    1698:	ldr	x0, [sp, #64]
    169c:	bl	0 <grub_memset>
    16a0:	str	xzr, [sp, #72]
    16a4:	b	16f0 <AF_merge+0xc4>
    16a8:	ldr	x1, [sp, #32]
    16ac:	ldr	x0, [sp, #72]
    16b0:	mul	x0, x1, x0
    16b4:	ldr	x1, [sp, #48]
    16b8:	add	x0, x1, x0
    16bc:	ldr	x3, [sp, #32]
    16c0:	ldr	x2, [sp, #64]
    16c4:	mov	x1, x0
    16c8:	ldr	x0, [sp, #64]
    16cc:	bl	12e0 <grub_mod_fini+0x48>
    16d0:	ldr	x3, [sp, #32]
    16d4:	ldr	x2, [sp, #64]
    16d8:	ldr	x1, [sp, #64]
    16dc:	ldr	x0, [sp, #56]
    16e0:	bl	1494 <grub_mod_fini+0x1fc>
    16e4:	ldr	x0, [sp, #72]
    16e8:	add	x0, x0, #0x1
    16ec:	str	x0, [sp, #72]
    16f0:	ldr	x0, [sp, #24]
    16f4:	sub	x0, x0, #0x1
    16f8:	ldr	x1, [sp, #72]
    16fc:	cmp	x1, x0
    1700:	b.cc	16a8 <AF_merge+0x7c>  // b.lo, b.ul, b.last
    1704:	ldr	x1, [sp, #72]
    1708:	ldr	x0, [sp, #32]
    170c:	mul	x0, x1, x0
    1710:	ldr	x1, [sp, #48]
    1714:	add	x0, x1, x0
    1718:	ldr	x3, [sp, #32]
    171c:	ldr	x2, [sp, #64]
    1720:	mov	x1, x0
    1724:	ldr	x0, [sp, #40]
    1728:	bl	12e0 <grub_mod_fini+0x48>
    172c:	ldr	x0, [sp, #64]
    1730:	bl	0 <grub_free>
    1734:	mov	w0, #0x0                   	// #0
    1738:	ldp	x29, x30, [sp], #80
    173c:	ret
