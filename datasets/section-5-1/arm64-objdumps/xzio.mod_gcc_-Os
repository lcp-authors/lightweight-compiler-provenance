
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//xzio.mod_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x518>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	stp	x19, x20, [sp, #16]
       c:	mov	x19, x0
      10:	ldr	x20, [x0, #80]
      14:	ldr	x0, [x20, #56]
      18:	bl	2ec4 <xz_dec_end>
      1c:	ldr	x0, [x20]
      20:	bl	0 <grub_file_close>
      24:	mov	x0, x20
      28:	bl	0 <grub_free>
      2c:	adrp	x0, 0 <grub_mod_init-0x518>
      30:	ldr	x0, [x0]
      34:	ldr	w0, [x0]
      38:	stp	xzr, xzr, [x19]
      3c:	ldp	x19, x20, [sp, #16]
      40:	ldp	x29, x30, [sp], #32
      44:	ret
	...
      50:	stp	x29, x30, [sp, #-64]!
      54:	mov	x2, #0x9                   	// #9
      58:	mov	x29, sp
      5c:	stp	x19, x20, [sp, #16]
      60:	mov	x20, x1
      64:	add	x1, sp, #0x30
      68:	str	x21, [sp, #32]
      6c:	mov	x21, x0
      70:	bl	0 <grub_file_read>
      74:	cmp	x0, #0x0
      78:	b.lt	108 <grub_mod_init-0x410>  // b.tstop
      7c:	b.ne	ac <grub_mod_init-0x46c>  // b.any
      80:	mov	x19, #0x0                   	// #0
      84:	ldr	x1, [x21, #24]
      88:	sub	x1, x1, x0
      8c:	mov	x0, x21
      90:	add	x1, x1, x19
      94:	bl	0 <grub_file_seek>
      98:	mov	x0, x19
      9c:	ldp	x19, x20, [sp, #16]
      a0:	ldr	x21, [sp, #32]
      a4:	ldp	x29, x30, [sp], #64
      a8:	ret
      ac:	ldrb	w2, [sp, #48]
      b0:	cmp	x0, #0x9
      b4:	mov	x1, #0x9                   	// #9
      b8:	csel	x1, x0, x1, ls  // ls = plast
      bc:	and	x2, x2, #0x7f
      c0:	str	x2, [x20]
      c4:	add	x2, sp, #0x30
      c8:	mov	x19, #0x0                   	// #0
      cc:	mov	w5, #0x7                   	// #7
      d0:	ldrsb	w3, [x2]
      d4:	add	x19, x19, #0x1
      d8:	tbz	w3, #31, 84 <grub_mod_init-0x494>
      dc:	cmp	x1, x19
      e0:	b.eq	80 <grub_mod_init-0x498>  // b.none
      e4:	ldrb	w3, [x2, #1]!
      e8:	cbz	w3, 80 <grub_mod_init-0x498>
      ec:	mul	w4, w19, w5
      f0:	and	x3, x3, #0x7f
      f4:	lsl	x3, x3, x4
      f8:	ldr	x4, [x20]
      fc:	orr	x3, x4, x3
     100:	str	x3, [x20]
     104:	b	d0 <grub_mod_init-0x448>
     108:	mov	x0, #0xffffffffffffffff    	// #-1
     10c:	b	9c <grub_mod_init-0x47c>
     110:	stp	x29, x30, [sp, #-112]!
     114:	mov	x29, sp
     118:	stp	x19, x20, [sp, #16]
     11c:	ldr	x19, [x0, #80]
     120:	stp	x23, x24, [sp, #48]
     124:	mov	x23, x1
     128:	stp	x27, x28, [sp, #80]
     12c:	mov	x28, x0
     130:	ldr	x1, [x0, #24]
     134:	stp	x21, x22, [sp, #32]
     138:	mov	x22, x2
     13c:	ldr	x0, [x19, #16448]
     140:	stp	x25, x26, [sp, #64]
     144:	cmp	x1, x0
     148:	b.cs	16c <grub_mod_init-0x3ac>  // b.hs, b.nlast
     14c:	ldr	x0, [x19, #56]
     150:	bl	2458 <xz_dec_reset>
     154:	stp	xzr, xzr, [x19, #16]
     158:	mov	x1, #0x0                   	// #0
     15c:	ldr	x0, [x19]
     160:	str	xzr, [x19, #40]
     164:	str	xzr, [x19, #16448]
     168:	bl	0 <grub_file_seek>
     16c:	ldr	x24, [x19, #16448]
     170:	add	x26, x19, #0x40
     174:	add	x27, x19, #0x8
     178:	mov	x20, #0x0                   	// #0
     17c:	mov	x25, #0x2001                	// #8193
     180:	cbz	x22, 25c <grub_mod_init-0x2bc>
     184:	ldr	x1, [x28, #24]
     188:	sub	x0, x20, x24
     18c:	add	x1, x22, x1
     190:	add	x1, x1, x0
     194:	mov	x0, #0x2000                	// #8192
     198:	cmp	x1, x25
     19c:	csel	x1, x1, x0, cc  // cc = lo, ul, last
     1a0:	str	x1, [x19, #48]
     1a4:	ldr	x1, [x19, #16]
     1a8:	ldr	x0, [x19, #24]
     1ac:	cmp	x1, x0
     1b0:	b.ne	1cc <grub_mod_init-0x34c>  // b.any
     1b4:	ldr	x0, [x19]
     1b8:	mov	x1, x26
     1bc:	mov	x2, #0x2000                	// #8192
     1c0:	bl	0 <grub_file_read>
     1c4:	tbnz	x0, #63, 1f8 <grub_mod_init-0x320>
     1c8:	stp	xzr, x0, [x19, #16]
     1cc:	mov	x1, x27
     1d0:	ldr	x0, [x19, #56]
     1d4:	bl	24ec <xz_dec_run>
     1d8:	mov	w4, w0
     1dc:	sub	w0, w0, #0x2
     1e0:	cmp	w0, #0x4
     1e4:	b.hi	200 <grub_mod_init-0x318>  // b.pmore
     1e8:	adrp	x0, 0 <grub_mod_init-0x518>
     1ec:	ldr	x1, [x0]
     1f0:	mov	w0, #0x1a                  	// #26
     1f4:	bl	0 <grub_error>
     1f8:	mov	x20, #0xffffffffffffffff    	// #-1
     1fc:	b	26c <grub_mod_init-0x2ac>
     200:	ldr	x1, [x19, #40]
     204:	ldr	x21, [x28, #24]
     208:	add	x24, x24, x1
     20c:	cmp	x21, x24
     210:	b.hi	250 <grub_mod_init-0x2c8>  // b.pmore
     214:	add	x21, x20, x21
     218:	str	w4, [sp, #108]
     21c:	ldr	x0, [x19, #32]
     220:	sub	x2, x24, x21
     224:	sub	x21, x21, x24
     228:	str	x2, [sp, #96]
     22c:	add	x1, x1, x21
     230:	add	x22, x22, x21
     234:	add	x1, x0, x1
     238:	mov	x0, x23
     23c:	bl	0 <grub_memmove>
     240:	ldr	x2, [sp, #96]
     244:	ldr	w4, [sp, #108]
     248:	add	x23, x23, x2
     24c:	add	x20, x20, x2
     250:	str	xzr, [x19, #40]
     254:	cmp	w4, #0x1
     258:	b.ne	180 <grub_mod_init-0x398>  // b.any
     25c:	tbnz	x20, #63, 26c <grub_mod_init-0x2ac>
     260:	ldr	x0, [x28, #24]
     264:	add	x0, x0, x20
     268:	str	x0, [x19, #16448]
     26c:	mov	x0, x20
     270:	ldp	x19, x20, [sp, #16]
     274:	ldp	x21, x22, [sp, #32]
     278:	ldp	x23, x24, [sp, #48]
     27c:	ldp	x25, x26, [sp, #64]
     280:	ldp	x27, x28, [sp, #80]
     284:	ldp	x29, x30, [sp], #112
     288:	ret
     28c:	nop
	...
     298:	stp	x29, x30, [sp, #-96]!
     29c:	mov	x29, sp
     2a0:	stp	x19, x20, [sp, #16]
     2a4:	stp	x21, x22, [sp, #32]
     2a8:	mov	x21, x0
     2ac:	str	x23, [sp, #48]
     2b0:	tbnz	w1, #17, 4f8 <grub_mod_init-0x20>
     2b4:	mov	x0, #0x68                  	// #104
     2b8:	bl	0 <grub_zalloc>
     2bc:	mov	x19, x0
     2c0:	cbz	x0, 2e0 <grub_mod_init-0x238>
     2c4:	mov	x0, #0x4048                	// #16456
     2c8:	bl	0 <grub_zalloc>
     2cc:	mov	x20, x0
     2d0:	cbnz	x0, 2f8 <grub_mod_init-0x220>
     2d4:	mov	x0, x19
     2d8:	mov	x19, #0x0                   	// #0
     2dc:	bl	0 <grub_free>
     2e0:	mov	x0, x19
     2e4:	ldp	x19, x20, [sp, #16]
     2e8:	ldp	x21, x22, [sp, #32]
     2ec:	ldr	x23, [sp, #48]
     2f0:	ldp	x29, x30, [sp], #96
     2f4:	ret
     2f8:	ldr	x0, [x21, #8]
     2fc:	str	x21, [x20]
     300:	str	x0, [x19, #8]
     304:	adrp	x0, 0 <grub_mod_init-0x518>
     308:	str	x20, [x19, #80]
     30c:	ldr	x0, [x0]
     310:	str	x0, [x19, #16]
     314:	mov	x0, #0xffffffffffffffff    	// #-1
     318:	str	x0, [x19, #64]
     31c:	mov	w0, #0x1                   	// #1
     320:	str	w0, [x19, #72]
     324:	ldr	x0, [x21, #24]
     328:	cbz	x0, 338 <grub_mod_init-0x1e0>
     32c:	mov	x0, x21
     330:	mov	x1, #0x0                   	// #0
     334:	bl	0 <grub_file_seek>
     338:	mov	w0, #0x10000               	// #65536
     33c:	bl	2e40 <xz_dec_init>
     340:	str	x0, [x20, #56]
     344:	cbnz	x0, 358 <grub_mod_init-0x1c0>
     348:	mov	x0, x19
     34c:	bl	0 <grub_free>
     350:	mov	x0, x20
     354:	b	2d8 <grub_mod_init-0x240>
     358:	add	x0, x20, #0x40
     35c:	str	x0, [x20, #8]
     360:	mov	x0, #0x2040                	// #8256
     364:	add	x0, x20, x0
     368:	str	x0, [x20, #32]
     36c:	mov	x0, #0x2000                	// #8192
     370:	mov	x2, #0xc                   	// #12
     374:	ldr	x22, [x19, #80]
     378:	str	x0, [x20, #48]
     37c:	add	x1, x22, #0x40
     380:	ldr	x0, [x22]
     384:	bl	0 <grub_file_read>
     388:	str	x0, [x22, #24]
     38c:	cmp	x0, #0xc
     390:	b.ne	4c8 <grub_mod_init-0x50>  // b.any
     394:	ldr	x0, [x22, #56]
     398:	add	x1, x22, #0x8
     39c:	bl	24ec <xz_dec_run>
     3a0:	cbnz	w0, 4c8 <grub_mod_init-0x50>
     3a4:	ldr	x22, [x19, #80]
     3a8:	ldr	x0, [x22]
     3ac:	ldr	x1, [x0, #64]
     3b0:	sub	x1, x1, #0x2
     3b4:	bl	0 <grub_file_seek>
     3b8:	ldr	x0, [x22]
     3bc:	mov	x2, #0x2                   	// #2
     3c0:	add	x1, sp, #0x48
     3c4:	bl	0 <grub_file_read>
     3c8:	mov	x2, x0
     3cc:	cmp	x0, #0x2
     3d0:	b.ne	4c8 <grub_mod_init-0x50>  // b.any
     3d4:	adrp	x0, 0 <grub_mod_init-0x518>
     3d8:	ldr	x1, [x0]
     3dc:	add	x0, sp, #0x48
     3e0:	bl	0 <grub_memcmp>
     3e4:	cbnz	w0, 4c8 <grub_mod_init-0x50>
     3e8:	ldr	x0, [x22]
     3ec:	ldr	x1, [x0, #64]
     3f0:	sub	x1, x1, #0x8
     3f4:	bl	0 <grub_file_seek>
     3f8:	ldr	x0, [x22]
     3fc:	add	x1, sp, #0x4c
     400:	mov	x2, #0x4                   	// #4
     404:	bl	0 <grub_file_read>
     408:	cmp	x0, #0x4
     40c:	b.ne	4c8 <grub_mod_init-0x50>  // b.any
     410:	ldr	w1, [sp, #76]
     414:	mov	x2, #0xfffffffffffffff4    	// #-12
     418:	ldr	x0, [x22]
     41c:	add	w1, w1, #0x1
     420:	lsl	w1, w1, #2
     424:	str	w1, [sp, #76]
     428:	sub	x1, x2, w1, uxtw
     42c:	ldr	x2, [x0, #64]
     430:	add	x1, x1, x2
     434:	bl	0 <grub_file_seek>
     438:	ldr	x0, [x22]
     43c:	add	x1, sp, #0x47
     440:	mov	x2, #0x1                   	// #1
     444:	bl	0 <grub_file_read>
     448:	cmp	x0, #0x1
     44c:	b.eq	458 <grub_mod_init-0xc0>  // b.none
     450:	ldrb	w0, [sp, #71]
     454:	cbnz	w0, 4c8 <grub_mod_init-0x50>
     458:	ldr	x0, [x22]
     45c:	add	x1, sp, #0x58
     460:	bl	50 <grub_mod_init-0x4c8>
     464:	cmp	x0, #0x0
     468:	b.le	4c8 <grub_mod_init-0x50>
     46c:	mov	x23, #0x0                   	// #0
     470:	ldr	x1, [sp, #88]
     474:	ldr	x0, [x22]
     478:	cbnz	x1, 48c <grub_mod_init-0x8c>
     47c:	str	x23, [x19, #64]
     480:	mov	x1, #0xc                   	// #12
     484:	bl	0 <grub_file_seek>
     488:	b	2e0 <grub_mod_init-0x238>
     48c:	add	x1, sp, #0x50
     490:	bl	50 <grub_mod_init-0x4c8>
     494:	cmp	x0, #0x0
     498:	b.le	4c8 <grub_mod_init-0x50>
     49c:	ldr	x0, [x22]
     4a0:	add	x1, sp, #0x50
     4a4:	bl	50 <grub_mod_init-0x4c8>
     4a8:	cmp	x0, #0x0
     4ac:	b.le	4c8 <grub_mod_init-0x50>
     4b0:	ldr	x0, [sp, #80]
     4b4:	add	x23, x23, x0
     4b8:	ldr	x0, [sp, #88]
     4bc:	sub	x0, x0, #0x1
     4c0:	str	x0, [sp, #88]
     4c4:	b	470 <grub_mod_init-0xa8>
     4c8:	adrp	x0, 0 <grub_mod_init-0x518>
     4cc:	mov	x1, #0x0                   	// #0
     4d0:	ldr	x0, [x0]
     4d4:	str	wzr, [x0]
     4d8:	mov	x0, x21
     4dc:	bl	0 <grub_file_seek>
     4e0:	ldr	x0, [x20, #56]
     4e4:	bl	2ec4 <xz_dec_end>
     4e8:	mov	x0, x20
     4ec:	bl	0 <grub_free>
     4f0:	mov	x0, x19
     4f4:	bl	0 <grub_free>
     4f8:	mov	x19, x21
     4fc:	b	2e0 <grub_mod_init-0x238>
	...

0000000000000518 <grub_mod_init>:
     518:	adrp	x0, 0 <grub_mod_init-0x518>
     51c:	adrp	x1, 0 <grub_mod_init-0x518>
     520:	ldr	x0, [x0]
     524:	ldr	x1, [x1]
     528:	str	x1, [x0, #16]
     52c:	ret
	...

0000000000000540 <grub_mod_fini>:
     540:	adrp	x0, 0 <grub_mod_init-0x518>
     544:	ldr	x0, [x0]
     548:	str	xzr, [x0, #16]
     54c:	ret
	...
     558:	mov	x7, x0
     55c:	cmp	x2, #0x4
     560:	b.ls	6ac <grub_mod_fini+0x16c>  // b.plast
     564:	ldr	w3, [x7, #16]
     568:	sub	x2, x2, #0x4
     56c:	mov	x4, #0xffffffffffffffff    	// #-1
     570:	mov	x0, #0x0                   	// #0
     574:	mov	w11, #0xfffffffb            	// #-5
     578:	adrp	x10, 0 <grub_mod_init-0x518>
     57c:	mov	w12, #0x18                  	// #24
     580:	mov	w13, #0x20                  	// #32
     584:	mov	w14, #0x1                   	// #1
     588:	ldrb	w5, [x1, x0]
     58c:	and	w5, w5, #0xfe
     590:	cmp	w5, #0xe8
     594:	b.ne	684 <grub_mod_fini+0x144>  // b.any
     598:	sub	x4, x0, x4
     59c:	add	x9, x0, #0x4
     5a0:	cmp	x4, #0x3
     5a4:	b.hi	5f8 <grub_mod_fini+0xb8>  // b.pmore
     5a8:	sub	w4, w4, #0x1
     5ac:	lsl	w3, w3, w4
     5b0:	ands	w3, w3, #0x7
     5b4:	b.eq	5fc <grub_mod_fini+0xbc>  // b.none
     5b8:	ldr	x5, [x10]
     5bc:	mov	w6, w3
     5c0:	ldrb	w4, [x5, x6]
     5c4:	add	x5, x5, #0x8
     5c8:	sub	x4, x9, x4
     5cc:	ldr	w5, [x5, x6, lsl #2]
     5d0:	ldrb	w4, [x1, x4]
     5d4:	cbz	w5, 5e8 <grub_mod_fini+0xa8>
     5d8:	sub	w4, w4, #0x1
     5dc:	and	w4, w4, #0xff
     5e0:	cmp	w4, #0xfd
     5e4:	b.ls	5fc <grub_mod_fini+0xbc>  // b.plast
     5e8:	lsl	w3, w3, #1
     5ec:	mov	x4, x0
     5f0:	orr	w3, w3, #0x1
     5f4:	b	684 <grub_mod_fini+0x144>
     5f8:	mov	w3, #0x0                   	// #0
     5fc:	ldrb	w4, [x1, x9]
     600:	sub	w4, w4, #0x1
     604:	and	w4, w4, #0xff
     608:	cmp	w4, #0xfd
     60c:	b.ls	5e8 <grub_mod_fini+0xa8>  // b.plast
     610:	add	x15, x0, #0x1
     614:	ldr	w8, [x7, #12]
     618:	mov	w16, w3
     61c:	sub	w8, w11, w8
     620:	ldr	w4, [x1, x15]
     624:	sub	w8, w8, w0
     628:	add	w4, w8, w4
     62c:	cbz	w3, 668 <grub_mod_fini+0x128>
     630:	ldr	x5, [x10]
     634:	ldrb	w5, [x5, x16]
     638:	lsl	w6, w5, #3
     63c:	sub	w5, w12, w5, lsl #3
     640:	lsr	w5, w4, w5
     644:	sub	w5, w5, #0x1
     648:	and	w5, w5, #0xff
     64c:	cmp	w5, #0xfd
     650:	b.ls	668 <grub_mod_fini+0x128>  // b.plast
     654:	sub	w5, w13, w6
     658:	lsl	w5, w14, w5
     65c:	sub	w5, w5, #0x1
     660:	eor	w4, w5, w4
     664:	b	628 <grub_mod_fini+0xe8>
     668:	and	w5, w4, #0x1ffffff
     66c:	and	w4, w4, #0x1000000
     670:	neg	w4, w4
     674:	orr	w4, w4, w5
     678:	str	w4, [x1, x15]
     67c:	mov	x4, x0
     680:	mov	x0, x9
     684:	add	x0, x0, #0x1
     688:	cmp	x2, x0
     68c:	b.hi	588 <grub_mod_fini+0x48>  // b.pmore
     690:	sub	x4, x0, x4
     694:	sub	w1, w4, #0x1
     698:	cmp	x4, #0x4
     69c:	lsl	w3, w3, w1
     6a0:	csel	w3, w3, wzr, cc  // cc = lo, ul, last
     6a4:	str	w3, [x7, #16]
     6a8:	ret
     6ac:	mov	x0, #0x0                   	// #0
     6b0:	b	6a8 <grub_mod_fini+0x168>
     6b4:	nop
	...
     6c0:	mov	x13, #0xffff000000001fff    	// #-281474976702465
     6c4:	mov	x9, x0
     6c8:	sub	x11, x1, #0x10
     6cc:	mov	x7, #0x0                   	// #0
     6d0:	adrp	x10, 0 <grub_mod_init-0x518>
     6d4:	mov	w12, #0x29                  	// #41
     6d8:	movk	x13, #0xffee, lsl #32
     6dc:	mov	w14, #0x1                   	// #1
     6e0:	mov	x0, x7
     6e4:	add	x7, x7, #0x10
     6e8:	cmp	x7, x2
     6ec:	b.ls	748 <grub_mod_fini+0x208>  // b.plast
     6f0:	ret
     6f4:	ldr	x4, [x10]
     6f8:	sub	w16, w7, #0x10
     6fc:	ldrb	w3, [x11, x7]
     700:	mov	w8, #0x0                   	// #0
     704:	add	x4, x4, #0x28
     708:	and	x3, x3, #0x1f
     70c:	ldrb	w15, [x4, x3]
     710:	mul	w4, w8, w12
     714:	lsr	w3, w15, w8
     718:	add	w4, w4, #0x5
     71c:	tbnz	w3, #0, 790 <grub_mod_fini+0x250>
     720:	add	w8, w8, #0x1
     724:	cmp	w8, #0x3
     728:	b.ne	710 <grub_mod_fini+0x1d0>  // b.any
     72c:	mov	x0, x7
     730:	add	x7, x7, #0x10
     734:	cmp	x7, x2
     738:	b.ls	6f4 <grub_mod_fini+0x1b4>  // b.plast
     73c:	ldr	x19, [sp, #16]
     740:	ldp	x29, x30, [sp], #32
     744:	ret
     748:	ldr	x4, [x10]
     74c:	sub	w16, w7, #0x10
     750:	ldrb	w3, [x11, x7]
     754:	mov	w8, #0x0                   	// #0
     758:	add	x4, x4, #0x28
     75c:	and	x3, x3, #0x1f
     760:	ldrb	w15, [x4, x3]
     764:	mul	w4, w8, w12
     768:	lsr	w3, w15, w8
     76c:	add	w4, w4, #0x5
     770:	tbnz	w3, #0, 784 <grub_mod_fini+0x244>
     774:	add	w8, w8, #0x1
     778:	cmp	w8, #0x3
     77c:	b.ne	764 <grub_mod_fini+0x224>  // b.any
     780:	b	6e0 <grub_mod_fini+0x1a0>
     784:	stp	x29, x30, [sp, #-32]!
     788:	mov	x29, sp
     78c:	str	x19, [sp, #16]
     790:	and	w18, w4, #0x7
     794:	lsr	w4, w4, #3
     798:	add	x4, x4, x0
     79c:	mov	x19, #0x0                   	// #0
     7a0:	add	x4, x1, x4
     7a4:	mov	x3, #0x0                   	// #0
     7a8:	ldrb	w5, [x4, x3]
     7ac:	lsl	w6, w3, #3
     7b0:	add	x3, x3, #0x1
     7b4:	cmp	x3, #0x6
     7b8:	lsl	x5, x5, x6
     7bc:	orr	x19, x19, x5
     7c0:	b.ne	7a8 <grub_mod_fini+0x268>  // b.any
     7c4:	lsr	x5, x19, x18
     7c8:	ubfx	x3, x5, #37, #4
     7cc:	cmp	x3, #0x5
     7d0:	b.ne	720 <grub_mod_fini+0x1e0>  // b.any
     7d4:	ubfx	x17, x5, #9, #3
     7d8:	tst	x5, #0xe00
     7dc:	b.ne	720 <grub_mod_fini+0x1e0>  // b.any
     7e0:	lsr	x3, x5, #36
     7e4:	ubfx	x6, x5, #13, #20
     7e8:	lsl	w30, w14, w18
     7ec:	sub	w30, w30, #0x1
     7f0:	ubfiz	w3, w3, #20, #1
     7f4:	orr	w3, w3, w6
     7f8:	ldr	w6, [x9]
     7fc:	sxtw	x30, w30
     800:	add	w6, w16, w6
     804:	lsl	w3, w3, #4
     808:	sub	w3, w3, w6
     80c:	and	x6, x5, x13
     810:	and	x30, x30, x19
     814:	lsr	w3, w3, #4
     818:	ubfiz	x5, x3, #13, #20
     81c:	lsl	x3, x3, #16
     820:	and	x3, x3, #0x1000000000
     824:	orr	x3, x5, x3
     828:	orr	x3, x3, x6
     82c:	lsl	x3, x3, x18
     830:	orr	x3, x3, x30
     834:	lsl	w5, w17, #3
     838:	lsr	x5, x3, x5
     83c:	strb	w5, [x4, x17]
     840:	add	x17, x17, #0x1
     844:	cmp	x17, #0x6
     848:	b.ne	834 <grub_mod_fini+0x2f4>  // b.any
     84c:	b	720 <grub_mod_fini+0x1e0>
	...
     858:	mov	x6, x0
     85c:	mov	w7, #0xfffffff8            	// #-8
     860:	mov	x0, #0x0                   	// #0
     864:	add	x5, x0, #0x4
     868:	cmp	x5, x2
     86c:	b.ls	874 <grub_mod_fini+0x334>  // b.plast
     870:	ret
     874:	ldrb	w0, [x1, #3]
     878:	cmp	w0, #0xeb
     87c:	b.ne	8c8 <grub_mod_fini+0x388>  // b.any
     880:	ldrb	w4, [x1, #2]
     884:	ldrb	w3, [x1, #1]
     888:	lsl	w4, w4, #16
     88c:	orr	w3, w4, w3, lsl #8
     890:	ldrb	w4, [x1]
     894:	orr	w3, w3, w4
     898:	sub	w4, w5, #0x4
     89c:	lsl	w3, w3, #2
     8a0:	sub	w4, w3, w4
     8a4:	ldr	w3, [x6]
     8a8:	sub	w3, w7, w3
     8ac:	add	w3, w3, w4
     8b0:	lsr	w0, w3, #2
     8b4:	strb	w0, [x1]
     8b8:	lsr	w0, w3, #10
     8bc:	lsr	w3, w3, #18
     8c0:	strb	w0, [x1, #1]
     8c4:	strb	w3, [x1, #2]
     8c8:	add	x1, x1, #0x4
     8cc:	mov	x0, x5
     8d0:	b	864 <grub_mod_fini+0x324>
     8d4:	mov	x5, x0
     8d8:	mov	w9, #0xfffffffc            	// #-4
     8dc:	mov	x0, #0x0                   	// #0
     8e0:	add	x3, x0, #0x4
     8e4:	cmp	x3, x2
     8e8:	b.ls	8f0 <grub_mod_fini+0x3b0>  // b.plast
     8ec:	ret
     8f0:	add	x8, x0, #0x1
     8f4:	ldrb	w3, [x1, x8]
     8f8:	and	w4, w3, #0xf8
     8fc:	cmp	w4, #0xf0
     900:	b.ne	978 <grub_mod_fini+0x438>  // b.any
     904:	add	x7, x0, #0x3
     908:	ldrb	w4, [x1, x7]
     90c:	and	w6, w4, #0xf8
     910:	cmp	w6, #0xf8
     914:	b.ne	978 <grub_mod_fini+0x438>  // b.any
     918:	add	x6, x0, #0x2
     91c:	ubfiz	w4, w4, #8, #3
     920:	ubfiz	w3, w3, #19, #3
     924:	orr	w3, w3, w4
     928:	ldrb	w4, [x1, x0]
     92c:	ldrb	w10, [x1, x6]
     930:	orr	w4, w10, w4, lsl #11
     934:	orr	w3, w3, w4
     938:	ldr	w4, [x5]
     93c:	lsl	w3, w3, #1
     940:	sub	w4, w9, w4
     944:	sub	w3, w3, w0
     948:	add	w3, w4, w3
     94c:	ubfx	x4, x3, #20, #3
     950:	orr	w4, w4, #0xfffffff0
     954:	strb	w4, [x1, x8]
     958:	lsr	w4, w3, #12
     95c:	strb	w4, [x1, x0]
     960:	lsr	w0, w3, #9
     964:	lsr	w3, w3, #1
     968:	orr	w0, w0, #0xfffffff8
     96c:	strb	w0, [x1, x7]
     970:	mov	x0, x6
     974:	strb	w3, [x1, x6]
     978:	add	x0, x0, #0x2
     97c:	b	8e0 <grub_mod_fini+0x3a0>
     980:	and	x6, x2, #0xfffffffffffffffc
     984:	mov	w7, #0x1                   	// #1
     988:	add	x6, x1, x6
     98c:	mov	x4, x1
     990:	movk	w7, #0x4800, lsl #16
     994:	cmp	x4, x6
     998:	b.ne	9a4 <grub_mod_fini+0x464>  // b.any
     99c:	and	x0, x2, #0xfffffffffffffffc
     9a0:	ret
     9a4:	ldr	w3, [x4]
     9a8:	rev	w3, w3
     9ac:	and	w5, w3, #0xfc000003
     9b0:	cmp	w5, w7
     9b4:	b.ne	9f0 <grub_mod_fini+0x4b0>  // b.any
     9b8:	ldr	w8, [x0]
     9bc:	sub	w5, w4, w1
     9c0:	and	w3, w3, #0x3fffffc
     9c4:	add	w5, w5, w8
     9c8:	sub	w3, w3, w5
     9cc:	and	w3, w3, #0x3fffffc
     9d0:	orr	w3, w3, w7
     9d4:	strb	w3, [x4, #3]
     9d8:	lsr	w5, w3, #24
     9dc:	strb	w5, [x4]
     9e0:	lsr	w5, w3, #16
     9e4:	strb	w5, [x4, #1]
     9e8:	lsr	w5, w3, #8
     9ec:	strb	w5, [x4, #2]
     9f0:	add	x4, x4, #0x4
     9f4:	b	994 <grub_mod_fini+0x454>
     9f8:	mov	x6, x0
     9fc:	mov	w7, #0x1ff                 	// #511
     a00:	mov	x0, #0x0                   	// #0
     a04:	mov	w8, #0x40000000            	// #1073741824
     a08:	add	x5, x0, #0x4
     a0c:	cmp	x5, x2
     a10:	b.ls	a18 <grub_mod_fini+0x4d8>  // b.plast
     a14:	ret
     a18:	ldr	w3, [x1]
     a1c:	rev	w3, w3
     a20:	lsr	w0, w3, #22
     a24:	cmp	w0, #0x100
     a28:	ccmp	w0, w7, #0x4, ne  // ne = any
     a2c:	b.ne	a78 <grub_mod_fini+0x538>  // b.any
     a30:	ldr	w0, [x6]
     a34:	sub	w4, w5, #0x4
     a38:	lsl	w3, w3, #2
     a3c:	add	w4, w4, w0
     a40:	sub	w3, w3, w4
     a44:	lsr	w3, w3, #2
     a48:	and	w4, w3, #0x400000
     a4c:	and	w3, w3, #0x3fffff
     a50:	sub	w4, w8, w4
     a54:	orr	w3, w4, w3
     a58:	orr	w3, w3, #0x40000000
     a5c:	strb	w3, [x1, #3]
     a60:	lsr	w0, w3, #24
     a64:	strb	w0, [x1]
     a68:	lsr	w0, w3, #16
     a6c:	strb	w0, [x1, #1]
     a70:	lsr	w0, w3, #8
     a74:	strb	w0, [x1, #2]
     a78:	add	x1, x1, #0x4
     a7c:	mov	x0, x5
     a80:	b	a08 <grub_mod_fini+0x4c8>
     a84:	stp	x29, x30, [sp, #-32]!
     a88:	mov	x29, sp
     a8c:	stp	x19, x20, [sp, #16]
     a90:	mov	x19, x0
     a94:	mov	x20, x2
     a98:	ldr	w0, [x0]
     a9c:	ldr	x2, [x2]
     aa0:	sub	w0, w0, #0x4
     aa4:	cmp	w0, #0x5
     aa8:	add	x1, x1, x2
     aac:	sub	x2, x3, x2
     ab0:	b.hi	b34 <grub_mod_fini+0x5f4>  // b.pmore
     ab4:	adrp	x3, 0 <grub_mod_init-0x518>
     ab8:	ldr	x3, [x3]
     abc:	ldrb	w0, [x3, w0, uxtw]
     ac0:	adr	x3, acc <grub_mod_fini+0x58c>
     ac4:	add	x0, x3, w0, sxtb #2
     ac8:	br	x0
     acc:	mov	x0, x19
     ad0:	bl	558 <grub_mod_fini+0x18>
     ad4:	ldr	x1, [x20]
     ad8:	add	x1, x1, x0
     adc:	str	x1, [x20]
     ae0:	ldr	w1, [x19, #12]
     ae4:	add	w0, w1, w0
     ae8:	str	w0, [x19, #12]
     aec:	ldp	x19, x20, [sp, #16]
     af0:	ldp	x29, x30, [sp], #32
     af4:	ret
     af8:	add	x0, x19, #0xc
     afc:	bl	980 <grub_mod_fini+0x440>
     b00:	b	ad4 <grub_mod_fini+0x594>
     b04:	add	x0, x19, #0xc
     b08:	bl	6c0 <grub_mod_fini+0x180>
     b0c:	b	ad4 <grub_mod_fini+0x594>
     b10:	add	x0, x19, #0xc
     b14:	bl	858 <grub_mod_fini+0x318>
     b18:	b	ad4 <grub_mod_fini+0x594>
     b1c:	add	x0, x19, #0xc
     b20:	bl	8d4 <grub_mod_fini+0x394>
     b24:	b	ad4 <grub_mod_fini+0x594>
     b28:	add	x0, x19, #0xc
     b2c:	bl	9f8 <grub_mod_fini+0x4b8>
     b30:	b	ad4 <grub_mod_fini+0x594>
     b34:	mov	x0, #0x0                   	// #0
     b38:	b	ad4 <grub_mod_fini+0x594>
     b3c:	nop
	...
     b48:	stp	x29, x30, [sp, #-48]!
     b4c:	mov	x29, sp
     b50:	stp	x21, x22, [sp, #32]
     b54:	mov	x21, x1
     b58:	add	x22, x0, #0x40
     b5c:	stp	x19, x20, [sp, #16]
     b60:	mov	x20, x0
     b64:	ldr	x1, [x0, #48]
     b68:	ldp	x3, x0, [x21, #24]
     b6c:	ldr	x19, [x21, #40]
     b70:	sub	x19, x19, x0
     b74:	add	x0, x3, x0
     b78:	cmp	x19, x1
     b7c:	csel	x19, x19, x1, ls  // ls = plast
     b80:	mov	x1, x22
     b84:	mov	x2, x19
     b88:	bl	0 <grub_memmove>
     b8c:	ldr	x0, [x21, #32]
     b90:	add	x1, x22, x19
     b94:	ldr	x2, [x20, #56]
     b98:	add	x0, x0, x19
     b9c:	str	x0, [x21, #32]
     ba0:	ldr	x0, [x20, #48]
     ba4:	sub	x2, x2, x19
     ba8:	sub	x0, x0, x19
     bac:	stp	x0, x2, [x20, #48]
     bb0:	mov	x0, x22
     bb4:	ldp	x19, x20, [sp, #16]
     bb8:	ldp	x21, x22, [sp, #32]
     bbc:	ldp	x29, x30, [sp], #48
     bc0:	b	0 <grub_memmove>

0000000000000bc4 <xz_dec_bcj_run>:
     bc4:	stp	x29, x30, [sp, #-64]!
     bc8:	mov	x29, sp
     bcc:	stp	x21, x22, [sp, #32]
     bd0:	mov	x21, x1
     bd4:	ldr	x1, [x0, #48]
     bd8:	stp	x19, x20, [sp, #16]
     bdc:	mov	x19, x0
     be0:	mov	x20, x2
     be4:	cbnz	x1, c94 <xz_dec_bcj_run+0xd0>
     be8:	ldp	x0, x1, [x20, #32]
     bec:	ldr	x2, [x19, #56]
     bf0:	sub	x1, x1, x0
     bf4:	cmp	x2, x1
     bf8:	b.cs	c84 <xz_dec_bcj_run+0xc0>  // b.hs, b.nlast
     bfc:	ldr	x3, [x20, #24]
     c00:	add	x22, x19, #0x40
     c04:	mov	x1, x22
     c08:	str	x0, [sp, #56]
     c0c:	add	x0, x3, x0
     c10:	bl	0 <grub_memmove>
     c14:	ldr	x0, [x20, #32]
     c18:	ldr	x1, [x19, #56]
     c1c:	add	x0, x0, x1
     c20:	str	x0, [x20, #32]
     c24:	mov	x1, x20
     c28:	mov	x0, x21
     c2c:	bl	1944 <xz_dec_lzma2_run>
     c30:	str	w0, [x19, #4]
     c34:	cmp	w0, #0x1
     c38:	b.eq	c48 <xz_dec_bcj_run+0x84>  // b.none
     c3c:	cbnz	w0, ca8 <xz_dec_bcj_run+0xe4>
     c40:	ldr	w0, [x19, #8]
     c44:	cbnz	w0, ca4 <xz_dec_bcj_run+0xe0>
     c48:	ldp	x1, x3, [x20, #24]
     c4c:	mov	x0, x19
     c50:	add	x2, sp, #0x38
     c54:	bl	a84 <grub_mod_fini+0x544>
     c58:	ldr	w0, [x19, #4]
     c5c:	cmp	w0, #0x1
     c60:	b.eq	cc4 <xz_dec_bcj_run+0x100>  // b.none
     c64:	ldp	x1, x2, [x20, #24]
     c68:	ldr	x0, [sp, #56]
     c6c:	sub	x2, x2, x0
     c70:	str	x2, [x19, #56]
     c74:	str	x0, [x20, #32]
     c78:	add	x1, x1, x0
     c7c:	mov	x0, x22
     c80:	bl	0 <grub_memmove>
     c84:	ldr	x0, [x19, #56]
     c88:	cbnz	x0, ccc <xz_dec_bcj_run+0x108>
     c8c:	ldr	w0, [x19, #4]
     c90:	b	ca8 <xz_dec_bcj_run+0xe4>
     c94:	mov	x1, x2
     c98:	bl	b48 <grub_mod_fini+0x608>
     c9c:	ldr	x0, [x19, #48]
     ca0:	cbz	x0, cb8 <xz_dec_bcj_run+0xf4>
     ca4:	mov	w0, #0x0                   	// #0
     ca8:	ldp	x19, x20, [sp, #16]
     cac:	ldp	x21, x22, [sp, #32]
     cb0:	ldp	x29, x30, [sp], #64
     cb4:	ret
     cb8:	ldr	w0, [x19, #4]
     cbc:	cmp	w0, #0x1
     cc0:	b.ne	be8 <xz_dec_bcj_run+0x24>  // b.any
     cc4:	mov	w0, #0x1                   	// #1
     cc8:	b	ca8 <xz_dec_bcj_run+0xe4>
     ccc:	ldr	x1, [x20, #24]
     cd0:	str	x1, [x19, #24]
     cd4:	ldr	x1, [x20, #32]
     cd8:	str	x1, [x19, #32]
     cdc:	ldr	x1, [x20, #40]
     ce0:	str	x1, [x19, #40]
     ce4:	add	x22, x19, #0x40
     ce8:	stp	x22, x0, [x20, #24]
     cec:	mov	x0, #0x10                  	// #16
     cf0:	str	x0, [x20, #40]
     cf4:	mov	x1, x20
     cf8:	mov	x0, x21
     cfc:	bl	1944 <xz_dec_lzma2_run>
     d00:	cmp	w0, #0x1
     d04:	ldr	x3, [x20, #32]
     d08:	str	w0, [x19, #4]
     d0c:	str	x3, [x19, #56]
     d10:	ldr	x1, [x19, #24]
     d14:	str	x1, [x20, #24]
     d18:	ldr	x1, [x19, #32]
     d1c:	str	x1, [x20, #32]
     d20:	ldr	x1, [x19, #40]
     d24:	str	x1, [x20, #40]
     d28:	b.hi	ca8 <xz_dec_bcj_run+0xe4>  // b.pmore
     d2c:	mov	x0, x19
     d30:	add	x2, x19, #0x30
     d34:	mov	x1, x22
     d38:	bl	a84 <grub_mod_fini+0x544>
     d3c:	ldr	w0, [x19, #4]
     d40:	cmp	w0, #0x1
     d44:	b.ne	d50 <xz_dec_bcj_run+0x18c>  // b.any
     d48:	ldr	x0, [x19, #56]
     d4c:	str	x0, [x19, #48]
     d50:	mov	x0, x19
     d54:	mov	x1, x20
     d58:	bl	b48 <grub_mod_fini+0x608>
     d5c:	ldr	x0, [x19, #48]
     d60:	cbz	x0, c8c <xz_dec_bcj_run+0xc8>
     d64:	b	ca4 <xz_dec_bcj_run+0xe0>

0000000000000d68 <xz_dec_bcj_create>:
     d68:	stp	x29, x30, [sp, #-32]!
     d6c:	mov	x29, sp
     d70:	str	x19, [sp, #16]
     d74:	mov	w19, w0
     d78:	mov	x0, #0x50                  	// #80
     d7c:	bl	0 <grub_malloc>
     d80:	cbz	x0, d88 <xz_dec_bcj_create+0x20>
     d84:	str	w19, [x0, #8]
     d88:	ldr	x19, [sp, #16]
     d8c:	ldp	x29, x30, [sp], #32
     d90:	ret

0000000000000d94 <xz_dec_bcj_reset>:
     d94:	and	w1, w1, #0xff
     d98:	sub	w2, w1, #0x4
     d9c:	cmp	w2, #0x5
     da0:	b.hi	db8 <xz_dec_bcj_reset+0x24>  // b.pmore
     da4:	stp	w1, wzr, [x0]
     da8:	stur	xzr, [x0, #12]
     dac:	stp	xzr, xzr, [x0, #48]
     db0:	mov	w0, #0x0                   	// #0
     db4:	ret
     db8:	mov	w0, #0x4                   	// #4
     dbc:	b	db4 <xz_dec_bcj_reset+0x20>
     dc0:	ldr	w4, [x0, #152]
     dc4:	mov	w5, #0xffffff              	// #16777215
     dc8:	add	x3, x0, #0x98
     dcc:	cmp	w4, w5
     dd0:	b.hi	dfc <xz_dec_bcj_reset+0x68>  // b.pmore
     dd4:	lsl	w4, w4, #8
     dd8:	ldr	w5, [x3, #4]
     ddc:	ldr	x6, [x3, #16]
     de0:	str	w4, [x0, #152]
     de4:	ldr	x4, [x3, #24]
     de8:	add	x7, x4, #0x1
     dec:	str	x7, [x3, #24]
     df0:	ldrb	w4, [x6, x4]
     df4:	add	w4, w4, w5, lsl #8
     df8:	str	w4, [x3, #4]
     dfc:	ldr	w4, [x0, #152]
     e00:	ldrh	w6, [x1]
     e04:	lsr	w5, w4, #11
     e08:	mul	w7, w5, w6
     e0c:	ldr	w5, [x3, #4]
     e10:	cmp	w7, w5
     e14:	b.ls	ed0 <xz_dec_bcj_reset+0x13c>  // b.plast
     e18:	mov	w4, #0x800                 	// #2048
     e1c:	sub	w4, w4, w6
     e20:	str	w7, [x0, #152]
     e24:	add	w6, w6, w4, asr #5
     e28:	mov	x4, #0x4                   	// #4
     e2c:	add	x2, x4, w2, uxtw #4
     e30:	strh	w6, [x1]
     e34:	add	x1, x1, x2
     e38:	mov	w2, #0x2                   	// #2
     e3c:	mov	w6, #0x8                   	// #8
     e40:	str	w2, [x0, #224]
     e44:	mov	w2, #0x1                   	// #1
     e48:	mov	w10, #0xffffff              	// #16777215
     e4c:	mov	w11, #0x800                 	// #2048
     e50:	ldr	w4, [x3]
     e54:	add	x9, x1, w2, uxtw #1
     e58:	cmp	w4, w10
     e5c:	b.hi	e88 <xz_dec_bcj_reset+0xf4>  // b.pmore
     e60:	lsl	w4, w4, #8
     e64:	str	w4, [x3]
     e68:	ldr	x4, [x3, #24]
     e6c:	ldr	x7, [x3, #16]
     e70:	add	x8, x4, #0x1
     e74:	str	x8, [x3, #24]
     e78:	ldr	w5, [x3, #4]
     e7c:	ldrb	w4, [x7, x4]
     e80:	add	w4, w4, w5, lsl #8
     e84:	str	w4, [x3, #4]
     e88:	ldp	w8, w7, [x3]
     e8c:	lsl	w2, w2, #1
     e90:	ldrh	w4, [x9]
     e94:	lsr	w5, w8, #11
     e98:	mul	w5, w5, w4
     e9c:	cmp	w5, w7
     ea0:	b.ls	f88 <xz_dec_bcj_reset+0x1f4>  // b.plast
     ea4:	str	w5, [x3]
     ea8:	sub	w5, w11, w4
     eac:	add	w4, w4, w5, asr #5
     eb0:	strh	w4, [x9]
     eb4:	cmp	w6, w2
     eb8:	b.hi	e50 <xz_dec_bcj_reset+0xbc>  // b.pmore
     ebc:	ldr	w1, [x0, #224]
     ec0:	sub	w1, w1, w6
     ec4:	add	w2, w1, w2
     ec8:	str	w2, [x0, #224]
     ecc:	ret
     ed0:	sub	w4, w4, w7
     ed4:	str	w4, [x0, #152]
     ed8:	sub	w5, w5, w7
     edc:	str	w5, [x3, #4]
     ee0:	sub	w6, w6, w6, lsr #5
     ee4:	strh	w6, [x1]
     ee8:	mov	w6, #0xffffff              	// #16777215
     eec:	cmp	w4, w6
     ef0:	b.hi	f18 <xz_dec_bcj_reset+0x184>  // b.pmore
     ef4:	lsl	w4, w4, #8
     ef8:	ldr	x6, [x3, #16]
     efc:	str	w4, [x0, #152]
     f00:	ldr	x4, [x3, #24]
     f04:	add	x7, x4, #0x1
     f08:	str	x7, [x3, #24]
     f0c:	ldrb	w4, [x6, x4]
     f10:	add	w5, w4, w5, lsl #8
     f14:	str	w5, [x3, #4]
     f18:	ldr	w7, [x0, #152]
     f1c:	ldrh	w4, [x1, #2]
     f20:	ldr	w6, [x3, #4]
     f24:	lsr	w5, w7, #11
     f28:	mul	w5, w5, w4
     f2c:	cmp	w5, w6
     f30:	b.ls	f5c <xz_dec_bcj_reset+0x1c8>  // b.plast
     f34:	ubfiz	x2, x2, #4, #32
     f38:	str	w5, [x0, #152]
     f3c:	mov	w5, #0x800                 	// #2048
     f40:	sub	w5, w5, w4
     f44:	add	x2, x2, #0x104
     f48:	add	w4, w4, w5, asr #5
     f4c:	strh	w4, [x1, #2]
     f50:	add	x1, x1, x2
     f54:	mov	w2, #0xa                   	// #10
     f58:	b	e3c <xz_dec_bcj_reset+0xa8>
     f5c:	sub	w7, w7, w5
     f60:	str	w7, [x0, #152]
     f64:	sub	w5, w6, w5
     f68:	str	w5, [x3, #4]
     f6c:	sub	w4, w4, w4, lsr #5
     f70:	strh	w4, [x1, #2]
     f74:	mov	w2, #0x12                  	// #18
     f78:	add	x1, x1, #0x204
     f7c:	mov	w6, #0x100                 	// #256
     f80:	str	w2, [x0, #224]
     f84:	b	e44 <xz_dec_bcj_reset+0xb0>
     f88:	sub	w8, w8, w5
     f8c:	sub	w5, w7, w5
     f90:	stp	w8, w5, [x3]
     f94:	sub	w4, w4, w4, lsr #5
     f98:	add	w2, w2, #0x1
     f9c:	strh	w4, [x9]
     fa0:	b	eb4 <xz_dec_bcj_reset+0x120>
     fa4:	ldr	x3, [x0, #24]
     fa8:	mov	w6, w2
     fac:	cmp	x3, w2, uxtw
     fb0:	b.ls	1048 <xz_dec_bcj_reset+0x2b4>  // b.plast
     fb4:	ldr	w3, [x0, #48]
     fb8:	cmp	w3, w2
     fbc:	b.ls	1048 <xz_dec_bcj_reset+0x2b4>  // b.plast
     fc0:	ldr	x5, [x0, #16]
     fc4:	ldr	x2, [x0, #32]
     fc8:	ldr	w3, [x1]
     fcc:	sub	x2, x2, x5
     fd0:	mov	w4, w3
     fd4:	cmp	x2, w3, uxtw
     fd8:	csel	x2, x2, x4, ls  // ls = plast
     fdc:	cmp	x6, x5
     fe0:	mov	w4, w2
     fe4:	sub	w2, w3, w2
     fe8:	str	w2, [x1]
     fec:	sub	x1, x5, #0x1
     ff0:	sub	x1, x1, x6
     ff4:	b.cc	1000 <xz_dec_bcj_reset+0x26c>  // b.lo, b.ul, b.last
     ff8:	ldr	x2, [x0, #40]
     ffc:	add	x1, x1, x2
    1000:	ldr	x3, [x0, #16]
    1004:	add	x2, x1, #0x1
    1008:	ldr	x5, [x0]
    100c:	add	x6, x3, #0x1
    1010:	str	x6, [x0, #16]
    1014:	ldrb	w1, [x5, x1]
    1018:	strb	w1, [x5, x3]
    101c:	ldr	x1, [x0, #40]
    1020:	cmp	x1, x2
    1024:	csel	x1, x2, xzr, ne  // ne = any
    1028:	subs	w4, w4, #0x1
    102c:	b.ne	1000 <xz_dec_bcj_reset+0x26c>  // b.any
    1030:	ldp	x1, x2, [x0, #16]
    1034:	cmp	x2, x1
    1038:	b.cs	1040 <xz_dec_bcj_reset+0x2ac>  // b.hs, b.nlast
    103c:	str	x1, [x0, #24]
    1040:	mov	w0, #0x1                   	// #1
    1044:	b	104c <xz_dec_bcj_reset+0x2b8>
    1048:	mov	w0, #0x0                   	// #0
    104c:	ret
    1050:	add	x14, x0, #0x60
    1054:	stp	x29, x30, [sp, #-16]!
    1058:	mov	x13, x0
    105c:	mov	x29, sp
    1060:	ldr	x1, [x14, #16]
    1064:	ldr	x0, [x14, #32]
    1068:	cmp	x1, x0
    106c:	b.cs	1088 <xz_dec_bcj_reset+0x2f4>  // b.hs, b.nlast
    1070:	ldr	w0, [x13, #224]
    1074:	cbz	w0, 1088 <xz_dec_bcj_reset+0x2f4>
    1078:	ldr	w2, [x13, #208]
    107c:	add	x1, x13, #0xe0
    1080:	mov	x0, x14
    1084:	bl	fa4 <xz_dec_bcj_reset+0x210>
    1088:	add	x12, x13, #0x98
    108c:	mov	w18, #0x800                 	// #2048
    1090:	mov	w15, #0x1                   	// #1
    1094:	ldr	x3, [x14, #16]
    1098:	ldr	x1, [x14, #32]
    109c:	ldr	w0, [x12]
    10a0:	cmp	x3, x1
    10a4:	b.cs	10b4 <xz_dec_bcj_reset+0x320>  // b.hs, b.nlast
    10a8:	ldp	x1, x2, [x12, #24]
    10ac:	cmp	x1, x2
    10b0:	b.ls	10ec <xz_dec_bcj_reset+0x358>  // b.plast
    10b4:	mov	w1, #0xffffff              	// #16777215
    10b8:	cmp	w0, w1
    10bc:	b.hi	10e4 <xz_dec_bcj_reset+0x350>  // b.pmore
    10c0:	ldp	x2, x1, [x12, #16]
    10c4:	lsl	w0, w0, #8
    10c8:	str	w0, [x13, #152]
    10cc:	ldr	w0, [x12, #4]
    10d0:	add	x3, x1, #0x1
    10d4:	str	x3, [x12, #24]
    10d8:	ldrb	w1, [x2, x1]
    10dc:	add	w0, w1, w0, lsl #8
    10e0:	str	w0, [x12, #4]
    10e4:	mov	w0, #0x1                   	// #1
    10e8:	b	14d4 <xz_dec_bcj_reset+0x740>
    10ec:	ldp	w2, w4, [x13, #200]
    10f0:	mov	w5, #0xffffff              	// #16777215
    10f4:	cmp	w0, w5
    10f8:	and	w2, w2, w3
    10fc:	b.hi	1124 <xz_dec_bcj_reset+0x390>  // b.pmore
    1100:	lsl	w0, w0, #8
    1104:	str	w0, [x12]
    1108:	ldr	x0, [x12, #16]
    110c:	add	x6, x1, #0x1
    1110:	str	x6, [x12, #24]
    1114:	ldr	w5, [x12, #4]
    1118:	ldrb	w0, [x0, x1]
    111c:	add	w0, w0, w5, lsl #8
    1120:	str	w0, [x12, #4]
    1124:	ubfiz	x6, x4, #4, #32
    1128:	ldr	w0, [x12]
    112c:	add	x6, x6, w2, uxtw
    1130:	mov	w5, w4
    1134:	add	x6, x13, x6, lsl #1
    1138:	lsr	w1, w0, #11
    113c:	ldrh	w7, [x6, #228]
    1140:	mul	w8, w1, w7
    1144:	ldr	w1, [x12, #4]
    1148:	cmp	w8, w1
    114c:	b.ls	1374 <xz_dec_bcj_reset+0x5e0>  // b.plast
    1150:	sub	w0, w18, w7
    1154:	str	w8, [x12]
    1158:	sub	x2, x3, #0x1
    115c:	add	w7, w7, w0, asr #5
    1160:	strh	w7, [x6, #228]
    1164:	cbnz	x3, 1254 <xz_dec_bcj_reset+0x4c0>
    1168:	ldr	x0, [x14, #40]
    116c:	sub	x0, x0, #0x1
    1170:	ldr	x6, [x14, #24]
    1174:	ldr	x8, [x14]
    1178:	cbz	x6, 125c <xz_dec_bcj_reset+0x4c8>
    117c:	ldrb	w1, [x8, x0]
    1180:	ldp	w7, w0, [x13, #192]
    1184:	cmp	w4, #0x6
    1188:	and	x0, x0, x3
    118c:	lsl	x5, x0, x7
    1190:	mov	w0, #0x8                   	// #8
    1194:	sub	w0, w0, w7
    1198:	lsr	w0, w1, w0
    119c:	add	w0, w0, w5
    11a0:	mov	w1, #0x600                 	// #1536
    11a4:	umaddl	x0, w0, w1, x13
    11a8:	add	x0, x0, #0xf50
    11ac:	b.hi	1280 <xz_dec_bcj_reset+0x4ec>  // b.pmore
    11b0:	mov	w1, #0x1                   	// #1
    11b4:	mov	w9, #0xffffff              	// #16777215
    11b8:	ldr	w2, [x12]
    11bc:	ubfiz	x7, x1, #1, #32
    11c0:	cmp	w2, w9
    11c4:	b.hi	11f0 <xz_dec_bcj_reset+0x45c>  // b.pmore
    11c8:	lsl	w2, w2, #8
    11cc:	str	w2, [x12]
    11d0:	ldr	x2, [x12, #24]
    11d4:	ldr	x5, [x12, #16]
    11d8:	add	x6, x2, #0x1
    11dc:	str	x6, [x12, #24]
    11e0:	ldr	w4, [x12, #4]
    11e4:	ldrb	w2, [x5, x2]
    11e8:	add	w2, w2, w4, lsl #8
    11ec:	str	w2, [x12, #4]
    11f0:	ldp	w6, w5, [x12]
    11f4:	lsl	w1, w1, #1
    11f8:	ldrh	w2, [x0, x7]
    11fc:	lsr	w4, w6, #11
    1200:	mul	w4, w4, w2
    1204:	cmp	w4, w5
    1208:	b.ls	1264 <xz_dec_bcj_reset+0x4d0>  // b.plast
    120c:	str	w4, [x12]
    1210:	sub	w4, w18, w2
    1214:	add	w2, w2, w4, asr #5
    1218:	strh	w2, [x0, x7]
    121c:	cmp	w1, #0xff
    1220:	b.ls	11b8 <xz_dec_bcj_reset+0x424>  // b.plast
    1224:	add	x0, x3, #0x1
    1228:	str	x0, [x14, #16]
    122c:	strb	w1, [x8, x3]
    1230:	ldp	x0, x1, [x14, #16]
    1234:	cmp	x1, x0
    1238:	b.cs	1240 <xz_dec_bcj_reset+0x4ac>  // b.hs, b.nlast
    123c:	str	x0, [x14, #24]
    1240:	ldr	w0, [x13, #204]
    1244:	cmp	w0, #0x3
    1248:	b.hi	135c <xz_dec_bcj_reset+0x5c8>  // b.pmore
    124c:	str	wzr, [x13, #204]
    1250:	b	1094 <xz_dec_bcj_reset+0x300>
    1254:	mov	x0, x2
    1258:	b	1170 <xz_dec_bcj_reset+0x3dc>
    125c:	mov	w1, #0x0                   	// #0
    1260:	b	1180 <xz_dec_bcj_reset+0x3ec>
    1264:	sub	w6, w6, w4
    1268:	sub	w4, w5, w4
    126c:	stp	w6, w4, [x12]
    1270:	sub	w2, w2, w2, lsr #5
    1274:	add	w1, w1, #0x1
    1278:	strh	w2, [x0, x7]
    127c:	b	121c <xz_dec_bcj_reset+0x488>
    1280:	ldr	w4, [x13, #208]
    1284:	sub	x1, x2, x4
    1288:	cmp	x3, x4
    128c:	b.hi	1298 <xz_dec_bcj_reset+0x504>  // b.pmore
    1290:	ldr	x2, [x14, #40]
    1294:	add	x1, x1, x2
    1298:	cbz	x6, 1334 <xz_dec_bcj_reset+0x5a0>
    129c:	ldrb	w10, [x8, x1]
    12a0:	lsl	w10, w10, #1
    12a4:	mov	w6, #0x100                 	// #256
    12a8:	mov	w1, #0x1                   	// #1
    12ac:	mov	w16, #0xffffff              	// #16777215
    12b0:	and	w11, w10, w6
    12b4:	add	w2, w6, w1
    12b8:	ldr	w4, [x12]
    12bc:	add	w2, w2, w11
    12c0:	lsl	w10, w10, #1
    12c4:	lsl	x2, x2, #1
    12c8:	cmp	w4, w16
    12cc:	b.hi	12f8 <xz_dec_bcj_reset+0x564>  // b.pmore
    12d0:	lsl	w4, w4, #8
    12d4:	str	w4, [x12]
    12d8:	ldr	x4, [x12, #24]
    12dc:	ldr	x7, [x12, #16]
    12e0:	add	x9, x4, #0x1
    12e4:	str	x9, [x12, #24]
    12e8:	ldr	w5, [x12, #4]
    12ec:	ldrb	w4, [x7, x4]
    12f0:	add	w4, w4, w5, lsl #8
    12f4:	str	w4, [x12, #4]
    12f8:	ldp	w9, w7, [x12]
    12fc:	lsl	w1, w1, #1
    1300:	ldrh	w4, [x0, x2]
    1304:	lsr	w5, w9, #11
    1308:	mul	w5, w5, w4
    130c:	cmp	w5, w7
    1310:	b.ls	133c <xz_dec_bcj_reset+0x5a8>  // b.plast
    1314:	str	w5, [x12]
    1318:	sub	w5, w18, w4
    131c:	bic	w6, w6, w11
    1320:	add	w4, w4, w5, asr #5
    1324:	strh	w4, [x0, x2]
    1328:	cmp	w1, #0xff
    132c:	b.ls	12b0 <xz_dec_bcj_reset+0x51c>  // b.plast
    1330:	b	1224 <xz_dec_bcj_reset+0x490>
    1334:	mov	w10, #0x0                   	// #0
    1338:	b	12a0 <xz_dec_bcj_reset+0x50c>
    133c:	sub	w9, w9, w5
    1340:	sub	w5, w7, w5
    1344:	stp	w9, w5, [x12]
    1348:	sub	w4, w4, w4, lsr #5
    134c:	add	w1, w1, #0x1
    1350:	mov	w6, w11
    1354:	strh	w4, [x0, x2]
    1358:	b	1328 <xz_dec_bcj_reset+0x594>
    135c:	sub	w2, w0, #0x6
    1360:	sub	w1, w0, #0x3
    1364:	cmp	w0, #0xa
    1368:	csel	w0, w1, w2, cc  // cc = lo, ul, last
    136c:	str	w0, [x13, #204]
    1370:	b	1094 <xz_dec_bcj_reset+0x300>
    1374:	sub	w0, w0, w8
    1378:	sub	w1, w1, w8
    137c:	stp	w0, w1, [x12]
    1380:	sub	w7, w7, w7, lsr #5
    1384:	strh	w7, [x6, #228]
    1388:	mov	w3, #0xffffff              	// #16777215
    138c:	cmp	w0, w3
    1390:	b.hi	13b8 <xz_dec_bcj_reset+0x624>  // b.pmore
    1394:	lsl	w0, w0, #8
    1398:	str	w0, [x12]
    139c:	ldr	x0, [x12, #24]
    13a0:	ldr	x3, [x12, #16]
    13a4:	add	x7, x0, #0x1
    13a8:	str	x7, [x12, #24]
    13ac:	ldrb	w0, [x3, x0]
    13b0:	add	w1, w0, w1, lsl #8
    13b4:	str	w1, [x12, #4]
    13b8:	add	x5, x13, x5, lsl #1
    13bc:	ldr	w0, [x12]
    13c0:	ldrh	w3, [x5, #612]
    13c4:	lsr	w1, w0, #11
    13c8:	mul	w7, w1, w3
    13cc:	ldr	w1, [x12, #4]
    13d0:	cmp	w7, w1
    13d4:	b.ls	1700 <xz_dec_bcj_reset+0x96c>  // b.plast
    13d8:	sub	w0, w18, w3
    13dc:	cmp	w4, #0x7
    13e0:	str	w7, [x12]
    13e4:	mov	w1, #0xa                   	// #10
    13e8:	add	w3, w3, w0, asr #5
    13ec:	mov	w0, #0x7                   	// #7
    13f0:	csel	w0, w0, w1, cc  // cc = lo, ul, last
    13f4:	strh	w3, [x5, #612]
    13f8:	str	w0, [x13, #204]
    13fc:	add	x1, x13, #0x748
    1400:	ldr	w0, [x13, #216]
    1404:	str	w0, [x13, #220]
    1408:	ldr	w0, [x13, #212]
    140c:	str	w0, [x13, #216]
    1410:	ldr	w0, [x13, #208]
    1414:	str	w0, [x13, #212]
    1418:	mov	x0, x13
    141c:	bl	dc0 <xz_dec_bcj_reset+0x2c>
    1420:	ldr	w0, [x13, #224]
    1424:	mov	w1, #0x5                   	// #5
    1428:	mov	w7, #0xffffff              	// #16777215
    142c:	cmp	w0, #0x5
    1430:	csel	w1, w0, w1, ls  // ls = plast
    1434:	mov	w0, #0x1                   	// #1
    1438:	sub	w1, w1, #0x2
    143c:	lsl	x1, x1, #7
    1440:	add	x1, x1, #0x444
    1444:	ldr	w2, [x12]
    1448:	add	x6, x1, w0, uxtw #1
    144c:	cmp	w2, w7
    1450:	b.hi	147c <xz_dec_bcj_reset+0x6e8>  // b.pmore
    1454:	lsl	w2, w2, #8
    1458:	str	w2, [x12]
    145c:	ldr	x2, [x12, #24]
    1460:	ldr	x4, [x12, #16]
    1464:	add	x5, x2, #0x1
    1468:	str	x5, [x12, #24]
    146c:	ldr	w3, [x12, #4]
    1470:	ldrb	w2, [x4, x2]
    1474:	add	w2, w2, w3, lsl #8
    1478:	str	w2, [x12, #4]
    147c:	ldp	w5, w4, [x12]
    1480:	lsl	w0, w0, #1
    1484:	ldrh	w2, [x13, x6]
    1488:	lsr	w3, w5, #11
    148c:	mul	w3, w3, w2
    1490:	cmp	w3, w4
    1494:	b.ls	14dc <xz_dec_bcj_reset+0x748>  // b.plast
    1498:	str	w3, [x12]
    149c:	sub	w3, w18, w2
    14a0:	add	w2, w2, w3, asr #5
    14a4:	strh	w2, [x13, x6]
    14a8:	cmp	w0, #0x3f
    14ac:	b.ls	1444 <xz_dec_bcj_reset+0x6b0>  // b.plast
    14b0:	sub	w0, w0, #0x40
    14b4:	cmp	w0, #0x3
    14b8:	b.hi	14f8 <xz_dec_bcj_reset+0x764>  // b.pmore
    14bc:	str	w0, [x13, #208]
    14c0:	ldr	w2, [x13, #208]
    14c4:	add	x1, x13, #0xe0
    14c8:	mov	x0, x14
    14cc:	bl	fa4 <xz_dec_bcj_reset+0x210>
    14d0:	cbnz	w0, 1094 <xz_dec_bcj_reset+0x300>
    14d4:	ldp	x29, x30, [sp], #16
    14d8:	ret
    14dc:	sub	w5, w5, w3
    14e0:	sub	w3, w4, w3
    14e4:	stp	w5, w3, [x12]
    14e8:	sub	w2, w2, w2, lsr #5
    14ec:	add	w0, w0, #0x1
    14f0:	strh	w2, [x13, x6]
    14f4:	b	14a8 <xz_dec_bcj_reset+0x714>
    14f8:	and	w1, w0, #0x1
    14fc:	lsr	w2, w0, #1
    1500:	add	w1, w1, #0x2
    1504:	cmp	w0, #0xd
    1508:	b.hi	15d4 <xz_dec_bcj_reset+0x840>  // b.pmore
    150c:	sub	w5, w2, #0x1
    1510:	add	x7, x13, #0x644
    1514:	mov	w8, #0x0                   	// #0
    1518:	mov	w6, #0x1                   	// #1
    151c:	lsl	w1, w1, w5
    1520:	mov	w10, #0xffffff              	// #16777215
    1524:	sub	x0, x1, w0, uxtw
    1528:	str	w1, [x13, #208]
    152c:	lsl	x0, x0, #1
    1530:	sub	x0, x0, #0x2
    1534:	ldr	w1, [x12]
    1538:	add	x9, x0, w6, uxtw #1
    153c:	cmp	w1, w10
    1540:	b.hi	156c <xz_dec_bcj_reset+0x7d8>  // b.pmore
    1544:	lsl	w1, w1, #8
    1548:	str	w1, [x12]
    154c:	ldr	x1, [x12, #24]
    1550:	ldr	x2, [x12, #16]
    1554:	add	x4, x1, #0x1
    1558:	str	x4, [x12, #24]
    155c:	ldr	w3, [x12, #4]
    1560:	ldrb	w1, [x2, x1]
    1564:	add	w1, w1, w3, lsl #8
    1568:	str	w1, [x12, #4]
    156c:	ldp	w4, w3, [x12]
    1570:	lsl	w6, w6, #1
    1574:	ldrh	w1, [x7, x9]
    1578:	lsr	w2, w4, #11
    157c:	mul	w2, w2, w1
    1580:	cmp	w2, w3
    1584:	b.ls	15a8 <xz_dec_bcj_reset+0x814>  // b.plast
    1588:	sub	w3, w18, w1
    158c:	str	w2, [x12]
    1590:	add	w1, w1, w3, asr #5
    1594:	strh	w1, [x7, x9]
    1598:	add	w8, w8, #0x1
    159c:	cmp	w5, w8
    15a0:	b.hi	1534 <xz_dec_bcj_reset+0x7a0>  // b.pmore
    15a4:	b	14c0 <xz_dec_bcj_reset+0x72c>
    15a8:	ldr	w11, [x13, #208]
    15ac:	sub	w4, w4, w2
    15b0:	sub	w3, w3, w2
    15b4:	stp	w4, w3, [x12]
    15b8:	sub	w1, w1, w1, lsr #5
    15bc:	strh	w1, [x7, x9]
    15c0:	add	w6, w6, #0x1
    15c4:	lsl	w1, w15, w8
    15c8:	add	w1, w1, w11
    15cc:	str	w1, [x13, #208]
    15d0:	b	1598 <xz_dec_bcj_reset+0x804>
    15d4:	sub	w0, w2, #0x5
    15d8:	mov	w3, #0xffffff              	// #16777215
    15dc:	str	w1, [x13, #208]
    15e0:	ldr	w1, [x12]
    15e4:	cmp	w1, w3
    15e8:	b.hi	1614 <xz_dec_bcj_reset+0x880>  // b.pmore
    15ec:	lsl	w1, w1, #8
    15f0:	str	w1, [x12]
    15f4:	ldr	x1, [x12, #24]
    15f8:	ldr	x4, [x12, #16]
    15fc:	add	x5, x1, #0x1
    1600:	str	x5, [x12, #24]
    1604:	ldr	w2, [x12, #4]
    1608:	ldrb	w1, [x4, x1]
    160c:	add	w1, w1, w2, lsl #8
    1610:	str	w1, [x12, #4]
    1614:	ldp	w2, w1, [x12]
    1618:	subs	w0, w0, #0x1
    161c:	lsr	w2, w2, #1
    1620:	str	w2, [x12]
    1624:	sub	w1, w1, w2
    1628:	and	w2, w2, w1, asr #31
    162c:	add	w2, w2, w1
    1630:	str	w2, [x12, #4]
    1634:	ldr	w2, [x13, #208]
    1638:	lsl	w2, w2, #1
    163c:	add	w2, w2, #0x1
    1640:	add	w1, w2, w1, asr #31
    1644:	str	w1, [x13, #208]
    1648:	b.ne	15e0 <xz_dec_bcj_reset+0x84c>  // b.any
    164c:	add	x7, x13, #0x728
    1650:	lsl	w1, w1, #4
    1654:	mov	w6, #0x1                   	// #1
    1658:	mov	w8, #0xffffff              	// #16777215
    165c:	str	w1, [x13, #208]
    1660:	ldr	w1, [x12]
    1664:	ubfiz	x5, x6, #1, #32
    1668:	cmp	w1, w8
    166c:	b.hi	1698 <xz_dec_bcj_reset+0x904>  // b.pmore
    1670:	lsl	w1, w1, #8
    1674:	str	w1, [x12]
    1678:	ldr	x1, [x12, #24]
    167c:	ldr	x3, [x12, #16]
    1680:	add	x4, x1, #0x1
    1684:	str	x4, [x12, #24]
    1688:	ldr	w2, [x12, #4]
    168c:	ldrb	w1, [x3, x1]
    1690:	add	w1, w1, w2, lsl #8
    1694:	str	w1, [x12, #4]
    1698:	ldp	w4, w3, [x12]
    169c:	lsl	w6, w6, #1
    16a0:	ldrh	w1, [x7, x5]
    16a4:	lsr	w2, w4, #11
    16a8:	mul	w2, w2, w1
    16ac:	cmp	w2, w3
    16b0:	b.ls	16d4 <xz_dec_bcj_reset+0x940>  // b.plast
    16b4:	str	w2, [x12]
    16b8:	sub	w2, w18, w1
    16bc:	add	w1, w1, w2, asr #5
    16c0:	strh	w1, [x7, x5]
    16c4:	add	w0, w0, #0x1
    16c8:	cmp	w0, #0x4
    16cc:	b.ne	1660 <xz_dec_bcj_reset+0x8cc>  // b.any
    16d0:	b	14c0 <xz_dec_bcj_reset+0x72c>
    16d4:	ldr	w9, [x13, #208]
    16d8:	sub	w4, w4, w2
    16dc:	sub	w2, w3, w2
    16e0:	stp	w4, w2, [x12]
    16e4:	sub	w1, w1, w1, lsr #5
    16e8:	strh	w1, [x7, x5]
    16ec:	add	w6, w6, #0x1
    16f0:	lsl	w1, w15, w0
    16f4:	add	w1, w1, w9
    16f8:	str	w1, [x13, #208]
    16fc:	b	16c4 <xz_dec_bcj_reset+0x930>
    1700:	sub	w0, w0, w7
    1704:	sub	w1, w1, w7
    1708:	stp	w0, w1, [x12]
    170c:	sub	w3, w3, w3, lsr #5
    1710:	strh	w3, [x5, #612]
    1714:	mov	w3, #0xffffff              	// #16777215
    1718:	cmp	w0, w3
    171c:	b.hi	1744 <xz_dec_bcj_reset+0x9b0>  // b.pmore
    1720:	lsl	w0, w0, #8
    1724:	str	w0, [x12]
    1728:	ldr	x0, [x12, #24]
    172c:	ldr	x3, [x12, #16]
    1730:	add	x7, x0, #0x1
    1734:	str	x7, [x12, #24]
    1738:	ldrb	w0, [x3, x0]
    173c:	add	w1, w0, w1, lsl #8
    1740:	str	w1, [x12, #4]
    1744:	ldr	w3, [x12]
    1748:	ldrh	w7, [x5, #636]
    174c:	lsr	w0, w3, #11
    1750:	mul	w1, w0, w7
    1754:	ldr	w0, [x12, #4]
    1758:	cmp	w1, w0
    175c:	b.ls	17c0 <xz_dec_bcj_reset+0xa2c>  // b.plast
    1760:	sub	w3, w18, w7
    1764:	str	w1, [x12]
    1768:	add	w7, w7, w3, asr #5
    176c:	strh	w7, [x5, #636]
    1770:	mov	w3, #0xffffff              	// #16777215
    1774:	cmp	w1, w3
    1778:	b.ls	181c <xz_dec_bcj_reset+0xa88>  // b.plast
    177c:	ldp	w5, w3, [x12]
    1780:	ldrh	w0, [x6, #708]
    1784:	lsr	w1, w5, #11
    1788:	mul	w1, w1, w0
    178c:	cmp	w1, w3
    1790:	b.ls	1844 <xz_dec_bcj_reset+0xab0>  // b.plast
    1794:	str	w1, [x12]
    1798:	sub	w1, w18, w0
    179c:	cmp	w4, #0x7
    17a0:	add	w0, w0, w1, asr #5
    17a4:	strh	w0, [x6, #708]
    17a8:	mov	w1, #0xb                   	// #11
    17ac:	mov	w0, #0x9                   	// #9
    17b0:	csel	w0, w0, w1, cc  // cc = lo, ul, last
    17b4:	str	w0, [x13, #204]
    17b8:	str	w15, [x13, #224]
    17bc:	b	14c0 <xz_dec_bcj_reset+0x72c>
    17c0:	sub	w3, w3, w1
    17c4:	sub	w0, w0, w1
    17c8:	stp	w3, w0, [x12]
    17cc:	sub	w7, w7, w7, lsr #5
    17d0:	strh	w7, [x5, #636]
    17d4:	mov	w1, #0xffffff              	// #16777215
    17d8:	cmp	w3, w1
    17dc:	b.ls	187c <xz_dec_bcj_reset+0xae8>  // b.plast
    17e0:	ldr	w0, [x12]
    17e4:	ldrh	w3, [x5, #660]
    17e8:	ldr	w7, [x13, #212]
    17ec:	lsr	w1, w0, #11
    17f0:	mul	w6, w1, w3
    17f4:	ldr	w1, [x12, #4]
    17f8:	cmp	w6, w1
    17fc:	b.ls	18a4 <xz_dec_bcj_reset+0xb10>  // b.plast
    1800:	sub	w0, w18, w3
    1804:	str	w6, [x12]
    1808:	add	w3, w3, w0, asr #5
    180c:	strh	w3, [x5, #660]
    1810:	ldr	w0, [x13, #208]
    1814:	stp	w7, w0, [x13, #208]
    1818:	b	1858 <xz_dec_bcj_reset+0xac4>
    181c:	lsl	w1, w1, #8
    1820:	str	w1, [x12]
    1824:	ldr	x1, [x12, #24]
    1828:	ldr	x3, [x12, #16]
    182c:	add	x5, x1, #0x1
    1830:	str	x5, [x12, #24]
    1834:	ldrb	w1, [x3, x1]
    1838:	add	w0, w1, w0, lsl #8
    183c:	str	w0, [x12, #4]
    1840:	b	177c <xz_dec_bcj_reset+0x9e8>
    1844:	sub	w5, w5, w1
    1848:	sub	w1, w3, w1
    184c:	stp	w5, w1, [x12]
    1850:	sub	w0, w0, w0, lsr #5
    1854:	strh	w0, [x6, #708]
    1858:	cmp	w4, #0x7
    185c:	mov	w1, #0xb                   	// #11
    1860:	mov	w0, #0x8                   	// #8
    1864:	csel	w0, w0, w1, cc  // cc = lo, ul, last
    1868:	str	w0, [x13, #204]
    186c:	add	x1, x13, #0xb4c
    1870:	mov	x0, x13
    1874:	bl	dc0 <xz_dec_bcj_reset+0x2c>
    1878:	b	14c0 <xz_dec_bcj_reset+0x72c>
    187c:	lsl	w3, w3, #8
    1880:	str	w3, [x12]
    1884:	ldr	x1, [x12, #24]
    1888:	ldr	x3, [x12, #16]
    188c:	add	x6, x1, #0x1
    1890:	str	x6, [x12, #24]
    1894:	ldrb	w1, [x3, x1]
    1898:	add	w0, w1, w0, lsl #8
    189c:	str	w0, [x12, #4]
    18a0:	b	17e0 <xz_dec_bcj_reset+0xa4c>
    18a4:	sub	w0, w0, w6
    18a8:	sub	w1, w1, w6
    18ac:	stp	w0, w1, [x12]
    18b0:	sub	w3, w3, w3, lsr #5
    18b4:	strh	w3, [x5, #660]
    18b8:	mov	w3, #0xffffff              	// #16777215
    18bc:	cmp	w0, w3
    18c0:	b.hi	18e8 <xz_dec_bcj_reset+0xb54>  // b.pmore
    18c4:	lsl	w0, w0, #8
    18c8:	str	w0, [x12]
    18cc:	ldr	x0, [x12, #24]
    18d0:	ldr	x3, [x12, #16]
    18d4:	add	x6, x0, #0x1
    18d8:	str	x6, [x12, #24]
    18dc:	ldrb	w0, [x3, x0]
    18e0:	add	w1, w0, w1, lsl #8
    18e4:	str	w1, [x12, #4]
    18e8:	ldp	w6, w3, [x12]
    18ec:	ldrh	w0, [x5, #684]
    18f0:	ldr	w8, [x13, #216]
    18f4:	lsr	w1, w6, #11
    18f8:	mul	w1, w1, w0
    18fc:	cmp	w1, w3
    1900:	b.ls	1920 <xz_dec_bcj_reset+0xb8c>  // b.plast
    1904:	str	w1, [x12]
    1908:	sub	w1, w18, w0
    190c:	add	w0, w0, w1, asr #5
    1910:	strh	w0, [x5, #684]
    1914:	str	w7, [x13, #216]
    1918:	mov	w7, w8
    191c:	b	1810 <xz_dec_bcj_reset+0xa7c>
    1920:	sub	w6, w6, w1
    1924:	sub	w0, w0, w0, lsr #5
    1928:	sub	w1, w3, w1
    192c:	stp	w6, w1, [x12]
    1930:	strh	w0, [x5, #684]
    1934:	ldr	w0, [x13, #220]
    1938:	str	w8, [x13, #220]
    193c:	mov	w8, w0
    1940:	b	1914 <xz_dec_bcj_reset+0xb80>

0000000000001944 <xz_dec_lzma2_run>:
    1944:	stp	x29, x30, [sp, #-96]!
    1948:	mov	x29, sp
    194c:	stp	x19, x20, [sp, #16]
    1950:	mov	x20, x1
    1954:	mov	x19, x0
    1958:	mov	x1, #0x6f50                	// #28496
    195c:	stp	x21, x22, [sp, #32]
    1960:	add	x21, x0, #0x60
    1964:	stp	x23, x24, [sp, #48]
    1968:	add	x24, x0, x1
    196c:	mov	x23, #0xffffffff            	// #4294967295
    1970:	stp	x25, x26, [sp, #64]
    1974:	mov	x25, #0x3                   	// #3
    1978:	movk	x25, #0x8, lsl #32
    197c:	str	x27, [sp, #80]
    1980:	ldp	x0, x2, [x20, #8]
    1984:	ldr	w1, [x19]
    1988:	cmp	x0, x2
    198c:	b.cc	1aa8 <xz_dec_lzma2_run+0x164>  // b.lo, b.ul, b.last
    1990:	cmp	w1, #0x7
    1994:	b.ne	1d58 <xz_dec_lzma2_run+0x414>  // b.any
    1998:	ldp	x1, x0, [x20, #32]
    199c:	ldr	x3, [x21, #16]
    19a0:	sub	x0, x0, x1
    19a4:	ldr	w1, [x19, #8]
    19a8:	cmp	x0, x1
    19ac:	csel	x0, x0, x1, ls  // ls = plast
    19b0:	ldr	x1, [x21, #40]
    19b4:	sub	x4, x1, x3
    19b8:	cmp	x0, x4
    19bc:	b.cs	19c4 <xz_dec_lzma2_run+0x80>  // b.hs, b.nlast
    19c0:	add	x1, x0, x3
    19c4:	ldr	w0, [x19, #24]
    19c8:	str	x1, [x21, #32]
    19cc:	ldr	x1, [x20, #8]
    19d0:	sub	x4, x2, x1
    19d4:	ldr	w2, [x19, #12]
    19d8:	cbnz	w0, 19e0 <xz_dec_lzma2_run+0x9c>
    19dc:	cbnz	w2, 1e48 <xz_dec_lzma2_run+0x504>
    19e0:	sub	w2, w2, w0
    19e4:	mov	w3, #0x2a                  	// #42
    19e8:	sub	w3, w3, w0
    19ec:	add	x26, x19, #0x1c
    19f0:	cmp	w2, w3
    19f4:	add	x0, x26, w0, uxtw
    19f8:	csel	w22, w2, w3, ls  // ls = plast
    19fc:	csel	w2, w2, w3, ls  // ls = plast
    1a00:	ldr	x3, [x20]
    1a04:	cmp	x4, x2
    1a08:	csel	w22, w22, w4, cs  // cs = hs, nlast
    1a0c:	mov	w27, w22
    1a10:	add	x1, x3, x1
    1a14:	mov	x2, x27
    1a18:	bl	0 <grub_memmove>
    1a1c:	ldr	w0, [x19, #24]
    1a20:	ldr	w2, [x19, #12]
    1a24:	add	w1, w22, w0
    1a28:	cmp	w1, w2
    1a2c:	b.ne	1d84 <xz_dec_lzma2_run+0x440>  // b.any
    1a30:	add	x0, x27, w0, uxtw
    1a34:	mov	x2, #0x3f                  	// #63
    1a38:	mov	w1, #0x0                   	// #0
    1a3c:	sub	x2, x2, x0
    1a40:	add	x0, x26, x0
    1a44:	bl	0 <grub_memset>
    1a48:	ldr	w0, [x19, #24]
    1a4c:	add	w0, w22, w0
    1a50:	str	x0, [x19, #184]
    1a54:	stp	x26, xzr, [x19, #168]
    1a58:	mov	x0, x19
    1a5c:	bl	1050 <xz_dec_bcj_reset+0x2bc>
    1a60:	cbz	w0, 1b4c <xz_dec_lzma2_run+0x208>
    1a64:	ldr	w2, [x19, #24]
    1a68:	ldr	x1, [x19, #176]
    1a6c:	add	w22, w22, w2
    1a70:	cmp	x1, x22
    1a74:	b.hi	1b4c <xz_dec_lzma2_run+0x208>  // b.pmore
    1a78:	ldr	w0, [x19, #12]
    1a7c:	cmp	x1, w2, uxtw
    1a80:	sub	w0, w0, w1
    1a84:	str	w0, [x19, #12]
    1a88:	mov	w0, w2
    1a8c:	b.cs	1e34 <xz_dec_lzma2_run+0x4f0>  // b.hs, b.nlast
    1a90:	sub	w2, w2, w1
    1a94:	str	w2, [x19, #24]
    1a98:	add	x1, x26, x1
    1a9c:	mov	x0, x26
    1aa0:	bl	0 <grub_memmove>
    1aa4:	b	1d9c <xz_dec_lzma2_run+0x458>
    1aa8:	cmp	w1, #0x8
    1aac:	b.hi	1988 <xz_dec_lzma2_run+0x44>  // b.pmore
    1ab0:	adrp	x3, 0 <grub_mod_init-0x518>
    1ab4:	ldr	x3, [x3]
    1ab8:	ldrh	w1, [x3, w1, uxtw #1]
    1abc:	adr	x3, 1ac8 <xz_dec_lzma2_run+0x184>
    1ac0:	add	x1, x3, w1, sxth #2
    1ac4:	br	x1
    1ac8:	ldr	x1, [x20]
    1acc:	add	x2, x0, #0x1
    1ad0:	str	x2, [x20, #8]
    1ad4:	ldrb	w0, [x1, x0]
    1ad8:	cmp	w0, #0xdf
    1adc:	ccmp	w0, #0x1, #0x4, ls  // ls = plast
    1ae0:	b.ne	1b44 <xz_dec_lzma2_run+0x200>  // b.any
    1ae4:	mov	x1, #0x100000000           	// #4294967296
    1ae8:	str	x1, [x19, #16]
    1aec:	ldr	w1, [x21, #52]
    1af0:	cbnz	w1, 1b0c <xz_dec_lzma2_run+0x1c8>
    1af4:	ldp	x2, x3, [x20, #24]
    1af8:	ldr	x1, [x20, #40]
    1afc:	add	x2, x2, x3
    1b00:	sub	x1, x1, x3
    1b04:	str	x2, [x21]
    1b08:	str	x1, [x21, #40]
    1b0c:	stp	xzr, xzr, [x21, #8]
    1b10:	stp	xzr, xzr, [x21, #24]
    1b14:	cmp	w0, #0x7f
    1b18:	b.ls	1bb4 <xz_dec_lzma2_run+0x270>  // b.plast
    1b1c:	ubfiz	w1, w0, #16, #5
    1b20:	str	w1, [x19, #8]
    1b24:	mov	w1, #0x1                   	// #1
    1b28:	str	w1, [x19]
    1b2c:	cmp	w0, #0xbf
    1b30:	b.ls	1b6c <xz_dec_lzma2_run+0x228>  // b.plast
    1b34:	mov	w0, #0x5                   	// #5
    1b38:	str	w0, [x19, #4]
    1b3c:	str	wzr, [x19, #20]
    1b40:	b	1980 <xz_dec_lzma2_run+0x3c>
    1b44:	ldr	w1, [x19, #16]
    1b48:	cbz	w1, 1b14 <xz_dec_lzma2_run+0x1d0>
    1b4c:	mov	w0, #0x5                   	// #5
    1b50:	ldp	x19, x20, [sp, #16]
    1b54:	ldp	x21, x22, [sp, #32]
    1b58:	ldp	x23, x24, [sp, #48]
    1b5c:	ldp	x25, x26, [sp, #64]
    1b60:	ldr	x27, [sp, #80]
    1b64:	ldp	x29, x30, [sp], #96
    1b68:	ret
    1b6c:	ldr	w1, [x19, #20]
    1b70:	cbnz	w1, 1b4c <xz_dec_lzma2_run+0x208>
    1b74:	mov	w1, #0x6                   	// #6
    1b78:	str	w1, [x19, #4]
    1b7c:	cmp	w0, #0x9f
    1b80:	b.ls	1980 <xz_dec_lzma2_run+0x3c>  // b.plast
    1b84:	add	x0, x19, #0xe4
    1b88:	mov	w1, #0x400                 	// #1024
    1b8c:	str	wzr, [x19, #204]
    1b90:	stp	xzr, xzr, [x19, #208]
    1b94:	strh	w1, [x0], #2
    1b98:	cmp	x24, x0
    1b9c:	b.ne	1b94 <xz_dec_lzma2_run+0x250>  // b.any
    1ba0:	mov	x0, x19
    1ba4:	mov	w1, #0x5                   	// #5
    1ba8:	str	x23, [x0, #152]!
    1bac:	str	w1, [x0, #8]
    1bb0:	b	1980 <xz_dec_lzma2_run+0x3c>
    1bb4:	cbz	w0, 1ff8 <xz_dec_lzma2_run+0x6b4>
    1bb8:	cmp	w0, #0x2
    1bbc:	b.hi	1b4c <xz_dec_lzma2_run+0x208>  // b.pmore
    1bc0:	str	x25, [x19]
    1bc4:	b	1980 <xz_dec_lzma2_run+0x3c>
    1bc8:	ldr	x1, [x20]
    1bcc:	add	x2, x0, #0x1
    1bd0:	str	x2, [x20, #8]
    1bd4:	ldrb	w0, [x1, x0]
    1bd8:	ldr	w1, [x19, #8]
    1bdc:	add	w0, w1, w0, lsl #8
    1be0:	str	w0, [x19, #8]
    1be4:	mov	w0, #0x2                   	// #2
    1be8:	str	w0, [x19]
    1bec:	b	1980 <xz_dec_lzma2_run+0x3c>
    1bf0:	ldr	x1, [x20]
    1bf4:	add	x2, x0, #0x1
    1bf8:	str	x2, [x20, #8]
    1bfc:	ldrb	w0, [x1, x0]
    1c00:	ldr	w1, [x19, #8]
    1c04:	add	w1, w1, #0x1
    1c08:	add	w0, w0, w1
    1c0c:	str	w0, [x19, #8]
    1c10:	mov	w0, #0x3                   	// #3
    1c14:	b	1be8 <xz_dec_lzma2_run+0x2a4>
    1c18:	ldr	x1, [x20]
    1c1c:	add	x2, x0, #0x1
    1c20:	str	x2, [x20, #8]
    1c24:	ldrb	w0, [x1, x0]
    1c28:	lsl	w0, w0, #8
    1c2c:	str	w0, [x19, #12]
    1c30:	mov	w0, #0x4                   	// #4
    1c34:	b	1be8 <xz_dec_lzma2_run+0x2a4>
    1c38:	ldr	x1, [x20]
    1c3c:	add	x2, x0, #0x1
    1c40:	str	x2, [x20, #8]
    1c44:	ldrb	w0, [x1, x0]
    1c48:	ldr	w1, [x19, #12]
    1c4c:	add	w1, w1, #0x1
    1c50:	add	w0, w0, w1
    1c54:	str	w0, [x19, #12]
    1c58:	ldr	w0, [x19, #4]
    1c5c:	b	1be8 <xz_dec_lzma2_run+0x2a4>
    1c60:	ldr	x1, [x20]
    1c64:	add	x3, x0, #0x1
    1c68:	str	x3, [x20, #8]
    1c6c:	ldrb	w0, [x1, x0]
    1c70:	cmp	w0, #0xe0
    1c74:	b.hi	1b4c <xz_dec_lzma2_run+0x208>  // b.pmore
    1c78:	str	wzr, [x19, #200]
    1c7c:	ldr	w3, [x19, #200]
    1c80:	cmp	w0, #0x2c
    1c84:	b.hi	1d28 <xz_dec_lzma2_run+0x3e4>  // b.pmore
    1c88:	mov	w1, #0x1                   	// #1
    1c8c:	lsl	w1, w1, w3
    1c90:	sub	w1, w1, #0x1
    1c94:	stp	wzr, w1, [x19, #196]
    1c98:	ldr	w1, [x19, #196]
    1c9c:	cmp	w0, #0x8
    1ca0:	b.hi	1d3c <xz_dec_lzma2_run+0x3f8>  // b.pmore
    1ca4:	str	w0, [x19, #192]
    1ca8:	add	w0, w0, w1
    1cac:	cmp	w0, #0x4
    1cb0:	b.hi	1b4c <xz_dec_lzma2_run+0x208>  // b.pmore
    1cb4:	mov	w0, #0x1                   	// #1
    1cb8:	str	wzr, [x19, #204]
    1cbc:	lsl	w0, w0, w1
    1cc0:	sub	w0, w0, #0x1
    1cc4:	str	w0, [x19, #196]
    1cc8:	add	x0, x19, #0xe4
    1ccc:	mov	w1, #0x400                 	// #1024
    1cd0:	stp	xzr, xzr, [x19, #208]
    1cd4:	strh	w1, [x0], #2
    1cd8:	cmp	x24, x0
    1cdc:	b.ne	1cd4 <xz_dec_lzma2_run+0x390>  // b.any
    1ce0:	mov	x0, x19
    1ce4:	mov	w1, #0x5                   	// #5
    1ce8:	str	x23, [x0, #152]!
    1cec:	str	w1, [x0, #8]
    1cf0:	mov	w0, #0x6                   	// #6
    1cf4:	str	w0, [x19]
    1cf8:	ldr	w0, [x19, #12]
    1cfc:	cmp	w0, #0x4
    1d00:	b.ls	1b4c <xz_dec_lzma2_run+0x208>  // b.plast
    1d04:	ldr	w1, [x19, #160]
    1d08:	add	x3, x19, #0x98
    1d0c:	ldr	x4, [x20, #8]
    1d10:	cbnz	w1, 1d50 <xz_dec_lzma2_run+0x40c>
    1d14:	sub	w0, w0, #0x5
    1d18:	str	w0, [x19, #12]
    1d1c:	mov	w0, #0x7                   	// #7
    1d20:	str	w0, [x19]
    1d24:	b	1998 <xz_dec_lzma2_run+0x54>
    1d28:	sub	w0, w0, #0x2d
    1d2c:	add	w1, w3, #0x1
    1d30:	and	w0, w0, #0xff
    1d34:	str	w1, [x19, #200]
    1d38:	b	1c7c <xz_dec_lzma2_run+0x338>
    1d3c:	sub	w0, w0, #0x9
    1d40:	add	w1, w1, #0x1
    1d44:	and	w0, w0, #0xff
    1d48:	str	w1, [x19, #196]
    1d4c:	b	1c98 <xz_dec_lzma2_run+0x354>
    1d50:	cmp	x2, x4
    1d54:	b.ne	1d60 <xz_dec_lzma2_run+0x41c>  // b.any
    1d58:	mov	w0, #0x0                   	// #0
    1d5c:	b	1b50 <xz_dec_lzma2_run+0x20c>
    1d60:	ldr	x6, [x20]
    1d64:	add	x7, x4, #0x1
    1d68:	ldr	w5, [x3, #4]
    1d6c:	sub	w1, w1, #0x1
    1d70:	str	x7, [x20, #8]
    1d74:	ldrb	w4, [x6, x4]
    1d78:	add	w4, w4, w5, lsl #8
    1d7c:	stp	w4, w1, [x3, #4]
    1d80:	b	1d04 <xz_dec_lzma2_run+0x3c0>
    1d84:	cmp	w1, #0x14
    1d88:	b.hi	1e28 <xz_dec_lzma2_run+0x4e4>  // b.pmore
    1d8c:	ldr	x0, [x20, #8]
    1d90:	str	w1, [x19, #24]
    1d94:	add	x0, x0, x27
    1d98:	str	x0, [x20, #8]
    1d9c:	ldp	x1, x0, [x21, #8]
    1da0:	ldr	w2, [x21, #52]
    1da4:	sub	x22, x0, x1
    1da8:	cbz	w2, 1dd4 <xz_dec_lzma2_run+0x490>
    1dac:	ldr	x2, [x21, #40]
    1db0:	cmp	x0, x2
    1db4:	b.ne	1dbc <xz_dec_lzma2_run+0x478>  // b.any
    1db8:	str	xzr, [x21, #16]
    1dbc:	ldp	x3, x0, [x20, #24]
    1dc0:	mov	x2, x22
    1dc4:	ldr	x4, [x21]
    1dc8:	add	x1, x4, x1
    1dcc:	add	x0, x3, x0
    1dd0:	bl	0 <grub_memmove>
    1dd4:	ldr	x0, [x21, #16]
    1dd8:	ldr	w1, [x19, #8]
    1ddc:	str	x0, [x21, #8]
    1de0:	ldr	x0, [x20, #32]
    1de4:	sub	w2, w1, w22
    1de8:	add	x0, x22, x0
    1dec:	str	x0, [x20, #32]
    1df0:	str	w2, [x19, #8]
    1df4:	cbnz	w2, 1ef0 <xz_dec_lzma2_run+0x5ac>
    1df8:	ldr	w0, [x19, #12]
    1dfc:	cbnz	w0, 1b4c <xz_dec_lzma2_run+0x208>
    1e00:	ldr	w0, [x19, #224]
    1e04:	cbnz	w0, 1b4c <xz_dec_lzma2_run+0x208>
    1e08:	ldr	w0, [x19, #156]
    1e0c:	cbnz	w0, 1b4c <xz_dec_lzma2_run+0x208>
    1e10:	mov	x0, x19
    1e14:	mov	w1, #0x5                   	// #5
    1e18:	str	x23, [x0, #152]!
    1e1c:	str	w1, [x0, #8]
    1e20:	str	wzr, [x19]
    1e24:	b	1980 <xz_dec_lzma2_run+0x3c>
    1e28:	sub	w1, w1, #0x15
    1e2c:	str	x1, [x19, #184]
    1e30:	b	1a54 <xz_dec_lzma2_run+0x110>
    1e34:	ldr	x2, [x20, #8]
    1e38:	add	x1, x1, x2
    1e3c:	sub	x1, x1, x0
    1e40:	str	x1, [x20, #8]
    1e44:	str	wzr, [x19, #24]
    1e48:	ldp	x2, x0, [x20, #8]
    1e4c:	sub	x3, x0, x2
    1e50:	cmp	x3, #0x14
    1e54:	b.ls	1eac <xz_dec_lzma2_run+0x568>  // b.plast
    1e58:	ldr	x1, [x20]
    1e5c:	stp	x1, x2, [x19, #168]
    1e60:	ldr	w1, [x19, #12]
    1e64:	sub	x0, x0, #0x15
    1e68:	add	w4, w1, #0x15
    1e6c:	cmp	x3, x4
    1e70:	add	x1, x2, w1, uxtw
    1e74:	csel	x0, x0, x1, cc  // cc = lo, ul, last
    1e78:	str	x0, [x19, #184]
    1e7c:	mov	x0, x19
    1e80:	bl	1050 <xz_dec_bcj_reset+0x2bc>
    1e84:	cbz	w0, 1b4c <xz_dec_lzma2_run+0x208>
    1e88:	ldr	x0, [x20, #8]
    1e8c:	ldr	x2, [x19, #176]
    1e90:	sub	x1, x2, x0
    1e94:	ldr	w0, [x19, #12]
    1e98:	cmp	x1, w0, uxtw
    1e9c:	b.hi	1b4c <xz_dec_lzma2_run+0x208>  // b.pmore
    1ea0:	sub	w0, w0, w1
    1ea4:	str	w0, [x19, #12]
    1ea8:	str	x2, [x20, #8]
    1eac:	ldp	x0, x2, [x20, #8]
    1eb0:	sub	x2, x2, x0
    1eb4:	cmp	x2, #0x14
    1eb8:	b.hi	1d9c <xz_dec_lzma2_run+0x458>  // b.pmore
    1ebc:	ldr	w22, [x19, #12]
    1ec0:	ldr	x1, [x20]
    1ec4:	cmp	x22, x2
    1ec8:	csel	x22, x22, x2, ls  // ls = plast
    1ecc:	mov	x2, x22
    1ed0:	add	x1, x1, x0
    1ed4:	add	x0, x19, #0x1c
    1ed8:	bl	0 <grub_memmove>
    1edc:	ldr	x2, [x20, #8]
    1ee0:	str	w22, [x19, #24]
    1ee4:	add	x2, x2, x22
    1ee8:	str	x2, [x20, #8]
    1eec:	b	1d9c <xz_dec_lzma2_run+0x458>
    1ef0:	ldr	x1, [x20, #40]
    1ef4:	cmp	x1, x0
    1ef8:	b.eq	1d58 <xz_dec_lzma2_run+0x414>  // b.none
    1efc:	ldp	x1, x0, [x20, #8]
    1f00:	cmp	x1, x0
    1f04:	b.ne	1980 <xz_dec_lzma2_run+0x3c>  // b.any
    1f08:	ldr	w0, [x19, #12]
    1f0c:	ldr	w1, [x19, #24]
    1f10:	cmp	w1, w0
    1f14:	b.cs	1980 <xz_dec_lzma2_run+0x3c>  // b.hs, b.nlast
    1f18:	b	1d58 <xz_dec_lzma2_run+0x414>
    1f1c:	sub	x2, x2, x22
    1f20:	sub	x22, x4, x1
    1f24:	cmp	x2, x22
    1f28:	mov	w4, w3
    1f2c:	csel	x2, x2, x22, ls  // ls = plast
    1f30:	ldr	x0, [x21, #16]
    1f34:	ldr	x22, [x21, #40]
    1f38:	sub	x22, x22, x0
    1f3c:	cmp	x22, w3, uxtw
    1f40:	csel	x22, x22, x4, ls  // ls = plast
    1f44:	cmp	x2, x22
    1f48:	csel	x22, x2, x22, ls  // ls = plast
    1f4c:	sub	w3, w3, w22
    1f50:	mov	x2, x22
    1f54:	ldr	x4, [x20]
    1f58:	str	w3, [x19, #12]
    1f5c:	ldr	x3, [x21]
    1f60:	add	x1, x4, x1
    1f64:	add	x0, x3, x0
    1f68:	bl	0 <grub_memmove>
    1f6c:	ldp	x0, x1, [x21, #16]
    1f70:	add	x0, x22, x0
    1f74:	str	x0, [x21, #16]
    1f78:	cmp	x0, x1
    1f7c:	b.ls	1f84 <xz_dec_lzma2_run+0x640>  // b.plast
    1f80:	str	x0, [x21, #24]
    1f84:	ldr	w1, [x21, #52]
    1f88:	cbz	w1, 1fb4 <xz_dec_lzma2_run+0x670>
    1f8c:	ldr	x1, [x21, #40]
    1f90:	cmp	x0, x1
    1f94:	b.ne	1f9c <xz_dec_lzma2_run+0x658>  // b.any
    1f98:	str	xzr, [x21, #16]
    1f9c:	ldp	x4, x1, [x20]
    1fa0:	mov	x2, x22
    1fa4:	ldp	x3, x0, [x20, #24]
    1fa8:	add	x1, x4, x1
    1fac:	add	x0, x3, x0
    1fb0:	bl	0 <grub_memmove>
    1fb4:	ldr	x0, [x21, #16]
    1fb8:	ldr	x2, [x20, #8]
    1fbc:	str	x0, [x21, #8]
    1fc0:	ldr	x0, [x20, #32]
    1fc4:	add	x2, x2, x22
    1fc8:	str	x2, [x20, #8]
    1fcc:	add	x0, x0, x22
    1fd0:	str	x0, [x20, #32]
    1fd4:	ldr	w3, [x19, #12]
    1fd8:	ldp	x1, x4, [x20, #8]
    1fdc:	cbz	w3, 1e20 <xz_dec_lzma2_run+0x4dc>
    1fe0:	cmp	x1, x4
    1fe4:	b.cs	1d58 <xz_dec_lzma2_run+0x414>  // b.hs, b.nlast
    1fe8:	ldp	x22, x2, [x20, #32]
    1fec:	cmp	x2, x22
    1ff0:	b.hi	1f1c <xz_dec_lzma2_run+0x5d8>  // b.pmore
    1ff4:	b	1d58 <xz_dec_lzma2_run+0x414>
    1ff8:	mov	w0, #0x1                   	// #1
    1ffc:	b	1b50 <xz_dec_lzma2_run+0x20c>
	...

0000000000002008 <xz_dec_lzma2_create>:
    2008:	stp	x29, x30, [sp, #-32]!
    200c:	mov	x29, sp
    2010:	stp	x19, x20, [sp, #16]
    2014:	mov	w20, w0
    2018:	mov	w0, #0xc0000000            	// #-1073741824
    201c:	cmp	w20, w0
    2020:	b.ls	2038 <xz_dec_lzma2_create+0x30>  // b.plast
    2024:	mov	x19, #0x0                   	// #0
    2028:	mov	x0, x19
    202c:	ldp	x19, x20, [sp, #16]
    2030:	ldp	x29, x30, [sp], #32
    2034:	ret
    2038:	mov	x0, #0x6f50                	// #28496
    203c:	bl	0 <grub_malloc>
    2040:	mov	x19, x0
    2044:	cbz	x0, 2024 <xz_dec_lzma2_create+0x1c>
    2048:	cbz	w20, 2068 <xz_dec_lzma2_create+0x60>
    204c:	mov	w0, w20
    2050:	bl	0 <grub_malloc>
    2054:	str	x0, [x19, #96]
    2058:	cbnz	x0, 2068 <xz_dec_lzma2_create+0x60>
    205c:	mov	x0, x19
    2060:	bl	0 <grub_free>
    2064:	b	2024 <xz_dec_lzma2_create+0x1c>
    2068:	str	w20, [x19, #148]
    206c:	b	2028 <xz_dec_lzma2_create+0x20>

0000000000002070 <xz_dec_lzma2_reset>:
    2070:	and	w1, w1, #0xff
    2074:	cmp	w1, #0x1e
    2078:	b.hi	20f8 <xz_dec_lzma2_reset+0x88>  // b.pmore
    207c:	stp	x29, x30, [sp, #-32]!
    2080:	mov	x29, sp
    2084:	str	x19, [sp, #16]
    2088:	mov	x19, x0
    208c:	and	w0, w1, #0x1
    2090:	lsr	w1, w1, #1
    2094:	add	w0, w0, #0x2
    2098:	add	w1, w1, #0xb
    209c:	lsl	w1, w0, w1
    20a0:	ldr	w0, [x19, #148]
    20a4:	str	w1, [x19, #144]
    20a8:	cbz	w0, 20cc <xz_dec_lzma2_reset+0x5c>
    20ac:	cmp	w1, w0
    20b0:	b.ls	20cc <xz_dec_lzma2_reset+0x5c>  // b.plast
    20b4:	ldr	x0, [x19, #96]
    20b8:	bl	0 <grub_realloc>
    20bc:	cbz	x0, 2100 <xz_dec_lzma2_reset+0x90>
    20c0:	str	x0, [x19, #96]
    20c4:	ldr	w0, [x19, #144]
    20c8:	str	w0, [x19, #148]
    20cc:	ldr	w0, [x19, #144]
    20d0:	str	x0, [x19, #136]
    20d4:	mov	w0, #0x1                   	// #1
    20d8:	str	wzr, [x19]
    20dc:	str	w0, [x19, #16]
    20e0:	mov	w0, #0x0                   	// #0
    20e4:	str	wzr, [x19, #24]
    20e8:	str	wzr, [x19, #224]
    20ec:	ldr	x19, [sp, #16]
    20f0:	ldp	x29, x30, [sp], #32
    20f4:	ret
    20f8:	mov	w0, #0x4                   	// #4
    20fc:	ret
    2100:	mov	w0, #0x2                   	// #2
    2104:	b	20ec <xz_dec_lzma2_reset+0x7c>

0000000000002108 <xz_dec_lzma2_end>:
    2108:	stp	x29, x30, [sp, #-32]!
    210c:	mov	x29, sp
    2110:	str	x19, [sp, #16]
    2114:	mov	x19, x0
    2118:	ldr	w0, [x0, #148]
    211c:	cbz	w0, 2128 <xz_dec_lzma2_end+0x20>
    2120:	ldr	x0, [x19, #96]
    2124:	bl	0 <grub_free>
    2128:	mov	x0, x19
    212c:	ldr	x19, [sp, #16]
    2130:	ldp	x29, x30, [sp], #32
    2134:	b	0 <grub_free>
    2138:	ldr	w4, [x0, #4]
    213c:	cbnz	w4, 2144 <xz_dec_lzma2_end+0x3c>
    2140:	str	xzr, [x0, #8]
    2144:	ldr	x4, [x2]
    2148:	cmp	x4, x3
    214c:	b.cc	2158 <xz_dec_lzma2_end+0x50>  // b.lo, b.ul, b.last
    2150:	mov	w0, #0x0                   	// #0
    2154:	b	218c <xz_dec_lzma2_end+0x84>
    2158:	ldrb	w5, [x1, x4]
    215c:	add	x4, x4, #0x1
    2160:	str	x4, [x2]
    2164:	ldr	w4, [x0, #4]
    2168:	and	x6, x5, #0x7f
    216c:	lsl	x7, x6, x4
    2170:	ldr	x6, [x0, #8]
    2174:	orr	x6, x6, x7
    2178:	str	x6, [x0, #8]
    217c:	tbnz	w5, #7, 219c <xz_dec_lzma2_end+0x94>
    2180:	cbnz	w5, 2190 <xz_dec_lzma2_end+0x88>
    2184:	cbz	w4, 2190 <xz_dec_lzma2_end+0x88>
    2188:	mov	w0, #0x5                   	// #5
    218c:	ret
    2190:	str	wzr, [x0, #4]
    2194:	mov	w0, #0x1                   	// #1
    2198:	b	218c <xz_dec_lzma2_end+0x84>
    219c:	add	w4, w4, #0x7
    21a0:	str	w4, [x0, #4]
    21a4:	cmp	w4, #0x3f
    21a8:	b.ne	2144 <xz_dec_lzma2_end+0x3c>  // b.any
    21ac:	b	2188 <xz_dec_lzma2_end+0x80>
    21b0:	stp	x29, x30, [sp, #-48]!
    21b4:	mov	x29, sp
    21b8:	str	x21, [sp, #32]
    21bc:	mov	x21, x1
    21c0:	stp	x19, x20, [sp, #16]
    21c4:	mov	x19, x0
    21c8:	ldr	x20, [x21, #8]
    21cc:	ldr	x1, [x0, #16]
    21d0:	ldr	x0, [x0, #240]
    21d4:	sub	x20, x20, x1
    21d8:	add	x0, x0, x20
    21dc:	str	x0, [x19, #240]
    21e0:	ldr	x0, [x19, #120]
    21e4:	cbz	x0, 2200 <xz_dec_lzma2_end+0xf8>
    21e8:	ldr	x4, [x21]
    21ec:	mov	x2, x20
    21f0:	ldr	x3, [x0, #48]
    21f4:	add	x1, x4, x1
    21f8:	ldr	x0, [x19, #104]
    21fc:	blr	x3
    2200:	ldr	x0, [x19, #128]
    2204:	cbz	x0, 2234 <xz_dec_lzma2_end+0x12c>
    2208:	mov	x2, x20
    220c:	ldr	x4, [x21]
    2210:	ldr	x1, [x19, #16]
    2214:	ldr	x21, [sp, #32]
    2218:	add	x1, x4, x1
    221c:	ldr	x3, [x0, #48]
    2220:	ldr	x0, [x19, #112]
    2224:	mov	x16, x3
    2228:	ldp	x19, x20, [sp, #16]
    222c:	ldp	x29, x30, [sp], #48
    2230:	br	x16
    2234:	ldp	x19, x20, [sp, #16]
    2238:	ldr	x21, [sp, #32]
    223c:	ldp	x29, x30, [sp], #48
    2240:	ret
    2244:	stp	x29, x30, [sp, #-64]!
    2248:	cmp	w2, #0x0
    224c:	mov	x29, sp
    2250:	stp	x19, x20, [sp, #16]
    2254:	mov	x19, x0
    2258:	stp	x21, x22, [sp, #32]
    225c:	mov	x21, x1
    2260:	mov	w22, w2
    2264:	ldp	x20, x1, [x0, #120]
    2268:	str	x23, [sp, #48]
    226c:	ldp	x23, x0, [x0, #104]
    2270:	csel	x20, x20, x1, eq  // eq = none
    2274:	csel	x23, x23, x0, eq  // eq = none
    2278:	ldr	w0, [x19, #96]
    227c:	cbnz	w0, 22ec <xz_dec_lzma2_end+0x1e4>
    2280:	cbz	x20, 22ec <xz_dec_lzma2_end+0x1e4>
    2284:	ldr	x0, [x20, #32]
    2288:	cmp	x0, #0x40
    228c:	b.hi	22ec <xz_dec_lzma2_end+0x1e4>  // b.pmore
    2290:	ldr	x1, [x20, #56]
    2294:	mov	x0, x23
    2298:	blr	x1
    229c:	ldr	x1, [x20, #64]
    22a0:	mov	x0, x23
    22a4:	blr	x1
    22a8:	mov	x1, x0
    22ac:	ldr	x2, [x20, #32]
    22b0:	add	x0, x19, #0x20
    22b4:	bl	0 <grub_memmove>
    22b8:	mov	w0, #0x1                   	// #1
    22bc:	str	w0, [x19, #96]
    22c0:	ldrb	w0, [x19, #136]
    22c4:	cmp	w0, #0x1
    22c8:	b.eq	22d0 <xz_dec_lzma2_end+0x1c8>  // b.none
    22cc:	cbz	w22, 22ec <xz_dec_lzma2_end+0x1e4>
    22d0:	ldrb	w0, [x19, #32]
    22d4:	ldrb	w1, [x19, #35]
    22d8:	strb	w0, [x19, #35]
    22dc:	ldurh	w0, [x19, #33]
    22e0:	strb	w1, [x19, #32]
    22e4:	rev16	w0, w0
    22e8:	sturh	w0, [x19, #33]
    22ec:	ldp	x0, x3, [x21, #8]
    22f0:	cmp	x0, x3
    22f4:	b.ne	2310 <xz_dec_lzma2_end+0x208>  // b.any
    22f8:	mov	w0, #0x0                   	// #0
    22fc:	ldp	x19, x20, [sp, #16]
    2300:	ldp	x21, x22, [sp, #32]
    2304:	ldr	x23, [sp, #48]
    2308:	ldp	x29, x30, [sp], #64
    230c:	ret
    2310:	cbnz	w22, 2328 <xz_dec_lzma2_end+0x220>
    2314:	ldr	x0, [x19, #144]
    2318:	cbnz	x0, 2328 <xz_dec_lzma2_end+0x220>
    231c:	ldr	w0, [x19, #4]
    2320:	add	w0, w0, #0x8
    2324:	str	w0, [x19, #4]
    2328:	ldr	w0, [x19, #4]
    232c:	mov	w2, w0
    2330:	cbnz	w22, 23b4 <xz_dec_lzma2_end+0x2ac>
    2334:	ldr	x1, [x19, #144]
    2338:	lsl	x1, x1, #3
    233c:	cmp	x2, x1
    2340:	b.cc	237c <xz_dec_lzma2_end+0x274>  // b.lo, b.ul, b.last
    2344:	ldr	x0, [x19, #120]
    2348:	cbz	x0, 2358 <xz_dec_lzma2_end+0x250>
    234c:	ldr	x1, [x0, #40]
    2350:	ldr	x0, [x19, #104]
    2354:	blr	x1
    2358:	ldr	x0, [x19, #128]
    235c:	cbz	x0, 236c <xz_dec_lzma2_end+0x264>
    2360:	ldr	x1, [x0, #40]
    2364:	ldr	x0, [x19, #112]
    2368:	blr	x1
    236c:	mov	w0, #0x1                   	// #1
    2370:	str	wzr, [x19, #4]
    2374:	str	wzr, [x19, #96]
    2378:	b	22fc <xz_dec_lzma2_end+0x1f4>
    237c:	ldr	x1, [x21, #8]
    2380:	cmp	x3, x1
    2384:	b.eq	22f8 <xz_dec_lzma2_end+0x1f0>  // b.none
    2388:	cbz	x20, 23a8 <xz_dec_lzma2_end+0x2a0>
    238c:	lsr	w2, w0, #3
    2390:	ldr	x5, [x21]
    2394:	add	x2, x19, x2
    2398:	ldrb	w4, [x2, #32]
    239c:	ldrb	w2, [x5, x1]
    23a0:	cmp	w4, w2
    23a4:	b.ne	23bc <xz_dec_lzma2_end+0x2b4>  // b.any
    23a8:	add	x1, x1, #0x1
    23ac:	str	x1, [x21, #8]
    23b0:	b	2320 <xz_dec_lzma2_end+0x218>
    23b4:	mov	x1, #0x20                  	// #32
    23b8:	b	233c <xz_dec_lzma2_end+0x234>
    23bc:	mov	w0, #0x5                   	// #5
    23c0:	b	22fc <xz_dec_lzma2_end+0x1f4>
    23c4:	stp	x29, x30, [sp, #-48]!
    23c8:	add	x3, x0, #0x128
    23cc:	mov	x29, sp
    23d0:	stp	x19, x20, [sp, #16]
    23d4:	mov	x20, x0
    23d8:	ldr	x0, [x0, #280]
    23dc:	ldr	x19, [x20, #288]
    23e0:	str	x21, [sp, #32]
    23e4:	mov	x21, x1
    23e8:	ldr	x1, [x1, #8]
    23ec:	sub	x19, x19, x0
    23f0:	ldr	x2, [x21, #16]
    23f4:	add	x0, x3, x0
    23f8:	ldr	x4, [x21]
    23fc:	sub	x2, x2, x1
    2400:	cmp	x19, x2
    2404:	csel	x19, x19, x2, ls  // ls = plast
    2408:	add	x1, x4, x1
    240c:	mov	x2, x19
    2410:	bl	0 <grub_memmove>
    2414:	ldr	x0, [x21, #8]
    2418:	ldr	x2, [x20, #280]
    241c:	add	x0, x0, x19
    2420:	str	x0, [x21, #8]
    2424:	ldr	x0, [x20, #288]
    2428:	add	x19, x19, x2
    242c:	str	x19, [x20, #280]
    2430:	cmp	x19, x0
    2434:	b.ne	2450 <xz_dec_lzma2_end+0x348>  // b.any
    2438:	mov	w0, #0x1                   	// #1
    243c:	str	xzr, [x20, #280]
    2440:	ldp	x19, x20, [sp, #16]
    2444:	ldr	x21, [sp, #32]
    2448:	ldp	x29, x30, [sp], #48
    244c:	ret
    2450:	mov	w0, #0x0                   	// #0
    2454:	b	2440 <xz_dec_lzma2_end+0x338>

0000000000002458 <xz_dec_reset>:
    2458:	stp	x29, x30, [sp, #-32]!
    245c:	mov	x2, #0x30                  	// #48
    2460:	mov	w1, #0x0                   	// #0
    2464:	mov	x29, sp
    2468:	stp	x19, x20, [sp, #16]
    246c:	mov	x19, x0
    2470:	add	x0, x0, #0xb8
    2474:	stur	xzr, [x0, #-184]
    2478:	stur	wzr, [x0, #-28]
    247c:	ldr	x20, [x0, #40]
    2480:	bl	0 <grub_memset>
    2484:	str	x20, [x19, #224]
    2488:	add	x0, x19, #0xe8
    248c:	mov	x2, #0x30                  	// #48
    2490:	mov	w1, #0x0                   	// #0
    2494:	ldr	x20, [x19, #272]
    2498:	bl	0 <grub_memset>
    249c:	mov	x0, #0xc                   	// #12
    24a0:	str	x0, [x19, #288]
    24a4:	ldr	x0, [x19, #120]
    24a8:	stp	x20, xzr, [x19, #272]
    24ac:	cbz	x0, 24dc <xz_dec_reset+0x84>
    24b0:	ldr	x1, [x0, #40]
    24b4:	ldr	x0, [x19, #104]
    24b8:	blr	x1
    24bc:	ldr	x0, [x19, #120]
    24c0:	ldr	x1, [x0, #40]
    24c4:	ldr	x0, [x19, #272]
    24c8:	blr	x1
    24cc:	ldr	x0, [x19, #120]
    24d0:	ldr	x1, [x0, #40]
    24d4:	ldr	x0, [x19, #224]
    24d8:	blr	x1
    24dc:	str	wzr, [x19, #96]
    24e0:	ldp	x19, x20, [sp, #16]
    24e4:	ldp	x29, x30, [sp], #32
    24e8:	ret

00000000000024ec <xz_dec_run>:
    24ec:	stp	x29, x30, [sp, #-112]!
    24f0:	mov	x29, sp
    24f4:	stp	x21, x22, [sp, #32]
    24f8:	mov	x21, x1
    24fc:	ldr	w1, [x0, #152]
    2500:	stp	x19, x20, [sp, #16]
    2504:	mov	x19, x0
    2508:	stp	x23, x24, [sp, #48]
    250c:	stp	x25, x26, [sp, #64]
    2510:	str	x27, [sp, #80]
    2514:	cbz	w1, 251c <xz_dec_run+0x30>
    2518:	bl	2458 <xz_dec_reset>
    251c:	ldr	x22, [x21, #8]
    2520:	adrp	x24, 0 <grub_mod_init-0x518>
    2524:	mov	w25, #0x5                   	// #5
    2528:	mov	w26, #0x4                   	// #4
    252c:	ldr	x23, [x21, #32]
    2530:	str	x22, [x19, #16]
    2534:	ldr	w0, [x19]
    2538:	cmp	w0, #0x9
    253c:	b.hi	2538 <xz_dec_run+0x4c>  // b.pmore
    2540:	ldr	x1, [x24]
    2544:	ldrh	w0, [x1, w0, uxtw #1]
    2548:	adr	x1, 2554 <xz_dec_run+0x68>
    254c:	add	x0, x1, w0, sxth #2
    2550:	br	x0
    2554:	add	x24, x21, #0x8
    2558:	add	x27, x19, #0x100
    255c:	mov	w25, #0x2                   	// #2
    2560:	mov	w26, #0x1                   	// #1
    2564:	ldr	x1, [x21]
    2568:	mov	x2, x24
    256c:	ldr	x3, [x21, #16]
    2570:	mov	x0, x19
    2574:	bl	2138 <xz_dec_lzma2_end+0x30>
    2578:	mov	w20, w0
    257c:	cmp	w0, #0x1
    2580:	b.eq	2b64 <xz_dec_run+0x678>  // b.none
    2584:	mov	x1, x21
    2588:	mov	x0, x19
    258c:	bl	21b0 <xz_dec_lzma2_end+0xa8>
    2590:	b	2630 <xz_dec_run+0x144>
    2594:	mov	x1, x21
    2598:	mov	x0, x19
    259c:	bl	23c4 <xz_dec_lzma2_end+0x2bc>
    25a0:	cbnz	w0, 25ac <xz_dec_run+0xc0>
    25a4:	mov	w20, #0x0                   	// #0
    25a8:	b	2630 <xz_dec_run+0x144>
    25ac:	adrp	x0, 0 <grub_mod_init-0x518>
    25b0:	mov	x2, #0x6                   	// #6
    25b4:	ldr	x20, [x0]
    25b8:	add	x0, x19, #0x128
    25bc:	mov	x1, x20
    25c0:	bl	0 <grub_memcmp>
    25c4:	cbnz	w0, 2db0 <xz_dec_run+0x8c4>
    25c8:	adrp	x0, 0 <grub_mod_init-0x518>
    25cc:	ldr	x0, [x0]
    25d0:	bl	0 <grub_crypto_lookup_md_by_name>
    25d4:	str	x0, [x19, #128]
    25d8:	cbz	x0, 2624 <xz_dec_run+0x138>
    25dc:	ldr	x1, [x0, #32]
    25e0:	cmp	x1, #0x4
    25e4:	b.ne	261c <xz_dec_run+0x130>  // b.any
    25e8:	add	x2, x19, #0x12e
    25ec:	add	x1, sp, #0x68
    25f0:	mov	x3, #0x2                   	// #2
    25f4:	bl	0 <grub_crypto_hash>
    25f8:	ldr	w0, [x19, #304]
    25fc:	add	x1, sp, #0x68
    2600:	rev	w0, w0
    2604:	str	w0, [sp, #96]
    2608:	ldr	x0, [x19, #128]
    260c:	ldr	x2, [x0, #32]
    2610:	add	x0, sp, #0x60
    2614:	bl	0 <grub_memcmp>
    2618:	cbz	w0, 2624 <xz_dec_run+0x138>
    261c:	mov	w20, #0x5                   	// #5
    2620:	b	2630 <xz_dec_run+0x144>
    2624:	ldrb	w0, [x19, #302]
    2628:	cbz	w0, 2658 <xz_dec_run+0x16c>
    262c:	mov	w20, #0x4                   	// #4
    2630:	ldr	w0, [x19, #152]
    2634:	cbz	w0, 2de0 <xz_dec_run+0x8f4>
    2638:	cbnz	w20, 2db8 <xz_dec_run+0x8cc>
    263c:	ldp	x1, x0, [x21, #8]
    2640:	cmp	x1, x0
    2644:	cset	w0, ne  // ne = any
    2648:	add	w20, w0, #0x5
    264c:	str	x22, [x21, #8]
    2650:	str	x23, [x21, #32]
    2654:	b	2dc0 <xz_dec_run+0x8d4>
    2658:	ldrb	w0, [x19, #303]
    265c:	cmp	w0, #0xa
    2660:	b.hi	262c <xz_dec_run+0x140>  // b.pmore
    2664:	add	x1, x20, w0, sxtw #4
    2668:	ldr	x1, [x1, #8]
    266c:	cbnz	x1, 2674 <xz_dec_run+0x188>
    2670:	cbnz	w0, 262c <xz_dec_run+0x140>
    2674:	strb	w0, [x19, #136]
    2678:	ldr	x0, [x19, #128]
    267c:	cbz	x0, 269c <xz_dec_run+0x1b0>
    2680:	ldr	x0, [x0, #72]
    2684:	bl	0 <grub_malloc>
    2688:	str	x0, [x19, #112]
    268c:	cbz	x0, 26f0 <xz_dec_run+0x204>
    2690:	ldr	x1, [x19, #128]
    2694:	ldr	x1, [x1, #40]
    2698:	blr	x1
    269c:	ldrb	w0, [x19, #303]
    26a0:	cbz	w0, 27a4 <xz_dec_run+0x2b8>
    26a4:	add	x20, x20, #0x8
    26a8:	sbfiz	x1, x0, #4, #32
    26ac:	add	x0, x20, w0, sxtw #4
    26b0:	ldr	x0, [x0, #8]
    26b4:	str	x0, [x19, #144]
    26b8:	ldr	x0, [x20, x1]
    26bc:	bl	0 <grub_crypto_lookup_md_by_name>
    26c0:	str	x0, [x19, #120]
    26c4:	cbz	x0, 2768 <xz_dec_run+0x27c>
    26c8:	ldr	x2, [x0, #32]
    26cc:	ldr	x1, [x19, #144]
    26d0:	cmp	x2, x1
    26d4:	b.ne	262c <xz_dec_run+0x140>  // b.any
    26d8:	ldr	x0, [x0, #72]
    26dc:	bl	0 <grub_malloc>
    26e0:	str	x0, [x19, #104]
    26e4:	cbnz	x0, 26f8 <xz_dec_run+0x20c>
    26e8:	ldr	x0, [x19, #112]
    26ec:	bl	0 <grub_free>
    26f0:	mov	w20, #0x2                   	// #2
    26f4:	b	2630 <xz_dec_run+0x144>
    26f8:	ldr	x0, [x19, #120]
    26fc:	ldr	x0, [x0, #72]
    2700:	bl	0 <grub_malloc>
    2704:	str	x0, [x19, #272]
    2708:	cbnz	x0, 2718 <xz_dec_run+0x22c>
    270c:	ldr	x0, [x19, #104]
    2710:	bl	0 <grub_free>
    2714:	b	26e8 <xz_dec_run+0x1fc>
    2718:	ldr	x0, [x19, #120]
    271c:	ldr	x0, [x0, #72]
    2720:	bl	0 <grub_malloc>
    2724:	str	x0, [x19, #224]
    2728:	cbnz	x0, 2738 <xz_dec_run+0x24c>
    272c:	ldr	x0, [x19, #272]
    2730:	bl	0 <grub_free>
    2734:	b	270c <xz_dec_run+0x220>
    2738:	ldr	x0, [x19, #120]
    273c:	ldr	x1, [x0, #40]
    2740:	ldr	x0, [x19, #104]
    2744:	blr	x1
    2748:	ldr	x0, [x19, #120]
    274c:	ldr	x1, [x0, #40]
    2750:	ldr	x0, [x19, #272]
    2754:	blr	x1
    2758:	ldr	x0, [x19, #120]
    275c:	ldr	x1, [x0, #40]
    2760:	ldr	x0, [x19, #224]
    2764:	blr	x1
    2768:	mov	w0, #0x1                   	// #1
    276c:	str	w0, [x19]
    2770:	str	wzr, [x19, #96]
    2774:	ldp	x1, x0, [x21, #8]
    2778:	cmp	x1, x0
    277c:	b.eq	25a4 <xz_dec_run+0xb8>  // b.none
    2780:	ldr	x0, [x21]
    2784:	ldrb	w0, [x0, x1]
    2788:	cbnz	w0, 27b0 <xz_dec_run+0x2c4>
    278c:	add	x0, x1, #0x1
    2790:	str	x0, [x21, #8]
    2794:	mov	w0, #0x6                   	// #6
    2798:	str	w0, [x19]
    279c:	str	x1, [x19, #16]
    27a0:	b	2534 <xz_dec_run+0x48>
    27a4:	str	xzr, [x19, #120]
    27a8:	str	xzr, [x19, #144]
    27ac:	b	2768 <xz_dec_run+0x27c>
    27b0:	add	w0, w0, #0x1
    27b4:	lsl	w0, w0, #2
    27b8:	str	w0, [x19, #176]
    27bc:	stp	xzr, x0, [x19, #280]
    27c0:	mov	w0, #0x2                   	// #2
    27c4:	str	w0, [x19]
    27c8:	mov	x1, x21
    27cc:	mov	x0, x19
    27d0:	bl	23c4 <xz_dec_lzma2_end+0x2bc>
    27d4:	cbz	w0, 25a4 <xz_dec_run+0xb8>
    27d8:	ldr	x3, [x19, #288]
    27dc:	ldr	x0, [x19, #128]
    27e0:	sub	x3, x3, #0x4
    27e4:	str	x3, [x19, #288]
    27e8:	cbz	x0, 2844 <xz_dec_run+0x358>
    27ec:	ldr	x1, [x0, #32]
    27f0:	cmp	x1, #0x4
    27f4:	b.ne	261c <xz_dec_run+0x130>  // b.any
    27f8:	add	x2, x19, #0x128
    27fc:	add	x1, sp, #0x68
    2800:	bl	0 <grub_crypto_hash>
    2804:	ldr	x0, [x19, #288]
    2808:	add	x0, x19, x0
    280c:	ldrb	w1, [x0, #296]
    2810:	strb	w1, [sp, #99]
    2814:	ldrb	w1, [x0, #297]
    2818:	strb	w1, [sp, #98]
    281c:	ldrb	w1, [x0, #298]
    2820:	ldrb	w0, [x0, #299]
    2824:	strb	w0, [sp, #96]
    2828:	ldr	x0, [x19, #128]
    282c:	strb	w1, [sp, #97]
    2830:	add	x1, sp, #0x68
    2834:	ldr	x2, [x0, #32]
    2838:	add	x0, sp, #0x60
    283c:	bl	0 <grub_memcmp>
    2840:	cbnz	w0, 261c <xz_dec_run+0x130>
    2844:	mov	x0, #0x2                   	// #2
    2848:	str	x0, [x19, #280]
    284c:	ldrb	w0, [x19, #297]
    2850:	tst	w0, #0x3e
    2854:	b.ne	262c <xz_dec_run+0x140>  // b.any
    2858:	tbz	w0, #6, 2ab8 <xz_dec_run+0x5cc>
    285c:	ldr	x3, [x19, #288]
    2860:	add	x2, x19, #0x118
    2864:	add	x1, x19, #0x128
    2868:	mov	x0, x19
    286c:	bl	2138 <xz_dec_lzma2_end+0x30>
    2870:	cmp	w0, #0x1
    2874:	b.ne	261c <xz_dec_run+0x130>  // b.any
    2878:	ldr	x0, [x19, #8]
    287c:	str	x0, [x19, #160]
    2880:	ldrsb	w0, [x19, #297]
    2884:	tbz	w0, #31, 2ac0 <xz_dec_run+0x5d4>
    2888:	ldr	x3, [x19, #288]
    288c:	add	x2, x19, #0x118
    2890:	add	x1, x19, #0x128
    2894:	mov	x0, x19
    2898:	bl	2138 <xz_dec_lzma2_end+0x30>
    289c:	cmp	w0, #0x1
    28a0:	b.ne	261c <xz_dec_run+0x130>  // b.any
    28a4:	ldr	x0, [x19, #8]
    28a8:	str	x0, [x19, #168]
    28ac:	ldrb	w0, [x19, #297]
    28b0:	and	w0, w0, #0x1
    28b4:	str	w0, [x19, #1336]
    28b8:	cbnz	w0, 2ac8 <xz_dec_run+0x5dc>
    28bc:	ldp	x0, x3, [x19, #280]
    28c0:	sub	x1, x3, x0
    28c4:	cmp	x1, #0x1
    28c8:	b.ls	261c <xz_dec_run+0x130>  // b.plast
    28cc:	add	x1, x19, x0
    28d0:	add	x2, x0, #0x1
    28d4:	str	x2, [x19, #280]
    28d8:	ldrb	w1, [x1, #296]
    28dc:	cmp	w1, #0x21
    28e0:	b.ne	262c <xz_dec_run+0x140>  // b.any
    28e4:	add	x2, x19, x2
    28e8:	add	x1, x0, #0x2
    28ec:	str	x1, [x19, #280]
    28f0:	ldrb	w2, [x2, #296]
    28f4:	cmp	w2, #0x1
    28f8:	b.ne	262c <xz_dec_run+0x140>  // b.any
    28fc:	cmp	x3, x1
    2900:	b.eq	261c <xz_dec_run+0x130>  // b.none
    2904:	add	x1, x19, x1
    2908:	add	x0, x0, #0x3
    290c:	str	x0, [x19, #280]
    2910:	ldr	x0, [x19, #1320]
    2914:	ldrb	w1, [x1, #296]
    2918:	bl	2070 <xz_dec_lzma2_reset>
    291c:	mov	w20, w0
    2920:	cbnz	w0, 2630 <xz_dec_run+0x144>
    2924:	ldr	x1, [x19, #288]
    2928:	ldr	x0, [x19, #280]
    292c:	cmp	x0, x1
    2930:	b.cc	2b14 <xz_dec_run+0x628>  // b.lo, b.ul, b.last
    2934:	mov	w0, #0x3                   	// #3
    2938:	str	w0, [x19]
    293c:	stp	xzr, xzr, [x19, #184]
    2940:	str	xzr, [x19, #280]
    2944:	ldr	w1, [x19, #1336]
    2948:	ldr	x0, [x21, #8]
    294c:	str	x0, [x19, #16]
    2950:	ldr	x0, [x21, #32]
    2954:	str	x0, [x19, #24]
    2958:	ldr	x0, [x19, #1320]
    295c:	cbz	w1, 2b2c <xz_dec_run+0x640>
    2960:	mov	x1, x0
    2964:	mov	x2, x21
    2968:	ldr	x0, [x19, #1328]
    296c:	bl	bc4 <xz_dec_bcj_run>
    2970:	mov	w20, w0
    2974:	ldp	x0, x3, [x19, #184]
    2978:	ldr	x1, [x21, #8]
    297c:	ldr	x2, [x21, #32]
    2980:	add	x0, x0, x1
    2984:	ldr	x1, [x19, #16]
    2988:	ldr	x4, [x19, #160]
    298c:	sub	x0, x0, x1
    2990:	ldr	x1, [x19, #24]
    2994:	cmp	x0, x4
    2998:	sub	x2, x2, x1
    299c:	add	x3, x2, x3
    29a0:	stp	x0, x3, [x19, #184]
    29a4:	b.hi	261c <xz_dec_run+0x130>  // b.pmore
    29a8:	ldr	x0, [x19, #168]
    29ac:	cmp	x3, x0
    29b0:	b.hi	261c <xz_dec_run+0x130>  // b.pmore
    29b4:	ldr	x0, [x19, #120]
    29b8:	cbz	x0, 29d0 <xz_dec_run+0x4e4>
    29bc:	ldr	x4, [x21, #24]
    29c0:	ldr	x3, [x0, #48]
    29c4:	add	x1, x4, x1
    29c8:	ldr	x0, [x19, #104]
    29cc:	blr	x3
    29d0:	ldr	x3, [x19, #128]
    29d4:	cbz	x3, 29f4 <xz_dec_run+0x508>
    29d8:	ldp	x1, x2, [x21, #24]
    29dc:	ldr	x0, [x19, #24]
    29e0:	ldr	x3, [x3, #48]
    29e4:	sub	x2, x2, x0
    29e8:	add	x1, x1, x0
    29ec:	ldr	x0, [x19, #112]
    29f0:	blr	x3
    29f4:	cmp	w20, #0x1
    29f8:	b.ne	2630 <xz_dec_run+0x144>  // b.any
    29fc:	ldr	x0, [x19, #160]
    2a00:	cmn	x0, #0x1
    2a04:	b.eq	2a14 <xz_dec_run+0x528>  // b.none
    2a08:	ldr	x1, [x19, #184]
    2a0c:	cmp	x0, x1
    2a10:	b.ne	261c <xz_dec_run+0x130>  // b.any
    2a14:	ldr	x0, [x19, #168]
    2a18:	ldr	x2, [x19, #192]
    2a1c:	cmn	x0, #0x1
    2a20:	b.eq	2a2c <xz_dec_run+0x540>  // b.none
    2a24:	cmp	x0, x2
    2a28:	b.ne	261c <xz_dec_run+0x130>  // b.any
    2a2c:	ldr	x1, [x19, #184]
    2a30:	ldr	x0, [x19, #208]
    2a34:	ldr	x3, [x19, #144]
    2a38:	add	x0, x0, x1
    2a3c:	ldr	w1, [x19, #176]
    2a40:	add	x1, x1, x3
    2a44:	add	x0, x0, x1
    2a48:	str	x0, [x19, #208]
    2a4c:	ldr	x0, [x19, #216]
    2a50:	add	x0, x0, x2
    2a54:	str	x0, [x19, #216]
    2a58:	ldr	x0, [x19, #120]
    2a5c:	cbz	x0, 2a74 <xz_dec_run+0x588>
    2a60:	ldr	x3, [x0, #48]
    2a64:	add	x1, x19, #0xd0
    2a68:	ldr	x0, [x19, #224]
    2a6c:	mov	x2, #0x10                  	// #16
    2a70:	blr	x3
    2a74:	ldr	x0, [x19, #200]
    2a78:	str	w26, [x19]
    2a7c:	add	x0, x0, #0x1
    2a80:	str	x0, [x19, #200]
    2a84:	ldr	x0, [x19, #184]
    2a88:	tst	x0, #0x3
    2a8c:	b.ne	2b38 <xz_dec_run+0x64c>  // b.any
    2a90:	str	w25, [x19]
    2a94:	mov	x1, x21
    2a98:	mov	x0, x19
    2a9c:	mov	w2, #0x0                   	// #0
    2aa0:	bl	2244 <xz_dec_lzma2_end+0x13c>
    2aa4:	mov	w20, w0
    2aa8:	cmp	w0, #0x1
    2aac:	b.ne	2630 <xz_dec_run+0x144>  // b.any
    2ab0:	str	w0, [x19]
    2ab4:	b	2534 <xz_dec_run+0x48>
    2ab8:	mov	x0, #0xffffffffffffffff    	// #-1
    2abc:	b	287c <xz_dec_run+0x390>
    2ac0:	mov	x0, #0xffffffffffffffff    	// #-1
    2ac4:	b	28a8 <xz_dec_run+0x3bc>
    2ac8:	ldp	x0, x1, [x19, #280]
    2acc:	sub	x1, x1, x0
    2ad0:	cmp	x1, #0x1
    2ad4:	b.ls	262c <xz_dec_run+0x140>  // b.plast
    2ad8:	add	x1, x0, #0x1
    2adc:	add	x0, x19, x0
    2ae0:	str	x1, [x19, #280]
    2ae4:	ldrb	w1, [x0, #296]
    2ae8:	ldr	x0, [x19, #1328]
    2aec:	bl	d94 <xz_dec_bcj_reset>
    2af0:	mov	w20, w0
    2af4:	cbnz	w0, 2630 <xz_dec_run+0x144>
    2af8:	ldr	x0, [x19, #280]
    2afc:	add	x1, x0, #0x1
    2b00:	add	x0, x19, x0
    2b04:	str	x1, [x19, #280]
    2b08:	ldrb	w0, [x0, #296]
    2b0c:	cbz	w0, 28bc <xz_dec_run+0x3d0>
    2b10:	b	262c <xz_dec_run+0x140>
    2b14:	add	x2, x0, #0x1
    2b18:	add	x0, x19, x0
    2b1c:	str	x2, [x19, #280]
    2b20:	ldrb	w0, [x0, #296]
    2b24:	cbz	w0, 2928 <xz_dec_run+0x43c>
    2b28:	b	262c <xz_dec_run+0x140>
    2b2c:	mov	x1, x21
    2b30:	bl	1944 <xz_dec_lzma2_run>
    2b34:	b	2970 <xz_dec_run+0x484>
    2b38:	ldp	x1, x2, [x21, #8]
    2b3c:	cmp	x1, x2
    2b40:	b.eq	25a4 <xz_dec_run+0xb8>  // b.none
    2b44:	ldr	x2, [x21]
    2b48:	add	x3, x1, #0x1
    2b4c:	str	x3, [x21, #8]
    2b50:	ldrb	w1, [x2, x1]
    2b54:	cbnz	w1, 261c <xz_dec_run+0x130>
    2b58:	add	x0, x0, #0x1
    2b5c:	str	x0, [x19, #184]
    2b60:	b	2a84 <xz_dec_run+0x598>
    2b64:	ldr	w0, [x19, #232]
    2b68:	cmp	w0, #0x1
    2b6c:	b.eq	2bb0 <xz_dec_run+0x6c4>  // b.none
    2b70:	cmp	w0, #0x2
    2b74:	b.eq	2bc8 <xz_dec_run+0x6dc>  // b.none
    2b78:	cbnz	w0, 2b94 <xz_dec_run+0x6a8>
    2b7c:	ldr	x0, [x19, #8]
    2b80:	str	x0, [x19, #248]
    2b84:	ldr	x1, [x19, #200]
    2b88:	cmp	x0, x1
    2b8c:	b.ne	261c <xz_dec_run+0x130>  // b.any
    2b90:	str	w20, [x19, #232]
    2b94:	ldr	x0, [x19, #248]
    2b98:	cbnz	x0, 2564 <xz_dec_run+0x78>
    2b9c:	mov	w0, #0x7                   	// #7
    2ba0:	str	w0, [x19]
    2ba4:	ldr	x2, [x19, #16]
    2ba8:	ldr	x3, [x19, #240]
    2bac:	b	2c38 <xz_dec_run+0x74c>
    2bb0:	ldr	x1, [x19, #8]
    2bb4:	str	w25, [x19, #232]
    2bb8:	ldr	x0, [x19, #256]
    2bbc:	add	x0, x0, x1
    2bc0:	str	x0, [x19, #256]
    2bc4:	b	2b94 <xz_dec_run+0x6a8>
    2bc8:	ldr	x1, [x19, #8]
    2bcc:	ldr	x0, [x19, #264]
    2bd0:	add	x0, x0, x1
    2bd4:	str	x0, [x19, #264]
    2bd8:	ldr	x0, [x19, #120]
    2bdc:	cbz	x0, 2bf4 <xz_dec_run+0x708>
    2be0:	ldr	x3, [x0, #48]
    2be4:	mov	x1, x27
    2be8:	ldr	x0, [x19, #272]
    2bec:	mov	x2, #0x10                  	// #16
    2bf0:	blr	x3
    2bf4:	ldr	x0, [x19, #248]
    2bf8:	str	w26, [x19, #232]
    2bfc:	sub	x0, x0, #0x1
    2c00:	str	x0, [x19, #248]
    2c04:	b	2b94 <xz_dec_run+0x6a8>
    2c08:	ldr	x1, [x21, #16]
    2c0c:	cmp	x1, x0
    2c10:	b.ne	2c24 <xz_dec_run+0x738>  // b.any
    2c14:	mov	x1, x21
    2c18:	mov	x0, x19
    2c1c:	bl	21b0 <xz_dec_lzma2_end+0xa8>
    2c20:	b	25a4 <xz_dec_run+0xb8>
    2c24:	ldr	x1, [x21]
    2c28:	add	x4, x0, #0x1
    2c2c:	str	x4, [x21, #8]
    2c30:	ldrb	w0, [x1, x0]
    2c34:	cbnz	w0, 261c <xz_dec_run+0x130>
    2c38:	ldr	x0, [x21, #8]
    2c3c:	add	x1, x0, x3
    2c40:	sub	x1, x1, x2
    2c44:	tst	x1, #0x3
    2c48:	b.ne	2c08 <xz_dec_run+0x71c>  // b.any
    2c4c:	mov	x0, x19
    2c50:	mov	x1, x21
    2c54:	bl	21b0 <xz_dec_lzma2_end+0xa8>
    2c58:	ldr	x0, [x19, #120]
    2c5c:	cbnz	x0, 2d34 <xz_dec_run+0x848>
    2c60:	mov	w0, #0x8                   	// #8
    2c64:	str	w0, [x19]
    2c68:	mov	x1, x21
    2c6c:	mov	x0, x19
    2c70:	mov	w2, #0x1                   	// #1
    2c74:	bl	2244 <xz_dec_lzma2_end+0x13c>
    2c78:	mov	w20, w0
    2c7c:	cmp	w0, #0x1
    2c80:	b.ne	2630 <xz_dec_run+0x144>  // b.any
    2c84:	mov	x0, #0xc                   	// #12
    2c88:	str	x0, [x19, #288]
    2c8c:	mov	w0, #0x9                   	// #9
    2c90:	str	w0, [x19]
    2c94:	mov	x1, x21
    2c98:	mov	x0, x19
    2c9c:	bl	23c4 <xz_dec_lzma2_end+0x2bc>
    2ca0:	cbz	w0, 25a4 <xz_dec_run+0xb8>
    2ca4:	adrp	x0, 0 <grub_mod_init-0x518>
    2ca8:	mov	x2, #0x2                   	// #2
    2cac:	ldr	x1, [x0]
    2cb0:	add	x0, x19, #0x132
    2cb4:	bl	0 <grub_memcmp>
    2cb8:	cbnz	w0, 261c <xz_dec_run+0x130>
    2cbc:	ldr	x0, [x19, #128]
    2cc0:	cbz	x0, 2d04 <xz_dec_run+0x818>
    2cc4:	ldr	x1, [x0, #32]
    2cc8:	cmp	x1, #0x4
    2ccc:	b.ne	261c <xz_dec_run+0x130>  // b.any
    2cd0:	add	x2, x19, #0x12c
    2cd4:	add	x1, sp, #0x68
    2cd8:	mov	x3, #0x6                   	// #6
    2cdc:	bl	0 <grub_crypto_hash>
    2ce0:	ldr	w0, [x19, #296]
    2ce4:	add	x1, sp, #0x68
    2ce8:	rev	w0, w0
    2cec:	str	w0, [sp, #96]
    2cf0:	ldr	x0, [x19, #128]
    2cf4:	ldr	x2, [x0, #32]
    2cf8:	add	x0, sp, #0x60
    2cfc:	bl	0 <grub_memcmp>
    2d00:	cbnz	w0, 261c <xz_dec_run+0x130>
    2d04:	ldr	x1, [x19, #240]
    2d08:	ldr	w0, [x19, #300]
    2d0c:	cmp	x0, x1, lsr #2
    2d10:	b.ne	261c <xz_dec_run+0x130>  // b.any
    2d14:	ldrb	w0, [x19, #304]
    2d18:	cbnz	w0, 261c <xz_dec_run+0x130>
    2d1c:	ldrb	w1, [x19, #305]
    2d20:	ldrb	w0, [x19, #136]
    2d24:	cmp	w1, w0
    2d28:	b.ne	261c <xz_dec_run+0x130>  // b.any
    2d2c:	mov	w20, #0x1                   	// #1
    2d30:	b	2630 <xz_dec_run+0x144>
    2d34:	ldr	x1, [x0, #56]
    2d38:	ldr	x0, [x19, #224]
    2d3c:	blr	x1
    2d40:	ldr	x0, [x19, #120]
    2d44:	ldr	x1, [x0, #56]
    2d48:	ldr	x0, [x19, #272]
    2d4c:	blr	x1
    2d50:	ldr	x1, [x19, #208]
    2d54:	ldr	x0, [x19, #256]
    2d58:	cmp	x1, x0
    2d5c:	b.ne	261c <xz_dec_run+0x130>  // b.any
    2d60:	ldr	x1, [x19, #216]
    2d64:	ldr	x0, [x19, #264]
    2d68:	cmp	x1, x0
    2d6c:	b.ne	261c <xz_dec_run+0x130>  // b.any
    2d70:	ldr	x0, [x19, #120]
    2d74:	ldr	x1, [x0, #64]
    2d78:	ldr	x0, [x19, #224]
    2d7c:	blr	x1
    2d80:	mov	x20, x0
    2d84:	ldr	x0, [x19, #120]
    2d88:	ldr	x1, [x0, #64]
    2d8c:	ldr	x0, [x19, #272]
    2d90:	blr	x1
    2d94:	ldr	x1, [x19, #120]
    2d98:	ldr	x2, [x1, #32]
    2d9c:	mov	x1, x0
    2da0:	mov	x0, x20
    2da4:	bl	0 <grub_memcmp>
    2da8:	cbz	w0, 2c60 <xz_dec_run+0x774>
    2dac:	b	261c <xz_dec_run+0x130>
    2db0:	mov	w20, #0x3                   	// #3
    2db4:	b	2630 <xz_dec_run+0x144>
    2db8:	cmp	w20, #0x1
    2dbc:	b.ne	264c <xz_dec_run+0x160>  // b.any
    2dc0:	mov	w0, w20
    2dc4:	ldp	x19, x20, [sp, #16]
    2dc8:	ldp	x21, x22, [sp, #32]
    2dcc:	ldp	x23, x24, [sp, #48]
    2dd0:	ldp	x25, x26, [sp, #64]
    2dd4:	ldr	x27, [sp, #80]
    2dd8:	ldp	x29, x30, [sp], #112
    2ddc:	ret
    2de0:	cbnz	w20, 2e18 <xz_dec_run+0x92c>
    2de4:	ldr	x0, [x21, #8]
    2de8:	cmp	x0, x22
    2dec:	b.ne	2e18 <xz_dec_run+0x92c>  // b.any
    2df0:	ldr	x0, [x21, #32]
    2df4:	cmp	x0, x23
    2df8:	b.ne	2e18 <xz_dec_run+0x92c>  // b.any
    2dfc:	ldr	w20, [x19, #156]
    2e00:	mov	w0, #0x6                   	// #6
    2e04:	cmp	w20, #0x0
    2e08:	csel	w20, w20, w0, eq  // eq = none
    2e0c:	mov	w0, #0x1                   	// #1
    2e10:	str	w0, [x19, #156]
    2e14:	b	2dc0 <xz_dec_run+0x8d4>
    2e18:	str	wzr, [x19, #156]
    2e1c:	b	2dc0 <xz_dec_run+0x8d4>
	...

0000000000002e40 <xz_dec_init>:
    2e40:	stp	x29, x30, [sp, #-32]!
    2e44:	mov	x29, sp
    2e48:	stp	x19, x20, [sp, #16]
    2e4c:	mov	w20, w0
    2e50:	mov	x0, #0x540                 	// #1344
    2e54:	bl	0 <grub_malloc>
    2e58:	mov	x19, x0
    2e5c:	cbz	x0, 2eb4 <xz_dec_init+0x74>
    2e60:	mov	x2, #0x540                 	// #1344
    2e64:	mov	w1, #0x0                   	// #0
    2e68:	bl	0 <grub_memset>
    2e6c:	cmp	w20, #0x0
    2e70:	cset	w0, eq  // eq = none
    2e74:	str	w0, [x19, #152]
    2e78:	bl	d68 <xz_dec_bcj_create>
    2e7c:	str	x0, [x19, #1328]
    2e80:	cbz	x0, 2e9c <xz_dec_init+0x5c>
    2e84:	mov	w0, w20
    2e88:	bl	2008 <xz_dec_lzma2_create>
    2e8c:	str	x0, [x19, #1320]
    2e90:	cbnz	x0, 2eac <xz_dec_init+0x6c>
    2e94:	ldr	x0, [x19, #1328]
    2e98:	bl	0 <grub_free>
    2e9c:	mov	x0, x19
    2ea0:	mov	x19, #0x0                   	// #0
    2ea4:	bl	0 <grub_free>
    2ea8:	b	2eb4 <xz_dec_init+0x74>
    2eac:	mov	x0, x19
    2eb0:	bl	2458 <xz_dec_reset>
    2eb4:	mov	x0, x19
    2eb8:	ldp	x19, x20, [sp, #16]
    2ebc:	ldp	x29, x30, [sp], #32
    2ec0:	ret

0000000000002ec4 <xz_dec_end>:
    2ec4:	cbz	x0, 2f18 <xz_dec_end+0x54>
    2ec8:	stp	x29, x30, [sp, #-32]!
    2ecc:	mov	x29, sp
    2ed0:	str	x19, [sp, #16]
    2ed4:	mov	x19, x0
    2ed8:	ldr	x0, [x0, #1320]
    2edc:	bl	2108 <xz_dec_lzma2_end>
    2ee0:	ldr	x0, [x19, #272]
    2ee4:	bl	0 <grub_free>
    2ee8:	ldr	x0, [x19, #224]
    2eec:	bl	0 <grub_free>
    2ef0:	ldr	x0, [x19, #104]
    2ef4:	bl	0 <grub_free>
    2ef8:	ldr	x0, [x19, #112]
    2efc:	bl	0 <grub_free>
    2f00:	ldr	x0, [x19, #1328]
    2f04:	bl	0 <grub_free>
    2f08:	mov	x0, x19
    2f0c:	ldr	x19, [sp, #16]
    2f10:	ldp	x29, x30, [sp], #32
    2f14:	b	0 <grub_free>
    2f18:	ret
